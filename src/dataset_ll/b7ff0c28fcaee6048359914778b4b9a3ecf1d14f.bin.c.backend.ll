source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r15 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208006381
@global_var_1001c00c.3 = global i32 0
@global_var_1001c01c.4 = local_unnamed_addr global i32* @global_var_1001c00c.3
@global_var_1001c1f8.6 = global i32 0
@global_var_10000314.7 = constant i32 1207995365
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c184.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_10000bdc.14 = constant i32 939524096
@global_var_10000f14.15 = constant i32 939524096
@global_var_1001c188.16 = local_unnamed_addr global i32 0
@global_var_10001aa0.17 = constant [3 x i8] c"8~\00"
@global_var_10001ab0.18 = constant [3 x i8] c"8~\00"
@global_var_10001ac0.19 = constant [3 x i8] c"8~\00"
@global_var_100026fc.20 = constant [3 x i8] c"8`\00"
@global_var_100027ec.21 = constant [3 x i8] c"9!\00"
@global_var_10002e78.22 = constant [3 x i8] c"8`\00"
@global_var_100034c0.23 = constant [3 x i8] c"8`\00"
@global_var_10004174.24 = constant i32 939524104
@global_var_100041a4.25 = constant i32 939524096
@global_var_1000459c.26 = constant [3 x i8] c"8`\00"
@global_var_100045a4.27 = constant [3 x i8] c"8`\00"
@global_var_100045ac.28 = constant [3 x i8] c"8`\00"
@global_var_100046ac.29 = constant [3 x i8] c"9@\00"
@global_var_1000b81c.30 = constant i32 788529152
@global_var_100049f4.31 = constant [3 x i8] c"8`\00"
@global_var_100049fc.32 = constant [3 x i8] c"8`\00"
@global_var_10004a04.33 = constant [3 x i8] c"8`\00"
@global_var_10004a0c.34 = constant [3 x i8] c"8`\00"
@global_var_10004a78.35 = constant [3 x i8] c"8`\00"
@global_var_10004a80.36 = constant [3 x i8] c"8`\00"
@global_var_10004a88.37 = constant [3 x i8] c"8`\00"
@global_var_1001c194.38 = local_unnamed_addr global i32 0
@global_var_10004ba4.39 = constant i32 939524096
@global_var_1001c190.40 = local_unnamed_addr global i32 0
@global_var_1001c18c.41 = local_unnamed_addr global i32 0
@global_var_10004bc8.42 = constant [3 x i8] c"8`\00"
@global_var_10004c48.43 = constant [3 x i8] c"8`\00"
@global_var_10004c50.44 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.45 = constant i32 1207977657
@global_var_10004cc8.46 = constant [3 x i8] c"8`\00"
@global_var_10004ce4.47 = constant [3 x i8] c"8`\00"
@global_var_10004d0c.48 = constant [3 x i8] c"8`\00"
@global_var_10004d14.49 = constant i32 939524118
@global_var_10004d78.50 = constant [3 x i8] c"8`\00"
@global_var_10004dbc.51 = constant [3 x i8] c"8`\00"
@global_var_10004df0.52 = constant [3 x i8] c"8`\00"
@global_var_10004e24.53 = constant [3 x i8] c"8`\00"
@global_var_10004e58.54 = constant [3 x i8] c"8`\00"
@global_var_10004f14.55 = constant [3 x i8] c"8`\00"
@global_var_10004fa4.56 = constant [3 x i8] c"8`\00"
@global_var_10004fac.57 = constant [3 x i8] c"8`\00"
@global_var_1000501c.58 = constant [3 x i8] c"8`\00"
@global_var_10005024.59 = constant i32 1207975565
@global_var_100050d4.60 = constant [3 x i8] c"8`\00"
@global_var_100051a8.61 = constant [3 x i8] c"8`\00"
@global_var_100051e0.62 = constant [3 x i8] c"8`\00"
@global_var_10005240.63 = constant [3 x i8] c"8`\00"
@global_var_1001c168.64 = local_unnamed_addr global i32 268470628
@global_var_1001c160.65 = local_unnamed_addr global i32 -1
@global_var_10005408.67 = constant [3 x i8] c"8`\00"
@global_var_1000b820.68 = constant [22 x i8] c"indiatechsupport.club\00"
@global_var_1000b838.69 = constant [15 x i8] c"188.166.125.59\00"
@global_var_1001c260.70 = global i32 0
@global_var_1001c264.71 = local_unnamed_addr global i32 0
@global_var_100054cc.72 = constant [3 x i8] c"8`\00"
@global_var_1001c262.73 = local_unnamed_addr global i32 0
@global_var_1001c198.74 = local_unnamed_addr global i32 0
@global_var_10005584.75 = constant [3 x i8] c"8`\00"
@global_var_100055e0.76 = constant [3 x i8] c"8`\00"
@global_var_10005618.77 = constant [3 x i8] c"8`\00"
@global_var_10005620.78 = constant [3 x i8] c"8`\00"
@global_var_100056e0.79 = constant i32 1207972485
@global_var_1000571c.80 = constant i32 1207961245
@global_var_10005738.81 = constant [3 x i8] c";a\00"
@global_var_1000579c.82 = constant i32 1207961037
@global_var_100057f0.83 = constant [3 x i8] c"8`\00"
@global_var_1000b848.84 = constant i32 167772160
@global_var_10005828.85 = constant [3 x i8] c"8`\00"
@global_var_1000583c.86 = constant i32 1207973421
@global_var_100058e0.87 = constant [3 x i8] c"8`\00"
@global_var_100058e8.88 = constant [3 x i8] c"8`\00"
@global_var_100058f0.89 = constant [3 x i8] c"8`\00"
@global_var_100058f8.90 = constant i32 989855744
@global_var_10005908.91 = constant [3 x i8] c";a\00"
@global_var_1001c164.92 = local_unnamed_addr global i32 -1
@global_var_10005a94.94 = constant i32 939589631
@global_var_10005b78.95 = constant i32 939589631
@global_var_10005c58.96 = constant i32 939589631
@global_var_10005c64.97 = constant i32 1006685388
@global_var_1000b84c.98 = constant i32 1
@global_var_10005d1c.99 = constant i32 939589631
@global_var_1001c21c.100 = local_unnamed_addr global i32 0
@global_var_1001c210.101 = local_unnamed_addr global i32 0
@global_var_1001c218.102 = local_unnamed_addr global i32 0
@global_var_1001c214.103 = local_unnamed_addr global i32 0
@global_var_100060f8.104 = constant [3 x i8] c"9a\00"
@global_var_10006164.105 = constant i32 939524096
@global_var_10006198.106 = constant i32 1006665728
@global_var_100061c4.107 = constant i32 939524098
@global_var_1000620c.108 = constant [3 x i8] c"8`\00"
@global_var_10006280.109 = constant i32 939524128
@global_var_10006324.110 = constant [3 x i8] c"8c\00"
@global_var_1001c1ac.111 = local_unnamed_addr global i32 0
@global_var_1001c1a0.112 = local_unnamed_addr global i32 0
@global_var_1001c1a4.113 = local_unnamed_addr global i32 0
@global_var_1001c1b8.115 = local_unnamed_addr global i32 0
@global_var_10006920.116 = constant [3 x i8] c"8`\00"
@global_var_1000693c.117 = constant i32 939524096
@global_var_1001c1b0.118 = local_unnamed_addr global i32 0
@global_var_1001c1b4.119 = local_unnamed_addr global i32 0
@global_var_1001c220.120 = global i32 0
@global_var_1001c234.121 = global i32 0
@global_var_1000b8dc.122 = constant i32 0
@global_var_1001c222.123 = local_unnamed_addr global i32 0
@global_var_1001c240.124 = local_unnamed_addr global i32 0
@global_var_1001c228.125 = local_unnamed_addr global i32 0
@global_var_1001c229.126 = local_unnamed_addr global i32 0
@global_var_1001c224.127 = local_unnamed_addr global i32 0
@global_var_1000b8d8.128 = constant [5 x i8] c"&;; \00"
@global_var_1000b870.130 = constant [8 x i8] c"0125!8 \00"
@global_var_1001c242.131 = local_unnamed_addr global i32 0
@global_var_1000b854.132 = constant [5 x i8] c"5:?;\00"
@global_var_1000b85c.133 = constant [9 x i8] c"<!: acam\00"
@global_var_1000b868.134 = constant [7 x i8] c" 18:1 \00"
@global_var_1000b878.135 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000b884.136 = constant [6 x i8] c"509=:\00"
@global_var_1000b8ac.137 = constant [6 x i8] c"efg`a\00"
@global_var_1000b88c.138 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000b894.139 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000b89c.140 = constant i32 1663122969
@global_var_1000b8b4.141 = constant [5 x i8] c"!'1&\00"
@global_var_1000b8bc.142 = constant i32 455883832
@global_var_1000b8c8.143 = constant i32 124138003
@global_var_1001c22c.144 = local_unnamed_addr global i32 0
@global_var_1001c230.145 = local_unnamed_addr global i32 0
@global_var_1001c22a.146 = local_unnamed_addr global i32 0
@global_var_1001c244.147 = local_unnamed_addr global i32 0
@global_var_1001c238.148 = local_unnamed_addr global i32 0
@global_var_10007214.150 = constant [3 x i8] c"8`\00"
@global_var_1000721c.151 = constant i32 939524096
@global_var_1000b8e0.152 = constant i32 -17980
@global_var_1001c270.172 = global i32 0
@global_var_1001c16c.173 = local_unnamed_addr global i32 -555811921
@global_var_1000b91c.174 = constant [3 x i8] c"Qm\00"
@global_var_100081e4.175 = constant [3 x i8] c"8`\00"
@global_var_1001c278.176 = local_unnamed_addr global i32 0
@global_var_1001c27c.177 = local_unnamed_addr global i32 0
@global_var_1000b920.178 = constant i32 1407844352
@global_var_10008208.179 = constant [3 x i8] c"8`\00"
@global_var_1001c280.180 = local_unnamed_addr global i32 0
@global_var_1001c284.181 = local_unnamed_addr global i32 0
@global_var_1000ba88.182 = constant i32 271921200
@global_var_1000822c.183 = constant i32 939524125
@global_var_1001c28c.184 = local_unnamed_addr global i32 0
@global_var_1001c288.185 = local_unnamed_addr global i32 0
@global_var_1000b924.186 = constant [7 x i8] c"'<188T\00"
@global_var_10008254.187 = constant [3 x i8] c"8`\00"
@global_var_1001c290.188 = local_unnamed_addr global i32 0
@global_var_1001c294.189 = local_unnamed_addr global i32 0
@global_var_1000b92c.190 = constant [8 x i8] c"1:5681T\00"
@global_var_1000827c.191 = constant [3 x i8] c"8`\00"
@global_var_1001c298.192 = local_unnamed_addr global i32 0
@global_var_1001c29c.193 = local_unnamed_addr global i32 0
@global_var_1000b934.194 = constant [8 x i8] c"'-' 19T\00"
@global_var_100082a0.195 = constant [3 x i8] c"8`\00"
@global_var_1001c2a0.196 = local_unnamed_addr global i32 0
@global_var_1001c2a4.197 = local_unnamed_addr global i32 0
@global_var_1000b93c.198 = constant [4 x i8] c"'<T\00"
@global_var_100082c4.199 = constant i32 939524099
@global_var_1001c2ac.200 = local_unnamed_addr global i32 0
@global_var_1001c2a8.201 = local_unnamed_addr global i32 0
@global_var_1000b940.202 = constant i32 2067152186
@global_var_100082ec.203 = constant [3 x i8] c"8`\00"
@global_var_1001c2b0.204 = local_unnamed_addr global i32 0
@global_var_1001c2b4.205 = local_unnamed_addr global i32 0
@global_var_1000b954.206 = constant i32 505087772
@global_var_10008310.207 = constant i32 939524120
@global_var_1001c2bc.208 = local_unnamed_addr global i32 0
@global_var_1001c2b8.209 = local_unnamed_addr global i32 0
@global_var_1000b970.210 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10008338.211 = constant i32 939524105
@global_var_1001c2c4.212 = local_unnamed_addr global i32 0
@global_var_1001c2c0.213 = local_unnamed_addr global i32 0
@global_var_1000b97c.214 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10008360.215 = constant [3 x i8] c"8`\00"
@global_var_1001c2c8.216 = local_unnamed_addr global i32 0
@global_var_1001c2cc.217 = local_unnamed_addr global i32 0
@global_var_1000b990.218 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_10008384.219 = constant i32 939524118
@global_var_1001c2d4.220 = local_unnamed_addr global i32 0
@global_var_1001c2d0.221 = local_unnamed_addr global i32 0
@global_var_1000b9a8.222 = constant [8 x i8] c"{$&;7{T\00"
@global_var_100083ac.223 = constant [3 x i8] c"8`\00"
@global_var_1001c2d8.224 = local_unnamed_addr global i32 0
@global_var_1001c2dc.225 = local_unnamed_addr global i32 0
@global_var_1000b9b0.226 = constant [6 x i8] c"{1,1T\00"
@global_var_100083d0.227 = constant [3 x i8] c"8`\00"
@global_var_1001c2e0.228 = local_unnamed_addr global i32 0
@global_var_1001c2e4.229 = local_unnamed_addr global i32 0
@global_var_1000b9b8.230 = constant [5 x i8] c"{20T\00"
@global_var_100083f4.231 = constant i32 939524100
@global_var_1001c2ec.232 = local_unnamed_addr global i32 0
@global_var_1001c2e8.233 = local_unnamed_addr global i32 0
@global_var_1000b9c0.234 = constant [7 x i8] c"{95$'T\00"
@global_var_1000841c.235 = constant [3 x i8] c"8`\00"
@global_var_1001c2f0.236 = local_unnamed_addr global i32 0
@global_var_1001c2f4.237 = local_unnamed_addr global i32 0
@global_var_1000b9c8.238 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008440.239 = constant [3 x i8] c"8`\00"
@global_var_1001c2f8.240 = local_unnamed_addr global i32 0
@global_var_1001c2fc.241 = local_unnamed_addr global i32 0
@global_var_1000b9d8.242 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10008464.243 = constant [3 x i8] c"8`\00"
@global_var_1001c358.244 = local_unnamed_addr global i32 0
@global_var_1001c35c.245 = local_unnamed_addr global i32 0
@global_var_1000b9e4.246 = constant [8 x i8] c"z5:=91T\00"
@global_var_10008488.247 = constant [3 x i8] c"8`\00"
@global_var_1001c360.248 = local_unnamed_addr global i32 0
@global_var_1001c364.249 = local_unnamed_addr global i32 0
@global_var_1000b9ec.250 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_100084ac.251 = constant [3 x i8] c"8`\00"
@global_var_1001c300.252 = local_unnamed_addr global i32 0
@global_var_1001c304.253 = local_unnamed_addr global i32 0
@global_var_1000ba00.254 = constant [9 x i8] c"5''#;&0T\00"
@global_var_100084d0.255 = constant [3 x i8] c"8`\00"
@global_var_1001c308.256 = local_unnamed_addr global i32 0
@global_var_1001c30c.257 = local_unnamed_addr global i32 0
@global_var_1000baa8.258 = constant i32 473889
@global_var_100084f4.259 = constant i32 939524117
@global_var_1001c314.260 = local_unnamed_addr global i32 0
@global_var_1001c310.261 = local_unnamed_addr global i32 0
@global_var_1000ba0c.262 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1000851c.263 = constant i32 939524113
@global_var_1001c31c.264 = local_unnamed_addr global i32 0
@global_var_1001c318.265 = local_unnamed_addr global i32 0
@global_var_1000ba20.266 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10008544.267 = constant i32 939524108
@global_var_1001c324.268 = local_unnamed_addr global i32 0
@global_var_1001c320.269 = local_unnamed_addr global i32 0
@global_var_1000ba30.270 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_1000856c.271 = constant [3 x i8] c"8`\00"
@global_var_1001c328.272 = local_unnamed_addr global i32 0
@global_var_1001c32c.273 = local_unnamed_addr global i32 0
@global_var_1000ba40.274 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10008590.275 = constant [3 x i8] c"8`\00"
@global_var_1001c330.276 = local_unnamed_addr global i32 0
@global_var_1001c334.277 = local_unnamed_addr global i32 0
@global_var_1000ba54.278 = constant [9 x i8] c"$662*7!E\00"
@global_var_100085b4.279 = constant [3 x i8] c"8`\00"
@global_var_1001c338.280 = local_unnamed_addr global i32 0
@global_var_1001c33c.281 = local_unnamed_addr global i32 0
@global_var_1000ba60.282 = constant [6 x i8] c";3=:T\00"
@global_var_100085d8.283 = constant [3 x i8] c"8`\00"
@global_var_1001c340.284 = local_unnamed_addr global i32 0
@global_var_1001c344.285 = local_unnamed_addr global i32 0
@global_var_1000ba68.286 = constant [7 x i8] c"1: 1&T\00"
@global_var_100085fc.287 = constant [3 x i8] c"8`\00"
@global_var_1001c348.288 = local_unnamed_addr global i32 0
@global_var_1001c34c.289 = local_unnamed_addr global i32 0
@global_var_1000ba70.290 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_10008620.291 = constant i32 939524119
@global_var_1001c354.292 = local_unnamed_addr global i32 0
@global_var_1001c350.293 = local_unnamed_addr global i32 0
@global_var_10008988.294 = constant i32 939524096
@global_var_10008cd0.295 = constant i32 1207959564
@global_var_100091ac.296 = constant i32 939524118
@global_var_1000a89c.297 = constant [3 x i8] c"8`\00"
@global_var_10009304.298 = constant i32 939524105
@global_var_10009320.299 = constant i32 939589631
@global_var_10009448.300 = constant i32 1207959797
@global_var_1000944c.301 = constant i32 939524108
@global_var_1001c1dc.302 = global i32 0
@global_var_10009b90.303 = constant i32 939524118
@global_var_10009c18.304 = constant i32 939524118
@global_var_1001c368.305 = global i32 0
@global_var_1001c248.306 = global i32 0
@global_var_1001c170 = external global i32
@global_var_1000bbcc.308 = constant i32 33554944
@global_var_1001c1cc.309 = local_unnamed_addr global i32 0
@global_var_1001c3e8.310 = global i32 0
@global_var_10009e74.311 = constant i32 939524108
@global_var_10009ec8.312 = constant i32 939524108
@global_var_10009f7c.313 = constant [3 x i8] c"8`\00"
@global_var_1000a028.314 = constant [3 x i8] c"8`\00"
@global_var_1000a350.315 = constant i32 1207959640
@global_var_1000a38c.316 = constant i32 1207959580
@global_var_1001c17c.317 = local_unnamed_addr global i32* @global_var_1000bbcc.308
@global_var_1000a580.318 = constant i32 939524130
@global_var_1001c130.319 = global i32 0
@global_var_1001c1c0.320 = local_unnamed_addr global i32 0
@global_var_1000a614.321 = constant i32 1207960053
@global_var_1000a618.322 = constant [3 x i8] c"= \00"
@global_var_1001c000.323 = global i32 -1
@global_var_1001c1d0.324 = local_unnamed_addr global i32 0
@global_var_1001c1d4.325 = local_unnamed_addr global i32 0
@global_var_1000bac0.326 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c1d8.327 = local_unnamed_addr global i32 0
@global_var_1001c1c4.329 = local_unnamed_addr global i32 0
@global_var_1001c1c8.330 = local_unnamed_addr global i32 0
@global_var_1000abb4.331 = constant i32 939524096
@global_var_1000ae40.333 = constant i32 939524118
@global_var_1000b03c.334 = constant i32 939589631
@global_var_1001c1f0.335 = local_unnamed_addr global i32 0
@global_var_1001c148.336 = global i32 0
@global_var_1000b560.337 = constant i32 939524129
@global_var_1001c1e4.338 = local_unnamed_addr global i32 0
@global_var_1000b5d4.339 = constant [3 x i8] c"8`\00"
@global_var_1000b60c.340 = constant i32 939524129
@global_var_1001c1e8.341 = local_unnamed_addr global i32 0
@global_var_1001c1ec.342 = local_unnamed_addr global i32 0
@global_var_1001c004.343 = global i32 0
@global_var_1001c1f4.2 = local_unnamed_addr global i8 0
@global_var_1001c180.9 = local_unnamed_addr global i8 0
@global_var_1001c181.13 = global i8 0
@global_var_1001c020.66 = local_unnamed_addr global i8 1
@global_var_1001c19c.93 = local_unnamed_addr global i16 0
@global_var_1001c1a8.114 = global i16 0
@global_var_1001c236.129 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000b790(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c1f4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c1f4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c1f4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268550160 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268550160
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000a988(i32 268457512, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268482556, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10008e68()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10008e68()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a634(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10008ef8()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10008f40(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a5b0()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c180.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c184.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003ac = load i32, i32* @r31, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r27, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r27, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  store i32 %v0_100003ac, i32* @r31, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_10009e98(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_10009e98(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_10009e98(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_100086e4(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_1000953c()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_10009f08()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_10009f08()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_10009f08()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 2, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_100098d4(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008788(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268439924, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a008(i32 %v3_1000076c, i32 %v1_1000077c, i32 268439924)
  %v3_10000784 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c184.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c180.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268444004, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a008(i32 %v3_100007c0, i32 %v1_100007d0, i32 268444004)
  %v3_100007d8 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c184.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c180.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_10009e98(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268444996, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a008(i32 %v3_10000814, i32 %v1_10000824, i32 268444996)
  %v3_1000082c = load i8, i8* @global_var_1001c180.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c184.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c180.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268438276, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a008(i32 %v3_10000868, i32 %v1_10000878, i32 268438276)
  %v3_10000880 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c184.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c180.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c184.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268451368, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a008(i32 %v3_100008bc, i32 %v1_100008cc, i32 268451368)
  %v3_100008d4 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c184.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c180.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268449860, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a008(i32 %v3_10000910, i32 %v1_10000920, i32 268449860)
  %v3_10000928 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c184.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c180.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_10009e98(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268448252, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a008(i32 %v3_10000964, i32 %v1_10000974, i32 268448252)
  %v3_1000097c = load i8, i8* @global_var_1001c180.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c184.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c180.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268446644, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a008(i32 %v3_100009b8, i32 %v1_100009c8, i32 268446644)
  %v3_100009d0 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c184.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c180.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268442640, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a008(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268442640)
  %v3_10000a24 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c184.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c180.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_10009e98(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268441168, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a008(i32 %v3_10000a60, i32 %v1_10000a70, i32 268441168)
  %v3_10000a78 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c180.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c184.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_10009e98(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c184.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268439100, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a008(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268439100)
  %v3_10000acc = load i8, i8* @global_var_1001c180.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c184.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c181.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c180.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c181.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c180.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b38 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b40 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268438372, i32* @lr, align 4
  %v2_10000b60 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_10000b60, i32* %r27.global-to-local, align 4
  %v0_10000b6c = load i32, i32* @r30, align 4
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438388, i32* @lr, align 4
  %v2_10000b70 = call i32 @function_10009e98(i32 %v0_10000b6c, i32 4)
  %v0_10000b78 = load i32, i32* @r28, align 4
  store i32 %v2_10000b70, i32* %r26.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b78 to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 7, i32 65535)
  %v0_10000b98 = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 65536
  store i32 %v1_10000ba0, i32* %r21.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b98 to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 6, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  %v1_10000bb0 = urem i32 %v5_10000ba8, 65536
  store i32 %v1_10000bb0, i32* %r22.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 0, i32 512)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bc8 = urem i32 %v5_10000bc0, 65536
  store i32 %v1_10000bc8, i32* @r31, align 4
  %v0_10000bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000bdc.14 to i32), i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd0, i32* %v4_10000bd8, i32 1, i32 1)
  store i32 %v5_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000be8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000be8 = icmp eq i32 %v0_10000be8, 65535
  %v1_10000bf0 = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bf0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000be8, label %dec_label_pc_10000dec, label %dec_label_pc_10000c04

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000dec
  %v0_10000c04 = load i32, i32* @r30, align 4
  %v1_10000c04 = icmp slt i32 %v0_10000c04, 0
  %v3_10000c04 = icmp eq i32 %v0_10000c04, 0
  store i1 %v1_10000c04, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c04, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000c04, 1
  br i1 %tmp38, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000c04
  %v0_10000c10 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000c10, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000c1c = load i32, i32* %r21.global-to-local, align 4
  %v4_10000c1c = icmp eq i32 %v0_10000c1c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10000d6c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000c1c, label %dec_label_pc_10000d3c, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000ca4
  %v0_10000c3c = phi i32 [ %v0_10000cb8, %dec_label_pc_10000ca4 ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000c3c = add i32 %v0_10000c3c, 1
  store i32 %v1_10000c3c, i32* %r24.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v2_10000c40 = call i32 @function_10009e98(i32 65535, i32 1)
  %v0_10000c44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10000c44 = trunc i32 %v0_10000c44 to i16
  %v2_10000c44 = load i32, i32* @r28, align 4
  %v3_10000c44 = add i32 %v2_10000c44, 2
  %v4_10000c44 = inttoptr i32 %v3_10000c44 to i16*
  store i16 %v1_10000c44, i16* %v4_10000c44, align 2
  %v1_10000c48 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c48 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000c48 = add i32 %v2_10000c48, %v1_10000c48
  %v4_10000c48 = inttoptr i32 %v3_10000c48 to i32*
  store i32 %v2_10000c40, i32* %v4_10000c48, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v3_10000c58 = call i32 @function_10009b3c(i32 2, i32 2, i32 17)
  store i32 %v3_10000c58, i32* %r3.global-to-local, align 4
  %v3_10000c60 = icmp eq i32 %v3_10000c58, -1
  %v1_10000c68 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c68 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000c68 = add i32 %v2_10000c68, %v1_10000c68
  %v4_10000c68 = inttoptr i32 %v3_10000c68 to i32*
  store i32 %v3_10000c58, i32* %v4_10000c68, align 4
  br i1 %v3_10000c60, label %dec_label_pc_10000da0, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c30
  %v0_10000c70 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000c70, i32* %stack_var_-72, align 4
  store i32 268438656, i32* @lr, align 4
  %v0_10000c7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000c7c = call i32 @function_10009908(i32 %v0_10000c7c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000c7c, i32* %r3.global-to-local, align 4
  %v0_10000c80 = load i32, i32* @r28, align 4
  %v1_10000c80 = add i32 %v0_10000c80, 20
  %v2_10000c80 = inttoptr i32 %v1_10000c80 to i8*
  %v3_10000c80 = load i8, i8* %v2_10000c80, align 1
  %v2_10000c84 = icmp ugt i8 %v3_10000c80, 31
  br i1 %v2_10000c84, label %dec_label_pc_10000ca4, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c70
  %v1_10000c8c = add i32 %v0_10000c80, 16
  %v2_10000c8c = inttoptr i32 %v1_10000c8c to i32*
  %v3_10000c8c = load i32, i32* %v2_10000c8c, align 4
  store i32 %v3_10000c8c, i32* %r29.global-to-local, align 4
  %v0_10000c90 = call i32 @function_10005d68()
  store i32 %v0_10000c90, i32* %r3.global-to-local, align 4
  %v0_10000c94 = load i32, i32* @r28, align 4
  %v1_10000c94 = add i32 %v0_10000c94, 20
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i8*
  %v3_10000c94 = load i8, i8* %v2_10000c94, align 1
  %tmp = urem i8 %v3_10000c94, 64
  %v2_10000c98 = zext i8 %tmp to i32
  %v3_10000c98 = lshr i32 %v0_10000c90, %v2_10000c98
  %v0_10000c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000c9c = add i32 %v3_10000c98, %v0_10000c9c
  store i32 %v2_10000c9c, i32* %r3.global-to-local, align 4
  %v2_10000ca0 = add i32 %v0_10000c94, 4
  %v3_10000ca0 = inttoptr i32 %v2_10000ca0 to i32*
  store i32 %v2_10000c9c, i32* %v3_10000ca0, align 4
  br label %dec_label_pc_10000ca4

dec_label_pc_10000ca4:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c8c
  %v0_10000ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000ca4 = add i32 %v1_10000ca4, %v0_10000ca4
  %v3_10000ca4 = inttoptr i32 %v2_10000ca4 to i32*
  %v4_10000ca4 = load i32, i32* %v3_10000ca4, align 4
  store i32 %v4_10000ca4, i32* @r3, align 4
  %v1_10000cb0 = add i32 %v0_10000ca4, 4
  store i32 %v1_10000cb0, i32* %r25.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v0_10000cb4 = call i32 @function_1000993c()
  store i32 %v0_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* @r30, align 4
  %v4_10000cb8 = icmp eq i32 %v0_10000cb8, %v1_10000cb8
  %v0_10000cbc = load i32, i32* @r28, align 4
  %v1_10000cbc = add i32 %v0_10000cbc, 24
  store i32 %v1_10000cbc, i32* @r28, align 4
  br i1 %v4_10000cb8, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c30

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000ca4, %dec_label_pc_10000d1c, %dec_label_pc_10000c04
  %v0_10000cc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000cc4 = icmp eq i32 %v0_10000cc4, 0
  store i1 %v3_10000cc4, i1* %cr3_eq.global-to-local, align 1
  %v0_10000cc8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000cc8.outer

dec_label_pc_10000cc8.outer:                      ; preds = %dec_label_pc_10000cfc, %dec_label_pc_10000e34, %dec_label_pc_10000cc4
  %v1_10000cc8.ph39 = phi i1 [ %v1_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v1_10000e34, %dec_label_pc_10000e34 ], [ %v1_10000cfc, %dec_label_pc_10000cfc ]
  %v0_10000cc8.ph40 = phi i1 [ %v0_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v0_10000e34, %dec_label_pc_10000e34 ], [ %v0_10000cfc, %dec_label_pc_10000cfc ]
  %v2_10000cc8 = or i1 %v1_10000cc8.ph39, %v0_10000cc8.ph40
  br label %dec_label_pc_10000cc8

dec_label_pc_10000cc8:                            ; preds = %dec_label_pc_10000cc8.outer, %dec_label_pc_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000cc8, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000e34, %dec_label_pc_10000cfc, %dec_label_pc_10000cc8
  %v0_10000ccc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ccc, label %dec_label_pc_10000cd0, label %dec_label_pc_10000df8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge, %dec_label_pc_10000cd0
  %v0_10000cdc = phi i32 [ %v0_10000cf4, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v0_10000cec = phi i32 [ %v0_10000cd8.pre, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v1_10000cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000cd8 = add i32 %v1_10000cd8, %v0_10000cec
  %v3_10000cd8 = inttoptr i32 %v2_10000cd8 to i32*
  %v4_10000cd8 = load i32, i32* %v3_10000cd8, align 4
  store i32 %v4_10000cd8, i32* %r3.global-to-local, align 4
  %v1_10000cdc = add i32 %v0_10000cdc, 1
  store i32 %v1_10000cdc, i32* %r28.global-to-local, align 4
  %v1_10000ce0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000ce0 = add i32 %v1_10000ce0, %v0_10000cec
  %v3_10000ce0 = inttoptr i32 %v2_10000ce0 to i32*
  %v4_10000ce0 = load i32, i32* %v3_10000ce0, align 4
  %v0_10000ce4 = load i32, i32* @r31, align 4
  %v1_10000cec = add i32 %v0_10000cec, 4
  store i32 %v1_10000cec, i32* %r29.global-to-local, align 4
  store i32 268438772, i32* @lr, align 4
  %v4_10000cf0 = call i32 @function_10009a88(i32 %v4_10000cd8, i32 %v4_10000ce0, i32 %v0_10000ce4, i32 16384)
  store i32 %v4_10000cf0, i32* %r3.global-to-local, align 4
  %v0_10000cf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* @r30, align 4
  %v4_10000cf4 = icmp eq i32 %v0_10000cf4, %v1_10000cf4
  br i1 %v4_10000cf4, label %dec_label_pc_10000cfc, label %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge

dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge: ; preds = %dec_label_pc_10000cd8
  %v0_10000cd8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cfc:                            ; preds = %dec_label_pc_10000cd8
  %v0_10000cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cfc = or i1 %v0_10000cfc, %v1_10000cfc
  br i1 %v2_10000cfc, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d80, %dec_label_pc_10000d9c
  %v0_10000d1c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000d1c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000d1c = add i32 %v1_10000d1c, %v0_10000d1c
  %v3_10000d1c = inttoptr i32 %v2_10000d1c to i32*
  %v4_10000d1c = load i32, i32* %v3_10000d1c, align 4
  store i32 %v4_10000d1c, i32* @r3, align 4
  %v1_10000d28 = add i32 %v0_10000d1c, 4
  store i32 %v1_10000d28, i32* %r25.global-to-local, align 4
  store i32 268438832, i32* @lr, align 4
  %v0_10000d2c = call i32 @function_1000993c()
  store i32 %v0_10000d2c, i32* %r3.global-to-local, align 4
  %v0_10000d30 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d30 = load i32, i32* @r30, align 4
  %v4_10000d30 = icmp eq i32 %v0_10000d30, %v1_10000d30
  %v0_10000d34 = load i32, i32* @r28, align 4
  %v1_10000d34 = add i32 %v0_10000d34, 24
  store i32 %v1_10000d34, i32* @r28, align 4
  br i1 %v4_10000d30, label %dec_label_pc_10000cc4, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000d1c
  %v0_10000d48 = phi i32 [ %v0_10000d30, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000d48 = add i32 %v0_10000d48, 1
  store i32 %v1_10000d48, i32* %r24.global-to-local, align 4
  store i32 268438864, i32* @lr, align 4
  %v2_10000d4c = call i32 @function_10009e98(i32 65535, i32 1)
  store i32 %v2_10000d4c, i32* %r3.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d50 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000d50 = add i32 %v2_10000d50, %v1_10000d50
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d4c, i32* %v4_10000d50, align 4
  %v0_10000d54 = call i32 @function_10005d68()
  %v1_10000d54 = trunc i32 %v0_10000d54 to i16
  %v3_10000d58 = load i32, i32* @r28, align 4
  %v4_10000d58 = add i32 %v3_10000d58, 2
  %v5_10000d58 = inttoptr i32 %v4_10000d58 to i16*
  store i16 %v1_10000d54, i16* %v5_10000d58, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438892, i32* @lr, align 4
  %v3_10000d68 = call i32 @function_10009b3c(i32 2, i32 2, i32 17)
  store i32 %v3_10000d68, i32* %r3.global-to-local, align 4
  %v3_10000d70 = icmp eq i32 %v3_10000d68, -1
  %v1_10000d78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d78 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000d78 = add i32 %v2_10000d78, %v1_10000d78
  %v4_10000d78 = inttoptr i32 %v3_10000d78 to i32*
  store i32 %v3_10000d68, i32* %v4_10000d78, align 4
  br i1 %v3_10000d70, label %dec_label_pc_10000da0, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d3c
  %v0_10000d80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d80, i32* %stack_var_-72, align 4
  store i32 268438928, i32* @lr, align 4
  %v0_10000d8c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000d8c = call i32 @function_10009908(i32 %v0_10000d8c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000d8c, i32* %r3.global-to-local, align 4
  %v0_10000d90 = load i32, i32* @r28, align 4
  %v1_10000d90 = add i32 %v0_10000d90, 20
  %v2_10000d90 = inttoptr i32 %v1_10000d90 to i8*
  %v3_10000d90 = load i8, i8* %v2_10000d90, align 1
  %v2_10000d94 = icmp ugt i8 %v3_10000d90, 31
  br i1 %v2_10000d94, label %dec_label_pc_10000d1c, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  %v1_10000d04 = add i32 %v0_10000d90, 16
  %v2_10000d04 = inttoptr i32 %v1_10000d04 to i32*
  %v3_10000d04 = load i32, i32* %v2_10000d04, align 4
  store i32 %v3_10000d04, i32* %r29.global-to-local, align 4
  %v0_10000d08 = call i32 @function_10005d68()
  store i32 %v0_10000d08, i32* %r3.global-to-local, align 4
  %v0_10000d0c = load i32, i32* @r28, align 4
  %v1_10000d0c = add i32 %v0_10000d0c, 20
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i8*
  %v3_10000d0c = load i8, i8* %v2_10000d0c, align 1
  %tmp43 = urem i8 %v3_10000d0c, 64
  %v2_10000d10 = zext i8 %tmp43 to i32
  %v3_10000d10 = lshr i32 %v0_10000d08, %v2_10000d10
  %v0_10000d14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d14 = add i32 %v3_10000d10, %v0_10000d14
  store i32 %v2_10000d14, i32* %r3.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000d0c, 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v2_10000d14, i32* %v3_10000d18, align 4
  br label %dec_label_pc_10000d1c

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000d3c
  %v1_10000db4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000b0c)
  store i32 %v0_10000b38, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b40, i32* %r29.global-to-local, align 4
  %v0_10000de8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000de8

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000b04
  %v0_10000dec = call i32 @function_10005d68()
  store i32 %v0_10000dec, i32* %r3.global-to-local, align 4
  %v1_10000df0 = urem i32 %v0_10000dec, 65536
  store i32 %v1_10000df0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000c04

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e00:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge, %dec_label_pc_10000df8
  %v0_10000e08 = phi i32 [ %v0_10000e2c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v0_10000e00 = phi i32 [ %v0_10000e00.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v1_10000e00 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000e00 = add i32 %v1_10000e00, %v0_10000e00
  %v3_10000e00 = inttoptr i32 %v2_10000e00 to i32*
  %v4_10000e00 = load i32, i32* %v3_10000e00, align 4
  store i32 %v4_10000e00, i32* @r29, align 4
  %v0_10000e04 = load i32, i32* @r31, align 4
  store i32 %v0_10000e04, i32* @r4, align 4
  %v1_10000e08 = add i32 %v0_10000e08, 1
  store i32 %v1_10000e08, i32* %r25.global-to-local, align 4
  store i32 %v4_10000e00, i32* @r3, align 4
  %v0_10000e10 = call i32 @function_10005f3c()
  store i32 %v0_10000e10, i32* %r3.global-to-local, align 4
  %v0_10000e14 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, %v0_10000e14
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  %v4_10000e14 = load i32, i32* %v3_10000e14, align 4
  store i32 %v4_10000e14, i32* %r3.global-to-local, align 4
  %v0_10000e18 = load i32, i32* @r29, align 4
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e24 = add i32 %v0_10000e14, 4
  store i32 %v1_10000e24, i32* %r28.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v4_10000e28 = call i32 @function_10009a88(i32 %v4_10000e14, i32 %v0_10000e18, i32 %v0_10000e1c, i32 16384)
  store i32 %v4_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000e2c = load i32, i32* @r30, align 4
  %v4_10000e2c = icmp eq i32 %v0_10000e2c, %v1_10000e2c
  br i1 %v4_10000e2c, label %dec_label_pc_10000e34, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00
  %v0_10000e00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e34:                            ; preds = %dec_label_pc_10000e00
  %v0_10000e34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e34 = or i1 %v0_10000e34, %v1_10000e34
  br i1 %v2_10000e34, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

; uselistorder directives
  uselistorder i1 %v1_10000e34, { 1, 0 }
  uselistorder i1 %v0_10000e34, { 1, 0 }
  uselistorder i32 %v0_10000e2c, { 1, 0 }
  uselistorder i32 %v0_10000e14, { 1, 0 }
  uselistorder i32 %v0_10000d1c, { 1, 0 }
  uselistorder i1 %v1_10000cfc, { 1, 0 }
  uselistorder i1 %v0_10000cfc, { 1, 0 }
  uselistorder i32 %v0_10000cf4, { 1, 0 }
  uselistorder i32 %v0_10000cec, { 2, 0, 1 }
  uselistorder i32 %v0_10000cb8, { 1, 0 }
  uselistorder i32 %v0_10000ca4, { 1, 0 }
  uselistorder i32 %v2_10000d6c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 21, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c30, { 1, 0 }
  uselistorder label %dec_label_pc_10000c04, { 1, 0 }
}

define i32 @function_10000e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000e3c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000e44 = call i32 @__asm_mfcr()
  store i32 %v0_10000e44, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000e70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000e78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268439196, i32* @lr, align 4
  %v2_10000e98 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_10000e98, i32* %r27.global-to-local, align 4
  %v0_10000ea4 = load i32, i32* @r30, align 4
  store i32 %v0_10000ea4, i32* %r3.global-to-local, align 4
  store i32 268439212, i32* @lr, align 4
  %v2_10000ea8 = call i32 @function_10009e98(i32 %v0_10000ea4, i32 4)
  %v0_10000eb0 = load i32, i32* @r28, align 4
  store i32 %v2_10000ea8, i32* %r26.global-to-local, align 4
  %v0_10000ec0 = load i32, i32* @r29, align 4
  store i32 %v0_10000ec0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v4_10000ec4 = inttoptr i32 %v0_10000eb0 to i32*
  %v5_10000ec4 = call i32 @function_100006a8(i32 %v0_10000ec0, i32* %v4_10000ec4, i32 7, i32 65535)
  %v0_10000ed0 = load i32, i32* @r28, align 4
  %v1_10000ed8 = urem i32 %v5_10000ec4, 65536
  store i32 %v1_10000ed8, i32* %r21.global-to-local, align 4
  %v0_10000edc = load i32, i32* @r29, align 4
  store i32 %v0_10000edc, i32* %r3.global-to-local, align 4
  store i32 268439268, i32* @lr, align 4
  %v4_10000ee0 = inttoptr i32 %v0_10000ed0 to i32*
  %v5_10000ee0 = call i32 @function_100006a8(i32 %v0_10000edc, i32* %v4_10000ee0, i32 6, i32 65535)
  %v0_10000ee4 = load i32, i32* @r28, align 4
  %v1_10000ee8 = urem i32 %v5_10000ee0, 65536
  store i32 %v1_10000ee8, i32* %r22.global-to-local, align 4
  %v0_10000ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ef4, i32* %r3.global-to-local, align 4
  store i32 268439292, i32* @lr, align 4
  %v4_10000ef8 = inttoptr i32 %v0_10000ee4 to i32*
  %v5_10000ef8 = call i32 @function_100006a8(i32 %v0_10000ef4, i32* %v4_10000ef8, i32 0, i32 1024)
  %v0_10000efc = load i32, i32* @r28, align 4
  %v1_10000f00 = urem i32 %v5_10000ef8, 65536
  store i32 %v1_10000f00, i32* @r31, align 4
  %v0_10000f08 = load i32, i32* @r29, align 4
  store i32 %v0_10000f08, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000f14.15 to i32), i32* @lr, align 4
  %v4_10000f10 = inttoptr i32 %v0_10000efc to i32*
  %v5_10000f10 = call i32 @function_100006a8(i32 %v0_10000f08, i32* %v4_10000f10, i32 1, i32 1)
  store i32 %v5_10000f10, i32* %r3.global-to-local, align 4
  %v0_10000f20 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000f20 = icmp eq i32 %v0_10000f20, 65535
  %v1_10000f28 = urem i32 %v5_10000f10, 256
  store i32 %v1_10000f28, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000f20, label %dec_label_pc_10001124, label %dec_label_pc_10000f3c

dec_label_pc_10000f3c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10001124
  %v0_10000f3c = load i32, i32* @r30, align 4
  %v1_10000f3c = icmp slt i32 %v0_10000f3c, 0
  %v3_10000f3c = icmp eq i32 %v0_10000f3c, 0
  store i1 %v1_10000f3c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000f3c, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000f3c, 1
  br i1 %tmp38, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f3c
  %v0_10000f48 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000f48, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000f54 = load i32, i32* %r21.global-to-local, align 4
  %v4_10000f54 = icmp eq i32 %v0_10000f54, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100010a4 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000f54, label %dec_label_pc_10001074, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000fdc
  %v0_10000f74 = phi i32 [ %v0_10000ff0, %dec_label_pc_10000fdc ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 1
  store i32 %v1_10000f74, i32* %r24.global-to-local, align 4
  store i32 268439420, i32* @lr, align 4
  %v2_10000f78 = call i32 @function_10009e98(i32 65535, i32 1)
  %v0_10000f7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10000f7c = trunc i32 %v0_10000f7c to i16
  %v2_10000f7c = load i32, i32* @r28, align 4
  %v3_10000f7c = add i32 %v2_10000f7c, 2
  %v4_10000f7c = inttoptr i32 %v3_10000f7c to i16*
  store i16 %v1_10000f7c, i16* %v4_10000f7c, align 2
  %v1_10000f80 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000f80 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000f80 = add i32 %v2_10000f80, %v1_10000f80
  %v4_10000f80 = inttoptr i32 %v3_10000f80 to i32*
  store i32 %v2_10000f78, i32* %v4_10000f80, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439444, i32* @lr, align 4
  %v3_10000f90 = call i32 @function_10009b3c(i32 2, i32 2, i32 0)
  store i32 %v3_10000f90, i32* %r3.global-to-local, align 4
  %v3_10000f98 = icmp eq i32 %v3_10000f90, -1
  %v1_10000fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fa0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000fa0 = add i32 %v2_10000fa0, %v1_10000fa0
  %v4_10000fa0 = inttoptr i32 %v3_10000fa0 to i32*
  store i32 %v3_10000f90, i32* %v4_10000fa0, align 4
  br i1 %v3_10000f98, label %dec_label_pc_100010d8, label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_10000f68
  %v0_10000fa8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fa8, i32* %stack_var_-72, align 4
  store i32 268439480, i32* @lr, align 4
  %v0_10000fb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10000fb4 = call i32 @function_10009908(i32 %v0_10000fb4, i32 %v2_100010a4, i32 16)
  store i32 %v3_10000fb4, i32* %r3.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* @r28, align 4
  %v1_10000fb8 = add i32 %v0_10000fb8, 20
  %v2_10000fb8 = inttoptr i32 %v1_10000fb8 to i8*
  %v3_10000fb8 = load i8, i8* %v2_10000fb8, align 1
  %v2_10000fbc = icmp ugt i8 %v3_10000fb8, 31
  br i1 %v2_10000fbc, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fc4

dec_label_pc_10000fc4:                            ; preds = %dec_label_pc_10000fa8
  %v1_10000fc4 = add i32 %v0_10000fb8, 16
  %v2_10000fc4 = inttoptr i32 %v1_10000fc4 to i32*
  %v3_10000fc4 = load i32, i32* %v2_10000fc4, align 4
  store i32 %v3_10000fc4, i32* %r29.global-to-local, align 4
  %v0_10000fc8 = call i32 @function_10005d68()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  %v0_10000fcc = load i32, i32* @r28, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 20
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i8*
  %v3_10000fcc = load i8, i8* %v2_10000fcc, align 1
  %tmp = urem i8 %v3_10000fcc, 64
  %v2_10000fd0 = zext i8 %tmp to i32
  %v3_10000fd0 = lshr i32 %v0_10000fc8, %v2_10000fd0
  %v0_10000fd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000fd4 = add i32 %v3_10000fd0, %v0_10000fd4
  store i32 %v2_10000fd4, i32* %r3.global-to-local, align 4
  %v2_10000fd8 = add i32 %v0_10000fcc, 4
  %v3_10000fd8 = inttoptr i32 %v2_10000fd8 to i32*
  store i32 %v2_10000fd4, i32* %v3_10000fd8, align 4
  br label %dec_label_pc_10000fdc

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000fc4
  %v0_10000fdc = load i32, i32* %r25.global-to-local, align 4
  %v1_10000fdc = load i32, i32* %r26.global-to-local, align 4
  %v2_10000fdc = add i32 %v1_10000fdc, %v0_10000fdc
  %v3_10000fdc = inttoptr i32 %v2_10000fdc to i32*
  %v4_10000fdc = load i32, i32* %v3_10000fdc, align 4
  store i32 %v4_10000fdc, i32* @r3, align 4
  %v1_10000fe8 = add i32 %v0_10000fdc, 4
  store i32 %v1_10000fe8, i32* %r25.global-to-local, align 4
  store i32 268439536, i32* @lr, align 4
  %v0_10000fec = call i32 @function_1000993c()
  store i32 %v0_10000fec, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ff0 = load i32, i32* @r30, align 4
  %v4_10000ff0 = icmp eq i32 %v0_10000ff0, %v1_10000ff0
  %v0_10000ff4 = load i32, i32* @r28, align 4
  %v1_10000ff4 = add i32 %v0_10000ff4, 24
  store i32 %v1_10000ff4, i32* @r28, align 4
  br i1 %v4_10000ff0, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f68

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fdc, %dec_label_pc_10001054, %dec_label_pc_10000f3c
  %v0_10000ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10000ffc = icmp eq i32 %v0_10000ffc, 0
  store i1 %v3_10000ffc, i1* %cr3_eq.global-to-local, align 1
  %v0_10001000.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001000.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001000.outer

dec_label_pc_10001000.outer:                      ; preds = %dec_label_pc_10001034, %dec_label_pc_1000116c, %dec_label_pc_10000ffc
  %v1_10001000.ph39 = phi i1 [ %v1_10001000.pre, %dec_label_pc_10000ffc ], [ %v1_1000116c, %dec_label_pc_1000116c ], [ %v1_10001034, %dec_label_pc_10001034 ]
  %v0_10001000.ph40 = phi i1 [ %v0_10001000.pre, %dec_label_pc_10000ffc ], [ %v0_1000116c, %dec_label_pc_1000116c ], [ %v0_10001034, %dec_label_pc_10001034 ]
  %v2_10001000 = or i1 %v1_10001000.ph39, %v0_10001000.ph40
  br label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10001000.outer, %dec_label_pc_10001000
  br i1 %v2_10001000, label %dec_label_pc_10001000, label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_1000116c, %dec_label_pc_10001034, %dec_label_pc_10001000
  %v0_10001004 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001004, label %dec_label_pc_10001008, label %dec_label_pc_10001130

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge, %dec_label_pc_10001008
  %v0_10001014 = phi i32 [ %v0_1000102c, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v0_10001024 = phi i32 [ %v0_10001010.pre, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v1_10001010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001010 = add i32 %v1_10001010, %v0_10001024
  %v3_10001010 = inttoptr i32 %v2_10001010 to i32*
  %v4_10001010 = load i32, i32* %v3_10001010, align 4
  store i32 %v4_10001010, i32* %r3.global-to-local, align 4
  %v1_10001014 = add i32 %v0_10001014, 1
  store i32 %v1_10001014, i32* %r28.global-to-local, align 4
  %v1_10001018 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001018 = add i32 %v1_10001018, %v0_10001024
  %v3_10001018 = inttoptr i32 %v2_10001018 to i32*
  %v4_10001018 = load i32, i32* %v3_10001018, align 4
  %v0_1000101c = load i32, i32* @r31, align 4
  %v1_10001024 = add i32 %v0_10001024, 4
  store i32 %v1_10001024, i32* %r29.global-to-local, align 4
  store i32 268439596, i32* @lr, align 4
  %v4_10001028 = call i32 @function_10009a88(i32 %v4_10001010, i32 %v4_10001018, i32 %v0_1000101c, i32 16384)
  store i32 %v4_10001028, i32* %r3.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000102c = load i32, i32* @r30, align 4
  %v4_1000102c = icmp eq i32 %v0_1000102c, %v1_1000102c
  br i1 %v4_1000102c, label %dec_label_pc_10001034, label %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge

dec_label_pc_10001010.dec_label_pc_10001010_crit_edge: ; preds = %dec_label_pc_10001010
  %v0_10001010.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001034:                            ; preds = %dec_label_pc_10001010
  %v0_10001034 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001034 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001034 = or i1 %v0_10001034, %v1_10001034
  br i1 %v2_10001034, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

dec_label_pc_10001054:                            ; preds = %dec_label_pc_100010b8, %dec_label_pc_100010d4
  %v0_10001054 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001054 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001054 = add i32 %v1_10001054, %v0_10001054
  %v3_10001054 = inttoptr i32 %v2_10001054 to i32*
  %v4_10001054 = load i32, i32* %v3_10001054, align 4
  store i32 %v4_10001054, i32* @r3, align 4
  %v1_10001060 = add i32 %v0_10001054, 4
  store i32 %v1_10001060, i32* %r25.global-to-local, align 4
  store i32 268439656, i32* @lr, align 4
  %v0_10001064 = call i32 @function_1000993c()
  store i32 %v0_10001064, i32* %r3.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001068 = load i32, i32* @r30, align 4
  %v4_10001068 = icmp eq i32 %v0_10001068, %v1_10001068
  %v0_1000106c = load i32, i32* @r28, align 4
  %v1_1000106c = add i32 %v0_1000106c, 24
  store i32 %v1_1000106c, i32* @r28, align 4
  br i1 %v4_10001068, label %dec_label_pc_10000ffc, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10001054
  %v0_10001080 = phi i32 [ %v0_10001068, %dec_label_pc_10001054 ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001080 = add i32 %v0_10001080, 1
  store i32 %v1_10001080, i32* %r24.global-to-local, align 4
  store i32 268439688, i32* @lr, align 4
  %v2_10001084 = call i32 @function_10009e98(i32 65535, i32 1)
  store i32 %v2_10001084, i32* %r3.global-to-local, align 4
  %v1_10001088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001088 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001088 = add i32 %v2_10001088, %v1_10001088
  %v4_10001088 = inttoptr i32 %v3_10001088 to i32*
  store i32 %v2_10001084, i32* %v4_10001088, align 4
  %v0_1000108c = call i32 @function_10005d68()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  %v3_10001090 = load i32, i32* @r28, align 4
  %v4_10001090 = add i32 %v3_10001090, 2
  %v5_10001090 = inttoptr i32 %v4_10001090 to i16*
  store i16 %v1_1000108c, i16* %v5_10001090, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439716, i32* @lr, align 4
  %v3_100010a0 = call i32 @function_10009b3c(i32 2, i32 2, i32 0)
  store i32 %v3_100010a0, i32* %r3.global-to-local, align 4
  %v3_100010a8 = icmp eq i32 %v3_100010a0, -1
  %v1_100010b0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100010b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010b0, %v1_100010b0
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i32*
  store i32 %v3_100010a0, i32* %v4_100010b0, align 4
  br i1 %v3_100010a8, label %dec_label_pc_100010d8, label %dec_label_pc_100010b8

dec_label_pc_100010b8:                            ; preds = %dec_label_pc_10001074
  %v0_100010b8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100010b8, i32* %stack_var_-72, align 4
  store i32 268439752, i32* @lr, align 4
  %v0_100010c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100010c4 = call i32 @function_10009908(i32 %v0_100010c4, i32 %v2_100010a4, i32 16)
  store i32 %v3_100010c4, i32* %r3.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  %v1_100010c8 = add i32 %v0_100010c8, 20
  %v2_100010c8 = inttoptr i32 %v1_100010c8 to i8*
  %v3_100010c8 = load i8, i8* %v2_100010c8, align 1
  %v2_100010cc = icmp ugt i8 %v3_100010c8, 31
  br i1 %v2_100010cc, label %dec_label_pc_10001054, label %dec_label_pc_100010d4

dec_label_pc_100010d4:                            ; preds = %dec_label_pc_100010b8
  %v1_1000103c = add i32 %v0_100010c8, 16
  %v2_1000103c = inttoptr i32 %v1_1000103c to i32*
  %v3_1000103c = load i32, i32* %v2_1000103c, align 4
  store i32 %v3_1000103c, i32* %r29.global-to-local, align 4
  %v0_10001040 = call i32 @function_10005d68()
  store i32 %v0_10001040, i32* %r3.global-to-local, align 4
  %v0_10001044 = load i32, i32* @r28, align 4
  %v1_10001044 = add i32 %v0_10001044, 20
  %v2_10001044 = inttoptr i32 %v1_10001044 to i8*
  %v3_10001044 = load i8, i8* %v2_10001044, align 1
  %tmp43 = urem i8 %v3_10001044, 64
  %v2_10001048 = zext i8 %tmp43 to i32
  %v3_10001048 = lshr i32 %v0_10001040, %v2_10001048
  %v0_1000104c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000104c = add i32 %v3_10001048, %v0_1000104c
  store i32 %v2_1000104c, i32* %r3.global-to-local, align 4
  %v2_10001050 = add i32 %v0_10001044, 4
  %v3_10001050 = inttoptr i32 %v2_10001050 to i32*
  store i32 %v2_1000104c, i32* %v3_10001050, align 4
  br label %dec_label_pc_10001054

dec_label_pc_100010d8:                            ; preds = %dec_label_pc_10000f68, %dec_label_pc_10001074
  %v1_100010ec = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000e44)
  store i32 %v0_10000e70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r29.global-to-local, align 4
  %v0_10001120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001120

dec_label_pc_10001124:                            ; preds = %dec_label_pc_10000e3c
  %v0_10001124 = call i32 @function_10005d68()
  store i32 %v0_10001124, i32* %r3.global-to-local, align 4
  %v1_10001128 = urem i32 %v0_10001124, 65536
  store i32 %v1_10001128, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000f3c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_10001138:                            ; preds = %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge, %dec_label_pc_10001130
  %v0_10001140 = phi i32 [ %v0_10001164, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v0_10001138 = phi i32 [ %v0_10001138.pre, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v1_10001138 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001138 = add i32 %v1_10001138, %v0_10001138
  %v3_10001138 = inttoptr i32 %v2_10001138 to i32*
  %v4_10001138 = load i32, i32* %v3_10001138, align 4
  store i32 %v4_10001138, i32* @r29, align 4
  %v0_1000113c = load i32, i32* @r31, align 4
  store i32 %v0_1000113c, i32* @r4, align 4
  %v1_10001140 = add i32 %v0_10001140, 1
  store i32 %v1_10001140, i32* %r25.global-to-local, align 4
  store i32 %v4_10001138, i32* @r3, align 4
  %v0_10001148 = call i32 @function_10005f3c()
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  %v0_1000114c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000114c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000114c = add i32 %v1_1000114c, %v0_1000114c
  %v3_1000114c = inttoptr i32 %v2_1000114c to i32*
  %v4_1000114c = load i32, i32* %v3_1000114c, align 4
  store i32 %v4_1000114c, i32* %r3.global-to-local, align 4
  %v0_10001150 = load i32, i32* @r29, align 4
  %v0_10001154 = load i32, i32* @r31, align 4
  %v1_1000115c = add i32 %v0_1000114c, 4
  store i32 %v1_1000115c, i32* %r28.global-to-local, align 4
  store i32 268439908, i32* @lr, align 4
  %v4_10001160 = call i32 @function_10009a88(i32 %v4_1000114c, i32 %v0_10001150, i32 %v0_10001154, i32 16384)
  store i32 %v4_10001160, i32* %r3.global-to-local, align 4
  %v0_10001164 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001164 = load i32, i32* @r30, align 4
  %v4_10001164 = icmp eq i32 %v0_10001164, %v1_10001164
  br i1 %v4_10001164, label %dec_label_pc_1000116c, label %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge

dec_label_pc_10001138.dec_label_pc_10001138_crit_edge: ; preds = %dec_label_pc_10001138
  %v0_10001138.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_1000116c:                            ; preds = %dec_label_pc_10001138
  %v0_1000116c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000116c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000116c = or i1 %v0_1000116c, %v1_1000116c
  br i1 %v2_1000116c, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

; uselistorder directives
  uselistorder i1 %v1_1000116c, { 1, 0 }
  uselistorder i1 %v0_1000116c, { 1, 0 }
  uselistorder i32 %v0_10001164, { 1, 0 }
  uselistorder i32 %v0_1000114c, { 1, 0 }
  uselistorder i32 %v0_10001054, { 1, 0 }
  uselistorder i1 %v1_10001034, { 1, 0 }
  uselistorder i1 %v0_10001034, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 1, 0 }
  uselistorder i32 %v0_10001024, { 2, 0, 1 }
  uselistorder i32 %v0_10000ff0, { 1, 0 }
  uselistorder i32 %v0_10000fdc, { 1, 0 }
  uselistorder i32 %v2_100010a4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 21, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100010d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001074, { 1, 0 }
  uselistorder label %dec_label_pc_10001054, { 1, 0 }
  uselistorder label %dec_label_pc_10001000, { 1, 0 }
  uselistorder label %dec_label_pc_10001000.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000f68, { 1, 0 }
  uselistorder label %dec_label_pc_10000f3c, { 1, 0 }
}

define i32 @function_10001174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001174:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001178 = load i32, i32* @lr, align 4
  store i32 %v0_10001178, i32* %r0.global-to-local, align 4
  %v0_1000117c = call i32 @__asm_mfcr()
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_1000118c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000117c, i32* %r19.global-to-local, align 4
  %v0_100011c0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100011c8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100011d0 = load i32, i32* @r30, align 4
  %v0_100011d4 = load i32, i32* @r31, align 4
  store i32 268440040, i32* @lr, align 4
  %v2_100011e4 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_100011e4, i32* %r20.global-to-local, align 4
  %v0_100011ec = load i32, i32* @r28, align 4
  %v0_100011f8 = load i32, i32* @r29, align 4
  store i32 %v0_100011f8, i32* %r3.global-to-local, align 4
  store i32 268440064, i32* @lr, align 4
  %v4_100011fc = inttoptr i32 %v0_100011ec to i32*
  %v5_100011fc = call i32 @function_100006a8(i32 %v0_100011f8, i32* %v4_100011fc, i32 2, i32 0)
  %v0_1000120c = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_100011fc, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_1000120c to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 3, i32 65535)
  %v0_1000121c = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r23.global-to-local, align 4
  %v0_1000122c = load i32, i32* @r29, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = inttoptr i32 %v0_1000121c to i32*
  %v5_10001230 = call i32 @function_100006a8(i32 %v0_1000122c, i32* %v4_10001230, i32 4, i32 64)
  %v0_10001234 = load i32, i32* @r28, align 4
  %v1_10001240 = urem i32 %v5_10001230, 256
  store i32 %v1_10001240, i32* %r16.global-to-local, align 4
  %v0_10001244 = load i32, i32* @r29, align 4
  store i32 %v0_10001244, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v4_10001248 = inttoptr i32 %v0_10001234 to i32*
  %v5_10001248 = call i32 @function_100006a8(i32 %v0_10001244, i32* %v4_10001248, i32 5, i32 0)
  %v0_10001258 = load i32, i32* @r28, align 4
  %v1_1000125c = urem i32 %v5_10001248, 256
  store i32 %v1_1000125c, i32* @r31, align 4
  %v0_10001260 = load i32, i32* @r29, align 4
  store i32 %v0_10001260, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v4_10001264 = inttoptr i32 %v0_10001258 to i32*
  %v5_10001264 = call i32 @function_100006a8(i32 %v0_10001260, i32* %v4_10001264, i32 6, i32 65535)
  %v0_1000126c = load i32, i32* @r28, align 4
  store i32 %v5_10001264, i32* %r24.global-to-local, align 4
  %v0_1000127c = load i32, i32* @r29, align 4
  store i32 %v0_1000127c, i32* %r3.global-to-local, align 4
  store i32 268440196, i32* @lr, align 4
  %v4_10001280 = inttoptr i32 %v0_1000126c to i32*
  %v5_10001280 = call i32 @function_100006a8(i32 %v0_1000127c, i32* %v4_10001280, i32 7, i32 65535)
  %v0_10001284 = load i32, i32* @r28, align 4
  store i32 %v5_10001280, i32* %r25.global-to-local, align 4
  %v0_10001294 = load i32, i32* @r29, align 4
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  store i32 268440220, i32* @lr, align 4
  %v4_10001298 = inttoptr i32 %v0_10001284 to i32*
  %v5_10001298 = call i32 @function_100006a8(i32 %v0_10001294, i32* %v4_10001298, i32 0, i32 512)
  %v0_1000129c = load i32, i32* @r28, align 4
  store i32 %v5_10001298, i32* %r26.global-to-local, align 4
  %v0_100012ac = load i32, i32* @r29, align 4
  store i32 %v0_100012ac, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v4_100012b0 = inttoptr i32 %v0_1000129c to i32*
  %v5_100012b0 = call i32 @function_100006a8(i32 %v0_100012ac, i32* %v4_100012b0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100012b8 = load i32, i32* @global_var_1001c188.16, align 4
  %v0_100012bc = load i32, i32* @r28, align 4
  %v1_100012c4 = urem i32 %v5_100012b0, 256
  store i32 %v1_100012c4, i32* %r17.global-to-local, align 4
  %v0_100012c8 = load i32, i32* @r29, align 4
  store i32 %v0_100012c8, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v4_100012cc = inttoptr i32 %v0_100012bc to i32*
  %v5_100012cc = call i32 @function_100006a8(i32 %v0_100012c8, i32* %v4_100012cc, i32 25, i32 %v3_100012b8)
  store i32 %v5_100012cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440292, i32* @lr, align 4
  %v3_100012e0 = call i32 @function_10009b3c(i32 2, i32 3, i32 17)
  store i32 %v3_100012e0, i32* %r3.global-to-local, align 4
  %v3_100012e4 = icmp eq i32 %v3_100012e0, -1
  store i32 %v3_100012e0, i32* %r21.global-to-local, align 4
  br i1 %v3_100012e4, label %dec_label_pc_10001540, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_10001174
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100012fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440332, i32* @lr, align 4
  %v4_10001308 = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_100012fc, i32 4)
  store i32 %v4_10001308, i32* %r3.global-to-local, align 4
  %v3_1000130c = icmp eq i32 %v4_10001308, -1
  br i1 %v3_1000130c, label %dec_label_pc_10001538, label %dec_label_pc_10001314

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012f0
  %v0_10001314 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001314 = urem i32 %v0_10001314, 65536
  store i32 %v1_10001314, i32* %r18.global-to-local, align 4
  %v0_10001318 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001318 = urem i32 %v0_10001318, 65536
  store i32 %v1_10001318, i32* %r22.global-to-local, align 4
  %v0_10001320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001320 = urem i32 %v0_10001320, 65536
  store i32 %v1_10001320, i32* %r23.global-to-local, align 4
  %v0_10001324 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001324 = urem i32 %v0_10001324, 65536
  store i32 %v1_10001324, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10001314, 1461
  br i1 %tmp30, label %dec_label_pc_10001330, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001314
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_1000132c
  %v0_10001640 = phi i32 [ %v1_10001314, %dec_label_pc_10001314 ], [ 1460, %dec_label_pc_1000132c ]
  %v0_10001330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001330 = icmp slt i32 %v0_10001330, 0
  %v3_10001330 = icmp eq i32 %v0_10001330, 0
  store i1 %v1_10001330, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001330, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10001330, 1
  br i1 %tmp31, label %dec_label_pc_10001638, label %dec_label_pc_10001340

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  %v0_10001340 = load i32, i32* @r31, align 4
  %v3_10001340 = icmp eq i32 %v0_10001340, 0
  %v1_10001344 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001344, i32* %r25.global-to-local, align 4
  %v1_10001348 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001348, i32* %r26.global-to-local, align 4
  %v1_1000134c = urem i32 %v1_10001344, 65536
  store i32 %v1_1000134c, i32* @r28, align 4
  %v1_10001350 = urem i32 %v1_10001348, 65536
  store i32 %v1_10001350, i32* @r29, align 4
  br i1 %v3_10001340, label %dec_label_pc_10001358, label %dec_label_pc_100015a0

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_1000135c

dec_label_pc_1000135c:                            ; preds = %dec_label_pc_1000135c, %dec_label_pc_10001358
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440424, i32* @lr, align 4
  %v2_10001364 = call i32 @function_10009e98(i32 1510, i32 1)
  store i32 %v2_10001364, i32* %r3.global-to-local, align 4
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001368, i32* %r9.global-to-local, align 4
  %v0_1000136c = load i32, i32* @r31, align 4
  %v1_1000136c = mul i32 %v0_1000136c, 4
  store i32 %v1_1000136c, i32* %r0.global-to-local, align 4
  %v1_10001370 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001370 = add i32 %v1_10001370, %v1_1000136c
  %v4_10001370 = inttoptr i32 %v3_10001370 to i32*
  store i32 %v2_10001364, i32* %v4_10001370, align 4
  %v0_10001374 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001374 = mul i32 %v0_10001374, 4
  store i32 %v1_10001374, i32* %r9.global-to-local, align 4
  %v1_10001378 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001378 = add i32 %v1_10001378, %v1_10001374
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  %v4_10001378 = load i32, i32* %v3_10001378, align 4
  store i32 %v4_10001378, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001380 = inttoptr i32 %v4_10001378 to i32*
  %v2_10001380 = load i32, i32* %v1_10001380, align 4
  store i32 %v2_10001380, i32* %r0.global-to-local, align 4
  %v1_10001384 = add i32 %v4_10001378, 20
  store i32 %v1_10001384, i32* %r10.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001388 = trunc i32 %v0_10001388 to i8
  %v3_10001388 = add i32 %v4_10001378, 8
  %v4_10001388 = inttoptr i32 %v3_10001388 to i8*
  store i8 %v1_10001388, i8* %v4_10001388, align 1
  %v1_1000138c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000138c, i32* %r0.global-to-local, align 4
  %v0_10001390 = load i32, i32* @r30, align 4
  %v1_10001390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, 12
  %v3_10001390 = inttoptr i32 %v2_10001390 to i32*
  store i32 %v0_10001390, i32* %v3_10001390, align 4
  %v1_10001394 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001398 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001398 = trunc i32 %v0_10001398 to i16
  %v2_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001398 = add i32 %v2_10001398, 4
  %v4_10001398 = inttoptr i32 %v3_10001398 to i16*
  store i16 %v1_10001398, i16* %v4_10001398, align 2
  %v1_1000139c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  store i32 %v1_10001394, i32* %v2_1000139c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 9
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i8*
  store i8 17, i8* %v4_100013a4, align 1
  %v0_100013a8 = load i32, i32* %r15.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 1
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i32, i32* @r28, align 4
  %v1_100013ac = trunc i32 %v0_100013ac to i16
  %v2_100013ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100013ac = add i32 %v2_100013ac, 2
  %v4_100013ac = inttoptr i32 %v3_100013ac to i16*
  store i16 %v1_100013ac, i16* %v4_100013ac, align 2
  %v3_100013b0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100013b0, i32* %r9.global-to-local, align 4
  %v0_100013b4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100013b4 = trunc i32 %v0_100013b4 to i16
  %v2_100013b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 20
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 %v1_100013b4, i16* %v4_100013b4, align 2
  %v0_100013b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013b8 = add i32 %v0_100013b8, 1
  store i32 %v1_100013b8, i32* %r31.global-to-local, align 4
  %v1_100013bc = mul i32 %v0_100013b8, 24
  store i32 %v1_100013bc, i32* %r9.global-to-local, align 4
  %v1_100013c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100013c0 = icmp slt i32 %v1_100013b8, %v1_100013c0
  %v0_100013c4 = load i32, i32* @r29, align 4
  %v1_100013c4 = trunc i32 %v0_100013c4 to i16
  %v2_100013c4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100013c4 = add i32 %v2_100013c4, 4
  %v4_100013c4 = inttoptr i32 %v3_100013c4 to i16*
  store i16 %v1_100013c4, i16* %v4_100013c4, align 2
  %v0_100013c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, %v0_100013c8
  store i32 %v2_100013c8, i32* %r9.global-to-local, align 4
  %v0_100013cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100013cc = trunc i32 %v0_100013cc to i16
  %v2_100013cc = load i32, i32* %r10.global-to-local, align 4
  %v3_100013cc = add i32 %v2_100013cc, 2
  %v4_100013cc = inttoptr i32 %v3_100013cc to i16*
  store i16 %v1_100013cc, i16* %v4_100013cc, align 2
  %v0_100013d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013d0 = add i32 %v0_100013d0, 16
  %v2_100013d0 = inttoptr i32 %v1_100013d0 to i32*
  %v3_100013d0 = load i32, i32* %v2_100013d0, align 4
  store i32 %v3_100013d0, i32* %r0.global-to-local, align 4
  %v1_100013d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v3_100013d0, i32* %v3_100013d4, align 4
  %v0_100013d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100013d8, i32* %stack_var_-104, align 4
  br i1 %v2_100013c0, label %dec_label_pc_1000135c, label %dec_label_pc_100013e0

dec_label_pc_100013e0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_1000135c
  %v0_100013e0 = load i32, i32* @r30, align 4
  %v3_100013e0 = icmp eq i32 %v0_100013e0, -1
  store i1 %v3_100013e0, i1* %cr2_eq.global-to-local, align 1
  %v0_100013e4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100013e4 = icmp eq i32 %v0_100013e4, 0
  store i1 %v3_100013e4, i1* %cr3_eq.global-to-local, align 1
  %v0_100013e8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100013e8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100013e8.preheader

dec_label_pc_100013e8.preheader:                  ; preds = %dec_label_pc_100014b4, %dec_label_pc_10001638, %dec_label_pc_100013e0
  %v1_100013e8 = phi i1 [ %v1_10001330, %dec_label_pc_10001638 ], [ %v1_100013e8.pre, %dec_label_pc_100013e0 ], [ %v1_100014b4, %dec_label_pc_100014b4 ]
  %v0_100013e8 = phi i1 [ %v3_10001330, %dec_label_pc_10001638 ], [ %v0_100013e8.pre, %dec_label_pc_100013e0 ], [ %v0_100014b4, %dec_label_pc_100014b4 ]
  %v2_100013e8 = or i1 %v1_100013e8, %v0_100013e8
  br label %dec_label_pc_100013e8

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013e8.preheader, %dec_label_pc_100013e8
  br i1 %v2_100013e8, label %dec_label_pc_100013e8, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_100014b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_10001444, %dec_label_pc_100013ec
  %v0_100013fc = phi i32 [ %v1_100014a4, %dec_label_pc_10001444 ], [ 0, %dec_label_pc_100013ec ]
  %v1_100013fc = mul i32 %v0_100013fc, 24
  store i32 %v1_100013fc, i32* %r0.global-to-local, align 4
  %v1_10001400 = mul i32 %v0_100013fc, 4
  store i32 %v1_10001400, i32* %r11.global-to-local, align 4
  %v1_10001404 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001404 = add i32 %v1_10001404, %v1_10001400
  %v3_10001404 = inttoptr i32 %v2_10001404 to i32*
  %v4_10001404 = load i32, i32* %v3_10001404, align 4
  store i32 %v4_10001404, i32* %r28.global-to-local, align 4
  %v1_10001408 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001408 = add i32 %v1_10001408, %v1_100013fc
  store i32 %v2_10001408, i32* %r10.global-to-local, align 4
  %v1_1000140c = add i32 %v2_10001408, 20
  %v2_1000140c = inttoptr i32 %v1_1000140c to i8*
  %v3_1000140c = load i8, i8* %v2_1000140c, align 1
  %v4_1000140c = zext i8 %v3_1000140c to i32
  store i32 %v4_1000140c, i32* %r9.global-to-local, align 4
  %v1_10001410 = add i32 %v4_10001404, 20
  store i32 %v1_10001410, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_1000140c, 32
  br i1 %tmp32, label %dec_label_pc_100014bc, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_100013fc
  %v0_1000141c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000141c, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_10001420:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 65535, i32* @r29, align 4
  %v0_10001428 = load i32, i32* %r22.global-to-local, align 4
  %v4_10001428 = icmp eq i32 %v0_10001428, 65535
  br i1 %v4_10001428, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v1_10001430 = phi i32 [ %v1_100014f4, %dec_label_pc_100014e4 ], [ 65535, %dec_label_pc_10001420 ]
  %v0_10001430 = load i32, i32* %r23.global-to-local, align 4
  %v4_10001430 = icmp eq i32 %v0_10001430, %v1_10001430
  br i1 %v4_10001430, label %dec_label_pc_1000150c, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge, %dec_label_pc_10001430
  %v1_10001438 = phi i32 [ %v1_10001438.pre, %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge ], [ %v1_10001430, %dec_label_pc_10001430 ]
  %v0_10001438 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001438 = icmp eq i32 %v0_10001438, %v1_10001438
  br i1 %v4_10001438, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_10001440 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001440, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001444:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c, %dec_label_pc_10001528
  %v0_10001444 = load i32, i32* @r30, align 4
  %v1_10001444 = trunc i32 %v0_10001444 to i16
  %v2_10001444 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001444 = add i32 %v2_10001444, 10
  %v4_10001444 = inttoptr i32 %v3_10001444 to i16*
  store i16 %v1_10001444, i16* %v4_10001444, align 2
  %v0_1000144c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000144c, i32* @r3, align 4
  %v2_10001450 = call i32 @function_100043cc(i32 %v0_1000144c, i32 20)
  %v3_10001450 = trunc i32 %v2_10001450 to i16
  %v0_10001454 = load i32, i32* @r31, align 4
  store i32 %v0_10001454, i32* @r4, align 4
  %v4_10001458 = add i32 %v0_1000144c, 10
  %v5_10001458 = inttoptr i32 %v4_10001458 to i16*
  store i16 %v3_10001450, i16* %v5_10001458, align 2
  %v0_1000145c = load i32, i32* %r26.global-to-local, align 4
  %v0_10001460 = load i32, i32* @r30, align 4
  %v1_10001460 = trunc i32 %v0_10001460 to i16
  %v2_10001460 = load i32, i32* @r31, align 4
  %v3_10001460 = add i32 %v2_10001460, 6
  %v4_10001460 = inttoptr i32 %v3_10001460 to i16*
  store i16 %v1_10001460, i16* %v4_10001460, align 2
  %v0_10001464 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001464, i32* %r3.global-to-local, align 4
  %v0_10001468 = load i32, i32* @r31, align 4
  %v1_10001468 = add i32 %v0_10001468, 4
  %v2_10001468 = inttoptr i32 %v1_10001468 to i16*
  %v3_10001468 = load i16, i16* %v2_10001468, align 2
  %v4_10001468 = zext i16 %v3_10001468 to i32
  %v4_1000146c = call i32 @function_10004430(i32 %v0_10001464, i32 %v0_10001454, i32 %v4_10001468, i32 %v0_1000145c)
  %v5_1000146c = trunc i32 %v4_1000146c to i16
  store i32 %v4_1000146c, i32* %r3.global-to-local, align 4
  %v3_10001470 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001470, i32* %r7.global-to-local, align 4
  %v0_10001474 = load i32, i32* @r31, align 4
  %v1_10001474 = add i32 %v0_10001474, 2
  %v2_10001474 = inttoptr i32 %v1_10001474 to i16*
  %v3_10001474 = load i16, i16* %v2_10001474, align 2
  %v4_10001474 = zext i16 %v3_10001474 to i32
  store i32 %v4_10001474, i32* %r0.global-to-local, align 4
  %v0_10001478 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000147c = mul i32 %v3_10001470, 24
  store i32 %v1_1000147c, i32* %r7.global-to-local, align 4
  %v4_10001480 = add i32 %v0_10001474, 6
  %v5_10001480 = inttoptr i32 %v4_10001480 to i16*
  store i16 %v5_1000146c, i16* %v5_10001480, align 2
  %v0_10001484 = load i32, i32* %r25.global-to-local, align 4
  %v0_10001488 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001488, i32* %r3.global-to-local, align 4
  %v0_1000148c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000148c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v0_1000148c
  store i32 %v2_1000148c, i32* %r7.global-to-local, align 4
  %v0_10001494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001494 = trunc i32 %v0_10001494 to i16
  %v3_10001494 = add i32 %v2_1000148c, 2
  %v4_10001494 = inttoptr i32 %v3_10001494 to i16*
  store i16 %v1_10001494, i16* %v4_10001494, align 2
  store i32 268440736, i32* @lr, align 4
  %v6_1000149c = call i32 @function_10009ac0(i32 %v0_10001488, i32 %v0_10001478, i32 %v0_10001484, i32 16384, i32 %v2_1000148c, i32 16)
  store i32 %v6_1000149c, i32* %r3.global-to-local, align 4
  %v3_100014a0 = load i32, i32* %stack_var_-104, align 4
  %v1_100014a4 = add i32 %v3_100014a0, 1
  store i32 %v1_100014a4, i32* %r9.global-to-local, align 4
  %v1_100014a8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100014a8 = icmp slt i32 %v1_100014a4, %v1_100014a8
  store i32 %v1_100014a4, i32* %stack_var_-104, align 4
  br i1 %v2_100014a8, label %dec_label_pc_100013fc, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001444
  %v0_100014b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100014b4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100014b4 = or i1 %v0_100014b4, %v1_100014b4
  br i1 %v2_100014b4, label %dec_label_pc_100013e8.preheader, label %dec_label_pc_100013ec

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100013fc
  %v1_100014bc = add i32 %v2_10001408, 16
  %v2_100014bc = inttoptr i32 %v1_100014bc to i32*
  %v3_100014bc = load i32, i32* %v2_100014bc, align 4
  store i32 %v3_100014bc, i32* %r29.global-to-local, align 4
  %v0_100014c0 = call i32 @function_10005d68()
  store i32 %v0_100014c0, i32* %r3.global-to-local, align 4
  %v3_100014c4 = load i32, i32* %stack_var_-104, align 4
  %v1_100014c8 = mul i32 %v3_100014c4, 24
  %v1_100014cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100014cc = add i32 %v1_100014cc, %v1_100014c8
  store i32 %v2_100014cc, i32* %r9.global-to-local, align 4
  %v1_100014d0 = add i32 %v2_100014cc, 20
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i8*
  %v3_100014d0 = load i8, i8* %v2_100014d0, align 1
  %v4_100014d0 = zext i8 %v3_100014d0 to i32
  store i32 %v4_100014d0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100014d0, 64
  %v2_100014d4 = zext i8 %tmp to i32
  %v3_100014d4 = lshr i32 %v0_100014c0, %v2_100014d4
  store i32 %v3_100014d4, i32* %r3.global-to-local, align 4
  %v0_100014d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014d8 = add i32 %v3_100014d4, %v0_100014d8
  store i32 %v2_100014d8, i32* %r29.global-to-local, align 4
  %v1_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100014dc = add i32 %v1_100014dc, 16
  %v3_100014dc = inttoptr i32 %v2_100014dc to i32*
  store i32 %v2_100014d8, i32* %v3_100014dc, align 4
  %v0_100014e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014e0, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100014e8 = call i32 @function_10005d68()
  store i32 %v0_100014e8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100014f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100014f0 = add i32 %v1_100014f0, 12
  %v3_100014f0 = inttoptr i32 %v2_100014f0 to i32*
  store i32 %v0_100014e8, i32* %v3_100014f0, align 4
  %v0_100014f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100014f4 = load i32, i32* @r29, align 4
  %v4_100014f4 = icmp eq i32 %v0_100014f4, %v1_100014f4
  br i1 %v4_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v0_100014fc = call i32 @function_10005d68()
  %v1_100014fc = trunc i32 %v0_100014fc to i16
  store i32 %v0_100014fc, i32* %r3.global-to-local, align 4
  %v0_10001500 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r29, align 4
  %v4_10001500 = icmp eq i32 %v0_10001500, %v1_10001500
  %v3_10001504 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001504 = add i32 %v3_10001504, 4
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v1_100014fc, i16* %v5_10001504, align 2
  br i1 %v4_10001500, label %dec_label_pc_1000150c, label %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge

dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge: ; preds = %dec_label_pc_100014fc
  %v1_10001438.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001438

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100014fc, %dec_label_pc_10001430
  %v0_1000150c = call i32 @function_10005d68()
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  store i32 %v0_1000150c, i32* %r3.global-to-local, align 4
  %v0_10001510 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001510 = load i32, i32* @r29, align 4
  %v4_10001510 = icmp eq i32 %v0_10001510, %v1_10001510
  %v3_10001514 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001514 = add i32 %v3_10001514, 20
  %v5_10001514 = inttoptr i32 %v4_10001514 to i16*
  store i16 %v1_1000150c, i16* %v5_10001514, align 2
  br i1 %v4_10001510, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_1000151c = call i32 @function_10005d68()
  %v1_1000151c = trunc i32 %v0_1000151c to i16
  store i32 %v0_1000151c, i32* %r3.global-to-local, align 4
  %v3_10001520 = load i32, i32* @r31, align 4
  %v4_10001520 = add i32 %v3_10001520, 2
  %v5_10001520 = inttoptr i32 %v4_10001520 to i16*
  store i16 %v1_1000151c, i16* %v5_10001520, align 2
  %v0_10001524 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001524, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c
  %v0_10001528 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001528 = add i32 %v0_10001528, 28
  store i32 %v1_10001528, i32* @r3, align 4
  %v0_1000152c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000152c, i32* @r4, align 4
  %v0_10001530 = call i32 @function_10005f3c()
  store i32 %v0_10001530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001444

dec_label_pc_10001538:                            ; preds = %dec_label_pc_100012f0
  %v0_10001538 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001538, i32* %r3.global-to-local, align 4
  store i32 268440896, i32* @lr, align 4
  %v0_1000153c = call i32 @function_10008e20()
  store i32 %v0_1000153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_10001174, %dec_label_pc_10001538
  store i32 %v0_1000118c, i32* %r0.global-to-local, align 4
  %v1_10001554 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000117c)
  store i32 %v0_100011c0, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100011d0, i32* %r30.global-to-local, align 4
  store i32 %v0_100011d4, i32* %r31.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000159c

dec_label_pc_100015a0:                            ; preds = %dec_label_pc_10001340
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100015a8

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100015a0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* @lr, align 4
  %v2_100015b0 = call i32 @function_10009e98(i32 1510, i32 1)
  store i32 %v2_100015b0, i32* %r3.global-to-local, align 4
  %v3_100015b4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015b4, i32* %r9.global-to-local, align 4
  %v0_100015b8 = load i32, i32* @r31, align 4
  %v1_100015b8 = mul i32 %v0_100015b8, 4
  store i32 %v1_100015b8, i32* %r0.global-to-local, align 4
  %v1_100015bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100015bc = add i32 %v1_100015bc, %v1_100015b8
  %v4_100015bc = inttoptr i32 %v3_100015bc to i32*
  store i32 %v2_100015b0, i32* %v4_100015bc, align 4
  %v0_100015c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100015c0 = mul i32 %v0_100015c0, 4
  store i32 %v1_100015c0, i32* %r9.global-to-local, align 4
  %v1_100015c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015c4 = add i32 %v1_100015c4, %v1_100015c0
  %v3_100015c4 = inttoptr i32 %v2_100015c4 to i32*
  %v4_100015c4 = load i32, i32* %v3_100015c4, align 4
  store i32 %v4_100015c4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100015cc = inttoptr i32 %v4_100015c4 to i32*
  %v2_100015cc = load i32, i32* %v1_100015cc, align 4
  store i32 %v2_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = add i32 %v4_100015c4, 20
  store i32 %v1_100015d0, i32* %r10.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100015d4 = trunc i32 %v0_100015d4 to i8
  %v3_100015d4 = add i32 %v4_100015c4, 8
  %v4_100015d4 = inttoptr i32 %v3_100015d4 to i8*
  store i8 %v1_100015d4, i8* %v4_100015d4, align 1
  %v1_100015d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100015d8, i32* %r0.global-to-local, align 4
  %v0_100015dc = load i32, i32* @r30, align 4
  %v1_100015dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100015dc = add i32 %v1_100015dc, 12
  %v3_100015dc = inttoptr i32 %v2_100015dc to i32*
  store i32 %v0_100015dc, i32* %v3_100015dc, align 4
  %v1_100015e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100015e4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100015e4 = trunc i32 %v0_100015e4 to i16
  %v2_100015e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015e4 = add i32 %v2_100015e4, 4
  %v4_100015e4 = inttoptr i32 %v3_100015e4 to i16*
  store i16 %v1_100015e4, i16* %v4_100015e4, align 2
  %v1_100015e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  store i32 %v1_100015e0, i32* %v2_100015e8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100015f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f0 = add i32 %v2_100015f0, 9
  %v4_100015f0 = inttoptr i32 %v3_100015f0 to i8*
  store i8 17, i8* %v4_100015f0, align 1
  %v0_100015f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100015f4 = trunc i32 %v0_100015f4 to i8
  %v2_100015f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f4 = add i32 %v2_100015f4, 1
  %v4_100015f4 = inttoptr i32 %v3_100015f4 to i8*
  store i8 %v1_100015f4, i8* %v4_100015f4, align 1
  %v0_100015f8 = load i32, i32* @r28, align 4
  %v1_100015f8 = trunc i32 %v0_100015f8 to i16
  %v2_100015f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f8 = add i32 %v2_100015f8, 2
  %v4_100015f8 = inttoptr i32 %v3_100015f8 to i16*
  store i16 %v1_100015f8, i16* %v4_100015f8, align 2
  %v3_100015fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015fc, i32* %r9.global-to-local, align 4
  %v0_10001600 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001600 = trunc i32 %v0_10001600 to i16
  %v2_10001600 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001600 = add i32 %v2_10001600, 20
  %v4_10001600 = inttoptr i32 %v3_10001600 to i16*
  store i16 %v1_10001600, i16* %v4_10001600, align 2
  %v0_10001604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001604 = add i32 %v0_10001604, 1
  store i32 %v1_10001604, i32* %r31.global-to-local, align 4
  %v1_10001608 = mul i32 %v0_10001604, 24
  %v1_1000160c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000160c = icmp slt i32 %v1_10001604, %v1_1000160c
  %v1_10001610 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001610 = add i32 %v1_10001610, %v1_10001608
  store i32 %v2_10001610, i32* %r9.global-to-local, align 4
  %v1_10001614 = add i32 %v2_10001610, 16
  %v2_10001614 = inttoptr i32 %v1_10001614 to i32*
  %v3_10001614 = load i32, i32* %v2_10001614, align 4
  store i32 %v3_10001614, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_1000161c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000161c = add i32 %v2_1000161c, 6
  %v4_1000161c = inttoptr i32 %v3_1000161c to i16*
  store i16 16384, i16* %v4_1000161c, align 2
  %v0_10001620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001620 = add i32 %v1_10001620, 16
  %v3_10001620 = inttoptr i32 %v2_10001620 to i32*
  store i32 %v0_10001620, i32* %v3_10001620, align 4
  %v0_10001624 = load i32, i32* @r29, align 4
  %v1_10001624 = trunc i32 %v0_10001624 to i16
  %v2_10001624 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001624 = add i32 %v2_10001624, 4
  %v4_10001624 = inttoptr i32 %v3_10001624 to i16*
  store i16 %v1_10001624, i16* %v4_10001624, align 2
  %v0_10001628 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001628 = trunc i32 %v0_10001628 to i16
  %v2_10001628 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001628 = add i32 %v2_10001628, 2
  %v4_10001628 = inttoptr i32 %v3_10001628 to i16*
  store i16 %v1_10001628, i16* %v4_10001628, align 2
  %v0_1000162c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000162c, i32* %stack_var_-104, align 4
  br i1 %v2_1000160c, label %dec_label_pc_100015a8, label %dec_label_pc_100013e0

dec_label_pc_10001638:                            ; preds = %dec_label_pc_10001330
  %v0_10001638 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001638 = icmp eq i32 %v0_10001638, -1
  store i1 %v3_10001638, i1* %cr2_eq.global-to-local, align 1
  %v0_1000163c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000163c = icmp eq i32 %v0_1000163c, 0
  store i1 %v3_1000163c, i1* %cr3_eq.global-to-local, align 1
  %v1_10001640 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001640, i32* %r25.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001644, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100013e8.preheader

; uselistorder directives
  uselistorder i32 %v1_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_1000151c, { 1, 0 }
  uselistorder i32 %v0_1000150c, { 1, 0 }
  uselistorder i32 %v0_100014fc, { 1, 0 }
  uselistorder i32 %v1_100014f4, { 1, 0 }
  uselistorder i1 %v1_100014b4, { 1, 0 }
  uselistorder i1 %v0_100014b4, { 1, 0 }
  uselistorder i32 %v1_100014a4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000146c, { 1, 0 }
  uselistorder i32 %v1_10001400, { 1, 0 }
  uselistorder i32 %v1_10001374, { 1, 0 }
  uselistorder i32 %v1_1000136c, { 1, 0 }
  uselistorder i32 %v0_10001640, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10001314, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001540, { 1, 0 }
  uselistorder label %dec_label_pc_10001528, { 1, 0 }
  uselistorder label %dec_label_pc_10001444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100013ec, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001330, { 1, 0 }
}

define i32 @function_10001650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001650:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001654 = load i32, i32* @lr, align 4
  store i32 %v0_10001654, i32* %r0.global-to-local, align 4
  %v0_10001658 = call i32 @__asm_mfcr()
  store i32 %v0_10001658, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10001668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001658, i32* %r18.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100016a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100016ac = load i32, i32* @r30, align 4
  %v0_100016b0 = load i32, i32* @r31, align 4
  store i32 268441284, i32* @lr, align 4
  %v2_100016c0 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_100016c0, i32* %r19.global-to-local, align 4
  %v0_100016c8 = load i32, i32* @r28, align 4
  %v0_100016d4 = load i32, i32* @r29, align 4
  store i32 %v0_100016d4, i32* %r3.global-to-local, align 4
  store i32 268441308, i32* @lr, align 4
  %v4_100016d8 = inttoptr i32 %v0_100016c8 to i32*
  %v5_100016d8 = call i32 @function_100006a8(i32 %v0_100016d4, i32* %v4_100016d8, i32 2, i32 0)
  %v0_100016e8 = load i32, i32* @r28, align 4
  %v1_100016ec = urem i32 %v5_100016d8, 256
  store i32 %v1_100016ec, i32* %r14.global-to-local, align 4
  %v0_100016f0 = load i32, i32* @r29, align 4
  store i32 %v0_100016f0, i32* %r3.global-to-local, align 4
  store i32 268441336, i32* @lr, align 4
  %v4_100016f4 = inttoptr i32 %v0_100016e8 to i32*
  %v5_100016f4 = call i32 @function_100006a8(i32 %v0_100016f0, i32* %v4_100016f4, i32 3, i32 65535)
  %v0_100016f8 = load i32, i32* @r28, align 4
  store i32 %v5_100016f4, i32* %r24.global-to-local, align 4
  %v0_10001708 = load i32, i32* @r29, align 4
  store i32 %v0_10001708, i32* %r3.global-to-local, align 4
  store i32 268441360, i32* @lr, align 4
  %v4_1000170c = inttoptr i32 %v0_100016f8 to i32*
  %v5_1000170c = call i32 @function_100006a8(i32 %v0_10001708, i32* %v4_1000170c, i32 4, i32 64)
  %v0_10001710 = load i32, i32* @r28, align 4
  %v1_1000171c = urem i32 %v5_1000170c, 256
  store i32 %v1_1000171c, i32* %r20.global-to-local, align 4
  %v0_10001720 = load i32, i32* @r29, align 4
  store i32 %v0_10001720, i32* %r3.global-to-local, align 4
  store i32 268441384, i32* @lr, align 4
  %v4_10001724 = inttoptr i32 %v0_10001710 to i32*
  %v5_10001724 = call i32 @function_100006a8(i32 %v0_10001720, i32* %v4_10001724, i32 5, i32 1)
  %v0_10001734 = load i32, i32* @r28, align 4
  %v1_10001738 = urem i32 %v5_10001724, 256
  store i32 %v1_10001738, i32* @r31, align 4
  %v0_1000173c = load i32, i32* @r29, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* @lr, align 4
  %v4_10001740 = inttoptr i32 %v0_10001734 to i32*
  %v5_10001740 = call i32 @function_100006a8(i32 %v0_1000173c, i32* %v4_10001740, i32 6, i32 65535)
  %v0_10001748 = load i32, i32* @r28, align 4
  store i32 %v5_10001740, i32* %r26.global-to-local, align 4
  %v0_10001758 = load i32, i32* @r29, align 4
  store i32 %v0_10001758, i32* %r3.global-to-local, align 4
  store i32 268441440, i32* @lr, align 4
  %v4_1000175c = inttoptr i32 %v0_10001748 to i32*
  %v5_1000175c = call i32 @function_100006a8(i32 %v0_10001758, i32* %v4_1000175c, i32 7, i32 65535)
  %v0_10001760 = load i32, i32* @r28, align 4
  store i32 %v5_1000175c, i32* %r27.global-to-local, align 4
  %v0_10001770 = load i32, i32* @r29, align 4
  store i32 %v0_10001770, i32* %r3.global-to-local, align 4
  store i32 268441464, i32* @lr, align 4
  %v4_10001774 = inttoptr i32 %v0_10001760 to i32*
  %v5_10001774 = call i32 @function_100006a8(i32 %v0_10001770, i32* %v4_10001774, i32 0, i32 512)
  %v0_10001778 = load i32, i32* @r28, align 4
  store i32 %v5_10001774, i32* %r15.global-to-local, align 4
  %v0_10001788 = load i32, i32* @r29, align 4
  store i32 %v0_10001788, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v4_1000178c = inttoptr i32 %v0_10001778 to i32*
  %v5_1000178c = call i32 @function_100006a8(i32 %v0_10001788, i32* %v4_1000178c, i32 1, i32 1)
  %v0_10001790 = load i32, i32* @r28, align 4
  %v1_1000179c = urem i32 %v5_1000178c, 256
  store i32 %v1_1000179c, i32* %r21.global-to-local, align 4
  %v0_100017a0 = load i32, i32* @r29, align 4
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  store i32 268441512, i32* @lr, align 4
  %v4_100017a4 = inttoptr i32 %v0_10001790 to i32*
  %v5_100017a4 = call i32 @function_100006a8(i32 %v0_100017a0, i32* %v4_100017a4, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100017ac = load i32, i32* @global_var_1001c188.16, align 4
  %v0_100017b0 = load i32, i32* @r28, align 4
  store i32 %v5_100017a4, i32* %r30.global-to-local, align 4
  %v0_100017bc = load i32, i32* @r29, align 4
  store i32 %v0_100017bc, i32* %r3.global-to-local, align 4
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = inttoptr i32 %v0_100017b0 to i32*
  %v5_100017c0 = call i32 @function_100006a8(i32 %v0_100017bc, i32* %v4_100017c0, i32 25, i32 %v3_100017ac)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441560, i32* @lr, align 4
  %v3_100017d4 = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  store i32 %v3_100017d4, i32* %r3.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v3_100017d4, -1
  store i1 %v3_100017d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017d4, i32* %r23.global-to-local, align 4
  br i1 %v3_100017d8, label %dec_label_pc_1000197c, label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_10001650
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268441600, i32* @lr, align 4
  %v4_100017fc = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_100017f0, i32 4)
  store i32 %v4_100017fc, i32* %r3.global-to-local, align 4
  %v3_10001800 = icmp eq i32 %v4_100017fc, -1
  store i1 %v3_10001800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001800, label %dec_label_pc_10001974, label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_100017e4
  %v0_10001808 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001808 = icmp slt i32 %v0_10001808, 0
  %v3_10001808 = icmp eq i32 %v0_10001808, 0
  store i1 %v1_10001808, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001814 = urem i32 %v0_10001814, 65536
  store i32 %v1_10001814, i32* %r24.global-to-local, align 4
  %v0_10001818 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001818 = urem i32 %v0_10001818, 65536
  store i32 %v1_10001818, i32* %r16.global-to-local, align 4
  %v0_1000181c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000181c = urem i32 %v0_1000181c, 65536
  store i32 %v1_1000181c, i32* %r17.global-to-local, align 4
  %v0_10001820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001820 = urem i32 %v0_10001820, 256
  store i32 %v1_10001820, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10001808, 1
  br i1 %tmp37, label %dec_label_pc_100019dc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_10001808
  %v0_10001828 = load i32, i32* @r31, align 4
  %v3_10001828 = icmp eq i32 %v0_10001828, 0
  store i1 %v3_10001828, i1* %cr2_eq.global-to-local, align 1
  %v3_1000182c = icmp eq i32 %v1_10001820, 0
  store i1 %v3_1000182c, i1* %cr3_eq.global-to-local, align 1
  %v0_10001830 = load i32, i32* %r15.global-to-local, align 4
  %v1_10001830 = urem i32 %v0_10001830, 65536
  %v0_10001814.not = or i32 %v0_10001814, -65536
  %v1_10001834 = xor i32 %v0_10001814.not, 65535
  store i32 %v1_10001834, i32* %r11.global-to-local, align 4
  %v1_1000183c = add nuw nsw i32 %v1_10001830, 66
  store i32 %v1_1000183c, i32* %r0.global-to-local, align 4
  %v1_10001840 = add nuw nsw i32 %v1_10001830, 28
  store i32 %v1_10001840, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001830, 66
  %v1_10001844 = urem i32 %fold, 65536
  store i32 %v1_10001844, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001830, 28
  %v1_10001848 = urem i32 %fold8, 65536
  store i32 %v1_10001848, i32* %r26.global-to-local, align 4
  %v1_1000184c = urem i32 %v1_10001834, 65536
  store i32 %v1_1000184c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001830, 8
  %v1_10001850 = urem i32 %fold9, 65536
  store i32 %v1_10001850, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001884

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001950
  %v0_1000185c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 16
  %v2_1000185c = inttoptr i32 %v1_1000185c to i32*
  %v3_1000185c = load i32, i32* %v2_1000185c, align 4
  store i32 %v3_1000185c, i32* %r0.global-to-local, align 4
  %v1_10001860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001860 = add i32 %v1_10001860, 16
  %v3_10001860 = inttoptr i32 %v2_10001860 to i32*
  store i32 %v3_1000185c, i32* %v3_10001860, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001864:                            ; preds = %dec_label_pc_1000196c, %dec_label_pc_1000185c
  %v3_10001864 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001864, i32* %r9.global-to-local, align 4
  %v0_10001868 = load i32, i32* @r28, align 4
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v2_10001868 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001868 = add i32 %v2_10001868, 4
  %v4_10001868 = inttoptr i32 %v3_10001868 to i16*
  store i16 %v1_10001868, i16* %v4_10001868, align 2
  %v0_1000186c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000186c = add i32 %v0_1000186c, 1
  store i32 %v1_1000186c, i32* %r31.global-to-local, align 4
  %v0_10001870 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001870 = trunc i32 %v0_10001870 to i16
  %v2_10001870 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001870 = inttoptr i32 %v2_10001870 to i16*
  store i16 %v1_10001870, i16* %v3_10001870, align 2
  %v0_10001874 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001874 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001874 = icmp slt i32 %v0_10001874, %v1_10001874
  %v4_10001874 = icmp eq i32 %v0_10001874, %v1_10001874
  store i1 %v4_10001874, i1* %cr7_eq.global-to-local, align 1
  %v0_10001878 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001878 = trunc i32 %v0_10001878 to i16
  %v2_10001878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001878 = add i32 %v2_10001878, 2
  %v4_10001878 = inttoptr i32 %v3_10001878 to i16*
  store i16 %v1_10001878, i16* %v4_10001878, align 2
  %v0_1000187c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000187c, i32* %stack_var_-104, align 4
  br i1 %v2_10001874, label %dec_label_pc_10001884, label %dec_label_pc_100019e0

dec_label_pc_10001884:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_10001828
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v2_1000188c = call i32 @function_10009e98(i32 1510, i32 4)
  store i32 %v2_1000188c, i32* %r3.global-to-local, align 4
  %v3_10001890 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* @r31, align 4
  %v1_10001894 = mul i32 %v0_10001894, 4
  store i32 %v1_10001894, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000189c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000189c = add i32 %v1_1000189c, %v1_10001894
  %v4_1000189c = inttoptr i32 %v3_1000189c to i32*
  store i32 %v2_1000188c, i32* %v4_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100018a0 = mul i32 %v0_100018a0, 4
  store i32 %v1_100018a0, i32* %r9.global-to-local, align 4
  %v1_100018a4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100018a4 = add i32 %v1_100018a4, %v1_100018a0
  %v3_100018a4 = inttoptr i32 %v2_100018a4 to i32*
  %v4_100018a4 = load i32, i32* %v3_100018a4, align 4
  store i32 %v4_100018a4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100018ac = inttoptr i32 %v4_100018a4 to i32*
  %v2_100018ac = load i32, i32* %v1_100018ac, align 4
  store i32 %v2_100018ac, i32* %r0.global-to-local, align 4
  %v1_100018b0 = add i32 %v4_100018a4, 38
  store i32 %v1_100018b0, i32* %r30.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100018b4 = trunc i32 %v0_100018b4 to i8
  %v3_100018b4 = add i32 %v4_100018a4, 8
  %v4_100018b4 = inttoptr i32 %v3_100018b4 to i8*
  store i8 %v1_100018b4, i8* %v4_100018b4, align 1
  %v0_100018b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018b8 = add i32 %v0_100018b8, 58
  store i32 %v1_100018b8, i32* %r29.global-to-local, align 4
  %v1_100018bc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100018bc, i32* %r0.global-to-local, align 4
  %v0_100018c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100018c0 = trunc i32 %v0_100018c0 to i16
  %v2_100018c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018c0 = add i32 %v2_100018c0, 4
  %v4_100018c0 = inttoptr i32 %v3_100018c0 to i16*
  store i16 %v1_100018c0, i16* %v4_100018c0, align 2
  %v1_100018c4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100018c4, i32* %r0.global-to-local, align 4
  %v0_100018c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018c8 = add i32 %v0_100018c8, 20
  store i32 %v1_100018c8, i32* %r9.global-to-local, align 4
  %v2_100018cc = inttoptr i32 %v0_100018c8 to i32*
  store i32 %v1_100018c4, i32* %v2_100018cc, align 4
  %v0_100018d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018d0 = add i32 %v0_100018d0, 24
  store i32 %v1_100018d0, i32* %r11.global-to-local, align 4
  %v0_100018d4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100018d4 = trunc i32 %v0_100018d4 to i8
  %v3_100018d4 = add i32 %v0_100018d0, 1
  %v4_100018d4 = inttoptr i32 %v3_100018d4 to i8*
  store i8 %v1_100018d4, i8* %v4_100018d4, align 1
  %v0_100018d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100018d8 = trunc i32 %v0_100018d8 to i16
  %v2_100018d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018d8 = add i32 %v2_100018d8, 2
  %v4_100018d8 = inttoptr i32 %v3_100018d8 to i16*
  store i16 %v1_100018d8, i16* %v4_100018d8, align 2
  %v0_100018dc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100018dc, label %dec_label_pc_100018e8, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001884
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100018e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018e4 = add i32 %v2_100018e4, 6
  %v4_100018e4 = inttoptr i32 %v3_100018e4 to i16*
  store i16 16384, i16* %v4_100018e4, align 2
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_10001884, %dec_label_pc_100018e0
  %v2_100018ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100018ec = add i32 %v2_100018ec, 9
  %v4_100018ec = inttoptr i32 %v3_100018ec to i8*
  store i8 47, i8* %v4_100018ec, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100018f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100018f4 = add i32 %v2_100018f4, 2
  %v4_100018f4 = inttoptr i32 %v3_100018f4 to i16*
  store i16 25944, i16* %v4_100018f4, align 2
  %v2_100018fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100018fc = add i32 %v2_100018fc, 12
  %v4_100018fc = inttoptr i32 %v3_100018fc to i16*
  store i16 2048, i16* %v4_100018fc, align 2
  %v3_10001900 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100017c0, i32* %r11.global-to-local, align 4
  %v1_10001908 = mul i32 %v3_10001900, 24
  store i32 %v1_10001908, i32* %r9.global-to-local, align 4
  %v0_1000190c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000190c = add i32 %v0_1000190c, 38
  %v2_1000190c = inttoptr i32 %v1_1000190c to i32*
  %v3_1000190c = load i32, i32* %v2_1000190c, align 4
  store i32 %v3_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = add i32 %v0_1000190c, 12
  %v3_10001910 = inttoptr i32 %v2_10001910 to i32*
  store i32 %v5_100017c0, i32* %v3_10001910, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001918 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001918 = add i32 %v1_10001918, %v0_10001918
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_1000191c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000191c, i32* %r0.global-to-local, align 4
  %v0_10001920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v0_10001920, 16
  %v2_10001920 = inttoptr i32 %v1_10001920 to i32*
  %v3_10001920 = load i32, i32* %v2_10001920, align 4
  store i32 %v3_10001920, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001928 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001928, i32* %r0.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000192c = add i32 %v1_1000192c, 38
  %v3_1000192c = inttoptr i32 %v2_1000192c to i32*
  store i32 %v1_10001928, i32* %v3_1000192c, align 4
  %v0_10001930 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001930 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001930 = add i32 %v1_10001930, 16
  %v3_10001930 = inttoptr i32 %v2_10001930 to i32*
  store i32 %v0_10001930, i32* %v3_10001930, align 4
  %v0_10001934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001934 = trunc i32 %v0_10001934 to i8
  %v2_10001934 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001934 = add i32 %v2_10001934, 1
  %v4_10001934 = inttoptr i32 %v3_10001934 to i8*
  store i8 %v1_10001934, i8* %v4_10001934, align 1
  %v0_10001938 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001938 = trunc i32 %v0_10001938 to i16
  %v2_10001938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001938 = add i32 %v2_10001938, 2
  %v4_10001938 = inttoptr i32 %v3_10001938 to i16*
  store i16 %v1_10001938, i16* %v4_10001938, align 2
  %v0_1000193c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000193c = trunc i32 %v0_1000193c to i16
  %v2_1000193c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000193c = add i32 %v2_1000193c, 4
  %v4_1000193c = inttoptr i32 %v3_1000193c to i16*
  store i16 %v1_1000193c, i16* %v4_1000193c, align 2
  %v0_10001940 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001940 = trunc i32 %v0_10001940 to i8
  %v2_10001940 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001940 = add i32 %v2_10001940, 8
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 %v1_10001940, i8* %v4_10001940, align 1
  %v0_10001944 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001944, label %dec_label_pc_10001950, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018e8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000194c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000194c = add i32 %v2_1000194c, 6
  %v4_1000194c = inttoptr i32 %v3_1000194c to i16*
  store i16 16384, i16* %v4_1000194c, align 2
  br label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %dec_label_pc_100018e8, %dec_label_pc_10001948
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001954 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001954 = add i32 %v2_10001954, 9
  %v4_10001954 = inttoptr i32 %v3_10001954 to i8*
  store i8 17, i8* %v4_10001954, align 1
  %v0_10001958 = call i32 @function_10005d68()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001958, -1024
  store i32 %v1_1000195c, i32* %r0.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001960 = add i32 %v1_10001960, 12
  %v3_10001960 = inttoptr i32 %v2_10001960 to i32*
  store i32 %v0_10001958, i32* %v3_10001960, align 4
  %v0_10001964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001964 = sub i32 -1, %v0_10001964
  store i32 %v1_10001964, i32* %r0.global-to-local, align 4
  %v0_10001968 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001968, label %dec_label_pc_1000196c, label %dec_label_pc_1000185c

dec_label_pc_1000196c:                            ; preds = %dec_label_pc_10001950
  %v1_1000196c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000196c = add i32 %v1_1000196c, 16
  %v3_1000196c = inttoptr i32 %v2_1000196c to i32*
  store i32 %v1_10001964, i32* %v3_1000196c, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001974:                            ; preds = %dec_label_pc_100017e4
  %v0_10001974 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001974, i32* %r3.global-to-local, align 4
  store i32 268441980, i32* @lr, align 4
  %v0_10001978 = call i32 @function_10008e20()
  store i32 %v0_10001978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_10001650, %dec_label_pc_10001974
  store i32 %v0_10001668, i32* %r0.global-to-local, align 4
  %v1_10001990 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001658)
  store i32 %v0_1000169c, i32* %r28.global-to-local, align 4
  store i32 %v0_100016a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100016ac, i32* %r30.global-to-local, align 4
  store i32 %v0_100016b0, i32* %r31.global-to-local, align 4
  %v0_100019d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100019d8

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_10001808
  %v3_100019dc = icmp eq i32 %v1_10001820, 0
  store i1 %v3_100019dc, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100019e0

dec_label_pc_100019e0:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_100019dc
  store i32 %v5_100017c0, i32* %r0.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100019e4 = icmp eq i32 %v0_100019e4, 0
  store i1 %v3_100019e4, i1* %cr2_eq.global-to-local, align 1
  %v2_100019e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100019e8, i32* %r14.global-to-local, align 4
  %v0_100019ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100019ec = add i32 %v0_100019ec, 8
  store i32 %v1_100019ec, i32* %r21.global-to-local, align 4
  %v3_100019f0 = icmp eq i32 %v5_100017c0, -1
  store i1 %v3_100019f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100019f4 = add i32 %v0_100019ec, 66
  store i32 %v1_100019f4, i32* %r22.global-to-local, align 4
  %v0_100019f8 = call i32 @__asm_mfcr()
  store i32 %v0_100019f8, i32* %r3.global-to-local, align 4
  %v1_100019fc = mul i32 %v0_100019f8, 268435456
  store i32 %v1_100019fc, i32* %r20.global-to-local, align 4
  %v2_10001a90 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10001ab4 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10001ac4 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10001a00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001a00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001a00.outer

dec_label_pc_10001a00.outer:                      ; preds = %dec_label_pc_10001b64, %dec_label_pc_100019e0
  %v1_10001a00.ph = phi i1 [ %v1_10001a00.pre, %dec_label_pc_100019e0 ], [ %v1_10001b64, %dec_label_pc_10001b64 ]
  %v0_10001a00.ph = phi i1 [ %v0_10001a00.pre, %dec_label_pc_100019e0 ], [ %v0_10001b64, %dec_label_pc_10001b64 ]
  %v2_10001a00 = or i1 %v1_10001a00.ph, %v0_10001a00.ph
  br label %dec_label_pc_10001a00

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_10001a00.outer, %dec_label_pc_10001a00
  br i1 %v2_10001a00, label %dec_label_pc_10001a00, label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001a00, %dec_label_pc_10001b64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001a04
  %v0_10001a14 = phi i32 [ %v1_10001b54, %dec_label_pc_10001ad4 ], [ 0, %dec_label_pc_10001a04 ]
  %v1_10001a14 = mul i32 %v0_10001a14, 24
  store i32 %v1_10001a14, i32* %r0.global-to-local, align 4
  %v1_10001a18 = mul i32 %v0_10001a14, 4
  store i32 %v1_10001a18, i32* %r11.global-to-local, align 4
  %v1_10001a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10001a1c = add i32 %v1_10001a1c, %v1_10001a18
  %v3_10001a1c = inttoptr i32 %v2_10001a1c to i32*
  %v4_10001a1c = load i32, i32* %v3_10001a1c, align 4
  store i32 %v4_10001a1c, i32* %r28.global-to-local, align 4
  %v1_10001a20 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a20 = add i32 %v1_10001a20, %v1_10001a14
  %v1_10001a24 = add i32 %v2_10001a20, 20
  %v2_10001a24 = inttoptr i32 %v1_10001a24 to i8*
  %v3_10001a24 = load i8, i8* %v2_10001a24, align 1
  %v4_10001a24 = zext i8 %v3_10001a24 to i32
  store i32 %v4_10001a24, i32* %r9.global-to-local, align 4
  %v1_10001a28 = add i32 %v4_10001a1c, 24
  store i32 %v1_10001a28, i32* @r30, align 4
  %v1_10001a2c = add i32 %v4_10001a1c, 38
  store i32 %v1_10001a2c, i32* @r31, align 4
  %v1_10001a30 = add i32 %v4_10001a1c, 58
  store i32 %v1_10001a30, i32* %r27.global-to-local, align 4
  %v3_10001a34 = icmp eq i8 %v3_10001a24, 31
  store i1 %v3_10001a34, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10001a24, 32
  br i1 %tmp39, label %dec_label_pc_10001b6c, label %dec_label_pc_10001a3c

dec_label_pc_10001a3c:                            ; preds = %dec_label_pc_10001a14
  %v0_10001a3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10001a3c = mul i32 %v0_10001a3c, 16
  %v2_10001a3c = udiv i32 %v0_10001a3c, 268435456
  %v3_10001a3c = or i32 %v2_10001a3c, %v1_10001a3c
  store i32 %v3_10001a3c, i32* %r20.global-to-local, align 4
  %v1_10001a40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001a3c)
  %v1_10001a44 = mul nuw i32 %v2_10001a3c, 268435456
  %v2_10001a44 = urem i32 %v0_10001a3c, 268435456
  %v3_10001a44 = or i32 %v1_10001a44, %v2_10001a44
  store i32 %v3_10001a44, i32* %r20.global-to-local, align 4
  %v0_10001a48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001a48, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001a4c:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 65535, i32* @r29, align 4
  %v0_10001a54 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001a54 = icmp eq i32 %v0_10001a54, 65535
  store i1 %v4_10001a54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a54, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v1_10001a5c = phi i32 [ %v1_10001bb0, %dec_label_pc_10001ba0 ], [ 65535, %dec_label_pc_10001a4c ]
  %v0_10001a5c = load i32, i32* %r16.global-to-local, align 4
  %v4_10001a5c = icmp eq i32 %v0_10001a5c, %v1_10001a5c
  store i1 %v4_10001a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a5c, label %dec_label_pc_10001bd8, label %dec_label_pc_10001a64

dec_label_pc_10001a64:                            ; preds = %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge, %dec_label_pc_10001a5c
  %v1_10001a64 = phi i32 [ %v1_10001a64.pre, %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge ], [ %v1_10001a5c, %dec_label_pc_10001a5c ]
  %v0_10001a64 = load i32, i32* %r17.global-to-local, align 4
  %v4_10001a64 = icmp eq i32 %v0_10001a64, %v1_10001a64
  store i1 %v4_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a64, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001a6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001a6c, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001a70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001a70 = add i32 %v0_10001a70, 16
  %v2_10001a70 = inttoptr i32 %v1_10001a70 to i32*
  %v3_10001a70 = load i32, i32* %v2_10001a70, align 4
  store i32 %v3_10001a70, i32* %r0.global-to-local, align 4
  %v1_10001a74 = load i32, i32* @r31, align 4
  %v2_10001a74 = add i32 %v1_10001a74, 16
  %v3_10001a74 = inttoptr i32 %v2_10001a74 to i32*
  store i32 %v3_10001a70, i32* %v3_10001a74, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001a70
  %v0_10001a78 = call i32 @function_10005d68()
  store i32 %v0_10001a78, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a78, i32* %stack_var_-100, align 4
  %v0_10001a80 = call i32 @function_10005d68()
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a80, i32* %stack_var_-96, align 4
  %v0_10001a88 = call i32 @function_10005d68()
  store i32 %v0_10001a88, i32* %stack_var_-92, align 4
  %v0_10001a94 = load i32, i32* @r30, align 4
  store i32 %v0_10001a94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001aa0.17 to i32), i32* @lr, align 4
  %v3_10001a9c = call i32 @function_100086e4(i32 %v0_10001a94, i32 %v2_10001a90, i32 4)
  %v0_10001aa0 = load i32, i32* @r30, align 4
  %v1_10001aa0 = add i32 %v0_10001aa0, 6
  store i32 %v1_10001aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ab0.18 to i32), i32* @lr, align 4
  %v3_10001aac = call i32 @function_100086e4(i32 %v1_10001aa0, i32 %v2_100019e8, i32 4)
  %v0_10001ab0 = load i32, i32* @r30, align 4
  %v1_10001ab0 = add i32 %v0_10001ab0, 4
  store i32 %v1_10001ab0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ac0.19 to i32), i32* @lr, align 4
  %v3_10001abc = call i32 @function_100086e4(i32 %v1_10001ab0, i32 %v2_10001ab4, i32 2)
  %v0_10001ac0 = load i32, i32* @r30, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 10
  store i32 %v1_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @function_100086e4(i32 %v1_10001ac0, i32 %v2_10001ac4, i32 2)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v0_10001ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ad0, label %dec_label_pc_10001ad4, label %dec_label_pc_10001c00

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001c00
  %v0_10001ad4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001ad4 = trunc i32 %v0_10001ad4 to i16
  %v2_10001ad4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001ad4 = add i32 %v2_10001ad4, 10
  %v4_10001ad4 = inttoptr i32 %v3_10001ad4 to i16*
  store i16 %v1_10001ad4, i16* %v4_10001ad4, align 2
  %v0_10001adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v2_10001ae0 = call i32 @function_100043cc(i32 %v0_10001adc, i32 20)
  %v3_10001ae0 = trunc i32 %v2_10001ae0 to i16
  %v4_10001ae8 = add i32 %v0_10001adc, 10
  %v5_10001ae8 = inttoptr i32 %v4_10001ae8 to i16*
  store i16 %v3_10001ae0, i16* %v5_10001ae8, align 2
  %v0_10001aec = load i32, i32* @r31, align 4
  store i32 %v0_10001aec, i32* @r3, align 4
  %v0_10001af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001af0 = trunc i32 %v0_10001af0 to i16
  %v3_10001af0 = add i32 %v0_10001aec, 10
  %v4_10001af0 = inttoptr i32 %v3_10001af0 to i16*
  store i16 %v1_10001af0, i16* %v4_10001af0, align 2
  %v2_10001af4 = call i32 @function_100043cc(i32 %v0_10001aec, i32 20)
  %v3_10001af4 = trunc i32 %v2_10001af4 to i16
  %v0_10001af8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af8, i32* @r4, align 4
  %v3_10001afc = load i32, i32* @r31, align 4
  %v4_10001afc = add i32 %v3_10001afc, 10
  %v5_10001afc = inttoptr i32 %v4_10001afc to i16*
  store i16 %v3_10001af4, i16* %v5_10001afc, align 2
  %v0_10001b00 = load i32, i32* %r21.global-to-local, align 4
  %v0_10001b04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b04 = trunc i32 %v0_10001b04 to i16
  %v2_10001b04 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001b04 = add i32 %v2_10001b04, 6
  %v4_10001b04 = inttoptr i32 %v3_10001b04 to i16*
  store i16 %v1_10001b04, i16* %v4_10001b04, align 2
  %v0_10001b08 = load i32, i32* @r31, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 4
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i16*
  %v3_10001b0c = load i16, i16* %v2_10001b0c, align 2
  %v4_10001b0c = zext i16 %v3_10001b0c to i32
  %v4_10001b10 = call i32 @function_10004430(i32 %v0_10001b08, i32 %v0_10001af8, i32 %v4_10001b0c, i32 %v0_10001b00)
  %v5_10001b10 = trunc i32 %v4_10001b10 to i16
  store i32 %v4_10001b10, i32* %r3.global-to-local, align 4
  %v3_10001b14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b14, i32* %r0.global-to-local, align 4
  %v0_10001b18 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001b18 = add i32 %v0_10001b18, 16
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i32*
  %v3_10001b18 = load i32, i32* %v2_10001b18, align 4
  store i32 %v3_10001b18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001b20 = mul i32 %v3_10001b14, 24
  store i32 %v1_10001b20, i32* %r0.global-to-local, align 4
  %v3_10001b24 = load i32, i32* %r27.global-to-local, align 4
  %v4_10001b24 = add i32 %v3_10001b24, 6
  %v5_10001b24 = inttoptr i32 %v4_10001b24 to i16*
  store i16 %v5_10001b10, i16* %v5_10001b24, align 2
  %v0_10001b28 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001b2c, i32* %r3.global-to-local, align 4
  %v0_10001b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b30 = add i32 %v1_10001b30, %v0_10001b30
  %v0_10001b34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b34 = trunc i32 %v0_10001b34 to i16
  %v5_10001b34 = inttoptr i32 %v2_10001b30 to i16*
  store i16 %v3_10001b34, i16* %v5_10001b34, align 2
  %v0_10001b38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001b38 = add i32 %v2_10001b30, 4
  %v3_10001b38 = inttoptr i32 %v2_10001b38 to i32*
  store i32 %v0_10001b38, i32* %v3_10001b38, align 4
  %v0_10001b3c = load i32, i32* %r22.global-to-local, align 4
  %v0_10001b40 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b40 = trunc i32 %v0_10001b40 to i16
  %v3_10001b40 = add i32 %v2_10001b30, 2
  %v4_10001b40 = inttoptr i32 %v3_10001b40 to i16*
  store i16 %v1_10001b40, i16* %v4_10001b40, align 2
  store i32 268442448, i32* @lr, align 4
  %v6_10001b4c = call i32 @function_10009ac0(i32 %v0_10001b2c, i32 %v0_10001b28, i32 %v0_10001b3c, i32 16384, i32 %v2_10001b30, i32 16)
  store i32 %v6_10001b4c, i32* %r3.global-to-local, align 4
  %v3_10001b50 = load i32, i32* %stack_var_-104, align 4
  %v1_10001b54 = add i32 %v3_10001b50, 1
  store i32 %v1_10001b54, i32* %r9.global-to-local, align 4
  %v1_10001b58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001b58 = icmp slt i32 %v1_10001b54, %v1_10001b58
  %v4_10001b58 = icmp eq i32 %v1_10001b54, %v1_10001b58
  store i1 %v4_10001b58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001b54, i32* %stack_var_-104, align 4
  br i1 %v2_10001b58, label %dec_label_pc_10001a14, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001ad4
  %v0_10001b64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001b64 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001b64 = or i1 %v0_10001b64, %v1_10001b64
  br i1 %v2_10001b64, label %dec_label_pc_10001a00.outer, label %dec_label_pc_10001a04

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001b6c = add i32 %v2_10001a20, 16
  %v2_10001b6c = inttoptr i32 %v1_10001b6c to i32*
  %v3_10001b6c = load i32, i32* %v2_10001b6c, align 4
  store i32 %v3_10001b6c, i32* %r29.global-to-local, align 4
  %v0_10001b70 = call i32 @function_10005d68()
  store i32 %v0_10001b70, i32* %r3.global-to-local, align 4
  %v3_10001b74 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b74, i32* %r9.global-to-local, align 4
  %v0_10001b78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b78 = mul i32 %v0_10001b78, 16
  %v2_10001b78 = udiv i32 %v0_10001b78, 268435456
  %v3_10001b78 = or i32 %v2_10001b78, %v1_10001b78
  store i32 %v3_10001b78, i32* %r20.global-to-local, align 4
  %v1_10001b7c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001b78)
  %v1_10001b80 = mul nuw i32 %v2_10001b78, 268435456
  %v2_10001b80 = urem i32 %v0_10001b78, 268435456
  %v3_10001b80 = or i32 %v1_10001b80, %v2_10001b80
  store i32 %v3_10001b80, i32* %r20.global-to-local, align 4
  %v0_10001b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b84 = mul i32 %v0_10001b84, 24
  %v1_10001b88 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b88 = add i32 %v1_10001b88, %v1_10001b84
  store i32 %v2_10001b88, i32* %r9.global-to-local, align 4
  %v1_10001b8c = add i32 %v2_10001b88, 20
  %v2_10001b8c = inttoptr i32 %v1_10001b8c to i8*
  %v3_10001b8c = load i8, i8* %v2_10001b8c, align 1
  %v4_10001b8c = zext i8 %v3_10001b8c to i32
  store i32 %v4_10001b8c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001b8c, 64
  %v2_10001b90 = zext i8 %tmp to i32
  %v3_10001b90 = lshr i32 %v0_10001b70, %v2_10001b90
  store i32 %v3_10001b90, i32* %r3.global-to-local, align 4
  %v0_10001b94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b94 = add i32 %v3_10001b90, %v0_10001b94
  store i32 %v2_10001b94, i32* %r29.global-to-local, align 4
  %v1_10001b98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001b98 = add i32 %v1_10001b98, 16
  %v3_10001b98 = inttoptr i32 %v2_10001b98 to i32*
  store i32 %v2_10001b94, i32* %v3_10001b98, align 4
  %v0_10001b9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001b9c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001ba4 = call i32 @function_10005d68()
  store i32 %v0_10001ba4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bac = add i32 %v1_10001bac, 12
  %v3_10001bac = inttoptr i32 %v2_10001bac to i32*
  store i32 %v0_10001ba4, i32* %v3_10001bac, align 4
  %v0_10001bb0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001bb0 = load i32, i32* @r29, align 4
  %v4_10001bb0 = icmp eq i32 %v0_10001bb0, %v1_10001bb0
  store i1 %v4_10001bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001bb0, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v0_10001bb8 = call i32 @function_10005d68()
  %v0_10001bbc = load i32, i32* %r16.global-to-local, align 4
  %v1_10001bbc = load i32, i32* @r29, align 4
  %v4_10001bbc = icmp eq i32 %v0_10001bbc, %v1_10001bbc
  store i1 %v4_10001bbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10001bc0 = urem i32 %v0_10001bb8, 65536
  store i32 %v1_10001bc0, i32* %r3.global-to-local, align 4
  %v1_10001bc4 = add nsw i32 %v1_10001bc0, -1000
  store i32 %v1_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = trunc i32 %v0_10001bb8 to i16
  %v2_10001bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001bc8 = add i32 %v2_10001bc8, 4
  %v4_10001bc8 = inttoptr i32 %v3_10001bc8 to i16*
  store i16 %v1_10001bc8, i16* %v4_10001bc8, align 2
  %v0_10001bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10001bcc = sub i32 -1, %v0_10001bcc
  store i32 %v1_10001bcc, i32* %r0.global-to-local, align 4
  %v1_10001bd0 = trunc i32 %v1_10001bcc to i16
  %v2_10001bd0 = load i32, i32* @r31, align 4
  %v3_10001bd0 = add i32 %v2_10001bd0, 4
  %v4_10001bd0 = inttoptr i32 %v3_10001bd0 to i16*
  store i16 %v1_10001bd0, i16* %v4_10001bd0, align 2
  br i1 %v4_10001bbc, label %dec_label_pc_10001bd8, label %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge

dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge: ; preds = %dec_label_pc_10001bb8
  %v1_10001a64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001a64

dec_label_pc_10001bd8:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001a5c
  %v0_10001bd8 = call i32 @function_10005d68()
  %v1_10001bd8 = trunc i32 %v0_10001bd8 to i16
  store i32 %v0_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r17.global-to-local, align 4
  %v1_10001bdc = load i32, i32* @r29, align 4
  %v4_10001bdc = icmp eq i32 %v0_10001bdc, %v1_10001bdc
  store i1 %v4_10001bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10001be0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001be0 = add i32 %v3_10001be0, 58
  %v5_10001be0 = inttoptr i32 %v4_10001be0 to i16*
  store i16 %v1_10001bd8, i16* %v5_10001be0, align 2
  br i1 %v4_10001bdc, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001be8:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001be8 = call i32 @function_10005d68()
  %v1_10001be8 = trunc i32 %v0_10001be8 to i16
  store i32 %v0_10001be8, i32* %r3.global-to-local, align 4
  %v3_10001bec = load i32, i32* %r27.global-to-local, align 4
  %v4_10001bec = add i32 %v3_10001bec, 2
  %v5_10001bec = inttoptr i32 %v4_10001bec to i16*
  store i16 %v1_10001be8, i16* %v5_10001bec, align 2
  %v0_10001bf0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001bf0, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001bf4 = call i32 @function_10005d68()
  store i32 %v0_10001bf4, i32* %r3.global-to-local, align 4
  %v1_10001bf8 = load i32, i32* @r31, align 4
  %v2_10001bf8 = add i32 %v1_10001bf8, 16
  %v3_10001bf8 = inttoptr i32 %v2_10001bf8 to i32*
  store i32 %v0_10001bf4, i32* %v3_10001bf8, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001c00:                            ; preds = %dec_label_pc_10001a78
  %v0_10001c00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001c00, 8
  store i32 %v1_10001c00, i32* @r3, align 4
  %v0_10001c04 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10001c04, i32* @r4, align 4
  %v0_10001c08 = call i32 @function_10005f3c()
  store i32 %v0_10001c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ad4

; uselistorder directives
  uselistorder i32 %v0_10001be8, { 1, 0 }
  uselistorder i32 %v0_10001bd8, { 1, 0 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v1_10001bc0, { 1, 0 }
  uselistorder i32 %v0_10001bb8, { 1, 0 }
  uselistorder i32 %v1_10001bb0, { 1, 0 }
  uselistorder i32 %v0_10001b78, { 2, 1, 0 }
  uselistorder i1 %v1_10001b64, { 1, 0 }
  uselistorder i1 %v0_10001b64, { 1, 0 }
  uselistorder i32 %v1_10001b54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001b30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001b10, { 1, 0 }
  uselistorder i32 %v0_10001a3c, { 2, 1, 0 }
  uselistorder i32 %v4_10001a1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001a18, { 1, 0 }
  uselistorder i32 %v1_10001964, { 1, 0 }
  uselistorder i32 %v1_100018a0, { 1, 0 }
  uselistorder i32 %v1_10001894, { 1, 0 }
  uselistorder i32 %v1_10001830, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001820, { 1, 2, 0 }
  uselistorder i32 %v0_10001814, { 1, 0 }
  uselistorder i32 %v5_100017c0, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 29, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 23, 24, 25, 26, 12, 28, 29, 30, 21, 22 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a04, { 1, 0 }
  uselistorder label %dec_label_pc_10001a00, { 1, 0 }
  uselistorder label %dec_label_pc_100019e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000197c, { 1, 0 }
  uselistorder label %dec_label_pc_10001950, { 1, 0 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
}

define i32 @function_10001c10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001c10:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001c14 = load i32, i32* @lr, align 4
  store i32 %v0_10001c14, i32* %r0.global-to-local, align 4
  %v0_10001c18 = call i32 @__asm_mfcr()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10001c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001c18, i32* %r19.global-to-local, align 4
  %v0_10001c5c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001c64 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v0_10001c70 = load i32, i32* @r31, align 4
  store i32 268442756, i32* @lr, align 4
  %v2_10001c80 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_10001c80, i32* %r20.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r28, align 4
  %v0_10001c94 = load i32, i32* @r29, align 4
  store i32 %v0_10001c94, i32* %r3.global-to-local, align 4
  store i32 268442780, i32* @lr, align 4
  %v4_10001c98 = inttoptr i32 %v0_10001c88 to i32*
  %v5_10001c98 = call i32 @function_100006a8(i32 %v0_10001c94, i32* %v4_10001c98, i32 2, i32 0)
  %v0_10001ca8 = load i32, i32* @r28, align 4
  %v1_10001cac = urem i32 %v5_10001c98, 256
  store i32 %v1_10001cac, i32* %r14.global-to-local, align 4
  %v0_10001cb0 = load i32, i32* @r29, align 4
  store i32 %v0_10001cb0, i32* %r3.global-to-local, align 4
  store i32 268442808, i32* @lr, align 4
  %v4_10001cb4 = inttoptr i32 %v0_10001ca8 to i32*
  %v5_10001cb4 = call i32 @function_100006a8(i32 %v0_10001cb0, i32* %v4_10001cb4, i32 3, i32 65535)
  %v0_10001cb8 = load i32, i32* @r28, align 4
  store i32 %v5_10001cb4, i32* %r25.global-to-local, align 4
  %v0_10001cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10001cc8, i32* %r3.global-to-local, align 4
  store i32 268442832, i32* @lr, align 4
  %v4_10001ccc = inttoptr i32 %v0_10001cb8 to i32*
  %v5_10001ccc = call i32 @function_100006a8(i32 %v0_10001cc8, i32* %v4_10001ccc, i32 4, i32 64)
  %v0_10001cd0 = load i32, i32* @r28, align 4
  %v1_10001cdc = urem i32 %v5_10001ccc, 256
  store i32 %v1_10001cdc, i32* %r21.global-to-local, align 4
  %v0_10001ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ce0, i32* %r3.global-to-local, align 4
  store i32 268442856, i32* @lr, align 4
  %v4_10001ce4 = inttoptr i32 %v0_10001cd0 to i32*
  %v5_10001ce4 = call i32 @function_100006a8(i32 %v0_10001ce0, i32* %v4_10001ce4, i32 5, i32 1)
  %v0_10001cf4 = load i32, i32* @r28, align 4
  %v1_10001cf8 = urem i32 %v5_10001ce4, 256
  store i32 %v1_10001cf8, i32* @r31, align 4
  %v0_10001cfc = load i32, i32* @r29, align 4
  store i32 %v0_10001cfc, i32* %r3.global-to-local, align 4
  store i32 268442884, i32* @lr, align 4
  %v4_10001d00 = inttoptr i32 %v0_10001cf4 to i32*
  %v5_10001d00 = call i32 @function_100006a8(i32 %v0_10001cfc, i32* %v4_10001d00, i32 6, i32 65535)
  %v0_10001d08 = load i32, i32* @r28, align 4
  store i32 %v5_10001d00, i32* %r24.global-to-local, align 4
  %v0_10001d18 = load i32, i32* @r29, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d08 to i32*
  %v5_10001d1c = call i32 @function_100006a8(i32 %v0_10001d18, i32* %v4_10001d1c, i32 7, i32 65535)
  %v0_10001d20 = load i32, i32* @r28, align 4
  store i32 %v5_10001d1c, i32* %r27.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r29, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_100006a8(i32 %v0_10001d30, i32* %v4_10001d34, i32 0, i32 512)
  %v0_10001d38 = load i32, i32* @r28, align 4
  store i32 %v5_10001d34, i32* %r16.global-to-local, align 4
  %v0_10001d48 = load i32, i32* @r29, align 4
  store i32 %v0_10001d48, i32* %r3.global-to-local, align 4
  store i32 268442960, i32* @lr, align 4
  %v4_10001d4c = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d4c = call i32 @function_100006a8(i32 %v0_10001d48, i32* %v4_10001d4c, i32 1, i32 1)
  %v0_10001d50 = load i32, i32* @r28, align 4
  %v1_10001d5c = urem i32 %v5_10001d4c, 256
  store i32 %v1_10001d5c, i32* %r15.global-to-local, align 4
  %v0_10001d60 = load i32, i32* @r29, align 4
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 268442984, i32* @lr, align 4
  %v4_10001d64 = inttoptr i32 %v0_10001d50 to i32*
  %v5_10001d64 = call i32 @function_100006a8(i32 %v0_10001d60, i32* %v4_10001d64, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001d6c = load i32, i32* @global_var_1001c188.16, align 4
  %v0_10001d70 = load i32, i32* @r28, align 4
  store i32 %v5_10001d64, i32* %r30.global-to-local, align 4
  %v0_10001d7c = load i32, i32* @r29, align 4
  store i32 %v0_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = inttoptr i32 %v0_10001d70 to i32*
  %v5_10001d80 = call i32 @function_100006a8(i32 %v0_10001d7c, i32* %v4_10001d80, i32 25, i32 %v3_10001d6c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443032, i32* @lr, align 4
  %v3_10001d94 = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  store i32 %v3_10001d94, i32* %r3.global-to-local, align 4
  %v3_10001d98 = icmp eq i32 %v3_10001d94, -1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001d94, i32* %r23.global-to-local, align 4
  br i1 %v3_10001d98, label %dec_label_pc_10001f30, label %dec_label_pc_10001da4

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001c10
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001db0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268443072, i32* @lr, align 4
  %v4_10001dbc = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_10001db0, i32 4)
  store i32 %v4_10001dbc, i32* %r3.global-to-local, align 4
  %v3_10001dc0 = icmp eq i32 %v4_10001dbc, -1
  store i1 %v3_10001dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dc0, label %dec_label_pc_10001f28, label %dec_label_pc_10001dc8

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001da4
  %v0_10001dc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc8 = icmp slt i32 %v0_10001dc8, 0
  %v3_10001dc8 = icmp eq i32 %v0_10001dc8, 0
  store i1 %v1_10001dc8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001dc8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001dd4 = urem i32 %v0_10001dd4, 65536
  store i32 %v1_10001dd4, i32* %r25.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001dd8 = urem i32 %v0_10001dd8, 65536
  store i32 %v1_10001dd8, i32* %r17.global-to-local, align 4
  %v0_10001ddc = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ddc = urem i32 %v0_10001ddc, 65536
  store i32 %v1_10001ddc, i32* %r18.global-to-local, align 4
  %v0_10001de0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001de0 = urem i32 %v0_10001de0, 256
  store i32 %v1_10001de0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10001dc8, 1
  br i1 %tmp33, label %dec_label_pc_10001f90, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = icmp eq i32 %v0_10001de8, 0
  store i1 %v3_10001de8, i1* %cr2_eq.global-to-local, align 1
  %v3_10001dec = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001dec, i1* %cr3_eq.global-to-local, align 1
  %v0_10001df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001df0 = urem i32 %v0_10001df0, 65536
  %v0_10001dd4.not = or i32 %v0_10001dd4, -65536
  %v1_10001df4 = xor i32 %v0_10001dd4.not, 65535
  store i32 %v1_10001df4, i32* %r11.global-to-local, align 4
  %v1_10001dfc = add nuw nsw i32 %v1_10001df0, 52
  store i32 %v1_10001dfc, i32* %r0.global-to-local, align 4
  %v1_10001e00 = add nuw nsw i32 %v1_10001df0, 28
  store i32 %v1_10001e00, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001df0, 52
  %v1_10001e04 = urem i32 %fold, 65536
  store i32 %v1_10001e04, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001df0, 28
  %v1_10001e08 = urem i32 %fold8, 65536
  store i32 %v1_10001e08, i32* %r24.global-to-local, align 4
  %v1_10001e0c = urem i32 %v1_10001df4, 65536
  store i32 %v1_10001e0c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001df0, 8
  %v1_10001e10 = urem i32 %fold9, 65536
  store i32 %v1_10001e10, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001e44

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001f04
  %v0_10001e1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 16
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v1_10001e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001e20 = add i32 %v1_10001e20, 16
  %v3_10001e20 = inttoptr i32 %v2_10001e20 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001f20, %dec_label_pc_10001e1c
  %v3_10001e24 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e24, i32* %r9.global-to-local, align 4
  %v0_10001e28 = load i32, i32* @r28, align 4
  %v1_10001e28 = trunc i32 %v0_10001e28 to i16
  %v2_10001e28 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e28 = add i32 %v2_10001e28, 4
  %v4_10001e28 = inttoptr i32 %v3_10001e28 to i16*
  store i16 %v1_10001e28, i16* %v4_10001e28, align 2
  %v0_10001e2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e2c = add i32 %v0_10001e2c, 1
  store i32 %v1_10001e2c, i32* %r31.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001e30 = trunc i32 %v0_10001e30 to i16
  %v2_10001e30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e30 = inttoptr i32 %v2_10001e30 to i16*
  store i16 %v1_10001e30, i16* %v3_10001e30, align 2
  %v0_10001e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e34 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001e34 = icmp slt i32 %v0_10001e34, %v1_10001e34
  %v4_10001e34 = icmp eq i32 %v0_10001e34, %v1_10001e34
  store i1 %v4_10001e34, i1* %cr7_eq.global-to-local, align 1
  %v0_10001e38 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001e38 = trunc i32 %v0_10001e38 to i16
  %v2_10001e38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e38 = add i32 %v2_10001e38, 2
  %v4_10001e38 = inttoptr i32 %v3_10001e38 to i16*
  store i16 %v1_10001e38, i16* %v4_10001e38, align 2
  %v0_10001e3c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001e3c, i32* %stack_var_-104, align 4
  br i1 %v2_10001e34, label %dec_label_pc_10001e44, label %dec_label_pc_10001f94

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001de8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443216, i32* @lr, align 4
  %v2_10001e4c = call i32 @function_10009e98(i32 1510, i32 4)
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v3_10001e50 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e50, i32* %r9.global-to-local, align 4
  %v0_10001e54 = load i32, i32* @r31, align 4
  %v1_10001e54 = mul i32 %v0_10001e54, 4
  store i32 %v1_10001e54, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001e5c = load i32, i32* %r20.global-to-local, align 4
  %v3_10001e5c = add i32 %v1_10001e5c, %v1_10001e54
  %v4_10001e5c = inttoptr i32 %v3_10001e5c to i32*
  store i32 %v2_10001e4c, i32* %v4_10001e5c, align 4
  %v0_10001e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e60 = mul i32 %v0_10001e60, 4
  store i32 %v1_10001e60, i32* %r9.global-to-local, align 4
  %v1_10001e64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e64 = add i32 %v1_10001e64, %v1_10001e60
  %v3_10001e64 = inttoptr i32 %v2_10001e64 to i32*
  %v4_10001e64 = load i32, i32* %v3_10001e64, align 4
  store i32 %v4_10001e64, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001e6c = inttoptr i32 %v4_10001e64 to i32*
  %v2_10001e6c = load i32, i32* %v1_10001e6c, align 4
  store i32 %v2_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = add i32 %v4_10001e64, 24
  store i32 %v1_10001e70, i32* %r30.global-to-local, align 4
  %v0_10001e74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001e74 = trunc i32 %v0_10001e74 to i8
  %v3_10001e74 = add i32 %v4_10001e64, 8
  %v4_10001e74 = inttoptr i32 %v3_10001e74 to i8*
  store i8 %v1_10001e74, i8* %v4_10001e74, align 1
  %v0_10001e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e78 = add i32 %v0_10001e78, 44
  store i32 %v1_10001e78, i32* %r29.global-to-local, align 4
  %v1_10001e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001e7c, i32* %r0.global-to-local, align 4
  %v0_10001e80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e80 = trunc i32 %v0_10001e80 to i16
  %v2_10001e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e80 = add i32 %v2_10001e80, 4
  %v4_10001e80 = inttoptr i32 %v3_10001e80 to i16*
  store i16 %v1_10001e80, i16* %v4_10001e80, align 2
  %v1_10001e84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001e84, i32* %r0.global-to-local, align 4
  %v0_10001e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e88 = add i32 %v0_10001e88, 20
  store i32 %v1_10001e88, i32* %r9.global-to-local, align 4
  %v2_10001e8c = inttoptr i32 %v0_10001e88 to i32*
  store i32 %v1_10001e84, i32* %v2_10001e8c, align 4
  %v0_10001e90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001e90 = trunc i32 %v0_10001e90 to i8
  %v2_10001e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e90 = add i32 %v2_10001e90, 1
  %v4_10001e90 = inttoptr i32 %v3_10001e90 to i8*
  store i8 %v1_10001e90, i8* %v4_10001e90, align 1
  %v0_10001e94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001e94 = trunc i32 %v0_10001e94 to i16
  %v2_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e94 = add i32 %v2_10001e94, 2
  %v4_10001e94 = inttoptr i32 %v3_10001e94 to i16*
  store i16 %v1_10001e94, i16* %v4_10001e94, align 2
  %v0_10001e98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001e98, label %dec_label_pc_10001ea4, label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001ea0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001ea0 = add i32 %v2_10001ea0, 6
  %v4_10001ea0 = inttoptr i32 %v3_10001ea0 to i16*
  store i16 16384, i16* %v4_10001ea0, align 2
  br label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e9c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001eac = load i32, i32* %r31.global-to-local, align 4
  %v3_10001eac = add i32 %v2_10001eac, 9
  %v4_10001eac = inttoptr i32 %v3_10001eac to i8*
  store i8 47, i8* %v4_10001eac, align 1
  %v0_10001eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001eb0 = trunc i32 %v0_10001eb0 to i16
  %v2_10001eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001eb0 = add i32 %v2_10001eb0, 2
  %v4_10001eb0 = inttoptr i32 %v3_10001eb0 to i16*
  store i16 %v1_10001eb0, i16* %v4_10001eb0, align 2
  %v3_10001eb4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001d80, i32* %r11.global-to-local, align 4
  %v1_10001ebc = mul i32 %v3_10001eb4, 24
  store i32 %v1_10001ebc, i32* %r9.global-to-local, align 4
  %v0_10001ec0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001ec0 = add i32 %v0_10001ec0, 24
  %v2_10001ec0 = inttoptr i32 %v1_10001ec0 to i32*
  %v3_10001ec0 = load i32, i32* %v2_10001ec0, align 4
  store i32 %v3_10001ec0, i32* %r0.global-to-local, align 4
  %v2_10001ec4 = add i32 %v0_10001ec0, 12
  %v3_10001ec4 = inttoptr i32 %v2_10001ec4 to i32*
  store i32 %v5_10001d80, i32* %v3_10001ec4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ecc = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ecc = add i32 %v1_10001ecc, %v0_10001ecc
  store i32 %v2_10001ecc, i32* %r9.global-to-local, align 4
  %v1_10001ed0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001ed0, i32* %r0.global-to-local, align 4
  %v0_10001ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ed4 = add i32 %v0_10001ed4, 16
  %v2_10001ed4 = inttoptr i32 %v1_10001ed4 to i32*
  %v3_10001ed4 = load i32, i32* %v2_10001ed4, align 4
  store i32 %v3_10001ed4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001edc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001edc, i32* %r0.global-to-local, align 4
  %v1_10001ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee0 = add i32 %v1_10001ee0, 24
  %v3_10001ee0 = inttoptr i32 %v2_10001ee0 to i32*
  store i32 %v1_10001edc, i32* %v3_10001ee0, align 4
  %v0_10001ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001ee4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee4 = add i32 %v1_10001ee4, 16
  %v3_10001ee4 = inttoptr i32 %v2_10001ee4 to i32*
  store i32 %v0_10001ee4, i32* %v3_10001ee4, align 4
  %v0_10001ee8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001ee8 = trunc i32 %v0_10001ee8 to i8
  %v2_10001ee8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ee8 = add i32 %v2_10001ee8, 1
  %v4_10001ee8 = inttoptr i32 %v3_10001ee8 to i8*
  store i8 %v1_10001ee8, i8* %v4_10001ee8, align 1
  %v0_10001eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10001eec = trunc i32 %v0_10001eec to i16
  %v2_10001eec = load i32, i32* %r30.global-to-local, align 4
  %v3_10001eec = add i32 %v2_10001eec, 2
  %v4_10001eec = inttoptr i32 %v3_10001eec to i16*
  store i16 %v1_10001eec, i16* %v4_10001eec, align 2
  %v0_10001ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ef0 = trunc i32 %v0_10001ef0 to i16
  %v2_10001ef0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef0 = add i32 %v2_10001ef0, 4
  %v4_10001ef0 = inttoptr i32 %v3_10001ef0 to i16*
  store i16 %v1_10001ef0, i16* %v4_10001ef0, align 2
  %v0_10001ef4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001ef4 = trunc i32 %v0_10001ef4 to i8
  %v2_10001ef4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef4 = add i32 %v2_10001ef4, 8
  %v4_10001ef4 = inttoptr i32 %v3_10001ef4 to i8*
  store i8 %v1_10001ef4, i8* %v4_10001ef4, align 1
  %v0_10001ef8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ef8, label %dec_label_pc_10001f04, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ea4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10001f00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f00 = add i32 %v2_10001f00, 6
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 16384, i16* %v4_10001f00, align 2
  br label %dec_label_pc_10001f04

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001ea4, %dec_label_pc_10001efc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001f08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f08 = add i32 %v2_10001f08, 9
  %v4_10001f08 = inttoptr i32 %v3_10001f08 to i8*
  store i8 17, i8* %v4_10001f08, align 1
  %v0_10001f0c = call i32 @function_10005d68()
  store i32 %v0_10001f0c, i32* %r3.global-to-local, align 4
  %v1_10001f10 = add i32 %v0_10001f0c, -1024
  store i32 %v1_10001f10, i32* %r0.global-to-local, align 4
  %v1_10001f14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f14 = add i32 %v1_10001f14, 12
  %v3_10001f14 = inttoptr i32 %v2_10001f14 to i32*
  store i32 %v0_10001f0c, i32* %v3_10001f14, align 4
  %v0_10001f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f18 = sub i32 -1, %v0_10001f18
  store i32 %v1_10001f18, i32* %r0.global-to-local, align 4
  %v0_10001f1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001f1c, label %dec_label_pc_10001f20, label %dec_label_pc_10001e1c

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f04
  %v1_10001f20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 16
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f18, i32* %v3_10001f20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001da4
  %v0_10001f28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001f28, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v0_10001f2c = call i32 @function_10008e20()
  store i32 %v0_10001f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f30

dec_label_pc_10001f30:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001f28
  store i32 %v0_10001c28, i32* %r0.global-to-local, align 4
  %v1_10001f44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c18)
  store i32 %v0_10001c5c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c64, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c6c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001c70, i32* %r31.global-to-local, align 4
  %v0_10001f8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f8c

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001dc8
  %v3_10001f90 = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001f90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001f90
  store i32 %v5_10001d80, i32* %r0.global-to-local, align 4
  %v0_10001f98 = load i32, i32* %r15.global-to-local, align 4
  %v3_10001f98 = icmp eq i32 %v0_10001f98, 0
  store i1 %v3_10001f98, i1* %cr2_eq.global-to-local, align 1
  %v0_10001f9c = load i32, i32* %r16.global-to-local, align 4
  %v1_10001f9c = add i32 %v0_10001f9c, 8
  store i32 %v1_10001f9c, i32* %r22.global-to-local, align 4
  %v1_10001fa0 = add i32 %v0_10001f9c, 52
  store i32 %v1_10001fa0, i32* %r24.global-to-local, align 4
  %v3_10001fa4 = icmp eq i32 %v5_10001d80, -1
  store i1 %v3_10001fa4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001fa8 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa8, i32* %r3.global-to-local, align 4
  %v1_10001fac = mul i32 %v0_10001fa8, 268435456
  store i32 %v1_10001fac, i32* %r21.global-to-local, align 4
  %v0_10001fb0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001fb0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001fb0.outer

dec_label_pc_10001fb0.outer:                      ; preds = %dec_label_pc_100020b8, %dec_label_pc_10001f94
  %v1_10001fb0.ph = phi i1 [ %v1_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v1_100020b8, %dec_label_pc_100020b8 ]
  %v0_10001fb0.ph = phi i1 [ %v0_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v0_100020b8, %dec_label_pc_100020b8 ]
  %v2_10001fb0 = or i1 %v1_10001fb0.ph, %v0_10001fb0.ph
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001fb0.outer, %dec_label_pc_10001fb0
  br i1 %v2_10001fb0, label %dec_label_pc_10001fb0, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001fb0, %dec_label_pc_100020b8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001fc4

dec_label_pc_10001fc4:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_10001fb4
  %v0_10001fc4 = phi i32 [ %v1_100020a8, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_10001fb4 ]
  %v1_10001fc4 = mul i32 %v0_10001fc4, 24
  store i32 %v1_10001fc4, i32* %r0.global-to-local, align 4
  %v1_10001fc8 = mul i32 %v0_10001fc4, 4
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r20.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, %v1_10001fc8
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  %v4_10001fcc = load i32, i32* %v3_10001fcc, align 4
  store i32 %v4_10001fcc, i32* %r28.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, %v1_10001fc4
  %v1_10001fd4 = add i32 %v2_10001fd0, 20
  %v2_10001fd4 = inttoptr i32 %v1_10001fd4 to i8*
  %v3_10001fd4 = load i8, i8* %v2_10001fd4, align 1
  %v4_10001fd4 = zext i8 %v3_10001fd4 to i32
  store i32 %v4_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v4_10001fcc, 24
  store i32 %v1_10001fd8, i32* @r31, align 4
  %v1_10001fdc = add i32 %v4_10001fcc, 44
  store i32 %v1_10001fdc, i32* @r30, align 4
  %v3_10001fe0 = icmp eq i8 %v3_10001fd4, 31
  store i1 %v3_10001fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001fd4, 32
  br i1 %tmp35, label %dec_label_pc_100020c0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fc4
  %v0_10001fe8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001fe8 = mul i32 %v0_10001fe8, 16
  %v2_10001fe8 = udiv i32 %v0_10001fe8, 268435456
  %v3_10001fe8 = or i32 %v2_10001fe8, %v1_10001fe8
  store i32 %v3_10001fe8, i32* %r21.global-to-local, align 4
  %v1_10001fec = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001fe8)
  %v1_10001ff0 = mul nuw i32 %v2_10001fe8, 268435456
  %v2_10001ff0 = urem i32 %v0_10001fe8, 268435456
  %v3_10001ff0 = or i32 %v1_10001ff0, %v2_10001ff0
  store i32 %v3_10001ff0, i32* %r21.global-to-local, align 4
  %v0_10001ff4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ff4, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 65535, i32* @r29, align 4
  %v0_10002000 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002000 = icmp eq i32 %v0_10002000, 65535
  store i1 %v4_10002000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002000, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v1_10002008 = phi i32 [ %v1_10002104, %dec_label_pc_100020f4 ], [ 65535, %dec_label_pc_10001ff8 ]
  %v0_10002008 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002008 = icmp eq i32 %v0_10002008, %v1_10002008
  store i1 %v4_10002008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002008, label %dec_label_pc_1000212c, label %dec_label_pc_10002010

dec_label_pc_10002010:                            ; preds = %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge, %dec_label_pc_10002008
  %v1_10002010 = phi i32 [ %v1_10002010.pre, %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge ], [ %v1_10002008, %dec_label_pc_10002008 ]
  %v0_10002010 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002010 = icmp eq i32 %v0_10002010, %v1_10002010
  store i1 %v4_10002010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002010, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_10002018 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002018, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_1000201c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000201c = add i32 %v0_1000201c, 16
  %v2_1000201c = inttoptr i32 %v1_1000201c to i32*
  %v3_1000201c = load i32, i32* %v2_1000201c, align 4
  store i32 %v3_1000201c, i32* %r0.global-to-local, align 4
  %v1_10002020 = load i32, i32* @r31, align 4
  %v2_10002020 = add i32 %v1_10002020, 16
  %v3_10002020 = inttoptr i32 %v2_10002020 to i32*
  store i32 %v3_1000201c, i32* %v3_10002020, align 4
  %v0_10002024 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002024, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002028:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148, %dec_label_pc_10002154
  %v0_10002028 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002028 = trunc i32 %v0_10002028 to i16
  %v2_10002028 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002028 = add i32 %v2_10002028, 10
  %v4_10002028 = inttoptr i32 %v3_10002028 to i16*
  store i16 %v1_10002028, i16* %v4_10002028, align 2
  %v0_10002030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002030, i32* @r3, align 4
  %v2_10002034 = call i32 @function_100043cc(i32 %v0_10002030, i32 20)
  %v3_10002034 = trunc i32 %v2_10002034 to i16
  %v4_1000203c = add i32 %v0_10002030, 10
  %v5_1000203c = inttoptr i32 %v4_1000203c to i16*
  store i16 %v3_10002034, i16* %v5_1000203c, align 2
  %v0_10002040 = load i32, i32* @r31, align 4
  store i32 %v0_10002040, i32* @r3, align 4
  %v0_10002044 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002044 = trunc i32 %v0_10002044 to i16
  %v3_10002044 = add i32 %v0_10002040, 10
  %v4_10002044 = inttoptr i32 %v3_10002044 to i16*
  store i16 %v1_10002044, i16* %v4_10002044, align 2
  %v2_10002048 = call i32 @function_100043cc(i32 %v0_10002040, i32 20)
  %v3_10002048 = trunc i32 %v2_10002048 to i16
  %v0_1000204c = load i32, i32* @r30, align 4
  store i32 %v0_1000204c, i32* @r4, align 4
  %v3_10002050 = load i32, i32* @r31, align 4
  %v4_10002050 = add i32 %v3_10002050, 10
  %v5_10002050 = inttoptr i32 %v4_10002050 to i16*
  store i16 %v3_10002048, i16* %v5_10002050, align 2
  %v0_10002054 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002058 = trunc i32 %v0_10002058 to i16
  %v2_10002058 = load i32, i32* @r30, align 4
  %v3_10002058 = add i32 %v2_10002058, 6
  %v4_10002058 = inttoptr i32 %v3_10002058 to i16*
  store i16 %v1_10002058, i16* %v4_10002058, align 2
  %v0_1000205c = load i32, i32* @r31, align 4
  store i32 %v0_1000205c, i32* %r3.global-to-local, align 4
  %v0_10002060 = load i32, i32* @r30, align 4
  %v1_10002060 = add i32 %v0_10002060, 4
  %v2_10002060 = inttoptr i32 %v1_10002060 to i16*
  %v3_10002060 = load i16, i16* %v2_10002060, align 2
  %v4_10002060 = zext i16 %v3_10002060 to i32
  %v4_10002064 = call i32 @function_10004430(i32 %v0_1000205c, i32 %v0_1000204c, i32 %v4_10002060, i32 %v0_10002054)
  %v5_10002064 = trunc i32 %v4_10002064 to i16
  store i32 %v4_10002064, i32* %r3.global-to-local, align 4
  %v3_10002068 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002068, i32* %r0.global-to-local, align 4
  %v0_1000206c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000206c = add i32 %v0_1000206c, 16
  %v2_1000206c = inttoptr i32 %v1_1000206c to i32*
  %v3_1000206c = load i32, i32* %v2_1000206c, align 4
  store i32 %v3_1000206c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002074 = mul i32 %v3_10002068, 24
  store i32 %v1_10002074, i32* %r0.global-to-local, align 4
  %v3_10002078 = load i32, i32* @r30, align 4
  %v4_10002078 = add i32 %v3_10002078, 6
  %v5_10002078 = inttoptr i32 %v4_10002078 to i16*
  store i16 %v5_10002064, i16* %v5_10002078, align 2
  %v0_1000207c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002080 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  %v0_10002084 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002084 = add i32 %v1_10002084, %v0_10002084
  %v0_10002088 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002088 = trunc i32 %v0_10002088 to i16
  %v5_10002088 = inttoptr i32 %v2_10002084 to i16*
  store i16 %v3_10002088, i16* %v5_10002088, align 2
  %v0_1000208c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000208c = add i32 %v2_10002084, 4
  %v3_1000208c = inttoptr i32 %v2_1000208c to i32*
  store i32 %v0_1000208c, i32* %v3_1000208c, align 4
  %v0_10002090 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002094 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002094 = trunc i32 %v0_10002094 to i16
  %v3_10002094 = add i32 %v2_10002084, 2
  %v4_10002094 = inttoptr i32 %v3_10002094 to i16*
  store i16 %v1_10002094, i16* %v4_10002094, align 2
  store i32 268443812, i32* @lr, align 4
  %v6_100020a0 = call i32 @function_10009ac0(i32 %v0_10002080, i32 %v0_1000207c, i32 %v0_10002090, i32 16384, i32 %v2_10002084, i32 16)
  store i32 %v6_100020a0, i32* %r3.global-to-local, align 4
  %v3_100020a4 = load i32, i32* %stack_var_-104, align 4
  %v1_100020a8 = add i32 %v3_100020a4, 1
  store i32 %v1_100020a8, i32* %r9.global-to-local, align 4
  %v1_100020ac = load i32, i32* %r19.global-to-local, align 4
  %v2_100020ac = icmp slt i32 %v1_100020a8, %v1_100020ac
  %v4_100020ac = icmp eq i32 %v1_100020a8, %v1_100020ac
  store i1 %v4_100020ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100020a8, i32* %stack_var_-104, align 4
  br i1 %v2_100020ac, label %dec_label_pc_10001fc4, label %dec_label_pc_100020b8

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002028
  %v0_100020b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100020b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100020b8 = or i1 %v0_100020b8, %v1_100020b8
  br i1 %v2_100020b8, label %dec_label_pc_10001fb0.outer, label %dec_label_pc_10001fb4

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_10001fc4
  %v1_100020c0 = add i32 %v2_10001fd0, 16
  %v2_100020c0 = inttoptr i32 %v1_100020c0 to i32*
  %v3_100020c0 = load i32, i32* %v2_100020c0, align 4
  store i32 %v3_100020c0, i32* %r29.global-to-local, align 4
  %v0_100020c4 = call i32 @function_10005d68()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %v3_100020c8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100020c8, i32* %r9.global-to-local, align 4
  %v0_100020cc = load i32, i32* %r21.global-to-local, align 4
  %v1_100020cc = mul i32 %v0_100020cc, 16
  %v2_100020cc = udiv i32 %v0_100020cc, 268435456
  %v3_100020cc = or i32 %v2_100020cc, %v1_100020cc
  store i32 %v3_100020cc, i32* %r21.global-to-local, align 4
  %v1_100020d0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100020cc)
  %v1_100020d4 = mul nuw i32 %v2_100020cc, 268435456
  %v2_100020d4 = urem i32 %v0_100020cc, 268435456
  %v3_100020d4 = or i32 %v1_100020d4, %v2_100020d4
  store i32 %v3_100020d4, i32* %r21.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = mul i32 %v0_100020d8, 24
  %v1_100020dc = load i32, i32* %r26.global-to-local, align 4
  %v2_100020dc = add i32 %v1_100020dc, %v1_100020d8
  store i32 %v2_100020dc, i32* %r9.global-to-local, align 4
  %v1_100020e0 = add i32 %v2_100020dc, 20
  %v2_100020e0 = inttoptr i32 %v1_100020e0 to i8*
  %v3_100020e0 = load i8, i8* %v2_100020e0, align 1
  %v4_100020e0 = zext i8 %v3_100020e0 to i32
  store i32 %v4_100020e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100020e0, 64
  %v2_100020e4 = zext i8 %tmp to i32
  %v3_100020e4 = lshr i32 %v0_100020c4, %v2_100020e4
  store i32 %v3_100020e4, i32* %r3.global-to-local, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020e8 = add i32 %v3_100020e4, %v0_100020e8
  store i32 %v2_100020e8, i32* %r29.global-to-local, align 4
  %v1_100020ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100020ec = add i32 %v1_100020ec, 16
  %v3_100020ec = inttoptr i32 %v2_100020ec to i32*
  store i32 %v2_100020e8, i32* %v3_100020ec, align 4
  %v0_100020f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100020f0, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100020f8 = call i32 @function_10005d68()
  store i32 %v0_100020f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002100 = add i32 %v1_10002100, 12
  %v3_10002100 = inttoptr i32 %v2_10002100 to i32*
  store i32 %v0_100020f8, i32* %v3_10002100, align 4
  %v0_10002104 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002104 = load i32, i32* @r29, align 4
  %v4_10002104 = icmp eq i32 %v0_10002104, %v1_10002104
  store i1 %v4_10002104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002104, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_1000210c:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v0_1000210c = call i32 @function_10005d68()
  %v0_10002110 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002110 = load i32, i32* @r29, align 4
  %v4_10002110 = icmp eq i32 %v0_10002110, %v1_10002110
  store i1 %v4_10002110, i1* %cr7_eq.global-to-local, align 1
  %v1_10002114 = urem i32 %v0_1000210c, 65536
  store i32 %v1_10002114, i32* %r3.global-to-local, align 4
  %v1_10002118 = add nsw i32 %v1_10002114, -1000
  store i32 %v1_10002118, i32* %r0.global-to-local, align 4
  %v1_1000211c = trunc i32 %v0_1000210c to i16
  %v2_1000211c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000211c = add i32 %v2_1000211c, 4
  %v4_1000211c = inttoptr i32 %v3_1000211c to i16*
  store i16 %v1_1000211c, i16* %v4_1000211c, align 2
  %v0_10002120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002120 = sub i32 -1, %v0_10002120
  store i32 %v1_10002120, i32* %r0.global-to-local, align 4
  %v1_10002124 = trunc i32 %v1_10002120 to i16
  %v2_10002124 = load i32, i32* @r31, align 4
  %v3_10002124 = add i32 %v2_10002124, 4
  %v4_10002124 = inttoptr i32 %v3_10002124 to i16*
  store i16 %v1_10002124, i16* %v4_10002124, align 2
  br i1 %v4_10002110, label %dec_label_pc_1000212c, label %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge

dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge: ; preds = %dec_label_pc_1000210c
  %v1_10002010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002010

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_1000210c, %dec_label_pc_10002008
  %v0_1000212c = call i32 @function_10005d68()
  %v1_1000212c = trunc i32 %v0_1000212c to i16
  store i32 %v0_1000212c, i32* %r3.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002130 = load i32, i32* @r29, align 4
  %v4_10002130 = icmp eq i32 %v0_10002130, %v1_10002130
  store i1 %v4_10002130, i1* %cr7_eq.global-to-local, align 1
  %v3_10002134 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002134 = add i32 %v3_10002134, 44
  %v5_10002134 = inttoptr i32 %v4_10002134 to i16*
  store i16 %v1_1000212c, i16* %v5_10002134, align 2
  br i1 %v4_10002130, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_1000213c = call i32 @function_10005d68()
  %v1_1000213c = trunc i32 %v0_1000213c to i16
  store i32 %v0_1000213c, i32* %r3.global-to-local, align 4
  %v3_10002140 = load i32, i32* @r30, align 4
  %v4_10002140 = add i32 %v3_10002140, 2
  %v5_10002140 = inttoptr i32 %v4_10002140 to i16*
  store i16 %v1_1000213c, i16* %v5_10002140, align 2
  %v0_10002144 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002144, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_10002148:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_10002148 = call i32 @function_10005d68()
  store i32 %v0_10002148, i32* %r3.global-to-local, align 4
  %v1_1000214c = load i32, i32* @r31, align 4
  %v2_1000214c = add i32 %v1_1000214c, 16
  %v3_1000214c = inttoptr i32 %v2_1000214c to i32*
  store i32 %v0_10002148, i32* %v3_1000214c, align 4
  %v0_10002150 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002150, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148
  %v0_10002154 = load i32, i32* @r30, align 4
  %v1_10002154 = add i32 %v0_10002154, 8
  store i32 %v1_10002154, i32* @r3, align 4
  %v0_10002158 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002158, i32* @r4, align 4
  %v0_1000215c = call i32 @function_10005f3c()
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002028

; uselistorder directives
  uselistorder i32 %v0_1000213c, { 1, 0 }
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_10002120, { 1, 0 }
  uselistorder i32 %v1_10002114, { 1, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v0_100020cc, { 2, 1, 0 }
  uselistorder i1 %v1_100020b8, { 1, 0 }
  uselistorder i1 %v0_100020b8, { 1, 0 }
  uselistorder i32 %v1_100020a8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002084, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002064, { 1, 0 }
  uselistorder i32 %v0_10001fe8, { 2, 1, 0 }
  uselistorder i32 %v4_10001fcc, { 1, 0, 2 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v1_10001f18, { 1, 0 }
  uselistorder i32 %v1_10001e60, { 1, 0 }
  uselistorder i32 %v1_10001e54, { 1, 0 }
  uselistorder i32 %v1_10001df0, { 1, 0 }
  uselistorder i32 %v0_10001df0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001de0, { 1, 2, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0 }
  uselistorder i32 %v5_10001d80, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10002154, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f30, { 1, 0 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
}

define i32 @function_10002164(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002164:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10002168 = load i32, i32* @lr, align 4
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v0_1000216c = call i32 @__asm_mfcr()
  store i32 %v0_1000216c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000216c, i32* %r23.global-to-local, align 4
  %v0_100021a4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100021ac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100021b4 = load i32, i32* @r30, align 4
  store i32 268444116, i32* @lr, align 4
  %v2_100021d0 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_100021d0, i32* %r24.global-to-local, align 4
  %v0_100021d8 = load i32, i32* @r28, align 4
  %v0_100021dc = load i32, i32* @r29, align 4
  store i32 %v0_100021dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268444140, i32* @lr, align 4
  %v4_100021e8 = inttoptr i32 %v0_100021d8 to i32*
  %v5_100021e8 = call i32 @function_100006a8(i32 %v0_100021dc, i32* %v4_100021e8, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100021f8 = load i32, i32* @r28, align 4
  %v1_100021fc = urem i32 %v5_100021e8, 256
  store i32 %v1_100021fc, i32* %r19.global-to-local, align 4
  %v0_10002200 = load i32, i32* @r29, align 4
  store i32 %v0_10002200, i32* %r3.global-to-local, align 4
  store i32 268444168, i32* @lr, align 4
  %v4_10002204 = inttoptr i32 %v0_100021f8 to i32*
  %v5_10002204 = call i32 @function_100006a8(i32 %v0_10002200, i32* %v4_10002204, i32 3, i32 65535)
  %v0_10002208 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10002204, i32* %r21.global-to-local, align 4
  %v0_10002218 = load i32, i32* @r29, align 4
  store i32 %v0_10002218, i32* %r3.global-to-local, align 4
  store i32 268444192, i32* @lr, align 4
  %v4_1000221c = inttoptr i32 %v0_10002208 to i32*
  %v5_1000221c = call i32 @function_100006a8(i32 %v0_10002218, i32* %v4_1000221c, i32 4, i32 64)
  %v0_10002220 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000222c = urem i32 %v5_1000221c, 256
  store i32 %v1_1000222c, i32* %r26.global-to-local, align 4
  %v0_10002230 = load i32, i32* @r29, align 4
  store i32 %v0_10002230, i32* %r3.global-to-local, align 4
  store i32 268444216, i32* @lr, align 4
  %v4_10002234 = inttoptr i32 %v0_10002220 to i32*
  %v5_10002234 = call i32 @function_100006a8(i32 %v0_10002230, i32* %v4_10002234, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10002244 = load i32, i32* @r28, align 4
  %v1_10002248 = urem i32 %v5_10002234, 256
  store i32 %v1_10002248, i32* @r31, align 4
  %v0_1000224c = load i32, i32* @r29, align 4
  store i32 %v0_1000224c, i32* %r3.global-to-local, align 4
  store i32 268444244, i32* @lr, align 4
  %v4_10002250 = inttoptr i32 %v0_10002244 to i32*
  %v5_10002250 = call i32 @function_100006a8(i32 %v0_1000224c, i32* %v4_10002250, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000225c = load i32, i32* @r28, align 4
  store i32 %v5_10002250, i32* %r22.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r29, align 4
  store i32 %v0_10002264, i32* %r3.global-to-local, align 4
  store i32 268444268, i32* @lr, align 4
  %v4_10002268 = inttoptr i32 %v0_1000225c to i32*
  %v5_10002268 = call i32 @function_100006a8(i32 %v0_10002264, i32* %v4_10002268, i32 7, i32 27015)
  store i32 %v5_10002268, i32* %r29.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 268444280, i32* @lr, align 4
  %v1_10002274 = call i32 @function_100080e8(i32 20)
  store i32 20, i32* %r3.global-to-local, align 4
  %v3_10002280 = call i32 @function_10008034(i32 20, i32* nonnull %stack_var_-84)
  store i32 %v3_10002280, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444312, i32* @lr, align 4
  %v3_10002294 = call i32 @function_10009b3c(i32 2, i32 3, i32 17)
  store i32 %v3_10002294, i32* %r3.global-to-local, align 4
  %v3_10002298 = icmp eq i32 %v3_10002294, -1
  store i32 %v3_10002294, i32* %r25.global-to-local, align 4
  br i1 %v3_10002298, label %dec_label_pc_100024e8, label %dec_label_pc_100022a4

dec_label_pc_100022a4:                            ; preds = %dec_label_pc_10002164
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100022b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100022b0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268444352, i32* @lr, align 4
  %v4_100022bc = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_100022b0, i32 4)
  store i32 %v4_100022bc, i32* %r3.global-to-local, align 4
  %v3_100022c0 = icmp eq i32 %v4_100022bc, -1
  br i1 %v3_100022c0, label %dec_label_pc_100024e0, label %dec_label_pc_100022c8

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_100022a4
  %v0_100022c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100022c8 = icmp slt i32 %v0_100022c8, 0
  %v3_100022c8 = icmp eq i32 %v0_100022c8, 0
  store i1 %v1_100022c8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100022c8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100022d0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100022d0 = urem i32 %v0_100022d0, 65536
  store i32 %v1_100022d0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100022d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100022d8 = urem i32 %v0_100022d8, 65536
  store i32 %v1_100022d8, i32* %r21.global-to-local, align 4
  %v0_100022dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100022dc = urem i32 %v0_100022dc, 65536
  store i32 %v1_100022dc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100022c8, 1
  br i1 %tmp32, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100022c8
  %v0_100022e4 = load i32, i32* @r31, align 4
  %v3_100022e4 = icmp eq i32 %v0_100022e4, 0
  store i1 %v3_100022e4, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100022e4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268444432, i32* @lr, align 4
  %v2_1000230c = call i32 @function_10009e98(i32 128, i32 1)
  store i32 %v2_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002310, i32* %r0.global-to-local, align 4
  %v0_10002314 = load i32, i32* @r31, align 4
  %v1_10002314 = mul i32 %v0_10002314, 4
  store i32 %v1_10002314, i32* %r9.global-to-local, align 4
  %v0_10002318 = load i32, i32* @r30, align 4
  %v2_1000231c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000231c = add i32 %v2_1000231c, %v1_10002314
  %v4_1000231c = inttoptr i32 %v3_1000231c to i32*
  store i32 %v2_1000230c, i32* %v4_1000231c, align 4
  %v0_10002320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002320 = mul i32 %v0_10002320, 4
  store i32 %v1_10002320, i32* %r0.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002324 = add i32 %v0_10002324, %v1_10002320
  %v3_10002324 = inttoptr i32 %v2_10002324 to i32*
  %v4_10002324 = load i32, i32* %v3_10002324, align 4
  store i32 %v4_10002324, i32* %r10.global-to-local, align 4
  %v1_10002328 = inttoptr i32 %v4_10002324 to i32*
  %v2_10002328 = load i32, i32* %v1_10002328, align 4
  store i32 %v2_10002328, i32* %r0.global-to-local, align 4
  %v1_1000232c = add i32 %v4_10002324, 32
  store i32 %v1_1000232c, i32* %r3.global-to-local, align 4
  %v0_10002330 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  %v3_10002330 = add i32 %v4_10002324, 4
  %v4_10002330 = inttoptr i32 %v3_10002330 to i16*
  store i16 %v1_10002330, i16* %v4_10002330, align 2
  %v0_10002334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002334 = add i32 %v0_10002334, 20
  store i32 %v1_10002334, i32* %r8.global-to-local, align 4
  %v1_10002338 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002338, i32* %r0.global-to-local, align 4
  %v1_1000233c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000233c, i32* %r0.global-to-local, align 4
  %v1_10002340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002340 = inttoptr i32 %v1_10002340 to i32*
  store i32 %v1_1000233c, i32* %v2_10002340, align 4
  %v0_10002344 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002344 = trunc i32 %v0_10002344 to i8
  %v2_10002344 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002344 = add i32 %v2_10002344, 1
  %v4_10002344 = inttoptr i32 %v3_10002344 to i8*
  store i8 %v1_10002344, i8* %v4_10002344, align 1
  %v3_10002348 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002348, i32* %r9.global-to-local, align 4
  %v0_1000234c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000234c = trunc i32 %v0_1000234c to i8
  %v2_1000234c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000234c = add i32 %v2_1000234c, 8
  %v4_1000234c = inttoptr i32 %v3_1000234c to i8*
  store i8 %v1_1000234c, i8* %v4_1000234c, align 1
  %v0_10002350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002350 = add i32 %v0_10002350, 32
  store i32 %v1_10002350, i32* %r9.global-to-local, align 4
  %v1_10002354 = trunc i32 %v1_10002350 to i16
  %v2_10002354 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002354 = add i32 %v2_10002354, 2
  %v4_10002354 = inttoptr i32 %v3_10002354 to i16*
  store i16 %v1_10002354, i16* %v4_10002354, align 2
  %v0_10002358 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002358, label %dec_label_pc_10002360, label %dec_label_pc_1000235c

dec_label_pc_1000235c:                            ; preds = %dec_label_pc_10002304
  %v0_1000235c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000235c = trunc i32 %v0_1000235c to i16
  %v2_1000235c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000235c = add i32 %v2_1000235c, 6
  %v4_1000235c = inttoptr i32 %v3_1000235c to i16*
  store i16 %v1_1000235c, i16* %v4_1000235c, align 2
  br label %dec_label_pc_10002360

dec_label_pc_10002360:                            ; preds = %dec_label_pc_10002304, %dec_label_pc_1000235c
  %v0_10002360 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002360 = trunc i32 %v0_10002360 to i8
  %v2_10002360 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002360 = add i32 %v2_10002360, 9
  %v4_10002360 = inttoptr i32 %v3_10002360 to i8*
  store i8 %v1_10002360, i8* %v4_10002360, align 1
  %v0_10002364 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i16
  %v2_10002364 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002364 = add i32 %v2_10002364, 20
  %v4_10002364 = inttoptr i32 %v3_10002364 to i16*
  store i16 %v1_10002364, i16* %v4_10002364, align 2
  %v3_10002368 = load i32, i32* %stack_var_-88, align 4
  %v3_1000236c = load i32, i32* @global_var_1001c188.16, align 4
  store i32 %v3_1000236c, i32* %r0.global-to-local, align 4
  %v1_10002370 = mul i32 %v3_10002368, 24
  store i32 %v1_10002370, i32* %r9.global-to-local, align 4
  %v0_10002374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002374 = trunc i32 %v0_10002374 to i16
  %v2_10002374 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002374 = add i32 %v2_10002374, 2
  %v4_10002374 = inttoptr i32 %v3_10002374 to i16*
  store i16 %v1_10002374, i16* %v4_10002374, align 2
  %v0_10002378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002378 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002378 = add i32 %v1_10002378, 12
  %v3_10002378 = inttoptr i32 %v2_10002378 to i32*
  store i32 %v0_10002378, i32* %v3_10002378, align 4
  %v0_1000237c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000237c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000237c = add i32 %v1_1000237c, %v0_1000237c
  store i32 %v2_1000237c, i32* %r9.global-to-local, align 4
  %v1_10002380 = add i32 %v2_1000237c, 16
  %v2_10002380 = inttoptr i32 %v1_10002380 to i32*
  %v3_10002380 = load i32, i32* %v2_10002380, align 4
  store i32 %v3_10002380, i32* %r0.global-to-local, align 4
  %v3_10002384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002384, i32* %r11.global-to-local, align 4
  %v0_10002388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002388 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002388 = add i32 %v1_10002388, 28
  %v3_10002388 = inttoptr i32 %v2_10002388 to i32*
  store i32 %v0_10002388, i32* %v3_10002388, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000238c = add i32 %v1_1000238c, 16
  %v3_1000238c = inttoptr i32 %v2_1000238c to i32*
  store i32 %v0_1000238c, i32* %v3_1000238c, align 4
  %v0_10002390 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 12
  store i32 %v1_10002390, i32* %r11.global-to-local, align 4
  %v1_10002394 = trunc i32 %v1_10002390 to i16
  %v2_10002394 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i16*
  store i16 %v1_10002394, i16* %v4_10002394, align 2
  %v3_10002398 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002398, i32* %r5.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_100086e4(i32 %v3_10002398, i32 %v0_10002318, i32 %v3_10002398)
  store i32 %v3_1000239c, i32* %r3.global-to-local, align 4
  %v3_100023a0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100023a0, i32* %r9.global-to-local, align 4
  %v1_100023a4 = add i32 %v3_100023a0, 1
  %v1_100023a8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023a8 = icmp slt i32 %v1_100023a4, %v1_100023a8
  store i32 %v1_100023a4, i32* %stack_var_-88, align 4
  br i1 %v2_100023a8, label %dec_label_pc_10002304, label %dec_label_pc_100023b4.preheader.loopexit

dec_label_pc_100023b4.preheader.loopexit:         ; preds = %dec_label_pc_10002360
  %v0_100023b4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100023b4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100023b4.outer

dec_label_pc_100023b4.outer:                      ; preds = %dec_label_pc_10002480, %dec_label_pc_100022c8, %dec_label_pc_100023b4.preheader.loopexit
  %v1_100023b4.ph34 = phi i1 [ %v1_100022c8, %dec_label_pc_100022c8 ], [ %v1_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v1_10002480, %dec_label_pc_10002480 ]
  %v0_100023b4.ph35 = phi i1 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v0_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v0_10002480, %dec_label_pc_10002480 ]
  %v2_100023b4 = or i1 %v1_100023b4.ph34, %v0_100023b4.ph35
  br label %dec_label_pc_100023b4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_100023b4.outer, %dec_label_pc_100023b4
  br i1 %v2_100023b4, label %dec_label_pc_100023b4, label %dec_label_pc_100023b8

dec_label_pc_100023b8:                            ; preds = %dec_label_pc_100023b4, %dec_label_pc_10002480
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100023c8

dec_label_pc_100023c8:                            ; preds = %dec_label_pc_10002408, %dec_label_pc_100023b8
  %v0_100023d8 = phi i32 [ %v1_10002470, %dec_label_pc_10002408 ], [ 0, %dec_label_pc_100023b8 ]
  %v1_100023c8 = mul i32 %v0_100023d8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, %v1_100023c8
  store i32 %v2_100023d4, i32* %r10.global-to-local, align 4
  %v1_100023d8 = mul i32 %v0_100023d8, 4
  store i32 %v1_100023d8, i32* %r0.global-to-local, align 4
  %v1_100023dc = add i32 %v2_100023d4, 20
  %v2_100023dc = inttoptr i32 %v1_100023dc to i8*
  %v3_100023dc = load i8, i8* %v2_100023dc, align 1
  %v4_100023dc = zext i8 %v3_100023dc to i32
  store i32 %v4_100023dc, i32* %r9.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100023e0 = add i32 %v0_100023e0, %v1_100023d8
  %v3_100023e0 = inttoptr i32 %v2_100023e0 to i32*
  %v4_100023e0 = load i32, i32* %v3_100023e0, align 4
  store i32 %v4_100023e0, i32* %r28.global-to-local, align 4
  %v1_100023e8 = add i32 %v4_100023e0, 20
  store i32 %v1_100023e8, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100023dc, 32
  br i1 %tmp33, label %dec_label_pc_10002488, label %dec_label_pc_100023f0

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023c8
  %v0_100023f0 = load i32, i32* %r20.global-to-local, align 4
  %v4_100023f0 = icmp eq i32 %v0_100023f0, 65535
  br i1 %v4_100023f0, label %dec_label_pc_100024b4, label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge, %dec_label_pc_100023f0
  %v1_100023f8 = phi i32 [ %v1_100023f8.pre, %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge ], [ 65535, %dec_label_pc_100023f0 ]
  %v0_100023f8 = load i32, i32* %r21.global-to-local, align 4
  %v4_100023f8 = icmp eq i32 %v0_100023f8, %v1_100023f8
  br i1 %v4_100023f8, label %dec_label_pc_100024c4, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge, %dec_label_pc_100023f8
  %v1_10002400 = phi i32 [ %v1_10002400.pre, %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge ], [ %v1_100023f8, %dec_label_pc_100023f8 ]
  %v0_10002400 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002400 = icmp eq i32 %v0_10002400, %v1_10002400
  br i1 %v4_10002400, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_10002408:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400, %dec_label_pc_100024d4
  %v0_10002408 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002408 = trunc i32 %v0_10002408 to i16
  %v2_10002408 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002408 = add i32 %v2_10002408, 10
  %v4_10002408 = inttoptr i32 %v3_10002408 to i16*
  store i16 %v1_10002408, i16* %v4_10002408, align 2
  %v0_10002410 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002410, i32* @r3, align 4
  %v2_10002414 = call i32 @function_100043cc(i32 %v0_10002410, i32 20)
  %v3_10002414 = trunc i32 %v2_10002414 to i16
  store i32 %v2_10002414, i32* %r3.global-to-local, align 4
  %v3_10002418 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002418, i32* %r6.global-to-local, align 4
  %v3_1000241c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000241c = add i32 %v3_1000241c, 10
  %v5_1000241c = inttoptr i32 %v4_1000241c to i16*
  store i16 %v3_10002414, i16* %v5_1000241c, align 2
  %v0_10002420 = load i32, i32* @r31, align 4
  store i32 %v0_10002420, i32* @r4, align 4
  %v0_10002424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002424 = trunc i32 %v0_10002424 to i16
  %v3_10002424 = add i32 %v0_10002420, 6
  %v4_10002424 = inttoptr i32 %v3_10002424 to i16*
  store i16 %v1_10002424, i16* %v4_10002424, align 2
  %v0_10002428 = load i32, i32* %r6.global-to-local, align 4
  %v1_10002428 = add i32 %v0_10002428, 12
  store i32 %v1_10002428, i32* %r6.global-to-local, align 4
  %v0_1000242c = load i32, i32* @r31, align 4
  %v1_1000242c = add i32 %v0_1000242c, 4
  %v2_1000242c = inttoptr i32 %v1_1000242c to i16*
  %v3_1000242c = load i16, i16* %v2_1000242c, align 2
  %v4_1000242c = zext i16 %v3_1000242c to i32
  store i32 %v4_1000242c, i32* %r5.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  %v4_10002434 = call i32 @function_10004430(i32 %v0_10002430, i32 %v0_10002420, i32 %v4_1000242c, i32 %v1_10002428)
  %v5_10002434 = trunc i32 %v4_10002434 to i16
  store i32 %v4_10002434, i32* %r3.global-to-local, align 4
  %v3_10002438 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002438, i32* %r7.global-to-local, align 4
  %v0_1000243c = load i32, i32* @r31, align 4
  %v1_1000243c = add i32 %v0_1000243c, 2
  %v2_1000243c = inttoptr i32 %v1_1000243c to i16*
  %v3_1000243c = load i16, i16* %v2_1000243c, align 2
  %v4_1000243c = zext i16 %v3_1000243c to i32
  store i32 %v4_1000243c, i32* %r0.global-to-local, align 4
  %v0_10002440 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002444 = mul i32 %v3_10002438, 24
  store i32 %v1_10002444, i32* %r7.global-to-local, align 4
  %v3_10002448 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002448, i32* %r5.global-to-local, align 4
  %v4_1000244c = add i32 %v0_1000243c, 6
  %v5_1000244c = inttoptr i32 %v4_1000244c to i16*
  store i16 %v5_10002434, i16* %v5_1000244c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10002454 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002454 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002454 = add i32 %v1_10002454, %v0_10002454
  store i32 %v2_10002454, i32* %r7.global-to-local, align 4
  %v0_10002458 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002458 = add i32 %v0_10002458, 32
  store i32 %v1_10002458, i32* %r5.global-to-local, align 4
  %v0_1000245c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000245c = trunc i32 %v0_1000245c to i16
  %v3_1000245c = add i32 %v2_10002454, 2
  %v4_1000245c = inttoptr i32 %v3_1000245c to i16*
  store i16 %v1_1000245c, i16* %v4_1000245c, align 2
  %v0_10002460 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268444780, i32* @lr, align 4
  %v6_10002468 = call i32 @function_10009ac0(i32 %v0_10002460, i32 %v0_10002440, i32 %v1_10002458, i32 16384, i32 %v2_10002454, i32 16)
  store i32 %v6_10002468, i32* %r3.global-to-local, align 4
  %v3_1000246c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000246c, i32* %r9.global-to-local, align 4
  %v1_10002470 = add i32 %v3_1000246c, 1
  store i32 %v1_10002470, i32* %r11.global-to-local, align 4
  %v1_10002474 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002474 = icmp slt i32 %v1_10002470, %v1_10002474
  store i32 %v1_10002470, i32* %stack_var_-88, align 4
  br i1 %v2_10002474, label %dec_label_pc_100023c8, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002408
  %v0_10002480 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002480 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002480 = or i1 %v0_10002480, %v1_10002480
  br i1 %v2_10002480, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100023b8

dec_label_pc_10002488:                            ; preds = %dec_label_pc_100023c8
  %v1_10002488 = add i32 %v2_100023d4, 16
  %v2_10002488 = inttoptr i32 %v1_10002488 to i32*
  %v3_10002488 = load i32, i32* %v2_10002488, align 4
  store i32 %v3_10002488, i32* %r29.global-to-local, align 4
  %v0_1000248c = call i32 @function_10005d68()
  store i32 %v0_1000248c, i32* %r3.global-to-local, align 4
  %v3_10002490 = load i32, i32* %stack_var_-88, align 4
  %v0_10002494 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002494 = load i32, i32* %r30.global-to-local, align 4
  %v4_10002494 = icmp eq i32 %v0_10002494, %v1_10002494
  %v1_10002498 = mul i32 %v3_10002490, 24
  %v1_1000249c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000249c = add i32 %v1_1000249c, %v1_10002498
  store i32 %v2_1000249c, i32* %r9.global-to-local, align 4
  %v1_100024a0 = add i32 %v2_1000249c, 20
  %v2_100024a0 = inttoptr i32 %v1_100024a0 to i8*
  %v3_100024a0 = load i8, i8* %v2_100024a0, align 1
  %v4_100024a0 = zext i8 %v3_100024a0 to i32
  store i32 %v4_100024a0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100024a0, 64
  %v2_100024a4 = zext i8 %tmp to i32
  %v3_100024a4 = lshr i32 %v0_1000248c, %v2_100024a4
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v0_100024a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100024a8 = add i32 %v3_100024a4, %v0_100024a8
  store i32 %v2_100024a8, i32* %r29.global-to-local, align 4
  %v1_100024ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100024ac = add i32 %v1_100024ac, 16
  %v3_100024ac = inttoptr i32 %v2_100024ac to i32*
  store i32 %v2_100024a8, i32* %v3_100024ac, align 4
  br i1 %v4_10002494, label %dec_label_pc_100024b4, label %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge

dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge: ; preds = %dec_label_pc_10002488
  %v1_100023f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002488, %dec_label_pc_100023f0
  %v0_100024b4 = call i32 @function_10005d68()
  %v1_100024b4 = trunc i32 %v0_100024b4 to i16
  store i32 %v0_100024b4, i32* %r3.global-to-local, align 4
  %v0_100024b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024b8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024b8 = icmp eq i32 %v0_100024b8, %v1_100024b8
  %v3_100024bc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024bc = add i32 %v3_100024bc, 4
  %v5_100024bc = inttoptr i32 %v4_100024bc to i16*
  store i16 %v1_100024b4, i16* %v5_100024bc, align 2
  br i1 %v4_100024b8, label %dec_label_pc_100024c4, label %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge

dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge: ; preds = %dec_label_pc_100024b4
  %v1_10002400.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002400

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100024b4, %dec_label_pc_100023f8
  %v0_100024c4 = call i32 @function_10005d68()
  %v1_100024c4 = trunc i32 %v0_100024c4 to i16
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  %v0_100024c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100024c8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024c8 = icmp eq i32 %v0_100024c8, %v1_100024c8
  %v3_100024cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024cc = add i32 %v3_100024cc, 20
  %v5_100024cc = inttoptr i32 %v4_100024cc to i16*
  store i16 %v1_100024c4, i16* %v5_100024cc, align 2
  br i1 %v4_100024c8, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_100024d4:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400
  %v0_100024d4 = call i32 @function_10005d68()
  %v1_100024d4 = trunc i32 %v0_100024d4 to i16
  store i32 %v0_100024d4, i32* %r3.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @r31, align 4
  %v4_100024d8 = add i32 %v3_100024d8, 2
  %v5_100024d8 = inttoptr i32 %v4_100024d8 to i16*
  store i16 %v1_100024d4, i16* %v5_100024d8, align 2
  br label %dec_label_pc_10002408

dec_label_pc_100024e0:                            ; preds = %dec_label_pc_100022a4
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100024e0, i32* %r3.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v0_100024e4 = call i32 @function_10008e20()
  store i32 %v0_100024e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_10002164, %dec_label_pc_100024e0
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v1_100024fc = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000216c)
  store i32 %v0_100021a4, i32* %r28.global-to-local, align 4
  store i32 %v0_100021ac, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b4, i32* %r30.global-to-local, align 4
  %v0_10002540 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002540

; uselistorder directives
  uselistorder i32 %v0_100024d4, { 1, 0 }
  uselistorder i32 %v0_100024c4, { 1, 0 }
  uselistorder i32 %v0_100024b4, { 1, 0 }
  uselistorder i1 %v1_10002480, { 1, 0 }
  uselistorder i1 %v0_10002480, { 1, 0 }
  uselistorder i32 %v1_10002470, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002434, { 1, 0 }
  uselistorder i32 %v2_10002414, { 1, 0 }
  uselistorder i32 %v1_100023d8, { 1, 0 }
  uselistorder i32 %v1_10002320, { 1, 0 }
  uselistorder i32 %v1_10002314, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_10002408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023b8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002360, { 1, 0 }
}

define i32 @function_10002544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002544:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10002548 = load i32, i32* @lr, align 4
  store i32 %v0_10002548, i32* %r0.global-to-local, align 4
  %v0_1000254c = call i32 @__asm_mfcr()
  store i32 %v0_1000254c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_1000255c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000254c, i32* %r15.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r24, align 4
  %v0_10002580 = load i32, i32* @r25, align 4
  %v0_10002584 = load i32, i32* @r26, align 4
  %v0_10002588 = load i32, i32* @r27, align 4
  %v0_1000258c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000259c = load i32, i32* @r31, align 4
  %v0_100025b0 = load i32, i32* @r30, align 4
  store i32 268445112, i32* @lr, align 4
  %v2_100025b4 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_100025b4, i32* %r16.global-to-local, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  %v0_100025c8 = load i32, i32* @r29, align 4
  store i32 %v0_100025c8, i32* %r3.global-to-local, align 4
  store i32 268445136, i32* @lr, align 4
  %v4_100025cc = inttoptr i32 %v0_100025bc to i32*
  %v5_100025cc = call i32 @function_100006a8(i32 %v0_100025c8, i32* %v4_100025cc, i32 2, i32 0)
  %v5_100025dc = trunc i32 %v5_100025cc to i8
  %v0_100025e4 = load i32, i32* @r28, align 4
  %v0_100025e8 = load i32, i32* @r29, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025ec = call i32 @function_100006a8(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r28, align 4
  store i32 %v5_100025ec, i32* %r19.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r29, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @function_100006a8(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r28, align 4
  %v5_10002614 = trunc i32 %v5_10002604 to i8
  %v0_1000261c = load i32, i32* @r29, align 4
  store i32 %v0_1000261c, i32* %r3.global-to-local, align 4
  store i32 268445220, i32* @lr, align 4
  %v4_10002620 = inttoptr i32 %v0_10002608 to i32*
  %v5_10002620 = call i32 @function_100006a8(i32 %v0_1000261c, i32* %v4_10002620, i32 5, i32 0)
  %v0_10002630 = load i32, i32* @r28, align 4
  %v1_10002634 = urem i32 %v5_10002620, 256
  store i32 %v1_10002634, i32* %r27.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r29, align 4
  store i32 %v0_10002638, i32* %r3.global-to-local, align 4
  store i32 268445248, i32* @lr, align 4
  %v4_1000263c = inttoptr i32 %v0_10002630 to i32*
  %v5_1000263c = call i32 @function_100006a8(i32 %v0_10002638, i32* %v4_1000263c, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r28, align 4
  store i32 %v5_1000263c, i32* %r20.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r29, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @function_100006a8(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 53)
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v5_10002654, i32* %r23.global-to-local, align 4
  %v0_1000266c = load i32, i32* @r29, align 4
  store i32 %v0_1000266c, i32* %r3.global-to-local, align 4
  store i32 268445300, i32* @lr, align 4
  %v4_10002670 = inttoptr i32 %v0_1000265c to i32*
  %v5_10002670 = call i32 @function_100006a8(i32 %v0_1000266c, i32* %v4_10002670, i32 9, i32 65535)
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v5_10002670, i32* %r24.global-to-local, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002674 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 0, i32 12)
  %v0_10002694 = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r26.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002694 to i32*
  %v5_100026a0 = call i32 @function_10000238(i32 %v0_1000269c, i32* %v4_100026a0, i32 8, i32 0)
  store i32 %v5_100026a0, i32* %r25.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445360, i32* @lr, align 4
  %v1_100026ac = call i32 @function_100080e8(i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  %v3_100026b8 = call i32 @function_10008034(i32 21, i32* null)
  store i32 %v3_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445384, i32* @lr, align 4
  %v2_100026c4 = call i32 @function_10008f88(i32 %v3_100026b8, i32 0)
  store i32 %v2_100026c4, i32* @r31, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445396, i32* @lr, align 4
  %v1_100026d0 = call i32 @function_1000805c(i32 21)
  store i32 %v1_100026d0, i32* %r3.global-to-local, align 4
  %v0_100026d4 = load i32, i32* @r31, align 4
  %v1_100026d4 = icmp slt i32 %v0_100026d4, 0
  %v3_100026d4 = icmp eq i32 %v0_100026d4, 0
  store i1 %v3_100026d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100026d4, label %dec_label_pc_100027a4, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002544
  %v2_100026dc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100026dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445424, i32* @lr, align 4
  %v3_100026ec = call i32 @function_10009058(i32 %v0_100026d4, i32 %v2_100026dc, i32 2048)
  store i32 %v3_100026ec, i32* %r30.global-to-local, align 4
  %v0_100026f4 = load i32, i32* @r31, align 4
  store i32 %v0_100026f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100026fc.20 to i32), i32* @lr, align 4
  %v0_100026f8 = call i32 @function_10008e20()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445444, i32* @lr, align 4
  %v1_10002700 = call i32 @function_100080e8(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_1000270c = call i32 @function_10008034(i32 22, i32* null)
  %v0_10002710 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100026dc, i32* %r3.global-to-local, align 4
  %v3_1000271c = bitcast i32* %stack_var_-2148 to i8*
  %v4_1000271c = call i32 @function_10008a10(i8* %v3_1000271c, i32 %v0_10002710, i32 %v3_1000270c)
  store i32 %v4_1000271c, i32* @r31, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v1_10002728 = call i32 @function_1000805c(i32 22)
  store i32 %v1_10002728, i32* %r3.global-to-local, align 4
  %v0_1000272c = load i32, i32* @r31, align 4
  %v3_1000272c = icmp eq i32 %v0_1000272c, -1
  store i1 %v3_1000272c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000272c, label %dec_label_pc_100027a4, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_100026dc
  %v0_10002734 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002734 = icmp sgt i32 %v0_10002734, %v0_1000272c
  %v4_10002734 = icmp eq i32 %v0_10002734, %v0_1000272c
  store i1 %v4_10002734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002734, label %dec_label_pc_1000273c, label %dec_label_pc_100027a4

dec_label_pc_1000273c:                            ; preds = %dec_label_pc_10002734
  %v2_1000273c = sub i32 %v0_10002734, %v0_1000272c
  store i32 %v2_1000273c, i32* %r0.global-to-local, align 4
  %v1_10002740 = add i32 %v0_10002734, -1
  store i32 %v1_10002740, i32* %r3.global-to-local, align 4
  store i32 %v2_1000273c, i32* %ctr.global-to-local, align 4
  %v0_1000274c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000274c = add i32 %v0_1000274c, %v0_1000272c
  store i32 %v2_1000274c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10002754 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10002754, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_1000273c
  %v0_100027a0 = phi i32 [ %v1_100027a0, %dec_label_pc_1000279c ], [ %v2_1000273c, %dec_label_pc_1000273c ]
  %v0_1000279c = phi i32 [ %v1_1000279c, %dec_label_pc_1000279c ], [ %v0_1000272c, %dec_label_pc_1000273c ]
  %v0_10002764 = phi i32 [ %v1_10002764, %dec_label_pc_1000279c ], [ %v2_1000274c, %dec_label_pc_1000273c ]
  %v0_10002758 = phi i32 [ %v0_100027584, %dec_label_pc_1000279c ], [ 0, %dec_label_pc_1000273c ]
  %v3_10002758 = icmp eq i32 %v0_10002758, 0
  store i1 %v3_10002758, i1* %cr7_eq.global-to-local, align 1
  %v1_1000275c = inttoptr i32 %v0_10002764 to i8*
  %v2_1000275c = load i8, i8* %v1_1000275c, align 1
  %v3_1000275c = zext i8 %v2_1000275c to i32
  store i32 %v3_1000275c, i32* %r9.global-to-local, align 4
  %v4_10002760 = icmp eq i32 %v1_10002740, %v0_1000279c
  %v1_10002764 = add i32 %v0_10002764, 1
  store i32 %v1_10002764, i32* %r11.global-to-local, align 4
  br i1 %v3_10002758, label %dec_label_pc_10002774, label %dec_label_pc_10002784

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002758
  %v3_10002774 = icmp eq i8 %v2_1000275c, 9
  store i1 %v3_10002774, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_1000275c, label %dec_label_pc_10002780 [
    i8 32, label %dec_label_pc_1000279c
    i8 9, label %dec_label_pc_1000279c
  ]

dec_label_pc_10002780:                            ; preds = %dec_label_pc_10002774
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10002784

dec_label_pc_10002784:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002780
  %v0_100027585 = phi i32 [ %v0_10002758, %dec_label_pc_10002758 ], [ 1, %dec_label_pc_10002780 ]
  %v1_10002784 = add nuw nsw i32 %v3_1000275c, 208
  %v1_10002788 = urem i32 %v1_10002784, 256
  store i32 %v1_10002788, i32* %r0.global-to-local, align 4
  %v2_1000278c = icmp ugt i32 %v1_10002788, 9
  %v3_1000278c = icmp eq i32 %v1_10002788, 9
  store i1 %v3_1000278c, i1* %cr7_eq.global-to-local, align 1
  %v3_10002768.not = icmp ne i8 %v2_1000275c, 46
  %brmerge.not = and i1 %v3_10002768.not, %v2_1000278c
  %brmerge26 = or i1 %v4_10002760, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100027d8, label %dec_label_pc_1000279c

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002784, %dec_label_pc_10002774, %dec_label_pc_10002774
  %v0_100027584 = phi i32 [ 0, %dec_label_pc_10002774 ], [ 0, %dec_label_pc_10002774 ], [ %v0_100027585, %dec_label_pc_10002784 ]
  %v1_1000279c = add i32 %v0_1000279c, 1
  %v1_100027a0 = add i32 %v0_100027a0, -1
  store i32 %v1_100027a0, i32* %ctr.global-to-local, align 4
  %v2_100027a0 = icmp eq i32 %v1_100027a0, 0
  br i1 %v2_100027a0, label %dec_label_pc_100027a4, label %dec_label_pc_10002758

dec_label_pc_100027a4:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002734, %dec_label_pc_100026dc, %dec_label_pc_10002544
  %v0_100027a4 = call i32 @function_10005d68()
  %v1_100027a8 = urem i32 %v0_100027a4, 4
  store i32 %v1_100027a8, i32* %r3.global-to-local, align 4
  %v3_100027ac = icmp eq i32 %v1_100027a8, 1
  store i1 %v3_100027ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027ac, label %dec_label_pc_10002b90, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a4
  %v1_100027ac = icmp eq i32 %v1_100027a8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100027ac, label %dec_label_pc_10002ba8, label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_100027b4
  %v2_100027bc = icmp eq i32 %v1_100027a8, 3
  %v3_100027bc = icmp eq i32 %v1_100027a8, 2
  store i1 %v3_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027bc, label %dec_label_pc_10002b9c, label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_100027bc
  store i1 %v2_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100027bc, label %dec_label_pc_100027cc, label %dec_label_pc_10002808

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027c4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_100027d8:                            ; preds = %dec_label_pc_10002784
  %v2_100027d8 = sub i32 %v0_1000279c, %v0_1000272c
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100027ec.21 to i32), i32* @lr, align 4
  %v3_100027e8 = call i32 @function_100086e4(i32 %v2_10002754, i32 %v2_1000274c, i32 %v2_100027d8)
  %v2_100027ec = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100027f0 = add i32 %v2_100027d8, %v2_100027ec
  store i32 %v2_100027f0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f0, 4
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i8*
  store i8 0, i8* %v4_100027f8, align 1
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 268445700, i32* @lr, align 4
  %v1_10002800 = call i32 @function_100098d4(i32 %v2_10002754)
  store i32 %v1_10002800, i32* %r3.global-to-local, align 4
  store i32 %v1_10002800, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002ba8, %dec_label_pc_10002b9c, %dec_label_pc_10002b90, %dec_label_pc_100027cc, %dec_label_pc_100027d8
  %v0_10002808 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002808 = icmp eq i32 %v0_10002808, 0
  store i1 %v3_10002808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002808, label %dec_label_pc_10002b30, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_10002808
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445720, i32* @lr, align 4
  %v1_10002814 = inttoptr i32 %v0_10002808 to i8*
  %v2_10002814 = call i32 @function_10008660(i8* %v1_10002814)
  store i32 %v2_10002814, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445740, i32* @lr, align 4
  %v3_10002828 = call i32 @function_10009b3c(i32 2, i32 3, i32 17)
  store i32 %v3_10002828, i32* %r3.global-to-local, align 4
  %v3_1000282c = icmp eq i32 %v3_10002828, -1
  store i1 %v3_1000282c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002828, i32* %r22.global-to-local, align 4
  br i1 %v3_1000282c, label %dec_label_pc_10002b30, label %dec_label_pc_10002838

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002810
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002844 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268445780, i32* @lr, align 4
  %v4_10002850 = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_10002844, i32 4)
  store i32 %v4_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = icmp eq i32 %v4_10002850, -1
  store i1 %v3_10002854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002854, label %dec_label_pc_10002b28, label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002838
  %v0_1000285c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000285c = icmp slt i32 %v0_1000285c, 0
  %v3_1000285c = icmp eq i32 %v0_1000285c, 0
  store i1 %v1_1000285c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000285c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r17.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r18.global-to-local, align 4
  %v0_1000286c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000286c = urem i32 %v0_1000286c, 65536
  store i32 %v1_1000286c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 65536
  store i32 %v1_10002874, i32* %r20.global-to-local, align 4
  %v0_10002878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002878 = urem i32 %v0_10002878, 256
  store i32 %v1_10002878, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000285c, 1
  %v1_10002b1c = load i32, i32* @r29, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v1_10002878
  store i32 %v2_10002b1c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_1000285c
  %v1_10002884 = icmp slt i32 %v1_10002b1c, 0
  %v3_10002884 = icmp eq i32 %v1_10002b1c, 0
  store i1 %v1_10002884, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002884, i1* %cr3_eq.global-to-local, align 1
  %v1_10002888 = urem i32 %v2_10002b1c, 65536
  %v0_1000288c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000288c = icmp eq i32 %v0_1000288c, 0
  store i1 %v3_1000288c, i1* %cr2_eq.global-to-local, align 1
  %v1_10002890 = add nuw nsw i32 %v1_10002888, 27
  store i32 %v1_10002890, i32* %r0.global-to-local, align 4
  %v1_10002894 = add nuw nsw i32 %v1_10002888, 47
  store i32 %v1_10002894, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10002b1c, 47
  %v1_10002898 = urem i32 %fold, 65536
  store i32 %v1_10002898, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10002b1c, 27
  %v1_1000289c = urem i32 %fold3, 65536
  store i32 %v1_1000289c, i32* %r27.global-to-local, align 4
  %v1_100028a0 = add i32 %v1_10002b1c, 1
  store i32 %v1_100028a0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100028f0 = sext i8 %v5_100025dc to i32
  %v4_100028f8 = sext i8 %v5_10002614 to i32
  br label %dec_label_pc_100028a8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002880
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v2_100028b0 = call i32 @function_10009e98(i32 600, i32 1)
  store i32 %v2_100028b0, i32* %r3.global-to-local, align 4
  %v3_100028b4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100028b4, i32* %r0.global-to-local, align 4
  %v0_100028b8 = load i32, i32* @r31, align 4
  %v1_100028b8 = mul i32 %v0_100028b8, 4
  store i32 %v1_100028b8, i32* %r9.global-to-local, align 4
  %v2_100028bc = load i32, i32* %r16.global-to-local, align 4
  %v3_100028bc = add i32 %v2_100028bc, %v1_100028b8
  %v4_100028bc = inttoptr i32 %v3_100028bc to i32*
  store i32 %v2_100028b0, i32* %v4_100028bc, align 4
  %v0_100028c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100028c0 = mul i32 %v0_100028c0, 4
  store i32 %v1_100028c0, i32* %r0.global-to-local, align 4
  %v0_100028c4 = load i32, i32* %r16.global-to-local, align 4
  %v2_100028c4 = add i32 %v0_100028c4, %v1_100028c0
  %v3_100028c4 = inttoptr i32 %v2_100028c4 to i32*
  %v4_100028c4 = load i32, i32* %v3_100028c4, align 4
  store i32 %v4_100028c4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100028cc = inttoptr i32 %v4_100028c4 to i32*
  %v2_100028cc = load i32, i32* %v1_100028cc, align 4
  store i32 %v2_100028cc, i32* %r9.global-to-local, align 4
  %v1_100028d0 = add i32 %v4_100028c4, 20
  store i32 %v1_100028d0, i32* %r10.global-to-local, align 4
  %v0_100028d4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v0_100028d4 to i16
  %v3_100028d4 = add i32 %v4_100028c4, 4
  %v4_100028d4 = inttoptr i32 %v3_100028d4 to i16*
  store i16 %v1_100028d4, i16* %v4_100028d4, align 2
  %v0_100028d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100028d8 = add i32 %v0_100028d8, 28
  store i32 %v1_100028d8, i32* %r8.global-to-local, align 4
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100028e4, i32* %r9.global-to-local, align 4
  %v1_100028e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v0_100028ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100028ec = trunc i32 %v0_100028ec to i16
  %v2_100028ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100028ec = add i32 %v2_100028ec, 2
  %v4_100028ec = inttoptr i32 %v3_100028ec to i16*
  store i16 %v1_100028ec, i16* %v4_100028ec, align 2
  store i32 %v4_100028f0, i32* %r0.global-to-local, align 4
  %v2_100028f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100028f4 = add i32 %v2_100028f4, 1
  %v4_100028f4 = inttoptr i32 %v3_100028f4 to i8*
  store i8 %v5_100025dc, i8* %v4_100028f4, align 1
  store i32 %v4_100028f8, i32* %r7.global-to-local, align 4
  %v2_100028fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100028fc = add i32 %v2_100028fc, 8
  %v4_100028fc = inttoptr i32 %v3_100028fc to i8*
  store i8 %v5_10002614, i8* %v4_100028fc, align 1
  %v0_10002900 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002900, label %dec_label_pc_1000290c, label %dec_label_pc_10002904

dec_label_pc_10002904:                            ; preds = %dec_label_pc_100028a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002908 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002908 = add i32 %v2_10002908, 6
  %v4_10002908 = inttoptr i32 %v3_10002908 to i16*
  store i16 16384, i16* %v4_10002908, align 2
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028a8, %dec_label_pc_10002904
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10002914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002914 = add i32 %v2_10002914, 9
  %v4_10002914 = inttoptr i32 %v3_10002914 to i8*
  store i8 17, i8* %v4_10002914, align 1
  %v0_10002918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002918 = add i32 %v0_10002918, 41
  store i32 %v1_10002918, i32* %r9.global-to-local, align 4
  %v0_1000291c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000291c = add i32 %v2_1000291c, 4
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v0_10002920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002920 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002920 = add i32 %v1_10002920, %v0_10002920
  store i32 %v2_10002920, i32* %r30.global-to-local, align 4
  %v3_10002924 = load i32, i32* @global_var_1001c188.16, align 4
  store i32 %v3_10002924, i32* %r0.global-to-local, align 4
  %v1_10002928 = add i32 %v2_10002920, 1
  store i32 %v1_10002928, i32* %r31.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000292c = trunc i32 %v0_1000292c to i16
  %v2_1000292c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000292c = add i32 %v2_1000292c, 2
  %v4_1000292c = inttoptr i32 %v3_1000292c to i16*
  store i16 %v1_1000292c, i16* %v4_1000292c, align 2
  %v0_10002930 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002930, i32* %r3.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002934 = add i32 %v1_10002934, 12
  %v3_10002934 = inttoptr i32 %v2_10002934 to i32*
  store i32 %v0_10002934, i32* %v3_10002934, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000293c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000293c = trunc i32 %v0_1000293c to i16
  %v2_1000293c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000293c = add i32 %v2_1000293c, 20
  %v4_1000293c = inttoptr i32 %v3_1000293c to i16*
  store i16 %v1_1000293c, i16* %v4_1000293c, align 2
  %v0_10002940 = load i32, i32* %r25.global-to-local, align 4
  %v0_10002944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002944 = trunc i32 %v0_10002944 to i16
  %v2_10002944 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002944 = add i32 %v2_10002944, 2
  %v4_10002944 = inttoptr i32 %v3_10002944 to i16*
  store i16 %v1_10002944, i16* %v4_10002944, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000294c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000294c = add i32 %v2_1000294c, 4
  %v4_1000294c = inttoptr i32 %v3_1000294c to i16*
  store i16 1, i16* %v4_1000294c, align 2
  %v0_10002950 = load i32, i32* @r28, align 4
  %v0_10002954 = load i32, i32* @r21, align 4
  %v1_10002954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002954 = add i32 %v1_10002954, 16
  %v3_10002954 = inttoptr i32 %v2_10002954 to i32*
  store i32 %v0_10002954, i32* %v3_10002954, align 4
  %v0_10002958 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002958 = trunc i32 %v0_10002958 to i16
  %v2_10002958 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002958 = add i32 %v2_10002958, 28
  %v4_10002958 = inttoptr i32 %v3_10002958 to i16*
  store i16 %v1_10002958, i16* %v4_10002958, align 2
  %v0_1000295c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000295c = trunc i32 %v0_1000295c to i8
  %v2_1000295c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000295c = add i32 %v2_1000295c, 40
  %v4_1000295c = inttoptr i32 %v3_1000295c to i8*
  store i8 %v1_1000295c, i8* %v4_1000295c, align 1
  store i32 268446052, i32* @lr, align 4
  %v3_10002960 = call i32 @function_100086e4(i32 %v0_10002930, i32 %v0_10002940, i32 %v0_10002950)
  store i32 %v3_10002960, i32* %r3.global-to-local, align 4
  %v0_10002964 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10002964 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10002964 = or i1 %v0_10002964, %v1_10002964
  br i1 %v2_10002964, label %dec_label_pc_100029b0, label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_1000290c
  %v0_10002968 = load i32, i32* @r29, align 4
  store i32 %v0_10002968, i32* %ctr.global-to-local, align 4
  %v0_1000296c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000296c, i32* %r3.global-to-local, align 4
  %v0_10002970 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10002970, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10002990

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002990
  %v1_10002980 = urem i32 %v1_10002994, 256
  br label %dec_label_pc_10002984

dec_label_pc_10002984:                            ; preds = %dec_label_pc_100029a0, %dec_label_pc_10002980
  %v0_1000298c = phi i32 [ %v0_1000298c.pre, %dec_label_pc_100029a0 ], [ %v0_1000298c18, %dec_label_pc_10002980 ]
  %v0_10002988 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v0_1000298816, %dec_label_pc_10002980 ]
  %v2_100029a013 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v2_100029a0, %dec_label_pc_10002980 ]
  %v0_10002984 = phi i32 [ %v0_10002984.pre, %dec_label_pc_100029a0 ], [ %v0_10002990, %dec_label_pc_10002980 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100029a0 ], [ %v1_10002980, %dec_label_pc_10002980 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10002984 = add i32 %v0_10002984, 1
  store i32 %v1_10002984, i32* %r10.global-to-local, align 4
  %v1_10002988 = add i32 %v0_10002988, 1
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  %v1_1000298c = add i32 %v0_1000298c, -1
  store i32 %v1_1000298c, i32* %ctr.global-to-local, align 4
  %v2_1000298c = icmp eq i32 %v1_1000298c, 0
  br i1 %v2_1000298c, label %dec_label_pc_100029b8.loopexit, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002984, %dec_label_pc_10002968
  %v0_1000298c18 = phi i32 [ %v1_1000298c, %dec_label_pc_10002984 ], [ %v0_10002968, %dec_label_pc_10002968 ]
  %v0_1000298816 = phi i32 [ %v1_10002988, %dec_label_pc_10002984 ], [ %v0_1000296c, %dec_label_pc_10002968 ]
  %v2_100029a0 = phi i32 [ %v2_100029a013, %dec_label_pc_10002984 ], [ %v0_10002970, %dec_label_pc_10002968 ]
  %v0_100029a0 = phi i32 [ %storemerge, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v0_10002990 = phi i32 [ %v1_10002984, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v1_10002990 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002990 = add i32 %v1_10002990, %v0_10002990
  %v3_10002990 = inttoptr i32 %v2_10002990 to i8*
  %v4_10002990 = load i8, i8* %v3_10002990, align 1
  %v5_10002990 = zext i8 %v4_10002990 to i32
  store i32 %v5_10002990, i32* %r0.global-to-local, align 4
  %v1_10002994 = add nsw i32 %v0_100029a0, 1
  store i32 %v1_10002994, i32* %r11.global-to-local, align 4
  %v3_10002998 = icmp eq i8 %v4_10002990, 46
  store i1 %v3_10002998, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002998, label %dec_label_pc_100029a0, label %dec_label_pc_10002980

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_10002990
  %v1_100029a0 = trunc i32 %v0_100029a0 to i8
  %v3_100029a0 = inttoptr i32 %v2_100029a0 to i8*
  store i8 %v1_100029a0, i8* %v3_100029a0, align 1
  %v0_100029a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100029a4, i32* %r9.global-to-local, align 4
  %v0_10002984.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000298c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002984

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_1000290c
  %v0_100029b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100029b0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8.loopexit:                   ; preds = %dec_label_pc_10002984
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.loopexit, %dec_label_pc_100029b0
  %v2_100029b8 = phi i32 [ %v2_100029a013, %dec_label_pc_100029b8.loopexit ], [ %v0_100029b0, %dec_label_pc_100029b0 ]
  %v0_100029b8.off0 = phi i8 [ %extract.t, %dec_label_pc_100029b8.loopexit ], [ 0, %dec_label_pc_100029b0 ]
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i8*
  store i8 %v0_100029b8.off0, i8* %v3_100029b8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100029c0 = load i32, i32* @r29, align 4
  %v2_100029c0 = add i32 %v1_100029c0, %v0_100029c0
  store i32 %v2_100029c0, i32* %r9.global-to-local, align 4
  %v3_100029c4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100029c4, i32* %r11.global-to-local, align 4
  %v3_100029c8 = add i32 %v2_100029c0, 4
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i16*
  store i16 1, i16* %v4_100029c8, align 2
  %v0_100029cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 1
  store i32 %v1_100029cc, i32* %r31.global-to-local, align 4
  %v0_100029d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029d0 = trunc i32 %v0_100029d0 to i16
  %v2_100029d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100029d0 = add i32 %v2_100029d0, 2
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i16*
  store i16 %v1_100029d0, i16* %v4_100029d0, align 2
  %v0_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029d4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100029d4 = icmp slt i32 %v0_100029d4, %v1_100029d4
  %v4_100029d4 = icmp eq i32 %v0_100029d4, %v1_100029d4
  store i1 %v4_100029d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100029d4, i32* %stack_var_-2184, align 4
  br i1 %v2_100029d4, label %dec_label_pc_100028a8, label %dec_label_pc_100029e0.preheader.loopexit

dec_label_pc_100029e0.preheader.loopexit:         ; preds = %dec_label_pc_100029b8
  %v0_100029e0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029e0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029e0.preheader

dec_label_pc_100029e0.preheader:                  ; preds = %dec_label_pc_10002ad8, %dec_label_pc_1000285c, %dec_label_pc_100029e0.preheader.loopexit
  %v1_100029e0 = phi i1 [ %v1_1000285c, %dec_label_pc_1000285c ], [ %v1_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v1_10002ad8, %dec_label_pc_10002ad8 ]
  %v0_100029e0 = phi i1 [ %v3_1000285c, %dec_label_pc_1000285c ], [ %v0_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v0_10002ad8, %dec_label_pc_10002ad8 ]
  %v2_100029e0 = or i1 %v1_100029e0, %v0_100029e0
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029e0.preheader, %dec_label_pc_100029e0
  br i1 %v2_100029e0, label %dec_label_pc_100029e0, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_10002ad8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100029f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100029f4 = icmp eq i32 %v0_100029f4, 65535
  store i1 %v4_100029f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100029f8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100029f8 = icmp slt i32 %v0_100029f8, 65535
  %v4_100029f8 = icmp eq i32 %v0_100029f8, 65535
  store i1 %v2_100029f8, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100029f8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029fc = load i32, i32* %r20.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  store i1 %v4_100029fc, i1* %cr2_eq.global-to-local, align 1
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v1_10002a00 = add i32 %v0_10002a00, 27
  store i32 %v1_10002a00, i32* @r30, align 4
  %v0_10002a04 = call i32 @__asm_mfcr()
  store i32 %v0_10002a04, i32* %r3.global-to-local, align 4
  %v1_10002a08 = mul i32 %v0_10002a04, 268435456
  store i32 %v1_10002a08, i32* @r26, align 4
  %v0_10002a0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a0c = load i32, i32* %r0.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  store i1 %v4_10002a0c, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a10 = load i32, i32* @r24, align 4
  %v1_10002a10 = add i32 %v0_10002a10, 47
  store i32 %v1_10002a10, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002a18 = call i32 @__asm_mfcr()
  store i32 %v0_10002a18, i32* %r3.global-to-local, align 4
  %v1_10002a1c = mul i32 %v0_10002a18, 268435456
  store i32 %v1_10002a1c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10002a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, %dec_label_pc_100029e4
  %v0_10002a28 = phi i32 [ %v0_10002a28.pre, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v1_10002a1c, %dec_label_pc_100029e4 ]
  %v0_10002a24 = phi i32 [ %v1_10002ac8, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v0_10002a24.pre, %dec_label_pc_100029e4 ]
  %v1_10002a24 = mul i32 %v0_10002a24, 4
  store i32 %v1_10002a24, i32* %r0.global-to-local, align 4
  %v1_10002a28 = mul i32 %v0_10002a28, 16
  %v2_10002a28 = udiv i32 %v0_10002a28, 268435456
  %v3_10002a28 = or i32 %v2_10002a28, %v1_10002a28
  store i32 %v3_10002a28, i32* %r27.global-to-local, align 4
  %v1_10002a2c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a28)
  %v1_10002a30 = mul nuw i32 %v2_10002a28, 268435456
  %v2_10002a30 = urem i32 %v0_10002a28, 268435456
  %v3_10002a30 = or i32 %v1_10002a30, %v2_10002a30
  store i32 %v3_10002a30, i32* @r27, align 4
  %v0_10002a34 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10002a34 = add i32 %v1_10002a34, %v0_10002a34
  %v3_10002a34 = inttoptr i32 %v2_10002a34 to i32*
  %v4_10002a34 = load i32, i32* %v3_10002a34, align 4
  store i32 %v4_10002a34, i32* @r29, align 4
  %v1_10002a38 = add i32 %v4_10002a34, 20
  store i32 %v1_10002a38, i32* @r28, align 4
  %v0_10002a3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a3c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a40

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a24
  %v0_10002a40 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a40, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002a44 = load i32, i32* @r26, align 4
  %v1_10002a44 = mul i32 %v0_10002a44, 16
  %v2_10002a44 = udiv i32 %v0_10002a44, 268435456
  %v3_10002a44 = or i32 %v2_10002a44, %v1_10002a44
  store i32 %v3_10002a44, i32* %r26.global-to-local, align 4
  %v1_10002a48 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a44)
  %v1_10002a4c = mul nuw i32 %v2_10002a44, 268435456
  %v2_10002a4c = urem i32 %v0_10002a44, 268435456
  %v3_10002a4c = or i32 %v1_10002a4c, %v2_10002a4c
  store i32 %v3_10002a4c, i32* @r26, align 4
  %v0_10002a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a50, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002a54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a54, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54, %dec_label_pc_10002b10
  %v0_10002a58 = load i32, i32* @r29, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 41
  store i32 %v1_10002a58, i32* %r3.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r23.global-to-local, align 4
  store i32 268446308, i32* @lr, align 4
  %v2_10002a60 = inttoptr i32 %v1_10002a58 to i8*
  %v3_10002a60 = call i32 @function_10005e28(i8* %v2_10002a60, i32 %v0_10002a5c)
  %v0_10002a64 = load i32, i32* @r25, align 4
  %v1_10002a64 = trunc i32 %v0_10002a64 to i16
  %v2_10002a64 = load i32, i32* @r29, align 4
  %v3_10002a64 = add i32 %v2_10002a64, 10
  %v4_10002a64 = inttoptr i32 %v3_10002a64 to i16*
  store i16 %v1_10002a64, i16* %v4_10002a64, align 2
  %v0_10002a6c = load i32, i32* @r29, align 4
  store i32 %v0_10002a6c, i32* @r3, align 4
  %v2_10002a70 = call i32 @function_100043cc(i32 %v0_10002a6c, i32 20)
  %v3_10002a70 = trunc i32 %v2_10002a70 to i16
  %v0_10002a74 = load i32, i32* @r28, align 4
  store i32 %v0_10002a74, i32* @r4, align 4
  %v3_10002a78 = load i32, i32* @r29, align 4
  %v4_10002a78 = add i32 %v3_10002a78, 10
  %v5_10002a78 = inttoptr i32 %v4_10002a78 to i16*
  store i16 %v3_10002a70, i16* %v5_10002a78, align 2
  %v0_10002a7c = load i32, i32* @r30, align 4
  %v0_10002a80 = load i32, i32* @r25, align 4
  %v1_10002a80 = trunc i32 %v0_10002a80 to i16
  %v2_10002a80 = load i32, i32* @r28, align 4
  %v3_10002a80 = add i32 %v2_10002a80, 6
  %v4_10002a80 = inttoptr i32 %v3_10002a80 to i16*
  store i16 %v1_10002a80, i16* %v4_10002a80, align 2
  %v0_10002a84 = load i32, i32* @r29, align 4
  store i32 %v0_10002a84, i32* %r3.global-to-local, align 4
  %v0_10002a88 = load i32, i32* @r28, align 4
  %v1_10002a88 = add i32 %v0_10002a88, 4
  %v2_10002a88 = inttoptr i32 %v1_10002a88 to i16*
  %v3_10002a88 = load i16, i16* %v2_10002a88, align 2
  %v4_10002a88 = zext i16 %v3_10002a88 to i32
  %v4_10002a8c = call i32 @function_10004430(i32 %v0_10002a84, i32 %v0_10002a74, i32 %v4_10002a88, i32 %v0_10002a7c)
  %v5_10002a8c = trunc i32 %v4_10002a8c to i16
  store i32 %v4_10002a8c, i32* %r3.global-to-local, align 4
  %v3_10002a90 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002a90, i32* %r7.global-to-local, align 4
  %v0_10002a94 = load i32, i32* @r28, align 4
  %v1_10002a94 = add i32 %v0_10002a94, 2
  %v2_10002a94 = inttoptr i32 %v1_10002a94 to i16*
  %v3_10002a94 = load i16, i16* %v2_10002a94, align 2
  %v4_10002a94 = zext i16 %v3_10002a94 to i32
  store i32 %v4_10002a94, i32* %r0.global-to-local, align 4
  %v0_10002a98 = load i32, i32* @r29, align 4
  %v1_10002a9c = mul i32 %v3_10002a90, 24
  store i32 %v1_10002a9c, i32* %r7.global-to-local, align 4
  %v4_10002aa0 = add i32 %v0_10002a94, 6
  %v5_10002aa0 = inttoptr i32 %v4_10002aa0 to i16*
  store i16 %v5_10002a8c, i16* %v5_10002aa0, align 2
  %v0_10002aa4 = load i32, i32* @r31, align 4
  %v0_10002aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r7.global-to-local, align 4
  %v1_10002aac = load i32, i32* %r14.global-to-local, align 4
  %v2_10002aac = add i32 %v1_10002aac, %v0_10002aac
  store i32 %v2_10002aac, i32* %r7.global-to-local, align 4
  %v0_10002ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ab4 = trunc i32 %v0_10002ab4 to i16
  %v3_10002ab4 = add i32 %v2_10002aac, 2
  %v4_10002ab4 = inttoptr i32 %v3_10002ab4 to i16*
  store i16 %v1_10002ab4, i16* %v4_10002ab4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10002abc = load i32, i32* @r21, align 4
  %v2_10002abc = add i32 %v2_10002aac, 4
  %v3_10002abc = inttoptr i32 %v2_10002abc to i32*
  store i32 %v0_10002abc, i32* %v3_10002abc, align 4
  store i32 268446404, i32* @lr, align 4
  %v6_10002ac0 = call i32 @function_10009ac0(i32 %v0_10002aa8, i32 %v0_10002a98, i32 %v0_10002aa4, i32 16384, i32 %v2_10002aac, i32 16)
  store i32 %v6_10002ac0, i32* %r3.global-to-local, align 4
  %v3_10002ac4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002ac4, i32* %r9.global-to-local, align 4
  %v1_10002ac8 = add i32 %v3_10002ac4, 1
  store i32 %v1_10002ac8, i32* %r0.global-to-local, align 4
  %v1_10002acc = load i32, i32* %r15.global-to-local, align 4
  %v2_10002acc = icmp slt i32 %v1_10002ac8, %v1_10002acc
  %v4_10002acc = icmp eq i32 %v1_10002ac8, %v1_10002acc
  store i1 %v4_10002acc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ac8, i32* %stack_var_-2184, align 4
  br i1 %v2_10002acc, label %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, label %dec_label_pc_10002ad8

dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge: ; preds = %dec_label_pc_10002a58
  %v0_10002a28.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_10002a58
  %v0_10002ad8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002ad8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002ad8 = or i1 %v0_10002ad8, %v1_10002ad8
  br i1 %v2_10002ad8, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_100029e4

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002a24
  %v0_10002ae0 = call i32 @function_10005d68()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v3_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = add i32 %v3_10002ae4, 4
  %v5_10002ae4 = inttoptr i32 %v4_10002ae4 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae4, align 2
  %v0_10002ae8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ae8, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002aec = call i32 @function_10005d68()
  %v1_10002aec = trunc i32 %v0_10002aec to i16
  store i32 %v0_10002aec, i32* %r3.global-to-local, align 4
  %v0_10002af0 = load i32, i32* @r26, align 4
  %v1_10002af0 = mul i32 %v0_10002af0, 16
  %v2_10002af0 = udiv i32 %v0_10002af0, 268435456
  %v3_10002af0 = or i32 %v2_10002af0, %v1_10002af0
  store i32 %v3_10002af0, i32* %r26.global-to-local, align 4
  %v1_10002af4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002af0)
  %v1_10002af8 = mul nuw i32 %v2_10002af0, 268435456
  %v2_10002af8 = urem i32 %v0_10002af0, 268435456
  %v3_10002af8 = or i32 %v1_10002af8, %v2_10002af8
  store i32 %v3_10002af8, i32* @r26, align 4
  %v3_10002afc = load i32, i32* @r29, align 4
  %v4_10002afc = add i32 %v3_10002afc, 20
  %v5_10002afc = inttoptr i32 %v4_10002afc to i16*
  store i16 %v1_10002aec, i16* %v5_10002afc, align 2
  %v0_10002b00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002b04 = call i32 @function_10005d68()
  %v1_10002b04 = trunc i32 %v0_10002b04 to i16
  store i32 %v0_10002b04, i32* %r3.global-to-local, align 4
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b04, i16* %v5_10002b08, align 2
  %v0_10002b0c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b0c, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54
  %v0_10002b10 = call i32 @function_10005d68()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 28
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  br label %dec_label_pc_10002a58

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002838
  %v0_10002b28 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002b28, i32* %r3.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v0_10002b2c = call i32 @function_10008e20()
  store i32 %v0_10002b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b30

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_10002810, %dec_label_pc_10002808, %dec_label_pc_10002b28
  store i32 %v0_1000255c, i32* %r0.global-to-local, align 4
  %v1_10002b44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000254c)
  store i32 %v0_1000257c, i32* %r24.global-to-local, align 4
  store i32 %v0_10002580, i32* %r25.global-to-local, align 4
  store i32 %v0_10002584, i32* %r26.global-to-local, align 4
  store i32 %v0_10002588, i32* %r27.global-to-local, align 4
  store i32 %v0_1000258c, i32* %r28.global-to-local, align 4
  store i32 %v0_100025b0, i32* %r30.global-to-local, align 4
  store i32 %v0_1000259c, i32* %r31.global-to-local, align 4
  %v0_10002b8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b8c

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_100027a4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_100027bc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002ba8:                            ; preds = %dec_label_pc_100027b4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10002808

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 2, 1, 0 }
  uselistorder i32 %v0_10002aec, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i1 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v0_10002ad8, { 1, 0 }
  uselistorder i32 %v1_10002ac8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002a8c, { 1, 0 }
  uselistorder i32 %v0_10002a44, { 2, 1, 0 }
  uselistorder i32 %v0_10002a28, { 2, 1, 0 }
  uselistorder i32 %v1_10002a1c, { 1, 0 }
  uselistorder i32 %v0_100029a4, { 2, 0, 1 }
  uselistorder i32 %v1_10002994, { 1, 0 }
  uselistorder i32 %v1_1000298c, { 0, 2, 1 }
  uselistorder i32 %v1_100028c0, { 1, 0 }
  uselistorder i32 %v1_100028b8, { 1, 0 }
  uselistorder i32 %v2_10002b1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b1c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002878, { 1, 0 }
  uselistorder i32 %v0_10002808, { 1, 0, 2 }
  uselistorder i1 %v2_100027bc, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100027a0, { 2, 1, 0 }
  uselistorder i32 %v1_10002788, { 1, 2, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v0_10002758, { 1, 0 }
  uselistorder i32 %v2_10002754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10002734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000272c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100026d4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10002614, { 1, 0 }
  uselistorder i8 %v5_100025dc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029e4, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000290c, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @function_10002bb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bb4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10002bb8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bb8, i32* %r0.global-to-local, align 4
  %v0_10002bbc = call i32 @__asm_mfcr()
  store i32 %v0_10002bbc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r21.global-to-local, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268446760, i32* @lr, align 4
  %v2_10002c24 = call i32 @function_10009e98(i32 16, i32 16)
  store i32 %v2_10002c24, i32* %r22.global-to-local, align 4
  %v0_10002c30 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_10009e98(i32 %v0_10002c30, i32 4)
  %v0_10002c38 = load i32, i32* @r28, align 4
  store i32 %v2_10002c34, i32* %r23.global-to-local, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c38 to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* @r31, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb4 = load i32, i32* @r28, align 4
  %v0_10002cbc = load i32, i32* @r29, align 4
  store i32 %v0_10002cbc, i32* %r3.global-to-local, align 4
  store i32 268446916, i32* @lr, align 4
  %v4_10002cc0 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc0 = call i32 @function_100006a8(i32 %v0_10002cbc, i32* %v4_10002cc0, i32 7, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  %v5_10002cd0 = trunc i32 %v5_10002cc0 to i16
  %v0_10002cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd8, i32* %r3.global-to-local, align 4
  store i32 268446944, i32* @lr, align 4
  %v4_10002cdc = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cdc = call i32 @function_100006a8(i32 %v0_10002cd8, i32* %v4_10002cdc, i32 11, i32 1)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  %v1_10002ce4 = urem i32 %v5_10002cdc, 256
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf4, i32* %r3.global-to-local, align 4
  store i32 268446972, i32* @lr, align 4
  %v4_10002cf8 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf8 = call i32 @function_100006a8(i32 %v0_10002cf4, i32* %v4_10002cf8, i32 12, i32 1)
  %v0_10002cfc = load i32, i32* @r28, align 4
  %v1_10002d08 = urem i32 %v5_10002cf8, 256
  %v0_10002d0c = load i32, i32* @r29, align 4
  store i32 %v0_10002d0c, i32* %r3.global-to-local, align 4
  store i32 268446996, i32* @lr, align 4
  %v4_10002d10 = inttoptr i32 %v0_10002cfc to i32*
  %v5_10002d10 = call i32 @function_100006a8(i32 %v0_10002d0c, i32* %v4_10002d10, i32 13, i32 1)
  %v0_10002d14 = load i32, i32* @r28, align 4
  %v1_10002d20 = urem i32 %v5_10002d10, 256
  %v0_10002d24 = load i32, i32* @r29, align 4
  store i32 %v0_10002d24, i32* %r3.global-to-local, align 4
  store i32 268447020, i32* @lr, align 4
  %v4_10002d28 = inttoptr i32 %v0_10002d14 to i32*
  %v5_10002d28 = call i32 @function_100006a8(i32 %v0_10002d24, i32* %v4_10002d28, i32 14, i32 1)
  %v0_10002d2c = load i32, i32* @r28, align 4
  %v1_10002d38 = urem i32 %v5_10002d28, 256
  %v0_10002d3c = load i32, i32* @r29, align 4
  store i32 %v0_10002d3c, i32* %r3.global-to-local, align 4
  store i32 268447044, i32* @lr, align 4
  %v4_10002d40 = inttoptr i32 %v0_10002d2c to i32*
  %v5_10002d40 = call i32 @function_100006a8(i32 %v0_10002d3c, i32* %v4_10002d40, i32 15, i32 1)
  %v0_10002d44 = load i32, i32* @r28, align 4
  %v1_10002d50 = urem i32 %v5_10002d40, 256
  %v0_10002d54 = load i32, i32* @r29, align 4
  store i32 %v0_10002d54, i32* %r3.global-to-local, align 4
  store i32 268447068, i32* @lr, align 4
  %v4_10002d58 = inttoptr i32 %v0_10002d44 to i32*
  %v5_10002d58 = call i32 @function_100006a8(i32 %v0_10002d54, i32* %v4_10002d58, i32 16, i32 1)
  %v0_10002d64 = load i32, i32* @r28, align 4
  %v1_10002d68 = urem i32 %v5_10002d58, 256
  %v0_10002d6c = load i32, i32* @r29, align 4
  store i32 %v0_10002d6c, i32* %r3.global-to-local, align 4
  store i32 268447092, i32* @lr, align 4
  %v4_10002d70 = inttoptr i32 %v0_10002d64 to i32*
  %v5_10002d70 = call i32 @function_100006a8(i32 %v0_10002d6c, i32* %v4_10002d70, i32 0, i32 768)
  %v0_10002d74 = load i32, i32* @r28, align 4
  store i32 %v5_10002d70, i32* %r25.global-to-local, align 4
  %v0_10002d84 = load i32, i32* @r29, align 4
  store i32 %v0_10002d84, i32* %r3.global-to-local, align 4
  store i32 268447116, i32* @lr, align 4
  %v4_10002d88 = inttoptr i32 %v0_10002d74 to i32*
  %v5_10002d88 = call i32 @function_100006a8(i32 %v0_10002d84, i32* %v4_10002d88, i32 1, i32 1)
  %v1_10002d90 = urem i32 %v5_10002d88, 256
  store i32 %v1_10002d90, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v3_10002d9c = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  store i32 %v3_10002d9c, i32* %r3.global-to-local, align 4
  %v3_10002da0 = icmp eq i32 %v3_10002d9c, -1
  store i1 %v3_10002da0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d9c, i32* %r24.global-to-local, align 4
  br i1 %v3_10002da0, label %dec_label_pc_10002f60, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %dec_label_pc_10002bb4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002db8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268447176, i32* @lr, align 4
  %v4_10002dc4 = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_10002db8, i32 4)
  store i32 %v4_10002dc4, i32* %r3.global-to-local, align 4
  %v3_10002dc8 = icmp eq i32 %v4_10002dc4, -1
  store i1 %v3_10002dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002dc8, label %dec_label_pc_10002f58, label %dec_label_pc_10002dd0

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002dac
  %v0_10002dd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dd0 = icmp slt i32 %v0_10002dd0, 0
  %v3_10002dd0 = icmp eq i32 %v0_10002dd0, 0
  store i1 %v1_10002dd0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002dd0, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10002ddc = load i32, i32* @r31, align 4
  %v1_10002ddc = urem i32 %v0_10002ddc, 65536
  store i32 %v1_10002ddc, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10002dd0, 1
  br i1 %tmp49, label %dec_label_pc_100030f8, label %dec_label_pc_10002de4

dec_label_pc_10002de4:                            ; preds = %dec_label_pc_10002dd0
  %v4_10002de4 = sext i16 %v5_10002cd0 to i32
  store i32 %v4_10002de4, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10002e88 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002e94 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10002e98 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10002ed0 = zext i16 %tmp13 to i32
  %v1_10002f00 = and i32 %tmp, 1179648
  %v3_10003014 = icmp eq i32 %v1_10002ca8, 0
  %v4_10003034 = sext i8 %v5_10002c5c to i32
  %v4_1000303c = sext i8 %v5_10002c94 to i32
  %v1_10002f04 = and i32 %tmp, 327680
  %v3_10002f04 = icmp eq i32 %v1_10002f04, 0
  %v4_10002f0c = icmp eq i32 %v1_10002f00, 1179648
  br label %dec_label_pc_10002df0

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_100030e4, %dec_label_pc_10002f18, %dec_label_pc_10002de4
  %v0_10002df0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002df0 = add i32 %v0_10002df0, 40
  store i32 %v1_10002df0, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e0053 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  store i32 %v3_10002e0053, i32* %r3.global-to-local, align 4
  %v3_10002e0455 = icmp eq i32 %v3_10002e0053, -1
  store i1 %v3_10002e0455, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e0053, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e0455, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0
  store i32 3, i32* @r4, align 4
  store i32 268447264, i32* @lr, align 4
  %v1_10002e1c = call i32 @function_10008d38(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10002e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v2_10002e30 = call i32 @function_10008d38(i32 %v0_10002e28)
  store i32 %v2_10002e30, i32* %r3.global-to-local, align 4
  %v3_10002e34 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002e3c = mul i32 %v3_10002e34, 24
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  %v0_10002e44 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e44 = add i32 %v0_10002e44, %v1_10002e3c
  store i32 %v2_10002e44, i32* %r11.global-to-local, align 4
  %v1_10002e48 = add i32 %v2_10002e44, 20
  %v2_10002e48 = inttoptr i32 %v1_10002e48 to i8*
  %v3_10002e48 = load i8, i8* %v2_10002e48, align 1
  %v4_10002e48 = zext i8 %v3_10002e48 to i32
  store i32 %v4_10002e48, i32* %r9.global-to-local, align 4
  %v3_10002e4c = icmp eq i8 %v3_10002e48, 31
  store i1 %v3_10002e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10002e48, 32
  %v1_10002f24 = add i32 %v2_10002e44, 16
  %v2_10002f24 = inttoptr i32 %v1_10002f24 to i32*
  %v3_10002f24 = load i32, i32* %v2_10002f24, align 4
  br i1 %tmp50, label %dec_label_pc_10002f24, label %dec_label_pc_10002e54

dec_label_pc_10002e54:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r0.global-to-local, align 4
  %v0_10002e5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e5c, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.0 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  store i32 %v4_10002de4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002e68:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10002e60
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002f4c ], [ %stack_var_-396.0, %dec_label_pc_10002e60 ]
  %storemerge = phi i16 [ %v1_10002f4c, %dec_label_pc_10002f4c ], [ %v5_10002cd0, %dec_label_pc_10002e60 ]
  %v0_10002e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e70, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002e78.22 to i32), i32* @lr, align 4
  %v0_10002e74 = call i32 @function_1000993c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447360, i32* @lr, align 4
  %v0_10002e7c = call i32 @function_100091f0()
  store i32 %v0_10002e7c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002e7c, i32* @r31, align 4
  %v4_10002ec4 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10002ed4 = zext i16 %storemerge to i32
  %v4_10002ed8 = icmp eq i16 %storemerge, %tmp13
  %v4_10002ec4.not = xor i1 %v4_10002ec4, true
  br label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002ee0, %dec_label_pc_10002e68
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002e94, i32* %r7.global-to-local, align 4
  store i32 %v2_10002e98, i32* %r8.global-to-local, align 4
  %v0_10002e9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268447400, i32* @lr, align 4
  %v6_10002ea4 = call i32 @function_10009a48(i32 %v0_10002e9c, i32 %v2_10002e88, i32 256, i32 16384, i32 %v2_10002e94, i32 %v2_10002e98)
  store i32 %v6_10002ea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002eb0 = icmp eq i32 %v6_10002ea4, -1
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002eb0, label %dec_label_pc_10002f60, label %dec_label_pc_10002ebc

dec_label_pc_10002ebc:                            ; preds = %dec_label_pc_10002e84
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10002ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002ea4, 41
  %or.cond = or i1 %tmp51, %v4_10002ec4.not
  br i1 %or.cond, label %dec_label_pc_10002ee0, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ebc
  store i32 %v4_10002ed0, i32* %r0.global-to-local, align 4
  store i32 %v4_10002ed4, i32* %r8.global-to-local, align 4
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002efc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002ebc, %dec_label_pc_10002f14, %dec_label_pc_10002ed0
  store i32 268447460, i32* @lr, align 4
  %v0_10002ee0 = call i32 @function_100091f0()
  %v0_10002ee4 = load i32, i32* @r31, align 4
  %v2_10002ee4 = sub i32 %v0_10002ee0, %v0_10002ee4
  store i32 %v2_10002ee4, i32* %r3.global-to-local, align 4
  %v3_10002ee8 = icmp eq i32 %v2_10002ee4, 10
  store i1 %v3_10002ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10002ee4, 11
  br i1 %tmp52, label %dec_label_pc_10002e84, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002ee0
  %v0_10002ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ef0, i32* %r3.global-to-local, align 4
  store i32 268447480, i32* @lr, align 4
  %v0_10002ef4 = call i32 @function_10008e20()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e00 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  store i32 %v3_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = icmp eq i32 %v3_10002e00, -1
  store i1 %v3_10002e04, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e00, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002ed0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10002f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f0c, label %dec_label_pc_10002fc0, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002efc
  br i1 %v3_10002f04, label %dec_label_pc_10002ee0, label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002f14
  %v0_10002f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f18, i32* %r3.global-to-local, align 4
  store i32 268447520, i32* @lr, align 4
  %v0_10002f1c = call i32 @function_10008e20()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002df0

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r29.global-to-local, align 4
  %v0_10002f28 = call i32 @function_10005d68()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v3_10002f2c = load i32, i32* %stack_var_-408, align 4
  %v1_10002f30 = mul i32 %v3_10002f2c, 24
  %v1_10002f34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, %v1_10002f30
  store i32 %v2_10002f34, i32* %r9.global-to-local, align 4
  %v1_10002f38 = add i32 %v2_10002f34, 20
  %v2_10002f38 = inttoptr i32 %v1_10002f38 to i8*
  %v3_10002f38 = load i8, i8* %v2_10002f38, align 1
  %v4_10002f38 = zext i8 %v3_10002f38 to i32
  store i32 %v4_10002f38, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10002f38, 64
  %v2_10002f3c = zext i8 %tmp56 to i32
  %v3_10002f3c = lshr i32 %v0_10002f28, %v2_10002f3c
  store i32 %v3_10002f3c, i32* %r3.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002f40 = add i32 %v3_10002f3c, %v0_10002f40
  store i32 %v2_10002f40, i32* %r29.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.2 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  %v0_10002f4c = call i32 @function_10005d68()
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  store i32 %v0_10002f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002dac
  %v0_10002f58 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002f58, i32* %r3.global-to-local, align 4
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @function_10008e20()
  store i32 %v0_10002f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002bb4, %dec_label_pc_10002f58
  store i32 %v0_10002bcc, i32* %r0.global-to-local, align 4
  %v1_10002f74 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bbc)
  store i32 %v0_10002c04, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c0c, i32* %r29.global-to-local, align 4
  %v0_10002fbc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fbc

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002efc
  %v3_10002fc0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002fc0, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v0_10002fc8 = load i32, i32* @r30, align 4
  %v1_10002fc8 = add i32 %v0_10002fc8, 2
  %v2_10002fc8 = inttoptr i32 %v1_10002fc8 to i16*
  %v3_10002fc8 = load i16, i16* %v2_10002fc8, align 2
  %v4_10002fc8 = zext i16 %v3_10002fc8 to i32
  store i32 %v4_10002fc8, i32* %r11.global-to-local, align 4
  %v1_10002fcc = mul i32 %v3_10002fc0, 16
  store i32 %v1_10002fcc, i32* %r9.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc0, 4
  store i32 %v1_10002fd0, i32* @r29, align 4
  %v1_10002fd4 = load i32, i32* %r22.global-to-local, align 4
  %v3_10002fd4 = add i32 %v1_10002fd4, %v1_10002fcc
  %v4_10002fd4 = inttoptr i32 %v3_10002fd4 to i32*
  store i32 %tmp14, i32* %v4_10002fd4, align 4
  %v0_10002fd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fd8 = add i32 %v1_10002fd8, %v0_10002fd8
  store i32 %v2_10002fd8, i32* %r9.global-to-local, align 4
  %v0_10002fdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10002fdc = trunc i32 %v0_10002fdc to i16
  %v3_10002fdc = add i32 %v2_10002fd8, 14
  %v4_10002fdc = inttoptr i32 %v3_10002fdc to i16*
  store i16 %v1_10002fdc, i16* %v4_10002fdc, align 2
  %v0_10002fe0 = load i32, i32* @r30, align 4
  %v1_10002fe0 = add i32 %v0_10002fe0, 4
  %v2_10002fe0 = inttoptr i32 %v1_10002fe0 to i32*
  %v3_10002fe0 = load i32, i32* %v2_10002fe0, align 4
  store i32 %v3_10002fe0, i32* %r0.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 12
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fe8 = add i32 %v1_10002fe8, 4
  %v3_10002fe8 = inttoptr i32 %v2_10002fe8 to i32*
  store i32 %v0_10002fe8, i32* %v3_10002fe8, align 4
  %v0_10002fec = load i32, i32* @r30, align 4
  %v1_10002fec = add i32 %v0_10002fec, 8
  %v2_10002fec = inttoptr i32 %v1_10002fec to i32*
  %v3_10002fec = load i32, i32* %v2_10002fec, align 4
  store i32 %v3_10002fec, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 8
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v3_10002fec, i32* %v3_10002ff0, align 4
  store i32 268447736, i32* @lr, align 4
  %v0_10002ff4 = call i32 @function_10009d40()
  store i32 %v0_10002ff4, i32* %r3.global-to-local, align 4
  %v3_10002ff8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002ff8, i32* %r0.global-to-local, align 4
  %v1_10002ffc = load i32, i32* @r29, align 4
  %v2_10002ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, %v1_10002ffc
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i32*
  store i32 %v0_10002ff4, i32* %v4_10002ffc, align 4
  %v0_10003000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003000 = mul i32 %v0_10003000, 4
  store i32 %v1_10003000, i32* %r0.global-to-local, align 4
  %v0_10003004 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003004 = add i32 %v0_10003004, %v1_10003000
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  %v4_10003004 = load i32, i32* %v3_10003004, align 4
  store i32 %v4_10003004, i32* @r31, align 4
  store i32 %v1_10002ca8, i32* %r0.global-to-local, align 4
  %v1_1000300c = inttoptr i32 %v4_10003004 to i32*
  %v2_1000300c = load i32, i32* %v1_1000300c, align 4
  store i32 %v2_1000300c, i32* %r9.global-to-local, align 4
  %v1_10003010 = add i32 %v4_10003004, 20
  store i32 %v1_10003010, i32* @r30, align 4
  store i1 %v3_10003014, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000301c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003024 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003028 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v2_10003028 = load i32, i32* @r31, align 4
  %v3_10003028 = add i32 %v2_10003028, 4
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  %v1_1000302c = load i32, i32* @r31, align 4
  %v2_1000302c = inttoptr i32 %v1_1000302c to i32*
  store i32 %v1_10003024, i32* %v2_1000302c, align 4
  %v0_10003030 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  %v2_10003030 = load i32, i32* @r31, align 4
  %v3_10003030 = add i32 %v2_10003030, 2
  %v4_10003030 = inttoptr i32 %v3_10003030 to i16*
  store i16 %v1_10003030, i16* %v4_10003030, align 2
  store i32 %v4_10003034, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* @r31, align 4
  %v3_10003038 = add i32 %v2_10003038, 1
  %v4_10003038 = inttoptr i32 %v3_10003038 to i8*
  store i8 %v5_10002c5c, i8* %v4_10003038, align 1
  store i32 %v4_1000303c, i32* %r0.global-to-local, align 4
  %v2_10003040 = load i32, i32* @r31, align 4
  %v3_10003040 = add i32 %v2_10003040, 8
  %v4_10003040 = inttoptr i32 %v3_10003040 to i8*
  store i8 %v5_10002c94, i8* %v4_10003040, align 1
  %v0_10003044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003044, label %dec_label_pc_10003050, label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_10002fc0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000304c = load i32, i32* @r31, align 4
  %v3_1000304c = add i32 %v2_1000304c, 6
  %v4_1000304c = inttoptr i32 %v3_1000304c to i16*
  store i16 16384, i16* %v4_1000304c, align 2
  br label %dec_label_pc_10003050

dec_label_pc_10003050:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10003048
  %v2_10003058 = load i32, i32* @r31, align 4
  %v3_10003058 = add i32 %v2_10003058, 9
  %v4_10003058 = inttoptr i32 %v3_10003058 to i8*
  store i8 6, i8* %v4_10003058, align 1
  %v3_1000305c = load i32, i32* @global_var_1001c188.16, align 4
  store i32 %v3_1000305c, i32* %r0.global-to-local, align 4
  %v1_10003060 = load i32, i32* @r31, align 4
  %v2_10003060 = add i32 %v1_10003060, 12
  %v3_10003060 = inttoptr i32 %v2_10003060 to i32*
  store i32 %v3_1000305c, i32* %v3_10003060, align 4
  %v3_10003064 = load i32, i32* %stack_var_-408, align 4
  %v1_10003068 = mul i32 %v3_10003064, 16
  store i32 %v1_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000306c = add i32 %v1_1000306c, %v1_10003068
  %v3_1000306c = inttoptr i32 %v2_1000306c to i32*
  %v4_1000306c = load i32, i32* %v3_1000306c, align 4
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000306c, i32* %r9.global-to-local, align 4
  %v1_10003074 = add i32 %v2_1000306c, 12
  %v2_10003074 = inttoptr i32 %v1_10003074 to i16*
  %v3_10003074 = load i16, i16* %v2_10003074, align 2
  %v4_10003074 = zext i16 %v3_10003074 to i32
  store i32 %v4_10003074, i32* %r11.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r31, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v4_1000306c, i32* %v3_10003078, align 4
  %v0_1000307c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000307c = trunc i32 %v0_1000307c to i16
  %v2_1000307c = load i32, i32* @r31, align 4
  %v3_1000307c = add i32 %v2_1000307c, 20
  %v4_1000307c = inttoptr i32 %v3_1000307c to i16*
  store i16 %v1_1000307c, i16* %v4_1000307c, align 2
  %v0_10003080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = add i32 %v0_10003080, 8
  %v2_10003080 = inttoptr i32 %v1_10003080 to i32*
  %v3_10003080 = load i32, i32* %v2_10003080, align 4
  store i32 %v3_10003080, i32* %r0.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r30, align 4
  %v1_10003084 = add i32 %v0_10003084, 12
  %v2_10003084 = inttoptr i32 %v1_10003084 to i32*
  %v3_10003084 = load i32, i32* %v2_10003084, align 4
  store i32 %v3_10003084, i32* %r11.global-to-local, align 4
  %v2_10003088 = add i32 %v0_10003084, 4
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v3_10003080, i32* %v3_10003088, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003090 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003090, i32* %r11.global-to-local, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = add i32 %v0_10003094, 14
  %v2_10003094 = inttoptr i32 %v1_10003094 to i16*
  %v3_10003094 = load i16, i16* %v2_10003094, align 2
  %v4_10003094 = zext i16 %v3_10003094 to i32
  store i32 %v4_10003094, i32* %r0.global-to-local, align 4
  %v1_10003098 = add i32 %v0_10003094, 4
  %v2_10003098 = inttoptr i32 %v1_10003098 to i32*
  %v3_10003098 = load i32, i32* %v2_10003098, align 4
  store i32 %v3_10003098, i32* %r10.global-to-local, align 4
  %v1_1000309c = or i32 %v1_10003090, 1114112
  store i32 %v1_1000309c, i32* %r11.global-to-local, align 4
  %v2_100030a0 = load i32, i32* @r30, align 4
  %v3_100030a0 = add i32 %v2_100030a0, 2
  %v4_100030a0 = inttoptr i32 %v3_100030a0 to i16*
  store i16 %v3_10003094, i16* %v4_100030a0, align 2
  %v0_100030a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100030a4 = load i32, i32* @r30, align 4
  %v2_100030a4 = add i32 %v1_100030a4, 8
  %v3_100030a4 = inttoptr i32 %v2_100030a4 to i32*
  store i32 %v0_100030a4, i32* %v3_100030a4, align 4
  %v0_100030a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a8 = load i32, i32* @r30, align 4
  %v2_100030a8 = add i32 %v1_100030a8, 12
  %v3_100030a8 = inttoptr i32 %v2_100030a8 to i32*
  store i32 %v0_100030a8, i32* %v3_100030a8, align 4
  %v0_100030ac = call i32 @function_10005d68()
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  store i32 %v1_10002ce4, i32* %r9.global-to-local, align 4
  %v3_100030b4 = load i32, i32* @r30, align 4
  %v4_100030b4 = add i32 %v3_100030b4, 14
  %v5_100030b4 = inttoptr i32 %v4_100030b4 to i16*
  store i16 %v1_100030ac, i16* %v5_100030b4, align 2
  %v0_100030b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100030b8, i32* @r4, align 4
  %v0_100030bc = load i32, i32* @r31, align 4
  %v1_100030bc = add i32 %v0_100030bc, 40
  store i32 %v1_100030bc, i32* @r3, align 4
  %v0_100030c0 = load i32, i32* @r30, align 4
  %v1_100030c0 = add i32 %v0_100030c0, 12
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r0.global-to-local, align 4
  %v1_100030c4 = call i32 @__asm_rlwimi(i32 %v1_10002ce4, i32 21, i32 10, i32 10)
  store i32 %v1_100030c4, i32* %r0.global-to-local, align 4
  %v1_100030c8 = call i32 @__asm_rlwimi(i32 %v1_10002d08, i32 20, i32 11, i32 11)
  store i32 %v1_100030c8, i32* %r0.global-to-local, align 4
  %v1_100030cc = call i32 @__asm_rlwimi(i32 %v1_10002d20, i32 19, i32 12, i32 12)
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = call i32 @__asm_rlwimi(i32 %v1_10002d38, i32 18, i32 13, i32 13)
  store i32 %v1_100030d0, i32* %r0.global-to-local, align 4
  %v1_100030d4 = call i32 @__asm_rlwimi(i32 %v1_10002d50, i32 17, i32 14, i32 14)
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v1_100030d8 = call i32 @__asm_rlwimi(i32 %v1_10002d68, i32 16, i32 15, i32 15)
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = load i32, i32* @r30, align 4
  %v2_100030dc = add i32 %v1_100030dc, 12
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d8, i32* %v3_100030dc, align 4
  %v0_100030e0 = call i32 @function_10005f3c()
  store i32 %v0_100030e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030e4

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0, %dec_label_pc_10003050
  %v3_100030e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100030e8 = add i32 %v3_100030e4, 1
  store i32 %v1_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = load i32, i32* %r21.global-to-local, align 4
  %v2_100030ec = icmp slt i32 %v1_100030e8, %v1_100030ec
  %v4_100030ec = icmp eq i32 %v1_100030e8, %v1_100030ec
  store i1 %v4_100030ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100030e8, i32* %stack_var_-408, align 4
  br i1 %v2_100030ec, label %dec_label_pc_10002df0, label %dec_label_pc_100030f8.loopexit

dec_label_pc_100030f8.loopexit:                   ; preds = %dec_label_pc_100030e4
  %v0_10003104.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003104.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100030f8

dec_label_pc_100030f8:                            ; preds = %dec_label_pc_100030f8.loopexit, %dec_label_pc_10002dd0
  %v1_10003104.pre = phi i1 [ %v1_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v1_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_10003104.pre = phi i1 [ %v0_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v3_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_100030f8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100030f8 = icmp eq i32 %v0_100030f8, 0
  store i1 %v3_100030f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100030fc = load i32, i32* %r25.global-to-local, align 4
  %v1_100030fc = add i32 %v0_100030fc, 40
  store i32 %v1_100030fc, i32* %r26.global-to-local, align 4
  %v1_10003100 = add i32 %v0_100030fc, 20
  store i32 %v1_10003100, i32* @r31, align 4
  br label %dec_label_pc_10003104.outer

dec_label_pc_10003104.outer:                      ; preds = %dec_label_pc_100031d8, %dec_label_pc_100030f8
  %v1_10003104.ph = phi i1 [ %v1_10003104.pre, %dec_label_pc_100030f8 ], [ %v1_100031d8, %dec_label_pc_100031d8 ]
  %v0_10003104.ph = phi i1 [ %v0_10003104.pre, %dec_label_pc_100030f8 ], [ %v0_100031d8, %dec_label_pc_100031d8 ]
  %v2_10003104 = or i1 %v1_10003104.ph, %v0_10003104.ph
  br label %dec_label_pc_10003104

dec_label_pc_10003104:                            ; preds = %dec_label_pc_10003104.outer, %dec_label_pc_10003104
  br i1 %v2_10003104, label %dec_label_pc_10003104, label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10003104, %dec_label_pc_100031d8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003118 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003118 = icmp eq i32 %v0_10003118, 65535
  store i1 %v4_10003118, i1* %cr4_eq.global-to-local, align 1
  %v0_1000311c = load i32, i32* @r31, align 4
  %v1_1000311c = urem i32 %v0_1000311c, 65536
  store i32 %v1_1000311c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, %dec_label_pc_10003108
  %v0_10003134 = phi i1 [ %v0_10003134.pre, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ %v4_10003118, %dec_label_pc_10003108 ]
  %v0_10003128 = phi i32 [ %v1_100031c8, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ 0, %dec_label_pc_10003108 ]
  %v1_10003128 = mul i32 %v0_10003128, 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v0_1000312c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000312c = add i32 %v0_1000312c, %v1_10003128
  %v3_1000312c = inttoptr i32 %v2_1000312c to i32*
  %v4_1000312c = load i32, i32* %v3_1000312c, align 4
  store i32 %v4_1000312c, i32* @r29, align 4
  %v1_10003130 = add i32 %v4_1000312c, 20
  store i32 %v1_10003130, i32* %r28.global-to-local, align 4
  br i1 %v0_10003134, label %dec_label_pc_100031e0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003128
  %v1_10003138 = add i32 %v4_1000312c, 40
  store i32 %v1_10003138, i32* @r3, align 4
  %v0_1000313c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000313c, i32* @r4, align 4
  %v0_10003140 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003140, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_10003144:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0, %dec_label_pc_100031f4
  %v2_10003144 = phi i32 [ %v4_1000312c, %dec_label_pc_10003138 ], [ %v0_100031ec, %dec_label_pc_100031e0 ], [ %v2_10003144.pre, %dec_label_pc_100031f4 ]
  %v0_10003144 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003144 = trunc i32 %v0_10003144 to i16
  %v3_10003144 = add i32 %v2_10003144, 10
  %v4_10003144 = inttoptr i32 %v3_10003144 to i16*
  store i16 %v1_10003144, i16* %v4_10003144, align 2
  %v0_1000314c = load i32, i32* @r29, align 4
  store i32 %v0_1000314c, i32* @r3, align 4
  %v2_10003150 = call i32 @function_100043cc(i32 %v0_1000314c, i32 20)
  %v3_10003150 = trunc i32 %v2_10003150 to i16
  store i32 %v2_10003150, i32* %r3.global-to-local, align 4
  %v3_10003154 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003154, i32* %r9.global-to-local, align 4
  %v3_10003158 = load i32, i32* @r29, align 4
  %v4_10003158 = add i32 %v3_10003158, 10
  %v5_10003158 = inttoptr i32 %v4_10003158 to i16*
  store i16 %v3_10003150, i16* %v5_10003158, align 2
  %v0_1000315c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000315c, i32* @r4, align 4
  %v0_10003160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003160 = mul i32 %v0_10003160, 16
  store i32 %v1_10003160, i32* %r9.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003164 = trunc i32 %v0_10003164 to i16
  %v3_10003164 = add i32 %v0_1000315c, 16
  %v4_10003164 = inttoptr i32 %v3_10003164 to i16*
  store i16 %v1_10003164, i16* %v4_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003168 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003168 = add i32 %v1_10003168, %v0_10003168
  store i32 %v2_10003168, i32* %r9.global-to-local, align 4
  %v0_1000316c = load i32, i32* @r30, align 4
  %v1_10003170 = add i32 %v2_10003168, 4
  %v2_10003170 = inttoptr i32 %v1_10003170 to i32*
  %v3_10003170 = load i32, i32* %v2_10003170, align 4
  store i32 %v3_10003170, i32* %r11.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r31, align 4
  %v0_10003178 = load i32, i32* @r29, align 4
  store i32 %v0_10003178, i32* %r3.global-to-local, align 4
  %v1_1000317c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000317c = add i32 %v1_1000317c, 4
  %v3_1000317c = inttoptr i32 %v2_1000317c to i32*
  store i32 %v3_10003170, i32* %v3_1000317c, align 4
  %v0_10003180 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 1
  store i32 %v1_10003180, i32* %r11.global-to-local, align 4
  %v1_10003184 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003184 = add i32 %v1_10003184, 4
  %v3_10003184 = inttoptr i32 %v2_10003184 to i32*
  store i32 %v1_10003180, i32* %v3_10003184, align 4
  %v0_10003188 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003188 = add i32 %v0_10003188, 8
  %v2_10003188 = inttoptr i32 %v1_10003188 to i32*
  %v3_10003188 = load i32, i32* %v2_10003188, align 4
  store i32 %v3_10003188, i32* %r0.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, 8
  %v3_1000318c = inttoptr i32 %v2_1000318c to i32*
  store i32 %v3_10003188, i32* %v3_1000318c, align 4
  %v4_10003190 = call i32 @function_10004430(i32 %v0_10003178, i32 %v0_1000315c, i32 %v0_1000316c, i32 %v0_10003174)
  %v5_10003190 = trunc i32 %v4_10003190 to i16
  store i32 %v4_10003190, i32* %r3.global-to-local, align 4
  %v3_10003194 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003194, i32* %r7.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003198 = add i32 %v0_10003198, 2
  %v2_10003198 = inttoptr i32 %v1_10003198 to i16*
  %v3_10003198 = load i16, i16* %v2_10003198, align 2
  %v4_10003198 = zext i16 %v3_10003198 to i32
  store i32 %v4_10003198, i32* %r0.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r29, align 4
  %v1_100031a0 = mul i32 %v3_10003194, 24
  store i32 %v1_100031a0, i32* %r7.global-to-local, align 4
  %v4_100031a4 = add i32 %v0_10003198, 16
  %v5_100031a4 = inttoptr i32 %v4_100031a4 to i16*
  store i16 %v5_10003190, i16* %v5_100031a4, align 2
  %v0_100031a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100031ac = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  %v0_100031b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100031b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100031b0 = add i32 %v1_100031b0, %v0_100031b0
  store i32 %v2_100031b0, i32* %r7.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100031b8 = trunc i32 %v0_100031b8 to i16
  %v3_100031b8 = add i32 %v2_100031b0, 2
  %v4_100031b8 = inttoptr i32 %v3_100031b8 to i16*
  store i16 %v1_100031b8, i16* %v4_100031b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v6_100031c0 = call i32 @function_10009ac0(i32 %v0_100031ac, i32 %v0_1000319c, i32 %v0_100031a8, i32 16384, i32 %v2_100031b0, i32 16)
  store i32 %v6_100031c0, i32* %r3.global-to-local, align 4
  %v3_100031c4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100031c4, i32* %r9.global-to-local, align 4
  %v1_100031c8 = add i32 %v3_100031c4, 1
  store i32 %v1_100031c8, i32* %r0.global-to-local, align 4
  %v1_100031cc = load i32, i32* %r21.global-to-local, align 4
  %v2_100031cc = icmp slt i32 %v1_100031c8, %v1_100031cc
  %v4_100031cc = icmp eq i32 %v1_100031c8, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031c8, i32* %stack_var_-408, align 4
  br i1 %v2_100031cc, label %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, label %dec_label_pc_100031d8

dec_label_pc_10003144.dec_label_pc_10003128_crit_edge: ; preds = %dec_label_pc_10003144
  %v0_10003134.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003128

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_10003144
  %v0_100031d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100031d8 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100031d8 = or i1 %v0_100031d8, %v1_100031d8
  br i1 %v2_100031d8, label %dec_label_pc_10003104.outer, label %dec_label_pc_10003108

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_10003128
  %v0_100031e0 = call i32 @function_10005d68()
  %v1_100031e0 = trunc i32 %v0_100031e0 to i16
  %v0_100031e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100031e4, i32* @r4, align 4
  %v3_100031e8 = load i32, i32* @r29, align 4
  %v4_100031e8 = add i32 %v3_100031e8, 4
  %v5_100031e8 = inttoptr i32 %v4_100031e8 to i16*
  store i16 %v1_100031e0, i16* %v5_100031e8, align 2
  %v0_100031ec = load i32, i32* @r29, align 4
  %v1_100031ec = add i32 %v0_100031ec, 40
  store i32 %v1_100031ec, i32* @r3, align 4
  %v0_100031f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031f0, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0
  %v0_100031f4 = call i32 @function_10005f3c()
  store i32 %v0_100031f4, i32* %r3.global-to-local, align 4
  %v2_10003144.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003144

; uselistorder directives
  uselistorder i32 %v0_100031ec, { 1, 0 }
  uselistorder i1 %v1_100031d8, { 1, 0 }
  uselistorder i1 %v0_100031d8, { 1, 0 }
  uselistorder i32 %v1_100031c8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003190, { 1, 0 }
  uselistorder i32 %v0_1000315c, { 1, 0, 2 }
  uselistorder i32 %v2_10003150, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i32 %v1_100030e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v1_10003068, { 1, 0 }
  uselistorder i32 %v1_10003000, { 1, 0 }
  uselistorder i32 %v1_10002fcc, { 1, 0 }
  uselistorder i32 %v0_10002f4c, { 1, 0 }
  uselistorder i32 %v2_10002f40, { 1, 2, 0 }
  uselistorder i1 %v4_10002ec4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002f24, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v1_10002ca8, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 30, 13, 14, 15, 16, 17, 18, 19, 27, 28, 21, 20, 22, 23, 2, 24, 25, 26, 4, 3, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268447236, { 1, 0 }
  uselistorder label %dec_label_pc_100031f4, { 1, 0 }
  uselistorder label %dec_label_pc_10003144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_10003104, { 1, 0 }
  uselistorder label %dec_label_pc_100030e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003050, { 1, 0 }
  uselistorder label %dec_label_pc_10002f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e10, { 1, 0 }
}

define i32 @function_100031fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100031fc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_10003204 = call i32 @__asm_mfcr()
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003204, i32* %r21.global-to-local, align 4
  %v0_1000324c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448368, i32* @lr, align 4
  %v2_1000326c = call i32 @function_10009e98(i32 16, i32 16)
  store i32 %v2_1000326c, i32* %r22.global-to-local, align 4
  %v0_10003278 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  store i32 268448384, i32* @lr, align 4
  %v2_1000327c = call i32 @function_10009e98(i32 %v0_10003278, i32 4)
  %v0_10003280 = load i32, i32* @r28, align 4
  store i32 %v2_1000327c, i32* %r23.global-to-local, align 4
  %v0_10003290 = load i32, i32* @r29, align 4
  store i32 %v0_10003290, i32* %r3.global-to-local, align 4
  store i32 268448408, i32* @lr, align 4
  %v4_10003294 = inttoptr i32 %v0_10003280 to i32*
  %v5_10003294 = call i32 @function_100006a8(i32 %v0_10003290, i32* %v4_10003294, i32 2, i32 0)
  %v5_100032a4 = trunc i32 %v5_10003294 to i8
  %v0_100032ac = load i32, i32* @r28, align 4
  %v0_100032b0 = load i32, i32* @r29, align 4
  store i32 %v0_100032b0, i32* %r3.global-to-local, align 4
  store i32 268448440, i32* @lr, align 4
  %v4_100032b4 = inttoptr i32 %v0_100032ac to i32*
  %v5_100032b4 = call i32 @function_100006a8(i32 %v0_100032b0, i32* %v4_100032b4, i32 3, i32 65535)
  %v0_100032b8 = load i32, i32* @r28, align 4
  store i32 %v5_100032b4, i32* @r31, align 4
  %v0_100032c8 = load i32, i32* @r29, align 4
  store i32 %v0_100032c8, i32* %r3.global-to-local, align 4
  store i32 268448464, i32* @lr, align 4
  %v4_100032cc = inttoptr i32 %v0_100032b8 to i32*
  %v5_100032cc = call i32 @function_100006a8(i32 %v0_100032c8, i32* %v4_100032cc, i32 4, i32 64)
  %v0_100032d0 = load i32, i32* @r28, align 4
  %v5_100032dc = trunc i32 %v5_100032cc to i8
  %v0_100032e4 = load i32, i32* @r29, align 4
  store i32 %v0_100032e4, i32* %r3.global-to-local, align 4
  store i32 268448492, i32* @lr, align 4
  %v4_100032e8 = inttoptr i32 %v0_100032d0 to i32*
  %v5_100032e8 = call i32 @function_100006a8(i32 %v0_100032e4, i32* %v4_100032e8, i32 5, i32 1)
  %v1_100032f0 = urem i32 %v5_100032e8, 256
  %v0_100032fc = load i32, i32* @r28, align 4
  %v0_10003304 = load i32, i32* @r29, align 4
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  store i32 268448524, i32* @lr, align 4
  %v4_10003308 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003308 = call i32 @function_100006a8(i32 %v0_10003304, i32* %v4_10003308, i32 7, i32 65535)
  %v0_1000330c = load i32, i32* @r28, align 4
  %v5_10003318 = trunc i32 %v5_10003308 to i16
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_1000330c to i32*
  %v5_10003324 = call i32 @function_100006a8(i32 %v0_10003320, i32* %v4_10003324, i32 11, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_1000332c = urem i32 %v5_10003324, 256
  %v0_1000333c = load i32, i32* @r29, align 4
  store i32 %v0_1000333c, i32* %r3.global-to-local, align 4
  store i32 268448580, i32* @lr, align 4
  %v4_10003340 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003340 = call i32 @function_100006a8(i32 %v0_1000333c, i32* %v4_10003340, i32 12, i32 1)
  %v0_10003344 = load i32, i32* @r28, align 4
  %v1_10003350 = urem i32 %v5_10003340, 256
  %v0_10003354 = load i32, i32* @r29, align 4
  store i32 %v0_10003354, i32* %r3.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v4_10003358 = inttoptr i32 %v0_10003344 to i32*
  %v5_10003358 = call i32 @function_100006a8(i32 %v0_10003354, i32* %v4_10003358, i32 13, i32 1)
  %v0_1000335c = load i32, i32* @r28, align 4
  %v1_10003368 = urem i32 %v5_10003358, 256
  %v0_1000336c = load i32, i32* @r29, align 4
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  store i32 268448628, i32* @lr, align 4
  %v4_10003370 = inttoptr i32 %v0_1000335c to i32*
  %v5_10003370 = call i32 @function_100006a8(i32 %v0_1000336c, i32* %v4_10003370, i32 14, i32 0)
  %v0_10003374 = load i32, i32* @r28, align 4
  %v1_10003380 = urem i32 %v5_10003370, 256
  %v0_10003384 = load i32, i32* @r29, align 4
  store i32 %v0_10003384, i32* %r3.global-to-local, align 4
  store i32 268448652, i32* @lr, align 4
  %v4_10003388 = inttoptr i32 %v0_10003374 to i32*
  %v5_10003388 = call i32 @function_100006a8(i32 %v0_10003384, i32* %v4_10003388, i32 15, i32 0)
  %v0_1000338c = load i32, i32* @r28, align 4
  %v1_10003398 = urem i32 %v5_10003388, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_1000338c to i32*
  %v5_100033a0 = call i32 @function_100006a8(i32 %v0_1000339c, i32* %v4_100033a0, i32 16, i32 0)
  %v0_100033ac = load i32, i32* @r28, align 4
  %v1_100033b0 = urem i32 %v5_100033a0, 256
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033ac to i32*
  %v5_100033b8 = call i32 @function_100006a8(i32 %v0_100033b4, i32* %v4_100033b8, i32 0, i32 768)
  %v0_100033bc = load i32, i32* @r28, align 4
  store i32 %v5_100033b8, i32* %r25.global-to-local, align 4
  %v0_100033cc = load i32, i32* @r29, align 4
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  store i32 268448724, i32* @lr, align 4
  %v4_100033d0 = inttoptr i32 %v0_100033bc to i32*
  %v5_100033d0 = call i32 @function_100006a8(i32 %v0_100033cc, i32* %v4_100033d0, i32 1, i32 1)
  %v1_100033d8 = urem i32 %v5_100033d0, 256
  store i32 %v1_100033d8, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448744, i32* @lr, align 4
  %v3_100033e4 = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  %v3_100033e8 = icmp eq i32 %v3_100033e4, -1
  store i1 %v3_100033e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100033e4, i32* %r24.global-to-local, align 4
  br i1 %v3_100033e8, label %dec_label_pc_100035a8, label %dec_label_pc_100033f4

dec_label_pc_100033f4:                            ; preds = %dec_label_pc_100031fc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003400 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_10003400, i32 4)
  store i32 %v4_1000340c, i32* %r3.global-to-local, align 4
  %v3_10003410 = icmp eq i32 %v4_1000340c, -1
  store i1 %v3_10003410, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003410, label %dec_label_pc_100035a0, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033f4
  %v0_10003418 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003418 = icmp slt i32 %v0_10003418, 0
  %v3_10003418 = icmp eq i32 %v0_10003418, 0
  store i1 %v1_10003418, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003418, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003424 = load i32, i32* @r31, align 4
  %v1_10003424 = urem i32 %v0_10003424, 65536
  store i32 %v1_10003424, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003418, 1
  br i1 %tmp49, label %dec_label_pc_10003740, label %dec_label_pc_1000342c

dec_label_pc_1000342c:                            ; preds = %dec_label_pc_10003418
  %v4_1000342c = sext i16 %v5_10003318 to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100034d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_100034dc = ptrtoint i32* %stack_var_-384 to i32
  %v2_100034e0 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003518 = zext i16 %tmp13 to i32
  %v1_10003548 = and i32 %tmp, 1179648
  %v3_1000365c = icmp eq i32 %v1_100032f0, 0
  %v4_1000367c = sext i8 %v5_100032a4 to i32
  %v4_10003684 = sext i8 %v5_100032dc to i32
  %v1_1000354c = and i32 %tmp, 327680
  %v3_1000354c = icmp eq i32 %v1_1000354c, 0
  %v4_10003554 = icmp eq i32 %v1_10003548, 1179648
  br label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_10003560, %dec_label_pc_1000342c
  %v0_10003438 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003438 = add i32 %v0_10003438, 40
  store i32 %v1_10003438, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_1000344853 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  store i32 %v3_1000344853, i32* %r3.global-to-local, align 4
  %v3_1000344c55 = icmp eq i32 %v3_1000344853, -1
  store i1 %v3_1000344c55, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000344853, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c55, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003458:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538
  store i32 3, i32* @r4, align 4
  store i32 268448872, i32* @lr, align 4
  %v1_10003464 = call i32 @function_10008d38(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003470, i32* %r3.global-to-local, align 4
  store i32 268448892, i32* @lr, align 4
  %v2_10003478 = call i32 @function_10008d38(i32 %v0_10003470)
  store i32 %v2_10003478, i32* %r3.global-to-local, align 4
  %v3_1000347c = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003484 = mul i32 %v3_1000347c, 24
  store i32 %v1_10003484, i32* %r0.global-to-local, align 4
  %v0_1000348c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000348c = add i32 %v0_1000348c, %v1_10003484
  store i32 %v2_1000348c, i32* %r11.global-to-local, align 4
  %v1_10003490 = add i32 %v2_1000348c, 20
  %v2_10003490 = inttoptr i32 %v1_10003490 to i8*
  %v3_10003490 = load i8, i8* %v2_10003490, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  store i32 %v4_10003490, i32* %r9.global-to-local, align 4
  %v3_10003494 = icmp eq i8 %v3_10003490, 31
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003490, 32
  %v1_1000356c = add i32 %v2_1000348c, 16
  %v2_1000356c = inttoptr i32 %v1_1000356c to i32*
  %v3_1000356c = load i32, i32* %v2_1000356c, align 4
  br i1 %tmp50, label %dec_label_pc_1000356c, label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100034a4, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.0 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  store i32 %v4_1000342c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_10003594, %dec_label_pc_100034a8
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003594 ], [ %stack_var_-396.0, %dec_label_pc_100034a8 ]
  %storemerge = phi i16 [ %v1_10003594, %dec_label_pc_10003594 ], [ %v5_10003318, %dec_label_pc_100034a8 ]
  %v0_100034b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034b8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034c0.23 to i32), i32* @lr, align 4
  %v0_100034bc = call i32 @function_1000993c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v0_100034c4 = call i32 @function_100091f0()
  store i32 %v0_100034c4, i32* %r3.global-to-local, align 4
  store i32 %v0_100034c4, i32* @r31, align 4
  %v4_1000350c = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_1000351c = zext i16 %storemerge to i32
  %v4_10003520 = icmp eq i16 %storemerge, %tmp13
  %v4_1000350c.not = xor i1 %v4_1000350c, true
  br label %dec_label_pc_100034cc

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_10003528, %dec_label_pc_100034b0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100034dc, i32* %r7.global-to-local, align 4
  store i32 %v2_100034e0, i32* %r8.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100034e4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449008, i32* @lr, align 4
  %v6_100034ec = call i32 @function_10009a48(i32 %v0_100034e4, i32 %v2_100034d0, i32 256, i32 16384, i32 %v2_100034dc, i32 %v2_100034e0)
  store i32 %v6_100034ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034f8 = icmp eq i32 %v6_100034ec, -1
  store i1 %v3_100034f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100034f8, label %dec_label_pc_100035a8, label %dec_label_pc_10003504

dec_label_pc_10003504:                            ; preds = %dec_label_pc_100034cc
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_1000350c, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_100034ec, 41
  %or.cond = or i1 %tmp51, %v4_1000350c.not
  br i1 %or.cond, label %dec_label_pc_10003528, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003504
  store i32 %v4_10003518, i32* %r0.global-to-local, align 4
  store i32 %v4_1000351c, i32* %r8.global-to-local, align 4
  store i1 %v4_10003520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003520, label %dec_label_pc_10003544, label %dec_label_pc_10003528

dec_label_pc_10003528:                            ; preds = %dec_label_pc_10003504, %dec_label_pc_1000355c, %dec_label_pc_10003518
  store i32 268449068, i32* @lr, align 4
  %v0_10003528 = call i32 @function_100091f0()
  %v0_1000352c = load i32, i32* @r31, align 4
  %v2_1000352c = sub i32 %v0_10003528, %v0_1000352c
  store i32 %v2_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = icmp eq i32 %v2_1000352c, 10
  store i1 %v3_10003530, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_1000352c, 11
  br i1 %tmp52, label %dec_label_pc_100034cc, label %dec_label_pc_10003538

dec_label_pc_10003538:                            ; preds = %dec_label_pc_10003528
  %v0_10003538 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  store i32 268449088, i32* @lr, align 4
  %v0_1000353c = call i32 @function_10008e20()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_10003448 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  store i32 %v3_10003448, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v3_10003448, -1
  store i1 %v3_1000344c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003448, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003544:                            ; preds = %dec_label_pc_10003518
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003548, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003554, label %dec_label_pc_10003608, label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544
  br i1 %v3_1000354c, label %dec_label_pc_10003528, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000355c
  %v0_10003560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @function_10008e20()
  store i32 %v0_10003564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003438

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r29.global-to-local, align 4
  %v0_10003570 = call i32 @function_10005d68()
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  %v3_10003574 = load i32, i32* %stack_var_-408, align 4
  %v1_10003578 = mul i32 %v3_10003574, 24
  %v1_1000357c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000357c = add i32 %v1_1000357c, %v1_10003578
  store i32 %v2_1000357c, i32* %r9.global-to-local, align 4
  %v1_10003580 = add i32 %v2_1000357c, 20
  %v2_10003580 = inttoptr i32 %v1_10003580 to i8*
  %v3_10003580 = load i8, i8* %v2_10003580, align 1
  %v4_10003580 = zext i8 %v3_10003580 to i32
  store i32 %v4_10003580, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10003580, 64
  %v2_10003584 = zext i8 %tmp56 to i32
  %v3_10003584 = lshr i32 %v0_10003570, %v2_10003584
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  %v0_10003588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003588 = add i32 %v3_10003584, %v0_10003588
  store i32 %v2_10003588, i32* %r29.global-to-local, align 4
  %v0_10003590 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003590, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_10003594:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.2 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  %v0_10003594 = call i32 @function_10005d68()
  %v1_10003594 = trunc i32 %v0_10003594 to i16
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100033f4
  %v0_100035a0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100035a0, i32* %r3.global-to-local, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_10008e20()
  store i32 %v0_100035a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100034cc, %dec_label_pc_100031fc, %dec_label_pc_100035a0
  store i32 %v0_10003214, i32* %r0.global-to-local, align 4
  %v1_100035bc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003204)
  store i32 %v0_1000324c, i32* %r28.global-to-local, align 4
  store i32 %v0_10003254, i32* %r29.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003604

dec_label_pc_10003608:                            ; preds = %dec_label_pc_10003544
  %v3_10003608 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003608, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000360c, i32* @r3, align 4
  %v0_10003610 = load i32, i32* @r30, align 4
  %v1_10003610 = add i32 %v0_10003610, 2
  %v2_10003610 = inttoptr i32 %v1_10003610 to i16*
  %v3_10003610 = load i16, i16* %v2_10003610, align 2
  %v4_10003610 = zext i16 %v3_10003610 to i32
  store i32 %v4_10003610, i32* %r11.global-to-local, align 4
  %v1_10003614 = mul i32 %v3_10003608, 16
  store i32 %v1_10003614, i32* %r9.global-to-local, align 4
  %v1_10003618 = mul i32 %v3_10003608, 4
  store i32 %v1_10003618, i32* @r29, align 4
  %v1_1000361c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000361c = add i32 %v1_1000361c, %v1_10003614
  %v4_1000361c = inttoptr i32 %v3_1000361c to i32*
  store i32 %tmp14, i32* %v4_1000361c, align 4
  %v0_10003620 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003620 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003620 = add i32 %v1_10003620, %v0_10003620
  store i32 %v2_10003620, i32* %r9.global-to-local, align 4
  %v0_10003624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003624 = trunc i32 %v0_10003624 to i16
  %v3_10003624 = add i32 %v2_10003620, 14
  %v4_10003624 = inttoptr i32 %v3_10003624 to i16*
  store i16 %v1_10003624, i16* %v4_10003624, align 2
  %v0_10003628 = load i32, i32* @r30, align 4
  %v1_10003628 = add i32 %v0_10003628, 4
  %v2_10003628 = inttoptr i32 %v1_10003628 to i32*
  %v3_10003628 = load i32, i32* %v2_10003628, align 4
  store i32 %v3_10003628, i32* %r0.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000362c = trunc i32 %v0_1000362c to i16
  %v2_1000362c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000362c = add i32 %v2_1000362c, 12
  %v4_1000362c = inttoptr i32 %v3_1000362c to i16*
  store i16 %v1_1000362c, i16* %v4_1000362c, align 2
  %v0_10003630 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, 4
  %v3_10003630 = inttoptr i32 %v2_10003630 to i32*
  store i32 %v0_10003630, i32* %v3_10003630, align 4
  %v0_10003634 = load i32, i32* @r30, align 4
  %v1_10003634 = add i32 %v0_10003634, 8
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v3_10003634, i32* %r0.global-to-local, align 4
  %v1_10003638 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003638 = add i32 %v1_10003638, 8
  %v3_10003638 = inttoptr i32 %v2_10003638 to i32*
  store i32 %v3_10003634, i32* %v3_10003638, align 4
  store i32 268449344, i32* @lr, align 4
  %v0_1000363c = call i32 @function_10009d40()
  store i32 %v0_1000363c, i32* %r3.global-to-local, align 4
  %v3_10003640 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003640, i32* %r0.global-to-local, align 4
  %v1_10003644 = load i32, i32* @r29, align 4
  %v2_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003644 = add i32 %v2_10003644, %v1_10003644
  %v4_10003644 = inttoptr i32 %v3_10003644 to i32*
  store i32 %v0_1000363c, i32* %v4_10003644, align 4
  %v0_10003648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003648 = mul i32 %v0_10003648, 4
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000364c = add i32 %v0_1000364c, %v1_10003648
  %v3_1000364c = inttoptr i32 %v2_1000364c to i32*
  %v4_1000364c = load i32, i32* %v3_1000364c, align 4
  store i32 %v4_1000364c, i32* @r31, align 4
  store i32 %v1_100032f0, i32* %r0.global-to-local, align 4
  %v1_10003654 = inttoptr i32 %v4_1000364c to i32*
  %v2_10003654 = load i32, i32* %v1_10003654, align 4
  store i32 %v2_10003654, i32* %r9.global-to-local, align 4
  %v1_10003658 = add i32 %v4_1000364c, 20
  store i32 %v1_10003658, i32* @r30, align 4
  store i1 %v3_1000365c, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003664 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003664, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1000366c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003670 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003670 = trunc i32 %v0_10003670 to i16
  %v2_10003670 = load i32, i32* @r31, align 4
  %v3_10003670 = add i32 %v2_10003670, 4
  %v4_10003670 = inttoptr i32 %v3_10003670 to i16*
  store i16 %v1_10003670, i16* %v4_10003670, align 2
  %v1_10003674 = load i32, i32* @r31, align 4
  %v2_10003674 = inttoptr i32 %v1_10003674 to i32*
  store i32 %v1_1000366c, i32* %v2_10003674, align 4
  %v0_10003678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003678 = trunc i32 %v0_10003678 to i16
  %v2_10003678 = load i32, i32* @r31, align 4
  %v3_10003678 = add i32 %v2_10003678, 2
  %v4_10003678 = inttoptr i32 %v3_10003678 to i16*
  store i16 %v1_10003678, i16* %v4_10003678, align 2
  store i32 %v4_1000367c, i32* %r9.global-to-local, align 4
  %v2_10003680 = load i32, i32* @r31, align 4
  %v3_10003680 = add i32 %v2_10003680, 1
  %v4_10003680 = inttoptr i32 %v3_10003680 to i8*
  store i8 %v5_100032a4, i8* %v4_10003680, align 1
  store i32 %v4_10003684, i32* %r0.global-to-local, align 4
  %v2_10003688 = load i32, i32* @r31, align 4
  %v3_10003688 = add i32 %v2_10003688, 8
  %v4_10003688 = inttoptr i32 %v3_10003688 to i8*
  store i8 %v5_100032dc, i8* %v4_10003688, align 1
  %v0_1000368c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000368c, label %dec_label_pc_10003698, label %dec_label_pc_10003690

dec_label_pc_10003690:                            ; preds = %dec_label_pc_10003608
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003694 = load i32, i32* @r31, align 4
  %v3_10003694 = add i32 %v2_10003694, 6
  %v4_10003694 = inttoptr i32 %v3_10003694 to i16*
  store i16 16384, i16* %v4_10003694, align 2
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003608, %dec_label_pc_10003690
  %v2_100036a0 = load i32, i32* @r31, align 4
  %v3_100036a0 = add i32 %v2_100036a0, 9
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i8*
  store i8 6, i8* %v4_100036a0, align 1
  %v3_100036a4 = load i32, i32* @global_var_1001c188.16, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* @r31, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 12
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a4, i32* %v3_100036a8, align 4
  %v3_100036ac = load i32, i32* %stack_var_-408, align 4
  %v1_100036b0 = mul i32 %v3_100036ac, 16
  store i32 %v1_100036b0, i32* %r9.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, %v1_100036b0
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  %v4_100036b4 = load i32, i32* %v3_100036b4, align 4
  store i32 %v4_100036b4, i32* %r0.global-to-local, align 4
  store i32 %v2_100036b4, i32* %r9.global-to-local, align 4
  %v1_100036bc = add i32 %v2_100036b4, 12
  %v2_100036bc = inttoptr i32 %v1_100036bc to i16*
  %v3_100036bc = load i16, i16* %v2_100036bc, align 2
  %v4_100036bc = zext i16 %v3_100036bc to i32
  store i32 %v4_100036bc, i32* %r11.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r31, align 4
  %v2_100036c0 = add i32 %v1_100036c0, 16
  %v3_100036c0 = inttoptr i32 %v2_100036c0 to i32*
  store i32 %v4_100036b4, i32* %v3_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* @r31, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 20
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v0_100036c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036c8 = add i32 %v0_100036c8, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  store i32 %v3_100036c8, i32* %r0.global-to-local, align 4
  %v0_100036cc = load i32, i32* @r30, align 4
  %v1_100036cc = add i32 %v0_100036cc, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  store i32 %v3_100036cc, i32* %r11.global-to-local, align 4
  %v2_100036d0 = add i32 %v0_100036cc, 4
  %v3_100036d0 = inttoptr i32 %v2_100036d0 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100036d8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100036d8, i32* %r11.global-to-local, align 4
  %v0_100036dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036dc = add i32 %v0_100036dc, 14
  %v2_100036dc = inttoptr i32 %v1_100036dc to i16*
  %v3_100036dc = load i16, i16* %v2_100036dc, align 2
  %v4_100036dc = zext i16 %v3_100036dc to i32
  store i32 %v4_100036dc, i32* %r0.global-to-local, align 4
  %v1_100036e0 = add i32 %v0_100036dc, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = or i32 %v1_100036d8, 1114112
  store i32 %v1_100036e4, i32* %r11.global-to-local, align 4
  %v2_100036e8 = load i32, i32* @r30, align 4
  %v3_100036e8 = add i32 %v2_100036e8, 2
  %v4_100036e8 = inttoptr i32 %v3_100036e8 to i16*
  store i16 %v3_100036dc, i16* %v4_100036e8, align 2
  %v0_100036ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ec = load i32, i32* @r30, align 4
  %v2_100036ec = add i32 %v1_100036ec, 8
  %v3_100036ec = inttoptr i32 %v2_100036ec to i32*
  store i32 %v0_100036ec, i32* %v3_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036f0 = load i32, i32* @r30, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 12
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v0_100036f4 = call i32 @function_10005d68()
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  store i32 %v1_1000332c, i32* %r9.global-to-local, align 4
  %v3_100036fc = load i32, i32* @r30, align 4
  %v4_100036fc = add i32 %v3_100036fc, 14
  %v5_100036fc = inttoptr i32 %v4_100036fc to i16*
  store i16 %v1_100036f4, i16* %v5_100036fc, align 2
  %v0_10003700 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003700, i32* @r4, align 4
  %v0_10003704 = load i32, i32* @r31, align 4
  %v1_10003704 = add i32 %v0_10003704, 40
  store i32 %v1_10003704, i32* @r3, align 4
  %v0_10003708 = load i32, i32* @r30, align 4
  %v1_10003708 = add i32 %v0_10003708, 12
  %v2_10003708 = inttoptr i32 %v1_10003708 to i32*
  %v3_10003708 = load i32, i32* %v2_10003708, align 4
  store i32 %v3_10003708, i32* %r0.global-to-local, align 4
  %v1_1000370c = call i32 @__asm_rlwimi(i32 %v1_1000332c, i32 21, i32 10, i32 10)
  store i32 %v1_1000370c, i32* %r0.global-to-local, align 4
  %v1_10003710 = call i32 @__asm_rlwimi(i32 %v1_10003350, i32 20, i32 11, i32 11)
  store i32 %v1_10003710, i32* %r0.global-to-local, align 4
  %v1_10003714 = call i32 @__asm_rlwimi(i32 %v1_10003368, i32 19, i32 12, i32 12)
  store i32 %v1_10003714, i32* %r0.global-to-local, align 4
  %v1_10003718 = call i32 @__asm_rlwimi(i32 %v1_10003380, i32 18, i32 13, i32 13)
  store i32 %v1_10003718, i32* %r0.global-to-local, align 4
  %v1_1000371c = call i32 @__asm_rlwimi(i32 %v1_10003398, i32 17, i32 14, i32 14)
  store i32 %v1_1000371c, i32* %r0.global-to-local, align 4
  %v1_10003720 = call i32 @__asm_rlwimi(i32 %v1_100033b0, i32 16, i32 15, i32 15)
  store i32 %v1_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r30, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v1_10003720, i32* %v3_10003724, align 4
  %v0_10003728 = call i32 @function_10005f3c()
  store i32 %v0_10003728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538, %dec_label_pc_10003698
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  %v1_10003730 = add i32 %v3_1000372c, 1
  store i32 %v1_10003730, i32* %r9.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003734 = icmp slt i32 %v1_10003730, %v1_10003734
  %v4_10003734 = icmp eq i32 %v1_10003730, %v1_10003734
  store i1 %v4_10003734, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003730, i32* %stack_var_-408, align 4
  br i1 %v2_10003734, label %dec_label_pc_10003438, label %dec_label_pc_10003740.loopexit

dec_label_pc_10003740.loopexit:                   ; preds = %dec_label_pc_1000372c
  %v0_1000374c.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000374c.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003740

dec_label_pc_10003740:                            ; preds = %dec_label_pc_10003740.loopexit, %dec_label_pc_10003418
  %v1_1000374c.pre = phi i1 [ %v1_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v1_10003418, %dec_label_pc_10003418 ]
  %v0_1000374c.pre = phi i1 [ %v0_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v3_10003418, %dec_label_pc_10003418 ]
  %v0_10003740 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003740 = icmp eq i32 %v0_10003740, 0
  store i1 %v3_10003740, i1* %cr2_eq.global-to-local, align 1
  %v0_10003744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 40
  store i32 %v1_10003744, i32* %r26.global-to-local, align 4
  %v1_10003748 = add i32 %v0_10003744, 20
  store i32 %v1_10003748, i32* @r31, align 4
  br label %dec_label_pc_1000374c.outer

dec_label_pc_1000374c.outer:                      ; preds = %dec_label_pc_10003820, %dec_label_pc_10003740
  %v1_1000374c.ph = phi i1 [ %v1_1000374c.pre, %dec_label_pc_10003740 ], [ %v1_10003820, %dec_label_pc_10003820 ]
  %v0_1000374c.ph = phi i1 [ %v0_1000374c.pre, %dec_label_pc_10003740 ], [ %v0_10003820, %dec_label_pc_10003820 ]
  %v2_1000374c = or i1 %v1_1000374c.ph, %v0_1000374c.ph
  br label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_1000374c.outer, %dec_label_pc_1000374c
  br i1 %v2_1000374c, label %dec_label_pc_1000374c, label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_1000374c, %dec_label_pc_10003820
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003760 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003760 = icmp eq i32 %v0_10003760, 65535
  store i1 %v4_10003760, i1* %cr4_eq.global-to-local, align 1
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = urem i32 %v0_10003764, 65536
  store i32 %v1_10003764, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, %dec_label_pc_10003750
  %v0_1000377c = phi i1 [ %v0_1000377c.pre, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ %v4_10003760, %dec_label_pc_10003750 ]
  %v0_10003770 = phi i32 [ %v1_10003810, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ 0, %dec_label_pc_10003750 ]
  %v1_10003770 = mul i32 %v0_10003770, 4
  store i32 %v1_10003770, i32* %r0.global-to-local, align 4
  %v0_10003774 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003774 = add i32 %v0_10003774, %v1_10003770
  %v3_10003774 = inttoptr i32 %v2_10003774 to i32*
  %v4_10003774 = load i32, i32* %v3_10003774, align 4
  store i32 %v4_10003774, i32* @r29, align 4
  %v1_10003778 = add i32 %v4_10003774, 20
  store i32 %v1_10003778, i32* %r28.global-to-local, align 4
  br i1 %v0_1000377c, label %dec_label_pc_10003828, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003770
  %v1_10003780 = add i32 %v4_10003774, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003784, i32* @r4, align 4
  %v0_10003788 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003788, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828, %dec_label_pc_1000383c
  %v2_1000378c = phi i32 [ %v4_10003774, %dec_label_pc_10003780 ], [ %v0_10003834, %dec_label_pc_10003828 ], [ %v2_1000378c.pre, %dec_label_pc_1000383c ]
  %v0_1000378c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v3_1000378c = add i32 %v2_1000378c, 10
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003794 = load i32, i32* @r29, align 4
  store i32 %v0_10003794, i32* @r3, align 4
  %v2_10003798 = call i32 @function_100043cc(i32 %v0_10003794, i32 20)
  %v3_10003798 = trunc i32 %v2_10003798 to i16
  store i32 %v2_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000379c, i32* %r9.global-to-local, align 4
  %v3_100037a0 = load i32, i32* @r29, align 4
  %v4_100037a0 = add i32 %v3_100037a0, 10
  %v5_100037a0 = inttoptr i32 %v4_100037a0 to i16*
  store i16 %v3_10003798, i16* %v5_100037a0, align 2
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100037a4, i32* @r4, align 4
  %v0_100037a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a8 = mul i32 %v0_100037a8, 16
  store i32 %v1_100037a8, i32* %r9.global-to-local, align 4
  %v0_100037ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100037ac = trunc i32 %v0_100037ac to i16
  %v3_100037ac = add i32 %v0_100037a4, 16
  %v4_100037ac = inttoptr i32 %v3_100037ac to i16*
  store i16 %v1_100037ac, i16* %v4_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100037b0 = add i32 %v1_100037b0, %v0_100037b0
  store i32 %v2_100037b0, i32* %r9.global-to-local, align 4
  %v0_100037b4 = load i32, i32* @r30, align 4
  %v1_100037b8 = add i32 %v2_100037b0, 4
  %v2_100037b8 = inttoptr i32 %v1_100037b8 to i32*
  %v3_100037b8 = load i32, i32* %v2_100037b8, align 4
  store i32 %v3_100037b8, i32* %r11.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v0_100037c0 = load i32, i32* @r29, align 4
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  %v1_100037c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037c4 = add i32 %v1_100037c4, 4
  %v3_100037c4 = inttoptr i32 %v2_100037c4 to i32*
  store i32 %v3_100037b8, i32* %v3_100037c4, align 4
  %v0_100037c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037c8 = add i32 %v0_100037c8, 1
  store i32 %v1_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 4
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v1_100037c8, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037d0, 8
  %v2_100037d0 = inttoptr i32 %v1_100037d0 to i32*
  %v3_100037d0 = load i32, i32* %v2_100037d0, align 4
  store i32 %v3_100037d0, i32* %r0.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037d4 = add i32 %v1_100037d4, 8
  %v3_100037d4 = inttoptr i32 %v2_100037d4 to i32*
  store i32 %v3_100037d0, i32* %v3_100037d4, align 4
  %v4_100037d8 = call i32 @function_10004430(i32 %v0_100037c0, i32 %v0_100037a4, i32 %v0_100037b4, i32 %v0_100037bc)
  %v5_100037d8 = trunc i32 %v4_100037d8 to i16
  store i32 %v4_100037d8, i32* %r3.global-to-local, align 4
  %v3_100037dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100037dc, i32* %r7.global-to-local, align 4
  %v0_100037e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_100037e0, 2
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r0.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r29, align 4
  %v1_100037e8 = mul i32 %v3_100037dc, 24
  store i32 %v1_100037e8, i32* %r7.global-to-local, align 4
  %v4_100037ec = add i32 %v0_100037e0, 16
  %v5_100037ec = inttoptr i32 %v4_100037ec to i16*
  store i16 %v5_100037d8, i16* %v5_100037ec, align 2
  %v0_100037f0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v0_100037f8
  store i32 %v2_100037f8, i32* %r7.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003800 = trunc i32 %v0_10003800 to i16
  %v3_10003800 = add i32 %v2_100037f8, 2
  %v4_10003800 = inttoptr i32 %v3_10003800 to i16*
  store i16 %v1_10003800, i16* %v4_10003800, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449804, i32* @lr, align 4
  %v6_10003808 = call i32 @function_10009ac0(i32 %v0_100037f4, i32 %v0_100037e4, i32 %v0_100037f0, i32 16384, i32 %v2_100037f8, i32 16)
  store i32 %v6_10003808, i32* %r3.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000380c, i32* %r9.global-to-local, align 4
  %v1_10003810 = add i32 %v3_1000380c, 1
  store i32 %v1_10003810, i32* %r0.global-to-local, align 4
  %v1_10003814 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003814 = icmp slt i32 %v1_10003810, %v1_10003814
  %v4_10003814 = icmp eq i32 %v1_10003810, %v1_10003814
  store i1 %v4_10003814, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003810, i32* %stack_var_-408, align 4
  br i1 %v2_10003814, label %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, label %dec_label_pc_10003820

dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge: ; preds = %dec_label_pc_1000378c
  %v0_1000377c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003770

dec_label_pc_10003820:                            ; preds = %dec_label_pc_1000378c
  %v0_10003820 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003820 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003820 = or i1 %v0_10003820, %v1_10003820
  br i1 %v2_10003820, label %dec_label_pc_1000374c.outer, label %dec_label_pc_10003750

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003770
  %v0_10003828 = call i32 @function_10005d68()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v0_1000382c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000382c, i32* @r4, align 4
  %v3_10003830 = load i32, i32* @r29, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  %v0_10003834 = load i32, i32* @r29, align 4
  %v1_10003834 = add i32 %v0_10003834, 40
  store i32 %v1_10003834, i32* @r3, align 4
  %v0_10003838 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003838, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000383c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828
  %v0_1000383c = call i32 @function_10005f3c()
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v2_1000378c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000378c

; uselistorder directives
  uselistorder i32 %v0_10003834, { 1, 0 }
  uselistorder i1 %v1_10003820, { 1, 0 }
  uselistorder i1 %v0_10003820, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100037d8, { 1, 0 }
  uselistorder i32 %v0_100037a4, { 1, 0, 2 }
  uselistorder i32 %v2_10003798, { 1, 0 }
  uselistorder i32 %v1_10003770, { 1, 0 }
  uselistorder i32 %v1_10003730, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100036b4, { 1, 0, 2 }
  uselistorder i32 %v1_100036b0, { 1, 0 }
  uselistorder i32 %v1_10003648, { 1, 0 }
  uselistorder i32 %v1_10003614, { 1, 0 }
  uselistorder i32 %v0_10003594, { 1, 0 }
  uselistorder i32 %v2_10003588, { 1, 2, 0 }
  uselistorder i1 %v4_1000350c, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_1000356c, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003548, { 1, 0 }
  uselistorder i32 %v1_100032f0, { 1, 0 }
  uselistorder i8 %v5_100032dc, { 1, 0 }
  uselistorder i8 %v5_100032a4, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i8 31, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 268448844, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000383c, { 1, 0 }
  uselistorder label %dec_label_pc_1000378c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000374c, { 1, 0 }
  uselistorder label %dec_label_pc_1000372c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003698, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003528, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003458, { 1, 0 }
}

define i32 @function_10003844(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003844:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003848 = load i32, i32* @lr, align 4
  store i32 %v0_10003848, i32* %r0.global-to-local, align 4
  %v0_1000384c = call i32 @__asm_mfcr()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000384c, i32* %r21.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100038ac = load i32, i32* @r30, align 4
  store i32 268449976, i32* @lr, align 4
  %v2_100038b4 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_100038b4, i32* %r22.global-to-local, align 4
  %v0_100038bc = load i32, i32* @r28, align 4
  %v0_100038c8 = load i32, i32* @r29, align 4
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 268450000, i32* @lr, align 4
  %v4_100038cc = inttoptr i32 %v0_100038bc to i32*
  %v5_100038cc = call i32 @function_100006a8(i32 %v0_100038c8, i32* %v4_100038cc, i32 2, i32 0)
  %v5_100038dc = trunc i32 %v5_100038cc to i8
  %v0_100038e4 = load i32, i32* @r28, align 4
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v0_100038e8, i32* %r3.global-to-local, align 4
  store i32 268450032, i32* @lr, align 4
  %v4_100038ec = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038ec = call i32 @function_100006a8(i32 %v0_100038e8, i32* %v4_100038ec, i32 3, i32 65535)
  %v0_100038f0 = load i32, i32* @r28, align 4
  store i32 %v5_100038ec, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v0_10003900, i32* %r3.global-to-local, align 4
  store i32 268450056, i32* @lr, align 4
  %v4_10003904 = inttoptr i32 %v0_100038f0 to i32*
  %v5_10003904 = call i32 @function_100006a8(i32 %v0_10003900, i32* %v4_10003904, i32 4, i32 64)
  %v0_10003908 = load i32, i32* @r28, align 4
  %v5_10003914 = trunc i32 %v5_10003904 to i8
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v0_1000391c, i32* %r3.global-to-local, align 4
  store i32 268450084, i32* @lr, align 4
  %v4_10003920 = inttoptr i32 %v0_10003908 to i32*
  %v5_10003920 = call i32 @function_100006a8(i32 %v0_1000391c, i32* %v4_10003920, i32 5, i32 0)
  %v0_10003930 = load i32, i32* @r28, align 4
  %v1_10003934 = urem i32 %v5_10003920, 256
  store i32 %v1_10003934, i32* @r31, align 4
  %v0_10003938 = load i32, i32* @r29, align 4
  store i32 %v0_10003938, i32* %r3.global-to-local, align 4
  store i32 268450112, i32* @lr, align 4
  %v4_1000393c = inttoptr i32 %v0_10003930 to i32*
  %v5_1000393c = call i32 @function_100006a8(i32 %v0_10003938, i32* %v4_1000393c, i32 6, i32 65535)
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v5_1000393c, i32* %r19.global-to-local, align 4
  %v0_10003954 = load i32, i32* @r29, align 4
  store i32 %v0_10003954, i32* %r3.global-to-local, align 4
  store i32 268450140, i32* @lr, align 4
  %v4_10003958 = inttoptr i32 %v0_10003944 to i32*
  %v5_10003958 = call i32 @function_100006a8(i32 %v0_10003954, i32* %v4_10003958, i32 7, i32 65535)
  %v0_10003960 = load i32, i32* @r28, align 4
  store i32 %v5_10003958, i32* %r20.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r29, align 4
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 268450168, i32* @lr, align 4
  %v4_10003974 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003974 = call i32 @function_100006a8(i32 %v0_10003970, i32* %v4_10003974, i32 17, i32 65535)
  %v0_1000397c = load i32, i32* @r28, align 4
  store i32 %v5_10003974, i32* %r15.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r29, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_100006a8(i32 %v0_1000398c, i32* %v4_10003990, i32 18, i32 65535)
  %v0_10003994 = load i32, i32* @r28, align 4
  store i32 %v5_10003990, i32* %r17.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r29, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_100006a8(i32 %v0_100039a4, i32* %v4_100039a8, i32 11, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v0_100039bc = load i32, i32* @r29, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_100006a8(i32 %v0_100039bc, i32* %v4_100039c0, i32 12, i32 1)
  %v0_100039c4 = load i32, i32* @r28, align 4
  store i32 %v5_100039c0, i32* %r14.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r29, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_100006a8(i32 %v0_100039d4, i32* %v4_100039d8, i32 13, i32 0)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d8, i32* %r24.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_100006a8(i32 %v0_100039ec, i32* %v4_100039f0, i32 14, i32 0)
  %v0_100039f4 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r27.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r29, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @function_100006a8(i32 %v0_10003a04, i32* %v4_10003a08, i32 15, i32 0)
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v5_10003a08, i32* %r26.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @function_100006a8(i32 %v0_10003a1c, i32* %v4_10003a20, i32 16, i32 0)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* %r30.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_100006a8(i32 %v0_10003a34, i32* %v4_10003a38, i32 0, i32 512)
  %v0_10003a3c = load i32, i32* @r28, align 4
  store i32 %v5_10003a38, i32* %r16.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r29, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @function_100006a8(i32 %v0_10003a4c, i32* %v4_10003a50, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a58 = load i32, i32* @global_var_1001c188.16, align 4
  %v1_10003a5c = urem i32 %v5_10003a50, 256
  %v0_10003a60 = load i32, i32* @r28, align 4
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v0_10003a6c, i32* %r3.global-to-local, align 4
  store i32 268450420, i32* @lr, align 4
  %v5_10003a70 = inttoptr i32 %v0_10003a60 to i32*
  %v6_10003a70 = call i32 @function_10000628(i32 %v0_10003a6c, i32* %v5_10003a70, i32 25, i32 %v3_10003a58, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v3_10003a84 = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  store i32 %v3_10003a84, i32* %r3.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %v3_10003a84, -1
  store i32 %v3_10003a84, i32* %r23.global-to-local, align 4
  br i1 %v3_10003a88, label %dec_label_pc_10003dc8, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003844
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003aa0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_10003aa0, i32 4)
  store i32 %v4_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v4_10003aac, -1
  br i1 %v3_10003ab0, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003a94
  %v0_10003ab8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ab8 = icmp slt i32 %v0_10003ab8, 0
  %v3_10003ab8 = icmp eq i32 %v0_10003ab8, 0
  store i1 %v1_10003ab8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ab8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003ac4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ac4 = urem i32 %v0_10003ac4, 65536
  store i32 %v1_10003ac4, i32* %r18.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ac8 = urem i32 %v0_10003ac8, 65536
  store i32 %v1_10003ac8, i32* %r19.global-to-local, align 4
  %v0_10003acc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003acc = urem i32 %v0_10003acc, 65536
  store i32 %v1_10003acc, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003ab8, 1
  br i1 %tmp40, label %dec_label_pc_10003da0, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003ad8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ad8 = urem i32 %v0_10003ad8, 256
  %v0_10003adc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003adc = add i32 %v0_10003adc, 40
  store i32 %v1_10003adc, i32* %r24.global-to-local, align 4
  %v3_10003ae0 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003ae0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003ae4 = urem i32 %v5_100039a8, 2
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 2
  store i32 %v1_10003ae8, i32* %r28.global-to-local, align 4
  %v1_10003aec = urem i32 %v0_10003ad8, 2
  store i32 %v1_10003aec, i32* %r26.global-to-local, align 4
  %v1_10003af0 = urem i32 %v1_10003adc, 65536
  store i32 %v1_10003af0, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* @r31, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr2_eq.global-to-local, align 1
  %v5_10003afc = trunc i32 %v1_10003adc to i16
  %v0_10003b00 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 2
  store i32 %v1_10003b00, i32* %r14.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 2
  store i32 %v1_10003b04, i32* %r27.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b08 = urem i32 %v0_10003b08, 2
  %v4_10003b58 = sext i8 %v5_100038dc to i32
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450588, i32* @lr, align 4
  %v2_10003b18 = call i32 @function_10009e98(i32 1510, i32 1)
  store i32 %v2_10003b18, i32* %r3.global-to-local, align 4
  %v3_10003b1c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b1c, i32* %r9.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r31, align 4
  %v1_10003b20 = mul i32 %v0_10003b20, 4
  store i32 %v1_10003b20, i32* %r0.global-to-local, align 4
  %v1_10003b24 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003b24 = add i32 %v1_10003b24, %v1_10003b20
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i32*
  store i32 %v2_10003b18, i32* %v4_10003b24, align 4
  %v0_10003b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b28 = mul i32 %v0_10003b28, 4
  store i32 %v1_10003b28, i32* %r9.global-to-local, align 4
  %v1_10003b2c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, %v1_10003b28
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  %v4_10003b2c = load i32, i32* %v3_10003b2c, align 4
  store i32 %v4_10003b2c, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b34 = inttoptr i32 %v4_10003b2c to i32*
  %v2_10003b34 = load i32, i32* %v1_10003b34, align 4
  store i32 %v2_10003b34, i32* %r0.global-to-local, align 4
  %v1_10003b38 = add i32 %v4_10003b2c, 20
  store i32 %v1_10003b38, i32* @r30, align 4
  %v0_10003b3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b3c = trunc i32 %v0_10003b3c to i16
  %v3_10003b3c = add i32 %v4_10003b2c, 4
  %v4_10003b3c = inttoptr i32 %v3_10003b3c to i16*
  store i16 %v1_10003b3c, i16* %v4_10003b3c, align 2
  %v1_10003b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b40, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003b48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003b4c = load i32, i32* @r31, align 4
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  store i32 %v1_10003b48, i32* %v2_10003b4c, align 4
  %v2_10003b54 = load i32, i32* @r31, align 4
  %v3_10003b54 = add i32 %v2_10003b54, 8
  %v4_10003b54 = inttoptr i32 %v3_10003b54 to i8*
  store i8 %v5_10003914, i8* %v4_10003b54, align 1
  store i32 %v4_10003b58, i32* %r9.global-to-local, align 4
  %v2_10003b5c = load i32, i32* @r31, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v5_100038dc, i8* %v4_10003b5c, align 1
  store i32 %v1_10003adc, i32* %r0.global-to-local, align 4
  %v2_10003b64 = load i32, i32* @r31, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 2
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i16*
  store i16 %v5_10003afc, i16* %v4_10003b64, align 2
  %v0_10003b68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b68, label %dec_label_pc_10003b74, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003b10
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b70 = load i32, i32* @r31, align 4
  %v3_10003b70 = add i32 %v2_10003b70, 6
  %v4_10003b70 = inttoptr i32 %v3_10003b70 to i16*
  store i16 16384, i16* %v4_10003b70, align 2
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b6c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i16
  %v2_10003b78 = load i32, i32* @r31, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 20
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i16*
  store i16 %v1_10003b78, i16* %v4_10003b78, align 2
  %v0_10003b7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i8
  %v2_10003b7c = load i32, i32* @r31, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 9
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i8*
  store i8 %v1_10003b7c, i8* %v4_10003b7c, align 1
  %v0_10003b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b80 = trunc i32 %v0_10003b80 to i16
  %v2_10003b80 = load i32, i32* @r30, align 4
  %v3_10003b80 = add i32 %v2_10003b80, 2
  %v4_10003b80 = inttoptr i32 %v3_10003b80 to i16*
  store i16 %v1_10003b80, i16* %v4_10003b80, align 2
  %v1_10003b88 = load i32, i32* @r31, align 4
  %v2_10003b88 = add i32 %v1_10003b88, 12
  %v3_10003b88 = inttoptr i32 %v2_10003b88 to i32*
  store i32 %v6_10003a70, i32* %v3_10003b88, align 4
  %v3_10003b8c = load i32, i32* %stack_var_-136, align 4
  %v1_10003b90 = mul i32 %v3_10003b8c, 24
  %v1_10003b94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v1_10003b90
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r31, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 16
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v3_10003b98, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* @r30, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 4
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* @r30, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  %v2_10003ba8 = inttoptr i32 %v1_10003ba8 to i32*
  %v3_10003ba8 = load i32, i32* %v2_10003ba8, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003bac, i32* %r0.global-to-local, align 4
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = call i32 @__asm_rlwimi(i32 %v1_10003ae4, i32 21, i32 10, i32 10)
  store i32 %v1_10003bb4, i32* %r0.global-to-local, align 4
  %v1_10003bb8 = call i32 @__asm_rlwimi(i32 %v1_10003b00, i32 20, i32 11, i32 11)
  store i32 %v1_10003bb8, i32* %r0.global-to-local, align 4
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 19, i32 12, i32 12)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  %v1_10003bc0 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 18, i32 13, i32 13)
  store i32 %v1_10003bc0, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 %v1_10003ae8, i32 17, i32 14, i32 14)
  store i32 %v1_10003bc4, i32* %r0.global-to-local, align 4
  %v1_10003bc8 = call i32 @__asm_rlwimi(i32 %v1_10003b08, i32 16, i32 15, i32 15)
  store i32 %v1_10003bc8, i32* %r0.global-to-local, align 4
  %v1_10003bcc = load i32, i32* @r30, align 4
  %v2_10003bcc = add i32 %v1_10003bcc, 12
  %v3_10003bcc = inttoptr i32 %v2_10003bcc to i32*
  store i32 %v1_10003bc8, i32* %v3_10003bcc, align 4
  %v0_10003bd0 = call i32 @function_10005d68()
  %v1_10003bd0 = trunc i32 %v0_10003bd0 to i16
  %v0_10003bd4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bd4, i32* @r4, align 4
  %v3_10003bd8 = load i32, i32* @r30, align 4
  %v4_10003bd8 = add i32 %v3_10003bd8, 14
  %v5_10003bd8 = inttoptr i32 %v4_10003bd8 to i16*
  store i16 %v1_10003bd0, i16* %v5_10003bd8, align 2
  %v0_10003bdc = load i32, i32* @r31, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* @r3, align 4
  %v0_10003be0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003be0, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be4

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003b74
  %v0_10003be4 = load i32, i32* @r30, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  %v1_10003be8 = or i32 %v3_10003be4, 524288
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  store i32 %v1_10003be8, i32* %v2_10003be4, align 4
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003be4
  %v0_10003bf0 = call i32 @function_10005f3c()
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v3_10003bf4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bf4, i32* %r9.global-to-local, align 4
  %v1_10003bf8 = add i32 %v3_10003bf4, 1
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = icmp slt i32 %v1_10003bf8, %v1_10003bfc
  store i32 %v1_10003bf8, i32* %stack_var_-136, align 4
  br i1 %v2_10003bfc, label %dec_label_pc_10003b10, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003c0c = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c0c = add i32 %v0_10003c0c, 20
  store i32 %v1_10003c0c, i32* @r30, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v3_10003c14 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003c14, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c18 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003c18, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c1c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c1c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003c1c.preheader:                  ; preds = %dec_label_pc_10003cfc, %dec_label_pc_10003da0, %dec_label_pc_10003c08
  %v1_10003c1c = phi i1 [ %v1_10003ab8, %dec_label_pc_10003da0 ], [ %v1_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v1_10003cfc, %dec_label_pc_10003cfc ]
  %v0_10003c1c = phi i1 [ %v3_10003ab8, %dec_label_pc_10003da0 ], [ %v0_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v0_10003cfc, %dec_label_pc_10003cfc ]
  %v2_10003c1c = or i1 %v1_10003c1c, %v0_10003c1c
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003c1c.preheader, %dec_label_pc_10003c1c
  br i1 %v2_10003c1c, label %dec_label_pc_10003c1c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003c1c, %dec_label_pc_10003cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = urem i32 %v0_10003c24, 65536
  store i32 %v1_10003c24, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003c8c, %dec_label_pc_10003c20
  %v0_10003c34 = phi i32 [ %v1_10003cec, %dec_label_pc_10003c8c ], [ 0, %dec_label_pc_10003c20 ]
  %v1_10003c34 = mul i32 %v0_10003c34, 24
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = mul i32 %v0_10003c34, 4
  %v1_10003c3c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003c3c = add i32 %v1_10003c3c, %v1_10003c38
  %v3_10003c3c = inttoptr i32 %v2_10003c3c to i32*
  %v4_10003c3c = load i32, i32* %v3_10003c3c, align 4
  store i32 %v4_10003c3c, i32* %r28.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c40 = add i32 %v1_10003c40, %v1_10003c34
  %v1_10003c44 = add i32 %v2_10003c40, 20
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i8*
  %v3_10003c44 = load i8, i8* %v2_10003c44, align 1
  %v4_10003c44 = zext i8 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r9.global-to-local, align 4
  %v1_10003c48 = add i32 %v4_10003c3c, 20
  store i32 %v1_10003c48, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003c44, 32
  br i1 %tmp41, label %dec_label_pc_10003d04, label %dec_label_pc_10003c54

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003c34
  %v0_10003c54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003c54, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 65535, i32* @r29, align 4
  %v0_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c60 = icmp eq i32 %v0_10003c60, 65535
  br i1 %v4_10003c60, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v1_10003c68 = phi i32 [ %v1_10003d3c, %dec_label_pc_10003d2c ], [ 65535, %dec_label_pc_10003c58 ]
  %v0_10003c68 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, %v1_10003c68
  br i1 %v4_10003c68, label %dec_label_pc_10003d54, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge, %dec_label_pc_10003c68
  %v1_10003c70 = phi i32 [ %v1_10003c70.pre, %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge ], [ %v1_10003c68, %dec_label_pc_10003c68 ]
  %v0_10003c70 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c70 = icmp eq i32 %v0_10003c70, %v1_10003c70
  br i1 %v4_10003c70, label %dec_label_pc_10003d64, label %dec_label_pc_10003c78

dec_label_pc_10003c78:                            ; preds = %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge, %dec_label_pc_10003c70
  %v1_10003c78 = phi i32 [ %v1_10003c78.pre, %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge ], [ %v1_10003c70, %dec_label_pc_10003c70 ]
  %v0_10003c78 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c78 = icmp eq i32 %v0_10003c78, %v1_10003c78
  br i1 %v4_10003c78, label %dec_label_pc_10003d74, label %dec_label_pc_10003c80

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge, %dec_label_pc_10003c78
  %v1_10003c80 = phi i32 [ %v1_10003c80.pre, %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge ], [ %v1_10003c78, %dec_label_pc_10003c78 ]
  %v0_10003c80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c80 = icmp eq i32 %v0_10003c80, %v1_10003c80
  br i1 %v4_10003c80, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003c88 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c88, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003c8c:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v0_10003c8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c8c = trunc i32 %v0_10003c8c to i16
  %v2_10003c8c = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c8c = add i32 %v2_10003c8c, 10
  %v4_10003c8c = inttoptr i32 %v3_10003c8c to i16*
  store i16 %v1_10003c8c, i16* %v4_10003c8c, align 2
  %v0_10003c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c94, i32* @r3, align 4
  %v2_10003c98 = call i32 @function_100043cc(i32 %v0_10003c94, i32 20)
  %v3_10003c98 = trunc i32 %v2_10003c98 to i16
  %v0_10003c9c = load i32, i32* @r31, align 4
  store i32 %v0_10003c9c, i32* @r4, align 4
  %v4_10003ca0 = add i32 %v0_10003c94, 10
  %v5_10003ca0 = inttoptr i32 %v4_10003ca0 to i16*
  store i16 %v3_10003c98, i16* %v5_10003ca0, align 2
  %v0_10003ca4 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ca8 = trunc i32 %v0_10003ca8 to i16
  %v2_10003ca8 = load i32, i32* @r31, align 4
  %v3_10003ca8 = add i32 %v2_10003ca8, 16
  %v4_10003ca8 = inttoptr i32 %v3_10003ca8 to i16*
  store i16 %v1_10003ca8, i16* %v4_10003ca8, align 2
  %v0_10003cac = load i32, i32* @r30, align 4
  %v0_10003cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cb0, i32* %r3.global-to-local, align 4
  %v4_10003cb4 = call i32 @function_10004430(i32 %v0_10003cb0, i32 %v0_10003c9c, i32 %v0_10003ca4, i32 %v0_10003cac)
  %v5_10003cb4 = trunc i32 %v4_10003cb4 to i16
  store i32 %v4_10003cb4, i32* %r3.global-to-local, align 4
  %v3_10003cb8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003cb8, i32* %r7.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r31, align 4
  %v1_10003cbc = add i32 %v0_10003cbc, 2
  %v2_10003cbc = inttoptr i32 %v1_10003cbc to i16*
  %v3_10003cbc = load i16, i16* %v2_10003cbc, align 2
  %v4_10003cbc = zext i16 %v3_10003cbc to i32
  store i32 %v4_10003cbc, i32* %r0.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003cc4 = mul i32 %v3_10003cb8, 24
  store i32 %v1_10003cc4, i32* %r7.global-to-local, align 4
  %v4_10003cc8 = add i32 %v0_10003cbc, 16
  %v5_10003cc8 = inttoptr i32 %v4_10003cc8 to i16*
  store i16 %v5_10003cb4, i16* %v5_10003cc8, align 2
  %v0_10003ccc = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  %v0_10003cd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003cd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, %v0_10003cd4
  store i32 %v2_10003cd4, i32* %r7.global-to-local, align 4
  %v0_10003cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  %v3_10003cdc = add i32 %v2_10003cd4, 2
  %v4_10003cdc = inttoptr i32 %v3_10003cdc to i16*
  store i16 %v1_10003cdc, i16* %v4_10003cdc, align 2
  store i32 268451048, i32* @lr, align 4
  %v6_10003ce4 = call i32 @function_10009ac0(i32 %v0_10003cd0, i32 %v0_10003cc0, i32 %v0_10003ccc, i32 16384, i32 %v2_10003cd4, i32 16)
  store i32 %v6_10003ce4, i32* %r3.global-to-local, align 4
  %v3_10003ce8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cec = add i32 %v3_10003ce8, 1
  store i32 %v1_10003cec, i32* %r9.global-to-local, align 4
  %v1_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003cf0 = icmp slt i32 %v1_10003cec, %v1_10003cf0
  store i32 %v1_10003cec, i32* %stack_var_-136, align 4
  br i1 %v2_10003cf0, label %dec_label_pc_10003c34, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003c8c
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003cfc = or i1 %v0_10003cfc, %v1_10003cfc
  br i1 %v2_10003cfc, label %dec_label_pc_10003c1c.preheader, label %dec_label_pc_10003c20

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003c34
  %v1_10003d04 = add i32 %v2_10003c40, 16
  %v2_10003d04 = inttoptr i32 %v1_10003d04 to i32*
  %v3_10003d04 = load i32, i32* %v2_10003d04, align 4
  store i32 %v3_10003d04, i32* %r29.global-to-local, align 4
  %v0_10003d08 = call i32 @function_10005d68()
  store i32 %v0_10003d08, i32* %r3.global-to-local, align 4
  %v3_10003d0c = load i32, i32* %stack_var_-136, align 4
  %v1_10003d10 = mul i32 %v3_10003d0c, 24
  %v1_10003d14 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d14 = add i32 %v1_10003d14, %v1_10003d10
  store i32 %v2_10003d14, i32* %r9.global-to-local, align 4
  %v1_10003d18 = add i32 %v2_10003d14, 20
  %v2_10003d18 = inttoptr i32 %v1_10003d18 to i8*
  %v3_10003d18 = load i8, i8* %v2_10003d18, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  store i32 %v4_10003d18, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d18, 64
  %v2_10003d1c = zext i8 %tmp to i32
  %v3_10003d1c = lshr i32 %v0_10003d08, %v2_10003d1c
  store i32 %v3_10003d1c, i32* %r3.global-to-local, align 4
  %v0_10003d20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d20 = add i32 %v3_10003d1c, %v0_10003d20
  store i32 %v2_10003d20, i32* %r29.global-to-local, align 4
  %v1_10003d24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d24 = add i32 %v1_10003d24, 16
  %v3_10003d24 = inttoptr i32 %v2_10003d24 to i32*
  store i32 %v2_10003d20, i32* %v3_10003d24, align 4
  %v0_10003d28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d30 = call i32 @function_10005d68()
  store i32 %v0_10003d30, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003d38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d38 = add i32 %v1_10003d38, 12
  %v3_10003d38 = inttoptr i32 %v2_10003d38 to i32*
  store i32 %v0_10003d30, i32* %v3_10003d38, align 4
  %v0_10003d3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d3c = load i32, i32* @r29, align 4
  %v4_10003d3c = icmp eq i32 %v0_10003d3c, %v1_10003d3c
  br i1 %v4_10003d3c, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003d44:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v0_10003d44 = call i32 @function_10005d68()
  %v1_10003d44 = trunc i32 %v0_10003d44 to i16
  store i32 %v0_10003d44, i32* %r3.global-to-local, align 4
  %v0_10003d48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d48 = load i32, i32* @r29, align 4
  %v4_10003d48 = icmp eq i32 %v0_10003d48, %v1_10003d48
  %v3_10003d4c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d4c = add i32 %v3_10003d4c, 4
  %v5_10003d4c = inttoptr i32 %v4_10003d4c to i16*
  store i16 %v1_10003d44, i16* %v5_10003d4c, align 2
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge

dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge: ; preds = %dec_label_pc_10003d44
  %v1_10003c70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d44, %dec_label_pc_10003c68
  %v0_10003d54 = call i32 @function_10005d68()
  %v1_10003d54 = trunc i32 %v0_10003d54 to i16
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d58 = load i32, i32* @r29, align 4
  %v4_10003d58 = icmp eq i32 %v0_10003d58, %v1_10003d58
  %v3_10003d5c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d5c = add i32 %v3_10003d5c, 20
  %v5_10003d5c = inttoptr i32 %v4_10003d5c to i16*
  store i16 %v1_10003d54, i16* %v5_10003d5c, align 2
  br i1 %v4_10003d58, label %dec_label_pc_10003d64, label %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge

dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge: ; preds = %dec_label_pc_10003d54
  %v1_10003c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c78

dec_label_pc_10003d64:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003c70
  %v0_10003d64 = call i32 @function_10005d68()
  %v1_10003d64 = trunc i32 %v0_10003d64 to i16
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v0_10003d68 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003d68 = load i32, i32* @r29, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  %v3_10003d6c = load i32, i32* @r31, align 4
  %v4_10003d6c = add i32 %v3_10003d6c, 2
  %v5_10003d6c = inttoptr i32 %v4_10003d6c to i16*
  store i16 %v1_10003d64, i16* %v5_10003d6c, align 2
  br i1 %v4_10003d68, label %dec_label_pc_10003d74, label %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge

dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge: ; preds = %dec_label_pc_10003d64
  %v1_10003c80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c80

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d64, %dec_label_pc_10003c78
  %v0_10003d74 = call i32 @function_10005d68()
  store i32 %v0_10003d74, i32* %r3.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d78 = load i32, i32* @r29, align 4
  %v4_10003d78 = icmp eq i32 %v0_10003d78, %v1_10003d78
  %v1_10003d7c = load i32, i32* @r31, align 4
  %v2_10003d7c = add i32 %v1_10003d7c, 4
  %v3_10003d7c = inttoptr i32 %v2_10003d7c to i32*
  store i32 %v0_10003d74, i32* %v3_10003d7c, align 4
  br i1 %v4_10003d78, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003d84 = call i32 @function_10005d68()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, 8
  %v3_10003d88 = inttoptr i32 %v2_10003d88 to i32*
  store i32 %v0_10003d84, i32* %v3_10003d88, align 4
  %v0_10003d8c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d8c, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84
  %v0_10003d90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d90 = add i32 %v0_10003d90, 40
  store i32 %v1_10003d90, i32* @r3, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003d94, i32* @r4, align 4
  %v0_10003d98 = call i32 @function_10005f3c()
  store i32 %v0_10003d98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c8c

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003ab8
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003da4 = add i32 %v0_10003da4, 40
  store i32 %v1_10003da4, i32* %r24.global-to-local, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v1_10003dac = add i32 %v0_10003da4, 20
  store i32 %v1_10003dac, i32* @r30, align 4
  %v3_10003db0 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003db0, i1* %cr2_eq.global-to-local, align 1
  %v3_10003db4 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003db4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003a94
  %v0_10003dc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  store i32 268451272, i32* @lr, align 4
  %v0_10003dc4 = call i32 @function_10008e20()
  store i32 %v0_10003dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc8

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003dc0
  store i32 %v0_1000385c, i32* %r0.global-to-local, align 4
  %v1_10003ddc = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000384c)
  store i32 %v0_1000389c, i32* %r28.global-to-local, align 4
  store i32 %v0_100038a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100038ac, i32* %r30.global-to-local, align 4
  %v0_10003e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003d64, { 1, 0 }
  uselistorder i32 %v0_10003d54, { 1, 0 }
  uselistorder i32 %v0_10003d44, { 1, 0 }
  uselistorder i32 %v1_10003d3c, { 1, 0 }
  uselistorder i1 %v1_10003cfc, { 1, 0 }
  uselistorder i1 %v0_10003cfc, { 1, 0 }
  uselistorder i32 %v1_10003cec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003b28, { 1, 0 }
  uselistorder i32 %v1_10003b20, { 1, 0 }
  uselistorder i32 %v1_10003b04, { 1, 0 }
  uselistorder i32 %v1_10003b00, { 1, 0 }
  uselistorder i32 %v1_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003ae8, { 1, 0 }
  uselistorder i32 %v1_10003ae4, { 2, 1, 0 }
  uselistorder i32 %v1_10003adc, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003a70, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003a5c, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038dc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005f3c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10003dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b74, { 1, 0 }
}

define i32 @function_10003e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003e28:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003e2c = load i32, i32* @lr, align 4
  store i32 %v0_10003e2c, i32* %r0.global-to-local, align 4
  %v0_10003e30 = call i32 @__asm_mfcr()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003e30, i32* %r24.global-to-local, align 4
  %v0_10003e80 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e88 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003e94 = load i32, i32* @r31, align 4
  store i32 268451484, i32* @lr, align 4
  %v2_10003e98 = call i32 @function_10009e98(i32 4, i32 4)
  store i32 %v2_10003e98, i32* %r25.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* @r28, align 4
  %v0_10003eac = load i32, i32* @r29, align 4
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb0 = call i32 @function_100006a8(i32 %v0_10003eac, i32* %v4_10003eb0, i32 2, i32 0)
  %v5_10003ec0 = trunc i32 %v5_10003eb0 to i8
  %v0_10003ec8 = load i32, i32* @r28, align 4
  %v0_10003ecc = load i32, i32* @r29, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003ec8 to i32*
  %v5_10003ed0 = call i32 @function_100006a8(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 3, i32 65535)
  %v0_10003ed4 = load i32, i32* @r28, align 4
  store i32 %v5_10003ed0, i32* %r21.global-to-local, align 4
  %v0_10003ee4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ee4, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = inttoptr i32 %v0_10003ed4 to i32*
  %v5_10003ee8 = call i32 @function_100006a8(i32 %v0_10003ee4, i32* %v4_10003ee8, i32 4, i32 64)
  %v0_10003eec = load i32, i32* @r28, align 4
  %v5_10003ef8 = trunc i32 %v5_10003ee8 to i8
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v4_10003f04 = inttoptr i32 %v0_10003eec to i32*
  %v5_10003f04 = call i32 @function_100006a8(i32 %v0_10003f00, i32* %v4_10003f04, i32 5, i32 1)
  %v0_10003f14 = load i32, i32* @r28, align 4
  %v1_10003f18 = urem i32 %v5_10003f04, 256
  store i32 %v1_10003f18, i32* @r31, align 4
  %v0_10003f1c = load i32, i32* @r29, align 4
  store i32 %v0_10003f1c, i32* %r3.global-to-local, align 4
  store i32 268451620, i32* @lr, align 4
  %v4_10003f20 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f20 = call i32 @function_100006a8(i32 %v0_10003f1c, i32* %v4_10003f20, i32 6, i32 65535)
  %v0_10003f28 = load i32, i32* @r28, align 4
  store i32 %v5_10003f20, i32* %r22.global-to-local, align 4
  %v0_10003f38 = load i32, i32* @r29, align 4
  store i32 %v0_10003f38, i32* %r3.global-to-local, align 4
  store i32 268451648, i32* @lr, align 4
  %v4_10003f3c = inttoptr i32 %v0_10003f28 to i32*
  %v5_10003f3c = call i32 @function_100006a8(i32 %v0_10003f38, i32* %v4_10003f3c, i32 7, i32 65535)
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %v5_10003f3c, i32* %r23.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r29, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_100006a8(i32 %v0_10003f54, i32* %v4_10003f58, i32 17, i32 65535)
  %v0_10003f5c = load i32, i32* @r28, align 4
  store i32 %v5_10003f58, i32* %r19.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r29, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_100006a8(i32 %v0_10003f6c, i32* %v4_10003f70, i32 18, i32 0)
  %v0_10003f74 = load i32, i32* @r28, align 4
  store i32 %v5_10003f70, i32* %r20.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r29, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_100006a8(i32 %v0_10003f84, i32* %v4_10003f88, i32 11, i32 0)
  %v0_10003f8c = load i32, i32* @r28, align 4
  store i32 %v5_10003f88, i32* %r14.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_100006a8(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 12, i32 0)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_100006a8(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 13, i32 0)
  %v0_10003fbc = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r29, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_100006a8(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 14, i32 0)
  %v0_10003fd4 = load i32, i32* @r28, align 4
  %v0_10003fe4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe4, i32* %r3.global-to-local, align 4
  store i32 268451820, i32* @lr, align 4
  %v4_10003fe8 = inttoptr i32 %v0_10003fd4 to i32*
  %v5_10003fe8 = call i32 @function_100006a8(i32 %v0_10003fe4, i32* %v4_10003fe8, i32 15, i32 1)
  %v0_10003fec = load i32, i32* @r28, align 4
  store i32 %v5_10003fe8, i32* %r16.global-to-local, align 4
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v0_10003ffc, i32* %r3.global-to-local, align 4
  store i32 268451844, i32* @lr, align 4
  %v4_10004000 = inttoptr i32 %v0_10003fec to i32*
  %v5_10004000 = call i32 @function_100006a8(i32 %v0_10003ffc, i32* %v4_10004000, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004008 = load i32, i32* @global_var_1001c188.16, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v5_10004000, i32* %r30.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v5_1000401c = inttoptr i32 %v0_1000400c to i32*
  %v6_1000401c = call i32 @function_10000628(i32 %v0_10004018, i32* %v5_1000401c, i32 25, i32 %v3_10004008, i32 268566528)
  store i32 %v6_1000401c, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451892, i32* @lr, align 4
  %v3_10004030 = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  store i32 %v3_10004030, i32* %r3.global-to-local, align 4
  %v3_10004034 = icmp eq i32 %v3_10004030, -1
  store i32 %v3_10004030, i32* %r26.global-to-local, align 4
  br i1 %v3_10004034, label %dec_label_pc_1000436c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003e28
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000404c = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = call i32 @function_10009b00(i32 0, i32 3, i32 %v2_1000404c, i32 4)
  store i32 %v4_10004058, i32* %r3.global-to-local, align 4
  %v3_1000405c = icmp eq i32 %v4_10004058, -1
  br i1 %v3_1000405c, label %dec_label_pc_10004364, label %dec_label_pc_10004064

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004040
  %v0_10004064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004064 = icmp slt i32 %v0_10004064, 0
  %v3_10004064 = icmp eq i32 %v0_10004064, 0
  store i1 %v1_10004064, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004064, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10004070 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004070 = urem i32 %v0_10004070, 65536
  store i32 %v1_10004070, i32* %r21.global-to-local, align 4
  %v0_10004074 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 65536
  store i32 %v1_10004074, i32* %r22.global-to-local, align 4
  %v0_10004078 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004078 = urem i32 %v0_10004078, 65536
  store i32 %v1_10004078, i32* %r23.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 256
  store i32 %v1_1000407c, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004064, 1
  br i1 %tmp40, label %dec_label_pc_100041e0, label %dec_label_pc_10004084

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004064
  store i32 %v5_10003fd0, i32* %r0.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r31, align 4
  %v3_10004088 = icmp eq i32 %v0_10004088, 0
  store i1 %v3_10004088, i1* %cr3_eq.global-to-local, align 1
  %v0_1000408c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r29.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 2
  store i32 %v1_10004090, i32* %r17.global-to-local, align 4
  %v0_10004094 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004094 = urem i32 %v0_10004094, 2
  store i32 %v1_10004094, i32* %r18.global-to-local, align 4
  %v1_10004098 = urem i32 %v5_10003fd0, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  %v0_1000409c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000409c = urem i32 %v0_1000409c, 2
  store i32 %v1_1000409c, i32* %r30.global-to-local, align 4
  %v1_100040a0 = urem i32 %v0_1000407c, 2
  store i32 %v1_100040a0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100040f0 = sext i8 %v5_10003ec0 to i32
  %v4_100040f8 = sext i8 %v5_10003ef8 to i32
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_1000410c, %dec_label_pc_10004084
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @function_10009e98(i32 128, i32 1)
  store i32 %v2_100040b0, i32* %r3.global-to-local, align 4
  %v3_100040b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b4, i32* %r9.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r31, align 4
  %v1_100040b8 = mul i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v1_100040bc = load i32, i32* %r25.global-to-local, align 4
  %v3_100040bc = add i32 %v1_100040bc, %v1_100040b8
  %v4_100040bc = inttoptr i32 %v3_100040bc to i32*
  store i32 %v2_100040b0, i32* %v4_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r9.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v3_100040c4 = inttoptr i32 %v2_100040c4 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100040cc = inttoptr i32 %v4_100040c4 to i32*
  %v2_100040cc = load i32, i32* %v1_100040cc, align 4
  store i32 %v2_100040cc, i32* %r0.global-to-local, align 4
  %v1_100040d0 = add i32 %v4_100040c4, 20
  store i32 %v1_100040d0, i32* %r11.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100040d4 = trunc i32 %v0_100040d4 to i16
  %v3_100040d4 = add i32 %v4_100040c4, 4
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i16*
  store i16 %v1_100040d4, i16* %v4_100040d4, align 2
  %v1_100040d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  store i32 %v1_100040e0, i32* %v2_100040e8, align 4
  %v0_100040ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v2_100040ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100040ec = add i32 %v2_100040ec, 2
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  store i32 %v4_100040f0, i32* %r0.global-to-local, align 4
  %v2_100040f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100040f4 = add i32 %v2_100040f4, 1
  %v4_100040f4 = inttoptr i32 %v3_100040f4 to i8*
  store i8 %v5_10003ec0, i8* %v4_100040f4, align 1
  store i32 %v4_100040f8, i32* %r9.global-to-local, align 4
  %v2_100040fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100040fc = add i32 %v2_100040fc, 8
  %v4_100040fc = inttoptr i32 %v3_100040fc to i8*
  store i8 %v5_10003ef8, i8* %v4_100040fc, align 1
  %v0_10004100 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004100, label %dec_label_pc_1000410c, label %dec_label_pc_10004104

dec_label_pc_10004104:                            ; preds = %dec_label_pc_100040a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004108 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004108 = add i32 %v2_10004108, 6
  %v4_10004108 = inttoptr i32 %v3_10004108 to i16*
  store i16 16384, i16* %v4_10004108, align 2
  br label %dec_label_pc_1000410c

dec_label_pc_1000410c:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004104
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004110 = add i32 %v1_10004110, 12
  %v3_10004110 = inttoptr i32 %v2_10004110 to i32*
  store i32 %v0_10004110, i32* %v3_10004110, align 4
  %v0_10004114 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i8
  %v2_10004114 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 9
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v1_10004114, i8* %v4_10004114, align 1
  %v0_10004118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004118 = trunc i32 %v0_10004118 to i16
  %v2_10004118 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004118 = add i32 %v2_10004118, 20
  %v4_10004118 = inttoptr i32 %v3_10004118 to i16*
  store i16 %v1_10004118, i16* %v4_10004118, align 2
  %v3_1000411c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000411c, i32* %r9.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004120 = trunc i32 %v0_10004120 to i16
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 2
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 %v1_10004120, i16* %v4_10004120, align 2
  %v0_10004124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004124 = mul i32 %v0_10004124, 24
  %v1_10004128 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004128 = add i32 %v1_10004128, %v1_10004124
  store i32 %v2_10004128, i32* %r9.global-to-local, align 4
  %v1_1000412c = add i32 %v2_10004128, 16
  %v2_1000412c = inttoptr i32 %v1_1000412c to i32*
  %v3_1000412c = load i32, i32* %v2_1000412c, align 4
  store i32 %v3_1000412c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004134 = add i32 %v1_10004134, 16
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v3_1000412c, i32* %v3_10004134, align 4
  %v0_10004138 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 4
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004138, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000413c = add i32 %v0_1000413c, 12
  %v2_1000413c = inttoptr i32 %v1_1000413c to i32*
  %v3_1000413c = load i32, i32* %v2_1000413c, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10004140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_100040a0, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_10004090, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v1_10004150 = call i32 @__asm_rlwimi(i32 %v1_10004094, i32 19, i32 12, i32 12)
  store i32 %v1_10004150, i32* %r0.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 18, i32 13, i32 13)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  %v1_10004158 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 17, i32 14, i32 14)
  store i32 %v1_10004158, i32* %r0.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_1000409c, i32 16, i32 15, i32 15)
  %v1_10004160 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004160 = add i32 %v1_10004160, 12
  %v3_10004160 = inttoptr i32 %v2_10004160 to i32*
  store i32 %v1_1000415c, i32* %v3_10004160, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 40
  %v4_10004168 = inttoptr i32 %v3_10004168 to i8*
  store i8 2, i8* %v4_10004168, align 1
  %v0_1000416c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 41
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v0_10004170 = call i32 @function_10005d68()
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 46
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 8, i8* %v4_10004178, align 1
  %v1_1000417c = urem i32 %v0_10004170, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004188 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004188 = add i32 %v2_10004188, 44
  %v4_10004188 = inttoptr i32 %v3_10004188 to i8*
  store i8 4, i8* %v4_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = add i32 %v0_1000418c, 1400
  store i32 %v1_1000418c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i8
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 45
  %v4_10004194 = inttoptr i32 %v3_10004194 to i8*
  store i8 %v1_10004194, i8* %v4_10004194, align 1
  %v0_10004198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004198 = trunc i32 %v0_10004198 to i8
  %v2_10004198 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004198 = add i32 %v2_10004198, 47
  %v4_10004198 = inttoptr i32 %v3_10004198 to i8*
  store i8 %v1_10004198, i8* %v4_10004198, align 1
  %v0_1000419c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 42
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = call i32 @function_10005d68()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_100041ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100041ac = add i32 %v1_100041ac, 52
  %v3_100041ac = inttoptr i32 %v2_100041ac to i32*
  store i32 0, i32* %v3_100041ac, align 4
  %v0_100041b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 56
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_100041bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100041bc = add i32 %v1_100041bc, 48
  %v3_100041bc = inttoptr i32 %v2_100041bc to i32*
  store i32 %v0_100041a0, i32* %v3_100041bc, align 4
  %v0_100041c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041c0 = trunc i32 %v0_100041c0 to i8
  %v2_100041c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c0 = add i32 %v2_100041c0, 59
  %v4_100041c0 = inttoptr i32 %v3_100041c0 to i8*
  store i8 %v1_100041c0, i8* %v4_100041c0, align 1
  %v0_100041c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c4 = trunc i32 %v0_100041c4 to i8
  %v2_100041c4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c4 = add i32 %v2_100041c4, 57
  %v4_100041c4 = inttoptr i32 %v3_100041c4 to i8*
  store i8 %v1_100041c4, i8* %v4_100041c4, align 1
  %v0_100041c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c8 = trunc i32 %v0_100041c8 to i8
  %v2_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c8 = add i32 %v2_100041c8, 58
  %v4_100041c8 = inttoptr i32 %v3_100041c8 to i8*
  store i8 %v1_100041c8, i8* %v4_100041c8, align 1
  %v3_100041cc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = add i32 %v3_100041cc, 1
  store i32 %v1_100041d0, i32* %r31.global-to-local, align 4
  %v1_100041d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041d4 = icmp slt i32 %v1_100041d0, %v1_100041d4
  store i32 %v1_100041d0, i32* %stack_var_-120, align 4
  br i1 %v2_100041d4, label %dec_label_pc_100040a8, label %dec_label_pc_100041e0.loopexit

dec_label_pc_100041e0.loopexit:                   ; preds = %dec_label_pc_1000410c
  %v0_100041e4.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_100041e8.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041e8.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_100041e0.loopexit, %dec_label_pc_10004064
  %v1_100041e8.pre = phi i1 [ %v1_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_10004064, %dec_label_pc_10004064 ]
  %v0_100041e8.pre = phi i1 [ %v0_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v3_10004064, %dec_label_pc_10004064 ]
  %v0_100041e4 = phi i32 [ %v0_100041e4.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_1000407c, %dec_label_pc_10004064 ]
  %v0_100041e0 = load i32, i32* %r15.global-to-local, align 4
  %v3_100041e0 = icmp eq i32 %v0_100041e0, -1
  store i1 %v3_100041e0, i1* %cr2_eq.global-to-local, align 1
  %v3_100041e4 = icmp eq i32 %v0_100041e4, 0
  store i1 %v3_100041e4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100041e8.outer

dec_label_pc_100041e8.outer:                      ; preds = %dec_label_pc_100042c4, %dec_label_pc_100041e0
  %v1_100041e8.ph = phi i1 [ %v1_100041e8.pre, %dec_label_pc_100041e0 ], [ %v1_100042c4, %dec_label_pc_100042c4 ]
  %v0_100041e8.ph = phi i1 [ %v0_100041e8.pre, %dec_label_pc_100041e0 ], [ %v0_100042c4, %dec_label_pc_100042c4 ]
  %v2_100041e8 = or i1 %v1_100041e8.ph, %v0_100041e8.ph
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041e8.outer, %dec_label_pc_100041e8
  br i1 %v2_100041e8, label %dec_label_pc_100041e8, label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_100042c4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_100041ec
  %v0_100041fc = phi i32 [ %v1_100042b4, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100041ec ]
  %v1_100041fc = mul i32 %v0_100041fc, 24
  store i32 %v1_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = mul i32 %v0_100041fc, 4
  store i32 %v1_10004200, i32* %r11.global-to-local, align 4
  %v1_10004204 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004204 = add i32 %v1_10004204, %v1_10004200
  %v3_10004204 = inttoptr i32 %v2_10004204 to i32*
  %v4_10004204 = load i32, i32* %v3_10004204, align 4
  store i32 %v4_10004204, i32* %r28.global-to-local, align 4
  %v1_10004208 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004208 = add i32 %v1_10004208, %v1_100041fc
  %v1_1000420c = add i32 %v2_10004208, 20
  %v2_1000420c = inttoptr i32 %v1_1000420c to i8*
  %v3_1000420c = load i8, i8* %v2_1000420c, align 1
  %v4_1000420c = zext i8 %v3_1000420c to i32
  store i32 %v4_1000420c, i32* %r9.global-to-local, align 4
  %v1_10004210 = add i32 %v4_10004204, 20
  store i32 %v1_10004210, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_1000420c, 32
  br i1 %tmp41, label %dec_label_pc_100042cc, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041fc
  %v0_1000421c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000421c, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004228 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, 65535
  br i1 %v4_10004228, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v1_10004230 = phi i32 [ %v1_10004304, %dec_label_pc_100042f4 ], [ 65535, %dec_label_pc_10004220 ]
  %v0_10004230 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_1000431c, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_1000432c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_1000433c, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge, %dec_label_pc_10004240
  %v1_10004248 = phi i32 [ %v1_10004248.pre, %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge ], [ %v1_10004240, %dec_label_pc_10004240 ]
  %v0_10004248 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004248 = icmp eq i32 %v0_10004248, %v1_10004248
  br i1 %v4_10004248, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_10004250:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_10004250 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004250, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c, %dec_label_pc_10004358
  %v0_10004254 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004254 = trunc i32 %v0_10004254 to i16
  %v2_10004254 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004254 = add i32 %v2_10004254, 10
  %v4_10004254 = inttoptr i32 %v3_10004254 to i16*
  store i16 %v1_10004254, i16* %v4_10004254, align 2
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r3, align 4
  %v2_10004260 = call i32 @function_100043cc(i32 %v0_1000425c, i32 20)
  %v3_10004260 = trunc i32 %v2_10004260 to i16
  %v0_10004264 = load i32, i32* @r31, align 4
  store i32 %v0_10004264, i32* @r4, align 4
  %v4_10004268 = add i32 %v0_1000425c, 10
  %v5_10004268 = inttoptr i32 %v4_10004268 to i16*
  store i16 %v3_10004260, i16* %v5_10004268, align 2
  %v0_10004270 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004270 = trunc i32 %v0_10004270 to i16
  %v2_10004270 = load i32, i32* @r31, align 4
  %v3_10004270 = add i32 %v2_10004270, 16
  %v4_10004270 = inttoptr i32 %v3_10004270 to i16*
  store i16 %v1_10004270, i16* %v4_10004270, align 2
  %v0_10004278 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004278, i32* %r3.global-to-local, align 4
  %v4_1000427c = call i32 @function_10004430(i32 %v0_10004278, i32 %v0_10004264, i32 40, i32 40)
  %v5_1000427c = trunc i32 %v4_1000427c to i16
  store i32 %v4_1000427c, i32* %r3.global-to-local, align 4
  %v3_10004280 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004280, i32* %r7.global-to-local, align 4
  %v0_10004284 = load i32, i32* @r31, align 4
  %v1_10004284 = add i32 %v0_10004284, 2
  %v2_10004284 = inttoptr i32 %v1_10004284 to i16*
  %v3_10004284 = load i16, i16* %v2_10004284, align 2
  %v4_10004284 = zext i16 %v3_10004284 to i32
  store i32 %v4_10004284, i32* %r0.global-to-local, align 4
  %v0_10004288 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000428c = mul i32 %v3_10004280, 24
  store i32 %v1_1000428c, i32* %r7.global-to-local, align 4
  %v4_10004290 = add i32 %v0_10004284, 16
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v5_1000427c, i16* %v5_10004290, align 2
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004298, i32* %r3.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000429c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, %v0_1000429c
  store i32 %v2_1000429c, i32* %r7.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i16
  %v3_100042a4 = add i32 %v2_1000429c, 2
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i16*
  store i16 %v1_100042a4, i16* %v4_100042a4, align 2
  store i32 268452528, i32* @lr, align 4
  %v6_100042ac = call i32 @function_10009ac0(i32 %v0_10004298, i32 %v0_10004288, i32 60, i32 16384, i32 %v2_1000429c, i32 16)
  store i32 %v6_100042ac, i32* %r3.global-to-local, align 4
  %v3_100042b0 = load i32, i32* %stack_var_-120, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r9.global-to-local, align 4
  %v1_100042b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  store i32 %v1_100042b4, i32* %stack_var_-120, align 4
  br i1 %v2_100042b8, label %dec_label_pc_100041fc, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004254
  %v0_100042c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042c4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042c4 = or i1 %v0_100042c4, %v1_100042c4
  br i1 %v2_100042c4, label %dec_label_pc_100041e8.outer, label %dec_label_pc_100041ec

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100041fc
  %v1_100042cc = add i32 %v2_10004208, 16
  %v2_100042cc = inttoptr i32 %v1_100042cc to i32*
  %v3_100042cc = load i32, i32* %v2_100042cc, align 4
  store i32 %v3_100042cc, i32* %r29.global-to-local, align 4
  %v0_100042d0 = call i32 @function_10005d68()
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  %v3_100042d4 = load i32, i32* %stack_var_-120, align 4
  %v1_100042d8 = mul i32 %v3_100042d4, 24
  %v1_100042dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100042dc = add i32 %v1_100042dc, %v1_100042d8
  store i32 %v2_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v2_100042dc, 20
  %v2_100042e0 = inttoptr i32 %v1_100042e0 to i8*
  %v3_100042e0 = load i8, i8* %v2_100042e0, align 1
  %v4_100042e0 = zext i8 %v3_100042e0 to i32
  store i32 %v4_100042e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100042e0, 64
  %v2_100042e4 = zext i8 %tmp to i32
  %v3_100042e4 = lshr i32 %v0_100042d0, %v2_100042e4
  store i32 %v3_100042e4, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042e8 = add i32 %v3_100042e4, %v0_100042e8
  store i32 %v2_100042e8, i32* %r29.global-to-local, align 4
  %v1_100042ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100042ec = add i32 %v1_100042ec, 16
  %v3_100042ec = inttoptr i32 %v2_100042ec to i32*
  store i32 %v2_100042e8, i32* %v3_100042ec, align 4
  %v0_100042f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042f0, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100042f8 = call i32 @function_10005d68()
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, 12
  %v3_10004300 = inttoptr i32 %v2_10004300 to i32*
  store i32 %v0_100042f8, i32* %v3_10004300, align 4
  %v0_10004304 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004304 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004304 = icmp eq i32 %v0_10004304, %v1_10004304
  br i1 %v4_10004304, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v0_1000430c = call i32 @function_10005d68()
  %v1_1000430c = trunc i32 %v0_1000430c to i16
  store i32 %v0_1000430c, i32* %r3.global-to-local, align 4
  %v0_10004310 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004310 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004310 = icmp eq i32 %v0_10004310, %v1_10004310
  %v3_10004314 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004314 = add i32 %v3_10004314, 4
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_1000430c, i16* %v5_10004314, align 2
  br i1 %v4_10004310, label %dec_label_pc_1000431c, label %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge

dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_1000430c
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_10004230
  %v0_1000431c = call i32 @function_10005d68()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004320 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004320 = icmp eq i32 %v0_10004320, %v1_10004320
  %v3_10004324 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004324 = add i32 %v3_10004324, 20
  %v5_10004324 = inttoptr i32 %v4_10004324 to i16*
  store i16 %v1_1000431c, i16* %v5_10004324, align 2
  br i1 %v4_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge

dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_1000431c
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_10004238
  %v0_1000432c = call i32 @function_10005d68()
  %v1_1000432c = trunc i32 %v0_1000432c to i16
  store i32 %v0_1000432c, i32* %r3.global-to-local, align 4
  %v0_10004330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004330 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004330 = icmp eq i32 %v0_10004330, %v1_10004330
  %v3_10004334 = load i32, i32* @r31, align 4
  %v4_10004334 = add i32 %v3_10004334, 2
  %v5_10004334 = inttoptr i32 %v4_10004334 to i16*
  store i16 %v1_1000432c, i16* %v5_10004334, align 2
  br i1 %v4_10004330, label %dec_label_pc_1000433c, label %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge

dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge: ; preds = %dec_label_pc_1000432c
  %v1_10004248.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004240
  %v0_1000433c = call i32 @function_10005d68()
  store i32 %v0_1000433c, i32* %r3.global-to-local, align 4
  %v0_10004340 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004340 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004340 = icmp eq i32 %v0_10004340, %v1_10004340
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, 4
  %v3_10004344 = inttoptr i32 %v2_10004344 to i32*
  store i32 %v0_1000433c, i32* %v3_10004344, align 4
  br i1 %v4_10004340, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_1000434c:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_1000434c = call i32 @function_10005d68()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v1_10004350 = load i32, i32* @r31, align 4
  %v2_10004350 = add i32 %v1_10004350, 8
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v0_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c
  %v0_10004358 = call i32 @function_10005d68()
  %v1_10004358 = trunc i32 %v0_10004358 to i16
  store i32 %v0_10004358, i32* %r3.global-to-local, align 4
  %v3_1000435c = load i32, i32* @r31, align 4
  %v4_1000435c = add i32 %v3_1000435c, 18
  %v5_1000435c = inttoptr i32 %v4_1000435c to i16*
  store i16 %v1_10004358, i16* %v5_1000435c, align 2
  br label %dec_label_pc_10004254

dec_label_pc_10004364:                            ; preds = %dec_label_pc_10004040
  %v0_10004364 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004364, i32* %r3.global-to-local, align 4
  store i32 268452716, i32* @lr, align 4
  %v0_10004368 = call i32 @function_10008e20()
  store i32 %v0_10004368, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10003e28, %dec_label_pc_10004364
  store i32 %v0_10003e40, i32* %r0.global-to-local, align 4
  %v1_10004380 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003e30)
  store i32 %v0_10003e80, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e88, i32* %r29.global-to-local, align 4
  store i32 %v0_10003e94, i32* %r31.global-to-local, align 4
  %v0_100043c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043c8

; uselistorder directives
  uselistorder i32 %v0_10004358, { 1, 0 }
  uselistorder i32 %v0_1000432c, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_1000430c, { 1, 0 }
  uselistorder i32 %v1_10004304, { 1, 0 }
  uselistorder i1 %v1_100042c4, { 1, 0 }
  uselistorder i1 %v0_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000427c, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_100040b8, { 1, 0 }
  uselistorder i32 %v1_100040a0, { 1, 0 }
  uselistorder i32 %v1_1000409c, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_10004094, { 1, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_1000407c, { 1, 0 }
  uselistorder i8 %v5_10003ef8, { 1, 0 }
  uselistorder i8 %v5_10003ec0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 11, 9, 12, 10, 13, 8, 14, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 26, 27, 28, 29, 0, 1, 2, 3, 4 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 2, 0, 3 }
  uselistorder i32 41, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004358, { 1, 0 }
  uselistorder label %dec_label_pc_10004254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041ec, { 1, 0 }
  uselistorder label %dec_label_pc_100041e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000410c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100044f8 = load i32, i32* @r27, align 4
  %v2_100044fc = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100044fc, i32* @r27, align 4
  %v2_10004504 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004508 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004518 = load i32, i32* @r25, align 4
  %v2_1000451c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004520 = load i32, i32* @r30, align 4
  %v2_10004524 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004524, i32* @r30, align 4
  %v0_10004528 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r23, align 4
  %v0_10004538 = load i32, i32* @r28, align 4
  store i32 268453184, i32* @lr, align 4
  %v3_1000453c = call i32 @function_10009624(i32 %v2_100044fc, i32 0, i32 4096)
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10009624(i32 %v2_10004504, i32 0, i32 4096)
  store i32 268453216, i32* @lr, align 4
  %v3_1000455c = call i32 @function_10009624(i32 %v2_10004524, i32 0, i32 513)
  %v0_10004568 = load i32, i32* @r29, align 4
  %v0_1000456c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000456c, i32* %stack_var_-8792, align 4
  %v3_1000457c = trunc i32 %v0_10004568 to i8
  %v4_1000457c = call i32 @function_10008b3c(i8 %v3_1000457c, i32 16, i32 %v2_1000451c)
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_10008660(i8* nonnull %stack_var_-8776)
  %v3_10004588 = icmp eq i32 %v2_10004584, 2
  br i1 %v3_10004588, label %dec_label_pc_10004ac8, label %dec_label_pc_10004590

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004ac8
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000459c.26 to i32), i32* @lr, align 4
  %v1_10004598 = call i32 @function_100080e8(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100045a4.27 to i32), i32* @lr, align 4
  %v1_100045a0 = call i32 @function_100080e8(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100045ac.28 to i32), i32* @lr, align 4
  %v1_100045a8 = call i32 @function_100080e8(i32 15)
  store i32 268453300, i32* @lr, align 4
  %v1_100045b0 = call i32 @function_100080e8(i32 17)
  %v3_100045bc = call i32 @function_10008034(i32 17, i32* null)
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @function_10008f88(i32 %v3_100045bc, i32 0)
  %v3_100045cc = icmp eq i32 %v2_100045c8, -1
  store i32 %v2_100045c8, i32* @r28, align 4
  br i1 %v3_100045cc, label %dec_label_pc_10004a14, label %dec_label_pc_100045d8

dec_label_pc_100045d8:                            ; preds = %dec_label_pc_10004590
  %v2_100045d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100045d8, i32* %r26.global-to-local, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e888 = call i32 @function_100088c0(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045c8)
  %v3_100045ec90 = icmp eq i32 %v4_100045e888, 0
  br i1 %v3_100045ec90, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_100045f4:                            ; preds = %dec_label_pc_100045d8, %dec_label_pc_100045dc.backedge
  %v3_100045f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100045f8 = icmp eq i8 %v3_100045f4, 0
  br i1 %v3_100045f8, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004600

dec_label_pc_100045dc.backedge:                   ; preds = %dec_label_pc_10004614, %dec_label_pc_100045f4, %dec_label_pc_10004684, %dec_label_pc_1000471c, %dec_label_pc_10004768
  %v0_100045e4.pre = load i32, i32* @r28, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e8 = call i32 @function_100088c0(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100045e4.pre)
  %v3_100045ec = icmp eq i32 %v4_100045e8, 0
  br i1 %v3_100045ec, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_10004600:                            ; preds = %dec_label_pc_100045f4
  %v3_10004600 = icmp eq i8 %v3_100045f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004600, label %dec_label_pc_10004634, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004600
  %v1_10004618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004610
  %v0_10004614 = phi i32 [ %v1_10004614, %dec_label_pc_10004628 ], [ 0, %dec_label_pc_10004610 ]
  %v1_10004614 = add i32 %v0_10004614, 1
  %v2_10004618 = add i32 %v1_10004614, %v1_10004618.pre
  %v3_10004618 = inttoptr i32 %v2_10004618 to i8*
  %v4_10004618 = load i8, i8* %v3_10004618, align 1
  %v3_1000461c = icmp eq i8 %v4_10004618, 0
  br i1 %v3_1000461c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_10004614
  %v3_10004620 = icmp eq i8 %v4_10004618, 58
  br i1 %v3_10004620, label %dec_label_pc_1000462c, label %dec_label_pc_10004614

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004628
  %v1_1000462c = add i32 %v0_10004614, 4
  store i32 %v1_1000462c, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004614, 3
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004600, %dec_label_pc_1000462c
  %v1_1000468c = phi i32 [ 2, %dec_label_pc_10004600 ], [ %v1_10004630, %dec_label_pc_1000462c ]
  %v0_10004634 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004634 = add i32 %v0_10004634, %v1_1000468c
  %v1_1000463c = add i32 %v2_10004634, 32
  %v2_1000463c = inttoptr i32 %v1_1000463c to i8*
  %v3_1000463c = load i8, i8* %v2_1000463c, align 1
  %v3_10004640 = icmp eq i8 %v3_1000463c, 0
  br i1 %v3_10004640, label %dec_label_pc_10004684, label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004634
  %v3_10004648 = icmp eq i8 %v3_1000463c, 32
  %v1_1000464c = add i32 %v1_1000468c, 1
  store i32 %v1_1000464c, i32* @r31, align 4
  br i1 %v3_10004648, label %dec_label_pc_10004684, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004648
  %v0_1000465c = load i32, i32* @r30, align 4
  %v2_1000465c = add i32 %v0_1000465c, %v1_1000464c
  br label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004668, %dec_label_pc_10004654
  %v0_1000466c = phi i32 [ %v1_1000466c, %dec_label_pc_10004668 ], [ %v1_1000468c, %dec_label_pc_10004654 ]
  %v0_10004670 = phi i32 [ %v1_10004670, %dec_label_pc_10004668 ], [ %v2_1000465c, %dec_label_pc_10004654 ]
  %v1_10004668 = inttoptr i32 %v0_10004670 to i8*
  %v2_10004668 = load i8, i8* %v1_10004668, align 1
  %v1_1000466c = add i32 %v0_1000466c, 1
  %v1_10004670 = add i32 %v0_10004670, 1
  %tmp60 = or i8 %v2_10004668, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004680, label %dec_label_pc_10004668

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004668
  %v1_10004680 = add i32 %v0_1000466c, 2
  store i32 %v1_10004680, i32* @r31, align 4
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004648, %dec_label_pc_10004634, %dec_label_pc_10004680
  %v1_10004684 = phi i32 [ %v1_1000468c, %dec_label_pc_10004648 ], [ %v1_1000468c, %dec_label_pc_10004634 ], [ %v1_1000466c, %dec_label_pc_10004680 ]
  %v2_10004684 = add i32 %v1_10004684, %v0_10004634
  %v0_1000468c = load i32, i32* @r30, align 4
  %v2_1000468c = add i32 %v0_1000468c, %v1_1000468c
  store i32 %v2_1000468c, i32* @r29, align 4
  %v3_10004690 = add i32 %v2_10004684, 32
  %v4_10004690 = inttoptr i32 %v3_10004690 to i8*
  store i8 0, i8* %v4_10004690, align 1
  %v0_10004694 = load i32, i32* @r29, align 4
  store i32 268453532, i32* @lr, align 4
  %v1_10004698 = inttoptr i32 %v0_10004694 to i8*
  %v2_10004698 = call i32 @function_10008660(i8* %v1_10004698)
  %v0_100046a4 = load i32, i32* @r29, align 4
  %v3_100046a8 = inttoptr i32 %v0_100046a4 to i8*
  %v4_100046a8 = call i32 @function_10008a10(i8* %v3_100046a8, i32 %v2_10004698, i32 %v2_1000451c)
  %v3_100046b0 = icmp eq i32 %v4_100046a8, -1
  br i1 %v3_100046b0, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_100046bc.preheader

dec_label_pc_100046bc.preheader:                  ; preds = %dec_label_pc_10004684
  %v0_100046bc.pre = load i32, i32* @r31, align 4
  %v0_100046c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046bc.outer

dec_label_pc_100046bc.outer:                      ; preds = %dec_label_pc_10004a64, %dec_label_pc_100046bc.preheader
  %v0_100046d828.ph = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  %v0_100046bc.ph = phi i32 [ %v1_1000477076, %dec_label_pc_10004a64 ], [ %v0_100046bc.pre, %dec_label_pc_100046bc.preheader ]
  %v0_1000471c.ph = phi i32 [ 1, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046bc.outer, %dec_label_pc_10004a54
  %v0_100046d828 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a54 ], [ %v0_100046d828.ph, %dec_label_pc_100046bc.outer ]
  %v0_100046bc = phi i32 [ %v1_1000477076, %dec_label_pc_10004a54 ], [ %v0_100046bc.ph, %dec_label_pc_100046bc.outer ]
  %v1_100046bc = add i32 %v0_100046bc, 1
  %v2_100046c4 = add i32 %v1_100046bc, %v0_100046c4.pre
  %v1_100046f068 = inttoptr i32 %v2_100046c4 to i8*
  %v2_100046f069 = load i8, i8* %v1_100046f068, align 1
  store i32 %v1_100046bc, i32* @r31, align 4
  %v3_100046f871 = icmp eq i8 %v2_100046f069, 0
  br i1 %v3_100046f871, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004708
  %v3_100046fc79 = icmp eq i8 %v3_100046fc79.in, 9
  br i1 %v3_100046fc79, label %dec_label_pc_1000470c, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v3_100046cc = icmp eq i32 %v0_100046cc75, 1
  br i1 %v3_100046cc, label %dec_label_pc_10004a4c, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8, %dec_label_pc_10004a4c
  %v0_100046e0 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a4c ], [ %v0_1000470c74, %dec_label_pc_100046d8 ]
  %v2_100046e0 = icmp sgt i32 %v0_100046e0, 6
  br i1 %v2_100046e0, label %dec_label_pc_1000471c, label %dec_label_pc_100046ec

dec_label_pc_100046ec:                            ; preds = %dec_label_pc_1000470c, %dec_label_pc_100046e0
  %v0_100046d827 = phi i32 [ %v0_1000470c74, %dec_label_pc_1000470c ], [ %v0_100046e0, %dec_label_pc_100046e0 ]
  %v0_100046cc25 = phi i32 [ 1, %dec_label_pc_1000470c ], [ 0, %dec_label_pc_100046e0 ]
  %v0_100046f022 = add i32 %v0_1000471478, 1
  %v1_100046ec = add i32 %v1_1000477076, 1
  %v1_100046f0 = inttoptr i32 %v0_100046f022 to i8*
  %v2_100046f0 = load i8, i8* %v1_100046f0, align 1
  store i32 %v1_100046ec, i32* @r31, align 4
  %v3_100046f8 = icmp eq i8 %v2_100046f0, 0
  br i1 %v3_100046f8, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046ec
  %v3_100046fc79.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v3_1000470080.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v0_1000471478 = phi i32 [ %v0_100046f022, %dec_label_pc_100046ec ], [ %v2_100046c4, %dec_label_pc_100046bc ]
  %v1_1000477076 = phi i32 [ %v1_100046ec, %dec_label_pc_100046ec ], [ %v1_100046bc, %dec_label_pc_100046bc ]
  %v0_100046cc75 = phi i32 [ %v0_100046cc25, %dec_label_pc_100046ec ], [ 0, %dec_label_pc_100046bc ]
  %v0_1000470c74 = phi i32 [ %v0_100046d827, %dec_label_pc_100046ec ], [ %v0_100046d828, %dec_label_pc_100046bc ]
  %v3_1000470080 = icmp eq i8 %v3_1000470080.in, 32
  br i1 %v3_1000470080, label %dec_label_pc_1000470c, label %dec_label_pc_100046cc

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_100046cc
  %tmp62 = icmp slt i32 %v0_1000470c74, 7
  br i1 %tmp62, label %dec_label_pc_100046ec, label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_100046ec, %dec_label_pc_100046e0, %dec_label_pc_1000470c, %dec_label_pc_100046bc
  %v1_10004770.lcssa = phi i32 [ %v1_100046bc, %dec_label_pc_100046bc ], [ %v1_1000477076, %dec_label_pc_1000470c ], [ %v1_1000477076, %dec_label_pc_100046e0 ], [ %v1_100046ec, %dec_label_pc_100046ec ]
  %v3_1000471c = icmp eq i32 %v0_1000471c.ph, 0
  br i1 %v3_1000471c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004728

dec_label_pc_10004728:                            ; preds = %dec_label_pc_1000471c
  %v0_10004728 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004728 = add i32 %v0_10004728, %v1_10004770.lcssa
  %v1_1000472c = add i32 %v2_10004728, 32
  %v2_1000472c = inttoptr i32 %v1_1000472c to i8*
  %v3_1000472c = load i8, i8* %v2_1000472c, align 1
  %v3_10004730 = icmp eq i8 %v3_1000472c, 0
  br i1 %v3_10004730, label %dec_label_pc_10004768, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004728
  %v3_10004738 = icmp eq i8 %v3_1000472c, 32
  br i1 %v3_10004738, label %dec_label_pc_10004768, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_10004738
  %v1_10004740 = add i32 %v1_10004770.lcssa, 1
  %v2_10004744 = add i32 %v1_10004740, %v0_100046c4.pre
  br label %dec_label_pc_10004750

dec_label_pc_10004750:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004740
  %v0_10004754 = phi i32 [ %v1_10004754, %dec_label_pc_10004750 ], [ %v1_10004770.lcssa, %dec_label_pc_10004740 ]
  %v0_10004758 = phi i32 [ %v1_10004758, %dec_label_pc_10004750 ], [ %v2_10004744, %dec_label_pc_10004740 ]
  %v1_10004750 = inttoptr i32 %v0_10004758 to i8*
  %v2_10004750 = load i8, i8* %v1_10004750, align 1
  %v1_10004754 = add i32 %v0_10004754, 1
  %v1_10004758 = add i32 %v0_10004758, 1
  %tmp63 = or i8 %v2_10004750, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004768, label %dec_label_pc_10004750

dec_label_pc_10004768:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004738, %dec_label_pc_10004728
  %v1_10004768 = phi i32 [ %v1_10004770.lcssa, %dec_label_pc_10004738 ], [ %v1_10004770.lcssa, %dec_label_pc_10004728 ], [ %v1_10004754, %dec_label_pc_10004750 ]
  %v2_10004768 = add i32 %v1_10004768, %v0_10004728
  %v2_10004770 = add i32 %v1_10004770.lcssa, %v0_100046c4.pre
  store i32 %v2_10004770, i32* @r31, align 4
  %v3_10004774 = add i32 %v2_10004768, 32
  %v4_10004774 = inttoptr i32 %v3_10004774 to i8*
  store i8 0, i8* %v4_10004774, align 1
  %v0_10004778 = load i32, i32* @r31, align 4
  store i32 268453760, i32* @lr, align 4
  %v1_1000477c = inttoptr i32 %v0_10004778 to i8*
  %v2_1000477c = call i32 @function_10008660(i8* %v1_1000477c)
  %v2_10004780 = icmp sgt i32 %v2_1000477c, 15
  br i1 %v2_10004780, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004788

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004768
  %v0_10004788 = load i32, i32* @r31, align 4
  store i32 %v2_100045d8, i32* @r3, align 4
  %v2_10004790 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004790 = call i32 @function_10008688(i8* %v2_10004790, i32 %v0_10004788)
  br label %dec_label_pc_10004794

dec_label_pc_10004794.loopexit:                   ; preds = %dec_label_pc_100045dc.backedge, %dec_label_pc_100045d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004794

dec_label_pc_10004794:                            ; preds = %dec_label_pc_10004794.loopexit, %dec_label_pc_10004788
  %v1_100047a0.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004794.loopexit ], [ %v2_10004790, %dec_label_pc_10004788 ]
  store i32 268453788, i32* @lr, align 4
  %v0_10004798 = call i32 @function_10008e20()
  store i32 268453796, i32* @lr, align 4
  %v2_100047a0 = call i32 @function_10008660(i8* %v1_100047a0.pre-phi)
  %v3_100047a4 = icmp eq i32 %v2_100047a0, 0
  br i1 %v3_100047a4, label %dec_label_pc_10004a6c, label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %dec_label_pc_10004794
  %v3_100047b4 = call i32 @function_10008034(i32 13, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453824, i32* @lr, align 4
  %v1_100047bc = call i32 @function_1000936c(i32 %v3_100047b4)
  store i32 %v1_100047bc, i32* @r23, align 4
  %v3_100047c0 = icmp eq i32 %v1_100047bc, 0
  br i1 %v3_100047c0, label %dec_label_pc_100049f4, label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_100047ac
  store i32 0, i32* @r28, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d07 = inttoptr i32 %v1_100047bc to i32*
  %v2_100047d08 = call i32 @function_1000947c(i32* %v1_100047d07)
  %v3_100047d411 = icmp eq i32 %v2_100047d08, 0
  br i1 %v3_100047d411, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader.lr.ph

dec_label_pc_100047dc.preheader.lr.ph:            ; preds = %dec_label_pc_100047c8
  %v2_10004810 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004980 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100047dc.preheader

dec_label_pc_100047cc.loopexit:                   ; preds = %dec_label_pc_100047e4, %dec_label_pc_100047fc, %dec_label_pc_10004864
  %v0_100047cc = load i32, i32* @r23, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d0 = inttoptr i32 %v0_100047cc to i32*
  %v2_100047d0 = call i32 @function_1000947c(i32* %v1_100047d0)
  %v3_100047d4 = icmp eq i32 %v2_100047d0, 0
  br i1 %v3_100047d4, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader

dec_label_pc_100047dc.preheader:                  ; preds = %dec_label_pc_100047dc.preheader.lr.ph, %dec_label_pc_100047cc.loopexit
  %v0_100047e435 = phi i32 [ %v2_100047d08, %dec_label_pc_100047dc.preheader.lr.ph ], [ %v2_100047d0, %dec_label_pc_100047cc.loopexit ]
  br label %dec_label_pc_100047dc

dec_label_pc_100047dc:                            ; preds = %dec_label_pc_100047dc.preheader, %dec_label_pc_100049d0
  %v0_100047e4 = phi i32 [ %v0_100047e435, %dec_label_pc_100047dc.preheader ], [ %v2_100049dc, %dec_label_pc_100049d0 ]
  %v0_100047dc = load i32, i32* @r28, align 4
  %v3_100047dc = icmp eq i32 %v0_100047dc, 0
  br i1 %v3_100047dc, label %dec_label_pc_100047e4, label %dec_label_pc_100049e8

dec_label_pc_100047e4:                            ; preds = %dec_label_pc_100047dc
  %v1_100047e4 = add i32 %v0_100047e4, 11
  %v2_100047e4 = inttoptr i32 %v1_100047e4 to i8*
  %v3_100047e4 = load i8, i8* %v2_100047e4, align 1
  %v4_100047e4 = zext i8 %v3_100047e4 to i32
  store i32 %v1_100047e4, i32* @r30, align 4
  %v1_100047ec = add nuw nsw i32 %v4_100047e4, 208
  %v1_100047f0 = urem i32 %v1_100047ec, 256
  %v2_100047f4 = icmp ugt i32 %v1_100047f0, 9
  br i1 %v2_100047f4, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100047fc

dec_label_pc_100047fc:                            ; preds = %dec_label_pc_100047e4
  %v3_10004804 = call i32 @function_10008034(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004810 = call i32 @function_10008688(i8* %v2_10004810, i32 %v3_10004804)
  store i32 268453916, i32* @lr, align 4
  %v2_10004818 = call i32 @function_10008660(i8* %v2_10004810)
  %v0_1000481c = load i32, i32* @r30, align 4
  %v0_10004820 = load i32, i32* @r27, align 4
  %v2_10004820 = add i32 %v0_10004820, %v2_10004818
  store i32 %v2_10004820, i32* @r3, align 4
  %v2_10004824 = inttoptr i32 %v2_10004820 to i8*
  %v3_10004824 = call i32 @function_10008688(i8* %v2_10004824, i32 %v0_1000481c)
  store i32 268453936, i32* @lr, align 4
  %v2_1000482c = call i32 @function_10008660(i8* %v2_10004810)
  %v3_1000483c = call i32 @function_10008034(i32 14, i32* null)
  %v0_10004844 = load i32, i32* @r27, align 4
  %v2_10004844 = add i32 %v2_1000482c, %v0_10004844
  store i32 %v2_10004844, i32* @r3, align 4
  %v2_10004848 = inttoptr i32 %v2_10004844 to i8*
  %v3_10004848 = call i32 @function_10008688(i8* %v2_10004848, i32 %v3_1000483c)
  store i32 4096, i32* @r5, align 4
  store i32 268453980, i32* @lr, align 4
  %v3_10004858 = call i32 @function_100090a0(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_1000485c = icmp eq i32 %v3_10004858, -1
  br i1 %v3_1000485c, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_10004864

dec_label_pc_10004864:                            ; preds = %dec_label_pc_100047fc
  %v3_1000486c = call i32 @function_10008034(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004878 = call i32 @function_10008688(i8* %v2_10004810, i32 %v3_1000486c)
  store i32 268454020, i32* @lr, align 4
  %v2_10004880 = call i32 @function_10008660(i8* %v2_10004810)
  %v0_10004884 = load i32, i32* @r30, align 4
  %v0_10004888 = load i32, i32* @r27, align 4
  %v2_10004888 = add i32 %v0_10004888, %v2_10004880
  store i32 %v2_10004888, i32* @r3, align 4
  %v2_1000488c = inttoptr i32 %v2_10004888 to i8*
  %v3_1000488c = call i32 @function_10008688(i8* %v2_1000488c, i32 %v0_10004884)
  store i32 268454040, i32* @lr, align 4
  %v2_10004894 = call i32 @function_10008660(i8* %v2_10004810)
  %v3_100048a4 = call i32 @function_10008034(i32 15, i32* null)
  %v0_100048ac = load i32, i32* @r27, align 4
  %v2_100048ac = add i32 %v2_10004894, %v0_100048ac
  store i32 %v2_100048ac, i32* @r3, align 4
  %v2_100048b0 = inttoptr i32 %v2_100048ac to i8*
  %v3_100048b0 = call i32 @function_10008688(i8* %v2_100048b0, i32 %v3_100048a4)
  store i32 268454076, i32* @lr, align 4
  %v1_100048b8 = call i32 @function_1000936c(i32 %v2_100044fc)
  store i32 %v1_100048b8, i32* @r25, align 4
  %v3_100048bc = icmp eq i32 %v1_100048b8, 0
  br i1 %v3_100048bc, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100048c4

dec_label_pc_100048c4.loopexit:                   ; preds = %dec_label_pc_100048e4, %dec_label_pc_10004980
  %v0_100048c4.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004864, %dec_label_pc_100048c4.loopexit
  %v0_100048c4 = phi i32 [ %v0_100048c4.pre, %dec_label_pc_100048c4.loopexit ], [ %v1_100048b8, %dec_label_pc_10004864 ]
  store i32 268454092, i32* @lr, align 4
  %v1_100048c8 = inttoptr i32 %v0_100048c4 to i32*
  %v2_100048c8 = call i32 @function_1000947c(i32* %v1_100048c8)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048c8, i32* @r31, align 4
  %v3_100048d0 = icmp eq i32 %v2_100048c8, 0
  %v0_100048d4 = load i32, i32* @r28, align 4
  store i32 %v2_10004504, i32* @r3, align 4
  %v3_100048d4.not = icmp ne i32 %v0_100048d4, 0
  %brmerge = or i1 %v3_100048d0, %v3_100048d4.not
  br i1 %brmerge, label %dec_label_pc_100049d0, label %dec_label_pc_100048e4

dec_label_pc_100048e4:                            ; preds = %dec_label_pc_100048c4
  store i32 268454120, i32* @lr, align 4
  %v0_100048e4 = call i32 @function_10008708()
  %v3_100048f0 = call i32 @function_10008034(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_100048fc = call i32 @function_10008688(i8* %v2_10004810, i32 %v3_100048f0)
  store i32 268454152, i32* @lr, align 4
  %v2_10004904 = call i32 @function_10008660(i8* %v2_10004810)
  %v0_10004908 = load i32, i32* @r30, align 4
  %v0_1000490c = load i32, i32* @r27, align 4
  %v2_1000490c = add i32 %v0_1000490c, %v2_10004904
  store i32 %v2_1000490c, i32* @r3, align 4
  %v2_10004910 = inttoptr i32 %v2_1000490c to i8*
  %v3_10004910 = call i32 @function_10008688(i8* %v2_10004910, i32 %v0_10004908)
  store i32 268454172, i32* @lr, align 4
  %v2_10004918 = call i32 @function_10008660(i8* %v2_10004810)
  %v3_10004928 = call i32 @function_10008034(i32 15, i32* null)
  %v0_10004930 = load i32, i32* @r27, align 4
  %v2_10004930 = add i32 %v2_10004918, %v0_10004930
  store i32 %v2_10004930, i32* @r3, align 4
  %v2_10004934 = inttoptr i32 %v2_10004930 to i8*
  %v3_10004934 = call i32 @function_10008688(i8* %v2_10004934, i32 %v3_10004928)
  store i32 268454208, i32* @lr, align 4
  %v2_1000493c = call i32 @function_10008660(i8* %v2_10004810)
  %v0_10004948 = load i32, i32* @r27, align 4
  %v2_10004948 = add i32 %v0_10004948, %v2_1000493c
  store i32 %v2_10004948, i32* @r3, align 4
  %v2_1000494c = inttoptr i32 %v2_10004948 to i8*
  %v3_1000494c = call i32 @function_10008688(i8* %v2_1000494c, i32 ptrtoint (i32* @global_var_1000b81c.30 to i32))
  store i32 268454232, i32* @lr, align 4
  %v2_10004954 = call i32 @function_10008660(i8* %v2_10004810)
  %v0_10004958 = load i32, i32* @r31, align 4
  %v1_10004958 = add i32 %v0_10004958, 11
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v0_1000495c, %v2_10004954
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008688(i8* %v2_10004960, i32 %v1_10004958)
  store i32 268454260, i32* @lr, align 4
  %v3_10004970 = call i32 @function_100090a0(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004974 = icmp eq i32 %v3_10004970, -1
  br i1 %v3_10004974, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %dec_label_pc_100048e4
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10008660(i8* %v1_10004980)
  %v4_10004990 = call i32 @function_10008a10(i8* %v1_10004980, i32 %v2_10004980, i32 %v2_100045d8)
  %v3_10004998 = icmp eq i32 %v4_10004990, -1
  %v0_1000499c = load i32, i32* @r30, align 4
  store i32 %v0_1000499c, i32* @r3, align 4
  br i1 %v3_10004998, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004980
  store i32 268454312, i32* @lr, align 4
  %v2_100049a4 = call i32 @function_10008788(i32 %v0_1000499c, i32 10)
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_10008f40(i32 %v2_100049a4, i32 9)
  %v0_100049b0 = load i32, i32* @r25, align 4
  store i32 268454328, i32* @lr, align 4
  %v1_100049b4 = inttoptr i32 %v0_100049b0 to i32*
  %v2_100049b4 = call i32 @function_1000947c(i32* %v1_100049b4)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100049a4
  %v0_100049d0 = load i32, i32* @r25, align 4
  store i32 268454360, i32* @lr, align 4
  %v1_100049d4 = inttoptr i32 %v0_100049d0 to i32*
  %v2_100049d4 = call i32 @function_100092c8(i32* %v1_100049d4)
  %v0_100049d8 = load i32, i32* @r23, align 4
  store i32 268454368, i32* @lr, align 4
  %v1_100049dc = inttoptr i32 %v0_100049d8 to i32*
  %v2_100049dc = call i32 @function_1000947c(i32* %v1_100049dc)
  %v3_100049e0 = icmp eq i32 %v2_100049dc, 0
  br i1 %v3_100049e0, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc

dec_label_pc_100049e8:                            ; preds = %dec_label_pc_100047cc.loopexit, %dec_label_pc_100049d0, %dec_label_pc_100047dc, %dec_label_pc_100047c8
  %v0_100049e8 = load i32, i32* @r23, align 4
  %v0_100049ec = load i32, i32* @r28, align 4
  %v1_100049ec = urem i32 %v0_100049ec, 256
  store i32 %v1_100049ec, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100049f4.31 to i32), i32* @lr, align 4
  %v1_100049f0 = inttoptr i32 %v0_100049e8 to i32*
  %v2_100049f0 = call i32 @function_100092c8(i32* %v1_100049f0)
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100047ac, %dec_label_pc_100049e8
  store i32 ptrtoint ([3 x i8]* @global_var_100049fc.32 to i32), i32* @lr, align 4
  %v1_100049f8 = call i32 @function_1000a634(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a04.33 to i32), i32* @lr, align 4
  %v1_10004a00 = call i32 @function_1000805c(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a0c.34 to i32), i32* @lr, align 4
  %v1_10004a08 = call i32 @function_1000805c(i32 14)
  store i32 268454420, i32* @lr, align 4
  %v1_10004a10 = call i32 @function_1000805c(i32 15)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100049f4
  %v0_10004a18 = load i32, i32* @r31, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a18

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_100046d8
  %v3_100046d8 = icmp eq i32 %v0_1000470c74, 0
  %v1_10004a4c = add i32 %v0_1000470c74, 1
  br i1 %v3_100046d8, label %dec_label_pc_10004a54, label %dec_label_pc_100046e0

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a4c
  %v0_10004a54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a54 = add i32 %v0_10004a54, %v1_1000477076
  %v1_10004a58 = add i32 %v2_10004a54, 33
  %v2_10004a58 = inttoptr i32 %v1_10004a58 to i8*
  %v3_10004a58 = load i8, i8* %v2_10004a58, align 1
  %v3_10004a5c = icmp eq i8 %v3_10004a58, 65
  br i1 %v3_10004a5c, label %dec_label_pc_10004a64, label %dec_label_pc_100046bc

dec_label_pc_10004a64:                            ; preds = %dec_label_pc_10004a54
  br label %dec_label_pc_100046bc.outer

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004794
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a78.35 to i32), i32* @lr, align 4
  %v1_10004a74 = call i32 @function_1000805c(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a80.36 to i32), i32* @lr, align 4
  %v1_10004a7c = call i32 @function_1000805c(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a88.37 to i32), i32* @lr, align 4
  %v1_10004a84 = call i32 @function_1000805c(i32 15)
  store i32 268454544, i32* @lr, align 4
  %v1_10004a8c = call i32 @function_1000805c(i32 17)
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a94

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_100044e8
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i32 %v2_100049dc, { 1, 0 }
  uselistorder i32 %v1_10004770.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000470c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000477076, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100046f022, { 1, 0 }
  uselistorder i32 %v1_1000468c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100045d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000451c, { 1, 0 }
  uselistorder i32 %v2_100044fc, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008788, { 1, 0 }
  uselistorder i32 268453844, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_100088c0, { 1, 0 }
  uselistorder i32 268453356, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049e8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049d0, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000471c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046e0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_100045dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100045f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004590, { 1, 0 }
}

define i32 @function_10004aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004aec:
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8500 = alloca i32, align 4
  %stack_var_-8504 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8464 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %stack_var_-8480 = alloca i32, align 4
  %stack_var_-8496 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-8384 = alloca i32, align 4
  %stack_var_-8320 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8256 = alloca i32, align 4
  %v0_10004af8 = load i32, i32* @r30, align 4
  %v0_10004b08 = load i32, i32* @r22, align 4
  %v0_10004b0c = load i32, i32* @r23, align 4
  %v0_10004b10 = load i32, i32* @r24, align 4
  %v0_10004b14 = load i32, i32* @r25, align 4
  %v0_10004b18 = load i32, i32* @r26, align 4
  %v0_10004b1c = load i32, i32* @r27, align 4
  %v0_10004b20 = load i32, i32* @r28, align 4
  %v0_10004b24 = load i32, i32* @r29, align 4
  %v0_10004b28 = load i32, i32* @r31, align 4
  store i32 268454704, i32* @lr, align 4
  %v0_10004b2c = call i32 @function_100091f0()
  store i32 %v0_10004b2c, i32* @r30, align 4
  store i32 268454712, i32* @lr, align 4
  %v0_10004b34 = call i32 @function_10008e68()
  store i32 %v0_10004b34, i32* @global_var_1001c194.38, align 4
  %tmp64 = icmp slt i32 %v0_10004b34, 1
  br i1 %tmp64, label %dec_label_pc_10004b88, label %dec_label_pc_10004b48

dec_label_pc_10004b48:                            ; preds = %dec_label_pc_10004ca0, %dec_label_pc_10004b90, %dec_label_pc_10004b88, %dec_label_pc_10004aec
  %v0_10004b84 = phi i32 [ -1, %dec_label_pc_10004b90 ], [ -1, %dec_label_pc_10004b88 ], [ %v0_10004b34, %dec_label_pc_10004aec ], [ 0, %dec_label_pc_10004ca0 ]
  store i32 %v0_10004b08, i32* @r22, align 4
  store i32 %v0_10004b0c, i32* @r23, align 4
  store i32 %v0_10004b10, i32* @r24, align 4
  store i32 %v0_10004b14, i32* @r25, align 4
  store i32 %v0_10004b18, i32* @r26, align 4
  store i32 %v0_10004b1c, i32* @r27, align 4
  store i32 %v0_10004b20, i32* @r28, align 4
  store i32 %v0_10004b24, i32* @r29, align 4
  store i32 %v0_10004af8, i32* @r30, align 4
  store i32 %v0_10004b28, i32* @r31, align 4
  ret i32 %v0_10004b84

dec_label_pc_10004b88:                            ; preds = %dec_label_pc_10004aec
  %v3_10004b88 = icmp eq i32 %v0_10004b34, -1
  br i1 %v3_10004b88, label %dec_label_pc_10004b48, label %dec_label_pc_10004b90

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004b88
  store i32 268454812, i32* @lr, align 4
  %v1_10004b98 = call i32 @function_1000a634(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ba4.39 to i32), i32* @lr, align 4
  %v0_10004ba0 = call i32 @function_10009d40()
  store i32 %v0_10004ba0, i32* %r11.global-to-local, align 4
  %v3_10004bb0 = inttoptr i32 %v0_10004ba0 to i8*
  store i8 0, i8* %v3_10004bb0, align 1
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10004bbc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004bbc, i32* @global_var_1001c190.40, align 4
  store i32 0, i32* @global_var_1001c18c.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004bc8.42 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @function_100080e8(i32 13)
  %v2_10004bcc = ptrtoint i32* %stack_var_-8256 to i32
  store i32 %v2_10004bcc, i32* @r25, align 4
  store i32 268454868, i32* @lr, align 4
  %v1_10004bd0 = call i32 @function_100080e8(i32 14)
  %v3_10004bdc = call i32 @function_10008034(i32 13, i32* null)
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v2_10004be8 = bitcast i32* %stack_var_-8256 to i8*
  %v3_10004be8 = call i32 @function_10008688(i8* %v2_10004be8, i32 %v3_10004bdc)
  %v0_10004bec = load i32, i32* @r25, align 4
  %v2_10004bec = add i32 %v0_10004bec, %v3_10004be8
  store i32 %v2_10004bec, i32* %r29.global-to-local, align 4
  store i32 268454900, i32* @lr, align 4
  %v0_10004bf0 = call i32 @function_10008eb0()
  %v2_10004bf4 = ptrtoint i32* %stack_var_-8400 to i32
  %v3_10004bfc = trunc i32 %v0_10004bf0 to i8
  %v4_10004bfc = call i32 @function_10008b3c(i8 %v3_10004bfc, i32 10, i32 %v2_10004bf4)
  store i32 %v2_10004bec, i32* @r3, align 4
  %v2_10004c08 = inttoptr i32 %v2_10004bec to i8*
  %v3_10004c08 = call i32 @function_10008688(i8* %v2_10004c08, i32 %v4_10004bfc)
  %v0_10004c10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c10 = add i32 %v0_10004c10, %v3_10004c08
  store i32 %v2_10004c10, i32* %r29.global-to-local, align 4
  %v3_10004c18 = call i32 @function_10008034(i32 14, i32* null)
  store i32 %v2_10004c10, i32* @r3, align 4
  %v2_10004c24 = inttoptr i32 %v2_10004c10 to i8*
  %v3_10004c24 = call i32 @function_10008688(i8* %v2_10004c24, i32 %v3_10004c18)
  store i32 %v3_10004c24, i32* @r31, align 4
  store i32 268454972, i32* @lr, align 4
  %v2_10004c38 = call i32 @function_10008f88(i32 %v2_10004bcc, i32 0)
  %v3_10004c3c = icmp eq i32 %v2_10004c38, -1
  br i1 %v3_10004c3c, label %dec_label_pc_10004b48, label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004b90
  store i32 ptrtoint ([3 x i8]* @global_var_10004c48.43 to i32), i32* @lr, align 4
  %v0_10004c44 = call i32 @function_10008e20()
  store i32 ptrtoint ([3 x i8]* @global_var_10004c50.44 to i32), i32* @lr, align 4
  %v1_10004c4c = call i32 @function_1000805c(i32 13)
  store i32 268455000, i32* @lr, align 4
  %v1_10004c54 = call i32 @function_1000805c(i32 14)
  %v3_10004c58 = load i32, i32* @global_var_1001c190.40, align 4
  store i32 268455016, i32* @lr, align 4
  %v3_10004c64 = call i32 @function_100090a0(i32 %v2_10004bcc, i32 %v3_10004c58, i32 4095)
  %v3_10004c68 = icmp eq i32 %v3_10004c64, -1
  br i1 %v3_10004c68, label %dec_label_pc_10004c78, label %dec_label_pc_10004c70

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c44
  %v3_10004c70 = load i32, i32* @global_var_1001c190.40, align 4
  %v0_10004c74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004c74 = trunc i32 %v0_10004c74 to i8
  %v4_10004c74 = add i32 %v3_10004c70, %v3_10004c64
  %v5_10004c74 = inttoptr i32 %v4_10004c74 to i8*
  store i8 %v3_10004c74, i8* %v5_10004c74, align 1
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c44, %dec_label_pc_10004c70
  %v0_10004c78 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004c78 = load i32, i32* @r31, align 4
  %v2_10004c78 = add i32 %v1_10004c78, %v0_10004c78
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v0_10004c80 = load i32, i32* @r25, align 4
  %v2_10004c80 = sub i32 %v2_10004c78, %v0_10004c80
  store i32 %v2_10004c80, i32* @r4, align 4
  %v0_10004c84 = load i32, i32* @r30, align 4
  store i32 %v0_10004c84, i32* %r29.global-to-local, align 4
  store i32 268455052, i32* @lr, align 4
  %v0_10004c88 = call i32 @function_10008708()
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004c94 = ptrtoint i32* %stack_var_-8320 to i32
  store i32 %v2_10004c94, i32* @r23, align 4
  %v2_10004c98 = ptrtoint i32* %stack_var_-8384 to i32
  store i32 %v2_10004c98, i32* @r22, align 4
  %v2_10004c9c = ptrtoint i32* %stack_var_-4160 to i32
  %v2_10004f30 = bitcast i32* %stack_var_-8320 to i8*
  %v2_10004f74 = bitcast i32* %stack_var_-8384 to i8*
  %v2_10004e74 = ptrtoint i32* %stack_var_-8448 to i32
  %v2_10004e40 = ptrtoint i32* %stack_var_-8464 to i32
  %v2_10004e0c = ptrtoint i32* %stack_var_-8416 to i32
  %v2_10004dd8 = ptrtoint i32* %stack_var_-8432 to i32
  %v2_10004da4 = ptrtoint i32* %stack_var_-8480 to i32
  %v2_10004d60 = ptrtoint i32* %stack_var_-8496 to i32
  br label %dec_label_pc_10004ca0

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004ef4, %dec_label_pc_10004c78
  store i32 268455080, i32* @lr, align 4
  %v1_10004ca4 = call i32 @function_100080e8(i32 13)
  %v3_10004cb0 = call i32 @function_10008034(i32 13, i32* null)
  store i32 268455096, i32* @lr, align 4
  %v1_10004cb4 = call i32 @function_1000936c(i32 %v3_10004cb0)
  store i32 %v1_10004cb4, i32* @r27, align 4
  %v3_10004cb8 = icmp eq i32 %v1_10004cb4, 0
  br i1 %v3_10004cb8, label %dec_label_pc_10004b48, label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004ca0
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc8.46 to i32), i32* @lr, align 4
  %v1_10004cc4 = call i32 @function_1000805c(i32 13)
  store i32 268455124, i32* @lr, align 4
  %v1_10004cd0 = call i32 @function_100044e8(i32 48101)
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd8 = call i32 @function_100044e8(i32 1991)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ce4.47 to i32), i32* @lr, align 4
  %v1_10004ce0 = call i32 @function_100044e8(i32 1338)
  store i32 268455148, i32* @lr, align 4
  %v1_10004ce8 = call i32 @function_100044e8(i32 80)
  store i32 268455156, i32* @lr, align 4
  %v1_10004cf0 = call i32 @function_100044e8(i32 443)
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf8 = call i32 @function_100044e8(i32 4321)
  store i32 268455172, i32* @lr, align 4
  %v1_10004d00 = call i32 @function_100044e8(i32 6667)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d0c.48 to i32), i32* @lr, align 4
  %v1_10004d08 = call i32 @function_100044e8(i32 6697)
  store i32 ptrtoint (i32* @global_var_10004d14.49 to i32), i32* @lr, align 4
  %v1_10004d10 = call i32 @function_100044e8(i32 22)
  store i32 268455252, i32* @lr, align 4
  %v3_10004d50 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10004d54 = icmp eq i32 %v3_10004d50, -1
  store i32 %v3_10004d50, i32* @r31, align 4
  br i1 %v3_10004d54, label %dec_label_pc_10004d78, label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004cc0
  store i32 268455276, i32* @lr, align 4
  %v3_10004d68 = call i32 @function_10009908(i32 %v2_10004d60, i32 16, i32 16)
  %v0_10004d6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d78.50 to i32), i32* @lr, align 4
  %v2_10004d74 = call i32 @function_100099e0(i32 %v0_10004d6c, i32 1)
  br label %dec_label_pc_10004d78

dec_label_pc_10004d78:                            ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004d60
  store i32 268455296, i32* @lr, align 4
  %v1_10004d7c = call i32 @function_100044e8(i32 23)
  %v3_10004d80 = icmp eq i32 %v1_10004d7c, 0
  br i1 %v3_10004d80, label %dec_label_pc_100051fc, label %dec_label_pc_10004d88

dec_label_pc_10004d88:                            ; preds = %dec_label_pc_1000521c, %dec_label_pc_1000520c, %dec_label_pc_100051fc, %dec_label_pc_10004d78, %dec_label_pc_1000522c
  store i32 268455320, i32* @lr, align 4
  %v3_10004d94 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10004d98 = icmp eq i32 %v3_10004d94, -1
  store i32 %v3_10004d94, i32* @r31, align 4
  br i1 %v3_10004d98, label %dec_label_pc_10004dbc, label %dec_label_pc_10004da4

dec_label_pc_10004da4:                            ; preds = %dec_label_pc_10004d88
  store i32 268455344, i32* @lr, align 4
  %v3_10004dac = call i32 @function_10009908(i32 %v2_10004da4, i32 16, i32 16)
  %v0_10004db0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004dbc.51 to i32), i32* @lr, align 4
  %v2_10004db8 = call i32 @function_100099e0(i32 %v0_10004db0, i32 1)
  br label %dec_label_pc_10004dbc

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004d88, %dec_label_pc_10004da4
  store i32 268455372, i32* @lr, align 4
  %v3_10004dc8 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10004dcc = icmp eq i32 %v3_10004dc8, -1
  store i32 %v3_10004dc8, i32* @r31, align 4
  br i1 %v3_10004dcc, label %dec_label_pc_10004df0, label %dec_label_pc_10004dd8

dec_label_pc_10004dd8:                            ; preds = %dec_label_pc_10004dbc
  store i32 268455396, i32* @lr, align 4
  %v3_10004de0 = call i32 @function_10009908(i32 %v2_10004dd8, i32 16, i32 16)
  %v0_10004de4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004df0.52 to i32), i32* @lr, align 4
  %v2_10004dec = call i32 @function_100099e0(i32 %v0_10004de4, i32 1)
  br label %dec_label_pc_10004df0

dec_label_pc_10004df0:                            ; preds = %dec_label_pc_10004dbc, %dec_label_pc_10004dd8
  store i32 268455424, i32* @lr, align 4
  %v3_10004dfc = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10004e00 = icmp eq i32 %v3_10004dfc, -1
  store i32 %v3_10004dfc, i32* @r31, align 4
  br i1 %v3_10004e00, label %dec_label_pc_10004e24, label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004df0
  store i32 268455448, i32* @lr, align 4
  %v3_10004e14 = call i32 @function_10009908(i32 %v2_10004e0c, i32 16, i32 16)
  %v0_10004e18 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e24.53 to i32), i32* @lr, align 4
  %v2_10004e20 = call i32 @function_100099e0(i32 %v0_10004e18, i32 1)
  br label %dec_label_pc_10004e24

dec_label_pc_10004e24:                            ; preds = %dec_label_pc_10004df0, %dec_label_pc_10004e0c
  store i32 268455476, i32* @lr, align 4
  %v3_10004e30 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10004e34 = icmp eq i32 %v3_10004e30, -1
  store i32 %v3_10004e30, i32* @r31, align 4
  br i1 %v3_10004e34, label %dec_label_pc_10004e58, label %dec_label_pc_10004e40

dec_label_pc_10004e40:                            ; preds = %dec_label_pc_10004e24
  store i32 268455500, i32* @lr, align 4
  %v3_10004e48 = call i32 @function_10009908(i32 %v2_10004e40, i32 16, i32 16)
  %v0_10004e4c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e58.54 to i32), i32* @lr, align 4
  %v2_10004e54 = call i32 @function_100099e0(i32 %v0_10004e4c, i32 1)
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e24, %dec_label_pc_10004e40
  store i32 268455528, i32* @lr, align 4
  %v3_10004e64 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10004e68 = icmp eq i32 %v3_10004e64, -1
  store i32 %v3_10004e64, i32* @r31, align 4
  br i1 %v3_10004e68, label %dec_label_pc_10004e8c.preheader, label %dec_label_pc_10004e74

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e58
  store i32 268455552, i32* @lr, align 4
  %v3_10004e7c = call i32 @function_10009908(i32 %v2_10004e74, i32 16, i32 16)
  %v0_10004e80 = load i32, i32* @r31, align 4
  store i32 268455564, i32* @lr, align 4
  %v2_10004e88 = call i32 @function_100099e0(i32 %v0_10004e80, i32 1)
  br label %dec_label_pc_10004e8c.preheader

dec_label_pc_10004e8c.preheader:                  ; preds = %dec_label_pc_10004e74, %dec_label_pc_10004e58
  %v0_10004e8c8 = load i32, i32* @r27, align 4
  store i32 268455572, i32* @lr, align 4
  %v1_10004e909 = inttoptr i32 %v0_10004e8c8 to i32*
  %v2_10004e9010 = call i32 @function_1000947c(i32* %v1_10004e909)
  %v3_10004e9413 = icmp eq i32 %v2_10004e9010, 0
  br i1 %v3_10004e9413, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c.preheader

dec_label_pc_10004e9c.preheader:                  ; preds = %dec_label_pc_10004e8c.preheader, %dec_label_pc_10004e8c.backedge
  %v0_10004e9c15 = phi i32 [ %v2_10004e90, %dec_label_pc_10004e8c.backedge ], [ %v2_10004e9010, %dec_label_pc_10004e8c.preheader ]
  br label %dec_label_pc_10004e9c

dec_label_pc_10004e9c:                            ; preds = %dec_label_pc_10004e9c.preheader, %dec_label_pc_10004ee0
  %v0_10004eb0 = phi i32 [ %v0_10004e9c15, %dec_label_pc_10004e9c.preheader ], [ %v2_10004ee8, %dec_label_pc_10004ee0 ]
  %v1_10004e9c = add i32 %v0_10004eb0, 11
  %v2_10004e9c = inttoptr i32 %v1_10004e9c to i8*
  %v3_10004e9c = load i8, i8* %v2_10004e9c, align 1
  %v4_10004e9c = zext i8 %v3_10004e9c to i32
  %v1_10004ea0 = add nuw nsw i32 %v4_10004e9c, 208
  %v1_10004ea4 = urem i32 %v1_10004ea0, 256
  %v2_10004ea8 = icmp ugt i32 %v1_10004ea4, 9
  br i1 %v2_10004ea8, label %dec_label_pc_10004e8c.backedge, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e9c
  store i32 268455616, i32* @lr, align 4
  %v3_10004ebc = call i32 @function_1000a3e8(i8* %v2_10004e9c, i32 %v1_10004ea4)
  %v0_10004ec0 = load i32, i32* @r28, align 4
  %v2_10004ec0 = icmp slt i32 %v0_10004ec0, %v3_10004ebc
  store i32 %v3_10004ebc, i32* %r30.global-to-local, align 4
  br i1 %v2_10004ec0, label %dec_label_pc_10004f00, label %dec_label_pc_10004ecc

dec_label_pc_10004ecc:                            ; preds = %dec_label_pc_10004eb0
  store i32 268455636, i32* @lr, align 4
  %v0_10004ed0 = call i32 @function_100091f0()
  %v0_10004ed4 = load i32, i32* @r29, align 4
  %v2_10004ed4 = sub i32 %v0_10004ed0, %v0_10004ed4
  %tmp65 = icmp slt i32 %v2_10004ed4, 601
  br i1 %tmp65, label %dec_label_pc_1000505c, label %dec_label_pc_10004ee0

dec_label_pc_10004ee0:                            ; preds = %dec_label_pc_10004ecc
  %v0_10004ee0 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268455660, i32* @lr, align 4
  %v1_10004ee8 = inttoptr i32 %v0_10004ee0 to i32*
  %v2_10004ee8 = call i32 @function_1000947c(i32* %v1_10004ee8)
  %v3_10004eec = icmp eq i32 %v2_10004ee8, 0
  br i1 %v3_10004eec, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004e8c.backedge, %dec_label_pc_10004ee0, %dec_label_pc_10004e8c.preheader
  %v0_10004ef4 = load i32, i32* @r27, align 4
  store i32 268455676, i32* @lr, align 4
  %v1_10004ef8 = inttoptr i32 %v0_10004ef4 to i32*
  %v2_10004ef8 = call i32 @function_100092c8(i32* %v1_10004ef8)
  br label %dec_label_pc_10004ca0

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004eb0
  store i32 268455688, i32* @lr, align 4
  %v0_10004f04 = call i32 @function_100091f0()
  store i32 %v0_10004f04, i32* @r24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f14.55 to i32), i32* @lr, align 4
  %v1_10004f10 = call i32 @function_100080e8(i32 13)
  store i32 268455708, i32* @lr, align 4
  %v1_10004f18 = call i32 @function_100080e8(i32 14)
  %v3_10004f24 = call i32 @function_10008034(i32 13, i32* null)
  store i32 %v2_10004c94, i32* @r3, align 4
  %v3_10004f30 = call i32 @function_10008688(i8* %v2_10004f30, i32 %v3_10004f24)
  %v0_10004f34 = load i32, i32* @r31, align 4
  %v0_10004f38 = load i32, i32* @r23, align 4
  %v2_10004f38 = add i32 %v0_10004f38, %v3_10004f30
  store i32 %v2_10004f38, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f38, i32* @r3, align 4
  %v2_10004f40 = inttoptr i32 %v2_10004f38 to i8*
  %v3_10004f40 = call i32 @function_10008688(i8* %v2_10004f40, i32 %v0_10004f34)
  store i32 %v3_10004f40, i32* %r29.global-to-local, align 4
  %v3_10004f50 = call i32 @function_10008034(i32 14, i32* null)
  %v2_10004f58 = add i32 %v3_10004f40, %v2_10004f38
  store i32 %v2_10004f58, i32* @r3, align 4
  %v2_10004f5c = inttoptr i32 %v2_10004f58 to i8*
  %v3_10004f5c = call i32 @function_10008688(i8* %v2_10004f5c, i32 %v3_10004f50)
  %v3_10004f68 = call i32 @function_10008034(i32 13, i32* null)
  store i32 %v2_10004c98, i32* @r3, align 4
  %v3_10004f74 = call i32 @function_10008688(i8* %v2_10004f74, i32 %v3_10004f68)
  %v0_10004f78 = load i32, i32* @r31, align 4
  %v0_10004f7c = load i32, i32* @r22, align 4
  %v2_10004f7c = add i32 %v0_10004f7c, %v3_10004f74
  store i32 %v2_10004f7c, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f7c, i32* @r3, align 4
  %v2_10004f84 = inttoptr i32 %v2_10004f7c to i8*
  %v3_10004f84 = call i32 @function_10008688(i8* %v2_10004f84, i32 %v0_10004f78)
  store i32 %v3_10004f84, i32* %r29.global-to-local, align 4
  %v3_10004f94 = call i32 @function_10008034(i32 29, i32* null)
  %v2_10004f9c = add i32 %v3_10004f84, %v2_10004f7c
  store i32 %v2_10004f9c, i32* @r3, align 4
  %v2_10004fa0 = inttoptr i32 %v2_10004f9c to i8*
  %v3_10004fa0 = call i32 @function_10008688(i8* %v2_10004fa0, i32 %v3_10004f94)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fac.57 to i32), i32* @lr, align 4
  %v1_10004fa8 = call i32 @function_1000805c(i32 13)
  store i32 268455860, i32* @lr, align 4
  %v1_10004fb0 = call i32 @function_1000805c(i32 14)
  store i32 4095, i32* @r5, align 4
  store i32 268455876, i32* @lr, align 4
  %v3_10004fc0 = call i32 @function_100090a0(i32 %v2_10004c94, i32 %v2_10004bcc, i32 4095)
  %v3_10004fc4 = icmp eq i32 %v3_10004fc0, -1
  store i32 %v3_10004fc0, i32* %r29.global-to-local, align 4
  br i1 %v3_10004fc4, label %dec_label_pc_100050b0, label %dec_label_pc_10004fd0

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_10004f00
  %v0_10004fd0 = load i32, i32* @r1, align 4
  %v2_10004fd0 = add i32 %v0_10004fd0, %v3_10004fc0
  %v3_10004fd8 = add i32 %v2_10004fd0, 256
  %v4_10004fd8 = inttoptr i32 %v3_10004fd8 to i8*
  store i8 0, i8* %v4_10004fd8, align 1
  store i32 268455908, i32* @lr, align 4
  %v1_10004fe0 = call i32 @function_100080e8(i32 30)
  %v3_10004fec = call i32 @function_10008034(i32 30, i32* null)
  %v0_10004ff0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004ff0 = add i32 %v0_10004ff0, -1
  %v4_10004ffc = call i32 @function_10008a10(i8* %v2_10004be8, i32 %v1_10004ff0, i32 %v3_10004fec)
  %v3_10005000 = icmp eq i32 %v4_10004ffc, -1
  br i1 %v3_10005000, label %dec_label_pc_1000501c, label %dec_label_pc_10005008

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004fd0
  store i32 268455952, i32* @lr, align 4
  %v1_1000500c = call i32 @function_10009238(i32 %v2_10004bcc)
  %v0_10005010 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000501c.58 to i32), i32* @lr, align 4
  %v2_10005018 = call i32 @function_10008f40(i32 %v0_10005010, i32 9)
  br label %dec_label_pc_1000501c

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_10004fd0, %dec_label_pc_10005008
  store i32 ptrtoint (i32* @global_var_10005024.59 to i32), i32* @lr, align 4
  %v1_10005020 = call i32 @function_1000805c(i32 30)
  store i32 268455976, i32* @lr, align 4
  %v0_10005024 = call i32 @function_10008eb0()
  %v0_10005028 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005028 = icmp eq i32 %v0_10005028, %v0_10005024
  br i1 %v4_10005028, label %dec_label_pc_10005050, label %dec_label_pc_10005030

dec_label_pc_10005030:                            ; preds = %dec_label_pc_1000501c
  store i32 268455988, i32* @lr, align 4
  %v0_10005030 = call i32 @function_10008ef8()
  %v0_10005034 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005034 = icmp eq i32 %v0_10005034, %v0_10005030
  br i1 %v4_10005034, label %dec_label_pc_10005050, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005030
  %v3_1000503c = load i32, i32* @global_var_1001c190.40, align 4
  %v3_10005044 = call i32 @function_10008abc(i8* %v2_10004be8, i32 %v3_1000503c)
  %v3_10005048 = icmp eq i32 %v3_10005044, 0
  br i1 %v3_10005048, label %dec_label_pc_1000508c, label %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge

dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge: ; preds = %dec_label_pc_1000503c
  %v0_10005050.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge, %dec_label_pc_10005030, %dec_label_pc_1000501c
  %v0_10005050 = phi i32 [ %v0_10005050.pre, %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge ], [ %v0_10005030, %dec_label_pc_10005030 ], [ %v0_10005024, %dec_label_pc_1000501c ]
  store i32 %v0_10005050, i32* @r28, align 4
  %v0_10005054 = load i32, i32* @r24, align 4
  store i32 %v0_10005054, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_10004e8c.backedge:                   ; preds = %dec_label_pc_10004e9c, %dec_label_pc_10005050, %dec_label_pc_10005080, %dec_label_pc_100051c4, %dec_label_pc_1000505c, %dec_label_pc_10005064
  %v0_10004e8c = load i32, i32* @r27, align 4
  store i32 268455572, i32* @lr, align 4
  %v1_10004e90 = inttoptr i32 %v0_10004e8c to i32*
  %v2_10004e90 = call i32 @function_1000947c(i32* %v1_10004e90)
  %v3_10004e94 = icmp eq i32 %v2_10004e90, 0
  br i1 %v3_10004e94, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c.preheader

dec_label_pc_1000505c:                            ; preds = %dec_label_pc_10004ecc
  %v0_1000505c = load i32, i32* %r30.global-to-local, align 4
  %tmp66 = icmp slt i32 %v0_1000505c, 401
  br i1 %tmp66, label %dec_label_pc_10004e8c.backedge, label %dec_label_pc_10005064

dec_label_pc_10005064:                            ; preds = %dec_label_pc_1000505c
  %v0_1000506c = load i32, i32* @r26, align 4
  %v1_10005070 = urem i32 %v0_1000506c, 10
  %v4_10005078 = icmp eq i32 %v1_10005070, 0
  br i1 %v4_10005078, label %dec_label_pc_10005080, label %dec_label_pc_10004e8c.backedge

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005064
  store i32 268456072, i32* @lr, align 4
  %v1_10005084 = call i32 @function_1000a634(i32 1)
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_1000503c
  store i32 268456092, i32* @lr, align 4
  %v2_10005098 = call i32 @function_10008f88(i32 %v2_10004bcc, i32 0)
  %v3_1000509c = icmp eq i32 %v2_10005098, -1
  store i32 %v2_10005098, i32* @r31, align 4
  br i1 %v3_1000509c, label %dec_label_pc_10005254, label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_10005254
  store i32 268456112, i32* @lr, align 4
  %v0_100050ac = call i32 @function_10008e20()
  br label %dec_label_pc_100050b0

dec_label_pc_100050b0:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_100050a8
  store i32 268456128, i32* @lr, align 4
  %v2_100050bc = call i32 @function_10008f88(i32 %v2_10004c94, i32 0)
  %v3_100050c0 = icmp eq i32 %v2_100050bc, -1
  store i32 %v2_100050bc, i32* %r28.global-to-local, align 4
  br i1 %v3_100050c0, label %dec_label_pc_100051c4, label %dec_label_pc_100050cc

dec_label_pc_100050cc:                            ; preds = %dec_label_pc_100050b0
  store i32 ptrtoint ([3 x i8]* @global_var_100050d4.60 to i32), i32* @lr, align 4
  %v1_100050d0 = call i32 @function_100080e8(i32 18)
  store i32 268456156, i32* @lr, align 4
  %v1_100050d8 = call i32 @function_100080e8(i32 19)
  %v3_100050e4 = call i32 @function_10008034(i32 18, i32* nonnull %stack_var_-8504)
  store i32 %v3_100050e4, i32* @r31, align 4
  %v3_100050f4 = call i32 @function_10008034(i32 19, i32* nonnull %stack_var_-8500)
  store i32 %v3_100050f4, i32* %r29.global-to-local, align 4
  %v0_100050fc70 = load i32, i32* %r28.global-to-local, align 4
  store i32 268456204, i32* @lr, align 4
  %v3_1000510871 = call i32 @function_10009058(i32 %v0_100050fc70, i32 %v2_10004c9c, i32 4096)
  %tmp6773 = icmp slt i32 %v3_1000510871, 1
  br i1 %tmp6773, label %dec_label_pc_10005238, label %dec_label_pc_10005114

dec_label_pc_10005114:                            ; preds = %dec_label_pc_100050cc, %dec_label_pc_100050fc.backedge
  %v3_1000510874 = phi i32 [ %v3_10005108, %dec_label_pc_100050fc.backedge ], [ %v3_1000510871, %dec_label_pc_100050cc ]
  %v3_1000510c75.in = phi i32 [ %v3_10005108, %dec_label_pc_100050fc.backedge ], [ %v3_1000510871, %dec_label_pc_100050cc ]
  %v3_1000510c75 = icmp eq i32 %v3_1000510c75.in, 0
  %v3_10005114 = load i32, i32* %stack_var_-8504, align 4
  %v2_10005118 = icmp slt i32 %v3_1000510874, %v3_10005114
  br i1 %v2_10005118, label %dec_label_pc_10005158, label %dec_label_pc_10005120

dec_label_pc_10005120:                            ; preds = %dec_label_pc_10005114
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10005134.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_10005120, %dec_label_pc_10005150
  %v0_10005154 = phi i32 [ %v3_1000510874, %dec_label_pc_10005120 ], [ %v1_10005154, %dec_label_pc_10005150 ]
  %v0_10005150 = phi i32 [ %v2_10004c9c, %dec_label_pc_10005120 ], [ %v1_10005150, %dec_label_pc_10005150 ]
  %v1_10005134 = phi i32 [ 0, %dec_label_pc_10005120 ], [ %v1_1000513419, %dec_label_pc_10005150 ]
  %v2_10005134 = add i32 %v1_10005134, %v0_10005134.pre
  %v3_10005134 = inttoptr i32 %v2_10005134 to i8*
  %v4_10005134 = load i8, i8* %v3_10005134, align 1
  %v1_10005138 = add i32 %v1_10005134, 1
  store i32 %v1_10005138, i32* %r11.global-to-local, align 4
  %v1_1000513c = inttoptr i32 %v0_10005150 to i8*
  %v2_1000513c = load i8, i8* %v1_1000513c, align 1
  %v4_10005144 = icmp eq i8 %v2_1000513c, %v4_10005134
  br i1 %v4_10005144, label %dec_label_pc_1000519c, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005134
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005150

dec_label_pc_10005150:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_1000514c
  %v1_1000513419 = phi i32 [ %v1_10005138, %dec_label_pc_1000519c ], [ 0, %dec_label_pc_1000514c ]
  %v1_10005150 = add i32 %v0_10005150, 1
  %v1_10005154 = add i32 %v0_10005154, -1
  %v2_10005154 = icmp eq i32 %v1_10005154, 0
  br i1 %v2_10005154, label %dec_label_pc_10005158, label %dec_label_pc_10005134

dec_label_pc_10005158:                            ; preds = %dec_label_pc_10005150, %dec_label_pc_10005114
  %v3_10005158 = load i32, i32* %stack_var_-8500, align 4
  %v2_1000515c = icmp slt i32 %v3_1000510874, %v3_10005158
  br i1 %v2_1000515c, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005164

dec_label_pc_10005164:                            ; preds = %dec_label_pc_10005158
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000510c75, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005178.lr.ph

dec_label_pc_100050fc.backedge:                   ; preds = %dec_label_pc_10005174.backedge, %dec_label_pc_10005164, %dec_label_pc_10005158
  %v0_100050fc = load i32, i32* %r28.global-to-local, align 4
  store i32 268456204, i32* @lr, align 4
  %v3_10005108 = call i32 @function_10009058(i32 %v0_100050fc, i32 %v2_10004c9c, i32 4096)
  %tmp67 = icmp slt i32 %v3_10005108, 1
  br i1 %tmp67, label %dec_label_pc_10005238, label %dec_label_pc_10005114

dec_label_pc_10005178.lr.ph:                      ; preds = %dec_label_pc_10005164
  %v0_10005178.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005178

dec_label_pc_10005178:                            ; preds = %dec_label_pc_10005178.lr.ph, %dec_label_pc_10005174.backedge
  %v0_10005174 = phi i32 [ %v3_1000510874, %dec_label_pc_10005178.lr.ph ], [ %v1_10005174, %dec_label_pc_10005174.backedge ]
  %storemerge.in = phi i32 [ %v2_10004c9c, %dec_label_pc_10005178.lr.ph ], [ %storemerge, %dec_label_pc_10005174.backedge ]
  %v1_10005178 = phi i32 [ 0, %dec_label_pc_10005178.lr.ph ], [ %v1_1000517825, %dec_label_pc_10005174.backedge ]
  %v2_10005178 = add i32 %v1_10005178, %v0_10005178.pre
  %v3_10005178 = inttoptr i32 %v2_10005178 to i8*
  %v4_10005178 = load i8, i8* %v3_10005178, align 1
  %v1_1000517c = add i32 %v1_10005178, 1
  store i32 %v1_1000517c, i32* %r11.global-to-local, align 4
  %v1_10005180 = inttoptr i32 %storemerge.in to i8*
  %v2_10005180 = load i8, i8* %v1_10005180, align 1
  %v4_10005188 = icmp eq i8 %v2_10005180, %v4_10005178
  br i1 %v4_10005188, label %dec_label_pc_100051f0, label %dec_label_pc_10005190

dec_label_pc_10005190:                            ; preds = %dec_label_pc_10005178
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005174.backedge

dec_label_pc_10005174.backedge:                   ; preds = %dec_label_pc_100051f0, %dec_label_pc_10005190
  %v1_1000517825 = phi i32 [ 0, %dec_label_pc_10005190 ], [ %v1_1000517c, %dec_label_pc_100051f0 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10005174 = add i32 %v0_10005174, -1
  %v2_10005174 = icmp eq i32 %v1_10005174, 0
  br i1 %v2_10005174, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005178

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005134
  %v4_10005140 = icmp eq i32 %v3_10005114, %v1_10005138
  br i1 %v4_10005140, label %dec_label_pc_100051a0, label %dec_label_pc_10005150

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_100051f0
  store i32 ptrtoint ([3 x i8]* @global_var_100051a8.61 to i32), i32* @lr, align 4
  %v1_100051a4 = call i32 @function_1000805c(i32 18)
  store i32 268456368, i32* @lr, align 4
  %v1_100051ac = call i32 @function_1000805c(i32 19)
  store i32 268456376, i32* @lr, align 4
  %v0_100051b4 = call i32 @function_10008e20()
  %v0_100051b8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456388, i32* @lr, align 4
  %v2_100051c0 = call i32 @function_10008f40(i32 %v0_100051b8, i32 9)
  br label %dec_label_pc_100051c4

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100050b0, %dec_label_pc_10005238, %dec_label_pc_100051a0
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004c94, i32* @r3, align 4
  store i32 268456400, i32* @lr, align 4
  %v0_100051cc = call i32 @function_10008708()
  store i32 %v2_10004c98, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100051d8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100051d8, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051e0.62 to i32), i32* @lr, align 4
  %v0_100051dc = call i32 @function_10008708()
  store i32 268456424, i32* @lr, align 4
  %v1_100051e4 = call i32 @function_1000a634(i32 1)
  %v0_100051e8 = load i32, i32* @r24, align 4
  store i32 %v0_100051e8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_100051f0:                            ; preds = %dec_label_pc_10005178
  %v4_10005184 = icmp eq i32 %v3_10005158, %v1_1000517c
  br i1 %v4_10005184, label %dec_label_pc_100051a0, label %dec_label_pc_10005174.backedge

dec_label_pc_100051fc:                            ; preds = %dec_label_pc_10004d78
  store i32 268456452, i32* @lr, align 4
  %v1_10005200 = call i32 @function_100044e8(i32 53413)
  %v3_10005204 = icmp eq i32 %v1_10005200, 0
  br i1 %v3_10005204, label %dec_label_pc_1000520c, label %dec_label_pc_10004d88

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051fc
  store i32 268456468, i32* @lr, align 4
  %v1_10005210 = call i32 @function_100044e8(i32 80)
  %v3_10005214 = icmp eq i32 %v1_10005210, 0
  br i1 %v3_10005214, label %dec_label_pc_1000521c, label %dec_label_pc_10004d88

dec_label_pc_1000521c:                            ; preds = %dec_label_pc_1000520c
  store i32 268456484, i32* @lr, align 4
  %v1_10005220 = call i32 @function_100044e8(i32 52869)
  %v3_10005224 = icmp eq i32 %v1_10005220, 0
  br i1 %v3_10005224, label %dec_label_pc_1000522c, label %dec_label_pc_10004d88

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_1000521c
  store i32 268456500, i32* @lr, align 4
  %v1_10005230 = call i32 @function_100044e8(i32 37215)
  br label %dec_label_pc_10004d88

dec_label_pc_10005238:                            ; preds = %dec_label_pc_100050fc.backedge, %dec_label_pc_100050cc
  store i32 ptrtoint ([3 x i8]* @global_var_10005240.63 to i32), i32* @lr, align 4
  %v1_1000523c = call i32 @function_1000805c(i32 18)
  store i32 268456520, i32* @lr, align 4
  %v1_10005244 = call i32 @function_1000805c(i32 19)
  store i32 268456528, i32* @lr, align 4
  %v0_1000524c = call i32 @function_10008e20()
  br label %dec_label_pc_100051c4

dec_label_pc_10005254:                            ; preds = %dec_label_pc_1000508c
  %v0_10005254 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456544, i32* @lr, align 4
  %v2_1000525c = call i32 @function_10008f40(i32 %v0_10005254, i32 9)
  br label %dec_label_pc_100050a8

; uselistorder directives
  uselistorder i32 %v1_10005174, { 1, 0 }
  uselistorder i32 %v1_1000517c, { 1, 0, 2 }
  uselistorder i32 %v1_10005178, { 1, 0 }
  uselistorder i32 %v3_10005108, { 2, 1, 0 }
  uselistorder i32 %v1_10005154, { 1, 0 }
  uselistorder i32 %v1_10005134, { 1, 0 }
  uselistorder i32 %v3_1000510874, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004e90, { 1, 0 }
  uselistorder i32 %v2_10004ee8, { 1, 0 }
  uselistorder i32 %v1_10004ea4, { 1, 0 }
  uselistorder i32 %v2_10004c9c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10004c10, { 1, 0, 2 }
  uselistorder i32 %v2_10004bec, { 1, 0, 2 }
  uselistorder i32 %v2_10004bcc, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b34, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8504, { 1, 0 }
  uselistorder i32* %stack_var_-8500, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268456204, { 1, 0 }
  uselistorder i32 (i32*)* @function_1000947c, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455572, { 1, 0 }
  uselistorder i32 (i32)* @function_1000936c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100090a0, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100051c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005178, { 1, 0 }
  uselistorder label %dec_label_pc_10005134, { 1, 0 }
  uselistorder label %dec_label_pc_10005114, { 1, 0 }
  uselistorder label %dec_label_pc_100050b0, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e8c.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_1000501c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
  uselistorder label %dec_label_pc_10004e24, { 1, 0 }
  uselistorder label %dec_label_pc_10004df0, { 1, 0 }
  uselistorder label %dec_label_pc_10004dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004d88, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10004d78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
}

define i32 @function_10005264() local_unnamed_addr {
dec_label_pc_10005264:
  store i32 268457056, i32* @global_var_1001c168.64, align 4
  %v0_10005274 = load i32, i32* @r3, align 4
  ret i32 %v0_10005274
}

define i32 @function_10005278(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005278:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10005298 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_100052a8 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_100052b4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_100052b4, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268456640, i32* @lr, align 4
  %v3_100052bc = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_100052c0 = icmp eq i32 %v3_100052bc, -1
  store i32 %v3_100052bc, i32* @global_var_1001c160.65, align 4
  br i1 %v3_100052c0, label %dec_label_pc_10005370, label %dec_label_pc_100052dc

dec_label_pc_100052dc:                            ; preds = %dec_label_pc_10005278
  %v2_100052c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456672, i32* @lr, align 4
  %v5_100052dc = call i32 @function_10009b00(i32 %v3_100052bc, i32 1, i32 2, i32 %v2_100052c4)
  %v3_100052e0 = load i32, i32* @global_var_1001c160.65, align 4
  store i32 3, i32* @r4, align 4
  store i32 268456696, i32* @lr, align 4
  %v2_100052f4 = call i32 @function_10008d38(i32 %v3_100052e0)
  store i32 4, i32* @r4, align 4
  store i32 268456716, i32* @lr, align 4
  %v2_10005308 = call i32 @function_10008d38(i32 %v3_100052e0)
  %v3_1000530c = load i8, i8* @global_var_1001c020.66, align 1
  %v3_10005314 = icmp eq i8 %v3_1000530c, 0
  br i1 %v3_10005314, label %dec_label_pc_10005394, label %dec_label_pc_10005320

dec_label_pc_10005320:                            ; preds = %dec_label_pc_100052dc
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005334 = call i32 @function_1000953c()
  %v0_10005338 = load i32, i32* @r27, align 4
  %v2_10005338 = inttoptr i32 %v0_10005334 to i32*
  store i32 %v0_10005338, i32* %v2_10005338, align 4
  store i32 %v0_10005334, i32* @r29, align 4
  %v3_10005348 = load i32, i32* @global_var_1001c160.65, align 4
  store i32 268456784, i32* @lr, align 4
  %v3_1000534c = call i32 @function_10009908(i32 %v3_10005348, i32 %v2_100052b4, i32 16)
  %v3_10005354 = icmp eq i32 %v3_1000534c, -1
  br i1 %v3_10005354, label %dec_label_pc_100053dc, label %dec_label_pc_10005360

dec_label_pc_10005360:                            ; preds = %dec_label_pc_10005394, %dec_label_pc_10005320
  %v3_10005368 = load i32, i32* @global_var_1001c160.65, align 4
  store i32 268456816, i32* @lr, align 4
  %v2_1000536c = call i32 @function_100099e0(i32 %v3_10005368, i32 1)
  br label %dec_label_pc_10005370

dec_label_pc_10005370:                            ; preds = %dec_label_pc_10005278, %dec_label_pc_10005360
  %v0_10005390 = phi i32 [ -1, %dec_label_pc_10005278 ], [ %v2_1000536c, %dec_label_pc_10005360 ]
  store i32 %v0_10005298, i32* @r28, align 4
  store i32 %v0_100052a8, i32* @r31, align 4
  ret i32 %v0_10005390

dec_label_pc_10005394:                            ; preds = %dec_label_pc_100052dc
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100053b0 = call i32 @function_1000953c()
  %v0_100053b4 = load i32, i32* @r27, align 4
  %v2_100053b4 = inttoptr i32 %v0_100053b0 to i32*
  store i32 %v0_100053b4, i32* %v2_100053b4, align 4
  store i32 %v0_100053b0, i32* @r29, align 4
  %v3_100053c4 = load i32, i32* @global_var_1001c160.65, align 4
  store i32 268456908, i32* @lr, align 4
  %v3_100053c8 = call i32 @function_10009908(i32 %v3_100053c4, i32 %v2_100052b4, i32 16)
  %v3_100053d0 = icmp eq i32 %v3_100053c8, -1
  br i1 %v3_100053d0, label %dec_label_pc_100053dc, label %dec_label_pc_10005360

dec_label_pc_100053dc:                            ; preds = %dec_label_pc_10005394, %dec_label_pc_10005320
  %v0_100053dc = load i32, i32* @r29, align 4
  %v1_100053dc = inttoptr i32 %v0_100053dc to i32*
  %v2_100053dc = load i32, i32* %v1_100053dc, align 4
  %v3_100053e0 = load i32, i32* @global_var_1001c160.65, align 4
  store i32 %v3_100053e0, i32* @r3, align 4
  %v3_100053e4 = icmp eq i32 %v2_100053dc, 99
  br i1 %v3_100053e4, label %dec_label_pc_10005448, label %dec_label_pc_100053ec

dec_label_pc_100053ec:                            ; preds = %dec_label_pc_10005448, %dec_label_pc_100053dc, %dec_label_pc_10005454
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005408.67 to i32), i32* @lr, align 4
  %v0_10005404 = call i32 @function_1000993c()
  store i32 268456976, i32* @lr, align 4
  %v1_1000540c = call i32 @function_1000a634(i32 5)
  store i32 268456984, i32* @lr, align 4
  %v0_10005414 = call i32 @function_10008e20()
  store i32 268456992, i32* @lr, align 4
  %v1_1000541c = call i32 @function_100044e8(i32 9765)
  store i32 268456996, i32* @lr, align 4
  %v1_10005420 = call i32 @function_10005278(i32 %v1_1000541c)
  store i32 %v0_10005298, i32* @r28, align 4
  store i32 %v0_100052a8, i32* @r31, align 4
  ret i32 %v1_10005420

dec_label_pc_10005448:                            ; preds = %dec_label_pc_100053dc
  %v3_10005448 = load i8, i8* @global_var_1001c020.66, align 1
  %v3_1000544c = icmp eq i8 %v3_10005448, 0
  br i1 %v3_1000544c, label %dec_label_pc_100053ec, label %dec_label_pc_10005454

dec_label_pc_10005454:                            ; preds = %dec_label_pc_10005448
  %v0_10005458 = load i32, i32* @r27, align 4
  %v1_10005458 = trunc i32 %v0_10005458 to i8
  store i8 %v1_10005458, i8* @global_var_1001c020.66, align 1
  br label %dec_label_pc_100053ec

; uselistorder directives
  uselistorder i32 %v2_100052b4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_100044e8, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100099e0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009908, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c020.66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100053ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005370, { 1, 0 }
}

define i32 @function_10005460() local_unnamed_addr {
dec_label_pc_10005460:
  %r28.global-to-local = alloca i32, align 4
  store i32 268457092, i32* @lr, align 4
  %v2_10005480 = call i32 @function_1000608c(i32 ptrtoint ([22 x i8]* @global_var_1000b820.68 to i32))
  store i32 %v2_10005480, i32* @r31, align 4
  %v4_10005484 = icmp eq i32 %v2_10005480, 0
  br i1 %v4_10005484, label %dec_label_pc_1000550c, label %dec_label_pc_10005494

dec_label_pc_10005494:                            ; preds = %dec_label_pc_10005460
  %v1_10005494 = add i32 %v2_10005480, 4
  %v2_10005494 = inttoptr i32 %v1_10005494 to i32*
  %v3_10005494 = load i32, i32* %v2_10005494, align 4
  store i32 %v3_10005494, i32* %r28.global-to-local, align 4
  %v0_10005498 = call i32 @function_10005d68()
  %v0_1000549c = load i32, i32* @r31, align 4
  %v1_1000549c = inttoptr i32 %v0_1000549c to i8*
  %v2_1000549c = load i8, i8* %v1_1000549c, align 1
  %v3_1000549c = zext i8 %v2_1000549c to i32
  %v2_100054a8 = urem i32 %v0_10005498, %v3_1000549c
  %v1_100054bc = mul nuw nsw i32 %v2_100054a8, 4
  %v1_100054c0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100054c0 = add i32 %v1_100054c0, %v1_100054bc
  %v3_100054c0 = inttoptr i32 %v2_100054c0 to i32*
  %v4_100054c0 = load i32, i32* %v3_100054c0, align 4
  store i32 %v4_100054c0, i32* @global_var_1001c264.71, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054cc.72 to i32), i32* @lr, align 4
  %v1_100054c8 = call i32 @function_10006048(i32 %v0_1000549c)
  store i32 268457172, i32* @lr, align 4
  %v1_100054d0 = call i32 @function_100080e8(i32 1)
  %v3_100054dc = call i32 @function_10008034(i32 1, i32* null)
  %v4_100054dc = inttoptr i32 %v3_100054dc to i16*
  %v3_100054e0 = load i16, i16* %v4_100054dc, align 2
  store i16 %v3_100054e0, i16* bitcast (i32* @global_var_1001c262.73 to i16*), align 4
  store i32 268457200, i32* @lr, align 4
  %v1_100054ec = call i32 @function_1000805c(i32 1)
  ret i32 %v1_100054ec

dec_label_pc_1000550c:                            ; preds = %dec_label_pc_10005460
  store i32 268457232, i32* @lr, align 4
  %v2_1000550c = call i32 @function_100098d4(i32 ptrtoint ([15 x i8]* @global_var_1000b838.69 to i32))
  store i32 %v2_1000550c, i32* @global_var_1001c264.71, align 4
  ret i32 %v2_1000550c

; uselistorder directives
  uselistorder i32 %v2_1000550c, { 1, 0 }
  uselistorder i32 (i32)* @function_100098d4, { 2, 1, 0 }
}

define i32 @function_10005534(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005534:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %stack_var_-1592 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-1608 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10005534 = load i32, i32* @lr, align 4
  store i32 %v0_10005534, i32* %r0.global-to-local, align 4
  %v0_1000553c = load i32, i32* @r31, align 4
  store i32 268457288, i32* @lr, align 4
  %v0_10005544 = call i32 @function_10008e68()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005544, i32* @global_var_1001c198.74, align 4
  %tmp47 = icmp slt i32 %v0_10005544, 1
  br i1 %tmp47, label %dec_label_pc_1000556c, label %dec_label_pc_10005558

dec_label_pc_10005558:                            ; preds = %dec_label_pc_1000556c, %dec_label_pc_10005534
  store i32 %v0_10005534, i32* %r0.global-to-local, align 4
  store i32 %v0_1000553c, i32* @r31, align 4
  ret i32 %v0_10005544

dec_label_pc_1000556c:                            ; preds = %dec_label_pc_10005534
  %v3_1000556c = icmp eq i32 %v0_10005544, -1
  br i1 %v3_1000556c, label %dec_label_pc_10005558, label %dec_label_pc_10005574

dec_label_pc_10005574:                            ; preds = %dec_label_pc_1000556c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005584.75 to i32), i32* @lr, align 4
  %v1_10005580 = call i32 @function_100080e8(i32 23)
  store i32 268457356, i32* @lr, align 4
  %v1_10005588 = call i32 @function_100080e8(i32 24)
  %v3_10005594 = call i32 @function_10008034(i32 23, i32* null)
  store i32 268457380, i32* @lr, align 4
  %v2_100055a0 = call i32 @function_10008f88(i32 %v3_10005594, i32 2)
  %v3_100055a4 = icmp eq i32 %v2_100055a0, -1
  store i32 %v2_100055a0, i32* @r31, align 4
  br i1 %v3_100055a4, label %dec_label_pc_100055ec, label %dec_label_pc_100055b0

dec_label_pc_100055b0:                            ; preds = %dec_label_pc_100055ec, %dec_label_pc_10005574
  %v0_100055b4 = phi i32 [ %v2_10005600, %dec_label_pc_100055ec ], [ %v2_100055a0, %dec_label_pc_10005574 ]
  %v2_100055bc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457416, i32* @lr, align 4
  %v3_100055c4 = call i32 @function_10008c50(i32 %v0_100055b4, i32 -2147199228, i32 %v2_100055bc)
  br label %dec_label_pc_100055c8

dec_label_pc_100055c8:                            ; preds = %dec_label_pc_100055c8, %dec_label_pc_100055b0
  %v0_100055cc = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055e0.76 to i32), i32* @lr, align 4
  %v3_100055dc = call i32 @function_10008c50(i32 %v0_100055cc, i32 -2147199227, i32 0)
  store i32 268457448, i32* @lr, align 4
  %v1_100055e4 = call i32 @function_1000a634(i32 10)
  br label %dec_label_pc_100055c8

dec_label_pc_100055ec:                            ; preds = %dec_label_pc_10005574
  %v3_100055f4 = call i32 @function_10008034(i32 24, i32* null)
  store i32 268457476, i32* @lr, align 4
  %v2_10005600 = call i32 @function_10008f88(i32 %v3_100055f4, i32 2)
  %v3_10005604 = icmp eq i32 %v2_10005600, -1
  store i32 %v2_10005600, i32* @r31, align 4
  br i1 %v3_10005604, label %dec_label_pc_10005610, label %dec_label_pc_100055b0

dec_label_pc_10005610:                            ; preds = %dec_label_pc_100055ec
  store i32 ptrtoint ([3 x i8]* @global_var_10005618.77 to i32), i32* @lr, align 4
  %v1_10005614 = call i32 @function_1000805c(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005620.78 to i32), i32* @lr, align 4
  %v1_1000561c = call i32 @function_1000805c(i32 24)
  %v0_10005624 = call i32 @function_1000a5b0()
  %v0_1000562c = load i32, i32* @lr, align 4
  %v0_10005630 = load i32, i32* @r29, align 4
  %v2_10005634 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005634, i32* @r29, align 4
  %v0_10005638 = load i32, i32* @r28, align 4
  store i32 %v0_10005624, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000564c = load i32, i32* %r17.global-to-local, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  store i32 268566528, i32* %r17.global-to-local, align 4
  %v0_10005658 = load i32, i32* %r18.global-to-local, align 4
  %v2_1000565c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_1000565c, i32* %r18.global-to-local, align 4
  %v0_10005660 = load i32, i32* %r19.global-to-local, align 4
  store i32 268566528, i32* %r19.global-to-local, align 4
  %v0_10005668 = load i32, i32* @r20, align 4
  store i32 268566528, i32* @r20, align 4
  %v0_10005670 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10005678 = load i32, i32* %r14.global-to-local, align 4
  %v0_1000567c = load i32, i32* @r15, align 4
  %v0_10005680 = load i32, i32* %r16.global-to-local, align 4
  %v0_10005684 = load i32, i32* @r21, align 4
  %v0_10005688 = load i32, i32* @r22, align 4
  %v0_1000568c = load i32, i32* @r23, align 4
  %v0_10005690 = load i32, i32* @r24, align 4
  %v0_10005694 = load i32, i32* @r25, align 4
  %v0_10005698 = load i32, i32* @r26, align 4
  %v0_1000569c = load i32, i32* @r27, align 4
  %v0_100056a0 = load i32, i32* @r30, align 4
  store i32 268457640, i32* @lr, align 4
  %v1_100056a4 = call i32 @function_10009bbc(i32 %v2_10005634)
  store i32 %v2_10005634, i32* @r3, align 4
  store i32 268457652, i32* @lr, align 4
  %v2_100056b0 = call i32 @function_10009b70(i32 %v2_10005634, i32 2)
  store i32 268457668, i32* @lr, align 4
  %v3_100056c0 = call i32 @function_10009178(i32 0, i32 %v2_10005634, i32 0)
  store i32 268457680, i32* @lr, align 4
  %v2_100056cc = call i32 @function_10009be8(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100056e0.79 to i32), i32* @lr, align 4
  %v2_100056dc = call i32 @function_10009be8(i32 5, i32 268456548)
  store i32 268457700, i32* @lr, align 4
  %v1_100056e0 = call i32 @function_10008964(i32 %v2_100056dc)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001c264.71, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001c262.73 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100056e0, i32* @global_var_1001c188.16, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c260.70 to i16*), align 4
  store i32 268457740, i32* @lr, align 4
  %v2_10005708 = call i32 @function_10008174(i32 %v1_100056e0, i32 -1334109607)
  store i32 268457056, i32* %r9.global-to-local, align 4
  store i32 268457056, i32* @global_var_1001c168.64, align 4
  store i32 ptrtoint (i32* @global_var_1000571c.80 to i32), i32* @lr, align 4
  %v1_10005718 = call i32 @function_10005278(i32 %v2_10005708)
  store i32 268457760, i32* @lr, align 4
  %v1_1000571c = call i32 @function_10005db8(i32 %v1_10005718)
  store i32 %v2_1000565c, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457772, i32* @lr, align 4
  %v0_10005728 = call i32 @function_10008708()
  %v0_1000572c = load i32, i32* @r28, align 4
  %v3_1000572c = icmp eq i32 %v0_1000572c, 2
  br i1 %v3_1000572c, label %dec_label_pc_100058a4, label %dec_label_pc_10005734

dec_label_pc_10005734:                            ; preds = %dec_label_pc_10005610, %dec_label_pc_100058a4, %dec_label_pc_100058b4
  %v0_10005734 = call i32 @function_10005d68()
  %v2_10005738 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10005738, i32* @r27, align 4
  store i32 %v0_10005734, i32* %r29.global-to-local, align 4
  %v0_10005740 = load i32, i32* @r31, align 4
  %v1_10005740 = inttoptr i32 %v0_10005740 to i32*
  %v2_10005740 = load i32, i32* %v1_10005740, align 4
  %v2_10005744 = ptrtoint i16* %stack_var_-1608 to i32
  store i32 %v2_10005744, i32* @r25, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457808, i32* @lr, align 4
  %v1_1000574c = inttoptr i32 %v2_10005740 to i8*
  %v2_1000574c = call i32 @function_10008660(i8* %v1_1000574c)
  store i32 %v2_1000574c, i32* %r28.global-to-local, align 4
  %v0_10005754 = load i32, i32* @r31, align 4
  %v1_10005754 = inttoptr i32 %v0_10005754 to i32*
  %v2_10005754 = load i32, i32* %v1_10005754, align 4
  %v1_10005758 = sub i32 20, %v2_1000574c
  store i32 %v1_10005758, i32* @r28, align 4
  store i32 268457824, i32* @lr, align 4
  %v1_1000575c = inttoptr i32 %v2_10005754 to i8*
  %v2_1000575c = call i32 @function_10008660(i8* %v1_1000575c)
  %v0_10005760 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005760 = load i32, i32* @r28, align 4
  %v2_10005760 = urem i32 %v0_10005760, %v1_10005760
  %v2_10005764 = sub i32 %v0_10005760, %v2_10005760
  store i32 %v2_10005764, i32* %r0.global-to-local, align 4
  %v2_1000576c = add i32 %v2_10005760, %v2_1000575c
  %v0_10005778 = load i32, i32* @r25, align 4
  %v2_10005778 = add i32 %v0_10005778, %v2_1000576c
  store i32 %v2_10005778, i32* @r29, align 4
  store i32 268457856, i32* @lr, align 4
  %v2_1000577c = bitcast i32* %stack_var_-1584 to i8*
  %v3_1000577c = call i32 @function_10005e28(i8* %v2_1000577c, i32 %v2_1000576c)
  %v0_10005780 = load i32, i32* @r31, align 4
  %v1_10005780 = inttoptr i32 %v0_10005780 to i32*
  %v2_10005780 = load i32, i32* %v1_10005780, align 4
  store i32 %v2_10005780, i32* @r3, align 4
  %v0_10005784 = load i32, i32* @r26, align 4
  %v1_10005784 = trunc i32 %v0_10005784 to i8
  %v2_10005784 = load i32, i32* @r29, align 4
  %v3_10005784 = add i32 %v2_10005784, 24
  %v4_10005784 = inttoptr i32 %v3_10005784 to i8*
  store i8 %v1_10005784, i8* %v4_10005784, align 1
  %v2_1000578c = inttoptr i32 %v2_10005780 to i8*
  %v3_1000578c = call i32 @function_10008688(i8* %v2_1000578c, i32 %v2_10005738)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10005738, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000579c.82 to i32), i32* @lr, align 4
  %v0_10005798 = call i32 @function_10008708()
  %v0_1000579c = call i32 @function_10005d68()
  store i32 %v0_1000579c, i32* %r28.global-to-local, align 4
  %v0_100057a4 = load i32, i32* @r31, align 4
  %v1_100057a4 = inttoptr i32 %v0_100057a4 to i32*
  %v2_100057a4 = load i32, i32* %v1_100057a4, align 4
  store i32 268457900, i32* @lr, align 4
  %v1_100057a8 = inttoptr i32 %v2_100057a4 to i8*
  %v2_100057a8 = call i32 @function_10008660(i8* %v1_100057a8)
  store i32 %v2_100057a8, i32* %r29.global-to-local, align 4
  %v0_100057b0 = load i32, i32* @r31, align 4
  %v1_100057b0 = inttoptr i32 %v0_100057b0 to i32*
  %v2_100057b0 = load i32, i32* %v1_100057b0, align 4
  %v1_100057b4 = sub i32 20, %v2_100057a8
  store i32 %v1_100057b4, i32* @r29, align 4
  store i32 268457916, i32* @lr, align 4
  %v1_100057b8 = inttoptr i32 %v2_100057b0 to i8*
  %v2_100057b8 = call i32 @function_10008660(i8* %v1_100057b8)
  %v0_100057bc = load i32, i32* %r28.global-to-local, align 4
  %v1_100057bc = load i32, i32* @r29, align 4
  %v2_100057bc = urem i32 %v0_100057bc, %v1_100057bc
  %v2_100057c0 = sub i32 %v0_100057bc, %v2_100057bc
  store i32 %v2_100057c0, i32* %r0.global-to-local, align 4
  %v2_100057c8 = add i32 %v2_100057bc, %v2_100057b8
  %v0_100057d4 = load i32, i32* @r25, align 4
  %v2_100057d4 = add i32 %v0_100057d4, %v2_100057c8
  store i32 %v2_100057d4, i32* @r28, align 4
  store i32 268457948, i32* @lr, align 4
  %v3_100057d8 = call i32 @function_10005e28(i8* %v2_1000577c, i32 %v2_100057c8)
  %v0_100057dc = load i32, i32* @r26, align 4
  %v1_100057dc = trunc i32 %v0_100057dc to i8
  %v2_100057dc = load i32, i32* @r28, align 4
  %v3_100057dc = add i32 %v2_100057dc, 24
  %v4_100057dc = inttoptr i32 %v3_100057dc to i8*
  store i8 %v1_100057dc, i8* %v4_100057dc, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100057f0.83 to i32), i32* @lr, align 4
  %v2_100057ec = call i32 @function_10009010(i32 15, i32 %v2_10005738)
  store i32 268457976, i32* @lr, align 4
  %v1_100057f4 = call i32 @function_100080e8(i32 3)
  %v3_10005800 = call i32 @function_10008034(i32 3, i32* nonnull %stack_var_-1596)
  %v3_10005804 = load i32, i32* %stack_var_-1596, align 4
  store i32 268458004, i32* @lr, align 4
  %v3_10005810 = call i32 @function_10009280(i32 1, i32 %v3_10005800, i32 %v3_10005804)
  store i32 ptrtoint ([3 x i8]* @global_var_10005828.85 to i32), i32* @lr, align 4
  %v3_10005824 = call i32 @function_10009280(i32 1, i32 ptrtoint (i32* @global_var_1000b848.84 to i32), i32 1)
  store i32 268458032, i32* @lr, align 4
  %v1_1000582c = call i32 @function_1000805c(i32 3)
  store i32 268458036, i32* @lr, align 4
  %v1_10005830 = call i32 @function_1000072c(i32 %v1_1000582c)
  store i32 268458040, i32* @lr, align 4
  %v1_10005834 = call i32 @function_10004aec(i32 %v1_10005830)
  store i32 ptrtoint (i32* @global_var_1000583c.86 to i32), i32* @lr, align 4
  %v1_10005838 = call i32 @function_10005534(i32 %v1_10005834)
  store i32 268458048, i32* @lr, align 4
  %v0_1000583c = call i32 @function_10008e68()
  %tmp48 = icmp slt i32 %v0_1000583c, 1
  br i1 %tmp48, label %dec_label_pc_100058dc, label %dec_label_pc_10005848

dec_label_pc_10005848:                            ; preds = %dec_label_pc_10005734
  store i32 %v0_1000562c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005678, i32* %r14.global-to-local, align 4
  store i32 %v0_1000567c, i32* @r15, align 4
  store i32 %v0_10005680, i32* %r16.global-to-local, align 4
  store i32 %v0_1000564c, i32* %r17.global-to-local, align 4
  store i32 %v0_10005658, i32* %r18.global-to-local, align 4
  store i32 %v0_10005660, i32* %r19.global-to-local, align 4
  store i32 %v0_10005668, i32* @r20, align 4
  store i32 %v0_10005684, i32* @r21, align 4
  store i32 %v0_10005688, i32* @r22, align 4
  store i32 %v0_1000568c, i32* @r23, align 4
  store i32 %v0_10005690, i32* @r24, align 4
  store i32 %v0_10005694, i32* @r25, align 4
  store i32 %v0_10005698, i32* @r26, align 4
  store i32 %v0_1000569c, i32* @r27, align 4
  store i32 %v0_10005638, i32* @r28, align 4
  store i32 %v0_10005630, i32* @r29, align 4
  store i32 %v0_100056a0, i32* @r30, align 4
  store i32 %v0_10005670, i32* @r31, align 4
  ret i32 0

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_10005610
  %v0_100058a4 = load i32, i32* @r31, align 4
  %v1_100058a4 = add i32 %v0_100058a4, 4
  %v2_100058a4 = inttoptr i32 %v1_100058a4 to i32*
  %v3_100058a4 = load i32, i32* %v2_100058a4, align 4
  store i32 268458156, i32* @lr, align 4
  %v1_100058a8 = inttoptr i32 %v3_100058a4 to i8*
  %v2_100058a8 = call i32 @function_10008660(i8* %v1_100058a8)
  %v2_100058ac = icmp sgt i32 %v2_100058a8, 31
  br i1 %v2_100058ac, label %dec_label_pc_10005734, label %dec_label_pc_100058b4

dec_label_pc_100058b4:                            ; preds = %dec_label_pc_100058a4
  %v0_100058b4 = load i32, i32* @r31, align 4
  %v1_100058b4 = add i32 %v0_100058b4, 4
  %v2_100058b4 = inttoptr i32 %v1_100058b4 to i32*
  %v3_100058b4 = load i32, i32* %v2_100058b4, align 4
  store i32 %v2_1000565c, i32* @r3, align 4
  %v2_100058bc = bitcast i32* %stack_var_-1552 to i8*
  %v3_100058bc = call i32 @function_10008688(i8* %v2_100058bc, i32 %v3_100058b4)
  %v0_100058c0 = load i32, i32* @r31, align 4
  %v1_100058c0 = add i32 %v0_100058c0, 4
  %v2_100058c0 = inttoptr i32 %v1_100058c0 to i32*
  %v3_100058c0 = load i32, i32* %v2_100058c0, align 4
  store i32 %v3_100058c0, i32* %r29.global-to-local, align 4
  store i32 268458188, i32* @lr, align 4
  %v1_100058c8 = inttoptr i32 %v3_100058c0 to i8*
  %v2_100058c8 = call i32 @function_10008660(i8* %v1_100058c8)
  store i32 %v2_100058c8, i32* @r4, align 4
  store i32 %v3_100058c0, i32* @r3, align 4
  store i32 268458200, i32* @lr, align 4
  %v0_100058d4 = call i32 @function_10008708()
  br label %dec_label_pc_10005734

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_10005734
  store i32 ptrtoint ([3 x i8]* @global_var_100058e0.87 to i32), i32* @lr, align 4
  %v1_100058dc = call i32 @function_10009130(i32 %v0_1000583c)
  store i32 ptrtoint ([3 x i8]* @global_var_100058e8.88 to i32), i32* @lr, align 4
  %v0_100058e4 = call i32 @function_10008e20()
  store i32 ptrtoint ([3 x i8]* @global_var_100058f0.89 to i32), i32* @lr, align 4
  %v0_100058ec = call i32 @function_10008e20()
  store i32 ptrtoint (i32* @global_var_100058f8.90 to i32), i32* @lr, align 4
  %v0_100058f4 = call i32 @function_10008e20()
  store i32 0, i32* @r24, align 4
  store i32 268458240, i32* @lr, align 4
  %v1_100058fc = call i32 @function_1000072c(i32 %v0_100058f4)
  %v2_10005900 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10005900, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005908.91 to i32), i32* @lr, align 4
  %v1_10005904 = call i32 @function_10004aec(i32 %v1_100058fc)
  %v2_10005908 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10005908, i32* @r27, align 4
  store i32 268458256, i32* @lr, align 4
  %v1_1000590c = call i32 @function_10005534(i32 %v1_10005904)
  store i32 268566528, i32* @r23, align 4
  store i32 268458264, i32* @lr, align 4
  %v1_10005914 = call i32 @function_10006838(i32 %v1_1000590c)
  store i32 268566528, i32* @r30, align 4
  %v2_10005920 = ptrtoint i32* %stack_var_-1604 to i32
  %v2_10005924 = ptrtoint i32* %stack_var_-1600 to i32
  store i32 %v2_10005924, i32* %r14.global-to-local, align 4
  %v2_1000592c = ptrtoint i32* %stack_var_-1136 to i32
  store i32 %v2_1000592c, i32* %r16.global-to-local, align 4
  %v2_10005a00 = ptrtoint i32* %stack_var_-1592 to i32
  %v1_10005c8c = bitcast i32* %stack_var_-1552 to i8*
  br label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_10005cf0, %dec_label_pc_10005d28, %dec_label_pc_10005ce4, %dec_label_pc_10005c88, %dec_label_pc_10005ae0, %dec_label_pc_10005ad0, %dec_label_pc_100059e8, %dec_label_pc_10005d5c, %dec_label_pc_10005d14, %dec_label_pc_10005cfc, %dec_label_pc_10005cd0, %dec_label_pc_10005c50, %dec_label_pc_10005b78, %dec_label_pc_10005a94, %dec_label_pc_100058dc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000594049 = load i32, i32* @r28, align 4
  %v4_1000594051 = inttoptr i32 %v2_1000594049 to i32*
  store i32 0, i32* %v4_1000594051, align 4
  %v0_1000594452 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000594453 = add i32 %v0_1000594452, 4
  store i32 %v1_1000594453, i32* %r9.global-to-local, align 4
  %v0_1000594854 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000594855 = add i32 %v0_1000594854, -1
  store i32 %v1_1000594855, i32* %ctr.global-to-local, align 4
  %v2_1000594856 = icmp eq i32 %v1_1000594855, 0
  br i1 %v2_1000594856, label %dec_label_pc_1000594c, label %dec_label_pc_10005940.dec_label_pc_10005940_crit_edge

dec_label_pc_10005940.dec_label_pc_10005940_crit_edge: ; preds = %dec_label_pc_10005930, %dec_label_pc_10005940.dec_label_pc_10005940_crit_edge
  %v1_1000594457 = phi i32 [ %v1_10005944, %dec_label_pc_10005940.dec_label_pc_10005940_crit_edge ], [ %v1_1000594453, %dec_label_pc_10005930 ]
  %v0_10005940.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005940 = load i32, i32* @r28, align 4
  %v3_10005940 = add i32 %v2_10005940, %v1_1000594457
  %v4_10005940 = inttoptr i32 %v3_10005940 to i32*
  store i32 %v0_10005940.pre, i32* %v4_10005940, align 4
  %v0_10005944 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005944 = add i32 %v0_10005944, 4
  store i32 %v1_10005944, i32* %r9.global-to-local, align 4
  %v0_10005948 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005948 = add i32 %v0_10005948, -1
  store i32 %v1_10005948, i32* %ctr.global-to-local, align 4
  %v2_10005948 = icmp eq i32 %v1_10005948, 0
  br i1 %v2_10005948, label %dec_label_pc_1000594c, label %dec_label_pc_10005940.dec_label_pc_10005940_crit_edge

dec_label_pc_1000594c:                            ; preds = %dec_label_pc_10005940.dec_label_pc_10005940_crit_edge, %dec_label_pc_10005930
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000595c58 = load i32, i32* @r27, align 4
  %v4_1000595c60 = inttoptr i32 %v2_1000595c58 to i32*
  store i32 0, i32* %v4_1000595c60, align 4
  %v0_1000596061 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000596062 = add i32 %v0_1000596061, 4
  store i32 %v1_1000596062, i32* %r9.global-to-local, align 4
  %v0_1000596463 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000596464 = add i32 %v0_1000596463, -1
  store i32 %v1_1000596464, i32* %ctr.global-to-local, align 4
  %v2_1000596465 = icmp eq i32 %v1_1000596464, 0
  br i1 %v2_1000596465, label %dec_label_pc_10005968, label %dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge

dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge: ; preds = %dec_label_pc_1000594c, %dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge
  %v1_1000596066 = phi i32 [ %v1_10005960, %dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge ], [ %v1_1000596062, %dec_label_pc_1000594c ]
  %v0_1000595c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000595c = load i32, i32* @r27, align 4
  %v3_1000595c = add i32 %v2_1000595c, %v1_1000596066
  %v4_1000595c = inttoptr i32 %v3_1000595c to i32*
  store i32 %v0_1000595c.pre, i32* %v4_1000595c, align 4
  %v0_10005960 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005960 = add i32 %v0_10005960, 4
  store i32 %v1_10005960, i32* %r9.global-to-local, align 4
  %v0_10005964 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005964 = add i32 %v0_10005964, -1
  store i32 %v1_10005964, i32* %ctr.global-to-local, align 4
  %v2_10005964 = icmp eq i32 %v1_10005964, 0
  br i1 %v2_10005964, label %dec_label_pc_10005968, label %dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge

dec_label_pc_10005968:                            ; preds = %dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge, %dec_label_pc_1000594c
  %v3_10005968 = load i32, i32* @global_var_1001c160.65, align 4
  %v3_1000596c = icmp eq i32 %v3_10005968, -1
  br i1 %v3_1000596c, label %dec_label_pc_10005994, label %dec_label_pc_10005974

dec_label_pc_10005974:                            ; preds = %dec_label_pc_10005968
  %v1_10005974 = call i32 @__asm_rlwinm(i32 %v3_10005968, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000597c = load i32, i32* @r25, align 4
  %v2_1000597c = add i32 %v1_1000597c, %v1_10005974
  %v1_10005980 = urem i32 %v3_10005968, 32
  %v1_10005984 = add i32 %v2_1000597c, 88
  %v2_10005984 = inttoptr i32 %v1_10005984 to i32*
  %v3_10005984 = load i32, i32* %v2_10005984, align 4
  %v3_10005988 = shl i32 1, %v1_10005980
  store i32 %v3_10005988, i32* %r0.global-to-local, align 4
  %v2_1000598c = or i32 %v3_10005984, %v3_10005988
  store i32 %v2_1000598c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000598c, i32* %v2_10005984, align 4
  br label %dec_label_pc_10005994

dec_label_pc_10005994:                            ; preds = %dec_label_pc_10005968, %dec_label_pc_10005974
  %v3_10005994 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 %v3_10005994, i32* %r0.global-to-local, align 4
  %v3_1000599c = icmp eq i32 %v3_10005994, -1
  br i1 %v3_1000599c, label %dec_label_pc_10005b90, label %dec_label_pc_100059a4

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005b90, %dec_label_pc_10005994, %dec_label_pc_10005be8
  %v3_10005aa8 = phi i32 [ -1, %dec_label_pc_10005b90 ], [ %v3_10005994, %dec_label_pc_10005994 ], [ %v3_10005aa8.pre, %dec_label_pc_10005be8 ]
  %v3_100059a4 = load i8, i8* bitcast (i16* @global_var_1001c19c.93 to i8*), align 2
  %v3_100059a8 = icmp eq i8 %v3_100059a4, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005ab0 = call i32 @__asm_rlwinm(i32 %v3_10005aa8, i32 29, i32 3, i32 29)
  %v1_10005ab4 = urem i32 %v3_10005aa8, 32
  %v1_10005ab8 = load i32, i32* @r25, align 4
  %v2_10005ab8 = add i32 %v1_10005ab8, %v1_10005ab0
  %v0_10005abc = load i32, i32* %r0.global-to-local, align 4
  %v3_10005abc = shl i32 %v0_10005abc, %v1_10005ab4
  store i32 %v3_10005abc, i32* %r0.global-to-local, align 4
  br i1 %v3_100059a8, label %dec_label_pc_10005aa8, label %dec_label_pc_100059b0

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_100059a4
  %v1_100059c8 = add i32 %v2_10005ab8, 216
  %v2_100059c8 = inttoptr i32 %v1_100059c8 to i32*
  %v3_100059c8 = load i32, i32* %v2_100059c8, align 4
  %v2_100059cc = or i32 %v3_100059c8, %v3_10005abc
  store i32 %v2_100059cc, i32* %r9.global-to-local, align 4
  store i32 %v2_100059cc, i32* %v2_100059c8, align 4
  br label %dec_label_pc_100059d4

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_10005aa8, %dec_label_pc_100059b0
  %v3_100059d4 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 %v3_100059d4, i32* %r0.global-to-local, align 4
  %v3_100059d8 = load i32, i32* @global_var_1001c160.65, align 4
  %v2_100059dc = icmp slt i32 %v3_100059d8, %v3_100059d4
  br i1 %v2_100059dc, label %dec_label_pc_100059e4, label %dec_label_pc_100059e8

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059d4
  br label %dec_label_pc_100059e8

dec_label_pc_100059e8:                            ; preds = %dec_label_pc_100059d4, %dec_label_pc_100059e4
  %v0_100059f0 = phi i32 [ %v3_100059d8, %dec_label_pc_100059d4 ], [ %v3_100059d4, %dec_label_pc_100059e4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100059f0 = add i32 %v0_100059f0, 1
  store i32 10, i32* %stack_var_-1592, align 4
  store i32 268458512, i32* @lr, align 4
  %v5_10005a0c = call i32 @function_100090e8(i32 %v1_100059f0, i32 %v2_10005900, i32 %v2_10005908, i32 0, i32 %v2_10005a00)
  %v6_10005a0c = trunc i32 %v5_10005a0c to i16
  %v4_10005a10 = icmp eq i16 %v6_10005a0c, -1
  br i1 %v4_10005a10, label %dec_label_pc_10005930, label %dec_label_pc_10005a18

dec_label_pc_10005a18:                            ; preds = %dec_label_pc_100059e8
  %v4_10005a18 = icmp eq i16 %v6_10005a0c, 0
  br i1 %v4_10005a18, label %dec_label_pc_10005a20, label %dec_label_pc_10005a4c

dec_label_pc_10005a20:                            ; preds = %dec_label_pc_10005a18
  %v0_10005a24 = load i32, i32* @r24, align 4
  store i16 0, i16* %stack_var_-1608, align 2
  %v2_10005a34 = srem i32 %v0_10005a24, 6
  %v1_10005a38 = sub i32 %v0_10005a24, %v2_10005a34
  store i32 %v1_10005a38, i32* %r9.global-to-local, align 4
  store i32 %v2_10005a34, i32* %r0.global-to-local, align 4
  %v1_10005a40 = add i32 %v0_10005a24, 1
  store i32 %v1_10005a40, i32* @r24, align 4
  %v3_10005a44 = icmp eq i32 %v2_10005a34, 0
  br i1 %v3_10005a44, label %dec_label_pc_10005c04, label %dec_label_pc_10005a4c

dec_label_pc_10005a4c:                            ; preds = %dec_label_pc_10005a18, %dec_label_pc_10005a20, %dec_label_pc_10005c04
  %v3_10005a4c = load i8, i8* bitcast (i16* @global_var_1001c19c.93 to i8*), align 2
  %v4_10005a4c = zext i8 %v3_10005a4c to i32
  store i32 %v4_10005a4c, i32* @r29, align 4
  %v3_10005a50 = icmp eq i8 %v3_10005a4c, 0
  %v3_10005ad0 = load i32, i32* @global_var_1001c164.92, align 4
  br i1 %v3_10005a50, label %dec_label_pc_10005ad0, label %dec_label_pc_10005a58

dec_label_pc_10005a58:                            ; preds = %dec_label_pc_10005a4c
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_10005a60 = call i32 @__asm_rlwinm(i32 %v3_10005ad0, i32 29, i32 3, i32 29)
  %v1_10005a64 = urem i32 %v3_10005ad0, 32
  %v1_10005a68 = load i32, i32* @r25, align 4
  %v2_10005a68 = add i32 %v1_10005a68, %v1_10005a60
  store i32 %v2_10005a68, i32* %r9.global-to-local, align 4
  %v1_10005a6c = add i32 %v2_10005a68, 216
  %v2_10005a6c = inttoptr i32 %v1_10005a6c to i32*
  %v3_10005a6c = load i32, i32* %v2_10005a6c, align 4
  %v3_10005a70 = lshr i32 %v3_10005a6c, %v1_10005a64
  store i32 %v3_10005a70, i32* %r0.global-to-local, align 4
  %v1_10005a78 = urem i32 %v3_10005a70, 2
  %v3_10005a78 = icmp eq i32 %v1_10005a78, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c19c.93 to i8*), align 2
  br i1 %v3_10005a78, label %dec_label_pc_10005a88, label %dec_label_pc_10005c20

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a58
  %v3_10005a88 = icmp eq i32 %v3_10005ad0, -1
  br i1 %v3_10005a88, label %dec_label_pc_10005a94, label %dec_label_pc_10005a90

dec_label_pc_10005a90:                            ; preds = %dec_label_pc_10005a88
  store i32 ptrtoint (i32* @global_var_10005a94.94 to i32), i32* @lr, align 4
  %v0_10005a90 = call i32 @function_10008e20()
  br label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %dec_label_pc_10005a88, %dec_label_pc_10005a90
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c164.92, align 4
  store i32 268458660, i32* @lr, align 4
  %v1_10005aa0 = call i32 @function_1000a634(i32 1)
  br label %dec_label_pc_10005930

dec_label_pc_10005aa8:                            ; preds = %dec_label_pc_100059a4
  %v1_10005ac0 = add i32 %v2_10005ab8, 88
  %v2_10005ac0 = inttoptr i32 %v1_10005ac0 to i32*
  %v3_10005ac0 = load i32, i32* %v2_10005ac0, align 4
  %v2_10005ac4 = or i32 %v3_10005ac0, %v3_10005abc
  store i32 %v2_10005ac4, i32* %r9.global-to-local, align 4
  store i32 %v2_10005ac4, i32* %v2_10005ac0, align 4
  br label %dec_label_pc_100059d4

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005a4c
  store i32 268566528, i32* @r31, align 4
  %v3_10005ad8 = icmp eq i32 %v3_10005ad0, -1
  br i1 %v3_10005ad8, label %dec_label_pc_10005930, label %dec_label_pc_10005ae0

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_10005ad0
  %v1_10005ae0 = call i32 @__asm_rlwinm(i32 %v3_10005ad0, i32 29, i32 3, i32 29)
  %v1_10005ae4 = urem i32 %v3_10005ad0, 32
  %v1_10005ae8 = load i32, i32* @r25, align 4
  %v2_10005ae8 = add i32 %v1_10005ae8, %v1_10005ae0
  store i32 %v2_10005ae8, i32* %r9.global-to-local, align 4
  %v1_10005aec = add i32 %v2_10005ae8, 88
  %v2_10005aec = inttoptr i32 %v1_10005aec to i32*
  %v3_10005aec = load i32, i32* %v2_10005aec, align 4
  %v3_10005af0 = lshr i32 %v3_10005aec, %v1_10005ae4
  store i32 %v3_10005af0, i32* %r0.global-to-local, align 4
  %v1_10005af4 = urem i32 %v3_10005af0, 2
  store i32 %v1_10005af4, i32* %r9.global-to-local, align 4
  %v3_10005af4 = icmp eq i32 %v1_10005af4, 0
  br i1 %v3_10005af4, label %dec_label_pc_10005930, label %dec_label_pc_10005afc

dec_label_pc_10005afc:                            ; preds = %dec_label_pc_10005ae0
  %v0_10005afc = load i32, i32* @r29, align 4
  %v6_10005afc = trunc i32 %v0_10005afc to i16
  store i16 %v6_10005afc, i16* %stack_var_-1608, align 2
  %v0_10005b00 = call i32 @function_1000953c()
  %v0_10005b04 = load i32, i32* @r29, align 4
  %v2_10005b04 = inttoptr i32 %v0_10005b00 to i32*
  store i32 %v0_10005b04, i32* %v2_10005b04, align 4
  store i32 %v0_10005b00, i32* @r26, align 4
  %v3_10005b14 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268458784, i32* @lr, align 4
  %v4_10005b1c = call i32 @function_10009a10(i32 %v3_10005b14, i32 %v2_10005744, i32 2, i32 16386)
  %v3_10005b20 = icmp eq i32 %v4_10005b1c, -1
  br i1 %v3_10005b20, label %dec_label_pc_10005ce4, label %dec_label_pc_10005b28

dec_label_pc_10005b28:                            ; preds = %dec_label_pc_10005afc
  %v3_10005b28 = icmp eq i32 %v4_10005b1c, 0
  br i1 %v3_10005b28, label %dec_label_pc_10005b68, label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b28
  %v3_10005b30 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005b30 = sext i16 %v3_10005b30 to i32
  %v4_10005b34 = icmp eq i16 %v3_10005b30, 0
  br i1 %v4_10005b34, label %dec_label_pc_10005cfc, label %dec_label_pc_10005b3c

dec_label_pc_10005b3c:                            ; preds = %dec_label_pc_10005b30
  %v3_10005b3c = icmp ugt i16 %v3_10005b30, 1024
  br i1 %v3_10005b3c, label %dec_label_pc_10005d14, label %dec_label_pc_10005b44

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b3c
  %v0_10005b44 = load i32, i32* @r29, align 4
  %v1_10005b44 = load i32, i32* @r26, align 4
  %v2_10005b44 = inttoptr i32 %v1_10005b44 to i32*
  store i32 %v0_10005b44, i32* %v2_10005b44, align 4
  %v3_10005b50 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268458840, i32* @lr, align 4
  %v5_10005b54 = call i32 @function_10009a10(i32 %v3_10005b50, i32 %v2_1000592c, i32 %v4_10005b30, i32 16386)
  %v3_10005b58 = icmp eq i32 %v5_10005b54, -1
  br i1 %v3_10005b58, label %dec_label_pc_10005ce4, label %dec_label_pc_10005b60

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_10005b44
  %v3_10005b60 = icmp eq i32 %v5_10005b54, 0
  br i1 %v3_10005b60, label %dec_label_pc_10005b68, label %dec_label_pc_10005d28

dec_label_pc_10005b68:                            ; preds = %dec_label_pc_10005cf0, %dec_label_pc_10005b60, %dec_label_pc_10005b28
  %v3_10005b68 = load i32, i32* @global_var_1001c164.92, align 4
  %v3_10005b6c = icmp eq i32 %v3_10005b68, -1
  br i1 %v3_10005b6c, label %dec_label_pc_10005b78, label %dec_label_pc_10005b74

dec_label_pc_10005b74:                            ; preds = %dec_label_pc_10005b68
  store i32 ptrtoint (i32* @global_var_10005b78.95 to i32), i32* @lr, align 4
  %v0_10005b74 = call i32 @function_10008e20()
  br label %dec_label_pc_10005b78

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b68, %dec_label_pc_10005b74
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c164.92, align 4
  store i32 268458892, i32* @lr, align 4
  %v1_10005b88 = call i32 @function_1000a634(i32 1)
  br label %dec_label_pc_10005930

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005994
  store i32 268458912, i32* @lr, align 4
  %v3_10005b9c = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  %v3_10005ba0 = icmp eq i32 %v3_10005b9c, -1
  store i32 %v3_10005b9c, i32* %r29.global-to-local, align 4
  store i32 %v3_10005b9c, i32* @global_var_1001c164.92, align 4
  br i1 %v3_10005ba0, label %dec_label_pc_100059a4, label %dec_label_pc_10005bb0

dec_label_pc_10005bb0:                            ; preds = %dec_label_pc_10005b90
  store i32 3, i32* @r4, align 4
  store i32 268458944, i32* @lr, align 4
  %v1_10005bbc = call i32 @function_10008d38(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005bc8 = load i32, i32* %r29.global-to-local, align 4
  store i32 268458964, i32* @lr, align 4
  %v2_10005bd0 = call i32 @function_10008d38(i32 %v0_10005bc8)
  %v3_10005bd4 = load i32, i32* @global_var_1001c168.64, align 4
  store i32 %v3_10005bd4, i32* %r0.global-to-local, align 4
  %v3_10005bd8 = icmp eq i32 %v3_10005bd4, 0
  br i1 %v3_10005bd8, label %dec_label_pc_10005be8, label %dec_label_pc_10005be0

dec_label_pc_10005be0:                            ; preds = %dec_label_pc_10005bb0
  store i32 %v3_10005bd4, i32* %ctr.global-to-local, align 4
  store i32 268458984, i32* @lr, align 4
  %v2_10005be4 = call i32 @function_10008964(i32 %v2_10005bd0)
  br label %dec_label_pc_10005be8

dec_label_pc_10005be8:                            ; preds = %dec_label_pc_10005bb0, %dec_label_pc_10005be0
  %v3_10005be8 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 %v3_10005be8, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c19c.93 to i8*), align 2
  store i32 268459008, i32* @lr, align 4
  %v0_10005bfc = call i32 @function_1000993c()
  %v3_10005aa8.pre = load i32, i32* @global_var_1001c164.92, align 4
  br label %dec_label_pc_100059a4

dec_label_pc_10005c04:                            ; preds = %dec_label_pc_10005a20
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005c0c = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268459036, i32* @lr, align 4
  %v4_10005c18 = call i32 @function_10009a88(i32 %v3_10005c0c, i32 %v2_10005744, i32 2, i32 16384)
  br label %dec_label_pc_10005a4c

dec_label_pc_10005c20:                            ; preds = %dec_label_pc_10005a58
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1604, align 4
  store i32 4, i32* %stack_var_-1600, align 4
  store i32 268459076, i32* @lr, align 4
  %v5_10005c40 = call i32 @function_100099a4(i32 1, i32 4, i32 %v2_10005920, i32 %v2_10005924, i32 4)
  %v3_10005c44 = load i32, i32* %stack_var_-1604, align 4
  store i32 %v3_10005c44, i32* %r0.global-to-local, align 4
  %v3_10005c48 = icmp eq i32 %v3_10005c44, 0
  br i1 %v3_10005c48, label %dec_label_pc_10005c88, label %dec_label_pc_10005c50

dec_label_pc_10005c50:                            ; preds = %dec_label_pc_10005c20
  store i32 ptrtoint (i32* @global_var_10005c58.96 to i32), i32* @lr, align 4
  %v0_10005c54 = call i32 @function_10008e20()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c164.92, align 4
  %v0_10005c60 = call i32 @function_10005d68()
  %v1_10005c60 = sext i32 %v0_10005c60 to i64
  %v5_10005c6c = mul nuw nsw i64 %v1_10005c60, 3435973837
  %v1_10005c702 = udiv i64 %v5_10005c6c, 34359738368
  %v1_10005c70 = trunc i64 %v1_10005c702 to i32
  %v1_10005c74 = mul i32 %v1_10005c70, 10
  store i32 %v1_10005c74, i32* %r0.global-to-local, align 4
  %v3_10005c78 = sub i32 %v0_10005c60, %v1_10005c74
  %v1_10005c7c = add i32 %v3_10005c78, 1
  store i32 268459140, i32* @lr, align 4
  %v1_10005c80 = call i32 @function_1000a634(i32 %v1_10005c7c)
  br label %dec_label_pc_10005930

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005c20
  store i32 268459152, i32* @lr, align 4
  %v2_10005c8c = call i32 @function_10008660(i8* %v1_10005c8c)
  %v3_10005c8c = trunc i32 %v2_10005c8c to i8
  %v7_10005c90 = sext i8 %v3_10005c8c to i16
  store i16 %v7_10005c90, i16* %stack_var_-1608, align 2
  store i32 268459160, i32* @lr, align 4
  %v2_10005c94 = call i32 @function_10008964(i32 %v2_10005c8c)
  store i32 %v2_10005c94, i32* @global_var_1001c188.16, align 4
  %v3_10005ca0 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268459184, i32* @lr, align 4
  %v4_10005cac = call i32 @function_10009a88(i32 %v3_10005ca0, i32 ptrtoint (i32* @global_var_1000b84c.98 to i32), i32 4, i32 16384)
  %v3_10005cb0 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268459204, i32* @lr, align 4
  %v4_10005cc0 = call i32 @function_10009a88(i32 %v3_10005cb0, i32 %v2_10005744, i32 1, i32 16384)
  %v3_10005cc4 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005cc8 = icmp eq i16 %v3_10005cc4, 0
  br i1 %v4_10005cc8, label %dec_label_pc_10005930, label %dec_label_pc_10005cd0

dec_label_pc_10005cd0:                            ; preds = %dec_label_pc_10005c88
  %v4_10005cc4 = sext i16 %v3_10005cc4 to i32
  %v3_10005cd0 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268459232, i32* @lr, align 4
  %v5_10005cdc = call i32 @function_10009a88(i32 %v3_10005cd0, i32 %v2_1000565c, i32 %v4_10005cc4, i32 16384)
  br label %dec_label_pc_10005930

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005b44, %dec_label_pc_10005afc
  %v0_10005ce4 = load i32, i32* @r26, align 4
  %v1_10005ce4 = inttoptr i32 %v0_10005ce4 to i32*
  %v2_10005ce4 = load i32, i32* %v1_10005ce4, align 4
  %v3_10005ce8 = icmp eq i32 %v2_10005ce4, 11
  br i1 %v3_10005ce8, label %dec_label_pc_10005930, label %dec_label_pc_10005cf0

dec_label_pc_10005cf0:                            ; preds = %dec_label_pc_10005ce4
  %v3_10005cf0 = icmp eq i32 %v2_10005ce4, 4
  br i1 %v3_10005cf0, label %dec_label_pc_10005930, label %dec_label_pc_10005b68

dec_label_pc_10005cfc:                            ; preds = %dec_label_pc_10005b30
  %v3_10005cfc = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268459280, i32* @lr, align 4
  %v4_10005d0c = call i32 @function_10009a10(i32 %v3_10005cfc, i32 %v2_10005744, i32 2, i32 16384)
  br label %dec_label_pc_10005930

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005b3c
  store i32 ptrtoint (i32* @global_var_10005d1c.99 to i32), i32* @lr, align 4
  %v0_10005d18 = call i32 @function_10008e20()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c164.92, align 4
  br label %dec_label_pc_10005930

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005b60
  %v3_10005d28 = load i32, i32* @global_var_1001c164.92, align 4
  store i32 268459324, i32* @lr, align 4
  %v4_10005d38 = call i32 @function_10009a10(i32 %v3_10005d28, i32 %v2_10005744, i32 2, i32 16384)
  %v3_10005d3c = load i32, i32* @global_var_1001c164.92, align 4
  %v3_10005d40 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005d40 = sext i16 %v3_10005d40 to i32
  store i32 268459344, i32* @lr, align 4
  %v5_10005d4c = call i32 @function_10009a10(i32 %v3_10005d3c, i32 %v2_1000592c, i32 %v4_10005d40, i32 16384)
  %v3_10005d50 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005d54 = icmp eq i16 %v3_10005d50, 0
  br i1 %v4_10005d54, label %dec_label_pc_10005930, label %dec_label_pc_10005d5c

dec_label_pc_10005d5c:                            ; preds = %dec_label_pc_10005d28
  %v4_10005d50 = sext i16 %v3_10005d50 to i32
  store i32 268459364, i32* @lr, align 4
  %v3_10005d60 = call i32 @function_10000394(i32 %v2_1000592c, i32 %v4_10005d50)
  br label %dec_label_pc_10005930

; uselistorder directives
  uselistorder i16 %v3_10005d50, { 1, 0 }
  uselistorder i16 %v3_10005cc4, { 1, 0 }
  uselistorder i32 %v3_10005b9c, { 1, 0, 2 }
  uselistorder i32 %v1_10005af4, { 1, 0 }
  uselistorder i32 %v3_10005ad0, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v2_10005a34, { 1, 0, 2 }
  uselistorder i32 %v0_10005a24, { 2, 0, 1 }
  uselistorder i32 %v2_10005ab8, { 1, 0 }
  uselistorder i32 %v1_10005964, { 1, 0 }
  uselistorder i32 %v1_10005960, { 1, 0 }
  uselistorder i32 %v1_10005948, { 1, 0 }
  uselistorder i32 %v1_10005944, { 1, 0 }
  uselistorder i32 %v2_1000592c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_100057c8, { 1, 0 }
  uselistorder i32 %v2_1000576c, { 1, 0 }
  uselistorder i32 %v2_10005744, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_100056e0, { 1, 0 }
  uselistorder i32 %v2_10005634, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_10005600, { 1, 2, 0 }
  uselistorder i32 %v0_10005544, { 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1608, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 6, 19, 20, 22, 21, 5, 23, 24, 2, 3, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 4, 5, 6, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r18.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r17.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 3, 1, 0, 2 }
  uselistorder i32* %r14.global-to-local, { 3, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 13, 14, 18, 19, 20, 21, 22, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 3, 2, 5, 6, 8, 7, 1, 9, 10 }
  uselistorder i8* bitcast (i16* @global_var_1001c19c.93 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c164.92, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 (i32)* @function_10005534, { 1, 0 }
  uselistorder i32 (i32)* @function_10004aec, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009280, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10008688, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i8*, i32)* @function_10005e28, { 2, 0, 1 }
  uselistorder i32 (i32)* @function_10005278, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009be8, { 1, 0 }
  uselistorder label %dec_label_pc_10005be8, { 1, 0 }
  uselistorder label %dec_label_pc_10005b78, { 1, 0 }
  uselistorder label %dec_label_pc_10005a94, { 1, 0 }
  uselistorder label %dec_label_pc_10005a4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100059e8, { 1, 0 }
  uselistorder label %dec_label_pc_100059a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005994, { 1, 0 }
  uselistorder label %dec_label_pc_1000595c.dec_label_pc_1000595c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005940.dec_label_pc_10005940_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005930, { 7, 1, 8, 9, 0, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10005734, { 2, 1, 0 }
}

define i32 @function_10005d68() local_unnamed_addr {
dec_label_pc_10005d68:
  %v3_10005d70 = load i32, i32* @global_var_1001c21c.100, align 4
  %v3_10005d78 = load i32, i32* @global_var_1001c210.101, align 4
  %v1_10005d80 = udiv i32 %v3_10005d70, 524288
  %v3_10005d84 = load i32, i32* @global_var_1001c218.102, align 4
  %v1_10005d88 = mul i32 %v3_10005d78, 2048
  %v2_10005d8c = xor i32 %v1_10005d80, %v3_10005d70
  %v2_10005d90 = xor i32 %v1_10005d88, %v3_10005d78
  %v3_10005d94 = load i32, i32* @global_var_1001c214.103, align 4
  %v2_10005d98 = xor i32 %v2_10005d8c, %v2_10005d90
  %v1_10005d9c = udiv i32 %v2_10005d90, 256
  %v2_10005da0 = xor i32 %v2_10005d98, %v1_10005d9c
  store i32 %v3_10005d94, i32* @global_var_1001c210.101, align 4
  store i32 %v3_10005d84, i32* @global_var_1001c214.103, align 4
  store i32 %v3_10005d70, i32* @global_var_1001c218.102, align 4
  store i32 %v2_10005da0, i32* @global_var_1001c21c.100, align 4
  ret i32 %v2_10005da0

; uselistorder directives
  uselistorder i32 %v2_10005da0, { 1, 0 }
  uselistorder i32 %v3_10005d78, { 1, 0 }
  uselistorder i32 %v3_10005d70, { 2, 1, 0 }
}

define i32 @function_10005db8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005db8:
  store i32 268459480, i32* @lr, align 4
  %v0_10005dd4 = call i32 @function_100091f0()
  store i32 %v0_10005dd4, i32* @global_var_1001c210.101, align 4
  store i32 268459492, i32* @lr, align 4
  %v0_10005de0 = call i32 @function_10008eb0()
  store i32 268459500, i32* @lr, align 4
  %v0_10005de8 = call i32 @function_10008ef8()
  %v2_10005dec = xor i32 %v0_10005de0, %v0_10005de8
  store i32 %v2_10005dec, i32* @global_var_1001c214.103, align 4
  store i32 268459512, i32* @lr, align 4
  %v1_10005df4 = call i32 @function_10009548(i32 %v0_10005de8)
  %v3_10005df8 = load i32, i32* @global_var_1001c214.103, align 4
  %v2_10005e08 = xor i32 %v3_10005df8, %v1_10005df4
  store i32 %v2_10005e08, i32* @global_var_1001c21c.100, align 4
  store i32 %v1_10005df4, i32* @global_var_1001c218.102, align 4
  ret i32 %v1_10005df4

; uselistorder directives
  uselistorder i32 %v1_10005df4, { 2, 1, 0 }
  uselistorder i32 %v0_10005de8, { 1, 0 }
  uselistorder i32 ()* @function_10008ef8, { 2, 1, 0 }
}

define i32 @function_10005e28(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005e28:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005e44 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459624, i32* @lr, align 4
  %v1_10005e64 = call i32 @function_100080e8(i32 28)
  %v3_10005e70 = call i32 @function_10008034(i32 28, i32* null)
  %v2_10005e7c = inttoptr i32 %v3_10005e70 to i8*
  %v3_10005e7c = call i32 @function_100096b4(i32 %v2_10005e44, i8* %v2_10005e7c)
  %v3_10005e80 = icmp eq i32 %arg2, 0
  br i1 %v3_10005e80, label %dec_label_pc_10005f04, label %dec_label_pc_10005e88

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005e28
  %v1_10005e88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005e88 = add i32 %v1_10005e88, %arg2
  store i32 %v2_10005e88, i32* %r26.global-to-local, align 4
  %v1_10005edc = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005e9c

dec_label_pc_10005e9c:                            ; preds = %dec_label_pc_10005e9c, %dec_label_pc_10005e88
  %v3_10005e9c = load i32, i32* @global_var_1001c21c.100, align 4
  %v3_10005ea4 = load i32, i32* @global_var_1001c210.101, align 4
  %v1_10005ea8 = udiv i32 %v3_10005e9c, 524288
  %v3_10005eac = load i32, i32* @global_var_1001c218.102, align 4
  %v1_10005eb0 = mul i32 %v3_10005ea4, 2048
  %v2_10005eb4 = xor i32 %v1_10005ea8, %v3_10005e9c
  %v2_10005eb8 = xor i32 %v1_10005eb0, %v3_10005ea4
  %v3_10005ebc = load i32, i32* @global_var_1001c214.103, align 4
  %v2_10005ec0 = xor i32 %v2_10005eb4, %v2_10005eb8
  %v1_10005ec4 = udiv i32 %v2_10005eb8, 256
  %v2_10005ec8 = xor i32 %v2_10005ec0, %v1_10005ec4
  store i32 %v2_10005ec8, i32* %r29.global-to-local, align 4
  store i32 %v3_10005ebc, i32* @global_var_1001c210.101, align 4
  store i32 %v2_10005ec8, i32* @global_var_1001c21c.100, align 4
  store i32 %v3_10005eac, i32* @global_var_1001c214.103, align 4
  store i32 %v3_10005e9c, i32* @global_var_1001c218.102, align 4
  store i32 268459744, i32* @lr, align 4
  %v2_10005edc = call i32 @function_10008660(i8* %v1_10005edc)
  %v0_10005ee0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005ee0 = urem i32 %v0_10005ee0, %v2_10005edc
  store i32 %v2_10005ee0, i32* %r29.global-to-local, align 4
  %v0_10005eec = load i32, i32* @r1, align 4
  %v2_10005eec = add i32 %v0_10005eec, %v2_10005ee0
  %v1_10005ef0 = add i32 %v2_10005eec, 8
  %v2_10005ef0 = inttoptr i32 %v1_10005ef0 to i8*
  %v3_10005ef0 = load i8, i8* %v2_10005ef0, align 1
  %v2_10005ef4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005ef4 = inttoptr i32 %v2_10005ef4 to i8*
  store i8 %v3_10005ef0, i8* %v3_10005ef4, align 1
  %v0_10005ef8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005ef8 = add i32 %v0_10005ef8, 1
  store i32 %v1_10005ef8, i32* %r31.global-to-local, align 4
  %v1_10005efc = load i32, i32* %r26.global-to-local, align 4
  %v4_10005efc = icmp eq i32 %v1_10005ef8, %v1_10005efc
  br i1 %v4_10005efc, label %dec_label_pc_10005f04, label %dec_label_pc_10005e9c

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005e9c, %dec_label_pc_10005e28
  store i32 268459788, i32* @lr, align 4
  %v1_10005f08 = call i32 @function_1000805c(i32 28)
  ret i32 %v1_10005f08

; uselistorder directives
  uselistorder i32 %v3_10005ea4, { 1, 0 }
  uselistorder i32 %v3_10005e9c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000805c, { 3, 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32*)* @function_10008034, { 21, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32 (i32)* @function_100080e8, { 4, 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005f3c() local_unnamed_addr {
dec_label_pc_10005f3c:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005f3c = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005f3c, 1
  br i1 %tmp19, label %dec_label_pc_10005f3c.dec_label_pc_10005ff0_crit_edge, label %dec_label_pc_10005f54

dec_label_pc_10005f3c.dec_label_pc_10005ff0_crit_edge: ; preds = %dec_label_pc_10005f3c
  %v0_10006000.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005ff0

dec_label_pc_10005f54:                            ; preds = %dec_label_pc_10005f3c
  %v3_10005f64 = load i32, i32* @global_var_1001c21c.100, align 4
  store i32 %v3_10005f64, i32* %r7.global-to-local, align 4
  %v3_10005f68 = load i32, i32* @global_var_1001c218.102, align 4
  store i32 %v3_10005f68, i32* %r5.global-to-local, align 4
  %v3_10005f6c = load i32, i32* @global_var_1001c214.103, align 4
  store i32 %v3_10005f6c, i32* %r6.global-to-local, align 4
  %v3_10005f70 = load i32, i32* @global_var_1001c210.101, align 4
  br label %dec_label_pc_10005f9c

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f9c
  %v1_10005f78 = load i32, i32* @r3, align 4
  %v2_10005f78 = inttoptr i32 %v1_10005f78 to i32*
  store i32 %v2_10005fc0, i32* %v2_10005f78, align 4
  %v0_10005f7c = load i32, i32* @r4, align 4
  %v1_10005f7c = add i32 %v0_10005f7c, -4
  store i32 %v1_10005f7c, i32* @r4, align 4
  %v0_10005f80 = load i32, i32* @r3, align 4
  %v1_10005f80 = add i32 %v0_10005f80, 4
  br label %dec_label_pc_10005f84

dec_label_pc_10005f84:                            ; preds = %dec_label_pc_10005fd4, %dec_label_pc_10005f78
  %v0_10005f84 = phi i32 [ %v0_10005f84.pr, %dec_label_pc_10005fd4 ], [ %v1_10005f7c, %dec_label_pc_10005f78 ]
  %storemerge = phi i32 [ %v1_10005fd8, %dec_label_pc_10005fd4 ], [ %v1_10005f80, %dec_label_pc_10005f78 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005f88 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005f84, 1
  br i1 %tmp20, label %dec_label_pc_10005fe0, label %dec_label_pc_10005f90

dec_label_pc_10005f90:                            ; preds = %dec_label_pc_10005f84
  %v0_10005f90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005f90, i32* %r6.global-to-local, align 4
  %v0_10005f94 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005f94, i32* %r5.global-to-local, align 4
  %v0_10005f98 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f98, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005f9c

dec_label_pc_10005f9c:                            ; preds = %dec_label_pc_10005f54, %dec_label_pc_10005f90
  %v0_1000603c = phi i32 [ %v3_10005f6c, %dec_label_pc_10005f54 ], [ %v0_10005f90, %dec_label_pc_10005f90 ]
  %v0_10006020 = phi i32 [ %v3_10005f68, %dec_label_pc_10005f54 ], [ %v0_10005f94, %dec_label_pc_10005f90 ]
  %v0_10006024 = phi i32 [ %v3_10005f64, %dec_label_pc_10005f54 ], [ %v0_10005f98, %dec_label_pc_10005f90 ]
  %v0_10006004 = phi i32 [ %v3_10005f70, %dec_label_pc_10005f54 ], [ %v0_10005f88, %dec_label_pc_10005f90 ]
  %v0_10005fcc = phi i32 [ %v0_10005f3c, %dec_label_pc_10005f54 ], [ %v0_10005f84, %dec_label_pc_10005f90 ]
  %v2_10005f9c = icmp sgt i32 %v0_10005fcc, 3
  %v1_10005fa0 = mul i32 %v0_10006004, 2048
  %v1_10005fa4 = udiv i32 %v0_10006024, 524288
  %v2_10005fa8 = xor i32 %v1_10005fa0, %v0_10006004
  %v2_10005fac = xor i32 %v1_10005fa4, %v0_10006024
  %v2_10005fb4 = xor i32 %v2_10005fac, %v2_10005fa8
  %v1_10005fb8 = udiv i32 %v2_10005fa8, 256
  %v2_10005fc0 = xor i32 %v2_10005fb4, %v1_10005fb8
  store i32 %v2_10005fc0, i32* %r0.global-to-local, align 4
  br i1 %v2_10005f9c, label %dec_label_pc_10005f78, label %dec_label_pc_10005fc8

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005f9c
  %v3_10005fb0 = icmp eq i32 %v0_10005fcc, 1
  store i32 %v2_10005fc0, i32* %r0.global-to-local, align 4
  %v1_10005fcc = add i32 %v0_10005fcc, -2
  store i32 %v1_10005fcc, i32* @r4, align 4
  br i1 %v3_10005fb0, label %dec_label_pc_10006004, label %dec_label_pc_10005fd4

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005fc8
  %v1_10005fd4 = trunc i32 %v2_10005fc0 to i16
  %v2_10005fd4 = load i32, i32* @r3, align 4
  %v3_10005fd4 = inttoptr i32 %v2_10005fd4 to i16*
  store i16 %v1_10005fd4, i16* %v3_10005fd4, align 2
  %v0_10005fd8 = load i32, i32* @r3, align 4
  %v1_10005fd8 = add i32 %v0_10005fd8, 2
  %v0_10005f84.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005f84

dec_label_pc_10005fe0:                            ; preds = %dec_label_pc_10005f84
  %v0_10005fe0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005fe0, i32* @global_var_1001c21c.100, align 4
  %v0_10005fe4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005fe4, i32* @global_var_1001c218.102, align 4
  %v0_10005fe8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005fe8, i32* @global_var_1001c214.103, align 4
  store i32 %v0_10005f88, i32* @global_var_1001c210.101, align 4
  br label %dec_label_pc_10005ff0

dec_label_pc_10005ff0:                            ; preds = %dec_label_pc_10005f3c.dec_label_pc_10005ff0_crit_edge, %dec_label_pc_10005fe0
  %v0_10006000 = phi i32 [ %v0_10006000.pre, %dec_label_pc_10005f3c.dec_label_pc_10005ff0_crit_edge ], [ %storemerge, %dec_label_pc_10005fe0 ]
  ret i32 %v0_10006000

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005fc8
  store i32 %v2_10005fc0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006020, i32* @global_var_1001c214.103, align 4
  store i32 %v0_10006024, i32* @global_var_1001c218.102, align 4
  store i32 %v2_10005fc0, i32* @global_var_1001c21c.100, align 4
  store i32 %v0_1000603c, i32* @global_var_1001c210.101, align 4
  %v1_10006040 = trunc i32 %v2_10005fc0 to i8
  %v2_10006040 = load i32, i32* @r3, align 4
  %v3_10006040 = inttoptr i32 %v2_10006040 to i8*
  store i8 %v1_10006040, i8* %v3_10006040, align 1
  %v0_10006044 = load i32, i32* @r3, align 4
  ret i32 %v0_10006044

; uselistorder directives
  uselistorder i32 %v2_10005fc0, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10006004, { 1, 0 }
  uselistorder i32 %v0_10006024, { 1, 2, 0 }
  uselistorder i32 %v0_10005f3c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005ff0, { 1, 0 }
  uselistorder label %dec_label_pc_10005f9c, { 1, 0 }
}

define i32 @function_10006048(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006048:
  store i32 %arg1, i32* @r31, align 4
  %v3_10006054 = icmp eq i32 %arg1, 0
  br i1 %v3_10006054, label %dec_label_pc_10006078, label %dec_label_pc_10006060

dec_label_pc_10006060:                            ; preds = %dec_label_pc_10006048
  %v1_10006060 = add i32 %arg1, 4
  %v2_10006060 = inttoptr i32 %v1_10006060 to i32*
  %v3_10006060 = load i32, i32* %v2_10006060, align 4
  store i32 %v3_10006060, i32* @r3, align 4
  %v3_10006064 = icmp eq i32 %v3_10006060, 0
  br i1 %v3_10006064, label %dec_label_pc_10006070, label %dec_label_pc_1000606c

dec_label_pc_1000606c:                            ; preds = %dec_label_pc_10006060
  store i32 268460144, i32* @lr, align 4
  %v0_1000606c = call i32 @function_10009f08()
  %v0_10006070.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006070

dec_label_pc_10006070:                            ; preds = %dec_label_pc_10006060, %dec_label_pc_1000606c
  %v0_10006070 = phi i32 [ %arg1, %dec_label_pc_10006060 ], [ %v0_10006070.pre, %dec_label_pc_1000606c ]
  store i32 %v0_10006070, i32* @r3, align 4
  store i32 268460152, i32* @lr, align 4
  %v0_10006074 = call i32 @function_10009f08()
  br label %dec_label_pc_10006078

dec_label_pc_10006078:                            ; preds = %dec_label_pc_10006048, %dec_label_pc_10006070
  %v0_10006088 = phi i32 [ 0, %dec_label_pc_10006048 ], [ %v0_10006074, %dec_label_pc_10006070 ]
  ret i32 %v0_10006088

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006078, { 1, 0 }
  uselistorder label %dec_label_pc_10006070, { 1, 0 }
}

define i32 @function_1000608c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000608c:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10006090 = load i32, i32* @lr, align 4
  store i32 %v0_10006090, i32* %r0.global-to-local, align 4
  %v0_10006094 = call i32 @__asm_mfcr()
  %v0_1000609c = load i32, i32* @r29, align 4
  store i32 %v0_10006094, i32* @r29, align 4
  %v2_100060b0 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_100060b8 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_100060b8, i32* %r26.global-to-local, align 4
  %v0_100060bc = load i32, i32* %r0.global-to-local, align 4
  %v0_100060e0 = load i32, i32* @r30, align 4
  store i32 268460268, i32* @lr, align 4
  %v2_100060e8 = call i32 @function_10009e98(i32 1, i32 8)
  store i32 %v2_100060e8, i32* %r25.global-to-local, align 4
  %v0_100060f0 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100060f8.104 to i32), i32* @lr, align 4
  %v1_100060f4 = inttoptr i32 %v0_100060f0 to i8*
  %v2_100060f4 = call i32 @function_10008660(i8* %v1_100060f4)
  %v2_100060f8 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_100060f8, i32* %r11.global-to-local, align 4
  %v1_100060fc = add i32 %v2_100060f4, 1
  store i32 %v2_100060b8, i32* %r8.global-to-local, align 4
  %v1_10006104 = icmp slt i32 %v1_100060fc, 0
  %v1_10006108 = add i32 %v2_100060f4, 2
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %v1_10006108, i32* %ctr.global-to-local, align 4
  br i1 %v1_10006104, label %dec_label_pc_10006118.thread, label %dec_label_pc_10006118

dec_label_pc_10006118:                            ; preds = %dec_label_pc_1000608c
  %v3_10006104 = icmp eq i32 %v1_100060fc, 0
  store i32 %v1_100060fc, i32* %ctr.global-to-local, align 4
  br i1 %v3_10006104, label %dec_label_pc_10006148, label %dec_label_pc_1000611c.preheader

dec_label_pc_1000611c.preheader:                  ; preds = %dec_label_pc_10006118
  %v0_1000611c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000611c

dec_label_pc_1000611c:                            ; preds = %dec_label_pc_1000611c.preheader, %dec_label_pc_10006144
  %v2_10006134 = phi i32 [ %v2_100060f8, %dec_label_pc_1000611c.preheader ], [ %v2_1000613418, %dec_label_pc_10006144 ]
  %v0_10006340 = phi i32 [ 0, %dec_label_pc_1000611c.preheader ], [ %v0_1000612c16, %dec_label_pc_10006144 ]
  %v0_1000611c = phi i32 [ %v0_1000611c.pre, %dec_label_pc_1000611c.preheader ], [ %v0_1000611c14, %dec_label_pc_10006144 ]
  %v1_1000611c = inttoptr i32 %v0_1000611c to i8*
  %v2_1000611c = load i8, i8* %v1_1000611c, align 1
  %v3_1000611c = zext i8 %v2_1000611c to i32
  store i32 %v3_1000611c, i32* %r0.global-to-local, align 4
  %v3_10006120 = icmp eq i8 %v2_1000611c, 46
  br i1 %v3_10006120, label %dec_label_pc_10006340, label %dec_label_pc_1000612c

dec_label_pc_1000612c:                            ; preds = %dec_label_pc_1000611c
  %v3_10006124 = icmp eq i8 %v2_1000611c, 0
  %v1_1000612c = add nsw i32 %v0_10006340, 1
  store i32 %v1_1000612c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006124, label %dec_label_pc_10006340, label %dec_label_pc_10006134

dec_label_pc_10006134:                            ; preds = %dec_label_pc_1000612c
  %v3_10006134 = inttoptr i32 %v2_10006134 to i8*
  store i8 %v2_1000611c, i8* %v3_10006134, align 1
  %v0_10006138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006138 = urem i32 %v0_10006138, 256
  store i32 %v1_10006138, i32* %r10.global-to-local, align 4
  %v0_1000613c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000613c = add i32 %v0_1000613c, 1
  store i32 %v1_1000613c, i32* %r11.global-to-local, align 4
  %v0_10006140 = load i32, i32* @r29, align 4
  %v1_10006140 = add i32 %v0_10006140, 1
  store i32 %v1_10006140, i32* @r29, align 4
  br label %dec_label_pc_10006144

dec_label_pc_10006144:                            ; preds = %dec_label_pc_10006340, %dec_label_pc_10006134
  %v2_1000613418 = phi i32 [ %v1_10006350, %dec_label_pc_10006340 ], [ %v1_1000613c, %dec_label_pc_10006134 ]
  %v0_1000612c16 = phi i32 [ 0, %dec_label_pc_10006340 ], [ %v1_10006138, %dec_label_pc_10006134 ]
  %v0_1000611c14 = phi i32 [ %v1_10006344, %dec_label_pc_10006340 ], [ %v1_10006140, %dec_label_pc_10006134 ]
  %v0_10006144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006144 = add i32 %v0_10006144, -1
  store i32 %v1_10006144, i32* %ctr.global-to-local, align 4
  %v2_10006144 = icmp eq i32 %v1_10006144, 0
  br i1 %v2_10006144, label %dec_label_pc_10006148, label %dec_label_pc_1000611c

dec_label_pc_10006148:                            ; preds = %dec_label_pc_10006144, %dec_label_pc_10006118.thread, %dec_label_pc_10006118
  %v2_10006150 = phi i32 [ %v2_100060f8, %dec_label_pc_10006118 ], [ %v2_100060f8, %dec_label_pc_10006118.thread ], [ %v2_1000613418, %dec_label_pc_10006144 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10006150 = inttoptr i32 %v2_10006150 to i8*
  store i8 0, i8* %v3_10006150, align 1
  %v2_10006154 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r28, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006164.105 to i32), i32* @lr, align 4
  %v1_10006160 = bitcast i32* %stack_var_-4144 to i8*
  %v2_10006160 = call i32 @function_10008660(i8* %v1_10006160)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10006168 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006168 = add i32 %v0_10006168, %v2_10006160
  store i32 %v2_10006168, i32* %r29.global-to-local, align 4
  %v0_10006174 = load i32, i32* @r28, align 4
  %v3_10006174 = icmp eq i32 %v0_10006174, -1
  store i1 %v3_10006174, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_1000617c = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_1000617c, i32* @r31, align 4
  %v2_10006184 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10006184, i32* %r19.global-to-local, align 4
  store i32 268460432, i32* @lr, align 4
  %v2_1000618c = call i32 @function_10008660(i8* %v1_10006160)
  %v1_10006190 = add i32 %v2_1000618c, 17
  store i32 %v1_10006190, i32* %r23.global-to-local, align 4
  %v0_10006194 = call i32 @function_10005d68()
  %v1_10006194 = sext i32 %v0_10006194 to i64
  store i32 16, i32* @r4, align 4
  %v5_100061a8 = mul nuw nsw i64 %v1_10006194, 2147516417
  store i32 %v2_10006154, i32* @r3, align 4
  %v2_100061b0 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_100061b0, i32* %r20.global-to-local, align 4
  %v1_100061b42 = udiv i64 %v5_100061a8, 140737488355328
  %v1_100061b4 = trunc i64 %v1_100061b42 to i32
  store i32 %v1_100061b4, i32* %r0.global-to-local, align 4
  %v2_100061b8 = add i32 %v1_100061b4, %v0_10006194
  store i32 %v2_100061b8, i32* %r9.global-to-local, align 4
  %v1_100061bc = urem i32 %v2_100061b8, 65536
  store i32 %v1_100061bc, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100061c4.107 to i32), i32* @lr, align 4
  %v0_100061c0 = call i32 @function_10008708()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_100061d8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100061d8 = add i32 %v0_100061d8, 1
  store i32 %v1_100061d8, i32* %r8.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100061f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100061f0, i32* %stack_var_-4156, align 4
  %v3_100061f8 = add i32 %v0_100061d8, 3
  %v4_100061f8 = inttoptr i32 %v3_100061f8 to i16*
  store i16 1, i16* %v4_100061f8, align 2
  %v0_100061fc = load i32, i32* %r10.global-to-local, align 4
  %v1_100061fc = trunc i32 %v0_100061fc to i16
  %v2_100061fc = load i32, i32* %r29.global-to-local, align 4
  %v3_100061fc = add i32 %v2_100061fc, 1
  %v4_100061fc = inttoptr i32 %v3_100061fc to i16*
  store i16 %v1_100061fc, i16* %v4_100061fc, align 2
  %v2_100062a0 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_100062d4 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_100063d4 = bitcast i32* %stack_var_-2096 to i8*
  %v4_100063ec = zext i16 %tmp55 to i32
  %v3_100063f0 = icmp eq i16 %tmp55, 0
  br label %dec_label_pc_10006200

dec_label_pc_10006200:                            ; preds = %dec_label_pc_10006338, %dec_label_pc_10006148
  %v0_10006200 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006200, label %dec_label_pc_1000620c, label %dec_label_pc_10006204

dec_label_pc_10006204:                            ; preds = %dec_label_pc_10006200
  store i32 ptrtoint ([3 x i8]* @global_var_1000620c.108 to i32), i32* @lr, align 4
  %v0_10006208 = call i32 @function_10008e20()
  br label %dec_label_pc_1000620c

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_10006200, %dec_label_pc_10006204
  store i32 268460572, i32* @lr, align 4
  %v3_10006218 = call i32 @function_10009b3c(i32 2, i32 2, i32 0)
  store i32 %v3_10006218, i32* @r3, align 4
  %v3_1000621c = icmp eq i32 %v3_10006218, -1
  store i1 %v3_1000621c, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10006218, i32* @r28, align 4
  br i1 %v3_1000621c, label %dec_label_pc_10006358, label %dec_label_pc_10006228

dec_label_pc_10006228:                            ; preds = %dec_label_pc_1000620c
  store i32 268460596, i32* @lr, align 4
  %v0_10006230 = call i32 @function_1000993c()
  %v3_10006234 = icmp eq i32 %v0_10006230, -1
  br i1 %v3_10006234, label %dec_label_pc_10006358, label %dec_label_pc_1000623c

dec_label_pc_1000623c:                            ; preds = %dec_label_pc_10006228
  %v0_1000623c = load i32, i32* @r28, align 4
  %v0_10006244 = load i32, i32* %r23.global-to-local, align 4
  store i32 268460624, i32* @lr, align 4
  %v4_1000624c = call i32 @function_10009a88(i32 %v0_1000623c, i32 %v2_100060b0, i32 %v0_10006244, i32 16384)
  %v3_10006250 = icmp eq i32 %v4_1000624c, -1
  br i1 %v3_10006250, label %dec_label_pc_10006358, label %dec_label_pc_10006258

dec_label_pc_10006258:                            ; preds = %dec_label_pc_1000623c
  %v0_10006258 = load i32, i32* @r28, align 4
  store i32 %v0_10006258, i32* @r4, align 4
  store i32 268460652, i32* @lr, align 4
  %v2_10006268 = call i32 @function_10008d38(i32 3)
  %v0_1000626c = load i32, i32* @r28, align 4
  store i32 %v0_1000626c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10006280.109 to i32), i32* @lr, align 4
  %v2_1000627c = call i32 @function_10008d38(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006290133 = load i32, i32* @r31, align 4
  %v4_10006290135 = inttoptr i32 %v2_10006290133 to i32*
  store i32 0, i32* %v4_10006290135, align 4
  %v0_10006294136 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006294137 = add i32 %v0_10006294136, 4
  store i32 %v1_10006294137, i32* %r9.global-to-local, align 4
  %v0_10006298138 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006298139 = add i32 %v0_10006298138, -1
  store i32 %v1_10006298139, i32* %ctr.global-to-local, align 4
  %v2_10006298140 = icmp eq i32 %v1_10006298139, 0
  br i1 %v2_10006298140, label %dec_label_pc_1000629c, label %dec_label_pc_10006290.dec_label_pc_10006290_crit_edge

dec_label_pc_10006290.dec_label_pc_10006290_crit_edge: ; preds = %dec_label_pc_10006258, %dec_label_pc_10006290.dec_label_pc_10006290_crit_edge
  %v1_10006294141 = phi i32 [ %v1_10006294, %dec_label_pc_10006290.dec_label_pc_10006290_crit_edge ], [ %v1_10006294137, %dec_label_pc_10006258 ]
  %v0_10006290.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_10006290 = load i32, i32* @r31, align 4
  %v3_10006290 = add i32 %v2_10006290, %v1_10006294141
  %v4_10006290 = inttoptr i32 %v3_10006290 to i32*
  store i32 %v0_10006290.pre, i32* %v4_10006290, align 4
  %v0_10006294 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006294 = add i32 %v0_10006294, 4
  store i32 %v1_10006294, i32* %r9.global-to-local, align 4
  %v0_10006298 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006298 = add i32 %v0_10006298, -1
  store i32 %v1_10006298, i32* %ctr.global-to-local, align 4
  %v2_10006298 = icmp eq i32 %v1_10006298, 0
  br i1 %v2_10006298, label %dec_label_pc_1000629c, label %dec_label_pc_10006290.dec_label_pc_10006290_crit_edge

dec_label_pc_1000629c:                            ; preds = %dec_label_pc_10006290.dec_label_pc_10006290_crit_edge, %dec_label_pc_10006258
  %v0_1000629c = load i32, i32* @r28, align 4
  %v1_1000629c = call i32 @__asm_rlwinm(i32 %v0_1000629c, i32 29, i32 3, i32 29)
  store i32 %v1_1000629c, i32* %r9.global-to-local, align 4
  store i32 %v2_100062a0, i32* %r0.global-to-local, align 4
  %v2_100062a4 = add i32 %v1_1000629c, %v2_100062a0
  store i32 %v2_100062a4, i32* %r29.global-to-local, align 4
  %v0_100062a8 = load i32, i32* @r28, align 4
  %v1_100062a8 = urem i32 %v0_100062a8, 32
  store i32 %v1_100062a8, i32* %r30.global-to-local, align 4
  %v1_100062ac = add i32 %v2_100062a4, 28
  %v2_100062ac = inttoptr i32 %v1_100062ac to i32*
  %v3_100062ac = load i32, i32* %v2_100062ac, align 4
  %v3_100062b4 = shl i32 1, %v1_100062a8
  %v1_100062b8 = add i32 %v0_100062a8, 1
  %v2_100062bc = or i32 %v3_100062b4, %v3_100062ac
  store i32 %v2_100062bc, i32* %r9.global-to-local, align 4
  store i32 %v2_100062bc, i32* %v2_100062ac, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268460772, i32* @lr, align 4
  %v5_100062e0 = call i32 @function_100090e8(i32 %v1_100062b8, i32 %v2_1000617c, i32 0, i32 0, i32 %v2_100062d4)
  %v3_100062e4 = icmp eq i32 %v5_100062e0, -1
  br i1 %v3_100062e4, label %dec_label_pc_10006330, label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_1000629c
  %v0_100062ec = load i32, i32* %r29.global-to-local, align 4
  %v1_100062ec = add i32 %v0_100062ec, 28
  %v2_100062ec = inttoptr i32 %v1_100062ec to i32*
  %v3_100062ec = load i32, i32* %v2_100062ec, align 4
  %v1_100062f0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100062f0 = urem i32 %v1_100062f0, 32
  %v3_100062f0 = sub i32 0, %v1_100062f0
  %v4_100062f0 = urem i32 %v3_100062f0, 32
  %v5_100062f0 = shl i32 %v3_100062ec, %v4_100062f0
  %v6_100062f0 = xor i32 %v4_100062f0, 31
  %v7_100062f0 = lshr i32 %v3_100062ec, %v6_100062f0
  %v8_100062f0 = udiv i32 %v7_100062f0, 2
  %v9_100062f0 = or i32 %v8_100062f0, %v5_100062f0
  %v10_100062f0 = and i32 %v1_100062f0, 32
  %v11_100062f0 = icmp ne i32 %v10_100062f0, 0
  %v12_100062f0 = lshr i32 -1, %v2_100062f0
  %v13_100062f0 = select i1 %v11_100062f0, i32 0, i32 %v12_100062f0
  %v14_100062f0 = and i32 %v9_100062f0, %v13_100062f0
  %v15_100062f0 = ashr i32 %v3_100062ec, 31
  %v16_100062f0 = sub i32 -1, %v13_100062f0
  %v17_100062f0 = and i32 %v15_100062f0, %v16_100062f0
  %v18_100062f0 = or i32 %v14_100062f0, %v17_100062f0
  store i32 %v18_100062f0, i32* %r0.global-to-local, align 4
  %v1_100062f4 = urem i32 %v18_100062f0, 2
  store i32 %v1_100062f4, i32* %r9.global-to-local, align 4
  %v3_100062f4 = icmp eq i32 %v1_100062f4, 0
  br i1 %v3_100062f4, label %dec_label_pc_10006368, label %dec_label_pc_100062fc

dec_label_pc_100062fc:                            ; preds = %dec_label_pc_100062ec
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10006310 = load i32, i32* @r28, align 4
  store i32 268460824, i32* @lr, align 4
  %v6_10006314 = call i32 @function_10009a48(i32 %v0_10006310, i32 %v2_10006184, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10006314, i32* %r29.global-to-local, align 4
  %v0_1000631c = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006324.110 to i32), i32* @lr, align 4
  %v1_10006320 = inttoptr i32 %v0_1000631c to i8*
  %v2_10006320 = call i32 @function_10008660(i8* %v1_10006320)
  %v1_10006324 = add i32 %v2_10006320, 17
  %v2_10006328 = icmp ult i32 %v6_10006314, %v1_10006324
  br i1 %v2_10006328, label %dec_label_pc_10006330, label %dec_label_pc_100063cc

dec_label_pc_10006330:                            ; preds = %dec_label_pc_100063cc, %dec_label_pc_100062fc, %dec_label_pc_100063ec, %dec_label_pc_1000629c
  %v0_10006330 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006330 = icmp eq i32 %v0_10006330, 5
  br i1 %v3_10006330, label %dec_label_pc_10006368, label %dec_label_pc_10006338

dec_label_pc_10006338:                            ; preds = %dec_label_pc_10006358, %dec_label_pc_10006330
  %v0_10006338 = phi i32 [ %v0_10006360, %dec_label_pc_10006358 ], [ %v0_10006330, %dec_label_pc_10006330 ]
  %v1_10006338 = add i32 %v0_10006338, 1
  store i32 %v1_10006338, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10006200

dec_label_pc_10006340:                            ; preds = %dec_label_pc_1000612c, %dec_label_pc_1000611c
  %v1_10006340 = trunc i32 %v0_10006340 to i8
  %v2_10006340 = load i32, i32* %r8.global-to-local, align 4
  %v3_10006340 = inttoptr i32 %v2_10006340 to i8*
  store i8 %v1_10006340, i8* %v3_10006340, align 1
  %v0_10006344 = load i32, i32* @r29, align 4
  %v1_10006344 = add i32 %v0_10006344, 1
  store i32 %v1_10006344, i32* @r29, align 4
  %v0_10006348 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006348, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006350 = add i32 %v0_10006348, 1
  store i32 %v1_10006350, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006144

dec_label_pc_10006358:                            ; preds = %dec_label_pc_1000623c, %dec_label_pc_10006228, %dec_label_pc_1000620c
  store i32 268460896, i32* @lr, align 4
  %v1_1000635c = call i32 @function_1000a634(i32 1)
  %v0_10006360 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006360 = icmp eq i32 %v0_10006360, 5
  br i1 %v3_10006360, label %dec_label_pc_10006368, label %dec_label_pc_10006338

dec_label_pc_10006368:                            ; preds = %dec_label_pc_10006358, %dec_label_pc_10006330, %dec_label_pc_100062ec, %dec_label_pc_100063f8.backedge, %dec_label_pc_100063f8.preheader
  store i32 268460912, i32* @lr, align 4
  %v0_1000636c = call i32 @function_10008e20()
  %v0_10006370 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006370 = inttoptr i32 %v0_10006370 to i8*
  %v2_10006370 = load i8, i8* %v1_10006370, align 1
  %v3_10006370 = zext i8 %v2_10006370 to i32
  store i32 %v3_10006370, i32* %r0.global-to-local, align 4
  %v3_10006374 = icmp eq i8 %v2_10006370, 0
  br i1 %v3_10006374, label %dec_label_pc_100064e4, label %dec_label_pc_1000637c

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_10006368, %dec_label_pc_100064f4
  %v0_10006380 = phi i32 [ %v0_10006370, %dec_label_pc_10006368 ], [ 0, %dec_label_pc_100064f4 ]
  store i32 %v0_100060bc, i32* %r0.global-to-local, align 4
  %v1_10006394 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006094)
  store i32 %v0_1000609c, i32* %r29.global-to-local, align 4
  store i32 %v0_100060e0, i32* %r30.global-to-local, align 4
  ret i32 %v0_10006380

dec_label_pc_100063cc:                            ; preds = %dec_label_pc_100062fc
  store i32 %v2_100061b0, i32* %r26.global-to-local, align 4
  store i32 268461016, i32* @lr, align 4
  %v2_100063d4 = call i32 @function_10008660(i8* %v1_100063d4)
  %v3_100063d8 = load i16, i16* %stack_var_-2108, align 2
  %v4_100063d8 = sext i16 %v3_100063d8 to i32
  store i32 %v4_100063d8, i32* %r0.global-to-local, align 4
  %v0_100063dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100063e0 = load i32, i32* %r22.global-to-local, align 4
  %v4_100063e0 = icmp eq i32 %v4_100063d8, %v1_100063e0
  %v2_100063dc = add i32 %v2_100063d4, 5
  %v1_100063e4 = add i32 %v2_100063dc, %v0_100063dc
  br i1 %v4_100063e0, label %dec_label_pc_100063ec, label %dec_label_pc_10006330

dec_label_pc_100063ec:                            ; preds = %dec_label_pc_100063cc
  store i32 %v4_100063ec, i32* %r29.global-to-local, align 4
  br i1 %v3_100063f0, label %dec_label_pc_10006330, label %dec_label_pc_100063f8.preheader

dec_label_pc_100063f8.preheader:                  ; preds = %dec_label_pc_100063ec
  %v1_100063f88 = add nsw i32 %v4_100063ec, -1
  store i32 %v1_100063f88, i32* %r0.global-to-local, align 4
  %v1_100064009 = urem i32 %v1_100063f88, 65536
  store i32 %v1_100064009, i32* @r29, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000640811 = icmp eq i32 %v1_100064009, 65535
  br i1 %v4_1000640811, label %dec_label_pc_10006368, label %dec_label_pc_10006410

dec_label_pc_10006410:                            ; preds = %dec_label_pc_100063f8.preheader, %dec_label_pc_100063f8.backedge
  %v0_100063f845 = phi i32 [ %v1_10006400, %dec_label_pc_100063f8.backedge ], [ %v1_100064009, %dec_label_pc_100063f8.preheader ]
  %v0_1000646c = phi i32 [ %storemerge, %dec_label_pc_100063f8.backedge ], [ %v1_100063e4, %dec_label_pc_100063f8.preheader ]
  store i32 %v0_1000646c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_1000641c104 = inttoptr i32 %v0_1000646c to i8*
  %v2_1000641c105 = load i8, i8* %v1_1000641c104, align 1
  %v3_1000641c106 = zext i8 %v2_1000641c105 to i32
  store i32 %v3_1000641c106, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006424107 = icmp eq i8 %v2_1000641c105, 0
  %v1_10006428108 = mul nuw nsw i32 %v3_1000641c106, 256
  store i32 %v1_10006428108, i32* %r10.global-to-local, align 4
  br i1 %v3_10006424107, label %dec_label_pc_10006468, label %dec_label_pc_10006434.preheader

dec_label_pc_10006434.preheader:                  ; preds = %dec_label_pc_10006410, %dec_label_pc_10006504
  %v2_1000641c113 = phi i8 [ %v2_1000641c, %dec_label_pc_10006504 ], [ %v2_1000641c105, %dec_label_pc_10006410 ]
  %v3_1000642c116.in = phi i8 [ %v2_1000641c, %dec_label_pc_10006504 ], [ %v2_1000641c105, %dec_label_pc_10006410 ]
  %v1_10006428115 = phi i32 [ %v1_10006428, %dec_label_pc_10006504 ], [ %v1_10006428108, %dec_label_pc_10006410 ]
  %v1_10006420114 = phi i32 [ %v1_10006420, %dec_label_pc_10006504 ], [ 1, %dec_label_pc_10006410 ]
  %v0_1000641c112 = phi i32 [ %v1_10006508, %dec_label_pc_10006504 ], [ %v0_1000646c, %dec_label_pc_10006410 ]
  %v0_10006420111 = phi i32 [ %v0_1000642024, %dec_label_pc_10006504 ], [ 0, %dec_label_pc_10006410 ]
  %v0_10006468110 = phi i32 [ %v2_10006504, %dec_label_pc_10006504 ], [ 1, %dec_label_pc_10006410 ]
  br label %dec_label_pc_10006434

dec_label_pc_10006434:                            ; preds = %dec_label_pc_10006434.preheader, %dec_label_pc_10006438
  %v1_10006504 = phi i32 [ 0, %dec_label_pc_10006438 ], [ %v1_10006420114, %dec_label_pc_10006434.preheader ]
  %v0_10006444 = phi i32 [ %v1_1000645c, %dec_label_pc_10006438 ], [ %v1_10006428115, %dec_label_pc_10006434.preheader ]
  %v0_10006508 = phi i32 [ %v2_10006450, %dec_label_pc_10006438 ], [ %v0_1000641c112, %dec_label_pc_10006434.preheader ]
  %v0_10006434.in = phi i8 [ %v2_10006454, %dec_label_pc_10006438 ], [ %v3_1000642c116.in, %dec_label_pc_10006434.preheader ]
  %v1_10006434.in = phi i8 [ %v2_10006454, %dec_label_pc_10006438 ], [ %v2_1000641c113, %dec_label_pc_10006434.preheader ]
  %v0_1000642024 = phi i32 [ 1, %dec_label_pc_10006438 ], [ %v0_10006420111, %dec_label_pc_10006434.preheader ]
  %v0_10006434 = icmp eq i8 %v0_10006434.in, -65
  %v1_10006434 = icmp ult i8 %v1_10006434.in, -65
  %v2_10006434 = or i1 %v0_10006434, %v1_10006434
  br i1 %v2_10006434, label %dec_label_pc_10006504, label %dec_label_pc_10006438

dec_label_pc_10006438:                            ; preds = %dec_label_pc_10006434
  %v1_10006438 = add i32 %v0_10006508, 1
  %v2_10006438 = inttoptr i32 %v1_10006438 to i8*
  %v3_10006438 = load i8, i8* %v2_10006438, align 1
  %v4_10006438 = zext i8 %v3_10006438 to i32
  store i32 1, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006444 = or i32 %v4_10006438, -49152
  %v1_1000644c = add nsw i32 %v2_10006444, %v0_10006444
  %v0_10006450 = load i32, i32* %r19.global-to-local, align 4
  %v2_10006450 = add i32 %v1_1000644c, %v0_10006450
  store i32 %v2_10006450, i32* %r9.global-to-local, align 4
  %v1_10006454 = inttoptr i32 %v2_10006450 to i8*
  %v2_10006454 = load i8, i8* %v1_10006454, align 1
  %v3_10006454 = zext i8 %v2_10006454 to i32
  store i32 %v3_10006454, i32* %r0.global-to-local, align 4
  %v3_10006458 = icmp eq i8 %v2_10006454, 0
  %v1_1000645c = mul nuw nsw i32 %v3_10006454, 256
  store i32 %v1_1000645c, i32* %r10.global-to-local, align 4
  br i1 %v3_10006458, label %dec_label_pc_10006468, label %dec_label_pc_10006434

dec_label_pc_10006468:                            ; preds = %dec_label_pc_10006410, %dec_label_pc_10006504, %dec_label_pc_10006438
  %v0_1000646897 = phi i32 [ %v0_10006468110, %dec_label_pc_10006438 ], [ 1, %dec_label_pc_10006410 ], [ %v2_10006504, %dec_label_pc_10006504 ]
  %v1_10006468 = phi i32 [ 1, %dec_label_pc_10006438 ], [ 0, %dec_label_pc_10006410 ], [ %v0_1000642024, %dec_label_pc_10006504 ]
  %v2_10006468 = add i32 %v1_10006468, %v0_1000646897
  %v2_1000646c = add i32 %v2_10006468, %v0_1000646c
  %v3_1000646c = inttoptr i32 %v2_1000646c to i16*
  %v4_1000646c = load i16, i16* %v3_1000646c, align 2
  %v5_1000646c = zext i16 %v4_1000646c to i32
  store i32 %v5_1000646c, i32* %r0.global-to-local, align 4
  %v1_10006474 = add i32 %v2_1000646c, 10
  store i32 %v1_10006474, i32* @r30, align 4
  %v3_10006478 = icmp eq i16 %v4_1000646c, 1
  br i1 %v3_10006478, label %dec_label_pc_1000651c, label %dec_label_pc_10006480

dec_label_pc_10006480:                            ; preds = %dec_label_pc_1000651c, %dec_label_pc_10006468
  store i32 %v1_10006474, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_1000648c118 = inttoptr i32 %v1_10006474 to i8*
  %v2_1000648c119 = load i8, i8* %v1_1000648c118, align 1
  %v3_1000648c120 = zext i8 %v2_1000648c119 to i32
  store i32 %v3_1000648c120, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006494121 = icmp eq i8 %v2_1000648c119, 0
  %v1_10006498122 = mul nuw nsw i32 %v3_1000648c120, 256
  store i32 %v1_10006498122, i32* %r10.global-to-local, align 4
  br i1 %v3_10006494121, label %dec_label_pc_100064d8, label %dec_label_pc_100064a4.preheader

dec_label_pc_100064a4.preheader:                  ; preds = %dec_label_pc_10006480, %dec_label_pc_10006510
  %v2_1000648c127 = phi i8 [ %v2_1000648c, %dec_label_pc_10006510 ], [ %v2_1000648c119, %dec_label_pc_10006480 ]
  %v3_1000649c130.in = phi i8 [ %v2_1000648c, %dec_label_pc_10006510 ], [ %v2_1000648c119, %dec_label_pc_10006480 ]
  %v1_10006498129 = phi i32 [ %v1_10006498, %dec_label_pc_10006510 ], [ %v1_10006498122, %dec_label_pc_10006480 ]
  %v1_10006490128 = phi i32 [ %v1_10006490, %dec_label_pc_10006510 ], [ 1, %dec_label_pc_10006480 ]
  %v0_1000648c126 = phi i32 [ %v1_10006514, %dec_label_pc_10006510 ], [ %v1_10006474, %dec_label_pc_10006480 ]
  %v0_10006490125 = phi i32 [ %v0_1000649034, %dec_label_pc_10006510 ], [ 0, %dec_label_pc_10006480 ]
  %v0_100064d8124 = phi i32 [ %v2_10006510, %dec_label_pc_10006510 ], [ 1, %dec_label_pc_10006480 ]
  br label %dec_label_pc_100064a4

dec_label_pc_100064a4:                            ; preds = %dec_label_pc_100064a4.preheader, %dec_label_pc_100064a8
  %v1_10006510 = phi i32 [ 0, %dec_label_pc_100064a8 ], [ %v1_10006490128, %dec_label_pc_100064a4.preheader ]
  %v0_100064b4 = phi i32 [ %v1_100064cc, %dec_label_pc_100064a8 ], [ %v1_10006498129, %dec_label_pc_100064a4.preheader ]
  %v0_10006514 = phi i32 [ %v2_100064c0, %dec_label_pc_100064a8 ], [ %v0_1000648c126, %dec_label_pc_100064a4.preheader ]
  %v0_100064a4.in = phi i8 [ %v2_100064c4, %dec_label_pc_100064a8 ], [ %v3_1000649c130.in, %dec_label_pc_100064a4.preheader ]
  %v1_100064a4.in = phi i8 [ %v2_100064c4, %dec_label_pc_100064a8 ], [ %v2_1000648c127, %dec_label_pc_100064a4.preheader ]
  %v0_1000649034 = phi i32 [ 1, %dec_label_pc_100064a8 ], [ %v0_10006490125, %dec_label_pc_100064a4.preheader ]
  %v0_100064a4 = icmp eq i8 %v0_100064a4.in, -65
  %v1_100064a4 = icmp ult i8 %v1_100064a4.in, -65
  %v2_100064a4 = or i1 %v0_100064a4, %v1_100064a4
  br i1 %v2_100064a4, label %dec_label_pc_10006510, label %dec_label_pc_100064a8

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_100064a4
  %v1_100064a8 = add i32 %v0_10006514, 1
  %v2_100064a8 = inttoptr i32 %v1_100064a8 to i8*
  %v3_100064a8 = load i8, i8* %v2_100064a8, align 1
  %v4_100064a8 = zext i8 %v3_100064a8 to i32
  store i32 1, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100064b4 = or i32 %v4_100064a8, -49152
  %v1_100064bc = add nsw i32 %v2_100064b4, %v0_100064b4
  %v0_100064c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100064c0 = add i32 %v1_100064bc, %v0_100064c0
  store i32 %v2_100064c0, i32* %r9.global-to-local, align 4
  %v1_100064c4 = inttoptr i32 %v2_100064c0 to i8*
  %v2_100064c4 = load i8, i8* %v1_100064c4, align 1
  %v3_100064c4 = zext i8 %v2_100064c4 to i32
  store i32 %v3_100064c4, i32* %r0.global-to-local, align 4
  %v3_100064c8 = icmp eq i8 %v2_100064c4, 0
  %v1_100064cc = mul nuw nsw i32 %v3_100064c4, 256
  store i32 %v1_100064cc, i32* %r10.global-to-local, align 4
  br i1 %v3_100064c8, label %dec_label_pc_100064d8, label %dec_label_pc_100064a4

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_10006480, %dec_label_pc_10006510, %dec_label_pc_100064a8
  %v0_100064d8103 = phi i32 [ %v0_100064d8124, %dec_label_pc_100064a8 ], [ 1, %dec_label_pc_10006480 ], [ %v2_10006510, %dec_label_pc_10006510 ]
  %v1_100064d8 = phi i32 [ 1, %dec_label_pc_100064a8 ], [ 0, %dec_label_pc_10006480 ], [ %v0_1000649034, %dec_label_pc_10006510 ]
  %v2_100064d8 = add i32 %v1_100064d8, %v0_100064d8103
  %v2_100064dc = add i32 %v2_100064d8, %v1_10006474
  br label %dec_label_pc_100063f8.backedge

dec_label_pc_100063f8.backedge:                   ; preds = %dec_label_pc_100064d8, %dec_label_pc_10006588
  %v0_100063f8 = phi i32 [ %v0_100063f845, %dec_label_pc_100064d8 ], [ %v0_100063f8.pre, %dec_label_pc_10006588 ]
  %storemerge = phi i32 [ %v2_100064dc, %dec_label_pc_100064d8 ], [ %v2_1000658c, %dec_label_pc_10006588 ]
  %v1_100063f8 = add i32 %v0_100063f8, -1
  store i32 %v1_100063f8, i32* %r0.global-to-local, align 4
  %v1_10006400 = urem i32 %v1_100063f8, 65536
  store i32 %v1_10006400, i32* @r29, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10006408 = icmp eq i32 %v1_10006400, 65535
  br i1 %v4_10006408, label %dec_label_pc_10006368, label %dec_label_pc_10006410

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_10006368
  %v1_100064e4 = add i32 %v0_10006370, 4
  %v2_100064e4 = inttoptr i32 %v1_100064e4 to i32*
  %v3_100064e4 = load i32, i32* %v2_100064e4, align 4
  store i32 %v3_100064e4, i32* @r3, align 4
  %v3_100064e8 = icmp eq i32 %v3_100064e4, 0
  br i1 %v3_100064e8, label %dec_label_pc_100064f4, label %dec_label_pc_100064f0

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e4
  store i32 268461300, i32* @lr, align 4
  %v0_100064f0 = call i32 @function_10009f08()
  %v0_100064f4.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100064f4

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_100064e4, %dec_label_pc_100064f0
  %v0_100064f4 = phi i32 [ %v0_10006370, %dec_label_pc_100064e4 ], [ %v0_100064f4.pre, %dec_label_pc_100064f0 ]
  store i32 %v0_100064f4, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268461312, i32* @lr, align 4
  %v0_100064fc = call i32 @function_10009f08()
  br label %dec_label_pc_1000637c

dec_label_pc_10006504:                            ; preds = %dec_label_pc_10006434
  %v2_10006504 = add i32 %v1_10006504, %v0_10006468110
  %v1_10006508 = add i32 %v0_10006508, 1
  store i32 %v1_10006508, i32* %r9.global-to-local, align 4
  %v1_1000641c = inttoptr i32 %v1_10006508 to i8*
  %v2_1000641c = load i8, i8* %v1_1000641c, align 1
  %v3_1000641c = zext i8 %v2_1000641c to i32
  store i32 %v3_1000641c, i32* %r0.global-to-local, align 4
  %v1_10006420 = xor i32 %v0_1000642024, 1
  store i32 %v1_10006420, i32* %r11.global-to-local, align 4
  %v3_10006424 = icmp eq i8 %v2_1000641c, 0
  %v1_10006428 = mul nuw nsw i32 %v3_1000641c, 256
  store i32 %v1_10006428, i32* %r10.global-to-local, align 4
  br i1 %v3_10006424, label %dec_label_pc_10006468, label %dec_label_pc_10006434.preheader

dec_label_pc_10006510:                            ; preds = %dec_label_pc_100064a4
  %v2_10006510 = add i32 %v1_10006510, %v0_100064d8124
  %v1_10006514 = add i32 %v0_10006514, 1
  store i32 %v1_10006514, i32* %r9.global-to-local, align 4
  %v1_1000648c = inttoptr i32 %v1_10006514 to i8*
  %v2_1000648c = load i8, i8* %v1_1000648c, align 1
  %v3_1000648c = zext i8 %v2_1000648c to i32
  store i32 %v3_1000648c, i32* %r0.global-to-local, align 4
  %v1_10006490 = xor i32 %v0_1000649034, 1
  store i32 %v1_10006490, i32* %r11.global-to-local, align 4
  %v3_10006494 = icmp eq i8 %v2_1000648c, 0
  %v1_10006498 = mul nuw nsw i32 %v3_1000648c, 256
  store i32 %v1_10006498, i32* %r10.global-to-local, align 4
  br i1 %v3_10006494, label %dec_label_pc_100064d8, label %dec_label_pc_100064a4.preheader

dec_label_pc_1000651c:                            ; preds = %dec_label_pc_10006468
  %v1_1000651c = add i32 %v2_1000646c, 2
  %v2_1000651c = inttoptr i32 %v1_1000651c to i16*
  %v3_1000651c = load i16, i16* %v2_1000651c, align 2
  %v4_1000651c = zext i16 %v3_1000651c to i32
  store i32 %v4_1000651c, i32* %r0.global-to-local, align 4
  %v3_10006520 = icmp eq i16 %v3_1000651c, 1
  br i1 %v3_10006520, label %dec_label_pc_10006528, label %dec_label_pc_10006480

dec_label_pc_10006528:                            ; preds = %dec_label_pc_1000651c
  %v1_10006528 = add i32 %v2_1000646c, 8
  %v2_10006528 = inttoptr i32 %v1_10006528 to i16*
  %v3_10006528 = load i16, i16* %v2_10006528, align 2
  %v4_10006528 = zext i16 %v3_10006528 to i32
  store i32 %v4_10006528, i32* %r0.global-to-local, align 4
  %v3_1000652c = icmp eq i16 %v3_10006528, 4
  br i1 %v3_1000652c, label %dec_label_pc_10006534, label %dec_label_pc_10006588

dec_label_pc_10006534:                            ; preds = %dec_label_pc_10006528
  %v2_10006534 = inttoptr i32 %v1_10006474 to i8*
  %v3_10006534 = load i8, i8* %v2_10006534, align 1
  %v4_10006534 = zext i8 %v3_10006534 to i32
  store i32 %v4_10006534, i32* %r0.global-to-local, align 4
  store i32 %v4_10006534, i32* %stack_var_-4312, align 4
  %v1_1000653c = add i32 %v2_1000646c, 11
  %v2_1000653c = inttoptr i32 %v1_1000653c to i8*
  %v3_1000653c = load i8, i8* %v2_1000653c, align 1
  %v4_1000653c = zext i8 %v3_1000653c to i32
  store i32 %v4_1000653c, i32* %r9.global-to-local, align 4
  %v1_10006544 = add i32 %v2_1000646c, 12
  %v2_10006544 = inttoptr i32 %v1_10006544 to i8*
  %v3_10006544 = load i8, i8* %v2_10006544, align 1
  %v4_10006544 = zext i8 %v3_10006544 to i32
  store i32 %v4_10006544, i32* %r0.global-to-local, align 4
  %v1_1000654c = add i32 %v2_1000646c, 13
  %v2_1000654c = inttoptr i32 %v1_1000654c to i8*
  %v3_1000654c = load i8, i8* %v2_1000654c, align 1
  %v4_1000654c = zext i8 %v3_1000654c to i32
  store i32 %v4_1000654c, i32* %r9.global-to-local, align 4
  %v0_10006554 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006554 = inttoptr i32 %v0_10006554 to i8*
  %v2_10006554 = load i8, i8* %v1_10006554, align 1
  %v3_10006554 = zext i8 %v2_10006554 to i32
  %v1_10006558 = add i32 %v0_10006554, 4
  %v2_10006558 = inttoptr i32 %v1_10006558 to i32*
  %v3_10006558 = load i32, i32* %v2_10006558, align 4
  %v1_1000655c = mul nuw nsw i32 %v3_10006554, 4
  %v1_10006560 = add nuw nsw i32 %v1_1000655c, 4
  store i32 268461416, i32* @lr, align 4
  %v4_10006564 = call i32 @function_1000a008(i32 %v3_10006558, i32 %v1_10006560, i32 %v2_10006468)
  %v0_10006568 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006568 = inttoptr i32 %v0_10006568 to i8*
  %v2_10006568 = load i8, i8* %v1_10006568, align 1
  %v3_10006568 = zext i8 %v2_10006568 to i32
  %v3_1000656c = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_1000656c, i32* %r0.global-to-local, align 4
  %v1_10006570 = add nuw nsw i32 %v3_10006568, 1
  store i32 %v1_10006570, i32* %r11.global-to-local, align 4
  %v1_10006574 = mul nuw nsw i32 %v3_10006568, 4
  store i32 %v1_10006574, i32* %r9.global-to-local, align 4
  %v3_10006578 = add i32 %v1_10006574, %v4_10006564
  %v4_10006578 = inttoptr i32 %v3_10006578 to i32*
  store i32 %v3_1000656c, i32* %v4_10006578, align 4
  %v0_1000657c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000657c = trunc i32 %v0_1000657c to i8
  %v2_1000657c = load i32, i32* %r25.global-to-local, align 4
  %v3_1000657c = inttoptr i32 %v2_1000657c to i8*
  store i8 %v1_1000657c, i8* %v3_1000657c, align 1
  %v1_10006580 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006580 = add i32 %v1_10006580, 4
  %v3_10006580 = inttoptr i32 %v2_10006580 to i32*
  store i32 %v4_10006564, i32* %v3_10006580, align 4
  %v0_10006584 = load i32, i32* @r31, align 4
  %v1_10006584 = add i32 %v0_10006584, 8
  %v2_10006584 = inttoptr i32 %v1_10006584 to i16*
  %v3_10006584 = load i16, i16* %v2_10006584, align 2
  %v4_10006584 = zext i16 %v3_10006584 to i32
  store i32 %v4_10006584, i32* %r0.global-to-local, align 4
  %v0_1000658c.pre = load i32, i32* @r30, align 4
  %v0_100063f8.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006588

dec_label_pc_10006588:                            ; preds = %dec_label_pc_10006528, %dec_label_pc_10006534
  %v0_100063f8.pre = phi i32 [ %v0_100063f845, %dec_label_pc_10006528 ], [ %v0_100063f8.pre.pre, %dec_label_pc_10006534 ]
  %v0_1000658c = phi i32 [ %v1_10006474, %dec_label_pc_10006528 ], [ %v0_1000658c.pre, %dec_label_pc_10006534 ]
  %v0_10006588 = phi i32 [ %v4_10006528, %dec_label_pc_10006528 ], [ %v4_10006584, %dec_label_pc_10006534 ]
  store i32 %v0_10006588, i32* %r0.global-to-local, align 4
  %v2_1000658c = add i32 %v0_10006588, %v0_1000658c
  br label %dec_label_pc_100063f8.backedge

dec_label_pc_10006118.thread:                     ; preds = %dec_label_pc_1000608c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006148

; uselistorder directives
  uselistorder i32 %v1_10006574, { 1, 0 }
  uselistorder i32 %v4_10006564, { 1, 0 }
  uselistorder i32 %v1_10006490, { 1, 0 }
  uselistorder i8 %v2_1000648c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006514, { 1, 2, 0 }
  uselistorder i32 %v2_10006510, { 1, 0 }
  uselistorder i32 %v1_10006420, { 1, 0 }
  uselistorder i8 %v2_1000641c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006508, { 1, 2, 0 }
  uselistorder i32 %v2_10006504, { 1, 0 }
  uselistorder i32 %v1_10006400, { 1, 0, 2 }
  uselistorder i8 %v2_100064c4, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100064c0, { 1, 2, 0 }
  uselistorder i32 %v0_1000649034, { 2, 0, 1 }
  uselistorder i32 %v0_100064d8124, { 1, 0 }
  uselistorder i32 %v1_10006498122, { 1, 0 }
  uselistorder i32 %v1_10006474, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v2_10006468, { 1, 0 }
  uselistorder i8 %v2_10006454, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10006450, { 1, 2, 0 }
  uselistorder i32 %v0_1000642024, { 2, 0, 1 }
  uselistorder i32 %v0_10006468110, { 1, 0 }
  uselistorder i32 %v1_10006428108, { 1, 0 }
  uselistorder i32 %v0_1000646c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100064009, { 2, 1, 0 }
  uselistorder i32 %v0_10006370, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10006360, { 1, 0 }
  uselistorder i32 %v1_10006350, { 1, 0 }
  uselistorder i32 %v1_10006344, { 1, 0 }
  uselistorder i32 %v1_100062f4, { 1, 0 }
  uselistorder i32 %v4_100062f0, { 1, 0 }
  uselistorder i32 %v1_100062f0, { 1, 2, 0 }
  uselistorder i32 %v3_100062ec, { 2, 1, 0 }
  uselistorder i32 %v1_100062a8, { 1, 0 }
  uselistorder i32 %v0_100062a8, { 1, 0 }
  uselistorder i32 %v1_10006298, { 1, 0 }
  uselistorder i32 %v1_10006294, { 1, 0 }
  uselistorder i32 %v1_10006144, { 1, 0 }
  uselistorder i32 %v1_10006138, { 1, 0 }
  uselistorder i32 %v1_100060fc, { 0, 2, 1 }
  uselistorder i32 %v0_10006094, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp55, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 22, 10, 11, 15, 12, 20, 21, 13, 14, 16, 17, 18, 19 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 5, 4, 0, 1, 6, 7 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 5, 2, 15, 4, 14, 6, 11, 7, 8, 9, 10, 12, 13 }
  uselistorder i32* %r10.global-to-local, { 1, 3, 0, 10, 2, 9, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 9, 12, 13, 8, 29, 10, 11, 28, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 8, 9, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 52, 53, 19, 20, 54, 55, 0, 7, 56, 57, 21, 22, 23, 24, 1, 8, 58, 59, 25, 26, 27, 28, 29, 60, 9, 30, 31, 61, 10, 32, 33, 13, 12, 11, 62, 63, 34, 35, 36, 14, 15, 64, 37, 65, 38, 66, 2, 16, 67, 68, 5, 39, 40, 41, 3, 17, 69, 70, 6, 42, 43, 44, 4, 18, 71, 72, 45, 46, 47, 73, 74, 75, 76, 77, 78, 48, 49, 79, 80, 81, 82, 83, 84, 50, 51 }
  uselistorder i32 (i32)* @function_1000a634, { 8, 10, 2, 1, 9, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009a88, { 4, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10006588, { 1, 0 }
  uselistorder label %dec_label_pc_100064f4, { 1, 0 }
  uselistorder label %dec_label_pc_100063f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100064d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100064a4, { 1, 0 }
  uselistorder label %dec_label_pc_100064a4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006468, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006434, { 1, 0 }
  uselistorder label %dec_label_pc_10006434.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006410, { 1, 0 }
  uselistorder label %dec_label_pc_1000637c, { 1, 0 }
  uselistorder label %dec_label_pc_10006368, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006330, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10006290.dec_label_pc_10006290_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000620c, { 1, 0 }
  uselistorder label %dec_label_pc_10006148, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000611c, { 1, 0 }
}

define i32 @function_100065a0() local_unnamed_addr {
dec_label_pc_100065a0:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100065a8 = load i32, i32* @r31, align 4
  %v0_100065ac = load i32, i32* @r3, align 4
  store i32 %v0_100065ac, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_100065bc = add i32 %v0_100065ac, 4
  %v2_100065bc = inttoptr i32 %v1_100065bc to i32*
  %v3_100065bc = load i32, i32* %v2_100065bc, align 4
  %v3_100065c4 = icmp eq i32 %v3_100065bc, -1
  br i1 %v3_100065c4, label %dec_label_pc_100065dc, label %dec_label_pc_100065d8

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_100065a0
  store i32 268461532, i32* @lr, align 4
  %v0_100065d8 = call i32 @function_10008e20()
  br label %dec_label_pc_100065dc

dec_label_pc_100065dc:                            ; preds = %dec_label_pc_100065a0, %dec_label_pc_100065d8
  store i32 268461548, i32* @lr, align 4
  %v3_100065e8 = call i32 @function_10009b3c(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_100065f4 = load i32, i32* @r31, align 4
  %v1_100065f4 = add i32 %v0_100065f4, 28
  store i32 %v1_100065f4, i32* @r3, align 4
  %v3_100065f8 = icmp eq i32 %v3_100065e8, -1
  %v2_100065fc = add i32 %v0_100065f4, 4
  %v3_100065fc = inttoptr i32 %v2_100065fc to i32*
  store i32 %v3_100065e8, i32* %v3_100065fc, align 4
  br i1 %v3_100065f8, label %dec_label_pc_100065dc.dec_label_pc_10006674_crit_edge, label %dec_label_pc_10006604

dec_label_pc_100065dc.dec_label_pc_10006674_crit_edge: ; preds = %dec_label_pc_100065dc
  %v0_10006688.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006674

dec_label_pc_10006604:                            ; preds = %dec_label_pc_100065dc
  %v0_10006604 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006604 = load i32, i32* @r31, align 4
  %v2_10006604 = add i32 %v1_10006604, 24
  %v3_10006604 = inttoptr i32 %v2_10006604 to i32*
  store i32 %v0_10006604, i32* %v3_10006604, align 4
  store i32 268461580, i32* @lr, align 4
  %v0_10006608 = call i32 @function_10008708()
  %v0_1000660c = load i32, i32* @r31, align 4
  %v1_1000660c = add i32 %v0_1000660c, 4
  %v2_1000660c = inttoptr i32 %v1_1000660c to i32*
  %v3_1000660c = load i32, i32* %v2_1000660c, align 4
  store i32 %v3_1000660c, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268461604, i32* @lr, align 4
  %v2_10006620 = call i32 @function_10008d38(i32 %v3_1000660c)
  store i32 4, i32* @r4, align 4
  store i32 268461624, i32* @lr, align 4
  %v2_10006634 = call i32 @function_10008d38(i32 %v3_1000660c)
  %v3_1000663c = load i32, i32* @global_var_1001c1ac.111, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10006644 = load i32, i32* @r31, align 4
  %v2_1000664c = add i32 %v0_10006644, 8
  %v3_1000664c = inttoptr i32 %v2_1000664c to i32*
  store i32 %v3_1000663c, i32* %v3_1000664c, align 4
  %v0_10006654 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006654 = load i32, i32* @r31, align 4
  %v2_10006654 = add i32 %v1_10006654, 12
  %v3_10006654 = inttoptr i32 %v2_10006654 to i32*
  store i32 %v0_10006654, i32* %v3_10006654, align 4
  %v0_1000665c = load i32, i32* @r31, align 4
  %v1_1000665c = add i32 %v0_1000665c, 4
  %v2_1000665c = inttoptr i32 %v1_1000665c to i32*
  %v3_1000665c = load i32, i32* %v2_1000665c, align 4
  store i32 %v3_1000665c, i32* @r3, align 4
  %v1_10006660 = add i32 %v0_1000665c, 16
  %v2_10006660 = inttoptr i32 %v1_10006660 to i32*
  %v3_10006660 = load i32, i32* %v2_10006660, align 4
  store i32 %v3_10006660, i32* %r9.global-to-local, align 4
  store i32 268461684, i32* @lr, align 4
  %v0_10006670 = call i32 @function_1000993c()
  br label %dec_label_pc_10006674

dec_label_pc_10006674:                            ; preds = %dec_label_pc_100065dc.dec_label_pc_10006674_crit_edge, %dec_label_pc_10006604
  %v0_10006688 = phi i32 [ %v0_10006688.pre, %dec_label_pc_100065dc.dec_label_pc_10006674_crit_edge ], [ %v0_10006670, %dec_label_pc_10006604 ]
  store i32 %v0_100065a8, i32* @r31, align 4
  ret i32 %v0_10006688

; uselistorder directives
  uselistorder i32 ()* @function_10008708, { 8, 6, 1, 0, 7, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10006674, { 1, 0 }
  uselistorder label %dec_label_pc_100065dc, { 1, 0 }
}

define i32 @function_1000668c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000668c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006690 = load i32, i32* @lr, align 4
  store i32 %v0_10006690, i32* %r0.global-to-local, align 4
  %v3_1000669c = load i32, i32* @global_var_1001c1a0.112, align 4
  %v1_100066a8 = mul i32 %v3_1000669c, 16
  store i32 %v1_100066a8, i32* %r9.global-to-local, align 4
  %v0_100066ac = load i32, i32* @r28, align 4
  %v3_100066b4 = load i32, i32* @global_var_1001c1a4.113, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_100066c0 = add i32 %v1_100066a8, 16
  %v0_100066d8 = load i32, i32* @r29, align 4
  %v0_100066dc = load i32, i32* @r30, align 4
  store i32 268461800, i32* @lr, align 4
  %v3_100066e4 = call i32 @function_1000a008(i32 %v3_100066b4, i32 %v1_100066c0, i32 %v1_100066a8)
  store i32 %v3_100066e4, i32* %r25.global-to-local, align 4
  %v0_100066ec = load i32, i32* @r28, align 4
  store i32 %v3_100066e4, i32* @global_var_1001c1a4.113, align 4
  %v3_100066f4 = load i32, i32* @global_var_1001c1a0.112, align 4
  store i32 %v3_100066f4, i32* %r24.global-to-local, align 4
  store i32 268461820, i32* @lr, align 4
  %v1_100066f8 = inttoptr i32 %v0_100066ec to i8*
  %v2_100066f8 = call i32 @function_10008660(i8* %v1_100066f8)
  %sext = mul i32 %v2_100066f8, 16777216
  %v1_100066fc = sdiv i32 %sext, 16777216
  %v2_100066fc = add nsw i32 %v1_100066fc, 1
  store i32 %v2_100066fc, i32* @r29, align 4
  store i32 %v1_100066fc, i32* @r30, align 4
  store i32 %v2_100066fc, i32* @r3, align 4
  store i32 268461836, i32* @lr, align 4
  %v0_10006708 = call i32 @function_10009d40()
  %v0_1000670c = load i32, i32* @r28, align 4
  %v0_10006710 = load i32, i32* @r29, align 4
  store i32 %v0_10006708, i32* %r31.global-to-local, align 4
  store i32 268461852, i32* @lr, align 4
  %v3_10006718 = call i32 @function_100086e4(i32 %v0_1000670c, i32 %v0_10006710, i32 %v0_10006710)
  %v0_1000671c = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_1000671c, 1
  %extract.t6 = trunc i32 %v0_1000671c to i8
  br i1 %tmp21, label %dec_label_pc_10006740, label %dec_label_pc_10006724

dec_label_pc_10006724:                            ; preds = %dec_label_pc_1000668c
  store i32 %v0_1000671c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000672c

dec_label_pc_1000672c:                            ; preds = %dec_label_pc_1000672c, %dec_label_pc_10006724
  %v1_10006734 = phi i32 [ %v1_10006738, %dec_label_pc_1000672c ], [ 0, %dec_label_pc_10006724 ]
  %v1_1000672c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000672c = add i32 %v1_1000672c, %v1_10006734
  %v3_1000672c = inttoptr i32 %v2_1000672c to i8*
  %v4_1000672c = load i8, i8* %v3_1000672c, align 1
  %v5_1000672c = zext i8 %v4_1000672c to i32
  %v1_10006730 = xor i32 %v5_1000672c, 84
  store i32 %v1_10006730, i32* %r0.global-to-local, align 4
  %v3_10006734 = trunc i32 %v1_10006730 to i8
  store i8 %v3_10006734, i8* %v3_1000672c, align 1
  %v0_10006738 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006738 = add i32 %v0_10006738, 1
  store i32 %v1_10006738, i32* %r9.global-to-local, align 4
  %v0_1000673c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000673c = add i32 %v0_1000673c, -1
  store i32 %v1_1000673c, i32* %ctr.global-to-local, align 4
  %v2_1000673c = icmp eq i32 %v1_1000673c, 0
  br i1 %v2_1000673c, label %dec_label_pc_10006740.loopexit, label %dec_label_pc_1000672c

dec_label_pc_10006740.loopexit:                   ; preds = %dec_label_pc_1000672c
  %v0_10006758.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10006758.pre to i8
  br label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %dec_label_pc_10006740.loopexit, %dec_label_pc_1000668c
  %v0_10006758.off0 = phi i8 [ %extract.t, %dec_label_pc_10006740.loopexit ], [ %extract.t6, %dec_label_pc_1000668c ]
  %v3_10006740 = load i32, i32* @global_var_1001c1a0.112, align 4
  %v0_10006744 = load i32, i32* %r23.global-to-local, align 4
  %v3_10006748 = load i32, i32* @global_var_1001c1a4.113, align 4
  %v1_1000674c = mul i32 %v3_10006740, 16
  %v2_10006750 = add i32 %v3_10006748, %v1_1000674c
  store i32 %v2_10006750, i32* %r9.global-to-local, align 4
  %v0_10006754 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006754 = mul i32 %v0_10006754, 16
  store i32 %v1_10006754, i32* %r0.global-to-local, align 4
  %v3_10006758 = add i32 %v2_10006750, 12
  %v4_10006758 = inttoptr i32 %v3_10006758 to i8*
  store i8 %v0_10006758.off0, i8* %v4_10006758, align 1
  %v0_1000675c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000675c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000675c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000675c = add i32 %v2_1000675c, %v1_1000675c
  %v4_1000675c = inttoptr i32 %v3_1000675c to i32*
  store i32 %v0_1000675c, i32* %v4_1000675c, align 4
  %v3_10006760 = load i32, i32* @global_var_1001c1a0.112, align 4
  store i32 %v3_10006760, i32* @r30, align 4
  %v3_10006764 = load i32, i32* @global_var_1001c1a4.113, align 4
  store i32 %v3_10006764, i32* %r25.global-to-local, align 4
  store i32 268461932, i32* @lr, align 4
  %v1_10006768 = inttoptr i32 %v0_10006744 to i8*
  %v2_10006768 = call i32 @function_10008660(i8* %v1_10006768)
  %sext1 = mul i32 %v2_10006768, 16777216
  %v1_1000676c = sdiv i32 %sext1, 16777216
  %v2_1000676c = add nsw i32 %v1_1000676c, 1
  store i32 %v2_1000676c, i32* @r29, align 4
  store i32 %v1_1000676c, i32* @r28, align 4
  store i32 %v2_1000676c, i32* @r3, align 4
  store i32 268461948, i32* @lr, align 4
  %v0_10006778 = call i32 @function_10009d40()
  %v0_1000677c = load i32, i32* %r23.global-to-local, align 4
  %v0_10006780 = load i32, i32* @r29, align 4
  store i32 %v0_10006778, i32* %r31.global-to-local, align 4
  store i32 268461964, i32* @lr, align 4
  %v3_10006788 = call i32 @function_100086e4(i32 %v0_1000677c, i32 %v0_10006780, i32 %v0_10006780)
  %v0_1000678c = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_1000678c, 1
  %extract.t8 = trunc i32 %v0_1000678c to i8
  br i1 %tmp22, label %dec_label_pc_100067b0, label %dec_label_pc_10006794

dec_label_pc_10006794:                            ; preds = %dec_label_pc_10006740
  store i32 %v0_1000678c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_1000679c, %dec_label_pc_10006794
  %v1_100067a4 = phi i32 [ %v1_100067a8, %dec_label_pc_1000679c ], [ 0, %dec_label_pc_10006794 ]
  %v1_1000679c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000679c = add i32 %v1_1000679c, %v1_100067a4
  %v3_1000679c = inttoptr i32 %v2_1000679c to i8*
  %v4_1000679c = load i8, i8* %v3_1000679c, align 1
  %v5_1000679c = zext i8 %v4_1000679c to i32
  %v1_100067a0 = xor i32 %v5_1000679c, 84
  store i32 %v1_100067a0, i32* %r0.global-to-local, align 4
  %v3_100067a4 = trunc i32 %v1_100067a0 to i8
  store i8 %v3_100067a4, i8* %v3_1000679c, align 1
  %v0_100067a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100067a8 = add i32 %v0_100067a8, 1
  store i32 %v1_100067a8, i32* %r9.global-to-local, align 4
  %v0_100067ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100067ac = add i32 %v0_100067ac, -1
  store i32 %v1_100067ac, i32* %ctr.global-to-local, align 4
  %v2_100067ac = icmp eq i32 %v1_100067ac, 0
  br i1 %v2_100067ac, label %dec_label_pc_100067b0.loopexit, label %dec_label_pc_1000679c

dec_label_pc_100067b0.loopexit:                   ; preds = %dec_label_pc_1000679c
  %v0_100067c4.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_100067c4.pre to i8
  br label %dec_label_pc_100067b0

dec_label_pc_100067b0:                            ; preds = %dec_label_pc_100067b0.loopexit, %dec_label_pc_10006740
  %v0_100067c4.off0 = phi i8 [ %extract.t7, %dec_label_pc_100067b0.loopexit ], [ %extract.t8, %dec_label_pc_10006740 ]
  %v3_100067b0 = load i32, i32* @global_var_1001c1a0.112, align 4
  %v3_100067b8 = load i32, i32* @global_var_1001c1a4.113, align 4
  %v1_100067bc = mul i32 %v3_100067b0, 16
  %v2_100067c0 = or i32 %v1_100067bc, 13
  %v3_100067c4 = add i32 %v2_100067c0, %v3_100067b8
  %v4_100067c4 = inttoptr i32 %v3_100067c4 to i8*
  store i8 %v0_100067c4.off0, i8* %v4_100067c4, align 1
  %v0_100067c8 = load i32, i32* @r30, align 4
  %v1_100067c8 = mul i32 %v0_100067c8, 16
  %v1_100067cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100067cc = add i32 %v1_100067cc, %v1_100067c8
  store i32 %v2_100067cc, i32* %r9.global-to-local, align 4
  %v3_100067d0 = load i32, i32* @global_var_1001c1a0.112, align 4
  %v3_100067d4 = load i32, i32* @global_var_1001c1a4.113, align 4
  %v1_100067d8 = mul i32 %v3_100067d0, 16
  %v3_100067dc = load i16, i16* @global_var_1001c1a8.114, align 2
  %v4_100067dc = zext i16 %v3_100067dc to i32
  store i32 %v4_100067dc, i32* %r7.global-to-local, align 4
  %v2_100067e0 = add i32 %v3_100067d4, %v1_100067d8
  store i32 %v2_100067e0, i32* %r11.global-to-local, align 4
  store i32 %v0_10006690, i32* %r0.global-to-local, align 4
  %v1_100067e8 = add i32 %v3_100067d0, 1
  store i32 %v1_100067e8, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c1a8.114 to i32), i32* %r8.global-to-local, align 4
  %v0_100067f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100067f0 = add i32 %v2_100067cc, 4
  %v3_100067f0 = inttoptr i32 %v2_100067f0 to i32*
  store i32 %v0_100067f0, i32* %v3_100067f0, align 4
  %v0_100067f8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100067f8, i32* @global_var_1001c1a0.112, align 4
  store i32 %v0_100066ac, i32* @r28, align 4
  store i32 %v0_100066d8, i32* @r29, align 4
  store i32 %v0_100066dc, i32* @r30, align 4
  %v0_10006828 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006828 = trunc i32 %v0_10006828 to i16
  %v2_10006828 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006828 = add i32 %v2_10006828, 10
  %v4_10006828 = inttoptr i32 %v3_10006828 to i16*
  store i16 %v1_10006828, i16* %v4_10006828, align 2
  %v0_1000682c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000682c = trunc i32 %v0_1000682c to i16
  %v2_1000682c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000682c = add i32 %v2_1000682c, 8
  %v4_1000682c = inttoptr i32 %v3_1000682c to i16*
  store i16 %v1_1000682c, i16* %v4_1000682c, align 2
  %v0_10006830 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006830 = trunc i32 %v0_10006830 to i16
  store i16 %v1_10006830, i16* @global_var_1001c1a8.114, align 2
  ret i32 %v3_10006788

; uselistorder directives
  uselistorder i32 %v3_100067d0, { 1, 0 }
  uselistorder i32 %v1_100067ac, { 1, 0 }
  uselistorder i32 %v1_100067a8, { 1, 0 }
  uselistorder i32 %v0_1000678c, { 1, 0, 2 }
  uselistorder i32 %v1_1000673c, { 1, 0 }
  uselistorder i32 %v1_10006738, { 1, 0 }
  uselistorder i32 %v0_1000671c, { 1, 0, 2 }
  uselistorder i32 %v1_100066a8, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10008660, { 0, 1, 5, 6, 7, 8, 9, 23, 2, 25, 26, 27, 28, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24 }
  uselistorder i32 (i32, i32, i32)* @function_1000a008, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006838(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006838:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i16 @__decompiler_undefined_function_1()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10006838 = load i32, i32* @lr, align 4
  store i32 %v0_10006838, i32* %r0.global-to-local, align 4
  %v0_10006840 = call i32 @__asm_mfcr()
  store i32 %v0_10006840, i32* %r3.global-to-local, align 4
  %v0_10006878 = load i32, i32* @r27, align 4
  %v0_1000687c = load i32, i32* @r28, align 4
  %v0_10006880 = load i32, i32* @r29, align 4
  %v0_10006884 = load i32, i32* @r30, align 4
  %v0_10006888 = load i32, i32* @r31, align 4
  %v0_1000688c = load i32, i32* %r0.global-to-local, align 4
  store i32 268462232, i32* @lr, align 4
  %v0_10006894 = call i32 @function_10008e68()
  store i32 %v0_10006894, i32* %r3.global-to-local, align 4
  %v1_10006898 = icmp slt i32 %v0_10006894, 0
  %v3_10006898 = icmp eq i32 %v0_10006894, 0
  store i1 %v1_10006898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006898, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006894, i32* @global_var_1001c1b8.115, align 4
  %tmp98 = icmp slt i32 %v0_10006894, 1
  br i1 %tmp98, label %dec_label_pc_10006908, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_10006908, %dec_label_pc_10006838
  store i32 %v0_1000688c, i32* %r0.global-to-local, align 4
  %v1_100068bc = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006840)
  store i32 %v0_10006878, i32* @r27, align 4
  store i32 %v0_1000687c, i32* @r28, align 4
  store i32 %v0_10006880, i32* %r29.global-to-local, align 4
  store i32 %v0_10006884, i32* %r30.global-to-local, align 4
  store i32 %v0_10006888, i32* @r31, align 4
  ret i32 %v0_10006894

dec_label_pc_10006908:                            ; preds = %dec_label_pc_10006838
  %v1_10006908 = icmp slt i32 %v0_10006894, -1
  %v3_10006908 = icmp eq i32 %v0_10006894, -1
  store i1 %v1_10006908, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006908, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006908, label %dec_label_pc_100068a8, label %dec_label_pc_10006910

dec_label_pc_10006910:                            ; preds = %dec_label_pc_10006908
  store i32 268462356, i32* @lr, align 4
  %v1_10006910 = call i32 @function_10008964(i32 %v0_10006894)
  store i32 %v1_10006910, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006910, i32* @global_var_1001c188.16, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006920.116 to i32), i32* @lr, align 4
  %v1_1000691c = call i32 @function_10005db8(i32 %v1_10006910)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462380, i32* @lr, align 4
  %v0_10006928 = call i32 @function_100091f0()
  store i32 %v0_10006928, i32* @global_var_1001c1ac.111, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000693c.117 to i32), i32* @lr, align 4
  %v2_10006938 = call i32 @function_10009e98(i32 256, i32 288)
  store i32 %v2_10006938, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006938, i32* @global_var_1001c1b0.118, align 4
  store i32 %v2_10006938, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006968 = add i32 %v2_10006938, 4
  store i32 %v1_10006968, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000696c

dec_label_pc_1000696c:                            ; preds = %dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge, %dec_label_pc_10006910
  %v1_10006980 = phi i32 [ %v1_10006988, %dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge ], [ %v1_10006968, %dec_label_pc_10006910 ]
  %v0_10006980 = phi i32 [ %v0_10006980.pre, %dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge ], [ -1, %dec_label_pc_10006910 ]
  %v1_1000697c = phi i32 [ %v1_1000697c.pre, %dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge ], [ %v2_10006938, %dec_label_pc_10006910 ]
  %v0_10006978 = phi i32 [ %v0_1000698c, %dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge ], [ 0, %dec_label_pc_10006910 ]
  %v1_1000696c = mul i32 %v0_10006978, 256
  store i32 %v1_1000696c, i32* %r0.global-to-local, align 4
  %v2_10006974 = mul i32 %v0_10006978, 288
  %v1_10006978 = add i32 %v0_10006978, 1
  store i32 %v1_10006978, i32* %r10.global-to-local, align 4
  %v2_1000697c = add i32 %v2_10006974, %v1_1000697c
  store i32 %v2_1000697c, i32* %r9.global-to-local, align 4
  %v2_10006980 = inttoptr i32 %v1_10006980 to i32*
  store i32 %v0_10006980, i32* %v2_10006980, align 4
  %v0_10006984 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006984 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006984 = add i32 %v1_10006984, 12
  %v3_10006984 = inttoptr i32 %v2_10006984 to i32*
  store i32 %v0_10006984, i32* %v3_10006984, align 4
  %v0_10006988 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006988 = add i32 %v0_10006988, 288
  store i32 %v1_10006988, i32* %r11.global-to-local, align 4
  %v0_1000698c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000698c, i32* %r9.global-to-local, align 4
  %v0_10006990 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006990 = add i32 %v0_10006990, -1
  store i32 %v1_10006990, i32* %ctr.global-to-local, align 4
  %v2_10006990 = icmp eq i32 %v1_10006990, 0
  br i1 %v2_10006990, label %dec_label_pc_10006994, label %dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge

dec_label_pc_1000696c.dec_label_pc_1000696c_crit_edge: ; preds = %dec_label_pc_1000696c
  %v1_1000697c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10006980.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000696c

dec_label_pc_10006994:                            ; preds = %dec_label_pc_1000696c
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268462508, i32* @lr, align 4
  %v3_100069a8 = call i32 @function_10009b3c(i32 2, i32 3, i32 6)
  %v4_100069a8 = trunc i32 %v3_100069a8 to i16
  store i32 %v3_100069a8, i32* %r3.global-to-local, align 4
  %v2_100069ac = icmp slt i16 %v4_100069a8, -1
  %v4_100069ac = icmp eq i16 %v4_100069a8, -1
  store i1 %v2_100069ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100069ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100069a8, i32* %r29.global-to-local, align 4
  store i32 %v3_100069a8, i32* @global_var_1001c1b4.119, align 4
  br i1 %v4_100069ac, label %dec_label_pc_10006fcc, label %dec_label_pc_100069c0

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_10006994
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268462544, i32* @lr, align 4
  %v1_100069cc = call i32 @function_10008d38(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_100069d4 = or i32 %v1_100069cc, 2048
  store i32 %v1_100069d4, i32* %r5.global-to-local, align 4
  %v0_100069d8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100069d8, i32* %r3.global-to-local, align 4
  store i32 268462564, i32* @lr, align 4
  %v2_100069e0 = call i32 @function_10008d38(i32 %v0_100069d8)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100069e8 = load i32, i32* @global_var_1001c1b4.119, align 4
  store i32 %v3_100069e8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100069f8 = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_100069f8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268462600, i32* @lr, align 4
  %v5_10006a04 = call i32 @function_10009b00(i32 %v3_100069e8, i32 0, i32 3, i32 %v2_100069f8)
  store i32 %v5_10006a04, i32* %r3.global-to-local, align 4
  %v1_10006a08 = icmp slt i32 %v5_10006a04, 0
  %v3_10006a08 = icmp eq i32 %v5_10006a04, 0
  store i1 %v1_10006a08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a08, label %dec_label_pc_10006a10, label %dec_label_pc_1000800c

dec_label_pc_10006a10:                            ; preds = %dec_label_pc_100069c0, %dec_label_pc_10006a10
  %v0_10006a10 = call i32 @function_10005d68()
  store i32 %v0_10006a10, i32* %r3.global-to-local, align 4
  %v1_10006a14 = urem i32 %v0_10006a10, 65536
  store i32 %v1_10006a14, i32* @r20, align 4
  %v1_10006a18 = icmp ult i32 %v1_10006a14, 1023
  %v3_10006a18 = icmp eq i32 %v1_10006a14, 1023
  store i1 %v1_10006a18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a18, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_10006a14, 1024
  br i1 %tmp99, label %dec_label_pc_10006a10, label %dec_label_pc_10006a20

dec_label_pc_10006a20:                            ; preds = %dec_label_pc_10006a10
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006a28 = load i32, i32* @global_var_1001c220.120, align 4
  store i32 %v3_10006a28, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c220.120 to i32), i32* @r21, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c234.121 to i32), i32* @r22, align 4
  %v1_10006a38 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006a38, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006a40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006a40, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006a40, i32* @global_var_1001c220.120, align 4
  store i32 ptrtoint (i32* @global_var_1000b8dc.122 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c222.123 to i16*), align 4
  %v0_10006a54 = call i32 @function_10005d68()
  %v1_10006a54 = trunc i32 %v0_10006a54 to i16
  store i32 %v0_10006a54, i32* %r3.global-to-local, align 4
  %v3_10006a58 = load i32, i32* @global_var_1001c240.124, align 4
  store i32 %v3_10006a58, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c228.125 to i8*), align 4
  %v1_10006a68 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10006a68, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10006a70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a70 = trunc i32 %v0_10006a70 to i8
  store i8 %v1_10006a70, i8* bitcast (i32* @global_var_1001c229.126 to i8*), align 4
  store i16 %v1_10006a54, i16* bitcast (i32* @global_var_1001c224.127 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b8d8.128 to i32), i32* @r29, align 4
  store i32 %v1_10006a68, i32* @global_var_1001c240.124, align 4
  store i16 23, i16* @global_var_1001c236.129, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000b870.130 to i32), i32* @r27, align 4
  %v0_10006a90 = load i32, i32* @r20, align 4
  %v1_10006a90 = trunc i32 %v0_10006a90 to i16
  store i16 %v1_10006a90, i16* bitcast (i32* @global_var_1001c234.121 to i16*), align 4
  %v2_10006a94 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v2_10006a94, i32* @r15, align 4
  %v0_10006a98 = call i32 @function_10005d68()
  %v1_10006a98 = trunc i32 %v0_10006a98 to i16
  %v0_10006a9c = load i32, i32* @r28, align 4
  store i16 %v1_10006a98, i16* bitcast (i32* @global_var_1001c242.131 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10006aa8, i32* %r3.global-to-local, align 4
  %v3_10006aac = load i32, i32* @global_var_1001c240.124, align 4
  %v1_10006ab0 = or i32 %v3_10006aac, 131072
  store i32 %v1_10006ab0, i32* %r0.global-to-local, align 4
  store i32 %v1_10006ab0, i32* @global_var_1001c240.124, align 4
  store i32 268462780, i32* @lr, align 4
  %v4_10006ab8 = call i32 @function_1000668c(i32 %v0_10006aa8, i32 %v0_10006a9c, i32 4)
  %v0_10006ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10006ac0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268462800, i32* @lr, align 4
  %v5_10006acc = call i32 @function_1000668c(i32 %v0_10006ac0, i32 ptrtoint ([5 x i8]* @global_var_1000b854.132 to i32), i32 8)
  %v0_10006ad4 = load i32, i32* @r29, align 4
  store i32 %v0_10006ad4, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268462820, i32* @lr, align 4
  %v5_10006ae0 = call i32 @function_1000668c(i32 %v0_10006ad4, i32 ptrtoint ([9 x i8]* @global_var_1000b85c.133 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1000b868.134 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268462840, i32* @lr, align 4
  %v4_10006af4 = call i32 @function_1000668c(i32 ptrtoint ([7 x i8]* @global_var_1000b868.134 to i32), i32 12, i32 12)
  %v0_10006af8 = load i32, i32* @r28, align 4
  %v0_10006afc = load i32, i32* @r27, align 4
  store i32 %v0_10006afc, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268462856, i32* @lr, align 4
  %v4_10006b04 = call i32 @function_1000668c(i32 %v0_10006afc, i32 %v0_10006af8, i32 7)
  %v0_10006b0c = load i32, i32* @r29, align 4
  store i32 %v0_10006b0c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268462880, i32* @lr, align 4
  %v5_10006b1c = call i32 @function_1000668c(i32 %v0_10006b0c, i32 ptrtoint ([9 x i8]* @global_var_1000b878.135 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1000b884.136 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000b8ac.137 to i32), i32* @r28, align 4
  store i32 268462904, i32* @lr, align 4
  %v4_10006b34 = call i32 @function_1000668c(i32 ptrtoint ([6 x i8]* @global_var_1000b884.136 to i32), i32 10, i32 10)
  %v0_10006b3c = load i32, i32* @r29, align 4
  store i32 %v0_10006b3c, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268462924, i32* @lr, align 4
  %v5_10006b48 = call i32 @function_1000668c(i32 %v0_10006b3c, i32 ptrtoint ([6 x i8]* @global_var_1000b88c.138 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000b894.139 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268462944, i32* @lr, align 4
  %v4_10006b5c = call i32 @function_1000668c(i32 ptrtoint ([8 x i8]* @global_var_1000b894.139 to i32), i32 14, i32 14)
  %v0_10006b60 = load i32, i32* @r29, align 4
  store i32 %v0_10006b60, i32* %r3.global-to-local, align 4
  %v0_10006b64 = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268462960, i32* @lr, align 4
  %v5_10006b6c = call i32 @function_1000668c(i32 %v0_10006b60, i32 %v0_10006b64, i32 11)
  %v0_10006b74 = load i32, i32* @r29, align 4
  store i32 %v0_10006b74, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268462980, i32* @lr, align 4
  %v4_10006b80 = call i32 @function_1000668c(i32 %v0_10006b74, i32 ptrtoint (i32* @global_var_1000b89c.140 to i32), i32 17)
  %v0_10006b84 = load i32, i32* @r29, align 4
  store i32 %v0_10006b84, i32* %r3.global-to-local, align 4
  %v0_10006b8c = load i32, i32* @r28, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b8b4.141 to i32), i32* @r29, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463004, i32* @lr, align 4
  %v5_10006b98 = call i32 @function_1000668c(i32 %v0_10006b84, i32 %v0_10006b8c, i32 9)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10006ba0 = load i32, i32* @r29, align 4
  store i32 %v0_10006ba0, i32* %r3.global-to-local, align 4
  store i32 268463020, i32* @lr, align 4
  %v5_10006ba8 = call i32 @function_1000668c(i32 %v0_10006ba0, i32 %v0_10006ba0, i32 8)
  %v0_10006bac = load i32, i32* @r29, align 4
  store i32 %v0_10006bac, i32* %r3.global-to-local, align 4
  %v0_10006bb0 = load i32, i32* @r28, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463036, i32* @lr, align 4
  %v5_10006bb8 = call i32 @function_1000668c(i32 %v0_10006bac, i32 %v0_10006bb0, i32 9)
  %v0_10006bc4 = load i32, i32* @r27, align 4
  store i32 %v0_10006bc4, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463056, i32* @lr, align 4
  %v4_10006bcc = call i32 @function_1000668c(i32 %v0_10006bc4, i32 ptrtoint (i32* @global_var_1000b8bc.142 to i32), i32 15)
  %v0_10006bd4 = load i32, i32* @r27, align 4
  store i32 %v0_10006bd4, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463076, i32* @lr, align 4
  %v4_10006be0 = call i32 @function_1000668c(i32 %v0_10006bd4, i32 ptrtoint (i32* @global_var_1000b8c8.143 to i32), i32 15)
  store i32 %v4_10006be0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006be4

dec_label_pc_10006be4:                            ; preds = %dec_label_pc_1000722c, %dec_label_pc_10006a20
  %v3_10006be4 = load i32, i32* @global_var_1001c1ac.111, align 4
  store i32 %v3_10006be4, i32* @r31, align 4
  %v0_10006be8 = load i32, i32* @r23, align 4
  %v2_10006be8 = icmp slt i32 %v0_10006be8, %v3_10006be4
  %v4_10006be8 = icmp eq i32 %v0_10006be8, %v3_10006be4
  store i1 %v2_10006be8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006be8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006be8, label %dec_label_pc_10006e08, label %dec_label_pc_10006bf0

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006be4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006bf4 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006bf4, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006c04

dec_label_pc_10006c04:                            ; preds = %dec_label_pc_10006d34.dec_label_pc_10006c04_crit_edge, %dec_label_pc_10006bf0
  %v0_10006c04 = phi i32 [ %v0_10006c04.pre, %dec_label_pc_10006d34.dec_label_pc_10006c04_crit_edge ], [ 0, %dec_label_pc_10006bf0 ]
  store i32 %v0_10006c04, i32* %stack_var_-1888, align 4
  %v0_10006c14 = call i32 @function_10005d68()
  %v1_10006c14 = trunc i32 %v0_10006c14 to i16
  store i32 %v0_10006c14, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10006c14, i16* bitcast (i32* @global_var_1001c224.127 to i16*), align 4
  %v3_10006c20 = load i32, i32* @global_var_1001c188.16, align 4
  store i32 %v3_10006c20, i32* %r0.global-to-local, align 4
  store i32 %v3_10006c20, i32* @global_var_1001c22c.144, align 4
  br label %dec_label_pc_10006c28.preheader

dec_label_pc_10006c28.preheader:                  ; preds = %dec_label_pc_10006c04, %dec_label_pc_10006fd4
  br label %dec_label_pc_10006c28

dec_label_pc_10006c28:                            ; preds = %dec_label_pc_10007070, %dec_label_pc_10007064, %dec_label_pc_10007058, %dec_label_pc_1000704c, %dec_label_pc_10007040, %dec_label_pc_10007038, %dec_label_pc_10007030, %dec_label_pc_10007028, %dec_label_pc_1000701c, %dec_label_pc_10007008, %dec_label_pc_10006ffc, %dec_label_pc_10006fe8, %dec_label_pc_10006d2c, %dec_label_pc_10006d24, %dec_label_pc_10006d1c, %dec_label_pc_10006d14, %dec_label_pc_10006d0c, %dec_label_pc_10006d04, %dec_label_pc_10006cfc, %dec_label_pc_10006cf4, %dec_label_pc_10006cec, %dec_label_pc_10006ce4, %dec_label_pc_10006cdc, %dec_label_pc_10006ccc, %dec_label_pc_10006c9c, %dec_label_pc_10006c6c, %dec_label_pc_10006c64, %dec_label_pc_10006c54, %dec_label_pc_10006c4c, %dec_label_pc_10006c44, %dec_label_pc_10006c28, %dec_label_pc_10006c28.preheader
  %v0_10006c28 = call i32 @function_10005d68()
  store i32 %v0_10006c28, i32* %r3.global-to-local, align 4
  %v1_10006c2c = urem i32 %v0_10006c28, 256
  store i32 %v1_10006c2c, i32* %r11.global-to-local, align 4
  %v1_10006c30 = udiv i32 %v0_10006c28, 16777216
  store i32 %v1_10006c30, i32* %r10.global-to-local, align 4
  %v1_10006c34 = icmp ult i32 %v1_10006c2c, 127
  %v3_10006c34 = icmp eq i32 %v1_10006c2c, 127
  store i1 %v1_10006c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c34, i1* %cr7_eq.global-to-local, align 1
  %v1_10006c38 = call i32 @__asm_rlwinm(i32 %v0_10006c28, i32 24, i32 24, i32 31)
  store i32 %v1_10006c38, i32* @r9, align 4
  %v1_10006c3c = call i32 @__asm_rlwinm(i32 %v0_10006c28, i32 16, i32 24, i32 31)
  store i32 %v1_10006c3c, i32* %r3.global-to-local, align 4
  %v0_10006c40 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006c40, label %dec_label_pc_10006c28, label %dec_label_pc_10006c44

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006c28
  %v0_10006c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006c44 = icmp slt i32 %v0_10006c44, 0
  %v3_10006c44 = icmp eq i32 %v0_10006c44, 0
  store i1 %v1_10006c44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c44, label %dec_label_pc_10006c28, label %dec_label_pc_10006c4c

dec_label_pc_10006c4c:                            ; preds = %dec_label_pc_10006c44
  %v1_10006c4c = icmp slt i32 %v0_10006c44, 3
  %v3_10006c4c = icmp eq i32 %v0_10006c44, 3
  store i1 %v1_10006c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c4c, label %dec_label_pc_10006c28, label %dec_label_pc_10006c54

dec_label_pc_10006c54:                            ; preds = %dec_label_pc_10006c4c
  %v1_10006c54 = add i32 %v0_10006c44, 241
  %v1_10006c58 = urem i32 %v1_10006c54, 256
  store i32 %v1_10006c58, i32* %r0.global-to-local, align 4
  %v1_10006c5c = icmp eq i32 %v1_10006c58, 0
  %v3_10006c5c = icmp eq i32 %v1_10006c58, 1
  store i1 %v1_10006c5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c5c, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_10006c58, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_10006c28, label %dec_label_pc_10006c64

dec_label_pc_10006c64:                            ; preds = %dec_label_pc_10006c54
  %v1_10006c64 = icmp slt i32 %v0_10006c44, 56
  %v3_10006c64 = icmp eq i32 %v0_10006c44, 56
  store i1 %v1_10006c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c64, label %dec_label_pc_10006c28, label %dec_label_pc_10006c6c

dec_label_pc_10006c6c:                            ; preds = %dec_label_pc_10006c64
  %v1_10006c6c = icmp slt i32 %v0_10006c44, 10
  %v3_10006c6c = icmp eq i32 %v0_10006c44, 10
  store i1 %v1_10006c6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c6c, label %dec_label_pc_10006c28, label %dec_label_pc_10006c74

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006c6c
  %v1_10006c74 = icmp slt i32 %v0_10006c44, 192
  %v3_10006c74 = icmp eq i32 %v0_10006c44, 192
  store i1 %v1_10006c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c74, label %dec_label_pc_10006fd4, label %dec_label_pc_10006c7c

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006c74
  %v1_10006c7c = icmp slt i32 %v0_10006c44, 172
  %v3_10006c7c = icmp eq i32 %v0_10006c44, 172
  store i1 %v1_10006c7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c7c, label %dec_label_pc_10006fe0, label %dec_label_pc_10006c84

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c7c
  %v1_10006c84 = icmp slt i32 %v0_10006c44, 100
  %v3_10006c84 = icmp eq i32 %v0_10006c44, 100
  store i1 %v1_10006c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c84, label %dec_label_pc_10006ff4, label %dec_label_pc_10006c8c

dec_label_pc_10006c8c:                            ; preds = %dec_label_pc_10006c84
  %v1_10006c8c = icmp slt i32 %v0_10006c44, 169
  %v3_10006c8c = icmp eq i32 %v0_10006c44, 169
  store i1 %v1_10006c8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c8c, label %dec_label_pc_10007008, label %dec_label_pc_10006c94

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006c8c
  %v1_10006c94 = icmp slt i32 %v0_10006c44, 198
  %v3_10006c94 = icmp eq i32 %v0_10006c44, 198
  store i1 %v1_10006c94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c94, label %dec_label_pc_10007014, label %dec_label_pc_10006c9c

dec_label_pc_10006c9c:                            ; preds = %dec_label_pc_10006c94
  %v1_10006c9c = icmp ult i32 %v0_10006c44, 223
  %v2_10006c9c = icmp ugt i32 %v0_10006c44, 223
  %v3_10006c9c = icmp eq i32 %v0_10006c44, 223
  store i1 %v1_10006c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006c9c, label %dec_label_pc_10006c28, label %dec_label_pc_10006ca4

dec_label_pc_10006ca4:                            ; preds = %dec_label_pc_10006c9c
  %v1_10006ca4 = icmp slt i32 %v0_10006c44, 106
  %v3_10006ca4 = icmp eq i32 %v0_10006c44, 106
  store i1 %v1_10006ca4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ca4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ca4, label %dec_label_pc_10007028, label %dec_label_pc_10006cac

dec_label_pc_10006cac:                            ; preds = %dec_label_pc_10006ca4
  %v1_10006cac = icmp slt i32 %v0_10006c44, 150
  %v3_10006cac = icmp eq i32 %v0_10006c44, 150
  store i1 %v1_10006cac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cac, label %dec_label_pc_1000704c, label %dec_label_pc_10006cb4

dec_label_pc_10006cb4:                            ; preds = %dec_label_pc_10006cac
  %v1_10006cb4 = icmp slt i32 %v0_10006c44, 49
  %v3_10006cb4 = icmp eq i32 %v0_10006c44, 49
  store i1 %v1_10006cb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cb4, label %dec_label_pc_10007058, label %dec_label_pc_10006cbc

dec_label_pc_10006cbc:                            ; preds = %dec_label_pc_10006cb4
  %v1_10006cbc = icmp slt i32 %v0_10006c44, 178
  %v3_10006cbc = icmp eq i32 %v0_10006c44, 178
  store i1 %v1_10006cbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cbc, label %dec_label_pc_10007064, label %dec_label_pc_10006cc4

dec_label_pc_10006cc4:                            ; preds = %dec_label_pc_10006cbc
  %v1_10006cc4 = icmp slt i32 %v0_10006c44, 160
  %v3_10006cc4 = icmp eq i32 %v0_10006c44, 160
  store i1 %v1_10006cc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cc4, label %dec_label_pc_10007070, label %dec_label_pc_10006ccc

dec_label_pc_10006ccc:                            ; preds = %dec_label_pc_10006cc4
  %v1_10006ccc = add i32 %v0_10006c44, 250
  %v1_10006cd0 = urem i32 %v1_10006ccc, 256
  store i32 %v1_10006cd0, i32* %r0.global-to-local, align 4
  %v1_10006cd4 = icmp eq i32 %v1_10006cd0, 0
  %v3_10006cd4 = icmp eq i32 %v1_10006cd0, 1
  store i1 %v1_10006cd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cd4, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006cd0, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_10006c28, label %dec_label_pc_10006cdc

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006ccc
  %v1_10006cdc = icmp slt i32 %v0_10006c44, 11
  %v3_10006cdc = icmp eq i32 %v0_10006c44, 11
  store i1 %v1_10006cdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cdc, label %dec_label_pc_10006c28, label %dec_label_pc_10006ce4

dec_label_pc_10006ce4:                            ; preds = %dec_label_pc_10006cdc
  %v1_10006ce4 = icmp slt i32 %v0_10006c44, 21
  %v3_10006ce4 = icmp eq i32 %v0_10006c44, 21
  store i1 %v1_10006ce4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ce4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ce4, label %dec_label_pc_10006c28, label %dec_label_pc_10006cec

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006ce4
  %v1_10006cec = icmp slt i32 %v0_10006c44, 22
  %v3_10006cec = icmp eq i32 %v0_10006c44, 22
  store i1 %v1_10006cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cec, label %dec_label_pc_10006c28, label %dec_label_pc_10006cf4

dec_label_pc_10006cf4:                            ; preds = %dec_label_pc_10006cec
  %v1_10006cf4 = icmp slt i32 %v0_10006c44, 26
  %v3_10006cf4 = icmp eq i32 %v0_10006c44, 26
  store i1 %v1_10006cf4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cf4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cf4, label %dec_label_pc_10006c28, label %dec_label_pc_10006cfc

dec_label_pc_10006cfc:                            ; preds = %dec_label_pc_10006cf4
  %v1_10006cfc = icmp slt i32 %v0_10006c44, 28
  %v3_10006cfc = icmp eq i32 %v0_10006c44, 28
  store i1 %v1_10006cfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cfc, label %dec_label_pc_10006c28, label %dec_label_pc_10006d04

dec_label_pc_10006d04:                            ; preds = %dec_label_pc_10006cfc
  %v1_10006d04 = icmp slt i32 %v0_10006c44, 29
  %v3_10006d04 = icmp eq i32 %v0_10006c44, 29
  store i1 %v1_10006d04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d04, label %dec_label_pc_10006c28, label %dec_label_pc_10006d0c

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006d04
  %v1_10006d0c = icmp slt i32 %v0_10006c44, 30
  %v3_10006d0c = icmp eq i32 %v0_10006c44, 30
  store i1 %v1_10006d0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d0c, label %dec_label_pc_10006c28, label %dec_label_pc_10006d14

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006d0c
  %v1_10006d14 = icmp slt i32 %v0_10006c44, 33
  %v3_10006d14 = icmp eq i32 %v0_10006c44, 33
  store i1 %v1_10006d14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d14, label %dec_label_pc_10006c28, label %dec_label_pc_10006d1c

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006d14
  %v1_10006d1c = icmp slt i32 %v0_10006c44, 55
  %v3_10006d1c = icmp eq i32 %v0_10006c44, 55
  store i1 %v1_10006d1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d1c, label %dec_label_pc_10006c28, label %dec_label_pc_10006d24

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d1c
  %v1_10006d24 = icmp slt i32 %v0_10006c44, 214
  %v3_10006d24 = icmp eq i32 %v0_10006c44, 214
  store i1 %v1_10006d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d24, label %dec_label_pc_10006c28, label %dec_label_pc_10006d2c

dec_label_pc_10006d2c:                            ; preds = %dec_label_pc_10006d24
  %v1_10006d2c = icmp slt i32 %v0_10006c44, 215
  %v3_10006d2c = icmp eq i32 %v0_10006c44, 215
  store i1 %v1_10006d2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d2c, label %dec_label_pc_10006c28, label %dec_label_pc_10006d2c.dec_label_pc_10006d34.loopexit_crit_edge

dec_label_pc_10006d2c.dec_label_pc_10006d34.loopexit_crit_edge: ; preds = %dec_label_pc_10006d2c
  %v0_10006d38.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006d34

dec_label_pc_10006d34:                            ; preds = %dec_label_pc_10007070, %dec_label_pc_10007064, %dec_label_pc_10007058, %dec_label_pc_1000704c, %dec_label_pc_10007040, %dec_label_pc_1000701c, %dec_label_pc_10007008, %dec_label_pc_10006ffc, %dec_label_pc_10006fe8, %dec_label_pc_10007014, %dec_label_pc_10006ff4, %dec_label_pc_10006fe0, %dec_label_pc_10006d2c.dec_label_pc_10006d34.loopexit_crit_edge, %dec_label_pc_10006fd4.dec_label_pc_10006d34_crit_edge
  %v0_10006d40 = phi i32 [ %v0_10006d4015, %dec_label_pc_10006fd4.dec_label_pc_10006d34_crit_edge ], [ %v1_10006c3c, %dec_label_pc_10006d2c.dec_label_pc_10006d34.loopexit_crit_edge ], [ %v1_10006c3c, %dec_label_pc_10006fe0 ], [ %v1_10006c3c, %dec_label_pc_10006ff4 ], [ %v1_10006c3c, %dec_label_pc_10007014 ], [ %v1_10006c3c, %dec_label_pc_10006fe8 ], [ %v1_10006c3c, %dec_label_pc_10006ffc ], [ %v1_10006c3c, %dec_label_pc_10007008 ], [ %v1_10006c3c, %dec_label_pc_1000701c ], [ %v1_10006c3c, %dec_label_pc_10007040 ], [ %v1_10006c3c, %dec_label_pc_1000704c ], [ %v1_10006c3c, %dec_label_pc_10007058 ], [ %v1_10006c3c, %dec_label_pc_10007064 ], [ %v1_10006c3c, %dec_label_pc_10007070 ]
  %v0_10006d38 = phi i32 [ %v0_10006fd4, %dec_label_pc_10006fd4.dec_label_pc_10006d34_crit_edge ], [ %v0_10006d38.pre.pre, %dec_label_pc_10006d2c.dec_label_pc_10006d34.loopexit_crit_edge ], [ %v0_10006fe0, %dec_label_pc_10006fe0 ], [ %v0_10006ff4, %dec_label_pc_10006ff4 ], [ %v0_10007014, %dec_label_pc_10007014 ], [ %v0_10006fe0, %dec_label_pc_10006fe8 ], [ %v0_10006ff4, %dec_label_pc_10006ffc ], [ %v0_10007008, %dec_label_pc_10007008 ], [ %v0_10007014, %dec_label_pc_1000701c ], [ %v0_10007028, %dec_label_pc_10007040 ], [ %v0_1000704c, %dec_label_pc_1000704c ], [ %v0_10007058, %dec_label_pc_10007058 ], [ %v0_10007064, %dec_label_pc_10007064 ], [ %v0_10007070, %dec_label_pc_10007070 ]
  %v0_10006d34 = phi i32 [ %v0_10006d34.pre, %dec_label_pc_10006fd4.dec_label_pc_10006d34_crit_edge ], [ %v0_10006c44, %dec_label_pc_10006d2c.dec_label_pc_10006d34.loopexit_crit_edge ], [ 172, %dec_label_pc_10006fe0 ], [ 100, %dec_label_pc_10006ff4 ], [ 198, %dec_label_pc_10007014 ], [ 172, %dec_label_pc_10006fe8 ], [ 100, %dec_label_pc_10006ffc ], [ 169, %dec_label_pc_10007008 ], [ 198, %dec_label_pc_1000701c ], [ 106, %dec_label_pc_10007040 ], [ 150, %dec_label_pc_1000704c ], [ 49, %dec_label_pc_10007058 ], [ 178, %dec_label_pc_10007064 ], [ 160, %dec_label_pc_10007070 ]
  %v1_10006d34 = mul i32 %v0_10006d34, 16777216
  %v1_10006d38 = mul i32 %v0_10006d38, 65536
  %v2_10006d3c = or i32 %v1_10006d34, %v1_10006d38
  %v1_10006d40 = mul i32 %v0_10006d40, 256
  %v1_10006d44 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006d44 = or i32 %v2_10006d3c, %v1_10006d44
  store i32 %v2_10006d44, i32* %r0.global-to-local, align 4
  %v0_10006d48 = load i32, i32* @r21, align 4
  store i32 %v0_10006d48, i32* @r3, align 4
  %v2_10006d4c = or i32 %v2_10006d44, %v1_10006d40
  store i32 %v2_10006d4c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006d4c, i32* @global_var_1001c230.145, align 4
  %v0_10006d58 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006d58 = trunc i32 %v0_10006d58 to i16
  store i16 %v1_10006d58, i16* bitcast (i32* @global_var_1001c22a.146 to i16*), align 4
  %v2_10006d5c = call i32 @function_100043cc(i32 %v0_10006d48, i32 20)
  %v3_10006d5c = trunc i32 %v2_10006d5c to i16
  %v3_10006d60 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006d60 = trunc i64 %v3_10006d60 to i32
  store i32 %v4_10006d60, i32* %r9.global-to-local, align 4
  store i16 %v3_10006d5c, i16* bitcast (i32* @global_var_1001c22a.146 to i16*), align 4
  %v4_10006d70 = mul nsw i64 %v3_10006d60, 1717986919
  %v5_10006d70 = udiv i64 %v4_10006d70, 4294967296
  %v6_10006d70 = trunc i64 %v5_10006d70 to i32
  %tmp = icmp slt i32 %v4_10006d60, 0
  %v1_10006d74 = zext i1 %tmp to i32
  %v2_10006d74 = ashr i32 %v4_10006d60, 31
  %v3_10006d74 = and i32 %v2_10006d74, -2
  %v4_10006d74 = or i32 %v3_10006d74, %v1_10006d74
  store i32 %v4_10006d74, i32* %r11.global-to-local, align 4
  %v1_10006d7843 = udiv i64 %v4_10006d70, 17179869184
  %v1_10006d78 = trunc i64 %v1_10006d7843 to i32
  %v2_10006d78 = ashr i32 %v6_10006d70, 31
  %v3_10006d78 = and i32 %v2_10006d78, -1073741824
  %v4_10006d78 = or i32 %v3_10006d78, %v1_10006d78
  %v2_10006d7c = sub nsw i32 %v4_10006d78, %v4_10006d74
  %v1_10006d80 = mul i32 %v2_10006d7c, 10
  %v2_10006d84 = icmp slt i32 %v4_10006d60, %v1_10006d80
  %v4_10006d84 = icmp eq i32 %v4_10006d60, %v1_10006d80
  store i1 %v2_10006d84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d84, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_10006d84, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001c236.129, align 2
  %v3_10006d94 = load i32, i32* @global_var_1001c230.145, align 4
  store i32 %v3_10006d94, i32* %r0.global-to-local, align 4
  %v0_10006d98 = load i32, i32* @r22, align 4
  store i32 %v0_10006d98, i32* @r4, align 4
  %v0_10006d9c = load i32, i32* %r29.global-to-local, align 4
  %v1_10006d9c = trunc i32 %v0_10006d9c to i16
  store i16 %v1_10006d9c, i16* bitcast (i32* @global_var_1001c244.147 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006d94, i32* @global_var_1001c238.148, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006dac = load i32, i32* @r21, align 4
  store i32 %v0_10006dac, i32* %r3.global-to-local, align 4
  %v4_10006db0 = call i32 @function_10004430(i32 %v0_10006dac, i32 %v0_10006d98, i32 20, i32 20)
  %v5_10006db0 = trunc i32 %v4_10006db0 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10006db0, i16* bitcast (i32* @global_var_1001c244.147 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006dc0 = load i32, i32* @global_var_1001c230.145, align 4
  store i32 %v3_10006dc0, i32* %r9.global-to-local, align 4
  %v0_10006dc4 = load i32, i32* @r21, align 4
  %v3_10006dc8 = load i16, i16* @global_var_1001c236.129, align 2
  %v4_10006dc8 = zext i16 %v3_10006dc8 to i32
  store i32 %v4_10006dc8, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006dd0 = load i32, i32* @global_var_1001c1b4.119, align 4
  store i32 %v3_10006dd0, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006dd8 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10006dd8, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268463600, i32* @lr, align 4
  %v6_10006dec = call i32 @function_10009ac0(i32 %v3_10006dd0, i32 %v0_10006dc4, i32 40, i32 16384, i32 %v1_10006dd8, i32 16)
  store i32 %v6_10006dec, i32* %r3.global-to-local, align 4
  %v3_10006df0 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006df0 = trunc i64 %v3_10006df0 to i32
  %v1_10006df4 = add i32 %v4_10006df0, 1
  store i32 %v1_10006df4, i32* %r9.global-to-local, align 4
  %v1_10006df8 = icmp slt i32 %v1_10006df4, 383
  %v3_10006df8 = icmp eq i32 %v1_10006df4, 383
  store i1 %v1_10006df8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006df8, i1* %cr7_eq.global-to-local, align 1
  %v5_10006dfc = sext i32 %v1_10006df4 to i64
  store i64 %v5_10006dfc, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_10006df4, 384
  br i1 %tmp104, label %dec_label_pc_10006d34.dec_label_pc_10006c04_crit_edge, label %dec_label_pc_10006e04

dec_label_pc_10006d34.dec_label_pc_10006c04_crit_edge: ; preds = %dec_label_pc_10006d34
  %v0_10006c04.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006c04

dec_label_pc_10006e04:                            ; preds = %dec_label_pc_10006d34
  %v0_10006e04 = load i32, i32* @r31, align 4
  store i32 %v0_10006e04, i32* @r23, align 4
  br label %dec_label_pc_10006e08

dec_label_pc_10006e08:                            ; preds = %dec_label_pc_10006be4, %dec_label_pc_10006e04
  %v0_10006e08 = call i32 @function_1000953c()
  store i32 %v0_10006e08, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006e08, i32* %r24.global-to-local, align 4
  %v2_10006e20 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_10006e6c = zext i8 %tmp55 to i32
  %v1_10006e70 = icmp ult i8 %tmp55, 6
  %v3_10006e70 = icmp eq i8 %tmp55, 6
  %v4_10006e78 = zext i16 %tmp54 to i32
  %v1_10006e80 = icmp ult i16 %tmp54, 23
  %v3_10006e80 = icmp eq i16 %tmp54, 23
  %v4_10006e90 = zext i16 %tmp53 to i32
  %v1_10006ea0 = and i32 %tmp52, 131072
  %v3_10006ea0 = icmp eq i32 %v1_10006ea0, 0
  %v1_10006ec8 = add i32 %tmp51, -1
  %v2_10006ecc = icmp slt i32 %v1_10006ec8, %tmp50
  %v4_10006ecc = icmp eq i32 %v1_10006ec8, %tmp50
  %v1_10006ea8 = and i32 %tmp52, 1048576
  %v3_10006ea8 = icmp eq i32 %v1_10006ea8, 0
  %v1_10006eb0 = and i32 %tmp52, 262144
  %v3_10006eb0 = icmp eq i32 %v1_10006eb0, 0
  %v1_10006eb8 = and i32 %tmp52, 65536
  %v3_10006eb8 = icmp eq i32 %v1_10006eb8, 0
  %v1_10006e88 = icmp ult i16 %tmp54, 2323
  %v3_10006e88 = icmp eq i16 %tmp54, 2323
  br label %dec_label_pc_10006e14

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006ec0, %dec_label_pc_10006eb8, %dec_label_pc_10006eb0, %dec_label_pc_10006e90, %dec_label_pc_10006e88, %dec_label_pc_10006e6c, %dec_label_pc_10006e58, %dec_label_pc_10006ea8, %dec_label_pc_10006e9c, %dec_label_pc_10006e50, %dec_label_pc_10008020, %dec_label_pc_10006e08
  %v1_10006e1c = phi i32 [ %v0_10006e08, %dec_label_pc_10006e08 ], [ %v1_10006e1c.pre.pre, %dec_label_pc_10008020 ], [ %v0_10006e44, %dec_label_pc_10006e50 ], [ %v0_10006e44, %dec_label_pc_10006e9c ], [ %v0_10006e44, %dec_label_pc_10006ea8 ], [ %v0_10006e44, %dec_label_pc_10006e58 ], [ %v0_10006e44, %dec_label_pc_10006e6c ], [ %v0_10006e44, %dec_label_pc_10006e88 ], [ %v0_10006e44, %dec_label_pc_10006e90 ], [ %v0_10006e44, %dec_label_pc_10006eb0 ], [ %v0_10006e44, %dec_label_pc_10006eb8 ], [ %v0_10006e44, %dec_label_pc_10006ec0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10006e1c = inttoptr i32 %v1_10006e1c to i32*
  store i32 0, i32* %v2_10006e1c, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10006e2c = load i32, i32* @global_var_1001c1b4.119, align 4
  store i32 %v3_10006e2c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268463676, i32* @lr, align 4
  %v6_10006e38 = call i32 @function_10009a48(i32 %v3_10006e2c, i32 %v2_10006e20, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006e38, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_10006e38, 1
  br i1 %tmp105, label %dec_label_pc_10007088, label %dec_label_pc_10006e44

dec_label_pc_10006e44:                            ; preds = %dec_label_pc_10006e14
  %v0_10006e44 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006e44 = inttoptr i32 %v0_10006e44 to i32*
  %v2_10006e44 = load i32, i32* %v1_10006e44, align 4
  store i32 %v2_10006e44, i32* %r0.global-to-local, align 4
  %v1_10006e48 = icmp slt i32 %v2_10006e44, 11
  %v3_10006e48 = icmp eq i32 %v2_10006e44, 11
  store i1 %v1_10006e48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e48, label %dec_label_pc_10007088, label %dec_label_pc_10006e50

dec_label_pc_10006e50:                            ; preds = %dec_label_pc_10006e44
  %v1_10006e50 = icmp ult i32 %v6_10006e38, 39
  %v3_10006e50 = icmp eq i32 %v6_10006e38, 39
  store i1 %v1_10006e50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e50, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v6_10006e38, 40
  br i1 %tmp106, label %dec_label_pc_10006e14, label %dec_label_pc_10006e58

dec_label_pc_10006e58:                            ; preds = %dec_label_pc_10006e50
  %v3_10006e5c = load i32, i32* @global_var_1001c188.16, align 4
  store i32 %v3_10006e5c, i32* %r0.global-to-local, align 4
  store i32 %tmp56, i32* %r9.global-to-local, align 4
  %v2_10006e64 = icmp slt i32 %tmp56, %v3_10006e5c
  %v4_10006e64 = icmp eq i32 %tmp56, %v3_10006e5c
  store i1 %v2_10006e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006e64, label %dec_label_pc_10006e6c, label %dec_label_pc_10006e14

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e58
  store i32 %v4_10006e6c, i32* %r0.global-to-local, align 4
  store i1 %v1_10006e70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e70, label %dec_label_pc_10006e78, label %dec_label_pc_10006e14

dec_label_pc_10006e78:                            ; preds = %dec_label_pc_10006e6c
  store i32 %v4_10006e78, i32* %r8.global-to-local, align 4
  store i32 %v4_10006e78, i32* %r0.global-to-local, align 4
  store i1 %v1_10006e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e80, label %dec_label_pc_10006e90, label %dec_label_pc_10006e88

dec_label_pc_10006e88:                            ; preds = %dec_label_pc_10006e78
  store i1 %v1_10006e88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e88, label %dec_label_pc_10006e90, label %dec_label_pc_10006e14

dec_label_pc_10006e90:                            ; preds = %dec_label_pc_10006e88, %dec_label_pc_10006e78
  store i32 %v4_10006e90, i32* %r0.global-to-local, align 4
  %v1_10006e94 = load i32, i32* @r20, align 4
  %v2_10006e94 = icmp slt i32 %v4_10006e90, %v1_10006e94
  %v4_10006e94 = icmp eq i32 %v4_10006e90, %v1_10006e94
  store i1 %v2_10006e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006e94, label %dec_label_pc_10006e9c, label %dec_label_pc_10006e14

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e90
  store i32 %tmp52, i32* %r0.global-to-local, align 4
  store i32 %v1_10006ea0, i32* %r10.global-to-local, align 4
  br i1 %v3_10006ea0, label %dec_label_pc_10006e14, label %dec_label_pc_10006ea8

dec_label_pc_10006ea8:                            ; preds = %dec_label_pc_10006e9c
  store i32 %v1_10006ea8, i32* %r11.global-to-local, align 4
  br i1 %v3_10006ea8, label %dec_label_pc_10006e14, label %dec_label_pc_10006eb0

dec_label_pc_10006eb0:                            ; preds = %dec_label_pc_10006ea8
  store i32 %v1_10006eb0, i32* %r9.global-to-local, align 4
  br i1 %v3_10006eb0, label %dec_label_pc_10006eb8, label %dec_label_pc_10006e14

dec_label_pc_10006eb8:                            ; preds = %dec_label_pc_10006eb0
  store i32 %v1_10006eb8, i32* %r10.global-to-local, align 4
  br i1 %v3_10006eb8, label %dec_label_pc_10006ec0, label %dec_label_pc_10006e14

dec_label_pc_10006ec0:                            ; preds = %dec_label_pc_10006eb8
  store i32 %tmp51, i32* %r9.global-to-local, align 4
  store i32 %tmp50, i32* %r0.global-to-local, align 4
  store i32 %v1_10006ec8, i32* %r10.global-to-local, align 4
  store i1 %v2_10006ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006ecc, label %dec_label_pc_10006ed4, label %dec_label_pc_10006e14

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ec0
  %v0_10006ed4 = load i32, i32* @r31, align 4
  %v1_10006ed4 = icmp slt i32 %v0_10006ed4, 255
  %v2_10006ed4 = icmp sgt i32 %v0_10006ed4, 255
  %v3_10006ed4 = icmp eq i32 %v0_10006ed4, 255
  store i1 %v1_10006ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006ed4, label %dec_label_pc_10007088, label %dec_label_pc_10006edc

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ed4
  %v3_10006ee4 = load i32, i32* @global_var_1001c1b0.118, align 4
  store i32 %v3_10006ee4, i32* %r11.global-to-local, align 4
  %v1_10006ee8 = mul i32 %v0_10006ed4, 256
  store i32 %v1_10006ee8, i32* %r9.global-to-local, align 4
  %v2_10006eec = mul i32 %v0_10006ed4, 288
  store i32 %v2_10006eec, i32* %r0.global-to-local, align 4
  %v2_10006ef0 = add i32 %v3_10006ee4, %v2_10006eec
  store i32 %v2_10006ef0, i32* @r3, align 4
  %v1_10006ef4 = add i32 %v2_10006ef0, 12
  %v2_10006ef4 = inttoptr i32 %v1_10006ef4 to i32*
  %v3_10006ef4 = load i32, i32* %v2_10006ef4, align 4
  store i32 %v3_10006ef4, i32* %r9.global-to-local, align 4
  %v1_10006ef8 = icmp slt i32 %v3_10006ef4, 0
  %v3_10006ef8 = icmp eq i32 %v3_10006ef4, 0
  store i1 %v1_10006ef8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ef8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ef8, label %dec_label_pc_1000801c, label %dec_label_pc_10006f00

dec_label_pc_10006f00:                            ; preds = %dec_label_pc_10006edc
  %v1_10006f00 = sub i32 256, %v0_10006ed4
  store i32 %v1_10006f00, i32* %r11.global-to-local, align 4
  store i32 %v0_10006ed4, i32* %r29.global-to-local, align 4
  store i32 %v1_10006f00, i32* %ctr.global-to-local, align 4
  %v1_10006f0c = add i32 %v2_10006ef0, 288
  store i32 %v1_10006f0c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006f10

dec_label_pc_10006f10:                            ; preds = %dec_label_pc_10006f18, %dec_label_pc_10006f00
  %v0_10006f18 = phi i32 [ %v1_10006f20, %dec_label_pc_10006f18 ], [ %v1_10006f0c, %dec_label_pc_10006f00 ]
  %v0_10006f14 = phi i32 [ %v1_10006f14, %dec_label_pc_10006f18 ], [ %v1_10006f00, %dec_label_pc_10006f00 ]
  %v0_10006f10 = phi i32 [ %v1_10006f10, %dec_label_pc_10006f18 ], [ %v0_10006ed4, %dec_label_pc_10006f00 ]
  %v1_10006f10 = add i32 %v0_10006f10, 1
  store i32 %v1_10006f10, i32* @r29, align 4
  %v1_10006f14 = add i32 %v0_10006f14, -1
  store i32 %v1_10006f14, i32* %ctr.global-to-local, align 4
  %v2_10006f14 = icmp eq i32 %v1_10006f14, 0
  br i1 %v2_10006f14, label %dec_label_pc_10007088, label %dec_label_pc_10006f18

dec_label_pc_10006f18:                            ; preds = %dec_label_pc_10006f10
  %v1_10006f18 = add i32 %v0_10006f18, 12
  %v2_10006f18 = inttoptr i32 %v1_10006f18 to i32*
  %v3_10006f18 = load i32, i32* %v2_10006f18, align 4
  store i32 %v3_10006f18, i32* %r0.global-to-local, align 4
  store i32 %v0_10006f18, i32* @r3, align 4
  %v1_10006f20 = add i32 %v0_10006f18, 288
  store i32 %v1_10006f20, i32* %r9.global-to-local, align 4
  %v1_10006f24 = icmp slt i32 %v3_10006f18, 0
  %v3_10006f24 = icmp eq i32 %v3_10006f18, 0
  store i1 %v1_10006f24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f24, label %dec_label_pc_10008020, label %dec_label_pc_10006f10

dec_label_pc_10006fcc:                            ; preds = %dec_label_pc_10006994, %dec_label_pc_1000800c
  %v0_10006fd0 = call i32 @function_1000a5b0()
  store i32 %v0_10006fd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006c74, %dec_label_pc_10006fcc
  %v0_10006d4015 = phi i32 [ %v0_10006fd0, %dec_label_pc_10006fcc ], [ %v1_10006c3c, %dec_label_pc_10006c74 ]
  %v0_10006fd4 = load i32, i32* @r9, align 4
  %v1_10006fd4 = icmp slt i32 %v0_10006fd4, 168
  %v3_10006fd4 = icmp eq i32 %v0_10006fd4, 168
  store i1 %v1_10006fd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006fd4, label %dec_label_pc_10006c28.preheader, label %dec_label_pc_10006fd4.dec_label_pc_10006d34_crit_edge

dec_label_pc_10006fd4.dec_label_pc_10006d34_crit_edge: ; preds = %dec_label_pc_10006fd4
  %v0_10006d34.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006d34

dec_label_pc_10006fe0:                            ; preds = %dec_label_pc_10006c7c
  %v0_10006fe0 = load i32, i32* @r9, align 4
  %v1_10006fe0 = icmp ult i32 %v0_10006fe0, 15
  %v3_10006fe0 = icmp eq i32 %v0_10006fe0, 15
  store i1 %v1_10006fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10006fe0, 16
  br i1 %tmp107, label %dec_label_pc_10006d34, label %dec_label_pc_10006fe8

dec_label_pc_10006fe8:                            ; preds = %dec_label_pc_10006fe0
  %v1_10006fe8 = icmp ult i32 %v0_10006fe0, 31
  %v3_10006fe8 = icmp eq i32 %v0_10006fe0, 31
  store i1 %v1_10006fe8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fe8, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10006fe0, 32
  br i1 %tmp108, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10006ff4:                            ; preds = %dec_label_pc_10006c84
  %v0_10006ff4 = load i32, i32* @r9, align 4
  %v1_10006ff4 = icmp ult i32 %v0_10006ff4, 63
  %v3_10006ff4 = icmp eq i32 %v0_10006ff4, 63
  store i1 %v1_10006ff4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ff4, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_10006ff4, 64
  br i1 %tmp109, label %dec_label_pc_10006d34, label %dec_label_pc_10006ffc

dec_label_pc_10006ffc:                            ; preds = %dec_label_pc_10006ff4
  %v1_10006ffc = icmp ult i32 %v0_10006ff4, 126
  %v3_10006ffc = icmp eq i32 %v0_10006ff4, 126
  store i1 %v1_10006ffc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ffc, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_10006ff4, 127
  br i1 %tmp110, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007008:                            ; preds = %dec_label_pc_10006c8c
  %v0_10007008 = load i32, i32* @r9, align 4
  %v1_10007008 = icmp slt i32 %v0_10007008, 255
  %v3_10007008 = icmp eq i32 %v0_10007008, 255
  store i1 %v1_10007008, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007008, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007014:                            ; preds = %dec_label_pc_10006c94
  %v0_10007014 = load i32, i32* @r9, align 4
  %v1_10007014 = icmp ult i32 %v0_10007014, 17
  %v3_10007014 = icmp eq i32 %v0_10007014, 17
  store i1 %v1_10007014, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007014, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_10007014, 18
  br i1 %tmp111, label %dec_label_pc_10006d34, label %dec_label_pc_1000701c

dec_label_pc_1000701c:                            ; preds = %dec_label_pc_10007014
  %v1_1000701c = icmp eq i32 %v0_10007014, 18
  %v3_1000701c = icmp eq i32 %v0_10007014, 19
  store i1 %v1_1000701c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000701c, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_10007014, 20
  br i1 %tmp112, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007028:                            ; preds = %dec_label_pc_10006ca4
  %v0_10007028 = load i32, i32* @r9, align 4
  %v1_10007028 = icmp slt i32 %v0_10007028, 186
  %v3_10007028 = icmp eq i32 %v0_10007028, 186
  store i1 %v1_10007028, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007028, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007028, label %dec_label_pc_10006c28, label %dec_label_pc_10007030

dec_label_pc_10007030:                            ; preds = %dec_label_pc_10007028
  %v1_10007030 = icmp slt i32 %v0_10007028, 187
  %v3_10007030 = icmp eq i32 %v0_10007028, 187
  store i1 %v1_10007030, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007030, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007030, label %dec_label_pc_10006c28, label %dec_label_pc_10007038

dec_label_pc_10007038:                            ; preds = %dec_label_pc_10007030
  %v1_10007038 = icmp slt i32 %v0_10007028, 185
  %v3_10007038 = icmp eq i32 %v0_10007028, 185
  store i1 %v1_10007038, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007038, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007038, label %dec_label_pc_10006c28, label %dec_label_pc_10007040

dec_label_pc_10007040:                            ; preds = %dec_label_pc_10007038
  %v1_10007040 = icmp slt i32 %v0_10007028, 184
  %v3_10007040 = icmp eq i32 %v0_10007028, 184
  store i1 %v1_10007040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007040, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007040, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_1000704c:                            ; preds = %dec_label_pc_10006cac
  %v0_1000704c = load i32, i32* @r9, align 4
  %v1_1000704c = icmp slt i32 %v0_1000704c, 31
  %v3_1000704c = icmp eq i32 %v0_1000704c, 31
  store i1 %v1_1000704c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000704c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000704c, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007058:                            ; preds = %dec_label_pc_10006cb4
  %v0_10007058 = load i32, i32* @r9, align 4
  %v1_10007058 = icmp slt i32 %v0_10007058, 51
  %v3_10007058 = icmp eq i32 %v0_10007058, 51
  store i1 %v1_10007058, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007058, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007058, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007064:                            ; preds = %dec_label_pc_10006cbc
  %v0_10007064 = load i32, i32* @r9, align 4
  %v1_10007064 = icmp slt i32 %v0_10007064, 62
  %v3_10007064 = icmp eq i32 %v0_10007064, 62
  store i1 %v1_10007064, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007064, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10006cc4
  %v0_10007070 = load i32, i32* @r9, align 4
  %v1_10007070 = icmp slt i32 %v0_10007070, 13
  %v3_10007070 = icmp eq i32 %v0_10007070, 13
  store i1 %v1_10007070, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007070, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007070, label %dec_label_pc_10006c28, label %dec_label_pc_10006d34

dec_label_pc_10007088:                            ; preds = %dec_label_pc_10006ed4, %dec_label_pc_10006e44, %dec_label_pc_10006e14, %dec_label_pc_10006f10
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100070a0127 = load i32, i32* @r1, align 4
  %v3_100070a0128 = add i32 %v2_100070a0127, 64
  %v4_100070a0129 = inttoptr i32 %v3_100070a0128 to i32*
  store i32 0, i32* %v4_100070a0129, align 4
  %v0_100070a4130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100070a4131 = add i32 %v0_100070a4130, -1
  store i32 %v1_100070a4131, i32* %ctr.global-to-local, align 4
  %v2_100070a4132 = icmp eq i32 %v1_100070a4131, 0
  br i1 %v2_100070a4132, label %dec_label_pc_100070a8, label %dec_label_pc_10007098.dec_label_pc_10007098_crit_edge

dec_label_pc_10007098.dec_label_pc_10007098_crit_edge: ; preds = %dec_label_pc_10007088, %dec_label_pc_10007098.dec_label_pc_10007098_crit_edge
  %v0_10007098.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100070a0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007098 = add i32 %v0_10007098.pre, 64
  store i32 %v1_10007098, i32* %r11.global-to-local, align 4
  %v1_1000709c = add i32 %v0_10007098.pre, 4
  store i32 %v1_1000709c, i32* %r9.global-to-local, align 4
  %v2_100070a0 = load i32, i32* @r1, align 4
  %v3_100070a0 = add i32 %v2_100070a0, %v1_10007098
  %v4_100070a0 = inttoptr i32 %v3_100070a0 to i32*
  store i32 %v0_100070a0.pre, i32* %v4_100070a0, align 4
  %v0_100070a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100070a4 = add i32 %v0_100070a4, -1
  store i32 %v1_100070a4, i32* %ctr.global-to-local, align 4
  %v2_100070a4 = icmp eq i32 %v1_100070a4, 0
  br i1 %v2_100070a4, label %dec_label_pc_100070a8, label %dec_label_pc_10007098.dec_label_pc_10007098_crit_edge

dec_label_pc_100070a8:                            ; preds = %dec_label_pc_10007098.dec_label_pc_10007098_crit_edge, %dec_label_pc_10007088
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100070b8

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_100070b8, %dec_label_pc_100070a8
  %v1_100070b8 = phi i32 [ 0, %dec_label_pc_100070a8 ], [ %v1_100070bc, %dec_label_pc_100070b8 ]
  %v0_100070b8 = phi i32 [ 0, %dec_label_pc_100070a8 ], [ %v0_100070c4, %dec_label_pc_100070b8 ]
  %v2_100070b8 = load i32, i32* @r15, align 4
  %v3_100070b8 = add i32 %v2_100070b8, %v1_100070b8
  %v4_100070b8 = inttoptr i32 %v3_100070b8 to i32*
  store i32 %v0_100070b8, i32* %v4_100070b8, align 4
  %v0_100070bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100070bc = add i32 %v0_100070bc, 4
  store i32 %v1_100070bc, i32* %r9.global-to-local, align 4
  %v0_100070c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100070c0 = add i32 %v0_100070c0, -1
  store i32 %v1_100070c0, i32* %ctr.global-to-local, align 4
  %v2_100070c0 = icmp eq i32 %v1_100070c0, 0
  %v0_100070c4 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_100070c0, label %dec_label_pc_100070c4, label %dec_label_pc_100070b8

dec_label_pc_100070c4:                            ; preds = %dec_label_pc_100070b8
  %v5_100070c4 = sext i32 %v0_100070c4 to i64
  store i64 %v5_100070c4, i64* %stack_var_-1916, align 8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v2_100071fc = ptrtoint i32* %stack_var_-1872 to i32
  %v1_10007200 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10007208 = ptrtoint i32* %stack_var_-1908 to i32
  %v2_10007264 = ptrtoint i32* %stack_var_-1928 to i32
  %v2_10007e00 = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10007e04 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10007144

dec_label_pc_100070e0:                            ; preds = %dec_label_pc_10007144
  %v3_100070e0 = load i32, i32* @global_var_1001c1ac.111, align 4
  store i32 %v3_100070e0, i32* %r0.global-to-local, align 4
  %v1_100070e4 = add i32 %v2_1000715c, 8
  %v2_100070e4 = inttoptr i32 %v1_100070e4 to i32*
  %v3_100070e4 = load i32, i32* %v2_100070e4, align 4
  store i32 %v3_100070e4, i32* %r9.global-to-local, align 4
  %v2_100070e8 = sub i32 %v3_100070e0, %v3_100070e4
  store i32 %v2_100070e8, i32* %r0.global-to-local, align 4
  %v2_100070ec = icmp ult i32 %v2_100070e8, 30
  %v3_100070ec = icmp ugt i32 %v2_100070e8, 30
  %v4_100070ec = icmp eq i32 %v2_100070e8, 30
  store i1 %v2_100070ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070ec, label %dec_label_pc_1000718c, label %dec_label_pc_100070f4

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_10007174, %dec_label_pc_100070e0
  %v1_100070f4 = icmp slt i32 %v3_10007160, 1
  store i1 %v1_100070f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007164, i1* %cr7_eq.global-to-local, align 1
  %v1_10007358 = add i32 %v2_1000715c, 4
  %v2_10007358 = inttoptr i32 %v1_10007358 to i32*
  %v3_10007358 = load i32, i32* %v2_10007358, align 4
  store i32 %v3_10007358, i32* %r3.global-to-local, align 4
  br i1 %v3_10007164, label %dec_label_pc_10007358, label %dec_label_pc_100070fc

dec_label_pc_100070fc:                            ; preds = %dec_label_pc_100070f4
  store i32 %v2_10007264, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10007108 = call i32 @__asm_rlwinm(i32 %v3_10007358, i32 29, i32 3, i32 29)
  %v0_1000710c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000710c = icmp slt i32 %v0_1000710c, %v3_10007358
  %v4_1000710c = icmp eq i32 %v0_1000710c, %v3_10007358
  store i1 %v2_1000710c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000710c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007110 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007110 = add i32 %v1_10007110, %v1_10007108
  store i32 %v2_10007110, i32* %r11.global-to-local, align 4
  %v1_10007114 = urem i32 %v3_10007358, 32
  store i32 %v1_10007114, i32* %r10.global-to-local, align 4
  %v1_10007118 = add i32 %v2_10007110, 56
  %v2_10007118 = inttoptr i32 %v1_10007118 to i32*
  %v3_10007118 = load i32, i32* %v2_10007118, align 4
  %v0_1000711c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000711c = shl i32 %v0_1000711c, %v1_10007114
  store i32 %v3_1000711c, i32* %r0.global-to-local, align 4
  %v2_10007120 = or i32 %v3_1000711c, %v3_10007118
  store i32 %v2_10007120, i32* %r9.global-to-local, align 4
  store i32 %v2_10007120, i32* %v2_10007118, align 4
  br i1 %v2_1000710c, label %dec_label_pc_1000712c, label %dec_label_pc_10007130

dec_label_pc_1000712c:                            ; preds = %dec_label_pc_100070fc
  store i32 %v3_10007358, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007130

dec_label_pc_10007130:                            ; preds = %dec_label_pc_10007358, %dec_label_pc_100070fc, %dec_label_pc_1000716c, %dec_label_pc_10007384, %dec_label_pc_1000734c, %dec_label_pc_1000712c
  %v3_10007130 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007130 = trunc i64 %v3_10007130 to i32
  store i32 %v4_10007130, i32* %r9.global-to-local, align 4
  %v1_10007134 = add i32 %v4_10007130, 1
  store i32 %v1_10007134, i32* %r0.global-to-local, align 4
  %v1_10007138 = icmp slt i32 %v1_10007134, 255
  %v2_10007138 = icmp sgt i32 %v1_10007134, 255
  %v3_10007138 = icmp eq i32 %v1_10007134, 255
  store i1 %v1_10007138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007138, i1* %cr7_eq.global-to-local, align 1
  %v5_1000713c = sext i32 %v1_10007134 to i64
  store i64 %v5_1000713c, i64* %stack_var_-1916, align 8
  br i1 %v2_10007138, label %dec_label_pc_100071dc, label %dec_label_pc_10007144

dec_label_pc_10007144:                            ; preds = %dec_label_pc_100071c0, %dec_label_pc_10007130, %dec_label_pc_100070c4
  %v0_10007148 = phi i32 [ 0, %dec_label_pc_100070c4 ], [ %v1_10007134, %dec_label_pc_10007130 ], [ %v1_100071cc, %dec_label_pc_100071c0 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_1000714c = load i32, i32* @global_var_1001c1b0.118, align 4
  store i32 %v3_1000714c, i32* %r9.global-to-local, align 4
  %v2_10007154 = mul i32 %v0_10007148, 288
  store i32 %v2_10007154, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_1000715c = add i32 %v3_1000714c, %v2_10007154
  store i32 %v2_1000715c, i32* @r29, align 4
  %v1_10007160 = add i32 %v2_1000715c, 12
  %v2_10007160 = inttoptr i32 %v1_10007160 to i32*
  %v3_10007160 = load i32, i32* %v2_10007160, align 4
  store i32 %v3_10007160, i32* %r10.global-to-local, align 4
  %v1_10007164 = icmp eq i32 %v3_10007160, 0
  %v2_10007164 = icmp ugt i32 %v3_10007160, 1
  %v3_10007164 = icmp eq i32 %v3_10007160, 1
  store i1 %v1_10007164, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007164, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007164, label %dec_label_pc_100070e0, label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %dec_label_pc_10007144
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10007164, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007164, label %dec_label_pc_10007130, label %dec_label_pc_10007174

dec_label_pc_10007174:                            ; preds = %dec_label_pc_1000716c
  %v3_10007174 = load i32, i32* @global_var_1001c1ac.111, align 4
  store i32 %v3_10007174, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000717c = add i32 %v2_1000715c, 8
  %v2_1000717c = inttoptr i32 %v1_1000717c to i32*
  %v3_1000717c = load i32, i32* %v2_1000717c, align 4
  store i32 %v3_1000717c, i32* %r9.global-to-local, align 4
  %v2_10007180 = sub i32 %v3_10007174, %v3_1000717c
  store i32 %v2_10007180, i32* %r0.global-to-local, align 4
  %v2_10007184 = icmp ult i32 %v2_10007180, 5
  %v3_10007184 = icmp ugt i32 %v2_10007180, 5
  %v4_10007184 = icmp eq i32 %v2_10007180, 5
  store i1 %v2_10007184, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007184, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007184, label %dec_label_pc_1000718c, label %dec_label_pc_100070f4

dec_label_pc_1000718c:                            ; preds = %dec_label_pc_10007174, %dec_label_pc_100070e0
  %v1_1000718c = add i32 %v2_1000715c, 4
  %v2_1000718c = inttoptr i32 %v1_1000718c to i32*
  %v3_1000718c = load i32, i32* %v2_1000718c, align 4
  store i32 %v3_1000718c, i32* %r3.global-to-local, align 4
  store i32 268464532, i32* @lr, align 4
  %v0_10007190 = call i32 @function_10008e20()
  store i32 %v0_10007190, i32* %r3.global-to-local, align 4
  %v0_10007194 = load i32, i32* @r29, align 4
  %v1_10007194 = add i32 %v0_10007194, 12
  %v2_10007194 = inttoptr i32 %v1_10007194 to i32*
  %v3_10007194 = load i32, i32* %v2_10007194, align 4
  store i32 %v3_10007194, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_1000719c = icmp ult i32 %v3_10007194, 2
  %v3_1000719c = icmp eq i32 %v3_10007194, 2
  store i1 %v1_1000719c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000719c, i1* %cr7_eq.global-to-local, align 1
  %v2_100071a0 = add i32 %v0_10007194, 4
  %v3_100071a0 = inttoptr i32 %v2_100071a0 to i32*
  store i32 -1, i32* %v3_100071a0, align 4
  %tmp114 = icmp ult i32 %v3_10007194, 3
  br i1 %tmp114, label %dec_label_pc_1000734c, label %dec_label_pc_100071a8

dec_label_pc_100071a8:                            ; preds = %dec_label_pc_1000718c
  %v0_100071a8 = load i32, i32* @r29, align 4
  %v1_100071a8 = add i32 %v0_100071a8, 284
  %v2_100071a8 = inttoptr i32 %v1_100071a8 to i8*
  %v3_100071a8 = load i8, i8* %v2_100071a8, align 1
  %v4_100071a8 = zext i8 %v3_100071a8 to i32
  %v1_100071ac = add nuw nsw i32 %v4_100071a8, 1
  %v1_100071b0 = urem i32 %v1_100071ac, 256
  store i32 %v1_100071b0, i32* %r9.global-to-local, align 4
  %v1_100071b4 = icmp ult i32 %v1_100071b0, 10
  %v3_100071b4 = icmp eq i32 %v1_100071b0, 10
  store i1 %v1_100071b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071b4, i1* %cr7_eq.global-to-local, align 1
  %v1_100071b8 = trunc i32 %v1_100071ac to i8
  store i8 %v1_100071b8, i8* %v2_100071a8, align 1
  %v0_100071bc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100071bc, label %dec_label_pc_1000734c, label %dec_label_pc_100071c0

dec_label_pc_100071c0:                            ; preds = %dec_label_pc_100071a8
  %v0_100071c0 = load i32, i32* @r29, align 4
  store i32 %v0_100071c0, i32* @r3, align 4
  store i32 268464584, i32* @lr, align 4
  %v0_100071c4 = call i32 @function_100065a0()
  store i32 %v0_100071c4, i32* %r3.global-to-local, align 4
  %v3_100071c8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100071c8 = trunc i64 %v3_100071c8 to i32
  store i32 %v4_100071c8, i32* %r9.global-to-local, align 4
  %v1_100071cc = add i32 %v4_100071c8, 1
  store i32 %v1_100071cc, i32* %r0.global-to-local, align 4
  %v1_100071d0 = icmp slt i32 %v1_100071cc, 255
  %v3_100071d0 = icmp eq i32 %v1_100071cc, 255
  store i1 %v1_100071d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071d0, i1* %cr7_eq.global-to-local, align 1
  %v5_100071d4 = sext i32 %v1_100071cc to i64
  store i64 %v5_100071d4, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_100071cc, 256
  br i1 %tmp115, label %dec_label_pc_10007144, label %dec_label_pc_100071dc

dec_label_pc_100071dc:                            ; preds = %dec_label_pc_100071c0, %dec_label_pc_10007130
  %v0_100071dc = load i32, i32* %r30.global-to-local, align 4
  %v1_100071dc = load i32, i32* @r31, align 4
  %v2_100071dc = icmp slt i32 %v0_100071dc, %v1_100071dc
  %v4_100071dc = icmp eq i32 %v0_100071dc, %v1_100071dc
  store i1 %v2_100071dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100071dc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100071dc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_100071dc, label %dec_label_pc_100071f8, label %dec_label_pc_100071fc

dec_label_pc_100071f8:                            ; preds = %dec_label_pc_100071dc
  store i32 %v1_100071dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071fc

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_100071dc, %dec_label_pc_100071f8
  %v0_1000720c = phi i32 [ %v0_100071dc, %dec_label_pc_100071dc ], [ %v1_100071dc, %dec_label_pc_100071f8 ]
  store i32 %v1_10007200, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10007208, i32* %r7.global-to-local, align 4
  %v1_1000720c = add i32 %v0_1000720c, 1
  store i32 %v1_1000720c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007214.150 to i32), i32* @lr, align 4
  %v5_10007210 = call i32 @function_100090e8(i32 %v1_1000720c, i32 %v2_100071fc, i32 %v1_10007200, i32 0, i32 %v2_10007208)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000721c.151 to i32), i32* @lr, align 4
  %v0_10007218 = call i32 @function_100091f0()
  store i32 %v0_10007218, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10007218, i32* @global_var_1001c1ac.111, align 4
  %v0_10007224 = load i32, i32* %r30.global-to-local, align 4
  %v5_10007224 = sext i32 %v0_10007224 to i64
  store i64 %v5_10007224, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_10007240

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_100072a4, %dec_label_pc_10007cc8, %dec_label_pc_10007284, %dec_label_pc_10007240, %dec_label_pc_10007fc8, %dec_label_pc_10007f20, %dec_label_pc_10007cfc
  %v3_1000722c = load i64, i64* %stack_var_-1916, align 8
  %v4_1000722c = trunc i64 %v3_1000722c to i32
  store i32 %v4_1000722c, i32* %r9.global-to-local, align 4
  %v1_10007230 = add i32 %v4_1000722c, 1
  store i32 %v1_10007230, i32* %r0.global-to-local, align 4
  %v1_10007234 = icmp slt i32 %v1_10007230, 255
  %v2_10007234 = icmp sgt i32 %v1_10007230, 255
  %v3_10007234 = icmp eq i32 %v1_10007230, 255
  store i1 %v1_10007234, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007234, i1* %cr7_eq.global-to-local, align 1
  %v5_10007238 = sext i32 %v1_10007230 to i64
  store i64 %v5_10007238, i64* %stack_var_-1916, align 8
  br i1 %v2_10007234, label %dec_label_pc_10006be4, label %dec_label_pc_10007240

dec_label_pc_10007240:                            ; preds = %dec_label_pc_1000722c, %dec_label_pc_100071fc
  %v0_10007244 = phi i32 [ %v1_10007230, %dec_label_pc_1000722c ], [ 0, %dec_label_pc_100071fc ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007244 = mul i32 %v0_10007244, 256
  store i32 %v1_10007244, i32* %r11.global-to-local, align 4
  %v3_10007248 = load i32, i32* @global_var_1001c1b0.118, align 4
  store i32 %v3_10007248, i32* %r9.global-to-local, align 4
  %v2_10007250 = mul i32 %v0_10007244, 288
  store i32 %v2_10007250, i32* %r0.global-to-local, align 4
  %v2_10007254 = add i32 %v3_10007248, %v2_10007250
  store i32 %v2_10007254, i32* %r28.global-to-local, align 4
  %v1_10007258 = add i32 %v2_10007254, 4
  %v2_10007258 = inttoptr i32 %v1_10007258 to i32*
  %v3_10007258 = load i32, i32* %v2_10007258, align 4
  store i32 %v3_10007258, i32* %r3.global-to-local, align 4
  %v1_1000725c = icmp slt i32 %v3_10007258, -1
  %v3_1000725c = icmp eq i32 %v3_10007258, -1
  store i1 %v1_1000725c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000725c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000725c, label %dec_label_pc_1000722c, label %dec_label_pc_10007264

dec_label_pc_10007264:                            ; preds = %dec_label_pc_10007240
  store i32 %v2_10007264, i32* %r11.global-to-local, align 4
  %v1_10007268 = call i32 @__asm_rlwinm(i32 %v3_10007258, i32 29, i32 3, i32 29)
  %v1_1000726c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000726c = add i32 %v1_1000726c, %v1_10007268
  store i32 %v2_1000726c, i32* %r9.global-to-local, align 4
  %v0_10007270 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007270 = urem i32 %v0_10007270, 32
  store i32 %v1_10007270, i32* %r11.global-to-local, align 4
  %v1_10007274 = add i32 %v2_1000726c, 184
  %v2_10007274 = inttoptr i32 %v1_10007274 to i32*
  %v3_10007274 = load i32, i32* %v2_10007274, align 4
  %v3_10007278 = lshr i32 %v3_10007274, %v1_10007270
  store i32 %v3_10007278, i32* %r0.global-to-local, align 4
  %v1_1000727c = urem i32 %v3_10007278, 2
  store i32 %v1_1000727c, i32* %r9.global-to-local, align 4
  %v3_1000727c = icmp eq i32 %v1_1000727c, 0
  br i1 %v3_1000727c, label %dec_label_pc_10007284, label %dec_label_pc_10007df0

dec_label_pc_10007284:                            ; preds = %dec_label_pc_10007264, %dec_label_pc_10007e88
  %v0_10007288 = phi i32 [ %v0_10007270, %dec_label_pc_10007264 ], [ %v0_10007288.pre, %dec_label_pc_10007e88 ]
  store i32 %v2_10007264, i32* %r0.global-to-local, align 4
  %v1_10007288 = call i32 @__asm_rlwinm(i32 %v0_10007288, i32 29, i32 3, i32 29)
  %v1_1000728c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000728c = add i32 %v1_1000728c, %v1_10007288
  store i32 %v2_1000728c, i32* %r9.global-to-local, align 4
  %v0_10007290 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007290 = urem i32 %v0_10007290, 32
  store i32 %v1_10007290, i32* %r11.global-to-local, align 4
  %v1_10007294 = add i32 %v2_1000728c, 56
  %v2_10007294 = inttoptr i32 %v1_10007294 to i32*
  %v3_10007294 = load i32, i32* %v2_10007294, align 4
  %v3_10007298 = lshr i32 %v3_10007294, %v1_10007290
  store i32 %v3_10007298, i32* %r0.global-to-local, align 4
  %v1_1000729c = urem i32 %v3_10007298, 2
  store i32 %v1_1000729c, i32* %r9.global-to-local, align 4
  %v3_1000729c = icmp eq i32 %v1_1000729c, 0
  br i1 %v3_1000729c, label %dec_label_pc_1000722c, label %dec_label_pc_100072a4.preheader

dec_label_pc_100072a4.preheader:                  ; preds = %dec_label_pc_10007284
  %v0_100072a4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100072a4

dec_label_pc_100072a4:                            ; preds = %dec_label_pc_100072a4.preheader, %dec_label_pc_10007310
  %v0_10007d18 = phi i32 [ %v0_100072a4.pre, %dec_label_pc_100072a4.preheader ], [ %v0_10007324, %dec_label_pc_10007310 ]
  %v1_100072a4 = add i32 %v0_10007d18, 12
  %v2_100072a4 = inttoptr i32 %v1_100072a4 to i32*
  %v3_100072a4 = load i32, i32* %v2_100072a4, align 4
  store i32 %v3_100072a4, i32* %r10.global-to-local, align 4
  %v1_100072a8 = icmp slt i32 %v3_100072a4, 0
  %v3_100072a8 = icmp eq i32 %v3_100072a4, 0
  store i1 %v1_100072a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072a8, label %dec_label_pc_1000722c, label %dec_label_pc_100072b0

dec_label_pc_100072b0:                            ; preds = %dec_label_pc_100072a4
  %v1_100072b0 = add i32 %v0_10007d18, 24
  %v2_100072b0 = inttoptr i32 %v1_100072b0 to i32*
  %v3_100072b0 = load i32, i32* %v2_100072b0, align 4
  store i32 %v3_100072b0, i32* %r0.global-to-local, align 4
  %v1_100072b4 = add i32 %v0_10007d18, 28
  store i32 %v1_100072b4, i32* %r26.global-to-local, align 4
  %v1_100072b8 = icmp slt i32 %v3_100072b0, 256
  %v3_100072b8 = icmp eq i32 %v3_100072b0, 256
  store i1 %v1_100072b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072b8, label %dec_label_pc_10007d10, label %dec_label_pc_100072c0

dec_label_pc_100072c0:                            ; preds = %dec_label_pc_100072b0, %dec_label_pc_10007d10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_100072c8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100072c8 = inttoptr i32 %v1_100072c8 to i32*
  store i32 0, i32* %v2_100072c8, align 4
  %v0_100072cc = load i32, i32* %r28.global-to-local, align 4
  %v1_100072cc = add i32 %v0_100072cc, 24
  %v2_100072cc = inttoptr i32 %v1_100072cc to i32*
  %v3_100072cc = load i32, i32* %v2_100072cc, align 4
  store i32 %v3_100072cc, i32* %r5.global-to-local, align 4
  %v1_100072d0 = add i32 %v0_100072cc, 4
  %v2_100072d0 = inttoptr i32 %v1_100072d0 to i32*
  %v3_100072d0 = load i32, i32* %v2_100072d0, align 4
  store i32 %v3_100072d0, i32* %r3.global-to-local, align 4
  %v0_100072d4 = load i32, i32* %r26.global-to-local, align 4
  %v2_100072d4 = add i32 %v0_100072d4, %v3_100072cc
  store i32 %v2_100072d4, i32* @r29, align 4
  %v1_100072d8 = sub i32 256, %v3_100072cc
  store i32 %v1_100072d8, i32* %r5.global-to-local, align 4
  store i32 268464868, i32* @lr, align 4
  %v4_100072e0 = call i32 @function_10009a10(i32 %v3_100072d0, i32 %v2_100072d4, i32 %v1_100072d8, i32 16384)
  store i32 %v4_100072e0, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_100072e0, 1
  br i1 %tmp117, label %dec_label_pc_10007cbc, label %dec_label_pc_100072ec

dec_label_pc_100072ec:                            ; preds = %dec_label_pc_100072c0
  store i32 %v4_100072e0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100072f8

dec_label_pc_100072f8:                            ; preds = %dec_label_pc_10007308, %dec_label_pc_100072ec
  %v0_1000730c39 = phi i32 [ %v1_1000730c, %dec_label_pc_10007308 ], [ %v4_100072e0, %dec_label_pc_100072ec ]
  %v1_10007304 = phi i32 [ %v1_10007308, %dec_label_pc_10007308 ], [ 0, %dec_label_pc_100072ec ]
  %v1_100072f8 = load i32, i32* @r29, align 4
  %v2_100072f8 = add i32 %v1_100072f8, %v1_10007304
  %v3_100072f8 = inttoptr i32 %v2_100072f8 to i8*
  %v4_100072f8 = load i8, i8* %v3_100072f8, align 1
  %v5_100072f8 = zext i8 %v4_100072f8 to i32
  store i32 %v5_100072f8, i32* %r0.global-to-local, align 4
  %v3_100072fc = icmp eq i8 %v4_100072f8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072fc, label %dec_label_pc_10007304, label %dec_label_pc_10007308

dec_label_pc_10007304:                            ; preds = %dec_label_pc_100072f8
  %v0_10007304 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007304 = trunc i32 %v0_10007304 to i8
  store i8 %v3_10007304, i8* %v3_100072f8, align 1
  %v0_10007308.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000730c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007308

dec_label_pc_10007308:                            ; preds = %dec_label_pc_100072f8, %dec_label_pc_10007304
  %v0_1000730c = phi i32 [ %v0_1000730c39, %dec_label_pc_100072f8 ], [ %v0_1000730c.pre, %dec_label_pc_10007304 ]
  %v0_10007308 = phi i32 [ %v1_10007304, %dec_label_pc_100072f8 ], [ %v0_10007308.pre, %dec_label_pc_10007304 ]
  %v1_10007308 = add i32 %v0_10007308, 1
  store i32 %v1_10007308, i32* %r9.global-to-local, align 4
  %v1_1000730c = add i32 %v0_1000730c, -1
  store i32 %v1_1000730c, i32* %ctr.global-to-local, align 4
  %v2_1000730c = icmp eq i32 %v1_1000730c, 0
  br i1 %v2_1000730c, label %dec_label_pc_10007310, label %dec_label_pc_100072f8

dec_label_pc_10007310:                            ; preds = %dec_label_pc_10007308, %dec_label_pc_10007cc0
  %v0_10007310 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007310 = add i32 %v0_10007310, 24
  %v2_10007310 = inttoptr i32 %v1_10007310 to i32*
  %v3_10007310 = load i32, i32* %v2_10007310, align 4
  %v3_10007314 = load i32, i32* @global_var_1001c1ac.111, align 4
  store i32 %v3_10007314, i32* %r0.global-to-local, align 4
  %v2_10007318 = add i32 %v3_10007310, %v4_100072e0
  store i32 %v2_10007318, i32* %r5.global-to-local, align 4
  store i32 %v2_10007318, i32* %v2_10007310, align 4
  %v0_10007320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007320 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007320 = add i32 %v1_10007320, 8
  %v3_10007320 = inttoptr i32 %v2_10007320 to i32*
  store i32 %v0_10007320, i32* %v3_10007320, align 4
  %v0_10007324 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007324 = add i32 %v0_10007324, 12
  %v2_10007324 = inttoptr i32 %v1_10007324 to i32*
  %v3_10007324 = load i32, i32* %v2_10007324, align 4
  store i32 %v3_10007324, i32* %r10.global-to-local, align 4
  %v1_10007328 = icmp ult i32 %v3_10007324, 10
  %v2_10007328 = icmp ugt i32 %v3_10007324, 10
  %v3_10007328 = icmp eq i32 %v3_10007324, 10
  store i1 %v1_10007328, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007328, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007328, label %dec_label_pc_100072a4, label %dec_label_pc_10007330

dec_label_pc_10007330:                            ; preds = %dec_label_pc_10007310
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10007334 = mul i32 %v3_10007324, 4
  store i32 %v1_10007334, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b8e0.152 to i32), i32* %r11.global-to-local, align 4
  %v2_1000733c = add i32 %v1_10007334, ptrtoint (i32* @global_var_1000b8e0.152 to i32)
  %v3_1000733c = inttoptr i32 %v2_1000733c to i32*
  %v4_1000733c = load i32, i32* %v3_1000733c, align 4
  %v2_10007340 = add i32 %v4_1000733c, ptrtoint (i32* @global_var_1000b8e0.152 to i32)
  store i32 %v2_10007340, i32* %r9.global-to-local, align 4
  store i32 %v2_10007340, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007340)
  br label %dec_label_pc_1000734c

dec_label_pc_1000734c:                            ; preds = %dec_label_pc_100071a8, %dec_label_pc_1000718c, %dec_label_pc_10007330
  %v0_1000734c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000734c = load i32, i32* @r29, align 4
  %v2_1000734c = add i32 %v1_1000734c, 12
  %v3_1000734c = inttoptr i32 %v2_1000734c to i32*
  store i32 %v0_1000734c, i32* %v3_1000734c, align 4
  %v0_10007350 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007350 = trunc i32 %v0_10007350 to i8
  %v2_10007350 = load i32, i32* @r29, align 4
  %v3_10007350 = add i32 %v2_10007350, 284
  %v4_10007350 = inttoptr i32 %v3_10007350 to i8*
  store i8 %v1_10007350, i8* %v4_10007350, align 1
  br label %dec_label_pc_10007130

dec_label_pc_10007358:                            ; preds = %dec_label_pc_100070f4
  store i32 %v2_10007264, i32* %r0.global-to-local, align 4
  %v1_10007360 = call i32 @__asm_rlwinm(i32 %v3_10007358, i32 29, i32 3, i32 29)
  %v0_10007364 = load i32, i32* @r31, align 4
  %v2_10007364 = icmp slt i32 %v0_10007364, %v3_10007358
  %v4_10007364 = icmp eq i32 %v0_10007364, %v3_10007358
  store i1 %v2_10007364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007364, i1* %cr7_eq.global-to-local, align 1
  %v1_10007368 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007368 = add i32 %v1_10007368, %v1_10007360
  store i32 %v2_10007368, i32* %r11.global-to-local, align 4
  %v1_1000736c = urem i32 %v3_10007358, 32
  store i32 %v1_1000736c, i32* %r0.global-to-local, align 4
  %v1_10007370 = add i32 %v2_10007368, 184
  %v2_10007370 = inttoptr i32 %v1_10007370 to i32*
  %v3_10007370 = load i32, i32* %v2_10007370, align 4
  %v0_10007374 = load i32, i32* %r10.global-to-local, align 4
  %v3_10007374 = shl i32 %v0_10007374, %v1_1000736c
  store i32 %v3_10007374, i32* %r0.global-to-local, align 4
  %v2_10007378 = or i32 %v3_10007374, %v3_10007370
  store i32 %v2_10007378, i32* %r9.global-to-local, align 4
  store i32 %v2_10007378, i32* %v2_10007370, align 4
  br i1 %v2_10007364, label %dec_label_pc_10007384, label %dec_label_pc_10007130

dec_label_pc_10007384:                            ; preds = %dec_label_pc_10007358
  store i32 %v3_10007358, i32* @r31, align 4
  br label %dec_label_pc_10007130

dec_label_pc_10007cbc:                            ; preds = %dec_label_pc_100072c0
  %v3_100072e4 = icmp eq i32 %v4_100072e0, 0
  br i1 %v3_100072e4, label %dec_label_pc_10007f40, label %dec_label_pc_10007cc0

dec_label_pc_10007cc0:                            ; preds = %dec_label_pc_10007cbc
  %v1_10007cc0 = icmp slt i32 %v4_100072e0, -1
  %v3_10007cc0 = icmp eq i32 %v4_100072e0, -1
  store i1 %v1_10007cc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cc0, label %dec_label_pc_10007cc8, label %dec_label_pc_10007310

dec_label_pc_10007cc8:                            ; preds = %dec_label_pc_10007cc0
  %v0_10007cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007cc8 = inttoptr i32 %v0_10007cc8 to i32*
  %v2_10007cc8 = load i32, i32* %v1_10007cc8, align 4
  store i32 %v2_10007cc8, i32* %r0.global-to-local, align 4
  %v1_10007ccc = icmp slt i32 %v2_10007cc8, 11
  %v3_10007ccc = icmp eq i32 %v2_10007cc8, 11
  store i1 %v1_10007ccc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ccc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ccc, label %dec_label_pc_1000722c, label %dec_label_pc_10007cd4

dec_label_pc_10007cd4:                            ; preds = %dec_label_pc_10007cc8, %dec_label_pc_10007f40
  %v0_10007cd4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007cd4 = add i32 %v0_10007cd4, 4
  %v2_10007cd4 = inttoptr i32 %v1_10007cd4 to i32*
  %v3_10007cd4 = load i32, i32* %v2_10007cd4, align 4
  store i32 %v3_10007cd4, i32* %r3.global-to-local, align 4
  store i32 268467420, i32* @lr, align 4
  %v0_10007cd8 = call i32 @function_10008e20()
  store i32 %v0_10007cd8, i32* %r3.global-to-local, align 4
  %v0_10007cdc = load i32, i32* %r28.global-to-local, align 4
  %v1_10007cdc = add i32 %v0_10007cdc, 284
  %v2_10007cdc = inttoptr i32 %v1_10007cdc to i8*
  %v3_10007cdc = load i8, i8* %v2_10007cdc, align 1
  %v4_10007cdc = zext i8 %v3_10007cdc to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007ce4 = add nuw nsw i32 %v4_10007cdc, 1
  store i32 %v1_10007ce4, i32* %r9.global-to-local, align 4
  %v2_10007ce8 = add i32 %v0_10007cdc, 4
  %v3_10007ce8 = inttoptr i32 %v2_10007ce8 to i32*
  store i32 -1, i32* %v3_10007ce8, align 4
  %v0_10007cec = load i32, i32* %r9.global-to-local, align 4
  %v1_10007cec = urem i32 %v0_10007cec, 256
  store i32 %v1_10007cec, i32* %r9.global-to-local, align 4
  %v1_10007cf0 = icmp ult i32 %v1_10007cec, 9
  %v3_10007cf0 = icmp eq i32 %v1_10007cec, 9
  store i1 %v1_10007cf0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cf0, i1* %cr7_eq.global-to-local, align 1
  %v1_10007cf4 = trunc i32 %v0_10007cec to i8
  %v2_10007cf4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007cf4 = add i32 %v2_10007cf4, 284
  %v4_10007cf4 = inttoptr i32 %v3_10007cf4 to i8*
  store i8 %v1_10007cf4, i8* %v4_10007cf4, align 1
  %v0_10007cf8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007cf8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007cf8 = or i1 %v0_10007cf8, %v1_10007cf8
  br i1 %v2_10007cf8, label %dec_label_pc_10007fc8, label %dec_label_pc_10007cfc

dec_label_pc_10007cfc:                            ; preds = %dec_label_pc_10007cd4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007d04 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007d04 = add i32 %v1_10007d04, 12
  %v3_10007d04 = inttoptr i32 %v2_10007d04 to i32*
  store i32 0, i32* %v3_10007d04, align 4
  %v0_10007d08 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007d08 = trunc i32 %v0_10007d08 to i8
  %v2_10007d08 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007d08 = add i32 %v2_10007d08, 284
  %v4_10007d08 = inttoptr i32 %v3_10007d08 to i8*
  store i8 %v1_10007d08, i8* %v4_10007d08, align 1
  br label %dec_label_pc_1000722c

dec_label_pc_10007d10:                            ; preds = %dec_label_pc_100072b0
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_100072b4, i32* %r3.global-to-local, align 4
  %v1_10007d18 = add i32 %v0_10007d18, 92
  store i32 268467488, i32* @lr, align 4
  %v3_10007d1c = call i32 @function_10009580(i32 %v1_100072b4, i32 %v1_10007d18, i32 192)
  store i32 %v3_10007d1c, i32* %r3.global-to-local, align 4
  %v0_10007d20 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007d20 = add i32 %v0_10007d20, 24
  %v2_10007d20 = inttoptr i32 %v1_10007d20 to i32*
  %v3_10007d20 = load i32, i32* %v2_10007d20, align 4
  store i32 %v3_10007d20, i32* %r9.global-to-local, align 4
  %v1_10007d24 = add i32 %v3_10007d20, -64
  store i32 %v1_10007d24, i32* %r5.global-to-local, align 4
  store i32 %v1_10007d24, i32* %v2_10007d20, align 4
  br label %dec_label_pc_100072c0

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007264
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10007e00, i32* %r6.global-to-local, align 4
  store i32 %v2_10007e04, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268467732, i32* @lr, align 4
  %v5_10007e10 = call i32 @function_100099a4(i32 1, i32 4, i32 %v2_10007e00, i32 %v2_10007e04, i32 %v1_1000727c)
  store i32 %v5_10007e10, i32* %r3.global-to-local, align 4
  %v3_10007e14 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10007e14, i32* %r0.global-to-local, align 4
  %v2_10007e18 = or i32 %v3_10007e14, %v5_10007e10
  store i32 %v2_10007e18, i32* %r9.global-to-local, align 4
  %v5_10007e18 = icmp eq i32 %v2_10007e18, 0
  br i1 %v5_10007e18, label %dec_label_pc_10007e20, label %dec_label_pc_10007f20

dec_label_pc_10007e20:                            ; preds = %dec_label_pc_10007df0
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007e24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007e24 = add i32 %v1_10007e24, 12
  %v3_10007e24 = inttoptr i32 %v2_10007e24 to i32*
  store i32 2, i32* %v3_10007e24, align 4
  %v0_10007e28 = call i32 @function_10005d68()
  %v3_10007e30 = load i16, i16* @global_var_1001c1a8.114, align 2
  %v4_10007e30 = zext i16 %v3_10007e30 to i32
  store i32 %v4_10007e30, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007e38 = load i32, i32* @global_var_1001c1a0.112, align 4
  store i32 %v3_10007e38, i32* %r10.global-to-local, align 4
  %v1_10007e40 = icmp slt i32 %v3_10007e38, 0
  %v3_10007e40 = icmp eq i32 %v3_10007e38, 0
  store i1 %v1_10007e40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e40, i1* %cr7_eq.global-to-local, align 1
  %v2_10007e3c = urem i32 %v0_10007e28, %v4_10007e30
  %v2_10007e44 = sub i32 %v0_10007e28, %v2_10007e3c
  store i32 %v2_10007e44, i32* %r0.global-to-local, align 4
  store i32 %v2_10007e3c, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_10007e38, 1
  br i1 %tmp119, label %dec_label_pc_10007e84, label %dec_label_pc_10007e54

dec_label_pc_10007e54:                            ; preds = %dec_label_pc_10007e20
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007e38, i32* %ctr.global-to-local, align 4
  %v3_10007e5c = load i32, i32* @global_var_1001c1a4.113, align 4
  store i32 %v3_10007e5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e7c, %dec_label_pc_10007e54
  %v0_10007e80 = phi i32 [ %v1_10007e80, %dec_label_pc_10007e7c ], [ %v3_10007e38, %dec_label_pc_10007e54 ]
  %v0_10007e7c = phi i32 [ %v1_10007e7c, %dec_label_pc_10007e7c ], [ %v3_10007e5c, %dec_label_pc_10007e54 ]
  store i32 %v0_10007e7c, i32* %r9.global-to-local, align 4
  %v1_10007e64 = add i32 %v0_10007e7c, 8
  %v2_10007e64 = inttoptr i32 %v1_10007e64 to i16*
  %v3_10007e64 = load i16, i16* %v2_10007e64, align 2
  %v4_10007e64 = zext i16 %v3_10007e64 to i32
  store i32 %v4_10007e64, i32* %r0.global-to-local, align 4
  %v2_10007e68 = icmp ult i32 %v4_10007e64, %v2_10007e3c
  %v3_10007e68 = icmp ugt i32 %v4_10007e64, %v2_10007e3c
  %v4_10007e68 = icmp eq i32 %v4_10007e64, %v2_10007e3c
  br i1 %v3_10007e68, label %dec_label_pc_10007e7c, label %dec_label_pc_10007e70

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e60
  %v1_10007e70 = add i32 %v0_10007e7c, 10
  %v2_10007e70 = inttoptr i32 %v1_10007e70 to i16*
  %v3_10007e70 = load i16, i16* %v2_10007e70, align 2
  %v4_10007e70 = zext i16 %v3_10007e70 to i32
  store i32 %v4_10007e70, i32* %r0.global-to-local, align 4
  %v2_10007e74 = icmp ult i32 %v4_10007e70, %v2_10007e3c
  %v3_10007e74 = icmp ugt i32 %v4_10007e70, %v2_10007e3c
  %v4_10007e74 = icmp eq i32 %v4_10007e70, %v2_10007e3c
  br i1 %v3_10007e74, label %dec_label_pc_10007e88.loopexit, label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e70, %dec_label_pc_10007e60
  %v4_10007e747 = phi i1 [ %v4_10007e74, %dec_label_pc_10007e70 ], [ %v4_10007e68, %dec_label_pc_10007e60 ]
  %v2_10007e745 = phi i1 [ %v2_10007e74, %dec_label_pc_10007e70 ], [ %v2_10007e68, %dec_label_pc_10007e60 ]
  %v1_10007e7c = add i32 %v0_10007e7c, 16
  store i32 %v1_10007e7c, i32* %r0.global-to-local, align 4
  %v1_10007e80 = add i32 %v0_10007e80, -1
  store i32 %v1_10007e80, i32* %ctr.global-to-local, align 4
  %v2_10007e80 = icmp eq i32 %v1_10007e80, 0
  br i1 %v2_10007e80, label %dec_label_pc_10007e84.loopexit, label %dec_label_pc_10007e60

dec_label_pc_10007e84.loopexit:                   ; preds = %dec_label_pc_10007e7c
  store i1 %v2_10007e745, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007e747, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007e84

dec_label_pc_10007e84:                            ; preds = %dec_label_pc_10007e84.loopexit, %dec_label_pc_10007e20
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007e88

dec_label_pc_10007e88.loopexit:                   ; preds = %dec_label_pc_10007e70
  store i1 %v2_10007e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007e74, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007e88

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e88.loopexit, %dec_label_pc_10007e84
  %v0_10007e90 = phi i32 [ %v0_10007e7c, %dec_label_pc_10007e88.loopexit ], [ 0, %dec_label_pc_10007e84 ]
  %v0_10007e88 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007e88 = add i32 %v0_10007e88, 4
  %v2_10007e88 = inttoptr i32 %v1_10007e88 to i32*
  %v3_10007e88 = load i32, i32* %v2_10007e88, align 4
  store i32 %v3_10007e88, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007e90 = inttoptr i32 %v0_10007e88 to i32*
  store i32 %v0_10007e90, i32* %v2_10007e90, align 4
  %v0_10007e94 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007e94 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007e94 = add i32 %v1_10007e94, 24
  %v3_10007e94 = inttoptr i32 %v2_10007e94 to i32*
  store i32 %v0_10007e94, i32* %v3_10007e94, align 4
  %v0_10007288.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007284

dec_label_pc_10007f20:                            ; preds = %dec_label_pc_10007df0
  %v0_10007f20 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007f20 = add i32 %v0_10007f20, 4
  %v2_10007f20 = inttoptr i32 %v1_10007f20 to i32*
  %v3_10007f20 = load i32, i32* %v2_10007f20, align 4
  store i32 %v3_10007f20, i32* %r3.global-to-local, align 4
  store i32 268468008, i32* @lr, align 4
  %v0_10007f24 = call i32 @function_10008e20()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007f30 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007f30 = add i32 %v1_10007f30, 4
  %v3_10007f30 = inttoptr i32 %v2_10007f30 to i32*
  store i32 -1, i32* %v3_10007f30, align 4
  %v0_10007f34 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007f34 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007f34 = add i32 %v1_10007f34, 12
  %v3_10007f34 = inttoptr i32 %v2_10007f34 to i32*
  store i32 %v0_10007f34, i32* %v3_10007f34, align 4
  %v0_10007f38 = load i32, i32* @r31, align 4
  %v1_10007f38 = trunc i32 %v0_10007f38 to i8
  %v2_10007f38 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f38 = add i32 %v2_10007f38, 284
  %v4_10007f38 = inttoptr i32 %v3_10007f38 to i8*
  store i8 %v1_10007f38, i8* %v4_10007f38, align 1
  br label %dec_label_pc_1000722c

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007cbc
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007f44 = load i32, i32* %r24.global-to-local, align 4
  %v2_10007f44 = inttoptr i32 %v1_10007f44 to i32*
  store i32 104, i32* %v2_10007f44, align 4
  br label %dec_label_pc_10007cd4

dec_label_pc_10007fc8:                            ; preds = %dec_label_pc_10007cd4
  %v0_10007fc8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007fc8, i32* @r3, align 4
  store i32 268468176, i32* @lr, align 4
  %v0_10007fcc = call i32 @function_100065a0()
  store i32 %v0_10007fcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000722c

dec_label_pc_1000800c:                            ; preds = %dec_label_pc_100069c0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008010 = load i32, i32* @global_var_1001c1b4.119, align 4
  store i32 %v3_10008010, i32* %r3.global-to-local, align 4
  store i32 268468248, i32* @lr, align 4
  %v0_10008014 = call i32 @function_10008e20()
  store i32 %v0_10008014, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fcc

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_10006edc
  store i32 %v0_10006ed4, i32* @r29, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10006f18, %dec_label_pc_1000801c
  %v1_10008020 = phi i32 [ %v2_10006ef0, %dec_label_pc_1000801c ], [ %v0_10006f18, %dec_label_pc_10006f18 ]
  %v2_10008020 = add i32 %v1_10008020, 16
  %v3_10008020 = inttoptr i32 %v2_10008020 to i32*
  store i32 %tmp50, i32* %v3_10008020, align 4
  %v0_10008024 = load i32, i32* @r29, align 4
  store i32 %v0_10008024, i32* @r31, align 4
  %v0_10008028 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008028 = trunc i32 %v0_10008028 to i16
  %v2_10008028 = load i32, i32* @r3, align 4
  %v3_10008028 = add i32 %v2_10008028, 20
  %v4_10008028 = inttoptr i32 %v3_10008028 to i16*
  store i16 %v1_10008028, i16* %v4_10008028, align 2
  store i32 268468272, i32* @lr, align 4
  %v0_1000802c = call i32 @function_100065a0()
  store i32 %v0_1000802c, i32* %r3.global-to-local, align 4
  %v1_10006e1c.pre.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10006e14

; uselistorder directives
  uselistorder i32 %v1_10007e80, { 2, 1, 0 }
  uselistorder i32 %v1_10007e7c, { 1, 0 }
  uselistorder i32 %v4_10007e70, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10007e64, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10007e7c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10007e3c, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007e38, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007cec, { 1, 2, 0 }
  uselistorder i32 %v0_10007cec, { 1, 0 }
  uselistorder i32 %v2_10007cc8, { 1, 0, 2 }
  uselistorder i32 %v1_1000736c, { 1, 0 }
  uselistorder i32 %v1_10007334, { 1, 0 }
  uselistorder i32 %v3_10007324, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10007324, { 1, 0 }
  uselistorder i32 %v1_1000730c, { 2, 1, 0 }
  uselistorder i32 %v1_10007308, { 1, 0 }
  uselistorder i32 %v1_10007304, { 1, 0 }
  uselistorder i32 %v4_100072e0, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_100072cc, { 1, 0, 2 }
  uselistorder i32 %v1_100072b4, { 1, 0, 2 }
  uselistorder i32 %v3_100072b0, { 1, 0, 2 }
  uselistorder i32 %v3_100072a4, { 1, 0, 2 }
  uselistorder i32 %v0_10007d18, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000729c, { 1, 0 }
  uselistorder i32 %v1_10007290, { 1, 0 }
  uselistorder i32 %v1_1000727c, { 2, 1, 0 }
  uselistorder i32 %v1_10007270, { 1, 0 }
  uselistorder i32 %v0_10007270, { 1, 0 }
  uselistorder i32 %v3_10007258, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10007244, { 1, 0 }
  uselistorder i32 %v1_10007230, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_100071cc, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_100071b0, { 1, 2, 0 }
  uselistorder i32 %v1_100071ac, { 1, 0 }
  uselistorder i32 %v3_10007194, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10007180, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10007164, { 2, 0, 1 }
  uselistorder i1 %v1_10007164, { 1, 0, 2 }
  uselistorder i32 %v3_10007160, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_1000715c, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10007134, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007114, { 1, 0 }
  uselistorder i32 %v3_10007358, { 7, 0, 6, 5, 9, 4, 1, 3, 2, 8, 10 }
  uselistorder i32 %v2_100070e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10007264, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100070c0, { 1, 0 }
  uselistorder i32 %v1_100070bc, { 1, 0 }
  uselistorder i32 %v1_100070a4, { 1, 0 }
  uselistorder i32 %v0_10007070, { 1, 2, 0 }
  uselistorder i32 %v0_10007064, { 1, 2, 0 }
  uselistorder i32 %v0_10007058, { 1, 2, 0 }
  uselistorder i32 %v0_1000704c, { 1, 2, 0 }
  uselistorder i32 %v0_10007028, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_10007014, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007008, { 1, 2, 0 }
  uselistorder i32 %v0_10006ff4, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006fe0, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006fd4, { 1, 2, 0 }
  uselistorder i32 %v1_10006f20, { 1, 0 }
  uselistorder i32 %v3_10006f18, { 1, 0, 2 }
  uselistorder i32 %v1_10006f14, { 2, 1, 0 }
  uselistorder i32 %v1_10006f10, { 1, 0 }
  uselistorder i32 %v0_10006f18, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006ef4, { 1, 0, 2 }
  uselistorder i32 %v0_10006ed4, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_10006e5c, { 1, 0, 2 }
  uselistorder i32 %v2_10006e44, { 1, 0, 2 }
  uselistorder i32 %v0_10006e44, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_10006e38, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_10006e88, { 1, 0 }
  uselistorder i32 %v1_10006eb8, { 1, 0 }
  uselistorder i32 %v1_10006eb0, { 1, 0 }
  uselistorder i32 %v1_10006ea8, { 1, 0 }
  uselistorder i32 %v1_10006ec8, { 2, 1, 0 }
  uselistorder i32 %v1_10006ea0, { 1, 0 }
  uselistorder i32 %v4_10006e90, { 1, 0, 2 }
  uselistorder i32 %v1_10006df4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006d80, { 1, 0 }
  uselistorder i32 %v4_10006d60, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006cd0, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10006c58, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006c44, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006c2c, { 1, 2, 0 }
  uselistorder i32 %v0_10006c28, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006c14, { 1, 0 }
  uselistorder i32 %v3_10006be4, { 1, 0, 2 }
  uselistorder i32 %v0_10006a54, { 1, 0 }
  uselistorder i32 %v1_10006a14, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006a04, { 1, 0, 2 }
  uselistorder i32 %v3_100069a8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10006990, { 1, 0 }
  uselistorder i32 %v0_1000698c, { 1, 0 }
  uselistorder i32 %v1_10006988, { 1, 0 }
  uselistorder i32 %v0_10006978, { 1, 2, 0 }
  uselistorder i32 %v2_10006938, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10006894, { 3, 2, 1, 4, 0, 5, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp56, { 1, 2, 0 }
  uselistorder i8 %tmp55, { 2, 1, 0 }
  uselistorder i16 %tmp54, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp52, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 31, 26, 27, 28, 29, 30, 32, 33, 34, 35, 60, 61, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 54, 55, 56, 58, 59 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 24, 27, 26, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 47, 46, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 20, 15, 16, 17, 18, 0, 19, 21, 22, 23 }
  uselistorder i32* %r24.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 28, 24, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 39, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i16* @global_var_1001c1a8.114, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100099a4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009a10, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100090e8, { 2, 1, 0 }
  uselistorder i32 ()* @function_100065a0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009a48, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009ac0, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 16384, { 2, 27, 0, 28, 1, 29, 3, 19, 22, 23, 21, 24, 25, 26, 20, 4, 30, 5, 31, 7, 32, 6, 9, 33, 8, 10, 34, 11, 35, 36, 12, 37, 38, 13, 39, 40, 41, 14, 16, 15, 18, 17 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000668c, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c236.129, { 2, 0, 1 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 69, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_10005d68, { 75, 74, 73, 72, 71, 70, 67, 69, 23, 68, 66, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009b00, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 2048, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_100091f0, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005db8, { 1, 0 }
  uselistorder i32 (i32)* @function_10008964, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10008e68, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_10008020, { 1, 0 }
  uselistorder label %dec_label_pc_10007cd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000734c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007310, { 1, 0 }
  uselistorder label %dec_label_pc_10007308, { 1, 0 }
  uselistorder label %dec_label_pc_100072c0, { 1, 0 }
  uselistorder label %dec_label_pc_100072a4, { 1, 0 }
  uselistorder label %dec_label_pc_10007284, { 1, 0 }
  uselistorder label %dec_label_pc_1000722c, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100071fc, { 1, 0 }
  uselistorder label %dec_label_pc_10007130, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10007098.dec_label_pc_10007098_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007088, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10006fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10006e14, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10006e08, { 1, 0 }
  uselistorder label %dec_label_pc_10006d34, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006c28.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006a10, { 1, 0 }
}

define i32 @function_10008034(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10008034:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008034 = icmp eq i32* %arg2, null
  %v1_1000803c = mul i32 %arg1, 8
  store i32 %v1_1000803c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c270.172 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10008034, label %dec_label_pc_10008054, label %dec_label_pc_1000804c

dec_label_pc_1000804c:                            ; preds = %dec_label_pc_10008034
  %v1_1000804c = add i32 %v1_1000803c, add (i32 ptrtoint (i32* @global_var_1001c270.172 to i32), i32 4)
  %v2_1000804c = inttoptr i32 %v1_1000804c to i16*
  %v3_1000804c = load i16, i16* %v2_1000804c, align 4
  %v4_1000804c = zext i16 %v3_1000804c to i32
  store i32 %v4_1000804c, i32* %arg2, align 4
  %v0_10008054.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10008054.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008054

dec_label_pc_10008054:                            ; preds = %dec_label_pc_10008034, %dec_label_pc_1000804c
  %v1_10008054 = phi i32 [ ptrtoint (i32* @global_var_1001c270.172 to i32), %dec_label_pc_10008034 ], [ %v1_10008054.pre, %dec_label_pc_1000804c ]
  %v0_10008054 = phi i32 [ %v1_1000803c, %dec_label_pc_10008034 ], [ %v0_10008054.pre, %dec_label_pc_1000804c ]
  %v2_10008054 = add i32 %v0_10008054, %v1_10008054
  %v3_10008054 = inttoptr i32 %v2_10008054 to i32*
  %v4_10008054 = load i32, i32* %v3_10008054, align 4
  store i32 %v4_10008054, i32* %r3.global-to-local, align 4
  ret i32 %v4_10008054

; uselistorder directives
  uselistorder i32 %v1_1000803c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008054, { 1, 0 }
}

define i32 @function_1000805c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000805c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008060 = mul i32 %arg1, 8
  %v2_10008068 = add i32 %v1_10008060, ptrtoint (i32* @global_var_1001c270.172 to i32)
  %v1_10008070 = add i32 %v1_10008060, add (i32 ptrtoint (i32* @global_var_1001c270.172 to i32), i32 4)
  %v2_10008070 = inttoptr i32 %v1_10008070 to i16*
  %v3_10008070 = load i16, i16* %v2_10008070, align 4
  %v3_10008074 = icmp eq i16 %v3_10008070, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008074, i1* %cr7_eq.global-to-local, align 1
  %v3_10008078 = load i32, i32* @global_var_1001c16c.173, align 4
  %v1_1000807c = udiv i32 %v3_10008078, 16777216
  store i32 %v1_1000807c, i32* @r5, align 4
  %v1_10008080 = urem i32 %v3_10008078, 256
  store i32 %v1_10008080, i32* %r6.global-to-local, align 4
  %v1_10008084 = call i32 @__asm_rlwinm(i32 %v3_10008078, i32 24, i32 24, i32 31)
  %v1_10008088 = call i32 @__asm_rlwinm(i32 %v3_10008078, i32 16, i32 24, i32 31)
  %v0_1000808c = load i32, i32* @lr, align 4
  %v1_1000808c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_1000808c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_1000808c = or i1 %v1_1000808c, %v2_1000808c
  call void @__pseudo_cond_branch(i1 %v3_1000808c, i32 %v0_1000808c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008094 = inttoptr i32 %v2_10008068 to i32*
  br label %dec_label_pc_10008094

dec_label_pc_10008094:                            ; preds = %dec_label_pc_10008094, %dec_label_pc_1000805c
  %v1_100080a0 = phi i32 [ %v1_100080d4, %dec_label_pc_10008094 ], [ 0, %dec_label_pc_1000805c ]
  %v2_10008094 = load i32, i32* %v1_10008094, align 4
  %v2_10008098 = add i32 %v2_10008094, %v1_100080a0
  %v3_10008098 = inttoptr i32 %v2_10008098 to i8*
  %v4_10008098 = load i8, i8* %v3_10008098, align 1
  %v5_10008098 = zext i8 %v4_10008098 to i32
  %v0_1000809c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000809c = xor i32 %v0_1000809c, %v5_10008098
  %v3_100080a0 = trunc i32 %v2_1000809c to i8
  store i8 %v3_100080a0, i8* %v3_10008098, align 1
  %v2_100080a4 = load i32, i32* %v1_10008094, align 4
  %v0_100080a8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100080a8 = add i32 %v0_100080a8, %v2_100080a4
  %v3_100080a8 = inttoptr i32 %v2_100080a8 to i8*
  %v4_100080a8 = load i8, i8* %v3_100080a8, align 1
  %v5_100080a8 = zext i8 %v4_100080a8 to i32
  %v2_100080ac = xor i32 %v5_100080a8, %v1_10008084
  %v3_100080b0 = trunc i32 %v2_100080ac to i8
  store i8 %v3_100080b0, i8* %v3_100080a8, align 1
  %v2_100080b4 = load i32, i32* %v1_10008094, align 4
  %v0_100080b8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100080b8 = add i32 %v0_100080b8, %v2_100080b4
  %v3_100080b8 = inttoptr i32 %v2_100080b8 to i8*
  %v4_100080b8 = load i8, i8* %v3_100080b8, align 1
  %v5_100080b8 = zext i8 %v4_100080b8 to i32
  %v2_100080bc = xor i32 %v5_100080b8, %v1_10008088
  %v3_100080c0 = trunc i32 %v2_100080bc to i8
  store i8 %v3_100080c0, i8* %v3_100080b8, align 1
  %v2_100080c4 = load i32, i32* %v1_10008094, align 4
  %v0_100080c8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100080c8 = add i32 %v0_100080c8, %v2_100080c4
  %v3_100080c8 = inttoptr i32 %v2_100080c8 to i8*
  %v4_100080c8 = load i8, i8* %v3_100080c8, align 1
  %v5_100080c8 = zext i8 %v4_100080c8 to i32
  %v0_100080cc = load i32, i32* @r5, align 4
  %v2_100080cc = xor i32 %v0_100080cc, %v5_100080c8
  %v3_100080d0 = trunc i32 %v2_100080cc to i8
  store i8 %v3_100080d0, i8* %v3_100080c8, align 1
  %v0_100080d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100080d4 = add i32 %v0_100080d4, 1
  store i32 %v1_100080d4, i32* %r10.global-to-local, align 4
  %v3_100080d8 = load i16, i16* %v2_10008070, align 4
  %v4_100080d8 = zext i16 %v3_100080d8 to i32
  %v2_100080dc = icmp slt i32 %v4_100080d8, %v1_100080d4
  %v3_100080dc = icmp sgt i32 %v4_100080d8, %v1_100080d4
  %v4_100080dc = icmp eq i32 %v4_100080d8, %v1_100080d4
  store i1 %v2_100080dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080dc, label %dec_label_pc_10008094, label %dec_label_pc_100080e4

dec_label_pc_100080e4:                            ; preds = %dec_label_pc_10008094
  ret i32 %v2_10008068

; uselistorder directives
  uselistorder i32 %v4_100080d8, { 2, 1, 0 }
  uselistorder i32 %v1_100080d4, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008078, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10008068, { 1, 0 }
  uselistorder i32 %v1_10008060, { 1, 0 }
}

define i32 @function_100080e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100080e8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100080ec = mul i32 %arg1, 8
  %v2_100080f4 = add i32 %v1_100080ec, ptrtoint (i32* @global_var_1001c270.172 to i32)
  %v1_100080fc = add i32 %v1_100080ec, add (i32 ptrtoint (i32* @global_var_1001c270.172 to i32), i32 4)
  %v2_100080fc = inttoptr i32 %v1_100080fc to i16*
  %v3_100080fc = load i16, i16* %v2_100080fc, align 4
  %v3_10008100 = icmp eq i16 %v3_100080fc, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008100, i1* %cr7_eq.global-to-local, align 1
  %v3_10008104 = load i32, i32* @global_var_1001c16c.173, align 4
  %v1_10008108 = udiv i32 %v3_10008104, 16777216
  store i32 %v1_10008108, i32* @r5, align 4
  %v1_1000810c = urem i32 %v3_10008104, 256
  store i32 %v1_1000810c, i32* %r6.global-to-local, align 4
  %v1_10008110 = call i32 @__asm_rlwinm(i32 %v3_10008104, i32 24, i32 24, i32 31)
  %v1_10008114 = call i32 @__asm_rlwinm(i32 %v3_10008104, i32 16, i32 24, i32 31)
  %v0_10008118 = load i32, i32* @lr, align 4
  %v1_10008118 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008118 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008118 = or i1 %v1_10008118, %v2_10008118
  call void @__pseudo_cond_branch(i1 %v3_10008118, i32 %v0_10008118)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008120 = inttoptr i32 %v2_100080f4 to i32*
  br label %dec_label_pc_10008120

dec_label_pc_10008120:                            ; preds = %dec_label_pc_10008120, %dec_label_pc_100080e8
  %v1_1000812c = phi i32 [ %v1_10008160, %dec_label_pc_10008120 ], [ 0, %dec_label_pc_100080e8 ]
  %v2_10008120 = load i32, i32* %v1_10008120, align 4
  %v2_10008124 = add i32 %v2_10008120, %v1_1000812c
  %v3_10008124 = inttoptr i32 %v2_10008124 to i8*
  %v4_10008124 = load i8, i8* %v3_10008124, align 1
  %v5_10008124 = zext i8 %v4_10008124 to i32
  %v0_10008128 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008128 = xor i32 %v0_10008128, %v5_10008124
  %v3_1000812c = trunc i32 %v2_10008128 to i8
  store i8 %v3_1000812c, i8* %v3_10008124, align 1
  %v2_10008130 = load i32, i32* %v1_10008120, align 4
  %v0_10008134 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008134 = add i32 %v0_10008134, %v2_10008130
  %v3_10008134 = inttoptr i32 %v2_10008134 to i8*
  %v4_10008134 = load i8, i8* %v3_10008134, align 1
  %v5_10008134 = zext i8 %v4_10008134 to i32
  %v2_10008138 = xor i32 %v5_10008134, %v1_10008110
  %v3_1000813c = trunc i32 %v2_10008138 to i8
  store i8 %v3_1000813c, i8* %v3_10008134, align 1
  %v2_10008140 = load i32, i32* %v1_10008120, align 4
  %v0_10008144 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008144 = add i32 %v0_10008144, %v2_10008140
  %v3_10008144 = inttoptr i32 %v2_10008144 to i8*
  %v4_10008144 = load i8, i8* %v3_10008144, align 1
  %v5_10008144 = zext i8 %v4_10008144 to i32
  %v2_10008148 = xor i32 %v5_10008144, %v1_10008114
  %v3_1000814c = trunc i32 %v2_10008148 to i8
  store i8 %v3_1000814c, i8* %v3_10008144, align 1
  %v2_10008150 = load i32, i32* %v1_10008120, align 4
  %v0_10008154 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008154 = add i32 %v0_10008154, %v2_10008150
  %v3_10008154 = inttoptr i32 %v2_10008154 to i8*
  %v4_10008154 = load i8, i8* %v3_10008154, align 1
  %v5_10008154 = zext i8 %v4_10008154 to i32
  %v0_10008158 = load i32, i32* @r5, align 4
  %v2_10008158 = xor i32 %v0_10008158, %v5_10008154
  %v3_1000815c = trunc i32 %v2_10008158 to i8
  store i8 %v3_1000815c, i8* %v3_10008154, align 1
  %v0_10008160 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008160 = add i32 %v0_10008160, 1
  store i32 %v1_10008160, i32* %r10.global-to-local, align 4
  %v3_10008164 = load i16, i16* %v2_100080fc, align 4
  %v4_10008164 = zext i16 %v3_10008164 to i32
  %v2_10008168 = icmp slt i32 %v4_10008164, %v1_10008160
  %v3_10008168 = icmp sgt i32 %v4_10008164, %v1_10008160
  %v4_10008168 = icmp eq i32 %v4_10008164, %v1_10008160
  store i1 %v2_10008168, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008168, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008168, label %dec_label_pc_10008120, label %dec_label_pc_10008170

dec_label_pc_10008170:                            ; preds = %dec_label_pc_10008120
  ret i32 %v2_100080f4

; uselistorder directives
  uselistorder i32 %v4_10008164, { 2, 1, 0 }
  uselistorder i32 %v1_10008160, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008104, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100080ec, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c270.172 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c270.172 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10008174(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008174:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 16, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268468680, i32* @lr, align 4
  %v0_100081c4 = call i32 @function_10009d40()
  store i32 %v0_100081c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100081e4.175 to i32), i32* @lr, align 4
  %v4_100081e0 = call i32 @function_100086e4(i32 ptrtoint ([3 x i8]* @global_var_1000b91c.174 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_100081e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100081e8, i32* @global_var_1001c278.176, align 4
  %v0_100081ec = load i32, i32* %r27.global-to-local, align 4
  %v1_100081ec = trunc i32 %v0_100081ec to i16
  store i16 %v1_100081ec, i16* bitcast (i32* @global_var_1001c27c.177 to i16*), align 4
  store i32 268468724, i32* @lr, align 4
  %v0_100081f0 = call i32 @function_10009d40()
  store i32 %v0_100081f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008208.179 to i32), i32* @lr, align 4
  %v3_10008204 = call i32 @function_100086e4(i32 ptrtoint (i32* @global_var_1000b920.178 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_1000820c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000820c, i32* @global_var_1001c280.180, align 4
  %v0_10008210 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008210 = trunc i32 %v0_10008210 to i16
  store i16 %v1_10008210, i16* bitcast (i32* @global_var_1001c284.181 to i16*), align 4
  store i32 268468760, i32* @lr, align 4
  %v0_10008214 = call i32 @function_10009d40()
  store i32 %v0_10008214, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000822c.183 to i32), i32* @lr, align 4
  %v3_10008228 = call i32 @function_100086e4(i32 ptrtoint (i32* @global_var_1000ba88.182 to i32), i32 29, i32 29)
  store i32 6, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001c28c.184 to i16*), align 4
  %v0_10008238 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008238, i32* @global_var_1001c288.185, align 4
  store i32 268468800, i32* @lr, align 4
  %v0_1000823c = call i32 @function_10009d40()
  store i32 %v0_1000823c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008254.187 to i32), i32* @lr, align 4
  %v4_10008250 = call i32 @function_100086e4(i32 ptrtoint ([7 x i8]* @global_var_1000b924.186 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008258, i32* @global_var_1001c290.188, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10008260 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008260 = trunc i32 %v0_10008260 to i16
  store i16 %v1_10008260, i16* bitcast (i32* @global_var_1001c294.189 to i16*), align 4
  store i32 268468840, i32* @lr, align 4
  %v0_10008264 = call i32 @function_10009d40()
  store i32 %v0_10008264, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000827c.191 to i32), i32* @lr, align 4
  %v4_10008278 = call i32 @function_100086e4(i32 ptrtoint ([8 x i8]* @global_var_1000b92c.190 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008280 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008280, i32* @global_var_1001c298.192, align 4
  %v0_10008284 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008284 = trunc i32 %v0_10008284 to i16
  store i16 %v1_10008284, i16* bitcast (i32* @global_var_1001c29c.193 to i16*), align 4
  store i32 268468876, i32* @lr, align 4
  %v0_10008288 = call i32 @function_10009d40()
  store i32 %v0_10008288, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082a0.195 to i32), i32* @lr, align 4
  %v4_1000829c = call i32 @function_100086e4(i32 ptrtoint ([8 x i8]* @global_var_1000b934.194 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100082a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100082a4, i32* @global_var_1001c2a0.196, align 4
  %v0_100082a8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100082a8 = trunc i32 %v0_100082a8 to i16
  store i16 %v1_100082a8, i16* bitcast (i32* @global_var_1001c2a4.197 to i16*), align 4
  store i32 268468912, i32* @lr, align 4
  %v0_100082ac = call i32 @function_10009d40()
  store i32 %v0_100082ac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100082c4.199 to i32), i32* @lr, align 4
  %v4_100082c0 = call i32 @function_100086e4(i32 ptrtoint ([4 x i8]* @global_var_1000b93c.198 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c2ac.200 to i16*), align 4
  %v0_100082d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100082d0, i32* @global_var_1001c2a8.201, align 4
  store i32 268468952, i32* @lr, align 4
  %v0_100082d4 = call i32 @function_10009d40()
  store i32 %v0_100082d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082ec.203 to i32), i32* @lr, align 4
  %v3_100082e8 = call i32 @function_100086e4(i32 ptrtoint (i32* @global_var_1000b940.202 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_100082f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100082f0, i32* @global_var_1001c2b0.204, align 4
  %v0_100082f4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100082f4 = trunc i32 %v0_100082f4 to i16
  store i16 %v1_100082f4, i16* bitcast (i32* @global_var_1001c2b4.205 to i16*), align 4
  store i32 268468988, i32* @lr, align 4
  %v0_100082f8 = call i32 @function_10009d40()
  store i32 %v0_100082f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008310.207 to i32), i32* @lr, align 4
  %v3_1000830c = call i32 @function_100086e4(i32 ptrtoint (i32* @global_var_1000b954.206 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c2bc.208 to i16*), align 4
  %v0_1000831c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000831c, i32* @global_var_1001c2b8.209, align 4
  store i32 268469028, i32* @lr, align 4
  %v0_10008320 = call i32 @function_10009d40()
  store i32 %v0_10008320, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008338.211 to i32), i32* @lr, align 4
  %v4_10008334 = call i32 @function_100086e4(i32 ptrtoint ([10 x i8]* @global_var_1000b970.210 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c2c4.212 to i16*), align 4
  %v0_10008344 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008344, i32* @global_var_1001c2c0.213, align 4
  store i32 268469068, i32* @lr, align 4
  %v0_10008348 = call i32 @function_10009d40()
  store i32 %v0_10008348, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008360.215 to i32), i32* @lr, align 4
  %v4_1000835c = call i32 @function_100086e4(i32 ptrtoint ([17 x i8]* @global_var_1000b97c.214 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10008364 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008364, i32* @global_var_1001c2c8.216, align 4
  %v0_10008368 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008368 = trunc i32 %v0_10008368 to i16
  store i16 %v1_10008368, i16* bitcast (i32* @global_var_1001c2cc.217 to i16*), align 4
  store i32 268469104, i32* @lr, align 4
  %v0_1000836c = call i32 @function_10009d40()
  store i32 %v0_1000836c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008384.219 to i32), i32* @lr, align 4
  %v4_10008380 = call i32 @function_100086e4(i32 ptrtoint ([23 x i8]* @global_var_1000b990.218 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c2d4.220 to i16*), align 4
  %v0_10008390 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008390, i32* @global_var_1001c2d0.221, align 4
  store i32 268469144, i32* @lr, align 4
  %v0_10008394 = call i32 @function_10009d40()
  store i32 %v0_10008394, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083ac.223 to i32), i32* @lr, align 4
  %v4_100083a8 = call i32 @function_100086e4(i32 ptrtoint ([8 x i8]* @global_var_1000b9a8.222 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_100083b0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083b0, i32* @global_var_1001c2d8.224, align 4
  %v0_100083b4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100083b4 = trunc i32 %v0_100083b4 to i16
  store i16 %v1_100083b4, i16* bitcast (i32* @global_var_1001c2dc.225 to i16*), align 4
  store i32 268469180, i32* @lr, align 4
  %v0_100083b8 = call i32 @function_10009d40()
  store i32 %v0_100083b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083d0.227 to i32), i32* @lr, align 4
  %v4_100083cc = call i32 @function_100086e4(i32 ptrtoint ([6 x i8]* @global_var_1000b9b0.226 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_100083d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083d4, i32* @global_var_1001c2e0.228, align 4
  %v0_100083d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100083d8 = trunc i32 %v0_100083d8 to i16
  store i16 %v1_100083d8, i16* bitcast (i32* @global_var_1001c2e4.229 to i16*), align 4
  store i32 268469216, i32* @lr, align 4
  %v0_100083dc = call i32 @function_10009d40()
  store i32 %v0_100083dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100083f4.231 to i32), i32* @lr, align 4
  %v4_100083f0 = call i32 @function_100086e4(i32 ptrtoint ([5 x i8]* @global_var_1000b9b8.230 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c2ec.232 to i16*), align 4
  %v0_10008400 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008400, i32* @global_var_1001c2e8.233, align 4
  store i32 268469256, i32* @lr, align 4
  %v0_10008404 = call i32 @function_10009d40()
  store i32 %v0_10008404, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000841c.235 to i32), i32* @lr, align 4
  %v4_10008418 = call i32 @function_100086e4(i32 ptrtoint ([7 x i8]* @global_var_1000b9c0.234 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008420 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008420, i32* @global_var_1001c2f0.236, align 4
  %v0_10008424 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008424 = trunc i32 %v0_10008424 to i16
  store i16 %v1_10008424, i16* bitcast (i32* @global_var_1001c2f4.237 to i16*), align 4
  store i32 268469292, i32* @lr, align 4
  %v0_10008428 = call i32 @function_10009d40()
  store i32 %v0_10008428, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008440.239 to i32), i32* @lr, align 4
  %v4_1000843c = call i32 @function_100086e4(i32 ptrtoint ([15 x i8]* @global_var_1000b9c8.238 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10008444 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008444, i32* @global_var_1001c2f8.240, align 4
  %v0_10008448 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008448 = trunc i32 %v0_10008448 to i16
  store i16 %v1_10008448, i16* bitcast (i32* @global_var_1001c2fc.241 to i16*), align 4
  store i32 268469328, i32* @lr, align 4
  %v0_1000844c = call i32 @function_10009d40()
  store i32 %v0_1000844c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008464.243 to i32), i32* @lr, align 4
  %v4_10008460 = call i32 @function_100086e4(i32 ptrtoint ([9 x i8]* @global_var_1000b9d8.242 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008468 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008468, i32* @global_var_1001c358.244, align 4
  %v0_1000846c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000846c = trunc i32 %v0_1000846c to i16
  store i16 %v1_1000846c, i16* bitcast (i32* @global_var_1001c35c.245 to i16*), align 4
  store i32 268469364, i32* @lr, align 4
  %v0_10008470 = call i32 @function_10009d40()
  store i32 %v0_10008470, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008488.247 to i32), i32* @lr, align 4
  %v4_10008484 = call i32 @function_100086e4(i32 ptrtoint ([8 x i8]* @global_var_1000b9e4.246 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_1000848c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000848c, i32* @global_var_1001c360.248, align 4
  %v0_10008490 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008490 = trunc i32 %v0_10008490 to i16
  store i16 %v1_10008490, i16* bitcast (i32* @global_var_1001c364.249 to i16*), align 4
  store i32 268469400, i32* @lr, align 4
  %v0_10008494 = call i32 @function_10009d40()
  store i32 %v0_10008494, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084ac.251 to i32), i32* @lr, align 4
  %v4_100084a8 = call i32 @function_100086e4(i32 ptrtoint ([17 x i8]* @global_var_1000b9ec.250 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  %v0_100084b0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084b0, i32* @global_var_1001c300.252, align 4
  %v0_100084b4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100084b4 = trunc i32 %v0_100084b4 to i16
  store i16 %v1_100084b4, i16* bitcast (i32* @global_var_1001c304.253 to i16*), align 4
  store i32 268469436, i32* @lr, align 4
  %v0_100084b8 = call i32 @function_10009d40()
  store i32 %v0_100084b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084d0.255 to i32), i32* @lr, align 4
  %v4_100084cc = call i32 @function_100086e4(i32 ptrtoint ([9 x i8]* @global_var_1000ba00.254 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_100084d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084d4, i32* @global_var_1001c308.256, align 4
  %v0_100084d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100084d8 = trunc i32 %v0_100084d8 to i16
  store i16 %v1_100084d8, i16* bitcast (i32* @global_var_1001c30c.257 to i16*), align 4
  store i32 268469472, i32* @lr, align 4
  %v0_100084dc = call i32 @function_10009d40()
  store i32 %v0_100084dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100084f4.259 to i32), i32* @lr, align 4
  %v3_100084f0 = call i32 @function_100086e4(i32 ptrtoint (i32* @global_var_1000baa8.258 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c314.260 to i16*), align 4
  %v0_10008500 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008500, i32* @global_var_1001c310.261, align 4
  store i32 268469512, i32* @lr, align 4
  %v0_10008504 = call i32 @function_10009d40()
  store i32 %v0_10008504, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000851c.263 to i32), i32* @lr, align 4
  %v4_10008518 = call i32 @function_100086e4(i32 ptrtoint ([18 x i8]* @global_var_1000ba0c.262 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c31c.264 to i16*), align 4
  %v0_10008528 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008528, i32* @global_var_1001c318.265, align 4
  store i32 268469552, i32* @lr, align 4
  %v0_1000852c = call i32 @function_10009d40()
  store i32 %v0_1000852c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008544.267 to i32), i32* @lr, align 4
  %v4_10008540 = call i32 @function_100086e4(i32 ptrtoint ([13 x i8]* @global_var_1000ba20.266 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001c324.268 to i16*), align 4
  %v0_10008550 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008550, i32* @global_var_1001c320.269, align 4
  store i32 268469592, i32* @lr, align 4
  %v0_10008554 = call i32 @function_10009d40()
  store i32 %v0_10008554, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000856c.271 to i32), i32* @lr, align 4
  %v4_10008568 = call i32 @function_100086e4(i32 ptrtoint ([15 x i8]* @global_var_1000ba30.270 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008570 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008570, i32* @global_var_1001c328.272, align 4
  %v0_10008574 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008574 = trunc i32 %v0_10008574 to i16
  store i16 %v1_10008574, i16* bitcast (i32* @global_var_1001c32c.273 to i16*), align 4
  store i32 268469628, i32* @lr, align 4
  %v0_10008578 = call i32 @function_10009d40()
  store i32 %v0_10008578, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008590.275 to i32), i32* @lr, align 4
  %v4_1000858c = call i32 @function_100086e4(i32 ptrtoint ([20 x i8]* @global_var_1000ba40.274 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10008594 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008594, i32* @global_var_1001c330.276, align 4
  %v0_10008598 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008598 = trunc i32 %v0_10008598 to i16
  store i16 %v1_10008598, i16* bitcast (i32* @global_var_1001c334.277 to i16*), align 4
  store i32 268469664, i32* @lr, align 4
  %v0_1000859c = call i32 @function_10009d40()
  store i32 %v0_1000859c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085b4.279 to i32), i32* @lr, align 4
  %v4_100085b0 = call i32 @function_100086e4(i32 ptrtoint ([9 x i8]* @global_var_1000ba54.278 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_100085b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085b8, i32* @global_var_1001c338.280, align 4
  %v0_100085bc = load i32, i32* %r27.global-to-local, align 4
  %v1_100085bc = trunc i32 %v0_100085bc to i16
  store i16 %v1_100085bc, i16* bitcast (i32* @global_var_1001c33c.281 to i16*), align 4
  store i32 268469700, i32* @lr, align 4
  %v0_100085c0 = call i32 @function_10009d40()
  store i32 %v0_100085c0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085d8.283 to i32), i32* @lr, align 4
  %v4_100085d4 = call i32 @function_100086e4(i32 ptrtoint ([6 x i8]* @global_var_1000ba60.282 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_100085dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085dc, i32* @global_var_1001c340.284, align 4
  %v0_100085e0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100085e0 = trunc i32 %v0_100085e0 to i16
  store i16 %v1_100085e0, i16* bitcast (i32* @global_var_1001c344.285 to i16*), align 4
  store i32 268469736, i32* @lr, align 4
  %v0_100085e4 = call i32 @function_10009d40()
  store i32 %v0_100085e4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085fc.287 to i32), i32* @lr, align 4
  %v4_100085f8 = call i32 @function_100086e4(i32 ptrtoint ([7 x i8]* @global_var_1000ba68.286 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10008600 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008600, i32* @global_var_1001c348.288, align 4
  %v0_10008604 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008604 = trunc i32 %v0_10008604 to i16
  store i16 %v1_10008604, i16* bitcast (i32* @global_var_1001c34c.289 to i16*), align 4
  store i32 268469772, i32* @lr, align 4
  %v0_10008608 = call i32 @function_10009d40()
  store i32 %v0_10008608, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008620.291 to i32), i32* @lr, align 4
  %v4_1000861c = call i32 @function_100086e4(i32 ptrtoint ([24 x i8]* @global_var_1000ba70.290 to i32), i32 23, i32 23)
  store i16 23, i16* bitcast (i32* @global_var_1001c354.292 to i16*), align 4
  %v0_1000862c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000862c, i32* @global_var_1001c350.293, align 4
  ret i32 %v4_1000861c

; uselistorder directives
  uselistorder i16 23, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 21, { 0, 1, 5, 6, 7, 8, 9, 10, 11, 2, 12, 3, 13, 4, 14 }
  uselistorder i32 (i32, i32, i32)* @function_100086e4, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10008660(i8* %arg1) local_unnamed_addr {
dec_label_pc_10008660:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10008660 = load i8, i8* %arg1, align 1
  %v3_1000866c = icmp eq i8 %v3_10008660, 0
  %v0_10008670 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000866c, i32 %v0_10008670)
  br label %dec_label_pc_10008674

dec_label_pc_10008674:                            ; preds = %dec_label_pc_10008674, %dec_label_pc_10008660
  %v0_10008674 = phi i32 [ %v1_10008674, %dec_label_pc_10008674 ], [ 0, %dec_label_pc_10008660 ]
  %v1_10008674 = add i32 %v0_10008674, 1
  %v2_10008678 = add i32 %v1_10008674, %tmp
  %v3_10008678 = inttoptr i32 %v2_10008678 to i8*
  %v4_10008678 = load i8, i8* %v3_10008678, align 1
  %v3_1000867c = icmp eq i8 %v4_10008678, 0
  br i1 %v3_1000867c, label %dec_label_pc_10008684, label %dec_label_pc_10008674

dec_label_pc_10008684:                            ; preds = %dec_label_pc_10008674
  ret i32 %v1_10008674
}

define i32 @function_10008688(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008688:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008688 = load i8, i8* %arg1, align 1
  %v3_1000868c = icmp eq i8 %v2_10008688, 0
  br i1 %v3_1000868c, label %dec_label_pc_100086d8, label %dec_label_pc_10008694

dec_label_pc_10008694:                            ; preds = %dec_label_pc_10008688
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008698:                            ; preds = %dec_label_pc_10008698, %dec_label_pc_10008694
  %v0_10008698 = phi i32 [ %v1_10008698, %dec_label_pc_10008698 ], [ 0, %dec_label_pc_10008694 ]
  %v1_10008698 = add i32 %v0_10008698, 1
  store i32 %v1_10008698, i32* %r9.global-to-local, align 4
  %v2_1000869c = add i32 %v1_10008698, %tmp
  %v3_1000869c = inttoptr i32 %v2_1000869c to i8*
  %v4_1000869c = load i8, i8* %v3_1000869c, align 1
  %v3_100086a0 = icmp eq i8 %v4_1000869c, 0
  br i1 %v3_100086a0, label %dec_label_pc_100086a8, label %dec_label_pc_10008698

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_10008698
  %v3_100086a8 = icmp eq i32 %v1_10008698, -1
  br i1 %v3_100086a8, label %dec_label_pc_100086d0, label %dec_label_pc_100086b0

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_100086a8
  %phitmp = add i32 %v0_10008698, 2
  br label %dec_label_pc_100086b4

dec_label_pc_100086b4:                            ; preds = %dec_label_pc_100086d8, %dec_label_pc_100086b0
  %v0_100086b4 = phi i32 [ 1, %dec_label_pc_100086d8 ], [ %phitmp, %dec_label_pc_100086b0 ]
  store i32 %v0_100086b4, i32* %ctr.global-to-local, align 4
  %v2_100086c4.pre = load i32, i32* @r3, align 4
  %v2_100086bc8 = load i8, i8* %arg1, align 1
  %v1_100086c010 = add i32 %tmp, 1
  store i32 %v1_100086c010, i32* %r4.global-to-local, align 4
  %v3_100086c411 = inttoptr i32 %v2_100086c4.pre to i8*
  store i8 %v2_100086bc8, i8* %v3_100086c411, align 1
  %v0_100086c812 = load i32, i32* @r3, align 4
  %v1_100086c813 = add i32 %v0_100086c812, 1
  store i32 %v1_100086c813, i32* %r3.global-to-local, align 4
  %v0_100086cc14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100086cc15 = add i32 %v0_100086cc14, -1
  store i32 %v1_100086cc15, i32* %ctr.global-to-local, align 4
  %v2_100086cc16 = icmp eq i32 %v1_100086cc15, 0
  br i1 %v2_100086cc16, label %dec_label_pc_100086d0.loopexit, label %dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge

dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge: ; preds = %dec_label_pc_100086b4, %dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge
  %v1_100086c817 = phi i32 [ %v1_100086c8, %dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge ], [ %v1_100086c813, %dec_label_pc_100086b4 ]
  %v0_100086bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100086bc = inttoptr i32 %v0_100086bc.pre to i8*
  %v2_100086bc = load i8, i8* %v1_100086bc, align 1
  %v1_100086c0 = add i32 %v0_100086bc.pre, 1
  store i32 %v1_100086c0, i32* %r4.global-to-local, align 4
  %v3_100086c4 = inttoptr i32 %v1_100086c817 to i8*
  store i8 %v2_100086bc, i8* %v3_100086c4, align 1
  %v0_100086c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100086c8 = add i32 %v0_100086c8, 1
  store i32 %v1_100086c8, i32* %r3.global-to-local, align 4
  %v0_100086cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100086cc = add i32 %v0_100086cc, -1
  store i32 %v1_100086cc, i32* %ctr.global-to-local, align 4
  %v2_100086cc = icmp eq i32 %v1_100086cc, 0
  br i1 %v2_100086cc, label %dec_label_pc_100086d0.loopexit, label %dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge

dec_label_pc_100086d0.loopexit:                   ; preds = %dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge, %dec_label_pc_100086b4
  %v0_100086d0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100086d0

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086d0.loopexit, %dec_label_pc_100086a8
  %v0_100086d0 = phi i32 [ %v0_100086d0.pre, %dec_label_pc_100086d0.loopexit ], [ -1, %dec_label_pc_100086a8 ]
  store i32 %v0_100086d0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100086d0

dec_label_pc_100086d8:                            ; preds = %dec_label_pc_10008688
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100086b4

; uselistorder directives
  uselistorder i32 %v0_100086d0, { 1, 0 }
  uselistorder i32 %v1_100086cc, { 1, 0 }
  uselistorder i32 %v1_100086c8, { 1, 0 }
  uselistorder i32 %v1_10008698, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_100086bc.dec_label_pc_100086bc_crit_edge, { 1, 0 }
}

define i32 @function_100086e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100086e4:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100086e4 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_100086ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100086e4, i32 %v0_100086ec)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100086f4

dec_label_pc_100086f4:                            ; preds = %dec_label_pc_100086f4, %dec_label_pc_100086e4
  %v0_100086f4 = phi i32 [ %v1_100086fc, %dec_label_pc_100086f4 ], [ 0, %dec_label_pc_100086e4 ]
  %v2_100086f4 = add i32 %v0_100086f4, %arg2
  %v3_100086f4 = inttoptr i32 %v2_100086f4 to i8*
  %v4_100086f4 = load i8, i8* %v3_100086f4, align 1
  %v4_100086f8 = add i32 %v0_100086f4, %arg1
  %v5_100086f8 = inttoptr i32 %v4_100086f8 to i8*
  store i8 %v4_100086f4, i8* %v5_100086f8, align 1
  %v0_100086fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100086fc = add i32 %v0_100086fc, 1
  store i32 %v1_100086fc, i32* %r9.global-to-local, align 4
  %v0_10008700 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008700 = add i32 %v0_10008700, -1
  store i32 %v1_10008700, i32* %ctr.global-to-local, align 4
  %v2_10008700 = icmp eq i32 %v1_10008700, 0
  br i1 %v2_10008700, label %dec_label_pc_10008704, label %dec_label_pc_100086f4

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086f4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008700, { 1, 0 }
  uselistorder i32 %v1_100086fc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008708() local_unnamed_addr {
dec_label_pc_10008708:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008708 = load i32, i32* @r4, align 4
  store i32 %v0_10008708, i32* %r0.global-to-local, align 4
  %v3_10008708 = icmp eq i32 %v0_10008708, 0
  store i32 %v0_10008708, i32* %ctr.global-to-local, align 4
  %v0_10008710 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008708, i32 %v0_10008710)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000871c3 = load i32, i32* @r3, align 4
  %v5_1000871c4 = inttoptr i32 %v2_1000871c3 to i8*
  store i8 0, i8* %v5_1000871c4, align 1
  %v0_100087205 = load i32, i32* %r9.global-to-local, align 4
  %v1_100087206 = add i32 %v0_100087205, 1
  store i32 %v1_100087206, i32* %r9.global-to-local, align 4
  %v0_100087247 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100087248 = add i32 %v0_100087247, -1
  store i32 %v1_100087248, i32* %ctr.global-to-local, align 4
  %v2_100087249 = icmp eq i32 %v1_100087248, 0
  br i1 %v2_100087249, label %dec_label_pc_10008728, label %dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge

dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge: ; preds = %dec_label_pc_10008708, %dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge
  %v1_1000872010 = phi i32 [ %v1_10008720, %dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge ], [ %v1_100087206, %dec_label_pc_10008708 ]
  %v0_1000871c.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_1000871c.pre to i8
  %v2_1000871c = load i32, i32* @r3, align 4
  %v4_1000871c = add i32 %v2_1000871c, %v1_1000872010
  %v5_1000871c = inttoptr i32 %v4_1000871c to i8*
  store i8 %extract.t, i8* %v5_1000871c, align 1
  %v0_10008720 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008720 = add i32 %v0_10008720, 1
  store i32 %v1_10008720, i32* %r9.global-to-local, align 4
  %v0_10008724 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008724 = add i32 %v0_10008724, -1
  store i32 %v1_10008724, i32* %ctr.global-to-local, align 4
  %v2_10008724 = icmp eq i32 %v1_10008724, 0
  br i1 %v2_10008724, label %dec_label_pc_10008728, label %dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge

dec_label_pc_10008728:                            ; preds = %dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge, %dec_label_pc_10008708
  %v0_10008728 = load i32, i32* @r3, align 4
  ret i32 %v0_10008728

; uselistorder directives
  uselistorder i32 %v1_10008724, { 1, 0 }
  uselistorder i32 %v1_10008720, { 1, 0 }
  uselistorder i32 %v0_10008708, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000871c.dec_label_pc_1000871c_crit_edge, { 1, 0 }
}

define i32 @function_1000872c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000872c:
  %v3_1000872c = icmp sgt i32 %arg4, %arg2
  br i1 %v3_1000872c, label %dec_label_pc_10008738, label %dec_label_pc_10008740

dec_label_pc_10008738:                            ; preds = %dec_label_pc_1000875c, %dec_label_pc_1000872c, %dec_label_pc_10008740
  ret i32 -1

dec_label_pc_10008740:                            ; preds = %dec_label_pc_1000872c
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10008738, label %dec_label_pc_10008748

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008740
  br label %dec_label_pc_10008764

dec_label_pc_10008758:                            ; preds = %dec_label_pc_10008764
  br label %dec_label_pc_1000875c

dec_label_pc_1000875c:                            ; preds = %dec_label_pc_1000877c, %dec_label_pc_10008758
  %v0_100087641 = phi i32 [ %v1_10008768, %dec_label_pc_1000877c ], [ 0, %dec_label_pc_10008758 ]
  %v1_1000875c = add i32 %v0_10008780, 1
  %v1_10008760 = add i32 %v0_10008760, -1
  %v2_10008760 = icmp eq i32 %v1_10008760, 0
  br i1 %v2_10008760, label %dec_label_pc_10008738, label %dec_label_pc_10008764

dec_label_pc_10008764:                            ; preds = %dec_label_pc_1000875c, %dec_label_pc_10008748
  %v0_10008760 = phi i32 [ %v1_10008760, %dec_label_pc_1000875c ], [ %arg2, %dec_label_pc_10008748 ]
  %v0_10008780 = phi i32 [ %v1_1000875c, %dec_label_pc_1000875c ], [ 0, %dec_label_pc_10008748 ]
  %v0_10008764 = phi i32 [ %v0_100087641, %dec_label_pc_1000875c ], [ 0, %dec_label_pc_10008748 ]
  %v2_10008764 = add i32 %v0_10008764, %arg3
  %v3_10008764 = inttoptr i32 %v2_10008764 to i8*
  %v4_10008764 = load i8, i8* %v3_10008764, align 1
  %v1_10008768 = add i32 %v0_10008764, 1
  %v2_1000876c = add i32 %v0_10008780, %arg1
  %v3_1000876c = inttoptr i32 %v2_1000876c to i8*
  %v4_1000876c = load i8, i8* %v3_1000876c, align 1
  %v4_10008774 = icmp eq i8 %v4_1000876c, %v4_10008764
  br i1 %v4_10008774, label %dec_label_pc_1000877c, label %dec_label_pc_10008758

dec_label_pc_1000877c:                            ; preds = %dec_label_pc_10008764
  %v4_10008770 = icmp eq i32 %v1_10008768, %arg4
  br i1 %v4_10008770, label %dec_label_pc_10008780, label %dec_label_pc_1000875c

dec_label_pc_10008780:                            ; preds = %dec_label_pc_1000877c
  %v1_10008780 = add i32 %v0_10008780, 1
  ret i32 %v1_10008780

; uselistorder directives
  uselistorder i32 %v0_10008764, { 1, 0 }
  uselistorder label %dec_label_pc_10008738, { 0, 2, 1 }
}

define i32 @function_10008788(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008788.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008788

dec_label_pc_10008788:                            ; preds = %dec_label_pc_100087a4, %dec_label_pc_10008788, %bb
  %v0_10008788 = phi i32 [ %v0_10008788.pre, %bb ], [ %v1_1000878c, %dec_label_pc_10008788 ], [ %v1_1000878c, %dec_label_pc_100087a4 ]
  %v1_10008788 = inttoptr i32 %v0_10008788 to i8*
  %v2_10008788 = load i8, i8* %v1_10008788, align 1
  %v1_1000878c = add i32 %v0_10008788, 1
  %v3_10008798 = icmp eq i8 %v2_10008788, 32
  br i1 %v3_10008798, label %dec_label_pc_10008788, label %dec_label_pc_100087a4

dec_label_pc_100087a4:                            ; preds = %dec_label_pc_10008788
  %v2_10008788.off = add i8 %v2_10008788, -9
  %tmp = icmp ult i8 %v2_10008788.off, 2
  br i1 %tmp, label %dec_label_pc_10008788, label %dec_label_pc_100087b0

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_100087a4
  %v3_100087b0 = icmp eq i8 %v2_10008788, 45
  br i1 %v3_100087b0, label %dec_label_pc_1000885c, label %dec_label_pc_100087b8

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_100087b0
  %v3_100087b8 = icmp eq i8 %v2_10008788, 43
  br i1 %v3_100087b8, label %dec_label_pc_100088b4, label %dec_label_pc_100087c0

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087b8, %dec_label_pc_100088b4
  %v0_1000885026 = phi i32 [ %v1_1000878c, %dec_label_pc_100087b8 ], [ %v1_100088b8, %dec_label_pc_100088b4 ]
  %v0_100087e05.in = phi i8 [ %v2_10008788, %dec_label_pc_100087b8 ], [ %v2_100088b4, %dec_label_pc_100088b4 ]
  br label %dec_label_pc_100087cc

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_1000885c, %dec_label_pc_100087c0
  %v0_1000885025 = phi i32 [ %v1_10008864, %dec_label_pc_1000885c ], [ %v0_1000885026, %dec_label_pc_100087c0 ]
  %v0_100087e04.in = phi i8 [ %v2_1000885c, %dec_label_pc_1000885c ], [ %v0_100087e05.in, %dec_label_pc_100087c0 ]
  %v0_100088a4 = phi i32 [ 1, %dec_label_pc_1000885c ], [ 0, %dec_label_pc_100087c0 ]
  %v1_100087dc = phi i32 [ -2147483648, %dec_label_pc_1000885c ], [ 2147483647, %dec_label_pc_100087c0 ]
  %v2_100087cc = udiv i32 %v1_100087dc, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100087d8 = mul i32 %v2_100087cc, %arg1
  %v2_100087dc = sub i32 %v1_100087dc, %v2_100087d8
  br label %dec_label_pc_100087e0

dec_label_pc_100087e0:                            ; preds = %dec_label_pc_10008850, %dec_label_pc_100087cc
  %v0_10008850 = phi i32 [ %v1_10008854, %dec_label_pc_10008850 ], [ %v0_1000885025, %dec_label_pc_100087cc ]
  %v0_10008844 = phi i32 [ %v0_1000883c17, %dec_label_pc_10008850 ], [ 0, %dec_label_pc_100087cc ]
  %v0_10008834 = phi i32 [ %v0_1000889411, %dec_label_pc_10008850 ], [ 0, %dec_label_pc_100087cc ]
  %v0_1000882c = phi i32 [ %v0_100088889, %dec_label_pc_10008850 ], [ 0, %dec_label_pc_100087cc ]
  %v1_10008820.in = phi i8 [ %v2_10008850, %dec_label_pc_10008850 ], [ %v0_100087e04.in, %dec_label_pc_100087cc ]
  %v1_10008820 = zext i8 %v1_10008820.in to i32
  %v1_100087e4 = add nsw i32 %v1_10008820, -48
  %fold = add nuw nsw i32 %v1_10008820, 208
  %v1_100087ec = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_100087ec, 10
  br i1 %tmp27, label %dec_label_pc_10008824, label %dec_label_pc_100087f8

dec_label_pc_100087f8:                            ; preds = %dec_label_pc_100087e0
  %v1_100087f8 = add nuw nsw i32 %v1_10008820, 191
  %v1_100087fc = urem i32 %v1_100087f8, 256
  %tmp28 = icmp ult i32 %v1_100087fc, 26
  br i1 %tmp28, label %dec_label_pc_10008820, label %dec_label_pc_1000880c

dec_label_pc_1000880c:                            ; preds = %dec_label_pc_100087f8
  %v1_1000880c = add nuw nsw i32 %v1_10008820, 159
  %v1_10008810 = urem i32 %v1_1000880c, 256
  %v2_10008814 = icmp ugt i32 %v1_10008810, 25
  br i1 %v2_10008814, label %dec_label_pc_10008888, label %dec_label_pc_1000881c

dec_label_pc_1000881c:                            ; preds = %dec_label_pc_1000880c
  br label %dec_label_pc_10008820

dec_label_pc_10008820:                            ; preds = %dec_label_pc_100087f8, %dec_label_pc_1000881c
  %v0_10008820 = phi i32 [ 55, %dec_label_pc_100087f8 ], [ 87, %dec_label_pc_1000881c ]
  %v2_10008820 = sub nsw i32 %v1_10008820, %v0_10008820
  br label %dec_label_pc_10008824

dec_label_pc_10008824:                            ; preds = %dec_label_pc_100087e0, %dec_label_pc_10008820
  %v1_1000884c = phi i32 [ %v1_100087e4, %dec_label_pc_100087e0 ], [ %v2_10008820, %dec_label_pc_10008820 ]
  %v2_10008824 = icmp slt i32 %v1_1000884c, %arg1
  br i1 %v2_10008824, label %dec_label_pc_1000882c, label %dec_label_pc_10008888

dec_label_pc_1000882c:                            ; preds = %dec_label_pc_10008824
  %v1_1000882c = icmp slt i32 %v0_1000882c, 0
  br i1 %v1_1000882c, label %dec_label_pc_10008870, label %dec_label_pc_10008834

dec_label_pc_10008834:                            ; preds = %dec_label_pc_1000882c
  %v3_10008834 = icmp ugt i32 %v0_10008834, %v2_100087cc
  br i1 %v3_10008834, label %dec_label_pc_10008870, label %dec_label_pc_1000883c

dec_label_pc_1000883c:                            ; preds = %dec_label_pc_10008834
  %v4_1000883c = icmp eq i32 %v0_10008844, %v2_100087cc
  br i1 %v4_1000883c, label %dec_label_pc_10008878, label %dec_label_pc_10008844

dec_label_pc_10008844:                            ; preds = %dec_label_pc_10008878, %dec_label_pc_1000883c
  %v2_10008844 = mul i32 %v0_10008844, %arg1
  %v2_1000884c = add i32 %v1_1000884c, %v2_10008844
  store i32 %v2_1000884c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008850

dec_label_pc_10008850:                            ; preds = %dec_label_pc_10008878, %dec_label_pc_10008870, %dec_label_pc_10008844
  %v0_1000883c17 = phi i32 [ %v2_100087cc, %dec_label_pc_10008878 ], [ %v0_10008844, %dec_label_pc_10008870 ], [ %v2_1000884c, %dec_label_pc_10008844 ]
  %v0_1000889411 = phi i32 [ %v2_100087cc, %dec_label_pc_10008878 ], [ %v0_10008834, %dec_label_pc_10008870 ], [ %v2_1000884c, %dec_label_pc_10008844 ]
  %v0_100088889 = phi i32 [ -1, %dec_label_pc_10008878 ], [ -1, %dec_label_pc_10008870 ], [ 1, %dec_label_pc_10008844 ]
  %v1_10008850 = inttoptr i32 %v0_10008850 to i8*
  %v2_10008850 = load i8, i8* %v1_10008850, align 1
  %v1_10008854 = add i32 %v0_10008850, 1
  br label %dec_label_pc_100087e0

dec_label_pc_1000885c:                            ; preds = %dec_label_pc_100087b0
  %v1_1000885c = inttoptr i32 %v1_1000878c to i8*
  %v2_1000885c = load i8, i8* %v1_1000885c, align 1
  %v1_10008864 = add i32 %v0_10008788, 2
  br label %dec_label_pc_100087cc

dec_label_pc_10008870:                            ; preds = %dec_label_pc_10008834, %dec_label_pc_1000882c
  br label %dec_label_pc_10008850

dec_label_pc_10008878:                            ; preds = %dec_label_pc_1000883c
  %v3_10008878 = icmp sgt i32 %v1_1000884c, %v2_100087dc
  br i1 %v3_10008878, label %dec_label_pc_10008850, label %dec_label_pc_10008844

dec_label_pc_10008888:                            ; preds = %dec_label_pc_10008824, %dec_label_pc_1000880c
  %v1_10008888 = icmp slt i32 %v0_1000882c, 0
  br i1 %v1_10008888, label %dec_label_pc_100088a4, label %dec_label_pc_10008890

dec_label_pc_10008890:                            ; preds = %dec_label_pc_10008888
  %v3_10008890 = icmp eq i32 %v0_100088a4, 0
  %v0_10008898 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008890, i32 %v0_10008898)
  %v0_1000889c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000889c = sub i32 0, %v0_1000889c
  ret i32 %v1_1000889c

dec_label_pc_100088a4:                            ; preds = %dec_label_pc_10008888
  %v1_100088a4 = xor i32 %v0_100088a4, 1
  %v2_100088ac = sub nuw i32 -2147483648, %v1_100088a4
  ret i32 %v2_100088ac

dec_label_pc_100088b4:                            ; preds = %dec_label_pc_100087b8
  %v1_100088b4 = inttoptr i32 %v1_1000878c to i8*
  %v2_100088b4 = load i8, i8* %v1_100088b4, align 1
  %v1_100088b8 = add i32 %v0_10008788, 2
  br label %dec_label_pc_100087c0

; uselistorder directives
  uselistorder i32 %v2_1000884c, { 1, 0, 2 }
  uselistorder i32 %v1_1000884c, { 1, 0, 2 }
  uselistorder i32 %v1_10008820, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008844, { 2, 0, 1 }
  uselistorder i32 %v0_10008850, { 1, 0 }
  uselistorder i32 %v2_100087cc, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1000878c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008788, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 11, 12, 13, 14, 1, 8, 15, 9, 16 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008824, { 1, 0 }
  uselistorder label %dec_label_pc_10008820, { 1, 0 }
  uselistorder label %dec_label_pc_100087c0, { 1, 0 }
}

define i32 @function_100088c0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100088c0:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_100088ec = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_100088f4

dec_label_pc_100088f4:                            ; preds = %dec_label_pc_10008920.dec_label_pc_100088f4_crit_edge, %dec_label_pc_100088c0
  %v0_100088f8 = phi i32 [ %v0_100088f8.pre, %dec_label_pc_10008920.dec_label_pc_100088f4_crit_edge ], [ %arg3, %dec_label_pc_100088c0 ]
  %v0_100088f4 = phi i32 [ %v1_1000890c, %dec_label_pc_10008920.dec_label_pc_100088f4_crit_edge ], [ %tmp, %dec_label_pc_100088c0 ]
  store i32 1, i32* @r5, align 4
  store i32 268470532, i32* @lr, align 4
  %v4_10008900 = call i32 @function_10009058(i32 %v0_100088f8, i32 %v0_100088f4, i32 1)
  %v0_10008904 = load i32, i32* @r31, align 4
  %v3_10008908 = icmp eq i32 %v4_10008900, 1
  %v1_1000890c = add i32 %v0_10008904, 1
  store i32 %v1_1000890c, i32* @r31, align 4
  %v0_10008914 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008908, label %dec_label_pc_10008914, label %dec_label_pc_1000892c

dec_label_pc_10008914:                            ; preds = %dec_label_pc_100088f4
  %v1_10008914 = add i32 %v0_10008914, 1
  store i32 %v1_10008914, i32* %r30.global-to-local, align 4
  %v0_10008918 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008918 = icmp sgt i32 %v0_10008918, %v1_10008914
  br i1 %v3_10008918, label %dec_label_pc_10008920, label %dec_label_pc_1000892c

dec_label_pc_10008920:                            ; preds = %dec_label_pc_10008914
  %v1_10008920 = inttoptr i32 %v0_10008904 to i8*
  %v2_10008920 = load i8, i8* %v1_10008920, align 1
  %v3_10008924 = icmp eq i8 %v2_10008920, 10
  br i1 %v3_10008924, label %dec_label_pc_1000892c, label %dec_label_pc_10008920.dec_label_pc_100088f4_crit_edge

dec_label_pc_10008920.dec_label_pc_100088f4_crit_edge: ; preds = %dec_label_pc_10008920
  %v0_100088f8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100088f4

dec_label_pc_1000892c:                            ; preds = %dec_label_pc_100088f4, %dec_label_pc_10008920, %dec_label_pc_10008914
  %v1_10008934 = phi i32 [ %v1_10008914, %dec_label_pc_10008920 ], [ %v1_10008914, %dec_label_pc_10008914 ], [ %v0_10008914, %dec_label_pc_100088f4 ]
  %tmp12 = icmp slt i32 %v1_10008934, 0
  %v1_1000892c = zext i1 %tmp12 to i32
  %v2_1000892c = ashr i32 %v1_10008934, 31
  %v3_1000892c = and i32 %v2_1000892c, -2
  %v4_1000892c = or i32 %v3_1000892c, %v1_1000892c
  %v2_10008934 = xor i32 %v4_1000892c, %v1_10008934
  %v2_1000893c = sub i32 %v4_1000892c, %v2_10008934
  %tmp13 = icmp slt i32 %v2_1000893c, 0
  %v1_10008944 = zext i1 %tmp13 to i32
  %v2_10008944 = ashr i32 %v2_1000893c, 31
  %v3_10008944 = and i32 %v2_10008944, -2
  %v4_10008944 = or i32 %v3_10008944, %v1_10008944
  %v0_1000894c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000894c = and i32 %v4_10008944, %v0_1000894c
  store i32 %v0_100088ec, i32* @r31, align 4
  ret i32 %v2_1000894c

; uselistorder directives
  uselistorder i32 %v2_1000893c, { 1, 0 }
  uselistorder i32 %v4_1000892c, { 1, 0 }
  uselistorder i32 %v1_10008934, { 1, 2, 0 }
  uselistorder i32 %v1_1000890c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009058, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000892c, { 1, 2, 0 }
}

define i32 @function_10008964(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008964:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_1000897c = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10008984 = call i32 @function_1000953c()
  %v2_10008990 = inttoptr i32 %v0_10008984 to i32*
  store i32 0, i32* %v2_10008990, align 4
  store i32 268470688, i32* @lr, align 4
  %v3_1000899c = call i32 @function_10009b3c(i32 2, i32 2, i32 0)
  store i32 %v3_1000899c, i32* @r3, align 4
  %v3_100089a4 = icmp eq i32 %v3_1000899c, -1
  store i32 %v3_1000899c, i32* @r31, align 4
  br i1 %v3_100089a4, label %dec_label_pc_100089f4, label %dec_label_pc_100089c0

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_10008964
  %v2_10008970 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268470744, i32* @lr, align 4
  %v0_100089d4 = call i32 @function_1000993c()
  %v2_100089dc = ptrtoint i32* %stack_var_-40 to i32
  %v0_100089e0 = load i32, i32* @r31, align 4
  store i32 268470760, i32* @lr, align 4
  %v3_100089e4 = call i32 @function_10009970(i32 %v0_100089e0, i32 %v2_10008970, i32 %v2_100089dc)
  store i32 268470768, i32* @lr, align 4
  %v0_100089ec = call i32 @function_10008e20()
  br label %dec_label_pc_100089f4

dec_label_pc_100089f4:                            ; preds = %dec_label_pc_10008964, %dec_label_pc_100089c0
  %v0_100089f4 = phi i32 [ 0, %dec_label_pc_10008964 ], [ 134744072, %dec_label_pc_100089c0 ]
  store i32 %v0_1000897c, i32* @r31, align 4
  ret i32 %v0_100089f4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000993c, { 10, 9, 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009b3c, { 28, 26, 27, 25, 8, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 0, 14, 13, 1, 12, 11, 10, 9, 2, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_100089f4, { 1, 0 }
}

define i32 @function_10008a10(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008a10:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008a10 = load i8, i8* %tmp, align 1
  %v3_10008a1c = icmp eq i8 %v3_10008a10, 0
  br i1 %v3_10008a1c, label %dec_label_pc_10008a34, label %dec_label_pc_10008a24

dec_label_pc_10008a24:                            ; preds = %dec_label_pc_10008a10, %dec_label_pc_10008a24
  %v0_10008a24 = phi i32 [ %v1_10008a24, %dec_label_pc_10008a24 ], [ 0, %dec_label_pc_10008a10 ]
  %v1_10008a24 = add i32 %v0_10008a24, 1
  %v3_10008a28 = add i32 %v1_10008a24, %arg3
  %v4_10008a28 = inttoptr i32 %v3_10008a28 to i8*
  %v5_10008a28 = load i8, i8* %v4_10008a28, align 1
  %v3_10008a2c = icmp eq i8 %v5_10008a28, 0
  br i1 %v3_10008a2c, label %dec_label_pc_10008a34, label %dec_label_pc_10008a24

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a24, %dec_label_pc_10008a10
  %v0_10008a6411 = phi i32 [ 0, %dec_label_pc_10008a10 ], [ %v1_10008a24, %dec_label_pc_10008a24 ]
  %v1_10008a34 = icmp slt i32 %arg2, 0
  %v1_10008a38 = add i32 %arg2, 1
  br i1 %v1_10008a34, label %dec_label_pc_10008ab0, label %dec_label_pc_10008a4c

dec_label_pc_10008a4c:                            ; preds = %dec_label_pc_10008a34, %dec_label_pc_10008ab0, %dec_label_pc_10008aa4
  %v2_10008a588 = phi i32 [ %v1_10008a5c, %dec_label_pc_10008aa4 ], [ 0, %dec_label_pc_10008ab0 ], [ 0, %dec_label_pc_10008a34 ]
  %v0_10008a506 = phi i32 [ %v1_10008a54, %dec_label_pc_10008aa4 ], [ %tmp16, %dec_label_pc_10008ab0 ], [ %tmp16, %dec_label_pc_10008a34 ]
  %v0_10008a4c = phi i32 [ %v0_10008a98, %dec_label_pc_10008aa4 ], [ 1, %dec_label_pc_10008ab0 ], [ %v1_10008a38, %dec_label_pc_10008a34 ]
  %v1_10008a4c = add i32 %v0_10008a4c, -1
  %v2_10008a4c = icmp eq i32 %v1_10008a4c, 0
  br i1 %v2_10008a4c, label %dec_label_pc_10008a9c, label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a4c, %dec_label_pc_10008a94
  %v2_10008a58 = phi i32 [ 0, %dec_label_pc_10008a94 ], [ %v2_10008a588, %dec_label_pc_10008a4c ]
  %v0_10008a50 = phi i32 [ %v1_10008a54, %dec_label_pc_10008a94 ], [ %v0_10008a506, %dec_label_pc_10008a4c ]
  %v0_10008a98 = phi i32 [ %v1_10008a98, %dec_label_pc_10008a94 ], [ %v1_10008a4c, %dec_label_pc_10008a4c ]
  %v1_10008a50 = inttoptr i32 %v0_10008a50 to i8*
  %v2_10008a50 = load i8, i8* %v1_10008a50, align 1
  %v3_10008a50 = zext i8 %v2_10008a50 to i32
  %v1_10008a54 = add i32 %v0_10008a50, 1
  %v3_10008a58 = add i32 %v2_10008a58, %arg3
  %v4_10008a58 = inttoptr i32 %v3_10008a58 to i8*
  %v5_10008a58 = load i8, i8* %v4_10008a58, align 1
  %v6_10008a58 = zext i8 %v5_10008a58 to i32
  %v1_10008a5c = add i32 %v2_10008a58, 1
  %v1_10008a60 = add nuw nsw i32 %v3_10008a50, 191
  %v1_10008a68 = urem i32 %v1_10008a60, 256
  %v2_10008a6c = icmp ugt i32 %v1_10008a68, 25
  %v1_10008a70 = add nuw nsw i32 %v6_10008a58, 191
  %v1_10008a74 = urem i32 %v1_10008a70, 256
  %v2_10008a78 = icmp ugt i32 %v1_10008a74, 25
  br i1 %v2_10008a6c, label %dec_label_pc_10008a84, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a50
  %v1_10008a80 = or i32 %v3_10008a50, 96
  br i1 %v2_10008a78, label %dec_label_pc_10008a8c, label %dec_label_pc_10008a88

dec_label_pc_10008a84:                            ; preds = %dec_label_pc_10008a50
  br i1 %v2_10008a78, label %dec_label_pc_10008a8c, label %dec_label_pc_10008a88

dec_label_pc_10008a88:                            ; preds = %dec_label_pc_10008a80, %dec_label_pc_10008a84
  %v1_10008a8c14 = phi i32 [ %v1_10008a80, %dec_label_pc_10008a80 ], [ %v3_10008a50, %dec_label_pc_10008a84 ]
  %v1_10008a88 = or i32 %v6_10008a58, 96
  br label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008a80, %dec_label_pc_10008a84, %dec_label_pc_10008a88
  %v1_10008a8c = phi i32 [ %v1_10008a80, %dec_label_pc_10008a80 ], [ %v3_10008a50, %dec_label_pc_10008a84 ], [ %v1_10008a8c14, %dec_label_pc_10008a88 ]
  %v0_10008a8c = phi i32 [ %v6_10008a58, %dec_label_pc_10008a80 ], [ %v6_10008a58, %dec_label_pc_10008a84 ], [ %v1_10008a88, %dec_label_pc_10008a88 ]
  %v4_10008a8c = icmp eq i32 %v0_10008a8c, %v1_10008a8c
  br i1 %v4_10008a8c, label %dec_label_pc_10008aa4, label %dec_label_pc_10008a94

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008a8c
  %v1_10008a98 = add i32 %v0_10008a98, -1
  %v2_10008a98 = icmp eq i32 %v1_10008a98, 0
  br i1 %v2_10008a98, label %dec_label_pc_10008a9c, label %dec_label_pc_10008a50

dec_label_pc_10008a9c:                            ; preds = %dec_label_pc_10008a4c, %dec_label_pc_10008a94
  ret i32 -1

dec_label_pc_10008aa4:                            ; preds = %dec_label_pc_10008a8c
  %v4_10008a64.le = icmp eq i32 %v0_10008a6411, %v1_10008a5c
  br i1 %v4_10008a64.le, label %dec_label_pc_10008aa8, label %dec_label_pc_10008a4c

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008aa4
  %v2_10008aa8 = sub i32 %v1_10008a54, %tmp16
  ret i32 %v2_10008aa8

dec_label_pc_10008ab0:                            ; preds = %dec_label_pc_10008a34
  br label %dec_label_pc_10008a4c

; uselistorder directives
  uselistorder i32 %v1_10008a98, { 1, 0 }
  uselistorder i32 %v1_10008a80, { 1, 0 }
  uselistorder i1 %v2_10008a78, { 1, 0 }
  uselistorder i32 %v1_10008a5c, { 1, 0 }
  uselistorder i32 %v3_10008a50, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008a98, { 1, 0 }
  uselistorder i32 %v0_10008a50, { 1, 0 }
  uselistorder i32 %v2_10008a58, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 5, 6, 7, 0, 4, 1, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008a8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008a88, { 1, 0 }
  uselistorder label %dec_label_pc_10008a50, { 1, 0 }
  uselistorder label %dec_label_pc_10008a4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008a24, { 1, 0 }
}

define i32 @function_10008abc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008abc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10008abc = load i8, i8* %arg1, align 1
  %v3_10008ac4 = icmp eq i8 %v2_10008abc, 0
  br i1 %v3_10008ac4, label %dec_label_pc_10008adc, label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008abc, %dec_label_pc_10008acc
  %v0_10008acc = phi i32 [ %v1_10008acc, %dec_label_pc_10008acc ], [ 0, %dec_label_pc_10008abc ]
  %v1_10008acc = add i32 %v0_10008acc, 1
  %v2_10008ad0 = add i32 %v1_10008acc, %tmp
  %v3_10008ad0 = inttoptr i32 %v2_10008ad0 to i8*
  %v4_10008ad0 = load i8, i8* %v3_10008ad0, align 1
  %v3_10008ad4 = icmp eq i8 %v4_10008ad0, 0
  br i1 %v3_10008ad4, label %dec_label_pc_10008adc, label %dec_label_pc_10008acc

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008acc, %dec_label_pc_10008abc
  %v0_10008afc = phi i32 [ 0, %dec_label_pc_10008abc ], [ %v1_10008acc, %dec_label_pc_10008acc ]
  %v1_10008adc = inttoptr i32 %arg2 to i8*
  %v2_10008adc = load i8, i8* %v1_10008adc, align 1
  %v3_10008ae4 = icmp eq i8 %v2_10008adc, 0
  br i1 %v3_10008ae4, label %dec_label_pc_10008afc, label %dec_label_pc_10008aec

dec_label_pc_10008aec:                            ; preds = %dec_label_pc_10008adc, %dec_label_pc_10008aec
  %v0_10008aec = phi i32 [ %v1_10008aec, %dec_label_pc_10008aec ], [ 0, %dec_label_pc_10008adc ]
  %v1_10008aec = add i32 %v0_10008aec, 1
  %v2_10008af0 = add i32 %v1_10008aec, %arg2
  %v3_10008af0 = inttoptr i32 %v2_10008af0 to i8*
  %v4_10008af0 = load i8, i8* %v3_10008af0, align 1
  %v3_10008af4 = icmp eq i8 %v4_10008af0, 0
  br i1 %v3_10008af4, label %dec_label_pc_10008afc, label %dec_label_pc_10008aec

dec_label_pc_10008afc:                            ; preds = %dec_label_pc_10008aec, %dec_label_pc_10008adc
  %v0_10008b00 = phi i32 [ 0, %dec_label_pc_10008adc ], [ %v1_10008aec, %dec_label_pc_10008aec ]
  %v4_10008afc = icmp eq i32 %v0_10008afc, %v0_10008b00
  br i1 %v4_10008afc, label %dec_label_pc_10008b14, label %dec_label_pc_10008b0c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008b18, %dec_label_pc_10008afc
  ret i32 0

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008afc
  %v2_10008b14 = icmp eq i32 %v0_10008afc, 0
  br i1 %v2_10008b14, label %dec_label_pc_10008b34, label %dec_label_pc_10008b18

dec_label_pc_10008b18:                            ; preds = %dec_label_pc_10008b14, %dec_label_pc_10008b30
  %v0_10008b30 = phi i32 [ %v1_10008b30, %dec_label_pc_10008b30 ], [ %v0_10008afc, %dec_label_pc_10008b14 ]
  %v0_10008b20 = phi i32 [ %v1_10008b24, %dec_label_pc_10008b30 ], [ %arg2, %dec_label_pc_10008b14 ]
  %v0_10008b18 = phi i32 [ %v1_10008b1c, %dec_label_pc_10008b30 ], [ %tmp, %dec_label_pc_10008b14 ]
  %v1_10008b18 = inttoptr i32 %v0_10008b18 to i8*
  %v2_10008b18 = load i8, i8* %v1_10008b18, align 1
  %v1_10008b20 = inttoptr i32 %v0_10008b20 to i8*
  %v2_10008b20 = load i8, i8* %v1_10008b20, align 1
  %v4_10008b28 = icmp eq i8 %v2_10008b18, %v2_10008b20
  br i1 %v4_10008b28, label %dec_label_pc_10008b30, label %dec_label_pc_10008b0c

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008b18
  %v1_10008b24 = add i32 %v0_10008b20, 1
  %v1_10008b1c = add i32 %v0_10008b18, 1
  %v1_10008b30 = add i32 %v0_10008b30, -1
  %v2_10008b30 = icmp eq i32 %v1_10008b30, 0
  br i1 %v2_10008b30, label %dec_label_pc_10008b34, label %dec_label_pc_10008b18

dec_label_pc_10008b34:                            ; preds = %dec_label_pc_10008b30, %dec_label_pc_10008b14
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008b30, { 1, 0 }
  uselistorder i32 %v0_10008b18, { 1, 0 }
  uselistorder i32 %v0_10008b20, { 1, 0 }
  uselistorder label %dec_label_pc_10008b18, { 1, 0 }
  uselistorder label %dec_label_pc_10008aec, { 1, 0 }
  uselistorder label %dec_label_pc_10008acc, { 1, 0 }
}

define i32 @function_10008b3c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b3c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008b3c = icmp eq i32 %arg3, 0
  %v4_10008b40 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008b40, i32* %stack_var_-64, align 4
  %v5_10008b40 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008b3c, label %dec_label_pc_10008b5c, label %dec_label_pc_10008b48

dec_label_pc_10008b48:                            ; preds = %dec_label_pc_10008b3c
  %v0_10008b48 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008b48 = icmp eq i32 %v0_10008b48, 0
  store i1 %v3_10008b48, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008b48, label %dec_label_pc_10008b50, label %dec_label_pc_10008b68

dec_label_pc_10008b50:                            ; preds = %dec_label_pc_10008b48
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10008b54 = add i32 %arg3, 1
  %v5_10008b54 = inttoptr i32 %v4_10008b54 to i8*
  store i8 0, i8* %v5_10008b54, align 1
  %v0_10008b58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008b58 = trunc i32 %v0_10008b58 to i8
  store i8 %v1_10008b58, i8* %tmp, align 1
  br label %dec_label_pc_10008b5c

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008be8, %dec_label_pc_10008b3c, %dec_label_pc_10008b50
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008b68:                            ; preds = %dec_label_pc_10008b48
  %v2_10008b48 = icmp sgt i32 %v0_10008b48, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008b68.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008b48, %v3_10008b68.not
  br i1 %brmerge, label %dec_label_pc_10008b7c, label %dec_label_pc_10008c30

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008b68, %dec_label_pc_10008c30
  %v0_10008b802 = phi i32 [ %v0_10008b48, %dec_label_pc_10008b68 ], [ %v1_10008c30, %dec_label_pc_10008c30 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008b68 ], [ 1, %dec_label_pc_10008c30 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008b80

dec_label_pc_10008b80:                            ; preds = %dec_label_pc_10008bac.dec_label_pc_10008b80_crit_edge, %dec_label_pc_10008b7c
  %v1_10008b84 = phi i32 [ %v1_10008b84.pre, %dec_label_pc_10008bac.dec_label_pc_10008b80_crit_edge ], [ 32, %dec_label_pc_10008b7c ]
  %v0_10008b84 = phi i32 [ %v0_10008b84.pre, %dec_label_pc_10008bac.dec_label_pc_10008b80_crit_edge ], [ %v5_10008b40, %dec_label_pc_10008b7c ]
  %v1_10008b94 = phi i32 [ %v0_10008b80.pre, %dec_label_pc_10008bac.dec_label_pc_10008b80_crit_edge ], [ %v0_10008b802, %dec_label_pc_10008b7c ]
  %v2_10008b80 = udiv i32 %v1_10008b94, %arg2
  %v2_10008b84 = add i32 %v0_10008b84, %v1_10008b84
  store i32 %v2_10008b84, i32* %r11.global-to-local, align 4
  %v1_10008b88 = add i32 %v1_10008b84, -1
  store i32 %v1_10008b88, i32* %r10.global-to-local, align 4
  %v2_10008b8c = mul i32 %v2_10008b80, %arg2
  %v3_10008b90 = icmp ult i32 %v1_10008b94, %arg2
  store i1 %v3_10008b90, i1* %cr6_eq.global-to-local, align 1
  %v2_10008b94 = sub i32 %v1_10008b94, %v2_10008b8c
  store i32 %v2_10008b94, i32* %r9.global-to-local, align 4
  store i32 %v2_10008b80, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008b94, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008b94
  %v0_10008bac.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008bac = add i32 %v2_10008b84, 8
  %v4_10008bac = inttoptr i32 %v3_10008bac to i8*
  store i8 %v0_10008bac.off0, i8* %v4_10008bac, align 1
  %v0_10008bb0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008bb0, label %dec_label_pc_10008bb4, label %dec_label_pc_10008bac.dec_label_pc_10008b80_crit_edge

dec_label_pc_10008bac.dec_label_pc_10008b80_crit_edge: ; preds = %dec_label_pc_10008b80
  %v0_10008b80.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10008b84.pre = load i32, i32* @r1, align 4
  %v1_10008b84.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008b80

dec_label_pc_10008bb4:                            ; preds = %dec_label_pc_10008b80
  %v0_10008bb4 = load i32, i32* %r8.global-to-local, align 4
  %v3_10008bb4 = icmp eq i32 %v0_10008bb4, 0
  br i1 %v3_10008bb4, label %dec_label_pc_10008bbc, label %dec_label_pc_10008c1c

dec_label_pc_10008bbc:                            ; preds = %dec_label_pc_10008bb4
  %v0_10008bbc = load i32, i32* %r10.global-to-local, align 4
  %v1_10008bbc = add i32 %v0_10008bbc, 1
  store i32 %v1_10008bbc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008bc0

dec_label_pc_10008bc0:                            ; preds = %dec_label_pc_10008c1c, %dec_label_pc_10008bbc
  %v1_10008bc8 = phi i32 [ %v1_10008bc4.pre, %dec_label_pc_10008c1c ], [ %v1_10008bbc, %dec_label_pc_10008bbc ]
  %v2_10008bc0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008bc0, i32* %r9.global-to-local, align 4
  %v2_10008bc4 = add i32 %v1_10008bc8, %v2_10008bc0
  %v3_10008bc4 = inttoptr i32 %v2_10008bc4 to i8*
  %v4_10008bc4 = load i8, i8* %v3_10008bc4, align 1
  %v5_10008bc4 = zext i8 %v4_10008bc4 to i32
  store i32 %v5_10008bc4, i32* %r0.global-to-local, align 4
  store i32 %v2_10008bc4, i32* %r9.global-to-local, align 4
  %v3_10008bcc = icmp eq i8 %v4_10008bc4, 0
  br i1 %v3_10008bcc, label %dec_label_pc_10008c44, label %dec_label_pc_10008bd4

dec_label_pc_10008bd4:                            ; preds = %dec_label_pc_10008bc0
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008bd8

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008bd8, %dec_label_pc_10008bd4
  %v0_10008bd8 = phi i32 [ %v1_10008bd8, %dec_label_pc_10008bd8 ], [ 0, %dec_label_pc_10008bd4 ]
  %v1_10008bd8 = add i32 %v0_10008bd8, 1
  store i32 %v1_10008bd8, i32* %r10.global-to-local, align 4
  %v2_10008bdc = add i32 %v1_10008bd8, %v2_10008bc4
  %v3_10008bdc = inttoptr i32 %v2_10008bdc to i8*
  %v4_10008bdc = load i8, i8* %v3_10008bdc, align 1
  %v5_10008bdc = zext i8 %v4_10008bdc to i32
  store i32 %v5_10008bdc, i32* %r0.global-to-local, align 4
  %v3_10008be0 = icmp eq i8 %v4_10008bdc, 0
  br i1 %v3_10008be0, label %dec_label_pc_10008be8, label %dec_label_pc_10008bd8

dec_label_pc_10008be8:                            ; preds = %dec_label_pc_10008bd8
  %v3_10008be8 = icmp eq i32 %v1_10008bd8, -1
  br i1 %v3_10008be8, label %dec_label_pc_10008b5c, label %dec_label_pc_10008bf0

dec_label_pc_10008bf0:                            ; preds = %dec_label_pc_10008be8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008bd8, 2
  br label %dec_label_pc_10008bf4

dec_label_pc_10008bf4:                            ; preds = %dec_label_pc_10008c44, %dec_label_pc_10008bf0
  %v0_10008bf4 = phi i32 [ 1, %dec_label_pc_10008c44 ], [ %phitmp, %dec_label_pc_10008bf0 ]
  store i32 %v0_10008bf4, i32* %r10.global-to-local, align 4
  store i32 %v0_10008bf4, i32* %ctr.global-to-local, align 4
  %v2_10008bfc24 = load i8, i8* %v3_10008bc4, align 1
  %v3_10008bfc25 = zext i8 %v2_10008bfc24 to i32
  store i32 %v3_10008bfc25, i32* %r0.global-to-local, align 4
  %v1_10008c0026 = add i32 %v2_10008bc4, 1
  store i32 %v1_10008c0026, i32* %r9.global-to-local, align 4
  store i8 %v2_10008bfc24, i8* %tmp, align 1
  %v0_10008c0828 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c0829 = add i32 %v0_10008c0828, 1
  store i32 %v1_10008c0829, i32* %r11.global-to-local, align 4
  %v0_10008c0c30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c0c31 = add i32 %v0_10008c0c30, -1
  store i32 %v1_10008c0c31, i32* %ctr.global-to-local, align 4
  %v2_10008c0c32 = icmp eq i32 %v1_10008c0c31, 0
  br i1 %v2_10008c0c32, label %dec_label_pc_10008c10, label %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge

dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge: ; preds = %dec_label_pc_10008bf4, %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge
  %v1_10008c0833 = phi i32 [ %v1_10008c08, %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge ], [ %v1_10008c0829, %dec_label_pc_10008bf4 ]
  %v0_10008bfc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008bfc = inttoptr i32 %v0_10008bfc.pre to i8*
  %v2_10008bfc = load i8, i8* %v1_10008bfc, align 1
  %v3_10008bfc = zext i8 %v2_10008bfc to i32
  store i32 %v3_10008bfc, i32* %r0.global-to-local, align 4
  %v1_10008c00 = add i32 %v0_10008bfc.pre, 1
  store i32 %v1_10008c00, i32* %r9.global-to-local, align 4
  %v3_10008c04 = inttoptr i32 %v1_10008c0833 to i8*
  store i8 %v2_10008bfc, i8* %v3_10008c04, align 1
  %v0_10008c08 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c08 = add i32 %v0_10008c08, 1
  store i32 %v1_10008c08, i32* %r11.global-to-local, align 4
  %v0_10008c0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c0c = add i32 %v0_10008c0c, -1
  store i32 %v1_10008c0c, i32* %ctr.global-to-local, align 4
  %v2_10008c0c = icmp eq i32 %v1_10008c0c, 0
  br i1 %v2_10008c0c, label %dec_label_pc_10008c10, label %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge

dec_label_pc_10008c10:                            ; preds = %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge, %dec_label_pc_10008bf4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008bb4
  %v0_10008c1c.pre = load i32, i32* @r1, align 4
  %v1_10008c1c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008c1c = add i32 %v1_10008c1c.pre, %v0_10008c1c.pre
  store i32 %v2_10008c1c, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008c24 = add i32 %v2_10008c1c, 8
  %v4_10008c24 = inttoptr i32 %v3_10008c24 to i8*
  store i8 45, i8* %v4_10008c24, align 1
  %v1_10008bc4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008bc0

dec_label_pc_10008c30:                            ; preds = %dec_label_pc_10008b68
  %v1_10008c30 = sub i32 0, %v0_10008b48
  store i32 %v1_10008c30, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008b7c

dec_label_pc_10008c44:                            ; preds = %dec_label_pc_10008bc0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008bf4

; uselistorder directives
  uselistorder i32 %v1_10008c30, { 1, 0 }
  uselistorder i32 %v1_10008c0c, { 1, 0 }
  uselistorder i32 %v1_10008c08, { 1, 0 }
  uselistorder i32 %v0_10008bf4, { 1, 0 }
  uselistorder i32 %v1_10008bd8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008b80, { 1, 0 }
  uselistorder i32 %v1_10008b94, { 1, 0, 2 }
  uselistorder i32 %v1_10008b84, { 1, 0 }
  uselistorder i32 %v0_10008b48, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 7, 2, 3, 5, 4, 9, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b5c, { 0, 2, 1 }
}

define i32 @function_10008c50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008c50:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008c60 = icmp eq i32 %arg2, -2143521772
  %v2_10008c74 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008c74, i32* %stack_var_-32, align 4
  br i1 %v4_10008c60, label %dec_label_pc_10008cd4, label %dec_label_pc_10008c94

dec_label_pc_10008c94:                            ; preds = %dec_label_pc_10008c50
  %v3_10008c94 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008c94, label %dec_label_pc_10008cac, label %dec_label_pc_10008c9c

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c94
  %v3_10008ca0 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008ca0, label %dec_label_pc_10008cc8, label %dec_label_pc_10008cf4

dec_label_pc_10008cac:                            ; preds = %dec_label_pc_10008c94
  %v1_10008cac = xor i32 %arg2, -2143551488
  %v3_10008cb0 = icmp eq i32 %v1_10008cac, 29717
  br i1 %v3_10008cb0, label %dec_label_pc_10008ce4, label %dec_label_pc_10008cb8

dec_label_pc_10008cb8:                            ; preds = %dec_label_pc_10008cac
  %v3_10008cbc = icmp eq i32 %v1_10008cac, 29718
  br i1 %v3_10008cbc, label %dec_label_pc_10008cec, label %dec_label_pc_10008cf4

dec_label_pc_10008cc8:                            ; preds = %dec_label_pc_10008c9c
  store i32 ptrtoint (i32* @global_var_10008cd0.295 to i32), i32* @lr, align 4
  %v2_10008ccc = inttoptr i32 %arg3 to i32*
  %v3_10008ccc = call i32 @function_100096d4(i32* %v2_10008ccc, i32 %arg1)
  br label %dec_label_pc_10008cdc

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008c50
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008cd8

dec_label_pc_10008cd8:                            ; preds = %dec_label_pc_10008cec, %dec_label_pc_10008ce4, %dec_label_pc_10008cd4
  store i32 268471516, i32* @lr, align 4
  %v0_10008cd8 = call i32 @function_10009770()
  br label %dec_label_pc_10008cdc

dec_label_pc_10008cdc:                            ; preds = %dec_label_pc_10008cc8, %dec_label_pc_10008cd8
  %storemerge = phi i32 [ %v0_10008cd8, %dec_label_pc_10008cd8 ], [ %v3_10008ccc, %dec_label_pc_10008cc8 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008d20

dec_label_pc_10008ce4:                            ; preds = %dec_label_pc_10008cac
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008cd8

dec_label_pc_10008cec:                            ; preds = %dec_label_pc_10008cb8
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008cd8

dec_label_pc_10008cf4:                            ; preds = %dec_label_pc_10008cb8, %dec_label_pc_10008c9c
  %v0_10008d04 = call i32 @__asm_mfcr()
  %v1_10008d08 = and i32 %v0_10008d04, 268435456
  %v3_10008d08 = icmp eq i32 %v1_10008d08, 0
  store i32 %v0_10008d04, i32* %r31.global-to-local, align 4
  br i1 %v3_10008d08, label %dec_label_pc_10008d20, label %dec_label_pc_10008d14

dec_label_pc_10008d14:                            ; preds = %dec_label_pc_10008cf4
  %v0_10008d14 = call i32 @function_1000953c()
  %v0_10008d18 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d18 = inttoptr i32 %v0_10008d14 to i32*
  store i32 %v0_10008d18, i32* %v2_10008d18, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008d20

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008cf4, %dec_label_pc_10008cdc, %dec_label_pc_10008d14
  %v0_10008d24 = phi i32 [ %v0_10008d04, %dec_label_pc_10008cf4 ], [ %storemerge, %dec_label_pc_10008cdc ], [ -1, %dec_label_pc_10008d14 ]
  ret i32 %v0_10008d24

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10008d20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008cdc, { 1, 0 }
}

define i32 @function_10008d38(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008d38:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008d4c = load i32, i32* @r4, align 4
  %v1_10008d4c = add i32 %v0_10008d4c, -12
  %v2_10008d50 = icmp ugt i32 %v1_10008d4c, 2
  %v2_10008d58 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008d58, i32* %stack_var_-32, align 4
  br i1 %v2_10008d50, label %dec_label_pc_10008d84, label %dec_label_pc_10008d74

dec_label_pc_10008d74:                            ; preds = %dec_label_pc_10008d38
  store i32 268471676, i32* @lr, align 4
  %v2_10008d78 = call i32 @function_10008dbc(i32 3)
  store i32 %v2_10008d78, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008da4

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008d38
  %v0_10008d88 = call i32 @__asm_mfcr()
  %v1_10008d8c = and i32 %v0_10008d88, 268435456
  %v3_10008d8c = icmp eq i32 %v1_10008d8c, 0
  store i32 %v0_10008d88, i32* %r31.global-to-local, align 4
  br i1 %v3_10008d8c, label %dec_label_pc_10008da4, label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d84
  %v0_10008d98 = call i32 @function_1000953c()
  %v0_10008d9c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d9c = inttoptr i32 %v0_10008d98 to i32*
  store i32 %v0_10008d9c, i32* %v2_10008d9c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008da4

dec_label_pc_10008da4:                            ; preds = %dec_label_pc_10008d84, %dec_label_pc_10008d74, %dec_label_pc_10008d98
  %v0_10008da8 = phi i32 [ %v0_10008d88, %dec_label_pc_10008d84 ], [ %v2_10008d78, %dec_label_pc_10008d74 ], [ -1, %dec_label_pc_10008d98 ]
  ret i32 %v0_10008da8

; uselistorder directives
  uselistorder label %dec_label_pc_10008da4, { 2, 0, 1 }
}

define i32 @function_10008dbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008dbc:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10008dd4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008dd4, i32* %stack_var_-32, align 4
  %v0_10008df0 = call i32 @__asm_mfcr()
  %v1_10008df4 = and i32 %v0_10008df0, 268435456
  %v3_10008df4 = icmp eq i32 %v1_10008df4, 0
  store i32 %v0_10008df0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008df4, label %dec_label_pc_10008e0c, label %dec_label_pc_10008e00

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008dbc
  %v0_10008e00 = call i32 @function_1000953c()
  %v0_10008e04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e04 = inttoptr i32 %v0_10008e00 to i32*
  store i32 %v0_10008e04, i32* %v2_10008e04, align 4
  br label %dec_label_pc_10008e0c

dec_label_pc_10008e0c:                            ; preds = %dec_label_pc_10008dbc, %dec_label_pc_10008e00
  %v0_10008e1c = phi i32 [ %v0_10008df0, %dec_label_pc_10008dbc ], [ -1, %dec_label_pc_10008e00 ]
  ret i32 %v0_10008e1c

; uselistorder directives
  uselistorder label %dec_label_pc_10008e0c, { 1, 0 }
}

define i32 @function_10008e20() local_unnamed_addr {
dec_label_pc_10008e20:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008e38 = call i32 @__asm_mfcr()
  %v1_10008e3c = and i32 %v0_10008e38, 268435456
  %v3_10008e3c = icmp eq i32 %v1_10008e3c, 0
  store i32 %v0_10008e38, i32* %r31.global-to-local, align 4
  br i1 %v3_10008e3c, label %dec_label_pc_10008e54, label %dec_label_pc_10008e48

dec_label_pc_10008e48:                            ; preds = %dec_label_pc_10008e20
  %v0_10008e48 = call i32 @function_1000953c()
  %v0_10008e4c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e4c = inttoptr i32 %v0_10008e48 to i32*
  store i32 %v0_10008e4c, i32* %v2_10008e4c, align 4
  br label %dec_label_pc_10008e54

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e20, %dec_label_pc_10008e48
  %v0_10008e64 = phi i32 [ %v0_10008e38, %dec_label_pc_10008e20 ], [ -1, %dec_label_pc_10008e48 ]
  ret i32 %v0_10008e64

; uselistorder directives
  uselistorder label %dec_label_pc_10008e54, { 1, 0 }
}

define i32 @function_10008e68() local_unnamed_addr {
dec_label_pc_10008e68:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008e80 = call i32 @__asm_mfcr()
  %v1_10008e84 = and i32 %v0_10008e80, 268435456
  %v3_10008e84 = icmp eq i32 %v1_10008e84, 0
  store i32 %v0_10008e80, i32* %r31.global-to-local, align 4
  br i1 %v3_10008e84, label %dec_label_pc_10008e9c, label %dec_label_pc_10008e90

dec_label_pc_10008e90:                            ; preds = %dec_label_pc_10008e68
  %v0_10008e90 = call i32 @function_1000953c()
  %v0_10008e94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e94 = inttoptr i32 %v0_10008e90 to i32*
  store i32 %v0_10008e94, i32* %v2_10008e94, align 4
  br label %dec_label_pc_10008e9c

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e68, %dec_label_pc_10008e90
  %v0_10008eac = phi i32 [ %v0_10008e80, %dec_label_pc_10008e68 ], [ -1, %dec_label_pc_10008e90 ]
  ret i32 %v0_10008eac

; uselistorder directives
  uselistorder label %dec_label_pc_10008e9c, { 1, 0 }
}

define i32 @function_10008eb0() local_unnamed_addr {
dec_label_pc_10008eb0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ec8 = call i32 @__asm_mfcr()
  %v1_10008ecc = and i32 %v0_10008ec8, 268435456
  %v3_10008ecc = icmp eq i32 %v1_10008ecc, 0
  store i32 %v0_10008ec8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ecc, label %dec_label_pc_10008ee4, label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008eb0
  %v0_10008ed8 = call i32 @function_1000953c()
  %v0_10008edc = load i32, i32* %r31.global-to-local, align 4
  %v2_10008edc = inttoptr i32 %v0_10008ed8 to i32*
  store i32 %v0_10008edc, i32* %v2_10008edc, align 4
  br label %dec_label_pc_10008ee4

dec_label_pc_10008ee4:                            ; preds = %dec_label_pc_10008eb0, %dec_label_pc_10008ed8
  %v0_10008ef4 = phi i32 [ %v0_10008ec8, %dec_label_pc_10008eb0 ], [ -1, %dec_label_pc_10008ed8 ]
  ret i32 %v0_10008ef4

; uselistorder directives
  uselistorder label %dec_label_pc_10008ee4, { 1, 0 }
}

define i32 @function_10008ef8() local_unnamed_addr {
dec_label_pc_10008ef8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008f10 = call i32 @__asm_mfcr()
  %v1_10008f14 = and i32 %v0_10008f10, 268435456
  %v3_10008f14 = icmp eq i32 %v1_10008f14, 0
  store i32 %v0_10008f10, i32* %r31.global-to-local, align 4
  br i1 %v3_10008f14, label %dec_label_pc_10008f2c, label %dec_label_pc_10008f20

dec_label_pc_10008f20:                            ; preds = %dec_label_pc_10008ef8
  %v0_10008f20 = call i32 @function_1000953c()
  %v0_10008f24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f24 = inttoptr i32 %v0_10008f20 to i32*
  store i32 %v0_10008f24, i32* %v2_10008f24, align 4
  br label %dec_label_pc_10008f2c

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008ef8, %dec_label_pc_10008f20
  %v0_10008f3c = phi i32 [ %v0_10008f10, %dec_label_pc_10008ef8 ], [ -1, %dec_label_pc_10008f20 ]
  ret i32 %v0_10008f3c

; uselistorder directives
  uselistorder label %dec_label_pc_10008f2c, { 1, 0 }
}

define i32 @function_10008f40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008f40:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008f58 = call i32 @__asm_mfcr()
  %v1_10008f5c = and i32 %v0_10008f58, 268435456
  %v3_10008f5c = icmp eq i32 %v1_10008f5c, 0
  store i32 %v0_10008f58, i32* %r31.global-to-local, align 4
  br i1 %v3_10008f5c, label %dec_label_pc_10008f74, label %dec_label_pc_10008f68

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f40
  %v0_10008f68 = call i32 @function_1000953c()
  %v0_10008f6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f6c = inttoptr i32 %v0_10008f68 to i32*
  store i32 %v0_10008f6c, i32* %v2_10008f6c, align 4
  br label %dec_label_pc_10008f74

dec_label_pc_10008f74:                            ; preds = %dec_label_pc_10008f40, %dec_label_pc_10008f68
  %v0_10008f84 = phi i32 [ %v0_10008f58, %dec_label_pc_10008f40 ], [ -1, %dec_label_pc_10008f68 ]
  ret i32 %v0_10008f84

; uselistorder directives
  uselistorder label %dec_label_pc_10008f74, { 1, 0 }
}

define i32 @function_10008f88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008f88:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10008f9c = and i32 %arg2, 64
  %v3_10008f9c = icmp eq i32 %v1_10008f9c, 0
  br i1 %v3_10008f9c, label %dec_label_pc_10008fc8, label %dec_label_pc_10008fac

dec_label_pc_10008fac:                            ; preds = %dec_label_pc_10008f88
  %v2_10008fb4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008fb4, i32* %stack_var_-32, align 4
  %v0_10008fc4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008fc8

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008f88, %dec_label_pc_10008fac
  %v0_10008fc8 = phi i32 [ 0, %dec_label_pc_10008f88 ], [ %v0_10008fc4, %dec_label_pc_10008fac ]
  store i32 %v0_10008fc8, i32* @r5, align 4
  %v0_10008fd0 = call i32 @__asm_mfcr()
  %v1_10008fd4 = and i32 %v0_10008fd0, 268435456
  %v3_10008fd4 = icmp eq i32 %v1_10008fd4, 0
  store i32 %v0_10008fd0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008fd4, label %dec_label_pc_10008fec, label %dec_label_pc_10008fe0

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008fc8
  %v0_10008fe0 = call i32 @function_1000953c()
  %v0_10008fe4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008fe4 = inttoptr i32 %v0_10008fe0 to i32*
  store i32 %v0_10008fe4, i32* %v2_10008fe4, align 4
  br label %dec_label_pc_10008fec

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fc8, %dec_label_pc_10008fe0
  %v0_10008ffc = phi i32 [ %v0_10008fd0, %dec_label_pc_10008fc8 ], [ -1, %dec_label_pc_10008fe0 ]
  ret i32 %v0_10008ffc

; uselistorder directives
  uselistorder label %dec_label_pc_10008fec, { 1, 0 }
  uselistorder label %dec_label_pc_10008fc8, { 1, 0 }
}

define i32 @function_10009000(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009000:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000900c = call i32 @function_10008f88(i32 577, i32 577)
  ret i32 %v2_1000900c
}

define i32 @function_10009010(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009010:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009028 = call i32 @__asm_mfcr()
  %v1_1000902c = and i32 %v0_10009028, 268435456
  %v3_1000902c = icmp eq i32 %v1_1000902c, 0
  store i32 %v0_10009028, i32* %r31.global-to-local, align 4
  br i1 %v3_1000902c, label %dec_label_pc_10009044, label %dec_label_pc_10009038

dec_label_pc_10009038:                            ; preds = %dec_label_pc_10009010
  %v0_10009038 = call i32 @function_1000953c()
  %v0_1000903c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000903c = inttoptr i32 %v0_10009038 to i32*
  store i32 %v0_1000903c, i32* %v2_1000903c, align 4
  br label %dec_label_pc_10009044

dec_label_pc_10009044:                            ; preds = %dec_label_pc_10009010, %dec_label_pc_10009038
  %v0_10009054 = phi i32 [ %v0_10009028, %dec_label_pc_10009010 ], [ -1, %dec_label_pc_10009038 ]
  ret i32 %v0_10009054

; uselistorder directives
  uselistorder label %dec_label_pc_10009044, { 1, 0 }
}

define i32 @function_10009058(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009058:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009070 = call i32 @__asm_mfcr()
  %v1_10009074 = and i32 %v0_10009070, 268435456
  %v3_10009074 = icmp eq i32 %v1_10009074, 0
  store i32 %v0_10009070, i32* %r31.global-to-local, align 4
  br i1 %v3_10009074, label %dec_label_pc_1000908c, label %dec_label_pc_10009080

dec_label_pc_10009080:                            ; preds = %dec_label_pc_10009058
  %v0_10009080 = call i32 @function_1000953c()
  %v0_10009084 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009084 = inttoptr i32 %v0_10009080 to i32*
  store i32 %v0_10009084, i32* %v2_10009084, align 4
  br label %dec_label_pc_1000908c

dec_label_pc_1000908c:                            ; preds = %dec_label_pc_10009058, %dec_label_pc_10009080
  %v0_1000909c = phi i32 [ %v0_10009070, %dec_label_pc_10009058 ], [ -1, %dec_label_pc_10009080 ]
  ret i32 %v0_1000909c

; uselistorder directives
  uselistorder label %dec_label_pc_1000908c, { 1, 0 }
}

define i32 @function_100090a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100090a0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100090b8 = call i32 @__asm_mfcr()
  %v1_100090bc = and i32 %v0_100090b8, 268435456
  %v3_100090bc = icmp eq i32 %v1_100090bc, 0
  store i32 %v0_100090b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100090bc, label %dec_label_pc_100090d4, label %dec_label_pc_100090c8

dec_label_pc_100090c8:                            ; preds = %dec_label_pc_100090a0
  %v0_100090c8 = call i32 @function_1000953c()
  %v0_100090cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100090cc = inttoptr i32 %v0_100090c8 to i32*
  store i32 %v0_100090cc, i32* %v2_100090cc, align 4
  br label %dec_label_pc_100090d4

dec_label_pc_100090d4:                            ; preds = %dec_label_pc_100090a0, %dec_label_pc_100090c8
  %v0_100090e4 = phi i32 [ %v0_100090b8, %dec_label_pc_100090a0 ], [ -1, %dec_label_pc_100090c8 ]
  ret i32 %v0_100090e4

; uselistorder directives
  uselistorder label %dec_label_pc_100090d4, { 1, 0 }
}

define i32 @function_100090e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100090e8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009100 = call i32 @__asm_mfcr()
  %v1_10009104 = and i32 %v0_10009100, 268435456
  %v3_10009104 = icmp eq i32 %v1_10009104, 0
  store i32 %v0_10009100, i32* %r31.global-to-local, align 4
  br i1 %v3_10009104, label %dec_label_pc_1000911c, label %dec_label_pc_10009110

dec_label_pc_10009110:                            ; preds = %dec_label_pc_100090e8
  %v0_10009110 = call i32 @function_1000953c()
  %v0_10009114 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009114 = inttoptr i32 %v0_10009110 to i32*
  store i32 %v0_10009114, i32* %v2_10009114, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_100090e8, %dec_label_pc_10009110
  %v0_1000912c = phi i32 [ %v0_10009100, %dec_label_pc_100090e8 ], [ -1, %dec_label_pc_10009110 ]
  ret i32 %v0_1000912c

; uselistorder directives
  uselistorder label %dec_label_pc_1000911c, { 1, 0 }
}

define i32 @function_10009130(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009130:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009148 = call i32 @__asm_mfcr()
  %v1_1000914c = and i32 %v0_10009148, 268435456
  %v3_1000914c = icmp eq i32 %v1_1000914c, 0
  store i32 %v0_10009148, i32* %r31.global-to-local, align 4
  br i1 %v3_1000914c, label %dec_label_pc_10009164, label %dec_label_pc_10009158

dec_label_pc_10009158:                            ; preds = %dec_label_pc_10009130
  %v0_10009158 = call i32 @function_1000953c()
  %v0_1000915c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000915c = inttoptr i32 %v0_10009158 to i32*
  store i32 %v0_1000915c, i32* %v2_1000915c, align 4
  br label %dec_label_pc_10009164

dec_label_pc_10009164:                            ; preds = %dec_label_pc_10009130, %dec_label_pc_10009158
  %v0_10009174 = phi i32 [ %v0_10009148, %dec_label_pc_10009130 ], [ -1, %dec_label_pc_10009158 ]
  ret i32 %v0_10009174

; uselistorder directives
  uselistorder label %dec_label_pc_10009164, { 1, 0 }
}

define i32 @function_10009178(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009178:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009178 = icmp eq i32 %arg2, 0
  br i1 %v3_10009178, label %dec_label_pc_100091b8, label %dec_label_pc_100091a0

dec_label_pc_100091a0:                            ; preds = %dec_label_pc_10009178
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100091b8, label %dec_label_pc_100091a8

dec_label_pc_100091a8:                            ; preds = %dec_label_pc_100091a0
  %v0_100091a8 = call i32 @function_1000953c()
  %v2_100091b0 = inttoptr i32 %v0_100091a8 to i32*
  store i32 22, i32* %v2_100091b0, align 4
  %v0_100091dc.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100091d8

dec_label_pc_100091b8:                            ; preds = %dec_label_pc_100091a0, %dec_label_pc_10009178
  %v0_100091bc = call i32 @__asm_mfcr()
  %v1_100091c0 = and i32 %v0_100091bc, 268435456
  %v3_100091c0 = icmp eq i32 %v1_100091c0, 0
  store i32 %v0_100091bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100091c0, label %dec_label_pc_100091d8, label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_100091b8
  %v0_100091cc = call i32 @function_1000953c()
  %v0_100091d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091d0 = inttoptr i32 %v0_100091cc to i32*
  store i32 %v0_100091d0, i32* %v2_100091d0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100091d8

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091b8, %dec_label_pc_100091a8, %dec_label_pc_100091cc
  %v0_100091dc = phi i32 [ %v0_100091bc, %dec_label_pc_100091b8 ], [ %v0_100091dc.pre, %dec_label_pc_100091a8 ], [ -1, %dec_label_pc_100091cc ]
  ret i32 %v0_100091dc

; uselistorder directives
  uselistorder label %dec_label_pc_100091d8, { 2, 0, 1 }
}

define i32 @function_100091f0() local_unnamed_addr {
dec_label_pc_100091f0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009208 = call i32 @__asm_mfcr()
  %v1_1000920c = and i32 %v0_10009208, 268435456
  %v3_1000920c = icmp eq i32 %v1_1000920c, 0
  store i32 %v0_10009208, i32* %r31.global-to-local, align 4
  br i1 %v3_1000920c, label %dec_label_pc_10009224, label %dec_label_pc_10009218

dec_label_pc_10009218:                            ; preds = %dec_label_pc_100091f0
  %v0_10009218 = call i32 @function_1000953c()
  %v0_1000921c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000921c = inttoptr i32 %v0_10009218 to i32*
  store i32 %v0_1000921c, i32* %v2_1000921c, align 4
  br label %dec_label_pc_10009224

dec_label_pc_10009224:                            ; preds = %dec_label_pc_100091f0, %dec_label_pc_10009218
  %v0_10009234 = phi i32 [ %v0_10009208, %dec_label_pc_100091f0 ], [ -1, %dec_label_pc_10009218 ]
  ret i32 %v0_10009234

; uselistorder directives
  uselistorder label %dec_label_pc_10009224, { 1, 0 }
}

define i32 @function_10009238(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009238:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009250 = call i32 @__asm_mfcr()
  %v1_10009254 = and i32 %v0_10009250, 268435456
  %v3_10009254 = icmp eq i32 %v1_10009254, 0
  store i32 %v0_10009250, i32* %r31.global-to-local, align 4
  br i1 %v3_10009254, label %dec_label_pc_1000926c, label %dec_label_pc_10009260

dec_label_pc_10009260:                            ; preds = %dec_label_pc_10009238
  %v0_10009260 = call i32 @function_1000953c()
  %v0_10009264 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009264 = inttoptr i32 %v0_10009260 to i32*
  store i32 %v0_10009264, i32* %v2_10009264, align 4
  br label %dec_label_pc_1000926c

dec_label_pc_1000926c:                            ; preds = %dec_label_pc_10009238, %dec_label_pc_10009260
  %v0_1000927c = phi i32 [ %v0_10009250, %dec_label_pc_10009238 ], [ -1, %dec_label_pc_10009260 ]
  ret i32 %v0_1000927c

; uselistorder directives
  uselistorder label %dec_label_pc_1000926c, { 1, 0 }
}

define i32 @function_10009280(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009280:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009298 = call i32 @__asm_mfcr()
  %v1_1000929c = and i32 %v0_10009298, 268435456
  %v3_1000929c = icmp eq i32 %v1_1000929c, 0
  store i32 %v0_10009298, i32* %r31.global-to-local, align 4
  br i1 %v3_1000929c, label %dec_label_pc_100092b4, label %dec_label_pc_100092a8

dec_label_pc_100092a8:                            ; preds = %dec_label_pc_10009280
  %v0_100092a8 = call i32 @function_1000953c()
  %v0_100092ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100092ac = inttoptr i32 %v0_100092a8 to i32*
  store i32 %v0_100092ac, i32* %v2_100092ac, align 4
  br label %dec_label_pc_100092b4

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_10009280, %dec_label_pc_100092a8
  %v0_100092c4 = phi i32 [ %v0_10009298, %dec_label_pc_10009280 ], [ -1, %dec_label_pc_100092a8 ]
  ret i32 %v0_100092c4

; uselistorder directives
  uselistorder label %dec_label_pc_100092b4, { 1, 0 }
}

define i32 @function_100092c8(i32* %arg1) local_unnamed_addr {
dec_label_pc_100092c8:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100092e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100092e4, i32* @r30, align 4
  %v2_100092ec = load i32, i32* %arg1, align 4
  store i32 %v2_100092e4, i32* @r3, align 4
  %v3_100092f8 = icmp eq i32 %v2_100092ec, -1
  br i1 %v3_100092f8, label %dec_label_pc_10009300, label %dec_label_pc_10009314

dec_label_pc_10009300:                            ; preds = %dec_label_pc_100092c8
  %v0_10009300 = call i32 @function_1000953c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000930c = inttoptr i32 %v0_10009300 to i32*
  store i32 9, i32* %v2_1000930c, align 4
  %v0_10009358.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009354

dec_label_pc_10009314:                            ; preds = %dec_label_pc_100092c8
  %v3_10009314 = call i32 @function_1000a8a4(i32 %v2_100092e4, i32 ptrtoint ([3 x i8]* @global_var_1000a89c.297 to i32))
  %v0_1000931c = call i32 @function_1000a89c()
  %v0_10009324 = load i32, i32* @r31, align 4
  %v1_10009324 = inttoptr i32 %v0_10009324 to i32*
  %v2_10009324 = load i32, i32* %v1_10009324, align 4
  store i32 %v2_10009324, i32* @r29, align 4
  store i32 -1, i32* %v1_10009324, align 4
  store i32 %v2_100092e4, i32* @r3, align 4
  %v2_10009334 = call i32 @function_1000a8a4(i32 %v2_100092e4, i32 1)
  %v0_10009338 = load i32, i32* @r31, align 4
  %v1_10009338 = add i32 %v0_10009338, 12
  %v2_10009338 = inttoptr i32 %v1_10009338 to i32*
  %v3_10009338 = load i32, i32* %v2_10009338, align 4
  store i32 %v3_10009338, i32* @r3, align 4
  store i32 268473152, i32* @lr, align 4
  %v0_1000933c = call i32 @function_10009f08()
  %v0_10009340 = load i32, i32* @r31, align 4
  store i32 %v0_10009340, i32* @r3, align 4
  store i32 268473160, i32* @lr, align 4
  %v0_10009344 = call i32 @function_10009f08()
  store i32 268473168, i32* @lr, align 4
  %v0_1000934c = call i32 @function_10008e20()
  store i32 %v0_1000934c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_10009300, %dec_label_pc_10009314
  %v0_10009358 = phi i32 [ %v0_10009358.pre, %dec_label_pc_10009300 ], [ %v0_1000934c, %dec_label_pc_10009314 ]
  ret i32 %v0_10009358

; uselistorder directives
  uselistorder i32 %v2_100092e4, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009354, { 1, 0 }
}

define i32 @function_1000936c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000936c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_1000936c = load i32, i32* @lr, align 4
  store i32 %v0_1000936c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268473228, i32* @lr, align 4
  %v2_10009388 = call i32 @function_10008f88(i32 18432, i32 18432)
  store i32 %v2_10009388, i32* @r29, align 4
  %v1_1000938c = icmp slt i32 %v2_10009388, 0
  br i1 %v1_1000938c, label %dec_label_pc_10009464, label %dec_label_pc_10009394

dec_label_pc_10009394:                            ; preds = %dec_label_pc_1000936c
  %v2_10009394 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009394, i32* @r4, align 4
  store i32 268473244, i32* @lr, align 4
  %v1_10009398 = call i32 @function_1000ac78(i32 %v2_10009394)
  %v1_1000939c = icmp slt i32 %v1_10009398, 0
  br i1 %v1_1000939c, label %dec_label_pc_100093c0, label %dec_label_pc_100093a4

dec_label_pc_100093a4:                            ; preds = %dec_label_pc_10009394
  %v0_100093a4 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268473272, i32* @lr, align 4
  %v2_100093b4 = call i32 @function_10008d38(i32 %v0_100093a4)
  %tmp5 = icmp sgt i32 %v2_100093b4, -1
  br i1 %tmp5, label %dec_label_pc_100093e0, label %dec_label_pc_100093c0

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100093a4, %dec_label_pc_10009394
  %v0_100093c0 = call i32 @function_1000953c()
  store i32 0, i32* @r31, align 4
  store i32 %v0_100093c0, i32* @r28, align 4
  %v1_100093d0 = inttoptr i32 %v0_100093c0 to i32*
  %v2_100093d0 = load i32, i32* %v1_100093d0, align 4
  store i32 %v2_100093d0, i32* @r29, align 4
  store i32 268473304, i32* @lr, align 4
  %v0_100093d4 = call i32 @function_10008e20()
  %v0_100093d8 = load i32, i32* @r29, align 4
  %v1_100093d8 = load i32, i32* @r28, align 4
  %v2_100093d8 = inttoptr i32 %v1_100093d8 to i32*
  store i32 %v0_100093d8, i32* %v2_100093d8, align 4
  br label %dec_label_pc_10009464

dec_label_pc_100093e0:                            ; preds = %dec_label_pc_100093a4
  store i32 48, i32* @r3, align 4
  store i32 268473320, i32* @lr, align 4
  %v0_100093e4 = call i32 @function_10009d40()
  store i32 %v0_100093e4, i32* %r31.global-to-local, align 4
  %v3_100093e8 = icmp eq i32 %v0_100093e4, 0
  br i1 %v3_100093e8, label %dec_label_pc_1000943c, label %dec_label_pc_100093f0

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_100093e0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100093f4 = load i32, i32* @r29, align 4
  %v2_100093f4 = inttoptr i32 %v0_100093e4 to i32*
  store i32 %v0_100093f4, i32* %v2_100093f4, align 4
  %v0_100093f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100093f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093f8 = add i32 %v1_100093f8, 4
  %v3_100093f8 = inttoptr i32 %v2_100093f8 to i32*
  store i32 %v0_100093f8, i32* %v3_100093f8, align 4
  %v0_100093fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100093fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100093fc = add i32 %v1_100093fc, 16
  %v3_100093fc = inttoptr i32 %v2_100093fc to i32*
  store i32 %v0_100093fc, i32* %v3_100093fc, align 4
  %v0_10009400 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009400 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009400 = add i32 %v1_10009400, 8
  %v3_10009400 = inttoptr i32 %v2_10009400 to i32*
  store i32 %v0_10009400, i32* %v3_10009400, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10009408 = icmp ugt i32 %tmp, 511
  %v1_1000940c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000940c = add i32 %v1_1000940c, 20
  %v3_1000940c = inttoptr i32 %v2_1000940c to i32*
  store i32 %tmp, i32* %v3_1000940c, align 4
  br i1 %v2_10009408, label %dec_label_pc_1000941c, label %dec_label_pc_10009414

dec_label_pc_10009414:                            ; preds = %dec_label_pc_100093f0
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009418 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009418 = add i32 %v1_10009418, 20
  %v3_10009418 = inttoptr i32 %v2_10009418 to i32*
  store i32 512, i32* %v3_10009418, align 4
  br label %dec_label_pc_1000941c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_100093f0, %dec_label_pc_10009414
  %v0_1000941c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000941c = add i32 %v0_1000941c, 20
  %v2_1000941c = inttoptr i32 %v1_1000941c to i32*
  %v3_1000941c = load i32, i32* %v2_1000941c, align 4
  store i32 268473384, i32* @lr, align 4
  %v2_10009424 = call i32 @function_10009e98(i32 1, i32 %v3_1000941c)
  %v3_10009428 = icmp eq i32 %v2_10009424, 0
  %v1_1000942c = load i32, i32* @r31, align 4
  %v2_1000942c = add i32 %v1_1000942c, 12
  %v3_1000942c = inttoptr i32 %v2_1000942c to i32*
  store i32 %v2_10009424, i32* %v3_1000942c, align 4
  br i1 %v3_10009428, label %dec_label_pc_10009434, label %dec_label_pc_10009458

dec_label_pc_10009434:                            ; preds = %dec_label_pc_1000941c
  %v0_10009434 = load i32, i32* @r31, align 4
  store i32 %v0_10009434, i32* @r3, align 4
  store i32 268473404, i32* @lr, align 4
  %v0_10009438 = call i32 @function_10009f08()
  br label %dec_label_pc_1000943c

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_100093e0, %dec_label_pc_10009434
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009448.300 to i32), i32* @lr, align 4
  %v0_10009444 = call i32 @function_10008e20()
  %v0_10009448 = call i32 @function_1000953c()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10009450 = inttoptr i32 %v0_10009448 to i32*
  store i32 12, i32* %v2_10009450, align 4
  br label %dec_label_pc_10009464

dec_label_pc_10009458:                            ; preds = %dec_label_pc_1000941c
  %v0_10009460 = call i32 @function_1000a89c()
  br label %dec_label_pc_10009464

dec_label_pc_10009464:                            ; preds = %dec_label_pc_1000936c, %dec_label_pc_1000943c, %dec_label_pc_100093c0, %dec_label_pc_10009458
  store i32 %v0_1000936c, i32* %r0.global-to-local, align 4
  %v0_10009468 = load i32, i32* @r31, align 4
  ret i32 %v0_10009468

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_10009e98, { 41, 43, 42, 27, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 1, 0, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10008e20, { 22, 21, 20, 37, 36, 35, 34, 32, 33, 29, 28, 31, 30, 6, 5, 4, 3, 2, 27, 26, 25, 24, 23, 19, 1, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10009464, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000943c, { 1, 0 }
  uselistorder label %dec_label_pc_1000941c, { 1, 0 }
}

define i32 @function_1000947c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000947c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10009480 = load i32, i32* @lr, align 4
  store i32 %v0_10009480, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009498 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009498, i32* @r3, align 4
  %v3_100094a4 = call i32 @function_1000a8a4(i32 %v2_10009498, i32 ptrtoint ([3 x i8]* @global_var_1000a89c.297 to i32))
  %v0_100094ac = call i32 @function_1000a89c()
  br label %dec_label_pc_100094b0

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_100094ec, %dec_label_pc_1000947c
  %v0_100094b0 = load i32, i32* @r31, align 4
  %v1_100094b0 = add i32 %v0_100094b0, 4
  %v2_100094b0 = inttoptr i32 %v1_100094b0 to i32*
  %v3_100094b0 = load i32, i32* %v2_100094b0, align 4
  store i32 %v3_100094b0, i32* %r0.global-to-local, align 4
  %v1_100094b4 = add i32 %v0_100094b0, 8
  %v2_100094b4 = inttoptr i32 %v1_100094b4 to i32*
  %v3_100094b4 = load i32, i32* %v2_100094b4, align 4
  store i32 %v3_100094b4, i32* %r9.global-to-local, align 4
  %v3_100094b8 = icmp ugt i32 %v3_100094b4, %v3_100094b0
  br i1 %v3_100094b8, label %dec_label_pc_100094ec, label %dec_label_pc_100094c0

dec_label_pc_100094c0:                            ; preds = %dec_label_pc_100094b0
  %v1_100094c0 = inttoptr i32 %v0_100094b0 to i32*
  %v2_100094c0 = load i32, i32* %v1_100094c0, align 4
  store i32 %v2_100094c0, i32* @r3, align 4
  %v1_100094c4 = add i32 %v0_100094b0, 12
  %v2_100094c4 = inttoptr i32 %v1_100094c4 to i32*
  %v3_100094c4 = load i32, i32* %v2_100094c4, align 4
  %v1_100094c8 = add i32 %v0_100094b0, 20
  %v2_100094c8 = inttoptr i32 %v1_100094c8 to i32*
  %v3_100094c8 = load i32, i32* %v2_100094c8, align 4
  store i32 %v3_100094c8, i32* @r5, align 4
  store i32 268473552, i32* @lr, align 4
  %v4_100094cc = inttoptr i32 %v2_100094c0 to i32*
  %v5_100094cc = call i32 @function_1000acec(i32* %v4_100094cc, i32 %v3_100094c4, i32 %v3_100094c8, i32 %v3_100094b4)
  %v2_100094d0 = icmp sgt i32 %v5_100094cc, 0
  br i1 %v2_100094d0, label %dec_label_pc_100094e0, label %dec_label_pc_100094d8

dec_label_pc_100094d8:                            ; preds = %dec_label_pc_100094c0
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009518

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094c0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100094e4 = load i32, i32* @r31, align 4
  %v2_100094e4 = add i32 %v1_100094e4, 8
  %v3_100094e4 = inttoptr i32 %v2_100094e4 to i32*
  store i32 %v5_100094cc, i32* %v3_100094e4, align 4
  %v0_100094e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100094e8 = load i32, i32* @r31, align 4
  %v2_100094e8 = add i32 %v1_100094e8, 4
  %v3_100094e8 = inttoptr i32 %v2_100094e8 to i32*
  store i32 %v0_100094e8, i32* %v3_100094e8, align 4
  %v0_100094ec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100094ec

dec_label_pc_100094ec:                            ; preds = %dec_label_pc_100094b0, %dec_label_pc_100094e0
  %v1_10009500 = phi i32 [ %v0_100094b0, %dec_label_pc_100094b0 ], [ %v0_100094ec.pre, %dec_label_pc_100094e0 ]
  %v1_100094ec = add i32 %v1_10009500, 4
  %v2_100094ec = inttoptr i32 %v1_100094ec to i32*
  %v3_100094ec = load i32, i32* %v2_100094ec, align 4
  store i32 %v3_100094ec, i32* %r9.global-to-local, align 4
  %v1_100094f0 = add i32 %v1_10009500, 12
  %v2_100094f0 = inttoptr i32 %v1_100094f0 to i32*
  %v3_100094f0 = load i32, i32* %v2_100094f0, align 4
  store i32 %v3_100094f0, i32* %r11.global-to-local, align 4
  %v2_100094f4 = add i32 %v3_100094f0, %v3_100094ec
  store i32 %v2_100094f4, i32* @r29, align 4
  %v1_100094f8 = add i32 %v2_100094f4, 8
  %v2_100094f8 = inttoptr i32 %v1_100094f8 to i16*
  %v3_100094f8 = load i16, i16* %v2_100094f8, align 2
  %v4_100094f8 = zext i16 %v3_100094f8 to i32
  %v2_100094fc = add i32 %v4_100094f8, %v3_100094ec
  store i32 %v2_100094fc, i32* %r0.global-to-local, align 4
  store i32 %v2_100094fc, i32* %v2_100094ec, align 4
  %v0_10009504 = load i32, i32* @r29, align 4
  %v1_10009504 = add i32 %v0_10009504, 4
  %v2_10009504 = inttoptr i32 %v1_10009504 to i32*
  %v3_10009504 = load i32, i32* %v2_10009504, align 4
  store i32 %v3_10009504, i32* %r0.global-to-local, align 4
  %v1_10009508 = load i32, i32* @r31, align 4
  %v2_10009508 = add i32 %v1_10009508, 16
  %v3_10009508 = inttoptr i32 %v2_10009508 to i32*
  store i32 %v3_10009504, i32* %v3_10009508, align 4
  %v0_1000950c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000950c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000950c = add i32 %v1_1000950c, %v0_1000950c
  %v3_1000950c = inttoptr i32 %v2_1000950c to i32*
  %v4_1000950c = load i32, i32* %v3_1000950c, align 4
  store i32 %v4_1000950c, i32* %r0.global-to-local, align 4
  %v3_10009510 = icmp eq i32 %v4_1000950c, 0
  br i1 %v3_10009510, label %dec_label_pc_100094b0, label %dec_label_pc_10009518

dec_label_pc_10009518:                            ; preds = %dec_label_pc_100094ec, %dec_label_pc_100094d8
  store i32 %v2_10009498, i32* @r3, align 4
  %v2_10009520 = call i32 @function_1000a8a4(i32 %v2_10009498, i32 1)
  store i32 %v0_10009480, i32* %r0.global-to-local, align 4
  %v0_10009528 = load i32, i32* @r29, align 4
  ret i32 %v0_10009528

; uselistorder directives
  uselistorder i32 %v1_10009500, { 1, 0 }
  uselistorder i32 %v0_100094b0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10009498, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100094ec, { 1, 0 }
}

define i32 @function_1000953c() local_unnamed_addr {
dec_label_pc_1000953c:
  ret i32 ptrtoint (i32* @global_var_1001c1dc.302 to i32)
}

define i32 @function_10009548(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009548:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10009550 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473692, i32* @lr, align 4
  %v1_10009558 = call i32 @function_1000b12c(i32 %v2_10009550)
  %v3_10009560 = load i32, i32* %stack_var_-24, align 4
  %v2_10009564 = add i32 %v3_10009560, %tmp
  %v1_1000956c = mul i32 %v2_10009564, 10000
  %v1_10009578 = and i32 %v1_1000956c, 2147483632
  ret i32 %v1_10009578
}

define i32 @function_10009580(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009580:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10009580 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10009580, label %dec_label_pc_10009594, label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_10009580
  %v0_10009590 = call i32 @function_1000b2f0()
  store i32 %v0_10009590, i32* @r3, align 4
  br label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_10009580, %dec_label_pc_10009590
  %v1_10009594 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009594, i32* %r9.global-to-local, align 4
  %v4_10009594 = icmp eq i32 %v1_10009594, 0
  %v2_10009598 = add i32 %arg3, %arg2
  store i32 %v2_10009598, i32* %r4.global-to-local, align 4
  %v0_1000959c = load i32, i32* @r3, align 4
  %v2_1000959c = add i32 %v0_1000959c, %arg3
  store i32 %v2_1000959c, i32* %r10.global-to-local, align 4
  br i1 %v4_10009594, label %dec_label_pc_100095c4, label %dec_label_pc_100095a4

dec_label_pc_100095a4:                            ; preds = %dec_label_pc_10009594
  %v1_100095a4 = urem i32 %v2_1000959c, 4
  %v3_100095a4 = icmp eq i32 %v1_100095a4, 0
  br i1 %v3_100095a4, label %dec_label_pc_100095ac, label %dec_label_pc_100095f8

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_10009610.dec_label_pc_100095ac_crit_edge, %dec_label_pc_100095a4
  %v1_100095b8.pre = phi i32 [ %v1_100095b8.pre.pre, %dec_label_pc_10009610.dec_label_pc_100095ac_crit_edge ], [ %v2_1000959c, %dec_label_pc_100095a4 ]
  %v0_100095ac = phi i32 [ %v1_10009610, %dec_label_pc_10009610.dec_label_pc_100095ac_crit_edge ], [ %v1_10009594, %dec_label_pc_100095a4 ]
  store i32 %v0_100095ac, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100095b0

dec_label_pc_100095b0:                            ; preds = %dec_label_pc_100095b0, %dec_label_pc_100095ac
  %v1_100095b8 = phi i32 [ %v2_100095bc, %dec_label_pc_100095b0 ], [ %v1_100095b8.pre, %dec_label_pc_100095ac ]
  %v0_100095b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100095b0 = add i32 %v0_100095b0, -4
  %v2_100095b0 = inttoptr i32 %v1_100095b0 to i32*
  %v3_100095b0 = load i32, i32* %v2_100095b0, align 4
  %v1_100095b4 = add i32 %v0_100095b0, -8
  %v2_100095b4 = inttoptr i32 %v1_100095b4 to i32*
  %v3_100095b4 = load i32, i32* %v2_100095b4, align 4
  store i32 %v3_100095b4, i32* %r9.global-to-local, align 4
  store i32 %v1_100095b4, i32* %r4.global-to-local, align 4
  %v2_100095b8 = add i32 %v1_100095b8, -4
  %v3_100095b8 = inttoptr i32 %v2_100095b8 to i32*
  store i32 %v3_100095b0, i32* %v3_100095b8, align 4
  %v0_100095bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100095bc = load i32, i32* %r10.global-to-local, align 4
  %v2_100095bc = add i32 %v1_100095bc, -8
  %v3_100095bc = inttoptr i32 %v2_100095bc to i32*
  store i32 %v0_100095bc, i32* %v3_100095bc, align 4
  store i32 %v2_100095bc, i32* %r10.global-to-local, align 4
  %v0_100095c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100095c0 = add i32 %v0_100095c0, -1
  store i32 %v1_100095c0, i32* %ctr.global-to-local, align 4
  %v2_100095c0 = icmp eq i32 %v1_100095c0, 0
  br i1 %v2_100095c0, label %dec_label_pc_100095c4, label %dec_label_pc_100095b0

dec_label_pc_100095c4:                            ; preds = %dec_label_pc_100095b0, %dec_label_pc_10009610, %dec_label_pc_10009594
  %v0_100095c4 = load i32, i32* @r11, align 4
  %v1_100095c4 = urem i32 %v0_100095c4, 8
  store i32 %v1_100095c4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100095c4, 4
  br i1 %tmp, label %dec_label_pc_100095dc, label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_100095c4
  %v0_100095d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100095d0 = add i32 %v0_100095d0, -4
  %v2_100095d0 = inttoptr i32 %v1_100095d0 to i32*
  %v3_100095d0 = load i32, i32* %v2_100095d0, align 4
  store i32 %v1_100095d0, i32* %r4.global-to-local, align 4
  %v1_100095d4 = add nsw i32 %v1_100095c4, -4
  store i32 %v1_100095d4, i32* %r5.global-to-local, align 4
  %v1_100095d8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100095d8 = add i32 %v1_100095d8, -4
  %v3_100095d8 = inttoptr i32 %v2_100095d8 to i32*
  store i32 %v3_100095d0, i32* %v3_100095d8, align 4
  store i32 %v2_100095d8, i32* %r10.global-to-local, align 4
  %v0_100095dc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100095dc

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095c4, %dec_label_pc_100095d0
  %v0_100095e4 = phi i32 [ %v1_100095c4, %dec_label_pc_100095c4 ], [ %v0_100095dc.pre, %dec_label_pc_100095d0 ]
  %v3_100095dc = icmp eq i32 %v0_100095e4, 0
  br i1 %v3_100095dc, label %dec_label_pc_1000961c, label %dec_label_pc_100095e4

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095dc
  store i32 %v0_100095e4, i32* %ctr.global-to-local, align 4
  %v2_100095ec.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100095e8

dec_label_pc_100095e8:                            ; preds = %dec_label_pc_100095e8, %dec_label_pc_100095e4
  %v2_100095ec = phi i32 [ %v3_100095ec, %dec_label_pc_100095e8 ], [ %v2_100095ec.pre, %dec_label_pc_100095e4 ]
  %v0_100095e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100095e8 = add i32 %v0_100095e8, -1
  %v2_100095e8 = inttoptr i32 %v1_100095e8 to i8*
  %v3_100095e8 = load i8, i8* %v2_100095e8, align 1
  store i32 %v1_100095e8, i32* %r4.global-to-local, align 4
  %v3_100095ec = add i32 %v2_100095ec, -1
  %v4_100095ec = inttoptr i32 %v3_100095ec to i8*
  store i8 %v3_100095e8, i8* %v4_100095ec, align 1
  store i32 %v3_100095ec, i32* %r10.global-to-local, align 4
  %v0_100095f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100095f0 = add i32 %v0_100095f0, -1
  store i32 %v1_100095f0, i32* %ctr.global-to-local, align 4
  %v2_100095f0 = icmp eq i32 %v1_100095f0, 0
  br i1 %v2_100095f0, label %dec_label_pc_1000961c, label %dec_label_pc_100095e8

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_100095a4
  %v1_100095f8 = sub nsw i32 4, %v1_100095a4
  store i32 %v1_100095f8, i32* %ctr.global-to-local, align 4
  %v2_10009600 = sub i32 %arg3, %v1_100095f8
  store i32 %v2_10009600, i32* @r11, align 4
  %v1_100096048 = add i32 %v2_10009598, -1
  %v2_100096049 = inttoptr i32 %v1_100096048 to i8*
  %v3_1000960410 = load i8, i8* %v2_100096049, align 1
  store i32 %v1_100096048, i32* %r4.global-to-local, align 4
  %v3_1000960812 = add i32 %v2_1000959c, -1
  %v4_1000960813 = inttoptr i32 %v3_1000960812 to i8*
  store i8 %v3_1000960410, i8* %v4_1000960813, align 1
  store i32 %v3_1000960812, i32* %r10.global-to-local, align 4
  %v0_1000960c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000960c15 = add i32 %v0_1000960c14, -1
  store i32 %v1_1000960c15, i32* %ctr.global-to-local, align 4
  %v2_1000960c16 = icmp eq i32 %v1_1000960c15, 0
  br i1 %v2_1000960c16, label %dec_label_pc_10009610, label %dec_label_pc_10009604.dec_label_pc_10009604_crit_edge

dec_label_pc_10009604.dec_label_pc_10009604_crit_edge: ; preds = %dec_label_pc_100095f8, %dec_label_pc_10009604.dec_label_pc_10009604_crit_edge
  %v3_1000960817 = phi i32 [ %v3_10009608, %dec_label_pc_10009604.dec_label_pc_10009604_crit_edge ], [ %v3_1000960812, %dec_label_pc_100095f8 ]
  %v0_10009604.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009604 = add i32 %v0_10009604.pre, -1
  %v2_10009604 = inttoptr i32 %v1_10009604 to i8*
  %v3_10009604 = load i8, i8* %v2_10009604, align 1
  store i32 %v1_10009604, i32* %r4.global-to-local, align 4
  %v3_10009608 = add i32 %v3_1000960817, -1
  %v4_10009608 = inttoptr i32 %v3_10009608 to i8*
  store i8 %v3_10009604, i8* %v4_10009608, align 1
  store i32 %v3_10009608, i32* %r10.global-to-local, align 4
  %v0_1000960c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000960c = add i32 %v0_1000960c, -1
  store i32 %v1_1000960c, i32* %ctr.global-to-local, align 4
  %v2_1000960c = icmp eq i32 %v1_1000960c, 0
  br i1 %v2_1000960c, label %dec_label_pc_10009610, label %dec_label_pc_10009604.dec_label_pc_10009604_crit_edge

dec_label_pc_10009610:                            ; preds = %dec_label_pc_10009604.dec_label_pc_10009604_crit_edge, %dec_label_pc_100095f8
  %v0_10009610 = load i32, i32* @r11, align 4
  %v1_10009610 = call i32 @__asm_rlwinm.(i32 %v0_10009610, i32 29, i32 3, i32 31)
  store i32 %v1_10009610, i32* %r9.global-to-local, align 4
  %v4_10009610 = icmp eq i32 %v1_10009610, 0
  br i1 %v4_10009610, label %dec_label_pc_100095c4, label %dec_label_pc_10009610.dec_label_pc_100095ac_crit_edge

dec_label_pc_10009610.dec_label_pc_100095ac_crit_edge: ; preds = %dec_label_pc_10009610
  %v1_100095b8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100095ac

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_100095e8, %dec_label_pc_100095dc
  %v0_1000961c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000961c

; uselistorder directives
  uselistorder i32 %v1_10009610, { 1, 2, 0 }
  uselistorder i32 %v1_1000960c, { 1, 0 }
  uselistorder i32 %v3_10009608, { 1, 2, 0 }
  uselistorder i32 %v1_100095f0, { 1, 0 }
  uselistorder i32 %v3_100095ec, { 1, 2, 0 }
  uselistorder i32 %v1_100095c4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100095c0, { 1, 0 }
  uselistorder i32 %v2_100095bc, { 1, 2, 0 }
  uselistorder i32 %v1_100095a4, { 1, 0 }
  uselistorder i32 %v2_1000959c, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 5, 2, 6, 3, 7, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_10009604.dec_label_pc_10009604_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100095dc, { 1, 0 }
  uselistorder label %dec_label_pc_100095c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009594, { 1, 0 }
}

define i32 @function_10009624(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009624:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009624 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009624, i32* %r9.global-to-local, align 4
  %v4_10009624 = icmp eq i32 %v1_10009624, 0
  %v1_1000962c = add i32 %arg1, -4
  store i32 %v1_1000962c, i32* %r11.global-to-local, align 4
  %v1_10009630 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009634 = call i32 @__asm_rlwimi(i32 %v1_10009630, i32 16, i32 0, i32 15)
  %v2_10009634 = trunc i32 %v1_10009634 to i8
  br i1 %v4_10009624, label %dec_label_pc_1000965c, label %dec_label_pc_1000963c

dec_label_pc_1000963c:                            ; preds = %dec_label_pc_10009624
  %v0_1000963c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000963c = urem i32 %v0_1000963c, 4
  %v3_1000963c = icmp eq i32 %v1_1000963c, 0
  br i1 %v3_1000963c, label %dec_label_pc_1000963c.dec_label_pc_10009644_crit_edge, label %dec_label_pc_1000968c

dec_label_pc_1000963c.dec_label_pc_10009644_crit_edge: ; preds = %dec_label_pc_1000963c
  %v0_10009644.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009644

dec_label_pc_10009644:                            ; preds = %dec_label_pc_100096a4.dec_label_pc_10009644_crit_edge, %dec_label_pc_1000963c.dec_label_pc_10009644_crit_edge
  %v0_10009648.pre = phi i32 [ %v0_1000963c, %dec_label_pc_1000963c.dec_label_pc_10009644_crit_edge ], [ %v0_10009648.pre.pre, %dec_label_pc_100096a4.dec_label_pc_10009644_crit_edge ]
  %v0_10009644 = phi i32 [ %v0_10009644.pre, %dec_label_pc_1000963c.dec_label_pc_10009644_crit_edge ], [ %v1_100096a4, %dec_label_pc_100096a4.dec_label_pc_10009644_crit_edge ]
  store i32 %v0_10009644, i32* %ctr.global-to-local, align 4
  %v1_1000964c = sext i8 %v2_10009634 to i32
  br label %dec_label_pc_10009648

dec_label_pc_10009648:                            ; preds = %dec_label_pc_10009648, %dec_label_pc_10009644
  %v0_10009648 = phi i32 [ %v1_10009654, %dec_label_pc_10009648 ], [ %v0_10009648.pre, %dec_label_pc_10009644 ]
  %v1_10009648 = add i32 %v0_10009648, 4
  store i32 %v1_10009648, i32* %r9.global-to-local, align 4
  %v4_1000964c = inttoptr i32 %v1_10009648 to i32*
  store i32 %v1_1000964c, i32* %v4_1000964c, align 4
  %v2_10009650 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009650 = add i32 %v2_10009650, 4
  %v4_10009650 = inttoptr i32 %v3_10009650 to i32*
  store i32 %v1_1000964c, i32* %v4_10009650, align 4
  %v0_10009654 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009654 = add i32 %v0_10009654, 4
  store i32 %v1_10009654, i32* %r11.global-to-local, align 4
  %v0_10009658 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009658 = add i32 %v0_10009658, -1
  store i32 %v1_10009658, i32* %ctr.global-to-local, align 4
  %v2_10009658 = icmp eq i32 %v1_10009658, 0
  br i1 %v2_10009658, label %dec_label_pc_1000965c, label %dec_label_pc_10009648

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009648, %dec_label_pc_100096a4, %dec_label_pc_10009624
  %v0_1000965c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000965c = urem i32 %v0_1000965c, 8
  store i32 %v1_1000965c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000965c, 4
  br i1 %tmp, label %dec_label_pc_10009670, label %dec_label_pc_10009668

dec_label_pc_10009668:                            ; preds = %dec_label_pc_1000965c
  %v1_10009668 = sext i8 %v2_10009634 to i32
  %v2_10009668 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009668 = add i32 %v2_10009668, 4
  %v4_10009668 = inttoptr i32 %v3_10009668 to i32*
  store i32 %v1_10009668, i32* %v4_10009668, align 4
  store i32 %v3_10009668, i32* %r11.global-to-local, align 4
  %v0_1000966c = load i32, i32* @r5, align 4
  %v1_1000966c = add i32 %v0_1000966c, -4
  store i32 %v1_1000966c, i32* @r5, align 4
  br label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_10009668
  %v0_10009670 = phi i32 [ %v1_1000965c, %dec_label_pc_1000965c ], [ %v1_1000966c, %dec_label_pc_10009668 ]
  %v3_10009670 = icmp eq i32 %v0_10009670, 0
  %v0_10009674 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009670, i32 %v0_10009674)
  %v0_10009678 = load i32, i32* @r5, align 4
  store i32 %v0_10009678, i32* %ctr.global-to-local, align 4
  %v0_1000967c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000967c = add i32 %v0_1000967c, 3
  store i32 %v1_1000967c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009680

dec_label_pc_10009680:                            ; preds = %dec_label_pc_10009680, %dec_label_pc_10009670
  %v3_10009680 = phi i32 [ %v4_10009680, %dec_label_pc_10009680 ], [ %v1_1000967c, %dec_label_pc_10009670 ]
  %v4_10009680 = add i32 %v3_10009680, 1
  %v5_10009680 = inttoptr i32 %v4_10009680 to i8*
  store i8 %v2_10009634, i8* %v5_10009680, align 1
  store i32 %v4_10009680, i32* %r9.global-to-local, align 4
  %v0_10009684 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009684 = add i32 %v0_10009684, -1
  store i32 %v1_10009684, i32* %ctr.global-to-local, align 4
  %v2_10009684 = icmp eq i32 %v1_10009684, 0
  br i1 %v2_10009684, label %dec_label_pc_100096b0, label %dec_label_pc_10009680

dec_label_pc_1000968c:                            ; preds = %dec_label_pc_1000963c
  %v1_1000968c = sub nsw i32 4, %v1_1000963c
  store i32 %v1_1000968c, i32* %ctr.global-to-local, align 4
  %v1_10009694 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009694 = sub i32 %v1_10009694, %v1_1000968c
  store i32 %v2_10009694, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_10009698, %dec_label_pc_1000968c
  %v3_10009698 = phi i32 [ %v1_1000969c, %dec_label_pc_10009698 ], [ %v0_1000963c, %dec_label_pc_1000968c ]
  %v4_10009698 = add i32 %v3_10009698, 4
  %v5_10009698 = inttoptr i32 %v4_10009698 to i8*
  store i8 %v2_10009634, i8* %v5_10009698, align 1
  %v0_1000969c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000969c = add i32 %v0_1000969c, 1
  store i32 %v1_1000969c, i32* %r11.global-to-local, align 4
  %v0_100096a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100096a0 = add i32 %v0_100096a0, -1
  store i32 %v1_100096a0, i32* %ctr.global-to-local, align 4
  %v2_100096a0 = icmp eq i32 %v1_100096a0, 0
  br i1 %v2_100096a0, label %dec_label_pc_100096a4, label %dec_label_pc_10009698

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_10009698
  %v0_100096a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100096a4 = call i32 @__asm_rlwinm.(i32 %v0_100096a4, i32 29, i32 3, i32 31)
  store i32 %v1_100096a4, i32* %r9.global-to-local, align 4
  %v4_100096a4 = icmp eq i32 %v1_100096a4, 0
  br i1 %v4_100096a4, label %dec_label_pc_1000965c, label %dec_label_pc_100096a4.dec_label_pc_10009644_crit_edge

dec_label_pc_100096a4.dec_label_pc_10009644_crit_edge: ; preds = %dec_label_pc_100096a4
  %v0_10009648.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009644

dec_label_pc_100096b0:                            ; preds = %dec_label_pc_10009680
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100096a4, { 1, 2, 0 }
  uselistorder i32 %v1_100096a0, { 1, 0 }
  uselistorder i32 %v1_1000969c, { 1, 0 }
  uselistorder i32 %v1_10009684, { 1, 0 }
  uselistorder i32 %v4_10009680, { 1, 2, 0 }
  uselistorder i32 %v1_1000965c, { 2, 1, 0 }
  uselistorder i32 %v1_10009658, { 1, 0 }
  uselistorder i32 %v1_10009654, { 1, 0 }
  uselistorder i32 %v1_1000963c, { 1, 0 }
  uselistorder i32 %v0_1000963c, { 2, 1, 0 }
  uselistorder i8 %v2_10009634, { 3, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_10009670, { 1, 0 }
  uselistorder label %dec_label_pc_1000965c, { 1, 0, 2 }
}

define i32 @function_100096b4(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_100096b4:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100096b4 = add i32 %arg1, -1
  %v1_100096b8 = sub i32 %v2_100096b4, %tmp
  store i32 %v1_100096b8, i32* %r9.global-to-local, align 4
  %v2_100096bc4 = load i8, i8* %arg2, align 1
  %v1_100096c06 = add i32 %tmp, 1
  store i32 %v1_100096c06, i32* %r4.global-to-local, align 4
  %v3_100096c47 = icmp eq i8 %v2_100096bc4, 0
  store i1 %v3_100096c47, i1* %cr7_eq.global-to-local, align 1
  %v5_100096c88 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100096bc4, i8* %v5_100096c88, align 1
  %v0_100096cc9 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100096cc9, label %dec_label_pc_100096d0, label %dec_label_pc_100096bc.dec_label_pc_100096bc_crit_edge

dec_label_pc_100096bc.dec_label_pc_100096bc_crit_edge: ; preds = %dec_label_pc_100096b4, %dec_label_pc_100096bc.dec_label_pc_100096bc_crit_edge
  %v0_100096bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_100096c8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100096bc = inttoptr i32 %v0_100096bc.pre to i8*
  %v2_100096bc = load i8, i8* %v1_100096bc, align 1
  %v1_100096c0 = add i32 %v0_100096bc.pre, 1
  store i32 %v1_100096c0, i32* %r4.global-to-local, align 4
  %v3_100096c4 = icmp eq i8 %v2_100096bc, 0
  store i1 %v3_100096c4, i1* %cr7_eq.global-to-local, align 1
  %v4_100096c8 = add i32 %v1_100096c0, %v2_100096c8.pre
  %v5_100096c8 = inttoptr i32 %v4_100096c8 to i8*
  store i8 %v2_100096bc, i8* %v5_100096c8, align 1
  %v0_100096cc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100096cc, label %dec_label_pc_100096d0, label %dec_label_pc_100096bc.dec_label_pc_100096bc_crit_edge

dec_label_pc_100096d0:                            ; preds = %dec_label_pc_100096bc.dec_label_pc_100096bc_crit_edge, %dec_label_pc_100096b4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096bc.dec_label_pc_100096bc_crit_edge, { 1, 0 }
}

define i32 @function_100096d4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096d4:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100096d8 = load i32, i32* @lr, align 4
  store i32 %v0_100096d8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100096e8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474108, i32* @lr, align 4
  %v3_100096f8 = call i32 @function_10008c50(i32 1076655123, i32 %v2_100096e8, i32 %v2_100096e8)
  %v2_100096fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100096fc, i32* @r4, align 4
  store i32 %v3_100096f8, i32* @r30, align 4
  %v3_10009700 = icmp eq i32 %v3_100096f8, 0
  %v0_10009708 = load i32, i32* @r31, align 4
  br i1 %v3_10009700, label %dec_label_pc_10009710, label %dec_label_pc_10009758

dec_label_pc_10009710:                            ; preds = %dec_label_pc_100096d4
  %v1_10009708 = add i32 %v0_10009708, 17
  %v3_10009728 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10009728, i32* %r0.global-to-local, align 4
  %v2_1000972c = add i32 %v0_10009708, 4
  %v3_1000972c = inttoptr i32 %v2_1000972c to i32*
  store i32 %tmp7, i32* %v3_1000972c, align 4
  %v0_10009730 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009730 = load i32, i32* @r31, align 4
  %v2_10009730 = inttoptr i32 %v1_10009730 to i32*
  store i32 %v0_10009730, i32* %v2_10009730, align 4
  %v0_10009734 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009734 = load i32, i32* @r31, align 4
  %v2_10009734 = add i32 %v1_10009734, 8
  %v3_10009734 = inttoptr i32 %v2_10009734 to i32*
  store i32 %v0_10009734, i32* %v3_10009734, align 4
  %v0_10009738 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009738 = load i32, i32* @r31, align 4
  %v2_10009738 = add i32 %v1_10009738, 12
  %v3_10009738 = inttoptr i32 %v2_10009738 to i32*
  store i32 %v0_10009738, i32* %v3_10009738, align 4
  %v3_1000973c = load i32, i32* @r31, align 4
  %v4_1000973c = add i32 %v3_1000973c, 16
  %v5_1000973c = inttoptr i32 %v4_1000973c to i8*
  store i8 %tmp4, i8* %v5_1000973c, align 1
  %v1_10009740 = load i32, i32* @r31, align 4
  %v2_10009740 = add i32 %v1_10009740, 52
  %v3_10009740 = inttoptr i32 %v2_10009740 to i32*
  store i32 %tmp3, i32* %v3_10009740, align 4
  %v1_10009744 = load i32, i32* @r31, align 4
  %v2_10009744 = add i32 %v1_10009744, 56
  %v3_10009744 = inttoptr i32 %v2_10009744 to i32*
  store i32 %tmp2, i32* %v3_10009744, align 4
  store i32 268474188, i32* @lr, align 4
  %v6_10009748 = sext i8 %tmp4 to i32
  %v8_10009748 = call i32 @function_1000b38c(i32 %v1_10009708, i32 %v2_100096fc, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10009748, i32 %tmp7)
  store i32 268474200, i32* @lr, align 4
  %v3_10009754 = call i32 @function_10009624(i32 %v8_10009748, i32 0, i32 13)
  %v0_1000975c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009758

dec_label_pc_10009758:                            ; preds = %dec_label_pc_100096d4, %dec_label_pc_10009710
  %v0_1000975c = phi i32 [ %v3_100096f8, %dec_label_pc_100096d4 ], [ %v0_1000975c.pre, %dec_label_pc_10009710 ]
  store i32 %v0_100096d8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000975c

; uselistorder directives
  uselistorder i32 %v2_100096e8, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 7, 24, 25, 0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 23, 26, 27, 3, 28, 29, 4, 30, 31, 5, 32, 33, 6 }
  uselistorder label %dec_label_pc_10009758, { 1, 0 }
}

define i32 @function_10009770() local_unnamed_addr {
dec_label_pc_10009770:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009770 = load i32, i32* @r4, align 4
  %v3_10009770 = icmp eq i32 %v0_10009770, 1
  %v0_10009780 = load i32, i32* @r3, align 4
  store i32 %v0_10009780, i32* %r27.global-to-local, align 4
  %v0_10009788 = load i32, i32* @r5, align 4
  store i32 %v0_10009788, i32* @r31, align 4
  br i1 %v3_10009770, label %dec_label_pc_100097ac, label %dec_label_pc_10009790

dec_label_pc_10009790:                            ; preds = %dec_label_pc_10009770
  %v3_10009790 = icmp eq i32 %v0_10009770, 2
  br i1 %v3_10009790, label %dec_label_pc_100097cc, label %dec_label_pc_10009798

dec_label_pc_10009798:                            ; preds = %dec_label_pc_10009790
  %v3_10009798 = icmp eq i32 %v0_10009770, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009798, label %dec_label_pc_100097d4, label %dec_label_pc_100097b8

dec_label_pc_100097ac:                            ; preds = %dec_label_pc_10009770
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_100097d4

dec_label_pc_100097b8:                            ; preds = %dec_label_pc_10009798
  %v0_100097b8 = call i32 @function_1000953c()
  store i32 -1, i32* @r28, align 4
  %v2_100097c4 = inttoptr i32 %v0_100097b8 to i32*
  store i32 22, i32* %v2_100097c4, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_10009790
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_100097d4

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_10009798, %dec_label_pc_100097ac, %dec_label_pc_100097cc
  %v1_100097d4 = inttoptr i32 %v0_10009788 to i32*
  %v2_100097d4 = load i32, i32* %v1_100097d4, align 4
  store i32 19, i32* @r5, align 4
  %v1_100097dc = add i32 %v0_10009788, 4
  %v2_100097dc = inttoptr i32 %v1_100097dc to i32*
  %v3_100097dc = load i32, i32* %v2_100097dc, align 4
  store i32 %v3_100097dc, i32* %r9.global-to-local, align 4
  %v1_100097e0 = add i32 %v0_10009788, 17
  store i32 %v1_100097e0, i32* @r4, align 4
  %v1_100097e4 = add i32 %v0_10009788, 8
  %v2_100097e4 = inttoptr i32 %v1_100097e4 to i32*
  %v3_100097e4 = load i32, i32* %v2_100097e4, align 4
  %v2_100097e8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100097e8, i32* @r3, align 4
  %v2_100097f0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_100097d4, i32* %stack_var_-72, align 4
  store i32 268474400, i32* @lr, align 4
  %v0_1000981c = call i32 @function_1000b2f0()
  %v0_10009820 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009824 = load i32, i32* @r30, align 4
  store i32 268474420, i32* @lr, align 4
  %v3_10009830 = call i32 @function_10008c50(i32 %v0_10009820, i32 %v0_10009824, i32 %v2_100097f0)
  store i32 %v3_10009830, i32* @r28, align 4
  %v3_10009834 = icmp eq i32 %v3_10009830, 0
  br i1 %v3_10009834, label %dec_label_pc_1000983c, label %dec_label_pc_100098bc

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_100097d4
  %v0_1000983c = load i32, i32* @r30, align 4
  %v3_10009840 = icmp eq i32 %v0_1000983c, -2144570348
  br i1 %v3_10009840, label %dec_label_pc_10009848, label %dec_label_pc_100098b8

dec_label_pc_10009848:                            ; preds = %dec_label_pc_1000983c
  %v0_10009848 = call i32 @function_1000953c()
  store i32 %v0_10009848, i32* @r29, align 4
  %v0_10009858 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009860 = inttoptr i32 %v0_10009848 to i32*
  %v2_10009860 = load i32, i32* %v1_10009860, align 4
  store i32 %v2_10009860, i32* @r30, align 4
  store i32 268474476, i32* @lr, align 4
  %v3_10009868 = call i32 @function_10008c50(i32 %v0_10009858, i32 1076655123, i32 %v2_100097f0)
  %v3_1000986c = icmp eq i32 %v3_10009868, 0
  br i1 %v3_1000986c, label %dec_label_pc_1000987c, label %dec_label_pc_10009874

dec_label_pc_10009874:                            ; preds = %dec_label_pc_10009848
  %v0_10009874 = load i32, i32* @r30, align 4
  %v1_10009874 = load i32, i32* @r29, align 4
  %v2_10009874 = inttoptr i32 %v1_10009874 to i32*
  store i32 %v0_10009874, i32* %v2_10009874, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009848
  %v0_1000987c = load i32, i32* @r31, align 4
  %v1_1000987c = add i32 %v0_1000987c, 8
  %v2_1000987c = inttoptr i32 %v1_1000987c to i32*
  %v3_1000987c = load i32, i32* %v2_1000987c, align 4
  %v1_10009884 = call i32 @__asm_rlwinm(i32 %v3_1000987c, i32 0, i32 19, i32 20)
  %v1_10009888 = call i32 @__asm_rlwinm(i32 %v3_100097e4, i32 0, i32 19, i32 20)
  store i32 %v1_10009888, i32* %r9.global-to-local, align 4
  %v4_1000988c = icmp eq i32 %v1_10009884, %v1_10009888
  br i1 %v4_1000988c, label %dec_label_pc_10009894, label %dec_label_pc_100098a8

dec_label_pc_10009894:                            ; preds = %dec_label_pc_1000987c
  %v1_10009894 = and i32 %v3_1000987c, 768
  store i32 %v1_10009894, i32* %r9.global-to-local, align 4
  %v3_10009894 = icmp eq i32 %v1_10009894, 0
  br i1 %v3_10009894, label %dec_label_pc_100098b8, label %dec_label_pc_1000989c

dec_label_pc_1000989c:                            ; preds = %dec_label_pc_10009894
  %v1_1000989c = call i32 @__asm_rlwinm(i32 %v3_100097e4, i32 0, i32 22, i32 23)
  %v0_100098a0 = load i32, i32* %r9.global-to-local, align 4
  %v4_100098a0 = icmp eq i32 %v0_100098a0, %v1_1000989c
  br i1 %v4_100098a0, label %dec_label_pc_100098b8, label %dec_label_pc_100098a8

dec_label_pc_100098a8:                            ; preds = %dec_label_pc_1000987c, %dec_label_pc_1000989c
  store i32 -1, i32* @r28, align 4
  %v1_100098b0 = load i32, i32* @r29, align 4
  %v2_100098b0 = inttoptr i32 %v1_100098b0 to i32*
  store i32 22, i32* %v2_100098b0, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_1000983c, %dec_label_pc_1000989c, %dec_label_pc_10009894
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_100098bc:                            ; preds = %dec_label_pc_100097d4, %dec_label_pc_100098a8, %dec_label_pc_10009874, %dec_label_pc_100097b8, %dec_label_pc_100098b8
  %v0_100098c0 = load i32, i32* @r28, align 4
  ret i32 %v0_100098c0

; uselistorder directives
  uselistorder i32 %v0_10009788, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008c50, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100098bc, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100098b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100098a8, { 1, 0 }
  uselistorder label %dec_label_pc_100097d4, { 2, 1, 0 }
}

define i32 @function_100098d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100098d4:
  %stack_var_-24 = alloca i32, align 4
  %v2_100098dc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100098dc, i32* @r4, align 4
  store i32 268474600, i32* @lr, align 4
  %v1_100098e4 = bitcast i32* %stack_var_-24 to i8*
  %v2_100098e4 = call i32 @function_1000b3c0(i8* %v1_100098e4)
  %v3_100098e8 = icmp eq i32 %v2_100098e4, 0
  br i1 %v3_100098e8, label %dec_label_pc_100098f8, label %dec_label_pc_100098f4

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100098d4
  %v3_100098f4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100098f8

dec_label_pc_100098f8:                            ; preds = %dec_label_pc_100098d4, %dec_label_pc_100098f4
  %v0_10009904 = phi i32 [ -1, %dec_label_pc_100098d4 ], [ %v3_100098f4, %dec_label_pc_100098f4 ]
  ret i32 %v0_10009904

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100098f8, { 1, 0 }
}

define i32 @function_10009908(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009908:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000991c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474668, i32* @lr, align 4
  %v2_10009928 = call i32 @function_1000abf4(i32 2, i32 %v2_1000991c)
  ret i32 %v2_10009928

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000993c() local_unnamed_addr {
dec_label_pc_1000993c:
  %stack_var_-24 = alloca i32, align 4
  %v0_10009944 = load i32, i32* @r3, align 4
  store i32 %v0_10009944, i32* %stack_var_-24, align 4
  %v2_10009950 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474720, i32* @lr, align 4
  %v2_1000995c = call i32 @function_1000abf4(i32 3, i32 %v2_10009950)
  ret i32 %v2_1000995c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009970(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009970:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009984 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474772, i32* @lr, align 4
  %v2_10009990 = call i32 @function_1000abf4(i32 6, i32 %v2_10009984)
  ret i32 %v2_10009990

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100099a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100099a4:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100099b8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268474832, i32* @lr, align 4
  %v2_100099cc = call i32 @function_1000abf4(i32 15, i32 %v2_100099b8)
  ret i32 %v2_100099cc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 26, 13, 14, 5, 15, 6, 16, 7, 8, 9, 10, 11, 17, 12, 18, 19, 1, 20, 21, 2, 22, 23, 3, 24, 25, 4 }
}

define i32 @function_100099e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100099e0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100099f4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474880, i32* @lr, align 4
  %v2_100099fc = call i32 @function_1000abf4(i32 4, i32 %v2_100099f4)
  ret i32 %v2_100099fc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009a10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009a10:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009a24 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474936, i32* @lr, align 4
  %v2_10009a34 = call i32 @function_1000abf4(i32 10, i32 %v2_10009a24)
  ret i32 %v2_10009a34

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009a48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009a48:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009a5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475000, i32* @lr, align 4
  %v2_10009a74 = call i32 @function_1000abf4(i32 12, i32 %v2_10009a5c)
  ret i32 %v2_10009a74

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009a88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009a88:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009a9c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475056, i32* @lr, align 4
  %v2_10009aac = call i32 @function_1000abf4(i32 9, i32 %v2_10009a9c)
  ret i32 %v2_10009aac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 6, 7, 13, 14, 15, 1, 16, 2, 17, 3, 18, 8, 9, 10, 19, 11, 20, 33, 21, 22, 23, 24, 25, 26, 27, 4, 28, 29, 30, 31, 32, 34, 35, 36, 12 }
}

define i32 @function_10009ac0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009ac0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009ad4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475120, i32* @lr, align 4
  %v2_10009aec = call i32 @function_1000abf4(i32 11, i32 %v2_10009ad4)
  ret i32 %v2_10009aec

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009b00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009b00:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009b14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475180, i32* @lr, align 4
  %v2_10009b28 = call i32 @function_1000abf4(i32 14, i32 %v2_10009b14)
  ret i32 %v2_10009b28

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009b3c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009b3c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009b50 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475232, i32* @lr, align 4
  %v2_10009b5c = call i32 @function_1000abf4(i32 1, i32 %v2_10009b50)
  ret i32 %v2_10009b5c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000abf4, { 5, 1, 0, 4, 6, 10, 7, 9, 8, 3, 2 }
}

define i32 @function_10009b70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009b70:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009ba0, label %dec_label_pc_10009b8c

dec_label_pc_10009b8c:                            ; preds = %dec_label_pc_10009b70
  %v0_10009b8c = call i32 @function_1000953c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009b98 = inttoptr i32 %v0_10009b8c to i32*
  store i32 22, i32* %v2_10009b98, align 4
  %v0_10009bac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009ba8

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b70
  %v0_10009ba0 = call i32 @function_10009cf0()
  store i32 %v0_10009ba0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009ba8

dec_label_pc_10009ba8:                            ; preds = %dec_label_pc_10009b8c, %dec_label_pc_10009ba0
  %v0_10009bac = phi i32 [ %v0_10009bac.pre, %dec_label_pc_10009b8c ], [ %v0_10009ba0, %dec_label_pc_10009ba0 ]
  ret i32 %v0_10009bac

; uselistorder directives
  uselistorder label %dec_label_pc_10009ba8, { 1, 0 }
}

define i32 @function_10009bbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009bbc:
  store i32 268475348, i32* @lr, align 4
  %v3_10009bd0 = call i32 @function_10009624(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009be8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009be8:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009be8 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009be8, label %dec_label_pc_10009c14, label %dec_label_pc_10009c04

dec_label_pc_10009c04:                            ; preds = %dec_label_pc_10009be8
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009c14, label %dec_label_pc_10009c0c

dec_label_pc_10009c0c:                            ; preds = %dec_label_pc_10009c04
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10009c44.lr.ph, label %dec_label_pc_10009c14

dec_label_pc_10009c14:                            ; preds = %dec_label_pc_10009c0c, %dec_label_pc_10009c04, %dec_label_pc_10009be8
  %v0_10009c14 = call i32 @function_1000953c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009c20 = inttoptr i32 %v0_10009c14 to i32*
  store i32 22, i32* %v2_10009c20, align 4
  %v0_10009cb4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009cb0

dec_label_pc_10009c44.lr.ph:                      ; preds = %dec_label_pc_10009c0c
  %v2_10009c34 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009c34, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009c4422 = add i32 %v2_10009c34, 128
  %v3_10009c4423 = inttoptr i32 %v2_10009c4422 to i32*
  store i32 0, i32* %v3_10009c4423, align 4
  %v0_10009c4824 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009c4825 = add i32 %v0_10009c4824, -1
  store i32 %v1_10009c4825, i32* %r11.global-to-local, align 4
  %v1_10009c4c26 = mul i32 %v1_10009c4825, 4
  %v1_10009c5027 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009c5028 = add i32 %v1_10009c5027, %v1_10009c4c26
  store i32 %v2_10009c5028, i32* %r9.global-to-local, align 4
  %v0_10009c5429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c5430 = add i32 %v0_10009c5429, -1
  store i32 %v1_10009c5430, i32* %ctr.global-to-local, align 4
  %v2_10009c5431 = icmp eq i32 %v1_10009c5430, 0
  br i1 %v2_10009c5431, label %dec_label_pc_10009c58, label %dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge

dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge: ; preds = %dec_label_pc_10009c44.lr.ph, %dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge
  %v2_10009c5032 = phi i32 [ %v2_10009c50, %dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge ], [ %v2_10009c5028, %dec_label_pc_10009c44.lr.ph ]
  %v0_10009c44.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009c44 = add i32 %v2_10009c5032, 4
  %v3_10009c44 = inttoptr i32 %v2_10009c44 to i32*
  store i32 %v0_10009c44.pre, i32* %v3_10009c44, align 4
  %v0_10009c48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009c48 = add i32 %v0_10009c48, -1
  store i32 %v1_10009c48, i32* %r11.global-to-local, align 4
  %v1_10009c4c = mul i32 %v1_10009c48, 4
  %v1_10009c50 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009c50 = add i32 %v1_10009c50, %v1_10009c4c
  store i32 %v2_10009c50, i32* %r9.global-to-local, align 4
  %v0_10009c54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c54 = add i32 %v0_10009c54, -1
  store i32 %v1_10009c54, i32* %ctr.global-to-local, align 4
  %v2_10009c54 = icmp eq i32 %v1_10009c54, 0
  br i1 %v2_10009c54, label %dec_label_pc_10009c58, label %dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge

dec_label_pc_10009c58:                            ; preds = %dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge, %dec_label_pc_10009c44.lr.ph
  %v0_10009c5c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009c58 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009c58, i32* @r3, align 4
  store i32 %v0_10009c5c.pre, i32* @r4, align 4
  %v0_10009c60 = call i32 @function_10009cf0()
  %v1_10009c64 = icmp slt i32 %v0_10009c60, 0
  br i1 %v1_10009c64, label %dec_label_pc_10009cac, label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c58
  %v0_10009c70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009c78 = call i32 @function_10009cc8(i32 ptrtoint (i32* @global_var_1001c368.305 to i32), i32 %v0_10009c70)
  %v2_10009c84 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268475548, i32* @lr, align 4
  %v4_10009c98 = call i32 @function_1000b480(i32 %v0_10009c70, i32* nonnull %stack_var_-296, i32 %v2_10009c84)
  %v1_10009c9c = icmp slt i32 %v4_10009c98, 0
  br i1 %v1_10009c9c, label %dec_label_pc_10009cac, label %dec_label_pc_10009ca4

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009c6c
  %v3_10009ca4 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009ca4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009cb0

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009c6c, %dec_label_pc_10009c58
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009cb0

dec_label_pc_10009cb0:                            ; preds = %dec_label_pc_10009ca4, %dec_label_pc_10009c14, %dec_label_pc_10009cac
  %v0_10009cb4 = phi i32 [ %v3_10009ca4, %dec_label_pc_10009ca4 ], [ %v0_10009cb4.pre, %dec_label_pc_10009c14 ], [ -1, %dec_label_pc_10009cac ]
  ret i32 %v0_10009cb4

; uselistorder directives
  uselistorder i32 %v1_10009c54, { 1, 0 }
  uselistorder i32 %v2_10009c50, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009cb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c44.dec_label_pc_10009c44_crit_edge, { 1, 0 }
}

define i32 @function_10009cc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009cc8:
  %v1_10009cc8 = add i32 %arg2, -1
  %v1_10009ccc = call i32 @__asm_rlwinm(i32 %v1_10009cc8, i32 29, i32 3, i32 29)
  %v1_10009cd0 = urem i32 %v1_10009cc8, 32
  %v2_10009cd4 = add i32 %v1_10009ccc, %arg1
  %v3_10009cd4 = inttoptr i32 %v2_10009cd4 to i32*
  %v4_10009cd4 = load i32, i32* %v3_10009cd4, align 4
  %v3_10009cdc = shl i32 1, %v1_10009cd0
  %v2_10009ce0 = and i32 %v4_10009cd4, %v3_10009cdc
  %v2_10009ce4 = icmp ne i32 %v2_10009ce0, 0
  %v5_10009ce8 = zext i1 %v2_10009ce4 to i32
  ret i32 %v5_10009ce8
}

define i32 @function_10009cf0() local_unnamed_addr {
dec_label_pc_10009cf0:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009cf0 = load i32, i32* @r4, align 4
  %v1_10009cf0 = add i32 %v0_10009cf0, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009cf8 = call i32 @__asm_rlwinm(i32 %v1_10009cf0, i32 29, i32 3, i32 29)
  %v1_10009cfc = urem i32 %v1_10009cf0, 32
  %v1_10009d00 = load i32, i32* @r3, align 4
  %v2_10009d00 = add i32 %v1_10009d00, %v1_10009cf8
  %v3_10009d00 = inttoptr i32 %v2_10009d00 to i32*
  %v4_10009d00 = load i32, i32* %v3_10009d00, align 4
  %v0_10009d04 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009d04 = shl i32 %v0_10009d04, %v1_10009cfc
  store i32 %v3_10009d04, i32* %r0.global-to-local, align 4
  %v2_10009d08 = or i32 %v3_10009d04, %v4_10009d00
  store i32 %v2_10009d08, i32* %v3_10009d00, align 4
  ret i32 0
}

define i32 @function_10009d18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009d18:
  %v1_10009d18 = add i32 %arg2, -1
  %v1_10009d20 = call i32 @__asm_rlwinm(i32 %v1_10009d18, i32 29, i32 3, i32 29)
  %v1_10009d24 = urem i32 %v1_10009d18, 32
  %v2_10009d28 = add i32 %v1_10009d20, %arg1
  %v3_10009d28 = inttoptr i32 %v2_10009d28 to i32*
  %v4_10009d28 = load i32, i32* %v3_10009d28, align 4
  %v3_10009d2c = shl i32 -2, %v1_10009d24
  %v4_10009d2c = sub nsw i32 32, %v1_10009d24
  %v5_10009d2c = lshr i32 -2, %v4_10009d2c
  %v6_10009d2c = or i32 %v5_10009d2c, %v3_10009d2c
  %v2_10009d30 = and i32 %v6_10009d2c, %v4_10009d28
  store i32 %v2_10009d30, i32* %v3_10009d28, align 4
  ret i32 0
}

define i32 @function_10009d40() local_unnamed_addr {
dec_label_pc_10009d40:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009d40 = load i32, i32* @r3, align 4
  %v3_10009d40 = icmp eq i32 %v0_10009d40, 0
  br i1 %v3_10009d40, label %dec_label_pc_10009d5c.thread, label %dec_label_pc_10009d5c

dec_label_pc_10009d5c.thread:                     ; preds = %dec_label_pc_10009d40
  br label %dec_label_pc_10009d68

dec_label_pc_10009d5c:                            ; preds = %dec_label_pc_10009d40
  %v3_10009d60 = icmp ugt i32 %v0_10009d40, -8
  br i1 %v3_10009d60, label %dec_label_pc_10009e70, label %dec_label_pc_10009d68

dec_label_pc_10009d68:                            ; preds = %dec_label_pc_10009d5c.thread, %dec_label_pc_10009d5c
  %v0_10009d6c16 = phi i32 [ 1, %dec_label_pc_10009d5c.thread ], [ %v0_10009d40, %dec_label_pc_10009d5c ]
  %v1_10009d6c = add i32 %v0_10009d6c16, 4
  store i32 ptrtoint (i32* @global_var_1001c248.306 to i32), i32* @r29, align 4
  store i32 %v1_10009d6c, i32* %stack_var_-40, align 4
  %v0_10009d7c = call i32 @function_1000a89c()
  %v2_10009d84 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10009d8c = call i32 @function_1000a138(i32* inttoptr (i32 268550512 to i32*), i32 %v2_10009d84)
  store i32 %v3_10009d8c, i32* %r31.global-to-local, align 4
  %v0_10009d98 = call i32 @function_1000a89c()
  %v3_10009d9c = icmp eq i32 %v3_10009d8c, 0
  br i1 %v3_10009d9c, label %dec_label_pc_10009da4, label %dec_label_pc_10009e54.thread

dec_label_pc_10009e54.thread:                     ; preds = %dec_label_pc_10009d68
  br label %dec_label_pc_10009e68

dec_label_pc_10009da4:                            ; preds = %dec_label_pc_10009d68
  %v3_10009da8 = load i32, i32* @global_var_1001c1cc.309, align 4
  store i32 %v3_10009da8, i32* %r31.global-to-local, align 4
  %v3_10009dac = load i32, i32* %stack_var_-40, align 4
  %v2_10009db0 = icmp ult i32 %v3_10009dac, %v3_10009da8
  br i1 %v2_10009db0, label %dec_label_pc_10009dc8, label %dec_label_pc_10009db8

dec_label_pc_10009db8:                            ; preds = %dec_label_pc_10009da4
  %v1_10009dbc = sub i32 0, %v3_10009da8
  %v2_10009db8 = add i32 %v3_10009da8, -1
  %v1_10009dc0 = add i32 %v2_10009db8, %v3_10009dac
  %v2_10009dc4 = and i32 %v1_10009dc0, %v1_10009dbc
  store i32 %v2_10009dc4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009dc8

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009da4, %dec_label_pc_10009db8
  %v0_10009dd4 = call i32 @function_1000a89c()
  %v0_10009dd8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268475872, i32* @lr, align 4
  %v1_10009ddc = call i32 @function_1000b0bc(i32 %v0_10009dd8)
  %v3_10009de0 = icmp eq i32 %v1_10009ddc, -1
  br i1 %v3_10009de0, label %dec_label_pc_10009e00, label %dec_label_pc_10009de8

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009dc8
  %v1_10009de8 = add i32 %v1_10009ddc, 3
  %v1_10009dec = call i32 @__asm_rlwinm(i32 %v1_10009de8, i32 0, i32 0, i32 29)
  store i32 %v1_10009dec, i32* @r30, align 4
  %v4_10009df0 = icmp eq i32 %v1_10009dec, %v1_10009ddc
  br i1 %v4_10009df0, label %dec_label_pc_10009e00, label %dec_label_pc_10009df8

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009de8
  %v2_10009df8 = sub i32 %v1_10009dec, %v1_10009ddc
  store i32 268475904, i32* @lr, align 4
  %v1_10009dfc = call i32 @function_1000b0bc(i32 %v2_10009df8)
  br label %dec_label_pc_10009e00

dec_label_pc_10009e00:                            ; preds = %dec_label_pc_10009de8, %dec_label_pc_10009dc8, %dec_label_pc_10009df8
  %v0_10009e08 = call i32 @function_1000a89c()
  %v0_10009e0c = load i32, i32* @r30, align 4
  %v3_10009e0c = icmp eq i32 %v0_10009e0c, -1
  br i1 %v3_10009e0c, label %dec_label_pc_10009e70, label %dec_label_pc_10009e54

dec_label_pc_10009e54:                            ; preds = %dec_label_pc_10009e00
  store i32 ptrtoint (i32* @global_var_1001c248.306 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c170 to i32), i32* @r29, align 4
  %v0_10009e28 = call i32 @function_1000a89c()
  %v0_10009e2c = load i32, i32* @r31, align 4
  %v0_10009e30 = load i32, i32* @r30, align 4
  %v0_10009e34 = load i32, i32* @r29, align 4
  store i32 268475964, i32* @lr, align 4
  %v3_10009e38 = inttoptr i32 %v0_10009e34 to i32*
  %v4_10009e38 = call i32 @function_1000a2bc(i32* %v3_10009e38, i32 %v0_10009e30, i32 %v0_10009e2c)
  %v0_10009e3c = load i32, i32* @r29, align 4
  %v2_10009e44 = inttoptr i32 %v0_10009e3c to i32*
  %v3_10009e44 = call i32 @function_1000a138(i32* %v2_10009e44, i32 %v2_10009d84)
  store i32 %v3_10009e44, i32* %r31.global-to-local, align 4
  %v0_10009e50 = call i32 @function_1000a89c()
  %v3_10009e54 = icmp eq i32 %v3_10009e44, 0
  br i1 %v3_10009e54, label %dec_label_pc_10009e68.thread, label %dec_label_pc_10009e68

dec_label_pc_10009e68.thread:                     ; preds = %dec_label_pc_10009e54
  br label %dec_label_pc_10009e70

dec_label_pc_10009e68:                            ; preds = %dec_label_pc_10009e54, %dec_label_pc_10009e54.thread
  %v0_10009e68.pr6 = phi i32 [ %v3_10009d8c, %dec_label_pc_10009e54.thread ], [ %v3_10009e44, %dec_label_pc_10009e54 ]
  %v3_10009e5c = load i32, i32* %stack_var_-40, align 4
  %v2_10009e60 = inttoptr i32 %v0_10009e68.pr6 to i32*
  store i32 %v3_10009e5c, i32* %v2_10009e60, align 4
  %v0_10009e64 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009e64 = add i32 %v0_10009e64, 4
  store i32 %v1_10009e64, i32* @r31, align 4
  %v3_10009e68 = icmp eq i32 %v1_10009e64, 0
  br i1 %v3_10009e68, label %dec_label_pc_10009e70, label %dec_label_pc_10009e80

dec_label_pc_10009e70:                            ; preds = %dec_label_pc_10009e68.thread, %dec_label_pc_10009e68, %dec_label_pc_10009e00, %dec_label_pc_10009d5c
  %v0_10009e70 = call i32 @function_1000953c()
  %v2_10009e78 = inttoptr i32 %v0_10009e70 to i32*
  store i32 12, i32* %v2_10009e78, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10009e80

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e68, %dec_label_pc_10009e70
  %v0_10009e84 = phi i32 [ %v1_10009e64, %dec_label_pc_10009e68 ], [ 0, %dec_label_pc_10009e70 ]
  ret i32 %v0_10009e84

; uselistorder directives
  uselistorder i32 %v1_10009e64, { 1, 0, 2 }
  uselistorder i32 %v1_10009dec, { 1, 0, 2 }
  uselistorder i32 %v1_10009ddc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009da8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009d8c, { 1, 0, 2 }
  uselistorder i32 %v0_10009d40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10009e80, { 1, 0 }
  uselistorder label %dec_label_pc_10009e70, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009e00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10009d68, { 1, 0 }
}

define i32 @function_10009e98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e98:
  %v3_10009e98 = icmp eq i32 %arg1, 0
  %v2_10009ea8 = mul i32 %arg2, %arg1
  store i32 %v2_10009ea8, i32* @r31, align 4
  br i1 %v3_10009e98, label %dec_label_pc_10009ed4, label %dec_label_pc_10009eb4

dec_label_pc_10009eb4:                            ; preds = %dec_label_pc_10009e98
  %v2_10009eb4 = udiv i32 %v2_10009ea8, %arg1
  store i32 0, i32* @r30, align 4
  %v4_10009ebc = icmp eq i32 %v2_10009eb4, %arg2
  br i1 %v4_10009ebc, label %dec_label_pc_10009ed4, label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009eb4
  %v0_10009ec4 = call i32 @function_1000953c()
  %v2_10009ecc = inttoptr i32 %v0_10009ec4 to i32*
  store i32 12, i32* %v2_10009ecc, align 4
  br label %dec_label_pc_10009ef0

dec_label_pc_10009ed4:                            ; preds = %dec_label_pc_10009eb4, %dec_label_pc_10009e98
  store i32 %v2_10009ea8, i32* @r3, align 4
  store i32 268476124, i32* @lr, align 4
  %v0_10009ed8 = call i32 @function_10009d40()
  %v0_10009edc = load i32, i32* @r31, align 4
  store i32 %v0_10009ed8, i32* @r30, align 4
  %v3_10009ee0 = icmp eq i32 %v0_10009ed8, 0
  br i1 %v3_10009ee0, label %dec_label_pc_10009ef0, label %dec_label_pc_10009eec

dec_label_pc_10009eec:                            ; preds = %dec_label_pc_10009ed4
  store i32 268476144, i32* @lr, align 4
  %v3_10009eec = call i32 @function_10009624(i32 0, i32 %v0_10009edc, i32 %v0_10009edc)
  br label %dec_label_pc_10009ef0

dec_label_pc_10009ef0:                            ; preds = %dec_label_pc_10009ed4, %dec_label_pc_10009ec4, %dec_label_pc_10009eec
  %v0_10009ef4 = load i32, i32* @r30, align 4
  ret i32 %v0_10009ef4

; uselistorder directives
  uselistorder i32 %v0_10009edc, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009ef0, { 2, 0, 1 }
}

define i32 @function_10009f08() local_unnamed_addr {
dec_label_pc_10009f08:
  %v0_10009f08 = load i32, i32* @r3, align 4
  %v3_10009f08 = icmp eq i32 %v0_10009f08, 0
  br i1 %v3_10009f08, label %dec_label_pc_10009ff4, label %dec_label_pc_10009f20

dec_label_pc_10009f20:                            ; preds = %dec_label_pc_10009f08
  %v1_10009f24 = add i32 %v0_10009f08, -4
  %v2_10009f24 = inttoptr i32 %v1_10009f24 to i32*
  %v3_10009f24 = load i32, i32* %v2_10009f24, align 4
  store i32 %v3_10009f24, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10009f38 = call i32 @function_1000a89c()
  %v0_10009f40 = load i32, i32* @r28, align 4
  store i32 268476236, i32* @lr, align 4
  %v4_10009f48 = call i32 @function_1000a2bc(i32* nonnull @global_var_1001c170, i32 %v1_10009f24, i32 %v0_10009f40)
  %v3_10009f50 = load i32, i32* @global_var_1001c1cc.309, align 4
  store i32 %v4_10009f48, i32* @r29, align 4
  %v1_10009f58 = inttoptr i32 %v4_10009f48 to i32*
  %v2_10009f58 = load i32, i32* %v1_10009f58, align 4
  store i32 %v2_10009f58, i32* @r27, align 4
  %v1_10009f5c = mul i32 %v3_10009f50, 8
  %v2_10009f60 = icmp ult i32 %v2_10009f58, %v1_10009f5c
  br i1 %v2_10009f60, label %dec_label_pc_10009f94, label %dec_label_pc_10009f68

dec_label_pc_10009f68:                            ; preds = %dec_label_pc_10009f20
  store i32 ptrtoint (i32* @global_var_1001c3e8.310 to i32), i32* @r28, align 4
  %v0_10009f78 = call i32 @function_1000a89c()
  store i32 268476292, i32* @lr, align 4
  %v1_10009f80 = call i32 @function_1000b0bc(i32 0)
  %v0_10009f84 = load i32, i32* @r31, align 4
  %v4_10009f84 = icmp eq i32 %v0_10009f84, %v1_10009f80
  br i1 %v4_10009f84, label %dec_label_pc_10009f9c, label %dec_label_pc_10009f8c

dec_label_pc_10009f8c:                            ; preds = %dec_label_pc_10009f68
  %v0_10009f90 = call i32 @function_1000a89c()
  br label %dec_label_pc_10009f94

dec_label_pc_10009f94:                            ; preds = %dec_label_pc_10009f20, %dec_label_pc_10009f8c
  br label %dec_label_pc_10009ff0

dec_label_pc_10009f9c:                            ; preds = %dec_label_pc_10009f68
  %v0_10009f9c = load i32, i32* @r29, align 4
  %v1_10009f9c = add i32 %v0_10009f9c, 4
  %v2_10009f9c = inttoptr i32 %v1_10009f9c to i32*
  %v3_10009f9c = load i32, i32* %v2_10009f9c, align 4
  %v3_10009fa0 = icmp eq i32 %v3_10009f9c, 0
  br i1 %v3_10009fa0, label %dec_label_pc_10009fb0, label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f9c
  %v1_10009fa8 = add i32 %v0_10009f9c, 8
  %v2_10009fa8 = inttoptr i32 %v1_10009fa8 to i32*
  %v3_10009fa8 = load i32, i32* %v2_10009fa8, align 4
  %v2_10009fac = add i32 %v3_10009f9c, 8
  %v3_10009fac = inttoptr i32 %v2_10009fac to i32*
  store i32 %v3_10009fa8, i32* %v3_10009fac, align 4
  %v0_10009fb0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f9c, %dec_label_pc_10009fa8
  %v0_10009fb0 = phi i32 [ %v0_10009f9c, %dec_label_pc_10009f9c ], [ %v0_10009fb0.pre, %dec_label_pc_10009fa8 ]
  %v1_10009fb0 = add i32 %v0_10009fb0, 8
  %v2_10009fb0 = inttoptr i32 %v1_10009fb0 to i32*
  %v3_10009fb0 = load i32, i32* %v2_10009fb0, align 4
  %v1_10009fb4 = add i32 %v0_10009fb0, 4
  %v2_10009fb4 = inttoptr i32 %v1_10009fb4 to i32*
  %v3_10009fb4 = load i32, i32* %v2_10009fb4, align 4
  %v3_10009fb8 = icmp eq i32 %v3_10009fb0, 0
  br i1 %v3_10009fb8, label %dec_label_pc_10009fc8, label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009fb0
  %v2_10009fc0 = add i32 %v3_10009fb0, 4
  %v3_10009fc0 = inttoptr i32 %v2_10009fc0 to i32*
  store i32 %v3_10009fb4, i32* %v3_10009fc0, align 4
  br label %dec_label_pc_10009fcc

dec_label_pc_10009fc8:                            ; preds = %dec_label_pc_10009fb0
  store i32 %v3_10009fb4, i32* @global_var_1001c170, align 4
  br label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fc0, %dec_label_pc_10009fc8
  %v0_10009fd4 = call i32 @function_1000a89c()
  %v0_10009fd8 = load i32, i32* @r27, align 4
  %v1_10009fd8 = load i32, i32* @r29, align 4
  %v0_10009fe0 = load i32, i32* @r31, align 4
  %v2_10009fd8 = sub i32 12, %v0_10009fd8
  %v1_10009fdc = add i32 %v2_10009fd8, %v1_10009fd8
  %v2_10009fe0 = sub i32 %v1_10009fdc, %v0_10009fe0
  store i32 268476392, i32* @lr, align 4
  %v1_10009fe4 = call i32 @function_1000b0bc(i32 %v2_10009fe0)
  br label %dec_label_pc_10009ff0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009f94, %dec_label_pc_10009fcc
  %v0_10009ff0 = call i32 @function_1000a89c()
  br label %dec_label_pc_10009ff4

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009f08, %dec_label_pc_10009ff0
  %.0 = phi i32 [ undef, %dec_label_pc_10009f08 ], [ %v0_10009ff0, %dec_label_pc_10009ff0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009fb0, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b0bc, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10009ff0, { 1, 0 }
  uselistorder label %dec_label_pc_10009fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10009fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10009f94, { 1, 0 }
}

define i32 @function_1000a008(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a008:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a008 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a008, label %dec_label_pc_1000a024, label %dec_label_pc_1000a030

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a008
  store i32 ptrtoint ([3 x i8]* @global_var_1000a028.314 to i32), i32* @lr, align 4
  %v0_1000a024 = call i32 @function_10009f08()
  br label %dec_label_pc_1000a03c

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a008
  %v3_1000a030 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a030, label %dec_label_pc_1000a03c, label %dec_label_pc_1000a048

dec_label_pc_1000a03c:                            ; preds = %dec_label_pc_1000a030, %dec_label_pc_1000a024
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a024 ], [ %arg2, %dec_label_pc_1000a030 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268476480, i32* @lr, align 4
  %v0_1000a03c = call i32 @function_10009d40()
  store i32 %v0_1000a03c, i32* @r28, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a030
  %v1_1000a048 = add i32 %arg2, 7
  %v1_1000a04c = add i32 %arg1, -4
  store i32 %v1_1000a04c, i32* %r27.global-to-local, align 4
  %v1_1000a050 = call i32 @__asm_rlwinm(i32 %v1_1000a048, i32 0, i32 0, i32 29)
  store i32 %v1_1000a050, i32* @r31, align 4
  %v2_1000a054 = inttoptr i32 %v1_1000a04c to i32*
  %v3_1000a054 = load i32, i32* %v2_1000a054, align 4
  store i32 %v3_1000a054, i32* @r30, align 4
  %v2_1000a058 = icmp ugt i32 %v1_1000a050, 11
  br i1 %v2_1000a058, label %dec_label_pc_1000a064, label %dec_label_pc_1000a060

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a048
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a064

dec_label_pc_1000a064:                            ; preds = %dec_label_pc_1000a048, %dec_label_pc_1000a060
  %v0_1000a0e4 = phi i32 [ %v1_1000a050, %dec_label_pc_1000a048 ], [ 12, %dec_label_pc_1000a060 ]
  %v3_1000a064 = icmp ugt i32 %v0_1000a0e4, %v3_1000a054
  br i1 %v3_1000a064, label %dec_label_pc_1000a06c, label %dec_label_pc_1000a0e4

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a064
  store i32 ptrtoint (i32* @global_var_1001c248.306 to i32), i32* @r29, align 4
  %v0_1000a078 = call i32 @function_1000a89c()
  %v0_1000a080 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a080 = load i32, i32* @r30, align 4
  %v2_1000a080 = add i32 %v1_1000a080, %v0_1000a080
  %v1_1000a084 = load i32, i32* @r31, align 4
  %v2_1000a084 = sub i32 %v1_1000a084, %v1_1000a080
  %v4_1000a08c = call i32 @function_1000a1d8(i32* nonnull @global_var_1001c170, i32 %v2_1000a080, i32 %v2_1000a084)
  store i32 %v4_1000a08c, i32* %r27.global-to-local, align 4
  %v0_1000a098 = call i32 @function_1000a89c()
  %v3_1000a09c = icmp eq i32 %v4_1000a08c, 0
  br i1 %v3_1000a09c, label %dec_label_pc_1000a0b0, label %dec_label_pc_1000a0a4

dec_label_pc_1000a0a4:                            ; preds = %dec_label_pc_1000a06c
  %v0_1000a0a4 = load i32, i32* @r30, align 4
  %v2_1000a0a4 = add i32 %v0_1000a0a4, %v4_1000a08c
  %v1_1000a0a8 = load i32, i32* @r28, align 4
  %v2_1000a0a8 = add i32 %v1_1000a0a8, -4
  %v3_1000a0a8 = inttoptr i32 %v2_1000a0a8 to i32*
  store i32 %v2_1000a0a4, i32* %v3_1000a0a8, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a0b0:                            ; preds = %dec_label_pc_1000a06c
  %v0_1000a0b0 = load i32, i32* @r31, align 4
  %v1_1000a0b0 = add i32 %v0_1000a0b0, -4
  store i32 %v1_1000a0b0, i32* @r3, align 4
  store i32 268476600, i32* @lr, align 4
  %v0_1000a0b4 = call i32 @function_10009d40()
  store i32 %v0_1000a0b4, i32* @r3, align 4
  store i32 %v0_1000a0b4, i32* @r31, align 4
  %v3_1000a0b8 = icmp eq i32 %v0_1000a0b4, 0
  br i1 %v3_1000a0b8, label %dec_label_pc_1000a0c0, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c0:                            ; preds = %dec_label_pc_1000a0b0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0b0
  %v0_1000a0c8 = load i32, i32* @r28, align 4
  store i32 %v0_1000a0c8, i32* @r4, align 4
  %v0_1000a0cc = load i32, i32* @r30, align 4
  %v1_1000a0cc = add i32 %v0_1000a0cc, -4
  store i32 %v1_1000a0cc, i32* @r5, align 4
  store i32 268476628, i32* @lr, align 4
  %v0_1000a0d0 = call i32 @function_1000b2f0()
  %v0_1000a0d4 = load i32, i32* @r28, align 4
  store i32 %v0_1000a0d4, i32* @r3, align 4
  store i32 268476636, i32* @lr, align 4
  %v0_1000a0d8 = call i32 @function_10009f08()
  %v0_1000a0dc = load i32, i32* @r31, align 4
  store i32 %v0_1000a0dc, i32* @r28, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a064
  %v1_1000a0e4 = add i32 %v0_1000a0e4, 28
  %v3_1000a0e8 = icmp ugt i32 %v1_1000a0e4, %v3_1000a054
  br i1 %v3_1000a0e8, label %dec_label_pc_1000a120, label %dec_label_pc_1000a0f0

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0e4
  store i32 ptrtoint (i32* @global_var_1001c248.306 to i32), i32* @r29, align 4
  %v0_1000a0fc = call i32 @function_1000a89c()
  %v0_1000a104 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a104 = load i32, i32* @r31, align 4
  %v2_1000a104 = add i32 %v1_1000a104, %v0_1000a104
  %v1_1000a108 = load i32, i32* @r30, align 4
  %v2_1000a108 = sub i32 %v1_1000a108, %v1_1000a104
  store i32 268476692, i32* @lr, align 4
  %v4_1000a110 = call i32 @function_1000a2bc(i32* nonnull @global_var_1001c170, i32 %v2_1000a104, i32 %v2_1000a108)
  %v0_1000a118 = call i32 @function_1000a89c()
  %v0_1000a11c = load i32, i32* @r31, align 4
  %v1_1000a11c = load i32, i32* @r28, align 4
  %v2_1000a11c = add i32 %v1_1000a11c, -4
  %v3_1000a11c = inttoptr i32 %v2_1000a11c to i32*
  store i32 %v0_1000a11c, i32* %v3_1000a11c, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a0e4, %dec_label_pc_1000a0c8, %dec_label_pc_1000a0c0, %dec_label_pc_1000a0a4, %dec_label_pc_1000a03c, %dec_label_pc_1000a0f0
  %v0_1000a124 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a124

; uselistorder directives
  uselistorder i32 %v1_1000a104, { 1, 0 }
  uselistorder i32 %v4_1000a08c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a080, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c170, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_10009d40, { 2, 1, 0, 5, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_10009f08, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a120, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a064, { 1, 0 }
}

define i32 @function_1000a138(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a138:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a138 = inttoptr i32 %arg2 to i32*
  %v2_1000a138 = load i32, i32* %v1_1000a138, align 4
  %v1_1000a13c = add i32 %v2_1000a138, 3
  store i32 %v1_1000a13c, i32* %r9.global-to-local, align 4
  %v1_1000a140 = call i32 @__asm_rlwinm(i32 %v1_1000a13c, i32 0, i32 0, i32 29)
  %v2_1000a144 = icmp ugt i32 %v1_1000a140, 11
  br i1 %v2_1000a144, label %dec_label_pc_1000a1c8.preheader, label %dec_label_pc_1000a14c

dec_label_pc_1000a14c:                            ; preds = %dec_label_pc_1000a138
  br label %dec_label_pc_1000a1c8.preheader

dec_label_pc_1000a1c8.preheader:                  ; preds = %dec_label_pc_1000a138, %dec_label_pc_1000a14c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a14c ], [ %v1_1000a140, %dec_label_pc_1000a138 ]
  %v0_1000a1ac = phi i32 [ 12, %dec_label_pc_1000a14c ], [ %v1_1000a140, %dec_label_pc_1000a138 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a1c85 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a1c85, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a158

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a1c8.preheader, %dec_label_pc_1000a1c4
  %v0_1000a1c4 = phi i32 [ %storemerge, %dec_label_pc_1000a1c4 ], [ %storemerge2, %dec_label_pc_1000a1c8.preheader ]
  %v1_1000a158 = inttoptr i32 %v0_1000a1c4 to i32*
  %v2_1000a158 = load i32, i32* %v1_1000a158, align 4
  store i32 %v2_1000a158, i32* %r10.global-to-local, align 4
  %v2_1000a15c = icmp ult i32 %v2_1000a158, %v0_1000a1ac
  br i1 %v2_1000a15c, label %dec_label_pc_1000a1c4, label %dec_label_pc_1000a164

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a158
  %v1_1000a164 = add i32 %v0_1000a1ac, 44
  %v2_1000a168 = icmp ult i32 %v2_1000a158, %v1_1000a164
  br i1 %v2_1000a168, label %dec_label_pc_1000a170, label %dec_label_pc_1000a1ac

dec_label_pc_1000a170:                            ; preds = %dec_label_pc_1000a164
  %v1_1000a170 = add i32 %v0_1000a1c4, 4
  %v2_1000a170 = inttoptr i32 %v1_1000a170 to i32*
  %v3_1000a170 = load i32, i32* %v2_1000a170, align 4
  store i32 %v3_1000a170, i32* %r11.global-to-local, align 4
  %v3_1000a174 = icmp eq i32 %v3_1000a170, 0
  br i1 %v3_1000a174, label %dec_label_pc_1000a184, label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a170
  %v1_1000a17c = add i32 %v0_1000a1c4, 8
  %v2_1000a17c = inttoptr i32 %v1_1000a17c to i32*
  %v3_1000a17c = load i32, i32* %v2_1000a17c, align 4
  %v2_1000a180 = add i32 %v3_1000a170, 8
  %v3_1000a180 = inttoptr i32 %v2_1000a180 to i32*
  store i32 %v3_1000a17c, i32* %v3_1000a180, align 4
  %v0_1000a184.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a1a0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a184

dec_label_pc_1000a184:                            ; preds = %dec_label_pc_1000a170, %dec_label_pc_1000a17c
  %v0_1000a1a0 = phi i32 [ %v2_1000a158, %dec_label_pc_1000a170 ], [ %v0_1000a1a0.pre, %dec_label_pc_1000a17c ]
  %v0_1000a184 = phi i32 [ %v0_1000a1c4, %dec_label_pc_1000a170 ], [ %v0_1000a184.pre, %dec_label_pc_1000a17c ]
  %v1_1000a184 = add i32 %v0_1000a184, 8
  %v2_1000a184 = inttoptr i32 %v1_1000a184 to i32*
  %v3_1000a184 = load i32, i32* %v2_1000a184, align 4
  %v1_1000a188 = add i32 %v0_1000a184, 4
  %v2_1000a188 = inttoptr i32 %v1_1000a188 to i32*
  %v3_1000a188 = load i32, i32* %v2_1000a188, align 4
  %v3_1000a18c = icmp eq i32 %v3_1000a184, 0
  store i32 %v0_1000a1a0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a18c, label %dec_label_pc_1000a1a0, label %dec_label_pc_1000a194

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a184
  %v2_1000a198 = add i32 %v3_1000a184, 4
  %v3_1000a198 = inttoptr i32 %v2_1000a198 to i32*
  store i32 %v3_1000a188, i32* %v3_1000a198, align 4
  br label %dec_label_pc_1000a1b4

dec_label_pc_1000a1a0:                            ; preds = %dec_label_pc_1000a184
  store i32 %v3_1000a188, i32* %arg1, align 4
  br label %dec_label_pc_1000a1b4

dec_label_pc_1000a1ac:                            ; preds = %dec_label_pc_1000a164
  %v2_1000a1ac = sub i32 %v2_1000a158, %v0_1000a1ac
  store i32 %v2_1000a1ac, i32* %v1_1000a158, align 4
  br label %dec_label_pc_1000a1b4

dec_label_pc_1000a1b4:                            ; preds = %dec_label_pc_1000a1a0, %dec_label_pc_1000a194, %dec_label_pc_1000a1ac
  %v0_1000a1b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a1b4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a1b4 = sub i32 %v1_1000a1b4, %v0_1000a1b4
  store i32 %v2_1000a1b4, i32* %r9.global-to-local, align 4
  %v0_1000a1b8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a1b8, i32* %v1_1000a138, align 4
  %v0_1000a1bc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a1bc = add i32 %v0_1000a1bc, 12
  ret i32 %v1_1000a1bc

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a158
  %v1_1000a1c4 = add i32 %v0_1000a1c4, 4
  %storemerge.in = inttoptr i32 %v1_1000a1c4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a1c8 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a1c8, label %dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge, label %dec_label_pc_1000a158

dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge: ; preds = %dec_label_pc_1000a1c4
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1c8.dec_label_pc_1000a1d0_crit_edge, %dec_label_pc_1000a1c8.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a184, { 1, 0 }
  uselistorder i32 %v2_1000a158, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a1c4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a1ac, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a184, { 1, 0 }
  uselistorder label %dec_label_pc_1000a158, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1c8.preheader, { 1, 0 }
}

define i32 @function_1000a1d8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a1d8:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a1d8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a1d8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a1e0 = add i32 %arg3, 3
  %v3_1000a2643 = icmp eq i32 %v2_1000a1d8, 0
  br i1 %v3_1000a2643, label %dec_label_pc_1000a26c, label %dec_label_pc_1000a1e8

dec_label_pc_1000a1e8:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a260
  %v0_1000a260 = phi i32 [ %v3_1000a260, %dec_label_pc_1000a260 ], [ %v2_1000a1d8, %dec_label_pc_1000a1d8 ]
  %v1_1000a1e8 = inttoptr i32 %v0_1000a260 to i32*
  %v2_1000a1e8 = load i32, i32* %v1_1000a1e8, align 4
  %v2_1000a1ec = sub i32 %v0_1000a260, %v2_1000a1e8
  %v1_1000a1f0 = add i32 %v2_1000a1ec, 12
  %v3_1000a1f4 = icmp ugt i32 %v1_1000a1f0, %arg2
  br i1 %v3_1000a1f4, label %dec_label_pc_1000a260, label %dec_label_pc_1000a1fc

dec_label_pc_1000a1fc:                            ; preds = %dec_label_pc_1000a1e8
  %v4_1000a1f4 = icmp eq i32 %v1_1000a1f0, %arg2
  br i1 %v4_1000a1f4, label %dec_label_pc_1000a204, label %dec_label_pc_1000a26c

dec_label_pc_1000a204:                            ; preds = %dec_label_pc_1000a1fc
  %v1_1000a204 = call i32 @__asm_rlwinm(i32 %v1_1000a1e0, i32 0, i32 0, i32 29)
  %v2_1000a208 = icmp ult i32 %v2_1000a1e8, %v1_1000a204
  br i1 %v2_1000a208, label %dec_label_pc_1000a26c, label %dec_label_pc_1000a210

dec_label_pc_1000a210:                            ; preds = %dec_label_pc_1000a204
  %v1_1000a210 = add i32 %v1_1000a204, 44
  %v2_1000a214 = icmp ult i32 %v2_1000a1e8, %v1_1000a210
  br i1 %v2_1000a214, label %dec_label_pc_1000a21c, label %dec_label_pc_1000a250

dec_label_pc_1000a21c:                            ; preds = %dec_label_pc_1000a210
  %v0_1000a21c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a21c = add i32 %v0_1000a21c, 4
  %v2_1000a21c = inttoptr i32 %v1_1000a21c to i32*
  %v3_1000a21c = load i32, i32* %v2_1000a21c, align 4
  %v3_1000a220 = icmp eq i32 %v3_1000a21c, 0
  br i1 %v3_1000a220, label %dec_label_pc_1000a230, label %dec_label_pc_1000a228

dec_label_pc_1000a228:                            ; preds = %dec_label_pc_1000a21c
  %v1_1000a228 = add i32 %v0_1000a21c, 8
  %v2_1000a228 = inttoptr i32 %v1_1000a228 to i32*
  %v3_1000a228 = load i32, i32* %v2_1000a228, align 4
  %v2_1000a22c = add i32 %v3_1000a21c, 8
  %v3_1000a22c = inttoptr i32 %v2_1000a22c to i32*
  store i32 %v3_1000a228, i32* %v3_1000a22c, align 4
  %v0_1000a230.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a230

dec_label_pc_1000a230:                            ; preds = %dec_label_pc_1000a21c, %dec_label_pc_1000a228
  %v0_1000a230 = phi i32 [ %v0_1000a21c, %dec_label_pc_1000a21c ], [ %v0_1000a230.pre, %dec_label_pc_1000a228 ]
  %v1_1000a230 = add i32 %v0_1000a230, 8
  %v2_1000a230 = inttoptr i32 %v1_1000a230 to i32*
  %v3_1000a230 = load i32, i32* %v2_1000a230, align 4
  %v1_1000a234 = add i32 %v0_1000a230, 4
  %v2_1000a234 = inttoptr i32 %v1_1000a234 to i32*
  %v3_1000a234 = load i32, i32* %v2_1000a234, align 4
  %v3_1000a238 = icmp eq i32 %v3_1000a230, 0
  br i1 %v3_1000a238, label %dec_label_pc_1000a248, label %dec_label_pc_1000a240

dec_label_pc_1000a240:                            ; preds = %dec_label_pc_1000a230
  %v2_1000a240 = add i32 %v3_1000a230, 4
  %v3_1000a240 = inttoptr i32 %v2_1000a240 to i32*
  store i32 %v3_1000a234, i32* %v3_1000a240, align 4
  ret i32 %v2_1000a1e8

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a230
  %v1_1000a248 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a248 = inttoptr i32 %v1_1000a248 to i32*
  store i32 %v3_1000a234, i32* %v2_1000a248, align 4
  ret i32 %v2_1000a1e8

dec_label_pc_1000a250:                            ; preds = %dec_label_pc_1000a210
  %v2_1000a250 = sub i32 %v2_1000a1e8, %v1_1000a204
  %v1_1000a258 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a258 = inttoptr i32 %v1_1000a258 to i32*
  store i32 %v2_1000a250, i32* %v2_1000a258, align 4
  ret i32 %v1_1000a204

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a1e8
  %v1_1000a260 = add i32 %v0_1000a260, 4
  %v2_1000a260 = inttoptr i32 %v1_1000a260 to i32*
  %v3_1000a260 = load i32, i32* %v2_1000a260, align 4
  store i32 %v3_1000a260, i32* %r11.global-to-local, align 4
  %v3_1000a264 = icmp eq i32 %v3_1000a260, 0
  br i1 %v3_1000a264, label %dec_label_pc_1000a264.dec_label_pc_1000a26c.loopexit_crit_edge, label %dec_label_pc_1000a1e8

dec_label_pc_1000a264.dec_label_pc_1000a26c.loopexit_crit_edge: ; preds = %dec_label_pc_1000a260
  br label %dec_label_pc_1000a26c

dec_label_pc_1000a26c:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a264.dec_label_pc_1000a26c.loopexit_crit_edge, %dec_label_pc_1000a1fc, %dec_label_pc_1000a204
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a260, { 1, 2, 0 }
  uselistorder i32 %v0_1000a230, { 1, 0 }
  uselistorder i32 %v1_1000a204, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a1e8, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v0_1000a260, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a26c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a230, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e8, { 1, 0 }
}

define i32 @function_1000a274(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a274:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a274 = icmp eq i32 %arg3, 0
  %v2_1000a278 = add i32 %arg2, 4
  %v3_1000a278 = inttoptr i32 %v2_1000a278 to i32*
  store i32 %arg4, i32* %v3_1000a278, align 4
  %v2_1000a27c = add i32 %arg2, 8
  %v3_1000a27c = inttoptr i32 %v2_1000a27c to i32*
  store i32 %arg3, i32* %v3_1000a27c, align 4
  br i1 %v3_1000a274, label %dec_label_pc_1000a28c, label %dec_label_pc_1000a284

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a274
  %v2_1000a284 = add i32 %arg3, 4
  %v3_1000a284 = inttoptr i32 %v2_1000a284 to i32*
  store i32 %arg2, i32* %v3_1000a284, align 4
  br label %dec_label_pc_1000a290

dec_label_pc_1000a28c:                            ; preds = %dec_label_pc_1000a274
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a290

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a284, %dec_label_pc_1000a28c
  %v3_1000a290 = icmp eq i32 %arg4, 0
  %v0_1000a294 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a290, i32 %v0_1000a294)
  %v2_1000a298 = add i32 %arg4, 8
  %v3_1000a298 = inttoptr i32 %v2_1000a298 to i32*
  store i32 %arg2, i32* %v3_1000a298, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_1000a290, { 1, 0 }
}

define i32 @function_1000a2a0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a2a0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a2a0 = icmp eq i32 %arg3, 0
  br i1 %v3_1000a2a0, label %dec_label_pc_1000a2b0, label %dec_label_pc_1000a2a8

dec_label_pc_1000a2a8:                            ; preds = %dec_label_pc_1000a2a0
  %v2_1000a2a8 = add i32 %arg3, 4
  %v3_1000a2a8 = inttoptr i32 %v2_1000a2a8 to i32*
  store i32 %arg2, i32* %v3_1000a2a8, align 4
  br label %dec_label_pc_1000a2b4

dec_label_pc_1000a2b0:                            ; preds = %dec_label_pc_1000a2a0
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a2b4

dec_label_pc_1000a2b4:                            ; preds = %dec_label_pc_1000a2a8, %dec_label_pc_1000a2b0
  %v2_1000a2b4 = add i32 %arg2, 8
  %v3_1000a2b4 = inttoptr i32 %v2_1000a2b4 to i32*
  store i32 %arg3, i32* %v3_1000a2b4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2b4, { 1, 0 }
}

define i32 @function_1000a2bc(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a2bc:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a2d4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a2d4, i32* @r31, align 4
  %v2_1000a2d8 = add i32 %arg3, %arg2
  store i32 %v2_1000a2d8, i32* %r3.global-to-local, align 4
  %v3_1000a2ec7 = icmp eq i32 %v2_1000a2d4, 0
  %v1_1000a2f08 = add i32 %v2_1000a2d4, 12
  %tmp69 = icmp uge i32 %v1_1000a2f08, %arg2
  %or.cond10 = or i1 %v3_1000a2ec7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a2fc, label %dec_label_pc_1000a2e4

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a2bc, %dec_label_pc_1000a2e4
  %v0_1000a34411 = phi i32 [ %v3_1000a2e8, %dec_label_pc_1000a2e4 ], [ %v2_1000a2d4, %dec_label_pc_1000a2bc ]
  store i32 %v0_1000a34411, i32* %r11.global-to-local, align 4
  %v1_1000a2e8 = add i32 %v0_1000a34411, 4
  %v2_1000a2e8 = inttoptr i32 %v1_1000a2e8 to i32*
  %v3_1000a2e8 = load i32, i32* %v2_1000a2e8, align 4
  store i32 %v3_1000a2e8, i32* @r31, align 4
  %v3_1000a2ec = icmp eq i32 %v3_1000a2e8, 0
  %v1_1000a2f0 = add i32 %v3_1000a2e8, 12
  %tmp6 = icmp uge i32 %v1_1000a2f0, %arg2
  %or.cond = or i1 %v3_1000a2ec, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a2fc, label %dec_label_pc_1000a2e4

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e4, %dec_label_pc_1000a2bc
  %v0_1000a338.lcssa = phi i32 [ 0, %dec_label_pc_1000a2bc ], [ %v0_1000a34411, %dec_label_pc_1000a2e4 ]
  %v0_1000a344.lcssa = phi i32 [ %v2_1000a2d4, %dec_label_pc_1000a2bc ], [ %v3_1000a2e8, %dec_label_pc_1000a2e4 ]
  %v3_1000a2ec.lcssa = phi i1 [ %v3_1000a2ec7, %dec_label_pc_1000a2bc ], [ %v3_1000a2ec, %dec_label_pc_1000a2e4 ]
  br i1 %v3_1000a2ec.lcssa, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a304

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2fc
  %v1_1000a304 = inttoptr i32 %v0_1000a344.lcssa to i32*
  %v2_1000a304 = load i32, i32* %v1_1000a304, align 4
  %v2_1000a308 = sub i32 %v0_1000a344.lcssa, %v2_1000a304
  %v1_1000a30c = add i32 %v2_1000a308, 12
  %v3_1000a310 = icmp ugt i32 %v1_1000a30c, %v2_1000a2d8
  br i1 %v3_1000a310, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a318

dec_label_pc_1000a318:                            ; preds = %dec_label_pc_1000a304
  %v4_1000a310 = icmp eq i32 %v1_1000a30c, %v2_1000a2d8
  %v2_1000a31c = add i32 %v2_1000a304, %arg3
  store i32 %v2_1000a31c, i32* @r29, align 4
  br i1 %v4_1000a310, label %dec_label_pc_1000a324, label %dec_label_pc_1000a354

dec_label_pc_1000a324:                            ; preds = %dec_label_pc_1000a318
  %v3_1000a324 = icmp eq i32 %v0_1000a338.lcssa, 0
  br i1 %v3_1000a324, label %dec_label_pc_1000a3a8, label %dec_label_pc_1000a32c

dec_label_pc_1000a32c:                            ; preds = %dec_label_pc_1000a324
  %v1_1000a32c = add i32 %v0_1000a338.lcssa, 12
  %v4_1000a330 = icmp eq i32 %v1_1000a32c, %arg2
  br i1 %v4_1000a330, label %dec_label_pc_1000a338, label %dec_label_pc_1000a3a8

dec_label_pc_1000a338:                            ; preds = %dec_label_pc_1000a32c
  %v1_1000a338 = inttoptr i32 %v0_1000a338.lcssa to i32*
  %v2_1000a338 = load i32, i32* %v1_1000a338, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000a340 = add i32 %v0_1000a338.lcssa, 8
  %v2_1000a340 = inttoptr i32 %v1_1000a340 to i32*
  %v3_1000a340 = load i32, i32* %v2_1000a340, align 4
  %v2_1000a348 = add i32 %v2_1000a338, %v2_1000a31c
  store i32 %v2_1000a348, i32* @r29, align 4
  %v5_1000a34c = call i32 @function_1000a2a0(i32* %arg1, i32 %v0_1000a344.lcssa, i32 %v3_1000a340, i32 %v2_1000a2d8)
  store i32 %v5_1000a34c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a318
  %v1_1000a354 = add i32 %v0_1000a344.lcssa, 4
  %v2_1000a354 = inttoptr i32 %v1_1000a354 to i32*
  %v3_1000a354 = load i32, i32* %v2_1000a354, align 4
  %v3_1000a358 = icmp eq i32 %v3_1000a354, 0
  br i1 %v3_1000a358, label %dec_label_pc_1000a390, label %dec_label_pc_1000a360

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a354
  %v1_1000a360 = inttoptr i32 %v3_1000a354 to i32*
  %v2_1000a360 = load i32, i32* %v1_1000a360, align 4
  %v2_1000a364 = sub i32 %v3_1000a354, %v2_1000a360
  %v1_1000a368 = add i32 %v2_1000a364, 12
  %v4_1000a36c = icmp eq i32 %v2_1000a2d8, %v1_1000a368
  br i1 %v4_1000a36c, label %dec_label_pc_1000a374, label %dec_label_pc_1000a390

dec_label_pc_1000a374:                            ; preds = %dec_label_pc_1000a360
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000a380 = add i32 %v2_1000a360, %v2_1000a31c
  store i32 %v2_1000a380, i32* @r29, align 4
  store i32 %v3_1000a354, i32* @r31, align 4
  %v5_1000a388 = call i32 @function_1000a2a0(i32* %arg1, i32 %v3_1000a354, i32 %v0_1000a338.lcssa, i32 %v2_1000a2d8)
  store i32 %v5_1000a388, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a360, %dec_label_pc_1000a354
  %v2_1000a390 = add i32 %v0_1000a344.lcssa, %arg3
  store i32 %v2_1000a390, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268477352, i32* @lr, align 4
  %v5_1000a3a4 = call i32 @function_1000a274(i32* %arg1, i32 %v2_1000a390, i32 %v0_1000a338.lcssa, i32 %v3_1000a354)
  store i32 %v5_1000a3a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a32c, %dec_label_pc_1000a324, %dec_label_pc_1000a374, %dec_label_pc_1000a338, %dec_label_pc_1000a390
  %v0_1000a3a8 = load i32, i32* @r31, align 4
  store i32 %v0_1000a3a8, i32* @r30, align 4
  %v0_1000a3ac = load i32, i32* @r29, align 4
  %v2_1000a3ac = inttoptr i32 %v0_1000a3a8 to i32*
  store i32 %v0_1000a3ac, i32* %v2_1000a3ac, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a304, %dec_label_pc_1000a2fc
  %v2_1000a3b4 = add i32 %v2_1000a2d8, -12
  %v3_1000a3b4 = inttoptr i32 %v2_1000a3b4 to i32*
  store i32 %arg3, i32* %v3_1000a3b4, align 4
  %v0_1000a3b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a3b8 = add i32 %v0_1000a3b8, -12
  store i32 %v1_1000a3b8, i32* @r30, align 4
  %v0_1000a3bc = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a3c0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a3c0, i32* %r3.global-to-local, align 4
  %v0_1000a3c4 = load i32, i32* @r31, align 4
  store i32 268477392, i32* @lr, align 4
  %v4_1000a3cc = inttoptr i32 %v0_1000a3c0 to i32*
  %v5_1000a3cc = call i32 @function_1000a274(i32* %v4_1000a3cc, i32 %v1_1000a3b8, i32 %v0_1000a3bc, i32 %v0_1000a3c4)
  store i32 %v5_1000a3cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a3a8, %dec_label_pc_1000a3b4
  %v0_1000a3d4 = load i32, i32* @r30, align 4
  store i32 %v0_1000a3d4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a3d4

; uselistorder directives
  uselistorder i32 %v3_1000a354, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000a30c, { 1, 0 }
  uselistorder i32 %v0_1000a344.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000a338.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a2e8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a2d8, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 9, 5, 1, 10, 11, 2, 3, 4, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a2a0, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a3d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3a8, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a2e4, { 1, 0 }
}

define i32 @function_1000a3e8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a3e8:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000a420 = load i32, i32* bitcast (i32** @global_var_1001c17c.317 to i32*), align 4
  %v2_1000a42c27 = load i8, i8* %arg1, align 1
  %v3_1000a42c28 = zext i8 %v2_1000a42c27 to i32
  %v1_1000a43029 = mul nuw nsw i32 %v3_1000a42c28, 2
  %v2_1000a43430 = add i32 %v1_1000a43029, %v3_1000a420
  %v3_1000a43431 = inttoptr i32 %v2_1000a43430 to i16*
  %v4_1000a43432 = load i16, i16* %v3_1000a43431, align 2
  %v1_1000a43834 = and i16 %v4_1000a43432, 32
  %v3_1000a43835 = icmp eq i16 %v1_1000a43834, 0
  br i1 %v3_1000a43835, label %dec_label_pc_1000a440, label %dec_label_pc_1000a428

dec_label_pc_1000a428:                            ; preds = %dec_label_pc_1000a3e8, %dec_label_pc_1000a428
  %v0_1000a46036 = phi i32 [ %v1_1000a428, %dec_label_pc_1000a428 ], [ %tmp, %dec_label_pc_1000a3e8 ]
  %v1_1000a428 = add i32 %v0_1000a46036, 1
  store i32 %v1_1000a428, i32* %r31.global-to-local, align 4
  %v1_1000a42c = inttoptr i32 %v1_1000a428 to i8*
  %v2_1000a42c = load i8, i8* %v1_1000a42c, align 1
  %v3_1000a42c = zext i8 %v2_1000a42c to i32
  %v1_1000a430 = mul nuw nsw i32 %v3_1000a42c, 2
  %v2_1000a434 = add i32 %v1_1000a430, %v3_1000a420
  %v3_1000a434 = inttoptr i32 %v2_1000a434 to i16*
  %v4_1000a434 = load i16, i16* %v3_1000a434, align 2
  %v1_1000a438 = and i16 %v4_1000a434, 32
  %v3_1000a438 = icmp eq i16 %v1_1000a438, 0
  br i1 %v3_1000a438, label %dec_label_pc_1000a440, label %dec_label_pc_1000a428

dec_label_pc_1000a440:                            ; preds = %dec_label_pc_1000a428, %dec_label_pc_1000a3e8
  %v0_1000a460.lcssa = phi i32 [ %tmp, %dec_label_pc_1000a3e8 ], [ %v1_1000a428, %dec_label_pc_1000a428 ]
  %v2_1000a42c.lcssa = phi i8 [ %v2_1000a42c27, %dec_label_pc_1000a3e8 ], [ %v2_1000a42c, %dec_label_pc_1000a428 ]
  %v3_1000a440 = icmp eq i8 %v2_1000a42c.lcssa, 43
  br i1 %v3_1000a440, label %dec_label_pc_1000a460, label %dec_label_pc_1000a448

dec_label_pc_1000a448:                            ; preds = %dec_label_pc_1000a440
  %v3_1000a448 = icmp eq i8 %v2_1000a42c.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000a448, label %dec_label_pc_1000a460, label %dec_label_pc_1000a464

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a440, %dec_label_pc_1000a448
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a448 ], [ 0, %dec_label_pc_1000a440 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000a460 = add i32 %v0_1000a460.lcssa, 1
  store i32 %v1_1000a460, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a464

dec_label_pc_1000a464:                            ; preds = %dec_label_pc_1000a448, %dec_label_pc_1000a460
  %v1_1000a464 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000a464 = icmp eq i32 %v1_1000a464, 0
  br i1 %v4_1000a464, label %dec_label_pc_1000a470, label %dec_label_pc_1000a464.dec_label_pc_1000a4ac_crit_edge

dec_label_pc_1000a464.dec_label_pc_1000a4ac_crit_edge: ; preds = %dec_label_pc_1000a464
  %v0_1000a4ac.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a4ac

dec_label_pc_1000a470:                            ; preds = %dec_label_pc_1000a464
  %v0_1000a470 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a470 = inttoptr i32 %v0_1000a470 to i8*
  %v2_1000a470 = load i8, i8* %v1_1000a470, align 1
  %v0_1000a474 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a474 = add i32 %v0_1000a474, 10
  store i32 %v1_1000a474, i32* %r30.global-to-local, align 4
  %v3_1000a478 = icmp eq i8 %v2_1000a470, 48
  br i1 %v3_1000a478, label %dec_label_pc_1000a480, label %dec_label_pc_1000a4a0

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a470
  %v1_1000a480 = add i32 %v0_1000a470, 1
  %v2_1000a480 = inttoptr i32 %v1_1000a480 to i8*
  %v3_1000a480 = load i8, i8* %v2_1000a480, align 1
  %v4_1000a480 = zext i8 %v3_1000a480 to i32
  store i32 %v1_1000a480, i32* %r31.global-to-local, align 4
  %v1_1000a484 = add i32 %v0_1000a474, 8
  store i32 %v1_1000a484, i32* %r30.global-to-local, align 4
  %v1_1000a488 = or i32 %v4_1000a480, 32
  %v3_1000a490 = icmp eq i32 %v1_1000a488, 120
  br i1 %v3_1000a490, label %dec_label_pc_1000a498, label %dec_label_pc_1000a4a0

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a480
  %v1_1000a498 = mul i32 %v1_1000a484, 2
  store i32 %v1_1000a498, i32* %r30.global-to-local, align 4
  %v1_1000a49c = add i32 %v0_1000a470, 2
  store i32 %v1_1000a49c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a4a0

dec_label_pc_1000a4a0:                            ; preds = %dec_label_pc_1000a480, %dec_label_pc_1000a470, %dec_label_pc_1000a498
  %v0_1000a55415 = phi i32 [ %v1_1000a480, %dec_label_pc_1000a498 ], [ %tmp, %dec_label_pc_1000a470 ], [ %v1_1000a480, %dec_label_pc_1000a480 ]
  %v0_1000a4a0 = phi i32 [ %v1_1000a498, %dec_label_pc_1000a498 ], [ %v1_1000a474, %dec_label_pc_1000a470 ], [ %v1_1000a484, %dec_label_pc_1000a480 ]
  %tmp22 = icmp slt i32 %v0_1000a4a0, 17
  br i1 %tmp22, label %dec_label_pc_1000a4ac, label %dec_label_pc_1000a4a8

dec_label_pc_1000a4a8:                            ; preds = %dec_label_pc_1000a4a0
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a4ac

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a464.dec_label_pc_1000a4ac_crit_edge, %dec_label_pc_1000a4a0, %dec_label_pc_1000a4a8
  %v0_1000a55414 = phi i32 [ %tmp, %dec_label_pc_1000a464.dec_label_pc_1000a4ac_crit_edge ], [ %v0_1000a55415, %dec_label_pc_1000a4a0 ], [ %v0_1000a55415, %dec_label_pc_1000a4a8 ]
  %v1_1000a4c0 = phi i32 [ %v0_1000a4ac.pre, %dec_label_pc_1000a464.dec_label_pc_1000a4ac_crit_edge ], [ %v0_1000a4a0, %dec_label_pc_1000a4a0 ], [ 16, %dec_label_pc_1000a4a8 ]
  %v1_1000a4ac = add i32 %v1_1000a4c0, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000a4b4 = icmp ugt i32 %v1_1000a4ac, 34
  br i1 %v2_1000a4b4, label %dec_label_pc_1000a54c, label %dec_label_pc_1000a4bc

dec_label_pc_1000a4bc:                            ; preds = %dec_label_pc_1000a4ac
  %v2_1000a4c0 = udiv i32 -1, %v1_1000a4c0
  store i32 %v2_1000a4c0, i32* @r29, align 4
  %v2_1000a4c4 = mul i32 %v2_1000a4c0, %v1_1000a4c0
  %v1_1000a4c8 = sub i32 -1, %v2_1000a4c4
  %v1_1000a4cc = urem i32 %v1_1000a4c8, 256
  store i32 %v1_1000a4cc, i32* @r27, align 4
  %v0_1000a4d8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a4d8

dec_label_pc_1000a4d4:                            ; preds = %dec_label_pc_1000a540, %dec_label_pc_1000a528
  %v1_1000a4dc.pre = phi i32 [ %v1_1000a4e0, %dec_label_pc_1000a540 ], [ %v1_1000a4dc.pre.pre, %dec_label_pc_1000a528 ]
  %v0_1000a4dc.pre = phi i32 [ %v2_1000a544, %dec_label_pc_1000a540 ], [ %v0_1000a4dc.pre.pre, %dec_label_pc_1000a528 ]
  %v0_1000a4d4 = phi i32 [ %v1_1000a4e4, %dec_label_pc_1000a540 ], [ %v0_1000a4d4.pre, %dec_label_pc_1000a528 ]
  br label %dec_label_pc_1000a4d8

dec_label_pc_1000a4d8:                            ; preds = %dec_label_pc_1000a4bc, %dec_label_pc_1000a4d4
  %v0_1000a55412 = phi i32 [ %v0_1000a55414, %dec_label_pc_1000a4bc ], [ %v0_1000a4d4, %dec_label_pc_1000a4d4 ]
  %v0_1000a4e4 = phi i32 [ %v0_1000a4d8.pre, %dec_label_pc_1000a4bc ], [ %v0_1000a4d4, %dec_label_pc_1000a4d4 ]
  %v1_1000a4e0 = phi i32 [ %v2_1000a4c0, %dec_label_pc_1000a4bc ], [ %v1_1000a4dc.pre, %dec_label_pc_1000a4d4 ]
  %v0_1000a540 = phi i32 [ 0, %dec_label_pc_1000a4bc ], [ %v0_1000a4dc.pre, %dec_label_pc_1000a4d4 ]
  %v1_1000a4d8 = inttoptr i32 %v0_1000a4e4 to i8*
  %v2_1000a4d8 = load i8, i8* %v1_1000a4d8, align 1
  %v3_1000a4d8 = zext i8 %v2_1000a4d8 to i32
  %v3_1000a4dc = icmp ugt i32 %v0_1000a540, %v1_1000a4e0
  %v1_1000a4e4 = add i32 %v0_1000a4e4, 1
  store i32 %v1_1000a4e4, i32* %r31.global-to-local, align 4
  %v1_1000a4e8 = add nsw i32 %v3_1000a4d8, -48
  %v1_1000a4ec = or i32 %v3_1000a4d8, 32
  %v1_1000a4f0 = urem i32 %v1_1000a4e8, 256
  %tmp23 = icmp ult i32 %v1_1000a4f0, 10
  br i1 %tmp23, label %dec_label_pc_1000a510, label %dec_label_pc_1000a500

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4d8
  %tmp24 = icmp ult i32 %v1_1000a4ec, 97
  br i1 %tmp24, label %dec_label_pc_1000a510, label %dec_label_pc_1000a50c

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a500
  %v1_1000a500 = add nsw i32 %v1_1000a4ec, -87
  %v1_1000a50c = urem i32 %v1_1000a500, 256
  br label %dec_label_pc_1000a510

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a500, %dec_label_pc_1000a4d8, %dec_label_pc_1000a50c
  %v1_1000a544 = phi i32 [ 40, %dec_label_pc_1000a500 ], [ %v1_1000a4f0, %dec_label_pc_1000a4d8 ], [ %v1_1000a50c, %dec_label_pc_1000a50c ]
  %v1_1000a510 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a510 = icmp slt i32 %v1_1000a544, %v1_1000a510
  br i1 %v2_1000a510, label %dec_label_pc_1000a518, label %dec_label_pc_1000a54c

dec_label_pc_1000a518:                            ; preds = %dec_label_pc_1000a510
  br i1 %v3_1000a4dc, label %dec_label_pc_1000a528, label %dec_label_pc_1000a51c

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a518
  %v1_1000a51c = load i32, i32* @r27, align 4
  %v0_1000a520.not = icmp ne i32 %v0_1000a540, %v1_1000a4e0
  %tmp25 = icmp ule i32 %v1_1000a544, %v1_1000a51c
  %or.cond = or i1 %tmp25, %v0_1000a520.not
  br i1 %or.cond, label %dec_label_pc_1000a540, label %dec_label_pc_1000a528

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a51c, %dec_label_pc_1000a518
  %v0_1000a528 = call i32 @function_1000953c()
  %v0_1000a52c = load i32, i32* @r28, align 4
  %v1_1000a52c = load i32, i32* @r26, align 4
  %v2_1000a52c = and i32 %v1_1000a52c, %v0_1000a52c
  store i32 %v2_1000a52c, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000a538 = inttoptr i32 %v0_1000a528 to i32*
  store i32 34, i32* %v2_1000a538, align 4
  %v0_1000a4d4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000a4dc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a4dc.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a4d4

dec_label_pc_1000a540:                            ; preds = %dec_label_pc_1000a51c
  %v2_1000a540 = mul i32 %v1_1000a510, %v0_1000a540
  %v2_1000a544 = add i32 %v2_1000a540, %v1_1000a544
  store i32 %v2_1000a544, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a4d4

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a510, %dec_label_pc_1000a4ac
  %v0_1000a554 = phi i32 [ %v0_1000a55414, %dec_label_pc_1000a4ac ], [ %v0_1000a55412, %dec_label_pc_1000a510 ]
  %v0_1000a54c = load i32, i32* @r25, align 4
  %v3_1000a54c = icmp eq i32 %v0_1000a54c, 0
  br i1 %v3_1000a54c, label %dec_label_pc_1000a558, label %dec_label_pc_1000a554

dec_label_pc_1000a554:                            ; preds = %dec_label_pc_1000a54c
  %v2_1000a554 = inttoptr i32 %v0_1000a54c to i32*
  store i32 %v0_1000a554, i32* %v2_1000a554, align 4
  br label %dec_label_pc_1000a558

dec_label_pc_1000a558:                            ; preds = %dec_label_pc_1000a54c, %dec_label_pc_1000a554
  %v0_1000a558 = load i32, i32* @r26, align 4
  %v3_1000a558 = icmp eq i32 %v0_1000a558, 0
  %v0_1000a55c = load i32, i32* @r28, align 4
  %v1_1000a55c = sub i32 0, %v0_1000a55c
  %tmp40 = lshr i32 %v1_1000a55c, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a59c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a558, label %dec_label_pc_1000a58c, label %dec_label_pc_1000a574

dec_label_pc_1000a574:                            ; preds = %dec_label_pc_1000a558
  %v3_1000a574 = icmp ugt i32 %v0_1000a59c.pre.pre, %tmp41
  br i1 %v3_1000a574, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a58c

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a574
  %v0_1000a57c = call i32 @function_1000953c()
  %v2_1000a584 = inttoptr i32 %v0_1000a57c to i32*
  store i32 34, i32* %v2_1000a584, align 4
  %v0_1000a588 = load i32, i32* @r31, align 4
  store i32 %v0_1000a588, i32* %r8.global-to-local, align 4
  %v0_1000a58c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a58c

dec_label_pc_1000a58c:                            ; preds = %dec_label_pc_1000a558, %dec_label_pc_1000a574, %dec_label_pc_1000a57c
  %v0_1000a59c.pre = phi i32 [ %v0_1000a59c.pre.pre, %dec_label_pc_1000a574 ], [ %v0_1000a588, %dec_label_pc_1000a57c ], [ %v0_1000a59c.pre.pre, %dec_label_pc_1000a558 ]
  %v0_1000a58c = phi i32 [ %v0_1000a55c, %dec_label_pc_1000a574 ], [ %v0_1000a58c.pre, %dec_label_pc_1000a57c ], [ %v0_1000a55c, %dec_label_pc_1000a558 ]
  %v3_1000a58c = icmp eq i32 %v0_1000a58c, 0
  br i1 %v3_1000a58c, label %dec_label_pc_1000a598, label %dec_label_pc_1000a594

dec_label_pc_1000a594:                            ; preds = %dec_label_pc_1000a58c
  %v1_1000a594 = sub i32 0, %v0_1000a59c.pre
  store i32 %v1_1000a594, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a598

dec_label_pc_1000a598:                            ; preds = %dec_label_pc_1000a58c, %dec_label_pc_1000a594
  %v0_1000a59c = phi i32 [ %v1_1000a594, %dec_label_pc_1000a594 ], [ %v0_1000a59c.pre, %dec_label_pc_1000a58c ]
  ret i32 %v0_1000a59c

; uselistorder directives
  uselistorder i32 %v0_1000a59c.pre, { 1, 0 }
  uselistorder i32 %v0_1000a59c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000a544, { 1, 0 }
  uselistorder i32 %v1_1000a4f0, { 1, 0 }
  uselistorder i32 %v1_1000a4ec, { 1, 0 }
  uselistorder i32 %v1_1000a4e4, { 1, 0 }
  uselistorder i32 %v3_1000a4d8, { 1, 0 }
  uselistorder i32 %v0_1000a540, { 1, 0, 2 }
  uselistorder i32 %v1_1000a4e0, { 0, 2, 1 }
  uselistorder i32 %v0_1000a4d4, { 1, 0 }
  uselistorder i32 %v2_1000a4c0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a498, { 1, 0 }
  uselistorder i32 %v1_1000a484, { 1, 0, 2 }
  uselistorder i8 %v2_1000a42c.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000a428, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000a420, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a598, { 1, 0 }
  uselistorder label %dec_label_pc_1000a58c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a558, { 1, 0 }
  uselistorder label %dec_label_pc_1000a510, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a4a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a464, { 1, 0 }
  uselistorder label %dec_label_pc_1000a460, { 1, 0 }
  uselistorder label %dec_label_pc_1000a428, { 1, 0 }
}

define i32 @function_1000a5b0() local_unnamed_addr {
dec_label_pc_1000a5b0:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a5c8 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a5d4 = load i32, i32* @r3, align 4
  store i32 %v0_1000a5d4, i32* @r31, align 4
  store i32 %v2_1000a5c8, i32* @r3, align 4
  %v3_1000a5e0 = call i32 @function_1000a8a4(i32 %v2_1000a5c8, i32 ptrtoint ([3 x i8]* @global_var_1000a89c.297 to i32))
  %v0_1000a5e8 = call i32 @function_1000a89c()
  %v3_1000a5f0 = load i32, i32* @global_var_1001c1c0.320, align 4
  %v3_1000a5f4 = icmp eq i32 %v3_1000a5f0, 0
  br i1 %v3_1000a5f4, label %dec_label_pc_1000a608, label %dec_label_pc_1000a5fc

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5b0
  %v0_1000a5fc = load i32, i32* @r31, align 4
  %v3_1000a604 = call i32 @unknown_0(i32 %v0_1000a5fc, i32 268566528)
  br label %dec_label_pc_1000a608

dec_label_pc_1000a608:                            ; preds = %dec_label_pc_1000a5b0, %dec_label_pc_1000a5fc
  store i32 %v2_1000a5c8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a610 = call i32 @function_1000a8a4(i32 %v2_1000a5c8, i32 1)
  store i32 %v2_1000a610, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a618.322 to i32), i32* @lr, align 4
  %v1_1000a614 = call i32 @function_1000a808(i32 %v2_1000a610)
  %v0_1000a62c = load i32, i32* @r31, align 4
  %v1_1000a630 = call i32 @function_1000ac3c(i32 %v0_1000a62c)
  ret i32 %v1_1000a630

; uselistorder directives
  uselistorder i32 %v2_1000a5c8, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a8a4, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a608, { 1, 0 }
}

define i32 @function_1000a634(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a634:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a634 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a634, label %dec_label_pc_1000a7e8, label %dec_label_pc_1000a664.lr.ph

dec_label_pc_1000a664.lr.ph:                      ; preds = %dec_label_pc_1000a634
  %v2_1000a658 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a658, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a66442 = add i32 %v2_1000a658, 132
  %v3_1000a66443 = inttoptr i32 %v2_1000a66442 to i32*
  store i32 0, i32* %v3_1000a66443, align 4
  %v0_1000a66844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a66845 = add i32 %v0_1000a66844, -1
  store i32 %v1_1000a66845, i32* %r11.global-to-local, align 4
  %v1_1000a66c46 = mul i32 %v1_1000a66845, 4
  %v1_1000a67047 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a67048 = add i32 %v1_1000a67047, %v1_1000a66c46
  %v0_1000a67449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a67450 = add i32 %v0_1000a67449, -1
  store i32 %v1_1000a67450, i32* %ctr.global-to-local, align 4
  %v2_1000a67451 = icmp eq i32 %v1_1000a67450, 0
  br i1 %v2_1000a67451, label %dec_label_pc_1000a678, label %dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge

dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge: ; preds = %dec_label_pc_1000a664.lr.ph, %dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge
  %v2_1000a67052 = phi i32 [ %v2_1000a670, %dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge ], [ %v2_1000a67048, %dec_label_pc_1000a664.lr.ph ]
  %v0_1000a664.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a664 = add i32 %v2_1000a67052, 8
  %v3_1000a664 = inttoptr i32 %v2_1000a664 to i32*
  store i32 %v0_1000a664.pre, i32* %v3_1000a664, align 4
  %v0_1000a668 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a668 = add i32 %v0_1000a668, -1
  store i32 %v1_1000a668, i32* %r11.global-to-local, align 4
  %v1_1000a66c = mul i32 %v1_1000a668, 4
  %v1_1000a670 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a670 = add i32 %v1_1000a670, %v1_1000a66c
  %v0_1000a674 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a674 = add i32 %v0_1000a674, -1
  store i32 %v1_1000a674, i32* %ctr.global-to-local, align 4
  %v2_1000a674 = icmp eq i32 %v1_1000a674, 0
  br i1 %v2_1000a674, label %dec_label_pc_1000a678, label %dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge

dec_label_pc_1000a678:                            ; preds = %dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge, %dec_label_pc_1000a664.lr.ph
  %v0_1000a68c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a678 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a678, i32* @r29, align 4
  store i32 %v2_1000a678, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a68c.pre, i32* %stack_var_-440, align 4
  %v0_1000a690 = call i32 @function_10009cf0()
  store i32 %v0_1000a690, i32* %r3.global-to-local, align 4
  %v1_1000a694 = icmp slt i32 %v0_1000a690, 0
  br i1 %v1_1000a694, label %dec_label_pc_1000a7f0, label %dec_label_pc_1000a69c

dec_label_pc_1000a69c:                            ; preds = %dec_label_pc_1000a678
  %v2_1000a69c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000a69c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268478128, i32* @lr, align 4
  %v3_1000a6ac = call i32 @function_10009178(i32 0, i32 %v2_1000a678, i32 %v2_1000a69c)
  store i32 %v3_1000a6ac, i32* %r3.global-to-local, align 4
  %v3_1000a6b0 = icmp eq i32 %v3_1000a6ac, 0
  br i1 %v3_1000a6b0, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a7f0

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a69c
  store i32 %v2_1000a69c, i32* %r3.global-to-local, align 4
  %v2_1000a6c0 = call i32 @function_10009cc8(i32 %v2_1000a69c, i32 17)
  store i32 %v2_1000a6c0, i32* %r3.global-to-local, align 4
  %v3_1000a6c4 = icmp eq i32 %v2_1000a6c0, 0
  br i1 %v3_1000a6c4, label %dec_label_pc_1000a6e4.lr.ph, label %dec_label_pc_1000a7b0

dec_label_pc_1000a6e4.lr.ph:                      ; preds = %dec_label_pc_1000a6b8
  store i32 %v2_1000a658, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a66443, align 4
  %v0_1000a6e833 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a6e834 = add i32 %v0_1000a6e833, -1
  store i32 %v1_1000a6e834, i32* %r11.global-to-local, align 4
  %v1_1000a6ec35 = mul i32 %v1_1000a6e834, 4
  %v1_1000a6f036 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a6f037 = add i32 %v1_1000a6f036, %v1_1000a6ec35
  %v0_1000a6f438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a6f439 = add i32 %v0_1000a6f438, -1
  store i32 %v1_1000a6f439, i32* %ctr.global-to-local, align 4
  %v2_1000a6f440 = icmp eq i32 %v1_1000a6f439, 0
  br i1 %v2_1000a6f440, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge

dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge: ; preds = %dec_label_pc_1000a6e4.lr.ph, %dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge
  %v2_1000a6f041 = phi i32 [ %v2_1000a6f0, %dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge ], [ %v2_1000a6f037, %dec_label_pc_1000a6e4.lr.ph ]
  %v0_1000a6e4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a6e4 = add i32 %v2_1000a6f041, 8
  %v3_1000a6e4 = inttoptr i32 %v2_1000a6e4 to i32*
  store i32 %v0_1000a6e4.pre, i32* %v3_1000a6e4, align 4
  %v0_1000a6e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a6e8 = add i32 %v0_1000a6e8, -1
  store i32 %v1_1000a6e8, i32* %r11.global-to-local, align 4
  %v1_1000a6ec = mul i32 %v1_1000a6e8, 4
  %v1_1000a6f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a6f0 = add i32 %v1_1000a6f0, %v1_1000a6ec
  %v0_1000a6f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a6f4 = add i32 %v0_1000a6f4, -1
  store i32 %v1_1000a6f4, i32* %ctr.global-to-local, align 4
  %v2_1000a6f4 = icmp eq i32 %v1_1000a6f4, 0
  br i1 %v2_1000a6f4, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge, %dec_label_pc_1000a6e4.lr.ph
  store i32 %v2_1000a678, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000a700 = call i32 @function_10009cf0()
  store i32 %v0_1000a700, i32* %r3.global-to-local, align 4
  %v1_1000a704 = icmp slt i32 %v0_1000a700, 0
  br i1 %v1_1000a704, label %dec_label_pc_1000a7f0, label %dec_label_pc_1000a70c

dec_label_pc_1000a70c:                            ; preds = %dec_label_pc_1000a6f8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000a714 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268478236, i32* @lr, align 4
  %v4_1000a718 = call i32 @function_1000b480(i32 17, i32* null, i32 %v2_1000a714)
  store i32 %v4_1000a718, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000a718, -1
  br i1 %tmp30, label %dec_label_pc_1000a74c, label %dec_label_pc_1000a724

dec_label_pc_1000a724:                            ; preds = %dec_label_pc_1000a70c
  %v0_1000a724 = call i32 @function_1000953c()
  store i32 %v0_1000a724, i32* %r3.global-to-local, align 4
  %v1_1000a72c = inttoptr i32 %v0_1000a724 to i32*
  %v2_1000a72c = load i32, i32* %v1_1000a72c, align 4
  store i32 %v2_1000a72c, i32* @r28, align 4
  store i32 %v0_1000a724, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268478272, i32* @lr, align 4
  %v3_1000a73c = call i32 @function_10009178(i32 2, i32 %v2_1000a69c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a744 = load i32, i32* @r28, align 4
  %v1_1000a744 = load i32, i32* @r29, align 4
  %v2_1000a744 = inttoptr i32 %v1_1000a744 to i32*
  store i32 %v0_1000a744, i32* %v2_1000a744, align 4
  %v0_1000a804.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a74c:                            ; preds = %dec_label_pc_1000a70c
  %v3_1000a74c = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000a69c, i32* @r28, align 4
  %v3_1000a758 = icmp eq i32 %v3_1000a74c, 1
  br i1 %v3_1000a758, label %dec_label_pc_1000a760, label %dec_label_pc_1000a794

dec_label_pc_1000a760:                            ; preds = %dec_label_pc_1000a74c
  store i32 %v2_1000a658, i32* %r3.global-to-local, align 4
  store i32 268478316, i32* @lr, align 4
  %v2_1000a768 = call i32 @function_1000b074(i32 %v2_1000a658, i32 %v2_1000a658)
  store i32 %v2_1000a768, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a768, i32* @r31, align 4
  %v0_1000a770 = call i32 @function_1000953c()
  store i32 %v0_1000a770, i32* %r3.global-to-local, align 4
  store i32 %v0_1000a770, i32* @r29, align 4
  %v1_1000a780 = inttoptr i32 %v0_1000a770 to i32*
  %v2_1000a780 = load i32, i32* %v1_1000a780, align 4
  store i32 %v2_1000a780, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268478348, i32* @lr, align 4
  %v3_1000a788 = call i32 @function_10009178(i32 2, i32 %v2_1000a69c, i32 0)
  store i32 %v3_1000a788, i32* %r3.global-to-local, align 4
  %v0_1000a78c = load i32, i32* @r28, align 4
  %v1_1000a78c = load i32, i32* @r29, align 4
  %v2_1000a78c = inttoptr i32 %v1_1000a78c to i32*
  store i32 %v0_1000a78c, i32* %v2_1000a78c, align 4
  %v0_1000a7bc.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a7bc

dec_label_pc_1000a794:                            ; preds = %dec_label_pc_1000a74c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268478372, i32* @lr, align 4
  %v3_1000a7a0 = call i32 @function_10009178(i32 2, i32 %v2_1000a69c, i32 0)
  br label %dec_label_pc_1000a7b0

dec_label_pc_1000a7b0:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a794
  store i32 %v2_1000a658, i32* %r3.global-to-local, align 4
  store i32 268478392, i32* @lr, align 4
  %v2_1000a7b4 = call i32 @function_1000b074(i32 %v2_1000a658, i32 %v2_1000a658)
  store i32 %v2_1000a7b4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a7b4, i32* @r31, align 4
  br label %dec_label_pc_1000a7bc

dec_label_pc_1000a7bc:                            ; preds = %dec_label_pc_1000a760, %dec_label_pc_1000a7b0
  %v0_1000a7bc = phi i32 [ %v0_1000a7bc.pr, %dec_label_pc_1000a760 ], [ %v2_1000a7b4, %dec_label_pc_1000a7b0 ]
  %v3_1000a7bc = icmp eq i32 %v0_1000a7bc, 0
  br i1 %v3_1000a7bc, label %dec_label_pc_1000a7e8, label %dec_label_pc_1000a7c4

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a7bc
  %v3_1000a7d4 = load i32, i32* %stack_var_-440, align 4
  %v0_1000a7d8 = call i32 @__asm_mfcr()
  store i32 %v0_1000a7d8, i32* %r3.global-to-local, align 4
  %v1_1000a7dc = call i32 @__asm_rlwinm(i32 %v0_1000a7d8, i32 30, i32 31, i32 31)
  %v2_1000a7e0 = add i32 %v3_1000a7d4, %v1_1000a7dc
  store i32 %v2_1000a7e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a7e8:                            ; preds = %dec_label_pc_1000a7bc, %dec_label_pc_1000a634
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f0:                            ; preds = %dec_label_pc_1000a69c, %dec_label_pc_1000a6f8, %dec_label_pc_1000a678
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f4:                            ; preds = %dec_label_pc_1000a7e8, %dec_label_pc_1000a7c4, %dec_label_pc_1000a724, %dec_label_pc_1000a7f0
  %v0_1000a804 = phi i32 [ 0, %dec_label_pc_1000a7e8 ], [ %v2_1000a7e0, %dec_label_pc_1000a7c4 ], [ %v0_1000a804.pre, %dec_label_pc_1000a724 ], [ -1, %dec_label_pc_1000a7f0 ]
  ret i32 %v0_1000a804

; uselistorder directives
  uselistorder i32 %v1_1000a6f4, { 1, 0 }
  uselistorder i32 %v2_1000a69c, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a674, { 1, 0 }
  uselistorder i32 %v2_1000a658, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 1, 7, 0, 8, 9, 10, 11, 3, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 2, 3, 9, 8, 5, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 2, 3, 9, 8, 5, 0, 1 }
  uselistorder i32 (i32, i32)* @function_1000b074, { 1, 0 }
  uselistorder i32 17, { 2, 35, 36, 3, 37, 4, 17, 18, 5, 6, 19, 20, 21, 7, 22, 23, 24, 8, 9, 10, 11, 25, 0, 26, 1, 27, 28, 12, 29, 13, 30, 31, 32, 33, 34, 14, 15, 16 }
  uselistorder label %dec_label_pc_1000a7f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a7f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a7bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6e4.dec_label_pc_1000a6e4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a664.dec_label_pc_1000a664_crit_edge, { 1, 0 }
}

define i32 @function_1000a808(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a858:
  %v3_1000a85c = load i32, i32* @global_var_1001c1d0.324, align 4
  %v3_1000a860 = icmp eq i32 %v3_1000a85c, 0
  br i1 %v3_1000a860, label %dec_label_pc_1000a870, label %dec_label_pc_1000a868

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a858
  %v2_1000a86c = load i32, i32* @r4, align 4
  %v3_1000a86c = call i32 @unknown_0(i32 268566528, i32 %v2_1000a86c)
  store i32 %v3_1000a86c, i32* @r3, align 4
  br label %dec_label_pc_1000a870

dec_label_pc_1000a870:                            ; preds = %dec_label_pc_1000a858, %dec_label_pc_1000a868
  %v3_1000a874 = load i32, i32* @global_var_1001c1d4.325, align 4
  %v3_1000a878 = icmp eq i32 %v3_1000a874, 0
  br i1 %v3_1000a878, label %dec_label_pc_1000a870.dec_label_pc_1000a888_crit_edge, label %dec_label_pc_1000a880

dec_label_pc_1000a870.dec_label_pc_1000a888_crit_edge: ; preds = %dec_label_pc_1000a870
  %v0_1000a898.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a888

dec_label_pc_1000a880:                            ; preds = %dec_label_pc_1000a870
  %v2_1000a884 = load i32, i32* @r4, align 4
  %v3_1000a884 = call i32 @unknown_0(i32 268566528, i32 %v2_1000a884)
  br label %dec_label_pc_1000a888

dec_label_pc_1000a888:                            ; preds = %dec_label_pc_1000a870.dec_label_pc_1000a888_crit_edge, %dec_label_pc_1000a880
  %v0_1000a898 = phi i32 [ %v0_1000a898.pre, %dec_label_pc_1000a870.dec_label_pc_1000a888_crit_edge ], [ %v3_1000a884, %dec_label_pc_1000a880 ]
  ret i32 %v0_1000a898

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a888, { 1, 0 }
  uselistorder label %dec_label_pc_1000a870, { 1, 0 }
}

define i32 @function_1000a89c() local_unnamed_addr {
dec_label_pc_1000a89c:
  ret i32 0
}

define i32 @function_1000a8a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a8a4:
  %v0_1000a8a4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a8a4
}

define i32 @function_1000a8a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a8a8:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268478668, i32* @lr, align 4
  %v1_1000a8c8 = call i32 @function_10008d38(i32 1)
  %v3_1000a8cc = icmp eq i32 %v1_1000a8c8, -1
  br i1 %v3_1000a8cc, label %dec_label_pc_1000a8d4, label %dec_label_pc_1000a8f4

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a8a8
  %v0_1000a8d8 = load i32, i32* @r30, align 4
  store i32 268478696, i32* @lr, align 4
  %v3_1000a8e4 = call i32 @function_10008f88(i32 ptrtoint ([10 x i8]* @global_var_1000bac0.326 to i32), i32 %v0_1000a8d8)
  %v1_1000a8e8 = load i32, i32* @r31, align 4
  %v4_1000a8e8 = icmp eq i32 %v3_1000a8e4, %v1_1000a8e8
  br i1 %v4_1000a8e8, label %dec_label_pc_1000a8f4, label %dec_label_pc_1000a8f0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8d4
  %v1_1000a8f0 = call i32 @function_1000b544(i32 %v3_1000a8e4)
  br label %dec_label_pc_1000a8f4

dec_label_pc_1000a8f4:                            ; preds = %dec_label_pc_1000a8a8, %dec_label_pc_1000a8d4, %dec_label_pc_1000a8f0
  %v0_1000a904 = phi i32 [ %v1_1000a8c8, %dec_label_pc_1000a8a8 ], [ %v3_1000a8e4, %dec_label_pc_1000a8d4 ], [ %v1_1000a8f0, %dec_label_pc_1000a8f0 ]
  ret i32 %v0_1000a904

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008f88, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10008d38, { 0, 5, 13, 12, 15, 14, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000a8f4, { 2, 1, 0 }
}

define i32 @function_1000a908(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a908:
  %v3_1000a928 = load i32, i32* @global_var_1001c1d8.327, align 4
  %v3_1000a92c = icmp eq i32 %v3_1000a928, 0
  br i1 %v3_1000a92c, label %dec_label_pc_1000a950, label %dec_label_pc_1000a974

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a908
  store i32 1, i32* @global_var_1001c1d8.327, align 4
  store i32 4096, i32* @global_var_1001c1cc.309, align 4
  br label %dec_label_pc_1000a974

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a950, %dec_label_pc_1000a908
  %v0_1000a984 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a984
}

define i32 @function_1000a988(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a988:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000a9a0 = mul i32 %arg2, 4
  %v2_1000a9a4 = add i32 %tmp, %v1_1000a9a0
  %v0_1000a9a8 = load i32, i32* @r9, align 4
  store i32 %v0_1000a9a8, i32* @global_var_1001c1c4.329, align 4
  %v1_1000a9ac = add i32 %v2_1000a9a4, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a9ac, i32* @global_var_1001c1c8.330, align 4
  store i32 %arg6, i32* @global_var_1001c1d4.325, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000a9cc = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000a9d4 = icmp eq i32 %v1_1000a9ac, %v2_1000a9cc
  br i1 %v4_1000a9d4, label %dec_label_pc_1000a9dc, label %dec_label_pc_1000a9e0

dec_label_pc_1000a9dc:                            ; preds = %dec_label_pc_1000a988
  store i32 %v2_1000a9a4, i32* @global_var_1001c1c8.330, align 4
  br label %dec_label_pc_1000a9e0

dec_label_pc_1000a9e0:                            ; preds = %dec_label_pc_1000a988, %dec_label_pc_1000a9dc
  %v2_1000a9e0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268478960, i32* @lr, align 4
  %v3_1000a9ec = call i32 @function_10009624(i32 %v2_1000a9e0, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c1c8.330, align 4
  br label %dec_label_pc_1000a9fc

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9fc, %dec_label_pc_1000a9e0
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000a9e0 ], [ %v1_1000aa00, %dec_label_pc_1000a9fc ]
  %v1_1000a9fc = inttoptr i32 %storemerge to i32*
  %v2_1000a9fc = load i32, i32* %v1_1000a9fc, align 4
  %v1_1000aa00 = add i32 %storemerge, 4
  %v3_1000aa04 = icmp eq i32 %v2_1000a9fc, 0
  br i1 %v3_1000aa04, label %dec_label_pc_1000aa0c, label %dec_label_pc_1000a9fc

dec_label_pc_1000aa0c:                            ; preds = %dec_label_pc_1000a9fc
  store i32 %v1_1000aa00, i32* %r29.global-to-local, align 4
  %v1_1000aa3812 = inttoptr i32 %v1_1000aa00 to i32*
  %v2_1000aa3813 = load i32, i32* %v1_1000aa3812, align 4
  %v3_1000aa3c16 = icmp eq i32 %v2_1000aa3813, 0
  br i1 %v3_1000aa3c16, label %dec_label_pc_1000aa44, label %dec_label_pc_1000aa14

dec_label_pc_1000aa14:                            ; preds = %dec_label_pc_1000aa0c, %dec_label_pc_1000aa34
  %v0_1000aa28 = phi i32 [ %v1_1000aa34, %dec_label_pc_1000aa34 ], [ %v1_1000aa00, %dec_label_pc_1000aa0c ]
  %v0_1000aa1c = phi i32 [ %v2_1000aa38, %dec_label_pc_1000aa34 ], [ %v2_1000aa3813, %dec_label_pc_1000aa0c ]
  %v2_1000aa14 = icmp ugt i32 %v0_1000aa1c, 14
  br i1 %v2_1000aa14, label %dec_label_pc_1000aa34, label %dec_label_pc_1000aa1c

dec_label_pc_1000aa1c:                            ; preds = %dec_label_pc_1000aa14
  %v1_1000aa1c = mul i32 %v0_1000aa1c, 8
  %v2_1000aa24 = add i32 %v1_1000aa1c, %v2_1000a9e0
  store i32 %v2_1000aa24, i32* @r3, align 4
  store i32 %v0_1000aa28, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268479028, i32* @lr, align 4
  %v0_1000aa30 = call i32 @function_1000b2f0()
  %v0_1000aa34.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000aa34

dec_label_pc_1000aa34:                            ; preds = %dec_label_pc_1000aa14, %dec_label_pc_1000aa1c
  %v0_1000aa34 = phi i32 [ %v0_1000aa28, %dec_label_pc_1000aa14 ], [ %v0_1000aa34.pre, %dec_label_pc_1000aa1c ]
  %v1_1000aa34 = add i32 %v0_1000aa34, 8
  store i32 %v1_1000aa34, i32* %r29.global-to-local, align 4
  %v1_1000aa38 = inttoptr i32 %v1_1000aa34 to i32*
  %v2_1000aa38 = load i32, i32* %v1_1000aa38, align 4
  %v3_1000aa3c = icmp eq i32 %v2_1000aa38, 0
  br i1 %v3_1000aa3c, label %dec_label_pc_1000aa44, label %dec_label_pc_1000aa14

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000aa34, %dec_label_pc_1000aa0c
  %v1_1000aa48 = call i32 @function_1000b694(i32 %v2_1000a9e0)
  store i32 %v1_1000aa48, i32* @r3, align 4
  store i32 268479056, i32* @lr, align 4
  %v1_1000aa4c = call i32 @function_1000a908(i32 %v1_1000aa48)
  %v3_1000aa54 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000aa54, label %dec_label_pc_1000aa5c, label %dec_label_pc_1000aa60

dec_label_pc_1000aa5c:                            ; preds = %dec_label_pc_1000aa44
  br label %dec_label_pc_1000aa60

dec_label_pc_1000aa60:                            ; preds = %dec_label_pc_1000aa44, %dec_label_pc_1000aa5c
  %v0_1000aa68 = phi i32 [ %tmp27, %dec_label_pc_1000aa44 ], [ 4096, %dec_label_pc_1000aa5c ]
  store i32 %v0_1000aa68, i32* @global_var_1001c1cc.309, align 4
  %v3_1000aa6c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000aa6c, label %dec_label_pc_1000aa74, label %dec_label_pc_1000aaa8

dec_label_pc_1000aa74:                            ; preds = %dec_label_pc_1000aa60
  store i32 268479096, i32* @lr, align 4
  %v1_1000aa74 = call i32 @function_1000afac(i32 268566528)
  store i32 %v1_1000aa74, i32* %r29.global-to-local, align 4
  store i32 268479104, i32* @lr, align 4
  %v0_1000aa7c = call i32 @function_1000af1c()
  %v4_1000aa80 = icmp eq i32 %v1_1000aa74, %v0_1000aa7c
  br i1 %v4_1000aa80, label %dec_label_pc_1000aa88, label %dec_label_pc_1000aac4

dec_label_pc_1000aa88:                            ; preds = %dec_label_pc_1000aa74
  store i32 268479116, i32* @lr, align 4
  %v1_1000aa88 = call i32 @function_1000af64(i32 %v0_1000aa7c)
  store i32 %v1_1000aa88, i32* %r29.global-to-local, align 4
  store i32 268479124, i32* @lr, align 4
  %v0_1000aa90 = call i32 @function_1000aed4()
  %v4_1000aa94 = icmp eq i32 %v1_1000aa88, %v0_1000aa90
  br i1 %v4_1000aa94, label %dec_label_pc_1000aa9c.thread, label %dec_label_pc_1000aac4

dec_label_pc_1000aa9c.thread:                     ; preds = %dec_label_pc_1000aa88
  br label %dec_label_pc_1000aaf4

dec_label_pc_1000aaa8:                            ; preds = %dec_label_pc_1000aa60
  %v4_1000aaac = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000aaac, label %dec_label_pc_1000aab4, label %dec_label_pc_1000aac4

dec_label_pc_1000aab4:                            ; preds = %dec_label_pc_1000aaa8
  br label %dec_label_pc_1000aac4

dec_label_pc_1000aac4:                            ; preds = %dec_label_pc_1000aab4, %dec_label_pc_1000aaa8, %dec_label_pc_1000aa88, %dec_label_pc_1000aa74
  store i32 268479188, i32* @lr, align 4
  %v2_1000aad0 = call i32 @function_1000a8a8(i32 0, i32 32768)
  store i32 268479204, i32* @lr, align 4
  %v2_1000aae0 = call i32 @function_1000a8a8(i32 1, i32 32770)
  store i32 268479220, i32* @lr, align 4
  %v2_1000aaf0 = call i32 @function_1000a8a8(i32 2, i32 32770)
  br label %dec_label_pc_1000aaf4

dec_label_pc_1000aaf4:                            ; preds = %dec_label_pc_1000aa9c.thread, %dec_label_pc_1000aac4
  %v0_1000ab00 = load i32, i32* @r30, align 4
  %v1_1000ab00 = inttoptr i32 %v0_1000ab00 to i32*
  %v2_1000ab00 = load i32, i32* %v1_1000ab00, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ab00, i32* inttoptr (i32 268550516 to i32*), align 4
  %v0_1000ab20 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000ab20, i32* @global_var_1001c1d0.324, align 4
  br i1 false, label %dec_label_pc_1000ab28, label %dec_label_pc_1000aba0

dec_label_pc_1000ab28:                            ; preds = %dec_label_pc_1000aaf4, %dec_label_pc_1000ab28
  br i1 undef, label %dec_label_pc_1000ab28, label %dec_label_pc_1000aba0

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000ab28, %dec_label_pc_1000aaf4
  %v0_1000ab4c = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000ab4c)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000abb0 = call i32 @function_1000953c()
  %v2_1000abb8 = inttoptr i32 %v0_1000abb0 to i32*
  store i32 0, i32* %v2_1000abb8, align 4
  %v0_1000abe4 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000abe4)
  %v0_1000abf0 = call i32 @function_1000a5b0()
  ret i32 %v0_1000abf0

; uselistorder directives
  uselistorder i32 %v2_1000aa38, { 1, 0 }
  uselistorder i32 %v1_1000aa34, { 2, 1, 0 }
  uselistorder i32 %v1_1000aa00, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000a9e0, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 7, 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 ()* @function_1000a5b0, { 0, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000a8a8, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 40, 0, 5, 6, 21, 7, 8, 22, 23, 9, 10, 24, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 1, 27, 28, 29, 2, 30, 31, 32, 33, 34, 3, 35, 36, 37, 38, 39, 4 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000ab28, { 1, 0 }
  uselistorder label %dec_label_pc_1000aaf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa60, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa34, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa14, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9e0, { 1, 0 }
}

define i32 @function_1000abf4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000abf4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac0c = call i32 @__asm_mfcr()
  %v1_1000ac10 = and i32 %v0_1000ac0c, 268435456
  %v3_1000ac10 = icmp eq i32 %v1_1000ac10, 0
  store i32 %v0_1000ac0c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac10, label %dec_label_pc_1000ac28, label %dec_label_pc_1000ac1c

dec_label_pc_1000ac1c:                            ; preds = %dec_label_pc_1000abf4
  %v0_1000ac1c = call i32 @function_1000953c()
  %v0_1000ac20 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac20 = inttoptr i32 %v0_1000ac1c to i32*
  store i32 %v0_1000ac20, i32* %v2_1000ac20, align 4
  br label %dec_label_pc_1000ac28

dec_label_pc_1000ac28:                            ; preds = %dec_label_pc_1000abf4, %dec_label_pc_1000ac1c
  %v0_1000ac38 = phi i32 [ %v0_1000ac0c, %dec_label_pc_1000abf4 ], [ -1, %dec_label_pc_1000ac1c ]
  ret i32 %v0_1000ac38

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac28, { 1, 0 }
}

define i32 @function_1000ac3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac3c:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000ac50

dec_label_pc_1000ac50:                            ; preds = %dec_label_pc_1000ac50.backedge, %dec_label_pc_1000ac3c
  %v0_1000ac5c = call i32 @__asm_mfcr()
  %v1_1000ac60 = and i32 %v0_1000ac5c, 268435456
  %v3_1000ac60 = icmp eq i32 %v1_1000ac60, 0
  store i32 %v0_1000ac5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac60, label %dec_label_pc_1000ac50.backedge, label %dec_label_pc_1000ac6c

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac50
  %v0_1000ac6c = call i32 @function_1000953c()
  %v0_1000ac70 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac70 = inttoptr i32 %v0_1000ac6c to i32*
  store i32 %v0_1000ac70, i32* %v2_1000ac70, align 4
  br label %dec_label_pc_1000ac50.backedge

dec_label_pc_1000ac50.backedge:                   ; preds = %dec_label_pc_1000ac6c, %dec_label_pc_1000ac50
  br label %dec_label_pc_1000ac50
}

define i32 @function_1000ac78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac78:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000ac84 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000ac84, i32* @r29, align 4
  %v0_1000ac8c = load i32, i32* @r4, align 4
  store i32 %v0_1000ac8c, i32* @r30, align 4
  %v0_1000ac9c = call i32 @__asm_mfcr()
  %v1_1000aca0 = and i32 %v0_1000ac9c, 268435456
  %v3_1000aca0 = icmp eq i32 %v1_1000aca0, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000ac9c, i32* @r31, align 4
  br i1 %v3_1000aca0, label %dec_label_pc_1000acbc, label %dec_label_pc_1000acb0

dec_label_pc_1000acb0:                            ; preds = %dec_label_pc_1000ac78
  %v0_1000acb0 = call i32 @function_1000953c()
  %v0_1000acb4 = load i32, i32* @r31, align 4
  %v2_1000acb4 = inttoptr i32 %v0_1000acb0 to i32*
  store i32 %v0_1000acb4, i32* %v2_1000acb4, align 4
  br label %dec_label_pc_1000acd4

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000ac78
  %v3_1000acbc = icmp eq i32 %v0_1000ac9c, 0
  store i32 %v0_1000ac9c, i32* @r28, align 4
  br i1 %v3_1000acbc, label %dec_label_pc_1000acd0, label %dec_label_pc_1000acd4

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000acbc
  %v0_1000acc4 = load i32, i32* @r30, align 4
  store i32 268479700, i32* @lr, align 4
  %v4_1000acd0 = call i32 @function_1000b240(i32* nonnull %stack_var_-104, i32 %v0_1000acc4, i32 0)
  br label %dec_label_pc_1000acd4

dec_label_pc_1000acd4:                            ; preds = %dec_label_pc_1000acbc, %dec_label_pc_1000acb0, %dec_label_pc_1000acd0
  %v0_1000acd8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000acd8

; uselistorder directives
  uselistorder i32 %v0_1000ac9c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000acd4, { 2, 0, 1 }
}

define i32 @function_1000acec(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000acec:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000ad00 = call i32 @function_1000ad7c()
  store i32 %v0_1000ad00, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000ad00, 1
  br i1 %tmp18, label %dec_label_pc_1000ad64, label %dec_label_pc_1000ad0c

dec_label_pc_1000ad0c:                            ; preds = %dec_label_pc_1000acec
  %v0_1000ad0c = load i32, i32* @r31, align 4
  %v2_1000ad0c = add i32 %v0_1000ad0c, %v0_1000ad00
  store i32 %v2_1000ad0c, i32* %r29.global-to-local, align 4
  %v2_1000ad543 = icmp ult i32 %v0_1000ad0c, %v2_1000ad0c
  br i1 %v2_1000ad543, label %dec_label_pc_1000ad14, label %dec_label_pc_1000ad64

dec_label_pc_1000ad14:                            ; preds = %dec_label_pc_1000ad0c, %dec_label_pc_1000ad14
  %v1_1000ad24 = phi i32 [ %v2_1000ad50, %dec_label_pc_1000ad14 ], [ %v0_1000ad0c, %dec_label_pc_1000ad0c ]
  %v1_1000ad5810.in = phi i32 [ %v2_1000ad50, %dec_label_pc_1000ad14 ], [ %v0_1000ad0c, %dec_label_pc_1000ad0c ]
  %v1_1000ad5c11.in = phi i32 [ %v2_1000ad50, %dec_label_pc_1000ad14 ], [ %v0_1000ad0c, %dec_label_pc_1000ad0c ]
  %v1_1000ad5810 = add i32 %v1_1000ad5810.in, 11
  %v1_1000ad5c11 = add i32 %v1_1000ad5c11.in, 19
  %v1_1000ad14 = add i32 %v1_1000ad24, 4
  %v2_1000ad14 = inttoptr i32 %v1_1000ad14 to i32*
  %v3_1000ad14 = load i32, i32* %v2_1000ad14, align 4
  store i32 %v3_1000ad14, i32* %r11.global-to-local, align 4
  %v1_1000ad18 = add i32 %v1_1000ad24, 12
  %v2_1000ad18 = inttoptr i32 %v1_1000ad18 to i32*
  %v3_1000ad18 = load i32, i32* %v2_1000ad18, align 4
  %v1_1000ad1c = add i32 %v1_1000ad24, 16
  %v2_1000ad1c = inttoptr i32 %v1_1000ad1c to i16*
  %v3_1000ad1c = load i16, i16* %v2_1000ad1c, align 2
  %v4_1000ad1c = zext i16 %v3_1000ad1c to i32
  store i32 %v4_1000ad1c, i32* %r5.global-to-local, align 4
  %v1_1000ad20 = add i32 %v1_1000ad24, 18
  %v2_1000ad20 = inttoptr i32 %v1_1000ad20 to i8*
  %v3_1000ad20 = load i8, i8* %v2_1000ad20, align 1
  %v4_1000ad20 = zext i8 %v3_1000ad20 to i32
  store i32 %v4_1000ad20, i32* %r9.global-to-local, align 4
  store i32 %v3_1000ad18, i32* %v2_1000ad14, align 4
  %v0_1000ad28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad28 = load i32, i32* @r31, align 4
  %v2_1000ad28 = inttoptr i32 %v1_1000ad28 to i32*
  store i32 %v0_1000ad28, i32* %v2_1000ad28, align 4
  %v0_1000ad2c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ad2c = trunc i32 %v0_1000ad2c to i8
  %v2_1000ad2c = load i32, i32* @r31, align 4
  %v3_1000ad2c = add i32 %v2_1000ad2c, 10
  %v4_1000ad2c = inttoptr i32 %v3_1000ad2c to i8*
  store i8 %v1_1000ad2c, i8* %v4_1000ad2c, align 1
  %v0_1000ad30 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ad30 = trunc i32 %v0_1000ad30 to i16
  %v2_1000ad30 = load i32, i32* @r31, align 4
  %v3_1000ad30 = add i32 %v2_1000ad30, 8
  %v4_1000ad30 = inttoptr i32 %v3_1000ad30 to i16*
  store i16 %v1_1000ad30, i16* %v4_1000ad30, align 2
  %v0_1000ad34 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ad34 = add i32 %v0_1000ad34, -19
  store i32 %v1_1000ad34, i32* %r5.global-to-local, align 4
  store i32 268479804, i32* @lr, align 4
  %v3_1000ad38 = call i32 @function_10009580(i32 %v1_1000ad5810, i32 %v1_1000ad5c11, i32 %v1_1000ad34)
  %v0_1000ad3c = load i32, i32* @r31, align 4
  %v1_1000ad3c = add i32 %v0_1000ad3c, 8
  %v2_1000ad3c = inttoptr i32 %v1_1000ad3c to i16*
  %v3_1000ad3c = load i16, i16* %v2_1000ad3c, align 2
  %v4_1000ad3c = zext i16 %v3_1000ad3c to i32
  store i32 %v4_1000ad3c, i32* %r5.global-to-local, align 4
  store i32 268479820, i32* @lr, align 4
  %v3_1000ad48 = call i32 @function_10009580(i32 %v0_1000ad3c, i32 %v0_1000ad3c, i32 %v4_1000ad3c)
  %v0_1000ad4c = load i32, i32* @r31, align 4
  %v1_1000ad4c = add i32 %v0_1000ad4c, 8
  %v2_1000ad4c = inttoptr i32 %v1_1000ad4c to i16*
  %v3_1000ad4c = load i16, i16* %v2_1000ad4c, align 2
  %v4_1000ad4c = zext i16 %v3_1000ad4c to i32
  %v2_1000ad50 = add i32 %v4_1000ad4c, %v0_1000ad4c
  store i32 %v2_1000ad50, i32* @r31, align 4
  %v1_1000ad54 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ad54 = icmp ult i32 %v2_1000ad50, %v1_1000ad54
  br i1 %v2_1000ad54, label %dec_label_pc_1000ad14, label %dec_label_pc_1000ad54.dec_label_pc_1000ad64.loopexit_crit_edge

dec_label_pc_1000ad54.dec_label_pc_1000ad64.loopexit_crit_edge: ; preds = %dec_label_pc_1000ad14
  %v0_1000ad68.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ad64:                            ; preds = %dec_label_pc_1000ad0c, %dec_label_pc_1000ad54.dec_label_pc_1000ad64.loopexit_crit_edge, %dec_label_pc_1000acec
  %v0_1000ad68 = phi i32 [ %v0_1000ad00, %dec_label_pc_1000acec ], [ %v0_1000ad68.pre.pre, %dec_label_pc_1000ad54.dec_label_pc_1000ad64.loopexit_crit_edge ], [ %v0_1000ad00, %dec_label_pc_1000ad0c ]
  ret i32 %v0_1000ad68

; uselistorder directives
  uselistorder i32 %v2_1000ad50, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000ad3c, { 1, 0, 2 }
  uselistorder i32 %v1_1000ad24, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000ad0c, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000ad00, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10009580, { 1, 0, 2 }
  uselistorder i32 11, { 0, 30, 29, 2, 10, 11, 12, 13, 14, 15, 3, 16, 1, 17, 18, 19, 20, 21, 22, 4, 23, 24, 5, 25, 26, 8, 6, 27, 28, 9, 7 }
  uselistorder label %dec_label_pc_1000ad64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ad14, { 1, 0 }
}

define i32 @function_1000ad7c() local_unnamed_addr {
dec_label_pc_1000ad7c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000ad80 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000ad80, i32* %stack_var_-48, align 4
  %v5_1000ad80 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000ad80, i32* %r9.global-to-local, align 4
  %v0_1000ad8c = load i32, i32* @r5, align 4
  %v1_1000ad8c = add i32 %v0_1000ad8c, 30
  %v1_1000ad90 = call i32 @__asm_rlwinm(i32 %v1_1000ad8c, i32 0, i32 0, i32 27)
  store i32 %v5_1000ad80, i32* @r31, align 4
  %v1_1000ada0 = load i32, i32* @r1, align 4
  %v3_1000ada0 = sub i32 %v1_1000ada0, %v1_1000ad90
  %v4_1000ada0 = inttoptr i32 %v3_1000ada0 to i32*
  store i32 %v4_1000ad80, i32* %v4_1000ada0, align 4
  %v0_1000ada4 = load i32, i32* @r4, align 4
  store i32 %v0_1000ada4, i32* @r28, align 4
  %v0_1000ada8 = load i32, i32* @r5, align 4
  store i32 %v0_1000ada8, i32* @r23, align 4
  %v0_1000adac = load i32, i32* @r3, align 4
  store i32 %v0_1000adac, i32* @r22, align 4
  %v1_1000adb0 = add i32 %v3_1000ada0, 23
  %v1_1000adb4 = call i32 @__asm_rlwinm(i32 %v1_1000adb0, i32 0, i32 0, i32 27)
  store i32 %v1_1000adb4, i32* @r27, align 4
  store i32 %v1_1000adb4, i32* %r4.global-to-local, align 4
  %v0_1000adc4 = call i32 @__asm_mfcr()
  %v1_1000adc8 = and i32 %v0_1000adc4, 268435456
  store i32 %v1_1000adc8, i32* %r9.global-to-local, align 4
  %v3_1000adc8 = icmp eq i32 %v1_1000adc8, 0
  store i32 %v0_1000adc4, i32* %r30.global-to-local, align 4
  br i1 %v3_1000adc8, label %dec_label_pc_1000ade0, label %dec_label_pc_1000add4

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000ad7c
  %v0_1000add4 = call i32 @function_1000953c()
  %v0_1000add8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000add8 = inttoptr i32 %v0_1000add4 to i32*
  store i32 %v0_1000add8, i32* %v2_1000add8, align 4
  br label %dec_label_pc_1000adec

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000ad7c
  %v3_1000ade0 = icmp eq i32 %v0_1000adc4, -1
  store i32 %v0_1000adc4, i32* @r24, align 4
  br i1 %v3_1000ade0, label %dec_label_pc_1000adec, label %dec_label_pc_1000adf4

dec_label_pc_1000adec:                            ; preds = %dec_label_pc_1000ade0, %dec_label_pc_1000add4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000aeb8

dec_label_pc_1000adf4:                            ; preds = %dec_label_pc_1000ade0
  %v0_1000adf4 = load i32, i32* @r28, align 4
  store i32 %v0_1000adf4, i32* %r29.global-to-local, align 4
  store i32 %v1_1000adb4, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000ae9c12 = add i32 %v0_1000adc4, %v1_1000adb4
  %v1_1000aea013 = load i32, i32* @r23, align 4
  %v2_1000aea014 = add i32 %v1_1000aea013, %v0_1000adf4
  store i32 %v2_1000aea014, i32* %r10.global-to-local, align 4
  %v2_1000aea415 = icmp ult i32 %v1_1000adb4, %v2_1000ae9c12
  %v1_1000aea817 = add i32 %v0_1000adf4, 19
  store i32 %v1_1000aea817, i32* @r3, align 4
  %v1_1000aeac18 = add i32 %v1_1000adb4, 19
  store i32 %v1_1000aeac18, i32* @r4, align 4
  br i1 %v2_1000aea415, label %dec_label_pc_1000ae08, label %dec_label_pc_1000aeb4

dec_label_pc_1000ae08:                            ; preds = %dec_label_pc_1000adf4, %dec_label_pc_1000ae50
  %v0_1000ae0819 = phi i32 [ %v2_1000ae98, %dec_label_pc_1000ae50 ], [ %v1_1000adb4, %dec_label_pc_1000adf4 ]
  %v1_1000ae08 = add i32 %v0_1000ae0819, 16
  %v2_1000ae08 = inttoptr i32 %v1_1000ae08 to i16*
  %v3_1000ae08 = load i16, i16* %v2_1000ae08, align 2
  %v4_1000ae08 = zext i16 %v3_1000ae08 to i32
  %v1_1000ae0c = add nuw nsw i32 %v4_1000ae08, 7
  store i32 %v1_1000ae0c, i32* %r9.global-to-local, align 4
  %v1_1000ae10 = call i32 @__asm_rlwinm(i32 %v1_1000ae0c, i32 0, i32 0, i32 28)
  %v0_1000ae14 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000ae14 = add i32 %v1_1000ae10, %v0_1000ae14
  store i32 %v3_1000ae14, i32* %r11.global-to-local, align 4
  %v1_1000ae18 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ae18 = icmp ugt i32 %v3_1000ae14, %v1_1000ae18
  br i1 %v3_1000ae18, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ae50

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000ae08
  %v0_1000ae20 = load i32, i32* @r22, align 4
  %v0_1000ae24 = load i32, i32* @r25, align 4
  %v0_1000ae28 = load i32, i32* @r26, align 4
  store i32 268480052, i32* @lr, align 4
  %v4_1000ae30 = call i32 @function_1000aff4(i32 %v0_1000ae20, i32 %v0_1000ae24, i32 %v0_1000ae28, i32 0)
  %v0_1000ae34 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ae34 = load i32, i32* @r28, align 4
  %v4_1000ae34 = icmp eq i32 %v0_1000ae34, %v1_1000ae34
  br i1 %v4_1000ae34, label %dec_label_pc_1000ae3c, label %dec_label_pc_1000aeb4

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae20
  %v0_1000ae3c = call i32 @function_1000953c()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000ae48 = inttoptr i32 %v0_1000ae3c to i32*
  store i32 22, i32* %v2_1000ae48, align 4
  %v0_1000aebc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000aeb8

dec_label_pc_1000ae50:                            ; preds = %dec_label_pc_1000ae08
  %v2_1000ae10 = trunc i32 %v1_1000ae10 to i16
  %v0_1000ae50 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ae50 = inttoptr i32 %v0_1000ae50 to i32*
  %v2_1000ae50 = load i32, i32* %v1_1000ae50, align 4
  store i32 %v2_1000ae50, i32* %r9.global-to-local, align 4
  %v1_1000ae54 = add i32 %v0_1000ae50, 4
  %v2_1000ae54 = inttoptr i32 %v1_1000ae54 to i32*
  %v3_1000ae54 = load i32, i32* %v2_1000ae54, align 4
  store i32 %v3_1000ae54, i32* %r10.global-to-local, align 4
  %v1_1000ae58 = add i32 %v0_1000ae50, 8
  %v2_1000ae58 = inttoptr i32 %v1_1000ae58 to i32*
  %v3_1000ae58 = load i32, i32* %v2_1000ae58, align 4
  store i32 %v3_1000ae58, i32* @r25, align 4
  %v1_1000ae5c = add i32 %v0_1000ae50, 12
  %v2_1000ae5c = inttoptr i32 %v1_1000ae5c to i32*
  %v3_1000ae5c = load i32, i32* %v2_1000ae5c, align 4
  store i32 %v3_1000ae5c, i32* @r26, align 4
  %v2_1000ae60 = inttoptr i32 %v0_1000ae14 to i32*
  store i32 %v2_1000ae50, i32* %v2_1000ae60, align 4
  %v0_1000ae64 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ae64 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ae64 = add i32 %v1_1000ae64, 4
  %v3_1000ae64 = inttoptr i32 %v2_1000ae64 to i32*
  store i32 %v0_1000ae64, i32* %v3_1000ae64, align 4
  %v0_1000ae68 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ae68 = add i32 %v0_1000ae68, 8
  %v2_1000ae68 = inttoptr i32 %v1_1000ae68 to i32*
  %v3_1000ae68 = load i32, i32* %v2_1000ae68, align 4
  store i32 %v3_1000ae68, i32* %r9.global-to-local, align 4
  %v1_1000ae6c = add i32 %v0_1000ae68, 12
  %v2_1000ae6c = inttoptr i32 %v1_1000ae6c to i32*
  %v3_1000ae6c = load i32, i32* %v2_1000ae6c, align 4
  store i32 %v3_1000ae6c, i32* %r10.global-to-local, align 4
  %v3_1000ae70 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000ae70 = add i32 %v3_1000ae70, 16
  %v5_1000ae70 = inttoptr i32 %v4_1000ae70 to i16*
  store i16 %v2_1000ae10, i16* %v5_1000ae70, align 2
  %v0_1000ae74 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ae74 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ae74 = add i32 %v1_1000ae74, 8
  %v3_1000ae74 = inttoptr i32 %v2_1000ae74 to i32*
  store i32 %v0_1000ae74, i32* %v3_1000ae74, align 4
  %v0_1000ae78 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ae78 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ae78 = add i32 %v1_1000ae78, 12
  %v3_1000ae78 = inttoptr i32 %v2_1000ae78 to i32*
  store i32 %v0_1000ae78, i32* %v3_1000ae78, align 4
  %v0_1000ae7c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ae7c = add i32 %v0_1000ae7c, 18
  %v2_1000ae7c = inttoptr i32 %v1_1000ae7c to i8*
  %v3_1000ae7c = load i8, i8* %v2_1000ae7c, align 1
  %v2_1000ae80 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000ae80 = add i32 %v2_1000ae80, 18
  %v4_1000ae80 = inttoptr i32 %v3_1000ae80 to i8*
  store i8 %v3_1000ae7c, i8* %v4_1000ae80, align 1
  %v0_1000ae84 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ae84, i32* %r29.global-to-local, align 4
  %v0_1000ae88 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ae88 = add i32 %v0_1000ae88, 16
  %v2_1000ae88 = inttoptr i32 %v1_1000ae88 to i16*
  %v3_1000ae88 = load i16, i16* %v2_1000ae88, align 2
  %v4_1000ae88 = zext i16 %v3_1000ae88 to i32
  %v1_1000ae8c = add nsw i32 %v4_1000ae88, -19
  store i32 %v1_1000ae8c, i32* @r5, align 4
  store i32 268480148, i32* @lr, align 4
  %v0_1000ae90 = call i32 @function_1000b2f0()
  %v0_1000ae94 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ae94 = add i32 %v0_1000ae94, 16
  %v2_1000ae94 = inttoptr i32 %v1_1000ae94 to i16*
  %v3_1000ae94 = load i16, i16* %v2_1000ae94, align 2
  %v4_1000ae94 = zext i16 %v3_1000ae94 to i32
  %v2_1000ae98 = add i32 %v4_1000ae94, %v0_1000ae94
  store i32 %v2_1000ae98, i32* %r30.global-to-local, align 4
  %v1_1000ae9c.pre = load i32, i32* @r24, align 4
  %v0_1000aea0.pre = load i32, i32* @r28, align 4
  %v0_1000aea8.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ae9c = add i32 %v1_1000ae9c.pre, %v1_1000adb4
  %v1_1000aea0 = load i32, i32* @r23, align 4
  %v2_1000aea0 = add i32 %v1_1000aea0, %v0_1000aea0.pre
  store i32 %v2_1000aea0, i32* %r10.global-to-local, align 4
  %v2_1000aea4 = icmp ult i32 %v2_1000ae98, %v2_1000ae9c
  %v1_1000aea8 = add i32 %v0_1000aea8.pre, 19
  store i32 %v1_1000aea8, i32* @r3, align 4
  %v1_1000aeac = add i32 %v2_1000ae98, 19
  store i32 %v1_1000aeac, i32* @r4, align 4
  br i1 %v2_1000aea4, label %dec_label_pc_1000ae08, label %dec_label_pc_1000aeb4

dec_label_pc_1000aeb4:                            ; preds = %dec_label_pc_1000adf4, %dec_label_pc_1000ae50, %dec_label_pc_1000ae20
  %v1_1000aeb4 = phi i32 [ %v0_1000ae34, %dec_label_pc_1000ae20 ], [ %v0_1000adf4, %dec_label_pc_1000adf4 ], [ %v0_1000aea8.pre, %dec_label_pc_1000ae50 ]
  %v0_1000aeb4 = phi i32 [ %v1_1000ae34, %dec_label_pc_1000ae20 ], [ %v0_1000adf4, %dec_label_pc_1000adf4 ], [ %v0_1000aea0.pre, %dec_label_pc_1000ae50 ]
  %v2_1000aeb4 = sub i32 %v1_1000aeb4, %v0_1000aeb4
  store i32 %v2_1000aeb4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000aeb8

dec_label_pc_1000aeb8:                            ; preds = %dec_label_pc_1000ae3c, %dec_label_pc_1000adec, %dec_label_pc_1000aeb4
  %v0_1000aebc = phi i32 [ %v0_1000aebc.pre, %dec_label_pc_1000ae3c ], [ -1, %dec_label_pc_1000adec ], [ %v2_1000aeb4, %dec_label_pc_1000aeb4 ]
  %v0_1000aeb8 = load i32, i32* @r1, align 4
  %v1_1000aeb8 = inttoptr i32 %v0_1000aeb8 to i32*
  %v2_1000aeb8 = load i32, i32* %v1_1000aeb8, align 4
  store i32 %v2_1000aeb8, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000aebc

; uselistorder directives
  uselistorder i32 %v2_1000ae98, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000ae50, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ae10, { 1, 0 }
  uselistorder i32 %v0_1000adc4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_1000adb4, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 8, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 1, 13, 2, 14, 15 }
  uselistorder i32 22, { 0, 1, 2, 3, 12, 4, 5, 6, 7, 13, 14, 15, 8, 9, 16, 10, 17, 11, 18 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 19, 32, 20, 33, 3, 34, 4, 35, 36, 37, 5, 38, 39, 6, 40, 41, 7, 8, 9, 43 }
  uselistorder i32 19, { 21, 22, 1, 2, 0, 14, 15, 16, 3, 6, 7, 17, 8, 9, 18, 19, 20, 10, 11, 12, 13, 23, 24, 25, 26, 4, 5 }
  uselistorder i32* @r26, { 15, 16, 17, 8, 9, 10, 24, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32* @r25, { 17, 18, 19, 10, 11, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* @r24, { 0, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 13, 16, 1, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* @r27, { 27, 19, 20, 42, 43, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 23, 21, 22, 2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 1, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 23, { 9, 6, 10, 0, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i32* @r22, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* @r23, { 10, 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* @r1, { 5, 6, 1, 2, 3, 0, 7, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 15, 16, 17, 26, 22, 24, 23, 25, 0, 28, 27, 1, 2, 3, 20, 21, 18, 19, 4, 5, 6, 7, 8, 9, 14, 10, 12, 11, 13, 29 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 9, 10, 6, 2, 1, 0, 7, 8, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000aeb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aeb4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ae08, { 1, 0 }
}

define i32 @function_1000aed4() local_unnamed_addr {
dec_label_pc_1000aed4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aeec = call i32 @__asm_mfcr()
  %v1_1000aef0 = and i32 %v0_1000aeec, 268435456
  %v3_1000aef0 = icmp eq i32 %v1_1000aef0, 0
  store i32 %v0_1000aeec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aef0, label %dec_label_pc_1000af08, label %dec_label_pc_1000aefc

dec_label_pc_1000aefc:                            ; preds = %dec_label_pc_1000aed4
  %v0_1000aefc = call i32 @function_1000953c()
  %v0_1000af00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af00 = inttoptr i32 %v0_1000aefc to i32*
  store i32 %v0_1000af00, i32* %v2_1000af00, align 4
  br label %dec_label_pc_1000af08

dec_label_pc_1000af08:                            ; preds = %dec_label_pc_1000aed4, %dec_label_pc_1000aefc
  %v0_1000af18 = phi i32 [ %v0_1000aeec, %dec_label_pc_1000aed4 ], [ -1, %dec_label_pc_1000aefc ]
  ret i32 %v0_1000af18

; uselistorder directives
  uselistorder label %dec_label_pc_1000af08, { 1, 0 }
}

define i32 @function_1000af1c() local_unnamed_addr {
dec_label_pc_1000af1c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000af34 = call i32 @__asm_mfcr()
  %v1_1000af38 = and i32 %v0_1000af34, 268435456
  %v3_1000af38 = icmp eq i32 %v1_1000af38, 0
  store i32 %v0_1000af34, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af38, label %dec_label_pc_1000af50, label %dec_label_pc_1000af44

dec_label_pc_1000af44:                            ; preds = %dec_label_pc_1000af1c
  %v0_1000af44 = call i32 @function_1000953c()
  %v0_1000af48 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af48 = inttoptr i32 %v0_1000af44 to i32*
  store i32 %v0_1000af48, i32* %v2_1000af48, align 4
  br label %dec_label_pc_1000af50

dec_label_pc_1000af50:                            ; preds = %dec_label_pc_1000af1c, %dec_label_pc_1000af44
  %v0_1000af60 = phi i32 [ %v0_1000af34, %dec_label_pc_1000af1c ], [ -1, %dec_label_pc_1000af44 ]
  ret i32 %v0_1000af60

; uselistorder directives
  uselistorder label %dec_label_pc_1000af50, { 1, 0 }
}

define i32 @function_1000af64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af64:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000af7c = call i32 @__asm_mfcr()
  %v1_1000af80 = and i32 %v0_1000af7c, 268435456
  %v3_1000af80 = icmp eq i32 %v1_1000af80, 0
  store i32 %v0_1000af7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af80, label %dec_label_pc_1000af98, label %dec_label_pc_1000af8c

dec_label_pc_1000af8c:                            ; preds = %dec_label_pc_1000af64
  %v0_1000af8c = call i32 @function_1000953c()
  %v0_1000af90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af90 = inttoptr i32 %v0_1000af8c to i32*
  store i32 %v0_1000af90, i32* %v2_1000af90, align 4
  br label %dec_label_pc_1000af98

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af64, %dec_label_pc_1000af8c
  %v0_1000afa8 = phi i32 [ %v0_1000af7c, %dec_label_pc_1000af64 ], [ -1, %dec_label_pc_1000af8c ]
  ret i32 %v0_1000afa8

; uselistorder directives
  uselistorder label %dec_label_pc_1000af98, { 1, 0 }
}

define i32 @function_1000afac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000afac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000afc4 = call i32 @__asm_mfcr()
  %v1_1000afc8 = and i32 %v0_1000afc4, 268435456
  %v3_1000afc8 = icmp eq i32 %v1_1000afc8, 0
  store i32 %v0_1000afc4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000afc8, label %dec_label_pc_1000afe0, label %dec_label_pc_1000afd4

dec_label_pc_1000afd4:                            ; preds = %dec_label_pc_1000afac
  %v0_1000afd4 = call i32 @function_1000953c()
  %v0_1000afd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000afd8 = inttoptr i32 %v0_1000afd4 to i32*
  store i32 %v0_1000afd8, i32* %v2_1000afd8, align 4
  br label %dec_label_pc_1000afe0

dec_label_pc_1000afe0:                            ; preds = %dec_label_pc_1000afac, %dec_label_pc_1000afd4
  %v0_1000aff0 = phi i32 [ %v0_1000afc4, %dec_label_pc_1000afac ], [ -1, %dec_label_pc_1000afd4 ]
  ret i32 %v0_1000aff0

; uselistorder directives
  uselistorder label %dec_label_pc_1000afe0, { 1, 0 }
}

define i32 @function_1000aff4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000aff4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000aff4 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b020 = call i32 @__asm_mfcr()
  %v1_1000b024 = and i32 %v0_1000b020, 268435456
  %v3_1000b024 = icmp eq i32 %v1_1000b024, 0
  store i32 %v0_1000b020, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b020, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b024, label %dec_label_pc_1000b048, label %dec_label_pc_1000b038

dec_label_pc_1000b038:                            ; preds = %dec_label_pc_1000aff4
  %v0_1000b038 = call i32 @function_1000953c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b040 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b040 = inttoptr i32 %v0_1000b038 to i32*
  store i32 %v0_1000b040, i32* %v2_1000b040, align 4
  %v0_1000b04c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b04c

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000aff4
  %v3_1000b030 = icmp eq i32 %v0_1000b020, 0
  br i1 %v3_1000b030, label %dec_label_pc_1000b058, label %dec_label_pc_1000b04c

dec_label_pc_1000b04c:                            ; preds = %dec_label_pc_1000b048, %dec_label_pc_1000b038
  %v0_1000b04c = phi i32 [ %v0_1000b020, %dec_label_pc_1000b048 ], [ %v0_1000b04c.pre, %dec_label_pc_1000b038 ]
  %tmp = icmp slt i32 %v0_1000b04c, 0
  %v1_1000b050 = zext i1 %tmp to i32
  %v2_1000b050 = ashr i32 %v0_1000b04c, 31
  %v3_1000b050 = and i32 %v2_1000b050, -2
  %v4_1000b050 = or i32 %v3_1000b050, %v1_1000b050
  br label %dec_label_pc_1000b060

dec_label_pc_1000b058:                            ; preds = %dec_label_pc_1000b048
  %v3_1000b058 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b060

dec_label_pc_1000b060:                            ; preds = %dec_label_pc_1000b04c, %dec_label_pc_1000b058
  %v0_1000b070 = phi i32 [ %v4_1000b050, %dec_label_pc_1000b04c ], [ %v3_1000b058, %dec_label_pc_1000b058 ]
  store i32 %v0_1000aff4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b070

; uselistorder directives
  uselistorder i32 %v0_1000b04c, { 1, 0 }
  uselistorder i32 %v0_1000b020, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 13, 2, 11, 3, 12, 4, 5 }
  uselistorder label %dec_label_pc_1000b060, { 1, 0 }
}

define i32 @function_1000b074(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b074:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b08c = call i32 @__asm_mfcr()
  %v1_1000b090 = and i32 %v0_1000b08c, 268435456
  %v3_1000b090 = icmp eq i32 %v1_1000b090, 0
  store i32 %v0_1000b08c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b090, label %dec_label_pc_1000b0a8, label %dec_label_pc_1000b09c

dec_label_pc_1000b09c:                            ; preds = %dec_label_pc_1000b074
  %v0_1000b09c = call i32 @function_1000953c()
  %v0_1000b0a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b0a0 = inttoptr i32 %v0_1000b09c to i32*
  store i32 %v0_1000b0a0, i32* %v2_1000b0a0, align 4
  br label %dec_label_pc_1000b0a8

dec_label_pc_1000b0a8:                            ; preds = %dec_label_pc_1000b074, %dec_label_pc_1000b09c
  %v0_1000b0b8 = phi i32 [ %v0_1000b08c, %dec_label_pc_1000b074 ], [ -1, %dec_label_pc_1000b09c ]
  ret i32 %v0_1000b0b8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b0a8, { 1, 0 }
}

define i32 @function_1000b0bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b0bc:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b0d8 = load i32, i32* @global_var_1001c1f0.335, align 4
  %v3_1000b0dc = icmp eq i32 %v3_1000b0d8, 0
  br i1 %v3_1000b0dc, label %dec_label_pc_1000b0e4, label %dec_label_pc_1000b0f0

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b0bc
  store i32 268480744, i32* @lr, align 4
  %v1_1000b0e4 = call i32 @function_1000b6b0(i32 0)
  %v1_1000b0e8 = icmp slt i32 %v1_1000b0e4, 0
  br i1 %v1_1000b0e8, label %dec_label_pc_1000b110, label %dec_label_pc_1000b0e4.dec_label_pc_1000b0f0_crit_edge

dec_label_pc_1000b0e4.dec_label_pc_1000b0f0_crit_edge: ; preds = %dec_label_pc_1000b0e4
  %v0_1000b0f0.pre = load i32, i32* @r30, align 4
  %v3_1000b0f4.pre = load i32, i32* @global_var_1001c1f0.335, align 4
  br label %dec_label_pc_1000b0f0

dec_label_pc_1000b0f0:                            ; preds = %dec_label_pc_1000b0e4.dec_label_pc_1000b0f0_crit_edge, %dec_label_pc_1000b0bc
  %v3_1000b0f4 = phi i32 [ %v3_1000b0f4.pre, %dec_label_pc_1000b0e4.dec_label_pc_1000b0f0_crit_edge ], [ %v3_1000b0d8, %dec_label_pc_1000b0bc ]
  %v1_1000b0fc = phi i32 [ %v0_1000b0f0.pre, %dec_label_pc_1000b0e4.dec_label_pc_1000b0f0_crit_edge ], [ %arg1, %dec_label_pc_1000b0bc ]
  %v3_1000b0f0 = icmp eq i32 %v1_1000b0fc, 0
  store i32 %v3_1000b0f4, i32* @r31, align 4
  br i1 %v3_1000b0f0, label %dec_label_pc_1000b114, label %dec_label_pc_1000b104

dec_label_pc_1000b104:                            ; preds = %dec_label_pc_1000b0f0
  %v2_1000b0fc = add i32 %v1_1000b0fc, %v3_1000b0f4
  store i32 268480776, i32* @lr, align 4
  %v1_1000b104 = call i32 @function_1000b6b0(i32 %v2_1000b0fc)
  %tmp6 = icmp sgt i32 %v1_1000b104, -1
  br i1 %tmp6, label %dec_label_pc_1000b104.dec_label_pc_1000b114_crit_edge, label %dec_label_pc_1000b110

dec_label_pc_1000b104.dec_label_pc_1000b114_crit_edge: ; preds = %dec_label_pc_1000b104
  %v0_1000b118.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b114

dec_label_pc_1000b110:                            ; preds = %dec_label_pc_1000b104, %dec_label_pc_1000b0e4
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b114

dec_label_pc_1000b114:                            ; preds = %dec_label_pc_1000b104.dec_label_pc_1000b114_crit_edge, %dec_label_pc_1000b0f0, %dec_label_pc_1000b110
  %v0_1000b118 = phi i32 [ %v0_1000b118.pre, %dec_label_pc_1000b104.dec_label_pc_1000b114_crit_edge ], [ %v3_1000b0f4, %dec_label_pc_1000b0f0 ], [ -1, %dec_label_pc_1000b110 ]
  ret i32 %v0_1000b118

; uselistorder directives
  uselistorder i32 %v3_1000b0f4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b6b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b114, { 2, 0, 1 }
}

define i32 @function_1000b12c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b12c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b144 = call i32 @__asm_mfcr()
  %v1_1000b148 = and i32 %v0_1000b144, 268435456
  %v3_1000b148 = icmp eq i32 %v1_1000b148, 0
  store i32 %v0_1000b144, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b148, label %dec_label_pc_1000b160, label %dec_label_pc_1000b154

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b12c
  %v0_1000b154 = call i32 @function_1000953c()
  %v0_1000b158 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b158 = inttoptr i32 %v0_1000b154 to i32*
  store i32 %v0_1000b158, i32* %v2_1000b158, align 4
  br label %dec_label_pc_1000b160

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b12c, %dec_label_pc_1000b154
  %v0_1000b170 = phi i32 [ %v0_1000b144, %dec_label_pc_1000b12c ], [ -1, %dec_label_pc_1000b154 ]
  ret i32 %v0_1000b170

; uselistorder directives
  uselistorder label %dec_label_pc_1000b160, { 1, 0 }
}

define i32 @function_1000b174(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b174:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268480924, i32* @lr, align 4
  %v3_1000b198 = call i32 @function_10009624(i32 %arg2, i32 0, i32 104)
  %v2_1000b19c = load i32, i32* %arg1, align 4
  %v1_1000b1a0 = add i32 %tmp, 4
  %v2_1000b1a0 = inttoptr i32 %v1_1000b1a0 to i32*
  %v3_1000b1a0 = load i32, i32* %v2_1000b1a0, align 4
  store i32 %v3_1000b1a0, i32* %r10.global-to-local, align 4
  %v1_1000b1a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1a4 = inttoptr i32 %v1_1000b1a4 to i32*
  store i32 %v2_1000b19c, i32* %v2_1000b1a4, align 4
  %v0_1000b1a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b1a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1a8 = add i32 %v1_1000b1a8, 4
  %v3_1000b1a8 = inttoptr i32 %v2_1000b1a8 to i32*
  store i32 %v0_1000b1a8, i32* %v3_1000b1a8, align 4
  %v0_1000b1ac = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1ac = add i32 %v0_1000b1ac, 8
  %v2_1000b1ac = inttoptr i32 %v1_1000b1ac to i32*
  %v3_1000b1ac = load i32, i32* %v2_1000b1ac, align 4
  %v1_1000b1b0 = add i32 %v0_1000b1ac, 12
  %v2_1000b1b0 = inttoptr i32 %v1_1000b1b0 to i32*
  %v3_1000b1b0 = load i32, i32* %v2_1000b1b0, align 4
  store i32 %v3_1000b1b0, i32* %r10.global-to-local, align 4
  %v1_1000b1b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1b4 = add i32 %v1_1000b1b4, 8
  %v3_1000b1b4 = inttoptr i32 %v2_1000b1b4 to i32*
  store i32 %v3_1000b1ac, i32* %v3_1000b1b4, align 4
  %v0_1000b1b8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b1b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1b8 = add i32 %v1_1000b1b8, 12
  %v3_1000b1b8 = inttoptr i32 %v2_1000b1b8 to i32*
  store i32 %v0_1000b1b8, i32* %v3_1000b1b8, align 4
  %v0_1000b1bc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1bc = add i32 %v0_1000b1bc, 16
  %v2_1000b1bc = inttoptr i32 %v1_1000b1bc to i32*
  %v3_1000b1bc = load i32, i32* %v2_1000b1bc, align 4
  %v1_1000b1c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1c0 = add i32 %v1_1000b1c0, 16
  %v3_1000b1c0 = inttoptr i32 %v2_1000b1c0 to i32*
  store i32 %v3_1000b1bc, i32* %v3_1000b1c0, align 4
  %v0_1000b1c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1c4 = add i32 %v0_1000b1c4, 20
  %v2_1000b1c4 = inttoptr i32 %v1_1000b1c4 to i32*
  %v3_1000b1c4 = load i32, i32* %v2_1000b1c4, align 4
  %v1_1000b1c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1c8 = add i32 %v1_1000b1c8, 20
  %v3_1000b1c8 = inttoptr i32 %v2_1000b1c8 to i32*
  store i32 %v3_1000b1c4, i32* %v3_1000b1c8, align 4
  %v0_1000b1cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1cc = add i32 %v0_1000b1cc, 24
  %v2_1000b1cc = inttoptr i32 %v1_1000b1cc to i32*
  %v3_1000b1cc = load i32, i32* %v2_1000b1cc, align 4
  %v1_1000b1d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1d0 = add i32 %v1_1000b1d0, 24
  %v3_1000b1d0 = inttoptr i32 %v2_1000b1d0 to i32*
  store i32 %v3_1000b1cc, i32* %v3_1000b1d0, align 4
  %v0_1000b1d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1d4 = add i32 %v0_1000b1d4, 28
  %v2_1000b1d4 = inttoptr i32 %v1_1000b1d4 to i32*
  %v3_1000b1d4 = load i32, i32* %v2_1000b1d4, align 4
  %v1_1000b1d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1d8 = add i32 %v1_1000b1d8, 28
  %v3_1000b1d8 = inttoptr i32 %v2_1000b1d8 to i32*
  store i32 %v3_1000b1d4, i32* %v3_1000b1d8, align 4
  %v0_1000b1dc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1dc = add i32 %v0_1000b1dc, 32
  %v2_1000b1dc = inttoptr i32 %v1_1000b1dc to i32*
  %v3_1000b1dc = load i32, i32* %v2_1000b1dc, align 4
  %v1_1000b1e0 = add i32 %v0_1000b1dc, 36
  %v2_1000b1e0 = inttoptr i32 %v1_1000b1e0 to i32*
  %v3_1000b1e0 = load i32, i32* %v2_1000b1e0, align 4
  store i32 %v3_1000b1e0, i32* %r10.global-to-local, align 4
  %v1_1000b1e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1e4 = add i32 %v1_1000b1e4, 32
  %v3_1000b1e4 = inttoptr i32 %v2_1000b1e4 to i32*
  store i32 %v3_1000b1dc, i32* %v3_1000b1e4, align 4
  %v0_1000b1e8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b1e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1e8 = add i32 %v1_1000b1e8, 36
  %v3_1000b1e8 = inttoptr i32 %v2_1000b1e8 to i32*
  store i32 %v0_1000b1e8, i32* %v3_1000b1e8, align 4
  %v0_1000b1ec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1ec = add i32 %v0_1000b1ec, 48
  %v2_1000b1ec = inttoptr i32 %v1_1000b1ec to i32*
  %v3_1000b1ec = load i32, i32* %v2_1000b1ec, align 4
  %v1_1000b1f0 = add i32 %v0_1000b1ec, 52
  %v2_1000b1f0 = inttoptr i32 %v1_1000b1f0 to i32*
  %v3_1000b1f0 = load i32, i32* %v2_1000b1f0, align 4
  store i32 %v3_1000b1f0, i32* %r10.global-to-local, align 4
  %v1_1000b1f4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1f4 = add i32 %v1_1000b1f4, 48
  %v3_1000b1f4 = inttoptr i32 %v2_1000b1f4 to i32*
  store i32 %v3_1000b1ec, i32* %v3_1000b1f4, align 4
  %v0_1000b1f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b1f8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1f8 = add i32 %v1_1000b1f8, 52
  %v3_1000b1f8 = inttoptr i32 %v2_1000b1f8 to i32*
  store i32 %v0_1000b1f8, i32* %v3_1000b1f8, align 4
  %v0_1000b1fc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b1fc = add i32 %v0_1000b1fc, 56
  %v2_1000b1fc = inttoptr i32 %v1_1000b1fc to i32*
  %v3_1000b1fc = load i32, i32* %v2_1000b1fc, align 4
  %v1_1000b200 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b200 = add i32 %v1_1000b200, 56
  %v3_1000b200 = inttoptr i32 %v2_1000b200 to i32*
  store i32 %v3_1000b1fc, i32* %v3_1000b200, align 4
  %v0_1000b204 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b204 = add i32 %v0_1000b204, 64
  %v2_1000b204 = inttoptr i32 %v1_1000b204 to i32*
  %v3_1000b204 = load i32, i32* %v2_1000b204, align 4
  %v1_1000b208 = add i32 %v0_1000b204, 68
  %v2_1000b208 = inttoptr i32 %v1_1000b208 to i32*
  %v3_1000b208 = load i32, i32* %v2_1000b208, align 4
  store i32 %v3_1000b208, i32* %r10.global-to-local, align 4
  %v1_1000b20c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b20c = add i32 %v1_1000b20c, 64
  %v3_1000b20c = inttoptr i32 %v2_1000b20c to i32*
  store i32 %v3_1000b204, i32* %v3_1000b20c, align 4
  %v0_1000b210 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b210 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b210 = add i32 %v1_1000b210, 68
  %v3_1000b210 = inttoptr i32 %v2_1000b210 to i32*
  store i32 %v0_1000b210, i32* %v3_1000b210, align 4
  %v0_1000b214 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b214 = add i32 %v0_1000b214, 72
  %v2_1000b214 = inttoptr i32 %v1_1000b214 to i32*
  %v3_1000b214 = load i32, i32* %v2_1000b214, align 4
  %v1_1000b218 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b218 = add i32 %v1_1000b218, 72
  %v3_1000b218 = inttoptr i32 %v2_1000b218 to i32*
  store i32 %v3_1000b214, i32* %v3_1000b218, align 4
  %v0_1000b21c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b21c = add i32 %v0_1000b21c, 80
  %v2_1000b21c = inttoptr i32 %v1_1000b21c to i32*
  %v3_1000b21c = load i32, i32* %v2_1000b21c, align 4
  %v1_1000b220 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b220 = add i32 %v1_1000b220, 80
  %v3_1000b220 = inttoptr i32 %v2_1000b220 to i32*
  store i32 %v3_1000b21c, i32* %v3_1000b220, align 4
  %v0_1000b224 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b224 = add i32 %v0_1000b224, 88
  %v2_1000b224 = inttoptr i32 %v1_1000b224 to i32*
  %v3_1000b224 = load i32, i32* %v2_1000b224, align 4
  %v1_1000b228 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b228 = add i32 %v1_1000b228, 88
  %v3_1000b228 = inttoptr i32 %v2_1000b228 to i32*
  store i32 %v3_1000b224, i32* %v3_1000b228, align 4
  ret i32 %v3_1000b198

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 80, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b240(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b240:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b244 = load i32, i32* @lr, align 4
  store i32 %v0_1000b244, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268481128, i32* @lr, align 4
  %v3_1000b264 = call i32 @function_10009624(i32 %arg2, i32 0, i32 88)
  %v0_1000b268 = load i32, i32* @r28, align 4
  %v1_1000b268 = inttoptr i32 %v0_1000b268 to i32*
  %v2_1000b268 = load i32, i32* %v1_1000b268, align 4
  store i32 %v2_1000b268, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b270 = load i32, i32* @r29, align 4
  %v2_1000b270 = add i32 %v1_1000b270, 4
  %v3_1000b270 = inttoptr i32 %v2_1000b270 to i32*
  store i32 %v2_1000b268, i32* %v3_1000b270, align 4
  %v0_1000b274 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b274 = load i32, i32* @r29, align 4
  %v2_1000b274 = inttoptr i32 %v1_1000b274 to i32*
  store i32 %v0_1000b274, i32* %v2_1000b274, align 4
  %v0_1000b278 = load i32, i32* @r28, align 4
  %v1_1000b278 = add i32 %v0_1000b278, 4
  %v2_1000b278 = inttoptr i32 %v1_1000b278 to i32*
  %v3_1000b278 = load i32, i32* %v2_1000b278, align 4
  store i32 %v3_1000b278, i32* %r0.global-to-local, align 4
  %v1_1000b27c = load i32, i32* @r29, align 4
  %v2_1000b27c = add i32 %v1_1000b27c, 12
  %v3_1000b27c = inttoptr i32 %v2_1000b27c to i32*
  store i32 %v3_1000b278, i32* %v3_1000b27c, align 4
  %v0_1000b280 = load i32, i32* @r28, align 4
  %v1_1000b280 = add i32 %v0_1000b280, 8
  %v2_1000b280 = inttoptr i32 %v1_1000b280 to i32*
  %v3_1000b280 = load i32, i32* %v2_1000b280, align 4
  store i32 %v3_1000b280, i32* %r0.global-to-local, align 4
  %v1_1000b284 = load i32, i32* @r29, align 4
  %v2_1000b284 = add i32 %v1_1000b284, 16
  %v3_1000b284 = inttoptr i32 %v2_1000b284 to i32*
  store i32 %v3_1000b280, i32* %v3_1000b284, align 4
  %v0_1000b288 = load i32, i32* @r28, align 4
  %v1_1000b288 = add i32 %v0_1000b288, 12
  %v2_1000b288 = inttoptr i32 %v1_1000b288 to i16*
  %v3_1000b288 = load i16, i16* %v2_1000b288, align 2
  %v4_1000b288 = zext i16 %v3_1000b288 to i32
  store i32 %v4_1000b288, i32* %r0.global-to-local, align 4
  %v1_1000b28c = load i32, i32* @r29, align 4
  %v2_1000b28c = add i32 %v1_1000b28c, 20
  %v3_1000b28c = inttoptr i32 %v2_1000b28c to i32*
  store i32 %v4_1000b288, i32* %v3_1000b28c, align 4
  %v0_1000b290 = load i32, i32* @r28, align 4
  %v1_1000b290 = add i32 %v0_1000b290, 16
  %v2_1000b290 = inttoptr i32 %v1_1000b290 to i32*
  %v3_1000b290 = load i32, i32* %v2_1000b290, align 4
  store i32 %v3_1000b290, i32* %r0.global-to-local, align 4
  %v1_1000b294 = load i32, i32* @r29, align 4
  %v2_1000b294 = add i32 %v1_1000b294, 24
  %v3_1000b294 = inttoptr i32 %v2_1000b294 to i32*
  store i32 %v3_1000b290, i32* %v3_1000b294, align 4
  %v0_1000b298 = load i32, i32* @r28, align 4
  %v1_1000b298 = add i32 %v0_1000b298, 20
  %v2_1000b298 = inttoptr i32 %v1_1000b298 to i32*
  %v3_1000b298 = load i32, i32* %v2_1000b298, align 4
  store i32 %v3_1000b298, i32* %r0.global-to-local, align 4
  %v1_1000b29c = load i32, i32* @r29, align 4
  %v2_1000b29c = add i32 %v1_1000b29c, 28
  %v3_1000b29c = inttoptr i32 %v2_1000b29c to i32*
  store i32 %v3_1000b298, i32* %v3_1000b29c, align 4
  %v0_1000b2a0 = load i32, i32* @r28, align 4
  %v1_1000b2a0 = add i32 %v0_1000b2a0, 24
  %v2_1000b2a0 = inttoptr i32 %v1_1000b2a0 to i32*
  %v3_1000b2a0 = load i32, i32* %v2_1000b2a0, align 4
  store i32 %v3_1000b2a0, i32* %r0.global-to-local, align 4
  %v0_1000b2a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b2a4 = load i32, i32* @r29, align 4
  %v2_1000b2a4 = add i32 %v1_1000b2a4, 32
  %v3_1000b2a4 = inttoptr i32 %v2_1000b2a4 to i32*
  store i32 %v0_1000b2a4, i32* %v3_1000b2a4, align 4
  %v0_1000b2a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b2a8 = load i32, i32* @r29, align 4
  %v2_1000b2a8 = add i32 %v1_1000b2a8, 36
  %v3_1000b2a8 = inttoptr i32 %v2_1000b2a8 to i32*
  store i32 %v0_1000b2a8, i32* %v3_1000b2a8, align 4
  %v0_1000b2ac = load i32, i32* @r28, align 4
  %v1_1000b2ac = add i32 %v0_1000b2ac, 28
  %v2_1000b2ac = inttoptr i32 %v1_1000b2ac to i32*
  %v3_1000b2ac = load i32, i32* %v2_1000b2ac, align 4
  store i32 %v3_1000b2ac, i32* %r0.global-to-local, align 4
  %v1_1000b2b0 = load i32, i32* @r29, align 4
  %v2_1000b2b0 = add i32 %v1_1000b2b0, 44
  %v3_1000b2b0 = inttoptr i32 %v2_1000b2b0 to i32*
  store i32 %v3_1000b2ac, i32* %v3_1000b2b0, align 4
  %v0_1000b2b4 = load i32, i32* @r28, align 4
  %v1_1000b2b4 = add i32 %v0_1000b2b4, 32
  %v2_1000b2b4 = inttoptr i32 %v1_1000b2b4 to i32*
  %v3_1000b2b4 = load i32, i32* %v2_1000b2b4, align 4
  store i32 %v3_1000b2b4, i32* %r0.global-to-local, align 4
  %v1_1000b2b8 = load i32, i32* @r29, align 4
  %v2_1000b2b8 = add i32 %v1_1000b2b8, 48
  %v3_1000b2b8 = inttoptr i32 %v2_1000b2b8 to i32*
  store i32 %v3_1000b2b4, i32* %v3_1000b2b8, align 4
  %v0_1000b2bc = load i32, i32* @r28, align 4
  %v1_1000b2bc = add i32 %v0_1000b2bc, 36
  %v2_1000b2bc = inttoptr i32 %v1_1000b2bc to i32*
  %v3_1000b2bc = load i32, i32* %v2_1000b2bc, align 4
  store i32 %v3_1000b2bc, i32* %r0.global-to-local, align 4
  %v1_1000b2c0 = load i32, i32* @r29, align 4
  %v2_1000b2c0 = add i32 %v1_1000b2c0, 52
  %v3_1000b2c0 = inttoptr i32 %v2_1000b2c0 to i32*
  store i32 %v3_1000b2bc, i32* %v3_1000b2c0, align 4
  %v0_1000b2c4 = load i32, i32* @r28, align 4
  %v1_1000b2c4 = add i32 %v0_1000b2c4, 40
  %v2_1000b2c4 = inttoptr i32 %v1_1000b2c4 to i32*
  %v3_1000b2c4 = load i32, i32* %v2_1000b2c4, align 4
  store i32 %v3_1000b2c4, i32* %r0.global-to-local, align 4
  %v1_1000b2c8 = load i32, i32* @r29, align 4
  %v2_1000b2c8 = add i32 %v1_1000b2c8, 56
  %v3_1000b2c8 = inttoptr i32 %v2_1000b2c8 to i32*
  store i32 %v3_1000b2c4, i32* %v3_1000b2c8, align 4
  %v0_1000b2cc = load i32, i32* @r28, align 4
  %v1_1000b2cc = add i32 %v0_1000b2cc, 48
  %v2_1000b2cc = inttoptr i32 %v1_1000b2cc to i32*
  %v3_1000b2cc = load i32, i32* %v2_1000b2cc, align 4
  store i32 %v3_1000b2cc, i32* %r0.global-to-local, align 4
  %v1_1000b2d0 = load i32, i32* @r29, align 4
  %v2_1000b2d0 = add i32 %v1_1000b2d0, 64
  %v3_1000b2d0 = inttoptr i32 %v2_1000b2d0 to i32*
  store i32 %v3_1000b2cc, i32* %v3_1000b2d0, align 4
  %v0_1000b2d4 = load i32, i32* @r28, align 4
  %v1_1000b2d4 = add i32 %v0_1000b2d4, 56
  %v2_1000b2d4 = inttoptr i32 %v1_1000b2d4 to i32*
  %v3_1000b2d4 = load i32, i32* %v2_1000b2d4, align 4
  %v1_1000b2d8 = load i32, i32* @r29, align 4
  %v2_1000b2d8 = add i32 %v1_1000b2d8, 72
  %v3_1000b2d8 = inttoptr i32 %v2_1000b2d8 to i32*
  store i32 %v3_1000b2d4, i32* %v3_1000b2d8, align 4
  store i32 %v0_1000b244, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b264

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 7, 0, 4, 1, 5, 6, 3, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 21, 22, 6, 7, 0, 1, 8, 46, 47, 48, 41, 42, 43, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14, 19, 20, 2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 5 }
  uselistorder i32 20, { 26, 27, 17, 18, 19, 20, 28, 29, 30, 31, 21, 5, 0, 1, 22, 23, 2, 24, 25, 32, 33, 6, 34, 35, 36, 37, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 8, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 10, 63, 64, 65, 66, 67, 11, 68, 69, 70, 71, 12, 72, 13, 73, 74, 3, 14, 75, 76, 77, 4, 15, 78, 79, 80, 81, 82, 83, 16, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 }
  uselistorder i32 16, { 80, 81, 66, 67, 82, 83, 84, 85, 86, 20, 79, 68, 164, 165, 87, 88, 46, 47, 48, 69, 49, 50, 70, 71, 120, 117, 72, 73, 51, 23, 75, 76, 18, 0, 19, 1, 2, 77, 3, 74, 78, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 24, 148, 149, 150, 151, 152, 89, 90, 26, 91, 92, 4, 93, 94, 95, 25, 96, 97, 28, 98, 99, 100, 101, 102, 27, 32, 103, 104, 105, 5, 106, 107, 6, 7, 21, 109, 108, 29, 31, 30, 36, 110, 111, 112, 8, 113, 114, 9, 10, 22, 116, 115, 33, 35, 34, 11, 37, 118, 12, 13, 119, 121, 122, 38, 123, 124, 125, 126, 127, 14, 128, 39, 129, 130, 131, 15, 132, 135, 136, 133, 134, 137, 138, 16, 139, 40, 140, 141, 142, 17, 143, 146, 147, 144, 145, 153, 154, 155, 156, 41, 157, 158, 159, 43, 160, 42, 161, 45, 162, 44, 163 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b2f0() local_unnamed_addr {
dec_label_pc_1000b2f0:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b2f0 = load i32, i32* @r5, align 4
  %v1_1000b2f0 = call i32 @__asm_rlwinm.(i32 %v0_1000b2f0, i32 29, i32 3, i32 31)
  store i32 %v1_1000b2f0, i32* %r9.global-to-local, align 4
  %v4_1000b2f0 = icmp eq i32 %v1_1000b2f0, 0
  %v0_1000b2f4 = load i32, i32* @r4, align 4
  %v1_1000b2f4 = add i32 %v0_1000b2f4, -4
  store i32 %v1_1000b2f4, i32* %r4.global-to-local, align 4
  %v0_1000b2f8 = load i32, i32* @r3, align 4
  %v1_1000b2f8 = add i32 %v0_1000b2f8, -4
  store i32 %v1_1000b2f8, i32* @r11, align 4
  br i1 %v4_1000b2f0, label %dec_label_pc_1000b320, label %dec_label_pc_1000b300

dec_label_pc_1000b300:                            ; preds = %dec_label_pc_1000b2f0
  %v1_1000b300 = urem i32 %v1_1000b2f8, 4
  %v3_1000b300 = icmp eq i32 %v1_1000b300, 0
  br i1 %v3_1000b300, label %dec_label_pc_1000b308, label %dec_label_pc_1000b35c

dec_label_pc_1000b308:                            ; preds = %dec_label_pc_1000b37c.dec_label_pc_1000b308_crit_edge, %dec_label_pc_1000b300
  %v1_1000b314.pre = phi i32 [ %v1_1000b2f8, %dec_label_pc_1000b300 ], [ %v1_1000b314.pre.pre, %dec_label_pc_1000b37c.dec_label_pc_1000b308_crit_edge ]
  %v0_1000b308 = phi i32 [ %v1_1000b2f0, %dec_label_pc_1000b300 ], [ %v1_1000b37c, %dec_label_pc_1000b37c.dec_label_pc_1000b308_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b300 ], [ %v2_1000b364, %dec_label_pc_1000b37c.dec_label_pc_1000b308_crit_edge ]
  store i32 %v0_1000b308, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b30c

dec_label_pc_1000b30c:                            ; preds = %dec_label_pc_1000b30c, %dec_label_pc_1000b308
  %v1_1000b314 = phi i32 [ %v2_1000b318, %dec_label_pc_1000b30c ], [ %v1_1000b314.pre, %dec_label_pc_1000b308 ]
  %v0_1000b30c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b30c = add i32 %v0_1000b30c, 4
  %v2_1000b30c = inttoptr i32 %v1_1000b30c to i32*
  %v3_1000b30c = load i32, i32* %v2_1000b30c, align 4
  %v1_1000b310 = add i32 %v0_1000b30c, 8
  %v2_1000b310 = inttoptr i32 %v1_1000b310 to i32*
  %v3_1000b310 = load i32, i32* %v2_1000b310, align 4
  store i32 %v3_1000b310, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b310, i32* %r4.global-to-local, align 4
  %v2_1000b314 = add i32 %v1_1000b314, 4
  %v3_1000b314 = inttoptr i32 %v2_1000b314 to i32*
  store i32 %v3_1000b30c, i32* %v3_1000b314, align 4
  %v0_1000b318 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b318 = load i32, i32* @r11, align 4
  %v2_1000b318 = add i32 %v1_1000b318, 8
  %v3_1000b318 = inttoptr i32 %v2_1000b318 to i32*
  store i32 %v0_1000b318, i32* %v3_1000b318, align 4
  store i32 %v2_1000b318, i32* @r11, align 4
  %v0_1000b31c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b31c = add i32 %v0_1000b31c, -1
  store i32 %v1_1000b31c, i32* %ctr.global-to-local, align 4
  %v2_1000b31c = icmp eq i32 %v1_1000b31c, 0
  br i1 %v2_1000b31c, label %dec_label_pc_1000b320, label %dec_label_pc_1000b30c

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b30c, %dec_label_pc_1000b37c, %dec_label_pc_1000b2f0
  %.1 = phi i32 [ undef, %dec_label_pc_1000b2f0 ], [ %v2_1000b364, %dec_label_pc_1000b37c ], [ %.0, %dec_label_pc_1000b30c ]
  %v1_1000b320 = urem i32 %.1, 8
  store i32 %v1_1000b320, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b320, 4
  br i1 %tmp, label %dec_label_pc_1000b338, label %dec_label_pc_1000b32c

dec_label_pc_1000b32c:                            ; preds = %dec_label_pc_1000b320
  %v0_1000b32c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b32c = add i32 %v0_1000b32c, 4
  %v2_1000b32c = inttoptr i32 %v1_1000b32c to i32*
  %v3_1000b32c = load i32, i32* %v2_1000b32c, align 4
  store i32 %v1_1000b32c, i32* %r4.global-to-local, align 4
  %v1_1000b330 = add nsw i32 %v1_1000b320, -4
  store i32 %v1_1000b330, i32* @r5, align 4
  %v1_1000b334 = load i32, i32* @r11, align 4
  %v2_1000b334 = add i32 %v1_1000b334, 4
  %v3_1000b334 = inttoptr i32 %v2_1000b334 to i32*
  store i32 %v3_1000b32c, i32* %v3_1000b334, align 4
  store i32 %v2_1000b334, i32* @r11, align 4
  %v0_1000b338.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b338

dec_label_pc_1000b338:                            ; preds = %dec_label_pc_1000b320, %dec_label_pc_1000b32c
  %v0_1000b338 = phi i32 [ %v1_1000b320, %dec_label_pc_1000b320 ], [ %v0_1000b338.pre, %dec_label_pc_1000b32c ]
  %v3_1000b338 = icmp eq i32 %v0_1000b338, 0
  %v0_1000b33c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b338, i32 %v0_1000b33c)
  %v0_1000b340 = load i32, i32* @r5, align 4
  store i32 %v0_1000b340, i32* %ctr.global-to-local, align 4
  %v0_1000b344 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b344 = add i32 %v0_1000b344, 3
  store i32 %v1_1000b344, i32* %r4.global-to-local, align 4
  %v0_1000b348 = load i32, i32* @r11, align 4
  %v1_1000b348 = add i32 %v0_1000b348, 3
  store i32 %v1_1000b348, i32* %r9.global-to-local, align 4
  %v1_1000b34c9 = add i32 %v0_1000b344, 4
  %v2_1000b34c10 = inttoptr i32 %v1_1000b34c9 to i8*
  %v3_1000b34c11 = load i8, i8* %v2_1000b34c10, align 1
  store i32 %v1_1000b34c9, i32* %r4.global-to-local, align 4
  %v3_1000b35013 = add i32 %v0_1000b348, 4
  %v4_1000b35014 = inttoptr i32 %v3_1000b35013 to i8*
  store i8 %v3_1000b34c11, i8* %v4_1000b35014, align 1
  store i32 %v3_1000b35013, i32* %r9.global-to-local, align 4
  %v0_1000b35415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b35416 = add i32 %v0_1000b35415, -1
  store i32 %v1_1000b35416, i32* %ctr.global-to-local, align 4
  %v2_1000b35417 = icmp eq i32 %v1_1000b35416, 0
  br i1 %v2_1000b35417, label %dec_label_pc_1000b388, label %dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge

dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge: ; preds = %dec_label_pc_1000b338, %dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge
  %v3_1000b35018 = phi i32 [ %v3_1000b350, %dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge ], [ %v3_1000b35013, %dec_label_pc_1000b338 ]
  %v0_1000b34c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b34c = add i32 %v0_1000b34c.pre, 1
  %v2_1000b34c = inttoptr i32 %v1_1000b34c to i8*
  %v3_1000b34c = load i8, i8* %v2_1000b34c, align 1
  store i32 %v1_1000b34c, i32* %r4.global-to-local, align 4
  %v3_1000b350 = add i32 %v3_1000b35018, 1
  %v4_1000b350 = inttoptr i32 %v3_1000b350 to i8*
  store i8 %v3_1000b34c, i8* %v4_1000b350, align 1
  store i32 %v3_1000b350, i32* %r9.global-to-local, align 4
  %v0_1000b354 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b354 = add i32 %v0_1000b354, -1
  store i32 %v1_1000b354, i32* %ctr.global-to-local, align 4
  %v2_1000b354 = icmp eq i32 %v1_1000b354, 0
  br i1 %v2_1000b354, label %dec_label_pc_1000b388, label %dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge

dec_label_pc_1000b35c:                            ; preds = %dec_label_pc_1000b300
  %v1_1000b35c = sub nsw i32 4, %v1_1000b300
  store i32 %v1_1000b35c, i32* %ctr.global-to-local, align 4
  %v1_1000b364 = load i32, i32* @r5, align 4
  %v2_1000b364 = sub i32 %v1_1000b364, %v1_1000b35c
  br label %dec_label_pc_1000b368

dec_label_pc_1000b368:                            ; preds = %dec_label_pc_1000b368.dec_label_pc_1000b368_crit_edge, %dec_label_pc_1000b35c
  %v2_1000b370 = phi i32 [ %v1_1000b374, %dec_label_pc_1000b368.dec_label_pc_1000b368_crit_edge ], [ %v1_1000b2f8, %dec_label_pc_1000b35c ]
  %v0_1000b368 = phi i32 [ %v0_1000b368.pre, %dec_label_pc_1000b368.dec_label_pc_1000b368_crit_edge ], [ %v1_1000b2f4, %dec_label_pc_1000b35c ]
  %v1_1000b368 = add i32 %v0_1000b368, 4
  %v2_1000b368 = inttoptr i32 %v1_1000b368 to i8*
  %v3_1000b368 = load i8, i8* %v2_1000b368, align 1
  %v1_1000b36c = add i32 %v0_1000b368, 1
  store i32 %v1_1000b36c, i32* %r4.global-to-local, align 4
  %v3_1000b370 = add i32 %v2_1000b370, 4
  %v4_1000b370 = inttoptr i32 %v3_1000b370 to i8*
  store i8 %v3_1000b368, i8* %v4_1000b370, align 1
  %v0_1000b374 = load i32, i32* @r11, align 4
  %v1_1000b374 = add i32 %v0_1000b374, 1
  store i32 %v1_1000b374, i32* @r11, align 4
  %v0_1000b378 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b378 = add i32 %v0_1000b378, -1
  store i32 %v1_1000b378, i32* %ctr.global-to-local, align 4
  %v2_1000b378 = icmp eq i32 %v1_1000b378, 0
  br i1 %v2_1000b378, label %dec_label_pc_1000b37c, label %dec_label_pc_1000b368.dec_label_pc_1000b368_crit_edge

dec_label_pc_1000b368.dec_label_pc_1000b368_crit_edge: ; preds = %dec_label_pc_1000b368
  %v0_1000b368.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b368

dec_label_pc_1000b37c:                            ; preds = %dec_label_pc_1000b368
  %v1_1000b37c = call i32 @__asm_rlwinm.(i32 %v2_1000b364, i32 29, i32 3, i32 31)
  store i32 %v1_1000b37c, i32* %r9.global-to-local, align 4
  %v4_1000b37c = icmp eq i32 %v1_1000b37c, 0
  br i1 %v4_1000b37c, label %dec_label_pc_1000b320, label %dec_label_pc_1000b37c.dec_label_pc_1000b308_crit_edge

dec_label_pc_1000b37c.dec_label_pc_1000b308_crit_edge: ; preds = %dec_label_pc_1000b37c
  %v1_1000b314.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b308

dec_label_pc_1000b388:                            ; preds = %dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge, %dec_label_pc_1000b338
  %v0_1000b388 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b388

; uselistorder directives
  uselistorder i32 %v1_1000b37c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b378, { 1, 0 }
  uselistorder i32 %v1_1000b374, { 1, 0 }
  uselistorder i32 %v0_1000b368, { 1, 0 }
  uselistorder i32 %v2_1000b364, { 2, 1, 0 }
  uselistorder i32 %v1_1000b354, { 1, 0 }
  uselistorder i32 %v3_1000b350, { 1, 2, 0 }
  uselistorder i32 %v1_1000b320, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b31c, { 1, 0 }
  uselistorder i32 %v2_1000b318, { 1, 2, 0 }
  uselistorder i32 %v1_1000b300, { 1, 0 }
  uselistorder i32 %v1_1000b2f8, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 32, 33, 28, 30, 29, 31, 3, 4, 36, 37, 34, 35, 38, 39, 26, 27, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 16, 17, 20, 21, 18, 19, 22, 23, 2 }
  uselistorder label %dec_label_pc_1000b34c.dec_label_pc_1000b34c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b338, { 1, 0 }
  uselistorder label %dec_label_pc_1000b320, { 1, 0, 2 }
}

define i32 @function_1000b38c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b38c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268481448, i32* @lr, align 4
  %v0_1000b3a4 = call i32 @function_1000b2f0()
  %v0_1000b3ac = load i32, i32* @r28, align 4
  %v1_1000b3ac = load i32, i32* @r29, align 4
  %v2_1000b3ac = add i32 %v1_1000b3ac, %v0_1000b3ac
  ret i32 %v2_1000b3ac

; uselistorder directives
  uselistorder i32* @r28, { 7, 8, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 1, 77, 78, 79, 80, 81, 82, 299, 300, 301, 302, 303, 2, 52, 53, 54, 6, 55, 263, 264, 265, 266, 267, 268, 269, 270, 271, 285, 286, 287, 288, 9, 10, 11, 12, 13, 83, 84, 14, 15, 16, 17, 18, 25, 26, 27, 28, 19, 3, 20, 21, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 46, 47, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 85, 86, 87, 88, 89, 90, 91, 4, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 289, 290, 292, 293, 5, 294, 295, 296, 297, 298 }
}

define i32 @function_1000b3c0(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000b3c0:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000b3c0 = icmp eq i8* %arg1, null
  br i1 %v3_1000b3c0, label %dec_label_pc_1000b478, label %dec_label_pc_1000b3c8

dec_label_pc_1000b3c8:                            ; preds = %dec_label_pc_1000b3c0
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000b3dc.pre = load i32, i32* bitcast (i32** @global_var_1001c17c.317 to i32*), align 4
  br label %dec_label_pc_1000b3d8

dec_label_pc_1000b3d8:                            ; preds = %dec_label_pc_1000b3c8, %dec_label_pc_1000b450
  %v0_1000b450 = phi i32 [ 0, %dec_label_pc_1000b3c8 ], [ %v2_1000b458, %dec_label_pc_1000b450 ]
  %v0_1000b454 = phi i32 [ 1, %dec_label_pc_1000b3c8 ], [ %v1_1000b454, %dec_label_pc_1000b450 ]
  %v0_1000b3d8 = phi i32 [ %tmp, %dec_label_pc_1000b3c8 ], [ %v0_1000b3d83, %dec_label_pc_1000b450 ]
  %v1_1000b3d8 = inttoptr i32 %v0_1000b3d8 to i8*
  %v2_1000b3d8 = load i8, i8* %v1_1000b3d8, align 1
  %v3_1000b3d8 = zext i8 %v2_1000b3d8 to i32
  %v1_1000b3e0 = mul nuw nsw i32 %v3_1000b3d8, 2
  %v2_1000b3e4 = add i32 %v1_1000b3e0, %v3_1000b3dc.pre
  %v3_1000b3e4 = inttoptr i32 %v2_1000b3e4 to i16*
  %v4_1000b3e4 = load i16, i16* %v3_1000b3e4, align 2
  %v1_1000b3e8 = and i16 %v4_1000b3e4, 8
  %v3_1000b3e8 = icmp eq i16 %v1_1000b3e8, 0
  br i1 %v3_1000b3e8, label %dec_label_pc_1000b478, label %dec_label_pc_1000b3f0

dec_label_pc_1000b3f0:                            ; preds = %dec_label_pc_1000b3d8
  br label %dec_label_pc_1000b408

dec_label_pc_1000b3f8:                            ; preds = %dec_label_pc_1000b408
  %v1_1000b40c = mul i32 %v1_1000b458, 10
  %v2_1000b414 = add i32 %v3_1000b408, %v1_1000b40c
  %v1_1000b3f8 = add i32 %v2_1000b414, -48
  %v1_1000b3fc = add i32 %v0_1000b440, 1
  %v2_1000b400 = icmp sgt i32 %v1_1000b3f8, 255
  br i1 %v2_1000b400, label %dec_label_pc_1000b478, label %dec_label_pc_1000b408

dec_label_pc_1000b408:                            ; preds = %dec_label_pc_1000b3f8, %dec_label_pc_1000b3f0
  %v1_1000b458 = phi i32 [ %v1_1000b3f8, %dec_label_pc_1000b3f8 ], [ 0, %dec_label_pc_1000b3f0 ]
  %v0_1000b440 = phi i32 [ %v1_1000b3fc, %dec_label_pc_1000b3f8 ], [ %v0_1000b3d8, %dec_label_pc_1000b3f0 ]
  %v1_1000b408 = inttoptr i32 %v0_1000b440 to i8*
  %v2_1000b408 = load i8, i8* %v1_1000b408, align 1
  %v3_1000b408 = zext i8 %v2_1000b408 to i32
  %v1_1000b410 = mul nuw nsw i32 %v3_1000b408, 2
  %v2_1000b418 = add i32 %v1_1000b410, %v3_1000b3dc.pre
  %v3_1000b418 = inttoptr i32 %v2_1000b418 to i16*
  %v4_1000b418 = load i16, i16* %v3_1000b418, align 2
  %v5_1000b418 = zext i16 %v4_1000b418 to i32
  %v1_1000b41c = and i32 %v5_1000b418, 8
  %v3_1000b41c = icmp eq i32 %v1_1000b41c, 0
  br i1 %v3_1000b41c, label %dec_label_pc_1000b424, label %dec_label_pc_1000b3f8

dec_label_pc_1000b424:                            ; preds = %dec_label_pc_1000b408
  %v2_1000b424 = icmp sgt i32 %v0_1000b454, 3
  br i1 %v2_1000b424, label %dec_label_pc_1000b43c, label %dec_label_pc_1000b42c

dec_label_pc_1000b42c:                            ; preds = %dec_label_pc_1000b424
  %v3_1000b42c = icmp eq i8 %v2_1000b408, 46
  br i1 %v3_1000b42c, label %dec_label_pc_1000b434, label %dec_label_pc_1000b478

dec_label_pc_1000b434:                            ; preds = %dec_label_pc_1000b42c
  %v1_1000b434 = add i32 %v0_1000b440, 1
  br label %dec_label_pc_1000b450

dec_label_pc_1000b43c:                            ; preds = %dec_label_pc_1000b424
  %v3_1000b43c = icmp eq i8 %v2_1000b408, 0
  %v1_1000b440 = add i32 %v0_1000b440, 1
  br i1 %v3_1000b43c, label %dec_label_pc_1000b450, label %dec_label_pc_1000b448

dec_label_pc_1000b448:                            ; preds = %dec_label_pc_1000b43c
  %v1_1000b448 = and i32 %v5_1000b418, 32
  %v3_1000b448 = icmp eq i32 %v1_1000b448, 0
  br i1 %v3_1000b448, label %dec_label_pc_1000b478, label %dec_label_pc_1000b450

dec_label_pc_1000b450:                            ; preds = %dec_label_pc_1000b448, %dec_label_pc_1000b43c, %dec_label_pc_1000b434
  %v0_1000b3d83 = phi i32 [ %v1_1000b440, %dec_label_pc_1000b448 ], [ %v1_1000b440, %dec_label_pc_1000b43c ], [ %v1_1000b434, %dec_label_pc_1000b434 ]
  %v1_1000b450 = mul i32 %v0_1000b450, 256
  %v1_1000b454 = add nuw nsw i32 %v0_1000b454, 1
  %v2_1000b458 = or i32 %v1_1000b458, %v1_1000b450
  store i32 %v2_1000b458, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000b454, 5
  br i1 %tmp10, label %dec_label_pc_1000b3d8, label %dec_label_pc_1000b464

dec_label_pc_1000b464:                            ; preds = %dec_label_pc_1000b450
  %v0_1000b464 = load i32, i32* @r4, align 4
  %v3_1000b464 = icmp eq i32 %v0_1000b464, 0
  %v0_1000b46c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b464, i32 %v0_1000b46c)
  %v0_1000b470 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b470 = load i32, i32* @r4, align 4
  %v2_1000b470 = inttoptr i32 %v1_1000b470 to i32*
  store i32 %v0_1000b470, i32* %v2_1000b470, align 4
  ret i32 1

dec_label_pc_1000b478:                            ; preds = %dec_label_pc_1000b42c, %dec_label_pc_1000b448, %dec_label_pc_1000b3d8, %dec_label_pc_1000b3f8, %dec_label_pc_1000b3c0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b458, { 1, 0 }
  uselistorder i32 %v1_1000b454, { 1, 0 }
  uselistorder i32 %v0_1000b440, { 0, 1, 3, 2 }
  uselistorder i32 5, { 22, 23, 24, 37, 25, 26, 38, 39, 3, 2, 1, 40, 5, 6, 41, 0, 42, 43, 4, 44, 27, 28, 29, 30, 45, 7, 9, 46, 31, 47, 8, 32, 48, 10, 33, 49, 11, 34, 50, 12, 14, 51, 13, 52, 35, 53, 16, 54, 15, 36, 55, 18, 56, 17, 21, 57, 20, 58, 19, 59, 60, 61, 62, 63 }
  uselistorder i8 0, { 5, 10, 0, 11, 12, 8, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 25, 27, 24, 2, 26, 3, 28, 29, 6, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 4, 39, 40, 41, 42, 7, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 123, 3, 137, 138, 60, 39, 40, 61, 62, 63, 64, 65, 66, 141, 142, 11, 139, 140, 12, 127, 126, 124, 125, 108, 109, 110, 128, 129, 130, 131, 132, 133, 4, 41, 42, 43, 5, 143, 6, 67, 68, 69, 70, 71, 72, 29, 30, 44, 31, 32, 45, 33, 34, 46, 47, 7, 8, 9, 48, 49, 51, 52, 35, 53, 15, 54, 56, 55, 50, 57, 58, 59, 16, 93, 73, 74, 75, 76, 77, 78, 79, 36, 80, 81, 82, 83, 84, 85, 86, 87, 37, 88, 89, 90, 91, 92, 94, 17, 95, 96, 97, 98, 99, 13, 100, 101, 102, 103, 14, 104, 105, 106, 107, 18, 111, 19, 112, 20, 113, 21, 114, 22, 115, 23, 116, 24, 117, 118, 25, 119, 26, 120, 27, 121, 28, 122, 0, 1, 10, 134, 135, 38, 136, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 69, 31, 9, 30, 2, 3, 6, 5, 0, 10, 17, 18, 19, 20, 21, 11, 22, 23, 24, 12, 13, 25, 26, 29, 27, 4, 28, 14, 1, 15, 7, 32, 33, 34, 35, 36, 8, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 16, 68 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b478, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000b3d8, { 1, 0 }
}

define i32 @function_1000b480(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b480:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b484 = load i32, i32* @lr, align 4
  store i32 %v0_1000b484, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b490 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b4a0 = add i32 %tmp, 4
  store i32 %v1_1000b4a0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b4a8 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b4a8, i32* @r3, align 4
  br i1 %v3_1000b490, label %dec_label_pc_1000b4d0, label %dec_label_pc_1000b4b0

dec_label_pc_1000b4b0:                            ; preds = %dec_label_pc_1000b480
  %v2_1000b4b0 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b4b0, i32* %r0.global-to-local, align 4
  store i32 268481724, i32* @lr, align 4
  %v0_1000b4b8 = call i32 @function_1000b2f0()
  %v0_1000b4bc = load i32, i32* @r31, align 4
  %v1_1000b4bc = add i32 %v0_1000b4bc, 132
  %v2_1000b4bc = inttoptr i32 %v1_1000b4bc to i32*
  %v3_1000b4bc = load i32, i32* %v2_1000b4bc, align 4
  store i32 %v3_1000b4bc, i32* %r0.global-to-local, align 4
  %v1_1000b4c8 = add i32 %v0_1000b4bc, 136
  %v2_1000b4c8 = inttoptr i32 %v1_1000b4c8 to i32*
  %v3_1000b4c8 = load i32, i32* %v2_1000b4c8, align 4
  store i32 %v3_1000b4c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b4d0

dec_label_pc_1000b4d0:                            ; preds = %dec_label_pc_1000b480, %dec_label_pc_1000b4b0
  store i32 268481776, i32* @lr, align 4
  %v0_1000b4ec = call i32 @function_1000b6e4()
  %v0_1000b4f0 = load i32, i32* @r30, align 4
  %v3_1000b4f0 = icmp eq i32 %v0_1000b4f0, 0
  store i32 %v0_1000b4ec, i32* @r31, align 4
  br i1 %v3_1000b4f0, label %dec_label_pc_1000b52c, label %dec_label_pc_1000b500

dec_label_pc_1000b500:                            ; preds = %dec_label_pc_1000b4d0
  %v1_1000b4f8 = icmp slt i32 %v0_1000b4ec, 0
  %v1_1000b500 = add i32 %v0_1000b4f0, 4
  store i32 %v1_1000b500, i32* @r3, align 4
  %v2_1000b504 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b504, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b4f8, label %dec_label_pc_1000b52c, label %dec_label_pc_1000b510

dec_label_pc_1000b510:                            ; preds = %dec_label_pc_1000b500
  %v3_1000b510 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b510, i32* %r0.global-to-local, align 4
  %v2_1000b514 = inttoptr i32 %v0_1000b4f0 to i32*
  store i32 %v3_1000b510, i32* %v2_1000b514, align 4
  store i32 268481820, i32* @lr, align 4
  %v0_1000b518 = call i32 @function_1000b2f0()
  %v1_1000b524 = load i32, i32* @r30, align 4
  %v2_1000b524 = add i32 %v1_1000b524, 136
  %v3_1000b524 = inttoptr i32 %v2_1000b524 to i32*
  %v0_1000b528 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b528 = load i32, i32* @r30, align 4
  %v2_1000b528 = add i32 %v1_1000b528, 132
  %v3_1000b528 = inttoptr i32 %v2_1000b528 to i32*
  store i32 %v0_1000b528, i32* %v3_1000b528, align 4
  %v0_1000b530.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b52c

dec_label_pc_1000b52c:                            ; preds = %dec_label_pc_1000b500, %dec_label_pc_1000b4d0, %dec_label_pc_1000b510
  %v0_1000b530 = phi i32 [ %v0_1000b4ec, %dec_label_pc_1000b500 ], [ %v0_1000b4ec, %dec_label_pc_1000b4d0 ], [ %v0_1000b530.pre, %dec_label_pc_1000b510 ]
  store i32 %v0_1000b484, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b530

; uselistorder directives
  uselistorder i32 %v0_1000b4ec, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000b2f0, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 148, 149, 150, 151, 0, 130, 1, 34, 35, 36, 152, 155, 153, 154, 131, 132, 133, 125, 126, 127, 128, 129, 134, 135, 139, 136, 137, 138, 8, 9, 10, 11, 12, 13, 14, 2, 15, 37, 3, 16, 23, 17, 18, 19, 4, 20, 21, 22, 5, 27, 28, 24, 25, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 6, 45, 46, 7, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 141, 142, 140, 143, 144, 145, 146, 147 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 2, 300, 301, 302, 277, 3, 278, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 309, 310, 303, 9, 304, 305, 306, 307, 308, 73, 74, 279, 280, 281, 282, 283, 284, 269, 270, 271, 272, 273, 274, 275, 276, 285, 286, 287, 291, 288, 289, 290, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 105, 4, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 20, 21, 22, 23, 120, 121, 122, 123, 124, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 30, 31, 32, 33, 34, 35, 36, 37, 38, 63, 64, 0, 65, 5, 66, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 6, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1, 7, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 8, 292, 293, 294, 295, 296, 297, 298, 299 }
  uselistorder label %dec_label_pc_1000b52c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b4d0, { 1, 0 }
}

define i32 @function_1000b544(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b578.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b55c = call i32 @function_1000a89c()
  %v2_1000b564 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b564, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b57c33 = add i32 %v2_1000b564, 124
  %v4_1000b57c34 = inttoptr i32 %v3_1000b57c33 to i32*
  store i32 0, i32* %v4_1000b57c34, align 4
  %v0_1000b58035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b58036 = add i32 %v0_1000b58035, -1
  store i32 %v1_1000b58036, i32* %r9.global-to-local, align 4
  %v0_1000b58437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b58438 = add i32 %v0_1000b58437, -1
  store i32 %v1_1000b58438, i32* %ctr.global-to-local, align 4
  %v2_1000b58439 = icmp eq i32 %v1_1000b58438, 0
  br i1 %v2_1000b58439, label %dec_label_pc_1000b588, label %dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge

dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge: ; preds = %dec_label_pc_1000b578.lr.ph, %dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge
  %v1_1000b58040 = phi i32 [ %v1_1000b580, %dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge ], [ %v1_1000b58036, %dec_label_pc_1000b578.lr.ph ]
  %v0_1000b57c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b57c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b578 = mul i32 %v1_1000b58040, 4
  %v3_1000b57c = add i32 %v1_1000b578, %v1_1000b57c.pre
  %v4_1000b57c = inttoptr i32 %v3_1000b57c to i32*
  store i32 %v0_1000b57c.pre, i32* %v4_1000b57c, align 4
  %v0_1000b580 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b580 = add i32 %v0_1000b580, -1
  store i32 %v1_1000b580, i32* %r9.global-to-local, align 4
  %v0_1000b584 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b584 = add i32 %v0_1000b584, -1
  store i32 %v1_1000b584, i32* %ctr.global-to-local, align 4
  %v2_1000b584 = icmp eq i32 %v1_1000b584, 0
  br i1 %v2_1000b584, label %dec_label_pc_1000b588, label %dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge

dec_label_pc_1000b588:                            ; preds = %dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge, %dec_label_pc_1000b578.lr.ph
  store i32 %v2_1000b564, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b590 = call i32 @function_10009cf0()
  %v3_1000b594 = icmp eq i32 %v0_1000b590, 0
  br i1 %v3_1000b594, label %dec_label_pc_1000b59c, label %dec_label_pc_1000b5ac

dec_label_pc_1000b59c:                            ; preds = %dec_label_pc_1000b588
  store i32 268481964, i32* @lr, align 4
  %v3_1000b5a8 = call i32 @function_10009178(i32 1, i32 %v2_1000b564, i32 0)
  br label %dec_label_pc_1000b5ac

dec_label_pc_1000b5ac:                            ; preds = %dec_label_pc_1000b588, %dec_label_pc_1000b59c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b5b0 = load i32, i32* @global_var_1001c1e4.338, align 4
  %v3_1000b5b4 = icmp eq i32 %v3_1000b5b0, 0
  br i1 %v3_1000b5b4, label %dec_label_pc_1000b5bc, label %dec_label_pc_1000b5e4

dec_label_pc_1000b5bc:                            ; preds = %dec_label_pc_1000b5ac
  store i32 1, i32* @global_var_1001c1e4.338, align 4
  br label %dec_label_pc_1000b5c4

dec_label_pc_1000b5c4:                            ; preds = %dec_label_pc_1000b640, %dec_label_pc_1000b5bc
  store i32 ptrtoint (i32* @global_var_1001c148.336 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b5d0 = call i32 @function_1000a89c()
  store i32 268482012, i32* @lr, align 4
  %v1_1000b5d8 = call i32 @function_1000b72c(i32 6)
  %v0_1000b5e0 = call i32 @function_1000a89c()
  %v3_1000b5e8.pre = load i32, i32* @global_var_1001c1e4.338, align 4
  br label %dec_label_pc_1000b5e4

dec_label_pc_1000b5e4:                            ; preds = %dec_label_pc_1000b5ac, %dec_label_pc_1000b5c4
  %v0_1000b65c = phi i32 [ %v3_1000b5b0, %dec_label_pc_1000b5ac ], [ %v3_1000b5e8.pre, %dec_label_pc_1000b5c4 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b5ec = icmp eq i32 %v0_1000b65c, 1
  br i1 %v3_1000b5ec, label %dec_label_pc_1000b62c.lr.ph, label %dec_label_pc_1000b65c

dec_label_pc_1000b62c.lr.ph:                      ; preds = %dec_label_pc_1000b5e4
  %v2_1000b5f8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c1e4.338, align 4
  store i32 ptrtoint (i32* @global_var_1000b60c.340 to i32), i32* @lr, align 4
  %v3_1000b608 = call i32 @function_10009624(i32 %v2_1000b5f8, i32 0, i32 140)
  store i32 %v2_1000b564, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b57c33, i32* %r9.global-to-local, align 4
  %v2_1000b63425 = add i32 %v2_1000b564, 256
  %v3_1000b63426 = inttoptr i32 %v2_1000b63425 to i32*
  store i32 -1, i32* %v3_1000b63426, align 4
  %v0_1000b63827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b63828 = add i32 %v0_1000b63827, -1
  store i32 %v1_1000b63828, i32* %r11.global-to-local, align 4
  %v0_1000b63c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b63c30 = add i32 %v0_1000b63c29, -1
  store i32 %v1_1000b63c30, i32* %ctr.global-to-local, align 4
  %v2_1000b63c31 = icmp eq i32 %v1_1000b63c30, 0
  br i1 %v2_1000b63c31, label %dec_label_pc_1000b640, label %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge

dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge: ; preds = %dec_label_pc_1000b62c.lr.ph, %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge
  %v1_1000b63832 = phi i32 [ %v1_1000b638, %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge ], [ %v1_1000b63828, %dec_label_pc_1000b62c.lr.ph ]
  %v1_1000b630.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b634.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b62c = mul i32 %v1_1000b63832, 4
  %v2_1000b630 = add i32 %v1_1000b62c, %v1_1000b630.pre
  store i32 %v2_1000b630, i32* %r9.global-to-local, align 4
  %v2_1000b634 = add i32 %v2_1000b630, 132
  %v3_1000b634 = inttoptr i32 %v2_1000b634 to i32*
  store i32 %v0_1000b634.pre, i32* %v3_1000b634, align 4
  %v0_1000b638 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b638 = add i32 %v0_1000b638, -1
  store i32 %v1_1000b638, i32* %r11.global-to-local, align 4
  %v0_1000b63c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b63c = add i32 %v0_1000b63c, -1
  store i32 %v1_1000b63c, i32* %ctr.global-to-local, align 4
  %v2_1000b63c = icmp eq i32 %v1_1000b63c, 0
  br i1 %v2_1000b63c, label %dec_label_pc_1000b640, label %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge

dec_label_pc_1000b640:                            ; preds = %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge, %dec_label_pc_1000b62c.lr.ph
  store i32 268482136, i32* @lr, align 4
  %v4_1000b654 = call i32 @function_1000b480(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b5c4

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b5e4
  %v3_1000b65c = icmp eq i32 %v0_1000b65c, 2
  br i1 %v3_1000b65c, label %dec_label_pc_1000b664, label %dec_label_pc_1000b670

dec_label_pc_1000b664:                            ; preds = %dec_label_pc_1000b65c
  store i32 3, i32* @global_var_1001c1e4.338, align 4
  br label %dec_label_pc_1000b670

dec_label_pc_1000b670:                            ; preds = %dec_label_pc_1000b65c, %dec_label_pc_1000b664
  %v3_1000b670 = phi i32 [ %v0_1000b65c, %dec_label_pc_1000b65c ], [ 3, %dec_label_pc_1000b664 ]
  %v1_1000b678 = icmp ne i32 %v3_1000b670, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b678, i32 268482188)
  store i32 4, i32* @global_var_1001c1e4.338, align 4
  %v1_1000b688 = call i32 @function_1000ac3c(i32 127)
  ret i32 %v1_1000b688

; uselistorder directives
  uselistorder i32 %v1_1000b63c, { 1, 0 }
  uselistorder i32 %v1_1000b638, { 1, 0 }
  uselistorder i32 %v1_1000b584, { 1, 0 }
  uselistorder i32 %v1_1000b580, { 1, 0 }
  uselistorder i32 %v2_1000b564, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000ac3c, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 6, 31, 96, 99, 100, 101, 102, 94, 97, 98, 49, 104, 103, 8, 105, 106, 107, 69, 70, 1, 7, 32, 33, 50, 51, 52, 53, 2, 55, 56, 57, 58, 59, 9, 60, 34, 61, 10, 54, 67, 35, 3, 93, 36, 62, 63, 65, 64, 66, 37, 38, 39, 68, 4, 71, 72, 73, 74, 11, 40, 12, 75, 76, 14, 41, 13, 77, 78, 42, 79, 15, 16, 17, 80, 81, 43, 82, 18, 19, 20, 83, 22, 44, 5, 21, 84, 24, 85, 45, 23, 86, 87, 88, 25, 46, 26, 89, 90, 27, 47, 28, 91, 92, 29, 48, 30, 95 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b480, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 77, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 83, 84, 85, 12, 78, 13, 87, 14, 15, 16, 17, 18, 88, 19, 81, 89, 82, 90, 86, 20, 21, 22, 23, 24, 25, 91, 26, 27, 28, 29, 92, 30, 31, 32, 33, 34, 35, 36, 37, 79, 38, 39, 40, 41, 42, 43, 44, 45, 80, 46, 47, 48, 49, 50, 51, 52, 53, 54, 93, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 (i32, i32, i32)* @function_10009624, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 209, 40, 0, 1, 58, 59, 210, 60, 211, 61, 212, 29, 2, 3, 4, 41, 109, 122, 213, 110, 30, 62, 42, 63, 32, 31, 33, 64, 65, 111, 44, 43, 112, 113, 66, 114, 5, 6, 115, 116, 38, 117, 45, 118, 67, 121, 8, 7, 69, 68, 70, 34, 201, 74, 73, 72, 71, 46, 9, 10, 119, 120, 75, 47, 76, 77, 79, 78, 80, 49, 48, 81, 82, 83, 84, 85, 86, 35, 39, 123, 186, 11, 36, 187, 12, 124, 125, 126, 127, 128, 129, 130, 13, 14, 15, 16, 17, 18, 87, 131, 50, 132, 133, 134, 135, 136, 19, 20, 21, 22, 23, 24, 88, 137, 51, 138, 139, 140, 141, 142, 89, 144, 143, 25, 26, 90, 145, 52, 146, 147, 148, 149, 150, 91, 152, 151, 27, 28, 92, 153, 53, 154, 155, 156, 157, 158, 159, 160, 93, 161, 162, 54, 163, 164, 165, 166, 167, 95, 168, 94, 169, 170, 171, 172, 174, 175, 176, 173, 96, 177, 55, 178, 179, 180, 97, 98, 182, 183, 184, 181, 99, 185, 56, 188, 189, 190, 191, 192, 193, 194, 100, 195, 57, 101, 102, 196, 197, 103, 104, 198, 199, 200, 105, 106, 202, 203, 107, 108, 204, 205, 206, 207, 37, 208 }
  uselistorder i32* @global_var_1001c1e4.338, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 38, 39, 0, 40, 2, 1, 3, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 4, 31, 5, 32, 33, 34, 35, 36 }
  uselistorder i32 (i32, i32, i32)* @function_10009178, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009cf0, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 76, 77, 78, 73, 74, 79, 35, 1, 36, 8, 37, 86, 85, 4, 5, 80, 82, 83, 72, 81, 9, 6, 75, 10, 11, 12, 7, 38, 39, 84, 13, 14, 15, 40, 19, 20, 21, 16, 17, 18, 27, 28, 29, 3, 67, 68, 69, 70, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 0, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 20, 3, 36, 37, 21, 4, 38, 22, 39, 23, 40, 41, 42, 5, 43, 44, 45, 6, 46, 47, 48, 49, 50, 24, 7, 51, 52, 53, 54, 55, 25, 8, 56, 57, 58, 9, 10, 11, 59, 60 }
  uselistorder i32 4, { 129, 0, 1, 367, 368, 369, 370, 371, 69, 70, 372, 373, 130, 374, 375, 2, 199, 200, 151, 152, 201, 202, 204, 376, 383, 3, 4, 5, 6, 7, 346, 348, 347, 344, 345, 315, 316, 317, 318, 349, 350, 351, 352, 353, 354, 355, 356, 357, 8, 153, 9, 78, 154, 155, 377, 378, 379, 131, 380, 381, 382, 10, 203, 132, 11, 205, 206, 207, 208, 209, 133, 134, 156, 135, 157, 158, 159, 81, 77, 160, 161, 162, 163, 12, 165, 166, 172, 173, 164, 174, 175, 71, 79, 177, 80, 178, 179, 180, 181, 182, 176, 167, 168, 169, 170, 171, 191, 13, 192, 14, 193, 194, 195, 72, 136, 196, 308, 183, 137, 83, 82, 84, 184, 185, 186, 73, 187, 74, 188, 189, 190, 15, 197, 198, 75, 210, 211, 16, 212, 213, 214, 85, 215, 216, 17, 18, 86, 217, 87, 89, 88, 218, 219, 19, 220, 221, 94, 222, 223, 20, 21, 93, 224, 90, 92, 91, 225, 226, 227, 228, 22, 229, 230, 231, 232, 138, 233, 23, 234, 235, 24, 236, 96, 237, 95, 139, 238, 239, 240, 241, 25, 242, 243, 244, 245, 140, 246, 26, 247, 248, 27, 249, 98, 250, 97, 141, 251, 252, 253, 28, 254, 255, 256, 257, 103, 258, 259, 29, 30, 102, 260, 261, 31, 99, 101, 100, 262, 263, 32, 264, 265, 108, 266, 33, 34, 267, 107, 268, 104, 269, 106, 105, 270, 271, 272, 273, 35, 275, 276, 142, 277, 278, 279, 113, 280, 36, 37, 143, 274, 112, 109, 111, 110, 281, 282, 283, 284, 285, 144, 145, 38, 287, 288, 146, 289, 290, 291, 118, 292, 39, 40, 147, 286, 117, 114, 116, 115, 293, 294, 295, 124, 41, 42, 296, 297, 43, 298, 299, 300, 123, 44, 45, 119, 301, 120, 122, 121, 302, 303, 304, 305, 306, 307, 148, 126, 125, 309, 310, 311, 312, 313, 314, 149, 128, 127, 46, 319, 320, 47, 48, 321, 322, 49, 50, 323, 324, 51, 52, 325, 326, 53, 54, 327, 328, 55, 56, 329, 330, 57, 331, 58, 332, 333, 59, 60, 334, 335, 61, 62, 336, 337, 63, 64, 338, 339, 65, 66, 340, 341, 67, 342, 343, 358, 359, 360, 361, 362, 363, 76, 364, 68, 365, 366, 150 }
  uselistorder i32 32, { 18, 19, 48, 37, 38, 26, 27, 14, 15, 35, 36, 28, 0, 1, 2, 16, 39, 17, 40, 3, 4, 5, 6, 21, 29, 22, 30, 20, 33, 7, 8, 9, 23, 34, 10, 11, 12, 13, 24, 25, 31, 32, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 1, 2, 28, 29, 17, 30, 31, 3, 4, 0, 5, 32, 33, 18, 19, 20, 21, 24, 25, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 26, 27 }
  uselistorder i32 ()* @function_1000a89c, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b670, { 1, 0 }
  uselistorder label %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000b578.dec_label_pc_1000b578_crit_edge, { 1, 0 }
}

define i32 @function_1000b694(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b694:
  %v1_1000b694 = add i32 %arg1, 28
  %v2_1000b694 = inttoptr i32 %v1_1000b694 to i32*
  %v3_1000b694 = load i32, i32* %v2_1000b694, align 4
  store i32 %v3_1000b694, i32* @global_var_1001c1e8.341, align 4
  %v1_1000b6a4 = add i32 %arg1, 44
  %v2_1000b6a4 = inttoptr i32 %v1_1000b6a4 to i32*
  %v3_1000b6a4 = load i32, i32* %v2_1000b6a4, align 4
  store i32 %v3_1000b6a4, i32* @global_var_1001c1ec.342, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 45, 16, 17, 5, 6, 18, 15, 44, 7, 9, 10, 11, 12, 8, 13, 14, 3, 4, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 1, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b6b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b6b0:
  store i32 %arg1, i32* @global_var_1001c1f0.335, align 4
  %v0_1000b6d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b6d8)
  %v1_1000b6e0 = call i32 @function_1000b75c(i32 12)
  ret i32 %v1_1000b6e0

; uselistorder directives
  uselistorder i32 12, { 17, 45, 46, 25, 26, 47, 48, 49, 50, 104, 105, 106, 107, 6, 102, 108, 0, 1, 8, 103, 5, 18, 19, 9, 27, 51, 52, 20, 53, 54, 55, 21, 22, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 10, 40, 23, 24, 41, 11, 42, 44, 43, 35, 7, 98, 56, 57, 58, 59, 60, 61, 12, 62, 63, 64, 65, 66, 67, 68, 13, 69, 70, 71, 72, 73, 74, 75, 76, 77, 14, 78, 79, 80, 81, 82, 83, 84, 85, 86, 15, 87, 16, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c1f0.335, { 1, 0, 2 }
}

define i32 @function_1000b6e4() local_unnamed_addr {
dec_label_pc_1000b6e4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b6fc = call i32 @__asm_mfcr()
  %v1_1000b700 = and i32 %v0_1000b6fc, 268435456
  %v3_1000b700 = icmp eq i32 %v1_1000b700, 0
  store i32 %v0_1000b6fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b700, label %dec_label_pc_1000b718, label %dec_label_pc_1000b70c

dec_label_pc_1000b70c:                            ; preds = %dec_label_pc_1000b6e4
  %v0_1000b70c = call i32 @function_1000953c()
  %v0_1000b710 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b710 = inttoptr i32 %v0_1000b70c to i32*
  store i32 %v0_1000b710, i32* %v2_1000b710, align 4
  br label %dec_label_pc_1000b718

dec_label_pc_1000b718:                            ; preds = %dec_label_pc_1000b6e4, %dec_label_pc_1000b70c
  %v0_1000b728 = phi i32 [ %v0_1000b6fc, %dec_label_pc_1000b6e4 ], [ -1, %dec_label_pc_1000b70c ]
  ret i32 %v0_1000b728

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 36, 51, 27, 30, 35, 37, 28, 52, 41, 39, 42, 40, 38, 53, 54, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 48, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 47, 40, 32, 3, 46, 42, 36, 30, 45, 2, 14, 16, 13, 15, 21, 1, 0, 44, 43, 41, 35, 34, 33, 31, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000b718, { 1, 0 }
}

define i32 @function_1000b72c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b72c:
  %v0_1000b72c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268482372, i32* @lr, align 4
  %v0_1000b740 = call i32 @function_10008eb0()
  %v0_1000b748 = load i32, i32* @r29, align 4
  store i32 %v0_1000b72c, i32* @lr, align 4
  %v2_1000b758 = call i32 @function_10008f40(i32 %v0_1000b740, i32 %v0_1000b748)
  ret i32 %v2_1000b758

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008f40, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10008eb0, { 0, 3, 2, 1 }
}

define i32 @function_1000b75c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b75c:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000b770 = call i32 @function_1000953c()
  %v0_1000b774 = load i32, i32* @r29, align 4
  %v2_1000b774 = inttoptr i32 %v0_1000b770 to i32*
  store i32 %v0_1000b774, i32* %v2_1000b774, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000953c, { 24, 15, 52, 14, 35, 13, 12, 11, 10, 34, 33, 32, 9, 8, 0, 7, 6, 38, 37, 21, 22, 51, 50, 49, 48, 31, 30, 29, 47, 36, 27, 5, 4, 46, 41, 28, 26, 45, 3, 17, 19, 16, 18, 23, 2, 1, 44, 43, 42, 25, 40, 39, 20 }
  uselistorder i32* @r29, { 304, 305, 325, 326, 327, 14, 15, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 328, 329, 330, 331, 332, 0, 71, 306, 307, 308, 309, 302, 303, 310, 1, 311, 312, 313, 314, 315, 316, 16, 17, 18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 40, 41, 42, 43, 44, 45, 2, 60, 13, 61, 62, 63, 64, 3, 65, 66, 67, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 72, 73, 74, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 4, 128, 5, 129, 6, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 7, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 8, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 201, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 9, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 10, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 11, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 318, 317, 319, 320, 321, 12, 322, 323, 324 }
}

define i32 @function_1000b790(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b790:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c000.323 to i32), i32* %r31.global-to-local, align 4
  %v3_1000b7ac = load i32, i32* @global_var_1001c000.323, align 4
  %v3_1000b7b0 = icmp eq i32 %v3_1000b7ac, -1
  br i1 %v3_1000b7b0, label %dec_label_pc_1000b7cc, label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b8:                            ; preds = %dec_label_pc_1000b790, %dec_label_pc_1000b7b8
  %v0_1000b7b8 = phi i32 [ %v3_1000b7c0, %dec_label_pc_1000b7b8 ], [ %v3_1000b7ac, %dec_label_pc_1000b790 ]
  call void @__pseudo_call(i32 %v0_1000b7b8)
  %v0_1000b7c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b7c0 = add i32 %v0_1000b7c0, -4
  %v2_1000b7c0 = inttoptr i32 %v1_1000b7c0 to i32*
  %v3_1000b7c0 = load i32, i32* %v2_1000b7c0, align 4
  store i32 %v1_1000b7c0, i32* %r31.global-to-local, align 4
  %v3_1000b7c4 = icmp eq i32 %v3_1000b7c0, -1
  br i1 %v3_1000b7c4, label %dec_label_pc_1000b7cc, label %dec_label_pc_1000b7b8

dec_label_pc_1000b7cc:                            ; preds = %dec_label_pc_1000b7b8, %dec_label_pc_1000b790
  %v0_1000b7dc = load i32, i32* @r3, align 4
  ret i32 %v0_1000b7dc

; uselistorder directives
  uselistorder i32 %v3_1000b7c0, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 137, 138, 0, 37, 91, 267, 11, 12, 13, 268, 92, 269, 9, 10, 93, 94, 14, 95, 38, 39, 260, 78, 40, 203, 41, 42, 43, 44, 45, 204, 205, 206, 207, 208, 213, 46, 280, 278, 47, 270, 271, 79, 96, 272, 17, 18, 97, 277, 15, 16, 188, 3, 80, 261, 262, 33, 139, 276, 273, 48, 140, 98, 141, 19, 20, 142, 143, 144, 36, 49, 145, 146, 76, 99, 100, 101, 102, 209, 210, 21, 22, 23, 103, 211, 212, 104, 81, 77, 214, 215, 50, 51, 52, 53, 274, 275, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 279, 67, 147, 105, 24, 216, 217, 106, 1, 107, 108, 148, 68, 69, 109, 2, 110, 25, 111, 70, 112, 26, 218, 82, 149, 113, 83, 150, 151, 152, 114, 153, 154, 71, 157, 115, 116, 27, 117, 158, 118, 72, 159, 160, 161, 119, 120, 155, 156, 177, 75, 4, 178, 179, 121, 28, 180, 181, 182, 183, 184, 122, 84, 162, 86, 163, 164, 85, 165, 166, 167, 168, 169, 87, 170, 171, 73, 172, 173, 123, 29, 124, 30, 174, 175, 176, 185, 74, 186, 187, 125, 126, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 34, 35, 219, 220, 221, 222, 223, 127, 128, 224, 225, 226, 227, 228, 229, 230, 232, 231, 31, 233, 234, 236, 235, 32, 237, 238, 129, 239, 240, 130, 241, 242, 243, 244, 245, 5, 246, 6, 247, 248, 7, 249, 8, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 131, 132, 263, 133, 264, 134, 135, 265, 266, 136, 88, 89, 90 }
  uselistorder i32 1, { 291, 506, 1023, 627, 628, 706, 705, 456, 452, 455, 454, 451, 453, 709, 708, 707, 37, 0, 1009, 1010, 1011, 1012, 551, 38, 1024, 1025, 1026, 1027, 511, 510, 509, 47, 48, 50, 51, 49, 308, 292, 710, 113, 114, 247, 399, 508, 507, 712, 711, 487, 486, 488, 485, 484, 489, 629, 391, 392, 394, 393, 713, 313, 469, 630, 714, 29, 27, 26, 28, 631, 573, 1031, 1028, 718, 717, 716, 715, 450, 448, 445, 449, 447, 446, 632, 1030, 719, 883, 884, 885, 626, 886, 552, 30, 31, 32, 390, 388, 389, 15, 16, 18, 19, 17, 316, 532, 720, 501, 1029, 505, 633, 634, 723, 722, 721, 110, 108, 109, 111, 107, 112, 478, 574, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 828, 737, 736, 474, 475, 739, 738, 21, 20, 22, 938, 521, 25, 24, 23, 1032, 1033, 311, 309, 312, 310, 102, 103, 101, 104, 105, 106, 740, 635, 741, 44, 43, 45, 636, 742, 244, 245, 575, 743, 46, 479, 65, 490, 500, 307, 100, 397, 246, 279, 744, 315, 64, 502, 503, 504, 495, 745, 187, 746, 400, 829, 747, 491, 894, 895, 522, 523, 536, 896, 897, 533, 898, 750, 749, 748, 57, 53, 54, 58, 52, 56, 59, 55, 1, 888, 887, 889, 890, 939, 940, 512, 941, 942, 752, 751, 899, 900, 901, 637, 902, 39, 40, 41, 42, 1006, 1007, 554, 553, 1008, 398, 825, 827, 826, 638, 903, 524, 493, 492, 494, 1013, 396, 395, 904, 905, 525, 526, 537, 906, 11, 12, 13, 14, 943, 437, 438, 439, 440, 441, 442, 443, 444, 964, 60, 63, 62, 61, 944, 470, 473, 472, 471, 33, 34, 538, 576, 830, 831, 639, 832, 833, 640, 834, 835, 837, 841, 842, 838, 839, 840, 843, 641, 844, 642, 643, 845, 644, 645, 846, 852, 853, 561, 699, 760, 759, 758, 757, 756, 755, 754, 753, 98, 90, 89, 88, 86, 91, 95, 92, 85, 83, 82, 84, 97, 87, 96, 99, 94, 93, 847, 848, 646, 849, 850, 647, 851, 289, 280, 283, 285, 287, 286, 288, 282, 281, 290, 284, 836, 648, 476, 477, 861, 862, 867, 863, 870, 864, 513, 514, 865, 866, 534, 515, 516, 527, 517, 518, 868, 869, 535, 519, 520, 528, 649, 871, 872, 873, 874, 650, 875, 876, 877, 878, 879, 880, 881, 882, 577, 768, 767, 766, 765, 764, 700, 763, 762, 761, 80, 74, 66, 72, 73, 76, 75, 69, 67, 68, 70, 77, 78, 81, 79, 71, 1000, 651, 539, 499, 497, 498, 496, 945, 769, 10, 8, 9, 579, 854, 578, 855, 652, 653, 654, 857, 858, 856, 555, 859, 655, 656, 657, 658, 659, 660, 860, 562, 780, 779, 778, 777, 703, 776, 775, 774, 773, 772, 771, 770, 431, 435, 436, 5, 6, 7, 432, 433, 434, 430, 661, 662, 663, 429, 664, 581, 580, 556, 782, 781, 665, 560, 891, 666, 892, 893, 529, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 563, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 783, 480, 481, 482, 483, 907, 680, 908, 909, 910, 911, 912, 3, 557, 913, 914, 2, 915, 916, 917, 918, 798, 797, 701, 702, 796, 243, 242, 983, 986, 984, 558, 985, 314, 987, 988, 989, 681, 682, 919, 920, 921, 922, 683, 540, 564, 923, 582, 583, 799, 211, 204, 214, 207, 213, 205, 206, 203, 190, 201, 202, 198, 199, 200, 196, 197, 193, 194, 192, 191, 195, 210, 212, 189, 188, 208, 209, 924, 925, 926, 684, 541, 565, 927, 584, 585, 586, 800, 372, 369, 373, 383, 363, 365, 375, 374, 386, 376, 370, 384, 385, 380, 381, 382, 378, 371, 379, 377, 387, 368, 367, 366, 364, 928, 929, 930, 931, 685, 530, 542, 566, 932, 587, 588, 589, 590, 591, 804, 803, 802, 801, 325, 320, 329, 335, 318, 322, 332, 323, 333, 330, 334, 336, 337, 338, 326, 321, 319, 339, 331, 324, 328, 327, 317, 933, 934, 935, 936, 686, 531, 543, 567, 937, 592, 593, 594, 595, 596, 597, 598, 599, 600, 808, 807, 806, 805, 348, 343, 352, 358, 341, 345, 355, 346, 356, 353, 357, 359, 360, 361, 349, 344, 342, 362, 354, 347, 351, 350, 340, 946, 947, 948, 949, 950, 951, 954, 952, 953, 955, 956, 957, 687, 958, 544, 568, 959, 960, 961, 559, 962, 963, 811, 810, 809, 141, 130, 139, 131, 146, 155, 145, 153, 148, 149, 150, 151, 140, 152, 154, 135, 136, 156, 157, 158, 143, 142, 159, 144, 147, 138, 137, 134, 133, 132, 965, 966, 967, 688, 545, 569, 968, 813, 812, 405, 403, 414, 422, 423, 416, 424, 418, 409, 427, 419, 415, 425, 426, 417, 420, 411, 421, 408, 407, 406, 402, 404, 428, 413, 412, 410, 969, 970, 971, 973, 974, 972, 546, 570, 975, 601, 602, 603, 814, 175, 162, 173, 182, 161, 160, 177, 185, 180, 178, 171, 163, 179, 183, 184, 167, 168, 176, 174, 181, 164, 186, 172, 170, 169, 165, 166, 976, 977, 978, 980, 981, 979, 547, 571, 982, 604, 605, 606, 819, 818, 817, 816, 815, 233, 219, 231, 240, 218, 215, 235, 236, 217, 238, 228, 220, 232, 237, 241, 216, 224, 225, 234, 239, 221, 230, 229, 227, 226, 222, 223, 990, 991, 689, 992, 993, 994, 690, 691, 572, 995, 607, 608, 820, 264, 259, 252, 261, 270, 248, 249, 273, 263, 265, 266, 268, 257, 260, 271, 272, 258, 262, 267, 269, 254, 253, 274, 256, 255, 250, 251, 996, 611, 997, 998, 609, 999, 692, 693, 610, 821, 304, 295, 293, 305, 303, 306, 297, 300, 301, 302, 296, 299, 298, 294, 1001, 614, 1002, 1003, 612, 1004, 694, 695, 613, 822, 127, 118, 116, 128, 126, 129, 120, 123, 124, 125, 119, 122, 121, 117, 4, 615, 616, 617, 618, 619, 620, 621, 622, 623, 1005, 624, 625, 277, 276, 275, 278, 548, 115, 549, 36, 1014, 696, 1018, 697, 1019, 1015, 1016, 1017, 1020, 1021, 460, 464, 468, 457, 467, 458, 463, 462, 461, 459, 466, 465, 1022, 698, 550, 35, 824, 823, 401, 704 }
  uselistorder label %dec_label_pc_1000b7b8, { 1, 0 }
}

define i32 @function_1000b7e0() local_unnamed_addr {
dec_label_pc_1000b7e0:
  %v0_1000b7f8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b7f8

; uselistorder directives
  uselistorder i32* @r3, { 20, 11, 179, 180, 181, 12, 18, 182, 103, 0, 104, 31, 189, 17, 21, 3, 25, 183, 185, 32, 186, 187, 188, 170, 30, 171, 9, 19, 173, 175, 174, 184, 33, 161, 34, 35, 105, 26, 14, 106, 107, 108, 109, 110, 111, 112, 113, 114, 13, 28, 4, 15, 115, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 68, 6, 69, 70, 84, 85, 29, 86, 87, 88, 16, 162, 163, 164, 10, 165, 166, 7, 77, 78, 79, 80, 81, 82, 83, 89, 23, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 154, 155, 8, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 167, 168, 169, 172, 176, 177, 178, 22, 24, 27 }
}

define i32 @function_1000b7fc() local_unnamed_addr {
entry:
  store i32 268482572, i32* @lr, align 4
  %v0_1000b808 = call i32 @function_100000b8()
  ret i32 %v0_1000b808

; uselistorder directives
  uselistorder i32 0, { 863, 220, 864, 42, 221, 155, 865, 222, 866, 867, 40, 41, 868, 869, 870, 0, 806, 807, 808, 86, 85, 809, 871, 872, 873, 43, 874, 875, 876, 877, 567, 223, 224, 411, 813, 814, 156, 815, 878, 19, 568, 569, 879, 880, 881, 882, 225, 570, 571, 572, 573, 574, 575, 576, 87, 584, 585, 883, 884, 226, 902, 903, 227, 908, 910, 148, 911, 228, 909, 1, 885, 886, 88, 887, 888, 229, 157, 230, 889, 890, 46, 47, 891, 892, 893, 231, 896, 897, 898, 44, 45, 899, 900, 901, 539, 540, 541, 542, 543, 89, 544, 545, 546, 219, 547, 90, 818, 820, 23, 821, 48, 822, 819, 816, 817, 2, 790, 786, 787, 788, 789, 149, 3, 825, 823, 824, 150, 826, 827, 791, 792, 793, 794, 795, 232, 796, 797, 828, 829, 233, 830, 158, 831, 840, 841, 91, 832, 833, 834, 835, 836, 837, 838, 839, 4, 5, 403, 412, 413, 414, 49, 50, 415, 6, 234, 810, 416, 417, 418, 419, 420, 421, 422, 423, 235, 424, 912, 913, 914, 915, 916, 917, 918, 919, 577, 578, 51, 579, 580, 581, 582, 583, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 425, 548, 668, 894, 895, 426, 515, 598, 682, 427, 904, 92, 905, 861, 856, 862, 857, 749, 906, 907, 428, 429, 599, 600, 601, 52, 93, 602, 603, 68, 604, 606, 605, 153, 549, 550, 7, 74, 24, 75, 25, 683, 76, 684, 26, 27, 685, 77, 28, 94, 236, 237, 20, 21, 607, 799, 800, 801, 802, 98, 96, 95, 803, 97, 100, 99, 410, 101, 608, 53, 609, 610, 611, 842, 102, 843, 844, 612, 613, 54, 103, 614, 8, 104, 710, 105, 686, 430, 431, 108, 432, 433, 434, 435, 436, 147, 437, 238, 438, 439, 442, 440, 107, 441, 239, 443, 444, 445, 446, 447, 109, 448, 449, 162, 450, 451, 404, 78, 453, 454, 455, 456, 457, 458, 69, 70, 459, 460, 461, 55, 56, 462, 463, 464, 465, 466, 467, 161, 159, 472, 473, 240, 474, 468, 469, 470, 471, 475, 22, 405, 406, 476, 477, 106, 478, 479, 480, 485, 486, 487, 488, 160, 489, 490, 110, 491, 492, 493, 494, 495, 496, 481, 111, 482, 483, 112, 484, 241, 452, 81, 516, 517, 29, 242, 79, 30, 518, 31, 243, 80, 32, 519, 9, 520, 166, 165, 521, 522, 523, 524, 525, 164, 163, 526, 57, 58, 527, 528, 244, 113, 529, 530, 531, 115, 114, 533, 532, 534, 116, 535, 536, 687, 497, 154, 498, 499, 245, 500, 501, 502, 503, 504, 167, 505, 506, 59, 60, 507, 508, 509, 61, 62, 510, 511, 512, 10, 513, 246, 247, 248, 514, 249, 17, 16, 15, 14, 13, 537, 168, 538, 551, 552, 553, 555, 118, 554, 117, 556, 557, 120, 558, 119, 559, 11, 250, 251, 18, 562, 560, 561, 151, 252, 253, 254, 255, 256, 563, 257, 564, 565, 169, 258, 566, 33, 615, 626, 616, 12, 617, 618, 619, 620, 152, 621, 622, 623, 624, 625, 34, 121, 67, 66, 122, 627, 63, 261, 628, 259, 260, 170, 629, 83, 750, 751, 82, 752, 123, 753, 84, 754, 124, 630, 125, 631, 262, 632, 633, 634, 263, 635, 636, 637, 638, 264, 639, 640, 641, 171, 172, 173, 174, 175, 176, 177, 178, 642, 643, 126, 644, 645, 265, 646, 647, 648, 649, 650, 651, 266, 652, 653, 654, 187, 179, 180, 181, 182, 183, 184, 185, 186, 127, 655, 656, 267, 657, 658, 659, 660, 268, 663, 664, 64, 662, 661, 269, 665, 666, 667, 188, 189, 190, 191, 192, 193, 194, 128, 669, 670, 270, 671, 672, 673, 674, 271, 677, 678, 65, 676, 675, 272, 679, 680, 681, 195, 196, 197, 688, 689, 273, 690, 691, 130, 129, 692, 274, 693, 694, 695, 696, 697, 698, 699, 131, 700, 701, 702, 198, 703, 704, 275, 705, 71, 72, 706, 132, 707, 708, 709, 276, 199, 200, 201, 202, 133, 711, 277, 712, 713, 714, 715, 278, 716, 717, 718, 204, 203, 719, 279, 720, 721, 134, 722, 280, 723, 724, 725, 726, 727, 728, 729, 730, 731, 281, 732, 733, 734, 205, 206, 207, 208, 735, 135, 736, 282, 737, 738, 739, 740, 741, 742, 743, 744, 745, 283, 746, 747, 748, 209, 210, 211, 212, 755, 756, 757, 758, 136, 759, 284, 760, 761, 762, 763, 764, 285, 765, 766, 767, 213, 214, 215, 216, 140, 139, 768, 769, 286, 35, 138, 137, 770, 771, 772, 287, 36, 773, 774, 775, 776, 141, 217, 145, 144, 777, 778, 37, 143, 142, 779, 780, 781, 38, 782, 783, 784, 785, 146, 218, 798, 804, 805, 811, 812, 845, 73, 846, 847, 288, 848, 849, 850, 851, 852, 853, 854, 855, 858, 39, 859, 860, 920, 921, 922, 407, 408, 409, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942 }
  uselistorder i32* @lr, { 8, 727, 728, 729, 698, 730, 731, 732, 733, 734, 735, 736, 737, 695, 10, 738, 347, 348, 9, 699, 700, 349, 350, 351, 352, 353, 354, 747, 748, 752, 753, 754, 755, 756, 757, 758, 760, 749, 751, 739, 740, 741, 742, 743, 744, 745, 746, 701, 703, 702, 664, 665, 666, 667, 668, 669, 704, 705, 706, 707, 711, 708, 709, 710, 11, 12, 644, 609, 610, 645, 491, 13, 263, 14, 15, 646, 647, 696, 16, 17, 18, 19, 20, 21, 22, 759, 23, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 750, 24, 25, 26, 27, 28, 29, 369, 693, 370, 712, 522, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 555, 523, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 125, 126, 127, 128, 129, 130, 131, 132, 100, 101, 102, 103, 104, 105, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 524, 525, 526, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 0, 280, 281, 282, 283, 284, 285, 302, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 4, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 5, 400, 401, 402, 403, 404, 405, 1, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 472, 465, 466, 467, 468, 469, 470, 471, 2, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 503, 496, 497, 498, 499, 500, 501, 502, 3, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 629, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 650, 651, 652, 649, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 697, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
